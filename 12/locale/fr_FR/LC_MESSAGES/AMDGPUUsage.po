# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr_FR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../AMDGPUUsage.rst:3
msgid "User Guide for AMDGPU Backend"
msgstr ""

#: ../../../AMDGPUUsage.rst:27
msgid "Introduction"
msgstr ""

#: ../../../AMDGPUUsage.rst:29
msgid ""
"The AMDGPU backend provides ISA code generation for AMD GPUs, starting with "
"the R600 family up until the current GCN families. It lives in the ``llvm/"
"lib/Target/AMDGPU`` directory."
msgstr ""

#: ../../../AMDGPUUsage.rst:34
msgid "LLVM"
msgstr ""

#: ../../../AMDGPUUsage.rst:39
msgid "Target Triples"
msgstr ""

#: ../../../AMDGPUUsage.rst:41
msgid ""
"Use the Clang option ``-target <Architecture>-<Vendor>-<OS>-<Environment>`` "
"to specify the target triple:"
msgstr ""

#: ../../../AMDGPUUsage.rst:44
msgid "AMDGPU Architectures"
msgstr ""

#: ../../../AMDGPUUsage.rst:48
msgid "Architecture"
msgstr ""

#: ../../../AMDGPUUsage.rst:48 ../../../AMDGPUUsage.rst:58
#: ../../../AMDGPUUsage.rst:68 ../../../AMDGPUUsage.rst:92
#: ../../../AMDGPUUsage.rst:467 ../../../AMDGPUUsage.rst:733
#: ../../../AMDGPUUsage.rst:827 ../../../AMDGPUUsage.rst:993
#: ../../../AMDGPUUsage.rst:1020 ../../../AMDGPUUsage.rst:1055
#: ../../../AMDGPUUsage.rst:1232 ../../../AMDGPUUsage.rst:1397
#: ../../../AMDGPUUsage.rst:1433 ../../../AMDGPUUsage.rst:1654
#: ../../../AMDGPUUsage.rst:2401 ../../../AMDGPUUsage.rst:2509
#: ../../../AMDGPUUsage.rst:2553 ../../../AMDGPUUsage.rst:2590
#: ../../../AMDGPUUsage.rst:2631 ../../../AMDGPUUsage.rst:2826
#: ../../../AMDGPUUsage.rst:2926 ../../../AMDGPUUsage.rst:2971
#: ../../../AMDGPUUsage.rst:3115 ../../../AMDGPUUsage.rst:3322
#: ../../../AMDGPUUsage.rst:3536 ../../../AMDGPUUsage.rst:3665
#: ../../../AMDGPUUsage.rst:3951 ../../../AMDGPUUsage.rst:4108
#: ../../../AMDGPUUsage.rst:4123 ../../../AMDGPUUsage.rst:4137
#: ../../../AMDGPUUsage.rst:4152 ../../../AMDGPUUsage.rst:4193
#: ../../../AMDGPUUsage.rst:4305 ../../../AMDGPUUsage.rst:8001
#: ../../../AMDGPUUsage.rst:8041 ../../../AMDGPUUsage.rst:8083
#: ../../../AMDGPUUsage.rst:8553 ../../../AMDGPUUsage.rst:8572
#: ../../../AMDGPUUsage.rst:8618 ../../../AMDGPUUsage.rst:8677
#: ../../../AMDGPUUsage.rst:8705 ../../../AMDGPUUsage.rst:9265
msgid "Description"
msgstr ""

#: ../../../AMDGPUUsage.rst:50 ../../../AMDGPUUsage.rst:130
#: ../../../AMDGPUUsage.rst:135 ../../../AMDGPUUsage.rst:140
#: ../../../AMDGPUUsage.rst:145 ../../../AMDGPUUsage.rst:152
#: ../../../AMDGPUUsage.rst:157 ../../../AMDGPUUsage.rst:162
#: ../../../AMDGPUUsage.rst:169 ../../../AMDGPUUsage.rst:174
#: ../../../AMDGPUUsage.rst:179 ../../../AMDGPUUsage.rst:184
#: ../../../AMDGPUUsage.rst:189 ../../../AMDGPUUsage.rst:196
#: ../../../AMDGPUUsage.rst:201 ../../../AMDGPUUsage.rst:206
#: ../../../AMDGPUUsage.rst:211 ../../../AMDGPUUsage.rst:1086
msgid "``r600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:50
msgid "AMD GPUs HD2XXX-HD6XXX for graphics and compute shaders."
msgstr ""

#: ../../../AMDGPUUsage.rst:51 ../../../AMDGPUUsage.rst:218
#: ../../../AMDGPUUsage.rst:223 ../../../AMDGPUUsage.rst:228
#: ../../../AMDGPUUsage.rst:235 ../../../AMDGPUUsage.rst:245
#: ../../../AMDGPUUsage.rst:249 ../../../AMDGPUUsage.rst:253
#: ../../../AMDGPUUsage.rst:262 ../../../AMDGPUUsage.rst:266
#: ../../../AMDGPUUsage.rst:275 ../../../AMDGPUUsage.rst:293
#: ../../../AMDGPUUsage.rst:296 ../../../AMDGPUUsage.rst:302
#: ../../../AMDGPUUsage.rst:305 ../../../AMDGPUUsage.rst:308
#: ../../../AMDGPUUsage.rst:313 ../../../AMDGPUUsage.rst:322
#: ../../../AMDGPUUsage.rst:329 ../../../AMDGPUUsage.rst:332
#: ../../../AMDGPUUsage.rst:339 ../../../AMDGPUUsage.rst:343
#: ../../../AMDGPUUsage.rst:350 ../../../AMDGPUUsage.rst:357
#: ../../../AMDGPUUsage.rst:373 ../../../AMDGPUUsage.rst:377
#: ../../../AMDGPUUsage.rst:385 ../../../AMDGPUUsage.rst:390
#: ../../../AMDGPUUsage.rst:397 ../../../AMDGPUUsage.rst:404
#: ../../../AMDGPUUsage.rst:411
msgid "``amdgcn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:51
msgid "AMD GPUs GCN GFX6 onwards for graphics and compute shaders."
msgstr ""

#: ../../../AMDGPUUsage.rst:54
msgid "AMDGPU Vendors"
msgstr ""

#: ../../../AMDGPUUsage.rst:58
msgid "Vendor"
msgstr ""

#: ../../../AMDGPUUsage.rst:60
msgid "``amd``"
msgstr ""

#: ../../../AMDGPUUsage.rst:60
msgid "Can be used for all AMD GPU usage."
msgstr ""

#: ../../../AMDGPUUsage.rst:61 ../../../AMDGPUUsage.rst:84
msgid "``mesa3d``"
msgstr ""

#: ../../../AMDGPUUsage.rst:61
msgid "Can be used if the OS is ``mesa3d``."
msgstr ""

#: ../../../AMDGPUUsage.rst:64
msgid "AMDGPU Operating Systems"
msgstr ""

#: ../../../AMDGPUUsage.rst:68
msgid "OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:70 ../../../AMDGPUUsage.rst:94
msgid "*<empty>*"
msgstr ""

#: ../../../AMDGPUUsage.rst:70
msgid "Defaults to the *unknown* OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:71
msgid "``amdhsa``"
msgstr ""

#: ../../../AMDGPUUsage.rst:71
msgid "Compute kernels executed on HSA [HSA]_ compatible runtimes such as:"
msgstr ""

#: ../../../AMDGPUUsage.rst:74
msgid ""
"AMD's ROCmâ„¢ runtime [AMD-ROCm]_ using the *rocm-amdhsa* loader on Linux. See "
"*AMD ROCm Platform Release Notes* [AMD-ROCm-Release-Notes]_ for supported "
"hardware and software."
msgstr ""

#: ../../../AMDGPUUsage.rst:78
msgid "AMD's PAL runtime using the *pal-amdhsa* loader on Windows."
msgstr ""

#: ../../../AMDGPUUsage.rst:81
msgid "``amdpal``"
msgstr ""

#: ../../../AMDGPUUsage.rst:81
msgid ""
"Graphic shaders and compute kernels executed on AMD's PAL runtime using the "
"*pal-amdpal* loader on Windows and Linux Pro."
msgstr ""

#: ../../../AMDGPUUsage.rst:84
msgid ""
"Graphic shaders and compute kernels executed on AMD's Mesa 3D runtime using "
"the *mesa-mesa3d* loader on Linux."
msgstr ""

#: ../../../AMDGPUUsage.rst:88
msgid "AMDGPU Environments"
msgstr ""

#: ../../../AMDGPUUsage.rst:92
msgid "Environment"
msgstr ""

#: ../../../AMDGPUUsage.rst:94
msgid "Default."
msgstr ""

#: ../../../AMDGPUUsage.rst:100
msgid "Processors"
msgstr ""

#: ../../../AMDGPUUsage.rst:102
msgid ""
"Use the Clang options ``-mcpu=<target-id>`` or ``--offload-arch=<target-"
"id>`` to specify the AMDGPU processor together with optional target "
"features. See :ref:`amdgpu-target-id` and :ref:`amdgpu-target-features` for "
"AMD GPU target specific information."
msgstr ""

#: ../../../AMDGPUUsage.rst:107
msgid ""
"Every processor supports every OS ABI (see :ref:`amdgpu-os`) with the "
"following exceptions:"
msgstr ""

#: ../../../AMDGPUUsage.rst:109
msgid ""
"``amdhsa`` is not supported in ``r600`` architecture (see :ref:`amdgpu-"
"architecture-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:112
msgid "AMDGPU Processors"
msgstr ""

#: ../../../AMDGPUUsage.rst:116
msgid "Processor"
msgstr ""

#: ../../../AMDGPUUsage.rst:116
msgid "Alternative Processor"
msgstr ""

#: ../../../AMDGPUUsage.rst:116
msgid "Target Triple Architecture"
msgstr ""

#: ../../../AMDGPUUsage.rst:116
msgid "dGPU/ APU"
msgstr ""

#: ../../../AMDGPUUsage.rst:116
msgid "Target Features Supported"
msgstr ""

#: ../../../AMDGPUUsage.rst:116
msgid "Target Properties"
msgstr ""

#: ../../../AMDGPUUsage.rst:116
msgid ""
"OS Support *(see* `amdgpu-os`_ *and corresponding runtime release notes for "
"current information and level of support)*"
msgstr ""

#: ../../../AMDGPUUsage.rst:116
msgid "Example Products"
msgstr ""

#: ../../../AMDGPUUsage.rst:128
msgid "**Radeon HD 2000/3000 Series (R600)** [AMD-RADEON-HD-2000-3000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:130 ../../../AMDGPUUsage.rst:135
#: ../../../AMDGPUUsage.rst:140 ../../../AMDGPUUsage.rst:145
#: ../../../AMDGPUUsage.rst:152 ../../../AMDGPUUsage.rst:157
#: ../../../AMDGPUUsage.rst:162 ../../../AMDGPUUsage.rst:169
#: ../../../AMDGPUUsage.rst:174 ../../../AMDGPUUsage.rst:179
#: ../../../AMDGPUUsage.rst:184 ../../../AMDGPUUsage.rst:189
#: ../../../AMDGPUUsage.rst:196 ../../../AMDGPUUsage.rst:201
#: ../../../AMDGPUUsage.rst:206 ../../../AMDGPUUsage.rst:211
#: ../../../AMDGPUUsage.rst:218 ../../../AMDGPUUsage.rst:223
#: ../../../AMDGPUUsage.rst:228 ../../../AMDGPUUsage.rst:245
#: ../../../AMDGPUUsage.rst:249 ../../../AMDGPUUsage.rst:262
#: ../../../AMDGPUUsage.rst:293 ../../../AMDGPUUsage.rst:296
#: ../../../AMDGPUUsage.rst:302 ../../../AMDGPUUsage.rst:305
#: ../../../AMDGPUUsage.rst:308 ../../../AMDGPUUsage.rst:322
#: ../../../AMDGPUUsage.rst:332 ../../../AMDGPUUsage.rst:339
#: ../../../AMDGPUUsage.rst:343 ../../../AMDGPUUsage.rst:373
#: ../../../AMDGPUUsage.rst:377 ../../../AMDGPUUsage.rst:385
#: ../../../AMDGPUUsage.rst:390 ../../../AMDGPUUsage.rst:397
#: ../../../AMDGPUUsage.rst:404
msgid "dGPU"
msgstr ""

#: ../../../AMDGPUUsage.rst:130 ../../../AMDGPUUsage.rst:135
#: ../../../AMDGPUUsage.rst:140 ../../../AMDGPUUsage.rst:145
#: ../../../AMDGPUUsage.rst:152 ../../../AMDGPUUsage.rst:157
#: ../../../AMDGPUUsage.rst:162 ../../../AMDGPUUsage.rst:169
#: ../../../AMDGPUUsage.rst:174 ../../../AMDGPUUsage.rst:179
#: ../../../AMDGPUUsage.rst:184 ../../../AMDGPUUsage.rst:189
#: ../../../AMDGPUUsage.rst:196 ../../../AMDGPUUsage.rst:201
#: ../../../AMDGPUUsage.rst:206 ../../../AMDGPUUsage.rst:211
#: ../../../AMDGPUUsage.rst:218 ../../../AMDGPUUsage.rst:223
#: ../../../AMDGPUUsage.rst:228
msgid "Does not support generic address space"
msgstr ""

#: ../../../AMDGPUUsage.rst:135 ../../../AMDGPUUsage.rst:1087
msgid "``r630``"
msgstr ""

#: ../../../AMDGPUUsage.rst:140 ../../../AMDGPUUsage.rst:1088
msgid "``rs880``"
msgstr ""

#: ../../../AMDGPUUsage.rst:145 ../../../AMDGPUUsage.rst:1089
msgid "``rv670``"
msgstr ""

#: ../../../AMDGPUUsage.rst:150
msgid "**Radeon HD 4000 Series (R700)** [AMD-RADEON-HD-4000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:152 ../../../AMDGPUUsage.rst:1090
msgid "``rv710``"
msgstr ""

#: ../../../AMDGPUUsage.rst:157 ../../../AMDGPUUsage.rst:1091
msgid "``rv730``"
msgstr ""

#: ../../../AMDGPUUsage.rst:162 ../../../AMDGPUUsage.rst:1092
msgid "``rv770``"
msgstr ""

#: ../../../AMDGPUUsage.rst:167
msgid "**Radeon HD 5000 Series (Evergreen)** [AMD-RADEON-HD-5000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:169 ../../../AMDGPUUsage.rst:1093
msgid "``cedar``"
msgstr ""

#: ../../../AMDGPUUsage.rst:174 ../../../AMDGPUUsage.rst:1094
msgid "``cypress``"
msgstr ""

#: ../../../AMDGPUUsage.rst:179 ../../../AMDGPUUsage.rst:1095
msgid "``juniper``"
msgstr ""

#: ../../../AMDGPUUsage.rst:184 ../../../AMDGPUUsage.rst:1096
msgid "``redwood``"
msgstr ""

#: ../../../AMDGPUUsage.rst:189 ../../../AMDGPUUsage.rst:1097
msgid "``sumo``"
msgstr ""

#: ../../../AMDGPUUsage.rst:194
msgid "**Radeon HD 6000 Series (Northern Islands)** [AMD-RADEON-HD-6000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:196 ../../../AMDGPUUsage.rst:1098
msgid "``barts``"
msgstr ""

#: ../../../AMDGPUUsage.rst:201 ../../../AMDGPUUsage.rst:1099
msgid "``caicos``"
msgstr ""

#: ../../../AMDGPUUsage.rst:206 ../../../AMDGPUUsage.rst:1100
msgid "``cayman``"
msgstr ""

#: ../../../AMDGPUUsage.rst:211 ../../../AMDGPUUsage.rst:1101
msgid "``turks``"
msgstr ""

#: ../../../AMDGPUUsage.rst:216
msgid "**GCN GFX6 (Southern Islands (SI))** [AMD-GCN-GFX6]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:218 ../../../AMDGPUUsage.rst:1104
#: ../../../AMDGPUUsage.rst:1354
msgid "``gfx600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:218
msgid "``tahiti``"
msgstr ""

#: ../../../AMDGPUUsage.rst:218 ../../../AMDGPUUsage.rst:223
#: ../../../AMDGPUUsage.rst:228 ../../../AMDGPUUsage.rst:237
#: ../../../AMDGPUUsage.rst:247 ../../../AMDGPUUsage.rst:251
#: ../../../AMDGPUUsage.rst:254 ../../../AMDGPUUsage.rst:263
#: ../../../AMDGPUUsage.rst:267 ../../../AMDGPUUsage.rst:277
#: ../../../AMDGPUUsage.rst:295 ../../../AMDGPUUsage.rst:298
#: ../../../AMDGPUUsage.rst:304 ../../../AMDGPUUsage.rst:307
#: ../../../AMDGPUUsage.rst:310 ../../../AMDGPUUsage.rst:315
#: ../../../AMDGPUUsage.rst:324 ../../../AMDGPUUsage.rst:331
#: ../../../AMDGPUUsage.rst:334 ../../../AMDGPUUsage.rst:341
#: ../../../AMDGPUUsage.rst:350 ../../../AMDGPUUsage.rst:357
#: ../../../AMDGPUUsage.rst:375 ../../../AMDGPUUsage.rst:379
#: ../../../AMDGPUUsage.rst:387 ../../../AMDGPUUsage.rst:392
#: ../../../AMDGPUUsage.rst:399 ../../../AMDGPUUsage.rst:406
#: ../../../AMDGPUUsage.rst:411
msgid "*pal-amdpal*"
msgstr ""

#: ../../../AMDGPUUsage.rst:223 ../../../AMDGPUUsage.rst:1105
#: ../../../AMDGPUUsage.rst:1355
msgid "``gfx601``"
msgstr ""

#: ../../../AMDGPUUsage.rst:223
msgid "``pitcairn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:224
msgid "``verde``"
msgstr ""

#: ../../../AMDGPUUsage.rst:228 ../../../AMDGPUUsage.rst:1130
#: ../../../AMDGPUUsage.rst:1356
msgid "``gfx602``"
msgstr ""

#: ../../../AMDGPUUsage.rst:228
msgid "``hainan``"
msgstr ""

#: ../../../AMDGPUUsage.rst:229
msgid "``oland``"
msgstr ""

#: ../../../AMDGPUUsage.rst:233
msgid "**GCN GFX7 (Sea Islands (CI))** [AMD-GCN-GFX7]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:235 ../../../AMDGPUUsage.rst:1106
#: ../../../AMDGPUUsage.rst:1357
msgid "``gfx700``"
msgstr ""

#: ../../../AMDGPUUsage.rst:235
msgid "``kaveri``"
msgstr ""

#: ../../../AMDGPUUsage.rst:235 ../../../AMDGPUUsage.rst:253
#: ../../../AMDGPUUsage.rst:266 ../../../AMDGPUUsage.rst:275
#: ../../../AMDGPUUsage.rst:313 ../../../AMDGPUUsage.rst:329
#: ../../../AMDGPUUsage.rst:350 ../../../AMDGPUUsage.rst:357
#: ../../../AMDGPUUsage.rst:411
msgid "APU"
msgstr ""

#: ../../../AMDGPUUsage.rst:235 ../../../AMDGPUUsage.rst:245
#: ../../../AMDGPUUsage.rst:249 ../../../AMDGPUUsage.rst:253
#: ../../../AMDGPUUsage.rst:262 ../../../AMDGPUUsage.rst:266
#: ../../../AMDGPUUsage.rst:275 ../../../AMDGPUUsage.rst:293
#: ../../../AMDGPUUsage.rst:302 ../../../AMDGPUUsage.rst:305
#: ../../../AMDGPUUsage.rst:308 ../../../AMDGPUUsage.rst:313
msgid "Offset flat scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:235 ../../../AMDGPUUsage.rst:245
#: ../../../AMDGPUUsage.rst:249 ../../../AMDGPUUsage.rst:275
#: ../../../AMDGPUUsage.rst:293 ../../../AMDGPUUsage.rst:296
#: ../../../AMDGPUUsage.rst:302 ../../../AMDGPUUsage.rst:305
#: ../../../AMDGPUUsage.rst:308 ../../../AMDGPUUsage.rst:313
#: ../../../AMDGPUUsage.rst:322 ../../../AMDGPUUsage.rst:329
#: ../../../AMDGPUUsage.rst:332 ../../../AMDGPUUsage.rst:339
#: ../../../AMDGPUUsage.rst:343 ../../../AMDGPUUsage.rst:373
#: ../../../AMDGPUUsage.rst:377 ../../../AMDGPUUsage.rst:385
#: ../../../AMDGPUUsage.rst:390 ../../../AMDGPUUsage.rst:397
#: ../../../AMDGPUUsage.rst:404
msgid "*rocm-amdhsa*"
msgstr ""

#: ../../../AMDGPUUsage.rst:236 ../../../AMDGPUUsage.rst:246
#: ../../../AMDGPUUsage.rst:250 ../../../AMDGPUUsage.rst:253
#: ../../../AMDGPUUsage.rst:262 ../../../AMDGPUUsage.rst:266
#: ../../../AMDGPUUsage.rst:276 ../../../AMDGPUUsage.rst:294
#: ../../../AMDGPUUsage.rst:297 ../../../AMDGPUUsage.rst:303
#: ../../../AMDGPUUsage.rst:306 ../../../AMDGPUUsage.rst:309
#: ../../../AMDGPUUsage.rst:314 ../../../AMDGPUUsage.rst:323
#: ../../../AMDGPUUsage.rst:330 ../../../AMDGPUUsage.rst:333
#: ../../../AMDGPUUsage.rst:340 ../../../AMDGPUUsage.rst:374
#: ../../../AMDGPUUsage.rst:378 ../../../AMDGPUUsage.rst:386
#: ../../../AMDGPUUsage.rst:391 ../../../AMDGPUUsage.rst:398
#: ../../../AMDGPUUsage.rst:405
msgid "*pal-amdhsa*"
msgstr ""

#: ../../../AMDGPUUsage.rst:235
msgid "A6-7000"
msgstr ""

#: ../../../AMDGPUUsage.rst:236
msgid "A6 Pro-7050B"
msgstr ""

#: ../../../AMDGPUUsage.rst:237
msgid "A8-7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:238
msgid "A8 Pro-7150B"
msgstr ""

#: ../../../AMDGPUUsage.rst:239
msgid "A10-7300"
msgstr ""

#: ../../../AMDGPUUsage.rst:240
msgid "A10 Pro-7350B"
msgstr ""

#: ../../../AMDGPUUsage.rst:241
msgid "FX-7500"
msgstr ""

#: ../../../AMDGPUUsage.rst:242
msgid "A8-7200P"
msgstr ""

#: ../../../AMDGPUUsage.rst:243
msgid "A10-7400P"
msgstr ""

#: ../../../AMDGPUUsage.rst:244
msgid "FX-7600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:245 ../../../AMDGPUUsage.rst:1107
#: ../../../AMDGPUUsage.rst:1358
msgid "``gfx701``"
msgstr ""

#: ../../../AMDGPUUsage.rst:245
msgid "``hawaii``"
msgstr ""

#: ../../../AMDGPUUsage.rst:245
msgid "FirePro W8100"
msgstr ""

#: ../../../AMDGPUUsage.rst:246
msgid "FirePro W9100"
msgstr ""

#: ../../../AMDGPUUsage.rst:247
msgid "FirePro S9150"
msgstr ""

#: ../../../AMDGPUUsage.rst:248
msgid "FirePro S9170"
msgstr ""

#: ../../../AMDGPUUsage.rst:249 ../../../AMDGPUUsage.rst:1108
#: ../../../AMDGPUUsage.rst:1359
msgid "``gfx702``"
msgstr ""

#: ../../../AMDGPUUsage.rst:249
msgid "Radeon R9 290"
msgstr ""

#: ../../../AMDGPUUsage.rst:250
msgid "Radeon R9 290x"
msgstr ""

#: ../../../AMDGPUUsage.rst:251
msgid "Radeon R390"
msgstr ""

#: ../../../AMDGPUUsage.rst:252
msgid "Radeon R390x"
msgstr ""

#: ../../../AMDGPUUsage.rst:253 ../../../AMDGPUUsage.rst:1109
#: ../../../AMDGPUUsage.rst:1360
msgid "``gfx703``"
msgstr ""

#: ../../../AMDGPUUsage.rst:253
msgid "``kabini``"
msgstr ""

#: ../../../AMDGPUUsage.rst:254
msgid "``mullins``"
msgstr ""

#: ../../../AMDGPUUsage.rst:253
msgid "E1-2100"
msgstr ""

#: ../../../AMDGPUUsage.rst:254
msgid "E1-2200"
msgstr ""

#: ../../../AMDGPUUsage.rst:255
msgid "E1-2500"
msgstr ""

#: ../../../AMDGPUUsage.rst:256
msgid "E2-3000"
msgstr ""

#: ../../../AMDGPUUsage.rst:257
msgid "E2-3800"
msgstr ""

#: ../../../AMDGPUUsage.rst:258
msgid "A4-5000"
msgstr ""

#: ../../../AMDGPUUsage.rst:259
msgid "A4-5100"
msgstr ""

#: ../../../AMDGPUUsage.rst:260
msgid "A6-5200"
msgstr ""

#: ../../../AMDGPUUsage.rst:261
msgid "A4 Pro-3340B"
msgstr ""

#: ../../../AMDGPUUsage.rst:262 ../../../AMDGPUUsage.rst:1110
#: ../../../AMDGPUUsage.rst:1361
msgid "``gfx704``"
msgstr ""

#: ../../../AMDGPUUsage.rst:262
msgid "``bonaire``"
msgstr ""

#: ../../../AMDGPUUsage.rst:262
msgid "Radeon HD 7790"
msgstr ""

#: ../../../AMDGPUUsage.rst:263
msgid "Radeon HD 8770"
msgstr ""

#: ../../../AMDGPUUsage.rst:264
msgid "R7 260"
msgstr ""

#: ../../../AMDGPUUsage.rst:265
msgid "R7 260X"
msgstr ""

#: ../../../AMDGPUUsage.rst:266 ../../../AMDGPUUsage.rst:1131
#: ../../../AMDGPUUsage.rst:1362
msgid "``gfx705``"
msgstr ""

#: ../../../AMDGPUUsage.rst:266 ../../../AMDGPUUsage.rst:313
#: ../../../AMDGPUUsage.rst:332 ../../../AMDGPUUsage.rst:343
#: ../../../AMDGPUUsage.rst:350 ../../../AMDGPUUsage.rst:377
#: ../../../AMDGPUUsage.rst:390 ../../../AMDGPUUsage.rst:397
#: ../../../AMDGPUUsage.rst:404 ../../../AMDGPUUsage.rst:411
msgid "*TBA*"
msgstr ""

#: ../../../AMDGPUUsage.rst:268 ../../../AMDGPUUsage.rst:315
#: ../../../AMDGPUUsage.rst:334 ../../../AMDGPUUsage.rst:345
#: ../../../AMDGPUUsage.rst:352 ../../../AMDGPUUsage.rst:380
#: ../../../AMDGPUUsage.rst:392 ../../../AMDGPUUsage.rst:399
#: ../../../AMDGPUUsage.rst:406 ../../../AMDGPUUsage.rst:413
#: ../../../AMDGPUUsage.rst:814 ../../../AMDGPUUsage.rst:1458
#: ../../../AMDGPUUsage.rst:2279 ../../../AMDGPUUsage.rst:2285
#: ../../../AMDGPUUsage.rst:2367 ../../../AMDGPUUsage.rst:2490
#: ../../../AMDGPUUsage.rst:2753 ../../../AMDGPUUsage.rst:2772
#: ../../../AMDGPUUsage.rst:2813 ../../../AMDGPUUsage.rst:3238
#: ../../../AMDGPUUsage.rst:3257 ../../../AMDGPUUsage.rst:3298
#: ../../../AMDGPUUsage.rst:8150 ../../../AMDGPUUsage.rst:8272
#: ../../../AMDGPUUsage.rst:8316 ../../../AMDGPUUsage.rst:8328
#: ../../../AMDGPUUsage.rst:8341 ../../../AMDGPUUsage.rst:8413
#: ../../../AMDGPUUsage.rst:8425 ../../../AMDGPUUsage.rst:8439
#: ../../../AMDGPUUsage.rst:8495 ../../../AMDGPUUsage.rst:8499
msgid "Todo"
msgstr ""

#: ../../../AMDGPUUsage.rst:270 ../../../AMDGPUUsage.rst:317
#: ../../../AMDGPUUsage.rst:336 ../../../AMDGPUUsage.rst:347
#: ../../../AMDGPUUsage.rst:354 ../../../AMDGPUUsage.rst:382
#: ../../../AMDGPUUsage.rst:394 ../../../AMDGPUUsage.rst:401
#: ../../../AMDGPUUsage.rst:408 ../../../AMDGPUUsage.rst:415
msgid "Add product names."
msgstr ""

#: ../../../AMDGPUUsage.rst:273
msgid "**GCN GFX8 (Volcanic Islands (VI))** [AMD-GCN-GFX8]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:275 ../../../AMDGPUUsage.rst:1112
msgid "``gfx801``"
msgstr ""

#: ../../../AMDGPUUsage.rst:275
msgid "``carrizo``"
msgstr ""

#: ../../../AMDGPUUsage.rst:275 ../../../AMDGPUUsage.rst:313
#: ../../../AMDGPUUsage.rst:322 ../../../AMDGPUUsage.rst:329
#: ../../../AMDGPUUsage.rst:332 ../../../AMDGPUUsage.rst:340
#: ../../../AMDGPUUsage.rst:344 ../../../AMDGPUUsage.rst:350
#: ../../../AMDGPUUsage.rst:357 ../../../AMDGPUUsage.rst:375
#: ../../../AMDGPUUsage.rst:379 ../../../AMDGPUUsage.rst:387
#: ../../../AMDGPUUsage.rst:489
msgid "xnack"
msgstr ""

#: ../../../AMDGPUUsage.rst:275
msgid "A6-8500P"
msgstr ""

#: ../../../AMDGPUUsage.rst:276
msgid "Pro A6-8500B"
msgstr ""

#: ../../../AMDGPUUsage.rst:277
msgid "A8-8600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:278
msgid "Pro A8-8600B"
msgstr ""

#: ../../../AMDGPUUsage.rst:279
msgid "FX-8800P"
msgstr ""

#: ../../../AMDGPUUsage.rst:280
msgid "Pro A12-8800B"
msgstr ""

#: ../../../AMDGPUUsage.rst:281
msgid "A10-8700P"
msgstr ""

#: ../../../AMDGPUUsage.rst:282
msgid "Pro A10-8700B"
msgstr ""

#: ../../../AMDGPUUsage.rst:283
msgid "A10-8780P"
msgstr ""

#: ../../../AMDGPUUsage.rst:284
msgid "A10-9600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:285
msgid "A10-9630P"
msgstr ""

#: ../../../AMDGPUUsage.rst:286
msgid "A12-9700P"
msgstr ""

#: ../../../AMDGPUUsage.rst:287
msgid "A12-9730P"
msgstr ""

#: ../../../AMDGPUUsage.rst:288
msgid "FX-9800P"
msgstr ""

#: ../../../AMDGPUUsage.rst:289
msgid "FX-9830P"
msgstr ""

#: ../../../AMDGPUUsage.rst:290
msgid "E2-9010"
msgstr ""

#: ../../../AMDGPUUsage.rst:291
msgid "A6-9210"
msgstr ""

#: ../../../AMDGPUUsage.rst:292
msgid "A9-9410"
msgstr ""

#: ../../../AMDGPUUsage.rst:293 ../../../AMDGPUUsage.rst:1113
#: ../../../AMDGPUUsage.rst:1363 ../../../AMDGPUUsage.rst:1365
msgid "``gfx802``"
msgstr ""

#: ../../../AMDGPUUsage.rst:293
msgid "``iceland``"
msgstr ""

#: ../../../AMDGPUUsage.rst:294
msgid "``tonga``"
msgstr ""

#: ../../../AMDGPUUsage.rst:293
msgid "Radeon R9 285"
msgstr ""

#: ../../../AMDGPUUsage.rst:294
msgid "Radeon R9 380"
msgstr ""

#: ../../../AMDGPUUsage.rst:295
msgid "Radeon R9 385"
msgstr ""

#: ../../../AMDGPUUsage.rst:296 ../../../AMDGPUUsage.rst:1114
#: ../../../AMDGPUUsage.rst:1366 ../../../AMDGPUUsage.rst:1367
msgid "``gfx803``"
msgstr ""

#: ../../../AMDGPUUsage.rst:296
msgid "``fiji``"
msgstr ""

#: ../../../AMDGPUUsage.rst:296
msgid "Radeon R9 Nano"
msgstr ""

#: ../../../AMDGPUUsage.rst:297
msgid "Radeon R9 Fury"
msgstr ""

#: ../../../AMDGPUUsage.rst:298
msgid "Radeon R9 FuryX"
msgstr ""

#: ../../../AMDGPUUsage.rst:299
msgid "Radeon Pro Duo"
msgstr ""

#: ../../../AMDGPUUsage.rst:300
msgid "FirePro S9300x2"
msgstr ""

#: ../../../AMDGPUUsage.rst:301
msgid "Radeon Instinct MI8"
msgstr ""

#: ../../../AMDGPUUsage.rst:302 ../../../AMDGPUUsage.rst:305
msgid "\\"
msgstr ""

#: ../../../AMDGPUUsage.rst:302
msgid "``polaris10``"
msgstr ""

#: ../../../AMDGPUUsage.rst:302
msgid "Radeon RX 470"
msgstr ""

#: ../../../AMDGPUUsage.rst:303
msgid "Radeon RX 480"
msgstr ""

#: ../../../AMDGPUUsage.rst:304
msgid "Radeon Instinct MI6"
msgstr ""

#: ../../../AMDGPUUsage.rst:305
msgid "``polaris11``"
msgstr ""

#: ../../../AMDGPUUsage.rst:305
msgid "Radeon RX 460"
msgstr ""

#: ../../../AMDGPUUsage.rst:308 ../../../AMDGPUUsage.rst:1132
#: ../../../AMDGPUUsage.rst:1368
msgid "``gfx805``"
msgstr ""

#: ../../../AMDGPUUsage.rst:308
msgid "``tongapro``"
msgstr ""

#: ../../../AMDGPUUsage.rst:308
msgid "FirePro S7150"
msgstr ""

#: ../../../AMDGPUUsage.rst:309
msgid "FirePro S7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:310
msgid "FirePro W7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:311
msgid "Mobile FirePro M7170"
msgstr ""

#: ../../../AMDGPUUsage.rst:313 ../../../AMDGPUUsage.rst:1115
msgid "``gfx810``"
msgstr ""

#: ../../../AMDGPUUsage.rst:313
msgid "``stoney``"
msgstr ""

#: ../../../AMDGPUUsage.rst:320
msgid "**GCN GFX9 (Vega)** [AMD-GCN-GFX9]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:322 ../../../AMDGPUUsage.rst:1116
msgid "``gfx900``"
msgstr ""

#: ../../../AMDGPUUsage.rst:322 ../../../AMDGPUUsage.rst:329
#: ../../../AMDGPUUsage.rst:339 ../../../AMDGPUUsage.rst:344
#: ../../../AMDGPUUsage.rst:350 ../../../AMDGPUUsage.rst:357
#: ../../../AMDGPUUsage.rst:373 ../../../AMDGPUUsage.rst:378
#: ../../../AMDGPUUsage.rst:385 ../../../AMDGPUUsage.rst:390
#: ../../../AMDGPUUsage.rst:397 ../../../AMDGPUUsage.rst:404
#: ../../../AMDGPUUsage.rst:411
msgid "Absolute flat scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:322
msgid "Radeon Vega Frontier Edition"
msgstr ""

#: ../../../AMDGPUUsage.rst:324
msgid "Radeon RX Vega 56"
msgstr ""

#: ../../../AMDGPUUsage.rst:325
msgid "Radeon RX Vega 64"
msgstr ""

#: ../../../AMDGPUUsage.rst:326
msgid "Radeon RX Vega 64 Liquid"
msgstr ""

#: ../../../AMDGPUUsage.rst:328
msgid "Radeon Instinct MI25"
msgstr ""

#: ../../../AMDGPUUsage.rst:329 ../../../AMDGPUUsage.rst:1117
msgid "``gfx902``"
msgstr ""

#: ../../../AMDGPUUsage.rst:329
msgid "Ryzen 3 2200G"
msgstr ""

#: ../../../AMDGPUUsage.rst:330
msgid "Ryzen 5 2400G"
msgstr ""

#: ../../../AMDGPUUsage.rst:332 ../../../AMDGPUUsage.rst:1118
msgid "``gfx904``"
msgstr ""

#: ../../../AMDGPUUsage.rst:339 ../../../AMDGPUUsage.rst:1119
msgid "``gfx906``"
msgstr ""

#: ../../../AMDGPUUsage.rst:339 ../../../AMDGPUUsage.rst:343
#: ../../../AMDGPUUsage.rst:476
msgid "sramecc"
msgstr ""

#: ../../../AMDGPUUsage.rst:339
msgid "Radeon Instinct MI50"
msgstr ""

#: ../../../AMDGPUUsage.rst:340
msgid "Radeon Instinct MI60"
msgstr ""

#: ../../../AMDGPUUsage.rst:341
msgid "Radeon VII"
msgstr ""

#: ../../../AMDGPUUsage.rst:342
msgid "Radeon Pro VII"
msgstr ""

#: ../../../AMDGPUUsage.rst:343 ../../../AMDGPUUsage.rst:1120
msgid "``gfx908``"
msgstr ""

#: ../../../AMDGPUUsage.rst:350 ../../../AMDGPUUsage.rst:1121
msgid "``gfx909``"
msgstr ""

#: ../../../AMDGPUUsage.rst:357 ../../../AMDGPUUsage.rst:1122
msgid "``gfx90c``"
msgstr ""

#: ../../../AMDGPUUsage.rst:357
msgid "Ryzen 7 4700G"
msgstr ""

#: ../../../AMDGPUUsage.rst:358
msgid "Ryzen 7 4700GE"
msgstr ""

#: ../../../AMDGPUUsage.rst:359
msgid "Ryzen 5 4600G"
msgstr ""

#: ../../../AMDGPUUsage.rst:360
msgid "Ryzen 5 4600GE"
msgstr ""

#: ../../../AMDGPUUsage.rst:361
msgid "Ryzen 3 4300G"
msgstr ""

#: ../../../AMDGPUUsage.rst:362
msgid "Ryzen 3 4300GE"
msgstr ""

#: ../../../AMDGPUUsage.rst:363
msgid "Ryzen Pro 4000G"
msgstr ""

#: ../../../AMDGPUUsage.rst:364
msgid "Ryzen 7 Pro 4700G"
msgstr ""

#: ../../../AMDGPUUsage.rst:365
msgid "Ryzen 7 Pro 4750GE"
msgstr ""

#: ../../../AMDGPUUsage.rst:366
msgid "Ryzen 5 Pro 4650G"
msgstr ""

#: ../../../AMDGPUUsage.rst:367
msgid "Ryzen 5 Pro 4650GE"
msgstr ""

#: ../../../AMDGPUUsage.rst:368
msgid "Ryzen 3 Pro 4350G"
msgstr ""

#: ../../../AMDGPUUsage.rst:369
msgid "Ryzen 3 Pro 4350GE"
msgstr ""

#: ../../../AMDGPUUsage.rst:371
msgid "**GCN GFX10 (RDNA 1)** [AMD-GCN-GFX10-RDNA1]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:373 ../../../AMDGPUUsage.rst:1123
msgid "``gfx1010``"
msgstr ""

#: ../../../AMDGPUUsage.rst:373 ../../../AMDGPUUsage.rst:377
#: ../../../AMDGPUUsage.rst:385 ../../../AMDGPUUsage.rst:390
#: ../../../AMDGPUUsage.rst:397 ../../../AMDGPUUsage.rst:404
#: ../../../AMDGPUUsage.rst:411 ../../../AMDGPUUsage.rst:470
msgid "cumode"
msgstr ""

#: ../../../AMDGPUUsage.rst:374 ../../../AMDGPUUsage.rst:378
#: ../../../AMDGPUUsage.rst:386 ../../../AMDGPUUsage.rst:391
#: ../../../AMDGPUUsage.rst:398 ../../../AMDGPUUsage.rst:405
#: ../../../AMDGPUUsage.rst:412 ../../../AMDGPUUsage.rst:484
msgid "wavefrontsize64"
msgstr ""

#: ../../../AMDGPUUsage.rst:373
msgid "Radeon RX 5700"
msgstr ""

#: ../../../AMDGPUUsage.rst:374
msgid "Radeon RX 5700 XT"
msgstr ""

#: ../../../AMDGPUUsage.rst:375
msgid "Radeon Pro 5600 XT"
msgstr ""

#: ../../../AMDGPUUsage.rst:376
msgid "Radeon Pro 5600M"
msgstr ""

#: ../../../AMDGPUUsage.rst:377 ../../../AMDGPUUsage.rst:1124
msgid "``gfx1011``"
msgstr ""

#: ../../../AMDGPUUsage.rst:385 ../../../AMDGPUUsage.rst:1125
msgid "``gfx1012``"
msgstr ""

#: ../../../AMDGPUUsage.rst:385
msgid "Radeon RX 5500"
msgstr ""

#: ../../../AMDGPUUsage.rst:386
msgid "Radeon RX 5500 XT"
msgstr ""

#: ../../../AMDGPUUsage.rst:388
msgid "**GCN GFX10 (RDNA 2)** [AMD-GCN-GFX10-RDNA2]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:390 ../../../AMDGPUUsage.rst:1126
msgid "``gfx1030``"
msgstr ""

#: ../../../AMDGPUUsage.rst:397 ../../../AMDGPUUsage.rst:1127
msgid "``gfx1031``"
msgstr ""

#: ../../../AMDGPUUsage.rst:404 ../../../AMDGPUUsage.rst:1128
msgid "``gfx1032``"
msgstr ""

#: ../../../AMDGPUUsage.rst:411 ../../../AMDGPUUsage.rst:1129
msgid "``gfx1033``"
msgstr ""

#: ../../../AMDGPUUsage.rst:423
msgid "Target Features"
msgstr ""

#: ../../../AMDGPUUsage.rst:425
msgid ""
"Target features control how code is generated to support certain processor "
"specific features. Not all target features are supported by all processors. "
"The runtime must ensure that the features supported by the device used to "
"execute the code match the features enabled when generating the code. A "
"mismatch of features may result in incorrect execution, or a reduction in "
"performance."
msgstr ""

#: ../../../AMDGPUUsage.rst:432
msgid ""
"The target features supported by each processor is listed in :ref:`amdgpu-"
"processor-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:435
msgid ""
"Target features are controlled by exactly one of the following Clang options:"
msgstr ""

#: ../../../AMDGPUUsage.rst:438
msgid "``-mcpu=<target-id>`` or ``--offload-arch=<target-id>``"
msgstr ""

#: ../../../AMDGPUUsage.rst:440
msgid ""
"The ``-mcpu`` and ``--offload-arch`` can specify the target feature as "
"optional components of the target ID. If omitted, the target feature has the "
"``any`` value. See :ref:`amdgpu-target-id`."
msgstr ""

#: ../../../AMDGPUUsage.rst:444
msgid "``-m[no-]<target-feature>``"
msgstr ""

#: ../../../AMDGPUUsage.rst:446
msgid ""
"Target features not specified by the target ID are specified using a "
"separate option. These target features can have an ``on`` or ``off`` value.  "
"``on`` is specified by omitting the ``no-`` prefix, and ``off`` is specified "
"by including the ``no-`` prefix. The default if not specified is ``off``."
msgstr ""

#: ../../../AMDGPUUsage.rst:452 ../../../AMDGPUUsage.rst:1596
#: ../../../AMDGPUUsage.rst:2409
msgid "For example:"
msgstr ""

#: ../../../AMDGPUUsage.rst:454
msgid "``-mcpu=gfx908:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:455
msgid "Enable the ``xnack`` feature."
msgstr ""

#: ../../../AMDGPUUsage.rst:456
msgid "``-mcpu=gfx908:xnack-``"
msgstr ""

#: ../../../AMDGPUUsage.rst:457
msgid "Disable the ``xnack`` feature."
msgstr ""

#: ../../../AMDGPUUsage.rst:458
msgid "``-mcumode``"
msgstr ""

#: ../../../AMDGPUUsage.rst:459
msgid "Enable the ``cumode`` feature."
msgstr ""

#: ../../../AMDGPUUsage.rst:507
msgid "``-mno-cumode``"
msgstr ""

#: ../../../AMDGPUUsage.rst:461
msgid "Disable the ``cumode`` feature."
msgstr ""

#: ../../../AMDGPUUsage.rst:463
msgid "AMDGPU Target Features"
msgstr ""

#: ../../../AMDGPUUsage.rst:467
msgid "Target Feature"
msgstr ""

#: ../../../AMDGPUUsage.rst:467
msgid "Clang Option to Control"
msgstr ""

#: ../../../AMDGPUUsage.rst:468 ../../../AMDGPUUsage.rst:899
#: ../../../AMDGPUUsage.rst:993 ../../../AMDGPUUsage.rst:1020
#: ../../../AMDGPUUsage.rst:1055 ../../../AMDGPUUsage.rst:1082
#: ../../../AMDGPUUsage.rst:1144 ../../../AMDGPUUsage.rst:1232
#: ../../../AMDGPUUsage.rst:1249 ../../../AMDGPUUsage.rst:1397
#: ../../../AMDGPUUsage.rst:1409 ../../../AMDGPUUsage.rst:1433
msgid "Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:470
msgid "``-m[no-]cumode``"
msgstr ""

#: ../../../AMDGPUUsage.rst:470
msgid ""
"Control the wavefront execution mode used when generating code for kernels. "
"When disabled native WGP wavefront execution mode is used, when enabled CU "
"wavefront execution mode is used (see :ref:`amdgpu-amdhsa-memory-model`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:476 ../../../AMDGPUUsage.rst:489
msgid "``-mcpu``"
msgstr ""

#: ../../../AMDGPUUsage.rst:477 ../../../AMDGPUUsage.rst:490
msgid "``--offload-arch``"
msgstr ""

#: ../../../AMDGPUUsage.rst:476
msgid ""
"If specified, generate code that can only be loaded and executed in a "
"process that has a matching setting for SRAMECC."
msgstr ""

#: ../../../AMDGPUUsage.rst:480
msgid ""
"If not specified, generate code that can be loaded and executed in a process "
"with either setting of SRAMECC."
msgstr ""

#: ../../../AMDGPUUsage.rst:484
msgid "``-m[no-]wavefrontsize64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:484
msgid ""
"Control the wavefront size used when generating code for kernels. When "
"disabled native wavefront size 32 is used, when enabled wavefront size 64 is "
"used."
msgstr ""

#: ../../../AMDGPUUsage.rst:489
msgid ""
"If specified, generate code that can only be loaded and executed in a "
"process that has a matching setting for XNACK replay."
msgstr ""

#: ../../../AMDGPUUsage.rst:493
msgid ""
"If not specified, generate code that can be loaded and executed in a process "
"with either setting of XNACK replay."
msgstr ""

#: ../../../AMDGPUUsage.rst:497
msgid ""
"This is used for demand paging and page migration. If XNACK replay is "
"enabled in the device, then if a page fault occurs the code may execute "
"incorrectly if the ``xnack`` feature is not enabled. Executing code that has "
"the feature enabled on a device that does not have XNACK replay enabled will "
"execute correctly but may be less performant than code with the feature "
"disabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:512 ../../../AMDGPUUsage.rst:1352
msgid "Target ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:514
msgid ""
"AMDGPU supports target IDs. See `Clang Offload Bundler <https://clang.llvm."
"org/docs/ClangOffloadBundler.html>`_ for a general description. The AMDGPU "
"target specific information is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:522
msgid "**processor**"
msgstr ""

#: ../../../AMDGPUUsage.rst:519
msgid ""
"Is a AMDGPU processor or alternative processor name specified in :ref:"
"`amdgpu-processor-table`. The non-canonical form target ID allows both the "
"primary processor and alternative processor names. The canonical form target "
"ID only allow the primary processor name."
msgstr ""

#: ../../../AMDGPUUsage.rst:532
msgid "**target-feature**"
msgstr ""

#: ../../../AMDGPUUsage.rst:525
msgid ""
"Is a target feature name specified in :ref:`amdgpu-target-features-table` "
"that is supported by the processor. The target features supported by each "
"processor is specified in :ref:`amdgpu-processor-table`. Those that can be "
"specified in a target ID are marked as being controlled by ``-mcpu`` and ``--"
"offload-arch``. Each target feature must appear at most once in a target ID. "
"The non-canonical form target ID allows the target features to be specified "
"in any order. The canonical form target ID requires the target features to "
"be specified in alphabetic order."
msgstr ""

#: ../../../AMDGPUUsage.rst:537
msgid "Code Object V2 to V3 Target ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:539
msgid ""
"The target ID syntax for code object V2 to V3 is the same as defined in "
"`Clang Offload Bundler <https://clang.llvm.org/docs/ClangOffloadBundler."
"html>`_ except when used in the :ref:`amdgpu-assembler-directive-amdgcn-"
"target` assembler directive and the bundle entry ID. In those cases it has "
"the following BNF syntax:"
msgstr ""

#: ../../../AMDGPUUsage.rst:549
msgid ""
"Where a target feature is omitted if *Off* and present if *On* or *Any*."
msgstr ""

#: ../../../AMDGPUUsage.rst:553
msgid ""
"The code object V2 to V3 cannot represent *Any* and treats it the same as "
"*On*."
msgstr ""

#: ../../../AMDGPUUsage.rst:559
msgid "Embedding Bundled Code Objects"
msgstr ""

#: ../../../AMDGPUUsage.rst:561
msgid ""
"AMDGPU supports the HIP and OpenMP languages that perform code object "
"embedding as described in `Clang Offload Bundler <https://clang.llvm.org/"
"docs/ClangOffloadBundler.html>`_."
msgstr ""

#: ../../../AMDGPUUsage.rst:567
msgid ""
"The target ID syntax used for code object V2 to V3 for a bundle entry ID "
"differs from that used elsewhere. See :ref:`amdgpu-target-id-v2-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:573
msgid "Address Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:575
msgid ""
"The AMDGPU architecture supports a number of memory address spaces. The "
"address space names use the OpenCL standard names, with some additions."
msgstr ""

#: ../../../AMDGPUUsage.rst:578
msgid ""
"The AMDGPU address spaces correspond to target architecture specific LLVM "
"address space numbers used in LLVM IR."
msgstr ""

#: ../../../AMDGPUUsage.rst:581
msgid ""
"The AMDGPU address spaces are described in :ref:`amdgpu-address-spaces-"
"table`. Only 64-bit process address spaces are supported for the ``amdgcn`` "
"target."
msgstr ""

#: ../../../AMDGPUUsage.rst:585
msgid "AMDGPU Address Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:589
msgid "64-Bit Process Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:591 ../../../AMDGPUUsage.rst:1804
msgid "Address Space Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:591
msgid "LLVM IR Address Space Number"
msgstr ""

#: ../../../AMDGPUUsage.rst:591 ../../../AMDGPUUsage.rst:3417
msgid "HSA Segment Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:591 ../../../AMDGPUUsage.rst:3417
msgid "Hardware Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:591 ../../../AMDGPUUsage.rst:3417
msgid "Address Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:591 ../../../AMDGPUUsage.rst:3417
msgid "NULL Value"
msgstr ""

#: ../../../AMDGPUUsage.rst:594 ../../../AMDGPUUsage.rst:3425
msgid "Generic"
msgstr ""

#: ../../../AMDGPUUsage.rst:594 ../../../AMDGPUUsage.rst:887
#: ../../../AMDGPUUsage.rst:902 ../../../AMDGPUUsage.rst:906
#: ../../../AMDGPUUsage.rst:909 ../../../AMDGPUUsage.rst:910
#: ../../../AMDGPUUsage.rst:1524 ../../../AMDGPUUsage.rst:1656
#: ../../../AMDGPUUsage.rst:3953 ../../../AMDGPUUsage.rst:4125
#: ../../../AMDGPUUsage.rst:4139 ../../../AMDGPUUsage.rst:4154
#: ../../../AMDGPUUsage.rst:8555 ../../../AMDGPUUsage.rst:8574
#: ../../../AMDGPUUsage.rst:9267 ../../../AMDGPUUsage.rst:9269
#: ../../../AMDGPUUsage.rst:9271 ../../../AMDGPUUsage.rst:9273
#: ../../../AMDGPUUsage.rst:9275 ../../../AMDGPUUsage.rst:9277
#: ../../../AMDGPUUsage.rst:9279 ../../../AMDGPUUsage.rst:9281
#: ../../../AMDGPUUsage.rst:9283 ../../../AMDGPUUsage.rst:9285
#: ../../../AMDGPUUsage.rst:9291 ../../../AMDGPUUsage.rst:9295
#: ../../../AMDGPUUsage.rst:9297 ../../../AMDGPUUsage.rst:9299
#: ../../../AMDGPUUsage.rst:9301 ../../../AMDGPUUsage.rst:9322
#: ../../../AMDGPUUsage.rst:9326 ../../../AMDGPUUsage.rst:9330
#: ../../../AMDGPUUsage.rst:9342 ../../../AMDGPUUsage.rst:9350
#: ../../../AMDGPUUsage.rst:9352 ../../../AMDGPUUsage.rst:9354
#: ../../../AMDGPUUsage.rst:9356 ../../../AMDGPUUsage.rst:9358
#: ../../../AMDGPUUsage.rst:9360 ../../../AMDGPUUsage.rst:9362
#: ../../../AMDGPUUsage.rst:9364
msgid "0"
msgstr ""

#: ../../../AMDGPUUsage.rst:594 ../../../AMDGPUUsage.rst:3425
msgid "flat"
msgstr ""

#: ../../../AMDGPUUsage.rst:594 ../../../AMDGPUUsage.rst:595
#: ../../../AMDGPUUsage.rst:598 ../../../AMDGPUUsage.rst:903
#: ../../../AMDGPUUsage.rst:1665 ../../../AMDGPUUsage.rst:1670
#: ../../../AMDGPUUsage.rst:1687 ../../../AMDGPUUsage.rst:1811
#: ../../../AMDGPUUsage.rst:1812 ../../../AMDGPUUsage.rst:3422
#: ../../../AMDGPUUsage.rst:3423 ../../../AMDGPUUsage.rst:3425
msgid "64"
msgstr ""

#: ../../../AMDGPUUsage.rst:594 ../../../AMDGPUUsage.rst:595
#: ../../../AMDGPUUsage.rst:598 ../../../AMDGPUUsage.rst:3422
#: ../../../AMDGPUUsage.rst:3423 ../../../AMDGPUUsage.rst:3425
msgid "0x0000000000000000"
msgstr ""

#: ../../../AMDGPUUsage.rst:595 ../../../AMDGPUUsage.rst:1765
#: ../../../AMDGPUUsage.rst:1766 ../../../AMDGPUUsage.rst:1811
#: ../../../AMDGPUUsage.rst:3422
msgid "Global"
msgstr ""

#: ../../../AMDGPUUsage.rst:595 ../../../AMDGPUUsage.rst:907
#: ../../../AMDGPUUsage.rst:1251 ../../../AMDGPUUsage.rst:1525
#: ../../../AMDGPUUsage.rst:1661 ../../../AMDGPUUsage.rst:4126
#: ../../../AMDGPUUsage.rst:4141 ../../../AMDGPUUsage.rst:4156
#: ../../../AMDGPUUsage.rst:4221 ../../../AMDGPUUsage.rst:4243
#: ../../../AMDGPUUsage.rst:4251 ../../../AMDGPUUsage.rst:4262
#: ../../../AMDGPUUsage.rst:4273 ../../../AMDGPUUsage.rst:4276
#: ../../../AMDGPUUsage.rst:4279 ../../../AMDGPUUsage.rst:4282
#: ../../../AMDGPUUsage.rst:4285 ../../../AMDGPUUsage.rst:4309
#: ../../../AMDGPUUsage.rst:4312 ../../../AMDGPUUsage.rst:4315
#: ../../../AMDGPUUsage.rst:8556 ../../../AMDGPUUsage.rst:8708
#: ../../../AMDGPUUsage.rst:9293 ../../../AMDGPUUsage.rst:9311
#: ../../../AMDGPUUsage.rst:9314 ../../../AMDGPUUsage.rst:9338
#: ../../../AMDGPUUsage.rst:9340 ../../../AMDGPUUsage.rst:9348
msgid "1"
msgstr ""

#: ../../../AMDGPUUsage.rst:595 ../../../AMDGPUUsage.rst:3422
#: ../../../AMDGPUUsage.rst:4758 ../../../AMDGPUUsage.rst:4786
#: ../../../AMDGPUUsage.rst:4820 ../../../AMDGPUUsage.rst:4823
#: ../../../AMDGPUUsage.rst:4825 ../../../AMDGPUUsage.rst:4833
#: ../../../AMDGPUUsage.rst:4843 ../../../AMDGPUUsage.rst:4846
#: ../../../AMDGPUUsage.rst:4864 ../../../AMDGPUUsage.rst:4914
#: ../../../AMDGPUUsage.rst:4917 ../../../AMDGPUUsage.rst:4935
#: ../../../AMDGPUUsage.rst:5110 ../../../AMDGPUUsage.rst:5113
#: ../../../AMDGPUUsage.rst:5135 ../../../AMDGPUUsage.rst:5177
#: ../../../AMDGPUUsage.rst:5180 ../../../AMDGPUUsage.rst:5202
#: ../../../AMDGPUUsage.rst:5357 ../../../AMDGPUUsage.rst:5360
#: ../../../AMDGPUUsage.rst:5436 ../../../AMDGPUUsage.rst:5732
#: ../../../AMDGPUUsage.rst:5737 ../../../AMDGPUUsage.rst:5809
#: ../../../AMDGPUUsage.rst:5900 ../../../AMDGPUUsage.rst:5905
#: ../../../AMDGPUUsage.rst:6060 ../../../AMDGPUUsage.rst:6088
#: ../../../AMDGPUUsage.rst:6122 ../../../AMDGPUUsage.rst:6124
#: ../../../AMDGPUUsage.rst:6133 ../../../AMDGPUUsage.rst:6135
#: ../../../AMDGPUUsage.rst:6143 ../../../AMDGPUUsage.rst:6153
#: ../../../AMDGPUUsage.rst:6156 ../../../AMDGPUUsage.rst:6244
#: ../../../AMDGPUUsage.rst:6296 ../../../AMDGPUUsage.rst:6299
#: ../../../AMDGPUUsage.rst:6375 ../../../AMDGPUUsage.rst:6632
#: ../../../AMDGPUUsage.rst:6635 ../../../AMDGPUUsage.rst:6721
#: ../../../AMDGPUUsage.rst:6769 ../../../AMDGPUUsage.rst:6772
#: ../../../AMDGPUUsage.rst:6857 ../../../AMDGPUUsage.rst:7054
#: ../../../AMDGPUUsage.rst:7057 ../../../AMDGPUUsage.rst:7272
#: ../../../AMDGPUUsage.rst:7653 ../../../AMDGPUUsage.rst:7658
#: ../../../AMDGPUUsage.rst:7862 ../../../AMDGPUUsage.rst:7969
#: ../../../AMDGPUUsage.rst:7974
msgid "global"
msgstr ""

#: ../../../AMDGPUUsage.rst:596 ../../../AMDGPUUsage.rst:3426
msgid "Region"
msgstr ""

#: ../../../AMDGPUUsage.rst:596 ../../../AMDGPUUsage.rst:908
#: ../../../AMDGPUUsage.rst:1252 ../../../AMDGPUUsage.rst:1527
#: ../../../AMDGPUUsage.rst:4127 ../../../AMDGPUUsage.rst:4142
#: ../../../AMDGPUUsage.rst:4158 ../../../AMDGPUUsage.rst:4200
#: ../../../AMDGPUUsage.rst:4203 ../../../AMDGPUUsage.rst:4207
#: ../../../AMDGPUUsage.rst:4216 ../../../AMDGPUUsage.rst:4219
#: ../../../AMDGPUUsage.rst:8709
msgid "2"
msgstr ""

#: ../../../AMDGPUUsage.rst:596 ../../../AMDGPUUsage.rst:3426
msgid "N/A"
msgstr ""

#: ../../../AMDGPUUsage.rst:596 ../../../AMDGPUUsage.rst:3426
msgid "GDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:596 ../../../AMDGPUUsage.rst:597
#: ../../../AMDGPUUsage.rst:599 ../../../AMDGPUUsage.rst:1412
#: ../../../AMDGPUUsage.rst:1656 ../../../AMDGPUUsage.rst:1661
#: ../../../AMDGPUUsage.rst:1674 ../../../AMDGPUUsage.rst:1678
#: ../../../AMDGPUUsage.rst:1681 ../../../AMDGPUUsage.rst:1694
#: ../../../AMDGPUUsage.rst:1811 ../../../AMDGPUUsage.rst:1812
#: ../../../AMDGPUUsage.rst:1813 ../../../AMDGPUUsage.rst:1814
#: ../../../AMDGPUUsage.rst:1816 ../../../AMDGPUUsage.rst:1817
#: ../../../AMDGPUUsage.rst:3420 ../../../AMDGPUUsage.rst:3421
#: ../../../AMDGPUUsage.rst:3426 ../../../AMDGPUUsage.rst:3942
#: ../../../AMDGPUUsage.rst:4099 ../../../AMDGPUUsage.rst:4114
msgid "32"
msgstr ""

#: ../../../AMDGPUUsage.rst:596 ../../../AMDGPUUsage.rst:3426
msgid "*not implemented for AMDHSA*"
msgstr ""

#: ../../../AMDGPUUsage.rst:597 ../../../AMDGPUUsage.rst:3421
msgid "Local"
msgstr ""

#: ../../../AMDGPUUsage.rst:597 ../../../AMDGPUUsage.rst:1253
#: ../../../AMDGPUUsage.rst:1529 ../../../AMDGPUUsage.rst:4128
#: ../../../AMDGPUUsage.rst:4143 ../../../AMDGPUUsage.rst:4160
#: ../../../AMDGPUUsage.rst:8710 ../../../AMDGPUUsage.rst:9334
msgid "3"
msgstr ""

#: ../../../AMDGPUUsage.rst:597 ../../../AMDGPUUsage.rst:3421
msgid "group"
msgstr ""

#: ../../../AMDGPUUsage.rst:597 ../../../AMDGPUUsage.rst:3421
msgid "LDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:597 ../../../AMDGPUUsage.rst:599
#: ../../../AMDGPUUsage.rst:3421
msgid "0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:598 ../../../AMDGPUUsage.rst:3423
msgid "Constant"
msgstr ""

#: ../../../AMDGPUUsage.rst:598 ../../../AMDGPUUsage.rst:1531
#: ../../../AMDGPUUsage.rst:4197 ../../../AMDGPUUsage.rst:8711
msgid "4"
msgstr ""

#: ../../../AMDGPUUsage.rst:598 ../../../AMDGPUUsage.rst:3423
#: ../../../AMDGPUUsage.rst:4761 ../../../AMDGPUUsage.rst:4789
#: ../../../AMDGPUUsage.rst:6063 ../../../AMDGPUUsage.rst:6091
msgid "constant"
msgstr ""

#: ../../../AMDGPUUsage.rst:598 ../../../AMDGPUUsage.rst:3423
msgid "*same as global*"
msgstr ""

#: ../../../AMDGPUUsage.rst:599 ../../../AMDGPUUsage.rst:3420
msgid "Private"
msgstr ""

#: ../../../AMDGPUUsage.rst:599 ../../../AMDGPUUsage.rst:1532
#: ../../../AMDGPUUsage.rst:8712
msgid "5"
msgstr ""

#: ../../../AMDGPUUsage.rst:599 ../../../AMDGPUUsage.rst:3420
#: ../../../AMDGPUUsage.rst:4760 ../../../AMDGPUUsage.rst:4788
#: ../../../AMDGPUUsage.rst:6062 ../../../AMDGPUUsage.rst:6090
msgid "private"
msgstr ""

#: ../../../AMDGPUUsage.rst:599 ../../../AMDGPUUsage.rst:3420
msgid "scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:600
msgid "Constant 32-bit"
msgstr ""

#: ../../../AMDGPUUsage.rst:600 ../../../AMDGPUUsage.rst:1533
#: ../../../AMDGPUUsage.rst:3972 ../../../AMDGPUUsage.rst:8714
msgid "6"
msgstr ""

#: ../../../AMDGPUUsage.rst:600 ../../../AMDGPUUsage.rst:601
#: ../../../AMDGPUUsage.rst:699
msgid "*TODO*"
msgstr ""

#: ../../../AMDGPUUsage.rst:600 ../../../AMDGPUUsage.rst:3420
msgid "0x00000000"
msgstr ""

#: ../../../AMDGPUUsage.rst:601
msgid "Buffer Fat Pointer (experimental)"
msgstr ""

#: ../../../AMDGPUUsage.rst:601 ../../../AMDGPUUsage.rst:1535
#: ../../../AMDGPUUsage.rst:3979 ../../../AMDGPUUsage.rst:8716
msgid "7"
msgstr ""

#: ../../../AMDGPUUsage.rst:633
msgid "**Generic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:605
msgid ""
"The generic address space is supported unless the *Target Properties* column "
"of :ref:`amdgpu-processor-table` specifies *Does not support generic address "
"space*."
msgstr ""

#: ../../../AMDGPUUsage.rst:609
msgid ""
"The generic address space uses the hardware flat address support for two "
"fixed ranges of virtual addresses (the private and local apertures), that "
"are outside the range of addressable global memory, to map from a flat "
"address to a private or local address. This uses FLAT instructions that can "
"take a flat address and access global, private (scratch), and group (LDS) "
"memory depending on if the address is within one of the aperture ranges."
msgstr ""

#: ../../../AMDGPUUsage.rst:616
msgid ""
"Flat access to scratch requires hardware aperture setup and setup in the "
"kernel prologue (see :ref:`amdgpu-amdhsa-kernel-prolog-flat-scratch`). Flat "
"access to LDS requires hardware aperture setup and M0 (GFX7-GFX8) register "
"setup (see :ref:`amdgpu-amdhsa-kernel-prolog-m0`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:621
msgid ""
"To convert between a private or group address space address (termed a "
"segment address) and a flat address the base address of the corresponding "
"aperture can be used. For GFX7-GFX8 these are available in the :ref:`amdgpu-"
"amdhsa-hsa-aql-queue` the address of which can be obtained with Queue Ptr "
"SGPR (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`). For GFX9-"
"GFX10 the aperture base addresses are directly available as inline constant "
"registers ``SRC_SHARED_BASE/LIMIT`` and ``SRC_PRIVATE_BASE/LIMIT``. In 64-"
"bit address mode the aperture sizes are 2^32 bytes and the base is aligned "
"to 2^32 which makes it easier to convert from flat to segment or segment to "
"flat."
msgstr ""

#: ../../../AMDGPUUsage.rst:632
msgid ""
"A global address space address has the same value when used as a flat "
"address so no conversion is needed."
msgstr ""

#: ../../../AMDGPUUsage.rst:648
msgid "**Global and Constant**"
msgstr ""

#: ../../../AMDGPUUsage.rst:636
msgid ""
"The global and constant address spaces both use global virtual addresses, "
"which are the same virtual address space used by the CPU. However, some "
"virtual addresses may only be accessible to the CPU, some only accessible by "
"the GPU, and some by both."
msgstr ""

#: ../../../AMDGPUUsage.rst:641
msgid ""
"Using the constant address space indicates that the data will not change "
"during the execution of the kernel. This allows scalar read instructions to "
"be used. As the constant address space could only be modified on the host "
"side, a generic pointer loaded from the constant address space is safe to be "
"assumed as a global pointer since only the device global memory is visible "
"and managed on the host side. The vector and scalar L1 caches are "
"invalidated of volatile data before each kernel dispatch execution to allow "
"constant memory to change values between kernel dispatches."
msgstr ""

#: ../../../AMDGPUUsage.rst:656
msgid "**Region**"
msgstr ""

#: ../../../AMDGPUUsage.rst:651
msgid ""
"The region address space uses the hardware Global Data Store (GDS). All "
"wavefronts executing on the same device will access the same memory for any "
"given region address. However, the same region address accessed by "
"wavefronts executing on different devices will access different memory. It "
"is higher performance than global memory. It is allocated by the runtime. "
"The data store (DS) instructions can be used to access it."
msgstr ""

#: ../../../AMDGPUUsage.rst:666
msgid "**Local**"
msgstr ""

#: ../../../AMDGPUUsage.rst:659
msgid ""
"The local address space uses the hardware Local Data Store (LDS) which is "
"automatically allocated when the hardware creates the wavefronts of a work-"
"group, and freed when all the wavefronts of a work-group have terminated. "
"All wavefronts belonging to the same work-group will access the same memory "
"for any given local address. However, the same local address accessed by "
"wavefronts belonging to different work-groups will access different memory. "
"It is higher performance than global memory. The data store (DS) "
"instructions can be used to access it."
msgstr ""

#: ../../../AMDGPUUsage.rst:696
msgid "**Private**"
msgstr ""

#: ../../../AMDGPUUsage.rst:669
msgid ""
"The private address space uses the hardware scratch memory support which "
"automatically allocates memory when it creates a wavefront and frees it when "
"a wavefronts terminates. The memory accessed by a lane of a wavefront for "
"any given private address will be different to the memory accessed by "
"another lane of the same or different wavefront for the same private address."
msgstr ""

#: ../../../AMDGPUUsage.rst:675
msgid ""
"If a kernel dispatch uses scratch, then the hardware allocates memory from a "
"pool of backing memory allocated by the runtime for each wavefront. The "
"lanes of the wavefront access this using dword (4 byte) interleaving. The "
"mapping used from private address to backing memory address is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:680
msgid ""
"``wavefront-scratch-base + ((private-address / 4) * wavefront-size * 4) + "
"(wavefront-lane-id * 4) + (private-address % 4)``"
msgstr ""

#: ../../../AMDGPUUsage.rst:684
msgid ""
"If each lane of a wavefront accesses the same private address, the "
"interleaving results in adjacent dwords being accessed and hence requires "
"fewer cache lines to be fetched."
msgstr ""

#: ../../../AMDGPUUsage.rst:688
msgid ""
"There are different ways that the wavefront scratch base address is "
"determined by a wavefront (see :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:692
msgid ""
"Scratch memory can be accessed in an interleaved manner using buffer "
"instructions with the scratch buffer descriptor and per wavefront scratch "
"offset, by the scratch instructions, or by flat instructions. Multi-dword "
"access is not supported except by flat and scratch instructions in GFX9-"
"GFX10."
msgstr ""

#: ../../../AMDGPUUsage.rst:699
msgid "**Constant 32-bit**"
msgstr ""

#: ../../../AMDGPUUsage.rst:708
msgid "**Buffer Fat Pointer**"
msgstr ""

#: ../../../AMDGPUUsage.rst:702
msgid ""
"The buffer fat pointer is an experimental address space that is currently "
"unsupported in the backend. It exposes a non-integral pointer that is in the "
"future intended to support the modelling of 128-bit buffer descriptors plus "
"a 32-bit offset into the buffer (in total encapsulating a 160-bit "
"*pointer*), allowing normal LLVM load/store/atomic operations to be used to "
"model the buffer descriptors used heavily in graphics workloads targeting "
"the backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:713
msgid "Memory Scopes"
msgstr ""

#: ../../../AMDGPUUsage.rst:715
msgid ""
"This section provides LLVM memory synchronization scopes supported by the "
"AMDGPU backend memory model when the target triple OS is ``amdhsa`` (see :"
"ref:`amdgpu-amdhsa-memory-model` and :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:719
msgid ""
"The memory model supported is based on the HSA memory model [HSA]_ which is "
"based in turn on HRF-indirect with scope inclusion [HRF]_. The happens-"
"before relation is transitive over the synchronizes-with relation "
"independent of scope and synchronizes-with allows the memory scope instances "
"to be inclusive (see table :ref:`amdgpu-amdhsa-llvm-sync-scopes-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:725
msgid ""
"This is different to the OpenCL [OpenCL]_ memory model which does not have "
"scope inclusion and requires the memory scopes to exactly match. However, "
"this is conservatively correct for OpenCL."
msgstr ""

#: ../../../AMDGPUUsage.rst:729
msgid "AMDHSA LLVM Sync Scopes"
msgstr ""

#: ../../../AMDGPUUsage.rst:733
msgid "LLVM Sync Scope"
msgstr ""

#: ../../../AMDGPUUsage.rst:735 ../../../AMDGPUUsage.rst:1148
#: ../../../AMDGPUUsage.rst:1154 ../../../AMDGPUUsage.rst:1155
#: ../../../AMDGPUUsage.rst:1156 ../../../AMDGPUUsage.rst:1158
#: ../../../AMDGPUUsage.rst:1159 ../../../AMDGPUUsage.rst:1160
#: ../../../AMDGPUUsage.rst:1524 ../../../AMDGPUUsage.rst:4625
#: ../../../AMDGPUUsage.rst:4626 ../../../AMDGPUUsage.rst:4758
#: ../../../AMDGPUUsage.rst:4785 ../../../AMDGPUUsage.rst:4786
#: ../../../AMDGPUUsage.rst:4812 ../../../AMDGPUUsage.rst:4986
#: ../../../AMDGPUUsage.rst:4988 ../../../AMDGPUUsage.rst:5032
#: ../../../AMDGPUUsage.rst:5242 ../../../AMDGPUUsage.rst:5244
#: ../../../AMDGPUUsage.rst:5288 ../../../AMDGPUUsage.rst:5565
#: ../../../AMDGPUUsage.rst:5567 ../../../AMDGPUUsage.rst:5636
#: ../../../AMDGPUUsage.rst:5910 ../../../AMDGPUUsage.rst:6060
#: ../../../AMDGPUUsage.rst:6087 ../../../AMDGPUUsage.rst:6088
#: ../../../AMDGPUUsage.rst:6114 ../../../AMDGPUUsage.rst:6434
#: ../../../AMDGPUUsage.rst:6436 ../../../AMDGPUUsage.rst:6536
#: ../../../AMDGPUUsage.rst:6902 ../../../AMDGPUUsage.rst:6904
#: ../../../AMDGPUUsage.rst:6980 ../../../AMDGPUUsage.rst:7419
#: ../../../AMDGPUUsage.rst:7421 ../../../AMDGPUUsage.rst:7546
#: ../../../AMDGPUUsage.rst:7979 ../../../AMDGPUUsage.rst:8016
#: ../../../AMDGPUUsage.rst:8045 ../../../AMDGPUUsage.rst:8058
#: ../../../AMDGPUUsage.rst:8086 ../../../AMDGPUUsage.rst:8092
#: ../../../AMDGPUUsage.rst:8099 ../../../AMDGPUUsage.rst:8680
msgid "*none*"
msgstr ""

#: ../../../AMDGPUUsage.rst:735
msgid "The default: ``system``."
msgstr ""

#: ../../../AMDGPUUsage.rst:737 ../../../AMDGPUUsage.rst:751
#: ../../../AMDGPUUsage.rst:764 ../../../AMDGPUUsage.rst:775
msgid ""
"Synchronizes with, and participates in modification and seq_cst total "
"orderings with, other operations (except image operations) for all address "
"spaces (except private, or generic that accesses private) provided the other "
"operation's sync scope is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:743
msgid "``system``."
msgstr ""

#: ../../../AMDGPUUsage.rst:744
msgid "``agent`` and executed by a thread on the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:746 ../../../AMDGPUUsage.rst:759
msgid "``workgroup`` and executed by a thread in the same work-group."
msgstr ""

#: ../../../AMDGPUUsage.rst:748 ../../../AMDGPUUsage.rst:761
#: ../../../AMDGPUUsage.rst:772
msgid "``wavefront`` and executed by a thread in the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:751
msgid "``agent``"
msgstr ""

#: ../../../AMDGPUUsage.rst:757
msgid "``system`` or ``agent`` and executed by a thread on the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:764
msgid "``workgroup``"
msgstr ""

#: ../../../AMDGPUUsage.rst:770
msgid ""
"``system``, ``agent`` or ``workgroup`` and executed by a thread in the same "
"work-group."
msgstr ""

#: ../../../AMDGPUUsage.rst:775
msgid "``wavefront``"
msgstr ""

#: ../../../AMDGPUUsage.rst:781
msgid ""
"``system``, ``agent``, ``workgroup`` or ``wavefront`` and executed by a "
"thread in the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:785
msgid "``singlethread``"
msgstr ""

#: ../../../AMDGPUUsage.rst:785
msgid ""
"Only synchronizes with and participates in modification and seq_cst total "
"orderings with, other operations (except image operations) running in the "
"same thread for all address spaces (for example, in signal handlers)."
msgstr ""

#: ../../../AMDGPUUsage.rst:791
msgid "``one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:791
msgid ""
"Same as ``system`` but only synchronizes with other operations within the "
"same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:794
msgid "``agent-one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:794
msgid ""
"Same as ``agent`` but only synchronizes with other operations within the "
"same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:797
msgid "``workgroup-one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:797
msgid ""
"Same as ``workgroup`` but only synchronizes with other operations within the "
"same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:800
msgid "``wavefront-one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:800
msgid ""
"Same as ``wavefront`` but only synchronizes with other operations within the "
"same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:803
msgid "``singlethread-one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:803
msgid ""
"Same as ``singlethread`` but only synchronizes with other operations within "
"the same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:808
msgid "LLVM IR Intrinsics"
msgstr ""

#: ../../../AMDGPUUsage.rst:810
msgid "The AMDGPU backend implements the following LLVM IR intrinsics."
msgstr ""

#: ../../../AMDGPUUsage.rst:812
msgid "*This section is WIP.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:816
msgid "List AMDGPU intrinsics."
msgstr ""

#: ../../../AMDGPUUsage.rst:819
msgid "LLVM IR Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:821
msgid "The AMDGPU backend supports the following LLVM IR attributes."
msgstr ""

#: ../../../AMDGPUUsage.rst:823
msgid "AMDGPU LLVM IR Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:827
msgid "LLVM Attribute"
msgstr ""

#: ../../../AMDGPUUsage.rst:829
msgid "\"amdgpu-flat-work-group-size\"=\"min,max\""
msgstr ""

#: ../../../AMDGPUUsage.rst:829
msgid ""
"Specify the minimum and maximum flat work group sizes that will be specified "
"when the kernel is dispatched. Generated by the "
"``amdgpu_flat_work_group_size`` CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:832
msgid "\"amdgpu-implicitarg-num-bytes\"=\"n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:832
msgid ""
"Number of kernel argument bytes to add to the kernel argument block size for "
"the implicit arguments. This varies by OS and language (for OpenCL see :ref:"
"`opencl-kernel-implicit-arguments-appended-for-amdhsa-os-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:836
msgid "\"amdgpu-num-sgpr\"=\"n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:836
msgid ""
"Specifies the number of SGPRs to use. Generated by the ``amdgpu_num_sgpr`` "
"CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:838
msgid "\"amdgpu-num-vgpr\"=\"n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:838
msgid ""
"Specifies the number of VGPRs to use. Generated by the ``amdgpu_num_vgpr`` "
"CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:840
msgid "\"amdgpu-waves-per-eu\"=\"m,n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:840
msgid ""
"Specify the minimum and maximum number of waves per execution unit. "
"Generated by the ``amdgpu_waves_per_eu`` CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:843
msgid "\"amdgpu-ieee\" true/false."
msgstr ""

#: ../../../AMDGPUUsage.rst:843
msgid ""
"Specify whether the function expects the IEEE field of the mode register to "
"be set on entry. Overrides the default for the calling convention."
msgstr ""

#: ../../../AMDGPUUsage.rst:846
msgid "\"amdgpu-dx10-clamp\" true/false."
msgstr ""

#: ../../../AMDGPUUsage.rst:846
msgid ""
"Specify whether the function expects the DX10_CLAMP field of the mode "
"register to be set on entry. Overrides the default for the calling "
"convention."
msgstr ""

#: ../../../AMDGPUUsage.rst:854
msgid "ELF Code Object"
msgstr ""

#: ../../../AMDGPUUsage.rst:856
msgid ""
"The AMDGPU backend generates a standard ELF [ELF]_ relocatable code object "
"that can be linked by ``lld`` to produce a standard ELF shared code object "
"which can be loaded and executed on an AMDGPU target."
msgstr ""

#: ../../../AMDGPUUsage.rst:863
msgid "Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:865
msgid "The AMDGPU backend uses the following ELF header:"
msgstr ""

#: ../../../AMDGPUUsage.rst:867
msgid "AMDGPU ELF Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:871 ../../../AMDGPUUsage.rst:1522
msgid "Field"
msgstr ""

#: ../../../AMDGPUUsage.rst:871 ../../../AMDGPUUsage.rst:899
#: ../../../AMDGPUUsage.rst:993 ../../../AMDGPUUsage.rst:1020
#: ../../../AMDGPUUsage.rst:1055 ../../../AMDGPUUsage.rst:1082
#: ../../../AMDGPUUsage.rst:1249 ../../../AMDGPUUsage.rst:1409
#: ../../../AMDGPUUsage.rst:1522 ../../../AMDGPUUsage.rst:1762
#: ../../../AMDGPUUsage.rst:1804 ../../../AMDGPUUsage.rst:4123
#: ../../../AMDGPUUsage.rst:4137 ../../../AMDGPUUsage.rst:4152
msgid "Value"
msgstr ""

#: ../../../AMDGPUUsage.rst:873 ../../../AMDGPUUsage.rst:919
msgid "``e_ident[EI_CLASS]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:873
msgid "``ELFCLASS64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:874 ../../../AMDGPUUsage.rst:922
msgid "``e_ident[EI_DATA]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:874
msgid "``ELFDATA2LSB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:875 ../../../AMDGPUUsage.rst:934
msgid "``e_ident[EI_OSABI]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:875 ../../../AMDGPUUsage.rst:902
msgid "``ELFOSABI_NONE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:876 ../../../AMDGPUUsage.rst:903
msgid "``ELFOSABI_AMDGPU_HSA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:877 ../../../AMDGPUUsage.rst:904
msgid "``ELFOSABI_AMDGPU_PAL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:878 ../../../AMDGPUUsage.rst:905
msgid "``ELFOSABI_AMDGPU_MESA3D``"
msgstr ""

#: ../../../AMDGPUUsage.rst:879 ../../../AMDGPUUsage.rst:957
msgid "``e_ident[EI_ABIVERSION]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:879 ../../../AMDGPUUsage.rst:906
msgid "``ELFABIVERSION_AMDGPU_HSA_V2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:880 ../../../AMDGPUUsage.rst:907
msgid "``ELFABIVERSION_AMDGPU_HSA_V3``"
msgstr ""

#: ../../../AMDGPUUsage.rst:881 ../../../AMDGPUUsage.rst:908
msgid "``ELFABIVERSION_AMDGPU_HSA_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:882 ../../../AMDGPUUsage.rst:909
msgid "``ELFABIVERSION_AMDGPU_PAL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:883 ../../../AMDGPUUsage.rst:910
msgid "``ELFABIVERSION_AMDGPU_MESA3D``"
msgstr ""

#: ../../../AMDGPUUsage.rst:884 ../../../AMDGPUUsage.rst:970
msgid "``e_type``"
msgstr ""

#: ../../../AMDGPUUsage.rst:884 ../../../AMDGPUUsage.rst:965
msgid "``ET_REL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:885 ../../../AMDGPUUsage.rst:968
msgid "``ET_DYN``"
msgstr ""

#: ../../../AMDGPUUsage.rst:886 ../../../AMDGPUUsage.rst:980
msgid "``e_machine``"
msgstr ""

#: ../../../AMDGPUUsage.rst:886 ../../../AMDGPUUsage.rst:901
msgid "``EM_AMDGPU``"
msgstr ""

#: ../../../AMDGPUUsage.rst:887 ../../../AMDGPUUsage.rst:984
msgid "``e_entry``"
msgstr ""

#: ../../../AMDGPUUsage.rst:888 ../../../AMDGPUUsage.rst:1133
msgid "``e_flags``"
msgstr ""

#: ../../../AMDGPUUsage.rst:888
msgid ""
"See :ref:`amdgpu-elf-header-e_flags-v2-table`, :ref:`amdgpu-elf-header-"
"e_flags-table-v3`, and :ref:`amdgpu-elf-header-e_flags-table-v4`"
msgstr ""

#: ../../../AMDGPUUsage.rst:895
msgid "AMDGPU ELF Header Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:901
msgid "224"
msgstr ""

#: ../../../AMDGPUUsage.rst:904
msgid "65"
msgstr ""

#: ../../../AMDGPUUsage.rst:905
msgid "66"
msgstr ""

#: ../../../AMDGPUUsage.rst:914
msgid "The ELF class is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:916
msgid "``ELFCLASS32`` for ``r600`` architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:918
msgid ""
"``ELFCLASS64`` for ``amdgcn`` architecture which only supports 64-bit "
"process address space applications."
msgstr ""

#: ../../../AMDGPUUsage.rst:922
msgid "All AMDGPU targets use ``ELFDATA2LSB`` for little-endian byte ordering."
msgstr ""

#: ../../../AMDGPUUsage.rst:925
msgid ""
"One of the following AMDGPU target architecture specific OS ABIs (see :ref:"
"`amdgpu-os`):"
msgstr ""

#: ../../../AMDGPUUsage.rst:928
msgid "``ELFOSABI_NONE`` for *unknown* OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:930
msgid "``ELFOSABI_AMDGPU_HSA`` for ``amdhsa`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:932
msgid "``ELFOSABI_AMDGPU_PAL`` for ``amdpal`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:934
msgid "``ELFOSABI_AMDGPU_MESA3D`` for ``mesa3D`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:937
msgid ""
"The ABI version of the AMDGPU target architecture specific OS ABI to which "
"the code object conforms:"
msgstr ""

#: ../../../AMDGPUUsage.rst:940
msgid ""
"``ELFABIVERSION_AMDGPU_HSA_V2`` is used to specify the version of AMD HSA "
"runtime ABI for code object V2. Specify using the Clang option ``-mcode-"
"object-version=2``."
msgstr ""

#: ../../../AMDGPUUsage.rst:944
msgid ""
"``ELFABIVERSION_AMDGPU_HSA_V3`` is used to specify the version of AMD HSA "
"runtime ABI for code object V3. Specify using the Clang option ``-mcode-"
"object-version=3``. This is the default code object version if not specified."
msgstr ""

#: ../../../AMDGPUUsage.rst:949
msgid ""
"``ELFABIVERSION_AMDGPU_HSA_V4`` is used to specify the version of AMD HSA "
"runtime ABI for code object V4. Specify using the Clang option ``-mcode-"
"object-version=4``."
msgstr ""

#: ../../../AMDGPUUsage.rst:953
msgid ""
"``ELFABIVERSION_AMDGPU_PAL`` is used to specify the version of AMD PAL "
"runtime ABI."
msgstr ""

#: ../../../AMDGPUUsage.rst:956
msgid ""
"``ELFABIVERSION_AMDGPU_MESA3D`` is used to specify the version of AMD MESA "
"3D runtime ABI."
msgstr ""

#: ../../../AMDGPUUsage.rst:960
msgid "Can be one of the following values:"
msgstr ""

#: ../../../AMDGPUUsage.rst:964
msgid ""
"The type produced by the AMDGPU backend compiler as it is relocatable code "
"object."
msgstr ""

#: ../../../AMDGPUUsage.rst:968
msgid "The type produced by the linker as it is a shared code object."
msgstr ""

#: ../../../AMDGPUUsage.rst:970
msgid "The AMD HSA runtime loader requires a ``ET_DYN`` code object."
msgstr ""

#: ../../../AMDGPUUsage.rst:973
msgid ""
"The value ``EM_AMDGPU`` is used for the machine for all processors supported "
"by the ``r600`` and ``amdgcn`` architectures (see :ref:`amdgpu-processor-"
"table`). The specific processor is specified in the "
"``NT_AMD_HSA_ISA_VERSION`` note record for code object V2 (see :ref:`amdgpu-"
"note-records-v2`) and in the ``EF_AMDGPU_MACH`` bit field of the ``e_flags`` "
"for code object V3 to V4 (see :ref:`amdgpu-elf-header-e_flags-table-v3` and :"
"ref:`amdgpu-elf-header-e_flags-table-v4`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:983
msgid ""
"The entry point is 0 as the entry points for individual kernels must be "
"selected in order to invoke them through AQL packets."
msgstr ""

#: ../../../AMDGPUUsage.rst:987
msgid "The AMDGPU backend uses the following ELF header flags:"
msgstr ""

#: ../../../AMDGPUUsage.rst:989
msgid "AMDGPU ELF Header ``e_flags`` for Code Object V2"
msgstr ""

#: ../../../AMDGPUUsage.rst:995
msgid "``EF_AMDGPU_FEATURE_XNACK_V2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:995 ../../../AMDGPUUsage.rst:1812
msgid "0x01"
msgstr ""

#: ../../../AMDGPUUsage.rst:995 ../../../AMDGPUUsage.rst:1027
msgid ""
"Indicates if the ``xnack`` target feature is enabled for all code contained "
"in the code object. If the processor does not support the ``xnack`` target "
"feature then must be 0. See :ref:`amdgpu-target-features`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1006
msgid "``EF_AMDGPU_FEATURE_TRAP_HANDLER_V2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1006 ../../../AMDGPUUsage.rst:1813
msgid "0x02"
msgstr ""

#: ../../../AMDGPUUsage.rst:1006
msgid ""
"Indicates if the trap handler is enabled for all code contained in the code "
"object. If the processor does not support a trap handler then must be 0. "
"See :ref:`amdgpu-target-features`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1016
msgid "AMDGPU ELF Header ``e_flags`` for Code Object V3"
msgstr ""

#: ../../../AMDGPUUsage.rst:1022 ../../../AMDGPUUsage.rst:1057
msgid "``EF_AMDGPU_MACH``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1022 ../../../AMDGPUUsage.rst:1057
msgid "0x0ff"
msgstr ""

#: ../../../AMDGPUUsage.rst:1022 ../../../AMDGPUUsage.rst:1057
msgid ""
"AMDGPU processor selection mask for ``EF_AMDGPU_MACH_xxx`` values defined "
"in :ref:`amdgpu-ef-amdgpu-mach-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1027
msgid "``EF_AMDGPU_FEATURE_XNACK_V3``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1027 ../../../AMDGPUUsage.rst:1066
msgid "0x100"
msgstr ""

#: ../../../AMDGPUUsage.rst:1038
msgid "``EF_AMDGPU_FEATURE_SRAMECC_V3``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1038 ../../../AMDGPUUsage.rst:1067
msgid "0x200"
msgstr ""

#: ../../../AMDGPUUsage.rst:1038
msgid ""
"Indicates if the ``sramecc`` target feature is enabled for all code "
"contained in the code object. If the processor does not support the "
"``sramecc`` target feature then must be 0. See :ref:`amdgpu-target-features`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1051
msgid "AMDGPU ELF Header ``e_flags`` for Code Object V4"
msgstr ""

#: ../../../AMDGPUUsage.rst:1062
msgid "``EF_AMDGPU_FEATURE_XNACK_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1062 ../../../AMDGPUUsage.rst:1068
msgid "0x300"
msgstr ""

#: ../../../AMDGPUUsage.rst:1062
msgid "XNACK selection mask for ``EF_AMDGPU_FEATURE_XNACK_*_V4`` values."
msgstr ""

#: ../../../AMDGPUUsage.rst:1065
msgid "``EF_AMDGPU_FEATURE_XNACK_UNSUPPORTED_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1065 ../../../AMDGPUUsage.rst:1072
#: ../../../AMDGPUUsage.rst:1085
msgid "0x000"
msgstr ""

#: ../../../AMDGPUUsage.rst:1065
msgid "XNACK unsuppored."
msgstr ""

#: ../../../AMDGPUUsage.rst:1066
msgid "``EF_AMDGPU_FEATURE_XNACK_ANY_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1066
msgid "XNACK can have any value."
msgstr ""

#: ../../../AMDGPUUsage.rst:1067
msgid "``EF_AMDGPU_FEATURE_XNACK_OFF_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1067
msgid "XNACK disabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:1068
msgid "``EF_AMDGPU_FEATURE_XNACK_ON_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1068
msgid "XNACK enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:1069
msgid "``EF_AMDGPU_FEATURE_SRAMECC_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1069 ../../../AMDGPUUsage.rst:1075
msgid "0xc00"
msgstr ""

#: ../../../AMDGPUUsage.rst:1069
msgid "SRAMECC selection mask for ``EF_AMDGPU_FEATURE_SRAMECC_*_V4`` values."
msgstr ""

#: ../../../AMDGPUUsage.rst:1072
msgid "``EF_AMDGPU_FEATURE_SRAMECC_UNSUPPORTED_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1072
msgid "SRAMECC unsuppored."
msgstr ""

#: ../../../AMDGPUUsage.rst:1073
msgid "``EF_AMDGPU_FEATURE_SRAMECC_ANY_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1073
msgid "0x400"
msgstr ""

#: ../../../AMDGPUUsage.rst:1073
msgid "SRAMECC can have any value."
msgstr ""

#: ../../../AMDGPUUsage.rst:1074
msgid "``EF_AMDGPU_FEATURE_SRAMECC_OFF_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1074
msgid "0x800"
msgstr ""

#: ../../../AMDGPUUsage.rst:1074
msgid "SRAMECC disabled,"
msgstr ""

#: ../../../AMDGPUUsage.rst:1075
msgid "``EF_AMDGPU_FEATURE_SRAMECC_ON_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1075
msgid "SRAMECC enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:1078
msgid "AMDGPU ``EF_AMDGPU_MACH`` Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:1082
msgid "Description (see :ref:`amdgpu-processor-table`)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1085
msgid "``EF_AMDGPU_MACH_NONE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1085
msgid "*not specified*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1086
msgid "``EF_AMDGPU_MACH_R600_R600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1086
msgid "0x001"
msgstr ""

#: ../../../AMDGPUUsage.rst:1087
msgid "``EF_AMDGPU_MACH_R600_R630``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1087
msgid "0x002"
msgstr ""

#: ../../../AMDGPUUsage.rst:1088
msgid "``EF_AMDGPU_MACH_R600_RS880``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1088
msgid "0x003"
msgstr ""

#: ../../../AMDGPUUsage.rst:1089
msgid "``EF_AMDGPU_MACH_R600_RV670``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1089
msgid "0x004"
msgstr ""

#: ../../../AMDGPUUsage.rst:1090
msgid "``EF_AMDGPU_MACH_R600_RV710``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1090
msgid "0x005"
msgstr ""

#: ../../../AMDGPUUsage.rst:1091
msgid "``EF_AMDGPU_MACH_R600_RV730``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1091
msgid "0x006"
msgstr ""

#: ../../../AMDGPUUsage.rst:1092
msgid "``EF_AMDGPU_MACH_R600_RV770``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1092
msgid "0x007"
msgstr ""

#: ../../../AMDGPUUsage.rst:1093
msgid "``EF_AMDGPU_MACH_R600_CEDAR``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1093
msgid "0x008"
msgstr ""

#: ../../../AMDGPUUsage.rst:1094
msgid "``EF_AMDGPU_MACH_R600_CYPRESS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1094
msgid "0x009"
msgstr ""

#: ../../../AMDGPUUsage.rst:1095
msgid "``EF_AMDGPU_MACH_R600_JUNIPER``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1095
msgid "0x00a"
msgstr ""

#: ../../../AMDGPUUsage.rst:1096
msgid "``EF_AMDGPU_MACH_R600_REDWOOD``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1096
msgid "0x00b"
msgstr ""

#: ../../../AMDGPUUsage.rst:1097
msgid "``EF_AMDGPU_MACH_R600_SUMO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1097
msgid "0x00c"
msgstr ""

#: ../../../AMDGPUUsage.rst:1098
msgid "``EF_AMDGPU_MACH_R600_BARTS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1098
msgid "0x00d"
msgstr ""

#: ../../../AMDGPUUsage.rst:1099
msgid "``EF_AMDGPU_MACH_R600_CAICOS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1099
msgid "0x00e"
msgstr ""

#: ../../../AMDGPUUsage.rst:1100
msgid "``EF_AMDGPU_MACH_R600_CAYMAN``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1100
msgid "0x00f"
msgstr ""

#: ../../../AMDGPUUsage.rst:1101
msgid "``EF_AMDGPU_MACH_R600_TURKS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1101
msgid "0x010"
msgstr ""

#: ../../../AMDGPUUsage.rst:1102 ../../../AMDGPUUsage.rst:1111
#: ../../../AMDGPUUsage.rst:1254 ../../../AMDGPUUsage.rst:1411
#: ../../../AMDGPUUsage.rst:1540
msgid "*reserved*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1102
msgid "0x011 - 0x01f"
msgstr ""

#: ../../../AMDGPUUsage.rst:1102
msgid "Reserved for ``r600`` architecture processors."
msgstr ""

#: ../../../AMDGPUUsage.rst:1104
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1104
msgid "0x020"
msgstr ""

#: ../../../AMDGPUUsage.rst:1105
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX601``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1105
msgid "0x021"
msgstr ""

#: ../../../AMDGPUUsage.rst:1106
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX700``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1106
msgid "0x022"
msgstr ""

#: ../../../AMDGPUUsage.rst:1107
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX701``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1107
msgid "0x023"
msgstr ""

#: ../../../AMDGPUUsage.rst:1108
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX702``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1108
msgid "0x024"
msgstr ""

#: ../../../AMDGPUUsage.rst:1109
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX703``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1109
msgid "0x025"
msgstr ""

#: ../../../AMDGPUUsage.rst:1110
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX704``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1110
msgid "0x026"
msgstr ""

#: ../../../AMDGPUUsage.rst:1111
msgid "0x027"
msgstr ""

#: ../../../AMDGPUUsage.rst:1111 ../../../AMDGPUUsage.rst:8026
#: ../../../AMDGPUUsage.rst:8027 ../../../AMDGPUUsage.rst:8028
#: ../../../AMDGPUUsage.rst:8029 ../../../AMDGPUUsage.rst:8030
#: ../../../AMDGPUUsage.rst:8031 ../../../AMDGPUUsage.rst:8032
#: ../../../AMDGPUUsage.rst:8068 ../../../AMDGPUUsage.rst:8069
#: ../../../AMDGPUUsage.rst:8070 ../../../AMDGPUUsage.rst:8071
#: ../../../AMDGPUUsage.rst:8072 ../../../AMDGPUUsage.rst:8073
#: ../../../AMDGPUUsage.rst:8074 ../../../AMDGPUUsage.rst:8109
#: ../../../AMDGPUUsage.rst:8110 ../../../AMDGPUUsage.rst:8111
#: ../../../AMDGPUUsage.rst:8112 ../../../AMDGPUUsage.rst:8113
#: ../../../AMDGPUUsage.rst:8114 ../../../AMDGPUUsage.rst:8115
msgid "Reserved."
msgstr ""

#: ../../../AMDGPUUsage.rst:1112
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX801``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1112
msgid "0x028"
msgstr ""

#: ../../../AMDGPUUsage.rst:1113
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX802``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1113
msgid "0x029"
msgstr ""

#: ../../../AMDGPUUsage.rst:1114
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX803``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1114
msgid "0x02a"
msgstr ""

#: ../../../AMDGPUUsage.rst:1115
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX810``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1115
msgid "0x02b"
msgstr ""

#: ../../../AMDGPUUsage.rst:1116
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX900``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1116
msgid "0x02c"
msgstr ""

#: ../../../AMDGPUUsage.rst:1117
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX902``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1117
msgid "0x02d"
msgstr ""

#: ../../../AMDGPUUsage.rst:1118
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX904``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1118
msgid "0x02e"
msgstr ""

#: ../../../AMDGPUUsage.rst:1119
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX906``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1119
msgid "0x02f"
msgstr ""

#: ../../../AMDGPUUsage.rst:1120
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX908``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1120
msgid "0x030"
msgstr ""

#: ../../../AMDGPUUsage.rst:1121
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX909``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1121
msgid "0x031"
msgstr ""

#: ../../../AMDGPUUsage.rst:1122
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX90C``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1122
msgid "0x032"
msgstr ""

#: ../../../AMDGPUUsage.rst:1123
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1010``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1123
msgid "0x033"
msgstr ""

#: ../../../AMDGPUUsage.rst:1124
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1011``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1124
msgid "0x034"
msgstr ""

#: ../../../AMDGPUUsage.rst:1125
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1012``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1125
msgid "0x035"
msgstr ""

#: ../../../AMDGPUUsage.rst:1126
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1030``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1126
msgid "0x036"
msgstr ""

#: ../../../AMDGPUUsage.rst:1127
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1031``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1127
msgid "0x037"
msgstr ""

#: ../../../AMDGPUUsage.rst:1128
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1032``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1128
msgid "0x038"
msgstr ""

#: ../../../AMDGPUUsage.rst:1129
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1033``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1129
msgid "0x039"
msgstr ""

#: ../../../AMDGPUUsage.rst:1130
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX602``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1130
msgid "0x03a"
msgstr ""

#: ../../../AMDGPUUsage.rst:1131
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX705``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1131
msgid "0x03b"
msgstr ""

#: ../../../AMDGPUUsage.rst:1132
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX805``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1132
msgid "0x03c"
msgstr ""

#: ../../../AMDGPUUsage.rst:1136
msgid "Sections"
msgstr ""

#: ../../../AMDGPUUsage.rst:1138
msgid ""
"An AMDGPU target ELF code object has the standard ELF sections which include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1140
msgid "AMDGPU ELF Sections"
msgstr ""

#: ../../../AMDGPUUsage.rst:1144 ../../../AMDGPUUsage.rst:1232
#: ../../../AMDGPUUsage.rst:1397 ../../../AMDGPUUsage.rst:1433
msgid "Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:1144
msgid "Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:1146 ../../../AMDGPUUsage.rst:1437
msgid "``.bss``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1146
msgid "``SHT_NOBITS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1146 ../../../AMDGPUUsage.rst:1147
#: ../../../AMDGPUUsage.rst:1152
msgid "``SHF_ALLOC`` + ``SHF_WRITE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1147 ../../../AMDGPUUsage.rst:1435
msgid "``.data``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1147 ../../../AMDGPUUsage.rst:1148
#: ../../../AMDGPUUsage.rst:1150 ../../../AMDGPUUsage.rst:1151
#: ../../../AMDGPUUsage.rst:1152 ../../../AMDGPUUsage.rst:1157
#: ../../../AMDGPUUsage.rst:1161
msgid "``SHT_PROGBITS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1148
msgid "``.debug_``\\ *\\**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1149
msgid "``.dynamic``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1149
msgid "``SHT_DYNAMIC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1149 ../../../AMDGPUUsage.rst:1150
#: ../../../AMDGPUUsage.rst:1151 ../../../AMDGPUUsage.rst:1153
#: ../../../AMDGPUUsage.rst:1157
msgid "``SHF_ALLOC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1150
msgid "``.dynstr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1151
msgid "``.dynsym``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1152
msgid "``.got``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1153
msgid "``.hash``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1153
msgid "``SHT_HASH``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1154 ../../../AMDGPUUsage.rst:1176
msgid "``.note``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1154
msgid "``SHT_NOTE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1155
msgid "``.rela``\\ *name*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1155 ../../../AMDGPUUsage.rst:1156
msgid "``SHT_RELA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1156
msgid "``.rela.dyn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1157 ../../../AMDGPUUsage.rst:1436
#: ../../../AMDGPUUsage.rst:1438
msgid "``.rodata``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1158
msgid "``.shstrtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1158 ../../../AMDGPUUsage.rst:1159
msgid "``SHT_STRTAB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1159
msgid "``.strtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1160
msgid "``.symtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1160
msgid "``SHT_SYMTAB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1161 ../../../AMDGPUUsage.rst:1192
#: ../../../AMDGPUUsage.rst:1439
msgid "``.text``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1161
msgid "``SHF_ALLOC`` + ``SHF_EXECINSTR``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1164
msgid ""
"These sections have their standard meanings (see [ELF]_) and are only "
"generated if needed."
msgstr ""

#: ../../../AMDGPUUsage.rst:1169
msgid "``.debug``\\ *\\**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1168
msgid ""
"The standard DWARF sections. See :ref:`amdgpu-dwarf-debug-information` for "
"information on the DWARF produced by the AMDGPU backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:1172
msgid "``.dynamic``, ``.dynstr``, ``.dynsym``, ``.hash``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1172
msgid "The standard sections used by a dynamic loader."
msgstr ""

#: ../../../AMDGPUUsage.rst:1175
msgid ""
"See :ref:`amdgpu-note-records` for the note records supported by the AMDGPU "
"backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:1187
msgid "``.rela``\\ *name*, ``.rela.dyn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1179
msgid ""
"For relocatable code objects, *name* is the name of the section that the "
"relocation records apply. For example, ``.rela.text`` is the section name "
"for relocation records associated with the ``.text`` section."
msgstr ""

#: ../../../AMDGPUUsage.rst:1183
msgid ""
"For linked shared code objects, ``.rela.dyn`` contains all the relocation "
"records from each of the relocatable code object's ``.rela``\\ *name* "
"sections."
msgstr ""

#: ../../../AMDGPUUsage.rst:1186
msgid ""
"See :ref:`amdgpu-relocation-records` for the relocation records supported by "
"the AMDGPU backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:1190
msgid ""
"The executable machine code for the kernels and functions they call. "
"Generated as position independent code. See :ref:`amdgpu-code-conventions` "
"for information on conventions used in the isa generation."
msgstr ""

#: ../../../AMDGPUUsage.rst:1197
msgid "Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1199
msgid ""
"The AMDGPU backend code object contains ELF note records in the ``.note`` "
"section. The set of generated notes and their semantics depend on the code "
"object version; see :ref:`amdgpu-note-records-v2` and :ref:`amdgpu-note-"
"records-v3-v4`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1204
msgid ""
"As required by ``ELFCLASS32`` and ``ELFCLASS64``, minimal zero-byte padding "
"must be generated after the ``name`` field to ensure the ``desc`` field is 4 "
"byte aligned. In addition, minimal zero-byte padding must be generated to "
"ensure the ``desc`` field size is a multiple of 4 bytes. The "
"``sh_addralign`` field of the ``.note`` section must be at least 4 to "
"indicate at least 8 byte alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:1214
msgid "Code Object V2 Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1217 ../../../AMDGPUUsage.rst:2481
#: ../../../AMDGPUUsage.rst:8984 ../../../AMDGPUUsage.rst:9040
msgid ""
"Code object V2 is not the default code object version emitted by this "
"version of LLVM."
msgstr ""

#: ../../../AMDGPUUsage.rst:1220
msgid ""
"The AMDGPU backend code object uses the following ELF note record in the ``."
"note`` section when compiling for code object V2."
msgstr ""

#: ../../../AMDGPUUsage.rst:1223
msgid "The note record vendor field is \"AMD\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1225 ../../../AMDGPUUsage.rst:1390
msgid ""
"Additional note records may be present, but any which are not documented "
"here are deprecated and should not be used."
msgstr ""

#: ../../../AMDGPUUsage.rst:1228
msgid "AMDGPU Code Object V2 ELF Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1234 ../../../AMDGPUUsage.rst:1235
#: ../../../AMDGPUUsage.rst:1237 ../../../AMDGPUUsage.rst:1238
#: ../../../AMDGPUUsage.rst:1240
msgid "\"AMD\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1234 ../../../AMDGPUUsage.rst:1251
#: ../../../AMDGPUUsage.rst:1270
msgid "``NT_AMD_HSA_CODE_OBJECT_VERSION``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1234
msgid "Code object version."
msgstr ""

#: ../../../AMDGPUUsage.rst:1235 ../../../AMDGPUUsage.rst:1252
#: ../../../AMDGPUUsage.rst:1284
msgid "``NT_AMD_HSA_HSAIL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1235
msgid ""
"HSAIL properties generated by the HSAIL Finalizer and not the LLVM compiler."
msgstr ""

#: ../../../AMDGPUUsage.rst:1237 ../../../AMDGPUUsage.rst:1253
#: ../../../AMDGPUUsage.rst:1325
msgid "``NT_AMD_HSA_ISA_VERSION``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1237
msgid "Target ISA version."
msgstr ""

#: ../../../AMDGPUUsage.rst:1238 ../../../AMDGPUUsage.rst:1255
#: ../../../AMDGPUUsage.rst:1378
msgid "``NT_AMD_HSA_METADATA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1238
msgid "Metadata null terminated string in YAML [YAML]_ textual format."
msgstr ""

#: ../../../AMDGPUUsage.rst:1240 ../../../AMDGPUUsage.rst:1256
#: ../../../AMDGPUUsage.rst:1339
msgid "``NT_AMD_HSA_ISA_NAME``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1240
msgid "Target ISA name."
msgstr ""

#: ../../../AMDGPUUsage.rst:1245
msgid "AMDGPU Code Object V2 ELF Note Record Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:1254
msgid "4-9"
msgstr ""

#: ../../../AMDGPUUsage.rst:1255 ../../../AMDGPUUsage.rst:1538
#: ../../../AMDGPUUsage.rst:4003
msgid "10"
msgstr ""

#: ../../../AMDGPUUsage.rst:1256 ../../../AMDGPUUsage.rst:1539
msgid "11"
msgstr ""

#: ../../../AMDGPUUsage.rst:1260
msgid ""
"Specifies the code object version number. The description field has the "
"following layout:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1270
msgid "The ``major_version`` has a value less than or equal to 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:1273
msgid ""
"Specifies the HSAIL properties used by the HSAIL Finalizer. The description "
"field has the following layout:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1287
msgid ""
"Specifies the target ISA version. The description field has the following "
"layout:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1300
msgid ""
"``vendor_name_size`` and ``architecture_name_size`` are the length of the "
"vendor and architecture names respectively, including the NUL character."
msgstr ""

#: ../../../AMDGPUUsage.rst:1303
msgid ""
"``vendor_and_architecture_name`` contains the NUL terminates string for the "
"vendor, immediately followed by the NUL terminated string for the "
"architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:1307
msgid "This note record is used by the HSA runtime loader."
msgstr ""

#: ../../../AMDGPUUsage.rst:1309
msgid ""
"Code object V2 only supports a limited number of processors and has fixed "
"settings for target features. See :ref:`amdgpu-elf-note-record-"
"supported_processors-v2-table` for a list of processors and the "
"corresponding target ID. In the table the note record ISA name is a "
"concatenation of the vendor name, architecture name, major, minor, and "
"stepping separated by a \":\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1316
msgid ""
"The target ID column shows the processor name and fixed target features used "
"by the LLVM compiler. The LLVM compiler does not generate a "
"``NT_AMD_HSA_HSAIL`` note record."
msgstr ""

#: ../../../AMDGPUUsage.rst:1320
msgid ""
"A code object generated by the Finalizer also uses code object V2 and always "
"generates a ``NT_AMD_HSA_HSAIL`` note record. The processor name and "
"``sramecc`` target feature is as shown in :ref:`amdgpu-elf-note-record-"
"supported_processors-v2-table` but the ``xnack`` target feature is specified "
"by the ``EF_AMDGPU_FEATURE_XNACK_V2`` ``e_flags`` bit."
msgstr ""

#: ../../../AMDGPUUsage.rst:1328
msgid "Specifies the target ISA name as a non-NUL terminated string."
msgstr ""

#: ../../../AMDGPUUsage.rst:1330
msgid "This note record is not used by the HSA runtime loader."
msgstr ""

#: ../../../AMDGPUUsage.rst:1332
msgid ""
"See the ``NT_AMD_HSA_ISA_VERSION`` note record description of the code "
"object V2's limited support of processors and fixed settings for target "
"features."
msgstr ""

#: ../../../AMDGPUUsage.rst:1335
msgid ""
"See :ref:`amdgpu-elf-note-record-supported_processors-v2-table` for a "
"mapping from the string to the corresponding target ID. If the ``xnack`` "
"target feature is supported and enabled, the string produced by the LLVM "
"compiler will may have a ``+xnack`` appended. The Finlizer did not do the "
"appending and instead used the ``EF_AMDGPU_FEATURE_XNACK_V2`` ``e_flags`` "
"bit."
msgstr ""

#: ../../../AMDGPUUsage.rst:1342
msgid ""
"Specifies extensible metadata associated with the code objects executed on "
"HSA [HSA]_ compatible runtimes (see :ref:`amdgpu-os`). It is required when "
"the target triple OS is ``amdhsa`` (see :ref:`amdgpu-target-triples`). See :"
"ref:`amdgpu-amdhsa-code-object-metadata-v2` for the syntax of the code "
"object metadata string."
msgstr ""

#: ../../../AMDGPUUsage.rst:1348
msgid ""
"AMDGPU Code Object V2 Supported Processors and Fixed Target Feature Settings"
msgstr ""

#: ../../../AMDGPUUsage.rst:1352
msgid "Note Record ISA Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:1354
msgid "``AMD:AMDGPU:6:0:0``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1355
msgid "``AMD:AMDGPU:6:0:1``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1356
msgid "``AMD:AMDGPU:6:0:2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1357
msgid "``AMD:AMDGPU:7:0:0``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1358
msgid "``AMD:AMDGPU:7:0:1``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1359
msgid "``AMD:AMDGPU:7:0:2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1360
msgid "``AMD:AMDGPU:7:0:3``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1361
msgid "``AMD:AMDGPU:7:0:4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1362
msgid "``AMD:AMDGPU:7:0:5``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1363
msgid "``AMD:AMDGPU:8:0:0``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1364
msgid "``AMD:AMDGPU:8:0:1``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1364
msgid "``gfx801:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1365
msgid "``AMD:AMDGPU:8:0:2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1366
msgid "``AMD:AMDGPU:8:0:3``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1367
msgid "``AMD:AMDGPU:8:0:4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1368
msgid "``AMD:AMDGPU:8:0:5``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1369
msgid "``AMD:AMDGPU:8:1:0``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1369
msgid "``gfx810:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1370
msgid "``AMD:AMDGPU:9:0:0``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1370
msgid "``gfx900:xnack-``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1371
msgid "``AMD:AMDGPU:9:0:1``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1371
msgid "``gfx900:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1372
msgid "``AMD:AMDGPU:9:0:2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1372
msgid "``gfx902:xnack-``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1373
msgid "``AMD:AMDGPU:9:0:3``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1373
msgid "``gfx902:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1374
msgid "``AMD:AMDGPU:9:0:4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1374
msgid "``gfx904:xnack-``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1375
msgid "``AMD:AMDGPU:9:0:5``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1375
msgid "``gfx904:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1376
msgid "``AMD:AMDGPU:9:0:6``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1376
msgid "``gfx906:sramecc-:xnack-``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1377
msgid "``AMD:AMDGPU:9:0:7``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1377
msgid "``gfx906:sramecc-:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1383
msgid "Code Object V3 to V4 Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1385
msgid ""
"The AMDGPU backend code object uses the following ELF note record in the ``."
"note`` section when compiling for code object V3 to V4."
msgstr ""

#: ../../../AMDGPUUsage.rst:1388
msgid "The note record vendor field is \"AMDGPU\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1393
msgid "AMDGPU Code Object V3 to V4 ELF Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1399
msgid "\"AMDGPU\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1399 ../../../AMDGPUUsage.rst:1412
#: ../../../AMDGPUUsage.rst:1420
msgid "``NT_AMDGPU_METADATA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1399
msgid "Metadata in Message Pack [MsgPack]_ binary format."
msgstr ""

#: ../../../AMDGPUUsage.rst:1405
msgid "AMDGPU Code Object V3 to V4 ELF Note Record Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:1411
msgid "0-31"
msgstr ""

#: ../../../AMDGPUUsage.rst:1416
msgid ""
"Specifies extensible metadata associated with an AMDGPU code object. It is "
"encoded as a map in the Message Pack [MsgPack]_ binary data format. See :ref:"
"`amdgpu-amdhsa-code-object-metadata-v3` and :ref:`amdgpu-amdhsa-code-object-"
"metadata-v4` for the map keys defined for the ``amdhsa`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:1425
msgid "Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:1427
msgid "Symbols include the following:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1429
msgid "AMDGPU ELF Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:1433
msgid "Section"
msgstr ""

#: ../../../AMDGPUUsage.rst:1435 ../../../AMDGPUUsage.rst:1439
#: ../../../AMDGPUUsage.rst:1440
msgid "*link-name*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1435 ../../../AMDGPUUsage.rst:1438
#: ../../../AMDGPUUsage.rst:1440
msgid "``STT_OBJECT``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1435 ../../../AMDGPUUsage.rst:1461
msgid "Global variable"
msgstr ""

#: ../../../AMDGPUUsage.rst:1438
msgid "*link-name*\\ ``.kd``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1438 ../../../AMDGPUUsage.rst:1467
msgid "Kernel descriptor"
msgstr ""

#: ../../../AMDGPUUsage.rst:1439
msgid "``STT_FUNC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1439 ../../../AMDGPUUsage.rst:1470
msgid "Kernel entry point"
msgstr ""

#: ../../../AMDGPUUsage.rst:1440
msgid "SHN_AMDGPU_LDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:1440
msgid "Global variable in LDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:1444
msgid "Global variables both used and defined by the compilation unit."
msgstr ""

#: ../../../AMDGPUUsage.rst:1446
msgid ""
"If the symbol is defined in the compilation unit then it is allocated in the "
"appropriate section according to if it has initialized data or is readonly."
msgstr ""

#: ../../../AMDGPUUsage.rst:1449
msgid ""
"If the symbol is external then its section is ``STN_UNDEF`` and the loader "
"will resolve relocations using the definition provided by another code "
"object or explicitly defined by the runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:1453
msgid ""
"If the symbol resides in local/group memory (LDS) then its section is the "
"special processor specific section name ``SHN_AMDGPU_LDS``, and the "
"``st_value`` field describes alignment requirements as it does for common "
"symbols."
msgstr ""

#: ../../../AMDGPUUsage.rst:1460
msgid ""
"Add description of linked shared object symbols. Seems undefined symbols are "
"marked as STT_NOTYPE."
msgstr ""

#: ../../../AMDGPUUsage.rst:1464
msgid ""
"Every HSA kernel has an associated kernel descriptor. It is the address of "
"the kernel descriptor that is used in the AQL dispatch packet used to invoke "
"the kernel, not the kernel entry point. The layout of the HSA kernel "
"descriptor is defined in :ref:`amdgpu-amdhsa-kernel-descriptor`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1470
msgid "Every HSA kernel also has a symbol for its machine code entry point."
msgstr ""

#: ../../../AMDGPUUsage.rst:1475
msgid "Relocation Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1477
msgid ""
"AMDGPU backend generates ``Elf64_Rela`` relocation records. Supported "
"relocatable fields are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1483 ../../../AMDGPUUsage.rst:1525
#: ../../../AMDGPUUsage.rst:1527 ../../../AMDGPUUsage.rst:1531
#: ../../../AMDGPUUsage.rst:1533 ../../../AMDGPUUsage.rst:1535
#: ../../../AMDGPUUsage.rst:1536 ../../../AMDGPUUsage.rst:1537
#: ../../../AMDGPUUsage.rst:1538 ../../../AMDGPUUsage.rst:1539
msgid "``word32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1481
msgid ""
"This specifies a 32-bit field occupying 4 bytes with arbitrary byte "
"alignment. These values use the same byte order as other word values in the "
"AMDGPU architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:1488 ../../../AMDGPUUsage.rst:1529
#: ../../../AMDGPUUsage.rst:1532 ../../../AMDGPUUsage.rst:1541
msgid "``word64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1486
msgid ""
"This specifies a 64-bit field occupying 8 bytes with arbitrary byte "
"alignment. These values use the same byte order as other word values in the "
"AMDGPU architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:1490
msgid "Following notations are used for specifying relocation calculations:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1493
msgid "**A**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1493
msgid ""
"Represents the addend used to compute the value of the relocatable field."
msgstr ""

#: ../../../AMDGPUUsage.rst:1497
msgid "**G**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1496
msgid ""
"Represents the offset into the global offset table at which the relocation "
"entry's symbol will reside during execution."
msgstr ""

#: ../../../AMDGPUUsage.rst:1500
msgid "**GOT**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1500
msgid "Represents the address of the global offset table."
msgstr ""

#: ../../../AMDGPUUsage.rst:1504
msgid "**P**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1503
msgid ""
"Represents the place (section offset for ``et_rel`` or address for "
"``et_dyn``) of the storage unit being relocated (computed using "
"``r_offset``)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1509
msgid "**S**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1507
msgid ""
"Represents the value of the symbol whose index resides in the relocation "
"entry. Relocations not using this must specify a symbol index of "
"``STN_UNDEF``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1514
msgid "**B**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1512
msgid ""
"Represents the base address of a loaded executable or shared object which is "
"the difference between the ELF address and the actual load address. "
"Relocations using this are only valid in executable or shared objects."
msgstr ""

#: ../../../AMDGPUUsage.rst:1516
msgid "The following relocation types are supported:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1518
msgid "AMDGPU ELF Relocation Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1522
msgid "Relocation Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:1522
msgid "Kind"
msgstr ""

#: ../../../AMDGPUUsage.rst:1522
msgid "Calculation"
msgstr ""

#: ../../../AMDGPUUsage.rst:1524
msgid "``R_AMDGPU_NONE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1525
msgid "``R_AMDGPU_ABS32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1525 ../../../AMDGPUUsage.rst:1527
#: ../../../AMDGPUUsage.rst:1529 ../../../AMDGPUUsage.rst:1533
msgid "Static, Dynamic"
msgstr ""

#: ../../../AMDGPUUsage.rst:1525
msgid "(S + A) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1527
msgid "``R_AMDGPU_ABS32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1527
msgid "(S + A) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1529
msgid "``R_AMDGPU_ABS64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1529 ../../../AMDGPUUsage.rst:1533
msgid "S + A"
msgstr ""

#: ../../../AMDGPUUsage.rst:1531
msgid "``R_AMDGPU_REL32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1531 ../../../AMDGPUUsage.rst:1532
#: ../../../AMDGPUUsage.rst:1535 ../../../AMDGPUUsage.rst:1536
#: ../../../AMDGPUUsage.rst:1537 ../../../AMDGPUUsage.rst:1538
#: ../../../AMDGPUUsage.rst:1539
msgid "Static"
msgstr ""

#: ../../../AMDGPUUsage.rst:1531 ../../../AMDGPUUsage.rst:1532
msgid "S + A - P"
msgstr ""

#: ../../../AMDGPUUsage.rst:1532
msgid "``R_AMDGPU_REL64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1533
msgid "``R_AMDGPU_ABS32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1535
msgid "``R_AMDGPU_GOTPCREL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1535
msgid "G + GOT + A - P"
msgstr ""

#: ../../../AMDGPUUsage.rst:1536
msgid "``R_AMDGPU_GOTPCREL32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1536 ../../../AMDGPUUsage.rst:3987
#: ../../../AMDGPUUsage.rst:8708 ../../../AMDGPUUsage.rst:8709
#: ../../../AMDGPUUsage.rst:8710 ../../../AMDGPUUsage.rst:8711
#: ../../../AMDGPUUsage.rst:8712 ../../../AMDGPUUsage.rst:8714
#: ../../../AMDGPUUsage.rst:8716
msgid "8"
msgstr ""

#: ../../../AMDGPUUsage.rst:1536
msgid "(G + GOT + A - P) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1537
msgid "``R_AMDGPU_GOTPCREL32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1537 ../../../AMDGPUUsage.rst:3995
msgid "9"
msgstr ""

#: ../../../AMDGPUUsage.rst:1537
msgid "(G + GOT + A - P) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1538
msgid "``R_AMDGPU_REL32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1538
msgid "(S + A - P) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1539
msgid "``R_AMDGPU_REL32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1539
msgid "(S + A - P) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1540 ../../../AMDGPUUsage.rst:8558
msgid "12"
msgstr ""

#: ../../../AMDGPUUsage.rst:1541
msgid "``R_AMDGPU_RELATIVE64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1541
msgid "Dynamic"
msgstr ""

#: ../../../AMDGPUUsage.rst:1541 ../../../AMDGPUUsage.rst:4018
msgid "13"
msgstr ""

#: ../../../AMDGPUUsage.rst:1541
msgid "B + A"
msgstr ""

#: ../../../AMDGPUUsage.rst:1544
msgid ""
"``R_AMDGPU_ABS32_LO`` and ``R_AMDGPU_ABS32_HI`` are only supported by the "
"``mesa3d`` OS, which does not support ``R_AMDGPU_ABS64``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1547
msgid ""
"There is no current OS loader support for 32-bit programs and so "
"``R_AMDGPU_ABS32`` is not used."
msgstr ""

#: ../../../AMDGPUUsage.rst:1553
msgid "Loaded Code Object Path Uniform Resource Identifier (URI)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1555
msgid ""
"The AMD GPU code object loader represents the path of the ELF shared object "
"from which the code object was loaded as a textual Unifom Resource "
"Identifier (URI). Note that the code object is the in memory loaded "
"relocated form of the ELF shared object.  Multiple code objects may be "
"loaded at different memory addresses in the same process from the same ELF "
"shared object."
msgstr ""

#: ../../../AMDGPUUsage.rst:1561
msgid ""
"The loaded code object path URI syntax is defined by the following BNF "
"syntax:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1575
msgid "**number**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1574
msgid ""
"Is a C integral literal where hexadecimal values are prefixed by \"0x\" or "
"\"0X\", and octal values by \"0\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1581
msgid "**file_path**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1578
msgid ""
"Is the file's path specified as a URI encoded UTF-8 string. In URI encoding, "
"every character that is not in the regular expression ``[a-zA-Z0-9/_.~-]`` "
"is encoded as two uppercase hexadecimal digits proceeded by \"%\".  "
"Directories in the path are separated by \"/\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1586
msgid "**offset**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1584
msgid ""
"Is a 0-based byte offset to the start of the code object.  For a file URI, "
"it is from the start of the file specified by the ``file_path``, and if "
"omitted defaults to 0. For a memory URI, it is the memory address and is "
"required."
msgstr ""

#: ../../../AMDGPUUsage.rst:1590
msgid "**size**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1589
msgid ""
"Is the number of bytes in the code object.  For a file URI, if omitted it "
"defaults to the size of the file.  It is required for a memory URI."
msgstr ""

#: ../../../AMDGPUUsage.rst:1594
msgid "**process_id**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1593
msgid ""
"Is the identity of the process owning the memory.  For Linux it is the C "
"unsigned integral decimal literal for the process ID (PID)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1607
msgid "DWARF Debug Information"
msgstr ""

#: ../../../AMDGPUUsage.rst:1611
msgid ""
"This section describes **provisional support** for AMDGPU DWARF [DWARF]_ "
"that is not currently fully implemented and is subject to change."
msgstr ""

#: ../../../AMDGPUUsage.rst:1614
msgid ""
"AMDGPU generates DWARF [DWARF]_ debugging information ELF sections (see :ref:"
"`amdgpu-elf-code-object`) which contain information that maps the code "
"object executable code and data to the source language constructs. It can be "
"used by tools such as debuggers and profilers. It uses features defined in :"
"doc:`AMDGPUDwarfExtensionsForHeterogeneousDebugging` that are made available "
"in DWARF Version 4 and DWARF Version 5 as an LLVM vendor extension."
msgstr ""

#: ../../../AMDGPUUsage.rst:1621
msgid ""
"This section defines the AMDGPU target architecture specific DWARF mappings."
msgstr ""

#: ../../../AMDGPUUsage.rst:1626
msgid "Register Identifier"
msgstr ""

#: ../../../AMDGPUUsage.rst:1628
msgid ""
"This section defines the AMDGPU target architecture register numbers used in "
"DWARF operation expressions (see DWARF Version 5 section 2.5 and :ref:"
"`amdgpu-dwarf-operation-expressions`) and Call Frame Information "
"instructions (see DWARF Version 5 section 6.4 and :ref:`amdgpu-dwarf-call-"
"frame-information`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1634
msgid ""
"A single code object can contain code for kernels that have different "
"wavefront sizes. The vector registers and some scalar registers are based on "
"the wavefront size. AMDGPU defines distinct DWARF registers for each "
"wavefront size. This simplifies the consumer of the DWARF so that each "
"register has a fixed size, rather than being dynamic according to the "
"wavefront size mode. Similarly, distinct DWARF registers are defined for "
"those registers that vary in size according to the process address size. "
"This allows a consumer to treat a specific AMDGPU processor as a single "
"architecture regardless of how it is configured at run time. The compiler "
"explicitly specifies the DWARF registers that match the mode in which the "
"code it is generating will be executed."
msgstr ""

#: ../../../AMDGPUUsage.rst:1645
msgid ""
"DWARF registers are encoded as numbers, which are mapped to architecture "
"registers. The mapping for AMDGPU is defined in :ref:`amdgpu-dwarf-register-"
"mapping-table`. All AMDGPU targets use the same mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:1650
msgid "AMDGPU DWARF Register Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:1654
msgid "DWARF Register"
msgstr ""

#: ../../../AMDGPUUsage.rst:1654
msgid "AMDGPU Register"
msgstr ""

#: ../../../AMDGPUUsage.rst:1654 ../../../AMDGPUUsage.rst:1804
msgid "Bit Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:1656
msgid "PC_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1656
msgid ""
"Program Counter (PC) when executing in a 32-bit process address space. Used "
"in the CFI to describe the PC of the calling frame."
msgstr ""

#: ../../../AMDGPUUsage.rst:1661
msgid "EXEC_MASK_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1661
msgid "Execution Mask Register when executing in wavefront 32 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1663
msgid "2-15"
msgstr ""

#: ../../../AMDGPUUsage.rst:1663 ../../../AMDGPUUsage.rst:1672
#: ../../../AMDGPUUsage.rst:1676 ../../../AMDGPUUsage.rst:1679
#: ../../../AMDGPUUsage.rst:1684 ../../../AMDGPUUsage.rst:1690
#: ../../../AMDGPUUsage.rst:1693 ../../../AMDGPUUsage.rst:1695
#: ../../../AMDGPUUsage.rst:1700 ../../../AMDGPUUsage.rst:1706
#: ../../../AMDGPUUsage.rst:1712 ../../../AMDGPUUsage.rst:1718
#: ../../../AMDGPUUsage.rst:1815
msgid "*Reserved*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1663 ../../../AMDGPUUsage.rst:1672
msgid "*Reserved for highly accessed registers using DWARF shortcut.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1665
msgid "16"
msgstr ""

#: ../../../AMDGPUUsage.rst:1665
msgid "PC_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:1665
msgid ""
"Program Counter (PC) when executing in a 64-bit process address space. Used "
"in the CFI to describe the PC of the calling frame."
msgstr ""

#: ../../../AMDGPUUsage.rst:1670
msgid "17"
msgstr ""

#: ../../../AMDGPUUsage.rst:1670
msgid "EXEC_MASK_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:1670
msgid "Execution Mask Register when executing in wavefront 64 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1672
msgid "18-31"
msgstr ""

#: ../../../AMDGPUUsage.rst:1674
msgid "32-95"
msgstr ""

#: ../../../AMDGPUUsage.rst:1674
msgid "SGPR0-SGPR63"
msgstr ""

#: ../../../AMDGPUUsage.rst:1674 ../../../AMDGPUUsage.rst:1694
msgid "Scalar General Purpose Registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:1676
msgid "96-127"
msgstr ""

#: ../../../AMDGPUUsage.rst:1676
msgid "*Reserved for frequently accessed registers using DWARF 1-byte ULEB.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1678
msgid "128"
msgstr ""

#: ../../../AMDGPUUsage.rst:1678
msgid "STATUS"
msgstr ""

#: ../../../AMDGPUUsage.rst:1678
msgid "Status Register."
msgstr ""

#: ../../../AMDGPUUsage.rst:1679
msgid "129-511"
msgstr ""

#: ../../../AMDGPUUsage.rst:1679
msgid "*Reserved for future Scalar Architectural Registers.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1681 ../../../AMDGPUUsage.rst:3656
msgid "512"
msgstr ""

#: ../../../AMDGPUUsage.rst:1681
msgid "VCC_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1681
msgid "Vector Condition Code Register when executing in wavefront 32 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1684
msgid "513-1023"
msgstr ""

#: ../../../AMDGPUUsage.rst:1684
msgid ""
"*Reserved for future Vector Architectural Registers when executing in "
"wavefront 32 mode.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1687
msgid "768"
msgstr ""

#: ../../../AMDGPUUsage.rst:1687
msgid "VCC_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:1687
msgid "Vector Condition Code Register when executing in wavefront 64 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1690
msgid "769-1023"
msgstr ""

#: ../../../AMDGPUUsage.rst:1690
msgid ""
"*Reserved for future Vector Architectural Registers when executing in "
"wavefront 64 mode.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1693
msgid "1024-1087"
msgstr ""

#: ../../../AMDGPUUsage.rst:1693
msgid "*Reserved for padding.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1694
msgid "1088-1129"
msgstr ""

#: ../../../AMDGPUUsage.rst:1694
msgid "SGPR64-SGPR105"
msgstr ""

#: ../../../AMDGPUUsage.rst:1695
msgid "1130-1535"
msgstr ""

#: ../../../AMDGPUUsage.rst:1695
msgid "*Reserved for future Scalar General Purpose Registers.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1697
msgid "1536-1791"
msgstr ""

#: ../../../AMDGPUUsage.rst:1697 ../../../AMDGPUUsage.rst:1709
msgid "VGPR0-VGPR255"
msgstr ""

#: ../../../AMDGPUUsage.rst:1697 ../../../AMDGPUUsage.rst:1703
msgid "32*32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1697
msgid "Vector General Purpose Registers when executing in wavefront 32 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1700
msgid "1792-2047"
msgstr ""

#: ../../../AMDGPUUsage.rst:1700
msgid ""
"*Reserved for future Vector General Purpose Registers when executing in "
"wavefront 32 mode.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1703
msgid "2048-2303"
msgstr ""

#: ../../../AMDGPUUsage.rst:1703 ../../../AMDGPUUsage.rst:1715
msgid "AGPR0-AGPR255"
msgstr ""

#: ../../../AMDGPUUsage.rst:1703
msgid "Vector Accumulation Registers when executing in wavefront 32 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1706
msgid "2304-2559"
msgstr ""

#: ../../../AMDGPUUsage.rst:1706
msgid ""
"*Reserved for future Vector Accumulation Registers when executing in "
"wavefront 32 mode.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1709
msgid "2560-2815"
msgstr ""

#: ../../../AMDGPUUsage.rst:1709 ../../../AMDGPUUsage.rst:1715
msgid "64*32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1709
msgid "Vector General Purpose Registers when executing in wavefront 64 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1712
msgid "2816-3071"
msgstr ""

#: ../../../AMDGPUUsage.rst:1712
msgid ""
"*Reserved for future Vector General Purpose Registers when executing in "
"wavefront 64 mode.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1715
msgid "3072-3327"
msgstr ""

#: ../../../AMDGPUUsage.rst:1715
msgid "Vector Accumulation Registers when executing in wavefront 64 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1718
msgid "3328-3583"
msgstr ""

#: ../../../AMDGPUUsage.rst:1718
msgid ""
"*Reserved for future Vector Accumulation Registers when executing in "
"wavefront 64 mode.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1723
msgid ""
"The vector registers are represented as the full size for the wavefront. "
"They are organized as consecutive dwords (32-bits), one per lane, with the "
"dword at the least significant bit position corresponding to lane 0 and so "
"forth. DWARF location expressions involving the ``DW_OP_LLVM_offset`` and "
"``DW_OP_LLVM_push_lane`` operations are used to select the part of the "
"vector register corresponding to the lane that is executing the current "
"thread of execution in languages that are implemented using a SIMD or SIMT "
"execution model."
msgstr ""

#: ../../../AMDGPUUsage.rst:1732
msgid ""
"If the wavefront size is 32 lanes then the wavefront 32 mode register "
"definitions are used. If the wavefront size is 64 lanes then the wavefront "
"64 mode register definitions are used. Some AMDGPU targets support executing "
"in both wavefront 32 and wavefront 64 mode. The register definitions "
"corresponding to the wavefront mode of the generated code will be used."
msgstr ""

#: ../../../AMDGPUUsage.rst:1738
msgid ""
"If code is generated to execute in a 32-bit process address space, then the "
"32-bit process address space register definitions are used. If code is "
"generated to execute in a 64-bit process address space, then the 64-bit "
"process address space register definitions are used. The ``amdgcn`` target "
"only supports the 64-bit process address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:1747
msgid "Address Class Identifier"
msgstr ""

#: ../../../AMDGPUUsage.rst:1749
msgid ""
"The DWARF address class represents the source language memory space. See "
"DWARF Version 5 section 2.12 which is updated by the *DWARF Extensions For "
"Heterogeneous Debugging* section :ref:`amdgpu-dwarf-segment_addresses`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1753
msgid ""
"The DWARF address class mapping used for AMDGPU is defined in :ref:`amdgpu-"
"dwarf-address-class-mapping-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1756
msgid "AMDGPU DWARF Address Class Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:1760 ../../../AMDGPUUsage.rst:1802
msgid "DWARF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1760 ../../../AMDGPUUsage.rst:1802
msgid "AMDGPU"
msgstr ""

#: ../../../AMDGPUUsage.rst:1762
msgid "Address Class Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:1762 ../../../AMDGPUUsage.rst:1804
msgid "Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:1764
msgid "``DW_ADDR_none``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1764
msgid "0x0000"
msgstr ""

#: ../../../AMDGPUUsage.rst:1764 ../../../AMDGPUUsage.rst:1812
msgid "Generic (Flat)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1765
msgid "``DW_ADDR_LLVM_global``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1765
msgid "0x0001"
msgstr ""

#: ../../../AMDGPUUsage.rst:1766
msgid "``DW_ADDR_LLVM_constant``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1766
msgid "0x0002"
msgstr ""

#: ../../../AMDGPUUsage.rst:1767
msgid "``DW_ADDR_LLVM_group``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1767
msgid "0x0003"
msgstr ""

#: ../../../AMDGPUUsage.rst:1767 ../../../AMDGPUUsage.rst:1814
msgid "Local (group/LDS)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1768
msgid "``DW_ADDR_LLVM_private``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1768
msgid "0x0004"
msgstr ""

#: ../../../AMDGPUUsage.rst:1768 ../../../AMDGPUUsage.rst:1816
#: ../../../AMDGPUUsage.rst:1817
msgid "Private (Scratch)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1769
msgid "``DW_ADDR_AMDGPU_region``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1769
msgid "0x8000"
msgstr ""

#: ../../../AMDGPUUsage.rst:1769 ../../../AMDGPUUsage.rst:1813
msgid "Region (GDS)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1772
msgid ""
"The DWARF address class values defined in the *DWARF Extensions For "
"Heterogeneous Debugging* section :ref:`amdgpu-dwarf-segment_addresses` are "
"used."
msgstr ""

#: ../../../AMDGPUUsage.rst:1775
msgid ""
"In addition, ``DW_ADDR_AMDGPU_region`` is encoded as a vendor extension. "
"This is available for use for the AMD extension for access to the hardware "
"GDS memory which is scratchpad memory allocated per device."
msgstr ""

#: ../../../AMDGPUUsage.rst:1779
msgid ""
"For AMDGPU if no ``DW_AT_address_class`` attribute is present, then the "
"default address class of ``DW_ADDR_none`` is used."
msgstr ""

#: ../../../AMDGPUUsage.rst:1782
msgid ""
"See :ref:`amdgpu-dwarf-address-space-identifier` for information on the "
"AMDGPU mapping of DWARF address classes to DWARF address spaces, including "
"address size and NULL value."
msgstr ""

#: ../../../AMDGPUUsage.rst:1789
msgid "Address Space Identifier"
msgstr ""

#: ../../../AMDGPUUsage.rst:1791
msgid ""
"DWARF address spaces correspond to target architecture specific linear "
"addressable memory areas. See DWARF Version 5 section 2.12 and *DWARF "
"Extensions For Heterogeneous Debugging* section :ref:`amdgpu-dwarf-"
"segment_addresses`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1795
msgid ""
"The DWARF address space mapping used for AMDGPU is defined in :ref:`amdgpu-"
"dwarf-address-space-mapping-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1798
msgid "AMDGPU DWARF Address Space Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:1802
msgid "Notes"
msgstr ""

#: ../../../AMDGPUUsage.rst:1804
msgid "Address"
msgstr ""

#: ../../../AMDGPUUsage.rst:1806
msgid "64-bit process address space"
msgstr ""

#: ../../../AMDGPUUsage.rst:1806
msgid "32-bit process address space"
msgstr ""

#: ../../../AMDGPUUsage.rst:1811
msgid "``DW_ASPACE_none``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1811
msgid "0x00"
msgstr ""

#: ../../../AMDGPUUsage.rst:1811
msgid "*default address space*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1812
msgid "``DW_ASPACE_AMDGPU_generic``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1813
msgid "``DW_ASPACE_AMDGPU_region``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1814
msgid "``DW_ASPACE_AMDGPU_local``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1814
msgid "0x03"
msgstr ""

#: ../../../AMDGPUUsage.rst:1815
msgid "0x04"
msgstr ""

#: ../../../AMDGPUUsage.rst:1816
msgid "``DW_ASPACE_AMDGPU_private_lane``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1816
msgid "0x05"
msgstr ""

#: ../../../AMDGPUUsage.rst:1816
msgid "*focused lane*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1817
msgid "``DW_ASPACE_AMDGPU_private_wave``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1817
msgid "0x06"
msgstr ""

#: ../../../AMDGPUUsage.rst:1817
msgid "*unswizzled wavefront*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1820
msgid ""
"See :ref:`amdgpu-address-spaces` for information on the AMDGPU address "
"spaces including address size and NULL value."
msgstr ""

#: ../../../AMDGPUUsage.rst:1823
msgid ""
"The ``DW_ASPACE_none`` address space is the default target architecture "
"address space used in DWARF operations that do not specify an address space. "
"It therefore has to map to the global address space so that the "
"``DW_OP_addr*`` and related operations can refer to addresses in the program "
"code."
msgstr ""

#: ../../../AMDGPUUsage.rst:1828
msgid ""
"The ``DW_ASPACE_AMDGPU_generic`` address space allows location expressions "
"to specify the flat address space. If the address corresponds to an address "
"in the local address space, then it corresponds to the wavefront that is "
"executing the focused thread of execution. If the address corresponds to an "
"address in the private address space, then it corresponds to the lane that "
"is executing the focused thread of execution for languages that are "
"implemented using a SIMD or SIMT execution model."
msgstr ""

#: ../../../AMDGPUUsage.rst:1838
msgid ""
"CUDA-like languages such as HIP that do not have address spaces in the "
"language type system, but do allow variables to be allocated in different "
"address spaces, need to explicitly specify the ``DW_ASPACE_AMDGPU_generic`` "
"address space in the DWARF expression operations as the default address "
"space is the global address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:1844
msgid ""
"The ``DW_ASPACE_AMDGPU_local`` address space allows location expressions to "
"specify the local address space corresponding to the wavefront that is "
"executing the focused thread of execution."
msgstr ""

#: ../../../AMDGPUUsage.rst:1848
msgid ""
"The ``DW_ASPACE_AMDGPU_private_lane`` address space allows location "
"expressions to specify the private address space corresponding to the lane "
"that is executing the focused thread of execution for languages that are "
"implemented using a SIMD or SIMT execution model."
msgstr ""

#: ../../../AMDGPUUsage.rst:1853
msgid ""
"The ``DW_ASPACE_AMDGPU_private_wave`` address space allows location "
"expressions to specify the unswizzled private address space corresponding to "
"the wavefront that is executing the focused thread of execution. The "
"wavefront view of private memory is the per wavefront unswizzled backing "
"memory layout defined in :ref:`amdgpu-address-spaces`, such that address 0 "
"corresponds to the first location for the backing memory of the wavefront "
"(namely the address is not offset by ``wavefront-scratch-base``). The "
"following formula can be used to convert from a "
"``DW_ASPACE_AMDGPU_private_lane`` address to a "
"``DW_ASPACE_AMDGPU_private_wave`` address:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1869
msgid ""
"If the ``DW_ASPACE_AMDGPU_private_lane`` address is dword aligned, and the "
"start of the dwords for each lane starting with lane 0 is required, then "
"this simplifies to:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1878
msgid ""
"A compiler can use the ``DW_ASPACE_AMDGPU_private_wave`` address space to "
"read a complete spilled vector register back into a complete vector register "
"in the CFI. The frame pointer can be a private lane address which is dword "
"aligned, which can be shifted to multiply by the wavefront size, and then "
"used to form a private wavefront address that gives a location for a "
"contiguous set of dwords, one per lane, where the vector register dwords are "
"spilled. The compiler knows the wavefront size since it generates the code. "
"Note that the type of the address may have to be converted as the size of a "
"``DW_ASPACE_AMDGPU_private_lane`` address may be smaller than the size of a "
"``DW_ASPACE_AMDGPU_private_wave`` address."
msgstr ""

#: ../../../AMDGPUUsage.rst:1892
msgid "Lane identifier"
msgstr ""

#: ../../../AMDGPUUsage.rst:1894
msgid ""
"DWARF lane identifies specify a target architecture lane position for "
"hardware that executes in a SIMD or SIMT manner, and on which a source "
"language maps its threads of execution onto those lanes. The DWARF lane "
"identifier is pushed by the ``DW_OP_LLVM_push_lane`` DWARF expression "
"operation. See DWARF Version 5 section 2.5 which is updated by *DWARF "
"Extensions For Heterogeneous Debugging* section :ref:`amdgpu-dwarf-operation-"
"expressions`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1901
msgid ""
"For AMDGPU, the lane identifier corresponds to the hardware lane ID of a "
"wavefront. It is numbered from 0 to the wavefront size minus 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:1905
msgid "Operation Expressions"
msgstr ""

#: ../../../AMDGPUUsage.rst:1907
msgid ""
"DWARF expressions are used to compute program values and the locations of "
"program objects. See DWARF Version 5 section 2.5 and :ref:`amdgpu-dwarf-"
"operation-expressions`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1911
msgid ""
"DWARF location descriptions describe how to access storage which includes "
"memory and registers. When accessing storage on AMDGPU, bytes are ordered "
"with least significant bytes first, and bits are ordered within bytes with "
"least significant bits first."
msgstr ""

#: ../../../AMDGPUUsage.rst:1916
msgid ""
"For AMDGPU CFI expressions, ``DW_OP_LLVM_select_bit_piece`` is used to "
"describe unwinding vector registers that are spilled under the execution "
"mask to memory: the zero-single location description is the vector register, "
"and the one-single location description is the spilled memory location "
"description. The ``DW_OP_LLVM_form_aspace_address`` is used to specify the "
"address space of the memory location description."
msgstr ""

#: ../../../AMDGPUUsage.rst:1923
msgid ""
"In AMDGPU expressions, ``DW_OP_LLVM_select_bit_piece`` is used by the "
"``DW_AT_LLVM_lane_pc`` attribute expression where divergent control flow is "
"controlled by the execution mask. An undefined location description together "
"with ``DW_OP_LLVM_extend`` is used to indicate the lane was not active on "
"entry to the subprogram. See :ref:`amdgpu-dwarf-dw-at-llvm-lane-pc` for an "
"example."
msgstr ""

#: ../../../AMDGPUUsage.rst:1930
msgid "Debugger Information Entry Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:1932
msgid ""
"This section describes how certain debugger information entry attributes are "
"used by AMDGPU. See the sections in DWARF Version 5 section 2 which are "
"updated by *DWARF Extensions For Heterogeneous Debugging* section :ref:"
"`amdgpu-dwarf-debugging-information-entry-attributes`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1940
msgid "``DW_AT_LLVM_lane_pc``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1942
msgid ""
"For AMDGPU, the ``DW_AT_LLVM_lane_pc`` attribute is used to specify the "
"program location of the separate lanes of a SIMT thread."
msgstr ""

#: ../../../AMDGPUUsage.rst:1945
msgid ""
"If the lane is an active lane then this will be the same as the current "
"program location."
msgstr ""

#: ../../../AMDGPUUsage.rst:1948
msgid ""
"If the lane is inactive, but was active on entry to the subprogram, then "
"this is the program location in the subprogram at which execution of the "
"lane is conceptual positioned."
msgstr ""

#: ../../../AMDGPUUsage.rst:1952
msgid ""
"If the lane was not active on entry to the subprogram, then this will be the "
"undefined location. A client debugger can check if the lane is part of a "
"valid work-group by checking that the lane is in the range of the associated "
"work-group within the grid, accounting for partial work-groups. If it is "
"not, then the debugger can omit any information for the lane. Otherwise, the "
"debugger may repeatedly unwind the stack and inspect the "
"``DW_AT_LLVM_lane_pc`` of the calling subprogram until it finds a non-"
"undefined location. Conceptually the lane only has the call frames that it "
"has a non-undefined ``DW_AT_LLVM_lane_pc``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1962
msgid ""
"The following example illustrates how the AMDGPU backend can generate a "
"DWARF location list expression for the nested ``IF/THEN/ELSE`` structures of "
"the following subprogram pseudo code for a target with 64 lanes per "
"wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:1986
msgid ""
"The AMDGPU backend may generate the following pseudo LLVM MIR to manipulate "
"the execution mask (``EXEC``) to linearize the control flow. The condition "
"is evaluated to make a mask of the lanes for which the condition evaluates "
"to true. First the ``THEN`` region is executed by setting the ``EXEC`` mask "
"to the logical ``AND`` of the current ``EXEC`` mask with the condition mask. "
"Then the ``ELSE`` region is executed by negating the ``EXEC`` mask and "
"logical ``AND`` of the saved ``EXEC`` mask at the start of the region. After "
"the ``IF/THEN/ELSE`` region the ``EXEC`` mask is restored to the value it "
"had at the beginning of the region. This is shown below. Other approaches "
"are possible, but the basic concept is the same."
msgstr ""

#: ../../../AMDGPUUsage.rst:2028
msgid ""
"To create the DWARF location list expression that defines the location "
"description of a vector of lane program locations, the LLVM MIR "
"``DBG_VALUE`` pseudo instruction can be used to annotate the linearized "
"control flow. This can be done by defining an artificial variable for the "
"lane PC. The DWARF location list expression created for it is used as the "
"value of the ``DW_AT_LLVM_lane_pc`` attribute on the subprogram's debugger "
"information entry."
msgstr ""

#: ../../../AMDGPUUsage.rst:2035
msgid ""
"A DWARF procedure is defined for each well nested structured control flow "
"region which provides the conceptual lane program location for a lane if it "
"is not active (namely it is divergent). The DWARF operation expression for "
"each region conceptually inherits the value of the immediately enclosing "
"region and modifies it according to the semantics of the region."
msgstr ""

#: ../../../AMDGPUUsage.rst:2041
msgid ""
"For an ``IF/THEN/ELSE`` region the divergent program location is at the "
"start of the region for the ``THEN`` region since it is executed first. For "
"the ``ELSE`` region the divergent program location is at the end of the ``IF/"
"THEN/ELSE`` region since the ``THEN`` region has completed."
msgstr ""

#: ../../../AMDGPUUsage.rst:2046
msgid ""
"The lane PC artificial variable is assigned at each region transition. It "
"uses the immediately enclosing region's DWARF procedure to compute the "
"program location for each lane assuming they are divergent, and then "
"modifies the result by inserting the current program location for each lane "
"that the ``EXEC`` mask indicates is active."
msgstr ""

#: ../../../AMDGPUUsage.rst:2052
msgid ""
"By having separate DWARF procedures for each region, they can be reused to "
"define the value for any nested region. This reduces the total size of the "
"DWARF operation expressions."
msgstr ""

#: ../../../AMDGPUUsage.rst:2056
msgid "The following provides an example using pseudo LLVM MIR."
msgstr ""

#: ../../../AMDGPUUsage.rst:2188
msgid ""
"The DWARF procedure ``%__active_lane_pc`` is used to update the lane pc "
"elements that are active, with the current program location."
msgstr ""

#: ../../../AMDGPUUsage.rst:2191
msgid ""
"Artificial variables %__lex_1_save_exec and %__lex_1_1_save_exec are created "
"for the execution masks saved on entry to a region. Using the ``DBG_VALUE`` "
"pseudo instruction, location list entries will be created that describe "
"where the artificial variables are allocated at any given program location. "
"The compiler may allocate them to registers or spill them to memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:2197
msgid ""
"The DWARF procedures for each region use the values of the saved execution "
"mask artificial variables to only update the lanes that are active on entry "
"to the region. All other lanes retain the value of the enclosing region "
"where they were last active. If they were not active on entry to the "
"subprogram, then will have the undefined location description."
msgstr ""

#: ../../../AMDGPUUsage.rst:2203
msgid ""
"Other structured control flow regions can be handled similarly. For example, "
"loops would set the divergent program location for the region at the end of "
"the loop. Any lanes active will be in the loop, and any lanes not active "
"must have exited the loop."
msgstr ""

#: ../../../AMDGPUUsage.rst:2208
msgid ""
"An ``IF/THEN/ELSEIF/ELSEIF/...`` region can be treated as a nest of ``IF/"
"THEN/ELSE`` regions."
msgstr ""

#: ../../../AMDGPUUsage.rst:2211
msgid ""
"The DWARF procedures can use the active lane artificial variable described "
"in :ref:`amdgpu-dwarf-amdgpu-dw-at-llvm-active-lane` rather than the actual "
"``EXEC`` mask in order to support whole or quad wavefront mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:2218
msgid "``DW_AT_LLVM_active_lane``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2220
msgid ""
"The ``DW_AT_LLVM_active_lane`` attribute on a subprogram debugger "
"information entry is used to specify the lanes that are conceptually active "
"for a SIMT thread."
msgstr ""

#: ../../../AMDGPUUsage.rst:2224
msgid ""
"The execution mask may be modified to implement whole or quad wavefront mode "
"operations. For example, all lanes may need to temporarily be made active to "
"execute a whole wavefront operation. Such regions would save the ``EXEC`` "
"mask, update it to enable the necessary lanes, perform the operations, and "
"then restore the ``EXEC`` mask from the saved value. While executing the "
"whole wavefront region, the conceptual execution mask is the saved value, "
"not the ``EXEC`` value."
msgstr ""

#: ../../../AMDGPUUsage.rst:2232
msgid ""
"This is handled by defining an artificial variable for the active lane mask. "
"The active lane mask artificial variable would be the actual ``EXEC`` mask "
"for normal regions, and the saved execution mask for regions where the mask "
"is temporarily updated. The location list expression created for this "
"artificial variable is used to define the value of the "
"``DW_AT_LLVM_active_lane`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:2240
msgid "``DW_AT_LLVM_augmentation``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2242
msgid ""
"For AMDGPU, the ``DW_AT_LLVM_augmentation`` attribute of a compilation unit "
"debugger information entry has the following value for the augmentation "
"string:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2249
msgid ""
"The \"vX.Y\" specifies the major X and minor Y version number of the AMDGPU "
"extensions used in the DWARF of the compilation unit. The version number "
"conforms to [SEMVER]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:2254
msgid "Call Frame Information"
msgstr ""

#: ../../../AMDGPUUsage.rst:2256
msgid ""
"DWARF Call Frame Information (CFI) describes how a consumer can virtually "
"*unwind* call frames in a running process or core dump. See DWARF Version 5 "
"section 6.4 and :ref:`amdgpu-dwarf-call-frame-information`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2260
msgid ""
"For AMDGPU, the Common Information Entry (CIE) fields have the following "
"values:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2262
msgid ""
"``augmentation`` string contains the following null-terminated UTF-8 string:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2268
msgid ""
"The ``vX.Y`` specifies the major X and minor Y version number of the AMDGPU "
"extensions used in this CIE or to the FDEs that use it. The version number "
"conforms to [SEMVER]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:2272
msgid ""
"``address_size`` for the ``Global`` address space is defined in :ref:`amdgpu-"
"dwarf-address-space-identifier`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2275
msgid ""
"``segment_selector_size`` is 0 as AMDGPU does not use a segment selector."
msgstr ""

#: ../../../AMDGPUUsage.rst:2277
msgid "``code_alignment_factor`` is 4 bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:2281 ../../../AMDGPUUsage.rst:2287
msgid "Add to :ref:`amdgpu-processor-table` table."
msgstr ""

#: ../../../AMDGPUUsage.rst:2283
msgid "``data_alignment_factor`` is 4 bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:2289
msgid ""
"``return_address_register`` is ``PC_32`` for 32-bit processes and ``PC_64`` "
"for 64-bit processes defined in :ref:`amdgpu-dwarf-register-identifier`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2292
msgid ""
"``initial_instructions`` Since a subprogram X with fewer registers can be "
"called from subprogram Y that has more allocated, X will not change any of "
"the extra registers as it cannot access them. Therefore, the default rule "
"for all columns is ``same value``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2297
msgid ""
"For AMDGPU the register number follows the numbering defined in :ref:`amdgpu-"
"dwarf-register-identifier`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2300
msgid ""
"For AMDGPU the instructions are variable size. A consumer can subtract 1 "
"from the return address to get the address of a byte within the call site "
"instructions. See DWARF Version 5 section 6.4.4."
msgstr ""

#: ../../../AMDGPUUsage.rst:2305
msgid "Accelerated Access"
msgstr ""

#: ../../../AMDGPUUsage.rst:2307
msgid "See DWARF Version 5 section 6.1."
msgstr ""

#: ../../../AMDGPUUsage.rst:2310
msgid "Lookup By Name Section Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:2312
msgid ""
"See DWARF Version 5 section 6.1.1.4.1 and :ref:`amdgpu-dwarf-lookup-by-name`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2314
msgid "For AMDGPU the lookup by name section header table:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2316
msgid "``augmentation_string_size`` (uword)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2318
msgid ""
"Set to the length of the ``augmentation_string`` value which is always a "
"multiple of 4."
msgstr ""

#: ../../../AMDGPUUsage.rst:2321
msgid "``augmentation_string`` (sequence of UTF-8 characters)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2323
msgid ""
"Contains the following UTF-8 string null padded to a multiple of 4 bytes:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2329
msgid ""
"The \"vX.Y\" specifies the major X and minor Y version number of the AMDGPU "
"extensions used in the DWARF of this index. The version number conforms to "
"[SEMVER]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:2335
msgid ""
"This is different to the DWARF Version 5 definition that requires the first "
"4 characters to be the vendor ID. But this is consistent with the other "
"augmentation strings and does allow multiple vendor contributions. However, "
"backwards compatibility may be more desirable."
msgstr ""

#: ../../../AMDGPUUsage.rst:2341
msgid "Lookup By Address Section Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:2343
msgid "See DWARF Version 5 section 6.1.2."
msgstr ""

#: ../../../AMDGPUUsage.rst:2345
msgid "For AMDGPU the lookup by address section header table:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2347 ../../../AMDGPUUsage.rst:2377
#: ../../../AMDGPUUsage.rst:2439
msgid "``address_size`` (ubyte)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2349
msgid ""
"Match the address size for the ``Global`` address space defined in :ref:"
"`amdgpu-dwarf-address-space-identifier`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2352 ../../../AMDGPUUsage.rst:2380
msgid "``segment_selector_size`` (ubyte)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2354
msgid ""
"AMDGPU does not use a segment selector so this is 0. The entries in the ``."
"debug_aranges`` do not have a segment selector."
msgstr ""

#: ../../../AMDGPUUsage.rst:2358
msgid "Line Number Information"
msgstr ""

#: ../../../AMDGPUUsage.rst:2360
msgid ""
"See DWARF Version 5 section 6.2 and :ref:`amdgpu-dwarf-line-number-"
"information`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2362
msgid ""
"AMDGPU does not use the ``isa`` state machine registers and always sets it "
"to 0. The instruction set must be obtained from the ELF file header "
"``e_flags`` field in the ``EF_AMDGPU_MACH`` bit position (see :ref:`ELF "
"Header <amdgpu-elf-header>`). See DWARF Version 5 section 6.2.2."
msgstr ""

#: ../../../AMDGPUUsage.rst:2369
msgid ""
"Should the ``isa`` state machine register be used to indicate if the code is "
"in wavefront32 or wavefront64 mode? Or used to specify the architecture ISA?"
msgstr ""

#: ../../../AMDGPUUsage.rst:2372
msgid ""
"For AMDGPU the line number program header fields have the following values "
"(see DWARF Version 5 section 6.2.4):"
msgstr ""

#: ../../../AMDGPUUsage.rst:2376 ../../../AMDGPUUsage.rst:2438
msgid ""
"Matches the address size for the ``Global`` address space defined in :ref:"
"`amdgpu-dwarf-address-space-identifier`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2380
msgid "AMDGPU does not use a segment selector so this is 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:2383
msgid "``minimum_instruction_length`` (ubyte)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2383
msgid "For GFX9-GFX10 this is 4."
msgstr ""

#: ../../../AMDGPUUsage.rst:2386
msgid "``maximum_operations_per_instruction`` (ubyte)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2386
msgid "For GFX9-GFX10 this is 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:2388
msgid ""
"Source text for online-compiled programs (for example, those compiled by the "
"OpenCL language runtime) may be embedded into the DWARF Version 5 line "
"table. See DWARF Version 5 section 6.2.4.1 which is updated by *DWARF "
"Extensions For Heterogeneous Debugging* section :ref:`DW_LNCT_LLVM_source "
"<amdgpu-dwarf-line-number-information-dw-lnct-llvm-source>`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2394
msgid ""
"The Clang option used to control source embedding in AMDGPU is defined in :"
"ref:`amdgpu-clang-debug-options-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2397
msgid "AMDGPU Clang Debug Options"
msgstr ""

#: ../../../AMDGPUUsage.rst:2401
msgid "Debug Flag"
msgstr ""

#: ../../../AMDGPUUsage.rst:2403
msgid "-g[no-]embed-source"
msgstr ""

#: ../../../AMDGPUUsage.rst:2403
msgid ""
"Enable/disable embedding source text in DWARF debug sections. Useful for "
"environments where source cannot be written to disk, such as when performing "
"online compilation."
msgstr ""

#: ../../../AMDGPUUsage.rst:2412
msgid "``-gembed-source``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2412
msgid "Enable the embedded source."
msgstr ""

#: ../../../AMDGPUUsage.rst:2415
msgid "``-gno-embed-source``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2415
msgid "Disable the embedded source."
msgstr ""

#: ../../../AMDGPUUsage.rst:2418
msgid "32-Bit and 64-Bit DWARF Formats"
msgstr ""

#: ../../../AMDGPUUsage.rst:2420
msgid ""
"See DWARF Version 5 section 7.4 and :ref:`amdgpu-dwarf-32-bit-and-64-bit-"
"dwarf-formats`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2423
msgid "For AMDGPU:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2425
msgid ""
"For the ``amdgcn`` target architecture only the 64-bit process address space "
"is supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:2428
msgid ""
"The producer can generate either 32-bit or 64-bit DWARF format. LLVM "
"generates the 32-bit DWARF format."
msgstr ""

#: ../../../AMDGPUUsage.rst:2432
msgid "Unit Headers"
msgstr ""

#: ../../../AMDGPUUsage.rst:2434
msgid ""
"For AMDGPU the following values apply for each of the unit headers described "
"in DWARF Version 5 sections 7.5.1.1, 7.5.1.2, and 7.5.1.3:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2444
msgid "Code Conventions"
msgstr ""

#: ../../../AMDGPUUsage.rst:2446
msgid ""
"This section provides code conventions used for each supported target triple "
"OS (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2450
msgid "AMDHSA"
msgstr ""

#: ../../../AMDGPUUsage.rst:2452
msgid ""
"This section provides code conventions used when the target triple OS is "
"``amdhsa`` (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2458
msgid "Code Object Metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:2460
msgid ""
"The code object metadata specifies extensible metadata associated with the "
"code objects executed on HSA [HSA]_ compatible runtimes (see :ref:`amdgpu-"
"os`). The encoding and semantics of this metadata depends on the code object "
"version; see :ref:`amdgpu-amdhsa-code-object-metadata-v2`, :ref:`amdgpu-"
"amdhsa-code-object-metadata-v3`, and :ref:`amdgpu-amdhsa-code-object-"
"metadata-v4`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2467
msgid ""
"Code object metadata is specified in a note record (see :ref:`amdgpu-note-"
"records`) and is required when the target triple OS is ``amdhsa`` (see :ref:"
"`amdgpu-target-triples`). It must contain the minimum information necessary "
"to support the HSA compatible runtime kernel queries. For example, the "
"segment sizes needed in a dispatch packet. In addition, a high-level "
"language runtime may require other information to be included. For example, "
"the AMD OpenCL runtime records kernel argument information."
msgstr ""

#: ../../../AMDGPUUsage.rst:2478
msgid "Code Object V2 Metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:2484
msgid ""
"Code object V2 metadata is specified by the ``NT_AMD_HSA_METADATA`` note "
"record (see :ref:`amdgpu-note-records-v2`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2487
msgid ""
"The metadata is specified as a YAML formatted string (see [YAML]_ and :doc:"
"`YamlIO`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2492
msgid ""
"Is the string null terminated? It probably should not if YAML allows it to "
"contain null characters, otherwise it should be."
msgstr ""

#: ../../../AMDGPUUsage.rst:2495
msgid ""
"The metadata is represented as a single YAML document comprised of the "
"mapping defined in table :ref:`amdgpu-amdhsa-code-object-metadata-map-v2-"
"table` and referenced tables."
msgstr ""

#: ../../../AMDGPUUsage.rst:2499
msgid ""
"For boolean values, the string values of ``false`` and ``true`` are used for "
"false and true respectively."
msgstr ""

#: ../../../AMDGPUUsage.rst:2502
msgid ""
"Additional information can be added to the mappings. To avoid conflicts, any "
"non-AMD key names should be prefixed by \"*vendor-name*.\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:2505
msgid "AMDHSA Code Object V2 Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2509 ../../../AMDGPUUsage.rst:2553
#: ../../../AMDGPUUsage.rst:2590 ../../../AMDGPUUsage.rst:2631
#: ../../../AMDGPUUsage.rst:2826 ../../../AMDGPUUsage.rst:2926
#: ../../../AMDGPUUsage.rst:2971 ../../../AMDGPUUsage.rst:3115
#: ../../../AMDGPUUsage.rst:3322
msgid "String Key"
msgstr ""

#: ../../../AMDGPUUsage.rst:2509 ../../../AMDGPUUsage.rst:2553
#: ../../../AMDGPUUsage.rst:2590 ../../../AMDGPUUsage.rst:2631
#: ../../../AMDGPUUsage.rst:2826 ../../../AMDGPUUsage.rst:2926
#: ../../../AMDGPUUsage.rst:2971 ../../../AMDGPUUsage.rst:3115
#: ../../../AMDGPUUsage.rst:3322
msgid "Value Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:2509 ../../../AMDGPUUsage.rst:2553
#: ../../../AMDGPUUsage.rst:2590 ../../../AMDGPUUsage.rst:2631
#: ../../../AMDGPUUsage.rst:2826 ../../../AMDGPUUsage.rst:2926
#: ../../../AMDGPUUsage.rst:2971 ../../../AMDGPUUsage.rst:3115
#: ../../../AMDGPUUsage.rst:3322
msgid "Required?"
msgstr ""

#: ../../../AMDGPUUsage.rst:2511
msgid "\"Version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2511 ../../../AMDGPUUsage.rst:2566
#: ../../../AMDGPUUsage.rst:2928 ../../../AMDGPUUsage.rst:2986
#: ../../../AMDGPUUsage.rst:3324
msgid "sequence of 2 integers"
msgstr ""

#: ../../../AMDGPUUsage.rst:2511 ../../../AMDGPUUsage.rst:2541
#: ../../../AMDGPUUsage.rst:2555 ../../../AMDGPUUsage.rst:2556
#: ../../../AMDGPUUsage.rst:2635 ../../../AMDGPUUsage.rst:2636
#: ../../../AMDGPUUsage.rst:2638 ../../../AMDGPUUsage.rst:2828
#: ../../../AMDGPUUsage.rst:2833 ../../../AMDGPUUsage.rst:2844
#: ../../../AMDGPUUsage.rst:2854 ../../../AMDGPUUsage.rst:2859
#: ../../../AMDGPUUsage.rst:2861 ../../../AMDGPUUsage.rst:2877
#: ../../../AMDGPUUsage.rst:2881 ../../../AMDGPUUsage.rst:2928
#: ../../../AMDGPUUsage.rst:2958 ../../../AMDGPUUsage.rst:2973
#: ../../../AMDGPUUsage.rst:2974 ../../../AMDGPUUsage.rst:3026
#: ../../../AMDGPUUsage.rst:3031 ../../../AMDGPUUsage.rst:3042
#: ../../../AMDGPUUsage.rst:3052 ../../../AMDGPUUsage.rst:3057
#: ../../../AMDGPUUsage.rst:3059 ../../../AMDGPUUsage.rst:3080
#: ../../../AMDGPUUsage.rst:3089 ../../../AMDGPUUsage.rst:3119
#: ../../../AMDGPUUsage.rst:3120 ../../../AMDGPUUsage.rst:3124
#: ../../../AMDGPUUsage.rst:3324 ../../../AMDGPUUsage.rst:3328
#: ../../../AMDGPUUsage.rst:9305 ../../../AMDGPUUsage.rst:9308
msgid "Required"
msgstr ""

#: ../../../AMDGPUUsage.rst:2511 ../../../AMDGPUUsage.rst:2928
#: ../../../AMDGPUUsage.rst:3324
msgid "The first integer is the major version. Currently 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:2513 ../../../AMDGPUUsage.rst:2930
msgid "The second integer is the minor version. Currently 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:2515
msgid "\"Printf\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2515 ../../../AMDGPUUsage.rst:2932
msgid "sequence of strings"
msgstr ""

#: ../../../AMDGPUUsage.rst:2515 ../../../AMDGPUUsage.rst:2932
msgid ""
"Each string is encoded information about a printf function call. The encoded "
"information is organized as fields separated by colon (':'):"
msgstr ""

#: ../../../AMDGPUUsage.rst:2520 ../../../AMDGPUUsage.rst:2937
msgid "``ID:N:S[0]:S[1]:...:S[N-1]:FormatString``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2522 ../../../AMDGPUUsage.rst:2939
msgid "where:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2526 ../../../AMDGPUUsage.rst:2943
msgid "``ID``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2525 ../../../AMDGPUUsage.rst:2942
msgid "A 32-bit integer as a unique id for each printf function call"
msgstr ""

#: ../../../AMDGPUUsage.rst:2531 ../../../AMDGPUUsage.rst:2948
msgid "``N``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2529 ../../../AMDGPUUsage.rst:2946
msgid ""
"A 32-bit integer equal to the number of arguments of printf function call "
"minus 1"
msgstr ""

#: ../../../AMDGPUUsage.rst:2536 ../../../AMDGPUUsage.rst:2953
msgid "``S[i]`` (where i = 0, 1, ... , N-1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2534 ../../../AMDGPUUsage.rst:2951
msgid ""
"32-bit integers for the size in bytes of the i-th FormatString argument of "
"the printf function call"
msgstr ""

#: ../../../AMDGPUUsage.rst:2539 ../../../AMDGPUUsage.rst:2956
msgid "FormatString"
msgstr ""

#: ../../../AMDGPUUsage.rst:2539 ../../../AMDGPUUsage.rst:2956
msgid "The format string passed to the printf function call."
msgstr ""

#: ../../../AMDGPUUsage.rst:2541
msgid "\"Kernels\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2541 ../../../AMDGPUUsage.rst:2574
msgid "sequence of mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:2541
msgid ""
"Sequence of the mappings for each kernel in the code object. See :ref:"
"`amdgpu-amdhsa-code-object-kernel-metadata-map-v2-table` for the definition "
"of the mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:2549
msgid "AMDHSA Code Object V2 Kernel Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2555 ../../../AMDGPUUsage.rst:2633
msgid "\"Name\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2555 ../../../AMDGPUUsage.rst:2556
#: ../../../AMDGPUUsage.rst:2558 ../../../AMDGPUUsage.rst:2608
#: ../../../AMDGPUUsage.rst:2614 ../../../AMDGPUUsage.rst:2633
#: ../../../AMDGPUUsage.rst:2634 ../../../AMDGPUUsage.rst:2638
#: ../../../AMDGPUUsage.rst:2730 ../../../AMDGPUUsage.rst:2740
#: ../../../AMDGPUUsage.rst:2762 ../../../AMDGPUUsage.rst:2777
#: ../../../AMDGPUUsage.rst:2973 ../../../AMDGPUUsage.rst:2974
#: ../../../AMDGPUUsage.rst:2976 ../../../AMDGPUUsage.rst:3011
#: ../../../AMDGPUUsage.rst:3017 ../../../AMDGPUUsage.rst:3117
#: ../../../AMDGPUUsage.rst:3118 ../../../AMDGPUUsage.rst:3124
#: ../../../AMDGPUUsage.rst:3216 ../../../AMDGPUUsage.rst:3225
#: ../../../AMDGPUUsage.rst:3247 ../../../AMDGPUUsage.rst:3262
#: ../../../AMDGPUUsage.rst:3328
msgid "string"
msgstr ""

#: ../../../AMDGPUUsage.rst:2555 ../../../AMDGPUUsage.rst:2973
msgid "Source name of the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:2556
msgid "\"SymbolName\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2556 ../../../AMDGPUUsage.rst:2974
msgid "Name of the kernel descriptor ELF symbol."
msgstr ""

#: ../../../AMDGPUUsage.rst:2558
msgid "\"Language\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2558 ../../../AMDGPUUsage.rst:2976
msgid "Source language of the kernel. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2561 ../../../AMDGPUUsage.rst:2979
msgid "\"OpenCL C\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2562 ../../../AMDGPUUsage.rst:2980
msgid "\"OpenCL C++\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2563 ../../../AMDGPUUsage.rst:2981
msgid "\"HCC\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2564 ../../../AMDGPUUsage.rst:2983
msgid "\"OpenMP\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2566
msgid "\"LanguageVersion\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2566 ../../../AMDGPUUsage.rst:2986
msgid "The first integer is the major version."
msgstr ""

#: ../../../AMDGPUUsage.rst:2568 ../../../AMDGPUUsage.rst:2988
msgid "The second integer is the minor version."
msgstr ""

#: ../../../AMDGPUUsage.rst:2570
msgid "\"Attrs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2570 ../../../AMDGPUUsage.rst:2578
msgid "mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:2570
msgid ""
"Mapping of kernel attributes. See :ref:`amdgpu-amdhsa-code-object-kernel-"
"attribute-metadata-map-v2-table` for the mapping definition."
msgstr ""

#: ../../../AMDGPUUsage.rst:2574
msgid "\"Args\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2574
msgid ""
"Sequence of mappings of the kernel arguments. See :ref:`amdgpu-amdhsa-code-"
"object-kernel-argument-metadata-map-v2-table` for the definition of the "
"mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:2578
msgid "\"CodeProps\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2578
msgid ""
"Mapping of properties related to the kernel code. See :ref:`amdgpu-amdhsa-"
"code-object-kernel-code-properties-metadata-map-v2-table` for the mapping "
"definition."
msgstr ""

#: ../../../AMDGPUUsage.rst:2586
msgid "AMDHSA Code Object V2 Kernel Attribute Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2592
msgid "\"ReqdWorkGroupSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2592 ../../../AMDGPUUsage.rst:2601
#: ../../../AMDGPUUsage.rst:2995 ../../../AMDGPUUsage.rst:3004
msgid "sequence of 3 integers"
msgstr ""

#: ../../../AMDGPUUsage.rst:2592 ../../../AMDGPUUsage.rst:2995
msgid ""
"If not 0, 0, 0 then all values must be >=1 and the dispatch work-group size "
"X, Y, Z must correspond to the specified values. Defaults to 0, 0, 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:2598 ../../../AMDGPUUsage.rst:3001
msgid "Corresponds to the OpenCL ``reqd_work_group_size`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:2601
msgid "\"WorkGroupSizeHint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2601 ../../../AMDGPUUsage.rst:3004
msgid ""
"The dispatch work-group size X, Y, Z is likely to be the specified values."
msgstr ""

#: ../../../AMDGPUUsage.rst:2605 ../../../AMDGPUUsage.rst:3008
msgid "Corresponds to the OpenCL ``work_group_size_hint`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:2608
msgid "\"VecTypeHint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2608 ../../../AMDGPUUsage.rst:3011
msgid "The name of a scalar or vector type."
msgstr ""

#: ../../../AMDGPUUsage.rst:2611 ../../../AMDGPUUsage.rst:3014
msgid "Corresponds to the OpenCL ``vec_type_hint`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:2614
msgid "\"RuntimeHandle\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2614 ../../../AMDGPUUsage.rst:3017
msgid ""
"The external symbol name associated with a kernel. OpenCL runtime allocates "
"a global buffer for the symbol and saves the kernel's address to it, which "
"is used for device side enqueueing. Only available for device side enqueued "
"kernels."
msgstr ""

#: ../../../AMDGPUUsage.rst:2627
msgid "AMDHSA Code Object V2 Kernel Argument Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2633 ../../../AMDGPUUsage.rst:3117
msgid "Kernel argument name."
msgstr ""

#: ../../../AMDGPUUsage.rst:2634
msgid "\"TypeName\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2634 ../../../AMDGPUUsage.rst:3118
msgid "Kernel argument type name."
msgstr ""

#: ../../../AMDGPUUsage.rst:2635
msgid "\"Size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2635 ../../../AMDGPUUsage.rst:2636
#: ../../../AMDGPUUsage.rst:2734 ../../../AMDGPUUsage.rst:2828
#: ../../../AMDGPUUsage.rst:2833 ../../../AMDGPUUsage.rst:2844
#: ../../../AMDGPUUsage.rst:2854 ../../../AMDGPUUsage.rst:2859
#: ../../../AMDGPUUsage.rst:2861 ../../../AMDGPUUsage.rst:2877
#: ../../../AMDGPUUsage.rst:2881 ../../../AMDGPUUsage.rst:2889
#: ../../../AMDGPUUsage.rst:2894 ../../../AMDGPUUsage.rst:3026
#: ../../../AMDGPUUsage.rst:3031 ../../../AMDGPUUsage.rst:3042
#: ../../../AMDGPUUsage.rst:3052 ../../../AMDGPUUsage.rst:3057
#: ../../../AMDGPUUsage.rst:3059 ../../../AMDGPUUsage.rst:3080
#: ../../../AMDGPUUsage.rst:3089 ../../../AMDGPUUsage.rst:3097
#: ../../../AMDGPUUsage.rst:3102 ../../../AMDGPUUsage.rst:3119
#: ../../../AMDGPUUsage.rst:3120 ../../../AMDGPUUsage.rst:3219
msgid "integer"
msgstr ""

#: ../../../AMDGPUUsage.rst:2635 ../../../AMDGPUUsage.rst:3119
msgid "Kernel argument size in bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:2636
msgid "\"Align\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2636
msgid "Kernel argument alignment in bytes. Must be a power of two."
msgstr ""

#: ../../../AMDGPUUsage.rst:2638
msgid "\"ValueKind\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2638 ../../../AMDGPUUsage.rst:3124
msgid ""
"Kernel argument kind that specifies how to set up the corresponding "
"argument. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2645
msgid "\"ByValue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2644 ../../../AMDGPUUsage.rst:3130
msgid "The argument is copied directly into the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2650
msgid "\"GlobalBuffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2648 ../../../AMDGPUUsage.rst:3134
msgid ""
"A global address space pointer to the buffer data is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2655
msgid "\"DynamicSharedPointer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2653 ../../../AMDGPUUsage.rst:3139
msgid ""
"A group address space pointer to dynamically allocated LDS is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2660
msgid "\"Sampler\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2658 ../../../AMDGPUUsage.rst:3144
msgid "A global address space pointer to a S# is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2665
msgid "\"Image\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2663 ../../../AMDGPUUsage.rst:3149
msgid "A global address space pointer to a T# is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2670
msgid "\"Pipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2668 ../../../AMDGPUUsage.rst:3154
msgid ""
"A global address space pointer to an OpenCL pipe is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2676
msgid "\"Queue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2673 ../../../AMDGPUUsage.rst:3159
msgid ""
"A global address space pointer to an OpenCL device enqueue queue is passed "
"in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2682
msgid "\"HiddenGlobalOffsetX\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2679 ../../../AMDGPUUsage.rst:3165
msgid ""
"The OpenCL grid dispatch global offset for the X dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2688
msgid "\"HiddenGlobalOffsetY\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2685 ../../../AMDGPUUsage.rst:3171
msgid ""
"The OpenCL grid dispatch global offset for the Y dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2694
msgid "\"HiddenGlobalOffsetZ\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2691 ../../../AMDGPUUsage.rst:3177
msgid ""
"The OpenCL grid dispatch global offset for the Z dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2700
msgid "\"HiddenNone\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2697 ../../../AMDGPUUsage.rst:3183
msgid ""
"An argument that is not used by the kernel. Space needs to be left for it, "
"but it does not need to be set up."
msgstr ""

#: ../../../AMDGPUUsage.rst:2705
msgid "\"HiddenPrintfBuffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2703 ../../../AMDGPUUsage.rst:3189
msgid ""
"A global address space pointer to the runtime printf buffer is passed in "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2710
msgid "\"HiddenHostcallBuffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2708 ../../../AMDGPUUsage.rst:3194
msgid ""
"A global address space pointer to the runtime hostcall buffer is passed in "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2717
msgid "\"HiddenDefaultQueue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2713 ../../../AMDGPUUsage.rst:3199
msgid ""
"A global address space pointer to the OpenCL device enqueue queue that "
"should be used by the kernel by default is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2723
msgid "\"HiddenCompletionAction\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2720 ../../../AMDGPUUsage.rst:3206
msgid ""
"A global address space pointer to help link enqueued kernels into the "
"ancestor tree for determining when the parent kernel has finished."
msgstr ""

#: ../../../AMDGPUUsage.rst:2728
msgid "\"HiddenMultiGridSyncArg\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2726 ../../../AMDGPUUsage.rst:3212
msgid ""
"A global address space pointer for multi-grid synchronization is passed in "
"the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2730
msgid "\"ValueType\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2730 ../../../AMDGPUUsage.rst:3216
msgid ""
"Unused and deprecated. This should no longer be emitted, but is accepted for "
"compatibility."
msgstr ""

#: ../../../AMDGPUUsage.rst:2734
msgid "\"PointeeAlign\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2734
msgid ""
"Alignment in bytes of pointee type for pointer type kernel argument. Must be "
"a power of 2. Only present if \"ValueKind\" is \"DynamicSharedPointer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:2740
msgid "\"AddrSpaceQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2740
msgid ""
"Kernel argument address space qualifier. Only present if \"ValueKind\" is "
"\"GlobalBuffer\" or \"DynamicSharedPointer\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2746
msgid "\"Private\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2747
msgid "\"Global\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2748
msgid "\"Constant\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2749
msgid "\"Local\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2750
msgid "\"Generic\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2751
msgid "\"Region\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2755
msgid ""
"Is GlobalBuffer only Global or Constant? Is DynamicSharedPointer always "
"Local? Can HCC allow Generic? How can Private or Region ever happen?"
msgstr ""

#: ../../../AMDGPUUsage.rst:2762
msgid "\"AccQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2762
msgid ""
"Kernel argument access qualifier. Only present if \"ValueKind\" is \"Image\" "
"or \"Pipe\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2768 ../../../AMDGPUUsage.rst:2790
msgid "\"ReadOnly\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2769 ../../../AMDGPUUsage.rst:2791
msgid "\"WriteOnly\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2770 ../../../AMDGPUUsage.rst:2792
msgid "\"ReadWrite\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2774
msgid "Does this apply to GlobalBuffer?"
msgstr ""

#: ../../../AMDGPUUsage.rst:2777
msgid "\"ActualAccQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2777
msgid ""
"The actual memory accesses performed by the kernel on the kernel argument. "
"Only present if \"ValueKind\" is \"GlobalBuffer\", \"Image\", or \"Pipe\". "
"This may be more restrictive than indicated by \"AccQual\" to reflect what "
"the kernel actual does. If not present then the runtime must assume what is "
"implied by \"AccQual\" and \"IsConst\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2794
msgid "\"IsConst\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2794 ../../../AMDGPUUsage.rst:2799
#: ../../../AMDGPUUsage.rst:2804 ../../../AMDGPUUsage.rst:2809
#: ../../../AMDGPUUsage.rst:3279 ../../../AMDGPUUsage.rst:3284
#: ../../../AMDGPUUsage.rst:3289 ../../../AMDGPUUsage.rst:3294
msgid "boolean"
msgstr ""

#: ../../../AMDGPUUsage.rst:2794
msgid ""
"Indicates if the kernel argument is const qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:2799
msgid "\"IsRestrict\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2799
msgid ""
"Indicates if the kernel argument is restrict qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:2804
msgid "\"IsVolatile\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2804
msgid ""
"Indicates if the kernel argument is volatile qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:2809
msgid "\"IsPipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2809
msgid ""
"Indicates if the kernel argument is pipe qualified. Only present if "
"\"ValueKind\" is \"Pipe\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:2815
msgid "Can GlobalBuffer be pipe qualified?"
msgstr ""

#: ../../../AMDGPUUsage.rst:2822
msgid "AMDHSA Code Object V2 Kernel Code Properties Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2828
msgid "\"KernargSegmentSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2828 ../../../AMDGPUUsage.rst:3026
msgid ""
"The size in bytes of the kernarg segment that holds the values of the "
"arguments to the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:2833
msgid "\"GroupSegmentFixedSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2833 ../../../AMDGPUUsage.rst:3031
msgid ""
"The amount of group segment memory required by a work-group in bytes. This "
"does not include any dynamically allocated group segment memory that may be "
"added when the kernel is dispatched."
msgstr ""

#: ../../../AMDGPUUsage.rst:2844
msgid "\"PrivateSegmentFixedSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2844 ../../../AMDGPUUsage.rst:3042
msgid ""
"The amount of fixed private address space memory required for a work-item in "
"bytes. If the kernel uses a dynamic call stack then additional space must be "
"added to this value for the call stack."
msgstr ""

#: ../../../AMDGPUUsage.rst:2854
msgid "\"KernargSegmentAlign\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2854 ../../../AMDGPUUsage.rst:3052
msgid ""
"The maximum byte alignment of arguments in the kernarg segment. Must be a "
"power of 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:2859
msgid "\"WavefrontSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2859 ../../../AMDGPUUsage.rst:3057
msgid "Wavefront size. Must be a power of 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:2861
msgid "\"NumSGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2861
msgid ""
"Number of scalar registers used by a wavefront for GFX6-GFX10. This includes "
"the special SGPRs for VCC, Flat Scratch (GFX7-GFX10) and XNACK (for GFX8-"
"GFX10). It does not include the 16 SGPR added if a trap handler is enabled. "
"It is not rounded up to the allocation granularity."
msgstr ""

#: ../../../AMDGPUUsage.rst:2877
msgid "\"NumVGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2877
msgid "Number of vector registers used by each work-item for GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:2881
msgid "\"MaxFlatWorkGroupSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2881 ../../../AMDGPUUsage.rst:3089
msgid ""
"Maximum flat work-group size supported by the kernel in work-items. Must be "
">=1 and consistent with ReqdWorkGroupSize if not 0, 0, 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:2889
msgid "\"NumSpilledSGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2889 ../../../AMDGPUUsage.rst:3097
msgid ""
"Number of stores from a scalar register to a register allocator created "
"spill location."
msgstr ""

#: ../../../AMDGPUUsage.rst:2894
msgid "\"NumSpilledVGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2894 ../../../AMDGPUUsage.rst:3102
msgid ""
"Number of stores from a vector register to a register allocator created "
"spill location."
msgstr ""

#: ../../../AMDGPUUsage.rst:2904
msgid "Code Object V3 Metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:2906
msgid ""
"Code object V3 to V4 metadata is specified by the ``NT_AMDGPU_METADATA`` "
"note record (see :ref:`amdgpu-note-records-v3-v4`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2909
msgid ""
"The metadata is represented as Message Pack formatted binary data (see "
"[MsgPack]_). The top level is a Message Pack map that includes the keys "
"defined in table :ref:`amdgpu-amdhsa-code-object-metadata-map-table-v3` and "
"referenced tables."
msgstr ""

#: ../../../AMDGPUUsage.rst:2915
msgid ""
"Additional information can be added to the maps. To avoid conflicts, any key "
"names should be prefixed by \"*vendor-name*.\" where ``vendor-name`` can be "
"the name of the vendor and specific vendor tool that generates the "
"information. The prefix is abbreviated to simply \".\" when it appears "
"within a map that has been added by the same *vendor-name*."
msgstr ""

#: ../../../AMDGPUUsage.rst:2922
msgid "AMDHSA Code Object V3 Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2928 ../../../AMDGPUUsage.rst:3324
msgid "\"amdhsa.version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2932
msgid "\"amdhsa.printf\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2958
msgid "\"amdhsa.kernels\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2958 ../../../AMDGPUUsage.rst:2990
msgid "sequence of map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2958
msgid ""
"Sequence of the maps for each kernel in the code object. See :ref:`amdgpu-"
"amdhsa-code-object-kernel-metadata-map-table-v3` for the definition of the "
"keys included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:2967
msgid "AMDHSA Code Object V3 Kernel Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2973 ../../../AMDGPUUsage.rst:3117
msgid "\".name\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2974
msgid "\".symbol\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2976
msgid "\".language\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2982
msgid "\"HIP\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2984
msgid "\"Assembler\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2986
msgid "\".language_version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2990
msgid "\".args\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2990
msgid ""
"Sequence of maps of the kernel arguments. See :ref:`amdgpu-amdhsa-code-"
"object-kernel-argument-metadata-map-table-v3` for the definition of the keys "
"included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:2995
msgid "\".reqd_workgroup_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3004
msgid "\".workgroup_size_hint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3011
msgid "\".vec_type_hint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3017
msgid "\".device_enqueue_symbol\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3026
msgid "\".kernarg_segment_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3031
msgid "\".group_segment_fixed_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3042
msgid "\".private_segment_fixed_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3052
msgid "\".kernarg_segment_align\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3057
msgid "\".wavefront_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3059
msgid "\".sgpr_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3059
msgid ""
"Number of scalar registers required by a wavefront for GFX6-GFX9. A register "
"is required if it is used explicitly, or if a higher numbered register is "
"used explicitly. This includes the special SGPRs for VCC, Flat Scratch (GFX7-"
"GFX9) and XNACK (for GFX8-GFX9). It does not include the 16 SGPR added if a "
"trap handler is enabled. It is not rounded up to the allocation granularity."
msgstr ""

#: ../../../AMDGPUUsage.rst:3080
msgid "\".vgpr_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3080
msgid ""
"Number of vector registers required by each work-item for GFX6-GFX9. A "
"register is required if it is used explicitly, or if a higher numbered "
"register is used explicitly."
msgstr ""

#: ../../../AMDGPUUsage.rst:3089
msgid "\".max_flat_workgroup_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3097
msgid "\".sgpr_spill_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3102
msgid "\".vgpr_spill_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3111
msgid "AMDHSA Code Object V3 Kernel Argument Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:3118
msgid "\".type_name\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3119
msgid "\".size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3120
msgid "\".offset\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3120
msgid ""
"Kernel argument offset in bytes. The offset must be a multiple of the "
"alignment required by the argument."
msgstr ""

#: ../../../AMDGPUUsage.rst:3124
msgid "\".value_kind\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3131
msgid "\"by_value\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3136
msgid "\"global_buffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3141
msgid "\"dynamic_shared_pointer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3146
msgid "\"sampler\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3151
msgid "\"image\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3156
msgid "\"pipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3162
msgid "\"queue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3168
msgid "\"hidden_global_offset_x\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3174
msgid "\"hidden_global_offset_y\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3180
msgid "\"hidden_global_offset_z\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3186
msgid "\"hidden_none\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3191
msgid "\"hidden_printf_buffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3196
msgid "\"hidden_hostcall_buffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3203
msgid "\"hidden_default_queue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3209
msgid "\"hidden_completion_action\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3214
msgid "\"hidden_multigrid_sync_arg\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3216
msgid "\".value_type\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3219
msgid "\".pointee_align\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3219
msgid ""
"Alignment in bytes of pointee type for pointer type kernel argument. Must be "
"a power of 2. Only present if \".value_kind\" is \"dynamic_shared_pointer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:3225
msgid "\".address_space\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3225
msgid ""
"Kernel argument address space qualifier. Only present if \".value_kind\" is "
"\"global_buffer\" or \"dynamic_shared_pointer\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3231
msgid "\"private\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3232
msgid "\"global\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3233
msgid "\"constant\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3234
msgid "\"local\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3235
msgid "\"generic\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3236
msgid "\"region\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3240
msgid ""
"Is \"global_buffer\" only \"global\" or \"constant\"? Is "
"\"dynamic_shared_pointer\" always \"local\"? Can HCC allow \"generic\"? How "
"can \"private\" or \"region\" ever happen?"
msgstr ""

#: ../../../AMDGPUUsage.rst:3247
msgid "\".access\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3247
msgid ""
"Kernel argument access qualifier. Only present if \".value_kind\" is "
"\"image\" or \"pipe\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3253 ../../../AMDGPUUsage.rst:3275
msgid "\"read_only\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3254 ../../../AMDGPUUsage.rst:3276
msgid "\"write_only\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3255 ../../../AMDGPUUsage.rst:3277
msgid "\"read_write\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3259
msgid "Does this apply to \"global_buffer\"?"
msgstr ""

#: ../../../AMDGPUUsage.rst:3262
msgid "\".actual_access\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3262
msgid ""
"The actual memory accesses performed by the kernel on the kernel argument. "
"Only present if \".value_kind\" is \"global_buffer\", \"image\", or "
"\"pipe\". This may be more restrictive than indicated by \".access\" to "
"reflect what the kernel actual does. If not present then the runtime must "
"assume what is implied by \".access\" and \".is_const\"      . Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3279
msgid "\".is_const\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3279
msgid ""
"Indicates if the kernel argument is const qualified. Only present if \"."
"value_kind\" is \"global_buffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:3284
msgid "\".is_restrict\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3284
msgid ""
"Indicates if the kernel argument is restrict qualified. Only present if \"."
"value_kind\" is \"global_buffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:3289
msgid "\".is_volatile\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3289
msgid ""
"Indicates if the kernel argument is volatile qualified. Only present if \"."
"value_kind\" is \"global_buffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:3294
msgid "\".is_pipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3294
msgid ""
"Indicates if the kernel argument is pipe qualified. Only present if \"."
"value_kind\" is \"pipe\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:3300
msgid "Can \"global_buffer\" be pipe qualified?"
msgstr ""

#: ../../../AMDGPUUsage.rst:3308
msgid "Code Object V4 Metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:3311
msgid ""
"Code object V4 is not the default code object version emitted by this "
"version of LLVM."
msgstr ""

#: ../../../AMDGPUUsage.rst:3314
msgid ""
"Code object V4 metadata is the same as :ref:`amdgpu-amdhsa-code-object-"
"metadata-v3` with the changes and additions defined in table :ref:`amdgpu-"
"amdhsa-code-object-metadata-map-table-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3318
msgid ""
"AMDHSA Code Object V4 Metadata Map Changes from :ref:`amdgpu-amdhsa-code-"
"object-metadata-v3`"
msgstr ""

#: ../../../AMDGPUUsage.rst:3326
msgid "The second integer is the minor version. Currently 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:3328
msgid "\"amdhsa.target\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3328
msgid "The target name of the code using the syntax:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3334
msgid ""
"A canonical target ID must be used. See :ref:`amdgpu-target-triples` and :"
"ref:`amdgpu-target-id`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3342
msgid "Kernel Dispatch"
msgstr ""

#: ../../../AMDGPUUsage.rst:3344
msgid ""
"The HSA architected queuing language (AQL) defines a user space memory "
"interface that can be used to control the dispatch of kernels, in an agent "
"independent way. An agent can have zero or more AQL queues created for it "
"using an HSA compatible runtime (see :ref:`amdgpu-os`), in which AQL packets "
"(all of which are 64 bytes) can be placed. See the *HSA Platform System "
"Architecture Specification* [HSA]_ for the AQL queue mechanics and packet "
"layouts."
msgstr ""

#: ../../../AMDGPUUsage.rst:3351
msgid ""
"The packet processor of a kernel agent is responsible for detecting and "
"dispatching HSA kernels from the AQL queues associated with it. For AMD GPUs "
"the packet processor is implemented by the hardware command processor (CP), "
"asynchronous dispatch controller (ADC) and shader processor input controller "
"(SPI)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3357
msgid ""
"An HSA compatible runtime can be used to allocate an AQL queue object. It "
"uses the kernel mode driver to initialize and register the AQL queue with CP."
msgstr ""

#: ../../../AMDGPUUsage.rst:3360
msgid ""
"To dispatch a kernel the following actions are performed. This can occur in "
"the CPU host program, or from an HSA kernel executing on a GPU."
msgstr ""

#: ../../../AMDGPUUsage.rst:3363
msgid ""
"A pointer to an AQL queue for the kernel agent on which the kernel is to be "
"executed is obtained."
msgstr ""

#: ../../../AMDGPUUsage.rst:3365
msgid ""
"A pointer to the kernel descriptor (see :ref:`amdgpu-amdhsa-kernel-"
"descriptor`) of the kernel to execute is obtained. It must be for a kernel "
"that is contained in a code object that that was loaded by an HSA compatible "
"runtime on the kernel agent with which the AQL queue is associated."
msgstr ""

#: ../../../AMDGPUUsage.rst:3370
msgid ""
"Space is allocated for the kernel arguments using the HSA compatible runtime "
"allocator for a memory region with the kernarg property for the kernel agent "
"that will execute the kernel. It must be at least 16-byte aligned."
msgstr ""

#: ../../../AMDGPUUsage.rst:3373
msgid ""
"Kernel argument values are assigned to the kernel argument memory "
"allocation. The layout is defined in the *HSA Programmer's Language "
"Reference* [HSA]_. For AMDGPU the kernel execution directly accesses the "
"kernel argument memory in the same way constant memory is accessed. (Note "
"that the HSA specification allows an implementation to copy the kernel "
"argument contents to another location that is accessed by the kernel.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3379
msgid ""
"An AQL kernel dispatch packet is created on the AQL queue. The HSA "
"compatible runtime api uses 64-bit atomic operations to reserve space in the "
"AQL queue for the packet. The packet must be set up, and the final write "
"must use an atomic store release to set the packet kind to ensure the packet "
"contents are visible to the kernel agent. AQL defines a doorbell signal "
"mechanism to notify the kernel agent that the AQL queue has been updated. "
"These rules, and the layout of the AQL queue and kernel dispatch packet is "
"defined in the *HSA System Architecture Specification* [HSA]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:3387
msgid ""
"A kernel dispatch packet includes information about the actual dispatch, "
"such as grid and work-group size, together with information from the code "
"object about the kernel, such as segment sizes. The HSA compatible runtime "
"queries on the kernel symbol can be used to obtain the code object values "
"which are recorded in the :ref:`amdgpu-amdhsa-code-object-metadata`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3392
msgid ""
"CP executes micro-code and is responsible for detecting and setting up the "
"GPU to execute the wavefronts of a kernel dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:3394
msgid ""
"CP ensures that when the a wavefront starts executing the kernel machine "
"code, the scalar general purpose registers (SGPR) and vector general purpose "
"registers (VGPR) are set up as required by the machine code. The required "
"setup is defined in the :ref:`amdgpu-amdhsa-kernel-descriptor`. The initial "
"register state is defined in :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3400
msgid ""
"The prolog of the kernel machine code (see :ref:`amdgpu-amdhsa-kernel-"
"prolog`) sets up the machine state as necessary before continuing executing "
"the machine code that corresponds to the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:3403
msgid ""
"When the kernel dispatch has completed execution, CP signals the completion "
"signal specified in the kernel dispatch packet if not 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:3409
msgid "Memory Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:3411
msgid "The memory space properties are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3413
msgid "AMDHSA Memory Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:3417
msgid "Memory Space Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:3430
msgid ""
"The global and constant memory spaces both use global virtual addresses, "
"which are the same virtual address space used by the CPU. However, some "
"virtual addresses may only be accessible to the CPU, some only accessible by "
"the GPU, and some by both."
msgstr ""

#: ../../../AMDGPUUsage.rst:3435
msgid ""
"Using the constant memory space indicates that the data will not change "
"during the execution of the kernel. This allows scalar read instructions to "
"be used. The vector and scalar L1 caches are invalidated of volatile data "
"before each kernel dispatch execution to allow constant memory to change "
"values between kernel dispatches."
msgstr ""

#: ../../../AMDGPUUsage.rst:3441
msgid ""
"The local memory space uses the hardware Local Data Store (LDS) which is "
"automatically allocated when the hardware creates work-groups of wavefronts, "
"and freed when all the wavefronts of a work-group have terminated. The data "
"store (DS) instructions can be used to access it."
msgstr ""

#: ../../../AMDGPUUsage.rst:3446
msgid ""
"The private memory space uses the hardware scratch memory support. If the "
"kernel uses scratch, then the hardware allocates memory that is accessed "
"using wavefront lane dword (4 byte) interleaving. The mapping used from "
"private address to physical address is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3451
msgid ""
"``wavefront-scratch-base + (private-address * wavefront-size * 4) + "
"(wavefront-lane-id * 4)``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3455
msgid ""
"There are different ways that the wavefront scratch base address is "
"determined by a wavefront (see :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`). This memory can be accessed in an interleaved manner using buffer "
"instruction with the scratch buffer descriptor and per wavefront scratch "
"offset, by the scratch instructions, or by flat instructions. If each lane "
"of a wavefront accesses the same private address, the interleaving results "
"in adjacent dwords being accessed and hence requires fewer cache lines to be "
"fetched. Multi-dword access is not supported except by flat and scratch "
"instructions in GFX9-GFX10."
msgstr ""

#: ../../../AMDGPUUsage.rst:3464
msgid ""
"The generic address space uses the hardware flat address support available "
"in GFX7-GFX10. This uses two fixed ranges of virtual addresses (the private "
"and local apertures), that are outside the range of addressible global "
"memory, to map from a flat address to a private or local address."
msgstr ""

#: ../../../AMDGPUUsage.rst:3469
msgid ""
"FLAT instructions can take a flat address and access global, private "
"(scratch) and group (LDS) memory depending in if the address is within one "
"of the aperture ranges. Flat access to scratch requires hardware aperture "
"setup and setup in the kernel prologue (see :ref:`amdgpu-amdhsa-kernel-"
"prolog-flat-scratch`). Flat access to LDS requires hardware aperture setup "
"and M0 (GFX7-GFX8) register setup (see :ref:`amdgpu-amdhsa-kernel-prolog-"
"m0`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3477
msgid ""
"To convert between a segment address and a flat address the base address of "
"the apertures address can be used. For GFX7-GFX8 these are available in the :"
"ref:`amdgpu-amdhsa-hsa-aql-queue` the address of which can be obtained with "
"Queue Ptr SGPR (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`). "
"For GFX9-GFX10 the aperture base addresses are directly available as inline "
"constant registers ``SRC_SHARED_BASE/LIMIT`` and ``SRC_PRIVATE_BASE/LIMIT``. "
"In 64 bit address mode the aperture sizes are 2^32 bytes and the base is "
"aligned to 2^32 which makes it easier to convert from flat to segment or "
"segment to flat."
msgstr ""

#: ../../../AMDGPUUsage.rst:3487
msgid "Image and Samplers"
msgstr ""

#: ../../../AMDGPUUsage.rst:3489
msgid ""
"Image and sample handles created by an HSA compatible runtime (see :ref:"
"`amdgpu-os`) are 64-bit addresses of a hardware 32-byte V# and 48 byte S# "
"object respectively. In order to support the HSA ``query_sampler`` "
"operations two extra dwords are used to store the HSA BRIG enumeration "
"values for the queries that are not trivially deducible from the S# "
"representation."
msgstr ""

#: ../../../AMDGPUUsage.rst:3496
msgid "HSA Signals"
msgstr ""

#: ../../../AMDGPUUsage.rst:3498
msgid ""
"HSA signal handles created by an HSA compatible runtime (see :ref:`amdgpu-"
"os`) are 64-bit addresses of a structure allocated in memory accessible from "
"both the CPU and GPU. The structure is defined by the runtime and subject to "
"change between releases. For example, see [AMD-ROCm-github]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:3506
msgid "HSA AQL Queue"
msgstr ""

#: ../../../AMDGPUUsage.rst:3508
msgid ""
"The HSA AQL queue structure is defined by an HSA compatible runtime (see :"
"ref:`amdgpu-os`) and subject to change between releases. For example, see "
"[AMD-ROCm-github]_. For some processors it contains fields needed to "
"implement certain language features such as the flat address aperture bases. "
"It also contains fields used by CP such as managing the allocation of "
"scratch memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:3517
msgid "Kernel Descriptor"
msgstr ""

#: ../../../AMDGPUUsage.rst:3519
msgid ""
"A kernel descriptor consists of the information needed by CP to initiate the "
"execution of a kernel, including the entry point address of the machine code "
"that implements the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:3524 ../../../AMDGPUUsage.rst:3532
msgid "Code Object V3 Kernel Descriptor"
msgstr ""

#: ../../../AMDGPUUsage.rst:3526
msgid ""
"CP microcode requires the Kernel descriptor to be allocated on 64-byte "
"alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:3529
msgid ""
"The fields used by CP for code objects before V3 also match those specified "
"in :ref:`amdgpu-amdhsa-kernel-descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3536 ../../../AMDGPUUsage.rst:3665
#: ../../../AMDGPUUsage.rst:3951 ../../../AMDGPUUsage.rst:4108
#: ../../../AMDGPUUsage.rst:8358
msgid "Bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3536 ../../../AMDGPUUsage.rst:3665
#: ../../../AMDGPUUsage.rst:3951 ../../../AMDGPUUsage.rst:4108
#: ../../../AMDGPUUsage.rst:8358
msgid "Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:3536 ../../../AMDGPUUsage.rst:3665
#: ../../../AMDGPUUsage.rst:3951 ../../../AMDGPUUsage.rst:4108
#: ../../../AMDGPUUsage.rst:8358
msgid "Field Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:3538
msgid "31:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:3538 ../../../AMDGPUUsage.rst:3547
#: ../../../AMDGPUUsage.rst:3555 ../../../AMDGPUUsage.rst:3585
#: ../../../AMDGPUUsage.rst:3595 ../../../AMDGPUUsage.rst:3605
#: ../../../AMDGPUUsage.rst:3612
msgid "4 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:3538
msgid "GROUP_SEGMENT_FIXED_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3538
msgid ""
"The amount of fixed local address space memory required for a work-group in "
"bytes. This does not include any dynamically allocated local address space "
"memory that may be added when the kernel is dispatched."
msgstr ""

#: ../../../AMDGPUUsage.rst:3547
msgid "63:32"
msgstr ""

#: ../../../AMDGPUUsage.rst:3547
msgid "PRIVATE_SEGMENT_FIXED_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3547
msgid ""
"The amount of fixed private address space memory required for a work-item in "
"bytes. Additional space may need to be added to this value if the call stack "
"has non-inlined function calls."
msgstr ""

#: ../../../AMDGPUUsage.rst:3555
msgid "95:64"
msgstr ""

#: ../../../AMDGPUUsage.rst:3555
msgid "KERNARG_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3555
msgid ""
"The size of the kernarg memory pointed to by the AQL dispatch packet. The "
"kernarg memory is used to pass arguments to the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:3562
msgid ""
"If the kernarg pointer in the dispatch packet is NULL then there are no "
"kernel arguments."
msgstr ""

#: ../../../AMDGPUUsage.rst:3566
msgid ""
"If the kernarg pointer in the dispatch packet is not NULL and this value is "
"0 then the kernarg memory size is unspecified."
msgstr ""

#: ../../../AMDGPUUsage.rst:3572
msgid ""
"If the kernarg pointer in the dispatch packet is not NULL and this value is "
"not 0 then the value specifies the kernarg memory size in bytes. It is "
"recommended to provide a value as it may be used by CP to optimize making "
"the kernarg memory visible to the kernel code."
msgstr ""

#: ../../../AMDGPUUsage.rst:3585
msgid "127:96"
msgstr ""

#: ../../../AMDGPUUsage.rst:3585 ../../../AMDGPUUsage.rst:3593
#: ../../../AMDGPUUsage.rst:3596 ../../../AMDGPUUsage.rst:3641
#: ../../../AMDGPUUsage.rst:3643 ../../../AMDGPUUsage.rst:3650
#: ../../../AMDGPUUsage.rst:3652 ../../../AMDGPUUsage.rst:3654
#: ../../../AMDGPUUsage.rst:3655 ../../../AMDGPUUsage.rst:3878
#: ../../../AMDGPUUsage.rst:3895 ../../../AMDGPUUsage.rst:3897
#: ../../../AMDGPUUsage.rst:3909 ../../../AMDGPUUsage.rst:3932
#: ../../../AMDGPUUsage.rst:4098 ../../../AMDGPUUsage.rst:4112
msgid "Reserved, must be 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:3586
msgid "191:128"
msgstr ""

#: ../../../AMDGPUUsage.rst:3586
msgid "8 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:3586
msgid "KERNEL_CODE_ENTRY_BYTE_OFFSET"
msgstr ""

#: ../../../AMDGPUUsage.rst:3586
msgid ""
"Byte offset (possibly negative) from base address of kernel descriptor to "
"kernel's entry point instruction which must be 256 byte aligned."
msgstr ""

#: ../../../AMDGPUUsage.rst:3593
msgid "351:272"
msgstr ""

#: ../../../AMDGPUUsage.rst:3593
msgid "20 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:3595
msgid "383:352"
msgstr ""

#: ../../../AMDGPUUsage.rst:3595
msgid "COMPUTE_PGM_RSRC3"
msgstr ""

#: ../../../AMDGPUUsage.rst:3595 ../../../AMDGPUUsage.rst:3642
#: ../../../AMDGPUUsage.rst:3908 ../../../AMDGPUUsage.rst:3931
msgid "GFX6-9"
msgstr ""

#: ../../../AMDGPUUsage.rst:3603 ../../../AMDGPUUsage.rst:3648
#: ../../../AMDGPUUsage.rst:3715 ../../../AMDGPUUsage.rst:3906
#: ../../../AMDGPUUsage.rst:3929 ../../../AMDGPUUsage.rst:3940
#: ../../../AMDGPUUsage.rst:9287 ../../../AMDGPUUsage.rst:9344
#: ../../../AMDGPUUsage.rst:9348 ../../../AMDGPUUsage.rst:9350
msgid "GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:3598
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC3`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc3-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3605
msgid "415:384"
msgstr ""

#: ../../../AMDGPUUsage.rst:3605
msgid "COMPUTE_PGM_RSRC1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3605
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC1`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc1-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3612
msgid "447:416"
msgstr ""

#: ../../../AMDGPUUsage.rst:3612
msgid "COMPUTE_PGM_RSRC2"
msgstr ""

#: ../../../AMDGPUUsage.rst:3612
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC2`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3619
msgid "458:448"
msgstr ""

#: ../../../AMDGPUUsage.rst:3619
msgid "7 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3619
msgid "*See separate bits below.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:3619
msgid ""
"Enable the setup of the SGPR user data registers (see :ref:`amdgpu-amdhsa-"
"initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3624
msgid ""
"The total number of SGPR user data registers requested must not exceed 16 "
"and match value in ``compute_pgm_rsrc2.user_sgpr.user_sgpr_count``. Any "
"requests beyond 16 will be ignored."
msgstr ""

#: ../../../AMDGPUUsage.rst:3631
msgid ">448"
msgstr ""

#: ../../../AMDGPUUsage.rst:3631 ../../../AMDGPUUsage.rst:3633
#: ../../../AMDGPUUsage.rst:3634 ../../../AMDGPUUsage.rst:3635
#: ../../../AMDGPUUsage.rst:3636 ../../../AMDGPUUsage.rst:3637
#: ../../../AMDGPUUsage.rst:3639 ../../../AMDGPUUsage.rst:3642
#: ../../../AMDGPUUsage.rst:3650 ../../../AMDGPUUsage.rst:3651
#: ../../../AMDGPUUsage.rst:3653 ../../../AMDGPUUsage.rst:3817
#: ../../../AMDGPUUsage.rst:3826 ../../../AMDGPUUsage.rst:3837
#: ../../../AMDGPUUsage.rst:3845 ../../../AMDGPUUsage.rst:3860
#: ../../../AMDGPUUsage.rst:3869 ../../../AMDGPUUsage.rst:3877
#: ../../../AMDGPUUsage.rst:3896 ../../../AMDGPUUsage.rst:3908
#: ../../../AMDGPUUsage.rst:3931 ../../../AMDGPUUsage.rst:3953
#: ../../../AMDGPUUsage.rst:3972 ../../../AMDGPUUsage.rst:3979
#: ../../../AMDGPUUsage.rst:3987 ../../../AMDGPUUsage.rst:3995
#: ../../../AMDGPUUsage.rst:4003 ../../../AMDGPUUsage.rst:4018
#: ../../../AMDGPUUsage.rst:4034 ../../../AMDGPUUsage.rst:4074
#: ../../../AMDGPUUsage.rst:4084 ../../../AMDGPUUsage.rst:4087
#: ../../../AMDGPUUsage.rst:4089 ../../../AMDGPUUsage.rst:4091
#: ../../../AMDGPUUsage.rst:4093 ../../../AMDGPUUsage.rst:4095
#: ../../../AMDGPUUsage.rst:4098
msgid "1 bit"
msgstr ""

#: ../../../AMDGPUUsage.rst:3631
msgid "ENABLE_SGPR_PRIVATE_SEGMENT _BUFFER"
msgstr ""

#: ../../../AMDGPUUsage.rst:3633
msgid ">449"
msgstr ""

#: ../../../AMDGPUUsage.rst:3633
msgid "ENABLE_SGPR_DISPATCH_PTR"
msgstr ""

#: ../../../AMDGPUUsage.rst:3634
msgid ">450"
msgstr ""

#: ../../../AMDGPUUsage.rst:3634
msgid "ENABLE_SGPR_QUEUE_PTR"
msgstr ""

#: ../../../AMDGPUUsage.rst:3635
msgid ">451"
msgstr ""

#: ../../../AMDGPUUsage.rst:3635
msgid "ENABLE_SGPR_KERNARG_SEGMENT_PTR"
msgstr ""

#: ../../../AMDGPUUsage.rst:3636
msgid ">452"
msgstr ""

#: ../../../AMDGPUUsage.rst:3636
msgid "ENABLE_SGPR_DISPATCH_ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:3637
msgid ">453"
msgstr ""

#: ../../../AMDGPUUsage.rst:3637
msgid "ENABLE_SGPR_FLAT_SCRATCH_INIT"
msgstr ""

#: ../../../AMDGPUUsage.rst:3639
msgid ">454"
msgstr ""

#: ../../../AMDGPUUsage.rst:3639
msgid "ENABLE_SGPR_PRIVATE_SEGMENT _SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3641
msgid "457:455"
msgstr ""

#: ../../../AMDGPUUsage.rst:3641 ../../../AMDGPUUsage.rst:3652
#: ../../../AMDGPUUsage.rst:3654
msgid "3 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3642
msgid "458"
msgstr ""

#: ../../../AMDGPUUsage.rst:3642
msgid "ENABLE_WAVEFRONT_SIZE32"
msgstr ""

#: ../../../AMDGPUUsage.rst:3645
msgid "If 0 execute in wavefront size 64 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3647
msgid "If 1 execute in native wavefront size 32 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3650
msgid "463:459"
msgstr ""

#: ../../../AMDGPUUsage.rst:3651
msgid "464"
msgstr ""

#: ../../../AMDGPUUsage.rst:3651
msgid "RESERVED_464"
msgstr ""

#: ../../../AMDGPUUsage.rst:3651 ../../../AMDGPUUsage.rst:3653
msgid "Deprecated, must be 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:3652
msgid "467:465"
msgstr ""

#: ../../../AMDGPUUsage.rst:3653
msgid "468"
msgstr ""

#: ../../../AMDGPUUsage.rst:3653
msgid "RESERVED_468"
msgstr ""

#: ../../../AMDGPUUsage.rst:3654
msgid "469:471"
msgstr ""

#: ../../../AMDGPUUsage.rst:3655
msgid "511:472"
msgstr ""

#: ../../../AMDGPUUsage.rst:3655
msgid "5 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:3656
msgid "**Total size 64 bytes.**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3661
msgid "compute_pgm_rsrc1 for GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:3667
msgid "5:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:3667
msgid "6 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3667
msgid "GRANULATED_WORKITEM_VGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:3667
msgid ""
"Number of vector register blocks used by each work-item; granularity is "
"device specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3673 ../../../AMDGPUUsage.rst:3896
msgid "GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:3673
msgid "vgprs_used 0..256"
msgstr ""

#: ../../../AMDGPUUsage.rst:3674 ../../../AMDGPUUsage.rst:3677
msgid "max(0, ceil(vgprs_used / 4) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3676
msgid "GFX10 (wavefront size 64)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3676 ../../../AMDGPUUsage.rst:3679
msgid "max_vgpr 1..256"
msgstr ""

#: ../../../AMDGPUUsage.rst:3680
msgid "GFX10 (wavefront size 32)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3680
msgid "max(0, ceil(vgprs_used / 8) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3682
msgid ""
"Where vgprs_used is defined as the highest VGPR number explicitly referenced "
"plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:3687
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.VGPRS``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3690
msgid ""
"The :ref:`amdgpu-assembler` calculates this automatically for the selected "
"processor from values provided to the `.amdhsa_kernel` directive by the `."
"amdhsa_next_free_vgpr` nested directive (see :ref:`amdhsa-kernel-directives-"
"table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3701
msgid "9:6"
msgstr ""

#: ../../../AMDGPUUsage.rst:3701 ../../../AMDGPUUsage.rst:4110
msgid "4 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3701
msgid "GRANULATED_WAVEFRONT_SGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:3701
msgid ""
"Number of scalar register blocks used by a wavefront; granularity is device "
"specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3707 ../../../AMDGPUUsage.rst:3877
#: ../../../AMDGPUUsage.rst:4380
msgid "GFX6-GFX8"
msgstr ""

#: ../../../AMDGPUUsage.rst:3707 ../../../AMDGPUUsage.rst:3710
msgid "sgprs_used 0..112"
msgstr ""

#: ../../../AMDGPUUsage.rst:3708
msgid "max(0, ceil(sgprs_used / 8) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3710
msgid "GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:3711
msgid "2 * max(0, ceil(sgprs_used / 16) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3713
msgid "Reserved, must be 0. (128 SGPRs always allocated.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3717
msgid ""
"Where sgprs_used is defined as the highest SGPR number explicitly referenced "
"plus one, plus a target specific number of additional special SGPRs for VCC, "
"FLAT_SCRATCH (GFX7+) and XNACK_MASK (GFX8+), and any additional target "
"specific limitations. It does not include the 16 SGPRs added if a trap "
"handler is enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:3733
msgid ""
"The target specific limitations and special SGPR layout are defined in the "
"hardware documentation, which can be found in the :ref:`amdgpu-processors` "
"table."
msgstr ""

#: ../../../AMDGPUUsage.rst:3742
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.SGPRS``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3745
msgid ""
"The :ref:`amdgpu-assembler` calculates this automatically for the selected "
"processor from values provided to the `.amdhsa_kernel` directive by the `."
"amdhsa_next_free_sgpr` and `.amdhsa_reserve_*` nested directives (see :ref:"
"`amdhsa-kernel-directives-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3757
msgid "11:10"
msgstr ""

#: ../../../AMDGPUUsage.rst:3757 ../../../AMDGPUUsage.rst:3765
#: ../../../AMDGPUUsage.rst:3778 ../../../AMDGPUUsage.rst:3791
#: ../../../AMDGPUUsage.rst:3804 ../../../AMDGPUUsage.rst:3895
#: ../../../AMDGPUUsage.rst:4010 ../../../AMDGPUUsage.rst:8363
msgid "2 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3757
msgid "PRIORITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:3757 ../../../AMDGPUUsage.rst:3817
#: ../../../AMDGPUUsage.rst:3837 ../../../AMDGPUUsage.rst:3860
#: ../../../AMDGPUUsage.rst:3869 ../../../AMDGPUUsage.rst:3972
#: ../../../AMDGPUUsage.rst:4018 ../../../AMDGPUUsage.rst:4034
#: ../../../AMDGPUUsage.rst:4053
msgid "Must be 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:3759
msgid "Start executing wavefront at the specified priority."
msgstr ""

#: ../../../AMDGPUUsage.rst:3762
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.PRIORITY``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3765
msgid "13:12"
msgstr ""

#: ../../../AMDGPUUsage.rst:3765
msgid "FLOAT_ROUND_MODE_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:3765
msgid ""
"Wavefront starts execution with specified rounding mode for single (32 bit) "
"floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:3772 ../../../AMDGPUUsage.rst:3785
msgid ""
"Floating point rounding mode values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-rounding-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3776 ../../../AMDGPUUsage.rst:3789
#: ../../../AMDGPUUsage.rst:3802 ../../../AMDGPUUsage.rst:3815
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.FLOAT_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3778
msgid "15:14"
msgstr ""

#: ../../../AMDGPUUsage.rst:3778
msgid "FLOAT_ROUND_MODE_16_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:3778
msgid ""
"Wavefront starts execution with specified rounding denorm mode for half/"
"double (16 and 64-bit) floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:3791
msgid "17:16"
msgstr ""

#: ../../../AMDGPUUsage.rst:3791
msgid "FLOAT_DENORM_MODE_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:3791
msgid ""
"Wavefront starts execution with specified denorm mode for single (32 bit)  "
"floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:3798 ../../../AMDGPUUsage.rst:3811
msgid ""
"Floating point denorm mode values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-denorm-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3804
msgid "19:18"
msgstr ""

#: ../../../AMDGPUUsage.rst:3804
msgid "FLOAT_DENORM_MODE_16_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:3804
msgid ""
"Wavefront starts execution with specified denorm mode for half/double (16 "
"and 64-bit) floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:3817
msgid "20"
msgstr ""

#: ../../../AMDGPUUsage.rst:3817
msgid "PRIV"
msgstr ""

#: ../../../AMDGPUUsage.rst:3819
msgid "Start executing wavefront in privilege trap handler mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3823
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.PRIV``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3826
msgid "21"
msgstr ""

#: ../../../AMDGPUUsage.rst:3826
msgid "ENABLE_DX10_CLAMP"
msgstr ""

#: ../../../AMDGPUUsage.rst:3826
msgid ""
"Wavefront starts execution with DX10 clamp mode enabled. Used by the vector "
"ALU to force DX10 style treatment of NaN's (when set, clamp NaN to zero, "
"otherwise pass NaN through)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3835
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.DX10_CLAMP``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3837
msgid "22"
msgstr ""

#: ../../../AMDGPUUsage.rst:3837
msgid "DEBUG_MODE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3839
msgid "Start executing wavefront in single step mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3842
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.DEBUG_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3845
msgid "23"
msgstr ""

#: ../../../AMDGPUUsage.rst:3845
msgid "ENABLE_IEEE_MODE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3845
msgid ""
"Wavefront starts execution with IEEE mode enabled. Floating point opcodes "
"that support exception flag gathering will quiet and propagate signaling-NaN "
"inputs per IEEE 754-2008. Min_dx10 and max_dx10 become IEEE 754-2008 "
"compliant due to signaling-NaN propagation and quieting."
msgstr ""

#: ../../../AMDGPUUsage.rst:3858
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.IEEE_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3860 ../../../AMDGPUUsage.rst:4074
msgid "24"
msgstr ""

#: ../../../AMDGPUUsage.rst:3860
msgid "BULKY"
msgstr ""

#: ../../../AMDGPUUsage.rst:3862
msgid "Only one work-group allowed to execute on a compute unit."
msgstr ""

#: ../../../AMDGPUUsage.rst:3866
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.BULKY``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3869 ../../../AMDGPUUsage.rst:4084
msgid "25"
msgstr ""

#: ../../../AMDGPUUsage.rst:3869
msgid "CDBG_USER"
msgstr ""

#: ../../../AMDGPUUsage.rst:3871
msgid "Flag that can be used to control debugging code."
msgstr ""

#: ../../../AMDGPUUsage.rst:3874
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.CDBG_USER``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3877 ../../../AMDGPUUsage.rst:4087
msgid "26"
msgstr ""

#: ../../../AMDGPUUsage.rst:3877
msgid "FP16_OVFL"
msgstr ""

#: ../../../AMDGPUUsage.rst:3893 ../../../AMDGPUUsage.rst:4384
#: ../../../AMDGPUUsage.rst:9342
msgid "GFX9-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:3880
msgid "Wavefront starts execution with specified fp16 overflow mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3884
msgid "If 0, fp16 overflow generates +/-INF values."
msgstr ""

#: ../../../AMDGPUUsage.rst:3886
msgid ""
"If 1, fp16 overflow that is the result of an +/-INF input value or divide by "
"0 produces a +/-INF, otherwise clamps computed overflow to +/-MAX_FP16 as "
"appropriate."
msgstr ""

#: ../../../AMDGPUUsage.rst:3893
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.FP16_OVFL``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3895
msgid "28:27"
msgstr ""

#: ../../../AMDGPUUsage.rst:3896 ../../../AMDGPUUsage.rst:4093
msgid "29"
msgstr ""

#: ../../../AMDGPUUsage.rst:3896
msgid "WGP_MODE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3899
msgid "If 0 execute work-groups in CU wavefront execution mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3901
msgid "If 1 execute work-groups on in WGP wavefront execution mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3904
msgid "See :ref:`amdgpu-amdhsa-memory-model`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3906
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.WGP_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3908 ../../../AMDGPUUsage.rst:4095
msgid "30"
msgstr ""

#: ../../../AMDGPUUsage.rst:3908
msgid "MEM_ORDERED"
msgstr ""

#: ../../../AMDGPUUsage.rst:3911
msgid "Controls the behavior of the s_waitcnt's vmcnt and vscnt counters."
msgstr ""

#: ../../../AMDGPUUsage.rst:3915
msgid ""
"If 0 vmcnt reports completion of load and atomic with return out of order "
"with sample instructions, and the vscnt reports the completion of store and "
"atomic without return in order."
msgstr ""

#: ../../../AMDGPUUsage.rst:3922
msgid ""
"If 1 vmcnt reports completion of load, atomic with return and sample "
"instructions in order, and the vscnt reports the completion of store and "
"atomic without return in order."
msgstr ""

#: ../../../AMDGPUUsage.rst:3929
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.MEM_ORDERED``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3931 ../../../AMDGPUUsage.rst:4098
msgid "31"
msgstr ""

#: ../../../AMDGPUUsage.rst:3931
msgid "FWD_PROGRESS"
msgstr ""

#: ../../../AMDGPUUsage.rst:3934
msgid "If 0 execute SIMD wavefronts using oldest first policy."
msgstr ""

#: ../../../AMDGPUUsage.rst:3936
msgid ""
"If 1 execute SIMD wavefronts to ensure wavefronts will make some forward "
"progress."
msgstr ""

#: ../../../AMDGPUUsage.rst:3940
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.FWD_PROGRESS``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3942
msgid "**Total size 4 bytes**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3947
msgid "compute_pgm_rsrc2 for GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:3953
msgid "ENABLE_PRIVATE_SEGMENT"
msgstr ""

#: ../../../AMDGPUUsage.rst:3953
msgid "Enable the setup of the private segment."
msgstr ""

#: ../../../AMDGPUUsage.rst:3956
msgid ""
"In addition, enable the setup of the SGPR wavefront scratch offset system "
"register (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3962
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.SCRATCH_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3964
msgid "5:1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3964
msgid "5 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3964
msgid "USER_SGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:3964
msgid ""
"The total number of SGPR user data registers requested. This number must "
"match the number of user data registers enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:3970
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.USER_SGPR``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3972
msgid "ENABLE_TRAP_HANDLER"
msgstr ""

#: ../../../AMDGPUUsage.rst:3974
msgid ""
"This bit represents ``COMPUTE_PGM_RSRC2.TRAP_PRESENT``, which is set by the "
"CP if the runtime has installed a trap handler."
msgstr ""

#: ../../../AMDGPUUsage.rst:3979
msgid "ENABLE_SGPR_WORKGROUP_ID_X"
msgstr ""

#: ../../../AMDGPUUsage.rst:3979
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the X "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3985
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_X_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3987
msgid "ENABLE_SGPR_WORKGROUP_ID_Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:3987
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the Y "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3993
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_Y_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3995
msgid "ENABLE_SGPR_WORKGROUP_ID_Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:3995
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the Z "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4001
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_Z_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4003
msgid "ENABLE_SGPR_WORKGROUP_INFO"
msgstr ""

#: ../../../AMDGPUUsage.rst:4003
msgid ""
"Enable the setup of the system SGPR register for work-group information "
"(see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4008
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_SIZE_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4010
msgid "12:11"
msgstr ""

#: ../../../AMDGPUUsage.rst:4010
msgid "ENABLE_VGPR_WORKITEM_ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:4010
msgid ""
"Enable the setup of the VGPR system registers used for the work-item ID. :"
"ref:`amdgpu-amdhsa-system-vgpr-work-item-id-enumeration-values-table` "
"defines the values."
msgstr ""

#: ../../../AMDGPUUsage.rst:4016
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TIDIG_CMP_CNT``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4018
msgid "ENABLE_EXCEPTION_ADDRESS_WATCH"
msgstr ""

#: ../../../AMDGPUUsage.rst:4020
msgid ""
"Wavefront starts execution with address watch exceptions enabled which are "
"generated when L1 has witnessed a thread access an *address of interest*."
msgstr ""

#: ../../../AMDGPUUsage.rst:4028
msgid ""
"CP is responsible for filling in the address watch bit in "
"``COMPUTE_PGM_RSRC2.EXCP_EN_MSB`` according to what the runtime requests."
msgstr ""

#: ../../../AMDGPUUsage.rst:4034
msgid "14"
msgstr ""

#: ../../../AMDGPUUsage.rst:4034
msgid "ENABLE_EXCEPTION_MEMORY"
msgstr ""

#: ../../../AMDGPUUsage.rst:4036
msgid ""
"Wavefront starts execution with memory violation exceptions exceptions "
"enabled which are generated when a memory violation has occurred for this "
"wavefront from L1 or LDS (write-to-read-only-memory, mis-aligned atomic, LDS "
"address out of range, illegal address, etc.)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4048
msgid ""
"CP sets the memory violation bit in ``COMPUTE_PGM_RSRC2.EXCP_EN_MSB`` "
"according to what the runtime requests."
msgstr ""

#: ../../../AMDGPUUsage.rst:4053
msgid "23:15"
msgstr ""

#: ../../../AMDGPUUsage.rst:4053
msgid "9 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:4053
msgid "GRANULATED_LDS_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:4055
msgid ""
"CP uses the rounded value from the dispatch packet, not this value, as the "
"dispatch may contain dynamically allocated group segment memory. CP writes "
"directly to ``COMPUTE_PGM_RSRC2.LDS_SIZE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4064
msgid ""
"Amount of group segment (LDS) to allocate for each work-group. Granularity "
"is device specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4069
msgid "GFX6:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4070
msgid "roundup(lds-size / (64 * 4))"
msgstr ""

#: ../../../AMDGPUUsage.rst:4072
msgid "GFX7-GFX10:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4072
msgid "roundup(lds-size / (128 * 4))"
msgstr ""

#: ../../../AMDGPUUsage.rst:4074
msgid "ENABLE_EXCEPTION_IEEE_754_FP _INVALID_OPERATION"
msgstr ""

#: ../../../AMDGPUUsage.rst:4074
msgid "Wavefront starts execution with specified exceptions enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:4078
msgid ""
"Used by CP to set up ``COMPUTE_PGM_RSRC2.EXCP_EN`` (set from bits 0..6)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4082
msgid "IEEE 754 FP Invalid Operation"
msgstr ""

#: ../../../AMDGPUUsage.rst:4084
msgid "ENABLE_EXCEPTION_FP_DENORMAL _SOURCE"
msgstr ""

#: ../../../AMDGPUUsage.rst:4084
msgid "FP Denormal one or more input operands is a denormal number"
msgstr ""

#: ../../../AMDGPUUsage.rst:4087
msgid "ENABLE_EXCEPTION_IEEE_754_FP _DIVISION_BY_ZERO"
msgstr ""

#: ../../../AMDGPUUsage.rst:4087
msgid "IEEE 754 FP Division by Zero"
msgstr ""

#: ../../../AMDGPUUsage.rst:4089
msgid "27"
msgstr ""

#: ../../../AMDGPUUsage.rst:4089
msgid "ENABLE_EXCEPTION_IEEE_754_FP _OVERFLOW"
msgstr ""

#: ../../../AMDGPUUsage.rst:4089
msgid "IEEE 754 FP FP Overflow"
msgstr ""

#: ../../../AMDGPUUsage.rst:4091
msgid "28"
msgstr ""

#: ../../../AMDGPUUsage.rst:4091
msgid "ENABLE_EXCEPTION_IEEE_754_FP _UNDERFLOW"
msgstr ""

#: ../../../AMDGPUUsage.rst:4091
msgid "IEEE 754 FP Underflow"
msgstr ""

#: ../../../AMDGPUUsage.rst:4093
msgid "ENABLE_EXCEPTION_IEEE_754_FP _INEXACT"
msgstr ""

#: ../../../AMDGPUUsage.rst:4093
msgid "IEEE 754 FP Inexact"
msgstr ""

#: ../../../AMDGPUUsage.rst:4095
msgid "ENABLE_EXCEPTION_INT_DIVIDE_BY _ZERO"
msgstr ""

#: ../../../AMDGPUUsage.rst:4095
msgid "Integer Division by Zero (rcp_iflag_f32 instruction only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4099 ../../../AMDGPUUsage.rst:4114
msgid "**Total size 4 bytes.**"
msgstr ""

#: ../../../AMDGPUUsage.rst:4104
msgid "compute_pgm_rsrc3 for GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:4110
msgid "3:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:4110
msgid "SHARED_VGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:4110
msgid ""
"Number of shared VGPRs for wavefront size 64. Granularity 8. Value 0-120. "
"compute_pgm_rsrc1.vgprs + shared_vgpr_cnt cannot exceed 64."
msgstr ""

#: ../../../AMDGPUUsage.rst:4112
msgid "31:4"
msgstr ""

#: ../../../AMDGPUUsage.rst:4112
msgid "28 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:4119
msgid "Floating Point Rounding Mode Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:4123 ../../../AMDGPUUsage.rst:4137
#: ../../../AMDGPUUsage.rst:4152
msgid "Enumeration Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:4125
msgid "FLOAT_ROUND_MODE_NEAR_EVEN"
msgstr ""

#: ../../../AMDGPUUsage.rst:4125
msgid "Round Ties To Even"
msgstr ""

#: ../../../AMDGPUUsage.rst:4126
msgid "FLOAT_ROUND_MODE_PLUS_INFINITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:4126
msgid "Round Toward +infinity"
msgstr ""

#: ../../../AMDGPUUsage.rst:4127
msgid "FLOAT_ROUND_MODE_MINUS_INFINITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:4127
msgid "Round Toward -infinity"
msgstr ""

#: ../../../AMDGPUUsage.rst:4128
msgid "FLOAT_ROUND_MODE_ZERO"
msgstr ""

#: ../../../AMDGPUUsage.rst:4128
msgid "Round Toward 0"
msgstr ""

#: ../../../AMDGPUUsage.rst:4133
msgid "Floating Point Denorm Mode Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:4139
msgid "FLOAT_DENORM_MODE_FLUSH_SRC_DST"
msgstr ""

#: ../../../AMDGPUUsage.rst:4139
msgid "Flush Source and Destination Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:4141
msgid "FLOAT_DENORM_MODE_FLUSH_DST"
msgstr ""

#: ../../../AMDGPUUsage.rst:4141
msgid "Flush Output Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:4142
msgid "FLOAT_DENORM_MODE_FLUSH_SRC"
msgstr ""

#: ../../../AMDGPUUsage.rst:4142
msgid "Flush Source Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:4143
msgid "FLOAT_DENORM_MODE_FLUSH_NONE"
msgstr ""

#: ../../../AMDGPUUsage.rst:4143
msgid "No Flush"
msgstr ""

#: ../../../AMDGPUUsage.rst:4148
msgid "System VGPR Work-Item ID Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:4154
msgid "SYSTEM_VGPR_WORKITEM_ID_X"
msgstr ""

#: ../../../AMDGPUUsage.rst:4154
msgid "Set work-item X dimension ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:4156
msgid "SYSTEM_VGPR_WORKITEM_ID_X_Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:4156
msgid "Set work-item X and Y dimensions ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:4158
msgid "SYSTEM_VGPR_WORKITEM_ID_X_Y_Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:4158
msgid "Set work-item X, Y and Z dimensions ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:4160
msgid "SYSTEM_VGPR_WORKITEM_ID_UNDEFINED"
msgstr ""

#: ../../../AMDGPUUsage.rst:4160
msgid "Undefined."
msgstr ""

#: ../../../AMDGPUUsage.rst:4166
msgid "Initial Kernel Execution State"
msgstr ""

#: ../../../AMDGPUUsage.rst:4168
msgid ""
"This section defines the register state that will be set up by the packet "
"processor prior to the start of execution of every wavefront. This is "
"limited by the constraints of the hardware controllers of CP/ADC/SPI."
msgstr ""

#: ../../../AMDGPUUsage.rst:4172
msgid ""
"The order of the SGPR registers is defined, but the compiler can specify "
"which ones are actually setup in the kernel descriptor using the "
"``enable_sgpr_*`` bit fields (see :ref:`amdgpu-amdhsa-kernel-descriptor`). "
"The register numbers used for enabled registers are dense starting at SGPR0: "
"the first enabled register is SGPR0, the next enabled register is SGPR1 "
"etc.; disabled registers do not have an SGPR number."
msgstr ""

#: ../../../AMDGPUUsage.rst:4179
msgid ""
"The initial SGPRs comprise up to 16 User SRGPs that are set by CP and apply "
"to all wavefronts of the grid. It is possible to specify more than 16 User "
"SGPRs using the ``enable_sgpr_*`` bit fields, in which case only the first "
"16 are actually initialized. These are then immediately followed by the "
"System SGPRs that are set up by ADC/SPI and can have different values for "
"each wavefront of the grid dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:4186
msgid ""
"SGPR register initial state is defined in :ref:`amdgpu-amdhsa-sgpr-register-"
"set-up-order-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4189
msgid "SGPR Register Set Up Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:4193
msgid "SGPR Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:4193 ../../../AMDGPUUsage.rst:4305
msgid "Name (kernel descriptor enable field)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4193
msgid "Number of SGPRs"
msgstr ""

#: ../../../AMDGPUUsage.rst:4197 ../../../AMDGPUUsage.rst:4309
msgid "First"
msgstr ""

#: ../../../AMDGPUUsage.rst:4197
msgid "Private Segment Buffer (enable_sgpr_private _segment_buffer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4197
msgid "See :ref:`amdgpu-amdhsa-kernel-prolog-private-segment-buffer`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4200 ../../../AMDGPUUsage.rst:4203
#: ../../../AMDGPUUsage.rst:4207 ../../../AMDGPUUsage.rst:4216
#: ../../../AMDGPUUsage.rst:4219 ../../../AMDGPUUsage.rst:4221
#: ../../../AMDGPUUsage.rst:4243 ../../../AMDGPUUsage.rst:4251
#: ../../../AMDGPUUsage.rst:4262 ../../../AMDGPUUsage.rst:4273
#: ../../../AMDGPUUsage.rst:4276 ../../../AMDGPUUsage.rst:4279
#: ../../../AMDGPUUsage.rst:4282 ../../../AMDGPUUsage.rst:4285
#: ../../../AMDGPUUsage.rst:4312 ../../../AMDGPUUsage.rst:4315
msgid "then"
msgstr ""

#: ../../../AMDGPUUsage.rst:4200
msgid "Dispatch Ptr (enable_sgpr_dispatch_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4200
msgid ""
"64-bit address of AQL dispatch packet for kernel dispatch actually executing."
msgstr ""

#: ../../../AMDGPUUsage.rst:4203
msgid "Queue Ptr (enable_sgpr_queue_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4203
msgid ""
"64-bit address of amd_queue_t object for AQL queue on which the dispatch "
"packet was queued."
msgstr ""

#: ../../../AMDGPUUsage.rst:4207
msgid "Kernarg Segment Ptr (enable_sgpr_kernarg _segment_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4207
msgid ""
"64-bit address of Kernarg segment. This is directly copied from the "
"kernarg_address in the kernel dispatch packet."
msgstr ""

#: ../../../AMDGPUUsage.rst:4213 ../../../AMDGPUUsage.rst:4232
msgid ""
"Having CP load it once avoids loading it at the beginning of every wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:4216
msgid "Dispatch Id (enable_sgpr_dispatch_id)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4216
msgid "64-bit Dispatch ID of the dispatch packet being executed."
msgstr ""

#: ../../../AMDGPUUsage.rst:4219
msgid "Flat Scratch Init"
msgstr ""

#: ../../../AMDGPUUsage.rst:4219
msgid "See :ref:`amdgpu-amdhsa-kernel-prolog-flat-scratch`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4221
msgid "Private Segment Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:4221
msgid ""
"The 32-bit byte size of a (enable_sgpr_private single work-item's "
"scratch_segment_size) memory allocation. This is the value from the kernel "
"dispatch packet Private Segment Byte Size rounded up by CP to a multiple of "
"DWORD."
msgstr ""

#: ../../../AMDGPUUsage.rst:4236
msgid ""
"This is not used for GFX7-GFX8 since it is the same value as the second SGPR "
"of Flat Scratch Init. However, it may be needed for GFX9-GFX10 which changes "
"the meaning of the Flat Scratch Init value."
msgstr ""

#: ../../../AMDGPUUsage.rst:4243
msgid "Grid Work-Group Count X (enable_sgpr_grid _workgroup_count_X)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4243
msgid ""
"32-bit count of the number of work-groups in the X dimension for the grid "
"being executed. Computed from the fields in the kernel dispatch packet as "
"((grid_size.x + workgroup_size.x - 1) / workgroup_size.x)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4251
msgid ""
"Grid Work-Group Count Y (enable_sgpr_grid _workgroup_count_Y && less than 16 "
"previous SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4251
msgid ""
"32-bit count of the number of work-groups in the Y dimension for the grid "
"being executed. Computed from the fields in the kernel dispatch packet as "
"((grid_size.y + workgroup_size.y - 1) / workgroupSize.y)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4260 ../../../AMDGPUUsage.rst:4271
msgid "Only initialized if <16 previous SGPRs initialized."
msgstr ""

#: ../../../AMDGPUUsage.rst:4262
msgid ""
"Grid Work-Group Count Z (enable_sgpr_grid _workgroup_count_Z && less than 16 "
"previous SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4262
msgid ""
"32-bit count of the number of work-groups in the Z dimension for the grid "
"being executed. Computed from the fields in the kernel dispatch packet as "
"((grid_size.z + workgroup_size.z - 1) / workgroupSize.z)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4273
msgid "Work-Group Id X (enable_sgpr_workgroup_id _X)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4273
msgid "32-bit work-group id in X dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:4276
msgid "Work-Group Id Y (enable_sgpr_workgroup_id _Y)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4276
msgid "32-bit work-group id in Y dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:4279
msgid "Work-Group Id Z (enable_sgpr_workgroup_id _Z)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4279
msgid "32-bit work-group id in Z dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:4282
msgid "Work-Group Info (enable_sgpr_workgroup _info)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4282
msgid ""
"{first_wavefront, 14'b0000, ordered_append_term[10:0], "
"threadgroup_size_in_wavefronts[5:0]}"
msgstr ""

#: ../../../AMDGPUUsage.rst:4285
msgid ""
"Scratch Wavefront Offset (enable_sgpr_private _segment_wavefront_offset)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4285
msgid ""
"See :ref:`amdgpu-amdhsa-kernel-prolog-flat-scratch`. and :ref:`amdgpu-amdhsa-"
"kernel-prolog-private-segment-buffer`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4291
msgid ""
"The order of the VGPR registers is defined, but the compiler can specify "
"which ones are actually setup in the kernel descriptor using the "
"``enable_vgpr*`` bit fields (see :ref:`amdgpu-amdhsa-kernel-descriptor`). "
"The register numbers used for enabled registers are dense starting at VGPR0: "
"the first enabled register is VGPR0, the next enabled register is VGPR1 "
"etc.; disabled registers do not have a VGPR number."
msgstr ""

#: ../../../AMDGPUUsage.rst:4298
msgid ""
"VGPR register initial state is defined in :ref:`amdgpu-amdhsa-vgpr-register-"
"set-up-order-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4301
msgid "VGPR Register Set Up Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:4305
msgid "VGPR Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:4305
msgid "Number of VGPRs"
msgstr ""

#: ../../../AMDGPUUsage.rst:4309
msgid "Work-Item Id X (Always initialized)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4309
msgid "32-bit work-item id in X dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:4312
msgid "Work-Item Id Y (enable_vgpr_workitem_id > 0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4312
msgid "32-bit work-item id in Y dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:4315
msgid "Work-Item Id Z (enable_vgpr_workitem_id > 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4315
msgid "32-bit work-item id in Z dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:4320
msgid "The setting of registers is done by GPU CP/ADC/SPI hardware as follows:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4322
msgid ""
"SGPRs before the Work-Group Ids are set by CP using the 16 User Data "
"registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:4324
msgid ""
"Work-group Id registers X, Y, Z are set by ADC which supports any "
"combination including none."
msgstr ""

#: ../../../AMDGPUUsage.rst:4326
msgid ""
"Scratch Wavefront Offset is set by SPI in a per wavefront basis which is why "
"its value cannot be included with the flat scratch init value which is per "
"queue (see :ref:`amdgpu-amdhsa-kernel-prolog-flat-scratch`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4329
msgid ""
"The VGPRs are set by SPI which only supports specifying either (X), (X, Y) "
"or (X, Y, Z)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4331
msgid ""
"Flat Scratch register pair initialization is described in :ref:`amdgpu-"
"amdhsa-kernel-prolog-flat-scratch`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4334
msgid ""
"The global segment can be accessed either using buffer instructions (GFX6 "
"which has V# 64-bit address support), flat instructions (GFX7-GFX10), or "
"global instructions (GFX9-GFX10)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4338
msgid ""
"If buffer operations are used, then the compiler can generate a V# with the "
"following properties:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4341
msgid "base address of 0"
msgstr ""

#: ../../../AMDGPUUsage.rst:4342
msgid "no swizzle"
msgstr ""

#: ../../../AMDGPUUsage.rst:4343
msgid "ATC: 1 if IOMMU present (such as APU)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4344
msgid "ptr64: 1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4345
msgid ""
"MTYPE set to support memory coherence that matches the runtime (such as CC "
"for APU and NC for dGPU)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4351
msgid "Kernel Prolog"
msgstr ""

#: ../../../AMDGPUUsage.rst:4353
msgid ""
"The compiler performs initialization in the kernel prologue depending on the "
"target and information about things like stack usage in the kernel and "
"called functions. Some of this initialization requires the compiler to "
"request certain User and System SGPRs be present in the :ref:`amdgpu-amdhsa-"
"initial-kernel-execution-state` via the :ref:`amdgpu-amdhsa-kernel-"
"descriptor`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4363
msgid "CFI"
msgstr ""

#: ../../../AMDGPUUsage.rst:4365
msgid "The CFI return address is undefined."
msgstr ""

#: ../../../AMDGPUUsage.rst:4367
msgid ""
"The CFI CFA is defined using an expression which evaluates to a location "
"description that comprises one memory location description for the "
"``DW_ASPACE_AMDGPU_private_lane`` address space address ``0``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4374
msgid "M0"
msgstr ""

#: ../../../AMDGPUUsage.rst:4377
msgid ""
"The M0 register must be initialized with a value at least the total LDS size "
"if the kernel may access LDS via DS or flat operations. Total LDS size is "
"available in dispatch packet. For M0, it is also possible to use maximum "
"possible value of LDS for given target (0x7FFF for GFX6 and 0xFFFF for GFX7-"
"GFX8)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4383
msgid ""
"The M0 register is not used for range checking LDS accesses and so does not "
"need to be initialized in the prolog."
msgstr ""

#: ../../../AMDGPUUsage.rst:4389
msgid "Stack Pointer"
msgstr ""

#: ../../../AMDGPUUsage.rst:4391
msgid ""
"If the kernel has function calls it must set up the ABI stack pointer "
"described in :ref:`amdgpu-amdhsa-function-call-convention-non-kernel-"
"functions` by setting SGPR32 to the unswizzled scratch offset of the address "
"past the last local allocation."
msgstr ""

#: ../../../AMDGPUUsage.rst:4399
msgid "Frame Pointer"
msgstr ""

#: ../../../AMDGPUUsage.rst:4401
msgid ""
"If the kernel needs a frame pointer for the reasons defined in "
"``SIFrameLowering`` then SGPR33 is used and is always set to ``0`` in the "
"kernel prolog. If a frame pointer is not required then all uses of the frame "
"pointer are replaced with immediate ``0`` offsets."
msgstr ""

#: ../../../AMDGPUUsage.rst:4409
msgid "Flat Scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:4411
msgid "There are different methods used for initializing flat scratch:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4413
msgid ""
"If the *Target Properties* column of :ref:`amdgpu-processor-table` specifies "
"*Does not support generic address space*:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4416
msgid ""
"Flat scratch is not supported and there is no flat scratch register pair."
msgstr ""

#: ../../../AMDGPUUsage.rst:4418
msgid ""
"If the *Target Properties* column of :ref:`amdgpu-processor-table` specifies "
"*Offset flat scratch*:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4421
msgid ""
"If the kernel or any function it calls may use flat operations to access "
"scratch memory, the prolog code must set up the FLAT_SCRATCH register pair "
"(FLAT_SCRATCH_LO/FLAT_SCRATCH_HI). Initialization uses Flat Scratch Init and "
"Scratch Wavefront Offset SGPR registers (see :ref:`amdgpu-amdhsa-initial-"
"kernel-execution-state`):"
msgstr ""

#: ../../../AMDGPUUsage.rst:4427
msgid ""
"The low word of Flat Scratch Init is the 32-bit byte offset from "
"``SH_HIDDEN_PRIVATE_BASE_VIMID`` to the base of scratch backing memory being "
"managed by SPI for the queue executing the kernel dispatch. This is the same "
"value used in the Scratch Segment Buffer V# base address."
msgstr ""

#: ../../../AMDGPUUsage.rst:4432
msgid ""
"CP obtains this from the runtime. (The Scratch Segment Buffer base address "
"is ``SH_HIDDEN_PRIVATE_BASE_VIMID`` plus this offset.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4435
msgid ""
"The prolog must add the value of Scratch Wavefront Offset to get the "
"wavefront's byte scratch backing memory offset from "
"``SH_HIDDEN_PRIVATE_BASE_VIMID``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4439
msgid ""
"The Scratch Wavefront Offset must also be used as an offset with Private "
"segment address when using the Scratch Segment Buffer."
msgstr ""

#: ../../../AMDGPUUsage.rst:4442
msgid ""
"Since FLAT_SCRATCH_LO is in units of 256 bytes, the offset must be right "
"shifted by 8 before moving into FLAT_SCRATCH_HI."
msgstr ""

#: ../../../AMDGPUUsage.rst:4445
msgid ""
"FLAT_SCRATCH_HI corresponds to SGPRn-4 on GFX7, and SGPRn-6 on GFX8 (where "
"SGPRn is the highest numbered SGPR allocated to the wavefront). "
"FLAT_SCRATCH_HI is multiplied by 256 (as it is in units of 256 bytes) and "
"added to ``SH_HIDDEN_PRIVATE_BASE_VIMID`` to calculate the per wavefront "
"FLAT SCRATCH BASE in flat memory instructions that access the scratch "
"aperture."
msgstr ""

#: ../../../AMDGPUUsage.rst:4451
msgid ""
"The second word of Flat Scratch Init is 32-bit byte size of a single work-"
"items scratch memory usage."
msgstr ""

#: ../../../AMDGPUUsage.rst:4454
msgid ""
"CP obtains this from the runtime, and it is always a multiple of DWORD. CP "
"checks that the value in the kernel dispatch packet Private Segment Byte "
"Size is not larger and requests the runtime to increase the queue's scratch "
"size if necessary."
msgstr ""

#: ../../../AMDGPUUsage.rst:4459
msgid ""
"CP directly loads from the kernel dispatch packet Private Segment Byte Size "
"field and rounds up to a multiple of DWORD. Having CP load it once avoids "
"loading it at the beginning of every wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:4463
msgid ""
"The kernel prolog code must move it to FLAT_SCRATCH_LO which is SGPRn-3 on "
"GFX7 and SGPRn-5 on GFX8. FLAT_SCRATCH_LO is used as the FLAT SCRATCH SIZE "
"in flat memory instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:4467
msgid ""
"If the *Target Properties* column of :ref:`amdgpu-processor-table` specifies "
"*Absolute flat scratch*:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4470
msgid ""
"If the kernel or any function it calls may use flat operations to access "
"scratch memory, the prolog code must set up the FLAT_SCRATCH register pair "
"(FLAT_SCRATCH_LO/FLAT_SCRATCH_HI which are in SGPRn-4/SGPRn-3). "
"Initialization uses Flat Scratch Init and Scratch Wavefront Offset SGPR "
"registers (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`):"
msgstr ""

#: ../../../AMDGPUUsage.rst:4476
msgid ""
"The Flat Scratch Init is the 64-bit address of the base of scratch backing "
"memory being managed by SPI for the queue executing the kernel dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:4479
msgid "CP obtains this from the runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:4481
msgid ""
"The kernel prolog must add the value of the wave's Scratch Wavefront Offset "
"and move the result as a 64-bit value to the FLAT_SCRATCH SGPR register pair "
"which is SGPRn-6 and SGPRn-5. It is used as the FLAT SCRATCH BASE in flat "
"memory instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:4486
msgid ""
"The Scratch Wavefront Offset must also be used as an offset with Private "
"segment address when using the Scratch Segment Buffer (see :ref:`amdgpu-"
"amdhsa-kernel-prolog-private-segment-buffer`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4493
msgid "Private Segment Buffer"
msgstr ""

#: ../../../AMDGPUUsage.rst:4495
msgid ""
"Private Segment Buffer SGPR register is used to initilize 4 SGPRs that are "
"used as a V# to access scratch. CP uses the value provided by the runtime. "
"It is used, together with Scratch Wavefront Offset as an offset, to access "
"the private memory space using a segment address. See :ref:`amdgpu-amdhsa-"
"initial-kernel-execution-state`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4501
msgid ""
"The scratch V# is a four-aligned SGPR and always selected for the kernel as "
"follows:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4504
msgid ""
"If it is known during instruction selection that there is stack usage, "
"SGPR0-3 is reserved for use as the scratch V#.  Stack usage is assumed if "
"optimizations are disabled (``-O0``), if stack objects already exist (for "
"locals, etc.), or if there are any function calls."
msgstr ""

#: ../../../AMDGPUUsage.rst:4509
msgid ""
"Otherwise, four high numbered SGPRs beginning at a four-aligned SGPR index "
"are reserved for the tentative scratch V#. These will be used if it is "
"determined that spilling is needed."
msgstr ""

#: ../../../AMDGPUUsage.rst:4513
msgid ""
"If no use is made of the tentative scratch V#, then it is unreserved, and "
"the register count is determined ignoring it."
msgstr ""

#: ../../../AMDGPUUsage.rst:4515
msgid ""
"If use is made of the tentative scratch V#, then its register numbers are "
"shifted to the first four-aligned SGPR index after the highest one allocated "
"by the register allocator, and all uses are updated. The register count "
"includes them in the shifted location."
msgstr ""

#: ../../../AMDGPUUsage.rst:4519
msgid ""
"In either case, if the processor has the SGPR allocation bug, the tentative "
"allocation is not shifted or unreserved in order to ensure the register "
"count is higher to workaround the bug."
msgstr ""

#: ../../../AMDGPUUsage.rst:4525
msgid ""
"This approach of using a tentative scratch V# and shifting the register "
"numbers if used avoids having to perform register allocation a second time "
"if the tentative V# is eliminated. This is more efficient and avoids the "
"problem that the second register allocation may perform spilling which will "
"fail as there is no longer a scratch V#."
msgstr ""

#: ../../../AMDGPUUsage.rst:4531
msgid ""
"When the kernel prolog code is being emitted it is known whether the scratch "
"V# described above is actually used. If it is, the prolog code must set it "
"up by copying the Private Segment Buffer to the scratch V# registers and "
"then adding the Private Segment Wavefront Offset to the queue base address "
"in the V#. The result is a V# with a base address pointing to the beginning "
"of the wavefront scratch backing memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:4538
msgid ""
"The Private Segment Buffer is always requested, but the Private Segment "
"Wavefront Offset is only requested if it is used (see :ref:`amdgpu-amdhsa-"
"initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4545
msgid "Memory Model"
msgstr ""

#: ../../../AMDGPUUsage.rst:4547
msgid ""
"This section describes the mapping of the LLVM memory model onto AMDGPU "
"machine code (see :ref:`memmodel`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4550
msgid ""
"The AMDGPU backend supports the memory synchronization scopes specified in :"
"ref:`amdgpu-memory-scopes`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4553
msgid ""
"The code sequences used to implement the memory model specify the order of "
"instructions that a single thread must execute. The ``s_waitcnt`` and cache "
"management instructions such as ``buffer_wbinvl1_vol`` are defined with "
"respect to other memory instructions executed by the same thread. This "
"allows them to be moved earlier or later which can allow them to be combined "
"with other instances of the same instruction, or hoisted/sunk out of loops "
"to improve performance. Only the instructions related to the memory model "
"are given; additional ``s_waitcnt`` instructions are required to ensure "
"registers are defined before being used. These may be able to be combined "
"with the memory model ``s_waitcnt`` instructions as described above."
msgstr ""

#: ../../../AMDGPUUsage.rst:4564
msgid "The AMDGPU backend supports the following memory models:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4567
msgid "HSA Memory Model [HSA]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:4567
msgid ""
"The HSA memory model uses a single happens-before relation for all address "
"spaces (see :ref:`amdgpu-address-spaces`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4580
msgid "OpenCL Memory Model [OpenCL]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:4570
msgid ""
"The OpenCL memory model which has separate happens-before relations for the "
"global and local address spaces. Only a fence specifying both global and "
"local address space, and seq_cst instructions join the relationships. Since "
"the LLVM ``memfence`` instruction does not allow an address space to be "
"specified the OpenCL fence has to conservatively assume both local and "
"global address space was specified. However, optimizations can often be done "
"to eliminate the additional ``s_waitcnt`` instructions when there are no "
"intervening memory instructions which access the corresponding address "
"space. The code sequences in the table indicate what can be omitted for the "
"OpenCL memory. The target triple environment is used to determine if the "
"source language is OpenCL (see :ref:`amdgpu-opencl`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4582
msgid ""
"``ds/flat_load/store/atomic`` instructions to local memory are termed LDS "
"operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:4585
msgid ""
"``buffer/global/flat_load/store/atomic`` instructions to global memory are "
"termed vector memory operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:4588
msgid ""
"Private address space uses ``buffer_load/store`` using the scratch V# (GFX6-"
"GFX8), or ``scratch_load/store`` (GFX9-GFX10). Since only a single thread is "
"accessing the memory, atomic memory orderings are not meaningful, and all "
"accesses are treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:4593
msgid ""
"Constant address space uses ``buffer/global_load`` instructions (or "
"equivalent scalar memory instructions). Since the constant address space "
"contents do not change during the execution of a kernel dispatch it is not "
"legal to perform stores, and atomic memory orderings are not meaningful, and "
"all accesses are treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:4599
msgid ""
"A memory synchronization scope wider than work-group is not meaningful for "
"the group (LDS) address space and is treated as work-group."
msgstr ""

#: ../../../AMDGPUUsage.rst:4602
msgid ""
"The memory model does not support the region address space which is treated "
"as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:4605
msgid ""
"Acquire memory ordering is not meaningful on store atomic instructions and "
"is treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:4608
msgid ""
"Release memory ordering is not meaningful on load atomic instructions and is "
"treated a non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:4611
msgid ""
"Acquire-release memory ordering is not meaningful on load or store atomic "
"instructions and is treated as acquire and release respectively."
msgstr ""

#: ../../../AMDGPUUsage.rst:4614
msgid ""
"The memory order also adds the single thread optimization constraints "
"defined in table :ref:`amdgpu-amdhsa-memory-model-single-thread-optimization-"
"constraints-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4618
msgid "AMDHSA Memory Model Single Thread Optimization Constraints"
msgstr ""

#: ../../../AMDGPUUsage.rst:4622
msgid "LLVM Memory"
msgstr ""

#: ../../../AMDGPUUsage.rst:4622
msgid "Optimization Constraints"
msgstr ""

#: ../../../AMDGPUUsage.rst:4623
msgid "Ordering"
msgstr ""

#: ../../../AMDGPUUsage.rst:4625 ../../../AMDGPUUsage.rst:4815
#: ../../../AMDGPUUsage.rst:4816 ../../../AMDGPUUsage.rst:4817
#: ../../../AMDGPUUsage.rst:6117 ../../../AMDGPUUsage.rst:6118
#: ../../../AMDGPUUsage.rst:6119
msgid "unordered"
msgstr ""

#: ../../../AMDGPUUsage.rst:4626 ../../../AMDGPUUsage.rst:4820
#: ../../../AMDGPUUsage.rst:4823 ../../../AMDGPUUsage.rst:4825
#: ../../../AMDGPUUsage.rst:4830 ../../../AMDGPUUsage.rst:4833
#: ../../../AMDGPUUsage.rst:4838 ../../../AMDGPUUsage.rst:6122
#: ../../../AMDGPUUsage.rst:6124 ../../../AMDGPUUsage.rst:6130
#: ../../../AMDGPUUsage.rst:6133 ../../../AMDGPUUsage.rst:6135
#: ../../../AMDGPUUsage.rst:6140 ../../../AMDGPUUsage.rst:6143
#: ../../../AMDGPUUsage.rst:6148
msgid "monotonic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4627 ../../../AMDGPUUsage.rst:4843
#: ../../../AMDGPUUsage.rst:4846 ../../../AMDGPUUsage.rst:4847
#: ../../../AMDGPUUsage.rst:4864 ../../../AMDGPUUsage.rst:4888
#: ../../../AMDGPUUsage.rst:4914 ../../../AMDGPUUsage.rst:4917
#: ../../../AMDGPUUsage.rst:4918 ../../../AMDGPUUsage.rst:4935
#: ../../../AMDGPUUsage.rst:4959 ../../../AMDGPUUsage.rst:4986
#: ../../../AMDGPUUsage.rst:4988 ../../../AMDGPUUsage.rst:5032
#: ../../../AMDGPUUsage.rst:6153 ../../../AMDGPUUsage.rst:6156
#: ../../../AMDGPUUsage.rst:6182 ../../../AMDGPUUsage.rst:6209
#: ../../../AMDGPUUsage.rst:6244 ../../../AMDGPUUsage.rst:6269
#: ../../../AMDGPUUsage.rst:6296 ../../../AMDGPUUsage.rst:6299
#: ../../../AMDGPUUsage.rst:6324 ../../../AMDGPUUsage.rst:6346
#: ../../../AMDGPUUsage.rst:6375 ../../../AMDGPUUsage.rst:6403
#: ../../../AMDGPUUsage.rst:6434 ../../../AMDGPUUsage.rst:6436
#: ../../../AMDGPUUsage.rst:6536
msgid "acquire"
msgstr ""

#: ../../../AMDGPUUsage.rst:4627
msgid ""
"If a load atomic/atomicrmw then no following load/load atomic/store/store "
"atomic/atomicrmw/fence instruction can be moved before the acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:4630
msgid ""
"If a fence then same as load atomic, plus no preceding associated fence-"
"paired-atomic can be moved after the fence."
msgstr ""

#: ../../../AMDGPUUsage.rst:4632 ../../../AMDGPUUsage.rst:5110
#: ../../../AMDGPUUsage.rst:5113 ../../../AMDGPUUsage.rst:5134
#: ../../../AMDGPUUsage.rst:5135 ../../../AMDGPUUsage.rst:5177
#: ../../../AMDGPUUsage.rst:5180 ../../../AMDGPUUsage.rst:5201
#: ../../../AMDGPUUsage.rst:5202 ../../../AMDGPUUsage.rst:5242
#: ../../../AMDGPUUsage.rst:5244 ../../../AMDGPUUsage.rst:5288
#: ../../../AMDGPUUsage.rst:6632 ../../../AMDGPUUsage.rst:6635
#: ../../../AMDGPUUsage.rst:6684 ../../../AMDGPUUsage.rst:6721
#: ../../../AMDGPUUsage.rst:6769 ../../../AMDGPUUsage.rst:6772
#: ../../../AMDGPUUsage.rst:6820 ../../../AMDGPUUsage.rst:6857
#: ../../../AMDGPUUsage.rst:6902 ../../../AMDGPUUsage.rst:6904
#: ../../../AMDGPUUsage.rst:6980
msgid "release"
msgstr ""

#: ../../../AMDGPUUsage.rst:4632
msgid ""
"If a store atomic/atomicrmw then no preceding load/load atomic/store/store "
"atomic/atomicrmw/fence instruction can be moved after the release."
msgstr ""

#: ../../../AMDGPUUsage.rst:4635
msgid ""
"If a fence then same as store atomic, plus no following associated fence-"
"paired-atomic can be moved before the fence."
msgstr ""

#: ../../../AMDGPUUsage.rst:4638 ../../../AMDGPUUsage.rst:5357
#: ../../../AMDGPUUsage.rst:5360 ../../../AMDGPUUsage.rst:5382
#: ../../../AMDGPUUsage.rst:5399 ../../../AMDGPUUsage.rst:5436
#: ../../../AMDGPUUsage.rst:5499 ../../../AMDGPUUsage.rst:5565
#: ../../../AMDGPUUsage.rst:5567 ../../../AMDGPUUsage.rst:5636
#: ../../../AMDGPUUsage.rst:7054 ../../../AMDGPUUsage.rst:7057
#: ../../../AMDGPUUsage.rst:7138 ../../../AMDGPUUsage.rst:7198
#: ../../../AMDGPUUsage.rst:7272 ../../../AMDGPUUsage.rst:7344
#: ../../../AMDGPUUsage.rst:7419 ../../../AMDGPUUsage.rst:7421
#: ../../../AMDGPUUsage.rst:7546
msgid "acq_rel"
msgstr ""

#: ../../../AMDGPUUsage.rst:4638
msgid "Same constraints as both acquire and release."
msgstr ""

#: ../../../AMDGPUUsage.rst:4639 ../../../AMDGPUUsage.rst:5732
#: ../../../AMDGPUUsage.rst:5737 ../../../AMDGPUUsage.rst:5803
#: ../../../AMDGPUUsage.rst:5809 ../../../AMDGPUUsage.rst:5900
#: ../../../AMDGPUUsage.rst:5905 ../../../AMDGPUUsage.rst:5910
#: ../../../AMDGPUUsage.rst:7653 ../../../AMDGPUUsage.rst:7658
#: ../../../AMDGPUUsage.rst:7768 ../../../AMDGPUUsage.rst:7862
#: ../../../AMDGPUUsage.rst:7969 ../../../AMDGPUUsage.rst:7974
#: ../../../AMDGPUUsage.rst:7979
msgid "seq_cst"
msgstr ""

#: ../../../AMDGPUUsage.rst:4639
msgid ""
"If a load atomic then same constraints as acquire, plus no preceding "
"sequentially consistent load atomic/store atomic/atomicrmw/fence instruction "
"can be moved after the seq_cst."
msgstr ""

#: ../../../AMDGPUUsage.rst:4643
msgid ""
"If a store atomic then the same constraints as release, plus no following "
"sequentially consistent load atomic/store atomic/atomicrmw/fence instruction "
"can be moved before the seq_cst."
msgstr ""

#: ../../../AMDGPUUsage.rst:4647
msgid "If an atomicrmw/fence then same constraints as acq_rel."
msgstr ""

#: ../../../AMDGPUUsage.rst:4650
msgid ""
"The code sequences used to implement the memory model are defined in the "
"following sections:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4653
msgid ":ref:`amdgpu-amdhsa-memory-model-gfx6-gfx9`"
msgstr ""

#: ../../../AMDGPUUsage.rst:4654
msgid ":ref:`amdgpu-amdhsa-memory-model-gfx10`"
msgstr ""

#: ../../../AMDGPUUsage.rst:4659
msgid "Memory Model GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:4661
msgid "For GFX6-GFX9:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4663 ../../../AMDGPUUsage.rst:5924
msgid "Each agent has multiple shader arrays (SA)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4664
msgid "Each SA has multiple compute units (CU)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4665 ../../../AMDGPUUsage.rst:5927
msgid "Each CU has multiple SIMDs that execute wavefronts."
msgstr ""

#: ../../../AMDGPUUsage.rst:4666
msgid ""
"The wavefronts for a single work-group are executed in the same CU but may "
"be executed by different SIMDs."
msgstr ""

#: ../../../AMDGPUUsage.rst:4668
msgid ""
"Each CU has a single LDS memory shared by the wavefronts of the work-groups "
"executing on it."
msgstr ""

#: ../../../AMDGPUUsage.rst:4670
msgid ""
"All LDS operations of a CU are performed as wavefront wide operations in a "
"global order and involve no caching. Completion is reported to a wavefront "
"in execution order."
msgstr ""

#: ../../../AMDGPUUsage.rst:4673
msgid ""
"The LDS memory has multiple request queues shared by the SIMDs of a CU. "
"Therefore, the LDS operations performed by different wavefronts of a work-"
"group can be reordered relative to each other, which can result in "
"reordering the visibility of vector memory operations with respect to LDS "
"operations of other wavefronts in the same work-group. A ``s_waitcnt "
"lgkmcnt(0)`` is required to ensure synchronization between LDS operations "
"and vector memory operations between wavefronts of a work-group, but not "
"between operations performed by the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:4681
msgid ""
"The vector memory operations are performed as wavefront wide operations and "
"completion is reported to a wavefront in execution order. The exception is "
"that for GFX7-GFX9 ``flat_load/store/atomic`` instructions can report out of "
"vector memory order if they access LDS memory, and out of LDS operation "
"order if they access global memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:4686
msgid ""
"The vector memory operations access a single vector L1 cache shared by all "
"SIMDs a CU. Therefore, no special action is required for coherence between "
"the lanes of a single wavefront, or for coherence between wavefronts in the "
"same work-group. A ``buffer_wbinvl1_vol`` is required for coherence between "
"wavefronts executing in different work-groups as they may be executing on "
"different CUs."
msgstr ""

#: ../../../AMDGPUUsage.rst:4692
msgid ""
"The scalar memory operations access a scalar L1 cache shared by all "
"wavefronts on a group of CUs. The scalar and vector L1 caches are not "
"coherent. However, scalar operations are used in a restricted way so do not "
"impact the memory model. See :ref:`amdgpu-amdhsa-memory-spaces`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4696
msgid ""
"The vector and scalar memory operations use an L2 cache shared by all CUs on "
"the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:4698 ../../../AMDGPUUsage.rst:5979
msgid ""
"The L2 cache has independent channels to service disjoint ranges of virtual "
"addresses."
msgstr ""

#: ../../../AMDGPUUsage.rst:4700
msgid ""
"Each CU has a separate request queue per channel. Therefore, the vector and "
"scalar memory operations performed by wavefronts executing in different work-"
"groups (which may be executing on different CUs) of an agent can be "
"reordered relative to each other. A ``s_waitcnt vmcnt(0)`` is required to "
"ensure synchronization between vector memory operations of different CUs. It "
"ensures a previous vector memory operation has completed before executing a "
"subsequent vector memory or LDS operation and so can be used to meet the "
"requirements of acquire and release."
msgstr ""

#: ../../../AMDGPUUsage.rst:4708 ../../../AMDGPUUsage.rst:5990
msgid ""
"The L2 cache can be kept coherent with other agents on some targets, or "
"ranges of virtual addresses can be set up to bypass it to ensure system "
"coherence."
msgstr ""

#: ../../../AMDGPUUsage.rst:4711 ../../../AMDGPUUsage.rst:5993
msgid ""
"Scalar memory operations are only used to access memory that is proven to "
"not change during the execution of the kernel dispatch. This includes "
"constant address space and global address space for program scope ``const`` "
"variables. Therefore, the kernel machine code does not have to maintain the "
"scalar cache to ensure it is coherent with the vector caches. The scalar and "
"vector caches are invalidated between kernel dispatches by CP since constant "
"address space data may change between kernel dispatch executions. See :ref:"
"`amdgpu-amdhsa-memory-spaces`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4720 ../../../AMDGPUUsage.rst:6002
msgid ""
"The one exception is if scalar writes are used to spill SGPR registers. In "
"this case the AMDGPU backend ensures the memory location used to spill is "
"never accessed by vector memory operations at the same time. If scalar "
"writes are used then a ``s_dcache_wb`` is inserted before the ``s_endpgm`` "
"and before a function return since the locations may be used for vector "
"memory instructions by a future wavefront that uses the same scratch area, "
"or a function call that creates a frame at the same address, respectively. "
"There is no need for a ``s_dcache_inv`` as all scalar writes are write-"
"before-read in the same thread."
msgstr ""

#: ../../../AMDGPUUsage.rst:4729 ../../../AMDGPUUsage.rst:6011
msgid "For kernarg backing memory:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4731
msgid "CP invalidates the L1 cache at the start of each kernel dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:4732
msgid ""
"On dGPU the kernarg backing memory is allocated in host memory accessed as "
"MTYPE UC (uncached) to avoid needing to invalidate the L2 cache. This also "
"causes it to be treated as non-volatile and so is not invalidated by "
"``*_vol``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4736
msgid ""
"On APU the kernarg backing memory it is accessed as MTYPE CC (cache "
"coherent) and so the L2 cache will be coherent with the CPU and other agents."
msgstr ""

#: ../../../AMDGPUUsage.rst:4739
msgid ""
"Scratch backing memory (which is used for the private address space) is "
"accessed with MTYPE NC_NV (non-coherent non-volatile). Since the private "
"address space is only accessed by a single thread, and is always write-"
"before-read, there is never a need to invalidate these entries from the L1 "
"cache. Hence all cache invalidates are done as ``*_vol`` to only invalidate "
"the volatile cache lines."
msgstr ""

#: ../../../AMDGPUUsage.rst:4745
msgid ""
"The code sequences used to implement the memory model for GFX6-GFX9 are "
"defined in table :ref:`amdgpu-amdhsa-memory-model-code-sequences-gfx6-gfx9-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4748
msgid "AMDHSA Memory Model Code Sequences GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:4752 ../../../AMDGPUUsage.rst:6054
msgid "LLVM Instr"
msgstr ""

#: ../../../AMDGPUUsage.rst:4752 ../../../AMDGPUUsage.rst:6054
msgid "LLVM Memory Ordering"
msgstr ""

#: ../../../AMDGPUUsage.rst:4752 ../../../AMDGPUUsage.rst:6054
msgid "LLVM Memory Sync Scope"
msgstr ""

#: ../../../AMDGPUUsage.rst:4752 ../../../AMDGPUUsage.rst:6054
msgid "AMDGPU Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:4752
msgid "AMDGPU Machine Code GFX6-9"
msgstr ""

#: ../../../AMDGPUUsage.rst:4756 ../../../AMDGPUUsage.rst:6058
msgid "**Non-Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:4758 ../../../AMDGPUUsage.rst:4785
#: ../../../AMDGPUUsage.rst:6060 ../../../AMDGPUUsage.rst:6087
msgid "load"
msgstr ""

#: ../../../AMDGPUUsage.rst:4759 ../../../AMDGPUUsage.rst:4787
#: ../../../AMDGPUUsage.rst:4822 ../../../AMDGPUUsage.rst:4824
#: ../../../AMDGPUUsage.rst:4826 ../../../AMDGPUUsage.rst:4834
#: ../../../AMDGPUUsage.rst:4845 ../../../AMDGPUUsage.rst:4848
#: ../../../AMDGPUUsage.rst:4888 ../../../AMDGPUUsage.rst:4916
#: ../../../AMDGPUUsage.rst:4919 ../../../AMDGPUUsage.rst:4959
#: ../../../AMDGPUUsage.rst:5112 ../../../AMDGPUUsage.rst:5114
#: ../../../AMDGPUUsage.rst:5136 ../../../AMDGPUUsage.rst:5179
#: ../../../AMDGPUUsage.rst:5181 ../../../AMDGPUUsage.rst:5203
#: ../../../AMDGPUUsage.rst:5359 ../../../AMDGPUUsage.rst:5399
#: ../../../AMDGPUUsage.rst:5499 ../../../AMDGPUUsage.rst:5734
#: ../../../AMDGPUUsage.rst:5738 ../../../AMDGPUUsage.rst:5810
#: ../../../AMDGPUUsage.rst:5902 ../../../AMDGPUUsage.rst:5907
#: ../../../AMDGPUUsage.rst:6061 ../../../AMDGPUUsage.rst:6089
#: ../../../AMDGPUUsage.rst:6123 ../../../AMDGPUUsage.rst:6125
#: ../../../AMDGPUUsage.rst:6134 ../../../AMDGPUUsage.rst:6136
#: ../../../AMDGPUUsage.rst:6144 ../../../AMDGPUUsage.rst:6155
#: ../../../AMDGPUUsage.rst:6209 ../../../AMDGPUUsage.rst:6269
#: ../../../AMDGPUUsage.rst:6298 ../../../AMDGPUUsage.rst:6346
#: ../../../AMDGPUUsage.rst:6403 ../../../AMDGPUUsage.rst:6634
#: ../../../AMDGPUUsage.rst:6636 ../../../AMDGPUUsage.rst:6722
#: ../../../AMDGPUUsage.rst:6771 ../../../AMDGPUUsage.rst:6773
#: ../../../AMDGPUUsage.rst:6858 ../../../AMDGPUUsage.rst:7056
#: ../../../AMDGPUUsage.rst:7198 ../../../AMDGPUUsage.rst:7344
#: ../../../AMDGPUUsage.rst:7655 ../../../AMDGPUUsage.rst:7659
#: ../../../AMDGPUUsage.rst:7863 ../../../AMDGPUUsage.rst:7971
#: ../../../AMDGPUUsage.rst:7976
msgid "generic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4758 ../../../AMDGPUUsage.rst:4786
#: ../../../AMDGPUUsage.rst:6060 ../../../AMDGPUUsage.rst:6088
msgid "!volatile & !nontemporal"
msgstr ""

#: ../../../AMDGPUUsage.rst:4760 ../../../AMDGPUUsage.rst:6062
#: ../../../AMDGPUUsage.rst:6122
msgid "buffer/global/flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:4762 ../../../AMDGPUUsage.rst:4790
#: ../../../AMDGPUUsage.rst:6064 ../../../AMDGPUUsage.rst:6092
msgid "!volatile & nontemporal"
msgstr ""

#: ../../../AMDGPUUsage.rst:4764
msgid "buffer/global/flat_load glc=1 slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4767 ../../../AMDGPUUsage.rst:4795
#: ../../../AMDGPUUsage.rst:6069 ../../../AMDGPUUsage.rst:6097
msgid "volatile"
msgstr ""

#: ../../../AMDGPUUsage.rst:4769 ../../../AMDGPUUsage.rst:4823
#: ../../../AMDGPUUsage.rst:6124
msgid "buffer/global/flat_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4771 ../../../AMDGPUUsage.rst:4798
#: ../../../AMDGPUUsage.rst:4866 ../../../AMDGPUUsage.rst:4936
#: ../../../AMDGPUUsage.rst:5476 ../../../AMDGPUUsage.rst:6073
#: ../../../AMDGPUUsage.rst:6161 ../../../AMDGPUUsage.rst:6246
msgid "s_waitcnt vmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4773 ../../../AMDGPUUsage.rst:4800
#: ../../../AMDGPUUsage.rst:6075 ../../../AMDGPUUsage.rst:6102
msgid "Must happen before any following volatile global/generic load/store."
msgstr ""

#: ../../../AMDGPUUsage.rst:4777 ../../../AMDGPUUsage.rst:4804
#: ../../../AMDGPUUsage.rst:6079 ../../../AMDGPUUsage.rst:6106
msgid ""
"Ensures that volatile operations to different addresses will not be "
"reordered by hardware."
msgstr ""

#: ../../../AMDGPUUsage.rst:4785 ../../../AMDGPUUsage.rst:4812
#: ../../../AMDGPUUsage.rst:4821 ../../../AMDGPUUsage.rst:4830
#: ../../../AMDGPUUsage.rst:4838 ../../../AMDGPUUsage.rst:4844
#: ../../../AMDGPUUsage.rst:4847 ../../../AMDGPUUsage.rst:4915
#: ../../../AMDGPUUsage.rst:4918 ../../../AMDGPUUsage.rst:5111
#: ../../../AMDGPUUsage.rst:5134 ../../../AMDGPUUsage.rst:5178
#: ../../../AMDGPUUsage.rst:5201 ../../../AMDGPUUsage.rst:5358
#: ../../../AMDGPUUsage.rst:5382 ../../../AMDGPUUsage.rst:5733
#: ../../../AMDGPUUsage.rst:5803 ../../../AMDGPUUsage.rst:5901
#: ../../../AMDGPUUsage.rst:5906 ../../../AMDGPUUsage.rst:6087
#: ../../../AMDGPUUsage.rst:6114 ../../../AMDGPUUsage.rst:6130
#: ../../../AMDGPUUsage.rst:6140 ../../../AMDGPUUsage.rst:6148
#: ../../../AMDGPUUsage.rst:6154 ../../../AMDGPUUsage.rst:6182
#: ../../../AMDGPUUsage.rst:6297 ../../../AMDGPUUsage.rst:6324
#: ../../../AMDGPUUsage.rst:6633 ../../../AMDGPUUsage.rst:6684
#: ../../../AMDGPUUsage.rst:6770 ../../../AMDGPUUsage.rst:6820
#: ../../../AMDGPUUsage.rst:7055 ../../../AMDGPUUsage.rst:7138
#: ../../../AMDGPUUsage.rst:7654 ../../../AMDGPUUsage.rst:7768
#: ../../../AMDGPUUsage.rst:7970 ../../../AMDGPUUsage.rst:7975
msgid "local"
msgstr ""

#: ../../../AMDGPUUsage.rst:4785 ../../../AMDGPUUsage.rst:6087
#: ../../../AMDGPUUsage.rst:6130 ../../../AMDGPUUsage.rst:6182
msgid "ds_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:4786 ../../../AMDGPUUsage.rst:4812
#: ../../../AMDGPUUsage.rst:6088 ../../../AMDGPUUsage.rst:6114
msgid "store"
msgstr ""

#: ../../../AMDGPUUsage.rst:4788 ../../../AMDGPUUsage.rst:4797
#: ../../../AMDGPUUsage.rst:4825 ../../../AMDGPUUsage.rst:5133
#: ../../../AMDGPUUsage.rst:5176 ../../../AMDGPUUsage.rst:6090
#: ../../../AMDGPUUsage.rst:6099 ../../../AMDGPUUsage.rst:6135
#: ../../../AMDGPUUsage.rst:6683 ../../../AMDGPUUsage.rst:6768
msgid "buffer/global/flat_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:4792
msgid "buffer/global/flat_store glc=1 slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4812 ../../../AMDGPUUsage.rst:4830
#: ../../../AMDGPUUsage.rst:5134 ../../../AMDGPUUsage.rst:6114
#: ../../../AMDGPUUsage.rst:6140 ../../../AMDGPUUsage.rst:6720
msgid "ds_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:4813 ../../../AMDGPUUsage.rst:6115
msgid "**Unordered Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:4815 ../../../AMDGPUUsage.rst:4820
#: ../../../AMDGPUUsage.rst:4823 ../../../AMDGPUUsage.rst:4843
#: ../../../AMDGPUUsage.rst:4846 ../../../AMDGPUUsage.rst:4847
#: ../../../AMDGPUUsage.rst:4864 ../../../AMDGPUUsage.rst:4888
#: ../../../AMDGPUUsage.rst:5732 ../../../AMDGPUUsage.rst:5737
#: ../../../AMDGPUUsage.rst:5803 ../../../AMDGPUUsage.rst:5809
#: ../../../AMDGPUUsage.rst:6117 ../../../AMDGPUUsage.rst:6122
#: ../../../AMDGPUUsage.rst:6124 ../../../AMDGPUUsage.rst:6130
#: ../../../AMDGPUUsage.rst:6133 ../../../AMDGPUUsage.rst:6153
#: ../../../AMDGPUUsage.rst:6156 ../../../AMDGPUUsage.rst:6182
#: ../../../AMDGPUUsage.rst:6209 ../../../AMDGPUUsage.rst:6244
#: ../../../AMDGPUUsage.rst:6269 ../../../AMDGPUUsage.rst:7653
#: ../../../AMDGPUUsage.rst:7658 ../../../AMDGPUUsage.rst:7768
#: ../../../AMDGPUUsage.rst:7862
msgid "load atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4815 ../../../AMDGPUUsage.rst:4816
#: ../../../AMDGPUUsage.rst:4817 ../../../AMDGPUUsage.rst:6117
#: ../../../AMDGPUUsage.rst:6118 ../../../AMDGPUUsage.rst:6119
msgid "*any*"
msgstr ""

#: ../../../AMDGPUUsage.rst:4815 ../../../AMDGPUUsage.rst:4816
#: ../../../AMDGPUUsage.rst:6117 ../../../AMDGPUUsage.rst:6118
msgid "*Same as non-atomic*."
msgstr ""

#: ../../../AMDGPUUsage.rst:4816 ../../../AMDGPUUsage.rst:4825
#: ../../../AMDGPUUsage.rst:4830 ../../../AMDGPUUsage.rst:5110
#: ../../../AMDGPUUsage.rst:5113 ../../../AMDGPUUsage.rst:5134
#: ../../../AMDGPUUsage.rst:5135 ../../../AMDGPUUsage.rst:5900
#: ../../../AMDGPUUsage.rst:6118 ../../../AMDGPUUsage.rst:6135
#: ../../../AMDGPUUsage.rst:6140 ../../../AMDGPUUsage.rst:6632
#: ../../../AMDGPUUsage.rst:6635 ../../../AMDGPUUsage.rst:6684
#: ../../../AMDGPUUsage.rst:6721 ../../../AMDGPUUsage.rst:7969
msgid "store atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4817 ../../../AMDGPUUsage.rst:4833
#: ../../../AMDGPUUsage.rst:4838 ../../../AMDGPUUsage.rst:4914
#: ../../../AMDGPUUsage.rst:4917 ../../../AMDGPUUsage.rst:4918
#: ../../../AMDGPUUsage.rst:4935 ../../../AMDGPUUsage.rst:4959
#: ../../../AMDGPUUsage.rst:5177 ../../../AMDGPUUsage.rst:5180
#: ../../../AMDGPUUsage.rst:5201 ../../../AMDGPUUsage.rst:5202
#: ../../../AMDGPUUsage.rst:5357 ../../../AMDGPUUsage.rst:5360
#: ../../../AMDGPUUsage.rst:5382 ../../../AMDGPUUsage.rst:5399
#: ../../../AMDGPUUsage.rst:5436 ../../../AMDGPUUsage.rst:5499
#: ../../../AMDGPUUsage.rst:5905 ../../../AMDGPUUsage.rst:6119
#: ../../../AMDGPUUsage.rst:6143 ../../../AMDGPUUsage.rst:6148
#: ../../../AMDGPUUsage.rst:6296 ../../../AMDGPUUsage.rst:6299
#: ../../../AMDGPUUsage.rst:6324 ../../../AMDGPUUsage.rst:6346
#: ../../../AMDGPUUsage.rst:6375 ../../../AMDGPUUsage.rst:6403
#: ../../../AMDGPUUsage.rst:6769 ../../../AMDGPUUsage.rst:6772
#: ../../../AMDGPUUsage.rst:6820 ../../../AMDGPUUsage.rst:6857
#: ../../../AMDGPUUsage.rst:7054 ../../../AMDGPUUsage.rst:7057
#: ../../../AMDGPUUsage.rst:7138 ../../../AMDGPUUsage.rst:7198
#: ../../../AMDGPUUsage.rst:7272 ../../../AMDGPUUsage.rst:7344
#: ../../../AMDGPUUsage.rst:7974
msgid "atomicrmw"
msgstr ""

#: ../../../AMDGPUUsage.rst:4817 ../../../AMDGPUUsage.rst:6119
msgid "*Same as monotonic atomic*."
msgstr ""

#: ../../../AMDGPUUsage.rst:4818 ../../../AMDGPUUsage.rst:6120
msgid "**Monotonic Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:4820 ../../../AMDGPUUsage.rst:4825
#: ../../../AMDGPUUsage.rst:4830 ../../../AMDGPUUsage.rst:4833
#: ../../../AMDGPUUsage.rst:4838 ../../../AMDGPUUsage.rst:4843
#: ../../../AMDGPUUsage.rst:4914 ../../../AMDGPUUsage.rst:4986
#: ../../../AMDGPUUsage.rst:5110 ../../../AMDGPUUsage.rst:5177
#: ../../../AMDGPUUsage.rst:5242 ../../../AMDGPUUsage.rst:5357
#: ../../../AMDGPUUsage.rst:5565 ../../../AMDGPUUsage.rst:5732
#: ../../../AMDGPUUsage.rst:5900 ../../../AMDGPUUsage.rst:5905
#: ../../../AMDGPUUsage.rst:5910 ../../../AMDGPUUsage.rst:6122
#: ../../../AMDGPUUsage.rst:6130 ../../../AMDGPUUsage.rst:6135
#: ../../../AMDGPUUsage.rst:6140 ../../../AMDGPUUsage.rst:6143
#: ../../../AMDGPUUsage.rst:6148 ../../../AMDGPUUsage.rst:6153
#: ../../../AMDGPUUsage.rst:6296 ../../../AMDGPUUsage.rst:6434
#: ../../../AMDGPUUsage.rst:6632 ../../../AMDGPUUsage.rst:6769
#: ../../../AMDGPUUsage.rst:6902 ../../../AMDGPUUsage.rst:7054
#: ../../../AMDGPUUsage.rst:7419 ../../../AMDGPUUsage.rst:7653
#: ../../../AMDGPUUsage.rst:7969 ../../../AMDGPUUsage.rst:7974
#: ../../../AMDGPUUsage.rst:7979
msgid "singlethread"
msgstr ""

#: ../../../AMDGPUUsage.rst:4821 ../../../AMDGPUUsage.rst:4826
#: ../../../AMDGPUUsage.rst:4831 ../../../AMDGPUUsage.rst:4834
#: ../../../AMDGPUUsage.rst:4839 ../../../AMDGPUUsage.rst:4844
#: ../../../AMDGPUUsage.rst:4915 ../../../AMDGPUUsage.rst:4987
#: ../../../AMDGPUUsage.rst:5111 ../../../AMDGPUUsage.rst:5178
#: ../../../AMDGPUUsage.rst:5243 ../../../AMDGPUUsage.rst:5358
#: ../../../AMDGPUUsage.rst:5566 ../../../AMDGPUUsage.rst:5733
#: ../../../AMDGPUUsage.rst:5901 ../../../AMDGPUUsage.rst:5906
#: ../../../AMDGPUUsage.rst:5911 ../../../AMDGPUUsage.rst:6123
#: ../../../AMDGPUUsage.rst:6131 ../../../AMDGPUUsage.rst:6136
#: ../../../AMDGPUUsage.rst:6141 ../../../AMDGPUUsage.rst:6144
#: ../../../AMDGPUUsage.rst:6149 ../../../AMDGPUUsage.rst:6154
#: ../../../AMDGPUUsage.rst:6297 ../../../AMDGPUUsage.rst:6435
#: ../../../AMDGPUUsage.rst:6633 ../../../AMDGPUUsage.rst:6770
#: ../../../AMDGPUUsage.rst:6903 ../../../AMDGPUUsage.rst:7055
#: ../../../AMDGPUUsage.rst:7420 ../../../AMDGPUUsage.rst:7654
#: ../../../AMDGPUUsage.rst:7970 ../../../AMDGPUUsage.rst:7975
#: ../../../AMDGPUUsage.rst:7980
msgid "wavefront"
msgstr ""

#: ../../../AMDGPUUsage.rst:4822 ../../../AMDGPUUsage.rst:4827
#: ../../../AMDGPUUsage.rst:4832 ../../../AMDGPUUsage.rst:4835
#: ../../../AMDGPUUsage.rst:4840 ../../../AMDGPUUsage.rst:4846
#: ../../../AMDGPUUsage.rst:4847 ../../../AMDGPUUsage.rst:4917
#: ../../../AMDGPUUsage.rst:4918 ../../../AMDGPUUsage.rst:4988
#: ../../../AMDGPUUsage.rst:5113 ../../../AMDGPUUsage.rst:5134
#: ../../../AMDGPUUsage.rst:5180 ../../../AMDGPUUsage.rst:5201
#: ../../../AMDGPUUsage.rst:5244 ../../../AMDGPUUsage.rst:5360
#: ../../../AMDGPUUsage.rst:5382 ../../../AMDGPUUsage.rst:5399
#: ../../../AMDGPUUsage.rst:5567 ../../../AMDGPUUsage.rst:5737
#: ../../../AMDGPUUsage.rst:5803 ../../../AMDGPUUsage.rst:5902
#: ../../../AMDGPUUsage.rst:5907 ../../../AMDGPUUsage.rst:5912
#: ../../../AMDGPUUsage.rst:6124 ../../../AMDGPUUsage.rst:6132
#: ../../../AMDGPUUsage.rst:6137 ../../../AMDGPUUsage.rst:6142
#: ../../../AMDGPUUsage.rst:6145 ../../../AMDGPUUsage.rst:6150
#: ../../../AMDGPUUsage.rst:6156 ../../../AMDGPUUsage.rst:6182
#: ../../../AMDGPUUsage.rst:6209 ../../../AMDGPUUsage.rst:6299
#: ../../../AMDGPUUsage.rst:6324 ../../../AMDGPUUsage.rst:6346
#: ../../../AMDGPUUsage.rst:6436 ../../../AMDGPUUsage.rst:6635
#: ../../../AMDGPUUsage.rst:6684 ../../../AMDGPUUsage.rst:6772
#: ../../../AMDGPUUsage.rst:6820 ../../../AMDGPUUsage.rst:6904
#: ../../../AMDGPUUsage.rst:7057 ../../../AMDGPUUsage.rst:7138
#: ../../../AMDGPUUsage.rst:7198 ../../../AMDGPUUsage.rst:7421
#: ../../../AMDGPUUsage.rst:7658 ../../../AMDGPUUsage.rst:7768
#: ../../../AMDGPUUsage.rst:7971 ../../../AMDGPUUsage.rst:7976
#: ../../../AMDGPUUsage.rst:7981
msgid "workgroup"
msgstr ""

#: ../../../AMDGPUUsage.rst:4820 ../../../AMDGPUUsage.rst:4843
#: ../../../AMDGPUUsage.rst:6153
msgid "buffer/global/ds/flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:4823 ../../../AMDGPUUsage.rst:4828
#: ../../../AMDGPUUsage.rst:4836 ../../../AMDGPUUsage.rst:4864
#: ../../../AMDGPUUsage.rst:4888 ../../../AMDGPUUsage.rst:4935
#: ../../../AMDGPUUsage.rst:4959 ../../../AMDGPUUsage.rst:5032
#: ../../../AMDGPUUsage.rst:5135 ../../../AMDGPUUsage.rst:5202
#: ../../../AMDGPUUsage.rst:5288 ../../../AMDGPUUsage.rst:5436
#: ../../../AMDGPUUsage.rst:5499 ../../../AMDGPUUsage.rst:5636
#: ../../../AMDGPUUsage.rst:5809 ../../../AMDGPUUsage.rst:5903
#: ../../../AMDGPUUsage.rst:5908 ../../../AMDGPUUsage.rst:5913
#: ../../../AMDGPUUsage.rst:6133 ../../../AMDGPUUsage.rst:6138
#: ../../../AMDGPUUsage.rst:6146 ../../../AMDGPUUsage.rst:6244
#: ../../../AMDGPUUsage.rst:6269 ../../../AMDGPUUsage.rst:6375
#: ../../../AMDGPUUsage.rst:6403 ../../../AMDGPUUsage.rst:6536
#: ../../../AMDGPUUsage.rst:6721 ../../../AMDGPUUsage.rst:6857
#: ../../../AMDGPUUsage.rst:6980 ../../../AMDGPUUsage.rst:7272
#: ../../../AMDGPUUsage.rst:7344 ../../../AMDGPUUsage.rst:7546
#: ../../../AMDGPUUsage.rst:7862 ../../../AMDGPUUsage.rst:7972
#: ../../../AMDGPUUsage.rst:7977 ../../../AMDGPUUsage.rst:7982
msgid "agent"
msgstr ""

#: ../../../AMDGPUUsage.rst:4824 ../../../AMDGPUUsage.rst:4829
#: ../../../AMDGPUUsage.rst:4837 ../../../AMDGPUUsage.rst:4865
#: ../../../AMDGPUUsage.rst:4889 ../../../AMDGPUUsage.rst:4936
#: ../../../AMDGPUUsage.rst:4960 ../../../AMDGPUUsage.rst:5033
#: ../../../AMDGPUUsage.rst:5136 ../../../AMDGPUUsage.rst:5203
#: ../../../AMDGPUUsage.rst:5289 ../../../AMDGPUUsage.rst:5437
#: ../../../AMDGPUUsage.rst:5500 ../../../AMDGPUUsage.rst:5637
#: ../../../AMDGPUUsage.rst:5810 ../../../AMDGPUUsage.rst:5904
#: ../../../AMDGPUUsage.rst:5909 ../../../AMDGPUUsage.rst:5914
#: ../../../AMDGPUUsage.rst:6134 ../../../AMDGPUUsage.rst:6139
#: ../../../AMDGPUUsage.rst:6147 ../../../AMDGPUUsage.rst:6245
#: ../../../AMDGPUUsage.rst:6270 ../../../AMDGPUUsage.rst:6376
#: ../../../AMDGPUUsage.rst:6404 ../../../AMDGPUUsage.rst:6537
#: ../../../AMDGPUUsage.rst:6722 ../../../AMDGPUUsage.rst:6858
#: ../../../AMDGPUUsage.rst:6981 ../../../AMDGPUUsage.rst:7273
#: ../../../AMDGPUUsage.rst:7345 ../../../AMDGPUUsage.rst:7547
#: ../../../AMDGPUUsage.rst:7863 ../../../AMDGPUUsage.rst:7973
#: ../../../AMDGPUUsage.rst:7978 ../../../AMDGPUUsage.rst:7983
msgid "system"
msgstr ""

#: ../../../AMDGPUUsage.rst:4833 ../../../AMDGPUUsage.rst:5200
#: ../../../AMDGPUUsage.rst:5241 ../../../AMDGPUUsage.rst:6143
#: ../../../AMDGPUUsage.rst:6819 ../../../AMDGPUUsage.rst:6901
msgid "buffer/global/flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4838 ../../../AMDGPUUsage.rst:5201
#: ../../../AMDGPUUsage.rst:5382 ../../../AMDGPUUsage.rst:6148
#: ../../../AMDGPUUsage.rst:6324 ../../../AMDGPUUsage.rst:6856
#: ../../../AMDGPUUsage.rst:7174
msgid "ds_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4841 ../../../AMDGPUUsage.rst:6151
msgid "**Acquire Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:4846
msgid "buffer/global_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:4847
msgid "ds/flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:4848 ../../../AMDGPUUsage.rst:4919
#: ../../../AMDGPUUsage.rst:4988 ../../../AMDGPUUsage.rst:5113
#: ../../../AMDGPUUsage.rst:5180 ../../../AMDGPUUsage.rst:5244
#: ../../../AMDGPUUsage.rst:5360 ../../../AMDGPUUsage.rst:5383
#: ../../../AMDGPUUsage.rst:5399 ../../../AMDGPUUsage.rst:5420
#: ../../../AMDGPUUsage.rst:5567 ../../../AMDGPUUsage.rst:5737
#: ../../../AMDGPUUsage.rst:6183 ../../../AMDGPUUsage.rst:6325
#: ../../../AMDGPUUsage.rst:7175
msgid "s_waitcnt lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4850 ../../../AMDGPUUsage.rst:4921
#: ../../../AMDGPUUsage.rst:5115 ../../../AMDGPUUsage.rst:5182
#: ../../../AMDGPUUsage.rst:5362 ../../../AMDGPUUsage.rst:5385
#: ../../../AMDGPUUsage.rst:5401 ../../../AMDGPUUsage.rst:5422
#: ../../../AMDGPUUsage.rst:6185 ../../../AMDGPUUsage.rst:6203
#: ../../../AMDGPUUsage.rst:6327 ../../../AMDGPUUsage.rst:6688
#: ../../../AMDGPUUsage.rst:6824 ../../../AMDGPUUsage.rst:7142
#: ../../../AMDGPUUsage.rst:7177
msgid "If OpenCL, omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:4851 ../../../AMDGPUUsage.rst:4922
#: ../../../AMDGPUUsage.rst:5019 ../../../AMDGPUUsage.rst:5098
#: ../../../AMDGPUUsage.rst:5386 ../../../AMDGPUUsage.rst:5423
#: ../../../AMDGPUUsage.rst:5587 ../../../AMDGPUUsage.rst:5716
#: ../../../AMDGPUUsage.rst:6620 ../../../AMDGPUUsage.rst:7473
#: ../../../AMDGPUUsage.rst:7637
msgid ""
"Must happen before any following global/generic load/load atomic/store/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:4857 ../../../AMDGPUUsage.rst:5429
#: ../../../AMDGPUUsage.rst:6228
msgid ""
"Ensures any following global data read is no older than a local load atomic "
"value being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:4864 ../../../AMDGPUUsage.rst:6156
msgid "buffer/global_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4868 ../../../AMDGPUUsage.rst:4894
#: ../../../AMDGPUUsage.rst:4938 ../../../AMDGPUUsage.rst:4965
#: ../../../AMDGPUUsage.rst:5478 ../../../AMDGPUUsage.rst:5544
msgid "Must happen before following buffer_wbinvl1_vol."
msgstr ""

#: ../../../AMDGPUUsage.rst:4871
msgid "Ensures the load has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:4876 ../../../AMDGPUUsage.rst:4902
#: ../../../AMDGPUUsage.rst:4947 ../../../AMDGPUUsage.rst:4974
#: ../../../AMDGPUUsage.rst:5096 ../../../AMDGPUUsage.rst:5487
#: ../../../AMDGPUUsage.rst:5553 ../../../AMDGPUUsage.rst:5714
msgid "buffer_wbinvl1_vol"
msgstr ""

#: ../../../AMDGPUUsage.rst:4878 ../../../AMDGPUUsage.rst:4904
#: ../../../AMDGPUUsage.rst:4949 ../../../AMDGPUUsage.rst:4976
#: ../../../AMDGPUUsage.rst:5489 ../../../AMDGPUUsage.rst:5555
#: ../../../AMDGPUUsage.rst:6259 ../../../AMDGPUUsage.rst:6286
#: ../../../AMDGPUUsage.rst:6393 ../../../AMDGPUUsage.rst:6424
#: ../../../AMDGPUUsage.rst:7334 ../../../AMDGPUUsage.rst:7409
msgid ""
"Must happen before any following global/generic load/load atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:4883 ../../../AMDGPUUsage.rst:4909
#: ../../../AMDGPUUsage.rst:4954 ../../../AMDGPUUsage.rst:4981
#: ../../../AMDGPUUsage.rst:5103 ../../../AMDGPUUsage.rst:5494
#: ../../../AMDGPUUsage.rst:5560 ../../../AMDGPUUsage.rst:6264
#: ../../../AMDGPUUsage.rst:6291 ../../../AMDGPUUsage.rst:6398
#: ../../../AMDGPUUsage.rst:6429 ../../../AMDGPUUsage.rst:6625
#: ../../../AMDGPUUsage.rst:7339 ../../../AMDGPUUsage.rst:7414
msgid "Ensures that following loads will not see stale global data."
msgstr ""

#: ../../../AMDGPUUsage.rst:4888 ../../../AMDGPUUsage.rst:6209
msgid "flat_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4889 ../../../AMDGPUUsage.rst:4960
#: ../../../AMDGPUUsage.rst:5539 ../../../AMDGPUUsage.rst:6270
msgid "s_waitcnt vmcnt(0) & lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4892 ../../../AMDGPUUsage.rst:6273
msgid "If OpenCL omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4897
msgid "Ensures the flat_load has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:4914 ../../../AMDGPUUsage.rst:5177
#: ../../../AMDGPUUsage.rst:5357 ../../../AMDGPUUsage.rst:6296
#: ../../../AMDGPUUsage.rst:6769 ../../../AMDGPUUsage.rst:7054
msgid "buffer/global/ds/flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4917 ../../../AMDGPUUsage.rst:4935
#: ../../../AMDGPUUsage.rst:5380 ../../../AMDGPUUsage.rst:5475
#: ../../../AMDGPUUsage.rst:6299 ../../../AMDGPUUsage.rst:6375
#: ../../../AMDGPUUsage.rst:7111 ../../../AMDGPUUsage.rst:7316
msgid "buffer/global_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4918
msgid "ds/flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4928 ../../../AMDGPUUsage.rst:6359
msgid ""
"Ensures any following global data read is no older than a local atomicrmw "
"value being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:4941 ../../../AMDGPUUsage.rst:4968
#: ../../../AMDGPUUsage.rst:5481 ../../../AMDGPUUsage.rst:5547
msgid "Ensures the atomicrmw has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:4959 ../../../AMDGPUUsage.rst:5419
#: ../../../AMDGPUUsage.rst:5538 ../../../AMDGPUUsage.rst:6346
#: ../../../AMDGPUUsage.rst:6403 ../../../AMDGPUUsage.rst:7245
#: ../../../AMDGPUUsage.rst:7388
msgid "flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4963 ../../../AMDGPUUsage.rst:5205
#: ../../../AMDGPUUsage.rst:5439 ../../../AMDGPUUsage.rst:5502
#: ../../../AMDGPUUsage.rst:5542 ../../../AMDGPUUsage.rst:6219
#: ../../../AMDGPUUsage.rst:6352 ../../../AMDGPUUsage.rst:6407
#: ../../../AMDGPUUsage.rst:6641 ../../../AMDGPUUsage.rst:6778
#: ../../../AMDGPUUsage.rst:6860 ../../../AMDGPUUsage.rst:7063
#: ../../../AMDGPUUsage.rst:7204 ../../../AMDGPUUsage.rst:7252
#: ../../../AMDGPUUsage.rst:7275 ../../../AMDGPUUsage.rst:7347
#: ../../../AMDGPUUsage.rst:7392
msgid "If OpenCL, omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4986 ../../../AMDGPUUsage.rst:4988
#: ../../../AMDGPUUsage.rst:5032 ../../../AMDGPUUsage.rst:5242
#: ../../../AMDGPUUsage.rst:5244 ../../../AMDGPUUsage.rst:5288
#: ../../../AMDGPUUsage.rst:5565 ../../../AMDGPUUsage.rst:5567
#: ../../../AMDGPUUsage.rst:5636 ../../../AMDGPUUsage.rst:5910
#: ../../../AMDGPUUsage.rst:6434 ../../../AMDGPUUsage.rst:6436
#: ../../../AMDGPUUsage.rst:6536 ../../../AMDGPUUsage.rst:6902
#: ../../../AMDGPUUsage.rst:6904 ../../../AMDGPUUsage.rst:6980
#: ../../../AMDGPUUsage.rst:7419 ../../../AMDGPUUsage.rst:7421
#: ../../../AMDGPUUsage.rst:7546 ../../../AMDGPUUsage.rst:7979
msgid "fence"
msgstr ""

#: ../../../AMDGPUUsage.rst:4990 ../../../AMDGPUUsage.rst:5246
#: ../../../AMDGPUUsage.rst:5569
msgid "If OpenCL and address space is not generic, omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:4993 ../../../AMDGPUUsage.rst:5249
#: ../../../AMDGPUUsage.rst:5299 ../../../AMDGPUUsage.rst:6450
#: ../../../AMDGPUUsage.rst:6918 ../../../AMDGPUUsage.rst:6991
msgid ""
"However, since LLVM currently has no address space on the fence need to "
"conservatively always generate. If fence had an address space then set to "
"address space of OpenCL fence flag, or to generic if both local and global "
"flags are specified."
msgstr ""

#: ../../../AMDGPUUsage.rst:5008
msgid ""
"Must happen after any preceding local/generic load atomic/atomicrmw with an "
"equal or wider sync scope and memory ordering stronger than unordered (this "
"is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5025
msgid ""
"Ensures any following global data read is no older than the value read by "
"the fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:5032 ../../../AMDGPUUsage.rst:5135
#: ../../../AMDGPUUsage.rst:5202 ../../../AMDGPUUsage.rst:5288
#: ../../../AMDGPUUsage.rst:5436 ../../../AMDGPUUsage.rst:5499
#: ../../../AMDGPUUsage.rst:5636 ../../../AMDGPUUsage.rst:5809
#: ../../../AMDGPUUsage.rst:6214
msgid "s_waitcnt lgkmcnt(0) & vmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5035 ../../../AMDGPUUsage.rst:5138
#: ../../../AMDGPUUsage.rst:5291 ../../../AMDGPUUsage.rst:5639
#: ../../../AMDGPUUsage.rst:6442 ../../../AMDGPUUsage.rst:6539
#: ../../../AMDGPUUsage.rst:6724 ../../../AMDGPUUsage.rst:6910
#: ../../../AMDGPUUsage.rst:6983 ../../../AMDGPUUsage.rst:7427
#: ../../../AMDGPUUsage.rst:7549
msgid "If OpenCL and address space is not generic, omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5039 ../../../AMDGPUUsage.rst:5572
#: ../../../AMDGPUUsage.rst:5643 ../../../AMDGPUUsage.rst:6547
#: ../../../AMDGPUUsage.rst:7435 ../../../AMDGPUUsage.rst:7557
msgid ""
"However, since LLVM currently has no address space on the fence need to "
"conservatively always generate (see comment for previous fence)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5047 ../../../AMDGPUUsage.rst:5142
#: ../../../AMDGPUUsage.rst:5207 ../../../AMDGPUUsage.rst:5314
#: ../../../AMDGPUUsage.rst:5441 ../../../AMDGPUUsage.rst:5504
#: ../../../AMDGPUUsage.rst:5651 ../../../AMDGPUUsage.rst:5812
msgid ""
"Could be split into separate s_waitcnt vmcnt(0) and s_waitcnt lgkmcnt(0) to "
"allow them to be independently moved according to the following rules."
msgstr ""

#: ../../../AMDGPUUsage.rst:5056
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load "
"atomic/atomicrmw with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5068 ../../../AMDGPUUsage.rst:6499
#: ../../../AMDGPUUsage.rst:6589
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding local/generic load "
"atomic/atomicrmw with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5080 ../../../AMDGPUUsage.rst:5674
msgid "Must happen before the following buffer_wbinvl1_vol."
msgstr ""

#: ../../../AMDGPUUsage.rst:5083 ../../../AMDGPUUsage.rst:6514
msgid ""
"Ensures that the fence-paired atomic has completed before invalidating the "
"cache. Therefore any following locations read must be no older than the "
"value read by the fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:5108 ../../../AMDGPUUsage.rst:6630
msgid "**Release Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:5110 ../../../AMDGPUUsage.rst:6632
msgid "buffer/global/ds/flat_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:5116 ../../../AMDGPUUsage.rst:5183
#: ../../../AMDGPUUsage.rst:5363 ../../../AMDGPUUsage.rst:5402
#: ../../../AMDGPUUsage.rst:7065
msgid ""
"Must happen after any preceding local/generic load/store/load atomic/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:5122 ../../../AMDGPUUsage.rst:5165
#: ../../../AMDGPUUsage.rst:6672 ../../../AMDGPUUsage.rst:6709
#: ../../../AMDGPUUsage.rst:6757 ../../../AMDGPUUsage.rst:6845
#: ../../../AMDGPUUsage.rst:7163
msgid "Must happen before the following store."
msgstr ""

#: ../../../AMDGPUUsage.rst:5125
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:5151 ../../../AMDGPUUsage.rst:5216
#: ../../../AMDGPUUsage.rst:5323 ../../../AMDGPUUsage.rst:5450
#: ../../../AMDGPUUsage.rst:5513 ../../../AMDGPUUsage.rst:5660
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load/store/"
"load atomic/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:5158 ../../../AMDGPUUsage.rst:5223
#: ../../../AMDGPUUsage.rst:5330 ../../../AMDGPUUsage.rst:5457
#: ../../../AMDGPUUsage.rst:5520 ../../../AMDGPUUsage.rst:5667
#: ../../../AMDGPUUsage.rst:6665 ../../../AMDGPUUsage.rst:6750
#: ../../../AMDGPUUsage.rst:6801 ../../../AMDGPUUsage.rst:6883
#: ../../../AMDGPUUsage.rst:7027 ../../../AMDGPUUsage.rst:7093
#: ../../../AMDGPUUsage.rst:7227 ../../../AMDGPUUsage.rst:7298
#: ../../../AMDGPUUsage.rst:7370 ../../../AMDGPUUsage.rst:7587
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding local/generic load/"
"store/load atomic/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:5168
msgid ""
"Ensures that all memory operations to memory have completed before "
"performing the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:5189 ../../../AMDGPUUsage.rst:5230
#: ../../../AMDGPUUsage.rst:5369 ../../../AMDGPUUsage.rst:5408
#: ../../../AMDGPUUsage.rst:5464 ../../../AMDGPUUsage.rst:5527
#: ../../../AMDGPUUsage.rst:6808 ../../../AMDGPUUsage.rst:6890
#: ../../../AMDGPUUsage.rst:7100 ../../../AMDGPUUsage.rst:7234
#: ../../../AMDGPUUsage.rst:7305 ../../../AMDGPUUsage.rst:7377
msgid "Must happen before the following atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:5192 ../../../AMDGPUUsage.rst:5372
#: ../../../AMDGPUUsage.rst:5411
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:5233 ../../../AMDGPUUsage.rst:6893
msgid ""
"Ensures that all memory operations to global and local have completed before "
"performing the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:5264 ../../../AMDGPUUsage.rst:5581
msgid ""
"Must happen after any preceding local/generic load/load atomic/store/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:5270 ../../../AMDGPUUsage.rst:5337
#: ../../../AMDGPUUsage.rst:6962 ../../../AMDGPUUsage.rst:7034
msgid ""
"Must happen before any following store atomic/atomicrmw with an equal or "
"wider sync scope and memory ordering stronger than unordered (this is termed "
"the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5280
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the following fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:5295
msgid "If OpenCL and address space is local, omit vmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5347 ../../../AMDGPUUsage.rst:6972
#: ../../../AMDGPUUsage.rst:7044
msgid ""
"Ensures that all memory operations have completed before performing the "
"following fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:5355 ../../../AMDGPUUsage.rst:7052
msgid "**Acquire-Release Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:5392 ../../../AMDGPUUsage.rst:6192
#: ../../../AMDGPUUsage.rst:7181
msgid ""
"Ensures any following global data read is no older than the local load "
"atomic value being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:5467 ../../../AMDGPUUsage.rst:5530
#: ../../../AMDGPUUsage.rst:7308
msgid ""
"Ensures that all memory operations to global have completed before "
"performing the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:5593
msgid ""
"Ensures that all memory operations to local have completed before performing "
"any following global memory operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:5600 ../../../AMDGPUUsage.rst:7486
msgid ""
"Ensures that the preceding local/generic load atomic/atomicrmw with an equal "
"or wider sync scope and memory ordering stronger than unordered (this is "
"termed the acquire-fence-paired-atomic) has completed before following "
"global memory operations. This satisfies the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:5618 ../../../AMDGPUUsage.rst:7504
msgid ""
"Ensures that all previous memory operations have completed before a "
"following local/generic store atomic/atomicrmw with an equal or wider sync "
"scope and memory ordering stronger than unordered (this is termed the "
"release-fence-paired-atomic). This satisfies the requirements of release."
msgstr ""

#: ../../../AMDGPUUsage.rst:5677
msgid ""
"Ensures that the preceding global/local/generic load atomic/atomicrmw with "
"an equal or wider sync scope and memory ordering stronger than unordered "
"(this is termed the acquire-fence-paired-atomic) has completed before "
"invalidating the cache. This satisfies the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:5695 ../../../AMDGPUUsage.rst:7615
msgid ""
"Ensures that all previous memory operations have completed before a "
"following global/local/generic store atomic/atomicrmw with an equal or wider "
"sync scope and memory ordering stronger than unordered (this is termed the "
"release-fence-paired-atomic). This satisfies the requirements of release."
msgstr ""

#: ../../../AMDGPUUsage.rst:5722 ../../../AMDGPUUsage.rst:7643
msgid ""
"Ensures that following loads will not see stale global data. This satisfies "
"the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:5730 ../../../AMDGPUUsage.rst:7651
msgid "**Sequential Consistent Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:5732 ../../../AMDGPUUsage.rst:5803
#: ../../../AMDGPUUsage.rst:7653
msgid ""
"*Same as corresponding load atomic acquire, except must generated all "
"instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:5740
msgid ""
"Must happen after preceding local/generic load atomic/store atomic/atomicrmw "
"with memory ordering of seq_cst and with equal or wider sync scope. (Note "
"that seq_cst fences have their own s_waitcnt lgkmcnt(0) and so do not need "
"to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5756
msgid ""
"Ensures any preceding sequential consistent local memory instructions have "
"completed before executing this sequentially consistent instruction. This "
"prevents reordering a seq_cst store followed by a seq_cst load. (Note that "
"seq_cst is stronger than acquire/release as the reordering of load acquire "
"followed by a store release is prevented by the s_waitcnt of the release, "
"but there is nothing preventing a store release followed by load acquire "
"from completing out of order. The s_waitcnt could be placed after seq_store "
"or before the seq_load. We choose the load to make the s_waitcnt be as late "
"as possible so that the store may have already completed.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5796 ../../../AMDGPUUsage.rst:5893
#: ../../../AMDGPUUsage.rst:7761 ../../../AMDGPUUsage.rst:7854
#: ../../../AMDGPUUsage.rst:7962
msgid ""
"*Following instructions same as corresponding load atomic acquire, except "
"must generated all instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:5821
msgid ""
"s_waitcnt lgkmcnt(0) must happen after preceding global/generic load atomic/"
"store atomic/atomicrmw with memory ordering of seq_cst and with equal or "
"wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"lgkmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5837
msgid ""
"s_waitcnt vmcnt(0) must happen after preceding global/generic load atomic/"
"store atomic/atomicrmw with memory ordering of seq_cst and with equal or "
"wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"vmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5853 ../../../AMDGPUUsage.rst:7814
#: ../../../AMDGPUUsage.rst:7922
msgid ""
"Ensures any preceding sequential consistent global memory instructions have "
"completed before executing this sequentially consistent instruction. This "
"prevents reordering a seq_cst store followed by a seq_cst load. (Note that "
"seq_cst is stronger than acquire/release as the reordering of load acquire "
"followed by a store release is prevented by the s_waitcnt of the release, "
"but there is nothing preventing a store release followed by load acquire "
"from completing out of order. The s_waitcnt could be placed after seq_store "
"or before the seq_load. We choose the load to make the s_waitcnt be as late "
"as possible so that the store may have already completed.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5900 ../../../AMDGPUUsage.rst:7969
msgid ""
"*Same as corresponding store atomic release, except must generated all "
"instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:5905 ../../../AMDGPUUsage.rst:7974
msgid ""
"*Same as corresponding atomicrmw acq_rel, except must generated all "
"instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:5910 ../../../AMDGPUUsage.rst:7979
msgid ""
"*Same as corresponding fence acq_rel, except must generated all instructions "
"even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:5920
msgid "Memory Model GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:5922
msgid "For GFX10:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5925
msgid "Each SA has multiple work-group processors (WGP)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5926
msgid "Each WGP has multiple compute units (CU)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5928
msgid ""
"The wavefronts for a single work-group are executed in the same WGP. In CU "
"wavefront execution mode the wavefronts may be executed by different SIMDs "
"in the same CU. In WGP wavefront execution mode the wavefronts may be "
"executed by different SIMDs in different CUs in the same WGP."
msgstr ""

#: ../../../AMDGPUUsage.rst:5933
msgid ""
"Each WGP has a single LDS memory shared by the wavefronts of the work-groups "
"executing on it."
msgstr ""

#: ../../../AMDGPUUsage.rst:5935
msgid ""
"All LDS operations of a WGP are performed as wavefront wide operations in a "
"global order and involve no caching. Completion is reported to a wavefront "
"in execution order."
msgstr ""

#: ../../../AMDGPUUsage.rst:5938
msgid ""
"The LDS memory has multiple request queues shared by the SIMDs of a WGP. "
"Therefore, the LDS operations performed by different wavefronts of a work-"
"group can be reordered relative to each other, which can result in "
"reordering the visibility of vector memory operations with respect to LDS "
"operations of other wavefronts in the same work-group. A ``s_waitcnt "
"lgkmcnt(0)`` is required to ensure synchronization between LDS operations "
"and vector memory operations between wavefronts of a work-group, but not "
"between operations performed by the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:5946
msgid ""
"The vector memory operations are performed as wavefront wide operations. "
"Completion of load/store/sample operations are reported to a wavefront in "
"execution order of other load/store/sample operations performed by that "
"wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:5950
msgid ""
"The vector memory operations access a vector L0 cache. There is a single L0 "
"cache per CU. Each SIMD of a CU accesses the same L0 cache. Therefore, no "
"special action is required for coherence between the lanes of a single "
"wavefront. However, a ``buffer_gl0_inv`` is required for coherence between "
"wavefronts executing in the same work-group as they may be executing on "
"SIMDs of different CUs that access different L0s. A ``buffer_gl0_inv`` is "
"also required for coherence between wavefronts executing in different work-"
"groups as they may be executing on different WGPs."
msgstr ""

#: ../../../AMDGPUUsage.rst:5958
msgid ""
"The scalar memory operations access a scalar L0 cache shared by all "
"wavefronts on a WGP. The scalar and vector L0 caches are not coherent. "
"However, scalar operations are used in a restricted way so do not impact the "
"memory model. See :ref:`amdgpu-amdhsa-memory-spaces`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5962
msgid ""
"The vector and scalar memory L0 caches use an L1 cache shared by all WGPs on "
"the same SA. Therefore, no special action is required for coherence between "
"the wavefronts of a single work-group. However, a ``buffer_gl1_inv`` is "
"required for coherence between wavefronts executing in different work-groups "
"as they may be executing on different SAs that access different L1s."
msgstr ""

#: ../../../AMDGPUUsage.rst:5967
msgid ""
"The L1 caches have independent quadrants to service disjoint ranges of "
"virtual addresses."
msgstr ""

#: ../../../AMDGPUUsage.rst:5969
msgid ""
"Each L0 cache has a separate request queue per L1 quadrant. Therefore, the "
"vector and scalar memory operations performed by different wavefronts, "
"whether executing in the same or different work-groups (which may be "
"executing on different CUs accessing different L0s), can be reordered "
"relative to each other. A ``s_waitcnt vmcnt(0) & vscnt(0)`` is required to "
"ensure synchronization between vector memory operations of different "
"wavefronts. It ensures a previous vector memory operation has completed "
"before executing a subsequent vector memory or LDS operation and so can be "
"used to meet the requirements of acquire, release and sequential consistency."
msgstr ""

#: ../../../AMDGPUUsage.rst:5978
msgid "The L1 caches use an L2 cache shared by all SAs on the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:5981
msgid ""
"Each L1 quadrant of a single SA accesses a different L2 channel. Each L1 "
"quadrant has a separate request queue per L2 channel. Therefore, the vector "
"and scalar memory operations performed by wavefronts executing in different "
"work-groups (which may be executing on different SAs) of an agent can be "
"reordered relative to each other. A ``s_waitcnt vmcnt(0) & vscnt(0)`` is "
"required to ensure synchronization between vector memory operations of "
"different SAs. It ensures a previous vector memory operation has completed "
"before executing a subsequent vector memory and so can be used to meet the "
"requirements of acquire, release and sequential consistency."
msgstr ""

#: ../../../AMDGPUUsage.rst:6013
msgid ""
"CP invalidates the L0 and L1 caches at the start of each kernel dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:6014
msgid ""
"On dGPU the kernarg backing memory is accessed as MTYPE UC (uncached) to "
"avoid needing to invalidate the L2 cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:6016
msgid ""
"On APU the kernarg backing memory is accessed as MTYPE CC (cache coherent) "
"and so the L2 cache will be coherent with the CPU and other agents."
msgstr ""

#: ../../../AMDGPUUsage.rst:6019
msgid ""
"Scratch backing memory (which is used for the private address space) is "
"accessed with MTYPE NC (non-coherent). Since the private address space is "
"only accessed by a single thread, and is always write-before-read, there is "
"never a need to invalidate these entries from the L0 or L1 caches."
msgstr ""

#: ../../../AMDGPUUsage.rst:6024
msgid ""
"Wavefronts are executed in native mode with in-order reporting of loads and "
"sample instructions. In this mode vmcnt reports completion of load, atomic "
"with return and sample instructions in order, and the vscnt reports the "
"completion of store and atomic without return in order. See ``MEM_ORDERED`` "
"field in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6030
msgid "Wavefronts can be executed in WGP or CU wavefront execution mode:"
msgstr ""

#: ../../../AMDGPUUsage.rst:6032
msgid ""
"In WGP wavefront execution mode the wavefronts of a work-group are executed "
"on the SIMDs of both CUs of the WGP. Therefore, explicit management of the "
"per CU L0 caches is required for work-group synchronization. Also accesses "
"to L1 at work-group scope need to be explicitly ordered as the accesses from "
"different CUs are not ordered."
msgstr ""

#: ../../../AMDGPUUsage.rst:6037
msgid ""
"In CU wavefront execution mode the wavefronts of a work-group are executed "
"on the SIMDs of a single CU of the WGP. Therefore, all global memory access "
"by the work-group access the same L0 which in turn ensures L1 accesses are "
"ordered and so do not require explicit management of the caches for work-"
"group synchronization."
msgstr ""

#: ../../../AMDGPUUsage.rst:6043
msgid ""
"See ``WGP_MODE`` field in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-"
"table` and :ref:`amdgpu-target-features`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6047
msgid ""
"The code sequences used to implement the memory model for GFX10 are defined "
"in table :ref:`amdgpu-amdhsa-memory-model-code-sequences-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6050
msgid "AMDHSA Memory Model Code Sequences GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:6054
msgid "AMDGPU Machine Code GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:6066
msgid "buffer/global/flat_load slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:6071 ../../../AMDGPUUsage.rst:6133
msgid "buffer/global/flat_load glc=1 dlc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:6094
msgid "buffer/global/flat_store slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:6100
msgid "s_waitcnt vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6127 ../../../AMDGPUUsage.rst:6158
#: ../../../AMDGPUUsage.rst:6211
msgid "If CU wavefront execution mode, omit glc=1."
msgstr ""

#: ../../../AMDGPUUsage.rst:6163 ../../../AMDGPUUsage.rst:6175
#: ../../../AMDGPUUsage.rst:6201 ../../../AMDGPUUsage.rst:6237
#: ../../../AMDGPUUsage.rst:6302 ../../../AMDGPUUsage.rst:6317
#: ../../../AMDGPUUsage.rst:6368 ../../../AMDGPUUsage.rst:6529
#: ../../../AMDGPUUsage.rst:6686 ../../../AMDGPUUsage.rst:6822
#: ../../../AMDGPUUsage.rst:7114 ../../../AMDGPUUsage.rst:7131
#: ../../../AMDGPUUsage.rst:7140 ../../../AMDGPUUsage.rst:7190
#: ../../../AMDGPUUsage.rst:7265 ../../../AMDGPUUsage.rst:7539
#: ../../../AMDGPUUsage.rst:7772
msgid "If CU wavefront execution mode, omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:6165 ../../../AMDGPUUsage.rst:6186
#: ../../../AMDGPUUsage.rst:6307
msgid ""
"Must happen before the following buffer_gl0_inv and before any following "
"global/generic load/load atomic/store/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:6173 ../../../AMDGPUUsage.rst:6199
#: ../../../AMDGPUUsage.rst:6235 ../../../AMDGPUUsage.rst:6315
#: ../../../AMDGPUUsage.rst:6338 ../../../AMDGPUUsage.rst:6366
#: ../../../AMDGPUUsage.rst:6527 ../../../AMDGPUUsage.rst:7129
#: ../../../AMDGPUUsage.rst:7188 ../../../AMDGPUUsage.rst:7263
#: ../../../AMDGPUUsage.rst:7537
msgid "buffer_gl0_inv"
msgstr ""

#: ../../../AMDGPUUsage.rst:6177 ../../../AMDGPUUsage.rst:6204
#: ../../../AMDGPUUsage.rst:6239 ../../../AMDGPUUsage.rst:6319
#: ../../../AMDGPUUsage.rst:6341 ../../../AMDGPUUsage.rst:6370
#: ../../../AMDGPUUsage.rst:6531 ../../../AMDGPUUsage.rst:7133
#: ../../../AMDGPUUsage.rst:7193 ../../../AMDGPUUsage.rst:7267
#: ../../../AMDGPUUsage.rst:7541
msgid "Ensures that following loads will not see stale data."
msgstr ""

#: ../../../AMDGPUUsage.rst:6217
msgid "If CU wavefront execution mode, omit vmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:6221
msgid ""
"Must happen before the following buffer_gl0_inv and any following global/"
"generic load/load atomic/store/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:6244
msgid "buffer/global_load glc=1 dlc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:6248 ../../../AMDGPUUsage.rst:6381
#: ../../../AMDGPUUsage.rst:6412 ../../../AMDGPUUsage.rst:7322
#: ../../../AMDGPUUsage.rst:7397
msgid "Must happen before following buffer_gl*_inv."
msgstr ""

#: ../../../AMDGPUUsage.rst:6251
msgid "Ensures the load has completed before invalidating the caches."
msgstr ""

#: ../../../AMDGPUUsage.rst:6256 ../../../AMDGPUUsage.rst:6283
#: ../../../AMDGPUUsage.rst:6390 ../../../AMDGPUUsage.rst:6421
#: ../../../AMDGPUUsage.rst:6617 ../../../AMDGPUUsage.rst:7331
#: ../../../AMDGPUUsage.rst:7406 ../../../AMDGPUUsage.rst:7634
msgid "buffer_gl0_inv; buffer_gl1_inv"
msgstr ""

#: ../../../AMDGPUUsage.rst:6269
msgid "flat_load glc=1 dlc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:6275
msgid "Must happen before following buffer_gl*_invl."
msgstr ""

#: ../../../AMDGPUUsage.rst:6278
msgid "Ensures the flat_load has completed before invalidating the caches."
msgstr ""

#: ../../../AMDGPUUsage.rst:6300 ../../../AMDGPUUsage.rst:6376
#: ../../../AMDGPUUsage.rst:7112 ../../../AMDGPUUsage.rst:7317
msgid "s_waitcnt vm/vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6304 ../../../AMDGPUUsage.rst:6353
#: ../../../AMDGPUUsage.rst:6378 ../../../AMDGPUUsage.rst:6409
#: ../../../AMDGPUUsage.rst:7116 ../../../AMDGPUUsage.rst:7319
#: ../../../AMDGPUUsage.rst:7394
msgid ""
"Use vmcnt(0) if atomic with return and vscnt(0) if atomic with no-return."
msgstr ""

#: ../../../AMDGPUUsage.rst:6328 ../../../AMDGPUUsage.rst:6356
#: ../../../AMDGPUUsage.rst:6511 ../../../AMDGPUUsage.rst:7119
#: ../../../AMDGPUUsage.rst:7178 ../../../AMDGPUUsage.rst:7253
#: ../../../AMDGPUUsage.rst:7521
msgid "Must happen before the following buffer_gl0_inv."
msgstr ""

#: ../../../AMDGPUUsage.rst:6331
msgid ""
"Ensures any following global data read is no older than the local atomicrmw "
"value being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:6340 ../../../AMDGPUUsage.rst:7192
msgid "If OpenCL omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:6347
msgid "s_waitcnt lgkmcnt(0) & vm/vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6350
msgid "If CU wavefront execution mode, omit vm/vscnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:6384 ../../../AMDGPUUsage.rst:6415
#: ../../../AMDGPUUsage.rst:7325 ../../../AMDGPUUsage.rst:7400
msgid "Ensures the atomicrmw has completed before invalidating the caches."
msgstr ""

#: ../../../AMDGPUUsage.rst:6404 ../../../AMDGPUUsage.rst:7389
msgid "s_waitcnt vm/vscnt(0) & lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6436 ../../../AMDGPUUsage.rst:6536
#: ../../../AMDGPUUsage.rst:6635 ../../../AMDGPUUsage.rst:6721
#: ../../../AMDGPUUsage.rst:6772 ../../../AMDGPUUsage.rst:6904
#: ../../../AMDGPUUsage.rst:6980 ../../../AMDGPUUsage.rst:7057
#: ../../../AMDGPUUsage.rst:7198 ../../../AMDGPUUsage.rst:7246
#: ../../../AMDGPUUsage.rst:7272 ../../../AMDGPUUsage.rst:7344
#: ../../../AMDGPUUsage.rst:7421 ../../../AMDGPUUsage.rst:7546
#: ../../../AMDGPUUsage.rst:7658 ../../../AMDGPUUsage.rst:7862
msgid "s_waitcnt lgkmcnt(0) & vmcnt(0) & vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6439 ../../../AMDGPUUsage.rst:6638
#: ../../../AMDGPUUsage.rst:6775 ../../../AMDGPUUsage.rst:6907
#: ../../../AMDGPUUsage.rst:7060 ../../../AMDGPUUsage.rst:7201
#: ../../../AMDGPUUsage.rst:7249 ../../../AMDGPUUsage.rst:7424
#: ../../../AMDGPUUsage.rst:7661
msgid "If CU wavefront execution mode, omit vmcnt(0) and vscnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:6446 ../../../AMDGPUUsage.rst:6543
#: ../../../AMDGPUUsage.rst:6914 ../../../AMDGPUUsage.rst:6987
#: ../../../AMDGPUUsage.rst:7431 ../../../AMDGPUUsage.rst:7553
msgid "If OpenCL and address space is local, omit vmcnt(0) and vscnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:6465 ../../../AMDGPUUsage.rst:6555
#: ../../../AMDGPUUsage.rst:6643 ../../../AMDGPUUsage.rst:6728
#: ../../../AMDGPUUsage.rst:6779 ../../../AMDGPUUsage.rst:6862
#: ../../../AMDGPUUsage.rst:6933 ../../../AMDGPUUsage.rst:7006
#: ../../../AMDGPUUsage.rst:7205 ../../../AMDGPUUsage.rst:7277
#: ../../../AMDGPUUsage.rst:7444 ../../../AMDGPUUsage.rst:7565
#: ../../../AMDGPUUsage.rst:7865
msgid ""
"Could be split into separate s_waitcnt vmcnt(0), s_waitcnt vscnt(0) and "
"s_waitcnt lgkmcnt(0) to allow them to be independently moved according to "
"the following rules."
msgstr ""

#: ../../../AMDGPUUsage.rst:6474 ../../../AMDGPUUsage.rst:6564
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load "
"atomic/ atomicrmw-with-return-value with an equal or wider sync scope and "
"memory ordering stronger than unordered (this is termed the fence-paired-"
"atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:6487 ../../../AMDGPUUsage.rst:6577
msgid ""
"s_waitcnt vscnt(0) must happen after any preceding global/generic atomicrmw-"
"no-return-value with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:6601 ../../../AMDGPUUsage.rst:7594
msgid "Must happen before the following buffer_gl*_inv."
msgstr ""

#: ../../../AMDGPUUsage.rst:6604
msgid ""
"Ensures that the fence-paired atomic has completed before invalidating the "
"caches. Therefore any following locations read must be no older than the "
"value read by the fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:6652 ../../../AMDGPUUsage.rst:6697
#: ../../../AMDGPUUsage.rst:6737 ../../../AMDGPUUsage.rst:6788
#: ../../../AMDGPUUsage.rst:6833 ../../../AMDGPUUsage.rst:6871
#: ../../../AMDGPUUsage.rst:6942 ../../../AMDGPUUsage.rst:7015
#: ../../../AMDGPUUsage.rst:7080 ../../../AMDGPUUsage.rst:7151
#: ../../../AMDGPUUsage.rst:7214 ../../../AMDGPUUsage.rst:7286
#: ../../../AMDGPUUsage.rst:7453 ../../../AMDGPUUsage.rst:7574
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load/load "
"atomic/ atomicrmw-with-return-value."
msgstr ""

#: ../../../AMDGPUUsage.rst:6658 ../../../AMDGPUUsage.rst:6703
#: ../../../AMDGPUUsage.rst:6744 ../../../AMDGPUUsage.rst:6794
#: ../../../AMDGPUUsage.rst:6839 ../../../AMDGPUUsage.rst:6877
#: ../../../AMDGPUUsage.rst:6949 ../../../AMDGPUUsage.rst:7021
#: ../../../AMDGPUUsage.rst:7086 ../../../AMDGPUUsage.rst:7157
#: ../../../AMDGPUUsage.rst:7220 ../../../AMDGPUUsage.rst:7292
#: ../../../AMDGPUUsage.rst:7364 ../../../AMDGPUUsage.rst:7460
#: ../../../AMDGPUUsage.rst:7581
msgid ""
"s_waitcnt vscnt(0) must happen after any preceding global/generic store/"
"store atomic/ atomicrmw-no-return-value."
msgstr ""

#: ../../../AMDGPUUsage.rst:6675 ../../../AMDGPUUsage.rst:6760
msgid ""
"Ensures that all memory operations have completed before performing the "
"store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:6684 ../../../AMDGPUUsage.rst:6820
#: ../../../AMDGPUUsage.rst:7138 ../../../AMDGPUUsage.rst:7770
msgid "s_waitcnt vmcnt(0) & vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6689 ../../../AMDGPUUsage.rst:6825
#: ../../../AMDGPUUsage.rst:7143 ../../../AMDGPUUsage.rst:7774
msgid ""
"Could be split into separate s_waitcnt vmcnt(0) and s_waitcnt vscnt(0) to "
"allow them to be independently moved according to the following rules."
msgstr ""

#: ../../../AMDGPUUsage.rst:6712 ../../../AMDGPUUsage.rst:6848
#: ../../../AMDGPUUsage.rst:7166
msgid ""
"Ensures that all global memory operations have completed before performing "
"the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:6811 ../../../AMDGPUUsage.rst:7103
#: ../../../AMDGPUUsage.rst:7237 ../../../AMDGPUUsage.rst:7380
msgid ""
"Ensures that all memory operations have completed before performing the "
"atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:6858
msgid "s_waitcnt lgkmcnt(0) &"
msgstr ""

#: ../../../AMDGPUUsage.rst:6858
msgid "vmcnt(0) & vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6955 ../../../AMDGPUUsage.rst:7466
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding local/generic load/"
"store/load atomic/store atomic/ atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:7071 ../../../AMDGPUUsage.rst:7349
#: ../../../AMDGPUUsage.rst:7664
msgid ""
"Could be split into separate s_waitcnt vmcnt(0), s_waitcnt vscnt(0), and "
"s_waitcnt lgkmcnt(0) to allow them to be independently moved according to "
"the following rules."
msgstr ""

#: ../../../AMDGPUUsage.rst:7122
msgid ""
"Ensures any following global data read is no older than the atomicrmw value "
"being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:7256
msgid ""
"Ensures any following global data read is no older than the load atomic "
"value being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:7358
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load/load "
"atomic atomicrmw-with-return-value."
msgstr ""

#: ../../../AMDGPUUsage.rst:7479
msgid ""
"Ensures that all memory operations have completed before performing any "
"following global memory operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:7524
msgid ""
"Ensures that the acquire-fence-paired atomic has completed before "
"invalidating the cache. Therefore any following locations read must be no "
"older than the value read by the acquire-fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:7597
msgid ""
"Ensures that the preceding global/local/generic load atomic/atomicrmw with "
"an equal or wider sync scope and memory ordering stronger than unordered "
"(this is termed the acquire-fence-paired-atomic) has completed before "
"invalidating the caches. This satisfies the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:7673
msgid ""
"s_waitcnt lgkmcnt(0) must happen after preceding local/generic load atomic/"
"store atomic/atomicrmw with memory ordering of seq_cst and with equal or "
"wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"lgkmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:7689 ../../../AMDGPUUsage.rst:7890
msgid ""
"s_waitcnt vmcnt(0) must happen after preceding global/generic load atomic/ "
"atomicrmw-with-return-value with memory ordering of seq_cst and with equal "
"or wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"vmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:7705 ../../../AMDGPUUsage.rst:7798
#: ../../../AMDGPUUsage.rst:7906
msgid ""
"s_waitcnt vscnt(0) Must happen after preceding global/generic store atomic/ "
"atomicrmw-no-return-value with memory ordering of seq_cst and with equal or "
"wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"vscnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:7721
msgid ""
"Ensures any preceding sequential consistent global/local memory instructions "
"have completed before executing this sequentially consistent instruction. "
"This prevents reordering a seq_cst store followed by a seq_cst load. (Note "
"that seq_cst is stronger than acquire/release as the reordering of load "
"acquire followed by a store release is prevented by the s_waitcnt of the "
"release, but there is nothing preventing a store release followed by load "
"acquire from completing out of order. The s_waitcnt could be placed after "
"seq_store or before the seq_load. We choose the load to make the s_waitcnt "
"be as late as possible so that the store may have already completed.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:7782
msgid ""
"s_waitcnt vmcnt(0) Must happen after preceding global/generic load atomic/ "
"atomicrmw-with-return-value with memory ordering of seq_cst and with equal "
"or wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"vmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:7874
msgid ""
"s_waitcnt lgkmcnt(0) must happen after preceding local load atomic/store "
"atomic/atomicrmw with memory ordering of seq_cst and with equal or wider "
"sync scope. (Note that seq_cst fences have their own s_waitcnt lgkmcnt(0) "
"and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:7987 ../../../AMDGPUUsage.rst:8667
msgid "Trap Handler ABI"
msgstr ""

#: ../../../AMDGPUUsage.rst:7989
msgid ""
"For code objects generated by the AMDGPU backend for HSA [HSA]_ compatible "
"runtimes (see :ref:`amdgpu-os`), the runtime installs a trap handler that "
"supports the ``s_trap`` instruction. For usage see:"
msgstr ""

#: ../../../AMDGPUUsage.rst:7993
msgid ":ref:`amdgpu-trap-handler-for-amdhsa-os-v2-table`"
msgstr ""

#: ../../../AMDGPUUsage.rst:7994
msgid ":ref:`amdgpu-trap-handler-for-amdhsa-os-v3-table`"
msgstr ""

#: ../../../AMDGPUUsage.rst:7995
msgid ":ref:`amdgpu-trap-handler-for-amdhsa-os-v4-table`"
msgstr ""

#: ../../../AMDGPUUsage.rst:7997
msgid "AMDGPU Trap Handler for AMDHSA OS Code Object V2"
msgstr ""

#: ../../../AMDGPUUsage.rst:8001 ../../../AMDGPUUsage.rst:8041
#: ../../../AMDGPUUsage.rst:8083 ../../../AMDGPUUsage.rst:8677
msgid "Usage"
msgstr ""

#: ../../../AMDGPUUsage.rst:8001 ../../../AMDGPUUsage.rst:8041
#: ../../../AMDGPUUsage.rst:8083 ../../../AMDGPUUsage.rst:8677
msgid "Code Sequence"
msgstr ""

#: ../../../AMDGPUUsage.rst:8001 ../../../AMDGPUUsage.rst:8041
msgid "Trap Handler Inputs"
msgstr ""

#: ../../../AMDGPUUsage.rst:8004 ../../../AMDGPUUsage.rst:8026
#: ../../../AMDGPUUsage.rst:8027 ../../../AMDGPUUsage.rst:8028
#: ../../../AMDGPUUsage.rst:8029 ../../../AMDGPUUsage.rst:8030
#: ../../../AMDGPUUsage.rst:8031 ../../../AMDGPUUsage.rst:8032
#: ../../../AMDGPUUsage.rst:8044 ../../../AMDGPUUsage.rst:8068
#: ../../../AMDGPUUsage.rst:8069 ../../../AMDGPUUsage.rst:8070
#: ../../../AMDGPUUsage.rst:8071 ../../../AMDGPUUsage.rst:8072
#: ../../../AMDGPUUsage.rst:8073 ../../../AMDGPUUsage.rst:8074
#: ../../../AMDGPUUsage.rst:8085 ../../../AMDGPUUsage.rst:8109
#: ../../../AMDGPUUsage.rst:8110 ../../../AMDGPUUsage.rst:8111
#: ../../../AMDGPUUsage.rst:8112 ../../../AMDGPUUsage.rst:8113
#: ../../../AMDGPUUsage.rst:8114 ../../../AMDGPUUsage.rst:8115
msgid "reserved"
msgstr ""

#: ../../../AMDGPUUsage.rst:8004 ../../../AMDGPUUsage.rst:8044
#: ../../../AMDGPUUsage.rst:8085
msgid "``s_trap 0x00``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8004 ../../../AMDGPUUsage.rst:8044
#: ../../../AMDGPUUsage.rst:8085
msgid "Reserved by hardware."
msgstr ""

#: ../../../AMDGPUUsage.rst:8005
msgid "``debugtrap(arg)``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8005 ../../../AMDGPUUsage.rst:8045
#: ../../../AMDGPUUsage.rst:8086
msgid "``s_trap 0x01``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8005 ../../../AMDGPUUsage.rst:8014
#: ../../../AMDGPUUsage.rst:8056 ../../../AMDGPUUsage.rst:8097
msgid "``SGPR0-1``:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8006 ../../../AMDGPUUsage.rst:8010
#: ../../../AMDGPUUsage.rst:8052 ../../../AMDGPUUsage.rst:8093
msgid "``queue_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8007
msgid "``VGPR0``:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8008
msgid "``arg``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8005
msgid "Reserved for Finalizer HSA ``debugtrap`` intrinsic (not implemented)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8009 ../../../AMDGPUUsage.rst:8051
#: ../../../AMDGPUUsage.rst:8092
msgid "``llvm.trap``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8009 ../../../AMDGPUUsage.rst:8051
#: ../../../AMDGPUUsage.rst:8092
msgid "``s_trap 0x02``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8009 ../../../AMDGPUUsage.rst:8051
#: ../../../AMDGPUUsage.rst:8092
msgid ""
"Causes wave to be halted with the PC at the trap instruction. The associated "
"queue is signalled to put it into the error state.  When the queue is put in "
"the error state, the waves executing dispatches on the queue will be "
"terminated."
msgstr ""

#: ../../../AMDGPUUsage.rst:8016 ../../../AMDGPUUsage.rst:8058
#: ../../../AMDGPUUsage.rst:8099
msgid "``llvm.debugtrap``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8016 ../../../AMDGPUUsage.rst:8058
#: ../../../AMDGPUUsage.rst:8099
msgid "``s_trap 0x03``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8016 ../../../AMDGPUUsage.rst:8058
#: ../../../AMDGPUUsage.rst:8099
msgid ""
"If debugger not enabled then behaves as a no-operation. The trap handler is "
"entered and immediately returns to continue execution of the wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:8020 ../../../AMDGPUUsage.rst:8062
#: ../../../AMDGPUUsage.rst:8103
msgid ""
"If the debugger is enabled, causes the debug trap to be reported by the "
"debugger and the wavefront is put in the halt state with the PC at the "
"instruction.  The debugger must increment the PC and resume the wave."
msgstr ""

#: ../../../AMDGPUUsage.rst:8026 ../../../AMDGPUUsage.rst:8068
#: ../../../AMDGPUUsage.rst:8109
msgid "``s_trap 0x04``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8027 ../../../AMDGPUUsage.rst:8069
#: ../../../AMDGPUUsage.rst:8110
msgid "``s_trap 0x05``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8028 ../../../AMDGPUUsage.rst:8070
#: ../../../AMDGPUUsage.rst:8111
msgid "``s_trap 0x06``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8029 ../../../AMDGPUUsage.rst:8071
#: ../../../AMDGPUUsage.rst:8112
msgid "``s_trap 0x07``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8030 ../../../AMDGPUUsage.rst:8072
#: ../../../AMDGPUUsage.rst:8113
msgid "``s_trap 0x08``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8031 ../../../AMDGPUUsage.rst:8073
#: ../../../AMDGPUUsage.rst:8114
msgid "``s_trap 0xfe``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8032 ../../../AMDGPUUsage.rst:8074
#: ../../../AMDGPUUsage.rst:8115
msgid "``s_trap 0xff``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8037
msgid "AMDGPU Trap Handler for AMDHSA OS Code Object V3"
msgstr ""

#: ../../../AMDGPUUsage.rst:8045 ../../../AMDGPUUsage.rst:8086
msgid "debugger breakpoint"
msgstr ""

#: ../../../AMDGPUUsage.rst:8045 ../../../AMDGPUUsage.rst:8086
msgid ""
"Reserved for debugger to use for breakpoints. Causes wave to be halted with "
"the PC at the trap instruction. The debugger is responsible to resume the "
"wave, including the instruction that the breakpoint overwrote."
msgstr ""

#: ../../../AMDGPUUsage.rst:8079
msgid "AMDGPU Trap Handler for AMDHSA OS Code Object V4"
msgstr ""

#: ../../../AMDGPUUsage.rst:8083
msgid "GFX6-8 Inputs"
msgstr ""

#: ../../../AMDGPUUsage.rst:8083
msgid "GFX9-10 Inputs"
msgstr ""

#: ../../../AMDGPUUsage.rst:8121 ../../../AMDGPUUsage.rst:8644
msgid "Call Convention"
msgstr ""

#: ../../../AMDGPUUsage.rst:8125
msgid ""
"This section is currently incomplete and has inaccuracies. It is WIP that "
"will be updated as information is determined."
msgstr ""

#: ../../../AMDGPUUsage.rst:8128
msgid ""
"See :ref:`amdgpu-dwarf-address-space-identifier` for information on swizzled "
"addresses. Unswizzled addresses are normal linear addresses."
msgstr ""

#: ../../../AMDGPUUsage.rst:8134
msgid "Kernel Functions"
msgstr ""

#: ../../../AMDGPUUsage.rst:8136
msgid ""
"This section describes the call convention ABI for the outer kernel function."
msgstr ""

#: ../../../AMDGPUUsage.rst:8138
msgid ""
"See :ref:`amdgpu-amdhsa-initial-kernel-execution-state` for the kernel call "
"convention."
msgstr ""

#: ../../../AMDGPUUsage.rst:8141
msgid ""
"The following is not part of the AMDGPU kernel calling convention but "
"describes how the AMDGPU implements function calls:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8144
msgid ""
"Clang decides the kernarg layout to match the *HSA Programmer's Language "
"Reference* [HSA]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:8147
msgid "All structs are passed directly."
msgstr ""

#: ../../../AMDGPUUsage.rst:8148
msgid "Lambda values are passed *TBA*."
msgstr ""

#: ../../../AMDGPUUsage.rst:8152
msgid ""
"Does this really follow HSA rules? Or are structs >16 bytes passed by-value "
"struct?"
msgstr ""

#: ../../../AMDGPUUsage.rst:8154
msgid "What is ABI for lambda values?"
msgstr ""

#: ../../../AMDGPUUsage.rst:8156
msgid ""
"The kernel performs certain setup in its prolog, as described in :ref:"
"`amdgpu-amdhsa-kernel-prolog`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8162
msgid "Non-Kernel Functions"
msgstr ""

#: ../../../AMDGPUUsage.rst:8164
msgid ""
"This section describes the call convention ABI for functions other than the "
"outer kernel function."
msgstr ""

#: ../../../AMDGPUUsage.rst:8167
msgid ""
"If a kernel has function calls then scratch is always allocated and used for "
"the call stack which grows from low address to high address using the "
"swizzled scratch address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:8171
msgid "On entry to a function:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8173
msgid ""
"SGPR0-3 contain a V# with the following properties (see :ref:`amdgpu-amdhsa-"
"kernel-prolog-private-segment-buffer`):"
msgstr ""

#: ../../../AMDGPUUsage.rst:8176
msgid ""
"Base address pointing to the beginning of the wavefront scratch backing "
"memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:8178
msgid "Swizzled with dword element size and stride of wavefront size elements."
msgstr ""

#: ../../../AMDGPUUsage.rst:8180
msgid ""
"The FLAT_SCRATCH register pair is setup. See :ref:`amdgpu-amdhsa-kernel-"
"prolog-flat-scratch`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8182
msgid ""
"GFX6-8: M0 register set to the size of LDS in bytes. See :ref:`amdgpu-amdhsa-"
"kernel-prolog-m0`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8184
msgid "The EXEC register is set to the lanes active on entry to the function."
msgstr ""

#: ../../../AMDGPUUsage.rst:8185
msgid "MODE register: *TBD*"
msgstr ""

#: ../../../AMDGPUUsage.rst:8186
msgid ""
"VGPR0-31 and SGPR4-29 are used to pass function input arguments as described "
"below."
msgstr ""

#: ../../../AMDGPUUsage.rst:8188
msgid ""
"SGPR30-31 return address (RA). The code address that the function must "
"return to when it completes. The value is undefined if the function is *no "
"return*."
msgstr ""

#: ../../../AMDGPUUsage.rst:8191
msgid ""
"SGPR32 is used for the stack pointer (SP). It is an unswizzled scratch "
"offset relative to the beginning of the wavefront scratch backing memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:8194
msgid ""
"The unswizzled SP can be used with buffer instructions as an unswizzled SGPR "
"offset with the scratch V# in SGPR0-3 to access the stack in a swizzled "
"manner."
msgstr ""

#: ../../../AMDGPUUsage.rst:8198
msgid "The unswizzled SP value can be converted into the swizzled SP value by:"
msgstr ""

#: ../../../AMDGPUUsage.rst:0
msgid "swizzled SP = unswizzled SP / wavefront size"
msgstr ""

#: ../../../AMDGPUUsage.rst:8202
msgid ""
"This may be used to obtain the private address space address of stack "
"objects and to convert this address to a flat address by adding the flat "
"scratch aperture base address."
msgstr ""

#: ../../../AMDGPUUsage.rst:8206
msgid ""
"The swizzled SP value is always 4 bytes aligned for the ``r600`` "
"architecture and 16 byte aligned for the ``amdgcn`` architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:8211
msgid ""
"The ``amdgcn`` value is selected to avoid dynamic stack alignment for the "
"OpenCL language which has the largest base type defined as 16 bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:8214
msgid ""
"On entry, the swizzled SP value is the address of the first function "
"argument passed on the stack. Other stack passed arguments are positive "
"offsets from the entry swizzled SP value."
msgstr ""

#: ../../../AMDGPUUsage.rst:8218
msgid ""
"The function may use positive offsets beyond the last stack passed argument "
"for stack allocated local variables and register spill slots. If necessary, "
"the function may align these to greater alignment than 16 bytes. After these "
"the function may dynamically allocate space for such things as runtime sized "
"``alloca`` local allocations."
msgstr ""

#: ../../../AMDGPUUsage.rst:8224
msgid ""
"If the function calls another function, it will place any stack allocated "
"arguments after the last local allocation and adjust SGPR32 to the address "
"after the last local allocation."
msgstr ""

#: ../../../AMDGPUUsage.rst:8228
msgid "All other registers are unspecified."
msgstr ""

#: ../../../AMDGPUUsage.rst:8229
msgid ""
"Any necessary ``s_waitcnt`` has been performed to ensure memory is available "
"to the function."
msgstr ""

#: ../../../AMDGPUUsage.rst:8232
msgid "On exit from a function:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8234
msgid ""
"VGPR0-31 and SGPR4-29 are used to pass function result arguments as "
"described below. Any registers used are considered clobbered registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:8236
msgid ""
"The following registers are preserved and have the same value as on entry:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8238
msgid "FLAT_SCRATCH"
msgstr ""

#: ../../../AMDGPUUsage.rst:8239
msgid "EXEC"
msgstr ""

#: ../../../AMDGPUUsage.rst:8240
msgid "GFX6-8: M0"
msgstr ""

#: ../../../AMDGPUUsage.rst:8241
msgid "All SGPR registers except the clobbered registers of SGPR4-31."
msgstr ""

#: ../../../AMDGPUUsage.rst:8242
msgid ""
"VGPR40-47 VGPR56-63 VGPR72-79 VGPR88-95 VGPR104-111 VGPR120-127 VGPR136-143 "
"VGPR152-159 VGPR168-175 VGPR184-191 VGPR200-207 VGPR216-223 VGPR232-239 "
"VGPR248-255"
msgstr ""

#: ../../../AMDGPUUsage.rst:8257
msgid ""
"*Except the argument registers, the VGPR clobbered and the preserved "
"registers are intermixed at regular intervals in order to get a better "
"occupancy.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:8261
msgid ""
"For the AMDGPU backend, an inter-procedural register allocation (IPRA) "
"optimization may mark some of clobbered SGPR and VGPR registers as preserved "
"if it can be determined that the called function does not change their value."
msgstr ""

#: ../../../AMDGPUUsage.rst:8266
msgid "The PC is set to the RA provided on entry."
msgstr ""

#: ../../../AMDGPUUsage.rst:8267
msgid "MODE register: *TBD*."
msgstr ""

#: ../../../AMDGPUUsage.rst:8268
msgid "All other registers are clobbered."
msgstr ""

#: ../../../AMDGPUUsage.rst:8269
msgid ""
"Any necessary ``s_waitcnt`` has been performed to ensure memory accessed by "
"function is available to the caller."
msgstr ""

#: ../../../AMDGPUUsage.rst:8274
msgid "On gfx908 are all ACC registers clobbered?"
msgstr ""

#: ../../../AMDGPUUsage.rst:8276
msgid ""
"How are function results returned? The address of structured types is passed "
"by reference, but what about other types?"
msgstr ""

#: ../../../AMDGPUUsage.rst:8279
msgid ""
"The function input arguments are made up of the formal arguments explicitly "
"declared by the source language function plus the implicit input arguments "
"used by the implementation."
msgstr ""

#: ../../../AMDGPUUsage.rst:8283
msgid "The source language input arguments are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8285
msgid ""
"Any source language implicit ``this`` or ``self`` argument comes first as a "
"pointer type."
msgstr ""

#: ../../../AMDGPUUsage.rst:8287
msgid ""
"Followed by the function formal arguments in left to right source order."
msgstr ""

#: ../../../AMDGPUUsage.rst:8289
msgid "The source language result arguments are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8291
msgid "The function result argument."
msgstr ""

#: ../../../AMDGPUUsage.rst:8293
msgid ""
"The source language input or result struct type arguments that are less than "
"or equal to 16 bytes, are decomposed recursively into their base type "
"fields, and each field is passed as if a separate argument. For input "
"arguments, if the called function requires the struct to be in memory, for "
"example because its address is taken, then the function body is responsible "
"for allocating a stack location and copying the field arguments into it. "
"Clang terms this *direct struct*."
msgstr ""

#: ../../../AMDGPUUsage.rst:8301
msgid ""
"The source language input struct type arguments that are greater than 16 "
"bytes, are passed by reference. The caller is responsible for allocating a "
"stack location to make a copy of the struct value and pass the address as "
"the input argument. The called function is responsible to perform the "
"dereference when accessing the input argument. Clang terms this *by-value "
"struct*."
msgstr ""

#: ../../../AMDGPUUsage.rst:8307
msgid ""
"A source language result struct type argument that is greater than 16 bytes, "
"is returned by reference. The caller is responsible for allocating a stack "
"location to hold the result value and passes the address as the last input "
"argument (before the implicit input arguments). In this case there are no "
"result arguments. The called function is responsible to perform the "
"dereference when storing the result value. Clang terms this *structured "
"return (sret)*."
msgstr ""

#: ../../../AMDGPUUsage.rst:8314
msgid "*TODO: correct the ``sret`` definition.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:8318
msgid ""
"Is this definition correct? Or is ``sret`` only used if passing in "
"registers, and pass as non-decomposed struct as stack argument? Or something "
"else? Is the memory location in the caller stack frame, or a stack memory "
"argument and so no address is passed as the caller can directly write to the "
"argument stack location? But then the stack location is still live after "
"return. If an argument stack location is it the first stack argument or the "
"last one?"
msgstr ""

#: ../../../AMDGPUUsage.rst:8325
msgid ""
"Lambda argument types are treated as struct types with an implementation "
"defined set of fields."
msgstr ""

#: ../../../AMDGPUUsage.rst:8330
msgid "Need to specify the ABI for lambda types for AMDGPU."
msgstr ""

#: ../../../AMDGPUUsage.rst:8332
msgid ""
"For AMDGPU backend all source language arguments (including the decomposed "
"struct type arguments) are passed in VGPRs unless marked ``inreg`` in which "
"case they are passed in SGPRs."
msgstr ""

#: ../../../AMDGPUUsage.rst:8336
msgid ""
"The AMDGPU backend walks the function call graph from the leaves to "
"determine which implicit input arguments are used, propagating to each "
"caller of the function. The used implicit arguments are appended to the "
"function arguments after the source language arguments in the following "
"order:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8343
msgid "Is recursion or external functions supported?"
msgstr ""

#: ../../../AMDGPUUsage.rst:8345
msgid "Work-Item ID (1 VGPR)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8347
msgid ""
"The X, Y and Z work-item ID are packed into a single VGRP with the following "
"layout. Only fields actually used by the function are set. The other bits "
"are undefined."
msgstr ""

#: ../../../AMDGPUUsage.rst:8351
msgid ""
"The values come from the initial kernel execution state. See :ref:`amdgpu-"
"amdhsa-initial-kernel-execution-state`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8354
msgid "Work-item implicit argument layout"
msgstr ""

#: ../../../AMDGPUUsage.rst:8360
msgid "9:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:8360 ../../../AMDGPUUsage.rst:8361
#: ../../../AMDGPUUsage.rst:8362
msgid "10 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:8360
msgid "X Work-Item ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:8361
msgid "19:10"
msgstr ""

#: ../../../AMDGPUUsage.rst:8361
msgid "Y Work-Item ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:8362
msgid "29:20"
msgstr ""

#: ../../../AMDGPUUsage.rst:8362
msgid "Z Work-Item ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:8363
msgid "31:30"
msgstr ""

#: ../../../AMDGPUUsage.rst:8363
msgid "Unused"
msgstr ""

#: ../../../AMDGPUUsage.rst:8366
msgid "Dispatch Ptr (2 SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8368 ../../../AMDGPUUsage.rst:8373
#: ../../../AMDGPUUsage.rst:8378 ../../../AMDGPUUsage.rst:8383
#: ../../../AMDGPUUsage.rst:8388 ../../../AMDGPUUsage.rst:8393
#: ../../../AMDGPUUsage.rst:8398
msgid ""
"The value comes from the initial kernel execution state. See :ref:`amdgpu-"
"amdhsa-sgpr-register-set-up-order-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8371
msgid "Queue Ptr (2 SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8376
msgid "Kernarg Segment Ptr (2 SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8381
msgid "Dispatch id (2 SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8386
msgid "Work-Group ID X (1 SGPR)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8391
msgid "Work-Group ID Y (1 SGPR)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8396
msgid "Work-Group ID Z (1 SGPR)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8401
msgid "Implicit Argument Ptr (2 SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8403
msgid ""
"The value is computed by adding an offset to Kernarg Segment Ptr to get the "
"global address space pointer to the first kernarg implicit argument."
msgstr ""

#: ../../../AMDGPUUsage.rst:8406
msgid ""
"The input and result arguments are assigned in order in the following manner:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8410
msgid ""
"There are likely some errors and omissions in the following description that "
"need correction."
msgstr ""

#: ../../../AMDGPUUsage.rst:8415
msgid ""
"Check the Clang source code to decipher how function arguments and return "
"results are handled. Also see the AMDGPU specific values used."
msgstr ""

#: ../../../AMDGPUUsage.rst:8418
msgid ""
"VGPR arguments are assigned to consecutive VGPRs starting at VGPR0 up to "
"VGPR31."
msgstr ""

#: ../../../AMDGPUUsage.rst:8421 ../../../AMDGPUUsage.rst:8432
msgid ""
"If there are more arguments than will fit in these registers, the remaining "
"arguments are allocated on the stack in order on naturally aligned addresses."
msgstr ""

#: ../../../AMDGPUUsage.rst:8427
msgid "How are overly aligned structures allocated on the stack?"
msgstr ""

#: ../../../AMDGPUUsage.rst:8429
msgid ""
"SGPR arguments are assigned to consecutive SGPRs starting at SGPR0 up to "
"SGPR29."
msgstr ""

#: ../../../AMDGPUUsage.rst:8436
msgid ""
"Note that decomposed struct type arguments may have some fields passed in "
"registers and some in memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:8441
msgid ""
"So, a struct which can pass some fields as decomposed register arguments, "
"will pass the rest as decomposed stack elements? But an argument that will "
"not start in registers will not be decomposed and will be passed as a non-"
"decomposed stack value?"
msgstr ""

#: ../../../AMDGPUUsage.rst:8446
msgid ""
"The following is not part of the AMDGPU function calling convention but "
"describes how the AMDGPU implements function calls:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8449
msgid ""
"SGPR33 is used as a frame pointer (FP) if necessary. Like the SP it is an "
"unswizzled scratch address. It is only needed if runtime sized ``alloca`` "
"are used, or for the reasons defined in ``SIFrameLowering``."
msgstr ""

#: ../../../AMDGPUUsage.rst:8452
msgid ""
"Runtime stack alignment is supported. SGPR34 is used as a base pointer (BP) "
"to access the incoming stack arguments in the function. The BP is needed "
"only when the function requires the runtime stack alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:8456
msgid "Allocating SGPR arguments on the stack are not supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:8458
msgid ""
"No CFI is currently generated. See :ref:`amdgpu-dwarf-call-frame-"
"information`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8463
msgid ""
"CFI will be generated that defines the CFA as the unswizzled address "
"relative to the wave scratch base in the unswizzled private address space of "
"the lowest address stack allocated local variable."
msgstr ""

#: ../../../AMDGPUUsage.rst:8467
msgid ""
"``DW_AT_frame_base`` will be defined as the swizzled address in the swizzled "
"private address space by dividing the CFA by the wavefront size (since CFA "
"is always at least dword aligned which matches the scratch swizzle element "
"size)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8472
msgid ""
"If no dynamic stack alignment was performed, the stack allocated arguments "
"are accessed as negative offsets relative to ``DW_AT_frame_base``, and the "
"local variables and register spill slots are accessed as positive offsets "
"relative to ``DW_AT_frame_base``."
msgstr ""

#: ../../../AMDGPUUsage.rst:8477
msgid ""
"Function argument passing is implemented by copying the input physical "
"registers to virtual registers on entry. The register allocator can spill if "
"necessary. These are copied back to physical registers at call sites. The "
"net effect is that each function call can have these values in entirely "
"distinct locations. The IPRA can help avoid shuffling argument registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:8482
msgid ""
"Call sites are implemented by setting up the arguments at positive offsets "
"from SP. Then SP is incremented to account for the known frame size before "
"the call and decremented after the call."
msgstr ""

#: ../../../AMDGPUUsage.rst:8488
msgid ""
"The CFI will reflect the changed calculation needed to compute the CFA from "
"SP."
msgstr ""

#: ../../../AMDGPUUsage.rst:8491
msgid ""
"4 byte spill slots are used in the stack frame. One slot is allocated for an "
"emergency spill slot. Buffer instructions are used for stack accesses and "
"not the ``flat_scratch`` instruction."
msgstr ""

#: ../../../AMDGPUUsage.rst:8497
msgid "Explain when the emergency spill slot is used."
msgstr ""

#: ../../../AMDGPUUsage.rst:8501
msgid "Possible broken issues:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8503
msgid "Stack arguments must be aligned to required alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:8504
msgid "Stack is aligned to max(16, max formal argument alignment)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8505
msgid "Direct argument < 64 bits should check register budget."
msgstr ""

#: ../../../AMDGPUUsage.rst:8506
msgid "Register budget calculation should respect ``inreg`` for SGPR."
msgstr ""

#: ../../../AMDGPUUsage.rst:8507
msgid "SGPR overflow is not handled."
msgstr ""

#: ../../../AMDGPUUsage.rst:8508
msgid "struct with 1 member unpeeling is not checking size of member."
msgstr ""

#: ../../../AMDGPUUsage.rst:8509
msgid "``sret`` is after ``this`` pointer."
msgstr ""

#: ../../../AMDGPUUsage.rst:8510
msgid "Caller is not implementing stack realignment: need an extra pointer."
msgstr ""

#: ../../../AMDGPUUsage.rst:8511
msgid "Should say AMDGPU passes FP rather than SP."
msgstr ""

#: ../../../AMDGPUUsage.rst:8512
msgid ""
"Should CFI define CFA as address of locals or arguments. Difference is "
"apparent when have implemented dynamic alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:8514
msgid ""
"If ``SCRATCH`` instruction could allow negative offsets, then can make FP be "
"highest address of stack frame and use negative offset for locals. Would "
"allow SP to be the same as FP and could support signal-handler-like as now "
"have a real SP for the top of the stack."
msgstr ""

#: ../../../AMDGPUUsage.rst:8518
msgid ""
"How is ``sret`` passed on the stack? In argument stack area? Can it overlay "
"arguments?"
msgstr ""

#: ../../../AMDGPUUsage.rst:8522
msgid "AMDPAL"
msgstr ""

#: ../../../AMDGPUUsage.rst:8524
msgid ""
"This section provides code conventions used when the target triple OS is "
"``amdpal`` (see :ref:`amdgpu-target-triples`) for passing runtime parameters "
"from the application/runtime to each invocation of a hardware shader. These "
"parameters include both generic, application-controlled parameters called "
"*user data* as well as system-generated parameters that are a product of the "
"draw or dispatch execution."
msgstr ""

#: ../../../AMDGPUUsage.rst:8532
msgid "User Data"
msgstr ""

#: ../../../AMDGPUUsage.rst:8534
msgid ""
"Each hardware stage has a set of 32-bit *user data registers* which can be "
"written from a command buffer and then loaded into SGPRs when waves are "
"launched via a subsequent dispatch or draw operation. This is the way most "
"arguments are passed from the application/runtime to a hardware shader."
msgstr ""

#: ../../../AMDGPUUsage.rst:8540
msgid "Compute User Data"
msgstr ""

#: ../../../AMDGPUUsage.rst:8542
msgid ""
"Compute shader user data mappings are simpler than graphics shaders and have "
"a fixed mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:8545
msgid ""
"Note that there are always 10 available *user data entries* in registers - "
"entries beyond that limit must be fetched from memory (via the spill table "
"pointer) by the shader."
msgstr ""

#: ../../../AMDGPUUsage.rst:8549
msgid "PAL Compute Shader User Data Registers"
msgstr ""

#: ../../../AMDGPUUsage.rst:8553 ../../../AMDGPUUsage.rst:8572
msgid "User Register"
msgstr ""

#: ../../../AMDGPUUsage.rst:8555 ../../../AMDGPUUsage.rst:8574
msgid "Global Internal Table (32-bit pointer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8556 ../../../AMDGPUUsage.rst:8575
msgid "Per-Shader Internal Table (32-bit pointer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8557
msgid "2 - 11"
msgstr ""

#: ../../../AMDGPUUsage.rst:8557
msgid "Application-Controlled User Data (10 32-bit values)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8558 ../../../AMDGPUUsage.rst:8578
msgid "Spill Table (32-bit pointer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8559
msgid "13 - 14"
msgstr ""

#: ../../../AMDGPUUsage.rst:8559
msgid "Thread Group Count (64-bit pointer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8560
msgid "15"
msgstr ""

#: ../../../AMDGPUUsage.rst:8560
msgid "GDS Range"
msgstr ""

#: ../../../AMDGPUUsage.rst:8564
msgid "Graphics User Data"
msgstr ""

#: ../../../AMDGPUUsage.rst:8566
msgid "Graphics pipelines support a much more flexible user data mapping:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8568
msgid "PAL Graphics Shader User Data Registers"
msgstr ""

#: ../../../AMDGPUUsage.rst:8576
msgid "1-15"
msgstr ""

#: ../../../AMDGPUUsage.rst:8576
msgid ""
"Application Controlled User Data (1-15 Contiguous 32-bit Values in Registers)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8579
msgid "Draw Index (First Stage Only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8580
msgid "Vertex Offset (First Stage Only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8581
msgid "Instance Offset (First Stage Only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8584
msgid ""
"The placement of the global internal table remains fixed in the first *user "
"data SGPR register*. Otherwise all parameters are optional, and can be "
"mapped to any desired *user data SGPR register*, with the following "
"restrictions:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8588
msgid ""
"Draw Index, Vertex Offset, and Instance Offset can only be used by the first "
"active hardware stage in a graphics pipeline (i.e. where the API vertex "
"shader runs)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8592
msgid ""
"Application-controlled user data must be mapped into a contiguous range of "
"user data registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:8595
msgid ""
"The application-controlled user data range supports compaction remapping, so "
"only *entries* that are actually consumed by the shader must be assigned to "
"corresponding *registers*. Note that in order to support an efficient "
"runtime implementation, the remapping must pack *registers* in the same "
"order as *entries*, with unused *entries* removed."
msgstr ""

#: ../../../AMDGPUUsage.rst:8604
msgid "Global Internal Table"
msgstr ""

#: ../../../AMDGPUUsage.rst:8606
msgid ""
"The global internal table is a table of *shader resource descriptors* (SRDs) "
"that define how certain engine-wide, runtime-managed resources should be "
"accessed from a shader. The majority of these resources have HW-defined "
"formats, and it is up to the compiler to write/read data as required by the "
"target hardware."
msgstr ""

#: ../../../AMDGPUUsage.rst:8612
msgid "The following table illustrates the required format:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8614
msgid "PAL Global Internal Table"
msgstr ""

#: ../../../AMDGPUUsage.rst:8618
msgid "Offset"
msgstr ""

#: ../../../AMDGPUUsage.rst:8620
msgid "0-3"
msgstr ""

#: ../../../AMDGPUUsage.rst:8620
msgid "Graphics Scratch SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:8621
msgid "4-7"
msgstr ""

#: ../../../AMDGPUUsage.rst:8621
msgid "Compute Scratch SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:8622
msgid "8-11"
msgstr ""

#: ../../../AMDGPUUsage.rst:8622
msgid "ES/GS Ring Output SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:8623
msgid "12-15"
msgstr ""

#: ../../../AMDGPUUsage.rst:8623
msgid "ES/GS Ring Input SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:8624
msgid "16-19"
msgstr ""

#: ../../../AMDGPUUsage.rst:8624
msgid "GS/VS Ring Output #0"
msgstr ""

#: ../../../AMDGPUUsage.rst:8625
msgid "20-23"
msgstr ""

#: ../../../AMDGPUUsage.rst:8625
msgid "GS/VS Ring Output #1"
msgstr ""

#: ../../../AMDGPUUsage.rst:8626
msgid "24-27"
msgstr ""

#: ../../../AMDGPUUsage.rst:8626
msgid "GS/VS Ring Output #2"
msgstr ""

#: ../../../AMDGPUUsage.rst:8627
msgid "28-31"
msgstr ""

#: ../../../AMDGPUUsage.rst:8627
msgid "GS/VS Ring Output #3"
msgstr ""

#: ../../../AMDGPUUsage.rst:8628
msgid "32-35"
msgstr ""

#: ../../../AMDGPUUsage.rst:8628
msgid "GS/VS Ring Input SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:8629
msgid "36-39"
msgstr ""

#: ../../../AMDGPUUsage.rst:8629
msgid "Tessellation Factor Buffer SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:8630
msgid "40-43"
msgstr ""

#: ../../../AMDGPUUsage.rst:8630
msgid "Off-Chip LDS Buffer SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:8631
msgid "44-47"
msgstr ""

#: ../../../AMDGPUUsage.rst:8631
msgid "Off-Chip Param Cache Buffer SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:8632
msgid "48-51"
msgstr ""

#: ../../../AMDGPUUsage.rst:8632
msgid "Sample Position Buffer SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:8633
msgid "52"
msgstr ""

#: ../../../AMDGPUUsage.rst:8633
msgid "vaRange::ShadowDescriptorTable High Bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:8636
msgid ""
"The pointer to the global internal table passed to the shader as user data "
"is a 32-bit pointer. The top 32 bits should be assumed to be the same as the "
"top 32 bits of the pipeline, so the shader may use the program counter's top "
"32 bits."
msgstr ""

#: ../../../AMDGPUUsage.rst:8646
msgid "For graphics use cases, the calling convention is `amdgpu_gfx`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8650
msgid ""
"`amdgpu_gfx` Function calls are currently in development and are subject to "
"major changes."
msgstr ""

#: ../../../AMDGPUUsage.rst:8653
msgid ""
"This calling convention shares most properties with calling non-kernel "
"functions (see :ref:`amdgpu-amdhsa-function-call-convention-non-kernel-"
"functions`). Differences are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8658
msgid "Currently there are none, differences will be listed here"
msgstr ""

#: ../../../AMDGPUUsage.rst:8661
msgid "Unspecified OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:8663
msgid ""
"This section provides code conventions used when the target triple OS is "
"empty (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8669
msgid ""
"For code objects generated by AMDGPU backend for non-amdhsa OS, the runtime "
"does not install a trap handler. The ``llvm.trap`` and ``llvm.debugtrap`` "
"instructions are handled as follows:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8673
msgid "AMDGPU Trap Handler for Non-AMDHSA OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:8679
msgid "llvm.trap"
msgstr ""

#: ../../../AMDGPUUsage.rst:8679
msgid "s_endpgm"
msgstr ""

#: ../../../AMDGPUUsage.rst:8679
msgid "Causes wavefront to be terminated."
msgstr ""

#: ../../../AMDGPUUsage.rst:8680
msgid "llvm.debugtrap"
msgstr ""

#: ../../../AMDGPUUsage.rst:8680
msgid "Compiler warning given that there is no trap handler installed."
msgstr ""

#: ../../../AMDGPUUsage.rst:8685
msgid "Source Languages"
msgstr ""

#: ../../../AMDGPUUsage.rst:8690
msgid "OpenCL"
msgstr ""

#: ../../../AMDGPUUsage.rst:8692
msgid "When the language is OpenCL the following differences occur:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8694
msgid ""
"The OpenCL memory model is used (see :ref:`amdgpu-amdhsa-memory-model`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8695
msgid ""
"The AMDGPU backend appends additional arguments to the kernel's explicit "
"arguments for the AMDHSA OS (see :ref:`opencl-kernel-implicit-arguments-"
"appended-for-amdhsa-os-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8698
msgid ""
"Additional metadata is generated (see :ref:`amdgpu-amdhsa-code-object-"
"metadata`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8701
msgid "OpenCL kernel implicit arguments appended for AMDHSA OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:8705
msgid "Position"
msgstr ""

#: ../../../AMDGPUUsage.rst:8705
msgid "Byte Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:8705
msgid "Byte Alignment"
msgstr ""

#: ../../../AMDGPUUsage.rst:8708
msgid "OpenCL Global Offset X"
msgstr ""

#: ../../../AMDGPUUsage.rst:8709
msgid "OpenCL Global Offset Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:8710
msgid "OpenCL Global Offset Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:8711
msgid "OpenCL address of printf buffer"
msgstr ""

#: ../../../AMDGPUUsage.rst:8712
msgid "OpenCL address of virtual queue used by enqueue_kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:8714
msgid "OpenCL address of AqlWrap struct used by enqueue_kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:8716
msgid "Pointer argument used for Multi-gird synchronization."
msgstr ""

#: ../../../AMDGPUUsage.rst:8723
msgid "HCC"
msgstr ""

#: ../../../AMDGPUUsage.rst:8725
msgid "When the language is HCC the following differences occur:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8727
msgid "The HSA memory model is used (see :ref:`amdgpu-amdhsa-memory-model`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8732
msgid "Assembler"
msgstr ""

#: ../../../AMDGPUUsage.rst:8734
msgid ""
"AMDGPU backend has LLVM-MC based assembler which is currently in "
"development. It supports AMDGCN GFX6-GFX10."
msgstr ""

#: ../../../AMDGPUUsage.rst:8737
msgid "This section describes general syntax for instructions and operands."
msgstr ""

#: ../../../AMDGPUUsage.rst:8740
msgid "Instructions"
msgstr ""

#: ../../../AMDGPUUsage.rst:8742
msgid ""
"An instruction has the following :doc:`syntax<AMDGPUInstructionSyntax>`:"
msgstr ""

#: ../../../AMDGPUUsage.rst:0
msgid ""
"``<``\\ *opcode*\\ ``> <``\\ *operand0*\\ ``>, <``\\ *operand1*\\ ``>,... "
"<``\\ *modifier0*\\ ``> <``\\ *modifier1*\\ ``>...``"
msgstr ""

#: ../../../AMDGPUUsage.rst:8747
msgid ""
":doc:`Operands<AMDGPUOperandSyntax>` are comma-separated while :doc:"
"`modifiers<AMDGPUModifierSyntax>` are space-separated."
msgstr ""

#: ../../../AMDGPUUsage.rst:8750
msgid ""
"The order of operands and modifiers is fixed. Most modifiers are optional "
"and may be omitted."
msgstr ""

#: ../../../AMDGPUUsage.rst:8753
msgid ""
"Links to detailed instruction syntax description may be found in the "
"following table. Note that features under development are not included in "
"this description."
msgstr ""

#: ../../../AMDGPUUsage.rst:8758
msgid "Core ISA"
msgstr ""

#: ../../../AMDGPUUsage.rst:8758
msgid "ISA Extensions"
msgstr ""

#: ../../../AMDGPUUsage.rst:8760
msgid ":doc:`GFX7<AMDGPU/AMDGPUAsmGFX7>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:8760 ../../../AMDGPUUsage.rst:8761
msgid "\\-"
msgstr ""

#: ../../../AMDGPUUsage.rst:8761
msgid ":doc:`GFX8<AMDGPU/AMDGPUAsmGFX8>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:8762
msgid ":doc:`GFX9<AMDGPU/AMDGPUAsmGFX9>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:8762
msgid ":doc:`gfx900<AMDGPU/AMDGPUAsmGFX900>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:8764
msgid ":doc:`gfx902<AMDGPU/AMDGPUAsmGFX900>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:8766
msgid ":doc:`gfx904<AMDGPU/AMDGPUAsmGFX904>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:8768
msgid ":doc:`gfx906<AMDGPU/AMDGPUAsmGFX906>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:8770
msgid ":doc:`gfx908<AMDGPU/AMDGPUAsmGFX908>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:8772
msgid ":doc:`gfx909<AMDGPU/AMDGPUAsmGFX900>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:8774
msgid ":doc:`GFX10<AMDGPU/AMDGPUAsmGFX10>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:8774
msgid ":doc:`gfx1011<AMDGPU/AMDGPUAsmGFX1011>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:8776
msgid ":doc:`gfx1012<AMDGPU/AMDGPUAsmGFX1011>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:8779
msgid ""
"For more information about instructions, their semantics and supported "
"combinations of operands, refer to one of instruction set architecture "
"manuals [AMD-GCN-GFX6]_, [AMD-GCN-GFX7]_, [AMD-GCN-GFX8]_, [AMD-GCN-GFX9]_, "
"[AMD-GCN-GFX10-RDNA1]_ and [AMD-GCN-GFX10-RDNA2]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:8785
msgid "Operands"
msgstr ""

#: ../../../AMDGPUUsage.rst:8787
msgid ""
"Detailed description of operands may be found :doc:"
"`here<AMDGPUOperandSyntax>`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8790
msgid "Modifiers"
msgstr ""

#: ../../../AMDGPUUsage.rst:8792
msgid ""
"Detailed description of modifiers may be found :doc:"
"`here<AMDGPUModifierSyntax>`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8796
msgid "Instruction Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:8799
msgid "DS"
msgstr ""

#: ../../../AMDGPUUsage.rst:8808
msgid ""
"For full list of supported instructions, refer to \"LDS/GDS instructions\" "
"in ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:8812
msgid "FLAT"
msgstr ""

#: ../../../AMDGPUUsage.rst:8822
msgid ""
"For full list of supported instructions, refer to \"FLAT instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:8826
msgid "MUBUF"
msgstr ""

#: ../../../AMDGPUUsage.rst:8836
msgid ""
"For full list of supported instructions, refer to \"MUBUF Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:8840
msgid "SMRD/SMEM"
msgstr ""

#: ../../../AMDGPUUsage.rst:8850
msgid ""
"For full list of supported instructions, refer to \"Scalar Memory "
"Operations\" in ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:8854
msgid "SOP1"
msgstr ""

#: ../../../AMDGPUUsage.rst:8866
msgid ""
"For full list of supported instructions, refer to \"SOP1 Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:8870
msgid "SOP2"
msgstr ""

#: ../../../AMDGPUUsage.rst:8884
msgid ""
"For full list of supported instructions, refer to \"SOP2 Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:8888
msgid "SOPC"
msgstr ""

#: ../../../AMDGPUUsage.rst:8897
msgid ""
"For full list of supported instructions, refer to \"SOPC Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:8901
msgid "SOPP"
msgstr ""

#: ../../../AMDGPUUsage.rst:8917
msgid ""
"For full list of supported instructions, refer to \"SOPP Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:8920
msgid ""
"Unless otherwise mentioned, little verification is performed on the operands "
"of SOPP Instructions, so it is up to the programmer to be familiar with the "
"range or acceptable values."
msgstr ""

#: ../../../AMDGPUUsage.rst:8925
msgid "VALU"
msgstr ""

#: ../../../AMDGPUUsage.rst:8927
msgid ""
"For vector ALU instruction opcodes (VOP1, VOP2, VOP3, VOPC, VOP_DPP, "
"VOP_SDWA), the assembler will automatically use optimal encoding based on "
"its operands. To force specific encoding, one can add a suffix to the opcode "
"of the instruction:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8931
msgid "_e32 for 32-bit VOP1/VOP2/VOPC"
msgstr ""

#: ../../../AMDGPUUsage.rst:8932
msgid "_e64 for 64-bit VOP3"
msgstr ""

#: ../../../AMDGPUUsage.rst:8933
msgid "_dpp for VOP_DPP"
msgstr ""

#: ../../../AMDGPUUsage.rst:8934
msgid "_sdwa for VOP_SDWA"
msgstr ""

#: ../../../AMDGPUUsage.rst:8936
msgid "VOP1/VOP2/VOP3/VOPC examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8953
msgid "VOP_DPP examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8966
msgid "VOP_SDWA examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8976
msgid ""
"For full list of supported instructions, refer to \"Vector ALU "
"instructions\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:8981
msgid "Code Object V2 Predefined Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:8987 ../../../AMDGPUUsage.rst:9158
msgid ""
"The AMDGPU assembler defines and updates some symbols automatically. These "
"symbols do not affect code generation."
msgstr ""

#: ../../../AMDGPUUsage.rst:8991
msgid ".option.machine_version_major"
msgstr ""

#: ../../../AMDGPUUsage.rst:8993 ../../../AMDGPUUsage.rst:9164
msgid ""
"Set to the GFX major generation number of the target being assembled for. "
"For example, when assembling for a \"GFX9\" target this will be set to the "
"integer value \"9\". The possible GFX major generation numbers are presented "
"in :ref:`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8999
msgid ".option.machine_version_minor"
msgstr ""

#: ../../../AMDGPUUsage.rst:9001 ../../../AMDGPUUsage.rst:9172
msgid ""
"Set to the GFX minor generation number of the target being assembled for. "
"For example, when assembling for a \"GFX810\" target this will be set to the "
"integer value \"1\". The possible GFX minor generation numbers are presented "
"in :ref:`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9007
msgid ".option.machine_version_stepping"
msgstr ""

#: ../../../AMDGPUUsage.rst:9009 ../../../AMDGPUUsage.rst:9180
msgid ""
"Set to the GFX stepping generation number of the target being assembled for. "
"For example, when assembling for a \"GFX704\" target this will be set to the "
"integer value \"4\". The possible GFX stepping generation numbers are "
"presented in :ref:`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9015
msgid ".kernel.vgpr_count"
msgstr ""

#: ../../../AMDGPUUsage.rst:9017
msgid ""
"Set to zero each time a :ref:`amdgpu-amdhsa-assembler-directive-"
"amdgpu_hsa_kernel` directive is encountered. At each instruction, if the "
"current value of this symbol is less than or equal to the maximum VGPR "
"number explicitly referenced within that instruction then the symbol value "
"is updated to equal that VGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:9025
msgid ".kernel.sgpr_count"
msgstr ""

#: ../../../AMDGPUUsage.rst:9027
msgid ""
"Set to zero each time a :ref:`amdgpu-amdhsa-assembler-directive-"
"amdgpu_hsa_kernel` directive is encountered. At each instruction, if the "
"current value of this symbol is less than or equal to the maximum VGPR "
"number explicitly referenced within that instruction then the symbol value "
"is updated to equal that SGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:9037
msgid "Code Object V2 Directives"
msgstr ""

#: ../../../AMDGPUUsage.rst:9043
msgid ""
"AMDGPU ABI defines auxiliary data in output code object. In assembly source, "
"one can specify them with assembler directives."
msgstr ""

#: ../../../AMDGPUUsage.rst:9047
msgid ".hsa_code_object_version major, minor"
msgstr ""

#: ../../../AMDGPUUsage.rst:9049
msgid ""
"*major* and *minor* are integers that specify the version of the HSA code "
"object that will be generated by the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:9053
msgid ".hsa_code_object_isa [major, minor, stepping, vendor, arch]"
msgstr ""

#: ../../../AMDGPUUsage.rst:9056
msgid ""
"*major*, *minor*, and *stepping* are all integers that describe the "
"instruction set architecture (ISA) version of the assembly program."
msgstr ""

#: ../../../AMDGPUUsage.rst:9059
msgid ""
"*vendor* and *arch* are quoted strings. *vendor* should always be equal to "
"\"AMD\" and *arch* should always be equal to \"AMDGPU\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:9062
msgid ""
"By default, the assembler will derive the ISA version, *vendor*, and *arch* "
"from the value of the -mcpu option that is passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:9068
msgid ".amdgpu_hsa_kernel (name)"
msgstr ""

#: ../../../AMDGPUUsage.rst:9070
msgid ""
"This directives specifies that the symbol with given name is a kernel entry "
"point (label) and the object should contain corresponding symbol of type "
"STT_AMDGPU_HSA_KERNEL."
msgstr ""

#: ../../../AMDGPUUsage.rst:9075
msgid ".amd_kernel_code_t"
msgstr ""

#: ../../../AMDGPUUsage.rst:9077
msgid ""
"This directive marks the beginning of a list of key / value pairs that are "
"used to specify the amd_kernel_code_t object that will be emitted by the "
"assembler. The list must be terminated by the *.end_amd_kernel_code_t* "
"directive. For any amd_kernel_code_t values that are unspecified a default "
"value will be used. The default value for all keys is 0, with the following "
"exceptions:"
msgstr ""

#: ../../../AMDGPUUsage.rst:9083
msgid "*amd_code_version_major* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:9084
msgid "*amd_kernel_code_version_minor* defaults to 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:9085
msgid "*amd_machine_kind* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:9086
msgid ""
"*amd_machine_version_major*, *machine_version_minor*, and "
"*amd_machine_version_stepping* are derived from the value of the -mcpu "
"option that is passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:9089
msgid "*kernel_code_entry_byte_offset* defaults to 256."
msgstr ""

#: ../../../AMDGPUUsage.rst:9090
msgid ""
"*wavefront_size* defaults 6 for all targets before GFX10. For GFX10 onwards "
"defaults to 6 if target feature ``wavefrontsize64`` is enabled, otherwise 5. "
"Note that wavefront size is specified as a power of two, so a value of **n** "
"means a size of 2^ **n**."
msgstr ""

#: ../../../AMDGPUUsage.rst:9094
msgid "*call_convention* defaults to -1."
msgstr ""

#: ../../../AMDGPUUsage.rst:9095
msgid ""
"*kernarg_segment_alignment*, *group_segment_alignment*, and "
"*private_segment_alignment* default to 4. Note that alignments are specified "
"as a power of 2, so a value of **n** means an alignment of 2^ **n**."
msgstr ""

#: ../../../AMDGPUUsage.rst:9098
msgid ""
"*enable_wgp_mode* defaults to 1 if target feature ``cumode`` is disabled for "
"GFX10 onwards."
msgstr ""

#: ../../../AMDGPUUsage.rst:9100
msgid "*enable_mem_ordered* defaults to 1 for GFX10 onwards."
msgstr ""

#: ../../../AMDGPUUsage.rst:9102
msgid ""
"The *.amd_kernel_code_t* directive must be placed immediately after the "
"function label and before any instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:9105
msgid ""
"For a full list of amd_kernel_code_t keys, refer to AMDGPU ABI document, "
"comments in lib/Target/AMDGPU/AmdKernelCodeT.h and test/CodeGen/AMDGPU/hsa.s."
msgstr ""

#: ../../../AMDGPUUsage.rst:9111
msgid "Code Object V2 Example Source Code"
msgstr ""

#: ../../../AMDGPUUsage.rst:9114
msgid ""
"Code Object V2 is not the default code object version emitted by this "
"version of LLVM."
msgstr ""

#: ../../../AMDGPUUsage.rst:9117 ../../../AMDGPUUsage.rst:9385
msgid ""
"Here is an example of a minimal assembly source file, defining one HSA "
"kernel:"
msgstr ""

#: ../../../AMDGPUUsage.rst:9156
msgid "Code Object V3 to V4 Predefined Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:9162
msgid ".amdgcn.gfx_generation_number"
msgstr ""

#: ../../../AMDGPUUsage.rst:9170
msgid ".amdgcn.gfx_generation_minor"
msgstr ""

#: ../../../AMDGPUUsage.rst:9178
msgid ".amdgcn.gfx_generation_stepping"
msgstr ""

#: ../../../AMDGPUUsage.rst:9188
msgid ".amdgcn.next_free_vgpr"
msgstr ""

#: ../../../AMDGPUUsage.rst:9190
msgid ""
"Set to zero before assembly begins. At each instruction, if the current "
"value of this symbol is less than or equal to the maximum VGPR number "
"explicitly referenced within that instruction then the symbol value is "
"updated to equal that VGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:9195
msgid ""
"May be used to set the `.amdhsa_next_free_vgpr` directive in :ref:`amdhsa-"
"kernel-directives-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9198 ../../../AMDGPUUsage.rst:9213
msgid ""
"May be set at any time, e.g. manually set to zero at the start of each "
"kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:9203
msgid ".amdgcn.next_free_sgpr"
msgstr ""

#: ../../../AMDGPUUsage.rst:9205
msgid ""
"Set to zero before assembly begins. At each instruction, if the current "
"value of this symbol is less than or equal the maximum SGPR number "
"explicitly referenced within that instruction then the symbol value is "
"updated to equal that SGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:9210
msgid ""
"May be used to set the `.amdhsa_next_free_spgr` directive in :ref:`amdhsa-"
"kernel-directives-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9218
msgid "Code Object V3 to V4 Directives"
msgstr ""

#: ../../../AMDGPUUsage.rst:9220
msgid ""
"Directives which begin with ``.amdgcn`` are valid for all ``amdgcn`` "
"architecture processors, and are not OS-specific. Directives which begin "
"with ``.amdhsa`` are specific to ``amdgcn`` architecture processors when the "
"``amdhsa`` OS is specified. See :ref:`amdgpu-target-triples` and :ref:"
"`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9229
msgid ".amdgcn_target <target-triple> \"-\" <target-id>"
msgstr ""

#: ../../../AMDGPUUsage.rst:9231
msgid ""
"Optional directive which declares the ``<target-triple>-<target-id>`` "
"supported by the containing assembler source file. Used by the assembler to "
"validate command-line options such as ``-triple``, ``-mcpu``, and ``--"
"offload-arch=<target-id>``. A non-canonical target ID is allowed. See :ref:"
"`amdgpu-target-triples` and :ref:`amdgpu-target-id`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9239
msgid ""
"The target ID syntax used for code object V2 to V3 for this directive "
"differs from that used elsewhere. See :ref:`amdgpu-target-id-v2-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9243
msgid ".amdhsa_kernel <name>"
msgstr ""

#: ../../../AMDGPUUsage.rst:9245
msgid ""
"Creates a correctly aligned AMDHSA kernel descriptor and a symbol, ``<name>."
"kd``, in the current location of the current section. Only valid when the OS "
"is ``amdhsa``. ``<name>`` must be a symbol that labels the first instruction "
"to execute, and does not need to be previously defined."
msgstr ""

#: ../../../AMDGPUUsage.rst:9250
msgid ""
"Marks the beginning of a list of directives used to generate the bytes of a "
"kernel descriptor, as described in :ref:`amdgpu-amdhsa-kernel-descriptor`. "
"Directives which may appear in this list are described in :ref:`amdhsa-"
"kernel-directives-table`. Directives may appear in any order, must be valid "
"for the target being assembled for, and cannot be repeated. Directives "
"support the range of values specified by the field they reference in :ref:"
"`amdgpu-amdhsa-kernel-descriptor`. If a directive is not specified, it is "
"assumed to have its default value, unless it is marked as \"Required\", in "
"which case it is an error to omit the directive. This list of directives is "
"terminated by an ``.end_amdhsa_kernel`` directive."
msgstr ""

#: ../../../AMDGPUUsage.rst:9261
msgid "AMDHSA Kernel Assembler Directives"
msgstr ""

#: ../../../AMDGPUUsage.rst:9265
msgid "Directive"
msgstr ""

#: ../../../AMDGPUUsage.rst:9265
msgid "Default"
msgstr ""

#: ../../../AMDGPUUsage.rst:9265
msgid "Supported On"
msgstr ""

#: ../../../AMDGPUUsage.rst:9267
msgid "``.amdhsa_group_segment_fixed_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9267 ../../../AMDGPUUsage.rst:9269
#: ../../../AMDGPUUsage.rst:9271 ../../../AMDGPUUsage.rst:9273
#: ../../../AMDGPUUsage.rst:9275 ../../../AMDGPUUsage.rst:9277
#: ../../../AMDGPUUsage.rst:9279 ../../../AMDGPUUsage.rst:9281
#: ../../../AMDGPUUsage.rst:9283 ../../../AMDGPUUsage.rst:9285
#: ../../../AMDGPUUsage.rst:9291 ../../../AMDGPUUsage.rst:9293
#: ../../../AMDGPUUsage.rst:9295 ../../../AMDGPUUsage.rst:9297
#: ../../../AMDGPUUsage.rst:9299 ../../../AMDGPUUsage.rst:9301
#: ../../../AMDGPUUsage.rst:9305 ../../../AMDGPUUsage.rst:9308
#: ../../../AMDGPUUsage.rst:9311 ../../../AMDGPUUsage.rst:9322
#: ../../../AMDGPUUsage.rst:9326 ../../../AMDGPUUsage.rst:9330
#: ../../../AMDGPUUsage.rst:9334 ../../../AMDGPUUsage.rst:9338
#: ../../../AMDGPUUsage.rst:9340 ../../../AMDGPUUsage.rst:9352
#: ../../../AMDGPUUsage.rst:9354 ../../../AMDGPUUsage.rst:9356
#: ../../../AMDGPUUsage.rst:9358 ../../../AMDGPUUsage.rst:9360
#: ../../../AMDGPUUsage.rst:9362 ../../../AMDGPUUsage.rst:9364
msgid "GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:9267
msgid ""
"Controls GROUP_SEGMENT_FIXED_SIZE in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9269
msgid "``.amdhsa_private_segment_fixed_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9269
msgid ""
"Controls PRIVATE_SEGMENT_FIXED_SIZE in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9271
msgid "``.amdhsa_kernarg_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9271
msgid ""
"Controls KERNARG_SIZE in :ref:`amdgpu-amdhsa-kernel-descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9273
msgid "``.amdhsa_user_sgpr_private_segment_buffer``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9273
msgid ""
"Controls ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9275
msgid "``.amdhsa_user_sgpr_dispatch_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9275
msgid ""
"Controls ENABLE_SGPR_DISPATCH_PTR in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9277
msgid "``.amdhsa_user_sgpr_queue_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9277
msgid ""
"Controls ENABLE_SGPR_QUEUE_PTR in :ref:`amdgpu-amdhsa-kernel-descriptor-v3-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9279
msgid "``.amdhsa_user_sgpr_kernarg_segment_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9279
msgid ""
"Controls ENABLE_SGPR_KERNARG_SEGMENT_PTR in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9281
msgid "``.amdhsa_user_sgpr_dispatch_id``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9281
msgid ""
"Controls ENABLE_SGPR_DISPATCH_ID in :ref:`amdgpu-amdhsa-kernel-descriptor-v3-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9283
msgid "``.amdhsa_user_sgpr_flat_scratch_init``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9283
msgid ""
"Controls ENABLE_SGPR_FLAT_SCRATCH_INIT in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9285
msgid "``.amdhsa_user_sgpr_private_segment_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9285
msgid ""
"Controls ENABLE_SGPR_PRIVATE_SEGMENT_SIZE in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9287
msgid "``.amdhsa_wavefront_size32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9287
msgid "Target Feature Specific (wavefrontsize64)"
msgstr ""

#: ../../../AMDGPUUsage.rst:9287
msgid ""
"Controls ENABLE_WAVEFRONT_SIZE32 in :ref:`amdgpu-amdhsa-kernel-descriptor-v3-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9291
msgid "``.amdhsa_system_sgpr_private_segment_wavefront_offset``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9291
msgid ""
"Controls ENABLE_PRIVATE_SEGMENT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9293
msgid "``.amdhsa_system_sgpr_workgroup_id_x``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9293
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_ID_X in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9295
msgid "``.amdhsa_system_sgpr_workgroup_id_y``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9295
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_ID_Y in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9297
msgid "``.amdhsa_system_sgpr_workgroup_id_z``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9297
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_ID_Z in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9299
msgid "``.amdhsa_system_sgpr_workgroup_info``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9299
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_INFO in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9301
msgid "``.amdhsa_system_vgpr_workitem_id``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9301
msgid ""
"Controls ENABLE_VGPR_WORKITEM_ID in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-system-"
"vgpr-work-item-id-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9305
msgid "``.amdhsa_next_free_vgpr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9305
msgid ""
"Maximum VGPR number explicitly referenced, plus one. Used to calculate "
"GRANULATED_WORKITEM_VGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9308
msgid "``.amdhsa_next_free_sgpr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9308
msgid ""
"Maximum SGPR number explicitly referenced, plus one. Used to calculate "
"GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9311
msgid "``.amdhsa_reserve_vcc``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9311
msgid ""
"Whether the kernel may use the special VCC SGPR. Used to calculate "
"GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9314
msgid "``.amdhsa_reserve_flat_scratch``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9314
msgid "GFX7-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:9314
msgid ""
"Whether the kernel may use flat instructions to access scratch memory. Used "
"to calculate GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc1-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9318
msgid "``.amdhsa_reserve_xnack_mask``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9318
msgid "Target Feature Specific (xnack)"
msgstr ""

#: ../../../AMDGPUUsage.rst:9318
msgid "GFX8-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:9318
msgid ""
"Whether the kernel may trigger XNACK replay. Used to calculate "
"GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9322
msgid "``.amdhsa_float_round_mode_32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9322
msgid ""
"Controls FLOAT_ROUND_MODE_32 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-floating-"
"point-rounding-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9326
msgid "``.amdhsa_float_round_mode_16_64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9326
msgid ""
"Controls FLOAT_ROUND_MODE_16_64 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-rounding-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9330
msgid "``.amdhsa_float_denorm_mode_32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9330
msgid ""
"Controls FLOAT_DENORM_MODE_32 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-floating-"
"point-denorm-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9334
msgid "``.amdhsa_float_denorm_mode_16_64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9334
msgid ""
"Controls FLOAT_DENORM_MODE_16_64 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-denorm-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9338
msgid "``.amdhsa_dx10_clamp``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9338
msgid ""
"Controls ENABLE_DX10_CLAMP in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9340
msgid "``.amdhsa_ieee_mode``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9340
msgid ""
"Controls ENABLE_IEEE_MODE in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9342
msgid "``.amdhsa_fp16_overflow``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9342
msgid ""
"Controls FP16_OVFL in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9344
msgid "``.amdhsa_workgroup_processor_mode``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9344
msgid "Target Feature Specific (cumode)"
msgstr ""

#: ../../../AMDGPUUsage.rst:9344
msgid ""
"Controls ENABLE_WGP_MODE in :ref:`amdgpu-amdhsa-kernel-descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9348
msgid "``.amdhsa_memory_ordered``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9348
msgid ""
"Controls MEM_ORDERED in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9350
msgid "``.amdhsa_forward_progress``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9350
msgid ""
"Controls FWD_PROGRESS in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9352
msgid "``.amdhsa_exception_fp_ieee_invalid_op``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9352
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_INVALID_OPERATION in :ref:`amdgpu-"
"amdhsa-compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9354
msgid "``.amdhsa_exception_fp_denorm_src``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9354
msgid ""
"Controls ENABLE_EXCEPTION_FP_DENORMAL_SOURCE in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9356
msgid "``.amdhsa_exception_fp_ieee_div_zero``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9356
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_DIVISION_BY_ZERO in :ref:`amdgpu-"
"amdhsa-compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9358
msgid "``.amdhsa_exception_fp_ieee_overflow``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9358
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_OVERFLOW in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9360
msgid "``.amdhsa_exception_fp_ieee_underflow``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9360
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_UNDERFLOW in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9362
msgid "``.amdhsa_exception_fp_ieee_inexact``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9362
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_INEXACT in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9364
msgid "``.amdhsa_exception_int_div_zero``"
msgstr ""

#: ../../../AMDGPUUsage.rst:9364
msgid ""
"Controls ENABLE_EXCEPTION_INT_DIVIDE_BY_ZERO in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9369
msgid ".amdgpu_metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:9371
msgid ""
"Optional directive which declares the contents of the ``NT_AMDGPU_METADATA`` "
"note record (see :ref:`amdgpu-elf-note-records-table-v3-v4`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:9374
msgid ""
"The contents must be in the [YAML]_ markup format, with the same structure "
"and semantics described in :ref:`amdgpu-amdhsa-code-object-metadata-v3` or :"
"ref:`amdgpu-amdhsa-code-object-metadata-v4`."
msgstr ""

#: ../../../AMDGPUUsage.rst:9378
msgid "This directive is terminated by an ``.end_amdgpu_metadata`` directive."
msgstr ""

#: ../../../AMDGPUUsage.rst:9383
msgid "Code Object V3 to V4 Example Source Code"
msgstr ""

#: ../../../AMDGPUUsage.rst:9434
msgid ""
"If an assembly source file contains multiple kernels and/or functions, the :"
"ref:`amdgpu-amdhsa-assembler-symbol-next_free_vgpr` and :ref:`amdgpu-amdhsa-"
"assembler-symbol-next_free_sgpr` symbols may be reset using the ``.set "
"<symbol>, <expression>`` directive. For example, in the case of two kernels, "
"where ``function1`` is only called from ``kernel1`` it is sufficient to "
"group the function with the kernel that calls it and reset the symbols "
"between the two connected components:"
msgstr ""

#: ../../../AMDGPUUsage.rst:9504
msgid ""
"These symbols cannot identify connected components in order to automatically "
"track the usage for each kernel. However, in some cases careful organization "
"of the kernels and functions in the source file means there is minimal "
"additional effort required to accurately calculate GPR usage."
msgstr ""

#: ../../../AMDGPUUsage.rst:9510
msgid "Additional Documentation"
msgstr ""

#: ../../../AMDGPUUsage.rst:9512
msgid ""
"`AMD Southern Islands Series ISA <http://developer.amd.com/wordpress/"
"media/2012/12/AMD_Southern_Islands_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9513
msgid ""
"`AMD Sea Islands Series ISA <http://developer.amd.com/wordpress/"
"media/2013/07/AMD_Sea_Islands_Instruction_Set_Architecture.pdf>`_"
msgstr ""

#: ../../../AMDGPUUsage.rst:9514
msgid ""
"`AMD GCN3 Instruction Set Architecture <http://amd-dev.wpengine.netdna-cdn."
"com/wordpress/media/2013/12/AMD_GCN3_Instruction_Set_Architecture_rev1.1."
"pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9515
msgid ""
"`AMD \"Vega\" Instruction Set Architecture <http://developer.amd.com/"
"wordpress/media/2013/12/Vega_Shader_ISA_28July2017.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9516
msgid ""
"`AMD \"RDNA 1.0\" Instruction Set Architecture <https://gpuopen.com/wp-"
"content/uploads/2019/08/RDNA_Shader_ISA_5August2019.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9517
msgid ""
"`AMD \"RDNA 2\" Instruction Set Architecture <https://developer.amd.com/wp-"
"content/resources/RDNA2_Shader_ISA_November2020.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9518
msgid ""
"`AMD R6xx shader ISA <http://developer.amd.com/wordpress/media/2012/10/"
"R600_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9519
msgid ""
"`AMD R7xx shader ISA <http://developer.amd.com/wordpress/media/2012/10/R700-"
"Family_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9520
msgid ""
"`AMD Evergreen shader ISA <http://developer.amd.com/wordpress/media/2012/10/"
"AMD_Evergreen-Family_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9521
msgid ""
"`AMD Cayman/Trinity shader ISA <http://developer.amd.com/wordpress/"
"media/2012/10/AMD_HD_6900_Series_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9522
msgid "`AMD ROCmâ„¢ Platform <https://rocmdocs.amd.com/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9523
msgid "`AMD ROCmâ„¢ github <http://github.com/RadeonOpenCompute>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9524
msgid "`AMD ROCm Release Notes <https://github.com/RadeonOpenCompute/ROCm>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9525
msgid ""
"`Attributes in Clang <https://clang.llvm.org/docs/AttributeReference.html>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9526
msgid "`DWARF Debugging Information Format <http://dwarfstd.org/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9527
msgid ""
"`Executable and Linkable Format (ELF) <http://www.sco.com/developers/gabi/"
">`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9528
msgid ""
"`Heterogeneous-race-free Memory Models <http://benedictgaster.org/wp-content/"
"uploads/2014/01/asplos269-FINAL.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9529
msgid ""
"`Heterogeneous System Architecture (HSA) Foundation <http://www."
"hsafoundation.com/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9530
msgid "`Message Pack <http://www.msgpack.org/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9531
msgid ""
"`The OpenCL Specification Version 2.0 <http://www.khronos.org/registry/cl/"
"specs/opencl-2.0.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9532
msgid "`Semantic Versioning <https://semver.org/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:9533
msgid ""
"`YAML Ain't Markup Language (YAMLâ„¢) Version 1.2 <http://www.yaml.org/"
"spec/1.2/spec.html>`__"
msgstr ""
