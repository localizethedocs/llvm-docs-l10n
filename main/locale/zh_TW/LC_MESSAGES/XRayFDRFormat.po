# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM main\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../XRayFDRFormat.rst:3
msgid "XRay Flight Data Recorder Trace Format"
msgstr ""

#: ../../../XRayFDRFormat.rst:0
msgid "Version"
msgstr ""

#: ../../../XRayFDRFormat.rst:5
msgid "1 as of 2017-07-20"
msgstr ""

#: ../../../XRayFDRFormat.rst:12
msgid "Introduction"
msgstr ""

#: ../../../XRayFDRFormat.rst:14
msgid ""
"When gathering XRay traces in Flight Data Recorder mode, each thread of an "
"application will claim buffers to fill with trace data, which at some point "
"is finalized and flushed."
msgstr ""

#: ../../../XRayFDRFormat.rst:18
msgid ""
"A goal of the profiler is to minimize overhead, the flushed data directly "
"corresponds to the buffer."
msgstr ""

#: ../../../XRayFDRFormat.rst:21
msgid "This document describes the format of a trace file."
msgstr ""

#: ../../../XRayFDRFormat.rst:25
msgid "General"
msgstr ""

#: ../../../XRayFDRFormat.rst:27
msgid ""
"Each trace file corresponds to a sequence of events in a particular thread."
msgstr ""

#: ../../../XRayFDRFormat.rst:29
msgid ""
"The file has a header followed by a sequence of discriminated record types."
msgstr ""

#: ../../../XRayFDRFormat.rst:31
msgid ""
"The endianness of byte fields matches the endianness of the platform which "
"produced the trace file."
msgstr ""

#: ../../../XRayFDRFormat.rst:36
msgid "Header Section"
msgstr ""

#: ../../../XRayFDRFormat.rst:38
msgid "A trace file begins with a 32-byte header."
msgstr ""

#: ../../../XRayFDRFormat.rst:41 ../../../XRayFDRFormat.rst:67
#: ../../../XRayFDRFormat.rst:126 ../../../XRayFDRFormat.rst:193
#: ../../../XRayFDRFormat.rst:235 ../../../XRayFDRFormat.rst:252
#: ../../../XRayFDRFormat.rst:278 ../../../XRayFDRFormat.rst:301
#: ../../../XRayFDRFormat.rst:321 ../../../XRayFDRFormat.rst:343
msgid "Field"
msgstr ""

#: ../../../XRayFDRFormat.rst:41 ../../../XRayFDRFormat.rst:235
#: ../../../XRayFDRFormat.rst:252 ../../../XRayFDRFormat.rst:278
#: ../../../XRayFDRFormat.rst:301 ../../../XRayFDRFormat.rst:321
#: ../../../XRayFDRFormat.rst:343
msgid "Size (bytes)"
msgstr ""

#: ../../../XRayFDRFormat.rst:41 ../../../XRayFDRFormat.rst:67
#: ../../../XRayFDRFormat.rst:126 ../../../XRayFDRFormat.rst:162
#: ../../../XRayFDRFormat.rst:193 ../../../XRayFDRFormat.rst:235
#: ../../../XRayFDRFormat.rst:252 ../../../XRayFDRFormat.rst:278
#: ../../../XRayFDRFormat.rst:301 ../../../XRayFDRFormat.rst:321
#: ../../../XRayFDRFormat.rst:343
msgid "Description"
msgstr ""

#: ../../../XRayFDRFormat.rst:43
msgid "version"
msgstr ""

#: ../../../XRayFDRFormat.rst:43 ../../../XRayFDRFormat.rst:47
#: ../../../XRayFDRFormat.rst:168 ../../../XRayFDRFormat.rst:237
#: ../../../XRayFDRFormat.rst:280
msgid "``2``"
msgstr ""

#: ../../../XRayFDRFormat.rst:43
msgid ""
"Anticipates versioned  readers. This document describes the format when "
"version == 1"
msgstr ""

#: ../../../XRayFDRFormat.rst:47
msgid "type"
msgstr ""

#: ../../../XRayFDRFormat.rst:47
msgid ""
"An enumeration encoding the type of trace. Flight Data Recorder mode traces "
"have type == 1"
msgstr ""

#: ../../../XRayFDRFormat.rst:51
msgid "bitfield"
msgstr ""

#: ../../../XRayFDRFormat.rst:51 ../../../XRayFDRFormat.rst:259
#: ../../../XRayFDRFormat.rst:345
msgid "``4``"
msgstr ""

#: ../../../XRayFDRFormat.rst:51
msgid ""
"Holds parameters that are not aligned to bytes. Further described below."
msgstr ""

#: ../../../XRayFDRFormat.rst:54
msgid "cycle_frequency"
msgstr ""

#: ../../../XRayFDRFormat.rst:54 ../../../XRayFDRFormat.rst:58
#: ../../../XRayFDRFormat.rst:61 ../../../XRayFDRFormat.rst:254
#: ../../../XRayFDRFormat.rst:282 ../../../XRayFDRFormat.rst:303
#: ../../../XRayFDRFormat.rst:323 ../../../XRayFDRFormat.rst:347
msgid "``8``"
msgstr ""

#: ../../../XRayFDRFormat.rst:54
msgid ""
"The frequency in hertz of the CPU oscillator used to measure duration of "
"events in ticks."
msgstr ""

#: ../../../XRayFDRFormat.rst:58
msgid "buffer_size"
msgstr ""

#: ../../../XRayFDRFormat.rst:58
msgid ""
"The size in bytes of the data portion of the trace following the header."
msgstr ""

#: ../../../XRayFDRFormat.rst:61 ../../../XRayFDRFormat.rst:79
#: ../../../XRayFDRFormat.rst:239 ../../../XRayFDRFormat.rst:261
#: ../../../XRayFDRFormat.rst:284 ../../../XRayFDRFormat.rst:305
#: ../../../XRayFDRFormat.rst:325 ../../../XRayFDRFormat.rst:349
msgid "reserved"
msgstr ""

#: ../../../XRayFDRFormat.rst:61
msgid "Reserved for future use."
msgstr ""

#: ../../../XRayFDRFormat.rst:64
msgid ""
"The bitfield parameter of the file header is composed of the following "
"fields."
msgstr ""

#: ../../../XRayFDRFormat.rst:67 ../../../XRayFDRFormat.rst:126
msgid "Size (bits)"
msgstr ""

#: ../../../XRayFDRFormat.rst:69
msgid "constant_tsc"
msgstr ""

#: ../../../XRayFDRFormat.rst:69 ../../../XRayFDRFormat.rst:75
#: ../../../XRayFDRFormat.rst:128 ../../../XRayFDRFormat.rst:166
msgid "``1``"
msgstr ""

#: ../../../XRayFDRFormat.rst:69
msgid ""
"Whether the platform's timestamp counter used to record ticks between events "
"ticks at a constant frequency despite CPU frequency changes. 0 == non-"
"constant. 1 == constant."
msgstr ""

#: ../../../XRayFDRFormat.rst:75
msgid "nonstop_tsc"
msgstr ""

#: ../../../XRayFDRFormat.rst:75
msgid ""
"Whether the tsc continues to count despite whether the CPU is in a low power "
"state. 0 == stop. 1 == non-stop."
msgstr ""

#: ../../../XRayFDRFormat.rst:79
msgid "``30``"
msgstr ""

#: ../../../XRayFDRFormat.rst:79
msgid "Not meaningful."
msgstr ""

#: ../../../XRayFDRFormat.rst:84
msgid "Data Section"
msgstr ""

#: ../../../XRayFDRFormat.rst:86
msgid ""
"Following the header in a trace is a data section with size matching the "
"buffer_size field in the header."
msgstr ""

#: ../../../XRayFDRFormat.rst:89
msgid "The data section is a stream of elements of different types."
msgstr ""

#: ../../../XRayFDRFormat.rst:91
msgid "There are a few categories of data in the sequence."
msgstr ""

#: ../../../XRayFDRFormat.rst:93
msgid ""
"``Function Records``: Function Records contain the timing of entry into and "
"exit from function execution. Function Records have 8 bytes each."
msgstr ""

#: ../../../XRayFDRFormat.rst:96
msgid ""
"``Metadata Records``: Metadata records serve many purposes. Mostly, they "
"capture information that may be too costly to record for each function, but "
"that is required to contextualize the fine-grained timings. They also are "
"used as markers for user-defined Event Data payloads. Metadata records have "
"16 bytes each."
msgstr ""

#: ../../../XRayFDRFormat.rst:102
msgid ""
"``Event Data``: Free form data may be associated with events that are traced "
"by the binary and encode data defined by a handler function. Event data is "
"always preceded with a marker record which indicates how large it is."
msgstr ""

#: ../../../XRayFDRFormat.rst:106
msgid ""
"``Function Arguments``: The arguments to some functions are included in the "
"trace. These are either pointer addresses or primitives that are read and "
"logged independently of their types in a high level language. To the tracer, "
"they are all numbers. Function Records that have attached arguments will "
"indicate their presence on the function entry record. We only support "
"logging contiguous function argument sequences starting with argument zero, "
"which will be the \"this\" pointer for member function invocations. For "
"example, we don't support logging the first and third argument."
msgstr ""

#: ../../../XRayFDRFormat.rst:115
msgid ""
"A reader of the memory format must maintain a state machine. The format "
"makes no attempt to pad for alignment, and it is not seekable."
msgstr ""

#: ../../../XRayFDRFormat.rst:120
msgid "Function Records"
msgstr ""

#: ../../../XRayFDRFormat.rst:122
msgid ""
"Function Records have an 8-byte layout. This layout encodes information to "
"reconstruct a call stack of instrumented function and their durations."
msgstr ""

#: ../../../XRayFDRFormat.rst:128 ../../../XRayFDRFormat.rst:195
msgid "discriminant"
msgstr ""

#: ../../../XRayFDRFormat.rst:128
msgid ""
"Indicates whether a reader should read a Function or Metadata record. Set to "
"``0`` for Function records."
msgstr ""

#: ../../../XRayFDRFormat.rst:132
msgid "action"
msgstr ""

#: ../../../XRayFDRFormat.rst:132 ../../../XRayFDRFormat.rst:171
#: ../../../XRayFDRFormat.rst:261 ../../../XRayFDRFormat.rst:349
msgid "``3``"
msgstr ""

#: ../../../XRayFDRFormat.rst:132
msgid ""
"Specifies whether the function is being entered, exited, or is a non-"
"standard entry or exit produced by optimizations."
msgstr ""

#: ../../../XRayFDRFormat.rst:136
msgid "function_id"
msgstr ""

#: ../../../XRayFDRFormat.rst:136
msgid "``28``"
msgstr ""

#: ../../../XRayFDRFormat.rst:136
msgid ""
"A numeric ID for the function. Resolved to a name via the xray "
"instrumentation map. The instrumentation map is built by xray at compile "
"time into an object file and pairs the function ids to addresses. It is used "
"for patching and as a lookup into the binary's symbols to obtain names."
msgstr ""

#: ../../../XRayFDRFormat.rst:144
msgid "tsc_delta"
msgstr ""

#: ../../../XRayFDRFormat.rst:144
msgid "``32``"
msgstr ""

#: ../../../XRayFDRFormat.rst:144
msgid ""
"The number of ticks of the timestamp counter since a previous record "
"recorded a delta or other TSC resetting event."
msgstr ""

#: ../../../XRayFDRFormat.rst:149
msgid ""
"On little-endian machines, the bitfields are ordered from least significant "
"bit bit to most significant bit. A reader can read an 8 bit value and apply "
"the mask ``0x01`` for the discriminant. Similarly, they can read 32 bits and "
"unsigned shift right by ``0x04`` to obtain the function_id field."
msgstr ""

#: ../../../XRayFDRFormat.rst:154
msgid ""
"On big-endian machine, the bitfields are written in order from most "
"significant bit to least significant bit. A reader would read an 8 bit value "
"and unsigned shift right by 7 bits for the discriminant. The function_id "
"field could be obtained by reading a 32 bit value and applying the mask "
"``0x0FFFFFFF``."
msgstr ""

#: ../../../XRayFDRFormat.rst:159
msgid "Function action types are as follows."
msgstr ""

#: ../../../XRayFDRFormat.rst:162 ../../../XRayFDRFormat.rst:208
msgid "Type"
msgstr ""

#: ../../../XRayFDRFormat.rst:162 ../../../XRayFDRFormat.rst:208
msgid "Number"
msgstr ""

#: ../../../XRayFDRFormat.rst:164
msgid "Entry"
msgstr ""

#: ../../../XRayFDRFormat.rst:164
msgid "``0``"
msgstr ""

#: ../../../XRayFDRFormat.rst:164
msgid "Typical function entry."
msgstr ""

#: ../../../XRayFDRFormat.rst:166
msgid "Exit"
msgstr ""

#: ../../../XRayFDRFormat.rst:166
msgid "Typical function exit."
msgstr ""

#: ../../../XRayFDRFormat.rst:168
msgid "Tail_Exit"
msgstr ""

#: ../../../XRayFDRFormat.rst:168
msgid "An exit from a function due to tail call optimization."
msgstr ""

#: ../../../XRayFDRFormat.rst:171
msgid "Entry_Args"
msgstr ""

#: ../../../XRayFDRFormat.rst:171
msgid "A function entry that records arguments."
msgstr ""

#: ../../../XRayFDRFormat.rst:174
msgid ""
"Entry_Args records do not contain the arguments themselves. Instead, "
"metadata records for each of the logged args follow the function record in "
"the stream."
msgstr ""

#: ../../../XRayFDRFormat.rst:179
msgid "Metadata Records"
msgstr ""

#: ../../../XRayFDRFormat.rst:181
msgid ""
"Interspersed throughout the buffer are 16-byte Metadata records. For "
"typically instrumented binaries, they will be sparser than Function records, "
"and they provide a fuller picture of the binary execution state."
msgstr ""

#: ../../../XRayFDRFormat.rst:185
msgid ""
"Metadata record layout is partially record dependent, but they share a "
"common structure."
msgstr ""

#: ../../../XRayFDRFormat.rst:188
msgid ""
"The same bit field rules described for function records apply to the first "
"byte of MetadataRecords. Within this byte, little endian machines use lsb to "
"msb ordering and big endian machines use msb to lsb ordering."
msgstr ""

#: ../../../XRayFDRFormat.rst:193
msgid "Size"
msgstr ""

#: ../../../XRayFDRFormat.rst:195
msgid "``1 bit``"
msgstr ""

#: ../../../XRayFDRFormat.rst:195
msgid ""
"Indicates whether a reader should read a Function or Metadata record. Set to "
"``1`` for Metadata records."
msgstr ""

#: ../../../XRayFDRFormat.rst:199
msgid "record_kind"
msgstr ""

#: ../../../XRayFDRFormat.rst:199
msgid "``7 bits``"
msgstr ""

#: ../../../XRayFDRFormat.rst:199
msgid "The type of Metadata record."
msgstr ""

#: ../../../XRayFDRFormat.rst:201
msgid "data"
msgstr ""

#: ../../../XRayFDRFormat.rst:201
msgid "``15 bytes``"
msgstr ""

#: ../../../XRayFDRFormat.rst:201
msgid "A data field used differently for each record type."
msgstr ""

#: ../../../XRayFDRFormat.rst:205
msgid "Here is a table of the enumerated record kinds."
msgstr ""

#: ../../../XRayFDRFormat.rst:210
msgid "0"
msgstr ""

#: ../../../XRayFDRFormat.rst:210
msgid "NewBuffer"
msgstr ""

#: ../../../XRayFDRFormat.rst:212
msgid "1"
msgstr ""

#: ../../../XRayFDRFormat.rst:212
msgid "EndOfBuffer"
msgstr ""

#: ../../../XRayFDRFormat.rst:214
msgid "2"
msgstr ""

#: ../../../XRayFDRFormat.rst:214
msgid "NewCPUId"
msgstr ""

#: ../../../XRayFDRFormat.rst:216
msgid "3"
msgstr ""

#: ../../../XRayFDRFormat.rst:216
msgid "TSCWrap"
msgstr ""

#: ../../../XRayFDRFormat.rst:218
msgid "4"
msgstr ""

#: ../../../XRayFDRFormat.rst:218
msgid "WallTimeMarker"
msgstr ""

#: ../../../XRayFDRFormat.rst:220
msgid "5"
msgstr ""

#: ../../../XRayFDRFormat.rst:220
msgid "CustomEventMarker"
msgstr ""

#: ../../../XRayFDRFormat.rst:222
msgid "6"
msgstr ""

#: ../../../XRayFDRFormat.rst:222
msgid "CallArgument"
msgstr ""

#: ../../../XRayFDRFormat.rst:227
msgid "NewBuffer Records"
msgstr ""

#: ../../../XRayFDRFormat.rst:229
msgid ""
"Each buffer begins with a NewBuffer record immediately after the header. It "
"records the thread ID of the thread that the trace belongs to."
msgstr ""

#: ../../../XRayFDRFormat.rst:232 ../../../XRayFDRFormat.rst:249
#: ../../../XRayFDRFormat.rst:275 ../../../XRayFDRFormat.rst:298
msgid "Its data segment is as follows."
msgstr ""

#: ../../../XRayFDRFormat.rst:237
msgid "thread_Id"
msgstr ""

#: ../../../XRayFDRFormat.rst:237
msgid "Thread ID for buffer."
msgstr ""

#: ../../../XRayFDRFormat.rst:239
msgid "``13``"
msgstr ""

#: ../../../XRayFDRFormat.rst:239 ../../../XRayFDRFormat.rst:261
#: ../../../XRayFDRFormat.rst:284 ../../../XRayFDRFormat.rst:305
#: ../../../XRayFDRFormat.rst:325 ../../../XRayFDRFormat.rst:349
msgid "Unused."
msgstr ""

#: ../../../XRayFDRFormat.rst:244
msgid "WallClockTime Records"
msgstr ""

#: ../../../XRayFDRFormat.rst:246
msgid ""
"Following the NewBuffer record, each buffer records an absolute time as a "
"frame of reference for the durations recorded by timestamp counter deltas."
msgstr ""

#: ../../../XRayFDRFormat.rst:254
msgid "seconds"
msgstr ""

#: ../../../XRayFDRFormat.rst:254
msgid ""
"Seconds on absolute timescale. The starting point is unspecified and depends "
"on the implementation and platform configured by the tracer."
msgstr ""

#: ../../../XRayFDRFormat.rst:259
msgid "microseconds"
msgstr ""

#: ../../../XRayFDRFormat.rst:259
msgid "The microsecond component of the time."
msgstr ""

#: ../../../XRayFDRFormat.rst:266
msgid "NewCpuId Records"
msgstr ""

#: ../../../XRayFDRFormat.rst:268
msgid ""
"Each function entry invokes a routine to determine what CPU is executing. "
"Typically, this is done with readtscp, which reads the timestamp counter at "
"the same time."
msgstr ""

#: ../../../XRayFDRFormat.rst:272
msgid ""
"If the tracing detects that the execution has switched CPUs or if this is "
"the first instrumented entry point, the tracer will output a NewCpuId record."
msgstr ""

#: ../../../XRayFDRFormat.rst:280
msgid "cpu_id"
msgstr ""

#: ../../../XRayFDRFormat.rst:280
msgid "CPU Id."
msgstr ""

#: ../../../XRayFDRFormat.rst:282 ../../../XRayFDRFormat.rst:303
#: ../../../XRayFDRFormat.rst:347
msgid "absolute_tsc"
msgstr ""

#: ../../../XRayFDRFormat.rst:282
msgid "The absolute value of the timestamp counter."
msgstr ""

#: ../../../XRayFDRFormat.rst:284
msgid "``5``"
msgstr ""

#: ../../../XRayFDRFormat.rst:289
msgid "TSCWrap Records"
msgstr ""

#: ../../../XRayFDRFormat.rst:291
msgid ""
"Since each function record uses a 32 bit value to represent the number of "
"ticks of the timestamp counter since the last reference, it is possible for "
"this value to overflow, particularly for sparsely instrumented binaries."
msgstr ""

#: ../../../XRayFDRFormat.rst:295
msgid ""
"When this delta would not fit into a 32 bit representation, a reference "
"absolute timestamp counter record is written in the form of a TSCWrap record."
msgstr ""

#: ../../../XRayFDRFormat.rst:303
msgid "Timestamp counter value."
msgstr ""

#: ../../../XRayFDRFormat.rst:305 ../../../XRayFDRFormat.rst:325
msgid "``7``"
msgstr ""

#: ../../../XRayFDRFormat.rst:310
msgid "CallArgument Records"
msgstr ""

#: ../../../XRayFDRFormat.rst:312
msgid ""
"Immediately following an Entry_Args type function record, there may be one "
"or more CallArgument records that contain the traced function's parameter "
"values."
msgstr ""

#: ../../../XRayFDRFormat.rst:315
msgid ""
"The order of the CallArgument Record sequency corresponds one to one with "
"the order of the function parameters."
msgstr ""

#: ../../../XRayFDRFormat.rst:318
msgid "CallArgument data segment:"
msgstr ""

#: ../../../XRayFDRFormat.rst:323
msgid "argument"
msgstr ""

#: ../../../XRayFDRFormat.rst:323
msgid "Numeric argument (may be pointer address)."
msgstr ""

#: ../../../XRayFDRFormat.rst:330
msgid "CustomEventMarker Records"
msgstr ""

#: ../../../XRayFDRFormat.rst:332
msgid ""
"XRay provides the feature of logging custom events. This may be leveraged to "
"record tracing info for RPCs or similarly trace data that is application "
"specific."
msgstr ""

#: ../../../XRayFDRFormat.rst:336
msgid ""
"Custom Events themselves are an unstructured (application defined) segment "
"of memory with arbitrary size within the buffer. They are preceded by "
"CustomEventMarkers to indicate their presence and size."
msgstr ""

#: ../../../XRayFDRFormat.rst:340
msgid "CustomEventMarker data segment:"
msgstr ""

#: ../../../XRayFDRFormat.rst:345
msgid "event_size"
msgstr ""

#: ../../../XRayFDRFormat.rst:345
msgid "Size of preceded event."
msgstr ""

#: ../../../XRayFDRFormat.rst:347
msgid "A timestamp counter of the event."
msgstr ""

#: ../../../XRayFDRFormat.rst:354
msgid "EndOfBuffer Records"
msgstr ""

#: ../../../XRayFDRFormat.rst:356
msgid ""
"An EndOfBuffer record type indicates that there is no more trace data in "
"this buffer. The reader is expected to seek past the remaining buffer_size "
"expressed before the start of buffer and look for either another header or "
"EOF."
msgstr ""

#: ../../../XRayFDRFormat.rst:362
msgid "Format Grammar and Invariants"
msgstr ""

#: ../../../XRayFDRFormat.rst:364
msgid ""
"Not all sequences of Metadata records and Function records are valid data. A "
"sequence should be parsed as a state machine. The expectations for a valid "
"format can be expressed as a context free grammar."
msgstr ""

#: ../../../XRayFDRFormat.rst:368
msgid ""
"This is an attempt to explain the format with statements in EBNF format."
msgstr ""

#: ../../../XRayFDRFormat.rst:370
msgid "Format := Header ThreadBuffer* EOF"
msgstr ""

#: ../../../XRayFDRFormat.rst:372
msgid "ThreadBuffer := NewBuffer WallClockTime NewCPUId BodySequence* End"
msgstr ""

#: ../../../XRayFDRFormat.rst:374
msgid "BodySequence := NewCPUId | TSCWrap | Function | CustomEvent"
msgstr ""

#: ../../../XRayFDRFormat.rst:376
msgid "Function := (Function_Entry_Args CallArgument*) | Function_Other_Type"
msgstr ""

#: ../../../XRayFDRFormat.rst:378
msgid "CustomEvent := CustomEventMarker CustomEventUnstructuredMemory"
msgstr ""

#: ../../../XRayFDRFormat.rst:380
msgid "End := EndOfBuffer RemainingBufferSizeToSkip"
msgstr ""

#: ../../../XRayFDRFormat.rst:384
msgid "Function Record Order"
msgstr ""

#: ../../../XRayFDRFormat.rst:386
msgid ""
"There are a few clarifications that may help understand what is expected of "
"Function records."
msgstr ""

#: ../../../XRayFDRFormat.rst:389
msgid ""
"Functions with an Exit are expected to have a corresponding Entry or "
"Entry_Args function record precede them in the trace."
msgstr ""

#: ../../../XRayFDRFormat.rst:392
msgid ""
"Tail_Exit Function records record the Function ID of the function whose "
"return address the program counter will take. In other words, the final "
"function that would be popped off of the call stack if tail call "
"optimization was not used."
msgstr ""

#: ../../../XRayFDRFormat.rst:396
msgid ""
"Not all functions marked for instrumentation are necessarily in the trace. "
"The tracer uses heuristics to preserve the trace for non-trivial functions."
msgstr ""

#: ../../../XRayFDRFormat.rst:399
msgid ""
"Not every entry must have a traced Exit or Tail Exit. The buffer may run out "
"of space or the program may request for the tracer to finalize toreturn the "
"buffer before an instrumented function exits."
msgstr ""
