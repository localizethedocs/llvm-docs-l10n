# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM main\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../CommandGuide/llvm-offload-binary.rst:2
msgid "llvm-offload-binary - LLVM Offload Binary Packager"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:7
msgid "SYNOPSIS"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:9
msgid ":program:`llvm-offload-binary` [*options*] [*input files...*]"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:12
msgid "DESCRIPTION"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:14
msgid ""
":program:`llvm-offload-binary` is a utility for bundling multiple device "
"object files into a single binary container. The resulting binary can then "
"be embedded into the host section table to form a fat binary containing "
"offloading code for different targets. Conversely, it can also extract "
"previously bundled device images."
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:20
msgid ""
"The binary format begins with the magic bytes ``0x10FF10AD``, followed by a "
"version and size. Each binary contains its own header, allowing tools to "
"locate offloading sections even when merged by a linker. Each offload entry "
"includes metadata such as the device image kind, producer kind, and key-"
"value string metadata. Multiple offloading images are concatenated to form a "
"fat binary."
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:27
msgid "EXAMPLE"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:43
msgid "OPTIONS"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:47
msgid ""
"When extracting from an input binary, write all extracted images into a "
"static archive instead of separate files."
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:52
msgid ""
"Specify a set of arbitrary key-value arguments describing an image. Commonly "
"used optional keys include ``arch`` (e.g. ``sm_70`` for CUDA) and ``triple`` "
"(e.g. nvptx64-nvidia-cuda)."
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:58
msgid ""
"Write output to <file>. When bundling, this specifies the fat binary "
"filename. When extracting, this specifies the archive or output file "
"destination."
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:63
msgid ""
"Display available options. Use ``--help-hidden`` to show hidden options."
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:67
msgid ""
"Display a list of all options. Use ``--help-list-hidden`` to show hidden "
"ones."
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:71
msgid "Display the version of the :program:`llvm-offload-binary` executable."
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:75
msgid "Read command-line options from response file `<FILE>`."
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:78
msgid "BINARY FORMAT"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:80
msgid ""
"The binary format is marked by the magic bytes ``0x10FF10AD``, followed by a "
"version number. Each created binary contains its own header. This allows "
"tools to locate offloading sections even after linker operations such as "
"relocatable linking. Conceptually, this binary format is a serialization of "
"a string map and an image buffer."
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:86
msgid "Offloading Binary Header"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:90
#: ../../../CommandGuide/llvm-offload-binary.rst:109
#: ../../../CommandGuide/llvm-offload-binary.rst:133
msgid "Type"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:90
#: ../../../CommandGuide/llvm-offload-binary.rst:109
#: ../../../CommandGuide/llvm-offload-binary.rst:133
msgid "Identifier"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:90
#: ../../../CommandGuide/llvm-offload-binary.rst:109
#: ../../../CommandGuide/llvm-offload-binary.rst:133
#: ../../../CommandGuide/llvm-offload-binary.rst:150
#: ../../../CommandGuide/llvm-offload-binary.rst:169
msgid "Description"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:92
msgid "uint8_t"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:92
msgid "magic"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:92
msgid "The magic bytes for the binary format (0x10FF10AD)"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:94
#: ../../../CommandGuide/llvm-offload-binary.rst:115
msgid "uint32_t"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:94
msgid "version"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:94
msgid "Version of this format (currently version 1)"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:96
#: ../../../CommandGuide/llvm-offload-binary.rst:98
#: ../../../CommandGuide/llvm-offload-binary.rst:100
#: ../../../CommandGuide/llvm-offload-binary.rst:117
#: ../../../CommandGuide/llvm-offload-binary.rst:119
#: ../../../CommandGuide/llvm-offload-binary.rst:121
#: ../../../CommandGuide/llvm-offload-binary.rst:123
#: ../../../CommandGuide/llvm-offload-binary.rst:135
#: ../../../CommandGuide/llvm-offload-binary.rst:137
msgid "uint64_t"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:96
msgid "size"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:96
msgid "Size of this binary in bytes"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:98
msgid "entry offset"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:98
msgid "Absolute offset of the offload entries in bytes"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:100
msgid "entry size"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:100
msgid "Size of the offload entries in bytes"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:103
msgid ""
"Each offload entry describes a bundled image along with its associated "
"metadata."
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:105
msgid "Offloading Entry Table"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:111
#: ../../../CommandGuide/llvm-offload-binary.rst:113
msgid "uint16_t"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:111
msgid "image kind"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:111
msgid "The kind of the device image (e.g. bc, cubin)"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:113
msgid "offload kind"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:113
msgid "The producer of the image (e.g. openmp, cuda)"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:115
msgid "flags"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:115
msgid "Generic flags for the image"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:117
msgid "string offset"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:117
msgid "Absolute offset of the string metadata table"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:119
msgid "num strings"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:119
msgid "Number of string entries in the table"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:121
msgid "image offset"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:121
msgid "Absolute offset of the device image in bytes"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:123
msgid "image size"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:123
msgid "Size of the device image in bytes"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:126
msgid ""
"The entry table refers to both a string table and the raw device image "
"itself. The string table provides arbitrary key-value metadata."
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:129
msgid "Offloading String Entry"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:135
msgid "key offset"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:135
msgid "Absolute byte offset of the key in the string table"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:137
msgid "value offset"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:137
msgid "Absolute byte offset of the value in the string table"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:140
msgid ""
"The string table is a collection of null-terminated strings stored in the "
"image. Offsets allow string entries to be interpreted as key-value pairs, "
"enabling flexible metadata such as architecture or target triple."
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:144
msgid "The enumerated values for ``image kind`` and ``offload kind`` are:"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:146
msgid "Image Kind"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:150
#: ../../../CommandGuide/llvm-offload-binary.rst:169
msgid "Name"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:150
#: ../../../CommandGuide/llvm-offload-binary.rst:169
msgid "Value"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:152
msgid "IMG_None"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:152
#: ../../../CommandGuide/llvm-offload-binary.rst:171
msgid "0x00"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:152
msgid "No image information provided"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:154
msgid "IMG_Object"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:154
#: ../../../CommandGuide/llvm-offload-binary.rst:173
msgid "0x01"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:154
msgid "The image is a generic object file"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:156
msgid "IMG_Bitcode"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:156
#: ../../../CommandGuide/llvm-offload-binary.rst:175
msgid "0x02"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:156
msgid "The image is an LLVM-IR bitcode file"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:158
msgid "IMG_Cubin"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:158
#: ../../../CommandGuide/llvm-offload-binary.rst:177
msgid "0x03"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:158
msgid "The image is a CUDA object file"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:160
msgid "IMG_Fatbinary"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:160
#: ../../../CommandGuide/llvm-offload-binary.rst:179
msgid "0x04"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:160
msgid "The image is a CUDA fatbinary file"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:162
msgid "IMG_PTX"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:162
msgid "0x05"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:162
msgid "The image is a CUDA PTX file"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:165
msgid "Offload Kind"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:171
msgid "OFK_None"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:171
msgid "No offloading information provided"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:173
msgid "OFK_OpenMP"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:173
msgid "The producer was OpenMP offloading"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:175
msgid "OFK_CUDA"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:175
msgid "The producer was CUDA"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:177
msgid "OFK_HIP"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:177
msgid "The producer was HIP"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:179
msgid "OFK_SYCL"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:179
msgid "The producer was SYCL"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:183
msgid "SEE ALSO"
msgstr ""

#: ../../../CommandGuide/llvm-offload-binary.rst:185
msgid ":manpage:`clang(1)`, :manpage:`llvm-objdump(1)`"
msgstr ""
