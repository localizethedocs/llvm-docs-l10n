# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr_FR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../AMDGPUUsage.rst:3
msgid "User Guide for AMDGPU Backend"
msgstr ""

#: ../../../AMDGPUUsage.rst:9
msgid "Introduction"
msgstr ""

#: ../../../AMDGPUUsage.rst:11
msgid ""
"The AMDGPU backend provides ISA code generation for AMD GPUs, starting with "
"the R600 family up until the current GCN families. It lives in the ``lib/"
"Target/AMDGPU`` directory."
msgstr ""

#: ../../../AMDGPUUsage.rst:16
msgid "LLVM"
msgstr ""

#: ../../../AMDGPUUsage.rst:21
msgid "Target Triples"
msgstr ""

#: ../../../AMDGPUUsage.rst:23
msgid ""
"Use the ``clang -target <Architecture>-<Vendor>-<OS>-<Environment>`` option "
"to specify the target triple:"
msgstr ""

#: ../../../AMDGPUUsage.rst:26
msgid "AMDGPU Target Triples"
msgstr ""

#: ../../../AMDGPUUsage.rst:30
msgid "Architecture"
msgstr ""

#: ../../../AMDGPUUsage.rst:30
msgid "Vendor"
msgstr ""

#: ../../../AMDGPUUsage.rst:30
msgid "OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:30
msgid "Environment"
msgstr ""

#: ../../../AMDGPUUsage.rst:32 ../../../AMDGPUUsage.rst:89
#: ../../../AMDGPUUsage.rst:90 ../../../AMDGPUUsage.rst:91
#: ../../../AMDGPUUsage.rst:92 ../../../AMDGPUUsage.rst:95
#: ../../../AMDGPUUsage.rst:96 ../../../AMDGPUUsage.rst:97
#: ../../../AMDGPUUsage.rst:100 ../../../AMDGPUUsage.rst:101
#: ../../../AMDGPUUsage.rst:102 ../../../AMDGPUUsage.rst:103
#: ../../../AMDGPUUsage.rst:104 ../../../AMDGPUUsage.rst:107
#: ../../../AMDGPUUsage.rst:108 ../../../AMDGPUUsage.rst:109
#: ../../../AMDGPUUsage.rst:110
msgid "r600"
msgstr ""

#: ../../../AMDGPUUsage.rst:32 ../../../AMDGPUUsage.rst:33
#: ../../../AMDGPUUsage.rst:34 ../../../AMDGPUUsage.rst:35
#: ../../../AMDGPUUsage.rst:36 ../../../AMDGPUUsage.rst:37
#: ../../../AMDGPUUsage.rst:38
msgid "amd"
msgstr ""

#: ../../../AMDGPUUsage.rst:32 ../../../AMDGPUUsage.rst:33
#: ../../../AMDGPUUsage.rst:34
msgid "<empty>"
msgstr ""

#: ../../../AMDGPUUsage.rst:33 ../../../AMDGPUUsage.rst:34
#: ../../../AMDGPUUsage.rst:35 ../../../AMDGPUUsage.rst:36
#: ../../../AMDGPUUsage.rst:37 ../../../AMDGPUUsage.rst:38
#: ../../../AMDGPUUsage.rst:113 ../../../AMDGPUUsage.rst:115
#: ../../../AMDGPUUsage.rst:121 ../../../AMDGPUUsage.rst:125
#: ../../../AMDGPUUsage.rst:135 ../../../AMDGPUUsage.rst:143
#: ../../../AMDGPUUsage.rst:154 ../../../AMDGPUUsage.rst:162
#: ../../../AMDGPUUsage.rst:168 ../../../AMDGPUUsage.rst:171
#: ../../../AMDGPUUsage.rst:177 ../../../AMDGPUUsage.rst:180
#: ../../../AMDGPUUsage.rst:181 ../../../AMDGPUUsage.rst:186
#: ../../../AMDGPUUsage.rst:188 ../../../AMDGPUUsage.rst:189
#: ../../../AMDGPUUsage.rst:190 ../../../AMDGPUUsage.rst:193
#: ../../../AMDGPUUsage.rst:194 ../../../AMDGPUUsage.rst:197
#: ../../../AMDGPUUsage.rst:202
msgid "amdgcn"
msgstr ""

#: ../../../AMDGPUUsage.rst:34 ../../../AMDGPUUsage.rst:35
#: ../../../AMDGPUUsage.rst:36 ../../../AMDGPUUsage.rst:37
#: ../../../AMDGPUUsage.rst:38
msgid "amdhsa"
msgstr ""

#: ../../../AMDGPUUsage.rst:35
msgid "opencl"
msgstr ""

#: ../../../AMDGPUUsage.rst:36
msgid "amdgizcl"
msgstr ""

#: ../../../AMDGPUUsage.rst:37
msgid "amdgiz"
msgstr ""

#: ../../../AMDGPUUsage.rst:38 ../../../AMDGPUUsage.rst:225
#: ../../../AMDGPUUsage.rst:245
msgid "hcc"
msgstr ""

#: ../../../AMDGPUUsage.rst:43
msgid "``r600-amd--``"
msgstr ""

#: ../../../AMDGPUUsage.rst:42
msgid ""
"Supports AMD GPUs HD2XXX-HD6XXX for graphics and compute shaders executed on "
"the MESA runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:47
msgid "``amdgcn-amd--``"
msgstr ""

#: ../../../AMDGPUUsage.rst:46
msgid ""
"Supports AMD GPUs GCN 6 onwards for graphics and compute shaders executed on "
"the MESA runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:51
msgid "``amdgcn-amd-amdhsa-``"
msgstr ""

#: ../../../AMDGPUUsage.rst:50
msgid ""
"Supports AMD GCN GPUs GFX6 onwards for compute kernels executed on HSA "
"[HSA]_ compatible runtimes such as AMD's ROCm [AMD-ROCm]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:56
msgid "``amdgcn-amd-amdhsa-opencl``"
msgstr ""

#: ../../../AMDGPUUsage.rst:54
msgid ""
"Supports AMD GCN GPUs GFX6 onwards for OpenCL compute kernels executed on "
"HSA [HSA]_ compatible runtimes such as AMD's ROCm [AMD-ROCm]_. See :ref:"
"`amdgpu-opencl`."
msgstr ""

#: ../../../AMDGPUUsage.rst:60
msgid "``amdgcn-amd-amdhsa-amdgizcl``"
msgstr ""

#: ../../../AMDGPUUsage.rst:59
msgid ""
"Same as ``amdgcn-amd-amdhsa-opencl`` except a different address space "
"mapping is used (see :ref:`amdgpu-address-spaces`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:64
msgid "``amdgcn-amd-amdhsa-amdgiz``"
msgstr ""

#: ../../../AMDGPUUsage.rst:63
msgid ""
"Same as ``amdgcn-amd-amdhsa-`` except a different address space mapping is "
"used (see :ref:`amdgpu-address-spaces`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:69
msgid "``amdgcn-amd-amdhsa-hcc``"
msgstr ""

#: ../../../AMDGPUUsage.rst:67
msgid ""
"Supports AMD GCN GPUs GFX6 onwards for AMD HC language compute kernels "
"executed on HSA [HSA]_ compatible runtimes such as AMD's ROCm [AMD-ROCm]_. "
"See :ref:`amdgpu-hcc`."
msgstr ""

#: ../../../AMDGPUUsage.rst:74
msgid "Processors"
msgstr ""

#: ../../../AMDGPUUsage.rst:76
msgid ""
"Use the ``clang -mcpu <Processor>`` option to specify the AMD GPU processor. "
"The names from both the *Processor* and *Alternative Processor* can be used."
msgstr ""

#: ../../../AMDGPUUsage.rst:79
msgid "AMDGPU Processors"
msgstr ""

#: ../../../AMDGPUUsage.rst:83
msgid "Processor"
msgstr ""

#: ../../../AMDGPUUsage.rst:83
msgid "Alternative Processor"
msgstr ""

#: ../../../AMDGPUUsage.rst:83
msgid "Target Triple Architecture"
msgstr ""

#: ../../../AMDGPUUsage.rst:83
msgid "dGPU/ APU"
msgstr ""

#: ../../../AMDGPUUsage.rst:83
msgid "Runtime Support"
msgstr ""

#: ../../../AMDGPUUsage.rst:83
msgid "Example Products"
msgstr ""

#: ../../../AMDGPUUsage.rst:87
msgid "**R600** [AMD-R6xx]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:89 ../../../AMDGPUUsage.rst:90
#: ../../../AMDGPUUsage.rst:91 ../../../AMDGPUUsage.rst:92
#: ../../../AMDGPUUsage.rst:95 ../../../AMDGPUUsage.rst:96
#: ../../../AMDGPUUsage.rst:97 ../../../AMDGPUUsage.rst:100
#: ../../../AMDGPUUsage.rst:101 ../../../AMDGPUUsage.rst:102
#: ../../../AMDGPUUsage.rst:103 ../../../AMDGPUUsage.rst:104
#: ../../../AMDGPUUsage.rst:107 ../../../AMDGPUUsage.rst:108
#: ../../../AMDGPUUsage.rst:109 ../../../AMDGPUUsage.rst:110
#: ../../../AMDGPUUsage.rst:113 ../../../AMDGPUUsage.rst:115
#: ../../../AMDGPUUsage.rst:121 ../../../AMDGPUUsage.rst:135
#: ../../../AMDGPUUsage.rst:139 ../../../AMDGPUUsage.rst:154
#: ../../../AMDGPUUsage.rst:180 ../../../AMDGPUUsage.rst:181
#: ../../../AMDGPUUsage.rst:186 ../../../AMDGPUUsage.rst:188
#: ../../../AMDGPUUsage.rst:189 ../../../AMDGPUUsage.rst:193
#: ../../../AMDGPUUsage.rst:194
msgid "dGPU"
msgstr ""

#: ../../../AMDGPUUsage.rst:90
msgid "r630"
msgstr ""

#: ../../../AMDGPUUsage.rst:91
msgid "rs880"
msgstr ""

#: ../../../AMDGPUUsage.rst:92
msgid "rv670"
msgstr ""

#: ../../../AMDGPUUsage.rst:93
msgid "**R700** [AMD-R7xx]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:95
msgid "rv710"
msgstr ""

#: ../../../AMDGPUUsage.rst:96
msgid "rv730"
msgstr ""

#: ../../../AMDGPUUsage.rst:97
msgid "rv770"
msgstr ""

#: ../../../AMDGPUUsage.rst:98
msgid "**Evergreen** [AMD-Evergreen]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:100
msgid "cedar"
msgstr ""

#: ../../../AMDGPUUsage.rst:101
msgid "redwood"
msgstr ""

#: ../../../AMDGPUUsage.rst:102
msgid "sumo"
msgstr ""

#: ../../../AMDGPUUsage.rst:103
msgid "juniper"
msgstr ""

#: ../../../AMDGPUUsage.rst:104
msgid "cypress"
msgstr ""

#: ../../../AMDGPUUsage.rst:105
msgid "**Northern Islands** [AMD-Cayman-Trinity]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:107
msgid "barts"
msgstr ""

#: ../../../AMDGPUUsage.rst:108
msgid "turks"
msgstr ""

#: ../../../AMDGPUUsage.rst:109
msgid "caicos"
msgstr ""

#: ../../../AMDGPUUsage.rst:110
msgid "cayman"
msgstr ""

#: ../../../AMDGPUUsage.rst:111
msgid "**GCN GFX6 (Southern Islands (SI))** [AMD-Souther-Islands]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:113
msgid "gfx600"
msgstr ""

#: ../../../AMDGPUUsage.rst:113
msgid "SI"
msgstr ""

#: ../../../AMDGPUUsage.rst:114
msgid "tahiti"
msgstr ""

#: ../../../AMDGPUUsage.rst:115
msgid "gfx601"
msgstr ""

#: ../../../AMDGPUUsage.rst:115
msgid "pitcairn"
msgstr ""

#: ../../../AMDGPUUsage.rst:116
msgid "verde"
msgstr ""

#: ../../../AMDGPUUsage.rst:117
msgid "oland"
msgstr ""

#: ../../../AMDGPUUsage.rst:118
msgid "hainan"
msgstr ""

#: ../../../AMDGPUUsage.rst:119
msgid "**GCN GFX7 (Sea Islands (CI))** [AMD-Sea-Islands]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:121
msgid "gfx700"
msgstr ""

#: ../../../AMDGPUUsage.rst:121
msgid "bonaire"
msgstr ""

#: ../../../AMDGPUUsage.rst:121
msgid "Radeon HD 7790"
msgstr ""

#: ../../../AMDGPUUsage.rst:122
msgid "Radeon HD 8770"
msgstr ""

#: ../../../AMDGPUUsage.rst:123
msgid "R7 260"
msgstr ""

#: ../../../AMDGPUUsage.rst:124
msgid "R7 260X"
msgstr ""

#: ../../../AMDGPUUsage.rst:125 ../../../AMDGPUUsage.rst:168
#: ../../../AMDGPUUsage.rst:171 ../../../AMDGPUUsage.rst:177
#: ../../../AMDGPUUsage.rst:186 ../../../AMDGPUUsage.rst:188
#: ../../../AMDGPUUsage.rst:225
msgid "\\"
msgstr ""

#: ../../../AMDGPUUsage.rst:125
msgid "kaveri"
msgstr ""

#: ../../../AMDGPUUsage.rst:125 ../../../AMDGPUUsage.rst:143
#: ../../../AMDGPUUsage.rst:162 ../../../AMDGPUUsage.rst:168
#: ../../../AMDGPUUsage.rst:171 ../../../AMDGPUUsage.rst:177
#: ../../../AMDGPUUsage.rst:190 ../../../AMDGPUUsage.rst:197
#: ../../../AMDGPUUsage.rst:202
msgid "APU"
msgstr ""

#: ../../../AMDGPUUsage.rst:125
msgid "A6-7000"
msgstr ""

#: ../../../AMDGPUUsage.rst:126
msgid "A6 Pro-7050B"
msgstr ""

#: ../../../AMDGPUUsage.rst:127
msgid "A8-7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:128
msgid "A8 Pro-7150B"
msgstr ""

#: ../../../AMDGPUUsage.rst:129
msgid "A10-7300"
msgstr ""

#: ../../../AMDGPUUsage.rst:130
msgid "A10 Pro-7350B"
msgstr ""

#: ../../../AMDGPUUsage.rst:131
msgid "FX-7500"
msgstr ""

#: ../../../AMDGPUUsage.rst:132
msgid "A8-7200P"
msgstr ""

#: ../../../AMDGPUUsage.rst:133
msgid "A10-7400P"
msgstr ""

#: ../../../AMDGPUUsage.rst:134
msgid "FX-7600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:135
msgid "gfx701"
msgstr ""

#: ../../../AMDGPUUsage.rst:135
msgid "hawaii"
msgstr ""

#: ../../../AMDGPUUsage.rst:135 ../../../AMDGPUUsage.rst:139
#: ../../../AMDGPUUsage.rst:168 ../../../AMDGPUUsage.rst:180
#: ../../../AMDGPUUsage.rst:181 ../../../AMDGPUUsage.rst:186
#: ../../../AMDGPUUsage.rst:188 ../../../AMDGPUUsage.rst:194
msgid "ROCm"
msgstr ""

#: ../../../AMDGPUUsage.rst:135
msgid "FirePro W8100"
msgstr ""

#: ../../../AMDGPUUsage.rst:136
msgid "FirePro W9100"
msgstr ""

#: ../../../AMDGPUUsage.rst:137
msgid "FirePro S9150"
msgstr ""

#: ../../../AMDGPUUsage.rst:138
msgid "FirePro S9170"
msgstr ""

#: ../../../AMDGPUUsage.rst:139
msgid "gfx702"
msgstr ""

#: ../../../AMDGPUUsage.rst:139
msgid "Radeon R9 290"
msgstr ""

#: ../../../AMDGPUUsage.rst:140
msgid "Radeon R9 290x"
msgstr ""

#: ../../../AMDGPUUsage.rst:141
msgid "Radeon R390"
msgstr ""

#: ../../../AMDGPUUsage.rst:142
msgid "Radeon R390x"
msgstr ""

#: ../../../AMDGPUUsage.rst:143
msgid "gfx703"
msgstr ""

#: ../../../AMDGPUUsage.rst:143
msgid "kabini"
msgstr ""

#: ../../../AMDGPUUsage.rst:144
msgid "mullins"
msgstr ""

#: ../../../AMDGPUUsage.rst:143
msgid "E1-2100"
msgstr ""

#: ../../../AMDGPUUsage.rst:144
msgid "E1-2200"
msgstr ""

#: ../../../AMDGPUUsage.rst:145
msgid "E1-2500"
msgstr ""

#: ../../../AMDGPUUsage.rst:146
msgid "E2-3000"
msgstr ""

#: ../../../AMDGPUUsage.rst:147
msgid "E2-3800"
msgstr ""

#: ../../../AMDGPUUsage.rst:148
msgid "A4-5000"
msgstr ""

#: ../../../AMDGPUUsage.rst:149
msgid "A4-5100"
msgstr ""

#: ../../../AMDGPUUsage.rst:150
msgid "A6-5200"
msgstr ""

#: ../../../AMDGPUUsage.rst:151
msgid "A4 Pro-3340B"
msgstr ""

#: ../../../AMDGPUUsage.rst:152
msgid "**GCN GFX8 (Volcanic Islands (VI))** [AMD-Volcanic-Islands]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:154
msgid "gfx800"
msgstr ""

#: ../../../AMDGPUUsage.rst:154
msgid "iceland"
msgstr ""

#: ../../../AMDGPUUsage.rst:154
msgid "FirePro S7150"
msgstr ""

#: ../../../AMDGPUUsage.rst:155
msgid "FirePro S7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:156
msgid "FirePro W7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:157
msgid "Radeon R285"
msgstr ""

#: ../../../AMDGPUUsage.rst:158
msgid "Radeon R9 380"
msgstr ""

#: ../../../AMDGPUUsage.rst:159
msgid "Radeon R9 385"
msgstr ""

#: ../../../AMDGPUUsage.rst:160
msgid "Mobile FirePro M7170"
msgstr ""

#: ../../../AMDGPUUsage.rst:162
msgid "gfx801"
msgstr ""

#: ../../../AMDGPUUsage.rst:162
msgid "carrizo"
msgstr ""

#: ../../../AMDGPUUsage.rst:162
msgid "A6-8500P"
msgstr ""

#: ../../../AMDGPUUsage.rst:163
msgid "Pro A6-8500B"
msgstr ""

#: ../../../AMDGPUUsage.rst:164
msgid "A8-8600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:165
msgid "Pro A8-8600B"
msgstr ""

#: ../../../AMDGPUUsage.rst:166
msgid "FX-8800P"
msgstr ""

#: ../../../AMDGPUUsage.rst:167
msgid "Pro A12-8800B"
msgstr ""

#: ../../../AMDGPUUsage.rst:168
msgid "A10-8700P"
msgstr ""

#: ../../../AMDGPUUsage.rst:169
msgid "Pro A10-8700B"
msgstr ""

#: ../../../AMDGPUUsage.rst:170
msgid "A10-8780P"
msgstr ""

#: ../../../AMDGPUUsage.rst:171
msgid "A10-9600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:172
msgid "A10-9630P"
msgstr ""

#: ../../../AMDGPUUsage.rst:173
msgid "A12-9700P"
msgstr ""

#: ../../../AMDGPUUsage.rst:174
msgid "A12-9730P"
msgstr ""

#: ../../../AMDGPUUsage.rst:175
msgid "FX-9800P"
msgstr ""

#: ../../../AMDGPUUsage.rst:176
msgid "FX-9830P"
msgstr ""

#: ../../../AMDGPUUsage.rst:177
msgid "E2-9010"
msgstr ""

#: ../../../AMDGPUUsage.rst:178
msgid "A6-9210"
msgstr ""

#: ../../../AMDGPUUsage.rst:179
msgid "A9-9410"
msgstr ""

#: ../../../AMDGPUUsage.rst:180
msgid "gfx802"
msgstr ""

#: ../../../AMDGPUUsage.rst:180
msgid "tonga"
msgstr ""

#: ../../../AMDGPUUsage.rst:180
msgid "Same as gfx800"
msgstr ""

#: ../../../AMDGPUUsage.rst:181
msgid "gfx803"
msgstr ""

#: ../../../AMDGPUUsage.rst:181
msgid "fiji"
msgstr ""

#: ../../../AMDGPUUsage.rst:181
msgid "Radeon R9 Nano"
msgstr ""

#: ../../../AMDGPUUsage.rst:182
msgid "Radeon R9 Fury"
msgstr ""

#: ../../../AMDGPUUsage.rst:183
msgid "Radeon R9 FuryX"
msgstr ""

#: ../../../AMDGPUUsage.rst:184
msgid "Radeon Pro Duo"
msgstr ""

#: ../../../AMDGPUUsage.rst:185
msgid "FirePro S9300x2"
msgstr ""

#: ../../../AMDGPUUsage.rst:186
msgid "polaris10"
msgstr ""

#: ../../../AMDGPUUsage.rst:186
msgid "Radeon RX 470"
msgstr ""

#: ../../../AMDGPUUsage.rst:187
msgid "Radeon RX 480"
msgstr ""

#: ../../../AMDGPUUsage.rst:188
msgid "polaris11"
msgstr ""

#: ../../../AMDGPUUsage.rst:188
msgid "Radeon RX 460"
msgstr ""

#: ../../../AMDGPUUsage.rst:189
msgid "gfx804"
msgstr ""

#: ../../../AMDGPUUsage.rst:189
msgid "Same as gfx803"
msgstr ""

#: ../../../AMDGPUUsage.rst:190
msgid "gfx810"
msgstr ""

#: ../../../AMDGPUUsage.rst:190
msgid "stoney"
msgstr ""

#: ../../../AMDGPUUsage.rst:191
msgid "**GCN GFX9**"
msgstr ""

#: ../../../AMDGPUUsage.rst:193
msgid "gfx900"
msgstr ""

#: ../../../AMDGPUUsage.rst:193
msgid "Radeon Vega Frontier Edition"
msgstr ""

#: ../../../AMDGPUUsage.rst:194
msgid "gfx901"
msgstr ""

#: ../../../AMDGPUUsage.rst:194
msgid "Same as gfx900 except XNACK is enabled"
msgstr ""

#: ../../../AMDGPUUsage.rst:197
msgid "gfx902"
msgstr ""

#: ../../../AMDGPUUsage.rst:197
msgid "*TBA*"
msgstr ""

#: ../../../AMDGPUUsage.rst:202
msgid "gfx903"
msgstr ""

#: ../../../AMDGPUUsage.rst:202
msgid "Same as gfx902 except XNACK is enabled"
msgstr ""

#: ../../../AMDGPUUsage.rst:210
msgid "Address Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:212
msgid "The AMDGPU backend uses the following address space mappings."
msgstr ""

#: ../../../AMDGPUUsage.rst:214
msgid ""
"The memory space names used in the table, aside from the region memory "
"space, is from the OpenCL standard."
msgstr ""

#: ../../../AMDGPUUsage.rst:217
msgid ""
"LLVM Address Space number is used throughout LLVM (for example, in LLVM IR)."
msgstr ""

#: ../../../AMDGPUUsage.rst:219 ../../../AMDGPUUsage.rst:1123
msgid "Address Space Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:223
msgid "LLVM Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:223 ../../../AMDGPUUsage.rst:1131
msgid "Memory Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:225 ../../../AMDGPUUsage.rst:237
msgid "Current Default"
msgstr ""

#: ../../../AMDGPUUsage.rst:225 ../../../AMDGPUUsage.rst:241
msgid "amdgiz/amdgizcl"
msgstr ""

#: ../../../AMDGPUUsage.rst:225 ../../../AMDGPUUsage.rst:249
msgid "Future Default"
msgstr ""

#: ../../../AMDGPUUsage.rst:227 ../../../AMDGPUUsage.rst:364
#: ../../../AMDGPUUsage.rst:365 ../../../AMDGPUUsage.rst:1099
#: ../../../AMDGPUUsage.rst:1637 ../../../AMDGPUUsage.rst:1794
#: ../../../AMDGPUUsage.rst:1808 ../../../AMDGPUUsage.rst:1823
msgid "0"
msgstr ""

#: ../../../AMDGPUUsage.rst:227 ../../../AMDGPUUsage.rst:232
#: ../../../AMDGPUUsage.rst:1133
msgid "Private (Scratch)"
msgstr ""

#: ../../../AMDGPUUsage.rst:227 ../../../AMDGPUUsage.rst:231
#: ../../../AMDGPUUsage.rst:1137
msgid "Generic (Flat)"
msgstr ""

#: ../../../AMDGPUUsage.rst:228 ../../../AMDGPUUsage.rst:378
#: ../../../AMDGPUUsage.rst:1100 ../../../AMDGPUUsage.rst:1133
#: ../../../AMDGPUUsage.rst:1795 ../../../AMDGPUUsage.rst:1810
#: ../../../AMDGPUUsage.rst:1824 ../../../AMDGPUUsage.rst:1951
#: ../../../AMDGPUUsage.rst:1970 ../../../AMDGPUUsage.rst:1978
#: ../../../AMDGPUUsage.rst:1989 ../../../AMDGPUUsage.rst:2000
#: ../../../AMDGPUUsage.rst:2003 ../../../AMDGPUUsage.rst:2006
#: ../../../AMDGPUUsage.rst:2009 ../../../AMDGPUUsage.rst:2012
#: ../../../AMDGPUUsage.rst:2043 ../../../AMDGPUUsage.rst:2046
#: ../../../AMDGPUUsage.rst:2049
msgid "1"
msgstr ""

#: ../../../AMDGPUUsage.rst:228 ../../../AMDGPUUsage.rst:1135
#: ../../../AMDGPUUsage.rst:1271
msgid "Global"
msgstr ""

#: ../../../AMDGPUUsage.rst:229 ../../../AMDGPUUsage.rst:1101
#: ../../../AMDGPUUsage.rst:1134 ../../../AMDGPUUsage.rst:1796
#: ../../../AMDGPUUsage.rst:1811 ../../../AMDGPUUsage.rst:1826
#: ../../../AMDGPUUsage.rst:1873 ../../../AMDGPUUsage.rst:1876
#: ../../../AMDGPUUsage.rst:1880 ../../../AMDGPUUsage.rst:1889
#: ../../../AMDGPUUsage.rst:1892
msgid "2"
msgstr ""

#: ../../../AMDGPUUsage.rst:229 ../../../AMDGPUUsage.rst:231
#: ../../../AMDGPUUsage.rst:1136 ../../../AMDGPUUsage.rst:1272
msgid "Constant"
msgstr ""

#: ../../../AMDGPUUsage.rst:229 ../../../AMDGPUUsage.rst:231
#: ../../../AMDGPUUsage.rst:232 ../../../AMDGPUUsage.rst:1138
msgid "Region (GDS)"
msgstr ""

#: ../../../AMDGPUUsage.rst:230 ../../../AMDGPUUsage.rst:1102
#: ../../../AMDGPUUsage.rst:1797 ../../../AMDGPUUsage.rst:1812
#: ../../../AMDGPUUsage.rst:1828
msgid "3"
msgstr ""

#: ../../../AMDGPUUsage.rst:230 ../../../AMDGPUUsage.rst:1134
msgid "Local (group/LDS)"
msgstr ""

#: ../../../AMDGPUUsage.rst:231 ../../../AMDGPUUsage.rst:1103
#: ../../../AMDGPUUsage.rst:1865
msgid "4"
msgstr ""

#: ../../../AMDGPUUsage.rst:232 ../../../AMDGPUUsage.rst:1104
msgid "5"
msgstr ""

#: ../../../AMDGPUUsage.rst:236
msgid ""
"This is the current default address space mapping used for all languages "
"except hcc. This will shortly be deprecated."
msgstr ""

#: ../../../AMDGPUUsage.rst:240
msgid ""
"This is the current address space mapping used when ``amdgiz`` or "
"``amdgizcl`` is specified as the target triple environment value."
msgstr ""

#: ../../../AMDGPUUsage.rst:244
msgid ""
"This is the current address space mapping used when ``hcc`` is specified as "
"the target triple environment value.This will shortly be deprecated."
msgstr ""

#: ../../../AMDGPUUsage.rst:248
msgid ""
"This will shortly be the only address space mapping for all languages using "
"AMDGPU backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:254
msgid "Memory Scopes"
msgstr ""

#: ../../../AMDGPUUsage.rst:256
msgid ""
"This section provides LLVM memory synchronization scopes supported by the "
"AMDGPU backend memory model when the target triple OS is ``amdhsa`` (see :"
"ref:`amdgpu-amdhsa-memory-model` and :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:260
msgid ""
"The memory model supported is based on the HSA memory model [HSA]_ which is "
"based in turn on HRF-indirect with scope inclusion [HRF]_. The happens-"
"before relation is transitive over the synchonizes-with relation independent "
"of scope, and synchonizes-with allows the memory scope instances to be "
"inclusive (see table :ref:`amdgpu-amdhsa-llvm-sync-scopes-amdhsa-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:266
msgid ""
"This is different to the OpenCL [OpenCL]_ memory model which does not have "
"scope inclusion and requires the memory scopes to exactly match. However, "
"this is conservatively correct for OpenCL."
msgstr ""

#: ../../../AMDGPUUsage.rst:270
msgid "AMDHSA LLVM Sync Scopes for AMDHSA"
msgstr ""

#: ../../../AMDGPUUsage.rst:274
msgid "LLVM Sync Scope"
msgstr ""

#: ../../../AMDGPUUsage.rst:274 ../../../AMDGPUUsage.rst:506
#: ../../../AMDGPUUsage.rst:605 ../../../AMDGPUUsage.rst:649
#: ../../../AMDGPUUsage.rst:690 ../../../AMDGPUUsage.rst:719
#: ../../../AMDGPUUsage.rst:917 ../../../AMDGPUUsage.rst:993
#: ../../../AMDGPUUsage.rst:1016 ../../../AMDGPUUsage.rst:1380
#: ../../../AMDGPUUsage.rst:1470 ../../../AMDGPUUsage.rst:1635
#: ../../../AMDGPUUsage.rst:1792 ../../../AMDGPUUsage.rst:1806
#: ../../../AMDGPUUsage.rst:1821 ../../../AMDGPUUsage.rst:1861
#: ../../../AMDGPUUsage.rst:2039 ../../../AMDGPUUsage.rst:3340
#: ../../../AMDGPUUsage.rst:3376
msgid "Description"
msgstr "Description"

#: ../../../AMDGPUUsage.rst:276 ../../../AMDGPUUsage.rst:436
#: ../../../AMDGPUUsage.rst:442 ../../../AMDGPUUsage.rst:443
#: ../../../AMDGPUUsage.rst:444 ../../../AMDGPUUsage.rst:446
#: ../../../AMDGPUUsage.rst:447 ../../../AMDGPUUsage.rst:448
#: ../../../AMDGPUUsage.rst:1099 ../../../AMDGPUUsage.rst:2300
#: ../../../AMDGPUUsage.rst:2305 ../../../AMDGPUUsage.rst:2306
#: ../../../AMDGPUUsage.rst:2308 ../../../AMDGPUUsage.rst:2488
#: ../../../AMDGPUUsage.rst:2490 ../../../AMDGPUUsage.rst:2535
#: ../../../AMDGPUUsage.rst:2745 ../../../AMDGPUUsage.rst:2747
#: ../../../AMDGPUUsage.rst:2785 ../../../AMDGPUUsage.rst:3053
#: ../../../AMDGPUUsage.rst:3055 ../../../AMDGPUUsage.rst:3124
#: ../../../AMDGPUUsage.rst:3286 ../../../AMDGPUUsage.rst:3304
#: ../../../AMDGPUUsage.rst:3305 ../../../AMDGPUUsage.rst:3379
msgid "*none*"
msgstr ""

#: ../../../AMDGPUUsage.rst:276
msgid "The default: ``system``."
msgstr ""

#: ../../../AMDGPUUsage.rst:278 ../../../AMDGPUUsage.rst:291
#: ../../../AMDGPUUsage.rst:304 ../../../AMDGPUUsage.rst:315
msgid ""
"Synchronizes with, and participates in modification and seq_cst total "
"orderings with, other operations (except image operations) for all address "
"spaces (except private, or generic that accesses private) provided the other "
"operation's sync scope is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:284
msgid "``system``."
msgstr ""

#: ../../../AMDGPUUsage.rst:285
msgid "``agent`` and executed by a thread on the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:286 ../../../AMDGPUUsage.rst:299
msgid "``workgroup`` and executed by a thread in the same workgroup."
msgstr ""

#: ../../../AMDGPUUsage.rst:288 ../../../AMDGPUUsage.rst:301
#: ../../../AMDGPUUsage.rst:312
msgid "``wavefront`` and executed by a thread in the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:291
msgid "``agent``"
msgstr ""

#: ../../../AMDGPUUsage.rst:297
msgid "``system`` or ``agent`` and executed by a thread on the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:304
msgid "``workgroup``"
msgstr ""

#: ../../../AMDGPUUsage.rst:310
msgid ""
"``system``, ``agent`` or ``workgroup`` and executed by a thread in the same "
"workgroup."
msgstr ""

#: ../../../AMDGPUUsage.rst:315
msgid "``wavefront``"
msgstr ""

#: ../../../AMDGPUUsage.rst:321
msgid ""
"``system``, ``agent``, ``workgroup`` or ``wavefront`` and executed by a "
"thread in the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:324
msgid "``singlethread``"
msgstr ""

#: ../../../AMDGPUUsage.rst:324
msgid ""
"Only synchronizes with, and participates in modification and seq_cst total "
"orderings with, other operations (except image operations) running in the "
"same thread for all address spaces (for example, in signal handlers)."
msgstr ""

#: ../../../AMDGPUUsage.rst:331
msgid "AMDGPU Intrinsics"
msgstr ""

#: ../../../AMDGPUUsage.rst:333
msgid "The AMDGPU backend implements the following intrinsics."
msgstr ""

#: ../../../AMDGPUUsage.rst:335 ../../../AMDGPUUsage.rst:1155
#: ../../../AMDGPUUsage.rst:1174
msgid "*This section is WIP.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:341
msgid "Code Object"
msgstr ""

#: ../../../AMDGPUUsage.rst:343
msgid ""
"The AMDGPU backend generates a standard ELF [ELF]_ relocatable code object "
"that can be linked by ``lld`` to produce a standard ELF shared code object "
"which can be loaded and executed on an AMDGPU target."
msgstr ""

#: ../../../AMDGPUUsage.rst:348
msgid "Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:350
msgid "The AMDGPU backend uses the following ELF header:"
msgstr ""

#: ../../../AMDGPUUsage.rst:352
msgid "AMDGPU ELF Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:356 ../../../AMDGPUUsage.rst:1097
msgid "Field"
msgstr ""

#: ../../../AMDGPUUsage.rst:356 ../../../AMDGPUUsage.rst:374
#: ../../../AMDGPUUsage.rst:518 ../../../AMDGPUUsage.rst:1097
#: ../../../AMDGPUUsage.rst:1792 ../../../AMDGPUUsage.rst:1806
#: ../../../AMDGPUUsage.rst:1821
msgid "Value"
msgstr ""

#: ../../../AMDGPUUsage.rst:358 ../../../AMDGPUUsage.rst:383
msgid "``e_ident[EI_CLASS]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:358
msgid "``ELFCLASS64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:359 ../../../AMDGPUUsage.rst:386
msgid "``e_ident[EI_DATA]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:359
msgid "``ELFDATA2LSB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:360 ../../../AMDGPUUsage.rst:390
msgid "``e_ident[EI_OSABI]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:360 ../../../AMDGPUUsage.rst:377
msgid "``ELFOSABI_AMDGPU_HSA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:361 ../../../AMDGPUUsage.rst:395
msgid "``e_ident[EI_ABIVERSION]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:361 ../../../AMDGPUUsage.rst:378
msgid "``ELFABIVERSION_AMDGPU_HSA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:362 ../../../AMDGPUUsage.rst:408
msgid "``e_type``"
msgstr ""

#: ../../../AMDGPUUsage.rst:362
msgid "``ET_REL`` or ``ET_DYN``"
msgstr ""

#: ../../../AMDGPUUsage.rst:363 ../../../AMDGPUUsage.rst:414
msgid "``e_machine``"
msgstr ""

#: ../../../AMDGPUUsage.rst:363 ../../../AMDGPUUsage.rst:376
msgid "``EM_AMDGPU``"
msgstr ""

#: ../../../AMDGPUUsage.rst:364 ../../../AMDGPUUsage.rst:418
msgid "``e_entry``"
msgstr ""

#: ../../../AMDGPUUsage.rst:365 ../../../AMDGPUUsage.rst:421
msgid "``e_flags``"
msgstr ""

#: ../../../AMDGPUUsage.rst:370
msgid "AMDGPU ELF Header Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:374 ../../../AMDGPUUsage.rst:432
#: ../../../AMDGPUUsage.rst:506 ../../../AMDGPUUsage.rst:518
#: ../../../AMDGPUUsage.rst:1016
msgid "Name"
msgstr "Nom"

#: ../../../AMDGPUUsage.rst:376
msgid "224"
msgstr ""

#: ../../../AMDGPUUsage.rst:377 ../../../AMDGPUUsage.rst:1271
#: ../../../AMDGPUUsage.rst:1272 ../../../AMDGPUUsage.rst:1274
msgid "64"
msgstr ""

#: ../../../AMDGPUUsage.rst:382
msgid ""
"The ELF class is always ``ELFCLASS64``. The AMDGPU backend only supports 64 "
"bit applications."
msgstr ""

#: ../../../AMDGPUUsage.rst:386
msgid "All AMDGPU targets use ELFDATA2LSB for little-endian byte ordering."
msgstr ""

#: ../../../AMDGPUUsage.rst:389
msgid ""
"The AMD GPU architecture specific OS ABI of ``ELFOSABI_AMDGPU_HSA`` is used "
"to specify that the code object conforms to the AMD HSA runtime ABI [HSA]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:393
msgid ""
"The AMD GPU architecture specific OS ABI version of "
"``ELFABIVERSION_AMDGPU_HSA`` is used to specify the version of AMD HSA "
"runtime ABI to which the code object conforms."
msgstr ""

#: ../../../AMDGPUUsage.rst:398
msgid "Can be one of the following values:"
msgstr ""

#: ../../../AMDGPUUsage.rst:403
msgid "``ET_REL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:402
msgid ""
"The type produced by the AMD GPU backend compiler as it is relocatable code "
"object."
msgstr ""

#: ../../../AMDGPUUsage.rst:406
msgid "``ET_DYN``"
msgstr ""

#: ../../../AMDGPUUsage.rst:406
msgid "The type produced by the linker as it is a shared code object."
msgstr ""

#: ../../../AMDGPUUsage.rst:408
msgid "The AMD HSA runtime loader requires a ``ET_DYN`` code object."
msgstr ""

#: ../../../AMDGPUUsage.rst:411
msgid ""
"The value ``EM_AMDGPU`` is used for the machine for all members of the AMD "
"GPU architecture family. The specific member is specified in the "
"``NT_AMD_AMDGPU_ISA`` entry in the ``.note`` section (see :ref:`amdgpu-note-"
"records`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:417
msgid ""
"The entry point is 0 as the entry points for individual kernels must be "
"selected in order to invoke them through AQL packets."
msgstr ""

#: ../../../AMDGPUUsage.rst:421
msgid "The value is 0 as no flags are used."
msgstr ""

#: ../../../AMDGPUUsage.rst:424
msgid "Sections"
msgstr ""

#: ../../../AMDGPUUsage.rst:426
msgid ""
"An AMDGPU target ELF code object has the standard ELF sections which include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:428
msgid "AMDGPU ELF Sections"
msgstr ""

#: ../../../AMDGPUUsage.rst:432 ../../../AMDGPUUsage.rst:506
#: ../../../AMDGPUUsage.rst:1016
msgid "Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:432
msgid "Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:434 ../../../AMDGPUUsage.rst:1020
msgid "``.bss``"
msgstr ""

#: ../../../AMDGPUUsage.rst:434
msgid "``SHT_NOBITS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:434 ../../../AMDGPUUsage.rst:435
#: ../../../AMDGPUUsage.rst:440
msgid "``SHF_ALLOC`` + ``SHF_WRITE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:435 ../../../AMDGPUUsage.rst:1018
msgid "``.data``"
msgstr ""

#: ../../../AMDGPUUsage.rst:435 ../../../AMDGPUUsage.rst:436
#: ../../../AMDGPUUsage.rst:438 ../../../AMDGPUUsage.rst:439
#: ../../../AMDGPUUsage.rst:440 ../../../AMDGPUUsage.rst:445
#: ../../../AMDGPUUsage.rst:449
msgid "``SHT_PROGBITS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:436
msgid "``.debug_``\\ *\\**"
msgstr ""

#: ../../../AMDGPUUsage.rst:437
msgid "``.dynamic``"
msgstr ""

#: ../../../AMDGPUUsage.rst:437
msgid "``SHT_DYNAMIC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:437 ../../../AMDGPUUsage.rst:438
#: ../../../AMDGPUUsage.rst:439 ../../../AMDGPUUsage.rst:441
#: ../../../AMDGPUUsage.rst:445
msgid "``SHF_ALLOC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:438
msgid "``.dynstr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:439
msgid "``.dynsym``"
msgstr ""

#: ../../../AMDGPUUsage.rst:440
msgid "``.got``"
msgstr ""

#: ../../../AMDGPUUsage.rst:441
msgid "``.hash``"
msgstr ""

#: ../../../AMDGPUUsage.rst:441
msgid "``SHT_HASH``"
msgstr ""

#: ../../../AMDGPUUsage.rst:442 ../../../AMDGPUUsage.rst:464
msgid "``.note``"
msgstr ""

#: ../../../AMDGPUUsage.rst:442
msgid "``SHT_NOTE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:443
msgid "``.rela``\\ *name*"
msgstr ""

#: ../../../AMDGPUUsage.rst:443 ../../../AMDGPUUsage.rst:444
msgid "``SHT_RELA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:444
msgid "``.rela.dyn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:445 ../../../AMDGPUUsage.rst:1019
#: ../../../AMDGPUUsage.rst:1021
msgid "``.rodata``"
msgstr ""

#: ../../../AMDGPUUsage.rst:446
msgid "``.shstrtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:446 ../../../AMDGPUUsage.rst:447
msgid "``SHT_STRTAB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:447
msgid "``.strtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:448
msgid "``.symtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:448
msgid "``SHT_SYMTAB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:449 ../../../AMDGPUUsage.rst:480
#: ../../../AMDGPUUsage.rst:1022
msgid "``.text``"
msgstr ""

#: ../../../AMDGPUUsage.rst:449
msgid "``SHF_ALLOC`` + ``SHF_EXECINSTR``"
msgstr ""

#: ../../../AMDGPUUsage.rst:452
msgid ""
"These sections have their standard meanings (see [ELF]_) and are only "
"generated if needed."
msgstr ""

#: ../../../AMDGPUUsage.rst:457
msgid "``.debug``\\ *\\**"
msgstr ""

#: ../../../AMDGPUUsage.rst:456
msgid ""
"The standard DWARF sections. See :ref:`amdgpu-dwarf` for information on the "
"DWARF produced by the AMDGPU backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:460
msgid "``.dynamic``, ``.dynstr``, ``.dynstr``, ``.hash``"
msgstr ""

#: ../../../AMDGPUUsage.rst:460
msgid "The standard sections used by a dynamic loader."
msgstr ""

#: ../../../AMDGPUUsage.rst:463
msgid ""
"See :ref:`amdgpu-note-records` for the note records supported by the AMDGPU "
"backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:475
msgid "``.rela``\\ *name*, ``.rela.dyn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:467
msgid ""
"For relocatable code objects, *name* is the name of the section that the "
"relocation records apply. For example, ``.rela.text`` is the section name "
"for relocation records associated with the ``.text`` section."
msgstr ""

#: ../../../AMDGPUUsage.rst:471
msgid ""
"For linked shared code objects, ``.rela.dyn`` contains all the relocation "
"records from each of the relocatable code object's ``.rela``\\ *name* "
"sections."
msgstr ""

#: ../../../AMDGPUUsage.rst:474
msgid ""
"See :ref:`amdgpu-relocation-records` for the relocation records supported by "
"the AMDGPU backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:478
msgid ""
"The executable machine code for the kernels and functions they call. "
"Generated as position independent code. See :ref:`amdgpu-code-conventions` "
"for information on conventions used in the isa generation."
msgstr ""

#: ../../../AMDGPUUsage.rst:485
msgid "Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:487
msgid ""
"As required by ``ELFCLASS64``, minimal zero byte padding must be generated "
"after the ``name`` field to ensure the ``desc`` field is 4 byte aligned. In "
"addition, minimal zero byte padding must be generated to ensure the ``desc`` "
"field size is a multiple of 4 bytes. The ``sh_addralign`` field of the ``."
"note`` section must be at least 4 to indicate at least 8 byte alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:493
msgid ""
"The AMDGPU backend code object uses the following ELF note records in the ``."
"note`` section. The *Description* column specifies the layout of the note "
"record’s ``desc`` field. All fields are consecutive bytes. Note records with "
"variable size strings have a corresponding ``*_size`` field that specifies "
"the number of bytes, including the terminating null character, in the "
"string. The string(s) come immediately after the preceding fields."
msgstr ""

#: ../../../AMDGPUUsage.rst:500
msgid "Additional note records can be present."
msgstr ""

#: ../../../AMDGPUUsage.rst:502
msgid "AMDGPU ELF Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:508 ../../../AMDGPUUsage.rst:509
msgid "\"AMD\""
msgstr ""

#: ../../../AMDGPUUsage.rst:508 ../../../AMDGPUUsage.rst:521
#: ../../../AMDGPUUsage.rst:578
msgid "``NT_AMD_AMDGPU_METADATA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:508
msgid "<metadata null terminated string>"
msgstr ""

#: ../../../AMDGPUUsage.rst:509 ../../../AMDGPUUsage.rst:522
#: ../../../AMDGPUUsage.rst:563
msgid "``NT_AMD_AMDGPU_ISA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:509
msgid "<isa name null terminated string>"
msgstr ""

#: ../../../AMDGPUUsage.rst:514
msgid "AMDGPU ELF Note Record Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:520
msgid "*reserved*"
msgstr ""

#: ../../../AMDGPUUsage.rst:520
msgid "0-9"
msgstr ""

#: ../../../AMDGPUUsage.rst:521 ../../../AMDGPUUsage.rst:1109
#: ../../../AMDGPUUsage.rst:1687
msgid "10"
msgstr ""

#: ../../../AMDGPUUsage.rst:522 ../../../AMDGPUUsage.rst:1110
msgid "11"
msgstr ""

#: ../../../AMDGPUUsage.rst:526
msgid ""
"Specifies the instruction set architecture used by the machine code "
"contained in the code object."
msgstr ""

#: ../../../AMDGPUUsage.rst:529
msgid ""
"This note record is required for code objects containing machine code for "
"processors matching the ``amdgcn`` architecture in table :ref:`amdgpu-"
"processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:533
msgid "The null terminated string has the following syntax:"
msgstr ""

#: ../../../AMDGPUUsage.rst:535
msgid ""
"*architecture*\\ ``-``\\ *vendor*\\ ``-``\\ *os*\\ ``-``\\ *environment*\\ "
"``-``\\ *processor*"
msgstr ""

#: ../../../AMDGPUUsage.rst:537 ../../../AMDGPUUsage.rst:618
msgid "where:"
msgstr ""

#: ../../../AMDGPUUsage.rst:543
msgid "*architecture*"
msgstr ""

#: ../../../AMDGPUUsage.rst:540
msgid "The architecture from table :ref:`amdgpu-target-triples-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:542
msgid ""
"This is always ``amdgcn`` when the target triple OS is ``amdhsa`` (see :ref:"
"`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:548
msgid "*vendor*"
msgstr ""

#: ../../../AMDGPUUsage.rst:546
msgid "The vendor from table :ref:`amdgpu-target-triples-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:548
msgid "For the AMDGPU backend this is always ``amd``."
msgstr ""

#: ../../../AMDGPUUsage.rst:551
msgid "*os*"
msgstr ""

#: ../../../AMDGPUUsage.rst:551
msgid "The OS from table :ref:`amdgpu-target-triples-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:556
msgid "*environment*"
msgstr ""

#: ../../../AMDGPUUsage.rst:554
msgid ""
"An environment from table :ref:`amdgpu-target-triples-table`, or blank if "
"the environment has no affect on the execution of the code object."
msgstr ""

#: ../../../AMDGPUUsage.rst:557
msgid "For the AMDGPU backend this is currently always blank."
msgstr ""

#: ../../../AMDGPUUsage.rst:559
msgid "*processor*"
msgstr ""

#: ../../../AMDGPUUsage.rst:559
msgid "The processor from table :ref:`amdgpu-processors-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:561
msgid "For example:"
msgstr ""

#: ../../../AMDGPUUsage.rst:563
msgid "``amdgcn-amd-amdhsa--gfx901``"
msgstr ""

#: ../../../AMDGPUUsage.rst:566
msgid ""
"Specifies extensible metadata associated with the code object. See :ref:"
"`amdgpu-code-object-metadata` for the syntax of the code object metadata "
"string."
msgstr ""

#: ../../../AMDGPUUsage.rst:570
msgid ""
"This note record is required and must contain the minimum information "
"necessary to support the ROCM kernel queries. For example, the segment sizes "
"needed in a dispatch packet. In addition, a high level language runtime may "
"require other information to be included. For example, the AMD OpenCL "
"runtime records kernel argument information."
msgstr ""

#: ../../../AMDGPUUsage.rst:583
msgid "Code Object Metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:585
msgid ""
"The code object metadata is specified by the ``NT_AMD_AMDHSA_METADATA`` note "
"record (see :ref:`amdgpu-note-records`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:588
msgid ""
"The metadata is specified as a YAML formatted string (see [YAML]_ and :doc:"
"`YamlIO`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:591
msgid ""
"The metadata is represented as a single YAML document comprised of the "
"mapping defined in table :ref:`amdgpu-amdhsa-code-object-metadata-mapping-"
"table` and referenced tables."
msgstr ""

#: ../../../AMDGPUUsage.rst:595
msgid ""
"For boolean values, the string values of ``false`` and ``true`` are used for "
"false and true respectively."
msgstr ""

#: ../../../AMDGPUUsage.rst:598
msgid ""
"Additional information can be added to the mappings. To avoid conflicts, any "
"non-AMD key names should be prefixed by \"*vendor-name*.\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:601
msgid "AMDHSA Code Object Metadata Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:605 ../../../AMDGPUUsage.rst:649
#: ../../../AMDGPUUsage.rst:690 ../../../AMDGPUUsage.rst:719
#: ../../../AMDGPUUsage.rst:917 ../../../AMDGPUUsage.rst:993
msgid "String Key"
msgstr ""

#: ../../../AMDGPUUsage.rst:605 ../../../AMDGPUUsage.rst:649
#: ../../../AMDGPUUsage.rst:690 ../../../AMDGPUUsage.rst:719
#: ../../../AMDGPUUsage.rst:917 ../../../AMDGPUUsage.rst:993
msgid "Value Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:605 ../../../AMDGPUUsage.rst:649
#: ../../../AMDGPUUsage.rst:690 ../../../AMDGPUUsage.rst:719
#: ../../../AMDGPUUsage.rst:917 ../../../AMDGPUUsage.rst:993
msgid "Required?"
msgstr ""

#: ../../../AMDGPUUsage.rst:607
msgid "\"Version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:607 ../../../AMDGPUUsage.rst:662
msgid "sequence of 2 integers"
msgstr ""

#: ../../../AMDGPUUsage.rst:607 ../../../AMDGPUUsage.rst:637
#: ../../../AMDGPUUsage.rst:651 ../../../AMDGPUUsage.rst:652
#: ../../../AMDGPUUsage.rst:723 ../../../AMDGPUUsage.rst:724
#: ../../../AMDGPUUsage.rst:726 ../../../AMDGPUUsage.rst:808
#: ../../../AMDGPUUsage.rst:919 ../../../AMDGPUUsage.rst:924
#: ../../../AMDGPUUsage.rst:935 ../../../AMDGPUUsage.rst:945
#: ../../../AMDGPUUsage.rst:950
msgid "Required"
msgstr ""

#: ../../../AMDGPUUsage.rst:607
msgid "The first integer is the major version. Currently 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:609
msgid "The second integer is the minor version. Currently 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:611
msgid "\"Printf\""
msgstr ""

#: ../../../AMDGPUUsage.rst:611
msgid "sequence of strings"
msgstr ""

#: ../../../AMDGPUUsage.rst:611
msgid ""
"Each string is encoded information about a printf function call. The encoded "
"information is organized as fields separated by colon (':'):"
msgstr ""

#: ../../../AMDGPUUsage.rst:616
msgid "``ID:N:S[0]:S[1]:...:S[N-1]:FormatString``"
msgstr ""

#: ../../../AMDGPUUsage.rst:622
msgid "``ID``"
msgstr ""

#: ../../../AMDGPUUsage.rst:621
msgid "A 32 bit integer as a unique id for each printf function call"
msgstr ""

#: ../../../AMDGPUUsage.rst:627
msgid "``N``"
msgstr ""

#: ../../../AMDGPUUsage.rst:625
msgid ""
"A 32 bit integer equal to the number of arguments of printf function call "
"minus 1"
msgstr ""

#: ../../../AMDGPUUsage.rst:632
msgid "``S[i]`` (where i = 0, 1, ... , N-1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:630
msgid ""
"32 bit integers for the size in bytes of the i-th FormatString argument of "
"the printf function call"
msgstr ""

#: ../../../AMDGPUUsage.rst:635
msgid "FormatString"
msgstr ""

#: ../../../AMDGPUUsage.rst:635
msgid "The format string passed to the printf function call."
msgstr ""

#: ../../../AMDGPUUsage.rst:637
msgid "\"Kernels\""
msgstr ""

#: ../../../AMDGPUUsage.rst:637 ../../../AMDGPUUsage.rst:670
msgid "sequence of mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:637
msgid ""
"Sequence of the mappings for each kernel in the code object. See :ref:"
"`amdgpu-amdhsa-code-object-kernel-metadata-mapping-table` for the definition "
"of the mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:645
msgid "AMDHSA Code Object Kernel Metadata Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:651 ../../../AMDGPUUsage.rst:721
msgid "\"Name\""
msgstr ""

#: ../../../AMDGPUUsage.rst:651 ../../../AMDGPUUsage.rst:652
#: ../../../AMDGPUUsage.rst:654 ../../../AMDGPUUsage.rst:706
#: ../../../AMDGPUUsage.rst:721 ../../../AMDGPUUsage.rst:722
#: ../../../AMDGPUUsage.rst:726 ../../../AMDGPUUsage.rst:808
#: ../../../AMDGPUUsage.rst:837 ../../../AMDGPUUsage.rst:857
#: ../../../AMDGPUUsage.rst:870 ../../../AMDGPUUsage.rst:995
msgid "string"
msgstr ""

#: ../../../AMDGPUUsage.rst:651
msgid "Source name of the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:652
msgid "\"SymbolName\""
msgstr ""

#: ../../../AMDGPUUsage.rst:652
msgid "Name of the kernel descriptor ELF symbol."
msgstr ""

#: ../../../AMDGPUUsage.rst:654
msgid "\"Language\""
msgstr ""

#: ../../../AMDGPUUsage.rst:654
msgid "Source language of the kernel. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:657
msgid "\"OpenCL C\""
msgstr ""

#: ../../../AMDGPUUsage.rst:658
msgid "\"OpenCL C++\""
msgstr ""

#: ../../../AMDGPUUsage.rst:659
msgid "\"HCC\""
msgstr ""

#: ../../../AMDGPUUsage.rst:660
msgid "\"OpenMP\""
msgstr ""

#: ../../../AMDGPUUsage.rst:662
msgid "\"LanguageVersion\""
msgstr ""

#: ../../../AMDGPUUsage.rst:662
msgid "The first integer is the major version."
msgstr ""

#: ../../../AMDGPUUsage.rst:664
msgid "The second integer is the minor version."
msgstr ""

#: ../../../AMDGPUUsage.rst:666
msgid "\"Attrs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:666 ../../../AMDGPUUsage.rst:674
#: ../../../AMDGPUUsage.rst:678
msgid "mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:666
msgid ""
"Mapping of kernel attributes. See :ref:`amdgpu-amdhsa-code-object-kernel-"
"attribute-metadata-mapping-table` for the mapping definition."
msgstr ""

#: ../../../AMDGPUUsage.rst:670
msgid "\"Arguments\""
msgstr ""

#: ../../../AMDGPUUsage.rst:670
msgid ""
"Sequence of mappings of the kernel arguments. See :ref:`amdgpu-amdhsa-code-"
"object-kernel-argument-metadata-mapping-table` for the definition of the "
"mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:674
msgid "\"CodeProps\""
msgstr ""

#: ../../../AMDGPUUsage.rst:674
msgid ""
"Mapping of properties related to the kernel code. See :ref:`amdgpu-amdhsa-"
"code-object-kernel-code-properties-metadata-mapping-table` for the mapping "
"definition."
msgstr ""

#: ../../../AMDGPUUsage.rst:678
msgid "\"DebugProps\""
msgstr ""

#: ../../../AMDGPUUsage.rst:678
msgid ""
"Mapping of properties related to the kernel debugging. See :ref:`amdgpu-"
"amdhsa-code-object-kernel-debug-properties-metadata-mapping-table` for the "
"mapping definition."
msgstr ""

#: ../../../AMDGPUUsage.rst:686
msgid "AMDHSA Code Object Kernel Attribute Metadata Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:692
msgid "\"ReqdWorkGroupSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:692 ../../../AMDGPUUsage.rst:699
msgid "sequence of 3 integers"
msgstr ""

#: ../../../AMDGPUUsage.rst:692
msgid ""
"The dispatch work-group size X, Y, Z must correspond to the specified values."
msgstr ""

#: ../../../AMDGPUUsage.rst:696
msgid "Corresponds to the OpenCL ``reqd_work_group_size`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:699
msgid "\"WorkGroupSizeHint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:699
msgid ""
"The dispatch work-group size X, Y, Z is likely to be the specified values."
msgstr ""

#: ../../../AMDGPUUsage.rst:703
msgid "Corresponds to the OpenCL ``work_group_size_hint`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:706
msgid "\"VecTypeHint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:706
msgid "The name of a scalar or vector type."
msgstr ""

#: ../../../AMDGPUUsage.rst:709
msgid "Corresponds to the OpenCL ``vec_type_hint`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:715
msgid "AMDHSA Code Object Kernel Argument Metadata Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:721
msgid "Kernel argument name."
msgstr ""

#: ../../../AMDGPUUsage.rst:722
msgid "\"TypeName\""
msgstr ""

#: ../../../AMDGPUUsage.rst:722
msgid "Kernel argument type name."
msgstr ""

#: ../../../AMDGPUUsage.rst:723
msgid "\"Size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:723 ../../../AMDGPUUsage.rst:724
#: ../../../AMDGPUUsage.rst:831 ../../../AMDGPUUsage.rst:919
#: ../../../AMDGPUUsage.rst:924 ../../../AMDGPUUsage.rst:935
#: ../../../AMDGPUUsage.rst:945 ../../../AMDGPUUsage.rst:950
#: ../../../AMDGPUUsage.rst:952 ../../../AMDGPUUsage.rst:968
#: ../../../AMDGPUUsage.rst:972 ../../../AMDGPUUsage.rst:996
#: ../../../AMDGPUUsage.rst:997 ../../../AMDGPUUsage.rst:998
#: ../../../AMDGPUUsage.rst:999
msgid "integer"
msgstr ""

#: ../../../AMDGPUUsage.rst:723
msgid "Kernel argument size in bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:724
msgid "\"Align\""
msgstr ""

#: ../../../AMDGPUUsage.rst:724
msgid "Kernel argument alignment in bytes. Must be a power of two."
msgstr ""

#: ../../../AMDGPUUsage.rst:726
msgid "\"ValueKind\""
msgstr ""

#: ../../../AMDGPUUsage.rst:726
msgid ""
"Kernel argument kind that specifies how to set up the corresponding "
"argument. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:733
msgid "\"ByValue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:732
msgid "The argument is copied directly into the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:738
msgid "\"GlobalBuffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:736
msgid ""
"A global address space pointer to the buffer data is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:743
msgid "\"DynamicSharedPointer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:741
msgid ""
"A group address space pointer to dynamically allocated LDS is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:748
msgid "\"Sampler\""
msgstr ""

#: ../../../AMDGPUUsage.rst:746
msgid "A global address space pointer to a S# is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:753
msgid "\"Image\""
msgstr ""

#: ../../../AMDGPUUsage.rst:751
msgid "A global address space pointer to a T# is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:758
msgid "\"Pipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:756
msgid ""
"A global address space pointer to an OpenCL pipe is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:764
msgid "\"Queue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:761
msgid ""
"A global address space pointer to an OpenCL device enqueue queue is passed "
"in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:770
msgid "\"HiddenGlobalOffsetX\""
msgstr ""

#: ../../../AMDGPUUsage.rst:767
msgid ""
"The OpenCL grid dispatch global offset for the X dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:776
msgid "\"HiddenGlobalOffsetY\""
msgstr ""

#: ../../../AMDGPUUsage.rst:773
msgid ""
"The OpenCL grid dispatch global offset for the Y dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:782
msgid "\"HiddenGlobalOffsetZ\""
msgstr ""

#: ../../../AMDGPUUsage.rst:779
msgid ""
"The OpenCL grid dispatch global offset for the Z dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:788
msgid "\"HiddenNone\""
msgstr ""

#: ../../../AMDGPUUsage.rst:785
msgid ""
"An argument that is not used by the kernel. Space needs to be left for it, "
"but it does not need to be set up."
msgstr ""

#: ../../../AMDGPUUsage.rst:793
msgid "\"HiddenPrintfBuffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:791
msgid ""
"A global address space pointer to the runtime printf buffer is passed in "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:800
msgid "\"HiddenDefaultQueue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:796
msgid ""
"A global address space pointer to the OpenCL device enqueue queue that "
"should be used by the kernel by default is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:806
msgid "\"HiddenCompletionAction\""
msgstr ""

#: ../../../AMDGPUUsage.rst:803
msgid "*TBD*"
msgstr ""

#: ../../../AMDGPUUsage.rst:808
msgid "\"ValueType\""
msgstr ""

#: ../../../AMDGPUUsage.rst:808
msgid ""
"Kernel argument value type. Only present if \"ValueKind\" is \"ByValue\". "
"For vector data types, the value is for the element type. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:814
msgid "\"Struct\""
msgstr ""

#: ../../../AMDGPUUsage.rst:815
msgid "\"I8\""
msgstr ""

#: ../../../AMDGPUUsage.rst:816
msgid "\"U8\""
msgstr ""

#: ../../../AMDGPUUsage.rst:817
msgid "\"I16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:818
msgid "\"U16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:819
msgid "\"F16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:820
msgid "\"I32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:821
msgid "\"U32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:822
msgid "\"F32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:823
msgid "\"I64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:824
msgid "\"U64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:825
msgid "\"F64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:831
msgid "\"PointeeAlign\""
msgstr ""

#: ../../../AMDGPUUsage.rst:831
msgid ""
"Alignment in bytes of pointee type for pointer type kernel argument. Must be "
"a power of 2. Only present if \"ValueKind\" is \"DynamicSharedPointer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:837
msgid "\"AddrSpaceQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:837
msgid ""
"Kernel argument address space qualifier. Only present if \"ValueKind\" is "
"\"GlobalBuffer\" or \"DynamicSharedPointer\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:843
msgid "\"Private\""
msgstr ""

#: ../../../AMDGPUUsage.rst:844
msgid "\"Global\""
msgstr ""

#: ../../../AMDGPUUsage.rst:845
msgid "\"Constant\""
msgstr ""

#: ../../../AMDGPUUsage.rst:846
msgid "\"Local\""
msgstr ""

#: ../../../AMDGPUUsage.rst:847
msgid "\"Generic\""
msgstr ""

#: ../../../AMDGPUUsage.rst:848
msgid "\"Region\""
msgstr ""

#: ../../../AMDGPUUsage.rst:857
msgid "\"AccQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:857
msgid ""
"Kernel argument access qualifier. Only present if \"ValueKind\" is \"Image\" "
"or \"Pipe\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:863 ../../../AMDGPUUsage.rst:883
msgid "\"ReadOnly\""
msgstr ""

#: ../../../AMDGPUUsage.rst:864 ../../../AMDGPUUsage.rst:884
msgid "\"WriteOnly\""
msgstr ""

#: ../../../AMDGPUUsage.rst:865 ../../../AMDGPUUsage.rst:885
msgid "\"ReadWrite\""
msgstr ""

#: ../../../AMDGPUUsage.rst:870
msgid "\"ActualAcc\""
msgstr ""

#: ../../../AMDGPUUsage.rst:870
msgid ""
"The actual memory accesses performed by the kernel on the kernel argument. "
"Only present if \"ValueKind\" is \"GlobalBuffer\", \"Image\", or \"Pipe\". "
"This may be more restrictive than indicated by \"AccQual\" to reflect what "
"the kernel actual does. If not present then the runtime must assume what is "
"implied by \"AccQual\" and \"IsConst\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:887
msgid "\"IsConst\""
msgstr ""

#: ../../../AMDGPUUsage.rst:887 ../../../AMDGPUUsage.rst:892
#: ../../../AMDGPUUsage.rst:897 ../../../AMDGPUUsage.rst:902
#: ../../../AMDGPUUsage.rst:976 ../../../AMDGPUUsage.rst:981
msgid "boolean"
msgstr ""

#: ../../../AMDGPUUsage.rst:887
msgid ""
"Indicates if the kernel argument is const qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:892
msgid "\"IsRestrict\""
msgstr ""

#: ../../../AMDGPUUsage.rst:892
msgid ""
"Indicates if the kernel argument is restrict qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:897
msgid "\"IsVolatile\""
msgstr ""

#: ../../../AMDGPUUsage.rst:897
msgid ""
"Indicates if the kernel argument is volatile qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:902
msgid "\"IsPipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:902
msgid ""
"Indicates if the kernel argument is pipe qualified. Only present if "
"\"ValueKind\" is \"Pipe\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:913
msgid "AMDHSA Code Object Kernel Code Properties Metadata Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:919
msgid "\"KernargSegmentSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:919
msgid ""
"The size in bytes of the kernarg segment that holds the values of the "
"arguments to the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:924
msgid "\"GroupSegmentFixedSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:924
msgid ""
"The amount of group segment memory required by a work-group in bytes. This "
"does not include any dynamically allocated group segment memory that may be "
"added when the kernel is dispatched."
msgstr ""

#: ../../../AMDGPUUsage.rst:935
msgid "\"PrivateSegmentFixedSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:935
msgid ""
"The amount of fixed private address space memory required for a work-item in "
"bytes. If IsDynamicCallstack is 1 then additional space must be added to "
"this value for the call stack."
msgstr ""

#: ../../../AMDGPUUsage.rst:945
msgid "\"KernargSegmentAlign\""
msgstr ""

#: ../../../AMDGPUUsage.rst:945
msgid ""
"The maximum byte alignment of arguments in the kernarg segment. Must be a "
"power of 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:950
msgid "\"WavefrontSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:950
msgid "Wavefront size. Must be a power of 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:952
msgid "\"NumSGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:952
msgid ""
"Number of scalar registers used by a wavefront for GFX6-GFX9. This includes "
"the special SGPRs for VCC, Flat Scratch (GFX7-GFX9) and XNACK (for GFX8-"
"GFX9). It does not include the 16 SGPR added if a trap handler is enabled. "
"It is not rounded up to the allocation granularity."
msgstr ""

#: ../../../AMDGPUUsage.rst:968
msgid "\"NumVGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:968
msgid "Number of vector registers used by each work-item for GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:972
msgid "\"MaxFlatWorkgroupSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:972 ../../../AMDGPUUsage.rst:1399
msgid "Maximum flat work-group size supported by the kernel in work-items."
msgstr ""

#: ../../../AMDGPUUsage.rst:976
msgid "\"IsDynamicCallStack\""
msgstr ""

#: ../../../AMDGPUUsage.rst:976 ../../../AMDGPUUsage.rst:1402
msgid ""
"Indicates if the generated machine code is using a dynamically sized call "
"stack."
msgstr ""

#: ../../../AMDGPUUsage.rst:981
msgid "\"IsXNACKEnabled\""
msgstr ""

#: ../../../AMDGPUUsage.rst:981
msgid "Indicates if the generated machine code is capable of supporting XNACK."
msgstr ""

#: ../../../AMDGPUUsage.rst:989
msgid "AMDHSA Code Object Kernel Debug Properties Metadata Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:995
msgid "\"DebuggerABIVersion\""
msgstr ""

#: ../../../AMDGPUUsage.rst:996
msgid "\"ReservedNumVGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:997
msgid "\"ReservedFirstVGPR\""
msgstr ""

#: ../../../AMDGPUUsage.rst:998
msgid "\"PrivateSegmentBufferSGPR\""
msgstr ""

#: ../../../AMDGPUUsage.rst:999
msgid "\"WavefrontPrivateSegmentOffsetSGPR\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1008
msgid "Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:1010
msgid "Symbols include the following:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1012
msgid "AMDGPU ELF Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:1016
msgid "Section"
msgstr ""

#: ../../../AMDGPUUsage.rst:1018 ../../../AMDGPUUsage.rst:1022
msgid "*link-name*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1018 ../../../AMDGPUUsage.rst:1021
msgid "``STT_OBJECT``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1018 ../../../AMDGPUUsage.rst:1042
msgid "Global variable"
msgstr ""

#: ../../../AMDGPUUsage.rst:1021
msgid "*link-name*\\ ``@kd``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1021 ../../../AMDGPUUsage.rst:1048
msgid "Kernel descriptor"
msgstr ""

#: ../../../AMDGPUUsage.rst:1022
msgid "``STT_FUNC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1022 ../../../AMDGPUUsage.rst:1051
msgid "Kernel entry point"
msgstr ""

#: ../../../AMDGPUUsage.rst:1026
msgid "Global variables both used and defined by the compilation unit."
msgstr ""

#: ../../../AMDGPUUsage.rst:1028
msgid ""
"If the symbol is defined in the compilation unit then it is allocated in the "
"appropriate section according to if it has initialized data or is readonly."
msgstr ""

#: ../../../AMDGPUUsage.rst:1031
msgid ""
"If the symbol is external then its section is ``STN_UNDEF`` and the loader "
"will resolve relocations using the definition provided by another code "
"object or explicitly defined by the runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:1035
msgid ""
"All global symbols, whether defined in the compilation unit or external, are "
"accessed by the machine code indirectly through a GOT table entry. This "
"allows them to be preemptable. The GOT table is only supported when the "
"target triple OS is ``amdhsa`` (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1045
msgid ""
"Every HSA kernel has an associated kernel descriptor. It is the address of "
"the kernel descriptor that is used in the AQL dispatch packet used to invoke "
"the kernel, not the kernel entry point. The layout of the HSA kernel "
"descriptor is defined in :ref:`amdgpu-amdhsa-kernel-descriptor`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1051
msgid "Every HSA kernel also has a symbol for its machine code entry point."
msgstr ""

#: ../../../AMDGPUUsage.rst:1056
msgid "Relocation Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1058
msgid ""
"AMDGPU backend generates ``Elf64_Rela`` relocation records. Supported "
"relocatable fields are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1064 ../../../AMDGPUUsage.rst:1100
#: ../../../AMDGPUUsage.rst:1101 ../../../AMDGPUUsage.rst:1103
#: ../../../AMDGPUUsage.rst:1105 ../../../AMDGPUUsage.rst:1106
#: ../../../AMDGPUUsage.rst:1107 ../../../AMDGPUUsage.rst:1108
#: ../../../AMDGPUUsage.rst:1109 ../../../AMDGPUUsage.rst:1110
msgid "``word32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1062
msgid ""
"This specifies a 32-bit field occupying 4 bytes with arbitrary byte "
"alignment. These values use the same byte order as other word values in the "
"AMD GPU architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:1069 ../../../AMDGPUUsage.rst:1102
#: ../../../AMDGPUUsage.rst:1104
msgid "``word64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1067
msgid ""
"This specifies a 64-bit field occupying 8 bytes with arbitrary byte "
"alignment. These values use the same byte order as other word values in the "
"AMD GPU architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:1071
msgid "Following notations are used for specifying relocation calculations:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1074
msgid "**A**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1074
msgid ""
"Represents the addend used to compute the value of the relocatable field."
msgstr ""

#: ../../../AMDGPUUsage.rst:1078
msgid "**G**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1077
msgid ""
"Represents the offset into the global offset table at which the relocation "
"entry’s symbol will reside during execution."
msgstr ""

#: ../../../AMDGPUUsage.rst:1081
msgid "**GOT**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1081
msgid "Represents the address of the global offset table."
msgstr ""

#: ../../../AMDGPUUsage.rst:1085
msgid "**P**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1084
msgid ""
"Represents the place (section offset for ``et_rel`` or address for "
"``et_dyn``) of the storage unit being relocated (computed using "
"``r_offset``)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1089
msgid "**S**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1088
msgid ""
"Represents the value of the symbol whose index resides in the relocation "
"entry."
msgstr ""

#: ../../../AMDGPUUsage.rst:1091
msgid "The following relocation types are supported:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1093
msgid "AMDGPU ELF Relocation Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1097
msgid "Relocation Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:1097
msgid "Calculation"
msgstr ""

#: ../../../AMDGPUUsage.rst:1099
msgid "``R_AMDGPU_NONE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1100
msgid "``R_AMDGPU_ABS32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1100
msgid "(S + A) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1101
msgid "``R_AMDGPU_ABS32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1101
msgid "(S + A) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1102
msgid "``R_AMDGPU_ABS64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1102 ../../../AMDGPUUsage.rst:1105
msgid "S + A"
msgstr ""

#: ../../../AMDGPUUsage.rst:1103
msgid "``R_AMDGPU_REL32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1103 ../../../AMDGPUUsage.rst:1104
msgid "S + A - P"
msgstr ""

#: ../../../AMDGPUUsage.rst:1104
msgid "``R_AMDGPU_REL64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1105
msgid "``R_AMDGPU_ABS32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1105 ../../../AMDGPUUsage.rst:1652
msgid "6"
msgstr ""

#: ../../../AMDGPUUsage.rst:1106
msgid "``R_AMDGPU_GOTPCREL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1106 ../../../AMDGPUUsage.rst:1663
msgid "7"
msgstr ""

#: ../../../AMDGPUUsage.rst:1106
msgid "G + GOT + A - P"
msgstr ""

#: ../../../AMDGPUUsage.rst:1107
msgid "``R_AMDGPU_GOTPCREL32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1107 ../../../AMDGPUUsage.rst:1671
msgid "8"
msgstr ""

#: ../../../AMDGPUUsage.rst:1107
msgid "(G + GOT + A - P) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1108
msgid "``R_AMDGPU_GOTPCREL32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1108 ../../../AMDGPUUsage.rst:1679
msgid "9"
msgstr ""

#: ../../../AMDGPUUsage.rst:1108
msgid "(G + GOT + A - P) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1109
msgid "``R_AMDGPU_REL32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1109
msgid "(S + A - P) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1110
msgid "``R_AMDGPU_REL32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1110
msgid "(S + A - P) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1116
msgid "DWARF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1118
msgid ""
"Standard DWARF [DWARF]_ Version 2 sections can be generated. These contain "
"information that maps the code object executable code and data to the source "
"language constructs. It can be used by tools such as debuggers and profilers."
msgstr ""

#: ../../../AMDGPUUsage.rst:1125
msgid "The following address space mapping is used:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1127
msgid "AMDGPU DWARF Address Space Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:1131
msgid "DWARF Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:1135 ../../../AMDGPUUsage.rst:1136
#: ../../../AMDGPUUsage.rst:1137
msgid "*omitted*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1138
msgid "*not supported*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1141
msgid ""
"See :ref:`amdgpu-address-spaces` for infomration on the memory space "
"terminology used in the table."
msgstr ""

#: ../../../AMDGPUUsage.rst:1144
msgid ""
"An ``address_class`` attribute is generated on pointer type DIEs to specify "
"the DWARF address space of the value of the pointer when it is in the "
"*private* or *local* address space. Otherwise the attribute is omitted."
msgstr ""

#: ../../../AMDGPUUsage.rst:1148
msgid ""
"An ``XDEREF`` operation is generated in location list expressions for "
"variables that are allocated in the *private* and *local* address space. "
"Otherwise no ``XDREF`` is omitted."
msgstr ""

#: ../../../AMDGPUUsage.rst:1153
msgid "Register Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:1172
msgid "Source Text"
msgstr ""

#: ../../../AMDGPUUsage.rst:1182
msgid "Code Conventions"
msgstr ""

#: ../../../AMDGPUUsage.rst:1185
msgid "AMDHSA"
msgstr ""

#: ../../../AMDGPUUsage.rst:1187
msgid ""
"This section provides code conventions used when the target triple OS is "
"``amdhsa`` (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1191
msgid "Kernel Dispatch"
msgstr ""

#: ../../../AMDGPUUsage.rst:1193
msgid ""
"The HSA architected queuing language (AQL) defines a user space memory "
"interface that can be used to control the dispatch of kernels, in an agent "
"independent way. An agent can have zero or more AQL queues created for it "
"using the ROCm runtime, in which AQL packets (all of which are 64 bytes) can "
"be placed. See the *HSA Platform System Architecture Specification* [HSA]_ "
"for the AQL queue mechanics and packet layouts."
msgstr ""

#: ../../../AMDGPUUsage.rst:1200
msgid ""
"The packet processor of a kernel agent is responsible for detecting and "
"dispatching HSA kernels from the AQL queues associated with it. For AMD GPUs "
"the packet processor is implemented by the hardware command processor (CP), "
"asynchronous dispatch controller (ADC) and shader processor input controller "
"(SPI)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1206
msgid ""
"The ROCm runtime can be used to allocate an AQL queue object. It uses the "
"kernel mode driver to initialize and register the AQL queue with CP."
msgstr ""

#: ../../../AMDGPUUsage.rst:1209
msgid ""
"To dispatch a kernel the following actions are performed. This can occur in "
"the CPU host program, or from an HSA kernel executing on a GPU."
msgstr ""

#: ../../../AMDGPUUsage.rst:1212
msgid ""
"A pointer to an AQL queue for the kernel agent on which the kernel is to be "
"executed is obtained."
msgstr ""

#: ../../../AMDGPUUsage.rst:1214
msgid ""
"A pointer to the kernel descriptor (see :ref:`amdgpu-amdhsa-kernel-"
"descriptor`) of the kernel to execute is obtained. It must be for a kernel "
"that is contained in a code object that that was loaded by the ROCm runtime "
"on the kernel agent with which the AQL queue is associated."
msgstr ""

#: ../../../AMDGPUUsage.rst:1219
msgid ""
"Space is allocated for the kernel arguments using the ROCm runtime allocator "
"for a memory region with the kernarg property for the kernel agent that will "
"execute the kernel. It must be at least 16 byte aligned."
msgstr ""

#: ../../../AMDGPUUsage.rst:1222
msgid ""
"Kernel argument values are assigned to the kernel argument memory "
"allocation. The layout is defined in the *HSA Programmer’s Language "
"Reference* [HSA]_. For AMDGPU the kernel execution directly accesses the "
"kernel argument memory in the same way constant memory is accessed. (Note "
"that the HSA specification allows an implementation to copy the kernel "
"argument contents to another location that is accessed by the kernel.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1228
msgid ""
"An AQL kernel dispatch packet is created on the AQL queue. The ROCm runtime "
"api uses 64 bit atomic operations to reserve space in the AQL queue for the "
"packet. The packet must be set up, and the final write must use an atomic "
"store release to set the packet kind to ensure the packet contents are "
"visible to the kernel agent. AQL defines a doorbell signal mechanism to "
"notify the kernel agent that the AQL queue has been updated. These rules, "
"and the layout of the AQL queue and kernel dispatch packet is defined in the "
"*HSA System Architecture Specification* [HSA]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:1236
msgid ""
"A kernel dispatch packet includes information about the actual dispatch, "
"such as grid and work-group size, together with information from the code "
"object about the kernel, such as segment sizes. The ROCm runtime queries on "
"the kernel symbol can be used to obtain the code object values which are "
"recorded in the :ref:`amdgpu-code-object-metadata`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1241
msgid ""
"CP executes micro-code and is responsible for detecting and setting up the "
"GPU to execute the wavefronts of a kernel dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:1243
msgid ""
"CP ensures that when the a wavefront starts executing the kernel machine "
"code, the scalar general purpose registers (SGPR) and vector general purpose "
"registers (VGPR) are set up as required by the machine code. The required "
"setup is defined in the :ref:`amdgpu-amdhsa-kernel-descriptor`. The initial "
"register state is defined in :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1249
msgid ""
"The prolog of the kernel machine code (see :ref:`amdgpu-amdhsa-kernel-"
"prolog`) sets up the machine state as necessary before continuing executing "
"the machine code that corresponds to the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:1252
msgid ""
"When the kernel dispatch has completed execution, CP signals the completion "
"signal specified in the kernel dispatch packet if not 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:1258
msgid "Memory Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:1260
msgid "The memory space properties are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1262
msgid "AMDHSA Memory Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:1266
msgid "Memory Space Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:1266
msgid "HSA Segment Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:1266
msgid "Hardware Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:1266
msgid "Address Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:1266
msgid "NULL Value"
msgstr ""

#: ../../../AMDGPUUsage.rst:1269
msgid "Private"
msgstr ""

#: ../../../AMDGPUUsage.rst:1269
msgid "private"
msgstr ""

#: ../../../AMDGPUUsage.rst:1269
msgid "scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:1269 ../../../AMDGPUUsage.rst:1270
#: ../../../AMDGPUUsage.rst:1275 ../../../AMDGPUUsage.rst:1626
#: ../../../AMDGPUUsage.rst:1783
msgid "32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1269
msgid "0x00000000"
msgstr ""

#: ../../../AMDGPUUsage.rst:1270
msgid "Local"
msgstr ""

#: ../../../AMDGPUUsage.rst:1270
msgid "group"
msgstr ""

#: ../../../AMDGPUUsage.rst:1270
msgid "LDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:1270
msgid "0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1271 ../../../AMDGPUUsage.rst:2300
#: ../../../AMDGPUUsage.rst:2306 ../../../AMDGPUUsage.rst:2317
#: ../../../AMDGPUUsage.rst:2323 ../../../AMDGPUUsage.rst:2325
#: ../../../AMDGPUUsage.rst:2333 ../../../AMDGPUUsage.rst:2343
#: ../../../AMDGPUUsage.rst:2346 ../../../AMDGPUUsage.rst:2365
#: ../../../AMDGPUUsage.rst:2415 ../../../AMDGPUUsage.rst:2418
#: ../../../AMDGPUUsage.rst:2437 ../../../AMDGPUUsage.rst:2613
#: ../../../AMDGPUUsage.rst:2616 ../../../AMDGPUUsage.rst:2639
#: ../../../AMDGPUUsage.rst:2679 ../../../AMDGPUUsage.rst:2682
#: ../../../AMDGPUUsage.rst:2705 ../../../AMDGPUUsage.rst:2843
#: ../../../AMDGPUUsage.rst:2846 ../../../AMDGPUUsage.rst:2924
#: ../../../AMDGPUUsage.rst:3220 ../../../AMDGPUUsage.rst:3223
#: ../../../AMDGPUUsage.rst:3276 ../../../AMDGPUUsage.rst:3279
#: ../../../AMDGPUUsage.rst:3281 ../../../AMDGPUUsage.rst:3284
msgid "global"
msgstr ""

#: ../../../AMDGPUUsage.rst:1271 ../../../AMDGPUUsage.rst:1272
#: ../../../AMDGPUUsage.rst:1274
msgid "0x0000000000000000"
msgstr ""

#: ../../../AMDGPUUsage.rst:1272
msgid "constant"
msgstr ""

#: ../../../AMDGPUUsage.rst:1272
msgid "*same as global*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1274
msgid "Generic"
msgstr ""

#: ../../../AMDGPUUsage.rst:1274
msgid "flat"
msgstr ""

#: ../../../AMDGPUUsage.rst:1275
msgid "Region"
msgstr ""

#: ../../../AMDGPUUsage.rst:1275
msgid "N/A"
msgstr ""

#: ../../../AMDGPUUsage.rst:1275
msgid "GDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:1275
msgid "*not implemented for AMDHSA*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1279
msgid ""
"The global and constant memory spaces both use global virtual addresses, "
"which are the same virtual address space used by the CPU. However, some "
"virtual addresses may only be accessible to the CPU, some only accessible by "
"the GPU, and some by both."
msgstr ""

#: ../../../AMDGPUUsage.rst:1284
msgid ""
"Using the constant memory space indicates that the data will not change "
"during the execution of the kernel. This allows scalar read instructions to "
"be used. The vector and scalar L1 caches are invalidated of volatile data "
"before each kernel dispatch execution to allow constant memory to change "
"values between kernel dispatches."
msgstr ""

#: ../../../AMDGPUUsage.rst:1290
msgid ""
"The local memory space uses the hardware Local Data Store (LDS) which is "
"automatically allocated when the hardware creates work-groups of wavefronts, "
"and freed when all the wavefronts of a work-group have terminated. The data "
"store (DS) instructions can be used to access it."
msgstr ""

#: ../../../AMDGPUUsage.rst:1295
msgid ""
"The private memory space uses the hardware scratch memory support. If the "
"kernel uses scratch, then the hardware allocates memory that is accessed "
"using wavefront lane dword (4 byte) interleaving. The mapping used from "
"private address to physical address is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1300
msgid ""
"``wavefront-scratch-base + (private-address * wavefront-size * 4) + "
"(wavefront-lane-id * 4)``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1304
msgid ""
"There are different ways that the wavefront scratch base address is "
"determined by a wavefront (see :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`). This memory can be accessed in an interleaved manner using buffer "
"instruction with the scratch buffer descriptor and per wave scratch offset, "
"by the scratch instructions, or by flat instructions. If each lane of a "
"wavefront accesses the same private address, the interleaving results in "
"adjacent dwords being accessed and hence requires fewer cache lines to be "
"fetched. Multi-dword access is not supported except by flat and scratch "
"instructions in GFX9."
msgstr ""

#: ../../../AMDGPUUsage.rst:1313
msgid ""
"The generic address space uses the hardware flat address support available "
"in GFX7-GFX9. This uses two fixed ranges of virtual addresses (the private "
"and local appertures), that are outside the range of addressible global "
"memory, to map from a flat address to a private or local address."
msgstr ""

#: ../../../AMDGPUUsage.rst:1318
msgid ""
"FLAT instructions can take a flat address and access global, private "
"(scratch) and group (LDS) memory depending in if the address is within one "
"of the apperture ranges. Flat access to scratch requires hardware aperture "
"setup and setup in the kernel prologue (see :ref:`amdgpu-amdhsa-flat-"
"scratch`). Flat access to LDS requires hardware aperture setup and M0 (GFX7-"
"GFX8) register setup (see :ref:`amdgpu-amdhsa-m0`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1325
msgid ""
"To convert between a segment address and a flat address the base address of "
"the appertures address can be used. For GFX7-GFX8 these are available in "
"the :ref:`amdgpu-amdhsa-hsa-aql-queue` the address of which can be obtained "
"with Queue Ptr SGPR (see :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`). For GFX9 the appature base addresses are directly available as "
"inline constant registers ``SRC_SHARED_BASE/LIMIT`` and ``SRC_PRIVATE_BASE/"
"LIMIT``. In 64 bit address mode the apperture sizes are 2^32 bytes and the "
"base is aligned to 2^32 which makes it easier to convert from flat to "
"segment or segment to flat."
msgstr ""

#: ../../../AMDGPUUsage.rst:1335
msgid "HSA Image and Samplers"
msgstr ""

#: ../../../AMDGPUUsage.rst:1337
msgid ""
"Image and sample handles created by the ROCm runtime are 64 bit addresses of "
"a hardware 32 byte V# and 48 byte S# object respectively. In order to "
"support the HSA ``query_sampler`` operations two extra dwords are used to "
"store the HSA BRIG enumeration values for the queries that are not trivially "
"deducible from the S# representation."
msgstr ""

#: ../../../AMDGPUUsage.rst:1344
msgid "HSA Signals"
msgstr ""

#: ../../../AMDGPUUsage.rst:1346
msgid ""
"Signal handles created by the ROCm runtime are 64 bit addresses of a "
"structure allocated in memory accessible from both the CPU and GPU. The "
"structure is defined by the ROCm runtime and subject to change between "
"releases (see [AMD-ROCm-github]_)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1354
msgid "HSA AQL Queue"
msgstr ""

#: ../../../AMDGPUUsage.rst:1356
msgid ""
"The AQL queue structure is defined by the ROCm runtime and subject to change "
"between releases (see [AMD-ROCm-github]_). For some processors it contains "
"fields needed to implement certain language features such as the flat "
"address aperture bases. It also contains fields used by CP such as managing "
"the allocation of scratch memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:1365
msgid "Kernel Descriptor"
msgstr ""

#: ../../../AMDGPUUsage.rst:1367
msgid ""
"A kernel descriptor consists of the information needed by CP to initiate the "
"execution of a kernel, including the entry point address of the machine code "
"that implements the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:1372 ../../../AMDGPUUsage.rst:1376
msgid "Kernel Descriptor for GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:1374
msgid ""
"CP microcode requires the Kernel descritor to be allocated on 64 byte "
"alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:1380 ../../../AMDGPUUsage.rst:1470
#: ../../../AMDGPUUsage.rst:1635
msgid "Bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:1380 ../../../AMDGPUUsage.rst:1470
#: ../../../AMDGPUUsage.rst:1635
msgid "Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:1380 ../../../AMDGPUUsage.rst:1470
#: ../../../AMDGPUUsage.rst:1635
msgid "Field Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:1382
msgid "31:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:1382 ../../../AMDGPUUsage.rst:1391
#: ../../../AMDGPUUsage.rst:1399 ../../../AMDGPUUsage.rst:1419
#: ../../../AMDGPUUsage.rst:1426 ../../../AMDGPUUsage.rst:1459
msgid "4 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:1382
msgid "group_segment_fixed_size"
msgstr ""

#: ../../../AMDGPUUsage.rst:1382
msgid ""
"The amount of fixed local address space memory required for a work-group in "
"bytes. This does not include any dynamically allocated local address space "
"memory that may be added when the kernel is dispatched."
msgstr ""

#: ../../../AMDGPUUsage.rst:1391
msgid "63:32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1391
msgid "private_segment_fixed_size"
msgstr ""

#: ../../../AMDGPUUsage.rst:1391
msgid ""
"The amount of fixed private address space memory required for a work-item in "
"bytes. If is_dynamic_callstack is 1 then additional space must be added to "
"this value for the call stack."
msgstr ""

#: ../../../AMDGPUUsage.rst:1399
msgid "95:64"
msgstr ""

#: ../../../AMDGPUUsage.rst:1399
msgid "max_flat_workgroup_size"
msgstr ""

#: ../../../AMDGPUUsage.rst:1402
msgid "96"
msgstr ""

#: ../../../AMDGPUUsage.rst:1402 ../../../AMDGPUUsage.rst:1406
#: ../../../AMDGPUUsage.rst:1433 ../../../AMDGPUUsage.rst:1445
#: ../../../AMDGPUUsage.rst:1446 ../../../AMDGPUUsage.rst:1447
#: ../../../AMDGPUUsage.rst:1448 ../../../AMDGPUUsage.rst:1449
#: ../../../AMDGPUUsage.rst:1450 ../../../AMDGPUUsage.rst:1452
#: ../../../AMDGPUUsage.rst:1454 ../../../AMDGPUUsage.rst:1456
#: ../../../AMDGPUUsage.rst:1565 ../../../AMDGPUUsage.rst:1574
#: ../../../AMDGPUUsage.rst:1585 ../../../AMDGPUUsage.rst:1593
#: ../../../AMDGPUUsage.rst:1608 ../../../AMDGPUUsage.rst:1617
#: ../../../AMDGPUUsage.rst:1637 ../../../AMDGPUUsage.rst:1652
#: ../../../AMDGPUUsage.rst:1663 ../../../AMDGPUUsage.rst:1671
#: ../../../AMDGPUUsage.rst:1679 ../../../AMDGPUUsage.rst:1687
#: ../../../AMDGPUUsage.rst:1702 ../../../AMDGPUUsage.rst:1718
#: ../../../AMDGPUUsage.rst:1758 ../../../AMDGPUUsage.rst:1768
#: ../../../AMDGPUUsage.rst:1771 ../../../AMDGPUUsage.rst:1773
#: ../../../AMDGPUUsage.rst:1775 ../../../AMDGPUUsage.rst:1777
#: ../../../AMDGPUUsage.rst:1779 ../../../AMDGPUUsage.rst:1782
msgid "1 bit"
msgstr ""

#: ../../../AMDGPUUsage.rst:1402
msgid "is_dynamic_call_stack"
msgstr ""

#: ../../../AMDGPUUsage.rst:1406
msgid "97"
msgstr ""

#: ../../../AMDGPUUsage.rst:1406
msgid "is_xnack_enabled"
msgstr ""

#: ../../../AMDGPUUsage.rst:1406
msgid "Indicates if the generated machine code is capable of suppoting XNACK."
msgstr ""

#: ../../../AMDGPUUsage.rst:1409
msgid "127:98"
msgstr ""

#: ../../../AMDGPUUsage.rst:1409
msgid "30 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:1409 ../../../AMDGPUUsage.rst:1417
#: ../../../AMDGPUUsage.rst:1458 ../../../AMDGPUUsage.rst:1459
#: ../../../AMDGPUUsage.rst:1625 ../../../AMDGPUUsage.rst:1782
msgid "Reserved. Must be 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:1410
msgid "191:128"
msgstr ""

#: ../../../AMDGPUUsage.rst:1410
msgid "8 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:1410
msgid "kernel_code_entry_byte_offset"
msgstr ""

#: ../../../AMDGPUUsage.rst:1410
msgid ""
"Byte offset (possibly negative) from base address of kernel descriptor to "
"kernel's entry point instruction which must be 256 byte aligned."
msgstr ""

#: ../../../AMDGPUUsage.rst:1417
msgid "383:192"
msgstr ""

#: ../../../AMDGPUUsage.rst:1417
msgid "24 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:1419
msgid "415:384"
msgstr ""

#: ../../../AMDGPUUsage.rst:1419
msgid "compute_pgm_rsrc1"
msgstr ""

#: ../../../AMDGPUUsage.rst:1419
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC1`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc1_t-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1426
msgid "447:416"
msgstr ""

#: ../../../AMDGPUUsage.rst:1426
msgid "compute_pgm_rsrc2"
msgstr ""

#: ../../../AMDGPUUsage.rst:1426
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC2`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1433
msgid "448"
msgstr ""

#: ../../../AMDGPUUsage.rst:1433
msgid "enable_sgpr_private_segment _buffer"
msgstr ""

#: ../../../AMDGPUUsage.rst:1433
msgid ""
"Enable the setup of the SGPR user data registers (see :ref:`amdgpu-amdhsa-"
"initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1438
msgid ""
"The total number of SGPR user data registers requested must not exceed 16 "
"and match value in ``compute_pgm_rsrc2.user_sgpr.user_sgpr_count``. Any "
"requests beyond 16 will be ignored."
msgstr ""

#: ../../../AMDGPUUsage.rst:1445
msgid "449"
msgstr ""

#: ../../../AMDGPUUsage.rst:1445
msgid "enable_sgpr_dispatch_ptr"
msgstr ""

#: ../../../AMDGPUUsage.rst:1445 ../../../AMDGPUUsage.rst:1446
#: ../../../AMDGPUUsage.rst:1447 ../../../AMDGPUUsage.rst:1448
#: ../../../AMDGPUUsage.rst:1449 ../../../AMDGPUUsage.rst:1450
msgid "*see above*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1446
msgid "450"
msgstr ""

#: ../../../AMDGPUUsage.rst:1446
msgid "enable_sgpr_queue_ptr"
msgstr ""

#: ../../../AMDGPUUsage.rst:1447
msgid "451"
msgstr ""

#: ../../../AMDGPUUsage.rst:1447
msgid "enable_sgpr_kernarg_segment_ptr"
msgstr ""

#: ../../../AMDGPUUsage.rst:1448
msgid "452"
msgstr ""

#: ../../../AMDGPUUsage.rst:1448
msgid "enable_sgpr_dispatch_id"
msgstr ""

#: ../../../AMDGPUUsage.rst:1449
msgid "453"
msgstr ""

#: ../../../AMDGPUUsage.rst:1449
msgid "enable_sgpr_flat_scratch_init"
msgstr ""

#: ../../../AMDGPUUsage.rst:1450
msgid "454"
msgstr ""

#: ../../../AMDGPUUsage.rst:1450
msgid "enable_sgpr_private_segment _size"
msgstr ""

#: ../../../AMDGPUUsage.rst:1452
msgid "455"
msgstr ""

#: ../../../AMDGPUUsage.rst:1452
msgid "enable_sgpr_grid_workgroup _count_X"
msgstr ""

#: ../../../AMDGPUUsage.rst:1452 ../../../AMDGPUUsage.rst:1454
#: ../../../AMDGPUUsage.rst:1456
msgid "Not implemented in CP and should always be 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:1454
msgid "456"
msgstr ""

#: ../../../AMDGPUUsage.rst:1454
msgid "enable_sgpr_grid_workgroup _count_Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:1456
msgid "457"
msgstr ""

#: ../../../AMDGPUUsage.rst:1456
msgid "enable_sgpr_grid_workgroup _count_Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:1458
msgid "463:458"
msgstr ""

#: ../../../AMDGPUUsage.rst:1458 ../../../AMDGPUUsage.rst:1472
#: ../../../AMDGPUUsage.rst:1625
msgid "6 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:1459
msgid "511:464"
msgstr ""

#: ../../../AMDGPUUsage.rst:1461
msgid "512"
msgstr ""

#: ../../../AMDGPUUsage.rst:1461
msgid "**Total size 64 bytes.**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1466
msgid "compute_pgm_rsrc1 for GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:1472
msgid "5:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:1472
msgid "granulated_workitem_vgpr_count"
msgstr ""

#: ../../../AMDGPUUsage.rst:1472
msgid ""
"Number of vector registers used by each work-item, granularity is device "
"specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1479
msgid "GFX6-9"
msgstr ""

#: ../../../AMDGPUUsage.rst:1478
msgid "roundup((max-vgpg + 1) / 4) - 1"
msgstr ""

#: ../../../AMDGPUUsage.rst:1481
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.VGPRS``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1483
msgid "9:6"
msgstr ""

#: ../../../AMDGPUUsage.rst:1483
msgid "4 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:1483
msgid "granulated_wavefront_sgpr_count"
msgstr ""

#: ../../../AMDGPUUsage.rst:1483
msgid ""
"Number of scalar registers used by a wavefront, granularity is device "
"specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1489
msgid "GFX6-8"
msgstr ""

#: ../../../AMDGPUUsage.rst:1489
msgid "roundup((max-sgpg + 1) / 8) - 1"
msgstr ""

#: ../../../AMDGPUUsage.rst:1493 ../../../AMDGPUUsage.rst:1949
#: ../../../AMDGPUUsage.rst:2100 ../../../AMDGPUUsage.rst:2134
msgid "GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:1492
msgid "roundup((max-sgpg + 1) / 16) - 1"
msgstr ""

#: ../../../AMDGPUUsage.rst:1495
msgid ""
"Includes the special SGPRs for VCC, Flat Scratch (for GFX7 onwards) and "
"XNACK (for GFX8 onwards). It does not include the 16 SGPR added if a trap "
"handler is enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:1503
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.SGPRS``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1505
msgid "11:10"
msgstr ""

#: ../../../AMDGPUUsage.rst:1505 ../../../AMDGPUUsage.rst:1513
#: ../../../AMDGPUUsage.rst:1526 ../../../AMDGPUUsage.rst:1539
#: ../../../AMDGPUUsage.rst:1552 ../../../AMDGPUUsage.rst:1694
msgid "2 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:1505
msgid "priority"
msgstr ""

#: ../../../AMDGPUUsage.rst:1505 ../../../AMDGPUUsage.rst:1565
#: ../../../AMDGPUUsage.rst:1585 ../../../AMDGPUUsage.rst:1608
#: ../../../AMDGPUUsage.rst:1617 ../../../AMDGPUUsage.rst:1702
#: ../../../AMDGPUUsage.rst:1718 ../../../AMDGPUUsage.rst:1737
msgid "Must be 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:1507
msgid "Start executing wavefront at the specified priority."
msgstr ""

#: ../../../AMDGPUUsage.rst:1510
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.PRIORITY``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1513
msgid "13:12"
msgstr ""

#: ../../../AMDGPUUsage.rst:1513
msgid "float_mode_round_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1513
msgid ""
"Wavefront starts execution with specified rounding mode for single (32 bit) "
"floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:1520 ../../../AMDGPUUsage.rst:1533
msgid ""
"Floating point rounding mode values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-rounding-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1524 ../../../AMDGPUUsage.rst:1537
#: ../../../AMDGPUUsage.rst:1550 ../../../AMDGPUUsage.rst:1563
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.FLOAT_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1526
msgid "15:14"
msgstr ""

#: ../../../AMDGPUUsage.rst:1526
msgid "float_mode_round_16_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:1526
msgid ""
"Wavefront starts execution with specified rounding denorm mode for half/"
"double (16 and 64 bit) floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:1539
msgid "17:16"
msgstr ""

#: ../../../AMDGPUUsage.rst:1539
msgid "float_mode_denorm_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1539
msgid ""
"Wavefront starts execution with specified denorm mode for single (32 bit)  "
"floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:1546 ../../../AMDGPUUsage.rst:1559
msgid ""
"Floating point denorm mode values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-denorm-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1552
msgid "19:18"
msgstr ""

#: ../../../AMDGPUUsage.rst:1552
msgid "float_mode_denorm_16_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:1552
msgid ""
"Wavefront starts execution with specified denorm mode for half/double (16 "
"and 64 bit) floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:1565
msgid "20"
msgstr ""

#: ../../../AMDGPUUsage.rst:1565
msgid "priv"
msgstr ""

#: ../../../AMDGPUUsage.rst:1567
msgid "Start executing wavefront in privilege trap handler mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1571
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.PRIV``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1574
msgid "21"
msgstr ""

#: ../../../AMDGPUUsage.rst:1574
msgid "enable_dx10_clamp"
msgstr ""

#: ../../../AMDGPUUsage.rst:1574
msgid ""
"Wavefront starts execution with DX10 clamp mode enabled. Used by the vector "
"ALU to force DX-10 style treatment of NaN's (when set, clamp NaN to zero, "
"otherwise pass NaN through)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1583
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.DX10_CLAMP``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1585
msgid "22"
msgstr ""

#: ../../../AMDGPUUsage.rst:1585
msgid "debug_mode"
msgstr ""

#: ../../../AMDGPUUsage.rst:1587
msgid "Start executing wavefront in single step mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1590
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.DEBUG_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1593
msgid "23"
msgstr ""

#: ../../../AMDGPUUsage.rst:1593
msgid "enable_ieee_mode"
msgstr ""

#: ../../../AMDGPUUsage.rst:1593
msgid ""
"Wavefront starts execution with IEEE mode enabled. Floating point opcodes "
"that support exception flag gathering will quiet and propagate signaling-NaN "
"inputs per IEEE 754-2008. Min_dx10 and max_dx10 become IEEE 754-2008 "
"compliant due to signaling-NaN propagation and quieting."
msgstr ""

#: ../../../AMDGPUUsage.rst:1606
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.IEEE_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1608 ../../../AMDGPUUsage.rst:1758
msgid "24"
msgstr ""

#: ../../../AMDGPUUsage.rst:1608
msgid "bulky"
msgstr ""

#: ../../../AMDGPUUsage.rst:1610
msgid "Only one work-group allowed to execute on a compute unit."
msgstr ""

#: ../../../AMDGPUUsage.rst:1614
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.BULKY``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1617 ../../../AMDGPUUsage.rst:1768
msgid "25"
msgstr ""

#: ../../../AMDGPUUsage.rst:1617
msgid "cdbg_user"
msgstr ""

#: ../../../AMDGPUUsage.rst:1619
msgid "Flag that can be used to control debugging code."
msgstr ""

#: ../../../AMDGPUUsage.rst:1622
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.CDBG_USER``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1625
msgid "31:26"
msgstr ""

#: ../../../AMDGPUUsage.rst:1626
msgid "**Total size 4 bytes**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1631
msgid "compute_pgm_rsrc2 for GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:1637
msgid "enable_sgpr_private_segment _wave_offset"
msgstr ""

#: ../../../AMDGPUUsage.rst:1637
msgid ""
"Enable the setup of the SGPR wave scratch offset system register (see :ref:"
"`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1642
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.SCRATCH_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1644
msgid "5:1"
msgstr ""

#: ../../../AMDGPUUsage.rst:1644
msgid "5 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:1644
msgid "user_sgpr_count"
msgstr ""

#: ../../../AMDGPUUsage.rst:1644
msgid ""
"The total number of SGPR user data registers requested. This number must "
"match the number of user data registers enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:1650
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.USER_SGPR``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1652
msgid "enable_trap_handler"
msgstr ""

#: ../../../AMDGPUUsage.rst:1652
msgid ""
"Set to 1 if code contains a TRAP instruction which requires a trap handler "
"to be enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:1657
msgid ""
"CP sets ``COMPUTE_PGM_RSRC2.TRAP_PRESENT`` if the runtime has installed a "
"trap handler regardless of the setting of this field."
msgstr ""

#: ../../../AMDGPUUsage.rst:1663
msgid "enable_sgpr_workgroup_id_x"
msgstr ""

#: ../../../AMDGPUUsage.rst:1663
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the X "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1669
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_X_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1671
msgid "enable_sgpr_workgroup_id_y"
msgstr ""

#: ../../../AMDGPUUsage.rst:1671
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the Y "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1677
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_Y_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1679
msgid "enable_sgpr_workgroup_id_z"
msgstr ""

#: ../../../AMDGPUUsage.rst:1679
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the Z "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1685
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_Z_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1687
msgid "enable_sgpr_workgroup_info"
msgstr ""

#: ../../../AMDGPUUsage.rst:1687
msgid ""
"Enable the setup of the system SGPR register for work-group information "
"(see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1692
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_SIZE_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1694
msgid "12:11"
msgstr ""

#: ../../../AMDGPUUsage.rst:1694
msgid "enable_vgpr_workitem_id"
msgstr ""

#: ../../../AMDGPUUsage.rst:1694
msgid ""
"Enable the setup of the VGPR system registers used for the work-item ID. :"
"ref:`amdgpu-amdhsa-system-vgpr-work-item-id-enumeration-values-table` "
"defines the values."
msgstr ""

#: ../../../AMDGPUUsage.rst:1700
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TIDIG_CMP_CNT``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1702
msgid "13"
msgstr ""

#: ../../../AMDGPUUsage.rst:1702
msgid "enable_exception_address_watch"
msgstr ""

#: ../../../AMDGPUUsage.rst:1704
msgid ""
"Wavefront starts execution with address watch exceptions enabled which are "
"generated when L1 has witnessed a thread access an *address of interest*."
msgstr ""

#: ../../../AMDGPUUsage.rst:1712
msgid ""
"CP is responsible for filling in the address watch bit in "
"``COMPUTE_PGM_RSRC2.EXCP_EN_MSB`` according to what the runtime requests."
msgstr ""

#: ../../../AMDGPUUsage.rst:1718
msgid "14"
msgstr ""

#: ../../../AMDGPUUsage.rst:1718
msgid "enable_exception_memory"
msgstr ""

#: ../../../AMDGPUUsage.rst:1720
msgid ""
"Wavefront starts execution with memory violation exceptions exceptions "
"enabled which are generated when a memory violation has occurred for this "
"wave from L1 or LDS (write-to-read-only-memory, mis-aligned atomic, LDS "
"address out of range, illegal address, etc.)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1732
msgid ""
"CP sets the memory violation bit in ``COMPUTE_PGM_RSRC2.EXCP_EN_MSB`` "
"according to what the runtime requests."
msgstr ""

#: ../../../AMDGPUUsage.rst:1737
msgid "23:15"
msgstr ""

#: ../../../AMDGPUUsage.rst:1737
msgid "9 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:1737
msgid "granulated_lds_size"
msgstr ""

#: ../../../AMDGPUUsage.rst:1739
msgid ""
"CP uses the rounded value from the dispatch packet, not this value, as the "
"dispatch may contain dynamically allocated group segment memory. CP writes "
"directly to ``COMPUTE_PGM_RSRC2.LDS_SIZE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1748
msgid ""
"Amount of group segment (LDS) to allocate for each work-group. Granularity "
"is device specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1753
msgid "GFX6:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1754
msgid "roundup(lds-size / (64 * 4))"
msgstr ""

#: ../../../AMDGPUUsage.rst:1756
msgid "GFX7-GFX9:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1756
msgid "roundup(lds-size / (128 * 4))"
msgstr ""

#: ../../../AMDGPUUsage.rst:1758
msgid "enable_exception_ieee_754_fp _invalid_operation"
msgstr ""

#: ../../../AMDGPUUsage.rst:1758
msgid "Wavefront starts execution with specified exceptions enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:1762
msgid ""
"Used by CP to set up ``COMPUTE_PGM_RSRC2.EXCP_EN`` (set from bits 0..6)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1766
msgid "IEEE 754 FP Invalid Operation"
msgstr ""

#: ../../../AMDGPUUsage.rst:1768
msgid "enable_exception_fp_denormal _source"
msgstr ""

#: ../../../AMDGPUUsage.rst:1768
msgid "FP Denormal one or more input operands is a denormal number"
msgstr ""

#: ../../../AMDGPUUsage.rst:1771
msgid "26"
msgstr ""

#: ../../../AMDGPUUsage.rst:1771
msgid "enable_exception_ieee_754_fp _division_by_zero"
msgstr ""

#: ../../../AMDGPUUsage.rst:1771
msgid "IEEE 754 FP Division by Zero"
msgstr ""

#: ../../../AMDGPUUsage.rst:1773
msgid "27"
msgstr ""

#: ../../../AMDGPUUsage.rst:1773
msgid "enable_exception_ieee_754_fp _overflow"
msgstr ""

#: ../../../AMDGPUUsage.rst:1773
msgid "IEEE 754 FP FP Overflow"
msgstr ""

#: ../../../AMDGPUUsage.rst:1775
msgid "28"
msgstr ""

#: ../../../AMDGPUUsage.rst:1775
msgid "enable_exception_ieee_754_fp _underflow"
msgstr ""

#: ../../../AMDGPUUsage.rst:1775
msgid "IEEE 754 FP Underflow"
msgstr ""

#: ../../../AMDGPUUsage.rst:1777
msgid "29"
msgstr ""

#: ../../../AMDGPUUsage.rst:1777
msgid "enable_exception_ieee_754_fp _inexact"
msgstr ""

#: ../../../AMDGPUUsage.rst:1777
msgid "IEEE 754 FP Inexact"
msgstr ""

#: ../../../AMDGPUUsage.rst:1779
msgid "30"
msgstr ""

#: ../../../AMDGPUUsage.rst:1779
msgid "enable_exception_int_divide_by _zero"
msgstr ""

#: ../../../AMDGPUUsage.rst:1779
msgid "Integer Division by Zero (rcp_iflag_f32 instruction only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1782
msgid "31"
msgstr ""

#: ../../../AMDGPUUsage.rst:1783
msgid "**Total size 4 bytes.**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1788
msgid "Floating Point Rounding Mode Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:1792 ../../../AMDGPUUsage.rst:1806
#: ../../../AMDGPUUsage.rst:1821
msgid "Enumeration Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:1794
msgid "AMD_FLOAT_ROUND_MODE_NEAR_EVEN"
msgstr ""

#: ../../../AMDGPUUsage.rst:1794
msgid "Round Ties To Even"
msgstr ""

#: ../../../AMDGPUUsage.rst:1795
msgid "AMD_FLOAT_ROUND_MODE_PLUS_INFINITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:1795
msgid "Round Toward +infinity"
msgstr ""

#: ../../../AMDGPUUsage.rst:1796
msgid "AMD_FLOAT_ROUND_MODE_MINUS_INFINITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:1796
msgid "Round Toward -infinity"
msgstr ""

#: ../../../AMDGPUUsage.rst:1797
msgid "AMD_FLOAT_ROUND_MODE_ZERO"
msgstr ""

#: ../../../AMDGPUUsage.rst:1797
msgid "Round Toward 0"
msgstr ""

#: ../../../AMDGPUUsage.rst:1802
msgid "Floating Point Denorm Mode Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:1808
msgid "AMD_FLOAT_DENORM_MODE_FLUSH_SRC_DST"
msgstr ""

#: ../../../AMDGPUUsage.rst:1808
msgid "Flush Source and Destination Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:1810
msgid "AMD_FLOAT_DENORM_MODE_FLUSH_DST"
msgstr ""

#: ../../../AMDGPUUsage.rst:1810
msgid "Flush Output Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:1811
msgid "AMD_FLOAT_DENORM_MODE_FLUSH_SRC"
msgstr ""

#: ../../../AMDGPUUsage.rst:1811
msgid "Flush Source Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:1812
msgid "AMD_FLOAT_DENORM_MODE_FLUSH_NONE"
msgstr ""

#: ../../../AMDGPUUsage.rst:1812
msgid "No Flush"
msgstr ""

#: ../../../AMDGPUUsage.rst:1817
msgid "System VGPR Work-Item ID Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:1823
msgid "AMD_SYSTEM_VGPR_WORKITEM_ID_X"
msgstr ""

#: ../../../AMDGPUUsage.rst:1823
msgid "Set work-item X dimension ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:1824
msgid "AMD_SYSTEM_VGPR_WORKITEM_ID_X_Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:1824
msgid "Set work-item X and Y dimensions ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:1826
msgid "AMD_SYSTEM_VGPR_WORKITEM_ID_X_Y_Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:1826
msgid "Set work-item X, Y and Z dimensions ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:1828
msgid "AMD_SYSTEM_VGPR_WORKITEM_ID_UNDEFINED"
msgstr ""

#: ../../../AMDGPUUsage.rst:1828
msgid "Undefined."
msgstr ""

#: ../../../AMDGPUUsage.rst:1834
msgid "Initial Kernel Execution State"
msgstr ""

#: ../../../AMDGPUUsage.rst:1836
msgid ""
"This section defines the register state that will be set up by the packet "
"processor prior to the start of execution of every wavefront. This is "
"limited by the constraints of the hardware controllers of CP/ADC/SPI."
msgstr ""

#: ../../../AMDGPUUsage.rst:1840
msgid ""
"The order of the SGPR registers is defined, but the compiler can specify "
"which ones are actually setup in the kernel descriptor using the "
"``enable_sgpr_*`` bit fields (see :ref:`amdgpu-amdhsa-kernel-descriptor`). "
"The register numbers used for enabled registers are dense starting at SGPR0: "
"the first enabled register is SGPR0, the next enabled register is SGPR1 "
"etc.; disabled registers do not have an SGPR number."
msgstr ""

#: ../../../AMDGPUUsage.rst:1847
msgid ""
"The initial SGPRs comprise up to 16 User SRGPs that are set by CP and apply "
"to all waves of the grid. It is possible to specify more than 16 User SGPRs "
"using the ``enable_sgpr_*`` bit fields, in which case only the first 16 are "
"actually initialized. These are then immediately followed by the System "
"SGPRs that are set up by ADC/SPI and can have different values for each wave "
"of the grid dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:1854
msgid ""
"SGPR register initial state is defined in :ref:`amdgpu-amdhsa-sgpr-register-"
"set-up-order-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1857
msgid "SGPR Register Set Up Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:1861
msgid "SGPR Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:1861 ../../../AMDGPUUsage.rst:2039
msgid "Name (kernel descriptor enable field)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1861
msgid "Number of SGPRs"
msgstr ""

#: ../../../AMDGPUUsage.rst:1865 ../../../AMDGPUUsage.rst:2043
msgid "First"
msgstr ""

#: ../../../AMDGPUUsage.rst:1865
msgid "Private Segment Buffer (enable_sgpr_private _segment_buffer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1865
msgid ""
"V# that can be used, together with Scratch Wave Offset as an offset, to "
"access the private memory space using a segment address."
msgstr ""

#: ../../../AMDGPUUsage.rst:1871
msgid "CP uses the value provided by the runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:1873 ../../../AMDGPUUsage.rst:1876
#: ../../../AMDGPUUsage.rst:1880 ../../../AMDGPUUsage.rst:1889
#: ../../../AMDGPUUsage.rst:1892 ../../../AMDGPUUsage.rst:1951
#: ../../../AMDGPUUsage.rst:1970 ../../../AMDGPUUsage.rst:1978
#: ../../../AMDGPUUsage.rst:1989 ../../../AMDGPUUsage.rst:2000
#: ../../../AMDGPUUsage.rst:2003 ../../../AMDGPUUsage.rst:2006
#: ../../../AMDGPUUsage.rst:2009 ../../../AMDGPUUsage.rst:2012
#: ../../../AMDGPUUsage.rst:2046 ../../../AMDGPUUsage.rst:2049
msgid "then"
msgstr ""

#: ../../../AMDGPUUsage.rst:1873
msgid "Dispatch Ptr (enable_sgpr_dispatch_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1873
msgid ""
"64 bit address of AQL dispatch packet for kernel dispatch actually executing."
msgstr ""

#: ../../../AMDGPUUsage.rst:1876
msgid "Queue Ptr (enable_sgpr_queue_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1876
msgid ""
"64 bit address of amd_queue_t object for AQL queue on which the dispatch "
"packet was queued."
msgstr ""

#: ../../../AMDGPUUsage.rst:1880
msgid "Kernarg Segment Ptr (enable_sgpr_kernarg _segment_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1880
msgid ""
"64 bit address of Kernarg segment. This is directly copied from the "
"kernarg_address in the kernel dispatch packet."
msgstr ""

#: ../../../AMDGPUUsage.rst:1886 ../../../AMDGPUUsage.rst:1959
msgid ""
"Having CP load it once avoids loading it at the beginning of every wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:1889
msgid "Dispatch Id (enable_sgpr_dispatch_id)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1889
msgid "64 bit Dispatch ID of the dispatch packet being executed."
msgstr ""

#: ../../../AMDGPUUsage.rst:1892
msgid "Flat Scratch Init (enable_sgpr_flat_scratch _init)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1892
msgid "This is 2 SGPRs:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1894 ../../../AMDGPUUsage.rst:2113
msgid "GFX6"
msgstr ""

#: ../../../AMDGPUUsage.rst:1895
msgid "Not supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:1932
msgid "GFX7-GFX8"
msgstr ""

#: ../../../AMDGPUUsage.rst:1897
msgid ""
"The first SGPR is a 32 bit byte offset from ``SH_HIDDEN_PRIVATE_BASE_VIMID`` "
"to per SPI base of memory for scratch for the queue executing the kernel "
"dispatch. CP obtains this from the runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:1906
msgid ""
"This is the same offset used in computing the Scratch Segment Buffer base "
"address. The value of Scratch Wave Offset must be added by the kernel "
"machine code and moved to SGPRn-4 for use as the FLAT SCRATCH BASE in flat "
"memory instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:1917
msgid ""
"The second SGPR is 32 bit byte size of a single work-item’s scratch memory "
"usage. This is directly loaded from the kernel dispatch packet Private "
"Segment Byte Size and rounded up to a multiple of DWORD."
msgstr ""

#: ../../../AMDGPUUsage.rst:1927
msgid ""
"The kernel code must move to SGPRn-3 for use as the FLAT SCRATCH SIZE in "
"flat memory instructions. Having CP load it once avoids loading it at the "
"beginning of every wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:1935
msgid ""
"This is the 64 bit base address of the per SPI scratch backing memory "
"managed by SPI for the queue executing the kernel dispatch. CP obtains this "
"from the runtime (and divides it if there are multiple Shader Arrays each "
"with its own SPI). The value of Scratch Wave Offset must be added by the "
"kernel machine code and moved to SGPRn-4 and SGPRn-3 for use as the FLAT "
"SCRATCH BASE in flat memory instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:1951
msgid "Private Segment Size (enable_sgpr_private _segment_size)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1951
msgid ""
"The 32 bit byte size of a single work-item’s scratch memory allocation. This "
"is the value from the kernel dispatch packet Private Segment Byte Size "
"rounded up by CP to a multiple of DWORD."
msgstr ""

#: ../../../AMDGPUUsage.rst:1963
msgid ""
"This is not used for GFX7-GFX8 since it is the same value as the second SGPR "
"of Flat Scratch Init. However, it may be needed for GFX9 which changes the "
"meaning of the Flat Scratch Init value."
msgstr ""

#: ../../../AMDGPUUsage.rst:1970
msgid "Grid Work-Group Count X (enable_sgpr_grid _workgroup_count_X)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1970
msgid ""
"32 bit count of the number of work-groups in the X dimension for the grid "
"being executed. Computed from the fields in the kernel dispatch packet as "
"((grid_size.x + workgroup_size.x - 1) / workgroup_size.x)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1978
msgid ""
"Grid Work-Group Count Y (enable_sgpr_grid _workgroup_count_Y && less than 16 "
"previous SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1978
msgid ""
"32 bit count of the number of work-groups in the Y dimension for the grid "
"being executed. Computed from the fields in the kernel dispatch packet as "
"((grid_size.y + workgroup_size.y - 1) / workgroupSize.y)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1987 ../../../AMDGPUUsage.rst:1998
msgid "Only initialized if <16 previous SGPRs initialized."
msgstr ""

#: ../../../AMDGPUUsage.rst:1989
msgid ""
"Grid Work-Group Count Z (enable_sgpr_grid _workgroup_count_Z && less than 16 "
"previous SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1989
msgid ""
"32 bit count of the number of work-groups in the Z dimension for the grid "
"being executed. Computed from the fields in the kernel dispatch packet as "
"((grid_size.z + workgroup_size.z - 1) / workgroupSize.z)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2000
msgid "Work-Group Id X (enable_sgpr_workgroup_id _X)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2000
msgid "32 bit work-group id in X dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2003
msgid "Work-Group Id Y (enable_sgpr_workgroup_id _Y)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2003
msgid "32 bit work-group id in Y dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2006
msgid "Work-Group Id Z (enable_sgpr_workgroup_id _Z)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2006
msgid "32 bit work-group id in Z dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2009
msgid "Work-Group Info (enable_sgpr_workgroup _info)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2009
msgid ""
"{first_wave, 14’b0000, ordered_append_term[10:0], "
"threadgroup_size_in_waves[5:0]}"
msgstr ""

#: ../../../AMDGPUUsage.rst:2012
msgid "Scratch Wave Offset (enable_sgpr_private _segment_wave_offset)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2012
msgid ""
"32 bit byte offset from base of scratch base of queue executing the kernel "
"dispatch. Must be used as an offset with Private segment address when using "
"Scratch Segment Buffer. It must be used to set up FLAT SCRATCH for flat "
"addressing (see :ref:`amdgpu-amdhsa-flat-scratch`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2025
msgid ""
"The order of the VGPR registers is defined, but the compiler can specify "
"which ones are actually setup in the kernel descriptor using the "
"``enable_vgpr*`` bit fields (see :ref:`amdgpu-amdhsa-kernel-descriptor`). "
"The register numbers used for enabled registers are dense starting at VGPR0: "
"the first enabled register is VGPR0, the next enabled register is VGPR1 "
"etc.; disabled registers do not have a VGPR number."
msgstr ""

#: ../../../AMDGPUUsage.rst:2032
msgid ""
"VGPR register initial state is defined in :ref:`amdgpu-amdhsa-vgpr-register-"
"set-up-order-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2035
msgid "VGPR Register Set Up Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:2039
msgid "VGPR Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:2039
msgid "Number of VGPRs"
msgstr ""

#: ../../../AMDGPUUsage.rst:2043
msgid "Work-Item Id X (Always initialized)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2043
msgid "32 bit work item id in X dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:2046
msgid "Work-Item Id Y (enable_vgpr_workitem_id > 0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2046
msgid "32 bit work item id in Y dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:2049
msgid "Work-Item Id Z (enable_vgpr_workitem_id > 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2049
msgid "32 bit work item id in Z dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:2054
msgid ""
"The setting of registers is is done by GPU CP/ADC/SPI hardware as follows:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2056
msgid ""
"SGPRs before the Work-Group Ids are set by CP using the 16 User Data "
"registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:2058
msgid ""
"Work-group Id registers X, Y, Z are set by ADC which supports any "
"combination including none."
msgstr ""

#: ../../../AMDGPUUsage.rst:2060
msgid ""
"Scratch Wave Offset is set by SPI in a per wave basis which is why its value "
"cannot included with the flat scratch init value which is per queue."
msgstr ""

#: ../../../AMDGPUUsage.rst:2062
msgid ""
"The VGPRs are set by SPI which only supports specifying either (X), (X, Y) "
"or (X, Y, Z)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2065
msgid ""
"Flat Scratch register pair are adjacent SGRRs so they can be moved as a 64 "
"bit value to the hardware required SGPRn-3 and SGPRn-4 respectively."
msgstr ""

#: ../../../AMDGPUUsage.rst:2068
msgid ""
"The global segment can be accessed either using buffer instructions (GFX6 "
"which has V# 64 bit address support), flat instructions (GFX7-9), or global "
"instructions (GFX9)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2072
msgid ""
"If buffer operations are used then the compiler can generate a V# with the "
"following properties:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2075
msgid "base address of 0"
msgstr ""

#: ../../../AMDGPUUsage.rst:2076
msgid "no swizzle"
msgstr ""

#: ../../../AMDGPUUsage.rst:2077
msgid "ATC: 1 if IOMMU present (such as APU)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2078
msgid "ptr64: 1"
msgstr ""

#: ../../../AMDGPUUsage.rst:2079
msgid ""
"MTYPE set to support memory coherence that matches the runtime (such as CC "
"for APU and NC for dGPU)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2085
msgid "Kernel Prolog"
msgstr ""

#: ../../../AMDGPUUsage.rst:2090
msgid "M0"
msgstr ""

#: ../../../AMDGPUUsage.rst:2096
msgid "GFX6-GFX8"
msgstr ""

#: ../../../AMDGPUUsage.rst:2093
msgid ""
"The M0 register must be initialized with a value at least the total LDS size "
"if the kernel may access LDS via DS or flat operations. Total LDS size is "
"available in dispatch packet. For M0, it is also possible to use maximum "
"possible value of LDS for given target (0x7FFF for GFX6 and 0xFFFF for GFX7-"
"GFX8)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2099
msgid ""
"The M0 register is not used for range checking LDS accesses and so does not "
"need to be initialized in the prolog."
msgstr ""

#: ../../../AMDGPUUsage.rst:2105
msgid "Flat Scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:2107
msgid ""
"If the kernel may use flat operations to access scratch memory, the prolog "
"code must set up FLAT_SCRATCH register pair (FLAT_SCRATCH_LO/FLAT_SCRATCH_HI "
"which are in SGPRn-4/SGPRn-3). Initialization uses Flat Scratch Init and "
"Scratch Wave Offset SGPR registers (see :ref:`amdgpu-amdhsa-initial-kernel-"
"execution-state`):"
msgstr ""

#: ../../../AMDGPUUsage.rst:2113
msgid "Flat scratch is not supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:2128
msgid "GFX7-8"
msgstr ""

#: ../../../AMDGPUUsage.rst:2116
msgid ""
"The low word of Flat Scratch Init is 32 bit byte offset from "
"``SH_HIDDEN_PRIVATE_BASE_VIMID`` to the base of scratch backing memory being "
"managed by SPI for the queue executing the kernel dispatch. This is the same "
"value used in the Scratch Segment Buffer V# base address. The prolog must "
"add the value of Scratch Wave Offset to get the wave's byte scratch backing "
"memory offset from ``SH_HIDDEN_PRIVATE_BASE_VIMID``. Since FLAT_SCRATCH_LO "
"is in units of 256 bytes, the offset must be right shifted by 8 before "
"moving into FLAT_SCRATCH_LO."
msgstr ""

#: ../../../AMDGPUUsage.rst:2124
msgid ""
"The second word of Flat Scratch Init is 32 bit byte size of a single work-"
"items scratch memory usage. This is directly loaded from the kernel dispatch "
"packet Private Segment Byte Size and rounded up to a multiple of DWORD. "
"Having CP load it once avoids loading it at the beginning of every "
"wavefront. The prolog must move it to FLAT_SCRATCH_LO for use as FLAT "
"SCRATCH SIZE."
msgstr ""

#: ../../../AMDGPUUsage.rst:2131
msgid ""
"The Flat Scratch Init is the 64 bit address of the base of scratch backing "
"memory being managed by SPI for the queue executing the kernel dispatch. The "
"prolog must add the value of Scratch Wave Offset and moved to the "
"FLAT_SCRATCH pair for use as the flat scratch base in flat memory "
"instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:2139
msgid "Memory Model"
msgstr ""

#: ../../../AMDGPUUsage.rst:2141
msgid ""
"This section describes the mapping of LLVM memory model onto AMDGPU machine "
"code (see :ref:`memmodel`). *The implementation is WIP.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:2150
msgid ""
"The AMDGPU backend supports the memory synchronization scopes specified in :"
"ref:`amdgpu-memory-scopes`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2153
msgid ""
"The code sequences used to implement the memory model are defined in table :"
"ref:`amdgpu-amdhsa-memory-model-code-sequences-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2156
msgid ""
"The sequences specify the order of instructions that a single thread must "
"execute. The ``s_waitcnt`` and ``buffer_wbinvl1_vol`` are defined with "
"respect to other memory instructions executed by the same thread. This "
"allows them to be moved earlier or later which can allow them to be combined "
"with other instances of the same instruction, or hoisted/sunk out of loops "
"to improve performance. Only the instructions related to the memory model "
"are given; additional ``s_waitcnt`` instructions are required to ensure "
"registers are defined before being used. These may be able to be combined "
"with the memory model ``s_waitcnt`` instructions as described above."
msgstr ""

#: ../../../AMDGPUUsage.rst:2166
msgid ""
"The AMDGPU memory model supports both the HSA [HSA]_ memory model, and the "
"OpenCL [OpenCL]_ memory model. The HSA memory model uses a single happens-"
"before relation for all address spaces (see :ref:`amdgpu-address-spaces`). "
"The OpenCL memory model which has separate happens-before relations for the "
"global and local address spaces, and only a fence specifying both global and "
"local address space joins the relationships. Since the LLVM ``memfence`` "
"instruction does not allow an address space to be specified the OpenCL fence "
"has to convervatively assume both local and global address space was "
"specified. However, optimizations can often be done to eliminate the "
"additional ``s_waitcnt``instructions when there are no intervening "
"corresponding ``ds/flat_load/store/atomic`` memory instructions. The code "
"sequences in the table indicate what can be omitted for the OpenCL memory. "
"The target triple environment is used to determine if the source language is "
"OpenCL (see :ref:`amdgpu-opencl`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2180
msgid ""
"``ds/flat_load/store/atomic`` instructions to local memory are termed LDS "
"operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:2183
msgid ""
"``buffer/global/flat_load/store/atomic`` instructions to global memory are "
"termed vector memory operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:2186
msgid "For GFX6-GFX9:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2188
msgid "Each agent has multiple compute units (CU)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2189
msgid "Each CU has multiple SIMDs that execute wavefronts."
msgstr ""

#: ../../../AMDGPUUsage.rst:2190
msgid ""
"The wavefronts for a single work-group are executed in the same CU but may "
"be executed by different SIMDs."
msgstr ""

#: ../../../AMDGPUUsage.rst:2192
msgid ""
"Each CU has a single LDS memory shared by the wavefronts of the work-groups "
"executing on it."
msgstr ""

#: ../../../AMDGPUUsage.rst:2194
msgid ""
"All LDS operations of a CU are performed as wavefront wide operations in a "
"global order and involve no caching. Completion is reported to a wavefront "
"in execution order."
msgstr ""

#: ../../../AMDGPUUsage.rst:2197
msgid ""
"The LDS memory has multiple request queues shared by the SIMDs of a CU. "
"Therefore, the LDS operations performed by different waves of a work-group "
"can be reordered relative to each other, which can result in reordering the "
"visibility of vector memory operations with respect to LDS operations of "
"other wavefronts in the same work-group. A ``s_waitcnt lgkmcnt(0)`` is "
"required to ensure synchronization between LDS operations and vector memory "
"operations between waves of a work-group, but not between operations "
"performed by the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2205
msgid ""
"The vector memory operations are performed as wavefront wide operations and "
"completion is reported to a wavefront in execution order. The exception is "
"that for GFX7-9 ``flat_load/store/atomic`` instructions can report out of "
"vector memory order if they access LDS memory, and out of LDS operation "
"order if they access global memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:2210
msgid ""
"The vector memory operations access a vector L1 cache shared by all "
"wavefronts on a CU. Therefore, no special action is required for coherence "
"between wavefronts in the same work-group. A ``buffer_wbinvl1_vol`` is "
"required for coherence between waves executing in different work-groups as "
"they may be executing on different CUs."
msgstr ""

#: ../../../AMDGPUUsage.rst:2215
msgid ""
"The scalar memory operations access a scalar L1 cache shared by all "
"wavefronts on a group of CUs. The scalar and vector L1 caches are not "
"coherent. However, scalar operations are used in a restricted way so do not "
"impact the memory model. See :ref:`amdgpu-amdhsa-memory-spaces`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2219
msgid ""
"The vector and scalar memory operations use an L2 cache shared by all CUs on "
"the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:2221
msgid ""
"The L2 cache has independent channels to service disjoint ranges of virtual "
"addresses."
msgstr ""

#: ../../../AMDGPUUsage.rst:2223
msgid ""
"Each CU has a separate request queue per channel. Therefore, the vector and "
"scalar memory operations performed by waves executing in different work-"
"groups (which may be executing on different CUs) of an agent can be "
"reordered relative to each other. A ``s_waitcnt vmcnt(0)`` is required to "
"ensure synchronization between vector memory operations of different CUs. It "
"ensures a previous vector memory operation has completed before executing a "
"subsequent vector memory or LDS operation and so can be used to meet the "
"requirements of acquire and release."
msgstr ""

#: ../../../AMDGPUUsage.rst:2231
msgid ""
"The L2 cache can be kept coherent with other agents on some targets, or "
"ranges of virtual addresses can be set up to bypass it to ensure system "
"coherence."
msgstr ""

#: ../../../AMDGPUUsage.rst:2234
msgid ""
"Private address space uses ``buffer_load/store`` using the scratch V# "
"(GFX6-8), or ``scratch_load/store`` (GFX9). Since only a single thread is "
"accessing the memory, atomic memory orderings are not meaningful and all "
"accesses are treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:2239
msgid ""
"Constant address space uses ``buffer/global_load`` instructions (or "
"equivalent scalar memory instructions). Since the constant address space "
"contents do not change during the execution of a kernel dispatch it is not "
"legal to perform stores, and atomic memory orderings are not meaningful and "
"all access are treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:2245
msgid ""
"A memory synchronization scope wider than work-group is not meaningful for "
"the group (LDS) address space and is treated as work-group."
msgstr ""

#: ../../../AMDGPUUsage.rst:2248
msgid ""
"The memory model does not support the region address space which is treated "
"as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:2251
msgid ""
"Acquire memory ordering is not meaningful on store atomic instructions and "
"is treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:2254
msgid ""
"Release memory ordering is not meaningful on load atomic instructions and is "
"treated a non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:2257
msgid ""
"Acquire-release memory ordering is not meaningful on load or store atomic "
"instructions and is treated as acquire and release respectively."
msgstr ""

#: ../../../AMDGPUUsage.rst:2260
msgid ""
"AMDGPU backend only uses scalar memory operations to access memory that is "
"proven to not change during the execution of the kernel dispatch. This "
"includes constant address space and global address space for program scope "
"const variables. Therefore the kernel machine code does not have to maintain "
"the scalar L1 cache to ensure it is coherent with the vector L1 cache. The "
"scalar and vector L1 caches are invalidated between kernel dispatches by CP "
"since constant address space data may change between kernel dispatch "
"executions. See :ref:`amdgpu-amdhsa-memory-spaces`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2269
msgid ""
"The one execption is if scalar writes are used to spill SGPR registers. In "
"this case the AMDGPU backend ensures the memory location used to spill is "
"never accessed by vector memory operations at the same time. If scalar "
"writes are used then a ``s_dcache_wb`` is inserted before the ``s_endpgm`` "
"and before a function return since the locations may be used for vector "
"memory instructions by a future wave that uses the same scratch area, or a "
"function call that creates a frame at the same address, respectively. There "
"is no need for a ``s_dcache_inv`` as all scalar writes are write-before-read "
"in the same thread."
msgstr ""

#: ../../../AMDGPUUsage.rst:2278
msgid ""
"Scratch backing memory (which is used for the private address space) is "
"accessed with MTYPE NC_NV (non-coherenent non-volatile). Since the private "
"address space is only accessed by a single thread, and is always write-"
"before-read, there is never a need to invalidate these entries from the L1 "
"cache. Hence all cache invalidates are done as ``*_vol`` to only invalidate "
"the volatile cache lines."
msgstr ""

#: ../../../AMDGPUUsage.rst:2285
msgid ""
"On dGPU the kernarg backing memory is accessed as UC (uncached) to avoid "
"needing to invalidate the L2 cache. This also causes it to be treated as non-"
"volatile and so is not invalidated by ``*_vol``. On APU it is accessed as CC "
"(cache coherent) and so the L2 cache will coherent with the CPU and other "
"agents."
msgstr ""

#: ../../../AMDGPUUsage.rst:2290
msgid "AMDHSA Memory Model Code Sequences GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:2294
msgid "LLVM Instr"
msgstr ""

#: ../../../AMDGPUUsage.rst:2294
msgid "LLVM Memory Ordering"
msgstr ""

#: ../../../AMDGPUUsage.rst:2294
msgid "LLVM Memory Sync Scope"
msgstr ""

#: ../../../AMDGPUUsage.rst:2294
msgid "AMDGPU Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:2294
msgid "AMDGPU Machine Code"
msgstr ""

#: ../../../AMDGPUUsage.rst:2298
msgid "**Non-Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:2300 ../../../AMDGPUUsage.rst:2305
msgid "load"
msgstr ""

#: ../../../AMDGPUUsage.rst:2301 ../../../AMDGPUUsage.rst:2307
#: ../../../AMDGPUUsage.rst:2318 ../../../AMDGPUUsage.rst:2324
#: ../../../AMDGPUUsage.rst:2326 ../../../AMDGPUUsage.rst:2334
#: ../../../AMDGPUUsage.rst:2345 ../../../AMDGPUUsage.rst:2348
#: ../../../AMDGPUUsage.rst:2389 ../../../AMDGPUUsage.rst:2417
#: ../../../AMDGPUUsage.rst:2420 ../../../AMDGPUUsage.rst:2461
#: ../../../AMDGPUUsage.rst:2615 ../../../AMDGPUUsage.rst:2617
#: ../../../AMDGPUUsage.rst:2640 ../../../AMDGPUUsage.rst:2681
#: ../../../AMDGPUUsage.rst:2683 ../../../AMDGPUUsage.rst:2706
#: ../../../AMDGPUUsage.rst:2845 ../../../AMDGPUUsage.rst:2886
#: ../../../AMDGPUUsage.rst:2987 ../../../AMDGPUUsage.rst:3222
#: ../../../AMDGPUUsage.rst:3225 ../../../AMDGPUUsage.rst:3278
#: ../../../AMDGPUUsage.rst:3280 ../../../AMDGPUUsage.rst:3283
#: ../../../AMDGPUUsage.rst:3285
msgid "generic"
msgstr ""

#: ../../../AMDGPUUsage.rst:2300
msgid "non-volatile"
msgstr ""

#: ../../../AMDGPUUsage.rst:2301 ../../../AMDGPUUsage.rst:2317
msgid "buffer/global/flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:2303
msgid "volatile"
msgstr ""

#: ../../../AMDGPUUsage.rst:2303 ../../../AMDGPUUsage.rst:2323
msgid "buffer/global/flat_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:2305 ../../../AMDGPUUsage.rst:2308
#: ../../../AMDGPUUsage.rst:2320 ../../../AMDGPUUsage.rst:2330
#: ../../../AMDGPUUsage.rst:2338 ../../../AMDGPUUsage.rst:2344
#: ../../../AMDGPUUsage.rst:2347 ../../../AMDGPUUsage.rst:2416
#: ../../../AMDGPUUsage.rst:2419 ../../../AMDGPUUsage.rst:2614
#: ../../../AMDGPUUsage.rst:2638 ../../../AMDGPUUsage.rst:2680
#: ../../../AMDGPUUsage.rst:2704 ../../../AMDGPUUsage.rst:2844
#: ../../../AMDGPUUsage.rst:2868 ../../../AMDGPUUsage.rst:3221
#: ../../../AMDGPUUsage.rst:3224 ../../../AMDGPUUsage.rst:3277
#: ../../../AMDGPUUsage.rst:3282
msgid "local"
msgstr ""

#: ../../../AMDGPUUsage.rst:2305 ../../../AMDGPUUsage.rst:2320
msgid "ds_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:2306 ../../../AMDGPUUsage.rst:2308
msgid "store"
msgstr ""

#: ../../../AMDGPUUsage.rst:2306 ../../../AMDGPUUsage.rst:2325
#: ../../../AMDGPUUsage.rst:2637
msgid "buffer/global/flat_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:2308 ../../../AMDGPUUsage.rst:2330
#: ../../../AMDGPUUsage.rst:2638
msgid "ds_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:2309
msgid "**Unordered Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:2311 ../../../AMDGPUUsage.rst:2317
#: ../../../AMDGPUUsage.rst:2320 ../../../AMDGPUUsage.rst:2323
#: ../../../AMDGPUUsage.rst:2343 ../../../AMDGPUUsage.rst:2346
#: ../../../AMDGPUUsage.rst:2347 ../../../AMDGPUUsage.rst:2365
#: ../../../AMDGPUUsage.rst:2389 ../../../AMDGPUUsage.rst:3220
#: ../../../AMDGPUUsage.rst:3223
msgid "load atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:2311 ../../../AMDGPUUsage.rst:2312
#: ../../../AMDGPUUsage.rst:2313 ../../../AMDGPUUsage.rst:3304
msgid "unordered"
msgstr ""

#: ../../../AMDGPUUsage.rst:2311 ../../../AMDGPUUsage.rst:2312
#: ../../../AMDGPUUsage.rst:2313
msgid "*any*"
msgstr ""

#: ../../../AMDGPUUsage.rst:2311 ../../../AMDGPUUsage.rst:2312
msgid "*Same as non-atomic*."
msgstr ""

#: ../../../AMDGPUUsage.rst:2312 ../../../AMDGPUUsage.rst:2325
#: ../../../AMDGPUUsage.rst:2330 ../../../AMDGPUUsage.rst:2613
#: ../../../AMDGPUUsage.rst:2616 ../../../AMDGPUUsage.rst:2638
#: ../../../AMDGPUUsage.rst:2639 ../../../AMDGPUUsage.rst:3276
#: ../../../AMDGPUUsage.rst:3279
msgid "store atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:2313 ../../../AMDGPUUsage.rst:2333
#: ../../../AMDGPUUsage.rst:2338 ../../../AMDGPUUsage.rst:2415
#: ../../../AMDGPUUsage.rst:2418 ../../../AMDGPUUsage.rst:2419
#: ../../../AMDGPUUsage.rst:2437 ../../../AMDGPUUsage.rst:2461
#: ../../../AMDGPUUsage.rst:2679 ../../../AMDGPUUsage.rst:2682
#: ../../../AMDGPUUsage.rst:2704 ../../../AMDGPUUsage.rst:2705
#: ../../../AMDGPUUsage.rst:2843 ../../../AMDGPUUsage.rst:2846
#: ../../../AMDGPUUsage.rst:2868 ../../../AMDGPUUsage.rst:2886
#: ../../../AMDGPUUsage.rst:2924 ../../../AMDGPUUsage.rst:2987
#: ../../../AMDGPUUsage.rst:3281 ../../../AMDGPUUsage.rst:3284
msgid "atomicrmw"
msgstr ""

#: ../../../AMDGPUUsage.rst:2313
msgid "*Same as monotonic atomic*."
msgstr ""

#: ../../../AMDGPUUsage.rst:2315
msgid "**Monotonic Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:2317 ../../../AMDGPUUsage.rst:2320
#: ../../../AMDGPUUsage.rst:2323 ../../../AMDGPUUsage.rst:2325
#: ../../../AMDGPUUsage.rst:2330 ../../../AMDGPUUsage.rst:2333
#: ../../../AMDGPUUsage.rst:2338 ../../../AMDGPUUsage.rst:3305
msgid "monotonic"
msgstr ""

#: ../../../AMDGPUUsage.rst:2317 ../../../AMDGPUUsage.rst:2320
#: ../../../AMDGPUUsage.rst:2325 ../../../AMDGPUUsage.rst:2330
#: ../../../AMDGPUUsage.rst:2333 ../../../AMDGPUUsage.rst:2338
#: ../../../AMDGPUUsage.rst:2343 ../../../AMDGPUUsage.rst:2415
#: ../../../AMDGPUUsage.rst:2488 ../../../AMDGPUUsage.rst:2613
#: ../../../AMDGPUUsage.rst:2679 ../../../AMDGPUUsage.rst:2745
#: ../../../AMDGPUUsage.rst:2843 ../../../AMDGPUUsage.rst:3053
#: ../../../AMDGPUUsage.rst:3220 ../../../AMDGPUUsage.rst:3276
#: ../../../AMDGPUUsage.rst:3281 ../../../AMDGPUUsage.rst:3286
msgid "singlethread"
msgstr ""

#: ../../../AMDGPUUsage.rst:2318 ../../../AMDGPUUsage.rst:2321
#: ../../../AMDGPUUsage.rst:2326 ../../../AMDGPUUsage.rst:2331
#: ../../../AMDGPUUsage.rst:2334 ../../../AMDGPUUsage.rst:2339
#: ../../../AMDGPUUsage.rst:2344 ../../../AMDGPUUsage.rst:2416
#: ../../../AMDGPUUsage.rst:2489 ../../../AMDGPUUsage.rst:2614
#: ../../../AMDGPUUsage.rst:2680 ../../../AMDGPUUsage.rst:2746
#: ../../../AMDGPUUsage.rst:2844 ../../../AMDGPUUsage.rst:3054
#: ../../../AMDGPUUsage.rst:3221 ../../../AMDGPUUsage.rst:3277
#: ../../../AMDGPUUsage.rst:3282 ../../../AMDGPUUsage.rst:3287
msgid "wavefront"
msgstr ""

#: ../../../AMDGPUUsage.rst:2319 ../../../AMDGPUUsage.rst:2322
#: ../../../AMDGPUUsage.rst:2327 ../../../AMDGPUUsage.rst:2332
#: ../../../AMDGPUUsage.rst:2335 ../../../AMDGPUUsage.rst:2340
#: ../../../AMDGPUUsage.rst:2346 ../../../AMDGPUUsage.rst:2347
#: ../../../AMDGPUUsage.rst:2418 ../../../AMDGPUUsage.rst:2419
#: ../../../AMDGPUUsage.rst:2490 ../../../AMDGPUUsage.rst:2616
#: ../../../AMDGPUUsage.rst:2638 ../../../AMDGPUUsage.rst:2682
#: ../../../AMDGPUUsage.rst:2704 ../../../AMDGPUUsage.rst:2747
#: ../../../AMDGPUUsage.rst:2846 ../../../AMDGPUUsage.rst:2868
#: ../../../AMDGPUUsage.rst:2886 ../../../AMDGPUUsage.rst:3055
#: ../../../AMDGPUUsage.rst:3222 ../../../AMDGPUUsage.rst:3278
#: ../../../AMDGPUUsage.rst:3283 ../../../AMDGPUUsage.rst:3288
msgid "workgroup"
msgstr ""

#: ../../../AMDGPUUsage.rst:2323 ../../../AMDGPUUsage.rst:2328
#: ../../../AMDGPUUsage.rst:2336 ../../../AMDGPUUsage.rst:2365
#: ../../../AMDGPUUsage.rst:2389 ../../../AMDGPUUsage.rst:2437
#: ../../../AMDGPUUsage.rst:2461 ../../../AMDGPUUsage.rst:2535
#: ../../../AMDGPUUsage.rst:2639 ../../../AMDGPUUsage.rst:2705
#: ../../../AMDGPUUsage.rst:2785 ../../../AMDGPUUsage.rst:2924
#: ../../../AMDGPUUsage.rst:2987 ../../../AMDGPUUsage.rst:3124
#: ../../../AMDGPUUsage.rst:3223 ../../../AMDGPUUsage.rst:3279
#: ../../../AMDGPUUsage.rst:3284 ../../../AMDGPUUsage.rst:3289
msgid "agent"
msgstr ""

#: ../../../AMDGPUUsage.rst:2324 ../../../AMDGPUUsage.rst:2329
#: ../../../AMDGPUUsage.rst:2337 ../../../AMDGPUUsage.rst:2366
#: ../../../AMDGPUUsage.rst:2390 ../../../AMDGPUUsage.rst:2438
#: ../../../AMDGPUUsage.rst:2462 ../../../AMDGPUUsage.rst:2536
#: ../../../AMDGPUUsage.rst:2640 ../../../AMDGPUUsage.rst:2706
#: ../../../AMDGPUUsage.rst:2786 ../../../AMDGPUUsage.rst:2925
#: ../../../AMDGPUUsage.rst:2988 ../../../AMDGPUUsage.rst:3125
#: ../../../AMDGPUUsage.rst:3224 ../../../AMDGPUUsage.rst:3280
#: ../../../AMDGPUUsage.rst:3285 ../../../AMDGPUUsage.rst:3290
msgid "system"
msgstr ""

#: ../../../AMDGPUUsage.rst:2333 ../../../AMDGPUUsage.rst:2703
msgid "buffer/global/flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:2338 ../../../AMDGPUUsage.rst:2704
#: ../../../AMDGPUUsage.rst:2868
msgid "ds_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:2341
msgid "**Acquire Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:2343 ../../../AMDGPUUsage.rst:2346
#: ../../../AMDGPUUsage.rst:2347 ../../../AMDGPUUsage.rst:2365
#: ../../../AMDGPUUsage.rst:2389 ../../../AMDGPUUsage.rst:2415
#: ../../../AMDGPUUsage.rst:2418 ../../../AMDGPUUsage.rst:2419
#: ../../../AMDGPUUsage.rst:2437 ../../../AMDGPUUsage.rst:2461
#: ../../../AMDGPUUsage.rst:2488 ../../../AMDGPUUsage.rst:2490
#: ../../../AMDGPUUsage.rst:2535 ../../../AMDGPUUsage.rst:3306
msgid "acquire"
msgstr ""

#: ../../../AMDGPUUsage.rst:2343
msgid "buffer/global/ds/flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:2346
msgid "buffer/global_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:2347
msgid "ds/flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:2348 ../../../AMDGPUUsage.rst:2490
#: ../../../AMDGPUUsage.rst:2616 ../../../AMDGPUUsage.rst:2682
#: ../../../AMDGPUUsage.rst:2747 ../../../AMDGPUUsage.rst:2846
#: ../../../AMDGPUUsage.rst:2869 ../../../AMDGPUUsage.rst:2886
#: ../../../AMDGPUUsage.rst:2908 ../../../AMDGPUUsage.rst:3055
msgid "s_waitcnt lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2350 ../../../AMDGPUUsage.rst:2422
#: ../../../AMDGPUUsage.rst:2618 ../../../AMDGPUUsage.rst:2684
#: ../../../AMDGPUUsage.rst:2848 ../../../AMDGPUUsage.rst:2871
#: ../../../AMDGPUUsage.rst:2888 ../../../AMDGPUUsage.rst:2910
msgid "If OpenCL, omit waitcnt."
msgstr ""

#: ../../../AMDGPUUsage.rst:2352 ../../../AMDGPUUsage.rst:2424
#: ../../../AMDGPUUsage.rst:2522 ../../../AMDGPUUsage.rst:2601
#: ../../../AMDGPUUsage.rst:2873 ../../../AMDGPUUsage.rst:2912
#: ../../../AMDGPUUsage.rst:3075 ../../../AMDGPUUsage.rst:3204
msgid ""
"Must happen before any following global/generic load/load atomic/store/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:2358 ../../../AMDGPUUsage.rst:2879
#: ../../../AMDGPUUsage.rst:2918
msgid ""
"Ensures any following global data read is no older than the load atomic "
"value being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:2365
msgid "buffer/global_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:2367 ../../../AMDGPUUsage.rst:2438
#: ../../../AMDGPUUsage.rst:2964 ../../../AMDGPUUsage.rst:3223
msgid "s_waitcnt vmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2369 ../../../AMDGPUUsage.rst:2395
#: ../../../AMDGPUUsage.rst:2440 ../../../AMDGPUUsage.rst:2467
#: ../../../AMDGPUUsage.rst:2966 ../../../AMDGPUUsage.rst:3032
msgid "Must happen before following buffer_wbinvl1_vol."
msgstr ""

#: ../../../AMDGPUUsage.rst:2372
msgid "Ensures the load has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:2377 ../../../AMDGPUUsage.rst:2403
#: ../../../AMDGPUUsage.rst:2449 ../../../AMDGPUUsage.rst:2476
#: ../../../AMDGPUUsage.rst:2599 ../../../AMDGPUUsage.rst:2975
#: ../../../AMDGPUUsage.rst:3041 ../../../AMDGPUUsage.rst:3202
msgid "buffer_wbinvl1_vol"
msgstr ""

#: ../../../AMDGPUUsage.rst:2379 ../../../AMDGPUUsage.rst:2405
#: ../../../AMDGPUUsage.rst:2451 ../../../AMDGPUUsage.rst:2478
#: ../../../AMDGPUUsage.rst:2977 ../../../AMDGPUUsage.rst:3043
msgid ""
"Must happen before any following global/generic load/load atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:2384 ../../../AMDGPUUsage.rst:2410
#: ../../../AMDGPUUsage.rst:2456 ../../../AMDGPUUsage.rst:2483
#: ../../../AMDGPUUsage.rst:2606 ../../../AMDGPUUsage.rst:2982
#: ../../../AMDGPUUsage.rst:3048
msgid "Ensures that following loads will not see stale global data."
msgstr ""

#: ../../../AMDGPUUsage.rst:2389
msgid "flat_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:2390 ../../../AMDGPUUsage.rst:2462
#: ../../../AMDGPUUsage.rst:2535 ../../../AMDGPUUsage.rst:2639
#: ../../../AMDGPUUsage.rst:2705 ../../../AMDGPUUsage.rst:2785
#: ../../../AMDGPUUsage.rst:2924 ../../../AMDGPUUsage.rst:2987
#: ../../../AMDGPUUsage.rst:3027 ../../../AMDGPUUsage.rst:3124
msgid "s_waitcnt vmcnt(0) & lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2393
msgid "If OpenCL omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2398
msgid "Ensures the flat_load has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:2415 ../../../AMDGPUUsage.rst:2679
#: ../../../AMDGPUUsage.rst:2843
msgid "buffer/global/ds/flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:2418 ../../../AMDGPUUsage.rst:2437
#: ../../../AMDGPUUsage.rst:2867 ../../../AMDGPUUsage.rst:2963
msgid "buffer/global_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:2419
msgid "ds/flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:2420
msgid "waitcnt lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2430
msgid ""
"Ensures any following global data read is no older than the atomicrmw value "
"being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:2443 ../../../AMDGPUUsage.rst:2470
#: ../../../AMDGPUUsage.rst:2969 ../../../AMDGPUUsage.rst:3035
msgid "Ensures the atomicrmw has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:2461 ../../../AMDGPUUsage.rst:2907
#: ../../../AMDGPUUsage.rst:3026
msgid "flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:2465 ../../../AMDGPUUsage.rst:2642
#: ../../../AMDGPUUsage.rst:2708 ../../../AMDGPUUsage.rst:2927
#: ../../../AMDGPUUsage.rst:2990 ../../../AMDGPUUsage.rst:3030
msgid "If OpenCL, omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2488 ../../../AMDGPUUsage.rst:2490
#: ../../../AMDGPUUsage.rst:2535 ../../../AMDGPUUsage.rst:2745
#: ../../../AMDGPUUsage.rst:2747 ../../../AMDGPUUsage.rst:2785
#: ../../../AMDGPUUsage.rst:3053 ../../../AMDGPUUsage.rst:3055
#: ../../../AMDGPUUsage.rst:3124 ../../../AMDGPUUsage.rst:3286
msgid "fence"
msgstr ""

#: ../../../AMDGPUUsage.rst:2492
msgid ""
"If OpenCL and address space is not generic, omit waitcnt. However, since "
"LLVM currently has no address space on the fence need to conservatively "
"always generate. If fence had an address space then set to address space of "
"OpenCL fence flag, or to generic if both local and global flags are "
"specified."
msgstr ""

#: ../../../AMDGPUUsage.rst:2511
msgid ""
"Must happen after any preceding local/generic load atomic/atomicrmw with an "
"equal or wider sync scope and memory ordering stronger than unordered (this "
"is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2528
msgid ""
"Ensures any following global data read is no older than the value read by "
"the fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:2538 ../../../AMDGPUUsage.rst:2788
#: ../../../AMDGPUUsage.rst:3127
msgid ""
"If OpenCL and address space is not generic, omit lgkmcnt(0). However, since "
"LLVM currently has no address space on the fence need to conservatively "
"always generate (see comment for previous fence)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2550 ../../../AMDGPUUsage.rst:2644
#: ../../../AMDGPUUsage.rst:2710 ../../../AMDGPUUsage.rst:2800
#: ../../../AMDGPUUsage.rst:2929 ../../../AMDGPUUsage.rst:2992
#: ../../../AMDGPUUsage.rst:3139
msgid ""
"Could be split into separate s_waitcnt vmcnt(0) and s_waitcnt lgkmcnt(0) to "
"allow them to be independently moved according to the following rules."
msgstr ""

#: ../../../AMDGPUUsage.rst:2559
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load "
"atomic/atomicrmw with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2571
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding group/generic load "
"atomic/atomicrmw with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2583 ../../../AMDGPUUsage.rst:3162
msgid "Must happen before the following buffer_wbinvl1_vol."
msgstr ""

#: ../../../AMDGPUUsage.rst:2586
msgid ""
"Ensures that the fence-paired atomic has completed before invalidating the "
"cache. Therefore any following locations read must be no older than the "
"value read by the fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:2611
msgid "**Release Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:2613 ../../../AMDGPUUsage.rst:2616
#: ../../../AMDGPUUsage.rst:2638 ../../../AMDGPUUsage.rst:2639
#: ../../../AMDGPUUsage.rst:2679 ../../../AMDGPUUsage.rst:2682
#: ../../../AMDGPUUsage.rst:2704 ../../../AMDGPUUsage.rst:2705
#: ../../../AMDGPUUsage.rst:2745 ../../../AMDGPUUsage.rst:2747
#: ../../../AMDGPUUsage.rst:2785 ../../../AMDGPUUsage.rst:3311
msgid "release"
msgstr ""

#: ../../../AMDGPUUsage.rst:2613 ../../../AMDGPUUsage.rst:2678
msgid "buffer/global/ds/flat_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:2620 ../../../AMDGPUUsage.rst:2686
#: ../../../AMDGPUUsage.rst:2850 ../../../AMDGPUUsage.rst:2890
msgid ""
"Must happen after any preceding local/generic load/store/load atomic/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:2626 ../../../AMDGPUUsage.rst:2667
msgid "Must happen before the following store."
msgstr ""

#: ../../../AMDGPUUsage.rst:2629
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:2653 ../../../AMDGPUUsage.rst:2719
#: ../../../AMDGPUUsage.rst:2809 ../../../AMDGPUUsage.rst:2938
#: ../../../AMDGPUUsage.rst:3001 ../../../AMDGPUUsage.rst:3148
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load/store/"
"load atomic/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:2660 ../../../AMDGPUUsage.rst:2726
#: ../../../AMDGPUUsage.rst:2816 ../../../AMDGPUUsage.rst:2945
#: ../../../AMDGPUUsage.rst:3008 ../../../AMDGPUUsage.rst:3155
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding local/generic load/"
"store/load atomic/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:2670
msgid ""
"Ensures that all memory operations to global have completed before "
"performing the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:2692 ../../../AMDGPUUsage.rst:2733
#: ../../../AMDGPUUsage.rst:2856 ../../../AMDGPUUsage.rst:2896
#: ../../../AMDGPUUsage.rst:2952 ../../../AMDGPUUsage.rst:3015
msgid "Must happen before the following atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:2695 ../../../AMDGPUUsage.rst:2859
#: ../../../AMDGPUUsage.rst:2899
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:2736
msgid ""
"Ensures that all memory operations to global and local have completed before "
"performing the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:2744
msgid "buffer/global/ds/flat_atomic*"
msgstr ""

#: ../../../AMDGPUUsage.rst:2749 ../../../AMDGPUUsage.rst:3057
msgid ""
"If OpenCL and address space is not generic, omit waitcnt. However, since "
"LLVM currently has no address space on the fence need to conservatively "
"always generate (see comment for previous fence)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2761 ../../../AMDGPUUsage.rst:3069
msgid ""
"Must happen after any preceding local/generic load/load atomic/store/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:2767 ../../../AMDGPUUsage.rst:2823
msgid ""
"Must happen before any following store atomic/atomicrmw with an equal or "
"wider sync scope and memory ordering stronger than unordered (this is termed "
"the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2777
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the following fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:2833
msgid ""
"Ensures that all memory operations to global have completed before "
"performing the following fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:2841
msgid "**Acquire-Release Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:2843 ../../../AMDGPUUsage.rst:2846
#: ../../../AMDGPUUsage.rst:2868 ../../../AMDGPUUsage.rst:2886
#: ../../../AMDGPUUsage.rst:2924 ../../../AMDGPUUsage.rst:2987
#: ../../../AMDGPUUsage.rst:3053 ../../../AMDGPUUsage.rst:3055
#: ../../../AMDGPUUsage.rst:3124 ../../../AMDGPUUsage.rst:3317
msgid "acq_rel"
msgstr ""

#: ../../../AMDGPUUsage.rst:2955 ../../../AMDGPUUsage.rst:3018
msgid ""
"Ensures that all memory operations to global have completed before "
"performing the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:3081
msgid ""
"Ensures that all memory operations to local have completed before performing "
"any following global memory operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:3088
msgid ""
"Ensures that the preceding local/generic load atomic/atomicrmw with an equal "
"or wider sync scope and memory ordering stronger than unordered (this is "
"termed the fence-paired-atomic) has completed before following global memory "
"operations. This satisfies the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:3106
msgid ""
"Ensures that all previous memory operations have completed before a "
"following local/generic store atomic/atomicrmw with an equal or wider sync "
"scope and memory ordering stronger than unordered (this is termed the fence-"
"paired-atomic). This satisfies the requirements of release."
msgstr ""

#: ../../../AMDGPUUsage.rst:3165
msgid ""
"Ensures that the preceding global/local/generic load atomic/atomicrmw with "
"an equal or wider sync scope and memory ordering stronger than unordered "
"(this is termed the fence-paired-atomic) has completed before invalidating "
"the cache. This satisfies the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:3183
msgid ""
"Ensures that all previous memory operations have completed before a "
"following global/local/generic store atomic/atomicrmw with an equal or wider "
"sync scope and memory ordering stronger than unordered (this is termed the "
"fence-paired-atomic). This satisfies the requirements of release."
msgstr ""

#: ../../../AMDGPUUsage.rst:3210
msgid ""
"Ensures that following loads will not see stale global data. This satisfies "
"the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:3218
msgid "**Sequential Consistent Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3220 ../../../AMDGPUUsage.rst:3223
#: ../../../AMDGPUUsage.rst:3276 ../../../AMDGPUUsage.rst:3279
#: ../../../AMDGPUUsage.rst:3281 ../../../AMDGPUUsage.rst:3284
#: ../../../AMDGPUUsage.rst:3286 ../../../AMDGPUUsage.rst:3318
msgid "seq_cst"
msgstr ""

#: ../../../AMDGPUUsage.rst:3220
msgid "*Same as corresponding load atomic acquire*."
msgstr ""

#: ../../../AMDGPUUsage.rst:3225
msgid ""
"Must happen after preceding global/generic load atomic/store atomic/"
"atomicrmw with memory ordering of seq_cst and with equal or wider sync "
"scope. (Note that seq_cst fences have their own s_waitcnt vmcnt(0) and so do "
"not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3240
msgid ""
"Ensures any preceding sequential consistent global memory instructions have "
"completed before executing this sequentially consistent instruction. This "
"prevents reordering a seq_cst store followed by a seq_cst load (Note that "
"seq_cst is stronger than acquire/release as the reordering of load acquire "
"followed by a store release is prevented by the waitcnt vmcnt(0) of the "
"release, but there is nothing preventing a store release followed by load "
"acquire from competing out of order.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3271
msgid "*Following instructions same as corresponding load atomic acquire*."
msgstr ""

#: ../../../AMDGPUUsage.rst:3276 ../../../AMDGPUUsage.rst:3279
msgid "*Same as corresponding store atomic release*."
msgstr ""

#: ../../../AMDGPUUsage.rst:3281 ../../../AMDGPUUsage.rst:3284
msgid "*Same as corresponding atomicrmw acq_rel*."
msgstr ""

#: ../../../AMDGPUUsage.rst:3286
msgid "*Same as corresponding fence acq_rel*."
msgstr ""

#: ../../../AMDGPUUsage.rst:3293
msgid ""
"The memory order also adds the single thread optimization constrains defined "
"in table :ref:`amdgpu-amdhsa-memory-model-single-thread-optimization-"
"constraints-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3297
msgid "AMDHSA Memory Model Single Thread Optimization Constraints GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:3301
msgid "LLVM Memory"
msgstr ""

#: ../../../AMDGPUUsage.rst:3301
msgid "Optimization Constraints"
msgstr ""

#: ../../../AMDGPUUsage.rst:3302
msgid "Ordering"
msgstr ""

#: ../../../AMDGPUUsage.rst:3306
msgid ""
"If a load atomic/atomicrmw then no following load/load atomic/store/ store "
"atomic/atomicrmw/fence instruction can be moved before the acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:3309
msgid ""
"If a fence then same as load atomic, plus no preceding associated fence-"
"paired-atomic can be moved after the fence."
msgstr ""

#: ../../../AMDGPUUsage.rst:3311
msgid ""
"If a store atomic/atomicrmw then no preceding load/load atomic/store/ store "
"atomic/atomicrmw/fence instruction can be moved after the release."
msgstr ""

#: ../../../AMDGPUUsage.rst:3314
msgid ""
"If a fence then same as store atomic, plus no following associated fence-"
"paired-atomic can be moved before the fence."
msgstr ""

#: ../../../AMDGPUUsage.rst:3317
msgid "Same constraints as both acquire and release."
msgstr ""

#: ../../../AMDGPUUsage.rst:3318
msgid ""
"If a load atomic then same constraints as acquire, plus no preceding "
"sequentially consistent load atomic/store atomic/atomicrmw/fence instruction "
"can be moved after the seq_cst."
msgstr ""

#: ../../../AMDGPUUsage.rst:3322
msgid ""
"If a store atomic then the same constraints as release, plus no following "
"sequentially consistent load atomic/store atomic/atomicrmw/fence instruction "
"can be moved before the seq_cst."
msgstr ""

#: ../../../AMDGPUUsage.rst:3326
msgid "If an atomicrmw/fence then same constraints as acq_rel."
msgstr ""

#: ../../../AMDGPUUsage.rst:3330 ../../../AMDGPUUsage.rst:3366
msgid "Trap Handler ABI"
msgstr ""

#: ../../../AMDGPUUsage.rst:3332
msgid ""
"For code objects generated by AMDGPU backend for HSA [HSA]_ compatible "
"runtimes (such as ROCm [AMD-ROCm]_), the runtime installs a trap handler "
"that supports the ``s_trap`` instruction with the following usage:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3336
msgid "AMDGPU Trap Handler for AMDHSA OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:3340 ../../../AMDGPUUsage.rst:3376
msgid "Usage"
msgstr ""

#: ../../../AMDGPUUsage.rst:3340 ../../../AMDGPUUsage.rst:3376
msgid "Code Sequence"
msgstr ""

#: ../../../AMDGPUUsage.rst:3340
msgid "Trap Handler Inputs"
msgstr ""

#: ../../../AMDGPUUsage.rst:3343
msgid "reserved"
msgstr ""

#: ../../../AMDGPUUsage.rst:3343
msgid "``s_trap 0x00``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3343
msgid "Reserved by hardware."
msgstr ""

#: ../../../AMDGPUUsage.rst:3344
msgid "``debugtrap(arg)``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3344
msgid "``s_trap 0x01``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3344 ../../../AMDGPUUsage.rst:3350
#: ../../../AMDGPUUsage.rst:3353
msgid "``SGPR0-1``:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3345 ../../../AMDGPUUsage.rst:3349
#: ../../../AMDGPUUsage.rst:3353
msgid "``queue_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3346
msgid "``VGPR0``:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3347
msgid "``arg``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3344
msgid "Reserved for HSA ``debugtrap`` intrinsic (not implemented)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3348
msgid "``llvm.trap``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3348
msgid "``s_trap 0x02``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3348
msgid ""
"Causes dispatch to be terminated and its associated queue put into the error "
"state."
msgstr ""

#: ../../../AMDGPUUsage.rst:3352
msgid "``llvm.debugtrap``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3352
msgid "``s_trap 0x03``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3352
msgid "If debugger not installed handled same as ``llvm.trap``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3355
msgid "debugger breakpoint"
msgstr ""

#: ../../../AMDGPUUsage.rst:3355
msgid "``s_trap 0x07``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3355
msgid "Reserved for  debugger breakpoints."
msgstr ""

#: ../../../AMDGPUUsage.rst:3357 ../../../AMDGPUUsage.rst:3358
#: ../../../AMDGPUUsage.rst:3359
msgid "debugger"
msgstr ""

#: ../../../AMDGPUUsage.rst:3357
msgid "``s_trap 0x08``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3357 ../../../AMDGPUUsage.rst:3358
#: ../../../AMDGPUUsage.rst:3359
msgid "Reserved for debugger."
msgstr ""

#: ../../../AMDGPUUsage.rst:3358
msgid "``s_trap 0xfe``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3359
msgid "``s_trap 0xff``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3363
msgid "Non-AMDHSA"
msgstr ""

#: ../../../AMDGPUUsage.rst:3368
msgid ""
"For code objects generated by AMDGPU backend for non-amdhsa OS, the runtime "
"does not install a trap handler. The ``llvm.trap`` and ``llvm.debugtrap`` "
"instructions are handled as follows:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3372
msgid "AMDGPU Trap Handler for Non-AMDHSA OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:3378
msgid "llvm.trap"
msgstr ""

#: ../../../AMDGPUUsage.rst:3378
msgid "s_endpgm"
msgstr ""

#: ../../../AMDGPUUsage.rst:3378
msgid "Causes wavefront to be terminated."
msgstr ""

#: ../../../AMDGPUUsage.rst:3379
msgid "llvm.debugtrap"
msgstr ""

#: ../../../AMDGPUUsage.rst:3379
msgid "Compiler warning given that there is no trap handler installed."
msgstr ""

#: ../../../AMDGPUUsage.rst:3384
msgid "Source Languages"
msgstr ""

#: ../../../AMDGPUUsage.rst:3389
msgid "OpenCL"
msgstr ""

#: ../../../AMDGPUUsage.rst:3391
msgid ""
"When generating code for the OpenCL language the target triple environment "
"should be ``opencl`` or ``amdgizcl`` (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3394 ../../../AMDGPUUsage.rst:3412
msgid "When the language is OpenCL the following differences occur:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3396
msgid ""
"The OpenCL memory model is used (see :ref:`amdgpu-amdhsa-memory-model`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3397
msgid "The AMDGPU backend adds additional arguments to the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:3398
msgid "Additional metadata is generated (:ref:`amdgpu-code-object-metadata`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3407
msgid "HCC"
msgstr ""

#: ../../../AMDGPUUsage.rst:3409
msgid ""
"When generating code for the OpenCL language the target triple environment "
"should be ``hcc`` (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3414
msgid "The HSA memory model is used (see :ref:`amdgpu-amdhsa-memory-model`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3420
msgid "Assembler"
msgstr ""

#: ../../../AMDGPUUsage.rst:3422
msgid ""
"AMDGPU backend has LLVM-MC based assembler which is currently in "
"development. It supports AMDGCN GFX6-GFX8."
msgstr ""

#: ../../../AMDGPUUsage.rst:3425
msgid ""
"This section describes general syntax for instructions and operands. For "
"more information about instructions, their semantics and supported "
"combinations of operands, refer to one of instruction set architecture "
"manuals [AMD-Souther-Islands]_ [AMD-Sea-Islands]_ [AMD-Volcanic-Islands]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:3430
msgid ""
"An instruction has the following syntax (register operands are normally "
"comma-separated while extra operands are space-separated):"
msgstr ""

#: ../../../AMDGPUUsage.rst:3433
msgid "*<opcode> <register_operand0>, ... <extra_operand0> ...*"
msgstr ""

#: ../../../AMDGPUUsage.rst:3436
msgid "Operands"
msgstr ""

#: ../../../AMDGPUUsage.rst:3438
msgid "The following syntax for register operands is supported:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3440
msgid "SGPR registers: s0, ... or s[0], ..."
msgstr ""

#: ../../../AMDGPUUsage.rst:3441
msgid "VGPR registers: v0, ... or v[0], ..."
msgstr ""

#: ../../../AMDGPUUsage.rst:3442
msgid "TTMP registers: ttmp0, ... or ttmp[0], ..."
msgstr ""

#: ../../../AMDGPUUsage.rst:3443
msgid ""
"Special registers: exec (exec_lo, exec_hi), vcc (vcc_lo, vcc_hi), "
"flat_scratch (flat_scratch_lo, flat_scratch_hi)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3444
msgid "Special trap registers: tba (tba_lo, tba_hi), tma (tma_lo, tma_hi)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3445
msgid ""
"Register pairs, quads, etc: s[2:3], v[10:11], ttmp[5:6], s[4:7], v[12:15], "
"ttmp[4:7], s[8:15], ..."
msgstr ""

#: ../../../AMDGPUUsage.rst:3446
msgid "Register lists: [s0, s1], [ttmp0, ttmp1, ttmp2, ttmp3]"
msgstr ""

#: ../../../AMDGPUUsage.rst:3447
msgid "Register index expressions: v[2*2], s[1-1:2-1]"
msgstr ""

#: ../../../AMDGPUUsage.rst:3448
msgid "'off' indicates that an operand is not enabled"
msgstr ""

#: ../../../AMDGPUUsage.rst:3450
msgid "The following extra operands are supported:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3452
msgid "offset, offset0, offset1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3453
msgid "idxen, offen bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3454
msgid "glc, slc, tfe bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3455
msgid "waitcnt: integer or combination of counter values"
msgstr ""

#: ../../../AMDGPUUsage.rst:3456
msgid "VOP3 modifiers:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3458
msgid "abs (\\| \\|), neg (\\-)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3460
msgid "DPP modifiers:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3462
msgid "row_shl, row_shr, row_ror, row_rol"
msgstr ""

#: ../../../AMDGPUUsage.rst:3463
msgid "row_mirror, row_half_mirror, row_bcast"
msgstr ""

#: ../../../AMDGPUUsage.rst:3464
msgid "wave_shl, wave_shr, wave_ror, wave_rol, quad_perm"
msgstr ""

#: ../../../AMDGPUUsage.rst:3465
msgid "row_mask, bank_mask, bound_ctrl"
msgstr ""

#: ../../../AMDGPUUsage.rst:3467
msgid "SDWA modifiers:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3469
msgid "dst_sel, src0_sel, src1_sel (BYTE_N, WORD_M, DWORD)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3470
msgid "dst_unused (UNUSED_PAD, UNUSED_SEXT, UNUSED_PRESERVE)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3471
msgid "abs, neg, sext"
msgstr ""

#: ../../../AMDGPUUsage.rst:3474
msgid "Instruction Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:3477
msgid "DS"
msgstr ""

#: ../../../AMDGPUUsage.rst:3487
msgid ""
"For full list of supported instructions, refer to \"LDS/GDS instructions\" "
"in ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:3490
msgid "FLAT"
msgstr ""

#: ../../../AMDGPUUsage.rst:3500
msgid ""
"For full list of supported instructions, refer to \"FLAT instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:3503
msgid "MUBUF"
msgstr ""

#: ../../../AMDGPUUsage.rst:3513
msgid ""
"For full list of supported instructions, refer to \"MUBUF Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:3516
msgid "SMRD/SMEM"
msgstr ""

#: ../../../AMDGPUUsage.rst:3526
msgid ""
"For full list of supported instructions, refer to \"Scalar Memory "
"Operations\" in ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:3529
msgid "SOP1"
msgstr "SOP1"

#: ../../../AMDGPUUsage.rst:3541
msgid ""
"For full list of supported instructions, refer to \"SOP1 Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:3544
msgid "SOP2"
msgstr "SOP2"

#: ../../../AMDGPUUsage.rst:3558
msgid ""
"For full list of supported instructions, refer to \"SOP2 Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:3561
msgid "SOPC"
msgstr "SOPC"

#: ../../../AMDGPUUsage.rst:3570
msgid ""
"For full list of supported instructions, refer to \"SOPC Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:3573
msgid "SOPP"
msgstr "SOPP"

#: ../../../AMDGPUUsage.rst:3589
msgid ""
"For full list of supported instructions, refer to \"SOPP Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:3591
msgid ""
"Unless otherwise mentioned, little verification is performed on the operands "
"of SOPP Instructions, so it is up to the programmer to be familiar with the "
"range or acceptable values."
msgstr ""

#: ../../../AMDGPUUsage.rst:3596
msgid "VALU"
msgstr ""

#: ../../../AMDGPUUsage.rst:3598
msgid ""
"For vector ALU instruction opcodes (VOP1, VOP2, VOP3, VOPC, VOP_DPP, "
"VOP_SDWA), the assembler will automatically use optimal encoding based on "
"its operands. To force specific encoding, one can add a suffix to the opcode "
"of the instruction:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3602
msgid "_e32 for 32-bit VOP1/VOP2/VOPC"
msgstr ""

#: ../../../AMDGPUUsage.rst:3603
msgid "_e64 for 64-bit VOP3"
msgstr ""

#: ../../../AMDGPUUsage.rst:3604
msgid "_dpp for VOP_DPP"
msgstr ""

#: ../../../AMDGPUUsage.rst:3605
msgid "_sdwa for VOP_SDWA"
msgstr ""

#: ../../../AMDGPUUsage.rst:3607
msgid "VOP1/VOP2/VOP3/VOPC examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3624
msgid "VOP_DPP examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3637
msgid "VOP_SDWA examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3647
msgid ""
"For full list of supported instructions, refer to \"Vector ALU "
"instructions\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:3650
msgid "HSA Code Object Directives"
msgstr ""

#: ../../../AMDGPUUsage.rst:3652
msgid ""
"AMDGPU ABI defines auxiliary data in output code object. In assembly source, "
"one can specify them with assembler directives."
msgstr ""

#: ../../../AMDGPUUsage.rst:3656
msgid ".hsa_code_object_version major, minor"
msgstr ""

#: ../../../AMDGPUUsage.rst:3658
msgid ""
"*major* and *minor* are integers that specify the version of the HSA code "
"object that will be generated by the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:3662
msgid ".hsa_code_object_isa [major, minor, stepping, vendor, arch]"
msgstr ""

#: ../../../AMDGPUUsage.rst:3665
msgid ""
"*major*, *minor*, and *stepping* are all integers that describe the "
"instruction set architecture (ISA) version of the assembly program."
msgstr ""

#: ../../../AMDGPUUsage.rst:3668
msgid ""
"*vendor* and *arch* are quoted strings.  *vendor* should always be equal to "
"\"AMD\" and *arch* should always be equal to \"AMDGPU\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:3671
msgid ""
"By default, the assembler will derive the ISA version, *vendor*, and *arch* "
"from the value of the -mcpu option that is passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:3675
msgid ".amdgpu_hsa_kernel (name)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3677
msgid ""
"This directives specifies that the symbol with given name is a kernel entry "
"point (label) and the object should contain corresponding symbol of type "
"STT_AMDGPU_HSA_KERNEL."
msgstr ""

#: ../../../AMDGPUUsage.rst:3681
msgid ".amd_kernel_code_t"
msgstr ""

#: ../../../AMDGPUUsage.rst:3683
msgid ""
"This directive marks the beginning of a list of key / value pairs that are "
"used to specify the amd_kernel_code_t object that will be emitted by the "
"assembler. The list must be terminated by the *.end_amd_kernel_code_t* "
"directive.  For any amd_kernel_code_t values that are unspecified a default "
"value will be used.  The default value for all keys is 0, with the following "
"exceptions:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3689
msgid "*kernel_code_version_major* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:3690
msgid "*machine_kind* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:3691
msgid ""
"*machine_version_major*, *machine_version_minor*, and "
"*machine_version_stepping* are derived from the value of the -mcpu option "
"that is passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:3694
msgid "*kernel_code_entry_byte_offset* defaults to 256."
msgstr ""

#: ../../../AMDGPUUsage.rst:3695
msgid "*wavefront_size* defaults to 6."
msgstr ""

#: ../../../AMDGPUUsage.rst:3696
msgid ""
"*kernarg_segment_alignment*, *group_segment_alignment*, and "
"*private_segment_alignment* default to 4.  Note that alignments are "
"specified as a power of two, so a value of **n** means an alignment of 2^ "
"**n**."
msgstr ""

#: ../../../AMDGPUUsage.rst:3700
msgid ""
"The *.amd_kernel_code_t* directive must be placed immediately after the "
"function label and before any instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:3703
msgid ""
"For a full list of amd_kernel_code_t keys, refer to AMDGPU ABI document, "
"comments in lib/Target/AMDGPU/AmdKernelCodeT.h and test/CodeGen/AMDGPU/hsa.s."
msgstr ""

#: ../../../AMDGPUUsage.rst:3706
msgid "Here is an example of a minimal amd_kernel_code_t specification:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3742
msgid "Additional Documentation"
msgstr ""

#: ../../../AMDGPUUsage.rst:3744
msgid ""
"`AMD R6xx shader ISA <http://developer.amd.com/wordpress/media/2012/10/"
"R600_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3745
msgid ""
"`AMD R7xx shader ISA <http://developer.amd.com/wordpress/media/2012/10/R700-"
"Family_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3746
msgid ""
"`AMD Evergreen shader ISA <http://developer.amd.com/wordpress/media/2012/10/"
"AMD_Evergreen-Family_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3747
msgid ""
"`AMD Cayman/Trinity shader ISA <http://developer.amd.com/wordpress/"
"media/2012/10/AMD_HD_6900_Series_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3748
msgid ""
"`AMD Southern Islands Series ISA <http://developer.amd.com/wordpress/"
"media/2012/12/AMD_Southern_Islands_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3749
msgid ""
"`AMD Sea Islands Series ISA <http://developer.amd.com/wordpress/"
"media/2013/07/AMD_Sea_Islands_Instruction_Set_Architecture.pdf>`_"
msgstr ""

#: ../../../AMDGPUUsage.rst:3750
msgid ""
"`AMD GCN3 Instruction Set Architecture <http://amd-dev.wpengine.netdna-cdn."
"com/wordpress/media/2013/12/AMD_GCN3_Instruction_Set_Architecture_rev1.1."
"pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3751
msgid ""
"`AMD Accelerated Parallel Processing OpenCL Programming Guide <http://"
"developer.amd.com/download/"
"AMD_Accelerated_Parallel_Processing_OpenCL_Programming_Guide.pdf>`_"
msgstr ""

#: ../../../AMDGPUUsage.rst:3752
msgid ""
"`AMD Accelerated Parallel Processing APP SDK Documentation <http://developer."
"amd.com/tools/heterogeneous-computing/amd-accelerated-parallel-processing-"
"app-sdk/documentation/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3753
msgid ""
"`ROCm: Open Platform for Development, Discovery and Education Around GPU "
"Computing <http://gpuopen.com/compute-product/rocm/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3754
msgid "`ROCm github <http://github.com/RadeonOpenCompute>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3755
msgid ""
"`Heterogeneous System Architecture (HSA) Foundation <http://www."
"hsafoundation.com/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3756
msgid ""
"`Executable and Linkable Format (ELF) <http://www.sco.com/developers/gabi/"
">`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3757
msgid "`DWARF Debugging Information Format <http://dwarfstd.org/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3758
msgid ""
"`YAML Ain’t Markup Language (YAML™) Version 1.2 <http://www.yaml.org/"
"spec/1.2/spec.html>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3759
msgid ""
"`The OpenCL Specification Version 2.0 <http://www.khronos.org/registry/cl/"
"specs/opencl-2.0.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3760
msgid ""
"`Heterogeneous-race-free Memory Models <http://benedictgaster.org/wp-content/"
"uploads/2014/01/asplos269-FINAL.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:3761
msgid ""
"`AMDGPU Compute Application Binary Interface <https://github.com/"
"RadeonOpenCompute/ROCm-ComputeABI-Doc/blob/master/AMDGPU-ABI.md>`__"
msgstr ""
