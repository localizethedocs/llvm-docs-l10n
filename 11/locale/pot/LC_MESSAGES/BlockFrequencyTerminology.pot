# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../BlockFrequencyTerminology.rst:3
msgid "LLVM Block Frequency Terminology"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:9
msgid "Introduction"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:11
msgid ""
"Block Frequency is a metric for estimating the relative frequency of "
"different basic blocks.  This document describes the terminology that the "
"``BlockFrequencyInfo`` and ``MachineBlockFrequencyInfo`` analysis passes use."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:16
msgid "Branch Probability"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:18
msgid ""
"Blocks with multiple successors have probabilities associated with each "
"outgoing edge.  These are called branch probabilities.  For a given block, "
"the sum of its outgoing branch probabilities should be 1.0."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:23
msgid "Branch Weight"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:25
msgid ""
"Rather than storing fractions on each edge, we store an integer weight. "
"Weights are relative to the other edges of a given predecessor block.  The "
"branch probability associated with a given edge is its own weight divided by "
"the sum of the weights on the predecessor's outgoing edges."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:30
msgid "For example, consider this IR:"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:42
msgid "and this simple graph representation::"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:47
msgid ""
"The probability of branching from block A to block B is 7/15, and the "
"probability of branching from block A to block C is 8/15."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:50
msgid ""
"See :doc:`BranchWeightMetadata` for details about the branch weight IR "
"representation."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:54
msgid "Block Frequency"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:56
msgid ""
"Block frequency is a relative metric that represents the number of times a "
"block executes.  The ratio of a block frequency to the entry block frequency "
"is the expected number of times the block will execute per entry to the "
"function."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:60
msgid ""
"Block frequency is the main output of the ``BlockFrequencyInfo`` and "
"``MachineBlockFrequencyInfo`` analysis passes."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:64
msgid "Implementation: a series of DAGs"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:66
msgid ""
"The implementation of the block frequency calculation analyses each loop, "
"bottom-up, ignoring backedges; i.e., as a DAG.  After each loop is "
"processed, it's packaged up to act as a pseudo-node in its parent loop's (or "
"the function's) DAG analysis."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:72
msgid "Block Mass"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:74
msgid ""
"For each DAG, the entry node is assigned a mass of ``UINT64_MAX`` and mass "
"is distributed to successors according to branch weights.  Block Mass uses a "
"fixed-point representation where ``UINT64_MAX`` represents ``1.0`` and ``0`` "
"represents a number just above ``0.0``."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:79
msgid ""
"After mass is fully distributed, in any cut of the DAG that separates the "
"exit nodes from the entry node, the sum of the block masses of the nodes "
"succeeded by a cut edge should equal ``UINT64_MAX``.  In other words, mass "
"is conserved as it \"falls\" through the DAG."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:84
msgid ""
"If a function's basic block graph is a DAG, then block masses are valid "
"block frequencies.  This works poorly in practice though, since downstream "
"users rely on adding block frequencies together without hitting the maximum."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:89
msgid "Loop Scale"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:91
msgid ""
"Loop scale is a metric that indicates how many times a loop iterates per "
"entry. As mass is distributed through the loop's DAG, the (otherwise "
"ignored) backedge mass is collected.  This backedge mass is used to compute "
"the exit frequency, and thus the loop scale."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:97
msgid "Implementation: Getting from mass and scale to frequency"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:99
msgid ""
"After analysing the complete series of DAGs, each block has a mass (local to "
"its containing loop, if any), and each loop pseudo-node has a loop scale and "
"its own mass (from its parent's DAG)."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:103
msgid ""
"We can get an initial frequency assignment (with entry frequency of 1.0) by "
"multiplying these masses and loop scales together.  A given block's "
"frequency is the product of its mass, the mass of containing loops' pseudo "
"nodes, and the containing loops' loop scales."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:108
msgid ""
"Since downstream users need integers (not floating point), this initial "
"frequency assignment is shifted as necessary into the range of ``uint64_t``."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:112
msgid "Block Bias"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:114
msgid ""
"Block bias is a proposed *absolute* metric to indicate a bias toward or away "
"from a given block during a function's execution.  The idea is that bias can "
"be used in isolation to indicate whether a block is relatively hot or cold, "
"or to compare two blocks to indicate whether one is hotter or colder than "
"the other."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:119
msgid ""
"The proposed calculation involves calculating a *reference* block frequency, "
"where:"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:122
msgid ""
"every branch weight is assumed to be 1 (i.e., every branch probability "
"distribution is even) and"
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:125
msgid "loop scales are ignored."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:127
msgid ""
"This reference frequency represents what the block frequency would be in an "
"unbiased graph."
msgstr ""

#: ../../../BlockFrequencyTerminology.rst:130
msgid ""
"The bias is the ratio of the block frequency to this reference block "
"frequency."
msgstr ""
