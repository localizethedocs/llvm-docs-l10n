# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../HowToBuildOnARM.rst:3
msgid "How To Build On ARM"
msgstr ""

#: ../../../HowToBuildOnARM.rst:6
msgid "Introduction"
msgstr ""

#: ../../../HowToBuildOnARM.rst:8
msgid ""
"This document contains information about building/testing LLVM and Clang on "
"an ARM machine."
msgstr ""

#: ../../../HowToBuildOnARM.rst:11
msgid ""
"This document is *NOT* tailored to help you cross-compile LLVM/Clang to ARM "
"on another architecture, for example an x86_64 machine. To find out more "
"about cross-compiling, please check :doc:`HowToCrossCompileLLVM`."
msgstr ""

#: ../../../HowToBuildOnARM.rst:16
msgid "Notes On Building LLVM/Clang on ARM"
msgstr ""

#: ../../../HowToBuildOnARM.rst:17
msgid ""
"Here are some notes on building/testing LLVM/Clang on ARM. Note that ARM "
"encompasses a wide variety of CPUs; this advice is primarily based on the "
"ARMv6 and ARMv7 architectures and may be inapplicable to older chips."
msgstr ""

#: ../../../HowToBuildOnARM.rst:21
msgid ""
"The most popular Linaro/Ubuntu OS's for ARM boards, e.g., the Pandaboard, "
"have become hard-float platforms. There are a number of choices when using "
"CMake. Autoconf usage is deprecated as of 3.8."
msgstr ""

#: ../../../HowToBuildOnARM.rst:25
msgid ""
"Building LLVM/Clang in ``Release`` mode is preferred since it consumes a lot "
"less memory. Otherwise, the building process will very likely fail due to "
"insufficient memory. It's also a lot quicker to only build the relevant back-"
"ends (ARM and AArch64), since it's very unlikely that you'll use an ARM "
"board to cross-compile to other arches. If you're running Compiler-RT tests, "
"also include the x86 back-end, or some tests will fail."
msgstr ""

#: ../../../HowToBuildOnARM.rst:38
msgid "Other options you can use are:"
msgstr ""

#: ../../../HowToBuildOnARM.rst:47
msgid ""
"After that, just typing ``make -jN`` or ``ninja`` will build everything. "
"``make -jN check-all`` or ``ninja check-all`` will run all compiler tests. "
"For running the test suite, please refer to :doc:`TestingGuide`."
msgstr ""

#: ../../../HowToBuildOnARM.rst:51
msgid ""
"If you are building LLVM/Clang on an ARM board with 1G of memory or less, "
"please use ``gold`` rather then GNU ``ld``. In any case it is probably a "
"good idea to set up a swap partition, too."
msgstr ""

#: ../../../HowToBuildOnARM.rst:59
msgid ""
"ARM development boards can be unstable and you may experience that cores are "
"disappearing, caches being flushed on every big.LITTLE switch, and other "
"similar issues.  To help ease the effect of this, set the Linux scheduler to "
"\"performance\" on **all** cores using this little script:"
msgstr ""

#: ../../../HowToBuildOnARM.rst:71
msgid ""
"Remember to turn that off after the build, or you may risk burning your CPU. "
"Most modern kernels don't need that, so only use it if you have problems."
msgstr ""

#: ../../../HowToBuildOnARM.rst:75
msgid ""
"Running the build on SD cards is ok, but they are more prone to failures "
"than good quality USB sticks, and those are more prone to failures than "
"external hard-drives (those are also a lot faster). So, at least, you should "
"consider to buy a fast USB stick.  On systems with a fast eMMC, that's a "
"good option too."
msgstr ""

#: ../../../HowToBuildOnARM.rst:81
msgid ""
"Make sure you have a decent power supply (dozens of dollars worth) that can "
"provide *at least* 4 amperes, this is especially important if you use USB "
"devices with your board. Externally powered USB/SATA harddrives are even "
"better than having a good power supply."
msgstr ""
