# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../Benchmarking.rst:3
msgid "Benchmarking tips"
msgstr ""

#: ../../../Benchmarking.rst:7
msgid "Introduction"
msgstr "簡介"

#: ../../../Benchmarking.rst:9
msgid ""
"For benchmarking a patch we want to reduce all possible sources of noise as "
"much as possible. How to do that is very OS dependent."
msgstr ""

#: ../../../Benchmarking.rst:12
msgid ""
"Note that low noise is required, but not sufficient. It does not exclude "
"measurement bias. See https://www.cis.upenn.edu/~cis501/papers/producing-"
"wrong-data.pdf for example."
msgstr ""

#: ../../../Benchmarking.rst:18
msgid "General"
msgstr ""

#: ../../../Benchmarking.rst:20
msgid "Use a high resolution timer, e.g. perf under linux."
msgstr ""

#: ../../../Benchmarking.rst:22
msgid "Run the benchmark multiple times to be able to recognize noise."
msgstr ""

#: ../../../Benchmarking.rst:24
msgid "Disable as many processes or services as possible on the target system."
msgstr ""

#: ../../../Benchmarking.rst:26
msgid ""
"Disable frequency scaling, turbo boost and address space randomization (see "
"OS specific section)."
msgstr ""

#: ../../../Benchmarking.rst:29
msgid ""
"Static link if the OS supports it. That avoids any variation that might be "
"introduced by loading dynamic libraries. This can be done by passing ``-"
"DLLVM_BUILD_STATIC=ON`` to cmake."
msgstr ""

#: ../../../Benchmarking.rst:33
msgid ""
"Try to avoid storage. On some systems you can use tmpfs. Putting the "
"program, inputs and outputs on tmpfs avoids touching a real storage system, "
"which can have a pretty big variability."
msgstr ""

#: ../../../Benchmarking.rst:37
msgid "To mount it (on linux and freebsd at least)::"
msgstr ""

#: ../../../Benchmarking.rst:42
msgid "Linux"
msgstr ""

#: ../../../Benchmarking.rst:44
msgid "Disable address space randomization::"
msgstr ""

#: ../../../Benchmarking.rst:48
msgid "Set scaling_governor to performance::"
msgstr ""

#: ../../../Benchmarking.rst:55
msgid ""
"Use https://github.com/lpechacek/cpuset to reserve cpus for just the program "
"you are benchmarking. If using perf, leave at least 2 cores so that perf "
"runs in one and your program in another::"
msgstr ""

#: ../../../Benchmarking.rst:61
msgid ""
"This will move all threads out of N1 and N2. The ``-k on`` means that even "
"kernel threads are moved out."
msgstr ""

#: ../../../Benchmarking.rst:64
msgid ""
"Disable the SMT pair of the cpus you will use for the benchmark. The pair of "
"cpu N can be found in ``/sys/devices/system/cpu/cpuN/topology/"
"thread_siblings_list`` and disabled with::"
msgstr ""

#: ../../../Benchmarking.rst:72
msgid "Run the program with::"
msgstr ""

#: ../../../Benchmarking.rst:76
msgid ""
"This will run the command after ``--`` in the isolated cpus. The particular "
"perf command runs the ``<cmd>`` 10 times and reports statistics."
msgstr ""

#: ../../../Benchmarking.rst:80
msgid "With these in place you can expect perf variations of less than 0.1%."
msgstr ""

#: ../../../Benchmarking.rst:83
msgid "Linux Intel"
msgstr ""

#: ../../../Benchmarking.rst:85
msgid "Disable turbo mode::"
msgstr ""
