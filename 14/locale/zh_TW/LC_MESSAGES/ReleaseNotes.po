# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../ReleaseNotes.rst:3
msgid "LLVM |release| Release Notes"
msgstr ""

#: ../../../ReleaseNotes.rst:11
msgid ""
"These are in-progress notes for the upcoming LLVM |version| release. Release "
"notes for previous releases can be found on `the Download Page <https://"
"releases.llvm.org/download.html>`_."
msgstr ""

#: ../../../ReleaseNotes.rst:17
msgid "Introduction"
msgstr ""

#: ../../../ReleaseNotes.rst:19
msgid ""
"This document contains the release notes for the LLVM Compiler "
"Infrastructure, release |release|.  Here we describe the status of LLVM, "
"including major improvements from the previous release, improvements in "
"various subprojects of LLVM, and some of the current users of the code.  All "
"LLVM releases may be downloaded from the `LLVM releases web site <https://"
"llvm.org/releases/>`_."
msgstr ""

#: ../../../ReleaseNotes.rst:25
msgid ""
"For more information about LLVM, including information about the latest "
"release, please check out the `main LLVM web site <https://llvm.org/>`_.  If "
"you have questions or comments, the `LLVM Developer's Mailing List <https://"
"lists.llvm.org/mailman/listinfo/llvm-dev>`_ is a good place to send them."
msgstr ""

#: ../../../ReleaseNotes.rst:31
msgid ""
"Note that if you are reading this file from a Git checkout or the main LLVM "
"web page, this document applies to the *next* release, not the current one.  "
"To see the release notes for a specific release, please see the `releases "
"page <https://llvm.org/releases/>`_."
msgstr ""

#: ../../../ReleaseNotes.rst:37
msgid "Non-comprehensive list of changes in this release"
msgstr ""

#: ../../../ReleaseNotes.rst:56 ../../../ReleaseNotes.rst:104
#: ../../../ReleaseNotes.rst:229
msgid "..."
msgstr ""

#: ../../../ReleaseNotes.rst:59
msgid "Changes to the LLVM IR"
msgstr ""

#: ../../../ReleaseNotes.rst:61
msgid ""
"Using the legacy pass manager for the optimization pipeline is deprecated "
"and will be removed after LLVM 14. In the meantime, only minimal effort will "
"be made to maintain the legacy pass manager for the optimization pipeline."
msgstr ""

#: ../../../ReleaseNotes.rst:64
msgid "Max allowed integer type was reduced from 2^24-1 bits to 2^23 bits."
msgstr ""

#: ../../../ReleaseNotes.rst:65
msgid "Max allowed alignment was increased from 2^29 to 2^32."
msgstr ""

#: ../../../ReleaseNotes.rst:68
msgid "Changes to building LLVM"
msgstr ""

#: ../../../ReleaseNotes.rst:70
msgid "Building LLVM with Visual Studio now requires version 2019 or later."
msgstr ""

#: ../../../ReleaseNotes.rst:73
msgid "Changes to TableGen"
msgstr ""

#: ../../../ReleaseNotes.rst:76
msgid "Changes to the AArch64 Backend"
msgstr ""

#: ../../../ReleaseNotes.rst:78 ../../../ReleaseNotes.rst:90
msgid "Added support for the Armv9-A, Armv9.1-A and Armv9.2-A architectures."
msgstr ""

#: ../../../ReleaseNotes.rst:79
msgid ""
"The compiler now recognises the \"tune-cpu\" function attribute to support "
"the use of the -mtune frontend flag. This allows certain scheduling features "
"and optimisations to be enabled independently of the architecture. If the "
"\"tune-cpu\" attribute is absent it tunes according to the \"target-cpu\"."
msgstr ""

#: ../../../ReleaseNotes.rst:83
msgid ""
"Fixed relocations against temporary symbols (e.g. in jump tables and "
"constant pools) in large COFF object files."
msgstr ""

#: ../../../ReleaseNotes.rst:85
msgid "Auto-vectorization now targets SVE by default when available."
msgstr ""

#: ../../../ReleaseNotes.rst:88
msgid "Changes to the ARM Backend"
msgstr ""

#: ../../../ReleaseNotes.rst:91
msgid "Added support for the Armv8.1-M PACBTI-M extension."
msgstr ""

#: ../../../ReleaseNotes.rst:92
msgid ""
"Changed the assembly comment string for MSVC targets to ``@`` (consistent "
"with the MinGW and ELF targets), freeing up ``;`` to be used as statement "
"separator."
msgstr ""

#: ../../../ReleaseNotes.rst:97
msgid "Changes to the MIPS Target"
msgstr ""

#: ../../../ReleaseNotes.rst:99 ../../../ReleaseNotes.rst:166
#: ../../../ReleaseNotes.rst:175 ../../../ReleaseNotes.rst:180
#: ../../../ReleaseNotes.rst:185 ../../../ReleaseNotes.rst:238
msgid "During this release ..."
msgstr ""

#: ../../../ReleaseNotes.rst:102
msgid "Changes to the Hexagon Target"
msgstr ""

#: ../../../ReleaseNotes.rst:107
msgid "Changes to the PowerPC Target"
msgstr ""

#: ../../../ReleaseNotes.rst:109
msgid "Linux improvements:"
msgstr ""

#: ../../../ReleaseNotes.rst:111
msgid "Provided a number of builtins for compatibility with the XL compiler."
msgstr ""

#: ../../../ReleaseNotes.rst:112
msgid "Allow MMA builtin types in pre-P10 compilation units."
msgstr ""

#: ../../../ReleaseNotes.rst:113
msgid ""
"Add support for Return Oriented Programming (ROP) protection for 32 bit."
msgstr ""

#: ../../../ReleaseNotes.rst:114
msgid "Refactored code to use more inclusive language."
msgstr ""

#: ../../../ReleaseNotes.rst:115
msgid "Switched to LLD as the default linker for pre-built Linux binaries."
msgstr ""

#: ../../../ReleaseNotes.rst:116
msgid ""
"Enabled IEEE quad long double on Linux via "
"``PPC_LINUX_DEFAULT_IEEELONGDOUBLE`` in cmake config."
msgstr ""

#: ../../../ReleaseNotes.rst:119
msgid ""
"Added ``__ibm128`` type to represent IBM double-double format, also "
"available as ``__attribute__((mode(IF)))``."
msgstr ""

#: ../../../ReleaseNotes.rst:121
msgid "``-mfloat128`` can now be used in Linux subtargets with VSX enabled."
msgstr ""

#: ../../../ReleaseNotes.rst:123
msgid ""
"Added quadword atomic load/store support in codegen; not enabled by default."
msgstr ""

#: ../../../ReleaseNotes.rst:124
msgid ""
"Codegen improvements for splat load, byval parameter, stack lowering, etc."
msgstr ""

#: ../../../ReleaseNotes.rst:125
msgid "Implemented P10 instruction scheduling model."
msgstr ""

#: ../../../ReleaseNotes.rst:126
msgid "Implemented P10 instruction fusion pairs."
msgstr ""

#: ../../../ReleaseNotes.rst:127
msgid "Improved handling of ``#pragma clang loop unroll_and_jam``."
msgstr ""

#: ../../../ReleaseNotes.rst:128
msgid "Various bug fixes."
msgstr ""

#: ../../../ReleaseNotes.rst:130
msgid "AIX Support/improvements:"
msgstr ""

#: ../../../ReleaseNotes.rst:132
msgid "Variadic (ellipsis) functions with C complex types are now supported."
msgstr ""

#: ../../../ReleaseNotes.rst:133
msgid "Added toc-data support for AIX 64-bit."
msgstr ""

#: ../../../ReleaseNotes.rst:134
msgid "Added toc-data support for read-only globals."
msgstr ""

#: ../../../ReleaseNotes.rst:135
msgid "Updated default target on AIX from pwr4 to pwr7."
msgstr ""

#: ../../../ReleaseNotes.rst:136
msgid "AIX 64-bit code generation now uses fast-isel for O0."
msgstr ""

#: ../../../ReleaseNotes.rst:137
msgid "Added DWARF support for 32-bit XCOFF."
msgstr ""

#: ../../../ReleaseNotes.rst:140
msgid "Changes to the RISC-V Target"
msgstr ""

#: ../../../ReleaseNotes.rst:142
msgid ""
"Codegen improvements for RV64 around the selection of addw/subw/mulw/slliw "
"instructions and removal of redundant sext.w instructions (using the new "
"RISCVSExtWRemoval pass)."
msgstr ""

#: ../../../ReleaseNotes.rst:145
msgid ""
"The various RISC-V vector extensions were updated to version 1.0 and are no "
"longer experimental."
msgstr ""

#: ../../../ReleaseNotes.rst:147
msgid ""
"The Zba, Zbb, Zbc, and Zbs bit-manipulation extensions were updated to "
"version 1.0 and are no longer experimental."
msgstr ""

#: ../../../ReleaseNotes.rst:149
msgid "Added MC layer support for the ratified scalar cryptography extensions."
msgstr ""

#: ../../../ReleaseNotes.rst:150
msgid ""
"The Zfh and Zfhmin extensions for half-precision floating point were updated "
"to version 1.0 and are no longer experimental."
msgstr ""

#: ../../../ReleaseNotes.rst:152
msgid "Added support for the ``.insn`` directive."
msgstr ""

#: ../../../ReleaseNotes.rst:153
msgid ""
"Various improvements to immediate materialisation, including when bit-"
"manipulation extensions are enabled. Additionally, the constant pool is now "
"used for large integers."
msgstr ""

#: ../../../ReleaseNotes.rst:156
msgid "Added support for constrained FP intrinsics for scalar types."
msgstr ""

#: ../../../ReleaseNotes.rst:157
msgid ""
"Added support for CSRs introduced in the Sscofpmf, Smstateen, and Sstc "
"extensions."
msgstr ""

#: ../../../ReleaseNotes.rst:159
msgid ""
"The experimental 'Zbproposedc' extension was removed, as was the 'B' "
"extension (including all bit-manipulation sub-extensions). Individual 'Zb*' "
"extensions should be used instead."
msgstr ""

#: ../../../ReleaseNotes.rst:164
msgid "Changes to the X86 Target"
msgstr ""

#: ../../../ReleaseNotes.rst:168
msgid "Support for ``AVX512-FP16`` instructions has been added."
msgstr ""

#: ../../../ReleaseNotes.rst:169
msgid ""
"Removed incomplete support for Intel MPX. (`D111517 <https://reviews.llvm."
"org/D111517>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:173
msgid "Changes to the AMDGPU Target"
msgstr ""

#: ../../../ReleaseNotes.rst:178
msgid "Changes to the AVR Target"
msgstr ""

#: ../../../ReleaseNotes.rst:183
msgid "Changes to the WebAssembly Target"
msgstr ""

#: ../../../ReleaseNotes.rst:188
msgid "Changes to the Windows Target"
msgstr ""

#: ../../../ReleaseNotes.rst:190
msgid ""
"Changed how the ``.pdata`` sections refer to the code they're describing, to "
"avoid conflicting unwind info if weak symbols are overridden."
msgstr ""

#: ../../../ReleaseNotes.rst:193
msgid ""
"Fixed code generation for calling support routines for converting 128 bit "
"integers from/to floats on x86_64."
msgstr ""

#: ../../../ReleaseNotes.rst:196
msgid ""
"The preferred path separator form (backslashes or forward slashes) can be "
"configured in Windows builds of LLVM now, with the "
"``LLVM_WINDOWS_PREFER_FORWARD_SLASH`` CMake option. This defaults to true in "
"MinGW builds of LLVM."
msgstr ""

#: ../../../ReleaseNotes.rst:201
msgid ""
"Set proper COFF symbol types for function aliases (e.g. for Itanium C++ "
"constructors), making sure that GNU ld exports all of them correctly as "
"functions, not data, when linking a DLL."
msgstr ""

#: ../../../ReleaseNotes.rst:205
msgid ""
"Handling of temporary files on more uncommon file systems (network mounts, "
"ramdisks) on Windows is fixed now (which previously either errored out or "
"left stray files behind)."
msgstr ""

#: ../../../ReleaseNotes.rst:210
msgid "Changes to the OCaml bindings"
msgstr ""

#: ../../../ReleaseNotes.rst:214
msgid "Changes to the C API"
msgstr ""

#: ../../../ReleaseNotes.rst:216
msgid ""
"``LLVMSetInstDebugLocation`` has been deprecated in favor of the more "
"general ``LLVMAddMetadataToInst``."
msgstr ""

#: ../../../ReleaseNotes.rst:219
msgid ""
"Fixed building LLVM-C.dll for i386 targets with MSVC, which had been broken "
"since the LLVM 8.0.0 release."
msgstr ""

#: ../../../ReleaseNotes.rst:223
msgid "Changes to the Go bindings"
msgstr ""

#: ../../../ReleaseNotes.rst:227
msgid "Changes to the FastISel infrastructure"
msgstr ""

#: ../../../ReleaseNotes.rst:232
msgid "Changes to the DAG infrastructure"
msgstr ""

#: ../../../ReleaseNotes.rst:236
msgid "Changes to the Debug Info"
msgstr ""

#: ../../../ReleaseNotes.rst:241
msgid "Changes to the LLVM tools"
msgstr ""

#: ../../../ReleaseNotes.rst:243
msgid ""
"llvm-cov: `-name-allowlist` is now accepted in addition to `-name-"
"whitelist`. `-name-whitelist` is marked as deprecated and to be removed in "
"future releases."
msgstr ""

#: ../../../ReleaseNotes.rst:247
msgid ""
"llvm-ar now supports ``--thin`` for creating a thin archive. The modifier "
"``T`` has a different meaning in some ar implementations. (`D116979 <https://"
"reviews.llvm.org/D116979>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:250
msgid ""
"llvm-ar now supports reading big archives for XCOFF. (`D111889 <https://"
"reviews.llvm.org/D111889>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:252
msgid ""
"llvm-nm now demangles Rust symbols. (`D111937 <https://reviews.llvm.org/"
"D111937>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:254
msgid ""
"llvm-objcopy's ELF port now avoids reordering section headers to preserve "
"``st_shndx`` fields of dynamic symbols. (`D107653 <https://reviews.llvm.org/"
"D112116>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:256
msgid ""
"llvm-objcopy now supports ``--update-section`` for ELF and Mach-O. (`D112116 "
"<https://reviews.llvm.org/D112116>`_) (`D117281 <https://reviews.llvm.org/"
"D117281>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:259
msgid ""
"llvm-objcopy now supports ``--subsystem`` for PE/COFF. (`D116556 <https://"
"reviews.llvm.org/D116556>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:261
msgid ""
"llvm-objcopy now supports mips64le relocations for ELF. (`D115635 <https://"
"reviews.llvm.org/D115635>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:263
msgid ""
"llvm-objcopy ``--rename-section`` now renames relocation sections together "
"with their targets. (`D110352 <https://reviews.llvm.org/D110352>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:265
msgid ""
"llvm-objdump ``--symbolize-operands`` now supports PowerPC. (`D114492 "
"<https://reviews.llvm.org/D114492>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:267
msgid ""
"llvm-objdump ``-p`` now dumps PE header. (`D113356 <https://reviews.llvm.org/"
"D113356>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:269
msgid ""
"llvm-objdump ``-R`` now supports ELF position-dependent executables. "
"(`D110595 <https://reviews.llvm.org/D110595>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:271
msgid ""
"llvm-objdump ``-T`` now prints symbol versions. (`D108097 <https://reviews."
"llvm.org/D108097>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:273
msgid "llvm-readobj: Improved printing of symbols in Windows unwind data."
msgstr ""

#: ../../../ReleaseNotes.rst:274
msgid ""
"llvm-readobj now supports ``--elf-output-style=JSON`` for JSON output and "
"``--pretty-print`` for pretty printing of this output. (`D114225 <https://"
"reviews.llvm.org/D114225>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:277
msgid ""
"llvm-readobj now supports several dump styles (``--needed-libs, --relocs, --"
"syms``) for XCOFF."
msgstr ""

#: ../../../ReleaseNotes.rst:278
msgid ""
"llvm-symbolizer now supports `--debuginfod <https://llvm.org/docs/"
"CommandGuide/llvm-symbolizer.html>`. (`D113717 <https://reviews.llvm.org/"
"D113717>`_)"
msgstr ""

#: ../../../ReleaseNotes.rst:280
msgid ""
"``llvm-cov`` now accepts \"allowlist\" spelling for ``-name-allowlist``."
msgstr ""

#: ../../../ReleaseNotes.rst:281
msgid "``llvm-nm`` now supports XCOFF object files."
msgstr ""

#: ../../../ReleaseNotes.rst:282
msgid ""
"Added ``--needed-libs``, aux header, and symbols support in ``llvm-readobj``."
msgstr ""

#: ../../../ReleaseNotes.rst:283
msgid "Added ``--symbolize-operands`` support in ``llvm-objdump``."
msgstr ""

#: ../../../ReleaseNotes.rst:284
msgid ""
"Tools that read archive files now support reading AIX big format archive "
"files."
msgstr ""

#: ../../../ReleaseNotes.rst:285
msgid "Added dump section support in ``obj2yaml``."
msgstr ""

#: ../../../ReleaseNotes.rst:286
msgid "Added ``yaml2obj`` support for 64-bit XCOFF."
msgstr ""

#: ../../../ReleaseNotes.rst:289
msgid "Changes to LLDB"
msgstr ""

#: ../../../ReleaseNotes.rst:291
msgid ""
"A change in Clang's type printing has changed the way LLDB names array types "
"(from ``int [N]`` to ``int[N]``) - LLDB pretty printer type name matching "
"code may need to be updated to handle this."
msgstr ""

#: ../../../ReleaseNotes.rst:294
msgid ""
"The following commands now ignore non-address bits (e.g. AArch64 pointer "
"signatures) in address arguments. In addition, non-address bits will not be "
"shown in the output of the commands."
msgstr ""

#: ../../../ReleaseNotes.rst:298
msgid "``memory find``"
msgstr ""

#: ../../../ReleaseNotes.rst:299
msgid "``memory read``"
msgstr ""

#: ../../../ReleaseNotes.rst:300
msgid "``memory region`` (see below)"
msgstr ""

#: ../../../ReleaseNotes.rst:301
msgid "``memory tag read``"
msgstr ""

#: ../../../ReleaseNotes.rst:302
msgid "``memory tag write``"
msgstr ""

#: ../../../ReleaseNotes.rst:304
msgid ""
"The ``memory region`` command and ``GetMemoryRegionInfo`` API method now "
"ignore non-address bits in the address parameter. This also means that on "
"systems with non-address bits the last (usually unmapped) memory region will "
"not extend to 0xF...F. Instead it will end at the end of the mappable range "
"that the virtual address size allows."
msgstr ""

#: ../../../ReleaseNotes.rst:310
msgid ""
"The ``memory read`` command has a new option ``--show-tags``. Use this "
"option to show memory tags beside the contents of tagged memory ranges."
msgstr ""

#: ../../../ReleaseNotes.rst:313
msgid ""
"Fixed continuing from breakpoints and singlestepping on Windows on ARM/ARM64."
msgstr ""

#: ../../../ReleaseNotes.rst:315
msgid ""
"LLDB has been included in Windows on ARM64 binary release with Python "
"support disabled."
msgstr ""

#: ../../../ReleaseNotes.rst:319
msgid "Changes to Sanitizers"
msgstr ""

#: ../../../ReleaseNotes.rst:322
msgid "Changes to BOLT"
msgstr ""

#: ../../../ReleaseNotes.rst:324
msgid ""
"BOLT project is added to the LLVM monorepo. BOLT is a post-link optimizer "
"developed to speed up large applications. Build and usage instructions are "
"given in `README <https://github.com/llvm/llvm-project/tree/main/bolt>`_."
msgstr ""

#: ../../../ReleaseNotes.rst:329
msgid "External Open Source Projects Using LLVM 14"
msgstr ""

#: ../../../ReleaseNotes.rst:331
msgid "A project..."
msgstr ""

#: ../../../ReleaseNotes.rst:334
msgid "Additional Information"
msgstr ""

#: ../../../ReleaseNotes.rst:336
msgid ""
"A wide variety of additional information is available on the `LLVM web page "
"<https://llvm.org/>`_, in particular in the `documentation <https://llvm.org/"
"docs/>`_ section.  The web page also contains versions of the API "
"documentation which is up-to-date with the Git version of the source code.  "
"You can access versions of these documents specific to this release by going "
"into the ``llvm/docs/`` directory in the LLVM tree."
msgstr ""

#: ../../../ReleaseNotes.rst:343
msgid ""
"If you have any questions or comments about LLVM, please feel free to "
"contact us via the `mailing lists <https://llvm.org/docs/#mailing-lists>`_."
msgstr ""
