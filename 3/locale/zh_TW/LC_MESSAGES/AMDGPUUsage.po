# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../AMDGPUUsage.rst:3
msgid "User Guide for AMDGPU Back-end"
msgstr ""

#: ../../../AMDGPUUsage.rst:6
msgid "Introduction"
msgstr "簡介"

#: ../../../AMDGPUUsage.rst:8
msgid ""
"The AMDGPU back-end provides ISA code generation for AMD GPUs, starting with "
"the R600 family up until the current Volcanic Islands (GCN Gen 3)."
msgstr ""

#: ../../../AMDGPUUsage.rst:13
msgid "Conventions"
msgstr ""

#: ../../../AMDGPUUsage.rst:16
msgid "Address Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:18
msgid "The AMDGPU back-end uses the following address space mapping:"
msgstr ""

#: ../../../AMDGPUUsage.rst:21
msgid "Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:21
msgid "Memory Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:23
msgid "0"
msgstr ""

#: ../../../AMDGPUUsage.rst:23
msgid "Private"
msgstr ""

#: ../../../AMDGPUUsage.rst:24
msgid "1"
msgstr ""

#: ../../../AMDGPUUsage.rst:24
msgid "Global"
msgstr ""

#: ../../../AMDGPUUsage.rst:25
msgid "2"
msgstr ""

#: ../../../AMDGPUUsage.rst:25
msgid "Constant"
msgstr ""

#: ../../../AMDGPUUsage.rst:26
msgid "3"
msgstr ""

#: ../../../AMDGPUUsage.rst:26
msgid "Local"
msgstr ""

#: ../../../AMDGPUUsage.rst:27
msgid "4"
msgstr ""

#: ../../../AMDGPUUsage.rst:27
msgid "Generic (Flat)"
msgstr ""

#: ../../../AMDGPUUsage.rst:28
msgid "5"
msgstr ""

#: ../../../AMDGPUUsage.rst:28
msgid "Region"
msgstr ""

#: ../../../AMDGPUUsage.rst:31
msgid ""
"The terminology in the table, aside from the region memory space, is from "
"the OpenCL standard."
msgstr ""

#: ../../../AMDGPUUsage.rst:36
msgid "Assembler"
msgstr ""

#: ../../../AMDGPUUsage.rst:38
msgid "The assembler is currently considered experimental."
msgstr ""

#: ../../../AMDGPUUsage.rst:40
msgid "For syntax examples look in test/MC/AMDGPU."
msgstr ""

#: ../../../AMDGPUUsage.rst:42
msgid ""
"Below some of the currently supported features (modulo bugs).  These all "
"apply to the Southern Islands ISA, Sea Islands and Volcanic Islands are also "
"supported but may be missing some instructions and have more bugs:"
msgstr ""

#: ../../../AMDGPUUsage.rst:47
msgid "DS Instructions"
msgstr ""

#: ../../../AMDGPUUsage.rst:48
msgid "All DS instructions are supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:51
msgid "FLAT Instructions"
msgstr ""

#: ../../../AMDGPUUsage.rst:52
msgid ""
"These instructions are only present in the Sea Islands and Volcanic Islands "
"instruction set.  All FLAT instructions are supported for these architectures"
msgstr ""

#: ../../../AMDGPUUsage.rst:56
msgid "MUBUF Instructions"
msgstr ""

#: ../../../AMDGPUUsage.rst:57
msgid "All non-atomic MUBUF instructions are supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:60
msgid "SMRD Instructions"
msgstr ""

#: ../../../AMDGPUUsage.rst:61
msgid "Only the s_load_dword* SMRD instructions are supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:64
msgid "SOP1 Instructions"
msgstr ""

#: ../../../AMDGPUUsage.rst:65
msgid "All SOP1 instructions are supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:68
msgid "SOP2 Instructions"
msgstr ""

#: ../../../AMDGPUUsage.rst:69
msgid "All SOP2 instructions are supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:72
msgid "SOPC Instructions"
msgstr ""

#: ../../../AMDGPUUsage.rst:73
msgid "All SOPC instructions are supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:76
msgid "SOPP Instructions"
msgstr ""

#: ../../../AMDGPUUsage.rst:78
msgid ""
"Unless otherwise mentioned, all SOPP instructions that have one or more "
"operands accept integer operands only.  No verification is performed on the "
"operands, so it is up to the programmer to be familiar with the range or "
"acceptable values."
msgstr ""

#: ../../../AMDGPUUsage.rst:84
msgid "s_waitcnt"
msgstr ""

#: ../../../AMDGPUUsage.rst:86
msgid ""
"s_waitcnt accepts named arguments to specify which memory counter(s) to wait "
"for."
msgstr ""

#: ../../../AMDGPUUsage.rst:102
msgid "VOP1, VOP2, VOP3, VOPC Instructions"
msgstr ""

#: ../../../AMDGPUUsage.rst:104
msgid "All 32-bit and 64-bit encodings should work."
msgstr ""

#: ../../../AMDGPUUsage.rst:106
msgid ""
"The assembler will automatically detect which encoding size to use for VOP1, "
"VOP2, and VOPC instructions based on the operands.  If you want to force a "
"specific encoding size, you can add an _e32 (for 32-bit encoding) or _e64 "
"(for 64-bit encoding) suffix to the instruction.  Most, but not all "
"instructions support an explicit suffix.  These are all valid assembly "
"strings:"
msgstr ""

#: ../../../AMDGPUUsage.rst:120
msgid "Assembler Directives"
msgstr ""

#: ../../../AMDGPUUsage.rst:123
msgid ".hsa_code_object_version major, minor"
msgstr ""

#: ../../../AMDGPUUsage.rst:125
msgid ""
"*major* and *minor* are integers that specify the version of the HSA code "
"object that will be generated by the assembler.  This value will be stored "
"in an entry of the .note section."
msgstr ""

#: ../../../AMDGPUUsage.rst:130
msgid ".hsa_code_object_isa [major, minor, stepping, vendor, arch]"
msgstr ""

#: ../../../AMDGPUUsage.rst:132
msgid ""
"*major*, *minor*, and *stepping* are all integers that describe the "
"instruction set architecture (ISA) version of the assembly program."
msgstr ""

#: ../../../AMDGPUUsage.rst:135
msgid ""
"*vendor* and *arch* are quoted strings.  *vendor* should always be equal to "
"\"AMD\" and *arch* should always be equal to \"AMDGPU\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:138
msgid ""
"If no arguments are specified, then the assembler will derive the ISA "
"version, *vendor*, and *arch* from the value of the -mcpu option that is "
"passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:142
msgid ""
"ISA version, *vendor*, and *arch* will all be stored in a single entry of "
"the .note section."
msgstr ""

#: ../../../AMDGPUUsage.rst:146
msgid ".amd_kernel_code_t"
msgstr ""

#: ../../../AMDGPUUsage.rst:148
msgid ""
"This directive marks the beginning of a list of key / value pairs that are "
"used to specify the amd_kernel_code_t object that will be emitted by the "
"assembler. The list must be terminated by the *.end_amd_kernel_code_t* "
"directive.  For any amd_kernel_code_t values that are unspecified a default "
"value will be used.  The default value for all keys is 0, with the following "
"exceptions:"
msgstr ""

#: ../../../AMDGPUUsage.rst:154
msgid "*kernel_code_version_major* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:155
msgid "*machine_kind* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:156
msgid ""
"*machine_version_major*, *machine_version_minor*, and "
"*machine_version_stepping* are derived from the value of the -mcpu option "
"that is passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:159
msgid "*kernel_code_entry_byte_offset* defaults to 256."
msgstr ""

#: ../../../AMDGPUUsage.rst:160
msgid "*wavefront_size* defaults to 6."
msgstr ""

#: ../../../AMDGPUUsage.rst:161
msgid ""
"*kernarg_segment_alignment*, *group_segment_alignment*, and "
"*private_segment_alignment* default to 4.  Note that alignments are "
"specified as a power of two, so a value of **n** means an alignment of 2^ "
"**n**."
msgstr ""

#: ../../../AMDGPUUsage.rst:165
msgid ""
"The *.amd_kernel_code_t* directive must be placed immediately after the "
"function label and before any instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:168
msgid ""
"For a full list of amd_kernel_code_t keys, see the examples in test/CodeGen/"
"AMDGPU/hsa.s.  For an explanation of the meanings of the different keys, see "
"the comments in lib/Target/AMDGPU/AmdKernelCodeT.h"
msgstr ""

#: ../../../AMDGPUUsage.rst:172
msgid "Here is an example of a minimal amd_kernel_code_t specification:"
msgstr ""
