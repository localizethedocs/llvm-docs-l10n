# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../AMDGPUUsage.rst:3
msgid "User Guide for AMDGPU Backend"
msgstr ""

#: ../../../AMDGPUUsage.rst:28
msgid "Introduction"
msgstr ""

#: ../../../AMDGPUUsage.rst:30
msgid ""
"The AMDGPU backend provides ISA code generation for AMD GPUs, starting with "
"the R600 family up until the current GCN families. It lives in the ``llvm/"
"lib/Target/AMDGPU`` directory."
msgstr ""

#: ../../../AMDGPUUsage.rst:35
msgid "LLVM"
msgstr ""

#: ../../../AMDGPUUsage.rst:40
msgid "Target Triples"
msgstr ""

#: ../../../AMDGPUUsage.rst:42
msgid ""
"Use the Clang option ``-target <Architecture>-<Vendor>-<OS>-<Environment>`` "
"to specify the target triple:"
msgstr ""

#: ../../../AMDGPUUsage.rst:45
msgid "AMDGPU Architectures"
msgstr ""

#: ../../../AMDGPUUsage.rst:49
msgid "Architecture"
msgstr ""

#: ../../../AMDGPUUsage.rst:49 ../../../AMDGPUUsage.rst:59
#: ../../../AMDGPUUsage.rst:69 ../../../AMDGPUUsage.rst:93
#: ../../../AMDGPUUsage.rst:479 ../../../AMDGPUUsage.rst:760
#: ../../../AMDGPUUsage.rst:854 ../../../AMDGPUUsage.rst:1020
#: ../../../AMDGPUUsage.rst:1047 ../../../AMDGPUUsage.rst:1082
#: ../../../AMDGPUUsage.rst:1268 ../../../AMDGPUUsage.rst:1434
#: ../../../AMDGPUUsage.rst:1470 ../../../AMDGPUUsage.rst:1692
#: ../../../AMDGPUUsage.rst:2439 ../../../AMDGPUUsage.rst:2547
#: ../../../AMDGPUUsage.rst:2591 ../../../AMDGPUUsage.rst:2628
#: ../../../AMDGPUUsage.rst:2669 ../../../AMDGPUUsage.rst:2864
#: ../../../AMDGPUUsage.rst:2964 ../../../AMDGPUUsage.rst:3009
#: ../../../AMDGPUUsage.rst:3153 ../../../AMDGPUUsage.rst:3360
#: ../../../AMDGPUUsage.rst:3574 ../../../AMDGPUUsage.rst:3719
#: ../../../AMDGPUUsage.rst:4010 ../../../AMDGPUUsage.rst:4180
#: ../../../AMDGPUUsage.rst:4203 ../../../AMDGPUUsage.rst:4218
#: ../../../AMDGPUUsage.rst:4232 ../../../AMDGPUUsage.rst:4247
#: ../../../AMDGPUUsage.rst:4288 ../../../AMDGPUUsage.rst:4377
#: ../../../AMDGPUUsage.rst:4398 ../../../AMDGPUUsage.rst:10505
#: ../../../AMDGPUUsage.rst:10545 ../../../AMDGPUUsage.rst:10587
#: ../../../AMDGPUUsage.rst:11064 ../../../AMDGPUUsage.rst:11079
#: ../../../AMDGPUUsage.rst:11150 ../../../AMDGPUUsage.rst:11166
#: ../../../AMDGPUUsage.rst:11190 ../../../AMDGPUUsage.rst:11207
#: ../../../AMDGPUUsage.rst:11239 ../../../AMDGPUUsage.rst:11252
#: ../../../AMDGPUUsage.rst:11274 ../../../AMDGPUUsage.rst:11331
#: ../../../AMDGPUUsage.rst:11427 ../../../AMDGPUUsage.rst:11455
#: ../../../AMDGPUUsage.rst:12020
msgid "Description"
msgstr ""

#: ../../../AMDGPUUsage.rst:51 ../../../AMDGPUUsage.rst:131
#: ../../../AMDGPUUsage.rst:136 ../../../AMDGPUUsage.rst:141
#: ../../../AMDGPUUsage.rst:146 ../../../AMDGPUUsage.rst:153
#: ../../../AMDGPUUsage.rst:158 ../../../AMDGPUUsage.rst:163
#: ../../../AMDGPUUsage.rst:170 ../../../AMDGPUUsage.rst:175
#: ../../../AMDGPUUsage.rst:180 ../../../AMDGPUUsage.rst:185
#: ../../../AMDGPUUsage.rst:190 ../../../AMDGPUUsage.rst:197
#: ../../../AMDGPUUsage.rst:202 ../../../AMDGPUUsage.rst:207
#: ../../../AMDGPUUsage.rst:212 ../../../AMDGPUUsage.rst:1113
msgid "``r600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:51
msgid "AMD GPUs HD2XXX-HD6XXX for graphics and compute shaders."
msgstr ""

#: ../../../AMDGPUUsage.rst:52 ../../../AMDGPUUsage.rst:219
#: ../../../AMDGPUUsage.rst:224 ../../../AMDGPUUsage.rst:229
#: ../../../AMDGPUUsage.rst:236 ../../../AMDGPUUsage.rst:246
#: ../../../AMDGPUUsage.rst:250 ../../../AMDGPUUsage.rst:254
#: ../../../AMDGPUUsage.rst:263 ../../../AMDGPUUsage.rst:267
#: ../../../AMDGPUUsage.rst:276 ../../../AMDGPUUsage.rst:294
#: ../../../AMDGPUUsage.rst:297 ../../../AMDGPUUsage.rst:303
#: ../../../AMDGPUUsage.rst:306 ../../../AMDGPUUsage.rst:309
#: ../../../AMDGPUUsage.rst:314 ../../../AMDGPUUsage.rst:323
#: ../../../AMDGPUUsage.rst:330 ../../../AMDGPUUsage.rst:333
#: ../../../AMDGPUUsage.rst:340 ../../../AMDGPUUsage.rst:344
#: ../../../AMDGPUUsage.rst:348 ../../../AMDGPUUsage.rst:355
#: ../../../AMDGPUUsage.rst:362 ../../../AMDGPUUsage.rst:378
#: ../../../AMDGPUUsage.rst:382 ../../../AMDGPUUsage.rst:386
#: ../../../AMDGPUUsage.rst:389 ../../../AMDGPUUsage.rst:398
#: ../../../AMDGPUUsage.rst:401 ../../../AMDGPUUsage.rst:404
#: ../../../AMDGPUUsage.rst:411 ../../../AMDGPUUsage.rst:417
#: ../../../AMDGPUUsage.rst:424
msgid "``amdgcn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:52
msgid "AMD GPUs GCN GFX6 onwards for graphics and compute shaders."
msgstr ""

#: ../../../AMDGPUUsage.rst:55
msgid "AMDGPU Vendors"
msgstr ""

#: ../../../AMDGPUUsage.rst:59
msgid "Vendor"
msgstr ""

#: ../../../AMDGPUUsage.rst:61
msgid "``amd``"
msgstr ""

#: ../../../AMDGPUUsage.rst:61
msgid "Can be used for all AMD GPU usage."
msgstr ""

#: ../../../AMDGPUUsage.rst:62 ../../../AMDGPUUsage.rst:85
msgid "``mesa3d``"
msgstr ""

#: ../../../AMDGPUUsage.rst:62
msgid "Can be used if the OS is ``mesa3d``."
msgstr ""

#: ../../../AMDGPUUsage.rst:65
msgid "AMDGPU Operating Systems"
msgstr ""

#: ../../../AMDGPUUsage.rst:69
msgid "OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:71 ../../../AMDGPUUsage.rst:95
msgid "*<empty>*"
msgstr ""

#: ../../../AMDGPUUsage.rst:71
msgid "Defaults to the *unknown* OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:72
msgid "``amdhsa``"
msgstr ""

#: ../../../AMDGPUUsage.rst:72
msgid "Compute kernels executed on HSA [HSA]_ compatible runtimes such as:"
msgstr ""

#: ../../../AMDGPUUsage.rst:75
msgid ""
"AMD's ROCmâ„¢ runtime [AMD-ROCm]_ using the *rocm-amdhsa* loader on Linux. See "
"*AMD ROCm Platform Release Notes* [AMD-ROCm-Release-Notes]_ for supported "
"hardware and software."
msgstr ""

#: ../../../AMDGPUUsage.rst:79
msgid "AMD's PAL runtime using the *pal-amdhsa* loader on Windows."
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "``amdpal``"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid ""
"Graphic shaders and compute kernels executed on AMD's PAL runtime using the "
"*pal-amdpal* loader on Windows and Linux Pro."
msgstr ""

#: ../../../AMDGPUUsage.rst:85
msgid ""
"Graphic shaders and compute kernels executed on AMD's Mesa 3D runtime using "
"the *mesa-mesa3d* loader on Linux."
msgstr ""

#: ../../../AMDGPUUsage.rst:89
msgid "AMDGPU Environments"
msgstr ""

#: ../../../AMDGPUUsage.rst:93
msgid "Environment"
msgstr ""

#: ../../../AMDGPUUsage.rst:95
msgid "Default."
msgstr ""

#: ../../../AMDGPUUsage.rst:101
msgid "Processors"
msgstr ""

#: ../../../AMDGPUUsage.rst:103
msgid ""
"Use the Clang options ``-mcpu=<target-id>`` or ``--offload-arch=<target-"
"id>`` to specify the AMDGPU processor together with optional target "
"features. See :ref:`amdgpu-target-id` and :ref:`amdgpu-target-features` for "
"AMD GPU target specific information."
msgstr ""

#: ../../../AMDGPUUsage.rst:108
msgid ""
"Every processor supports every OS ABI (see :ref:`amdgpu-os`) with the "
"following exceptions:"
msgstr ""

#: ../../../AMDGPUUsage.rst:110
msgid ""
"``amdhsa`` is not supported in ``r600`` architecture (see :ref:`amdgpu-"
"architecture-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:113
msgid "AMDGPU Processors"
msgstr ""

#: ../../../AMDGPUUsage.rst:117
msgid "Processor"
msgstr ""

#: ../../../AMDGPUUsage.rst:117
msgid "Alternative Processor"
msgstr ""

#: ../../../AMDGPUUsage.rst:117
msgid "Target Triple Architecture"
msgstr ""

#: ../../../AMDGPUUsage.rst:117
msgid "dGPU/ APU"
msgstr ""

#: ../../../AMDGPUUsage.rst:117
msgid "Target Features Supported"
msgstr ""

#: ../../../AMDGPUUsage.rst:117
msgid "Target Properties"
msgstr ""

#: ../../../AMDGPUUsage.rst:117
msgid ""
"OS Support *(see* `amdgpu-os`_ *and corresponding runtime release notes for "
"current information and level of support)*"
msgstr ""

#: ../../../AMDGPUUsage.rst:117
msgid "Example Products"
msgstr ""

#: ../../../AMDGPUUsage.rst:129
msgid "**Radeon HD 2000/3000 Series (R600)** [AMD-RADEON-HD-2000-3000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:131 ../../../AMDGPUUsage.rst:136
#: ../../../AMDGPUUsage.rst:141 ../../../AMDGPUUsage.rst:146
#: ../../../AMDGPUUsage.rst:153 ../../../AMDGPUUsage.rst:158
#: ../../../AMDGPUUsage.rst:163 ../../../AMDGPUUsage.rst:170
#: ../../../AMDGPUUsage.rst:175 ../../../AMDGPUUsage.rst:180
#: ../../../AMDGPUUsage.rst:185 ../../../AMDGPUUsage.rst:190
#: ../../../AMDGPUUsage.rst:197 ../../../AMDGPUUsage.rst:202
#: ../../../AMDGPUUsage.rst:207 ../../../AMDGPUUsage.rst:212
#: ../../../AMDGPUUsage.rst:219 ../../../AMDGPUUsage.rst:224
#: ../../../AMDGPUUsage.rst:229 ../../../AMDGPUUsage.rst:246
#: ../../../AMDGPUUsage.rst:250 ../../../AMDGPUUsage.rst:263
#: ../../../AMDGPUUsage.rst:294 ../../../AMDGPUUsage.rst:297
#: ../../../AMDGPUUsage.rst:303 ../../../AMDGPUUsage.rst:306
#: ../../../AMDGPUUsage.rst:309 ../../../AMDGPUUsage.rst:323
#: ../../../AMDGPUUsage.rst:333 ../../../AMDGPUUsage.rst:340
#: ../../../AMDGPUUsage.rst:344 ../../../AMDGPUUsage.rst:355
#: ../../../AMDGPUUsage.rst:378 ../../../AMDGPUUsage.rst:382
#: ../../../AMDGPUUsage.rst:386 ../../../AMDGPUUsage.rst:398
#: ../../../AMDGPUUsage.rst:401 ../../../AMDGPUUsage.rst:404
#: ../../../AMDGPUUsage.rst:417
msgid "dGPU"
msgstr ""

#: ../../../AMDGPUUsage.rst:131 ../../../AMDGPUUsage.rst:136
#: ../../../AMDGPUUsage.rst:141 ../../../AMDGPUUsage.rst:146
#: ../../../AMDGPUUsage.rst:153 ../../../AMDGPUUsage.rst:158
#: ../../../AMDGPUUsage.rst:163 ../../../AMDGPUUsage.rst:170
#: ../../../AMDGPUUsage.rst:175 ../../../AMDGPUUsage.rst:180
#: ../../../AMDGPUUsage.rst:185 ../../../AMDGPUUsage.rst:190
#: ../../../AMDGPUUsage.rst:197 ../../../AMDGPUUsage.rst:202
#: ../../../AMDGPUUsage.rst:207 ../../../AMDGPUUsage.rst:212
#: ../../../AMDGPUUsage.rst:219 ../../../AMDGPUUsage.rst:224
#: ../../../AMDGPUUsage.rst:229
msgid "Does not support generic address space"
msgstr ""

#: ../../../AMDGPUUsage.rst:136 ../../../AMDGPUUsage.rst:1114
msgid "``r630``"
msgstr ""

#: ../../../AMDGPUUsage.rst:141 ../../../AMDGPUUsage.rst:1115
msgid "``rs880``"
msgstr ""

#: ../../../AMDGPUUsage.rst:146 ../../../AMDGPUUsage.rst:1116
msgid "``rv670``"
msgstr ""

#: ../../../AMDGPUUsage.rst:151
msgid "**Radeon HD 4000 Series (R700)** [AMD-RADEON-HD-4000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:153 ../../../AMDGPUUsage.rst:1117
msgid "``rv710``"
msgstr ""

#: ../../../AMDGPUUsage.rst:158 ../../../AMDGPUUsage.rst:1118
msgid "``rv730``"
msgstr ""

#: ../../../AMDGPUUsage.rst:163 ../../../AMDGPUUsage.rst:1119
msgid "``rv770``"
msgstr ""

#: ../../../AMDGPUUsage.rst:168
msgid "**Radeon HD 5000 Series (Evergreen)** [AMD-RADEON-HD-5000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:170 ../../../AMDGPUUsage.rst:1120
msgid "``cedar``"
msgstr ""

#: ../../../AMDGPUUsage.rst:175 ../../../AMDGPUUsage.rst:1121
msgid "``cypress``"
msgstr ""

#: ../../../AMDGPUUsage.rst:180 ../../../AMDGPUUsage.rst:1122
msgid "``juniper``"
msgstr ""

#: ../../../AMDGPUUsage.rst:185 ../../../AMDGPUUsage.rst:1123
msgid "``redwood``"
msgstr ""

#: ../../../AMDGPUUsage.rst:190 ../../../AMDGPUUsage.rst:1124
msgid "``sumo``"
msgstr ""

#: ../../../AMDGPUUsage.rst:195
msgid "**Radeon HD 6000 Series (Northern Islands)** [AMD-RADEON-HD-6000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:197 ../../../AMDGPUUsage.rst:1125
msgid "``barts``"
msgstr ""

#: ../../../AMDGPUUsage.rst:202 ../../../AMDGPUUsage.rst:1126
msgid "``caicos``"
msgstr ""

#: ../../../AMDGPUUsage.rst:207 ../../../AMDGPUUsage.rst:1127
msgid "``cayman``"
msgstr ""

#: ../../../AMDGPUUsage.rst:212 ../../../AMDGPUUsage.rst:1128
msgid "``turks``"
msgstr ""

#: ../../../AMDGPUUsage.rst:217
msgid "**GCN GFX6 (Southern Islands (SI))** [AMD-GCN-GFX6]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:219 ../../../AMDGPUUsage.rst:1131
#: ../../../AMDGPUUsage.rst:1390
msgid "``gfx600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:219
msgid "``tahiti``"
msgstr ""

#: ../../../AMDGPUUsage.rst:219 ../../../AMDGPUUsage.rst:224
#: ../../../AMDGPUUsage.rst:229 ../../../AMDGPUUsage.rst:238
#: ../../../AMDGPUUsage.rst:248 ../../../AMDGPUUsage.rst:252
#: ../../../AMDGPUUsage.rst:255 ../../../AMDGPUUsage.rst:264
#: ../../../AMDGPUUsage.rst:268 ../../../AMDGPUUsage.rst:278
#: ../../../AMDGPUUsage.rst:296 ../../../AMDGPUUsage.rst:299
#: ../../../AMDGPUUsage.rst:305 ../../../AMDGPUUsage.rst:308
#: ../../../AMDGPUUsage.rst:311 ../../../AMDGPUUsage.rst:316
#: ../../../AMDGPUUsage.rst:325 ../../../AMDGPUUsage.rst:332
#: ../../../AMDGPUUsage.rst:335 ../../../AMDGPUUsage.rst:342
#: ../../../AMDGPUUsage.rst:348 ../../../AMDGPUUsage.rst:362
#: ../../../AMDGPUUsage.rst:380 ../../../AMDGPUUsage.rst:384
#: ../../../AMDGPUUsage.rst:388 ../../../AMDGPUUsage.rst:391
#: ../../../AMDGPUUsage.rst:400 ../../../AMDGPUUsage.rst:403
#: ../../../AMDGPUUsage.rst:406 ../../../AMDGPUUsage.rst:411
#: ../../../AMDGPUUsage.rst:417 ../../../AMDGPUUsage.rst:424
msgid "*pal-amdpal*"
msgstr ""

#: ../../../AMDGPUUsage.rst:224 ../../../AMDGPUUsage.rst:1132
#: ../../../AMDGPUUsage.rst:1391
msgid "``gfx601``"
msgstr ""

#: ../../../AMDGPUUsage.rst:224
msgid "``pitcairn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:225
msgid "``verde``"
msgstr ""

#: ../../../AMDGPUUsage.rst:229 ../../../AMDGPUUsage.rst:1157
#: ../../../AMDGPUUsage.rst:1392
msgid "``gfx602``"
msgstr ""

#: ../../../AMDGPUUsage.rst:229
msgid "``hainan``"
msgstr ""

#: ../../../AMDGPUUsage.rst:230
msgid "``oland``"
msgstr ""

#: ../../../AMDGPUUsage.rst:234
msgid "**GCN GFX7 (Sea Islands (CI))** [AMD-GCN-GFX7]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:236 ../../../AMDGPUUsage.rst:1133
#: ../../../AMDGPUUsage.rst:1393
msgid "``gfx700``"
msgstr ""

#: ../../../AMDGPUUsage.rst:236
msgid "``kaveri``"
msgstr ""

#: ../../../AMDGPUUsage.rst:236 ../../../AMDGPUUsage.rst:254
#: ../../../AMDGPUUsage.rst:267 ../../../AMDGPUUsage.rst:276
#: ../../../AMDGPUUsage.rst:314 ../../../AMDGPUUsage.rst:330
#: ../../../AMDGPUUsage.rst:348 ../../../AMDGPUUsage.rst:362
#: ../../../AMDGPUUsage.rst:389 ../../../AMDGPUUsage.rst:411
#: ../../../AMDGPUUsage.rst:424
msgid "APU"
msgstr ""

#: ../../../AMDGPUUsage.rst:236 ../../../AMDGPUUsage.rst:246
#: ../../../AMDGPUUsage.rst:250 ../../../AMDGPUUsage.rst:254
#: ../../../AMDGPUUsage.rst:263 ../../../AMDGPUUsage.rst:267
#: ../../../AMDGPUUsage.rst:276 ../../../AMDGPUUsage.rst:294
#: ../../../AMDGPUUsage.rst:303 ../../../AMDGPUUsage.rst:306
#: ../../../AMDGPUUsage.rst:309 ../../../AMDGPUUsage.rst:314
msgid "Offset flat scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:236 ../../../AMDGPUUsage.rst:246
#: ../../../AMDGPUUsage.rst:250 ../../../AMDGPUUsage.rst:276
#: ../../../AMDGPUUsage.rst:294 ../../../AMDGPUUsage.rst:297
#: ../../../AMDGPUUsage.rst:303 ../../../AMDGPUUsage.rst:306
#: ../../../AMDGPUUsage.rst:309 ../../../AMDGPUUsage.rst:314
#: ../../../AMDGPUUsage.rst:323 ../../../AMDGPUUsage.rst:330
#: ../../../AMDGPUUsage.rst:333 ../../../AMDGPUUsage.rst:340
#: ../../../AMDGPUUsage.rst:344 ../../../AMDGPUUsage.rst:355
#: ../../../AMDGPUUsage.rst:378 ../../../AMDGPUUsage.rst:382
#: ../../../AMDGPUUsage.rst:386 ../../../AMDGPUUsage.rst:389
#: ../../../AMDGPUUsage.rst:398 ../../../AMDGPUUsage.rst:401
#: ../../../AMDGPUUsage.rst:404
msgid "*rocm-amdhsa*"
msgstr ""

#: ../../../AMDGPUUsage.rst:237 ../../../AMDGPUUsage.rst:247
#: ../../../AMDGPUUsage.rst:251 ../../../AMDGPUUsage.rst:254
#: ../../../AMDGPUUsage.rst:263 ../../../AMDGPUUsage.rst:267
#: ../../../AMDGPUUsage.rst:277 ../../../AMDGPUUsage.rst:295
#: ../../../AMDGPUUsage.rst:298 ../../../AMDGPUUsage.rst:304
#: ../../../AMDGPUUsage.rst:307 ../../../AMDGPUUsage.rst:310
#: ../../../AMDGPUUsage.rst:315 ../../../AMDGPUUsage.rst:324
#: ../../../AMDGPUUsage.rst:331 ../../../AMDGPUUsage.rst:334
#: ../../../AMDGPUUsage.rst:341 ../../../AMDGPUUsage.rst:379
#: ../../../AMDGPUUsage.rst:383 ../../../AMDGPUUsage.rst:387
#: ../../../AMDGPUUsage.rst:390 ../../../AMDGPUUsage.rst:399
#: ../../../AMDGPUUsage.rst:402 ../../../AMDGPUUsage.rst:405
msgid "*pal-amdhsa*"
msgstr ""

#: ../../../AMDGPUUsage.rst:236
msgid "A6-7000"
msgstr ""

#: ../../../AMDGPUUsage.rst:237
msgid "A6 Pro-7050B"
msgstr ""

#: ../../../AMDGPUUsage.rst:238
msgid "A8-7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:239
msgid "A8 Pro-7150B"
msgstr ""

#: ../../../AMDGPUUsage.rst:240
msgid "A10-7300"
msgstr ""

#: ../../../AMDGPUUsage.rst:241
msgid "A10 Pro-7350B"
msgstr ""

#: ../../../AMDGPUUsage.rst:242
msgid "FX-7500"
msgstr ""

#: ../../../AMDGPUUsage.rst:243
msgid "A8-7200P"
msgstr ""

#: ../../../AMDGPUUsage.rst:244
msgid "A10-7400P"
msgstr ""

#: ../../../AMDGPUUsage.rst:245
msgid "FX-7600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:246 ../../../AMDGPUUsage.rst:1134
#: ../../../AMDGPUUsage.rst:1394
msgid "``gfx701``"
msgstr ""

#: ../../../AMDGPUUsage.rst:246
msgid "``hawaii``"
msgstr ""

#: ../../../AMDGPUUsage.rst:246
msgid "FirePro W8100"
msgstr ""

#: ../../../AMDGPUUsage.rst:247
msgid "FirePro W9100"
msgstr ""

#: ../../../AMDGPUUsage.rst:248
msgid "FirePro S9150"
msgstr ""

#: ../../../AMDGPUUsage.rst:249
msgid "FirePro S9170"
msgstr ""

#: ../../../AMDGPUUsage.rst:250 ../../../AMDGPUUsage.rst:1135
#: ../../../AMDGPUUsage.rst:1395
msgid "``gfx702``"
msgstr ""

#: ../../../AMDGPUUsage.rst:250
msgid "Radeon R9 290"
msgstr ""

#: ../../../AMDGPUUsage.rst:251
msgid "Radeon R9 290x"
msgstr ""

#: ../../../AMDGPUUsage.rst:252
msgid "Radeon R390"
msgstr ""

#: ../../../AMDGPUUsage.rst:253
msgid "Radeon R390x"
msgstr ""

#: ../../../AMDGPUUsage.rst:254 ../../../AMDGPUUsage.rst:1136
#: ../../../AMDGPUUsage.rst:1396
msgid "``gfx703``"
msgstr ""

#: ../../../AMDGPUUsage.rst:254
msgid "``kabini``"
msgstr ""

#: ../../../AMDGPUUsage.rst:255
msgid "``mullins``"
msgstr ""

#: ../../../AMDGPUUsage.rst:254
msgid "E1-2100"
msgstr ""

#: ../../../AMDGPUUsage.rst:255
msgid "E1-2200"
msgstr ""

#: ../../../AMDGPUUsage.rst:256
msgid "E1-2500"
msgstr ""

#: ../../../AMDGPUUsage.rst:257
msgid "E2-3000"
msgstr ""

#: ../../../AMDGPUUsage.rst:258
msgid "E2-3800"
msgstr ""

#: ../../../AMDGPUUsage.rst:259
msgid "A4-5000"
msgstr ""

#: ../../../AMDGPUUsage.rst:260
msgid "A4-5100"
msgstr ""

#: ../../../AMDGPUUsage.rst:261
msgid "A6-5200"
msgstr ""

#: ../../../AMDGPUUsage.rst:262
msgid "A4 Pro-3340B"
msgstr ""

#: ../../../AMDGPUUsage.rst:263 ../../../AMDGPUUsage.rst:1137
#: ../../../AMDGPUUsage.rst:1397
msgid "``gfx704``"
msgstr ""

#: ../../../AMDGPUUsage.rst:263
msgid "``bonaire``"
msgstr ""

#: ../../../AMDGPUUsage.rst:263
msgid "Radeon HD 7790"
msgstr ""

#: ../../../AMDGPUUsage.rst:264
msgid "Radeon HD 8770"
msgstr ""

#: ../../../AMDGPUUsage.rst:265
msgid "R7 260"
msgstr ""

#: ../../../AMDGPUUsage.rst:266
msgid "R7 260X"
msgstr ""

#: ../../../AMDGPUUsage.rst:267 ../../../AMDGPUUsage.rst:1158
#: ../../../AMDGPUUsage.rst:1398
msgid "``gfx705``"
msgstr ""

#: ../../../AMDGPUUsage.rst:267 ../../../AMDGPUUsage.rst:314
#: ../../../AMDGPUUsage.rst:333 ../../../AMDGPUUsage.rst:348
#: ../../../AMDGPUUsage.rst:355 ../../../AMDGPUUsage.rst:389
#: ../../../AMDGPUUsage.rst:404 ../../../AMDGPUUsage.rst:411
#: ../../../AMDGPUUsage.rst:417 ../../../AMDGPUUsage.rst:424
msgid "*TBA*"
msgstr ""

#: ../../../AMDGPUUsage.rst:269 ../../../AMDGPUUsage.rst:316
#: ../../../AMDGPUUsage.rst:335 ../../../AMDGPUUsage.rst:350
#: ../../../AMDGPUUsage.rst:357 ../../../AMDGPUUsage.rst:391
#: ../../../AMDGPUUsage.rst:406 ../../../AMDGPUUsage.rst:413
#: ../../../AMDGPUUsage.rst:419 ../../../AMDGPUUsage.rst:426
#: ../../../AMDGPUUsage.rst:841 ../../../AMDGPUUsage.rst:1495
#: ../../../AMDGPUUsage.rst:2317 ../../../AMDGPUUsage.rst:2323
#: ../../../AMDGPUUsage.rst:2405 ../../../AMDGPUUsage.rst:2528
#: ../../../AMDGPUUsage.rst:2791 ../../../AMDGPUUsage.rst:2810
#: ../../../AMDGPUUsage.rst:2851 ../../../AMDGPUUsage.rst:3276
#: ../../../AMDGPUUsage.rst:3295 ../../../AMDGPUUsage.rst:3336
#: ../../../AMDGPUUsage.rst:10654 ../../../AMDGPUUsage.rst:10780
#: ../../../AMDGPUUsage.rst:10824 ../../../AMDGPUUsage.rst:10836
#: ../../../AMDGPUUsage.rst:10849 ../../../AMDGPUUsage.rst:10921
#: ../../../AMDGPUUsage.rst:10933 ../../../AMDGPUUsage.rst:10947
#: ../../../AMDGPUUsage.rst:11003 ../../../AMDGPUUsage.rst:11007
msgid "Todo"
msgstr ""

#: ../../../AMDGPUUsage.rst:271 ../../../AMDGPUUsage.rst:318
#: ../../../AMDGPUUsage.rst:337 ../../../AMDGPUUsage.rst:352
#: ../../../AMDGPUUsage.rst:359 ../../../AMDGPUUsage.rst:393
#: ../../../AMDGPUUsage.rst:408 ../../../AMDGPUUsage.rst:415
#: ../../../AMDGPUUsage.rst:421 ../../../AMDGPUUsage.rst:427
msgid "Add product names."
msgstr ""

#: ../../../AMDGPUUsage.rst:274
msgid "**GCN GFX8 (Volcanic Islands (VI))** [AMD-GCN-GFX8]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:276 ../../../AMDGPUUsage.rst:1139
msgid "``gfx801``"
msgstr ""

#: ../../../AMDGPUUsage.rst:276
msgid "``carrizo``"
msgstr ""

#: ../../../AMDGPUUsage.rst:276 ../../../AMDGPUUsage.rst:314
#: ../../../AMDGPUUsage.rst:323 ../../../AMDGPUUsage.rst:330
#: ../../../AMDGPUUsage.rst:333 ../../../AMDGPUUsage.rst:341
#: ../../../AMDGPUUsage.rst:345 ../../../AMDGPUUsage.rst:348
#: ../../../AMDGPUUsage.rst:357 ../../../AMDGPUUsage.rst:362
#: ../../../AMDGPUUsage.rst:380 ../../../AMDGPUUsage.rst:384
#: ../../../AMDGPUUsage.rst:388 ../../../AMDGPUUsage.rst:391
#: ../../../AMDGPUUsage.rst:510
msgid "xnack"
msgstr ""

#: ../../../AMDGPUUsage.rst:276
msgid "A6-8500P"
msgstr ""

#: ../../../AMDGPUUsage.rst:277
msgid "Pro A6-8500B"
msgstr ""

#: ../../../AMDGPUUsage.rst:278
msgid "A8-8600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:279
msgid "Pro A8-8600B"
msgstr ""

#: ../../../AMDGPUUsage.rst:280
msgid "FX-8800P"
msgstr ""

#: ../../../AMDGPUUsage.rst:281
msgid "Pro A12-8800B"
msgstr ""

#: ../../../AMDGPUUsage.rst:282
msgid "A10-8700P"
msgstr ""

#: ../../../AMDGPUUsage.rst:283
msgid "Pro A10-8700B"
msgstr ""

#: ../../../AMDGPUUsage.rst:284
msgid "A10-8780P"
msgstr ""

#: ../../../AMDGPUUsage.rst:285
msgid "A10-9600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:286
msgid "A10-9630P"
msgstr ""

#: ../../../AMDGPUUsage.rst:287
msgid "A12-9700P"
msgstr ""

#: ../../../AMDGPUUsage.rst:288
msgid "A12-9730P"
msgstr ""

#: ../../../AMDGPUUsage.rst:289
msgid "FX-9800P"
msgstr ""

#: ../../../AMDGPUUsage.rst:290
msgid "FX-9830P"
msgstr ""

#: ../../../AMDGPUUsage.rst:291
msgid "E2-9010"
msgstr ""

#: ../../../AMDGPUUsage.rst:292
msgid "A6-9210"
msgstr ""

#: ../../../AMDGPUUsage.rst:293
msgid "A9-9410"
msgstr ""

#: ../../../AMDGPUUsage.rst:294 ../../../AMDGPUUsage.rst:1140
#: ../../../AMDGPUUsage.rst:1399 ../../../AMDGPUUsage.rst:1401
msgid "``gfx802``"
msgstr ""

#: ../../../AMDGPUUsage.rst:294
msgid "``iceland``"
msgstr ""

#: ../../../AMDGPUUsage.rst:295
msgid "``tonga``"
msgstr ""

#: ../../../AMDGPUUsage.rst:294
msgid "Radeon R9 285"
msgstr ""

#: ../../../AMDGPUUsage.rst:295
msgid "Radeon R9 380"
msgstr ""

#: ../../../AMDGPUUsage.rst:296
msgid "Radeon R9 385"
msgstr ""

#: ../../../AMDGPUUsage.rst:297 ../../../AMDGPUUsage.rst:1141
#: ../../../AMDGPUUsage.rst:1402 ../../../AMDGPUUsage.rst:1403
msgid "``gfx803``"
msgstr ""

#: ../../../AMDGPUUsage.rst:297
msgid "``fiji``"
msgstr ""

#: ../../../AMDGPUUsage.rst:297
msgid "Radeon R9 Nano"
msgstr ""

#: ../../../AMDGPUUsage.rst:298
msgid "Radeon R9 Fury"
msgstr ""

#: ../../../AMDGPUUsage.rst:299
msgid "Radeon R9 FuryX"
msgstr ""

#: ../../../AMDGPUUsage.rst:300
msgid "Radeon Pro Duo"
msgstr ""

#: ../../../AMDGPUUsage.rst:301
msgid "FirePro S9300x2"
msgstr ""

#: ../../../AMDGPUUsage.rst:302
msgid "Radeon Instinct MI8"
msgstr ""

#: ../../../AMDGPUUsage.rst:303 ../../../AMDGPUUsage.rst:306
msgid "\\"
msgstr ""

#: ../../../AMDGPUUsage.rst:303
msgid "``polaris10``"
msgstr ""

#: ../../../AMDGPUUsage.rst:303
msgid "Radeon RX 470"
msgstr ""

#: ../../../AMDGPUUsage.rst:304
msgid "Radeon RX 480"
msgstr ""

#: ../../../AMDGPUUsage.rst:305
msgid "Radeon Instinct MI6"
msgstr ""

#: ../../../AMDGPUUsage.rst:306
msgid "``polaris11``"
msgstr ""

#: ../../../AMDGPUUsage.rst:306
msgid "Radeon RX 460"
msgstr ""

#: ../../../AMDGPUUsage.rst:309 ../../../AMDGPUUsage.rst:1159
#: ../../../AMDGPUUsage.rst:1404
msgid "``gfx805``"
msgstr ""

#: ../../../AMDGPUUsage.rst:309
msgid "``tongapro``"
msgstr ""

#: ../../../AMDGPUUsage.rst:309
msgid "FirePro S7150"
msgstr ""

#: ../../../AMDGPUUsage.rst:310
msgid "FirePro S7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:311
msgid "FirePro W7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:312
msgid "Mobile FirePro M7170"
msgstr ""

#: ../../../AMDGPUUsage.rst:314 ../../../AMDGPUUsage.rst:1142
msgid "``gfx810``"
msgstr ""

#: ../../../AMDGPUUsage.rst:314
msgid "``stoney``"
msgstr ""

#: ../../../AMDGPUUsage.rst:321
msgid ""
"**GCN GFX9 (Vega)** [AMD-GCN-GFX900-GFX904-VEGA]_ [AMD-GCN-GFX906-VEGA7NM]_ "
"[AMD-GCN-GFX908-CDNA1]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:323 ../../../AMDGPUUsage.rst:1143
msgid "``gfx900``"
msgstr ""

#: ../../../AMDGPUUsage.rst:323 ../../../AMDGPUUsage.rst:330
#: ../../../AMDGPUUsage.rst:340 ../../../AMDGPUUsage.rst:345
#: ../../../AMDGPUUsage.rst:348 ../../../AMDGPUUsage.rst:355
#: ../../../AMDGPUUsage.rst:362 ../../../AMDGPUUsage.rst:378
#: ../../../AMDGPUUsage.rst:383 ../../../AMDGPUUsage.rst:386
#: ../../../AMDGPUUsage.rst:389 ../../../AMDGPUUsage.rst:398
#: ../../../AMDGPUUsage.rst:401 ../../../AMDGPUUsage.rst:404
#: ../../../AMDGPUUsage.rst:411 ../../../AMDGPUUsage.rst:417
#: ../../../AMDGPUUsage.rst:424
msgid "Absolute flat scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:323
msgid "Radeon Vega Frontier Edition"
msgstr ""

#: ../../../AMDGPUUsage.rst:325
msgid "Radeon RX Vega 56"
msgstr ""

#: ../../../AMDGPUUsage.rst:326
msgid "Radeon RX Vega 64"
msgstr ""

#: ../../../AMDGPUUsage.rst:327
msgid "Radeon RX Vega 64 Liquid"
msgstr ""

#: ../../../AMDGPUUsage.rst:329
msgid "Radeon Instinct MI25"
msgstr ""

#: ../../../AMDGPUUsage.rst:330 ../../../AMDGPUUsage.rst:1144
msgid "``gfx902``"
msgstr ""

#: ../../../AMDGPUUsage.rst:330
msgid "Ryzen 3 2200G"
msgstr ""

#: ../../../AMDGPUUsage.rst:331
msgid "Ryzen 5 2400G"
msgstr ""

#: ../../../AMDGPUUsage.rst:333 ../../../AMDGPUUsage.rst:1145
msgid "``gfx904``"
msgstr ""

#: ../../../AMDGPUUsage.rst:340 ../../../AMDGPUUsage.rst:1146
msgid "``gfx906``"
msgstr ""

#: ../../../AMDGPUUsage.rst:340 ../../../AMDGPUUsage.rst:344
#: ../../../AMDGPUUsage.rst:355 ../../../AMDGPUUsage.rst:488
msgid "sramecc"
msgstr ""

#: ../../../AMDGPUUsage.rst:340
msgid "Radeon Instinct MI50"
msgstr ""

#: ../../../AMDGPUUsage.rst:341
msgid "Radeon Instinct MI60"
msgstr ""

#: ../../../AMDGPUUsage.rst:342
msgid "Radeon VII"
msgstr ""

#: ../../../AMDGPUUsage.rst:343
msgid "Radeon Pro VII"
msgstr ""

#: ../../../AMDGPUUsage.rst:344 ../../../AMDGPUUsage.rst:1147
msgid "``gfx908``"
msgstr ""

#: ../../../AMDGPUUsage.rst:344
msgid "AMD Instinct MI100 Accelerator"
msgstr ""

#: ../../../AMDGPUUsage.rst:348 ../../../AMDGPUUsage.rst:1148
msgid "``gfx909``"
msgstr ""

#: ../../../AMDGPUUsage.rst:355 ../../../AMDGPUUsage.rst:1162
msgid "``gfx90a``"
msgstr ""

#: ../../../AMDGPUUsage.rst:356 ../../../AMDGPUUsage.rst:500
msgid "tgsplit"
msgstr ""

#: ../../../AMDGPUUsage.rst:358
msgid "Packed work-item IDs"
msgstr ""

#: ../../../AMDGPUUsage.rst:362 ../../../AMDGPUUsage.rst:1149
msgid "``gfx90c``"
msgstr ""

#: ../../../AMDGPUUsage.rst:362
msgid "Ryzen 7 4700G"
msgstr ""

#: ../../../AMDGPUUsage.rst:363
msgid "Ryzen 7 4700GE"
msgstr ""

#: ../../../AMDGPUUsage.rst:364
msgid "Ryzen 5 4600G"
msgstr ""

#: ../../../AMDGPUUsage.rst:365
msgid "Ryzen 5 4600GE"
msgstr ""

#: ../../../AMDGPUUsage.rst:366
msgid "Ryzen 3 4300G"
msgstr ""

#: ../../../AMDGPUUsage.rst:367
msgid "Ryzen 3 4300GE"
msgstr ""

#: ../../../AMDGPUUsage.rst:368
msgid "Ryzen Pro 4000G"
msgstr ""

#: ../../../AMDGPUUsage.rst:369
msgid "Ryzen 7 Pro 4700G"
msgstr ""

#: ../../../AMDGPUUsage.rst:370
msgid "Ryzen 7 Pro 4750GE"
msgstr ""

#: ../../../AMDGPUUsage.rst:371
msgid "Ryzen 5 Pro 4650G"
msgstr ""

#: ../../../AMDGPUUsage.rst:372
msgid "Ryzen 5 Pro 4650GE"
msgstr ""

#: ../../../AMDGPUUsage.rst:373
msgid "Ryzen 3 Pro 4350G"
msgstr ""

#: ../../../AMDGPUUsage.rst:374
msgid "Ryzen 3 Pro 4350GE"
msgstr ""

#: ../../../AMDGPUUsage.rst:376
msgid "**GCN GFX10 (RDNA 1)** [AMD-GCN-GFX10-RDNA1]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:378 ../../../AMDGPUUsage.rst:1150
msgid "``gfx1010``"
msgstr ""

#: ../../../AMDGPUUsage.rst:378 ../../../AMDGPUUsage.rst:382
#: ../../../AMDGPUUsage.rst:386 ../../../AMDGPUUsage.rst:389
#: ../../../AMDGPUUsage.rst:398 ../../../AMDGPUUsage.rst:401
#: ../../../AMDGPUUsage.rst:404 ../../../AMDGPUUsage.rst:411
#: ../../../AMDGPUUsage.rst:417 ../../../AMDGPUUsage.rst:424
#: ../../../AMDGPUUsage.rst:482
msgid "cumode"
msgstr ""

#: ../../../AMDGPUUsage.rst:379 ../../../AMDGPUUsage.rst:383
#: ../../../AMDGPUUsage.rst:387 ../../../AMDGPUUsage.rst:390
#: ../../../AMDGPUUsage.rst:399 ../../../AMDGPUUsage.rst:402
#: ../../../AMDGPUUsage.rst:405 ../../../AMDGPUUsage.rst:412
#: ../../../AMDGPUUsage.rst:418 ../../../AMDGPUUsage.rst:425
#: ../../../AMDGPUUsage.rst:505
msgid "wavefrontsize64"
msgstr ""

#: ../../../AMDGPUUsage.rst:378
msgid "Radeon RX 5700"
msgstr ""

#: ../../../AMDGPUUsage.rst:379
msgid "Radeon RX 5700 XT"
msgstr ""

#: ../../../AMDGPUUsage.rst:380
msgid "Radeon Pro 5600 XT"
msgstr ""

#: ../../../AMDGPUUsage.rst:381
msgid "Radeon Pro 5600M"
msgstr ""

#: ../../../AMDGPUUsage.rst:382 ../../../AMDGPUUsage.rst:1151
msgid "``gfx1011``"
msgstr ""

#: ../../../AMDGPUUsage.rst:382
msgid "Radeon Pro V520"
msgstr ""

#: ../../../AMDGPUUsage.rst:386 ../../../AMDGPUUsage.rst:1152
msgid "``gfx1012``"
msgstr ""

#: ../../../AMDGPUUsage.rst:386
msgid "Radeon RX 5500"
msgstr ""

#: ../../../AMDGPUUsage.rst:387
msgid "Radeon RX 5500 XT"
msgstr ""

#: ../../../AMDGPUUsage.rst:389 ../../../AMDGPUUsage.rst:1165
msgid "``gfx1013``"
msgstr ""

#: ../../../AMDGPUUsage.rst:396
msgid "**GCN GFX10 (RDNA 2)** [AMD-GCN-GFX10-RDNA2]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:398 ../../../AMDGPUUsage.rst:1153
msgid "``gfx1030``"
msgstr ""

#: ../../../AMDGPUUsage.rst:398
msgid "Radeon RX 6800"
msgstr ""

#: ../../../AMDGPUUsage.rst:399
msgid "Radeon RX 6800 XT"
msgstr ""

#: ../../../AMDGPUUsage.rst:400
msgid "Radeon RX 6900 XT"
msgstr ""

#: ../../../AMDGPUUsage.rst:401 ../../../AMDGPUUsage.rst:1154
msgid "``gfx1031``"
msgstr ""

#: ../../../AMDGPUUsage.rst:401
msgid "Radeon RX 6700 XT"
msgstr ""

#: ../../../AMDGPUUsage.rst:404 ../../../AMDGPUUsage.rst:1155
msgid "``gfx1032``"
msgstr ""

#: ../../../AMDGPUUsage.rst:411 ../../../AMDGPUUsage.rst:1156
msgid "``gfx1033``"
msgstr ""

#: ../../../AMDGPUUsage.rst:417 ../../../AMDGPUUsage.rst:1161
msgid "``gfx1034``"
msgstr ""

#: ../../../AMDGPUUsage.rst:424 ../../../AMDGPUUsage.rst:1160
msgid "``gfx1035``"
msgstr ""

#: ../../../AMDGPUUsage.rst:435
msgid "Target Features"
msgstr ""

#: ../../../AMDGPUUsage.rst:437
msgid ""
"Target features control how code is generated to support certain processor "
"specific features. Not all target features are supported by all processors. "
"The runtime must ensure that the features supported by the device used to "
"execute the code match the features enabled when generating the code. A "
"mismatch of features may result in incorrect execution, or a reduction in "
"performance."
msgstr ""

#: ../../../AMDGPUUsage.rst:444
msgid ""
"The target features supported by each processor is listed in :ref:`amdgpu-"
"processor-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:447
msgid ""
"Target features are controlled by exactly one of the following Clang options:"
msgstr ""

#: ../../../AMDGPUUsage.rst:450
msgid "``-mcpu=<target-id>`` or ``--offload-arch=<target-id>``"
msgstr ""

#: ../../../AMDGPUUsage.rst:452
msgid ""
"The ``-mcpu`` and ``--offload-arch`` can specify the target feature as "
"optional components of the target ID. If omitted, the target feature has the "
"``any`` value. See :ref:`amdgpu-target-id`."
msgstr ""

#: ../../../AMDGPUUsage.rst:456
msgid "``-m[no-]<target-feature>``"
msgstr ""

#: ../../../AMDGPUUsage.rst:458
msgid ""
"Target features not specified by the target ID are specified using a "
"separate option. These target features can have an ``on`` or ``off`` value.  "
"``on`` is specified by omitting the ``no-`` prefix, and ``off`` is specified "
"by including the ``no-`` prefix. The default if not specified is ``off``."
msgstr ""

#: ../../../AMDGPUUsage.rst:464 ../../../AMDGPUUsage.rst:1634
#: ../../../AMDGPUUsage.rst:2447
msgid "For example:"
msgstr ""

#: ../../../AMDGPUUsage.rst:466
msgid "``-mcpu=gfx908:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:467
msgid "Enable the ``xnack`` feature."
msgstr ""

#: ../../../AMDGPUUsage.rst:468
msgid "``-mcpu=gfx908:xnack-``"
msgstr ""

#: ../../../AMDGPUUsage.rst:469
msgid "Disable the ``xnack`` feature."
msgstr ""

#: ../../../AMDGPUUsage.rst:470
msgid "``-mcumode``"
msgstr ""

#: ../../../AMDGPUUsage.rst:471
msgid "Enable the ``cumode`` feature."
msgstr ""

#: ../../../AMDGPUUsage.rst:534
msgid "``-mno-cumode``"
msgstr ""

#: ../../../AMDGPUUsage.rst:473
msgid "Disable the ``cumode`` feature."
msgstr ""

#: ../../../AMDGPUUsage.rst:475
msgid "AMDGPU Target Features"
msgstr ""

#: ../../../AMDGPUUsage.rst:479
msgid "Target Feature"
msgstr ""

#: ../../../AMDGPUUsage.rst:479
msgid "Clang Option to Control"
msgstr ""

#: ../../../AMDGPUUsage.rst:480 ../../../AMDGPUUsage.rst:926
#: ../../../AMDGPUUsage.rst:1020 ../../../AMDGPUUsage.rst:1047
#: ../../../AMDGPUUsage.rst:1082 ../../../AMDGPUUsage.rst:1109
#: ../../../AMDGPUUsage.rst:1180 ../../../AMDGPUUsage.rst:1268
#: ../../../AMDGPUUsage.rst:1285 ../../../AMDGPUUsage.rst:1434
#: ../../../AMDGPUUsage.rst:1446 ../../../AMDGPUUsage.rst:1470
#: ../../../AMDGPUUsage.rst:11331
msgid "Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:482
msgid "``-m[no-]cumode``"
msgstr ""

#: ../../../AMDGPUUsage.rst:482
msgid ""
"Control the wavefront execution mode used when generating code for kernels. "
"When disabled native WGP wavefront execution mode is used, when enabled CU "
"wavefront execution mode is used (see :ref:`amdgpu-amdhsa-memory-model`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:488 ../../../AMDGPUUsage.rst:510
msgid "``-mcpu``"
msgstr ""

#: ../../../AMDGPUUsage.rst:489 ../../../AMDGPUUsage.rst:511
msgid "``--offload-arch``"
msgstr ""

#: ../../../AMDGPUUsage.rst:488
msgid ""
"If specified, generate code that can only be loaded and executed in a "
"process that has a matching setting for SRAMECC."
msgstr ""

#: ../../../AMDGPUUsage.rst:492
msgid ""
"If not specified for code object V2 to V3, generate code that can be loaded "
"and executed in a process with SRAMECC enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:496
msgid ""
"If not specified for code object V4, generate code that can be loaded and "
"executed in a process with either setting of SRAMECC."
msgstr ""

#: ../../../AMDGPUUsage.rst:500
msgid "``-m[no-]tgsplit``"
msgstr ""

#: ../../../AMDGPUUsage.rst:500
msgid ""
"Enable/disable generating code that assumes work-groups are launched in "
"threadgroup split mode. When enabled the waves of a work-group may be "
"launched in different CUs."
msgstr ""

#: ../../../AMDGPUUsage.rst:505
msgid "``-m[no-]wavefrontsize64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:505
msgid ""
"Control the wavefront size used when generating code for kernels. When "
"disabled native wavefront size 32 is used, when enabled wavefront size 64 is "
"used."
msgstr ""

#: ../../../AMDGPUUsage.rst:510
msgid ""
"If specified, generate code that can only be loaded and executed in a "
"process that has a matching setting for XNACK replay."
msgstr ""

#: ../../../AMDGPUUsage.rst:514
msgid ""
"If not specified for code object V2 to V3, generate code that can be loaded "
"and executed in a process with XNACK replay enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:518
msgid ""
"If not specified for code object V4, generate code that can be loaded and "
"executed in a process with either setting of XNACK replay."
msgstr ""

#: ../../../AMDGPUUsage.rst:522
msgid ""
"XNACK replay can be used for demand paging and page migration. If enabled in "
"the device, then if a page fault occurs the code may execute incorrectly "
"unless generated with XNACK replay enabled, or generated for code object V4 "
"without specifying XNACK replay. Executing code that was generated with "
"XNACK replay enabled, or generated for code object V4 without specifying "
"XNACK replay, on a device that does not have XNACK replay enabled will "
"execute correctly but may be less performant than code generated for XNACK "
"replay disabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:539 ../../../AMDGPUUsage.rst:1388
msgid "Target ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:541
msgid ""
"AMDGPU supports target IDs. See `Clang Offload Bundler <https://clang.llvm."
"org/docs/ClangOffloadBundler.html>`_ for a general description. The AMDGPU "
"target specific information is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:549
msgid "**processor**"
msgstr ""

#: ../../../AMDGPUUsage.rst:546
msgid ""
"Is an AMDGPU processor or alternative processor name specified in :ref:"
"`amdgpu-processor-table`. The non-canonical form target ID allows both the "
"primary processor and alternative processor names. The canonical form target "
"ID only allow the primary processor name."
msgstr ""

#: ../../../AMDGPUUsage.rst:559
msgid "**target-feature**"
msgstr ""

#: ../../../AMDGPUUsage.rst:552
msgid ""
"Is a target feature name specified in :ref:`amdgpu-target-features-table` "
"that is supported by the processor. The target features supported by each "
"processor is specified in :ref:`amdgpu-processor-table`. Those that can be "
"specified in a target ID are marked as being controlled by ``-mcpu`` and ``--"
"offload-arch``. Each target feature must appear at most once in a target ID. "
"The non-canonical form target ID allows the target features to be specified "
"in any order. The canonical form target ID requires the target features to "
"be specified in alphabetic order."
msgstr ""

#: ../../../AMDGPUUsage.rst:564
msgid "Code Object V2 to V3 Target ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:566
msgid ""
"The target ID syntax for code object V2 to V3 is the same as defined in "
"`Clang Offload Bundler <https://clang.llvm.org/docs/ClangOffloadBundler."
"html>`_ except when used in the :ref:`amdgpu-assembler-directive-amdgcn-"
"target` assembler directive and the bundle entry ID. In those cases it has "
"the following BNF syntax:"
msgstr ""

#: ../../../AMDGPUUsage.rst:576
msgid ""
"Where a target feature is omitted if *Off* and present if *On* or *Any*."
msgstr ""

#: ../../../AMDGPUUsage.rst:580
msgid ""
"The code object V2 to V3 cannot represent *Any* and treats it the same as "
"*On*."
msgstr ""

#: ../../../AMDGPUUsage.rst:586
msgid "Embedding Bundled Code Objects"
msgstr ""

#: ../../../AMDGPUUsage.rst:588
msgid ""
"AMDGPU supports the HIP and OpenMP languages that perform code object "
"embedding as described in `Clang Offload Bundler <https://clang.llvm.org/"
"docs/ClangOffloadBundler.html>`_."
msgstr ""

#: ../../../AMDGPUUsage.rst:594
msgid ""
"The target ID syntax used for code object V2 to V3 for a bundle entry ID "
"differs from that used elsewhere. See :ref:`amdgpu-target-id-v2-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:600
msgid "Address Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:602
msgid ""
"The AMDGPU architecture supports a number of memory address spaces. The "
"address space names use the OpenCL standard names, with some additions."
msgstr ""

#: ../../../AMDGPUUsage.rst:605
msgid ""
"The AMDGPU address spaces correspond to target architecture specific LLVM "
"address space numbers used in LLVM IR."
msgstr ""

#: ../../../AMDGPUUsage.rst:608
msgid ""
"The AMDGPU address spaces are described in :ref:`amdgpu-address-spaces-"
"table`. Only 64-bit process address spaces are supported for the ``amdgcn`` "
"target."
msgstr ""

#: ../../../AMDGPUUsage.rst:612
msgid "AMDGPU Address Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:616
msgid "64-Bit Process Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:618 ../../../AMDGPUUsage.rst:1842
msgid "Address Space Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:618
msgid "LLVM IR Address Space Number"
msgstr ""

#: ../../../AMDGPUUsage.rst:618 ../../../AMDGPUUsage.rst:3455
msgid "HSA Segment Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:618 ../../../AMDGPUUsage.rst:3455
msgid "Hardware Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:618 ../../../AMDGPUUsage.rst:3455
msgid "Address Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:618 ../../../AMDGPUUsage.rst:3455
msgid "NULL Value"
msgstr ""

#: ../../../AMDGPUUsage.rst:621 ../../../AMDGPUUsage.rst:3463
msgid "Generic"
msgstr ""

#: ../../../AMDGPUUsage.rst:621 ../../../AMDGPUUsage.rst:914
#: ../../../AMDGPUUsage.rst:929 ../../../AMDGPUUsage.rst:933
#: ../../../AMDGPUUsage.rst:936 ../../../AMDGPUUsage.rst:937
#: ../../../AMDGPUUsage.rst:1561 ../../../AMDGPUUsage.rst:1694
#: ../../../AMDGPUUsage.rst:4012 ../../../AMDGPUUsage.rst:4220
#: ../../../AMDGPUUsage.rst:4234 ../../../AMDGPUUsage.rst:4249
#: ../../../AMDGPUUsage.rst:12022 ../../../AMDGPUUsage.rst:12024
#: ../../../AMDGPUUsage.rst:12026 ../../../AMDGPUUsage.rst:12028
#: ../../../AMDGPUUsage.rst:12030 ../../../AMDGPUUsage.rst:12032
#: ../../../AMDGPUUsage.rst:12034 ../../../AMDGPUUsage.rst:12036
#: ../../../AMDGPUUsage.rst:12038 ../../../AMDGPUUsage.rst:12040
#: ../../../AMDGPUUsage.rst:12046 ../../../AMDGPUUsage.rst:12050
#: ../../../AMDGPUUsage.rst:12052 ../../../AMDGPUUsage.rst:12054
#: ../../../AMDGPUUsage.rst:12056 ../../../AMDGPUUsage.rst:12080
#: ../../../AMDGPUUsage.rst:12084 ../../../AMDGPUUsage.rst:12088
#: ../../../AMDGPUUsage.rst:12100 ../../../AMDGPUUsage.rst:12112
#: ../../../AMDGPUUsage.rst:12114 ../../../AMDGPUUsage.rst:12116
#: ../../../AMDGPUUsage.rst:12118 ../../../AMDGPUUsage.rst:12120
#: ../../../AMDGPUUsage.rst:12122 ../../../AMDGPUUsage.rst:12124
#: ../../../AMDGPUUsage.rst:12126
msgid "0"
msgstr ""

#: ../../../AMDGPUUsage.rst:621 ../../../AMDGPUUsage.rst:3463
msgid "flat"
msgstr ""

#: ../../../AMDGPUUsage.rst:621 ../../../AMDGPUUsage.rst:622
#: ../../../AMDGPUUsage.rst:625 ../../../AMDGPUUsage.rst:930
#: ../../../AMDGPUUsage.rst:1703 ../../../AMDGPUUsage.rst:1708
#: ../../../AMDGPUUsage.rst:1725 ../../../AMDGPUUsage.rst:1849
#: ../../../AMDGPUUsage.rst:1850 ../../../AMDGPUUsage.rst:3460
#: ../../../AMDGPUUsage.rst:3461 ../../../AMDGPUUsage.rst:3463
msgid "64"
msgstr ""

#: ../../../AMDGPUUsage.rst:621 ../../../AMDGPUUsage.rst:622
#: ../../../AMDGPUUsage.rst:625 ../../../AMDGPUUsage.rst:3460
#: ../../../AMDGPUUsage.rst:3461 ../../../AMDGPUUsage.rst:3463
msgid "0x0000000000000000"
msgstr ""

#: ../../../AMDGPUUsage.rst:622 ../../../AMDGPUUsage.rst:1803
#: ../../../AMDGPUUsage.rst:1804 ../../../AMDGPUUsage.rst:1849
#: ../../../AMDGPUUsage.rst:3460
msgid "Global"
msgstr ""

#: ../../../AMDGPUUsage.rst:622 ../../../AMDGPUUsage.rst:934
#: ../../../AMDGPUUsage.rst:1287 ../../../AMDGPUUsage.rst:1562
#: ../../../AMDGPUUsage.rst:1699 ../../../AMDGPUUsage.rst:4221
#: ../../../AMDGPUUsage.rst:4236 ../../../AMDGPUUsage.rst:4251
#: ../../../AMDGPUUsage.rst:4317 ../../../AMDGPUUsage.rst:4337
#: ../../../AMDGPUUsage.rst:4340 ../../../AMDGPUUsage.rst:4343
#: ../../../AMDGPUUsage.rst:4346 ../../../AMDGPUUsage.rst:4349
#: ../../../AMDGPUUsage.rst:4381 ../../../AMDGPUUsage.rst:4384
#: ../../../AMDGPUUsage.rst:4387 ../../../AMDGPUUsage.rst:11458
#: ../../../AMDGPUUsage.rst:12048 ../../../AMDGPUUsage.rst:12069
#: ../../../AMDGPUUsage.rst:12072 ../../../AMDGPUUsage.rst:12096
#: ../../../AMDGPUUsage.rst:12098 ../../../AMDGPUUsage.rst:12110
msgid "1"
msgstr ""

#: ../../../AMDGPUUsage.rst:622 ../../../AMDGPUUsage.rst:3460
#: ../../../AMDGPUUsage.rst:4874 ../../../AMDGPUUsage.rst:4902
#: ../../../AMDGPUUsage.rst:4936 ../../../AMDGPUUsage.rst:4939
#: ../../../AMDGPUUsage.rst:4941 ../../../AMDGPUUsage.rst:4949
#: ../../../AMDGPUUsage.rst:4959 ../../../AMDGPUUsage.rst:4962
#: ../../../AMDGPUUsage.rst:4980 ../../../AMDGPUUsage.rst:5030
#: ../../../AMDGPUUsage.rst:5033 ../../../AMDGPUUsage.rst:5051
#: ../../../AMDGPUUsage.rst:5226 ../../../AMDGPUUsage.rst:5229
#: ../../../AMDGPUUsage.rst:5251 ../../../AMDGPUUsage.rst:5293
#: ../../../AMDGPUUsage.rst:5296 ../../../AMDGPUUsage.rst:5318
#: ../../../AMDGPUUsage.rst:5473 ../../../AMDGPUUsage.rst:5476
#: ../../../AMDGPUUsage.rst:5552 ../../../AMDGPUUsage.rst:5848
#: ../../../AMDGPUUsage.rst:5853 ../../../AMDGPUUsage.rst:5925
#: ../../../AMDGPUUsage.rst:6016 ../../../AMDGPUUsage.rst:6021
#: ../../../AMDGPUUsage.rst:6180 ../../../AMDGPUUsage.rst:6208
#: ../../../AMDGPUUsage.rst:6242 ../../../AMDGPUUsage.rst:6244
#: ../../../AMDGPUUsage.rst:6255 ../../../AMDGPUUsage.rst:6257
#: ../../../AMDGPUUsage.rst:6259 ../../../AMDGPUUsage.rst:6263
#: ../../../AMDGPUUsage.rst:6270 ../../../AMDGPUUsage.rst:6274
#: ../../../AMDGPUUsage.rst:6283 ../../../AMDGPUUsage.rst:6286
#: ../../../AMDGPUUsage.rst:6369 ../../../AMDGPUUsage.rst:6393
#: ../../../AMDGPUUsage.rst:6486 ../../../AMDGPUUsage.rst:6493
#: ../../../AMDGPUUsage.rst:6572 ../../../AMDGPUUsage.rst:6596
#: ../../../AMDGPUUsage.rst:6934 ../../../AMDGPUUsage.rst:6941
#: ../../../AMDGPUUsage.rst:6978 ../../../AMDGPUUsage.rst:7022
#: ../../../AMDGPUUsage.rst:7077 ../../../AMDGPUUsage.rst:7084
#: ../../../AMDGPUUsage.rst:7122 ../../../AMDGPUUsage.rst:7164
#: ../../../AMDGPUUsage.rst:7433 ../../../AMDGPUUsage.rst:7440
#: ../../../AMDGPUUsage.rst:7587 ../../../AMDGPUUsage.rst:7652
#: ../../../AMDGPUUsage.rst:8211 ../../../AMDGPUUsage.rst:8216
#: ../../../AMDGPUUsage.rst:8311 ../../../AMDGPUUsage.rst:8404
#: ../../../AMDGPUUsage.rst:8409 ../../../AMDGPUUsage.rst:8564
#: ../../../AMDGPUUsage.rst:8592 ../../../AMDGPUUsage.rst:8626
#: ../../../AMDGPUUsage.rst:8628 ../../../AMDGPUUsage.rst:8637
#: ../../../AMDGPUUsage.rst:8639 ../../../AMDGPUUsage.rst:8647
#: ../../../AMDGPUUsage.rst:8657 ../../../AMDGPUUsage.rst:8660
#: ../../../AMDGPUUsage.rst:8748 ../../../AMDGPUUsage.rst:8800
#: ../../../AMDGPUUsage.rst:8803 ../../../AMDGPUUsage.rst:8879
#: ../../../AMDGPUUsage.rst:9136 ../../../AMDGPUUsage.rst:9139
#: ../../../AMDGPUUsage.rst:9225 ../../../AMDGPUUsage.rst:9273
#: ../../../AMDGPUUsage.rst:9276 ../../../AMDGPUUsage.rst:9361
#: ../../../AMDGPUUsage.rst:9558 ../../../AMDGPUUsage.rst:9561
#: ../../../AMDGPUUsage.rst:9776 ../../../AMDGPUUsage.rst:10157
#: ../../../AMDGPUUsage.rst:10162 ../../../AMDGPUUsage.rst:10366
#: ../../../AMDGPUUsage.rst:10473 ../../../AMDGPUUsage.rst:10478
msgid "global"
msgstr ""

#: ../../../AMDGPUUsage.rst:623 ../../../AMDGPUUsage.rst:3464
msgid "Region"
msgstr ""

#: ../../../AMDGPUUsage.rst:623 ../../../AMDGPUUsage.rst:935
#: ../../../AMDGPUUsage.rst:1288 ../../../AMDGPUUsage.rst:1564
#: ../../../AMDGPUUsage.rst:4222 ../../../AMDGPUUsage.rst:4237
#: ../../../AMDGPUUsage.rst:4253 ../../../AMDGPUUsage.rst:4295
#: ../../../AMDGPUUsage.rst:4298 ../../../AMDGPUUsage.rst:4302
#: ../../../AMDGPUUsage.rst:4311 ../../../AMDGPUUsage.rst:4314
#: ../../../AMDGPUUsage.rst:11459
msgid "2"
msgstr ""

#: ../../../AMDGPUUsage.rst:623 ../../../AMDGPUUsage.rst:3464
msgid "N/A"
msgstr ""

#: ../../../AMDGPUUsage.rst:623 ../../../AMDGPUUsage.rst:3464
msgid "GDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:623 ../../../AMDGPUUsage.rst:624
#: ../../../AMDGPUUsage.rst:626 ../../../AMDGPUUsage.rst:1449
#: ../../../AMDGPUUsage.rst:1694 ../../../AMDGPUUsage.rst:1699
#: ../../../AMDGPUUsage.rst:1712 ../../../AMDGPUUsage.rst:1716
#: ../../../AMDGPUUsage.rst:1719 ../../../AMDGPUUsage.rst:1732
#: ../../../AMDGPUUsage.rst:1849 ../../../AMDGPUUsage.rst:1850
#: ../../../AMDGPUUsage.rst:1851 ../../../AMDGPUUsage.rst:1852
#: ../../../AMDGPUUsage.rst:1854 ../../../AMDGPUUsage.rst:1855
#: ../../../AMDGPUUsage.rst:3458 ../../../AMDGPUUsage.rst:3459
#: ../../../AMDGPUUsage.rst:3464 ../../../AMDGPUUsage.rst:4001
#: ../../../AMDGPUUsage.rst:4171 ../../../AMDGPUUsage.rst:4194
#: ../../../AMDGPUUsage.rst:4209
msgid "32"
msgstr ""

#: ../../../AMDGPUUsage.rst:623 ../../../AMDGPUUsage.rst:3464
msgid "*not implemented for AMDHSA*"
msgstr ""

#: ../../../AMDGPUUsage.rst:624 ../../../AMDGPUUsage.rst:3459
msgid "Local"
msgstr ""

#: ../../../AMDGPUUsage.rst:624 ../../../AMDGPUUsage.rst:1289
#: ../../../AMDGPUUsage.rst:1566 ../../../AMDGPUUsage.rst:4223
#: ../../../AMDGPUUsage.rst:4238 ../../../AMDGPUUsage.rst:4255
#: ../../../AMDGPUUsage.rst:11460 ../../../AMDGPUUsage.rst:12092
msgid "3"
msgstr ""

#: ../../../AMDGPUUsage.rst:624 ../../../AMDGPUUsage.rst:3459
msgid "group"
msgstr ""

#: ../../../AMDGPUUsage.rst:624 ../../../AMDGPUUsage.rst:3459
msgid "LDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:624 ../../../AMDGPUUsage.rst:626
#: ../../../AMDGPUUsage.rst:3459
msgid "0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:625 ../../../AMDGPUUsage.rst:3461
msgid "Constant"
msgstr ""

#: ../../../AMDGPUUsage.rst:625 ../../../AMDGPUUsage.rst:1568
#: ../../../AMDGPUUsage.rst:4292 ../../../AMDGPUUsage.rst:11461
msgid "4"
msgstr ""

#: ../../../AMDGPUUsage.rst:625 ../../../AMDGPUUsage.rst:3461
#: ../../../AMDGPUUsage.rst:4877 ../../../AMDGPUUsage.rst:4905
#: ../../../AMDGPUUsage.rst:6183 ../../../AMDGPUUsage.rst:6211
#: ../../../AMDGPUUsage.rst:8567 ../../../AMDGPUUsage.rst:8595
msgid "constant"
msgstr ""

#: ../../../AMDGPUUsage.rst:625 ../../../AMDGPUUsage.rst:3461
msgid "*same as global*"
msgstr ""

#: ../../../AMDGPUUsage.rst:626 ../../../AMDGPUUsage.rst:3458
msgid "Private"
msgstr ""

#: ../../../AMDGPUUsage.rst:626 ../../../AMDGPUUsage.rst:1569
#: ../../../AMDGPUUsage.rst:11462
msgid "5"
msgstr ""

#: ../../../AMDGPUUsage.rst:626 ../../../AMDGPUUsage.rst:3458
#: ../../../AMDGPUUsage.rst:4876 ../../../AMDGPUUsage.rst:4904
#: ../../../AMDGPUUsage.rst:6182 ../../../AMDGPUUsage.rst:6210
#: ../../../AMDGPUUsage.rst:8566 ../../../AMDGPUUsage.rst:8594
msgid "private"
msgstr ""

#: ../../../AMDGPUUsage.rst:626 ../../../AMDGPUUsage.rst:3458
msgid "scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:627
msgid "Constant 32-bit"
msgstr ""

#: ../../../AMDGPUUsage.rst:627 ../../../AMDGPUUsage.rst:1570
#: ../../../AMDGPUUsage.rst:4044 ../../../AMDGPUUsage.rst:11464
msgid "6"
msgstr ""

#: ../../../AMDGPUUsage.rst:627 ../../../AMDGPUUsage.rst:628
#: ../../../AMDGPUUsage.rst:726
msgid "*TODO*"
msgstr ""

#: ../../../AMDGPUUsage.rst:627 ../../../AMDGPUUsage.rst:3458
msgid "0x00000000"
msgstr ""

#: ../../../AMDGPUUsage.rst:628
msgid "Buffer Fat Pointer (experimental)"
msgstr ""

#: ../../../AMDGPUUsage.rst:628 ../../../AMDGPUUsage.rst:1572
#: ../../../AMDGPUUsage.rst:4051 ../../../AMDGPUUsage.rst:11466
msgid "7"
msgstr ""

#: ../../../AMDGPUUsage.rst:660
msgid "**Generic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:632
msgid ""
"The generic address space is supported unless the *Target Properties* column "
"of :ref:`amdgpu-processor-table` specifies *Does not support generic address "
"space*."
msgstr ""

#: ../../../AMDGPUUsage.rst:636
msgid ""
"The generic address space uses the hardware flat address support for two "
"fixed ranges of virtual addresses (the private and local apertures), that "
"are outside the range of addressable global memory, to map from a flat "
"address to a private or local address. This uses FLAT instructions that can "
"take a flat address and access global, private (scratch), and group (LDS) "
"memory depending on if the address is within one of the aperture ranges."
msgstr ""

#: ../../../AMDGPUUsage.rst:643
msgid ""
"Flat access to scratch requires hardware aperture setup and setup in the "
"kernel prologue (see :ref:`amdgpu-amdhsa-kernel-prolog-flat-scratch`). Flat "
"access to LDS requires hardware aperture setup and M0 (GFX7-GFX8) register "
"setup (see :ref:`amdgpu-amdhsa-kernel-prolog-m0`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:648
msgid ""
"To convert between a private or group address space address (termed a "
"segment address) and a flat address the base address of the corresponding "
"aperture can be used. For GFX7-GFX8 these are available in the :ref:`amdgpu-"
"amdhsa-hsa-aql-queue` the address of which can be obtained with Queue Ptr "
"SGPR (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`). For GFX9-"
"GFX10 the aperture base addresses are directly available as inline constant "
"registers ``SRC_SHARED_BASE/LIMIT`` and ``SRC_PRIVATE_BASE/LIMIT``. In 64-"
"bit address mode the aperture sizes are 2^32 bytes and the base is aligned "
"to 2^32 which makes it easier to convert from flat to segment or segment to "
"flat."
msgstr ""

#: ../../../AMDGPUUsage.rst:659
msgid ""
"A global address space address has the same value when used as a flat "
"address so no conversion is needed."
msgstr ""

#: ../../../AMDGPUUsage.rst:675
msgid "**Global and Constant**"
msgstr ""

#: ../../../AMDGPUUsage.rst:663
msgid ""
"The global and constant address spaces both use global virtual addresses, "
"which are the same virtual address space used by the CPU. However, some "
"virtual addresses may only be accessible to the CPU, some only accessible by "
"the GPU, and some by both."
msgstr ""

#: ../../../AMDGPUUsage.rst:668
msgid ""
"Using the constant address space indicates that the data will not change "
"during the execution of the kernel. This allows scalar read instructions to "
"be used. As the constant address space could only be modified on the host "
"side, a generic pointer loaded from the constant address space is safe to be "
"assumed as a global pointer since only the device global memory is visible "
"and managed on the host side. The vector and scalar L1 caches are "
"invalidated of volatile data before each kernel dispatch execution to allow "
"constant memory to change values between kernel dispatches."
msgstr ""

#: ../../../AMDGPUUsage.rst:683
msgid "**Region**"
msgstr ""

#: ../../../AMDGPUUsage.rst:678
msgid ""
"The region address space uses the hardware Global Data Store (GDS). All "
"wavefronts executing on the same device will access the same memory for any "
"given region address. However, the same region address accessed by "
"wavefronts executing on different devices will access different memory. It "
"is higher performance than global memory. It is allocated by the runtime. "
"The data store (DS) instructions can be used to access it."
msgstr ""

#: ../../../AMDGPUUsage.rst:693
msgid "**Local**"
msgstr ""

#: ../../../AMDGPUUsage.rst:686
msgid ""
"The local address space uses the hardware Local Data Store (LDS) which is "
"automatically allocated when the hardware creates the wavefronts of a work-"
"group, and freed when all the wavefronts of a work-group have terminated. "
"All wavefronts belonging to the same work-group will access the same memory "
"for any given local address. However, the same local address accessed by "
"wavefronts belonging to different work-groups will access different memory. "
"It is higher performance than global memory. The data store (DS) "
"instructions can be used to access it."
msgstr ""

#: ../../../AMDGPUUsage.rst:723
msgid "**Private**"
msgstr ""

#: ../../../AMDGPUUsage.rst:696
msgid ""
"The private address space uses the hardware scratch memory support which "
"automatically allocates memory when it creates a wavefront and frees it when "
"a wavefronts terminates. The memory accessed by a lane of a wavefront for "
"any given private address will be different to the memory accessed by "
"another lane of the same or different wavefront for the same private address."
msgstr ""

#: ../../../AMDGPUUsage.rst:702
msgid ""
"If a kernel dispatch uses scratch, then the hardware allocates memory from a "
"pool of backing memory allocated by the runtime for each wavefront. The "
"lanes of the wavefront access this using dword (4 byte) interleaving. The "
"mapping used from private address to backing memory address is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:707
msgid ""
"``wavefront-scratch-base + ((private-address / 4) * wavefront-size * 4) + "
"(wavefront-lane-id * 4) + (private-address % 4)``"
msgstr ""

#: ../../../AMDGPUUsage.rst:711
msgid ""
"If each lane of a wavefront accesses the same private address, the "
"interleaving results in adjacent dwords being accessed and hence requires "
"fewer cache lines to be fetched."
msgstr ""

#: ../../../AMDGPUUsage.rst:715
msgid ""
"There are different ways that the wavefront scratch base address is "
"determined by a wavefront (see :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:719
msgid ""
"Scratch memory can be accessed in an interleaved manner using buffer "
"instructions with the scratch buffer descriptor and per wavefront scratch "
"offset, by the scratch instructions, or by flat instructions. Multi-dword "
"access is not supported except by flat and scratch instructions in GFX9-"
"GFX10."
msgstr ""

#: ../../../AMDGPUUsage.rst:726
msgid "**Constant 32-bit**"
msgstr ""

#: ../../../AMDGPUUsage.rst:735
msgid "**Buffer Fat Pointer**"
msgstr ""

#: ../../../AMDGPUUsage.rst:729
msgid ""
"The buffer fat pointer is an experimental address space that is currently "
"unsupported in the backend. It exposes a non-integral pointer that is in the "
"future intended to support the modelling of 128-bit buffer descriptors plus "
"a 32-bit offset into the buffer (in total encapsulating a 160-bit "
"*pointer*), allowing normal LLVM load/store/atomic operations to be used to "
"model the buffer descriptors used heavily in graphics workloads targeting "
"the backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:740
msgid "Memory Scopes"
msgstr ""

#: ../../../AMDGPUUsage.rst:742
msgid ""
"This section provides LLVM memory synchronization scopes supported by the "
"AMDGPU backend memory model when the target triple OS is ``amdhsa`` (see :"
"ref:`amdgpu-amdhsa-memory-model` and :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:746
msgid ""
"The memory model supported is based on the HSA memory model [HSA]_ which is "
"based in turn on HRF-indirect with scope inclusion [HRF]_. The happens-"
"before relation is transitive over the synchronizes-with relation "
"independent of scope and synchronizes-with allows the memory scope instances "
"to be inclusive (see table :ref:`amdgpu-amdhsa-llvm-sync-scopes-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:752
msgid ""
"This is different to the OpenCL [OpenCL]_ memory model which does not have "
"scope inclusion and requires the memory scopes to exactly match. However, "
"this is conservatively correct for OpenCL."
msgstr ""

#: ../../../AMDGPUUsage.rst:756
msgid "AMDHSA LLVM Sync Scopes"
msgstr ""

#: ../../../AMDGPUUsage.rst:760
msgid "LLVM Sync Scope"
msgstr ""

#: ../../../AMDGPUUsage.rst:762 ../../../AMDGPUUsage.rst:1184
#: ../../../AMDGPUUsage.rst:1190 ../../../AMDGPUUsage.rst:1191
#: ../../../AMDGPUUsage.rst:1192 ../../../AMDGPUUsage.rst:1194
#: ../../../AMDGPUUsage.rst:1195 ../../../AMDGPUUsage.rst:1196
#: ../../../AMDGPUUsage.rst:1561 ../../../AMDGPUUsage.rst:4740
#: ../../../AMDGPUUsage.rst:4741 ../../../AMDGPUUsage.rst:4874
#: ../../../AMDGPUUsage.rst:4901 ../../../AMDGPUUsage.rst:4902
#: ../../../AMDGPUUsage.rst:4928 ../../../AMDGPUUsage.rst:5102
#: ../../../AMDGPUUsage.rst:5104 ../../../AMDGPUUsage.rst:5148
#: ../../../AMDGPUUsage.rst:5358 ../../../AMDGPUUsage.rst:5360
#: ../../../AMDGPUUsage.rst:5404 ../../../AMDGPUUsage.rst:5681
#: ../../../AMDGPUUsage.rst:5683 ../../../AMDGPUUsage.rst:5752
#: ../../../AMDGPUUsage.rst:6026 ../../../AMDGPUUsage.rst:6180
#: ../../../AMDGPUUsage.rst:6207 ../../../AMDGPUUsage.rst:6208
#: ../../../AMDGPUUsage.rst:6234 ../../../AMDGPUUsage.rst:6691
#: ../../../AMDGPUUsage.rst:6693 ../../../AMDGPUUsage.rst:6771
#: ../../../AMDGPUUsage.rst:6849 ../../../AMDGPUUsage.rst:7217
#: ../../../AMDGPUUsage.rst:7219 ../../../AMDGPUUsage.rst:7280
#: ../../../AMDGPUUsage.rst:7349 ../../../AMDGPUUsage.rst:7889
#: ../../../AMDGPUUsage.rst:7891 ../../../AMDGPUUsage.rst:8001
#: ../../../AMDGPUUsage.rst:8097 ../../../AMDGPUUsage.rst:8414
#: ../../../AMDGPUUsage.rst:8564 ../../../AMDGPUUsage.rst:8591
#: ../../../AMDGPUUsage.rst:8592 ../../../AMDGPUUsage.rst:8618
#: ../../../AMDGPUUsage.rst:8938 ../../../AMDGPUUsage.rst:8940
#: ../../../AMDGPUUsage.rst:9040 ../../../AMDGPUUsage.rst:9406
#: ../../../AMDGPUUsage.rst:9408 ../../../AMDGPUUsage.rst:9484
#: ../../../AMDGPUUsage.rst:9923 ../../../AMDGPUUsage.rst:9925
#: ../../../AMDGPUUsage.rst:10050 ../../../AMDGPUUsage.rst:10483
#: ../../../AMDGPUUsage.rst:10520 ../../../AMDGPUUsage.rst:10549
#: ../../../AMDGPUUsage.rst:10562 ../../../AMDGPUUsage.rst:10590
#: ../../../AMDGPUUsage.rst:10596 ../../../AMDGPUUsage.rst:10603
#: ../../../AMDGPUUsage.rst:11430
msgid "*none*"
msgstr ""

#: ../../../AMDGPUUsage.rst:762
msgid "The default: ``system``."
msgstr ""

#: ../../../AMDGPUUsage.rst:764 ../../../AMDGPUUsage.rst:778
#: ../../../AMDGPUUsage.rst:791 ../../../AMDGPUUsage.rst:802
msgid ""
"Synchronizes with, and participates in modification and seq_cst total "
"orderings with, other operations (except image operations) for all address "
"spaces (except private, or generic that accesses private) provided the other "
"operation's sync scope is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:770
msgid "``system``."
msgstr ""

#: ../../../AMDGPUUsage.rst:771
msgid "``agent`` and executed by a thread on the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:773 ../../../AMDGPUUsage.rst:786
msgid "``workgroup`` and executed by a thread in the same work-group."
msgstr ""

#: ../../../AMDGPUUsage.rst:775 ../../../AMDGPUUsage.rst:788
#: ../../../AMDGPUUsage.rst:799
msgid "``wavefront`` and executed by a thread in the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:778
msgid "``agent``"
msgstr ""

#: ../../../AMDGPUUsage.rst:784
msgid "``system`` or ``agent`` and executed by a thread on the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:791
msgid "``workgroup``"
msgstr ""

#: ../../../AMDGPUUsage.rst:797
msgid ""
"``system``, ``agent`` or ``workgroup`` and executed by a thread in the same "
"work-group."
msgstr ""

#: ../../../AMDGPUUsage.rst:802
msgid "``wavefront``"
msgstr ""

#: ../../../AMDGPUUsage.rst:808
msgid ""
"``system``, ``agent``, ``workgroup`` or ``wavefront`` and executed by a "
"thread in the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:812
msgid "``singlethread``"
msgstr ""

#: ../../../AMDGPUUsage.rst:812
msgid ""
"Only synchronizes with and participates in modification and seq_cst total "
"orderings with, other operations (except image operations) running in the "
"same thread for all address spaces (for example, in signal handlers)."
msgstr ""

#: ../../../AMDGPUUsage.rst:818
msgid "``one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:818
msgid ""
"Same as ``system`` but only synchronizes with other operations within the "
"same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:821
msgid "``agent-one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:821
msgid ""
"Same as ``agent`` but only synchronizes with other operations within the "
"same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:824
msgid "``workgroup-one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:824
msgid ""
"Same as ``workgroup`` but only synchronizes with other operations within the "
"same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:827
msgid "``wavefront-one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:827
msgid ""
"Same as ``wavefront`` but only synchronizes with other operations within the "
"same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:830
msgid "``singlethread-one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:830
msgid ""
"Same as ``singlethread`` but only synchronizes with other operations within "
"the same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:835
msgid "LLVM IR Intrinsics"
msgstr ""

#: ../../../AMDGPUUsage.rst:837
msgid "The AMDGPU backend implements the following LLVM IR intrinsics."
msgstr ""

#: ../../../AMDGPUUsage.rst:839
msgid "*This section is WIP.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:843
msgid "List AMDGPU intrinsics."
msgstr ""

#: ../../../AMDGPUUsage.rst:846
msgid "LLVM IR Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:848
msgid "The AMDGPU backend supports the following LLVM IR attributes."
msgstr ""

#: ../../../AMDGPUUsage.rst:850
msgid "AMDGPU LLVM IR Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:854
msgid "LLVM Attribute"
msgstr ""

#: ../../../AMDGPUUsage.rst:856
msgid "\"amdgpu-flat-work-group-size\"=\"min,max\""
msgstr ""

#: ../../../AMDGPUUsage.rst:856
msgid ""
"Specify the minimum and maximum flat work group sizes that will be specified "
"when the kernel is dispatched. Generated by the "
"``amdgpu_flat_work_group_size`` CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:859
msgid "\"amdgpu-implicitarg-num-bytes\"=\"n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:859
msgid ""
"Number of kernel argument bytes to add to the kernel argument block size for "
"the implicit arguments. This varies by OS and language (for OpenCL see :ref:"
"`opencl-kernel-implicit-arguments-appended-for-amdhsa-os-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:863
msgid "\"amdgpu-num-sgpr\"=\"n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:863
msgid ""
"Specifies the number of SGPRs to use. Generated by the ``amdgpu_num_sgpr`` "
"CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:865
msgid "\"amdgpu-num-vgpr\"=\"n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:865
msgid ""
"Specifies the number of VGPRs to use. Generated by the ``amdgpu_num_vgpr`` "
"CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:867
msgid "\"amdgpu-waves-per-eu\"=\"m,n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:867
msgid ""
"Specify the minimum and maximum number of waves per execution unit. "
"Generated by the ``amdgpu_waves_per_eu`` CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:870
msgid "\"amdgpu-ieee\" true/false."
msgstr ""

#: ../../../AMDGPUUsage.rst:870
msgid ""
"Specify whether the function expects the IEEE field of the mode register to "
"be set on entry. Overrides the default for the calling convention."
msgstr ""

#: ../../../AMDGPUUsage.rst:873
msgid "\"amdgpu-dx10-clamp\" true/false."
msgstr ""

#: ../../../AMDGPUUsage.rst:873
msgid ""
"Specify whether the function expects the DX10_CLAMP field of the mode "
"register to be set on entry. Overrides the default for the calling "
"convention."
msgstr ""

#: ../../../AMDGPUUsage.rst:881
msgid "ELF Code Object"
msgstr ""

#: ../../../AMDGPUUsage.rst:883
msgid ""
"The AMDGPU backend generates a standard ELF [ELF]_ relocatable code object "
"that can be linked by ``lld`` to produce a standard ELF shared code object "
"which can be loaded and executed on an AMDGPU target."
msgstr ""

#: ../../../AMDGPUUsage.rst:890
msgid "Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:892
msgid "The AMDGPU backend uses the following ELF header:"
msgstr ""

#: ../../../AMDGPUUsage.rst:894
msgid "AMDGPU ELF Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:898 ../../../AMDGPUUsage.rst:1559
msgid "Field"
msgstr ""

#: ../../../AMDGPUUsage.rst:898 ../../../AMDGPUUsage.rst:926
#: ../../../AMDGPUUsage.rst:1020 ../../../AMDGPUUsage.rst:1047
#: ../../../AMDGPUUsage.rst:1082 ../../../AMDGPUUsage.rst:1109
#: ../../../AMDGPUUsage.rst:1285 ../../../AMDGPUUsage.rst:1446
#: ../../../AMDGPUUsage.rst:1559 ../../../AMDGPUUsage.rst:1800
#: ../../../AMDGPUUsage.rst:1842 ../../../AMDGPUUsage.rst:4218
#: ../../../AMDGPUUsage.rst:4232 ../../../AMDGPUUsage.rst:4247
#: ../../../AMDGPUUsage.rst:11331
msgid "Value"
msgstr ""

#: ../../../AMDGPUUsage.rst:900 ../../../AMDGPUUsage.rst:946
msgid "``e_ident[EI_CLASS]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:900
msgid "``ELFCLASS64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:901 ../../../AMDGPUUsage.rst:949
msgid "``e_ident[EI_DATA]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:901
msgid "``ELFDATA2LSB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:902 ../../../AMDGPUUsage.rst:961
msgid "``e_ident[EI_OSABI]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:902 ../../../AMDGPUUsage.rst:929
msgid "``ELFOSABI_NONE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:903 ../../../AMDGPUUsage.rst:930
msgid "``ELFOSABI_AMDGPU_HSA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:904 ../../../AMDGPUUsage.rst:931
msgid "``ELFOSABI_AMDGPU_PAL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:905 ../../../AMDGPUUsage.rst:932
msgid "``ELFOSABI_AMDGPU_MESA3D``"
msgstr ""

#: ../../../AMDGPUUsage.rst:906 ../../../AMDGPUUsage.rst:984
msgid "``e_ident[EI_ABIVERSION]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:906 ../../../AMDGPUUsage.rst:933
msgid "``ELFABIVERSION_AMDGPU_HSA_V2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:907 ../../../AMDGPUUsage.rst:934
msgid "``ELFABIVERSION_AMDGPU_HSA_V3``"
msgstr ""

#: ../../../AMDGPUUsage.rst:908 ../../../AMDGPUUsage.rst:935
msgid "``ELFABIVERSION_AMDGPU_HSA_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:909 ../../../AMDGPUUsage.rst:936
msgid "``ELFABIVERSION_AMDGPU_PAL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:910 ../../../AMDGPUUsage.rst:937
msgid "``ELFABIVERSION_AMDGPU_MESA3D``"
msgstr ""

#: ../../../AMDGPUUsage.rst:911 ../../../AMDGPUUsage.rst:997
msgid "``e_type``"
msgstr ""

#: ../../../AMDGPUUsage.rst:911 ../../../AMDGPUUsage.rst:992
msgid "``ET_REL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:912 ../../../AMDGPUUsage.rst:995
msgid "``ET_DYN``"
msgstr ""

#: ../../../AMDGPUUsage.rst:913 ../../../AMDGPUUsage.rst:1007
msgid "``e_machine``"
msgstr ""

#: ../../../AMDGPUUsage.rst:913 ../../../AMDGPUUsage.rst:928
msgid "``EM_AMDGPU``"
msgstr ""

#: ../../../AMDGPUUsage.rst:914 ../../../AMDGPUUsage.rst:1011
msgid "``e_entry``"
msgstr ""

#: ../../../AMDGPUUsage.rst:915 ../../../AMDGPUUsage.rst:1169
msgid "``e_flags``"
msgstr ""

#: ../../../AMDGPUUsage.rst:915
msgid ""
"See :ref:`amdgpu-elf-header-e_flags-v2-table`, :ref:`amdgpu-elf-header-"
"e_flags-table-v3`, and :ref:`amdgpu-elf-header-e_flags-table-v4`"
msgstr ""

#: ../../../AMDGPUUsage.rst:922
msgid "AMDGPU ELF Header Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:928
msgid "224"
msgstr ""

#: ../../../AMDGPUUsage.rst:931
msgid "65"
msgstr ""

#: ../../../AMDGPUUsage.rst:932
msgid "66"
msgstr ""

#: ../../../AMDGPUUsage.rst:941
msgid "The ELF class is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:943
msgid "``ELFCLASS32`` for ``r600`` architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:945
msgid ""
"``ELFCLASS64`` for ``amdgcn`` architecture which only supports 64-bit "
"process address space applications."
msgstr ""

#: ../../../AMDGPUUsage.rst:949
msgid "All AMDGPU targets use ``ELFDATA2LSB`` for little-endian byte ordering."
msgstr ""

#: ../../../AMDGPUUsage.rst:952
msgid ""
"One of the following AMDGPU target architecture specific OS ABIs (see :ref:"
"`amdgpu-os`):"
msgstr ""

#: ../../../AMDGPUUsage.rst:955
msgid "``ELFOSABI_NONE`` for *unknown* OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:957
msgid "``ELFOSABI_AMDGPU_HSA`` for ``amdhsa`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:959
msgid "``ELFOSABI_AMDGPU_PAL`` for ``amdpal`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:961
msgid "``ELFOSABI_AMDGPU_MESA3D`` for ``mesa3D`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:964
msgid ""
"The ABI version of the AMDGPU target architecture specific OS ABI to which "
"the code object conforms:"
msgstr ""

#: ../../../AMDGPUUsage.rst:967
msgid ""
"``ELFABIVERSION_AMDGPU_HSA_V2`` is used to specify the version of AMD HSA "
"runtime ABI for code object V2. Specify using the Clang option ``-mcode-"
"object-version=2``."
msgstr ""

#: ../../../AMDGPUUsage.rst:971
msgid ""
"``ELFABIVERSION_AMDGPU_HSA_V3`` is used to specify the version of AMD HSA "
"runtime ABI for code object V3. Specify using the Clang option ``-mcode-"
"object-version=3``. This is the default code object version if not specified."
msgstr ""

#: ../../../AMDGPUUsage.rst:976
msgid ""
"``ELFABIVERSION_AMDGPU_HSA_V4`` is used to specify the version of AMD HSA "
"runtime ABI for code object V4. Specify using the Clang option ``-mcode-"
"object-version=4``."
msgstr ""

#: ../../../AMDGPUUsage.rst:980
msgid ""
"``ELFABIVERSION_AMDGPU_PAL`` is used to specify the version of AMD PAL "
"runtime ABI."
msgstr ""

#: ../../../AMDGPUUsage.rst:983
msgid ""
"``ELFABIVERSION_AMDGPU_MESA3D`` is used to specify the version of AMD MESA "
"3D runtime ABI."
msgstr ""

#: ../../../AMDGPUUsage.rst:987
msgid "Can be one of the following values:"
msgstr ""

#: ../../../AMDGPUUsage.rst:991
msgid ""
"The type produced by the AMDGPU backend compiler as it is relocatable code "
"object."
msgstr ""

#: ../../../AMDGPUUsage.rst:995
msgid "The type produced by the linker as it is a shared code object."
msgstr ""

#: ../../../AMDGPUUsage.rst:997
msgid "The AMD HSA runtime loader requires a ``ET_DYN`` code object."
msgstr ""

#: ../../../AMDGPUUsage.rst:1000
msgid ""
"The value ``EM_AMDGPU`` is used for the machine for all processors supported "
"by the ``r600`` and ``amdgcn`` architectures (see :ref:`amdgpu-processor-"
"table`). The specific processor is specified in the "
"``NT_AMD_HSA_ISA_VERSION`` note record for code object V2 (see :ref:`amdgpu-"
"note-records-v2`) and in the ``EF_AMDGPU_MACH`` bit field of the ``e_flags`` "
"for code object V3 to V4 (see :ref:`amdgpu-elf-header-e_flags-table-v3` and :"
"ref:`amdgpu-elf-header-e_flags-table-v4`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1010
msgid ""
"The entry point is 0 as the entry points for individual kernels must be "
"selected in order to invoke them through AQL packets."
msgstr ""

#: ../../../AMDGPUUsage.rst:1014
msgid "The AMDGPU backend uses the following ELF header flags:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1016
msgid "AMDGPU ELF Header ``e_flags`` for Code Object V2"
msgstr ""

#: ../../../AMDGPUUsage.rst:1022
msgid "``EF_AMDGPU_FEATURE_XNACK_V2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1022 ../../../AMDGPUUsage.rst:1850
msgid "0x01"
msgstr ""

#: ../../../AMDGPUUsage.rst:1022 ../../../AMDGPUUsage.rst:1054
msgid ""
"Indicates if the ``xnack`` target feature is enabled for all code contained "
"in the code object. If the processor does not support the ``xnack`` target "
"feature then must be 0. See :ref:`amdgpu-target-features`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1033
msgid "``EF_AMDGPU_FEATURE_TRAP_HANDLER_V2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1033 ../../../AMDGPUUsage.rst:1851
msgid "0x02"
msgstr ""

#: ../../../AMDGPUUsage.rst:1033
msgid ""
"Indicates if the trap handler is enabled for all code contained in the code "
"object. If the processor does not support a trap handler then must be 0. "
"See :ref:`amdgpu-target-features`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1043
msgid "AMDGPU ELF Header ``e_flags`` for Code Object V3"
msgstr ""

#: ../../../AMDGPUUsage.rst:1049 ../../../AMDGPUUsage.rst:1084
msgid "``EF_AMDGPU_MACH``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1049 ../../../AMDGPUUsage.rst:1084
msgid "0x0ff"
msgstr ""

#: ../../../AMDGPUUsage.rst:1049 ../../../AMDGPUUsage.rst:1084
msgid ""
"AMDGPU processor selection mask for ``EF_AMDGPU_MACH_xxx`` values defined "
"in :ref:`amdgpu-ef-amdgpu-mach-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1054
msgid "``EF_AMDGPU_FEATURE_XNACK_V3``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1054 ../../../AMDGPUUsage.rst:1093
msgid "0x100"
msgstr ""

#: ../../../AMDGPUUsage.rst:1065
msgid "``EF_AMDGPU_FEATURE_SRAMECC_V3``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1065 ../../../AMDGPUUsage.rst:1094
msgid "0x200"
msgstr ""

#: ../../../AMDGPUUsage.rst:1065
msgid ""
"Indicates if the ``sramecc`` target feature is enabled for all code "
"contained in the code object. If the processor does not support the "
"``sramecc`` target feature then must be 0. See :ref:`amdgpu-target-features`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1078
msgid "AMDGPU ELF Header ``e_flags`` for Code Object V4"
msgstr ""

#: ../../../AMDGPUUsage.rst:1089
msgid "``EF_AMDGPU_FEATURE_XNACK_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1089 ../../../AMDGPUUsage.rst:1095
msgid "0x300"
msgstr ""

#: ../../../AMDGPUUsage.rst:1089
msgid "XNACK selection mask for ``EF_AMDGPU_FEATURE_XNACK_*_V4`` values."
msgstr ""

#: ../../../AMDGPUUsage.rst:1092
msgid "``EF_AMDGPU_FEATURE_XNACK_UNSUPPORTED_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1092 ../../../AMDGPUUsage.rst:1099
#: ../../../AMDGPUUsage.rst:1112
msgid "0x000"
msgstr ""

#: ../../../AMDGPUUsage.rst:1092
msgid "XNACK unsuppored."
msgstr ""

#: ../../../AMDGPUUsage.rst:1093
msgid "``EF_AMDGPU_FEATURE_XNACK_ANY_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1093
msgid "XNACK can have any value."
msgstr ""

#: ../../../AMDGPUUsage.rst:1094
msgid "``EF_AMDGPU_FEATURE_XNACK_OFF_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1094
msgid "XNACK disabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:1095
msgid "``EF_AMDGPU_FEATURE_XNACK_ON_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1095
msgid "XNACK enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:1096
msgid "``EF_AMDGPU_FEATURE_SRAMECC_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1096 ../../../AMDGPUUsage.rst:1102
msgid "0xc00"
msgstr ""

#: ../../../AMDGPUUsage.rst:1096
msgid "SRAMECC selection mask for ``EF_AMDGPU_FEATURE_SRAMECC_*_V4`` values."
msgstr ""

#: ../../../AMDGPUUsage.rst:1099
msgid "``EF_AMDGPU_FEATURE_SRAMECC_UNSUPPORTED_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1099
msgid "SRAMECC unsuppored."
msgstr ""

#: ../../../AMDGPUUsage.rst:1100
msgid "``EF_AMDGPU_FEATURE_SRAMECC_ANY_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1100
msgid "0x400"
msgstr ""

#: ../../../AMDGPUUsage.rst:1100
msgid "SRAMECC can have any value."
msgstr ""

#: ../../../AMDGPUUsage.rst:1101
msgid "``EF_AMDGPU_FEATURE_SRAMECC_OFF_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1101
msgid "0x800"
msgstr ""

#: ../../../AMDGPUUsage.rst:1101
msgid "SRAMECC disabled,"
msgstr ""

#: ../../../AMDGPUUsage.rst:1102
msgid "``EF_AMDGPU_FEATURE_SRAMECC_ON_V4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1102
msgid "SRAMECC enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:1105
msgid "AMDGPU ``EF_AMDGPU_MACH`` Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:1109
msgid "Description (see :ref:`amdgpu-processor-table`)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1112
msgid "``EF_AMDGPU_MACH_NONE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1112
msgid "*not specified*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1113
msgid "``EF_AMDGPU_MACH_R600_R600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1113
msgid "0x001"
msgstr ""

#: ../../../AMDGPUUsage.rst:1114
msgid "``EF_AMDGPU_MACH_R600_R630``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1114
msgid "0x002"
msgstr ""

#: ../../../AMDGPUUsage.rst:1115
msgid "``EF_AMDGPU_MACH_R600_RS880``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1115
msgid "0x003"
msgstr ""

#: ../../../AMDGPUUsage.rst:1116
msgid "``EF_AMDGPU_MACH_R600_RV670``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1116
msgid "0x004"
msgstr ""

#: ../../../AMDGPUUsage.rst:1117
msgid "``EF_AMDGPU_MACH_R600_RV710``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1117
msgid "0x005"
msgstr ""

#: ../../../AMDGPUUsage.rst:1118
msgid "``EF_AMDGPU_MACH_R600_RV730``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1118
msgid "0x006"
msgstr ""

#: ../../../AMDGPUUsage.rst:1119
msgid "``EF_AMDGPU_MACH_R600_RV770``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1119
msgid "0x007"
msgstr ""

#: ../../../AMDGPUUsage.rst:1120
msgid "``EF_AMDGPU_MACH_R600_CEDAR``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1120
msgid "0x008"
msgstr ""

#: ../../../AMDGPUUsage.rst:1121
msgid "``EF_AMDGPU_MACH_R600_CYPRESS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1121
msgid "0x009"
msgstr ""

#: ../../../AMDGPUUsage.rst:1122
msgid "``EF_AMDGPU_MACH_R600_JUNIPER``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1122
msgid "0x00a"
msgstr ""

#: ../../../AMDGPUUsage.rst:1123
msgid "``EF_AMDGPU_MACH_R600_REDWOOD``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1123
msgid "0x00b"
msgstr ""

#: ../../../AMDGPUUsage.rst:1124
msgid "``EF_AMDGPU_MACH_R600_SUMO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1124
msgid "0x00c"
msgstr ""

#: ../../../AMDGPUUsage.rst:1125
msgid "``EF_AMDGPU_MACH_R600_BARTS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1125
msgid "0x00d"
msgstr ""

#: ../../../AMDGPUUsage.rst:1126
msgid "``EF_AMDGPU_MACH_R600_CAICOS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1126
msgid "0x00e"
msgstr ""

#: ../../../AMDGPUUsage.rst:1127
msgid "``EF_AMDGPU_MACH_R600_CAYMAN``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1127
msgid "0x00f"
msgstr ""

#: ../../../AMDGPUUsage.rst:1128
msgid "``EF_AMDGPU_MACH_R600_TURKS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1128
msgid "0x010"
msgstr ""

#: ../../../AMDGPUUsage.rst:1129 ../../../AMDGPUUsage.rst:1138
#: ../../../AMDGPUUsage.rst:1163 ../../../AMDGPUUsage.rst:1164
#: ../../../AMDGPUUsage.rst:1166 ../../../AMDGPUUsage.rst:1167
#: ../../../AMDGPUUsage.rst:1168 ../../../AMDGPUUsage.rst:1290
#: ../../../AMDGPUUsage.rst:1448 ../../../AMDGPUUsage.rst:1577
msgid "*reserved*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1129
msgid "0x011 - 0x01f"
msgstr ""

#: ../../../AMDGPUUsage.rst:1129
msgid "Reserved for ``r600`` architecture processors."
msgstr ""

#: ../../../AMDGPUUsage.rst:1131
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1131
msgid "0x020"
msgstr ""

#: ../../../AMDGPUUsage.rst:1132
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX601``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1132
msgid "0x021"
msgstr ""

#: ../../../AMDGPUUsage.rst:1133
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX700``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1133
msgid "0x022"
msgstr ""

#: ../../../AMDGPUUsage.rst:1134
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX701``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1134
msgid "0x023"
msgstr ""

#: ../../../AMDGPUUsage.rst:1135
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX702``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1135
msgid "0x024"
msgstr ""

#: ../../../AMDGPUUsage.rst:1136
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX703``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1136
msgid "0x025"
msgstr ""

#: ../../../AMDGPUUsage.rst:1137
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX704``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1137
msgid "0x026"
msgstr ""

#: ../../../AMDGPUUsage.rst:1138
msgid "0x027"
msgstr ""

#: ../../../AMDGPUUsage.rst:1138 ../../../AMDGPUUsage.rst:1163
#: ../../../AMDGPUUsage.rst:1164 ../../../AMDGPUUsage.rst:1166
#: ../../../AMDGPUUsage.rst:1167 ../../../AMDGPUUsage.rst:1168
#: ../../../AMDGPUUsage.rst:10530 ../../../AMDGPUUsage.rst:10531
#: ../../../AMDGPUUsage.rst:10532 ../../../AMDGPUUsage.rst:10533
#: ../../../AMDGPUUsage.rst:10534 ../../../AMDGPUUsage.rst:10535
#: ../../../AMDGPUUsage.rst:10536 ../../../AMDGPUUsage.rst:10572
#: ../../../AMDGPUUsage.rst:10573 ../../../AMDGPUUsage.rst:10574
#: ../../../AMDGPUUsage.rst:10575 ../../../AMDGPUUsage.rst:10576
#: ../../../AMDGPUUsage.rst:10577 ../../../AMDGPUUsage.rst:10578
#: ../../../AMDGPUUsage.rst:10613 ../../../AMDGPUUsage.rst:10614
#: ../../../AMDGPUUsage.rst:10615 ../../../AMDGPUUsage.rst:10616
#: ../../../AMDGPUUsage.rst:10617 ../../../AMDGPUUsage.rst:10618
#: ../../../AMDGPUUsage.rst:10619
msgid "Reserved."
msgstr ""

#: ../../../AMDGPUUsage.rst:1139
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX801``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1139
msgid "0x028"
msgstr ""

#: ../../../AMDGPUUsage.rst:1140
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX802``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1140
msgid "0x029"
msgstr ""

#: ../../../AMDGPUUsage.rst:1141
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX803``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1141
msgid "0x02a"
msgstr ""

#: ../../../AMDGPUUsage.rst:1142
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX810``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1142
msgid "0x02b"
msgstr ""

#: ../../../AMDGPUUsage.rst:1143
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX900``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1143
msgid "0x02c"
msgstr ""

#: ../../../AMDGPUUsage.rst:1144
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX902``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1144
msgid "0x02d"
msgstr ""

#: ../../../AMDGPUUsage.rst:1145
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX904``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1145
msgid "0x02e"
msgstr ""

#: ../../../AMDGPUUsage.rst:1146
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX906``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1146
msgid "0x02f"
msgstr ""

#: ../../../AMDGPUUsage.rst:1147
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX908``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1147
msgid "0x030"
msgstr ""

#: ../../../AMDGPUUsage.rst:1148
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX909``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1148
msgid "0x031"
msgstr ""

#: ../../../AMDGPUUsage.rst:1149
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX90C``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1149
msgid "0x032"
msgstr ""

#: ../../../AMDGPUUsage.rst:1150
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1010``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1150
msgid "0x033"
msgstr ""

#: ../../../AMDGPUUsage.rst:1151
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1011``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1151
msgid "0x034"
msgstr ""

#: ../../../AMDGPUUsage.rst:1152
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1012``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1152
msgid "0x035"
msgstr ""

#: ../../../AMDGPUUsage.rst:1153
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1030``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1153
msgid "0x036"
msgstr ""

#: ../../../AMDGPUUsage.rst:1154
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1031``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1154
msgid "0x037"
msgstr ""

#: ../../../AMDGPUUsage.rst:1155
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1032``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1155
msgid "0x038"
msgstr ""

#: ../../../AMDGPUUsage.rst:1156
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1033``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1156
msgid "0x039"
msgstr ""

#: ../../../AMDGPUUsage.rst:1157
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX602``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1157
msgid "0x03a"
msgstr ""

#: ../../../AMDGPUUsage.rst:1158
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX705``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1158
msgid "0x03b"
msgstr ""

#: ../../../AMDGPUUsage.rst:1159
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX805``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1159
msgid "0x03c"
msgstr ""

#: ../../../AMDGPUUsage.rst:1160
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1035``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1160
msgid "0x03d"
msgstr ""

#: ../../../AMDGPUUsage.rst:1161
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1034``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1161
msgid "0x03e"
msgstr ""

#: ../../../AMDGPUUsage.rst:1162
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX90A``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1162
msgid "0x03f"
msgstr ""

#: ../../../AMDGPUUsage.rst:1163
msgid "0x040"
msgstr ""

#: ../../../AMDGPUUsage.rst:1164
msgid "0x041"
msgstr ""

#: ../../../AMDGPUUsage.rst:1165
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1013``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1165
msgid "0x042"
msgstr ""

#: ../../../AMDGPUUsage.rst:1166
msgid "0x043"
msgstr ""

#: ../../../AMDGPUUsage.rst:1167
msgid "0x044"
msgstr ""

#: ../../../AMDGPUUsage.rst:1168
msgid "0x045"
msgstr ""

#: ../../../AMDGPUUsage.rst:1172
msgid "Sections"
msgstr ""

#: ../../../AMDGPUUsage.rst:1174
msgid ""
"An AMDGPU target ELF code object has the standard ELF sections which include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1176
msgid "AMDGPU ELF Sections"
msgstr ""

#: ../../../AMDGPUUsage.rst:1180 ../../../AMDGPUUsage.rst:1268
#: ../../../AMDGPUUsage.rst:1434 ../../../AMDGPUUsage.rst:1470
msgid "Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:1180
msgid "Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:1182 ../../../AMDGPUUsage.rst:1474
msgid "``.bss``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1182
msgid "``SHT_NOBITS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1182 ../../../AMDGPUUsage.rst:1183
#: ../../../AMDGPUUsage.rst:1188
msgid "``SHF_ALLOC`` + ``SHF_WRITE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1183 ../../../AMDGPUUsage.rst:1472
msgid "``.data``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1183 ../../../AMDGPUUsage.rst:1184
#: ../../../AMDGPUUsage.rst:1186 ../../../AMDGPUUsage.rst:1187
#: ../../../AMDGPUUsage.rst:1188 ../../../AMDGPUUsage.rst:1193
#: ../../../AMDGPUUsage.rst:1197
msgid "``SHT_PROGBITS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1184
msgid "``.debug_``\\ *\\**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1185
msgid "``.dynamic``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1185
msgid "``SHT_DYNAMIC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1185 ../../../AMDGPUUsage.rst:1186
#: ../../../AMDGPUUsage.rst:1187 ../../../AMDGPUUsage.rst:1189
#: ../../../AMDGPUUsage.rst:1193
msgid "``SHF_ALLOC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1186
msgid "``.dynstr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1187
msgid "``.dynsym``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1188
msgid "``.got``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1189
msgid "``.hash``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1189
msgid "``SHT_HASH``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1190 ../../../AMDGPUUsage.rst:1212
msgid "``.note``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1190
msgid "``SHT_NOTE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1191
msgid "``.rela``\\ *name*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1191 ../../../AMDGPUUsage.rst:1192
msgid "``SHT_RELA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1192
msgid "``.rela.dyn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1193 ../../../AMDGPUUsage.rst:1473
#: ../../../AMDGPUUsage.rst:1475
msgid "``.rodata``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1194
msgid "``.shstrtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1194 ../../../AMDGPUUsage.rst:1195
msgid "``SHT_STRTAB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1195
msgid "``.strtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1196
msgid "``.symtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1196
msgid "``SHT_SYMTAB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1197 ../../../AMDGPUUsage.rst:1228
#: ../../../AMDGPUUsage.rst:1476
msgid "``.text``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1197
msgid "``SHF_ALLOC`` + ``SHF_EXECINSTR``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1200
msgid ""
"These sections have their standard meanings (see [ELF]_) and are only "
"generated if needed."
msgstr ""

#: ../../../AMDGPUUsage.rst:1205
msgid "``.debug``\\ *\\**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1204
msgid ""
"The standard DWARF sections. See :ref:`amdgpu-dwarf-debug-information` for "
"information on the DWARF produced by the AMDGPU backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:1208
msgid "``.dynamic``, ``.dynstr``, ``.dynsym``, ``.hash``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1208
msgid "The standard sections used by a dynamic loader."
msgstr ""

#: ../../../AMDGPUUsage.rst:1211
msgid ""
"See :ref:`amdgpu-note-records` for the note records supported by the AMDGPU "
"backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:1223
msgid "``.rela``\\ *name*, ``.rela.dyn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1215
msgid ""
"For relocatable code objects, *name* is the name of the section that the "
"relocation records apply. For example, ``.rela.text`` is the section name "
"for relocation records associated with the ``.text`` section."
msgstr ""

#: ../../../AMDGPUUsage.rst:1219
msgid ""
"For linked shared code objects, ``.rela.dyn`` contains all the relocation "
"records from each of the relocatable code object's ``.rela``\\ *name* "
"sections."
msgstr ""

#: ../../../AMDGPUUsage.rst:1222
msgid ""
"See :ref:`amdgpu-relocation-records` for the relocation records supported by "
"the AMDGPU backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:1226
msgid ""
"The executable machine code for the kernels and functions they call. "
"Generated as position independent code. See :ref:`amdgpu-code-conventions` "
"for information on conventions used in the isa generation."
msgstr ""

#: ../../../AMDGPUUsage.rst:1233
msgid "Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1235
msgid ""
"The AMDGPU backend code object contains ELF note records in the ``.note`` "
"section. The set of generated notes and their semantics depend on the code "
"object version; see :ref:`amdgpu-note-records-v2` and :ref:`amdgpu-note-"
"records-v3-v4`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1240
msgid ""
"As required by ``ELFCLASS32`` and ``ELFCLASS64``, minimal zero-byte padding "
"must be generated after the ``name`` field to ensure the ``desc`` field is 4 "
"byte aligned. In addition, minimal zero-byte padding must be generated to "
"ensure the ``desc`` field size is a multiple of 4 bytes. The "
"``sh_addralign`` field of the ``.note`` section must be at least 4 to "
"indicate at least 8 byte alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:1250
msgid "Code Object V2 Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1253 ../../../AMDGPUUsage.rst:2519
#: ../../../AMDGPUUsage.rst:11737 ../../../AMDGPUUsage.rst:11793
msgid ""
"Code object V2 is not the default code object version emitted by this "
"version of LLVM."
msgstr ""

#: ../../../AMDGPUUsage.rst:1256
msgid ""
"The AMDGPU backend code object uses the following ELF note record in the ``."
"note`` section when compiling for code object V2."
msgstr ""

#: ../../../AMDGPUUsage.rst:1259
msgid "The note record vendor field is \"AMD\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1261 ../../../AMDGPUUsage.rst:1427
msgid ""
"Additional note records may be present, but any which are not documented "
"here are deprecated and should not be used."
msgstr ""

#: ../../../AMDGPUUsage.rst:1264
msgid "AMDGPU Code Object V2 ELF Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1270 ../../../AMDGPUUsage.rst:1271
#: ../../../AMDGPUUsage.rst:1273 ../../../AMDGPUUsage.rst:1274
#: ../../../AMDGPUUsage.rst:1276
msgid "\"AMD\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1270 ../../../AMDGPUUsage.rst:1287
#: ../../../AMDGPUUsage.rst:1306
msgid "``NT_AMD_HSA_CODE_OBJECT_VERSION``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1270
msgid "Code object version."
msgstr ""

#: ../../../AMDGPUUsage.rst:1271 ../../../AMDGPUUsage.rst:1288
#: ../../../AMDGPUUsage.rst:1320
msgid "``NT_AMD_HSA_HSAIL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1271
msgid ""
"HSAIL properties generated by the HSAIL Finalizer and not the LLVM compiler."
msgstr ""

#: ../../../AMDGPUUsage.rst:1273 ../../../AMDGPUUsage.rst:1289
#: ../../../AMDGPUUsage.rst:1361
msgid "``NT_AMD_HSA_ISA_VERSION``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1273
msgid "Target ISA version."
msgstr ""

#: ../../../AMDGPUUsage.rst:1274 ../../../AMDGPUUsage.rst:1291
#: ../../../AMDGPUUsage.rst:1415
msgid "``NT_AMD_HSA_METADATA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1274
msgid "Metadata null terminated string in YAML [YAML]_ textual format."
msgstr ""

#: ../../../AMDGPUUsage.rst:1276 ../../../AMDGPUUsage.rst:1292
#: ../../../AMDGPUUsage.rst:1375
msgid "``NT_AMD_HSA_ISA_NAME``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1276
msgid "Target ISA name."
msgstr ""

#: ../../../AMDGPUUsage.rst:1281
msgid "AMDGPU Code Object V2 ELF Note Record Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:1290
msgid "4-9"
msgstr ""

#: ../../../AMDGPUUsage.rst:1291 ../../../AMDGPUUsage.rst:1575
#: ../../../AMDGPUUsage.rst:4075
msgid "10"
msgstr ""

#: ../../../AMDGPUUsage.rst:1292 ../../../AMDGPUUsage.rst:1576
msgid "11"
msgstr ""

#: ../../../AMDGPUUsage.rst:1296
msgid ""
"Specifies the code object version number. The description field has the "
"following layout:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1306
msgid "The ``major_version`` has a value less than or equal to 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:1309
msgid ""
"Specifies the HSAIL properties used by the HSAIL Finalizer. The description "
"field has the following layout:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1323
msgid ""
"Specifies the target ISA version. The description field has the following "
"layout:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1336
msgid ""
"``vendor_name_size`` and ``architecture_name_size`` are the length of the "
"vendor and architecture names respectively, including the NUL character."
msgstr ""

#: ../../../AMDGPUUsage.rst:1339
msgid ""
"``vendor_and_architecture_name`` contains the NUL terminates string for the "
"vendor, immediately followed by the NUL terminated string for the "
"architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:1343
msgid "This note record is used by the HSA runtime loader."
msgstr ""

#: ../../../AMDGPUUsage.rst:1345
msgid ""
"Code object V2 only supports a limited number of processors and has fixed "
"settings for target features. See :ref:`amdgpu-elf-note-record-"
"supported_processors-v2-table` for a list of processors and the "
"corresponding target ID. In the table the note record ISA name is a "
"concatenation of the vendor name, architecture name, major, minor, and "
"stepping separated by a \":\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1352
msgid ""
"The target ID column shows the processor name and fixed target features used "
"by the LLVM compiler. The LLVM compiler does not generate a "
"``NT_AMD_HSA_HSAIL`` note record."
msgstr ""

#: ../../../AMDGPUUsage.rst:1356
msgid ""
"A code object generated by the Finalizer also uses code object V2 and always "
"generates a ``NT_AMD_HSA_HSAIL`` note record. The processor name and "
"``sramecc`` target feature is as shown in :ref:`amdgpu-elf-note-record-"
"supported_processors-v2-table` but the ``xnack`` target feature is specified "
"by the ``EF_AMDGPU_FEATURE_XNACK_V2`` ``e_flags`` bit."
msgstr ""

#: ../../../AMDGPUUsage.rst:1364
msgid "Specifies the target ISA name as a non-NUL terminated string."
msgstr ""

#: ../../../AMDGPUUsage.rst:1366
msgid "This note record is not used by the HSA runtime loader."
msgstr ""

#: ../../../AMDGPUUsage.rst:1368
msgid ""
"See the ``NT_AMD_HSA_ISA_VERSION`` note record description of the code "
"object V2's limited support of processors and fixed settings for target "
"features."
msgstr ""

#: ../../../AMDGPUUsage.rst:1371
msgid ""
"See :ref:`amdgpu-elf-note-record-supported_processors-v2-table` for a "
"mapping from the string to the corresponding target ID. If the ``xnack`` "
"target feature is supported and enabled, the string produced by the LLVM "
"compiler will may have a ``+xnack`` appended. The Finlizer did not do the "
"appending and instead used the ``EF_AMDGPU_FEATURE_XNACK_V2`` ``e_flags`` "
"bit."
msgstr ""

#: ../../../AMDGPUUsage.rst:1378
msgid ""
"Specifies extensible metadata associated with the code objects executed on "
"HSA [HSA]_ compatible runtimes (see :ref:`amdgpu-os`). It is required when "
"the target triple OS is ``amdhsa`` (see :ref:`amdgpu-target-triples`). See :"
"ref:`amdgpu-amdhsa-code-object-metadata-v2` for the syntax of the code "
"object metadata string."
msgstr ""

#: ../../../AMDGPUUsage.rst:1384
msgid ""
"AMDGPU Code Object V2 Supported Processors and Fixed Target Feature Settings"
msgstr ""

#: ../../../AMDGPUUsage.rst:1388
msgid "Note Record ISA Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:1390
msgid "``AMD:AMDGPU:6:0:0``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1391
msgid "``AMD:AMDGPU:6:0:1``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1392
msgid "``AMD:AMDGPU:6:0:2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1393
msgid "``AMD:AMDGPU:7:0:0``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1394
msgid "``AMD:AMDGPU:7:0:1``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1395
msgid "``AMD:AMDGPU:7:0:2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1396
msgid "``AMD:AMDGPU:7:0:3``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1397
msgid "``AMD:AMDGPU:7:0:4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1398
msgid "``AMD:AMDGPU:7:0:5``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1399
msgid "``AMD:AMDGPU:8:0:0``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1400
msgid "``AMD:AMDGPU:8:0:1``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1400
msgid "``gfx801:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1401
msgid "``AMD:AMDGPU:8:0:2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1402
msgid "``AMD:AMDGPU:8:0:3``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1403
msgid "``AMD:AMDGPU:8:0:4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1404
msgid "``AMD:AMDGPU:8:0:5``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1405
msgid "``AMD:AMDGPU:8:1:0``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1405
msgid "``gfx810:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1406
msgid "``AMD:AMDGPU:9:0:0``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1406
msgid "``gfx900:xnack-``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1407
msgid "``AMD:AMDGPU:9:0:1``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1407
msgid "``gfx900:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1408
msgid "``AMD:AMDGPU:9:0:2``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1408
msgid "``gfx902:xnack-``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1409
msgid "``AMD:AMDGPU:9:0:3``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1409
msgid "``gfx902:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1410
msgid "``AMD:AMDGPU:9:0:4``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1410
msgid "``gfx904:xnack-``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1411
msgid "``AMD:AMDGPU:9:0:5``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1411
msgid "``gfx904:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1412
msgid "``AMD:AMDGPU:9:0:6``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1412
msgid "``gfx906:sramecc-:xnack-``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1413
msgid "``AMD:AMDGPU:9:0:7``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1413
msgid "``gfx906:sramecc-:xnack+``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1414
msgid "``AMD:AMDGPU:9:0:12``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1414
msgid "``gfx90c:xnack-``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1420
msgid "Code Object V3 to V4 Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1422
msgid ""
"The AMDGPU backend code object uses the following ELF note record in the ``."
"note`` section when compiling for code object V3 to V4."
msgstr ""

#: ../../../AMDGPUUsage.rst:1425
msgid "The note record vendor field is \"AMDGPU\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1430
msgid "AMDGPU Code Object V3 to V4 ELF Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1436
msgid "\"AMDGPU\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1436 ../../../AMDGPUUsage.rst:1449
#: ../../../AMDGPUUsage.rst:1457
msgid "``NT_AMDGPU_METADATA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1436
msgid "Metadata in Message Pack [MsgPack]_ binary format."
msgstr ""

#: ../../../AMDGPUUsage.rst:1442
msgid "AMDGPU Code Object V3 to V4 ELF Note Record Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:1448
msgid "0-31"
msgstr ""

#: ../../../AMDGPUUsage.rst:1453
msgid ""
"Specifies extensible metadata associated with an AMDGPU code object. It is "
"encoded as a map in the Message Pack [MsgPack]_ binary data format. See :ref:"
"`amdgpu-amdhsa-code-object-metadata-v3` and :ref:`amdgpu-amdhsa-code-object-"
"metadata-v4` for the map keys defined for the ``amdhsa`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:1462
msgid "Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:1464
msgid "Symbols include the following:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1466
msgid "AMDGPU ELF Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:1470
msgid "Section"
msgstr ""

#: ../../../AMDGPUUsage.rst:1472 ../../../AMDGPUUsage.rst:1476
#: ../../../AMDGPUUsage.rst:1477
msgid "*link-name*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1472 ../../../AMDGPUUsage.rst:1475
#: ../../../AMDGPUUsage.rst:1477
msgid "``STT_OBJECT``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1472 ../../../AMDGPUUsage.rst:1498
msgid "Global variable"
msgstr ""

#: ../../../AMDGPUUsage.rst:1475
msgid "*link-name*\\ ``.kd``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1475 ../../../AMDGPUUsage.rst:1504
msgid "Kernel descriptor"
msgstr ""

#: ../../../AMDGPUUsage.rst:1476
msgid "``STT_FUNC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1476 ../../../AMDGPUUsage.rst:1507
msgid "Kernel entry point"
msgstr ""

#: ../../../AMDGPUUsage.rst:1477
msgid "SHN_AMDGPU_LDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:1477
msgid "Global variable in LDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:1481
msgid "Global variables both used and defined by the compilation unit."
msgstr ""

#: ../../../AMDGPUUsage.rst:1483
msgid ""
"If the symbol is defined in the compilation unit then it is allocated in the "
"appropriate section according to if it has initialized data or is readonly."
msgstr ""

#: ../../../AMDGPUUsage.rst:1486
msgid ""
"If the symbol is external then its section is ``STN_UNDEF`` and the loader "
"will resolve relocations using the definition provided by another code "
"object or explicitly defined by the runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:1490
msgid ""
"If the symbol resides in local/group memory (LDS) then its section is the "
"special processor specific section name ``SHN_AMDGPU_LDS``, and the "
"``st_value`` field describes alignment requirements as it does for common "
"symbols."
msgstr ""

#: ../../../AMDGPUUsage.rst:1497
msgid ""
"Add description of linked shared object symbols. Seems undefined symbols are "
"marked as STT_NOTYPE."
msgstr ""

#: ../../../AMDGPUUsage.rst:1501
msgid ""
"Every HSA kernel has an associated kernel descriptor. It is the address of "
"the kernel descriptor that is used in the AQL dispatch packet used to invoke "
"the kernel, not the kernel entry point. The layout of the HSA kernel "
"descriptor is defined in :ref:`amdgpu-amdhsa-kernel-descriptor`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1507
msgid "Every HSA kernel also has a symbol for its machine code entry point."
msgstr ""

#: ../../../AMDGPUUsage.rst:1512
msgid "Relocation Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1514
msgid ""
"AMDGPU backend generates ``Elf64_Rela`` relocation records. Supported "
"relocatable fields are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1520 ../../../AMDGPUUsage.rst:1562
#: ../../../AMDGPUUsage.rst:1564 ../../../AMDGPUUsage.rst:1568
#: ../../../AMDGPUUsage.rst:1570 ../../../AMDGPUUsage.rst:1572
#: ../../../AMDGPUUsage.rst:1573 ../../../AMDGPUUsage.rst:1574
#: ../../../AMDGPUUsage.rst:1575 ../../../AMDGPUUsage.rst:1576
msgid "``word32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1518
msgid ""
"This specifies a 32-bit field occupying 4 bytes with arbitrary byte "
"alignment. These values use the same byte order as other word values in the "
"AMDGPU architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:1525 ../../../AMDGPUUsage.rst:1566
#: ../../../AMDGPUUsage.rst:1569 ../../../AMDGPUUsage.rst:1578
msgid "``word64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1523
msgid ""
"This specifies a 64-bit field occupying 8 bytes with arbitrary byte "
"alignment. These values use the same byte order as other word values in the "
"AMDGPU architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:1527
msgid "Following notations are used for specifying relocation calculations:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1530
msgid "**A**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1530
msgid ""
"Represents the addend used to compute the value of the relocatable field."
msgstr ""

#: ../../../AMDGPUUsage.rst:1534
msgid "**G**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1533
msgid ""
"Represents the offset into the global offset table at which the relocation "
"entry's symbol will reside during execution."
msgstr ""

#: ../../../AMDGPUUsage.rst:1537
msgid "**GOT**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1537
msgid "Represents the address of the global offset table."
msgstr ""

#: ../../../AMDGPUUsage.rst:1541
msgid "**P**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1540
msgid ""
"Represents the place (section offset for ``et_rel`` or address for "
"``et_dyn``) of the storage unit being relocated (computed using "
"``r_offset``)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1546
msgid "**S**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1544
msgid ""
"Represents the value of the symbol whose index resides in the relocation "
"entry. Relocations not using this must specify a symbol index of "
"``STN_UNDEF``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1551
msgid "**B**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1549
msgid ""
"Represents the base address of a loaded executable or shared object which is "
"the difference between the ELF address and the actual load address. "
"Relocations using this are only valid in executable or shared objects."
msgstr ""

#: ../../../AMDGPUUsage.rst:1553
msgid "The following relocation types are supported:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1555
msgid "AMDGPU ELF Relocation Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:1559
msgid "Relocation Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:1559
msgid "Kind"
msgstr ""

#: ../../../AMDGPUUsage.rst:1559
msgid "Calculation"
msgstr ""

#: ../../../AMDGPUUsage.rst:1561
msgid "``R_AMDGPU_NONE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1562
msgid "``R_AMDGPU_ABS32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1562 ../../../AMDGPUUsage.rst:1564
#: ../../../AMDGPUUsage.rst:1566 ../../../AMDGPUUsage.rst:1570
msgid "Static, Dynamic"
msgstr ""

#: ../../../AMDGPUUsage.rst:1562
msgid "(S + A) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1564
msgid "``R_AMDGPU_ABS32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1564
msgid "(S + A) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1566
msgid "``R_AMDGPU_ABS64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1566 ../../../AMDGPUUsage.rst:1570
msgid "S + A"
msgstr ""

#: ../../../AMDGPUUsage.rst:1568
msgid "``R_AMDGPU_REL32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1568 ../../../AMDGPUUsage.rst:1569
#: ../../../AMDGPUUsage.rst:1572 ../../../AMDGPUUsage.rst:1573
#: ../../../AMDGPUUsage.rst:1574 ../../../AMDGPUUsage.rst:1575
#: ../../../AMDGPUUsage.rst:1576 ../../../AMDGPUUsage.rst:1579
msgid "Static"
msgstr ""

#: ../../../AMDGPUUsage.rst:1568 ../../../AMDGPUUsage.rst:1569
msgid "S + A - P"
msgstr ""

#: ../../../AMDGPUUsage.rst:1569
msgid "``R_AMDGPU_REL64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1570
msgid "``R_AMDGPU_ABS32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1572
msgid "``R_AMDGPU_GOTPCREL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1572
msgid "G + GOT + A - P"
msgstr ""

#: ../../../AMDGPUUsage.rst:1573
msgid "``R_AMDGPU_GOTPCREL32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1573 ../../../AMDGPUUsage.rst:4059
#: ../../../AMDGPUUsage.rst:11458 ../../../AMDGPUUsage.rst:11459
#: ../../../AMDGPUUsage.rst:11460 ../../../AMDGPUUsage.rst:11461
#: ../../../AMDGPUUsage.rst:11462 ../../../AMDGPUUsage.rst:11464
#: ../../../AMDGPUUsage.rst:11466
msgid "8"
msgstr ""

#: ../../../AMDGPUUsage.rst:1573
msgid "(G + GOT + A - P) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1574
msgid "``R_AMDGPU_GOTPCREL32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1574 ../../../AMDGPUUsage.rst:4067
msgid "9"
msgstr ""

#: ../../../AMDGPUUsage.rst:1574
msgid "(G + GOT + A - P) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1575
msgid "``R_AMDGPU_REL32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1575
msgid "(S + A - P) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1576
msgid "``R_AMDGPU_REL32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1576
msgid "(S + A - P) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1577
msgid "12"
msgstr ""

#: ../../../AMDGPUUsage.rst:1578
msgid "``R_AMDGPU_RELATIVE64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1578
msgid "Dynamic"
msgstr ""

#: ../../../AMDGPUUsage.rst:1578 ../../../AMDGPUUsage.rst:4090
msgid "13"
msgstr ""

#: ../../../AMDGPUUsage.rst:1578
msgid "B + A"
msgstr ""

#: ../../../AMDGPUUsage.rst:1579
msgid "``R_AMDGPU_REL16``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1579 ../../../AMDGPUUsage.rst:4106
msgid "14"
msgstr ""

#: ../../../AMDGPUUsage.rst:1579
msgid "``word16``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1579
msgid "((S + A - P) - 4) / 4"
msgstr ""

#: ../../../AMDGPUUsage.rst:1582
msgid ""
"``R_AMDGPU_ABS32_LO`` and ``R_AMDGPU_ABS32_HI`` are only supported by the "
"``mesa3d`` OS, which does not support ``R_AMDGPU_ABS64``."
msgstr ""

#: ../../../AMDGPUUsage.rst:1585
msgid ""
"There is no current OS loader support for 32-bit programs and so "
"``R_AMDGPU_ABS32`` is not used."
msgstr ""

#: ../../../AMDGPUUsage.rst:1591
msgid "Loaded Code Object Path Uniform Resource Identifier (URI)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1593
msgid ""
"The AMD GPU code object loader represents the path of the ELF shared object "
"from which the code object was loaded as a textual Unifom Resource "
"Identifier (URI). Note that the code object is the in memory loaded "
"relocated form of the ELF shared object.  Multiple code objects may be "
"loaded at different memory addresses in the same process from the same ELF "
"shared object."
msgstr ""

#: ../../../AMDGPUUsage.rst:1599
msgid ""
"The loaded code object path URI syntax is defined by the following BNF "
"syntax:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1613
msgid "**number**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1612
msgid ""
"Is a C integral literal where hexadecimal values are prefixed by \"0x\" or "
"\"0X\", and octal values by \"0\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1619
msgid "**file_path**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1616
msgid ""
"Is the file's path specified as a URI encoded UTF-8 string. In URI encoding, "
"every character that is not in the regular expression ``[a-zA-Z0-9/_.~-]`` "
"is encoded as two uppercase hexadecimal digits proceeded by \"%\".  "
"Directories in the path are separated by \"/\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1624
msgid "**offset**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1622
msgid ""
"Is a 0-based byte offset to the start of the code object.  For a file URI, "
"it is from the start of the file specified by the ``file_path``, and if "
"omitted defaults to 0. For a memory URI, it is the memory address and is "
"required."
msgstr ""

#: ../../../AMDGPUUsage.rst:1628
msgid "**size**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1627
msgid ""
"Is the number of bytes in the code object.  For a file URI, if omitted it "
"defaults to the size of the file.  It is required for a memory URI."
msgstr ""

#: ../../../AMDGPUUsage.rst:1632
msgid "**process_id**"
msgstr ""

#: ../../../AMDGPUUsage.rst:1631
msgid ""
"Is the identity of the process owning the memory.  For Linux it is the C "
"unsigned integral decimal literal for the process ID (PID)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1645
msgid "DWARF Debug Information"
msgstr ""

#: ../../../AMDGPUUsage.rst:1649
msgid ""
"This section describes **provisional support** for AMDGPU DWARF [DWARF]_ "
"that is not currently fully implemented and is subject to change."
msgstr ""

#: ../../../AMDGPUUsage.rst:1652
msgid ""
"AMDGPU generates DWARF [DWARF]_ debugging information ELF sections (see :ref:"
"`amdgpu-elf-code-object`) which contain information that maps the code "
"object executable code and data to the source language constructs. It can be "
"used by tools such as debuggers and profilers. It uses features defined in :"
"doc:`AMDGPUDwarfExtensionsForHeterogeneousDebugging` that are made available "
"in DWARF Version 4 and DWARF Version 5 as an LLVM vendor extension."
msgstr ""

#: ../../../AMDGPUUsage.rst:1659
msgid ""
"This section defines the AMDGPU target architecture specific DWARF mappings."
msgstr ""

#: ../../../AMDGPUUsage.rst:1664
msgid "Register Identifier"
msgstr ""

#: ../../../AMDGPUUsage.rst:1666
msgid ""
"This section defines the AMDGPU target architecture register numbers used in "
"DWARF operation expressions (see DWARF Version 5 section 2.5 and :ref:"
"`amdgpu-dwarf-operation-expressions`) and Call Frame Information "
"instructions (see DWARF Version 5 section 6.4 and :ref:`amdgpu-dwarf-call-"
"frame-information`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1672
msgid ""
"A single code object can contain code for kernels that have different "
"wavefront sizes. The vector registers and some scalar registers are based on "
"the wavefront size. AMDGPU defines distinct DWARF registers for each "
"wavefront size. This simplifies the consumer of the DWARF so that each "
"register has a fixed size, rather than being dynamic according to the "
"wavefront size mode. Similarly, distinct DWARF registers are defined for "
"those registers that vary in size according to the process address size. "
"This allows a consumer to treat a specific AMDGPU processor as a single "
"architecture regardless of how it is configured at run time. The compiler "
"explicitly specifies the DWARF registers that match the mode in which the "
"code it is generating will be executed."
msgstr ""

#: ../../../AMDGPUUsage.rst:1683
msgid ""
"DWARF registers are encoded as numbers, which are mapped to architecture "
"registers. The mapping for AMDGPU is defined in :ref:`amdgpu-dwarf-register-"
"mapping-table`. All AMDGPU targets use the same mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:1688
msgid "AMDGPU DWARF Register Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:1692
msgid "DWARF Register"
msgstr ""

#: ../../../AMDGPUUsage.rst:1692
msgid "AMDGPU Register"
msgstr ""

#: ../../../AMDGPUUsage.rst:1692 ../../../AMDGPUUsage.rst:1842
msgid "Bit Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:1694
msgid "PC_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1694
msgid ""
"Program Counter (PC) when executing in a 32-bit process address space. Used "
"in the CFI to describe the PC of the calling frame."
msgstr ""

#: ../../../AMDGPUUsage.rst:1699
msgid "EXEC_MASK_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1699
msgid "Execution Mask Register when executing in wavefront 32 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1701
msgid "2-15"
msgstr ""

#: ../../../AMDGPUUsage.rst:1701 ../../../AMDGPUUsage.rst:1710
#: ../../../AMDGPUUsage.rst:1714 ../../../AMDGPUUsage.rst:1717
#: ../../../AMDGPUUsage.rst:1722 ../../../AMDGPUUsage.rst:1728
#: ../../../AMDGPUUsage.rst:1731 ../../../AMDGPUUsage.rst:1733
#: ../../../AMDGPUUsage.rst:1738 ../../../AMDGPUUsage.rst:1744
#: ../../../AMDGPUUsage.rst:1750 ../../../AMDGPUUsage.rst:1756
#: ../../../AMDGPUUsage.rst:1853
msgid "*Reserved*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1701 ../../../AMDGPUUsage.rst:1710
msgid "*Reserved for highly accessed registers using DWARF shortcut.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1703 ../../../AMDGPUUsage.rst:4187
msgid "16"
msgstr ""

#: ../../../AMDGPUUsage.rst:1703
msgid "PC_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:1703
msgid ""
"Program Counter (PC) when executing in a 64-bit process address space. Used "
"in the CFI to describe the PC of the calling frame."
msgstr ""

#: ../../../AMDGPUUsage.rst:1708
msgid "17"
msgstr ""

#: ../../../AMDGPUUsage.rst:1708
msgid "EXEC_MASK_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:1708
msgid "Execution Mask Register when executing in wavefront 64 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1710
msgid "18-31"
msgstr ""

#: ../../../AMDGPUUsage.rst:1712
msgid "32-95"
msgstr ""

#: ../../../AMDGPUUsage.rst:1712
msgid "SGPR0-SGPR63"
msgstr ""

#: ../../../AMDGPUUsage.rst:1712 ../../../AMDGPUUsage.rst:1732
msgid "Scalar General Purpose Registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:1714
msgid "96-127"
msgstr ""

#: ../../../AMDGPUUsage.rst:1714
msgid "*Reserved for frequently accessed registers using DWARF 1-byte ULEB.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1716
msgid "128"
msgstr ""

#: ../../../AMDGPUUsage.rst:1716
msgid "STATUS"
msgstr ""

#: ../../../AMDGPUUsage.rst:1716
msgid "Status Register."
msgstr ""

#: ../../../AMDGPUUsage.rst:1717
msgid "129-511"
msgstr ""

#: ../../../AMDGPUUsage.rst:1717
msgid "*Reserved for future Scalar Architectural Registers.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1719 ../../../AMDGPUUsage.rst:3710
msgid "512"
msgstr ""

#: ../../../AMDGPUUsage.rst:1719
msgid "VCC_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1719
msgid "Vector Condition Code Register when executing in wavefront 32 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1722
msgid "513-1023"
msgstr ""

#: ../../../AMDGPUUsage.rst:1722
msgid ""
"*Reserved for future Vector Architectural Registers when executing in "
"wavefront 32 mode.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1725
msgid "768"
msgstr ""

#: ../../../AMDGPUUsage.rst:1725
msgid "VCC_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:1725
msgid "Vector Condition Code Register when executing in wavefront 64 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1728
msgid "769-1023"
msgstr ""

#: ../../../AMDGPUUsage.rst:1728
msgid ""
"*Reserved for future Vector Architectural Registers when executing in "
"wavefront 64 mode.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1731
msgid "1024-1087"
msgstr ""

#: ../../../AMDGPUUsage.rst:1731
msgid "*Reserved for padding.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1732
msgid "1088-1129"
msgstr ""

#: ../../../AMDGPUUsage.rst:1732
msgid "SGPR64-SGPR105"
msgstr ""

#: ../../../AMDGPUUsage.rst:1733
msgid "1130-1535"
msgstr ""

#: ../../../AMDGPUUsage.rst:1733
msgid "*Reserved for future Scalar General Purpose Registers.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1735
msgid "1536-1791"
msgstr ""

#: ../../../AMDGPUUsage.rst:1735 ../../../AMDGPUUsage.rst:1747
msgid "VGPR0-VGPR255"
msgstr ""

#: ../../../AMDGPUUsage.rst:1735 ../../../AMDGPUUsage.rst:1741
msgid "32*32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1735
msgid "Vector General Purpose Registers when executing in wavefront 32 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1738
msgid "1792-2047"
msgstr ""

#: ../../../AMDGPUUsage.rst:1738
msgid ""
"*Reserved for future Vector General Purpose Registers when executing in "
"wavefront 32 mode.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1741
msgid "2048-2303"
msgstr ""

#: ../../../AMDGPUUsage.rst:1741 ../../../AMDGPUUsage.rst:1753
msgid "AGPR0-AGPR255"
msgstr ""

#: ../../../AMDGPUUsage.rst:1741
msgid "Vector Accumulation Registers when executing in wavefront 32 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1744
msgid "2304-2559"
msgstr ""

#: ../../../AMDGPUUsage.rst:1744
msgid ""
"*Reserved for future Vector Accumulation Registers when executing in "
"wavefront 32 mode.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1747
msgid "2560-2815"
msgstr ""

#: ../../../AMDGPUUsage.rst:1747 ../../../AMDGPUUsage.rst:1753
msgid "64*32"
msgstr ""

#: ../../../AMDGPUUsage.rst:1747
msgid "Vector General Purpose Registers when executing in wavefront 64 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1750
msgid "2816-3071"
msgstr ""

#: ../../../AMDGPUUsage.rst:1750
msgid ""
"*Reserved for future Vector General Purpose Registers when executing in "
"wavefront 64 mode.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1753
msgid "3072-3327"
msgstr ""

#: ../../../AMDGPUUsage.rst:1753
msgid "Vector Accumulation Registers when executing in wavefront 64 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:1756
msgid "3328-3583"
msgstr ""

#: ../../../AMDGPUUsage.rst:1756
msgid ""
"*Reserved for future Vector Accumulation Registers when executing in "
"wavefront 64 mode.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1761
msgid ""
"The vector registers are represented as the full size for the wavefront. "
"They are organized as consecutive dwords (32-bits), one per lane, with the "
"dword at the least significant bit position corresponding to lane 0 and so "
"forth. DWARF location expressions involving the ``DW_OP_LLVM_offset`` and "
"``DW_OP_LLVM_push_lane`` operations are used to select the part of the "
"vector register corresponding to the lane that is executing the current "
"thread of execution in languages that are implemented using a SIMD or SIMT "
"execution model."
msgstr ""

#: ../../../AMDGPUUsage.rst:1770
msgid ""
"If the wavefront size is 32 lanes then the wavefront 32 mode register "
"definitions are used. If the wavefront size is 64 lanes then the wavefront "
"64 mode register definitions are used. Some AMDGPU targets support executing "
"in both wavefront 32 and wavefront 64 mode. The register definitions "
"corresponding to the wavefront mode of the generated code will be used."
msgstr ""

#: ../../../AMDGPUUsage.rst:1776
msgid ""
"If code is generated to execute in a 32-bit process address space, then the "
"32-bit process address space register definitions are used. If code is "
"generated to execute in a 64-bit process address space, then the 64-bit "
"process address space register definitions are used. The ``amdgcn`` target "
"only supports the 64-bit process address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:1785
msgid "Address Class Identifier"
msgstr ""

#: ../../../AMDGPUUsage.rst:1787
msgid ""
"The DWARF address class represents the source language memory space. See "
"DWARF Version 5 section 2.12 which is updated by the *DWARF Extensions For "
"Heterogeneous Debugging* section :ref:`amdgpu-dwarf-segment_addresses`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1791
msgid ""
"The DWARF address class mapping used for AMDGPU is defined in :ref:`amdgpu-"
"dwarf-address-class-mapping-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1794
msgid "AMDGPU DWARF Address Class Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:1798 ../../../AMDGPUUsage.rst:1840
msgid "DWARF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1798 ../../../AMDGPUUsage.rst:1840
msgid "AMDGPU"
msgstr ""

#: ../../../AMDGPUUsage.rst:1800
msgid "Address Class Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:1800 ../../../AMDGPUUsage.rst:1842
msgid "Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:1802
msgid "``DW_ADDR_none``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1802
msgid "0x0000"
msgstr ""

#: ../../../AMDGPUUsage.rst:1802 ../../../AMDGPUUsage.rst:1850
msgid "Generic (Flat)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1803
msgid "``DW_ADDR_LLVM_global``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1803
msgid "0x0001"
msgstr ""

#: ../../../AMDGPUUsage.rst:1804
msgid "``DW_ADDR_LLVM_constant``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1804
msgid "0x0002"
msgstr ""

#: ../../../AMDGPUUsage.rst:1805
msgid "``DW_ADDR_LLVM_group``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1805
msgid "0x0003"
msgstr ""

#: ../../../AMDGPUUsage.rst:1805 ../../../AMDGPUUsage.rst:1852
msgid "Local (group/LDS)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1806
msgid "``DW_ADDR_LLVM_private``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1806
msgid "0x0004"
msgstr ""

#: ../../../AMDGPUUsage.rst:1806 ../../../AMDGPUUsage.rst:1854
#: ../../../AMDGPUUsage.rst:1855
msgid "Private (Scratch)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1807
msgid "``DW_ADDR_AMDGPU_region``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1807
msgid "0x8000"
msgstr ""

#: ../../../AMDGPUUsage.rst:1807 ../../../AMDGPUUsage.rst:1851
msgid "Region (GDS)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1810
msgid ""
"The DWARF address class values defined in the *DWARF Extensions For "
"Heterogeneous Debugging* section :ref:`amdgpu-dwarf-segment_addresses` are "
"used."
msgstr ""

#: ../../../AMDGPUUsage.rst:1813
msgid ""
"In addition, ``DW_ADDR_AMDGPU_region`` is encoded as a vendor extension. "
"This is available for use for the AMD extension for access to the hardware "
"GDS memory which is scratchpad memory allocated per device."
msgstr ""

#: ../../../AMDGPUUsage.rst:1817
msgid ""
"For AMDGPU if no ``DW_AT_address_class`` attribute is present, then the "
"default address class of ``DW_ADDR_none`` is used."
msgstr ""

#: ../../../AMDGPUUsage.rst:1820
msgid ""
"See :ref:`amdgpu-dwarf-address-space-identifier` for information on the "
"AMDGPU mapping of DWARF address classes to DWARF address spaces, including "
"address size and NULL value."
msgstr ""

#: ../../../AMDGPUUsage.rst:1827
msgid "Address Space Identifier"
msgstr ""

#: ../../../AMDGPUUsage.rst:1829
msgid ""
"DWARF address spaces correspond to target architecture specific linear "
"addressable memory areas. See DWARF Version 5 section 2.12 and *DWARF "
"Extensions For Heterogeneous Debugging* section :ref:`amdgpu-dwarf-"
"segment_addresses`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1833
msgid ""
"The DWARF address space mapping used for AMDGPU is defined in :ref:`amdgpu-"
"dwarf-address-space-mapping-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1836
msgid "AMDGPU DWARF Address Space Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:1840
msgid "Notes"
msgstr ""

#: ../../../AMDGPUUsage.rst:1842
msgid "Address"
msgstr ""

#: ../../../AMDGPUUsage.rst:1844
msgid "64-bit process address space"
msgstr ""

#: ../../../AMDGPUUsage.rst:1844
msgid "32-bit process address space"
msgstr ""

#: ../../../AMDGPUUsage.rst:1849
msgid "``DW_ASPACE_none``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1849
msgid "0x00"
msgstr ""

#: ../../../AMDGPUUsage.rst:1849
msgid "*default address space*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1850
msgid "``DW_ASPACE_AMDGPU_generic``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1851
msgid "``DW_ASPACE_AMDGPU_region``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1852
msgid "``DW_ASPACE_AMDGPU_local``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1852
msgid "0x03"
msgstr ""

#: ../../../AMDGPUUsage.rst:1853
msgid "0x04"
msgstr ""

#: ../../../AMDGPUUsage.rst:1854
msgid "``DW_ASPACE_AMDGPU_private_lane``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1854
msgid "0x05"
msgstr ""

#: ../../../AMDGPUUsage.rst:1854
msgid "*focused lane*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1855
msgid "``DW_ASPACE_AMDGPU_private_wave``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1855
msgid "0x06"
msgstr ""

#: ../../../AMDGPUUsage.rst:1855
msgid "*unswizzled wavefront*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1858
msgid ""
"See :ref:`amdgpu-address-spaces` for information on the AMDGPU address "
"spaces including address size and NULL value."
msgstr ""

#: ../../../AMDGPUUsage.rst:1861
msgid ""
"The ``DW_ASPACE_none`` address space is the default target architecture "
"address space used in DWARF operations that do not specify an address space. "
"It therefore has to map to the global address space so that the "
"``DW_OP_addr*`` and related operations can refer to addresses in the program "
"code."
msgstr ""

#: ../../../AMDGPUUsage.rst:1866
msgid ""
"The ``DW_ASPACE_AMDGPU_generic`` address space allows location expressions "
"to specify the flat address space. If the address corresponds to an address "
"in the local address space, then it corresponds to the wavefront that is "
"executing the focused thread of execution. If the address corresponds to an "
"address in the private address space, then it corresponds to the lane that "
"is executing the focused thread of execution for languages that are "
"implemented using a SIMD or SIMT execution model."
msgstr ""

#: ../../../AMDGPUUsage.rst:1876
msgid ""
"CUDA-like languages such as HIP that do not have address spaces in the "
"language type system, but do allow variables to be allocated in different "
"address spaces, need to explicitly specify the ``DW_ASPACE_AMDGPU_generic`` "
"address space in the DWARF expression operations as the default address "
"space is the global address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:1882
msgid ""
"The ``DW_ASPACE_AMDGPU_local`` address space allows location expressions to "
"specify the local address space corresponding to the wavefront that is "
"executing the focused thread of execution."
msgstr ""

#: ../../../AMDGPUUsage.rst:1886
msgid ""
"The ``DW_ASPACE_AMDGPU_private_lane`` address space allows location "
"expressions to specify the private address space corresponding to the lane "
"that is executing the focused thread of execution for languages that are "
"implemented using a SIMD or SIMT execution model."
msgstr ""

#: ../../../AMDGPUUsage.rst:1891
msgid ""
"The ``DW_ASPACE_AMDGPU_private_wave`` address space allows location "
"expressions to specify the unswizzled private address space corresponding to "
"the wavefront that is executing the focused thread of execution. The "
"wavefront view of private memory is the per wavefront unswizzled backing "
"memory layout defined in :ref:`amdgpu-address-spaces`, such that address 0 "
"corresponds to the first location for the backing memory of the wavefront "
"(namely the address is not offset by ``wavefront-scratch-base``). The "
"following formula can be used to convert from a "
"``DW_ASPACE_AMDGPU_private_lane`` address to a "
"``DW_ASPACE_AMDGPU_private_wave`` address:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1907
msgid ""
"If the ``DW_ASPACE_AMDGPU_private_lane`` address is dword aligned, and the "
"start of the dwords for each lane starting with lane 0 is required, then "
"this simplifies to:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1916
msgid ""
"A compiler can use the ``DW_ASPACE_AMDGPU_private_wave`` address space to "
"read a complete spilled vector register back into a complete vector register "
"in the CFI. The frame pointer can be a private lane address which is dword "
"aligned, which can be shifted to multiply by the wavefront size, and then "
"used to form a private wavefront address that gives a location for a "
"contiguous set of dwords, one per lane, where the vector register dwords are "
"spilled. The compiler knows the wavefront size since it generates the code. "
"Note that the type of the address may have to be converted as the size of a "
"``DW_ASPACE_AMDGPU_private_lane`` address may be smaller than the size of a "
"``DW_ASPACE_AMDGPU_private_wave`` address."
msgstr ""

#: ../../../AMDGPUUsage.rst:1930
msgid "Lane identifier"
msgstr ""

#: ../../../AMDGPUUsage.rst:1932
msgid ""
"DWARF lane identifies specify a target architecture lane position for "
"hardware that executes in a SIMD or SIMT manner, and on which a source "
"language maps its threads of execution onto those lanes. The DWARF lane "
"identifier is pushed by the ``DW_OP_LLVM_push_lane`` DWARF expression "
"operation. See DWARF Version 5 section 2.5 which is updated by *DWARF "
"Extensions For Heterogeneous Debugging* section :ref:`amdgpu-dwarf-operation-"
"expressions`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1939
msgid ""
"For AMDGPU, the lane identifier corresponds to the hardware lane ID of a "
"wavefront. It is numbered from 0 to the wavefront size minus 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:1943
msgid "Operation Expressions"
msgstr ""

#: ../../../AMDGPUUsage.rst:1945
msgid ""
"DWARF expressions are used to compute program values and the locations of "
"program objects. See DWARF Version 5 section 2.5 and :ref:`amdgpu-dwarf-"
"operation-expressions`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1949
msgid ""
"DWARF location descriptions describe how to access storage which includes "
"memory and registers. When accessing storage on AMDGPU, bytes are ordered "
"with least significant bytes first, and bits are ordered within bytes with "
"least significant bits first."
msgstr ""

#: ../../../AMDGPUUsage.rst:1954
msgid ""
"For AMDGPU CFI expressions, ``DW_OP_LLVM_select_bit_piece`` is used to "
"describe unwinding vector registers that are spilled under the execution "
"mask to memory: the zero-single location description is the vector register, "
"and the one-single location description is the spilled memory location "
"description. The ``DW_OP_LLVM_form_aspace_address`` is used to specify the "
"address space of the memory location description."
msgstr ""

#: ../../../AMDGPUUsage.rst:1961
msgid ""
"In AMDGPU expressions, ``DW_OP_LLVM_select_bit_piece`` is used by the "
"``DW_AT_LLVM_lane_pc`` attribute expression where divergent control flow is "
"controlled by the execution mask. An undefined location description together "
"with ``DW_OP_LLVM_extend`` is used to indicate the lane was not active on "
"entry to the subprogram. See :ref:`amdgpu-dwarf-dw-at-llvm-lane-pc` for an "
"example."
msgstr ""

#: ../../../AMDGPUUsage.rst:1968
msgid "Debugger Information Entry Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:1970
msgid ""
"This section describes how certain debugger information entry attributes are "
"used by AMDGPU. See the sections in DWARF Version 5 section 2 which are "
"updated by *DWARF Extensions For Heterogeneous Debugging* section :ref:"
"`amdgpu-dwarf-debugging-information-entry-attributes`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1978
msgid "``DW_AT_LLVM_lane_pc``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1980
msgid ""
"For AMDGPU, the ``DW_AT_LLVM_lane_pc`` attribute is used to specify the "
"program location of the separate lanes of a SIMT thread."
msgstr ""

#: ../../../AMDGPUUsage.rst:1983
msgid ""
"If the lane is an active lane then this will be the same as the current "
"program location."
msgstr ""

#: ../../../AMDGPUUsage.rst:1986
msgid ""
"If the lane is inactive, but was active on entry to the subprogram, then "
"this is the program location in the subprogram at which execution of the "
"lane is conceptual positioned."
msgstr ""

#: ../../../AMDGPUUsage.rst:1990
msgid ""
"If the lane was not active on entry to the subprogram, then this will be the "
"undefined location. A client debugger can check if the lane is part of a "
"valid work-group by checking that the lane is in the range of the associated "
"work-group within the grid, accounting for partial work-groups. If it is "
"not, then the debugger can omit any information for the lane. Otherwise, the "
"debugger may repeatedly unwind the stack and inspect the "
"``DW_AT_LLVM_lane_pc`` of the calling subprogram until it finds a non-"
"undefined location. Conceptually the lane only has the call frames that it "
"has a non-undefined ``DW_AT_LLVM_lane_pc``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2000
msgid ""
"The following example illustrates how the AMDGPU backend can generate a "
"DWARF location list expression for the nested ``IF/THEN/ELSE`` structures of "
"the following subprogram pseudo code for a target with 64 lanes per "
"wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2024
msgid ""
"The AMDGPU backend may generate the following pseudo LLVM MIR to manipulate "
"the execution mask (``EXEC``) to linearize the control flow. The condition "
"is evaluated to make a mask of the lanes for which the condition evaluates "
"to true. First the ``THEN`` region is executed by setting the ``EXEC`` mask "
"to the logical ``AND`` of the current ``EXEC`` mask with the condition mask. "
"Then the ``ELSE`` region is executed by negating the ``EXEC`` mask and "
"logical ``AND`` of the saved ``EXEC`` mask at the start of the region. After "
"the ``IF/THEN/ELSE`` region the ``EXEC`` mask is restored to the value it "
"had at the beginning of the region. This is shown below. Other approaches "
"are possible, but the basic concept is the same."
msgstr ""

#: ../../../AMDGPUUsage.rst:2066
msgid ""
"To create the DWARF location list expression that defines the location "
"description of a vector of lane program locations, the LLVM MIR "
"``DBG_VALUE`` pseudo instruction can be used to annotate the linearized "
"control flow. This can be done by defining an artificial variable for the "
"lane PC. The DWARF location list expression created for it is used as the "
"value of the ``DW_AT_LLVM_lane_pc`` attribute on the subprogram's debugger "
"information entry."
msgstr ""

#: ../../../AMDGPUUsage.rst:2073
msgid ""
"A DWARF procedure is defined for each well nested structured control flow "
"region which provides the conceptual lane program location for a lane if it "
"is not active (namely it is divergent). The DWARF operation expression for "
"each region conceptually inherits the value of the immediately enclosing "
"region and modifies it according to the semantics of the region."
msgstr ""

#: ../../../AMDGPUUsage.rst:2079
msgid ""
"For an ``IF/THEN/ELSE`` region the divergent program location is at the "
"start of the region for the ``THEN`` region since it is executed first. For "
"the ``ELSE`` region the divergent program location is at the end of the ``IF/"
"THEN/ELSE`` region since the ``THEN`` region has completed."
msgstr ""

#: ../../../AMDGPUUsage.rst:2084
msgid ""
"The lane PC artificial variable is assigned at each region transition. It "
"uses the immediately enclosing region's DWARF procedure to compute the "
"program location for each lane assuming they are divergent, and then "
"modifies the result by inserting the current program location for each lane "
"that the ``EXEC`` mask indicates is active."
msgstr ""

#: ../../../AMDGPUUsage.rst:2090
msgid ""
"By having separate DWARF procedures for each region, they can be reused to "
"define the value for any nested region. This reduces the total size of the "
"DWARF operation expressions."
msgstr ""

#: ../../../AMDGPUUsage.rst:2094
msgid "The following provides an example using pseudo LLVM MIR."
msgstr ""

#: ../../../AMDGPUUsage.rst:2226
msgid ""
"The DWARF procedure ``%__active_lane_pc`` is used to update the lane pc "
"elements that are active, with the current program location."
msgstr ""

#: ../../../AMDGPUUsage.rst:2229
msgid ""
"Artificial variables %__lex_1_save_exec and %__lex_1_1_save_exec are created "
"for the execution masks saved on entry to a region. Using the ``DBG_VALUE`` "
"pseudo instruction, location list entries will be created that describe "
"where the artificial variables are allocated at any given program location. "
"The compiler may allocate them to registers or spill them to memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:2235
msgid ""
"The DWARF procedures for each region use the values of the saved execution "
"mask artificial variables to only update the lanes that are active on entry "
"to the region. All other lanes retain the value of the enclosing region "
"where they were last active. If they were not active on entry to the "
"subprogram, then will have the undefined location description."
msgstr ""

#: ../../../AMDGPUUsage.rst:2241
msgid ""
"Other structured control flow regions can be handled similarly. For example, "
"loops would set the divergent program location for the region at the end of "
"the loop. Any lanes active will be in the loop, and any lanes not active "
"must have exited the loop."
msgstr ""

#: ../../../AMDGPUUsage.rst:2246
msgid ""
"An ``IF/THEN/ELSEIF/ELSEIF/...`` region can be treated as a nest of ``IF/"
"THEN/ELSE`` regions."
msgstr ""

#: ../../../AMDGPUUsage.rst:2249
msgid ""
"The DWARF procedures can use the active lane artificial variable described "
"in :ref:`amdgpu-dwarf-amdgpu-dw-at-llvm-active-lane` rather than the actual "
"``EXEC`` mask in order to support whole or quad wavefront mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:2256
msgid "``DW_AT_LLVM_active_lane``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2258
msgid ""
"The ``DW_AT_LLVM_active_lane`` attribute on a subprogram debugger "
"information entry is used to specify the lanes that are conceptually active "
"for a SIMT thread."
msgstr ""

#: ../../../AMDGPUUsage.rst:2262
msgid ""
"The execution mask may be modified to implement whole or quad wavefront mode "
"operations. For example, all lanes may need to temporarily be made active to "
"execute a whole wavefront operation. Such regions would save the ``EXEC`` "
"mask, update it to enable the necessary lanes, perform the operations, and "
"then restore the ``EXEC`` mask from the saved value. While executing the "
"whole wavefront region, the conceptual execution mask is the saved value, "
"not the ``EXEC`` value."
msgstr ""

#: ../../../AMDGPUUsage.rst:2270
msgid ""
"This is handled by defining an artificial variable for the active lane mask. "
"The active lane mask artificial variable would be the actual ``EXEC`` mask "
"for normal regions, and the saved execution mask for regions where the mask "
"is temporarily updated. The location list expression created for this "
"artificial variable is used to define the value of the "
"``DW_AT_LLVM_active_lane`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:2278
msgid "``DW_AT_LLVM_augmentation``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2280
msgid ""
"For AMDGPU, the ``DW_AT_LLVM_augmentation`` attribute of a compilation unit "
"debugger information entry has the following value for the augmentation "
"string:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2287
msgid ""
"The \"vX.Y\" specifies the major X and minor Y version number of the AMDGPU "
"extensions used in the DWARF of the compilation unit. The version number "
"conforms to [SEMVER]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:2292
msgid "Call Frame Information"
msgstr ""

#: ../../../AMDGPUUsage.rst:2294
msgid ""
"DWARF Call Frame Information (CFI) describes how a consumer can virtually "
"*unwind* call frames in a running process or core dump. See DWARF Version 5 "
"section 6.4 and :ref:`amdgpu-dwarf-call-frame-information`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2298
msgid ""
"For AMDGPU, the Common Information Entry (CIE) fields have the following "
"values:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2300
msgid ""
"``augmentation`` string contains the following null-terminated UTF-8 string:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2306
msgid ""
"The ``vX.Y`` specifies the major X and minor Y version number of the AMDGPU "
"extensions used in this CIE or to the FDEs that use it. The version number "
"conforms to [SEMVER]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:2310
msgid ""
"``address_size`` for the ``Global`` address space is defined in :ref:`amdgpu-"
"dwarf-address-space-identifier`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2313
msgid ""
"``segment_selector_size`` is 0 as AMDGPU does not use a segment selector."
msgstr ""

#: ../../../AMDGPUUsage.rst:2315
msgid "``code_alignment_factor`` is 4 bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:2319 ../../../AMDGPUUsage.rst:2325
msgid "Add to :ref:`amdgpu-processor-table` table."
msgstr ""

#: ../../../AMDGPUUsage.rst:2321
msgid "``data_alignment_factor`` is 4 bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:2327
msgid ""
"``return_address_register`` is ``PC_32`` for 32-bit processes and ``PC_64`` "
"for 64-bit processes defined in :ref:`amdgpu-dwarf-register-identifier`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2330
msgid ""
"``initial_instructions`` Since a subprogram X with fewer registers can be "
"called from subprogram Y that has more allocated, X will not change any of "
"the extra registers as it cannot access them. Therefore, the default rule "
"for all columns is ``same value``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2335
msgid ""
"For AMDGPU the register number follows the numbering defined in :ref:`amdgpu-"
"dwarf-register-identifier`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2338
msgid ""
"For AMDGPU the instructions are variable size. A consumer can subtract 1 "
"from the return address to get the address of a byte within the call site "
"instructions. See DWARF Version 5 section 6.4.4."
msgstr ""

#: ../../../AMDGPUUsage.rst:2343
msgid "Accelerated Access"
msgstr ""

#: ../../../AMDGPUUsage.rst:2345
msgid "See DWARF Version 5 section 6.1."
msgstr ""

#: ../../../AMDGPUUsage.rst:2348
msgid "Lookup By Name Section Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:2350
msgid ""
"See DWARF Version 5 section 6.1.1.4.1 and :ref:`amdgpu-dwarf-lookup-by-name`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2352
msgid "For AMDGPU the lookup by name section header table:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2354
msgid "``augmentation_string_size`` (uword)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2356
msgid ""
"Set to the length of the ``augmentation_string`` value which is always a "
"multiple of 4."
msgstr ""

#: ../../../AMDGPUUsage.rst:2359
msgid "``augmentation_string`` (sequence of UTF-8 characters)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2361
msgid ""
"Contains the following UTF-8 string null padded to a multiple of 4 bytes:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2367
msgid ""
"The \"vX.Y\" specifies the major X and minor Y version number of the AMDGPU "
"extensions used in the DWARF of this index. The version number conforms to "
"[SEMVER]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:2373
msgid ""
"This is different to the DWARF Version 5 definition that requires the first "
"4 characters to be the vendor ID. But this is consistent with the other "
"augmentation strings and does allow multiple vendor contributions. However, "
"backwards compatibility may be more desirable."
msgstr ""

#: ../../../AMDGPUUsage.rst:2379
msgid "Lookup By Address Section Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:2381
msgid "See DWARF Version 5 section 6.1.2."
msgstr ""

#: ../../../AMDGPUUsage.rst:2383
msgid "For AMDGPU the lookup by address section header table:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2385 ../../../AMDGPUUsage.rst:2415
#: ../../../AMDGPUUsage.rst:2477
msgid "``address_size`` (ubyte)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2387
msgid ""
"Match the address size for the ``Global`` address space defined in :ref:"
"`amdgpu-dwarf-address-space-identifier`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2390 ../../../AMDGPUUsage.rst:2418
msgid "``segment_selector_size`` (ubyte)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2392
msgid ""
"AMDGPU does not use a segment selector so this is 0. The entries in the ``."
"debug_aranges`` do not have a segment selector."
msgstr ""

#: ../../../AMDGPUUsage.rst:2396
msgid "Line Number Information"
msgstr ""

#: ../../../AMDGPUUsage.rst:2398
msgid ""
"See DWARF Version 5 section 6.2 and :ref:`amdgpu-dwarf-line-number-"
"information`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2400
msgid ""
"AMDGPU does not use the ``isa`` state machine registers and always sets it "
"to 0. The instruction set must be obtained from the ELF file header "
"``e_flags`` field in the ``EF_AMDGPU_MACH`` bit position (see :ref:`ELF "
"Header <amdgpu-elf-header>`). See DWARF Version 5 section 6.2.2."
msgstr ""

#: ../../../AMDGPUUsage.rst:2407
msgid ""
"Should the ``isa`` state machine register be used to indicate if the code is "
"in wavefront32 or wavefront64 mode? Or used to specify the architecture ISA?"
msgstr ""

#: ../../../AMDGPUUsage.rst:2410
msgid ""
"For AMDGPU the line number program header fields have the following values "
"(see DWARF Version 5 section 6.2.4):"
msgstr ""

#: ../../../AMDGPUUsage.rst:2414 ../../../AMDGPUUsage.rst:2476
msgid ""
"Matches the address size for the ``Global`` address space defined in :ref:"
"`amdgpu-dwarf-address-space-identifier`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2418
msgid "AMDGPU does not use a segment selector so this is 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:2421
msgid "``minimum_instruction_length`` (ubyte)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2421
msgid "For GFX9-GFX10 this is 4."
msgstr ""

#: ../../../AMDGPUUsage.rst:2424
msgid "``maximum_operations_per_instruction`` (ubyte)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2424
msgid "For GFX9-GFX10 this is 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:2426
msgid ""
"Source text for online-compiled programs (for example, those compiled by the "
"OpenCL language runtime) may be embedded into the DWARF Version 5 line "
"table. See DWARF Version 5 section 6.2.4.1 which is updated by *DWARF "
"Extensions For Heterogeneous Debugging* section :ref:`DW_LNCT_LLVM_source "
"<amdgpu-dwarf-line-number-information-dw-lnct-llvm-source>`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2432
msgid ""
"The Clang option used to control source embedding in AMDGPU is defined in :"
"ref:`amdgpu-clang-debug-options-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2435
msgid "AMDGPU Clang Debug Options"
msgstr ""

#: ../../../AMDGPUUsage.rst:2439
msgid "Debug Flag"
msgstr ""

#: ../../../AMDGPUUsage.rst:2441
msgid "-g[no-]embed-source"
msgstr ""

#: ../../../AMDGPUUsage.rst:2441
msgid ""
"Enable/disable embedding source text in DWARF debug sections. Useful for "
"environments where source cannot be written to disk, such as when performing "
"online compilation."
msgstr ""

#: ../../../AMDGPUUsage.rst:2450
msgid "``-gembed-source``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2450
msgid "Enable the embedded source."
msgstr ""

#: ../../../AMDGPUUsage.rst:2453
msgid "``-gno-embed-source``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2453
msgid "Disable the embedded source."
msgstr ""

#: ../../../AMDGPUUsage.rst:2456
msgid "32-Bit and 64-Bit DWARF Formats"
msgstr ""

#: ../../../AMDGPUUsage.rst:2458
msgid ""
"See DWARF Version 5 section 7.4 and :ref:`amdgpu-dwarf-32-bit-and-64-bit-"
"dwarf-formats`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2461
msgid "For AMDGPU:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2463
msgid ""
"For the ``amdgcn`` target architecture only the 64-bit process address space "
"is supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:2466
msgid ""
"The producer can generate either 32-bit or 64-bit DWARF format. LLVM "
"generates the 32-bit DWARF format."
msgstr ""

#: ../../../AMDGPUUsage.rst:2470
msgid "Unit Headers"
msgstr ""

#: ../../../AMDGPUUsage.rst:2472
msgid ""
"For AMDGPU the following values apply for each of the unit headers described "
"in DWARF Version 5 sections 7.5.1.1, 7.5.1.2, and 7.5.1.3:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2482
msgid "Code Conventions"
msgstr ""

#: ../../../AMDGPUUsage.rst:2484
msgid ""
"This section provides code conventions used for each supported target triple "
"OS (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2488
msgid "AMDHSA"
msgstr ""

#: ../../../AMDGPUUsage.rst:2490
msgid ""
"This section provides code conventions used when the target triple OS is "
"``amdhsa`` (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2496 ../../../AMDGPUUsage.rst:11038
msgid "Code Object Metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:2498
msgid ""
"The code object metadata specifies extensible metadata associated with the "
"code objects executed on HSA [HSA]_ compatible runtimes (see :ref:`amdgpu-"
"os`). The encoding and semantics of this metadata depends on the code object "
"version; see :ref:`amdgpu-amdhsa-code-object-metadata-v2`, :ref:`amdgpu-"
"amdhsa-code-object-metadata-v3`, and :ref:`amdgpu-amdhsa-code-object-"
"metadata-v4`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2505
msgid ""
"Code object metadata is specified in a note record (see :ref:`amdgpu-note-"
"records`) and is required when the target triple OS is ``amdhsa`` (see :ref:"
"`amdgpu-target-triples`). It must contain the minimum information necessary "
"to support the HSA compatible runtime kernel queries. For example, the "
"segment sizes needed in a dispatch packet. In addition, a high-level "
"language runtime may require other information to be included. For example, "
"the AMD OpenCL runtime records kernel argument information."
msgstr ""

#: ../../../AMDGPUUsage.rst:2516
msgid "Code Object V2 Metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:2522
msgid ""
"Code object V2 metadata is specified by the ``NT_AMD_HSA_METADATA`` note "
"record (see :ref:`amdgpu-note-records-v2`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2525
msgid ""
"The metadata is specified as a YAML formatted string (see [YAML]_ and :doc:"
"`YamlIO`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2530
msgid ""
"Is the string null terminated? It probably should not if YAML allows it to "
"contain null characters, otherwise it should be."
msgstr ""

#: ../../../AMDGPUUsage.rst:2533
msgid ""
"The metadata is represented as a single YAML document comprised of the "
"mapping defined in table :ref:`amdgpu-amdhsa-code-object-metadata-map-v2-"
"table` and referenced tables."
msgstr ""

#: ../../../AMDGPUUsage.rst:2537
msgid ""
"For boolean values, the string values of ``false`` and ``true`` are used for "
"false and true respectively."
msgstr ""

#: ../../../AMDGPUUsage.rst:2540
msgid ""
"Additional information can be added to the mappings. To avoid conflicts, any "
"non-AMD key names should be prefixed by \"*vendor-name*.\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:2543
msgid "AMDHSA Code Object V2 Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2547 ../../../AMDGPUUsage.rst:2591
#: ../../../AMDGPUUsage.rst:2628 ../../../AMDGPUUsage.rst:2669
#: ../../../AMDGPUUsage.rst:2864 ../../../AMDGPUUsage.rst:2964
#: ../../../AMDGPUUsage.rst:3009 ../../../AMDGPUUsage.rst:3153
#: ../../../AMDGPUUsage.rst:3360 ../../../AMDGPUUsage.rst:11064
#: ../../../AMDGPUUsage.rst:11079 ../../../AMDGPUUsage.rst:11150
#: ../../../AMDGPUUsage.rst:11166 ../../../AMDGPUUsage.rst:11190
#: ../../../AMDGPUUsage.rst:11207 ../../../AMDGPUUsage.rst:11239
#: ../../../AMDGPUUsage.rst:11252
msgid "String Key"
msgstr ""

#: ../../../AMDGPUUsage.rst:2547 ../../../AMDGPUUsage.rst:2591
#: ../../../AMDGPUUsage.rst:2628 ../../../AMDGPUUsage.rst:2669
#: ../../../AMDGPUUsage.rst:2864 ../../../AMDGPUUsage.rst:2964
#: ../../../AMDGPUUsage.rst:3009 ../../../AMDGPUUsage.rst:3153
#: ../../../AMDGPUUsage.rst:3360 ../../../AMDGPUUsage.rst:11064
#: ../../../AMDGPUUsage.rst:11079 ../../../AMDGPUUsage.rst:11150
#: ../../../AMDGPUUsage.rst:11166 ../../../AMDGPUUsage.rst:11190
#: ../../../AMDGPUUsage.rst:11207 ../../../AMDGPUUsage.rst:11239
#: ../../../AMDGPUUsage.rst:11252 ../../../AMDGPUUsage.rst:11274
msgid "Value Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:2547 ../../../AMDGPUUsage.rst:2591
#: ../../../AMDGPUUsage.rst:2628 ../../../AMDGPUUsage.rst:2669
#: ../../../AMDGPUUsage.rst:2864 ../../../AMDGPUUsage.rst:2964
#: ../../../AMDGPUUsage.rst:3009 ../../../AMDGPUUsage.rst:3153
#: ../../../AMDGPUUsage.rst:3360 ../../../AMDGPUUsage.rst:11064
#: ../../../AMDGPUUsage.rst:11079 ../../../AMDGPUUsage.rst:11166
#: ../../../AMDGPUUsage.rst:11207
msgid "Required?"
msgstr ""

#: ../../../AMDGPUUsage.rst:2549
msgid "\"Version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2549 ../../../AMDGPUUsage.rst:2604
#: ../../../AMDGPUUsage.rst:2966 ../../../AMDGPUUsage.rst:3024
#: ../../../AMDGPUUsage.rst:3362 ../../../AMDGPUUsage.rst:11066
#: ../../../AMDGPUUsage.rst:11092 ../../../AMDGPUUsage.rst:11168
#: ../../../AMDGPUUsage.rst:11254
msgid "sequence of 2 integers"
msgstr ""

#: ../../../AMDGPUUsage.rst:2549 ../../../AMDGPUUsage.rst:2579
#: ../../../AMDGPUUsage.rst:2593 ../../../AMDGPUUsage.rst:2594
#: ../../../AMDGPUUsage.rst:2673 ../../../AMDGPUUsage.rst:2674
#: ../../../AMDGPUUsage.rst:2676 ../../../AMDGPUUsage.rst:2866
#: ../../../AMDGPUUsage.rst:2871 ../../../AMDGPUUsage.rst:2882
#: ../../../AMDGPUUsage.rst:2892 ../../../AMDGPUUsage.rst:2897
#: ../../../AMDGPUUsage.rst:2899 ../../../AMDGPUUsage.rst:2915
#: ../../../AMDGPUUsage.rst:2919 ../../../AMDGPUUsage.rst:2966
#: ../../../AMDGPUUsage.rst:2996 ../../../AMDGPUUsage.rst:3011
#: ../../../AMDGPUUsage.rst:3012 ../../../AMDGPUUsage.rst:3064
#: ../../../AMDGPUUsage.rst:3069 ../../../AMDGPUUsage.rst:3080
#: ../../../AMDGPUUsage.rst:3090 ../../../AMDGPUUsage.rst:3095
#: ../../../AMDGPUUsage.rst:3097 ../../../AMDGPUUsage.rst:3118
#: ../../../AMDGPUUsage.rst:3127 ../../../AMDGPUUsage.rst:3157
#: ../../../AMDGPUUsage.rst:3158 ../../../AMDGPUUsage.rst:3162
#: ../../../AMDGPUUsage.rst:3362 ../../../AMDGPUUsage.rst:3366
#: ../../../AMDGPUUsage.rst:11066 ../../../AMDGPUUsage.rst:11068
#: ../../../AMDGPUUsage.rst:11092 ../../../AMDGPUUsage.rst:11111
#: ../../../AMDGPUUsage.rst:11168 ../../../AMDGPUUsage.rst:11171
#: ../../../AMDGPUUsage.rst:12060 ../../../AMDGPUUsage.rst:12063
#: ../../../AMDGPUUsage.rst:12066
msgid "Required"
msgstr ""

#: ../../../AMDGPUUsage.rst:2549 ../../../AMDGPUUsage.rst:2966
#: ../../../AMDGPUUsage.rst:3362
msgid "The first integer is the major version. Currently 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:2551 ../../../AMDGPUUsage.rst:2968
msgid "The second integer is the minor version. Currently 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:2553
msgid "\"Printf\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2553 ../../../AMDGPUUsage.rst:2970
msgid "sequence of strings"
msgstr ""

#: ../../../AMDGPUUsage.rst:2553 ../../../AMDGPUUsage.rst:2970
msgid ""
"Each string is encoded information about a printf function call. The encoded "
"information is organized as fields separated by colon (':'):"
msgstr ""

#: ../../../AMDGPUUsage.rst:2558 ../../../AMDGPUUsage.rst:2975
msgid "``ID:N:S[0]:S[1]:...:S[N-1]:FormatString``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2560 ../../../AMDGPUUsage.rst:2977
msgid "where:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2564 ../../../AMDGPUUsage.rst:2981
msgid "``ID``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2563 ../../../AMDGPUUsage.rst:2980
msgid "A 32-bit integer as a unique id for each printf function call"
msgstr ""

#: ../../../AMDGPUUsage.rst:2569 ../../../AMDGPUUsage.rst:2986
msgid "``N``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2567 ../../../AMDGPUUsage.rst:2984
msgid ""
"A 32-bit integer equal to the number of arguments of printf function call "
"minus 1"
msgstr ""

#: ../../../AMDGPUUsage.rst:2574 ../../../AMDGPUUsage.rst:2991
msgid "``S[i]`` (where i = 0, 1, ... , N-1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2572 ../../../AMDGPUUsage.rst:2989
msgid ""
"32-bit integers for the size in bytes of the i-th FormatString argument of "
"the printf function call"
msgstr ""

#: ../../../AMDGPUUsage.rst:2577 ../../../AMDGPUUsage.rst:2994
msgid "FormatString"
msgstr ""

#: ../../../AMDGPUUsage.rst:2577 ../../../AMDGPUUsage.rst:2994
msgid "The format string passed to the printf function call."
msgstr ""

#: ../../../AMDGPUUsage.rst:2579
msgid "\"Kernels\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2579 ../../../AMDGPUUsage.rst:2612
msgid "sequence of mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:2579
msgid ""
"Sequence of the mappings for each kernel in the code object. See :ref:"
"`amdgpu-amdhsa-code-object-kernel-metadata-map-v2-table` for the definition "
"of the mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:2587
msgid "AMDHSA Code Object V2 Kernel Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2593 ../../../AMDGPUUsage.rst:2671
msgid "\"Name\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2593 ../../../AMDGPUUsage.rst:2594
#: ../../../AMDGPUUsage.rst:2596 ../../../AMDGPUUsage.rst:2646
#: ../../../AMDGPUUsage.rst:2652 ../../../AMDGPUUsage.rst:2671
#: ../../../AMDGPUUsage.rst:2672 ../../../AMDGPUUsage.rst:2676
#: ../../../AMDGPUUsage.rst:2768 ../../../AMDGPUUsage.rst:2778
#: ../../../AMDGPUUsage.rst:2800 ../../../AMDGPUUsage.rst:2815
#: ../../../AMDGPUUsage.rst:3011 ../../../AMDGPUUsage.rst:3012
#: ../../../AMDGPUUsage.rst:3014 ../../../AMDGPUUsage.rst:3049
#: ../../../AMDGPUUsage.rst:3055 ../../../AMDGPUUsage.rst:3155
#: ../../../AMDGPUUsage.rst:3156 ../../../AMDGPUUsage.rst:3162
#: ../../../AMDGPUUsage.rst:3254 ../../../AMDGPUUsage.rst:3263
#: ../../../AMDGPUUsage.rst:3285 ../../../AMDGPUUsage.rst:3300
#: ../../../AMDGPUUsage.rst:3366 ../../../AMDGPUUsage.rst:11081
#: ../../../AMDGPUUsage.rst:11082 ../../../AMDGPUUsage.rst:11136
#: ../../../AMDGPUUsage.rst:11209 ../../../AMDGPUUsage.rst:11262
msgid "string"
msgstr ""

#: ../../../AMDGPUUsage.rst:2593 ../../../AMDGPUUsage.rst:3011
msgid "Source name of the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:2594
msgid "\"SymbolName\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2594 ../../../AMDGPUUsage.rst:3012
msgid "Name of the kernel descriptor ELF symbol."
msgstr ""

#: ../../../AMDGPUUsage.rst:2596
msgid "\"Language\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2596 ../../../AMDGPUUsage.rst:3014
msgid "Source language of the kernel. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2599 ../../../AMDGPUUsage.rst:3017
msgid "\"OpenCL C\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2600 ../../../AMDGPUUsage.rst:3018
msgid "\"OpenCL C++\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2601 ../../../AMDGPUUsage.rst:3019
msgid "\"HCC\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2602 ../../../AMDGPUUsage.rst:3021
msgid "\"OpenMP\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2604
msgid "\"LanguageVersion\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2604 ../../../AMDGPUUsage.rst:3024
msgid "The first integer is the major version."
msgstr ""

#: ../../../AMDGPUUsage.rst:2606 ../../../AMDGPUUsage.rst:3026
msgid "The second integer is the minor version."
msgstr ""

#: ../../../AMDGPUUsage.rst:2608
msgid "\"Attrs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2608 ../../../AMDGPUUsage.rst:2616
msgid "mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:2608
msgid ""
"Mapping of kernel attributes. See :ref:`amdgpu-amdhsa-code-object-kernel-"
"attribute-metadata-map-v2-table` for the mapping definition."
msgstr ""

#: ../../../AMDGPUUsage.rst:2612
msgid "\"Args\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2612
msgid ""
"Sequence of mappings of the kernel arguments. See :ref:`amdgpu-amdhsa-code-"
"object-kernel-argument-metadata-map-v2-table` for the definition of the "
"mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:2616
msgid "\"CodeProps\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2616
msgid ""
"Mapping of properties related to the kernel code. See :ref:`amdgpu-amdhsa-"
"code-object-kernel-code-properties-metadata-map-v2-table` for the mapping "
"definition."
msgstr ""

#: ../../../AMDGPUUsage.rst:2624
msgid "AMDHSA Code Object V2 Kernel Attribute Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2630
msgid "\"ReqdWorkGroupSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2630 ../../../AMDGPUUsage.rst:2639
#: ../../../AMDGPUUsage.rst:3033 ../../../AMDGPUUsage.rst:3042
#: ../../../AMDGPUUsage.rst:11221
msgid "sequence of 3 integers"
msgstr ""

#: ../../../AMDGPUUsage.rst:2630 ../../../AMDGPUUsage.rst:3033
msgid ""
"If not 0, 0, 0 then all values must be >=1 and the dispatch work-group size "
"X, Y, Z must correspond to the specified values. Defaults to 0, 0, 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:2636 ../../../AMDGPUUsage.rst:3039
msgid "Corresponds to the OpenCL ``reqd_work_group_size`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:2639
msgid "\"WorkGroupSizeHint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2639 ../../../AMDGPUUsage.rst:3042
msgid ""
"The dispatch work-group size X, Y, Z is likely to be the specified values."
msgstr ""

#: ../../../AMDGPUUsage.rst:2643 ../../../AMDGPUUsage.rst:3046
msgid "Corresponds to the OpenCL ``work_group_size_hint`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:2646
msgid "\"VecTypeHint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2646 ../../../AMDGPUUsage.rst:3049
msgid "The name of a scalar or vector type."
msgstr ""

#: ../../../AMDGPUUsage.rst:2649 ../../../AMDGPUUsage.rst:3052
msgid "Corresponds to the OpenCL ``vec_type_hint`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:2652
msgid "\"RuntimeHandle\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2652 ../../../AMDGPUUsage.rst:3055
msgid ""
"The external symbol name associated with a kernel. OpenCL runtime allocates "
"a global buffer for the symbol and saves the kernel's address to it, which "
"is used for device side enqueueing. Only available for device side enqueued "
"kernels."
msgstr ""

#: ../../../AMDGPUUsage.rst:2665
msgid "AMDHSA Code Object V2 Kernel Argument Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2671 ../../../AMDGPUUsage.rst:3155
msgid "Kernel argument name."
msgstr ""

#: ../../../AMDGPUUsage.rst:2672
msgid "\"TypeName\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2672 ../../../AMDGPUUsage.rst:3156
msgid "Kernel argument type name."
msgstr ""

#: ../../../AMDGPUUsage.rst:2673
msgid "\"Size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2673 ../../../AMDGPUUsage.rst:2674
#: ../../../AMDGPUUsage.rst:2772 ../../../AMDGPUUsage.rst:2866
#: ../../../AMDGPUUsage.rst:2871 ../../../AMDGPUUsage.rst:2882
#: ../../../AMDGPUUsage.rst:2892 ../../../AMDGPUUsage.rst:2897
#: ../../../AMDGPUUsage.rst:2899 ../../../AMDGPUUsage.rst:2915
#: ../../../AMDGPUUsage.rst:2919 ../../../AMDGPUUsage.rst:2927
#: ../../../AMDGPUUsage.rst:2932 ../../../AMDGPUUsage.rst:3064
#: ../../../AMDGPUUsage.rst:3069 ../../../AMDGPUUsage.rst:3080
#: ../../../AMDGPUUsage.rst:3090 ../../../AMDGPUUsage.rst:3095
#: ../../../AMDGPUUsage.rst:3097 ../../../AMDGPUUsage.rst:3118
#: ../../../AMDGPUUsage.rst:3127 ../../../AMDGPUUsage.rst:3135
#: ../../../AMDGPUUsage.rst:3140 ../../../AMDGPUUsage.rst:3157
#: ../../../AMDGPUUsage.rst:3158 ../../../AMDGPUUsage.rst:3257
#: ../../../AMDGPUUsage.rst:11115 ../../../AMDGPUUsage.rst:11117
#: ../../../AMDGPUUsage.rst:11124 ../../../AMDGPUUsage.rst:11132
#: ../../../AMDGPUUsage.rst:11134 ../../../AMDGPUUsage.rst:11135
#: ../../../AMDGPUUsage.rst:11210 ../../../AMDGPUUsage.rst:11211
#: ../../../AMDGPUUsage.rst:11212 ../../../AMDGPUUsage.rst:11213
#: ../../../AMDGPUUsage.rst:11214 ../../../AMDGPUUsage.rst:11215
#: ../../../AMDGPUUsage.rst:11219 ../../../AMDGPUUsage.rst:11223
#: ../../../AMDGPUUsage.rst:11257 ../../../AMDGPUUsage.rst:11258
#: ../../../AMDGPUUsage.rst:11259 ../../../AMDGPUUsage.rst:11260
#: ../../../AMDGPUUsage.rst:11261
msgid "integer"
msgstr ""

#: ../../../AMDGPUUsage.rst:2673 ../../../AMDGPUUsage.rst:3157
msgid "Kernel argument size in bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:2674
msgid "\"Align\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2674
msgid "Kernel argument alignment in bytes. Must be a power of two."
msgstr ""

#: ../../../AMDGPUUsage.rst:2676
msgid "\"ValueKind\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2676 ../../../AMDGPUUsage.rst:3162
msgid ""
"Kernel argument kind that specifies how to set up the corresponding "
"argument. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2683
msgid "\"ByValue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2682 ../../../AMDGPUUsage.rst:3168
msgid "The argument is copied directly into the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2688
msgid "\"GlobalBuffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2686 ../../../AMDGPUUsage.rst:3172
msgid ""
"A global address space pointer to the buffer data is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2693
msgid "\"DynamicSharedPointer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2691 ../../../AMDGPUUsage.rst:3177
msgid ""
"A group address space pointer to dynamically allocated LDS is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2698
msgid "\"Sampler\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2696 ../../../AMDGPUUsage.rst:3182
msgid "A global address space pointer to a S# is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2703
msgid "\"Image\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2701 ../../../AMDGPUUsage.rst:3187
msgid "A global address space pointer to a T# is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2708
msgid "\"Pipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2706 ../../../AMDGPUUsage.rst:3192
msgid ""
"A global address space pointer to an OpenCL pipe is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2714
msgid "\"Queue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2711 ../../../AMDGPUUsage.rst:3197
msgid ""
"A global address space pointer to an OpenCL device enqueue queue is passed "
"in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2720
msgid "\"HiddenGlobalOffsetX\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2717 ../../../AMDGPUUsage.rst:3203
msgid ""
"The OpenCL grid dispatch global offset for the X dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2726
msgid "\"HiddenGlobalOffsetY\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2723 ../../../AMDGPUUsage.rst:3209
msgid ""
"The OpenCL grid dispatch global offset for the Y dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2732
msgid "\"HiddenGlobalOffsetZ\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2729 ../../../AMDGPUUsage.rst:3215
msgid ""
"The OpenCL grid dispatch global offset for the Z dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2738
msgid "\"HiddenNone\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2735 ../../../AMDGPUUsage.rst:3221
msgid ""
"An argument that is not used by the kernel. Space needs to be left for it, "
"but it does not need to be set up."
msgstr ""

#: ../../../AMDGPUUsage.rst:2743
msgid "\"HiddenPrintfBuffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2741 ../../../AMDGPUUsage.rst:3227
msgid ""
"A global address space pointer to the runtime printf buffer is passed in "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2748
msgid "\"HiddenHostcallBuffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2746 ../../../AMDGPUUsage.rst:3232
msgid ""
"A global address space pointer to the runtime hostcall buffer is passed in "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2755
msgid "\"HiddenDefaultQueue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2751 ../../../AMDGPUUsage.rst:3237
msgid ""
"A global address space pointer to the OpenCL device enqueue queue that "
"should be used by the kernel by default is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2761
msgid "\"HiddenCompletionAction\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2758 ../../../AMDGPUUsage.rst:3244
msgid ""
"A global address space pointer to help link enqueued kernels into the "
"ancestor tree for determining when the parent kernel has finished."
msgstr ""

#: ../../../AMDGPUUsage.rst:2766
msgid "\"HiddenMultiGridSyncArg\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2764 ../../../AMDGPUUsage.rst:3250
msgid ""
"A global address space pointer for multi-grid synchronization is passed in "
"the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:2768
msgid "\"ValueType\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2768 ../../../AMDGPUUsage.rst:3254
msgid ""
"Unused and deprecated. This should no longer be emitted, but is accepted for "
"compatibility."
msgstr ""

#: ../../../AMDGPUUsage.rst:2772
msgid "\"PointeeAlign\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2772
msgid ""
"Alignment in bytes of pointee type for pointer type kernel argument. Must be "
"a power of 2. Only present if \"ValueKind\" is \"DynamicSharedPointer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:2778
msgid "\"AddrSpaceQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2778
msgid ""
"Kernel argument address space qualifier. Only present if \"ValueKind\" is "
"\"GlobalBuffer\" or \"DynamicSharedPointer\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2784
msgid "\"Private\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2785
msgid "\"Global\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2786
msgid "\"Constant\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2787
msgid "\"Local\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2788
msgid "\"Generic\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2789
msgid "\"Region\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2793
msgid ""
"Is GlobalBuffer only Global or Constant? Is DynamicSharedPointer always "
"Local? Can HCC allow Generic? How can Private or Region ever happen?"
msgstr ""

#: ../../../AMDGPUUsage.rst:2800
msgid "\"AccQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2800
msgid ""
"Kernel argument access qualifier. Only present if \"ValueKind\" is \"Image\" "
"or \"Pipe\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2806 ../../../AMDGPUUsage.rst:2828
msgid "\"ReadOnly\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2807 ../../../AMDGPUUsage.rst:2829
msgid "\"WriteOnly\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2808 ../../../AMDGPUUsage.rst:2830
msgid "\"ReadWrite\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2812
msgid "Does this apply to GlobalBuffer?"
msgstr ""

#: ../../../AMDGPUUsage.rst:2815
msgid "\"ActualAccQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2815
msgid ""
"The actual memory accesses performed by the kernel on the kernel argument. "
"Only present if \"ValueKind\" is \"GlobalBuffer\", \"Image\", or \"Pipe\". "
"This may be more restrictive than indicated by \"AccQual\" to reflect what "
"the kernel actual does. If not present then the runtime must assume what is "
"implied by \"AccQual\" and \"IsConst\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2832
msgid "\"IsConst\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2832 ../../../AMDGPUUsage.rst:2837
#: ../../../AMDGPUUsage.rst:2842 ../../../AMDGPUUsage.rst:2847
#: ../../../AMDGPUUsage.rst:3317 ../../../AMDGPUUsage.rst:3322
#: ../../../AMDGPUUsage.rst:3327 ../../../AMDGPUUsage.rst:3332
#: ../../../AMDGPUUsage.rst:11119 ../../../AMDGPUUsage.rst:11224
#: ../../../AMDGPUUsage.rst:11225 ../../../AMDGPUUsage.rst:11226
#: ../../../AMDGPUUsage.rst:11227 ../../../AMDGPUUsage.rst:11228
#: ../../../AMDGPUUsage.rst:11230
msgid "boolean"
msgstr ""

#: ../../../AMDGPUUsage.rst:2832
msgid ""
"Indicates if the kernel argument is const qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:2837
msgid "\"IsRestrict\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2837
msgid ""
"Indicates if the kernel argument is restrict qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:2842
msgid "\"IsVolatile\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2842
msgid ""
"Indicates if the kernel argument is volatile qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:2847
msgid "\"IsPipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2847
msgid ""
"Indicates if the kernel argument is pipe qualified. Only present if "
"\"ValueKind\" is \"Pipe\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:2853
msgid "Can GlobalBuffer be pipe qualified?"
msgstr ""

#: ../../../AMDGPUUsage.rst:2860
msgid "AMDHSA Code Object V2 Kernel Code Properties Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2866
msgid "\"KernargSegmentSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2866 ../../../AMDGPUUsage.rst:3064
msgid ""
"The size in bytes of the kernarg segment that holds the values of the "
"arguments to the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:2871
msgid "\"GroupSegmentFixedSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2871 ../../../AMDGPUUsage.rst:3069
msgid ""
"The amount of group segment memory required by a work-group in bytes. This "
"does not include any dynamically allocated group segment memory that may be "
"added when the kernel is dispatched."
msgstr ""

#: ../../../AMDGPUUsage.rst:2882
msgid "\"PrivateSegmentFixedSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2882 ../../../AMDGPUUsage.rst:3080
msgid ""
"The amount of fixed private address space memory required for a work-item in "
"bytes. If the kernel uses a dynamic call stack then additional space must be "
"added to this value for the call stack."
msgstr ""

#: ../../../AMDGPUUsage.rst:2892
msgid "\"KernargSegmentAlign\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2892 ../../../AMDGPUUsage.rst:3090
msgid ""
"The maximum byte alignment of arguments in the kernarg segment. Must be a "
"power of 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:2897
msgid "\"WavefrontSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2897 ../../../AMDGPUUsage.rst:3095
msgid "Wavefront size. Must be a power of 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:2899
msgid "\"NumSGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2899
msgid ""
"Number of scalar registers used by a wavefront for GFX6-GFX10. This includes "
"the special SGPRs for VCC, Flat Scratch (GFX7-GFX10) and XNACK (for GFX8-"
"GFX10). It does not include the 16 SGPR added if a trap handler is enabled. "
"It is not rounded up to the allocation granularity."
msgstr ""

#: ../../../AMDGPUUsage.rst:2915
msgid "\"NumVGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2915
msgid "Number of vector registers used by each work-item for GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:2919
msgid "\"MaxFlatWorkGroupSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2919 ../../../AMDGPUUsage.rst:3127
msgid ""
"Maximum flat work-group size supported by the kernel in work-items. Must be "
">=1 and consistent with ReqdWorkGroupSize if not 0, 0, 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:2927
msgid "\"NumSpilledSGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2927 ../../../AMDGPUUsage.rst:3135
msgid ""
"Number of stores from a scalar register to a register allocator created "
"spill location."
msgstr ""

#: ../../../AMDGPUUsage.rst:2932
msgid "\"NumSpilledVGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2932 ../../../AMDGPUUsage.rst:3140
msgid ""
"Number of stores from a vector register to a register allocator created "
"spill location."
msgstr ""

#: ../../../AMDGPUUsage.rst:2942
msgid "Code Object V3 Metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:2944
msgid ""
"Code object V3 to V4 metadata is specified by the ``NT_AMDGPU_METADATA`` "
"note record (see :ref:`amdgpu-note-records-v3-v4`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2947
msgid ""
"The metadata is represented as Message Pack formatted binary data (see "
"[MsgPack]_). The top level is a Message Pack map that includes the keys "
"defined in table :ref:`amdgpu-amdhsa-code-object-metadata-map-table-v3` and "
"referenced tables."
msgstr ""

#: ../../../AMDGPUUsage.rst:2953 ../../../AMDGPUUsage.rst:11054
msgid ""
"Additional information can be added to the maps. To avoid conflicts, any key "
"names should be prefixed by \"*vendor-name*.\" where ``vendor-name`` can be "
"the name of the vendor and specific vendor tool that generates the "
"information. The prefix is abbreviated to simply \".\" when it appears "
"within a map that has been added by the same *vendor-name*."
msgstr ""

#: ../../../AMDGPUUsage.rst:2960
msgid "AMDHSA Code Object V3 Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2966 ../../../AMDGPUUsage.rst:3362
msgid "\"amdhsa.version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2970
msgid "\"amdhsa.printf\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2996
msgid "\"amdhsa.kernels\""
msgstr ""

#: ../../../AMDGPUUsage.rst:2996 ../../../AMDGPUUsage.rst:3028
#: ../../../AMDGPUUsage.rst:11068
msgid "sequence of map"
msgstr ""

#: ../../../AMDGPUUsage.rst:2996
msgid ""
"Sequence of the maps for each kernel in the code object. See :ref:`amdgpu-"
"amdhsa-code-object-kernel-metadata-map-table-v3` for the definition of the "
"keys included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:3005
msgid "AMDHSA Code Object V3 Kernel Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:3011 ../../../AMDGPUUsage.rst:3155
#: ../../../AMDGPUUsage.rst:11081
msgid "\".name\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3012
msgid "\".symbol\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3014
msgid "\".language\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3020
msgid "\"HIP\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3022
msgid "\"Assembler\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3024
msgid "\".language_version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3028
msgid "\".args\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3028
msgid ""
"Sequence of maps of the kernel arguments. See :ref:`amdgpu-amdhsa-code-"
"object-kernel-argument-metadata-map-table-v3` for the definition of the keys "
"included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:3033
msgid "\".reqd_workgroup_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3042
msgid "\".workgroup_size_hint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3049
msgid "\".vec_type_hint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3055
msgid "\".device_enqueue_symbol\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3064
msgid "\".kernarg_segment_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3069
msgid "\".group_segment_fixed_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3080
msgid "\".private_segment_fixed_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3090
msgid "\".kernarg_segment_align\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3095 ../../../AMDGPUUsage.rst:11223
msgid "\".wavefront_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3097 ../../../AMDGPUUsage.rst:11214
#: ../../../AMDGPUUsage.rst:11260
msgid "\".sgpr_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3097
msgid ""
"Number of scalar registers required by a wavefront for GFX6-GFX9. A register "
"is required if it is used explicitly, or if a higher numbered register is "
"used explicitly. This includes the special SGPRs for VCC, Flat Scratch (GFX7-"
"GFX9) and XNACK (for GFX8-GFX9). It does not include the 16 SGPR added if a "
"trap handler is enabled. It is not rounded up to the allocation granularity."
msgstr ""

#: ../../../AMDGPUUsage.rst:3118 ../../../AMDGPUUsage.rst:11213
#: ../../../AMDGPUUsage.rst:11259
msgid "\".vgpr_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3118
msgid ""
"Number of vector registers required by each work-item for GFX6-GFX9. A "
"register is required if it is used explicitly, or if a higher numbered "
"register is used explicitly."
msgstr ""

#: ../../../AMDGPUUsage.rst:3127
msgid "\".max_flat_workgroup_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3135
msgid "\".sgpr_spill_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3140
msgid "\".vgpr_spill_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3149
msgid "AMDHSA Code Object V3 Kernel Argument Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:3156
msgid "\".type_name\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3157
msgid "\".size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3158
msgid "\".offset\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3158
msgid ""
"Kernel argument offset in bytes. The offset must be a multiple of the "
"alignment required by the argument."
msgstr ""

#: ../../../AMDGPUUsage.rst:3162
msgid "\".value_kind\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3169
msgid "\"by_value\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3174
msgid "\"global_buffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3179
msgid "\"dynamic_shared_pointer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3184
msgid "\"sampler\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3189
msgid "\"image\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3194
msgid "\"pipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3200
msgid "\"queue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3206
msgid "\"hidden_global_offset_x\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3212
msgid "\"hidden_global_offset_y\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3218
msgid "\"hidden_global_offset_z\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3224
msgid "\"hidden_none\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3229
msgid "\"hidden_printf_buffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3234
msgid "\"hidden_hostcall_buffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3241
msgid "\"hidden_default_queue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3247
msgid "\"hidden_completion_action\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3252
msgid "\"hidden_multigrid_sync_arg\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3254
msgid "\".value_type\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3257
msgid "\".pointee_align\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3257
msgid ""
"Alignment in bytes of pointee type for pointer type kernel argument. Must be "
"a power of 2. Only present if \".value_kind\" is \"dynamic_shared_pointer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:3263
msgid "\".address_space\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3263
msgid ""
"Kernel argument address space qualifier. Only present if \".value_kind\" is "
"\"global_buffer\" or \"dynamic_shared_pointer\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3269
msgid "\"private\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3270
msgid "\"global\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3271
msgid "\"constant\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3272
msgid "\"local\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3273
msgid "\"generic\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3274
msgid "\"region\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3278
msgid ""
"Is \"global_buffer\" only \"global\" or \"constant\"? Is "
"\"dynamic_shared_pointer\" always \"local\"? Can HCC allow \"generic\"? How "
"can \"private\" or \"region\" ever happen?"
msgstr ""

#: ../../../AMDGPUUsage.rst:3285
msgid "\".access\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3285
msgid ""
"Kernel argument access qualifier. Only present if \".value_kind\" is "
"\"image\" or \"pipe\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3291 ../../../AMDGPUUsage.rst:3313
msgid "\"read_only\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3292 ../../../AMDGPUUsage.rst:3314
msgid "\"write_only\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3293 ../../../AMDGPUUsage.rst:3315
msgid "\"read_write\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3297
msgid "Does this apply to \"global_buffer\"?"
msgstr ""

#: ../../../AMDGPUUsage.rst:3300
msgid "\".actual_access\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3300
msgid ""
"The actual memory accesses performed by the kernel on the kernel argument. "
"Only present if \".value_kind\" is \"global_buffer\", \"image\", or "
"\"pipe\". This may be more restrictive than indicated by \".access\" to "
"reflect what the kernel actual does. If not present then the runtime must "
"assume what is implied by \".access\" and \".is_const\"      . Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3317
msgid "\".is_const\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3317
msgid ""
"Indicates if the kernel argument is const qualified. Only present if \"."
"value_kind\" is \"global_buffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:3322
msgid "\".is_restrict\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3322
msgid ""
"Indicates if the kernel argument is restrict qualified. Only present if \"."
"value_kind\" is \"global_buffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:3327
msgid "\".is_volatile\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3327
msgid ""
"Indicates if the kernel argument is volatile qualified. Only present if \"."
"value_kind\" is \"global_buffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:3332
msgid "\".is_pipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3332
msgid ""
"Indicates if the kernel argument is pipe qualified. Only present if \"."
"value_kind\" is \"pipe\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:3338
msgid "Can \"global_buffer\" be pipe qualified?"
msgstr ""

#: ../../../AMDGPUUsage.rst:3346
msgid "Code Object V4 Metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:3349
msgid ""
"Code object V4 is not the default code object version emitted by this "
"version of LLVM."
msgstr ""

#: ../../../AMDGPUUsage.rst:3352
msgid ""
"Code object V4 metadata is the same as :ref:`amdgpu-amdhsa-code-object-"
"metadata-v3` with the changes and additions defined in table :ref:`amdgpu-"
"amdhsa-code-object-metadata-map-table-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3356
msgid ""
"AMDHSA Code Object V4 Metadata Map Changes from :ref:`amdgpu-amdhsa-code-"
"object-metadata-v3`"
msgstr ""

#: ../../../AMDGPUUsage.rst:3364
msgid "The second integer is the minor version. Currently 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:3366
msgid "\"amdhsa.target\""
msgstr ""

#: ../../../AMDGPUUsage.rst:3366
msgid "The target name of the code using the syntax:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3372
msgid ""
"A canonical target ID must be used. See :ref:`amdgpu-target-triples` and :"
"ref:`amdgpu-target-id`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3380
msgid "Kernel Dispatch"
msgstr ""

#: ../../../AMDGPUUsage.rst:3382
msgid ""
"The HSA architected queuing language (AQL) defines a user space memory "
"interface that can be used to control the dispatch of kernels, in an agent "
"independent way. An agent can have zero or more AQL queues created for it "
"using an HSA compatible runtime (see :ref:`amdgpu-os`), in which AQL packets "
"(all of which are 64 bytes) can be placed. See the *HSA Platform System "
"Architecture Specification* [HSA]_ for the AQL queue mechanics and packet "
"layouts."
msgstr ""

#: ../../../AMDGPUUsage.rst:3389
msgid ""
"The packet processor of a kernel agent is responsible for detecting and "
"dispatching HSA kernels from the AQL queues associated with it. For AMD GPUs "
"the packet processor is implemented by the hardware command processor (CP), "
"asynchronous dispatch controller (ADC) and shader processor input controller "
"(SPI)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3395
msgid ""
"An HSA compatible runtime can be used to allocate an AQL queue object. It "
"uses the kernel mode driver to initialize and register the AQL queue with CP."
msgstr ""

#: ../../../AMDGPUUsage.rst:3398
msgid ""
"To dispatch a kernel the following actions are performed. This can occur in "
"the CPU host program, or from an HSA kernel executing on a GPU."
msgstr ""

#: ../../../AMDGPUUsage.rst:3401
msgid ""
"A pointer to an AQL queue for the kernel agent on which the kernel is to be "
"executed is obtained."
msgstr ""

#: ../../../AMDGPUUsage.rst:3403
msgid ""
"A pointer to the kernel descriptor (see :ref:`amdgpu-amdhsa-kernel-"
"descriptor`) of the kernel to execute is obtained. It must be for a kernel "
"that is contained in a code object that that was loaded by an HSA compatible "
"runtime on the kernel agent with which the AQL queue is associated."
msgstr ""

#: ../../../AMDGPUUsage.rst:3408
msgid ""
"Space is allocated for the kernel arguments using the HSA compatible runtime "
"allocator for a memory region with the kernarg property for the kernel agent "
"that will execute the kernel. It must be at least 16-byte aligned."
msgstr ""

#: ../../../AMDGPUUsage.rst:3411
msgid ""
"Kernel argument values are assigned to the kernel argument memory "
"allocation. The layout is defined in the *HSA Programmer's Language "
"Reference* [HSA]_. For AMDGPU the kernel execution directly accesses the "
"kernel argument memory in the same way constant memory is accessed. (Note "
"that the HSA specification allows an implementation to copy the kernel "
"argument contents to another location that is accessed by the kernel.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3417
msgid ""
"An AQL kernel dispatch packet is created on the AQL queue. The HSA "
"compatible runtime api uses 64-bit atomic operations to reserve space in the "
"AQL queue for the packet. The packet must be set up, and the final write "
"must use an atomic store release to set the packet kind to ensure the packet "
"contents are visible to the kernel agent. AQL defines a doorbell signal "
"mechanism to notify the kernel agent that the AQL queue has been updated. "
"These rules, and the layout of the AQL queue and kernel dispatch packet is "
"defined in the *HSA System Architecture Specification* [HSA]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:3425
msgid ""
"A kernel dispatch packet includes information about the actual dispatch, "
"such as grid and work-group size, together with information from the code "
"object about the kernel, such as segment sizes. The HSA compatible runtime "
"queries on the kernel symbol can be used to obtain the code object values "
"which are recorded in the :ref:`amdgpu-amdhsa-code-object-metadata`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3430
msgid ""
"CP executes micro-code and is responsible for detecting and setting up the "
"GPU to execute the wavefronts of a kernel dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:3432
msgid ""
"CP ensures that when the a wavefront starts executing the kernel machine "
"code, the scalar general purpose registers (SGPR) and vector general purpose "
"registers (VGPR) are set up as required by the machine code. The required "
"setup is defined in the :ref:`amdgpu-amdhsa-kernel-descriptor`. The initial "
"register state is defined in :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3438
msgid ""
"The prolog of the kernel machine code (see :ref:`amdgpu-amdhsa-kernel-"
"prolog`) sets up the machine state as necessary before continuing executing "
"the machine code that corresponds to the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:3441
msgid ""
"When the kernel dispatch has completed execution, CP signals the completion "
"signal specified in the kernel dispatch packet if not 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:3447
msgid "Memory Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:3449
msgid "The memory space properties are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3451
msgid "AMDHSA Memory Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:3455
msgid "Memory Space Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:3468
msgid ""
"The global and constant memory spaces both use global virtual addresses, "
"which are the same virtual address space used by the CPU. However, some "
"virtual addresses may only be accessible to the CPU, some only accessible by "
"the GPU, and some by both."
msgstr ""

#: ../../../AMDGPUUsage.rst:3473
msgid ""
"Using the constant memory space indicates that the data will not change "
"during the execution of the kernel. This allows scalar read instructions to "
"be used. The vector and scalar L1 caches are invalidated of volatile data "
"before each kernel dispatch execution to allow constant memory to change "
"values between kernel dispatches."
msgstr ""

#: ../../../AMDGPUUsage.rst:3479
msgid ""
"The local memory space uses the hardware Local Data Store (LDS) which is "
"automatically allocated when the hardware creates work-groups of wavefronts, "
"and freed when all the wavefronts of a work-group have terminated. The data "
"store (DS) instructions can be used to access it."
msgstr ""

#: ../../../AMDGPUUsage.rst:3484
msgid ""
"The private memory space uses the hardware scratch memory support. If the "
"kernel uses scratch, then the hardware allocates memory that is accessed "
"using wavefront lane dword (4 byte) interleaving. The mapping used from "
"private address to physical address is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3489
msgid ""
"``wavefront-scratch-base + (private-address * wavefront-size * 4) + "
"(wavefront-lane-id * 4)``"
msgstr ""

#: ../../../AMDGPUUsage.rst:3493
msgid ""
"There are different ways that the wavefront scratch base address is "
"determined by a wavefront (see :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`). This memory can be accessed in an interleaved manner using buffer "
"instruction with the scratch buffer descriptor and per wavefront scratch "
"offset, by the scratch instructions, or by flat instructions. If each lane "
"of a wavefront accesses the same private address, the interleaving results "
"in adjacent dwords being accessed and hence requires fewer cache lines to be "
"fetched. Multi-dword access is not supported except by flat and scratch "
"instructions in GFX9-GFX10."
msgstr ""

#: ../../../AMDGPUUsage.rst:3502
msgid ""
"The generic address space uses the hardware flat address support available "
"in GFX7-GFX10. This uses two fixed ranges of virtual addresses (the private "
"and local apertures), that are outside the range of addressible global "
"memory, to map from a flat address to a private or local address."
msgstr ""

#: ../../../AMDGPUUsage.rst:3507
msgid ""
"FLAT instructions can take a flat address and access global, private "
"(scratch) and group (LDS) memory depending in if the address is within one "
"of the aperture ranges. Flat access to scratch requires hardware aperture "
"setup and setup in the kernel prologue (see :ref:`amdgpu-amdhsa-kernel-"
"prolog-flat-scratch`). Flat access to LDS requires hardware aperture setup "
"and M0 (GFX7-GFX8) register setup (see :ref:`amdgpu-amdhsa-kernel-prolog-"
"m0`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3515
msgid ""
"To convert between a segment address and a flat address the base address of "
"the apertures address can be used. For GFX7-GFX8 these are available in the :"
"ref:`amdgpu-amdhsa-hsa-aql-queue` the address of which can be obtained with "
"Queue Ptr SGPR (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`). "
"For GFX9-GFX10 the aperture base addresses are directly available as inline "
"constant registers ``SRC_SHARED_BASE/LIMIT`` and ``SRC_PRIVATE_BASE/LIMIT``. "
"In 64 bit address mode the aperture sizes are 2^32 bytes and the base is "
"aligned to 2^32 which makes it easier to convert from flat to segment or "
"segment to flat."
msgstr ""

#: ../../../AMDGPUUsage.rst:3525
msgid "Image and Samplers"
msgstr ""

#: ../../../AMDGPUUsage.rst:3527
msgid ""
"Image and sample handles created by an HSA compatible runtime (see :ref:"
"`amdgpu-os`) are 64-bit addresses of a hardware 32-byte V# and 48 byte S# "
"object respectively. In order to support the HSA ``query_sampler`` "
"operations two extra dwords are used to store the HSA BRIG enumeration "
"values for the queries that are not trivially deducible from the S# "
"representation."
msgstr ""

#: ../../../AMDGPUUsage.rst:3534
msgid "HSA Signals"
msgstr ""

#: ../../../AMDGPUUsage.rst:3536
msgid ""
"HSA signal handles created by an HSA compatible runtime (see :ref:`amdgpu-"
"os`) are 64-bit addresses of a structure allocated in memory accessible from "
"both the CPU and GPU. The structure is defined by the runtime and subject to "
"change between releases. For example, see [AMD-ROCm-github]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:3544
msgid "HSA AQL Queue"
msgstr ""

#: ../../../AMDGPUUsage.rst:3546
msgid ""
"The HSA AQL queue structure is defined by an HSA compatible runtime (see :"
"ref:`amdgpu-os`) and subject to change between releases. For example, see "
"[AMD-ROCm-github]_. For some processors it contains fields needed to "
"implement certain language features such as the flat address aperture bases. "
"It also contains fields used by CP such as managing the allocation of "
"scratch memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:3555
msgid "Kernel Descriptor"
msgstr ""

#: ../../../AMDGPUUsage.rst:3557
msgid ""
"A kernel descriptor consists of the information needed by CP to initiate the "
"execution of a kernel, including the entry point address of the machine code "
"that implements the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:3562 ../../../AMDGPUUsage.rst:3570
msgid "Code Object V3 Kernel Descriptor"
msgstr ""

#: ../../../AMDGPUUsage.rst:3564
msgid ""
"CP microcode requires the Kernel descriptor to be allocated on 64-byte "
"alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:3567
msgid ""
"The fields used by CP for code objects before V3 also match those specified "
"in :ref:`amdgpu-amdhsa-kernel-descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3574 ../../../AMDGPUUsage.rst:3719
#: ../../../AMDGPUUsage.rst:4010 ../../../AMDGPUUsage.rst:4180
#: ../../../AMDGPUUsage.rst:4203 ../../../AMDGPUUsage.rst:4398
#: ../../../AMDGPUUsage.rst:10866
msgid "Bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3574 ../../../AMDGPUUsage.rst:3719
#: ../../../AMDGPUUsage.rst:4010 ../../../AMDGPUUsage.rst:4180
#: ../../../AMDGPUUsage.rst:4203 ../../../AMDGPUUsage.rst:4398
#: ../../../AMDGPUUsage.rst:10866
msgid "Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:3574 ../../../AMDGPUUsage.rst:3719
#: ../../../AMDGPUUsage.rst:4010 ../../../AMDGPUUsage.rst:4180
#: ../../../AMDGPUUsage.rst:4203 ../../../AMDGPUUsage.rst:4398
#: ../../../AMDGPUUsage.rst:10866
msgid "Field Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:3576
msgid "31:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:3576 ../../../AMDGPUUsage.rst:3585
#: ../../../AMDGPUUsage.rst:3593 ../../../AMDGPUUsage.rst:3623
#: ../../../AMDGPUUsage.rst:3633 ../../../AMDGPUUsage.rst:3651
#: ../../../AMDGPUUsage.rst:3658
msgid "4 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:3576
msgid "GROUP_SEGMENT_FIXED_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3576
msgid ""
"The amount of fixed local address space memory required for a work-group in "
"bytes. This does not include any dynamically allocated local address space "
"memory that may be added when the kernel is dispatched."
msgstr ""

#: ../../../AMDGPUUsage.rst:3585
msgid "63:32"
msgstr ""

#: ../../../AMDGPUUsage.rst:3585
msgid "PRIVATE_SEGMENT_FIXED_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3585
msgid ""
"The amount of fixed private address space memory required for a work-item in "
"bytes. Additional space may need to be added to this value if the call stack "
"has non-inlined function calls."
msgstr ""

#: ../../../AMDGPUUsage.rst:3593
msgid "95:64"
msgstr ""

#: ../../../AMDGPUUsage.rst:3593
msgid "KERNARG_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3593
msgid ""
"The size of the kernarg memory pointed to by the AQL dispatch packet. The "
"kernarg memory is used to pass arguments to the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:3600
msgid ""
"If the kernarg pointer in the dispatch packet is NULL then there are no "
"kernel arguments."
msgstr ""

#: ../../../AMDGPUUsage.rst:3604
msgid ""
"If the kernarg pointer in the dispatch packet is not NULL and this value is "
"0 then the kernarg memory size is unspecified."
msgstr ""

#: ../../../AMDGPUUsage.rst:3610
msgid ""
"If the kernarg pointer in the dispatch packet is not NULL and this value is "
"not 0 then the value specifies the kernarg memory size in bytes. It is "
"recommended to provide a value as it may be used by CP to optimize making "
"the kernarg memory visible to the kernel code."
msgstr ""

#: ../../../AMDGPUUsage.rst:3623
msgid "127:96"
msgstr ""

#: ../../../AMDGPUUsage.rst:3623 ../../../AMDGPUUsage.rst:3631
#: ../../../AMDGPUUsage.rst:3634 ../../../AMDGPUUsage.rst:3695
#: ../../../AMDGPUUsage.rst:3697 ../../../AMDGPUUsage.rst:3704
#: ../../../AMDGPUUsage.rst:3706 ../../../AMDGPUUsage.rst:3708
#: ../../../AMDGPUUsage.rst:3709 ../../../AMDGPUUsage.rst:3937
#: ../../../AMDGPUUsage.rst:3954 ../../../AMDGPUUsage.rst:3956
#: ../../../AMDGPUUsage.rst:3968 ../../../AMDGPUUsage.rst:3991
#: ../../../AMDGPUUsage.rst:4170 ../../../AMDGPUUsage.rst:4185
#: ../../../AMDGPUUsage.rst:4192 ../../../AMDGPUUsage.rst:4207
msgid "Reserved, must be 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:3624
msgid "191:128"
msgstr ""

#: ../../../AMDGPUUsage.rst:3624
msgid "8 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:3624
msgid "KERNEL_CODE_ENTRY_BYTE_OFFSET"
msgstr ""

#: ../../../AMDGPUUsage.rst:3624
msgid ""
"Byte offset (possibly negative) from base address of kernel descriptor to "
"kernel's entry point instruction which must be 256 byte aligned."
msgstr ""

#: ../../../AMDGPUUsage.rst:3631
msgid "351:272"
msgstr ""

#: ../../../AMDGPUUsage.rst:3631
msgid "20 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:3633
msgid "383:352"
msgstr ""

#: ../../../AMDGPUUsage.rst:3633
msgid "COMPUTE_PGM_RSRC3"
msgstr ""

#: ../../../AMDGPUUsage.rst:3633 ../../../AMDGPUUsage.rst:3696
#: ../../../AMDGPUUsage.rst:3727 ../../../AMDGPUUsage.rst:3955
#: ../../../AMDGPUUsage.rst:3967 ../../../AMDGPUUsage.rst:3990
msgid "GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:3641 ../../../AMDGPUUsage.rst:3732
#: ../../../AMDGPUUsage.rst:12066 ../../../AMDGPUUsage.rst:12102
msgid "GFX90A"
msgstr ""

#: ../../../AMDGPUUsage.rst:3636
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC3`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc3-gfx90a-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3649 ../../../AMDGPUUsage.rst:3702
#: ../../../AMDGPUUsage.rst:3774 ../../../AMDGPUUsage.rst:3965
#: ../../../AMDGPUUsage.rst:3988 ../../../AMDGPUUsage.rst:3999
#: ../../../AMDGPUUsage.rst:12042 ../../../AMDGPUUsage.rst:12106
#: ../../../AMDGPUUsage.rst:12110 ../../../AMDGPUUsage.rst:12112
msgid "GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:3644
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC3`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc3-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3651
msgid "415:384"
msgstr ""

#: ../../../AMDGPUUsage.rst:3651
msgid "COMPUTE_PGM_RSRC1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3651
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC1`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc1-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3658
msgid "447:416"
msgstr ""

#: ../../../AMDGPUUsage.rst:3658
msgid "COMPUTE_PGM_RSRC2"
msgstr ""

#: ../../../AMDGPUUsage.rst:3658
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC2`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3665
msgid "458:448"
msgstr ""

#: ../../../AMDGPUUsage.rst:3665
msgid "7 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3665
msgid "*See separate bits below.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:3665
msgid ""
"Enable the setup of the SGPR user data registers (see :ref:`amdgpu-amdhsa-"
"initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3670
msgid ""
"The total number of SGPR user data registers requested must not exceed 16 "
"and match value in ``compute_pgm_rsrc2.user_sgpr.user_sgpr_count``. Any "
"requests beyond 16 will be ignored."
msgstr ""

#: ../../../AMDGPUUsage.rst:3677
msgid ">448"
msgstr ""

#: ../../../AMDGPUUsage.rst:3677 ../../../AMDGPUUsage.rst:3683
#: ../../../AMDGPUUsage.rst:3684 ../../../AMDGPUUsage.rst:3685
#: ../../../AMDGPUUsage.rst:3686 ../../../AMDGPUUsage.rst:3687
#: ../../../AMDGPUUsage.rst:3693 ../../../AMDGPUUsage.rst:3696
#: ../../../AMDGPUUsage.rst:3704 ../../../AMDGPUUsage.rst:3705
#: ../../../AMDGPUUsage.rst:3707 ../../../AMDGPUUsage.rst:3876
#: ../../../AMDGPUUsage.rst:3885 ../../../AMDGPUUsage.rst:3896
#: ../../../AMDGPUUsage.rst:3904 ../../../AMDGPUUsage.rst:3919
#: ../../../AMDGPUUsage.rst:3928 ../../../AMDGPUUsage.rst:3936
#: ../../../AMDGPUUsage.rst:3955 ../../../AMDGPUUsage.rst:3967
#: ../../../AMDGPUUsage.rst:3990 ../../../AMDGPUUsage.rst:4012
#: ../../../AMDGPUUsage.rst:4044 ../../../AMDGPUUsage.rst:4051
#: ../../../AMDGPUUsage.rst:4059 ../../../AMDGPUUsage.rst:4067
#: ../../../AMDGPUUsage.rst:4075 ../../../AMDGPUUsage.rst:4090
#: ../../../AMDGPUUsage.rst:4106 ../../../AMDGPUUsage.rst:4146
#: ../../../AMDGPUUsage.rst:4156 ../../../AMDGPUUsage.rst:4159
#: ../../../AMDGPUUsage.rst:4161 ../../../AMDGPUUsage.rst:4163
#: ../../../AMDGPUUsage.rst:4165 ../../../AMDGPUUsage.rst:4167
#: ../../../AMDGPUUsage.rst:4170 ../../../AMDGPUUsage.rst:4187
msgid "1 bit"
msgstr ""

#: ../../../AMDGPUUsage.rst:3677
msgid "ENABLE_SGPR_PRIVATE_SEGMENT _BUFFER"
msgstr ""

#: ../../../AMDGPUUsage.rst:3677 ../../../AMDGPUUsage.rst:3687
msgid ""
"If the *Target Properties* column of :ref:`amdgpu-processor-table` specifies "
"*Architected flat scratch* then not supported and must be 0,"
msgstr ""

#: ../../../AMDGPUUsage.rst:3683
msgid ">449"
msgstr ""

#: ../../../AMDGPUUsage.rst:3683
msgid "ENABLE_SGPR_DISPATCH_PTR"
msgstr ""

#: ../../../AMDGPUUsage.rst:3684
msgid ">450"
msgstr ""

#: ../../../AMDGPUUsage.rst:3684
msgid "ENABLE_SGPR_QUEUE_PTR"
msgstr ""

#: ../../../AMDGPUUsage.rst:3685
msgid ">451"
msgstr ""

#: ../../../AMDGPUUsage.rst:3685
msgid "ENABLE_SGPR_KERNARG_SEGMENT_PTR"
msgstr ""

#: ../../../AMDGPUUsage.rst:3686
msgid ">452"
msgstr ""

#: ../../../AMDGPUUsage.rst:3686
msgid "ENABLE_SGPR_DISPATCH_ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:3687
msgid ">453"
msgstr ""

#: ../../../AMDGPUUsage.rst:3687
msgid "ENABLE_SGPR_FLAT_SCRATCH_INIT"
msgstr ""

#: ../../../AMDGPUUsage.rst:3693
msgid ">454"
msgstr ""

#: ../../../AMDGPUUsage.rst:3693
msgid "ENABLE_SGPR_PRIVATE_SEGMENT _SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3695
msgid "457:455"
msgstr ""

#: ../../../AMDGPUUsage.rst:3695 ../../../AMDGPUUsage.rst:3706
#: ../../../AMDGPUUsage.rst:3708
msgid "3 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3696
msgid "458"
msgstr ""

#: ../../../AMDGPUUsage.rst:3696
msgid "ENABLE_WAVEFRONT_SIZE32"
msgstr ""

#: ../../../AMDGPUUsage.rst:3699
msgid "If 0 execute in wavefront size 64 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3701
msgid "If 1 execute in native wavefront size 32 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3704
msgid "463:459"
msgstr ""

#: ../../../AMDGPUUsage.rst:3705
msgid "464"
msgstr ""

#: ../../../AMDGPUUsage.rst:3705
msgid "RESERVED_464"
msgstr ""

#: ../../../AMDGPUUsage.rst:3705 ../../../AMDGPUUsage.rst:3707
msgid "Deprecated, must be 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:3706
msgid "467:465"
msgstr ""

#: ../../../AMDGPUUsage.rst:3707
msgid "468"
msgstr ""

#: ../../../AMDGPUUsage.rst:3707
msgid "RESERVED_468"
msgstr ""

#: ../../../AMDGPUUsage.rst:3708
msgid "469:471"
msgstr ""

#: ../../../AMDGPUUsage.rst:3709
msgid "511:472"
msgstr ""

#: ../../../AMDGPUUsage.rst:3709
msgid "5 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:3710
msgid "**Total size 64 bytes.**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3715
msgid "compute_pgm_rsrc1 for GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:3721 ../../../AMDGPUUsage.rst:4182
msgid "5:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:3721 ../../../AMDGPUUsage.rst:4182
msgid "6 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3721
msgid "GRANULATED_WORKITEM_VGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:3721
msgid ""
"Number of vector register blocks used by each work-item; granularity is "
"device specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3727
msgid "vgprs_used 0..256"
msgstr ""

#: ../../../AMDGPUUsage.rst:3728 ../../../AMDGPUUsage.rst:3736
msgid "max(0, ceil(vgprs_used / 4) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3730
msgid "vgprs_used 0..512"
msgstr ""

#: ../../../AMDGPUUsage.rst:3731
msgid "vgprs_used = align(arch_vgprs, 4)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3732
msgid "acc_vgprs"
msgstr ""

#: ../../../AMDGPUUsage.rst:3733 ../../../AMDGPUUsage.rst:3739
msgid "max(0, ceil(vgprs_used / 8) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3735
msgid "GFX10 (wavefront size 64)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3735 ../../../AMDGPUUsage.rst:3738
msgid "max_vgpr 1..256"
msgstr ""

#: ../../../AMDGPUUsage.rst:3739
msgid "GFX10 (wavefront size 32)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3741
msgid ""
"Where vgprs_used is defined as the highest VGPR number explicitly referenced "
"plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:3746
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.VGPRS``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3749
msgid ""
"The :ref:`amdgpu-assembler` calculates this automatically for the selected "
"processor from values provided to the `.amdhsa_kernel` directive by the `."
"amdhsa_next_free_vgpr` nested directive (see :ref:`amdhsa-kernel-directives-"
"table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3760
msgid "9:6"
msgstr ""

#: ../../../AMDGPUUsage.rst:3760 ../../../AMDGPUUsage.rst:4205
msgid "4 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3760
msgid "GRANULATED_WAVEFRONT_SGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:3760
msgid ""
"Number of scalar register blocks used by a wavefront; granularity is device "
"specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3766 ../../../AMDGPUUsage.rst:3936
#: ../../../AMDGPUUsage.rst:4481
msgid "GFX6-GFX8"
msgstr ""

#: ../../../AMDGPUUsage.rst:3766 ../../../AMDGPUUsage.rst:3769
msgid "sgprs_used 0..112"
msgstr ""

#: ../../../AMDGPUUsage.rst:3767
msgid "max(0, ceil(sgprs_used / 8) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3769
msgid "GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:3770
msgid "2 * max(0, ceil(sgprs_used / 16) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3772
msgid "Reserved, must be 0. (128 SGPRs always allocated.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3776
msgid ""
"Where sgprs_used is defined as the highest SGPR number explicitly referenced "
"plus one, plus a target specific number of additional special SGPRs for VCC, "
"FLAT_SCRATCH (GFX7+) and XNACK_MASK (GFX8+), and any additional target "
"specific limitations. It does not include the 16 SGPRs added if a trap "
"handler is enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:3792
msgid ""
"The target specific limitations and special SGPR layout are defined in the "
"hardware documentation, which can be found in the :ref:`amdgpu-processors` "
"table."
msgstr ""

#: ../../../AMDGPUUsage.rst:3801
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.SGPRS``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3804
msgid ""
"The :ref:`amdgpu-assembler` calculates this automatically for the selected "
"processor from values provided to the `.amdhsa_kernel` directive by the `."
"amdhsa_next_free_sgpr` and `.amdhsa_reserve_*` nested directives (see :ref:"
"`amdhsa-kernel-directives-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3816
msgid "11:10"
msgstr ""

#: ../../../AMDGPUUsage.rst:3816 ../../../AMDGPUUsage.rst:3824
#: ../../../AMDGPUUsage.rst:3837 ../../../AMDGPUUsage.rst:3850
#: ../../../AMDGPUUsage.rst:3863 ../../../AMDGPUUsage.rst:3954
#: ../../../AMDGPUUsage.rst:4082 ../../../AMDGPUUsage.rst:4418
#: ../../../AMDGPUUsage.rst:10871
msgid "2 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:3816
msgid "PRIORITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:3816 ../../../AMDGPUUsage.rst:3876
#: ../../../AMDGPUUsage.rst:3896 ../../../AMDGPUUsage.rst:3919
#: ../../../AMDGPUUsage.rst:3928 ../../../AMDGPUUsage.rst:4044
#: ../../../AMDGPUUsage.rst:4090 ../../../AMDGPUUsage.rst:4106
#: ../../../AMDGPUUsage.rst:4125
msgid "Must be 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:3818
msgid "Start executing wavefront at the specified priority."
msgstr ""

#: ../../../AMDGPUUsage.rst:3821
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.PRIORITY``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3824
msgid "13:12"
msgstr ""

#: ../../../AMDGPUUsage.rst:3824
msgid "FLOAT_ROUND_MODE_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:3824
msgid ""
"Wavefront starts execution with specified rounding mode for single (32 bit) "
"floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:3831 ../../../AMDGPUUsage.rst:3844
msgid ""
"Floating point rounding mode values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-rounding-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3835 ../../../AMDGPUUsage.rst:3848
#: ../../../AMDGPUUsage.rst:3861 ../../../AMDGPUUsage.rst:3874
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.FLOAT_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3837
msgid "15:14"
msgstr ""

#: ../../../AMDGPUUsage.rst:3837
msgid "FLOAT_ROUND_MODE_16_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:3837
msgid ""
"Wavefront starts execution with specified rounding denorm mode for half/"
"double (16 and 64-bit) floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:3850
msgid "17:16"
msgstr ""

#: ../../../AMDGPUUsage.rst:3850
msgid "FLOAT_DENORM_MODE_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:3850
msgid ""
"Wavefront starts execution with specified denorm mode for single (32 bit)  "
"floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:3857 ../../../AMDGPUUsage.rst:3870
msgid ""
"Floating point denorm mode values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-denorm-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3863
msgid "19:18"
msgstr ""

#: ../../../AMDGPUUsage.rst:3863
msgid "FLOAT_DENORM_MODE_16_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:3863
msgid ""
"Wavefront starts execution with specified denorm mode for half/double (16 "
"and 64-bit) floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:3876
msgid "20"
msgstr ""

#: ../../../AMDGPUUsage.rst:3876
msgid "PRIV"
msgstr ""

#: ../../../AMDGPUUsage.rst:3878
msgid "Start executing wavefront in privilege trap handler mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3882
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.PRIV``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3885
msgid "21"
msgstr ""

#: ../../../AMDGPUUsage.rst:3885
msgid "ENABLE_DX10_CLAMP"
msgstr ""

#: ../../../AMDGPUUsage.rst:3885
msgid ""
"Wavefront starts execution with DX10 clamp mode enabled. Used by the vector "
"ALU to force DX10 style treatment of NaN's (when set, clamp NaN to zero, "
"otherwise pass NaN through)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3894
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.DX10_CLAMP``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3896
msgid "22"
msgstr ""

#: ../../../AMDGPUUsage.rst:3896
msgid "DEBUG_MODE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3898
msgid "Start executing wavefront in single step mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3901
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.DEBUG_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3904
msgid "23"
msgstr ""

#: ../../../AMDGPUUsage.rst:3904
msgid "ENABLE_IEEE_MODE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3904
msgid ""
"Wavefront starts execution with IEEE mode enabled. Floating point opcodes "
"that support exception flag gathering will quiet and propagate signaling-NaN "
"inputs per IEEE 754-2008. Min_dx10 and max_dx10 become IEEE 754-2008 "
"compliant due to signaling-NaN propagation and quieting."
msgstr ""

#: ../../../AMDGPUUsage.rst:3917
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.IEEE_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3919 ../../../AMDGPUUsage.rst:4146
msgid "24"
msgstr ""

#: ../../../AMDGPUUsage.rst:3919
msgid "BULKY"
msgstr ""

#: ../../../AMDGPUUsage.rst:3921
msgid "Only one work-group allowed to execute on a compute unit."
msgstr ""

#: ../../../AMDGPUUsage.rst:3925
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.BULKY``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3928 ../../../AMDGPUUsage.rst:4156
msgid "25"
msgstr ""

#: ../../../AMDGPUUsage.rst:3928
msgid "CDBG_USER"
msgstr ""

#: ../../../AMDGPUUsage.rst:3930
msgid "Flag that can be used to control debugging code."
msgstr ""

#: ../../../AMDGPUUsage.rst:3933
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.CDBG_USER``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3936 ../../../AMDGPUUsage.rst:4159
msgid "26"
msgstr ""

#: ../../../AMDGPUUsage.rst:3936
msgid "FP16_OVFL"
msgstr ""

#: ../../../AMDGPUUsage.rst:3952 ../../../AMDGPUUsage.rst:4485
#: ../../../AMDGPUUsage.rst:12100
msgid "GFX9-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:3939
msgid "Wavefront starts execution with specified fp16 overflow mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3943
msgid "If 0, fp16 overflow generates +/-INF values."
msgstr ""

#: ../../../AMDGPUUsage.rst:3945
msgid ""
"If 1, fp16 overflow that is the result of an +/-INF input value or divide by "
"0 produces a +/-INF, otherwise clamps computed overflow to +/-MAX_FP16 as "
"appropriate."
msgstr ""

#: ../../../AMDGPUUsage.rst:3952
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.FP16_OVFL``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3954
msgid "28:27"
msgstr ""

#: ../../../AMDGPUUsage.rst:3955 ../../../AMDGPUUsage.rst:4165
msgid "29"
msgstr ""

#: ../../../AMDGPUUsage.rst:3955
msgid "WGP_MODE"
msgstr ""

#: ../../../AMDGPUUsage.rst:3958
msgid "If 0 execute work-groups in CU wavefront execution mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3960
msgid "If 1 execute work-groups on in WGP wavefront execution mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:3963
msgid "See :ref:`amdgpu-amdhsa-memory-model`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3965
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.WGP_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3967 ../../../AMDGPUUsage.rst:4167
msgid "30"
msgstr ""

#: ../../../AMDGPUUsage.rst:3967
msgid "MEM_ORDERED"
msgstr ""

#: ../../../AMDGPUUsage.rst:3970
msgid "Controls the behavior of the s_waitcnt's vmcnt and vscnt counters."
msgstr ""

#: ../../../AMDGPUUsage.rst:3974
msgid ""
"If 0 vmcnt reports completion of load and atomic with return out of order "
"with sample instructions, and the vscnt reports the completion of store and "
"atomic without return in order."
msgstr ""

#: ../../../AMDGPUUsage.rst:3981
msgid ""
"If 1 vmcnt reports completion of load, atomic with return and sample "
"instructions in order, and the vscnt reports the completion of store and "
"atomic without return in order."
msgstr ""

#: ../../../AMDGPUUsage.rst:3988
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.MEM_ORDERED``."
msgstr ""

#: ../../../AMDGPUUsage.rst:3990 ../../../AMDGPUUsage.rst:4170
msgid "31"
msgstr ""

#: ../../../AMDGPUUsage.rst:3990
msgid "FWD_PROGRESS"
msgstr ""

#: ../../../AMDGPUUsage.rst:3993
msgid "If 0 execute SIMD wavefronts using oldest first policy."
msgstr ""

#: ../../../AMDGPUUsage.rst:3995
msgid ""
"If 1 execute SIMD wavefronts to ensure wavefronts will make some forward "
"progress."
msgstr ""

#: ../../../AMDGPUUsage.rst:3999
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.FWD_PROGRESS``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4001
msgid "**Total size 4 bytes**"
msgstr ""

#: ../../../AMDGPUUsage.rst:4006
msgid "compute_pgm_rsrc2 for GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:4012
msgid "ENABLE_PRIVATE_SEGMENT"
msgstr ""

#: ../../../AMDGPUUsage.rst:4012
msgid "Enable the setup of the private segment."
msgstr ""

#: ../../../AMDGPUUsage.rst:4014
msgid ""
"If the *Target Properties* column of :ref:`amdgpu-processor-table` does not "
"specify *Architected flat scratch* then enable the setup of the SGPR "
"wavefront scratch offset system register (see :ref:`amdgpu-amdhsa-initial-"
"kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4024
msgid ""
"If the *Target Properties* column of :ref:`amdgpu-processor-table` specifies "
"*Architected flat scratch* then enable the setup of the FLAT_SCRATCH "
"register pair (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4034
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.SCRATCH_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4036
msgid "5:1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4036
msgid "5 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:4036
msgid "USER_SGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:4036
msgid ""
"The total number of SGPR user data registers requested. This number must "
"match the number of user data registers enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:4042
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.USER_SGPR``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4044
msgid "ENABLE_TRAP_HANDLER"
msgstr ""

#: ../../../AMDGPUUsage.rst:4046
msgid ""
"This bit represents ``COMPUTE_PGM_RSRC2.TRAP_PRESENT``, which is set by the "
"CP if the runtime has installed a trap handler."
msgstr ""

#: ../../../AMDGPUUsage.rst:4051
msgid "ENABLE_SGPR_WORKGROUP_ID_X"
msgstr ""

#: ../../../AMDGPUUsage.rst:4051
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the X "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4057
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_X_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4059
msgid "ENABLE_SGPR_WORKGROUP_ID_Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:4059
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the Y "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4065
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_Y_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4067
msgid "ENABLE_SGPR_WORKGROUP_ID_Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:4067
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the Z "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4073
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_Z_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4075
msgid "ENABLE_SGPR_WORKGROUP_INFO"
msgstr ""

#: ../../../AMDGPUUsage.rst:4075
msgid ""
"Enable the setup of the system SGPR register for work-group information "
"(see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4080
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_SIZE_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4082
msgid "12:11"
msgstr ""

#: ../../../AMDGPUUsage.rst:4082
msgid "ENABLE_VGPR_WORKITEM_ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:4082
msgid ""
"Enable the setup of the VGPR system registers used for the work-item ID. :"
"ref:`amdgpu-amdhsa-system-vgpr-work-item-id-enumeration-values-table` "
"defines the values."
msgstr ""

#: ../../../AMDGPUUsage.rst:4088
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TIDIG_CMP_CNT``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4090
msgid "ENABLE_EXCEPTION_ADDRESS_WATCH"
msgstr ""

#: ../../../AMDGPUUsage.rst:4092
msgid ""
"Wavefront starts execution with address watch exceptions enabled which are "
"generated when L1 has witnessed a thread access an *address of interest*."
msgstr ""

#: ../../../AMDGPUUsage.rst:4100
msgid ""
"CP is responsible for filling in the address watch bit in "
"``COMPUTE_PGM_RSRC2.EXCP_EN_MSB`` according to what the runtime requests."
msgstr ""

#: ../../../AMDGPUUsage.rst:4106
msgid "ENABLE_EXCEPTION_MEMORY"
msgstr ""

#: ../../../AMDGPUUsage.rst:4108
msgid ""
"Wavefront starts execution with memory violation exceptions exceptions "
"enabled which are generated when a memory violation has occurred for this "
"wavefront from L1 or LDS (write-to-read-only-memory, mis-aligned atomic, LDS "
"address out of range, illegal address, etc.)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4120
msgid ""
"CP sets the memory violation bit in ``COMPUTE_PGM_RSRC2.EXCP_EN_MSB`` "
"according to what the runtime requests."
msgstr ""

#: ../../../AMDGPUUsage.rst:4125
msgid "23:15"
msgstr ""

#: ../../../AMDGPUUsage.rst:4125
msgid "9 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:4125
msgid "GRANULATED_LDS_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:4127
msgid ""
"CP uses the rounded value from the dispatch packet, not this value, as the "
"dispatch may contain dynamically allocated group segment memory. CP writes "
"directly to ``COMPUTE_PGM_RSRC2.LDS_SIZE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4136
msgid ""
"Amount of group segment (LDS) to allocate for each work-group. Granularity "
"is device specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4141
msgid "GFX6"
msgstr ""

#: ../../../AMDGPUUsage.rst:4142
msgid "roundup(lds-size / (64 * 4))"
msgstr ""

#: ../../../AMDGPUUsage.rst:4144 ../../../AMDGPUUsage.rst:12072
msgid "GFX7-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:4144
msgid "roundup(lds-size / (128 * 4))"
msgstr ""

#: ../../../AMDGPUUsage.rst:4146
msgid "ENABLE_EXCEPTION_IEEE_754_FP _INVALID_OPERATION"
msgstr ""

#: ../../../AMDGPUUsage.rst:4146
msgid "Wavefront starts execution with specified exceptions enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:4150
msgid ""
"Used by CP to set up ``COMPUTE_PGM_RSRC2.EXCP_EN`` (set from bits 0..6)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4154
msgid "IEEE 754 FP Invalid Operation"
msgstr ""

#: ../../../AMDGPUUsage.rst:4156
msgid "ENABLE_EXCEPTION_FP_DENORMAL _SOURCE"
msgstr ""

#: ../../../AMDGPUUsage.rst:4156
msgid "FP Denormal one or more input operands is a denormal number"
msgstr ""

#: ../../../AMDGPUUsage.rst:4159
msgid "ENABLE_EXCEPTION_IEEE_754_FP _DIVISION_BY_ZERO"
msgstr ""

#: ../../../AMDGPUUsage.rst:4159
msgid "IEEE 754 FP Division by Zero"
msgstr ""

#: ../../../AMDGPUUsage.rst:4161
msgid "27"
msgstr ""

#: ../../../AMDGPUUsage.rst:4161
msgid "ENABLE_EXCEPTION_IEEE_754_FP _OVERFLOW"
msgstr ""

#: ../../../AMDGPUUsage.rst:4161
msgid "IEEE 754 FP FP Overflow"
msgstr ""

#: ../../../AMDGPUUsage.rst:4163
msgid "28"
msgstr ""

#: ../../../AMDGPUUsage.rst:4163
msgid "ENABLE_EXCEPTION_IEEE_754_FP _UNDERFLOW"
msgstr ""

#: ../../../AMDGPUUsage.rst:4163
msgid "IEEE 754 FP Underflow"
msgstr ""

#: ../../../AMDGPUUsage.rst:4165
msgid "ENABLE_EXCEPTION_IEEE_754_FP _INEXACT"
msgstr ""

#: ../../../AMDGPUUsage.rst:4165
msgid "IEEE 754 FP Inexact"
msgstr ""

#: ../../../AMDGPUUsage.rst:4167
msgid "ENABLE_EXCEPTION_INT_DIVIDE_BY _ZERO"
msgstr ""

#: ../../../AMDGPUUsage.rst:4167
msgid "Integer Division by Zero (rcp_iflag_f32 instruction only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4171 ../../../AMDGPUUsage.rst:4194
#: ../../../AMDGPUUsage.rst:4209
msgid "**Total size 4 bytes.**"
msgstr ""

#: ../../../AMDGPUUsage.rst:4176
msgid "compute_pgm_rsrc3 for GFX90A"
msgstr ""

#: ../../../AMDGPUUsage.rst:4182
msgid "ACCUM_OFFSET"
msgstr ""

#: ../../../AMDGPUUsage.rst:4182
msgid ""
"Offset of a first AccVGPR in the unified register file. Granularity 4. Value "
"0-63. 0 - accum-offset = 4, 1 - accum-offset = 8, ..., 63 - accum-offset = "
"256."
msgstr ""

#: ../../../AMDGPUUsage.rst:4185
msgid "6:15"
msgstr ""

#: ../../../AMDGPUUsage.rst:4185 ../../../AMDGPUUsage.rst:4400
#: ../../../AMDGPUUsage.rst:4406 ../../../AMDGPUUsage.rst:4412
#: ../../../AMDGPUUsage.rst:10868 ../../../AMDGPUUsage.rst:10869
#: ../../../AMDGPUUsage.rst:10870
msgid "10 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:4187
msgid "TG_SPLIT"
msgstr ""

#: ../../../AMDGPUUsage.rst:4187
msgid "If 0 the waves of a work-group are launched in the same CU."
msgstr ""

#: ../../../AMDGPUUsage.rst:4189
msgid ""
"If 1 the waves of a work-group can be launched in different CUs. The waves "
"cannot use S_BARRIER or LDS."
msgstr ""

#: ../../../AMDGPUUsage.rst:4192
msgid "17:31"
msgstr ""

#: ../../../AMDGPUUsage.rst:4192
msgid "15 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:4199
msgid "compute_pgm_rsrc3 for GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:4205
msgid "3:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:4205
msgid "SHARED_VGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:4205
msgid ""
"Number of shared VGPRs for wavefront size 64. Granularity 8. Value 0-120. "
"compute_pgm_rsrc1.vgprs + shared_vgpr_cnt cannot exceed 64."
msgstr ""

#: ../../../AMDGPUUsage.rst:4207
msgid "31:4"
msgstr ""

#: ../../../AMDGPUUsage.rst:4207
msgid "28 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:4214
msgid "Floating Point Rounding Mode Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:4218 ../../../AMDGPUUsage.rst:4232
#: ../../../AMDGPUUsage.rst:4247
msgid "Enumeration Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:4220
msgid "FLOAT_ROUND_MODE_NEAR_EVEN"
msgstr ""

#: ../../../AMDGPUUsage.rst:4220
msgid "Round Ties To Even"
msgstr ""

#: ../../../AMDGPUUsage.rst:4221
msgid "FLOAT_ROUND_MODE_PLUS_INFINITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:4221
msgid "Round Toward +infinity"
msgstr ""

#: ../../../AMDGPUUsage.rst:4222
msgid "FLOAT_ROUND_MODE_MINUS_INFINITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:4222
msgid "Round Toward -infinity"
msgstr ""

#: ../../../AMDGPUUsage.rst:4223
msgid "FLOAT_ROUND_MODE_ZERO"
msgstr ""

#: ../../../AMDGPUUsage.rst:4223
msgid "Round Toward 0"
msgstr ""

#: ../../../AMDGPUUsage.rst:4228
msgid "Floating Point Denorm Mode Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:4234
msgid "FLOAT_DENORM_MODE_FLUSH_SRC_DST"
msgstr ""

#: ../../../AMDGPUUsage.rst:4234
msgid "Flush Source and Destination Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:4236
msgid "FLOAT_DENORM_MODE_FLUSH_DST"
msgstr ""

#: ../../../AMDGPUUsage.rst:4236
msgid "Flush Output Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:4237
msgid "FLOAT_DENORM_MODE_FLUSH_SRC"
msgstr ""

#: ../../../AMDGPUUsage.rst:4237
msgid "Flush Source Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:4238
msgid "FLOAT_DENORM_MODE_FLUSH_NONE"
msgstr ""

#: ../../../AMDGPUUsage.rst:4238
msgid "No Flush"
msgstr ""

#: ../../../AMDGPUUsage.rst:4243
msgid "System VGPR Work-Item ID Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:4249
msgid "SYSTEM_VGPR_WORKITEM_ID_X"
msgstr ""

#: ../../../AMDGPUUsage.rst:4249
msgid "Set work-item X dimension ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:4251
msgid "SYSTEM_VGPR_WORKITEM_ID_X_Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:4251
msgid "Set work-item X and Y dimensions ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:4253
msgid "SYSTEM_VGPR_WORKITEM_ID_X_Y_Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:4253
msgid "Set work-item X, Y and Z dimensions ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:4255
msgid "SYSTEM_VGPR_WORKITEM_ID_UNDEFINED"
msgstr ""

#: ../../../AMDGPUUsage.rst:4255
msgid "Undefined."
msgstr ""

#: ../../../AMDGPUUsage.rst:4261
msgid "Initial Kernel Execution State"
msgstr ""

#: ../../../AMDGPUUsage.rst:4263
msgid ""
"This section defines the register state that will be set up by the packet "
"processor prior to the start of execution of every wavefront. This is "
"limited by the constraints of the hardware controllers of CP/ADC/SPI."
msgstr ""

#: ../../../AMDGPUUsage.rst:4267
msgid ""
"The order of the SGPR registers is defined, but the compiler can specify "
"which ones are actually setup in the kernel descriptor using the "
"``enable_sgpr_*`` bit fields (see :ref:`amdgpu-amdhsa-kernel-descriptor`). "
"The register numbers used for enabled registers are dense starting at SGPR0: "
"the first enabled register is SGPR0, the next enabled register is SGPR1 "
"etc.; disabled registers do not have an SGPR number."
msgstr ""

#: ../../../AMDGPUUsage.rst:4274
msgid ""
"The initial SGPRs comprise up to 16 User SRGPs that are set by CP and apply "
"to all wavefronts of the grid. It is possible to specify more than 16 User "
"SGPRs using the ``enable_sgpr_*`` bit fields, in which case only the first "
"16 are actually initialized. These are then immediately followed by the "
"System SGPRs that are set up by ADC/SPI and can have different values for "
"each wavefront of the grid dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:4281
msgid ""
"SGPR register initial state is defined in :ref:`amdgpu-amdhsa-sgpr-register-"
"set-up-order-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4284
msgid "SGPR Register Set Up Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:4288
msgid "SGPR Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:4288 ../../../AMDGPUUsage.rst:4377
msgid "Name (kernel descriptor enable field)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4288
msgid "Number of SGPRs"
msgstr ""

#: ../../../AMDGPUUsage.rst:4292 ../../../AMDGPUUsage.rst:4381
msgid "First"
msgstr ""

#: ../../../AMDGPUUsage.rst:4292
msgid "Private Segment Buffer (enable_sgpr_private _segment_buffer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4292
msgid "See :ref:`amdgpu-amdhsa-kernel-prolog-private-segment-buffer`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4295 ../../../AMDGPUUsage.rst:4298
#: ../../../AMDGPUUsage.rst:4302 ../../../AMDGPUUsage.rst:4311
#: ../../../AMDGPUUsage.rst:4314 ../../../AMDGPUUsage.rst:4317
#: ../../../AMDGPUUsage.rst:4337 ../../../AMDGPUUsage.rst:4340
#: ../../../AMDGPUUsage.rst:4343 ../../../AMDGPUUsage.rst:4346
#: ../../../AMDGPUUsage.rst:4349 ../../../AMDGPUUsage.rst:4384
#: ../../../AMDGPUUsage.rst:4387
msgid "then"
msgstr ""

#: ../../../AMDGPUUsage.rst:4295
msgid "Dispatch Ptr (enable_sgpr_dispatch_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4295
msgid ""
"64-bit address of AQL dispatch packet for kernel dispatch actually executing."
msgstr ""

#: ../../../AMDGPUUsage.rst:4298
msgid "Queue Ptr (enable_sgpr_queue_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4298
msgid ""
"64-bit address of amd_queue_t object for AQL queue on which the dispatch "
"packet was queued."
msgstr ""

#: ../../../AMDGPUUsage.rst:4302
msgid "Kernarg Segment Ptr (enable_sgpr_kernarg _segment_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4302
msgid ""
"64-bit address of Kernarg segment. This is directly copied from the "
"kernarg_address in the kernel dispatch packet."
msgstr ""

#: ../../../AMDGPUUsage.rst:4308 ../../../AMDGPUUsage.rst:4326
msgid ""
"Having CP load it once avoids loading it at the beginning of every wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:4311
msgid "Dispatch Id (enable_sgpr_dispatch_id)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4311
msgid "64-bit Dispatch ID of the dispatch packet being executed."
msgstr ""

#: ../../../AMDGPUUsage.rst:4314
msgid "Flat Scratch Init (enable_sgpr_flat_scratch _init)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4314
msgid "See :ref:`amdgpu-amdhsa-kernel-prolog-flat-scratch`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4317
msgid "Private Segment Size (enable_sgpr_private _segment_size)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4317
msgid ""
"The 32-bit byte size of a single work-item's memory allocation. This is the "
"value from the kernel dispatch packet Private Segment Byte Size rounded up "
"by CP to a multiple of DWORD."
msgstr ""

#: ../../../AMDGPUUsage.rst:4330
msgid ""
"This is not used for GFX7-GFX8 since it is the same value as the second SGPR "
"of Flat Scratch Init. However, it may be needed for GFX9-GFX10 which changes "
"the meaning of the Flat Scratch Init value."
msgstr ""

#: ../../../AMDGPUUsage.rst:4337
msgid "Work-Group Id X (enable_sgpr_workgroup_id _X)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4337
msgid "32-bit work-group id in X dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:4340
msgid "Work-Group Id Y (enable_sgpr_workgroup_id _Y)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4340
msgid "32-bit work-group id in Y dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:4343
msgid "Work-Group Id Z (enable_sgpr_workgroup_id _Z)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4343
msgid "32-bit work-group id in Z dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:4346
msgid "Work-Group Info (enable_sgpr_workgroup _info)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4346
msgid ""
"{first_wavefront, 14'b0000, ordered_append_term[10:0], "
"threadgroup_size_in_wavefronts[5:0]}"
msgstr ""

#: ../../../AMDGPUUsage.rst:4349
msgid ""
"Scratch Wavefront Offset (enable_sgpr_private _segment_wavefront_offset)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4349
msgid ""
"See :ref:`amdgpu-amdhsa-kernel-prolog-flat-scratch`. and :ref:`amdgpu-amdhsa-"
"kernel-prolog-private-segment-buffer`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4355
msgid ""
"The order of the VGPR registers is defined, but the compiler can specify "
"which ones are actually setup in the kernel descriptor using the "
"``enable_vgpr*`` bit fields (see :ref:`amdgpu-amdhsa-kernel-descriptor`). "
"The register numbers used for enabled registers are dense starting at VGPR0: "
"the first enabled register is VGPR0, the next enabled register is VGPR1 "
"etc.; disabled registers do not have a VGPR number."
msgstr ""

#: ../../../AMDGPUUsage.rst:4362
msgid "There are different methods used for the VGPR initial state:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4364
msgid ""
"Unless the *Target Properties* column of :ref:`amdgpu-processor-table` "
"specifies otherwise, a separate VGPR register is used per work-item ID. The "
"VGPR register initial state for this method is defined in :ref:`amdgpu-"
"amdhsa-vgpr-register-set-up-order-for-unpacked-work-item-id-method-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4368
msgid ""
"If *Target Properties* column of :ref:`amdgpu-processor-table` specifies "
"*Packed work-item IDs*, the initial value of VGPR0 register is used for all "
"work-item IDs. The register layout for this method is defined in :ref:"
"`amdgpu-amdhsa-register-layout-for-packed-work-item-id-method-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4373
msgid "VGPR Register Set Up Order for Unpacked Work-Item ID Method"
msgstr ""

#: ../../../AMDGPUUsage.rst:4377
msgid "VGPR Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:4377
msgid "Number of VGPRs"
msgstr ""

#: ../../../AMDGPUUsage.rst:4381
msgid "Work-Item Id X (Always initialized)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4381
msgid "32-bit work-item id in X dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:4384
msgid "Work-Item Id Y (enable_vgpr_workitem_id > 0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4384
msgid "32-bit work-item id in Y dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:4387
msgid "Work-Item Id Z (enable_vgpr_workitem_id > 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4387
msgid "32-bit work-item id in Z dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:4394
msgid "Register Layout for Packed Work-Item ID Method"
msgstr ""

#: ../../../AMDGPUUsage.rst:4400
msgid "0:9"
msgstr ""

#: ../../../AMDGPUUsage.rst:4400
msgid "Work-Item Id X"
msgstr ""

#: ../../../AMDGPUUsage.rst:4400
msgid "Work-item id in X dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:4404
msgid "Always initialized."
msgstr ""

#: ../../../AMDGPUUsage.rst:4406
msgid "10:19"
msgstr ""

#: ../../../AMDGPUUsage.rst:4406
msgid "Work-Item Id Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:4406
msgid "Work-item id in Y dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:4410
msgid "Initialized if enable_vgpr_workitem_id > 0, otherwise set to 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:4412
msgid "20:29"
msgstr ""

#: ../../../AMDGPUUsage.rst:4412
msgid "Work-Item Id Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:4412
msgid "Work-item id in Z dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:4416
msgid "Initialized if enable_vgpr_workitem_id > 1, otherwise set to 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:4418
msgid "30:31"
msgstr ""

#: ../../../AMDGPUUsage.rst:4418
msgid "Reserved, set to 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:4421
msgid "The setting of registers is done by GPU CP/ADC/SPI hardware as follows:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4423
msgid ""
"SGPRs before the Work-Group Ids are set by CP using the 16 User Data "
"registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:4425
msgid ""
"Work-group Id registers X, Y, Z are set by ADC which supports any "
"combination including none."
msgstr ""

#: ../../../AMDGPUUsage.rst:4427
msgid ""
"Scratch Wavefront Offset is set by SPI in a per wavefront basis which is why "
"its value cannot be included with the flat scratch init value which is per "
"queue (see :ref:`amdgpu-amdhsa-kernel-prolog-flat-scratch`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4430
msgid ""
"The VGPRs are set by SPI which only supports specifying either (X), (X, Y) "
"or (X, Y, Z)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4432
msgid ""
"Flat Scratch register pair initialization is described in :ref:`amdgpu-"
"amdhsa-kernel-prolog-flat-scratch`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4435
msgid ""
"The global segment can be accessed either using buffer instructions (GFX6 "
"which has V# 64-bit address support), flat instructions (GFX7-GFX10), or "
"global instructions (GFX9-GFX10)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4439
msgid ""
"If buffer operations are used, then the compiler can generate a V# with the "
"following properties:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4442
msgid "base address of 0"
msgstr ""

#: ../../../AMDGPUUsage.rst:4443
msgid "no swizzle"
msgstr ""

#: ../../../AMDGPUUsage.rst:4444
msgid "ATC: 1 if IOMMU present (such as APU)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4445
msgid "ptr64: 1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4446
msgid ""
"MTYPE set to support memory coherence that matches the runtime (such as CC "
"for APU and NC for dGPU)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4452
msgid "Kernel Prolog"
msgstr ""

#: ../../../AMDGPUUsage.rst:4454
msgid ""
"The compiler performs initialization in the kernel prologue depending on the "
"target and information about things like stack usage in the kernel and "
"called functions. Some of this initialization requires the compiler to "
"request certain User and System SGPRs be present in the :ref:`amdgpu-amdhsa-"
"initial-kernel-execution-state` via the :ref:`amdgpu-amdhsa-kernel-"
"descriptor`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4464
msgid "CFI"
msgstr ""

#: ../../../AMDGPUUsage.rst:4466
msgid "The CFI return address is undefined."
msgstr ""

#: ../../../AMDGPUUsage.rst:4468
msgid ""
"The CFI CFA is defined using an expression which evaluates to a location "
"description that comprises one memory location description for the "
"``DW_ASPACE_AMDGPU_private_lane`` address space address ``0``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4475
msgid "M0"
msgstr ""

#: ../../../AMDGPUUsage.rst:4478
msgid ""
"The M0 register must be initialized with a value at least the total LDS size "
"if the kernel may access LDS via DS or flat operations. Total LDS size is "
"available in dispatch packet. For M0, it is also possible to use maximum "
"possible value of LDS for given target (0x7FFF for GFX6 and 0xFFFF for GFX7-"
"GFX8)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4484
msgid ""
"The M0 register is not used for range checking LDS accesses and so does not "
"need to be initialized in the prolog."
msgstr ""

#: ../../../AMDGPUUsage.rst:4490
msgid "Stack Pointer"
msgstr ""

#: ../../../AMDGPUUsage.rst:4492
msgid ""
"If the kernel has function calls it must set up the ABI stack pointer "
"described in :ref:`amdgpu-amdhsa-function-call-convention-non-kernel-"
"functions` by setting SGPR32 to the unswizzled scratch offset of the address "
"past the last local allocation."
msgstr ""

#: ../../../AMDGPUUsage.rst:4500
msgid "Frame Pointer"
msgstr ""

#: ../../../AMDGPUUsage.rst:4502
msgid ""
"If the kernel needs a frame pointer for the reasons defined in "
"``SIFrameLowering`` then SGPR33 is used and is always set to ``0`` in the "
"kernel prolog. If a frame pointer is not required then all uses of the frame "
"pointer are replaced with immediate ``0`` offsets."
msgstr ""

#: ../../../AMDGPUUsage.rst:4510
msgid "Flat Scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:4512
msgid "There are different methods used for initializing flat scratch:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4514
msgid ""
"If the *Target Properties* column of :ref:`amdgpu-processor-table` specifies "
"*Does not support generic address space*:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4517
msgid ""
"Flat scratch is not supported and there is no flat scratch register pair."
msgstr ""

#: ../../../AMDGPUUsage.rst:4519
msgid ""
"If the *Target Properties* column of :ref:`amdgpu-processor-table` specifies "
"*Offset flat scratch*:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4522
msgid ""
"If the kernel or any function it calls may use flat operations to access "
"scratch memory, the prolog code must set up the FLAT_SCRATCH register pair "
"(FLAT_SCRATCH_LO/FLAT_SCRATCH_HI). Initialization uses Flat Scratch Init and "
"Scratch Wavefront Offset SGPR registers (see :ref:`amdgpu-amdhsa-initial-"
"kernel-execution-state`):"
msgstr ""

#: ../../../AMDGPUUsage.rst:4528
msgid ""
"The low word of Flat Scratch Init is the 32-bit byte offset from "
"``SH_HIDDEN_PRIVATE_BASE_VIMID`` to the base of scratch backing memory being "
"managed by SPI for the queue executing the kernel dispatch. This is the same "
"value used in the Scratch Segment Buffer V# base address."
msgstr ""

#: ../../../AMDGPUUsage.rst:4533
msgid ""
"CP obtains this from the runtime. (The Scratch Segment Buffer base address "
"is ``SH_HIDDEN_PRIVATE_BASE_VIMID`` plus this offset.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4536
msgid ""
"The prolog must add the value of Scratch Wavefront Offset to get the "
"wavefront's byte scratch backing memory offset from "
"``SH_HIDDEN_PRIVATE_BASE_VIMID``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4540
msgid ""
"The Scratch Wavefront Offset must also be used as an offset with Private "
"segment address when using the Scratch Segment Buffer."
msgstr ""

#: ../../../AMDGPUUsage.rst:4543
msgid ""
"Since FLAT_SCRATCH_LO is in units of 256 bytes, the offset must be right "
"shifted by 8 before moving into FLAT_SCRATCH_HI."
msgstr ""

#: ../../../AMDGPUUsage.rst:4546
msgid ""
"FLAT_SCRATCH_HI corresponds to SGPRn-4 on GFX7, and SGPRn-6 on GFX8 (where "
"SGPRn is the highest numbered SGPR allocated to the wavefront). "
"FLAT_SCRATCH_HI is multiplied by 256 (as it is in units of 256 bytes) and "
"added to ``SH_HIDDEN_PRIVATE_BASE_VIMID`` to calculate the per wavefront "
"FLAT SCRATCH BASE in flat memory instructions that access the scratch "
"aperture."
msgstr ""

#: ../../../AMDGPUUsage.rst:4552
msgid ""
"The second word of Flat Scratch Init is 32-bit byte size of a single work-"
"items scratch memory usage."
msgstr ""

#: ../../../AMDGPUUsage.rst:4555
msgid ""
"CP obtains this from the runtime, and it is always a multiple of DWORD. CP "
"checks that the value in the kernel dispatch packet Private Segment Byte "
"Size is not larger and requests the runtime to increase the queue's scratch "
"size if necessary."
msgstr ""

#: ../../../AMDGPUUsage.rst:4560
msgid ""
"CP directly loads from the kernel dispatch packet Private Segment Byte Size "
"field and rounds up to a multiple of DWORD. Having CP load it once avoids "
"loading it at the beginning of every wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:4564
msgid ""
"The kernel prolog code must move it to FLAT_SCRATCH_LO which is SGPRn-3 on "
"GFX7 and SGPRn-5 on GFX8. FLAT_SCRATCH_LO is used as the FLAT SCRATCH SIZE "
"in flat memory instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:4568
msgid ""
"If the *Target Properties* column of :ref:`amdgpu-processor-table` specifies "
"*Absolute flat scratch*:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4571
msgid ""
"If the kernel or any function it calls may use flat operations to access "
"scratch memory, the prolog code must set up the FLAT_SCRATCH register pair "
"(FLAT_SCRATCH_LO/FLAT_SCRATCH_HI which are in SGPRn-4/SGPRn-3). "
"Initialization uses Flat Scratch Init and Scratch Wavefront Offset SGPR "
"registers (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`):"
msgstr ""

#: ../../../AMDGPUUsage.rst:4577
msgid ""
"The Flat Scratch Init is the 64-bit address of the base of scratch backing "
"memory being managed by SPI for the queue executing the kernel dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:4580
msgid "CP obtains this from the runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:4582
msgid ""
"The kernel prolog must add the value of the wave's Scratch Wavefront Offset "
"and move the result as a 64-bit value to the FLAT_SCRATCH SGPR register pair "
"which is SGPRn-6 and SGPRn-5. It is used as the FLAT SCRATCH BASE in flat "
"memory instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:4587
msgid ""
"The Scratch Wavefront Offset must also be used as an offset with Private "
"segment address when using the Scratch Segment Buffer (see :ref:`amdgpu-"
"amdhsa-kernel-prolog-private-segment-buffer`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4591
msgid ""
"If the *Target Properties* column of :ref:`amdgpu-processor-table` specifies "
"*Architected flat scratch*:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4594
msgid ""
"If ENABLE_PRIVATE_SEGMENT is enabled in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table` then the FLAT_SCRATCH register pair will "
"be initialized to the 64-bit address of the base of scratch backing memory "
"being managed by SPI for the queue executing the kernel dispatch plus the "
"value of the wave's Scratch Wavefront Offset for use as the flat scratch "
"base in flat memory instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:4604
msgid "Private Segment Buffer"
msgstr ""

#: ../../../AMDGPUUsage.rst:4606
msgid ""
"If the *Target Properties* column of :ref:`amdgpu-processor-table` specifies "
"*Architected flat scratch* then a Private Segment Buffer is not supported. "
"Instead the flat SCRATCH instructions are used."
msgstr ""

#: ../../../AMDGPUUsage.rst:4610
msgid ""
"Otherwise, Private Segment Buffer SGPR register is used to initialize 4 "
"SGPRs that are used as a V# to access scratch. CP uses the value provided by "
"the runtime. It is used, together with Scratch Wavefront Offset as an "
"offset, to access the private memory space using a segment address. See :ref:"
"`amdgpu-amdhsa-initial-kernel-execution-state`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4616
msgid ""
"The scratch V# is a four-aligned SGPR and always selected for the kernel as "
"follows:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4619
msgid ""
"If it is known during instruction selection that there is stack usage, "
"SGPR0-3 is reserved for use as the scratch V#.  Stack usage is assumed if "
"optimizations are disabled (``-O0``), if stack objects already exist (for "
"locals, etc.), or if there are any function calls."
msgstr ""

#: ../../../AMDGPUUsage.rst:4624
msgid ""
"Otherwise, four high numbered SGPRs beginning at a four-aligned SGPR index "
"are reserved for the tentative scratch V#. These will be used if it is "
"determined that spilling is needed."
msgstr ""

#: ../../../AMDGPUUsage.rst:4628
msgid ""
"If no use is made of the tentative scratch V#, then it is unreserved, and "
"the register count is determined ignoring it."
msgstr ""

#: ../../../AMDGPUUsage.rst:4630
msgid ""
"If use is made of the tentative scratch V#, then its register numbers are "
"shifted to the first four-aligned SGPR index after the highest one allocated "
"by the register allocator, and all uses are updated. The register count "
"includes them in the shifted location."
msgstr ""

#: ../../../AMDGPUUsage.rst:4634
msgid ""
"In either case, if the processor has the SGPR allocation bug, the tentative "
"allocation is not shifted or unreserved in order to ensure the register "
"count is higher to workaround the bug."
msgstr ""

#: ../../../AMDGPUUsage.rst:4640
msgid ""
"This approach of using a tentative scratch V# and shifting the register "
"numbers if used avoids having to perform register allocation a second time "
"if the tentative V# is eliminated. This is more efficient and avoids the "
"problem that the second register allocation may perform spilling which will "
"fail as there is no longer a scratch V#."
msgstr ""

#: ../../../AMDGPUUsage.rst:4646
msgid ""
"When the kernel prolog code is being emitted it is known whether the scratch "
"V# described above is actually used. If it is, the prolog code must set it "
"up by copying the Private Segment Buffer to the scratch V# registers and "
"then adding the Private Segment Wavefront Offset to the queue base address "
"in the V#. The result is a V# with a base address pointing to the beginning "
"of the wavefront scratch backing memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:4653
msgid ""
"The Private Segment Buffer is always requested, but the Private Segment "
"Wavefront Offset is only requested if it is used (see :ref:`amdgpu-amdhsa-"
"initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4660
msgid "Memory Model"
msgstr ""

#: ../../../AMDGPUUsage.rst:4662
msgid ""
"This section describes the mapping of the LLVM memory model onto AMDGPU "
"machine code (see :ref:`memmodel`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4665
msgid ""
"The AMDGPU backend supports the memory synchronization scopes specified in :"
"ref:`amdgpu-memory-scopes`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4668
msgid ""
"The code sequences used to implement the memory model specify the order of "
"instructions that a single thread must execute. The ``s_waitcnt`` and cache "
"management instructions such as ``buffer_wbinvl1_vol`` are defined with "
"respect to other memory instructions executed by the same thread. This "
"allows them to be moved earlier or later which can allow them to be combined "
"with other instances of the same instruction, or hoisted/sunk out of loops "
"to improve performance. Only the instructions related to the memory model "
"are given; additional ``s_waitcnt`` instructions are required to ensure "
"registers are defined before being used. These may be able to be combined "
"with the memory model ``s_waitcnt`` instructions as described above."
msgstr ""

#: ../../../AMDGPUUsage.rst:4679
msgid "The AMDGPU backend supports the following memory models:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4682
msgid "HSA Memory Model [HSA]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:4682
msgid ""
"The HSA memory model uses a single happens-before relation for all address "
"spaces (see :ref:`amdgpu-address-spaces`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4695
msgid "OpenCL Memory Model [OpenCL]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:4685
msgid ""
"The OpenCL memory model which has separate happens-before relations for the "
"global and local address spaces. Only a fence specifying both global and "
"local address space, and seq_cst instructions join the relationships. Since "
"the LLVM ``memfence`` instruction does not allow an address space to be "
"specified the OpenCL fence has to conservatively assume both local and "
"global address space was specified. However, optimizations can often be done "
"to eliminate the additional ``s_waitcnt`` instructions when there are no "
"intervening memory instructions which access the corresponding address "
"space. The code sequences in the table indicate what can be omitted for the "
"OpenCL memory. The target triple environment is used to determine if the "
"source language is OpenCL (see :ref:`amdgpu-opencl`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4697
msgid ""
"``ds/flat_load/store/atomic`` instructions to local memory are termed LDS "
"operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:4700
msgid ""
"``buffer/global/flat_load/store/atomic`` instructions to global memory are "
"termed vector memory operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:4703
msgid ""
"Private address space uses ``buffer_load/store`` using the scratch V# (GFX6-"
"GFX8), or ``scratch_load/store`` (GFX9-GFX10). Since only a single thread is "
"accessing the memory, atomic memory orderings are not meaningful, and all "
"accesses are treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:4708
msgid ""
"Constant address space uses ``buffer/global_load`` instructions (or "
"equivalent scalar memory instructions). Since the constant address space "
"contents do not change during the execution of a kernel dispatch it is not "
"legal to perform stores, and atomic memory orderings are not meaningful, and "
"all accesses are treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:4714
msgid ""
"A memory synchronization scope wider than work-group is not meaningful for "
"the group (LDS) address space and is treated as work-group."
msgstr ""

#: ../../../AMDGPUUsage.rst:4717
msgid ""
"The memory model does not support the region address space which is treated "
"as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:4720
msgid ""
"Acquire memory ordering is not meaningful on store atomic instructions and "
"is treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:4723
msgid ""
"Release memory ordering is not meaningful on load atomic instructions and is "
"treated a non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:4726
msgid ""
"Acquire-release memory ordering is not meaningful on load or store atomic "
"instructions and is treated as acquire and release respectively."
msgstr ""

#: ../../../AMDGPUUsage.rst:4729
msgid ""
"The memory order also adds the single thread optimization constraints "
"defined in table :ref:`amdgpu-amdhsa-memory-model-single-thread-optimization-"
"constraints-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4733
msgid "AMDHSA Memory Model Single Thread Optimization Constraints"
msgstr ""

#: ../../../AMDGPUUsage.rst:4737
msgid "LLVM Memory"
msgstr ""

#: ../../../AMDGPUUsage.rst:4737
msgid "Optimization Constraints"
msgstr ""

#: ../../../AMDGPUUsage.rst:4738
msgid "Ordering"
msgstr ""

#: ../../../AMDGPUUsage.rst:4740 ../../../AMDGPUUsage.rst:4931
#: ../../../AMDGPUUsage.rst:4932 ../../../AMDGPUUsage.rst:4933
#: ../../../AMDGPUUsage.rst:6237 ../../../AMDGPUUsage.rst:6238
#: ../../../AMDGPUUsage.rst:6239 ../../../AMDGPUUsage.rst:8621
#: ../../../AMDGPUUsage.rst:8622 ../../../AMDGPUUsage.rst:8623
msgid "unordered"
msgstr ""

#: ../../../AMDGPUUsage.rst:4741 ../../../AMDGPUUsage.rst:4936
#: ../../../AMDGPUUsage.rst:4939 ../../../AMDGPUUsage.rst:4941
#: ../../../AMDGPUUsage.rst:4946 ../../../AMDGPUUsage.rst:4949
#: ../../../AMDGPUUsage.rst:4954 ../../../AMDGPUUsage.rst:6242
#: ../../../AMDGPUUsage.rst:6244 ../../../AMDGPUUsage.rst:6250
#: ../../../AMDGPUUsage.rst:6255 ../../../AMDGPUUsage.rst:6257
#: ../../../AMDGPUUsage.rst:6259 ../../../AMDGPUUsage.rst:6263
#: ../../../AMDGPUUsage.rst:6265 ../../../AMDGPUUsage.rst:6270
#: ../../../AMDGPUUsage.rst:6274 ../../../AMDGPUUsage.rst:6276
#: ../../../AMDGPUUsage.rst:8626 ../../../AMDGPUUsage.rst:8628
#: ../../../AMDGPUUsage.rst:8634 ../../../AMDGPUUsage.rst:8637
#: ../../../AMDGPUUsage.rst:8639 ../../../AMDGPUUsage.rst:8644
#: ../../../AMDGPUUsage.rst:8647 ../../../AMDGPUUsage.rst:8652
msgid "monotonic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4742 ../../../AMDGPUUsage.rst:4959
#: ../../../AMDGPUUsage.rst:4962 ../../../AMDGPUUsage.rst:4963
#: ../../../AMDGPUUsage.rst:4980 ../../../AMDGPUUsage.rst:5004
#: ../../../AMDGPUUsage.rst:5030 ../../../AMDGPUUsage.rst:5033
#: ../../../AMDGPUUsage.rst:5034 ../../../AMDGPUUsage.rst:5051
#: ../../../AMDGPUUsage.rst:5075 ../../../AMDGPUUsage.rst:5102
#: ../../../AMDGPUUsage.rst:5104 ../../../AMDGPUUsage.rst:5148
#: ../../../AMDGPUUsage.rst:6283 ../../../AMDGPUUsage.rst:6286
#: ../../../AMDGPUUsage.rst:6313 ../../../AMDGPUUsage.rst:6334
#: ../../../AMDGPUUsage.rst:6369 ../../../AMDGPUUsage.rst:6393
#: ../../../AMDGPUUsage.rst:6423 ../../../AMDGPUUsage.rst:6451
#: ../../../AMDGPUUsage.rst:6486 ../../../AMDGPUUsage.rst:6488
#: ../../../AMDGPUUsage.rst:6493 ../../../AMDGPUUsage.rst:6519
#: ../../../AMDGPUUsage.rst:6540 ../../../AMDGPUUsage.rst:6572
#: ../../../AMDGPUUsage.rst:6596 ../../../AMDGPUUsage.rst:6626
#: ../../../AMDGPUUsage.rst:6655 ../../../AMDGPUUsage.rst:6691
#: ../../../AMDGPUUsage.rst:6693 ../../../AMDGPUUsage.rst:6771
#: ../../../AMDGPUUsage.rst:6849 ../../../AMDGPUUsage.rst:8657
#: ../../../AMDGPUUsage.rst:8660 ../../../AMDGPUUsage.rst:8686
#: ../../../AMDGPUUsage.rst:8713 ../../../AMDGPUUsage.rst:8748
#: ../../../AMDGPUUsage.rst:8773 ../../../AMDGPUUsage.rst:8800
#: ../../../AMDGPUUsage.rst:8803 ../../../AMDGPUUsage.rst:8828
#: ../../../AMDGPUUsage.rst:8850 ../../../AMDGPUUsage.rst:8879
#: ../../../AMDGPUUsage.rst:8907 ../../../AMDGPUUsage.rst:8938
#: ../../../AMDGPUUsage.rst:8940 ../../../AMDGPUUsage.rst:9040
msgid "acquire"
msgstr ""

#: ../../../AMDGPUUsage.rst:4742
msgid ""
"If a load atomic/atomicrmw then no following load/load atomic/store/store "
"atomic/atomicrmw/fence instruction can be moved before the acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:4745
msgid ""
"If a fence then same as load atomic, plus no preceding associated fence-"
"paired-atomic can be moved after the fence."
msgstr ""

#: ../../../AMDGPUUsage.rst:4747 ../../../AMDGPUUsage.rst:5226
#: ../../../AMDGPUUsage.rst:5229 ../../../AMDGPUUsage.rst:5250
#: ../../../AMDGPUUsage.rst:5251 ../../../AMDGPUUsage.rst:5293
#: ../../../AMDGPUUsage.rst:5296 ../../../AMDGPUUsage.rst:5317
#: ../../../AMDGPUUsage.rst:5318 ../../../AMDGPUUsage.rst:5358
#: ../../../AMDGPUUsage.rst:5360 ../../../AMDGPUUsage.rst:5404
#: ../../../AMDGPUUsage.rst:6934 ../../../AMDGPUUsage.rst:6936
#: ../../../AMDGPUUsage.rst:6941 ../../../AMDGPUUsage.rst:6973
#: ../../../AMDGPUUsage.rst:6978 ../../../AMDGPUUsage.rst:7022
#: ../../../AMDGPUUsage.rst:7077 ../../../AMDGPUUsage.rst:7079
#: ../../../AMDGPUUsage.rst:7084 ../../../AMDGPUUsage.rst:7117
#: ../../../AMDGPUUsage.rst:7122 ../../../AMDGPUUsage.rst:7164
#: ../../../AMDGPUUsage.rst:7217 ../../../AMDGPUUsage.rst:7219
#: ../../../AMDGPUUsage.rst:7280 ../../../AMDGPUUsage.rst:7349
#: ../../../AMDGPUUsage.rst:9136 ../../../AMDGPUUsage.rst:9139
#: ../../../AMDGPUUsage.rst:9188 ../../../AMDGPUUsage.rst:9225
#: ../../../AMDGPUUsage.rst:9273 ../../../AMDGPUUsage.rst:9276
#: ../../../AMDGPUUsage.rst:9324 ../../../AMDGPUUsage.rst:9361
#: ../../../AMDGPUUsage.rst:9406 ../../../AMDGPUUsage.rst:9408
#: ../../../AMDGPUUsage.rst:9484
msgid "release"
msgstr ""

#: ../../../AMDGPUUsage.rst:4747
msgid ""
"If a store atomic/atomicrmw then no preceding load/load atomic/store/store "
"atomic/atomicrmw/fence instruction can be moved after the release."
msgstr ""

#: ../../../AMDGPUUsage.rst:4750
msgid ""
"If a fence then same as store atomic, plus no following associated fence-"
"paired-atomic can be moved before the fence."
msgstr ""

#: ../../../AMDGPUUsage.rst:4753 ../../../AMDGPUUsage.rst:5473
#: ../../../AMDGPUUsage.rst:5476 ../../../AMDGPUUsage.rst:5498
#: ../../../AMDGPUUsage.rst:5515 ../../../AMDGPUUsage.rst:5552
#: ../../../AMDGPUUsage.rst:5615 ../../../AMDGPUUsage.rst:5681
#: ../../../AMDGPUUsage.rst:5683 ../../../AMDGPUUsage.rst:5752
#: ../../../AMDGPUUsage.rst:7433 ../../../AMDGPUUsage.rst:7435
#: ../../../AMDGPUUsage.rst:7440 ../../../AMDGPUUsage.rst:7502
#: ../../../AMDGPUUsage.rst:7523 ../../../AMDGPUUsage.rst:7587
#: ../../../AMDGPUUsage.rst:7652 ../../../AMDGPUUsage.rst:7733
#: ../../../AMDGPUUsage.rst:7803 ../../../AMDGPUUsage.rst:7889
#: ../../../AMDGPUUsage.rst:7891 ../../../AMDGPUUsage.rst:8001
#: ../../../AMDGPUUsage.rst:8097 ../../../AMDGPUUsage.rst:9558
#: ../../../AMDGPUUsage.rst:9561 ../../../AMDGPUUsage.rst:9642
#: ../../../AMDGPUUsage.rst:9702 ../../../AMDGPUUsage.rst:9776
#: ../../../AMDGPUUsage.rst:9848 ../../../AMDGPUUsage.rst:9923
#: ../../../AMDGPUUsage.rst:9925 ../../../AMDGPUUsage.rst:10050
msgid "acq_rel"
msgstr ""

#: ../../../AMDGPUUsage.rst:4753
msgid "Same constraints as both acquire and release."
msgstr ""

#: ../../../AMDGPUUsage.rst:4754 ../../../AMDGPUUsage.rst:5848
#: ../../../AMDGPUUsage.rst:5853 ../../../AMDGPUUsage.rst:5919
#: ../../../AMDGPUUsage.rst:5925 ../../../AMDGPUUsage.rst:6016
#: ../../../AMDGPUUsage.rst:6021 ../../../AMDGPUUsage.rst:6026
#: ../../../AMDGPUUsage.rst:8211 ../../../AMDGPUUsage.rst:8216
#: ../../../AMDGPUUsage.rst:8301 ../../../AMDGPUUsage.rst:8311
#: ../../../AMDGPUUsage.rst:8404 ../../../AMDGPUUsage.rst:8409
#: ../../../AMDGPUUsage.rst:8414 ../../../AMDGPUUsage.rst:10157
#: ../../../AMDGPUUsage.rst:10162 ../../../AMDGPUUsage.rst:10272
#: ../../../AMDGPUUsage.rst:10366 ../../../AMDGPUUsage.rst:10473
#: ../../../AMDGPUUsage.rst:10478 ../../../AMDGPUUsage.rst:10483
msgid "seq_cst"
msgstr ""

#: ../../../AMDGPUUsage.rst:4754
msgid ""
"If a load atomic then same constraints as acquire, plus no preceding "
"sequentially consistent load atomic/store atomic/atomicrmw/fence instruction "
"can be moved after the seq_cst."
msgstr ""

#: ../../../AMDGPUUsage.rst:4758
msgid ""
"If a store atomic then the same constraints as release, plus no following "
"sequentially consistent load atomic/store atomic/atomicrmw/fence instruction "
"can be moved before the seq_cst."
msgstr ""

#: ../../../AMDGPUUsage.rst:4762
msgid "If an atomicrmw/fence then same constraints as acq_rel."
msgstr ""

#: ../../../AMDGPUUsage.rst:4765
msgid ""
"The code sequences used to implement the memory model are defined in the "
"following sections:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4768
msgid ":ref:`amdgpu-amdhsa-memory-model-gfx6-gfx9`"
msgstr ""

#: ../../../AMDGPUUsage.rst:4769
msgid ":ref:`amdgpu-amdhsa-memory-model-gfx90a`"
msgstr ""

#: ../../../AMDGPUUsage.rst:4770
msgid ":ref:`amdgpu-amdhsa-memory-model-gfx10`"
msgstr ""

#: ../../../AMDGPUUsage.rst:4775
msgid "Memory Model GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:4777
msgid "For GFX6-GFX9:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4779 ../../../AMDGPUUsage.rst:6040
#: ../../../AMDGPUUsage.rst:8428
msgid "Each agent has multiple shader arrays (SA)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4780 ../../../AMDGPUUsage.rst:6041
msgid "Each SA has multiple compute units (CU)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4781 ../../../AMDGPUUsage.rst:6042
#: ../../../AMDGPUUsage.rst:8431
msgid "Each CU has multiple SIMDs that execute wavefronts."
msgstr ""

#: ../../../AMDGPUUsage.rst:4782
msgid ""
"The wavefronts for a single work-group are executed in the same CU but may "
"be executed by different SIMDs."
msgstr ""

#: ../../../AMDGPUUsage.rst:4784
msgid ""
"Each CU has a single LDS memory shared by the wavefronts of the work-groups "
"executing on it."
msgstr ""

#: ../../../AMDGPUUsage.rst:4786 ../../../AMDGPUUsage.rst:6049
msgid ""
"All LDS operations of a CU are performed as wavefront wide operations in a "
"global order and involve no caching. Completion is reported to a wavefront "
"in execution order."
msgstr ""

#: ../../../AMDGPUUsage.rst:4789 ../../../AMDGPUUsage.rst:6052
msgid ""
"The LDS memory has multiple request queues shared by the SIMDs of a CU. "
"Therefore, the LDS operations performed by different wavefronts of a work-"
"group can be reordered relative to each other, which can result in "
"reordering the visibility of vector memory operations with respect to LDS "
"operations of other wavefronts in the same work-group. A ``s_waitcnt "
"lgkmcnt(0)`` is required to ensure synchronization between LDS operations "
"and vector memory operations between wavefronts of a work-group, but not "
"between operations performed by the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:4797
msgid ""
"The vector memory operations are performed as wavefront wide operations and "
"completion is reported to a wavefront in execution order. The exception is "
"that for GFX7-GFX9 ``flat_load/store/atomic`` instructions can report out of "
"vector memory order if they access LDS memory, and out of LDS operation "
"order if they access global memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:4802
msgid ""
"The vector memory operations access a single vector L1 cache shared by all "
"SIMDs a CU. Therefore, no special action is required for coherence between "
"the lanes of a single wavefront, or for coherence between wavefronts in the "
"same work-group. A ``buffer_wbinvl1_vol`` is required for coherence between "
"wavefronts executing in different work-groups as they may be executing on "
"different CUs."
msgstr ""

#: ../../../AMDGPUUsage.rst:4808 ../../../AMDGPUUsage.rst:6081
msgid ""
"The scalar memory operations access a scalar L1 cache shared by all "
"wavefronts on a group of CUs. The scalar and vector L1 caches are not "
"coherent. However, scalar operations are used in a restricted way so do not "
"impact the memory model. See :ref:`amdgpu-amdhsa-memory-spaces`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4812 ../../../AMDGPUUsage.rst:6085
msgid ""
"The vector and scalar memory operations use an L2 cache shared by all CUs on "
"the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:4814 ../../../AMDGPUUsage.rst:6088
#: ../../../AMDGPUUsage.rst:8483
msgid ""
"The L2 cache has independent channels to service disjoint ranges of virtual "
"addresses."
msgstr ""

#: ../../../AMDGPUUsage.rst:4816
msgid ""
"Each CU has a separate request queue per channel. Therefore, the vector and "
"scalar memory operations performed by wavefronts executing in different work-"
"groups (which may be executing on different CUs) of an agent can be "
"reordered relative to each other. A ``s_waitcnt vmcnt(0)`` is required to "
"ensure synchronization between vector memory operations of different CUs. It "
"ensures a previous vector memory operation has completed before executing a "
"subsequent vector memory or LDS operation and so can be used to meet the "
"requirements of acquire and release."
msgstr ""

#: ../../../AMDGPUUsage.rst:4824 ../../../AMDGPUUsage.rst:8494
msgid ""
"The L2 cache can be kept coherent with other agents on some targets, or "
"ranges of virtual addresses can be set up to bypass it to ensure system "
"coherence."
msgstr ""

#: ../../../AMDGPUUsage.rst:4827 ../../../AMDGPUUsage.rst:6133
#: ../../../AMDGPUUsage.rst:8497
msgid ""
"Scalar memory operations are only used to access memory that is proven to "
"not change during the execution of the kernel dispatch. This includes "
"constant address space and global address space for program scope ``const`` "
"variables. Therefore, the kernel machine code does not have to maintain the "
"scalar cache to ensure it is coherent with the vector caches. The scalar and "
"vector caches are invalidated between kernel dispatches by CP since constant "
"address space data may change between kernel dispatch executions. See :ref:"
"`amdgpu-amdhsa-memory-spaces`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4836 ../../../AMDGPUUsage.rst:6142
#: ../../../AMDGPUUsage.rst:8506
msgid ""
"The one exception is if scalar writes are used to spill SGPR registers. In "
"this case the AMDGPU backend ensures the memory location used to spill is "
"never accessed by vector memory operations at the same time. If scalar "
"writes are used then a ``s_dcache_wb`` is inserted before the ``s_endpgm`` "
"and before a function return since the locations may be used for vector "
"memory instructions by a future wavefront that uses the same scratch area, "
"or a function call that creates a frame at the same address, respectively. "
"There is no need for a ``s_dcache_inv`` as all scalar writes are write-"
"before-read in the same thread."
msgstr ""

#: ../../../AMDGPUUsage.rst:4845 ../../../AMDGPUUsage.rst:6151
#: ../../../AMDGPUUsage.rst:8515
msgid "For kernarg backing memory:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4847 ../../../AMDGPUUsage.rst:6153
msgid "CP invalidates the L1 cache at the start of each kernel dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:4848
msgid ""
"On dGPU the kernarg backing memory is allocated in host memory accessed as "
"MTYPE UC (uncached) to avoid needing to invalidate the L2 cache. This also "
"causes it to be treated as non-volatile and so is not invalidated by "
"``*_vol``."
msgstr ""

#: ../../../AMDGPUUsage.rst:4852
msgid ""
"On APU the kernarg backing memory it is accessed as MTYPE CC (cache "
"coherent) and so the L2 cache will be coherent with the CPU and other agents."
msgstr ""

#: ../../../AMDGPUUsage.rst:4855 ../../../AMDGPUUsage.rst:6161
msgid ""
"Scratch backing memory (which is used for the private address space) is "
"accessed with MTYPE NC_NV (non-coherent non-volatile). Since the private "
"address space is only accessed by a single thread, and is always write-"
"before-read, there is never a need to invalidate these entries from the L1 "
"cache. Hence all cache invalidates are done as ``*_vol`` to only invalidate "
"the volatile cache lines."
msgstr ""

#: ../../../AMDGPUUsage.rst:4861
msgid ""
"The code sequences used to implement the memory model for GFX6-GFX9 are "
"defined in table :ref:`amdgpu-amdhsa-memory-model-code-sequences-gfx6-gfx9-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4864
msgid "AMDHSA Memory Model Code Sequences GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:4868 ../../../AMDGPUUsage.rst:6174
#: ../../../AMDGPUUsage.rst:8558
msgid "LLVM Instr"
msgstr ""

#: ../../../AMDGPUUsage.rst:4868 ../../../AMDGPUUsage.rst:6174
#: ../../../AMDGPUUsage.rst:8558
msgid "LLVM Memory Ordering"
msgstr ""

#: ../../../AMDGPUUsage.rst:4868 ../../../AMDGPUUsage.rst:6174
#: ../../../AMDGPUUsage.rst:8558
msgid "LLVM Memory Sync Scope"
msgstr ""

#: ../../../AMDGPUUsage.rst:4868 ../../../AMDGPUUsage.rst:6174
#: ../../../AMDGPUUsage.rst:8558
msgid "AMDGPU Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:4868
msgid "AMDGPU Machine Code GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:4872 ../../../AMDGPUUsage.rst:6178
#: ../../../AMDGPUUsage.rst:8562
msgid "**Non-Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:4874 ../../../AMDGPUUsage.rst:4901
#: ../../../AMDGPUUsage.rst:6180 ../../../AMDGPUUsage.rst:6207
#: ../../../AMDGPUUsage.rst:8564 ../../../AMDGPUUsage.rst:8591
msgid "load"
msgstr ""

#: ../../../AMDGPUUsage.rst:4875 ../../../AMDGPUUsage.rst:4903
#: ../../../AMDGPUUsage.rst:4938 ../../../AMDGPUUsage.rst:4940
#: ../../../AMDGPUUsage.rst:4942 ../../../AMDGPUUsage.rst:4950
#: ../../../AMDGPUUsage.rst:4961 ../../../AMDGPUUsage.rst:4964
#: ../../../AMDGPUUsage.rst:5004 ../../../AMDGPUUsage.rst:5032
#: ../../../AMDGPUUsage.rst:5035 ../../../AMDGPUUsage.rst:5075
#: ../../../AMDGPUUsage.rst:5228 ../../../AMDGPUUsage.rst:5230
#: ../../../AMDGPUUsage.rst:5252 ../../../AMDGPUUsage.rst:5295
#: ../../../AMDGPUUsage.rst:5297 ../../../AMDGPUUsage.rst:5319
#: ../../../AMDGPUUsage.rst:5475 ../../../AMDGPUUsage.rst:5515
#: ../../../AMDGPUUsage.rst:5615 ../../../AMDGPUUsage.rst:5850
#: ../../../AMDGPUUsage.rst:5854 ../../../AMDGPUUsage.rst:5926
#: ../../../AMDGPUUsage.rst:6018 ../../../AMDGPUUsage.rst:6023
#: ../../../AMDGPUUsage.rst:6181 ../../../AMDGPUUsage.rst:6209
#: ../../../AMDGPUUsage.rst:6243 ../../../AMDGPUUsage.rst:6245
#: ../../../AMDGPUUsage.rst:6256 ../../../AMDGPUUsage.rst:6258
#: ../../../AMDGPUUsage.rst:6260 ../../../AMDGPUUsage.rst:6264
#: ../../../AMDGPUUsage.rst:6271 ../../../AMDGPUUsage.rst:6275
#: ../../../AMDGPUUsage.rst:6285 ../../../AMDGPUUsage.rst:6334
#: ../../../AMDGPUUsage.rst:6423 ../../../AMDGPUUsage.rst:6451
#: ../../../AMDGPUUsage.rst:6487 ../../../AMDGPUUsage.rst:6540
#: ../../../AMDGPUUsage.rst:6626 ../../../AMDGPUUsage.rst:6655
#: ../../../AMDGPUUsage.rst:6935 ../../../AMDGPUUsage.rst:6942
#: ../../../AMDGPUUsage.rst:6979 ../../../AMDGPUUsage.rst:7023
#: ../../../AMDGPUUsage.rst:7078 ../../../AMDGPUUsage.rst:7085
#: ../../../AMDGPUUsage.rst:7123 ../../../AMDGPUUsage.rst:7165
#: ../../../AMDGPUUsage.rst:7434 ../../../AMDGPUUsage.rst:7523
#: ../../../AMDGPUUsage.rst:7733 ../../../AMDGPUUsage.rst:7803
#: ../../../AMDGPUUsage.rst:8213 ../../../AMDGPUUsage.rst:8217
#: ../../../AMDGPUUsage.rst:8312 ../../../AMDGPUUsage.rst:8406
#: ../../../AMDGPUUsage.rst:8411 ../../../AMDGPUUsage.rst:8565
#: ../../../AMDGPUUsage.rst:8593 ../../../AMDGPUUsage.rst:8627
#: ../../../AMDGPUUsage.rst:8629 ../../../AMDGPUUsage.rst:8638
#: ../../../AMDGPUUsage.rst:8640 ../../../AMDGPUUsage.rst:8648
#: ../../../AMDGPUUsage.rst:8659 ../../../AMDGPUUsage.rst:8713
#: ../../../AMDGPUUsage.rst:8773 ../../../AMDGPUUsage.rst:8802
#: ../../../AMDGPUUsage.rst:8850 ../../../AMDGPUUsage.rst:8907
#: ../../../AMDGPUUsage.rst:9138 ../../../AMDGPUUsage.rst:9140
#: ../../../AMDGPUUsage.rst:9226 ../../../AMDGPUUsage.rst:9275
#: ../../../AMDGPUUsage.rst:9277 ../../../AMDGPUUsage.rst:9362
#: ../../../AMDGPUUsage.rst:9560 ../../../AMDGPUUsage.rst:9702
#: ../../../AMDGPUUsage.rst:9848 ../../../AMDGPUUsage.rst:10159
#: ../../../AMDGPUUsage.rst:10163 ../../../AMDGPUUsage.rst:10367
#: ../../../AMDGPUUsage.rst:10475 ../../../AMDGPUUsage.rst:10480
msgid "generic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4874 ../../../AMDGPUUsage.rst:4902
#: ../../../AMDGPUUsage.rst:6180 ../../../AMDGPUUsage.rst:6208
#: ../../../AMDGPUUsage.rst:8564 ../../../AMDGPUUsage.rst:8592
msgid "!volatile & !nontemporal"
msgstr ""

#: ../../../AMDGPUUsage.rst:4876 ../../../AMDGPUUsage.rst:6182
#: ../../../AMDGPUUsage.rst:6242 ../../../AMDGPUUsage.rst:8566
#: ../../../AMDGPUUsage.rst:8626
msgid "buffer/global/flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:4878 ../../../AMDGPUUsage.rst:4906
#: ../../../AMDGPUUsage.rst:6184 ../../../AMDGPUUsage.rst:6212
#: ../../../AMDGPUUsage.rst:8568 ../../../AMDGPUUsage.rst:8596
msgid "!volatile & nontemporal"
msgstr ""

#: ../../../AMDGPUUsage.rst:4880 ../../../AMDGPUUsage.rst:6186
msgid "buffer/global/flat_load glc=1 slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4883 ../../../AMDGPUUsage.rst:4911
#: ../../../AMDGPUUsage.rst:6189 ../../../AMDGPUUsage.rst:6217
#: ../../../AMDGPUUsage.rst:8573 ../../../AMDGPUUsage.rst:8601
msgid "volatile"
msgstr ""

#: ../../../AMDGPUUsage.rst:4885 ../../../AMDGPUUsage.rst:4939
#: ../../../AMDGPUUsage.rst:6191 ../../../AMDGPUUsage.rst:6244
#: ../../../AMDGPUUsage.rst:6255 ../../../AMDGPUUsage.rst:6257
#: ../../../AMDGPUUsage.rst:6393 ../../../AMDGPUUsage.rst:8628
msgid "buffer/global/flat_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4887 ../../../AMDGPUUsage.rst:4914
#: ../../../AMDGPUUsage.rst:4982 ../../../AMDGPUUsage.rst:5052
#: ../../../AMDGPUUsage.rst:5592 ../../../AMDGPUUsage.rst:6193
#: ../../../AMDGPUUsage.rst:6220 ../../../AMDGPUUsage.rst:6291
#: ../../../AMDGPUUsage.rst:6371 ../../../AMDGPUUsage.rst:6395
#: ../../../AMDGPUUsage.rst:6494 ../../../AMDGPUUsage.rst:6573
#: ../../../AMDGPUUsage.rst:6597 ../../../AMDGPUUsage.rst:7479
#: ../../../AMDGPUUsage.rst:7629 ../../../AMDGPUUsage.rst:7704
#: ../../../AMDGPUUsage.rst:8577 ../../../AMDGPUUsage.rst:8665
#: ../../../AMDGPUUsage.rst:8750
msgid "s_waitcnt vmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4889 ../../../AMDGPUUsage.rst:4916
#: ../../../AMDGPUUsage.rst:6195 ../../../AMDGPUUsage.rst:6222
#: ../../../AMDGPUUsage.rst:8579 ../../../AMDGPUUsage.rst:8606
msgid "Must happen before any following volatile global/generic load/store."
msgstr ""

#: ../../../AMDGPUUsage.rst:4893 ../../../AMDGPUUsage.rst:4920
#: ../../../AMDGPUUsage.rst:6199 ../../../AMDGPUUsage.rst:6226
#: ../../../AMDGPUUsage.rst:8583 ../../../AMDGPUUsage.rst:8610
msgid ""
"Ensures that volatile operations to different addresses will not be "
"reordered by hardware."
msgstr ""

#: ../../../AMDGPUUsage.rst:4901 ../../../AMDGPUUsage.rst:4928
#: ../../../AMDGPUUsage.rst:4937 ../../../AMDGPUUsage.rst:4946
#: ../../../AMDGPUUsage.rst:4954 ../../../AMDGPUUsage.rst:4960
#: ../../../AMDGPUUsage.rst:4963 ../../../AMDGPUUsage.rst:5031
#: ../../../AMDGPUUsage.rst:5034 ../../../AMDGPUUsage.rst:5227
#: ../../../AMDGPUUsage.rst:5250 ../../../AMDGPUUsage.rst:5294
#: ../../../AMDGPUUsage.rst:5317 ../../../AMDGPUUsage.rst:5474
#: ../../../AMDGPUUsage.rst:5498 ../../../AMDGPUUsage.rst:5849
#: ../../../AMDGPUUsage.rst:5919 ../../../AMDGPUUsage.rst:6017
#: ../../../AMDGPUUsage.rst:6022 ../../../AMDGPUUsage.rst:6207
#: ../../../AMDGPUUsage.rst:6234 ../../../AMDGPUUsage.rst:6250
#: ../../../AMDGPUUsage.rst:6265 ../../../AMDGPUUsage.rst:6276
#: ../../../AMDGPUUsage.rst:6284 ../../../AMDGPUUsage.rst:6313
#: ../../../AMDGPUUsage.rst:6488 ../../../AMDGPUUsage.rst:6519
#: ../../../AMDGPUUsage.rst:6936 ../../../AMDGPUUsage.rst:6973
#: ../../../AMDGPUUsage.rst:7079 ../../../AMDGPUUsage.rst:7117
#: ../../../AMDGPUUsage.rst:7435 ../../../AMDGPUUsage.rst:7502
#: ../../../AMDGPUUsage.rst:8212 ../../../AMDGPUUsage.rst:8301
#: ../../../AMDGPUUsage.rst:8405 ../../../AMDGPUUsage.rst:8410
#: ../../../AMDGPUUsage.rst:8591 ../../../AMDGPUUsage.rst:8618
#: ../../../AMDGPUUsage.rst:8634 ../../../AMDGPUUsage.rst:8644
#: ../../../AMDGPUUsage.rst:8652 ../../../AMDGPUUsage.rst:8658
#: ../../../AMDGPUUsage.rst:8686 ../../../AMDGPUUsage.rst:8801
#: ../../../AMDGPUUsage.rst:8828 ../../../AMDGPUUsage.rst:9137
#: ../../../AMDGPUUsage.rst:9188 ../../../AMDGPUUsage.rst:9274
#: ../../../AMDGPUUsage.rst:9324 ../../../AMDGPUUsage.rst:9559
#: ../../../AMDGPUUsage.rst:9642 ../../../AMDGPUUsage.rst:10158
#: ../../../AMDGPUUsage.rst:10272 ../../../AMDGPUUsage.rst:10474
#: ../../../AMDGPUUsage.rst:10479
msgid "local"
msgstr ""

#: ../../../AMDGPUUsage.rst:4901 ../../../AMDGPUUsage.rst:6207
#: ../../../AMDGPUUsage.rst:6254 ../../../AMDGPUUsage.rst:6317
#: ../../../AMDGPUUsage.rst:8591 ../../../AMDGPUUsage.rst:8634
#: ../../../AMDGPUUsage.rst:8686
msgid "ds_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:4902 ../../../AMDGPUUsage.rst:4928
#: ../../../AMDGPUUsage.rst:6208 ../../../AMDGPUUsage.rst:6234
#: ../../../AMDGPUUsage.rst:8592 ../../../AMDGPUUsage.rst:8618
msgid "store"
msgstr ""

#: ../../../AMDGPUUsage.rst:4904 ../../../AMDGPUUsage.rst:4913
#: ../../../AMDGPUUsage.rst:4941 ../../../AMDGPUUsage.rst:5249
#: ../../../AMDGPUUsage.rst:5292 ../../../AMDGPUUsage.rst:6210
#: ../../../AMDGPUUsage.rst:6219 ../../../AMDGPUUsage.rst:6259
#: ../../../AMDGPUUsage.rst:6263 ../../../AMDGPUUsage.rst:6934
#: ../../../AMDGPUUsage.rst:6972 ../../../AMDGPUUsage.rst:7021
#: ../../../AMDGPUUsage.rst:7076 ../../../AMDGPUUsage.rst:8594
#: ../../../AMDGPUUsage.rst:8603 ../../../AMDGPUUsage.rst:8639
#: ../../../AMDGPUUsage.rst:9187 ../../../AMDGPUUsage.rst:9272
msgid "buffer/global/flat_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:4908 ../../../AMDGPUUsage.rst:6214
msgid "buffer/global/flat_store glc=1 slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4928 ../../../AMDGPUUsage.rst:4946
#: ../../../AMDGPUUsage.rst:5250 ../../../AMDGPUUsage.rst:6234
#: ../../../AMDGPUUsage.rst:6269 ../../../AMDGPUUsage.rst:6940
#: ../../../AMDGPUUsage.rst:6977 ../../../AMDGPUUsage.rst:8618
#: ../../../AMDGPUUsage.rst:8644 ../../../AMDGPUUsage.rst:9224
msgid "ds_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:4929 ../../../AMDGPUUsage.rst:6235
#: ../../../AMDGPUUsage.rst:8619
msgid "**Unordered Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:4931 ../../../AMDGPUUsage.rst:4936
#: ../../../AMDGPUUsage.rst:4939 ../../../AMDGPUUsage.rst:4959
#: ../../../AMDGPUUsage.rst:4962 ../../../AMDGPUUsage.rst:4963
#: ../../../AMDGPUUsage.rst:4980 ../../../AMDGPUUsage.rst:5004
#: ../../../AMDGPUUsage.rst:5848 ../../../AMDGPUUsage.rst:5853
#: ../../../AMDGPUUsage.rst:5919 ../../../AMDGPUUsage.rst:5925
#: ../../../AMDGPUUsage.rst:6237 ../../../AMDGPUUsage.rst:6242
#: ../../../AMDGPUUsage.rst:6244 ../../../AMDGPUUsage.rst:6250
#: ../../../AMDGPUUsage.rst:6255 ../../../AMDGPUUsage.rst:6257
#: ../../../AMDGPUUsage.rst:6283 ../../../AMDGPUUsage.rst:6286
#: ../../../AMDGPUUsage.rst:6313 ../../../AMDGPUUsage.rst:6334
#: ../../../AMDGPUUsage.rst:6369 ../../../AMDGPUUsage.rst:6393
#: ../../../AMDGPUUsage.rst:6423 ../../../AMDGPUUsage.rst:6451
#: ../../../AMDGPUUsage.rst:8211 ../../../AMDGPUUsage.rst:8216
#: ../../../AMDGPUUsage.rst:8301 ../../../AMDGPUUsage.rst:8311
#: ../../../AMDGPUUsage.rst:8621 ../../../AMDGPUUsage.rst:8626
#: ../../../AMDGPUUsage.rst:8628 ../../../AMDGPUUsage.rst:8634
#: ../../../AMDGPUUsage.rst:8637 ../../../AMDGPUUsage.rst:8657
#: ../../../AMDGPUUsage.rst:8660 ../../../AMDGPUUsage.rst:8686
#: ../../../AMDGPUUsage.rst:8713 ../../../AMDGPUUsage.rst:8748
#: ../../../AMDGPUUsage.rst:8773 ../../../AMDGPUUsage.rst:10157
#: ../../../AMDGPUUsage.rst:10162 ../../../AMDGPUUsage.rst:10272
#: ../../../AMDGPUUsage.rst:10366
msgid "load atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4931 ../../../AMDGPUUsage.rst:4932
#: ../../../AMDGPUUsage.rst:4933 ../../../AMDGPUUsage.rst:6237
#: ../../../AMDGPUUsage.rst:6238 ../../../AMDGPUUsage.rst:6239
#: ../../../AMDGPUUsage.rst:8621 ../../../AMDGPUUsage.rst:8622
#: ../../../AMDGPUUsage.rst:8623
msgid "*any*"
msgstr ""

#: ../../../AMDGPUUsage.rst:4931 ../../../AMDGPUUsage.rst:4932
#: ../../../AMDGPUUsage.rst:6237 ../../../AMDGPUUsage.rst:6238
#: ../../../AMDGPUUsage.rst:8621 ../../../AMDGPUUsage.rst:8622
msgid "*Same as non-atomic*."
msgstr ""

#: ../../../AMDGPUUsage.rst:4932 ../../../AMDGPUUsage.rst:4941
#: ../../../AMDGPUUsage.rst:4946 ../../../AMDGPUUsage.rst:5226
#: ../../../AMDGPUUsage.rst:5229 ../../../AMDGPUUsage.rst:5250
#: ../../../AMDGPUUsage.rst:5251 ../../../AMDGPUUsage.rst:6016
#: ../../../AMDGPUUsage.rst:6238 ../../../AMDGPUUsage.rst:6259
#: ../../../AMDGPUUsage.rst:6263 ../../../AMDGPUUsage.rst:6265
#: ../../../AMDGPUUsage.rst:6934 ../../../AMDGPUUsage.rst:6936
#: ../../../AMDGPUUsage.rst:6941 ../../../AMDGPUUsage.rst:6973
#: ../../../AMDGPUUsage.rst:6978 ../../../AMDGPUUsage.rst:7022
#: ../../../AMDGPUUsage.rst:8404 ../../../AMDGPUUsage.rst:8622
#: ../../../AMDGPUUsage.rst:8639 ../../../AMDGPUUsage.rst:8644
#: ../../../AMDGPUUsage.rst:9136 ../../../AMDGPUUsage.rst:9139
#: ../../../AMDGPUUsage.rst:9188 ../../../AMDGPUUsage.rst:9225
#: ../../../AMDGPUUsage.rst:10473
msgid "store atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4933 ../../../AMDGPUUsage.rst:4949
#: ../../../AMDGPUUsage.rst:4954 ../../../AMDGPUUsage.rst:5030
#: ../../../AMDGPUUsage.rst:5033 ../../../AMDGPUUsage.rst:5034
#: ../../../AMDGPUUsage.rst:5051 ../../../AMDGPUUsage.rst:5075
#: ../../../AMDGPUUsage.rst:5293 ../../../AMDGPUUsage.rst:5296
#: ../../../AMDGPUUsage.rst:5317 ../../../AMDGPUUsage.rst:5318
#: ../../../AMDGPUUsage.rst:5473 ../../../AMDGPUUsage.rst:5476
#: ../../../AMDGPUUsage.rst:5498 ../../../AMDGPUUsage.rst:5515
#: ../../../AMDGPUUsage.rst:5552 ../../../AMDGPUUsage.rst:5615
#: ../../../AMDGPUUsage.rst:6021 ../../../AMDGPUUsage.rst:6239
#: ../../../AMDGPUUsage.rst:6270 ../../../AMDGPUUsage.rst:6274
#: ../../../AMDGPUUsage.rst:6276 ../../../AMDGPUUsage.rst:6486
#: ../../../AMDGPUUsage.rst:6488 ../../../AMDGPUUsage.rst:6493
#: ../../../AMDGPUUsage.rst:6519 ../../../AMDGPUUsage.rst:6540
#: ../../../AMDGPUUsage.rst:6572 ../../../AMDGPUUsage.rst:6596
#: ../../../AMDGPUUsage.rst:6626 ../../../AMDGPUUsage.rst:6655
#: ../../../AMDGPUUsage.rst:7077 ../../../AMDGPUUsage.rst:7079
#: ../../../AMDGPUUsage.rst:7084 ../../../AMDGPUUsage.rst:7117
#: ../../../AMDGPUUsage.rst:7122 ../../../AMDGPUUsage.rst:7164
#: ../../../AMDGPUUsage.rst:7433 ../../../AMDGPUUsage.rst:7435
#: ../../../AMDGPUUsage.rst:7440 ../../../AMDGPUUsage.rst:7502
#: ../../../AMDGPUUsage.rst:7523 ../../../AMDGPUUsage.rst:7587
#: ../../../AMDGPUUsage.rst:7652 ../../../AMDGPUUsage.rst:7733
#: ../../../AMDGPUUsage.rst:7803 ../../../AMDGPUUsage.rst:8409
#: ../../../AMDGPUUsage.rst:8623 ../../../AMDGPUUsage.rst:8647
#: ../../../AMDGPUUsage.rst:8652 ../../../AMDGPUUsage.rst:8800
#: ../../../AMDGPUUsage.rst:8803 ../../../AMDGPUUsage.rst:8828
#: ../../../AMDGPUUsage.rst:8850 ../../../AMDGPUUsage.rst:8879
#: ../../../AMDGPUUsage.rst:8907 ../../../AMDGPUUsage.rst:9273
#: ../../../AMDGPUUsage.rst:9276 ../../../AMDGPUUsage.rst:9324
#: ../../../AMDGPUUsage.rst:9361 ../../../AMDGPUUsage.rst:9558
#: ../../../AMDGPUUsage.rst:9561 ../../../AMDGPUUsage.rst:9642
#: ../../../AMDGPUUsage.rst:9702 ../../../AMDGPUUsage.rst:9776
#: ../../../AMDGPUUsage.rst:9848 ../../../AMDGPUUsage.rst:10478
msgid "atomicrmw"
msgstr ""

#: ../../../AMDGPUUsage.rst:4933 ../../../AMDGPUUsage.rst:6239
#: ../../../AMDGPUUsage.rst:8623
msgid "*Same as monotonic atomic*."
msgstr ""

#: ../../../AMDGPUUsage.rst:4934 ../../../AMDGPUUsage.rst:6240
#: ../../../AMDGPUUsage.rst:8624
msgid "**Monotonic Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:4936 ../../../AMDGPUUsage.rst:4941
#: ../../../AMDGPUUsage.rst:4946 ../../../AMDGPUUsage.rst:4949
#: ../../../AMDGPUUsage.rst:4954 ../../../AMDGPUUsage.rst:4959
#: ../../../AMDGPUUsage.rst:5030 ../../../AMDGPUUsage.rst:5102
#: ../../../AMDGPUUsage.rst:5226 ../../../AMDGPUUsage.rst:5293
#: ../../../AMDGPUUsage.rst:5358 ../../../AMDGPUUsage.rst:5473
#: ../../../AMDGPUUsage.rst:5681 ../../../AMDGPUUsage.rst:5848
#: ../../../AMDGPUUsage.rst:6016 ../../../AMDGPUUsage.rst:6021
#: ../../../AMDGPUUsage.rst:6026 ../../../AMDGPUUsage.rst:6242
#: ../../../AMDGPUUsage.rst:6250 ../../../AMDGPUUsage.rst:6259
#: ../../../AMDGPUUsage.rst:6265 ../../../AMDGPUUsage.rst:6270
#: ../../../AMDGPUUsage.rst:6276 ../../../AMDGPUUsage.rst:6283
#: ../../../AMDGPUUsage.rst:6486 ../../../AMDGPUUsage.rst:6488
#: ../../../AMDGPUUsage.rst:6691 ../../../AMDGPUUsage.rst:6934
#: ../../../AMDGPUUsage.rst:6936 ../../../AMDGPUUsage.rst:7077
#: ../../../AMDGPUUsage.rst:7079 ../../../AMDGPUUsage.rst:7217
#: ../../../AMDGPUUsage.rst:7433 ../../../AMDGPUUsage.rst:7435
#: ../../../AMDGPUUsage.rst:7889 ../../../AMDGPUUsage.rst:8211
#: ../../../AMDGPUUsage.rst:8404 ../../../AMDGPUUsage.rst:8409
#: ../../../AMDGPUUsage.rst:8414 ../../../AMDGPUUsage.rst:8626
#: ../../../AMDGPUUsage.rst:8634 ../../../AMDGPUUsage.rst:8639
#: ../../../AMDGPUUsage.rst:8644 ../../../AMDGPUUsage.rst:8647
#: ../../../AMDGPUUsage.rst:8652 ../../../AMDGPUUsage.rst:8657
#: ../../../AMDGPUUsage.rst:8800 ../../../AMDGPUUsage.rst:8938
#: ../../../AMDGPUUsage.rst:9136 ../../../AMDGPUUsage.rst:9273
#: ../../../AMDGPUUsage.rst:9406 ../../../AMDGPUUsage.rst:9558
#: ../../../AMDGPUUsage.rst:9923 ../../../AMDGPUUsage.rst:10157
#: ../../../AMDGPUUsage.rst:10473 ../../../AMDGPUUsage.rst:10478
#: ../../../AMDGPUUsage.rst:10483
msgid "singlethread"
msgstr ""

#: ../../../AMDGPUUsage.rst:4937 ../../../AMDGPUUsage.rst:4942
#: ../../../AMDGPUUsage.rst:4947 ../../../AMDGPUUsage.rst:4950
#: ../../../AMDGPUUsage.rst:4955 ../../../AMDGPUUsage.rst:4960
#: ../../../AMDGPUUsage.rst:5031 ../../../AMDGPUUsage.rst:5103
#: ../../../AMDGPUUsage.rst:5227 ../../../AMDGPUUsage.rst:5294
#: ../../../AMDGPUUsage.rst:5359 ../../../AMDGPUUsage.rst:5474
#: ../../../AMDGPUUsage.rst:5682 ../../../AMDGPUUsage.rst:5849
#: ../../../AMDGPUUsage.rst:6017 ../../../AMDGPUUsage.rst:6022
#: ../../../AMDGPUUsage.rst:6027 ../../../AMDGPUUsage.rst:6243
#: ../../../AMDGPUUsage.rst:6251 ../../../AMDGPUUsage.rst:6260
#: ../../../AMDGPUUsage.rst:6266 ../../../AMDGPUUsage.rst:6271
#: ../../../AMDGPUUsage.rst:6277 ../../../AMDGPUUsage.rst:6284
#: ../../../AMDGPUUsage.rst:6487 ../../../AMDGPUUsage.rst:6489
#: ../../../AMDGPUUsage.rst:6692 ../../../AMDGPUUsage.rst:6935
#: ../../../AMDGPUUsage.rst:6937 ../../../AMDGPUUsage.rst:7078
#: ../../../AMDGPUUsage.rst:7080 ../../../AMDGPUUsage.rst:7218
#: ../../../AMDGPUUsage.rst:7434 ../../../AMDGPUUsage.rst:7436
#: ../../../AMDGPUUsage.rst:7890 ../../../AMDGPUUsage.rst:8212
#: ../../../AMDGPUUsage.rst:8405 ../../../AMDGPUUsage.rst:8410
#: ../../../AMDGPUUsage.rst:8415 ../../../AMDGPUUsage.rst:8627
#: ../../../AMDGPUUsage.rst:8635 ../../../AMDGPUUsage.rst:8640
#: ../../../AMDGPUUsage.rst:8645 ../../../AMDGPUUsage.rst:8648
#: ../../../AMDGPUUsage.rst:8653 ../../../AMDGPUUsage.rst:8658
#: ../../../AMDGPUUsage.rst:8801 ../../../AMDGPUUsage.rst:8939
#: ../../../AMDGPUUsage.rst:9137 ../../../AMDGPUUsage.rst:9274
#: ../../../AMDGPUUsage.rst:9407 ../../../AMDGPUUsage.rst:9559
#: ../../../AMDGPUUsage.rst:9924 ../../../AMDGPUUsage.rst:10158
#: ../../../AMDGPUUsage.rst:10474 ../../../AMDGPUUsage.rst:10479
#: ../../../AMDGPUUsage.rst:10484
msgid "wavefront"
msgstr ""

#: ../../../AMDGPUUsage.rst:4938 ../../../AMDGPUUsage.rst:4943
#: ../../../AMDGPUUsage.rst:4948 ../../../AMDGPUUsage.rst:4951
#: ../../../AMDGPUUsage.rst:4956 ../../../AMDGPUUsage.rst:4962
#: ../../../AMDGPUUsage.rst:4963 ../../../AMDGPUUsage.rst:5033
#: ../../../AMDGPUUsage.rst:5034 ../../../AMDGPUUsage.rst:5104
#: ../../../AMDGPUUsage.rst:5229 ../../../AMDGPUUsage.rst:5250
#: ../../../AMDGPUUsage.rst:5296 ../../../AMDGPUUsage.rst:5317
#: ../../../AMDGPUUsage.rst:5360 ../../../AMDGPUUsage.rst:5476
#: ../../../AMDGPUUsage.rst:5498 ../../../AMDGPUUsage.rst:5515
#: ../../../AMDGPUUsage.rst:5683 ../../../AMDGPUUsage.rst:5853
#: ../../../AMDGPUUsage.rst:5919 ../../../AMDGPUUsage.rst:6018
#: ../../../AMDGPUUsage.rst:6023 ../../../AMDGPUUsage.rst:6028
#: ../../../AMDGPUUsage.rst:6244 ../../../AMDGPUUsage.rst:6252
#: ../../../AMDGPUUsage.rst:6261 ../../../AMDGPUUsage.rst:6267
#: ../../../AMDGPUUsage.rst:6272 ../../../AMDGPUUsage.rst:6278
#: ../../../AMDGPUUsage.rst:6286 ../../../AMDGPUUsage.rst:6313
#: ../../../AMDGPUUsage.rst:6334 ../../../AMDGPUUsage.rst:6493
#: ../../../AMDGPUUsage.rst:6519 ../../../AMDGPUUsage.rst:6540
#: ../../../AMDGPUUsage.rst:6693 ../../../AMDGPUUsage.rst:6941
#: ../../../AMDGPUUsage.rst:6973 ../../../AMDGPUUsage.rst:7084
#: ../../../AMDGPUUsage.rst:7117 ../../../AMDGPUUsage.rst:7219
#: ../../../AMDGPUUsage.rst:7440 ../../../AMDGPUUsage.rst:7502
#: ../../../AMDGPUUsage.rst:7523 ../../../AMDGPUUsage.rst:7891
#: ../../../AMDGPUUsage.rst:8216 ../../../AMDGPUUsage.rst:8301
#: ../../../AMDGPUUsage.rst:8406 ../../../AMDGPUUsage.rst:8411
#: ../../../AMDGPUUsage.rst:8416 ../../../AMDGPUUsage.rst:8628
#: ../../../AMDGPUUsage.rst:8636 ../../../AMDGPUUsage.rst:8641
#: ../../../AMDGPUUsage.rst:8646 ../../../AMDGPUUsage.rst:8649
#: ../../../AMDGPUUsage.rst:8654 ../../../AMDGPUUsage.rst:8660
#: ../../../AMDGPUUsage.rst:8686 ../../../AMDGPUUsage.rst:8713
#: ../../../AMDGPUUsage.rst:8803 ../../../AMDGPUUsage.rst:8828
#: ../../../AMDGPUUsage.rst:8850 ../../../AMDGPUUsage.rst:8940
#: ../../../AMDGPUUsage.rst:9139 ../../../AMDGPUUsage.rst:9188
#: ../../../AMDGPUUsage.rst:9276 ../../../AMDGPUUsage.rst:9324
#: ../../../AMDGPUUsage.rst:9408 ../../../AMDGPUUsage.rst:9561
#: ../../../AMDGPUUsage.rst:9642 ../../../AMDGPUUsage.rst:9702
#: ../../../AMDGPUUsage.rst:9925 ../../../AMDGPUUsage.rst:10162
#: ../../../AMDGPUUsage.rst:10272 ../../../AMDGPUUsage.rst:10475
#: ../../../AMDGPUUsage.rst:10480 ../../../AMDGPUUsage.rst:10485
msgid "workgroup"
msgstr ""

#: ../../../AMDGPUUsage.rst:4936 ../../../AMDGPUUsage.rst:4959
#: ../../../AMDGPUUsage.rst:6283 ../../../AMDGPUUsage.rst:8657
msgid "buffer/global/ds/flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:4939 ../../../AMDGPUUsage.rst:4944
#: ../../../AMDGPUUsage.rst:4952 ../../../AMDGPUUsage.rst:4980
#: ../../../AMDGPUUsage.rst:5004 ../../../AMDGPUUsage.rst:5051
#: ../../../AMDGPUUsage.rst:5075 ../../../AMDGPUUsage.rst:5148
#: ../../../AMDGPUUsage.rst:5251 ../../../AMDGPUUsage.rst:5318
#: ../../../AMDGPUUsage.rst:5404 ../../../AMDGPUUsage.rst:5552
#: ../../../AMDGPUUsage.rst:5615 ../../../AMDGPUUsage.rst:5752
#: ../../../AMDGPUUsage.rst:5925 ../../../AMDGPUUsage.rst:6019
#: ../../../AMDGPUUsage.rst:6024 ../../../AMDGPUUsage.rst:6029
#: ../../../AMDGPUUsage.rst:6255 ../../../AMDGPUUsage.rst:6262
#: ../../../AMDGPUUsage.rst:6273 ../../../AMDGPUUsage.rst:6369
#: ../../../AMDGPUUsage.rst:6423 ../../../AMDGPUUsage.rst:6572
#: ../../../AMDGPUUsage.rst:6626 ../../../AMDGPUUsage.rst:6771
#: ../../../AMDGPUUsage.rst:6978 ../../../AMDGPUUsage.rst:7122
#: ../../../AMDGPUUsage.rst:7280 ../../../AMDGPUUsage.rst:7587
#: ../../../AMDGPUUsage.rst:7733 ../../../AMDGPUUsage.rst:8001
#: ../../../AMDGPUUsage.rst:8311 ../../../AMDGPUUsage.rst:8407
#: ../../../AMDGPUUsage.rst:8412 ../../../AMDGPUUsage.rst:8417
#: ../../../AMDGPUUsage.rst:8637 ../../../AMDGPUUsage.rst:8642
#: ../../../AMDGPUUsage.rst:8650 ../../../AMDGPUUsage.rst:8748
#: ../../../AMDGPUUsage.rst:8773 ../../../AMDGPUUsage.rst:8879
#: ../../../AMDGPUUsage.rst:8907 ../../../AMDGPUUsage.rst:9040
#: ../../../AMDGPUUsage.rst:9225 ../../../AMDGPUUsage.rst:9361
#: ../../../AMDGPUUsage.rst:9484 ../../../AMDGPUUsage.rst:9776
#: ../../../AMDGPUUsage.rst:9848 ../../../AMDGPUUsage.rst:10050
#: ../../../AMDGPUUsage.rst:10366 ../../../AMDGPUUsage.rst:10476
#: ../../../AMDGPUUsage.rst:10481 ../../../AMDGPUUsage.rst:10486
msgid "agent"
msgstr ""

#: ../../../AMDGPUUsage.rst:4940 ../../../AMDGPUUsage.rst:4945
#: ../../../AMDGPUUsage.rst:4953 ../../../AMDGPUUsage.rst:4981
#: ../../../AMDGPUUsage.rst:5005 ../../../AMDGPUUsage.rst:5052
#: ../../../AMDGPUUsage.rst:5076 ../../../AMDGPUUsage.rst:5149
#: ../../../AMDGPUUsage.rst:5252 ../../../AMDGPUUsage.rst:5319
#: ../../../AMDGPUUsage.rst:5405 ../../../AMDGPUUsage.rst:5553
#: ../../../AMDGPUUsage.rst:5616 ../../../AMDGPUUsage.rst:5753
#: ../../../AMDGPUUsage.rst:5926 ../../../AMDGPUUsage.rst:6020
#: ../../../AMDGPUUsage.rst:6025 ../../../AMDGPUUsage.rst:6030
#: ../../../AMDGPUUsage.rst:6257 ../../../AMDGPUUsage.rst:6263
#: ../../../AMDGPUUsage.rst:6274 ../../../AMDGPUUsage.rst:6393
#: ../../../AMDGPUUsage.rst:6451 ../../../AMDGPUUsage.rst:6596
#: ../../../AMDGPUUsage.rst:6655 ../../../AMDGPUUsage.rst:6849
#: ../../../AMDGPUUsage.rst:7022 ../../../AMDGPUUsage.rst:7164
#: ../../../AMDGPUUsage.rst:7349 ../../../AMDGPUUsage.rst:7652
#: ../../../AMDGPUUsage.rst:7803 ../../../AMDGPUUsage.rst:8097
#: ../../../AMDGPUUsage.rst:8312 ../../../AMDGPUUsage.rst:8408
#: ../../../AMDGPUUsage.rst:8413 ../../../AMDGPUUsage.rst:8418
#: ../../../AMDGPUUsage.rst:8638 ../../../AMDGPUUsage.rst:8643
#: ../../../AMDGPUUsage.rst:8651 ../../../AMDGPUUsage.rst:8749
#: ../../../AMDGPUUsage.rst:8774 ../../../AMDGPUUsage.rst:8880
#: ../../../AMDGPUUsage.rst:8908 ../../../AMDGPUUsage.rst:9041
#: ../../../AMDGPUUsage.rst:9226 ../../../AMDGPUUsage.rst:9362
#: ../../../AMDGPUUsage.rst:9485 ../../../AMDGPUUsage.rst:9777
#: ../../../AMDGPUUsage.rst:9849 ../../../AMDGPUUsage.rst:10051
#: ../../../AMDGPUUsage.rst:10367 ../../../AMDGPUUsage.rst:10477
#: ../../../AMDGPUUsage.rst:10482 ../../../AMDGPUUsage.rst:10487
msgid "system"
msgstr ""

#: ../../../AMDGPUUsage.rst:4949 ../../../AMDGPUUsage.rst:5316
#: ../../../AMDGPUUsage.rst:5357 ../../../AMDGPUUsage.rst:6270
#: ../../../AMDGPUUsage.rst:6274 ../../../AMDGPUUsage.rst:6486
#: ../../../AMDGPUUsage.rst:7077 ../../../AMDGPUUsage.rst:7116
#: ../../../AMDGPUUsage.rst:7163 ../../../AMDGPUUsage.rst:7216
#: ../../../AMDGPUUsage.rst:7433 ../../../AMDGPUUsage.rst:8647
#: ../../../AMDGPUUsage.rst:9323 ../../../AMDGPUUsage.rst:9405
msgid "buffer/global/flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4954 ../../../AMDGPUUsage.rst:5317
#: ../../../AMDGPUUsage.rst:5498 ../../../AMDGPUUsage.rst:6280
#: ../../../AMDGPUUsage.rst:6492 ../../../AMDGPUUsage.rst:6523
#: ../../../AMDGPUUsage.rst:7083 ../../../AMDGPUUsage.rst:7121
#: ../../../AMDGPUUsage.rst:7439 ../../../AMDGPUUsage.rst:7506
#: ../../../AMDGPUUsage.rst:8652 ../../../AMDGPUUsage.rst:8828
#: ../../../AMDGPUUsage.rst:9360 ../../../AMDGPUUsage.rst:9678
msgid "ds_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:4957 ../../../AMDGPUUsage.rst:6281
#: ../../../AMDGPUUsage.rst:8655
msgid "**Acquire Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:4962
msgid "buffer/global_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:4963
msgid "ds/flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:4964 ../../../AMDGPUUsage.rst:5035
#: ../../../AMDGPUUsage.rst:5104 ../../../AMDGPUUsage.rst:5229
#: ../../../AMDGPUUsage.rst:5296 ../../../AMDGPUUsage.rst:5360
#: ../../../AMDGPUUsage.rst:5476 ../../../AMDGPUUsage.rst:5499
#: ../../../AMDGPUUsage.rst:5515 ../../../AMDGPUUsage.rst:5536
#: ../../../AMDGPUUsage.rst:5683 ../../../AMDGPUUsage.rst:5853
#: ../../../AMDGPUUsage.rst:6318 ../../../AMDGPUUsage.rst:6524
#: ../../../AMDGPUUsage.rst:7507 ../../../AMDGPUUsage.rst:8687
#: ../../../AMDGPUUsage.rst:8829 ../../../AMDGPUUsage.rst:9679
msgid "s_waitcnt lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4966 ../../../AMDGPUUsage.rst:5037
#: ../../../AMDGPUUsage.rst:5231 ../../../AMDGPUUsage.rst:5298
#: ../../../AMDGPUUsage.rst:5478 ../../../AMDGPUUsage.rst:5501
#: ../../../AMDGPUUsage.rst:5517 ../../../AMDGPUUsage.rst:5538
#: ../../../AMDGPUUsage.rst:6320 ../../../AMDGPUUsage.rst:6526
#: ../../../AMDGPUUsage.rst:7509 ../../../AMDGPUUsage.rst:8689
#: ../../../AMDGPUUsage.rst:8707 ../../../AMDGPUUsage.rst:8831
#: ../../../AMDGPUUsage.rst:9192 ../../../AMDGPUUsage.rst:9328
#: ../../../AMDGPUUsage.rst:9646 ../../../AMDGPUUsage.rst:9681
msgid "If OpenCL, omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:4967 ../../../AMDGPUUsage.rst:5038
#: ../../../AMDGPUUsage.rst:5135 ../../../AMDGPUUsage.rst:5214
#: ../../../AMDGPUUsage.rst:5502 ../../../AMDGPUUsage.rst:5539
#: ../../../AMDGPUUsage.rst:5703 ../../../AMDGPUUsage.rst:5832
#: ../../../AMDGPUUsage.rst:6302 ../../../AMDGPUUsage.rst:6321
#: ../../../AMDGPUUsage.rst:6527 ../../../AMDGPUUsage.rst:6839
#: ../../../AMDGPUUsage.rst:6918 ../../../AMDGPUUsage.rst:7510
#: ../../../AMDGPUUsage.rst:7928 ../../../AMDGPUUsage.rst:8083
#: ../../../AMDGPUUsage.rst:8193 ../../../AMDGPUUsage.rst:9124
#: ../../../AMDGPUUsage.rst:9977 ../../../AMDGPUUsage.rst:10141
msgid ""
"Must happen before any following global/generic load/load atomic/store/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:4973 ../../../AMDGPUUsage.rst:5545
#: ../../../AMDGPUUsage.rst:6353 ../../../AMDGPUUsage.rst:7571
#: ../../../AMDGPUUsage.rst:8732
msgid ""
"Ensures any following global data read is no older than a local load atomic "
"value being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:4980 ../../../AMDGPUUsage.rst:6286
#: ../../../AMDGPUUsage.rst:6369 ../../../AMDGPUUsage.rst:8660
msgid "buffer/global_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4984 ../../../AMDGPUUsage.rst:5010
#: ../../../AMDGPUUsage.rst:5054 ../../../AMDGPUUsage.rst:5081
#: ../../../AMDGPUUsage.rst:5594 ../../../AMDGPUUsage.rst:5660
#: ../../../AMDGPUUsage.rst:6373 ../../../AMDGPUUsage.rst:6431
#: ../../../AMDGPUUsage.rst:6575 ../../../AMDGPUUsage.rst:6634
#: ../../../AMDGPUUsage.rst:7631 ../../../AMDGPUUsage.rst:7782
msgid "Must happen before following buffer_wbinvl1_vol."
msgstr ""

#: ../../../AMDGPUUsage.rst:4987 ../../../AMDGPUUsage.rst:6376
#: ../../../AMDGPUUsage.rst:6400
msgid "Ensures the load has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:4992 ../../../AMDGPUUsage.rst:5018
#: ../../../AMDGPUUsage.rst:5063 ../../../AMDGPUUsage.rst:5090
#: ../../../AMDGPUUsage.rst:5212 ../../../AMDGPUUsage.rst:5603
#: ../../../AMDGPUUsage.rst:5669 ../../../AMDGPUUsage.rst:5830
#: ../../../AMDGPUUsage.rst:6298 ../../../AMDGPUUsage.rst:6360
#: ../../../AMDGPUUsage.rst:6381 ../../../AMDGPUUsage.rst:6439
#: ../../../AMDGPUUsage.rst:6505 ../../../AMDGPUUsage.rst:6563
#: ../../../AMDGPUUsage.rst:6584 ../../../AMDGPUUsage.rst:6643
#: ../../../AMDGPUUsage.rst:6762 ../../../AMDGPUUsage.rst:6837
#: ../../../AMDGPUUsage.rst:7493 ../../../AMDGPUUsage.rst:7578
#: ../../../AMDGPUUsage.rst:7640 ../../../AMDGPUUsage.rst:7791
#: ../../../AMDGPUUsage.rst:7992 ../../../AMDGPUUsage.rst:8081
msgid "buffer_wbinvl1_vol"
msgstr ""

#: ../../../AMDGPUUsage.rst:4994 ../../../AMDGPUUsage.rst:5020
#: ../../../AMDGPUUsage.rst:5065 ../../../AMDGPUUsage.rst:5092
#: ../../../AMDGPUUsage.rst:5605 ../../../AMDGPUUsage.rst:5671
#: ../../../AMDGPUUsage.rst:6383 ../../../AMDGPUUsage.rst:6408
#: ../../../AMDGPUUsage.rst:6441 ../../../AMDGPUUsage.rst:6471
#: ../../../AMDGPUUsage.rst:6509 ../../../AMDGPUUsage.rst:6586
#: ../../../AMDGPUUsage.rst:6611 ../../../AMDGPUUsage.rst:6645
#: ../../../AMDGPUUsage.rst:6676 ../../../AMDGPUUsage.rst:7642
#: ../../../AMDGPUUsage.rst:7718 ../../../AMDGPUUsage.rst:7793
#: ../../../AMDGPUUsage.rst:7874 ../../../AMDGPUUsage.rst:8763
#: ../../../AMDGPUUsage.rst:8790 ../../../AMDGPUUsage.rst:8897
#: ../../../AMDGPUUsage.rst:8928 ../../../AMDGPUUsage.rst:9838
#: ../../../AMDGPUUsage.rst:9913
msgid ""
"Must happen before any following global/generic load/load atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:4999 ../../../AMDGPUUsage.rst:5025
#: ../../../AMDGPUUsage.rst:5070 ../../../AMDGPUUsage.rst:5097
#: ../../../AMDGPUUsage.rst:5219 ../../../AMDGPUUsage.rst:5610
#: ../../../AMDGPUUsage.rst:5676 ../../../AMDGPUUsage.rst:6388
#: ../../../AMDGPUUsage.rst:6446 ../../../AMDGPUUsage.rst:6514
#: ../../../AMDGPUUsage.rst:6591 ../../../AMDGPUUsage.rst:6650
#: ../../../AMDGPUUsage.rst:6844 ../../../AMDGPUUsage.rst:7647
#: ../../../AMDGPUUsage.rst:7798 ../../../AMDGPUUsage.rst:8768
#: ../../../AMDGPUUsage.rst:8795 ../../../AMDGPUUsage.rst:8902
#: ../../../AMDGPUUsage.rst:8933 ../../../AMDGPUUsage.rst:9129
#: ../../../AMDGPUUsage.rst:9843 ../../../AMDGPUUsage.rst:9918
msgid "Ensures that following loads will not see stale global data."
msgstr ""

#: ../../../AMDGPUUsage.rst:5004 ../../../AMDGPUUsage.rst:6334
#: ../../../AMDGPUUsage.rst:6423 ../../../AMDGPUUsage.rst:6451
#: ../../../AMDGPUUsage.rst:8713
msgid "flat_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:5005 ../../../AMDGPUUsage.rst:5076
#: ../../../AMDGPUUsage.rst:5655 ../../../AMDGPUUsage.rst:6424
#: ../../../AMDGPUUsage.rst:6452 ../../../AMDGPUUsage.rst:6627
#: ../../../AMDGPUUsage.rst:6656 ../../../AMDGPUUsage.rst:7775
#: ../../../AMDGPUUsage.rst:7855 ../../../AMDGPUUsage.rst:8774
msgid "s_waitcnt vmcnt(0) & lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5008 ../../../AMDGPUUsage.rst:6429
#: ../../../AMDGPUUsage.rst:6457 ../../../AMDGPUUsage.rst:8777
msgid "If OpenCL omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5013 ../../../AMDGPUUsage.rst:6434
msgid "Ensures the flat_load has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:5030 ../../../AMDGPUUsage.rst:5293
#: ../../../AMDGPUUsage.rst:5473 ../../../AMDGPUUsage.rst:8800
#: ../../../AMDGPUUsage.rst:9273 ../../../AMDGPUUsage.rst:9558
msgid "buffer/global/ds/flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:5033 ../../../AMDGPUUsage.rst:5051
#: ../../../AMDGPUUsage.rst:5496 ../../../AMDGPUUsage.rst:5591
#: ../../../AMDGPUUsage.rst:6493 ../../../AMDGPUUsage.rst:6572
#: ../../../AMDGPUUsage.rst:6596 ../../../AMDGPUUsage.rst:7478
#: ../../../AMDGPUUsage.rst:7628 ../../../AMDGPUUsage.rst:7703
#: ../../../AMDGPUUsage.rst:8803 ../../../AMDGPUUsage.rst:8879
#: ../../../AMDGPUUsage.rst:9615 ../../../AMDGPUUsage.rst:9820
msgid "buffer/global_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:5034
msgid "ds/flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:5044 ../../../AMDGPUUsage.rst:6556
#: ../../../AMDGPUUsage.rst:8863
msgid ""
"Ensures any following global data read is no older than a local atomicrmw "
"value being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:5057 ../../../AMDGPUUsage.rst:5084
#: ../../../AMDGPUUsage.rst:5597 ../../../AMDGPUUsage.rst:5663
#: ../../../AMDGPUUsage.rst:6500 ../../../AMDGPUUsage.rst:6578
#: ../../../AMDGPUUsage.rst:6637 ../../../AMDGPUUsage.rst:7634
#: ../../../AMDGPUUsage.rst:7785
msgid "Ensures the atomicrmw has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:5075 ../../../AMDGPUUsage.rst:5535
#: ../../../AMDGPUUsage.rst:5654 ../../../AMDGPUUsage.rst:6540
#: ../../../AMDGPUUsage.rst:6626 ../../../AMDGPUUsage.rst:6655
#: ../../../AMDGPUUsage.rst:7555 ../../../AMDGPUUsage.rst:7774
#: ../../../AMDGPUUsage.rst:7854 ../../../AMDGPUUsage.rst:8850
#: ../../../AMDGPUUsage.rst:8907 ../../../AMDGPUUsage.rst:9749
#: ../../../AMDGPUUsage.rst:9892
msgid "flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:5079 ../../../AMDGPUUsage.rst:5321
#: ../../../AMDGPUUsage.rst:5555 ../../../AMDGPUUsage.rst:5618
#: ../../../AMDGPUUsage.rst:5658 ../../../AMDGPUUsage.rst:6345
#: ../../../AMDGPUUsage.rst:6547 ../../../AMDGPUUsage.rst:6632
#: ../../../AMDGPUUsage.rst:6661 ../../../AMDGPUUsage.rst:6947
#: ../../../AMDGPUUsage.rst:7090 ../../../AMDGPUUsage.rst:7127
#: ../../../AMDGPUUsage.rst:7179 ../../../AMDGPUUsage.rst:7446
#: ../../../AMDGPUUsage.rst:7529 ../../../AMDGPUUsage.rst:7561
#: ../../../AMDGPUUsage.rst:7592 ../../../AMDGPUUsage.rst:7667
#: ../../../AMDGPUUsage.rst:7738 ../../../AMDGPUUsage.rst:7780
#: ../../../AMDGPUUsage.rst:7818 ../../../AMDGPUUsage.rst:7860
#: ../../../AMDGPUUsage.rst:8723 ../../../AMDGPUUsage.rst:8856
#: ../../../AMDGPUUsage.rst:8911 ../../../AMDGPUUsage.rst:9145
#: ../../../AMDGPUUsage.rst:9282 ../../../AMDGPUUsage.rst:9364
#: ../../../AMDGPUUsage.rst:9567 ../../../AMDGPUUsage.rst:9708
#: ../../../AMDGPUUsage.rst:9756 ../../../AMDGPUUsage.rst:9779
#: ../../../AMDGPUUsage.rst:9851 ../../../AMDGPUUsage.rst:9896
msgid "If OpenCL, omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5102 ../../../AMDGPUUsage.rst:5104
#: ../../../AMDGPUUsage.rst:5148 ../../../AMDGPUUsage.rst:5358
#: ../../../AMDGPUUsage.rst:5360 ../../../AMDGPUUsage.rst:5404
#: ../../../AMDGPUUsage.rst:5681 ../../../AMDGPUUsage.rst:5683
#: ../../../AMDGPUUsage.rst:5752 ../../../AMDGPUUsage.rst:6026
#: ../../../AMDGPUUsage.rst:6691 ../../../AMDGPUUsage.rst:6693
#: ../../../AMDGPUUsage.rst:6771 ../../../AMDGPUUsage.rst:6849
#: ../../../AMDGPUUsage.rst:7217 ../../../AMDGPUUsage.rst:7219
#: ../../../AMDGPUUsage.rst:7280 ../../../AMDGPUUsage.rst:7349
#: ../../../AMDGPUUsage.rst:7889 ../../../AMDGPUUsage.rst:7891
#: ../../../AMDGPUUsage.rst:8001 ../../../AMDGPUUsage.rst:8097
#: ../../../AMDGPUUsage.rst:8414 ../../../AMDGPUUsage.rst:8938
#: ../../../AMDGPUUsage.rst:8940 ../../../AMDGPUUsage.rst:9040
#: ../../../AMDGPUUsage.rst:9406 ../../../AMDGPUUsage.rst:9408
#: ../../../AMDGPUUsage.rst:9484 ../../../AMDGPUUsage.rst:9923
#: ../../../AMDGPUUsage.rst:9925 ../../../AMDGPUUsage.rst:10050
#: ../../../AMDGPUUsage.rst:10483
msgid "fence"
msgstr ""

#: ../../../AMDGPUUsage.rst:5106 ../../../AMDGPUUsage.rst:5362
#: ../../../AMDGPUUsage.rst:5685
msgid "If OpenCL and address space is not generic, omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:5109 ../../../AMDGPUUsage.rst:5365
#: ../../../AMDGPUUsage.rst:5415 ../../../AMDGPUUsage.rst:6707
#: ../../../AMDGPUUsage.rst:7233 ../../../AMDGPUUsage.rst:7293
#: ../../../AMDGPUUsage.rst:7375 ../../../AMDGPUUsage.rst:8954
#: ../../../AMDGPUUsage.rst:9422 ../../../AMDGPUUsage.rst:9495
msgid ""
"However, since LLVM currently has no address space on the fence need to "
"conservatively always generate. If fence had an address space then set to "
"address space of OpenCL fence flag, or to generic if both local and global "
"flags are specified."
msgstr ""

#: ../../../AMDGPUUsage.rst:5124
msgid ""
"Must happen after any preceding local/generic load atomic/atomicrmw with an "
"equal or wider sync scope and memory ordering stronger than unordered (this "
"is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5141 ../../../AMDGPUUsage.rst:6755
msgid ""
"Ensures any following global data read is no older than the value read by "
"the fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:5148 ../../../AMDGPUUsage.rst:5251
#: ../../../AMDGPUUsage.rst:5318 ../../../AMDGPUUsage.rst:5404
#: ../../../AMDGPUUsage.rst:5552 ../../../AMDGPUUsage.rst:5615
#: ../../../AMDGPUUsage.rst:5752 ../../../AMDGPUUsage.rst:5925
#: ../../../AMDGPUUsage.rst:6771 ../../../AMDGPUUsage.rst:6849
#: ../../../AMDGPUUsage.rst:6978 ../../../AMDGPUUsage.rst:7032
#: ../../../AMDGPUUsage.rst:7122 ../../../AMDGPUUsage.rst:7174
#: ../../../AMDGPUUsage.rst:7280 ../../../AMDGPUUsage.rst:7362
#: ../../../AMDGPUUsage.rst:7556 ../../../AMDGPUUsage.rst:7587
#: ../../../AMDGPUUsage.rst:7662 ../../../AMDGPUUsage.rst:7733
#: ../../../AMDGPUUsage.rst:7813 ../../../AMDGPUUsage.rst:8001
#: ../../../AMDGPUUsage.rst:8110 ../../../AMDGPUUsage.rst:8311
#: ../../../AMDGPUUsage.rst:8718
msgid "s_waitcnt lgkmcnt(0) & vmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5151 ../../../AMDGPUUsage.rst:5254
#: ../../../AMDGPUUsage.rst:5407 ../../../AMDGPUUsage.rst:5755
#: ../../../AMDGPUUsage.rst:6699 ../../../AMDGPUUsage.rst:6776
#: ../../../AMDGPUUsage.rst:6854 ../../../AMDGPUUsage.rst:6983
#: ../../../AMDGPUUsage.rst:7037 ../../../AMDGPUUsage.rst:7225
#: ../../../AMDGPUUsage.rst:7285 ../../../AMDGPUUsage.rst:7367
#: ../../../AMDGPUUsage.rst:7897 ../../../AMDGPUUsage.rst:8006
#: ../../../AMDGPUUsage.rst:8115 ../../../AMDGPUUsage.rst:8946
#: ../../../AMDGPUUsage.rst:9043 ../../../AMDGPUUsage.rst:9228
#: ../../../AMDGPUUsage.rst:9414 ../../../AMDGPUUsage.rst:9487
#: ../../../AMDGPUUsage.rst:9931 ../../../AMDGPUUsage.rst:10053
msgid "If OpenCL and address space is not generic, omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5155 ../../../AMDGPUUsage.rst:5688
#: ../../../AMDGPUUsage.rst:5759 ../../../AMDGPUUsage.rst:6780
#: ../../../AMDGPUUsage.rst:6858 ../../../AMDGPUUsage.rst:7905
#: ../../../AMDGPUUsage.rst:8010 ../../../AMDGPUUsage.rst:8119
#: ../../../AMDGPUUsage.rst:9051 ../../../AMDGPUUsage.rst:9939
#: ../../../AMDGPUUsage.rst:10061
msgid ""
"However, since LLVM currently has no address space on the fence need to "
"conservatively always generate (see comment for previous fence)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5163 ../../../AMDGPUUsage.rst:5258
#: ../../../AMDGPUUsage.rst:5323 ../../../AMDGPUUsage.rst:5430
#: ../../../AMDGPUUsage.rst:5557 ../../../AMDGPUUsage.rst:5620
#: ../../../AMDGPUUsage.rst:5767 ../../../AMDGPUUsage.rst:5928
#: ../../../AMDGPUUsage.rst:6788 ../../../AMDGPUUsage.rst:6866
#: ../../../AMDGPUUsage.rst:6987 ../../../AMDGPUUsage.rst:7041
#: ../../../AMDGPUUsage.rst:7129 ../../../AMDGPUUsage.rst:7181
#: ../../../AMDGPUUsage.rst:7308 ../../../AMDGPUUsage.rst:7390
#: ../../../AMDGPUUsage.rst:7594 ../../../AMDGPUUsage.rst:7669
#: ../../../AMDGPUUsage.rst:7740 ../../../AMDGPUUsage.rst:7820
#: ../../../AMDGPUUsage.rst:8018 ../../../AMDGPUUsage.rst:8127
#: ../../../AMDGPUUsage.rst:8316
msgid ""
"Could be split into separate s_waitcnt vmcnt(0) and s_waitcnt lgkmcnt(0) to "
"allow them to be independently moved according to the following rules."
msgstr ""

#: ../../../AMDGPUUsage.rst:5172 ../../../AMDGPUUsage.rst:6797
#: ../../../AMDGPUUsage.rst:6875
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load "
"atomic/atomicrmw with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5184 ../../../AMDGPUUsage.rst:6735
#: ../../../AMDGPUUsage.rst:6809 ../../../AMDGPUUsage.rst:6887
#: ../../../AMDGPUUsage.rst:9003 ../../../AMDGPUUsage.rst:9093
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding local/generic load "
"atomic/atomicrmw with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5196 ../../../AMDGPUUsage.rst:5790
#: ../../../AMDGPUUsage.rst:6295 ../../../AMDGPUUsage.rst:6498
#: ../../../AMDGPUUsage.rst:6821 ../../../AMDGPUUsage.rst:7483
#: ../../../AMDGPUUsage.rst:7976 ../../../AMDGPUUsage.rst:8041
msgid "Must happen before the following buffer_wbinvl1_vol."
msgstr ""

#: ../../../AMDGPUUsage.rst:5199 ../../../AMDGPUUsage.rst:6824
#: ../../../AMDGPUUsage.rst:6902 ../../../AMDGPUUsage.rst:9018
msgid ""
"Ensures that the fence-paired atomic has completed before invalidating the "
"cache. Therefore any following locations read must be no older than the "
"value read by the fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:5224 ../../../AMDGPUUsage.rst:6932
#: ../../../AMDGPUUsage.rst:9134
msgid "**Release Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:5226 ../../../AMDGPUUsage.rst:9136
msgid "buffer/global/ds/flat_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:5232 ../../../AMDGPUUsage.rst:5299
#: ../../../AMDGPUUsage.rst:5479 ../../../AMDGPUUsage.rst:5518
#: ../../../AMDGPUUsage.rst:7448 ../../../AMDGPUUsage.rst:9569
msgid ""
"Must happen after any preceding local/generic load/store/load atomic/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:5238 ../../../AMDGPUUsage.rst:5281
#: ../../../AMDGPUUsage.rst:6961 ../../../AMDGPUUsage.rst:7010
#: ../../../AMDGPUUsage.rst:7064 ../../../AMDGPUUsage.rst:9176
#: ../../../AMDGPUUsage.rst:9213 ../../../AMDGPUUsage.rst:9261
#: ../../../AMDGPUUsage.rst:9349 ../../../AMDGPUUsage.rst:9667
msgid "Must happen before the following store."
msgstr ""

#: ../../../AMDGPUUsage.rst:5241
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:5267 ../../../AMDGPUUsage.rst:5332
#: ../../../AMDGPUUsage.rst:5439 ../../../AMDGPUUsage.rst:5566
#: ../../../AMDGPUUsage.rst:5629 ../../../AMDGPUUsage.rst:5776
#: ../../../AMDGPUUsage.rst:6996 ../../../AMDGPUUsage.rst:7050
#: ../../../AMDGPUUsage.rst:7138 ../../../AMDGPUUsage.rst:7190
#: ../../../AMDGPUUsage.rst:7317 ../../../AMDGPUUsage.rst:7399
#: ../../../AMDGPUUsage.rst:7603 ../../../AMDGPUUsage.rst:7678
#: ../../../AMDGPUUsage.rst:7749 ../../../AMDGPUUsage.rst:7829
#: ../../../AMDGPUUsage.rst:8027 ../../../AMDGPUUsage.rst:8136
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load/store/"
"load atomic/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:5274 ../../../AMDGPUUsage.rst:5339
#: ../../../AMDGPUUsage.rst:5446 ../../../AMDGPUUsage.rst:5573
#: ../../../AMDGPUUsage.rst:5636 ../../../AMDGPUUsage.rst:5783
#: ../../../AMDGPUUsage.rst:6954 ../../../AMDGPUUsage.rst:7003
#: ../../../AMDGPUUsage.rst:7057 ../../../AMDGPUUsage.rst:7098
#: ../../../AMDGPUUsage.rst:7145 ../../../AMDGPUUsage.rst:7197
#: ../../../AMDGPUUsage.rst:7324 ../../../AMDGPUUsage.rst:7406
#: ../../../AMDGPUUsage.rst:7460 ../../../AMDGPUUsage.rst:7537
#: ../../../AMDGPUUsage.rst:7610 ../../../AMDGPUUsage.rst:7685
#: ../../../AMDGPUUsage.rst:7756 ../../../AMDGPUUsage.rst:7836
#: ../../../AMDGPUUsage.rst:8034 ../../../AMDGPUUsage.rst:8143
#: ../../../AMDGPUUsage.rst:9169 ../../../AMDGPUUsage.rst:9254
#: ../../../AMDGPUUsage.rst:9305 ../../../AMDGPUUsage.rst:9387
#: ../../../AMDGPUUsage.rst:9531 ../../../AMDGPUUsage.rst:9597
#: ../../../AMDGPUUsage.rst:9731 ../../../AMDGPUUsage.rst:9802
#: ../../../AMDGPUUsage.rst:9874 ../../../AMDGPUUsage.rst:10091
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding local/generic load/"
"store/load atomic/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:5284 ../../../AMDGPUUsage.rst:7013
msgid ""
"Ensures that all memory operations to memory have completed before "
"performing the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:5305 ../../../AMDGPUUsage.rst:5346
#: ../../../AMDGPUUsage.rst:5485 ../../../AMDGPUUsage.rst:5524
#: ../../../AMDGPUUsage.rst:5580 ../../../AMDGPUUsage.rst:5643
#: ../../../AMDGPUUsage.rst:7105 ../../../AMDGPUUsage.rst:7152
#: ../../../AMDGPUUsage.rst:7204 ../../../AMDGPUUsage.rst:7467
#: ../../../AMDGPUUsage.rst:7544 ../../../AMDGPUUsage.rst:7617
#: ../../../AMDGPUUsage.rst:7692 ../../../AMDGPUUsage.rst:7763
#: ../../../AMDGPUUsage.rst:7843 ../../../AMDGPUUsage.rst:9312
#: ../../../AMDGPUUsage.rst:9394 ../../../AMDGPUUsage.rst:9604
#: ../../../AMDGPUUsage.rst:9738 ../../../AMDGPUUsage.rst:9809
#: ../../../AMDGPUUsage.rst:9881
msgid "Must happen before the following atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:5308 ../../../AMDGPUUsage.rst:5488
#: ../../../AMDGPUUsage.rst:5527
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:5349 ../../../AMDGPUUsage.rst:7155
#: ../../../AMDGPUUsage.rst:9397
msgid ""
"Ensures that all memory operations to global and local have completed before "
"performing the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:5380 ../../../AMDGPUUsage.rst:5697
msgid ""
"Must happen after any preceding local/generic load/load atomic/store/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:5386 ../../../AMDGPUUsage.rst:5453
#: ../../../AMDGPUUsage.rst:7262 ../../../AMDGPUUsage.rst:7331
#: ../../../AMDGPUUsage.rst:7413 ../../../AMDGPUUsage.rst:9466
#: ../../../AMDGPUUsage.rst:9538
msgid ""
"Must happen before any following store atomic/atomicrmw with an equal or "
"wider sync scope and memory ordering stronger than unordered (this is termed "
"the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5396
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the following fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:5411 ../../../AMDGPUUsage.rst:6703
#: ../../../AMDGPUUsage.rst:7229 ../../../AMDGPUUsage.rst:7289
#: ../../../AMDGPUUsage.rst:7371 ../../../AMDGPUUsage.rst:7901
msgid "If OpenCL and address space is local, omit vmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5463 ../../../AMDGPUUsage.rst:7272
#: ../../../AMDGPUUsage.rst:7341 ../../../AMDGPUUsage.rst:7423
#: ../../../AMDGPUUsage.rst:9476 ../../../AMDGPUUsage.rst:9548
msgid ""
"Ensures that all memory operations have completed before performing the "
"following fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:5471 ../../../AMDGPUUsage.rst:7431
#: ../../../AMDGPUUsage.rst:9556
msgid "**Acquire-Release Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:5508 ../../../AMDGPUUsage.rst:6327
#: ../../../AMDGPUUsage.rst:7516 ../../../AMDGPUUsage.rst:8696
#: ../../../AMDGPUUsage.rst:9685
msgid ""
"Ensures any following global data read is no older than the local load "
"atomic value being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:5583 ../../../AMDGPUUsage.rst:5646
#: ../../../AMDGPUUsage.rst:7620 ../../../AMDGPUUsage.rst:7766
#: ../../../AMDGPUUsage.rst:9812
msgid ""
"Ensures that all memory operations to global have completed before "
"performing the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:5709
msgid ""
"Ensures that all memory operations to local have completed before performing "
"any following global memory operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:5716 ../../../AMDGPUUsage.rst:7941
#: ../../../AMDGPUUsage.rst:9990
msgid ""
"Ensures that the preceding local/generic load atomic/atomicrmw with an equal "
"or wider sync scope and memory ordering stronger than unordered (this is "
"termed the acquire-fence-paired-atomic) has completed before following "
"global memory operations. This satisfies the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:5734 ../../../AMDGPUUsage.rst:7959
#: ../../../AMDGPUUsage.rst:10008
msgid ""
"Ensures that all previous memory operations have completed before a "
"following local/generic store atomic/atomicrmw with an equal or wider sync "
"scope and memory ordering stronger than unordered (this is termed the "
"release-fence-paired-atomic). This satisfies the requirements of release."
msgstr ""

#: ../../../AMDGPUUsage.rst:5793 ../../../AMDGPUUsage.rst:8044
#: ../../../AMDGPUUsage.rst:8153
msgid ""
"Ensures that the preceding global/local/generic load atomic/atomicrmw with "
"an equal or wider sync scope and memory ordering stronger than unordered "
"(this is termed the acquire-fence-paired-atomic) has completed before "
"invalidating the cache. This satisfies the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:5811 ../../../AMDGPUUsage.rst:8062
#: ../../../AMDGPUUsage.rst:8171 ../../../AMDGPUUsage.rst:10119
msgid ""
"Ensures that all previous memory operations have completed before a "
"following global/local/generic store atomic/atomicrmw with an equal or wider "
"sync scope and memory ordering stronger than unordered (this is termed the "
"release-fence-paired-atomic). This satisfies the requirements of release."
msgstr ""

#: ../../../AMDGPUUsage.rst:5838 ../../../AMDGPUUsage.rst:8089
#: ../../../AMDGPUUsage.rst:10147
msgid ""
"Ensures that following loads will not see stale global data. This satisfies "
"the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:5846 ../../../AMDGPUUsage.rst:8209
#: ../../../AMDGPUUsage.rst:10155
msgid "**Sequential Consistent Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:5848 ../../../AMDGPUUsage.rst:5919
#: ../../../AMDGPUUsage.rst:8211 ../../../AMDGPUUsage.rst:8305
#: ../../../AMDGPUUsage.rst:10157
msgid ""
"*Same as corresponding load atomic acquire, except must generated all "
"instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:5856
msgid ""
"Must happen after preceding local/generic load atomic/store atomic/atomicrmw "
"with memory ordering of seq_cst and with equal or wider sync scope. (Note "
"that seq_cst fences have their own s_waitcnt lgkmcnt(0) and so do not need "
"to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5872
msgid ""
"Ensures any preceding sequential consistent local memory instructions have "
"completed before executing this sequentially consistent instruction. This "
"prevents reordering a seq_cst store followed by a seq_cst load. (Note that "
"seq_cst is stronger than acquire/release as the reordering of load acquire "
"followed by a store release is prevented by the s_waitcnt of the release, "
"but there is nothing preventing a store release followed by load acquire "
"from completing out of order. The s_waitcnt could be placed after seq_store "
"or before the seq_load. We choose the load to make the s_waitcnt be as late "
"as possible so that the store may have already completed.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5912 ../../../AMDGPUUsage.rst:6009
#: ../../../AMDGPUUsage.rst:8294 ../../../AMDGPUUsage.rst:8397
#: ../../../AMDGPUUsage.rst:10265 ../../../AMDGPUUsage.rst:10358
#: ../../../AMDGPUUsage.rst:10466
msgid ""
"*Following instructions same as corresponding load atomic acquire, except "
"must generated all instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:5937 ../../../AMDGPUUsage.rst:8325
msgid ""
"s_waitcnt lgkmcnt(0) must happen after preceding global/generic load atomic/"
"store atomic/atomicrmw with memory ordering of seq_cst and with equal or "
"wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"lgkmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5953 ../../../AMDGPUUsage.rst:8238
#: ../../../AMDGPUUsage.rst:8341
msgid ""
"s_waitcnt vmcnt(0) must happen after preceding global/generic load atomic/"
"store atomic/atomicrmw with memory ordering of seq_cst and with equal or "
"wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"vmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5969 ../../../AMDGPUUsage.rst:8357
#: ../../../AMDGPUUsage.rst:10318 ../../../AMDGPUUsage.rst:10426
msgid ""
"Ensures any preceding sequential consistent global memory instructions have "
"completed before executing this sequentially consistent instruction. This "
"prevents reordering a seq_cst store followed by a seq_cst load. (Note that "
"seq_cst is stronger than acquire/release as the reordering of load acquire "
"followed by a store release is prevented by the s_waitcnt of the release, "
"but there is nothing preventing a store release followed by load acquire "
"from completing out of order. The s_waitcnt could be placed after seq_store "
"or before the seq_load. We choose the load to make the s_waitcnt be as late "
"as possible so that the store may have already completed.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6016 ../../../AMDGPUUsage.rst:8404
#: ../../../AMDGPUUsage.rst:10473
msgid ""
"*Same as corresponding store atomic release, except must generated all "
"instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:6021 ../../../AMDGPUUsage.rst:8409
#: ../../../AMDGPUUsage.rst:10478
msgid ""
"*Same as corresponding atomicrmw acq_rel, except must generated all "
"instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:6026 ../../../AMDGPUUsage.rst:8414
#: ../../../AMDGPUUsage.rst:10483
msgid ""
"*Same as corresponding fence acq_rel, except must generated all instructions "
"even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:6036
msgid "Memory Model GFX90A"
msgstr ""

#: ../../../AMDGPUUsage.rst:6038
msgid "For GFX90A:"
msgstr ""

#: ../../../AMDGPUUsage.rst:6043
msgid ""
"The wavefronts for a single work-group are executed in the same CU but may "
"be executed by different SIMDs. The exception is when in tgsplit execution "
"mode when the wavefronts may be executed by different SIMDs in different CUs."
msgstr ""

#: ../../../AMDGPUUsage.rst:6046
msgid ""
"Each CU has a single LDS memory shared by the wavefronts of the work-groups "
"executing on it. The exception is when in tgsplit execution mode when no LDS "
"is allocated as wavefronts of the same work-group can be in different CUs."
msgstr ""

#: ../../../AMDGPUUsage.rst:6060
msgid ""
"The vector memory operations are performed as wavefront wide operations and "
"completion is reported to a wavefront in execution order. The exception is "
"that ``flat_load/store/atomic`` instructions can report out of vector memory "
"order if they access LDS memory, and out of LDS operation order if they "
"access global memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:6065
msgid ""
"The vector memory operations access a single vector L1 cache shared by all "
"SIMDs a CU. Therefore:"
msgstr ""

#: ../../../AMDGPUUsage.rst:6068
msgid ""
"No special action is required for coherence between the lanes of a single "
"wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:6071
msgid ""
"No special action is required for coherence between wavefronts in the same "
"work-group since they execute on the same CU. The exception is when in "
"tgsplit execution mode as wavefronts of the same work-group can be in "
"different CUs and so a ``buffer_wbinvl1_vol`` is required as described in "
"the following item."
msgstr ""

#: ../../../AMDGPUUsage.rst:6077
msgid ""
"A ``buffer_wbinvl1_vol`` is required for coherence between wavefronts "
"executing in different work-groups as they may be executing on different CUs."
msgstr ""

#: ../../../AMDGPUUsage.rst:6090
msgid ""
"Each CU has a separate request queue per channel. Therefore, the vector and "
"scalar memory operations performed by wavefronts executing in different work-"
"groups (which may be executing on different CUs), or the same work-group if "
"executing in tgsplit mode, of an agent can be reordered relative to each "
"other. A ``s_waitcnt vmcnt(0)`` is required to ensure synchronization "
"between vector memory operations of different CUs. It ensures a previous "
"vector memory operation has completed before executing a subsequent vector "
"memory or LDS operation and so can be used to meet the requirements of "
"acquire and release."
msgstr ""

#: ../../../AMDGPUUsage.rst:6099
msgid ""
"The L2 cache of one agent can be kept coherent with other agents by: using "
"the MTYPE RW (read-write) or MTYPE CC (cache-coherent) with the PTE C-bit "
"for memory local to the L2; and using the MTYPE NC (non-coherent) with the "
"PTE C-bit set or MTYPE UC (uncached) for memory not local to the L2."
msgstr ""

#: ../../../AMDGPUUsage.rst:6104
msgid ""
"Any local memory cache lines will be automatically invalidated by writes "
"from CUs associated with other L2 caches, or writes from the CPU, due to the "
"cache probe caused by coherent requests. Coherent requests are caused by GPU "
"accesses to pages with the PTE C-bit set, by CPU accesses over XGMI, and by "
"PCIe requests that are configured to be coherent requests."
msgstr ""

#: ../../../AMDGPUUsage.rst:6109
msgid ""
"XGMI accesses from the CPU to local memory may be cached on the CPU. "
"Subsequent access from the GPU will automatically invalidate or writeback "
"the CPU cache due to the L2 probe filter and and the PTE C-bit being set."
msgstr ""

#: ../../../AMDGPUUsage.rst:6112
msgid ""
"Since all work-groups on the same agent share the same L2, no L2 "
"invalidation or writeback is required for coherence."
msgstr ""

#: ../../../AMDGPUUsage.rst:6114
msgid ""
"To ensure coherence of local and remote memory writes of work-groups in "
"different agents a ``buffer_wbl2`` is required. It will writeback dirty L2 "
"cache lines of MTYPE RW (used for local coarse grain memory) and MTYPE NC "
"()used for remote coarse grain memory). Note that MTYPE CC (used for local "
"fine grain memory) causes write through to DRAM, and MTYPE UC (used for "
"remote fine grain memory) bypasses the L2, so both will never result in "
"dirty L2 cache lines."
msgstr ""

#: ../../../AMDGPUUsage.rst:6121
msgid ""
"To ensure coherence of local and remote memory reads of work-groups in "
"different agents a ``buffer_invl2`` is required. It will invalidate L2 cache "
"lines with MTYPE NC (used for remote coarse grain memory). Note that MTYPE "
"CC (used for local fine grain memory) and MTYPE RW (used for local coarse "
"memory) cause local reads to be invalidated by remote writes with with the "
"PTE C-bit so these cache lines are not invalidated. Note that MTYPE UC (used "
"for remote fine grain memory) bypasses the L2, so will never result in L2 "
"cache lines that need to be invalidated."
msgstr ""

#: ../../../AMDGPUUsage.rst:6130
msgid ""
"PCIe access from the GPU to the CPU memory is kept coherent by using the "
"MTYPE UC (uncached) which bypasses the L2."
msgstr ""

#: ../../../AMDGPUUsage.rst:6154
msgid ""
"On dGPU over XGMI or PCIe the kernarg backing memory is allocated in host "
"memory accessed as MTYPE UC (uncached) to avoid needing to invalidate the L2 "
"cache. This also causes it to be treated as non-volatile and so is not "
"invalidated by ``*_vol``."
msgstr ""

#: ../../../AMDGPUUsage.rst:6158 ../../../AMDGPUUsage.rst:8520
msgid ""
"On APU the kernarg backing memory is accessed as MTYPE CC (cache coherent) "
"and so the L2 cache will be coherent with the CPU and other agents."
msgstr ""

#: ../../../AMDGPUUsage.rst:6167
msgid ""
"The code sequences used to implement the memory model for GFX90A are defined "
"in table :ref:`amdgpu-amdhsa-memory-model-code-sequences-gfx90a-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6170
msgid "AMDHSA Memory Model Code Sequences GFX90A"
msgstr ""

#: ../../../AMDGPUUsage.rst:6174
msgid "AMDGPU Machine Code GFX90A"
msgstr ""

#: ../../../AMDGPUUsage.rst:6247 ../../../AMDGPUUsage.rst:6288
#: ../../../AMDGPUUsage.rst:6336
msgid "If not TgSplit execution mode, omit glc=1."
msgstr ""

#: ../../../AMDGPUUsage.rst:6250 ../../../AMDGPUUsage.rst:6265
#: ../../../AMDGPUUsage.rst:6276 ../../../AMDGPUUsage.rst:6313
#: ../../../AMDGPUUsage.rst:6488 ../../../AMDGPUUsage.rst:6519
#: ../../../AMDGPUUsage.rst:6936 ../../../AMDGPUUsage.rst:6973
#: ../../../AMDGPUUsage.rst:7079 ../../../AMDGPUUsage.rst:7117
#: ../../../AMDGPUUsage.rst:7435 ../../../AMDGPUUsage.rst:7502
#: ../../../AMDGPUUsage.rst:8301
msgid "*If TgSplit execution mode, local address space cannot be used.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:6293 ../../../AMDGPUUsage.rst:6300
#: ../../../AMDGPUUsage.rst:6362 ../../../AMDGPUUsage.rst:6496
#: ../../../AMDGPUUsage.rst:6507 ../../../AMDGPUUsage.rst:6565
#: ../../../AMDGPUUsage.rst:6764 ../../../AMDGPUUsage.rst:7481
#: ../../../AMDGPUUsage.rst:7495 ../../../AMDGPUUsage.rst:7580
#: ../../../AMDGPUUsage.rst:7994
msgid "If not TgSplit execution mode, omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:6308 ../../../AMDGPUUsage.rst:6364
#: ../../../AMDGPUUsage.rst:6567 ../../../AMDGPUUsage.rst:6766
#: ../../../AMDGPUUsage.rst:7497 ../../../AMDGPUUsage.rst:7582
#: ../../../AMDGPUUsage.rst:7996 ../../../AMDGPUUsage.rst:8681
#: ../../../AMDGPUUsage.rst:8708 ../../../AMDGPUUsage.rst:8743
#: ../../../AMDGPUUsage.rst:8823 ../../../AMDGPUUsage.rst:8845
#: ../../../AMDGPUUsage.rst:8874 ../../../AMDGPUUsage.rst:9035
#: ../../../AMDGPUUsage.rst:9637 ../../../AMDGPUUsage.rst:9697
#: ../../../AMDGPUUsage.rst:9771 ../../../AMDGPUUsage.rst:10045
msgid "Ensures that following loads will not see stale data."
msgstr ""

#: ../../../AMDGPUUsage.rst:6339 ../../../AMDGPUUsage.rst:6541
#: ../../../AMDGPUUsage.rst:6693 ../../../AMDGPUUsage.rst:6941
#: ../../../AMDGPUUsage.rst:7084 ../../../AMDGPUUsage.rst:7219
#: ../../../AMDGPUUsage.rst:7440 ../../../AMDGPUUsage.rst:7523
#: ../../../AMDGPUUsage.rst:7891 ../../../AMDGPUUsage.rst:8216
msgid "s_waitcnt lgkm/vmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6341 ../../../AMDGPUUsage.rst:6543
#: ../../../AMDGPUUsage.rst:6695 ../../../AMDGPUUsage.rst:6943
#: ../../../AMDGPUUsage.rst:7086 ../../../AMDGPUUsage.rst:7221
#: ../../../AMDGPUUsage.rst:7442 ../../../AMDGPUUsage.rst:7525
#: ../../../AMDGPUUsage.rst:7893 ../../../AMDGPUUsage.rst:8218
msgid ""
"Use lgkmcnt(0) if not TgSplit execution mode and vmcnt(0) if TgSplit "
"execution mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:6346 ../../../AMDGPUUsage.rst:6548
#: ../../../AMDGPUUsage.rst:6747 ../../../AMDGPUUsage.rst:7563
msgid ""
"Must happen before the following buffer_wbinvl1_vol and any following global/"
"generic load/load atomic/store/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:6397 ../../../AMDGPUUsage.rst:6459
#: ../../../AMDGPUUsage.rst:6599 ../../../AMDGPUUsage.rst:6663
#: ../../../AMDGPUUsage.rst:7706 ../../../AMDGPUUsage.rst:7862
msgid "Must happen before following buffer_invl2 and buffer_wbinvl1_vol."
msgstr ""

#: ../../../AMDGPUUsage.rst:6405 ../../../AMDGPUUsage.rst:6468
#: ../../../AMDGPUUsage.rst:6608 ../../../AMDGPUUsage.rst:6673
#: ../../../AMDGPUUsage.rst:6915 ../../../AMDGPUUsage.rst:7715
#: ../../../AMDGPUUsage.rst:7871 ../../../AMDGPUUsage.rst:8190
msgid "buffer_invl2; buffer_wbinvl1_vol"
msgstr ""

#: ../../../AMDGPUUsage.rst:6413 ../../../AMDGPUUsage.rst:6476
#: ../../../AMDGPUUsage.rst:6616 ../../../AMDGPUUsage.rst:6681
#: ../../../AMDGPUUsage.rst:6923 ../../../AMDGPUUsage.rst:7723
#: ../../../AMDGPUUsage.rst:7879 ../../../AMDGPUUsage.rst:8199
msgid ""
"Ensures that following loads will not see stale L1 global data, nor see "
"stale L2 MTYPE NC global data. MTYPE RW and CC memory will never be stale in "
"L2 due to the memory probes."
msgstr ""

#: ../../../AMDGPUUsage.rst:6427 ../../../AMDGPUUsage.rst:6455
#: ../../../AMDGPUUsage.rst:6630 ../../../AMDGPUUsage.rst:6659
#: ../../../AMDGPUUsage.rst:6774 ../../../AMDGPUUsage.rst:6852
#: ../../../AMDGPUUsage.rst:6981 ../../../AMDGPUUsage.rst:7035
#: ../../../AMDGPUUsage.rst:7125 ../../../AMDGPUUsage.rst:7177
#: ../../../AMDGPUUsage.rst:7283 ../../../AMDGPUUsage.rst:7365
#: ../../../AMDGPUUsage.rst:7590 ../../../AMDGPUUsage.rst:7665
#: ../../../AMDGPUUsage.rst:7736 ../../../AMDGPUUsage.rst:7778
#: ../../../AMDGPUUsage.rst:7816 ../../../AMDGPUUsage.rst:7858
#: ../../../AMDGPUUsage.rst:8004 ../../../AMDGPUUsage.rst:8113
#: ../../../AMDGPUUsage.rst:8314
msgid "If TgSplit execution mode, omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:6463 ../../../AMDGPUUsage.rst:8782
msgid "Ensures the flat_load has completed before invalidating the caches."
msgstr ""

#: ../../../AMDGPUUsage.rst:6533 ../../../AMDGPUUsage.rst:8835
msgid ""
"Ensures any following global data read is no older than the local atomicrmw "
"value being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:6602 ../../../AMDGPUUsage.rst:6667
#: ../../../AMDGPUUsage.rst:7709 ../../../AMDGPUUsage.rst:7865
#: ../../../AMDGPUUsage.rst:8888 ../../../AMDGPUUsage.rst:8919
#: ../../../AMDGPUUsage.rst:9829 ../../../AMDGPUUsage.rst:9904
msgid "Ensures the atomicrmw has completed before invalidating the caches."
msgstr ""

#: ../../../AMDGPUUsage.rst:6722
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load "
"atomic/ atomicrmw with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:6899 ../../../AMDGPUUsage.rst:8150
msgid "Must happen before the following buffer_invl2 and buffer_wbinvl1_vol."
msgstr ""

#: ../../../AMDGPUUsage.rst:6948 ../../../AMDGPUUsage.rst:7092
#: ../../../AMDGPUUsage.rst:7248 ../../../AMDGPUUsage.rst:7454
#: ../../../AMDGPUUsage.rst:7531 ../../../AMDGPUUsage.rst:7914
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load/"
"store/ load atomic/store atomic/ atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:6964 ../../../AMDGPUUsage.rst:9179
#: ../../../AMDGPUUsage.rst:9264
msgid ""
"Ensures that all memory operations have completed before performing the "
"store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:7022 ../../../AMDGPUUsage.rst:7164
#: ../../../AMDGPUUsage.rst:7349 ../../../AMDGPUUsage.rst:7652
#: ../../../AMDGPUUsage.rst:7803 ../../../AMDGPUUsage.rst:8097
msgid "buffer_wbl2"
msgstr ""

#: ../../../AMDGPUUsage.rst:7024 ../../../AMDGPUUsage.rst:7166
#: ../../../AMDGPUUsage.rst:7354 ../../../AMDGPUUsage.rst:7654
#: ../../../AMDGPUUsage.rst:7805 ../../../AMDGPUUsage.rst:8102
msgid "Must happen before following s_waitcnt."
msgstr ""

#: ../../../AMDGPUUsage.rst:7026 ../../../AMDGPUUsage.rst:7168
#: ../../../AMDGPUUsage.rst:7356 ../../../AMDGPUUsage.rst:7656
#: ../../../AMDGPUUsage.rst:7807 ../../../AMDGPUUsage.rst:8104
msgid ""
"Performs L2 writeback to ensure previous global/generic store/atomicrmw are "
"visible at system scope."
msgstr ""

#: ../../../AMDGPUUsage.rst:7067 ../../../AMDGPUUsage.rst:7207
msgid ""
"Ensures that all memory operations to memory and the L2 writeback have "
"completed before performing the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:7108 ../../../AMDGPUUsage.rst:7470
#: ../../../AMDGPUUsage.rst:7547 ../../../AMDGPUUsage.rst:9315
#: ../../../AMDGPUUsage.rst:9607 ../../../AMDGPUUsage.rst:9741
#: ../../../AMDGPUUsage.rst:9884
msgid ""
"Ensures that all memory operations have completed before performing the "
"atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:7255 ../../../AMDGPUUsage.rst:7921
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding local/generic load/load "
"atomic/store/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:7351 ../../../AMDGPUUsage.rst:8099
msgid "If OpenCL and address space is local, omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:7486 ../../../AMDGPUUsage.rst:9626
msgid ""
"Ensures any following global data read is no older than the atomicrmw value "
"being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:7559
msgid "If not TgSplit execution mode, omit vmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:7695 ../../../AMDGPUUsage.rst:7846
msgid ""
"Ensures that all memory operations to global and L2 writeback have completed "
"before performing the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:7934 ../../../AMDGPUUsage.rst:9983
msgid ""
"Ensures that all memory operations have completed before performing any "
"following global memory operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:7979 ../../../AMDGPUUsage.rst:10028
msgid ""
"Ensures that the acquire-fence-paired atomic has completed before "
"invalidating the cache. Therefore any following locations read must be no "
"older than the value read by the acquire-fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:8222 ../../../AMDGPUUsage.rst:10177
msgid ""
"s_waitcnt lgkmcnt(0) must happen after preceding local/generic load atomic/"
"store atomic/atomicrmw with memory ordering of seq_cst and with equal or "
"wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"lgkmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8254 ../../../AMDGPUUsage.rst:10225
msgid ""
"Ensures any preceding sequential consistent global/local memory instructions "
"have completed before executing this sequentially consistent instruction. "
"This prevents reordering a seq_cst store followed by a seq_cst load. (Note "
"that seq_cst is stronger than acquire/release as the reordering of load "
"acquire followed by a store release is prevented by the s_waitcnt of the "
"release, but there is nothing preventing a store release followed by load "
"acquire from completing out of order. The s_waitcnt could be placed after "
"seq_store or before the seq_load. We choose the load to make the s_waitcnt "
"be as late as possible so that the store may have already completed.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8424
msgid "Memory Model GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:8426
msgid "For GFX10:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8429
msgid "Each SA has multiple work-group processors (WGP)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8430
msgid "Each WGP has multiple compute units (CU)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8432
msgid ""
"The wavefronts for a single work-group are executed in the same WGP. In CU "
"wavefront execution mode the wavefronts may be executed by different SIMDs "
"in the same CU. In WGP wavefront execution mode the wavefronts may be "
"executed by different SIMDs in different CUs in the same WGP."
msgstr ""

#: ../../../AMDGPUUsage.rst:8437
msgid ""
"Each WGP has a single LDS memory shared by the wavefronts of the work-groups "
"executing on it."
msgstr ""

#: ../../../AMDGPUUsage.rst:8439
msgid ""
"All LDS operations of a WGP are performed as wavefront wide operations in a "
"global order and involve no caching. Completion is reported to a wavefront "
"in execution order."
msgstr ""

#: ../../../AMDGPUUsage.rst:8442
msgid ""
"The LDS memory has multiple request queues shared by the SIMDs of a WGP. "
"Therefore, the LDS operations performed by different wavefronts of a work-"
"group can be reordered relative to each other, which can result in "
"reordering the visibility of vector memory operations with respect to LDS "
"operations of other wavefronts in the same work-group. A ``s_waitcnt "
"lgkmcnt(0)`` is required to ensure synchronization between LDS operations "
"and vector memory operations between wavefronts of a work-group, but not "
"between operations performed by the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:8450
msgid ""
"The vector memory operations are performed as wavefront wide operations. "
"Completion of load/store/sample operations are reported to a wavefront in "
"execution order of other load/store/sample operations performed by that "
"wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:8454
msgid ""
"The vector memory operations access a vector L0 cache. There is a single L0 "
"cache per CU. Each SIMD of a CU accesses the same L0 cache. Therefore, no "
"special action is required for coherence between the lanes of a single "
"wavefront. However, a ``buffer_gl0_inv`` is required for coherence between "
"wavefronts executing in the same work-group as they may be executing on "
"SIMDs of different CUs that access different L0s. A ``buffer_gl0_inv`` is "
"also required for coherence between wavefronts executing in different work-"
"groups as they may be executing on different WGPs."
msgstr ""

#: ../../../AMDGPUUsage.rst:8462
msgid ""
"The scalar memory operations access a scalar L0 cache shared by all "
"wavefronts on a WGP. The scalar and vector L0 caches are not coherent. "
"However, scalar operations are used in a restricted way so do not impact the "
"memory model. See :ref:`amdgpu-amdhsa-memory-spaces`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8466
msgid ""
"The vector and scalar memory L0 caches use an L1 cache shared by all WGPs on "
"the same SA. Therefore, no special action is required for coherence between "
"the wavefronts of a single work-group. However, a ``buffer_gl1_inv`` is "
"required for coherence between wavefronts executing in different work-groups "
"as they may be executing on different SAs that access different L1s."
msgstr ""

#: ../../../AMDGPUUsage.rst:8471
msgid ""
"The L1 caches have independent quadrants to service disjoint ranges of "
"virtual addresses."
msgstr ""

#: ../../../AMDGPUUsage.rst:8473
msgid ""
"Each L0 cache has a separate request queue per L1 quadrant. Therefore, the "
"vector and scalar memory operations performed by different wavefronts, "
"whether executing in the same or different work-groups (which may be "
"executing on different CUs accessing different L0s), can be reordered "
"relative to each other. A ``s_waitcnt vmcnt(0) & vscnt(0)`` is required to "
"ensure synchronization between vector memory operations of different "
"wavefronts. It ensures a previous vector memory operation has completed "
"before executing a subsequent vector memory or LDS operation and so can be "
"used to meet the requirements of acquire, release and sequential consistency."
msgstr ""

#: ../../../AMDGPUUsage.rst:8482
msgid "The L1 caches use an L2 cache shared by all SAs on the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:8485
msgid ""
"Each L1 quadrant of a single SA accesses a different L2 channel. Each L1 "
"quadrant has a separate request queue per L2 channel. Therefore, the vector "
"and scalar memory operations performed by wavefronts executing in different "
"work-groups (which may be executing on different SAs) of an agent can be "
"reordered relative to each other. A ``s_waitcnt vmcnt(0) & vscnt(0)`` is "
"required to ensure synchronization between vector memory operations of "
"different SAs. It ensures a previous vector memory operation has completed "
"before executing a subsequent vector memory and so can be used to meet the "
"requirements of acquire, release and sequential consistency."
msgstr ""

#: ../../../AMDGPUUsage.rst:8517
msgid ""
"CP invalidates the L0 and L1 caches at the start of each kernel dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:8518
msgid ""
"On dGPU the kernarg backing memory is accessed as MTYPE UC (uncached) to "
"avoid needing to invalidate the L2 cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:8523
msgid ""
"Scratch backing memory (which is used for the private address space) is "
"accessed with MTYPE NC (non-coherent). Since the private address space is "
"only accessed by a single thread, and is always write-before-read, there is "
"never a need to invalidate these entries from the L0 or L1 caches."
msgstr ""

#: ../../../AMDGPUUsage.rst:8528
msgid ""
"Wavefronts are executed in native mode with in-order reporting of loads and "
"sample instructions. In this mode vmcnt reports completion of load, atomic "
"with return and sample instructions in order, and the vscnt reports the "
"completion of store and atomic without return in order. See ``MEM_ORDERED`` "
"field in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8534
msgid "Wavefronts can be executed in WGP or CU wavefront execution mode:"
msgstr ""

#: ../../../AMDGPUUsage.rst:8536
msgid ""
"In WGP wavefront execution mode the wavefronts of a work-group are executed "
"on the SIMDs of both CUs of the WGP. Therefore, explicit management of the "
"per CU L0 caches is required for work-group synchronization. Also accesses "
"to L1 at work-group scope need to be explicitly ordered as the accesses from "
"different CUs are not ordered."
msgstr ""

#: ../../../AMDGPUUsage.rst:8541
msgid ""
"In CU wavefront execution mode the wavefronts of a work-group are executed "
"on the SIMDs of a single CU of the WGP. Therefore, all global memory access "
"by the work-group access the same L0 which in turn ensures L1 accesses are "
"ordered and so do not require explicit management of the caches for work-"
"group synchronization."
msgstr ""

#: ../../../AMDGPUUsage.rst:8547
msgid ""
"See ``WGP_MODE`` field in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-"
"table` and :ref:`amdgpu-target-features`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8551
msgid ""
"The code sequences used to implement the memory model for GFX10 are defined "
"in table :ref:`amdgpu-amdhsa-memory-model-code-sequences-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:8554
msgid "AMDHSA Memory Model Code Sequences GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:8558
msgid "AMDGPU Machine Code GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:8570
msgid "buffer/global/flat_load slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:8575 ../../../AMDGPUUsage.rst:8637
msgid "buffer/global/flat_load glc=1 dlc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:8598
msgid "buffer/global/flat_store slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:8604
msgid "s_waitcnt vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8631 ../../../AMDGPUUsage.rst:8662
#: ../../../AMDGPUUsage.rst:8715
msgid "If CU wavefront execution mode, omit glc=1."
msgstr ""

#: ../../../AMDGPUUsage.rst:8667 ../../../AMDGPUUsage.rst:8679
#: ../../../AMDGPUUsage.rst:8705 ../../../AMDGPUUsage.rst:8741
#: ../../../AMDGPUUsage.rst:8806 ../../../AMDGPUUsage.rst:8821
#: ../../../AMDGPUUsage.rst:8872 ../../../AMDGPUUsage.rst:9033
#: ../../../AMDGPUUsage.rst:9190 ../../../AMDGPUUsage.rst:9326
#: ../../../AMDGPUUsage.rst:9618 ../../../AMDGPUUsage.rst:9635
#: ../../../AMDGPUUsage.rst:9644 ../../../AMDGPUUsage.rst:9694
#: ../../../AMDGPUUsage.rst:9769 ../../../AMDGPUUsage.rst:10043
#: ../../../AMDGPUUsage.rst:10276
msgid "If CU wavefront execution mode, omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:8669 ../../../AMDGPUUsage.rst:8690
#: ../../../AMDGPUUsage.rst:8811
msgid ""
"Must happen before the following buffer_gl0_inv and before any following "
"global/generic load/load atomic/store/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:8677 ../../../AMDGPUUsage.rst:8703
#: ../../../AMDGPUUsage.rst:8739 ../../../AMDGPUUsage.rst:8819
#: ../../../AMDGPUUsage.rst:8842 ../../../AMDGPUUsage.rst:8870
#: ../../../AMDGPUUsage.rst:9031 ../../../AMDGPUUsage.rst:9633
#: ../../../AMDGPUUsage.rst:9692 ../../../AMDGPUUsage.rst:9767
#: ../../../AMDGPUUsage.rst:10041
msgid "buffer_gl0_inv"
msgstr ""

#: ../../../AMDGPUUsage.rst:8721
msgid "If CU wavefront execution mode, omit vmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8725
msgid ""
"Must happen before the following buffer_gl0_inv and any following global/"
"generic load/load atomic/store/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:8748
msgid "buffer/global_load glc=1 dlc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:8752 ../../../AMDGPUUsage.rst:8885
#: ../../../AMDGPUUsage.rst:8916 ../../../AMDGPUUsage.rst:9826
#: ../../../AMDGPUUsage.rst:9901
msgid "Must happen before following buffer_gl*_inv."
msgstr ""

#: ../../../AMDGPUUsage.rst:8755
msgid "Ensures the load has completed before invalidating the caches."
msgstr ""

#: ../../../AMDGPUUsage.rst:8760 ../../../AMDGPUUsage.rst:8787
#: ../../../AMDGPUUsage.rst:8894 ../../../AMDGPUUsage.rst:8925
#: ../../../AMDGPUUsage.rst:9121 ../../../AMDGPUUsage.rst:9835
#: ../../../AMDGPUUsage.rst:9910 ../../../AMDGPUUsage.rst:10138
msgid "buffer_gl0_inv; buffer_gl1_inv"
msgstr ""

#: ../../../AMDGPUUsage.rst:8773
msgid "flat_load glc=1 dlc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:8779
msgid "Must happen before following buffer_gl*_invl."
msgstr ""

#: ../../../AMDGPUUsage.rst:8804 ../../../AMDGPUUsage.rst:8880
#: ../../../AMDGPUUsage.rst:9616 ../../../AMDGPUUsage.rst:9821
msgid "s_waitcnt vm/vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8808 ../../../AMDGPUUsage.rst:8857
#: ../../../AMDGPUUsage.rst:8882 ../../../AMDGPUUsage.rst:8913
#: ../../../AMDGPUUsage.rst:9620 ../../../AMDGPUUsage.rst:9823
#: ../../../AMDGPUUsage.rst:9898
msgid ""
"Use vmcnt(0) if atomic with return and vscnt(0) if atomic with no-return."
msgstr ""

#: ../../../AMDGPUUsage.rst:8832 ../../../AMDGPUUsage.rst:8860
#: ../../../AMDGPUUsage.rst:9015 ../../../AMDGPUUsage.rst:9623
#: ../../../AMDGPUUsage.rst:9682 ../../../AMDGPUUsage.rst:9757
#: ../../../AMDGPUUsage.rst:10025
msgid "Must happen before the following buffer_gl0_inv."
msgstr ""

#: ../../../AMDGPUUsage.rst:8844 ../../../AMDGPUUsage.rst:9696
msgid "If OpenCL omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:8851
msgid "s_waitcnt lgkmcnt(0) & vm/vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8854
msgid "If CU wavefront execution mode, omit vm/vscnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8908 ../../../AMDGPUUsage.rst:9893
msgid "s_waitcnt vm/vscnt(0) & lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8940 ../../../AMDGPUUsage.rst:9040
#: ../../../AMDGPUUsage.rst:9139 ../../../AMDGPUUsage.rst:9225
#: ../../../AMDGPUUsage.rst:9276 ../../../AMDGPUUsage.rst:9408
#: ../../../AMDGPUUsage.rst:9484 ../../../AMDGPUUsage.rst:9561
#: ../../../AMDGPUUsage.rst:9702 ../../../AMDGPUUsage.rst:9750
#: ../../../AMDGPUUsage.rst:9776 ../../../AMDGPUUsage.rst:9848
#: ../../../AMDGPUUsage.rst:9925 ../../../AMDGPUUsage.rst:10050
#: ../../../AMDGPUUsage.rst:10162 ../../../AMDGPUUsage.rst:10366
msgid "s_waitcnt lgkmcnt(0) & vmcnt(0) & vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:8943 ../../../AMDGPUUsage.rst:9142
#: ../../../AMDGPUUsage.rst:9279 ../../../AMDGPUUsage.rst:9411
#: ../../../AMDGPUUsage.rst:9564 ../../../AMDGPUUsage.rst:9705
#: ../../../AMDGPUUsage.rst:9753 ../../../AMDGPUUsage.rst:9928
#: ../../../AMDGPUUsage.rst:10165
msgid "If CU wavefront execution mode, omit vmcnt(0) and vscnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8950 ../../../AMDGPUUsage.rst:9047
#: ../../../AMDGPUUsage.rst:9418 ../../../AMDGPUUsage.rst:9491
#: ../../../AMDGPUUsage.rst:9935 ../../../AMDGPUUsage.rst:10057
msgid "If OpenCL and address space is local, omit vmcnt(0) and vscnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8969 ../../../AMDGPUUsage.rst:9059
#: ../../../AMDGPUUsage.rst:9147 ../../../AMDGPUUsage.rst:9232
#: ../../../AMDGPUUsage.rst:9283 ../../../AMDGPUUsage.rst:9366
#: ../../../AMDGPUUsage.rst:9437 ../../../AMDGPUUsage.rst:9510
#: ../../../AMDGPUUsage.rst:9709 ../../../AMDGPUUsage.rst:9781
#: ../../../AMDGPUUsage.rst:9948 ../../../AMDGPUUsage.rst:10069
#: ../../../AMDGPUUsage.rst:10369
msgid ""
"Could be split into separate s_waitcnt vmcnt(0), s_waitcnt vscnt(0) and "
"s_waitcnt lgkmcnt(0) to allow them to be independently moved according to "
"the following rules."
msgstr ""

#: ../../../AMDGPUUsage.rst:8978 ../../../AMDGPUUsage.rst:9068
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load "
"atomic/ atomicrmw-with-return-value with an equal or wider sync scope and "
"memory ordering stronger than unordered (this is termed the fence-paired-"
"atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:8991 ../../../AMDGPUUsage.rst:9081
msgid ""
"s_waitcnt vscnt(0) must happen after any preceding global/generic atomicrmw-"
"no-return-value with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:9105 ../../../AMDGPUUsage.rst:10098
msgid "Must happen before the following buffer_gl*_inv."
msgstr ""

#: ../../../AMDGPUUsage.rst:9108
msgid ""
"Ensures that the fence-paired atomic has completed before invalidating the "
"caches. Therefore any following locations read must be no older than the "
"value read by the fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:9156 ../../../AMDGPUUsage.rst:9201
#: ../../../AMDGPUUsage.rst:9241 ../../../AMDGPUUsage.rst:9292
#: ../../../AMDGPUUsage.rst:9337 ../../../AMDGPUUsage.rst:9375
#: ../../../AMDGPUUsage.rst:9446 ../../../AMDGPUUsage.rst:9519
#: ../../../AMDGPUUsage.rst:9584 ../../../AMDGPUUsage.rst:9655
#: ../../../AMDGPUUsage.rst:9718 ../../../AMDGPUUsage.rst:9790
#: ../../../AMDGPUUsage.rst:9957 ../../../AMDGPUUsage.rst:10078
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load/load "
"atomic/ atomicrmw-with-return-value."
msgstr ""

#: ../../../AMDGPUUsage.rst:9162 ../../../AMDGPUUsage.rst:9207
#: ../../../AMDGPUUsage.rst:9248 ../../../AMDGPUUsage.rst:9298
#: ../../../AMDGPUUsage.rst:9343 ../../../AMDGPUUsage.rst:9381
#: ../../../AMDGPUUsage.rst:9453 ../../../AMDGPUUsage.rst:9525
#: ../../../AMDGPUUsage.rst:9590 ../../../AMDGPUUsage.rst:9661
#: ../../../AMDGPUUsage.rst:9724 ../../../AMDGPUUsage.rst:9796
#: ../../../AMDGPUUsage.rst:9868 ../../../AMDGPUUsage.rst:9964
#: ../../../AMDGPUUsage.rst:10085
msgid ""
"s_waitcnt vscnt(0) must happen after any preceding global/generic store/"
"store atomic/ atomicrmw-no-return-value."
msgstr ""

#: ../../../AMDGPUUsage.rst:9188 ../../../AMDGPUUsage.rst:9324
#: ../../../AMDGPUUsage.rst:9642 ../../../AMDGPUUsage.rst:10274
msgid "s_waitcnt vmcnt(0) & vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:9193 ../../../AMDGPUUsage.rst:9329
#: ../../../AMDGPUUsage.rst:9647 ../../../AMDGPUUsage.rst:10278
msgid ""
"Could be split into separate s_waitcnt vmcnt(0) and s_waitcnt vscnt(0) to "
"allow them to be independently moved according to the following rules."
msgstr ""

#: ../../../AMDGPUUsage.rst:9216 ../../../AMDGPUUsage.rst:9352
#: ../../../AMDGPUUsage.rst:9670
msgid ""
"Ensures that all global memory operations have completed before performing "
"the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:9362
msgid "s_waitcnt lgkmcnt(0) &"
msgstr ""

#: ../../../AMDGPUUsage.rst:9362
msgid "vmcnt(0) & vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:9459 ../../../AMDGPUUsage.rst:9970
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding local/generic load/"
"store/load atomic/store atomic/ atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:9575 ../../../AMDGPUUsage.rst:9853
#: ../../../AMDGPUUsage.rst:10168
msgid ""
"Could be split into separate s_waitcnt vmcnt(0), s_waitcnt vscnt(0), and "
"s_waitcnt lgkmcnt(0) to allow them to be independently moved according to "
"the following rules."
msgstr ""

#: ../../../AMDGPUUsage.rst:9760
msgid ""
"Ensures any following global data read is no older than the load atomic "
"value being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:9862
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load/load "
"atomic atomicrmw-with-return-value."
msgstr ""

#: ../../../AMDGPUUsage.rst:10101
msgid ""
"Ensures that the preceding global/local/generic load atomic/atomicrmw with "
"an equal or wider sync scope and memory ordering stronger than unordered "
"(this is termed the acquire-fence-paired-atomic) has completed before "
"invalidating the caches. This satisfies the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:10193 ../../../AMDGPUUsage.rst:10394
msgid ""
"s_waitcnt vmcnt(0) must happen after preceding global/generic load atomic/ "
"atomicrmw-with-return-value with memory ordering of seq_cst and with equal "
"or wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"vmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:10209 ../../../AMDGPUUsage.rst:10302
#: ../../../AMDGPUUsage.rst:10410
msgid ""
"s_waitcnt vscnt(0) Must happen after preceding global/generic store atomic/ "
"atomicrmw-no-return-value with memory ordering of seq_cst and with equal or "
"wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"vscnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:10286
msgid ""
"s_waitcnt vmcnt(0) Must happen after preceding global/generic load atomic/ "
"atomicrmw-with-return-value with memory ordering of seq_cst and with equal "
"or wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"vmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:10378
msgid ""
"s_waitcnt lgkmcnt(0) must happen after preceding local load atomic/store "
"atomic/atomicrmw with memory ordering of seq_cst and with equal or wider "
"sync scope. (Note that seq_cst fences have their own s_waitcnt lgkmcnt(0) "
"and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:10491 ../../../AMDGPUUsage.rst:11417
msgid "Trap Handler ABI"
msgstr ""

#: ../../../AMDGPUUsage.rst:10493
msgid ""
"For code objects generated by the AMDGPU backend for HSA [HSA]_ compatible "
"runtimes (see :ref:`amdgpu-os`), the runtime installs a trap handler that "
"supports the ``s_trap`` instruction. For usage see:"
msgstr ""

#: ../../../AMDGPUUsage.rst:10497
msgid ":ref:`amdgpu-trap-handler-for-amdhsa-os-v2-table`"
msgstr ""

#: ../../../AMDGPUUsage.rst:10498
msgid ":ref:`amdgpu-trap-handler-for-amdhsa-os-v3-table`"
msgstr ""

#: ../../../AMDGPUUsage.rst:10499
msgid ":ref:`amdgpu-trap-handler-for-amdhsa-os-v4-table`"
msgstr ""

#: ../../../AMDGPUUsage.rst:10501
msgid "AMDGPU Trap Handler for AMDHSA OS Code Object V2"
msgstr ""

#: ../../../AMDGPUUsage.rst:10505 ../../../AMDGPUUsage.rst:10545
#: ../../../AMDGPUUsage.rst:10587 ../../../AMDGPUUsage.rst:11427
msgid "Usage"
msgstr ""

#: ../../../AMDGPUUsage.rst:10505 ../../../AMDGPUUsage.rst:10545
#: ../../../AMDGPUUsage.rst:10587 ../../../AMDGPUUsage.rst:11427
msgid "Code Sequence"
msgstr ""

#: ../../../AMDGPUUsage.rst:10505 ../../../AMDGPUUsage.rst:10545
msgid "Trap Handler Inputs"
msgstr ""

#: ../../../AMDGPUUsage.rst:10508 ../../../AMDGPUUsage.rst:10530
#: ../../../AMDGPUUsage.rst:10531 ../../../AMDGPUUsage.rst:10532
#: ../../../AMDGPUUsage.rst:10533 ../../../AMDGPUUsage.rst:10534
#: ../../../AMDGPUUsage.rst:10535 ../../../AMDGPUUsage.rst:10536
#: ../../../AMDGPUUsage.rst:10548 ../../../AMDGPUUsage.rst:10572
#: ../../../AMDGPUUsage.rst:10573 ../../../AMDGPUUsage.rst:10574
#: ../../../AMDGPUUsage.rst:10575 ../../../AMDGPUUsage.rst:10576
#: ../../../AMDGPUUsage.rst:10577 ../../../AMDGPUUsage.rst:10578
#: ../../../AMDGPUUsage.rst:10589 ../../../AMDGPUUsage.rst:10613
#: ../../../AMDGPUUsage.rst:10614 ../../../AMDGPUUsage.rst:10615
#: ../../../AMDGPUUsage.rst:10616 ../../../AMDGPUUsage.rst:10617
#: ../../../AMDGPUUsage.rst:10618 ../../../AMDGPUUsage.rst:10619
msgid "reserved"
msgstr ""

#: ../../../AMDGPUUsage.rst:10508 ../../../AMDGPUUsage.rst:10548
#: ../../../AMDGPUUsage.rst:10589
msgid "``s_trap 0x00``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10508 ../../../AMDGPUUsage.rst:10548
#: ../../../AMDGPUUsage.rst:10589
msgid "Reserved by hardware."
msgstr ""

#: ../../../AMDGPUUsage.rst:10509
msgid "``debugtrap(arg)``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10509 ../../../AMDGPUUsage.rst:10549
#: ../../../AMDGPUUsage.rst:10590
msgid "``s_trap 0x01``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10509 ../../../AMDGPUUsage.rst:10518
#: ../../../AMDGPUUsage.rst:10560 ../../../AMDGPUUsage.rst:10601
msgid "``SGPR0-1``:"
msgstr ""

#: ../../../AMDGPUUsage.rst:10510 ../../../AMDGPUUsage.rst:10514
#: ../../../AMDGPUUsage.rst:10556 ../../../AMDGPUUsage.rst:10597
msgid "``queue_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10511
msgid "``VGPR0``:"
msgstr ""

#: ../../../AMDGPUUsage.rst:10512
msgid "``arg``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10509
msgid "Reserved for Finalizer HSA ``debugtrap`` intrinsic (not implemented)."
msgstr ""

#: ../../../AMDGPUUsage.rst:10513 ../../../AMDGPUUsage.rst:10555
#: ../../../AMDGPUUsage.rst:10596
msgid "``llvm.trap``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10513 ../../../AMDGPUUsage.rst:10555
#: ../../../AMDGPUUsage.rst:10596
msgid "``s_trap 0x02``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10513 ../../../AMDGPUUsage.rst:10555
#: ../../../AMDGPUUsage.rst:10596
msgid ""
"Causes wave to be halted with the PC at the trap instruction. The associated "
"queue is signalled to put it into the error state.  When the queue is put in "
"the error state, the waves executing dispatches on the queue will be "
"terminated."
msgstr ""

#: ../../../AMDGPUUsage.rst:10520 ../../../AMDGPUUsage.rst:10562
#: ../../../AMDGPUUsage.rst:10603
msgid "``llvm.debugtrap``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10520 ../../../AMDGPUUsage.rst:10562
#: ../../../AMDGPUUsage.rst:10603
msgid "``s_trap 0x03``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10520 ../../../AMDGPUUsage.rst:10562
#: ../../../AMDGPUUsage.rst:10603
msgid ""
"If debugger not enabled then behaves as a no-operation. The trap handler is "
"entered and immediately returns to continue execution of the wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:10524 ../../../AMDGPUUsage.rst:10566
#: ../../../AMDGPUUsage.rst:10607
msgid ""
"If the debugger is enabled, causes the debug trap to be reported by the "
"debugger and the wavefront is put in the halt state with the PC at the "
"instruction.  The debugger must increment the PC and resume the wave."
msgstr ""

#: ../../../AMDGPUUsage.rst:10530 ../../../AMDGPUUsage.rst:10572
#: ../../../AMDGPUUsage.rst:10613
msgid "``s_trap 0x04``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10531 ../../../AMDGPUUsage.rst:10573
#: ../../../AMDGPUUsage.rst:10614
msgid "``s_trap 0x05``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10532 ../../../AMDGPUUsage.rst:10574
#: ../../../AMDGPUUsage.rst:10615
msgid "``s_trap 0x06``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10533 ../../../AMDGPUUsage.rst:10575
#: ../../../AMDGPUUsage.rst:10616
msgid "``s_trap 0x07``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10534 ../../../AMDGPUUsage.rst:10576
#: ../../../AMDGPUUsage.rst:10617
msgid "``s_trap 0x08``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10535 ../../../AMDGPUUsage.rst:10577
#: ../../../AMDGPUUsage.rst:10618
msgid "``s_trap 0xfe``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10536 ../../../AMDGPUUsage.rst:10578
#: ../../../AMDGPUUsage.rst:10619
msgid "``s_trap 0xff``"
msgstr ""

#: ../../../AMDGPUUsage.rst:10541
msgid "AMDGPU Trap Handler for AMDHSA OS Code Object V3"
msgstr ""

#: ../../../AMDGPUUsage.rst:10549 ../../../AMDGPUUsage.rst:10590
msgid "debugger breakpoint"
msgstr ""

#: ../../../AMDGPUUsage.rst:10549 ../../../AMDGPUUsage.rst:10590
msgid ""
"Reserved for debugger to use for breakpoints. Causes wave to be halted with "
"the PC at the trap instruction. The debugger is responsible to resume the "
"wave, including the instruction that the breakpoint overwrote."
msgstr ""

#: ../../../AMDGPUUsage.rst:10583
msgid "AMDGPU Trap Handler for AMDHSA OS Code Object V4"
msgstr ""

#: ../../../AMDGPUUsage.rst:10587
msgid "GFX6-GFX8 Inputs"
msgstr ""

#: ../../../AMDGPUUsage.rst:10587
msgid "GFX9-GFX10 Inputs"
msgstr ""

#: ../../../AMDGPUUsage.rst:10625
msgid "Call Convention"
msgstr ""

#: ../../../AMDGPUUsage.rst:10629
msgid ""
"This section is currently incomplete and has inaccuracies. It is WIP that "
"will be updated as information is determined."
msgstr ""

#: ../../../AMDGPUUsage.rst:10632
msgid ""
"See :ref:`amdgpu-dwarf-address-space-identifier` for information on swizzled "
"addresses. Unswizzled addresses are normal linear addresses."
msgstr ""

#: ../../../AMDGPUUsage.rst:10638
msgid "Kernel Functions"
msgstr ""

#: ../../../AMDGPUUsage.rst:10640
msgid ""
"This section describes the call convention ABI for the outer kernel function."
msgstr ""

#: ../../../AMDGPUUsage.rst:10642
msgid ""
"See :ref:`amdgpu-amdhsa-initial-kernel-execution-state` for the kernel call "
"convention."
msgstr ""

#: ../../../AMDGPUUsage.rst:10645
msgid ""
"The following is not part of the AMDGPU kernel calling convention but "
"describes how the AMDGPU implements function calls:"
msgstr ""

#: ../../../AMDGPUUsage.rst:10648
msgid ""
"Clang decides the kernarg layout to match the *HSA Programmer's Language "
"Reference* [HSA]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:10651
msgid "All structs are passed directly."
msgstr ""

#: ../../../AMDGPUUsage.rst:10652
msgid "Lambda values are passed *TBA*."
msgstr ""

#: ../../../AMDGPUUsage.rst:10656
msgid ""
"Does this really follow HSA rules? Or are structs >16 bytes passed by-value "
"struct?"
msgstr ""

#: ../../../AMDGPUUsage.rst:10658
msgid "What is ABI for lambda values?"
msgstr ""

#: ../../../AMDGPUUsage.rst:10660
msgid ""
"The kernel performs certain setup in its prolog, as described in :ref:"
"`amdgpu-amdhsa-kernel-prolog`."
msgstr ""

#: ../../../AMDGPUUsage.rst:10666
msgid "Non-Kernel Functions"
msgstr ""

#: ../../../AMDGPUUsage.rst:10668
msgid ""
"This section describes the call convention ABI for functions other than the "
"outer kernel function."
msgstr ""

#: ../../../AMDGPUUsage.rst:10671
msgid ""
"If a kernel has function calls then scratch is always allocated and used for "
"the call stack which grows from low address to high address using the "
"swizzled scratch address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:10675
msgid "On entry to a function:"
msgstr ""

#: ../../../AMDGPUUsage.rst:10677
msgid ""
"SGPR0-3 contain a V# with the following properties (see :ref:`amdgpu-amdhsa-"
"kernel-prolog-private-segment-buffer`):"
msgstr ""

#: ../../../AMDGPUUsage.rst:10680
msgid ""
"Base address pointing to the beginning of the wavefront scratch backing "
"memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:10682
msgid "Swizzled with dword element size and stride of wavefront size elements."
msgstr ""

#: ../../../AMDGPUUsage.rst:10684
msgid ""
"The FLAT_SCRATCH register pair is setup. See :ref:`amdgpu-amdhsa-kernel-"
"prolog-flat-scratch`."
msgstr ""

#: ../../../AMDGPUUsage.rst:10686
msgid ""
"GFX6-GFX8: M0 register set to the size of LDS in bytes. See :ref:`amdgpu-"
"amdhsa-kernel-prolog-m0`."
msgstr ""

#: ../../../AMDGPUUsage.rst:10688
msgid "The EXEC register is set to the lanes active on entry to the function."
msgstr ""

#: ../../../AMDGPUUsage.rst:10689
msgid "MODE register: *TBD*"
msgstr ""

#: ../../../AMDGPUUsage.rst:10690
msgid ""
"VGPR0-31 and SGPR4-29 are used to pass function input arguments as described "
"below."
msgstr ""

#: ../../../AMDGPUUsage.rst:10692
msgid ""
"SGPR30-31 return address (RA). The code address that the function must "
"return to when it completes. The value is undefined if the function is *no "
"return*."
msgstr ""

#: ../../../AMDGPUUsage.rst:10695
msgid ""
"SGPR32 is used for the stack pointer (SP). It is an unswizzled scratch "
"offset relative to the beginning of the wavefront scratch backing memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:10698
msgid ""
"The unswizzled SP can be used with buffer instructions as an unswizzled SGPR "
"offset with the scratch V# in SGPR0-3 to access the stack in a swizzled "
"manner."
msgstr ""

#: ../../../AMDGPUUsage.rst:10702
msgid "The unswizzled SP value can be converted into the swizzled SP value by:"
msgstr ""

#: ../../../AMDGPUUsage.rst:0
msgid "swizzled SP = unswizzled SP / wavefront size"
msgstr ""

#: ../../../AMDGPUUsage.rst:10706
msgid ""
"This may be used to obtain the private address space address of stack "
"objects and to convert this address to a flat address by adding the flat "
"scratch aperture base address."
msgstr ""

#: ../../../AMDGPUUsage.rst:10710
msgid ""
"The swizzled SP value is always 4 bytes aligned for the ``r600`` "
"architecture and 16 byte aligned for the ``amdgcn`` architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:10715
msgid ""
"The ``amdgcn`` value is selected to avoid dynamic stack alignment for the "
"OpenCL language which has the largest base type defined as 16 bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:10718
msgid ""
"On entry, the swizzled SP value is the address of the first function "
"argument passed on the stack. Other stack passed arguments are positive "
"offsets from the entry swizzled SP value."
msgstr ""

#: ../../../AMDGPUUsage.rst:10722
msgid ""
"The function may use positive offsets beyond the last stack passed argument "
"for stack allocated local variables and register spill slots. If necessary, "
"the function may align these to greater alignment than 16 bytes. After these "
"the function may dynamically allocate space for such things as runtime sized "
"``alloca`` local allocations."
msgstr ""

#: ../../../AMDGPUUsage.rst:10728
msgid ""
"If the function calls another function, it will place any stack allocated "
"arguments after the last local allocation and adjust SGPR32 to the address "
"after the last local allocation."
msgstr ""

#: ../../../AMDGPUUsage.rst:10732
msgid "All other registers are unspecified."
msgstr ""

#: ../../../AMDGPUUsage.rst:10733
msgid ""
"Any necessary ``s_waitcnt`` has been performed to ensure memory is available "
"to the function."
msgstr ""

#: ../../../AMDGPUUsage.rst:10736
msgid "On exit from a function:"
msgstr ""

#: ../../../AMDGPUUsage.rst:10738
msgid ""
"VGPR0-31 and SGPR4-29 are used to pass function result arguments as "
"described below. Any registers used are considered clobbered registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:10740
msgid ""
"The following registers are preserved and have the same value as on entry:"
msgstr ""

#: ../../../AMDGPUUsage.rst:10742
msgid "FLAT_SCRATCH"
msgstr ""

#: ../../../AMDGPUUsage.rst:10743
msgid "EXEC"
msgstr ""

#: ../../../AMDGPUUsage.rst:10744
msgid "GFX6-GFX8: M0"
msgstr ""

#: ../../../AMDGPUUsage.rst:10745
msgid "All SGPR registers except the clobbered registers of SGPR4-31."
msgstr ""

#: ../../../AMDGPUUsage.rst:10746
msgid "VGPR40-47"
msgstr ""

#: ../../../AMDGPUUsage.rst:10747
msgid "VGPR56-63"
msgstr ""

#: ../../../AMDGPUUsage.rst:10748
msgid "VGPR72-79"
msgstr ""

#: ../../../AMDGPUUsage.rst:10749
msgid "VGPR88-95"
msgstr ""

#: ../../../AMDGPUUsage.rst:10750
msgid "VGPR104-111"
msgstr ""

#: ../../../AMDGPUUsage.rst:10751
msgid "VGPR120-127"
msgstr ""

#: ../../../AMDGPUUsage.rst:10752
msgid "VGPR136-143"
msgstr ""

#: ../../../AMDGPUUsage.rst:10753
msgid "VGPR152-159"
msgstr ""

#: ../../../AMDGPUUsage.rst:10754
msgid "VGPR168-175"
msgstr ""

#: ../../../AMDGPUUsage.rst:10755
msgid "VGPR184-191"
msgstr ""

#: ../../../AMDGPUUsage.rst:10756
msgid "VGPR200-207"
msgstr ""

#: ../../../AMDGPUUsage.rst:10757
msgid "VGPR216-223"
msgstr ""

#: ../../../AMDGPUUsage.rst:10758
msgid "VGPR232-239"
msgstr ""

#: ../../../AMDGPUUsage.rst:10759
msgid "VGPR248-255"
msgstr ""

#: ../../../AMDGPUUsage.rst:10763
msgid ""
"Except the argument registers, the VGPRs clobbered and the preserved "
"registers are intermixed at regular intervals in order to keep a similar "
"ratio independent of the number of allocated VGPRs."
msgstr ""

#: ../../../AMDGPUUsage.rst:10767
msgid "Lanes of all VGPRs that are inactive at the call site."
msgstr ""

#: ../../../AMDGPUUsage.rst:10769
msgid ""
"For the AMDGPU backend, an inter-procedural register allocation (IPRA) "
"optimization may mark some of clobbered SGPR and VGPR registers as preserved "
"if it can be determined that the called function does not change their value."
msgstr ""

#: ../../../AMDGPUUsage.rst:10774
msgid "The PC is set to the RA provided on entry."
msgstr ""

#: ../../../AMDGPUUsage.rst:10775
msgid "MODE register: *TBD*."
msgstr ""

#: ../../../AMDGPUUsage.rst:10776
msgid "All other registers are clobbered."
msgstr ""

#: ../../../AMDGPUUsage.rst:10777
msgid ""
"Any necessary ``s_waitcnt`` has been performed to ensure memory accessed by "
"function is available to the caller."
msgstr ""

#: ../../../AMDGPUUsage.rst:10782
msgid "On gfx908 are all ACC registers clobbered?"
msgstr ""

#: ../../../AMDGPUUsage.rst:10784
msgid ""
"How are function results returned? The address of structured types is passed "
"by reference, but what about other types?"
msgstr ""

#: ../../../AMDGPUUsage.rst:10787
msgid ""
"The function input arguments are made up of the formal arguments explicitly "
"declared by the source language function plus the implicit input arguments "
"used by the implementation."
msgstr ""

#: ../../../AMDGPUUsage.rst:10791
msgid "The source language input arguments are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:10793
msgid ""
"Any source language implicit ``this`` or ``self`` argument comes first as a "
"pointer type."
msgstr ""

#: ../../../AMDGPUUsage.rst:10795
msgid ""
"Followed by the function formal arguments in left to right source order."
msgstr ""

#: ../../../AMDGPUUsage.rst:10797
msgid "The source language result arguments are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:10799
msgid "The function result argument."
msgstr ""

#: ../../../AMDGPUUsage.rst:10801
msgid ""
"The source language input or result struct type arguments that are less than "
"or equal to 16 bytes, are decomposed recursively into their base type "
"fields, and each field is passed as if a separate argument. For input "
"arguments, if the called function requires the struct to be in memory, for "
"example because its address is taken, then the function body is responsible "
"for allocating a stack location and copying the field arguments into it. "
"Clang terms this *direct struct*."
msgstr ""

#: ../../../AMDGPUUsage.rst:10809
msgid ""
"The source language input struct type arguments that are greater than 16 "
"bytes, are passed by reference. The caller is responsible for allocating a "
"stack location to make a copy of the struct value and pass the address as "
"the input argument. The called function is responsible to perform the "
"dereference when accessing the input argument. Clang terms this *by-value "
"struct*."
msgstr ""

#: ../../../AMDGPUUsage.rst:10815
msgid ""
"A source language result struct type argument that is greater than 16 bytes, "
"is returned by reference. The caller is responsible for allocating a stack "
"location to hold the result value and passes the address as the last input "
"argument (before the implicit input arguments). In this case there are no "
"result arguments. The called function is responsible to perform the "
"dereference when storing the result value. Clang terms this *structured "
"return (sret)*."
msgstr ""

#: ../../../AMDGPUUsage.rst:10822
msgid "*TODO: correct the ``sret`` definition.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:10826
msgid ""
"Is this definition correct? Or is ``sret`` only used if passing in "
"registers, and pass as non-decomposed struct as stack argument? Or something "
"else? Is the memory location in the caller stack frame, or a stack memory "
"argument and so no address is passed as the caller can directly write to the "
"argument stack location? But then the stack location is still live after "
"return. If an argument stack location is it the first stack argument or the "
"last one?"
msgstr ""

#: ../../../AMDGPUUsage.rst:10833
msgid ""
"Lambda argument types are treated as struct types with an implementation "
"defined set of fields."
msgstr ""

#: ../../../AMDGPUUsage.rst:10838
msgid "Need to specify the ABI for lambda types for AMDGPU."
msgstr ""

#: ../../../AMDGPUUsage.rst:10840
msgid ""
"For AMDGPU backend all source language arguments (including the decomposed "
"struct type arguments) are passed in VGPRs unless marked ``inreg`` in which "
"case they are passed in SGPRs."
msgstr ""

#: ../../../AMDGPUUsage.rst:10844
msgid ""
"The AMDGPU backend walks the function call graph from the leaves to "
"determine which implicit input arguments are used, propagating to each "
"caller of the function. The used implicit arguments are appended to the "
"function arguments after the source language arguments in the following "
"order:"
msgstr ""

#: ../../../AMDGPUUsage.rst:10851
msgid "Is recursion or external functions supported?"
msgstr ""

#: ../../../AMDGPUUsage.rst:10853
msgid "Work-Item ID (1 VGPR)"
msgstr ""

#: ../../../AMDGPUUsage.rst:10855
msgid ""
"The X, Y and Z work-item ID are packed into a single VGRP with the following "
"layout. Only fields actually used by the function are set. The other bits "
"are undefined."
msgstr ""

#: ../../../AMDGPUUsage.rst:10859
msgid ""
"The values come from the initial kernel execution state. See :ref:`amdgpu-"
"amdhsa-initial-kernel-execution-state`."
msgstr ""

#: ../../../AMDGPUUsage.rst:10862
msgid "Work-item implicit argument layout"
msgstr ""

#: ../../../AMDGPUUsage.rst:10868
msgid "9:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:10868
msgid "X Work-Item ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:10869
msgid "19:10"
msgstr ""

#: ../../../AMDGPUUsage.rst:10869
msgid "Y Work-Item ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:10870
msgid "29:20"
msgstr ""

#: ../../../AMDGPUUsage.rst:10870
msgid "Z Work-Item ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:10871
msgid "31:30"
msgstr ""

#: ../../../AMDGPUUsage.rst:10871
msgid "Unused"
msgstr ""

#: ../../../AMDGPUUsage.rst:10874
msgid "Dispatch Ptr (2 SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:10876 ../../../AMDGPUUsage.rst:10881
#: ../../../AMDGPUUsage.rst:10886 ../../../AMDGPUUsage.rst:10891
#: ../../../AMDGPUUsage.rst:10896 ../../../AMDGPUUsage.rst:10901
#: ../../../AMDGPUUsage.rst:10906
msgid ""
"The value comes from the initial kernel execution state. See :ref:`amdgpu-"
"amdhsa-sgpr-register-set-up-order-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:10879
msgid "Queue Ptr (2 SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:10884
msgid "Kernarg Segment Ptr (2 SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:10889
msgid "Dispatch id (2 SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:10894
msgid "Work-Group ID X (1 SGPR)"
msgstr ""

#: ../../../AMDGPUUsage.rst:10899
msgid "Work-Group ID Y (1 SGPR)"
msgstr ""

#: ../../../AMDGPUUsage.rst:10904
msgid "Work-Group ID Z (1 SGPR)"
msgstr ""

#: ../../../AMDGPUUsage.rst:10909
msgid "Implicit Argument Ptr (2 SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:10911
msgid ""
"The value is computed by adding an offset to Kernarg Segment Ptr to get the "
"global address space pointer to the first kernarg implicit argument."
msgstr ""

#: ../../../AMDGPUUsage.rst:10914
msgid ""
"The input and result arguments are assigned in order in the following manner:"
msgstr ""

#: ../../../AMDGPUUsage.rst:10918
msgid ""
"There are likely some errors and omissions in the following description that "
"need correction."
msgstr ""

#: ../../../AMDGPUUsage.rst:10923
msgid ""
"Check the Clang source code to decipher how function arguments and return "
"results are handled. Also see the AMDGPU specific values used."
msgstr ""

#: ../../../AMDGPUUsage.rst:10926
msgid ""
"VGPR arguments are assigned to consecutive VGPRs starting at VGPR0 up to "
"VGPR31."
msgstr ""

#: ../../../AMDGPUUsage.rst:10929 ../../../AMDGPUUsage.rst:10940
msgid ""
"If there are more arguments than will fit in these registers, the remaining "
"arguments are allocated on the stack in order on naturally aligned addresses."
msgstr ""

#: ../../../AMDGPUUsage.rst:10935
msgid "How are overly aligned structures allocated on the stack?"
msgstr ""

#: ../../../AMDGPUUsage.rst:10937
msgid ""
"SGPR arguments are assigned to consecutive SGPRs starting at SGPR0 up to "
"SGPR29."
msgstr ""

#: ../../../AMDGPUUsage.rst:10944
msgid ""
"Note that decomposed struct type arguments may have some fields passed in "
"registers and some in memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:10949
msgid ""
"So, a struct which can pass some fields as decomposed register arguments, "
"will pass the rest as decomposed stack elements? But an argument that will "
"not start in registers will not be decomposed and will be passed as a non-"
"decomposed stack value?"
msgstr ""

#: ../../../AMDGPUUsage.rst:10954
msgid ""
"The following is not part of the AMDGPU function calling convention but "
"describes how the AMDGPU implements function calls:"
msgstr ""

#: ../../../AMDGPUUsage.rst:10957
msgid ""
"SGPR33 is used as a frame pointer (FP) if necessary. Like the SP it is an "
"unswizzled scratch address. It is only needed if runtime sized ``alloca`` "
"are used, or for the reasons defined in ``SIFrameLowering``."
msgstr ""

#: ../../../AMDGPUUsage.rst:10960
msgid ""
"Runtime stack alignment is supported. SGPR34 is used as a base pointer (BP) "
"to access the incoming stack arguments in the function. The BP is needed "
"only when the function requires the runtime stack alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:10964
msgid "Allocating SGPR arguments on the stack are not supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:10966
msgid ""
"No CFI is currently generated. See :ref:`amdgpu-dwarf-call-frame-"
"information`."
msgstr ""

#: ../../../AMDGPUUsage.rst:10971
msgid ""
"CFI will be generated that defines the CFA as the unswizzled address "
"relative to the wave scratch base in the unswizzled private address space of "
"the lowest address stack allocated local variable."
msgstr ""

#: ../../../AMDGPUUsage.rst:10975
msgid ""
"``DW_AT_frame_base`` will be defined as the swizzled address in the swizzled "
"private address space by dividing the CFA by the wavefront size (since CFA "
"is always at least dword aligned which matches the scratch swizzle element "
"size)."
msgstr ""

#: ../../../AMDGPUUsage.rst:10980
msgid ""
"If no dynamic stack alignment was performed, the stack allocated arguments "
"are accessed as negative offsets relative to ``DW_AT_frame_base``, and the "
"local variables and register spill slots are accessed as positive offsets "
"relative to ``DW_AT_frame_base``."
msgstr ""

#: ../../../AMDGPUUsage.rst:10985
msgid ""
"Function argument passing is implemented by copying the input physical "
"registers to virtual registers on entry. The register allocator can spill if "
"necessary. These are copied back to physical registers at call sites. The "
"net effect is that each function call can have these values in entirely "
"distinct locations. The IPRA can help avoid shuffling argument registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:10990
msgid ""
"Call sites are implemented by setting up the arguments at positive offsets "
"from SP. Then SP is incremented to account for the known frame size before "
"the call and decremented after the call."
msgstr ""

#: ../../../AMDGPUUsage.rst:10996
msgid ""
"The CFI will reflect the changed calculation needed to compute the CFA from "
"SP."
msgstr ""

#: ../../../AMDGPUUsage.rst:10999
msgid ""
"4 byte spill slots are used in the stack frame. One slot is allocated for an "
"emergency spill slot. Buffer instructions are used for stack accesses and "
"not the ``flat_scratch`` instruction."
msgstr ""

#: ../../../AMDGPUUsage.rst:11005
msgid "Explain when the emergency spill slot is used."
msgstr ""

#: ../../../AMDGPUUsage.rst:11009
msgid "Possible broken issues:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11011
msgid "Stack arguments must be aligned to required alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:11012
msgid "Stack is aligned to max(16, max formal argument alignment)"
msgstr ""

#: ../../../AMDGPUUsage.rst:11013
msgid "Direct argument < 64 bits should check register budget."
msgstr ""

#: ../../../AMDGPUUsage.rst:11014
msgid "Register budget calculation should respect ``inreg`` for SGPR."
msgstr ""

#: ../../../AMDGPUUsage.rst:11015
msgid "SGPR overflow is not handled."
msgstr ""

#: ../../../AMDGPUUsage.rst:11016
msgid "struct with 1 member unpeeling is not checking size of member."
msgstr ""

#: ../../../AMDGPUUsage.rst:11017
msgid "``sret`` is after ``this`` pointer."
msgstr ""

#: ../../../AMDGPUUsage.rst:11018
msgid "Caller is not implementing stack realignment: need an extra pointer."
msgstr ""

#: ../../../AMDGPUUsage.rst:11019
msgid "Should say AMDGPU passes FP rather than SP."
msgstr ""

#: ../../../AMDGPUUsage.rst:11020
msgid ""
"Should CFI define CFA as address of locals or arguments. Difference is "
"apparent when have implemented dynamic alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:11022
msgid ""
"If ``SCRATCH`` instruction could allow negative offsets, then can make FP be "
"highest address of stack frame and use negative offset for locals. Would "
"allow SP to be the same as FP and could support signal-handler-like as now "
"have a real SP for the top of the stack."
msgstr ""

#: ../../../AMDGPUUsage.rst:11026
msgid ""
"How is ``sret`` passed on the stack? In argument stack area? Can it overlay "
"arguments?"
msgstr ""

#: ../../../AMDGPUUsage.rst:11030
msgid "AMDPAL"
msgstr ""

#: ../../../AMDGPUUsage.rst:11032
msgid ""
"This section provides code conventions used when the target triple OS is "
"``amdpal`` (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11042
msgid ""
"The metadata is currently in development and is subject to major changes. "
"Only the current version is supported. *When this document was generated the "
"version was 2.6.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:11046
msgid ""
"Code object metadata is specified by the ``NT_AMDGPU_METADATA`` note record "
"(see :ref:`amdgpu-note-records-v3-v4`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11049
msgid ""
"The metadata is represented as Message Pack formatted binary data (see "
"[MsgPack]_). The top level is a Message Pack map that includes the keys "
"defined in table :ref:`amdgpu-amdpal-code-object-metadata-map-table` and "
"referenced tables."
msgstr ""

#: ../../../AMDGPUUsage.rst:11060
msgid "AMDPAL Code Object Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:11066
msgid "\"amdpal.version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11066
msgid ""
"PAL code object metadata (major, minor) version. The current values are "
"defined by *Util::Abi::PipelineMetadata(Major|Minor)Version*."
msgstr ""

#: ../../../AMDGPUUsage.rst:11068
msgid "\"amdpal.pipelines\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11068
msgid ""
"Per-pipeline metadata. See :ref:`amdgpu-amdpal-code-object-pipeline-metadata-"
"map-table` for the definition of the keys included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:11075
msgid "AMDPAL Code Object Pipeline Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:11081
msgid "Source name of the pipeline."
msgstr ""

#: ../../../AMDGPUUsage.rst:11082
msgid "\".type\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11082
msgid "Pipeline type, e.g. VsPs. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11084
msgid "\"VsPs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11085
msgid "\"Gs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11086
msgid "\"Cs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11087
msgid "\"Ngg\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11088
msgid "\"Tess\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11089
msgid "\"GsTess\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11090
msgid "\"NggTess\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11092
msgid "\".internal_pipeline_hash\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11092
msgid ""
"Internal compiler hash for this pipeline. Lower 64 bits is the \"stable\" "
"portion of the hash, used for e.g. shader replacement lookup. Upper 64 bits "
"is the \"unique\" portion of the hash, used for e.g. pipeline cache lookup. "
"The value is implementation defined, and can not be relied on between "
"different builds of the compiler."
msgstr ""

#: ../../../AMDGPUUsage.rst:11099
msgid "\".shaders\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11099 ../../../AMDGPUUsage.rst:11103
#: ../../../AMDGPUUsage.rst:11107 ../../../AMDGPUUsage.rst:11111
#: ../../../AMDGPUUsage.rst:11152 ../../../AMDGPUUsage.rst:11192
#: ../../../AMDGPUUsage.rst:11241
msgid "map"
msgstr ""

#: ../../../AMDGPUUsage.rst:11099
msgid ""
"Per-API shader metadata. See :ref:`amdgpu-amdpal-code-object-shader-map-"
"table` for the definition of the keys included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:11103
msgid "\".hardware_stages\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11103
msgid ""
"Per-hardware stage metadata. See :ref:`amdgpu-amdpal-code-object-hardware-"
"stage-map-table` for the definition of the keys included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:11107
msgid "\".shader_functions\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11107
msgid ""
"Per-shader function metadata. See :ref:`amdgpu-amdpal-code-object-shader-"
"function-map-table` for the definition of the keys included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:11111
msgid "\".registers\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11111
msgid ""
"Hardware register configuration. See :ref:`amdgpu-amdpal-code-object-"
"register-map-table` for the definition of the keys included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:11115
msgid "\".user_data_limit\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11115
msgid "Number of user data entries accessed by this pipeline."
msgstr ""

#: ../../../AMDGPUUsage.rst:11117
msgid "\".spill_threshold\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11117
msgid "The user data spill threshold.  0xFFFF for NoUserDataSpilling."
msgstr ""

#: ../../../AMDGPUUsage.rst:11119
msgid "\".uses_viewport_array_index\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11119
msgid ""
"Indicates whether or not the pipeline uses the viewport array index feature. "
"Pipelines which use this feature can render into all 16 viewports, whereas "
"pipelines which do not use it are restricted to viewport #0."
msgstr ""

#: ../../../AMDGPUUsage.rst:11124
msgid "\".es_gs_lds_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11124
msgid ""
"Size in bytes of LDS space used internally for handling data-passing between "
"the ES and GS shader stages. This can be zero if the data is passed using "
"off-chip buffers. This value should be used to program all user-SGPRs which "
"have been marked with \"UserDataMapping::EsGsLdsSize\" (typically only the "
"GS and VS HW stages will ever have a user-SGPR so marked)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11132
msgid "\".nggSubgroupSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11132
msgid ""
"Explicit maximum subgroup size for NGG shaders (maximum number of threads in "
"a subgroup)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11134
msgid "\".num_interpolants\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11134
msgid "Graphics only. Number of PS interpolants."
msgstr ""

#: ../../../AMDGPUUsage.rst:11135
msgid "\".mesh_scratch_memory_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11135
msgid "Max mesh shader scratch memory used."
msgstr ""

#: ../../../AMDGPUUsage.rst:11136
msgid "\".api\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11136
msgid "Name of the client graphics API."
msgstr ""

#: ../../../AMDGPUUsage.rst:11137
msgid "\".api_create_info\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11137
msgid "binary"
msgstr ""

#: ../../../AMDGPUUsage.rst:11137
msgid ""
"Graphics API shader create info binary blob. Can be defined by the driver "
"using the compiler if they want to be able to correlate API-specific "
"information used during creation at a later time."
msgstr ""

#: ../../../AMDGPUUsage.rst:11145
msgid "AMDPAL Code Object Shader Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:11152
msgid "\".compute\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11153
msgid "\".vertex\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11154
msgid "\".hull\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11155
msgid "\".domain\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11156
msgid "\".geometry\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11157
msgid "\".pixel\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11152
msgid ""
"See :ref:`amdgpu-amdpal-code-object-api-shader-metadata-map-table` for the "
"definition of the keys included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:11162
msgid "AMDPAL Code Object API Shader Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:11168 ../../../AMDGPUUsage.rst:11254
msgid "\".api_shader_hash\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11168 ../../../AMDGPUUsage.rst:11254
msgid ""
"Input shader hash, typically passed in from the client. The value is "
"implementation defined, and can not be relied on between different builds of "
"the compiler."
msgstr ""

#: ../../../AMDGPUUsage.rst:11171
msgid "\".hardware_mapping\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11171
msgid "sequence of string"
msgstr ""

#: ../../../AMDGPUUsage.rst:11171
msgid "Flags indicating the HW stages this API shader maps to. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11174 ../../../AMDGPUUsage.rst:11192
msgid "\".ls\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11175 ../../../AMDGPUUsage.rst:11193
msgid "\".hs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11176 ../../../AMDGPUUsage.rst:11194
msgid "\".es\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11177 ../../../AMDGPUUsage.rst:11195
msgid "\".gs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11178 ../../../AMDGPUUsage.rst:11196
msgid "\".vs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11179 ../../../AMDGPUUsage.rst:11197
msgid "\".ps\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11180 ../../../AMDGPUUsage.rst:11198
msgid "\".cs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11186
msgid "AMDPAL Code Object Hardware Stage Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:11192
msgid ""
"See :ref:`amdgpu-amdpal-code-object-hardware-stage-metadata-map-table` for "
"the definition of the keys included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:11203
msgid "AMDPAL Code Object Hardware Stage Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:11209
msgid "\".entry_point\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11209
msgid "The ELF symbol pointing to this pipeline's stage entry point."
msgstr ""

#: ../../../AMDGPUUsage.rst:11210 ../../../AMDGPUUsage.rst:11257
msgid "\".scratch_memory_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11210
msgid "Scratch memory size in bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:11211 ../../../AMDGPUUsage.rst:11258
msgid "\".lds_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11211
msgid "Local Data Share size in bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:11212
msgid "\".perf_data_buffer_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11212
msgid "Performance data buffer size in bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:11213
msgid "Number of VGPRs used."
msgstr ""

#: ../../../AMDGPUUsage.rst:11214
msgid "Number of SGPRs used."
msgstr ""

#: ../../../AMDGPUUsage.rst:11215
msgid "\".vgpr_limit\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11215
msgid ""
"If non-zero, indicates the shader was compiled with a directive to instruct "
"the compiler to limit the VGPR usage to be less than or equal to the "
"specified value (only set if different from HW default)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11219
msgid "\".sgpr_limit\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11219
msgid "SGPR count upper limit (only set if different from HW default)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11221
msgid "\".threadgroup_dimensions\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11221
msgid "Thread-group X/Y/Z dimensions (Compute only)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11223
msgid "Wavefront size (only set if different from HW default)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11224
msgid "\".uses_uavs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11224
msgid "The shader reads or writes UAVs."
msgstr ""

#: ../../../AMDGPUUsage.rst:11225
msgid "\".uses_rovs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11225
msgid "The shader reads or writes ROVs."
msgstr ""

#: ../../../AMDGPUUsage.rst:11226
msgid "\".writes_uavs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11226
msgid "The shader writes to one or more UAVs."
msgstr ""

#: ../../../AMDGPUUsage.rst:11227
msgid "\".writes_depth\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11227
msgid "The shader writes out a depth value."
msgstr ""

#: ../../../AMDGPUUsage.rst:11228
msgid "\".uses_append_consume\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11228
msgid "The shader uses append and/or consume operations, either memory or GDS."
msgstr ""

#: ../../../AMDGPUUsage.rst:11230
msgid "\".uses_prim_id\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11230
msgid "The shader uses PrimID."
msgstr ""

#: ../../../AMDGPUUsage.rst:11235
msgid "AMDPAL Code Object Shader Function Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:11241
msgid "*symbol name*"
msgstr ""

#: ../../../AMDGPUUsage.rst:11241
msgid ""
"*symbol name* is the ELF symbol name of the shader function code entry "
"address. The value is the function's metadata. See :ref:`amdgpu-amdpal-code-"
"object-shader-function-metadata-map-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:11248
msgid "AMDPAL Code Object Shader Function Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:11257
msgid "Size in bytes of scratch memory used by the shader."
msgstr ""

#: ../../../AMDGPUUsage.rst:11258
msgid "Size in bytes of LDS memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:11259
msgid "Number of VGPRs used by the shader."
msgstr ""

#: ../../../AMDGPUUsage.rst:11260
msgid "Number of SGPRs used by the shader."
msgstr ""

#: ../../../AMDGPUUsage.rst:11261
msgid "\".stack_frame_size_in_bytes\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11261
msgid "Amount of stack size used by the shader."
msgstr ""

#: ../../../AMDGPUUsage.rst:11262
msgid "\".shader_subtype\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11262
msgid "Shader subtype/kind. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11264
msgid "\"Unknown\""
msgstr ""

#: ../../../AMDGPUUsage.rst:11270
msgid "AMDPAL Code Object Register Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:11274
msgid "32-bit Integer Key"
msgstr ""

#: ../../../AMDGPUUsage.rst:11276
msgid "``reg offset``"
msgstr ""

#: ../../../AMDGPUUsage.rst:11276
msgid "32-bit integer"
msgstr ""

#: ../../../AMDGPUUsage.rst:11276
msgid ""
"``reg offset`` is the dword offset into the GFXIP register space of a GRBM "
"register (i.e., driver accessible GPU register number, not shader GPR "
"register number). The driver is required to program each specified register "
"to the corresponding specified value when executing this pipeline. "
"Typically, the ``reg offsets`` are the ``uint16_t`` offsets to each register "
"as defined by the hardware chip headers. The register is set to the provided "
"value. However, a ``reg offset`` that specifies a user data register (e.g., "
"COMPUTE_USER_DATA_0) needs special treatment. See :ref:`amdgpu-amdpal-code-"
"object-user-data-section` section for more information."
msgstr ""

#: ../../../AMDGPUUsage.rst:11292
msgid "User Data"
msgstr ""

#: ../../../AMDGPUUsage.rst:11294
msgid ""
"Each hardware stage has a set of 32-bit physical SPI *user data registers* "
"(either 16 or 32 based on graphics IP and the stage) which can be written "
"from a command buffer and then loaded into SGPRs when waves are launched via "
"a subsequent dispatch or draw operation. This is the way most arguments are "
"passed from the application/runtime to a hardware shader."
msgstr ""

#: ../../../AMDGPUUsage.rst:11301
msgid ""
"PAL abstracts this functionality by exposing a set of 128 *user data "
"entries* per pipeline a client can use to pass arguments from a command "
"buffer to one or more shaders in that pipeline. The ELF code object must "
"specify a mapping from virtualized *user data entries* to physical *user "
"data registers*, and PAL is responsible for implementing that mapping, "
"including spilling overflow *user data entries* to memory if needed."
msgstr ""

#: ../../../AMDGPUUsage.rst:11308
msgid ""
"Since the *user data registers* are GRBM-accessible SPI registers, this "
"mapping is actually embedded in the ``.registers`` metadata entry. For most "
"registers, the value in that map is a literal 32-bit value that should be "
"written to the register by the driver. However, when the register is a *user "
"data register* (any USER_DATA register e.g., SPI_SHADER_USER_DATA_PS_5), the "
"value is instead an encoding that tells the driver to write either a *user "
"data entry* value or one of several driver-internal values to the register. "
"This encoding is described in the following table:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11320
msgid ""
"Currently, *user data registers* 0 and 1 (e.g., SPI_SHADER_USER_DATA_PS_0, "
"and SPI_SHADER_USER_DATA_PS_1) are reserved. *User data register* 0 must "
"always be programmed to the address of the GlobalTable, and *user data "
"register* 1 must always be programmed to the address of the PerShaderTable."
msgstr ""

#: ../../../AMDGPUUsage.rst:11327
msgid "AMDPAL User Data Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:11333
msgid "0..127"
msgstr ""

#: ../../../AMDGPUUsage.rst:11333
msgid "*User Data Entry*"
msgstr ""

#: ../../../AMDGPUUsage.rst:11333
msgid "32-bit value of user_data_entry[N] as specified via *CmdSetUserData()*"
msgstr ""

#: ../../../AMDGPUUsage.rst:11334
msgid "0x10000000"
msgstr ""

#: ../../../AMDGPUUsage.rst:11334
msgid "GlobalTable"
msgstr ""

#: ../../../AMDGPUUsage.rst:11334
msgid ""
"32-bit pointer to GPU memory containing the global internal table (should "
"always point to *user data register* 0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11336
msgid "0x10000001"
msgstr ""

#: ../../../AMDGPUUsage.rst:11336
msgid "PerShaderTable"
msgstr ""

#: ../../../AMDGPUUsage.rst:11336
msgid ""
"32-bit pointer to GPU memory containing the per-shader internal table. See :"
"ref:`amdgpu-amdpal-code-object-metadata-user-data-per-shader-table-section` "
"for more detail (should always point to *user data register* 1)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11339
msgid "0x10000002"
msgstr ""

#: ../../../AMDGPUUsage.rst:11339
msgid "SpillTable"
msgstr ""

#: ../../../AMDGPUUsage.rst:11339
msgid ""
"32-bit pointer to GPU memory containing the user data spill table. See :ref:"
"`amdgpu-amdpal-code-object-metadata-user-data-spill-table-section` for more "
"detail."
msgstr ""

#: ../../../AMDGPUUsage.rst:11342
msgid "0x10000003"
msgstr ""

#: ../../../AMDGPUUsage.rst:11342
msgid "BaseVertex"
msgstr ""

#: ../../../AMDGPUUsage.rst:11342
msgid ""
"Vertex offset (32-bit unsigned integer). Not needed if the pipeline doesn't "
"reference the draw index in the vertex shader. Only supported by the first "
"stage in a graphics pipeline."
msgstr ""

#: ../../../AMDGPUUsage.rst:11345
msgid "0x10000004"
msgstr ""

#: ../../../AMDGPUUsage.rst:11345
msgid "BaseInstance"
msgstr ""

#: ../../../AMDGPUUsage.rst:11345
msgid ""
"Instance offset (32-bit unsigned integer). Only supported by the first stage "
"in a graphics pipeline."
msgstr ""

#: ../../../AMDGPUUsage.rst:11347
msgid "0x10000005"
msgstr ""

#: ../../../AMDGPUUsage.rst:11347
msgid "DrawIndex"
msgstr ""

#: ../../../AMDGPUUsage.rst:11347
msgid ""
"Draw index (32-bit unsigned integer). Only supported by the first stage in a "
"graphics pipeline."
msgstr ""

#: ../../../AMDGPUUsage.rst:11349
msgid "0x10000006"
msgstr ""

#: ../../../AMDGPUUsage.rst:11349
msgid "Workgroup"
msgstr ""

#: ../../../AMDGPUUsage.rst:11349
msgid ""
"Thread group count (32-bit unsigned integer). Low half of a 64-bit address "
"of a buffer containing the grid dimensions for a Compute dispatch operation. "
"The high half of the address is stored in the next sequential user-SGPR. "
"Only supported by compute pipelines."
msgstr ""

#: ../../../AMDGPUUsage.rst:11353
msgid "0x1000000A"
msgstr ""

#: ../../../AMDGPUUsage.rst:11353
msgid "EsGsLdsSize"
msgstr ""

#: ../../../AMDGPUUsage.rst:11353
msgid ""
"Indicates that PAL will program this user-SGPR to contain the amount of LDS "
"space used for the ES/GS pseudo-ring-buffer for passing data between shader "
"stages."
msgstr ""

#: ../../../AMDGPUUsage.rst:11356
msgid "0x1000000B"
msgstr ""

#: ../../../AMDGPUUsage.rst:11356
msgid "ViewId"
msgstr ""

#: ../../../AMDGPUUsage.rst:11356
msgid ""
"View id (32-bit unsigned integer) identifies a view of graphic pipeline "
"instancing."
msgstr ""

#: ../../../AMDGPUUsage.rst:11358
msgid "0x1000000C"
msgstr ""

#: ../../../AMDGPUUsage.rst:11358
msgid "StreamOutTable"
msgstr ""

#: ../../../AMDGPUUsage.rst:11358
msgid ""
"32-bit pointer to GPU memory containing the stream out target SRD table.  "
"This can only appear for one shader stage per pipeline."
msgstr ""

#: ../../../AMDGPUUsage.rst:11360
msgid "0x1000000D"
msgstr ""

#: ../../../AMDGPUUsage.rst:11360
msgid "PerShaderPerfData"
msgstr ""

#: ../../../AMDGPUUsage.rst:11360
msgid ""
"32-bit pointer to GPU memory containing the per-shader performance data "
"buffer."
msgstr ""

#: ../../../AMDGPUUsage.rst:11361
msgid "0x1000000F"
msgstr ""

#: ../../../AMDGPUUsage.rst:11361
msgid "VertexBufferTable"
msgstr ""

#: ../../../AMDGPUUsage.rst:11361
msgid ""
"32-bit pointer to GPU memory containing the vertex buffer SRD table.  This "
"can only appear for one shader stage per pipeline."
msgstr ""

#: ../../../AMDGPUUsage.rst:11363
msgid "0x10000010"
msgstr ""

#: ../../../AMDGPUUsage.rst:11363
msgid "UavExportTable"
msgstr ""

#: ../../../AMDGPUUsage.rst:11363
msgid ""
"32-bit pointer to GPU memory containing the UAV export SRD table.  This can "
"only appear for one shader stage per pipeline (PS). These replace color "
"targets and are completely separate from any UAVs used by the shader. This "
"is optional, and only used by the PS when UAV exports are used to replace "
"color-target exports to optimize specific shaders."
msgstr ""

#: ../../../AMDGPUUsage.rst:11368
msgid "0x10000011"
msgstr ""

#: ../../../AMDGPUUsage.rst:11368
msgid "NggCullingData"
msgstr ""

#: ../../../AMDGPUUsage.rst:11368
msgid ""
"64-bit pointer to GPU memory containing the hardware register data needed by "
"some NGG pipelines to perform culling.  This value contains the address of "
"the first of two consecutive registers which provide the full GPU address."
msgstr ""

#: ../../../AMDGPUUsage.rst:11371
msgid "0x10000015"
msgstr ""

#: ../../../AMDGPUUsage.rst:11371
msgid "FetchShaderPtr"
msgstr ""

#: ../../../AMDGPUUsage.rst:11371
msgid "64-bit pointer to GPU memory containing the fetch shader subroutine."
msgstr ""

#: ../../../AMDGPUUsage.rst:11377
msgid "Per-Shader Table"
msgstr ""

#: ../../../AMDGPUUsage.rst:11379
msgid ""
"Low 32 bits of the GPU address for an optional buffer in the ``.data`` "
"section of the ELF. The high 32 bits of the address match the high 32 bits "
"of the shader's program counter."
msgstr ""

#: ../../../AMDGPUUsage.rst:11383
msgid ""
"The buffer can be anything the shader compiler needs it for, and allows each "
"shader to have its own region of the ``.data`` section. Typically, this "
"could be a table of buffer SRD's and the data pointed to by the buffer "
"SRD's, but it could be a flat-address region of memory as well. Its layout "
"and usage are defined by the shader compiler."
msgstr ""

#: ../../../AMDGPUUsage.rst:11389
msgid ""
"Each shader's table in the ``.data`` section is referenced by the symbol "
"``_amdgpu_``\\ *xs*\\ ``_shdr_intrl_data``  where *xs* corresponds with the "
"hardware shader stage the data is for. E.g., ``_amdgpu_cs_shdr_intrl_data`` "
"for the compute shader hardware stage."
msgstr ""

#: ../../../AMDGPUUsage.rst:11397
msgid "Spill Table"
msgstr ""

#: ../../../AMDGPUUsage.rst:11399
msgid ""
"It is possible for a hardware shader to need access to more *user data "
"entries* than there are slots available in user data registers for one or "
"more hardware shader stages. In that case, the PAL runtime expects the "
"necessary *user data entries* to be spilled to GPU memory and use one user "
"data register to point to the spilled user data memory. The value of the "
"*user data entry* must then represent the location where a shader expects to "
"read the low 32-bits of the table's GPU virtual address. The *spill table* "
"itself represents a set of 32-bit values managed by the PAL runtime in GPU-"
"accessible memory that can be made indirectly accessible to a hardware "
"shader."
msgstr ""

#: ../../../AMDGPUUsage.rst:11411
msgid "Unspecified OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:11413
msgid ""
"This section provides code conventions used when the target triple OS is "
"empty (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11419
msgid ""
"For code objects generated by AMDGPU backend for non-amdhsa OS, the runtime "
"does not install a trap handler. The ``llvm.trap`` and ``llvm.debugtrap`` "
"instructions are handled as follows:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11423
msgid "AMDGPU Trap Handler for Non-AMDHSA OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:11429
msgid "llvm.trap"
msgstr ""

#: ../../../AMDGPUUsage.rst:11429
msgid "s_endpgm"
msgstr ""

#: ../../../AMDGPUUsage.rst:11429
msgid "Causes wavefront to be terminated."
msgstr ""

#: ../../../AMDGPUUsage.rst:11430
msgid "llvm.debugtrap"
msgstr ""

#: ../../../AMDGPUUsage.rst:11430
msgid "Compiler warning given that there is no trap handler installed."
msgstr ""

#: ../../../AMDGPUUsage.rst:11435
msgid "Source Languages"
msgstr ""

#: ../../../AMDGPUUsage.rst:11440
msgid "OpenCL"
msgstr ""

#: ../../../AMDGPUUsage.rst:11442
msgid "When the language is OpenCL the following differences occur:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11444
msgid ""
"The OpenCL memory model is used (see :ref:`amdgpu-amdhsa-memory-model`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11445
msgid ""
"The AMDGPU backend appends additional arguments to the kernel's explicit "
"arguments for the AMDHSA OS (see :ref:`opencl-kernel-implicit-arguments-"
"appended-for-amdhsa-os-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11448
msgid ""
"Additional metadata is generated (see :ref:`amdgpu-amdhsa-code-object-"
"metadata`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11451
msgid "OpenCL kernel implicit arguments appended for AMDHSA OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:11455
msgid "Position"
msgstr ""

#: ../../../AMDGPUUsage.rst:11455
msgid "Byte Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:11455
msgid "Byte Alignment"
msgstr ""

#: ../../../AMDGPUUsage.rst:11458
msgid "OpenCL Global Offset X"
msgstr ""

#: ../../../AMDGPUUsage.rst:11459
msgid "OpenCL Global Offset Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:11460
msgid "OpenCL Global Offset Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:11461
msgid "OpenCL address of printf buffer"
msgstr ""

#: ../../../AMDGPUUsage.rst:11462
msgid "OpenCL address of virtual queue used by enqueue_kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:11464
msgid "OpenCL address of AqlWrap struct used by enqueue_kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:11466
msgid "Pointer argument used for Multi-gird synchronization."
msgstr ""

#: ../../../AMDGPUUsage.rst:11473
msgid "HCC"
msgstr ""

#: ../../../AMDGPUUsage.rst:11475
msgid "When the language is HCC the following differences occur:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11477
msgid "The HSA memory model is used (see :ref:`amdgpu-amdhsa-memory-model`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11482
msgid "Assembler"
msgstr ""

#: ../../../AMDGPUUsage.rst:11484
msgid ""
"AMDGPU backend has LLVM-MC based assembler which is currently in "
"development. It supports AMDGCN GFX6-GFX10."
msgstr ""

#: ../../../AMDGPUUsage.rst:11487
msgid "This section describes general syntax for instructions and operands."
msgstr ""

#: ../../../AMDGPUUsage.rst:11490
msgid "Instructions"
msgstr ""

#: ../../../AMDGPUUsage.rst:11492
msgid ""
"An instruction has the following :doc:`syntax<AMDGPUInstructionSyntax>`:"
msgstr ""

#: ../../../AMDGPUUsage.rst:0
msgid ""
"``<``\\ *opcode*\\ ``> <``\\ *operand0*\\ ``>, <``\\ *operand1*\\ ``>,... "
"<``\\ *modifier0*\\ ``> <``\\ *modifier1*\\ ``>...``"
msgstr ""

#: ../../../AMDGPUUsage.rst:11497
msgid ""
":doc:`Operands<AMDGPUOperandSyntax>` are comma-separated while :doc:"
"`modifiers<AMDGPUModifierSyntax>` are space-separated."
msgstr ""

#: ../../../AMDGPUUsage.rst:11500
msgid ""
"The order of operands and modifiers is fixed. Most modifiers are optional "
"and may be omitted."
msgstr ""

#: ../../../AMDGPUUsage.rst:11503
msgid ""
"Links to detailed instruction syntax description may be found in the "
"following table. Note that features under development are not included in "
"this description."
msgstr ""

#: ../../../AMDGPUUsage.rst:11508
msgid "Core ISA"
msgstr ""

#: ../../../AMDGPUUsage.rst:11508
msgid "ISA Extensions"
msgstr ""

#: ../../../AMDGPUUsage.rst:11510
msgid ":doc:`GFX7<AMDGPU/AMDGPUAsmGFX7>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:11510 ../../../AMDGPUUsage.rst:11511
msgid "\\-"
msgstr ""

#: ../../../AMDGPUUsage.rst:11511
msgid ":doc:`GFX8<AMDGPU/AMDGPUAsmGFX8>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:11512
msgid ":doc:`GFX9<AMDGPU/AMDGPUAsmGFX9>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:11512
msgid ":doc:`gfx900<AMDGPU/AMDGPUAsmGFX900>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:11514
msgid ":doc:`gfx902<AMDGPU/AMDGPUAsmGFX900>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:11516
msgid ":doc:`gfx904<AMDGPU/AMDGPUAsmGFX904>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:11518
msgid ":doc:`gfx906<AMDGPU/AMDGPUAsmGFX906>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:11520
msgid ":doc:`gfx908<AMDGPU/AMDGPUAsmGFX908>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:11522
msgid ":doc:`gfx909<AMDGPU/AMDGPUAsmGFX900>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:11524
msgid ":doc:`gfx90a<AMDGPU/AMDGPUAsmGFX90a>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:11526
msgid ":doc:`GFX10<AMDGPU/AMDGPUAsmGFX10>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:11526
msgid ":doc:`gfx1011<AMDGPU/AMDGPUAsmGFX1011>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:11528
msgid ":doc:`gfx1012<AMDGPU/AMDGPUAsmGFX1011>`"
msgstr ""

#: ../../../AMDGPUUsage.rst:11531
msgid ""
"For more information about instructions, their semantics and supported "
"combinations of operands, refer to one of instruction set architecture "
"manuals [AMD-GCN-GFX6]_, [AMD-GCN-GFX7]_, [AMD-GCN-GFX8]_, [AMD-GCN-GFX900-"
"GFX904-VEGA]_, [AMD-GCN-GFX906-VEGA7NM]_ [AMD-GCN-GFX908-CDNA1]_, [AMD-GCN-"
"GFX10-RDNA1]_ and [AMD-GCN-GFX10-RDNA2]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:11538
msgid "Operands"
msgstr ""

#: ../../../AMDGPUUsage.rst:11540
msgid ""
"Detailed description of operands may be found :doc:"
"`here<AMDGPUOperandSyntax>`."
msgstr ""

#: ../../../AMDGPUUsage.rst:11543
msgid "Modifiers"
msgstr ""

#: ../../../AMDGPUUsage.rst:11545
msgid ""
"Detailed description of modifiers may be found :doc:"
"`here<AMDGPUModifierSyntax>`."
msgstr ""

#: ../../../AMDGPUUsage.rst:11549
msgid "Instruction Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:11552
msgid "DS"
msgstr ""

#: ../../../AMDGPUUsage.rst:11561
msgid ""
"For full list of supported instructions, refer to \"LDS/GDS instructions\" "
"in ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:11565
msgid "FLAT"
msgstr ""

#: ../../../AMDGPUUsage.rst:11575
msgid ""
"For full list of supported instructions, refer to \"FLAT instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:11579
msgid "MUBUF"
msgstr ""

#: ../../../AMDGPUUsage.rst:11589
msgid ""
"For full list of supported instructions, refer to \"MUBUF Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:11593
msgid "SMRD/SMEM"
msgstr ""

#: ../../../AMDGPUUsage.rst:11603
msgid ""
"For full list of supported instructions, refer to \"Scalar Memory "
"Operations\" in ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:11607
msgid "SOP1"
msgstr ""

#: ../../../AMDGPUUsage.rst:11619
msgid ""
"For full list of supported instructions, refer to \"SOP1 Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:11623
msgid "SOP2"
msgstr ""

#: ../../../AMDGPUUsage.rst:11637
msgid ""
"For full list of supported instructions, refer to \"SOP2 Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:11641
msgid "SOPC"
msgstr ""

#: ../../../AMDGPUUsage.rst:11650
msgid ""
"For full list of supported instructions, refer to \"SOPC Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:11654
msgid "SOPP"
msgstr ""

#: ../../../AMDGPUUsage.rst:11670
msgid ""
"For full list of supported instructions, refer to \"SOPP Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:11673
msgid ""
"Unless otherwise mentioned, little verification is performed on the operands "
"of SOPP Instructions, so it is up to the programmer to be familiar with the "
"range or acceptable values."
msgstr ""

#: ../../../AMDGPUUsage.rst:11678
msgid "VALU"
msgstr ""

#: ../../../AMDGPUUsage.rst:11680
msgid ""
"For vector ALU instruction opcodes (VOP1, VOP2, VOP3, VOPC, VOP_DPP, "
"VOP_SDWA), the assembler will automatically use optimal encoding based on "
"its operands. To force specific encoding, one can add a suffix to the opcode "
"of the instruction:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11684
msgid "_e32 for 32-bit VOP1/VOP2/VOPC"
msgstr ""

#: ../../../AMDGPUUsage.rst:11685
msgid "_e64 for 64-bit VOP3"
msgstr ""

#: ../../../AMDGPUUsage.rst:11686
msgid "_dpp for VOP_DPP"
msgstr ""

#: ../../../AMDGPUUsage.rst:11687
msgid "_sdwa for VOP_SDWA"
msgstr ""

#: ../../../AMDGPUUsage.rst:11689
msgid "VOP1/VOP2/VOP3/VOPC examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11706
msgid "VOP_DPP examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11719
msgid "VOP_SDWA examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11729
msgid ""
"For full list of supported instructions, refer to \"Vector ALU "
"instructions\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:11734
msgid "Code Object V2 Predefined Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:11740 ../../../AMDGPUUsage.rst:11913
msgid ""
"The AMDGPU assembler defines and updates some symbols automatically. These "
"symbols do not affect code generation."
msgstr ""

#: ../../../AMDGPUUsage.rst:11744
msgid ".option.machine_version_major"
msgstr ""

#: ../../../AMDGPUUsage.rst:11746 ../../../AMDGPUUsage.rst:11919
msgid ""
"Set to the GFX major generation number of the target being assembled for. "
"For example, when assembling for a \"GFX9\" target this will be set to the "
"integer value \"9\". The possible GFX major generation numbers are presented "
"in :ref:`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:11752
msgid ".option.machine_version_minor"
msgstr ""

#: ../../../AMDGPUUsage.rst:11754 ../../../AMDGPUUsage.rst:11927
msgid ""
"Set to the GFX minor generation number of the target being assembled for. "
"For example, when assembling for a \"GFX810\" target this will be set to the "
"integer value \"1\". The possible GFX minor generation numbers are presented "
"in :ref:`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:11760
msgid ".option.machine_version_stepping"
msgstr ""

#: ../../../AMDGPUUsage.rst:11762 ../../../AMDGPUUsage.rst:11935
msgid ""
"Set to the GFX stepping generation number of the target being assembled for. "
"For example, when assembling for a \"GFX704\" target this will be set to the "
"integer value \"4\". The possible GFX stepping generation numbers are "
"presented in :ref:`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:11768
msgid ".kernel.vgpr_count"
msgstr ""

#: ../../../AMDGPUUsage.rst:11770
msgid ""
"Set to zero each time a :ref:`amdgpu-amdhsa-assembler-directive-"
"amdgpu_hsa_kernel` directive is encountered. At each instruction, if the "
"current value of this symbol is less than or equal to the maximum VGPR "
"number explicitly referenced within that instruction then the symbol value "
"is updated to equal that VGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:11778
msgid ".kernel.sgpr_count"
msgstr ""

#: ../../../AMDGPUUsage.rst:11780
msgid ""
"Set to zero each time a :ref:`amdgpu-amdhsa-assembler-directive-"
"amdgpu_hsa_kernel` directive is encountered. At each instruction, if the "
"current value of this symbol is less than or equal to the maximum VGPR "
"number explicitly referenced within that instruction then the symbol value "
"is updated to equal that SGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:11790
msgid "Code Object V2 Directives"
msgstr ""

#: ../../../AMDGPUUsage.rst:11796
msgid ""
"AMDGPU ABI defines auxiliary data in output code object. In assembly source, "
"one can specify them with assembler directives."
msgstr ""

#: ../../../AMDGPUUsage.rst:11800
msgid ".hsa_code_object_version major, minor"
msgstr ""

#: ../../../AMDGPUUsage.rst:11802
msgid ""
"*major* and *minor* are integers that specify the version of the HSA code "
"object that will be generated by the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:11806
msgid ".hsa_code_object_isa [major, minor, stepping, vendor, arch]"
msgstr ""

#: ../../../AMDGPUUsage.rst:11809
msgid ""
"*major*, *minor*, and *stepping* are all integers that describe the "
"instruction set architecture (ISA) version of the assembly program."
msgstr ""

#: ../../../AMDGPUUsage.rst:11812
msgid ""
"*vendor* and *arch* are quoted strings. *vendor* should always be equal to "
"\"AMD\" and *arch* should always be equal to \"AMDGPU\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:11815
msgid ""
"By default, the assembler will derive the ISA version, *vendor*, and *arch* "
"from the value of the -mcpu option that is passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:11821
msgid ".amdgpu_hsa_kernel (name)"
msgstr ""

#: ../../../AMDGPUUsage.rst:11823
msgid ""
"This directives specifies that the symbol with given name is a kernel entry "
"point (label) and the object should contain corresponding symbol of type "
"STT_AMDGPU_HSA_KERNEL."
msgstr ""

#: ../../../AMDGPUUsage.rst:11828
msgid ".amd_kernel_code_t"
msgstr ""

#: ../../../AMDGPUUsage.rst:11830
msgid ""
"This directive marks the beginning of a list of key / value pairs that are "
"used to specify the amd_kernel_code_t object that will be emitted by the "
"assembler. The list must be terminated by the *.end_amd_kernel_code_t* "
"directive. For any amd_kernel_code_t values that are unspecified a default "
"value will be used. The default value for all keys is 0, with the following "
"exceptions:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11836
msgid "*amd_code_version_major* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:11837
msgid "*amd_kernel_code_version_minor* defaults to 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:11838
msgid "*amd_machine_kind* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:11839
msgid ""
"*amd_machine_version_major*, *machine_version_minor*, and "
"*amd_machine_version_stepping* are derived from the value of the -mcpu "
"option that is passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:11842
msgid "*kernel_code_entry_byte_offset* defaults to 256."
msgstr ""

#: ../../../AMDGPUUsage.rst:11843
msgid ""
"*wavefront_size* defaults 6 for all targets before GFX10. For GFX10 onwards "
"defaults to 6 if target feature ``wavefrontsize64`` is enabled, otherwise 5. "
"Note that wavefront size is specified as a power of two, so a value of **n** "
"means a size of 2^ **n**."
msgstr ""

#: ../../../AMDGPUUsage.rst:11847
msgid "*call_convention* defaults to -1."
msgstr ""

#: ../../../AMDGPUUsage.rst:11848
msgid ""
"*kernarg_segment_alignment*, *group_segment_alignment*, and "
"*private_segment_alignment* default to 4. Note that alignments are specified "
"as a power of 2, so a value of **n** means an alignment of 2^ **n**."
msgstr ""

#: ../../../AMDGPUUsage.rst:11851
msgid ""
"*enable_tg_split* defaults to 1 if target feature ``tgsplit`` is enabled for "
"GFX90A onwards."
msgstr ""

#: ../../../AMDGPUUsage.rst:11853
msgid ""
"*enable_wgp_mode* defaults to 1 if target feature ``cumode`` is disabled for "
"GFX10 onwards."
msgstr ""

#: ../../../AMDGPUUsage.rst:11855
msgid "*enable_mem_ordered* defaults to 1 for GFX10 onwards."
msgstr ""

#: ../../../AMDGPUUsage.rst:11857
msgid ""
"The *.amd_kernel_code_t* directive must be placed immediately after the "
"function label and before any instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:11860
msgid ""
"For a full list of amd_kernel_code_t keys, refer to AMDGPU ABI document, "
"comments in lib/Target/AMDGPU/AmdKernelCodeT.h and test/CodeGen/AMDGPU/hsa.s."
msgstr ""

#: ../../../AMDGPUUsage.rst:11866
msgid "Code Object V2 Example Source Code"
msgstr ""

#: ../../../AMDGPUUsage.rst:11869
msgid ""
"Code Object V2 is not the default code object version emitted by this "
"version of LLVM."
msgstr ""

#: ../../../AMDGPUUsage.rst:11872 ../../../AMDGPUUsage.rst:12147
msgid ""
"Here is an example of a minimal assembly source file, defining one HSA "
"kernel:"
msgstr ""

#: ../../../AMDGPUUsage.rst:11911
msgid "Code Object V3 to V4 Predefined Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:11917
msgid ".amdgcn.gfx_generation_number"
msgstr ""

#: ../../../AMDGPUUsage.rst:11925
msgid ".amdgcn.gfx_generation_minor"
msgstr ""

#: ../../../AMDGPUUsage.rst:11933
msgid ".amdgcn.gfx_generation_stepping"
msgstr ""

#: ../../../AMDGPUUsage.rst:11943
msgid ".amdgcn.next_free_vgpr"
msgstr ""

#: ../../../AMDGPUUsage.rst:11945
msgid ""
"Set to zero before assembly begins. At each instruction, if the current "
"value of this symbol is less than or equal to the maximum VGPR number "
"explicitly referenced within that instruction then the symbol value is "
"updated to equal that VGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:11950
msgid ""
"May be used to set the `.amdhsa_next_free_vgpr` directive in :ref:`amdhsa-"
"kernel-directives-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:11953 ../../../AMDGPUUsage.rst:11968
msgid ""
"May be set at any time, e.g. manually set to zero at the start of each "
"kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:11958
msgid ".amdgcn.next_free_sgpr"
msgstr ""

#: ../../../AMDGPUUsage.rst:11960
msgid ""
"Set to zero before assembly begins. At each instruction, if the current "
"value of this symbol is less than or equal the maximum SGPR number "
"explicitly referenced within that instruction then the symbol value is "
"updated to equal that SGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:11965
msgid ""
"May be used to set the `.amdhsa_next_free_spgr` directive in :ref:`amdhsa-"
"kernel-directives-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:11973
msgid "Code Object V3 to V4 Directives"
msgstr ""

#: ../../../AMDGPUUsage.rst:11975
msgid ""
"Directives which begin with ``.amdgcn`` are valid for all ``amdgcn`` "
"architecture processors, and are not OS-specific. Directives which begin "
"with ``.amdhsa`` are specific to ``amdgcn`` architecture processors when the "
"``amdhsa`` OS is specified. See :ref:`amdgpu-target-triples` and :ref:"
"`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:11984
msgid ".amdgcn_target <target-triple> \"-\" <target-id>"
msgstr ""

#: ../../../AMDGPUUsage.rst:11986
msgid ""
"Optional directive which declares the ``<target-triple>-<target-id>`` "
"supported by the containing assembler source file. Used by the assembler to "
"validate command-line options such as ``-triple``, ``-mcpu``, and ``--"
"offload-arch=<target-id>``. A non-canonical target ID is allowed. See :ref:"
"`amdgpu-target-triples` and :ref:`amdgpu-target-id`."
msgstr ""

#: ../../../AMDGPUUsage.rst:11994
msgid ""
"The target ID syntax used for code object V2 to V3 for this directive "
"differs from that used elsewhere. See :ref:`amdgpu-target-id-v2-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:11998
msgid ".amdhsa_kernel <name>"
msgstr ""

#: ../../../AMDGPUUsage.rst:12000
msgid ""
"Creates a correctly aligned AMDHSA kernel descriptor and a symbol, ``<name>."
"kd``, in the current location of the current section. Only valid when the OS "
"is ``amdhsa``. ``<name>`` must be a symbol that labels the first instruction "
"to execute, and does not need to be previously defined."
msgstr ""

#: ../../../AMDGPUUsage.rst:12005
msgid ""
"Marks the beginning of a list of directives used to generate the bytes of a "
"kernel descriptor, as described in :ref:`amdgpu-amdhsa-kernel-descriptor`. "
"Directives which may appear in this list are described in :ref:`amdhsa-"
"kernel-directives-table`. Directives may appear in any order, must be valid "
"for the target being assembled for, and cannot be repeated. Directives "
"support the range of values specified by the field they reference in :ref:"
"`amdgpu-amdhsa-kernel-descriptor`. If a directive is not specified, it is "
"assumed to have its default value, unless it is marked as \"Required\", in "
"which case it is an error to omit the directive. This list of directives is "
"terminated by an ``.end_amdhsa_kernel`` directive."
msgstr ""

#: ../../../AMDGPUUsage.rst:12016
msgid "AMDHSA Kernel Assembler Directives"
msgstr ""

#: ../../../AMDGPUUsage.rst:12020
msgid "Directive"
msgstr ""

#: ../../../AMDGPUUsage.rst:12020
msgid "Default"
msgstr ""

#: ../../../AMDGPUUsage.rst:12020
msgid "Supported On"
msgstr ""

#: ../../../AMDGPUUsage.rst:12022
msgid "``.amdhsa_group_segment_fixed_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12022 ../../../AMDGPUUsage.rst:12024
#: ../../../AMDGPUUsage.rst:12026 ../../../AMDGPUUsage.rst:12028
#: ../../../AMDGPUUsage.rst:12030 ../../../AMDGPUUsage.rst:12032
#: ../../../AMDGPUUsage.rst:12034 ../../../AMDGPUUsage.rst:12036
#: ../../../AMDGPUUsage.rst:12038 ../../../AMDGPUUsage.rst:12040
#: ../../../AMDGPUUsage.rst:12046 ../../../AMDGPUUsage.rst:12048
#: ../../../AMDGPUUsage.rst:12050 ../../../AMDGPUUsage.rst:12052
#: ../../../AMDGPUUsage.rst:12054 ../../../AMDGPUUsage.rst:12056
#: ../../../AMDGPUUsage.rst:12060 ../../../AMDGPUUsage.rst:12063
#: ../../../AMDGPUUsage.rst:12069 ../../../AMDGPUUsage.rst:12080
#: ../../../AMDGPUUsage.rst:12084 ../../../AMDGPUUsage.rst:12088
#: ../../../AMDGPUUsage.rst:12092 ../../../AMDGPUUsage.rst:12096
#: ../../../AMDGPUUsage.rst:12098 ../../../AMDGPUUsage.rst:12114
#: ../../../AMDGPUUsage.rst:12116 ../../../AMDGPUUsage.rst:12118
#: ../../../AMDGPUUsage.rst:12120 ../../../AMDGPUUsage.rst:12122
#: ../../../AMDGPUUsage.rst:12124 ../../../AMDGPUUsage.rst:12126
msgid "GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:12022
msgid ""
"Controls GROUP_SEGMENT_FIXED_SIZE in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12024
msgid "``.amdhsa_private_segment_fixed_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12024
msgid ""
"Controls PRIVATE_SEGMENT_FIXED_SIZE in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12026
msgid "``.amdhsa_kernarg_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12026
msgid ""
"Controls KERNARG_SIZE in :ref:`amdgpu-amdhsa-kernel-descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12028
msgid "``.amdhsa_user_sgpr_private_segment_buffer``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12028
msgid ""
"Controls ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12030
msgid "``.amdhsa_user_sgpr_dispatch_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12030
msgid ""
"Controls ENABLE_SGPR_DISPATCH_PTR in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12032
msgid "``.amdhsa_user_sgpr_queue_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12032
msgid ""
"Controls ENABLE_SGPR_QUEUE_PTR in :ref:`amdgpu-amdhsa-kernel-descriptor-v3-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12034
msgid "``.amdhsa_user_sgpr_kernarg_segment_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12034
msgid ""
"Controls ENABLE_SGPR_KERNARG_SEGMENT_PTR in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12036
msgid "``.amdhsa_user_sgpr_dispatch_id``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12036
msgid ""
"Controls ENABLE_SGPR_DISPATCH_ID in :ref:`amdgpu-amdhsa-kernel-descriptor-v3-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12038
msgid "``.amdhsa_user_sgpr_flat_scratch_init``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12038
msgid ""
"Controls ENABLE_SGPR_FLAT_SCRATCH_INIT in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12040
msgid "``.amdhsa_user_sgpr_private_segment_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12040
msgid ""
"Controls ENABLE_SGPR_PRIVATE_SEGMENT_SIZE in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12042
msgid "``.amdhsa_wavefront_size32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12042
msgid "Target Feature Specific (wavefrontsize64)"
msgstr ""

#: ../../../AMDGPUUsage.rst:12042
msgid ""
"Controls ENABLE_WAVEFRONT_SIZE32 in :ref:`amdgpu-amdhsa-kernel-descriptor-v3-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12046
msgid "``.amdhsa_system_sgpr_private_segment_wavefront_offset``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12046
msgid ""
"Controls ENABLE_PRIVATE_SEGMENT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12048
msgid "``.amdhsa_system_sgpr_workgroup_id_x``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12048
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_ID_X in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12050
msgid "``.amdhsa_system_sgpr_workgroup_id_y``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12050
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_ID_Y in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12052
msgid "``.amdhsa_system_sgpr_workgroup_id_z``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12052
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_ID_Z in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12054
msgid "``.amdhsa_system_sgpr_workgroup_info``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12054
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_INFO in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12056
msgid "``.amdhsa_system_vgpr_workitem_id``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12056
msgid ""
"Controls ENABLE_VGPR_WORKITEM_ID in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-system-"
"vgpr-work-item-id-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12060
msgid "``.amdhsa_next_free_vgpr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12060
msgid ""
"Maximum VGPR number explicitly referenced, plus one. Used to calculate "
"GRANULATED_WORKITEM_VGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12063
msgid "``.amdhsa_next_free_sgpr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12063
msgid ""
"Maximum SGPR number explicitly referenced, plus one. Used to calculate "
"GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12066
msgid "``.amdhsa_accum_offset``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12066
msgid ""
"Offset of a first AccVGPR in the unified register file. Used to calculate "
"ACCUM_OFFSET in :ref:`amdgpu-amdhsa-compute_pgm_rsrc3-gfx90a-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12069
msgid "``.amdhsa_reserve_vcc``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12069
msgid ""
"Whether the kernel may use the special VCC SGPR. Used to calculate "
"GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12072
msgid "``.amdhsa_reserve_flat_scratch``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12072
msgid ""
"Whether the kernel may use flat instructions to access scratch memory. Used "
"to calculate GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc1-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12076
msgid "``.amdhsa_reserve_xnack_mask``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12076
msgid "Target Feature Specific (xnack)"
msgstr ""

#: ../../../AMDGPUUsage.rst:12076
msgid "GFX8-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:12076
msgid ""
"Whether the kernel may trigger XNACK replay. Used to calculate "
"GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12080
msgid "``.amdhsa_float_round_mode_32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12080
msgid ""
"Controls FLOAT_ROUND_MODE_32 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-floating-"
"point-rounding-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12084
msgid "``.amdhsa_float_round_mode_16_64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12084
msgid ""
"Controls FLOAT_ROUND_MODE_16_64 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-rounding-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12088
msgid "``.amdhsa_float_denorm_mode_32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12088
msgid ""
"Controls FLOAT_DENORM_MODE_32 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-floating-"
"point-denorm-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12092
msgid "``.amdhsa_float_denorm_mode_16_64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12092
msgid ""
"Controls FLOAT_DENORM_MODE_16_64 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-denorm-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12096
msgid "``.amdhsa_dx10_clamp``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12096
msgid ""
"Controls ENABLE_DX10_CLAMP in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12098
msgid "``.amdhsa_ieee_mode``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12098
msgid ""
"Controls ENABLE_IEEE_MODE in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12100
msgid "``.amdhsa_fp16_overflow``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12100
msgid ""
"Controls FP16_OVFL in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12102
msgid "``.amdhsa_tg_split``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12102
msgid "Target Feature Specific (tgsplit)"
msgstr ""

#: ../../../AMDGPUUsage.rst:12102
msgid ""
"Controls TG_SPLIT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc3-gfx90a-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12106
msgid "``.amdhsa_workgroup_processor_mode``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12106
msgid "Target Feature Specific (cumode)"
msgstr ""

#: ../../../AMDGPUUsage.rst:12106
msgid ""
"Controls ENABLE_WGP_MODE in :ref:`amdgpu-amdhsa-kernel-descriptor-v3-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12110
msgid "``.amdhsa_memory_ordered``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12110
msgid ""
"Controls MEM_ORDERED in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12112
msgid "``.amdhsa_forward_progress``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12112
msgid ""
"Controls FWD_PROGRESS in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12114
msgid "``.amdhsa_exception_fp_ieee_invalid_op``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12114
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_INVALID_OPERATION in :ref:`amdgpu-"
"amdhsa-compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12116
msgid "``.amdhsa_exception_fp_denorm_src``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12116
msgid ""
"Controls ENABLE_EXCEPTION_FP_DENORMAL_SOURCE in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12118
msgid "``.amdhsa_exception_fp_ieee_div_zero``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12118
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_DIVISION_BY_ZERO in :ref:`amdgpu-"
"amdhsa-compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12120
msgid "``.amdhsa_exception_fp_ieee_overflow``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12120
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_OVERFLOW in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12122
msgid "``.amdhsa_exception_fp_ieee_underflow``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12122
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_UNDERFLOW in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12124
msgid "``.amdhsa_exception_fp_ieee_inexact``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12124
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_INEXACT in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12126
msgid "``.amdhsa_exception_int_div_zero``"
msgstr ""

#: ../../../AMDGPUUsage.rst:12126
msgid ""
"Controls ENABLE_EXCEPTION_INT_DIVIDE_BY_ZERO in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12131
msgid ".amdgpu_metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:12133
msgid ""
"Optional directive which declares the contents of the ``NT_AMDGPU_METADATA`` "
"note record (see :ref:`amdgpu-elf-note-records-table-v3-v4`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:12136
msgid ""
"The contents must be in the [YAML]_ markup format, with the same structure "
"and semantics described in :ref:`amdgpu-amdhsa-code-object-metadata-v3` or :"
"ref:`amdgpu-amdhsa-code-object-metadata-v4`."
msgstr ""

#: ../../../AMDGPUUsage.rst:12140
msgid "This directive is terminated by an ``.end_amdgpu_metadata`` directive."
msgstr ""

#: ../../../AMDGPUUsage.rst:12145
msgid "Code Object V3 to V4 Example Source Code"
msgstr ""

#: ../../../AMDGPUUsage.rst:12202
msgid "This kernel is equivalent to the following HIP program:"
msgstr ""

#: ../../../AMDGPUUsage.rst:12211
msgid ""
"If an assembly source file contains multiple kernels and/or functions, the :"
"ref:`amdgpu-amdhsa-assembler-symbol-next_free_vgpr` and :ref:`amdgpu-amdhsa-"
"assembler-symbol-next_free_sgpr` symbols may be reset using the ``.set "
"<symbol>, <expression>`` directive. For example, in the case of two kernels, "
"where ``function1`` is only called from ``kernel1`` it is sufficient to "
"group the function with the kernel that calls it and reset the symbols "
"between the two connected components:"
msgstr ""

#: ../../../AMDGPUUsage.rst:12281
msgid ""
"These symbols cannot identify connected components in order to automatically "
"track the usage for each kernel. However, in some cases careful organization "
"of the kernels and functions in the source file means there is minimal "
"additional effort required to accurately calculate GPR usage."
msgstr ""

#: ../../../AMDGPUUsage.rst:12287
msgid "Additional Documentation"
msgstr ""

#: ../../../AMDGPUUsage.rst:12289
msgid ""
"`AMD Southern Islands Series ISA <http://developer.amd.com/wordpress/"
"media/2012/12/AMD_Southern_Islands_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12290
msgid ""
"`AMD Sea Islands Series ISA <http://developer.amd.com/wordpress/"
"media/2013/07/AMD_Sea_Islands_Instruction_Set_Architecture.pdf>`_"
msgstr ""

#: ../../../AMDGPUUsage.rst:12291
msgid ""
"`AMD GCN3 Instruction Set Architecture <http://amd-dev.wpengine.netdna-cdn."
"com/wordpress/media/2013/12/AMD_GCN3_Instruction_Set_Architecture_rev1.1."
"pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12292
msgid ""
"`AMD Vega Instruction Set Architecture <http://developer.amd.com/wordpress/"
"media/2013/12/Vega_Shader_ISA_28July2017.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12293
msgid ""
"`AMD Vega 7nm Instruction Set Architecture <https://gpuopen.com/wp-content/"
"uploads/2019/11/Vega_7nm_Shader_ISA_26November2019.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12294
msgid ""
"`AMD Instinct MI100 Instruction Set Architecture <https://developer.amd.com/"
"wp-content/resources/CDNA1_Shader_ISA_14December2020.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12295
msgid ""
"`AMD RDNA 1.0 Instruction Set Architecture <https://gpuopen.com/wp-content/"
"uploads/2019/08/RDNA_Shader_ISA_5August2019.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12296
msgid ""
"`AMD RDNA 2 Instruction Set Architecture <https://developer.amd.com/wp-"
"content/resources/RDNA2_Shader_ISA_November2020.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12297
msgid ""
"`AMD R6xx shader ISA <http://developer.amd.com/wordpress/media/2012/10/"
"R600_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12298
msgid ""
"`AMD R7xx shader ISA <http://developer.amd.com/wordpress/media/2012/10/R700-"
"Family_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12299
msgid ""
"`AMD Evergreen shader ISA <http://developer.amd.com/wordpress/media/2012/10/"
"AMD_Evergreen-Family_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12300
msgid ""
"`AMD Cayman/Trinity shader ISA <http://developer.amd.com/wordpress/"
"media/2012/10/AMD_HD_6900_Series_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12301
msgid "`AMD ROCmâ„¢ Platform <https://rocmdocs.amd.com/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12302
msgid "`AMD ROCmâ„¢ github <http://github.com/RadeonOpenCompute>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12303
msgid "`AMD ROCm Release Notes <https://github.com/RadeonOpenCompute/ROCm>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12304
msgid ""
"`Attributes in Clang <https://clang.llvm.org/docs/AttributeReference.html>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12305
msgid "`DWARF Debugging Information Format <http://dwarfstd.org/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12306
msgid ""
"`Executable and Linkable Format (ELF) <http://www.sco.com/developers/gabi/"
">`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12307
msgid ""
"`Heterogeneous-race-free Memory Models <http://benedictgaster.org/wp-content/"
"uploads/2014/01/asplos269-FINAL.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12308
msgid ""
"`Heterogeneous System Architecture (HSA) Foundation <http://www."
"hsafoundation.com/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12309
msgid "`Message Pack <http://www.msgpack.org/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12310
msgid ""
"`The OpenCL Specification Version 2.0 <http://www.khronos.org/registry/cl/"
"specs/opencl-2.0.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12311
msgid "`Semantic Versioning <https://semver.org/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:12312
msgid ""
"`YAML Ain't Markup Language (YAMLâ„¢) Version 1.2 <http://www.yaml.org/"
"spec/1.2/spec.html>`__"
msgstr ""
