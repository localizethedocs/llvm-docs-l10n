# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr_FR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../PDB/DbiStream.rst:3
msgid "The PDB DBI (Debug Info) Stream"
msgstr ""

#: ../../../PDB/DbiStream.rst:11
msgid "Introduction"
msgstr ""

#: ../../../PDB/DbiStream.rst:13
msgid ""
"The PDB DBI Stream (Index 3) is one of the largest and most important "
"streams in a PDB file.  It contains information about how the program was "
"compiled, (e.g. compilation flags, etc), the compilands (e.g. object files) "
"that were used to link together the program, the source files which were "
"used to build the program, as well as references to other streams that "
"contain more detailed information about each compiland, such as the CodeView "
"symbol records contained within each compiland and the source and line "
"information for functions and other symbols within each compiland."
msgstr ""

#: ../../../PDB/DbiStream.rst:26
msgid "Stream Header"
msgstr ""

#: ../../../PDB/DbiStream.rst:27
msgid "At offset 0 of the DBI Stream is a header with the following layout:"
msgstr ""

#: ../../../PDB/DbiStream.rst:55
msgid "**VersionSignature** - Unknown meaning.  Appears to always be ``-1``."
msgstr ""

#: ../../../PDB/DbiStream.rst:57
msgid "**VersionHeader** - A value from the following enum."
msgstr ""

#: ../../../PDB/DbiStream.rst:69
msgid ""
"Similar to the :doc:`PDB Stream <PdbStream>`, this value always appears to "
"be ``V70``, and it is not clear what the other values are for."
msgstr ""

#: ../../../PDB/DbiStream.rst:72
msgid ""
"**Age** - The number of times the PDB has been written.  Equal to the same "
"field from the :ref:`PDB Stream header <pdb_stream_header>`."
msgstr ""

#: ../../../PDB/DbiStream.rst:75
msgid ""
"**GlobalStreamIndex** - The index of the :doc:`Global Symbol Stream "
"<GlobalStream>`, which contains CodeView symbol records for all global "
"symbols.  Actual records are stored in the symbol record stream, and are "
"referenced from this stream."
msgstr ""

#: ../../../PDB/DbiStream.rst:79
msgid ""
"**BuildNumber** - A bitfield containing values representing the major and "
"minor version number of the toolchain (e.g. 12.0 for MSVC 2013) used to "
"build the program, with the following layout:"
msgstr ""

#: ../../../PDB/DbiStream.rst:89
msgid ""
"For the purposes of LLVM, we assume ``NewVersionFormat`` to be always "
"``true``. If it is ``false``, the layout above does not apply and the reader "
"should consult the `Microsoft Source Code <https://github.com/Microsoft/"
"microsoft-pdb>`__ for further guidance."
msgstr ""

#: ../../../PDB/DbiStream.rst:94
msgid ""
"**PublicStreamIndex** - The index of the :doc:`Public Symbol Stream "
"<PublicStream>`, which contains CodeView symbol records for all public "
"symbols.  Actual records are stored in the symbol record stream, and are "
"referenced from this stream."
msgstr ""

#: ../../../PDB/DbiStream.rst:98
msgid ""
"**PdbDllVersion** - The version number of ``mspdbXXXX.dll`` used to produce "
"this PDB.  Note this obviously does not apply for LLVM as LLVM does not use "
"``mspdb.dll``."
msgstr ""

#: ../../../PDB/DbiStream.rst:101
msgid ""
"**SymRecordStream** - The stream containing all CodeView symbol records used "
"by the program.  This is used for deduplication, so that many different "
"compilands can refer to the same symbols without having to include the full "
"record content inside of each module stream."
msgstr ""

#: ../../../PDB/DbiStream.rst:106
msgid "**PdbDllRbld** - Unknown"
msgstr ""

#: ../../../PDB/DbiStream.rst:108
msgid ""
"**MFCTypeServerIndex** - The index of the MFC type server in the :ref:"
"`dbi_type_server_map_substream`."
msgstr ""

#: ../../../PDB/DbiStream.rst:111
msgid ""
"**Flags** - A bitfield with the following layout, containing various "
"information about how the program was built:"
msgstr ""

#: ../../../PDB/DbiStream.rst:121
msgid ""
"The only one of these that is not self-explanatory is "
"``HasConflictingTypes``. Although undocumented, ``link.exe`` contains a "
"hidden flag ``/DEBUG:CTYPES``. If it is passed to ``link.exe``, this field "
"will be set.  Otherwise it will not be set.  It is unclear what this flag "
"does, although it seems to have subtle implications on the algorithm used to "
"look up type records."
msgstr ""

#: ../../../PDB/DbiStream.rst:127
msgid ""
"**Machine** - A value from the `CV_CPU_TYPE_e <https://msdn.microsoft.com/en-"
"us/library/b2fc64ek.aspx>`__ enumeration.  Common values are ``0x8664`` "
"(x86-64) and ``0x14C`` (x86)."
msgstr ""

#: ../../../PDB/DbiStream.rst:130
msgid ""
"Immediately after the fixed-size DBI Stream header are ``7`` variable-length "
"`substreams`.  The following ``7`` fields of the DBI Stream header specify "
"the number of bytes of the corresponding substream.  Each substream's "
"contents will be described in detail :ref:`below <dbi_substreams>`.  The "
"length of the entire DBI Stream should equal ``64`` (the length of the "
"header above) plus the value of each of the following ``7`` fields."
msgstr ""

#: ../../../PDB/DbiStream.rst:137
msgid "**ModInfoSize** - The length of the :ref:`dbi_mod_info_substream`."
msgstr ""

#: ../../../PDB/DbiStream.rst:139
msgid ""
"**SectionContributionSize** - The length of the :ref:"
"`dbi_sec_contr_substream`."
msgstr ""

#: ../../../PDB/DbiStream.rst:141
msgid ""
"**SectionMapSize** - The length of the :ref:`dbi_section_map_substream`."
msgstr ""

#: ../../../PDB/DbiStream.rst:143
msgid "**SourceInfoSize** - The length of the :ref:`dbi_file_info_substream`."
msgstr ""

#: ../../../PDB/DbiStream.rst:145
msgid ""
"**TypeServerMapSize** - The length of the :ref:"
"`dbi_type_server_map_substream`."
msgstr ""

#: ../../../PDB/DbiStream.rst:147
msgid ""
"**OptionalDbgHeaderSize** - The length of the :ref:`dbi_optional_dbg_stream`."
msgstr ""

#: ../../../PDB/DbiStream.rst:149
msgid "**ECSubstreamSize** - The length of the :ref:`dbi_ec_substream`."
msgstr ""

#: ../../../PDB/DbiStream.rst:154
msgid "Substreams"
msgstr ""

#: ../../../PDB/DbiStream.rst:159
msgid "Module Info Substream"
msgstr ""

#: ../../../PDB/DbiStream.rst:161
msgid ""
"Begins at offset ``0`` immediately after the :ref:`header <dbi_header>`.  "
"The module info substream is an array of variable-length records, each one "
"describing a single module (e.g. object file) linked into the program.  Each "
"record in the array has the format:"
msgstr ""

#: ../../../PDB/DbiStream.rst:195
msgid ""
"**SectionContr** - Describes the properties of the section in the final "
"binary which contain the code and data from this module."
msgstr ""

#: ../../../PDB/DbiStream.rst:198
msgid ""
"``SectionContr.Characteristics`` corresponds to the ``Characteristics`` "
"field of the `IMAGE_SECTION_HEADER <https://msdn.microsoft.com/en-us/library/"
"windows/desktop/ms680341(v=vs.85).aspx>`__ structure."
msgstr ""

#: ../../../PDB/DbiStream.rst:203
msgid "**Flags** - A bitfield with the following format:"
msgstr ""

#: ../../../PDB/DbiStream.rst:222
msgid ""
"**ModuleSymStream** - The index of the stream that contains symbol "
"information for this module.  This includes CodeView symbol information as "
"well as source and line information.  If this field is -1, then no "
"additional debug info will be present for this module (for example, this is "
"what happens when you strip private symbols from a PDB)."
msgstr ""

#: ../../../PDB/DbiStream.rst:228
msgid ""
"**SymByteSize** - The number of bytes of data from the stream identified by "
"``ModuleSymStream`` that represent CodeView symbol records."
msgstr ""

#: ../../../PDB/DbiStream.rst:231
msgid ""
"**C11ByteSize** - The number of bytes of data from the stream identified by "
"``ModuleSymStream`` that represent C11-style CodeView line information."
msgstr ""

#: ../../../PDB/DbiStream.rst:234
msgid ""
"**C13ByteSize** - The number of bytes of data from the stream identified by "
"``ModuleSymStream`` that represent C13-style CodeView line information.  At "
"most one of ``C11ByteSize`` and ``C13ByteSize`` will be non-zero.  Modern "
"PDBs always use C13 instead of C11."
msgstr ""

#: ../../../PDB/DbiStream.rst:239
msgid ""
"**SourceFileCount** - The number of source files that contributed to this "
"module during compilation."
msgstr ""

#: ../../../PDB/DbiStream.rst:242
msgid ""
"**SourceFileNameIndex** - The offset in the names buffer of the primary "
"translation unit used to build this module.  All PDB files observed to date "
"always have this value equal to 0."
msgstr ""

#: ../../../PDB/DbiStream.rst:246
msgid ""
"**PdbFilePathNameIndex** - The offset in the names buffer of the PDB file "
"containing this module's symbol information.  This has only been observed to "
"be non-zero for the special ``* Linker *`` module."
msgstr ""

#: ../../../PDB/DbiStream.rst:250
msgid ""
"**ModuleName** - The module name.  This is usually either a full path to an "
"object file (either directly passed to ``link.exe`` or from an archive) or a "
"string of the form ``Import:<dll name>``."
msgstr ""

#: ../../../PDB/DbiStream.rst:254
msgid ""
"**ObjFileName** - The object file name.  In the case of an module that is "
"linked directly passed to ``link.exe``, this is the same as **ModuleName**. "
"In the case of a module that comes from an archive, this is usually the full "
"path to the archive."
msgstr ""

#: ../../../PDB/DbiStream.rst:262
msgid "Section Contribution Substream"
msgstr ""

#: ../../../PDB/DbiStream.rst:263
msgid ""
"Begins at offset ``0`` immediately after the :ref:`dbi_mod_info_substream` "
"ends, and consumes ``Header->SectionContributionSize`` bytes.  This "
"substream begins with a single ``uint32_t`` which will be one of the "
"following values:"
msgstr ""

#: ../../../PDB/DbiStream.rst:274
msgid ""
"``Ver60`` is the only value which has been observed in a PDB so far.  "
"Following this is an array of fixed-length structures.  If the version is "
"``Ver60``, it is an array of ``SectionContribEntry`` structures (this is the "
"nested structure from the ``ModInfo`` type.  If the version is ``V2``, it is "
"an array of ``SectionContribEntry2`` structures, defined as follows:"
msgstr ""

#: ../../../PDB/DbiStream.rst:287
msgid ""
"The purpose of the second field is not well understood.  The name implies "
"that is the index of the COFF section, but this also describes the existing "
"field ``SectionContribEntry::Section``."
msgstr ""

#: ../../../PDB/DbiStream.rst:295
msgid "Section Map Substream"
msgstr ""

#: ../../../PDB/DbiStream.rst:296
msgid ""
"Begins at offset ``0`` immediately after the :ref:`dbi_sec_contr_substream` "
"ends, and consumes ``Header->SectionMapSize`` bytes.  This substream begins "
"with an ``4`` byte header followed by an array of fixed-length records.  The "
"header and records have the following layout:"
msgstr ""

#: ../../../PDB/DbiStream.rst:329
msgid ""
"Many of these fields are not well understood, so will not be discussed "
"further."
msgstr ""

#: ../../../PDB/DbiStream.rst:334
msgid "File Info Substream"
msgstr ""

#: ../../../PDB/DbiStream.rst:335
msgid ""
"Begins at offset ``0`` immediately after the :ref:"
"`dbi_section_map_substream` ends, and consumes ``Header->SourceInfoSize`` "
"bytes.  This substream defines the mapping from module to the source files "
"that contribute to that module.  Since multiple modules can use the same "
"source file (for example, a header file), this substream uses a string table "
"to store each unique file name only once, and then have each module use "
"offsets into the string table rather than embedding the string's value "
"directly.  The format of this substream is as follows:"
msgstr ""

#: ../../../PDB/DbiStream.rst:355
msgid ""
"**NumModules** - The number of modules for which source file information is "
"contained within this substream.  Should match the corresponding value from "
"the ref:`dbi_header`."
msgstr ""

#: ../../../PDB/DbiStream.rst:359
msgid ""
"**NumSourceFiles**: In theory this is supposed to contain the number of "
"source files for which this substream contains information.  But that would "
"present a problem in that the width of this field being ``16``-bits would "
"prevent one from having more than 64K source files in a program.  In early "
"versions of the file format, this seems to have been the case.  In order to "
"support more than this, this field of the is simply ignored, and computed "
"dynamically by summing up the values of the ``ModFileCounts`` array "
"(discussed below).  In short, this value should be ignored."
msgstr ""

#: ../../../PDB/DbiStream.rst:368
msgid ""
"**ModIndices** - This array is present, but does not appear to be useful."
msgstr ""

#: ../../../PDB/DbiStream.rst:370
msgid ""
"**ModFileCountArray** - An array of ``NumModules`` integers, each one "
"containing the number of source files which contribute to the module at the "
"specified index. While each individual module is limited to 64K contributing "
"source files, the union of all modules' source files may be greater than "
"64K.  The real number of source files is thus computed by summing this "
"array.  Note that summing this array does not give the number of `unique` "
"source files, only the total number of source file contributions to modules."
msgstr ""

#: ../../../PDB/DbiStream.rst:378
msgid ""
"**FileNameOffsets** - An array of **NumSourceFiles** integers (where "
"**NumSourceFiles** here refers to the 32-bit value obtained from summing "
"**ModFileCountArray**), where each integer is an offset into **NamesBuffer** "
"pointing to a null terminated string."
msgstr ""

#: ../../../PDB/DbiStream.rst:382
msgid ""
"**NamesBuffer** - An array of null terminated strings containing the actual "
"source file names."
msgstr ""

#: ../../../PDB/DbiStream.rst:388
msgid "Type Server Map Substream"
msgstr ""

#: ../../../PDB/DbiStream.rst:389
msgid ""
"Begins at offset ``0`` immediately after the :ref:`dbi_file_info_substream` "
"ends, and consumes ``Header->TypeServerMapSize`` bytes.  Neither the purpose "
"nor the layout of this substream is understood, although it is assumed to "
"related somehow to the usage of ``/Zi`` and ``mspdbsrv.exe``.  This "
"substream will not be discussed further."
msgstr ""

#: ../../../PDB/DbiStream.rst:398
msgid "EC Substream"
msgstr ""

#: ../../../PDB/DbiStream.rst:399
msgid ""
"Begins at offset ``0`` immediately after the :ref:"
"`dbi_type_server_map_substream` ends, and consumes ``Header-"
">ECSubstreamSize`` bytes.  This is presumed to be related to Edit & Continue "
"support in MSVC.  LLVM does not support Edit & Continue, so this stream will "
"not be discussed further."
msgstr ""

#: ../../../PDB/DbiStream.rst:408
msgid "Optional Debug Header Stream"
msgstr ""

#: ../../../PDB/DbiStream.rst:409
msgid ""
"Begins at offset ``0`` immediately after the :ref:`dbi_ec_substream` ends, "
"and consumes ``Header->OptionalDbgHeaderSize`` bytes.  This field is an "
"array of stream indices (e.g. ``uint16_t``'s), each of which identifies a "
"stream index in the larger MSF file which contains some additional debug "
"information. Each position of this array has a special meaning, allowing one "
"to determine what kind of debug information is at the referenced stream.  "
"``11`` indices are currently understood, although it's possible there may be "
"more.  The layout of each stream generally corresponds exactly to a "
"particular type of debug data directory from the PE/COFF file.  The format "
"of these fields can be found in the `Microsoft PE/COFF Specification "
"<https://www.microsoft.com/en-us/download/details.aspx?id=19509>`__. If any "
"of these fields is -1, it means the corresponding type of debug info is not "
"present in the PDB."
msgstr ""

#: ../../../PDB/DbiStream.rst:422
msgid ""
"**FPO Data** - ``DbgStreamArray[0]``.  The data in the referenced stream is "
"an array of ``FPO_DATA`` structures.  This contains the relocated contents "
"of any ``.debug$F`` section from any of the linker inputs."
msgstr ""

#: ../../../PDB/DbiStream.rst:426
msgid ""
"**Exception Data** - ``DbgStreamArray[1]``.  The data in the referenced "
"stream is a debug data directory of type ``IMAGE_DEBUG_TYPE_EXCEPTION``."
msgstr ""

#: ../../../PDB/DbiStream.rst:429
msgid ""
"**Fixup Data** - ``DbgStreamArray[2]``.  The data in the referenced stream "
"is a debug data directory of type ``IMAGE_DEBUG_TYPE_FIXUP``."
msgstr ""

#: ../../../PDB/DbiStream.rst:432
msgid ""
"**Omap To Src Data** - ``DbgStreamArray[3]``.  The data in the referenced "
"stream is a debug data directory of type ``IMAGE_DEBUG_TYPE_OMAP_TO_SRC``.  "
"This is used for mapping addresses between instrumented and uninstrumented "
"code."
msgstr ""

#: ../../../PDB/DbiStream.rst:436
msgid ""
"**Omap From Src Data** - ``DbgStreamArray[4]``.  The data in the referenced "
"stream is a debug data directory of type "
"``IMAGE_DEBUG_TYPE_OMAP_FROM_SRC``.  This is used for mapping addresses "
"between instrumented and uninstrumented code."
msgstr ""

#: ../../../PDB/DbiStream.rst:440
msgid ""
"**Section Header Data** - ``DbgStreamArray[5]``.  A dump of all section "
"headers from the original executable."
msgstr ""

#: ../../../PDB/DbiStream.rst:443
msgid ""
"**Token / RID Map** - ``DbgStreamArray[6]``.  The layout of this stream is "
"not understood, but it is assumed to be a mapping from ``CLR Token`` to "
"``CLR Record ID``.  Refer to `ECMA 335 <http://www.ecma-international.org/"
"publications/standards/Ecma-335.htm>`__ for more information."
msgstr ""

#: ../../../PDB/DbiStream.rst:448
msgid ""
"**Xdata** - ``DbgStreamArray[7]``.  A copy of the ``.xdata`` section from "
"the executable."
msgstr ""

#: ../../../PDB/DbiStream.rst:451
msgid ""
"**Pdata** - ``DbgStreamArray[8]``. This is assumed to be a copy of the ``."
"pdata`` section from the executable, but that would make it identical to "
"``DbgStreamArray[1]``.  The difference between these two indices is not well "
"understood."
msgstr ""

#: ../../../PDB/DbiStream.rst:456
msgid ""
"**New FPO Data** - ``DbgStreamArray[9]``.  The data in the referenced stream "
"is a debug data directory of type ``IMAGE_DEBUG_TYPE_FPO``.  Note that this "
"is different from ``DbgStreamArray[0]`` in that ``.debug$F`` sections are "
"only emitted by MASM. Thus, it is possible for both to appear in the same "
"PDB if both MASM object files and cl object files are linked into the same "
"program."
msgstr ""

#: ../../../PDB/DbiStream.rst:462
msgid ""
"**Original Section Header Data** - ``DbgStreamArray[10]``.  Similar to "
"``DbgStreamArray[5]``, but contains the section headers before any binary "
"translation has been performed.  This can be used in conjunction with "
"``DebugStreamArray[3]`` and ``DbgStreamArray[4]`` to map instrumented and "
"uninstrumented addresses."
msgstr ""
