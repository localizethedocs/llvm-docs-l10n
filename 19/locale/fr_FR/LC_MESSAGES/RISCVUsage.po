# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 19\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr_FR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../RISCVUsage.rst:3
msgid "User Guide for RISC-V Target"
msgstr ""

#: ../../../RISCVUsage.rst:9
msgid "Introduction"
msgstr ""

#: ../../../RISCVUsage.rst:11
msgid ""
"The RISC-V target provides code generation for processors implementing "
"supported variations of the RISC-V specification.  It lives in the ``llvm/"
"lib/Target/RISCV`` directory."
msgstr ""

#: ../../../RISCVUsage.rst:16
msgid "Specification Documents"
msgstr ""

#: ../../../RISCVUsage.rst:18
msgid ""
"There have been a number of revisions to the RISC-V specifications. LLVM "
"aims to implement the most recent ratified version of the standard RISC-V "
"base ISAs and ISA extensions with pragmatic variances. The most recent "
"specification can be found at: https://github.com/riscv/riscv-isa-manual/"
"releases/."
msgstr ""

#: ../../../RISCVUsage.rst:23
msgid ""
"`The official RISC-V International specification page <https://riscv.org/"
"technical/specifications/>`__. is also worth checking, but tends to "
"significantly lag the specifications linked above. Make sure to check the "
"`wiki for not yet integrated extensions <https://wiki.riscv.org/display/HOME/"
"Recently+Ratified+Extensions>`__ and note that in addition, we sometimes "
"carry support for extensions that have not yet been ratified (these will be "
"marked as experimental - see below) and support various vendor-specific "
"extensions (see below)."
msgstr ""

#: ../../../RISCVUsage.rst:32
msgid "The current known variances from the specification are:"
msgstr ""

#: ../../../RISCVUsage.rst:34
msgid ""
"Unconditionally allowing instructions from zifencei, zicsr, zicntr, and "
"zihpm without gating them on the extensions being enabled.  Previous "
"revisions of the specification included these instructions in the base ISA, "
"and we preserve this behavior to avoid breaking existing code.  If a future "
"revision of the specification reuses these opcodes for other extensions, we "
"may need to reevaluate this choice, and thus recommend users migrate build "
"systems so as not to rely on this."
msgstr ""

#: ../../../RISCVUsage.rst:41
msgid ""
"Allowing CSRs to be named without gating on specific extensions.  This "
"applies to all CSR names, not just those in zicsr, zicntr, and zihpm."
msgstr ""

#: ../../../RISCVUsage.rst:43
msgid ""
"The ordering of ``z*``, ``s*``, and ``x*`` prefixed extension names is not "
"enforced in user-specified ISA naming strings (e.g. ``-march``)."
msgstr ""

#: ../../../RISCVUsage.rst:46
msgid ""
"We are actively deciding not to support multiple specification revisions at "
"this time. We acknowledge a likely future need, but actively defer the "
"decisions making around handling this until we have a concrete example of "
"real hardware having shipped and an incompatible change to the specification "
"made afterwards."
msgstr ""

#: ../../../RISCVUsage.rst:53
msgid "Base ISAs"
msgstr ""

#: ../../../RISCVUsage.rst:55
msgid ""
"The specification defines five base instruction sets: RV32I, RV32E, RV64I, "
"RV64E, and RV128I. Currently, LLVM fully supports RV32I, and RV64I.  RV32E "
"and RV64E are supported by the assembly-based tools only.  RV128I is not "
"supported."
msgstr ""

#: ../../../RISCVUsage.rst:59
msgid "To specify the target triple:"
msgstr ""

#: ../../../RISCVUsage.rst:61
msgid "RISC-V Architectures"
msgstr ""

#: ../../../RISCVUsage.rst:64
msgid "Architecture"
msgstr ""

#: ../../../RISCVUsage.rst:64
msgid "Description"
msgstr ""

#: ../../../RISCVUsage.rst:66
msgid "``riscv32``"
msgstr ""

#: ../../../RISCVUsage.rst:66
msgid "RISC-V with XLEN=32 (i.e. RV32I or RV32E)"
msgstr ""

#: ../../../RISCVUsage.rst:67
msgid "``riscv64``"
msgstr ""

#: ../../../RISCVUsage.rst:67
msgid "RISC-V with XLEN=64 (i.e. RV64I or RV64E)"
msgstr ""

#: ../../../RISCVUsage.rst:70
msgid ""
"To select an E variant ISA (e.g. RV32E instead of RV32I), use the base "
"architecture string (e.g. ``riscv32``) with the extension ``e``."
msgstr ""

#: ../../../RISCVUsage.rst:74
msgid "Profiles"
msgstr ""

#: ../../../RISCVUsage.rst:76
msgid ""
"Supported profile names can be passed using ``-march`` instead of a standard "
"ISA naming string. Currently supported profiles:"
msgstr ""

#: ../../../RISCVUsage.rst:79
msgid "``rvi20u32``"
msgstr ""

#: ../../../RISCVUsage.rst:80
msgid "``rvi20u64``"
msgstr ""

#: ../../../RISCVUsage.rst:81
msgid "``rva20u64``"
msgstr ""

#: ../../../RISCVUsage.rst:82
msgid "``rva20s64``"
msgstr ""

#: ../../../RISCVUsage.rst:83
msgid "``rva22u64``"
msgstr ""

#: ../../../RISCVUsage.rst:84
msgid "``rva22s64``"
msgstr ""

#: ../../../RISCVUsage.rst:86
msgid ""
"Note that you can also append additional extension names to be enabled, e.g. "
"``rva20u64_zicond`` will enable the ``zicond`` extension in addition to "
"those in the ``rva20u64`` profile."
msgstr ""

#: ../../../RISCVUsage.rst:90
msgid ""
"Profiles that are not yet ratified cannot be used unless ``-menable-"
"experimental-extensions`` (or equivalent for other tools) is specified. This "
"applies to the following profiles:"
msgstr ""

#: ../../../RISCVUsage.rst:94
msgid "``rva23u64``"
msgstr ""

#: ../../../RISCVUsage.rst:95
msgid "``rva23s64``"
msgstr ""

#: ../../../RISCVUsage.rst:96
msgid "``rvb23u64``"
msgstr ""

#: ../../../RISCVUsage.rst:97
msgid "``rvb23s64``"
msgstr ""

#: ../../../RISCVUsage.rst:98
msgid "``rvm23u32``"
msgstr ""

#: ../../../RISCVUsage.rst:103
msgid "Extensions"
msgstr ""

#: ../../../RISCVUsage.rst:105
msgid ""
"The following table provides a status summary for extensions which have been "
"ratified and thus have finalized specifications.  When relevant, detailed "
"notes on support follow."
msgstr ""

#: ../../../RISCVUsage.rst:109
msgid "Ratified Extensions by Status"
msgstr ""

#: ../../../RISCVUsage.rst:112
msgid "Extension"
msgstr ""

#: ../../../RISCVUsage.rst:112
msgid "Status"
msgstr ""

#: ../../../RISCVUsage.rst:114
msgid "``A``"
msgstr ""

#: ../../../RISCVUsage.rst:114 ../../../RISCVUsage.rst:115
#: ../../../RISCVUsage.rst:116 ../../../RISCVUsage.rst:117
#: ../../../RISCVUsage.rst:118 ../../../RISCVUsage.rst:121
#: ../../../RISCVUsage.rst:128 ../../../RISCVUsage.rst:129
#: ../../../RISCVUsage.rst:130 ../../../RISCVUsage.rst:131
#: ../../../RISCVUsage.rst:133 ../../../RISCVUsage.rst:134
#: ../../../RISCVUsage.rst:138 ../../../RISCVUsage.rst:150
#: ../../../RISCVUsage.rst:151 ../../../RISCVUsage.rst:155
#: ../../../RISCVUsage.rst:159 ../../../RISCVUsage.rst:160
#: ../../../RISCVUsage.rst:161 ../../../RISCVUsage.rst:163
#: ../../../RISCVUsage.rst:165 ../../../RISCVUsage.rst:166
#: ../../../RISCVUsage.rst:167 ../../../RISCVUsage.rst:168
#: ../../../RISCVUsage.rst:169 ../../../RISCVUsage.rst:170
#: ../../../RISCVUsage.rst:171 ../../../RISCVUsage.rst:173
#: ../../../RISCVUsage.rst:174 ../../../RISCVUsage.rst:175
#: ../../../RISCVUsage.rst:176 ../../../RISCVUsage.rst:177
#: ../../../RISCVUsage.rst:178 ../../../RISCVUsage.rst:179
#: ../../../RISCVUsage.rst:180 ../../../RISCVUsage.rst:183
#: ../../../RISCVUsage.rst:190 ../../../RISCVUsage.rst:193
#: ../../../RISCVUsage.rst:196 ../../../RISCVUsage.rst:197
#: ../../../RISCVUsage.rst:203 ../../../RISCVUsage.rst:204
#: ../../../RISCVUsage.rst:205 ../../../RISCVUsage.rst:206
#: ../../../RISCVUsage.rst:207 ../../../RISCVUsage.rst:208
#: ../../../RISCVUsage.rst:213 ../../../RISCVUsage.rst:214
#: ../../../RISCVUsage.rst:215 ../../../RISCVUsage.rst:216
#: ../../../RISCVUsage.rst:217 ../../../RISCVUsage.rst:218
#: ../../../RISCVUsage.rst:234 ../../../RISCVUsage.rst:235
#: ../../../RISCVUsage.rst:236 ../../../RISCVUsage.rst:237
#: ../../../RISCVUsage.rst:238 ../../../RISCVUsage.rst:239
#: ../../../RISCVUsage.rst:240 ../../../RISCVUsage.rst:241
#: ../../../RISCVUsage.rst:242 ../../../RISCVUsage.rst:243
#: ../../../RISCVUsage.rst:244 ../../../RISCVUsage.rst:251
msgid "Supported"
msgstr ""

#: ../../../RISCVUsage.rst:115
msgid "``B``"
msgstr ""

#: ../../../RISCVUsage.rst:116
msgid "``C``"
msgstr ""

#: ../../../RISCVUsage.rst:117
msgid "``D``"
msgstr ""

#: ../../../RISCVUsage.rst:118
msgid "``F``"
msgstr ""

#: ../../../RISCVUsage.rst:119 ../../../RISCVUsage.rst:256
msgid "``E``"
msgstr ""

#: ../../../RISCVUsage.rst:119
msgid "Supported (`See note <#riscv-rve-note>`__)"
msgstr ""

#: ../../../RISCVUsage.rst:120
msgid "``H``"
msgstr ""

#: ../../../RISCVUsage.rst:120 ../../../RISCVUsage.rst:132
#: ../../../RISCVUsage.rst:136 ../../../RISCVUsage.rst:141
#: ../../../RISCVUsage.rst:146 ../../../RISCVUsage.rst:148
#: ../../../RISCVUsage.rst:149 ../../../RISCVUsage.rst:154
#: ../../../RISCVUsage.rst:156 ../../../RISCVUsage.rst:158
#: ../../../RISCVUsage.rst:172 ../../../RISCVUsage.rst:182
#: ../../../RISCVUsage.rst:184 ../../../RISCVUsage.rst:194
#: ../../../RISCVUsage.rst:209 ../../../RISCVUsage.rst:210
#: ../../../RISCVUsage.rst:219 ../../../RISCVUsage.rst:220
#: ../../../RISCVUsage.rst:221 ../../../RISCVUsage.rst:222
#: ../../../RISCVUsage.rst:223 ../../../RISCVUsage.rst:224
#: ../../../RISCVUsage.rst:225 ../../../RISCVUsage.rst:226
#: ../../../RISCVUsage.rst:227 ../../../RISCVUsage.rst:228
#: ../../../RISCVUsage.rst:229 ../../../RISCVUsage.rst:230
#: ../../../RISCVUsage.rst:231 ../../../RISCVUsage.rst:232
#: ../../../RISCVUsage.rst:248
msgid "Assembly Support"
msgstr ""

#: ../../../RISCVUsage.rst:121
msgid "``M``"
msgstr ""

#: ../../../RISCVUsage.rst:122
msgid "``Shcounterenw``"
msgstr ""

#: ../../../RISCVUsage.rst:122 ../../../RISCVUsage.rst:123
#: ../../../RISCVUsage.rst:124 ../../../RISCVUsage.rst:125
#: ../../../RISCVUsage.rst:126 ../../../RISCVUsage.rst:127
#: ../../../RISCVUsage.rst:135 ../../../RISCVUsage.rst:137
#: ../../../RISCVUsage.rst:139 ../../../RISCVUsage.rst:140
#: ../../../RISCVUsage.rst:142 ../../../RISCVUsage.rst:143
#: ../../../RISCVUsage.rst:144 ../../../RISCVUsage.rst:145
#: ../../../RISCVUsage.rst:147
msgid "Assembly Support (`See note <#riscv-profiles-extensions-note>`__)"
msgstr ""

#: ../../../RISCVUsage.rst:123
msgid "``Shgatpa``"
msgstr ""

#: ../../../RISCVUsage.rst:124
msgid "``Shtvala``"
msgstr ""

#: ../../../RISCVUsage.rst:125
msgid "``Shvsatpa``"
msgstr ""

#: ../../../RISCVUsage.rst:126
msgid "``Shvstvala``"
msgstr ""

#: ../../../RISCVUsage.rst:127
msgid "``Shvstvecd``"
msgstr ""

#: ../../../RISCVUsage.rst:128
msgid "``Smaia``"
msgstr ""

#: ../../../RISCVUsage.rst:129
msgid "``Smcdeleg``"
msgstr ""

#: ../../../RISCVUsage.rst:130
msgid "``Smcsrind``"
msgstr ""

#: ../../../RISCVUsage.rst:131
msgid "``Smepmp``"
msgstr ""

#: ../../../RISCVUsage.rst:132
msgid "``Smstateen``"
msgstr ""

#: ../../../RISCVUsage.rst:133
msgid "``Ssaia``"
msgstr ""

#: ../../../RISCVUsage.rst:134
msgid "``Ssccfg``"
msgstr ""

#: ../../../RISCVUsage.rst:135
msgid "``Ssccptr``"
msgstr ""

#: ../../../RISCVUsage.rst:136
msgid "``Sscofpmf``"
msgstr ""

#: ../../../RISCVUsage.rst:137
msgid "``Sscounterenw``"
msgstr ""

#: ../../../RISCVUsage.rst:138
msgid "``Sscsrind``"
msgstr ""

#: ../../../RISCVUsage.rst:139
msgid "``Ssstateen``"
msgstr ""

#: ../../../RISCVUsage.rst:140
msgid "``Ssstrict``"
msgstr ""

#: ../../../RISCVUsage.rst:141
msgid "``Sstc``"
msgstr ""

#: ../../../RISCVUsage.rst:142
msgid "``Sstvala``"
msgstr ""

#: ../../../RISCVUsage.rst:143
msgid "``Sstvecd``"
msgstr ""

#: ../../../RISCVUsage.rst:144
msgid "``Ssu64xl``"
msgstr ""

#: ../../../RISCVUsage.rst:145
msgid "``Svade``"
msgstr ""

#: ../../../RISCVUsage.rst:146
msgid "``Svadu``"
msgstr ""

#: ../../../RISCVUsage.rst:147
msgid "``Svbare``"
msgstr ""

#: ../../../RISCVUsage.rst:148
msgid "``Svinval``"
msgstr ""

#: ../../../RISCVUsage.rst:149
msgid "``Svnapot``"
msgstr ""

#: ../../../RISCVUsage.rst:150
msgid "``Svpbmt``"
msgstr ""

#: ../../../RISCVUsage.rst:151
msgid "``V``"
msgstr ""

#: ../../../RISCVUsage.rst:152
msgid "``Za128rs``"
msgstr ""

#: ../../../RISCVUsage.rst:152 ../../../RISCVUsage.rst:153
#: ../../../RISCVUsage.rst:157 ../../../RISCVUsage.rst:181
#: ../../../RISCVUsage.rst:185 ../../../RISCVUsage.rst:186
#: ../../../RISCVUsage.rst:187 ../../../RISCVUsage.rst:188
msgid "Supported (`See note <#riscv-profiles-extensions-note>`__)"
msgstr ""

#: ../../../RISCVUsage.rst:153
msgid "``Za64rs``"
msgstr ""

#: ../../../RISCVUsage.rst:154
msgid "``Zaamo``"
msgstr ""

#: ../../../RISCVUsage.rst:155
msgid "``Zabha``"
msgstr ""

#: ../../../RISCVUsage.rst:156
msgid "``Zalrsc``"
msgstr ""

#: ../../../RISCVUsage.rst:157
msgid "``Zama16b``"
msgstr ""

#: ../../../RISCVUsage.rst:158
msgid "``Zawrs``"
msgstr ""

#: ../../../RISCVUsage.rst:159
msgid "``Zba``"
msgstr ""

#: ../../../RISCVUsage.rst:160
msgid "``Zbb``"
msgstr ""

#: ../../../RISCVUsage.rst:161
msgid "``Zbc``"
msgstr ""

#: ../../../RISCVUsage.rst:162
msgid "``Zbkb``"
msgstr ""

#: ../../../RISCVUsage.rst:162 ../../../RISCVUsage.rst:164
msgid "Supported (`See note <#riscv-scalar-crypto-note1>`__)"
msgstr ""

#: ../../../RISCVUsage.rst:163
msgid "``Zbkc``"
msgstr ""

#: ../../../RISCVUsage.rst:164
msgid "``Zbkx``"
msgstr ""

#: ../../../RISCVUsage.rst:165
msgid "``Zbs``"
msgstr ""

#: ../../../RISCVUsage.rst:166
msgid "``Zca``"
msgstr ""

#: ../../../RISCVUsage.rst:167
msgid "``Zcb``"
msgstr ""

#: ../../../RISCVUsage.rst:168
msgid "``Zcd``"
msgstr ""

#: ../../../RISCVUsage.rst:169
msgid "``Zcf``"
msgstr ""

#: ../../../RISCVUsage.rst:170
msgid "``Zcmop``"
msgstr ""

#: ../../../RISCVUsage.rst:171
msgid "``Zcmp``"
msgstr ""

#: ../../../RISCVUsage.rst:172
msgid "``Zcmt``"
msgstr ""

#: ../../../RISCVUsage.rst:173
msgid "``Zdinx``"
msgstr ""

#: ../../../RISCVUsage.rst:174
msgid "``Zfa``"
msgstr ""

#: ../../../RISCVUsage.rst:175
msgid "``Zfbfmin``"
msgstr ""

#: ../../../RISCVUsage.rst:176
msgid "``Zfh``"
msgstr ""

#: ../../../RISCVUsage.rst:177
msgid "``Zfhmin``"
msgstr ""

#: ../../../RISCVUsage.rst:178
msgid "``Zfinx``"
msgstr ""

#: ../../../RISCVUsage.rst:179
msgid "``Zhinx``"
msgstr ""

#: ../../../RISCVUsage.rst:180
msgid "``Zhinxmin``"
msgstr ""

#: ../../../RISCVUsage.rst:181
msgid "``Zic64b``"
msgstr ""

#: ../../../RISCVUsage.rst:182
msgid "``Zicbom``"
msgstr ""

#: ../../../RISCVUsage.rst:183
msgid "``Zicbop``"
msgstr ""

#: ../../../RISCVUsage.rst:184
msgid "``Zicboz``"
msgstr ""

#: ../../../RISCVUsage.rst:185
msgid "``Ziccamoa``"
msgstr ""

#: ../../../RISCVUsage.rst:186
msgid "``Ziccif``"
msgstr ""

#: ../../../RISCVUsage.rst:187
msgid "``Zicclsm``"
msgstr ""

#: ../../../RISCVUsage.rst:188
msgid "``Ziccrse``"
msgstr ""

#: ../../../RISCVUsage.rst:189
msgid "``Zicntr``"
msgstr ""

#: ../../../RISCVUsage.rst:189 ../../../RISCVUsage.rst:191
#: ../../../RISCVUsage.rst:192 ../../../RISCVUsage.rst:195
msgid "(`See Note <#riscv-i2p1-note>`__)"
msgstr ""

#: ../../../RISCVUsage.rst:190
msgid "``Zicond``"
msgstr ""

#: ../../../RISCVUsage.rst:191
msgid "``Zicsr``"
msgstr ""

#: ../../../RISCVUsage.rst:192
msgid "``Zifencei``"
msgstr ""

#: ../../../RISCVUsage.rst:193
msgid "``Zihintntl``"
msgstr ""

#: ../../../RISCVUsage.rst:194
msgid "``Zihintpause``"
msgstr ""

#: ../../../RISCVUsage.rst:195
msgid "``Zihpm``"
msgstr ""

#: ../../../RISCVUsage.rst:196
msgid "``Zimop``"
msgstr ""

#: ../../../RISCVUsage.rst:197
msgid "``Zkn``"
msgstr ""

#: ../../../RISCVUsage.rst:198
msgid "``Zknd``"
msgstr ""

#: ../../../RISCVUsage.rst:198 ../../../RISCVUsage.rst:199
#: ../../../RISCVUsage.rst:200 ../../../RISCVUsage.rst:201
#: ../../../RISCVUsage.rst:202
msgid "Supported (`See note <#riscv-scalar-crypto-note2>`__)"
msgstr ""

#: ../../../RISCVUsage.rst:199
msgid "``Zkne``"
msgstr ""

#: ../../../RISCVUsage.rst:200
msgid "``Zknh``"
msgstr ""

#: ../../../RISCVUsage.rst:201
msgid "``Zksed``"
msgstr ""

#: ../../../RISCVUsage.rst:202
msgid "``Zksh``"
msgstr ""

#: ../../../RISCVUsage.rst:203
msgid "``Zk``"
msgstr ""

#: ../../../RISCVUsage.rst:204
msgid "``Zkr``"
msgstr ""

#: ../../../RISCVUsage.rst:205
msgid "``Zks``"
msgstr ""

#: ../../../RISCVUsage.rst:206
msgid "``Zkt``"
msgstr ""

#: ../../../RISCVUsage.rst:207
msgid "``Zmmul``"
msgstr ""

#: ../../../RISCVUsage.rst:208
msgid "``Ztso``"
msgstr ""

#: ../../../RISCVUsage.rst:209 ../../../RISCVUsage.rst:407
msgid "``Zvbb``"
msgstr ""

#: ../../../RISCVUsage.rst:210 ../../../RISCVUsage.rst:408
msgid "``Zvbc``"
msgstr ""

#: ../../../RISCVUsage.rst:211
msgid "``Zve32x``"
msgstr ""

#: ../../../RISCVUsage.rst:211 ../../../RISCVUsage.rst:212
#: ../../../RISCVUsage.rst:233
msgid "(`Partially <#riscv-vlen-32-note>`__) Supported"
msgstr ""

#: ../../../RISCVUsage.rst:212
msgid "``Zve32f``"
msgstr ""

#: ../../../RISCVUsage.rst:213
msgid "``Zve64x``"
msgstr ""

#: ../../../RISCVUsage.rst:214
msgid "``Zve64f``"
msgstr ""

#: ../../../RISCVUsage.rst:215
msgid "``Zve64d``"
msgstr ""

#: ../../../RISCVUsage.rst:216
msgid "``Zvfbfmin``"
msgstr ""

#: ../../../RISCVUsage.rst:217
msgid "``Zvfbfwma``"
msgstr ""

#: ../../../RISCVUsage.rst:218
msgid "``Zvfh``"
msgstr ""

#: ../../../RISCVUsage.rst:219 ../../../RISCVUsage.rst:409
msgid "``Zvkb``"
msgstr ""

#: ../../../RISCVUsage.rst:220 ../../../RISCVUsage.rst:410
msgid "``Zvkg``"
msgstr ""

#: ../../../RISCVUsage.rst:221 ../../../RISCVUsage.rst:411
msgid "``Zvkn``"
msgstr ""

#: ../../../RISCVUsage.rst:222 ../../../RISCVUsage.rst:412
msgid "``Zvknc``"
msgstr ""

#: ../../../RISCVUsage.rst:223 ../../../RISCVUsage.rst:413
msgid "``Zvkned``"
msgstr ""

#: ../../../RISCVUsage.rst:224 ../../../RISCVUsage.rst:414
msgid "``Zvkng``"
msgstr ""

#: ../../../RISCVUsage.rst:225 ../../../RISCVUsage.rst:415
msgid "``Zvknha``"
msgstr ""

#: ../../../RISCVUsage.rst:226 ../../../RISCVUsage.rst:416
msgid "``Zvknhb``"
msgstr ""

#: ../../../RISCVUsage.rst:227 ../../../RISCVUsage.rst:417
msgid "``Zvks``"
msgstr ""

#: ../../../RISCVUsage.rst:228 ../../../RISCVUsage.rst:418
msgid "``Zvksc``"
msgstr ""

#: ../../../RISCVUsage.rst:229 ../../../RISCVUsage.rst:419
msgid "``Zvksed``"
msgstr ""

#: ../../../RISCVUsage.rst:230 ../../../RISCVUsage.rst:420
msgid "``Zvksg``"
msgstr ""

#: ../../../RISCVUsage.rst:231 ../../../RISCVUsage.rst:421
msgid "``Zvksh``"
msgstr ""

#: ../../../RISCVUsage.rst:232 ../../../RISCVUsage.rst:422
msgid "``Zvkt``"
msgstr ""

#: ../../../RISCVUsage.rst:233
msgid "``Zvl32b``"
msgstr ""

#: ../../../RISCVUsage.rst:234
msgid "``Zvl64b``"
msgstr ""

#: ../../../RISCVUsage.rst:235
msgid "``Zvl128b``"
msgstr ""

#: ../../../RISCVUsage.rst:236
msgid "``Zvl256b``"
msgstr ""

#: ../../../RISCVUsage.rst:237
msgid "``Zvl512b``"
msgstr ""

#: ../../../RISCVUsage.rst:238
msgid "``Zvl1024b``"
msgstr ""

#: ../../../RISCVUsage.rst:239
msgid "``Zvl2048b``"
msgstr ""

#: ../../../RISCVUsage.rst:240
msgid "``Zvl4096b``"
msgstr ""

#: ../../../RISCVUsage.rst:241
msgid "``Zvl8192b``"
msgstr ""

#: ../../../RISCVUsage.rst:242
msgid "``Zvl16384b``"
msgstr ""

#: ../../../RISCVUsage.rst:243
msgid "``Zvl32768b``"
msgstr ""

#: ../../../RISCVUsage.rst:244
msgid "``Zvl65536b``"
msgstr ""

#: ../../../RISCVUsage.rst:248
msgid ""
"LLVM supports the associated instructions in assembly.  All assembly related "
"tools (e.g. assembler, disassembler, llvm-objdump, etc..) are supported.  "
"Compiler and linker will accept extension names, and linked binaries will "
"contain appropriate ELF flags and attributes to reflect use of named "
"extension."
msgstr ""

#: ../../../RISCVUsage.rst:251
msgid ""
"Fully supported by the compiler.  This includes everything in Assembly "
"Support, along with - if relevant - C language intrinsics for the "
"instructions and pattern matching by the compiler to recognize idiomatic "
"patterns which can be lowered to the associated instructions."
msgstr ""

#: ../../../RISCVUsage.rst:256
msgid ""
"Support of RV32E/RV64E and ilp32e/lp64e ABIs are experimental. To be "
"compatible with the implementation of ilp32e in GCC, we don't use aligned "
"registers to pass variadic arguments. Furthermore, we set the stack "
"alignment to 4 bytes for types with length of 2*XLEN."
msgstr ""

#: ../../../RISCVUsage.rst:261
msgid "``Zbkb``, ``Zbkx``"
msgstr ""

#: ../../../RISCVUsage.rst:261
msgid "Pattern matching support for these instructions is incomplete."
msgstr ""

#: ../../../RISCVUsage.rst:266
msgid "``Zknd``, ``Zkne``, ``Zknh``, ``Zksed``, ``Zksh``"
msgstr ""

#: ../../../RISCVUsage.rst:266
msgid ""
"No pattern matching exists.  As a result, these instructions can only be "
"used from assembler or via intrinsic calls."
msgstr ""

#: ../../../RISCVUsage.rst:271
msgid "``Zve32x``, ``Zve32f``, ``Zvl32b``"
msgstr ""

#: ../../../RISCVUsage.rst:271
msgid ""
"LLVM currently assumes a minimum VLEN (vector register width) of 64 bits "
"during compilation, and as a result ``Zve32x`` and ``Zve32f`` are supported "
"only for VLEN>=64.  Assembly support doesn't have this restriction."
msgstr ""

#: ../../../RISCVUsage.rst:276
msgid "``Zicntr``, ``Zicsr``, ``Zifencei``, ``Zihpm``"
msgstr ""

#: ../../../RISCVUsage.rst:276
msgid ""
"Between versions 2.0 and 2.1 of the base I specification, a backwards "
"incompatible change was made to remove selected instructions and CSRs from "
"the base ISA.  These instructions were grouped into a set of new extensions, "
"but were no longer required by the base ISA.  This change is partially "
"described in \"Preface to Document Version 20190608-Base-Ratified\" from the "
"specification document (the ``zicntr`` and ``zihpm`` bits are not "
"mentioned).  LLVM currently implements version 2.1 of the base "
"specification. To maintain compatibility, instructions from these extensions "
"are accepted without being in the ``-march`` string.  LLVM also allows the "
"explicit specification of the extensions in an ``-march`` string."
msgstr ""

#: ../../../RISCVUsage.rst:281
msgid ""
"``Za128rs``, ``Za64rs``, ``Zama16b``, ``Zic64b``, ``Ziccamoa``, ``Ziccif``, "
"``Zicclsm``, ``Ziccrse``, ``Shcounterenvw``, ``Shgatpa``, ``Shtvala``, "
"``Shvsatpa``, ``Shvstvala``, ``Shvstvecd``, ``Ssccptr``, ``Sscounterenw``, "
"``Ssstateen``, ``Ssstrict``, ``Sstvala``, ``Sstvecd``, ``Ssu64xl``, "
"``Svade``, ``Svbare``"
msgstr ""

#: ../../../RISCVUsage.rst:281
msgid ""
"These extensions are defined as part of the `RISC-V Profiles specification "
"<https://github.com/riscv/riscv-profiles/releases/tag/v1.0>`__.  They do not "
"introduce any new features themselves, but instead describe existing "
"hardware features."
msgstr ""

#: ../../../RISCVUsage.rst:284
msgid "Experimental Extensions"
msgstr ""

#: ../../../RISCVUsage.rst:286
msgid ""
"LLVM supports (to various degrees) a number of experimental extensions.  All "
"experimental extensions have ``experimental-`` as a prefix.  There is "
"explicitly no compatibility promised between versions of the toolchain, and "
"regular users are strongly advised *not* to make use of experimental "
"extensions before they reach ratification."
msgstr ""

#: ../../../RISCVUsage.rst:288
msgid ""
"The primary goal of experimental support is to assist in the process of "
"ratification by providing an existence proof of an implementation, and "
"simplifying efforts to validate the value of a proposed extension against "
"large code bases.  Experimental extensions are expected to either transition "
"to ratified status, or be eventually removed.  The decision on whether to "
"accept an experimental extension is currently done on an entirely case by "
"case basis; if you want to propose one, attending the bi-weekly RISC-V sync-"
"up call is strongly advised."
msgstr ""

#: ../../../RISCVUsage.rst:291
msgid ""
"``experimental-ssnpm``, ``experimental-smnpm``, ``experimental-smmpm``, "
"``experimental-sspm``, ``experimental-supm``"
msgstr ""

#: ../../../RISCVUsage.rst:291
msgid ""
"LLVM implements the `v1.0.0-rc2 specification <https://github.com/riscv/"
"riscv-j-extension/releases/tag/pointer-masking-v1.0.0-rc2>`__."
msgstr ""

#: ../../../RISCVUsage.rst:294
msgid "``experimental-ssqosid``"
msgstr ""

#: ../../../RISCVUsage.rst:294
msgid ""
"LLVM implements assembler support for the `v1.0-rc1 draft specification "
"<https://github.com/riscv/riscv-ssqosid/releases/tag/v1.0-rc1>`_."
msgstr ""

#: ../../../RISCVUsage.rst:297
msgid "``experimental-zacas``"
msgstr ""

#: ../../../RISCVUsage.rst:297
msgid ""
"LLVM implements the `1.0 release specification <https://github.com/"
"riscvarchive/riscv-zacas/releases/tag/v1.0>`__. amocas.w will be used for "
"i32 cmpxchg. amocas.d will be used i64 cmpxchg on RV64. The compiler will "
"not generate amocas.d on RV32 or amocas.q on RV64 due to ABI compatibilty. "
"These can only be used in the assembler. The extension will be left as "
"experimental until `an ABI issue <https://github.com/riscv-non-isa/riscv-elf-"
"psabi-doc/issues/444>`__ is resolved."
msgstr ""

#: ../../../RISCVUsage.rst:300
msgid "``experimental-zalasr``"
msgstr ""

#: ../../../RISCVUsage.rst:300
msgid ""
"LLVM implements the `0.0.5 draft specification <https://github.com/"
"mehnadnerd/riscv-zalasr>`__."
msgstr ""

#: ../../../RISCVUsage.rst:303
msgid "``experimental-zicfilp``, ``experimental-zicfiss``"
msgstr ""

#: ../../../RISCVUsage.rst:303
msgid ""
"LLVM implements the `1.0 release specification <https://github.com/riscv/"
"riscv-cfi/releases/tag/v1.0>`__."
msgstr ""

#: ../../../RISCVUsage.rst:305
msgid ""
"To use an experimental extension from `clang`, you must add `-menable-"
"experimental-extensions` to the command line, and specify the exact version "
"of the experimental extension you are using.  To use an experimental "
"extension with LLVM's internal developer tools (e.g. `llc`, `llvm-objdump`, "
"`llvm-mc`), you must prefix the extension name with `experimental-`.  Note "
"that you don't need to specify the version with internal tools, and "
"shouldn't include the `experimental-` prefix with `clang`."
msgstr ""

#: ../../../RISCVUsage.rst:308
msgid "Vendor Extensions"
msgstr ""

#: ../../../RISCVUsage.rst:310
msgid ""
"Vendor extensions are extensions which are not standardized by RISC-V "
"International, and are instead defined by a hardware vendor.  The term "
"vendor extension roughly parallels the definition of a `non-standard` "
"extension from Section 1.3 of the Volume I: RISC-V Unprivileged ISA "
"specification.  In particular, we expect to eventually accept both `custom` "
"extensions and `non-conforming` extensions."
msgstr ""

#: ../../../RISCVUsage.rst:312
msgid ""
"Inclusion of a vendor extension will be considered on a case by case basis.  "
"All proposals should be brought to the bi-weekly RISCV sync calls for "
"discussion.  For a general idea of the factors likely to be considered, "
"please see the `Clang documentation <https://clang.llvm.org/get_involved."
"html>`__."
msgstr ""

#: ../../../RISCVUsage.rst:314
msgid ""
"It is our intention to follow the naming conventions described in `riscv-non-"
"isa/riscv-toolchain-conventions <https://github.com/riscv-non-isa/riscv-"
"toolchain-conventions#conventions-for-vendor-extensions>`__.  Exceptions to "
"this naming will need to be strongly motivated."
msgstr ""

#: ../../../RISCVUsage.rst:316
msgid "The current vendor extensions supported are:"
msgstr ""

#: ../../../RISCVUsage.rst:319
msgid "``XTHeadBa``"
msgstr ""

#: ../../../RISCVUsage.rst:319
msgid ""
"LLVM implements `the THeadBa (address-generation) vendor-defined "
"instructions specified in <https://github.com/T-head-Semi/thead-extension-"
"spec/releases/download/2.2.2/xthead-2023-01-30-2.2.2.pdf>`__ by T-HEAD of "
"Alibaba.  Instructions are prefixed with `th.` as described in the "
"specification."
msgstr ""

#: ../../../RISCVUsage.rst:322
msgid "``XTHeadBb``"
msgstr ""

#: ../../../RISCVUsage.rst:322
msgid ""
"LLVM implements `the THeadBb (basic bit-manipulation) vendor-defined "
"instructions specified in <https://github.com/T-head-Semi/thead-extension-"
"spec/releases/download/2.2.2/xthead-2023-01-30-2.2.2.pdf>`__ by T-HEAD of "
"Alibaba.  Instructions are prefixed with `th.` as described in the "
"specification."
msgstr ""

#: ../../../RISCVUsage.rst:325
msgid "``XTHeadBs``"
msgstr ""

#: ../../../RISCVUsage.rst:325
msgid ""
"LLVM implements `the THeadBs (single-bit operations) vendor-defined "
"instructions specified in <https://github.com/T-head-Semi/thead-extension-"
"spec/releases/download/2.2.2/xthead-2023-01-30-2.2.2.pdf>`__ by T-HEAD of "
"Alibaba.  Instructions are prefixed with `th.` as described in the "
"specification."
msgstr ""

#: ../../../RISCVUsage.rst:328
msgid "``XTHeadCondMov``"
msgstr ""

#: ../../../RISCVUsage.rst:328
msgid ""
"LLVM implements `the THeadCondMov (conditional move) vendor-defined "
"instructions specified in <https://github.com/T-head-Semi/thead-extension-"
"spec/releases/download/2.2.2/xthead-2023-01-30-2.2.2.pdf>`__ by T-HEAD of "
"Alibaba.  Instructions are prefixed with `th.` as described in the "
"specification."
msgstr ""

#: ../../../RISCVUsage.rst:331
msgid "``XTHeadCmo``"
msgstr ""

#: ../../../RISCVUsage.rst:331
msgid ""
"LLVM implements `the THeadCmo (cache management operations) vendor-defined "
"instructions specified in <https://github.com/T-head-Semi/thead-extension-"
"spec/releases/download/2.2.2/xthead-2023-01-30-2.2.2.pdf>`__  by T-HEAD of "
"Alibaba.  Instructions are prefixed with `th.` as described in the "
"specification."
msgstr ""

#: ../../../RISCVUsage.rst:334
msgid "``XTHeadFMemIdx``"
msgstr ""

#: ../../../RISCVUsage.rst:334
msgid ""
"LLVM implements `the THeadFMemIdx (indexed memory operations for floating "
"point) vendor-defined instructions specified in <https://github.com/T-head-"
"Semi/thead-extension-spec/releases/download/2.2.2/xthead-2023-01-30-2.2.2."
"pdf>`__ by T-HEAD of Alibaba.  Instructions are prefixed with `th.` as "
"described in the specification."
msgstr ""

#: ../../../RISCVUsage.rst:337
msgid "``XTheadMac``"
msgstr ""

#: ../../../RISCVUsage.rst:337
msgid ""
"LLVM implements `the XTheadMac (multiply-accumulate instructions) vendor-"
"defined instructions specified in <https://github.com/T-head-Semi/thead-"
"extension-spec/releases/download/2.2.2/xthead-2023-01-30-2.2.2.pdf>`__ by T-"
"HEAD of Alibaba.  Instructions are prefixed with `th.` as described in the "
"specification."
msgstr ""

#: ../../../RISCVUsage.rst:340
msgid "``XTHeadMemIdx``"
msgstr ""

#: ../../../RISCVUsage.rst:340
msgid ""
"LLVM implements `the THeadMemIdx (indexed memory operations) vendor-defined "
"instructions specified in <https://github.com/T-head-Semi/thead-extension-"
"spec/releases/download/2.2.2/xthead-2023-01-30-2.2.2.pdf>`__ by T-HEAD of "
"Alibaba.  Instructions are prefixed with `th.` as described in the "
"specification."
msgstr ""

#: ../../../RISCVUsage.rst:343
msgid "``XTHeadMemPair``"
msgstr ""

#: ../../../RISCVUsage.rst:343
msgid ""
"LLVM implements `the THeadMemPair (two-GPR memory operations) vendor-defined "
"instructions specified in <https://github.com/T-head-Semi/thead-extension-"
"spec/releases/download/2.2.2/xthead-2023-01-30-2.2.2.pdf>`__ by T-HEAD of "
"Alibaba.  Instructions are prefixed with `th.` as described in the "
"specification."
msgstr ""

#: ../../../RISCVUsage.rst:346
msgid "``XTHeadSync``"
msgstr ""

#: ../../../RISCVUsage.rst:346
msgid ""
"LLVM implements `the THeadSync (multi-core synchronization instructions) "
"vendor-defined instructions specified in <https://github.com/T-head-Semi/"
"thead-extension-spec/releases/download/2.2.2/xthead-2023-01-30-2.2.2.pdf>`__ "
"by T-HEAD of Alibaba.  Instructions are prefixed with `th.` as described in "
"the specification."
msgstr ""

#: ../../../RISCVUsage.rst:349
msgid "``XTHeadVdot``"
msgstr ""

#: ../../../RISCVUsage.rst:349
msgid ""
"LLVM implements `version 1.0.0 of the THeadV-family custom instructions "
"specification <https://github.com/T-head-Semi/thead-extension-spec/releases/"
"download/2.2.0/xthead-2022-12-04-2.2.0.pdf>`__ by T-HEAD of Alibaba.  All "
"instructions are prefixed with `th.` as described in the specification, and "
"the riscv-toolchain-convention document linked above."
msgstr ""

#: ../../../RISCVUsage.rst:352
msgid "``XVentanaCondOps``"
msgstr ""

#: ../../../RISCVUsage.rst:352
msgid ""
"LLVM implements `version 1.0.0 of the VTx-family custom instructions "
"specification <https://github.com/ventanamicro/ventana-custom-extensions/"
"releases/download/v1.0.0/ventana-custom-extensions-v1.0.0.pdf>`__ by Ventana "
"Micro Systems.  All instructions are prefixed with `vt.` as described in the "
"specification, and the riscv-toolchain-convention document linked above.  "
"These instructions are only available for riscv64 at this time."
msgstr ""

#: ../../../RISCVUsage.rst:355
msgid "``XSfvcp``"
msgstr ""

#: ../../../RISCVUsage.rst:355
msgid ""
"LLVM implements `version 1.1.0 of the SiFive Vector Coprocessor Interface "
"(VCIX) Software Specification <https://sifive.cdn.prismic.io/sifive/"
"Zn3m1R5LeNNTwnLS_vcix-spec-software-v1p1.pdf>`__ by SiFive.  All "
"instructions are prefixed with `sf.vc.` as described in the specification, "
"and the riscv-toolchain-convention document linked above."
msgstr ""

#: ../../../RISCVUsage.rst:358
msgid "``XSfvqmaccdod``, ``XSfvqmaccqoq``"
msgstr ""

#: ../../../RISCVUsage.rst:358
msgid ""
"LLVM implements `version 1.1.0 of the SiFive Int8 Matrix Multiplication "
"Extensions Specification <https://sifive.cdn.prismic.io/sifive/1a2ad85b-"
"d818-49f7-ba83-f51f1731edbe_int8-matmul-spec.pdf>`__ by SiFive.  All "
"instructions are prefixed with `sf.` as described in the specification "
"linked above."
msgstr ""

#: ../../../RISCVUsage.rst:361
msgid "``Xsfvfnrclipxfqf``"
msgstr ""

#: ../../../RISCVUsage.rst:361
msgid ""
"LLVM implements `version 1.0.0 of the FP32-to-int8 Ranged Clip Instructions "
"Extension Specification <https://sifive.cdn.prismic.io/sifive/0aacff47-"
"f530-43dc-8446-5caa2260ece0_xsfvfnrclipxfqf-spec.pdf>`__ by SiFive.  All "
"instructions are prefixed with `sf.` as described in the specification "
"linked above."
msgstr ""

#: ../../../RISCVUsage.rst:364
msgid "``Xsfvfwmaccqqq``"
msgstr ""

#: ../../../RISCVUsage.rst:364
msgid ""
"LLVM implements `version 1.0.0 of the Matrix Multiply Accumulate Instruction "
"Extension Specification <https://sifive.cdn.prismic.io/sifive/c391d53e-"
"ffcf-4091-82f6-c37bf3e883ed_xsfvfwmaccqqq-spec.pdf>`__ by SiFive.  All "
"instructions are prefixed with `sf.` as described in the specification "
"linked above."
msgstr ""

#: ../../../RISCVUsage.rst:367
msgid "``XCVbitmanip``"
msgstr ""

#: ../../../RISCVUsage.rst:367
msgid ""
"LLVM implements `version 1.0.0 of the CORE-V Bit Manipulation custom "
"instructions specification <https://github.com/openhwgroup/cv32e40p/"
"blob/62bec66b36182215e18c9cf10f723567e23878e9/docs/source/"
"instruction_set_extensions.rst>`__ by OpenHW Group.  All instructions are "
"prefixed with `cv.` as described in the specification."
msgstr ""

#: ../../../RISCVUsage.rst:370
msgid "``XCVelw``"
msgstr ""

#: ../../../RISCVUsage.rst:370
msgid ""
"LLVM implements `version 1.0.0 of the CORE-V Event load custom instructions "
"specification <https://github.com/openhwgroup/cv32e40p/blob/master/docs/"
"source/instruction_set_extensions.rst>`__ by OpenHW Group.  All instructions "
"are prefixed with `cv.` as described in the specification. These "
"instructions are only available for riscv32 at this time."
msgstr ""

#: ../../../RISCVUsage.rst:373
msgid "``XCVmac``"
msgstr ""

#: ../../../RISCVUsage.rst:373
msgid ""
"LLVM implements `version 1.0.0 of the CORE-V Multiply-Accumulate (MAC) "
"custom instructions specification <https://github.com/openhwgroup/cv32e40p/"
"blob/4f024fe4b15a68b76615b0630c07a6745c620da7/docs/source/"
"instruction_set_extensions.rst>`__ by OpenHW Group.  All instructions are "
"prefixed with `cv.mac` as described in the specification. These instructions "
"are only available for riscv32 at this time."
msgstr ""

#: ../../../RISCVUsage.rst:376
msgid "``XCVmem``"
msgstr ""

#: ../../../RISCVUsage.rst:376
msgid ""
"LLVM implements `version 1.0.0 of the CORE-V Post-Increment load and stores "
"custom instructions specification <https://github.com/openhwgroup/cv32e40p/"
"blob/master/docs/source/instruction_set_extensions.rst>`__ by OpenHW Group.  "
"All instructions are prefixed with `cv.` as described in the specification. "
"These instructions are only available for riscv32 at this time."
msgstr ""

#: ../../../RISCVUsage.rst:379
msgid "``XCValu``"
msgstr ""

#: ../../../RISCVUsage.rst:379
msgid ""
"LLVM implements `version 1.0.0 of the Core-V ALU custom instructions "
"specification <https://github.com/openhwgroup/cv32e40p/"
"blob/4f024fe4b15a68b76615b0630c07a6745c620da7/docs/source/"
"instruction_set_extensions.rst>`__ by Core-V.  All instructions are prefixed "
"with `cv.` as described in the specification. These instructions are only "
"available for riscv32 at this time."
msgstr ""

#: ../../../RISCVUsage.rst:382
msgid "``XCVsimd``"
msgstr ""

#: ../../../RISCVUsage.rst:382
msgid ""
"LLVM implements `version 1.0.0 of the CORE-V SIMD custom instructions "
"specification <https://github.com/openhwgroup/cv32e40p/blob/cv32e40p_v1.3.2/"
"docs/source/instruction_set_extensions.rst>`__ by OpenHW Group.  All "
"instructions are prefixed with `cv.` as described in the specification."
msgstr ""

#: ../../../RISCVUsage.rst:385
msgid "``XCVbi``"
msgstr ""

#: ../../../RISCVUsage.rst:385
msgid ""
"LLVM implements `version 1.0.0 of the CORE-V immediate branching custom "
"instructions specification <https://github.com/openhwgroup/cv32e40p/blob/"
"cv32e40p_v1.3.2/docs/source/instruction_set_extensions.rst>`__ by OpenHW "
"Group.  All instructions are prefixed with `cv.` as described in the "
"specification. These instructions are only available for riscv32 at this "
"time."
msgstr ""

#: ../../../RISCVUsage.rst:388
msgid "``XSiFivecdiscarddlone``"
msgstr ""

#: ../../../RISCVUsage.rst:388
msgid ""
"LLVM implements `the SiFive sf.cdiscard.d.l1 instruction specified in "
"<https://sifive.cdn.prismic.io/sifive/767804da-53b2-4893-97d5-"
"b7c030ae0a94_s76mc_core_complex_manual_21G3.pdf>`_ by SiFive."
msgstr ""

#: ../../../RISCVUsage.rst:391
msgid "``XSiFivecflushdlone``"
msgstr ""

#: ../../../RISCVUsage.rst:391
msgid ""
"LLVM implements `the SiFive sf.cflush.d.l1 instruction specified in <https://"
"sifive.cdn.prismic.io/sifive/767804da-53b2-4893-97d5-"
"b7c030ae0a94_s76mc_core_complex_manual_21G3.pdf>`_ by SiFive."
msgstr ""

#: ../../../RISCVUsage.rst:394
msgid "``XSfcease``"
msgstr ""

#: ../../../RISCVUsage.rst:394
msgid ""
"LLVM implements `the SiFive sf.cease instruction specified in <https://"
"sifive.cdn.prismic.io/sifive/767804da-53b2-4893-97d5-"
"b7c030ae0a94_s76mc_core_complex_manual_21G3.pdf>`_ by SiFive."
msgstr ""

#: ../../../RISCVUsage.rst:397
msgid "``Xwchc``"
msgstr ""

#: ../../../RISCVUsage.rst:397
msgid ""
"LLVM implements `the custom compressed opcodes present in some QingKe cores` "
"by WCH / Nanjing Qinheng Microelectronics. The vendor refers to these "
"opcodes by the name \"XW\"."
msgstr ""

#: ../../../RISCVUsage.rst:400
msgid "Experimental C Intrinsics"
msgstr ""

#: ../../../RISCVUsage.rst:402
msgid ""
"In some cases an extension is non-experimental but the C intrinsics for that "
"extension are still experimental.  To use C intrinsics for such an extension "
"from `clang`, you must add `-menable-experimental-extensions` to the command "
"line.  This currently applies to the following extensions:"
msgstr ""
