# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 19\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../DirectX/DXILOpTableGenDesign.rst:3
msgid "Specification of DXIL Operations using TableGen Representation"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:11
msgid "Introduction"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:13
msgid ""
"`DirectXShaderCompiler <https://github.com/microsoft/"
"DirectXShaderCompiler>`_ encapsulates, among other information, various DXIL "
"Operations in `hctdb.py <https://github.com/microsoft/DirectXShaderCompiler/"
"blob/main/utils/hct/hctdb.py>`_. DXIL Operations are represented in one of "
"the following `two ways <https://github.com/microsoft/DirectXShaderCompiler/"
"blob/main/docs/DXIL.rst#operations>`_:"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:19
msgid "Using LLVM instructions."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:20
msgid ""
"Using LLVM External functions. These are represented in LLVM IR as follows:"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:22
msgid "\"Standard\" LLVM intrinsics (e.g., ``llvm.sin.*``) and"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:23
msgid ""
"HLSL intrinsics (defined as LLVM intrinsics in ``llvm/include/llvm/IR/"
"IntrinsicsDirectX.td``, e.g., ``llvm.dx.*``)"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:25
msgid "These are  collectively referred to as `LLVM Intrinsics` in this note."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:27
msgid ""
"Following is the complete list of properties of DXIL Ops with the "
"corresponding field name as used in ``hctdb.py``. A DXIL Op is represented "
"by a set of associated properties. These are consumed in DXIL backend passes "
"as well as in other usage scenarios such as validation, DXIL reader, etc."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:32
msgid "Properties consumed in DXIL backend passes"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:34
msgid "Name of operation (``dxil_op``)"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:35
msgid ""
"A string that documents the operation (``doc``) - This is not strictly "
"necessary but is included for readability and documentation of the operation."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:37
msgid ""
"The generic or HLSL-specific intrinsic that maps to the operation "
"(``llvm_name``)."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:38
msgid "Unique Integer ID (``dxil_opid``)"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:39
msgid ""
"Operation Class signifying the name and function signature of the operation "
"(``dxil_class``). This string is an integral part of the DXIL Op function "
"name and is constructed in the format ``dx.op.<class-name>.<overload-"
"type>``. Each DXIL Op call target function name is required to conform to "
"this format per existing contract with the driver."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:43
msgid "List of valid overload types for the operation (``oload_types``)."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:44
msgid "Required DXIL Version with support for the operation."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:45
msgid "Required minimum Shader Model (``shader_model``)."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:46
msgid ""
"Minimum shader model required with translation by linker "
"(``shader_model_translated``)"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:47
msgid ""
"List of shader stages applicable to (``shader_stages``), empty, if "
"applicable to all stages."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:48
msgid "Memory access attributes of the operation (``fn_attr``)."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:49
msgid "Boolean attributes of operation to indicate if it"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:51
msgid "is some kind of a derivative (``is_derivative``)"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:52
msgid "requires gradient calculation (``is_gradient``)"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:53
msgid "is a sampler feedback (``is_feedback``)"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:54
msgid "requires in-wave, cross-lane functionality (``is_wave``)"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:55
msgid ""
"requires that all of its inputs are uniform across the wave "
"(``requires_uniform_inputs``)."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:56
msgid "is a barrier operation (``is_barrier``)."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:59
msgid "Motivation"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:61
msgid ""
"DXIL backend passes depend on various properties of DXIL Operations. For "
"example, ``DXILOpLowering`` pass will need information such as the DXIL "
"operation an LLVM intrinsic is to be lowered to, along with valid overload "
"and argument types etc. The TableGen file - ``llvm/lib/Target/DirectX/DXIL."
"td`` - is used to represent DXIL Operations by specifying their properties "
"listed above. ``DXIL.td`` is designed to be the single source of reference "
"of DXIL Operations primarily for the implementation of passes in DXIL "
"backend in ``llvm-project`` repo - analogous to ``hctdb.py`` for "
"``DirectXShadeCompiler`` repo. However, the current design does not intend "
"to encapsulate various validation rules, present in ``hctdb.py``, but do not "
"pertain to DXIL Operations. It needs to have a rich representation "
"capabilities that TableGen backends (such as ``DXILEmitter``) can rely on. "
"Additionally, the DXIL Op specification should be easy to read and "
"comprehend."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:73
msgid ""
"This note provides the design of the specification DXIL Ops as TableGen "
"class ``DXILOp`` by specifying its properties identified above."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:77
msgid "DXIL Operation Specification"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:79
msgid ""
"The DXIL Operation is represented using the TableGen class ``DXILOp``. The "
"DXIL operation properties are specified as fields of the ``DXILOp`` class as "
"described below."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:82
msgid ""
"Each DXIL Operation is represented as a TableGen record. The name of each of "
"the records signifies operation name."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:84
msgid "A documentation string for the operation."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:85
msgid ""
"The LLVM Intrinsic that maps to the operation is represented as "
"``Intrinsic`` defined in `Intrinsics.td <https://github.com/llvm/llvm-"
"project/blob/main/llvm/include/llvm/IR/Intrinsics.td>`_."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:87
msgid "The unique operation id is represented by an integer."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:88
msgid "DXIL Operation Class is represented as follows"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:95
msgid ""
"Concrete operation records, such as ``unary`` are defined by inheriting from "
"``DXILOpClass``."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:96
msgid "Return type of the operation is represented as ``LLVMType``."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:97
msgid ""
"Operation arguments are represented as a list of ``LLVMType`` with each type "
"corresponding to the argument position. An overload type, if supported by "
"the operation, is denoted as the positional type ``overloadTy`` in the "
"argument or in the result, where ``overloadTy`` is defined to be synonymous "
"to ``llvm_any_ty``."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:106
msgid "Empty list, ``[]`` represents an operation with no arguments."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:108
msgid ""
"Valid operation overload types predicated on DXIL version are specified as a "
"list of ``Overloads`` records. Representation of ``Overloads`` class is "
"described in a later section."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:111
msgid ""
"Valid shader stages predicated on DXIL version are specified as a list of "
"``Stages`` records. Representation of ``Stages`` class is described in a "
"later section."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:114
msgid ""
"Various attributes of the DXIL Operation are represented as a ``list`` of "
"``Attributes`` class records. Representation of ``Attributes`` class is "
"described in a later section."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:119
msgid "Types specific to DXIL"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:121
msgid ""
"Type notation used in this document viz., ``<size>Ty`` corresponds to "
"TableGen records for LLVM types ``llvm_<size>_ty``. Apart from "
"``overloadTy`` described above, ``resRetF32Ty`` is used to denote resource "
"return type and ``handleTy`` is used to denote handle type."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:126
msgid "Specification of DXIL Operation"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:128
msgid ""
"A DXIL Operation is represented by the following TableGen class that "
"encapsulates the various TableGen representations of its properties "
"described above."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:164
msgid "Version Specification"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:166
msgid ""
"DXIL version is used to specify various version-dependent operation "
"properties in place of Shader Model version."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:169
msgid ""
"A ``Version`` class encapsulating ``Major`` and ``Minor`` version number is "
"defined as follows:"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:181
msgid "Concrete representations of valid DXIL versions are defined as follows:"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:191
msgid "Shader Stage Specification"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:193
msgid ""
"Various shader stages such as ``compute``, ``pixel``, ``vertex``, etc., are "
"represented as follows"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:207
msgid "Shader Attribute Specification"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:209
msgid ""
"Various operation memory access and boolean attributes such as ``ReadNone``, "
"``IsWave`` etc., are represented as follows"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:222
msgid "Versioned Property Specification"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:224
msgid ""
"DXIL Operation properties such as valid overload types, shader stages and "
"attributes are predicated on DXIL version. These are represented as list of "
"versioned properties."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:229
msgid "Overload Type Specification"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:231
msgid ""
"``overloads`` field of ``class DXILOp`` is used to represent valid operation "
"overloads predicated on DXIL version as list of records of the following "
"class"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:241
msgid ""
"Following is an example specification of valid overload types for "
"``DXIL1_0`` and ``DXIL1_2``."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:251
msgid "An empty list signifies that the operation supports no overload types."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:255
msgid "Stages Specification"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:257
msgid ""
"``stages`` field of ``class DXILOp`` is used to represent valid operation "
"stages predicated on DXIL version as list of records of the following class"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:267
msgid ""
"Following is an example specification of valid stages for ``DXIL1_0``, "
"``DXIL1_2``, ``DXIL1_4`` and ``DXIL1_6``."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:279
msgid ""
"The following two pseudo stage records in addition to standard shader stages "
"are defined."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:282
msgid ""
"``all_stages`` signifies that the operation is valid for all stages in the "
"specified DXIL version and later."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:284
msgid ""
"``removed`` signifies removal of support for the operation in the specified "
"DXIL version and later."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:287
msgid ""
"A non-empty list of supported stages is required to be specified. If an "
"operation is supported in all DXIL versions and all stages it is required to "
"be specified as"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:296
msgid "Attribute Specification"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:298
msgid ""
"``attributes`` field of ``class DXILOp`` is used to represent valid "
"operation attributes predicated on DXIL version as list of records of the "
"following class"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:308
msgid ""
"Following is an example specification of valid attributes for ``DXIL1_0``."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:314
msgid "A null list of ``attributes`` signifies no operation attributes."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:317
msgid "Interpretation of Multiple Versioned Properties"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:319
msgid ""
"Each of the versioned properties states that the specified overload type, "
"stage or attribute records are valid for the predicated DXIL version. Only "
"the properties corresponding to latest minimal DXIL version are applicable. "
"Note as in the above example, any overload types, stages or attributes, that "
"remain valid in a later DXIL version need to be specified in full. For "
"example, consider the following specification of valid overload types:"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:333
msgid ""
"It specifies that the overload types ``halfTy`` and ``floatTy`` are valid "
"for DXIL version 1.0 and later. It also specifies that  ``doubleTy`` is "
"additionally supported in DXIL version 1.2 and later."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:337
msgid ""
"This provides the flexibility to specify properties independent of other "
"versioned specifications in the list."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:342
msgid "DXIL Operation Specification Examples"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:344
msgid ""
"Following examples illustrate the specification of some of the DXIL Ops."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:346
msgid ""
"``Sin`` operation - an operation valid in all DXIL versions and all stages "
"and has valid overload types predicated on DXIL version."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:361
msgid ""
"``FlattenedThreadIdInGroup`` - an operation with no arguments, no overload "
"types, and valid stages and attributes predicated by DXIL Version."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:375
msgid ""
"``RawBufferStore`` - an operation with ``void`` return type, valid overload "
"types predicated by DXIL Version and valid in all DXIL versions and stages."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:394
msgid ""
"``DerivCoarseX`` - an operation with no overload types and stages predicated "
"by DXIL Version."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:411
msgid ""
"``CreateHandle`` - an operation with no overload types, no associated "
"``LLVMIntrinsic`` and stages predicated  by DXIL Version."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:427
msgid ""
"``Sample`` - an operation with valid overload types, stages and attributes "
"predicated by DXIL version."
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:447
msgid "Summary"
msgstr ""

#: ../../../DirectX/DXILOpTableGenDesign.rst:449
msgid ""
"This note sketches the design of a readable and maintainable TableGen "
"specification of DXIL Ops in ``DXIL.td`` intended to serve as a single "
"source of reference for TableGen backends (such as ``DXILEmitter``) that "
"generate C++ representations used in DXIL backend passes."
msgstr ""
