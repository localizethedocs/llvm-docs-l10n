# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 19\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../BugpointRedesign.md:1
msgid "Bugpoint Redesign"
msgstr ""

#: ../../../BugpointRedesign.md:2
msgid "Author: Diego Treviño (diegotf@google.com)"
msgstr ""

#: ../../../BugpointRedesign.md:4
msgid "Date: 2019-06-05"
msgstr ""

#: ../../../BugpointRedesign.md:6
msgid "Status: Draft"
msgstr ""

#: ../../../BugpointRedesign.md:9
msgid "Introduction"
msgstr ""

#: ../../../BugpointRedesign.md:10
msgid ""
"As use of bugpoint has grown several areas of improvement have been "
"identified through years of use: confusing to use, slow, it doesn’t always "
"produce high quality test cases, etc. This document proposes a new approach "
"with a narrower focus: minimization of IR test cases."
msgstr ""

#: ../../../BugpointRedesign.md:16
msgid "Proposed New Design"
msgstr ""

#: ../../../BugpointRedesign.md:19
msgid "Narrow focus: test-case reduction"
msgstr ""

#: ../../../BugpointRedesign.md:20
msgid ""
"The main focus will be a code reduction strategy to obtain much smaller test "
"cases that still have the same property as the original one. This will be "
"done via classic delta debugging and by adding some IR-specific reductions "
"(e.g. replacing globals, removing unused instructions, etc), similar to what "
"already exists, but with more in-depth minimization."
msgstr ""

#: ../../../BugpointRedesign.md:27
msgid ""
"Granted, if the community differs on this proposal, the legacy code could "
"still be present in the tool, but with the caveat of still being documented "
"and designed towards delta reduction."
msgstr ""

#: ../../../BugpointRedesign.md:32
msgid "Command-Line Options"
msgstr ""

#: ../../../BugpointRedesign.md:33
msgid ""
"We are proposing to reduce the plethora of bugpoint’s options to just two: "
"an interesting-ness test and the arguments for said test, similar to other "
"delta reduction tools such as CReduce, Delta, and Lithium; the tool should "
"feel less  cluttered, and there should also be no uncertainty about how to "
"operate it."
msgstr ""

#: ../../../BugpointRedesign.md:39
msgid ""
"The interesting-ness test that’s going to be run to reduce the code is given "
"by name:         `--test=<test_name>` If a `--test`  option is not given, "
"the program exits; this option is similar to bugpoint’s current `-compile-"
"custom` option, which lets the user run a custom script."
msgstr ""

#: ../../../BugpointRedesign.md:47
msgid ""
"The interesting-ness test would be defined as a script that returns 0 when "
"the IR achieves a user-defined behaviour (e.g. failure to compile on clang) "
"and a nonzero value when otherwise. Leaving the user the freedom to "
"determine what is and isn’t interesting to the tool, and thus, streamlining "
"the process of reducing a test-case."
msgstr ""

#: ../../../BugpointRedesign.md:54
msgid ""
"If the test accepts any arguments (excluding the input ll/bc file), they are "
"given via the following flag:         `--test_args=<test_arguments>` If "
"unspecified, the test is run as given. It’s worth noting that the input file "
"would be passed as a parameter to the test, similar how `-compile-custom` "
"currently operates."
msgstr ""

#: ../../../BugpointRedesign.md:62
msgid "Implementation"
msgstr ""

#: ../../../BugpointRedesign.md:63
msgid ""
"The tool would behave similar to CReduce’s functionality in that it would "
"have a list of passes that try to minimize the given test-case. We should be "
"able to modularize the tool’s behavior, as well as making it easier to "
"maintain and expand."
msgstr ""

#: ../../../BugpointRedesign.md:69
msgid "The first version of this redesign would try to:"
msgstr ""

#: ../../../BugpointRedesign.md:72
msgid ""
"Discard functions, instructions and metadata that don’t influence the "
"interesting-ness test"
msgstr ""

#: ../../../BugpointRedesign.md:74
msgid "Remove unused parameters from functions"
msgstr ""

#: ../../../BugpointRedesign.md:75
msgid "Eliminate unvisited conditional paths"
msgstr ""

#: ../../../BugpointRedesign.md:76
msgid "Rename variables to more regular ones (such as “a”, “b”, “c”, etc.)"
msgstr ""

#: ../../../BugpointRedesign.md:79
msgid ""
"Once these passes are implemented, more meaningful reductions (such as type "
"reduction) would be added to the tool, to even further reduce IR."
msgstr ""

#: ../../../BugpointRedesign.md:83
msgid "Background on historical bugpoint issues"
msgstr ""

#: ../../../BugpointRedesign.md:86
msgid "Root Cause Analysis"
msgstr ""

#: ../../../BugpointRedesign.md:87
msgid ""
"Presently, bugpoint takes a long time to find the source problem in a given "
"IR file, mainly due to the fact that it tries to debug the input by running "
"various strategies to classify the bug, which in turn run multiple optimizer "
"and compilation passes over the input, taking up a lot of time. Furthermore, "
"when the IR crashes, it tries to reduce it by performing some sub-optimal "
"passes (e.g. a lot of unreachable blocks), and sometimes even fails to "
"minimize at all."
msgstr ""

#: ../../../BugpointRedesign.md:96
msgid "\"Quirky\" Interface"
msgstr ""

#: ../../../BugpointRedesign.md:97
msgid ""
"Bugpoint’s current interface overwhelms and confuses the user, the help "
"screen alone ends up confusing rather providing guidance. And, not only are "
"there numerous features and options, but some of them also work in "
"unexpected ways and most of the time the user ends up using a custom script. "
"Pruning and simplifying the interface will be worth considering in order to "
"make the tool more useful in the general case and easier to maintain."
msgstr ""
