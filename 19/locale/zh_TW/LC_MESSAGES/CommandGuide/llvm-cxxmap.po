# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 19\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../CommandGuide/llvm-cxxmap.rst:2
msgid "llvm-cxxmap - Mangled name remapping tool"
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:7
msgid "SYNOPSIS"
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:9
msgid ":program:`llvm-cxxmap` [*options*] *symbol-file-1* *symbol-file-2*"
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:12
msgid "DESCRIPTION"
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:14
msgid ""
"The :program:`llvm-cxxmap` tool performs fuzzy matching of C++ mangled "
"names, based on a file describing name components that should be considered "
"equivalent."
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:17
msgid ""
"The symbol files should contain a list of C++ mangled names (one per line). "
"Blank lines and lines starting with ``#`` are ignored. The output is a list "
"of pairs of equivalent symbols, one per line, of the form"
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:25
msgid ""
"where ``<symbol-1>`` is a symbol from *symbol-file-1* and ``<symbol-2>`` is "
"a symbol from *symbol-file-2*. Mappings for which the two symbols are "
"identical are omitted."
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:30
msgid "OPTIONS"
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:36
msgid ""
"Specify a file containing a list of equivalence rules that should be used to "
"determine whether two symbols are equivalent. Required. See :ref:`remapping-"
"file`."
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:42
msgid ""
"Specify a file to write the list of matched names to. If unspecified, the "
"list will be written to stdout."
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:47
msgid ""
"Produce a warning if there are multiple equivalent (but distinct) symbols in "
"*symbol-file-2*."
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:52
msgid ""
"Produce a warning if *symbol-file-1* contains a symbol for which there is no "
"equivalent symbol in *symbol-file-2*."
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:58
msgid "REMAPPING FILE"
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:60
msgid "The remapping file is a text file containing lines of the form"
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:66
msgid ""
"where ``fragmentkind`` is one of ``name``, ``type``, or ``encoding``, "
"indicating whether the following mangled name fragments are <`name <http://"
"itanium-cxx-abi.github.io/cxx-abi/abi.html#mangle.name>`_>s, <`type <http://"
"itanium-cxx-abi.github.io/cxx-abi/abi.html#mangle.type>`_>s, or <`encoding "
"<http://itanium-cxx-abi.github.io/cxx-abi/abi.html#mangle.encoding>`_>s, "
"respectively. Blank lines and lines starting with ``#`` are ignored."
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:74
msgid ""
"Unmangled C names can be expressed as an ``encoding`` that is a (length-"
"prefixed) <`source-name <http://itanium-cxx-abi.github.io/cxx-abi/abi."
"html#mangle.source-name>`_>:"
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:82
msgid ""
"For convenience, built-in <substitution>s such as ``St`` and ``Ss`` are "
"accepted as <name>s (even though they technically are not <name>s)."
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:85
msgid ""
"For example, to specify that ``absl::string_view`` and ``std::string_view`` "
"should be treated as equivalent, the following remapping file could be used:"
msgstr ""

#: ../../../CommandGuide/llvm-cxxmap.rst:99
msgid ""
"Symbol remapping is currently only supported for C++ mangled names following "
"the Itanium C++ ABI mangling scheme. This covers all C++ targets supported "
"by Clang other than Windows targets."
msgstr ""
