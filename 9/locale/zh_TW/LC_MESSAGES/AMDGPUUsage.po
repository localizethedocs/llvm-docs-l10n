# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../AMDGPUUsage.rst:3
msgid "User Guide for AMDGPU Backend"
msgstr ""

#: ../../../AMDGPUUsage.rst:9
msgid "Introduction"
msgstr ""

#: ../../../AMDGPUUsage.rst:11
msgid ""
"The AMDGPU backend provides ISA code generation for AMD GPUs, starting with "
"the R600 family up until the current GCN families. It lives in the ``lib/"
"Target/AMDGPU`` directory."
msgstr ""

#: ../../../AMDGPUUsage.rst:16
msgid "LLVM"
msgstr ""

#: ../../../AMDGPUUsage.rst:21
msgid "Target Triples"
msgstr ""

#: ../../../AMDGPUUsage.rst:23
msgid ""
"Use the ``clang -target <Architecture>-<Vendor>-<OS>-<Environment>`` option "
"to specify the target triple:"
msgstr ""

#: ../../../AMDGPUUsage.rst:26
msgid "AMDGPU Architectures"
msgstr ""

#: ../../../AMDGPUUsage.rst:30
msgid "Architecture"
msgstr ""

#: ../../../AMDGPUUsage.rst:30 ../../../AMDGPUUsage.rst:40
#: ../../../AMDGPUUsage.rst:50 ../../../AMDGPUUsage.rst:65
#: ../../../AMDGPUUsage.rst:280 ../../../AMDGPUUsage.rst:370
#: ../../../AMDGPUUsage.rst:463 ../../../AMDGPUUsage.rst:606
#: ../../../AMDGPUUsage.rst:784 ../../../AMDGPUUsage.rst:824
#: ../../../AMDGPUUsage.rst:859 ../../../AMDGPUUsage.rst:1050
#: ../../../AMDGPUUsage.rst:1187 ../../../AMDGPUUsage.rst:1231
#: ../../../AMDGPUUsage.rst:1268 ../../../AMDGPUUsage.rst:1309
#: ../../../AMDGPUUsage.rst:1512 ../../../AMDGPUUsage.rst:1612
#: ../../../AMDGPUUsage.rst:1657 ../../../AMDGPUUsage.rst:1801
#: ../../../AMDGPUUsage.rst:2193 ../../../AMDGPUUsage.rst:2285
#: ../../../AMDGPUUsage.rst:2571 ../../../AMDGPUUsage.rst:2724
#: ../../../AMDGPUUsage.rst:2739 ../../../AMDGPUUsage.rst:2753
#: ../../../AMDGPUUsage.rst:2768 ../../../AMDGPUUsage.rst:2809
#: ../../../AMDGPUUsage.rst:3012 ../../../AMDGPUUsage.rst:5497
#: ../../../AMDGPUUsage.rst:5570 ../../../AMDGPUUsage.rst:5589
#: ../../../AMDGPUUsage.rst:5634 ../../../AMDGPUUsage.rst:5674
#: ../../../AMDGPUUsage.rst:5702 ../../../AMDGPUUsage.rst:6242
msgid "Description"
msgstr ""

#: ../../../AMDGPUUsage.rst:32 ../../../AMDGPUUsage.rst:89
#: ../../../AMDGPUUsage.rst:90 ../../../AMDGPUUsage.rst:91
#: ../../../AMDGPUUsage.rst:92 ../../../AMDGPUUsage.rst:95
#: ../../../AMDGPUUsage.rst:96 ../../../AMDGPUUsage.rst:97
#: ../../../AMDGPUUsage.rst:100 ../../../AMDGPUUsage.rst:101
#: ../../../AMDGPUUsage.rst:102 ../../../AMDGPUUsage.rst:103
#: ../../../AMDGPUUsage.rst:104 ../../../AMDGPUUsage.rst:107
#: ../../../AMDGPUUsage.rst:108 ../../../AMDGPUUsage.rst:109
#: ../../../AMDGPUUsage.rst:110 ../../../AMDGPUUsage.rst:647
msgid "``r600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:32
msgid "AMD GPUs HD2XXX-HD6XXX for graphics and compute shaders."
msgstr ""

#: ../../../AMDGPUUsage.rst:33 ../../../AMDGPUUsage.rst:113
#: ../../../AMDGPUUsage.rst:114 ../../../AMDGPUUsage.rst:120
#: ../../../AMDGPUUsage.rst:130 ../../../AMDGPUUsage.rst:134
#: ../../../AMDGPUUsage.rst:138 ../../../AMDGPUUsage.rst:147
#: ../../../AMDGPUUsage.rst:153 ../../../AMDGPUUsage.rst:159
#: ../../../AMDGPUUsage.rst:162 ../../../AMDGPUUsage.rst:168
#: ../../../AMDGPUUsage.rst:171 ../../../AMDGPUUsage.rst:179
#: ../../../AMDGPUUsage.rst:185 ../../../AMDGPUUsage.rst:188
#: ../../../AMDGPUUsage.rst:190 ../../../AMDGPUUsage.rst:194
#: ../../../AMDGPUUsage.rst:201 ../../../AMDGPUUsage.rst:203
#: ../../../AMDGPUUsage.rst:208 ../../../AMDGPUUsage.rst:210
#: ../../../AMDGPUUsage.rst:214 ../../../AMDGPUUsage.rst:221
#: ../../../AMDGPUUsage.rst:230 ../../../AMDGPUUsage.rst:239
msgid "``amdgcn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:33
msgid "AMD GPUs GCN GFX6 onwards for graphics and compute shaders."
msgstr ""

#: ../../../AMDGPUUsage.rst:36
msgid "AMDGPU Vendors"
msgstr ""

#: ../../../AMDGPUUsage.rst:40
msgid "Vendor"
msgstr ""

#: ../../../AMDGPUUsage.rst:42
msgid "``amd``"
msgstr ""

#: ../../../AMDGPUUsage.rst:42
msgid "Can be used for all AMD GPU usage."
msgstr ""

#: ../../../AMDGPUUsage.rst:43 ../../../AMDGPUUsage.rst:57
msgid "``mesa3d``"
msgstr ""

#: ../../../AMDGPUUsage.rst:43
msgid "Can be used if the OS is ``mesa3d``."
msgstr ""

#: ../../../AMDGPUUsage.rst:46
msgid "AMDGPU Operating Systems"
msgstr ""

#: ../../../AMDGPUUsage.rst:50
msgid "OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:52 ../../../AMDGPUUsage.rst:67
msgid "*<empty>*"
msgstr ""

#: ../../../AMDGPUUsage.rst:52
msgid "Defaults to the *unknown* OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:53
msgid "``amdhsa``"
msgstr ""

#: ../../../AMDGPUUsage.rst:53
msgid ""
"Compute kernels executed on HSA [HSA]_ compatible runtimes such as AMD's "
"ROCm [AMD-ROCm]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:55
msgid "``amdpal``"
msgstr ""

#: ../../../AMDGPUUsage.rst:55
msgid "Graphic shaders and compute kernels executed on AMD PAL runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:57
msgid "Graphic shaders and compute kernels executed on Mesa 3D runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:61
msgid "AMDGPU Environments"
msgstr ""

#: ../../../AMDGPUUsage.rst:65
msgid "Environment"
msgstr ""

#: ../../../AMDGPUUsage.rst:67
msgid "Default."
msgstr ""

#: ../../../AMDGPUUsage.rst:73
msgid "Processors"
msgstr ""

#: ../../../AMDGPUUsage.rst:75
msgid ""
"Use the ``clang -mcpu <Processor>`` option to specify the AMD GPU processor. "
"The names from both the *Processor* and *Alternative Processor* can be used."
msgstr ""

#: ../../../AMDGPUUsage.rst:78
msgid "AMDGPU Processors"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "Processor"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "Alternative Processor"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "Target Triple Architecture"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "dGPU/ APU"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "Target Features Supported [Default]"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "ROCm Support"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "Example Products"
msgstr ""

#: ../../../AMDGPUUsage.rst:87
msgid "**Radeon HD 2000/3000 Series (R600)** [AMD-RADEON-HD-2000-3000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:89 ../../../AMDGPUUsage.rst:90
#: ../../../AMDGPUUsage.rst:91 ../../../AMDGPUUsage.rst:92
#: ../../../AMDGPUUsage.rst:95 ../../../AMDGPUUsage.rst:96
#: ../../../AMDGPUUsage.rst:97 ../../../AMDGPUUsage.rst:100
#: ../../../AMDGPUUsage.rst:101 ../../../AMDGPUUsage.rst:102
#: ../../../AMDGPUUsage.rst:103 ../../../AMDGPUUsage.rst:104
#: ../../../AMDGPUUsage.rst:107 ../../../AMDGPUUsage.rst:108
#: ../../../AMDGPUUsage.rst:109 ../../../AMDGPUUsage.rst:110
#: ../../../AMDGPUUsage.rst:113 ../../../AMDGPUUsage.rst:114
#: ../../../AMDGPUUsage.rst:130 ../../../AMDGPUUsage.rst:134
#: ../../../AMDGPUUsage.rst:147 ../../../AMDGPUUsage.rst:171
#: ../../../AMDGPUUsage.rst:179 ../../../AMDGPUUsage.rst:185
#: ../../../AMDGPUUsage.rst:188 ../../../AMDGPUUsage.rst:194
#: ../../../AMDGPUUsage.rst:203 ../../../AMDGPUUsage.rst:208
#: ../../../AMDGPUUsage.rst:210 ../../../AMDGPUUsage.rst:221
#: ../../../AMDGPUUsage.rst:230 ../../../AMDGPUUsage.rst:239
msgid "dGPU"
msgstr ""

#: ../../../AMDGPUUsage.rst:90 ../../../AMDGPUUsage.rst:648
msgid "``r630``"
msgstr ""

#: ../../../AMDGPUUsage.rst:91 ../../../AMDGPUUsage.rst:649
msgid "``rs880``"
msgstr ""

#: ../../../AMDGPUUsage.rst:92 ../../../AMDGPUUsage.rst:650
msgid "``rv670``"
msgstr ""

#: ../../../AMDGPUUsage.rst:93
msgid "**Radeon HD 4000 Series (R700)** [AMD-RADEON-HD-4000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:95 ../../../AMDGPUUsage.rst:651
msgid "``rv710``"
msgstr ""

#: ../../../AMDGPUUsage.rst:96 ../../../AMDGPUUsage.rst:652
msgid "``rv730``"
msgstr ""

#: ../../../AMDGPUUsage.rst:97 ../../../AMDGPUUsage.rst:653
msgid "``rv770``"
msgstr ""

#: ../../../AMDGPUUsage.rst:98
msgid "**Radeon HD 5000 Series (Evergreen)** [AMD-RADEON-HD-5000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:100 ../../../AMDGPUUsage.rst:654
msgid "``cedar``"
msgstr ""

#: ../../../AMDGPUUsage.rst:101 ../../../AMDGPUUsage.rst:655
msgid "``cypress``"
msgstr ""

#: ../../../AMDGPUUsage.rst:102 ../../../AMDGPUUsage.rst:656
msgid "``juniper``"
msgstr ""

#: ../../../AMDGPUUsage.rst:103 ../../../AMDGPUUsage.rst:657
msgid "``redwood``"
msgstr ""

#: ../../../AMDGPUUsage.rst:104 ../../../AMDGPUUsage.rst:658
msgid "``sumo``"
msgstr ""

#: ../../../AMDGPUUsage.rst:105
msgid "**Radeon HD 6000 Series (Northern Islands)** [AMD-RADEON-HD-6000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:107 ../../../AMDGPUUsage.rst:659
msgid "``barts``"
msgstr ""

#: ../../../AMDGPUUsage.rst:108 ../../../AMDGPUUsage.rst:660
msgid "``caicos``"
msgstr ""

#: ../../../AMDGPUUsage.rst:109 ../../../AMDGPUUsage.rst:661
msgid "``cayman``"
msgstr ""

#: ../../../AMDGPUUsage.rst:110 ../../../AMDGPUUsage.rst:662
msgid "``turks``"
msgstr ""

#: ../../../AMDGPUUsage.rst:111
msgid "**GCN GFX6 (Southern Islands (SI))** [AMD-GCN-GFX6]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:113 ../../../AMDGPUUsage.rst:665
msgid "``gfx600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:113
msgid "``tahiti``"
msgstr ""

#: ../../../AMDGPUUsage.rst:114 ../../../AMDGPUUsage.rst:666
msgid "``gfx601``"
msgstr ""

#: ../../../AMDGPUUsage.rst:114
msgid "``hainan``"
msgstr ""

#: ../../../AMDGPUUsage.rst:115
msgid "``oland``"
msgstr ""

#: ../../../AMDGPUUsage.rst:116
msgid "``pitcairn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:117
msgid "``verde``"
msgstr ""

#: ../../../AMDGPUUsage.rst:118
msgid "**GCN GFX7 (Sea Islands (CI))** [AMD-GCN-GFX7]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:120 ../../../AMDGPUUsage.rst:667
msgid "``gfx700``"
msgstr ""

#: ../../../AMDGPUUsage.rst:120
msgid "``kaveri``"
msgstr ""

#: ../../../AMDGPUUsage.rst:120 ../../../AMDGPUUsage.rst:138
#: ../../../AMDGPUUsage.rst:153 ../../../AMDGPUUsage.rst:159
#: ../../../AMDGPUUsage.rst:162 ../../../AMDGPUUsage.rst:168
#: ../../../AMDGPUUsage.rst:190 ../../../AMDGPUUsage.rst:201
#: ../../../AMDGPUUsage.rst:214
msgid "APU"
msgstr ""

#: ../../../AMDGPUUsage.rst:120
msgid "A6-7000"
msgstr ""

#: ../../../AMDGPUUsage.rst:121
msgid "A6 Pro-7050B"
msgstr ""

#: ../../../AMDGPUUsage.rst:122
msgid "A8-7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:123
msgid "A8 Pro-7150B"
msgstr ""

#: ../../../AMDGPUUsage.rst:124
msgid "A10-7300"
msgstr ""

#: ../../../AMDGPUUsage.rst:125
msgid "A10 Pro-7350B"
msgstr ""

#: ../../../AMDGPUUsage.rst:126
msgid "FX-7500"
msgstr ""

#: ../../../AMDGPUUsage.rst:127
msgid "A8-7200P"
msgstr ""

#: ../../../AMDGPUUsage.rst:128
msgid "A10-7400P"
msgstr ""

#: ../../../AMDGPUUsage.rst:129
msgid "FX-7600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:130 ../../../AMDGPUUsage.rst:668
msgid "``gfx701``"
msgstr ""

#: ../../../AMDGPUUsage.rst:130
msgid "``hawaii``"
msgstr ""

#: ../../../AMDGPUUsage.rst:130 ../../../AMDGPUUsage.rst:134
#: ../../../AMDGPUUsage.rst:159 ../../../AMDGPUUsage.rst:171
#: ../../../AMDGPUUsage.rst:179 ../../../AMDGPUUsage.rst:185
#: ../../../AMDGPUUsage.rst:188 ../../../AMDGPUUsage.rst:194
msgid "ROCm"
msgstr ""

#: ../../../AMDGPUUsage.rst:130
msgid "FirePro W8100"
msgstr ""

#: ../../../AMDGPUUsage.rst:131
msgid "FirePro W9100"
msgstr ""

#: ../../../AMDGPUUsage.rst:132
msgid "FirePro S9150"
msgstr ""

#: ../../../AMDGPUUsage.rst:133
msgid "FirePro S9170"
msgstr ""

#: ../../../AMDGPUUsage.rst:134 ../../../AMDGPUUsage.rst:669
msgid "``gfx702``"
msgstr ""

#: ../../../AMDGPUUsage.rst:134
msgid "Radeon R9 290"
msgstr ""

#: ../../../AMDGPUUsage.rst:135
msgid "Radeon R9 290x"
msgstr ""

#: ../../../AMDGPUUsage.rst:136
msgid "Radeon R390"
msgstr ""

#: ../../../AMDGPUUsage.rst:137
msgid "Radeon R390x"
msgstr ""

#: ../../../AMDGPUUsage.rst:138 ../../../AMDGPUUsage.rst:670
msgid "``gfx703``"
msgstr ""

#: ../../../AMDGPUUsage.rst:138
msgid "``kabini``"
msgstr ""

#: ../../../AMDGPUUsage.rst:139
msgid "``mullins``"
msgstr ""

#: ../../../AMDGPUUsage.rst:138
msgid "E1-2100"
msgstr ""

#: ../../../AMDGPUUsage.rst:139
msgid "E1-2200"
msgstr ""

#: ../../../AMDGPUUsage.rst:140
msgid "E1-2500"
msgstr ""

#: ../../../AMDGPUUsage.rst:141
msgid "E2-3000"
msgstr ""

#: ../../../AMDGPUUsage.rst:142
msgid "E2-3800"
msgstr ""

#: ../../../AMDGPUUsage.rst:143
msgid "A4-5000"
msgstr ""

#: ../../../AMDGPUUsage.rst:144
msgid "A4-5100"
msgstr ""

#: ../../../AMDGPUUsage.rst:145
msgid "A6-5200"
msgstr ""

#: ../../../AMDGPUUsage.rst:146
msgid "A4 Pro-3340B"
msgstr ""

#: ../../../AMDGPUUsage.rst:147 ../../../AMDGPUUsage.rst:671
msgid "``gfx704``"
msgstr ""

#: ../../../AMDGPUUsage.rst:147
msgid "``bonaire``"
msgstr ""

#: ../../../AMDGPUUsage.rst:147
msgid "Radeon HD 7790"
msgstr ""

#: ../../../AMDGPUUsage.rst:148
msgid "Radeon HD 8770"
msgstr ""

#: ../../../AMDGPUUsage.rst:149
msgid "R7 260"
msgstr ""

#: ../../../AMDGPUUsage.rst:150
msgid "R7 260X"
msgstr ""

#: ../../../AMDGPUUsage.rst:151
msgid "**GCN GFX8 (Volcanic Islands (VI))** [AMD-GCN-GFX8]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:153 ../../../AMDGPUUsage.rst:673
msgid "``gfx801``"
msgstr ""

#: ../../../AMDGPUUsage.rst:153
msgid "``carrizo``"
msgstr ""

#: ../../../AMDGPUUsage.rst:153 ../../../AMDGPUUsage.rst:159
#: ../../../AMDGPUUsage.rst:162 ../../../AMDGPUUsage.rst:168
#: ../../../AMDGPUUsage.rst:190 ../../../AMDGPUUsage.rst:201
#: ../../../AMDGPUUsage.rst:214
msgid "xnack [on]"
msgstr ""

#: ../../../AMDGPUUsage.rst:153
msgid "A6-8500P"
msgstr ""

#: ../../../AMDGPUUsage.rst:154
msgid "Pro A6-8500B"
msgstr ""

#: ../../../AMDGPUUsage.rst:155
msgid "A8-8600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:156
msgid "Pro A8-8600B"
msgstr ""

#: ../../../AMDGPUUsage.rst:157
msgid "FX-8800P"
msgstr ""

#: ../../../AMDGPUUsage.rst:158
msgid "Pro A12-8800B"
msgstr ""

#: ../../../AMDGPUUsage.rst:159 ../../../AMDGPUUsage.rst:162
#: ../../../AMDGPUUsage.rst:168 ../../../AMDGPUUsage.rst:185
#: ../../../AMDGPUUsage.rst:188
msgid "\\"
msgstr ""

#: ../../../AMDGPUUsage.rst:159
msgid "A10-8700P"
msgstr ""

#: ../../../AMDGPUUsage.rst:160
msgid "Pro A10-8700B"
msgstr ""

#: ../../../AMDGPUUsage.rst:161
msgid "A10-8780P"
msgstr ""

#: ../../../AMDGPUUsage.rst:162
msgid "A10-9600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:163
msgid "A10-9630P"
msgstr ""

#: ../../../AMDGPUUsage.rst:164
msgid "A12-9700P"
msgstr ""

#: ../../../AMDGPUUsage.rst:165
msgid "A12-9730P"
msgstr ""

#: ../../../AMDGPUUsage.rst:166
msgid "FX-9800P"
msgstr ""

#: ../../../AMDGPUUsage.rst:167
msgid "FX-9830P"
msgstr ""

#: ../../../AMDGPUUsage.rst:168
msgid "E2-9010"
msgstr ""

#: ../../../AMDGPUUsage.rst:169
msgid "A6-9210"
msgstr ""

#: ../../../AMDGPUUsage.rst:170
msgid "A9-9410"
msgstr ""

#: ../../../AMDGPUUsage.rst:171 ../../../AMDGPUUsage.rst:674
msgid "``gfx802``"
msgstr ""

#: ../../../AMDGPUUsage.rst:171
msgid "``iceland``"
msgstr ""

#: ../../../AMDGPUUsage.rst:172
msgid "``tonga``"
msgstr ""

#: ../../../AMDGPUUsage.rst:171 ../../../AMDGPUUsage.rst:179
#: ../../../AMDGPUUsage.rst:185 ../../../AMDGPUUsage.rst:188
#: ../../../AMDGPUUsage.rst:194 ../../../AMDGPUUsage.rst:203
#: ../../../AMDGPUUsage.rst:208 ../../../AMDGPUUsage.rst:221
#: ../../../AMDGPUUsage.rst:230 ../../../AMDGPUUsage.rst:239
msgid "xnack [off]"
msgstr ""

#: ../../../AMDGPUUsage.rst:171
msgid "FirePro S7150"
msgstr ""

#: ../../../AMDGPUUsage.rst:172
msgid "FirePro S7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:173
msgid "FirePro W7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:174
msgid "Radeon R285"
msgstr ""

#: ../../../AMDGPUUsage.rst:175
msgid "Radeon R9 380"
msgstr ""

#: ../../../AMDGPUUsage.rst:176
msgid "Radeon R9 385"
msgstr ""

#: ../../../AMDGPUUsage.rst:177
msgid "Mobile FirePro M7170"
msgstr ""

#: ../../../AMDGPUUsage.rst:179 ../../../AMDGPUUsage.rst:675
msgid "``gfx803``"
msgstr ""

#: ../../../AMDGPUUsage.rst:179
msgid "``fiji``"
msgstr ""

#: ../../../AMDGPUUsage.rst:179
msgid "Radeon R9 Nano"
msgstr ""

#: ../../../AMDGPUUsage.rst:180
msgid "Radeon R9 Fury"
msgstr ""

#: ../../../AMDGPUUsage.rst:181
msgid "Radeon R9 FuryX"
msgstr ""

#: ../../../AMDGPUUsage.rst:182
msgid "Radeon Pro Duo"
msgstr ""

#: ../../../AMDGPUUsage.rst:183
msgid "FirePro S9300x2"
msgstr ""

#: ../../../AMDGPUUsage.rst:184
msgid "Radeon Instinct MI8"
msgstr ""

#: ../../../AMDGPUUsage.rst:185
msgid "``polaris10``"
msgstr ""

#: ../../../AMDGPUUsage.rst:185
msgid "Radeon RX 470"
msgstr ""

#: ../../../AMDGPUUsage.rst:186
msgid "Radeon RX 480"
msgstr ""

#: ../../../AMDGPUUsage.rst:187
msgid "Radeon Instinct MI6"
msgstr ""

#: ../../../AMDGPUUsage.rst:188
msgid "``polaris11``"
msgstr ""

#: ../../../AMDGPUUsage.rst:188
msgid "Radeon RX 460"
msgstr ""

#: ../../../AMDGPUUsage.rst:190 ../../../AMDGPUUsage.rst:676
msgid "``gfx810``"
msgstr ""

#: ../../../AMDGPUUsage.rst:190
msgid "``stoney``"
msgstr ""

#: ../../../AMDGPUUsage.rst:192
msgid "**GCN GFX9** [AMD-GCN-GFX9]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:194 ../../../AMDGPUUsage.rst:677
msgid "``gfx900``"
msgstr ""

#: ../../../AMDGPUUsage.rst:194
msgid "Radeon Vega Frontier Edition"
msgstr ""

#: ../../../AMDGPUUsage.rst:196
msgid "Radeon RX Vega 56"
msgstr ""

#: ../../../AMDGPUUsage.rst:197
msgid "Radeon RX Vega 64"
msgstr ""

#: ../../../AMDGPUUsage.rst:198
msgid "Radeon RX Vega 64 Liquid"
msgstr ""

#: ../../../AMDGPUUsage.rst:200
msgid "Radeon Instinct MI25"
msgstr ""

#: ../../../AMDGPUUsage.rst:201 ../../../AMDGPUUsage.rst:678
msgid "``gfx902``"
msgstr ""

#: ../../../AMDGPUUsage.rst:201
msgid "Ryzen 3 2200G"
msgstr ""

#: ../../../AMDGPUUsage.rst:202
msgid "Ryzen 5 2400G"
msgstr ""

#: ../../../AMDGPUUsage.rst:203 ../../../AMDGPUUsage.rst:679
msgid "``gfx904``"
msgstr ""

#: ../../../AMDGPUUsage.rst:203 ../../../AMDGPUUsage.rst:210
#: ../../../AMDGPUUsage.rst:221 ../../../AMDGPUUsage.rst:230
#: ../../../AMDGPUUsage.rst:239
msgid "*TBA*"
msgstr ""

#: ../../../AMDGPUUsage.rst:208 ../../../AMDGPUUsage.rst:680
msgid "``gfx906``"
msgstr ""

#: ../../../AMDGPUUsage.rst:208
msgid "Radeon Instinct MI50"
msgstr ""

#: ../../../AMDGPUUsage.rst:209
msgid "Radeon Instinct MI60"
msgstr ""

#: ../../../AMDGPUUsage.rst:210 ../../../AMDGPUUsage.rst:681
msgid "``gfx908``"
msgstr ""

#: ../../../AMDGPUUsage.rst:210
msgid "xnack [off] sram-ecc [on]"
msgstr ""

#: ../../../AMDGPUUsage.rst:214 ../../../AMDGPUUsage.rst:682
msgid "``gfx909``"
msgstr ""

#: ../../../AMDGPUUsage.rst:214
msgid "*TBA* (Raven Ridge 2)"
msgstr ""

#: ../../../AMDGPUUsage.rst:219
msgid "**GCN GFX10** [AMD-GCN-GFX10]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:221 ../../../AMDGPUUsage.rst:684
msgid "``gfx1010``"
msgstr ""

#: ../../../AMDGPUUsage.rst:223 ../../../AMDGPUUsage.rst:232
#: ../../../AMDGPUUsage.rst:241
msgid "wavefrontsize64 [off]"
msgstr ""

#: ../../../AMDGPUUsage.rst:225 ../../../AMDGPUUsage.rst:234
#: ../../../AMDGPUUsage.rst:243
msgid "cumode [off]"
msgstr ""

#: ../../../AMDGPUUsage.rst:230 ../../../AMDGPUUsage.rst:685
msgid "``gfx1011``"
msgstr ""

#: ../../../AMDGPUUsage.rst:239 ../../../AMDGPUUsage.rst:686
msgid "``gfx1012``"
msgstr ""

#: ../../../AMDGPUUsage.rst:253
msgid "Target Features"
msgstr ""

#: ../../../AMDGPUUsage.rst:255
msgid ""
"Target features control how code is generated to support certain processor "
"specific features. Not all target features are supported by all processors. "
"The runtime must ensure that the features supported by the device used to "
"execute the code match the features enabled when generating the code. A "
"mismatch of features may result in incorrect execution, or a reduction in "
"performance."
msgstr ""

#: ../../../AMDGPUUsage.rst:262
msgid ""
"The target features supported by each processor, and the default value used "
"if not specified explicitly, is listed in :ref:`amdgpu-processor-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:266
msgid ""
"Use the ``clang -m[no-]<TargetFeature>`` option to specify the AMD GPU "
"target features."
msgstr ""

#: ../../../AMDGPUUsage.rst:269 ../../../AMDGPUUsage.rst:1039
#: ../../../AMDGPUUsage.rst:1130
msgid "For example:"
msgstr ""

#: ../../../AMDGPUUsage.rst:271
msgid "``-mxnack``"
msgstr ""

#: ../../../AMDGPUUsage.rst:272
msgid "Enable the ``xnack`` feature."
msgstr ""

#: ../../../AMDGPUUsage.rst:310
msgid "``-mno-xnack``"
msgstr ""

#: ../../../AMDGPUUsage.rst:274
msgid "Disable the ``xnack`` feature."
msgstr ""

#: ../../../AMDGPUUsage.rst:276
msgid "AMDGPU Target Features"
msgstr ""

#: ../../../AMDGPUUsage.rst:280
msgid "Target Feature"
msgstr ""

#: ../../../AMDGPUUsage.rst:282
msgid "-m[no-]xnack"
msgstr ""

#: ../../../AMDGPUUsage.rst:282
msgid ""
"Enable/disable generating code that has memory clauses that are compatible "
"with having XNACK replay enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:286
msgid ""
"This is used for demand paging and page migration. If XNACK replay is "
"enabled in the device, then if a page fault occurs the code may execute "
"incorrectly if the ``xnack`` feature is not enabled. Executing code that has "
"the feature enabled on a device that does not have XNACK replay enabled will "
"execute correctly, but may be less performant than code with the feature "
"disabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:297
msgid "-m[no-]sram-ecc"
msgstr ""

#: ../../../AMDGPUUsage.rst:297
msgid ""
"Enable/disable generating code that assumes SRAM ECC is enabled/disabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:300
msgid "-m[no-]wavefrontsize64"
msgstr ""

#: ../../../AMDGPUUsage.rst:300
msgid ""
"Control the default wavefront size used when generating code for kernels. "
"When disabled native wavefront size 32 is used, when enabled wavefront size "
"64 is used."
msgstr ""

#: ../../../AMDGPUUsage.rst:305
msgid "-m[no-]cumode"
msgstr ""

#: ../../../AMDGPUUsage.rst:305
msgid ""
"Control the default wavefront execution mode used when generating code for "
"kernels. When disabled native WGP wavefront execution mode is used, when "
"enabled CU wavefront execution mode is used (see :ref:`amdgpu-amdhsa-memory-"
"model`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:315
msgid "Address Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:317
msgid "The AMDGPU backend uses the following address space mappings."
msgstr ""

#: ../../../AMDGPUUsage.rst:319
msgid ""
"The memory space names used in the table, aside from the region memory "
"space, is from the OpenCL standard."
msgstr ""

#: ../../../AMDGPUUsage.rst:322
msgid ""
"LLVM Address Space number is used throughout LLVM (for example, in LLVM IR)."
msgstr ""

#: ../../../AMDGPUUsage.rst:324 ../../../AMDGPUUsage.rst:984
msgid "Address Space Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:328
msgid "LLVM Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:328 ../../../AMDGPUUsage.rst:992
msgid "Memory Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:330 ../../../AMDGPUUsage.rst:517
#: ../../../AMDGPUUsage.rst:530 ../../../AMDGPUUsage.rst:535
#: ../../../AMDGPUUsage.rst:536 ../../../AMDGPUUsage.rst:948
#: ../../../AMDGPUUsage.rst:2573 ../../../AMDGPUUsage.rst:2741
#: ../../../AMDGPUUsage.rst:2755 ../../../AMDGPUUsage.rst:2770
#: ../../../AMDGPUUsage.rst:5572 ../../../AMDGPUUsage.rst:5591
#: ../../../AMDGPUUsage.rst:6244 ../../../AMDGPUUsage.rst:6246
#: ../../../AMDGPUUsage.rst:6248 ../../../AMDGPUUsage.rst:6250
#: ../../../AMDGPUUsage.rst:6252 ../../../AMDGPUUsage.rst:6254
#: ../../../AMDGPUUsage.rst:6256 ../../../AMDGPUUsage.rst:6258
#: ../../../AMDGPUUsage.rst:6260 ../../../AMDGPUUsage.rst:6266
#: ../../../AMDGPUUsage.rst:6270 ../../../AMDGPUUsage.rst:6272
#: ../../../AMDGPUUsage.rst:6274 ../../../AMDGPUUsage.rst:6276
#: ../../../AMDGPUUsage.rst:6297 ../../../AMDGPUUsage.rst:6301
#: ../../../AMDGPUUsage.rst:6305 ../../../AMDGPUUsage.rst:6317
#: ../../../AMDGPUUsage.rst:6325 ../../../AMDGPUUsage.rst:6327
#: ../../../AMDGPUUsage.rst:6329 ../../../AMDGPUUsage.rst:6331
#: ../../../AMDGPUUsage.rst:6333 ../../../AMDGPUUsage.rst:6335
#: ../../../AMDGPUUsage.rst:6337 ../../../AMDGPUUsage.rst:6339
msgid "0"
msgstr ""

#: ../../../AMDGPUUsage.rst:330 ../../../AMDGPUUsage.rst:998
msgid "Generic (Flat)"
msgstr ""

#: ../../../AMDGPUUsage.rst:331 ../../../AMDGPUUsage.rst:534
#: ../../../AMDGPUUsage.rst:949 ../../../AMDGPUUsage.rst:994
#: ../../../AMDGPUUsage.rst:2742 ../../../AMDGPUUsage.rst:2757
#: ../../../AMDGPUUsage.rst:2772 ../../../AMDGPUUsage.rst:2921
#: ../../../AMDGPUUsage.rst:2943 ../../../AMDGPUUsage.rst:2951
#: ../../../AMDGPUUsage.rst:2962 ../../../AMDGPUUsage.rst:2973
#: ../../../AMDGPUUsage.rst:2976 ../../../AMDGPUUsage.rst:2979
#: ../../../AMDGPUUsage.rst:2982 ../../../AMDGPUUsage.rst:2985
#: ../../../AMDGPUUsage.rst:3016 ../../../AMDGPUUsage.rst:3019
#: ../../../AMDGPUUsage.rst:3022 ../../../AMDGPUUsage.rst:5573
#: ../../../AMDGPUUsage.rst:5705 ../../../AMDGPUUsage.rst:6268
#: ../../../AMDGPUUsage.rst:6286 ../../../AMDGPUUsage.rst:6289
#: ../../../AMDGPUUsage.rst:6313 ../../../AMDGPUUsage.rst:6315
#: ../../../AMDGPUUsage.rst:6323
msgid "1"
msgstr ""

#: ../../../AMDGPUUsage.rst:331 ../../../AMDGPUUsage.rst:996
#: ../../../AMDGPUUsage.rst:2083
msgid "Global"
msgstr ""

#: ../../../AMDGPUUsage.rst:332 ../../../AMDGPUUsage.rst:951
#: ../../../AMDGPUUsage.rst:995 ../../../AMDGPUUsage.rst:2743
#: ../../../AMDGPUUsage.rst:2758 ../../../AMDGPUUsage.rst:2774
#: ../../../AMDGPUUsage.rst:2821 ../../../AMDGPUUsage.rst:2824
#: ../../../AMDGPUUsage.rst:2828 ../../../AMDGPUUsage.rst:2837
#: ../../../AMDGPUUsage.rst:2840 ../../../AMDGPUUsage.rst:5706
msgid "2"
msgstr ""

#: ../../../AMDGPUUsage.rst:332 ../../../AMDGPUUsage.rst:999
msgid "Region (GDS)"
msgstr ""

#: ../../../AMDGPUUsage.rst:333 ../../../AMDGPUUsage.rst:953
#: ../../../AMDGPUUsage.rst:2744 ../../../AMDGPUUsage.rst:2759
#: ../../../AMDGPUUsage.rst:2776 ../../../AMDGPUUsage.rst:5707
#: ../../../AMDGPUUsage.rst:6309
msgid "3"
msgstr ""

#: ../../../AMDGPUUsage.rst:333 ../../../AMDGPUUsage.rst:995
msgid "Local (group/LDS)"
msgstr ""

#: ../../../AMDGPUUsage.rst:334 ../../../AMDGPUUsage.rst:955
#: ../../../AMDGPUUsage.rst:2813 ../../../AMDGPUUsage.rst:5708
msgid "4"
msgstr ""

#: ../../../AMDGPUUsage.rst:334 ../../../AMDGPUUsage.rst:997
#: ../../../AMDGPUUsage.rst:2084
msgid "Constant"
msgstr ""

#: ../../../AMDGPUUsage.rst:335 ../../../AMDGPUUsage.rst:956
#: ../../../AMDGPUUsage.rst:5709
msgid "5"
msgstr ""

#: ../../../AMDGPUUsage.rst:335 ../../../AMDGPUUsage.rst:994
msgid "Private (Scratch)"
msgstr ""

#: ../../../AMDGPUUsage.rst:336 ../../../AMDGPUUsage.rst:957
#: ../../../AMDGPUUsage.rst:2588 ../../../AMDGPUUsage.rst:5711
msgid "6"
msgstr ""

#: ../../../AMDGPUUsage.rst:336
msgid "Constant 32-bit"
msgstr ""

#: ../../../AMDGPUUsage.rst:337 ../../../AMDGPUUsage.rst:959
#: ../../../AMDGPUUsage.rst:2595 ../../../AMDGPUUsage.rst:5713
msgid "7"
msgstr ""

#: ../../../AMDGPUUsage.rst:337
msgid "Buffer Fat Pointer (experimental)"
msgstr ""

#: ../../../AMDGPUUsage.rst:340
msgid ""
"The buffer fat pointer is an experimental address space that is currently "
"unsupported in the backend. It exposes a non-integral pointer that is in "
"future intended to support the modelling of 128-bit buffer descriptors + a "
"32-bit offset into the buffer descriptor (in total encapsulating a 160-bit "
"'pointer'), allowing us to use normal LLVM load/store/atomic operations to "
"model the buffer descriptors used heavily in graphics workloads targeting "
"the backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:350
msgid "Memory Scopes"
msgstr ""

#: ../../../AMDGPUUsage.rst:352
msgid ""
"This section provides LLVM memory synchronization scopes supported by the "
"AMDGPU backend memory model when the target triple OS is ``amdhsa`` (see :"
"ref:`amdgpu-amdhsa-memory-model` and :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:356
msgid ""
"The memory model supported is based on the HSA memory model [HSA]_ which is "
"based in turn on HRF-indirect with scope inclusion [HRF]_. The happens-"
"before relation is transitive over the synchonizes-with relation independent "
"of scope, and synchonizes-with allows the memory scope instances to be "
"inclusive (see table :ref:`amdgpu-amdhsa-llvm-sync-scopes-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:362
msgid ""
"This is different to the OpenCL [OpenCL]_ memory model which does not have "
"scope inclusion and requires the memory scopes to exactly match. However, "
"this is conservatively correct for OpenCL."
msgstr ""

#: ../../../AMDGPUUsage.rst:366
msgid "AMDHSA LLVM Sync Scopes"
msgstr ""

#: ../../../AMDGPUUsage.rst:370
msgid "LLVM Sync Scope"
msgstr ""

#: ../../../AMDGPUUsage.rst:372 ../../../AMDGPUUsage.rst:702
#: ../../../AMDGPUUsage.rst:708 ../../../AMDGPUUsage.rst:709
#: ../../../AMDGPUUsage.rst:710 ../../../AMDGPUUsage.rst:712
#: ../../../AMDGPUUsage.rst:713 ../../../AMDGPUUsage.rst:714
#: ../../../AMDGPUUsage.rst:948 ../../../AMDGPUUsage.rst:3375
#: ../../../AMDGPUUsage.rst:3389 ../../../AMDGPUUsage.rst:3390
#: ../../../AMDGPUUsage.rst:3399 ../../../AMDGPUUsage.rst:3717
#: ../../../AMDGPUUsage.rst:3719 ../../../AMDGPUUsage.rst:3840
#: ../../../AMDGPUUsage.rst:4366 ../../../AMDGPUUsage.rst:4368
#: ../../../AMDGPUUsage.rst:4449 ../../../AMDGPUUsage.rst:4894
#: ../../../AMDGPUUsage.rst:4896 ../../../AMDGPUUsage.rst:5025
#: ../../../AMDGPUUsage.rst:5443 ../../../AMDGPUUsage.rst:5461
#: ../../../AMDGPUUsage.rst:5462 ../../../AMDGPUUsage.rst:5677
msgid "*none*"
msgstr ""

#: ../../../AMDGPUUsage.rst:372
msgid "The default: ``system``."
msgstr ""

#: ../../../AMDGPUUsage.rst:374 ../../../AMDGPUUsage.rst:388
#: ../../../AMDGPUUsage.rst:401 ../../../AMDGPUUsage.rst:412
msgid ""
"Synchronizes with, and participates in modification and seq_cst total "
"orderings with, other operations (except image operations) for all address "
"spaces (except private, or generic that accesses private) provided the other "
"operation's sync scope is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:380
msgid "``system``."
msgstr ""

#: ../../../AMDGPUUsage.rst:381
msgid "``agent`` and executed by a thread on the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:383 ../../../AMDGPUUsage.rst:396
msgid "``workgroup`` and executed by a thread in the same workgroup."
msgstr ""

#: ../../../AMDGPUUsage.rst:385 ../../../AMDGPUUsage.rst:398
#: ../../../AMDGPUUsage.rst:409
msgid "``wavefront`` and executed by a thread in the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:388
msgid "``agent``"
msgstr ""

#: ../../../AMDGPUUsage.rst:394
msgid "``system`` or ``agent`` and executed by a thread on the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:401
msgid "``workgroup``"
msgstr ""

#: ../../../AMDGPUUsage.rst:407
msgid ""
"``system``, ``agent`` or ``workgroup`` and executed by a thread in the same "
"workgroup."
msgstr ""

#: ../../../AMDGPUUsage.rst:412
msgid "``wavefront``"
msgstr ""

#: ../../../AMDGPUUsage.rst:418
msgid ""
"``system``, ``agent``, ``workgroup`` or ``wavefront`` and executed by a "
"thread in the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:422
msgid "``singlethread``"
msgstr ""

#: ../../../AMDGPUUsage.rst:422
msgid ""
"Only synchronizes with, and participates in modification and seq_cst total "
"orderings with, other operations (except image operations) running in the "
"same thread for all address spaces (for example, in signal handlers)."
msgstr ""

#: ../../../AMDGPUUsage.rst:428
msgid "``one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:428
msgid ""
"Same as ``system`` but only synchronizes with other operations within the "
"same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:431
msgid "``agent-one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:431
msgid ""
"Same as ``agent`` but only synchronizes with other operations within the "
"same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:434
msgid "``workgroup-one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:434
msgid ""
"Same as ``workgroup`` but only synchronizes with other operations within the "
"same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:437
msgid "``wavefront-one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:437
msgid ""
"Same as ``wavefront`` but only synchronizes with other operations within the "
"same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:440
msgid "``singlethread-one-as``"
msgstr ""

#: ../../../AMDGPUUsage.rst:440
msgid ""
"Same as ``singlethread`` but only synchronizes with other operations within "
"the same address space."
msgstr ""

#: ../../../AMDGPUUsage.rst:445
msgid "AMDGPU Intrinsics"
msgstr ""

#: ../../../AMDGPUUsage.rst:447
msgid "The AMDGPU backend implements the following LLVM IR intrinsics."
msgstr ""

#: ../../../AMDGPUUsage.rst:449 ../../../AMDGPUUsage.rst:1016
msgid "*This section is WIP.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:455
msgid "AMDGPU Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:457
msgid "The AMDGPU backend supports the following LLVM IR attributes."
msgstr ""

#: ../../../AMDGPUUsage.rst:459
msgid "AMDGPU LLVM IR Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:463
msgid "LLVM Attribute"
msgstr ""

#: ../../../AMDGPUUsage.rst:465
msgid "\"amdgpu-flat-work-group-size\"=\"min,max\""
msgstr ""

#: ../../../AMDGPUUsage.rst:465
msgid ""
"Specify the minimum and maximum flat work group sizes that will be specified "
"when the kernel is dispatched. Generated by the "
"``amdgpu_flat_work_group_size`` CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:468
msgid "\"amdgpu-implicitarg-num-bytes\"=\"n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:468
msgid ""
"Number of kernel argument bytes to add to the kernel argument block size for "
"the implicit arguments. This varies by OS and language (for OpenCL see :ref:"
"`opencl-kernel-implicit-arguments-appended-for-amdhsa-os-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:472
msgid "\"amdgpu-num-sgpr\"=\"n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:472
msgid ""
"Specifies the number of SGPRs to use. Generated by the ``amdgpu_num_sgpr`` "
"CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:474
msgid "\"amdgpu-num-vgpr\"=\"n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:474
msgid ""
"Specifies the number of VGPRs to use. Generated by the ``amdgpu_num_vgpr`` "
"CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:476
msgid "\"amdgpu-waves-per-eu\"=\"m,n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:476
msgid ""
"Specify the minimum and maximum number of waves per execution unit. "
"Generated by the ``amdgpu_waves_per_eu`` CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:479
msgid "\"amdgpu-ieee\" true/false."
msgstr ""

#: ../../../AMDGPUUsage.rst:479
msgid ""
"Specify whether the function expects the IEEE field of the mode register to "
"be set on entry. Overrides the default for the calling convention."
msgstr ""

#: ../../../AMDGPUUsage.rst:482
msgid "\"amdgpu-dx10-clamp\" true/false."
msgstr ""

#: ../../../AMDGPUUsage.rst:482
msgid ""
"Specify whether the function expects the DX10_CLAMP field of the mode "
"register to be set on entry. Overrides the default for the calling "
"convention."
msgstr ""

#: ../../../AMDGPUUsage.rst:488
msgid "Code Object"
msgstr ""

#: ../../../AMDGPUUsage.rst:490
msgid ""
"The AMDGPU backend generates a standard ELF [ELF]_ relocatable code object "
"that can be linked by ``lld`` to produce a standard ELF shared code object "
"which can be loaded and executed on an AMDGPU target."
msgstr ""

#: ../../../AMDGPUUsage.rst:495
msgid "Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:497
msgid "The AMDGPU backend uses the following ELF header:"
msgstr ""

#: ../../../AMDGPUUsage.rst:499
msgid "AMDGPU ELF Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:503 ../../../AMDGPUUsage.rst:946
msgid "Field"
msgstr ""

#: ../../../AMDGPUUsage.rst:503 ../../../AMDGPUUsage.rst:527
#: ../../../AMDGPUUsage.rst:606 ../../../AMDGPUUsage.rst:643
#: ../../../AMDGPUUsage.rst:795 ../../../AMDGPUUsage.rst:836
#: ../../../AMDGPUUsage.rst:946 ../../../AMDGPUUsage.rst:1085
#: ../../../AMDGPUUsage.rst:2739 ../../../AMDGPUUsage.rst:2753
#: ../../../AMDGPUUsage.rst:2768
msgid "Value"
msgstr ""

#: ../../../AMDGPUUsage.rst:505 ../../../AMDGPUUsage.rst:545
msgid "``e_ident[EI_CLASS]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:505
msgid "``ELFCLASS64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:506 ../../../AMDGPUUsage.rst:548
msgid "``e_ident[EI_DATA]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:506
msgid "``ELFDATA2LSB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:507 ../../../AMDGPUUsage.rst:560
msgid "``e_ident[EI_OSABI]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:507 ../../../AMDGPUUsage.rst:530
msgid "``ELFOSABI_NONE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:508 ../../../AMDGPUUsage.rst:531
msgid "``ELFOSABI_AMDGPU_HSA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:509 ../../../AMDGPUUsage.rst:532
msgid "``ELFOSABI_AMDGPU_PAL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:510 ../../../AMDGPUUsage.rst:533
msgid "``ELFOSABI_AMDGPU_MESA3D``"
msgstr ""

#: ../../../AMDGPUUsage.rst:511 ../../../AMDGPUUsage.rst:573
msgid "``e_ident[EI_ABIVERSION]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:511 ../../../AMDGPUUsage.rst:534
msgid "``ELFABIVERSION_AMDGPU_HSA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:512 ../../../AMDGPUUsage.rst:535
msgid "``ELFABIVERSION_AMDGPU_PAL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:513 ../../../AMDGPUUsage.rst:536
msgid "``ELFABIVERSION_AMDGPU_MESA3D``"
msgstr ""

#: ../../../AMDGPUUsage.rst:514 ../../../AMDGPUUsage.rst:586
msgid "``e_type``"
msgstr ""

#: ../../../AMDGPUUsage.rst:514 ../../../AMDGPUUsage.rst:581
msgid "``ET_REL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:515 ../../../AMDGPUUsage.rst:584
msgid "``ET_DYN``"
msgstr ""

#: ../../../AMDGPUUsage.rst:516 ../../../AMDGPUUsage.rst:593
msgid "``e_machine``"
msgstr ""

#: ../../../AMDGPUUsage.rst:516 ../../../AMDGPUUsage.rst:529
msgid "``EM_AMDGPU``"
msgstr ""

#: ../../../AMDGPUUsage.rst:517 ../../../AMDGPUUsage.rst:597
msgid "``e_entry``"
msgstr ""

#: ../../../AMDGPUUsage.rst:518 ../../../AMDGPUUsage.rst:687
msgid "``e_flags``"
msgstr ""

#: ../../../AMDGPUUsage.rst:518
msgid "See :ref:`amdgpu-elf-header-e_flags-table`"
msgstr ""

#: ../../../AMDGPUUsage.rst:523
msgid "AMDGPU ELF Header Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:527 ../../../AMDGPUUsage.rst:606
#: ../../../AMDGPUUsage.rst:643 ../../../AMDGPUUsage.rst:698
#: ../../../AMDGPUUsage.rst:784 ../../../AMDGPUUsage.rst:795
#: ../../../AMDGPUUsage.rst:824 ../../../AMDGPUUsage.rst:836
#: ../../../AMDGPUUsage.rst:859
msgid "Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:529
msgid "224"
msgstr ""

#: ../../../AMDGPUUsage.rst:531 ../../../AMDGPUUsage.rst:2083
#: ../../../AMDGPUUsage.rst:2084 ../../../AMDGPUUsage.rst:2086
msgid "64"
msgstr ""

#: ../../../AMDGPUUsage.rst:532
msgid "65"
msgstr ""

#: ../../../AMDGPUUsage.rst:533
msgid "66"
msgstr ""

#: ../../../AMDGPUUsage.rst:540
msgid "The ELF class is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:542
msgid "``ELFCLASS32`` for ``r600`` architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:544
msgid ""
"``ELFCLASS64`` for ``amdgcn`` architecture which only supports 64 bit "
"applications."
msgstr ""

#: ../../../AMDGPUUsage.rst:548
msgid "All AMDGPU targets use ``ELFDATA2LSB`` for little-endian byte ordering."
msgstr ""

#: ../../../AMDGPUUsage.rst:551
msgid ""
"One of the following AMD GPU architecture specific OS ABIs (see :ref:`amdgpu-"
"os-table`):"
msgstr ""

#: ../../../AMDGPUUsage.rst:554
msgid "``ELFOSABI_NONE`` for *unknown* OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:556
msgid "``ELFOSABI_AMDGPU_HSA`` for ``amdhsa`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:558
msgid "``ELFOSABI_AMDGPU_PAL`` for ``amdpal`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:560
msgid "``ELFOSABI_AMDGPU_MESA3D`` for ``mesa3D`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:563
msgid ""
"The ABI version of the AMD GPU architecture specific OS ABI to which the "
"code object conforms:"
msgstr ""

#: ../../../AMDGPUUsage.rst:566
msgid ""
"``ELFABIVERSION_AMDGPU_HSA`` is used to specify the version of AMD HSA "
"runtime ABI."
msgstr ""

#: ../../../AMDGPUUsage.rst:569
msgid ""
"``ELFABIVERSION_AMDGPU_PAL`` is used to specify the version of AMD PAL "
"runtime ABI."
msgstr ""

#: ../../../AMDGPUUsage.rst:572
msgid ""
"``ELFABIVERSION_AMDGPU_MESA3D`` is used to specify the version of AMD MESA "
"3D runtime ABI."
msgstr ""

#: ../../../AMDGPUUsage.rst:576
msgid "Can be one of the following values:"
msgstr ""

#: ../../../AMDGPUUsage.rst:580
msgid ""
"The type produced by the AMD GPU backend compiler as it is relocatable code "
"object."
msgstr ""

#: ../../../AMDGPUUsage.rst:584
msgid "The type produced by the linker as it is a shared code object."
msgstr ""

#: ../../../AMDGPUUsage.rst:586
msgid "The AMD HSA runtime loader requires a ``ET_DYN`` code object."
msgstr ""

#: ../../../AMDGPUUsage.rst:589
msgid ""
"The value ``EM_AMDGPU`` is used for the machine for all processors supported "
"by the ``r600`` and ``amdgcn`` architectures (see :ref:`amdgpu-processor-"
"table`). The specific processor is specified in the ``EF_AMDGPU_MACH`` bit "
"field of the ``e_flags`` (see :ref:`amdgpu-elf-header-e_flags-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:596
msgid ""
"The entry point is 0 as the entry points for individual kernels must be "
"selected in order to invoke them through AQL packets."
msgstr ""

#: ../../../AMDGPUUsage.rst:600
msgid "The AMDGPU backend uses the following ELF header flags:"
msgstr ""

#: ../../../AMDGPUUsage.rst:602
msgid "AMDGPU ELF Header ``e_flags``"
msgstr ""

#: ../../../AMDGPUUsage.rst:608
msgid "**AMDGPU Processor Flag**"
msgstr ""

#: ../../../AMDGPUUsage.rst:608
msgid "See :ref:`amdgpu-processor-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:610
msgid "``EF_AMDGPU_MACH``"
msgstr ""

#: ../../../AMDGPUUsage.rst:610
msgid "0x000000ff"
msgstr ""

#: ../../../AMDGPUUsage.rst:610
msgid ""
"AMDGPU processor selection mask for ``EF_AMDGPU_MACH_xxx`` values defined "
"in :ref:`amdgpu-ef-amdgpu-mach-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:615
msgid "``EF_AMDGPU_XNACK``"
msgstr ""

#: ../../../AMDGPUUsage.rst:615
msgid "0x00000100"
msgstr ""

#: ../../../AMDGPUUsage.rst:615
msgid ""
"Indicates if the ``xnack`` target feature is enabled for all code contained "
"in the code object. If the processor does not support the ``xnack`` target "
"feature then must be 0. See :ref:`amdgpu-target-features`."
msgstr ""

#: ../../../AMDGPUUsage.rst:626
msgid "``EF_AMDGPU_SRAM_ECC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:626
msgid "0x00000200"
msgstr ""

#: ../../../AMDGPUUsage.rst:626
msgid ""
"Indicates if the ``sram-ecc`` target feature is enabled for all code "
"contained in the code object. If the processor does not support the ``sram-"
"ecc`` target feature then must be 0. See :ref:`amdgpu-target-features`."
msgstr ""

#: ../../../AMDGPUUsage.rst:639
msgid "AMDGPU ``EF_AMDGPU_MACH`` Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:643
msgid "Description (see :ref:`amdgpu-processor-table`)"
msgstr ""

#: ../../../AMDGPUUsage.rst:646
msgid "``EF_AMDGPU_MACH_NONE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:646
msgid "0x000"
msgstr ""

#: ../../../AMDGPUUsage.rst:646
msgid "*not specified*"
msgstr ""

#: ../../../AMDGPUUsage.rst:647
msgid "``EF_AMDGPU_MACH_R600_R600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:647
msgid "0x001"
msgstr ""

#: ../../../AMDGPUUsage.rst:648
msgid "``EF_AMDGPU_MACH_R600_R630``"
msgstr ""

#: ../../../AMDGPUUsage.rst:648
msgid "0x002"
msgstr ""

#: ../../../AMDGPUUsage.rst:649
msgid "``EF_AMDGPU_MACH_R600_RS880``"
msgstr ""

#: ../../../AMDGPUUsage.rst:649
msgid "0x003"
msgstr ""

#: ../../../AMDGPUUsage.rst:650
msgid "``EF_AMDGPU_MACH_R600_RV670``"
msgstr ""

#: ../../../AMDGPUUsage.rst:650
msgid "0x004"
msgstr ""

#: ../../../AMDGPUUsage.rst:651
msgid "``EF_AMDGPU_MACH_R600_RV710``"
msgstr ""

#: ../../../AMDGPUUsage.rst:651
msgid "0x005"
msgstr ""

#: ../../../AMDGPUUsage.rst:652
msgid "``EF_AMDGPU_MACH_R600_RV730``"
msgstr ""

#: ../../../AMDGPUUsage.rst:652
msgid "0x006"
msgstr ""

#: ../../../AMDGPUUsage.rst:653
msgid "``EF_AMDGPU_MACH_R600_RV770``"
msgstr ""

#: ../../../AMDGPUUsage.rst:653
msgid "0x007"
msgstr ""

#: ../../../AMDGPUUsage.rst:654
msgid "``EF_AMDGPU_MACH_R600_CEDAR``"
msgstr ""

#: ../../../AMDGPUUsage.rst:654
msgid "0x008"
msgstr ""

#: ../../../AMDGPUUsage.rst:655
msgid "``EF_AMDGPU_MACH_R600_CYPRESS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:655
msgid "0x009"
msgstr ""

#: ../../../AMDGPUUsage.rst:656
msgid "``EF_AMDGPU_MACH_R600_JUNIPER``"
msgstr ""

#: ../../../AMDGPUUsage.rst:656
msgid "0x00a"
msgstr ""

#: ../../../AMDGPUUsage.rst:657
msgid "``EF_AMDGPU_MACH_R600_REDWOOD``"
msgstr ""

#: ../../../AMDGPUUsage.rst:657
msgid "0x00b"
msgstr ""

#: ../../../AMDGPUUsage.rst:658
msgid "``EF_AMDGPU_MACH_R600_SUMO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:658
msgid "0x00c"
msgstr ""

#: ../../../AMDGPUUsage.rst:659
msgid "``EF_AMDGPU_MACH_R600_BARTS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:659
msgid "0x00d"
msgstr ""

#: ../../../AMDGPUUsage.rst:660
msgid "``EF_AMDGPU_MACH_R600_CAICOS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:660
msgid "0x00e"
msgstr ""

#: ../../../AMDGPUUsage.rst:661
msgid "``EF_AMDGPU_MACH_R600_CAYMAN``"
msgstr ""

#: ../../../AMDGPUUsage.rst:661
msgid "0x00f"
msgstr ""

#: ../../../AMDGPUUsage.rst:662
msgid "``EF_AMDGPU_MACH_R600_TURKS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:662
msgid "0x010"
msgstr ""

#: ../../../AMDGPUUsage.rst:663 ../../../AMDGPUUsage.rst:672
#: ../../../AMDGPUUsage.rst:683 ../../../AMDGPUUsage.rst:797
#: ../../../AMDGPUUsage.rst:799 ../../../AMDGPUUsage.rst:838
#: ../../../AMDGPUUsage.rst:964
msgid "*reserved*"
msgstr ""

#: ../../../AMDGPUUsage.rst:663
msgid "0x011 - 0x01f"
msgstr ""

#: ../../../AMDGPUUsage.rst:663
msgid "Reserved for ``r600`` architecture processors."
msgstr ""

#: ../../../AMDGPUUsage.rst:665
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:665
msgid "0x020"
msgstr ""

#: ../../../AMDGPUUsage.rst:666
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX601``"
msgstr ""

#: ../../../AMDGPUUsage.rst:666
msgid "0x021"
msgstr ""

#: ../../../AMDGPUUsage.rst:667
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX700``"
msgstr ""

#: ../../../AMDGPUUsage.rst:667
msgid "0x022"
msgstr ""

#: ../../../AMDGPUUsage.rst:668
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX701``"
msgstr ""

#: ../../../AMDGPUUsage.rst:668
msgid "0x023"
msgstr ""

#: ../../../AMDGPUUsage.rst:669
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX702``"
msgstr ""

#: ../../../AMDGPUUsage.rst:669
msgid "0x024"
msgstr ""

#: ../../../AMDGPUUsage.rst:670
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX703``"
msgstr ""

#: ../../../AMDGPUUsage.rst:670
msgid "0x025"
msgstr ""

#: ../../../AMDGPUUsage.rst:671
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX704``"
msgstr ""

#: ../../../AMDGPUUsage.rst:671
msgid "0x026"
msgstr ""

#: ../../../AMDGPUUsage.rst:672
msgid "0x027"
msgstr ""

#: ../../../AMDGPUUsage.rst:672 ../../../AMDGPUUsage.rst:683
#: ../../../AMDGPUUsage.rst:5528 ../../../AMDGPUUsage.rst:5529
#: ../../../AMDGPUUsage.rst:5530 ../../../AMDGPUUsage.rst:5533
#: ../../../AMDGPUUsage.rst:5534 ../../../AMDGPUUsage.rst:5535
msgid "Reserved."
msgstr ""

#: ../../../AMDGPUUsage.rst:673
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX801``"
msgstr ""

#: ../../../AMDGPUUsage.rst:673
msgid "0x028"
msgstr ""

#: ../../../AMDGPUUsage.rst:674
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX802``"
msgstr ""

#: ../../../AMDGPUUsage.rst:674
msgid "0x029"
msgstr ""

#: ../../../AMDGPUUsage.rst:675
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX803``"
msgstr ""

#: ../../../AMDGPUUsage.rst:675
msgid "0x02a"
msgstr ""

#: ../../../AMDGPUUsage.rst:676
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX810``"
msgstr ""

#: ../../../AMDGPUUsage.rst:676
msgid "0x02b"
msgstr ""

#: ../../../AMDGPUUsage.rst:677
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX900``"
msgstr ""

#: ../../../AMDGPUUsage.rst:677
msgid "0x02c"
msgstr ""

#: ../../../AMDGPUUsage.rst:678
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX902``"
msgstr ""

#: ../../../AMDGPUUsage.rst:678
msgid "0x02d"
msgstr ""

#: ../../../AMDGPUUsage.rst:679
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX904``"
msgstr ""

#: ../../../AMDGPUUsage.rst:679
msgid "0x02e"
msgstr ""

#: ../../../AMDGPUUsage.rst:680
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX906``"
msgstr ""

#: ../../../AMDGPUUsage.rst:680
msgid "0x02f"
msgstr ""

#: ../../../AMDGPUUsage.rst:681
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX908``"
msgstr ""

#: ../../../AMDGPUUsage.rst:681
msgid "0x030"
msgstr ""

#: ../../../AMDGPUUsage.rst:682
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX909``"
msgstr ""

#: ../../../AMDGPUUsage.rst:682
msgid "0x031"
msgstr ""

#: ../../../AMDGPUUsage.rst:683
msgid "0x032"
msgstr ""

#: ../../../AMDGPUUsage.rst:684
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1010``"
msgstr ""

#: ../../../AMDGPUUsage.rst:684
msgid "0x033"
msgstr ""

#: ../../../AMDGPUUsage.rst:685
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1011``"
msgstr ""

#: ../../../AMDGPUUsage.rst:685
msgid "0x034"
msgstr ""

#: ../../../AMDGPUUsage.rst:686
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX1012``"
msgstr ""

#: ../../../AMDGPUUsage.rst:686
msgid "0x035"
msgstr ""

#: ../../../AMDGPUUsage.rst:690
msgid "Sections"
msgstr ""

#: ../../../AMDGPUUsage.rst:692
msgid ""
"An AMDGPU target ELF code object has the standard ELF sections which include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:694
msgid "AMDGPU ELF Sections"
msgstr ""

#: ../../../AMDGPUUsage.rst:698 ../../../AMDGPUUsage.rst:784
#: ../../../AMDGPUUsage.rst:824 ../../../AMDGPUUsage.rst:859
msgid "Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:698
msgid "Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:700 ../../../AMDGPUUsage.rst:863
msgid "``.bss``"
msgstr ""

#: ../../../AMDGPUUsage.rst:700
msgid "``SHT_NOBITS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:700 ../../../AMDGPUUsage.rst:701
#: ../../../AMDGPUUsage.rst:706
msgid "``SHF_ALLOC`` + ``SHF_WRITE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:701 ../../../AMDGPUUsage.rst:861
msgid "``.data``"
msgstr ""

#: ../../../AMDGPUUsage.rst:701 ../../../AMDGPUUsage.rst:702
#: ../../../AMDGPUUsage.rst:704 ../../../AMDGPUUsage.rst:705
#: ../../../AMDGPUUsage.rst:706 ../../../AMDGPUUsage.rst:711
#: ../../../AMDGPUUsage.rst:715
msgid "``SHT_PROGBITS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:702
msgid "``.debug_``\\ *\\**"
msgstr ""

#: ../../../AMDGPUUsage.rst:703
msgid "``.dynamic``"
msgstr ""

#: ../../../AMDGPUUsage.rst:703
msgid "``SHT_DYNAMIC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:703 ../../../AMDGPUUsage.rst:704
#: ../../../AMDGPUUsage.rst:705 ../../../AMDGPUUsage.rst:707
#: ../../../AMDGPUUsage.rst:711
msgid "``SHF_ALLOC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:704
msgid "``.dynstr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:705
msgid "``.dynsym``"
msgstr ""

#: ../../../AMDGPUUsage.rst:706
msgid "``.got``"
msgstr ""

#: ../../../AMDGPUUsage.rst:707
msgid "``.hash``"
msgstr ""

#: ../../../AMDGPUUsage.rst:707
msgid "``SHT_HASH``"
msgstr ""

#: ../../../AMDGPUUsage.rst:708 ../../../AMDGPUUsage.rst:730
msgid "``.note``"
msgstr ""

#: ../../../AMDGPUUsage.rst:708
msgid "``SHT_NOTE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:709
msgid "``.rela``\\ *name*"
msgstr ""

#: ../../../AMDGPUUsage.rst:709 ../../../AMDGPUUsage.rst:710
msgid "``SHT_RELA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:710
msgid "``.rela.dyn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:711 ../../../AMDGPUUsage.rst:862
#: ../../../AMDGPUUsage.rst:864
msgid "``.rodata``"
msgstr ""

#: ../../../AMDGPUUsage.rst:712
msgid "``.shstrtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:712 ../../../AMDGPUUsage.rst:713
msgid "``SHT_STRTAB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:713
msgid "``.strtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:714
msgid "``.symtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:714
msgid "``SHT_SYMTAB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:715 ../../../AMDGPUUsage.rst:746
#: ../../../AMDGPUUsage.rst:865
msgid "``.text``"
msgstr ""

#: ../../../AMDGPUUsage.rst:715
msgid "``SHF_ALLOC`` + ``SHF_EXECINSTR``"
msgstr ""

#: ../../../AMDGPUUsage.rst:718
msgid ""
"These sections have their standard meanings (see [ELF]_) and are only "
"generated if needed."
msgstr ""

#: ../../../AMDGPUUsage.rst:723
msgid "``.debug``\\ *\\**"
msgstr ""

#: ../../../AMDGPUUsage.rst:722
msgid ""
"The standard DWARF sections. See :ref:`amdgpu-dwarf` for information on the "
"DWARF produced by the AMDGPU backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:726
msgid "``.dynamic``, ``.dynstr``, ``.dynsym``, ``.hash``"
msgstr ""

#: ../../../AMDGPUUsage.rst:726
msgid "The standard sections used by a dynamic loader."
msgstr ""

#: ../../../AMDGPUUsage.rst:729
msgid ""
"See :ref:`amdgpu-note-records` for the note records supported by the AMDGPU "
"backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:741
msgid "``.rela``\\ *name*, ``.rela.dyn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:733
msgid ""
"For relocatable code objects, *name* is the name of the section that the "
"relocation records apply. For example, ``.rela.text`` is the section name "
"for relocation records associated with the ``.text`` section."
msgstr ""

#: ../../../AMDGPUUsage.rst:737
msgid ""
"For linked shared code objects, ``.rela.dyn`` contains all the relocation "
"records from each of the relocatable code object's ``.rela``\\ *name* "
"sections."
msgstr ""

#: ../../../AMDGPUUsage.rst:740
msgid ""
"See :ref:`amdgpu-relocation-records` for the relocation records supported by "
"the AMDGPU backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:744
msgid ""
"The executable machine code for the kernels and functions they call. "
"Generated as position independent code. See :ref:`amdgpu-code-conventions` "
"for information on conventions used in the isa generation."
msgstr ""

#: ../../../AMDGPUUsage.rst:751
msgid "Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:753
msgid ""
"The AMDGPU backend code object contains ELF note records in the ``.note`` "
"section. The set of generated notes and their semantics depend on the code "
"object version; see :ref:`amdgpu-note-records-v2` and :ref:`amdgpu-note-"
"records-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:758
msgid ""
"As required by ``ELFCLASS32`` and ``ELFCLASS64``, minimal zero byte padding "
"must be generated after the ``name`` field to ensure the ``desc`` field is 4 "
"byte aligned. In addition, minimal zero byte padding must be generated to "
"ensure the ``desc`` field size is a multiple of 4 bytes. The "
"``sh_addralign`` field of the ``.note`` section must be at least 4 to "
"indicate at least 8 byte alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:768
msgid "Code Object V2 Note Records (-mattr=-code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:770
msgid ""
"Code Object V2 is not the default code object version emitted by this "
"version of LLVM. For a description of the notes generated with the default "
"configuration (Code Object V3) see :ref:`amdgpu-note-records-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:774
msgid ""
"The AMDGPU backend code object uses the following ELF note record in the ``."
"note`` section when compiling for Code Object V2 (-mattr=-code-object-v3)."
msgstr ""

#: ../../../AMDGPUUsage.rst:777 ../../../AMDGPUUsage.rst:817
msgid ""
"Additional note records may be present, but any which are not documented "
"here are deprecated and should not be used."
msgstr ""

#: ../../../AMDGPUUsage.rst:780
msgid "AMDGPU Code Object V2 ELF Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:786
msgid "\"AMD\""
msgstr ""

#: ../../../AMDGPUUsage.rst:786 ../../../AMDGPUUsage.rst:798
#: ../../../AMDGPUUsage.rst:807
msgid "``NT_AMD_AMDGPU_HSA_METADATA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:786
msgid "<metadata null terminated string>"
msgstr ""

#: ../../../AMDGPUUsage.rst:791
msgid "AMDGPU Code Object V2 ELF Note Record Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:797
msgid "0-9"
msgstr ""

#: ../../../AMDGPUUsage.rst:798 ../../../AMDGPUUsage.rst:962
#: ../../../AMDGPUUsage.rst:2619
msgid "10"
msgstr ""

#: ../../../AMDGPUUsage.rst:799 ../../../AMDGPUUsage.rst:963
msgid "11"
msgstr ""

#: ../../../AMDGPUUsage.rst:803
msgid ""
"Specifies extensible metadata associated with the code objects executed on "
"HSA [HSA]_ compatible runtimes such as AMD's ROCm [AMD-ROCm]_. It is "
"required when the target triple OS is ``amdhsa`` (see :ref:`amdgpu-target-"
"triples`). See :ref:`amdgpu-amdhsa-code-object-metadata-v2` for the syntax "
"of the code object metadata string."
msgstr ""

#: ../../../AMDGPUUsage.rst:812
msgid "Code Object V3 Note Records (-mattr=+code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:814
msgid ""
"The AMDGPU backend code object uses the following ELF note record in the ``."
"note`` section when compiling for Code Object V3 (-mattr=+code-object-v3)."
msgstr ""

#: ../../../AMDGPUUsage.rst:820
msgid "AMDGPU Code Object V3 ELF Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:826
msgid "\"AMDGPU\""
msgstr ""

#: ../../../AMDGPUUsage.rst:826 ../../../AMDGPUUsage.rst:839
#: ../../../AMDGPUUsage.rst:846
msgid "``NT_AMDGPU_METADATA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:826
msgid "Metadata in Message Pack [MsgPack]_ binary format."
msgstr ""

#: ../../../AMDGPUUsage.rst:832
msgid "AMDGPU Code Object V3 ELF Note Record Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:838
msgid "0-31"
msgstr ""

#: ../../../AMDGPUUsage.rst:839 ../../../AMDGPUUsage.rst:2081
#: ../../../AMDGPUUsage.rst:2082 ../../../AMDGPUUsage.rst:2087
#: ../../../AMDGPUUsage.rst:2562 ../../../AMDGPUUsage.rst:2715
#: ../../../AMDGPUUsage.rst:2730
msgid "32"
msgstr ""

#: ../../../AMDGPUUsage.rst:843
msgid ""
"Specifies extensible metadata associated with an AMDGPU code object. It is "
"encoded as a map in the Message Pack [MsgPack]_ binary data format. See :ref:"
"`amdgpu-amdhsa-code-object-metadata-v3` for the map keys defined for the "
"``amdhsa`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:851
msgid "Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:853
msgid "Symbols include the following:"
msgstr ""

#: ../../../AMDGPUUsage.rst:855
msgid "AMDGPU ELF Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:859
msgid "Section"
msgstr ""

#: ../../../AMDGPUUsage.rst:861 ../../../AMDGPUUsage.rst:865
#: ../../../AMDGPUUsage.rst:866
msgid "*link-name*"
msgstr ""

#: ../../../AMDGPUUsage.rst:861 ../../../AMDGPUUsage.rst:864
#: ../../../AMDGPUUsage.rst:866
msgid "``STT_OBJECT``"
msgstr ""

#: ../../../AMDGPUUsage.rst:861 ../../../AMDGPUUsage.rst:886
msgid "Global variable"
msgstr ""

#: ../../../AMDGPUUsage.rst:864
msgid "*link-name*\\ ``.kd``"
msgstr ""

#: ../../../AMDGPUUsage.rst:864 ../../../AMDGPUUsage.rst:892
msgid "Kernel descriptor"
msgstr ""

#: ../../../AMDGPUUsage.rst:865
msgid "``STT_FUNC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:865 ../../../AMDGPUUsage.rst:895
msgid "Kernel entry point"
msgstr ""

#: ../../../AMDGPUUsage.rst:866
msgid "SHN_AMDGPU_LDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:866
msgid "Global variable in LDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:870
msgid "Global variables both used and defined by the compilation unit."
msgstr ""

#: ../../../AMDGPUUsage.rst:872
msgid ""
"If the symbol is defined in the compilation unit then it is allocated in the "
"appropriate section according to if it has initialized data or is readonly."
msgstr ""

#: ../../../AMDGPUUsage.rst:875
msgid ""
"If the symbol is external then its section is ``STN_UNDEF`` and the loader "
"will resolve relocations using the definition provided by another code "
"object or explicitly defined by the runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:879
msgid ""
"If the symbol resides in local/group memory (LDS) then its section is the "
"special processor-specific section name ``SHN_AMDGPU_LDS``, and the "
"``st_value`` field describes alignment requirements as it does for common "
"symbols."
msgstr ""

#: ../../../AMDGPUUsage.rst:889
msgid ""
"Every HSA kernel has an associated kernel descriptor. It is the address of "
"the kernel descriptor that is used in the AQL dispatch packet used to invoke "
"the kernel, not the kernel entry point. The layout of the HSA kernel "
"descriptor is defined in :ref:`amdgpu-amdhsa-kernel-descriptor`."
msgstr ""

#: ../../../AMDGPUUsage.rst:895
msgid "Every HSA kernel also has a symbol for its machine code entry point."
msgstr ""

#: ../../../AMDGPUUsage.rst:900
msgid "Relocation Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:902
msgid ""
"AMDGPU backend generates ``Elf64_Rela`` relocation records. Supported "
"relocatable fields are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:908 ../../../AMDGPUUsage.rst:949
#: ../../../AMDGPUUsage.rst:951 ../../../AMDGPUUsage.rst:955
#: ../../../AMDGPUUsage.rst:957 ../../../AMDGPUUsage.rst:959
#: ../../../AMDGPUUsage.rst:960 ../../../AMDGPUUsage.rst:961
#: ../../../AMDGPUUsage.rst:962 ../../../AMDGPUUsage.rst:963
msgid "``word32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:906
msgid ""
"This specifies a 32-bit field occupying 4 bytes with arbitrary byte "
"alignment. These values use the same byte order as other word values in the "
"AMD GPU architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:913 ../../../AMDGPUUsage.rst:953
#: ../../../AMDGPUUsage.rst:956 ../../../AMDGPUUsage.rst:965
msgid "``word64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:911
msgid ""
"This specifies a 64-bit field occupying 8 bytes with arbitrary byte "
"alignment. These values use the same byte order as other word values in the "
"AMD GPU architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:915
msgid "Following notations are used for specifying relocation calculations:"
msgstr ""

#: ../../../AMDGPUUsage.rst:918
msgid "**A**"
msgstr ""

#: ../../../AMDGPUUsage.rst:918
msgid ""
"Represents the addend used to compute the value of the relocatable field."
msgstr ""

#: ../../../AMDGPUUsage.rst:922
msgid "**G**"
msgstr ""

#: ../../../AMDGPUUsage.rst:921
msgid ""
"Represents the offset into the global offset table at which the relocation "
"entry's symbol will reside during execution."
msgstr ""

#: ../../../AMDGPUUsage.rst:925
msgid "**GOT**"
msgstr ""

#: ../../../AMDGPUUsage.rst:925
msgid "Represents the address of the global offset table."
msgstr ""

#: ../../../AMDGPUUsage.rst:929
msgid "**P**"
msgstr ""

#: ../../../AMDGPUUsage.rst:928
msgid ""
"Represents the place (section offset for ``et_rel`` or address for "
"``et_dyn``) of the storage unit being relocated (computed using "
"``r_offset``)."
msgstr ""

#: ../../../AMDGPUUsage.rst:933
msgid "**S**"
msgstr ""

#: ../../../AMDGPUUsage.rst:932
msgid ""
"Represents the value of the symbol whose index resides in the relocation "
"entry. Relocations not using this must specify a symbol index of "
"``STN_UNDEF``."
msgstr ""

#: ../../../AMDGPUUsage.rst:938
msgid "**B**"
msgstr ""

#: ../../../AMDGPUUsage.rst:936
msgid ""
"Represents the base address of a loaded executable or shared object which is "
"the difference between the ELF address and the actual load address. "
"Relocations using this are only valid in executable or shared objects."
msgstr ""

#: ../../../AMDGPUUsage.rst:940
msgid "The following relocation types are supported:"
msgstr ""

#: ../../../AMDGPUUsage.rst:942
msgid "AMDGPU ELF Relocation Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:946
msgid "Relocation Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:946
msgid "Kind"
msgstr ""

#: ../../../AMDGPUUsage.rst:946
msgid "Calculation"
msgstr ""

#: ../../../AMDGPUUsage.rst:948
msgid "``R_AMDGPU_NONE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:949
msgid "``R_AMDGPU_ABS32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:949 ../../../AMDGPUUsage.rst:951
#: ../../../AMDGPUUsage.rst:953 ../../../AMDGPUUsage.rst:957
msgid "Static, Dynamic"
msgstr ""

#: ../../../AMDGPUUsage.rst:949
msgid "(S + A) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:951
msgid "``R_AMDGPU_ABS32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:951
msgid "(S + A) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:953
msgid "``R_AMDGPU_ABS64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:953 ../../../AMDGPUUsage.rst:957
msgid "S + A"
msgstr ""

#: ../../../AMDGPUUsage.rst:955
msgid "``R_AMDGPU_REL32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:955 ../../../AMDGPUUsage.rst:956
#: ../../../AMDGPUUsage.rst:959 ../../../AMDGPUUsage.rst:960
#: ../../../AMDGPUUsage.rst:961 ../../../AMDGPUUsage.rst:962
#: ../../../AMDGPUUsage.rst:963
msgid "Static"
msgstr ""

#: ../../../AMDGPUUsage.rst:955 ../../../AMDGPUUsage.rst:956
msgid "S + A - P"
msgstr ""

#: ../../../AMDGPUUsage.rst:956
msgid "``R_AMDGPU_REL64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:957
msgid "``R_AMDGPU_ABS32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:959
msgid "``R_AMDGPU_GOTPCREL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:959
msgid "G + GOT + A - P"
msgstr ""

#: ../../../AMDGPUUsage.rst:960
msgid "``R_AMDGPU_GOTPCREL32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:960 ../../../AMDGPUUsage.rst:2603
#: ../../../AMDGPUUsage.rst:5705 ../../../AMDGPUUsage.rst:5706
#: ../../../AMDGPUUsage.rst:5707 ../../../AMDGPUUsage.rst:5708
#: ../../../AMDGPUUsage.rst:5709 ../../../AMDGPUUsage.rst:5711
#: ../../../AMDGPUUsage.rst:5713
msgid "8"
msgstr ""

#: ../../../AMDGPUUsage.rst:960
msgid "(G + GOT + A - P) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:961
msgid "``R_AMDGPU_GOTPCREL32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:961 ../../../AMDGPUUsage.rst:2611
msgid "9"
msgstr ""

#: ../../../AMDGPUUsage.rst:961
msgid "(G + GOT + A - P) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:962
msgid "``R_AMDGPU_REL32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:962
msgid "(S + A - P) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:963
msgid "``R_AMDGPU_REL32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:963
msgid "(S + A - P) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:964 ../../../AMDGPUUsage.rst:5575
msgid "12"
msgstr ""

#: ../../../AMDGPUUsage.rst:965
msgid "``R_AMDGPU_RELATIVE64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:965
msgid "Dynamic"
msgstr ""

#: ../../../AMDGPUUsage.rst:965 ../../../AMDGPUUsage.rst:2634
msgid "13"
msgstr ""

#: ../../../AMDGPUUsage.rst:965
msgid "B + A"
msgstr ""

#: ../../../AMDGPUUsage.rst:968
msgid ""
"``R_AMDGPU_ABS32_LO`` and ``R_AMDGPU_ABS32_HI`` are only supported by the "
"``mesa3d`` OS, which does not support ``R_AMDGPU_ABS64``."
msgstr ""

#: ../../../AMDGPUUsage.rst:971
msgid ""
"There is no current OS loader support for 32 bit programs and so "
"``R_AMDGPU_ABS32`` is not used."
msgstr ""

#: ../../../AMDGPUUsage.rst:977
msgid "DWARF"
msgstr ""

#: ../../../AMDGPUUsage.rst:979
msgid ""
"Standard DWARF [DWARF]_ Version 5 sections can be generated. These contain "
"information that maps the code object executable code and data to the source "
"language constructs. It can be used by tools such as debuggers and profilers."
msgstr ""

#: ../../../AMDGPUUsage.rst:986
msgid "The following address space mapping is used:"
msgstr ""

#: ../../../AMDGPUUsage.rst:988
msgid "AMDGPU DWARF Address Space Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:992
msgid "DWARF Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:996 ../../../AMDGPUUsage.rst:997
#: ../../../AMDGPUUsage.rst:998
msgid "*omitted*"
msgstr ""

#: ../../../AMDGPUUsage.rst:999
msgid "*not supported*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1002
msgid ""
"See :ref:`amdgpu-address-spaces` for information on the memory space "
"terminology used in the table."
msgstr ""

#: ../../../AMDGPUUsage.rst:1005
msgid ""
"An ``address_class`` attribute is generated on pointer type DIEs to specify "
"the DWARF address space of the value of the pointer when it is in the "
"*private* or *local* address space. Otherwise the attribute is omitted."
msgstr ""

#: ../../../AMDGPUUsage.rst:1009
msgid ""
"An ``XDEREF`` operation is generated in location list expressions for "
"variables that are allocated in the *private* and *local* address space. "
"Otherwise no ``XDREF`` is omitted."
msgstr ""

#: ../../../AMDGPUUsage.rst:1014
msgid "Register Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:1033
msgid "Source Text"
msgstr ""

#: ../../../AMDGPUUsage.rst:1035
msgid ""
"Source text for online-compiled programs (e.g. those compiled by the OpenCL "
"runtime) may be embedded into the DWARF v5 line table using the ``clang -"
"gembed-source`` option, described in table :ref:`amdgpu-debug-options`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1041
msgid "``-gembed-source``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1042
msgid "Enable the embedded source DWARF v5 extension."
msgstr ""

#: ../../../AMDGPUUsage.rst:1056
msgid "``-gno-embed-source``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1044
msgid "Disable the embedded source DWARF v5 extension."
msgstr ""

#: ../../../AMDGPUUsage.rst:1046
msgid "AMDGPU Debug Options"
msgstr ""

#: ../../../AMDGPUUsage.rst:1050
msgid "Debug Flag"
msgstr ""

#: ../../../AMDGPUUsage.rst:1052
msgid "-g[no-]embed-source"
msgstr ""

#: ../../../AMDGPUUsage.rst:1052
msgid ""
"Enable/disable embedding source text in DWARF debug sections. Useful for "
"environments where source cannot be written to disk, such as when performing "
"online compilation."
msgstr ""

#: ../../../AMDGPUUsage.rst:1058
msgid ""
"This option enables one extended content types in the DWARF v5 Line Number "
"Program Header, which is used to encode embedded source."
msgstr ""

#: ../../../AMDGPUUsage.rst:1061
msgid "AMDGPU DWARF Line Number Program Header Extended Content Types"
msgstr ""

#: ../../../AMDGPUUsage.rst:1065 ../../../AMDGPUUsage.rst:1085
msgid "Content Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:1065
msgid "Form"
msgstr ""

#: ../../../AMDGPUUsage.rst:1067 ../../../AMDGPUUsage.rst:1087
msgid "``DW_LNCT_LLVM_source``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1067
msgid "``DW_FORM_line_strp``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1070
msgid ""
"The source field will contain the UTF-8 encoded, null-terminated source text "
"with ``'\\n'`` line endings. When the source field is present, consumers can "
"use the embedded source instead of attempting to discover the source on "
"disk. When the source field is absent, consumers can access the file to get "
"the source text."
msgstr ""

#: ../../../AMDGPUUsage.rst:1076
msgid ""
"The above content type appears in the ``file_name_entry_format`` field of "
"the line table prologue, and its corresponding value appear in the "
"``file_names`` field. The current encoding of the content type is documented "
"in table :ref:`amdgpu-dwarf-extended-content-types-encoding`"
msgstr ""

#: ../../../AMDGPUUsage.rst:1081
msgid "AMDGPU DWARF Line Number Program Header Extended Content Types Encoding"
msgstr ""

#: ../../../AMDGPUUsage.rst:1087
msgid "0x2001"
msgstr ""

#: ../../../AMDGPUUsage.rst:1093
msgid "Code Conventions"
msgstr ""

#: ../../../AMDGPUUsage.rst:1095
msgid ""
"This section provides code conventions used for each supported target triple "
"OS (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1099
msgid "AMDHSA"
msgstr ""

#: ../../../AMDGPUUsage.rst:1101
msgid ""
"This section provides code conventions used when the target triple OS is "
"``amdhsa`` (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1107
msgid "Code Object Target Identification"
msgstr ""

#: ../../../AMDGPUUsage.rst:1109
msgid ""
"The AMDHSA OS uses the following syntax to specify the code object target as "
"a single string:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1112
msgid ""
"``<Architecture>-<Vendor>-<OS>-<Environment>-<Processor><Target Features>``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1114
msgid "Where:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1116
msgid ""
"``<Architecture>``, ``<Vendor>``, ``<OS>`` and ``<Environment>`` are the "
"same as the *Target Triple* (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1120
msgid ""
"``<Processor>`` is the same as the *Processor* (see :ref:`amdgpu-"
"processors`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1123
msgid ""
"``<Target Features>`` is a list of the enabled *Target Features* (see :ref:"
"`amdgpu-target-features`), each prefixed by a plus, that apply to "
"*Processor*. The list must be in the same order as listed in the table :ref:"
"`amdgpu-target-feature-table`. Note that *Target Features* must be included "
"in the list if they are enabled even if that is the default for *Processor*."
msgstr ""

#: ../../../AMDGPUUsage.rst:1132
msgid "``\"amdgcn-amd-amdhsa--gfx902+xnack\"``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1137
msgid "Code Object Metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:1139
msgid ""
"The code object metadata specifies extensible metadata associated with the "
"code objects executed on HSA [HSA]_ compatible runtimes such as AMD's ROCm "
"[AMD-ROCm]_. The encoding and semantics of this metadata depends on the code "
"object version; see :ref:`amdgpu-amdhsa-code-object-metadata-v2` and :ref:"
"`amdgpu-amdhsa-code-object-metadata-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1145
msgid ""
"Code object metadata is specified in a note record (see :ref:`amdgpu-note-"
"records`) and is required when the target triple OS is ``amdhsa`` (see :ref:"
"`amdgpu-target-triples`). It must contain the minimum information necessary "
"to support the ROCM kernel queries. For example, the segment sizes needed in "
"a dispatch packet. In addition, a high level language runtime may require "
"other information to be included. For example, the AMD OpenCL runtime "
"records kernel argument information."
msgstr ""

#: ../../../AMDGPUUsage.rst:1156
msgid "Code Object V2 Metadata (-mattr=-code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1158
msgid ""
"Code Object V2 is not the default code object version emitted by this "
"version of LLVM. For a description of the metadata generated with the "
"default configuration (Code Object V3) see :ref:`amdgpu-amdhsa-code-object-"
"metadata-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1163
msgid ""
"Code object V2 metadata is specified by the ``NT_AMD_AMDGPU_METADATA`` note "
"record (see :ref:`amdgpu-note-records-v2`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1166
msgid ""
"The metadata is specified as a YAML formatted string (see [YAML]_ and :doc:"
"`YamlIO`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1173
msgid ""
"The metadata is represented as a single YAML document comprised of the "
"mapping defined in table :ref:`amdgpu-amdhsa-code-object-metadata-map-table-"
"v2` and referenced tables."
msgstr ""

#: ../../../AMDGPUUsage.rst:1177
msgid ""
"For boolean values, the string values of ``false`` and ``true`` are used for "
"false and true respectively."
msgstr ""

#: ../../../AMDGPUUsage.rst:1180
msgid ""
"Additional information can be added to the mappings. To avoid conflicts, any "
"non-AMD key names should be prefixed by \"*vendor-name*.\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1183
msgid "AMDHSA Code Object V2 Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1187 ../../../AMDGPUUsage.rst:1231
#: ../../../AMDGPUUsage.rst:1268 ../../../AMDGPUUsage.rst:1309
#: ../../../AMDGPUUsage.rst:1512 ../../../AMDGPUUsage.rst:1612
#: ../../../AMDGPUUsage.rst:1657 ../../../AMDGPUUsage.rst:1801
msgid "String Key"
msgstr ""

#: ../../../AMDGPUUsage.rst:1187 ../../../AMDGPUUsage.rst:1231
#: ../../../AMDGPUUsage.rst:1268 ../../../AMDGPUUsage.rst:1309
#: ../../../AMDGPUUsage.rst:1512 ../../../AMDGPUUsage.rst:1612
#: ../../../AMDGPUUsage.rst:1657 ../../../AMDGPUUsage.rst:1801
msgid "Value Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:1187 ../../../AMDGPUUsage.rst:1231
#: ../../../AMDGPUUsage.rst:1268 ../../../AMDGPUUsage.rst:1309
#: ../../../AMDGPUUsage.rst:1512 ../../../AMDGPUUsage.rst:1612
#: ../../../AMDGPUUsage.rst:1657 ../../../AMDGPUUsage.rst:1801
msgid "Required?"
msgstr ""

#: ../../../AMDGPUUsage.rst:1189
msgid "\"Version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1189 ../../../AMDGPUUsage.rst:1244
#: ../../../AMDGPUUsage.rst:1614 ../../../AMDGPUUsage.rst:1672
msgid "sequence of 2 integers"
msgstr ""

#: ../../../AMDGPUUsage.rst:1189 ../../../AMDGPUUsage.rst:1219
#: ../../../AMDGPUUsage.rst:1233 ../../../AMDGPUUsage.rst:1234
#: ../../../AMDGPUUsage.rst:1313 ../../../AMDGPUUsage.rst:1314
#: ../../../AMDGPUUsage.rst:1316 ../../../AMDGPUUsage.rst:1403
#: ../../../AMDGPUUsage.rst:1514 ../../../AMDGPUUsage.rst:1519
#: ../../../AMDGPUUsage.rst:1530 ../../../AMDGPUUsage.rst:1540
#: ../../../AMDGPUUsage.rst:1545 ../../../AMDGPUUsage.rst:1547
#: ../../../AMDGPUUsage.rst:1563 ../../../AMDGPUUsage.rst:1567
#: ../../../AMDGPUUsage.rst:1614 ../../../AMDGPUUsage.rst:1644
#: ../../../AMDGPUUsage.rst:1659 ../../../AMDGPUUsage.rst:1660
#: ../../../AMDGPUUsage.rst:1712 ../../../AMDGPUUsage.rst:1717
#: ../../../AMDGPUUsage.rst:1728 ../../../AMDGPUUsage.rst:1738
#: ../../../AMDGPUUsage.rst:1743 ../../../AMDGPUUsage.rst:1745
#: ../../../AMDGPUUsage.rst:1766 ../../../AMDGPUUsage.rst:1775
#: ../../../AMDGPUUsage.rst:1805 ../../../AMDGPUUsage.rst:1806
#: ../../../AMDGPUUsage.rst:1810 ../../../AMDGPUUsage.rst:1897
#: ../../../AMDGPUUsage.rst:6280 ../../../AMDGPUUsage.rst:6283
msgid "Required"
msgstr ""

#: ../../../AMDGPUUsage.rst:1189 ../../../AMDGPUUsage.rst:1614
msgid "The first integer is the major version. Currently 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:1191 ../../../AMDGPUUsage.rst:1616
msgid "The second integer is the minor version. Currently 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:1193
msgid "\"Printf\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1193 ../../../AMDGPUUsage.rst:1618
msgid "sequence of strings"
msgstr ""

#: ../../../AMDGPUUsage.rst:1193 ../../../AMDGPUUsage.rst:1618
msgid ""
"Each string is encoded information about a printf function call. The encoded "
"information is organized as fields separated by colon (':'):"
msgstr ""

#: ../../../AMDGPUUsage.rst:1198 ../../../AMDGPUUsage.rst:1623
msgid "``ID:N:S[0]:S[1]:...:S[N-1]:FormatString``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1200 ../../../AMDGPUUsage.rst:1625
msgid "where:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1204 ../../../AMDGPUUsage.rst:1629
msgid "``ID``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1203 ../../../AMDGPUUsage.rst:1628
msgid "A 32 bit integer as a unique id for each printf function call"
msgstr ""

#: ../../../AMDGPUUsage.rst:1209 ../../../AMDGPUUsage.rst:1634
msgid "``N``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1207 ../../../AMDGPUUsage.rst:1632
msgid ""
"A 32 bit integer equal to the number of arguments of printf function call "
"minus 1"
msgstr ""

#: ../../../AMDGPUUsage.rst:1214 ../../../AMDGPUUsage.rst:1639
msgid "``S[i]`` (where i = 0, 1, ... , N-1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1212 ../../../AMDGPUUsage.rst:1637
msgid ""
"32 bit integers for the size in bytes of the i-th FormatString argument of "
"the printf function call"
msgstr ""

#: ../../../AMDGPUUsage.rst:1217 ../../../AMDGPUUsage.rst:1642
msgid "FormatString"
msgstr ""

#: ../../../AMDGPUUsage.rst:1217 ../../../AMDGPUUsage.rst:1642
msgid "The format string passed to the printf function call."
msgstr ""

#: ../../../AMDGPUUsage.rst:1219
msgid "\"Kernels\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1219 ../../../AMDGPUUsage.rst:1252
msgid "sequence of mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:1219
msgid ""
"Sequence of the mappings for each kernel in the code object. See :ref:"
"`amdgpu-amdhsa-code-object-kernel-metadata-map-table-v2` for the definition "
"of the mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:1227
msgid "AMDHSA Code Object V2 Kernel Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1233 ../../../AMDGPUUsage.rst:1311
msgid "\"Name\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1233 ../../../AMDGPUUsage.rst:1234
#: ../../../AMDGPUUsage.rst:1236 ../../../AMDGPUUsage.rst:1286
#: ../../../AMDGPUUsage.rst:1292 ../../../AMDGPUUsage.rst:1311
#: ../../../AMDGPUUsage.rst:1312 ../../../AMDGPUUsage.rst:1316
#: ../../../AMDGPUUsage.rst:1403 ../../../AMDGPUUsage.rst:1432
#: ../../../AMDGPUUsage.rst:1452 ../../../AMDGPUUsage.rst:1465
#: ../../../AMDGPUUsage.rst:1659 ../../../AMDGPUUsage.rst:1660
#: ../../../AMDGPUUsage.rst:1662 ../../../AMDGPUUsage.rst:1697
#: ../../../AMDGPUUsage.rst:1703 ../../../AMDGPUUsage.rst:1803
#: ../../../AMDGPUUsage.rst:1804 ../../../AMDGPUUsage.rst:1810
#: ../../../AMDGPUUsage.rst:1897 ../../../AMDGPUUsage.rst:1926
#: ../../../AMDGPUUsage.rst:1946 ../../../AMDGPUUsage.rst:1959
msgid "string"
msgstr ""

#: ../../../AMDGPUUsage.rst:1233 ../../../AMDGPUUsage.rst:1659
msgid "Source name of the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:1234
msgid "\"SymbolName\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1234 ../../../AMDGPUUsage.rst:1660
msgid "Name of the kernel descriptor ELF symbol."
msgstr ""

#: ../../../AMDGPUUsage.rst:1236
msgid "\"Language\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1236 ../../../AMDGPUUsage.rst:1662
msgid "Source language of the kernel. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1239 ../../../AMDGPUUsage.rst:1665
msgid "\"OpenCL C\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1240 ../../../AMDGPUUsage.rst:1666
msgid "\"OpenCL C++\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1241 ../../../AMDGPUUsage.rst:1667
msgid "\"HCC\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1242 ../../../AMDGPUUsage.rst:1669
msgid "\"OpenMP\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1244
msgid "\"LanguageVersion\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1244 ../../../AMDGPUUsage.rst:1672
msgid "The first integer is the major version."
msgstr ""

#: ../../../AMDGPUUsage.rst:1246 ../../../AMDGPUUsage.rst:1674
msgid "The second integer is the minor version."
msgstr ""

#: ../../../AMDGPUUsage.rst:1248
msgid "\"Attrs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1248 ../../../AMDGPUUsage.rst:1256
msgid "mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:1248
msgid ""
"Mapping of kernel attributes. See :ref:`amdgpu-amdhsa-code-object-kernel-"
"attribute-metadata-map-table-v2` for the mapping definition."
msgstr ""

#: ../../../AMDGPUUsage.rst:1252
msgid "\"Args\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1252
msgid ""
"Sequence of mappings of the kernel arguments. See :ref:`amdgpu-amdhsa-code-"
"object-kernel-argument-metadata-map-table-v2` for the definition of the "
"mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:1256
msgid "\"CodeProps\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1256
msgid ""
"Mapping of properties related to the kernel code. See :ref:`amdgpu-amdhsa-"
"code-object-kernel-code-properties-metadata-map-table-v2` for the mapping "
"definition."
msgstr ""

#: ../../../AMDGPUUsage.rst:1264
msgid "AMDHSA Code Object V2 Kernel Attribute Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1270
msgid "\"ReqdWorkGroupSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1270 ../../../AMDGPUUsage.rst:1279
#: ../../../AMDGPUUsage.rst:1681 ../../../AMDGPUUsage.rst:1690
msgid "sequence of 3 integers"
msgstr ""

#: ../../../AMDGPUUsage.rst:1270 ../../../AMDGPUUsage.rst:1681
msgid ""
"If not 0, 0, 0 then all values must be >=1 and the dispatch work-group size "
"X, Y, Z must correspond to the specified values. Defaults to 0, 0, 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:1276 ../../../AMDGPUUsage.rst:1687
msgid "Corresponds to the OpenCL ``reqd_work_group_size`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:1279
msgid "\"WorkGroupSizeHint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1279 ../../../AMDGPUUsage.rst:1690
msgid ""
"The dispatch work-group size X, Y, Z is likely to be the specified values."
msgstr ""

#: ../../../AMDGPUUsage.rst:1283 ../../../AMDGPUUsage.rst:1694
msgid "Corresponds to the OpenCL ``work_group_size_hint`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:1286
msgid "\"VecTypeHint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1286 ../../../AMDGPUUsage.rst:1697
msgid "The name of a scalar or vector type."
msgstr ""

#: ../../../AMDGPUUsage.rst:1289 ../../../AMDGPUUsage.rst:1700
msgid "Corresponds to the OpenCL ``vec_type_hint`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:1292
msgid "\"RuntimeHandle\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1292 ../../../AMDGPUUsage.rst:1703
msgid ""
"The external symbol name associated with a kernel. OpenCL runtime allocates "
"a global buffer for the symbol and saves the kernel's address to it, which "
"is used for device side enqueueing. Only available for device side enqueued "
"kernels."
msgstr ""

#: ../../../AMDGPUUsage.rst:1305
msgid "AMDHSA Code Object V2 Kernel Argument Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1311 ../../../AMDGPUUsage.rst:1803
msgid "Kernel argument name."
msgstr ""

#: ../../../AMDGPUUsage.rst:1312
msgid "\"TypeName\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1312 ../../../AMDGPUUsage.rst:1804
msgid "Kernel argument type name."
msgstr ""

#: ../../../AMDGPUUsage.rst:1313
msgid "\"Size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1313 ../../../AMDGPUUsage.rst:1314
#: ../../../AMDGPUUsage.rst:1426 ../../../AMDGPUUsage.rst:1514
#: ../../../AMDGPUUsage.rst:1519 ../../../AMDGPUUsage.rst:1530
#: ../../../AMDGPUUsage.rst:1540 ../../../AMDGPUUsage.rst:1545
#: ../../../AMDGPUUsage.rst:1547 ../../../AMDGPUUsage.rst:1563
#: ../../../AMDGPUUsage.rst:1567 ../../../AMDGPUUsage.rst:1575
#: ../../../AMDGPUUsage.rst:1580 ../../../AMDGPUUsage.rst:1712
#: ../../../AMDGPUUsage.rst:1717 ../../../AMDGPUUsage.rst:1728
#: ../../../AMDGPUUsage.rst:1738 ../../../AMDGPUUsage.rst:1743
#: ../../../AMDGPUUsage.rst:1745 ../../../AMDGPUUsage.rst:1766
#: ../../../AMDGPUUsage.rst:1775 ../../../AMDGPUUsage.rst:1783
#: ../../../AMDGPUUsage.rst:1788 ../../../AMDGPUUsage.rst:1805
#: ../../../AMDGPUUsage.rst:1806 ../../../AMDGPUUsage.rst:1920
msgid "integer"
msgstr ""

#: ../../../AMDGPUUsage.rst:1313 ../../../AMDGPUUsage.rst:1805
msgid "Kernel argument size in bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:1314
msgid "\"Align\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1314
msgid "Kernel argument alignment in bytes. Must be a power of two."
msgstr ""

#: ../../../AMDGPUUsage.rst:1316
msgid "\"ValueKind\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1316 ../../../AMDGPUUsage.rst:1810
msgid ""
"Kernel argument kind that specifies how to set up the corresponding "
"argument. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1323
msgid "\"ByValue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1322 ../../../AMDGPUUsage.rst:1816
msgid "The argument is copied directly into the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1328
msgid "\"GlobalBuffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1326 ../../../AMDGPUUsage.rst:1820
msgid ""
"A global address space pointer to the buffer data is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1333
msgid "\"DynamicSharedPointer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1331 ../../../AMDGPUUsage.rst:1825
msgid ""
"A group address space pointer to dynamically allocated LDS is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1338
msgid "\"Sampler\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1336 ../../../AMDGPUUsage.rst:1830
msgid "A global address space pointer to a S# is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1343
msgid "\"Image\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1341 ../../../AMDGPUUsage.rst:1835
msgid "A global address space pointer to a T# is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1348
msgid "\"Pipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1346 ../../../AMDGPUUsage.rst:1840
msgid ""
"A global address space pointer to an OpenCL pipe is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1354
msgid "\"Queue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1351 ../../../AMDGPUUsage.rst:1845
msgid ""
"A global address space pointer to an OpenCL device enqueue queue is passed "
"in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1360
msgid "\"HiddenGlobalOffsetX\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1357 ../../../AMDGPUUsage.rst:1851
msgid ""
"The OpenCL grid dispatch global offset for the X dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1366
msgid "\"HiddenGlobalOffsetY\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1363 ../../../AMDGPUUsage.rst:1857
msgid ""
"The OpenCL grid dispatch global offset for the Y dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1372
msgid "\"HiddenGlobalOffsetZ\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1369 ../../../AMDGPUUsage.rst:1863
msgid ""
"The OpenCL grid dispatch global offset for the Z dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1378
msgid "\"HiddenNone\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1375 ../../../AMDGPUUsage.rst:1869
msgid ""
"An argument that is not used by the kernel. Space needs to be left for it, "
"but it does not need to be set up."
msgstr ""

#: ../../../AMDGPUUsage.rst:1383
msgid "\"HiddenPrintfBuffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1381 ../../../AMDGPUUsage.rst:1875
msgid ""
"A global address space pointer to the runtime printf buffer is passed in "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1390
msgid "\"HiddenDefaultQueue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1386 ../../../AMDGPUUsage.rst:1880
msgid ""
"A global address space pointer to the OpenCL device enqueue queue that "
"should be used by the kernel by default is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1396
msgid "\"HiddenCompletionAction\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1393 ../../../AMDGPUUsage.rst:1887
msgid ""
"A global address space pointer to help link enqueued kernels into the "
"ancestor tree for determining when the parent kernel has finished."
msgstr ""

#: ../../../AMDGPUUsage.rst:1401
msgid "\"HiddenMultiGridSyncArg\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1399 ../../../AMDGPUUsage.rst:1893
msgid ""
"A global address space pointer for multi-grid synchronization is passed in "
"the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1403
msgid "\"ValueType\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1403
msgid ""
"Kernel argument value type. Only present if \"ValueKind\" is \"ByValue\". "
"For vector data types, the value is for the element type. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1409
msgid "\"Struct\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1410
msgid "\"I8\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1411
msgid "\"U8\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1412
msgid "\"I16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1413
msgid "\"U16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1414
msgid "\"F16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1415
msgid "\"I32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1416
msgid "\"U32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1417
msgid "\"F32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1418
msgid "\"I64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1419
msgid "\"U64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1420
msgid "\"F64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1426
msgid "\"PointeeAlign\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1426
msgid ""
"Alignment in bytes of pointee type for pointer type kernel argument. Must be "
"a power of 2. Only present if \"ValueKind\" is \"DynamicSharedPointer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1432
msgid "\"AddrSpaceQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1432
msgid ""
"Kernel argument address space qualifier. Only present if \"ValueKind\" is "
"\"GlobalBuffer\" or \"DynamicSharedPointer\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1438
msgid "\"Private\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1439
msgid "\"Global\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1440
msgid "\"Constant\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1441
msgid "\"Local\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1442
msgid "\"Generic\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1443
msgid "\"Region\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1452
msgid "\"AccQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1452
msgid ""
"Kernel argument access qualifier. Only present if \"ValueKind\" is \"Image\" "
"or \"Pipe\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1458 ../../../AMDGPUUsage.rst:1478
msgid "\"ReadOnly\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1459 ../../../AMDGPUUsage.rst:1479
msgid "\"WriteOnly\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1460 ../../../AMDGPUUsage.rst:1480
msgid "\"ReadWrite\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1465
msgid "\"ActualAccQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1465
msgid ""
"The actual memory accesses performed by the kernel on the kernel argument. "
"Only present if \"ValueKind\" is \"GlobalBuffer\", \"Image\", or \"Pipe\". "
"This may be more restrictive than indicated by \"AccQual\" to reflect what "
"the kernel actual does. If not present then the runtime must assume what is "
"implied by \"AccQual\" and \"IsConst\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1482
msgid "\"IsConst\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1482 ../../../AMDGPUUsage.rst:1487
#: ../../../AMDGPUUsage.rst:1492 ../../../AMDGPUUsage.rst:1497
#: ../../../AMDGPUUsage.rst:1976 ../../../AMDGPUUsage.rst:1981
#: ../../../AMDGPUUsage.rst:1986 ../../../AMDGPUUsage.rst:1991
msgid "boolean"
msgstr ""

#: ../../../AMDGPUUsage.rst:1482
msgid ""
"Indicates if the kernel argument is const qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1487
msgid "\"IsRestrict\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1487
msgid ""
"Indicates if the kernel argument is restrict qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1492
msgid "\"IsVolatile\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1492
msgid ""
"Indicates if the kernel argument is volatile qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1497
msgid "\"IsPipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1497
msgid ""
"Indicates if the kernel argument is pipe qualified. Only present if "
"\"ValueKind\" is \"Pipe\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1508
msgid "AMDHSA Code Object V2 Kernel Code Properties Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1514
msgid "\"KernargSegmentSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1514 ../../../AMDGPUUsage.rst:1712
msgid ""
"The size in bytes of the kernarg segment that holds the values of the "
"arguments to the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:1519
msgid "\"GroupSegmentFixedSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1519 ../../../AMDGPUUsage.rst:1717
msgid ""
"The amount of group segment memory required by a work-group in bytes. This "
"does not include any dynamically allocated group segment memory that may be "
"added when the kernel is dispatched."
msgstr ""

#: ../../../AMDGPUUsage.rst:1530
msgid "\"PrivateSegmentFixedSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1530 ../../../AMDGPUUsage.rst:1728
msgid ""
"The amount of fixed private address space memory required for a work-item in "
"bytes. If the kernel uses a dynamic call stack then additional space must be "
"added to this value for the call stack."
msgstr ""

#: ../../../AMDGPUUsage.rst:1540
msgid "\"KernargSegmentAlign\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1540 ../../../AMDGPUUsage.rst:1738
msgid ""
"The maximum byte alignment of arguments in the kernarg segment. Must be a "
"power of 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:1545
msgid "\"WavefrontSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1545 ../../../AMDGPUUsage.rst:1743
msgid "Wavefront size. Must be a power of 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:1547
msgid "\"NumSGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1547
msgid ""
"Number of scalar registers used by a wavefront for GFX6-GFX10. This includes "
"the special SGPRs for VCC, Flat Scratch (GFX7-GFX10) and XNACK (for GFX8-"
"GFX10). It does not include the 16 SGPR added if a trap handler is enabled. "
"It is not rounded up to the allocation granularity."
msgstr ""

#: ../../../AMDGPUUsage.rst:1563
msgid "\"NumVGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1563
msgid "Number of vector registers used by each work-item for GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:1567
msgid "\"MaxFlatWorkGroupSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1567 ../../../AMDGPUUsage.rst:1775
msgid ""
"Maximum flat work-group size supported by the kernel in work-items. Must be "
">=1 and consistent with ReqdWorkGroupSize if not 0, 0, 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:1575
msgid "\"NumSpilledSGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1575 ../../../AMDGPUUsage.rst:1783
msgid ""
"Number of stores from a scalar register to a register allocator created "
"spill location."
msgstr ""

#: ../../../AMDGPUUsage.rst:1580
msgid "\"NumSpilledVGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1580 ../../../AMDGPUUsage.rst:1788
msgid ""
"Number of stores from a vector register to a register allocator created "
"spill location."
msgstr ""

#: ../../../AMDGPUUsage.rst:1590
msgid "Code Object V3 Metadata (-mattr=+code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1592
msgid ""
"Code object V3 metadata is specified by the ``NT_AMDGPU_METADATA`` note "
"record (see :ref:`amdgpu-note-records-v3`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1595
msgid ""
"The metadata is represented as Message Pack formatted binary data (see "
"[MsgPack]_). The top level is a Message Pack map that includes the keys "
"defined in table :ref:`amdgpu-amdhsa-code-object-metadata-map-table-v3` and "
"referenced tables."
msgstr ""

#: ../../../AMDGPUUsage.rst:1601
msgid ""
"Additional information can be added to the maps. To avoid conflicts, any key "
"names should be prefixed by \"*vendor-name*.\" where ``vendor-name`` can be "
"the the name of the vendor and specific vendor tool that generates the "
"information. The prefix is abbreviated to simply \".\" when it appears "
"within a map that has been added by the same *vendor-name*."
msgstr ""

#: ../../../AMDGPUUsage.rst:1608
msgid "AMDHSA Code Object V3 Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1614
msgid "\"amdhsa.version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1618
msgid "\"amdhsa.printf\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1644
msgid "\"amdhsa.kernels\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1644 ../../../AMDGPUUsage.rst:1676
msgid "sequence of map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1644
msgid ""
"Sequence of the maps for each kernel in the code object. See :ref:`amdgpu-"
"amdhsa-code-object-kernel-metadata-map-table-v3` for the definition of the "
"keys included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:1653
msgid "AMDHSA Code Object V3 Kernel Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1659 ../../../AMDGPUUsage.rst:1803
msgid "\".name\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1660
msgid "\".symbol\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1662
msgid "\".language\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1668
msgid "\"HIP\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1670
msgid "\"Assembler\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1672
msgid "\".language_version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1676
msgid "\".args\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1676
msgid ""
"Sequence of maps of the kernel arguments. See :ref:`amdgpu-amdhsa-code-"
"object-kernel-argument-metadata-map-table-v3` for the definition of the keys "
"included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:1681
msgid "\".reqd_workgroup_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1690
msgid "\".workgroup_size_hint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1697
msgid "\".vec_type_hint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1703
msgid "\".device_enqueue_symbol\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1712
msgid "\".kernarg_segment_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1717
msgid "\".group_segment_fixed_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1728
msgid "\".private_segment_fixed_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1738
msgid "\".kernarg_segment_align\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1743
msgid "\".wavefront_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1745
msgid "\".sgpr_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1745
msgid ""
"Number of scalar registers required by a wavefront for GFX6-GFX9. A register "
"is required if it is used explicitly, or if a higher numbered register is "
"used explicitly. This includes the special SGPRs for VCC, Flat Scratch (GFX7-"
"GFX9) and XNACK (for GFX8-GFX9). It does not include the 16 SGPR added if a "
"trap handler is enabled. It is not rounded up to the allocation granularity."
msgstr ""

#: ../../../AMDGPUUsage.rst:1766
msgid "\".vgpr_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1766
msgid ""
"Number of vector registers required by each work-item for GFX6-GFX9. A "
"register is required if it is used explicitly, or if a higher numbered "
"register is used explicitly."
msgstr ""

#: ../../../AMDGPUUsage.rst:1775
msgid "\".max_flat_workgroup_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1783
msgid "\".sgpr_spill_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1788
msgid "\".vgpr_spill_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1797
msgid "AMDHSA Code Object V3 Kernel Argument Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1804
msgid "\".type_name\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1805
msgid "\".size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1806
msgid "\".offset\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1806
msgid ""
"Kernel argument offset in bytes. The offset must be a multiple of the "
"alignment required by the argument."
msgstr ""

#: ../../../AMDGPUUsage.rst:1810
msgid "\".value_kind\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1817
msgid "\"by_value\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1822
msgid "\"global_buffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1827
msgid "\"dynamic_shared_pointer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1832
msgid "\"sampler\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1837
msgid "\"image\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1842
msgid "\"pipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1848
msgid "\"queue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1854
msgid "\"hidden_global_offset_x\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1860
msgid "\"hidden_global_offset_y\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1866
msgid "\"hidden_global_offset_z\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1872
msgid "\"hidden_none\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1877
msgid "\"hidden_printf_buffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1884
msgid "\"hidden_default_queue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1890
msgid "\"hidden_completion_action\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1895
msgid "\"hidden_multigrid_sync_arg\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1897
msgid "\".value_type\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1897
msgid ""
"Kernel argument value type. Only present if \".value_kind\" is \"by_value\". "
"For vector data types, the value is for the element type. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1903
msgid "\"struct\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1904
msgid "\"i8\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1905
msgid "\"u8\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1906
msgid "\"i16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1907
msgid "\"u16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1908
msgid "\"f16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1909
msgid "\"i32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1910
msgid "\"u32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1911
msgid "\"f32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1912
msgid "\"i64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1913
msgid "\"u64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1914
msgid "\"f64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1920
msgid "\".pointee_align\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1920
msgid ""
"Alignment in bytes of pointee type for pointer type kernel argument. Must be "
"a power of 2. Only present if \".value_kind\" is \"dynamic_shared_pointer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1926
msgid "\".address_space\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1926
msgid ""
"Kernel argument address space qualifier. Only present if \".value_kind\" is "
"\"global_buffer\" or \"dynamic_shared_pointer\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1932
msgid "\"private\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1933
msgid "\"global\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1934
msgid "\"constant\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1935
msgid "\"local\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1936
msgid "\"generic\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1937
msgid "\"region\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1946
msgid "\".access\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1946
msgid ""
"Kernel argument access qualifier. Only present if \".value_kind\" is "
"\"image\" or \"pipe\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1952 ../../../AMDGPUUsage.rst:1972
msgid "\"read_only\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1953 ../../../AMDGPUUsage.rst:1973
msgid "\"write_only\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1954 ../../../AMDGPUUsage.rst:1974
msgid "\"read_write\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1959
msgid "\".actual_access\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1959
msgid ""
"The actual memory accesses performed by the kernel on the kernel argument. "
"Only present if \".value_kind\" is \"global_buffer\", \"image\", or "
"\"pipe\". This may be more restrictive than indicated by \".access\" to "
"reflect what the kernel actual does. If not present then the runtime must "
"assume what is implied by \".access\" and \".is_const\"      . Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1976
msgid "\".is_const\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1976
msgid ""
"Indicates if the kernel argument is const qualified. Only present if \"."
"value_kind\" is \"global_buffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1981
msgid "\".is_restrict\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1981
msgid ""
"Indicates if the kernel argument is restrict qualified. Only present if \"."
"value_kind\" is \"global_buffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1986
msgid "\".is_volatile\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1986
msgid ""
"Indicates if the kernel argument is volatile qualified. Only present if \"."
"value_kind\" is \"global_buffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1991
msgid "\".is_pipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1991
msgid ""
"Indicates if the kernel argument is pipe qualified. Only present if \"."
"value_kind\" is \"pipe\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:2003
msgid "Kernel Dispatch"
msgstr ""

#: ../../../AMDGPUUsage.rst:2005
msgid ""
"The HSA architected queuing language (AQL) defines a user space memory "
"interface that can be used to control the dispatch of kernels, in an agent "
"independent way. An agent can have zero or more AQL queues created for it "
"using the ROCm runtime, in which AQL packets (all of which are 64 bytes) can "
"be placed. See the *HSA Platform System Architecture Specification* [HSA]_ "
"for the AQL queue mechanics and packet layouts."
msgstr ""

#: ../../../AMDGPUUsage.rst:2012
msgid ""
"The packet processor of a kernel agent is responsible for detecting and "
"dispatching HSA kernels from the AQL queues associated with it. For AMD GPUs "
"the packet processor is implemented by the hardware command processor (CP), "
"asynchronous dispatch controller (ADC) and shader processor input controller "
"(SPI)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2018
msgid ""
"The ROCm runtime can be used to allocate an AQL queue object. It uses the "
"kernel mode driver to initialize and register the AQL queue with CP."
msgstr ""

#: ../../../AMDGPUUsage.rst:2021
msgid ""
"To dispatch a kernel the following actions are performed. This can occur in "
"the CPU host program, or from an HSA kernel executing on a GPU."
msgstr ""

#: ../../../AMDGPUUsage.rst:2024
msgid ""
"A pointer to an AQL queue for the kernel agent on which the kernel is to be "
"executed is obtained."
msgstr ""

#: ../../../AMDGPUUsage.rst:2026
msgid ""
"A pointer to the kernel descriptor (see :ref:`amdgpu-amdhsa-kernel-"
"descriptor`) of the kernel to execute is obtained. It must be for a kernel "
"that is contained in a code object that that was loaded by the ROCm runtime "
"on the kernel agent with which the AQL queue is associated."
msgstr ""

#: ../../../AMDGPUUsage.rst:2031
msgid ""
"Space is allocated for the kernel arguments using the ROCm runtime allocator "
"for a memory region with the kernarg property for the kernel agent that will "
"execute the kernel. It must be at least 16 byte aligned."
msgstr ""

#: ../../../AMDGPUUsage.rst:2034
msgid ""
"Kernel argument values are assigned to the kernel argument memory "
"allocation. The layout is defined in the *HSA Programmer's Language "
"Reference* [HSA]_. For AMDGPU the kernel execution directly accesses the "
"kernel argument memory in the same way constant memory is accessed. (Note "
"that the HSA specification allows an implementation to copy the kernel "
"argument contents to another location that is accessed by the kernel.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2040
msgid ""
"An AQL kernel dispatch packet is created on the AQL queue. The ROCm runtime "
"api uses 64 bit atomic operations to reserve space in the AQL queue for the "
"packet. The packet must be set up, and the final write must use an atomic "
"store release to set the packet kind to ensure the packet contents are "
"visible to the kernel agent. AQL defines a doorbell signal mechanism to "
"notify the kernel agent that the AQL queue has been updated. These rules, "
"and the layout of the AQL queue and kernel dispatch packet is defined in the "
"*HSA System Architecture Specification* [HSA]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:2048
msgid ""
"A kernel dispatch packet includes information about the actual dispatch, "
"such as grid and work-group size, together with information from the code "
"object about the kernel, such as segment sizes. The ROCm runtime queries on "
"the kernel symbol can be used to obtain the code object values which are "
"recorded in the :ref:`amdgpu-amdhsa-code-object-metadata`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2053
msgid ""
"CP executes micro-code and is responsible for detecting and setting up the "
"GPU to execute the wavefronts of a kernel dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:2055
msgid ""
"CP ensures that when the a wavefront starts executing the kernel machine "
"code, the scalar general purpose registers (SGPR) and vector general purpose "
"registers (VGPR) are set up as required by the machine code. The required "
"setup is defined in the :ref:`amdgpu-amdhsa-kernel-descriptor`. The initial "
"register state is defined in :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2061
msgid ""
"The prolog of the kernel machine code (see :ref:`amdgpu-amdhsa-kernel-"
"prolog`) sets up the machine state as necessary before continuing executing "
"the machine code that corresponds to the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:2064
msgid ""
"When the kernel dispatch has completed execution, CP signals the completion "
"signal specified in the kernel dispatch packet if not 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:2070
msgid "Memory Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:2072
msgid "The memory space properties are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2074
msgid "AMDHSA Memory Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:2078
msgid "Memory Space Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:2078
msgid "HSA Segment Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:2078
msgid "Hardware Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:2078
msgid "Address Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:2078
msgid "NULL Value"
msgstr ""

#: ../../../AMDGPUUsage.rst:2081
msgid "Private"
msgstr ""

#: ../../../AMDGPUUsage.rst:2081 ../../../AMDGPUUsage.rst:3377
#: ../../../AMDGPUUsage.rst:3392
msgid "private"
msgstr ""

#: ../../../AMDGPUUsage.rst:2081
msgid "scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:2081
msgid "0x00000000"
msgstr ""

#: ../../../AMDGPUUsage.rst:2082
msgid "Local"
msgstr ""

#: ../../../AMDGPUUsage.rst:2082
msgid "group"
msgstr ""

#: ../../../AMDGPUUsage.rst:2082
msgid "LDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:2082
msgid "0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:2083 ../../../AMDGPUUsage.rst:3375
#: ../../../AMDGPUUsage.rst:3390 ../../../AMDGPUUsage.rst:3408
#: ../../../AMDGPUUsage.rst:3410 ../../../AMDGPUUsage.rst:3418
#: ../../../AMDGPUUsage.rst:3420 ../../../AMDGPUUsage.rst:3428
#: ../../../AMDGPUUsage.rst:3438 ../../../AMDGPUUsage.rst:3441
#: ../../../AMDGPUUsage.rst:3522 ../../../AMDGPUUsage.rst:3574
#: ../../../AMDGPUUsage.rst:3577 ../../../AMDGPUUsage.rst:3657
#: ../../../AMDGPUUsage.rst:3984 ../../../AMDGPUUsage.rst:3987
#: ../../../AMDGPUUsage.rst:4129 ../../../AMDGPUUsage.rst:4175
#: ../../../AMDGPUUsage.rst:4178 ../../../AMDGPUUsage.rst:4320
#: ../../../AMDGPUUsage.rst:4524 ../../../AMDGPUUsage.rst:4527
#: ../../../AMDGPUUsage.rst:4744 ../../../AMDGPUUsage.rst:5132
#: ../../../AMDGPUUsage.rst:5137 ../../../AMDGPUUsage.rst:5325
#: ../../../AMDGPUUsage.rst:5423 ../../../AMDGPUUsage.rst:5428
#: ../../../AMDGPUUsage.rst:5433 ../../../AMDGPUUsage.rst:5438
msgid "global"
msgstr ""

#: ../../../AMDGPUUsage.rst:2083 ../../../AMDGPUUsage.rst:2084
#: ../../../AMDGPUUsage.rst:2086
msgid "0x0000000000000000"
msgstr ""

#: ../../../AMDGPUUsage.rst:2084 ../../../AMDGPUUsage.rst:3378
#: ../../../AMDGPUUsage.rst:3393
msgid "constant"
msgstr ""

#: ../../../AMDGPUUsage.rst:2084
msgid "*same as global*"
msgstr ""

#: ../../../AMDGPUUsage.rst:2086
msgid "Generic"
msgstr ""

#: ../../../AMDGPUUsage.rst:2086
msgid "flat"
msgstr ""

#: ../../../AMDGPUUsage.rst:2087
msgid "Region"
msgstr ""

#: ../../../AMDGPUUsage.rst:2087
msgid "N/A"
msgstr ""

#: ../../../AMDGPUUsage.rst:2087
msgid "GDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:2087
msgid "*not implemented for AMDHSA*"
msgstr ""

#: ../../../AMDGPUUsage.rst:2091
msgid ""
"The global and constant memory spaces both use global virtual addresses, "
"which are the same virtual address space used by the CPU. However, some "
"virtual addresses may only be accessible to the CPU, some only accessible by "
"the GPU, and some by both."
msgstr ""

#: ../../../AMDGPUUsage.rst:2096
msgid ""
"Using the constant memory space indicates that the data will not change "
"during the execution of the kernel. This allows scalar read instructions to "
"be used. The vector and scalar L1 caches are invalidated of volatile data "
"before each kernel dispatch execution to allow constant memory to change "
"values between kernel dispatches."
msgstr ""

#: ../../../AMDGPUUsage.rst:2102
msgid ""
"The local memory space uses the hardware Local Data Store (LDS) which is "
"automatically allocated when the hardware creates work-groups of wavefronts, "
"and freed when all the wavefronts of a work-group have terminated. The data "
"store (DS) instructions can be used to access it."
msgstr ""

#: ../../../AMDGPUUsage.rst:2107
msgid ""
"The private memory space uses the hardware scratch memory support. If the "
"kernel uses scratch, then the hardware allocates memory that is accessed "
"using wavefront lane dword (4 byte) interleaving. The mapping used from "
"private address to physical address is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2112
msgid ""
"``wavefront-scratch-base + (private-address * wavefront-size * 4) + "
"(wavefront-lane-id * 4)``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2116
msgid ""
"There are different ways that the wavefront scratch base address is "
"determined by a wavefront (see :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`). This memory can be accessed in an interleaved manner using buffer "
"instruction with the scratch buffer descriptor and per wavefront scratch "
"offset, by the scratch instructions, or by flat instructions. If each lane "
"of a wavefront accesses the same private address, the interleaving results "
"in adjacent dwords being accessed and hence requires fewer cache lines to be "
"fetched. Multi-dword access is not supported except by flat and scratch "
"instructions in GFX9-GFX10."
msgstr ""

#: ../../../AMDGPUUsage.rst:2125
msgid ""
"The generic address space uses the hardware flat address support available "
"in GFX7-GFX10. This uses two fixed ranges of virtual addresses (the private "
"and local appertures), that are outside the range of addressible global "
"memory, to map from a flat address to a private or local address."
msgstr ""

#: ../../../AMDGPUUsage.rst:2130
msgid ""
"FLAT instructions can take a flat address and access global, private "
"(scratch) and group (LDS) memory depending in if the address is within one "
"of the apperture ranges. Flat access to scratch requires hardware aperture "
"setup and setup in the kernel prologue (see :ref:`amdgpu-amdhsa-flat-"
"scratch`). Flat access to LDS requires hardware aperture setup and M0 (GFX7-"
"GFX8) register setup (see :ref:`amdgpu-amdhsa-m0`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2137
msgid ""
"To convert between a segment address and a flat address the base address of "
"the appertures address can be used. For GFX7-GFX8 these are available in "
"the :ref:`amdgpu-amdhsa-hsa-aql-queue` the address of which can be obtained "
"with Queue Ptr SGPR (see :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`). For GFX9-GFX10 the appature base addresses are directly available "
"as inline constant registers ``SRC_SHARED_BASE/LIMIT`` and "
"``SRC_PRIVATE_BASE/LIMIT``. In 64 bit address mode the apperture sizes are "
"2^32 bytes and the base is aligned to 2^32 which makes it easier to convert "
"from flat to segment or segment to flat."
msgstr ""

#: ../../../AMDGPUUsage.rst:2147
msgid "Image and Samplers"
msgstr ""

#: ../../../AMDGPUUsage.rst:2149
msgid ""
"Image and sample handles created by the ROCm runtime are 64 bit addresses of "
"a hardware 32 byte V# and 48 byte S# object respectively. In order to "
"support the HSA ``query_sampler`` operations two extra dwords are used to "
"store the HSA BRIG enumeration values for the queries that are not trivially "
"deducible from the S# representation."
msgstr ""

#: ../../../AMDGPUUsage.rst:2156
msgid "HSA Signals"
msgstr ""

#: ../../../AMDGPUUsage.rst:2158
msgid ""
"HSA signal handles created by the ROCm runtime are 64 bit addresses of a "
"structure allocated in memory accessible from both the CPU and GPU. The "
"structure is defined by the ROCm runtime and subject to change between "
"releases (see [AMD-ROCm-github]_)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2166
msgid "HSA AQL Queue"
msgstr ""

#: ../../../AMDGPUUsage.rst:2168
msgid ""
"The HSA AQL queue structure is defined by the ROCm runtime and subject to "
"change between releases (see [AMD-ROCm-github]_). For some processors it "
"contains fields needed to implement certain language features such as the "
"flat address aperture bases. It also contains fields used by CP such as "
"managing the allocation of scratch memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:2177
msgid "Kernel Descriptor"
msgstr ""

#: ../../../AMDGPUUsage.rst:2179
msgid ""
"A kernel descriptor consists of the information needed by CP to initiate the "
"execution of a kernel, including the entry point address of the machine code "
"that implements the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:2184 ../../../AMDGPUUsage.rst:2189
msgid "Kernel Descriptor for GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:2186
msgid ""
"CP microcode requires the Kernel descriptor to be allocated on 64 byte "
"alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:2193 ../../../AMDGPUUsage.rst:2285
#: ../../../AMDGPUUsage.rst:2571 ../../../AMDGPUUsage.rst:2724
msgid "Bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2193 ../../../AMDGPUUsage.rst:2285
#: ../../../AMDGPUUsage.rst:2571 ../../../AMDGPUUsage.rst:2724
msgid "Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:2193 ../../../AMDGPUUsage.rst:2285
#: ../../../AMDGPUUsage.rst:2571 ../../../AMDGPUUsage.rst:2724
msgid "Field Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:2195
msgid "31:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:2195 ../../../AMDGPUUsage.rst:2204
#: ../../../AMDGPUUsage.rst:2222 ../../../AMDGPUUsage.rst:2232
#: ../../../AMDGPUUsage.rst:2239
msgid "4 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:2195
msgid "GROUP_SEGMENT_FIXED_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2195
msgid ""
"The amount of fixed local address space memory required for a work-group in "
"bytes. This does not include any dynamically allocated local address space "
"memory that may be added when the kernel is dispatched."
msgstr ""

#: ../../../AMDGPUUsage.rst:2204
msgid "63:32"
msgstr ""

#: ../../../AMDGPUUsage.rst:2204
msgid "PRIVATE_SEGMENT_FIXED_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2204
msgid ""
"The amount of fixed private address space memory required for a work-item in "
"bytes. If is_dynamic_callstack is 1 then additional space must be added to "
"this value for the call stack."
msgstr ""

#: ../../../AMDGPUUsage.rst:2212
msgid "127:64"
msgstr ""

#: ../../../AMDGPUUsage.rst:2212 ../../../AMDGPUUsage.rst:2213
msgid "8 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:2212 ../../../AMDGPUUsage.rst:2220
#: ../../../AMDGPUUsage.rst:2223 ../../../AMDGPUUsage.rst:2265
#: ../../../AMDGPUUsage.rst:2267 ../../../AMDGPUUsage.rst:2274
#: ../../../AMDGPUUsage.rst:2275 ../../../AMDGPUUsage.rst:2498
#: ../../../AMDGPUUsage.rst:2515 ../../../AMDGPUUsage.rst:2517
#: ../../../AMDGPUUsage.rst:2529 ../../../AMDGPUUsage.rst:2552
#: ../../../AMDGPUUsage.rst:2714 ../../../AMDGPUUsage.rst:2728
msgid "Reserved, must be 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:2213
msgid "191:128"
msgstr ""

#: ../../../AMDGPUUsage.rst:2213
msgid "KERNEL_CODE_ENTRY_BYTE_OFFSET"
msgstr ""

#: ../../../AMDGPUUsage.rst:2213
msgid ""
"Byte offset (possibly negative) from base address of kernel descriptor to "
"kernel's entry point instruction which must be 256 byte aligned."
msgstr ""

#: ../../../AMDGPUUsage.rst:2220
msgid "351:272"
msgstr ""

#: ../../../AMDGPUUsage.rst:2220
msgid "20 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:2222
msgid "383:352"
msgstr ""

#: ../../../AMDGPUUsage.rst:2222
msgid "COMPUTE_PGM_RSRC3"
msgstr ""

#: ../../../AMDGPUUsage.rst:2222 ../../../AMDGPUUsage.rst:2266
#: ../../../AMDGPUUsage.rst:2528 ../../../AMDGPUUsage.rst:2551
msgid "GFX6-9"
msgstr ""

#: ../../../AMDGPUUsage.rst:2230 ../../../AMDGPUUsage.rst:2272
#: ../../../AMDGPUUsage.rst:2335 ../../../AMDGPUUsage.rst:2526
#: ../../../AMDGPUUsage.rst:2549 ../../../AMDGPUUsage.rst:2560
#: ../../../AMDGPUUsage.rst:6262 ../../../AMDGPUUsage.rst:6319
#: ../../../AMDGPUUsage.rst:6323 ../../../AMDGPUUsage.rst:6325
msgid "GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:2225
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC3`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc3-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2232
msgid "415:384"
msgstr ""

#: ../../../AMDGPUUsage.rst:2232
msgid "COMPUTE_PGM_RSRC1"
msgstr ""

#: ../../../AMDGPUUsage.rst:2232
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC1`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc1-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2239
msgid "447:416"
msgstr ""

#: ../../../AMDGPUUsage.rst:2239
msgid "COMPUTE_PGM_RSRC2"
msgstr ""

#: ../../../AMDGPUUsage.rst:2239
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC2`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2246
msgid "448"
msgstr ""

#: ../../../AMDGPUUsage.rst:2246 ../../../AMDGPUUsage.rst:2258
#: ../../../AMDGPUUsage.rst:2259 ../../../AMDGPUUsage.rst:2260
#: ../../../AMDGPUUsage.rst:2261 ../../../AMDGPUUsage.rst:2262
#: ../../../AMDGPUUsage.rst:2263 ../../../AMDGPUUsage.rst:2266
#: ../../../AMDGPUUsage.rst:2437 ../../../AMDGPUUsage.rst:2446
#: ../../../AMDGPUUsage.rst:2457 ../../../AMDGPUUsage.rst:2465
#: ../../../AMDGPUUsage.rst:2480 ../../../AMDGPUUsage.rst:2489
#: ../../../AMDGPUUsage.rst:2497 ../../../AMDGPUUsage.rst:2516
#: ../../../AMDGPUUsage.rst:2528 ../../../AMDGPUUsage.rst:2551
#: ../../../AMDGPUUsage.rst:2573 ../../../AMDGPUUsage.rst:2588
#: ../../../AMDGPUUsage.rst:2595 ../../../AMDGPUUsage.rst:2603
#: ../../../AMDGPUUsage.rst:2611 ../../../AMDGPUUsage.rst:2619
#: ../../../AMDGPUUsage.rst:2634 ../../../AMDGPUUsage.rst:2650
#: ../../../AMDGPUUsage.rst:2690 ../../../AMDGPUUsage.rst:2700
#: ../../../AMDGPUUsage.rst:2703 ../../../AMDGPUUsage.rst:2705
#: ../../../AMDGPUUsage.rst:2707 ../../../AMDGPUUsage.rst:2709
#: ../../../AMDGPUUsage.rst:2711 ../../../AMDGPUUsage.rst:2714
msgid "1 bit"
msgstr ""

#: ../../../AMDGPUUsage.rst:2246
msgid "ENABLE_SGPR_PRIVATE_SEGMENT _BUFFER"
msgstr ""

#: ../../../AMDGPUUsage.rst:2246
msgid ""
"Enable the setup of the SGPR user data registers (see :ref:`amdgpu-amdhsa-"
"initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2251
msgid ""
"The total number of SGPR user data registers requested must not exceed 16 "
"and match value in ``compute_pgm_rsrc2.user_sgpr.user_sgpr_count``. Any "
"requests beyond 16 will be ignored."
msgstr ""

#: ../../../AMDGPUUsage.rst:2258
msgid "449"
msgstr ""

#: ../../../AMDGPUUsage.rst:2258
msgid "ENABLE_SGPR_DISPATCH_PTR"
msgstr ""

#: ../../../AMDGPUUsage.rst:2258 ../../../AMDGPUUsage.rst:2259
#: ../../../AMDGPUUsage.rst:2260 ../../../AMDGPUUsage.rst:2261
#: ../../../AMDGPUUsage.rst:2262 ../../../AMDGPUUsage.rst:2263
msgid "*see above*"
msgstr ""

#: ../../../AMDGPUUsage.rst:2259
msgid "450"
msgstr ""

#: ../../../AMDGPUUsage.rst:2259
msgid "ENABLE_SGPR_QUEUE_PTR"
msgstr ""

#: ../../../AMDGPUUsage.rst:2260
msgid "451"
msgstr ""

#: ../../../AMDGPUUsage.rst:2260
msgid "ENABLE_SGPR_KERNARG_SEGMENT_PTR"
msgstr ""

#: ../../../AMDGPUUsage.rst:2261
msgid "452"
msgstr ""

#: ../../../AMDGPUUsage.rst:2261
msgid "ENABLE_SGPR_DISPATCH_ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:2262
msgid "453"
msgstr ""

#: ../../../AMDGPUUsage.rst:2262
msgid "ENABLE_SGPR_FLAT_SCRATCH_INIT"
msgstr ""

#: ../../../AMDGPUUsage.rst:2263
msgid "454"
msgstr ""

#: ../../../AMDGPUUsage.rst:2263
msgid "ENABLE_SGPR_PRIVATE_SEGMENT _SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2265
msgid "457:455"
msgstr ""

#: ../../../AMDGPUUsage.rst:2265
msgid "3 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2266
msgid "458"
msgstr ""

#: ../../../AMDGPUUsage.rst:2266
msgid "ENABLE_WAVEFRONT_SIZE32"
msgstr ""

#: ../../../AMDGPUUsage.rst:2269
msgid "If 0 execute in wavefront size 64 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:2271
msgid "If 1 execute in native wavefront size 32 mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:2274
msgid "463:459"
msgstr ""

#: ../../../AMDGPUUsage.rst:2274 ../../../AMDGPUUsage.rst:2580
msgid "5 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2275
msgid "511:464"
msgstr ""

#: ../../../AMDGPUUsage.rst:2275
msgid "6 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:2276
msgid "512"
msgstr ""

#: ../../../AMDGPUUsage.rst:2276
msgid "**Total size 64 bytes.**"
msgstr ""

#: ../../../AMDGPUUsage.rst:2281
msgid "compute_pgm_rsrc1 for GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:2287
msgid "5:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:2287
msgid "6 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2287
msgid "GRANULATED_WORKITEM_VGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:2287
msgid ""
"Number of vector register blocks used by each work-item; granularity is "
"device specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2293 ../../../AMDGPUUsage.rst:2516
msgid "GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:2293
msgid "vgprs_used 0..256"
msgstr ""

#: ../../../AMDGPUUsage.rst:2294 ../../../AMDGPUUsage.rst:2297
msgid "max(0, ceil(vgprs_used / 4) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2296
msgid "GFX10 (wavefront size 64)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2296 ../../../AMDGPUUsage.rst:2299
msgid "max_vgpr 1..256"
msgstr ""

#: ../../../AMDGPUUsage.rst:2300
msgid "GFX10 (wavefront size 32)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2300
msgid "max(0, ceil(vgprs_used / 8) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2302
msgid ""
"Where vgprs_used is defined as the highest VGPR number explicitly referenced "
"plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:2307
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.VGPRS``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2310
msgid ""
"The :ref:`amdgpu-assembler` calculates this automatically for the selected "
"processor from values provided to the `.amdhsa_kernel` directive by the `."
"amdhsa_next_free_vgpr` nested directive (see :ref:`amdhsa-kernel-directives-"
"table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2321
msgid "9:6"
msgstr ""

#: ../../../AMDGPUUsage.rst:2321 ../../../AMDGPUUsage.rst:2726
msgid "4 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2321
msgid "GRANULATED_WAVEFRONT_SGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:2321
msgid ""
"Number of scalar register blocks used by a wavefront; granularity is device "
"specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2327 ../../../AMDGPUUsage.rst:2497
#: ../../../AMDGPUUsage.rst:3069
msgid "GFX6-GFX8"
msgstr ""

#: ../../../AMDGPUUsage.rst:2327 ../../../AMDGPUUsage.rst:2330
msgid "sgprs_used 0..112"
msgstr ""

#: ../../../AMDGPUUsage.rst:2328
msgid "max(0, ceil(sgprs_used / 8) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2330
msgid "GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:2331
msgid "2 * max(0, ceil(sgprs_used / 16) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2333
msgid "Reserved, must be 0. (128 SGPRs always allocated.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2337
msgid ""
"Where sgprs_used is defined as the highest SGPR number explicitly referenced "
"plus one, plus a target-specific number of additional special SGPRs for VCC, "
"FLAT_SCRATCH (GFX7+) and XNACK_MASK (GFX8+), and any additional target-"
"specific limitations. It does not include the 16 SGPRs added if a trap "
"handler is enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:2353
msgid ""
"The target-specific limitations and special SGPR layout are defined in the "
"hardware documentation, which can be found in the :ref:`amdgpu-processors` "
"table."
msgstr ""

#: ../../../AMDGPUUsage.rst:2362
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.SGPRS``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2365
msgid ""
"The :ref:`amdgpu-assembler` calculates this automatically for the selected "
"processor from values provided to the `.amdhsa_kernel` directive by the `."
"amdhsa_next_free_sgpr` and `.amdhsa_reserve_*` nested directives (see :ref:"
"`amdhsa-kernel-directives-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2377
msgid "11:10"
msgstr ""

#: ../../../AMDGPUUsage.rst:2377 ../../../AMDGPUUsage.rst:2385
#: ../../../AMDGPUUsage.rst:2398 ../../../AMDGPUUsage.rst:2411
#: ../../../AMDGPUUsage.rst:2424 ../../../AMDGPUUsage.rst:2515
#: ../../../AMDGPUUsage.rst:2626
msgid "2 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2377
msgid "PRIORITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:2377 ../../../AMDGPUUsage.rst:2437
#: ../../../AMDGPUUsage.rst:2457 ../../../AMDGPUUsage.rst:2480
#: ../../../AMDGPUUsage.rst:2489 ../../../AMDGPUUsage.rst:2588
#: ../../../AMDGPUUsage.rst:2634 ../../../AMDGPUUsage.rst:2650
#: ../../../AMDGPUUsage.rst:2669
msgid "Must be 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:2379
msgid "Start executing wavefront at the specified priority."
msgstr ""

#: ../../../AMDGPUUsage.rst:2382
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.PRIORITY``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2385
msgid "13:12"
msgstr ""

#: ../../../AMDGPUUsage.rst:2385
msgid "FLOAT_ROUND_MODE_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:2385
msgid ""
"Wavefront starts execution with specified rounding mode for single (32 bit) "
"floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:2392 ../../../AMDGPUUsage.rst:2405
msgid ""
"Floating point rounding mode values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-rounding-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2396 ../../../AMDGPUUsage.rst:2409
#: ../../../AMDGPUUsage.rst:2422 ../../../AMDGPUUsage.rst:2435
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.FLOAT_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2398
msgid "15:14"
msgstr ""

#: ../../../AMDGPUUsage.rst:2398
msgid "FLOAT_ROUND_MODE_16_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:2398
msgid ""
"Wavefront starts execution with specified rounding denorm mode for half/"
"double (16 and 64 bit) floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:2411
msgid "17:16"
msgstr ""

#: ../../../AMDGPUUsage.rst:2411
msgid "FLOAT_DENORM_MODE_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:2411
msgid ""
"Wavefront starts execution with specified denorm mode for single (32 bit)  "
"floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:2418 ../../../AMDGPUUsage.rst:2431
msgid ""
"Floating point denorm mode values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-denorm-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2424
msgid "19:18"
msgstr ""

#: ../../../AMDGPUUsage.rst:2424
msgid "FLOAT_DENORM_MODE_16_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:2424
msgid ""
"Wavefront starts execution with specified denorm mode for half/double (16 "
"and 64 bit) floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:2437
msgid "20"
msgstr ""

#: ../../../AMDGPUUsage.rst:2437
msgid "PRIV"
msgstr ""

#: ../../../AMDGPUUsage.rst:2439
msgid "Start executing wavefront in privilege trap handler mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:2443
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.PRIV``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2446
msgid "21"
msgstr ""

#: ../../../AMDGPUUsage.rst:2446
msgid "ENABLE_DX10_CLAMP"
msgstr ""

#: ../../../AMDGPUUsage.rst:2446
msgid ""
"Wavefront starts execution with DX10 clamp mode enabled. Used by the vector "
"ALU to force DX10 style treatment of NaN's (when set, clamp NaN to zero, "
"otherwise pass NaN through)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2455
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.DX10_CLAMP``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2457
msgid "22"
msgstr ""

#: ../../../AMDGPUUsage.rst:2457
msgid "DEBUG_MODE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2459
msgid "Start executing wavefront in single step mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:2462
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.DEBUG_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2465
msgid "23"
msgstr ""

#: ../../../AMDGPUUsage.rst:2465
msgid "ENABLE_IEEE_MODE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2465
msgid ""
"Wavefront starts execution with IEEE mode enabled. Floating point opcodes "
"that support exception flag gathering will quiet and propagate signaling-NaN "
"inputs per IEEE 754-2008. Min_dx10 and max_dx10 become IEEE 754-2008 "
"compliant due to signaling-NaN propagation and quieting."
msgstr ""

#: ../../../AMDGPUUsage.rst:2478
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.IEEE_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2480 ../../../AMDGPUUsage.rst:2690
msgid "24"
msgstr ""

#: ../../../AMDGPUUsage.rst:2480
msgid "BULKY"
msgstr ""

#: ../../../AMDGPUUsage.rst:2482
msgid "Only one work-group allowed to execute on a compute unit."
msgstr ""

#: ../../../AMDGPUUsage.rst:2486
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.BULKY``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2489 ../../../AMDGPUUsage.rst:2700
msgid "25"
msgstr ""

#: ../../../AMDGPUUsage.rst:2489
msgid "CDBG_USER"
msgstr ""

#: ../../../AMDGPUUsage.rst:2491
msgid "Flag that can be used to control debugging code."
msgstr ""

#: ../../../AMDGPUUsage.rst:2494
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.CDBG_USER``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2497 ../../../AMDGPUUsage.rst:2703
msgid "26"
msgstr ""

#: ../../../AMDGPUUsage.rst:2497
msgid "FP16_OVFL"
msgstr ""

#: ../../../AMDGPUUsage.rst:2513 ../../../AMDGPUUsage.rst:2919
#: ../../../AMDGPUUsage.rst:3073 ../../../AMDGPUUsage.rst:3108
#: ../../../AMDGPUUsage.rst:6317
msgid "GFX9-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:2500
msgid "Wavefront starts execution with specified fp16 overflow mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:2504
msgid "If 0, fp16 overflow generates +/-INF values."
msgstr ""

#: ../../../AMDGPUUsage.rst:2506
msgid ""
"If 1, fp16 overflow that is the result of an +/-INF input value or divide by "
"0 produces a +/-INF, otherwise clamps computed overflow to +/-MAX_FP16 as "
"appropriate."
msgstr ""

#: ../../../AMDGPUUsage.rst:2513
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.FP16_OVFL``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2515
msgid "28:27"
msgstr ""

#: ../../../AMDGPUUsage.rst:2516 ../../../AMDGPUUsage.rst:2709
msgid "29"
msgstr ""

#: ../../../AMDGPUUsage.rst:2516
msgid "WGP_MODE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2519
msgid "If 0 execute work-groups in CU wavefront execution mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:2521
msgid "If 1 execute work-groups on in WGP wavefront execution mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:2524
msgid "See :ref:`amdgpu-amdhsa-memory-model`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2526
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.WGP_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2528 ../../../AMDGPUUsage.rst:2711
msgid "30"
msgstr ""

#: ../../../AMDGPUUsage.rst:2528
msgid "MEM_ORDERED"
msgstr ""

#: ../../../AMDGPUUsage.rst:2531
msgid "Controls the behavior of the waitcnt's vmcnt and vscnt counters."
msgstr ""

#: ../../../AMDGPUUsage.rst:2535
msgid ""
"If 0 vmcnt reports completion of load and atomic with return out of order "
"with sample instructions, and the vscnt reports the completion of store and "
"atomic without return in order."
msgstr ""

#: ../../../AMDGPUUsage.rst:2542
msgid ""
"If 1 vmcnt reports completion of load, atomic with return and sample "
"instructions in order, and the vscnt reports the completion of store and "
"atomic without return in order."
msgstr ""

#: ../../../AMDGPUUsage.rst:2549
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.MEM_ORDERED``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2551 ../../../AMDGPUUsage.rst:2714
msgid "31"
msgstr ""

#: ../../../AMDGPUUsage.rst:2551
msgid "FWD_PROGRESS"
msgstr ""

#: ../../../AMDGPUUsage.rst:2554
msgid "If 0 execute SIMD wavefronts using oldest first policy."
msgstr ""

#: ../../../AMDGPUUsage.rst:2556
msgid ""
"If 1 execute SIMD wavefronts to ensure wavefronts will make some forward "
"progress."
msgstr ""

#: ../../../AMDGPUUsage.rst:2560
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.FWD_PROGRESS``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2562
msgid "**Total size 4 bytes**"
msgstr ""

#: ../../../AMDGPUUsage.rst:2567
msgid "compute_pgm_rsrc2 for GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:2573
msgid "ENABLE_SGPR_PRIVATE_SEGMENT _WAVEFRONT_OFFSET"
msgstr ""

#: ../../../AMDGPUUsage.rst:2573
msgid ""
"Enable the setup of the SGPR wavefront scratch offset system register (see :"
"ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2578
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.SCRATCH_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2580
msgid "5:1"
msgstr ""

#: ../../../AMDGPUUsage.rst:2580
msgid "USER_SGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:2580
msgid ""
"The total number of SGPR user data registers requested. This number must "
"match the number of user data registers enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:2586
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.USER_SGPR``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2588
msgid "ENABLE_TRAP_HANDLER"
msgstr ""

#: ../../../AMDGPUUsage.rst:2590
msgid ""
"This bit represents ``COMPUTE_PGM_RSRC2.TRAP_PRESENT``, which is set by the "
"CP if the runtime has installed a trap handler."
msgstr ""

#: ../../../AMDGPUUsage.rst:2595
msgid "ENABLE_SGPR_WORKGROUP_ID_X"
msgstr ""

#: ../../../AMDGPUUsage.rst:2595
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the X "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2601
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_X_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2603
msgid "ENABLE_SGPR_WORKGROUP_ID_Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:2603
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the Y "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2609
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_Y_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2611
msgid "ENABLE_SGPR_WORKGROUP_ID_Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:2611
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the Z "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2617
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_Z_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2619
msgid "ENABLE_SGPR_WORKGROUP_INFO"
msgstr ""

#: ../../../AMDGPUUsage.rst:2619
msgid ""
"Enable the setup of the system SGPR register for work-group information "
"(see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2624
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_SIZE_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2626
msgid "12:11"
msgstr ""

#: ../../../AMDGPUUsage.rst:2626
msgid "ENABLE_VGPR_WORKITEM_ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:2626
msgid ""
"Enable the setup of the VGPR system registers used for the work-item ID. :"
"ref:`amdgpu-amdhsa-system-vgpr-work-item-id-enumeration-values-table` "
"defines the values."
msgstr ""

#: ../../../AMDGPUUsage.rst:2632
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TIDIG_CMP_CNT``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2634
msgid "ENABLE_EXCEPTION_ADDRESS_WATCH"
msgstr ""

#: ../../../AMDGPUUsage.rst:2636
msgid ""
"Wavefront starts execution with address watch exceptions enabled which are "
"generated when L1 has witnessed a thread access an *address of interest*."
msgstr ""

#: ../../../AMDGPUUsage.rst:2644
msgid ""
"CP is responsible for filling in the address watch bit in "
"``COMPUTE_PGM_RSRC2.EXCP_EN_MSB`` according to what the runtime requests."
msgstr ""

#: ../../../AMDGPUUsage.rst:2650
msgid "14"
msgstr ""

#: ../../../AMDGPUUsage.rst:2650
msgid "ENABLE_EXCEPTION_MEMORY"
msgstr ""

#: ../../../AMDGPUUsage.rst:2652
msgid ""
"Wavefront starts execution with memory violation exceptions exceptions "
"enabled which are generated when a memory violation has occurred for this "
"wavefront from L1 or LDS (write-to-read-only-memory, mis-aligned atomic, LDS "
"address out of range, illegal address, etc.)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2664
msgid ""
"CP sets the memory violation bit in ``COMPUTE_PGM_RSRC2.EXCP_EN_MSB`` "
"according to what the runtime requests."
msgstr ""

#: ../../../AMDGPUUsage.rst:2669
msgid "23:15"
msgstr ""

#: ../../../AMDGPUUsage.rst:2669
msgid "9 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2669
msgid "GRANULATED_LDS_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2671
msgid ""
"CP uses the rounded value from the dispatch packet, not this value, as the "
"dispatch may contain dynamically allocated group segment memory. CP writes "
"directly to ``COMPUTE_PGM_RSRC2.LDS_SIZE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2680
msgid ""
"Amount of group segment (LDS) to allocate for each work-group. Granularity "
"is device specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2685
msgid "GFX6:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2686
msgid "roundup(lds-size / (64 * 4))"
msgstr ""

#: ../../../AMDGPUUsage.rst:2688
msgid "GFX7-GFX10:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2688
msgid "roundup(lds-size / (128 * 4))"
msgstr ""

#: ../../../AMDGPUUsage.rst:2690
msgid "ENABLE_EXCEPTION_IEEE_754_FP _INVALID_OPERATION"
msgstr ""

#: ../../../AMDGPUUsage.rst:2690
msgid "Wavefront starts execution with specified exceptions enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:2694
msgid ""
"Used by CP to set up ``COMPUTE_PGM_RSRC2.EXCP_EN`` (set from bits 0..6)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2698
msgid "IEEE 754 FP Invalid Operation"
msgstr ""

#: ../../../AMDGPUUsage.rst:2700
msgid "ENABLE_EXCEPTION_FP_DENORMAL _SOURCE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2700
msgid "FP Denormal one or more input operands is a denormal number"
msgstr ""

#: ../../../AMDGPUUsage.rst:2703
msgid "ENABLE_EXCEPTION_IEEE_754_FP _DIVISION_BY_ZERO"
msgstr ""

#: ../../../AMDGPUUsage.rst:2703
msgid "IEEE 754 FP Division by Zero"
msgstr ""

#: ../../../AMDGPUUsage.rst:2705
msgid "27"
msgstr ""

#: ../../../AMDGPUUsage.rst:2705
msgid "ENABLE_EXCEPTION_IEEE_754_FP _OVERFLOW"
msgstr ""

#: ../../../AMDGPUUsage.rst:2705
msgid "IEEE 754 FP FP Overflow"
msgstr ""

#: ../../../AMDGPUUsage.rst:2707
msgid "28"
msgstr ""

#: ../../../AMDGPUUsage.rst:2707
msgid "ENABLE_EXCEPTION_IEEE_754_FP _UNDERFLOW"
msgstr ""

#: ../../../AMDGPUUsage.rst:2707
msgid "IEEE 754 FP Underflow"
msgstr ""

#: ../../../AMDGPUUsage.rst:2709
msgid "ENABLE_EXCEPTION_IEEE_754_FP _INEXACT"
msgstr ""

#: ../../../AMDGPUUsage.rst:2709
msgid "IEEE 754 FP Inexact"
msgstr ""

#: ../../../AMDGPUUsage.rst:2711
msgid "ENABLE_EXCEPTION_INT_DIVIDE_BY _ZERO"
msgstr ""

#: ../../../AMDGPUUsage.rst:2711
msgid "Integer Division by Zero (rcp_iflag_f32 instruction only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2715 ../../../AMDGPUUsage.rst:2730
msgid "**Total size 4 bytes.**"
msgstr ""

#: ../../../AMDGPUUsage.rst:2720
msgid "compute_pgm_rsrc3 for GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:2726
msgid "3:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:2726
msgid "SHARED_VGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:2726
msgid ""
"Number of shared VGPRs for wavefront size 64. Granularity 8. Value 0-120. "
"compute_pgm_rsrc1.vgprs + shared_vgpr_cnt cannot exceed 64."
msgstr ""

#: ../../../AMDGPUUsage.rst:2728
msgid "31:4"
msgstr ""

#: ../../../AMDGPUUsage.rst:2728
msgid "28 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2735
msgid "Floating Point Rounding Mode Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:2739 ../../../AMDGPUUsage.rst:2753
#: ../../../AMDGPUUsage.rst:2768
msgid "Enumeration Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:2741
msgid "FLOAT_ROUND_MODE_NEAR_EVEN"
msgstr ""

#: ../../../AMDGPUUsage.rst:2741
msgid "Round Ties To Even"
msgstr ""

#: ../../../AMDGPUUsage.rst:2742
msgid "FLOAT_ROUND_MODE_PLUS_INFINITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:2742
msgid "Round Toward +infinity"
msgstr ""

#: ../../../AMDGPUUsage.rst:2743
msgid "FLOAT_ROUND_MODE_MINUS_INFINITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:2743
msgid "Round Toward -infinity"
msgstr ""

#: ../../../AMDGPUUsage.rst:2744
msgid "FLOAT_ROUND_MODE_ZERO"
msgstr ""

#: ../../../AMDGPUUsage.rst:2744
msgid "Round Toward 0"
msgstr ""

#: ../../../AMDGPUUsage.rst:2749
msgid "Floating Point Denorm Mode Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:2755
msgid "FLOAT_DENORM_MODE_FLUSH_SRC_DST"
msgstr ""

#: ../../../AMDGPUUsage.rst:2755
msgid "Flush Source and Destination Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:2757
msgid "FLOAT_DENORM_MODE_FLUSH_DST"
msgstr ""

#: ../../../AMDGPUUsage.rst:2757
msgid "Flush Output Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:2758
msgid "FLOAT_DENORM_MODE_FLUSH_SRC"
msgstr ""

#: ../../../AMDGPUUsage.rst:2758
msgid "Flush Source Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:2759
msgid "FLOAT_DENORM_MODE_FLUSH_NONE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2759
msgid "No Flush"
msgstr ""

#: ../../../AMDGPUUsage.rst:2764
msgid "System VGPR Work-Item ID Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:2770
msgid "SYSTEM_VGPR_WORKITEM_ID_X"
msgstr ""

#: ../../../AMDGPUUsage.rst:2770
msgid "Set work-item X dimension ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:2772
msgid "SYSTEM_VGPR_WORKITEM_ID_X_Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:2772
msgid "Set work-item X and Y dimensions ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:2774
msgid "SYSTEM_VGPR_WORKITEM_ID_X_Y_Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:2774
msgid "Set work-item X, Y and Z dimensions ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:2776
msgid "SYSTEM_VGPR_WORKITEM_ID_UNDEFINED"
msgstr ""

#: ../../../AMDGPUUsage.rst:2776
msgid "Undefined."
msgstr ""

#: ../../../AMDGPUUsage.rst:2782
msgid "Initial Kernel Execution State"
msgstr ""

#: ../../../AMDGPUUsage.rst:2784
msgid ""
"This section defines the register state that will be set up by the packet "
"processor prior to the start of execution of every wavefront. This is "
"limited by the constraints of the hardware controllers of CP/ADC/SPI."
msgstr ""

#: ../../../AMDGPUUsage.rst:2788
msgid ""
"The order of the SGPR registers is defined, but the compiler can specify "
"which ones are actually setup in the kernel descriptor using the "
"``enable_sgpr_*`` bit fields (see :ref:`amdgpu-amdhsa-kernel-descriptor`). "
"The register numbers used for enabled registers are dense starting at SGPR0: "
"the first enabled register is SGPR0, the next enabled register is SGPR1 "
"etc.; disabled registers do not have an SGPR number."
msgstr ""

#: ../../../AMDGPUUsage.rst:2795
msgid ""
"The initial SGPRs comprise up to 16 User SRGPs that are set by CP and apply "
"to all wavefronts of the grid. It is possible to specify more than 16 User "
"SGPRs using the ``enable_sgpr_*`` bit fields, in which case only the first "
"16 are actually initialized. These are then immediately followed by the "
"System SGPRs that are set up by ADC/SPI and can have different values for "
"each wavefront of the grid dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:2802
msgid ""
"SGPR register initial state is defined in :ref:`amdgpu-amdhsa-sgpr-register-"
"set-up-order-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2805
msgid "SGPR Register Set Up Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:2809
msgid "SGPR Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:2809 ../../../AMDGPUUsage.rst:3012
msgid "Name (kernel descriptor enable field)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2809
msgid "Number of SGPRs"
msgstr ""

#: ../../../AMDGPUUsage.rst:2813 ../../../AMDGPUUsage.rst:3016
msgid "First"
msgstr ""

#: ../../../AMDGPUUsage.rst:2813
msgid "Private Segment Buffer (enable_sgpr_private _segment_buffer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2813
msgid ""
"V# that can be used, together with Scratch Wavefront Offset as an offset, to "
"access the private memory space using a segment address."
msgstr ""

#: ../../../AMDGPUUsage.rst:2819
msgid "CP uses the value provided by the runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:2821 ../../../AMDGPUUsage.rst:2824
#: ../../../AMDGPUUsage.rst:2828 ../../../AMDGPUUsage.rst:2837
#: ../../../AMDGPUUsage.rst:2840 ../../../AMDGPUUsage.rst:2921
#: ../../../AMDGPUUsage.rst:2943 ../../../AMDGPUUsage.rst:2951
#: ../../../AMDGPUUsage.rst:2962 ../../../AMDGPUUsage.rst:2973
#: ../../../AMDGPUUsage.rst:2976 ../../../AMDGPUUsage.rst:2979
#: ../../../AMDGPUUsage.rst:2982 ../../../AMDGPUUsage.rst:2985
#: ../../../AMDGPUUsage.rst:3019 ../../../AMDGPUUsage.rst:3022
msgid "then"
msgstr ""

#: ../../../AMDGPUUsage.rst:2821
msgid "Dispatch Ptr (enable_sgpr_dispatch_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2821
msgid ""
"64 bit address of AQL dispatch packet for kernel dispatch actually executing."
msgstr ""

#: ../../../AMDGPUUsage.rst:2824
msgid "Queue Ptr (enable_sgpr_queue_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2824
msgid ""
"64 bit address of amd_queue_t object for AQL queue on which the dispatch "
"packet was queued."
msgstr ""

#: ../../../AMDGPUUsage.rst:2828
msgid "Kernarg Segment Ptr (enable_sgpr_kernarg _segment_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2828
msgid ""
"64 bit address of Kernarg segment. This is directly copied from the "
"kernarg_address in the kernel dispatch packet."
msgstr ""

#: ../../../AMDGPUUsage.rst:2834 ../../../AMDGPUUsage.rst:2932
msgid ""
"Having CP load it once avoids loading it at the beginning of every wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2837
msgid "Dispatch Id (enable_sgpr_dispatch_id)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2837
msgid "64 bit Dispatch ID of the dispatch packet being executed."
msgstr ""

#: ../../../AMDGPUUsage.rst:2840
msgid "Flat Scratch Init (enable_sgpr_flat_scratch _init)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2840
msgid "This is 2 SGPRs:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2842 ../../../AMDGPUUsage.rst:3086
msgid "GFX6"
msgstr ""

#: ../../../AMDGPUUsage.rst:2843
msgid "Not supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:2900 ../../../AMDGPUUsage.rst:3102
msgid "GFX7-GFX8"
msgstr ""

#: ../../../AMDGPUUsage.rst:2845
msgid ""
"The first SGPR is a 32 bit byte offset from ``SH_HIDDEN_PRIVATE_BASE_VIMID`` "
"to per SPI base of memory for scratch for the queue executing the kernel "
"dispatch. CP obtains this from the runtime. (The Scratch Segment Buffer base "
"address is ``SH_HIDDEN_PRIVATE_BASE_VIMID`` plus this offset.) The value of "
"Scratch Wavefront Offset must be added to this offset by the kernel machine "
"code, right shifted by 8, and moved to the FLAT_SCRATCH_HI SGPR register. "
"FLAT_SCRATCH_HI corresponds to SGPRn-4 on GFX7, and SGPRn-6 on GFX8 (where "
"SGPRn is the highest numbered SGPR allocated to the wavefront). "
"FLAT_SCRATCH_HI is multiplied by 256 (as it is in units of 256 bytes) and "
"added to ``SH_HIDDEN_PRIVATE_BASE_VIMID`` to calculate the per wavefront "
"FLAT SCRATCH BASE in flat memory instructions that access the scratch "
"apperture."
msgstr ""

#: ../../../AMDGPUUsage.rst:2879
msgid ""
"The second SGPR is 32 bit byte size of a single work-item's scratch memory "
"usage. CP obtains this from the runtime, and it is always a multiple of "
"DWORD. CP checks that the value in the kernel dispatch packet Private "
"Segment Byte Size is not larger, and requests the runtime to increase the "
"queue's scratch size if necessary. The kernel code must move it to "
"FLAT_SCRATCH_LO which is SGPRn-3 on GFX7 and SGPRn-5 on GFX8. "
"FLAT_SCRATCH_LO is used as the FLAT SCRATCH SIZE in flat memory "
"instructions. Having CP load it once avoids loading it at the beginning of "
"every wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2903
msgid ""
"This is the 64 bit base address of the per SPI scratch backing memory "
"managed by SPI for the queue executing the kernel dispatch. CP obtains this "
"from the runtime (and divides it if there are multiple Shader Arrays each "
"with its own SPI). The value of Scratch Wavefront Offset must be added by "
"the kernel machine code and the result moved to the FLAT_SCRATCH SGPR which "
"is SGPRn-6 and SGPRn-5. It is used as the FLAT SCRATCH BASE in flat memory "
"instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:2921
msgid "Private Segment Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:2921
msgid ""
"The 32 bit byte size of a (enable_sgpr_private single work-item's "
"scratch_segment_size) memory allocation. This is the value from the kernel "
"dispatch packet Private Segment Byte Size rounded up by CP to a multiple of "
"DWORD."
msgstr ""

#: ../../../AMDGPUUsage.rst:2936
msgid ""
"This is not used for GFX7-GFX8 since it is the same value as the second SGPR "
"of Flat Scratch Init. However, it may be needed for GFX9-GFX10 which changes "
"the meaning of the Flat Scratch Init value."
msgstr ""

#: ../../../AMDGPUUsage.rst:2943
msgid "Grid Work-Group Count X (enable_sgpr_grid _workgroup_count_X)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2943
msgid ""
"32 bit count of the number of work-groups in the X dimension for the grid "
"being executed. Computed from the fields in the kernel dispatch packet as "
"((grid_size.x + workgroup_size.x - 1) / workgroup_size.x)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2951
msgid ""
"Grid Work-Group Count Y (enable_sgpr_grid _workgroup_count_Y && less than 16 "
"previous SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2951
msgid ""
"32 bit count of the number of work-groups in the Y dimension for the grid "
"being executed. Computed from the fields in the kernel dispatch packet as "
"((grid_size.y + workgroup_size.y - 1) / workgroupSize.y)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2960 ../../../AMDGPUUsage.rst:2971
msgid "Only initialized if <16 previous SGPRs initialized."
msgstr ""

#: ../../../AMDGPUUsage.rst:2962
msgid ""
"Grid Work-Group Count Z (enable_sgpr_grid _workgroup_count_Z && less than 16 "
"previous SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2962
msgid ""
"32 bit count of the number of work-groups in the Z dimension for the grid "
"being executed. Computed from the fields in the kernel dispatch packet as "
"((grid_size.z + workgroup_size.z - 1) / workgroupSize.z)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2973
msgid "Work-Group Id X (enable_sgpr_workgroup_id _X)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2973
msgid "32 bit work-group id in X dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2976
msgid "Work-Group Id Y (enable_sgpr_workgroup_id _Y)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2976
msgid "32 bit work-group id in Y dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2979
msgid "Work-Group Id Z (enable_sgpr_workgroup_id _Z)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2979
msgid "32 bit work-group id in Z dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2982
msgid "Work-Group Info (enable_sgpr_workgroup _info)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2982
msgid ""
"{first_wavefront, 14'b0000, ordered_append_term[10:0], "
"threadgroup_size_in_wavefronts[5:0]}"
msgstr ""

#: ../../../AMDGPUUsage.rst:2985
msgid ""
"Scratch Wavefront Offset (enable_sgpr_private _segment_wavefront_offset)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2985
msgid ""
"32 bit byte offset from base of scratch base of queue executing the kernel "
"dispatch. Must be used as an offset with Private segment address when using "
"Scratch Segment Buffer. It must be used to set up FLAT SCRATCH for flat "
"addressing (see :ref:`amdgpu-amdhsa-flat-scratch`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2998
msgid ""
"The order of the VGPR registers is defined, but the compiler can specify "
"which ones are actually setup in the kernel descriptor using the "
"``enable_vgpr*`` bit fields (see :ref:`amdgpu-amdhsa-kernel-descriptor`). "
"The register numbers used for enabled registers are dense starting at VGPR0: "
"the first enabled register is VGPR0, the next enabled register is VGPR1 "
"etc.; disabled registers do not have a VGPR number."
msgstr ""

#: ../../../AMDGPUUsage.rst:3005
msgid ""
"VGPR register initial state is defined in :ref:`amdgpu-amdhsa-vgpr-register-"
"set-up-order-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3008
msgid "VGPR Register Set Up Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:3012
msgid "VGPR Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:3012
msgid "Number of VGPRs"
msgstr ""

#: ../../../AMDGPUUsage.rst:3016
msgid "Work-Item Id X (Always initialized)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3016
msgid "32 bit work item id in X dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:3019
msgid "Work-Item Id Y (enable_vgpr_workitem_id > 0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3019
msgid "32 bit work item id in Y dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:3022
msgid "Work-Item Id Z (enable_vgpr_workitem_id > 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3022
msgid "32 bit work item id in Z dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:3027
msgid "The setting of registers is done by GPU CP/ADC/SPI hardware as follows:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3029
msgid ""
"SGPRs before the Work-Group Ids are set by CP using the 16 User Data "
"registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:3031
msgid ""
"Work-group Id registers X, Y, Z are set by ADC which supports any "
"combination including none."
msgstr ""

#: ../../../AMDGPUUsage.rst:3033
msgid ""
"Scratch Wavefront Offset is set by SPI in a per wavefront basis which is why "
"its value cannot included with the flat scratch init value which is per "
"queue."
msgstr ""

#: ../../../AMDGPUUsage.rst:3035
msgid ""
"The VGPRs are set by SPI which only supports specifying either (X), (X, Y) "
"or (X, Y, Z)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3038
msgid ""
"Flat Scratch register pair are adjacent SGRRs so they can be moved as a 64 "
"bit value to the hardware required SGPRn-3 and SGPRn-4 respectively."
msgstr ""

#: ../../../AMDGPUUsage.rst:3041
msgid ""
"The global segment can be accessed either using buffer instructions (GFX6 "
"which has V# 64 bit address support), flat instructions (GFX7-GFX10), or "
"global instructions (GFX9-GFX10)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3045
msgid ""
"If buffer operations are used then the compiler can generate a V# with the "
"following properties:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3048
msgid "base address of 0"
msgstr ""

#: ../../../AMDGPUUsage.rst:3049
msgid "no swizzle"
msgstr ""

#: ../../../AMDGPUUsage.rst:3050
msgid "ATC: 1 if IOMMU present (such as APU)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3051
msgid "ptr64: 1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3052
msgid ""
"MTYPE set to support memory coherence that matches the runtime (such as CC "
"for APU and NC for dGPU)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3058
msgid "Kernel Prolog"
msgstr ""

#: ../../../AMDGPUUsage.rst:3063
msgid "M0"
msgstr ""

#: ../../../AMDGPUUsage.rst:3066
msgid ""
"The M0 register must be initialized with a value at least the total LDS size "
"if the kernel may access LDS via DS or flat operations. Total LDS size is "
"available in dispatch packet. For M0, it is also possible to use maximum "
"possible value of LDS for given target (0x7FFF for GFX6 and 0xFFFF for GFX7-"
"GFX8)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3072
msgid ""
"The M0 register is not used for range checking LDS accesses and so does not "
"need to be initialized in the prolog."
msgstr ""

#: ../../../AMDGPUUsage.rst:3078
msgid "Flat Scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:3080
msgid ""
"If the kernel may use flat operations to access scratch memory, the prolog "
"code must set up FLAT_SCRATCH register pair (FLAT_SCRATCH_LO/FLAT_SCRATCH_HI "
"which are in SGPRn-4/SGPRn-3). Initialization uses Flat Scratch Init and "
"Scratch Wavefront Offset SGPR registers (see :ref:`amdgpu-amdhsa-initial-"
"kernel-execution-state`):"
msgstr ""

#: ../../../AMDGPUUsage.rst:3086
msgid "Flat scratch is not supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:3089
msgid ""
"The low word of Flat Scratch Init is 32 bit byte offset from "
"``SH_HIDDEN_PRIVATE_BASE_VIMID`` to the base of scratch backing memory being "
"managed by SPI for the queue executing the kernel dispatch. This is the same "
"value used in the Scratch Segment Buffer V# base address. The prolog must "
"add the value of Scratch Wavefront Offset to get the wavefront's byte "
"scratch backing memory offset from ``SH_HIDDEN_PRIVATE_BASE_VIMID``. Since "
"FLAT_SCRATCH_LO is in units of 256 bytes, the offset must be right shifted "
"by 8 before moving into FLAT_SCRATCH_LO."
msgstr ""

#: ../../../AMDGPUUsage.rst:3097
msgid ""
"The second word of Flat Scratch Init is 32 bit byte size of a single work-"
"items scratch memory usage. This is directly loaded from the kernel dispatch "
"packet Private Segment Byte Size and rounded up to a multiple of DWORD. "
"Having CP load it once avoids loading it at the beginning of every "
"wavefront. The prolog must move it to FLAT_SCRATCH_LO for use as FLAT "
"SCRATCH SIZE."
msgstr ""

#: ../../../AMDGPUUsage.rst:3105
msgid ""
"The Flat Scratch Init is the 64 bit address of the base of scratch backing "
"memory being managed by SPI for the queue executing the kernel dispatch. The "
"prolog must add the value of Scratch Wavefront Offset and moved to the "
"FLAT_SCRATCH pair for use as the flat scratch base in flat memory "
"instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:3113
msgid "Memory Model"
msgstr ""

#: ../../../AMDGPUUsage.rst:3115
msgid ""
"This section describes the mapping of LLVM memory model onto AMDGPU machine "
"code (see :ref:`memmodel`). *The implementation is WIP.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:3121
msgid ""
"The AMDGPU backend supports the memory synchronization scopes specified in :"
"ref:`amdgpu-memory-scopes`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3124
msgid ""
"The code sequences used to implement the memory model are defined in table :"
"ref:`amdgpu-amdhsa-memory-model-code-sequences-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3127
msgid ""
"The sequences specify the order of instructions that a single thread must "
"execute. The ``s_waitcnt`` and ``buffer_wbinvl1_vol`` are defined with "
"respect to other memory instructions executed by the same thread. This "
"allows them to be moved earlier or later which can allow them to be combined "
"with other instances of the same instruction, or hoisted/sunk out of loops "
"to improve performance. Only the instructions related to the memory model "
"are given; additional ``s_waitcnt`` instructions are required to ensure "
"registers are defined before being used. These may be able to be combined "
"with the memory model ``s_waitcnt`` instructions as described above."
msgstr ""

#: ../../../AMDGPUUsage.rst:3137
msgid "The AMDGPU backend supports the following memory models:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3140
msgid "HSA Memory Model [HSA]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:3140
msgid ""
"The HSA memory model uses a single happens-before relation for all address "
"spaces (see :ref:`amdgpu-address-spaces`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3153
msgid "OpenCL Memory Model [OpenCL]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:3143
msgid ""
"The OpenCL memory model which has separate happens-before relations for the "
"global and local address spaces. Only a fence specifying both global and "
"local address space, and seq_cst instructions join the relationships. Since "
"the LLVM ``memfence`` instruction does not allow an address space to be "
"specified the OpenCL fence has to convervatively assume both local and "
"global address space was specified. However, optimizations can often be done "
"to eliminate the additional ``s_waitcnt`` instructions when there are no "
"intervening memory instructions which access the corresponding address "
"space. The code sequences in the table indicate what can be omitted for the "
"OpenCL memory. The target triple environment is used to determine if the "
"source language is OpenCL (see :ref:`amdgpu-opencl`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3155
msgid ""
"``ds/flat_load/store/atomic`` instructions to local memory are termed LDS "
"operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:3158
msgid ""
"``buffer/global/flat_load/store/atomic`` instructions to global memory are "
"termed vector memory operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:3161
msgid "For GFX6-GFX9:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3163 ../../../AMDGPUUsage.rst:3212
msgid "Each agent has multiple shader arrays (SA)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3164
msgid "Each SA has multiple compute units (CU)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3165 ../../../AMDGPUUsage.rst:3215
msgid "Each CU has multiple SIMDs that execute wavefronts."
msgstr ""

#: ../../../AMDGPUUsage.rst:3166
msgid ""
"The wavefronts for a single work-group are executed in the same CU but may "
"be executed by different SIMDs."
msgstr ""

#: ../../../AMDGPUUsage.rst:3168
msgid ""
"Each CU has a single LDS memory shared by the wavefronts of the work-groups "
"executing on it."
msgstr ""

#: ../../../AMDGPUUsage.rst:3170
msgid ""
"All LDS operations of a CU are performed as wavefront wide operations in a "
"global order and involve no caching. Completion is reported to a wavefront "
"in execution order."
msgstr ""

#: ../../../AMDGPUUsage.rst:3173
msgid ""
"The LDS memory has multiple request queues shared by the SIMDs of a CU. "
"Therefore, the LDS operations performed by different wavefronts of a work-"
"group can be reordered relative to each other, which can result in "
"reordering the visibility of vector memory operations with respect to LDS "
"operations of other wavefronts in the same work-group. A ``s_waitcnt "
"lgkmcnt(0)`` is required to ensure synchronization between LDS operations "
"and vector memory operations between wavefronts of a work-group, but not "
"between operations performed by the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:3181
msgid ""
"The vector memory operations are performed as wavefront wide operations and "
"completion is reported to a wavefront in execution order. The exception is "
"that for GFX7-GFX9 ``flat_load/store/atomic`` instructions can report out of "
"vector memory order if they access LDS memory, and out of LDS operation "
"order if they access global memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:3186
msgid ""
"The vector memory operations access a single vector L1 cache shared by all "
"SIMDs a CU. Therefore, no special action is required for coherence between "
"the lanes of a single wavefront, or for coherence between wavefronts in the "
"same work-group. A ``buffer_wbinvl1_vol`` is required for coherence between "
"wavefronts executing in different work-groups as they may be executing on "
"different CUs."
msgstr ""

#: ../../../AMDGPUUsage.rst:3191
msgid ""
"The scalar memory operations access a scalar L1 cache shared by all "
"wavefronts on a group of CUs. The scalar and vector L1 caches are not "
"coherent. However, scalar operations are used in a restricted way so do not "
"impact the memory model. See :ref:`amdgpu-amdhsa-memory-spaces`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3195
msgid ""
"The vector and scalar memory operations use an L2 cache shared by all CUs on "
"the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:3197 ../../../AMDGPUUsage.rst:3267
msgid ""
"The L2 cache has independent channels to service disjoint ranges of virtual "
"addresses."
msgstr ""

#: ../../../AMDGPUUsage.rst:3199
msgid ""
"Each CU has a separate request queue per channel. Therefore, the vector and "
"scalar memory operations performed by wavefronts executing in different work-"
"groups (which may be executing on different CUs) of an agent can be "
"reordered relative to each other. A ``s_waitcnt vmcnt(0)`` is required to "
"ensure synchronization between vector memory operations of different CUs. It "
"ensures a previous vector memory operation has completed before executing a "
"subsequent vector memory or LDS operation and so can be used to meet the "
"requirements of acquire and release."
msgstr ""

#: ../../../AMDGPUUsage.rst:3207 ../../../AMDGPUUsage.rst:3278
msgid ""
"The L2 cache can be kept coherent with other agents on some targets, or "
"ranges of virtual addresses can be set up to bypass it to ensure system "
"coherence."
msgstr ""

#: ../../../AMDGPUUsage.rst:3210
msgid "For GFX10:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3213
msgid "Each SA has multiple work-group processors (WGP)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3214
msgid "Each WGP has multiple compute units (CU)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3216
msgid ""
"The wavefronts for a single work-group are executed in the same WGP. In CU "
"wavefront execution mode the wavefronts may be executed by different SIMDs "
"in the same CU. In WGP wavefront execution mode the wavefronts may be "
"executed by different SIMDs in different CUs in the same WGP."
msgstr ""

#: ../../../AMDGPUUsage.rst:3221
msgid ""
"Each WGP has a single LDS memory shared by the wavefronts of the work-groups "
"executing on it."
msgstr ""

#: ../../../AMDGPUUsage.rst:3223
msgid ""
"All LDS operations of a WGP are performed as wavefront wide operations in a "
"global order and involve no caching. Completion is reported to a wavefront "
"in execution order."
msgstr ""

#: ../../../AMDGPUUsage.rst:3226
msgid ""
"The LDS memory has multiple request queues shared by the SIMDs of a WGP. "
"Therefore, the LDS operations performed by different wavefronts of a work-"
"group can be reordered relative to each other, which can result in "
"reordering the visibility of vector memory operations with respect to LDS "
"operations of other wavefronts in the same work-group. A ``s_waitcnt "
"lgkmcnt(0)`` is required to ensure synchronization between LDS operations "
"and vector memory operations between wavefronts of a work-group, but not "
"between operations performed by the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:3234
msgid ""
"The vector memory operations are performed as wavefront wide operations. "
"Completion of load/store/sample operations are reported to a wavefront in "
"execution order of other load/store/sample operations performed by that "
"wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:3238
msgid ""
"The vector memory operations access a vector L0 cache. There is a single L0 "
"cache per CU. Each SIMD of a CU accesses the same L0 cache. Therefore, no "
"special action is required for coherence between the lanes of a single "
"wavefront. However, a ``BUFFER_GL0_INV`` is required for coherence between "
"wavefronts executing in the same work-group as they may be executing on "
"SIMDs of different CUs that access different L0s. A ``BUFFER_GL0_INV`` is "
"also required for coherence between wavefronts executing in different work-"
"groups as they may be executing on different WGPs."
msgstr ""

#: ../../../AMDGPUUsage.rst:3246
msgid ""
"The scalar memory operations access a scalar L0 cache shared by all "
"wavefronts on a WGP. The scalar and vector L0 caches are not coherent. "
"However, scalar operations are used in a restricted way so do not impact the "
"memory model. See :ref:`amdgpu-amdhsa-memory-spaces`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3250
msgid ""
"The vector and scalar memory L0 caches use an L1 cache shared by all WGPs on "
"the same SA. Therefore, no special action is required for coherence between "
"the wavefronts of a single work-group. However, a ``BUFFER_GL1_INV`` is "
"required for coherence between wavefronts executing in different work-groups "
"as they may be executing on different SAs that access different L1s."
msgstr ""

#: ../../../AMDGPUUsage.rst:3255
msgid ""
"The L1 caches have independent quadrants to service disjoint ranges of "
"virtual addresses."
msgstr ""

#: ../../../AMDGPUUsage.rst:3257
msgid ""
"Each L0 cache has a separate request queue per L1 quadrant. Therefore, the "
"vector and scalar memory operations performed by different wavefronts, "
"whether executing in the same or different work-groups (which may be "
"executing on different CUs accessing different L0s), can be reordered "
"relative to each other. A ``s_waitcnt vmcnt(0) & vscnt(0)`` is required to "
"ensure synchronization between vector memory operations of different "
"wavefronts. It ensures a previous vector memory operation has completed "
"before executing a subsequent vector memory or LDS operation and so can be "
"used to meet the requirements of acquire, release and sequential consistency."
msgstr ""

#: ../../../AMDGPUUsage.rst:3266
msgid "The L1 caches use an L2 cache shared by all SAs on the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:3269
msgid ""
"Each L1 quadrant of a single SA accesses a different L2 channel. Each L1 "
"quadrant has a separate request queue per L2 channel. Therefore, the vector "
"and scalar memory operations performed by wavefronts executing in different "
"work-groups (which may be executing on different SAs) of an agent can be "
"reordered relative to each other. A ``s_waitcnt vmcnt(0) & vscnt(0)`` is "
"required to ensure synchronization between vector memory operations of "
"different SAs. It ensures a previous vector memory operation has completed "
"before executing a subsequent vector memory and so can be used to meet the "
"requirements of acquire, release and sequential consistency."
msgstr ""

#: ../../../AMDGPUUsage.rst:3281
msgid ""
"Private address space uses ``buffer_load/store`` using the scratch V# (GFX6-"
"GFX8), or ``scratch_load/store`` (GFX9-GFX10). Since only a single thread is "
"accessing the memory, atomic memory orderings are not meaningful and all "
"accesses are treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3286
msgid ""
"Constant address space uses ``buffer/global_load`` instructions (or "
"equivalent scalar memory instructions). Since the constant address space "
"contents do not change during the execution of a kernel dispatch it is not "
"legal to perform stores, and atomic memory orderings are not meaningful and "
"all access are treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3292
msgid ""
"A memory synchronization scope wider than work-group is not meaningful for "
"the group (LDS) address space and is treated as work-group."
msgstr ""

#: ../../../AMDGPUUsage.rst:3295
msgid ""
"The memory model does not support the region address space which is treated "
"as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3298
msgid ""
"Acquire memory ordering is not meaningful on store atomic instructions and "
"is treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3301
msgid ""
"Release memory ordering is not meaningful on load atomic instructions and is "
"treated a non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3304
msgid ""
"Acquire-release memory ordering is not meaningful on load or store atomic "
"instructions and is treated as acquire and release respectively."
msgstr ""

#: ../../../AMDGPUUsage.rst:3307
msgid ""
"AMDGPU backend only uses scalar memory operations to access memory that is "
"proven to not change during the execution of the kernel dispatch. This "
"includes constant address space and global address space for program scope "
"const variables. Therefore the kernel machine code does not have to maintain "
"the scalar L1 cache to ensure it is coherent with the vector L1 cache. The "
"scalar and vector L1 caches are invalidated between kernel dispatches by CP "
"since constant address space data may change between kernel dispatch "
"executions. See :ref:`amdgpu-amdhsa-memory-spaces`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3316
msgid ""
"The one execption is if scalar writes are used to spill SGPR registers. In "
"this case the AMDGPU backend ensures the memory location used to spill is "
"never accessed by vector memory operations at the same time. If scalar "
"writes are used then a ``s_dcache_wb`` is inserted before the ``s_endpgm`` "
"and before a function return since the locations may be used for vector "
"memory instructions by a future wavefront that uses the same scratch area, "
"or a function call that creates a frame at the same address, respectively. "
"There is no need for a ``s_dcache_inv`` as all scalar writes are write-"
"before-read in the same thread."
msgstr ""

#: ../../../AMDGPUUsage.rst:3325
msgid ""
"For GFX6-GFX9, scratch backing memory (which is used for the private address "
"space) is accessed with MTYPE NC_NV (non-coherenent non-volatile). Since the "
"private address space is only accessed by a single thread, and is always "
"write-before-read, there is never a need to invalidate these entries from "
"the L1 cache. Hence all cache invalidates are done as ``*_vol`` to only "
"invalidate the volatile cache lines."
msgstr ""

#: ../../../AMDGPUUsage.rst:3332
msgid ""
"For GFX10, scratch backing memory (which is used for the private address "
"space) is accessed with MTYPE NC (non-coherenent). Since the private address "
"space is only accessed by a single thread, and is always write-before-read, "
"there is never a need to invalidate these entries from the L0 or L1 caches."
msgstr ""

#: ../../../AMDGPUUsage.rst:3337
msgid ""
"For GFX10, wavefronts are executed in native mode with in-order reporting of "
"loads and sample instructions. In this mode vmcnt reports completion of "
"load, atomic with return and sample instructions in order, and the vscnt "
"reports the completion of store and atomic without return in order. See "
"``MEM_ORDERED`` field in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3343
msgid ""
"In GFX10, wavefronts can be executed in WGP or CU wavefront execution mode:"
msgstr ""

#: ../../../AMDGPUUsage.rst:3345
msgid ""
"In WGP wavefront execution mode the wavefronts of a work-group are executed "
"on the SIMDs of both CUs of the WGP. Therefore, explicit management of the "
"per CU L0 caches is required for work-group synchronization. Also accesses "
"to L1 at work-group scope need to be expicitly ordered as the accesses from "
"different CUs are not ordered."
msgstr ""

#: ../../../AMDGPUUsage.rst:3350
msgid ""
"In CU wavefront execution mode the wavefronts of a work-group are executed "
"on the SIMDs of a single CU of the WGP. Therefore, all global memory access "
"by the work-group access the same L0 which in turn ensures L1 accesses are "
"ordered and so do not require explicit management of the caches for work-"
"group synchronization."
msgstr ""

#: ../../../AMDGPUUsage.rst:3356
msgid ""
"See ``WGP_MODE`` field in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-"
"table` and :ref:`amdgpu-target-features`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3359
msgid ""
"On dGPU the kernarg backing memory is accessed as UC (uncached) to avoid "
"needing to invalidate the L2 cache. For GFX6-GFX9, this also causes it to be "
"treated as non-volatile and so is not invalidated by ``*_vol``. On APU it is "
"accessed as CC (cache coherent) and so the L2 cache will be coherent with "
"the CPU and other agents."
msgstr ""

#: ../../../AMDGPUUsage.rst:3365
msgid "AMDHSA Memory Model Code Sequences GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:3369
msgid "LLVM Instr"
msgstr ""

#: ../../../AMDGPUUsage.rst:3369
msgid "LLVM Memory Ordering"
msgstr ""

#: ../../../AMDGPUUsage.rst:3369
msgid "LLVM Memory Sync Scope"
msgstr ""

#: ../../../AMDGPUUsage.rst:3369
msgid "AMDGPU Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:3369
msgid "AMDGPU Machine Code GFX6-9"
msgstr ""

#: ../../../AMDGPUUsage.rst:3369
msgid "AMDGPU Machine Code GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:3373
msgid "**Non-Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3375 ../../../AMDGPUUsage.rst:3389
msgid "load"
msgstr ""

#: ../../../AMDGPUUsage.rst:3376 ../../../AMDGPUUsage.rst:3391
#: ../../../AMDGPUUsage.rst:3409 ../../../AMDGPUUsage.rst:3411
#: ../../../AMDGPUUsage.rst:3419 ../../../AMDGPUUsage.rst:3421
#: ../../../AMDGPUUsage.rst:3429 ../../../AMDGPUUsage.rst:3440
#: ../../../AMDGPUUsage.rst:3490 ../../../AMDGPUUsage.rst:3547
#: ../../../AMDGPUUsage.rst:3576 ../../../AMDGPUUsage.rst:3625
#: ../../../AMDGPUUsage.rst:3686 ../../../AMDGPUUsage.rst:3986
#: ../../../AMDGPUUsage.rst:4077 ../../../AMDGPUUsage.rst:4130
#: ../../../AMDGPUUsage.rst:4177 ../../../AMDGPUUsage.rst:4268
#: ../../../AMDGPUUsage.rst:4321 ../../../AMDGPUUsage.rst:4526
#: ../../../AMDGPUUsage.rst:4665 ../../../AMDGPUUsage.rst:4818
#: ../../../AMDGPUUsage.rst:5134 ../../../AMDGPUUsage.rst:5138
#: ../../../AMDGPUUsage.rst:5326 ../../../AMDGPUUsage.rst:5425
#: ../../../AMDGPUUsage.rst:5429 ../../../AMDGPUUsage.rst:5435
#: ../../../AMDGPUUsage.rst:5439
msgid "generic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3375
msgid "!volatile & !nontemporal"
msgstr ""

#: ../../../AMDGPUUsage.rst:3377 ../../../AMDGPUUsage.rst:3408
#: ../../../AMDGPUUsage.rst:3410 ../../../AMDGPUUsage.rst:3441
msgid "buffer/global/flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:3379
msgid "volatile & !nontemporal"
msgstr ""

#: ../../../AMDGPUUsage.rst:3381 ../../../AMDGPUUsage.rst:3410
#: ../../../AMDGPUUsage.rst:3418 ../../../AMDGPUUsage.rst:3522
msgid "buffer/global/flat_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3384 ../../../AMDGPUUsage.rst:3394
msgid "nontemporal"
msgstr ""

#: ../../../AMDGPUUsage.rst:3386
msgid "buffer/global/flat_load glc=1 slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3381 ../../../AMDGPUUsage.rst:3418
msgid "buffer/global/flat_load glc=1 dlc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3386
msgid "buffer/global/flat_load slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3389 ../../../AMDGPUUsage.rst:3399
#: ../../../AMDGPUUsage.rst:3415 ../../../AMDGPUUsage.rst:3425
#: ../../../AMDGPUUsage.rst:3433 ../../../AMDGPUUsage.rst:3439
#: ../../../AMDGPUUsage.rst:3464 ../../../AMDGPUUsage.rst:3575
#: ../../../AMDGPUUsage.rst:3600 ../../../AMDGPUUsage.rst:3985
#: ../../../AMDGPUUsage.rst:4041 ../../../AMDGPUUsage.rst:4176
#: ../../../AMDGPUUsage.rst:4232 ../../../AMDGPUUsage.rst:4525
#: ../../../AMDGPUUsage.rst:4604 ../../../AMDGPUUsage.rst:5133
#: ../../../AMDGPUUsage.rst:5237 ../../../AMDGPUUsage.rst:5424
#: ../../../AMDGPUUsage.rst:5434
msgid "local"
msgstr ""

#: ../../../AMDGPUUsage.rst:3389 ../../../AMDGPUUsage.rst:3415
#: ../../../AMDGPUUsage.rst:3464
msgid "ds_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:3390 ../../../AMDGPUUsage.rst:3399
msgid "store"
msgstr ""

#: ../../../AMDGPUUsage.rst:3390
msgid "!nontemporal"
msgstr ""

#: ../../../AMDGPUUsage.rst:3392 ../../../AMDGPUUsage.rst:3420
#: ../../../AMDGPUUsage.rst:4040
msgid "buffer/global/flat_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:3396
msgid "buffer/global/flat_stote glc=1 slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3396
msgid "buffer/global/flat_store slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3399 ../../../AMDGPUUsage.rst:3425
#: ../../../AMDGPUUsage.rst:4076
msgid "ds_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:3400
msgid "**Unordered Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3402 ../../../AMDGPUUsage.rst:3408
#: ../../../AMDGPUUsage.rst:3410 ../../../AMDGPUUsage.rst:3415
#: ../../../AMDGPUUsage.rst:3418 ../../../AMDGPUUsage.rst:3438
#: ../../../AMDGPUUsage.rst:3441 ../../../AMDGPUUsage.rst:3464
#: ../../../AMDGPUUsage.rst:3490 ../../../AMDGPUUsage.rst:3522
#: ../../../AMDGPUUsage.rst:3547 ../../../AMDGPUUsage.rst:5132
#: ../../../AMDGPUUsage.rst:5137 ../../../AMDGPUUsage.rst:5237
#: ../../../AMDGPUUsage.rst:5325
msgid "load atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3402 ../../../AMDGPUUsage.rst:3403
#: ../../../AMDGPUUsage.rst:3404 ../../../AMDGPUUsage.rst:5461
msgid "unordered"
msgstr ""

#: ../../../AMDGPUUsage.rst:3402 ../../../AMDGPUUsage.rst:3403
#: ../../../AMDGPUUsage.rst:3404
msgid "*any*"
msgstr ""

#: ../../../AMDGPUUsage.rst:3402 ../../../AMDGPUUsage.rst:3403
msgid "*Same as non-atomic*."
msgstr ""

#: ../../../AMDGPUUsage.rst:3403 ../../../AMDGPUUsage.rst:3420
#: ../../../AMDGPUUsage.rst:3425 ../../../AMDGPUUsage.rst:3984
#: ../../../AMDGPUUsage.rst:3987 ../../../AMDGPUUsage.rst:4041
#: ../../../AMDGPUUsage.rst:4077 ../../../AMDGPUUsage.rst:4129
#: ../../../AMDGPUUsage.rst:5423 ../../../AMDGPUUsage.rst:5428
msgid "store atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3404 ../../../AMDGPUUsage.rst:3428
#: ../../../AMDGPUUsage.rst:3433 ../../../AMDGPUUsage.rst:3574
#: ../../../AMDGPUUsage.rst:3577 ../../../AMDGPUUsage.rst:3600
#: ../../../AMDGPUUsage.rst:3625 ../../../AMDGPUUsage.rst:3657
#: ../../../AMDGPUUsage.rst:3686 ../../../AMDGPUUsage.rst:4175
#: ../../../AMDGPUUsage.rst:4178 ../../../AMDGPUUsage.rst:4232
#: ../../../AMDGPUUsage.rst:4268 ../../../AMDGPUUsage.rst:4320
#: ../../../AMDGPUUsage.rst:4524 ../../../AMDGPUUsage.rst:4527
#: ../../../AMDGPUUsage.rst:4604 ../../../AMDGPUUsage.rst:4665
#: ../../../AMDGPUUsage.rst:4744 ../../../AMDGPUUsage.rst:4818
#: ../../../AMDGPUUsage.rst:5433 ../../../AMDGPUUsage.rst:5438
msgid "atomicrmw"
msgstr ""

#: ../../../AMDGPUUsage.rst:3404
msgid "*Same as monotonic atomic*."
msgstr ""

#: ../../../AMDGPUUsage.rst:3406
msgid "**Monotonic Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3408 ../../../AMDGPUUsage.rst:3410
#: ../../../AMDGPUUsage.rst:3415 ../../../AMDGPUUsage.rst:3418
#: ../../../AMDGPUUsage.rst:3420 ../../../AMDGPUUsage.rst:3425
#: ../../../AMDGPUUsage.rst:3428 ../../../AMDGPUUsage.rst:3433
#: ../../../AMDGPUUsage.rst:5462
msgid "monotonic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3408 ../../../AMDGPUUsage.rst:3415
#: ../../../AMDGPUUsage.rst:3420 ../../../AMDGPUUsage.rst:3425
#: ../../../AMDGPUUsage.rst:3428 ../../../AMDGPUUsage.rst:3433
#: ../../../AMDGPUUsage.rst:3438 ../../../AMDGPUUsage.rst:3574
#: ../../../AMDGPUUsage.rst:3717 ../../../AMDGPUUsage.rst:3984
#: ../../../AMDGPUUsage.rst:4175 ../../../AMDGPUUsage.rst:4366
#: ../../../AMDGPUUsage.rst:4524 ../../../AMDGPUUsage.rst:4894
#: ../../../AMDGPUUsage.rst:5132 ../../../AMDGPUUsage.rst:5423
#: ../../../AMDGPUUsage.rst:5433 ../../../AMDGPUUsage.rst:5443
msgid "singlethread"
msgstr ""

#: ../../../AMDGPUUsage.rst:3409 ../../../AMDGPUUsage.rst:3416
#: ../../../AMDGPUUsage.rst:3421 ../../../AMDGPUUsage.rst:3426
#: ../../../AMDGPUUsage.rst:3429 ../../../AMDGPUUsage.rst:3434
#: ../../../AMDGPUUsage.rst:3439 ../../../AMDGPUUsage.rst:3575
#: ../../../AMDGPUUsage.rst:3718 ../../../AMDGPUUsage.rst:3985
#: ../../../AMDGPUUsage.rst:4176 ../../../AMDGPUUsage.rst:4367
#: ../../../AMDGPUUsage.rst:4525 ../../../AMDGPUUsage.rst:4895
#: ../../../AMDGPUUsage.rst:5133 ../../../AMDGPUUsage.rst:5424
#: ../../../AMDGPUUsage.rst:5434 ../../../AMDGPUUsage.rst:5444
msgid "wavefront"
msgstr ""

#: ../../../AMDGPUUsage.rst:3410 ../../../AMDGPUUsage.rst:3417
#: ../../../AMDGPUUsage.rst:3422 ../../../AMDGPUUsage.rst:3427
#: ../../../AMDGPUUsage.rst:3430 ../../../AMDGPUUsage.rst:3435
#: ../../../AMDGPUUsage.rst:3441 ../../../AMDGPUUsage.rst:3464
#: ../../../AMDGPUUsage.rst:3490 ../../../AMDGPUUsage.rst:3577
#: ../../../AMDGPUUsage.rst:3600 ../../../AMDGPUUsage.rst:3625
#: ../../../AMDGPUUsage.rst:3719 ../../../AMDGPUUsage.rst:3987
#: ../../../AMDGPUUsage.rst:4041 ../../../AMDGPUUsage.rst:4077
#: ../../../AMDGPUUsage.rst:4178 ../../../AMDGPUUsage.rst:4232
#: ../../../AMDGPUUsage.rst:4268 ../../../AMDGPUUsage.rst:4368
#: ../../../AMDGPUUsage.rst:4527 ../../../AMDGPUUsage.rst:4604
#: ../../../AMDGPUUsage.rst:4665 ../../../AMDGPUUsage.rst:4896
#: ../../../AMDGPUUsage.rst:5137 ../../../AMDGPUUsage.rst:5237
#: ../../../AMDGPUUsage.rst:5425 ../../../AMDGPUUsage.rst:5435
#: ../../../AMDGPUUsage.rst:5445
msgid "workgroup"
msgstr ""

#: ../../../AMDGPUUsage.rst:3413 ../../../AMDGPUUsage.rst:3443
#: ../../../AMDGPUUsage.rst:3492
msgid "If CU wavefront execution mode, omit glc=1."
msgstr ""

#: ../../../AMDGPUUsage.rst:3418 ../../../AMDGPUUsage.rst:3423
#: ../../../AMDGPUUsage.rst:3431 ../../../AMDGPUUsage.rst:3522
#: ../../../AMDGPUUsage.rst:3547 ../../../AMDGPUUsage.rst:3657
#: ../../../AMDGPUUsage.rst:3686 ../../../AMDGPUUsage.rst:3840
#: ../../../AMDGPUUsage.rst:4129 ../../../AMDGPUUsage.rst:4320
#: ../../../AMDGPUUsage.rst:4449 ../../../AMDGPUUsage.rst:4744
#: ../../../AMDGPUUsage.rst:4818 ../../../AMDGPUUsage.rst:5025
#: ../../../AMDGPUUsage.rst:5325 ../../../AMDGPUUsage.rst:5428
#: ../../../AMDGPUUsage.rst:5438 ../../../AMDGPUUsage.rst:5446
msgid "agent"
msgstr ""

#: ../../../AMDGPUUsage.rst:3419 ../../../AMDGPUUsage.rst:3424
#: ../../../AMDGPUUsage.rst:3432 ../../../AMDGPUUsage.rst:3523
#: ../../../AMDGPUUsage.rst:3548 ../../../AMDGPUUsage.rst:3658
#: ../../../AMDGPUUsage.rst:3687 ../../../AMDGPUUsage.rst:3841
#: ../../../AMDGPUUsage.rst:4130 ../../../AMDGPUUsage.rst:4321
#: ../../../AMDGPUUsage.rst:4450 ../../../AMDGPUUsage.rst:4745
#: ../../../AMDGPUUsage.rst:4819 ../../../AMDGPUUsage.rst:5026
#: ../../../AMDGPUUsage.rst:5326 ../../../AMDGPUUsage.rst:5429
#: ../../../AMDGPUUsage.rst:5439 ../../../AMDGPUUsage.rst:5447
msgid "system"
msgstr ""

#: ../../../AMDGPUUsage.rst:3428 ../../../AMDGPUUsage.rst:3577
#: ../../../AMDGPUUsage.rst:3657 ../../../AMDGPUUsage.rst:4231
#: ../../../AMDGPUUsage.rst:4578 ../../../AMDGPUUsage.rst:4789
msgid "buffer/global/flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3433 ../../../AMDGPUUsage.rst:3600
#: ../../../AMDGPUUsage.rst:4267 ../../../AMDGPUUsage.rst:4639
msgid "ds_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3436
msgid "**Acquire Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3438 ../../../AMDGPUUsage.rst:3441
#: ../../../AMDGPUUsage.rst:3464 ../../../AMDGPUUsage.rst:3490
#: ../../../AMDGPUUsage.rst:3522 ../../../AMDGPUUsage.rst:3547
#: ../../../AMDGPUUsage.rst:3574 ../../../AMDGPUUsage.rst:3577
#: ../../../AMDGPUUsage.rst:3600 ../../../AMDGPUUsage.rst:3625
#: ../../../AMDGPUUsage.rst:3657 ../../../AMDGPUUsage.rst:3686
#: ../../../AMDGPUUsage.rst:3717 ../../../AMDGPUUsage.rst:3719
#: ../../../AMDGPUUsage.rst:3840 ../../../AMDGPUUsage.rst:5463
msgid "acquire"
msgstr ""

#: ../../../AMDGPUUsage.rst:3438
msgid "buffer/global/ds/flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:3441
msgid "buffer/global_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3445 ../../../AMDGPUUsage.rst:3524
#: ../../../AMDGPUUsage.rst:3658 ../../../AMDGPUUsage.rst:4790
msgid "s_waitcnt vmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3447 ../../../AMDGPUUsage.rst:3458
#: ../../../AMDGPUUsage.rst:3483 ../../../AMDGPUUsage.rst:3516
#: ../../../AMDGPUUsage.rst:3580 ../../../AMDGPUUsage.rst:3594
#: ../../../AMDGPUUsage.rst:3651 ../../../AMDGPUUsage.rst:3834
#: ../../../AMDGPUUsage.rst:4043 ../../../AMDGPUUsage.rst:4234
#: ../../../AMDGPUUsage.rst:4598 ../../../AMDGPUUsage.rst:4606
#: ../../../AMDGPUUsage.rst:4658 ../../../AMDGPUUsage.rst:4738
#: ../../../AMDGPUUsage.rst:5019 ../../../AMDGPUUsage.rst:5245
msgid "If CU wavefront execution mode, omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:3448 ../../../AMDGPUUsage.rst:3584
msgid ""
"Must happen before the following buffer_gl0_inv and before any following "
"global/generic load/load atomic/stote/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:3456 ../../../AMDGPUUsage.rst:3481
#: ../../../AMDGPUUsage.rst:3514 ../../../AMDGPUUsage.rst:3592
#: ../../../AMDGPUUsage.rst:3617 ../../../AMDGPUUsage.rst:3649
#: ../../../AMDGPUUsage.rst:3832 ../../../AMDGPUUsage.rst:4596
#: ../../../AMDGPUUsage.rst:4656 ../../../AMDGPUUsage.rst:4736
#: ../../../AMDGPUUsage.rst:5017
msgid "buffer_gl0_inv"
msgstr ""

#: ../../../AMDGPUUsage.rst:3459 ../../../AMDGPUUsage.rst:3485
#: ../../../AMDGPUUsage.rst:3517 ../../../AMDGPUUsage.rst:3595
#: ../../../AMDGPUUsage.rst:3620 ../../../AMDGPUUsage.rst:3652
#: ../../../AMDGPUUsage.rst:3835 ../../../AMDGPUUsage.rst:4599
#: ../../../AMDGPUUsage.rst:4660 ../../../AMDGPUUsage.rst:4739
#: ../../../AMDGPUUsage.rst:5020
msgid "Ensures that following loads will not see stale data."
msgstr ""

#: ../../../AMDGPUUsage.rst:3465 ../../../AMDGPUUsage.rst:3494
#: ../../../AMDGPUUsage.rst:3719 ../../../AMDGPUUsage.rst:3987
#: ../../../AMDGPUUsage.rst:4077 ../../../AMDGPUUsage.rst:4178
#: ../../../AMDGPUUsage.rst:4268 ../../../AMDGPUUsage.rst:4368
#: ../../../AMDGPUUsage.rst:4527 ../../../AMDGPUUsage.rst:4640
#: ../../../AMDGPUUsage.rst:4665 ../../../AMDGPUUsage.rst:4717
#: ../../../AMDGPUUsage.rst:4896 ../../../AMDGPUUsage.rst:5137
msgid "s_waitcnt lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3467 ../../../AMDGPUUsage.rst:3484
#: ../../../AMDGPUUsage.rst:3498 ../../../AMDGPUUsage.rst:3603
#: ../../../AMDGPUUsage.rst:3630 ../../../AMDGPUUsage.rst:3992
#: ../../../AMDGPUUsage.rst:4044 ../../../AMDGPUUsage.rst:4082
#: ../../../AMDGPUUsage.rst:4183 ../../../AMDGPUUsage.rst:4235
#: ../../../AMDGPUUsage.rst:4273 ../../../AMDGPUUsage.rst:4532
#: ../../../AMDGPUUsage.rst:4607 ../../../AMDGPUUsage.rst:4642
#: ../../../AMDGPUUsage.rst:4670 ../../../AMDGPUUsage.rst:4721
msgid "If OpenCL, omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:3468 ../../../AMDGPUUsage.rst:3500
#: ../../../AMDGPUUsage.rst:3604 ../../../AMDGPUUsage.rst:3636
#: ../../../AMDGPUUsage.rst:3758 ../../../AMDGPUUsage.rst:3972
#: ../../../AMDGPUUsage.rst:4643 ../../../AMDGPUUsage.rst:4723
#: ../../../AMDGPUUsage.rst:4953 ../../../AMDGPUUsage.rst:5116
msgid ""
"Must happen before any following global/generic load/load atomic/store/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:3474 ../../../AMDGPUUsage.rst:3507
#: ../../../AMDGPUUsage.rst:4649 ../../../AMDGPUUsage.rst:4729
msgid ""
"Ensures any following global data read is no older than the load atomic "
"value being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:3468
msgid ""
"Must happen before the following buffer_gl0_inv and before any following "
"global/generic load/load atomic/store/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:3490
msgid "flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:3490 ../../../AMDGPUUsage.rst:3547
msgid "flat_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3494 ../../../AMDGPUUsage.rst:3840
#: ../../../AMDGPUUsage.rst:4129 ../../../AMDGPUUsage.rst:4320
#: ../../../AMDGPUUsage.rst:4449 ../../../AMDGPUUsage.rst:4744
#: ../../../AMDGPUUsage.rst:4818 ../../../AMDGPUUsage.rst:5025
#: ../../../AMDGPUUsage.rst:5325
msgid "s_waitcnt lgkmcnt(0) & vmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3497
msgid "If CU wavefront execution mode, omit vmcnt."
msgstr ""

#: ../../../AMDGPUUsage.rst:3498 ../../../AMDGPUUsage.rst:3690
#: ../../../AMDGPUUsage.rst:3992 ../../../AMDGPUUsage.rst:4082
#: ../../../AMDGPUUsage.rst:4132 ../../../AMDGPUUsage.rst:4323
#: ../../../AMDGPUUsage.rst:4747 ../../../AMDGPUUsage.rst:4821
#: ../../../AMDGPUUsage.rst:4867
msgid "If OpenCL, omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3500
msgid ""
"Must happen before the following buffer_gl0_inv and any following global/"
"generic load/load atomic/store/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:3526 ../../../AMDGPUUsage.rst:3553
#: ../../../AMDGPUUsage.rst:3664 ../../../AMDGPUUsage.rst:3695
#: ../../../AMDGPUUsage.rst:4796 ../../../AMDGPUUsage.rst:4872
msgid "Must happen before following buffer_wbinvl1_vol."
msgstr ""

#: ../../../AMDGPUUsage.rst:3529
msgid "Ensures the load has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:3534 ../../../AMDGPUUsage.rst:3561
#: ../../../AMDGPUUsage.rst:3673 ../../../AMDGPUUsage.rst:3704
#: ../../../AMDGPUUsage.rst:3969 ../../../AMDGPUUsage.rst:4805
#: ../../../AMDGPUUsage.rst:4881 ../../../AMDGPUUsage.rst:5113
msgid "buffer_wbinvl1_vol"
msgstr ""

#: ../../../AMDGPUUsage.rst:3537 ../../../AMDGPUUsage.rst:3564
#: ../../../AMDGPUUsage.rst:3676 ../../../AMDGPUUsage.rst:3707
#: ../../../AMDGPUUsage.rst:4808 ../../../AMDGPUUsage.rst:4884
msgid ""
"Must happen before any following global/generic load/load atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:3542 ../../../AMDGPUUsage.rst:3569
#: ../../../AMDGPUUsage.rst:3681 ../../../AMDGPUUsage.rst:3712
#: ../../../AMDGPUUsage.rst:3977 ../../../AMDGPUUsage.rst:4813
#: ../../../AMDGPUUsage.rst:4889
msgid "Ensures that following loads will not see stale global data."
msgstr ""

#: ../../../AMDGPUUsage.rst:3522
msgid "buffer/global_load glc=1 dlc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3526 ../../../AMDGPUUsage.rst:3664
#: ../../../AMDGPUUsage.rst:3695 ../../../AMDGPUUsage.rst:4796
#: ../../../AMDGPUUsage.rst:4872
msgid "Must happen before following buffer_gl*_inv."
msgstr ""

#: ../../../AMDGPUUsage.rst:3529
msgid "Ensures the load has completed before invalidating the caches."
msgstr ""

#: ../../../AMDGPUUsage.rst:3534 ../../../AMDGPUUsage.rst:3561
#: ../../../AMDGPUUsage.rst:3673 ../../../AMDGPUUsage.rst:3704
#: ../../../AMDGPUUsage.rst:3969 ../../../AMDGPUUsage.rst:4805
#: ../../../AMDGPUUsage.rst:4881 ../../../AMDGPUUsage.rst:5113
msgid "buffer_gl0_inv; buffer_gl1_inv"
msgstr ""

#: ../../../AMDGPUUsage.rst:3548 ../../../AMDGPUUsage.rst:3687
#: ../../../AMDGPUUsage.rst:4864
msgid "s_waitcnt vmcnt(0) & lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3551
msgid "If OpenCL omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3556
msgid "Ensures the flat_load has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:3547
msgid "flat_load glc=1 dlc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3553
msgid "Must happen before following buffer_gl*_invl."
msgstr ""

#: ../../../AMDGPUUsage.rst:3556
msgid "Ensures the flat_load has completed before invalidating the caches."
msgstr ""

#: ../../../AMDGPUUsage.rst:3574 ../../../AMDGPUUsage.rst:4175
#: ../../../AMDGPUUsage.rst:4365 ../../../AMDGPUUsage.rst:4524
msgid "buffer/global/ds/flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3577 ../../../AMDGPUUsage.rst:3657
#: ../../../AMDGPUUsage.rst:4231 ../../../AMDGPUUsage.rst:4578
#: ../../../AMDGPUUsage.rst:4789
msgid "buffer/global_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3578 ../../../AMDGPUUsage.rst:3658
#: ../../../AMDGPUUsage.rst:4579 ../../../AMDGPUUsage.rst:4790
msgid "s_waitcnt vm/vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3581 ../../../AMDGPUUsage.rst:3692
#: ../../../AMDGPUUsage.rst:4869
msgid "Use vmcnt if atomic with return and vscnt if atomic with no-return."
msgstr ""

#: ../../../AMDGPUUsage.rst:3601 ../../../AMDGPUUsage.rst:3626
msgid "waitcnt lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3610 ../../../AMDGPUUsage.rst:3642
#: ../../../AMDGPUUsage.rst:4589
msgid ""
"Ensures any following global data read is no older than the atomicrmw value "
"being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:3604 ../../../AMDGPUUsage.rst:3636
#: ../../../AMDGPUUsage.rst:3816 ../../../AMDGPUUsage.rst:4586
#: ../../../AMDGPUUsage.rst:4643 ../../../AMDGPUUsage.rst:4723
#: ../../../AMDGPUUsage.rst:5001
msgid "Must happen before the following buffer_gl0_inv."
msgstr ""

#: ../../../AMDGPUUsage.rst:3619 ../../../AMDGPUUsage.rst:4659
msgid "If OpenCL omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:3625 ../../../AMDGPUUsage.rst:3686
#: ../../../AMDGPUUsage.rst:4319 ../../../AMDGPUUsage.rst:4716
#: ../../../AMDGPUUsage.rst:4863
msgid "flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3626
msgid "waitcnt lgkmcnt(0) & vm/vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3629 ../../../AMDGPUUsage.rst:4581
#: ../../../AMDGPUUsage.rst:4720
msgid "If CU wavefront execution mode, omit vm/vscnt."
msgstr ""

#: ../../../AMDGPUUsage.rst:3630
msgid "If OpenCL, omit waitcnt lgkmcnt(0).."
msgstr ""

#: ../../../AMDGPUUsage.rst:3632 ../../../AMDGPUUsage.rst:3660
#: ../../../AMDGPUUsage.rst:4582 ../../../AMDGPUUsage.rst:4792
msgid ""
"Use vmcnt if atomic with return and vscnt if atomic with no-return. waitcnt "
"lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3667 ../../../AMDGPUUsage.rst:3698
#: ../../../AMDGPUUsage.rst:4799 ../../../AMDGPUUsage.rst:4875
msgid "Ensures the atomicrmw has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:3667 ../../../AMDGPUUsage.rst:3698
#: ../../../AMDGPUUsage.rst:4799 ../../../AMDGPUUsage.rst:4875
msgid "Ensures the atomicrmw has completed before invalidating the caches."
msgstr ""

#: ../../../AMDGPUUsage.rst:3687 ../../../AMDGPUUsage.rst:4864
msgid "s_waitcnt vm/vscnt(0) & lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3717 ../../../AMDGPUUsage.rst:3719
#: ../../../AMDGPUUsage.rst:3840 ../../../AMDGPUUsage.rst:4366
#: ../../../AMDGPUUsage.rst:4368 ../../../AMDGPUUsage.rst:4449
#: ../../../AMDGPUUsage.rst:4894 ../../../AMDGPUUsage.rst:4896
#: ../../../AMDGPUUsage.rst:5025 ../../../AMDGPUUsage.rst:5443
msgid "fence"
msgstr ""

#: ../../../AMDGPUUsage.rst:3724 ../../../AMDGPUUsage.rst:4373
#: ../../../AMDGPUUsage.rst:4901
msgid "If OpenCL and address space is not generic, omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:3732 ../../../AMDGPUUsage.rst:4381
#: ../../../AMDGPUUsage.rst:4460
msgid ""
"However, since LLVM currently has no address space on the fence need to "
"conservatively always generate. If fence had an address space then set to "
"address space of OpenCL fence flag, or to generic if both local and global "
"flags are specified."
msgstr ""

#: ../../../AMDGPUUsage.rst:3747
msgid ""
"Must happen after any preceding local/generic load atomic/atomicrmw with an "
"equal or wider sync scope and memory ordering stronger than unordered (this "
"is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3764
msgid ""
"Ensures any following global data read is no older than the value read by "
"the fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3719 ../../../AMDGPUUsage.rst:3840
#: ../../../AMDGPUUsage.rst:3987 ../../../AMDGPUUsage.rst:4077
#: ../../../AMDGPUUsage.rst:4129 ../../../AMDGPUUsage.rst:4178
#: ../../../AMDGPUUsage.rst:4268 ../../../AMDGPUUsage.rst:4368
#: ../../../AMDGPUUsage.rst:4449 ../../../AMDGPUUsage.rst:4527
#: ../../../AMDGPUUsage.rst:4665 ../../../AMDGPUUsage.rst:4744
#: ../../../AMDGPUUsage.rst:4818 ../../../AMDGPUUsage.rst:4896
#: ../../../AMDGPUUsage.rst:5025 ../../../AMDGPUUsage.rst:5137
#: ../../../AMDGPUUsage.rst:5325
msgid "s_waitcnt lgkmcnt(0) & vmcnt(0) & vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3722 ../../../AMDGPUUsage.rst:3990
#: ../../../AMDGPUUsage.rst:4080 ../../../AMDGPUUsage.rst:4181
#: ../../../AMDGPUUsage.rst:4271 ../../../AMDGPUUsage.rst:4371
#: ../../../AMDGPUUsage.rst:4530 ../../../AMDGPUUsage.rst:4668
#: ../../../AMDGPUUsage.rst:4899 ../../../AMDGPUUsage.rst:5140
msgid "If CU wavefront execution mode, omit vmcnt and vscnt."
msgstr ""

#: ../../../AMDGPUUsage.rst:3724 ../../../AMDGPUUsage.rst:3843
#: ../../../AMDGPUUsage.rst:4373 ../../../AMDGPUUsage.rst:4452
#: ../../../AMDGPUUsage.rst:4901 ../../../AMDGPUUsage.rst:5028
msgid "If OpenCL and address space is not generic, omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3728 ../../../AMDGPUUsage.rst:3847
#: ../../../AMDGPUUsage.rst:4377 ../../../AMDGPUUsage.rst:4456
#: ../../../AMDGPUUsage.rst:4905 ../../../AMDGPUUsage.rst:5032
msgid "If OpenCL and address space is local, omit vmcnt(0) and vscnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3770 ../../../AMDGPUUsage.rst:3907
#: ../../../AMDGPUUsage.rst:4000 ../../../AMDGPUUsage.rst:4090
#: ../../../AMDGPUUsage.rst:4134 ../../../AMDGPUUsage.rst:4191
#: ../../../AMDGPUUsage.rst:4281 ../../../AMDGPUUsage.rst:4325
#: ../../../AMDGPUUsage.rst:4402 ../../../AMDGPUUsage.rst:4475
#: ../../../AMDGPUUsage.rst:4540 ../../../AMDGPUUsage.rst:4678
#: ../../../AMDGPUUsage.rst:4749 ../../../AMDGPUUsage.rst:4823
#: ../../../AMDGPUUsage.rst:4924 ../../../AMDGPUUsage.rst:5044
#: ../../../AMDGPUUsage.rst:5142 ../../../AMDGPUUsage.rst:5328
msgid ""
"Could be split into separate s_waitcnt vmcnt(0), s_waitcnt vscnt(0) and "
"s_waitcnt lgkmcnt(0) to allow them to be independently moved according to "
"the following rules."
msgstr ""

#: ../../../AMDGPUUsage.rst:3779 ../../../AMDGPUUsage.rst:3916
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load "
"atomic/ atomicrmw-with-return-value with an equal or wider sync scope and "
"memory ordering stronger than unordered (this is termed the fence-paired-"
"atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3792 ../../../AMDGPUUsage.rst:3929
msgid ""
"s_waitcnt vscnt(0) must happen after any preceding global/generic atomicrmw-"
"no-return-value with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3804 ../../../AMDGPUUsage.rst:3880
#: ../../../AMDGPUUsage.rst:3941
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding local/generic load "
"atomic/atomicrmw with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3819 ../../../AMDGPUUsage.rst:3895
msgid ""
"Ensures that the fence-paired atomic has completed before invalidating the "
"cache. Therefore any following locations read must be no older than the "
"value read by the fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3851 ../../../AMDGPUUsage.rst:4909
#: ../../../AMDGPUUsage.rst:5036
msgid ""
"However, since LLVM currently has no address space on the fence need to "
"conservatively always generate (see comment for previous fence)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3859 ../../../AMDGPUUsage.rst:4134
#: ../../../AMDGPUUsage.rst:4325 ../../../AMDGPUUsage.rst:4475
#: ../../../AMDGPUUsage.rst:4749 ../../../AMDGPUUsage.rst:4823
#: ../../../AMDGPUUsage.rst:5044 ../../../AMDGPUUsage.rst:5328
msgid ""
"Could be split into separate s_waitcnt vmcnt(0) and s_waitcnt lgkmcnt(0) to "
"allow them to be independently moved according to the following rules."
msgstr ""

#: ../../../AMDGPUUsage.rst:3868
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load "
"atomic/atomicrmw with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3892 ../../../AMDGPUUsage.rst:5073
msgid "Must happen before the following buffer_wbinvl1_vol."
msgstr ""

#: ../../../AMDGPUUsage.rst:3953 ../../../AMDGPUUsage.rst:5073
msgid "Must happen before the following buffer_gl*_inv."
msgstr ""

#: ../../../AMDGPUUsage.rst:3956
msgid ""
"Ensures that the fence-paired atomic has completed before invalidating the "
"caches. Therefore any following locations read must be no older than the "
"value read by the fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3982
msgid "**Release Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3984 ../../../AMDGPUUsage.rst:3987
#: ../../../AMDGPUUsage.rst:4041 ../../../AMDGPUUsage.rst:4077
#: ../../../AMDGPUUsage.rst:4129 ../../../AMDGPUUsage.rst:4175
#: ../../../AMDGPUUsage.rst:4178 ../../../AMDGPUUsage.rst:4232
#: ../../../AMDGPUUsage.rst:4268 ../../../AMDGPUUsage.rst:4320
#: ../../../AMDGPUUsage.rst:4366 ../../../AMDGPUUsage.rst:4368
#: ../../../AMDGPUUsage.rst:4449 ../../../AMDGPUUsage.rst:5468
msgid "release"
msgstr ""

#: ../../../AMDGPUUsage.rst:3984 ../../../AMDGPUUsage.rst:4174
msgid "buffer/global/ds/flat_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:3994 ../../../AMDGPUUsage.rst:4084
#: ../../../AMDGPUUsage.rst:4185 ../../../AMDGPUUsage.rst:4275
#: ../../../AMDGPUUsage.rst:4534 ../../../AMDGPUUsage.rst:4672
msgid ""
"Must happen after any preceding local/generic load/store/load atomic/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:4029 ../../../AMDGPUUsage.rst:4065
#: ../../../AMDGPUUsage.rst:4117 ../../../AMDGPUUsage.rst:4163
#: ../../../AMDGPUUsage.rst:4256 ../../../AMDGPUUsage.rst:4628
msgid "Must happen before the following store."
msgstr ""

#: ../../../AMDGPUUsage.rst:4032 ../../../AMDGPUUsage.rst:4120
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:4009 ../../../AMDGPUUsage.rst:4053
#: ../../../AMDGPUUsage.rst:4099 ../../../AMDGPUUsage.rst:4143
#: ../../../AMDGPUUsage.rst:4200 ../../../AMDGPUUsage.rst:4244
#: ../../../AMDGPUUsage.rst:4290 ../../../AMDGPUUsage.rst:4334
#: ../../../AMDGPUUsage.rst:4411 ../../../AMDGPUUsage.rst:4484
#: ../../../AMDGPUUsage.rst:4549 ../../../AMDGPUUsage.rst:4616
#: ../../../AMDGPUUsage.rst:4687 ../../../AMDGPUUsage.rst:4758
#: ../../../AMDGPUUsage.rst:4933 ../../../AMDGPUUsage.rst:5053
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load/load "
"atomic/ atomicrmw-with-return-value."
msgstr ""

#: ../../../AMDGPUUsage.rst:4015 ../../../AMDGPUUsage.rst:4059
#: ../../../AMDGPUUsage.rst:4105 ../../../AMDGPUUsage.rst:4150
#: ../../../AMDGPUUsage.rst:4206 ../../../AMDGPUUsage.rst:4250
#: ../../../AMDGPUUsage.rst:4296 ../../../AMDGPUUsage.rst:4341
#: ../../../AMDGPUUsage.rst:4418 ../../../AMDGPUUsage.rst:4491
#: ../../../AMDGPUUsage.rst:4555 ../../../AMDGPUUsage.rst:4622
#: ../../../AMDGPUUsage.rst:4693 ../../../AMDGPUUsage.rst:4765
#: ../../../AMDGPUUsage.rst:4839 ../../../AMDGPUUsage.rst:4940
#: ../../../AMDGPUUsage.rst:5060
msgid ""
"s_waitcnt vscnt(0) must happen after any preceding global/generic store/"
"store atomic/ atomicrmw-no-return-value."
msgstr ""

#: ../../../AMDGPUUsage.rst:4022 ../../../AMDGPUUsage.rst:4112
#: ../../../AMDGPUUsage.rst:4156 ../../../AMDGPUUsage.rst:4213
#: ../../../AMDGPUUsage.rst:4303 ../../../AMDGPUUsage.rst:4347
#: ../../../AMDGPUUsage.rst:4497 ../../../AMDGPUUsage.rst:4562
#: ../../../AMDGPUUsage.rst:4700 ../../../AMDGPUUsage.rst:4771
#: ../../../AMDGPUUsage.rst:4845 ../../../AMDGPUUsage.rst:5066
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding local/generic load/"
"store/load atomic/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:4032 ../../../AMDGPUUsage.rst:4120
msgid ""
"Ensures that all memory operations have completed before performing the "
"store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:4040
msgid "buffer/global_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:4041 ../../../AMDGPUUsage.rst:4232
#: ../../../AMDGPUUsage.rst:4604
msgid "waitcnt vmcnt(0) & vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4045 ../../../AMDGPUUsage.rst:4236
#: ../../../AMDGPUUsage.rst:4608 ../../../AMDGPUUsage.rst:5246
msgid ""
"Could be split into separate s_waitcnt vmcnt(0) and s_waitcnt vscnt(0) to "
"allow them to be independently moved according to the following rules."
msgstr ""

#: ../../../AMDGPUUsage.rst:4068 ../../../AMDGPUUsage.rst:4259
#: ../../../AMDGPUUsage.rst:4631
msgid ""
"Ensures that all global memory operations have completed before performing "
"the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:4128
msgid "flat_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:4143 ../../../AMDGPUUsage.rst:4334
#: ../../../AMDGPUUsage.rst:4484 ../../../AMDGPUUsage.rst:4758
#: ../../../AMDGPUUsage.rst:4832 ../../../AMDGPUUsage.rst:5053
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load/store/"
"load atomic/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:4166
msgid ""
"Ensures that all memory operations to memory have completed before "
"performing the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:4220 ../../../AMDGPUUsage.rst:4308
#: ../../../AMDGPUUsage.rst:4354 ../../../AMDGPUUsage.rst:4567
#: ../../../AMDGPUUsage.rst:4705 ../../../AMDGPUUsage.rst:4778
#: ../../../AMDGPUUsage.rst:4852
msgid "Must happen before the following atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:4223 ../../../AMDGPUUsage.rst:4311
#: ../../../AMDGPUUsage.rst:4570 ../../../AMDGPUUsage.rst:4708
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:4223 ../../../AMDGPUUsage.rst:4311
#: ../../../AMDGPUUsage.rst:4570 ../../../AMDGPUUsage.rst:4708
#: ../../../AMDGPUUsage.rst:4855
msgid ""
"Ensures that all memory operations have completed before performing the "
"atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:4273 ../../../AMDGPUUsage.rst:4670
#: ../../../AMDGPUUsage.rst:4721
msgid "If OpenCL, omit waitcnt lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4357
msgid ""
"Ensures that all memory operations to global and local have completed before "
"performing the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:4321
msgid "s_waitcnt lkkmcnt(0) &"
msgstr ""

#: ../../../AMDGPUUsage.rst:4321
msgid "vmcnt(0) & vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4396 ../../../AMDGPUUsage.rst:4918
msgid ""
"Must happen after any preceding local/generic load/load atomic/store/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:4431 ../../../AMDGPUUsage.rst:4504
msgid ""
"Must happen before any following store atomic/atomicrmw with an equal or "
"wider sync scope and memory ordering stronger than unordered (this is termed "
"the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4441
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the following fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:4424 ../../../AMDGPUUsage.rst:4946
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding local/generic load/"
"store/load atomic/store atomic/ atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:4441 ../../../AMDGPUUsage.rst:4514
msgid ""
"Ensures that all memory operations have completed before performing the "
"following fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:4456
msgid "If OpenCL and address space is local, omit vmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4522
msgid "**Acquire-Release Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:4524 ../../../AMDGPUUsage.rst:4527
#: ../../../AMDGPUUsage.rst:4604 ../../../AMDGPUUsage.rst:4665
#: ../../../AMDGPUUsage.rst:4744 ../../../AMDGPUUsage.rst:4818
#: ../../../AMDGPUUsage.rst:4894 ../../../AMDGPUUsage.rst:4896
#: ../../../AMDGPUUsage.rst:5025 ../../../AMDGPUUsage.rst:5474
msgid "acq_rel"
msgstr ""

#: ../../../AMDGPUUsage.rst:4532
msgid "If OpenCL, omit s_waitcnt lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4717
msgid "s_waitcnt lgkmcnt(0) & vm/vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4781 ../../../AMDGPUUsage.rst:4855
msgid ""
"Ensures that all memory operations to global have completed before "
"performing the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:4832
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load/load "
"atomic atomicrmw-with-return-value."
msgstr ""

#: ../../../AMDGPUUsage.rst:4959
msgid ""
"Ensures that all memory operations to local have completed before performing "
"any following global memory operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:4966
msgid ""
"Ensures that the preceding local/generic load atomic/atomicrmw with an equal "
"or wider sync scope and memory ordering stronger than unordered (this is "
"termed the acquire-fence-paired-atomic ) has completed before following "
"global memory operations. This satisfies the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:4984
msgid ""
"Ensures that all previous memory operations have completed before a "
"following local/generic store atomic/atomicrmw with an equal or wider sync "
"scope and memory ordering stronger than unordered (this is termed the "
"release-fence-paired-atomic ). This satisfies the requirements of release."
msgstr ""

#: ../../../AMDGPUUsage.rst:4959
msgid ""
"Ensures that all memory operations have completed before performing any "
"following global memory operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:5004
msgid ""
"Ensures that the acquire-fence-paired atomic has completed before "
"invalidating the cache. Therefore any following locations read must be no "
"older than the value read by the acquire-fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:5076
msgid ""
"Ensures that the preceding global/local/generic load atomic/atomicrmw with "
"an equal or wider sync scope and memory ordering stronger than unordered "
"(this is termed the acquire-fence-paired-atomic ) has completed before "
"invalidating the cache. This satisfies the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:5094
msgid ""
"Ensures that all previous memory operations have completed before a "
"following global/local/generic store atomic/atomicrmw with an equal or wider "
"sync scope and memory ordering stronger than unordered (this is termed the "
"release-fence-paired-atomic ). This satisfies the requirements of release."
msgstr ""

#: ../../../AMDGPUUsage.rst:5122
msgid ""
"Ensures that following loads will not see stale global data. This satisfies "
"the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:5076
msgid ""
"Ensures that the preceding global/local/generic load atomic/atomicrmw with "
"an equal or wider sync scope and memory ordering stronger than unordered "
"(this is termed the acquire-fence-paired-atomic ) has completed before "
"invalidating the caches. This satisfies the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:5130
msgid "**Sequential Consistent Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:5132 ../../../AMDGPUUsage.rst:5137
#: ../../../AMDGPUUsage.rst:5237 ../../../AMDGPUUsage.rst:5325
#: ../../../AMDGPUUsage.rst:5423 ../../../AMDGPUUsage.rst:5428
#: ../../../AMDGPUUsage.rst:5433 ../../../AMDGPUUsage.rst:5438
#: ../../../AMDGPUUsage.rst:5443 ../../../AMDGPUUsage.rst:5475
msgid "seq_cst"
msgstr ""

#: ../../../AMDGPUUsage.rst:5132 ../../../AMDGPUUsage.rst:5237
msgid ""
"*Same as corresponding load atomic acquire, except must generated all "
"instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:5151
msgid ""
"Must happen after preceding global/generic load atomic/store atomic/"
"atomicrmw with memory ordering of seq_cst and with equal or wider sync "
"scope. (Note that seq_cst fences have their own s_waitcnt lgkmcnt(0) and so "
"do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5199
msgid ""
"Ensures any preceding sequential consistent local memory instructions have "
"completed before executing this sequentially consistent instruction. This "
"prevents reordering a seq_cst store followed by a seq_cst load. (Note that "
"seq_cst is stronger than acquire/release as the reordering of load acquire "
"followed by a store release is prevented by the waitcnt of the release, but "
"there is nothing preventing a store release followed by load acquire from "
"competing out of order.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5230 ../../../AMDGPUUsage.rst:5317
#: ../../../AMDGPUUsage.rst:5416
msgid ""
"*Following instructions same as corresponding load atomic acquire, except "
"must generated all instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:5151 ../../../AMDGPUUsage.rst:5337
msgid ""
"waitcnt lgkmcnt(0) must happen after preceding local load atomic/store "
"atomic/atomicrmw with memory ordering of seq_cst and with equal or wider "
"sync scope. (Note that seq_cst fences have their own s_waitcnt lgkmcnt(0) "
"and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5167 ../../../AMDGPUUsage.rst:5254
msgid ""
"waitcnt vmcnt(0) Must happen after preceding global/generic load atomic/ "
"atomicrmw-with-return-value with memory ordering of seq_cst and with equal "
"or wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"vmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5183 ../../../AMDGPUUsage.rst:5270
#: ../../../AMDGPUUsage.rst:5369
msgid ""
"waitcnt vscnt(0) Must happen after preceding global/generic store atomic/ "
"atomicrmw-no-return-value with memory ordering of seq_cst and with equal or "
"wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"vscnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5199
msgid ""
"Ensures any preceding sequential consistent global/local memory instructions "
"have completed before executing this sequentially consistent instruction. "
"This prevents reordering a seq_cst store followed by a seq_cst load. (Note "
"that seq_cst is stronger than acquire/release as the reordering of load "
"acquire followed by a store release is prevented by the waitcnt of the "
"release, but there is nothing preventing a store release followed by load "
"acquire from competing out of order.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5243
msgid "s_waitcnt vmcnt(0) & vscnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5286 ../../../AMDGPUUsage.rst:5385
msgid ""
"Ensures any preceding sequential consistent global memory instructions have "
"completed before executing this sequentially consistent instruction. This "
"prevents reordering a seq_cst store followed by a seq_cst load. (Note that "
"seq_cst is stronger than acquire/release as the reordering of load acquire "
"followed by a store release is prevented by the waitcnt of the release, but "
"there is nothing preventing a store release followed by load acquire from "
"competing out of order.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5337
msgid ""
"waitcnt lgkmcnt(0) must happen after preceding global/generic load atomic/"
"store atomic/atomicrmw with memory ordering of seq_cst and with equal or "
"wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"lgkmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5353
msgid ""
"waitcnt vmcnt(0) must happen after preceding global/generic load atomic/"
"store atomic/atomicrmw with memory ordering of seq_cst and with equal or "
"wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"vmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5353
msgid ""
"waitcnt vmcnt(0) must happen after preceding global/generic load atomic/ "
"atomicrmw-with-return-value with memory ordering of seq_cst and with equal "
"or wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"vmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5423 ../../../AMDGPUUsage.rst:5428
msgid ""
"*Same as corresponding store atomic release, except must generated all "
"instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:5433 ../../../AMDGPUUsage.rst:5438
msgid ""
"*Same as corresponding atomicrmw acq_rel, except must generated all "
"instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:5443
msgid ""
"*Same as corresponding fence acq_rel, except must generated all instructions "
"even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:5450
msgid ""
"The memory order also adds the single thread optimization constrains defined "
"in table :ref:`amdgpu-amdhsa-memory-model-single-thread-optimization-"
"constraints-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5454
msgid "AMDHSA Memory Model Single Thread Optimization Constraints GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:5458
msgid "LLVM Memory"
msgstr ""

#: ../../../AMDGPUUsage.rst:5458
msgid "Optimization Constraints"
msgstr ""

#: ../../../AMDGPUUsage.rst:5459
msgid "Ordering"
msgstr ""

#: ../../../AMDGPUUsage.rst:5463
msgid ""
"If a load atomic/atomicrmw then no following load/load atomic/store/ store "
"atomic/atomicrmw/fence instruction can be moved before the acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:5466
msgid ""
"If a fence then same as load atomic, plus no preceding associated fence-"
"paired-atomic can be moved after the fence."
msgstr ""

#: ../../../AMDGPUUsage.rst:5468
msgid ""
"If a store atomic/atomicrmw then no preceding load/load atomic/store/ store "
"atomic/atomicrmw/fence instruction can be moved after the release."
msgstr ""

#: ../../../AMDGPUUsage.rst:5471
msgid ""
"If a fence then same as store atomic, plus no following associated fence-"
"paired-atomic can be moved before the fence."
msgstr ""

#: ../../../AMDGPUUsage.rst:5474
msgid "Same constraints as both acquire and release."
msgstr ""

#: ../../../AMDGPUUsage.rst:5475
msgid ""
"If a load atomic then same constraints as acquire, plus no preceding "
"sequentially consistent load atomic/store atomic/atomicrmw/fence instruction "
"can be moved after the seq_cst."
msgstr ""

#: ../../../AMDGPUUsage.rst:5479
msgid ""
"If a store atomic then the same constraints as release, plus no following "
"sequentially consistent load atomic/store atomic/atomicrmw/fence instruction "
"can be moved before the seq_cst."
msgstr ""

#: ../../../AMDGPUUsage.rst:5483
msgid "If an atomicrmw/fence then same constraints as acq_rel."
msgstr ""

#: ../../../AMDGPUUsage.rst:5487 ../../../AMDGPUUsage.rst:5664
msgid "Trap Handler ABI"
msgstr ""

#: ../../../AMDGPUUsage.rst:5489
msgid ""
"For code objects generated by AMDGPU backend for HSA [HSA]_ compatible "
"runtimes (such as ROCm [AMD-ROCm]_), the runtime installs a trap handler "
"that supports the ``s_trap`` instruction with the following usage:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5493
msgid "AMDGPU Trap Handler for AMDHSA OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:5497 ../../../AMDGPUUsage.rst:5674
msgid "Usage"
msgstr ""

#: ../../../AMDGPUUsage.rst:5497 ../../../AMDGPUUsage.rst:5674
msgid "Code Sequence"
msgstr ""

#: ../../../AMDGPUUsage.rst:5497
msgid "Trap Handler Inputs"
msgstr ""

#: ../../../AMDGPUUsage.rst:5500 ../../../AMDGPUUsage.rst:5528
#: ../../../AMDGPUUsage.rst:5529 ../../../AMDGPUUsage.rst:5530
#: ../../../AMDGPUUsage.rst:5533 ../../../AMDGPUUsage.rst:5534
#: ../../../AMDGPUUsage.rst:5535
msgid "reserved"
msgstr ""

#: ../../../AMDGPUUsage.rst:5500
msgid "``s_trap 0x00``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5500
msgid "Reserved by hardware."
msgstr ""

#: ../../../AMDGPUUsage.rst:5501
msgid "``debugtrap(arg)``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5501
msgid "``s_trap 0x01``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5501 ../../../AMDGPUUsage.rst:5507
msgid "``SGPR0-1``:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5502 ../../../AMDGPUUsage.rst:5506
msgid "``queue_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5503
msgid "``VGPR0``:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5504
msgid "``arg``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5501
msgid "Reserved for HSA ``debugtrap`` intrinsic (not implemented)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5505
msgid "``llvm.trap``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5505
msgid "``s_trap 0x02``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5505
msgid ""
"Causes dispatch to be terminated and its associated queue put into the error "
"state."
msgstr ""

#: ../../../AMDGPUUsage.rst:5509
msgid "``llvm.debugtrap``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5509
msgid "``s_trap 0x03``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5509
msgid ""
"If debugger not installed then behaves as a no-operation. The trap handler "
"is entered and immediately returns to continue execution of the wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:5519
msgid ""
"If the debugger is installed, causes the debug trap to be reported by the "
"debugger and the wavefront is put in the halt state until resumed by the "
"debugger."
msgstr ""

#: ../../../AMDGPUUsage.rst:5528
msgid "``s_trap 0x04``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5529
msgid "``s_trap 0x05``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5530
msgid "``s_trap 0x06``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5531
msgid "debugger breakpoint"
msgstr ""

#: ../../../AMDGPUUsage.rst:5531
msgid "``s_trap 0x07``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5531
msgid "Reserved for debugger breakpoints."
msgstr ""

#: ../../../AMDGPUUsage.rst:5533
msgid "``s_trap 0x08``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5534
msgid "``s_trap 0xfe``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5535
msgid "``s_trap 0xff``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5539
msgid "AMDPAL"
msgstr ""

#: ../../../AMDGPUUsage.rst:5541
msgid ""
"This section provides code conventions used when the target triple OS is "
"``amdpal`` (see :ref:`amdgpu-target-triples`) for passing runtime parameters "
"from the application/runtime to each invocation of a hardware shader. These "
"parameters include both generic, application-controlled parameters called "
"*user data* as well as system-generated parameters that are a product of the "
"draw or dispatch execution."
msgstr ""

#: ../../../AMDGPUUsage.rst:5549
msgid "User Data"
msgstr ""

#: ../../../AMDGPUUsage.rst:5551
msgid ""
"Each hardware stage has a set of 32-bit *user data registers* which can be "
"written from a command buffer and then loaded into SGPRs when waves are "
"launched via a subsequent dispatch or draw operation. This is the way most "
"arguments are passed from the application/runtime to a hardware shader."
msgstr ""

#: ../../../AMDGPUUsage.rst:5557
msgid "Compute User Data"
msgstr ""

#: ../../../AMDGPUUsage.rst:5559
msgid ""
"Compute shader user data mappings are simpler than graphics shaders, and "
"have a fixed mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:5562
msgid ""
"Note that there are always 10 available *user data entries* in registers - "
"entries beyond that limit must be fetched from memory (via the spill table "
"pointer) by the shader."
msgstr ""

#: ../../../AMDGPUUsage.rst:5566
msgid "PAL Compute Shader User Data Registers"
msgstr ""

#: ../../../AMDGPUUsage.rst:5570 ../../../AMDGPUUsage.rst:5589
msgid "User Register"
msgstr ""

#: ../../../AMDGPUUsage.rst:5572 ../../../AMDGPUUsage.rst:5591
msgid "Global Internal Table (32-bit pointer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5573 ../../../AMDGPUUsage.rst:5592
msgid "Per-Shader Internal Table (32-bit pointer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5574
msgid "2 - 11"
msgstr ""

#: ../../../AMDGPUUsage.rst:5574
msgid "Application-Controlled User Data (10 32-bit values)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5575 ../../../AMDGPUUsage.rst:5595
msgid "Spill Table (32-bit pointer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5576
msgid "13 - 14"
msgstr ""

#: ../../../AMDGPUUsage.rst:5576
msgid "Thread Group Count (64-bit pointer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5577
msgid "15"
msgstr ""

#: ../../../AMDGPUUsage.rst:5577
msgid "GDS Range"
msgstr ""

#: ../../../AMDGPUUsage.rst:5581
msgid "Graphics User Data"
msgstr ""

#: ../../../AMDGPUUsage.rst:5583
msgid "Graphics pipelines support a much more flexible user data mapping:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5585
msgid "PAL Graphics Shader User Data Registers"
msgstr ""

#: ../../../AMDGPUUsage.rst:5593
msgid "1-15"
msgstr ""

#: ../../../AMDGPUUsage.rst:5593
msgid ""
"Application Controlled User Data (1-15 Contiguous 32-bit Values in Registers)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5596
msgid "Draw Index (First Stage Only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5597
msgid "Vertex Offset (First Stage Only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5598
msgid "Instance Offset (First Stage Only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5601
msgid ""
"The placement of the global internal table remains fixed in the first *user "
"data SGPR register*. Otherwise all parameters are optional, and can be "
"mapped to any desired *user data SGPR register*, with the following "
"regstrictions:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5605
msgid ""
"Draw Index, Vertex Offset, and Instance Offset can only be used by the first "
"activehardware stage in a graphics pipeline (i.e. where the API vertex "
"shader runs)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5609
msgid ""
"Application-controlled user data must be mapped into a contiguous range of "
"user data registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:5612
msgid ""
"The application-controlled user data range supports compaction remapping, so "
"only *entries* that are actually consumed by the shader must be assigned to "
"corresponding *registers*. Note that in order to support an efficient "
"runtime implementation, the remapping must pack *registers* in the same "
"order as *entries*, with unused *entries* removed."
msgstr ""

#: ../../../AMDGPUUsage.rst:5621
msgid "Global Internal Table"
msgstr ""

#: ../../../AMDGPUUsage.rst:5623
msgid ""
"The global internal table is a table of *shader resource descriptors* (SRDs) "
"that define how certain engine-wide, runtime-managed resources should be "
"accessed from a shader. The majority of these resources have HW-defined "
"formats, and it is up to the compiler to write/read data as required by the "
"target hardware."
msgstr ""

#: ../../../AMDGPUUsage.rst:5628
msgid "The following table illustrates the required format:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5630
msgid "PAL Global Internal Table"
msgstr ""

#: ../../../AMDGPUUsage.rst:5634
msgid "Offset"
msgstr ""

#: ../../../AMDGPUUsage.rst:5636
msgid "0-3"
msgstr ""

#: ../../../AMDGPUUsage.rst:5636
msgid "Graphics Scratch SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:5637
msgid "4-7"
msgstr ""

#: ../../../AMDGPUUsage.rst:5637
msgid "Compute Scratch SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:5638
msgid "8-11"
msgstr ""

#: ../../../AMDGPUUsage.rst:5638
msgid "ES/GS Ring Output SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:5639
msgid "12-15"
msgstr ""

#: ../../../AMDGPUUsage.rst:5639
msgid "ES/GS Ring Input SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:5640
msgid "16-19"
msgstr ""

#: ../../../AMDGPUUsage.rst:5640
msgid "GS/VS Ring Output #0"
msgstr ""

#: ../../../AMDGPUUsage.rst:5641
msgid "20-23"
msgstr ""

#: ../../../AMDGPUUsage.rst:5641
msgid "GS/VS Ring Output #1"
msgstr ""

#: ../../../AMDGPUUsage.rst:5642
msgid "24-27"
msgstr ""

#: ../../../AMDGPUUsage.rst:5642
msgid "GS/VS Ring Output #2"
msgstr ""

#: ../../../AMDGPUUsage.rst:5643
msgid "28-31"
msgstr ""

#: ../../../AMDGPUUsage.rst:5643
msgid "GS/VS Ring Output #3"
msgstr ""

#: ../../../AMDGPUUsage.rst:5644
msgid "32-35"
msgstr ""

#: ../../../AMDGPUUsage.rst:5644
msgid "GS/VS Ring Input SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:5645
msgid "36-39"
msgstr ""

#: ../../../AMDGPUUsage.rst:5645
msgid "Tessellation Factor Buffer SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:5646
msgid "40-43"
msgstr ""

#: ../../../AMDGPUUsage.rst:5646
msgid "Off-Chip LDS Buffer SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:5647
msgid "44-47"
msgstr ""

#: ../../../AMDGPUUsage.rst:5647
msgid "Off-Chip Param Cache Buffer SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:5648
msgid "48-51"
msgstr ""

#: ../../../AMDGPUUsage.rst:5648
msgid "Sample Position Buffer SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:5649
msgid "52"
msgstr ""

#: ../../../AMDGPUUsage.rst:5649
msgid "vaRange::ShadowDescriptorTable High Bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:5652
msgid ""
"The pointer to the global internal table passed to the shader as user data "
"is a 32-bit pointer. The top 32 bits should be assumed to be the same as the "
"top 32 bits of the pipeline, so the shader may use the program counter's top "
"32 bits."
msgstr ""

#: ../../../AMDGPUUsage.rst:5658
msgid "Unspecified OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:5660
msgid ""
"This section provides code conventions used when the target triple OS is "
"empty (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5666
msgid ""
"For code objects generated by AMDGPU backend for non-amdhsa OS, the runtime "
"does not install a trap handler. The ``llvm.trap`` and ``llvm.debugtrap`` "
"instructions are handled as follows:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5670
msgid "AMDGPU Trap Handler for Non-AMDHSA OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:5676
msgid "llvm.trap"
msgstr ""

#: ../../../AMDGPUUsage.rst:5676
msgid "s_endpgm"
msgstr ""

#: ../../../AMDGPUUsage.rst:5676
msgid "Causes wavefront to be terminated."
msgstr ""

#: ../../../AMDGPUUsage.rst:5677
msgid "llvm.debugtrap"
msgstr ""

#: ../../../AMDGPUUsage.rst:5677
msgid "Compiler warning given that there is no trap handler installed."
msgstr ""

#: ../../../AMDGPUUsage.rst:5682
msgid "Source Languages"
msgstr ""

#: ../../../AMDGPUUsage.rst:5687
msgid "OpenCL"
msgstr ""

#: ../../../AMDGPUUsage.rst:5689
msgid "When the language is OpenCL the following differences occur:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5691
msgid ""
"The OpenCL memory model is used (see :ref:`amdgpu-amdhsa-memory-model`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5692
msgid ""
"The AMDGPU backend appends additional arguments to the kernel's explicit "
"arguments for the AMDHSA OS (see :ref:`opencl-kernel-implicit-arguments-"
"appended-for-amdhsa-os-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5695
msgid ""
"Additional metadata is generated (see :ref:`amdgpu-amdhsa-code-object-"
"metadata`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5698
msgid "OpenCL kernel implicit arguments appended for AMDHSA OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:5702
msgid "Position"
msgstr ""

#: ../../../AMDGPUUsage.rst:5702
msgid "Byte Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:5702
msgid "Byte Alignment"
msgstr ""

#: ../../../AMDGPUUsage.rst:5705
msgid "OpenCL Global Offset X"
msgstr ""

#: ../../../AMDGPUUsage.rst:5706
msgid "OpenCL Global Offset Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:5707
msgid "OpenCL Global Offset Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:5708
msgid "OpenCL address of printf buffer"
msgstr ""

#: ../../../AMDGPUUsage.rst:5709
msgid "OpenCL address of virtual queue used by enqueue_kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:5711
msgid "OpenCL address of AqlWrap struct used by enqueue_kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:5713
msgid "Pointer argument used for Multi-gird synchronization."
msgstr ""

#: ../../../AMDGPUUsage.rst:5720
msgid "HCC"
msgstr ""

#: ../../../AMDGPUUsage.rst:5722
msgid "When the language is HCC the following differences occur:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5724
msgid "The HSA memory model is used (see :ref:`amdgpu-amdhsa-memory-model`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5729
msgid "Assembler"
msgstr ""

#: ../../../AMDGPUUsage.rst:5731
msgid ""
"AMDGPU backend has LLVM-MC based assembler which is currently in "
"development. It supports AMDGCN GFX6-GFX10."
msgstr ""

#: ../../../AMDGPUUsage.rst:5734
msgid "This section describes general syntax for instructions and operands."
msgstr ""

#: ../../../AMDGPUUsage.rst:5737
msgid "Instructions"
msgstr ""

#: ../../../AMDGPUUsage.rst:5751
msgid ""
"An instruction has the following :doc:`syntax<AMDGPUInstructionSyntax>`:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5753
msgid ""
"``<``\\ *opcode*\\ ``>    <``\\ *operand0*\\ ``>, <``\\ *operand1*\\ "
"``>,...    <``\\ *modifier0*\\ ``> <``\\ *modifier1*\\ ``>...``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5755
msgid ""
":doc:`Operands<AMDGPUOperandSyntax>` are normally comma-separated while :doc:"
"`modifiers<AMDGPUModifierSyntax>` are space-separated."
msgstr ""

#: ../../../AMDGPUUsage.rst:5758
msgid ""
"The order of *operands* and *modifiers* is fixed. Most *modifiers* are "
"optional and may be omitted."
msgstr ""

#: ../../../AMDGPUUsage.rst:5761
msgid ""
"See detailed instruction syntax description for :doc:`GFX7<AMDGPU/"
"AMDGPUAsmGFX7>`, :doc:`GFX8<AMDGPU/AMDGPUAsmGFX8>`, :doc:`GFX9<AMDGPU/"
"AMDGPUAsmGFX9>` and :doc:`GFX10<AMDGPU/AMDGPUAsmGFX10>`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5765
msgid ""
"Note that features under development are not included in this description."
msgstr ""

#: ../../../AMDGPUUsage.rst:5767
msgid ""
"For more information about instructions, their semantics and supported "
"combinations of operands, refer to one of instruction set architecture "
"manuals [AMD-GCN-GFX6]_, [AMD-GCN-GFX7]_, [AMD-GCN-GFX8]_, [AMD-GCN-GFX9]_ "
"and [AMD-GCN-GFX10]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:5773
msgid "Operands"
msgstr ""

#: ../../../AMDGPUUsage.rst:5775
msgid ""
"Detailed description of operands may be found :doc:"
"`here<AMDGPUOperandSyntax>`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5778
msgid "Modifiers"
msgstr ""

#: ../../../AMDGPUUsage.rst:5780
msgid ""
"Detailed description of modifiers may be found :doc:"
"`here<AMDGPUModifierSyntax>`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5783
msgid "Instruction Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:5786
msgid "DS"
msgstr ""

#: ../../../AMDGPUUsage.rst:5796
msgid ""
"For full list of supported instructions, refer to \"LDS/GDS instructions\" "
"in ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:5799
msgid "FLAT"
msgstr ""

#: ../../../AMDGPUUsage.rst:5809
msgid ""
"For full list of supported instructions, refer to \"FLAT instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:5812
msgid "MUBUF"
msgstr ""

#: ../../../AMDGPUUsage.rst:5822
msgid ""
"For full list of supported instructions, refer to \"MUBUF Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:5825
msgid "SMRD/SMEM"
msgstr ""

#: ../../../AMDGPUUsage.rst:5835
msgid ""
"For full list of supported instructions, refer to \"Scalar Memory "
"Operations\" in ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:5838
msgid "SOP1"
msgstr ""

#: ../../../AMDGPUUsage.rst:5850
msgid ""
"For full list of supported instructions, refer to \"SOP1 Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:5853
msgid "SOP2"
msgstr ""

#: ../../../AMDGPUUsage.rst:5867
msgid ""
"For full list of supported instructions, refer to \"SOP2 Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:5870
msgid "SOPC"
msgstr ""

#: ../../../AMDGPUUsage.rst:5879
msgid ""
"For full list of supported instructions, refer to \"SOPC Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:5882
msgid "SOPP"
msgstr ""

#: ../../../AMDGPUUsage.rst:5898
msgid ""
"For full list of supported instructions, refer to \"SOPP Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:5900
msgid ""
"Unless otherwise mentioned, little verification is performed on the operands "
"of SOPP Instructions, so it is up to the programmer to be familiar with the "
"range or acceptable values."
msgstr ""

#: ../../../AMDGPUUsage.rst:5905
msgid "VALU"
msgstr ""

#: ../../../AMDGPUUsage.rst:5907
msgid ""
"For vector ALU instruction opcodes (VOP1, VOP2, VOP3, VOPC, VOP_DPP, "
"VOP_SDWA), the assembler will automatically use optimal encoding based on "
"its operands. To force specific encoding, one can add a suffix to the opcode "
"of the instruction:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5911
msgid "_e32 for 32-bit VOP1/VOP2/VOPC"
msgstr ""

#: ../../../AMDGPUUsage.rst:5912
msgid "_e64 for 64-bit VOP3"
msgstr ""

#: ../../../AMDGPUUsage.rst:5913
msgid "_dpp for VOP_DPP"
msgstr ""

#: ../../../AMDGPUUsage.rst:5914
msgid "_sdwa for VOP_SDWA"
msgstr ""

#: ../../../AMDGPUUsage.rst:5916
msgid "VOP1/VOP2/VOP3/VOPC examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5933
msgid "VOP_DPP examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5946
msgid "VOP_SDWA examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5956
msgid ""
"For full list of supported instructions, refer to \"Vector ALU "
"instructions\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:5964
msgid "Code Object V2 Predefined Symbols (-mattr=-code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5966
msgid ""
"Code Object V2 is not the default code object version emitted by this "
"version of LLVM. For a description of the predefined symbols available with "
"the default configuration (Code Object V3) see :ref:`amdgpu-amdhsa-assembler-"
"predefined-symbols-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5971 ../../../AMDGPUUsage.rst:6142
msgid ""
"The AMDGPU assembler defines and updates some symbols automatically. These "
"symbols do not affect code generation."
msgstr ""

#: ../../../AMDGPUUsage.rst:5975
msgid ".option.machine_version_major"
msgstr ""

#: ../../../AMDGPUUsage.rst:5977 ../../../AMDGPUUsage.rst:6148
msgid ""
"Set to the GFX major generation number of the target being assembled for. "
"For example, when assembling for a \"GFX9\" target this will be set to the "
"integer value \"9\". The possible GFX major generation numbers are presented "
"in :ref:`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5983
msgid ".option.machine_version_minor"
msgstr ""

#: ../../../AMDGPUUsage.rst:5985 ../../../AMDGPUUsage.rst:6156
msgid ""
"Set to the GFX minor generation number of the target being assembled for. "
"For example, when assembling for a \"GFX810\" target this will be set to the "
"integer value \"1\". The possible GFX minor generation numbers are presented "
"in :ref:`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5991
msgid ".option.machine_version_stepping"
msgstr ""

#: ../../../AMDGPUUsage.rst:5993 ../../../AMDGPUUsage.rst:6164
msgid ""
"Set to the GFX stepping generation number of the target being assembled for. "
"For example, when assembling for a \"GFX704\" target this will be set to the "
"integer value \"4\". The possible GFX stepping generation numbers are "
"presented in :ref:`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5999
msgid ".kernel.vgpr_count"
msgstr ""

#: ../../../AMDGPUUsage.rst:6001
msgid ""
"Set to zero each time a :ref:`amdgpu-amdhsa-assembler-directive-"
"amdgpu_hsa_kernel` directive is encountered. At each instruction, if the "
"current value of this symbol is less than or equal to the maximum VPGR "
"number explicitly referenced within that instruction then the symbol value "
"is updated to equal that VGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:6009
msgid ".kernel.sgpr_count"
msgstr ""

#: ../../../AMDGPUUsage.rst:6011
msgid ""
"Set to zero each time a :ref:`amdgpu-amdhsa-assembler-directive-"
"amdgpu_hsa_kernel` directive is encountered. At each instruction, if the "
"current value of this symbol is less than or equal to the maximum VPGR "
"number explicitly referenced within that instruction then the symbol value "
"is updated to equal that SGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:6021
msgid "Code Object V2 Directives (-mattr=-code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6023
msgid ""
"Code Object V2 is not the default code object version emitted by this "
"version of LLVM. For a description of the directives supported with the "
"default configuration (Code Object V3) see :ref:`amdgpu-amdhsa-assembler-"
"directives-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6028
msgid ""
"AMDGPU ABI defines auxiliary data in output code object. In assembly source, "
"one can specify them with assembler directives."
msgstr ""

#: ../../../AMDGPUUsage.rst:6032
msgid ".hsa_code_object_version major, minor"
msgstr ""

#: ../../../AMDGPUUsage.rst:6034
msgid ""
"*major* and *minor* are integers that specify the version of the HSA code "
"object that will be generated by the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:6038
msgid ".hsa_code_object_isa [major, minor, stepping, vendor, arch]"
msgstr ""

#: ../../../AMDGPUUsage.rst:6041
msgid ""
"*major*, *minor*, and *stepping* are all integers that describe the "
"instruction set architecture (ISA) version of the assembly program."
msgstr ""

#: ../../../AMDGPUUsage.rst:6044
msgid ""
"*vendor* and *arch* are quoted strings.  *vendor* should always be equal to "
"\"AMD\" and *arch* should always be equal to \"AMDGPU\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:6047
msgid ""
"By default, the assembler will derive the ISA version, *vendor*, and *arch* "
"from the value of the -mcpu option that is passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:6053
msgid ".amdgpu_hsa_kernel (name)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6055
msgid ""
"This directives specifies that the symbol with given name is a kernel entry "
"point (label) and the object should contain corresponding symbol of type "
"STT_AMDGPU_HSA_KERNEL."
msgstr ""

#: ../../../AMDGPUUsage.rst:6059
msgid ".amd_kernel_code_t"
msgstr ""

#: ../../../AMDGPUUsage.rst:6061
msgid ""
"This directive marks the beginning of a list of key / value pairs that are "
"used to specify the amd_kernel_code_t object that will be emitted by the "
"assembler. The list must be terminated by the *.end_amd_kernel_code_t* "
"directive.  For any amd_kernel_code_t values that are unspecified a default "
"value will be used.  The default value for all keys is 0, with the following "
"exceptions:"
msgstr ""

#: ../../../AMDGPUUsage.rst:6067
msgid "*amd_code_version_major* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:6068
msgid "*amd_kernel_code_version_minor* defaults to 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:6069
msgid "*amd_machine_kind* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:6070
msgid ""
"*amd_machine_version_major*, *machine_version_minor*, and "
"*amd_machine_version_stepping* are derived from the value of the -mcpu "
"option that is passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:6073
msgid "*kernel_code_entry_byte_offset* defaults to 256."
msgstr ""

#: ../../../AMDGPUUsage.rst:6074
msgid ""
"*wavefront_size* defaults 6 for all targets before GFX10. For GFX10 onwards "
"defaults to 6 if target feature ``wavefrontsize64`` is enabled, otherwise 5. "
"Note that wavefront size is specified as a power of two, so a value of **n** "
"means a size of 2^ **n**."
msgstr ""

#: ../../../AMDGPUUsage.rst:6078
msgid "*call_convention* defaults to -1."
msgstr ""

#: ../../../AMDGPUUsage.rst:6079
msgid ""
"*kernarg_segment_alignment*, *group_segment_alignment*, and "
"*private_segment_alignment* default to 4. Note that alignments are specified "
"as a power of 2, so a value of **n** means an alignment of 2^ **n**."
msgstr ""

#: ../../../AMDGPUUsage.rst:6082
msgid ""
"*enable_wgp_mode* defaults to 1 if target feature ``cumode`` is disabled for "
"GFX10 onwards."
msgstr ""

#: ../../../AMDGPUUsage.rst:6084
msgid "*enable_mem_ordered* defaults to 1 for GFX10 onwards."
msgstr ""

#: ../../../AMDGPUUsage.rst:6086
msgid ""
"The *.amd_kernel_code_t* directive must be placed immediately after the "
"function label and before any instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:6089
msgid ""
"For a full list of amd_kernel_code_t keys, refer to AMDGPU ABI document, "
"comments in lib/Target/AMDGPU/AmdKernelCodeT.h and test/CodeGen/AMDGPU/hsa.s."
msgstr ""

#: ../../../AMDGPUUsage.rst:6095
msgid "Code Object V2 Example Source Code (-mattr=-code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6097
msgid ""
"Code Object V2 is not the default code object version emitted by this "
"version of LLVM. For a description of the directives supported with the "
"default configuration (Code Object V3) see :ref:`amdgpu-amdhsa-assembler-"
"example-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6102 ../../../AMDGPUUsage.rst:6359
msgid ""
"Here is an example of a minimal assembly source file, defining one HSA "
"kernel:"
msgstr ""

#: ../../../AMDGPUUsage.rst:6140
msgid "Code Object V3 Predefined Symbols (-mattr=+code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6146
msgid ".amdgcn.gfx_generation_number"
msgstr ""

#: ../../../AMDGPUUsage.rst:6154
msgid ".amdgcn.gfx_generation_minor"
msgstr ""

#: ../../../AMDGPUUsage.rst:6162
msgid ".amdgcn.gfx_generation_stepping"
msgstr ""

#: ../../../AMDGPUUsage.rst:6172
msgid ".amdgcn.next_free_vgpr"
msgstr ""

#: ../../../AMDGPUUsage.rst:6174
msgid ""
"Set to zero before assembly begins. At each instruction, if the current "
"value of this symbol is less than or equal to the maximum VGPR number "
"explicitly referenced within that instruction then the symbol value is "
"updated to equal that VGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:6179
msgid ""
"May be used to set the `.amdhsa_next_free_vpgr` directive in :ref:`amdhsa-"
"kernel-directives-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6182 ../../../AMDGPUUsage.rst:6197
msgid ""
"May be set at any time, e.g. manually set to zero at the start of each "
"kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:6187
msgid ".amdgcn.next_free_sgpr"
msgstr ""

#: ../../../AMDGPUUsage.rst:6189
msgid ""
"Set to zero before assembly begins. At each instruction, if the current "
"value of this symbol is less than or equal the maximum SGPR number "
"explicitly referenced within that instruction then the symbol value is "
"updated to equal that SGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:6194
msgid ""
"May be used to set the `.amdhsa_next_free_spgr` directive in :ref:`amdhsa-"
"kernel-directives-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6202
msgid "Code Object V3 Directives (-mattr=+code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6204
msgid ""
"Directives which begin with ``.amdgcn`` are valid for all ``amdgcn`` "
"architecture processors, and are not OS-specific. Directives which begin "
"with ``.amdhsa`` are specific to ``amdgcn`` architecture processors when the "
"``amdhsa`` OS is specified. See :ref:`amdgpu-target-triples` and :ref:"
"`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6211
msgid ".amdgcn_target <target>"
msgstr ""

#: ../../../AMDGPUUsage.rst:6213
msgid ""
"Optional directive which declares the target supported by the containing "
"assembler source file. Valid values are described in :ref:`amdgpu-amdhsa-"
"code-object-target-identification`. Used by the assembler to validate "
"command-line options such as ``-triple``, ``-mcpu``, and those which specify "
"target features."
msgstr ""

#: ../../../AMDGPUUsage.rst:6220
msgid ".amdhsa_kernel <name>"
msgstr ""

#: ../../../AMDGPUUsage.rst:6222
msgid ""
"Creates a correctly aligned AMDHSA kernel descriptor and a symbol, ``<name>."
"kd``, in the current location of the current section. Only valid when the OS "
"is ``amdhsa``. ``<name>`` must be a symbol that labels the first instruction "
"to execute, and does not need to be previously defined."
msgstr ""

#: ../../../AMDGPUUsage.rst:6227
msgid ""
"Marks the beginning of a list of directives used to generate the bytes of a "
"kernel descriptor, as described in :ref:`amdgpu-amdhsa-kernel-descriptor`. "
"Directives which may appear in this list are described in :ref:`amdhsa-"
"kernel-directives-table`. Directives may appear in any order, must be valid "
"for the target being assembled for, and cannot be repeated. Directives "
"support the range of values specified by the field they reference in :ref:"
"`amdgpu-amdhsa-kernel-descriptor`. If a directive is not specified, it is "
"assumed to have its default value, unless it is marked as \"Required\", in "
"which case it is an error to omit the directive. This list of directives is "
"terminated by an ``.end_amdhsa_kernel`` directive."
msgstr ""

#: ../../../AMDGPUUsage.rst:6238
msgid "AMDHSA Kernel Assembler Directives"
msgstr ""

#: ../../../AMDGPUUsage.rst:6242
msgid "Directive"
msgstr ""

#: ../../../AMDGPUUsage.rst:6242
msgid "Default"
msgstr ""

#: ../../../AMDGPUUsage.rst:6242
msgid "Supported On"
msgstr ""

#: ../../../AMDGPUUsage.rst:6244
msgid "``.amdhsa_group_segment_fixed_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6244 ../../../AMDGPUUsage.rst:6246
#: ../../../AMDGPUUsage.rst:6248 ../../../AMDGPUUsage.rst:6250
#: ../../../AMDGPUUsage.rst:6252 ../../../AMDGPUUsage.rst:6254
#: ../../../AMDGPUUsage.rst:6256 ../../../AMDGPUUsage.rst:6258
#: ../../../AMDGPUUsage.rst:6260 ../../../AMDGPUUsage.rst:6266
#: ../../../AMDGPUUsage.rst:6268 ../../../AMDGPUUsage.rst:6270
#: ../../../AMDGPUUsage.rst:6272 ../../../AMDGPUUsage.rst:6274
#: ../../../AMDGPUUsage.rst:6276 ../../../AMDGPUUsage.rst:6280
#: ../../../AMDGPUUsage.rst:6283 ../../../AMDGPUUsage.rst:6286
#: ../../../AMDGPUUsage.rst:6297 ../../../AMDGPUUsage.rst:6301
#: ../../../AMDGPUUsage.rst:6305 ../../../AMDGPUUsage.rst:6309
#: ../../../AMDGPUUsage.rst:6313 ../../../AMDGPUUsage.rst:6315
#: ../../../AMDGPUUsage.rst:6327 ../../../AMDGPUUsage.rst:6329
#: ../../../AMDGPUUsage.rst:6331 ../../../AMDGPUUsage.rst:6333
#: ../../../AMDGPUUsage.rst:6335 ../../../AMDGPUUsage.rst:6337
#: ../../../AMDGPUUsage.rst:6339
msgid "GFX6-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:6244
msgid ""
"Controls GROUP_SEGMENT_FIXED_SIZE in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6246
msgid "``.amdhsa_private_segment_fixed_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6246
msgid ""
"Controls PRIVATE_SEGMENT_FIXED_SIZE in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6248
msgid "``.amdhsa_user_sgpr_private_segment_buffer``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6248
msgid ""
"Controls ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6250
msgid "``.amdhsa_user_sgpr_dispatch_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6250
msgid ""
"Controls ENABLE_SGPR_DISPATCH_PTR in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6252
msgid "``.amdhsa_user_sgpr_queue_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6252
msgid ""
"Controls ENABLE_SGPR_QUEUE_PTR in :ref:`amdgpu-amdhsa-kernel-descriptor-gfx6-"
"gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6254
msgid "``.amdhsa_user_sgpr_kernarg_segment_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6254
msgid ""
"Controls ENABLE_SGPR_KERNARG_SEGMENT_PTR in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6256
msgid "``.amdhsa_user_sgpr_dispatch_id``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6256
msgid ""
"Controls ENABLE_SGPR_DISPATCH_ID in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6258
msgid "``.amdhsa_user_sgpr_flat_scratch_init``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6258
msgid ""
"Controls ENABLE_SGPR_FLAT_SCRATCH_INIT in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6260
msgid "``.amdhsa_user_sgpr_private_segment_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6260
msgid ""
"Controls ENABLE_SGPR_PRIVATE_SEGMENT_SIZE in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6262
msgid "``.amdhsa_wavefront_size32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6262
msgid "Target Feature Specific (-wavefrontsize64)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6262
msgid ""
"Controls ENABLE_WAVEFRONT_SIZE32 in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6266
msgid "``.amdhsa_system_sgpr_private_segment_wavefront_offset``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6266
msgid ""
"Controls ENABLE_SGPR_PRIVATE_SEGMENT_WAVEFRONT_OFFSET in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6268
msgid "``.amdhsa_system_sgpr_workgroup_id_x``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6268
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_ID_X in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6270
msgid "``.amdhsa_system_sgpr_workgroup_id_y``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6270
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_ID_Y in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6272
msgid "``.amdhsa_system_sgpr_workgroup_id_z``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6272
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_ID_Z in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6274
msgid "``.amdhsa_system_sgpr_workgroup_info``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6274
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_INFO in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6276
msgid "``.amdhsa_system_vgpr_workitem_id``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6276
msgid ""
"Controls ENABLE_VGPR_WORKITEM_ID in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-system-"
"vgpr-work-item-id-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6280
msgid "``.amdhsa_next_free_vgpr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6280
msgid ""
"Maximum VGPR number explicitly referenced, plus one. Used to calculate "
"GRANULATED_WORKITEM_VGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6283
msgid "``.amdhsa_next_free_sgpr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6283
msgid ""
"Maximum SGPR number explicitly referenced, plus one. Used to calculate "
"GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6286
msgid "``.amdhsa_reserve_vcc``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6286
msgid ""
"Whether the kernel may use the special VCC SGPR. Used to calculate "
"GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6289
msgid "``.amdhsa_reserve_flat_scratch``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6289
msgid "GFX7-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:6289
msgid ""
"Whether the kernel may use flat instructions to access scratch memory. Used "
"to calculate GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc1-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6293
msgid "``.amdhsa_reserve_xnack_mask``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6293
msgid "Target Feature Specific (+xnack)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6293
msgid "GFX8-GFX10"
msgstr ""

#: ../../../AMDGPUUsage.rst:6293
msgid ""
"Whether the kernel may trigger XNACK replay. Used to calculate "
"GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6297
msgid "``.amdhsa_float_round_mode_32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6297
msgid ""
"Controls FLOAT_ROUND_MODE_32 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-floating-"
"point-rounding-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6301
msgid "``.amdhsa_float_round_mode_16_64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6301
msgid ""
"Controls FLOAT_ROUND_MODE_16_64 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-rounding-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6305
msgid "``.amdhsa_float_denorm_mode_32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6305
msgid ""
"Controls FLOAT_DENORM_MODE_32 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-floating-"
"point-denorm-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6309
msgid "``.amdhsa_float_denorm_mode_16_64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6309
msgid ""
"Controls FLOAT_DENORM_MODE_16_64 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx10-table`. Possible values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-denorm-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6313
msgid "``.amdhsa_dx10_clamp``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6313
msgid ""
"Controls ENABLE_DX10_CLAMP in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6315
msgid "``.amdhsa_ieee_mode``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6315
msgid ""
"Controls ENABLE_IEEE_MODE in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6317
msgid "``.amdhsa_fp16_overflow``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6317
msgid ""
"Controls FP16_OVFL in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6319
msgid "``.amdhsa_workgroup_processor_mode``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6319
msgid "Target Feature Specific (-cumode)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6319
msgid ""
"Controls ENABLE_WGP_MODE in :ref:`amdgpu-amdhsa-kernel-descriptor-gfx6-gfx10-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6323
msgid "``.amdhsa_memory_ordered``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6323
msgid ""
"Controls MEM_ORDERED in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6325
msgid "``.amdhsa_forward_progress``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6325
msgid ""
"Controls FWD_PROGRESS in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx10-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6327
msgid "``.amdhsa_exception_fp_ieee_invalid_op``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6327
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_INVALID_OPERATION in :ref:`amdgpu-"
"amdhsa-compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6329
msgid "``.amdhsa_exception_fp_denorm_src``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6329
msgid ""
"Controls ENABLE_EXCEPTION_FP_DENORMAL_SOURCE in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6331
msgid "``.amdhsa_exception_fp_ieee_div_zero``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6331
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_DIVISION_BY_ZERO in :ref:`amdgpu-"
"amdhsa-compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6333
msgid "``.amdhsa_exception_fp_ieee_overflow``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6333
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_OVERFLOW in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6335
msgid "``.amdhsa_exception_fp_ieee_underflow``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6335
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_UNDERFLOW in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6337
msgid "``.amdhsa_exception_fp_ieee_inexact``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6337
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_INEXACT in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6339
msgid "``.amdhsa_exception_int_div_zero``"
msgstr ""

#: ../../../AMDGPUUsage.rst:6339
msgid ""
"Controls ENABLE_EXCEPTION_INT_DIVIDE_BY_ZERO in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx10-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6344
msgid ".amdgpu_metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:6346
msgid ""
"Optional directive which declares the contents of the ``NT_AMDGPU_METADATA`` "
"note record (see :ref:`amdgpu-elf-note-records-table-v3`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:6349
msgid ""
"The contents must be in the [YAML]_ markup format, with the same structure "
"and semantics described in :ref:`amdgpu-amdhsa-code-object-metadata-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:6352
msgid "This directive is terminated by an ``.end_amdgpu_metadata`` directive."
msgstr ""

#: ../../../AMDGPUUsage.rst:6357
msgid "Code Object V3 Example Source Code (-mattr=+code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:6407
msgid ""
"If an assembly source file contains multiple kernels and/or functions, the :"
"ref:`amdgpu-amdhsa-assembler-symbol-next_free_vgpr` and :ref:`amdgpu-amdhsa-"
"assembler-symbol-next_free_sgpr` symbols may be reset using the ``.set "
"<symbol>, <expression>`` directive. For example, in the case of two kernels, "
"where ``function1`` is only called from ``kernel1`` it is sufficient to "
"group the function with the kernel that calls it and reset the symbols "
"between the two connected components:"
msgstr ""

#: ../../../AMDGPUUsage.rst:6476
msgid ""
"These symbols cannot identify connected components in order to automatically "
"track the usage for each kernel. However, in some cases careful organization "
"of the kernels and functions in the source file means there is minimal "
"additional effort required to accurately calculate GPR usage."
msgstr ""

#: ../../../AMDGPUUsage.rst:6482
msgid "Additional Documentation"
msgstr ""

#: ../../../AMDGPUUsage.rst:6484
msgid ""
"`AMD R6xx shader ISA <http://developer.amd.com/wordpress/media/2012/10/"
"R600_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6485
msgid ""
"`AMD R7xx shader ISA <http://developer.amd.com/wordpress/media/2012/10/R700-"
"Family_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6486
msgid ""
"`AMD Evergreen shader ISA <http://developer.amd.com/wordpress/media/2012/10/"
"AMD_Evergreen-Family_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6487
msgid ""
"`AMD Cayman/Trinity shader ISA <http://developer.amd.com/wordpress/"
"media/2012/10/AMD_HD_6900_Series_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6488
msgid ""
"`AMD Southern Islands Series ISA <http://developer.amd.com/wordpress/"
"media/2012/12/AMD_Southern_Islands_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6489
msgid ""
"`AMD Sea Islands Series ISA <http://developer.amd.com/wordpress/"
"media/2013/07/AMD_Sea_Islands_Instruction_Set_Architecture.pdf>`_"
msgstr ""

#: ../../../AMDGPUUsage.rst:6490
msgid ""
"`AMD GCN3 Instruction Set Architecture <http://amd-dev.wpengine.netdna-cdn."
"com/wordpress/media/2013/12/AMD_GCN3_Instruction_Set_Architecture_rev1.1."
"pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6491
msgid ""
"`AMD \"Vega\" Instruction Set Architecture <http://developer.amd.com/"
"wordpress/media/2013/12/Vega_Shader_ISA_28July2017.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6492
msgid "AMD \"Navi\" Instruction Set Architecture *TBA*"
msgstr ""

#: ../../../AMDGPUUsage.rst:6495
msgid ""
"`ROCm: Open Platform for Development, Discovery and Education Around GPU "
"Computing <http://gpuopen.com/compute-product/rocm/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6496
msgid "`ROCm github <http://github.com/RadeonOpenCompute>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6497
msgid ""
"`Heterogeneous System Architecture (HSA) Foundation <http://www."
"hsafoundation.com/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6498
msgid ""
"`Executable and Linkable Format (ELF) <http://www.sco.com/developers/gabi/"
">`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6499
msgid "`DWARF Debugging Information Format <http://dwarfstd.org/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6500
msgid ""
"`YAML Ain't Markup Language (YAML™) Version 1.2 <http://www.yaml.org/"
"spec/1.2/spec.html>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6501
msgid "`Message Pack <http://www.msgpack.org/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6502
msgid ""
"`The OpenCL Specification Version 2.0 <http://www.khronos.org/registry/cl/"
"specs/opencl-2.0.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6503
msgid ""
"`Heterogeneous-race-free Memory Models <http://benedictgaster.org/wp-content/"
"uploads/2014/01/asplos269-FINAL.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:6504
msgid ""
"`Attributes in Clang <http://clang.llvm.org/docs/AttributeReference.html>`__"
msgstr ""
