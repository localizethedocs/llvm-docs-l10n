Search.setIndex({"alltitles": {"!vcall_visibility Metadata": [[783, "vcall-visibility-metadata"]], "#0 - BLOCKINFO Block": [[598, "blockinfo-block"]], "#include <iostream> is Forbidden": [[611, "include-iostream-is-forbidden"]], "#include Style": [[611, "include-style"]], "#include as Little as Possible": [[611, "include-as-little-as-possible"]], "-aa-eval: Exhaustive Alias Analysis Precision Evaluator": [[746, "aa-eval-exhaustive-alias-analysis-precision-evaluator"]], "-adce: Aggressive Dead Code Elimination": [[746, "adce-aggressive-dead-code-elimination"]], "-aggressive-instcombine: Combine expression patterns": [[746, "aggressive-instcombine-combine-expression-patterns"]], "-always-inline: Inliner for always_inline functions": [[746, "always-inline-inliner-for-always-inline-functions"]], "-argpromotion: Promote \u201cby reference\u201d arguments to scalars": [[746, "argpromotion-promote-by-reference-arguments-to-scalars"]], "-basic-aa: Basic Alias Analysis (stateless AA impl)": [[746, "basic-aa-basic-alias-analysis-stateless-aa-impl"]], "-basiccg: Basic CallGraph Construction": [[746, "basiccg-basic-callgraph-construction"]], "-bb-vectorize: Basic-Block Vectorization": [[746, "bb-vectorize-basic-block-vectorization"]], "-block-placement: Profile Guided Basic Block Placement": [[746, "block-placement-profile-guided-basic-block-placement"]], "-break-crit-edges: Break critical edges in CFG": [[746, "break-crit-edges-break-critical-edges-in-cfg"]], "-codegenprepare: Optimize for code generation": [[746, "codegenprepare-optimize-for-code-generation"]], "-constmerge: Merge Duplicate Global Constants": [[746, "constmerge-merge-duplicate-global-constants"]], "-count-aa: Count Alias Analysis Query Responses": [[746, "count-aa-count-alias-analysis-query-responses"]], "-da: Dependence Analysis": [[746, "da-dependence-analysis"]], "-dce: Dead Code Elimination": [[746, "dce-dead-code-elimination"]], "-deadargelim: Dead Argument Elimination": [[746, "deadargelim-dead-argument-elimination"]], "-deadarghaX0r: Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)": [[746, "deadarghax0r-dead-argument-hacking-bugpoint-use-only-do-not-use"]], "-deadtypeelim: Dead Type Elimination": [[746, "deadtypeelim-dead-type-elimination"]], "-debug-aa: AA use debugger": [[746, "debug-aa-aa-use-debugger"]], "-die: Dead Instruction Elimination": [[746, "die-dead-instruction-elimination"]], "-domfrontier: Dominance Frontier Construction": [[746, "domfrontier-dominance-frontier-construction"]], "-domtree: Dominator Tree Construction": [[746, "domtree-dominator-tree-construction"]], "-dot-callgraph: Print Call Graph to \u00ab\u00a0dot\u00a0\u00bb file": [[746, "dot-callgraph-print-call-graph-to-dot-file"]], "-dot-cfg-only: Print CFG of function to \u00ab\u00a0dot\u00a0\u00bb file (with no function bodies)": [[746, "dot-cfg-only-print-cfg-of-function-to-dot-file-with-no-function-bodies"]], "-dot-cfg: Print CFG of function to \u00ab\u00a0dot\u00a0\u00bb file": [[746, "dot-cfg-print-cfg-of-function-to-dot-file"]], "-dot-dom-only: Print dominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file (with no function bodies)": [[746, "dot-dom-only-print-dominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-dom: Print dominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file": [[746, "dot-dom-print-dominance-tree-of-function-to-dot-file"]], "-dot-postdom-only: Print postdominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file (with no function bodies)": [[746, "dot-postdom-only-print-postdominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-postdom: Print postdominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file": [[746, "dot-postdom-print-postdominance-tree-of-function-to-dot-file"]], "-dse: Dead Store Elimination": [[746, "dse-dead-store-elimination"]], "-extract-blocks: Extract Basic Blocks From Module (for bugpoint use)": [[746, "extract-blocks-extract-basic-blocks-from-module-for-bugpoint-use"]], "-function-attrs: Deduce function attributes": [[746, "function-attrs-deduce-function-attributes"]], "-globaldce: Dead Global Elimination": [[746, "globaldce-dead-global-elimination"]], "-globalopt: Global Variable Optimizer": [[746, "globalopt-global-variable-optimizer"]], "-globalsmodref-aa: Simple mod/ref analysis for globals": [[746, "globalsmodref-aa-simple-mod-ref-analysis-for-globals"]], "-gvn: Global Value Numbering": [[746, "gvn-global-value-numbering"]], "-indvars: Canonicalize Induction Variables": [[746, "indvars-canonicalize-induction-variables"]], "-inline: Function Integration/Inlining": [[746, "inline-function-integration-inlining"]], "-instcombine: Combine redundant instructions": [[746, "instcombine-combine-redundant-instructions"]], "-instcount: Counts the various types of Instructions": [[746, "instcount-counts-the-various-types-of-instructions"]], "-instnamer: Assign names to anonymous instructions": [[746, "instnamer-assign-names-to-anonymous-instructions"]], "-internalize: Internalize Global Symbols": [[746, "internalize-internalize-global-symbols"]], "-intervals: Interval Partition Construction": [[746, "intervals-interval-partition-construction"]], "-ipsccp: Interprocedural Sparse Conditional Constant Propagation": [[746, "ipsccp-interprocedural-sparse-conditional-constant-propagation"]], "-iv-users: Induction Variable Users": [[746, "iv-users-induction-variable-users"]], "-jump-threading: Jump Threading": [[746, "jump-threading-jump-threading"]], "-lazy-value-info: Lazy Value Information Analysis": [[746, "lazy-value-info-lazy-value-information-analysis"]], "-lcssa: Loop-Closed SSA Form Pass": [[746, "lcssa-loop-closed-ssa-form-pass"]], "-libcall-aa: LibCall Alias Analysis": [[746, "libcall-aa-libcall-alias-analysis"]], "-licm: Loop Invariant Code Motion": [[746, "licm-loop-invariant-code-motion"]], "-lint: Statically lint-checks LLVM IR": [[746, "lint-statically-lint-checks-llvm-ir"]], "-loop-deletion: Delete dead loops": [[746, "loop-deletion-delete-dead-loops"]], "-loop-extract-single: Extract at most one loop into a new function": [[746, "loop-extract-single-extract-at-most-one-loop-into-a-new-function"]], "-loop-extract: Extract loops into new functions": [[746, "loop-extract-extract-loops-into-new-functions"]], "-loop-reduce: Loop Strength Reduction": [[746, "loop-reduce-loop-strength-reduction"]], "-loop-rotate: Rotate Loops": [[746, "loop-rotate-rotate-loops"]], "-loop-simplify: Canonicalize natural loops": [[746, "loop-simplify-canonicalize-natural-loops"]], "-loop-unroll-and-jam: Unroll and Jam loops": [[746, "loop-unroll-and-jam-unroll-and-jam-loops"]], "-loop-unroll: Unroll loops": [[746, "loop-unroll-unroll-loops"]], "-loop-unswitch: Unswitch loops": [[746, "loop-unswitch-unswitch-loops"]], "-loops: Natural Loop Information": [[746, "loops-natural-loop-information"]], "-loweratomic: Lower atomic intrinsics to non-atomic form": [[746, "loweratomic-lower-atomic-intrinsics-to-non-atomic-form"]], "-lowerinvoke: Lower invokes to calls, for unwindless code generators": [[746, "lowerinvoke-lower-invokes-to-calls-for-unwindless-code-generators"]], "-lowerswitch: Lower SwitchInsts to branches": [[746, "lowerswitch-lower-switchinsts-to-branches"]], "-mem2reg: Promote Memory to Register": [[746, "mem2reg-promote-memory-to-register"]], "-memcpyopt: MemCpy Optimization": [[746, "memcpyopt-memcpy-optimization"]], "-memdep: Memory Dependence Analysis": [[746, "memdep-memory-dependence-analysis"]], "-mergefunc: Merge Functions": [[746, "mergefunc-merge-functions"]], "-mergereturn: Unify function exit nodes": [[746, "mergereturn-unify-function-exit-nodes"]], "-module-debuginfo: Decodes module-level debug info": [[746, "module-debuginfo-decodes-module-level-debug-info"]], "-partial-inliner: Partial Inliner": [[746, "partial-inliner-partial-inliner"]], "-postdomfrontier: Post-Dominance Frontier Construction": [[746, "postdomfrontier-post-dominance-frontier-construction"]], "-postdomtree: Post-Dominator Tree Construction": [[746, "postdomtree-post-dominator-tree-construction"]], "-print-alias-sets: Alias Set Printer": [[746, "print-alias-sets-alias-set-printer"]], "-print-callgraph-sccs: Print SCCs of the Call Graph": [[746, "print-callgraph-sccs-print-sccs-of-the-call-graph"]], "-print-callgraph: Print a call graph": [[746, "print-callgraph-print-a-call-graph"]], "-print-cfg-sccs: Print SCCs of each function CFG": [[746, "print-cfg-sccs-print-sccs-of-each-function-cfg"]], "-print-dom-info: Dominator Info Printer": [[746, "print-dom-info-dominator-info-printer"]], "-print-externalfnconstants: Print external fn callsites passed constants": [[746, "print-externalfnconstants-print-external-fn-callsites-passed-constants"]], "-print-function: Print function to stderr": [[746, "print-function-print-function-to-stderr"]], "-print-module: Print module to stderr": [[746, "print-module-print-module-to-stderr"]], "-print-used-types: Find Used Types": [[746, "print-used-types-find-used-types"]], "-prune-eh: Remove unused exception handling info": [[746, "prune-eh-remove-unused-exception-handling-info"]], "-reassociate: Reassociate expressions": [[746, "reassociate-reassociate-expressions"]], "-reg2mem: Demote all values to stack slots": [[746, "reg2mem-demote-all-values-to-stack-slots"]], "-regions: Detect single entry single exit regions": [[746, "regions-detect-single-entry-single-exit-regions"]], "-rel-lookup-table-converter: Relative lookup table converter": [[746, "rel-lookup-table-converter-relative-lookup-table-converter"]], "-scalar-evolution: Scalar Evolution Analysis": [[746, "scalar-evolution-scalar-evolution-analysis"]], "-sccp: Sparse Conditional Constant Propagation": [[746, "sccp-sparse-conditional-constant-propagation"]], "-scev-aa: ScalarEvolution-based Alias Analysis": [[746, "scev-aa-scalarevolution-based-alias-analysis"]], "-simplifycfg: Simplify the CFG": [[746, "simplifycfg-simplify-the-cfg"]], "-sink: Code sinking": [[746, "sink-code-sinking"]], "-sroa: Scalar Replacement of Aggregates": [[746, "sroa-scalar-replacement-of-aggregates"]], "-stack-safety: Stack Safety Analysis": [[746, "stack-safety-stack-safety-analysis"]], "-strip-dead-debug-info: Strip debug info for unused symbols": [[746, "strip-dead-debug-info-strip-debug-info-for-unused-symbols"]], "-strip-dead-prototypes: Strip Unused Function Prototypes": [[746, "strip-dead-prototypes-strip-unused-function-prototypes"]], "-strip-debug-declare: Strip all llvm.dbg.declare intrinsics": [[746, "strip-debug-declare-strip-all-llvm-dbg-declare-intrinsics"]], "-strip-nondebug: Strip all symbols, except dbg symbols, from a module": [[746, "strip-nondebug-strip-all-symbols-except-dbg-symbols-from-a-module"]], "-strip: Strip all symbols from a module": [[746, "strip-strip-all-symbols-from-a-module"]], "-tailcallelim: Tail Call Elimination": [[746, "tailcallelim-tail-call-elimination"]], "-targetdata: Target Data Layout": [[746, "targetdata-target-data-layout"]], "-transform-warning: Report missed forced transformations": [[746, "transform-warning-report-missed-forced-transformations"]], "-verify: Module Verifier": [[746, "verify-module-verifier"]], "-view-cfg-only: View CFG of function (with no function bodies)": [[746, "view-cfg-only-view-cfg-of-function-with-no-function-bodies"]], "-view-cfg: View CFG of function": [[746, "view-cfg-view-cfg-of-function"]], "-view-dom-only: View dominance tree of function (with no function bodies)": [[746, "view-dom-only-view-dominance-tree-of-function-with-no-function-bodies"]], "-view-dom: View dominance tree of function": [[746, "view-dom-view-dominance-tree-of-function"]], "-view-postdom-only: View postdominance tree of function (with no function bodies)": [[746, "view-postdom-only-view-postdominance-tree-of-function-with-no-function-bodies"]], "-view-postdom: View postdominance tree of function": [[746, "view-postdom-view-postdominance-tree-of-function"]], ".amd_kernel_code_t": [[591, "amd-kernel-code-t"]], ".amdgcn.gfx_generation_minor": [[591, "amdgcn-gfx-generation-minor"]], ".amdgcn.gfx_generation_number": [[591, "amdgcn-gfx-generation-number"]], ".amdgcn.gfx_generation_stepping": [[591, "amdgcn-gfx-generation-stepping"]], ".amdgcn.next_free_sgpr": [[591, "amdgcn-next-free-sgpr"]], ".amdgcn.next_free_vgpr": [[591, "amdgcn-next-free-vgpr"]], ".amdgcn_target <target-triple> \u00ab\u00a0-\u00a0\u00bb <target-id>": [[591, "amdgcn-target-target-triple-target-id"]], ".amdgpu_hsa_kernel (name)": [[591, "amdgpu-hsa-kernel-name"]], ".amdgpu_metadata": [[591, "amdgpu-metadata"]], ".amdhsa_kernel <name>": [[591, "amdhsa-kernel-name"]], ".cv_def_range Directive": [[675, "cv-def-range-directive"]], ".cv_file Directive": [[675, "cv-file-directive"]], ".cv_filechecksumoffset Directive": [[675, "cv-filechecksumoffset-directive"]], ".cv_filechecksums Directive": [[675, "cv-filechecksums-directive"]], ".cv_fpo_data Directive": [[675, "cv-fpo-data-directive"]], ".cv_func_id Directive": [[675, "cv-func-id-directive"]], ".cv_inline_linetable Directive": [[675, "cv-inline-linetable-directive"]], ".cv_inline_site_id Directive": [[675, "cv-inline-site-id-directive"]], ".cv_linetable Directive": [[675, "cv-linetable-directive"]], ".cv_loc Directive": [[675, "cv-loc-directive"]], ".cv_stringtable Directive": [[675, "cv-stringtable-directive"]], ".debug_info section attribute form roles": [[586, "amdgpu-dwarf-debug-info-section-attribute-form-roles-table"]], ".hsa_code_object_isa [major, minor, stepping, vendor, arch]": [[591, "hsa-code-object-isa-major-minor-stepping-vendor-arch"]], ".hsa_code_object_version major, minor": [[591, "hsa-code-object-version-major-minor"]], ".kernel.sgpr_count": [[591, "kernel-sgpr-count"]], ".kernel.vgpr_count": [[591, "kernel-vgpr-count"]], ".linker-options Section (linker options)": [[675, "linker-options-section-linker-options"]], ".linkonce Directive": [[675, "linkonce-directive"]], ".o File Writing": [[608, "o-file-writing"]], ".option.machine_version_major": [[591, "option-machine-version-major"]], ".option.machine_version_minor": [[591, "option-machine-version-minor"]], ".option.machine_version_stepping": [[591, "option-machine-version-stepping"]], ".section Directive": [[675, "section-directive"], [675, "id2"]], "1. Extension": [[585, "extension"]], "1. Extensions": [[586, "extensions"]], "1. IR-level VP intrinsics": [[754, "ir-level-vp-intrinsics"]], "1. Introduction": [[586, "introduction"]], "1.1.1\u00a0\u00a0\u00a0Concepts": [[776, "concepts"]], "1.10\u00a0\u00a0\u00a0Appendix A: Bang Operators": [[776, "appendix-a-bang-operators"]], "1.10\u00a0\u00a0\u00a0Printing Error Messages": [[775, "printing-error-messages"]], "1.11.1\u00a0\u00a0\u00a0The PrintRecords Backend": [[775, "the-printrecords-backend"]], "1.11.2\u00a0\u00a0\u00a0The PrintDetailedRecords Backend": [[775, "the-printdetailedrecords-backend"]], "1.11.3\u00a0\u00a0\u00a0Timing TableGen Phases": [[775, "timing-tablegen-phases"]], "1.11\u00a0\u00a0\u00a0Appendix B: Paste Operator Examples": [[776, "appendix-b-paste-operator-examples"]], "1.11\u00a0\u00a0\u00a0Debugging Tools": [[775, "debugging-tools"]], "1.12\u00a0\u00a0\u00a0Appendix C: Sample Record": [[776, "appendix-c-sample-record"]], "1.1\u00a0\u00a0\u00a0Introduction": [[775, "introduction"], [776, "introduction"]], "1.2.1\u00a0\u00a0\u00a0RecordKeeper": [[775, "recordkeeper"]], "1.2.2\u00a0\u00a0\u00a0Record": [[775, "record"]], "1.2.3\u00a0\u00a0\u00a0RecordVal": [[775, "recordval"]], "1.2.4.1\u00a0\u00a0\u00a0BitsRecTy": [[775, "bitsrecty"]], "1.2.4.2\u00a0\u00a0\u00a0ListRecTy": [[775, "listrecty"]], "1.2.4.3\u00a0\u00a0\u00a0RecordRecTy": [[775, "recordrecty"]], "1.2.4\u00a0\u00a0\u00a0RecTy": [[775, "recty"]], "1.2.5.1\u00a0\u00a0\u00a0UnsetInit": [[775, "unsetinit"]], "1.2.5.2\u00a0\u00a0\u00a0TypedInit": [[775, "typedinit"]], "1.2.5.3\u00a0\u00a0\u00a0BitInit": [[775, "bitinit"]], "1.2.5.4\u00a0\u00a0\u00a0BitsInit": [[775, "bitsinit"]], "1.2.5.5\u00a0\u00a0\u00a0DagInit": [[775, "daginit"]], "1.2.5.6\u00a0\u00a0\u00a0DefInit": [[775, "definit"]], "1.2.5.7\u00a0\u00a0\u00a0IntInit": [[775, "intinit"]], "1.2.5.8\u00a0\u00a0\u00a0ListInit": [[775, "listinit"]], "1.2.5.9\u00a0\u00a0\u00a0StringInit": [[775, "stringinit"]], "1.2.5\u00a0\u00a0\u00a0Init": [[775, "init"]], "1.2\u00a0\u00a0\u00a0Data Structures": [[775, "data-structures"]], "1.2\u00a0\u00a0\u00a0Source Files": [[776, "source-files"]], "1.3.1\u00a0\u00a0\u00a0Literals": [[776, "literals"]], "1.3.2\u00a0\u00a0\u00a0Identifiers": [[776, "identifiers"]], "1.3.3\u00a0\u00a0\u00a0Bang operators": [[776, "bang-operators"]], "1.3.4\u00a0\u00a0\u00a0Include files": [[776, "include-files"]], "1.3\u00a0\u00a0\u00a0Creating a New Backend": [[775, "creating-a-new-backend"]], "1.3\u00a0\u00a0\u00a0Lexical Analysis": [[776, "lexical-analysis"]], "1.4\u00a0\u00a0\u00a0The Backend Skeleton": [[775, "the-backend-skeleton"]], "1.4\u00a0\u00a0\u00a0Types": [[776, "types"]], "1.5.1\u00a0\u00a0\u00a0Simple values": [[776, "simple-values"]], "1.5.2\u00a0\u00a0\u00a0Suffixed values": [[776, "suffixed-values"]], "1.5.3\u00a0\u00a0\u00a0The paste operator": [[776, "the-paste-operator"]], "1.5\u00a0\u00a0\u00a0Getting Classes": [[775, "getting-classes"]], "1.5\u00a0\u00a0\u00a0Values and Expressions": [[776, "values-and-expressions"]], "1.6.1.1\u00a0\u00a0\u00a0Record Bodies": [[776, "record-bodies"]], "1.6.10\u00a0\u00a0\u00a0foreach \u2014 iterate over a sequence of statements": [[776, "foreach-iterate-over-a-sequence-of-statements"]], "1.6.11\u00a0\u00a0\u00a0if \u2014 select statements based on a test": [[776, "if-select-statements-based-on-a-test"]], "1.6.12\u00a0\u00a0\u00a0assert \u2014 check that a condition is true": [[776, "assert-check-that-a-condition-is-true"]], "1.6.1\u00a0\u00a0\u00a0class \u2014 define an abstract record class": [[776, "class-define-an-abstract-record-class"]], "1.6.2\u00a0\u00a0\u00a0def \u2014 define a concrete record": [[776, "def-define-a-concrete-record"]], "1.6.3\u00a0\u00a0\u00a0Examples: classes and records": [[776, "examples-classes-and-records"]], "1.6.4\u00a0\u00a0\u00a0let \u2014 override fields in classes or records": [[776, "let-override-fields-in-classes-or-records"]], "1.6.5\u00a0\u00a0\u00a0multiclass \u2014 define multiple records": [[776, "multiclass-define-multiple-records"]], "1.6.6\u00a0\u00a0\u00a0defm \u2014 invoke multiclasses to define multiple records": [[776, "defm-invoke-multiclasses-to-define-multiple-records"]], "1.6.7\u00a0\u00a0\u00a0Examples: multiclasses and defms": [[776, "examples-multiclasses-and-defms"]], "1.6.8\u00a0\u00a0\u00a0defset \u2014 create a definition set": [[776, "defset-create-a-definition-set"]], "1.6.9\u00a0\u00a0\u00a0defvar \u2014 define a variable": [[776, "defvar-define-a-variable"]], "1.6\u00a0\u00a0\u00a0Getting Records": [[775, "getting-records"]], "1.6\u00a0\u00a0\u00a0Statements": [[776, "statements"]], "1.7.1\u00a0\u00a0\u00a0Directed acyclic graphs (DAGs)": [[776, "directed-acyclic-graphs-dags"]], "1.7.2\u00a0\u00a0\u00a0Defvar in a record body": [[776, "defvar-in-a-record-body"]], "1.7.3\u00a0\u00a0\u00a0How records are built": [[776, "how-records-are-built"]], "1.7\u00a0\u00a0\u00a0Additional Details": [[776, "additional-details"]], "1.7\u00a0\u00a0\u00a0Getting Record Names and Fields": [[775, "getting-record-names-and-fields"]], "1.8\u00a0\u00a0\u00a0Getting Record Superclasses": [[775, "getting-record-superclasses"]], "1.8\u00a0\u00a0\u00a0Using Classes as Subroutines": [[776, "using-classes-as-subroutines"]], "1.9\u00a0\u00a0\u00a0Emitting Text to the Output Stream": [[775, "emitting-text-to-the-output-stream"]], "1.9\u00a0\u00a0\u00a0Preprocessing Facilities": [[776, "preprocessing-facilities"]], "10,000 ft View": [[607, "ft-view"]], "1\u00a0\u00a0\u00a0TableGen Backend Developer\u2019s Guide": [[775, null]], "1\u00a0\u00a0\u00a0TableGen Programmer\u2019s Reference": [[776, null]], "2. CodeGen support": [[754, "codegen-support"]], "2. Heterogeneous Computing Devices": [[585, "heterogeneous-computing-devices"]], "2.1 Allow Location Description on the DWARF Expression Stack": [[586, "allow-location-description-on-the-dwarf-expression-stack"]], "2.10 DWARF Operations to Create Vector Composite Location Descriptions": [[586, "dwarf-operations-to-create-vector-composite-location-descriptions"]], "2.11 DWARF Operation to Access Call Frame Entry Registers": [[586, "dwarf-operation-to-access-call-frame-entry-registers"]], "2.12 Support for Source Languages Mapped to SIMT Hardware": [[586, "support-for-source-languages-mapped-to-simt-hardware"]], "2.13 Support for Divergent Control Flow of SIMT Hardware": [[586, "support-for-divergent-control-flow-of-simt-hardware"]], "2.14 Define Source Language Address Classes": [[586, "define-source-language-address-classes"]], "2.15 Define Augmentation Strings to Support Multiple Extensions": [[586, "define-augmentation-strings-to-support-multiple-extensions"]], "2.16 Support Embedding Source Text for Online Compilation": [[586, "support-embedding-source-text-for-online-compilation"]], "2.17 Allow MD5 Checksums to be Optionally Present": [[586, "allow-md5-checksums-to-be-optionally-present"]], "2.18 Add the HIP Programing Language": [[586, "add-the-hip-programing-language"]], "2.19 Support for Source Language Optimizations that Result in Concurrent Iteration Execution": [[586, "support-for-source-language-optimizations-that-result-in-concurrent-iteration-execution"]], "2.2 Generalize CFI to Allow Any Location Description Kind": [[586, "generalize-cfi-to-allow-any-location-description-kind"]], "2.20 DWARF Operation to Create Runtime Overlay Composite Location Description": [[586, "dwarf-operation-to-create-runtime-overlay-composite-location-description"]], "2.3 Generalize DWARF Operation Expressions to Support Multiple Places": [[586, "generalize-dwarf-operation-expressions-to-support-multiple-places"]], "2.4 Generalize Offsetting of Location Descriptions": [[586, "generalize-offsetting-of-location-descriptions"]], "2.5 Generalize Creation of Undefined Location Descriptions": [[586, "generalize-creation-of-undefined-location-descriptions"]], "2.6 Generalize Creation of Composite Location Descriptions": [[586, "generalize-creation-of-composite-location-descriptions"]], "2.7 Generalize DWARF Base Objects to Allow Any Location Description Kind": [[586, "generalize-dwarf-base-objects-to-allow-any-location-description-kind"]], "2.8 General Support for Address Spaces": [[586, "general-support-for-address-spaces"]], "2.9 Support for Vector Base Types": [[586, "support-for-vector-base-types"]], "2021": [[763, "id1"]], "3-Stage Non-Determinism": [[593, "stage-non-determinism"]], "3. DWARF 5": [[585, "dwarf-5"]], "3. Lift InstSimplify/InstCombine/DAGCombiner to VP": [[754, "lift-instsimplify-instcombine-dagcombiner-to-vp"]], "3.1 How DWARF Maps Source Language To Hardware": [[585, "how-dwarf-maps-source-language-to-hardware"]], "3.2 Examples": [[585, "examples"]], "3.2.1 Dynamic Array Size": [[585, "dynamic-array-size"]], "3.2.2 Variable Location in Register": [[585, "variable-location-in-register"]], "3.2.3 Variable Location in Memory": [[585, "variable-location-in-memory"]], "3.2.4 Variable Spread Across Different Locations": [[585, "variable-spread-across-different-locations"]], "3.2.5 Offsetting a Composite Location": [[585, "offsetting-a-composite-location"]], "3.3 Limitations": [[585, "limitations"]], "32-Bit and 64-Bit DWARF Formats": [[591, "bit-and-64-bit-dwarf-formats"]], "4. Deprecate llvm.masked.* / llvm.experimental.reduce.*": [[754, "deprecate-llvm-masked-llvm-experimental-reduce"]], "4. Extension Solution": [[585, "extension-solution"]], "4.1 Location Description": [[585, "location-description"]], "4.2 Stack Location Description Operations": [[585, "stack-location-description-operations"]], "4.3 Examples": [[585, "id1"]], "4.3.1 Source Language Variable Spilled to Part of a Vector Register": [[585, "source-language-variable-spilled-to-part-of-a-vector-register"]], "4.3.2 Source Language Variable Spread Across Multiple Vector Registers": [[585, "source-language-variable-spread-across-multiple-vector-registers"]], "4.3.3 Source Language Variable Spread Across Multiple Kinds of Locations": [[585, "source-language-variable-spread-across-multiple-kinds-of-locations"]], "4.3.4 Address Spaces": [[585, "address-spaces"]], "4.3.5 Bit Offsets": [[585, "bit-offsets"]], "4.4 Call Frame Information (CFI)": [[585, "call-frame-information-cfi"]], "4.5 Objects Not In Byte Aligned Global Memory": [[585, "objects-not-in-byte-aligned-global-memory"]], "4.6 Higher Order Operations": [[585, "higher-order-operations"]], "4.7 Objects In Multiple Places": [[585, "objects-in-multiple-places"]], "5. Conclusion": [[585, "conclusion"]], "5. Predicated IR Instructions": [[754, "predicated-ir-instructions"]], "6-bit characters": [[598, "bit-characters"]], "64-bit load checking instructions": [[766, "bit-load-checking-instructions"]], "<algorithm>": [[662, "algorithm"]], "<deque>": [[749, "deque"]], "<list>": [[749, "list"]], "<map>": [[749, "map"]], "<math.h> and <cmath>": [[662, "math-h-and-cmath"]], "<set>": [[749, "set"]], "<std::complex>": [[662, "std-complex"]], "<vector>": [[749, "vector"]], "A": [[716, "a"]], "A Benchmark for the C/C++ Standard Library": [[752, "a-benchmark-for-the-c-c-standard-library"]], "A Bug to be Aware Of": [[708, "a-bug-to-be-aware-of"]], "A Spectre Variant #1 Mitigation Technique": [[766, "a-spectre-variant-1-mitigation-technique"]], "A flag-less alternative on Haswell, Zen and newer processors": [[766, "a-flag-less-alternative-on-haswell-zen-and-newer-processors"]], "A guide to Dockerfiles for building LLVM": [[672, null]], "A sorted \u201cvector\u201d": [[749, "a-sorted-vector"], [749, "dss-sortedvectormap"]], "A. Attributes by Tag Value (Informative)": [[586, "a-attributes-by-tag-value-informative"]], "A. Changes Relative to DWARF Version 5": [[586, "a-changes-relative-to-dwarf-version-5"]], "A. Changes to DWARF Debugging Information Format Version 5": [[585, "a-changes-to-dwarf-debugging-information-format-version-5"]], "A.2 General Description": [[585, "a-2-general-description"], [586, "a-2-general-description"]], "A.2.12 Segmented Addresses": [[586, "a-2-12-segmented-addresses"]], "A.2.2 Attribute Types": [[586, "a-2-2-attribute-types"]], "A.2.5 DWARF Expressions": [[585, "a-2-5-dwarf-expressions"], [586, "a-2-5-dwarf-expressions"]], "A.2.5.1 DWARF Expression Evaluation Context": [[585, "a-2-5-1-dwarf-expression-evaluation-context"], [586, "a-2-5-1-dwarf-expression-evaluation-context"]], "A.2.5.2 DWARF Expression Value": [[585, "a-2-5-2-dwarf-expression-value"], [586, "a-2-5-2-dwarf-expression-value"]], "A.2.5.3 DWARF Location Description": [[585, "a-2-5-3-dwarf-location-description"], [586, "a-2-5-3-dwarf-location-description"]], "A.2.5.4 DWARF Operation Expressions": [[585, "a-2-5-4-dwarf-operation-expressions"], [586, "a-2-5-4-dwarf-operation-expressions"]], "A.2.5.4.1 Stack Operations": [[585, "a-2-5-4-1-stack-operations"], [586, "a-2-5-4-1-stack-operations"]], "A.2.5.4.2 Control Flow Operations": [[585, "a-2-5-4-2-control-flow-operations"], [586, "a-2-5-4-2-control-flow-operations"]], "A.2.5.4.3 Value Operations": [[585, "a-2-5-4-3-value-operations"], [586, "a-2-5-4-3-value-operations"]], "A.2.5.4.3.1 Literal Operations": [[585, "a-2-5-4-3-1-literal-operations"], [586, "a-2-5-4-3-1-literal-operations"]], "A.2.5.4.3.2 Arithmetic and Logical Operations": [[585, "a-2-5-4-3-2-arithmetic-and-logical-operations"], [586, "a-2-5-4-3-2-arithmetic-and-logical-operations"]], "A.2.5.4.3.3 Type Conversion Operations": [[585, "a-2-5-4-3-3-type-conversion-operations"], [586, "a-2-5-4-3-3-type-conversion-operations"]], "A.2.5.4.3.4 Special Value Operations": [[585, "a-2-5-4-3-4-special-value-operations"], [586, "a-2-5-4-3-4-special-value-operations"]], "A.2.5.4.4 Location Description Operations": [[585, "a-2-5-4-4-location-description-operations"], [586, "a-2-5-4-4-location-description-operations"]], "A.2.5.4.4.1 General Location Description Operations": [[585, "a-2-5-4-4-1-general-location-description-operations"], [586, "a-2-5-4-4-1-general-location-description-operations"]], "A.2.5.4.4.2 Undefined Location Description Operations": [[585, "a-2-5-4-4-2-undefined-location-description-operations"], [586, "a-2-5-4-4-2-undefined-location-description-operations"]], "A.2.5.4.4.3 Memory Location Description Operations": [[585, "a-2-5-4-4-3-memory-location-description-operations"], [586, "a-2-5-4-4-3-memory-location-description-operations"]], "A.2.5.4.4.4 Register Location Description Operations": [[585, "a-2-5-4-4-4-register-location-description-operations"], [586, "a-2-5-4-4-4-register-location-description-operations"]], "A.2.5.4.4.5 Implicit Location Description Operations": [[585, "a-2-5-4-4-5-implicit-location-description-operations"], [586, "a-2-5-4-4-5-implicit-location-description-operations"]], "A.2.5.4.4.6 Composite Location Description Operations": [[585, "a-2-5-4-4-6-composite-location-description-operations"], [586, "a-2-5-4-4-6-composite-location-description-operations"]], "A.2.5.5 DWARF Location List Expressions": [[585, "a-2-5-5-dwarf-location-list-expressions"], [586, "a-2-5-5-dwarf-location-list-expressions"]], "A.3 Program Scope Entries": [[585, "a-3-program-scope-entries"], [586, "a-3-program-scope-entries"]], "A.3.1 Unit Entries": [[586, "a-3-1-unit-entries"]], "A.3.1.1 Full and Partial Compilation Unit Entries": [[586, "a-3-1-1-full-and-partial-compilation-unit-entries"]], "A.3.3 Subroutine and Entry Point Entries": [[585, "a-3-3-subroutine-and-entry-point-entries"], [586, "a-3-3-subroutine-and-entry-point-entries"]], "A.3.3.5 Low-Level Information": [[585, "a-3-3-5-low-level-information"], [586, "a-3-3-5-low-level-information"]], "A.3.4 Call Site Entries and Parameters": [[585, "a-3-4-call-site-entries-and-parameters"], [586, "a-3-4-call-site-entries-and-parameters"]], "A.3.4.2 Call Site Parameters": [[585, "a-3-4-2-call-site-parameters"], [586, "a-3-4-2-call-site-parameters"]], "A.3.5 Lexical Block Entries": [[585, "a-3-5-lexical-block-entries"], [586, "a-3-5-lexical-block-entries"]], "A.4 Data Object and Object List Entries": [[585, "a-4-data-object-and-object-list-entries"], [586, "a-4-data-object-and-object-list-entries"]], "A.4.1 Data Object Entries": [[585, "a-4-1-data-object-entries"], [586, "a-4-1-data-object-entries"]], "A.5 Type Entries": [[585, "a-5-type-entries"], [586, "a-5-type-entries"]], "A.5.1 Base Type Entries": [[586, "a-5-1-base-type-entries"]], "A.5.14 Pointer to Member Type Entries": [[585, "a-5-14-pointer-to-member-type-entries"], [586, "a-5-14-pointer-to-member-type-entries"]], "A.5.16 Dynamic Type Entries": [[585, "a-5-16-dynamic-type-entries"], [586, "a-5-16-dynamic-type-entries"]], "A.5.7 Structure, Union, Class and Interface Type Entries": [[585, "a-5-7-structure-union-class-and-interface-type-entries"], [586, "a-5-7-structure-union-class-and-interface-type-entries"]], "A.5.7.3 Derived or Extended Structures, Classes and Interfaces": [[585, "a-5-7-3-derived-or-extended-structures-classes-and-interfaces"], [586, "a-5-7-3-derived-or-extended-structures-classes-and-interfaces"]], "A.5.7.8 Member Function Entries": [[585, "a-5-7-8-member-function-entries"], [586, "a-5-7-8-member-function-entries"]], "A.6 Other Debugging Information": [[585, "a-6-other-debugging-information"], [586, "a-6-other-debugging-information"]], "A.6.1 Accelerated Access": [[586, "a-6-1-accelerated-access"]], "A.6.1.1 Lookup By Name": [[586, "a-6-1-1-lookup-by-name"]], "A.6.1.1.1 Contents of the Name Index": [[586, "a-6-1-1-1-contents-of-the-name-index"]], "A.6.1.1.4 Data Representation of the Name Index": [[586, "a-6-1-1-4-data-representation-of-the-name-index"]], "A.6.1.1.4.1 Section Header": [[586, "a-6-1-1-4-1-section-header"]], "A.6.2 Line Number Information": [[585, "a-6-2-line-number-information"], [586, "a-6-2-line-number-information"]], "A.6.2.4 The Line Number Program Header": [[586, "a-6-2-4-the-line-number-program-header"]], "A.6.2.4.1 Standard Content Descriptions": [[586, "a-6-2-4-1-standard-content-descriptions"]], "A.6.4 Call Frame Information": [[585, "a-6-4-call-frame-information"], [586, "a-6-4-call-frame-information"]], "A.6.4.1 Structure of Call Frame Information": [[585, "a-6-4-1-structure-of-call-frame-information"], [586, "a-6-4-1-structure-of-call-frame-information"]], "A.6.4.2 Call Frame Instructions": [[585, "a-6-4-2-call-frame-instructions"], [586, "a-6-4-2-call-frame-instructions"]], "A.6.4.2.1 Row Creation Instructions": [[585, "a-6-4-2-1-row-creation-instructions"], [586, "a-6-4-2-1-row-creation-instructions"]], "A.6.4.2.2 CFA Definition Instructions": [[585, "a-6-4-2-2-cfa-definition-instructions"], [586, "a-6-4-2-2-cfa-definition-instructions"]], "A.6.4.2.3 Register Rule Instructions": [[585, "a-6-4-2-3-register-rule-instructions"], [586, "a-6-4-2-3-register-rule-instructions"]], "A.6.4.2.4 Row State Instructions": [[585, "a-6-4-2-4-row-state-instructions"], [586, "a-6-4-2-4-row-state-instructions"]], "A.6.4.2.5 Padding Instruction": [[585, "a-6-4-2-5-padding-instruction"], [586, "a-6-4-2-5-padding-instruction"]], "A.6.4.3 Call Frame Instruction Usage": [[585, "a-6-4-3-call-frame-instruction-usage"], [586, "a-6-4-3-call-frame-instruction-usage"]], "A.6.4.4 Call Frame Calling Address": [[585, "a-6-4-4-call-frame-calling-address"], [586, "a-6-4-4-call-frame-calling-address"]], "A.7 Data Representation": [[585, "a-7-data-representation"], [586, "a-7-data-representation"]], "A.7.12 Source Languages": [[586, "a-7-12-source-languages"]], "A.7.13 Address Class and Address Space Encodings": [[586, "a-7-13-address-class-and-address-space-encodings"]], "A.7.22 Line Number Information": [[586, "a-7-22-line-number-information"]], "A.7.24 Call Frame Information": [[586, "a-7-24-call-frame-information"]], "A.7.4 32-Bit and 64-Bit DWARF Formats": [[585, "a-7-4-32-bit-and-64-bit-dwarf-formats"], [586, "a-7-4-32-bit-and-64-bit-dwarf-formats"]], "A.7.5 Format of Debugging Information": [[585, "a-7-5-format-of-debugging-information"], [586, "a-7-5-format-of-debugging-information"]], "A.7.5.4 Attribute Encodings": [[586, "a-7-5-4-attribute-encodings"]], "A.7.5.5 Classes and Forms": [[585, "a-7-5-5-classes-and-forms"], [586, "a-7-5-5-classes-and-forms"]], "A.7.7 DWARF Expressions": [[585, "a-7-7-dwarf-expressions"], [586, "a-7-7-dwarf-expressions"]], "A.7.7.1 Operation Expressions": [[585, "a-7-7-1-operation-expressions"], [586, "a-7-7-1-operation-expressions"]], "A.7.7.3 Location List Expressions": [[585, "a-7-7-3-location-list-expressions"], [586, "a-7-7-3-location-list-expressions"]], "AAPCS": [[597, "aapcs"]], "AArch64 & ARM": [[663, "aarch64-arm"]], "AArch64 Support": [[748, "aarch64-support"]], "AArch64 Target": [[705, "aarch64-target"]], "ABI": [[663, "abi"]], "ABI Breaking Checks": [[749, "abi-breaking-checks"]], "ADDITIONAL OPTIONS": [[617, "additional-options"]], "AFL compatibility": [[717, "afl-compatibility"]], "AMDGPU": [[663, "amdgpu"]], "AMDGPU Address Spaces": [[591, "amdgpu-address-spaces-table"]], "AMDGPU Architectures": [[591, "amdgpu-architecture-table"]], "AMDGPU Clang Debug Options": [[591, "amdgpu-clang-debug-options-table"]], "AMDGPU Code Object V2 ELF Note Record Enumeration Values": [[591, "amdgpu-elf-note-record-enumeration-values-v2-table"]], "AMDGPU Code Object V2 ELF Note Records": [[591, "amdgpu-elf-note-records-v2-table"]], "AMDGPU Code Object V2 Supported Processors and Fixed Target Feature Settings": [[591, "amdgpu-elf-note-record-supported-processors-v2-table"]], "AMDGPU Code Object V3 and Above ELF Note Record Enumeration Values": [[591, "amdgpu-elf-note-record-enumeration-values-table-v3-onwards"]], "AMDGPU Code Object V3 and Above ELF Note Records": [[591, "amdgpu-elf-note-records-table-v3-onwards"]], "AMDGPU DWARF Address Class Mapping": [[591, "amdgpu-dwarf-address-class-mapping-table"]], "AMDGPU DWARF Address Space Mapping": [[591, "amdgpu-dwarf-address-space-mapping-table"]], "AMDGPU DWARF Register Mapping": [[591, "amdgpu-dwarf-register-mapping-table"]], "AMDGPU EF_AMDGPU_MACH Values": [[591, "amdgpu-ef-amdgpu-mach-table"]], "AMDGPU ELF Header": [[591, "amdgpu-elf-header-table"]], "AMDGPU ELF Header Enumeration Values": [[591, "amdgpu-elf-header-enumeration-values-table"]], "AMDGPU ELF Header e_flags for Code Object V2": [[591, "amdgpu-elf-header-e-flags-v2-table"]], "AMDGPU ELF Header e_flags for Code Object V3": [[591, "amdgpu-elf-header-e-flags-table-v3"]], "AMDGPU ELF Header e_flags for Code Object V4 and After": [[591, "amdgpu-elf-header-e-flags-table-v4-onwards"]], "AMDGPU ELF Relocation Records": [[591, "amdgpu-elf-relocation-records-table"]], "AMDGPU ELF Sections": [[591, "amdgpu-elf-sections-table"]], "AMDGPU ELF Symbols": [[591, "amdgpu-elf-symbols-table"]], "AMDGPU Environments": [[591, "amdgpu-environment-table"]], "AMDGPU Instruction Syntax": [[588, null]], "AMDGPU Instructions Notation": [[587, null]], "AMDGPU LLVM IR Attributes": [[591, "amdgpu-llvm-ir-attributes-table"]], "AMDGPU Operating Systems": [[591, "amdgpu-os"]], "AMDGPU Processors": [[591, "amdgpu-processor-table"]], "AMDGPU Target Features": [[591, "amdgpu-target-features-table"]], "AMDGPU Trap Handler for AMDHSA OS Code Object V2": [[591, "amdgpu-trap-handler-for-amdhsa-os-v2-table"]], "AMDGPU Trap Handler for AMDHSA OS Code Object V3": [[591, "amdgpu-trap-handler-for-amdhsa-os-v3-table"]], "AMDGPU Trap Handler for AMDHSA OS Code Object V4 and Above": [[591, "amdgpu-trap-handler-for-amdhsa-os-v4-onwards-table"]], "AMDGPU Trap Handler for Non-AMDHSA OS": [[591, "amdgpu-trap-handler-for-non-amdhsa-os-table"]], "AMDGPU Vendors": [[591, "amdgpu-vendor-table"]], "AMDHSA": [[591, "amdhsa"]], "AMDHSA Code Object V2 Kernel Argument Metadata Map": [[591, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-v2-table"]], "AMDHSA Code Object V2 Kernel Attribute Metadata Map": [[591, "amdgpu-amdhsa-code-object-kernel-attribute-metadata-map-v2-table"]], "AMDHSA Code Object V2 Kernel Code Properties Metadata Map": [[591, "amdgpu-amdhsa-code-object-kernel-code-properties-metadata-map-v2-table"]], "AMDHSA Code Object V2 Kernel Metadata Map": [[591, "amdgpu-amdhsa-code-object-kernel-metadata-map-v2-table"]], "AMDHSA Code Object V2 Metadata Map": [[591, "amdgpu-amdhsa-code-object-metadata-map-v2-table"]], "AMDHSA Code Object V3 Kernel Argument Metadata Map": [[591, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-table-v3"]], "AMDHSA Code Object V3 Kernel Metadata Map": [[591, "amdgpu-amdhsa-code-object-kernel-metadata-map-table-v3"]], "AMDHSA Code Object V3 Metadata Map": [[591, "amdgpu-amdhsa-code-object-metadata-map-table-v3"]], "AMDHSA Code Object V4 Metadata Map Changes": [[591, "amdgpu-amdhsa-code-object-metadata-map-table-v4"]], "AMDHSA Code Object V5 Kernel Argument Metadata Map Additions and Changes": [[591, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-table-v5"]], "AMDHSA Code Object V5 Metadata Map Changes": [[591, "amdgpu-amdhsa-code-object-metadata-map-table-v5"]], "AMDHSA Kernel Assembler Directives": [[591, "amdhsa-kernel-directives-table"]], "AMDHSA LLVM Sync Scopes": [[591, "amdgpu-amdhsa-llvm-sync-scopes-table"]], "AMDHSA Memory Model Code Sequences GFX10": [[591, "amdgpu-amdhsa-memory-model-code-sequences-gfx10-table"]], "AMDHSA Memory Model Code Sequences GFX6-GFX9": [[591, "amdgpu-amdhsa-memory-model-code-sequences-gfx6-gfx9-table"]], "AMDHSA Memory Model Code Sequences GFX90A": [[591, "amdgpu-amdhsa-memory-model-code-sequences-gfx90a-table"]], "AMDHSA Memory Model Single Thread Optimization Constraints": [[591, "amdgpu-amdhsa-memory-model-single-thread-optimization-constraints-table"]], "AMDHSA Memory Spaces": [[591, "amdgpu-amdhsa-memory-spaces-table"]], "AMDPAL": [[591, "amdpal"]], "AMDPAL Code Object API Shader Metadata Map": [[591, "amdgpu-amdpal-code-object-api-shader-metadata-map-table"]], "AMDPAL Code Object Hardware Stage Map": [[591, "amdgpu-amdpal-code-object-hardware-stage-map-table"]], "AMDPAL Code Object Hardware Stage Metadata Map": [[591, "amdgpu-amdpal-code-object-hardware-stage-metadata-map-table"]], "AMDPAL Code Object Metadata Map": [[591, "amdgpu-amdpal-code-object-metadata-map-table"]], "AMDPAL Code Object Pipeline Metadata Map": [[591, "amdgpu-amdpal-code-object-pipeline-metadata-map-table"]], "AMDPAL Code Object Register Map": [[591, "amdgpu-amdpal-code-object-register-map-table"]], "AMDPAL Code Object Shader Function Map": [[591, "amdgpu-amdpal-code-object-shader-function-map-table"]], "AMDPAL Code Object Shader Function Metadata Map": [[591, "amdgpu-amdpal-code-object-shader-function-metadata-map-table"]], "AMDPAL Code Object Shader Map": [[591, "amdgpu-amdpal-code-object-shader-map-table"]], "AMDPAL User Data Mapping": [[591, "amdgpu-amdpal-code-object-metadata-user-data-mapping-table"]], "API Reference": [[756, "api-reference"]], "API: InstructionSelector": [[691, "api-instructionselector"]], "API: LegalizerInfo": [[693, "api-legalizerinfo"]], "API: RegisterBankInfo": [[696, "api-registerbankinfo"]], "ARM64/COFF-Dependent": [[675, "arm64-coff-dependent"]], "AST Extensions for If/Then/Else": [[812, "ast-extensions-for-if-then-else"]], "AST Extensions for the \u201cfor\u201d Loop": [[812, "ast-extensions-for-the-for-loop"]], "Abandoning a change": [[747, "abandoning-a-change"]], "Abbreviated Record Encoding": [[598, "abbreviated-record-encoding"]], "Abbreviation IDs": [[598, "abbreviation-ids"]], "Abbreviations": [[598, "abbreviations"]], "Absolute Expressions": [[590, "absolute-expressions"]], "Absolute Symbols": [[731, "absolute-symbols"]], "Absolute Symbols, Aliases, and Reexports": [[731, "absolute-symbols-aliases-and-reexports"]], "Abstract": [[598, "abstract"], [678, "abstract"], [680, "abstract"], [715, "abstract"], [752, "abstract"], [755, "abstract"], [771, "abstract"]], "Abstract Machine Model": [[770, "abstract-machine-model"]], "Accelerated Access": [[591, "accelerated-access"]], "Accepting a revision": [[728, "accepting-a-revision"]], "Accepting membership": [[762, "accepting-membership"]], "Access": [[762, "access"]], "Accessing build results": [[747, "accessing-build-results"]], "Accumulating Predicate State": [[766, "accumulating-predicate-state"]], "Accurate Garbage Collection Intrinsics": [[715, "accurate-garbage-collection-intrinsics"]], "Achieving Isolation with LLVMContext": [[749, "achieving-isolation-with-llvmcontext"]], "Acknowledge All Reviewer Feedback": [[610, "acknowledge-all-reviewer-feedback"]], "Acquire": [[595, "acquire"]], "AcquireRelease": [[595, "acquirerelease"]], "Actively working on fixing bugs": [[601, "actively-working-on-fixing-bugs"]], "Add SelectionDAG node types": [[592, "add-selectiondag-node-types"]], "Add documentation and tests": [[592, "add-documentation-and-tests"]], "Add the intrinsic": [[592, "add-the-intrinsic"]], "Adding Finer Granularity": [[733, "adding-finer-granularity"]], "Adding Passes to a Pass Manager": [[730, "adding-passes-to-a-pass-manager"]], "Adding a JIT Compiler": [[811, "adding-a-jit-compiler"]], "Adding a New Target": [[670, "adding-a-new-target"]], "Adding a derived type": [[674, "adding-a-derived-type"]], "Adding a fundamental type": [[674, "adding-a-fundamental-type"]], "Adding a new SelectionDAG node": [[674, "adding-a-new-selectiondag-node"]], "Adding a new instruction": [[674, "adding-a-new-instruction"]], "Adding a new intrinsic function": [[674, "adding-a-new-intrinsic-function"]], "Adding a new type": [[674, "adding-a-new-type"]], "Adding an Established Project To the LLVM Monorepo": [[670, "adding-an-established-project-to-the-llvm-monorepo"]], "Adding debug counters to aid in debugging your code": [[749, "adding-debug-counters-to-aid-in-debugging-your-code"]], "Adding freeform text to help output": [[661, "adding-freeform-text-to-help-output"]], "Adding to this document": [[678, "adding-to-this-document"]], "Additional Documentation": [[591, "additional-documentation"]], "Additional Information": [[757, "additional-information"]], "Additional Topics": [[756, "additional-topics"], [784, "additional-topics"]], "Address Class Identifier": [[591, "address-class-identifier"]], "Address Computation": [[681, "address-computation"]], "Address Remapping": [[720, "address-remapping"]], "Address Space Conversion": [[729, "address-space-conversion"]], "Address Space Identifier": [[591, "address-space-identifier"]], "Address Spaces": [[591, "address-spaces"], [729, "address-spaces"], [729, "id10"]], "Address class": [[586, "amdgpu-dwarf-address-class-table"]], "Address class encodings": [[586, "amdgpu-dwarf-address-class-encodings-table"]], "Addresses of Basic Blocks": [[715, "addresses-of-basic-blocks"]], "Adjusting Existing Variables for Mutation": [[814, "adjusting-existing-variables-for-mutation"]], "Advanced Build Configurations": [[593, null]], "Advanced Concepts": [[666, "advanced-concepts"]], "Advanced Topics": [[749, "advanced-topics"], [819, "advanced-topics"]], "Advanced features": [[717, "advanced-features"]], "Advanced variables": [[606, "advanced-variables"]], "Advantages": [[753, "advantages"]], "Advantages:": [[669, "advantages"]], "Advertisement": [[724, "advertisement"]], "Advice for using bugpoint": [[602, "advice-for-using-bugpoint"]], "Advice on Packaging LLVM": [[745, null]], "Aggregate Operations": [[715, "aggregate-operations"]], "Aggregate Types": [[715, "aggregate-types"]], "Aggregates": [[690, "aggregates"]], "Ahead-of-Time Compilation Mode": [[816, "ahead-of-time-compilation-mode"]], "Aim to Make Efficient Use of Everyone\u2019s Time": [[610, "aim-to-make-efficient-use-of-everyone-s-time"]], "Alias Summary": [[715, "alias-summary"]], "Alias analysis driven transformations": [[594, "alias-analysis-driven-transformations"]], "AliasAnalysis Class Overview": [[594, "aliasanalysis-class-overview"]], "AliasAnalysis chaining behavior": [[594, "aliasanalysis-chaining-behavior"]], "Aliases": [[715, "aliases"]], "Aliases and Reexports": [[731, "aliases-and-reexports"]], "Alignment": [[597, "alignment"]], "Alignment and Block Boundaries": [[740, "alignment-and-block-boundaries"]], "Allocating Stacklets": [[764, "allocating-stacklets"]], "Allocations Header": [[761, "allocations-header"]], "Allocator": [[761, "allocator"]], "Allocator Support": [[700, "allocator-support"]], "Allow Location Descriptions on the DWARF Expression Stack <!-- omit in toc -->": [[585, null]], "Alternative Approaches": [[718, "alternative-approaches"]], "Alternative using a cmake cache": [[705, "alternative-using-a-cmake-cache"]], "Alternatives to manual installation": [[685, "alternatives-to-manual-installation"]], "Ambiguous Transformation Order": [[782, "ambiguous-transformation-order"]], "An Example Using the LLVM Tool Chain": [[683, "an-example-using-the-llvm-tool-chain"]], "Analysis Group Concepts": [[788, "analysis-group-concepts"]], "Analysis Passes": [[746, "analysis-passes"]], "Announce the Release": [[707, "announce-the-release"]], "Anonymous Namespaces": [[611, "anonymous-namespaces"]], "Aper\u00e7u": [[0, "overview"], [1, "overview"], [2, "overview"], [3, "overview"], [4, "overview"], [5, "overview"], [6, "overview"], [7, "overview"], [8, "overview"], [9, "overview"], [745, "overview"]], "Appealing": [[760, "appealing"]], "Apple Clang Builds (A More Complex Bootstrap)": [[593, "apple-clang-builds-a-more-complex-bootstrap"]], "Applications/Libraries": [[752, "applications-libraries"]], "Architecture & Platform Information for Compiler Writers": [[663, null]], "Areas Requiring Attention": [[665, "areas-requiring-attention"]], "Argument Aliases": [[661, "argument-aliases"]], "Argument Handling": [[607, "argument-handling"]], "Arguments": [[715, "id684"], [715, "id689"], [715, "id694"], [715, "id699"], [715, "id704"], [715, "id709"], [715, "id714"], [715, "id719"], [715, "id724"], [715, "id729"], [715, "id734"], [715, "id739"], [715, "id744"], [715, "id749"]], "Arguments:": [[665, "arguments"], [665, "id4"], [665, "id7"], [665, "id10"], [665, "id13"], [665, "id16"], [665, "id19"], [665, "id22"], [665, "id24"], [665, "id28"], [665, "id31"], [665, "id34"], [665, "id37"], [665, "id40"], [665, "id43"], [665, "id46"], [665, "id49"], [665, "id51"], [665, "id54"], [665, "id58"], [665, "id61"], [665, "id63"], [715, "arguments"], [715, "id32"], [715, "id37"], [715, "id42"], [715, "id48"], [715, "id53"], [715, "id58"], [715, "id63"], [715, "id68"], [715, "id73"], [715, "id83"], [715, "id88"], [715, "id93"], [715, "id98"], [715, "id103"], [715, "id108"], [715, "id113"], [715, "id118"], [715, "id123"], [715, "id128"], [715, "id133"], [715, "id138"], [715, "id143"], [715, "id148"], [715, "id153"], [715, "id158"], [715, "id163"], [715, "id168"], [715, "id173"], [715, "id178"], [715, "id183"], [715, "id188"], [715, "id193"], [715, "id198"], [715, "id203"], [715, "id208"], [715, "id213"], [715, "id218"], [715, "id223"], [715, "id228"], [715, "id233"], [715, "id238"], [715, "id243"], [715, "id248"], [715, "id253"], [715, "id258"], [715, "id263"], [715, "id268"], [715, "id273"], [715, "id278"], [715, "id283"], [715, "id288"], [715, "id293"], [715, "id298"], [715, "id303"], [715, "id308"], [715, "id313"], [715, "id318"], [715, "id323"], [715, "id328"], [715, "id333"], [715, "id339"], [715, "id345"], [715, "id352"], [715, "id358"], [715, "id362"], [715, "id366"], [715, "id371"], [715, "id375"], [715, "id379"], [715, "id402"], [715, "id412"], [715, "id419"], [715, "id441"], [715, "id445"], [715, "id455"], [715, "id459"], [715, "id463"], [715, "id467"], [715, "id484"], [715, "id488"], [715, "id491"], [715, "id494"], [715, "id497"], [715, "id500"], [715, "id504"], [715, "id508"], [715, "id512"], [715, "id516"], [715, "id520"], [715, "id524"], [715, "id528"], [715, "id532"], [715, "id536"], [715, "id540"], [715, "id544"], [715, "id548"], [715, "id552"], [715, "id556"], [715, "id560"], [715, "id564"], [715, "id568"], [715, "id572"], [715, "id576"], [715, "id580"], [715, "id584"], [715, "id588"], [715, "id592"], [715, "id596"], [715, "id600"], [715, "id604"], [715, "id608"], [715, "id612"], [715, "id616"], [715, "id620"], [715, "id624"], [715, "id634"], [715, "id638"], [715, "id642"], [715, "id646"], [715, "id650"], [715, "id654"], [715, "id659"], [715, "id664"], [715, "id669"], [715, "id674"], [715, "id679"], [715, "id756"], [715, "id761"], [715, "id765"], [715, "id769"], [715, "id773"], [715, "id777"], [715, "id781"], [715, "id785"], [715, "id788"], [715, "id792"], [715, "id795"], [715, "id799"], [715, "id802"], [715, "id805"], [715, "id808"], [715, "id811"], [715, "id814"], [715, "id817"], [715, "id820"], [715, "id823"], [715, "id826"], [715, "id829"], [715, "id832"], [715, "id835"], [715, "id836"], [715, "id839"], [715, "id842"], [715, "id845"], [715, "id848"], [715, "id851"], [715, "id856"], [715, "id861"], [715, "id866"], [715, "id871"], [715, "id875"], [715, "id879"], [715, "id884"], [715, "id889"], [715, "id894"], [715, "id899"], [715, "id904"], [715, "id909"], [715, "id914"], [715, "id919"], [715, "id924"], [715, "id929"], [715, "id934"], [715, "id939"], [715, "id944"], [715, "id949"], [715, "id954"], [715, "id959"], [715, "id964"], [715, "id969"], [715, "id974"], [715, "id979"], [715, "id984"], [715, "id989"], [715, "id994"], [715, "id999"], [715, "id1004"], [715, "id1009"], [715, "id1014"], [715, "id1019"], [715, "id1024"], [715, "id1029"], [715, "id1034"], [715, "id1039"], [715, "id1044"], [715, "id1049"], [715, "id1054"], [715, "id1059"], [715, "id1064"], [715, "id1069"], [715, "id1074"], [715, "id1078"], [715, "id1082"], [715, "id1086"], [715, "id1090"], [715, "id1094"], [715, "id1098"], [715, "id1102"], [715, "id1106"], [715, "id1110"], [715, "id1114"], [715, "id1118"], [715, "id1122"], [715, "id1126"], [715, "id1130"], [715, "id1134"], [715, "id1138"], [715, "id1142"], [715, "id1146"], [715, "id1150"], [715, "id1154"], [715, "id1158"], [715, "id1162"], [715, "id1166"], [715, "id1170"], [715, "id1174"], [715, "id1178"], [715, "id1182"], [715, "id1186"], [715, "id1190"], [715, "id1194"], [715, "id1198"], [715, "id1202"], [715, "id1206"], [715, "id1210"], [715, "id1214"], [715, "id1218"], [715, "id1222"], [715, "id1226"], [715, "id1230"], [715, "id1234"], [715, "id1238"], [715, "id1242"], [715, "id1246"], [715, "id1250"], [715, "id1254"], [715, "id1258"], [715, "id1262"], [715, "id1266"], [715, "id1270"], [715, "id1274"], [715, "id1278"], [715, "id1285"], [715, "id1289"], [715, "id1293"], [715, "id1297"], [715, "id1300"], [715, "id1303"], [715, "id1307"], [715, "id1311"], [715, "id1315"], [715, "id1319"], [715, "id1323"], [715, "id1327"], [715, "id1331"], [715, "id1335"], [715, "id1338"], [715, "id1341"], [715, "id1344"], [715, "id1348"], [715, "id1352"], [715, "id1356"], [715, "id1362"], [715, "id1369"], [715, "id1375"], [715, "id1383"], [715, "id1388"], [715, "id1393"], [715, "id1434"], [715, "id1438"], [715, "id1442"], [748, "arguments"], [748, "id3"], [748, "id7"], [748, "id11"], [748, "id15"], [748, "id19"]], "Arithmetic with Overflow Intrinsics": [[715, "arithmetic-with-overflow-intrinsics"]], "Arm Soft-Float Target": [[705, "arm-soft-float-target"]], "Arm architecture not given": [[705, "arm-architecture-not-given"]], "ArmNeon": [[774, "armneon"]], "ArmNeonSema": [[774, "armneonsema"]], "ArmNeonTest": [[774, "armneontest"]], "Armv6-m, Armv7-m and Armv7E-M targets": [[705, "armv6-m-armv7-m-and-armv7e-m-targets"]], "Armv8.3-A PAuth Pointer Authentication Code": [[748, "armv8-3-a-pauth-pointer-authentication-code"]], "Array Type": [[715, "array-type"]], "Asm Table Formats": [[673, "asm-table-formats"]], "Asm template argument modifiers": [[715, "asm-template-argument-modifiers"]], "AsmMatcher": [[774, "asmmatcher"]], "AsmWriter": [[774, "asmwriter"]], "Assembler": [[591, "assembler"]], "Assembling a Toolchain:": [[703, "assembling-a-toolchain"]], "Assembly Parser": [[608, "assembly-parser"]], "Assembly Printer": [[786, "assembly-printer"]], "Assert Liberally": [[611, "assert-liberally"]], "Assume Operand Bundles": [[715, "assume-operand-bundles"]], "Async Lowering": [[665, "async-lowering"]], "Atomic Memory Ordering Constraints": [[715, "atomic-memory-ordering-constraints"]], "Atomic instructions": [[595, "atomic-instructions"]], "Atomic orderings": [[595, "atomic-orderings"]], "Atomics and Codegen": [[595, "atomics-and-codegen"]], "Atomics and IR optimization": [[595, "atomics-and-ir-optimization"]], "AttrBuilder": [[711, "attrbuilder"]], "AttrDocs": [[774, "attrdocs"]], "Attribute": [[711, "attribute"]], "Attribute Groups": [[715, "attribute-groups"]], "Attribute encodings": [[586, "amdgpu-dwarf-attribute-encodings-table"]], "Attribute names": [[586, "amdgpu-dwarf-attribute-names-table"]], "AttributeList": [[711, "attributelist"]], "Attributes by tag value": [[586, "amdgpu-dwarf-attributes-by-tag-value-table"]], "Attribution of Changes": [[670, "attribution-of-changes"]], "Audience": [[786, "audience"]], "Authoring Guidelines": [[767, "authoring-guidelines"]], "Auto-Vectorization in LLVM": [[785, null]], "Automatic Debugger Selection": [[602, "automatic-debugger-selection"]], "Automatic Linker Flags Named Metadata": [[715, "automatic-linker-flags-named-metadata"]], "Automatic lfence on Conditional Edges": [[766, "automatic-lfence-on-conditional-edges"]], "Availability and Status": [[714, "id9"]], "Available AliasAnalysis implementations": [[594, "available-aliasanalysis-implementations"]], "Available Fuzzers": [[679, "available-fuzzers"]], "Avoid loads and stores of large aggregate type": [[678, "avoid-loads-and-stores-of-large-aggregate-type"]], "Avoid std::endl": [[611, "avoid-std-endl"]], "Avoiding Heap Allocations": [[665, "avoiding-heap-allocations"]], "B": [[716, "b"]], "B. Examples": [[586, "b-examples"]], "B. Further Information": [[585, "b-further-information"]], "BINARY INPUT AND OUTPUT": [[642, "binary-input-and-output"]], "BUGS": [[629, "bugs"], [634, "bugs"], [636, "bugs"], [638, "bugs"], [641, "bugs"], [642, "bugs"], [643, "bugs"], [644, "bugs"], [651, "bugs"], [653, "bugs"], [654, "bugs"]], "Backend code generator bugs": [[709, "backend-code-generator-bugs"]], "Background": [[605, "background"], [668, "background"], [708, "background"]], "Background on Windows exceptions": [[673, "background-on-windows-exceptions"]], "Background on historical bugpoint issues": [[603, "background-on-historical-bugpoint-issues"]], "Barriers": [[729, "barriers"]], "Base & Derived Pointers": [[770, "base-derived-pointers"]], "Basic CMake usage": [[606, "usage"]], "Basic Commands": [[616, "basic-commands"]], "Basic Expression Parsing": [[809, "basic-expression-parsing"]], "Basic Inspection and Traversal Routines": [[749, "basic-inspection-and-traversal-routines"]], "Basic Mode": [[789, "basic-mode"]], "Basic Setup": [[708, "basic-setup"]], "Basic Steps": [[786, "basic-steps"]], "Basic Usage": [[646, "basic-usage"]], "Basic code required": [[787, "basic-code-required"], [788, "basic-code-required"]], "Basic concepts": [[777, "basic-concepts"]], "Basic migration": [[751, "basic-migration"]], "Basic operation": [[686, "basic-operation"]], "Basic usage": [[714, "basic-usage"]], "Basics": [[598, "basics"], [727, "basics"]], "Benchmarking tips": [[596, null]], "Benchmarks": [[752, "benchmarks"], [779, "benchmarks"]], "Best Practices for Configuring a Fast Builder": [[701, "best-practices-for-configuring-a-fast-builder"]], "Beware of non-determinism due to ordering of pointers": [[611, "beware-of-non-determinism-due-to-ordering-of-pointers"]], "Beware of non-deterministic sorting order of equal elements": [[611, "beware-of-non-deterministic-sorting-order-of-equal-elements"]], "Beware unnecessary copies with auto": [[611, "beware-unnecessary-copies-with-auto"]], "Big bang": [[753, "big-bang"]], "Bigger Pieces of Work": [[664, "bigger-pieces-of-work"]], "Binary Expression Parsing": [[809, "binary-expression-parsing"]], "Binary Operations": [[715, "binary-operations"]], "Binary Operators": [[590, "binary-operators"]], "Bisecting": [[751, "bisecting"]], "Bisecting LLVM code": [[686, null]], "Bisecting across multiple roots": [[686, "bisecting-across-multiple-roots"]], "Bisecting commits": [[683, "bisecting-commits"]], "Bisection Index Values": [[733, "bisection-index-values"]], "Bit Manipulation Intrinsics": [[715, "bit-manipulation-intrinsics"]], "Bit storage containers": [[749, "bit-storage-containers"]], "BitValue": [[792, "bitvalue"]], "BitVector": [[749, "bitvector"]], "Bitcode Wrapper Format": [[598, "bitcode-wrapper-format"]], "Bitconverts": [[597, "bitconverts"]], "Bitstream Format": [[598, "bitstream-format"]], "Bitwise Binary Operations": [[715, "bitwise-binary-operations"]], "Blitz++": [[752, "blitz"]], "Block Bias": [[599, "block-bias"]], "Block Frequency": [[599, "block-frequency"]], "Block Mass": [[599, "block-mass"]], "Block References": [[721, "block-references"]], "Block Scalars": [[792, "block-scalars"]], "Blocks": [[598, "blocks"]], "Boolean Arguments": [[661, "boolean-arguments"]], "Bootstrap Builds": [[593, "bootstrap-builds"]], "Bottleneck Analysis": [[640, "bottleneck-analysis"]], "Braced Initializer Lists": [[611, "braced-initializer-lists"]], "Branch Folding and If Conversion": [[786, "branch-folding-and-if-conversion"]], "Branch Probability": [[599, "branch-probability"]], "Branch Weight": [[599, "branch-weight"]], "BranchInst": [[600, "branchinst"]], "Branching/Stashing/Updating for Local Development or Experiments": [[751, "branching-stashing-updating-for-local-development-or-experiments"]], "Buffer Underflow/Overflow Detection": [[700, "buffer-underflow-overflow-detection"]], "Bug Fixes": [[664, "bug-fixes"]], "Bug Reporting Process": [[758, "bug-reporting-process"]], "Bug Reports": [[664, "bug-reports"]], "Bugpoint Redesign": [[603, null]], "Bugs and Enhancements": [[770, "bugs-and-enhancements"]], "Build The Binary Distribution": [[707, "build-the-binary-distribution"]], "Build and test": [[728, "build-and-test"]], "Build the LLVM Suite:": [[685, "build-the-llvm-suite"]], "Build-time use optimization": [[726, "build-time-use-optimization"]], "Building Clang with PGO": [[704, "building-clang-with-pgo"]], "Building LLVM": [[728, "building-llvm"]], "Building LLVM with CMake": [[606, null]], "Building a Distribution of LLVM": [[604, null]], "Building a JIT in LLVM": [[819, "building-a-jit-in-llvm"]], "Building a JIT: Adding Optimizations \u2013 An introduction to ORC Layers": [[795, null]], "Building a JIT: Extreme Laziness - Using LazyReexports to JIT from ASTs": [[797, null]], "Building a JIT: Per-function Lazy Compilation": [[796, null]], "Building a JIT: Starting out with KaleidoscopeJIT": [[794, null]], "Building a single sub-project": [[751, "building-a-single-sub-project"]], "Building and Running": [[679, "building-and-running"]], "Building compiler-rt builtins for Arm": [[705, "building-compiler-rt-builtins-for-arm"]], "Building fallible iterators and iterator ranges": [[749, "building-fallible-iterators-and-iterator-ranges"]], "Building libc++:": [[703, "building-libc"]], "Building libc++abi:": [[703, "building-libc-abi"]], "Building libunwind:": [[703, "building-libunwind"]], "Building pass plugins": [[788, "building-pass-plugins"]], "Building the SelectionDAG": [[592, "building-the-selectiondag"]], "Building with XRay": [[790, "building-with-xray"]], "Buildmasters": [[701, "buildmasters"]], "Built In GC Strategies": [[680, "built-in-gc-strategies"]], "Built in register allocators": [[608, "built-in-register-allocators"]], "Built-in expect Instructions": [[600, "built-in-expect-instructions"]], "Built-in expect.with.probability Instruction": [[600, "built-in-expect-with-probability-instruction"]], "Built-in types": [[792, "built-in-types"]], "Builtin parsers": [[661, "builtin-parsers"]], "Bundled Instructions": [[721, "bundled-instructions"]], "C": [[716, "c"]], "C API": [[759, "c-api"]], "C API Changes": [[670, "c-api-changes"]], "C API Details": [[723, "c-api-details"]], "C type width Module Flags Metadata": [[715, "c-type-width-module-flags-metadata"]], "C++ Features": [[745, "c-features"]], "C++ Performance Benchmarks": [[752, "c-performance-benchmarks"]], "C++ Standard Library": [[611, "c-standard-library"]], "C++ Standard Versions": [[611, "c-standard-versions"]], "C++ special member functions information": [[765, "c-special-member-functions-information"]], "C++ specific debug information": [[765, "c-specific-debug-information"]], "C-SKY": [[663, "c-sky"]], "C. References": [[586, "c-references"]], "C/C++ front-end specific debug information": [[765, "c-c-front-end-specific-debug-information"]], "C/C++ function information": [[765, "c-c-function-information"]], "C/C++ global variable information": [[765, "c-c-global-variable-information"]], "C/C++ source file information": [[765, "c-c-source-file-information"]], "C99-style Hexadecimal Floating-point Constants": [[675, "c99-style-hexadecimal-floating-point-constants"]], "CFG Modifications": [[600, "cfg-modifications"]], "CFI": [[591, "cfi"]], "CFIIndex Operands": [[721, "cfiindex-operands"]], "CMake Caches": [[606, "cmake-caches"]], "CMake Primer": [[607, null]], "CODE GENERATION OPTIONS": [[620, "code-generation-options"]], "COFF Syntax": [[820, "coff-syntax"]], "COFF-SPECIFIC OPTIONS": [[642, "coff-specific-options"], [654, "coff-specific-options"]], "COMMANDS": [[626, "commands"], [638, "commands"], [643, "commands"], [646, "commands"], [647, "commands"]], "COMPONENTS": [[625, "components"]], "CONSTANTS_BLOCK Contents": [[598, "constants-block-contents"]], "CORAL-2 Benchmarks": [[752, "coral-2-benchmarks"]], "CTags": [[774, "ctags"]], "Call Convention": [[591, "call-convention"]], "Call Frame Information": [[591, "call-frame-information"]], "Call Site Attributes": [[715, "call-site-attributes"]], "Call frame instruction encodings": [[586, "amdgpu-dwarf-call-frame-instruction-encodings-table"]], "Call-clobbered registers": [[608, "call-clobbered-registers"]], "CallArgument Records": [[791, "callargument-records"]], "CallInst": [[600, "callinst"]], "Callee-cleanup Calling Conventions": [[713, "callee-cleanup-calling-conventions"]], "Calling Conventions": [[715, "calling-conventions"], [786, "calling-conventions"]], "CallingConv": [[774, "callingconv"]], "Calls": [[715, "calls"]], "Can Code Be Reviewed After It Is Committed?": [[610, "can-code-be-reviewed-after-it-is-committed"]], "Can GEP index into vector elements?": [[681, "can-gep-index-into-vector-elements"]], "Can I cast an object\u2019s address to integer and add it to null?": [[681, "can-i-cast-an-object-s-address-to-integer-and-add-it-to-null"]], "Can I compare two values computed with GEPs?": [[681, "can-i-compare-two-values-computed-with-geps"]], "Can I compile C or C++ code to platform-independent LLVM bitcode?": [[676, "can-i-compile-c-or-c-code-to-platform-independent-llvm-bitcode"]], "Can I compute the distance between two objects, and add that value to one address to compute the other address?": [[681, "can-i-compute-the-distance-between-two-objects-and-add-that-value-to-one-address-to-compute-the-other-address"]], "Can I do GEP with a different pointer type than the type of the underlying object?": [[681, "can-i-do-gep-with-a-different-pointer-type-than-the-type-of-the-underlying-object"]], "Can I do type-based alias analysis on LLVM IR?": [[681, "can-i-do-type-based-alias-analysis-on-llvm-ir"]], "Can I modify LLVM source code and redistribute the modified source?": [[676, "can-i-modify-llvm-source-code-and-redistribute-the-modified-source"]], "Can I modify the LLVM source code and redistribute binaries or other tools based on it, without redistributing the source?": [[676, "can-i-modify-the-llvm-source-code-and-redistribute-binaries-or-other-tools-based-on-it-without-redistributing-the-source"]], "Can array indices be negative?": [[681, "can-array-indices-be-negative"]], "Changes to BOLT": [[757, "changes-to-bolt"]], "Changes to LLDB": [[757, "changes-to-lldb"]], "Changes to Sanitizers": [[757, "changes-to-sanitizers"]], "Changes to TableGen": [[757, "changes-to-tablegen"]], "Changes to building LLVM": [[757, "changes-to-building-llvm"]], "Changes to the AArch64 Backend": [[757, "changes-to-the-aarch64-backend"]], "Changes to the AMDGPU Target": [[757, "changes-to-the-amdgpu-target"]], "Changes to the ARM Backend": [[757, "changes-to-the-arm-backend"]], "Changes to the AVR Target": [[757, "changes-to-the-avr-target"]], "Changes to the C API": [[757, "changes-to-the-c-api"]], "Changes to the DAG infrastructure": [[757, "changes-to-the-dag-infrastructure"]], "Changes to the Debug Info": [[757, "changes-to-the-debug-info"]], "Changes to the FastISel infrastructure": [[757, "changes-to-the-fastisel-infrastructure"]], "Changes to the Go bindings": [[757, "changes-to-the-go-bindings"]], "Changes to the Hexagon Target": [[757, "changes-to-the-hexagon-target"]], "Changes to the LLVM IR": [[757, "changes-to-the-llvm-ir"]], "Changes to the LLVM tools": [[757, "changes-to-the-llvm-tools"]], "Changes to the MIPS Target": [[757, "changes-to-the-mips-target"]], "Changes to the OCaml bindings": [[757, "changes-to-the-ocaml-bindings"]], "Changes to the Policy": [[762, "changes-to-the-policy"]], "Changes to the PowerPC Target": [[757, "changes-to-the-powerpc-target"]], "Changes to the RISC-V Target": [[757, "changes-to-the-risc-v-target"]], "Changes to the WebAssembly Target": [[757, "changes-to-the-webassembly-target"]], "Changes to the Windows Target": [[757, "changes-to-the-windows-target"]], "Changes to the X86 Target": [[757, "changes-to-the-x86-target"]], "Chapter 1 Introduction": [[794, "chapter-1-introduction"]], "Chapter 2 Introduction": [[795, "chapter-2-introduction"], [809, "chapter-2-introduction"]], "Chapter 3 Introduction": [[796, "chapter-3-introduction"], [810, "chapter-3-introduction"]], "Chapter 4 Introduction": [[797, "chapter-4-introduction"], [811, "chapter-4-introduction"]], "Chapter 5 Introduction": [[812, "chapter-5-introduction"]], "Chapter 6 Introduction": [[813, "chapter-6-introduction"]], "Chapter 7 Introduction": [[814, "chapter-7-introduction"]], "Chapter 8 Introduction": [[815, "chapter-8-introduction"]], "Chapter 9 Introduction": [[816, "chapter-9-introduction"]], "Checkout": [[728, "checkout"]], "Checkout LLVM from Git": [[683, "checkout-llvm-from-git"]], "Checkout/Clone Multiple Projects, with Commit Access": [[751, "checkout-clone-multiple-projects-with-commit-access"]], "Checkout/Clone a Single Project, with Commit Access": [[751, "checkout-clone-a-single-project-with-commit-access"]], "Choosing a target": [[815, "choosing-a-target"]], "Choosing new members": [[762, "choosing-new-members"]], "Chrome Trace Viewer Visualization": [[790, "chrome-trace-viewer-visualization"]], "Clang": [[761, "clang"], [784, "id1"]], "Clang BackEnds": [[774, "clang-backends"]], "Clang uses the host header files": [[705, "clang-uses-the-host-header-files"]], "ClangAttrClasses": [[774, "clangattrclasses"]], "ClangAttrDump": [[774, "clangattrdump"]], "ClangAttrImpl": [[774, "clangattrimpl"]], "ClangAttrList": [[774, "clangattrlist"]], "ClangAttrPCHRead": [[774, "clangattrpchread"]], "ClangAttrPCHWrite": [[774, "clangattrpchwrite"]], "ClangAttrParsedAttrImpl": [[774, "clangattrparsedattrimpl"]], "ClangAttrParsedAttrKinds": [[774, "clangattrparsedattrkinds"]], "ClangAttrParsedAttrList": [[774, "clangattrparsedattrlist"]], "ClangAttrParserStringSwitches": [[774, "clangattrparserstringswitches"]], "ClangAttrSpellingListIndex": [[774, "clangattrspellinglistindex"]], "ClangAttrSpellings": [[774, "clangattrspellings"]], "ClangAttrTemplateInstantiate": [[774, "clangattrtemplateinstantiate"]], "ClangAttrVisitor": [[774, "clangattrvisitor"]], "ClangCommentCommandInfo": [[774, "clangcommentcommandinfo"]], "ClangCommentCommandList": [[774, "clangcommentcommandlist"]], "ClangCommentHTMLNamedCharacterReferences": [[774, "clangcommenthtmlnamedcharacterreferences"]], "ClangCommentHTMLTags": [[774, "clangcommenthtmltags"]], "ClangCommentHTMLTagsProperties": [[774, "clangcommenthtmltagsproperties"]], "ClangCommentNodes": [[774, "clangcommentnodes"]], "ClangDeclNodes": [[774, "clangdeclnodes"]], "ClangDiagGroups": [[774, "clangdiaggroups"]], "ClangDiagsDefs": [[774, "clangdiagsdefs"]], "ClangDiagsIndexName": [[774, "clangdiagsindexname"]], "ClangSACheckers": [[774, "clangsacheckers"]], "ClangStmtNodes": [[774, "clangstmtnodes"]], "Class overviews": [[611, "class-overviews"]], "Cleanups": [[673, "cleanups"]], "Clients for debugging and evaluation of implementations": [[594, "clients-for-debugging-and-evaluation-of-implementations"]], "Clobber constraints": [[715, "clobber-constraints"]], "Closed Paths and Cycles": [[667, "closed-paths-and-cycles"]], "CoalescingBitVector": [[749, "coalescingbitvector"]], "Code Blocks": [[767, "code-blocks"]], "Code Conventions": [[591, "code-conventions"]], "Code Emission": [[608, "code-emission"]], "Code Generation": [[720, "code-generation"], [784, "code-generation"]], "Code Generation Setup": [[810, "code-generation-setup"]], "Code Generation for If/Then/Else": [[812, "code-generation-for-if-then-else"]], "Code Generation for the \u201cfor\u201d Loop": [[812, "code-generation-for-the-for-loop"]], "Code Generator Intrinsics": [[715, "code-generator-intrinsics"]], "Code Object Metadata": [[591, "code-object-metadata"], [591, "amdgpu-amdpal-code-object-metadata-section"]], "Code Object V2 Directives": [[591, "code-object-v2-directives"]], "Code Object V2 Example Source Code": [[591, "code-object-v2-example-source-code"]], "Code Object V2 Metadata": [[591, "code-object-v2-metadata"]], "Code Object V2 Note Records": [[591, "code-object-v2-note-records"]], "Code Object V2 Predefined Symbols": [[591, "code-object-v2-predefined-symbols"]], "Code Object V2 to V3 Target ID": [[591, "code-object-v2-to-v3-target-id"]], "Code Object V3 Kernel Descriptor": [[591, "code-object-v3-kernel-descriptor"], [591, "amdgpu-amdhsa-kernel-descriptor-v3-table"]], "Code Object V3 Metadata": [[591, "code-object-v3-metadata"]], "Code Object V3 and Above Directives": [[591, "code-object-v3-and-above-directives"]], "Code Object V3 and Above Example Source Code": [[591, "code-object-v3-and-above-example-source-code"]], "Code Object V3 and Above Note Records": [[591, "code-object-v3-and-above-note-records"]], "Code Object V3 and Above Predefined Symbols": [[591, "code-object-v3-and-above-predefined-symbols"]], "Code Object V4 Metadata": [[591, "code-object-v4-metadata"]], "Code Object V5 Metadata": [[591, "code-object-v5-metadata"]], "Code Organization": [[771, "code-organization"]], "Code Owners": [[670, "code-owners"]], "Code Reviews": [[670, "code-reviews"]], "Code Reviews with Phabricator": [[747, null]], "Code Reviews, Speed, and Reciprocity": [[610, "code-reviews-speed-and-reciprocity"]], "Code Transformation Metadata": [[782, null]], "Code generator debugger": [[602, "code-generator-debugger"]], "Code review": [[728, "code-review"]], "Code-Review Workflow": [[610, "code-review-workflow"]], "CodeEmitter": [[774, "codeemitter"]], "CodeView": [[744, "codeview"]], "CodeView Debug Info Format": [[765, "codeview-debug-info-format"]], "CodeView Symbol Records": [[734, null]], "CodeView Type Record List": [[743, "codeview-type-record-list"]], "CodeView Type Records": [[735, null]], "CodeView-Dependent": [[675, "codeview-dependent"]], "Collaboration": [[762, "collaboration"]], "Collecting options as a set of flags": [[661, "collecting-options-as-a-set-of-flags"]], "Collector Requirements": [[680, "collector-requirements"]], "Color conversion": [[752, "color-conversion"]], "Comdats": [[715, "comdats"]], "Command Line Utilities": [[756, "command-line-utilities"]], "Command line flags": [[785, "command-line-flags"]], "Command-Line Options": [[603, "command-line-options"]], "CommandLine 2.0 Library Manual": [[661, null]], "Comment Formatting": [[611, "comment-formatting"]], "Commenting": [[611, "commenting"]], "Comments": [[721, "comments"], [728, "comments"]], "Commit": [[728, "commit"]], "Commit access": [[728, "commit-access"]], "Commit an API Change in LLVM and Update the Sub-projects": [[751, "commit-an-api-change-in-llvm-and-update-the-sub-projects"]], "Commit by proxy": [[728, "commit-by-proxy"]], "Commit locally": [[728, "commit-locally"]], "Commit messages": [[670, "commit-messages"]], "Committing a change": [[747, "committing-a-change"]], "Committing someone\u2019s change from Phabricator": [[747, "committing-someone-s-change-from-phabricator"]], "Common CMake Flags": [[779, "common-cmake-flags"]], "Common CMake configuration options:": [[703, "common-cmake-configuration-options"]], "Common Configuration Options": [[779, "common-configuration-options"]], "Common Issues": [[729, "common-issues"]], "Common Problems": [[683, "common-problems"]], "Communaut\u00e9": [[793, "community"]], "Community Testing": [[707, "community-testing"]], "Community wide proposals": [[682, "community-wide-proposals"]], "Compact Unwind": [[608, "compact-unwind"]], "Comparison and logarithmical search": [[727, "comparison-and-logarithmical-search"]], "Compilation": [[779, "compilation"]], "Compilation Models": [[662, "compilation-models"]], "Compile Flags": [[745, "compile-flags"]], "Compile Unit": [[816, "compile-unit"]], "Compiler-rt builds but the tests fail to build": [[705, "compiler-rt-builds-but-the-tests-fail-to-build"]], "Compiler/Platform-specific topics": [[606, "compiler-platform-specific-topics"]], "Compiling CUDA Code": [[662, "compiling-cuda-code"]], "Compiling CUDA with clang": [[662, null]], "Compiling the LLVM Suite Source Code": [[683, "compiling-the-llvm-suite-source-code"]], "Complex Constants": [[715, "complex-constants"]], "ComplexPatterns": [[691, "complexpatterns"]], "Composite Rules": [[693, "composite-rules"]], "Computing stack maps": [[680, "computing-stack-maps"]], "Concatenating Errors with joinErrors": [[749, "concatenating-errors-with-joinerrors"]], "Conception et aper\u00e7u de LLVM": [[793, "llvm-design-overview"]], "Conclusion": [[728, "conclusion"]], "Conclusions": [[809, "conclusions"]], "Concrete Bases and Deeper Hierarchies": [[708, "concrete-bases-and-deeper-hierarchies"]], "Confidentiality": [[762, "confidentiality"]], "Configuration": [[779, "configuration"]], "Configure your workspace": [[728, "configure-your-workspace"]], "Configuring CMake": [[706, "configuring-cmake"]], "Configuring External Tests": [[780, "configuring-external-tests"]], "Configuring LLVM to Build Fuzzers": [[679, "configuring-llvm-to-build-fuzzers"]], "Configuring the Module": [[815, "configuring-the-module"]], "Connection to the ORC Runtime": [[714, "connection-to-the-orc-runtime"]], "Considerations": [[597, "considerations"]], "Consistent Semantics": [[771, "consistent-semantics"]], "Constant Expressions": [[715, "constant-expressions"]], "Constant Pool Indices": [[721, "constant-pool-indices"]], "Constants": [[689, "constants"], [715, "constants"]], "Constrained Floating-Point Intrinsics": [[715, "constrained-floating-point-intrinsics"]], "Constrained libm-equivalent Intrinsics": [[715, "constrained-libm-equivalent-intrinsics"]], "Constraining test execution": [[781, "constraining-test-execution"]], "Constraint Codes": [[715, "constraint-codes"]], "Constructing LinkGraphs": [[714, "constructing-linkgraphs"]], "Contents": [[765, "contents"]], "Contextual markups": [[723, "contextual-markups"]], "Continuous Tracking with LNT": [[779, "continuous-tracking-with-lnt"]], "Continuously Running and Finding Bugs": [[679, "continuously-running-and-finding-bugs"]], "Contributing to LLVM": [[664, null]], "Control Flow": [[607, "control-flow"], [689, "control-flow"]], "Control Flow Verification Tool Design Document": [[605, null]], "Controlling Fidelity": [[790, "controlling-fidelity"]], "Controlling options grouping": [[661, "controlling-options-grouping"]], "Controlling other formatting options": [[661, "controlling-other-formatting-options"]], "Controlling the number of occurrences required and allowed": [[661, "controlling-the-number-of-occurrences-required-and-allowed"]], "Controlling whether or not a value must be specified": [[661, "controlling-whether-or-not-a-value-must-be-specified"]], "Conventions": [[589, "conventions"], [590, "conventions"], [729, "conventions"]], "Conversion Operations": [[715, "conversion-operations"]], "Conversion of Floating-Point Values": [[590, "conversion-of-floating-point-values"]], "Conversion of Integer Values": [[590, "conversion-of-integer-values"]], "Conversion of Relocatable Values": [[590, "conversion-of-relocatable-values"]], "Copyright": [[670, "copyright"]], "Copyright, License, and Patents": [[670, "copyright-license-and-patents"]], "Core Pipeline": [[694, null]], "Core Tier": [[772, "core-tier"]], "CoroCleanup": [[665, "corocleanup"]], "CoroEarly": [[665, "coroearly"]], "CoroElide": [[665, "coroelide"]], "CoroSplit": [[665, "corosplit"]], "Coroutine Manipulation Intrinsics": [[665, "coroutine-manipulation-intrinsics"]], "Coroutine Promise": [[665, "coroutine-promise"]], "Coroutine Representation": [[665, "coroutine-representation"]], "Coroutine Structure Intrinsics": [[665, "coroutine-structure-intrinsics"]], "Coroutine Transformation": [[665, "coroutine-transformation"]], "Coroutine Transformation Passes": [[665, "coroutine-transformation-passes"]], "Coroutines by Example": [[665, "coroutines-by-example"]], "Coroutines in LLVM": [[665, null]], "Corpus": [[717, "corpus"]], "Counter": [[666, "id3"]], "Counter Expressions": [[666, "counter-expressions"]], "Counter:": [[666, "counter"], [666, "id8"]], "Coverage Mapping Header:": [[666, "coverage-mapping-header"]], "Crash debugger": [[602, "crash-debugger"]], "Crashing Bugs": [[709, "crashing-bugs"]], "Create Release Branch": [[707, "create-release-branch"]], "Creating New Articles": [[767, "creating-new-articles"]], "Creating a patch series": [[747, "creating-a-patch-series"]], "Creating an LLVM Project": [[750, null]], "Creating and inserting new Instructions": [[749, "creating-and-inserting-new-instructions"]], "Creating new registries": [[788, "creating-new-registries"]], "Criteria": [[762, "criteria"]], "Cross Compilation and External Devices": [[779, "cross-compilation-and-external-devices"]], "Cross compiling": [[606, "cross-compiling"]], "Cross-Compiling LLVM": [[683, "cross-compiling-llvm"]], "Cross-Compiling from x86_64 to ARM": [[706, "cross-compiling-from-x86-64-to-arm"]], "Current Status": [[751, "current-status"]], "Current Status of Migration: Discourse is back online at a new URL: https://discourse.llvm.org. The old one still works as well. We are aware of an issue with reply by email to emails from before the merge. We will update once we know more.": [[671, "current-status-of-migration-discourse-is-back-online-at-a-new-url-https-discourse-llvm-org-the-old-one-still-works-as-well-we-are-aware-of-an-issue-with-reply-by-email-to-emails-from-before-the-merge-we-will-update-once-we-know-more"]], "Current Work": [[731, "current-work"]], "Currently": [[751, "currently"], [751, "id7"], [751, "id9"], [751, "id11"]], "Custom": [[786, "custom"]], "Custom Behaviour": [[640, "custom-behaviour"]], "Custom GC Strategies": [[680, "custom-gc-strategies"]], "Custom SDNodes": [[691, "custom-sdnodes"]], "Custom Scalar": [[792, "custom-scalar"]], "Custom Suites": [[779, "custom-suites"]], "Custom Views": [[640, "custom-views"]], "Custom formatting": [[749, "custom-formatting"]], "Custom lowering of intrinsics": [[680, "custom-lowering-of-intrinsics"]], "CustomEventMarker Records": [[791, "customeventmarker-records"]], "Cycles": [[667, "cycles"]], "D": [[716, "d"]], "DAGISel": [[774, "dagisel"]], "DARPA HPCS SSCA#2 C/OpenMP reference implementation": [[752, "darpa-hpcs-ssca-2-c-openmp-reference-implementation"]], "DBI Stream Options": [[645, "dbi-stream-options"]], "DEFINE_ABBREV Encoding": [[598, "define-abbrev-encoding"]], "DESCRIPTION": [[612, "description"], [613, "description"], [614, "description"], [615, "description"], [617, "description"], [618, "description"], [619, "description"], [620, "description"], [621, "description"], [622, "description"], [623, "description"], [624, "description"], [625, "description"], [626, "description"], [626, "id2"], [626, "id4"], [626, "id7"], [626, "id10"], [627, "description"], [628, "description"], [629, "description"], [630, "description"], [631, "description"], [632, "description"], [633, "description"], [634, "description"], [635, "description"], [636, "description"], [637, "description"], [638, "description"], [639, "description"], [640, "description"], [641, "description"], [642, "description"], [643, "description"], [644, "description"], [646, "description"], [646, "id2"], [646, "id4"], [646, "id7"], [647, "description"], [648, "description"], [649, "description"], [650, "description"], [651, "description"], [652, "description"], [653, "description"], [654, "description"], [655, "description"], [656, "description"], [657, "description"], [658, "description"], [659, "description"], [660, "description"]], "DETAILED OUTPUT DEFINITIONS": [[624, "detailed-output-definitions"]], "DFAPacketizer": [[774, "dfapacketizer"]], "DIArgList": [[715, "diarglist"]], "DIBasicType": [[715, "dibasictype"]], "DICompileUnit": [[715, "dicompileunit"]], "DICompositeType": [[715, "dicompositetype"]], "DIDerivedType": [[715, "diderivedtype"]], "DIEnumerator": [[715, "dienumerator"]], "DIExpression": [[715, "diexpression"]], "DIFFERENCES TO LLVM-READELF": [[650, "differences-to-llvm-readelf"]], "DIFile": [[715, "difile"]], "DIFlags": [[715, "diflags"]], "DIGlobalVariable": [[715, "diglobalvariable"]], "DIGlobalVariableExpression": [[715, "diglobalvariableexpression"]], "DIImportedEntity": [[715, "diimportedentity"]], "DILabel": [[715, "dilabel"]], "DILexicalBlock": [[715, "dilexicalblock"]], "DILexicalBlockFile": [[715, "dilexicalblockfile"]], "DILocalVariable": [[715, "dilocalvariable"]], "DILocation": [[715, "dilocation"]], "DIMacro": [[715, "dimacro"]], "DIMacroFile": [[715, "dimacrofile"]], "DINamespace": [[715, "dinamespace"]], "DIObjCProperty": [[715, "diobjcproperty"]], "DISubprogram": [[715, "disubprogram"]], "DISubrange": [[715, "disubrange"]], "DISubroutineType": [[715, "disubroutinetype"]], "DITemplateTypeParameter": [[715, "ditemplatetypeparameter"]], "DITemplateValueParameter": [[715, "ditemplatevalueparameter"]], "DLL Storage Classes": [[715, "dll-storage-classes"]], "DPP Modifiers": [[589, "dpp-modifiers"]], "DPP16": [[0, "dpp16"], [1, "dpp16"]], "DPP8": [[0, "dpp8"], [1, "dpp8"]], "DPP8 Modifiers": [[589, "dpp8-modifiers"]], "DS": [[0, "ds"], [2, "ds"], [3, "ds"], [4, "ds"], [9, "ds"], [591, "ds"]], "DS Modifiers": [[589, "ds-modifiers"]], "DSO Local Equivalent": [[715, "dso-local-equivalent"]], "DWARF Debug Information": [[591, "dwarf-debug-information"]], "DWARF Emission Setup": [[816, "dwarf-emission-setup"]], "DWARF Extensions For Heterogeneous Debugging": [[586, null]], "DWARF Operation Encodings": [[586, "amdgpu-dwarf-operation-encodings-table"]], "DW_AT_LLVM_active_lane": [[591, "dw-at-llvm-active-lane"]], "DW_AT_LLVM_augmentation": [[591, "dw-at-llvm-augmentation"]], "DW_AT_LLVM_lane_pc": [[591, "dw-at-llvm-lane-pc"]], "Data Dependence Graph": [[669, "data-dependence-graph"]], "Data Layout": [[715, "data-layout"], [729, "data-layout"]], "Data Records": [[598, "data-records"]], "Data Section": [[791, "data-section"]], "Data:": [[666, "data"]], "Debug information and optimizations": [[765, "debug-information-and-optimizations"]], "Debug information consumers": [[765, "debug-information-consumers"]], "Debug-Info constructs": [[721, "debug-info-constructs"]], "Debugger Information Entry Attributes": [[591, "debugger-information-entry-attributes"]], "Debugger Intrinsics": [[715, "debugger-intrinsics"]], "Debugger intrinsic functions": [[765, "debugger-intrinsic-functions"]], "Debugging": [[694, "debugging"], [749, "debugging"]], "Debugging Information Extension for Objective C Properties": [[765, "debugging-information-extension-for-objective-c-properties"]], "Debugging Information tests": [[781, "debugging-information-tests"], [781, "id2"]], "Debugging JIT-ed Code": [[668, null]], "Debugging MCJIT-ed code": [[668, "debugging-mcjit-ed-code"]], "Debugging Tools": [[616, "debugging-tools"]], "Debugging information format": [[765, "debugging-information-format"], [765, "id4"]], "Debugging with XRay": [[790, null]], "Default values": [[792, "default-values"]], "Default walker APIs": [[726, "default-walker-apis"]], "Define a new ABI and/or calling convention": [[766, "define-a-new-abi-and-or-calling-convention"]], "Defining a Register": [[786, "defining-a-register"]], "Defining a Register Class": [[786, "defining-a-register-class"]], "Definitions": [[716, "definitions"], [755, "definitions"], [768, "definitions"]], "Deleting GlobalVariables": [[749, "deleting-globalvariables"]], "Deleting Instructions": [[749, "deleting-instructions"], [749, "schanges-deleting-sub"]], "Deleting a MIR-level MachineInstr": [[710, "deleting-a-mir-level-machineinstr"]], "Deleting an IR-level Instruction": [[710, "deleting-an-ir-level-instruction"]], "Deoptimization Operand Bundles": [[715, "deoptimization-operand-bundles"]], "Dependence Graphs in LLVM": [[669, null]], "Dependencies": [[728, "dependencies"], [745, "dependencies"]], "Dependent Libs Named Metadata": [[715, "dependent-libs-named-metadata"]], "Deprecation Policy": [[772, "deprecation-policy"]], "Dereferencing": [[607, "dereferencing"]], "Describing Aliasing Properties": [[678, "describing-aliasing-properties"]], "Describing Language Specific Properties": [[678, "describing-language-specific-properties"]], "Description": [[602, "description"], [645, "description"], [718, "description"]], "Design": [[700, "design"], [761, "design"]], "Design Considerations": [[713, "design-considerations"]], "Design Guidelines": [[755, "design-guidelines"]], "Design Ideas": [[605, "design-ideas"]], "Design Overview": [[731, "design-overview"]], "Design Philosophy": [[602, "design-philosophy"], [718, "design-philosophy"]], "Design Trade-offs": [[669, "design-trade-offs"]], "Design and Implementation Reference": [[698, "design-and-implementation-reference"]], "Design and Usage of the InAlloca Attribute": [[713, null]], "Design of MemorySSA": [[726, "design-of-memoryssa"]], "Design tradeoffs": [[726, "design-tradeoffs"]], "Designing Type Hierarchies and Polymorphic Interfaces": [[749, "designing-type-hierarchies-and-polymorphic-interfaces"]], "Details": [[765, "details"], [785, "details"]], "Detecting clang vs NVCC from code": [[662, "detecting-clang-vs-nvcc-from-code"]], "Determining absolute position with getPosition()": [[661, "determining-absolute-position-with-getposition"]], "Developer Policies": [[670, "developer-policies"]], "Developer Tools": [[616, "developer-tools"]], "Developing LLVM passes out of source": [[606, "developing-llvm-passes-out-of-source"]], "Developing libFuzzer": [[717, "developing-libfuzzer"]], "Development Process": [[682, "development-process"]], "Diagnostics": [[785, "diagnostics"]], "Dialect Differences Between clang and nvcc": [[662, "dialect-differences-between-clang-and-nvcc"]], "Dictionaries": [[717, "dictionaries"]], "Difference between install and install-distribution": [[604, "difference-between-install-and-install-distribution"]], "Different Pass styles": [[594, "different-pass-styles"]], "Differentiating variable kinds": [[753, "differentiating-variable-kinds"]], "Direct Stack Map Entries": [[768, "direct-stack-map-entries"]], "Directive modifiers": [[612, "directive-modifiers"]], "Directory Layout": [[683, "directory-layout"]], "Disadvantages": [[753, "disadvantages"]], "Disadvantages:": [[669, "disadvantages"]], "Disassembler": [[608, "disassembler"], [774, "disassembler"]], "Disclosure": [[762, "disclosure"]], "Discourse Migration Guide": [[671, null]], "Discussion Medium": [[762, "discussion-medium"]], "Displaying and Analyzing Results": [[779, "displaying-and-analyzing-results"]], "Dissecting the Kernel": [[729, "dissecting-the-kernel"]], "Dissecting the sample:": [[666, "dissecting-the-sample"]], "Distinct Save and Suspend": [[665, "distinct-save-and-suspend"]], "Dither": [[752, "dither"]], "Do Not Use using namespace std": [[611, "do-not-use-using-namespace-std"]], "Do not use Braced Initializer Lists to Call a Constructor": [[611, "do-not-use-braced-initializer-lists-to-call-a-constructor"]], "Do not use RTTI or Exceptions": [[611, "do-not-use-rtti-or-exceptions"]], "Do not use Static Constructors": [[611, "do-not-use-static-constructors"]], "Docker basics": [[672, "docker-basics"]], "Document List": [[792, "document-list"]], "Documentation": [[793, "documentation"]], "Don\u2019t Expose System Headers": [[771, "don-t-expose-system-headers"]], "Don\u2019t Include System Headers": [[771, "don-t-include-system-headers"]], "Don\u2019t Unintentionally Block a Review": [[610, "don-t-unintentionally-block-a-review"]], "Don\u2019t Use Braces on Simple Single-Statement Bodies of if/else/loop Statements": [[611, "don-t-use-braces-on-simple-single-statement-bodies-of-if-else-loop-statements"]], "Don\u2019t evaluate end() every time through a loop": [[611, "don-t-evaluate-end-every-time-through-a-loop"]], "Don\u2019t use default labels in fully covered switches over enumerations": [[611, "don-t-use-default-labels-in-fully-covered-switches-over-enumerations"]], "Don\u2019t use else after a return": [[611, "don-t-use-else-after-a-return"]], "Don\u2019t use inline when defining a function in a class definition": [[611, "don-t-use-inline-when-defining-a-function-in-a-class-definition"]], "Don\u201dt check dependent loads": [[766, "don-t-check-dependent-loads"]], "Don\u201dt check loads from compile-time constant stack offsets": [[766, "don-t-check-loads-from-compile-time-constant-stack-offsets"]], "Doxygen Use in Documentation Comments": [[611, "doxygen-use-in-documentation-comments"]], "Driver Changes and Closing Thoughts": [[810, "driver-changes-and-closing-thoughts"]], "Dynamic Allocation": [[608, "dynamic-allocation"]], "Dynamically adding command line options": [[661, "dynamically-adding-command-line-options"]], "E": [[716, "e"]], "EC Substream": [[736, "ec-substream"]], "ELF Code Object": [[591, "elf-code-object"]], "ELF SPECIFIC OPTIONS": [[650, "elf-specific-options"]], "ELF-Dependent": [[675, "elf-dependent"]], "ELF-SPECIFIC OPTIONS": [[642, "elf-specific-options"], [654, "elf-specific-options"]], "END_BLOCK Encoding": [[598, "end-block-encoding"]], "ENTER_SUBBLOCK Encoding": [[598, "enter-subblock-encoding"]], "EXAMPLE": [[627, "example"], [653, "example"], [657, "example"]], "EXAMPLE 1": [[639, "example-1"]], "EXAMPLE 1: benchmarking instructions": [[632, "example-1-benchmarking-instructions"]], "EXAMPLE 2": [[639, "example-2"]], "EXAMPLE 2: benchmarking a custom code snippet": [[632, "example-2-benchmarking-a-custom-code-snippet"]], "EXAMPLE 3": [[639, "example-3"]], "EXAMPLE 3: analysis": [[632, "example-3-analysis"]], "EXAMPLES": [[625, "examples"], [646, "examples"], [655, "examples"]], "EXECUTION OPTIONS": [[617, "execution-options"]], "EXIT STATUS": [[612, "exit-status"], [613, "exit-status"], [615, "exit-status"], [617, "exit-status"], [618, "exit-status"], [620, "exit-status"], [622, "exit-status"], [623, "exit-status"], [624, "exit-status"], [625, "exit-status"], [626, "exit-status"], [627, "exit-status"], [629, "exit-status"], [630, "exit-status"], [631, "exit-status"], [632, "exit-status"], [633, "exit-status"], [634, "exit-status"], [636, "exit-status"], [637, "exit-status"], [639, "exit-status"], [640, "exit-status"], [641, "exit-status"], [642, "exit-status"], [644, "exit-status"], [646, "exit-status"], [649, "exit-status"], [650, "exit-status"], [651, "exit-status"], [652, "exit-status"], [653, "exit-status"], [654, "exit-status"], [655, "exit-status"], [657, "exit-status"], [659, "exit-status"], [660, "exit-status"]], "EXP": [[0, "exp"], [2, "exp"], [3, "exp"], [4, "exp"]], "EXP Modifiers": [[589, "exp-modifiers"]], "EXPORT COMMAND": [[626, "export-command"]], "Edit": [[728, "edit"]], "Efficiency": [[713, "efficiency"]], "Efficiency Issues": [[594, "efficiency-issues"]], "Element Wise Atomic Memory Intrinsics": [[715, "element-wise-atomic-memory-intrinsics"]], "Embed the predicate state into the high bit(s) of the stack pointer": [[766, "embed-the-predicate-state-into-the-high-bit-s-of-the-stack-pointer"]], "Embedded Module": [[721, "embedded-module"]], "Embedded PowerPC Processors manuals and docs": [[663, "embedded-powerpc-processors-manuals-and-docs"]], "Embedding Bundled Code Objects": [[591, "embedding-bundled-code-objects"]], "Embedding LLVM in your project": [[606, "embedding-llvm-in-your-project"]], "Emit Object Code": [[815, "emit-object-code"]], "Emitting assembly code: GCMetadataPrinter": [[680, "emitting-assembly-code-gcmetadataprinter"]], "Emitting function stack size information": [[608, "emitting-function-stack-size-information"]], "Emitting remark diagnostics in the object file": [[759, "emitting-remark-diagnostics-in-the-object-file"]], "Enabling optimization remarks": [[759, "enabling-optimization-remarks"]], "Encoding": [[666, "encoding"]], "Encoding Suffices": [[588, "encoding-suffices"]], "End-user Options": [[618, "end-user-options"]], "EndOfBuffer Records": [[791, "endofbuffer-records"]], "Ending Execution with llvm_shutdown()": [[749, "ending-execution-with-llvm-shutdown"]], "Engine Creation": [[720, "engine-creation"]], "Epilogue Vectorization": [[785, "epilogue-vectorization"]], "Error Handling": [[714, "error-handling"], [792, "error-handling"]], "Error Types": [[761, "error-types"]], "Error and Warning Messages": [[611, "error-and-warning-messages"]], "Error handling": [[749, "error-handling"]], "Example": [[668, "example"], [700, "example"], [777, "example"]], "Example (custom deallocation function):": [[665, "example-custom-deallocation-function"]], "Example (final suspend point):": [[665, "example-final-suspend-point"]], "Example (normal suspend point):": [[665, "example-normal-suspend-point"]], "Example (standard deallocation functions):": [[665, "example-standard-deallocation-functions"]], "Example Nested Subsection": [[767, "example-nested-subsection"]], "Example Section": [[722, "example-section"], [767, "example-section"]], "Example Subsection": [[722, "example-subsection"]], "Example Subsubsection": [[722, "example-subsubsection"]], "Example Usage": [[733, "example-usage"]], "Example implementations of getAnalysisUsage": [[788, "example-implementations-of-getanalysisusage"]], "Example of link time optimization": [[699, "example-of-link-time-optimization"], [718, "example-of-link-time-optimization"]], "Example with clang": [[683, "example-with-clang"]], "Example:": [[665, "example"], [665, "id26"], [665, "id56"], [715, "example"], [715, "id34"], [715, "id39"], [715, "id45"], [715, "id50"], [715, "id55"], [715, "id60"], [715, "id65"], [715, "id70"], [715, "id77"], [715, "id85"], [715, "id90"], [715, "id95"], [715, "id100"], [715, "id105"], [715, "id110"], [715, "id115"], [715, "id120"], [715, "id125"], [715, "id130"], [715, "id135"], [715, "id140"], [715, "id145"], [715, "id150"], [715, "id155"], [715, "id160"], [715, "id165"], [715, "id170"], [715, "id175"], [715, "id180"], [715, "id185"], [715, "id190"], [715, "id195"], [715, "id200"], [715, "id205"], [715, "id215"], [715, "id220"], [715, "id225"], [715, "id230"], [715, "id235"], [715, "id240"], [715, "id245"], [715, "id250"], [715, "id255"], [715, "id260"], [715, "id265"], [715, "id270"], [715, "id275"], [715, "id280"], [715, "id285"], [715, "id290"], [715, "id295"], [715, "id300"], [715, "id305"], [715, "id310"], [715, "id315"], [715, "id320"], [715, "id325"], [715, "id330"], [715, "id335"], [715, "id341"], [715, "id348"], [715, "id355"], [715, "id481"], [715, "id647"], [715, "id651"], [715, "id863"], [715, "id868"], [715, "id881"], [715, "id886"]], "Example: C-level intrinsics -> assembly": [[597, "example-c-level-intrinsics-assembly"]], "Examples": [[692, "examples"], [715, "id686"], [715, "id691"], [715, "id696"], [715, "id701"], [715, "id706"], [715, "id711"], [715, "id716"], [715, "id721"], [715, "id726"], [715, "id731"], [715, "id736"], [715, "id741"], [715, "id746"], [715, "id751"], [717, "examples"]], "Examples of Cycles": [[667, "examples-of-cycles"]], "Examples:": [[715, "examples"], [715, "id210"], [715, "id656"], [715, "id661"], [715, "id666"], [715, "id671"], [715, "id676"], [715, "id681"], [715, "id758"], [715, "id789"], [715, "id796"], [715, "id853"], [715, "id858"], [715, "id891"], [715, "id896"], [715, "id901"], [715, "id906"], [715, "id911"], [715, "id916"], [715, "id921"], [715, "id926"], [715, "id931"], [715, "id936"], [715, "id941"], [715, "id946"], [715, "id951"], [715, "id956"], [715, "id961"], [715, "id966"], [715, "id971"], [715, "id976"], [715, "id981"], [715, "id986"], [715, "id991"], [715, "id996"], [715, "id1001"], [715, "id1006"], [715, "id1011"], [715, "id1016"], [715, "id1021"], [715, "id1026"], [715, "id1031"], [715, "id1036"], [715, "id1041"], [715, "id1046"], [715, "id1051"], [715, "id1056"], [715, "id1061"], [715, "id1066"], [715, "id1071"]], "Exception Handling Frame": [[673, "exception-handling-frame"]], "Exception Handling Intrinsics": [[673, "exception-handling-intrinsics"], [715, "exception-handling-intrinsics"]], "Exception Handling in LLVM": [[673, null]], "Exception Handling support on the target": [[673, "exception-handling-support-on-the-target"]], "Exception Handling using the Windows Runtime": [[673, "exception-handling-using-the-windows-runtime"]], "Exception Tables": [[673, "exception-tables"]], "Exceptions": [[713, "exceptions"]], "Executing PTX": [[729, "executing-ptx"]], "Executing the Tests": [[606, "executing-the-tests"]], "Existing alias analysis implementations and clients": [[594, "existing-alias-analysis-implementations-and-clients"]], "Expand": [[786, "expand"]], "Experts Should Review Code": [[610, "experts-should-review-code"]], "Explicit Representation": [[770, "explicit-representation"]], "Exploiting external storage": [[661, "exploiting-external-storage"]], "Expression Code Generation": [[810, "expression-code-generation"]], "Expressions": [[590, "expressions"]], "Extending LLVM: Adding instructions, intrinsics, types, etc.": [[674, null]], "Extension Guide": [[661, "extending-the-library"]], "External Open Source Projects Using LLVM 14": [[757, "external-open-source-projects-using-llvm-14"]], "External Suites": [[779, "external-suites"]], "External Symbol Operands": [[721, "external-symbol-operands"]], "External Tutorials": [[819, "external-tutorials"]], "Extra Statistics to Further Diagnose Performance Issues": [[640, "extra-statistics-to-further-diagnose-performance-issues"]], "Extra files": [[781, "extra-files"]], "F": [[716, "f"]], "FAQ": [[671, "faq"], [717, "faq"]], "FAQs": [[787, "faqs"]], "FFmpeg": [[752, "ffmpeg"]], "FLAT": [[0, "flat"], [2, "flat"], [3, "flat"], [4, "flat"], [8, "flat"], [9, "flat"], [591, "flat"]], "FLAT Modifiers": [[589, "flat-modifiers"]], "FLOATING POINT OPTIONS": [[620, "floating-point-options"]], "FORMAT OF STATISTICS OUTPUT": [[631, "format-of-statistics-output"]], "FTensors": [[752, "ftensors"]], "FUNCTION_BLOCK Contents": [[598, "function-block-contents"]], "FX Operand": [[19, null], [315, null], [320, null], [325, null], [337, null], [369, null]], "Fallible constructors": [[749, "fallible-constructors"]], "Fast-Math Flags": [[715, "fast-math-flags"]], "FastISel": [[774, "fastisel"]], "FastISel Replacement": [[698, "fastisel-replacement"]], "FaultMaps and implicit checks": [[677, null]], "Feature detection": [[752, "feature-detection"]], "Features": [[731, "features"], [785, "features"]], "File Headers": [[611, "file-headers"]], "File ID Mapping": [[666, "file-id-mapping"]], "File ID:": [[666, "file-id"]], "File Info Substream": [[736, "file-info-substream"]], "File Layout": [[740, "file-layout"], [744, "file-layout"]], "FileCheck - Flexible pattern matching file verifier": [[612, null]], "FileCheck Numeric Substitution Blocks": [[612, "filecheck-numeric-substitution-blocks"]], "FileCheck Pseudo Numeric Variables": [[612, "filecheck-pseudo-numeric-variables"]], "FileCheck Regex Matching Syntax": [[612, "filecheck-regex-matching-syntax"]], "FileCheck String Substitution Blocks": [[612, "filecheck-string-substitution-blocks"]], "Filing a report": [[760, "filing-a-report"]], "Filtering and Sorting Options": [[645, "filtering-and-sorting-options"]], "Final Preparations": [[720, "final-preparations"]], "Final Suspend": [[665, "final-suspend"]], "Finding a reviewer": [[728, "finding-a-reviewer"]], "Finding call sites: a slightly more complex example": [[749, "finding-call-sites-a-slightly-more-complex-example"]], "Finding potential reviewers": [[747, "finding-potential-reviewers"]], "Fine grained debug info with DEBUG_TYPE and the -debug-only option": [[749, "fine-grained-debug-info-with-debug-type-and-the-debug-only-option"]], "FireHose": [[752, "firehose"]], "First Class Types": [[715, "first-class-types"]], "Fixed (preassigned) registers": [[608, "fixed-preassigned-registers"]], "Fixed Lookup": [[765, "fixed-lookup"]], "Fixed Point Arithmetic Intrinsics": [[715, "fixed-point-arithmetic-intrinsics"]], "Fixed Size Arrays": [[749, "fixed-size-arrays"]], "Fixed Width Integers": [[598, "fixed-width-value"]], "Fixed variable locations": [[721, "fixed-variable-locations"]], "Flags that control numerical code": [[662, "flags-that-control-numerical-code"]], "Flame Graph Generation": [[790, "flame-graph-generation"]], "Flat Scratch": [[591, "flat-scratch"]], "Flight Data Recorder Mode": [[789, "flight-data-recorder-mode"]], "Floating Point Denorm Mode Enumeration Values": [[591, "amdgpu-amdhsa-floating-point-denorm-mode-enumeration-values-table"]], "Floating Point Environment Manipulation intrinsics": [[715, "floating-point-environment-manipulation-intrinsics"]], "Floating Point Operations": [[689, "floating-point-operations"]], "Floating Point Rounding Mode Enumeration Values": [[591, "amdgpu-amdhsa-floating-point-rounding-mode-enumeration-values-table"]], "Floating-Point Environment": [[715, "floating-point-environment"]], "Floating-Point Numbers": [[590, "floating-point-numbers"]], "Floating-Point Types": [[715, "floating-point-types"]], "Flow Mapping": [[792, "flow-mapping"]], "Flow Sequence": [[792, "flow-sequence"]], "For developers to commit changes from Git": [[683, "for-developers-to-commit-changes-from-git"]], "Fork mode": [[717, "fork-mode"]], "Format Background": [[765, "format-background"]], "Format Grammar and Invariants": [[791, "format-grammar-and-invariants"]], "Format Lambdas Like Blocks Of Code": [[611, "format-lambdas-like-blocks-of-code"]], "Formatting strings (the formatv function)": [[749, "formatting-strings-the-formatv-function"]], "Fortran function information": [[765, "fortran-function-information"]], "Fortran specific debug information": [[765, "fortran-specific-debug-information"]], "Fragile tests": [[781, "fragile-tests"]], "Frame Layout": [[608, "frame-layout"]], "Frame Pointer": [[591, "frame-pointer"]], "FreePOOMA": [[752, "freepooma"]], "Frequently Asked Questions (FAQ)": [[676, null]], "Frequently Used LLVM-related variables": [[606, "frequently-used-llvm-related-variables"]], "Frequently-used CMake variables": [[606, "frequently-used-cmake-variables"]], "Front-end bugs": [[709, "front-end-bugs"]], "Full Code Listing": [[794, "full-code-listing"], [795, "full-code-listing"], [796, "full-code-listing"], [797, "full-code-listing"], [809, "full-code-listing"], [810, "full-code-listing"], [811, "full-code-listing"], [812, "full-code-listing"], [813, "full-code-listing"], [814, "id1"], [815, "full-code-listing"], [816, "full-code-listing"]], "Funclet Operand Bundles": [[715, "funclet-operand-bundles"]], "Funclet parent tokens": [[673, "funclet-parent-tokens"]], "Funclet transitions": [[673, "funclet-transitions"]], "Function Attributes": [[715, "function-attributes"]], "Function Code Generation": [[810, "function-code-generation"]], "Function Entry Counts": [[600, "function-entry-counts"]], "Function Flags": [[715, "function-flags"]], "Function Record Order": [[791, "function-record-order"]], "Function Records": [[791, "function-records"]], "Function Summary": [[715, "function-summary"]], "Function Type": [[715, "function-type"]], "Function calls": [[608, "function-calls"]], "Function record:": [[666, "function-record"]], "Function template": [[749, "function-template"]], "FunctionComparator::cmpType": [[727, "functioncomparator-cmptype"]], "FunctionComparator::compare(void)": [[727, "functioncomparator-compare-void"]], "Functions": [[715, "functions"], [816, "functions"]], "Functions Vs Macros": [[607, "functions-vs-macros"]], "Functions comparison": [[727, "functions-comparison"]], "Further Exploration": [[790, "further-exploration"]], "Further Future Work": [[731, "further-future-work"]], "Further Help": [[750, "further-help"]], "Future Work": [[789, "future-work"]], "Future Work: Fine Grained Control and API-Integration": [[766, "future-work-fine-grained-control-and-api-integration"]], "Future directions for the SelectionDAG": [[608, "future-directions-for-the-selectiondag"]], "Future extensions planned": [[788, "future-extensions-planned"]], "Fuzz Target": [[717, "fuzz-target"]], "Fuzzer Usage": [[717, "fuzzer-usage"]], "Fuzzer-friendly build mode": [[717, "fuzzer-friendly-build-mode"]], "Fuzzing LLVM libraries and tools": [[679, null]], "G": [[716, "g"]], "GC Live Operand Bundles": [[715, "gc-live-operand-bundles"]], "GC Transition Operand Bundles": [[715, "gc-transition-operand-bundles"]], "GC Transitions": [[770, "gc-transitions"]], "GCOV COMMAND": [[626, "gcov-command"]], "GDB Version": [[668, "gdb-version"]], "GENERAL AND MULTI-FORMAT OPTIONS": [[650, "general-and-multi-format-options"]], "GENERAL OPTIONS": [[617, "general-options"], [620, "general-options"]], "GENERIC AND CROSS-PLATFORM OPTIONS": [[642, "generic-and-cross-platform-options"], [654, "generic-and-cross-platform-options"]], "GNU binutils replacements": [[616, "gnu-binutils-replacements"]], "GWP-ASan": [[700, null]], "GWP-ASan vs. ASan": [[700, "gwp-asan-vs-asan"]], "G_ABS": [[689, "g-abs"]], "G_ADD, G_SUB, G_MUL, G_AND, G_OR, G_XOR, G_SDIV, G_UDIV, G_SREM, G_UREM": [[689, "g-add-g-sub-g-mul-g-and-g-or-g-xor-g-sdiv-g-udiv-g-srem-g-urem"]], "G_ADDRSPACE_CAST": [[689, "g-addrspace-cast"]], "G_ANYEXT": [[689, "g-anyext"]], "G_ASSERT_SEXT, G_ASSERT_ZEXT": [[689, "g-assert-sext-g-assert-zext"]], "G_ATOMICRMW_XCHG, G_ATOMICRMW_ADD, G_ATOMICRMW_SUB, G_ATOMICRMW_AND, G_ATOMICRMW_NAND, G_ATOMICRMW_OR, G_ATOMICRMW_XOR, G_ATOMICRMW_MAX, G_ATOMICRMW_MIN, G_ATOMICRMW_UMAX, G_ATOMICRMW_UMIN, G_ATOMICRMW_FADD, G_ATOMICRMW_FSUB": [[689, "g-atomicrmw-xchg-g-atomicrmw-add-g-atomicrmw-sub-g-atomicrmw-and-g-atomicrmw-nand-g-atomicrmw-or-g-atomicrmw-xor-g-atomicrmw-max-g-atomicrmw-min-g-atomicrmw-umax-g-atomicrmw-umin-g-atomicrmw-fadd-g-atomicrmw-fsub"]], "G_ATOMIC_CMPXCHG": [[689, "g-atomic-cmpxchg"]], "G_ATOMIC_CMPXCHG_WITH_SUCCESS": [[689, "g-atomic-cmpxchg-with-success"]], "G_BITCAST": [[689, "g-bitcast"]], "G_BITREVERSE": [[689, "g-bitreverse"]], "G_BLOCK_ADDR": [[689, "g-block-addr"]], "G_BR": [[689, "g-br"]], "G_BRCOND": [[689, "g-brcond"]], "G_BRINDIRECT": [[689, "g-brindirect"]], "G_BRJT": [[689, "g-brjt"]], "G_BSWAP": [[689, "g-bswap"]], "G_BUILD_VECTOR, G_BUILD_VECTOR_TRUNC": [[689, "g-build-vector-g-build-vector-trunc"]], "G_BZERO": [[689, "g-bzero"]], "G_CONCAT_VECTORS": [[689, "g-concat-vectors"]], "G_CONSTANT": [[689, "g-constant"]], "G_CTLZ, G_CTTZ, G_CTPOP": [[689, "g-ctlz-g-cttz-g-ctpop"]], "G_CTLZ_ZERO_UNDEF, G_CTTZ_ZERO_UNDEF": [[689, "g-ctlz-zero-undef-g-cttz-zero-undef"]], "G_DYN_STACKALLOC": [[689, "g-dyn-stackalloc"]], "G_EXTRACT": [[689, "g-extract"]], "G_EXTRACT_VECTOR_ELT": [[689, "g-extract-vector-elt"]], "G_FABS": [[689, "g-fabs"]], "G_FADD, G_FSUB, G_FMUL, G_FDIV, G_FREM": [[689, "g-fadd-g-fsub-g-fmul-g-fdiv-g-frem"]], "G_FCANONICALIZE": [[689, "g-fcanonicalize"]], "G_FCEIL, G_FCOS, G_FSIN, G_FSQRT, G_FFLOOR, G_FRINT, G_FNEARBYINT": [[689, "g-fceil-g-fcos-g-fsin-g-fsqrt-g-ffloor-g-frint-g-fnearbyint"]], "G_FCMP": [[689, "g-fcmp"]], "G_FCONSTANT": [[689, "g-fconstant"]], "G_FCOPYSIGN": [[689, "g-fcopysign"]], "G_FENCE": [[689, "g-fence"]], "G_FEXP, G_FEXP2": [[689, "g-fexp-g-fexp2"]], "G_FLOG, G_FLOG2, G_FLOG10": [[689, "g-flog-g-flog2-g-flog10"]], "G_FMA": [[689, "g-fma"]], "G_FMAD": [[689, "g-fmad"]], "G_FMAXIMUM": [[689, "g-fmaximum"]], "G_FMAXNUM": [[689, "g-fmaxnum"]], "G_FMAXNUM_IEEE": [[689, "g-fmaxnum-ieee"]], "G_FMINIMUM": [[689, "g-fminimum"]], "G_FMINNUM": [[689, "g-fminnum"]], "G_FMINNUM_IEEE": [[689, "g-fminnum-ieee"]], "G_FNEG": [[689, "g-fneg"]], "G_FPEXT": [[689, "g-fpext"]], "G_FPOW": [[689, "g-fpow"]], "G_FPTOSI, G_FPTOUI, G_SITOFP, G_UITOFP": [[689, "g-fptosi-g-fptoui-g-sitofp-g-uitofp"]], "G_FPTRUNC": [[689, "g-fptrunc"]], "G_FRAME_INDEX": [[689, "g-frame-index"]], "G_GLOBAL_VALUE": [[689, "g-global-value"]], "G_ICMP": [[689, "g-icmp"]], "G_IMPLICIT_DEF": [[689, "g-implicit-def"]], "G_INDEXED_LOAD": [[689, "g-indexed-load"]], "G_INDEXED_SEXTLOAD": [[689, "g-indexed-sextload"]], "G_INDEXED_STORE": [[689, "g-indexed-store"]], "G_INDEXED_ZEXTLOAD": [[689, "g-indexed-zextload"]], "G_INSERT": [[689, "g-insert"]], "G_INSERT_VECTOR_ELT": [[689, "g-insert-vector-elt"]], "G_INTRINSIC, G_INTRINSIC_W_SIDE_EFFECTS": [[689, "g-intrinsic-g-intrinsic-w-side-effects"]], "G_INTRINSIC_ROUND": [[689, "g-intrinsic-round"]], "G_INTRINSIC_TRUNC": [[689, "g-intrinsic-trunc"]], "G_INTTOPTR": [[689, "g-inttoptr"]], "G_JUMP_TABLE": [[689, "g-jump-table"]], "G_LOAD, G_SEXTLOAD, G_ZEXTLOAD": [[689, "g-load-g-sextload-g-zextload"]], "G_LROUND, G_LLROUND": [[689, "g-lround-g-llround"]], "G_MEMCPY": [[689, "g-memcpy"]], "G_MEMCPY_INLINE": [[689, "g-memcpy-inline"]], "G_MEMMOVE": [[689, "g-memmove"]], "G_MEMSET": [[689, "g-memset"]], "G_MERGE_VALUES": [[689, "g-merge-values"]], "G_PHI": [[689, "g-phi"]], "G_PTRMASK": [[689, "g-ptrmask"]], "G_PTRTOINT": [[689, "g-ptrtoint"]], "G_PTR_ADD": [[689, "g-ptr-add"]], "G_ROTR, G_ROTL": [[689, "g-rotr-g-rotl"]], "G_SADDSAT, G_UADDSAT, G_SSUBSAT, G_USUBSAT, G_SSHLSAT, G_USHLSAT": [[689, "g-saddsat-g-uaddsat-g-ssubsat-g-usubsat-g-sshlsat-g-ushlsat"]], "G_SBFX, G_UBFX": [[689, "g-sbfx-g-ubfx"]], "G_SDIVREM, G_UDIVREM": [[689, "g-sdivrem-g-udivrem"]], "G_SELECT": [[689, "g-select"]], "G_SEXT": [[689, "g-sext"]], "G_SEXT_INREG": [[689, "g-sext-inreg"]], "G_SHL, G_LSHR, G_ASHR": [[689, "g-shl-g-lshr-g-ashr"]], "G_SHUFFLE_VECTOR": [[689, "g-shuffle-vector"]], "G_SMIN, G_SMAX, G_UMIN, G_UMAX": [[689, "g-smin-g-smax-g-umin-g-umax"]], "G_STORE": [[689, "g-store"]], "G_TRUNC": [[689, "g-trunc"]], "G_UADDE, G_SADDE, G_USUBE, G_SSUBE": [[689, "g-uadde-g-sadde-g-usube-g-ssube"]], "G_UADDO, G_SADDO, G_USUBO, G_SSUBO, G_SMULO, G_UMULO": [[689, "g-uaddo-g-saddo-g-usubo-g-ssubo-g-smulo-g-umulo"]], "G_UMULH, G_SMULH": [[689, "g-umulh-g-smulh"]], "G_UNMERGE_VALUES": [[689, "g-unmerge-values"]], "G_VAARG": [[689, "g-vaarg"]], "G_VASTART": [[689, "g-vastart"]], "G_VECREDUCE_FADD, G_VECREDUCE_FMUL": [[689, "g-vecreduce-fadd-g-vecreduce-fmul"]], "G_VECREDUCE_FMAX, G_VECREDUCE_FMIN": [[689, "g-vecreduce-fmax-g-vecreduce-fmin"]], "G_VECREDUCE_SEQ_FADD, G_VECREDUCE_SEQ_FMUL": [[689, "g-vecreduce-seq-fadd-g-vecreduce-seq-fmul"]], "G_ZEXT": [[689, "g-zext"]], "Garbage Collected Stack Frames": [[817, "garbage-collected-stack-frames"]], "Garbage Collection": [[756, "garbage-collection"]], "Garbage Collection Safepoints in LLVM": [[770, null]], "Garbage Collection with LLVM": [[680, null]], "Garbage Collector Strategy Names": [[715, "garbage-collector-strategy-names"]], "General": [[596, "general"], [791, "general"]], "General Assembly Syntax": [[675, "general-assembly-syntax"]], "General BackEnds": [[774, "general-backends"]], "General Distribution Guidance": [[604, "general-distribution-guidance"]], "General Information": [[749, "general-information"]], "General Intrinsics": [[715, "general-intrinsics"]], "General Options": [[660, "general-options"]], "General Policies": [[610, "general-policies"]], "General suggestions": [[724, "general-suggestions"]], "Generating Test Output": [[780, "generating-test-output"]], "Generating assertions in regression tests": [[781, "generating-assertions-in-regression-tests"]], "Generating safe points": [[680, "generating-safe-points"]], "Generating the documentation": [[722, "generating-the-documentation"], [767, "generating-the-documentation"]], "Generic Algorithms": [[752, "generic-algorithms"]], "Generic Enumerated Types": [[774, "generic-enumerated-types"]], "Generic Link Algorithm": [[714, "generic-link-algorithm"]], "Generic Machine IR": [[688, null]], "Generic Machine Instructions": [[688, "generic-machine-instructions"]], "Generic Opcode Reference": [[688, "generic-opcode-reference"]], "Generic Opcodes": [[689, null]], "Generic Random Fuzzing": [[679, "generic-random-fuzzing"]], "Generic Tables": [[774, "generic-tables"]], "Generic Virtual Registers": [[688, "generic-virtual-registers"]], "Getting Involved": [[682, null]], "Getting Started": [[685, "getting-started"], [717, "getting-started"], [733, "getting-started"]], "Getting Started with LLVM": [[683, "getting-started-with-llvm"]], "Getting Started with the LLVM System": [[683, null]], "Getting Started with the LLVM System using Microsoft Visual Studio": [[685, null]], "Getting Started/Tutorials": [[684, null]], "Getting Traces": [[790, "getting-traces"]], "Getting a Modern Host C++ Toolchain": [[683, "getting-a-modern-host-c-toolchain"]], "Getting commit access": [[728, "getting-commit-access"]], "Getting the Source Code and Building LLVM": [[683, "getting-the-source-code-and-building-llvm"]], "Git pre-push hook": [[683, "git-pre-push-hook"]], "GitHub Repository Description": [[751, "github-repository-description"]], "Global Attributes": [[715, "global-attributes"]], "Global Instruction Selection": [[698, null]], "Global Structures Alias Analysis": [[785, "global-structures-alias-analysis"]], "Global Symbols": [[734, "global-symbols"]], "Global Value Operands": [[721, "global-value-operands"]], "Global Value Summary Entry": [[715, "global-value-summary-entry"]], "Global Variable Summary": [[715, "global-variable-summary"]], "Global Variable and Function Addresses": [[715, "global-variable-and-function-addresses"]], "Global Variables": [[715, "global-variables"]], "GnuPG": [[752, "gnupg"]], "Goals and non-goals": [[680, "goals-and-non-goals"]], "Graph": [[752, "graph"]], "Graph Construction": [[669, "graph-construction"]], "Graph500 reference implementations": [[752, "graph500-reference-implementations"]], "Group Composition": [[762, "group-composition"]], "Grouping options into categories": [[661, "grouping-options-into-categories"]], "Guard widening:": [[715, "guard-widening"]], "Guarded Allocation Pool": [[700, "guarded-allocation-pool"]], "Guidelines": [[722, "guidelines"]], "Guidelines for Go code": [[611, "guidelines-for-go-code"]], "H": [[716, "h"]], "HCC": [[591, "hcc"]], "HOW LLVM-MCA WORKS": [[640, "how-llvm-mca-works"]], "HSA AQL Queue": [[591, "hsa-aql-queue"]], "HSA Signals": [[591, "hsa-signals"]], "Hacks": [[706, "hacks"]], "Half Precision Floating-Point Intrinsics": [[715, "half-precision-floating-point-intrinsics"]], "Handling two address instructions": [[608, "handling-two-address-instructions"]], "Hardening Loads": [[766, "hardening-loads"]], "Hardening loaded values": [[766, "hardening-loaded-values"]], "Hardening of loaded values deferred down the data-invariant expression graph": [[766, "hardening-of-loaded-values-deferred-down-the-data-invariant-expression-graph"]], "Hardening the address of the load": [[766, "hardening-the-address-of-the-load"]], "Hardware": [[663, "hardware"], [683, "hardware"], [685, "hardware"]], "Hardware-Loop Intrinsics": [[715, "hardware-loop-intrinsics"]], "Harness mode": [[714, "harness-mode"]], "HasGlobalAliases, removeUsers": [[727, "hasglobalaliases-removeusers"]], "Hash Tables": [[765, "hash-tables"]], "Header": [[591, "header"], [666, "header"]], "Header Guard": [[611, "header-guard"]], "Header Layout": [[765, "header-layout"]], "Header Section": [[791, "header-section"]], "Heap Allocated Arrays": [[749, "heap-allocated-arrays"]], "Heap tagging": [[725, "heap-tagging"]], "Helpful Hints for Common Operations": [[749, "helpful-hints-for-common-operations"]], "Helpful Information About LLVM": [[664, "helpful-information-about-llvm"]], "Hex types": [[792, "hex-types"]], "Hexagon": [[663, "hexagon"]], "Hiding an option from -help output": [[661, "hiding-an-option-from-help-output"]], "High Level Interface": [[771, "high-level-interface"]], "High Level Mitigation Approach": [[766, "high-level-mitigation-approach"]], "High Level Overview": [[666, "high-level-overview"]], "High Level Structure": [[715, "high-level-structure"], [721, "high-level-structure"]], "High Performance Geometric Multigrid": [[752, "high-performance-geometric-multigrid"]], "High-Level Alternative Mitigation Strategies": [[766, "high-level-alternative-mitigation-strategies"]], "High-Level Design": [[669, "high-level-design"]], "High-level Design": [[755, "high-level-design"]], "Historical Note": [[688, null]], "Hopefully you won\u201dt need to be this deep": [[722, "hopefully-you-won-t-need-to-be-this-deep"]], "Host C++ Toolchain, both Compiler and Standard Library": [[683, "host-c-toolchain-both-compiler-and-standard-library"]], "How To Add A Constrained Floating-Point Intrinsic": [[592, null]], "How To Add Your Build Configuration To LLVM Buildbot Infrastructure": [[701, null]], "How To Build Clang and LLVM with Profile-Guided Optimizations": [[704, null]], "How To Build On ARM": [[702, null]], "How To Cross-Compile Clang/LLVM using Clang/LLVM": [[706, null]], "How To Release LLVM To The Public": [[707, null]], "How To Use Attributes": [[711, null]], "How To Use Instruction Mappings": [[712, null]], "How To Validate a New Release": [[758, null]], "How can I tell if my front-end is following the rules?": [[681, "how-can-i-tell-if-my-front-end-is-following-the-rules"]], "How can my script/tool send automatic messages?**": [[671, "how-can-my-script-tool-send-automatic-messages"]], "How do I send a private message?": [[671, "how-do-i-send-a-private-message"]], "How do I set up a private mailing list?": [[671, "how-do-i-set-up-a-private-mailing-list"]], "How does VLA addressing work with GEPs?": [[681, "how-does-vla-addressing-work-with-geps"]], "How good is my fuzzer?": [[717, "how-good-is-my-fuzzer"]], "How is GEP different from ptrtoint, arithmetic, and inttoptr?": [[681, "how-is-gep-different-from-ptrtoint-arithmetic-and-inttoptr"]], "How it works": [[769, "how-it-works"]], "How portable is the LLVM source code?": [[676, "how-portable-is-the-llvm-source-code"]], "How registers are represented in LLVM": [[608, "how-registers-are-represented-in-llvm"]], "How the packetization tables are generated and used": [[608, "how-the-packetization-tables-are-generated-and-used"]], "How to Add Process and Library Symbols to the JITDylibs": [[731, "how-to-add-process-and-library-symbols-to-the-jitdylibs"]], "How to Cross Compile Compiler-rt Builtins For Arm": [[705, null]], "How to Submit a Patch": [[664, "how-to-submit-a-patch"]], "How to Update Debug Info: A Guide for LLVM Pass Authors": [[710, null]], "How to add the support for custom program representation": [[731, "how-to-add-the-support-for-custom-program-representation"]], "How to automatically convert tests into debug info tests": [[710, "how-to-automatically-convert-tests-into-debug-info-tests"]], "How to build Windows Itanium applications.": [[703, null]], "How to build it": [[699, "how-to-build-it"]], "How to create JITDylibs and set up linkage relationships": [[731, "how-to-create-jitdylibs-and-set-up-linkage-relationships"]], "How to do it?": [[727, "how-to-do-it"]], "How to implement cmpValues?": [[727, "how-to-implement-cmpvalues"]], "How to manage symbol strings": [[731, "how-to-manage-symbol-strings"]], "How to pick the date?": [[724, "how-to-pick-the-date"]], "How to remove a JITDylib": [[731, "how-to-remove-a-jitdylib"]], "How to report a security issue?": [[762, "how-to-report-a-security-issue"]], "How to set up LLVM-style RTTI for your class hierarchy": [[708, null]], "How to start LLVM Social in your town": [[724, null]], "How to submit an LLVM bug report": [[709, null]], "How to use ThreadSafeModule and ThreadSafeContext": [[731, "how-to-use-threadsafemodule-and-threadsafecontext"]], "How to use this template": [[767, "how-to-use-this-template"]], "How variable location metadata is transformed during CodeGen": [[765, "how-variable-location-metadata-is-transformed-during-codegen"]], "How-tos": [[731, "how-tos"]], "HydroBench": [[752, "hydrobench"]], "I": [[716, "i"]], "I Still Can\u2019t Find What I\u2019m Looking For": [[678, "i-still-can-t-find-what-i-m-looking-for"]], "I Still Need Pointee Types!": [[732, "i-still-need-pointee-types"]], "I don\u2019t understand the GetElementPtr instruction. Help!": [[676, "i-don-t-understand-the-getelementptr-instruction-help"]], "I don\u201dt want to use a web UI": [[671, "i-don-t-want-to-use-a-web-ui"]], "I have another question not covered here. What should I do?": [[671, "i-have-another-question-not-covered-here-what-should-i-do"]], "IBM - Official manuals and docs": [[663, "ibm-official-manuals-and-docs"]], "IFuncs": [[715, "ifuncs"]], "IR Backwards Compatibility": [[670, "ir-backwards-compatibility"]], "IR Best Practices": [[678, "ir-best-practices"]], "IRC": [[682, "irc"]], "IRTranslator": [[690, null]], "Identifiers": [[715, "identifiers"]], "Identifying GC roots on the stack": [[680, "gcroot"]], "If Conversion": [[785, "if-conversion"]], "If \u201cF\u201d could not be overridden, fix it!": [[727, "if-f-could-not-be-overridden-fix-it"]], "If \u201cF\u201d may be overridden": [[727, "if-f-may-be-overridden"]], "If, ElseIf, Else": [[607, "if-elseif-else"]], "If/Then/Else": [[812, "if-then-else"]], "Image and Samplers": [[591, "image-and-samplers"]], "Image processing": [[752, "image-processing"]], "Immediate Operands": [[721, "immediate-operands"]], "Implement a subclass of TargetInstrInfo": [[786, "implement-a-subclass-of-targetinstrinfo"]], "Implement a subclass of TargetRegisterInfo": [[786, "implement-a-subclass-of-targetregisterinfo"]], "Implementation": [[597, "implementation"], [603, "implementation"], [725, "implementation"]], "Implementation Details": [[669, "implementation-details"], [764, "implementation-details"], [766, "implementation-details"]], "Implementation:": [[715, "implementation"], [715, "id44"]], "Implementation: Getting from mass and scale to frequency": [[599, "implementation-getting-from-mass-and-scale-to-frequency"]], "Implementation: a series of DAGs": [[599, "implementation-a-series-of-dags"]], "Implementing Analysis Groups": [[788, "implementing-analysis-groups"]], "Implementing Analysis Invalidation": [[730, "implementing-analysis-invalidation"]], "Implementing a Native Assembler": [[608, "implementing-a-native-assembler"]], "Implementing a collector plugin": [[680, "implementing-a-collector-plugin"]], "Implementing portable offsetof/sizeof": [[817, "implementing-portable-offsetof-sizeof"]], "Important Derived Types": [[749, "important-derived-types"]], "Important Notes": [[719, "important-notes"]], "Important Public Members of the BasicBlock class": [[749, "important-public-members-of-the-basicblock-class"]], "Important Public Members of the Function": [[749, "important-public-members-of-the-function"]], "Important Public Members of the GlobalValue class": [[749, "important-public-members-of-the-globalvalue-class"]], "Important Public Members of the GlobalVariable class": [[749, "important-public-members-of-the-globalvariable-class"]], "Important Public Members of the Instruction class": [[749, "important-public-members-of-the-instruction-class"]], "Important Public Members of the Module class": [[749, "important-public-members-of-the-module-class"]], "Important Public Members of the User class": [[749, "important-public-members-of-the-user-class"]], "Important Public Members of the Value class": [[749, "important-public-members-of-the-value-class"]], "Important Public Methods": [[749, "important-public-methods"]], "Important Subclasses of Constant": [[749, "important-subclasses-of-constant"]], "Important Subclasses of the Instruction class": [[749, "important-subclasses-of-the-instruction-class"]], "Important and useful LLVM APIs": [[749, "important-and-useful-llvm-apis"]], "Importing local repositories": [[751, "importing-local-repositories"]], "In what language is LLVM written?": [[676, "in-what-language-is-llvm-written"]], "In-order Issue and Execute": [[640, "in-order-issue-and-execute"]], "Inclusion Policy": [[772, "inclusion-policy"]], "Incorrect code generation": [[709, "incorrect-code-generation"]], "Incremental Development": [[670, "incremental-development"]], "Incubating New Projects": [[670, "incubating-new-projects"]], "Index et tableaux": [[793, "indices-and-tables"]], "Indirect Branches, Calls, and Returns": [[766, "indirect-branches-calls-and-returns"]], "Indirect Call, Branch, and Return Predicates": [[766, "indirect-call-branch-and-return-predicates"]], "Indirect inputs and outputs": [[715, "indirect-inputs-and-outputs"]], "IndirectBrInst": [[600, "indirectbrinst"]], "Inductions": [[785, "inductions"]], "Initial Kernel Execution State": [[591, "initial-kernel-execution-state"]], "Initial SelectionDAG Construction": [[608, "initial-selectiondag-construction"]], "Initializing roots to null": [[680, "initializing-roots-to-null"]], "Inline Asm": [[608, "inline-asm"]], "Inline Asm Constraint String": [[715, "inline-asm-constraint-string"]], "Inline Asm Metadata": [[715, "inline-asm-metadata"]], "Inline Assembler Expressions": [[715, "inline-assembler-expressions"]], "Input": [[792, "input"]], "Input constraints": [[715, "input-constraints"]], "Inserting Passes into Default Pipelines": [[730, "inserting-passes-into-default-pipelines"]], "Installing and Using": [[706, "installing-and-using"]], "InstrInfo": [[774, "instrinfo"]], "InstrMapping Class Overview": [[712, "instrmapping-class-overview"]], "Instruction Alias Processing": [[608, "instruction-alias-processing"]], "Instruction Aliases": [[608, "instruction-aliases"]], "Instruction Annotations": [[723, "instruction-annotations"]], "Instruction Dispatch": [[640, "instruction-dispatch"]], "Instruction Examples": [[591, "instruction-examples"]], "Instruction Flags": [[721, "instruction-flags"]], "Instruction Flow": [[640, "instruction-flow"]], "Instruction Issue": [[640, "instruction-issue"]], "Instruction Matching": [[608, "instruction-matching"]], "Instruction Operand Mapping": [[786, "instruction-operand-mapping"]], "Instruction Operand Name Mapping": [[786, "instruction-operand-name-mapping"]], "Instruction Operand Types": [[786, "instruction-operand-types"]], "Instruction Parsing": [[608, "instruction-parsing"]], "Instruction Reference": [[715, "instruction-reference"]], "Instruction Relation Mapping": [[786, "instruction-relation-mapping"]], "Instruction Scheduling": [[765, "instruction-scheduling"], [786, "instruction-scheduling"]], "Instruction Selection": [[608, "instruction-selection-section"]], "Instruction Selector": [[786, "instruction-selector"]], "Instruction Set": [[786, "instruction-set"]], "Instruction Threshold": [[790, "instruction-threshold"]], "Instruction encoding (arithmetic and jump)": [[608, "instruction-encoding-arithmetic-and-jump"]], "Instruction encoding (load, store)": [[608, "instruction-encoding-load-store"]], "Instruction folding": [[608, "instruction-folding"]], "Instruction naming": [[608, "instruction-naming"]], "Instruction referencing locations": [[721, "instruction-referencing-locations"]], "InstructionSelect": [[691, null]], "Instructions": [[0, "instructions"], [1, "instructions"], [2, "instructions"], [3, "instructions"], [4, "instructions"], [5, "instructions"], [6, "instructions"], [7, "instructions"], [8, "instructions"], [9, "instructions"], [587, "instructions"], [588, "instructions"], [591, "instructions"], [748, "instructions"]], "Instrumentation Attributes": [[790, "instrumentation-attributes"]], "Instrumenting your C/C++/Objective-C Application": [[789, "instrumenting-your-c-c-objective-c-application"]], "Integer Extension and Truncation": [[689, "integer-extension-and-truncation"]], "Integer Numbers": [[590, "integer-numbers"]], "Integer Operations": [[689, "integer-operations"]], "Integer Type": [[715, "integer-type"]], "Integer/bitwise reductions": [[689, "integer-bitwise-reductions"]], "Intel IA-32-specific Options": [[618, "intel-ia-32-specific-options"]], "Intended Usage": [[713, "intended-usage"]], "Interaction and relationship between User and Use objects": [[749, "interaction-and-relationship-between-user-and-use-objects"]], "Interfaces which may be specified": [[594, "interfaces-which-may-be-specified"]], "Internal vs External Storage": [[661, "internal-vs-external-storage"]], "Interoperability with std::error_code and ErrorOr": [[749, "interoperability-with-std-error-code-and-erroror"]], "Interprocedural Checking": [[766, "interprocedural-checking"]], "Intrinsic": [[774, "intrinsic"]], "Intrinsic Functions": [[715, "intrinsic-functions"]], "Intrinsic Global Variables": [[715, "intrinsic-global-variables"]], "IntrinsicID Operands": [[721, "intrinsicid-operands"]], "Intrinsics": [[665, "intrinsics"], [748, "intrinsics"], [768, "intrinsics"]], "Introducing New Components into LLVM": [[670, "introducing-new-components-into-llvm"]], "Introduction": [[0, "introduction"], [1, "introduction"], [2, "introduction"], [3, "introduction"], [4, "introduction"], [5, "introduction"], [6, "introduction"], [7, "introduction"], [8, "introduction"], [9, "introduction"], [587, "introduction"], [591, "introduction"], [593, "introduction"], [594, "introduction"], [595, "introduction"], [596, "introduction"], [597, "introduction"], [599, "introduction"], [600, "introduction"], [603, "introduction"], [604, "introduction"], [606, "introduction"], [607, "introduction"], [608, "introduction"], [611, "introduction"], [661, "introduction"], [662, "introduction"], [665, "introduction"], [666, "introduction"], [669, "introduction"], [670, "introduction"], [672, "introduction"], [673, "introduction"], [675, "introduction"], [679, "introduction"], [680, "introduction"], [681, "introduction"], [686, "introduction"], [698, "introduction"], [699, "introduction"], [700, "introduction"], [701, "introduction"], [702, "introduction"], [703, "introduction"], [704, "introduction"], [705, "introduction"], [706, "introduction"], [707, "introduction"], [710, "introduction"], [711, "introduction"], [712, "introduction"], [713, "introduction"], [714, "introduction"], [715, "introduction"], [717, "introduction"], [720, "introduction"], [721, "introduction"], [723, "introduction"], [725, "introduction"], [726, "introduction"], [727, "introduction"], [728, "introduction"], [729, "introduction"], [731, "introduction"], [733, "introduction"], [734, "introduction"], [735, "introduction"], [736, "introduction"], [738, "introduction"], [739, "introduction"], [743, "introduction"], [744, "introduction"], [746, "introduction"], [748, "introduction"], [749, "introduction"], [751, "introduction"], [753, "introduction"], [757, "introduction"], [758, "introduction"], [761, "introduction"], [764, "introduction"], [765, "introduction"], [765, "id5"], [765, "id6"], [769, "introduction"], [774, "introduction"], [777, "introduction"], [786, "introduction"], [789, "introduction"], [791, "introduction"]], "Introduction - Achieving consistency in how we deal with bug reports": [[601, "introduction-achieving-consistency-in-how-we-deal-with-bug-reports"]], "Introduction - Got bugs?": [[709, "introduction-got-bugs"]], "Introduction and Quickstart": [[722, "introduction-and-quickstart"]], "Introduction and Warning": [[674, "introduction-and-warning"]], "Introduction to SelectionDAGs": [[608, "introduction-to-selectiondags"]], "Introduction to YAML": [[792, "introduction-to-yaml"]], "Introduction to YAML I/O": [[792, "introduction-to-yaml-i-o"]], "Introduction to the LLVM remark diagnostics": [[759, "introduction-to-the-llvm-remark-diagnostics"]], "Introduction \u2014 What is a pass?": [[787, "introduction-what-is-a-pass"], [788, "introduction-what-is-a-pass"]], "Invalidation and updating": [[726, "invalidation-and-updating"]], "InvokeInst": [[600, "invokeinst"]], "Invoking clang": [[662, "invoking-clang"]], "Invoking opt": [[730, "invoking-opt"]], "Irreducible cycle enclosing natural loops": [[667, "irreducible-cycle-enclosing-natural-loops"]], "Irreducible cycle without natural loops": [[667, "irreducible-cycle-without-natural-loops"]], "Irreducible union of two natural loops": [[667, "irreducible-union-of-two-natural-loops"]], "Is Generally Reliable": [[608, "is-generally-reliable"]], "Issues with explicit pointee types": [[732, "issues-with-explicit-pointee-types"]], "Itanium (ia64)": [[663, "itanium-ia64"]], "Itanium ABI Zero-cost Exception Handling": [[673, "itanium-abi-zero-cost-exception-handling"]], "Iterating over def-use & use-def chains": [[749, "iterating-over-def-use-use-def-chains"]], "Iterating over predecessors & successors of blocks": [[749, "iterating-over-predecessors-successors-of-blocks"]], "Iterating over the BasicBlock in a Function": [[749, "iterating-over-the-basicblock-in-a-function"]], "Iterating over the Instruction in a BasicBlock": [[749, "iterating-over-the-instruction-in-a-basicblock"]], "Iterating over the Instruction in a Function": [[749, "iterating-over-the-instruction-in-a-function"]], "I\u2019d like to write a self-hosting LLVM compiler. How should I interface with the LLVM middle-end optimizers and back-end code generators?": [[676, "i-d-like-to-write-a-self-hosting-llvm-compiler-how-should-i-interface-with-the-llvm-middle-end-optimizers-and-back-end-code-generators"]], "I\u2019m writing a backend for a target which needs custom lowering for GEP. How do I do this?": [[681, "i-m-writing-a-backend-for-a-target-which-needs-custom-lowering-for-gep-how-do-i-do-this"]], "JIT": [[784, "jit"]], "JIT API Basics": [[794, "jit-api-basics"]], "JIT Linking": [[714, "jit-linking"]], "JIT Support": [[608, "jit-support"], [786, "jit-support"]], "JITLink Availability and Feature Status": [[714, "jitlink-availability-and-feature-status"]], "JITLink and ORC\u2019s ObjectLinkingLayer": [[714, null]], "JITLink and ObjectLinkingLayer": [[714, "jitlink-and-objectlinkinglayer"]], "JITLinkMemoryManager and Security": [[714, "jitlinkmemorymanager-and-security"]], "JSON Reference": [[774, "json-reference"]], "Jump-table Index Operands": [[721, "jump-table-index-operands"]], "Just Tell Me How To Run The Default Optimization Pipeline With The New Pass Manager": [[730, "just-tell-me-how-to-run-the-default-optimization-pipeline-with-the-new-pass-manager"]], "Kaleidoscope Tutorial": [[798, null], [799, null], [800, null], [801, null], [802, null], [803, null], [804, null], [805, null], [806, null], [807, null]], "Kaleidoscope: Adding Debug Information": [[816, null]], "Kaleidoscope: Adding JIT and Optimizer Support": [[811, null]], "Kaleidoscope: Code generation to LLVM IR": [[810, null]], "Kaleidoscope: Compiling to Object Code": [[815, null]], "Kaleidoscope: Conclusion and other useful LLVM tidbits": [[817, null]], "Kaleidoscope: Extending the Language: Control Flow": [[812, null]], "Kaleidoscope: Extending the Language: Mutable Variables": [[814, null]], "Kaleidoscope: Extending the Language: User-defined Operators": [[813, null]], "Kaleidoscope: Implementing a Language with LLVM": [[819, "kaleidoscope-implementing-a-language-with-llvm"]], "Kaleidoscope: Implementing a Parser and AST": [[809, null]], "Kaleidoscope: Kaleidoscope Introduction and the Lexer": [[808, null]], "KaleidoscopeJIT": [[794, "kaleidoscopejit"]], "Keep the current coding standard": [[753, "keep-the-current-coding-standard"]], "Keep \u00ab\u00a0Internal\u00a0\u00bb Headers Private": [[611, "keep-internal-headers-private"]], "Keeping LLVM Portable": [[771, "keeping-llvm-portable"]], "Keeping Membership Current": [[762, "keeping-membership-current"]], "Keeping git blame usable": [[753, "keeping-git-blame-usable"]], "Kernel Descriptor": [[591, "kernel-descriptor"]], "Kernel Dispatch": [[591, "kernel-dispatch"]], "Kernel Functions": [[591, "kernel-functions"]], "Kernel Metadata": [[729, "kernel-metadata"]], "Kernel Prolog": [[591, "kernel-prolog"]], "Keys": [[748, "keys"]], "Kicking the Tires": [[813, "kicking-the-tires"]], "Known Bits Analysis": [[692, null]], "Known issues:": [[703, "known-issues"]], "Kokkos": [[752, "kokkos"]], "L": [[716, "l"]], "LDR and LD1": [[597, "ldr-and-ld1"]], "LEB128": [[666, "leb128"]], "LF_ARGLIST (0x1201)": [[735, "lf-arglist-0x1201"]], "LF_ARRAY (0x1503)": [[735, "lf-array-0x1503"]], "LF_BCLASS (0x1400)": [[735, "lf-bclass-0x1400"]], "LF_BINTERFACE (0x151a)": [[735, "lf-binterface-0x151a"]], "LF_BITFIELD (0x1205)": [[735, "lf-bitfield-0x1205"]], "LF_BUILDINFO (0x1603)": [[735, "lf-buildinfo-0x1603"]], "LF_CLASS (0x1504)": [[735, "lf-class-0x1504"]], "LF_ENDPRECOMP (0x0014)": [[735, "lf-endprecomp-0x0014"]], "LF_ENUM (0x1507)": [[735, "lf-enum-0x1507"]], "LF_ENUMERATE (0x1502)": [[735, "lf-enumerate-0x1502"]], "LF_FIELDLIST (0x1203)": [[735, "lf-fieldlist-0x1203"]], "LF_FUNC_ID (0x1601)": [[735, "lf-func-id-0x1601"]], "LF_INDEX (0x1404)": [[735, "lf-index-0x1404"]], "LF_INTERFACE (0x1519)": [[735, "lf-interface-0x1519"]], "LF_IVBCLASS (0x1402)": [[735, "lf-ivbclass-0x1402"]], "LF_LABEL (0x000e)": [[735, "lf-label-0x000e"]], "LF_MEMBER (0x150d)": [[735, "lf-member-0x150d"]], "LF_METHOD (0x150f)": [[735, "lf-method-0x150f"]], "LF_METHODLIST (0x1206)": [[735, "lf-methodlist-0x1206"]], "LF_MFUNCTION (0x1009)": [[735, "lf-mfunction-0x1009"]], "LF_MFUNC_ID (0x1602)": [[735, "lf-mfunc-id-0x1602"]], "LF_MODIFIER (0x1001)": [[735, "lf-modifier-0x1001"]], "LF_NESTTYPE (0x1510)": [[735, "lf-nesttype-0x1510"]], "LF_ONEMETHOD (0x1511)": [[735, "lf-onemethod-0x1511"]], "LF_PADn (0xf0 + n)": [[735, "lf-padn-0xf0-n"]], "LF_POINTER (0x1002)": [[735, "lf-pointer-0x1002"]], "LF_PRECOMP (0x1509)": [[735, "lf-precomp-0x1509"]], "LF_PROCEDURE (0x1008)": [[735, "lf-procedure-0x1008"]], "LF_STMEMBER (0x150e)": [[735, "lf-stmember-0x150e"]], "LF_STRING_ID (0x1605)": [[735, "lf-string-id-0x1605"]], "LF_STRUCTURE (0x1505)": [[735, "lf-structure-0x1505"]], "LF_SUBSTR_LIST (0x1604)": [[735, "lf-substr-list-0x1604"]], "LF_TYPESERVER2 (0x1515)": [[735, "lf-typeserver2-0x1515"]], "LF_UDT_MOD_SRC_LINE (0x1607)": [[735, "lf-udt-mod-src-line-0x1607"]], "LF_UDT_SRC_LINE (0x1606)": [[735, "lf-udt-src-line-0x1606"]], "LF_UNION (0x1506)": [[735, "lf-union-0x1506"]], "LF_VBCLASS (0x1401)": [[735, "lf-vbclass-0x1401"]], "LF_VFTABLE (0x151d)": [[735, "lf-vftable-0x151d"]], "LF_VFUNCTAB (0x1409)": [[735, "lf-vfunctab-0x1409"]], "LF_VTSHAPE (0x000a)": [[735, "lf-vtshape-0x000a"]], "LGTM - How a Patch Is Accepted": [[610, "lgtm-how-a-patch-is-accepted"]], "LIT EXAMPLE TESTS": [[617, "lit-example-tests"]], "LIT INFRASTRUCTURE": [[617, "lit-infrastructure"]], "LLDB Version": [[668, "lldb-version"]], "LLJIT and LLLazyJIT": [[731, "lljit-and-lllazyjit"]], "LLVM": [[591, "llvm"]], "LLVM  Release Notes": [[757, null]], "LLVM Alias Analysis Infrastructure": [[594, null]], "LLVM Atomic Instructions and Concurrency Guide": [[595, null]], "LLVM BackEnds": [[774, "llvm-backends"]], "LLVM Bitcode File Format": [[598, null]], "LLVM Block Frequency Terminology": [[599, null]], "LLVM Branch Weight Metadata": [[600, null]], "LLVM Bug Life Cycle": [[601, null]], "LLVM Builds and Distributions": [[784, "llvm-builds-and-distributions"]], "LLVM Code Coverage Mapping Format": [[666, null]], "LLVM Code Generation": [[673, "llvm-code-generation"]], "LLVM Code-Review Policy and Practices": [[610, null]], "LLVM Coding Standards": [[611, null]], "LLVM Command Guide": [[616, null]], "LLVM Community Code of Conduct": [[609, null]], "LLVM Community Support Policy": [[772, null]], "LLVM Cycle Terminology": [[667, null]], "LLVM Developer Policy": [[670, null]], "LLVM Developers Meeting presentations": [[726, "llvm-developers-meeting-presentations"]], "LLVM Extensions": [[675, null]], "LLVM Function Attribute": [[789, "llvm-function-attribute"]], "LLVM IR": [[756, "llvm-ir"]], "LLVM IR Attributes": [[591, "llvm-ir-attributes"]], "LLVM IR Blocks": [[598, "llvm-ir-blocks"]], "LLVM IR Encoding": [[598, "llvm-ir-encoding"]], "LLVM IR Features": [[680, "llvm-ir-features"]], "LLVM IR Intrinsics": [[591, "llvm-ir-intrinsics"]], "LLVM IR Lane ordering": [[597, "llvm-ir-lane-ordering"]], "LLVM IR Magic Number": [[598, "llvm-ir-magic-number"]], "LLVM IR Representation": [[666, "llvm-ir-representation"], [748, "llvm-ir-representation"]], "LLVM IR for If/Then/Else": [[812, "llvm-ir-for-if-then-else"]], "LLVM IR for the \u201cfor\u201d Loop": [[812, "llvm-ir-for-the-for-loop"]], "LLVM Language Reference Manual": [[715, null]], "LLVM Link Time Optimization: Design and Implementation": [[718, null]], "LLVM Loop Terminology (and Canonical Forms)": [[719, null]], "LLVM Optimization Passes": [[811, "llvm-optimization-passes"]], "LLVM PowerPC ABI": [[608, "llvm-powerpc-abi"]], "LLVM Programmer\u2019s Manual": [[749, null]], "LLVM Project Wrappers": [[607, "llvm-project-wrappers"]], "LLVM Reference": [[756, "llvm-reference"]], "LLVM Security Group": [[762, null]], "LLVM Security Group Transparency Reports": [[763, null]], "LLVM Testing Infrastructure Guide": [[781, null]], "LLVM Testing Infrastructure Organization": [[781, "llvm-testing-infrastructure-organization"]], "LLVM Tutorial: Table of Contents": [[819, null]], "LLVM bitstream remarks": [[759, "llvm-bitstream-remarks"]], "LLVM bugpoint tool: design and usage": [[602, null]], "LLVM regular sync-up calls": [[682, "id9"]], "LLVM-related variables": [[606, "llvm-related-variables"]], "LLVM\u2019s Analysis and Transform Passes": [[746, null]], "LLVM\u2019s Optional Rich Disassembly Output": [[723, null]], "LOCAL CONFIGURATION FILES": [[617, "local-configuration-files"]], "LTO Post-Link Module Flags Metadata": [[715, "lto-post-link-module-flags-metadata"]], "Label Type": [[715, "label-type"]], "Laissez faire": [[753, "laissez-faire"]], "Lanai": [[663, "lanai"]], "Lane identifier": [[591, "lane-identifier"]], "Language Extensions and File Format Changes": [[765, "language-extensions-and-file-format-changes"]], "Language Names": [[586, "amdgpu-dwarf-language-names-table"]], "Language and Compiler Issues": [[611, "language-and-compiler-issues"]], "Language encodings": [[586, "amdgpu-dwarf-language-encodings-table"]], "Language-Specific Optimizations": [[817, "language-specific-optimizations"]], "Languages, Libraries, and Standards": [[611, "languages-libraries-and-standards"]], "Late Machine Code Optimizations": [[608, "late-machine-code-optimizations"]], "Laziness": [[731, "laziness"]], "Lazy Compilation": [[796, "lazy-compilation"]], "Lazy Initialization with ManagedStatic": [[749, "lazy-initialization-with-managedstatic"]], "Leaf Records": [[735, "leaf-records"]], "Leaks": [[717, "leaks"]], "Leftover Transformations": [[782, "leftover-transformations"]], "Legacy License Structure": [[670, "legacy-license-structure"]], "Legal": [[786, "legal"]], "Legalizer": [[693, null]], "Lexer Extensions for If/Then/Else": [[812, "lexer-extensions-for-if-then-else"]], "Lexer Extensions for the \u201cfor\u201d Loop": [[812, "lexer-extensions-for-the-for-loop"]], "LibFuzzer": [[756, "libfuzzer"]], "Libcalls: __atomic_*": [[595, "libcalls-atomic"]], "Libcalls: __sync_*": [[595, "libcalls-sync"]], "Library": [[761, "library"]], "Library Layering": [[611, "library-layering"]], "License": [[676, "license"]], "Licensing": [[699, "licensing"]], "Lifetime": [[713, "lifetime"]], "Limitation": [[783, null]], "Limitations": [[594, "limitations"], [721, "limitations"]], "Limitations and Half Baked Ideas": [[770, "limitations-and-half-baked-ideas"]], "Line Number Information": [[591, "line-number-information"]], "Line number header entry format encodings": [[586, "amdgpu-dwarf-line-number-header-entry-format-encodings-table"]], "LinkGraph": [[714, "linkgraph"]], "Linkage Types": [[715, "linkage-types"]], "Linking with Libdevice": [[729, "linking-with-libdevice"]], "Links": [[683, "links"], [685, "links"], [767, "links"]], "Linux": [[596, "linux"], [663, "linux"]], "Linux Intel": [[596, "linux-intel"]], "Lists": [[607, "lists"], [767, "lists"]], "Lists of Lists": [[607, "lists-of-lists"]], "Live In Registers": [[721, "live-in-registers"]], "Live Intervals": [[608, "live-intervals"]], "Live Intervals Analysis": [[608, "live-intervals-analysis"]], "Live Variable Analysis": [[608, "live-variable-analysis"]], "LiveDebugValues expansion of variable locations": [[765, "livedebugvalues-expansion-of-variable-locations"]], "Load/Store Unit and Memory Consistency Model": [[640, "load-store-unit-and-memory-consistency-model"]], "Loaded Code Object Path Uniform Resource Identifier (URI)": [[591, "loaded-code-object-path-uniform-resource-identifier-uri"]], "Loads folded into data-invariant operations can be hardened after the operation": [[766, "loads-folded-into-data-invariant-operations-can-be-hardened-after-the-operation"]], "Local LLVM Configuration": [[683, "local-llvm-configuration"]], "Locating clobbers yourself": [[726, "locating-clobbers-yourself"]], "Location": [[605, "location"]], "Logarithmical search": [[727, "logarithmical-search"]], "Lookup By Address Section Header": [[591, "lookup-by-address-section-header"]], "Lookup By Name Section Header": [[591, "lookup-by-name-section-header"]], "Loop Closed SSA (LCSSA)": [[719, "loop-closed-ssa-lcssa"]], "Loop Definition": [[719, "loop-definition"]], "Loop Distribution": [[782, "loop-distribution"]], "Loop Interchange": [[782, "loop-interchange"]], "Loop Scale": [[599, "loop-scale"]], "Loop Simplify Form": [[719, "loop-simplify-form"]], "Loop Unrolling": [[782, "loop-unrolling"]], "Loop Vectorization and Interleaving": [[782, "loop-vectorization-and-interleaving"]], "LoopInfo": [[719, "loopinfo"]], "Loops": [[607, "loops"]], "Loops with unknown trip count": [[785, "loops-with-unknown-trip-count"]], "Low Level Type": [[688, "low-level-type"]], "Lowering Quality and Representation Overhead": [[770, "lowering-quality-and-representation-overhead"]], "Lowering:": [[715, "lowering"], [715, "id1364"], [715, "id1385"], [715, "id1390"], [715, "id1395"], [715, "id1397"], [715, "id1399"], [715, "id1401"], [715, "id1403"], [715, "id1405"], [715, "id1407"], [715, "id1409"], [715, "id1411"], [715, "id1413"], [715, "id1415"], [715, "id1417"], [715, "id1419"], [715, "id1421"], [715, "id1423"], [715, "id1425"], [715, "id1427"], [715, "id1429"], [715, "id1431"]], "M": [[716, "m"]], "M0": [[591, "m0"]], "MACH-O ONLY OPTIONS AND COMMANDS": [[643, "mach-o-only-options-and-commands"]], "MACH-O SPECIFIC OPTIONS": [[641, "mach-o-specific-options"], [650, "mach-o-specific-options"], [655, "mach-o-specific-options"]], "MACH-O-SPECIFIC OPTIONS": [[642, "mach-o-specific-options"]], "MCJIT Design and Implementation": [[720, null]], "MCSymbol Operands": [[721, "mcsymbol-operands"]], "MERGE": [[646, "merge"]], "METADATA_ATTACHMENT Contents": [[598, "metadata-attachment-contents"]], "METADATA_BLOCK Contents": [[598, "metadata-block-contents"]], "META_BLOCK": [[759, "meta-block"]], "MIMG": [[0, "mimg"], [2, "mimg"], [3, "mimg"], [4, "mimg"], [9, "mimg"]], "MIMG Modifiers": [[589, "mimg-modifiers"]], "MIPS": [[663, "mips"]], "MIR Testing Guide": [[721, "mir-testing-guide"]], "MODULE_BLOCK Contents": [[598, "module-block-contents"]], "MODULE_CODE_ALIAS Record": [[598, "module-code-alias-record"]], "MODULE_CODE_ASM Record": [[598, "module-code-asm-record"]], "MODULE_CODE_DATALAYOUT Record": [[598, "module-code-datalayout-record"]], "MODULE_CODE_DEPLIB Record": [[598, "module-code-deplib-record"]], "MODULE_CODE_FUNCTION Record": [[598, "module-code-function-record"]], "MODULE_CODE_GCNAME Record": [[598, "module-code-gcname-record"]], "MODULE_CODE_GLOBALVAR Record": [[598, "module-code-globalvar-record"]], "MODULE_CODE_SECTIONNAME Record": [[598, "module-code-sectionname-record"]], "MODULE_CODE_TRIPLE Record": [[598, "module-code-triple-record"]], "MODULE_CODE_VERSION Record": [[598, "module-code-version-record"]], "MRI SCRIPTS": [[622, "mri-scripts"]], "MRI Script Commands": [[622, "mri-script-commands"]], "MSF Container Options": [[645, "msf-container-options"]], "MSF File Options": [[645, "msf-file-options"]], "MTBUF": [[0, "mtbuf"], [2, "mtbuf"], [3, "mtbuf"], [4, "mtbuf"], [9, "mtbuf"]], "MUBUF": [[0, "mubuf"], [2, "mubuf"], [3, "mubuf"], [4, "mubuf"], [8, "mubuf"], [9, "mubuf"], [591, "mubuf"]], "MUBUF/MTBUF Modifiers": [[589, "mubuf-mtbuf-modifiers"]], "Mach-O Changes": [[765, "mach-o-changes"]], "MachSuite": [[752, "machsuite"]], "Machine Basic Blocks": [[721, "machine-basic-blocks"]], "Machine Code Emitter": [[786, "machine-code-emitter"]], "Machine Functions": [[721, "machine-functions"]], "Machine IR (MIR) Format Reference Manual": [[721, null]], "Machine Instructions": [[721, "machine-instructions"]], "Machine Instructions Format Reference": [[721, "machine-instructions-format-reference"]], "Machine Operands": [[721, "machine-operands"]], "Machine code description classes": [[608, "machine-code-description-classes"]], "Machine code in SSA form": [[608, "machine-code-in-ssa-form"]], "Machine-specific Assembly Syntax": [[675, "machine-specific-assembly-syntax"]], "MachineInstr Bundles": [[608, "machineinstr-bundles"]], "MachineVerifier": [[694, "machineverifier"]], "Magic Numbers": [[598, "magic-numbers"]], "Mailing Lists": [[682, "mailing-lists"]], "Maintenance of metadata": [[601, "maintenance-of-metadata"]], "Making a Major Change": [[670, "making-a-major-change"]], "Making and Submitting a Patch": [[670, "making-and-submitting-a-patch"]], "Making changes": [[728, "making-changes"]], "Making simple changes": [[749, "making-simple-changes"]], "Map-Like Containers (std::map, DenseMap, etc)": [[749, "map-like-containers-std-map-densemap-etc"]], "Mapping Region": [[666, "mapping-region"], [666, "id6"]], "Mapping Regions": [[666, "mapping-regions"]], "Mapping from instructions to functional units": [[608, "mapping-from-instructions-to-functional-units"]], "Mapping of email addresses to Discourse categories": [[671, "mapping-of-email-addresses-to-discourse-categories"]], "Mapping of mailing lists to categories": [[671, "mapping-of-mailing-lists-to-categories"]], "Mapping virtual registers to physical registers": [[608, "mapping-virtual-registers-to-physical-registers"]], "Mappings": [[792, "mappings"]], "Markdown Quickstart Template": [[722, null]], "Marking Functions as Kernels": [[729, "marking-functions-as-kernels"]], "Masked Vector Expanding Load and Compressing Store Intrinsics": [[715, "masked-vector-expanding-load-and-compressing-store-intrinsics"]], "Masked Vector Gather and Scatter Intrinsics": [[715, "masked-vector-gather-and-scatter-intrinsics"]], "Masked Vector Load and Store Intrinsics": [[715, "masked-vector-load-and-store-intrinsics"]], "Matching Newline Characters": [[612, "matching-newline-characters"]], "Matching a PDB to its executable": [[741, "matching-a-pdb-to-its-executable"]], "Matrix Intrinsics": [[715, "matrix-intrinsics"]], "Mechanical Source Issues": [[611, "mechanical-source-issues"]], "Meetups and social events": [[682, "meetups-and-social-events"]], "MemTagSanitizer": [[725, null]], "Member Records": [[735, "member-records"]], "Members of the Code of Conduct Advisory Committee": [[760, "members-of-the-code-of-conduct-advisory-committee"]], "Memory Access and Addressing Operations": [[715, "memory-access-and-addressing-operations"]], "Memory Dependence Analysis": [[594, "memory-dependence-analysis"]], "Memory Management with JITLinkMemoryManager": [[714, "memory-management-with-jitlinkmemorymanager"]], "Memory Model": [[591, "memory-model"]], "Memory Model GFX10": [[591, "memory-model-gfx10"]], "Memory Model GFX6-GFX9": [[591, "memory-model-gfx6-gfx9"]], "Memory Model GFX90A": [[591, "memory-model-gfx90a"]], "Memory Model for Concurrent Operations": [[715, "memory-model-for-concurrent-operations"]], "Memory Operations": [[689, "memory-operations"]], "Memory Scopes": [[591, "memory-scopes"]], "Memory Spaces": [[591, "memory-spaces"]], "Memory Use Markers": [[715, "memory-use-markers"]], "Memory in LLVM": [[814, "memory-in-llvm"]], "Memory reclaiming": [[761, "memory-reclaiming"]], "MemorySSA": [[726, null]], "MemorySSA Structure": [[726, "memoryssa-structure"]], "Merge Requests": [[707, "merge-requests"]], "MergeFunctions pass, how it works": [[727, null]], "MergeFunctions, main fields and runOnModule": [[727, "mergefunctions-main-fields-and-runonmodule"]], "Merging Patches": [[707, "merging-patches"]], "Merging process, mergeTwoFunctions": [[727, "merging-process-mergetwofunctions"]], "Metadata": [[715, "metadata"]], "Metadata Nodes and Metadata Strings": [[715, "metadata-nodes-and-metadata-strings"]], "Metadata Records": [[791, "metadata-records"]], "Metadata Type": [[715, "metadata-type"]], "Metadata on Loops": [[782, "metadata-on-loops"]], "Method information": [[611, "method-information"]], "Microscopic Details": [[611, "microscopic-details"]], "Microsoft Visual C++": [[606, "microsoft-visual-c"]], "Middle-end optimization bugs": [[709, "middle-end-optimization-bugs"]], "Migration Instructions": [[732, "migration-instructions"]], "Minimising cost of downstream merges": [[753, "minimising-cost-of-downstream-merges"]], "Minimize Soft Errors": [[771, "minimize-soft-errors"]], "Minimizing Binary Size": [[789, "minimizing-binary-size"]], "Minimizing docker image size": [[672, "minimizing-docker-image-size"]], "Minimum Legality For Operations": [[693, "minimum-legality-for-operations"]], "Minimum Legality For Vectors": [[693, "minimum-legality-for-vectors"]], "Minimum Legality for Pointers": [[693, "minimum-legality-for-pointers"]], "Minimum Rule Set": [[693, "minimum-rule-set"]], "Minimum Rules For Scalars": [[693, "minimum-rules-for-scalars"]], "Miscellaneous Attributes": [[721, "miscellaneous-attributes"]], "Miscellaneous Modifiers": [[589, "miscellaneous-modifiers"]], "Miscellaneous Options": [[645, "miscellaneous-options"]], "Miscellaneous Problems": [[788, "miscellaneous-problems"]], "Miscellaneous Resources": [[663, "miscellaneous-resources"]], "Miscellaneous Variables": [[750, "miscellaneous-variables"]], "Miscellaneous option modifiers": [[661, "miscellaneous-option-modifiers"]], "Miscompilation debugger": [[602, "miscompilation-debugger"]], "Miscompilations": [[709, "miscompilations"]], "Mixing References and Raw Pointers": [[770, "mixing-references-and-raw-pointers"]], "Mnemonic Aliases": [[608, "mnemonic-aliases"]], "Modeling Memory Effects": [[678, "modeling-memory-effects"]], "Modifications for other Targets": [[705, "modifications-for-other-targets"]], "Modifiers": [[587, "modifiers"], [588, "modifiers"], [589, "modifiers"], [591, "modifiers"]], "Modifiers (generic)": [[622, "modifiers-generic"]], "Modifiers (operation specific)": [[622, "modifiers-operation-specific"]], "Module & File Options": [[645, "module-file-options"]], "Module Flags Metadata": [[715, "module-flags-metadata"]], "Module Info Substream": [[736, "module-info-substream"]], "Module Options": [[645, "module-options"]], "Module Path Summary Entry": [[715, "module-path-summary-entry"]], "Module Structure": [[715, "module-structure"]], "Module Symbols": [[734, "module-symbols"]], "Module-Level Inline Assembly": [[715, "module-level-inline-assembly"]], "Modules": [[607, "modules"]], "Modules, Functions and Macros": [[607, "modules-functions-and-macros"]], "Monorepo": [[751, "monorepo"]], "Monorepo Drawbacks": [[751, "monorepo-drawbacks"]], "Monorepo Variant": [[751, "monorepo-variant"], [751, "workflow-monocheckout-multicommit"], [751, "workflow-mono-branching"], [751, "workflow-mono-bisecting"]], "Monotonic": [[595, "monotonic"]], "More Platforms": [[789, "more-platforms"]], "More Resources": [[686, "more-resources"]], "More examples": [[717, "more-examples"]], "More information": [[725, "more-information"]], "Motivation": [[677, "motivation"], [754, "motivation"], [768, "motivation"]], "Moved": [[773, "moved"], [778, "moved"]], "Moving LLVM Projects to GitHub": [[751, null]], "Moving Local Branches to the Monorepo": [[751, "moving-local-branches-to-the-monorepo"]], "Multi-distribution configurations": [[604, "multi-distribution-configurations"]], "Multi-phase communication between libLTO and linker": [[718, "multi-phase-communication-between-liblto-and-linker"]], "Multi-stage PGO": [[593, "multi-stage-pgo"]], "Multiple Suspend Points": [[665, "multiple-suspend-points"]], "Multithreaded LLVM": [[788, "multithreaded-llvm"]], "Must Code Be Reviewed Prior to Being Committed?": [[610, "must-code-be-reviewed-prior-to-being-committed"]], "Must, May, and No Alias Responses": [[594, "must-may-and-no-alias-responses"]], "Mutable Variables in Kaleidoscope": [[814, "mutable-variables-in-kaleidoscope"]], "Mutation testing for IR-level transformations": [[710, "mutation-testing-for-ir-level-transformations"]], "Mutation testing for MIR-level transformations": [[710, "mutation-testing-for-mir-level-transformations"]], "Mutators and Input Generators": [[679, "mutators-and-input-generators"]], "My First Language Frontend with LLVM Tutorial": [[818, null]], "MyFirstTypoFix": [[728, null]], "N": [[716, "n"]], "NAS Parallel Benchmarks": [[752, "nas-parallel-benchmarks"]], "NVPTX": [[663, "nvptx"]], "NVPTX Intrinsics": [[729, "nvptx-intrinsics"]], "NWChem": [[752, "nwchem"]], "Name Accelerator Tables": [[765, "name-accelerator-tables"]], "Name Hash Tables": [[765, "name-hash-tables"]], "Name Types, Functions, Variables, and Enumerators Properly": [[611, "name-types-functions-variables-and-enumerators-properly"]], "Named Alternatives": [[661, "named-alternatives"]], "Named Metadata": [[715, "named-metadata"]], "Named Stream Map": [[741, "named-stream-map"]], "Namespace Indentation": [[611, "namespace-indentation"]], "Narrative structure": [[727, "narrative-structure"]], "Narrow focus: test-case reduction": [[603, "narrow-focus-test-case-reduction"]], "Native Object File Wrapper Format": [[598, "native-object-file-wrapper-format"]], "Near Future Work": [[731, "near-future-work"]], "Nested Calls and Copy Elision": [[713, "nested-calls-and-copy-elision"]], "New Assignment Operator": [[814, "new-assignment-operator"]], "New DWARF Attributes": [[765, "new-dwarf-attributes"]], "New DWARF Constants": [[765, "new-dwarf-constants"]], "New DWARF Tags": [[765, "new-dwarf-tags"]], "New GitHub repositories": [[687, "new-github-repositories"]], "New LLVM Project License Framework": [[670, "new-llvm-project-license-framework"]], "New exception handling instructions": [[673, "new-exception-handling-instructions"]], "NewBuffer Records": [[791, "newbuffer-records"]], "NewCpuId Records": [[791, "newcpuid-records"]], "Next Steps": [[790, "next-steps"]], "Next steps": [[685, "next-steps"]], "No CFI": [[715, "no-cfi"]], "No Duplicate Implementations": [[771, "no-duplicate-implementations"]], "No Exposed Data": [[771, "no-exposed-data"]], "No Exposed Functions": [[771, "no-exposed-functions"]], "No Normalization": [[792, "no-normalization"]], "No Unused Functionality": [[771, "no-unused-functionality"]], "No Virtual Methods": [[771, "no-virtual-methods"]], "No global aliases, replaceDirectCallers": [[727, "no-global-aliases-replacedirectcallers"]], "No target passed to clang": [[705, "no-target-passed-to-clang"]], "No throw Specifications": [[771, "no-throw-specifications"]], "Nomination process": [[762, "nomination-process"]], "Non-Experts Should Review Code": [[610, "non-experts-should-review-code"]], "Non-Goals": [[726, "non-goals"]], "Non-Integral Pointer Type": [[715, "non-integral-pointer-type"]], "Non-Kernel Functions": [[591, "non-kernel-functions"]], "Non-comprehensive list of changes in this release": [[757, "non-comprehensive-list-of-changes-in-this-release"]], "Normalization": [[792, "normalization"]], "NotAtomic": [[595, "notatomic"]], "Notation": [[0, "notation"], [1, "notation"], [2, "notation"], [3, "notation"], [4, "notation"], [5, "notation"], [6, "notation"], [7, "notation"], [8, "notation"], [9, "notation"], [587, "notation"], [587, "id1"], [587, "amdgpu-syn-instruction-operand-notation"], [587, "amdgpu-syn-instruction-modifier-notation"]], "Note Records": [[591, "note-records"]], "Notes On Building LLVM/Clang on ARM": [[702, "notes-on-building-llvm-clang-on-arm"]], "Notes:": [[703, "notes"]], "Numbers": [[590, "numbers"]], "O": [[716, "o"]], "O(log(N))": [[727, "o-log-n"]], "OPTIONS": [[612, "options"], [613, "options"], [615, "options"], [618, "options"], [622, "options"], [623, "options"], [624, "options"], [625, "options"], [626, "options"], [626, "id5"], [626, "id8"], [626, "id11"], [627, "options"], [628, "options"], [630, "options"], [631, "options"], [632, "options"], [633, "options"], [634, "options"], [636, "options"], [637, "options"], [639, "options"], [640, "options"], [641, "options"], [643, "options"], [644, "options"], [646, "options"], [646, "id5"], [646, "id8"], [647, "options"], [649, "options"], [651, "options"], [652, "options"], [653, "options"], [655, "options"], [657, "options"], [659, "options"], [660, "options"]], "ORC Design and Implementation": [[731, null]], "OUTPUT OPTIONS": [[617, "output-options"]], "OVERLAP": [[646, "overlap"]], "ObjC ARC Attached Call Operand Bundles": [[715, "objc-arc-attached-call-operand-bundles"]], "Object Lifetime": [[715, "object-lifetime"]], "Object Loading": [[720, "object-loading"]], "Object lifetime in optimized code": [[765, "object-lifetime-in-optimized-code"]], "Object lifetimes and scoping": [[765, "object-lifetimes-and-scoping"]], "ObjectLinkingLayer Plugins": [[714, "objectlinkinglayer-plugins"]], "Objective": [[605, "objective"]], "Objective-C ARC Runtime Intrinsics": [[715, "objective-c-arc-runtime-intrinsics"]], "Objective-C Extensions": [[765, "objective-c-extensions"]], "Objective-C Garbage Collection Module Flags Metadata": [[715, "objective-c-garbage-collection-module-flags-metadata"]], "Objects on the Stack": [[770, "objects-on-the-stack"]], "Obtaining Commit Access": [[670, "obtaining-commit-access"]], "Obtaining Help": [[662, "obtaining-help"]], "Official Testing": [[707, "official-testing"]], "On Managing Revision Numbers with Git": [[751, "on-managing-revision-numbers-with-git"]], "On-Disk Format": [[738, "on-disk-format"]], "Ongoing Development Directions": [[785, "ongoing-development-directions"]], "Online Sync-Ups": [[682, "online-sync-ups"]], "Opaque Pointers": [[732, null]], "Opaque Pointers Mode": [[732, "opaque-pointers-mode"]], "Opaque Structure Types": [[715, "opaque-structure-types"]], "Opcode": [[587, "opcode"]], "Opcode Mnemonic": [[588, "opcode-mnemonic"]], "OpenBenchmarking.org CPU / Processor Suite": [[752, "openbenchmarking-org-cpu-processor-suite"]], "OpenCL": [[591, "opencl"]], "OpenCL kernel implicit arguments appended for AMDHSA OS": [[591, "opencl-kernel-implicit-arguments-appended-for-amdhsa-os-table"]], "OpenCV": [[752, "opencv"]], "OpenMP 4.x SIMD Benchmarks": [[752, "openmp-4-x-simd-benchmarks"]], "Operand Bundles": [[715, "operand-bundles"]], "Operand Kinds": [[587, "operand-kinds"]], "Operand Tags": [[587, "operand-tags"]], "Operands": [[587, "operands"], [588, "operands"], [590, "operands"], [591, "operands"]], "Operands and Operations": [[590, "operands-and-operations"]], "Operands:": [[715, "operands"], [715, "id386"], [715, "id390"], [715, "id394"], [715, "id398"], [768, "operands"], [768, "id3"]], "Operation Expressions": [[591, "operation-expressions"]], "Operational Details": [[747, "operational-details"]], "Operations": [[622, "operations"]], "OptParserDefs": [[774, "optparserdefs"]], "Optimization Hint": [[715, "optimization-hint"]], "Optimization Hints": [[689, "optimization-hints"]], "Optimization outside atomic": [[595, "optimization-outside-atomic"]], "Optimizations": [[662, "optimizations"], [766, "optimizations"], [784, "optimizations"]], "Optimizations, Alternatives, and Tradeoffs": [[766, "optimizations-alternatives-and-tradeoffs"]], "Optimizing Modules using the IRTransformLayer": [[795, "optimizing-modules-using-the-irtransformlayer"]], "Opting Out": [[747, "opting-out"]], "Option Attributes": [[661, "option-attributes"]], "Option Modifiers": [[661, "option-modifiers"]], "Optional Configuration Items": [[683, "optional-configuration-items"]], "Optional Debug Header Stream": [[736, "optional-debug-header-stream"]], "Options": [[645, "options"], [645, "id2"], [645, "id4"], [645, "id7"], [645, "id9"], [645, "id11"], [700, "options"], [717, "options"], [761, "options"], [781, "options"]], "Options and variables": [[606, "options-and-variables"]], "Options for Optimizing LLVM": [[604, "options-for-optimizing-llvm"]], "Options for Reducing Size": [[604, "options-for-reducing-size"]], "Order of Keys": [[792, "order-of-keys"]], "Other": [[600, "other"], [622, "other"]], "Other Design Notes": [[605, "other-design-notes"]], "Other Features": [[781, "other-features"]], "Other Intrinsics": [[729, "other-intrinsics"]], "Other Map-Like Container Options": [[749, "other-map-like-container-options"]], "Other Operations": [[689, "other-operations"], [715, "other-operations"]], "Other Options": [[645, "other-options"]], "Other Sequential Container options": [[749, "other-sequential-container-options"]], "Other Set-Like Container Options": [[749, "other-set-like-container-options"]], "Other Things to Consider": [[678, "other-things-to-consider"]], "Other Types": [[607, "other-types"]], "Other Values": [[715, "other-values"]], "Other documents, collections, notes": [[663, "other-documents-collections-notes"]], "Other relevant lists": [[663, "other-relevant-lists"]], "Other useful AliasAnalysis methods": [[594, "other-useful-aliasanalysis-methods"]], "Other useful references": [[749, "other-useful-references"]], "Output": [[717, "output"], [792, "output"]], "Output constraints": [[715, "output-constraints"]], "Outstanding Questions": [[751, "outstanding-questions"]], "Overloading Based on __host__ and __device__ Attributes": [[662, "overloading-based-on-host-and-device-attributes"]], "Overview": [[598, "overview"], [672, "overview"], [673, "overview"], [683, "overview"], [685, "overview"], [715, "id683"], [715, "id688"], [715, "id693"], [715, "id698"], [715, "id703"], [715, "id708"], [715, "id713"], [715, "id718"], [715, "id723"], [715, "id728"], [715, "id733"], [715, "id738"], [715, "id743"], [715, "id748"], [721, "overview"], [730, "overview"], [750, "overview"], [767, "overview"], [780, "overview"], [781, "overview"], [782, "overview"]], "Overview & Core Concepts": [[770, "overview-core-concepts"]], "Overview of available features": [[680, "overview-of-available-features"]], "Overview of the Release Process": [[758, "overview-of-the-release-process"]], "Overview:": [[665, "overview"], [665, "id3"], [665, "id6"], [665, "id9"], [665, "id12"], [665, "id15"], [665, "id18"], [665, "id21"], [665, "id23"], [665, "id27"], [665, "id30"], [665, "id33"], [665, "id36"], [665, "id39"], [665, "id42"], [665, "id45"], [665, "id48"], [665, "id50"], [665, "id53"], [665, "id57"], [665, "id60"], [665, "id62"], [715, "overview"], [715, "id31"], [715, "id36"], [715, "id41"], [715, "id47"], [715, "id52"], [715, "id57"], [715, "id62"], [715, "id67"], [715, "id72"], [715, "id79"], [715, "id82"], [715, "id87"], [715, "id92"], [715, "id97"], [715, "id102"], [715, "id107"], [715, "id112"], [715, "id117"], [715, "id122"], [715, "id127"], [715, "id132"], [715, "id137"], [715, "id142"], [715, "id147"], [715, "id152"], [715, "id157"], [715, "id162"], [715, "id167"], [715, "id172"], [715, "id177"], [715, "id182"], [715, "id187"], [715, "id192"], [715, "id197"], [715, "id202"], [715, "id207"], [715, "id212"], [715, "id217"], [715, "id222"], [715, "id227"], [715, "id232"], [715, "id237"], [715, "id242"], [715, "id247"], [715, "id252"], [715, "id257"], [715, "id262"], [715, "id267"], [715, "id272"], [715, "id277"], [715, "id282"], [715, "id287"], [715, "id292"], [715, "id297"], [715, "id302"], [715, "id307"], [715, "id312"], [715, "id317"], [715, "id322"], [715, "id327"], [715, "id332"], [715, "id337"], [715, "id343"], [715, "id350"], [715, "id357"], [715, "id361"], [715, "id365"], [715, "id370"], [715, "id374"], [715, "id378"], [715, "id382"], [715, "id385"], [715, "id389"], [715, "id393"], [715, "id397"], [715, "id401"], [715, "id405"], [715, "id408"], [715, "id411"], [715, "id415"], [715, "id418"], [715, "id422"], [715, "id425"], [715, "id428"], [715, "id431"], [715, "id434"], [715, "id437"], [715, "id440"], [715, "id444"], [715, "id448"], [715, "id451"], [715, "id454"], [715, "id458"], [715, "id462"], [715, "id466"], [715, "id470"], [715, "id473"], [715, "id476"], [715, "id479"], [715, "id483"], [715, "id487"], [715, "id490"], [715, "id493"], [715, "id496"], [715, "id499"], [715, "id503"], [715, "id507"], [715, "id511"], [715, "id515"], [715, "id519"], [715, "id523"], [715, "id527"], [715, "id531"], [715, "id535"], [715, "id539"], [715, "id543"], [715, "id547"], [715, "id551"], [715, "id555"], [715, "id559"], [715, "id563"], [715, "id567"], [715, "id571"], [715, "id575"], [715, "id579"], [715, "id583"], [715, "id587"], [715, "id591"], [715, "id595"], [715, "id599"], [715, "id603"], [715, "id607"], [715, "id611"], [715, "id615"], [715, "id619"], [715, "id623"], [715, "id627"], [715, "id630"], [715, "id633"], [715, "id637"], [715, "id641"], [715, "id645"], [715, "id649"], [715, "id653"], [715, "id658"], [715, "id663"], [715, "id668"], [715, "id673"], [715, "id678"], [715, "id753"], [715, "id755"], [715, "id760"], [715, "id764"], [715, "id768"], [715, "id772"], [715, "id776"], [715, "id780"], [715, "id784"], [715, "id787"], [715, "id791"], [715, "id794"], [715, "id798"], [715, "id801"], [715, "id804"], [715, "id807"], [715, "id810"], [715, "id813"], [715, "id816"], [715, "id819"], [715, "id822"], [715, "id825"], [715, "id828"], [715, "id831"], [715, "id834"], [715, "id838"], [715, "id841"], [715, "id844"], [715, "id847"], [715, "id850"], [715, "id855"], [715, "id860"], [715, "id865"], [715, "id870"], [715, "id874"], [715, "id878"], [715, "id883"], [715, "id888"], [715, "id893"], [715, "id898"], [715, "id903"], [715, "id908"], [715, "id913"], [715, "id918"], [715, "id923"], [715, "id928"], [715, "id933"], [715, "id938"], [715, "id943"], [715, "id948"], [715, "id953"], [715, "id958"], [715, "id963"], [715, "id968"], [715, "id973"], [715, "id978"], [715, "id983"], [715, "id988"], [715, "id993"], [715, "id998"], [715, "id1003"], [715, "id1008"], [715, "id1013"], [715, "id1018"], [715, "id1023"], [715, "id1028"], [715, "id1033"], [715, "id1038"], [715, "id1043"], [715, "id1048"], [715, "id1053"], [715, "id1058"], [715, "id1063"], [715, "id1068"], [715, "id1073"], [715, "id1077"], [715, "id1081"], [715, "id1085"], [715, "id1089"], [715, "id1093"], [715, "id1097"], [715, "id1101"], [715, "id1105"], [715, "id1109"], [715, "id1113"], [715, "id1117"], [715, "id1121"], [715, "id1125"], [715, "id1129"], [715, "id1133"], [715, "id1137"], [715, "id1141"], [715, "id1145"], [715, "id1149"], [715, "id1153"], [715, "id1157"], [715, "id1161"], [715, "id1165"], [715, "id1169"], [715, "id1173"], [715, "id1177"], [715, "id1181"], [715, "id1185"], [715, "id1189"], [715, "id1193"], [715, "id1197"], [715, "id1201"], [715, "id1205"], [715, "id1209"], [715, "id1213"], [715, "id1217"], [715, "id1221"], [715, "id1225"], [715, "id1229"], [715, "id1233"], [715, "id1237"], [715, "id1241"], [715, "id1245"], [715, "id1249"], [715, "id1253"], [715, "id1257"], [715, "id1261"], [715, "id1265"], [715, "id1269"], [715, "id1273"], [715, "id1277"], [715, "id1281"], [715, "id1284"], [715, "id1288"], [715, "id1292"], [715, "id1296"], [715, "id1302"], [715, "id1306"], [715, "id1310"], [715, "id1314"], [715, "id1318"], [715, "id1322"], [715, "id1326"], [715, "id1330"], [715, "id1334"], [715, "id1339"], [715, "id1342"], [715, "id1345"], [715, "id1347"], [715, "id1351"], [715, "id1355"], [715, "id1359"], [715, "id1361"], [715, "id1366"], [715, "id1368"], [715, "id1372"], [715, "id1376"], [715, "id1379"], [715, "id1382"], [715, "id1387"], [715, "id1392"], [715, "id1433"], [715, "id1437"], [715, "id1441"], [729, "overview"], [729, "id4"], [729, "id7"], [729, "id9"], [748, "overview"], [748, "id2"], [748, "id6"], [748, "id10"], [748, "id14"], [748, "id18"], [768, "overview"], [768, "id2"]], "P": [[716, "p"]], "PARAMATTR_BLOCK Contents": [[598, "paramattr-block-contents"]], "PARAMATTR_CODE_ENTRY Record": [[598, "paramattr-code-entry-record"]], "PARAMATTR_CODE_ENTRY_OLD Record": [[598, "paramattr-code-entry-old-record"]], "PARAMATTR_GROUP_BLOCK Contents": [[598, "paramattr-group-block-contents"]], "PARAMATTR_GRP_CODE_ENTRY Record": [[598, "paramattr-grp-code-entry-record"]], "PARSEC": [[752, "parsec"]], "PDB Feature Codes": [[741, "pdb-feature-codes"]], "PDB Stream Options": [[645, "pdb-stream-options"]], "PE/COFF SPECIFIC OPTIONS": [[650, "pe-coff-specific-options"]], "PWM-benchmarking": [[752, "pwm-benchmarking"]], "Packet data access (BPF_ABS, BPF_IND)": [[608, "packet-data-access-bpf-abs-bpf-ind"]], "Packing Suffix": [[588, "packing-suffix"]], "Padding Records": [[735, "padding-records"]], "ParRes": [[752, "parres"]], "Parallel Fuzzing": [[717, "parallel-fuzzing"]], "Parameter Attributes": [[715, "parameter-attributes"]], "Params": [[715, "params"]], "Parboil Benchmarks": [[752, "parboil-benchmarks"]], "Parser Basics": [[809, "parser-basics"]], "Parser Extensions for If/Then/Else": [[812, "parser-extensions-for-if-then-else"]], "Parser Extensions for the \u201cfor\u201d Loop": [[812, "parser-extensions-for-the-for-loop"]], "Parsing a list of options": [[661, "parsing-a-list-of-options"]], "Parsing the Rest": [[809, "parsing-the-rest"]], "Partial unrolling during vectorization": [[785, "partial-unrolling-during-vectorization"]], "Pass Ordering": [[678, "pass-ordering"]], "Pass Skipping Implementation": [[733, "pass-skipping-implementation"]], "Pass Statistics": [[788, "pass-statistics"]], "Pass classes and requirements": [[788, "pass-classes-and-requirements"]], "Pass registration": [[788, "pass-registration"]], "Pass-Specific Transformation Metadata": [[782, "pass-specific-transformation-metadata"]], "Passes": [[714, "passes"]], "Passing functions and other callable objects": [[749, "passing-functions-and-other-callable-objects"]], "Passing strings (the StringRef and Twine classes)": [[749, "passing-strings-the-stringref-and-twine-classes"]], "PatLeaf Predicates": [[691, "patleaf-predicates"]], "Patch reversion policy": [[670, "patch-reversion-policy"]], "Patents": [[670, "patents"]], "Per-Shader Table": [[591, "per-shader-table"]], "Performance": [[785, "performance"]], "Performance Overhead": [[766, "performance-overhead"]], "Performance Tips for Frontend Authors": [[678, null]], "Peripheral Tier": [[772, "peripheral-tier"]], "Personality Function": [[715, "personality-function"]], "Phase 1 : Read LLVM Bitcode Files": [[718, "phase-1-read-llvm-bitcode-files"]], "Phase 2 : Symbol Resolution": [[718, "phase-2-symbol-resolution"]], "Phase 3 : Optimize Bitcode Files": [[718, "phase-3-optimize-bitcode-files"]], "Phase 4 : Symbol Resolution after optimization": [[718, "phase-4-symbol-resolution-after-optimization"]], "Phi placement": [[726, "phi-placement"]], "Philosophy behind LLVM debugging information": [[765, "philosophy-behind-llvm-debugging-information"]], "Picking the Right Data Structure for a Task": [[749, "picking-the-right-data-structure-for-a-task"]], "PlaceSafepoints": [[770, "placesafepoints"]], "Placement of Object Code": [[750, "placement-of-object-code"]], "Platform": [[761, "platform"]], "Platform-Specific Tests": [[781, "platform-specific-tests"]], "Pointer Aliasing Rules": [[715, "pointer-aliasing-rules"]], "Pointer Authentication": [[748, null]], "Pointer Authentication Intrinsics": [[715, "pointer-authentication-intrinsics"]], "Pointer Capture": [[715, "pointer-capture"]], "Pointer Induction Variables": [[785, "pointer-induction-variables"]], "Pointer Type": [[715, "pointer-type"]], "Poison Values": [[715, "poison-values"]], "Policies on git repositories": [[687, null]], "PolyBench": [[752, "polybench"]], "PolyMage": [[752, "polymage"]], "Porting GlobalISel to A New Target": [[695, null]], "Positional Arguments": [[661, "positional-options"]], "Possible solutions": [[727, "possible-solutions"]], "Post-commit errors": [[728, "post-commit-errors"]], "PowerPC": [[663, "powerpc"]], "Pragma loop hint directives": [[785, "pragma-loop-hint-directives"]], "Pre-Release Process": [[758, "pre-release-process"]], "Pre-merge testing": [[747, "pre-merge-testing"]], "Preallocated Operand Bundles": [[715, "preallocated-operand-bundles"]], "Precision": [[726, "precision"]], "Precision in practice": [[726, "precision-in-practice"]], "Predicate Operands": [[721, "predicate-operands"]], "Prefer Preincrement": [[611, "prefer-preincrement"]], "Prefer zext over sext when legal": [[678, "prefer-zext-over-sext-when-legal"]], "Prefix Data": [[715, "prefix-data"]], "Preliminaries": [[786, "preliminaries"]], "Prerequisite Reading": [[786, "prerequisite-reading"]], "Prerequisites": [[662, "prerequisites"], [703, "prerequisites"], [705, "prerequisites"]], "Present and Deleted Bit Vectors": [[738, "present-and-deleted-bit-vectors"]], "Present state": [[727, "present-state"]], "Preserving Debug Information Intrinsics": [[715, "preserving-debug-information-intrinsics"]], "Preserving the flags while hardening loaded values on Haswell, Zen, and newer processors": [[766, "preserving-the-flags-while-hardening-loaded-values-on-haswell-zen-and-newer-processors"]], "Primitives": [[598, "primitives"]], "Print Detailed Records": [[774, "print-detailed-records"]], "Print Records": [[774, "print-records"]], "Private Segment Buffer": [[591, "private-segment-buffer"]], "Privileges and Responsibilities of LLVM Security Group Members": [[762, "privileges-and-responsibilities-of-llvm-security-group-members"]], "Problem": [[597, "problem"]], "Problem Statement": [[766, "problem-statement"]], "Process": [[762, "process"]], "Processors": [[591, "processors"]], "Profile Guided Optimization": [[779, "profile-guided-optimization"]], "Program Dependence Graph": [[669, "program-dependence-graph"]], "Program start": [[608, "program-start"]], "Programmatic Errors": [[749, "programmatic-errors"]], "Progress and Future Work": [[698, "progress-and-future-work"]], "Prolog/Epilog": [[608, "prolog-epilog"]], "Prolog/Epilog Code Insertion": [[608, "prolog-epilog-code-insertion"]], "Prologue Data": [[715, "prologue-data"]], "Promote": [[786, "promote"]], "Propagating and consuming errors based on types": [[749, "propagating-and-consuming-errors-based-on-types"]], "Properties of the LLVM IR": [[817, "properties-of-the-llvm-ir"]], "Proposal": [[765, "proposal"]], "Proposed New Design": [[603, "proposed-new-design"]], "Protect large, load-heavy blocks with a single lfence": [[766, "protect-large-load-heavy-blocks-with-a-single-lfence"]], "Provide a Virtual Method Anchor for Classes in Headers": [[611, "provide-a-virtual-method-anchor-for-classes-in-headers"]], "Provisional Plan": [[753, "provisional-plan"]], "Pseudo-Counter:": [[666, "pseudo-counter"]], "PseudoLowering": [[774, "pseudolowering"]], "Public Symbols": [[734, "public-symbols"]], "Publication": [[662, "publication"]], "Putting It All Together": [[815, "putting-it-all-together"]], "Q. Does libFuzzer Support Windows?": [[717, "q-does-libfuzzer-support-windows"]], "Q. LibFuzzer crashes on my complicated fuzz target (but works fine for me on smaller targets).": [[717, "q-libfuzzer-crashes-on-my-complicated-fuzz-target-but-works-fine-for-me-on-smaller-targets"]], "Q. So, what exactly this Fuzzer is good for?": [[717, "q-so-what-exactly-this-fuzzer-is-good-for"]], "Q. When libFuzzer is not a good solution for a problem?": [[717, "q-when-libfuzzer-is-not-a-good-solution-for-a-problem"]], "Q. Why doesn\u2019t libFuzzer use any of the LLVM support?": [[717, "q-why-doesn-t-libfuzzer-use-any-of-the-llvm-support"]], "Quality": [[670, "quality"]], "Questions about code generated by the demo page": [[676, "questions-about-code-generated-by-the-demo-page"]], "Questions?": [[609, "questions"]], "Quick Start": [[680, "quick-start"]], "Quick Start Guide": [[661, "quick-start-guide"]], "Quick Start \u2014 Writing hello world": [[787, "quick-start-writing-hello-world"], [788, "quick-start-writing-hello-world"]], "Quick start": [[606, "quick-start"], [781, "quick-start"]], "Quickstart": [[779, "quickstart"]], "Quickstart for using LTO with autotooled projects": [[699, "quickstart-for-using-lto-with-autotooled-projects"]], "R": [[716, "r"]], "RAJA Performance Suite": [[752, "raja-performance-suite"]], "REMAPPING FILE": [[628, "remapping-file"]], "REMARK_BLOCK": [[759, "remark-block"]], "REPORT COMMAND": [[626, "report-command"]], "RIP-relative addressing is even easier to break": [[766, "rip-relative-addressing-is-even-easier-to-break"]], "RISC-V": [[663, "risc-v"]], "RTTI for Open Class Hierarchies": [[708, "rtti-for-open-class-hierarchies"]], "Random-access": [[727, "random-access"]], "Randomness": [[761, "randomness"]], "Rarely-used CMake variables": [[606, "rarely-used-cmake-variables"]], "Rationale": [[681, "rationale"], [715, null]], "Read barrier: llvm.gcread": [[680, "read-barrier-llvm-gcread"]], "Read-only sub-project mirrors": [[751, "read-only-sub-project-mirrors"]], "Read/write SVN bridge": [[751, "read-write-svn-bridge"]], "Reading PTX Special Registers": [[729, "reading-ptx-special-registers"]], "Reading and writing references in the heap": [[680, "reading-and-writing-references-in-the-heap"]], "Record Categories": [[734, "record-categories"], [735, "record-categories"]], "Recording On Stack Regions": [[770, "recording-on-stack-regions"]], "Recoverable Errors": [[749, "recoverable-errors"]], "Reducing the number of acronyms": [[753, "reducing-the-number-of-acronyms"]], "Reductions": [[785, "reductions"]], "Reference": [[756, null]], "Reference Guide": [[661, "reference-guide"]], "References": [[669, "references"], [680, "references"], [751, "references"], [753, "references"], [754, "references"], [755, "references"]], "Reflection Parameters": [[729, "reflection-parameters"]], "Refs": [[715, "refs"]], "RegBankSelect": [[696, null]], "RegBankSelect Modes": [[696, "regbankselect-modes"]], "Register Allocation": [[608, "register-allocator"]], "Register Bank": [[688, "register-bank"]], "Register Flags": [[721, "register-flags"]], "Register Identifier": [[591, "register-identifier"]], "Register Layout for Packed Work-Item ID Method": [[591, "amdgpu-amdhsa-register-layout-for-packed-work-item-id-method-table"]], "Register Operands": [[721, "register-operands"]], "Register Set and Register Classes": [[786, "register-set-and-register-classes"]], "RegisterInfo": [[774, "registerinfo"]], "Registering dynamically loaded passes": [[788, "registering-dynamically-loaded-passes"]], "Registers": [[721, "mir-registers"]], "Regression test structure": [[781, "regression-test-structure"]], "Regression tests": [[781, "regression-tests"]], "Reinstatement": [[772, "reinstatement"]], "Related LLVM components": [[755, "related-llvm-components"]], "Release": [[595, "release"]], "Release Administrative Tasks": [[707, "release-administrative-tasks"]], "Release Final Tasks": [[707, "release-final-tasks"]], "Release Patch Rules": [[707, "release-patch-rules"]], "Release Process": [[707, "release-process"], [758, "release-process"]], "Release Qualification Criteria": [[707, "release-qualification-criteria"]], "Release Timeline": [[707, "release-timeline"]], "Relevant CMake Options": [[604, "relevant-cmake-options"]], "Relicensing": [[670, "relicensing"]], "Relocatable Expressions": [[590, "relocatable-expressions"]], "Relocation Records": [[591, "relocation-records"]], "Relocations": [[675, "relocations"], [675, "id1"], [675, "id3"]], "Relocations Along Exceptional Edges": [[770, "relocations-along-exceptional-edges"]], "Remark diagnostics": [[759, "remark-diagnostics"]], "Remark streamers": [[759, "remark-streamers"]], "Remarks": [[759, null]], "Remote execution via llvm-jitlink-executor": [[714, "remote-execution-via-llvm-jitlink-executor"]], "Replacing an Instruction with another Value": [[749, "replacing-an-instruction-with-another-value"]], "Replacing individual instructions": [[749, "replacing-individual-instructions"]], "Replacing multiple uses of Users and Values": [[749, "replacing-multiple-uses-of-users-and-values"]], "Repo access on GitHub": [[687, "repo-access-on-github"]], "Reporting Guide": [[760, null]], "Reporting Regressions": [[707, "reporting-regressions"]], "Reporting a Security Issue": [[664, "reporting-a-security-issue"]], "Reporting bugs": [[601, "reporting-bugs"]], "Representation": [[715, "representation"]], "Representation of Pointers": [[594, "representation-of-pointers"]], "Representing Type Information using Type Metadata": [[783, "representing-type-information-using-type-metadata"]], "Representing X86 addressing modes in MachineInstrs": [[608, "representing-x86-addressing-modes-in-machineinstrs"]], "Requesting a review via the command line": [[747, "requesting-a-review-via-the-command-line"]], "Requesting a review via the web interface": [[747, "requesting-a-review-via-the-web-interface"]], "Required Variables": [[750, "required-variables"]], "Required components in the code generator": [[608, "required-components-in-the-code-generator"]], "Required initialization calls": [[594, "required-initialization-calls"]], "Required methods to override": [[594, "required-methods-to-override"]], "Required passes": [[787, "required-passes"]], "Requirements": [[683, "requirements"], [685, "requirements"], [747, "requirements"], [772, "requirements"], [772, "id2"], [781, "requirements"]], "Resampling": [[752, "resampling"]], "Resolving/Closing bugs": [[601, "resolving-closing-bugs"]], "Resources": [[697, null]], "Response files": [[661, "response-files"]], "Restricted Operation Semantics": [[678, "restricted-operation-semantics"]], "Restrictions": [[673, "restrictions"]], "Resuming merge": [[717, "resuming-merge"]], "Returned-Continuation Lowering": [[665, "returned-continuation-lowering"]], "Returning Errors from error handlers": [[749, "returning-errors-from-error-handlers"]], "Reverse Iterators": [[785, "reverse-iterators"]], "Reverting a change": [[683, "reverting-a-change"]], "Reverts": [[728, "reverts"]], "Review expectations": [[728, "review-expectations"]], "Review process": [[728, "review-process"]], "Reviewing code with Phabricator": [[747, "reviewing-code-with-phabricator"]], "Rewrite API of internal functions to directly propagate predicate state": [[766, "rewrite-api-of-internal-functions-to-directly-propagate-predicate-state"]], "RewriteStatepointsForGC": [[770, "rewritestatepointsforgc"]], "RewriteStatepointsForGC intrinsic lowering": [[770, "rewritestatepointsforgc-intrinsic-lowering"]], "Roadmap": [[714, "roadmap"], [731, "roadmap"], [754, "roadmap"]], "Rodinia": [[752, "rodinia"]], "Roles & Expectations": [[701, "roles-expectations"]], "Root Cause Analysis": [[603, "root-cause-analysis"]], "Rotated Loops": [[719, "rotated-loops"]], "Rule Actions": [[693, "rule-actions"]], "Rule Predicates": [[693, "rule-predicates"]], "Rule Processing and Declaring Rules": [[693, "rule-processing-and-declaring-rules"]], "Rules": [[681, "rules"]], "Rules for updating debug locations": [[710, "rules-for-updating-debug-locations"]], "Rules for updating debug values": [[710, "rules-for-updating-debug-values"]], "Rules of Thumb": [[708, "rules-of-thumb"]], "Running": [[717, "running"], [779, "running"]], "Running CMake and Building": [[706, "running-cmake-and-building"]], "Running Different Tests": [[780, "running-different-tests"]], "Running TableGen": [[777, "running-tablegen"]], "Running a pass with opt": [[787, "running-a-pass-with-opt"], [788, "running-a-pass-with-opt"]], "Running the Kernel": [[729, "running-the-kernel"]], "Running the test-suite via LNT": [[779, "running-the-test-suite-via-lnt"]], "Running the test-suite via Makefiles (deprecated)": [[779, "running-the-test-suite-via-makefiles-deprecated"]], "Runtime Checks of Pointers": [[785, "runtime-checks-of-pointers"]], "Runtime Preemption Specifiers": [[715, "runtime-preemption-specifiers"]], "RuntimeDyld": [[714, "runtimedyld"]], "S": [[716, "s"]], "SDWA": [[0, "sdwa"]], "SDWA Modifiers": [[589, "sdwa-modifiers"]], "SDWA Operand Modifiers": [[589, "sdwa-operand-modifiers"]], "SEE ALSO": [[613, "see-also"], [615, "see-also"], [617, "see-also"], [618, "see-also"], [620, "see-also"], [621, "see-also"], [623, "see-also"], [624, "see-also"], [627, "see-also"], [630, "see-also"], [631, "see-also"], [633, "see-also"], [634, "see-also"], [636, "see-also"], [639, "see-also"], [641, "see-also"], [642, "see-also"], [643, "see-also"], [644, "see-also"], [648, "see-also"], [649, "see-also"], [650, "see-also"], [654, "see-also"], [655, "see-also"]], "SEH filter expressions": [[673, "seh-filter-expressions"]], "SELECTION OPTIONS": [[617, "selection-options"]], "SGPR Register Set Up Order": [[591, "amdgpu-amdhsa-sgpr-register-set-up-order-table"]], "SHOW": [[646, "show"]], "SHOW COMMAND": [[626, "show-command"]], "SHT_LLVM_ADDRSIG Section (address-significance table)": [[675, "sht-llvm-addrsig-section-address-significance-table"]], "SHT_LLVM_BB_ADDR_MAP Section (basic block address map)": [[675, "sht-llvm-bb-addr-map-section-basic-block-address-map"]], "SHT_LLVM_CALL_GRAPH_PROFILE Section (Call Graph Profile)": [[675, "sht-llvm-call-graph-profile-section-call-graph-profile"]], "SHT_LLVM_DEPENDENT_LIBRARIES Section (Dependent Libraries)": [[675, "sht-llvm-dependent-libraries-section-dependent-libraries"]], "SHT_LLVM_SYMPART Section (symbol partition specification)": [[675, "sht-llvm-sympart-section-symbol-partition-specification"]], "SJLJ Intrinsics": [[673, "sjlj-intrinsics"]], "SLAMBench": [[752, "slambench"]], "SMEM": [[0, "smem"], [3, "smem"], [4, "smem"], [9, "smem"]], "SMRD": [[2, "smrd"]], "SMRD/SMEM": [[591, "smrd-smem"]], "SMRD/SMEM Modifiers": [[589, "smrd-smem-modifiers"]], "SOP1": [[0, "sop1"], [2, "sop1"], [3, "sop1"], [4, "sop1"], [9, "sop1"], [591, "sop1"]], "SOP2": [[0, "sop2"], [2, "sop2"], [3, "sop2"], [4, "sop2"], [9, "sop2"], [591, "sop2"]], "SOPC": [[0, "sopc"], [2, "sopc"], [3, "sopc"], [4, "sopc"], [9, "sopc"], [591, "sopc"]], "SOPK": [[0, "sopk"], [2, "sopk"], [3, "sopk"], [4, "sopk"], [9, "sopk"]], "SOPP": [[0, "sopp"], [2, "sopp"], [3, "sopp"], [4, "sopp"], [9, "sopp"], [591, "sopp"]], "SPARC": [[663, "sparc"]], "SPEC CPU 2017": [[752, "spec-cpu-2017"]], "SPEC OMP2012": [[752, "spec-omp2012"]], "SSA-based Machine Code Optimizations": [[608, "ssa-based-machine-code-optimizations"]], "STRTAB_BLOCK Contents": [[598, "strtab-block-contents"]], "SUBSTITUTIONS": [[617, "substitutions"]], "SUMMARY OUTPUT DEFINITIONS": [[624, "summary-output-definitions"]], "SUPPORTED FORMATS": [[642, "supported-formats"]], "SYNOPSIS": [[612, "synopsis"], [613, "synopsis"], [614, "synopsis"], [615, "synopsis"], [617, "synopsis"], [618, "synopsis"], [619, "synopsis"], [620, "synopsis"], [621, "synopsis"], [622, "synopsis"], [623, "synopsis"], [624, "synopsis"], [625, "synopsis"], [626, "synopsis"], [626, "id1"], [626, "id3"], [626, "id6"], [626, "id9"], [627, "synopsis"], [628, "synopsis"], [629, "synopsis"], [630, "synopsis"], [631, "synopsis"], [632, "synopsis"], [633, "synopsis"], [634, "synopsis"], [635, "synopsis"], [636, "synopsis"], [637, "synopsis"], [638, "synopsis"], [639, "synopsis"], [640, "synopsis"], [641, "synopsis"], [642, "synopsis"], [643, "synopsis"], [644, "synopsis"], [646, "synopsis"], [646, "id1"], [646, "id3"], [646, "id6"], [647, "synopsis"], [648, "synopsis"], [649, "synopsis"], [650, "synopsis"], [651, "synopsis"], [652, "synopsis"], [653, "synopsis"], [654, "synopsis"], [655, "synopsis"], [656, "synopsis"], [657, "synopsis"], [658, "synopsis"], [659, "synopsis"], [660, "synopsis"]], "S_BLOCK32 (0x1103)": [[734, "s-block32-0x1103"]], "S_BPREL32 (0x110b)": [[734, "s-bprel32-0x110b"]], "S_BUILDINFO (0x114c)": [[734, "s-buildinfo-0x114c"]], "S_CALLEES (0x115a)": [[734, "s-callees-0x115a"]], "S_CALLERS (0x115b)": [[734, "s-callers-0x115b"]], "S_CALLSITEINFO (0x1139)": [[734, "s-callsiteinfo-0x1139"]], "S_COFFGROUP (0x1137)": [[734, "s-coffgroup-0x1137"]], "S_COMPILE2 (0x1116)": [[734, "s-compile2-0x1116"]], "S_COMPILE3 (0x113c)": [[734, "s-compile3-0x113c"]], "S_CONSTANT (0x1107)": [[734, "s-constant-0x1107"]], "S_DEFRANGE (0x113f)": [[734, "s-defrange-0x113f"]], "S_DEFRANGE_FRAMEPOINTER_REL (0x1142)": [[734, "s-defrange-framepointer-rel-0x1142"]], "S_DEFRANGE_FRAMEPOINTER_REL_FULL_SCOPE (0x1144)": [[734, "s-defrange-framepointer-rel-full-scope-0x1144"]], "S_DEFRANGE_REGISTER (0x1141)": [[734, "s-defrange-register-0x1141"]], "S_DEFRANGE_REGISTER_REL (0x1145)": [[734, "s-defrange-register-rel-0x1145"]], "S_DEFRANGE_SUBFIELD (0x1140)": [[734, "s-defrange-subfield-0x1140"]], "S_DEFRANGE_SUBFIELD_REGISTER (0x1143)": [[734, "s-defrange-subfield-register-0x1143"]], "S_END (0x0006)": [[734, "s-end-0x0006"]], "S_ENVBLOCK (0x113d)": [[734, "s-envblock-0x113d"]], "S_EXPORT (0x1138)": [[734, "s-export-0x1138"]], "S_FASTLINK (0x1167)": [[734, "s-fastlink-0x1167"]], "S_FILESTATIC (0x1153)": [[734, "s-filestatic-0x1153"]], "S_FRAMECOOKIE (0x113a)": [[734, "s-framecookie-0x113a"]], "S_FRAMEPROC (0x1012)": [[734, "s-frameproc-0x1012"]], "S_GDATA32": [[734, "s-gdata32"]], "S_GMANDATA (0x111d)": [[734, "s-gmandata-0x111d"]], "S_GPROC32 (0x1110)": [[734, "s-gproc32-0x1110"]], "S_GPROC32_ID (0x1147)": [[734, "s-gproc32-id-0x1147"]], "S_GTHREAD32 (0x1113)": [[734, "s-gthread32-0x1113"]], "S_HEAPALLOCSITE (0x115e)": [[734, "s-heapallocsite-0x115e"]], "S_INLINEES (0x1168)": [[734, "s-inlinees-0x1168"]], "S_INLINESITE (0x114d)": [[734, "s-inlinesite-0x114d"]], "S_INLINESITE_END (0x114e)": [[734, "s-inlinesite-end-0x114e"]], "S_LABEL32 (0x1105)": [[734, "s-label32-0x1105"]], "S_LDATA32 (0x110c)": [[734, "s-ldata32-0x110c"]], "S_LMANDATA (0x111c)": [[734, "s-lmandata-0x111c"]], "S_LOCAL (0x113e)": [[734, "s-local-0x113e"]], "S_LPROC32 (0x110f)": [[734, "s-lproc32-0x110f"]], "S_LPROC32_DPC (0x1155)": [[734, "s-lproc32-dpc-0x1155"]], "S_LPROC32_DPC_ID (0x1156)": [[734, "s-lproc32-dpc-id-0x1156"]], "S_LPROC32_ID (0x1146)": [[734, "s-lproc32-id-0x1146"]], "S_LPROCREF (0x1127)": [[734, "s-lprocref-0x1127"]], "S_LTHREAD32 (0x1112)": [[734, "s-lthread32-0x1112"]], "S_MANCONSTANT (0x112d)": [[734, "s-manconstant-0x112d"]], "S_OBJNAME (0x1101)": [[734, "s-objname-0x1101"]], "S_PROCREF (0x1125)": [[734, "s-procref-0x1125"]], "S_PROC_ID_END (0x114f)": [[734, "s-proc-id-end-0x114f"]], "S_PUB32 (0x110e)": [[734, "s-pub32-0x110e"]], "S_REGISTER (0x1106)": [[734, "s-register-0x1106"]], "S_REGREL32 (0x1111)": [[734, "s-regrel32-0x1111"]], "S_SECTION (0x1136)": [[734, "s-section-0x1136"]], "S_THUNK32 (0x1102)": [[734, "s-thunk32-0x1102"]], "S_TRAMPOLINE (0x112c)": [[734, "s-trampoline-0x112c"]], "S_UDT (0x1108)": [[734, "s-udt-0x1108"]], "S_UNAMESPACE (0x1124)": [[734, "s-unamespace-0x1124"]], "Safepoint Semantics & Verification": [[770, "safepoint-semantics-verification"]], "Safety Guarantees": [[817, "safety-guarantees"]], "Sample Example": [[712, "sample-example"]], "Saturating floating-point to integer conversions": [[715, "saturating-floating-point-to-integer-conversions"]], "Saturation Arithmetic Intrinsics": [[715, "saturation-arithmetic-intrinsics"]], "Scalar Operations": [[689, "scalar-operations"]], "ScalarEnumerationTraits": [[792, "scalarenumerationtraits"]], "Scalars": [[792, "scalars"]], "Scatter / Gather": [[785, "scatter-gather"]], "Scope": [[607, "scope"]], "Scripting Overview": [[607, "scripting-overview"]], "Scripts": [[758, "scripts"]], "Scrubbing the Local Monorepo": [[751, "scrubbing-the-local-monorepo"]], "Scudo Hardened Allocator": [[761, null]], "Search Algorithms": [[752, "search-algorithms"]], "Search Indexes": [[774, "search-indexes"]], "SearchableTables": [[774, "searchabletables"]], "SearchableTables Reference": [[774, "searchabletables-reference"]], "Section Contribution Substream": [[736, "section-contribution-substream"]], "Section Map Substream": [[736, "section-map-substream"]], "Sections": [[591, "sections"]], "Security Group Members": [[762, "security-group-members"]], "See Also": [[611, "see-also"]], "Segmented Stacks": [[608, "segmented-stacks"]], "Segmented Stacks in LLVM": [[764, null]], "Selecting an alternative from a set of possibilities": [[661, "selecting-an-alternative-from-a-set-of-possibilities"]], "Selecting \u201cbenchmarks\u201d": [[704, "selecting-benchmarks"]], "SelectionDAG Instruction Selection Process": [[608, "selectiondag-instruction-selection-process"]], "SelectionDAG Legalize Phase": [[608, "selectiondag-legalize-phase"]], "SelectionDAG LegalizeTypes Phase": [[608, "selectiondag-legalizetypes-phase"]], "SelectionDAG Optimization Phase: the DAG Combiner": [[608, "selectiondag-optimization-phase-the-dag-combiner"]], "SelectionDAG Rule Imports": [[691, "selectiondag-rule-imports"]], "SelectionDAG Scheduling and Formation Phase": [[608, "selectiondag-scheduling-and-formation-phase"]], "SelectionDAG Select Phase": [[608, "selectiondag-select-phase"]], "Self-contained Headers": [[611, "self-contained-headers"]], "Semantics": [[715, "semantics"]], "Semantics:": [[665, "semantics"], [665, "id5"], [665, "id8"], [665, "id11"], [665, "id14"], [665, "id17"], [665, "id20"], [665, "id25"], [665, "id29"], [665, "id32"], [665, "id35"], [665, "id38"], [665, "id41"], [665, "id44"], [665, "id47"], [665, "id52"], [665, "id55"], [665, "id59"], [665, "id64"], [715, "id29"], [715, "id33"], [715, "id38"], [715, "id43"], [715, "id49"], [715, "id54"], [715, "id59"], [715, "id64"], [715, "id69"], [715, "id76"], [715, "id80"], [715, "id84"], [715, "id89"], [715, "id94"], [715, "id99"], [715, "id104"], [715, "id109"], [715, "id114"], [715, "id119"], [715, "id124"], [715, "id129"], [715, "id134"], [715, "id139"], [715, "id144"], [715, "id149"], [715, "id154"], [715, "id159"], [715, "id164"], [715, "id169"], [715, "id174"], [715, "id179"], [715, "id184"], [715, "id189"], [715, "id194"], [715, "id199"], [715, "id204"], [715, "id209"], [715, "id214"], [715, "id219"], [715, "id224"], [715, "id229"], [715, "id234"], [715, "id239"], [715, "id244"], [715, "id249"], [715, "id254"], [715, "id259"], [715, "id264"], [715, "id269"], [715, "id274"], [715, "id279"], [715, "id284"], [715, "id289"], [715, "id294"], [715, "id299"], [715, "id304"], [715, "id309"], [715, "id314"], [715, "id319"], [715, "id324"], [715, "id329"], [715, "id334"], [715, "id340"], [715, "id346"], [715, "id353"], [715, "id359"], [715, "id363"], [715, "id367"], [715, "id372"], [715, "id376"], [715, "id380"], [715, "id383"], [715, "id387"], [715, "id391"], [715, "id395"], [715, "id399"], [715, "id403"], [715, "id406"], [715, "id409"], [715, "id413"], [715, "id416"], [715, "id420"], [715, "id423"], [715, "id426"], [715, "id429"], [715, "id432"], [715, "id435"], [715, "id438"], [715, "id442"], [715, "id446"], [715, "id449"], [715, "id452"], [715, "id456"], [715, "id460"], [715, "id464"], [715, "id468"], [715, "id471"], [715, "id474"], [715, "id477"], [715, "id480"], [715, "id485"], [715, "id501"], [715, "id505"], [715, "id509"], [715, "id513"], [715, "id517"], [715, "id521"], [715, "id525"], [715, "id529"], [715, "id533"], [715, "id537"], [715, "id541"], [715, "id545"], [715, "id549"], [715, "id553"], [715, "id557"], [715, "id561"], [715, "id565"], [715, "id569"], [715, "id573"], [715, "id577"], [715, "id581"], [715, "id585"], [715, "id589"], [715, "id593"], [715, "id597"], [715, "id601"], [715, "id605"], [715, "id609"], [715, "id613"], [715, "id617"], [715, "id621"], [715, "id625"], [715, "id628"], [715, "id631"], [715, "id635"], [715, "id639"], [715, "id643"], [715, "id655"], [715, "id660"], [715, "id665"], [715, "id670"], [715, "id675"], [715, "id680"], [715, "id685"], [715, "id690"], [715, "id695"], [715, "id700"], [715, "id705"], [715, "id710"], [715, "id715"], [715, "id720"], [715, "id725"], [715, "id730"], [715, "id735"], [715, "id740"], [715, "id745"], [715, "id750"], [715, "id757"], [715, "id762"], [715, "id766"], [715, "id770"], [715, "id774"], [715, "id778"], [715, "id782"], [715, "id852"], [715, "id857"], [715, "id862"], [715, "id867"], [715, "id872"], [715, "id876"], [715, "id880"], [715, "id885"], [715, "id890"], [715, "id895"], [715, "id900"], [715, "id905"], [715, "id910"], [715, "id915"], [715, "id920"], [715, "id925"], [715, "id930"], [715, "id935"], [715, "id940"], [715, "id945"], [715, "id950"], [715, "id955"], [715, "id960"], [715, "id965"], [715, "id970"], [715, "id975"], [715, "id980"], [715, "id985"], [715, "id990"], [715, "id995"], [715, "id1000"], [715, "id1005"], [715, "id1010"], [715, "id1015"], [715, "id1020"], [715, "id1025"], [715, "id1030"], [715, "id1035"], [715, "id1040"], [715, "id1045"], [715, "id1050"], [715, "id1055"], [715, "id1060"], [715, "id1065"], [715, "id1070"], [715, "id1075"], [715, "id1079"], [715, "id1083"], [715, "id1087"], [715, "id1091"], [715, "id1095"], [715, "id1099"], [715, "id1103"], [715, "id1107"], [715, "id1111"], [715, "id1115"], [715, "id1119"], [715, "id1123"], [715, "id1127"], [715, "id1131"], [715, "id1135"], [715, "id1139"], [715, "id1143"], [715, "id1147"], [715, "id1151"], [715, "id1155"], [715, "id1159"], [715, "id1163"], [715, "id1167"], [715, "id1171"], [715, "id1175"], [715, "id1179"], [715, "id1183"], [715, "id1187"], [715, "id1191"], [715, "id1195"], [715, "id1199"], [715, "id1203"], [715, "id1207"], [715, "id1211"], [715, "id1215"], [715, "id1219"], [715, "id1223"], [715, "id1227"], [715, "id1231"], [715, "id1235"], [715, "id1239"], [715, "id1243"], [715, "id1247"], [715, "id1251"], [715, "id1255"], [715, "id1259"], [715, "id1263"], [715, "id1267"], [715, "id1271"], [715, "id1275"], [715, "id1279"], [715, "id1282"], [715, "id1286"], [715, "id1290"], [715, "id1294"], [715, "id1298"], [715, "id1304"], [715, "id1308"], [715, "id1312"], [715, "id1316"], [715, "id1320"], [715, "id1324"], [715, "id1328"], [715, "id1332"], [715, "id1336"], [715, "id1349"], [715, "id1353"], [715, "id1357"], [715, "id1363"], [715, "id1370"], [715, "id1373"], [715, "id1377"], [715, "id1380"], [715, "id1384"], [715, "id1389"], [715, "id1394"], [715, "id1435"], [715, "id1439"], [715, "id1443"], [729, "semantics"], [729, "id5"], [748, "semantics"], [748, "id4"], [748, "id8"], [748, "id12"], [748, "id16"], [748, "id20"], [768, "semantics"], [768, "id4"]], "Sending patches": [[683, "sending-patches"]], "Sentinels": [[749, "sentinels"]], "Sequence": [[792, "sequence"]], "Sequential Containers (std::vector, std::list, etc)": [[749, "sequential-containers-std-vector-std-list-etc"]], "SequentiallyConsistent": [[595, "sequentiallyconsistent"]], "Serialization modes": [[759, "serialization-modes"]], "Serialized remarks": [[759, "serialized-remarks"]], "Set-Like Containers (std::set, SmallSet, SetVector, etc)": [[749, "set-like-containers-std-set-smallset-setvector-etc"]], "Setjmp/Longjmp Exception Handling": [[673, "setjmp-longjmp-exception-handling"]], "Setting a breakpoint in your pass": [[788, "setting-a-breakpoint-in-your-pass"]], "Setting up email interactions": [[671, "setting-up-email-interactions"]], "Setting up the build": [[787, "setting-up-the-build"]], "Setting up the build environment": [[788, "setting-up-the-build-environment"]], "Setting up your account": [[671, "setting-up-your-account"]], "Shared Library": [[745, "shared-library"]], "Sibling call optimization": [[608, "sibling-call-optimization"]], "Sign up": [[747, "sign-up"]], "Signed VBRs": [[598, "signed-vbrs"]], "Simple Constants": [[715, "simple-constants"]], "Simple formatting": [[749, "simple-formatting"]], "Simplifications for Non-Relocating GCs": [[770, "simplifications-for-non-relocating-gcs"]], "Simplifying MIR files": [[721, "simplifying-mir-files"]], "Single Value Types": [[715, "single-value-types"]], "SmallBitVector": [[749, "smallbitvector"]], "Software": [[683, "software"], [685, "software"]], "Sommaire": [[708, "sommaire"]], "Source Code": [[676, "source-code"]], "Source Code Formatting": [[611, "source-code-formatting"]], "Source Code Width": [[611, "source-code-width"]], "Source Filename": [[715, "source-filename"]], "Source Languages": [[591, "source-languages"], [676, "source-languages"]], "Source Level Debugging with LLVM": [[765, null]], "Source Locations": [[816, "source-locations"]], "Source Range": [[666, "id9"]], "Source Range:": [[666, "source-range"]], "Source Tree Layout": [[750, "source-tree-layout"]], "Source locations": [[721, "source-locations"]], "Spaces Before Parentheses": [[611, "spaces-before-parentheses"]], "Spanning Tree": [[752, "spanning-tree"]], "SparseBitVector": [[749, "sparsebitvector"]], "Special Case File": [[789, "special-case-file"]], "Special Notes for Library-only Distributions": [[604, "special-notes-for-library-only-distributions"]], "Specialised Arithmetic Intrinsics": [[715, "specialised-arithmetic-intrinsics"]], "Specialized Metadata Nodes": [[715, "specialized-metadata-nodes"]], "Specifying GC code generation: gc \"...\"": [[680, "specifying-gc-code-generation-gc"]], "Specifying interactions between passes": [[788, "specifying-interactions-between-passes"]], "Specifying positional options with hyphens": [[661, "specifying-positional-options-with-hyphens"]], "Speculative Load Hardening": [[766, null]], "Sphinx Quickstart Template": [[767, null]], "Spill Table": [[591, "spill-table"]], "Splitting Requests and Conditional Acceptance": [[610, "splitting-requests-and-conditional-acceptance"]], "Stable build": [[672, "stable-build"]], "Stack Map Format": [[768, "stack-map-format"], [770, "stack-map-format"]], "Stack Map Intrinsics": [[715, "stack-map-intrinsics"]], "Stack Map Section": [[768, "stack-map-section"]], "Stack Map Usage": [[768, "stack-map-usage"]], "Stack Pointer": [[591, "stack-pointer"]], "Stack Probe Emission": [[675, "stack-probe-emission"], [675, "id4"]], "Stack Safety Analysis": [[769, null]], "Stack instrumentation": [[725, "stack-instrumentation"]], "Stack maps and patch points in LLVM": [[768, null]], "Standard Blocks": [[598, "standard-block"]], "Standard C/C++ Library Intrinsics": [[715, "standard-c-c-library-intrinsics"]], "Standard Hash Tables": [[765, "standard-hash-tables"]], "Standard library support": [[662, "standard-library-support"]], "Startup initialization": [[717, "startup-initialization"]], "Status of the New and Legacy Pass Managers": [[730, "status-of-the-new-and-legacy-pass-managers"]], "Statut": [[747, "status"], [770, "status"]], "Stay Informed": [[670, "stay-informed"]], "Step #1 : Before The Move": [[751, "step-1-before-the-move"]], "Step #2 : Git Move": [[751, "step-2-git-move"]], "Step #3: Write Access Move": [[751, "step-3-write-access-move"]], "Step #4 : Post Move": [[751, "step-4-post-move"]], "Steps To Add Builder To LLVM Buildbot": [[701, "steps-to-add-builder-to-llvm-buildbot"]], "Steps for removal": [[772, "steps-for-removal"]], "Straw Man Migration Plan": [[751, "straw-man-migration-plan"]], "Stream Header": [[736, "stream-header"], [741, "stream-header"], [743, "stream-header"]], "Stream Layout": [[739, "stream-layout"]], "Streams": [[744, "streams"]], "String-like containers": [[749, "string-like-containers"]], "StringError": [[749, "stringerror"]], "Strings": [[666, "strings"]], "Structure": [[779, "structure"]], "Structure Type": [[715, "structure-type"]], "Structure Types": [[715, "structure-types"]], "Structure of Discourse": [[671, "structure-of-discourse"]], "Structured Fuzzing of LLVM IR": [[679, "structured-fuzzing-of-llvm-ir"]], "Structured Fuzzing using libprotobuf-mutator": [[679, "structured-fuzzing-using-libprotobuf-mutator"]], "Style Issues": [[611, "style-issues"]], "Sub-Array of Regions": [[666, "sub-array-of-regions"]], "Subcommands": [[645, "subcommands"]], "Subregister Indices": [[721, "subregister-indices"]], "Substitutions": [[781, "substitutions"]], "Substreams": [[736, "substreams"]], "Subtarget": [[774, "subtarget"]], "Subtarget Support": [[786, "subtarget-support"]], "Successors": [[721, "successors"]], "Summary": [[597, "summary"], [645, "summary"], [645, "id1"], [645, "id3"], [645, "id6"], [645, "id8"], [645, "id10"], [681, "summary"]], "Support Library": [[771, null]], "Support for alternate stackmap formats": [[770, "support-for-alternate-stackmap-formats"]], "Supported Architectures": [[768, "supported-architectures"], [770, "supported-architectures"]], "Supported Constraint Code List": [[715, "supported-constraint-code-list"]], "Supported Instructions": [[600, "supported-instructions"]], "Supporting Custom Compilers": [[731, "supporting-custom-compilers"]], "SwitchInst": [[600, "switchinst"]], "Switched-Resume Lowering": [[665, "switched-resume-lowering"]], "Symbol Options": [[645, "symbol-options"]], "Symbol Type Options": [[645, "symbol-type-options"]], "Symbols": [[590, "symbols"], [591, "symbols"]], "Symbols which can go in either/both of the module info stream & global stream": [[734, "symbols-which-can-go-in-either-both-of-the-module-info-stream-global-stream"]], "Synopsis": [[645, "synopsis"]], "Syntax": [[588, "syntax"], [588, "id1"], [588, "id2"], [715, "id682"], [715, "id687"], [715, "id692"], [715, "id697"], [715, "id702"], [715, "id707"], [715, "id712"], [715, "id717"], [715, "id722"], [715, "id727"], [715, "id732"], [715, "id737"], [715, "id742"], [715, "id747"], [777, "syntax"]], "Syntax of AMDGPU Instruction Modifiers": [[589, null]], "Syntax of AMDGPU Instruction Operands": [[590, null]], "Syntax of Core GFX10 Instructions": [[0, null]], "Syntax of Expressions": [[590, "syntax-of-expressions"]], "Syntax of gfx900, gfx902 and gfx909 Instructions": [[5, null]], "Syntax:": [[665, "syntax"], [715, "syntax"], [715, "id30"], [715, "id35"], [715, "id40"], [715, "id46"], [715, "id51"], [715, "id56"], [715, "id61"], [715, "id66"], [715, "id71"], [715, "id78"], [715, "id81"], [715, "id86"], [715, "id91"], [715, "id96"], [715, "id101"], [715, "id106"], [715, "id111"], [715, "id116"], [715, "id121"], [715, "id126"], [715, "id131"], [715, "id136"], [715, "id141"], [715, "id146"], [715, "id151"], [715, "id156"], [715, "id161"], [715, "id166"], [715, "id171"], [715, "id176"], [715, "id181"], [715, "id186"], [715, "id191"], [715, "id196"], [715, "id201"], [715, "id206"], [715, "id211"], [715, "id216"], [715, "id221"], [715, "id226"], [715, "id231"], [715, "id236"], [715, "id241"], [715, "id246"], [715, "id251"], [715, "id256"], [715, "id261"], [715, "id266"], [715, "id271"], [715, "id276"], [715, "id281"], [715, "id286"], [715, "id291"], [715, "id296"], [715, "id301"], [715, "id306"], [715, "id311"], [715, "id316"], [715, "id321"], [715, "id326"], [715, "id331"], [715, "id336"], [715, "id342"], [715, "id349"], [715, "id356"], [715, "id360"], [715, "id364"], [715, "id369"], [715, "id373"], [715, "id377"], [715, "id381"], [715, "id384"], [715, "id388"], [715, "id392"], [715, "id396"], [715, "id400"], [715, "id404"], [715, "id407"], [715, "id410"], [715, "id414"], [715, "id417"], [715, "id421"], [715, "id424"], [715, "id427"], [715, "id430"], [715, "id433"], [715, "id436"], [715, "id439"], [715, "id443"], [715, "id447"], [715, "id450"], [715, "id453"], [715, "id457"], [715, "id461"], [715, "id465"], [715, "id469"], [715, "id472"], [715, "id475"], [715, "id478"], [715, "id482"], [715, "id486"], [715, "id489"], [715, "id492"], [715, "id495"], [715, "id498"], [715, "id502"], [715, "id506"], [715, "id510"], [715, "id514"], [715, "id518"], [715, "id522"], [715, "id526"], [715, "id530"], [715, "id534"], [715, "id538"], [715, "id542"], [715, "id546"], [715, "id550"], [715, "id554"], [715, "id558"], [715, "id562"], [715, "id566"], [715, "id570"], [715, "id574"], [715, "id578"], [715, "id582"], [715, "id586"], [715, "id590"], [715, "id594"], [715, "id598"], [715, "id602"], [715, "id606"], [715, "id610"], [715, "id614"], [715, "id618"], [715, "id622"], [715, "id626"], [715, "id629"], [715, "id632"], [715, "id636"], [715, "id640"], [715, "id644"], [715, "id648"], [715, "id652"], [715, "id657"], [715, "id662"], [715, "id667"], [715, "id672"], [715, "id677"], [715, "id752"], [715, "id754"], [715, "id759"], [715, "id763"], [715, "id767"], [715, "id771"], [715, "id775"], [715, "id779"], [715, "id783"], [715, "id786"], [715, "id790"], [715, "id793"], [715, "id797"], [715, "id800"], [715, "id803"], [715, "id806"], [715, "id809"], [715, "id812"], [715, "id815"], [715, "id818"], [715, "id821"], [715, "id824"], [715, "id827"], [715, "id830"], [715, "id833"], [715, "id837"], [715, "id840"], [715, "id843"], [715, "id846"], [715, "id849"], [715, "id854"], [715, "id859"], [715, "id864"], [715, "id869"], [715, "id873"], [715, "id877"], [715, "id882"], [715, "id887"], [715, "id892"], [715, "id897"], [715, "id902"], [715, "id907"], [715, "id912"], [715, "id917"], [715, "id922"], [715, "id927"], [715, "id932"], [715, "id937"], [715, "id942"], [715, "id947"], [715, "id952"], [715, "id957"], [715, "id962"], [715, "id967"], [715, "id972"], [715, "id977"], [715, "id982"], [715, "id987"], [715, "id992"], [715, "id997"], [715, "id1002"], [715, "id1007"], [715, "id1012"], [715, "id1017"], [715, "id1022"], [715, "id1027"], [715, "id1032"], [715, "id1037"], [715, "id1042"], [715, "id1047"], [715, "id1052"], [715, "id1057"], [715, "id1062"], [715, "id1067"], [715, "id1072"], [715, "id1076"], [715, "id1080"], [715, "id1084"], [715, "id1088"], [715, "id1092"], [715, "id1096"], [715, "id1100"], [715, "id1104"], [715, "id1108"], [715, "id1112"], [715, "id1116"], [715, "id1120"], [715, "id1124"], [715, "id1128"], [715, "id1132"], [715, "id1136"], [715, "id1140"], [715, "id1144"], [715, "id1148"], [715, "id1152"], [715, "id1156"], [715, "id1160"], [715, "id1164"], [715, "id1168"], [715, "id1172"], [715, "id1176"], [715, "id1180"], [715, "id1184"], [715, "id1188"], [715, "id1192"], [715, "id1196"], [715, "id1200"], [715, "id1204"], [715, "id1208"], [715, "id1212"], [715, "id1216"], [715, "id1220"], [715, "id1224"], [715, "id1228"], [715, "id1232"], [715, "id1236"], [715, "id1240"], [715, "id1244"], [715, "id1248"], [715, "id1252"], [715, "id1256"], [715, "id1260"], [715, "id1264"], [715, "id1268"], [715, "id1272"], [715, "id1276"], [715, "id1280"], [715, "id1283"], [715, "id1287"], [715, "id1291"], [715, "id1295"], [715, "id1299"], [715, "id1301"], [715, "id1305"], [715, "id1309"], [715, "id1313"], [715, "id1317"], [715, "id1321"], [715, "id1325"], [715, "id1329"], [715, "id1333"], [715, "id1337"], [715, "id1340"], [715, "id1343"], [715, "id1346"], [715, "id1350"], [715, "id1354"], [715, "id1358"], [715, "id1360"], [715, "id1365"], [715, "id1367"], [715, "id1371"], [715, "id1374"], [715, "id1378"], [715, "id1381"], [715, "id1386"], [715, "id1391"], [715, "id1396"], [715, "id1398"], [715, "id1400"], [715, "id1402"], [715, "id1404"], [715, "id1406"], [715, "id1408"], [715, "id1410"], [715, "id1412"], [715, "id1414"], [715, "id1416"], [715, "id1418"], [715, "id1420"], [715, "id1422"], [715, "id1424"], [715, "id1426"], [715, "id1428"], [715, "id1430"], [715, "id1432"], [715, "id1436"], [715, "id1440"], [729, "syntax"], [729, "id3"], [729, "id6"], [729, "id8"], [748, "syntax"], [748, "id1"], [748, "id5"], [748, "id9"], [748, "id13"], [748, "id17"], [768, "syntax"], [768, "id1"]], "Syntaxe des instructions GFX7": [[2, null]], "Syntaxe des instructions GFX8": [[3, null]], "Syntaxe des instructions GFX9": [[4, null]], "Syntaxe des instructions gfx1011 et gfx1012": [[1, null]], "Syntaxe des instructions gfx904": [[6, null]], "Syntaxe des instructions gfx906": [[7, null]], "Syntaxe des instructions gfx908": [[8, null]], "Syntaxe des instructions gfx90a": [[9, null]], "Synthesized Functions Module Flags Metadata": [[715, "synthesized-functions-module-flags-metadata"]], "System Library": [[773, null]], "System VGPR Work-Item ID Enumeration Values": [[591, "amdgpu-amdhsa-system-vgpr-work-item-id-enumeration-values-table"]], "SystemZ": [[663, "systemz"]], "T": [[716, "t"]], "TARGET OPTIONS": [[620, "target-options"]], "TEST DISCOVERY": [[617, "test-discovery"], [617, "id7"]], "TEST RUN OUTPUT FORMAT": [[617, "test-run-output-format"]], "TEST STATUS RESULTS": [[617, "test-status-results"]], "TEST SUITES": [[617, "test-suites"]], "TPI vs IPI Stream": [[743, "tpi-vs-ipi-stream"]], "TSCWrap Records": [[791, "tscwrap-records"]], "TUTORIAL": [[612, "tutorial"]], "TVM": [[752, "tvm"]], "TYPE_BLOCK Contents": [[598, "type-block-contents"]], "TYPE_CODE_ARRAY Record": [[598, "type-code-array-record"]], "TYPE_CODE_BFLOAT Record": [[598, "type-code-bfloat-record"]], "TYPE_CODE_DOUBLE Record": [[598, "type-code-double-record"]], "TYPE_CODE_FLOAT Record": [[598, "type-code-float-record"]], "TYPE_CODE_FP128 Record": [[598, "type-code-fp128-record"]], "TYPE_CODE_FUNCTION Record": [[598, "type-code-function-record"]], "TYPE_CODE_FUNCTION_OLD Record": [[598, "type-code-function-old-record"]], "TYPE_CODE_HALF Record": [[598, "type-code-half-record"]], "TYPE_CODE_INTEGER Record": [[598, "type-code-integer-record"]], "TYPE_CODE_LABEL Record": [[598, "type-code-label-record"]], "TYPE_CODE_METADATA Record": [[598, "type-code-metadata-record"]], "TYPE_CODE_NUMENTRY Record": [[598, "type-code-numentry-record"]], "TYPE_CODE_OPAQUE Record": [[598, "type-code-opaque-record"]], "TYPE_CODE_POINTER Record": [[598, "type-code-pointer-record"]], "TYPE_CODE_PPC_FP128 Record": [[598, "type-code-ppc-fp128-record"]], "TYPE_CODE_STRUCT_ANON Record": [[598, "type-code-struct-anon-record"]], "TYPE_CODE_STRUCT_NAME Record": [[598, "type-code-struct-name-record"]], "TYPE_CODE_STRUCT_NAMED Record": [[598, "type-code-struct-named-record"]], "TYPE_CODE_VECTOR Record": [[598, "type-code-vector-record"]], "TYPE_CODE_VOID Record": [[598, "type-code-void-record"]], "TYPE_CODE_X86_AMX Record": [[598, "type-code-x86-amx-record"]], "TYPE_CODE_X86_FP80 Record": [[598, "type-code-x86-fp80-record"]], "TYPE_CODE_X86_MMX Record": [[598, "type-code-x86-mmx-record"]], "Table des mati\u00e8res": [[754, "table-of-contents"]], "TableGen BackEnds": [[774, null]], "TableGen Deficiencies": [[777, "tablegen-deficiencies"]], "TableGen Fundamentals": [[778, null]], "TableGen Overview": [[777, null]], "TableGen backends": [[777, "tablegen-backends"]], "Tag the LLVM Final Release": [[707, "tag-the-llvm-final-release"]], "Tag:": [[666, "tag"]], "Tagging the LLVM Release Candidates": [[707, "tagging-the-llvm-release-candidates"]], "Tags": [[792, "tags"]], "Tail Calls": [[608, "tail-calls"]], "Tail call optimization": [[608, "tail-call-optimization"]], "Target Feature Matrix": [[608, "target-feature-matrix"]], "Target Features": [[591, "target-features"]], "Target ID": [[591, "target-id"]], "Target Independence": [[817, "target-independence"]], "Target Intrinsics": [[690, "target-intrinsics"], [729, "target-intrinsics"]], "Target JIT Info": [[786, "target-jit-info"]], "Target Machine": [[786, "target-machine"], [815, "target-machine"]], "Target Registration": [[786, "target-registration"]], "Target Specific Behaviour": [[675, "target-specific-behaviour"]], "Target Triple": [[715, "target-triple"]], "Target Triples": [[591, "target-triples"]], "Target description classes": [[608, "target-description-classes"]], "Target-dependent Index Operands": [[721, "target-dependent-index-operands"]], "Target-independent code generation algorithms": [[608, "target-independent-code-generation-algorithms"]], "Target-specific Implementation Notes": [[608, "target-specific-implementation-notes"]], "Tech talks": [[724, "tech-talks"]], "Tempting optimizations that break the security model": [[766, "tempting-optimizations-that-break-the-security-model"]], "Terminator Instructions": [[715, "terminator-instructions"]], "Terminology": [[719, "terminology"]], "Terminology and Notation": [[683, "terminology-and-notation"]], "Test Cases": [[670, "test-cases"]], "Test LLVM on the command line:": [[685, "test-llvm-on-the-command-line"]], "Test Suite": [[758, "test-suite"]], "Test again": [[728, "test-again"]], "Test original debug info preservation in optimizations": [[710, "test-original-debug-info-preservation-in-optimizations"]], "Test-Suite Extensions": [[752, null]], "Testing": [[694, "testing"], [769, "testing"]], "Testing Addresses For Type Membership": [[783, "testing-addresses-for-type-membership"]], "Testing Analysis": [[781, "testing-analysis"]], "Testing Individual Code Generation Passes": [[721, "testing-individual-code-generation-passes"]], "Testing a pass": [[787, "testing-a-pass"]], "Testing and Debugging": [[756, "testing-and-debugging"]], "Testing compiler-rt builtins using qemu-arm": [[705, "testing-compiler-rt-builtins-using-qemu-arm"]], "Text Formatting": [[767, "text-formatting"]], "The -aa-eval pass": [[594, "the-aa-eval-pass"]], "The -adce pass": [[594, "the-adce-pass"]], "The -argpromotion pass": [[594, "the-argpromotion-pass"]], "The -basic-aa pass": [[594, "the-basic-aa-pass"]], "The -ds-aa pass": [[594, "the-ds-aa-pass"]], "The -globalsmodref-aa pass": [[594, "the-globalsmodref-aa-pass"]], "The -gvn, -memcpyopt, and -dse passes": [[594, "the-gvn-memcpyopt-and-dse-passes"]], "The -licm pass": [[594, "the-licm-pass"]], "The -print-alias-sets pass": [[594, "the-print-alias-sets-pass"]], "The -scev-aa pass": [[594, "the-scev-aa-pass"]], "The -steens-aa pass": [[594, "the-steens-aa-pass"]], "The AMDGPU backend": [[608, "the-amdgpu-backend"]], "The Abstract Syntax Tree (AST)": [[809, "the-abstract-syntax-tree-ast"]], "The AliasSetTracker implementation": [[594, "the-aliassettracker-implementation"]], "The AnalysisUsage::addPreserved<> method": [[788, "the-analysisusage-addpreserved-method"]], "The AnalysisUsage::addRequired<> and AnalysisUsage::addRequiredTransitive<> methods": [[788, "the-analysisusage-addrequired-and-analysisusage-addrequiredtransitive-methods"]], "The Argument class": [[749, "the-argument-class"]], "The BasicBlock class": [[749, "the-basicblock-class"]], "The Basics": [[678, "the-basics"]], "The C++ Standard Template Library": [[749, "the-c-standard-template-library"]], "The CallGraphSCCPass class": [[788, "the-callgraphsccpass-class"]], "The CodeView Symbol Substream": [[739, "the-codeview-symbol-substream"]], "The Constant class and subclasses": [[749, "the-constant-class-and-subclasses"]], "The Contract of classof": [[708, "the-contract-of-classof"]], "The Core LLVM Class Hierarchy Reference": [[749, "the-core-llvm-class-hierarchy-reference"]], "The CoreCLR GC": [[680, "the-coreclr-gc"]], "The DataLayout class": [[608, "the-datalayout-class"]], "The Driver": [[809, "the-driver"]], "The Fault Map Section": [[677, "the-fault-map-section"]], "The FileCheck -check-prefix option": [[612, "the-filecheck-check-prefix-option"]], "The Free Block Map": [[740, "the-free-block-map"]], "The Function class": [[749, "the-function-class"]], "The FunctionPass class": [[788, "the-functionpass-class"]], "The GlobalValue class": [[749, "the-globalvalue-class"]], "The GlobalVariable class": [[749, "the-globalvariable-class"]], "The High-Level Issues": [[611, "the-high-level-issues"]], "The ImmutablePass class": [[788, "the-immutablepass-class"]], "The ImplicitNullChecks pass": [[677, "the-implicitnullchecks-pass"]], "The Instruction class": [[749, "the-instruction-class"]], "The Kaleidoscope Language": [[808, "the-kaleidoscope-language"]], "The Kernel": [[729, "the-kernel"]], "The LLVM Lexicon": [[716, null]], "The LLVM Target-Independent Code Generator": [[608, null]], "The LLVM gold plugin": [[699, null]], "The LLVM_DEBUG() macro and -debug option": [[749, "the-llvm-debug-macro-and-debug-option"]], "The Lexer": [[808, "the-lexer"]], "The Location of LLVM Object Files": [[683, "the-location-of-llvm-object-files"]], "The Loop Vectorizer": [[785, "the-loop-vectorizer"]], "The LoopPass class": [[788, "the-looppass-class"]], "The Low-Level Issues": [[611, "the-low-level-issues"]], "The MCContext class": [[608, "the-mccontext-class"]], "The MCInst class": [[608, "the-mcinst-class"]], "The MCSection class": [[608, "the-mcsection-class"]], "The MCStreamer API": [[608, "the-mcstreamer-api"]], "The MCSymbol class": [[608, "the-mcsymbol-class"]], "The MSF Container": [[744, "the-msf-container"]], "The MSF File Format": [[740, null]], "The MachineBasicBlock class": [[608, "the-machinebasicblock-class"]], "The MachineFunction class": [[608, "the-machinefunction-class"]], "The MachineFunctionPass class": [[788, "the-machinefunctionpass-class"]], "The MachineInstr class": [[608, "the-machineinstr-class"]], "The Module Information Stream": [[739, null]], "The Module class": [[749, "the-module-class"]], "The ModulePass class": [[788, "the-modulepass-class"]], "The NVPTX backend": [[608, "the-nvptx-backend"]], "The Often Misunderstood GEP Instruction": [[681, null]], "The Opaque Pointer Type": [[732, "the-opaque-pointer-type"]], "The PDB DBI (Debug Info) Stream": [[736, null]], "The PDB File Format": [[744, null]], "The PDB Global Symbol Stream": [[737, null]], "The PDB Info Stream (aka the PDB Stream)": [[741, null]], "The PDB Public Symbol Stream": [[742, null]], "The PDB Serialized Hash Table Format": [[738, null]], "The PDB TPI and IPI Streams": [[743, null]], "The Planning Process and VPlan Roadmap": [[755, "the-planning-process-and-vplan-roadmap"]], "The PowerPC backend": [[608, "the-powerpc-backend"]], "The RegionPass class": [[788, "the-regionpass-class"]], "The SLP Vectorizer": [[785, "the-slp-vectorizer"]], "The SSA deconstruction phase": [[608, "the-ssa-deconstruction-phase"]], "The SelectionDAG Legalize Phase": [[786, "the-selectiondag-legalize-phase"]], "The Shadow Stack GC": [[680, "the-shadow-stack-gc"]], "The Statepoint Example GC": [[680, "the-statepoint-example-gc"]], "The Statistic class & -stats option": [[749, "the-statistic-class-stats-option"]], "The Stream Directory": [[740, "the-stream-directory"]], "The StringRef class": [[749, "the-stringref-class"]], "The Superblock": [[740, "the-superblock"]], "The TableGen program": [[777, "the-tablegen-program"]], "The TargetFrameLowering class": [[608, "the-targetframelowering-class"]], "The TargetInstrInfo class": [[608, "the-targetinstrinfo-class"]], "The TargetJITInfo class": [[608, "the-targetjitinfo-class"]], "The TargetLowering class": [[608, "the-targetlowering-class"]], "The TargetMachine class": [[608, "the-targetmachine-class"]], "The TargetRegisterInfo class": [[608, "the-targetregisterinfo-class"]], "The TargetSubtarget class": [[608, "the-targetsubtarget-class"]], "The Twine class": [[749, "the-twine-class"]], "The Type class and Derived Types": [[749, "the-type-class-and-derived-types"]], "The User and owned Use classes\u201d memory layout": [[749, "the-user-and-owned-use-classes-memory-layout"]], "The User class": [[749, "the-user-class"]], "The Value class": [[749, "the-value-class"]], "The ValueSymbolTable class": [[749, "the-valuesymboltable-class"]], "The X86 backend": [[608, "the-x86-backend"]], "The XRay stack tool": [[790, "the-xray-stack-tool"]], "The addEscapingUse method": [[594, "the-addescapinguse-method"]], "The alias method": [[594, "the-alias-method"]], "The change we\u2019re making": [[728, "the-change-we-re-making"]], "The cl::ConsumeAfter modifier": [[661, "the-cl-consumeafter-modifier"]], "The cl::OptionCategory class": [[661, "the-cl-optioncategory-class"]], "The cl::ParseCommandLineOptions function": [[661, "the-cl-parsecommandlineoptions-function"]], "The cl::SetVersionPrinter function": [[661, "the-cl-setversionprinter-function"]], "The cl::alias class": [[661, "the-cl-alias-class"]], "The cl::bits class": [[661, "the-cl-bits-class"]], "The cl::extrahelp class": [[661, "the-cl-extrahelp-class"]], "The cl::getRegisteredOptions function": [[661, "the-cl-getregisteredoptions-function"]], "The cl::list class": [[661, "the-cl-list-class"]], "The cl::opt class": [[661, "the-cl-opt-class"]], "The cmake try compile stage fails": [[705, "the-cmake-try-compile-stage-fails"]], "The copyValue method": [[594, "the-copyvalue-method"]], "The debugify utility pass": [[710, "the-debugify-utility-pass"]], "The deleteValue method": [[594, "the-deletevalue-method"]], "The doFinalization() method": [[788, "the-dofinalization-method"], [788, "id2"]], "The doFinalization(CallGraph &) method": [[788, "the-dofinalization-callgraph-method"]], "The doFinalization(Module &) method": [[788, "the-dofinalization-module-method"]], "The doInitialization(CallGraph &) method": [[788, "the-doinitialization-callgraph-method"]], "The doInitialization(Loop *, LPPassManager &) method": [[788, "the-doinitialization-loop-lppassmanager-method"]], "The doInitialization(Module &) method": [[788, "the-doinitialization-module-method"]], "The doInitialization(Region *, RGPassManager &) method": [[788, "the-doinitialization-region-rgpassmanager-method"]], "The doesNotAccessMemory and  onlyReadsMemory methods": [[594, "the-doesnotaccessmemory-and-onlyreadsmemory-methods"]], "The extended Berkeley Packet Filter (eBPF) backend": [[608, "the-extended-berkeley-packet-filter-ebpf-backend"]], "The flag registers again make everything hard": [[766, "the-flag-registers-again-make-everything-hard"]], "The function_ref class template": [[749, "the-function-ref-class-template"]], "The getAnalysis<> and getAnalysisIfAvailable<> methods": [[788, "the-getanalysis-and-getanalysisifavailable-methods"]], "The getAnalysisUsage method": [[788, "the-getanalysisusage-method"]], "The getModRefInfo methods": [[594, "the-getmodrefinfo-methods"]], "The high-level design of the code generator": [[608, "the-high-level-design-of-the-code-generator"]], "The isa<>, cast<> and dyn_cast<> templates": [[749, "the-isa-cast-and-dyn-cast-templates"]], "The llvm-jitlink tool": [[714, "the-llvm-jitlink-tool"]], "The llvm-xray Tool": [[790, "the-llvm-xray-tool"]], "The pointsToConstantMemory method": [[594, "the-pointstoconstantmemory-method"]], "The print method": [[788, "the-print-method"]], "The releaseMemory method": [[788, "the-releasememory-method"]], "The remark container": [[759, "the-remark-container"]], "The replaceWithNewValue method": [[594, "the-replacewithnewvalue-method"]], "The runOnFunction method": [[788, "the-runonfunction-method"]], "The runOnLoop method": [[788, "the-runonloop-method"]], "The runOnMachineFunction(MachineFunction &MF) method": [[788, "the-runonmachinefunction-machinefunction-mf-method"]], "The runOnModule method": [[788, "the-runonmodule-method"]], "The runOnRegion method": [[788, "the-runonregion-method"]], "The runOnSCC method": [[788, "the-runonscc-method"]], "The walker": [[726, "the-walker"]], "The \u00ab\u00a0CHECK-COUNT:\u00a0\u00bb directive": [[612, "the-check-count-directive"]], "The \u00ab\u00a0CHECK-DAG:\u00a0\u00bb directive": [[612, "the-check-dag-directive"]], "The \u00ab\u00a0CHECK-EMPTY:\u00a0\u00bb directive": [[612, "the-check-empty-directive"]], "The \u00ab\u00a0CHECK-LABEL:\u00a0\u00bb directive": [[612, "the-check-label-directive"]], "The \u00ab\u00a0CHECK-NEXT:\u00a0\u00bb directive": [[612, "the-check-next-directive"]], "The \u00ab\u00a0CHECK-NOT:\u00a0\u00bb directive": [[612, "the-check-not-directive"]], "The \u00ab\u00a0CHECK-SAME:\u00a0\u00bb directive": [[612, "the-check-same-directive"]], "The \u00ab\u00a0COM:\u00a0\u00bb directive": [[612, "the-com-directive"]], "The \u00ab\u00a0MC\u00a0\u00bb Layer": [[608, "the-mc-layer"]], "The \u201cErlang\u201d and \u201cOcaml\u201d GCs": [[680, "the-erlang-and-ocaml-gcs"]], "The \u201cllvm.compiler.used\u201d Global Variable": [[715, "the-llvm-compiler-used-global-variable"]], "The \u201cllvm.global_ctors\u201d Global Variable": [[715, "the-llvm-global-ctors-global-variable"]], "The \u201cllvm.global_dtors\u201d Global Variable": [[715, "the-llvm-global-dtors-global-variable"]], "The \u201cllvm.used\u201d Global Variable": [[715, "the-llvm-used-global-variable"]], "ThinLTO Summary": [[715, "thinlto-summary"]], "Thread Local Storage Models": [[715, "thread-local-storage-models"]], "Threads and LLVM": [[749, "threads-and-llvm"]], "Threads and the JIT": [[749, "threads-and-the-jit"]], "Throw": [[673, "throw"]], "Throw Filters": [[673, "throw-filters"]], "Timeline View": [[640, "timeline-view"]], "Tips and Tricks": [[817, "tips-and-tricks"]], "Tips for JITLink backend developers": [[714, "tips-for-jitlink-backend-developers"]], "Token Type": [[715, "token-type"]], "Too Long; Didn\u2019t Read": [[753, "too-long-didn-t-read"]], "Top Level APIs": [[731, "top-level-apis"]], "Top-Level Classes and Functions": [[661, "top-level-classes-and-functions"]], "Toy example": [[717, "toy-example"]], "Trace Analysis Tools": [[789, "trace-analysis-tools"], [789, "id1"]], "Tracing CMP instructions": [[717, "tracing-cmp-instructions"]], "Trampoline Intrinsics": [[715, "trampoline-intrinsics"]], "Transform Passes": [[746, "transform-passes"]], "Transformation Metadata Structure": [[782, "transformation-metadata-structure"]], "Transition Options": [[753, "transition-options"]], "Transition State": [[732, "transition-state"]], "Transitioning from ORCv1 to ORCv2": [[731, "transitioning-from-orcv1-to-orcv2"]], "Translating Function Calls": [[690, "translating-function-calls"]], "Translation of Constants": [[690, "translation-of-constants"]], "Transparency Report": [[762, "transparency-report"]], "Trap Handler ABI": [[591, "trap-handler-abi"], [591, "id82"]], "Treat Compiler Warnings Like Errors": [[611, "treat-compiler-warnings-like-errors"]], "Triaging bugs": [[601, "triaging-bugs"]], "Triples": [[729, "triples"]], "Trivial Constant Folding": [[811, "trivial-constant-folding"]], "Trophies": [[717, "trophies"]], "Troubleshooting": [[705, "troubleshooting"]], "Try/Catch": [[673, "try-catch"]], "Tuning/Configuration Options": [[618, "tuning-configuration-options"]], "Turn Predicate Loops into Predicate Functions": [[611, "turn-predicate-loops-into-predicate-functions"]], "Turning an iterator into a class pointer (and vice-versa)": [[749, "turning-an-iterator-into-a-class-pointer-and-vice-versa"]], "Tutorial Conclusion": [[817, "tutorial-conclusion"]], "Tutorial: A Simple Compute Kernel": [[729, "tutorial-a-simple-compute-kernel"]], "Tutorial: Linking with Libdevice": [[729, "tutorial-linking-with-libdevice"]], "Tutorials": [[695, "tutorials"]], "Type Conversions": [[689, "type-conversions"]], "Type Deviation": [[14, null], [79, null], [172, null], [267, null], [333, null], [350, null], [430, null], [543, null]], "Type ID Summary Entry": [[715, "type-id-summary-entry"]], "Type Indices": [[743, "type-indices"]], "Type Metadata": [[783, null]], "Type Offsets for A, B, C, D": [[783, "id2"]], "Type Record Options": [[645, "type-record-options"], [645, "id5"]], "Type Server Map Substream": [[736, "type-server-map-substream"]], "Type System": [[715, "type-system"]], "Type and Size Conversion": [[590, "type-and-size-conversion"]], "Type and Size Suffices": [[588, "type-and-size-suffices"]], "TypeCheckedLoadConstVCalls": [[715, "typecheckedloadconstvcalls"]], "TypeCheckedLoadVCalls": [[715, "typecheckedloadvcalls"]], "TypeIdInfo": [[715, "typeidinfo"]], "TypeTestAssumeConstVCalls": [[715, "typetestassumeconstvcalls"]], "TypeTestAssumeVCalls": [[715, "typetestassumevcalls"]], "TypeTests": [[715, "typetests"]], "Types": [[666, "types"]], "UNABBREV_RECORD Encoding": [[598, "unabbrev-record-encoding"]], "USING MARKERS TO ANALYZE SPECIFIC CODE BLOCKS": [[640, "using-markers-to-analyze-specific-code-blocks"]], "Unary Operations": [[715, "unary-operations"]], "Unary Operators": [[590, "unary-operators"]], "Undefined Values": [[715, "undefined-values"]], "Unique types": [[792, "unique-types"]], "Unit Headers": [[591, "unit-headers"]], "Unit and Regression tests": [[781, "unit-and-regression-tests"]], "Unit tests": [[781, "unit-tests"]], "Unordered": [[595, "unordered"]], "Unpacking the LLVM Archives": [[683, "unpacking-the-llvm-archives"]], "Unroll-And-Jam": [[782, "unroll-and-jam"]], "Unspecified OS": [[591, "unspecified-os"]], "Update Documentation": [[707, "update-documentation"]], "Update IR components": [[592, "update-ir-components"]], "Update LLVM Version": [[707, "update-llvm-version"]], "Update Selector components": [[592, "update-selector-components"]], "Update mappings": [[592, "update-mappings"]], "Update the LLVM Website": [[707, "update-the-llvm-website"]], "Updating Toolchain Requirements": [[670, "updating-toolchain-requirements"]], "Updating analysis results for transformations": [[594, "updating-analysis-results-for-transformations"]], "Updating your change": [[728, "updating-your-change"]], "Uploading a change for review": [[728, "uploading-a-change-for-review"]], "Usage": [[672, "usage"], [692, "usage"], [699, "usage"], [700, "usage"], [725, "usage"], [761, "usage"], [785, "usage"], [785, "id1"]], "Use Early Exits and continue to Simplify Code": [[611, "use-early-exits-and-continue-to-simplify-code"]], "Use Namespace Qualifiers to Implement Previously Declared Functions": [[611, "use-namespace-qualifiers-to-implement-previously-declared-functions"]], "Use Optimization": [[726, "use-optimization"]], "Use Standard C Headers": [[771, "use-standard-c-headers"]], "Use Standard C++ Headers": [[771, "id1"]], "Use after Free Detection": [[700, "use-after-free-detection"]], "Use an internal TLS location to pass predicate state": [[766, "use-an-internal-tls-location-to-pass-predicate-state"]], "Use auto Type Deduction to Make Code More Readable": [[611, "use-auto-type-deduction-to-make-code-more-readable"]], "Use lfence to guard function transitions": [[766, "use-lfence-to-guard-function-transitions"]], "Use of allocas": [[678, "use-of-allocas"]], "Use of class and struct Keywords": [[611, "use-of-class-and-struct-keywords"]], "Use range-based for loops wherever possible": [[611, "use-range-based-for-loops-wherever-possible"]], "Use raw_ostream": [[611, "use-raw-ostream"]], "Use-cases": [[731, "use-cases"]], "Use-list Order Directives": [[715, "use-list-order-directives"]], "Useful Built-in Commands": [[607, "useful-built-in-commands"]], "User Context Data": [[792, "user-context-data"]], "User Data": [[591, "user-data"]], "User Guide for AMDGPU Backend": [[591, null]], "User Guide for NVPTX Back-end": [[729, null]], "User Guides": [[784, null]], "User-defined Binary Operators": [[813, "user-defined-binary-operators"]], "User-defined Local Variables": [[814, "user-defined-local-variables"]], "User-defined Operators: the Idea": [[813, "user-defined-operators-the-idea"]], "User-defined Unary Operators": [[813, "user-defined-unary-operators"]], "User-supplied mutators": [[717, "user-supplied-mutators"]], "Using -opt-bisect-limit to debug optimization errors": [[733, null]], "Using ARM NEON instructions in big endian mode": [[597, null]], "Using Analyses": [[730, "using-analyses"]], "Using ExitOnError to simplify tool code": [[749, "using-exitonerror-to-simplify-tool-code"]], "Using GDB with dynamically loaded passes": [[788, "using-gdb-with-dynamically-loaded-passes"]], "Using LostDebugLocObserver": [[710, "using-lostdebuglocobserver"]], "Using RegisterAnalysisGroup": [[788, "using-registeranalysisgroup"]], "Using TableGen for target description": [[608, "using-tablegen-for-target-description"]], "Using XRay": [[789, "using-xray"]], "Using a Different Class on Host/Device": [[662, "using-a-different-class-on-host-device"]], "Using alias analysis results": [[594, "using-alias-analysis-results"]], "Using cantFail to simplify safe callsites": [[749, "using-cantfail-to-simplify-safe-callsites"]], "Using debugify": [[710, "using-debugify"]], "Using existing registries": [[788, "using-existing-registries"]], "Using gc.statepoint": [[680, "using-gc-statepoint"]], "Using libFuzzer as a library": [[717, "using-libfuzzer-as-a-library"]], "Using llvm.gcwrite": [[680, "using-llvm-gcwrite"]], "Using patch summaries": [[747, "using-patch-summaries"]], "Using preconfigured CMake caches": [[704, "using-preconfigured-cmake-caches"]], "Using the AliasAnalysis interface directly": [[594, "using-the-aliasanalysis-interface-directly"]], "Using the AliasSetTracker class": [[594, "using-the-aliassettracker-class"]], "Using the C and C++ Front Ends": [[676, "using-the-c-and-c-front-ends"]], "Using the MachineInstrBuilder.h functions": [[608, "using-the-machineinstrbuilder-h-functions"]], "Using the MemoryDependenceAnalysis Pass": [[594, "using-the-memorydependenceanalysis-pass"]], "Using the New Pass Manager": [[730, null]], "Using the script": [[704, "using-the-script"]], "Using the web interface": [[747, "using-the-web-interface"]], "Utilities for Writing Fuzzers": [[679, "utilities-for-writing-fuzzers"]], "Utility Macros": [[792, "utility-macros"]], "Utility Passes": [[746, "utility-passes"]], "Utility Passes for Safepoint Insertion": [[770, "utility-passes-for-safepoint-insertion"]], "VALU": [[591, "valu"]], "VALUE_SYMTAB_BLOCK Contents": [[598, "value-symtab-block-contents"]], "VE": [[663, "ve"]], "VGPR Register Set Up Order for Unpacked Work-Item ID Method": [[591, "amdgpu-amdhsa-vgpr-register-set-up-order-for-unpacked-work-item-id-method-table"]], "VINTRP": [[0, "vintrp"], [2, "vintrp"], [3, "vintrp"], [4, "vintrp"]], "VINTRP Modifiers": [[589, "vintrp-modifiers"]], "VLIW Packetizer": [[608, "vliw-packetizer"]], "VOP1": [[0, "vop1"], [2, "vop1"], [3, "vop1"], [4, "vop1"], [9, "vop1"]], "VOP2": [[0, "vop2"], [1, "vop2"], [2, "vop2"], [3, "vop2"], [4, "vop2"], [7, "vop2"], [8, "vop2"], [9, "vop2"]], "VOP3": [[0, "vop3"], [2, "vop3"], [3, "vop3"], [4, "vop3"], [7, "vop3"], [8, "vop3"], [9, "vop3"]], "VOP3 Modifiers": [[589, "vop3-modifiers"]], "VOP3 Operand Modifiers": [[589, "vop3-operand-modifiers"]], "VOP3P": [[0, "vop3p"], [1, "vop3p"], [4, "vop3p"], [5, "vop3p"], [6, "vop3p"], [7, "vop3p"], [8, "vop3p"], [9, "vop3p"]], "VOP3P MAD_MIX/FMA_MIX Modifiers": [[589, "vop3p-mad-mix-fma-mix-modifiers"]], "VOP3P MFMA Modifiers": [[589, "vop3p-mfma-modifiers"]], "VOP3P Modifiers": [[589, "vop3p-modifiers"]], "VOPC": [[0, "vopc"], [2, "vopc"], [3, "vopc"], [4, "vopc"], [9, "vopc"]], "VP": [[715, "vp"]], "Validation": [[792, "validation"]], "Value Profile": [[717, "value-profile"]], "Variable Argument Handling Intrinsics": [[715, "variable-argument-handling-intrinsics"]], "Variable Length Arrays": [[675, "variable-length-arrays"]], "Variable Names Coding Standard Options": [[753, "variable-names-coding-standard-options"]], "Variable Names Plan": [[753, null]], "Variable Sized Allocas": [[764, "variable-sized-allocas"]], "Variable Width Integers": [[598, "variable-width-value"]], "Variable locations during Register Allocation": [[765, "variable-locations-during-register-allocation"]], "Variable locations in Instruction Selection and MIR": [[765, "variable-locations-in-instruction-selection-and-mir"]], "Variables": [[816, "variables"]], "Variables for Building Libraries": [[750, "variables-for-building-libraries"]], "Variables for Building Programs": [[750, "variables-for-building-programs"]], "Variables for Building Subdirectories": [[750, "variables-for-building-subdirectories"]], "Variables, Types, and Scope": [[607, "variables-types-and-scope"]], "Variadic Arguments": [[689, "variadic-arguments"]], "Variant #1.1 and #1.2 attacks: \u00ab\u00a0Bounds Check Bypass Store\u00a0\u00bb": [[766, "variant-1-1-and-1-2-attacks-bounds-check-bypass-store"]], "Varying variable locations": [[721, "varying-variable-locations"]], "Vector Operations": [[715, "vector-operations"]], "Vector Predication Intrinsics": [[715, "vector-predication-intrinsics"]], "Vector Predication Roadmap": [[754, null]], "Vector Reduction Intrinsics": [[715, "vector-reduction-intrinsics"]], "Vector Reduction Operations": [[689, "vector-reduction-operations"]], "Vector Specific Operations": [[689, "vector-specific-operations"]], "Vector Type": [[715, "vector-type"]], "Vector of pointers:": [[715, "vector-of-pointers"]], "Vectorization Plan": [[755, null]], "Vectorization Workflow": [[755, "vectorization-workflow"]], "Vectorization of Mixed Types": [[785, "vectorization-of-mixed-types"]], "Vectorization of function calls": [[785, "vectorization-of-function-calls"]], "Versioning LICM": [[782, "versioning-licm"]], "Versions": [[717, "versions"]], "Viewing graphs while debugging code": [[749, "viewing-graphs-while-debugging-code"]], "Virtual Table Layout for A, B, C, D": [[783, "id1"]], "Visibility Styles": [[715, "visibility-styles"]], "Void Type": [[715, "void-type"]], "Volatile Memory Accesses": [[715, "volatile-memory-accesses"]], "WINDOWS/PDB SPECIFIC OPTIONS": [[655, "windows-pdb-specific-options"]], "WallClockTime Records": [[791, "wallclocktime-records"]], "Warnings": [[772, "warnings"]], "Ways to Contribute": [[664, "ways-to-contribute"]], "Weighted Input": [[646, "weighted-input"]], "Well-Defined Values": [[715, "well-defined-values"]], "Well-Formedness": [[715, "well-formedness"]], "What API do I use to store a value to one of the virtual registers in LLVM IR\u2019s SSA representation?": [[676, "what-api-do-i-use-to-store-a-value-to-one-of-the-virtual-registers-in-llvm-ir-s-ssa-representation"]], "What About Branches and Merges?": [[751, "what-about-branches-and-merges"]], "What About Commit Emails?": [[751, "what-about-commit-emails"]], "What Code Should Be Reviewed?": [[610, "what-code-should-be-reviewed"]], "What PassManager does": [[788, "what-passmanager-does"]], "What This Proposal is Not About": [[751, "what-this-proposal-is-not-about"]], "What Tools Are Used for Code Review?": [[610, "what-tools-are-used-for-code-review"]], "What are advantages of Discourse over the current mailing lists?": [[671, "what-are-advantages-of-discourse-over-the-current-mailing-lists"]], "What effect do address spaces have on GEPs?": [[681, "what-effect-do-address-spaces-have-on-geps"]], "What happens after you file a report?": [[760, "what-happens-after-you-file-a-report"]], "What happens if a GEP computation overflows?": [[681, "what-happens-if-a-gep-computation-overflows"]], "What happens if an array index is out of bounds?": [[681, "what-happens-if-an-array-index-is-out-of-bounds"]], "What is Garbage Collection?": [[680, "what-is-garbage-collection"]], "What is considered a security issue?": [[762, "what-is-considered-a-security-issue"]], "What is covered": [[772, "what-is-covered"], [772, "id1"]], "What is dereferenced by GEP?": [[681, "what-is-dereferenced-by-gep"]], "What is the first index of the GEP instruction?": [[681, "what-is-the-first-index-of-the-gep-instruction"]], "What is the reason for the migration?": [[671, "what-is-the-reason-for-the-migration"]], "What is this llvm.global_ctors and _GLOBAL__I_a... stuff that happens when I #include <iostream>?": [[676, "what-is-this-llvm-global-ctors-and-global-i-a-stuff-that-happens-when-i-include-iostream"]], "What is this \u00ab\u00a0undef\u00a0\u00bb thing that shows up in my code?": [[676, "what-is-this-undef-thing-that-shows-up-in-my-code"]], "What should I know to be able to follow along with this document?": [[727, "what-should-i-know-to-be-able-to-follow-along-with-this-document"]], "What source languages are supported?": [[676, "what-source-languages-are-supported"]], "What support is there for a higher level source language constructs for building a compiler?": [[676, "what-support-is-there-for-a-higher-level-source-language-constructs-for-building-a-compiler"]], "What to do when bugpoint isn\u2019t enough": [[602, "what-to-do-when-bugpoint-isn-t-enough"]], "What we associate in cmpValues?": [[727, "what-we-associate-in-cmpvalues"]], "What will happen to our email archives?": [[671, "what-will-happen-to-our-email-archives"]], "What\u2019s an uglygep?": [[681, "what-s-an-uglygep"]], "When Is an RFC Required?": [[610, "when-is-an-rfc-required"]], "When to drop an instruction location": [[710, "when-to-drop-an-instruction-location"]], "When to merge instruction locations": [[710, "when-to-merge-instruction-locations"]], "When to preserve an instruction location": [[710, "when-to-preserve-an-instruction-location"]], "When to specify alignment": [[678, "when-to-specify-alignment"]], "Where did all of my code go??": [[676, "where-did-all-of-my-code-go"]], "Where to host the meetup?": [[724, "where-to-host-the-meetup"]], "Which image should I choose?": [[672, "which-image-should-i-choose"]], "Whitespace": [[611, "whitespace"]], "Who Can/Should Review Code?": [[610, "who-can-should-review-code"]], "Who are the admins for Discourse?": [[671, "who-are-the-admins-for-discourse"]], "Why Git, and Why GitHub?": [[751, "why-git-and-why-github"]], "Why Git?": [[751, "why-git"]], "Why GitHub?": [[751, "why-github"]], "Why Move At All?": [[751, "why-move-at-all"]], "Why do GEP x,1,0,0 and GEP x,1 alias?": [[681, "why-do-gep-x-1-0-0-and-gep-x-1-alias"]], "Why do struct member indices always use i32?": [[681, "why-do-struct-member-indices-always-use-i32"]], "Why does instcombine + simplifycfg turn a call to a function with a mismatched calling convention into \u00ab\u00a0unreachable\u00a0\u00bb? Why not make the verifier reject it?": [[676, "why-does-instcombine-simplifycfg-turn-a-call-to-a-function-with-a-mismatched-calling-convention-into-unreachable-why-not-make-the-verifier-reject-it"]], "Why don\u2019t GEP x,0,0,1 and GEP x,1 alias?": [[681, "why-don-t-gep-x-0-0-1-and-gep-x-1-alias"]], "Why is GEP designed this way?": [[681, "why-is-gep-designed-this-way"]], "Why is the extra 0 index required?": [[681, "why-is-the-extra-0-index-required"]], "Why is this a hard problem?": [[814, "why-is-this-a-hard-problem"], [816, "why-is-this-a-hard-problem"]], "Why?": [[672, "why"]], "Windows": [[663, "windows"]], "Windows Runtime Exception Handling": [[673, "windows-runtime-exception-handling"]], "Windows on ARM": [[675, "windows-on-arm"]], "Windows on ARM64": [[675, "windows-on-arm64"]], "With great power": [[728, "with-great-power"]], "Word Alignment": [[598, "word-alignment"]], "Work-item implicit argument layout": [[591, "amdgpu-amdhsa-workitem-implicit-argument-layout-table"]], "Workflow Before/After": [[751, "workflow-before-after"]], "Workflows": [[751, "workflows"]], "Working with CodeView": [[765, "working-with-codeview"]], "Working with the CI system": [[670, "working-with-the-ci-system"]], "Write Portable Code": [[611, "write-portable-code"]], "Write barrier: llvm.gcwrite": [[680, "write-barrier-llvm-gcwrite"]], "Write-Back and Retire Stage": [[640, "write-back-and-retire-stage"]], "Writing Custom Tests for the test-suite": [[780, "writing-custom-tests-for-the-test-suite"]], "Writing LLVM Style Makefiles": [[750, "writing-llvm-style-makefiles"]], "Writing a custom parser": [[661, "writing-a-custom-parser"]], "Writing a new AliasAnalysis Implementation": [[594, "writing-a-new-aliasanalysis-implementation"]], "Writing an LLVM Backend": [[786, null]], "Writing an LLVM Pass": [[787, null], [788, null]], "Writing new regression tests": [[781, "writing-new-regression-tests"]], "X86": [[663, "x86"], [675, "x86"]], "X86 Calling Conventions supported": [[608, "x86-calling-conventions-supported"]], "X86 Target Triples supported": [[608, "x86-target-triples-supported"]], "X86 address spaces supported": [[608, "x86-address-spaces-supported"]], "X86/COFF-Dependent": [[675, "x86-coff-dependent"]], "X86EVEX2VEX": [[774, "x86evex2vex"]], "X86_amx Type": [[715, "x86-amx-type"]], "X86_mmx Type": [[715, "x86-mmx-type"]], "XCOFF ONLY OPTIONS AND COMMANDS": [[643, "xcoff-only-options-and-commands"]], "XCOFF SPECIFIC OPTIONS": [[650, "xcoff-specific-options"]], "XCore": [[663, "xcore"]], "XRay": [[756, "xray"]], "XRay Flight Data Recorder Trace Format": [[791, null]], "XRay Instrumentation": [[789, null]], "XRay Runtime Library": [[789, "xray-runtime-library"]], "XRay in LLVM": [[789, "xray-in-llvm"]], "YAML I/O": [[792, null]], "YAML metadata": [[759, "yaml-metadata"]], "YAML remarks": [[759, "yaml-remarks"]], "YAML with a string table": [[759, "yaml-with-a-string-table"]], "Zext GEP indices to machine register width": [[678, "zext-gep-indices-to-machine-register-width"]], "Zipping local history": [[751, "zipping-local-history"]], "a": [[590, "a"]], "a16": [[589, "a16"]], "abid": [[589, "abid"]], "abs": [[589, "abs"], [589, "amdgpu-synid-abs"], [589, "id27"]], "addr64": [[589, "addr64"]], "attr": [[17, null], [121, null], [210, null], [480, null]], "bank_mask": [[589, "bank-mask"]], "blgp": [[589, "blgp"]], "bound_ctrl": [[589, "bound-ctrl"]], "branch_weights": [[715, "branch-weights"]], "bugpoint - automatic test case reduction tool": [[613, null]], "bytes": [[645, "bytes"]], "cbsz": [[589, "cbsz"]], "clamp": [[589, "clamp"], [589, "amdgpu-synid-clamp"], [589, "id26"], [589, "id29"]], "clang-format-fuzzer": [[679, "clang-format-fuzzer"]], "clang-fuzzer": [[679, "clang-fuzzer"]], "clang-proto-fuzzer": [[679, "clang-proto-fuzzer"]], "clang-tblgen - Description to C++ Code for Clang": [[614, null]], "clang-tblgen Options": [[660, "clang-tblgen-options"]], "cmpConstants": [[727, "cmpconstants"]], "cmpGEP": [[727, "cmpgep"]], "cmpOperation": [[727, "cmpoperation"]], "cmpValues(const Value*, const Value*)": [[727, "cmpvalues-const-value-const-value"]], "compare(const BasicBlock*, const BasicBlock*)": [[727, "compare-const-basicblock-const-basicblock"]], "compr": [[589, "compr"]], "compute_pgm_rsrc1 for GFX6-GFX10": [[591, "amdgpu-amdhsa-compute-pgm-rsrc1-gfx6-gfx10-table"]], "compute_pgm_rsrc2 for GFX6-GFX10": [[591, "amdgpu-amdhsa-compute-pgm-rsrc2-gfx6-gfx10-table"]], "compute_pgm_rsrc3 for GFX10": [[591, "amdgpu-amdhsa-compute-pgm-rsrc3-gfx10-table"]], "compute_pgm_rsrc3 for GFX90A": [[591, "amdgpu-amdhsa-compute-pgm-rsrc3-gfx90a-table"]], "d16": [[589, "d16"]], "da": [[589, "da"]], "debugify in regression tests": [[710, "debugify-in-regression-tests"]], "dim": [[589, "dim"]], "dlc": [[589, "dlc"], [589, "id4"], [589, "amdgpu-synid-dlc"], [589, "id15"], [589, "id19"]], "dmask": [[589, "dmask"]], "done": [[589, "done"]], "dpp16_ctrl": [[589, "dpp16-ctrl"]], "dpp32_ctrl": [[589, "dpp32-ctrl"]], "dpp64_ctrl": [[589, "dpp64-ctrl"]], "dpp8_sel": [[589, "dpp8-sel"]], "dpp_ctrl": [[589, "dpp-ctrl"]], "dpp_op_sel": [[589, "dpp-op-sel"]], "dst": [[18, null], [122, null], [211, null], [336, null], [368, null], [481, null]], "dst_sel": [[589, "dst-sel"]], "dst_unused": [[589, "dst-unused"]], "dsymutil - manipulate archived DWARF debug symbol files": [[615, null]], "dump": [[645, "dump"]], "eBPF maps": [[608, "ebpf-maps"]], "exec": [[590, "exec"]], "execz": [[590, "execz"]], "fconst": [[590, "fconst"]], "fi": [[589, "fi"], [589, "amdgpu-synid-fi16"]], "findRegressions-nightly.py": [[758, "findregressions-nightly-py"]], "flat_scratch": [[590, "flat-scratch"]], "fmt": [[589, "fmt"]], "formatv Examples": [[749, "formatv-examples"]], "function_entry_count": [[715, "function-entry-count"]], "gds": [[589, "gds"]], "git bisect run": [[686, "git-bisect-run"]], "glc": [[589, "glc"], [589, "id1"], [589, "amdgpu-synid-glc"], [589, "id12"], [589, "id17"]], "high": [[589, "high"]], "hwreg": [[20, null], [123, null], [212, null], [370, null], [482, null]], "iconst": [[590, "iconst"]], "idxen": [[589, "amdgpu-synid-idxen"]], "if statement": [[600, "if-statement"], [600, "id1"]], "ilist_traits": [[749, "ilist-traits"]], "imask": [[213, null], [371, null], [483, null]], "imm16": [[21, null], [22, null], [23, null], [124, null], [125, null], [126, null], [214, null], [215, null], [216, null], [372, null], [373, null], [374, null], [484, null], [485, null], [486, null]], "inline constant": [[590, "inline-constant"]], "iplist": [[749, "iplist"]], "ival": [[590, "ival"]], "label": [[24, null], [127, null], [217, null], [375, null], [487, null]], "lds": [[589, "lds"], [589, "amdgpu-synid-lds"], [589, "id14"]], "lds_direct": [[590, "lds-direct"]], "libFuzzer \u2013 a library for coverage-guided fuzz testing.": [[717, null]], "libLTO": [[718, "liblto"]], "lit - LLVM Integrated Tester": [[617, null]], "literal": [[590, "literal"]], "llc - LLVM static compiler": [[618, null]], "lldb-tblgen - Description to C++ Code for LLDB": [[619, null]], "lldb-tblgen Options": [[660, "lldb-tblgen-options"]], "lli - directly execute programs from LLVM bitcode": [[620, null]], "llvm-addr2line - a drop-in replacement for addr2line": [[621, null]], "llvm-ar - LLVM archiver": [[622, null]], "llvm-as - LLVM assembler": [[623, null]], "llvm-as-fuzzer": [[679, "llvm-as-fuzzer"]], "llvm-bcanalyzer - LLVM bitcode analyzer": [[624, null]], "llvm-config - Print LLVM compilation options": [[625, null]], "llvm-cov - emit coverage information": [[626, null]], "llvm-cxxfilt - LLVM symbol name demangler": [[627, null]], "llvm-cxxmap - Mangled name remapping tool": [[628, null]], "llvm-demangle-fuzzer": [[679, "llvm-demangle-fuzzer"]], "llvm-diff - LLVM structural \u201cdiff\u201d": [[629, null]], "llvm-dis - LLVM disassembler": [[630, null]], "llvm-dwarfdump - dump and verify DWARF debug information": [[631, null]], "llvm-dwarfdump-fuzzer": [[679, "llvm-dwarfdump-fuzzer"]], "llvm-exegesis - LLVM Machine Instruction Benchmark": [[632, null]], "llvm-extract - extract a function from an LLVM module": [[633, null]], "llvm-install-name-tool - LLVM tool for manipulating install-names and rpaths": [[634, null]], "llvm-isel-fuzzer": [[679, "llvm-isel-fuzzer"]], "llvm-jitlink as a regression testing utility": [[714, "llvm-jitlink-as-a-regression-testing-utility"]], "llvm-lib - LLVM lib.exe compatible library tool": [[635, null]], "llvm-libtool-darwin - LLVM tool for creating libraries for Darwin": [[636, null]], "llvm-link - LLVM bitcode linker": [[637, null]], "llvm-lipo - LLVM tool for manipulating universal binaries": [[638, null]], "llvm-locstats - calculate statistics on DWARF debug location": [[639, null]], "llvm-mc-assemble-fuzzer": [[679, "llvm-mc-assemble-fuzzer"]], "llvm-mc-disassemble-fuzzer": [[679, "llvm-mc-disassemble-fuzzer"]], "llvm-mca - LLVM Machine Code Analyzer": [[640, null]], "llvm-nm - list LLVM bitcode and object file\u2019s symbol table": [[641, null]], "llvm-objcopy - object copying and editing tool": [[642, null]], "llvm-objdump - LLVM\u2019s object file dumper": [[643, null]], "llvm-opt-fuzzer": [[679, "llvm-opt-fuzzer"]], "llvm-otool - Mach-O dumping tool": [[644, null]], "llvm-pdbutil - PDB File forensics and diagnostics": [[645, null]], "llvm-profdata - Profile data tool": [[646, null]], "llvm-profgen - LLVM SPGO profile generation tool": [[647, null]], "llvm-ranlib - generates an archive index": [[648, null]], "llvm-readelf - GNU-style LLVM Object Reader": [[649, null]], "llvm-readobj - LLVM Object Reader": [[650, null]], "llvm-size - print size information": [[651, null]], "llvm-stress - generate random .ll files": [[652, null]], "llvm-strings - print strings": [[653, null]], "llvm-strip - object stripping tool": [[654, null]], "llvm-symbolizer - convert addresses into source code locations": [[655, null]], "llvm-tblgen - Target Description to C++ Code for LLVM": [[656, null]], "llvm-tblgen Options": [[660, "llvm-tblgen-options"]], "llvm-tli-checker - TargetLibraryInfo vs library checker": [[657, null]], "llvm.dbg.addr": [[765, "llvm-dbg-addr"]], "llvm.dbg.declare": [[765, "llvm-dbg-declare"]], "llvm.dbg.value": [[765, "llvm-dbg-value"]], "llvm.eh.begincatch": [[673, "llvm-eh-begincatch"]], "llvm.eh.endcatch": [[673, "llvm-eh-endcatch"]], "llvm.eh.exceptionpointer": [[673, "llvm-eh-exceptionpointer"]], "llvm.eh.sjlj.callsite": [[673, "llvm-eh-sjlj-callsite"]], "llvm.eh.sjlj.longjmp": [[673, "llvm-eh-sjlj-longjmp"]], "llvm.eh.sjlj.lsda": [[673, "llvm-eh-sjlj-lsda"]], "llvm.eh.sjlj.setjmp": [[673, "llvm-eh-sjlj-setjmp"]], "llvm.eh.typeid.for": [[673, "llvm-eh-typeid-for"]], "llvm/ADT/ArrayRef.h": [[749, "llvm-adt-arrayref-h"]], "llvm/ADT/DenseMap.h": [[749, "llvm-adt-densemap-h"]], "llvm/ADT/DenseSet.h": [[749, "llvm-adt-denseset-h"]], "llvm/ADT/FoldingSet.h": [[749, "llvm-adt-foldingset-h"]], "llvm/ADT/ImmutableMap.h": [[749, "llvm-adt-immutablemap-h"]], "llvm/ADT/ImmutableSet.h": [[749, "llvm-adt-immutableset-h"]], "llvm/ADT/IndexedMap.h": [[749, "llvm-adt-indexedmap-h"]], "llvm/ADT/IntEqClasses.h": [[749, "llvm-adt-inteqclasses-h"]], "llvm/ADT/IntervalMap.h": [[749, "llvm-adt-intervalmap-h"]], "llvm/ADT/MapVector.h": [[749, "llvm-adt-mapvector-h"]], "llvm/ADT/PackedVector.h": [[749, "llvm-adt-packedvector-h"]], "llvm/ADT/SetVector.h": [[749, "llvm-adt-setvector-h"]], "llvm/ADT/SmallPtrSet.h": [[749, "llvm-adt-smallptrset-h"]], "llvm/ADT/SmallSet.h": [[749, "llvm-adt-smallset-h"]], "llvm/ADT/SmallString.h": [[749, "llvm-adt-smallstring-h"]], "llvm/ADT/SmallVector.h": [[749, "llvm-adt-smallvector-h"]], "llvm/ADT/SparseMultiSet.h": [[749, "llvm-adt-sparsemultiset-h"]], "llvm/ADT/SparseSet.h": [[749, "llvm-adt-sparseset-h"]], "llvm/ADT/StringMap.h": [[749, "llvm-adt-stringmap-h"]], "llvm/ADT/StringRef.h": [[749, "llvm-adt-stringref-h"]], "llvm/ADT/StringSet.h": [[749, "llvm-adt-stringset-h"]], "llvm/ADT/TinyPtrVector.h": [[749, "llvm-adt-tinyptrvector-h"]], "llvm/ADT/Twine.h": [[749, "llvm-adt-twine-h"]], "llvm/ADT/UniqueVector.h": [[749, "llvm-adt-uniquevector-h"]], "llvm/ADT/ilist.h": [[749, "llvm-adt-ilist-h"]], "llvm/ADT/ilist_node.h": [[749, "llvm-adt-ilist-node-h"]], "llvm/IR/ValueMap.h": [[749, "llvm-ir-valuemap-h"]], "llvm/bindings": [[683, "llvm-bindings"]], "llvm/cmake": [[683, "llvm-cmake"]], "llvm/examples": [[683, "llvm-examples"]], "llvm/include": [[683, "llvm-include"]], "llvm/lib": [[683, "llvm-lib"]], "llvm/projects": [[683, "llvm-projects"]], "llvm/test": [[683, "llvm-test"]], "llvm/tools": [[683, "llvm-tools"]], "llvm/utils": [[683, "llvm-utils"]], "lto_code_gen_t": [[718, "lto-code-gen-t"]], "lto_module_t": [[718, "lto-module-t"]], "lwe": [[589, "lwe"]], "m": [[25, null], [26, null], [128, null], [218, null], [219, null], [316, null], [321, null], [326, null], [327, null], [338, null], [339, null], [376, null], [377, null], [488, null], [489, null]], "m0": [[590, "m0"]], "m_op_sel": [[589, "m-op-sel"]], "m_op_sel_hi": [[589, "m-op-sel-hi"]], "macOS": [[663, "macos"]], "make.implicit metadata": [[677, "make-implicit-metadata"]], "merge": [[645, "merge"]], "mlir-tblgen - Description to C++ Code for MLIR": [[658, null]], "mlir-tblgen Options": [[660, "mlir-tblgen-options"]], "msg": [[27, null], [129, null], [220, null], [378, null], [490, null]], "neg": [[589, "neg"], [589, "amdgpu-synid-neg"], [589, "id28"]], "neg_hi": [[589, "neg-hi"]], "neg_lo": [[589, "neg-lo"]], "null": [[590, "null"]], "nv": [[589, "nv"], [589, "amdgpu-synid-nv"], [589, "id18"]], "off": [[590, "off"]], "offen": [[589, "offen"]], "offset": [[589, "offset"]], "offset0": [[589, "offset0"]], "offset1": [[589, "offset1"]], "offset11": [[589, "offset11"]], "offset12": [[589, "offset12"], [589, "amdgpu-synid-buf-offset12"]], "offset12s": [[589, "offset12s"]], "offset13s": [[589, "offset13s"]], "omod": [[589, "omod"], [589, "amdgpu-synid-omod"]], "op_sel": [[589, "op-sel"], [589, "amdgpu-synid-op-sel"]], "op_sel_hi": [[589, "op-sel-hi"]], "opt": [[28, null], [130, null], [221, null], [340, null], [379, null], [491, null]], "opt - LLVM optimizer": [[659, null]], "opt-diff.py": [[759, "opt-diff-py"]], "opt-stats.py": [[759, "opt-stats-py"]], "opt-viewer": [[759, "opt-viewer"]], "opt-viewer.py": [[759, "opt-viewer-py"]], "param": [[29, null], [131, null], [222, null], [492, null]], "pdb2yaml": [[645, "pdb2yaml"]], "pretty": [[645, "pretty"]], "probe": [[30, null], [223, null], [380, null], [493, null]], "ptxas complains of undefined function: __nvvm_reflect": [[729, "ptxas-complains-of-undefined-function-nvvm-reflect"]], "r128": [[589, "r128"]], "rawspeed": [[752, "rawspeed"]], "row_mask": [[589, "row-mask"]], "runOnModule": [[727, "runonmodule"]], "s": [[590, "s"]], "saddr": [[31, null], [32, null], [341, null], [381, null], [382, null], [494, null], [495, null]], "sbase": [[33, null], [34, null], [35, null], [132, null], [133, null], [224, null], [225, null], [383, null], [384, null], [385, null], [496, null], [497, null], [498, null]], "scc": [[590, "scc"]], "sdata": [[36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [226, null], [227, null], [228, null], [386, null], [387, null], [388, null], [389, null], [390, null], [391, null], [499, null], [500, null], [501, null], [502, null], [503, null], [504, null]], "sdst": [[42, null], [43, null], [44, null], [45, null], [46, null], [47, null], [48, null], [49, null], [50, null], [134, null], [135, null], [136, null], [137, null], [138, null], [139, null], [140, null], [141, null], [229, null], [230, null], [231, null], [232, null], [233, null], [234, null], [235, null], [236, null], [392, null], [393, null], [394, null], [395, null], [396, null], [397, null], [398, null], [399, null], [505, null], [506, null], [507, null], [508, null], [509, null], [510, null], [511, null], [512, null]], "sext": [[589, "sext"]], "simm21": [[590, "simm21"]], "simm32": [[51, null], [52, null], [53, null], [142, null], [143, null], [237, null], [238, null], [239, null], [400, null], [401, null], [402, null], [513, null], [514, null], [515, null]], "slc": [[589, "slc"], [589, "id2"], [589, "amdgpu-synid-slc"], [589, "id13"]], "soffset": [[54, null], [55, null], [56, null], [144, null], [145, null], [240, null], [241, null], [242, null], [342, null], [403, null], [404, null], [405, null], [516, null], [517, null], [518, null]], "src": [[10, null], [11, null], [12, null], [13, null], [57, null], [58, null], [59, null], [60, null], [61, null], [62, null], [63, null], [64, null], [65, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [243, null], [244, null], [245, null], [246, null], [247, null], [248, null], [249, null], [250, null], [251, null], [252, null], [253, null], [317, null], [318, null], [322, null], [323, null], [328, null], [329, null], [330, null], [331, null], [332, null], [343, null], [344, null], [345, null], [346, null], [347, null], [348, null], [406, null], [407, null], [408, null], [409, null], [410, null], [411, null], [412, null], [413, null], [414, null], [415, null], [416, null], [417, null], [519, null], [520, null], [521, null], [522, null], [523, null], [524, null], [525, null], [526, null], [527, null], [528, null], [529, null]], "src0_sel": [[589, "src0-sel"]], "src1_sel": [[589, "src1-sel"]], "srsrc": [[66, null], [67, null], [157, null], [158, null], [254, null], [255, null], [349, null], [418, null], [419, null], [530, null], [531, null]], "ssamp": [[68, null], [159, null], [256, null], [420, null], [532, null]], "ssrc": [[69, null], [70, null], [71, null], [72, null], [73, null], [74, null], [75, null], [76, null], [77, null], [160, null], [161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [169, null], [170, null], [257, null], [258, null], [259, null], [260, null], [261, null], [262, null], [263, null], [264, null], [265, null], [421, null], [422, null], [423, null], [424, null], [425, null], [426, null], [427, null], [428, null], [429, null], [533, null], [534, null], [535, null], [536, null], [537, null], [538, null], [539, null], [540, null], [541, null]], "std::string": [[749, "std-string"]], "switch statement": [[600, "switch-statement"], [600, "id2"]], "swizzle pattern": [[589, "swizzle-pattern"]], "tba": [[590, "tba"]], "tblgen - Description to C++ Code": [[660, null]], "test-release.sh": [[758, "test-release-sh"]], "test-suite": [[683, "test-suite"], [781, "test-suite"]], "test-suite Guide": [[779, null]], "test-suite Makefile Guide (deprecated)": [[780, null]], "tfe": [[589, "tfe"], [589, "id3"], [589, "amdgpu-synid-tfe"], [589, "id16"]], "tgt": [[78, null], [171, null], [266, null], [542, null]], "tma": [[590, "tma"]], "trap": [[590, "trap"]], "ttmp": [[590, "ttmp"]], "ufmt": [[589, "ufmt"]], "uimm20": [[590, "uimm20"]], "uimm32": [[590, "uimm32"]], "uimm8": [[590, "uimm8"]], "unorm": [[589, "unorm"]], "v": [[590, "v"]], "vaddr": [[80, null], [81, null], [82, null], [83, null], [84, null], [85, null], [173, null], [174, null], [175, null], [176, null], [268, null], [269, null], [270, null], [271, null], [351, null], [352, null], [431, null], [432, null], [433, null], [434, null], [435, null], [436, null], [544, null], [545, null], [546, null], [547, null], [548, null], [549, null]], "vcc": [[86, null], [177, null], [272, null], [437, null], [550, null], [590, "vcc"]], "vccz": [[590, "vccz"]], "vdata": [[87, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [100, null], [101, null], [178, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [273, null], [278, null], [279, null], [280, null], [281, null], [282, null], [283, null], [284, null], [285, null], [286, null], [287, null], [288, null], [289, null], [290, null], [291, null], [353, null], [354, null], [438, null], [443, null], [444, null], [445, null], [446, null], [447, null], [448, null], [449, null], [450, null], [451, null], [452, null], [551, null], [556, null], [557, null], [558, null], [559, null], [560, null], [561, null], [562, null], [563, null], [564, null], [565, null]], "vdata0": [[88, null], [89, null], [179, null], [180, null], [274, null], [275, null], [439, null], [440, null], [552, null], [553, null]], "vdata1": [[90, null], [91, null], [181, null], [182, null], [276, null], [277, null], [441, null], [442, null], [554, null], [555, null]], "vdst": [[15, null], [102, null], [103, null], [104, null], [105, null], [106, null], [107, null], [108, null], [109, null], [110, null], [111, null], [112, null], [113, null], [114, null], [115, null], [192, null], [193, null], [194, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [292, null], [293, null], [294, null], [295, null], [296, null], [297, null], [298, null], [299, null], [300, null], [301, null], [302, null], [303, null], [304, null], [305, null], [306, null], [307, null], [308, null], [309, null], [319, null], [324, null], [334, null], [355, null], [356, null], [357, null], [358, null], [359, null], [360, null], [453, null], [454, null], [455, null], [456, null], [457, null], [458, null], [459, null], [460, null], [461, null], [462, null], [463, null], [464, null], [465, null], [466, null], [467, null], [468, null], [469, null], [470, null], [471, null], [472, null], [566, null], [567, null], [568, null], [569, null], [570, null], [571, null], [572, null], [573, null], [574, null], [575, null], [576, null], [577, null], [578, null], [579, null]], "vecmathlib tests harness": [[752, "vecmathlib-tests-harness"]], "vm": [[589, "vm"]], "vsrc": [[16, null], [116, null], [117, null], [118, null], [119, null], [205, null], [206, null], [207, null], [208, null], [310, null], [311, null], [312, null], [313, null], [335, null], [361, null], [362, null], [363, null], [364, null], [365, null], [366, null], [367, null], [473, null], [474, null], [475, null], [476, null], [477, null], [478, null], [580, null], [581, null], [582, null], [583, null]], "waitcnt": [[120, null], [209, null], [314, null], [479, null], [584, null]], "x86 Implementation Details": [[766, "x86-implementation-details"]], "xnack_mask": [[590, "xnack-mask"]], "yaml2obj": [[820, null]], "yaml2pdb": [[645, "yaml2pdb"]], "\u00ab\u00a0More Canonical\u00a0\u00bb Loops": [[719, "more-canonical-loops"]], "\u00ab\u00a0Quirky\u00a0\u00bb Interface": [[603, "quirky-interface"]], "\u00c0 faire": [[591, "id10"], [591, "id12"], [591, "id16"], [591, "id17"], [591, "id18"], [591, "id20"], [591, "id22"], [591, "id23"], [591, "id24"], [591, "id25"], [591, "id31"], [591, "id42"], [591, "id47"], [591, "id48"], [591, "id50"], [591, "id53"], [591, "id54"], [591, "id55"], [591, "id56"], [591, "id58"], [591, "id59"], [591, "id60"], [591, "id70"], [591, "id71"], [591, "id72"], [591, "id73"], [591, "id74"], [591, "id75"], [591, "id76"], [591, "id77"], [591, "id78"], [591, "id79"], [606, "id3"], [661, "id8"], [661, "id9"], [708, "id1"], [810, "id1"]], "\u00c0 propos": [[793, null]], "\u201cabsolute_symbol\u201d Metadata": [[715, "absolute-symbol-metadata"]], "\u201caddrspacecast .. to\u201d Instruction": [[715, "addrspacecast-to-instruction"]], "\u201cadd\u201d Instruction": [[715, "add-instruction"]], "\u201calloca\u201d Instruction": [[715, "alloca-instruction"]], "\u201cand\u201d Instruction": [[715, "and-instruction"]], "\u201cannotation\u201d Metadata": [[715, "annotation-metadata"]], "\u201cashr\u201d Instruction": [[715, "ashr-instruction"]], "\u201cassociated\u201d Metadata": [[715, "associated-metadata"]], "\u201catomicrmw\u201d Instruction": [[715, "atomicrmw-instruction"]], "\u201cbitcast .. to\u201d Instruction": [[715, "bitcast-to-instruction"]], "\u201cbr\u201d Instruction": [[715, "br-instruction"]], "\u201ccallback\u201d Metadata": [[715, "callback-metadata"]], "\u201ccallbr\u201d Instruction": [[715, "callbr-instruction"]], "\u201ccallees\u201d Metadata": [[715, "callees-metadata"]], "\u201ccall\u201d Instruction": [[715, "call-instruction"]], "\u201ccatchpad\u201d Instruction": [[715, "catchpad-instruction"]], "\u201ccatchret\u201d Instruction": [[715, "catchret-instruction"]], "\u201ccatchswitch\u201d Instruction": [[715, "catchswitch-instruction"]], "\u201ccleanuppad\u201d Instruction": [[715, "cleanuppad-instruction"]], "\u201ccleanupret\u201d Instruction": [[715, "cleanupret-instruction"]], "\u201ccmpxchg\u201d Instruction": [[715, "cmpxchg-instruction"]], "\u201cdereferenceable_or_null\u201d Metadata": [[715, "dereferenceable-or-null-metadata"]], "\u201cdereferenceable\u201d Metadata": [[715, "dereferenceable-metadata"]], "\u201cextractelement\u201d Instruction": [[715, "extractelement-instruction"]], "\u201cextractvalue\u201d Instruction": [[715, "extractvalue-instruction"]], "\u201cfadd\u201d Instruction": [[715, "fadd-instruction"]], "\u201cfcmp\u201d Instruction": [[715, "fcmp-instruction"]], "\u201cfdiv\u201d Instruction": [[715, "fdiv-instruction"]], "\u201cfence\u201d Instruction": [[715, "fence-instruction"]], "\u201cfmul\u201d Instruction": [[715, "fmul-instruction"]], "\u201cfneg\u201d Instruction": [[715, "fneg-instruction"]], "\u201cfor\u201d Loop Expression": [[812, "for-loop-expression"]], "\u201cfpext .. to\u201d Instruction": [[715, "fpext-to-instruction"]], "\u201cfpmath\u201d Metadata": [[715, "fpmath-metadata"]], "\u201cfptosi .. to\u201d Instruction": [[715, "fptosi-to-instruction"]], "\u201cfptoui .. to\u201d Instruction": [[715, "fptoui-to-instruction"]], "\u201cfptrunc .. to\u201d Instruction": [[715, "fptrunc-to-instruction"]], "\u201cfreeze\u201d Instruction": [[715, "freeze-instruction"]], "\u201cfrem\u201d Instruction": [[715, "frem-instruction"]], "\u201cfsub\u201d Instruction": [[715, "fsub-instruction"]], "\u201cgetelementptr\u201d Instruction": [[715, "getelementptr-instruction"]], "\u201cicmp\u201d Instruction": [[715, "icmp-instruction"]], "\u201cindirectbr\u201d Instruction": [[715, "indirectbr-instruction"]], "\u201cinsertelement\u201d Instruction": [[715, "insertelement-instruction"]], "\u201cinsertvalue\u201d Instruction": [[715, "insertvalue-instruction"]], "\u201cinttoptr .. to\u201d Instruction": [[715, "inttoptr-to-instruction"]], "\u201cinvariant.group\u201d Metadata": [[715, "invariant-group-metadata"]], "\u201cinvoke\u201d Instruction": [[715, "invoke-instruction"]], "\u201cirr_loop\u201d Metadata": [[715, "irr-loop-metadata"]], "\u201clandingpad\u201d Instruction": [[715, "landingpad-instruction"]], "\u201cllvm.abs.*\u201d Intrinsic": [[715, "llvm-abs-intrinsic"]], "\u201cllvm.access.group\u201d Metadata": [[715, "llvm-access-group-metadata"]], "\u201cllvm.addressofreturnaddress\u201d Intrinsic": [[715, "llvm-addressofreturnaddress-intrinsic"]], "\u201cllvm.adjust.trampoline\u201d Intrinsic": [[715, "llvm-adjust-trampoline-intrinsic"]], "\u201cllvm.annotation.*\u201d Intrinsic": [[715, "llvm-annotation-intrinsic"]], "\u201cllvm.arithmetic.fence\u201d Intrinsic": [[715, "llvm-arithmetic-fence-intrinsic"]], "\u201cllvm.assume\u201d Intrinsic": [[715, "llvm-assume-intrinsic"]], "\u201cllvm.bitreverse.*\u201d Intrinsics": [[715, "llvm-bitreverse-intrinsics"]], "\u201cllvm.bswap.*\u201d Intrinsics": [[715, "llvm-bswap-intrinsics"]], "\u201cllvm.call.preallocated.arg\u201d Intrinsic": [[715, "llvm-call-preallocated-arg-intrinsic"]], "\u201cllvm.call.preallocated.setup\u201d Intrinsic": [[715, "llvm-call-preallocated-setup-intrinsic"]], "\u201cllvm.call.preallocated.teardown\u201d Intrinsic": [[715, "llvm-call-preallocated-teardown-intrinsic"]], "\u201cllvm.canonicalize.*\u201d Intrinsic": [[715, "llvm-canonicalize-intrinsic"]], "\u201cllvm.ceil.*\u201d Intrinsic": [[715, "llvm-ceil-intrinsic"]], "\u201cllvm.clear_cache\u201d Intrinsic": [[715, "llvm-clear-cache-intrinsic"]], "\u201cllvm.codeview.annotation\u201d Intrinsic": [[715, "llvm-codeview-annotation-intrinsic"]], "\u201cllvm.convert.from.fp16\u201d Intrinsic": [[715, "llvm-convert-from-fp16-intrinsic"]], "\u201cllvm.convert.to.fp16\u201d Intrinsic": [[715, "llvm-convert-to-fp16-intrinsic"]], "\u201cllvm.copysign.*\u201d Intrinsic": [[715, "llvm-copysign-intrinsic"]], "\u201cllvm.coro.align\u201d Intrinsic": [[665, "llvm-coro-align-intrinsic"]], "\u201cllvm.coro.alloc\u201d Intrinsic": [[665, "llvm-coro-alloc-intrinsic"]], "\u201cllvm.coro.begin\u201d Intrinsic": [[665, "llvm-coro-begin-intrinsic"]], "\u201cllvm.coro.destroy\u201d Intrinsic": [[665, "llvm-coro-destroy-intrinsic"]], "\u201cllvm.coro.done\u201d Intrinsic": [[665, "llvm-coro-done-intrinsic"]], "\u201cllvm.coro.end.async\u201d Intrinsic": [[665, "llvm-coro-end-async-intrinsic"]], "\u201cllvm.coro.end\u201d Intrinsic": [[665, "llvm-coro-end-intrinsic"]], "\u201cllvm.coro.frame\u201d Intrinsic": [[665, "llvm-coro-frame-intrinsic"]], "\u201cllvm.coro.free\u201d Intrinsic": [[665, "llvm-coro-free-intrinsic"]], "\u201cllvm.coro.id.async\u201d Intrinsic": [[665, "llvm-coro-id-async-intrinsic"]], "\u201cllvm.coro.id.retcon.once\u201d Intrinsic": [[665, "llvm-coro-id-retcon-once-intrinsic"]], "\u201cllvm.coro.id.retcon\u201d Intrinsic": [[665, "llvm-coro-id-retcon-intrinsic"]], "\u201cllvm.coro.id\u201d Intrinsic": [[665, "llvm-coro-id-intrinsic"]], "\u201cllvm.coro.noop\u201d Intrinsic": [[665, "llvm-coro-noop-intrinsic"]], "\u201cllvm.coro.prepare.async\u201d Intrinsic": [[665, "llvm-coro-prepare-async-intrinsic"]], "\u201cllvm.coro.promise\u201d Intrinsic": [[665, "llvm-coro-promise-intrinsic"]], "\u201cllvm.coro.resume\u201d Intrinsic": [[665, "llvm-coro-resume-intrinsic"]], "\u201cllvm.coro.save\u201d Intrinsic": [[665, "llvm-coro-save-intrinsic"]], "\u201cllvm.coro.size\u201d Intrinsic": [[665, "llvm-coro-size-intrinsic"]], "\u201cllvm.coro.suspend.async\u201d Intrinsic": [[665, "llvm-coro-suspend-async-intrinsic"]], "\u201cllvm.coro.suspend.retcon\u201d Intrinsic": [[665, "llvm-coro-suspend-retcon-intrinsic"]], "\u201cllvm.coro.suspend\u201d Intrinsic": [[665, "llvm-coro-suspend-intrinsic"]], "\u201cllvm.cos.*\u201d Intrinsic": [[715, "llvm-cos-intrinsic"]], "\u201cllvm.ctlz.*\u201d Intrinsic": [[715, "llvm-ctlz-intrinsic"]], "\u201cllvm.ctpop.*\u201d Intrinsic": [[715, "llvm-ctpop-intrinsic"]], "\u201cllvm.cttz.*\u201d Intrinsic": [[715, "llvm-cttz-intrinsic"]], "\u201cllvm.debugtrap\u201d Intrinsic": [[715, "llvm-debugtrap-intrinsic"]], "\u201cllvm.donothing\u201d Intrinsic": [[715, "llvm-donothing-intrinsic"]], "\u201cllvm.exp.*\u201d Intrinsic": [[715, "llvm-exp-intrinsic"]], "\u201cllvm.exp2.*\u201d Intrinsic": [[715, "llvm-exp2-intrinsic"]], "\u201cllvm.expect.with.probability\u201d Intrinsic": [[715, "llvm-expect-with-probability-intrinsic"]], "\u201cllvm.expect\u201d Intrinsic": [[715, "llvm-expect-intrinsic"]], "\u201cllvm.experimental.constrained.ceil\u201d Intrinsic": [[715, "llvm-experimental-constrained-ceil-intrinsic"]], "\u201cllvm.experimental.constrained.cos\u201d Intrinsic": [[715, "llvm-experimental-constrained-cos-intrinsic"]], "\u201cllvm.experimental.constrained.exp2\u201d Intrinsic": [[715, "llvm-experimental-constrained-exp2-intrinsic"]], "\u201cllvm.experimental.constrained.exp\u201d Intrinsic": [[715, "llvm-experimental-constrained-exp-intrinsic"]], "\u201cllvm.experimental.constrained.fadd\u201d Intrinsic": [[715, "llvm-experimental-constrained-fadd-intrinsic"]], "\u201cllvm.experimental.constrained.fcmp\u201d and \u201cllvm.experimental.constrained.fcmps\u201d Intrinsics": [[715, "llvm-experimental-constrained-fcmp-and-llvm-experimental-constrained-fcmps-intrinsics"]], "\u201cllvm.experimental.constrained.fdiv\u201d Intrinsic": [[715, "llvm-experimental-constrained-fdiv-intrinsic"]], "\u201cllvm.experimental.constrained.floor\u201d Intrinsic": [[715, "llvm-experimental-constrained-floor-intrinsic"]], "\u201cllvm.experimental.constrained.fma\u201d Intrinsic": [[715, "llvm-experimental-constrained-fma-intrinsic"]], "\u201cllvm.experimental.constrained.fmuladd\u201d Intrinsic": [[715, "llvm-experimental-constrained-fmuladd-intrinsic"]], "\u201cllvm.experimental.constrained.fmul\u201d Intrinsic": [[715, "llvm-experimental-constrained-fmul-intrinsic"]], "\u201cllvm.experimental.constrained.fpext\u201d Intrinsic": [[715, "llvm-experimental-constrained-fpext-intrinsic"]], "\u201cllvm.experimental.constrained.fptosi\u201d Intrinsic": [[715, "llvm-experimental-constrained-fptosi-intrinsic"]], "\u201cllvm.experimental.constrained.fptoui\u201d Intrinsic": [[715, "llvm-experimental-constrained-fptoui-intrinsic"]], "\u201cllvm.experimental.constrained.fptrunc\u201d Intrinsic": [[715, "llvm-experimental-constrained-fptrunc-intrinsic"]], "\u201cllvm.experimental.constrained.frem\u201d Intrinsic": [[715, "llvm-experimental-constrained-frem-intrinsic"]], "\u201cllvm.experimental.constrained.fsub\u201d Intrinsic": [[715, "llvm-experimental-constrained-fsub-intrinsic"]], "\u201cllvm.experimental.constrained.llrint\u201d Intrinsic": [[715, "llvm-experimental-constrained-llrint-intrinsic"]], "\u201cllvm.experimental.constrained.llround\u201d Intrinsic": [[715, "llvm-experimental-constrained-llround-intrinsic"]], "\u201cllvm.experimental.constrained.log10\u201d Intrinsic": [[715, "llvm-experimental-constrained-log10-intrinsic"]], "\u201cllvm.experimental.constrained.log2\u201d Intrinsic": [[715, "llvm-experimental-constrained-log2-intrinsic"]], "\u201cllvm.experimental.constrained.log\u201d Intrinsic": [[715, "llvm-experimental-constrained-log-intrinsic"]], "\u201cllvm.experimental.constrained.lrint\u201d Intrinsic": [[715, "llvm-experimental-constrained-lrint-intrinsic"]], "\u201cllvm.experimental.constrained.lround\u201d Intrinsic": [[715, "llvm-experimental-constrained-lround-intrinsic"]], "\u201cllvm.experimental.constrained.maximum\u201d Intrinsic": [[715, "llvm-experimental-constrained-maximum-intrinsic"]], "\u201cllvm.experimental.constrained.maxnum\u201d Intrinsic": [[715, "llvm-experimental-constrained-maxnum-intrinsic"]], "\u201cllvm.experimental.constrained.minimum\u201d Intrinsic": [[715, "llvm-experimental-constrained-minimum-intrinsic"]], "\u201cllvm.experimental.constrained.minnum\u201d Intrinsic": [[715, "llvm-experimental-constrained-minnum-intrinsic"]], "\u201cllvm.experimental.constrained.nearbyint\u201d Intrinsic": [[715, "llvm-experimental-constrained-nearbyint-intrinsic"]], "\u201cllvm.experimental.constrained.powi\u201d Intrinsic": [[715, "llvm-experimental-constrained-powi-intrinsic"]], "\u201cllvm.experimental.constrained.pow\u201d Intrinsic": [[715, "llvm-experimental-constrained-pow-intrinsic"]], "\u201cllvm.experimental.constrained.rint\u201d Intrinsic": [[715, "llvm-experimental-constrained-rint-intrinsic"]], "\u201cllvm.experimental.constrained.roundeven\u201d Intrinsic": [[715, "llvm-experimental-constrained-roundeven-intrinsic"]], "\u201cllvm.experimental.constrained.round\u201d Intrinsic": [[715, "llvm-experimental-constrained-round-intrinsic"]], "\u201cllvm.experimental.constrained.sin\u201d Intrinsic": [[715, "llvm-experimental-constrained-sin-intrinsic"]], "\u201cllvm.experimental.constrained.sitofp\u201d Intrinsic": [[715, "llvm-experimental-constrained-sitofp-intrinsic"]], "\u201cllvm.experimental.constrained.sqrt\u201d Intrinsic": [[715, "llvm-experimental-constrained-sqrt-intrinsic"]], "\u201cllvm.experimental.constrained.trunc\u201d Intrinsic": [[715, "llvm-experimental-constrained-trunc-intrinsic"]], "\u201cllvm.experimental.constrained.uitofp\u201d Intrinsic": [[715, "llvm-experimental-constrained-uitofp-intrinsic"]], "\u201cllvm.experimental.deoptimize\u201d Intrinsic": [[715, "llvm-experimental-deoptimize-intrinsic"]], "\u201cllvm.experimental.gc.get.pointer.base\u201d Intrinsic": [[715, "llvm-experimental-gc-get-pointer-base-intrinsic"]], "\u201cllvm.experimental.gc.get.pointer.offset\u201d Intrinsic": [[715, "llvm-experimental-gc-get-pointer-offset-intrinsic"]], "\u201cllvm.experimental.gc.relocate\u201d Intrinsic": [[715, "llvm-experimental-gc-relocate-intrinsic"]], "\u201cllvm.experimental.gc.result\u201d Intrinsic": [[715, "llvm-experimental-gc-result-intrinsic"]], "\u201cllvm.experimental.gc.statepoint\u201d Intrinsic": [[715, "llvm-experimental-gc-statepoint-intrinsic"]], "\u201cllvm.experimental.guard\u201d Intrinsic": [[715, "llvm-experimental-guard-intrinsic"]], "\u201cllvm.experimental.noalias.scope.decl\u201d Intrinsic": [[715, "llvm-experimental-noalias-scope-decl-intrinsic"]], "\u201cllvm.experimental.patchpoint.*\u201d Intrinsic": [[768, "llvm-experimental-patchpoint-intrinsic"]], "\u201cllvm.experimental.stackmap\u201d Intrinsic": [[768, "llvm-experimental-stackmap-intrinsic"]], "\u201cllvm.experimental.stepvector\u201d Intrinsic": [[715, "llvm-experimental-stepvector-intrinsic"]], "\u201cllvm.experimental.vector.extract\u201d Intrinsic": [[715, "llvm-experimental-vector-extract-intrinsic"]], "\u201cllvm.experimental.vector.insert\u201d Intrinsic": [[715, "llvm-experimental-vector-insert-intrinsic"]], "\u201cllvm.experimental.vector.reverse\u201d Intrinsic": [[715, "llvm-experimental-vector-reverse-intrinsic"]], "\u201cllvm.experimental.vector.splice\u201d Intrinsic": [[715, "llvm-experimental-vector-splice-intrinsic"]], "\u201cllvm.experimental.vp.splice\u201d Intrinsic": [[715, "llvm-experimental-vp-splice-intrinsic"]], "\u201cllvm.experimental.widenable.condition\u201d Intrinsic": [[715, "llvm-experimental-widenable-condition-intrinsic"]], "\u201cllvm.fabs.*\u201d Intrinsic": [[715, "llvm-fabs-intrinsic"]], "\u201cllvm.floor.*\u201d Intrinsic": [[715, "llvm-floor-intrinsic"]], "\u201cllvm.flt.rounds\u201d Intrinsic": [[715, "llvm-flt-rounds-intrinsic"]], "\u201cllvm.fma.*\u201d Intrinsic": [[715, "llvm-fma-intrinsic"]], "\u201cllvm.fmuladd.*\u201d Intrinsic": [[715, "llvm-fmuladd-intrinsic"]], "\u201cllvm.fptosi.sat.*\u201d Intrinsic": [[715, "llvm-fptosi-sat-intrinsic"]], "\u201cllvm.fptoui.sat.*\u201d Intrinsic": [[715, "llvm-fptoui-sat-intrinsic"]], "\u201cllvm.frameaddress\u201d Intrinsic": [[715, "llvm-frameaddress-intrinsic"]], "\u201cllvm.fshl.*\u201d Intrinsic": [[715, "llvm-fshl-intrinsic"]], "\u201cllvm.fshr.*\u201d Intrinsic": [[715, "llvm-fshr-intrinsic"]], "\u201cllvm.gcread\u201d Intrinsic": [[715, "llvm-gcread-intrinsic"]], "\u201cllvm.gcroot\u201d Intrinsic": [[715, "llvm-gcroot-intrinsic"]], "\u201cllvm.gcwrite\u201d Intrinsic": [[715, "llvm-gcwrite-intrinsic"]], "\u201cllvm.get.active.lane.mask.*\u201d Intrinsics": [[715, "llvm-get-active-lane-mask-intrinsics"]], "\u201cllvm.get.dynamic.area.offset\u201d Intrinsic": [[715, "llvm-get-dynamic-area-offset-intrinsic"]], "\u201cllvm.init.trampoline\u201d Intrinsic": [[715, "llvm-init-trampoline-intrinsic"]], "\u201cllvm.instrprof.cover\u201d Intrinsic": [[715, "llvm-instrprof-cover-intrinsic"]], "\u201cllvm.instrprof.increment.step\u201d Intrinsic": [[715, "llvm-instrprof-increment-step-intrinsic"]], "\u201cllvm.instrprof.increment\u201d Intrinsic": [[715, "llvm-instrprof-increment-intrinsic"]], "\u201cllvm.instrprof.value.profile\u201d Intrinsic": [[715, "llvm-instrprof-value-profile-intrinsic"]], "\u201cllvm.invariant.end\u201d Intrinsic": [[715, "llvm-invariant-end-intrinsic"]], "\u201cllvm.invariant.start\u201d Intrinsic": [[715, "llvm-invariant-start-intrinsic"]], "\u201cllvm.is.constant.*\u201d Intrinsic": [[715, "llvm-is-constant-intrinsic"]], "\u201cllvm.launder.invariant.group\u201d Intrinsic": [[715, "llvm-launder-invariant-group-intrinsic"]], "\u201cllvm.licm.disable\u201d Metadata": [[715, "llvm-licm-disable-metadata"]], "\u201cllvm.lifetime.end\u201d Intrinsic": [[715, "llvm-lifetime-end-intrinsic"]], "\u201cllvm.lifetime.start\u201d Intrinsic": [[715, "llvm-lifetime-start-intrinsic"]], "\u201cllvm.llrint.*\u201d Intrinsic": [[715, "llvm-llrint-intrinsic"]], "\u201cllvm.llround.*\u201d Intrinsic": [[715, "llvm-llround-intrinsic"]], "\u201cllvm.load.relative\u201d Intrinsic": [[715, "llvm-load-relative-intrinsic"]], "\u201cllvm.localescape\u201d and \u201cllvm.localrecover\u201d Intrinsics": [[715, "llvm-localescape-and-llvm-localrecover-intrinsics"]], "\u201cllvm.log.*\u201d Intrinsic": [[715, "llvm-log-intrinsic"]], "\u201cllvm.log10.*\u201d Intrinsic": [[715, "llvm-log10-intrinsic"]], "\u201cllvm.log2.*\u201d Intrinsic": [[715, "llvm-log2-intrinsic"]], "\u201cllvm.loop.decrement.*\u201d Intrinsic": [[715, "llvm-loop-decrement-intrinsic"]], "\u201cllvm.loop.decrement.reg.*\u201d Intrinsic": [[715, "llvm-loop-decrement-reg-intrinsic"]], "\u201cllvm.loop.disable_nonforced\u201d": [[715, "llvm-loop-disable-nonforced"]], "\u201cllvm.loop.distribute.enable\u201d Metadata": [[715, "llvm-loop-distribute-enable-metadata"]], "\u201cllvm.loop.distribute.followup_all\u201d Metadata": [[715, "llvm-loop-distribute-followup-all-metadata"]], "\u201cllvm.loop.distribute.followup_coincident\u201d Metadata": [[715, "llvm-loop-distribute-followup-coincident-metadata"]], "\u201cllvm.loop.distribute.followup_fallback\u201d Metadata": [[715, "llvm-loop-distribute-followup-fallback-metadata"]], "\u201cllvm.loop.distribute.followup_sequential\u201d Metadata": [[715, "llvm-loop-distribute-followup-sequential-metadata"]], "\u201cllvm.loop.interleave.count\u201d Metadata": [[715, "llvm-loop-interleave-count-metadata"]], "\u201cllvm.loop.licm_versioning.disable\u201d Metadata": [[715, "llvm-loop-licm-versioning-disable-metadata"]], "\u201cllvm.loop.mustprogress\u201d Metadata": [[715, "llvm-loop-mustprogress-metadata"]], "\u201cllvm.loop.parallel_accesses\u201d Metadata": [[715, "llvm-loop-parallel-accesses-metadata"]], "\u201cllvm.loop.unroll.count\u201d Metadata": [[715, "llvm-loop-unroll-count-metadata"]], "\u201cllvm.loop.unroll.disable\u201d Metadata": [[715, "llvm-loop-unroll-disable-metadata"]], "\u201cllvm.loop.unroll.enable\u201d Metadata": [[715, "llvm-loop-unroll-enable-metadata"]], "\u201cllvm.loop.unroll.followup_remainder\u201d Metadata": [[715, "llvm-loop-unroll-followup-remainder-metadata"]], "\u201cllvm.loop.unroll.followup\u201d Metadata": [[715, "llvm-loop-unroll-followup-metadata"]], "\u201cllvm.loop.unroll.full\u201d Metadata": [[715, "llvm-loop-unroll-full-metadata"]], "\u201cllvm.loop.unroll.runtime.disable\u201d Metadata": [[715, "llvm-loop-unroll-runtime-disable-metadata"]], "\u201cllvm.loop.unroll_and_jam.count\u201d Metadata": [[715, "llvm-loop-unroll-and-jam-count-metadata"]], "\u201cllvm.loop.unroll_and_jam.disable\u201d Metadata": [[715, "llvm-loop-unroll-and-jam-disable-metadata"]], "\u201cllvm.loop.unroll_and_jam.enable\u201d Metadata": [[715, "llvm-loop-unroll-and-jam-enable-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_all\u201d Metadata": [[715, "llvm-loop-unroll-and-jam-followup-all-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_inner\u201d Metadata": [[715, "llvm-loop-unroll-and-jam-followup-inner-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_outer\u201d Metadata": [[715, "llvm-loop-unroll-and-jam-followup-outer-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_remainder_inner\u201d Metadata": [[715, "llvm-loop-unroll-and-jam-followup-remainder-inner-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_remainder_outer\u201d Metadata": [[715, "llvm-loop-unroll-and-jam-followup-remainder-outer-metadata"]], "\u201cllvm.loop.unroll_and_jam\u201d": [[715, "llvm-loop-unroll-and-jam"]], "\u201cllvm.loop.unroll\u201d": [[715, "llvm-loop-unroll"]], "\u201cllvm.loop.vectorize.enable\u201d Metadata": [[715, "llvm-loop-vectorize-enable-metadata"]], "\u201cllvm.loop.vectorize.followup_all\u201d Metadata": [[715, "llvm-loop-vectorize-followup-all-metadata"]], "\u201cllvm.loop.vectorize.followup_epilogue\u201d Metadata": [[715, "llvm-loop-vectorize-followup-epilogue-metadata"]], "\u201cllvm.loop.vectorize.followup_vectorized\u201d Metadata": [[715, "llvm-loop-vectorize-followup-vectorized-metadata"]], "\u201cllvm.loop.vectorize.predicate.enable\u201d Metadata": [[715, "llvm-loop-vectorize-predicate-enable-metadata"]], "\u201cllvm.loop.vectorize.scalable.enable\u201d Metadata": [[715, "llvm-loop-vectorize-scalable-enable-metadata"]], "\u201cllvm.loop.vectorize.width\u201d Metadata": [[715, "llvm-loop-vectorize-width-metadata"]], "\u201cllvm.loop.vectorize\u201d and \u201cllvm.loop.interleave\u201d": [[715, "llvm-loop-vectorize-and-llvm-loop-interleave"]], "\u201cllvm.loop\u201d": [[715, "llvm-loop"]], "\u201cllvm.lrint.*\u201d Intrinsic": [[715, "llvm-lrint-intrinsic"]], "\u201cllvm.lround.*\u201d Intrinsic": [[715, "llvm-lround-intrinsic"]], "\u201cllvm.masked.compressstore.*\u201d Intrinsics": [[715, "llvm-masked-compressstore-intrinsics"]], "\u201cllvm.masked.expandload.*\u201d Intrinsics": [[715, "llvm-masked-expandload-intrinsics"]], "\u201cllvm.masked.gather.*\u201d Intrinsics": [[715, "llvm-masked-gather-intrinsics"]], "\u201cllvm.masked.load.*\u201d Intrinsics": [[715, "llvm-masked-load-intrinsics"]], "\u201cllvm.masked.scatter.*\u201d Intrinsics": [[715, "llvm-masked-scatter-intrinsics"]], "\u201cllvm.masked.store.*\u201d Intrinsics": [[715, "llvm-masked-store-intrinsics"]], "\u201cllvm.matrix.column.major.load.*\u201d Intrinsic": [[715, "llvm-matrix-column-major-load-intrinsic"]], "\u201cllvm.matrix.column.major.store.*\u201d Intrinsic": [[715, "llvm-matrix-column-major-store-intrinsic"]], "\u201cllvm.matrix.multiply.*\u201d Intrinsic": [[715, "llvm-matrix-multiply-intrinsic"]], "\u201cllvm.matrix.transpose.*\u201d Intrinsic": [[715, "llvm-matrix-transpose-intrinsic"]], "\u201cllvm.maximum.*\u201d Intrinsic": [[715, "llvm-maximum-intrinsic"]], "\u201cllvm.maxnum.*\u201d Intrinsic": [[715, "llvm-maxnum-intrinsic"]], "\u201cllvm.memcpy.element.unordered.atomic\u201d Intrinsic": [[715, "llvm-memcpy-element-unordered-atomic-intrinsic"]], "\u201cllvm.memcpy.inline\u201d Intrinsic": [[715, "llvm-memcpy-inline-intrinsic"]], "\u201cllvm.memcpy\u201d Intrinsic": [[715, "llvm-memcpy-intrinsic"]], "\u201cllvm.memmove.element.unordered.atomic\u201d Intrinsic": [[715, "llvm-memmove-element-unordered-atomic-intrinsic"]], "\u201cllvm.memmove\u201d Intrinsic": [[715, "llvm-memmove-intrinsic"]], "\u201cllvm.memset.*\u201d Intrinsics": [[715, "llvm-memset-intrinsics"]], "\u201cllvm.memset.element.unordered.atomic\u201d Intrinsic": [[715, "llvm-memset-element-unordered-atomic-intrinsic"]], "\u201cllvm.minimum.*\u201d Intrinsic": [[715, "llvm-minimum-intrinsic"]], "\u201cllvm.minnum.*\u201d Intrinsic": [[715, "llvm-minnum-intrinsic"]], "\u201cllvm.nearbyint.*\u201d Intrinsic": [[715, "llvm-nearbyint-intrinsic"]], "\u201cllvm.nvvm.barrier0\u201d": [[729, "llvm-nvvm-barrier0"]], "\u201cllvm.nvvm.ptr.*.to.gen\u201d Intrinsics": [[729, "llvm-nvvm-ptr-to-gen-intrinsics"]], "\u201cllvm.nvvm.ptr.gen.to.*\u201d Intrinsics": [[729, "llvm-nvvm-ptr-gen-to-intrinsics"]], "\u201cllvm.nvvm.read.ptx.sreg.*\u201d": [[729, "llvm-nvvm-read-ptx-sreg"]], "\u201cllvm.objc.autoreleasePoolPop\u201d Intrinsic": [[715, "llvm-objc-autoreleasepoolpop-intrinsic"]], "\u201cllvm.objc.autoreleasePoolPush\u201d Intrinsic": [[715, "llvm-objc-autoreleasepoolpush-intrinsic"]], "\u201cllvm.objc.autoreleaseReturnValue\u201d Intrinsic": [[715, "llvm-objc-autoreleasereturnvalue-intrinsic"]], "\u201cllvm.objc.autorelease\u201d Intrinsic": [[715, "llvm-objc-autorelease-intrinsic"]], "\u201cllvm.objc.copyWeak\u201d Intrinsic": [[715, "llvm-objc-copyweak-intrinsic"]], "\u201cllvm.objc.destroyWeak\u201d Intrinsic": [[715, "llvm-objc-destroyweak-intrinsic"]], "\u201cllvm.objc.initWeak\u201d Intrinsic": [[715, "llvm-objc-initweak-intrinsic"]], "\u201cllvm.objc.loadWeakRetained\u201d Intrinsic": [[715, "llvm-objc-loadweakretained-intrinsic"]], "\u201cllvm.objc.loadWeak\u201d Intrinsic": [[715, "llvm-objc-loadweak-intrinsic"]], "\u201cllvm.objc.moveWeak\u201d Intrinsic": [[715, "llvm-objc-moveweak-intrinsic"]], "\u201cllvm.objc.release\u201d Intrinsic": [[715, "llvm-objc-release-intrinsic"]], "\u201cllvm.objc.retainAutoreleaseReturnValue\u201d Intrinsic": [[715, "llvm-objc-retainautoreleasereturnvalue-intrinsic"]], "\u201cllvm.objc.retainAutoreleasedReturnValue\u201d Intrinsic": [[715, "llvm-objc-retainautoreleasedreturnvalue-intrinsic"]], "\u201cllvm.objc.retainAutorelease\u201d Intrinsic": [[715, "llvm-objc-retainautorelease-intrinsic"]], "\u201cllvm.objc.retainBlock\u201d Intrinsic": [[715, "llvm-objc-retainblock-intrinsic"]], "\u201cllvm.objc.retain\u201d Intrinsic": [[715, "llvm-objc-retain-intrinsic"]], "\u201cllvm.objc.storeStrong\u201d Intrinsic": [[715, "llvm-objc-storestrong-intrinsic"]], "\u201cllvm.objc.storeWeak\u201d Intrinsic": [[715, "llvm-objc-storeweak-intrinsic"]], "\u201cllvm.objectsize\u201d Intrinsic": [[715, "llvm-objectsize-intrinsic"]], "\u201cllvm.pcmarker\u201d Intrinsic": [[715, "llvm-pcmarker-intrinsic"]], "\u201cllvm.pow.*\u201d Intrinsic": [[715, "llvm-pow-intrinsic"]], "\u201cllvm.powi.*\u201d Intrinsic": [[715, "llvm-powi-intrinsic"]], "\u201cllvm.prefetch\u201d Intrinsic": [[715, "llvm-prefetch-intrinsic"]], "\u201cllvm.preserve.array.access.index\u201d Intrinsic": [[715, "llvm-preserve-array-access-index-intrinsic"]], "\u201cllvm.preserve.struct.access.index\u201d Intrinsic": [[715, "llvm-preserve-struct-access-index-intrinsic"]], "\u201cllvm.preserve.union.access.index\u201d Intrinsic": [[715, "llvm-preserve-union-access-index-intrinsic"]], "\u201cllvm.ptr.annotation.*\u201d Intrinsic": [[715, "llvm-ptr-annotation-intrinsic"]], "\u201cllvm.ptrauth.auth\u201d": [[748, "llvm-ptrauth-auth"]], "\u201cllvm.ptrauth.blend\u201d": [[748, "llvm-ptrauth-blend"]], "\u201cllvm.ptrauth.resign\u201d": [[748, "llvm-ptrauth-resign"]], "\u201cllvm.ptrauth.sign_generic\u201d": [[748, "llvm-ptrauth-sign-generic"]], "\u201cllvm.ptrauth.sign\u201d": [[748, "llvm-ptrauth-sign"]], "\u201cllvm.ptrauth.strip\u201d": [[748, "llvm-ptrauth-strip"]], "\u201cllvm.ptrmask\u201d Intrinsic": [[715, "llvm-ptrmask-intrinsic"]], "\u201cllvm.read_register\u201d, \u201cllvm.read_volatile_register\u201d, and \u201cllvm.write_register\u201d Intrinsics": [[715, "llvm-read-register-llvm-read-volatile-register-and-llvm-write-register-intrinsics"]], "\u201cllvm.readcyclecounter\u201d Intrinsic": [[715, "llvm-readcyclecounter-intrinsic"]], "\u201cllvm.returnaddress\u201d Intrinsic": [[715, "llvm-returnaddress-intrinsic"]], "\u201cllvm.rint.*\u201d Intrinsic": [[715, "llvm-rint-intrinsic"]], "\u201cllvm.round.*\u201d Intrinsic": [[715, "llvm-round-intrinsic"]], "\u201cllvm.roundeven.*\u201d Intrinsic": [[715, "llvm-roundeven-intrinsic"]], "\u201cllvm.sadd.sat.*\u201d Intrinsics": [[715, "llvm-sadd-sat-intrinsics"]], "\u201cllvm.sadd.with.overflow.*\u201d Intrinsics": [[715, "llvm-sadd-with-overflow-intrinsics"]], "\u201cllvm.sdiv.fix.*\u201d Intrinsics": [[715, "llvm-sdiv-fix-intrinsics"]], "\u201cllvm.sdiv.fix.sat.*\u201d Intrinsics": [[715, "llvm-sdiv-fix-sat-intrinsics"]], "\u201cllvm.seh.scope.begin\u201d and \u201cllvm.seh.scope.end\u201d Intrinsics": [[715, "llvm-seh-scope-begin-and-llvm-seh-scope-end-intrinsics"]], "\u201cllvm.seh.try.begin\u201d and \u201cllvm.seh.try.end\u201d Intrinsics": [[715, "llvm-seh-try-begin-and-llvm-seh-try-end-intrinsics"]], "\u201cllvm.set.loop.iterations.*\u201d Intrinsic": [[715, "llvm-set-loop-iterations-intrinsic"]], "\u201cllvm.set.rounding\u201d Intrinsic": [[715, "llvm-set-rounding-intrinsic"]], "\u201cllvm.sideeffect\u201d Intrinsic": [[715, "llvm-sideeffect-intrinsic"]], "\u201cllvm.sin.*\u201d Intrinsic": [[715, "llvm-sin-intrinsic"]], "\u201cllvm.smax.*\u201d Intrinsic": [[715, "llvm-smax-intrinsic"]], "\u201cllvm.smin.*\u201d Intrinsic": [[715, "llvm-smin-intrinsic"]], "\u201cllvm.smul.fix.*\u201d Intrinsics": [[715, "llvm-smul-fix-intrinsics"]], "\u201cllvm.smul.fix.sat.*\u201d Intrinsics": [[715, "llvm-smul-fix-sat-intrinsics"]], "\u201cllvm.smul.with.overflow.*\u201d Intrinsics": [[715, "llvm-smul-with-overflow-intrinsics"]], "\u201cllvm.sponentry\u201d Intrinsic": [[715, "llvm-sponentry-intrinsic"]], "\u201cllvm.sqrt.*\u201d Intrinsic": [[715, "llvm-sqrt-intrinsic"]], "\u201cllvm.ssa.copy\u201d Intrinsic": [[715, "llvm-ssa-copy-intrinsic"]], "\u201cllvm.sshl.sat.*\u201d Intrinsics": [[715, "llvm-sshl-sat-intrinsics"]], "\u201cllvm.ssub.sat.*\u201d Intrinsics": [[715, "llvm-ssub-sat-intrinsics"]], "\u201cllvm.ssub.with.overflow.*\u201d Intrinsics": [[715, "llvm-ssub-with-overflow-intrinsics"]], "\u201cllvm.stackguard\u201d Intrinsic": [[715, "llvm-stackguard-intrinsic"]], "\u201cllvm.stackprotector\u201d Intrinsic": [[715, "llvm-stackprotector-intrinsic"]], "\u201cllvm.stackrestore\u201d Intrinsic": [[715, "llvm-stackrestore-intrinsic"]], "\u201cllvm.stacksave\u201d Intrinsic": [[715, "llvm-stacksave-intrinsic"]], "\u201cllvm.start.loop.iterations.*\u201d Intrinsic": [[715, "llvm-start-loop-iterations-intrinsic"]], "\u201cllvm.strip.invariant.group\u201d Intrinsic": [[715, "llvm-strip-invariant-group-intrinsic"]], "\u201cllvm.swift.async.context.addr\u201d Intrinsic": [[715, "llvm-swift-async-context-addr-intrinsic"]], "\u201cllvm.test.set.loop.iterations.*\u201d Intrinsic": [[715, "llvm-test-set-loop-iterations-intrinsic"]], "\u201cllvm.test.start.loop.iterations.*\u201d Intrinsic": [[715, "llvm-test-start-loop-iterations-intrinsic"]], "\u201cllvm.thread.pointer\u201d Intrinsic": [[715, "llvm-thread-pointer-intrinsic"]], "\u201cllvm.trap\u201d Intrinsic": [[715, "llvm-trap-intrinsic"]], "\u201cllvm.trunc.*\u201d Intrinsic": [[715, "llvm-trunc-intrinsic"]], "\u201cllvm.type.checked.load\u201d Intrinsic": [[715, "llvm-type-checked-load-intrinsic"]], "\u201cllvm.type.test\u201d Intrinsic": [[715, "llvm-type-test-intrinsic"]], "\u201cllvm.uadd.sat.*\u201d Intrinsics": [[715, "llvm-uadd-sat-intrinsics"]], "\u201cllvm.uadd.with.overflow.*\u201d Intrinsics": [[715, "llvm-uadd-with-overflow-intrinsics"]], "\u201cllvm.ubsantrap\u201d Intrinsic": [[715, "llvm-ubsantrap-intrinsic"]], "\u201cllvm.udiv.fix.*\u201d Intrinsics": [[715, "llvm-udiv-fix-intrinsics"]], "\u201cllvm.udiv.fix.sat.*\u201d Intrinsics": [[715, "llvm-udiv-fix-sat-intrinsics"]], "\u201cllvm.umax.*\u201d Intrinsic": [[715, "llvm-umax-intrinsic"]], "\u201cllvm.umin.*\u201d Intrinsic": [[715, "llvm-umin-intrinsic"]], "\u201cllvm.umul.fix.*\u201d Intrinsics": [[715, "llvm-umul-fix-intrinsics"]], "\u201cllvm.umul.fix.sat.*\u201d Intrinsics": [[715, "llvm-umul-fix-sat-intrinsics"]], "\u201cllvm.umul.with.overflow.*\u201d Intrinsics": [[715, "llvm-umul-with-overflow-intrinsics"]], "\u201cllvm.ushl.sat.*\u201d Intrinsics": [[715, "llvm-ushl-sat-intrinsics"]], "\u201cllvm.usub.sat.*\u201d Intrinsics": [[715, "llvm-usub-sat-intrinsics"]], "\u201cllvm.usub.with.overflow.*\u201d Intrinsics": [[715, "llvm-usub-with-overflow-intrinsics"]], "\u201cllvm.va_copy\u201d Intrinsic": [[715, "llvm-va-copy-intrinsic"]], "\u201cllvm.va_end\u201d Intrinsic": [[715, "llvm-va-end-intrinsic"]], "\u201cllvm.va_start\u201d Intrinsic": [[715, "llvm-va-start-intrinsic"]], "\u201cllvm.var.annotation\u201d Intrinsic": [[715, "llvm-var-annotation-intrinsic"]], "\u201cllvm.vector.reduce.add.*\u201d Intrinsic": [[715, "llvm-vector-reduce-add-intrinsic"]], "\u201cllvm.vector.reduce.and.*\u201d Intrinsic": [[715, "llvm-vector-reduce-and-intrinsic"]], "\u201cllvm.vector.reduce.fadd.*\u201d Intrinsic": [[715, "llvm-vector-reduce-fadd-intrinsic"]], "\u201cllvm.vector.reduce.fmax.*\u201d Intrinsic": [[715, "llvm-vector-reduce-fmax-intrinsic"]], "\u201cllvm.vector.reduce.fmin.*\u201d Intrinsic": [[715, "llvm-vector-reduce-fmin-intrinsic"]], "\u201cllvm.vector.reduce.fmul.*\u201d Intrinsic": [[715, "llvm-vector-reduce-fmul-intrinsic"]], "\u201cllvm.vector.reduce.mul.*\u201d Intrinsic": [[715, "llvm-vector-reduce-mul-intrinsic"]], "\u201cllvm.vector.reduce.or.*\u201d Intrinsic": [[715, "llvm-vector-reduce-or-intrinsic"]], "\u201cllvm.vector.reduce.smax.*\u201d Intrinsic": [[715, "llvm-vector-reduce-smax-intrinsic"]], "\u201cllvm.vector.reduce.smin.*\u201d Intrinsic": [[715, "llvm-vector-reduce-smin-intrinsic"]], "\u201cllvm.vector.reduce.umax.*\u201d Intrinsic": [[715, "llvm-vector-reduce-umax-intrinsic"]], "\u201cllvm.vector.reduce.umin.*\u201d Intrinsic": [[715, "llvm-vector-reduce-umin-intrinsic"]], "\u201cllvm.vector.reduce.xor.*\u201d Intrinsic": [[715, "llvm-vector-reduce-xor-intrinsic"]], "\u201cllvm.vp.add.*\u201d Intrinsics": [[715, "llvm-vp-add-intrinsics"]], "\u201cllvm.vp.and.*\u201d Intrinsics": [[715, "llvm-vp-and-intrinsics"]], "\u201cllvm.vp.ashr.*\u201d Intrinsics": [[715, "llvm-vp-ashr-intrinsics"]], "\u201cllvm.vp.fadd.*\u201d Intrinsics": [[715, "llvm-vp-fadd-intrinsics"]], "\u201cllvm.vp.fdiv.*\u201d Intrinsics": [[715, "llvm-vp-fdiv-intrinsics"]], "\u201cllvm.vp.fmul.*\u201d Intrinsics": [[715, "llvm-vp-fmul-intrinsics"]], "\u201cllvm.vp.frem.*\u201d Intrinsics": [[715, "llvm-vp-frem-intrinsics"]], "\u201cllvm.vp.fsub.*\u201d Intrinsics": [[715, "llvm-vp-fsub-intrinsics"]], "\u201cllvm.vp.gather\u201d Intrinsic": [[715, "llvm-vp-gather-intrinsic"]], "\u201cllvm.vp.load\u201d Intrinsic": [[715, "llvm-vp-load-intrinsic"]], "\u201cllvm.vp.lshr.*\u201d Intrinsics": [[715, "llvm-vp-lshr-intrinsics"]], "\u201cllvm.vp.merge.*\u201d Intrinsics": [[715, "llvm-vp-merge-intrinsics"]], "\u201cllvm.vp.mul.*\u201d Intrinsics": [[715, "llvm-vp-mul-intrinsics"]], "\u201cllvm.vp.or.*\u201d Intrinsics": [[715, "llvm-vp-or-intrinsics"]], "\u201cllvm.vp.reduce.add.*\u201d Intrinsics": [[715, "llvm-vp-reduce-add-intrinsics"]], "\u201cllvm.vp.reduce.and.*\u201d Intrinsics": [[715, "llvm-vp-reduce-and-intrinsics"]], "\u201cllvm.vp.reduce.fadd.*\u201d Intrinsics": [[715, "llvm-vp-reduce-fadd-intrinsics"]], "\u201cllvm.vp.reduce.fmax.*\u201d Intrinsics": [[715, "llvm-vp-reduce-fmax-intrinsics"]], "\u201cllvm.vp.reduce.fmin.*\u201d Intrinsics": [[715, "llvm-vp-reduce-fmin-intrinsics"]], "\u201cllvm.vp.reduce.fmul.*\u201d Intrinsics": [[715, "llvm-vp-reduce-fmul-intrinsics"]], "\u201cllvm.vp.reduce.mul.*\u201d Intrinsics": [[715, "llvm-vp-reduce-mul-intrinsics"]], "\u201cllvm.vp.reduce.or.*\u201d Intrinsics": [[715, "llvm-vp-reduce-or-intrinsics"]], "\u201cllvm.vp.reduce.smax.*\u201d Intrinsics": [[715, "llvm-vp-reduce-smax-intrinsics"]], "\u201cllvm.vp.reduce.smin.*\u201d Intrinsics": [[715, "llvm-vp-reduce-smin-intrinsics"]], "\u201cllvm.vp.reduce.umax.*\u201d Intrinsics": [[715, "llvm-vp-reduce-umax-intrinsics"]], "\u201cllvm.vp.reduce.umin.*\u201d Intrinsics": [[715, "llvm-vp-reduce-umin-intrinsics"]], "\u201cllvm.vp.reduce.xor.*\u201d Intrinsics": [[715, "llvm-vp-reduce-xor-intrinsics"]], "\u201cllvm.vp.scatter\u201d Intrinsic": [[715, "llvm-vp-scatter-intrinsic"]], "\u201cllvm.vp.sdiv.*\u201d Intrinsics": [[715, "llvm-vp-sdiv-intrinsics"]], "\u201cllvm.vp.select.*\u201d Intrinsics": [[715, "llvm-vp-select-intrinsics"]], "\u201cllvm.vp.shl.*\u201d Intrinsics": [[715, "llvm-vp-shl-intrinsics"]], "\u201cllvm.vp.srem.*\u201d Intrinsics": [[715, "llvm-vp-srem-intrinsics"]], "\u201cllvm.vp.store\u201d Intrinsic": [[715, "llvm-vp-store-intrinsic"]], "\u201cllvm.vp.sub.*\u201d Intrinsics": [[715, "llvm-vp-sub-intrinsics"]], "\u201cllvm.vp.udiv.*\u201d Intrinsics": [[715, "llvm-vp-udiv-intrinsics"]], "\u201cllvm.vp.urem.*\u201d Intrinsics": [[715, "llvm-vp-urem-intrinsics"]], "\u201cllvm.vp.xor.*\u201d Intrinsics": [[715, "llvm-vp-xor-intrinsics"]], "\u201cllvm.vscale\u201d Intrinsic": [[715, "llvm-vscale-intrinsic"]], "\u201cload\u201d Instruction": [[715, "load-instruction"]], "\u201clshr\u201d Instruction": [[715, "lshr-instruction"]], "\u201cmul\u201d Instruction": [[715, "mul-instruction"]], "\u201cnoalias\u201d and \u201calias.scope\u201d Metadata": [[715, "noalias-and-alias-scope-metadata"]], "\u201cor\u201d Instruction": [[715, "or-instruction"]], "\u201cphi\u201d Instruction": [[715, "phi-instruction"]], "\u201cprof\u201d Metadata": [[715, "prof-metadata"]], "\u201cptrtoint .. to\u201d Instruction": [[715, "ptrtoint-to-instruction"]], "\u201crange\u201d Metadata": [[715, "range-metadata"]], "\u201cresume\u201d Instruction": [[715, "resume-instruction"]], "\u201cret\u201d Instruction": [[715, "ret-instruction"]], "\u201csdiv\u201d Instruction": [[715, "sdiv-instruction"]], "\u201cselect\u201d Instruction": [[715, "select-instruction"]], "\u201csext .. to\u201d Instruction": [[715, "sext-to-instruction"]], "\u201cshl\u201d Instruction": [[715, "shl-instruction"]], "\u201cshufflevector\u201d Instruction": [[715, "shufflevector-instruction"]], "\u201csitofp .. to\u201d Instruction": [[715, "sitofp-to-instruction"]], "\u201csrem\u201d Instruction": [[715, "srem-instruction"]], "\u201cstore\u201d Instruction": [[715, "store-instruction"]], "\u201csub\u201d Instruction": [[715, "sub-instruction"]], "\u201cswitch\u201d Instruction": [[715, "switch-instruction"]], "\u201ctbaa.struct\u201d Metadata": [[715, "tbaa-struct-metadata"]], "\u201ctbaa\u201d Metadata": [[715, "tbaa-metadata"]], "\u201ctrunc .. to\u201d Instruction": [[715, "trunc-to-instruction"]], "\u201ctype\u201d Metadata": [[715, "type-metadata"]], "\u201cudiv\u201d Instruction": [[715, "udiv-instruction"]], "\u201cuitofp .. to\u201d Instruction": [[715, "uitofp-to-instruction"]], "\u201cunpredictable\u201d Metadata": [[715, "unpredictable-metadata"]], "\u201cunreachable\u201d Instruction": [[715, "unreachable-instruction"]], "\u201curem\u201d Instruction": [[715, "urem-instruction"]], "\u201cva_arg\u201d Instruction": [[715, "va-arg-instruction"]], "\u201cxor\u201d Instruction": [[715, "xor-instruction"]], "\u201czext .. to\u201d Instruction": [[715, "zext-to-instruction"]]}, "docnames": ["AMDGPU/AMDGPUAsmGFX10", "AMDGPU/AMDGPUAsmGFX1011", "AMDGPU/AMDGPUAsmGFX7", "AMDGPU/AMDGPUAsmGFX8", "AMDGPU/AMDGPUAsmGFX9", "AMDGPU/AMDGPUAsmGFX900", "AMDGPU/AMDGPUAsmGFX904", "AMDGPU/AMDGPUAsmGFX906", "AMDGPU/AMDGPUAsmGFX908", "AMDGPU/AMDGPUAsmGFX90a", "AMDGPU/gfx1011_src", "AMDGPU/gfx1011_src_1", "AMDGPU/gfx1011_src_2", "AMDGPU/gfx1011_src_3", "AMDGPU/gfx1011_type_deviation", "AMDGPU/gfx1011_vdst", "AMDGPU/gfx1011_vsrc", "AMDGPU/gfx10_attr", "AMDGPU/gfx10_dst", "AMDGPU/gfx10_fx_operand", "AMDGPU/gfx10_hwreg", "AMDGPU/gfx10_imm16", "AMDGPU/gfx10_imm16_1", "AMDGPU/gfx10_imm16_2", "AMDGPU/gfx10_label", "AMDGPU/gfx10_m", "AMDGPU/gfx10_m_1", "AMDGPU/gfx10_msg", "AMDGPU/gfx10_opt", "AMDGPU/gfx10_param", "AMDGPU/gfx10_probe", "AMDGPU/gfx10_saddr", "AMDGPU/gfx10_saddr_1", "AMDGPU/gfx10_sbase", "AMDGPU/gfx10_sbase_1", "AMDGPU/gfx10_sbase_2", "AMDGPU/gfx10_sdata", "AMDGPU/gfx10_sdata_1", "AMDGPU/gfx10_sdata_2", "AMDGPU/gfx10_sdata_3", "AMDGPU/gfx10_sdata_4", "AMDGPU/gfx10_sdata_5", "AMDGPU/gfx10_sdst", "AMDGPU/gfx10_sdst_1", "AMDGPU/gfx10_sdst_2", "AMDGPU/gfx10_sdst_3", "AMDGPU/gfx10_sdst_4", "AMDGPU/gfx10_sdst_5", "AMDGPU/gfx10_sdst_6", "AMDGPU/gfx10_sdst_7", "AMDGPU/gfx10_sdst_8", "AMDGPU/gfx10_simm32", "AMDGPU/gfx10_simm32_1", "AMDGPU/gfx10_simm32_2", "AMDGPU/gfx10_soffset", "AMDGPU/gfx10_soffset_1", "AMDGPU/gfx10_soffset_2", "AMDGPU/gfx10_src", "AMDGPU/gfx10_src_1", "AMDGPU/gfx10_src_2", "AMDGPU/gfx10_src_3", "AMDGPU/gfx10_src_4", "AMDGPU/gfx10_src_5", "AMDGPU/gfx10_src_6", "AMDGPU/gfx10_src_7", "AMDGPU/gfx10_src_8", "AMDGPU/gfx10_srsrc", "AMDGPU/gfx10_srsrc_1", "AMDGPU/gfx10_ssamp", "AMDGPU/gfx10_ssrc", "AMDGPU/gfx10_ssrc_1", "AMDGPU/gfx10_ssrc_2", "AMDGPU/gfx10_ssrc_3", "AMDGPU/gfx10_ssrc_4", "AMDGPU/gfx10_ssrc_5", "AMDGPU/gfx10_ssrc_6", "AMDGPU/gfx10_ssrc_7", "AMDGPU/gfx10_ssrc_8", "AMDGPU/gfx10_tgt", "AMDGPU/gfx10_type_deviation", "AMDGPU/gfx10_vaddr", "AMDGPU/gfx10_vaddr_1", "AMDGPU/gfx10_vaddr_2", "AMDGPU/gfx10_vaddr_3", "AMDGPU/gfx10_vaddr_4", "AMDGPU/gfx10_vaddr_5", "AMDGPU/gfx10_vcc", "AMDGPU/gfx10_vdata", "AMDGPU/gfx10_vdata0", "AMDGPU/gfx10_vdata0_1", "AMDGPU/gfx10_vdata1", "AMDGPU/gfx10_vdata1_1", "AMDGPU/gfx10_vdata_1", "AMDGPU/gfx10_vdata_10", "AMDGPU/gfx10_vdata_2", "AMDGPU/gfx10_vdata_3", "AMDGPU/gfx10_vdata_4", "AMDGPU/gfx10_vdata_5", "AMDGPU/gfx10_vdata_6", "AMDGPU/gfx10_vdata_7", "AMDGPU/gfx10_vdata_8", "AMDGPU/gfx10_vdata_9", "AMDGPU/gfx10_vdst", "AMDGPU/gfx10_vdst_1", "AMDGPU/gfx10_vdst_10", "AMDGPU/gfx10_vdst_11", "AMDGPU/gfx10_vdst_12", "AMDGPU/gfx10_vdst_13", "AMDGPU/gfx10_vdst_2", "AMDGPU/gfx10_vdst_3", "AMDGPU/gfx10_vdst_4", "AMDGPU/gfx10_vdst_5", "AMDGPU/gfx10_vdst_6", "AMDGPU/gfx10_vdst_7", "AMDGPU/gfx10_vdst_8", "AMDGPU/gfx10_vdst_9", "AMDGPU/gfx10_vsrc", "AMDGPU/gfx10_vsrc_1", "AMDGPU/gfx10_vsrc_2", "AMDGPU/gfx10_vsrc_3", "AMDGPU/gfx10_waitcnt", "AMDGPU/gfx7_attr", "AMDGPU/gfx7_dst", "AMDGPU/gfx7_hwreg", "AMDGPU/gfx7_imm16", "AMDGPU/gfx7_imm16_1", "AMDGPU/gfx7_imm16_2", "AMDGPU/gfx7_label", "AMDGPU/gfx7_m", "AMDGPU/gfx7_msg", "AMDGPU/gfx7_opt", "AMDGPU/gfx7_param", "AMDGPU/gfx7_sbase", "AMDGPU/gfx7_sbase_1", "AMDGPU/gfx7_sdst", "AMDGPU/gfx7_sdst_1", "AMDGPU/gfx7_sdst_2", "AMDGPU/gfx7_sdst_3", "AMDGPU/gfx7_sdst_4", "AMDGPU/gfx7_sdst_5", "AMDGPU/gfx7_sdst_6", "AMDGPU/gfx7_sdst_7", "AMDGPU/gfx7_simm32", "AMDGPU/gfx7_simm32_1", "AMDGPU/gfx7_soffset", "AMDGPU/gfx7_soffset_1", "AMDGPU/gfx7_src", "AMDGPU/gfx7_src_1", "AMDGPU/gfx7_src_10", "AMDGPU/gfx7_src_2", "AMDGPU/gfx7_src_3", "AMDGPU/gfx7_src_4", "AMDGPU/gfx7_src_5", "AMDGPU/gfx7_src_6", "AMDGPU/gfx7_src_7", "AMDGPU/gfx7_src_8", "AMDGPU/gfx7_src_9", "AMDGPU/gfx7_srsrc", "AMDGPU/gfx7_srsrc_1", "AMDGPU/gfx7_ssamp", "AMDGPU/gfx7_ssrc", "AMDGPU/gfx7_ssrc_1", "AMDGPU/gfx7_ssrc_10", "AMDGPU/gfx7_ssrc_2", "AMDGPU/gfx7_ssrc_3", "AMDGPU/gfx7_ssrc_4", "AMDGPU/gfx7_ssrc_5", "AMDGPU/gfx7_ssrc_6", "AMDGPU/gfx7_ssrc_7", "AMDGPU/gfx7_ssrc_8", "AMDGPU/gfx7_ssrc_9", "AMDGPU/gfx7_tgt", "AMDGPU/gfx7_type_deviation", "AMDGPU/gfx7_vaddr", "AMDGPU/gfx7_vaddr_1", "AMDGPU/gfx7_vaddr_2", "AMDGPU/gfx7_vaddr_3", "AMDGPU/gfx7_vcc", "AMDGPU/gfx7_vdata", "AMDGPU/gfx7_vdata0", "AMDGPU/gfx7_vdata0_1", "AMDGPU/gfx7_vdata1", "AMDGPU/gfx7_vdata1_1", "AMDGPU/gfx7_vdata_1", "AMDGPU/gfx7_vdata_2", "AMDGPU/gfx7_vdata_3", "AMDGPU/gfx7_vdata_4", "AMDGPU/gfx7_vdata_5", "AMDGPU/gfx7_vdata_6", "AMDGPU/gfx7_vdata_7", "AMDGPU/gfx7_vdata_8", "AMDGPU/gfx7_vdata_9", "AMDGPU/gfx7_vdst", "AMDGPU/gfx7_vdst_1", "AMDGPU/gfx7_vdst_10", "AMDGPU/gfx7_vdst_11", "AMDGPU/gfx7_vdst_12", "AMDGPU/gfx7_vdst_2", "AMDGPU/gfx7_vdst_3", "AMDGPU/gfx7_vdst_4", "AMDGPU/gfx7_vdst_5", "AMDGPU/gfx7_vdst_6", "AMDGPU/gfx7_vdst_7", "AMDGPU/gfx7_vdst_8", "AMDGPU/gfx7_vdst_9", "AMDGPU/gfx7_vsrc", "AMDGPU/gfx7_vsrc_1", "AMDGPU/gfx7_vsrc_2", "AMDGPU/gfx7_vsrc_3", "AMDGPU/gfx7_waitcnt", "AMDGPU/gfx8_attr", "AMDGPU/gfx8_dst", "AMDGPU/gfx8_hwreg", "AMDGPU/gfx8_imask", "AMDGPU/gfx8_imm16", "AMDGPU/gfx8_imm16_1", "AMDGPU/gfx8_imm16_2", "AMDGPU/gfx8_label", "AMDGPU/gfx8_m", "AMDGPU/gfx8_m_1", "AMDGPU/gfx8_msg", "AMDGPU/gfx8_opt", "AMDGPU/gfx8_param", "AMDGPU/gfx8_probe", "AMDGPU/gfx8_sbase", "AMDGPU/gfx8_sbase_1", "AMDGPU/gfx8_sdata", "AMDGPU/gfx8_sdata_1", "AMDGPU/gfx8_sdata_2", "AMDGPU/gfx8_sdst", "AMDGPU/gfx8_sdst_1", "AMDGPU/gfx8_sdst_2", "AMDGPU/gfx8_sdst_3", "AMDGPU/gfx8_sdst_4", "AMDGPU/gfx8_sdst_5", "AMDGPU/gfx8_sdst_6", "AMDGPU/gfx8_sdst_7", "AMDGPU/gfx8_simm32", "AMDGPU/gfx8_simm32_1", "AMDGPU/gfx8_simm32_2", "AMDGPU/gfx8_soffset", "AMDGPU/gfx8_soffset_1", "AMDGPU/gfx8_soffset_2", "AMDGPU/gfx8_src", "AMDGPU/gfx8_src_1", "AMDGPU/gfx8_src_10", "AMDGPU/gfx8_src_2", "AMDGPU/gfx8_src_3", "AMDGPU/gfx8_src_4", "AMDGPU/gfx8_src_5", "AMDGPU/gfx8_src_6", "AMDGPU/gfx8_src_7", "AMDGPU/gfx8_src_8", "AMDGPU/gfx8_src_9", "AMDGPU/gfx8_srsrc", "AMDGPU/gfx8_srsrc_1", "AMDGPU/gfx8_ssamp", "AMDGPU/gfx8_ssrc", "AMDGPU/gfx8_ssrc_1", "AMDGPU/gfx8_ssrc_2", "AMDGPU/gfx8_ssrc_3", "AMDGPU/gfx8_ssrc_4", "AMDGPU/gfx8_ssrc_5", "AMDGPU/gfx8_ssrc_6", "AMDGPU/gfx8_ssrc_7", "AMDGPU/gfx8_ssrc_8", "AMDGPU/gfx8_tgt", "AMDGPU/gfx8_type_deviation", "AMDGPU/gfx8_vaddr", "AMDGPU/gfx8_vaddr_1", "AMDGPU/gfx8_vaddr_2", "AMDGPU/gfx8_vaddr_3", "AMDGPU/gfx8_vcc", "AMDGPU/gfx8_vdata", "AMDGPU/gfx8_vdata0", "AMDGPU/gfx8_vdata0_1", "AMDGPU/gfx8_vdata1", "AMDGPU/gfx8_vdata1_1", "AMDGPU/gfx8_vdata_1", "AMDGPU/gfx8_vdata_10", "AMDGPU/gfx8_vdata_11", "AMDGPU/gfx8_vdata_12", "AMDGPU/gfx8_vdata_13", "AMDGPU/gfx8_vdata_14", "AMDGPU/gfx8_vdata_2", "AMDGPU/gfx8_vdata_3", "AMDGPU/gfx8_vdata_4", "AMDGPU/gfx8_vdata_5", "AMDGPU/gfx8_vdata_6", "AMDGPU/gfx8_vdata_7", "AMDGPU/gfx8_vdata_8", "AMDGPU/gfx8_vdata_9", "AMDGPU/gfx8_vdst", "AMDGPU/gfx8_vdst_1", "AMDGPU/gfx8_vdst_10", "AMDGPU/gfx8_vdst_11", "AMDGPU/gfx8_vdst_12", "AMDGPU/gfx8_vdst_13", "AMDGPU/gfx8_vdst_14", "AMDGPU/gfx8_vdst_15", "AMDGPU/gfx8_vdst_16", "AMDGPU/gfx8_vdst_17", "AMDGPU/gfx8_vdst_2", "AMDGPU/gfx8_vdst_3", "AMDGPU/gfx8_vdst_4", "AMDGPU/gfx8_vdst_5", "AMDGPU/gfx8_vdst_6", "AMDGPU/gfx8_vdst_7", "AMDGPU/gfx8_vdst_8", "AMDGPU/gfx8_vdst_9", "AMDGPU/gfx8_vsrc", "AMDGPU/gfx8_vsrc_1", "AMDGPU/gfx8_vsrc_2", "AMDGPU/gfx8_vsrc_3", "AMDGPU/gfx8_waitcnt", "AMDGPU/gfx900_fx_operand", "AMDGPU/gfx900_m", "AMDGPU/gfx900_src", "AMDGPU/gfx900_src_1", "AMDGPU/gfx900_vdst", "AMDGPU/gfx904_fx_operand", "AMDGPU/gfx904_m", "AMDGPU/gfx904_src", "AMDGPU/gfx904_src_1", "AMDGPU/gfx904_vdst", "AMDGPU/gfx906_fx_operand", "AMDGPU/gfx906_m", "AMDGPU/gfx906_m_1", "AMDGPU/gfx906_src", "AMDGPU/gfx906_src_1", "AMDGPU/gfx906_src_2", "AMDGPU/gfx906_src_3", "AMDGPU/gfx906_src_4", "AMDGPU/gfx906_type_deviation", "AMDGPU/gfx906_vdst", "AMDGPU/gfx906_vsrc", "AMDGPU/gfx908_dst", "AMDGPU/gfx908_fx_operand", "AMDGPU/gfx908_m", "AMDGPU/gfx908_m_1", "AMDGPU/gfx908_opt", "AMDGPU/gfx908_saddr", "AMDGPU/gfx908_soffset", "AMDGPU/gfx908_src", "AMDGPU/gfx908_src_1", "AMDGPU/gfx908_src_2", "AMDGPU/gfx908_src_3", "AMDGPU/gfx908_src_4", "AMDGPU/gfx908_src_5", "AMDGPU/gfx908_srsrc", "AMDGPU/gfx908_type_deviation", "AMDGPU/gfx908_vaddr", "AMDGPU/gfx908_vaddr_1", "AMDGPU/gfx908_vdata", "AMDGPU/gfx908_vdata_1", "AMDGPU/gfx908_vdst", "AMDGPU/gfx908_vdst_1", "AMDGPU/gfx908_vdst_2", "AMDGPU/gfx908_vdst_3", "AMDGPU/gfx908_vdst_4", "AMDGPU/gfx908_vdst_5", "AMDGPU/gfx908_vsrc", "AMDGPU/gfx908_vsrc_1", "AMDGPU/gfx908_vsrc_2", "AMDGPU/gfx908_vsrc_3", "AMDGPU/gfx908_vsrc_4", "AMDGPU/gfx908_vsrc_5", "AMDGPU/gfx908_vsrc_6", "AMDGPU/gfx90a_dst", "AMDGPU/gfx90a_fx_operand", "AMDGPU/gfx90a_hwreg", "AMDGPU/gfx90a_imask", "AMDGPU/gfx90a_imm16", "AMDGPU/gfx90a_imm16_1", "AMDGPU/gfx90a_imm16_2", "AMDGPU/gfx90a_label", "AMDGPU/gfx90a_m", "AMDGPU/gfx90a_m_1", "AMDGPU/gfx90a_msg", "AMDGPU/gfx90a_opt", "AMDGPU/gfx90a_probe", "AMDGPU/gfx90a_saddr", "AMDGPU/gfx90a_saddr_1", "AMDGPU/gfx90a_sbase", "AMDGPU/gfx90a_sbase_1", "AMDGPU/gfx90a_sbase_2", "AMDGPU/gfx90a_sdata", "AMDGPU/gfx90a_sdata_1", "AMDGPU/gfx90a_sdata_2", "AMDGPU/gfx90a_sdata_3", "AMDGPU/gfx90a_sdata_4", "AMDGPU/gfx90a_sdata_5", "AMDGPU/gfx90a_sdst", "AMDGPU/gfx90a_sdst_1", "AMDGPU/gfx90a_sdst_2", "AMDGPU/gfx90a_sdst_3", "AMDGPU/gfx90a_sdst_4", "AMDGPU/gfx90a_sdst_5", "AMDGPU/gfx90a_sdst_6", "AMDGPU/gfx90a_sdst_7", "AMDGPU/gfx90a_simm32", "AMDGPU/gfx90a_simm32_1", "AMDGPU/gfx90a_simm32_2", "AMDGPU/gfx90a_soffset", "AMDGPU/gfx90a_soffset_1", "AMDGPU/gfx90a_soffset_2", "AMDGPU/gfx90a_src", "AMDGPU/gfx90a_src_1", "AMDGPU/gfx90a_src_10", "AMDGPU/gfx90a_src_11", "AMDGPU/gfx90a_src_2", "AMDGPU/gfx90a_src_3", "AMDGPU/gfx90a_src_4", "AMDGPU/gfx90a_src_5", "AMDGPU/gfx90a_src_6", "AMDGPU/gfx90a_src_7", "AMDGPU/gfx90a_src_8", "AMDGPU/gfx90a_src_9", "AMDGPU/gfx90a_srsrc", "AMDGPU/gfx90a_srsrc_1", "AMDGPU/gfx90a_ssamp", "AMDGPU/gfx90a_ssrc", "AMDGPU/gfx90a_ssrc_1", "AMDGPU/gfx90a_ssrc_2", "AMDGPU/gfx90a_ssrc_3", "AMDGPU/gfx90a_ssrc_4", "AMDGPU/gfx90a_ssrc_5", "AMDGPU/gfx90a_ssrc_6", "AMDGPU/gfx90a_ssrc_7", "AMDGPU/gfx90a_ssrc_8", "AMDGPU/gfx90a_type_deviation", "AMDGPU/gfx90a_vaddr", "AMDGPU/gfx90a_vaddr_1", "AMDGPU/gfx90a_vaddr_2", "AMDGPU/gfx90a_vaddr_3", "AMDGPU/gfx90a_vaddr_4", "AMDGPU/gfx90a_vaddr_5", "AMDGPU/gfx90a_vcc", "AMDGPU/gfx90a_vdata", "AMDGPU/gfx90a_vdata0", "AMDGPU/gfx90a_vdata0_1", "AMDGPU/gfx90a_vdata1", "AMDGPU/gfx90a_vdata1_1", "AMDGPU/gfx90a_vdata_1", "AMDGPU/gfx90a_vdata_10", "AMDGPU/gfx90a_vdata_2", "AMDGPU/gfx90a_vdata_3", "AMDGPU/gfx90a_vdata_4", "AMDGPU/gfx90a_vdata_5", "AMDGPU/gfx90a_vdata_6", "AMDGPU/gfx90a_vdata_7", "AMDGPU/gfx90a_vdata_8", "AMDGPU/gfx90a_vdata_9", "AMDGPU/gfx90a_vdst", "AMDGPU/gfx90a_vdst_1", "AMDGPU/gfx90a_vdst_10", "AMDGPU/gfx90a_vdst_11", "AMDGPU/gfx90a_vdst_12", "AMDGPU/gfx90a_vdst_13", "AMDGPU/gfx90a_vdst_14", "AMDGPU/gfx90a_vdst_15", "AMDGPU/gfx90a_vdst_16", "AMDGPU/gfx90a_vdst_17", "AMDGPU/gfx90a_vdst_18", "AMDGPU/gfx90a_vdst_19", "AMDGPU/gfx90a_vdst_2", "AMDGPU/gfx90a_vdst_3", "AMDGPU/gfx90a_vdst_4", "AMDGPU/gfx90a_vdst_5", "AMDGPU/gfx90a_vdst_6", "AMDGPU/gfx90a_vdst_7", "AMDGPU/gfx90a_vdst_8", "AMDGPU/gfx90a_vdst_9", "AMDGPU/gfx90a_vsrc", "AMDGPU/gfx90a_vsrc_1", "AMDGPU/gfx90a_vsrc_2", "AMDGPU/gfx90a_vsrc_3", "AMDGPU/gfx90a_vsrc_4", "AMDGPU/gfx90a_vsrc_5", "AMDGPU/gfx90a_waitcnt", "AMDGPU/gfx9_attr", "AMDGPU/gfx9_dst", "AMDGPU/gfx9_hwreg", "AMDGPU/gfx9_imask", "AMDGPU/gfx9_imm16", "AMDGPU/gfx9_imm16_1", "AMDGPU/gfx9_imm16_2", "AMDGPU/gfx9_label", "AMDGPU/gfx9_m", "AMDGPU/gfx9_m_1", "AMDGPU/gfx9_msg", "AMDGPU/gfx9_opt", "AMDGPU/gfx9_param", "AMDGPU/gfx9_probe", "AMDGPU/gfx9_saddr", "AMDGPU/gfx9_saddr_1", "AMDGPU/gfx9_sbase", "AMDGPU/gfx9_sbase_1", "AMDGPU/gfx9_sbase_2", "AMDGPU/gfx9_sdata", "AMDGPU/gfx9_sdata_1", "AMDGPU/gfx9_sdata_2", "AMDGPU/gfx9_sdata_3", "AMDGPU/gfx9_sdata_4", "AMDGPU/gfx9_sdata_5", "AMDGPU/gfx9_sdst", "AMDGPU/gfx9_sdst_1", "AMDGPU/gfx9_sdst_2", "AMDGPU/gfx9_sdst_3", "AMDGPU/gfx9_sdst_4", "AMDGPU/gfx9_sdst_5", "AMDGPU/gfx9_sdst_6", "AMDGPU/gfx9_sdst_7", "AMDGPU/gfx9_simm32", "AMDGPU/gfx9_simm32_1", "AMDGPU/gfx9_simm32_2", "AMDGPU/gfx9_soffset", "AMDGPU/gfx9_soffset_1", "AMDGPU/gfx9_soffset_2", "AMDGPU/gfx9_src", "AMDGPU/gfx9_src_1", "AMDGPU/gfx9_src_10", "AMDGPU/gfx9_src_2", "AMDGPU/gfx9_src_3", "AMDGPU/gfx9_src_4", "AMDGPU/gfx9_src_5", "AMDGPU/gfx9_src_6", "AMDGPU/gfx9_src_7", "AMDGPU/gfx9_src_8", "AMDGPU/gfx9_src_9", "AMDGPU/gfx9_srsrc", "AMDGPU/gfx9_srsrc_1", "AMDGPU/gfx9_ssamp", "AMDGPU/gfx9_ssrc", "AMDGPU/gfx9_ssrc_1", "AMDGPU/gfx9_ssrc_2", "AMDGPU/gfx9_ssrc_3", "AMDGPU/gfx9_ssrc_4", "AMDGPU/gfx9_ssrc_5", "AMDGPU/gfx9_ssrc_6", "AMDGPU/gfx9_ssrc_7", "AMDGPU/gfx9_ssrc_8", "AMDGPU/gfx9_tgt", "AMDGPU/gfx9_type_deviation", "AMDGPU/gfx9_vaddr", "AMDGPU/gfx9_vaddr_1", "AMDGPU/gfx9_vaddr_2", "AMDGPU/gfx9_vaddr_3", "AMDGPU/gfx9_vaddr_4", "AMDGPU/gfx9_vaddr_5", "AMDGPU/gfx9_vcc", "AMDGPU/gfx9_vdata", "AMDGPU/gfx9_vdata0", "AMDGPU/gfx9_vdata0_1", "AMDGPU/gfx9_vdata1", "AMDGPU/gfx9_vdata1_1", "AMDGPU/gfx9_vdata_1", "AMDGPU/gfx9_vdata_10", "AMDGPU/gfx9_vdata_2", "AMDGPU/gfx9_vdata_3", "AMDGPU/gfx9_vdata_4", "AMDGPU/gfx9_vdata_5", "AMDGPU/gfx9_vdata_6", "AMDGPU/gfx9_vdata_7", "AMDGPU/gfx9_vdata_8", "AMDGPU/gfx9_vdata_9", "AMDGPU/gfx9_vdst", "AMDGPU/gfx9_vdst_1", "AMDGPU/gfx9_vdst_10", "AMDGPU/gfx9_vdst_11", "AMDGPU/gfx9_vdst_12", "AMDGPU/gfx9_vdst_13", "AMDGPU/gfx9_vdst_2", "AMDGPU/gfx9_vdst_3", "AMDGPU/gfx9_vdst_4", "AMDGPU/gfx9_vdst_5", "AMDGPU/gfx9_vdst_6", "AMDGPU/gfx9_vdst_7", "AMDGPU/gfx9_vdst_8", "AMDGPU/gfx9_vdst_9", "AMDGPU/gfx9_vsrc", "AMDGPU/gfx9_vsrc_1", "AMDGPU/gfx9_vsrc_2", "AMDGPU/gfx9_vsrc_3", "AMDGPU/gfx9_waitcnt", "AMDGPUDwarfExtensionAllowLocationDescriptionOnTheDwarfExpressionStack/AMDGPUDwarfExtensionAllowLocationDescriptionOnTheDwarfExpressionStack", "AMDGPUDwarfExtensionsForHeterogeneousDebugging", "AMDGPUInstructionNotation", "AMDGPUInstructionSyntax", "AMDGPUModifierSyntax", "AMDGPUOperandSyntax", "AMDGPUUsage", "AddingConstrainedIntrinsics", "AdvancedBuilds", "AliasAnalysis", "Atomics", "Benchmarking", "BigEndianNEON", "BitCodeFormat", "BlockFrequencyTerminology", "BranchWeightMetadata", "BugLifeCycle", "Bugpoint", "BugpointRedesign", "BuildingADistribution", "CFIVerify", "CMake", "CMakePrimer", "CodeGenerator", "CodeOfConduct", "CodeReview", "CodingStandards", "CommandGuide/FileCheck", "CommandGuide/bugpoint", "CommandGuide/clang-tblgen", "CommandGuide/dsymutil", "CommandGuide/index", "CommandGuide/lit", "CommandGuide/llc", "CommandGuide/lldb-tblgen", "CommandGuide/lli", "CommandGuide/llvm-addr2line", "CommandGuide/llvm-ar", "CommandGuide/llvm-as", "CommandGuide/llvm-bcanalyzer", "CommandGuide/llvm-config", "CommandGuide/llvm-cov", "CommandGuide/llvm-cxxfilt", "CommandGuide/llvm-cxxmap", "CommandGuide/llvm-diff", "CommandGuide/llvm-dis", "CommandGuide/llvm-dwarfdump", "CommandGuide/llvm-exegesis", "CommandGuide/llvm-extract", "CommandGuide/llvm-install-name-tool", "CommandGuide/llvm-lib", "CommandGuide/llvm-libtool-darwin", "CommandGuide/llvm-link", "CommandGuide/llvm-lipo", "CommandGuide/llvm-locstats", "CommandGuide/llvm-mca", "CommandGuide/llvm-nm", "CommandGuide/llvm-objcopy", "CommandGuide/llvm-objdump", "CommandGuide/llvm-otool", "CommandGuide/llvm-pdbutil", "CommandGuide/llvm-profdata", "CommandGuide/llvm-profgen", "CommandGuide/llvm-ranlib", "CommandGuide/llvm-readelf", "CommandGuide/llvm-readobj", "CommandGuide/llvm-size", "CommandGuide/llvm-stress", "CommandGuide/llvm-strings", "CommandGuide/llvm-strip", "CommandGuide/llvm-symbolizer", "CommandGuide/llvm-tblgen", "CommandGuide/llvm-tli-checker", "CommandGuide/mlir-tblgen", "CommandGuide/opt", "CommandGuide/tblgen", "CommandLine", "CompileCudaWithLLVM", "CompilerWriterInfo", "Contributing", "Coroutines", "CoverageMappingFormat", "CycleTerminology", "DebuggingJITedCode", "DependenceGraphs/index", "DeveloperPolicy", "DiscourseMigrationGuide", "Docker", "ExceptionHandling", "ExtendingLLVM", "Extensions", "FAQ", "FaultMaps", "Frontend/PerformanceTips", "FuzzingLLVM", "GarbageCollection", "GetElementPtr", "GettingInvolved", "GettingStarted", "GettingStartedTutorials", "GettingStartedVS", "GitBisecting", "GitRepositoryPolicy", "GlobalISel/GMIR", "GlobalISel/GenericOpcode", "GlobalISel/IRTranslator", "GlobalISel/InstructionSelect", "GlobalISel/KnownBits", "GlobalISel/Legalizer", "GlobalISel/Pipeline", "GlobalISel/Porting", "GlobalISel/RegBankSelect", "GlobalISel/Resources", "GlobalISel/index", "GoldPlugin", "GwpAsan", "HowToAddABuilder", "HowToBuildOnARM", "HowToBuildWindowsItaniumPrograms", "HowToBuildWithPGO", "HowToCrossCompileBuiltinsOnArm", "HowToCrossCompileLLVM", "HowToReleaseLLVM", "HowToSetUpLLVMStyleRTTI", "HowToSubmitABug", "HowToUpdateDebugInfo", "HowToUseAttributes", "HowToUseInstrMappings", "InAlloca", "JITLink", "LangRef", "Lexicon", "LibFuzzer", "LinkTimeOptimization", "LoopTerminology", "MCJITDesignAndImplementation", "MIRLangRef", "MarkdownQuickstartTemplate", "MarkedUpDisassembly", "MeetupGuidelines", "MemTagSanitizer", "MemorySSA", "MergeFunctions", "MyFirstTypoFix", "NVPTXUsage", "NewPassManager", "ORCv2", "OpaquePointers", "OptBisect", "PDB/CodeViewSymbols", "PDB/CodeViewTypes", "PDB/DbiStream", "PDB/GlobalStream", "PDB/HashTable", "PDB/ModiStream", "PDB/MsfFile", "PDB/PdbStream", "PDB/PublicStream", "PDB/TpiStream", "PDB/index", "Packaging", "Passes", "Phabricator", "PointerAuth", "ProgrammersManual", "Projects", "Proposals/GitHubMove", "Proposals/TestSuite", "Proposals/VariableNames", "Proposals/VectorPredication", "Proposals/VectorizationPlan", "Reference", "ReleaseNotes", "ReleaseProcess", "Remarks", "ReportingGuide", "ScudoHardenedAllocator", "Security", "SecurityTransparencyReports", "SegmentedStacks", "SourceLevelDebugging", "SpeculativeLoadHardening", "SphinxQuickstartTemplate", "StackMaps", "StackSafetyAnalysis", "Statepoints", "SupportLibrary", "SupportPolicy", "SystemLibrary", "TableGen/BackEnds", "TableGen/BackGuide", "TableGen/ProgRef", "TableGen/index", "TableGenFundamentals", "TestSuiteGuide", "TestSuiteMakefileGuide", "TestingGuide", "TransformMetadata", "TypeMetadata", "UserGuides", "Vectorizers", "WritingAnLLVMBackend", "WritingAnLLVMNewPMPass", "WritingAnLLVMPass", "XRay", "XRayExample", "XRayFDRFormat", "YamlIO", "index", "tutorial/BuildingAJIT1", "tutorial/BuildingAJIT2", "tutorial/BuildingAJIT3", "tutorial/BuildingAJIT4", "tutorial/LangImpl01", "tutorial/LangImpl02", "tutorial/LangImpl03", "tutorial/LangImpl04", "tutorial/LangImpl05", "tutorial/LangImpl06", "tutorial/LangImpl07", "tutorial/LangImpl08", "tutorial/LangImpl09", "tutorial/LangImpl10", "tutorial/MyFirstLanguageFrontend/LangImpl01", "tutorial/MyFirstLanguageFrontend/LangImpl02", "tutorial/MyFirstLanguageFrontend/LangImpl03", "tutorial/MyFirstLanguageFrontend/LangImpl04", "tutorial/MyFirstLanguageFrontend/LangImpl05", "tutorial/MyFirstLanguageFrontend/LangImpl06", "tutorial/MyFirstLanguageFrontend/LangImpl07", "tutorial/MyFirstLanguageFrontend/LangImpl08", "tutorial/MyFirstLanguageFrontend/LangImpl09", "tutorial/MyFirstLanguageFrontend/LangImpl10", "tutorial/MyFirstLanguageFrontend/index", "tutorial/index", "yaml2obj"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["AMDGPU/AMDGPUAsmGFX10.rst", "AMDGPU/AMDGPUAsmGFX1011.rst", "AMDGPU/AMDGPUAsmGFX7.rst", "AMDGPU/AMDGPUAsmGFX8.rst", "AMDGPU/AMDGPUAsmGFX9.rst", "AMDGPU/AMDGPUAsmGFX900.rst", "AMDGPU/AMDGPUAsmGFX904.rst", "AMDGPU/AMDGPUAsmGFX906.rst", "AMDGPU/AMDGPUAsmGFX908.rst", "AMDGPU/AMDGPUAsmGFX90a.rst", "AMDGPU/gfx1011_src.rst", "AMDGPU/gfx1011_src_1.rst", "AMDGPU/gfx1011_src_2.rst", "AMDGPU/gfx1011_src_3.rst", "AMDGPU/gfx1011_type_deviation.rst", "AMDGPU/gfx1011_vdst.rst", "AMDGPU/gfx1011_vsrc.rst", "AMDGPU/gfx10_attr.rst", "AMDGPU/gfx10_dst.rst", "AMDGPU/gfx10_fx_operand.rst", "AMDGPU/gfx10_hwreg.rst", "AMDGPU/gfx10_imm16.rst", "AMDGPU/gfx10_imm16_1.rst", "AMDGPU/gfx10_imm16_2.rst", "AMDGPU/gfx10_label.rst", "AMDGPU/gfx10_m.rst", "AMDGPU/gfx10_m_1.rst", "AMDGPU/gfx10_msg.rst", "AMDGPU/gfx10_opt.rst", "AMDGPU/gfx10_param.rst", "AMDGPU/gfx10_probe.rst", "AMDGPU/gfx10_saddr.rst", "AMDGPU/gfx10_saddr_1.rst", "AMDGPU/gfx10_sbase.rst", "AMDGPU/gfx10_sbase_1.rst", "AMDGPU/gfx10_sbase_2.rst", "AMDGPU/gfx10_sdata.rst", "AMDGPU/gfx10_sdata_1.rst", "AMDGPU/gfx10_sdata_2.rst", "AMDGPU/gfx10_sdata_3.rst", "AMDGPU/gfx10_sdata_4.rst", "AMDGPU/gfx10_sdata_5.rst", "AMDGPU/gfx10_sdst.rst", "AMDGPU/gfx10_sdst_1.rst", "AMDGPU/gfx10_sdst_2.rst", "AMDGPU/gfx10_sdst_3.rst", "AMDGPU/gfx10_sdst_4.rst", "AMDGPU/gfx10_sdst_5.rst", "AMDGPU/gfx10_sdst_6.rst", "AMDGPU/gfx10_sdst_7.rst", "AMDGPU/gfx10_sdst_8.rst", "AMDGPU/gfx10_simm32.rst", "AMDGPU/gfx10_simm32_1.rst", "AMDGPU/gfx10_simm32_2.rst", "AMDGPU/gfx10_soffset.rst", "AMDGPU/gfx10_soffset_1.rst", "AMDGPU/gfx10_soffset_2.rst", "AMDGPU/gfx10_src.rst", "AMDGPU/gfx10_src_1.rst", "AMDGPU/gfx10_src_2.rst", "AMDGPU/gfx10_src_3.rst", "AMDGPU/gfx10_src_4.rst", "AMDGPU/gfx10_src_5.rst", "AMDGPU/gfx10_src_6.rst", "AMDGPU/gfx10_src_7.rst", "AMDGPU/gfx10_src_8.rst", "AMDGPU/gfx10_srsrc.rst", "AMDGPU/gfx10_srsrc_1.rst", "AMDGPU/gfx10_ssamp.rst", "AMDGPU/gfx10_ssrc.rst", "AMDGPU/gfx10_ssrc_1.rst", "AMDGPU/gfx10_ssrc_2.rst", "AMDGPU/gfx10_ssrc_3.rst", "AMDGPU/gfx10_ssrc_4.rst", "AMDGPU/gfx10_ssrc_5.rst", "AMDGPU/gfx10_ssrc_6.rst", "AMDGPU/gfx10_ssrc_7.rst", "AMDGPU/gfx10_ssrc_8.rst", "AMDGPU/gfx10_tgt.rst", "AMDGPU/gfx10_type_deviation.rst", "AMDGPU/gfx10_vaddr.rst", "AMDGPU/gfx10_vaddr_1.rst", "AMDGPU/gfx10_vaddr_2.rst", "AMDGPU/gfx10_vaddr_3.rst", "AMDGPU/gfx10_vaddr_4.rst", "AMDGPU/gfx10_vaddr_5.rst", "AMDGPU/gfx10_vcc.rst", "AMDGPU/gfx10_vdata.rst", "AMDGPU/gfx10_vdata0.rst", "AMDGPU/gfx10_vdata0_1.rst", "AMDGPU/gfx10_vdata1.rst", "AMDGPU/gfx10_vdata1_1.rst", "AMDGPU/gfx10_vdata_1.rst", "AMDGPU/gfx10_vdata_10.rst", "AMDGPU/gfx10_vdata_2.rst", "AMDGPU/gfx10_vdata_3.rst", "AMDGPU/gfx10_vdata_4.rst", "AMDGPU/gfx10_vdata_5.rst", "AMDGPU/gfx10_vdata_6.rst", "AMDGPU/gfx10_vdata_7.rst", "AMDGPU/gfx10_vdata_8.rst", "AMDGPU/gfx10_vdata_9.rst", "AMDGPU/gfx10_vdst.rst", "AMDGPU/gfx10_vdst_1.rst", "AMDGPU/gfx10_vdst_10.rst", "AMDGPU/gfx10_vdst_11.rst", "AMDGPU/gfx10_vdst_12.rst", "AMDGPU/gfx10_vdst_13.rst", "AMDGPU/gfx10_vdst_2.rst", "AMDGPU/gfx10_vdst_3.rst", "AMDGPU/gfx10_vdst_4.rst", "AMDGPU/gfx10_vdst_5.rst", "AMDGPU/gfx10_vdst_6.rst", "AMDGPU/gfx10_vdst_7.rst", "AMDGPU/gfx10_vdst_8.rst", "AMDGPU/gfx10_vdst_9.rst", "AMDGPU/gfx10_vsrc.rst", "AMDGPU/gfx10_vsrc_1.rst", "AMDGPU/gfx10_vsrc_2.rst", "AMDGPU/gfx10_vsrc_3.rst", "AMDGPU/gfx10_waitcnt.rst", "AMDGPU/gfx7_attr.rst", "AMDGPU/gfx7_dst.rst", "AMDGPU/gfx7_hwreg.rst", "AMDGPU/gfx7_imm16.rst", "AMDGPU/gfx7_imm16_1.rst", "AMDGPU/gfx7_imm16_2.rst", "AMDGPU/gfx7_label.rst", "AMDGPU/gfx7_m.rst", "AMDGPU/gfx7_msg.rst", "AMDGPU/gfx7_opt.rst", "AMDGPU/gfx7_param.rst", "AMDGPU/gfx7_sbase.rst", "AMDGPU/gfx7_sbase_1.rst", "AMDGPU/gfx7_sdst.rst", "AMDGPU/gfx7_sdst_1.rst", "AMDGPU/gfx7_sdst_2.rst", "AMDGPU/gfx7_sdst_3.rst", "AMDGPU/gfx7_sdst_4.rst", "AMDGPU/gfx7_sdst_5.rst", "AMDGPU/gfx7_sdst_6.rst", "AMDGPU/gfx7_sdst_7.rst", "AMDGPU/gfx7_simm32.rst", "AMDGPU/gfx7_simm32_1.rst", "AMDGPU/gfx7_soffset.rst", "AMDGPU/gfx7_soffset_1.rst", "AMDGPU/gfx7_src.rst", "AMDGPU/gfx7_src_1.rst", "AMDGPU/gfx7_src_10.rst", "AMDGPU/gfx7_src_2.rst", "AMDGPU/gfx7_src_3.rst", "AMDGPU/gfx7_src_4.rst", "AMDGPU/gfx7_src_5.rst", "AMDGPU/gfx7_src_6.rst", "AMDGPU/gfx7_src_7.rst", "AMDGPU/gfx7_src_8.rst", "AMDGPU/gfx7_src_9.rst", "AMDGPU/gfx7_srsrc.rst", "AMDGPU/gfx7_srsrc_1.rst", "AMDGPU/gfx7_ssamp.rst", "AMDGPU/gfx7_ssrc.rst", "AMDGPU/gfx7_ssrc_1.rst", "AMDGPU/gfx7_ssrc_10.rst", "AMDGPU/gfx7_ssrc_2.rst", "AMDGPU/gfx7_ssrc_3.rst", "AMDGPU/gfx7_ssrc_4.rst", "AMDGPU/gfx7_ssrc_5.rst", "AMDGPU/gfx7_ssrc_6.rst", "AMDGPU/gfx7_ssrc_7.rst", "AMDGPU/gfx7_ssrc_8.rst", "AMDGPU/gfx7_ssrc_9.rst", "AMDGPU/gfx7_tgt.rst", "AMDGPU/gfx7_type_deviation.rst", "AMDGPU/gfx7_vaddr.rst", "AMDGPU/gfx7_vaddr_1.rst", "AMDGPU/gfx7_vaddr_2.rst", "AMDGPU/gfx7_vaddr_3.rst", "AMDGPU/gfx7_vcc.rst", "AMDGPU/gfx7_vdata.rst", "AMDGPU/gfx7_vdata0.rst", "AMDGPU/gfx7_vdata0_1.rst", "AMDGPU/gfx7_vdata1.rst", "AMDGPU/gfx7_vdata1_1.rst", "AMDGPU/gfx7_vdata_1.rst", "AMDGPU/gfx7_vdata_2.rst", "AMDGPU/gfx7_vdata_3.rst", "AMDGPU/gfx7_vdata_4.rst", "AMDGPU/gfx7_vdata_5.rst", "AMDGPU/gfx7_vdata_6.rst", "AMDGPU/gfx7_vdata_7.rst", "AMDGPU/gfx7_vdata_8.rst", "AMDGPU/gfx7_vdata_9.rst", "AMDGPU/gfx7_vdst.rst", "AMDGPU/gfx7_vdst_1.rst", "AMDGPU/gfx7_vdst_10.rst", "AMDGPU/gfx7_vdst_11.rst", "AMDGPU/gfx7_vdst_12.rst", "AMDGPU/gfx7_vdst_2.rst", "AMDGPU/gfx7_vdst_3.rst", "AMDGPU/gfx7_vdst_4.rst", "AMDGPU/gfx7_vdst_5.rst", "AMDGPU/gfx7_vdst_6.rst", "AMDGPU/gfx7_vdst_7.rst", "AMDGPU/gfx7_vdst_8.rst", "AMDGPU/gfx7_vdst_9.rst", "AMDGPU/gfx7_vsrc.rst", "AMDGPU/gfx7_vsrc_1.rst", "AMDGPU/gfx7_vsrc_2.rst", "AMDGPU/gfx7_vsrc_3.rst", "AMDGPU/gfx7_waitcnt.rst", "AMDGPU/gfx8_attr.rst", "AMDGPU/gfx8_dst.rst", "AMDGPU/gfx8_hwreg.rst", "AMDGPU/gfx8_imask.rst", "AMDGPU/gfx8_imm16.rst", "AMDGPU/gfx8_imm16_1.rst", "AMDGPU/gfx8_imm16_2.rst", "AMDGPU/gfx8_label.rst", "AMDGPU/gfx8_m.rst", "AMDGPU/gfx8_m_1.rst", "AMDGPU/gfx8_msg.rst", "AMDGPU/gfx8_opt.rst", "AMDGPU/gfx8_param.rst", "AMDGPU/gfx8_probe.rst", "AMDGPU/gfx8_sbase.rst", "AMDGPU/gfx8_sbase_1.rst", "AMDGPU/gfx8_sdata.rst", "AMDGPU/gfx8_sdata_1.rst", "AMDGPU/gfx8_sdata_2.rst", "AMDGPU/gfx8_sdst.rst", "AMDGPU/gfx8_sdst_1.rst", "AMDGPU/gfx8_sdst_2.rst", "AMDGPU/gfx8_sdst_3.rst", "AMDGPU/gfx8_sdst_4.rst", "AMDGPU/gfx8_sdst_5.rst", "AMDGPU/gfx8_sdst_6.rst", "AMDGPU/gfx8_sdst_7.rst", "AMDGPU/gfx8_simm32.rst", "AMDGPU/gfx8_simm32_1.rst", "AMDGPU/gfx8_simm32_2.rst", "AMDGPU/gfx8_soffset.rst", "AMDGPU/gfx8_soffset_1.rst", "AMDGPU/gfx8_soffset_2.rst", "AMDGPU/gfx8_src.rst", "AMDGPU/gfx8_src_1.rst", "AMDGPU/gfx8_src_10.rst", "AMDGPU/gfx8_src_2.rst", "AMDGPU/gfx8_src_3.rst", "AMDGPU/gfx8_src_4.rst", "AMDGPU/gfx8_src_5.rst", "AMDGPU/gfx8_src_6.rst", "AMDGPU/gfx8_src_7.rst", "AMDGPU/gfx8_src_8.rst", "AMDGPU/gfx8_src_9.rst", "AMDGPU/gfx8_srsrc.rst", "AMDGPU/gfx8_srsrc_1.rst", "AMDGPU/gfx8_ssamp.rst", "AMDGPU/gfx8_ssrc.rst", "AMDGPU/gfx8_ssrc_1.rst", "AMDGPU/gfx8_ssrc_2.rst", "AMDGPU/gfx8_ssrc_3.rst", "AMDGPU/gfx8_ssrc_4.rst", "AMDGPU/gfx8_ssrc_5.rst", "AMDGPU/gfx8_ssrc_6.rst", "AMDGPU/gfx8_ssrc_7.rst", "AMDGPU/gfx8_ssrc_8.rst", "AMDGPU/gfx8_tgt.rst", "AMDGPU/gfx8_type_deviation.rst", "AMDGPU/gfx8_vaddr.rst", "AMDGPU/gfx8_vaddr_1.rst", "AMDGPU/gfx8_vaddr_2.rst", "AMDGPU/gfx8_vaddr_3.rst", "AMDGPU/gfx8_vcc.rst", "AMDGPU/gfx8_vdata.rst", "AMDGPU/gfx8_vdata0.rst", "AMDGPU/gfx8_vdata0_1.rst", "AMDGPU/gfx8_vdata1.rst", "AMDGPU/gfx8_vdata1_1.rst", "AMDGPU/gfx8_vdata_1.rst", "AMDGPU/gfx8_vdata_10.rst", "AMDGPU/gfx8_vdata_11.rst", "AMDGPU/gfx8_vdata_12.rst", "AMDGPU/gfx8_vdata_13.rst", "AMDGPU/gfx8_vdata_14.rst", "AMDGPU/gfx8_vdata_2.rst", "AMDGPU/gfx8_vdata_3.rst", "AMDGPU/gfx8_vdata_4.rst", "AMDGPU/gfx8_vdata_5.rst", "AMDGPU/gfx8_vdata_6.rst", "AMDGPU/gfx8_vdata_7.rst", "AMDGPU/gfx8_vdata_8.rst", "AMDGPU/gfx8_vdata_9.rst", "AMDGPU/gfx8_vdst.rst", "AMDGPU/gfx8_vdst_1.rst", "AMDGPU/gfx8_vdst_10.rst", "AMDGPU/gfx8_vdst_11.rst", "AMDGPU/gfx8_vdst_12.rst", "AMDGPU/gfx8_vdst_13.rst", "AMDGPU/gfx8_vdst_14.rst", "AMDGPU/gfx8_vdst_15.rst", "AMDGPU/gfx8_vdst_16.rst", "AMDGPU/gfx8_vdst_17.rst", "AMDGPU/gfx8_vdst_2.rst", "AMDGPU/gfx8_vdst_3.rst", "AMDGPU/gfx8_vdst_4.rst", "AMDGPU/gfx8_vdst_5.rst", "AMDGPU/gfx8_vdst_6.rst", "AMDGPU/gfx8_vdst_7.rst", "AMDGPU/gfx8_vdst_8.rst", "AMDGPU/gfx8_vdst_9.rst", "AMDGPU/gfx8_vsrc.rst", "AMDGPU/gfx8_vsrc_1.rst", "AMDGPU/gfx8_vsrc_2.rst", "AMDGPU/gfx8_vsrc_3.rst", "AMDGPU/gfx8_waitcnt.rst", "AMDGPU/gfx900_fx_operand.rst", "AMDGPU/gfx900_m.rst", "AMDGPU/gfx900_src.rst", "AMDGPU/gfx900_src_1.rst", "AMDGPU/gfx900_vdst.rst", "AMDGPU/gfx904_fx_operand.rst", "AMDGPU/gfx904_m.rst", "AMDGPU/gfx904_src.rst", "AMDGPU/gfx904_src_1.rst", "AMDGPU/gfx904_vdst.rst", "AMDGPU/gfx906_fx_operand.rst", "AMDGPU/gfx906_m.rst", "AMDGPU/gfx906_m_1.rst", "AMDGPU/gfx906_src.rst", "AMDGPU/gfx906_src_1.rst", "AMDGPU/gfx906_src_2.rst", "AMDGPU/gfx906_src_3.rst", "AMDGPU/gfx906_src_4.rst", "AMDGPU/gfx906_type_deviation.rst", "AMDGPU/gfx906_vdst.rst", "AMDGPU/gfx906_vsrc.rst", "AMDGPU/gfx908_dst.rst", "AMDGPU/gfx908_fx_operand.rst", "AMDGPU/gfx908_m.rst", "AMDGPU/gfx908_m_1.rst", "AMDGPU/gfx908_opt.rst", "AMDGPU/gfx908_saddr.rst", "AMDGPU/gfx908_soffset.rst", "AMDGPU/gfx908_src.rst", "AMDGPU/gfx908_src_1.rst", "AMDGPU/gfx908_src_2.rst", "AMDGPU/gfx908_src_3.rst", "AMDGPU/gfx908_src_4.rst", "AMDGPU/gfx908_src_5.rst", "AMDGPU/gfx908_srsrc.rst", "AMDGPU/gfx908_type_deviation.rst", "AMDGPU/gfx908_vaddr.rst", "AMDGPU/gfx908_vaddr_1.rst", "AMDGPU/gfx908_vdata.rst", "AMDGPU/gfx908_vdata_1.rst", "AMDGPU/gfx908_vdst.rst", "AMDGPU/gfx908_vdst_1.rst", "AMDGPU/gfx908_vdst_2.rst", "AMDGPU/gfx908_vdst_3.rst", "AMDGPU/gfx908_vdst_4.rst", "AMDGPU/gfx908_vdst_5.rst", "AMDGPU/gfx908_vsrc.rst", "AMDGPU/gfx908_vsrc_1.rst", "AMDGPU/gfx908_vsrc_2.rst", "AMDGPU/gfx908_vsrc_3.rst", "AMDGPU/gfx908_vsrc_4.rst", "AMDGPU/gfx908_vsrc_5.rst", "AMDGPU/gfx908_vsrc_6.rst", "AMDGPU/gfx90a_dst.rst", "AMDGPU/gfx90a_fx_operand.rst", "AMDGPU/gfx90a_hwreg.rst", "AMDGPU/gfx90a_imask.rst", "AMDGPU/gfx90a_imm16.rst", "AMDGPU/gfx90a_imm16_1.rst", "AMDGPU/gfx90a_imm16_2.rst", "AMDGPU/gfx90a_label.rst", "AMDGPU/gfx90a_m.rst", "AMDGPU/gfx90a_m_1.rst", "AMDGPU/gfx90a_msg.rst", "AMDGPU/gfx90a_opt.rst", "AMDGPU/gfx90a_probe.rst", "AMDGPU/gfx90a_saddr.rst", "AMDGPU/gfx90a_saddr_1.rst", "AMDGPU/gfx90a_sbase.rst", "AMDGPU/gfx90a_sbase_1.rst", "AMDGPU/gfx90a_sbase_2.rst", "AMDGPU/gfx90a_sdata.rst", "AMDGPU/gfx90a_sdata_1.rst", "AMDGPU/gfx90a_sdata_2.rst", "AMDGPU/gfx90a_sdata_3.rst", "AMDGPU/gfx90a_sdata_4.rst", "AMDGPU/gfx90a_sdata_5.rst", "AMDGPU/gfx90a_sdst.rst", "AMDGPU/gfx90a_sdst_1.rst", "AMDGPU/gfx90a_sdst_2.rst", "AMDGPU/gfx90a_sdst_3.rst", "AMDGPU/gfx90a_sdst_4.rst", "AMDGPU/gfx90a_sdst_5.rst", "AMDGPU/gfx90a_sdst_6.rst", "AMDGPU/gfx90a_sdst_7.rst", "AMDGPU/gfx90a_simm32.rst", "AMDGPU/gfx90a_simm32_1.rst", "AMDGPU/gfx90a_simm32_2.rst", "AMDGPU/gfx90a_soffset.rst", "AMDGPU/gfx90a_soffset_1.rst", "AMDGPU/gfx90a_soffset_2.rst", "AMDGPU/gfx90a_src.rst", "AMDGPU/gfx90a_src_1.rst", "AMDGPU/gfx90a_src_10.rst", "AMDGPU/gfx90a_src_11.rst", "AMDGPU/gfx90a_src_2.rst", "AMDGPU/gfx90a_src_3.rst", "AMDGPU/gfx90a_src_4.rst", "AMDGPU/gfx90a_src_5.rst", "AMDGPU/gfx90a_src_6.rst", "AMDGPU/gfx90a_src_7.rst", "AMDGPU/gfx90a_src_8.rst", "AMDGPU/gfx90a_src_9.rst", "AMDGPU/gfx90a_srsrc.rst", "AMDGPU/gfx90a_srsrc_1.rst", "AMDGPU/gfx90a_ssamp.rst", "AMDGPU/gfx90a_ssrc.rst", "AMDGPU/gfx90a_ssrc_1.rst", "AMDGPU/gfx90a_ssrc_2.rst", "AMDGPU/gfx90a_ssrc_3.rst", "AMDGPU/gfx90a_ssrc_4.rst", "AMDGPU/gfx90a_ssrc_5.rst", "AMDGPU/gfx90a_ssrc_6.rst", "AMDGPU/gfx90a_ssrc_7.rst", "AMDGPU/gfx90a_ssrc_8.rst", "AMDGPU/gfx90a_type_deviation.rst", "AMDGPU/gfx90a_vaddr.rst", "AMDGPU/gfx90a_vaddr_1.rst", "AMDGPU/gfx90a_vaddr_2.rst", "AMDGPU/gfx90a_vaddr_3.rst", "AMDGPU/gfx90a_vaddr_4.rst", "AMDGPU/gfx90a_vaddr_5.rst", "AMDGPU/gfx90a_vcc.rst", "AMDGPU/gfx90a_vdata.rst", "AMDGPU/gfx90a_vdata0.rst", "AMDGPU/gfx90a_vdata0_1.rst", "AMDGPU/gfx90a_vdata1.rst", "AMDGPU/gfx90a_vdata1_1.rst", "AMDGPU/gfx90a_vdata_1.rst", "AMDGPU/gfx90a_vdata_10.rst", "AMDGPU/gfx90a_vdata_2.rst", "AMDGPU/gfx90a_vdata_3.rst", "AMDGPU/gfx90a_vdata_4.rst", "AMDGPU/gfx90a_vdata_5.rst", "AMDGPU/gfx90a_vdata_6.rst", "AMDGPU/gfx90a_vdata_7.rst", "AMDGPU/gfx90a_vdata_8.rst", "AMDGPU/gfx90a_vdata_9.rst", "AMDGPU/gfx90a_vdst.rst", "AMDGPU/gfx90a_vdst_1.rst", "AMDGPU/gfx90a_vdst_10.rst", "AMDGPU/gfx90a_vdst_11.rst", "AMDGPU/gfx90a_vdst_12.rst", "AMDGPU/gfx90a_vdst_13.rst", "AMDGPU/gfx90a_vdst_14.rst", "AMDGPU/gfx90a_vdst_15.rst", "AMDGPU/gfx90a_vdst_16.rst", "AMDGPU/gfx90a_vdst_17.rst", "AMDGPU/gfx90a_vdst_18.rst", "AMDGPU/gfx90a_vdst_19.rst", "AMDGPU/gfx90a_vdst_2.rst", "AMDGPU/gfx90a_vdst_3.rst", "AMDGPU/gfx90a_vdst_4.rst", "AMDGPU/gfx90a_vdst_5.rst", "AMDGPU/gfx90a_vdst_6.rst", "AMDGPU/gfx90a_vdst_7.rst", "AMDGPU/gfx90a_vdst_8.rst", "AMDGPU/gfx90a_vdst_9.rst", "AMDGPU/gfx90a_vsrc.rst", "AMDGPU/gfx90a_vsrc_1.rst", "AMDGPU/gfx90a_vsrc_2.rst", "AMDGPU/gfx90a_vsrc_3.rst", "AMDGPU/gfx90a_vsrc_4.rst", "AMDGPU/gfx90a_vsrc_5.rst", "AMDGPU/gfx90a_waitcnt.rst", "AMDGPU/gfx9_attr.rst", "AMDGPU/gfx9_dst.rst", "AMDGPU/gfx9_hwreg.rst", "AMDGPU/gfx9_imask.rst", "AMDGPU/gfx9_imm16.rst", "AMDGPU/gfx9_imm16_1.rst", "AMDGPU/gfx9_imm16_2.rst", "AMDGPU/gfx9_label.rst", "AMDGPU/gfx9_m.rst", "AMDGPU/gfx9_m_1.rst", "AMDGPU/gfx9_msg.rst", "AMDGPU/gfx9_opt.rst", "AMDGPU/gfx9_param.rst", "AMDGPU/gfx9_probe.rst", "AMDGPU/gfx9_saddr.rst", "AMDGPU/gfx9_saddr_1.rst", "AMDGPU/gfx9_sbase.rst", "AMDGPU/gfx9_sbase_1.rst", "AMDGPU/gfx9_sbase_2.rst", "AMDGPU/gfx9_sdata.rst", "AMDGPU/gfx9_sdata_1.rst", "AMDGPU/gfx9_sdata_2.rst", "AMDGPU/gfx9_sdata_3.rst", "AMDGPU/gfx9_sdata_4.rst", "AMDGPU/gfx9_sdata_5.rst", "AMDGPU/gfx9_sdst.rst", "AMDGPU/gfx9_sdst_1.rst", "AMDGPU/gfx9_sdst_2.rst", "AMDGPU/gfx9_sdst_3.rst", "AMDGPU/gfx9_sdst_4.rst", "AMDGPU/gfx9_sdst_5.rst", "AMDGPU/gfx9_sdst_6.rst", "AMDGPU/gfx9_sdst_7.rst", "AMDGPU/gfx9_simm32.rst", "AMDGPU/gfx9_simm32_1.rst", "AMDGPU/gfx9_simm32_2.rst", "AMDGPU/gfx9_soffset.rst", "AMDGPU/gfx9_soffset_1.rst", "AMDGPU/gfx9_soffset_2.rst", "AMDGPU/gfx9_src.rst", "AMDGPU/gfx9_src_1.rst", "AMDGPU/gfx9_src_10.rst", "AMDGPU/gfx9_src_2.rst", "AMDGPU/gfx9_src_3.rst", "AMDGPU/gfx9_src_4.rst", "AMDGPU/gfx9_src_5.rst", "AMDGPU/gfx9_src_6.rst", "AMDGPU/gfx9_src_7.rst", "AMDGPU/gfx9_src_8.rst", "AMDGPU/gfx9_src_9.rst", "AMDGPU/gfx9_srsrc.rst", "AMDGPU/gfx9_srsrc_1.rst", "AMDGPU/gfx9_ssamp.rst", "AMDGPU/gfx9_ssrc.rst", "AMDGPU/gfx9_ssrc_1.rst", "AMDGPU/gfx9_ssrc_2.rst", "AMDGPU/gfx9_ssrc_3.rst", "AMDGPU/gfx9_ssrc_4.rst", "AMDGPU/gfx9_ssrc_5.rst", "AMDGPU/gfx9_ssrc_6.rst", "AMDGPU/gfx9_ssrc_7.rst", "AMDGPU/gfx9_ssrc_8.rst", "AMDGPU/gfx9_tgt.rst", "AMDGPU/gfx9_type_deviation.rst", "AMDGPU/gfx9_vaddr.rst", "AMDGPU/gfx9_vaddr_1.rst", "AMDGPU/gfx9_vaddr_2.rst", "AMDGPU/gfx9_vaddr_3.rst", "AMDGPU/gfx9_vaddr_4.rst", "AMDGPU/gfx9_vaddr_5.rst", "AMDGPU/gfx9_vcc.rst", "AMDGPU/gfx9_vdata.rst", "AMDGPU/gfx9_vdata0.rst", "AMDGPU/gfx9_vdata0_1.rst", "AMDGPU/gfx9_vdata1.rst", "AMDGPU/gfx9_vdata1_1.rst", "AMDGPU/gfx9_vdata_1.rst", "AMDGPU/gfx9_vdata_10.rst", "AMDGPU/gfx9_vdata_2.rst", "AMDGPU/gfx9_vdata_3.rst", "AMDGPU/gfx9_vdata_4.rst", "AMDGPU/gfx9_vdata_5.rst", "AMDGPU/gfx9_vdata_6.rst", "AMDGPU/gfx9_vdata_7.rst", "AMDGPU/gfx9_vdata_8.rst", "AMDGPU/gfx9_vdata_9.rst", "AMDGPU/gfx9_vdst.rst", "AMDGPU/gfx9_vdst_1.rst", "AMDGPU/gfx9_vdst_10.rst", "AMDGPU/gfx9_vdst_11.rst", "AMDGPU/gfx9_vdst_12.rst", "AMDGPU/gfx9_vdst_13.rst", "AMDGPU/gfx9_vdst_2.rst", "AMDGPU/gfx9_vdst_3.rst", "AMDGPU/gfx9_vdst_4.rst", "AMDGPU/gfx9_vdst_5.rst", "AMDGPU/gfx9_vdst_6.rst", "AMDGPU/gfx9_vdst_7.rst", "AMDGPU/gfx9_vdst_8.rst", "AMDGPU/gfx9_vdst_9.rst", "AMDGPU/gfx9_vsrc.rst", "AMDGPU/gfx9_vsrc_1.rst", "AMDGPU/gfx9_vsrc_2.rst", "AMDGPU/gfx9_vsrc_3.rst", "AMDGPU/gfx9_waitcnt.rst", "AMDGPUDwarfExtensionAllowLocationDescriptionOnTheDwarfExpressionStack/AMDGPUDwarfExtensionAllowLocationDescriptionOnTheDwarfExpressionStack.md", "AMDGPUDwarfExtensionsForHeterogeneousDebugging.rst", "AMDGPUInstructionNotation.rst", "AMDGPUInstructionSyntax.rst", "AMDGPUModifierSyntax.rst", "AMDGPUOperandSyntax.rst", "AMDGPUUsage.rst", "AddingConstrainedIntrinsics.rst", "AdvancedBuilds.rst", "AliasAnalysis.rst", "Atomics.rst", "Benchmarking.rst", "BigEndianNEON.rst", "BitCodeFormat.rst", "BlockFrequencyTerminology.rst", "BranchWeightMetadata.rst", "BugLifeCycle.rst", "Bugpoint.rst", "BugpointRedesign.md", "BuildingADistribution.rst", "CFIVerify.rst", "CMake.rst", "CMakePrimer.rst", "CodeGenerator.rst", "CodeOfConduct.rst", "CodeReview.rst", "CodingStandards.rst", "CommandGuide/FileCheck.rst", "CommandGuide/bugpoint.rst", "CommandGuide/clang-tblgen.rst", "CommandGuide/dsymutil.rst", "CommandGuide/index.rst", "CommandGuide/lit.rst", "CommandGuide/llc.rst", "CommandGuide/lldb-tblgen.rst", "CommandGuide/lli.rst", "CommandGuide/llvm-addr2line.rst", "CommandGuide/llvm-ar.rst", "CommandGuide/llvm-as.rst", "CommandGuide/llvm-bcanalyzer.rst", "CommandGuide/llvm-config.rst", "CommandGuide/llvm-cov.rst", "CommandGuide/llvm-cxxfilt.rst", "CommandGuide/llvm-cxxmap.rst", "CommandGuide/llvm-diff.rst", "CommandGuide/llvm-dis.rst", "CommandGuide/llvm-dwarfdump.rst", "CommandGuide/llvm-exegesis.rst", "CommandGuide/llvm-extract.rst", "CommandGuide/llvm-install-name-tool.rst", "CommandGuide/llvm-lib.rst", "CommandGuide/llvm-libtool-darwin.rst", "CommandGuide/llvm-link.rst", "CommandGuide/llvm-lipo.rst", "CommandGuide/llvm-locstats.rst", "CommandGuide/llvm-mca.rst", "CommandGuide/llvm-nm.rst", "CommandGuide/llvm-objcopy.rst", "CommandGuide/llvm-objdump.rst", "CommandGuide/llvm-otool.rst", "CommandGuide/llvm-pdbutil.rst", "CommandGuide/llvm-profdata.rst", "CommandGuide/llvm-profgen.rst", "CommandGuide/llvm-ranlib.rst", "CommandGuide/llvm-readelf.rst", "CommandGuide/llvm-readobj.rst", "CommandGuide/llvm-size.rst", "CommandGuide/llvm-stress.rst", "CommandGuide/llvm-strings.rst", "CommandGuide/llvm-strip.rst", "CommandGuide/llvm-symbolizer.rst", "CommandGuide/llvm-tblgen.rst", "CommandGuide/llvm-tli-checker.rst", "CommandGuide/mlir-tblgen.rst", "CommandGuide/opt.rst", "CommandGuide/tblgen.rst", "CommandLine.rst", "CompileCudaWithLLVM.rst", "CompilerWriterInfo.rst", "Contributing.rst", "Coroutines.rst", "CoverageMappingFormat.rst", "CycleTerminology.rst", "DebuggingJITedCode.rst", "DependenceGraphs/index.rst", "DeveloperPolicy.rst", "DiscourseMigrationGuide.md", "Docker.rst", "ExceptionHandling.rst", "ExtendingLLVM.rst", "Extensions.rst", "FAQ.rst", "FaultMaps.rst", "Frontend/PerformanceTips.rst", "FuzzingLLVM.rst", "GarbageCollection.rst", "GetElementPtr.rst", "GettingInvolved.rst", "GettingStarted.rst", "GettingStartedTutorials.rst", "GettingStartedVS.rst", "GitBisecting.rst", "GitRepositoryPolicy.md", "GlobalISel/GMIR.rst", "GlobalISel/GenericOpcode.rst", "GlobalISel/IRTranslator.rst", "GlobalISel/InstructionSelect.rst", "GlobalISel/KnownBits.rst", "GlobalISel/Legalizer.rst", "GlobalISel/Pipeline.rst", "GlobalISel/Porting.rst", "GlobalISel/RegBankSelect.rst", "GlobalISel/Resources.rst", "GlobalISel/index.rst", "GoldPlugin.rst", "GwpAsan.rst", "HowToAddABuilder.rst", "HowToBuildOnARM.rst", "HowToBuildWindowsItaniumPrograms.rst", "HowToBuildWithPGO.rst", "HowToCrossCompileBuiltinsOnArm.rst", "HowToCrossCompileLLVM.rst", "HowToReleaseLLVM.rst", "HowToSetUpLLVMStyleRTTI.rst", "HowToSubmitABug.rst", "HowToUpdateDebugInfo.rst", "HowToUseAttributes.rst", "HowToUseInstrMappings.rst", "InAlloca.rst", "JITLink.rst", "LangRef.rst", "Lexicon.rst", "LibFuzzer.rst", "LinkTimeOptimization.rst", "LoopTerminology.rst", "MCJITDesignAndImplementation.rst", "MIRLangRef.rst", "MarkdownQuickstartTemplate.md", "MarkedUpDisassembly.rst", "MeetupGuidelines.rst", "MemTagSanitizer.rst", "MemorySSA.rst", "MergeFunctions.rst", "MyFirstTypoFix.rst", "NVPTXUsage.rst", "NewPassManager.rst", "ORCv2.rst", "OpaquePointers.rst", "OptBisect.rst", "PDB/CodeViewSymbols.rst", "PDB/CodeViewTypes.rst", "PDB/DbiStream.rst", "PDB/GlobalStream.rst", "PDB/HashTable.rst", "PDB/ModiStream.rst", "PDB/MsfFile.rst", "PDB/PdbStream.rst", "PDB/PublicStream.rst", "PDB/TpiStream.rst", "PDB/index.rst", "Packaging.rst", "Passes.rst", "Phabricator.rst", "PointerAuth.md", "ProgrammersManual.rst", "Projects.rst", "Proposals/GitHubMove.rst", "Proposals/TestSuite.rst", "Proposals/VariableNames.rst", "Proposals/VectorPredication.rst", "Proposals/VectorizationPlan.rst", "Reference.rst", "ReleaseNotes.rst", "ReleaseProcess.rst", "Remarks.rst", "ReportingGuide.rst", "ScudoHardenedAllocator.rst", "Security.rst", "SecurityTransparencyReports.rst", "SegmentedStacks.rst", "SourceLevelDebugging.rst", "SpeculativeLoadHardening.md", "SphinxQuickstartTemplate.rst", "StackMaps.rst", "StackSafetyAnalysis.rst", "Statepoints.rst", "SupportLibrary.rst", "SupportPolicy.rst", "SystemLibrary.rst", "TableGen/BackEnds.rst", "TableGen/BackGuide.rst", "TableGen/ProgRef.rst", "TableGen/index.rst", "TableGenFundamentals.rst", "TestSuiteGuide.md", "TestSuiteMakefileGuide.rst", "TestingGuide.rst", "TransformMetadata.rst", "TypeMetadata.rst", "UserGuides.rst", "Vectorizers.rst", "WritingAnLLVMBackend.rst", "WritingAnLLVMNewPMPass.rst", "WritingAnLLVMPass.rst", "XRay.rst", "XRayExample.rst", "XRayFDRFormat.rst", "YamlIO.rst", "index.rst", "tutorial/BuildingAJIT1.rst", "tutorial/BuildingAJIT2.rst", "tutorial/BuildingAJIT3.rst", "tutorial/BuildingAJIT4.rst", "tutorial/LangImpl01.rst", "tutorial/LangImpl02.rst", "tutorial/LangImpl03.rst", "tutorial/LangImpl04.rst", "tutorial/LangImpl05.rst", "tutorial/LangImpl06.rst", "tutorial/LangImpl07.rst", "tutorial/LangImpl08.rst", "tutorial/LangImpl09.rst", "tutorial/LangImpl10.rst", "tutorial/MyFirstLanguageFrontend/LangImpl01.rst", "tutorial/MyFirstLanguageFrontend/LangImpl02.rst", "tutorial/MyFirstLanguageFrontend/LangImpl03.rst", "tutorial/MyFirstLanguageFrontend/LangImpl04.rst", "tutorial/MyFirstLanguageFrontend/LangImpl05.rst", "tutorial/MyFirstLanguageFrontend/LangImpl06.rst", "tutorial/MyFirstLanguageFrontend/LangImpl07.rst", "tutorial/MyFirstLanguageFrontend/LangImpl08.rst", "tutorial/MyFirstLanguageFrontend/LangImpl09.rst", "tutorial/MyFirstLanguageFrontend/LangImpl10.rst", "tutorial/MyFirstLanguageFrontend/index.rst", "tutorial/index.rst", "yaml2obj.rst"], "indexentries": {"--accelerator": [[615, "cmdoption-dsymutil-accelerator", false]], "--add-dyldinfo": [[641, "cmdoption-llvm-nm-add-dyldinfo", false]], "--add-gnu-debuglink": [[642, "cmdoption-llvm-objcopy-add-gnu-debuglink", false]], "--add-inlinedinfo": [[641, "cmdoption-llvm-nm-add-inlinedinfo", false]], "--add-section": [[642, "cmdoption-llvm-objcopy-add-section", false]], "--add-symbol": [[642, "cmdoption-llvm-objcopy-add-symbol", false]], "--addresses": [[655, "cmdoption-llvm-symbolizer-print-address", false]], "--addrsig": [[649, "cmdoption-llvm-readelf-addrsig", false], [650, "cmdoption-llvm-readobj-addrsig", false]], "--adjust-start": [[642, "cmdoption-llvm-objcopy-change-start", false]], "--adjust-vma": [[643, "cmdoption-llvm-objdump-adjust-vma", false], [655, "cmdoption-llvm-symbolizer-adjust-vma", false]], "--all": [[631, "cmdoption-llvm-dwarfdump-a", false], [649, "cmdoption-llvm-readelf-all", false], [650, "cmdoption-llvm-readobj-all", false], [653, "cmdoption-llvm-strings-all", false]], "--all-blocks": [[626, "cmdoption-llvm-cov-gcov-a", false]], "--all-functions": [[646, "cmdoption-llvm-profdata-show-all-functions", false]], "--all-headers": [[643, "cmdoption-llvm-objdump-x", false]], "--allow-broken-links": [[642, "cmdoption-llvm-objcopy-allow-broken-links", false], [654, "cmdoption-llvm-strip-allow-broken-links", false]], "--allow-deprecated-dag-overlap": [[612, "cmdoption-FileCheck-allow-deprecated-dag-overlap", false]], "--allow-empty": [[612, "cmdoption-FileCheck-allow-empty", false]], "--allow-unused-prefixes": [[612, "cmdoption-FileCheck-allow-unused-prefixes", false]], "--apple-names": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-namespaces": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-objc": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-types": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--arch": [[615, "cmdoption-dsymutil-arch", false], [631, "cmdoption-llvm-dwarfdump-arch", false], [641, "cmdoption-llvm-nm-arch", false], [643, "cmdoption-llvm-objdump-arch", false], [651, "cmdoption-llvm-size-arch", false]], "--arch-name": [[643, "cmdoption-llvm-objdump-arch-name", false]], "--arch-specific": [[649, "cmdoption-llvm-readelf-arch-specific", false], [650, "cmdoption-llvm-readobj-arch-specific", false]], "--archive-headers": [[643, "cmdoption-llvm-objdump-a", false]], "--archive-member-offsets": [[643, "cmdoption-llvm-objdump-archive-member-offsets", false]], "--auxiliary-header": [[650, "cmdoption-llvm-readobj-auxiliary-header", false]], "--basenames": [[655, "cmdoption-llvm-symbolizer-basenames", false]], "--bb-addr-map": [[649, "cmdoption-llvm-readelf-bb-addr-map", false], [650, "cmdoption-llvm-readobj-bb-addr-map", false]], "--binary": [[646, "cmdoption-llvm-profdata-merge-binary", false], [647, "cmdoption-llvm-profgen-binary", false]], "--binary-architecture": [[642, "cmdoption-llvm-objcopy-binary-architecture", false]], "--bind": [[643, "cmdoption-llvm-objdump-bind", false]], "--branch-counts": [[626, "cmdoption-llvm-cov-gcov-c", false]], "--branch-probabilities": [[626, "cmdoption-llvm-cov-gcov-b", false]], "--bytes": [[653, "cmdoption-llvm-strings-bytes", false]], "--cg-profile": [[649, "cmdoption-llvm-readelf-cg-profile", false], [650, "cmdoption-llvm-readobj-cg-profile", false]], "--change-start": [[642, "cmdoption-llvm-objcopy-change-start", false]], "--check-prefix": [[612, "cmdoption-FileCheck-check-prefix", false]], "--check-prefixes": [[612, "cmdoption-FileCheck-check-prefixes", false]], "--codeview": [[650, "cmdoption-llvm-readobj-codeview", false]], "--codeview-ghash": [[650, "cmdoption-llvm-readobj-codeview-ghash", false]], "--codeview-merged-types": [[650, "cmdoption-llvm-readobj-codeview-merged-types", false]], "--codeview-subsection-bytes": [[650, "cmdoption-llvm-readobj-codeview-subsection-bytes", false]], "--coff-basereloc": [[650, "cmdoption-llvm-readobj-coff-basereloc", false]], "--coff-debug-directory": [[650, "cmdoption-llvm-readobj-coff-debug-directory", false]], "--coff-directives": [[650, "cmdoption-llvm-readobj-coff-directives", false]], "--coff-exports": [[650, "cmdoption-llvm-readobj-coff-exports", false]], "--coff-imports": [[650, "cmdoption-llvm-readobj-coff-imports", false]], "--coff-load-config": [[650, "cmdoption-llvm-readobj-coff-load-config", false]], "--coff-resources": [[650, "cmdoption-llvm-readobj-coff-resources", false]], "--coff-tls-directory": [[650, "cmdoption-llvm-readobj-coff-tls-directory", false]], "--color": [[612, "cmdoption-FileCheck-color", false], [631, "cmdoption-llvm-dwarfdump-color", false]], "--comment-prefixes": [[612, "cmdoption-FileCheck-comment-prefixes", false]], "--common": [[651, "cmdoption-llvm-size-common", false]], "--compare": [[639, "cmdoption-llvm-locstats-compare", false]], "--compress-all-sections": [[646, "cmdoption-llvm-profdata-merge-compress-all-sections", false]], "--compress-debug-sections": [[642, "cmdoption-llvm-objcopy-compress-debug-sections", false]], "--config-prefix": [[617, "cmdoption-lit-config-prefix", false]], "--counts": [[646, "cmdoption-llvm-profdata-show-counts", false]], "--cs": [[646, "cmdoption-llvm-profdata-overlap-cs", false]], "--data-in-code": [[643, "cmdoption-llvm-objdump-data-in-code", false]], "--debug": [[617, "cmdoption-lit-debug", false]], "--debug-abbrev": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-addr": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-aranges": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-cu-index": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-frame": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-gnu-pubnames": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-gnu-pubtypes": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-info": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false], [646, "cmdoption-llvm-profdata-merge-debug-info", false]], "--debug-line": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-line-str": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-loc": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-loclists": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-macro": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-names": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-pubnames": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-pubtypes": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-ranges": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-rnglists": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-str": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-str-offsets": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-syms": [[641, "cmdoption-llvm-nm-debug-syms", false]], "--debug-tu-index": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-types": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-vars": [[643, "cmdoption-llvm-objdump-debug-vars", false]], "--debug-vars-indent": [[643, "cmdoption-llvm-objdump-debug-vars-indent", false]], "--decompress-debug-sections": [[642, "cmdoption-llvm-objcopy-decompress-debug-sections", false]], "--default-arch": [[655, "cmdoption-llvm-symbolizer-default-arch", false]], "--defined-only": [[641, "cmdoption-llvm-nm-defined-only", false]], "--demangle": [[641, "cmdoption-llvm-nm-demangle", false], [643, "cmdoption-llvm-objdump-C", false], [649, "cmdoption-llvm-readelf-demangle", false], [650, "cmdoption-llvm-readobj-demangle", false], [655, "cmdoption-llvm-symbolizer-demangle", false]], "--demangled-names": [[626, "cmdoption-llvm-cov-gcov-m", false]], "--dependent-libraries": [[649, "cmdoption-llvm-readelf-dependent-libraries", false], [650, "cmdoption-llvm-readobj-dependent-libraries", false]], "--dia": [[655, "cmdoption-llvm-symbolizer-dia", false]], "--diff": [[631, "cmdoption-llvm-dwarfdump-diff", false]], "--dis-symname": [[643, "cmdoption-llvm-objdump-dis-symname", false]], "--disable-deterministic-archives": [[642, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [654, "cmdoption-llvm-strip-disable-deterministic-archives", false]], "--disable-excess-fp-precision": [[618, "cmdoption-llc-disable-excess-fp-precision", false]], "--disassemble": [[643, "cmdoption-llvm-objdump-d", false]], "--disassemble-all": [[643, "cmdoption-llvm-objdump-D", false]], "--disassemble-symbols": [[643, "cmdoption-llvm-objdump-disassemble-symbols", false]], "--disassemble-zeroes": [[643, "cmdoption-llvm-objdump-z", false]], "--disassembler-options": [[643, "cmdoption-llvm-objdump-M", false]], "--discard-all": [[642, "cmdoption-llvm-objcopy-discard-all", false], [654, "cmdoption-llvm-strip-discard-all", false]], "--discard-locals": [[642, "cmdoption-llvm-objcopy-discard-locals", false], [654, "cmdoption-llvm-strip-discard-locals", false]], "--draw-plot": [[639, "cmdoption-llvm-locstats-draw-plot", false]], "--dsym": [[643, "cmdoption-llvm-objdump-dsym", false]], "--dsym-hint": [[655, "cmdoption-llvm-symbolizer-dsym-hint", false]], "--dt": [[650, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dump-debug-map": [[615, "cmdoption-dsymutil-dump-debug-map", false]], "--dump-input": [[612, "cmdoption-FileCheck-dump-input", false]], "--dump-input-context": [[612, "cmdoption-FileCheck-dump-input-context", false]], "--dump-input-filter": [[612, "cmdoption-FileCheck-dump-input-filter", false]], "--dump-object-to-disk": [[632, "cmdoption-llvm-exegesis-dump-object-to-disk", false]], "--dump-section": [[642, "cmdoption-llvm-objcopy-dump-section", false]], "--dump-tli": [[657, "cmdoption-llvm-tli-checker-dump-tli", false]], "--dwarf": [[643, "cmdoption-llvm-objdump-dwarf", false]], "--dwp": [[655, "cmdoption-llvm-symbolizer-dwp", false]], "--dyldinfo-only": [[641, "cmdoption-llvm-nm-dyldinfo-only", false]], "--dylib-id": [[643, "cmdoption-llvm-objdump-dylib-id", false]], "--dylibs-used": [[643, "cmdoption-llvm-objdump-dylibs-used", false]], "--dyn-relocations": [[649, "cmdoption-llvm-readelf-dyn-relocations", false], [650, "cmdoption-llvm-readobj-dyn-relocations", false]], "--dyn-symbols": [[649, "cmdoption-llvm-readelf-dyn-symbols", false], [650, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dyn-syms": [[649, "cmdoption-llvm-readelf-dyn-symbols", false], [650, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dynamic": [[641, "cmdoption-llvm-nm-dynamic", false], [649, "cmdoption-llvm-readelf-dynamic-table", false], [650, "cmdoption-llvm-readobj-dynamic-table", false]], "--dynamic-reloc": [[643, "cmdoption-llvm-objdump-R", false]], "--dynamic-syms": [[643, "cmdoption-llvm-objdump-T", false]], "--dynamic-table": [[649, "cmdoption-llvm-readelf-dynamic-table", false], [650, "cmdoption-llvm-readobj-dynamic-table", false]], "--echo-all-commands": [[617, "cmdoption-lit-vv", false]], "--eh-frame": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--elf-linker-options": [[649, "cmdoption-llvm-readelf-elf-linker-options", false], [650, "cmdoption-llvm-readobj-elf-linker-options", false]], "--elf-output-style": [[649, "cmdoption-llvm-readelf-elf-output-style", false], [650, "cmdoption-llvm-readobj-elf-output-style", false]], "--enable-deterministic-archives": [[642, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [654, "cmdoption-llvm-strip-enable-deterministic-archives", false]], "--enable-no-infs-fp-math": [[618, "cmdoption-llc-enable-no-infs-fp-math", false]], "--enable-no-nans-fp-math": [[618, "cmdoption-llc-enable-no-nans-fp-math", false]], "--enable-no-signed-zeros-fp-math": [[618, "cmdoption-llc-enable-no-signed-zeros-fp-math", false]], "--enable-no-trapping-fp-math": [[618, "cmdoption-llc-enable-no-trapping-fp-math", false]], "--enable-unsafe-fp-math": [[618, "cmdoption-llc-enable-unsafe-fp-math", false]], "--enable-var-scope": [[612, "cmdoption-FileCheck-enable-var-scope", false]], "--exe": [[655, "cmdoption-llvm-symbolizer-obj", false]], "--expand-relocs": [[649, "cmdoption-llvm-readelf-expand-relocs", false], [650, "cmdoption-llvm-readobj-expand-relocs", false]], "--exports-trie": [[643, "cmdoption-llvm-objdump-exports-trie", false]], "--extbinary": [[646, "cmdoption-llvm-profdata-merge-extbinary", false]], "--extern-only": [[641, "cmdoption-llvm-nm-extern-only", false]], "--extract-dwo": [[642, "cmdoption-llvm-objcopy-extract-dwo", false]], "--extract-main-partition": [[642, "cmdoption-llvm-objcopy-extract-main-partition", false]], "--extract-partition": [[642, "cmdoption-llvm-objcopy-extract-partition", false]], "--failure-mode": [[646, "cmdoption-llvm-profdata-merge-failure-mode", false]], "--fallback-debug-path": [[655, "cmdoption-llvm-symbolizer-fallback-debug-path", false]], "--fault-map-section": [[643, "cmdoption-llvm-objdump-fault-map-section", false]], "--file-header": [[649, "cmdoption-llvm-readelf-file-header", false], [650, "cmdoption-llvm-readobj-file-header", false]], "--file-headers": [[643, "cmdoption-llvm-objdump-f", false]], "--filter": [[617, "cmdoption-lit-filter", false]], "--filter-out": [[617, "cmdoption-lit-filter-out", false]], "--find": [[631, "cmdoption-llvm-dwarfdump-f", false]], "--flat": [[615, "cmdoption-dsymutil-flat", false]], "--format": [[622, "cmdoption-llvm-ar-format", false], [627, "cmdoption-llvm-cxxfilt-format", false], [641, "cmdoption-llvm-nm-format", false], [647, "cmdoption-llvm-profgen-format", false], [651, "cmdoption-llvm-size-format", false]], "--frame-pointer": [[618, "cmdoption-llc-frame-pointer", false]], "--full-contents": [[643, "cmdoption-llvm-objdump-s", false]], "--full-leading-addr": [[643, "cmdoption-llvm-objdump-full-leading-addr", false]], "--function": [[646, "cmdoption-llvm-profdata-overlap-function", false], [646, "cmdoption-llvm-profdata-show-function", false]], "--function-starts": [[643, "cmdoption-llvm-objdump-function-starts", false]], "--function-summaries": [[626, "cmdoption-llvm-cov-gcov-f", false]], "--functions": [[655, "cmdoption-llvm-symbolizer-functions", false]], "--gcc": [[646, "cmdoption-llvm-profdata-merge-gcc", false]], "--gdb-index": [[631, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--gen-partial-profile": [[646, "cmdoption-llvm-profdata-merge-gen-partial-profile", false]], "--gen-reproducer": [[615, "cmdoption-dsymutil-gen-reproducer", false]], "--globalize-symbol": [[642, "cmdoption-llvm-objcopy-globalize-symbol", false]], "--globalize-symbols": [[642, "cmdoption-llvm-objcopy-globalize-symbols", false]], "--gnu-hash-table": [[649, "cmdoption-llvm-readelf-gnu-hash-table", false], [650, "cmdoption-llvm-readobj-gnu-hash-table", false]], "--hash-filenames": [[626, "cmdoption-llvm-cov-gcov-x", false]], "--hash-symbols": [[649, "cmdoption-llvm-readelf-hash-symbols", false], [650, "cmdoption-llvm-readobj-hash-symbols", false]], "--hash-table": [[649, "cmdoption-llvm-readelf-hash-table", false], [650, "cmdoption-llvm-readobj-hash-table", false]], "--headers": [[643, "cmdoption-llvm-objdump-h", false], [649, "cmdoption-llvm-readelf-headers", false], [650, "cmdoption-llvm-readobj-headers", false]], "--help": [[615, "cmdoption-dsymutil-help", false], [617, "cmdoption-lit-h", false], [622, "cmdoption-llvm-ar-h", false], [626, "cmdoption-llvm-cov-gcov-help", false], [627, "cmdoption-llvm-cxxfilt-help", false], [631, "cmdoption-llvm-dwarfdump-h", false], [634, "cmdoption-llvm-install-name-tool-help", false], [641, "cmdoption-llvm-nm-help", false], [642, "cmdoption-llvm-objcopy-help", false], [643, "cmdoption-llvm-objdump-help", false], [644, "cmdoption-llvm-otool-help", false], [646, "cmdoption-llvm-profdata-merge-help", false], [646, "cmdoption-llvm-profdata-overlap-help", false], [646, "cmdoption-llvm-profdata-show-help", false], [649, "cmdoption-llvm-readelf-help", false], [650, "cmdoption-llvm-readobj-help", false], [651, "cmdoption-llvm-size-help", false], [653, "cmdoption-llvm-strings-help", false], [654, "cmdoption-llvm-strip-help", false], [655, "cmdoption-llvm-symbolizer-help", false], [657, "cmdoption-llvm-tli-checker-help", false]], "--help-hidden": [[644, "cmdoption-llvm-otool-help-hidden", false]], "--help-list": [[631, "cmdoption-llvm-dwarfdump-help-list", false]], "--hex-dump": [[649, "cmdoption-llvm-readelf-hex-dump", false], [650, "cmdoption-llvm-readobj-hex-dump", false]], "--histogram": [[649, "cmdoption-llvm-readelf-histogram", false], [650, "cmdoption-llvm-readobj-histogram", false]], "--ignore-case": [[612, "cmdoption-FileCheck-ignore-case", false], [631, "cmdoption-llvm-dwarfdump-i", false]], "--ignore-debug-entry-values": [[639, "cmdoption-llvm-locstats-ignore-debug-entry-values", false]], "--ignore-fail": [[617, "cmdoption-lit-ignore-fail", false]], "--implicit-check-not": [[612, "cmdoption-FileCheck-implicit-check-not", false]], "--indirect-symbols": [[643, "cmdoption-llvm-objdump-indirect-symbols", false]], "--info-plist": [[643, "cmdoption-llvm-objdump-info-plist", false]], "--inlines": [[655, "cmdoption-llvm-symbolizer-inlining", false]], "--inlining": [[655, "cmdoption-llvm-symbolizer-inlining", false]], "--input-file": [[612, "cmdoption-FileCheck-input-file", false]], "--input-files": [[646, "cmdoption-llvm-profdata-merge-input-files", false]], "--input-target": [[642, "cmdoption-llvm-objcopy-input-target", false]], "--instr": [[646, "cmdoption-llvm-profdata-merge-instr", false], [646, "cmdoption-llvm-profdata-show-instr", false]], "--instr-prof-cold-threshold": [[646, "cmdoption-llvm-profdata-merge-instr-prof-cold-threshold", false]], "--keep-file-symbols": [[642, "cmdoption-llvm-objcopy-keep-file-symbols", false], [654, "cmdoption-llvm-strip-keep-file-symbols", false]], "--keep-function-for-static": [[615, "cmdoption-dsymutil-keep-function-for-static", false]], "--keep-global-symbol": [[642, "cmdoption-llvm-objcopy-keep-global-symbol", false]], "--keep-global-symbols": [[642, "cmdoption-llvm-objcopy-keep-global-symbols", false]], "--keep-section": [[642, "cmdoption-llvm-objcopy-keep-section", false], [654, "cmdoption-llvm-strip-keep-section", false]], "--keep-symbol": [[642, "cmdoption-llvm-objcopy-keep-symbol", false], [654, "cmdoption-llvm-strip-keep-symbol", false]], "--keep-symbols": [[642, "cmdoption-llvm-objcopy-keep-symbols", false]], "--keep-undefined": [[642, "cmdoption-llvm-objcopy-keep-undefined", false]], "--lazy-bind": [[643, "cmdoption-llvm-objdump-lazy-bind", false]], "--libdir": [[657, "cmdoption-llvm-tli-checker-libdir", false]], "--line-numbers": [[643, "cmdoption-llvm-objdump-l", false]], "--link-opt-hints": [[643, "cmdoption-llvm-objdump-link-opt-hints", false]], "--list-below-cutoff": [[646, "cmdoption-llvm-profdata-show-list-below-cutoff", false]], "--load": [[618, "cmdoption-llc-load", false]], "--localize-hidden": [[642, "cmdoption-llvm-objcopy-localize-hidden", false]], "--localize-symbol": [[642, "cmdoption-llvm-objcopy-localize-symbol", false]], "--localize-symbols": [[642, "cmdoption-llvm-objcopy-localize-symbols", false]], "--long-file-names": [[626, "cmdoption-llvm-cov-gcov-l", false]], "--lookup": [[631, "cmdoption-llvm-dwarfdump-lookup", false]], "--macho": [[643, "cmdoption-llvm-objdump-m", false]], "--macho-data-in-code": [[650, "cmdoption-llvm-readobj-macho-data-in-code", false]], "--macho-dsymtab": [[650, "cmdoption-llvm-readobj-macho-dsymtab", false]], "--macho-indirect-symbols": [[650, "cmdoption-llvm-readobj-macho-indirect-symbols", false]], "--macho-linker-options": [[650, "cmdoption-llvm-readobj-macho-linker-options", false]], "--macho-segment": [[650, "cmdoption-llvm-readobj-macho-segment", false]], "--macho-version-min": [[650, "cmdoption-llvm-readobj-macho-version-min", false]], "--match-full-lines": [[612, "cmdoption-FileCheck-match-full-lines", false]], "--mattr": [[643, "cmdoption-llvm-objdump-mattr", false]], "--max-failures": [[617, "cmdoption-lit-max-failures", false]], "--max-tests": [[617, "cmdoption-lit-max-tests", false]], "--max-time": [[617, "cmdoption-lit-max-time", false]], "--mcpu": [[643, "cmdoption-llvm-objdump-mcpu", false]], "--memop-sizes": [[646, "cmdoption-llvm-profdata-show-memop-sizes", false]], "--minimize": [[615, "cmdoption-dsymutil-minimize", false]], "--name": [[631, "cmdoption-llvm-dwarfdump-n", false]], "--needed-libs": [[649, "cmdoption-llvm-readelf-needed-libs", false], [650, "cmdoption-llvm-readobj-needed-libs", false]], "--new-symbol-visibility": [[642, "cmdoption-llvm-objcopy-new-symbol-visibility", false]], "--no-demangle": [[641, "cmdoption-llvm-nm-no-demangle", false], [649, "cmdoption-llvm-readelf-no-demangle", false], [655, "cmdoption-llvm-symbolizer-no-demangle", false]], "--no-dyldinfo": [[641, "cmdoption-llvm-nm-no-dyldinfo", false]], "--no-indirectly-run-check": [[617, "cmdoption-lit-no-indirectly-run-check", false]], "--no-inlines": [[655, "cmdoption-llvm-symbolizer-no-inlines", false]], "--no-leading-addr": [[643, "cmdoption-llvm-objdump-no-leading-addr", false]], "--no-leading-headers": [[643, "cmdoption-llvm-objdump-no-leading-headers", false]], "--no-llvm-bc": [[641, "cmdoption-llvm-nm-no-llvm-bc", false]], "--no-odr": [[615, "cmdoption-dsymutil-no-odr", false]], "--no-output": [[615, "cmdoption-dsymutil-no-output", false], [626, "cmdoption-llvm-cov-gcov-n", false]], "--no-print-imm-hex": [[643, "cmdoption-llvm-objdump-no-print-imm-hex", false]], "--no-progress-bar": [[617, "cmdoption-lit-no-progress-bar", false]], "--no-show-raw-insn": [[643, "cmdoption-llvm-objdump-no-show-raw-insn", false]], "--no-sort": [[641, "cmdoption-llvm-nm-no-sort", false]], "--no-strip-all": [[654, "cmdoption-llvm-strip-no-strip-all", false]], "--no-strip-underscore": [[627, "cmdoption-llvm-cxxfilt-no-strip-underscore", false]], "--no-swiftmodule-timestamp": [[615, "cmdoption-dsymutil-no-swiftmodule-timestamp", false]], "--no-symbolic-operands": [[643, "cmdoption-llvm-objdump-no-symbolic-operands", false]], "--no-weak": [[641, "cmdoption-llvm-nm-no-weak", false]], "--non-verbose": [[643, "cmdoption-llvm-objdump-non-verbose", false]], "--notes": [[649, "cmdoption-llvm-readelf-notes", false], [650, "cmdoption-llvm-readobj-notes", false]], "--num-shards": [[617, "cmdoption-lit-num-shards", false]], "--num-threads": [[615, "cmdoption-dsymutil-num-threads", false], [646, "cmdoption-llvm-profdata-merge-num-threads", false]], "--numeric-sort": [[641, "cmdoption-llvm-nm-numeric-sort", false]], "--obj": [[655, "cmdoption-llvm-symbolizer-obj", false]], "--objc-meta-data": [[643, "cmdoption-llvm-objdump-objc-meta-data", false]], "--object-directory": [[626, "cmdoption-llvm-cov-gcov-o", false]], "--object-file": [[626, "cmdoption-llvm-cov-gcov-o", false]], "--object-prefix-map": [[615, "cmdoption-dsymutil-object-prefix-map", false]], "--only-formal-parameters": [[639, "cmdoption-llvm-locstats-only-formal-parameters", false]], "--only-keep-debug": [[642, "cmdoption-llvm-objcopy-only-keep-debug", false], [654, "cmdoption-llvm-strip-only-keep-debug", false]], "--only-section": [[642, "cmdoption-llvm-objcopy-only-section", false]], "--only-variables": [[639, "cmdoption-llvm-locstats-only-variables", false]], "--order": [[617, "cmdoption-lit-order", false]], "--oso-prepend-path": [[615, "cmdoption-dsymutil-oso-prepend-path", false]], "--out": [[615, "cmdoption-dsymutil-out", false]], "--output": [[646, "cmdoption-llvm-profdata-merge-output", false], [646, "cmdoption-llvm-profdata-overlap-output", false], [646, "cmdoption-llvm-profdata-show-output", false], [647, "cmdoption-llvm-profgen-output", false]], "--output-style": [[655, "cmdoption-llvm-symbolizer-output-style", false]], "--output-target": [[642, "cmdoption-llvm-objcopy-output-target", false]], "--papertrail": [[615, "cmdoption-dsymutil-papertrail", false]], "--param": [[617, "cmdoption-lit-D", false]], "--parent-recurse-depth": [[631, "cmdoption-llvm-dwarfdump-parent-recurse-depth", false]], "--path": [[617, "cmdoption-lit-path", false]], "--perfscript": [[647, "cmdoption-llvm-profgen-perfscript", false]], "--portability": [[641, "cmdoption-llvm-nm-portability", false]], "--prefix": [[643, "cmdoption-llvm-objdump-prefix", false]], "--prefix-alloc-sections": [[642, "cmdoption-llvm-objcopy-prefix-alloc-sections", false]], "--prefix-strip": [[643, "cmdoption-llvm-objdump-prefix-strip", false]], "--prefix-symbols": [[642, "cmdoption-llvm-objcopy-prefix-symbols", false]], "--preserve-dates": [[642, "cmdoption-llvm-objcopy-preserve-dates", false], [654, "cmdoption-llvm-strip-preserve-dates", false]], "--preserve-paths": [[626, "cmdoption-llvm-cov-gcov-p", false]], "--pretty-print": [[649, "cmdoption-llvm-readelf-pretty-print", false], [650, "cmdoption-llvm-readobj-pretty-print", false], [655, "cmdoption-llvm-symbolizer-pretty-print", false]], "--print-address": [[655, "cmdoption-llvm-symbolizer-print-address", false]], "--print-after-isel": [[618, "cmdoption-llc-print-after-isel", false]], "--print-armap": [[641, "cmdoption-llvm-nm-print-armap", false]], "--print-file-name": [[641, "cmdoption-llvm-nm-print-file-name", false], [653, "cmdoption-llvm-strings-print-file-name", false]], "--print-imm-hex": [[643, "cmdoption-llvm-objdump-print-imm-hex", false]], "--print-size": [[641, "cmdoption-llvm-nm-print-size", false]], "--print-source-context-lines": [[655, "cmdoption-llvm-symbolizer-print-source-context-lines", false]], "--private-header": [[643, "cmdoption-llvm-objdump-private-header", false]], "--private-headers": [[643, "cmdoption-llvm-objdump-p", false]], "--prof-sym-list": [[646, "cmdoption-llvm-profdata-merge-prof-sym-list", false]], "--program-headers": [[649, "cmdoption-llvm-readelf-program-headers", false], [650, "cmdoption-llvm-readobj-program-headers", false]], "--quiet": [[617, "cmdoption-lit-q", false], [631, "cmdoption-llvm-dwarfdump-quiet", false], [641, "cmdoption-llvm-nm-quiet", false]], "--radix": [[641, "cmdoption-llvm-nm-radix", false], [651, "cmdoption-llvm-size-radix", false], [653, "cmdoption-llvm-strings-radix", false]], "--raw-clang-ast": [[643, "cmdoption-llvm-objdump-raw-clang-ast", false]], "--raw-relr": [[649, "cmdoption-llvm-readelf-raw-relr", false], [650, "cmdoption-llvm-readobj-raw-relr", false]], "--rebase": [[643, "cmdoption-llvm-objdump-rebase", false]], "--recurse-depth": [[631, "cmdoption-llvm-dwarfdump-r", false]], "--redefine-sym": [[642, "cmdoption-llvm-objcopy-redefine-sym", false]], "--redefine-syms": [[642, "cmdoption-llvm-objcopy-redefine-syms", false]], "--regalloc": [[618, "cmdoption-llc-regalloc", false]], "--regex": [[631, "cmdoption-llvm-dwarfdump-x", false], [642, "cmdoption-llvm-objcopy-regex", false], [654, "cmdoption-llvm-strip-regex", false]], "--relativenames": [[655, "cmdoption-llvm-symbolizer-relativenames", false]], "--reloc": [[643, "cmdoption-llvm-objdump-r", false]], "--relocations": [[649, "cmdoption-llvm-readelf-relocations", false], [650, "cmdoption-llvm-readobj-relocations", false]], "--relocs": [[649, "cmdoption-llvm-readelf-relocations", false], [650, "cmdoption-llvm-readobj-relocations", false]], "--remapping-file": [[646, "cmdoption-llvm-profdata-merge-remapping-file", false]], "--remarks-output-format": [[615, "cmdoption-dsymutil-remarks-output-format", false]], "--remarks-prepend-path": [[615, "cmdoption-dsymutil-remarks-prepend-path", false]], "--remove-section": [[642, "cmdoption-llvm-objcopy-remove-section", false], [654, "cmdoption-llvm-strip-remove-section", false]], "--rename-section": [[642, "cmdoption-llvm-objcopy-rename-section", false]], "--report": [[657, "cmdoption-llvm-tli-checker-report", false]], "--reverse-sort": [[641, "cmdoption-llvm-nm-reverse-sort", false]], "--rpaths": [[643, "cmdoption-llvm-objdump-rpaths", false]], "--rsp-quoting": [[622, "cmdoption-llvm-ar-rsp-quoting", false]], "--run-shard": [[617, "cmdoption-lit-run-shard", false]], "--sample": [[646, "cmdoption-llvm-profdata-merge-sample", false], [646, "cmdoption-llvm-profdata-show-sample", false]], "--sd": [[650, "cmdoption-llvm-readobj-section-data", false]], "--section": [[643, "cmdoption-llvm-objdump-j", false]], "--section-data": [[649, "cmdoption-llvm-readelf-section-data", false], [650, "cmdoption-llvm-readobj-section-data", false]], "--section-details": [[649, "cmdoption-llvm-readelf-section-details", false]], "--section-groups": [[649, "cmdoption-llvm-readelf-section-groups", false], [650, "cmdoption-llvm-readobj-section-groups", false]], "--section-headers": [[643, "cmdoption-llvm-objdump-h", false], [649, "cmdoption-llvm-readelf-sections", false], [650, "cmdoption-llvm-readobj-sections", false]], "--section-mapping": [[649, "cmdoption-llvm-readelf-section-mapping", false], [650, "cmdoption-llvm-readobj-section-mapping", false]], "--section-relocations": [[649, "cmdoption-llvm-readelf-section-relocations", false], [650, "cmdoption-llvm-readobj-section-relocations", false]], "--section-symbols": [[649, "cmdoption-llvm-readelf-section-symbols", false], [650, "cmdoption-llvm-readobj-section-symbols", false]], "--sections": [[649, "cmdoption-llvm-readelf-sections", false], [650, "cmdoption-llvm-readobj-sections", false]], "--segments": [[649, "cmdoption-llvm-readelf-program-headers", false], [650, "cmdoption-llvm-readobj-program-headers", false]], "--separate": [[657, "cmdoption-llvm-tli-checker-separate", false]], "--set-section-alignment": [[642, "cmdoption-llvm-objcopy-set-section-alignment", false]], "--set-section-flags": [[642, "cmdoption-llvm-objcopy-set-section-flags", false]], "--set-start-addr": [[642, "cmdoption-llvm-objcopy-set-start-addr", false]], "--show-all": [[617, "cmdoption-lit-a", false]], "--show-children": [[631, "cmdoption-llvm-dwarfdump-c", false]], "--show-disassembly": [[647, "cmdoption-llvm-profgen-show-disassembly", false]], "--show-form": [[631, "cmdoption-llvm-dwarfdump-F", false]], "--show-lma": [[643, "cmdoption-llvm-objdump-show-lma", false]], "--show-mmap-events": [[647, "cmdoption-llvm-profgen-show-mmap-events", false]], "--show-parents": [[631, "cmdoption-llvm-dwarfdump-p", false]], "--show-prof-sym-list": [[646, "cmdoption-llvm-profdata-show-show-prof-sym-list", false]], "--show-sec-info-only": [[646, "cmdoption-llvm-profdata-show-show-sec-info-only", false]], "--show-section-sizes": [[631, "cmdoption-llvm-dwarfdump-show-section-sizes", false]], "--show-suites": [[617, "cmdoption-lit-show-suites", false]], "--show-tests": [[617, "cmdoption-lit-show-tests", false]], "--show-unsupported": [[617, "cmdoption-lit-show-unsupported", false]], "--show-xfail": [[617, "cmdoption-lit-show-xfail", false]], "--showcs": [[646, "cmdoption-llvm-profdata-show-showcs", false]], "--shuffle": [[617, "cmdoption-lit-shuffle", false]], "--size-sort": [[641, "cmdoption-llvm-nm-size-sort", false]], "--source": [[643, "cmdoption-llvm-objdump-S", false]], "--sparse": [[646, "cmdoption-llvm-profdata-merge-sparse", false]], "--special-syms": [[641, "cmdoption-llvm-nm-special-syms", false]], "--spiller": [[618, "cmdoption-llc-spiller", false]], "--split-dwo": [[642, "cmdoption-llvm-objcopy-split-dwo", false]], "--sr": [[650, "cmdoption-llvm-readobj-section-relocations", false]], "--st": [[650, "cmdoption-llvm-readobj-section-symbols", false]], "--stack-sizes": [[649, "cmdoption-llvm-readelf-stack-sizes", false], [650, "cmdoption-llvm-readobj-stack-sizes", false]], "--stackmap": [[649, "cmdoption-llvm-readelf-stackmap", false], [650, "cmdoption-llvm-readobj-stackmap", false]], "--start-address": [[643, "cmdoption-llvm-objdump-start-address", false]], "--statistics": [[615, "cmdoption-dsymutil-statistics", false], [631, "cmdoption-llvm-dwarfdump-statistics", false]], "--stats": [[618, "cmdoption-llc-stats", false]], "--stdout": [[626, "cmdoption-llvm-cov-gcov-t", false]], "--stop-address": [[643, "cmdoption-llvm-objdump-stop-address", false]], "--strict-whitespace": [[612, "cmdoption-FileCheck-strict-whitespace", false]], "--string-dump": [[649, "cmdoption-llvm-readelf-string-dump", false], [650, "cmdoption-llvm-readobj-string-dump", false]], "--string-table": [[650, "cmdoption-llvm-readobj-string-table", false]], "--strip-all": [[642, "cmdoption-llvm-objcopy-strip-all", false], [654, "cmdoption-llvm-strip-strip-all", false]], "--strip-all-gnu": [[642, "cmdoption-llvm-objcopy-strip-all-gnu", false], [654, "cmdoption-llvm-strip-strip-all-gnu", false]], "--strip-debug": [[642, "cmdoption-llvm-objcopy-strip-debug", false], [654, "cmdoption-llvm-strip-strip-debug", false]], "--strip-dwo": [[642, "cmdoption-llvm-objcopy-strip-dwo", false]], "--strip-non-alloc": [[642, "cmdoption-llvm-objcopy-strip-non-alloc", false]], "--strip-sections": [[642, "cmdoption-llvm-objcopy-strip-sections", false], [654, "cmdoption-llvm-strip-strip-sections", false]], "--strip-symbol": [[642, "cmdoption-llvm-objcopy-strip-symbol", false], [654, "cmdoption-llvm-strip-strip-symbol", false]], "--strip-symbols": [[642, "cmdoption-llvm-objcopy-strip-symbols", false]], "--strip-underscore": [[627, "cmdoption-llvm-cxxfilt-strip-underscore", false]], "--strip-unneeded": [[642, "cmdoption-llvm-objcopy-strip-unneeded", false], [654, "cmdoption-llvm-strip-strip-unneeded", false]], "--strip-unneeded-symbol": [[642, "cmdoption-llvm-objcopy-strip-unneeded-symbol", false]], "--strip-unneeded-symbols": [[642, "cmdoption-llvm-objcopy-strip-unneeded-symbols", false]], "--subsystem": [[642, "cmdoption-llvm-objcopy-subsystem", false]], "--succinct": [[617, "cmdoption-lit-s", false]], "--summarize-types": [[631, "cmdoption-llvm-dwarfdump-summarize-types", false]], "--suppl-min-size-threshold": [[646, "cmdoption-llvm-profdata-merge-suppl-min-size-threshold", false]], "--supplement-instr-with-sample": [[646, "cmdoption-llvm-profdata-merge-supplement-instr-with-sample", false]], "--symbol-description": [[643, "cmdoption-llvm-objdump-symbol-description", false]], "--symbol-map": [[615, "cmdoption-dsymutil-symbol-map", false]], "--symbolize-operands": [[643, "cmdoption-llvm-objdump-symbolize-operands", false]], "--symbols": [[649, "cmdoption-llvm-readelf-symbols", false], [650, "cmdoption-llvm-readobj-symbols", false]], "--syms": [[643, "cmdoption-llvm-objdump-t", false], [649, "cmdoption-llvm-readelf-symbols", false], [650, "cmdoption-llvm-readobj-symbols", false]], "--symtab": [[615, "cmdoption-dsymutil-s", false]], "--target": [[642, "cmdoption-llvm-objcopy-target", false]], "--text": [[646, "cmdoption-llvm-profdata-merge-text", false], [646, "cmdoption-llvm-profdata-show-text", false]], "--thin": [[622, "cmdoption-llvm-ar-thin", false]], "--time-passes": [[618, "cmdoption-llc-time-passes", false]], "--time-tests": [[617, "cmdoption-lit-time-tests", false]], "--timeout": [[617, "cmdoption-lit-timeout", false]], "--toolchain": [[615, "cmdoption-dsymutil-toolchain", false]], "--topn": [[646, "cmdoption-llvm-profdata-show-topn", false]], "--totals": [[651, "cmdoption-llvm-size-totals", false]], "--triple": [[643, "cmdoption-llvm-objdump-triple", false], [657, "cmdoption-llvm-tli-checker-triple", false]], "--types": [[627, "cmdoption-llvm-cxxfilt-types", false]], "--unconditional-branches": [[626, "cmdoption-llvm-cov-gcov-u", false]], "--undefined-only": [[641, "cmdoption-llvm-nm-undefined-only", false]], "--universal-headers": [[643, "cmdoption-llvm-objdump-universal-headers", false]], "--unwind": [[649, "cmdoption-llvm-readelf-unwind", false], [650, "cmdoption-llvm-readobj-unwind", false]], "--unwind-info": [[643, "cmdoption-llvm-objdump-u", false]], "--update": [[615, "cmdoption-dsymutil-u", false]], "--use-md5": [[646, "cmdoption-llvm-profdata-merge-use-md5", false]], "--use-reproducer": [[615, "cmdoption-dsymutil-use-reproducer", false]], "--uuid": [[631, "cmdoption-llvm-dwarfdump-u", false]], "--value-cutoff": [[646, "cmdoption-llvm-profdata-overlap-value-cutoff", false], [646, "cmdoption-llvm-profdata-show-value-cutoff", false]], "--verbose": [[615, "cmdoption-dsymutil-verbose", false], [617, "cmdoption-lit-v", false], [631, "cmdoption-llvm-dwarfdump-v", false], [655, "cmdoption-llvm-symbolizer-verbose", false]], "--verify": [[615, "cmdoption-dsymutil-verify", false], [631, "cmdoption-llvm-dwarfdump-verify", false]], "--version": [[615, "cmdoption-dsymutil-v", false], [622, "cmdoption-llvm-ar-version", false], [627, "cmdoption-llvm-cxxfilt-version", false], [631, "cmdoption-llvm-dwarfdump-version", false], [634, "cmdoption-llvm-install-name-tool-version", false], [641, "cmdoption-llvm-nm-version", false], [642, "cmdoption-llvm-objcopy-version", false], [643, "cmdoption-llvm-objdump-v", false], [644, "cmdoption-llvm-otool-version", false], [649, "cmdoption-llvm-readelf-version", false], [650, "cmdoption-llvm-readobj-version", false], [651, "cmdoption-llvm-size-version", false], [653, "cmdoption-llvm-strings-version", false], [654, "cmdoption-llvm-strip-version", false], [655, "cmdoption-llvm-symbolizer-version", false]], "--version-info": [[649, "cmdoption-llvm-readelf-version-info", false], [650, "cmdoption-llvm-readobj-version-info", false]], "--vg": [[617, "cmdoption-lit-vg", false]], "--vg-arg": [[617, "cmdoption-lit-vg-arg", false]], "--vg-leak": [[617, "cmdoption-lit-vg-leak", false]], "--weak-bind": [[643, "cmdoption-llvm-objdump-weak-bind", false]], "--weaken": [[642, "cmdoption-llvm-objcopy-weaken", false]], "--weaken-symbol": [[642, "cmdoption-llvm-objcopy-weaken-symbol", false]], "--weaken-symbols": [[642, "cmdoption-llvm-objcopy-weaken-symbols", false]], "--weighted-input": [[646, "cmdoption-llvm-profdata-merge-weighted-input", false]], "--wide": [[643, "cmdoption-llvm-objdump-w", false], [649, "cmdoption-llvm-readelf-wide", false]], "--wildcard": [[642, "cmdoption-llvm-objcopy-wildcard", false], [654, "cmdoption-llvm-strip-wildcard", false]], "--workers": [[617, "cmdoption-lit-j", false]], "--x86-asm-syntax": [[618, "cmdoption-llc-x86-asm-syntax", false], [643, "cmdoption-llvm-objdump-x86-asm-syntax", false], [647, "cmdoption-llvm-profgen-x86-asm-syntax", false]], "--xfail": [[617, "cmdoption-lit-xfail", false]], "--xfail-not": [[617, "cmdoption-lit-xfail-not", false]], "--zero-counter-threshold": [[646, "cmdoption-llvm-profdata-merge-zero-counter-threshold", false]], "-_": [[627, "cmdoption-llvm-cxxfilt-strip-underscore", false]], "-a": [[617, "cmdoption-lit-a", false], [626, "cmdoption-llvm-cov-gcov-a", false], [631, "cmdoption-llvm-dwarfdump-a", false], [641, "cmdoption-llvm-nm-print-file-name", false], [641, "cmdoption-llvm-nm-debug-syms", false], [643, "cmdoption-llvm-objdump-a", false], [649, "cmdoption-llvm-readelf-arch-specific", false], [649, "cmdoption-llvm-readelf-all", false], [650, "cmdoption-llvm-readobj-arch-specific", false], [651, "cmdoption-llvm-size-A", false], [653, "cmdoption-llvm-strings-all", false], [655, "cmdoption-llvm-symbolizer-print-address", false]], "-add_rpath": [[634, "cmdoption-llvm-install-name-tool-add_rpath", false]], "-all": [[645, "cmdoption-llvm-pdbutil-dump-all", false], [645, "cmdoption-llvm-pdbutil-pretty-all", false]], "-all-stats": [[640, "cmdoption-llvm-mca-all-stats", false]], "-all-views": [[640, "cmdoption-llvm-mca-all-views", false]], "-analysis-clustering": [[632, "cmdoption-llvm-exegesis-analysis-clustering", false]], "-analysis-clustering-epsilon": [[632, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", false]], "-analysis-clusters-output-file": [[632, "cmdoption-llvm-exegesis-analysis-clusters-output-file", false]], "-analysis-display-unstable-clusters": [[632, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", false]], "-analysis-inconsistencies-output-file": [[632, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", false]], "-analysis-inconsistency-epsilon": [[632, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", false]], "-analysis-numpoints": [[632, "cmdoption-llvm-exegesis-analysis-numpoints", false]], "-arch": [[626, "cmdoption-llvm-cov-export-arch", false], [626, "cmdoption-llvm-cov-report-arch", false], [626, "cmdoption-llvm-cov-show-arch", false], [644, "cmdoption-llvm-otool-arch", false]], "-arch_only": [[636, "cmdoption-llvm-libtool-darwin-arch_only", false]], "-archs": [[638, "cmdoption-llvm-lipo-archs", false]], "-asmformat-error-is-fatal": [[660, "cmdoption-tblgen-asmformat-error-is-fatal", false]], "-asmparsernum": [[660, "cmdoption-tblgen-asmparsernum", false]], "-asmwriternum": [[660, "cmdoption-tblgen-asmwriternum", false]], "-b": [[626, "cmdoption-llvm-cov-gcov-b", false], [641, "cmdoption-llvm-nm-B", false], [642, "cmdoption-llvm-objcopy-binary-architecture", false], [651, "cmdoption-llvm-size-B", false]], "-benchmarks-file": [[632, "cmdoption-llvm-exegesis-benchmarks-file", false]], "-block-range": [[645, "cmdoption-llvm-pdbutil-bytes-block-range", false]], "-bottleneck-analysis": [[640, "cmdoption-llvm-mca-bottleneck-analysis", false]], "-byte-range": [[645, "cmdoption-llvm-pdbutil-bytes-byte-range", false]], "-c": [[626, "cmdoption-llvm-cov-gcov-c", false], [631, "cmdoption-llvm-dwarfdump-c", false], [641, "cmdoption-llvm-nm-demangle", false], [643, "cmdoption-llvm-objdump-C", false], [644, "cmdoption-llvm-otool-C", false], [649, "cmdoption-llvm-readelf-demangle", false], [650, "cmdoption-llvm-readobj-demangle", false], [655, "cmdoption-llvm-symbolizer-demangle", false]], "-change": [[634, "cmdoption-llvm-install-name-tool-change", false]], "-chunks": [[645, "cmdoption-llvm-pdbutil-bytes-chunks", false]], "-clang-component": [[660, "cmdoption-tblgen-clang-component", false]], "-class": [[660, "cmdoption-tblgen-class", false]], "-class-definitions": [[645, "cmdoption-llvm-pdbutil-pretty-class-definitions", false]], "-class-order": [[645, "cmdoption-llvm-pdbutil-pretty-class-order", false]], "-class-recurse-depth": [[645, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false]], "-classes": [[645, "cmdoption-llvm-pdbutil-pretty-classes", false]], "-code-model": [[620, "cmdoption-lli-code-model", false]], "-color": [[636, "cmdoption-llvm-libtool-darwin-color", false]], "-color-output": [[645, "cmdoption-llvm-pdbutil-pretty-color-output", false]], "-combiners": [[660, "cmdoption-tblgen-combiners", false]], "-compilands": [[645, "cmdoption-llvm-pdbutil-pretty-compilands", false]], "-compilation-dir": [[626, "cmdoption-llvm-cov-export-compilation-dir", false], [626, "cmdoption-llvm-cov-report-compilation-dir", false], [626, "cmdoption-llvm-cov-show-compilation-dir", false]], "-create": [[638, "cmdoption-llvm-lipo-create", false]], "-d": [[617, "cmdoption-lit-D", false], [636, "cmdoption-llvm-libtool-darwin-D", false], [637, "cmdoption-llvm-link-d", false], [641, "cmdoption-llvm-nm-dynamic", false], [642, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [643, "cmdoption-llvm-objdump-D", false], [643, "cmdoption-llvm-objdump-d", false], [644, "cmdoption-llvm-otool-D", false], [644, "cmdoption-llvm-otool-d", false], [649, "cmdoption-llvm-readelf-dynamic-table", false], [650, "cmdoption-llvm-readobj-dynamic-table", false], [651, "cmdoption-llvm-size-d", false], [654, "cmdoption-llvm-strip-enable-deterministic-archives", false], [654, "cmdoption-llvm-strip-strip-debug", false], [660, "cmdoption-tblgen-D", false], [660, "cmdoption-tblgen-d", false]], "-d#<fmt>,<numvar>": [[612, "cmdoption-FileCheck-D-FMT-NUMVAR", false]], "-d<var": [[612, "cmdoption-FileCheck-D-VAR", false]], "-debug": [[659, "cmdoption-opt-debug", false], [660, "cmdoption-tblgen-debug", false]], "-delete_all_rpaths": [[634, "cmdoption-llvm-install-name-tool-delete_all_rpaths", false]], "-delete_rpath": [[634, "cmdoption-llvm-install-name-tool-delete_rpath", false]], "-dependents": [[645, "cmdoption-llvm-pdbutil-dump-dependents", false]], "-dialect": [[660, "cmdoption-tblgen-dialect", false]], "-dialect-opclass-base": [[660, "cmdoption-tblgen-dialect-opclass-base", false]], "-disable-cb": [[640, "cmdoption-llvm-mca-disable-cb", false]], "-disable-excess-fp-precision": [[620, "cmdoption-lli-disable-excess-fp-precision", false]], "-disable-post-ra-scheduler": [[620, "cmdoption-lli-disable-post-RA-scheduler", false]], "-disable-spill-fusing": [[620, "cmdoption-lli-disable-spill-fusing", false]], "-dispatch": [[640, "cmdoption-llvm-mca-dispatch", false]], "-dispatch-stats": [[640, "cmdoption-llvm-mca-dispatch-stats", false]], "-dump": [[624, "cmdoption-llvm-bcanalyzer-dump", false]], "-dump-json": [[660, "cmdoption-tblgen-dump-json", false]], "-e": [[649, "cmdoption-llvm-readelf-headers", false], [650, "cmdoption-llvm-readobj-headers", false], [655, "cmdoption-llvm-symbolizer-obj", false]], "-ec": [[645, "cmdoption-llvm-pdbutil-bytes-ec", false]], "-enable-no-infs-fp-math": [[620, "cmdoption-lli-enable-no-infs-fp-math", false]], "-enable-no-nans-fp-math": [[620, "cmdoption-lli-enable-no-nans-fp-math", false]], "-enable-unsafe-fp-math": [[620, "cmdoption-lli-enable-unsafe-fp-math", false]], "-enums": [[645, "cmdoption-llvm-pdbutil-pretty-enums", false]], "-exclude-compilands": [[645, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false]], "-exclude-symbols": [[645, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false]], "-exclude-types": [[645, "cmdoption-llvm-pdbutil-pretty-exclude-types", false]], "-externals": [[645, "cmdoption-llvm-pdbutil-pretty-externals", false]], "-f": [[615, "cmdoption-dsymutil-flat", false], [626, "cmdoption-llvm-cov-gcov-f", false], [631, "cmdoption-llvm-dwarfdump-F", false], [631, "cmdoption-llvm-dwarfdump-f", false], [637, "cmdoption-llvm-link-f", false], [641, "cmdoption-llvm-nm-format", false], [642, "cmdoption-llvm-objcopy-target", false], [643, "cmdoption-llvm-objdump-f", false], [644, "cmdoption-llvm-otool-f", false], [646, "cmdoption-llvm-profdata-merge-input-files", false], [653, "cmdoption-llvm-strings-print-file-name", false], [655, "cmdoption-llvm-symbolizer-functions", false], [659, "cmdoption-opt-f", false]], "-fake-argv0": [[620, "cmdoption-lli-fake-argv0", false]], "-filelist": [[636, "cmdoption-llvm-libtool-darwin-filelist", false]], "-files": [[645, "cmdoption-llvm-pdbutil-bytes-files", false], [645, "cmdoption-llvm-pdbutil-dump-files", false]], "-filetype": [[618, "cmdoption-llc-filetype", false]], "-force-interpreter": [[620, "cmdoption-lli-force-interpreter", false]], "-format": [[626, "cmdoption-llvm-cov-export-format", false], [626, "cmdoption-llvm-cov-show-format", false]], "-fpm": [[645, "cmdoption-llvm-pdbutil-bytes-fpm", false]], "-g": [[641, "cmdoption-llvm-nm-extern-only", false], [642, "cmdoption-llvm-objcopy-keep-global-symbol", false], [642, "cmdoption-llvm-objcopy-strip-debug", false], [643, "cmdoption-llvm-objdump-g", false], [644, "cmdoption-llvm-otool-G", false], [649, "cmdoption-llvm-readelf-section-groups", false], [650, "cmdoption-llvm-readobj-section-groups", false], [654, "cmdoption-llvm-strip-strip-debug", false]], "-gen-arm-bf16": [[660, "cmdoption-tblgen-gen-arm-bf16", false]], "-gen-arm-cde-builtin-aliases": [[660, "cmdoption-tblgen-gen-arm-cde-builtin-aliases", false]], "-gen-arm-cde-builtin-codegen": [[660, "cmdoption-tblgen-gen-arm-cde-builtin-codegen", false]], "-gen-arm-cde-builtin-def": [[660, "cmdoption-tblgen-gen-arm-cde-builtin-def", false]], "-gen-arm-cde-builtin-sema": [[660, "cmdoption-tblgen-gen-arm-cde-builtin-sema", false]], "-gen-arm-cde-header": [[660, "cmdoption-tblgen-gen-arm-cde-header", false]], "-gen-arm-fp16": [[660, "cmdoption-tblgen-gen-arm-fp16", false]], "-gen-arm-mve-builtin-aliases": [[660, "cmdoption-tblgen-gen-arm-mve-builtin-aliases", false]], "-gen-arm-mve-builtin-codegen": [[660, "cmdoption-tblgen-gen-arm-mve-builtin-codegen", false]], "-gen-arm-mve-builtin-def": [[660, "cmdoption-tblgen-gen-arm-mve-builtin-def", false]], "-gen-arm-mve-builtin-sema": [[660, "cmdoption-tblgen-gen-arm-mve-builtin-sema", false]], "-gen-arm-mve-header": [[660, "cmdoption-tblgen-gen-arm-mve-header", false]], "-gen-arm-neon": [[660, "cmdoption-tblgen-gen-arm-neon", false]], "-gen-arm-neon-sema": [[660, "cmdoption-tblgen-gen-arm-neon-sema", false]], "-gen-arm-neon-test": [[660, "cmdoption-tblgen-gen-arm-neon-test", false]], "-gen-arm-sve-builtin-codegen": [[660, "cmdoption-tblgen-gen-arm-sve-builtin-codegen", false]], "-gen-arm-sve-builtins": [[660, "cmdoption-tblgen-gen-arm-sve-builtins", false]], "-gen-arm-sve-header": [[660, "cmdoption-tblgen-gen-arm-sve-header", false]], "-gen-arm-sve-sema-rangechecks": [[660, "cmdoption-tblgen-gen-arm-sve-sema-rangechecks", false]], "-gen-arm-sve-typeflags": [[660, "cmdoption-tblgen-gen-arm-sve-typeflags", false]], "-gen-asm-matcher": [[660, "cmdoption-tblgen-gen-asm-matcher", false]], "-gen-asm-parser": [[660, "cmdoption-tblgen-gen-asm-parser", false]], "-gen-asm-writer": [[660, "cmdoption-tblgen-gen-asm-writer", false]], "-gen-attr-docs": [[660, "cmdoption-tblgen-gen-attr-docs", false]], "-gen-attrs": [[660, "cmdoption-tblgen-gen-attrs", false]], "-gen-automata": [[660, "cmdoption-tblgen-gen-automata", false]], "-gen-avail-interface-decls": [[660, "cmdoption-tblgen-gen-avail-interface-decls", false]], "-gen-avail-interface-defs": [[660, "cmdoption-tblgen-gen-avail-interface-defs", false]], "-gen-callingconv": [[660, "cmdoption-tblgen-gen-callingconv", false]], "-gen-clang-attr-ast-visitor": [[660, "cmdoption-tblgen-gen-clang-attr-ast-visitor", false]], "-gen-clang-attr-classes": [[660, "cmdoption-tblgen-gen-clang-attr-classes", false]], "-gen-clang-attr-has-attribute-impl": [[660, "cmdoption-tblgen-gen-clang-attr-has-attribute-impl", false]], "-gen-clang-attr-impl": [[660, "cmdoption-tblgen-gen-clang-attr-impl", false]], "-gen-clang-attr-list\"": [[660, "cmdoption-tblgen-gen-clang-attr-list", false]], "-gen-clang-attr-node-traverse": [[660, "cmdoption-tblgen-gen-clang-attr-node-traverse", false]], "-gen-clang-attr-parsed-attr-impl": [[660, "cmdoption-tblgen-gen-clang-attr-parsed-attr-impl", false]], "-gen-clang-attr-parsed-attr-kinds": [[660, "cmdoption-tblgen-gen-clang-attr-parsed-attr-kinds", false]], "-gen-clang-attr-parsed-attr-list": [[660, "cmdoption-tblgen-gen-clang-attr-parsed-attr-list", false]], "-gen-clang-attr-parser-string-switches": [[660, "cmdoption-tblgen-gen-clang-attr-parser-string-switches", false]], "-gen-clang-attr-pch-read": [[660, "cmdoption-tblgen-gen-clang-attr-pch-read", false]], "-gen-clang-attr-pch-write": [[660, "cmdoption-tblgen-gen-clang-attr-pch-write", false]], "-gen-clang-attr-spelling-index": [[660, "cmdoption-tblgen-gen-clang-attr-spelling-index", false]], "-gen-clang-attr-subject-match-rule-list": [[660, "cmdoption-tblgen-gen-clang-attr-subject-match-rule-list", false]], "-gen-clang-attr-subject-match-rules-parser-string-switches": [[660, "cmdoption-tblgen-gen-clang-attr-subject-match-rules-parser-string-switches", false]], "-gen-clang-attr-template-instantiate": [[660, "cmdoption-tblgen-gen-clang-attr-template-instantiate", false]], "-gen-clang-attr-text-node-dump": [[660, "cmdoption-tblgen-gen-clang-attr-text-node-dump", false]], "-gen-clang-basic-reader": [[660, "cmdoption-tblgen-gen-clang-basic-reader", false]], "-gen-clang-basic-writer": [[660, "cmdoption-tblgen-gen-clang-basic-writer", false]], "-gen-clang-comment-command-info": [[660, "cmdoption-tblgen-gen-clang-comment-command-info", false]], "-gen-clang-comment-command-list": [[660, "cmdoption-tblgen-gen-clang-comment-command-list", false]], "-gen-clang-comment-html-named-character-references": [[660, "cmdoption-tblgen-gen-clang-comment-html-named-character-references", false]], "-gen-clang-comment-html-tags": [[660, "cmdoption-tblgen-gen-clang-comment-html-tags", false]], "-gen-clang-comment-html-tags-properties": [[660, "cmdoption-tblgen-gen-clang-comment-html-tags-properties", false]], "-gen-clang-comment-nodes": [[660, "cmdoption-tblgen-gen-clang-comment-nodes", false]], "-gen-clang-data-collectors": [[660, "cmdoption-tblgen-gen-clang-data-collectors", false]], "-gen-clang-decl-nodes": [[660, "cmdoption-tblgen-gen-clang-decl-nodes", false]], "-gen-clang-diag-groups": [[660, "cmdoption-tblgen-gen-clang-diag-groups", false]], "-gen-clang-diags-defs": [[660, "cmdoption-tblgen-gen-clang-diags-defs", false]], "-gen-clang-diags-index-name": [[660, "cmdoption-tblgen-gen-clang-diags-index-name", false]], "-gen-clang-opcodes": [[660, "cmdoption-tblgen-gen-clang-opcodes", false]], "-gen-clang-opencl-builtins": [[660, "cmdoption-tblgen-gen-clang-opencl-builtins", false]], "-gen-clang-sa-checkers": [[660, "cmdoption-tblgen-gen-clang-sa-checkers", false]], "-gen-clang-stmt-nodes": [[660, "cmdoption-tblgen-gen-clang-stmt-nodes", false]], "-gen-clang-test-pragma-attribute-supported-attributes": [[660, "cmdoption-tblgen-gen-clang-test-pragma-attribute-supported-attributes", false]], "-gen-clang-type-nodes": [[660, "cmdoption-tblgen-gen-clang-type-nodes", false]], "-gen-clang-type-reader": [[660, "cmdoption-tblgen-gen-clang-type-reader", false]], "-gen-clang-type-writer": [[660, "cmdoption-tblgen-gen-clang-type-writer", false]], "-gen-compress-inst-emitter": [[660, "cmdoption-tblgen-gen-compress-inst-emitter", false]], "-gen-ctags": [[660, "cmdoption-tblgen-gen-ctags", false]], "-gen-dag-isel": [[660, "cmdoption-tblgen-gen-dag-isel", false]], "-gen-dfa-packetizer": [[660, "cmdoption-tblgen-gen-dfa-packetizer", false]], "-gen-diag-docs": [[660, "cmdoption-tblgen-gen-diag-docs", false]], "-gen-dialect-doc": [[660, "cmdoption-tblgen-gen-dialect-doc", false]], "-gen-directive-decl": [[660, "cmdoption-tblgen-0", false], [660, "cmdoption-tblgen-gen-directive-decl", false]], "-gen-directive-gen": [[660, "cmdoption-tblgen-gen-directive-gen", false]], "-gen-directive-impl": [[660, "cmdoption-tblgen-gen-directive-impl", false]], "-gen-disassembler": [[660, "cmdoption-tblgen-gen-disassembler", false]], "-gen-emitter": [[660, "cmdoption-tblgen-gen-emitter", false]], "-gen-enum-decls": [[660, "cmdoption-tblgen-gen-enum-decls", false]], "-gen-enum-defs": [[660, "cmdoption-tblgen-gen-enum-defs", false]], "-gen-enum-from-llvmir-conversions": [[660, "cmdoption-tblgen-gen-enum-from-llvmir-conversions", false]], "-gen-enum-to-llvmir-conversions": [[660, "cmdoption-tblgen-gen-enum-to-llvmir-conversions", false]], "-gen-exegesis": [[660, "cmdoption-tblgen-gen-exegesis", false]], "-gen-fast-isel": [[660, "cmdoption-tblgen-gen-fast-isel", false]], "-gen-global-isel": [[660, "cmdoption-tblgen-gen-global-isel", false]], "-gen-global-isel-combiner": [[660, "cmdoption-tblgen-gen-global-isel-combiner", false]], "-gen-instr-docs": [[660, "cmdoption-tblgen-gen-instr-docs", false]], "-gen-instr-info": [[660, "cmdoption-tblgen-gen-instr-info", false]], "-gen-intrinsic-enums": [[660, "cmdoption-tblgen-gen-intrinsic-enums", false]], "-gen-intrinsic-impl": [[660, "cmdoption-tblgen-gen-intrinsic-impl", false]], "-gen-llvmir-conversions": [[660, "cmdoption-tblgen-gen-llvmir-conversions", false]], "-gen-llvmir-intrinsics": [[660, "cmdoption-tblgen-gen-llvmir-intrinsics", false]], "-gen-op-decls": [[660, "cmdoption-tblgen-gen-op-decls", false]], "-gen-op-defs": [[660, "cmdoption-tblgen-gen-op-defs", false]], "-gen-op-doc": [[660, "cmdoption-tblgen-gen-op-doc", false]], "-gen-opt-docs": [[660, "cmdoption-tblgen-gen-opt-docs", false]], "-gen-opt-parser-defs": [[660, "cmdoption-tblgen-gen-opt-parser-defs", false]], "-gen-opt-rst": [[660, "cmdoption-tblgen-gen-opt-rst", false]], "-gen-pass-decls": [[660, "cmdoption-tblgen-gen-pass-decls", false]], "-gen-pass-doc": [[660, "cmdoption-tblgen-gen-pass-doc", false]], "-gen-pseudo-lowering": [[660, "cmdoption-tblgen-gen-pseudo-lowering", false]], "-gen-register-bank": [[660, "cmdoption-tblgen-gen-register-bank", false]], "-gen-register-info": [[660, "cmdoption-tblgen-gen-register-info", false]], "-gen-rewriters": [[660, "cmdoption-tblgen-gen-rewriters", false]], "-gen-riscv-vector-builtin-codegen": [[660, "cmdoption-tblgen-gen-riscv-vector-builtin-codegen", false]], "-gen-riscv-vector-builtins": [[660, "cmdoption-tblgen-gen-riscv-vector-builtins", false]], "-gen-riscv-vector-header": [[660, "cmdoption-tblgen-gen-riscv-vector-header", false]], "-gen-searchable-tables": [[660, "cmdoption-tblgen-gen-searchable-tables", false]], "-gen-spirv-avail-impls": [[660, "cmdoption-tblgen-gen-spirv-avail-impls", false]], "-gen-spirv-capability-implication": [[660, "cmdoption-tblgen-gen-spirv-capability-implication", false]], "-gen-spirv-enum-avail-decls": [[660, "cmdoption-tblgen-gen-spirv-enum-avail-decls", false]], "-gen-spirv-enum-avail-defs": [[660, "cmdoption-tblgen-gen-spirv-enum-avail-defs", false]], "-gen-spirv-op-utils": [[660, "cmdoption-tblgen-gen-spirv-op-utils", false]], "-gen-spirv-serialization": [[660, "cmdoption-tblgen-gen-spirv-serialization", false]], "-gen-struct-attr-decls": [[660, "cmdoption-tblgen-gen-struct-attr-decls", false]], "-gen-struct-attr-defs": [[660, "cmdoption-tblgen-gen-struct-attr-defs", false]], "-gen-subtarget": [[660, "cmdoption-tblgen-gen-subtarget", false]], "-gen-typedef-decls": [[660, "cmdoption-tblgen-gen-typedef-decls", false]], "-gen-typedef-defs": [[660, "cmdoption-tblgen-gen-typedef-defs", false]], "-gen-x86-evex2vex-tables": [[660, "cmdoption-tblgen-gen-x86-EVEX2VEX-tables", false]], "-gen-x86-fold-tables": [[660, "cmdoption-tblgen-gen-x86-fold-tables", false]], "-gicombiner-show-expansions": [[660, "cmdoption-tblgen-gicombiner-show-expansions", false]], "-gicombiner-stop-after-build": [[660, "cmdoption-tblgen-gicombiner-stop-after-build", false]], "-gicombiner-stop-after-parse": [[660, "cmdoption-tblgen-gicombiner-stop-after-parse", false]], "-gisel-coverage-file": [[660, "cmdoption-tblgen-gisel-coverage-file", false]], "-global-extras": [[645, "cmdoption-llvm-pdbutil-dump-global-extras", false]], "-globals": [[645, "cmdoption-llvm-pdbutil-dump-globals", false], [645, "cmdoption-llvm-pdbutil-pretty-globals", false]], "-h": [[615, "cmdoption-dsymutil-help", false], [617, "cmdoption-lit-h", false], [622, "cmdoption-llvm-ar-h", false], [627, "cmdoption-llvm-cxxfilt-help", false], [631, "cmdoption-llvm-dwarfdump-h", false], [634, "cmdoption-llvm-install-name-tool-help", false], [636, "cmdoption-llvm-libtool-darwin-h", false], [638, "cmdoption-llvm-lipo-help", false], [641, "cmdoption-llvm-nm-help", false], [642, "cmdoption-llvm-objcopy-help", false], [643, "cmdoption-llvm-objdump-h", false], [644, "cmdoption-llvm-otool-h", false], [649, "cmdoption-llvm-readelf-file-header", false], [650, "cmdoption-llvm-readobj-file-header", false], [651, "cmdoption-llvm-size-help", false], [653, "cmdoption-llvm-strings-help", false], [654, "cmdoption-llvm-strip-help", false], [655, "cmdoption-llvm-symbolizer-help", false], [657, "cmdoption-llvm-tli-checker-help", false]], "-help": [[612, "cmdoption-FileCheck-help", false], [618, "cmdoption-llc-help", false], [620, "cmdoption-lli-help", false], [624, "cmdoption-llvm-bcanalyzer-help", false], [632, "cmdoption-llvm-exegesis-help", false], [636, "cmdoption-llvm-libtool-darwin-h", false], [637, "cmdoption-llvm-link-help", false], [638, "cmdoption-llvm-lipo-help", false], [640, "cmdoption-llvm-mca-help", false], [659, "cmdoption-opt-help", false], [660, "cmdoption-tblgen-help", false]], "-help-list": [[636, "cmdoption-llvm-libtool-darwin-help-list", false], [660, "cmdoption-tblgen-help-list", false]], "-i": [[631, "cmdoption-llvm-dwarfdump-i", false], [642, "cmdoption-llvm-objcopy-input-target", false], [644, "cmdoption-llvm-otool-I", false], [649, "cmdoption-llvm-readelf-histogram", false], [650, "cmdoption-llvm-readobj-histogram", false], [655, "cmdoption-llvm-symbolizer-inlining", false], [660, "cmdoption-tblgen-I", false]], "-id": [[634, "cmdoption-llvm-install-name-tool-id", false], [645, "cmdoption-llvm-pdbutil-bytes-id", false]], "-id-data": [[645, "cmdoption-llvm-pdbutil-dump-id-data", false]], "-id-extras": [[645, "cmdoption-llvm-pdbutil-dump-id-extras", false]], "-id-index": [[645, "cmdoption-llvm-pdbutil-dump-id-index", false]], "-ids": [[645, "cmdoption-llvm-pdbutil-dump-ids", false]], "-ignore-filename-regex": [[626, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [626, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [626, "cmdoption-llvm-cov-show-ignore-filename-regex", false]], "-ignore-invalid-sched-class": [[632, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", false]], "-il": [[645, "cmdoption-llvm-pdbutil-dump-il", false]], "-include-compilands": [[645, "cmdoption-llvm-pdbutil-pretty-include-compilands", false]], "-include-symbols": [[645, "cmdoption-llvm-pdbutil-pretty-include-symbols", false]], "-include-types": [[645, "cmdoption-llvm-pdbutil-pretty-include-types", false]], "-info": [[638, "cmdoption-llvm-lipo-info", false]], "-instruction-info": [[640, "cmdoption-llvm-mca-instruction-info", false]], "-instruction-tables": [[640, "cmdoption-llvm-mca-instruction-tables", false]], "-instrument-coverage": [[660, "cmdoption-tblgen-instrument-coverage", false]], "-instrument-gisel-coverage": [[660, "cmdoption-tblgen-instrument-gisel-coverage", false]], "-intrinsic-prefix": [[660, "cmdoption-tblgen-intrinsic-prefix", false]], "-iterations": [[640, "cmdoption-llvm-mca-iterations", false]], "-j": [[615, "cmdoption-dsymutil-num-threads", false], [617, "cmdoption-lit-j", false], [626, "cmdoption-llvm-cov-export-num-threads", false], [626, "cmdoption-llvm-cov-show-num-threads", false], [641, "cmdoption-llvm-nm-j", false], [642, "cmdoption-llvm-objcopy-only-section", false], [643, "cmdoption-llvm-objdump-j", false], [644, "cmdoption-llvm-otool-j", false], [646, "cmdoption-llvm-profdata-merge-num-threads", false]], "-jit-enable-eh": [[620, "cmdoption-lli-jit-enable-eh", false]], "-join-liveintervals": [[620, "cmdoption-lli-join-liveintervals", false]], "-json": [[640, "cmdoption-llvm-mca-json", false]], "-k": [[642, "cmdoption-llvm-objcopy-keep-symbol", false], [654, "cmdoption-llvm-strip-keep-symbol", false]], "-l": [[626, "cmdoption-llvm-cov-gcov-l", false], [636, "cmdoption-llvm-libtool-darwin-L", false], [636, "cmdoption-llvm-libtool-darwin-l", false], [642, "cmdoption-llvm-objcopy-localize-symbol", false], [643, "cmdoption-llvm-objdump-l", false], [644, "cmdoption-llvm-otool-L", false], [644, "cmdoption-llvm-otool-l", false], [645, "cmdoption-llvm-pdbutil-dump-l", false], [649, "cmdoption-llvm-readelf-program-headers", false], [650, "cmdoption-llvm-readobj-program-headers", false], [651, "cmdoption-llvm-size-l", false]], "-line-coverage-gt": [[626, "cmdoption-llvm-cov-show-line-coverage-gt", false]], "-line-coverage-lt": [[626, "cmdoption-llvm-cov-show-line-coverage-lt", false]], "-lines": [[645, "cmdoption-llvm-pdbutil-pretty-lines", false]], "-llvmir-intrinsics-filter": [[660, "cmdoption-tblgen-llvmir-intrinsics-filter", false]], "-load": [[620, "cmdoption-lli-load", false], [659, "cmdoption-opt-load", false]], "-load-address": [[645, "cmdoption-llvm-pdbutil-pretty-load-address", false]], "-long-string-literals": [[660, "cmdoption-tblgen-long-string-literals", false]], "-loop-body-size": [[632, "cmdoption-llvm-exegesis-loop-body-size", false]], "-lqueue": [[640, "cmdoption-llvm-mca-lqueue", false]], "-lto-pass-remarks-filter": [[759, "cmdoption-lto-pass-remarks-filter", false]], "-lto-pass-remarks-format": [[759, "cmdoption-lto-pass-remarks-format", false]], "-lto-pass-remarks-hotness-threshold": [[759, "cmdoption-lto-pass-remarks-hotness-threshold", false]], "-lto-pass-remarks-output": [[759, "cmdoption-lto-pass-remarks-output", false]], "-lto-pass-remarks-with-hotness": [[759, "cmdoption-lto-pass-remarks-with-hotness", false]], "-m": [[622, "cmdoption-llvm-ar-M", false], [626, "cmdoption-llvm-cov-gcov-m", false], [641, "cmdoption-llvm-nm-m", false], [643, "cmdoption-llvm-objdump-M", false], [643, "cmdoption-llvm-objdump-m", false], [651, "cmdoption-llvm-size-m", false]], "-march": [[618, "cmdoption-llc-march", false], [620, "cmdoption-lli-march", false], [640, "cmdoption-llvm-mca-march", false]], "-match-prefix": [[660, "cmdoption-tblgen-match-prefix", false]], "-mattr": [[618, "cmdoption-llc-mattr", false], [620, "cmdoption-lli-mattr", false]], "-max-configs-per-opcode": [[632, "cmdoption-llvm-exegesis-max-configs-per-opcode", false]], "-mcpu": [[618, "cmdoption-llc-mcpu", false], [620, "cmdoption-lli-mcpu", false], [632, "cmdoption-llvm-exegesis-mcpu", false], [640, "cmdoption-llvm-mca-mcpu", false], [644, "cmdoption-llvm-otool-mcpu", false]], "-meabi": [[618, "cmdoption-llc-meabi", false]], "-min-class-padding": [[645, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false]], "-min-class-padding-imm": [[645, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false]], "-min-type-size": [[645, "cmdoption-llvm-pdbutil-pretty-min-type-size", false]], "-mod": [[645, "cmdoption-llvm-pdbutil-bytes-mod", false]], "-mode": [[632, "cmdoption-llvm-exegesis-mode", false]], "-modi": [[645, "cmdoption-llvm-pdbutil-bytes-modi", false], [645, "cmdoption-llvm-pdbutil-dump-modi", false]], "-module-syms": [[645, "cmdoption-llvm-pdbutil-pretty-module-syms", false]], "-modules": [[645, "cmdoption-llvm-pdbutil-dump-modules", false]], "-mtriple": [[618, "cmdoption-llc-mtriple", false], [620, "cmdoption-lli-mtriple", false], [640, "cmdoption-llvm-mca-mtriple", false]], "-n": [[626, "cmdoption-llvm-cov-gcov-n", false], [627, "cmdoption-llvm-cxxfilt-no-strip-underscore", false], [631, "cmdoption-llvm-dwarfdump-n", false], [641, "cmdoption-llvm-nm-numeric-sort", false], [642, "cmdoption-llvm-objcopy-strip-symbol", false], [649, "cmdoption-llvm-readelf-notes", false], [650, "cmdoption-llvm-readobj-notes", false], [653, "cmdoption-llvm-strings-bytes", false], [654, "cmdoption-llvm-strip-strip-symbol", false]], "-name": [[626, "cmdoption-llvm-cov-show-name", false], [660, "cmdoption-tblgen-name", false]], "-name-allowlist": [[626, "cmdoption-llvm-cov-show-name-allowlist", false]], "-name-map": [[645, "cmdoption-llvm-pdbutil-bytes-name-map", false]], "-name-regex": [[626, "cmdoption-llvm-cov-show-name-regex", false]], "-name-whitelist": [[626, "cmdoption-llvm-cov-show-name-whitelist", false]], "-no-compiler-generated": [[645, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false]], "-no-enum-definitions": [[645, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false]], "-no-system-libs": [[645, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false]], "-no_warning_for_no_symbols": [[636, "cmdoption-llvm-libtool-darwin-no_warning_for_no_symbols", false]], "-noalias": [[640, "cmdoption-llvm-mca-noalias", false]], "-nodetails": [[624, "cmdoption-llvm-bcanalyzer-nodetails", false]], "-nozero-initialized-in-bss": [[620, "cmdoption-lli-nozero-initialized-in-bss", false]], "-null-backend": [[660, "cmdoption-tblgen-null-backend", false]], "-num-repetitions": [[632, "cmdoption-llvm-exegesis-num-repetitions", false]], "-num-threads": [[626, "cmdoption-llvm-cov-export-num-threads", false], [626, "cmdoption-llvm-cov-show-num-threads", false]], "-o": [[615, "cmdoption-dsymutil-out", false], [618, "cmdoption-llc-O", false], [618, "cmdoption-llc-o", false], [626, "cmdoption-llvm-cov-gcov-o", false], [628, "cmdoption-llvm-cxxmap-output", false], [631, "cmdoption-llvm-dwarfdump-o", false], [636, "cmdoption-llvm-libtool-darwin-o", false], [637, "cmdoption-llvm-link-o", false], [640, "cmdoption-llvm-mca-o", false], [641, "cmdoption-llvm-nm-print-file-name", false], [642, "cmdoption-llvm-objcopy-output-target", false], [644, "cmdoption-llvm-otool-o", false], [646, "cmdoption-llvm-profdata-merge-output", false], [646, "cmdoption-llvm-profdata-overlap-output", false], [646, "cmdoption-llvm-profdata-show-output", false], [651, "cmdoption-llvm-size-o", false], [652, "cmdoption-llvm-stress-o", false], [654, "cmdoption-llvm-strip-o", false], [659, "cmdoption-opt-o", false], [660, "cmdoption-tblgen-o", false]], "-omit-comments": [[660, "cmdoption-tblgen-omit-comments", false]], "-op-exclude-regex": [[660, "cmdoption-tblgen-op-exclude-regex", false]], "-op-include-regex": [[660, "cmdoption-tblgen-op-include-regex", false]], "-opcode-index": [[632, "cmdoption-llvm-exegesis-opcode-index", false]], "-opcode-name": [[632, "cmdoption-llvm-exegesis-opcode-name", false]], "-opt-remarks-filename": [[759, "cmdoption-opt-remarks-filename", false]], "-opt-remarks-filter": [[759, "cmdoption-opt-remarks-filter", false]], "-opt-remarks-format": [[759, "cmdoption-opt-remarks-format", false]], "-opt-remarks-with-hotness": [[759, "cmdoption-opt-remarks-with-hotness", false]], "-optimize-match-table": [[660, "cmdoption-tblgen-optimize-match-table", false]], "-output": [[628, "cmdoption-llvm-cxxmap-output", false]], "-output-asm-variant": [[640, "cmdoption-llvm-mca-output-asm-variant", false]], "-output-dir": [[626, "cmdoption-llvm-cov-show-output-dir", false]], "-p": [[626, "cmdoption-llvm-cov-gcov-p", false], [631, "cmdoption-llvm-dwarfdump-p", false], [641, "cmdoption-llvm-nm-portability", false], [641, "cmdoption-llvm-nm-no-sort", false], [642, "cmdoption-llvm-objcopy-preserve-dates", false], [643, "cmdoption-llvm-objdump-p", false], [644, "cmdoption-llvm-otool-P", false], [644, "cmdoption-llvm-otool-p", false], [649, "cmdoption-llvm-readelf-string-dump", false], [650, "cmdoption-llvm-readobj-string-dump", false], [654, "cmdoption-llvm-strip-preserve-dates", false], [655, "cmdoption-llvm-symbolizer-pretty-print", false]], "-pass-remarks": [[759, "cmdoption-pass-remarks", false]], "-pass-remarks-analysis": [[759, "cmdoption-pass-remarks-analysis", false]], "-pass-remarks-filter": [[759, "cmdoption-pass-remarks-filter", false]], "-pass-remarks-format": [[759, "cmdoption-pass-remarks-format", false]], "-pass-remarks-hotness-threshold": [[759, "cmdoption-pass-remarks-hotness-threshold", false]], "-pass-remarks-missed": [[759, "cmdoption-pass-remarks-missed", false]], "-pass-remarks-output": [[759, "cmdoption-pass-remarks-output", false]], "-pass-remarks-with-hotness": [[759, "cmdoption-pass-remarks-with-hotness", false]], "-path-equivalence": [[626, "cmdoption-llvm-cov-show-path-equivalence", false]], "-pdb": [[645, "cmdoption-llvm-pdbutil-merge-pdb", false], [645, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "-pre-ra-sched": [[620, "cmdoption-lli-pre-RA-sched", false]], "-print-detailed-records": [[660, "cmdoption-tblgen-print-detailed-records", false]], "-print-enums": [[660, "cmdoption-tblgen-print-enums", false]], "-print-imm-hex": [[640, "cmdoption-llvm-mca-print-imm-hex", false]], "-print-passes": [[659, "cmdoption-opt-print-passes", false]], "-print-records": [[660, "cmdoption-tblgen-print-records", false]], "-print-sets": [[660, "cmdoption-tblgen-print-sets", false]], "-public-extras": [[645, "cmdoption-llvm-pdbutil-dump-public-extras", false]], "-publics": [[645, "cmdoption-llvm-pdbutil-dump-publics", false]], "-q": [[617, "cmdoption-lit-q", false]], "-r": [[626, "cmdoption-llvm-cov-gcov-r", false], [628, "cmdoption-llvm-cxxmap-remapping-file", false], [631, "cmdoption-llvm-dwarfdump-r", false], [641, "cmdoption-llvm-nm-reverse-sort", false], [642, "cmdoption-llvm-objcopy-remove-section", false], [643, "cmdoption-llvm-objdump-R", false], [643, "cmdoption-llvm-objdump-r", false], [644, "cmdoption-llvm-otool-r", false], [646, "cmdoption-llvm-profdata-merge-remapping-file", false], [649, "cmdoption-llvm-readelf-relocations", false], [650, "cmdoption-llvm-readobj-relocations", false], [654, "cmdoption-llvm-strip-remove-section", false]], "-regalloc": [[620, "cmdoption-lli-regalloc", false]], "-region-coverage-gt": [[626, "cmdoption-llvm-cov-show-region-coverage-gt", false]], "-region-coverage-lt": [[626, "cmdoption-llvm-cov-show-region-coverage-lt", false]], "-register-file-size": [[640, "cmdoption-llvm-mca-register-file-size", false]], "-register-file-stats": [[640, "cmdoption-llvm-mca-register-file-stats", false]], "-register-info-debug": [[660, "cmdoption-tblgen-register-info-debug", false]], "-relocation-model": [[620, "cmdoption-lli-relocation-model", false]], "-remapping-file": [[628, "cmdoption-llvm-cxxmap-remapping-file", false]], "-remarks-section": [[618, "cmdoption-llc-remarks-section", false]], "-repetition-mode": [[632, "cmdoption-llvm-exegesis-repetition-mode", false]], "-replace": [[638, "cmdoption-llvm-lipo-replace", false]], "-resource-pressure": [[640, "cmdoption-llvm-mca-resource-pressure", false]], "-retire-stats": [[640, "cmdoption-llvm-mca-retire-stats", false]], "-rpath": [[634, "cmdoption-llvm-install-name-tool-rpath", false]], "-s": [[615, "cmdoption-dsymutil-S", false], [615, "cmdoption-dsymutil-s", false], [617, "cmdoption-lit-s", false], [626, "cmdoption-llvm-cov-gcov-s", false], [627, "cmdoption-llvm-cxxfilt-format", false], [637, "cmdoption-llvm-link-S", false], [641, "cmdoption-llvm-nm-print-size", false], [641, "cmdoption-llvm-nm-s", false], [642, "cmdoption-llvm-objcopy-strip-all", false], [643, "cmdoption-llvm-objdump-S", false], [643, "cmdoption-llvm-objdump-s", false], [644, "cmdoption-llvm-otool-s", false], [649, "cmdoption-llvm-readelf-sections", false], [649, "cmdoption-llvm-readelf-symbols", false], [650, "cmdoption-llvm-readobj-sections", false], [650, "cmdoption-llvm-readobj-symbols", false], [654, "cmdoption-llvm-strip-strip-debug", false], [654, "cmdoption-llvm-strip-strip-all", false], [655, "cmdoption-llvm-symbolizer-basenames", false], [659, "cmdoption-opt-S", false]], "-sc": [[645, "cmdoption-llvm-pdbutil-bytes-sc", false]], "-scheduler-stats": [[640, "cmdoption-llvm-mca-scheduler-stats", false]], "-section-contribs": [[645, "cmdoption-llvm-pdbutil-dump-section-contribs", false]], "-section-headers": [[645, "cmdoption-llvm-pdbutil-dump-section-headers", false]], "-section-map": [[645, "cmdoption-llvm-pdbutil-dump-section-map", false]], "-seed": [[652, "cmdoption-llvm-stress-seed", false]], "-segalign": [[638, "cmdoption-llvm-lipo-segalign", false]], "-show-barriers": [[640, "cmdoption-llvm-mca-show-barriers", false]], "-show-branch-summary": [[626, "cmdoption-llvm-cov-report-show-branch-summary", false]], "-show-branches": [[626, "cmdoption-llvm-cov-show-show-branches", false]], "-show-encoding": [[640, "cmdoption-llvm-mca-show-encoding", false]], "-show-expansions": [[626, "cmdoption-llvm-cov-show-show-expansions", false]], "-show-functions": [[626, "cmdoption-llvm-cov-report-show-functions", false]], "-show-instantiation-summary": [[626, "cmdoption-llvm-cov-report-show-instantiation-summary", false]], "-show-instantiations": [[626, "cmdoption-llvm-cov-show-show-instantiations", false]], "-show-line-counts": [[626, "cmdoption-llvm-cov-show-show-line-counts", false]], "-show-line-counts-or-regions": [[626, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false]], "-show-region-summary": [[626, "cmdoption-llvm-cov-report-show-region-summary", false]], "-show-regions": [[626, "cmdoption-llvm-cov-show-show-regions", false]], "-size": [[652, "cmdoption-llvm-stress-size", false]], "-skip-expansions": [[626, "cmdoption-llvm-cov-export-skip-expansions", false]], "-skip-functions": [[626, "cmdoption-llvm-cov-export-skip-functions", false]], "-sm": [[645, "cmdoption-llvm-pdbutil-bytes-sm", false]], "-snippets-file": [[632, "cmdoption-llvm-exegesis-snippets-file", false]], "-soft-float": [[620, "cmdoption-lli-soft-float", false]], "-spiller": [[620, "cmdoption-lli-spiller", false]], "-split-chunks": [[645, "cmdoption-llvm-pdbutil-bytes-split-chunks", false]], "-squeue": [[640, "cmdoption-llvm-mca-squeue", false]], "-stack-size-section": [[618, "cmdoption-llc-stack-size-section", false]], "-static": [[636, "cmdoption-llvm-libtool-darwin-static", false]], "-stats": [[620, "cmdoption-lli-stats", false], [659, "cmdoption-opt-stats", false], [660, "cmdoption-tblgen-stats", false]], "-stream-blocks": [[645, "cmdoption-llvm-pdbutil-dump-stream-blocks", false]], "-stream-data": [[645, "cmdoption-llvm-pdbutil-bytes-stream-data", false]], "-streams": [[645, "cmdoption-llvm-pdbutil-dump-streams", false]], "-string-table": [[645, "cmdoption-llvm-pdbutil-dump-string-table", false]], "-strip-debug": [[659, "cmdoption-opt-strip-debug", false]], "-summary": [[645, "cmdoption-llvm-pdbutil-dump-summary", false]], "-summary-only": [[626, "cmdoption-llvm-cov-export-summary-only", false]], "-sym-data": [[645, "cmdoption-llvm-pdbutil-dump-sym-data", false]], "-sym-types": [[645, "cmdoption-llvm-pdbutil-pretty-sym-types", false]], "-symbol-order": [[645, "cmdoption-llvm-pdbutil-pretty-symbol-order", false]], "-symbols": [[645, "cmdoption-llvm-pdbutil-dump-symbols", false]], "-syms": [[645, "cmdoption-llvm-pdbutil-bytes-syms", false]], "-t": [[626, "cmdoption-llvm-cov-gcov-t", false], [627, "cmdoption-llvm-cxxfilt-types", false], [641, "cmdoption-llvm-nm-radix", false], [643, "cmdoption-llvm-objdump-T", false], [643, "cmdoption-llvm-objdump-t", false], [644, "cmdoption-llvm-otool-t", false], [649, "cmdoption-llvm-readelf-section-details", false], [651, "cmdoption-llvm-size-totals", false], [653, "cmdoption-llvm-strings-radix", false], [654, "cmdoption-llvm-strip-T", false]], "-tab-size": [[626, "cmdoption-llvm-cov-show-tab-size", false]], "-thin": [[638, "cmdoption-llvm-lipo-thin", false]], "-time-passes": [[620, "cmdoption-lli-time-passes", false], [659, "cmdoption-opt-time-passes", false]], "-time-phases": [[660, "cmdoption-tblgen-time-phases", false]], "-timeline": [[640, "cmdoption-llvm-mca-timeline", false]], "-timeline-max-cycles": [[640, "cmdoption-llvm-mca-timeline-max-cycles", false]], "-timeline-max-iterations": [[640, "cmdoption-llvm-mca-timeline-max-iterations", false]], "-type": [[645, "cmdoption-llvm-pdbutil-bytes-type", false]], "-type-data": [[645, "cmdoption-llvm-pdbutil-dump-type-data", false]], "-type-extras": [[645, "cmdoption-llvm-pdbutil-dump-type-extras", false]], "-type-index": [[645, "cmdoption-llvm-pdbutil-dump-type-index", false]], "-type-server": [[645, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "-typedefs": [[645, "cmdoption-llvm-pdbutil-pretty-typedefs", false]], "-typedefs-dialect": [[660, "cmdoption-tblgen-typedefs-dialect", false]], "-types": [[645, "cmdoption-llvm-pdbutil-dump-types", false], [645, "cmdoption-llvm-pdbutil-pretty-types", false]], "-u": [[615, "cmdoption-dsymutil-u", false], [626, "cmdoption-llvm-cov-gcov-u", false], [631, "cmdoption-llvm-dwarfdump-u", false], [636, "cmdoption-llvm-libtool-darwin-U", false], [641, "cmdoption-llvm-nm-undefined-only", false], [642, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [643, "cmdoption-llvm-objdump-u", false], [649, "cmdoption-llvm-readelf-unwind", false], [650, "cmdoption-llvm-readobj-unwind", false], [654, "cmdoption-llvm-strip-disable-deterministic-archives", false]], "-use-color": [[626, "cmdoption-llvm-cov-report-use-color", false], [626, "cmdoption-llvm-cov-show-use-color", false]], "-v": [[612, "cmdoption-FileCheck-v", false], [615, "cmdoption-dsymutil-v", false], [617, "cmdoption-lit-v", false], [631, "cmdoption-llvm-dwarfdump-v", false], [634, "cmdoption-llvm-install-name-tool-version", false], [636, "cmdoption-llvm-libtool-darwin-V", false], [637, "cmdoption-llvm-link-v", false], [641, "cmdoption-llvm-nm-version", false], [641, "cmdoption-llvm-nm-numeric-sort", false], [642, "cmdoption-llvm-objcopy-version", false], [643, "cmdoption-llvm-objdump-v", false], [644, "cmdoption-llvm-otool-V", false], [644, "cmdoption-llvm-otool-v", false], [649, "cmdoption-llvm-readelf-version-info", false], [650, "cmdoption-llvm-readobj-version-info", false], [654, "cmdoption-llvm-strip-version", false], [655, "cmdoption-llvm-symbolizer-version", false]], "-verify": [[624, "cmdoption-llvm-bcanalyzer-verify", false]], "-verify-each": [[659, "cmdoption-opt-verify-each", false]], "-verify_arch": [[638, "cmdoption-llvm-lipo-verify_arch", false]], "-version": [[612, "cmdoption-FileCheck-version", false], [620, "cmdoption-lli-version", false], [626, "cmdoption-llvm-cov-gcov-version", false], [636, "cmdoption-llvm-libtool-darwin-version", false], [638, "cmdoption-llvm-lipo-version", false], [660, "cmdoption-tblgen-version", false]], "-vv": [[612, "cmdoption-FileCheck-vv", false], [617, "cmdoption-lit-vv", false]], "-w": [[642, "cmdoption-llvm-objcopy-weaken-symbol", false], [642, "cmdoption-llvm-objcopy-wildcard", false], [643, "cmdoption-llvm-objdump-w", false], [649, "cmdoption-llvm-readelf-wide", false], [654, "cmdoption-llvm-strip-wildcard", false]], "-wambiguous": [[628, "cmdoption-llvm-cxxmap-Wambiguous", false]], "-warn-on-skipped-patterns": [[660, "cmdoption-tblgen-warn-on-skipped-patterns", false]], "-wincomplete": [[628, "cmdoption-llvm-cxxmap-Wincomplete", false]], "-write-if-changed": [[660, "cmdoption-tblgen-write-if-changed", false]], "-x": [[626, "cmdoption-llvm-cov-gcov-x", false], [631, "cmdoption-llvm-dwarfdump-x", false], [641, "cmdoption-llvm-nm-x", false], [642, "cmdoption-llvm-objcopy-discard-locals", false], [642, "cmdoption-llvm-objcopy-discard-all", false], [643, "cmdoption-llvm-objdump-x", false], [644, "cmdoption-llvm-otool-X", false], [644, "cmdoption-llvm-otool-x", false], [649, "cmdoption-llvm-readelf-hex-dump", false], [650, "cmdoption-llvm-readobj-hex-dump", false], [651, "cmdoption-llvm-size-x", false], [654, "cmdoption-llvm-strip-discard-locals", false], [654, "cmdoption-llvm-strip-discard-all", false]], "-x86-asm-syntax": [[620, "cmdoption-lli-x86-asm-syntax", false]], "-x86-lbr-sample-period": [[632, "cmdoption-llvm-exegesis-x86-lbr-sample-period", false]], "-xdemangler": [[626, "cmdoption-llvm-cov-show-Xdemangler", false]], "-xme": [[645, "cmdoption-llvm-pdbutil-dump-xme", false]], "-xmi": [[645, "cmdoption-llvm-pdbutil-dump-xmi", false]], "-y": [[615, "cmdoption-dsymutil-y", false]], "-z": [[615, "cmdoption-dsymutil-minimize", false], [643, "cmdoption-llvm-objdump-z", false]], "-{passname}": [[659, "cmdoption-opt-passname", false]], "@<file>": [[622, "cmdoption-llvm-ar-arg-FILE", false], [627, "cmdoption-llvm-cxxfilt-arg-FILE", false], [631, "cmdoption-llvm-dwarfdump-arg-FILE", false], [641, "cmdoption-llvm-nm-arg-FILE", false], [642, "cmdoption-llvm-objcopy-arg-FILE", false], [643, "cmdoption-llvm-objdump-arg-FILE", false], [644, "cmdoption-llvm-otool-arg-FILE", false], [649, "cmdoption-llvm-readelf-arg-FILE", false], [650, "cmdoption-llvm-readobj-arg-FILE", false], [651, "cmdoption-llvm-size-arg-FILE", false], [653, "cmdoption-llvm-strings-arg-FILE", false], [654, "cmdoption-llvm-strip-arg-FILE", false], [655, "cmdoption-llvm-symbolizer-arg-FILE", false], [657, "cmdoption-llvm-tli-checker-arg-FILE", false]], "``posix``": [[622, "cmdoption-llvm-ar-arg-posix", false]], "a": [[622, "cmdoption-llvm-ar-arg-a", false]], "addlib": [[622, "cmdoption-llvm-ar-arg-ADDLIB", false]], "addmod": [[622, "cmdoption-llvm-ar-arg-ADDMOD", false]], "att": [[643, "cmdoption-llvm-objdump-arg-att", false]], "b": [[622, "cmdoption-llvm-ar-arg-b", false]], "c": [[622, "cmdoption-llvm-ar-arg-c", false]], "create": [[622, "cmdoption-llvm-ar-arg-CREATE", false]], "createthin": [[622, "cmdoption-llvm-ar-arg-CREATETHIN", false]], "d": [[622, "cmdoption-llvm-ar-arg-D", false], [622, "cmdoption-llvm-ar-arg-d", false]], "default": [[622, "cmdoption-llvm-ar-arg-default", false]], "delete": [[622, "cmdoption-llvm-ar-arg-DELETE", false]], "either": [[622, "cmdoption-llvm-ar-arg-This", false]], "end": [[622, "cmdoption-llvm-ar-arg-END", false]], "gen-lldb-option-defs": [[660, "cmdoption-tblgen-arg-gen-lldb-option-defs", false]], "gen-lldb-property-defs": [[660, "cmdoption-tblgen-arg-gen-lldb-property-defs", false]], "gen-lldb-property-enum-defs": [[660, "cmdoption-tblgen-arg-gen-lldb-property-enum-defs", false]], "i": [[622, "cmdoption-llvm-ar-arg-i", false]], "intel": [[643, "cmdoption-llvm-objdump-arg-intel", false]], "l": [[622, "cmdoption-llvm-ar-arg-L", false]], "m": [[622, "cmdoption-llvm-ar-arg-m", false]], "n": [[622, "cmdoption-llvm-ar-arg-N", false]], "o": [[622, "cmdoption-llvm-ar-arg-O", false], [622, "cmdoption-llvm-ar-arg-o", false]], "option de ligne de commande": [[759, "cmdoption-lto-pass-remarks-filter", false], [759, "cmdoption-lto-pass-remarks-format", false], [759, "cmdoption-lto-pass-remarks-hotness-threshold", false], [759, "cmdoption-lto-pass-remarks-output", false], [759, "cmdoption-lto-pass-remarks-with-hotness", false], [759, "cmdoption-opt-remarks-filename", false], [759, "cmdoption-opt-remarks-filter", false], [759, "cmdoption-opt-remarks-format", false], [759, "cmdoption-opt-remarks-with-hotness", false], [759, "cmdoption-pass-remarks", false], [759, "cmdoption-pass-remarks-analysis", false], [759, "cmdoption-pass-remarks-filter", false], [759, "cmdoption-pass-remarks-format", false], [759, "cmdoption-pass-remarks-hotness-threshold", false], [759, "cmdoption-pass-remarks-missed", false], [759, "cmdoption-pass-remarks-output", false], [759, "cmdoption-pass-remarks-with-hotness", false]], "option de ligne de commande dsymutil": [[615, "cmdoption-dsymutil-S", false], [615, "cmdoption-dsymutil-accelerator", false], [615, "cmdoption-dsymutil-arch", false], [615, "cmdoption-dsymutil-dump-debug-map", false], [615, "cmdoption-dsymutil-flat", false], [615, "cmdoption-dsymutil-gen-reproducer", false], [615, "cmdoption-dsymutil-help", false], [615, "cmdoption-dsymutil-keep-function-for-static", false], [615, "cmdoption-dsymutil-minimize", false], [615, "cmdoption-dsymutil-no-odr", false], [615, "cmdoption-dsymutil-no-output", false], [615, "cmdoption-dsymutil-no-swiftmodule-timestamp", false], [615, "cmdoption-dsymutil-num-threads", false], [615, "cmdoption-dsymutil-object-prefix-map", false], [615, "cmdoption-dsymutil-oso-prepend-path", false], [615, "cmdoption-dsymutil-out", false], [615, "cmdoption-dsymutil-papertrail", false], [615, "cmdoption-dsymutil-remarks-output-format", false], [615, "cmdoption-dsymutil-remarks-prepend-path", false], [615, "cmdoption-dsymutil-s", false], [615, "cmdoption-dsymutil-statistics", false], [615, "cmdoption-dsymutil-symbol-map", false], [615, "cmdoption-dsymutil-toolchain", false], [615, "cmdoption-dsymutil-u", false], [615, "cmdoption-dsymutil-use-reproducer", false], [615, "cmdoption-dsymutil-v", false], [615, "cmdoption-dsymutil-verbose", false], [615, "cmdoption-dsymutil-verify", false], [615, "cmdoption-dsymutil-y", false]], "option de ligne de commande filecheck": [[612, "cmdoption-FileCheck-D-FMT-NUMVAR", false], [612, "cmdoption-FileCheck-D-VAR", false], [612, "cmdoption-FileCheck-allow-deprecated-dag-overlap", false], [612, "cmdoption-FileCheck-allow-empty", false], [612, "cmdoption-FileCheck-allow-unused-prefixes", false], [612, "cmdoption-FileCheck-check-prefix", false], [612, "cmdoption-FileCheck-check-prefixes", false], [612, "cmdoption-FileCheck-color", false], [612, "cmdoption-FileCheck-comment-prefixes", false], [612, "cmdoption-FileCheck-dump-input", false], [612, "cmdoption-FileCheck-dump-input-context", false], [612, "cmdoption-FileCheck-dump-input-filter", false], [612, "cmdoption-FileCheck-enable-var-scope", false], [612, "cmdoption-FileCheck-help", false], [612, "cmdoption-FileCheck-ignore-case", false], [612, "cmdoption-FileCheck-implicit-check-not", false], [612, "cmdoption-FileCheck-input-file", false], [612, "cmdoption-FileCheck-match-full-lines", false], [612, "cmdoption-FileCheck-strict-whitespace", false], [612, "cmdoption-FileCheck-v", false], [612, "cmdoption-FileCheck-version", false], [612, "cmdoption-FileCheck-vv", false]], "option de ligne de commande lit": [[617, "cmdoption-lit-D", false], [617, "cmdoption-lit-a", false], [617, "cmdoption-lit-config-prefix", false], [617, "cmdoption-lit-debug", false], [617, "cmdoption-lit-filter", false], [617, "cmdoption-lit-filter-out", false], [617, "cmdoption-lit-h", false], [617, "cmdoption-lit-ignore-fail", false], [617, "cmdoption-lit-j", false], [617, "cmdoption-lit-max-failures", false], [617, "cmdoption-lit-max-tests", false], [617, "cmdoption-lit-max-time", false], [617, "cmdoption-lit-no-indirectly-run-check", false], [617, "cmdoption-lit-no-progress-bar", false], [617, "cmdoption-lit-num-shards", false], [617, "cmdoption-lit-order", false], [617, "cmdoption-lit-path", false], [617, "cmdoption-lit-q", false], [617, "cmdoption-lit-run-shard", false], [617, "cmdoption-lit-s", false], [617, "cmdoption-lit-show-suites", false], [617, "cmdoption-lit-show-tests", false], [617, "cmdoption-lit-show-unsupported", false], [617, "cmdoption-lit-show-xfail", false], [617, "cmdoption-lit-shuffle", false], [617, "cmdoption-lit-time-tests", false], [617, "cmdoption-lit-timeout", false], [617, "cmdoption-lit-v", false], [617, "cmdoption-lit-vg", false], [617, "cmdoption-lit-vg-arg", false], [617, "cmdoption-lit-vg-leak", false], [617, "cmdoption-lit-vv", false], [617, "cmdoption-lit-xfail", false], [617, "cmdoption-lit-xfail-not", false]], "option de ligne de commande llc": [[618, "cmdoption-llc-O", false], [618, "cmdoption-llc-disable-excess-fp-precision", false], [618, "cmdoption-llc-enable-no-infs-fp-math", false], [618, "cmdoption-llc-enable-no-nans-fp-math", false], [618, "cmdoption-llc-enable-no-signed-zeros-fp-math", false], [618, "cmdoption-llc-enable-no-trapping-fp-math", false], [618, "cmdoption-llc-enable-unsafe-fp-math", false], [618, "cmdoption-llc-filetype", false], [618, "cmdoption-llc-frame-pointer", false], [618, "cmdoption-llc-help", false], [618, "cmdoption-llc-load", false], [618, "cmdoption-llc-march", false], [618, "cmdoption-llc-mattr", false], [618, "cmdoption-llc-mcpu", false], [618, "cmdoption-llc-meabi", false], [618, "cmdoption-llc-mtriple", false], [618, "cmdoption-llc-o", false], [618, "cmdoption-llc-print-after-isel", false], [618, "cmdoption-llc-regalloc", false], [618, "cmdoption-llc-remarks-section", false], [618, "cmdoption-llc-spiller", false], [618, "cmdoption-llc-stack-size-section", false], [618, "cmdoption-llc-stats", false], [618, "cmdoption-llc-time-passes", false], [618, "cmdoption-llc-x86-asm-syntax", false]], "option de ligne de commande lli": [[620, "cmdoption-lli-code-model", false], [620, "cmdoption-lli-disable-excess-fp-precision", false], [620, "cmdoption-lli-disable-post-RA-scheduler", false], [620, "cmdoption-lli-disable-spill-fusing", false], [620, "cmdoption-lli-enable-no-infs-fp-math", false], [620, "cmdoption-lli-enable-no-nans-fp-math", false], [620, "cmdoption-lli-enable-unsafe-fp-math", false], [620, "cmdoption-lli-fake-argv0", false], [620, "cmdoption-lli-force-interpreter", false], [620, "cmdoption-lli-help", false], [620, "cmdoption-lli-jit-enable-eh", false], [620, "cmdoption-lli-join-liveintervals", false], [620, "cmdoption-lli-load", false], [620, "cmdoption-lli-march", false], [620, "cmdoption-lli-mattr", false], [620, "cmdoption-lli-mcpu", false], [620, "cmdoption-lli-mtriple", false], [620, "cmdoption-lli-nozero-initialized-in-bss", false], [620, "cmdoption-lli-pre-RA-sched", false], [620, "cmdoption-lli-regalloc", false], [620, "cmdoption-lli-relocation-model", false], [620, "cmdoption-lli-soft-float", false], [620, "cmdoption-lli-spiller", false], [620, "cmdoption-lli-stats", false], [620, "cmdoption-lli-time-passes", false], [620, "cmdoption-lli-version", false], [620, "cmdoption-lli-x86-asm-syntax", false]], "option de ligne de commande llvm-ar": [[622, "cmdoption-llvm-ar-M", false], [622, "cmdoption-llvm-ar-arg-ADDLIB", false], [622, "cmdoption-llvm-ar-arg-ADDMOD", false], [622, "cmdoption-llvm-ar-arg-CREATE", false], [622, "cmdoption-llvm-ar-arg-CREATETHIN", false], [622, "cmdoption-llvm-ar-arg-D", false], [622, "cmdoption-llvm-ar-arg-DELETE", false], [622, "cmdoption-llvm-ar-arg-END", false], [622, "cmdoption-llvm-ar-arg-FILE", false], [622, "cmdoption-llvm-ar-arg-L", false], [622, "cmdoption-llvm-ar-arg-N", false], [622, "cmdoption-llvm-ar-arg-O", false], [622, "cmdoption-llvm-ar-arg-P", false], [622, "cmdoption-llvm-ar-arg-S", false], [622, "cmdoption-llvm-ar-arg-SAVE", false], [622, "cmdoption-llvm-ar-arg-T", false], [622, "cmdoption-llvm-ar-arg-This", false], [622, "cmdoption-llvm-ar-arg-U", false], [622, "cmdoption-llvm-ar-arg-V", false], [622, "cmdoption-llvm-ar-arg-a", false], [622, "cmdoption-llvm-ar-arg-b", false], [622, "cmdoption-llvm-ar-arg-c", false], [622, "cmdoption-llvm-ar-arg-d", false], [622, "cmdoption-llvm-ar-arg-default", false], [622, "cmdoption-llvm-ar-arg-i", false], [622, "cmdoption-llvm-ar-arg-m", false], [622, "cmdoption-llvm-ar-arg-o", false], [622, "cmdoption-llvm-ar-arg-p", false], [622, "cmdoption-llvm-ar-arg-posix", false], [622, "cmdoption-llvm-ar-arg-q", false], [622, "cmdoption-llvm-ar-arg-r", false], [622, "cmdoption-llvm-ar-arg-s", false], [622, "cmdoption-llvm-ar-arg-u", false], [622, "cmdoption-llvm-ar-arg-v", false], [622, "cmdoption-llvm-ar-arg-x", false], [622, "cmdoption-llvm-ar-format", false], [622, "cmdoption-llvm-ar-h", false], [622, "cmdoption-llvm-ar-rsp-quoting", false], [622, "cmdoption-llvm-ar-thin", false], [622, "cmdoption-llvm-ar-version", false]], "option de ligne de commande llvm-bcanalyzer": [[624, "cmdoption-llvm-bcanalyzer-dump", false], [624, "cmdoption-llvm-bcanalyzer-help", false], [624, "cmdoption-llvm-bcanalyzer-nodetails", false], [624, "cmdoption-llvm-bcanalyzer-verify", false]], "option de ligne de commande llvm-cov-export": [[626, "cmdoption-llvm-cov-export-arch", false], [626, "cmdoption-llvm-cov-export-compilation-dir", false], [626, "cmdoption-llvm-cov-export-format", false], [626, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [626, "cmdoption-llvm-cov-export-num-threads", false], [626, "cmdoption-llvm-cov-export-skip-expansions", false], [626, "cmdoption-llvm-cov-export-skip-functions", false], [626, "cmdoption-llvm-cov-export-summary-only", false]], "option de ligne de commande llvm-cov-gcov": [[626, "cmdoption-llvm-cov-gcov-a", false], [626, "cmdoption-llvm-cov-gcov-b", false], [626, "cmdoption-llvm-cov-gcov-c", false], [626, "cmdoption-llvm-cov-gcov-f", false], [626, "cmdoption-llvm-cov-gcov-help", false], [626, "cmdoption-llvm-cov-gcov-l", false], [626, "cmdoption-llvm-cov-gcov-m", false], [626, "cmdoption-llvm-cov-gcov-n", false], [626, "cmdoption-llvm-cov-gcov-o", false], [626, "cmdoption-llvm-cov-gcov-p", false], [626, "cmdoption-llvm-cov-gcov-r", false], [626, "cmdoption-llvm-cov-gcov-s", false], [626, "cmdoption-llvm-cov-gcov-t", false], [626, "cmdoption-llvm-cov-gcov-u", false], [626, "cmdoption-llvm-cov-gcov-version", false], [626, "cmdoption-llvm-cov-gcov-x", false]], "option de ligne de commande llvm-cov-report": [[626, "cmdoption-llvm-cov-report-arch", false], [626, "cmdoption-llvm-cov-report-compilation-dir", false], [626, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [626, "cmdoption-llvm-cov-report-show-branch-summary", false], [626, "cmdoption-llvm-cov-report-show-functions", false], [626, "cmdoption-llvm-cov-report-show-instantiation-summary", false], [626, "cmdoption-llvm-cov-report-show-region-summary", false], [626, "cmdoption-llvm-cov-report-use-color", false]], "option de ligne de commande llvm-cov-show": [[626, "cmdoption-llvm-cov-show-Xdemangler", false], [626, "cmdoption-llvm-cov-show-arch", false], [626, "cmdoption-llvm-cov-show-compilation-dir", false], [626, "cmdoption-llvm-cov-show-format", false], [626, "cmdoption-llvm-cov-show-ignore-filename-regex", false], [626, "cmdoption-llvm-cov-show-line-coverage-gt", false], [626, "cmdoption-llvm-cov-show-line-coverage-lt", false], [626, "cmdoption-llvm-cov-show-name", false], [626, "cmdoption-llvm-cov-show-name-allowlist", false], [626, "cmdoption-llvm-cov-show-name-regex", false], [626, "cmdoption-llvm-cov-show-name-whitelist", false], [626, "cmdoption-llvm-cov-show-num-threads", false], [626, "cmdoption-llvm-cov-show-output-dir", false], [626, "cmdoption-llvm-cov-show-path-equivalence", false], [626, "cmdoption-llvm-cov-show-region-coverage-gt", false], [626, "cmdoption-llvm-cov-show-region-coverage-lt", false], [626, "cmdoption-llvm-cov-show-show-branches", false], [626, "cmdoption-llvm-cov-show-show-expansions", false], [626, "cmdoption-llvm-cov-show-show-instantiations", false], [626, "cmdoption-llvm-cov-show-show-line-counts", false], [626, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false], [626, "cmdoption-llvm-cov-show-show-regions", false], [626, "cmdoption-llvm-cov-show-tab-size", false], [626, "cmdoption-llvm-cov-show-use-color", false]], "option de ligne de commande llvm-cxxfilt": [[627, "cmdoption-llvm-cxxfilt-arg-FILE", false], [627, "cmdoption-llvm-cxxfilt-format", false], [627, "cmdoption-llvm-cxxfilt-help", false], [627, "cmdoption-llvm-cxxfilt-no-strip-underscore", false], [627, "cmdoption-llvm-cxxfilt-strip-underscore", false], [627, "cmdoption-llvm-cxxfilt-types", false], [627, "cmdoption-llvm-cxxfilt-version", false]], "option de ligne de commande llvm-cxxmap": [[628, "cmdoption-llvm-cxxmap-Wambiguous", false], [628, "cmdoption-llvm-cxxmap-Wincomplete", false], [628, "cmdoption-llvm-cxxmap-output", false], [628, "cmdoption-llvm-cxxmap-remapping-file", false]], "option de ligne de commande llvm-dwarfdump": [[631, "cmdoption-llvm-dwarfdump-F", false], [631, "cmdoption-llvm-dwarfdump-a", false], [631, "cmdoption-llvm-dwarfdump-arch", false], [631, "cmdoption-llvm-dwarfdump-arg-FILE", false], [631, "cmdoption-llvm-dwarfdump-c", false], [631, "cmdoption-llvm-dwarfdump-color", false], [631, "cmdoption-llvm-dwarfdump-debug-abbrev", false], [631, "cmdoption-llvm-dwarfdump-diff", false], [631, "cmdoption-llvm-dwarfdump-f", false], [631, "cmdoption-llvm-dwarfdump-h", false], [631, "cmdoption-llvm-dwarfdump-help-list", false], [631, "cmdoption-llvm-dwarfdump-i", false], [631, "cmdoption-llvm-dwarfdump-lookup", false], [631, "cmdoption-llvm-dwarfdump-n", false], [631, "cmdoption-llvm-dwarfdump-o", false], [631, "cmdoption-llvm-dwarfdump-p", false], [631, "cmdoption-llvm-dwarfdump-parent-recurse-depth", false], [631, "cmdoption-llvm-dwarfdump-quiet", false], [631, "cmdoption-llvm-dwarfdump-r", false], [631, "cmdoption-llvm-dwarfdump-show-section-sizes", false], [631, "cmdoption-llvm-dwarfdump-statistics", false], [631, "cmdoption-llvm-dwarfdump-summarize-types", false], [631, "cmdoption-llvm-dwarfdump-u", false], [631, "cmdoption-llvm-dwarfdump-v", false], [631, "cmdoption-llvm-dwarfdump-verify", false], [631, "cmdoption-llvm-dwarfdump-version", false], [631, "cmdoption-llvm-dwarfdump-x", false]], "option de ligne de commande llvm-exegesis": [[632, "cmdoption-llvm-exegesis-analysis-clustering", false], [632, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", false], [632, "cmdoption-llvm-exegesis-analysis-clusters-output-file", false], [632, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", false], [632, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", false], [632, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", false], [632, "cmdoption-llvm-exegesis-analysis-numpoints", false], [632, "cmdoption-llvm-exegesis-benchmarks-file", false], [632, "cmdoption-llvm-exegesis-dump-object-to-disk", false], [632, "cmdoption-llvm-exegesis-help", false], [632, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", false], [632, "cmdoption-llvm-exegesis-loop-body-size", false], [632, "cmdoption-llvm-exegesis-max-configs-per-opcode", false], [632, "cmdoption-llvm-exegesis-mcpu", false], [632, "cmdoption-llvm-exegesis-mode", false], [632, "cmdoption-llvm-exegesis-num-repetitions", false], [632, "cmdoption-llvm-exegesis-opcode-index", false], [632, "cmdoption-llvm-exegesis-opcode-name", false], [632, "cmdoption-llvm-exegesis-repetition-mode", false], [632, "cmdoption-llvm-exegesis-snippets-file", false], [632, "cmdoption-llvm-exegesis-x86-lbr-sample-period", false]], "option de ligne de commande llvm-install-name-tool": [[634, "cmdoption-llvm-install-name-tool-add_rpath", false], [634, "cmdoption-llvm-install-name-tool-change", false], [634, "cmdoption-llvm-install-name-tool-delete_all_rpaths", false], [634, "cmdoption-llvm-install-name-tool-delete_rpath", false], [634, "cmdoption-llvm-install-name-tool-help", false], [634, "cmdoption-llvm-install-name-tool-id", false], [634, "cmdoption-llvm-install-name-tool-rpath", false], [634, "cmdoption-llvm-install-name-tool-version", false]], "option de ligne de commande llvm-libtool-darwin": [[636, "cmdoption-llvm-libtool-darwin-D", false], [636, "cmdoption-llvm-libtool-darwin-L", false], [636, "cmdoption-llvm-libtool-darwin-U", false], [636, "cmdoption-llvm-libtool-darwin-V", false], [636, "cmdoption-llvm-libtool-darwin-arch_only", false], [636, "cmdoption-llvm-libtool-darwin-color", false], [636, "cmdoption-llvm-libtool-darwin-filelist", false], [636, "cmdoption-llvm-libtool-darwin-h", false], [636, "cmdoption-llvm-libtool-darwin-help-list", false], [636, "cmdoption-llvm-libtool-darwin-l", false], [636, "cmdoption-llvm-libtool-darwin-no_warning_for_no_symbols", false], [636, "cmdoption-llvm-libtool-darwin-o", false], [636, "cmdoption-llvm-libtool-darwin-static", false], [636, "cmdoption-llvm-libtool-darwin-version", false]], "option de ligne de commande llvm-link": [[637, "cmdoption-llvm-link-S", false], [637, "cmdoption-llvm-link-d", false], [637, "cmdoption-llvm-link-f", false], [637, "cmdoption-llvm-link-help", false], [637, "cmdoption-llvm-link-o", false], [637, "cmdoption-llvm-link-v", false]], "option de ligne de commande llvm-lipo": [[638, "cmdoption-llvm-lipo-archs", false], [638, "cmdoption-llvm-lipo-create", false], [638, "cmdoption-llvm-lipo-help", false], [638, "cmdoption-llvm-lipo-info", false], [638, "cmdoption-llvm-lipo-replace", false], [638, "cmdoption-llvm-lipo-segalign", false], [638, "cmdoption-llvm-lipo-thin", false], [638, "cmdoption-llvm-lipo-verify_arch", false], [638, "cmdoption-llvm-lipo-version", false]], "option de ligne de commande llvm-locstats": [[639, "cmdoption-llvm-locstats-compare", false], [639, "cmdoption-llvm-locstats-draw-plot", false], [639, "cmdoption-llvm-locstats-ignore-debug-entry-values", false], [639, "cmdoption-llvm-locstats-only-formal-parameters", false], [639, "cmdoption-llvm-locstats-only-variables", false]], "option de ligne de commande llvm-mca": [[640, "cmdoption-llvm-mca-all-stats", false], [640, "cmdoption-llvm-mca-all-views", false], [640, "cmdoption-llvm-mca-bottleneck-analysis", false], [640, "cmdoption-llvm-mca-disable-cb", false], [640, "cmdoption-llvm-mca-dispatch", false], [640, "cmdoption-llvm-mca-dispatch-stats", false], [640, "cmdoption-llvm-mca-help", false], [640, "cmdoption-llvm-mca-instruction-info", false], [640, "cmdoption-llvm-mca-instruction-tables", false], [640, "cmdoption-llvm-mca-iterations", false], [640, "cmdoption-llvm-mca-json", false], [640, "cmdoption-llvm-mca-lqueue", false], [640, "cmdoption-llvm-mca-march", false], [640, "cmdoption-llvm-mca-mcpu", false], [640, "cmdoption-llvm-mca-mtriple", false], [640, "cmdoption-llvm-mca-noalias", false], [640, "cmdoption-llvm-mca-o", false], [640, "cmdoption-llvm-mca-output-asm-variant", false], [640, "cmdoption-llvm-mca-print-imm-hex", false], [640, "cmdoption-llvm-mca-register-file-size", false], [640, "cmdoption-llvm-mca-register-file-stats", false], [640, "cmdoption-llvm-mca-resource-pressure", false], [640, "cmdoption-llvm-mca-retire-stats", false], [640, "cmdoption-llvm-mca-scheduler-stats", false], [640, "cmdoption-llvm-mca-show-barriers", false], [640, "cmdoption-llvm-mca-show-encoding", false], [640, "cmdoption-llvm-mca-squeue", false], [640, "cmdoption-llvm-mca-timeline", false], [640, "cmdoption-llvm-mca-timeline-max-cycles", false], [640, "cmdoption-llvm-mca-timeline-max-iterations", false]], "option de ligne de commande llvm-nm": [[641, "cmdoption-llvm-nm-B", false], [641, "cmdoption-llvm-nm-add-dyldinfo", false], [641, "cmdoption-llvm-nm-add-inlinedinfo", false], [641, "cmdoption-llvm-nm-arch", false], [641, "cmdoption-llvm-nm-arg-FILE", false], [641, "cmdoption-llvm-nm-debug-syms", false], [641, "cmdoption-llvm-nm-defined-only", false], [641, "cmdoption-llvm-nm-demangle", false], [641, "cmdoption-llvm-nm-dyldinfo-only", false], [641, "cmdoption-llvm-nm-dynamic", false], [641, "cmdoption-llvm-nm-extern-only", false], [641, "cmdoption-llvm-nm-format", false], [641, "cmdoption-llvm-nm-help", false], [641, "cmdoption-llvm-nm-j", false], [641, "cmdoption-llvm-nm-m", false], [641, "cmdoption-llvm-nm-no-demangle", false], [641, "cmdoption-llvm-nm-no-dyldinfo", false], [641, "cmdoption-llvm-nm-no-llvm-bc", false], [641, "cmdoption-llvm-nm-no-sort", false], [641, "cmdoption-llvm-nm-no-weak", false], [641, "cmdoption-llvm-nm-numeric-sort", false], [641, "cmdoption-llvm-nm-portability", false], [641, "cmdoption-llvm-nm-print-armap", false], [641, "cmdoption-llvm-nm-print-file-name", false], [641, "cmdoption-llvm-nm-print-size", false], [641, "cmdoption-llvm-nm-quiet", false], [641, "cmdoption-llvm-nm-radix", false], [641, "cmdoption-llvm-nm-reverse-sort", false], [641, "cmdoption-llvm-nm-s", false], [641, "cmdoption-llvm-nm-size-sort", false], [641, "cmdoption-llvm-nm-special-syms", false], [641, "cmdoption-llvm-nm-undefined-only", false], [641, "cmdoption-llvm-nm-version", false], [641, "cmdoption-llvm-nm-x", false]], "option de ligne de commande llvm-objcopy": [[642, "cmdoption-llvm-objcopy-add-gnu-debuglink", false], [642, "cmdoption-llvm-objcopy-add-section", false], [642, "cmdoption-llvm-objcopy-add-symbol", false], [642, "cmdoption-llvm-objcopy-allow-broken-links", false], [642, "cmdoption-llvm-objcopy-arg-FILE", false], [642, "cmdoption-llvm-objcopy-binary-architecture", false], [642, "cmdoption-llvm-objcopy-change-start", false], [642, "cmdoption-llvm-objcopy-compress-debug-sections", false], [642, "cmdoption-llvm-objcopy-decompress-debug-sections", false], [642, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [642, "cmdoption-llvm-objcopy-discard-all", false], [642, "cmdoption-llvm-objcopy-discard-locals", false], [642, "cmdoption-llvm-objcopy-dump-section", false], [642, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [642, "cmdoption-llvm-objcopy-extract-dwo", false], [642, "cmdoption-llvm-objcopy-extract-main-partition", false], [642, "cmdoption-llvm-objcopy-extract-partition", false], [642, "cmdoption-llvm-objcopy-globalize-symbol", false], [642, "cmdoption-llvm-objcopy-globalize-symbols", false], [642, "cmdoption-llvm-objcopy-help", false], [642, "cmdoption-llvm-objcopy-input-target", false], [642, "cmdoption-llvm-objcopy-keep-file-symbols", false], [642, "cmdoption-llvm-objcopy-keep-global-symbol", false], [642, "cmdoption-llvm-objcopy-keep-global-symbols", false], [642, "cmdoption-llvm-objcopy-keep-section", false], [642, "cmdoption-llvm-objcopy-keep-symbol", false], [642, "cmdoption-llvm-objcopy-keep-symbols", false], [642, "cmdoption-llvm-objcopy-keep-undefined", false], [642, "cmdoption-llvm-objcopy-localize-hidden", false], [642, "cmdoption-llvm-objcopy-localize-symbol", false], [642, "cmdoption-llvm-objcopy-localize-symbols", false], [642, "cmdoption-llvm-objcopy-new-symbol-visibility", false], [642, "cmdoption-llvm-objcopy-only-keep-debug", false], [642, "cmdoption-llvm-objcopy-only-section", false], [642, "cmdoption-llvm-objcopy-output-target", false], [642, "cmdoption-llvm-objcopy-prefix-alloc-sections", false], [642, "cmdoption-llvm-objcopy-prefix-symbols", false], [642, "cmdoption-llvm-objcopy-preserve-dates", false], [642, "cmdoption-llvm-objcopy-redefine-sym", false], [642, "cmdoption-llvm-objcopy-redefine-syms", false], [642, "cmdoption-llvm-objcopy-regex", false], [642, "cmdoption-llvm-objcopy-remove-section", false], [642, "cmdoption-llvm-objcopy-rename-section", false], [642, "cmdoption-llvm-objcopy-set-section-alignment", false], [642, "cmdoption-llvm-objcopy-set-section-flags", false], [642, "cmdoption-llvm-objcopy-set-start-addr", false], [642, "cmdoption-llvm-objcopy-split-dwo", false], [642, "cmdoption-llvm-objcopy-strip-all", false], [642, "cmdoption-llvm-objcopy-strip-all-gnu", false], [642, "cmdoption-llvm-objcopy-strip-debug", false], [642, "cmdoption-llvm-objcopy-strip-dwo", false], [642, "cmdoption-llvm-objcopy-strip-non-alloc", false], [642, "cmdoption-llvm-objcopy-strip-sections", false], [642, "cmdoption-llvm-objcopy-strip-symbol", false], [642, "cmdoption-llvm-objcopy-strip-symbols", false], [642, "cmdoption-llvm-objcopy-strip-unneeded", false], [642, "cmdoption-llvm-objcopy-strip-unneeded-symbol", false], [642, "cmdoption-llvm-objcopy-strip-unneeded-symbols", false], [642, "cmdoption-llvm-objcopy-subsystem", false], [642, "cmdoption-llvm-objcopy-target", false], [642, "cmdoption-llvm-objcopy-version", false], [642, "cmdoption-llvm-objcopy-weaken", false], [642, "cmdoption-llvm-objcopy-weaken-symbol", false], [642, "cmdoption-llvm-objcopy-weaken-symbols", false], [642, "cmdoption-llvm-objcopy-wildcard", false]], "option de ligne de commande llvm-objdump": [[643, "cmdoption-llvm-objdump-C", false], [643, "cmdoption-llvm-objdump-D", false], [643, "cmdoption-llvm-objdump-M", false], [643, "cmdoption-llvm-objdump-R", false], [643, "cmdoption-llvm-objdump-S", false], [643, "cmdoption-llvm-objdump-T", false], [643, "cmdoption-llvm-objdump-a", false], [643, "cmdoption-llvm-objdump-adjust-vma", false], [643, "cmdoption-llvm-objdump-arch", false], [643, "cmdoption-llvm-objdump-arch-name", false], [643, "cmdoption-llvm-objdump-archive-member-offsets", false], [643, "cmdoption-llvm-objdump-arg-FILE", false], [643, "cmdoption-llvm-objdump-arg-att", false], [643, "cmdoption-llvm-objdump-arg-intel", false], [643, "cmdoption-llvm-objdump-bind", false], [643, "cmdoption-llvm-objdump-d", false], [643, "cmdoption-llvm-objdump-data-in-code", false], [643, "cmdoption-llvm-objdump-debug-vars", false], [643, "cmdoption-llvm-objdump-debug-vars-indent", false], [643, "cmdoption-llvm-objdump-dis-symname", false], [643, "cmdoption-llvm-objdump-disassemble-symbols", false], [643, "cmdoption-llvm-objdump-dsym", false], [643, "cmdoption-llvm-objdump-dwarf", false], [643, "cmdoption-llvm-objdump-dylib-id", false], [643, "cmdoption-llvm-objdump-dylibs-used", false], [643, "cmdoption-llvm-objdump-exports-trie", false], [643, "cmdoption-llvm-objdump-f", false], [643, "cmdoption-llvm-objdump-fault-map-section", false], [643, "cmdoption-llvm-objdump-full-leading-addr", false], [643, "cmdoption-llvm-objdump-function-starts", false], [643, "cmdoption-llvm-objdump-g", false], [643, "cmdoption-llvm-objdump-h", false], [643, "cmdoption-llvm-objdump-help", false], [643, "cmdoption-llvm-objdump-indirect-symbols", false], [643, "cmdoption-llvm-objdump-info-plist", false], [643, "cmdoption-llvm-objdump-j", false], [643, "cmdoption-llvm-objdump-l", false], [643, "cmdoption-llvm-objdump-lazy-bind", false], [643, "cmdoption-llvm-objdump-link-opt-hints", false], [643, "cmdoption-llvm-objdump-m", false], [643, "cmdoption-llvm-objdump-mattr", false], [643, "cmdoption-llvm-objdump-mcpu", false], [643, "cmdoption-llvm-objdump-no-leading-addr", false], [643, "cmdoption-llvm-objdump-no-leading-headers", false], [643, "cmdoption-llvm-objdump-no-print-imm-hex", false], [643, "cmdoption-llvm-objdump-no-show-raw-insn", false], [643, "cmdoption-llvm-objdump-no-symbolic-operands", false], [643, "cmdoption-llvm-objdump-non-verbose", false], [643, "cmdoption-llvm-objdump-objc-meta-data", false], [643, "cmdoption-llvm-objdump-p", false], [643, "cmdoption-llvm-objdump-prefix", false], [643, "cmdoption-llvm-objdump-prefix-strip", false], [643, "cmdoption-llvm-objdump-print-imm-hex", false], [643, "cmdoption-llvm-objdump-private-header", false], [643, "cmdoption-llvm-objdump-r", false], [643, "cmdoption-llvm-objdump-raw-clang-ast", false], [643, "cmdoption-llvm-objdump-rebase", false], [643, "cmdoption-llvm-objdump-rpaths", false], [643, "cmdoption-llvm-objdump-s", false], [643, "cmdoption-llvm-objdump-show-lma", false], [643, "cmdoption-llvm-objdump-start-address", false], [643, "cmdoption-llvm-objdump-stop-address", false], [643, "cmdoption-llvm-objdump-symbol-description", false], [643, "cmdoption-llvm-objdump-symbolize-operands", false], [643, "cmdoption-llvm-objdump-t", false], [643, "cmdoption-llvm-objdump-triple", false], [643, "cmdoption-llvm-objdump-u", false], [643, "cmdoption-llvm-objdump-universal-headers", false], [643, "cmdoption-llvm-objdump-v", false], [643, "cmdoption-llvm-objdump-w", false], [643, "cmdoption-llvm-objdump-weak-bind", false], [643, "cmdoption-llvm-objdump-x", false], [643, "cmdoption-llvm-objdump-x86-asm-syntax", false], [643, "cmdoption-llvm-objdump-z", false]], "option de ligne de commande llvm-otool": [[644, "cmdoption-llvm-otool-C", false], [644, "cmdoption-llvm-otool-D", false], [644, "cmdoption-llvm-otool-G", false], [644, "cmdoption-llvm-otool-I", false], [644, "cmdoption-llvm-otool-L", false], [644, "cmdoption-llvm-otool-P", false], [644, "cmdoption-llvm-otool-V", false], [644, "cmdoption-llvm-otool-X", false], [644, "cmdoption-llvm-otool-arch", false], [644, "cmdoption-llvm-otool-arg-FILE", false], [644, "cmdoption-llvm-otool-d", false], [644, "cmdoption-llvm-otool-f", false], [644, "cmdoption-llvm-otool-h", false], [644, "cmdoption-llvm-otool-help", false], [644, "cmdoption-llvm-otool-help-hidden", false], [644, "cmdoption-llvm-otool-j", false], [644, "cmdoption-llvm-otool-l", false], [644, "cmdoption-llvm-otool-mcpu", false], [644, "cmdoption-llvm-otool-o", false], [644, "cmdoption-llvm-otool-p", false], [644, "cmdoption-llvm-otool-r", false], [644, "cmdoption-llvm-otool-s", false], [644, "cmdoption-llvm-otool-t", false], [644, "cmdoption-llvm-otool-v", false], [644, "cmdoption-llvm-otool-version", false], [644, "cmdoption-llvm-otool-x", false]], "option de ligne de commande llvm-pdbutil-bytes": [[645, "cmdoption-llvm-pdbutil-bytes-block-range", false], [645, "cmdoption-llvm-pdbutil-bytes-byte-range", false], [645, "cmdoption-llvm-pdbutil-bytes-chunks", false], [645, "cmdoption-llvm-pdbutil-bytes-ec", false], [645, "cmdoption-llvm-pdbutil-bytes-files", false], [645, "cmdoption-llvm-pdbutil-bytes-fpm", false], [645, "cmdoption-llvm-pdbutil-bytes-id", false], [645, "cmdoption-llvm-pdbutil-bytes-mod", false], [645, "cmdoption-llvm-pdbutil-bytes-modi", false], [645, "cmdoption-llvm-pdbutil-bytes-name-map", false], [645, "cmdoption-llvm-pdbutil-bytes-sc", false], [645, "cmdoption-llvm-pdbutil-bytes-sm", false], [645, "cmdoption-llvm-pdbutil-bytes-split-chunks", false], [645, "cmdoption-llvm-pdbutil-bytes-stream-data", false], [645, "cmdoption-llvm-pdbutil-bytes-syms", false], [645, "cmdoption-llvm-pdbutil-bytes-type", false], [645, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "option de ligne de commande llvm-pdbutil-dump": [[645, "cmdoption-llvm-pdbutil-dump-all", false], [645, "cmdoption-llvm-pdbutil-dump-dependents", false], [645, "cmdoption-llvm-pdbutil-dump-files", false], [645, "cmdoption-llvm-pdbutil-dump-global-extras", false], [645, "cmdoption-llvm-pdbutil-dump-globals", false], [645, "cmdoption-llvm-pdbutil-dump-id-data", false], [645, "cmdoption-llvm-pdbutil-dump-id-extras", false], [645, "cmdoption-llvm-pdbutil-dump-id-index", false], [645, "cmdoption-llvm-pdbutil-dump-ids", false], [645, "cmdoption-llvm-pdbutil-dump-il", false], [645, "cmdoption-llvm-pdbutil-dump-l", false], [645, "cmdoption-llvm-pdbutil-dump-modi", false], [645, "cmdoption-llvm-pdbutil-dump-modules", false], [645, "cmdoption-llvm-pdbutil-dump-public-extras", false], [645, "cmdoption-llvm-pdbutil-dump-publics", false], [645, "cmdoption-llvm-pdbutil-dump-section-contribs", false], [645, "cmdoption-llvm-pdbutil-dump-section-headers", false], [645, "cmdoption-llvm-pdbutil-dump-section-map", false], [645, "cmdoption-llvm-pdbutil-dump-stream-blocks", false], [645, "cmdoption-llvm-pdbutil-dump-streams", false], [645, "cmdoption-llvm-pdbutil-dump-string-table", false], [645, "cmdoption-llvm-pdbutil-dump-summary", false], [645, "cmdoption-llvm-pdbutil-dump-sym-data", false], [645, "cmdoption-llvm-pdbutil-dump-symbols", false], [645, "cmdoption-llvm-pdbutil-dump-type-data", false], [645, "cmdoption-llvm-pdbutil-dump-type-extras", false], [645, "cmdoption-llvm-pdbutil-dump-type-index", false], [645, "cmdoption-llvm-pdbutil-dump-types", false], [645, "cmdoption-llvm-pdbutil-dump-xme", false], [645, "cmdoption-llvm-pdbutil-dump-xmi", false]], "option de ligne de commande llvm-pdbutil-merge": [[645, "cmdoption-llvm-pdbutil-merge-pdb", false]], "option de ligne de commande llvm-pdbutil-pretty": [[645, "cmdoption-llvm-pdbutil-pretty-all", false], [645, "cmdoption-llvm-pdbutil-pretty-class-definitions", false], [645, "cmdoption-llvm-pdbutil-pretty-class-order", false], [645, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false], [645, "cmdoption-llvm-pdbutil-pretty-classes", false], [645, "cmdoption-llvm-pdbutil-pretty-color-output", false], [645, "cmdoption-llvm-pdbutil-pretty-compilands", false], [645, "cmdoption-llvm-pdbutil-pretty-enums", false], [645, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false], [645, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false], [645, "cmdoption-llvm-pdbutil-pretty-exclude-types", false], [645, "cmdoption-llvm-pdbutil-pretty-externals", false], [645, "cmdoption-llvm-pdbutil-pretty-globals", false], [645, "cmdoption-llvm-pdbutil-pretty-include-compilands", false], [645, "cmdoption-llvm-pdbutil-pretty-include-symbols", false], [645, "cmdoption-llvm-pdbutil-pretty-include-types", false], [645, "cmdoption-llvm-pdbutil-pretty-lines", false], [645, "cmdoption-llvm-pdbutil-pretty-load-address", false], [645, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false], [645, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false], [645, "cmdoption-llvm-pdbutil-pretty-min-type-size", false], [645, "cmdoption-llvm-pdbutil-pretty-module-syms", false], [645, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false], [645, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false], [645, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false], [645, "cmdoption-llvm-pdbutil-pretty-sym-types", false], [645, "cmdoption-llvm-pdbutil-pretty-symbol-order", false], [645, "cmdoption-llvm-pdbutil-pretty-typedefs", false], [645, "cmdoption-llvm-pdbutil-pretty-types", false]], "option de ligne de commande llvm-pdbutil-yaml2pdb": [[645, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "option de ligne de commande llvm-profdata-merge": [[646, "cmdoption-llvm-profdata-merge-binary", false], [646, "cmdoption-llvm-profdata-merge-compress-all-sections", false], [646, "cmdoption-llvm-profdata-merge-debug-info", false], [646, "cmdoption-llvm-profdata-merge-extbinary", false], [646, "cmdoption-llvm-profdata-merge-failure-mode", false], [646, "cmdoption-llvm-profdata-merge-gcc", false], [646, "cmdoption-llvm-profdata-merge-gen-partial-profile", false], [646, "cmdoption-llvm-profdata-merge-help", false], [646, "cmdoption-llvm-profdata-merge-input-files", false], [646, "cmdoption-llvm-profdata-merge-instr", false], [646, "cmdoption-llvm-profdata-merge-instr-prof-cold-threshold", false], [646, "cmdoption-llvm-profdata-merge-num-threads", false], [646, "cmdoption-llvm-profdata-merge-output", false], [646, "cmdoption-llvm-profdata-merge-prof-sym-list", false], [646, "cmdoption-llvm-profdata-merge-remapping-file", false], [646, "cmdoption-llvm-profdata-merge-sample", false], [646, "cmdoption-llvm-profdata-merge-sparse", false], [646, "cmdoption-llvm-profdata-merge-suppl-min-size-threshold", false], [646, "cmdoption-llvm-profdata-merge-supplement-instr-with-sample", false], [646, "cmdoption-llvm-profdata-merge-text", false], [646, "cmdoption-llvm-profdata-merge-use-md5", false], [646, "cmdoption-llvm-profdata-merge-weighted-input", false], [646, "cmdoption-llvm-profdata-merge-zero-counter-threshold", false]], "option de ligne de commande llvm-profdata-overlap": [[646, "cmdoption-llvm-profdata-overlap-cs", false], [646, "cmdoption-llvm-profdata-overlap-function", false], [646, "cmdoption-llvm-profdata-overlap-help", false], [646, "cmdoption-llvm-profdata-overlap-output", false], [646, "cmdoption-llvm-profdata-overlap-value-cutoff", false]], "option de ligne de commande llvm-profdata-show": [[646, "cmdoption-llvm-profdata-show-all-functions", false], [646, "cmdoption-llvm-profdata-show-counts", false], [646, "cmdoption-llvm-profdata-show-function", false], [646, "cmdoption-llvm-profdata-show-help", false], [646, "cmdoption-llvm-profdata-show-instr", false], [646, "cmdoption-llvm-profdata-show-list-below-cutoff", false], [646, "cmdoption-llvm-profdata-show-memop-sizes", false], [646, "cmdoption-llvm-profdata-show-output", false], [646, "cmdoption-llvm-profdata-show-sample", false], [646, "cmdoption-llvm-profdata-show-show-prof-sym-list", false], [646, "cmdoption-llvm-profdata-show-show-sec-info-only", false], [646, "cmdoption-llvm-profdata-show-showcs", false], [646, "cmdoption-llvm-profdata-show-text", false], [646, "cmdoption-llvm-profdata-show-topn", false], [646, "cmdoption-llvm-profdata-show-value-cutoff", false]], "option de ligne de commande llvm-profgen": [[647, "cmdoption-llvm-profgen-binary", false], [647, "cmdoption-llvm-profgen-format", false], [647, "cmdoption-llvm-profgen-output", false], [647, "cmdoption-llvm-profgen-perfscript", false], [647, "cmdoption-llvm-profgen-show-disassembly", false], [647, "cmdoption-llvm-profgen-show-mmap-events", false], [647, "cmdoption-llvm-profgen-x86-asm-syntax", false]], "option de ligne de commande llvm-readelf": [[649, "cmdoption-llvm-readelf-addrsig", false], [649, "cmdoption-llvm-readelf-all", false], [649, "cmdoption-llvm-readelf-arch-specific", false], [649, "cmdoption-llvm-readelf-arg-FILE", false], [649, "cmdoption-llvm-readelf-bb-addr-map", false], [649, "cmdoption-llvm-readelf-cg-profile", false], [649, "cmdoption-llvm-readelf-demangle", false], [649, "cmdoption-llvm-readelf-dependent-libraries", false], [649, "cmdoption-llvm-readelf-dyn-relocations", false], [649, "cmdoption-llvm-readelf-dyn-symbols", false], [649, "cmdoption-llvm-readelf-dynamic-table", false], [649, "cmdoption-llvm-readelf-elf-linker-options", false], [649, "cmdoption-llvm-readelf-elf-output-style", false], [649, "cmdoption-llvm-readelf-expand-relocs", false], [649, "cmdoption-llvm-readelf-file-header", false], [649, "cmdoption-llvm-readelf-gnu-hash-table", false], [649, "cmdoption-llvm-readelf-hash-symbols", false], [649, "cmdoption-llvm-readelf-hash-table", false], [649, "cmdoption-llvm-readelf-headers", false], [649, "cmdoption-llvm-readelf-help", false], [649, "cmdoption-llvm-readelf-hex-dump", false], [649, "cmdoption-llvm-readelf-histogram", false], [649, "cmdoption-llvm-readelf-needed-libs", false], [649, "cmdoption-llvm-readelf-no-demangle", false], [649, "cmdoption-llvm-readelf-notes", false], [649, "cmdoption-llvm-readelf-pretty-print", false], [649, "cmdoption-llvm-readelf-program-headers", false], [649, "cmdoption-llvm-readelf-raw-relr", false], [649, "cmdoption-llvm-readelf-relocations", false], [649, "cmdoption-llvm-readelf-section-data", false], [649, "cmdoption-llvm-readelf-section-details", false], [649, "cmdoption-llvm-readelf-section-groups", false], [649, "cmdoption-llvm-readelf-section-mapping", false], [649, "cmdoption-llvm-readelf-section-relocations", false], [649, "cmdoption-llvm-readelf-section-symbols", false], [649, "cmdoption-llvm-readelf-sections", false], [649, "cmdoption-llvm-readelf-stack-sizes", false], [649, "cmdoption-llvm-readelf-stackmap", false], [649, "cmdoption-llvm-readelf-string-dump", false], [649, "cmdoption-llvm-readelf-symbols", false], [649, "cmdoption-llvm-readelf-unwind", false], [649, "cmdoption-llvm-readelf-version", false], [649, "cmdoption-llvm-readelf-version-info", false], [649, "cmdoption-llvm-readelf-wide", false]], "option de ligne de commande llvm-readobj": [[650, "cmdoption-llvm-readobj-addrsig", false], [650, "cmdoption-llvm-readobj-all", false], [650, "cmdoption-llvm-readobj-arch-specific", false], [650, "cmdoption-llvm-readobj-arg-FILE", false], [650, "cmdoption-llvm-readobj-auxiliary-header", false], [650, "cmdoption-llvm-readobj-bb-addr-map", false], [650, "cmdoption-llvm-readobj-cg-profile", false], [650, "cmdoption-llvm-readobj-codeview", false], [650, "cmdoption-llvm-readobj-codeview-ghash", false], [650, "cmdoption-llvm-readobj-codeview-merged-types", false], [650, "cmdoption-llvm-readobj-codeview-subsection-bytes", false], [650, "cmdoption-llvm-readobj-coff-basereloc", false], [650, "cmdoption-llvm-readobj-coff-debug-directory", false], [650, "cmdoption-llvm-readobj-coff-directives", false], [650, "cmdoption-llvm-readobj-coff-exports", false], [650, "cmdoption-llvm-readobj-coff-imports", false], [650, "cmdoption-llvm-readobj-coff-load-config", false], [650, "cmdoption-llvm-readobj-coff-resources", false], [650, "cmdoption-llvm-readobj-coff-tls-directory", false], [650, "cmdoption-llvm-readobj-demangle", false], [650, "cmdoption-llvm-readobj-dependent-libraries", false], [650, "cmdoption-llvm-readobj-dyn-relocations", false], [650, "cmdoption-llvm-readobj-dyn-symbols", false], [650, "cmdoption-llvm-readobj-dynamic-table", false], [650, "cmdoption-llvm-readobj-elf-linker-options", false], [650, "cmdoption-llvm-readobj-elf-output-style", false], [650, "cmdoption-llvm-readobj-expand-relocs", false], [650, "cmdoption-llvm-readobj-file-header", false], [650, "cmdoption-llvm-readobj-gnu-hash-table", false], [650, "cmdoption-llvm-readobj-hash-symbols", false], [650, "cmdoption-llvm-readobj-hash-table", false], [650, "cmdoption-llvm-readobj-headers", false], [650, "cmdoption-llvm-readobj-help", false], [650, "cmdoption-llvm-readobj-hex-dump", false], [650, "cmdoption-llvm-readobj-histogram", false], [650, "cmdoption-llvm-readobj-macho-data-in-code", false], [650, "cmdoption-llvm-readobj-macho-dsymtab", false], [650, "cmdoption-llvm-readobj-macho-indirect-symbols", false], [650, "cmdoption-llvm-readobj-macho-linker-options", false], [650, "cmdoption-llvm-readobj-macho-segment", false], [650, "cmdoption-llvm-readobj-macho-version-min", false], [650, "cmdoption-llvm-readobj-needed-libs", false], [650, "cmdoption-llvm-readobj-notes", false], [650, "cmdoption-llvm-readobj-pretty-print", false], [650, "cmdoption-llvm-readobj-program-headers", false], [650, "cmdoption-llvm-readobj-raw-relr", false], [650, "cmdoption-llvm-readobj-relocations", false], [650, "cmdoption-llvm-readobj-section-data", false], [650, "cmdoption-llvm-readobj-section-groups", false], [650, "cmdoption-llvm-readobj-section-mapping", false], [650, "cmdoption-llvm-readobj-section-relocations", false], [650, "cmdoption-llvm-readobj-section-symbols", false], [650, "cmdoption-llvm-readobj-sections", false], [650, "cmdoption-llvm-readobj-stack-sizes", false], [650, "cmdoption-llvm-readobj-stackmap", false], [650, "cmdoption-llvm-readobj-string-dump", false], [650, "cmdoption-llvm-readobj-string-table", false], [650, "cmdoption-llvm-readobj-symbols", false], [650, "cmdoption-llvm-readobj-unwind", false], [650, "cmdoption-llvm-readobj-version", false], [650, "cmdoption-llvm-readobj-version-info", false]], "option de ligne de commande llvm-size": [[651, "cmdoption-llvm-size-A", false], [651, "cmdoption-llvm-size-B", false], [651, "cmdoption-llvm-size-arch", false], [651, "cmdoption-llvm-size-arg-FILE", false], [651, "cmdoption-llvm-size-common", false], [651, "cmdoption-llvm-size-d", false], [651, "cmdoption-llvm-size-format", false], [651, "cmdoption-llvm-size-help", false], [651, "cmdoption-llvm-size-l", false], [651, "cmdoption-llvm-size-m", false], [651, "cmdoption-llvm-size-o", false], [651, "cmdoption-llvm-size-radix", false], [651, "cmdoption-llvm-size-totals", false], [651, "cmdoption-llvm-size-version", false], [651, "cmdoption-llvm-size-x", false]], "option de ligne de commande llvm-stress": [[652, "cmdoption-llvm-stress-o", false], [652, "cmdoption-llvm-stress-seed", false], [652, "cmdoption-llvm-stress-size", false]], "option de ligne de commande llvm-strings": [[653, "cmdoption-llvm-strings-all", false], [653, "cmdoption-llvm-strings-arg-FILE", false], [653, "cmdoption-llvm-strings-bytes", false], [653, "cmdoption-llvm-strings-help", false], [653, "cmdoption-llvm-strings-print-file-name", false], [653, "cmdoption-llvm-strings-radix", false], [653, "cmdoption-llvm-strings-version", false]], "option de ligne de commande llvm-strip": [[654, "cmdoption-llvm-strip-T", false], [654, "cmdoption-llvm-strip-allow-broken-links", false], [654, "cmdoption-llvm-strip-arg-FILE", false], [654, "cmdoption-llvm-strip-disable-deterministic-archives", false], [654, "cmdoption-llvm-strip-discard-all", false], [654, "cmdoption-llvm-strip-discard-locals", false], [654, "cmdoption-llvm-strip-enable-deterministic-archives", false], [654, "cmdoption-llvm-strip-help", false], [654, "cmdoption-llvm-strip-keep-file-symbols", false], [654, "cmdoption-llvm-strip-keep-section", false], [654, "cmdoption-llvm-strip-keep-symbol", false], [654, "cmdoption-llvm-strip-no-strip-all", false], [654, "cmdoption-llvm-strip-o", false], [654, "cmdoption-llvm-strip-only-keep-debug", false], [654, "cmdoption-llvm-strip-preserve-dates", false], [654, "cmdoption-llvm-strip-regex", false], [654, "cmdoption-llvm-strip-remove-section", false], [654, "cmdoption-llvm-strip-strip-all", false], [654, "cmdoption-llvm-strip-strip-all-gnu", false], [654, "cmdoption-llvm-strip-strip-debug", false], [654, "cmdoption-llvm-strip-strip-sections", false], [654, "cmdoption-llvm-strip-strip-symbol", false], [654, "cmdoption-llvm-strip-strip-unneeded", false], [654, "cmdoption-llvm-strip-version", false], [654, "cmdoption-llvm-strip-wildcard", false]], "option de ligne de commande llvm-symbolizer": [[655, "cmdoption-llvm-symbolizer-adjust-vma", false], [655, "cmdoption-llvm-symbolizer-arg-FILE", false], [655, "cmdoption-llvm-symbolizer-basenames", false], [655, "cmdoption-llvm-symbolizer-default-arch", false], [655, "cmdoption-llvm-symbolizer-demangle", false], [655, "cmdoption-llvm-symbolizer-dia", false], [655, "cmdoption-llvm-symbolizer-dsym-hint", false], [655, "cmdoption-llvm-symbolizer-dwp", false], [655, "cmdoption-llvm-symbolizer-fallback-debug-path", false], [655, "cmdoption-llvm-symbolizer-functions", false], [655, "cmdoption-llvm-symbolizer-help", false], [655, "cmdoption-llvm-symbolizer-inlining", false], [655, "cmdoption-llvm-symbolizer-no-demangle", false], [655, "cmdoption-llvm-symbolizer-no-inlines", false], [655, "cmdoption-llvm-symbolizer-obj", false], [655, "cmdoption-llvm-symbolizer-output-style", false], [655, "cmdoption-llvm-symbolizer-pretty-print", false], [655, "cmdoption-llvm-symbolizer-print-address", false], [655, "cmdoption-llvm-symbolizer-print-source-context-lines", false], [655, "cmdoption-llvm-symbolizer-relativenames", false], [655, "cmdoption-llvm-symbolizer-verbose", false], [655, "cmdoption-llvm-symbolizer-version", false]], "option de ligne de commande llvm-tli-checker": [[657, "cmdoption-llvm-tli-checker-arg-FILE", false], [657, "cmdoption-llvm-tli-checker-dump-tli", false], [657, "cmdoption-llvm-tli-checker-help", false], [657, "cmdoption-llvm-tli-checker-libdir", false], [657, "cmdoption-llvm-tli-checker-report", false], [657, "cmdoption-llvm-tli-checker-separate", false], [657, "cmdoption-llvm-tli-checker-triple", false]], "option de ligne de commande opt": [[659, "cmdoption-opt-S", false], [659, "cmdoption-opt-debug", false], [659, "cmdoption-opt-f", false], [659, "cmdoption-opt-help", false], [659, "cmdoption-opt-load", false], [659, "cmdoption-opt-o", false], [659, "cmdoption-opt-passname", false], [659, "cmdoption-opt-print-passes", false], [659, "cmdoption-opt-stats", false], [659, "cmdoption-opt-strip-debug", false], [659, "cmdoption-opt-time-passes", false], [659, "cmdoption-opt-verify-each", false]], "option de ligne de commande tblgen": [[660, "cmdoption-tblgen-0", false], [660, "cmdoption-tblgen-D", false], [660, "cmdoption-tblgen-I", false], [660, "cmdoption-tblgen-arg-gen-lldb-option-defs", false], [660, "cmdoption-tblgen-arg-gen-lldb-property-defs", false], [660, "cmdoption-tblgen-arg-gen-lldb-property-enum-defs", false], [660, "cmdoption-tblgen-asmformat-error-is-fatal", false], [660, "cmdoption-tblgen-asmparsernum", false], [660, "cmdoption-tblgen-asmwriternum", false], [660, "cmdoption-tblgen-clang-component", false], [660, "cmdoption-tblgen-class", false], [660, "cmdoption-tblgen-combiners", false], [660, "cmdoption-tblgen-d", false], [660, "cmdoption-tblgen-debug", false], [660, "cmdoption-tblgen-dialect", false], [660, "cmdoption-tblgen-dialect-opclass-base", false], [660, "cmdoption-tblgen-dump-json", false], [660, "cmdoption-tblgen-gen-arm-bf16", false], [660, "cmdoption-tblgen-gen-arm-cde-builtin-aliases", false], [660, "cmdoption-tblgen-gen-arm-cde-builtin-codegen", false], [660, "cmdoption-tblgen-gen-arm-cde-builtin-def", false], [660, "cmdoption-tblgen-gen-arm-cde-builtin-sema", false], [660, "cmdoption-tblgen-gen-arm-cde-header", false], [660, "cmdoption-tblgen-gen-arm-fp16", false], [660, "cmdoption-tblgen-gen-arm-mve-builtin-aliases", false], [660, "cmdoption-tblgen-gen-arm-mve-builtin-codegen", false], [660, "cmdoption-tblgen-gen-arm-mve-builtin-def", false], [660, "cmdoption-tblgen-gen-arm-mve-builtin-sema", false], [660, "cmdoption-tblgen-gen-arm-mve-header", false], [660, "cmdoption-tblgen-gen-arm-neon", false], [660, "cmdoption-tblgen-gen-arm-neon-sema", false], [660, "cmdoption-tblgen-gen-arm-neon-test", false], [660, "cmdoption-tblgen-gen-arm-sve-builtin-codegen", false], [660, "cmdoption-tblgen-gen-arm-sve-builtins", false], [660, "cmdoption-tblgen-gen-arm-sve-header", false], [660, "cmdoption-tblgen-gen-arm-sve-sema-rangechecks", false], [660, "cmdoption-tblgen-gen-arm-sve-typeflags", false], [660, "cmdoption-tblgen-gen-asm-matcher", false], [660, "cmdoption-tblgen-gen-asm-parser", false], [660, "cmdoption-tblgen-gen-asm-writer", false], [660, "cmdoption-tblgen-gen-attr-docs", false], [660, "cmdoption-tblgen-gen-attrs", false], [660, "cmdoption-tblgen-gen-automata", false], [660, "cmdoption-tblgen-gen-avail-interface-decls", false], [660, "cmdoption-tblgen-gen-avail-interface-defs", false], [660, "cmdoption-tblgen-gen-callingconv", false], [660, "cmdoption-tblgen-gen-clang-attr-ast-visitor", false], [660, "cmdoption-tblgen-gen-clang-attr-classes", false], [660, "cmdoption-tblgen-gen-clang-attr-has-attribute-impl", false], [660, "cmdoption-tblgen-gen-clang-attr-impl", false], [660, "cmdoption-tblgen-gen-clang-attr-list", false], [660, "cmdoption-tblgen-gen-clang-attr-node-traverse", false], [660, "cmdoption-tblgen-gen-clang-attr-parsed-attr-impl", false], [660, "cmdoption-tblgen-gen-clang-attr-parsed-attr-kinds", false], [660, "cmdoption-tblgen-gen-clang-attr-parsed-attr-list", false], [660, "cmdoption-tblgen-gen-clang-attr-parser-string-switches", false], [660, "cmdoption-tblgen-gen-clang-attr-pch-read", false], [660, "cmdoption-tblgen-gen-clang-attr-pch-write", false], [660, "cmdoption-tblgen-gen-clang-attr-spelling-index", false], [660, "cmdoption-tblgen-gen-clang-attr-subject-match-rule-list", false], [660, "cmdoption-tblgen-gen-clang-attr-subject-match-rules-parser-string-switches", false], [660, "cmdoption-tblgen-gen-clang-attr-template-instantiate", false], [660, "cmdoption-tblgen-gen-clang-attr-text-node-dump", false], [660, "cmdoption-tblgen-gen-clang-basic-reader", false], [660, "cmdoption-tblgen-gen-clang-basic-writer", false], [660, "cmdoption-tblgen-gen-clang-comment-command-info", false], [660, "cmdoption-tblgen-gen-clang-comment-command-list", false], [660, "cmdoption-tblgen-gen-clang-comment-html-named-character-references", false], [660, "cmdoption-tblgen-gen-clang-comment-html-tags", false], [660, "cmdoption-tblgen-gen-clang-comment-html-tags-properties", false], [660, "cmdoption-tblgen-gen-clang-comment-nodes", false], [660, "cmdoption-tblgen-gen-clang-data-collectors", false], [660, "cmdoption-tblgen-gen-clang-decl-nodes", false], [660, "cmdoption-tblgen-gen-clang-diag-groups", false], [660, "cmdoption-tblgen-gen-clang-diags-defs", false], [660, "cmdoption-tblgen-gen-clang-diags-index-name", false], [660, "cmdoption-tblgen-gen-clang-opcodes", false], [660, "cmdoption-tblgen-gen-clang-opencl-builtins", false], [660, "cmdoption-tblgen-gen-clang-sa-checkers", false], [660, "cmdoption-tblgen-gen-clang-stmt-nodes", false], [660, "cmdoption-tblgen-gen-clang-test-pragma-attribute-supported-attributes", false], [660, "cmdoption-tblgen-gen-clang-type-nodes", false], [660, "cmdoption-tblgen-gen-clang-type-reader", false], [660, "cmdoption-tblgen-gen-clang-type-writer", false], [660, "cmdoption-tblgen-gen-compress-inst-emitter", false], [660, "cmdoption-tblgen-gen-ctags", false], [660, "cmdoption-tblgen-gen-dag-isel", false], [660, "cmdoption-tblgen-gen-dfa-packetizer", false], [660, "cmdoption-tblgen-gen-diag-docs", false], [660, "cmdoption-tblgen-gen-dialect-doc", false], [660, "cmdoption-tblgen-gen-directive-decl", false], [660, "cmdoption-tblgen-gen-directive-gen", false], [660, "cmdoption-tblgen-gen-directive-impl", false], [660, "cmdoption-tblgen-gen-disassembler", false], [660, "cmdoption-tblgen-gen-emitter", false], [660, "cmdoption-tblgen-gen-enum-decls", false], [660, "cmdoption-tblgen-gen-enum-defs", false], [660, "cmdoption-tblgen-gen-enum-from-llvmir-conversions", false], [660, "cmdoption-tblgen-gen-enum-to-llvmir-conversions", false], [660, "cmdoption-tblgen-gen-exegesis", false], [660, "cmdoption-tblgen-gen-fast-isel", false], [660, "cmdoption-tblgen-gen-global-isel", false], [660, "cmdoption-tblgen-gen-global-isel-combiner", false], [660, "cmdoption-tblgen-gen-instr-docs", false], [660, "cmdoption-tblgen-gen-instr-info", false], [660, "cmdoption-tblgen-gen-intrinsic-enums", false], [660, "cmdoption-tblgen-gen-intrinsic-impl", false], [660, "cmdoption-tblgen-gen-llvmir-conversions", false], [660, "cmdoption-tblgen-gen-llvmir-intrinsics", false], [660, "cmdoption-tblgen-gen-op-decls", false], [660, "cmdoption-tblgen-gen-op-defs", false], [660, "cmdoption-tblgen-gen-op-doc", false], [660, "cmdoption-tblgen-gen-opt-docs", false], [660, "cmdoption-tblgen-gen-opt-parser-defs", false], [660, "cmdoption-tblgen-gen-opt-rst", false], [660, "cmdoption-tblgen-gen-pass-decls", false], [660, "cmdoption-tblgen-gen-pass-doc", false], [660, "cmdoption-tblgen-gen-pseudo-lowering", false], [660, "cmdoption-tblgen-gen-register-bank", false], [660, "cmdoption-tblgen-gen-register-info", false], [660, "cmdoption-tblgen-gen-rewriters", false], [660, "cmdoption-tblgen-gen-riscv-vector-builtin-codegen", false], [660, "cmdoption-tblgen-gen-riscv-vector-builtins", false], [660, "cmdoption-tblgen-gen-riscv-vector-header", false], [660, "cmdoption-tblgen-gen-searchable-tables", false], [660, "cmdoption-tblgen-gen-spirv-avail-impls", false], [660, "cmdoption-tblgen-gen-spirv-capability-implication", false], [660, "cmdoption-tblgen-gen-spirv-enum-avail-decls", false], [660, "cmdoption-tblgen-gen-spirv-enum-avail-defs", false], [660, "cmdoption-tblgen-gen-spirv-op-utils", false], [660, "cmdoption-tblgen-gen-spirv-serialization", false], [660, "cmdoption-tblgen-gen-struct-attr-decls", false], [660, "cmdoption-tblgen-gen-struct-attr-defs", false], [660, "cmdoption-tblgen-gen-subtarget", false], [660, "cmdoption-tblgen-gen-typedef-decls", false], [660, "cmdoption-tblgen-gen-typedef-defs", false], [660, "cmdoption-tblgen-gen-x86-EVEX2VEX-tables", false], [660, "cmdoption-tblgen-gen-x86-fold-tables", false], [660, "cmdoption-tblgen-gicombiner-show-expansions", false], [660, "cmdoption-tblgen-gicombiner-stop-after-build", false], [660, "cmdoption-tblgen-gicombiner-stop-after-parse", false], [660, "cmdoption-tblgen-gisel-coverage-file", false], [660, "cmdoption-tblgen-help", false], [660, "cmdoption-tblgen-help-list", false], [660, "cmdoption-tblgen-instrument-coverage", false], [660, "cmdoption-tblgen-instrument-gisel-coverage", false], [660, "cmdoption-tblgen-intrinsic-prefix", false], [660, "cmdoption-tblgen-llvmir-intrinsics-filter", false], [660, "cmdoption-tblgen-long-string-literals", false], [660, "cmdoption-tblgen-match-prefix", false], [660, "cmdoption-tblgen-name", false], [660, "cmdoption-tblgen-null-backend", false], [660, "cmdoption-tblgen-o", false], [660, "cmdoption-tblgen-omit-comments", false], [660, "cmdoption-tblgen-op-exclude-regex", false], [660, "cmdoption-tblgen-op-include-regex", false], [660, "cmdoption-tblgen-optimize-match-table", false], [660, "cmdoption-tblgen-print-detailed-records", false], [660, "cmdoption-tblgen-print-enums", false], [660, "cmdoption-tblgen-print-records", false], [660, "cmdoption-tblgen-print-sets", false], [660, "cmdoption-tblgen-register-info-debug", false], [660, "cmdoption-tblgen-stats", false], [660, "cmdoption-tblgen-time-phases", false], [660, "cmdoption-tblgen-typedefs-dialect", false], [660, "cmdoption-tblgen-version", false], [660, "cmdoption-tblgen-warn-on-skipped-patterns", false], [660, "cmdoption-tblgen-write-if-changed", false]], "otherwise": [[622, "cmdoption-llvm-ar-arg-posix", false]], "p": [[622, "cmdoption-llvm-ar-arg-P", false], [622, "cmdoption-llvm-ar-arg-p", false]], "q": [[622, "cmdoption-llvm-ar-arg-q", false]], "r": [[622, "cmdoption-llvm-ar-arg-r", false]], "s": [[622, "cmdoption-llvm-ar-arg-S", false], [622, "cmdoption-llvm-ar-arg-s", false]], "save": [[622, "cmdoption-llvm-ar-arg-SAVE", false]], "t": [[622, "cmdoption-llvm-ar-arg-T", false]], "this": [[622, "cmdoption-llvm-ar-arg-This", false]], "u": [[622, "cmdoption-llvm-ar-arg-U", false], [622, "cmdoption-llvm-ar-arg-u", false]], "v": [[622, "cmdoption-llvm-ar-arg-V", false], [622, "cmdoption-llvm-ar-arg-v", false]], "x": [[622, "cmdoption-llvm-ar-arg-x", false]]}, "objects": {"": [[759, 0, 1, "cmdoption-lto-pass-remarks-filter", "-lto-pass-remarks-filter"], [759, 0, 1, "cmdoption-lto-pass-remarks-format", "-lto-pass-remarks-format"], [759, 0, 1, "cmdoption-lto-pass-remarks-hotness-threshold", "-lto-pass-remarks-hotness-threshold"], [759, 0, 1, "cmdoption-lto-pass-remarks-output", "-lto-pass-remarks-output"], [759, 0, 1, "cmdoption-lto-pass-remarks-with-hotness", "-lto-pass-remarks-with-hotness"], [759, 0, 1, "cmdoption-opt-remarks-filename", "-opt-remarks-filename"], [759, 0, 1, "cmdoption-opt-remarks-filter", "-opt-remarks-filter"], [759, 0, 1, "cmdoption-opt-remarks-format", "-opt-remarks-format"], [759, 0, 1, "cmdoption-opt-remarks-with-hotness", "-opt-remarks-with-hotness"], [759, 0, 1, "cmdoption-pass-remarks", "-pass-remarks"], [759, 0, 1, "cmdoption-pass-remarks-analysis", "-pass-remarks-analysis"], [759, 0, 1, "cmdoption-pass-remarks-filter", "-pass-remarks-filter"], [759, 0, 1, "cmdoption-pass-remarks-format", "-pass-remarks-format"], [759, 0, 1, "cmdoption-pass-remarks-hotness-threshold", "-pass-remarks-hotness-threshold"], [759, 0, 1, "cmdoption-pass-remarks-missed", "-pass-remarks-missed"], [759, 0, 1, "cmdoption-pass-remarks-output", "-pass-remarks-output"], [759, 0, 1, "cmdoption-pass-remarks-with-hotness", "-pass-remarks-with-hotness"]], "FileCheck": [[612, 0, 1, "cmdoption-FileCheck-allow-deprecated-dag-overlap", "--allow-deprecated-dag-overlap"], [612, 0, 1, "cmdoption-FileCheck-allow-empty", "--allow-empty"], [612, 0, 1, "cmdoption-FileCheck-allow-unused-prefixes", "--allow-unused-prefixes"], [612, 0, 1, "cmdoption-FileCheck-check-prefix", "--check-prefix"], [612, 0, 1, "cmdoption-FileCheck-check-prefixes", "--check-prefixes"], [612, 0, 1, "cmdoption-FileCheck-color", "--color"], [612, 0, 1, "cmdoption-FileCheck-comment-prefixes", "--comment-prefixes"], [612, 0, 1, "cmdoption-FileCheck-dump-input", "--dump-input"], [612, 0, 1, "cmdoption-FileCheck-dump-input-context", "--dump-input-context"], [612, 0, 1, "cmdoption-FileCheck-dump-input-filter", "--dump-input-filter"], [612, 0, 1, "cmdoption-FileCheck-enable-var-scope", "--enable-var-scope"], [612, 0, 1, "cmdoption-FileCheck-ignore-case", "--ignore-case"], [612, 0, 1, "cmdoption-FileCheck-implicit-check-not", "--implicit-check-not"], [612, 0, 1, "cmdoption-FileCheck-input-file", "--input-file"], [612, 0, 1, "cmdoption-FileCheck-match-full-lines", "--match-full-lines"], [612, 0, 1, "cmdoption-FileCheck-strict-whitespace", "--strict-whitespace"], [612, 0, 1, "cmdoption-FileCheck-D-FMT-NUMVAR", "-D#&lt;FMT&gt;,&lt;NUMVAR&gt;"], [612, 0, 1, "cmdoption-FileCheck-D-VAR", "-D&lt;VAR"], [612, 0, 1, "cmdoption-FileCheck-help", "-help"], [612, 0, 1, "cmdoption-FileCheck-v", "-v"], [612, 0, 1, "cmdoption-FileCheck-version", "-version"], [612, 0, 1, "cmdoption-FileCheck-vv", "-vv"]], "dsymutil": [[615, 0, 1, "cmdoption-dsymutil-accelerator", "--accelerator"], [615, 0, 1, "cmdoption-dsymutil-arch", "--arch"], [615, 0, 1, "cmdoption-dsymutil-dump-debug-map", "--dump-debug-map"], [615, 0, 1, "cmdoption-dsymutil-flat", "--flat"], [615, 0, 1, "cmdoption-dsymutil-gen-reproducer", "--gen-reproducer"], [615, 0, 1, "cmdoption-dsymutil-help", "--help"], [615, 0, 1, "cmdoption-dsymutil-keep-function-for-static", "--keep-function-for-static"], [615, 0, 1, "cmdoption-dsymutil-minimize", "--minimize"], [615, 0, 1, "cmdoption-dsymutil-no-odr", "--no-odr"], [615, 0, 1, "cmdoption-dsymutil-no-output", "--no-output"], [615, 0, 1, "cmdoption-dsymutil-no-swiftmodule-timestamp", "--no-swiftmodule-timestamp"], [615, 0, 1, "cmdoption-dsymutil-num-threads", "--num-threads"], [615, 0, 1, "cmdoption-dsymutil-object-prefix-map", "--object-prefix-map"], [615, 0, 1, "cmdoption-dsymutil-oso-prepend-path", "--oso-prepend-path"], [615, 0, 1, "cmdoption-dsymutil-out", "--out"], [615, 0, 1, "cmdoption-dsymutil-papertrail", "--papertrail"], [615, 0, 1, "cmdoption-dsymutil-remarks-output-format", "--remarks-output-format"], [615, 0, 1, "cmdoption-dsymutil-remarks-prepend-path", "--remarks-prepend-path"], [615, 0, 1, "cmdoption-dsymutil-statistics", "--statistics"], [615, 0, 1, "cmdoption-dsymutil-symbol-map", "--symbol-map"], [615, 0, 1, "cmdoption-dsymutil-s", "--symtab"], [615, 0, 1, "cmdoption-dsymutil-toolchain", "--toolchain"], [615, 0, 1, "cmdoption-dsymutil-u", "--update"], [615, 0, 1, "cmdoption-dsymutil-use-reproducer", "--use-reproducer"], [615, 0, 1, "cmdoption-dsymutil-verbose", "--verbose"], [615, 0, 1, "cmdoption-dsymutil-verify", "--verify"], [615, 0, 1, "cmdoption-dsymutil-v", "--version"], [615, 0, 1, "cmdoption-dsymutil-S", "-S"], [615, 0, 1, "cmdoption-dsymutil-flat", "-f"], [615, 0, 1, "cmdoption-dsymutil-help", "-h"], [615, 0, 1, "cmdoption-dsymutil-num-threads", "-j"], [615, 0, 1, "cmdoption-dsymutil-out", "-o"], [615, 0, 1, "cmdoption-dsymutil-s", "-s"], [615, 0, 1, "cmdoption-dsymutil-u", "-u"], [615, 0, 1, "cmdoption-dsymutil-v", "-v"], [615, 0, 1, "cmdoption-dsymutil-y", "-y"], [615, 0, 1, "cmdoption-dsymutil-minimize", "-z"]], "lit": [[617, 0, 1, "cmdoption-lit-config-prefix", "--config-prefix"], [617, 0, 1, "cmdoption-lit-debug", "--debug"], [617, 0, 1, "cmdoption-lit-vv", "--echo-all-commands"], [617, 0, 1, "cmdoption-lit-filter", "--filter"], [617, 0, 1, "cmdoption-lit-filter-out", "--filter-out"], [617, 0, 1, "cmdoption-lit-h", "--help"], [617, 0, 1, "cmdoption-lit-ignore-fail", "--ignore-fail"], [617, 0, 1, "cmdoption-lit-max-failures", "--max-failures"], [617, 0, 1, "cmdoption-lit-max-tests", "--max-tests"], [617, 0, 1, "cmdoption-lit-max-time", "--max-time"], [617, 0, 1, "cmdoption-lit-no-indirectly-run-check", "--no-indirectly-run-check"], [617, 0, 1, "cmdoption-lit-no-progress-bar", "--no-progress-bar"], [617, 0, 1, "cmdoption-lit-num-shards", "--num-shards"], [617, 0, 1, "cmdoption-lit-order", "--order"], [617, 0, 1, "cmdoption-lit-D", "--param"], [617, 0, 1, "cmdoption-lit-path", "--path"], [617, 0, 1, "cmdoption-lit-q", "--quiet"], [617, 0, 1, "cmdoption-lit-run-shard", "--run-shard"], [617, 0, 1, "cmdoption-lit-a", "--show-all"], [617, 0, 1, "cmdoption-lit-show-suites", "--show-suites"], [617, 0, 1, "cmdoption-lit-show-tests", "--show-tests"], [617, 0, 1, "cmdoption-lit-show-unsupported", "--show-unsupported"], [617, 0, 1, "cmdoption-lit-show-xfail", "--show-xfail"], [617, 0, 1, "cmdoption-lit-shuffle", "--shuffle"], [617, 0, 1, "cmdoption-lit-s", "--succinct"], [617, 0, 1, "cmdoption-lit-time-tests", "--time-tests"], [617, 0, 1, "cmdoption-lit-timeout", "--timeout"], [617, 0, 1, "cmdoption-lit-v", "--verbose"], [617, 0, 1, "cmdoption-lit-vg", "--vg"], [617, 0, 1, "cmdoption-lit-vg-arg", "--vg-arg"], [617, 0, 1, "cmdoption-lit-vg-leak", "--vg-leak"], [617, 0, 1, "cmdoption-lit-j", "--workers"], [617, 0, 1, "cmdoption-lit-xfail", "--xfail"], [617, 0, 1, "cmdoption-lit-xfail-not", "--xfail-not"], [617, 0, 1, "cmdoption-lit-D", "-D"], [617, 0, 1, "cmdoption-lit-a", "-a"], [617, 0, 1, "cmdoption-lit-h", "-h"], [617, 0, 1, "cmdoption-lit-j", "-j"], [617, 0, 1, "cmdoption-lit-q", "-q"], [617, 0, 1, "cmdoption-lit-s", "-s"], [617, 0, 1, "cmdoption-lit-v", "-v"], [617, 0, 1, "cmdoption-lit-vv", "-vv"]], "llc": [[618, 0, 1, "cmdoption-llc-disable-excess-fp-precision", "--disable-excess-fp-precision"], [618, 0, 1, "cmdoption-llc-enable-no-infs-fp-math", "--enable-no-infs-fp-math"], [618, 0, 1, "cmdoption-llc-enable-no-nans-fp-math", "--enable-no-nans-fp-math"], [618, 0, 1, "cmdoption-llc-enable-no-signed-zeros-fp-math", "--enable-no-signed-zeros-fp-math"], [618, 0, 1, "cmdoption-llc-enable-no-trapping-fp-math", "--enable-no-trapping-fp-math"], [618, 0, 1, "cmdoption-llc-enable-unsafe-fp-math", "--enable-unsafe-fp-math"], [618, 0, 1, "cmdoption-llc-frame-pointer", "--frame-pointer"], [618, 0, 1, "cmdoption-llc-load", "--load"], [618, 0, 1, "cmdoption-llc-print-after-isel", "--print-after-isel"], [618, 0, 1, "cmdoption-llc-regalloc", "--regalloc"], [618, 0, 1, "cmdoption-llc-spiller", "--spiller"], [618, 0, 1, "cmdoption-llc-stats", "--stats"], [618, 0, 1, "cmdoption-llc-time-passes", "--time-passes"], [618, 0, 1, "cmdoption-llc-x86-asm-syntax", "--x86-asm-syntax"], [618, 0, 1, "cmdoption-llc-O", "-O"], [618, 0, 1, "cmdoption-llc-filetype", "-filetype"], [618, 0, 1, "cmdoption-llc-help", "-help"], [618, 0, 1, "cmdoption-llc-march", "-march"], [618, 0, 1, "cmdoption-llc-mattr", "-mattr"], [618, 0, 1, "cmdoption-llc-mcpu", "-mcpu"], [618, 0, 1, "cmdoption-llc-meabi", "-meabi"], [618, 0, 1, "cmdoption-llc-mtriple", "-mtriple"], [618, 0, 1, "cmdoption-llc-o", "-o"], [618, 0, 1, "cmdoption-llc-remarks-section", "-remarks-section"], [618, 0, 1, "cmdoption-llc-stack-size-section", "-stack-size-section"]], "lli": [[620, 0, 1, "cmdoption-lli-code-model", "-code-model"], [620, 0, 1, "cmdoption-lli-disable-excess-fp-precision", "-disable-excess-fp-precision"], [620, 0, 1, "cmdoption-lli-disable-post-RA-scheduler", "-disable-post-RA-scheduler"], [620, 0, 1, "cmdoption-lli-disable-spill-fusing", "-disable-spill-fusing"], [620, 0, 1, "cmdoption-lli-enable-no-infs-fp-math", "-enable-no-infs-fp-math"], [620, 0, 1, "cmdoption-lli-enable-no-nans-fp-math", "-enable-no-nans-fp-math"], [620, 0, 1, "cmdoption-lli-enable-unsafe-fp-math", "-enable-unsafe-fp-math"], [620, 0, 1, "cmdoption-lli-fake-argv0", "-fake-argv0"], [620, 0, 1, "cmdoption-lli-force-interpreter", "-force-interpreter"], [620, 0, 1, "cmdoption-lli-help", "-help"], [620, 0, 1, "cmdoption-lli-jit-enable-eh", "-jit-enable-eh"], [620, 0, 1, "cmdoption-lli-join-liveintervals", "-join-liveintervals"], [620, 0, 1, "cmdoption-lli-load", "-load"], [620, 0, 1, "cmdoption-lli-march", "-march"], [620, 0, 1, "cmdoption-lli-mattr", "-mattr"], [620, 0, 1, "cmdoption-lli-mcpu", "-mcpu"], [620, 0, 1, "cmdoption-lli-mtriple", "-mtriple"], [620, 0, 1, "cmdoption-lli-nozero-initialized-in-bss", "-nozero-initialized-in-bss"], [620, 0, 1, "cmdoption-lli-pre-RA-sched", "-pre-RA-sched"], [620, 0, 1, "cmdoption-lli-regalloc", "-regalloc"], [620, 0, 1, "cmdoption-lli-relocation-model", "-relocation-model"], [620, 0, 1, "cmdoption-lli-soft-float", "-soft-float"], [620, 0, 1, "cmdoption-lli-spiller", "-spiller"], [620, 0, 1, "cmdoption-lli-stats", "-stats"], [620, 0, 1, "cmdoption-lli-time-passes", "-time-passes"], [620, 0, 1, "cmdoption-lli-version", "-version"], [620, 0, 1, "cmdoption-lli-x86-asm-syntax", "-x86-asm-syntax"]], "llvm-ar": [[622, 0, 1, "cmdoption-llvm-ar-format", "--format"], [622, 0, 1, "cmdoption-llvm-ar-h", "--help"], [622, 0, 1, "cmdoption-llvm-ar-rsp-quoting", "--rsp-quoting"], [622, 0, 1, "cmdoption-llvm-ar-thin", "--thin"], [622, 0, 1, "cmdoption-llvm-ar-version", "--version"], [622, 0, 1, "cmdoption-llvm-ar-M", "-M"], [622, 0, 1, "cmdoption-llvm-ar-h", "-h"], [622, 0, 1, "cmdoption-llvm-ar-arg-FILE", "@&lt;FILE&gt;"], [622, 0, 1, "cmdoption-llvm-ar-arg-ADDLIB", "ADDLIB"], [622, 0, 1, "cmdoption-llvm-ar-arg-ADDMOD", "ADDMOD"], [622, 0, 1, "cmdoption-llvm-ar-arg-CREATE", "CREATE"], [622, 0, 1, "cmdoption-llvm-ar-arg-CREATETHIN", "CREATETHIN"], [622, 0, 1, "cmdoption-llvm-ar-arg-D", "D"], [622, 0, 1, "cmdoption-llvm-ar-arg-DELETE", "DELETE"], [622, 0, 1, "cmdoption-llvm-ar-arg-END", "END"], [622, 0, 1, "cmdoption-llvm-ar-arg-L", "L"], [622, 0, 1, "cmdoption-llvm-ar-arg-N", "N"], [622, 0, 1, "cmdoption-llvm-ar-arg-O", "O"], [622, 0, 1, "cmdoption-llvm-ar-arg-P", "P"], [622, 0, 1, "cmdoption-llvm-ar-arg-S", "S"], [622, 0, 1, "cmdoption-llvm-ar-arg-SAVE", "SAVE"], [622, 0, 1, "cmdoption-llvm-ar-arg-T", "T"], [622, 0, 1, "cmdoption-llvm-ar-arg-This", "This"], [622, 0, 1, "cmdoption-llvm-ar-arg-U", "U"], [622, 0, 1, "cmdoption-llvm-ar-arg-V", "V"], [622, 0, 1, "cmdoption-llvm-ar-arg-posix", "``posix``"], [622, 0, 1, "cmdoption-llvm-ar-arg-a", "a"], [622, 0, 1, "cmdoption-llvm-ar-arg-b", "b"], [622, 0, 1, "cmdoption-llvm-ar-arg-c", "c"], [622, 0, 1, "cmdoption-llvm-ar-arg-d", "d"], [622, 0, 1, "cmdoption-llvm-ar-arg-default", "default"], [622, 0, 1, "cmdoption-llvm-ar-arg-This", "either"], [622, 0, 1, "cmdoption-llvm-ar-arg-i", "i"], [622, 0, 1, "cmdoption-llvm-ar-arg-m", "m"], [622, 0, 1, "cmdoption-llvm-ar-arg-o", "o"], [622, 0, 1, "cmdoption-llvm-ar-arg-posix", "otherwise"], [622, 0, 1, "cmdoption-llvm-ar-arg-p", "p"], [622, 0, 1, "cmdoption-llvm-ar-arg-q", "q"], [622, 0, 1, "cmdoption-llvm-ar-arg-r", "r"], [622, 0, 1, "cmdoption-llvm-ar-arg-s", "s"], [622, 0, 1, "cmdoption-llvm-ar-arg-u", "u"], [622, 0, 1, "cmdoption-llvm-ar-arg-v", "v"], [622, 0, 1, "cmdoption-llvm-ar-arg-x", "x"]], "llvm-bcanalyzer": [[624, 0, 1, "cmdoption-llvm-bcanalyzer-dump", "-dump"], [624, 0, 1, "cmdoption-llvm-bcanalyzer-help", "-help"], [624, 0, 1, "cmdoption-llvm-bcanalyzer-nodetails", "-nodetails"], [624, 0, 1, "cmdoption-llvm-bcanalyzer-verify", "-verify"]], "llvm-cov-export": [[626, 0, 1, "cmdoption-llvm-cov-export-arch", "-arch"], [626, 0, 1, "cmdoption-llvm-cov-export-compilation-dir", "-compilation-dir"], [626, 0, 1, "cmdoption-llvm-cov-export-format", "-format"], [626, 0, 1, "cmdoption-llvm-cov-export-ignore-filename-regex", "-ignore-filename-regex"], [626, 0, 1, "cmdoption-llvm-cov-export-num-threads", "-j"], [626, 0, 1, "cmdoption-llvm-cov-export-num-threads", "-num-threads"], [626, 0, 1, "cmdoption-llvm-cov-export-skip-expansions", "-skip-expansions"], [626, 0, 1, "cmdoption-llvm-cov-export-skip-functions", "-skip-functions"], [626, 0, 1, "cmdoption-llvm-cov-export-summary-only", "-summary-only"]], "llvm-cov-gcov": [[626, 0, 1, "cmdoption-llvm-cov-gcov-a", "--all-blocks"], [626, 0, 1, "cmdoption-llvm-cov-gcov-c", "--branch-counts"], [626, 0, 1, "cmdoption-llvm-cov-gcov-b", "--branch-probabilities"], [626, 0, 1, "cmdoption-llvm-cov-gcov-m", "--demangled-names"], [626, 0, 1, "cmdoption-llvm-cov-gcov-f", "--function-summaries"], [626, 0, 1, "cmdoption-llvm-cov-gcov-x", "--hash-filenames"], [626, 0, 1, "cmdoption-llvm-cov-gcov-help", "--help"], [626, 0, 1, "cmdoption-llvm-cov-gcov-l", "--long-file-names"], [626, 0, 1, "cmdoption-llvm-cov-gcov-n", "--no-output"], [626, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-directory"], [626, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-file"], [626, 0, 1, "cmdoption-llvm-cov-gcov-p", "--preserve-paths"], [626, 0, 1, "cmdoption-llvm-cov-gcov-t", "--stdout"], [626, 0, 1, "cmdoption-llvm-cov-gcov-u", "--unconditional-branches"], [626, 0, 1, "cmdoption-llvm-cov-gcov-a", "-a"], [626, 0, 1, "cmdoption-llvm-cov-gcov-b", "-b"], [626, 0, 1, "cmdoption-llvm-cov-gcov-c", "-c"], [626, 0, 1, "cmdoption-llvm-cov-gcov-f", "-f"], [626, 0, 1, "cmdoption-llvm-cov-gcov-l", "-l"], [626, 0, 1, "cmdoption-llvm-cov-gcov-m", "-m"], [626, 0, 1, "cmdoption-llvm-cov-gcov-n", "-n"], [626, 0, 1, "cmdoption-llvm-cov-gcov-o", "-o"], [626, 0, 1, "cmdoption-llvm-cov-gcov-p", "-p"], [626, 0, 1, "cmdoption-llvm-cov-gcov-r", "-r"], [626, 0, 1, "cmdoption-llvm-cov-gcov-s", "-s"], [626, 0, 1, "cmdoption-llvm-cov-gcov-t", "-t"], [626, 0, 1, "cmdoption-llvm-cov-gcov-u", "-u"], [626, 0, 1, "cmdoption-llvm-cov-gcov-version", "-version"], [626, 0, 1, "cmdoption-llvm-cov-gcov-x", "-x"]], "llvm-cov-report": [[626, 0, 1, "cmdoption-llvm-cov-report-arch", "-arch"], [626, 0, 1, "cmdoption-llvm-cov-report-compilation-dir", "-compilation-dir"], [626, 0, 1, "cmdoption-llvm-cov-report-ignore-filename-regex", "-ignore-filename-regex"], [626, 0, 1, "cmdoption-llvm-cov-report-show-branch-summary", "-show-branch-summary"], [626, 0, 1, "cmdoption-llvm-cov-report-show-functions", "-show-functions"], [626, 0, 1, "cmdoption-llvm-cov-report-show-instantiation-summary", "-show-instantiation-summary"], [626, 0, 1, "cmdoption-llvm-cov-report-show-region-summary", "-show-region-summary"], [626, 0, 1, "cmdoption-llvm-cov-report-use-color", "-use-color"]], "llvm-cov-show": [[626, 0, 1, "cmdoption-llvm-cov-show-Xdemangler", "-Xdemangler"], [626, 0, 1, "cmdoption-llvm-cov-show-arch", "-arch"], [626, 0, 1, "cmdoption-llvm-cov-show-compilation-dir", "-compilation-dir"], [626, 0, 1, "cmdoption-llvm-cov-show-format", "-format"], [626, 0, 1, "cmdoption-llvm-cov-show-ignore-filename-regex", "-ignore-filename-regex"], [626, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-j"], [626, 0, 1, "cmdoption-llvm-cov-show-line-coverage-gt", "-line-coverage-gt"], [626, 0, 1, "cmdoption-llvm-cov-show-line-coverage-lt", "-line-coverage-lt"], [626, 0, 1, "cmdoption-llvm-cov-show-name", "-name"], [626, 0, 1, "cmdoption-llvm-cov-show-name-allowlist", "-name-allowlist"], [626, 0, 1, "cmdoption-llvm-cov-show-name-regex", "-name-regex"], [626, 0, 1, "cmdoption-llvm-cov-show-name-whitelist", "-name-whitelist"], [626, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-num-threads"], [626, 0, 1, "cmdoption-llvm-cov-show-output-dir", "-output-dir"], [626, 0, 1, "cmdoption-llvm-cov-show-path-equivalence", "-path-equivalence"], [626, 0, 1, "cmdoption-llvm-cov-show-region-coverage-gt", "-region-coverage-gt"], [626, 0, 1, "cmdoption-llvm-cov-show-region-coverage-lt", "-region-coverage-lt"], [626, 0, 1, "cmdoption-llvm-cov-show-show-branches", "-show-branches"], [626, 0, 1, "cmdoption-llvm-cov-show-show-expansions", "-show-expansions"], [626, 0, 1, "cmdoption-llvm-cov-show-show-instantiations", "-show-instantiations"], [626, 0, 1, "cmdoption-llvm-cov-show-show-line-counts", "-show-line-counts"], [626, 0, 1, "cmdoption-llvm-cov-show-show-line-counts-or-regions", "-show-line-counts-or-regions"], [626, 0, 1, "cmdoption-llvm-cov-show-show-regions", "-show-regions"], [626, 0, 1, "cmdoption-llvm-cov-show-tab-size", "-tab-size"], [626, 0, 1, "cmdoption-llvm-cov-show-use-color", "-use-color"]], "llvm-cxxfilt": [[627, 0, 1, "cmdoption-llvm-cxxfilt-format", "--format"], [627, 0, 1, "cmdoption-llvm-cxxfilt-help", "--help"], [627, 0, 1, "cmdoption-llvm-cxxfilt-no-strip-underscore", "--no-strip-underscore"], [627, 0, 1, "cmdoption-llvm-cxxfilt-strip-underscore", "--strip-underscore"], [627, 0, 1, "cmdoption-llvm-cxxfilt-types", "--types"], [627, 0, 1, "cmdoption-llvm-cxxfilt-version", "--version"], [627, 0, 1, "cmdoption-llvm-cxxfilt-strip-underscore", "-_"], [627, 0, 1, "cmdoption-llvm-cxxfilt-help", "-h"], [627, 0, 1, "cmdoption-llvm-cxxfilt-no-strip-underscore", "-n"], [627, 0, 1, "cmdoption-llvm-cxxfilt-format", "-s"], [627, 0, 1, "cmdoption-llvm-cxxfilt-types", "-t"], [627, 0, 1, "cmdoption-llvm-cxxfilt-arg-FILE", "@&lt;FILE&gt;"]], "llvm-cxxmap": [[628, 0, 1, "cmdoption-llvm-cxxmap-Wambiguous", "-Wambiguous"], [628, 0, 1, "cmdoption-llvm-cxxmap-Wincomplete", "-Wincomplete"], [628, 0, 1, "cmdoption-llvm-cxxmap-output", "-o"], [628, 0, 1, "cmdoption-llvm-cxxmap-output", "-output"], [628, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-r"], [628, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-remapping-file"]], "llvm-dwarfdump": [[631, 0, 1, "cmdoption-llvm-dwarfdump-a", "--all"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-names"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-namespaces"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-objc"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-types"], [631, 0, 1, "cmdoption-llvm-dwarfdump-arch", "--arch"], [631, 0, 1, "cmdoption-llvm-dwarfdump-color", "--color"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-abbrev"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-addr"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-aranges"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-cu-index"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-frame"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-gnu-pubnames"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-gnu-pubtypes"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-info"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-line"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-line-str"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-loc"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-loclists"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-macro"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-names"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-pubnames"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-pubtypes"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-ranges"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-rnglists"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-str"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-str-offsets"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-tu-index"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-types"], [631, 0, 1, "cmdoption-llvm-dwarfdump-diff", "--diff"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--eh-frame"], [631, 0, 1, "cmdoption-llvm-dwarfdump-f", "--find"], [631, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--gdb-index"], [631, 0, 1, "cmdoption-llvm-dwarfdump-h", "--help"], [631, 0, 1, "cmdoption-llvm-dwarfdump-help-list", "--help-list"], [631, 0, 1, "cmdoption-llvm-dwarfdump-i", "--ignore-case"], [631, 0, 1, "cmdoption-llvm-dwarfdump-lookup", "--lookup"], [631, 0, 1, "cmdoption-llvm-dwarfdump-n", "--name"], [631, 0, 1, "cmdoption-llvm-dwarfdump-parent-recurse-depth", "--parent-recurse-depth"], [631, 0, 1, "cmdoption-llvm-dwarfdump-quiet", "--quiet"], [631, 0, 1, "cmdoption-llvm-dwarfdump-r", "--recurse-depth"], [631, 0, 1, "cmdoption-llvm-dwarfdump-x", "--regex"], [631, 0, 1, "cmdoption-llvm-dwarfdump-c", "--show-children"], [631, 0, 1, "cmdoption-llvm-dwarfdump-F", "--show-form"], [631, 0, 1, "cmdoption-llvm-dwarfdump-p", "--show-parents"], [631, 0, 1, "cmdoption-llvm-dwarfdump-show-section-sizes", "--show-section-sizes"], [631, 0, 1, "cmdoption-llvm-dwarfdump-statistics", "--statistics"], [631, 0, 1, "cmdoption-llvm-dwarfdump-summarize-types", "--summarize-types"], [631, 0, 1, "cmdoption-llvm-dwarfdump-u", "--uuid"], [631, 0, 1, "cmdoption-llvm-dwarfdump-v", "--verbose"], [631, 0, 1, "cmdoption-llvm-dwarfdump-verify", "--verify"], [631, 0, 1, "cmdoption-llvm-dwarfdump-version", "--version"], [631, 0, 1, "cmdoption-llvm-dwarfdump-F", "-F"], [631, 0, 1, "cmdoption-llvm-dwarfdump-a", "-a"], [631, 0, 1, "cmdoption-llvm-dwarfdump-c", "-c"], [631, 0, 1, "cmdoption-llvm-dwarfdump-f", "-f"], [631, 0, 1, "cmdoption-llvm-dwarfdump-h", "-h"], [631, 0, 1, "cmdoption-llvm-dwarfdump-i", "-i"], [631, 0, 1, "cmdoption-llvm-dwarfdump-n", "-n"], [631, 0, 1, "cmdoption-llvm-dwarfdump-o", "-o"], [631, 0, 1, "cmdoption-llvm-dwarfdump-p", "-p"], [631, 0, 1, "cmdoption-llvm-dwarfdump-r", "-r"], [631, 0, 1, "cmdoption-llvm-dwarfdump-u", "-u"], [631, 0, 1, "cmdoption-llvm-dwarfdump-v", "-v"], [631, 0, 1, "cmdoption-llvm-dwarfdump-x", "-x"], [631, 0, 1, "cmdoption-llvm-dwarfdump-arg-FILE", "@&lt;FILE&gt;"]], "llvm-exegesis": [[632, 0, 1, "cmdoption-llvm-exegesis-dump-object-to-disk", "--dump-object-to-disk"], [632, 0, 1, "cmdoption-llvm-exegesis-analysis-clustering", "-analysis-clustering"], [632, 0, 1, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", "-analysis-clustering-epsilon"], [632, 0, 1, "cmdoption-llvm-exegesis-analysis-clusters-output-file", "-analysis-clusters-output-file"], [632, 0, 1, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", "-analysis-display-unstable-clusters"], [632, 0, 1, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", "-analysis-inconsistencies-output-file"], [632, 0, 1, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", "-analysis-inconsistency-epsilon"], [632, 0, 1, "cmdoption-llvm-exegesis-analysis-numpoints", "-analysis-numpoints"], [632, 0, 1, "cmdoption-llvm-exegesis-benchmarks-file", "-benchmarks-file"], [632, 0, 1, "cmdoption-llvm-exegesis-help", "-help"], [632, 0, 1, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", "-ignore-invalid-sched-class"], [632, 0, 1, "cmdoption-llvm-exegesis-loop-body-size", "-loop-body-size"], [632, 0, 1, "cmdoption-llvm-exegesis-max-configs-per-opcode", "-max-configs-per-opcode"], [632, 0, 1, "cmdoption-llvm-exegesis-mcpu", "-mcpu"], [632, 0, 1, "cmdoption-llvm-exegesis-mode", "-mode"], [632, 0, 1, "cmdoption-llvm-exegesis-num-repetitions", "-num-repetitions"], [632, 0, 1, "cmdoption-llvm-exegesis-opcode-index", "-opcode-index"], [632, 0, 1, "cmdoption-llvm-exegesis-opcode-name", "-opcode-name"], [632, 0, 1, "cmdoption-llvm-exegesis-repetition-mode", "-repetition-mode"], [632, 0, 1, "cmdoption-llvm-exegesis-snippets-file", "-snippets-file"], [632, 0, 1, "cmdoption-llvm-exegesis-x86-lbr-sample-period", "-x86-lbr-sample-period"]], "llvm-install-name-tool": [[634, 0, 1, "cmdoption-llvm-install-name-tool-help", "--help"], [634, 0, 1, "cmdoption-llvm-install-name-tool-version", "--version"], [634, 0, 1, "cmdoption-llvm-install-name-tool-version", "-V"], [634, 0, 1, "cmdoption-llvm-install-name-tool-add_rpath", "-add_rpath"], [634, 0, 1, "cmdoption-llvm-install-name-tool-change", "-change"], [634, 0, 1, "cmdoption-llvm-install-name-tool-delete_all_rpaths", "-delete_all_rpaths"], [634, 0, 1, "cmdoption-llvm-install-name-tool-delete_rpath", "-delete_rpath"], [634, 0, 1, "cmdoption-llvm-install-name-tool-help", "-h"], [634, 0, 1, "cmdoption-llvm-install-name-tool-id", "-id"], [634, 0, 1, "cmdoption-llvm-install-name-tool-rpath", "-rpath"]], "llvm-libtool-darwin": [[636, 0, 1, "cmdoption-llvm-libtool-darwin-D", "-D"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-L", "-L"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-U", "-U"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-V", "-V"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-arch_only", "-arch_only"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-color", "-color"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-filelist", "-filelist"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-h", "-h"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-h", "-help"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-help-list", "-help-list"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-l", "-l"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-no_warning_for_no_symbols", "-no_warning_for_no_symbols"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-o", "-o"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-static", "-static"], [636, 0, 1, "cmdoption-llvm-libtool-darwin-version", "-version"]], "llvm-link": [[637, 0, 1, "cmdoption-llvm-link-S", "-S"], [637, 0, 1, "cmdoption-llvm-link-d", "-d"], [637, 0, 1, "cmdoption-llvm-link-f", "-f"], [637, 0, 1, "cmdoption-llvm-link-help", "-help"], [637, 0, 1, "cmdoption-llvm-link-o", "-o"], [637, 0, 1, "cmdoption-llvm-link-v", "-v"]], "llvm-lipo": [[638, 0, 1, "cmdoption-llvm-lipo-archs", "-archs"], [638, 0, 1, "cmdoption-llvm-lipo-create", "-create"], [638, 0, 1, "cmdoption-llvm-lipo-help", "-h"], [638, 0, 1, "cmdoption-llvm-lipo-help", "-help"], [638, 0, 1, "cmdoption-llvm-lipo-info", "-info"], [638, 0, 1, "cmdoption-llvm-lipo-replace", "-replace"], [638, 0, 1, "cmdoption-llvm-lipo-segalign", "-segalign"], [638, 0, 1, "cmdoption-llvm-lipo-thin", "-thin"], [638, 0, 1, "cmdoption-llvm-lipo-verify_arch", "-verify_arch"], [638, 0, 1, "cmdoption-llvm-lipo-version", "-version"]], "llvm-locstats": [[639, 0, 1, "cmdoption-llvm-locstats-compare", "--compare"], [639, 0, 1, "cmdoption-llvm-locstats-draw-plot", "--draw-plot"], [639, 0, 1, "cmdoption-llvm-locstats-ignore-debug-entry-values", "--ignore-debug-entry-values"], [639, 0, 1, "cmdoption-llvm-locstats-only-formal-parameters", "--only-formal-parameters"], [639, 0, 1, "cmdoption-llvm-locstats-only-variables", "--only-variables"]], "llvm-mca": [[640, 0, 1, "cmdoption-llvm-mca-all-stats", "-all-stats"], [640, 0, 1, "cmdoption-llvm-mca-all-views", "-all-views"], [640, 0, 1, "cmdoption-llvm-mca-bottleneck-analysis", "-bottleneck-analysis"], [640, 0, 1, "cmdoption-llvm-mca-disable-cb", "-disable-cb"], [640, 0, 1, "cmdoption-llvm-mca-dispatch", "-dispatch"], [640, 0, 1, "cmdoption-llvm-mca-dispatch-stats", "-dispatch-stats"], [640, 0, 1, "cmdoption-llvm-mca-help", "-help"], [640, 0, 1, "cmdoption-llvm-mca-instruction-info", "-instruction-info"], [640, 0, 1, "cmdoption-llvm-mca-instruction-tables", "-instruction-tables"], [640, 0, 1, "cmdoption-llvm-mca-iterations", "-iterations"], [640, 0, 1, "cmdoption-llvm-mca-json", "-json"], [640, 0, 1, "cmdoption-llvm-mca-lqueue", "-lqueue"], [640, 0, 1, "cmdoption-llvm-mca-march", "-march"], [640, 0, 1, "cmdoption-llvm-mca-mcpu", "-mcpu"], [640, 0, 1, "cmdoption-llvm-mca-mtriple", "-mtriple"], [640, 0, 1, "cmdoption-llvm-mca-noalias", "-noalias"], [640, 0, 1, "cmdoption-llvm-mca-o", "-o"], [640, 0, 1, "cmdoption-llvm-mca-output-asm-variant", "-output-asm-variant"], [640, 0, 1, "cmdoption-llvm-mca-print-imm-hex", "-print-imm-hex"], [640, 0, 1, "cmdoption-llvm-mca-register-file-size", "-register-file-size"], [640, 0, 1, "cmdoption-llvm-mca-register-file-stats", "-register-file-stats"], [640, 0, 1, "cmdoption-llvm-mca-resource-pressure", "-resource-pressure"], [640, 0, 1, "cmdoption-llvm-mca-retire-stats", "-retire-stats"], [640, 0, 1, "cmdoption-llvm-mca-scheduler-stats", "-scheduler-stats"], [640, 0, 1, "cmdoption-llvm-mca-show-barriers", "-show-barriers"], [640, 0, 1, "cmdoption-llvm-mca-show-encoding", "-show-encoding"], [640, 0, 1, "cmdoption-llvm-mca-squeue", "-squeue"], [640, 0, 1, "cmdoption-llvm-mca-timeline", "-timeline"], [640, 0, 1, "cmdoption-llvm-mca-timeline-max-cycles", "-timeline-max-cycles"], [640, 0, 1, "cmdoption-llvm-mca-timeline-max-iterations", "-timeline-max-iterations"]], "llvm-nm": [[641, 0, 1, "cmdoption-llvm-nm-add-dyldinfo", "--add-dyldinfo"], [641, 0, 1, "cmdoption-llvm-nm-add-inlinedinfo", "--add-inlinedinfo"], [641, 0, 1, "cmdoption-llvm-nm-arch", "--arch"], [641, 0, 1, "cmdoption-llvm-nm-debug-syms", "--debug-syms"], [641, 0, 1, "cmdoption-llvm-nm-defined-only", "--defined-only"], [641, 0, 1, "cmdoption-llvm-nm-demangle", "--demangle"], [641, 0, 1, "cmdoption-llvm-nm-dyldinfo-only", "--dyldinfo-only"], [641, 0, 1, "cmdoption-llvm-nm-dynamic", "--dynamic"], [641, 0, 1, "cmdoption-llvm-nm-extern-only", "--extern-only"], [641, 0, 1, "cmdoption-llvm-nm-format", "--format"], [641, 0, 1, "cmdoption-llvm-nm-help", "--help"], [641, 0, 1, "cmdoption-llvm-nm-no-demangle", "--no-demangle"], [641, 0, 1, "cmdoption-llvm-nm-no-dyldinfo", "--no-dyldinfo"], [641, 0, 1, "cmdoption-llvm-nm-no-llvm-bc", "--no-llvm-bc"], [641, 0, 1, "cmdoption-llvm-nm-no-sort", "--no-sort"], [641, 0, 1, "cmdoption-llvm-nm-no-weak", "--no-weak"], [641, 0, 1, "cmdoption-llvm-nm-numeric-sort", "--numeric-sort"], [641, 0, 1, "cmdoption-llvm-nm-portability", "--portability"], [641, 0, 1, "cmdoption-llvm-nm-print-armap", "--print-armap"], [641, 0, 1, "cmdoption-llvm-nm-print-file-name", "--print-file-name"], [641, 0, 1, "cmdoption-llvm-nm-print-size", "--print-size"], [641, 0, 1, "cmdoption-llvm-nm-quiet", "--quiet"], [641, 0, 1, "cmdoption-llvm-nm-radix", "--radix"], [641, 0, 1, "cmdoption-llvm-nm-reverse-sort", "--reverse-sort"], [641, 0, 1, "cmdoption-llvm-nm-size-sort", "--size-sort"], [641, 0, 1, "cmdoption-llvm-nm-special-syms", "--special-syms"], [641, 0, 1, "cmdoption-llvm-nm-undefined-only", "--undefined-only"], [641, 0, 1, "cmdoption-llvm-nm-version", "--version"], [641, 0, 1, "cmdoption-llvm-nm-print-file-name", "-A"], [641, 0, 1, "cmdoption-llvm-nm-B", "-B"], [641, 0, 1, "cmdoption-llvm-nm-demangle", "-C"], [641, 0, 1, "cmdoption-llvm-nm-dynamic", "-D"], [641, 0, 1, "cmdoption-llvm-nm-portability", "-P"], [641, 0, 1, "cmdoption-llvm-nm-print-size", "-S"], [641, 0, 1, "cmdoption-llvm-nm-version", "-V"], [641, 0, 1, "cmdoption-llvm-nm-debug-syms", "-a"], [641, 0, 1, "cmdoption-llvm-nm-format", "-f"], [641, 0, 1, "cmdoption-llvm-nm-extern-only", "-g"], [641, 0, 1, "cmdoption-llvm-nm-help", "-h"], [641, 0, 1, "cmdoption-llvm-nm-j", "-j"], [641, 0, 1, "cmdoption-llvm-nm-m", "-m"], [641, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-n"], [641, 0, 1, "cmdoption-llvm-nm-print-file-name", "-o"], [641, 0, 1, "cmdoption-llvm-nm-no-sort", "-p"], [641, 0, 1, "cmdoption-llvm-nm-reverse-sort", "-r"], [641, 0, 1, "cmdoption-llvm-nm-s", "-s"], [641, 0, 1, "cmdoption-llvm-nm-radix", "-t"], [641, 0, 1, "cmdoption-llvm-nm-undefined-only", "-u"], [641, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-v"], [641, 0, 1, "cmdoption-llvm-nm-x", "-x"], [641, 0, 1, "cmdoption-llvm-nm-arg-FILE", "@&lt;FILE&gt;"]], "llvm-objcopy": [[642, 0, 1, "cmdoption-llvm-objcopy-add-gnu-debuglink", "--add-gnu-debuglink"], [642, 0, 1, "cmdoption-llvm-objcopy-add-section", "--add-section"], [642, 0, 1, "cmdoption-llvm-objcopy-add-symbol", "--add-symbol"], [642, 0, 1, "cmdoption-llvm-objcopy-change-start", "--adjust-start"], [642, 0, 1, "cmdoption-llvm-objcopy-allow-broken-links", "--allow-broken-links"], [642, 0, 1, "cmdoption-llvm-objcopy-binary-architecture", "--binary-architecture"], [642, 0, 1, "cmdoption-llvm-objcopy-change-start", "--change-start"], [642, 0, 1, "cmdoption-llvm-objcopy-compress-debug-sections", "--compress-debug-sections"], [642, 0, 1, "cmdoption-llvm-objcopy-decompress-debug-sections", "--decompress-debug-sections"], [642, 0, 1, "cmdoption-llvm-objcopy-disable-deterministic-archives", "--disable-deterministic-archives"], [642, 0, 1, "cmdoption-llvm-objcopy-discard-all", "--discard-all"], [642, 0, 1, "cmdoption-llvm-objcopy-discard-locals", "--discard-locals"], [642, 0, 1, "cmdoption-llvm-objcopy-dump-section", "--dump-section"], [642, 0, 1, "cmdoption-llvm-objcopy-enable-deterministic-archives", "--enable-deterministic-archives"], [642, 0, 1, "cmdoption-llvm-objcopy-extract-dwo", "--extract-dwo"], [642, 0, 1, "cmdoption-llvm-objcopy-extract-main-partition", "--extract-main-partition"], [642, 0, 1, "cmdoption-llvm-objcopy-extract-partition", "--extract-partition"], [642, 0, 1, "cmdoption-llvm-objcopy-globalize-symbol", "--globalize-symbol"], [642, 0, 1, "cmdoption-llvm-objcopy-globalize-symbols", "--globalize-symbols"], [642, 0, 1, "cmdoption-llvm-objcopy-help", "--help"], [642, 0, 1, "cmdoption-llvm-objcopy-input-target", "--input-target"], [642, 0, 1, "cmdoption-llvm-objcopy-keep-file-symbols", "--keep-file-symbols"], [642, 0, 1, "cmdoption-llvm-objcopy-keep-global-symbol", "--keep-global-symbol"], [642, 0, 1, "cmdoption-llvm-objcopy-keep-global-symbols", "--keep-global-symbols"], [642, 0, 1, "cmdoption-llvm-objcopy-keep-section", "--keep-section"], [642, 0, 1, "cmdoption-llvm-objcopy-keep-symbol", "--keep-symbol"], [642, 0, 1, "cmdoption-llvm-objcopy-keep-symbols", "--keep-symbols"], [642, 0, 1, "cmdoption-llvm-objcopy-keep-undefined", "--keep-undefined"], [642, 0, 1, "cmdoption-llvm-objcopy-localize-hidden", "--localize-hidden"], [642, 0, 1, "cmdoption-llvm-objcopy-localize-symbol", "--localize-symbol"], [642, 0, 1, "cmdoption-llvm-objcopy-localize-symbols", "--localize-symbols"], [642, 0, 1, "cmdoption-llvm-objcopy-new-symbol-visibility", "--new-symbol-visibility"], [642, 0, 1, "cmdoption-llvm-objcopy-only-keep-debug", "--only-keep-debug"], [642, 0, 1, "cmdoption-llvm-objcopy-only-section", "--only-section"], [642, 0, 1, "cmdoption-llvm-objcopy-output-target", "--output-target"], [642, 0, 1, "cmdoption-llvm-objcopy-prefix-alloc-sections", "--prefix-alloc-sections"], [642, 0, 1, "cmdoption-llvm-objcopy-prefix-symbols", "--prefix-symbols"], [642, 0, 1, "cmdoption-llvm-objcopy-preserve-dates", "--preserve-dates"], [642, 0, 1, "cmdoption-llvm-objcopy-redefine-sym", "--redefine-sym"], [642, 0, 1, "cmdoption-llvm-objcopy-redefine-syms", "--redefine-syms"], [642, 0, 1, "cmdoption-llvm-objcopy-regex", "--regex"], [642, 0, 1, "cmdoption-llvm-objcopy-remove-section", "--remove-section"], [642, 0, 1, "cmdoption-llvm-objcopy-rename-section", "--rename-section"], [642, 0, 1, "cmdoption-llvm-objcopy-set-section-alignment", "--set-section-alignment"], [642, 0, 1, "cmdoption-llvm-objcopy-set-section-flags", "--set-section-flags"], [642, 0, 1, "cmdoption-llvm-objcopy-set-start-addr", "--set-start-addr"], [642, 0, 1, "cmdoption-llvm-objcopy-split-dwo", "--split-dwo"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-all", "--strip-all"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-all-gnu", "--strip-all-gnu"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-debug", "--strip-debug"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-dwo", "--strip-dwo"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-non-alloc", "--strip-non-alloc"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-sections", "--strip-sections"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-symbol", "--strip-symbol"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-symbols", "--strip-symbols"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded", "--strip-unneeded"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded-symbol", "--strip-unneeded-symbol"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded-symbols", "--strip-unneeded-symbols"], [642, 0, 1, "cmdoption-llvm-objcopy-subsystem", "--subsystem"], [642, 0, 1, "cmdoption-llvm-objcopy-target", "--target"], [642, 0, 1, "cmdoption-llvm-objcopy-version", "--version"], [642, 0, 1, "cmdoption-llvm-objcopy-weaken", "--weaken"], [642, 0, 1, "cmdoption-llvm-objcopy-weaken-symbol", "--weaken-symbol"], [642, 0, 1, "cmdoption-llvm-objcopy-weaken-symbols", "--weaken-symbols"], [642, 0, 1, "cmdoption-llvm-objcopy-wildcard", "--wildcard"], [642, 0, 1, "cmdoption-llvm-objcopy-binary-architecture", "-B"], [642, 0, 1, "cmdoption-llvm-objcopy-enable-deterministic-archives", "-D"], [642, 0, 1, "cmdoption-llvm-objcopy-target", "-F"], [642, 0, 1, "cmdoption-llvm-objcopy-keep-global-symbol", "-G"], [642, 0, 1, "cmdoption-llvm-objcopy-input-target", "-I"], [642, 0, 1, "cmdoption-llvm-objcopy-keep-symbol", "-K"], [642, 0, 1, "cmdoption-llvm-objcopy-localize-symbol", "-L"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-symbol", "-N"], [642, 0, 1, "cmdoption-llvm-objcopy-output-target", "-O"], [642, 0, 1, "cmdoption-llvm-objcopy-remove-section", "-R"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-all", "-S"], [642, 0, 1, "cmdoption-llvm-objcopy-disable-deterministic-archives", "-U"], [642, 0, 1, "cmdoption-llvm-objcopy-version", "-V"], [642, 0, 1, "cmdoption-llvm-objcopy-weaken-symbol", "-W"], [642, 0, 1, "cmdoption-llvm-objcopy-discard-locals", "-X"], [642, 0, 1, "cmdoption-llvm-objcopy-strip-debug", "-g"], [642, 0, 1, "cmdoption-llvm-objcopy-help", "-h"], [642, 0, 1, "cmdoption-llvm-objcopy-only-section", "-j"], [642, 0, 1, "cmdoption-llvm-objcopy-preserve-dates", "-p"], [642, 0, 1, "cmdoption-llvm-objcopy-wildcard", "-w"], [642, 0, 1, "cmdoption-llvm-objcopy-discard-all", "-x"], [642, 0, 1, "cmdoption-llvm-objcopy-arg-FILE", "@&lt;FILE&gt;"]], "llvm-objdump": [[643, 0, 1, "cmdoption-llvm-objdump-adjust-vma", "--adjust-vma"], [643, 0, 1, "cmdoption-llvm-objdump-x", "--all-headers"], [643, 0, 1, "cmdoption-llvm-objdump-arch", "--arch"], [643, 0, 1, "cmdoption-llvm-objdump-arch-name", "--arch-name"], [643, 0, 1, "cmdoption-llvm-objdump-a", "--archive-headers"], [643, 0, 1, "cmdoption-llvm-objdump-archive-member-offsets", "--archive-member-offsets"], [643, 0, 1, "cmdoption-llvm-objdump-bind", "--bind"], [643, 0, 1, "cmdoption-llvm-objdump-data-in-code", "--data-in-code"], [643, 0, 1, "cmdoption-llvm-objdump-debug-vars", "--debug-vars"], [643, 0, 1, "cmdoption-llvm-objdump-debug-vars-indent", "--debug-vars-indent"], [643, 0, 1, "cmdoption-llvm-objdump-C", "--demangle"], [643, 0, 1, "cmdoption-llvm-objdump-dis-symname", "--dis-symname"], [643, 0, 1, "cmdoption-llvm-objdump-d", "--disassemble"], [643, 0, 1, "cmdoption-llvm-objdump-D", "--disassemble-all"], [643, 0, 1, "cmdoption-llvm-objdump-disassemble-symbols", "--disassemble-symbols"], [643, 0, 1, "cmdoption-llvm-objdump-z", "--disassemble-zeroes"], [643, 0, 1, "cmdoption-llvm-objdump-M", "--disassembler-options"], [643, 0, 1, "cmdoption-llvm-objdump-dsym", "--dsym"], [643, 0, 1, "cmdoption-llvm-objdump-dwarf", "--dwarf"], [643, 0, 1, "cmdoption-llvm-objdump-dylib-id", "--dylib-id"], [643, 0, 1, "cmdoption-llvm-objdump-dylibs-used", "--dylibs-used"], [643, 0, 1, "cmdoption-llvm-objdump-R", "--dynamic-reloc"], [643, 0, 1, "cmdoption-llvm-objdump-T", "--dynamic-syms"], [643, 0, 1, "cmdoption-llvm-objdump-exports-trie", "--exports-trie"], [643, 0, 1, "cmdoption-llvm-objdump-fault-map-section", "--fault-map-section"], [643, 0, 1, "cmdoption-llvm-objdump-f", "--file-headers"], [643, 0, 1, "cmdoption-llvm-objdump-s", "--full-contents"], [643, 0, 1, "cmdoption-llvm-objdump-full-leading-addr", "--full-leading-addr"], [643, 0, 1, "cmdoption-llvm-objdump-function-starts", "--function-starts"], [643, 0, 1, "cmdoption-llvm-objdump-h", "--headers"], [643, 0, 1, "cmdoption-llvm-objdump-help", "--help"], [643, 0, 1, "cmdoption-llvm-objdump-indirect-symbols", "--indirect-symbols"], [643, 0, 1, "cmdoption-llvm-objdump-info-plist", "--info-plist"], [643, 0, 1, "cmdoption-llvm-objdump-lazy-bind", "--lazy-bind"], [643, 0, 1, "cmdoption-llvm-objdump-l", "--line-numbers"], [643, 0, 1, "cmdoption-llvm-objdump-link-opt-hints", "--link-opt-hints"], [643, 0, 1, "cmdoption-llvm-objdump-m", "--macho"], [643, 0, 1, "cmdoption-llvm-objdump-mattr", "--mattr"], [643, 0, 1, "cmdoption-llvm-objdump-mcpu", "--mcpu"], [643, 0, 1, "cmdoption-llvm-objdump-no-leading-addr", "--no-leading-addr"], [643, 0, 1, "cmdoption-llvm-objdump-no-leading-headers", "--no-leading-headers"], [643, 0, 1, "cmdoption-llvm-objdump-no-print-imm-hex", "--no-print-imm-hex"], [643, 0, 1, "cmdoption-llvm-objdump-no-show-raw-insn", "--no-show-raw-insn"], [643, 0, 1, "cmdoption-llvm-objdump-no-symbolic-operands", "--no-symbolic-operands"], [643, 0, 1, "cmdoption-llvm-objdump-non-verbose", "--non-verbose"], [643, 0, 1, "cmdoption-llvm-objdump-objc-meta-data", "--objc-meta-data"], [643, 0, 1, "cmdoption-llvm-objdump-prefix", "--prefix"], [643, 0, 1, "cmdoption-llvm-objdump-prefix-strip", "--prefix-strip"], [643, 0, 1, "cmdoption-llvm-objdump-print-imm-hex", "--print-imm-hex"], [643, 0, 1, "cmdoption-llvm-objdump-private-header", "--private-header"], [643, 0, 1, "cmdoption-llvm-objdump-p", "--private-headers"], [643, 0, 1, "cmdoption-llvm-objdump-raw-clang-ast", "--raw-clang-ast"], [643, 0, 1, "cmdoption-llvm-objdump-rebase", "--rebase"], [643, 0, 1, "cmdoption-llvm-objdump-r", "--reloc"], [643, 0, 1, "cmdoption-llvm-objdump-rpaths", "--rpaths"], [643, 0, 1, "cmdoption-llvm-objdump-j", "--section"], [643, 0, 1, "cmdoption-llvm-objdump-h", "--section-headers"], [643, 0, 1, "cmdoption-llvm-objdump-show-lma", "--show-lma"], [643, 0, 1, "cmdoption-llvm-objdump-S", "--source"], [643, 0, 1, "cmdoption-llvm-objdump-start-address", "--start-address"], [643, 0, 1, "cmdoption-llvm-objdump-stop-address", "--stop-address"], [643, 0, 1, "cmdoption-llvm-objdump-symbol-description", "--symbol-description"], [643, 0, 1, "cmdoption-llvm-objdump-symbolize-operands", "--symbolize-operands"], [643, 0, 1, "cmdoption-llvm-objdump-t", "--syms"], [643, 0, 1, "cmdoption-llvm-objdump-triple", "--triple"], [643, 0, 1, "cmdoption-llvm-objdump-universal-headers", "--universal-headers"], [643, 0, 1, "cmdoption-llvm-objdump-u", "--unwind-info"], [643, 0, 1, "cmdoption-llvm-objdump-v", "--version"], [643, 0, 1, "cmdoption-llvm-objdump-weak-bind", "--weak-bind"], [643, 0, 1, "cmdoption-llvm-objdump-w", "--wide"], [643, 0, 1, "cmdoption-llvm-objdump-x86-asm-syntax", "--x86-asm-syntax"], [643, 0, 1, "cmdoption-llvm-objdump-C", "-C"], [643, 0, 1, "cmdoption-llvm-objdump-D", "-D"], [643, 0, 1, "cmdoption-llvm-objdump-M", "-M"], [643, 0, 1, "cmdoption-llvm-objdump-R", "-R"], [643, 0, 1, "cmdoption-llvm-objdump-S", "-S"], [643, 0, 1, "cmdoption-llvm-objdump-T", "-T"], [643, 0, 1, "cmdoption-llvm-objdump-a", "-a"], [643, 0, 1, "cmdoption-llvm-objdump-d", "-d"], [643, 0, 1, "cmdoption-llvm-objdump-f", "-f"], [643, 0, 1, "cmdoption-llvm-objdump-g", "-g"], [643, 0, 1, "cmdoption-llvm-objdump-h", "-h"], [643, 0, 1, "cmdoption-llvm-objdump-j", "-j"], [643, 0, 1, "cmdoption-llvm-objdump-l", "-l"], [643, 0, 1, "cmdoption-llvm-objdump-m", "-m"], [643, 0, 1, "cmdoption-llvm-objdump-p", "-p"], [643, 0, 1, "cmdoption-llvm-objdump-r", "-r"], [643, 0, 1, "cmdoption-llvm-objdump-s", "-s"], [643, 0, 1, "cmdoption-llvm-objdump-t", "-t"], [643, 0, 1, "cmdoption-llvm-objdump-u", "-u"], [643, 0, 1, "cmdoption-llvm-objdump-v", "-v"], [643, 0, 1, "cmdoption-llvm-objdump-w", "-w"], [643, 0, 1, "cmdoption-llvm-objdump-x", "-x"], [643, 0, 1, "cmdoption-llvm-objdump-z", "-z"], [643, 0, 1, "cmdoption-llvm-objdump-arg-FILE", "@&lt;FILE&gt;"], [643, 0, 1, "cmdoption-llvm-objdump-arg-att", "att"], [643, 0, 1, "cmdoption-llvm-objdump-arg-intel", "intel"]], "llvm-otool": [[644, 0, 1, "cmdoption-llvm-otool-help", "--help"], [644, 0, 1, "cmdoption-llvm-otool-help-hidden", "--help-hidden"], [644, 0, 1, "cmdoption-llvm-otool-version", "--version"], [644, 0, 1, "cmdoption-llvm-otool-C", "-C"], [644, 0, 1, "cmdoption-llvm-otool-D", "-D"], [644, 0, 1, "cmdoption-llvm-otool-G", "-G"], [644, 0, 1, "cmdoption-llvm-otool-I", "-I"], [644, 0, 1, "cmdoption-llvm-otool-L", "-L"], [644, 0, 1, "cmdoption-llvm-otool-P", "-P"], [644, 0, 1, "cmdoption-llvm-otool-V", "-V"], [644, 0, 1, "cmdoption-llvm-otool-X", "-X"], [644, 0, 1, "cmdoption-llvm-otool-arch", "-arch"], [644, 0, 1, "cmdoption-llvm-otool-d", "-d"], [644, 0, 1, "cmdoption-llvm-otool-f", "-f"], [644, 0, 1, "cmdoption-llvm-otool-h", "-h"], [644, 0, 1, "cmdoption-llvm-otool-j", "-j"], [644, 0, 1, "cmdoption-llvm-otool-l", "-l"], [644, 0, 1, "cmdoption-llvm-otool-mcpu", "-mcpu"], [644, 0, 1, "cmdoption-llvm-otool-o", "-o"], [644, 0, 1, "cmdoption-llvm-otool-p", "-p"], [644, 0, 1, "cmdoption-llvm-otool-r", "-r"], [644, 0, 1, "cmdoption-llvm-otool-s", "-s"], [644, 0, 1, "cmdoption-llvm-otool-t", "-t"], [644, 0, 1, "cmdoption-llvm-otool-v", "-v"], [644, 0, 1, "cmdoption-llvm-otool-x", "-x"], [644, 0, 1, "cmdoption-llvm-otool-arg-FILE", "@&lt;FILE&gt;"]], "llvm-pdbutil-bytes": [[645, 0, 1, "cmdoption-llvm-pdbutil-bytes-block-range", "-block-range"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-byte-range", "-byte-range"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-chunks", "-chunks"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-ec", "-ec"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-files", "-files"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-fpm", "-fpm"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-id", "-id"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-mod", "-mod"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-modi", "-modi"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-name-map", "-name-map"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-sc", "-sc"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-sm", "-sm"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-split-chunks", "-split-chunks"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-stream-data", "-stream-data"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-syms", "-syms"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-type", "-type"], [645, 0, 1, "cmdoption-llvm-pdbutil-bytes-type-server", "-type-server"]], "llvm-pdbutil-dump": [[645, 0, 1, "cmdoption-llvm-pdbutil-dump-all", "-all"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-dependents", "-dependents"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-files", "-files"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-global-extras", "-global-extras"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-globals", "-globals"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-id-data", "-id-data"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-id-extras", "-id-extras"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-id-index", "-id-index"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-ids", "-ids"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-il", "-il"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-l", "-l"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-modi", "-modi"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-modules", "-modules"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-public-extras", "-public-extras"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-publics", "-publics"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-section-contribs", "-section-contribs"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-section-headers", "-section-headers"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-section-map", "-section-map"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-stream-blocks", "-stream-blocks"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-streams", "-streams"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-string-table", "-string-table"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-summary", "-summary"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-sym-data", "-sym-data"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-symbols", "-symbols"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-type-data", "-type-data"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-type-extras", "-type-extras"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-type-index", "-type-index"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-types", "-types"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-xme", "-xme"], [645, 0, 1, "cmdoption-llvm-pdbutil-dump-xmi", "-xmi"]], "llvm-pdbutil-merge": [[645, 0, 1, "cmdoption-llvm-pdbutil-merge-pdb", "-pdb"]], "llvm-pdbutil-pretty": [[645, 0, 1, "cmdoption-llvm-pdbutil-pretty-all", "-all"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-definitions", "-class-definitions"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-order", "-class-order"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", "-class-recurse-depth"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-classes", "-classes"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-color-output", "-color-output"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-compilands", "-compilands"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-enums", "-enums"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", "-exclude-compilands"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", "-exclude-symbols"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-types", "-exclude-types"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-externals", "-externals"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-globals", "-globals"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-compilands", "-include-compilands"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-symbols", "-include-symbols"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-types", "-include-types"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-lines", "-lines"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-load-address", "-load-address"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding", "-min-class-padding"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", "-min-class-padding-imm"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-type-size", "-min-type-size"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-module-syms", "-module-syms"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", "-no-compiler-generated"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", "-no-enum-definitions"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-system-libs", "-no-system-libs"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-sym-types", "-sym-types"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-symbol-order", "-symbol-order"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-typedefs", "-typedefs"], [645, 0, 1, "cmdoption-llvm-pdbutil-pretty-types", "-types"]], "llvm-pdbutil-yaml2pdb": [[645, 0, 1, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", "-pdb"]], "llvm-profdata-merge": [[646, 0, 1, "cmdoption-llvm-profdata-merge-binary", "--binary"], [646, 0, 1, "cmdoption-llvm-profdata-merge-compress-all-sections", "--compress-all-sections"], [646, 0, 1, "cmdoption-llvm-profdata-merge-debug-info", "--debug-info"], [646, 0, 1, "cmdoption-llvm-profdata-merge-extbinary", "--extbinary"], [646, 0, 1, "cmdoption-llvm-profdata-merge-failure-mode", "--failure-mode"], [646, 0, 1, "cmdoption-llvm-profdata-merge-gcc", "--gcc"], [646, 0, 1, "cmdoption-llvm-profdata-merge-gen-partial-profile", "--gen-partial-profile"], [646, 0, 1, "cmdoption-llvm-profdata-merge-help", "--help"], [646, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "--input-files"], [646, 0, 1, "cmdoption-llvm-profdata-merge-instr", "--instr"], [646, 0, 1, "cmdoption-llvm-profdata-merge-instr-prof-cold-threshold", "--instr-prof-cold-threshold"], [646, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "--num-threads"], [646, 0, 1, "cmdoption-llvm-profdata-merge-output", "--output"], [646, 0, 1, "cmdoption-llvm-profdata-merge-prof-sym-list", "--prof-sym-list"], [646, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "--remapping-file"], [646, 0, 1, "cmdoption-llvm-profdata-merge-sample", "--sample"], [646, 0, 1, "cmdoption-llvm-profdata-merge-sparse", "--sparse"], [646, 0, 1, "cmdoption-llvm-profdata-merge-suppl-min-size-threshold", "--suppl-min-size-threshold"], [646, 0, 1, "cmdoption-llvm-profdata-merge-supplement-instr-with-sample", "--supplement-instr-with-sample"], [646, 0, 1, "cmdoption-llvm-profdata-merge-text", "--text"], [646, 0, 1, "cmdoption-llvm-profdata-merge-use-md5", "--use-md5"], [646, 0, 1, "cmdoption-llvm-profdata-merge-weighted-input", "--weighted-input"], [646, 0, 1, "cmdoption-llvm-profdata-merge-zero-counter-threshold", "--zero-counter-threshold"], [646, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "-f"], [646, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "-j"], [646, 0, 1, "cmdoption-llvm-profdata-merge-output", "-o"], [646, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "-r"]], "llvm-profdata-overlap": [[646, 0, 1, "cmdoption-llvm-profdata-overlap-cs", "--cs"], [646, 0, 1, "cmdoption-llvm-profdata-overlap-function", "--function"], [646, 0, 1, "cmdoption-llvm-profdata-overlap-help", "--help"], [646, 0, 1, "cmdoption-llvm-profdata-overlap-output", "--output"], [646, 0, 1, "cmdoption-llvm-profdata-overlap-value-cutoff", "--value-cutoff"], [646, 0, 1, "cmdoption-llvm-profdata-overlap-output", "-o"]], "llvm-profdata-show": [[646, 0, 1, "cmdoption-llvm-profdata-show-all-functions", "--all-functions"], [646, 0, 1, "cmdoption-llvm-profdata-show-counts", "--counts"], [646, 0, 1, "cmdoption-llvm-profdata-show-function", "--function"], [646, 0, 1, "cmdoption-llvm-profdata-show-help", "--help"], [646, 0, 1, "cmdoption-llvm-profdata-show-instr", "--instr"], [646, 0, 1, "cmdoption-llvm-profdata-show-list-below-cutoff", "--list-below-cutoff"], [646, 0, 1, "cmdoption-llvm-profdata-show-memop-sizes", "--memop-sizes"], [646, 0, 1, "cmdoption-llvm-profdata-show-output", "--output"], [646, 0, 1, "cmdoption-llvm-profdata-show-sample", "--sample"], [646, 0, 1, "cmdoption-llvm-profdata-show-show-prof-sym-list", "--show-prof-sym-list"], [646, 0, 1, "cmdoption-llvm-profdata-show-show-sec-info-only", "--show-sec-info-only"], [646, 0, 1, "cmdoption-llvm-profdata-show-showcs", "--showcs"], [646, 0, 1, "cmdoption-llvm-profdata-show-text", "--text"], [646, 0, 1, "cmdoption-llvm-profdata-show-topn", "--topn"], [646, 0, 1, "cmdoption-llvm-profdata-show-value-cutoff", "--value-cutoff"], [646, 0, 1, "cmdoption-llvm-profdata-show-output", "-o"]], "llvm-profgen": [[647, 0, 1, "cmdoption-llvm-profgen-binary", "--binary"], [647, 0, 1, "cmdoption-llvm-profgen-format", "--format"], [647, 0, 1, "cmdoption-llvm-profgen-output", "--output"], [647, 0, 1, "cmdoption-llvm-profgen-perfscript", "--perfscript"], [647, 0, 1, "cmdoption-llvm-profgen-show-disassembly", "--show-disassembly"], [647, 0, 1, "cmdoption-llvm-profgen-show-mmap-events", "--show-mmap-events"], [647, 0, 1, "cmdoption-llvm-profgen-x86-asm-syntax", "--x86-asm-syntax"]], "llvm-readelf": [[649, 0, 1, "cmdoption-llvm-readelf-addrsig", "--addrsig"], [649, 0, 1, "cmdoption-llvm-readelf-all", "--all"], [649, 0, 1, "cmdoption-llvm-readelf-arch-specific", "--arch-specific"], [649, 0, 1, "cmdoption-llvm-readelf-bb-addr-map", "--bb-addr-map"], [649, 0, 1, "cmdoption-llvm-readelf-cg-profile", "--cg-profile"], [649, 0, 1, "cmdoption-llvm-readelf-demangle", "--demangle"], [649, 0, 1, "cmdoption-llvm-readelf-dependent-libraries", "--dependent-libraries"], [649, 0, 1, "cmdoption-llvm-readelf-dyn-relocations", "--dyn-relocations"], [649, 0, 1, "cmdoption-llvm-readelf-dyn-symbols", "--dyn-symbols"], [649, 0, 1, "cmdoption-llvm-readelf-dyn-symbols", "--dyn-syms"], [649, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "--dynamic"], [649, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "--dynamic-table"], [649, 0, 1, "cmdoption-llvm-readelf-elf-linker-options", "--elf-linker-options"], [649, 0, 1, "cmdoption-llvm-readelf-elf-output-style", "--elf-output-style"], [649, 0, 1, "cmdoption-llvm-readelf-expand-relocs", "--expand-relocs"], [649, 0, 1, "cmdoption-llvm-readelf-file-header", "--file-header"], [649, 0, 1, "cmdoption-llvm-readelf-gnu-hash-table", "--gnu-hash-table"], [649, 0, 1, "cmdoption-llvm-readelf-hash-symbols", "--hash-symbols"], [649, 0, 1, "cmdoption-llvm-readelf-hash-table", "--hash-table"], [649, 0, 1, "cmdoption-llvm-readelf-headers", "--headers"], [649, 0, 1, "cmdoption-llvm-readelf-help", "--help"], [649, 0, 1, "cmdoption-llvm-readelf-hex-dump", "--hex-dump"], [649, 0, 1, "cmdoption-llvm-readelf-histogram", "--histogram"], [649, 0, 1, "cmdoption-llvm-readelf-needed-libs", "--needed-libs"], [649, 0, 1, "cmdoption-llvm-readelf-no-demangle", "--no-demangle"], [649, 0, 1, "cmdoption-llvm-readelf-notes", "--notes"], [649, 0, 1, "cmdoption-llvm-readelf-pretty-print", "--pretty-print"], [649, 0, 1, "cmdoption-llvm-readelf-program-headers", "--program-headers"], [649, 0, 1, "cmdoption-llvm-readelf-raw-relr", "--raw-relr"], [649, 0, 1, "cmdoption-llvm-readelf-relocations", "--relocations"], [649, 0, 1, "cmdoption-llvm-readelf-relocations", "--relocs"], [649, 0, 1, "cmdoption-llvm-readelf-section-data", "--section-data"], [649, 0, 1, "cmdoption-llvm-readelf-section-details", "--section-details"], [649, 0, 1, "cmdoption-llvm-readelf-section-groups", "--section-groups"], [649, 0, 1, "cmdoption-llvm-readelf-sections", "--section-headers"], [649, 0, 1, "cmdoption-llvm-readelf-section-mapping", "--section-mapping"], [649, 0, 1, "cmdoption-llvm-readelf-section-relocations", "--section-relocations"], [649, 0, 1, "cmdoption-llvm-readelf-section-symbols", "--section-symbols"], [649, 0, 1, "cmdoption-llvm-readelf-sections", "--sections"], [649, 0, 1, "cmdoption-llvm-readelf-program-headers", "--segments"], [649, 0, 1, "cmdoption-llvm-readelf-stack-sizes", "--stack-sizes"], [649, 0, 1, "cmdoption-llvm-readelf-stackmap", "--stackmap"], [649, 0, 1, "cmdoption-llvm-readelf-string-dump", "--string-dump"], [649, 0, 1, "cmdoption-llvm-readelf-symbols", "--symbols"], [649, 0, 1, "cmdoption-llvm-readelf-symbols", "--syms"], [649, 0, 1, "cmdoption-llvm-readelf-unwind", "--unwind"], [649, 0, 1, "cmdoption-llvm-readelf-version", "--version"], [649, 0, 1, "cmdoption-llvm-readelf-version-info", "--version-info"], [649, 0, 1, "cmdoption-llvm-readelf-wide", "--wide"], [649, 0, 1, "cmdoption-llvm-readelf-arch-specific", "-A"], [649, 0, 1, "cmdoption-llvm-readelf-demangle", "-C"], [649, 0, 1, "cmdoption-llvm-readelf-histogram", "-I"], [649, 0, 1, "cmdoption-llvm-readelf-sections", "-S"], [649, 0, 1, "cmdoption-llvm-readelf-version-info", "-V"], [649, 0, 1, "cmdoption-llvm-readelf-wide", "-W"], [649, 0, 1, "cmdoption-llvm-readelf-all", "-a"], [649, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "-d"], [649, 0, 1, "cmdoption-llvm-readelf-headers", "-e"], [649, 0, 1, "cmdoption-llvm-readelf-section-groups", "-g"], [649, 0, 1, "cmdoption-llvm-readelf-file-header", "-h"], [649, 0, 1, "cmdoption-llvm-readelf-program-headers", "-l"], [649, 0, 1, "cmdoption-llvm-readelf-notes", "-n"], [649, 0, 1, "cmdoption-llvm-readelf-string-dump", "-p"], [649, 0, 1, "cmdoption-llvm-readelf-relocations", "-r"], [649, 0, 1, "cmdoption-llvm-readelf-symbols", "-s"], [649, 0, 1, "cmdoption-llvm-readelf-section-details", "-t"], [649, 0, 1, "cmdoption-llvm-readelf-unwind", "-u"], [649, 0, 1, "cmdoption-llvm-readelf-hex-dump", "-x"], [649, 0, 1, "cmdoption-llvm-readelf-arg-FILE", "@&lt;FILE&gt;"]], "llvm-readobj": [[650, 0, 1, "cmdoption-llvm-readobj-addrsig", "--addrsig"], [650, 0, 1, "cmdoption-llvm-readobj-all", "--all"], [650, 0, 1, "cmdoption-llvm-readobj-arch-specific", "--arch-specific"], [650, 0, 1, "cmdoption-llvm-readobj-auxiliary-header", "--auxiliary-header"], [650, 0, 1, "cmdoption-llvm-readobj-bb-addr-map", "--bb-addr-map"], [650, 0, 1, "cmdoption-llvm-readobj-cg-profile", "--cg-profile"], [650, 0, 1, "cmdoption-llvm-readobj-codeview", "--codeview"], [650, 0, 1, "cmdoption-llvm-readobj-codeview-ghash", "--codeview-ghash"], [650, 0, 1, "cmdoption-llvm-readobj-codeview-merged-types", "--codeview-merged-types"], [650, 0, 1, "cmdoption-llvm-readobj-codeview-subsection-bytes", "--codeview-subsection-bytes"], [650, 0, 1, "cmdoption-llvm-readobj-coff-basereloc", "--coff-basereloc"], [650, 0, 1, "cmdoption-llvm-readobj-coff-debug-directory", "--coff-debug-directory"], [650, 0, 1, "cmdoption-llvm-readobj-coff-directives", "--coff-directives"], [650, 0, 1, "cmdoption-llvm-readobj-coff-exports", "--coff-exports"], [650, 0, 1, "cmdoption-llvm-readobj-coff-imports", "--coff-imports"], [650, 0, 1, "cmdoption-llvm-readobj-coff-load-config", "--coff-load-config"], [650, 0, 1, "cmdoption-llvm-readobj-coff-resources", "--coff-resources"], [650, 0, 1, "cmdoption-llvm-readobj-coff-tls-directory", "--coff-tls-directory"], [650, 0, 1, "cmdoption-llvm-readobj-demangle", "--demangle"], [650, 0, 1, "cmdoption-llvm-readobj-dependent-libraries", "--dependent-libraries"], [650, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dt"], [650, 0, 1, "cmdoption-llvm-readobj-dyn-relocations", "--dyn-relocations"], [650, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dyn-symbols"], [650, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dyn-syms"], [650, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "--dynamic"], [650, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "--dynamic-table"], [650, 0, 1, "cmdoption-llvm-readobj-elf-linker-options", "--elf-linker-options"], [650, 0, 1, "cmdoption-llvm-readobj-elf-output-style", "--elf-output-style"], [650, 0, 1, "cmdoption-llvm-readobj-expand-relocs", "--expand-relocs"], [650, 0, 1, "cmdoption-llvm-readobj-file-header", "--file-header"], [650, 0, 1, "cmdoption-llvm-readobj-gnu-hash-table", "--gnu-hash-table"], [650, 0, 1, "cmdoption-llvm-readobj-hash-symbols", "--hash-symbols"], [650, 0, 1, "cmdoption-llvm-readobj-hash-table", "--hash-table"], [650, 0, 1, "cmdoption-llvm-readobj-headers", "--headers"], [650, 0, 1, "cmdoption-llvm-readobj-help", "--help"], [650, 0, 1, "cmdoption-llvm-readobj-hex-dump", "--hex-dump"], [650, 0, 1, "cmdoption-llvm-readobj-histogram", "--histogram"], [650, 0, 1, "cmdoption-llvm-readobj-macho-data-in-code", "--macho-data-in-code"], [650, 0, 1, "cmdoption-llvm-readobj-macho-dsymtab", "--macho-dsymtab"], [650, 0, 1, "cmdoption-llvm-readobj-macho-indirect-symbols", "--macho-indirect-symbols"], [650, 0, 1, "cmdoption-llvm-readobj-macho-linker-options", "--macho-linker-options"], [650, 0, 1, "cmdoption-llvm-readobj-macho-segment", "--macho-segment"], [650, 0, 1, "cmdoption-llvm-readobj-macho-version-min", "--macho-version-min"], [650, 0, 1, "cmdoption-llvm-readobj-needed-libs", "--needed-libs"], [650, 0, 1, "cmdoption-llvm-readobj-notes", "--notes"], [650, 0, 1, "cmdoption-llvm-readobj-pretty-print", "--pretty-print"], [650, 0, 1, "cmdoption-llvm-readobj-program-headers", "--program-headers"], [650, 0, 1, "cmdoption-llvm-readobj-raw-relr", "--raw-relr"], [650, 0, 1, "cmdoption-llvm-readobj-relocations", "--relocations"], [650, 0, 1, "cmdoption-llvm-readobj-relocations", "--relocs"], [650, 0, 1, "cmdoption-llvm-readobj-section-data", "--sd"], [650, 0, 1, "cmdoption-llvm-readobj-section-data", "--section-data"], [650, 0, 1, "cmdoption-llvm-readobj-section-groups", "--section-groups"], [650, 0, 1, "cmdoption-llvm-readobj-sections", "--section-headers"], [650, 0, 1, "cmdoption-llvm-readobj-section-mapping", "--section-mapping"], [650, 0, 1, "cmdoption-llvm-readobj-section-relocations", "--section-relocations"], [650, 0, 1, "cmdoption-llvm-readobj-section-symbols", "--section-symbols"], [650, 0, 1, "cmdoption-llvm-readobj-sections", "--sections"], [650, 0, 1, "cmdoption-llvm-readobj-program-headers", "--segments"], [650, 0, 1, "cmdoption-llvm-readobj-section-relocations", "--sr"], [650, 0, 1, "cmdoption-llvm-readobj-section-symbols", "--st"], [650, 0, 1, "cmdoption-llvm-readobj-stack-sizes", "--stack-sizes"], [650, 0, 1, "cmdoption-llvm-readobj-stackmap", "--stackmap"], [650, 0, 1, "cmdoption-llvm-readobj-string-dump", "--string-dump"], [650, 0, 1, "cmdoption-llvm-readobj-string-table", "--string-table"], [650, 0, 1, "cmdoption-llvm-readobj-symbols", "--symbols"], [650, 0, 1, "cmdoption-llvm-readobj-symbols", "--syms"], [650, 0, 1, "cmdoption-llvm-readobj-unwind", "--unwind"], [650, 0, 1, "cmdoption-llvm-readobj-version", "--version"], [650, 0, 1, "cmdoption-llvm-readobj-version-info", "--version-info"], [650, 0, 1, "cmdoption-llvm-readobj-arch-specific", "-A"], [650, 0, 1, "cmdoption-llvm-readobj-demangle", "-C"], [650, 0, 1, "cmdoption-llvm-readobj-histogram", "-I"], [650, 0, 1, "cmdoption-llvm-readobj-sections", "-S"], [650, 0, 1, "cmdoption-llvm-readobj-version-info", "-V"], [650, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "-d"], [650, 0, 1, "cmdoption-llvm-readobj-headers", "-e"], [650, 0, 1, "cmdoption-llvm-readobj-section-groups", "-g"], [650, 0, 1, "cmdoption-llvm-readobj-file-header", "-h"], [650, 0, 1, "cmdoption-llvm-readobj-program-headers", "-l"], [650, 0, 1, "cmdoption-llvm-readobj-notes", "-n"], [650, 0, 1, "cmdoption-llvm-readobj-string-dump", "-p"], [650, 0, 1, "cmdoption-llvm-readobj-relocations", "-r"], [650, 0, 1, "cmdoption-llvm-readobj-symbols", "-s"], [650, 0, 1, "cmdoption-llvm-readobj-unwind", "-u"], [650, 0, 1, "cmdoption-llvm-readobj-hex-dump", "-x"], [650, 0, 1, "cmdoption-llvm-readobj-arg-FILE", "@&lt;FILE&gt;"]], "llvm-size": [[651, 0, 1, "cmdoption-llvm-size-arch", "--arch"], [651, 0, 1, "cmdoption-llvm-size-common", "--common"], [651, 0, 1, "cmdoption-llvm-size-format", "--format"], [651, 0, 1, "cmdoption-llvm-size-help", "--help"], [651, 0, 1, "cmdoption-llvm-size-radix", "--radix"], [651, 0, 1, "cmdoption-llvm-size-totals", "--totals"], [651, 0, 1, "cmdoption-llvm-size-version", "--version"], [651, 0, 1, "cmdoption-llvm-size-A", "-A"], [651, 0, 1, "cmdoption-llvm-size-B", "-B"], [651, 0, 1, "cmdoption-llvm-size-d", "-d"], [651, 0, 1, "cmdoption-llvm-size-help", "-h"], [651, 0, 1, "cmdoption-llvm-size-l", "-l"], [651, 0, 1, "cmdoption-llvm-size-m", "-m"], [651, 0, 1, "cmdoption-llvm-size-o", "-o"], [651, 0, 1, "cmdoption-llvm-size-totals", "-t"], [651, 0, 1, "cmdoption-llvm-size-x", "-x"], [651, 0, 1, "cmdoption-llvm-size-arg-FILE", "@&lt;FILE&gt;"]], "llvm-stress": [[652, 0, 1, "cmdoption-llvm-stress-o", "-o"], [652, 0, 1, "cmdoption-llvm-stress-seed", "-seed"], [652, 0, 1, "cmdoption-llvm-stress-size", "-size"]], "llvm-strings": [[653, 0, 1, "cmdoption-llvm-strings-all", "--all"], [653, 0, 1, "cmdoption-llvm-strings-bytes", "--bytes"], [653, 0, 1, "cmdoption-llvm-strings-help", "--help"], [653, 0, 1, "cmdoption-llvm-strings-print-file-name", "--print-file-name"], [653, 0, 1, "cmdoption-llvm-strings-radix", "--radix"], [653, 0, 1, "cmdoption-llvm-strings-version", "--version"], [653, 0, 1, "cmdoption-llvm-strings-all", "-a"], [653, 0, 1, "cmdoption-llvm-strings-print-file-name", "-f"], [653, 0, 1, "cmdoption-llvm-strings-help", "-h"], [653, 0, 1, "cmdoption-llvm-strings-bytes", "-n"], [653, 0, 1, "cmdoption-llvm-strings-radix", "-t"], [653, 0, 1, "cmdoption-llvm-strings-arg-FILE", "@&lt;FILE&gt;"]], "llvm-strip": [[654, 0, 1, "cmdoption-llvm-strip-allow-broken-links", "--allow-broken-links"], [654, 0, 1, "cmdoption-llvm-strip-disable-deterministic-archives", "--disable-deterministic-archives"], [654, 0, 1, "cmdoption-llvm-strip-discard-all", "--discard-all"], [654, 0, 1, "cmdoption-llvm-strip-discard-locals", "--discard-locals"], [654, 0, 1, "cmdoption-llvm-strip-enable-deterministic-archives", "--enable-deterministic-archives"], [654, 0, 1, "cmdoption-llvm-strip-help", "--help"], [654, 0, 1, "cmdoption-llvm-strip-keep-file-symbols", "--keep-file-symbols"], [654, 0, 1, "cmdoption-llvm-strip-keep-section", "--keep-section"], [654, 0, 1, "cmdoption-llvm-strip-keep-symbol", "--keep-symbol"], [654, 0, 1, "cmdoption-llvm-strip-no-strip-all", "--no-strip-all"], [654, 0, 1, "cmdoption-llvm-strip-only-keep-debug", "--only-keep-debug"], [654, 0, 1, "cmdoption-llvm-strip-preserve-dates", "--preserve-dates"], [654, 0, 1, "cmdoption-llvm-strip-regex", "--regex"], [654, 0, 1, "cmdoption-llvm-strip-remove-section", "--remove-section"], [654, 0, 1, "cmdoption-llvm-strip-strip-all", "--strip-all"], [654, 0, 1, "cmdoption-llvm-strip-strip-all-gnu", "--strip-all-gnu"], [654, 0, 1, "cmdoption-llvm-strip-strip-debug", "--strip-debug"], [654, 0, 1, "cmdoption-llvm-strip-strip-sections", "--strip-sections"], [654, 0, 1, "cmdoption-llvm-strip-strip-symbol", "--strip-symbol"], [654, 0, 1, "cmdoption-llvm-strip-strip-unneeded", "--strip-unneeded"], [654, 0, 1, "cmdoption-llvm-strip-version", "--version"], [654, 0, 1, "cmdoption-llvm-strip-wildcard", "--wildcard"], [654, 0, 1, "cmdoption-llvm-strip-enable-deterministic-archives", "-D"], [654, 0, 1, "cmdoption-llvm-strip-keep-symbol", "-K"], [654, 0, 1, "cmdoption-llvm-strip-strip-symbol", "-N"], [654, 0, 1, "cmdoption-llvm-strip-remove-section", "-R"], [654, 0, 1, "cmdoption-llvm-strip-strip-debug", "-S"], [654, 0, 1, "cmdoption-llvm-strip-T", "-T"], [654, 0, 1, "cmdoption-llvm-strip-disable-deterministic-archives", "-U"], [654, 0, 1, "cmdoption-llvm-strip-version", "-V"], [654, 0, 1, "cmdoption-llvm-strip-discard-locals", "-X"], [654, 0, 1, "cmdoption-llvm-strip-strip-debug", "-d"], [654, 0, 1, "cmdoption-llvm-strip-strip-debug", "-g"], [654, 0, 1, "cmdoption-llvm-strip-help", "-h"], [654, 0, 1, "cmdoption-llvm-strip-o", "-o"], [654, 0, 1, "cmdoption-llvm-strip-preserve-dates", "-p"], [654, 0, 1, "cmdoption-llvm-strip-strip-all", "-s"], [654, 0, 1, "cmdoption-llvm-strip-wildcard", "-w"], [654, 0, 1, "cmdoption-llvm-strip-discard-all", "-x"], [654, 0, 1, "cmdoption-llvm-strip-arg-FILE", "@&lt;FILE&gt;"]], "llvm-symbolizer": [[655, 0, 1, "cmdoption-llvm-symbolizer-print-address", "--addresses"], [655, 0, 1, "cmdoption-llvm-symbolizer-adjust-vma", "--adjust-vma"], [655, 0, 1, "cmdoption-llvm-symbolizer-basenames", "--basenames"], [655, 0, 1, "cmdoption-llvm-symbolizer-default-arch", "--default-arch"], [655, 0, 1, "cmdoption-llvm-symbolizer-demangle", "--demangle"], [655, 0, 1, "cmdoption-llvm-symbolizer-dia", "--dia"], [655, 0, 1, "cmdoption-llvm-symbolizer-dsym-hint", "--dsym-hint"], [655, 0, 1, "cmdoption-llvm-symbolizer-dwp", "--dwp"], [655, 0, 1, "cmdoption-llvm-symbolizer-obj", "--exe"], [655, 0, 1, "cmdoption-llvm-symbolizer-fallback-debug-path", "--fallback-debug-path"], [655, 0, 1, "cmdoption-llvm-symbolizer-functions", "--functions"], [655, 0, 1, "cmdoption-llvm-symbolizer-help", "--help"], [655, 0, 1, "cmdoption-llvm-symbolizer-inlining", "--inlines"], [655, 0, 1, "cmdoption-llvm-symbolizer-inlining", "--inlining"], [655, 0, 1, "cmdoption-llvm-symbolizer-no-demangle", "--no-demangle"], [655, 0, 1, "cmdoption-llvm-symbolizer-no-inlines", "--no-inlines"], [655, 0, 1, "cmdoption-llvm-symbolizer-obj", "--obj"], [655, 0, 1, "cmdoption-llvm-symbolizer-output-style", "--output-style"], [655, 0, 1, "cmdoption-llvm-symbolizer-pretty-print", "--pretty-print"], [655, 0, 1, "cmdoption-llvm-symbolizer-print-address", "--print-address"], [655, 0, 1, "cmdoption-llvm-symbolizer-print-source-context-lines", "--print-source-context-lines"], [655, 0, 1, "cmdoption-llvm-symbolizer-relativenames", "--relativenames"], [655, 0, 1, "cmdoption-llvm-symbolizer-verbose", "--verbose"], [655, 0, 1, "cmdoption-llvm-symbolizer-version", "--version"], [655, 0, 1, "cmdoption-llvm-symbolizer-demangle", "-C"], [655, 0, 1, "cmdoption-llvm-symbolizer-print-address", "-a"], [655, 0, 1, "cmdoption-llvm-symbolizer-obj", "-e"], [655, 0, 1, "cmdoption-llvm-symbolizer-functions", "-f"], [655, 0, 1, "cmdoption-llvm-symbolizer-help", "-h"], [655, 0, 1, "cmdoption-llvm-symbolizer-inlining", "-i"], [655, 0, 1, "cmdoption-llvm-symbolizer-pretty-print", "-p"], [655, 0, 1, "cmdoption-llvm-symbolizer-basenames", "-s"], [655, 0, 1, "cmdoption-llvm-symbolizer-version", "-v"], [655, 0, 1, "cmdoption-llvm-symbolizer-arg-FILE", "@&lt;FILE&gt;"]], "llvm-tli-checker": [[657, 0, 1, "cmdoption-llvm-tli-checker-dump-tli", "--dump-tli"], [657, 0, 1, "cmdoption-llvm-tli-checker-help", "--help"], [657, 0, 1, "cmdoption-llvm-tli-checker-libdir", "--libdir"], [657, 0, 1, "cmdoption-llvm-tli-checker-report", "--report"], [657, 0, 1, "cmdoption-llvm-tli-checker-separate", "--separate"], [657, 0, 1, "cmdoption-llvm-tli-checker-triple", "--triple"], [657, 0, 1, "cmdoption-llvm-tli-checker-help", "-h"], [657, 0, 1, "cmdoption-llvm-tli-checker-arg-FILE", "@&lt;FILE&gt;"]], "opt": [[659, 0, 1, "cmdoption-opt-S", "-S"], [659, 0, 1, "cmdoption-opt-debug", "-debug"], [659, 0, 1, "cmdoption-opt-f", "-f"], [659, 0, 1, "cmdoption-opt-help", "-help"], [659, 0, 1, "cmdoption-opt-load", "-load"], [659, 0, 1, "cmdoption-opt-o", "-o"], [659, 0, 1, "cmdoption-opt-print-passes", "-print-passes"], [659, 0, 1, "cmdoption-opt-stats", "-stats"], [659, 0, 1, "cmdoption-opt-strip-debug", "-strip-debug"], [659, 0, 1, "cmdoption-opt-time-passes", "-time-passes"], [659, 0, 1, "cmdoption-opt-verify-each", "-verify-each"], [659, 0, 1, "cmdoption-opt-passname", "-{passname}"]], "tblgen": [[660, 0, 1, "cmdoption-tblgen-D", "-D"], [660, 0, 1, "cmdoption-tblgen-I", "-I"], [660, 0, 1, "cmdoption-tblgen-asmformat-error-is-fatal", "-asmformat-error-is-fatal"], [660, 0, 1, "cmdoption-tblgen-asmparsernum", "-asmparsernum"], [660, 0, 1, "cmdoption-tblgen-asmwriternum", "-asmwriternum"], [660, 0, 1, "cmdoption-tblgen-clang-component", "-clang-component"], [660, 0, 1, "cmdoption-tblgen-class", "-class"], [660, 0, 1, "cmdoption-tblgen-combiners", "-combiners"], [660, 0, 1, "cmdoption-tblgen-d", "-d"], [660, 0, 1, "cmdoption-tblgen-debug", "-debug"], [660, 0, 1, "cmdoption-tblgen-dialect", "-dialect"], [660, 0, 1, "cmdoption-tblgen-dialect-opclass-base", "-dialect-opclass-base"], [660, 0, 1, "cmdoption-tblgen-dump-json", "-dump-json"], [660, 0, 1, "cmdoption-tblgen-gen-arm-bf16", "-gen-arm-bf16"], [660, 0, 1, "cmdoption-tblgen-gen-arm-cde-builtin-aliases", "-gen-arm-cde-builtin-aliases"], [660, 0, 1, "cmdoption-tblgen-gen-arm-cde-builtin-codegen", "-gen-arm-cde-builtin-codegen"], [660, 0, 1, "cmdoption-tblgen-gen-arm-cde-builtin-def", "-gen-arm-cde-builtin-def"], [660, 0, 1, "cmdoption-tblgen-gen-arm-cde-builtin-sema", "-gen-arm-cde-builtin-sema"], [660, 0, 1, "cmdoption-tblgen-gen-arm-cde-header", "-gen-arm-cde-header"], [660, 0, 1, "cmdoption-tblgen-gen-arm-fp16", "-gen-arm-fp16"], [660, 0, 1, "cmdoption-tblgen-gen-arm-mve-builtin-aliases", "-gen-arm-mve-builtin-aliases"], [660, 0, 1, "cmdoption-tblgen-gen-arm-mve-builtin-codegen", "-gen-arm-mve-builtin-codegen"], [660, 0, 1, "cmdoption-tblgen-gen-arm-mve-builtin-def", "-gen-arm-mve-builtin-def"], [660, 0, 1, "cmdoption-tblgen-gen-arm-mve-builtin-sema", "-gen-arm-mve-builtin-sema"], [660, 0, 1, "cmdoption-tblgen-gen-arm-mve-header", "-gen-arm-mve-header"], [660, 0, 1, "cmdoption-tblgen-gen-arm-neon", "-gen-arm-neon"], [660, 0, 1, "cmdoption-tblgen-gen-arm-neon-sema", "-gen-arm-neon-sema"], [660, 0, 1, "cmdoption-tblgen-gen-arm-neon-test", "-gen-arm-neon-test"], [660, 0, 1, "cmdoption-tblgen-gen-arm-sve-builtin-codegen", "-gen-arm-sve-builtin-codegen"], [660, 0, 1, "cmdoption-tblgen-gen-arm-sve-builtins", "-gen-arm-sve-builtins"], [660, 0, 1, "cmdoption-tblgen-gen-arm-sve-header", "-gen-arm-sve-header"], [660, 0, 1, "cmdoption-tblgen-gen-arm-sve-sema-rangechecks", "-gen-arm-sve-sema-rangechecks"], [660, 0, 1, "cmdoption-tblgen-gen-arm-sve-typeflags", "-gen-arm-sve-typeflags"], [660, 0, 1, "cmdoption-tblgen-gen-asm-matcher", "-gen-asm-matcher"], [660, 0, 1, "cmdoption-tblgen-gen-asm-parser", "-gen-asm-parser"], [660, 0, 1, "cmdoption-tblgen-gen-asm-writer", "-gen-asm-writer"], [660, 0, 1, "cmdoption-tblgen-gen-attr-docs", "-gen-attr-docs"], [660, 0, 1, "cmdoption-tblgen-gen-attrs", "-gen-attrs"], [660, 0, 1, "cmdoption-tblgen-gen-automata", "-gen-automata"], [660, 0, 1, "cmdoption-tblgen-gen-avail-interface-decls", "-gen-avail-interface-decls"], [660, 0, 1, "cmdoption-tblgen-gen-avail-interface-defs", "-gen-avail-interface-defs"], [660, 0, 1, "cmdoption-tblgen-gen-callingconv", "-gen-callingconv"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-ast-visitor", "-gen-clang-attr-ast-visitor"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-classes", "-gen-clang-attr-classes"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-has-attribute-impl", "-gen-clang-attr-has-attribute-impl"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-impl", "-gen-clang-attr-impl"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-list", "-gen-clang-attr-list&quot;"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-node-traverse", "-gen-clang-attr-node-traverse"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-parsed-attr-impl", "-gen-clang-attr-parsed-attr-impl"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-parsed-attr-kinds", "-gen-clang-attr-parsed-attr-kinds"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-parsed-attr-list", "-gen-clang-attr-parsed-attr-list"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-parser-string-switches", "-gen-clang-attr-parser-string-switches"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-pch-read", "-gen-clang-attr-pch-read"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-pch-write", "-gen-clang-attr-pch-write"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-spelling-index", "-gen-clang-attr-spelling-index"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-subject-match-rule-list", "-gen-clang-attr-subject-match-rule-list"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-subject-match-rules-parser-string-switches", "-gen-clang-attr-subject-match-rules-parser-string-switches"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-template-instantiate", "-gen-clang-attr-template-instantiate"], [660, 0, 1, "cmdoption-tblgen-gen-clang-attr-text-node-dump", "-gen-clang-attr-text-node-dump"], [660, 0, 1, "cmdoption-tblgen-gen-clang-basic-reader", "-gen-clang-basic-reader"], [660, 0, 1, "cmdoption-tblgen-gen-clang-basic-writer", "-gen-clang-basic-writer"], [660, 0, 1, "cmdoption-tblgen-gen-clang-comment-command-info", "-gen-clang-comment-command-info"], [660, 0, 1, "cmdoption-tblgen-gen-clang-comment-command-list", "-gen-clang-comment-command-list"], [660, 0, 1, "cmdoption-tblgen-gen-clang-comment-html-named-character-references", "-gen-clang-comment-html-named-character-references"], [660, 0, 1, "cmdoption-tblgen-gen-clang-comment-html-tags", "-gen-clang-comment-html-tags"], [660, 0, 1, "cmdoption-tblgen-gen-clang-comment-html-tags-properties", "-gen-clang-comment-html-tags-properties"], [660, 0, 1, "cmdoption-tblgen-gen-clang-comment-nodes", "-gen-clang-comment-nodes"], [660, 0, 1, "cmdoption-tblgen-gen-clang-data-collectors", "-gen-clang-data-collectors"], [660, 0, 1, "cmdoption-tblgen-gen-clang-decl-nodes", "-gen-clang-decl-nodes"], [660, 0, 1, "cmdoption-tblgen-gen-clang-diag-groups", "-gen-clang-diag-groups"], [660, 0, 1, "cmdoption-tblgen-gen-clang-diags-defs", "-gen-clang-diags-defs"], [660, 0, 1, "cmdoption-tblgen-gen-clang-diags-index-name", "-gen-clang-diags-index-name"], [660, 0, 1, "cmdoption-tblgen-gen-clang-opcodes", "-gen-clang-opcodes"], [660, 0, 1, "cmdoption-tblgen-gen-clang-opencl-builtins", "-gen-clang-opencl-builtins"], [660, 0, 1, "cmdoption-tblgen-gen-clang-sa-checkers", "-gen-clang-sa-checkers"], [660, 0, 1, "cmdoption-tblgen-gen-clang-stmt-nodes", "-gen-clang-stmt-nodes"], [660, 0, 1, "cmdoption-tblgen-gen-clang-test-pragma-attribute-supported-attributes", "-gen-clang-test-pragma-attribute-supported-attributes"], [660, 0, 1, "cmdoption-tblgen-gen-clang-type-nodes", "-gen-clang-type-nodes"], [660, 0, 1, "cmdoption-tblgen-gen-clang-type-reader", "-gen-clang-type-reader"], [660, 0, 1, "cmdoption-tblgen-gen-clang-type-writer", "-gen-clang-type-writer"], [660, 0, 1, "cmdoption-tblgen-gen-compress-inst-emitter", "-gen-compress-inst-emitter"], [660, 0, 1, "cmdoption-tblgen-gen-ctags", "-gen-ctags"], [660, 0, 1, "cmdoption-tblgen-gen-dag-isel", "-gen-dag-isel"], [660, 0, 1, "cmdoption-tblgen-gen-dfa-packetizer", "-gen-dfa-packetizer"], [660, 0, 1, "cmdoption-tblgen-gen-diag-docs", "-gen-diag-docs"], [660, 0, 1, "cmdoption-tblgen-gen-dialect-doc", "-gen-dialect-doc"], [660, 0, 1, "cmdoption-tblgen-gen-directive-decl", "-gen-directive-decl"], [660, 0, 1, "cmdoption-tblgen-gen-directive-gen", "-gen-directive-gen"], [660, 0, 1, "cmdoption-tblgen-gen-directive-impl", "-gen-directive-impl"], [660, 0, 1, "cmdoption-tblgen-gen-disassembler", "-gen-disassembler"], [660, 0, 1, "cmdoption-tblgen-gen-emitter", "-gen-emitter"], [660, 0, 1, "cmdoption-tblgen-gen-enum-decls", "-gen-enum-decls"], [660, 0, 1, "cmdoption-tblgen-gen-enum-defs", "-gen-enum-defs"], [660, 0, 1, "cmdoption-tblgen-gen-enum-from-llvmir-conversions", "-gen-enum-from-llvmir-conversions"], [660, 0, 1, "cmdoption-tblgen-gen-enum-to-llvmir-conversions", "-gen-enum-to-llvmir-conversions"], [660, 0, 1, "cmdoption-tblgen-gen-exegesis", "-gen-exegesis"], [660, 0, 1, "cmdoption-tblgen-gen-fast-isel", "-gen-fast-isel"], [660, 0, 1, "cmdoption-tblgen-gen-global-isel", "-gen-global-isel"], [660, 0, 1, "cmdoption-tblgen-gen-global-isel-combiner", "-gen-global-isel-combiner"], [660, 0, 1, "cmdoption-tblgen-gen-instr-docs", "-gen-instr-docs"], [660, 0, 1, "cmdoption-tblgen-gen-instr-info", "-gen-instr-info"], [660, 0, 1, "cmdoption-tblgen-gen-intrinsic-enums", "-gen-intrinsic-enums"], [660, 0, 1, "cmdoption-tblgen-gen-intrinsic-impl", "-gen-intrinsic-impl"], [660, 0, 1, "cmdoption-tblgen-gen-llvmir-conversions", "-gen-llvmir-conversions"], [660, 0, 1, "cmdoption-tblgen-gen-llvmir-intrinsics", "-gen-llvmir-intrinsics"], [660, 0, 1, "cmdoption-tblgen-gen-op-decls", "-gen-op-decls"], [660, 0, 1, "cmdoption-tblgen-gen-op-defs", "-gen-op-defs"], [660, 0, 1, "cmdoption-tblgen-gen-op-doc", "-gen-op-doc"], [660, 0, 1, "cmdoption-tblgen-gen-opt-docs", "-gen-opt-docs"], [660, 0, 1, "cmdoption-tblgen-gen-opt-parser-defs", "-gen-opt-parser-defs"], [660, 0, 1, "cmdoption-tblgen-gen-opt-rst", "-gen-opt-rst"], [660, 0, 1, "cmdoption-tblgen-gen-pass-decls", "-gen-pass-decls"], [660, 0, 1, "cmdoption-tblgen-gen-pass-doc", "-gen-pass-doc"], [660, 0, 1, "cmdoption-tblgen-gen-pseudo-lowering", "-gen-pseudo-lowering"], [660, 0, 1, "cmdoption-tblgen-gen-register-bank", "-gen-register-bank"], [660, 0, 1, "cmdoption-tblgen-gen-register-info", "-gen-register-info"], [660, 0, 1, "cmdoption-tblgen-gen-rewriters", "-gen-rewriters"], [660, 0, 1, "cmdoption-tblgen-gen-riscv-vector-builtin-codegen", "-gen-riscv-vector-builtin-codegen"], [660, 0, 1, "cmdoption-tblgen-gen-riscv-vector-builtins", "-gen-riscv-vector-builtins"], [660, 0, 1, "cmdoption-tblgen-gen-riscv-vector-header", "-gen-riscv-vector-header"], [660, 0, 1, "cmdoption-tblgen-gen-searchable-tables", "-gen-searchable-tables"], [660, 0, 1, "cmdoption-tblgen-gen-spirv-avail-impls", "-gen-spirv-avail-impls"], [660, 0, 1, "cmdoption-tblgen-gen-spirv-capability-implication", "-gen-spirv-capability-implication"], [660, 0, 1, "cmdoption-tblgen-gen-spirv-enum-avail-decls", "-gen-spirv-enum-avail-decls"], [660, 0, 1, "cmdoption-tblgen-gen-spirv-enum-avail-defs", "-gen-spirv-enum-avail-defs"], [660, 0, 1, "cmdoption-tblgen-gen-spirv-op-utils", "-gen-spirv-op-utils"], [660, 0, 1, "cmdoption-tblgen-gen-spirv-serialization", "-gen-spirv-serialization"], [660, 0, 1, "cmdoption-tblgen-gen-struct-attr-decls", "-gen-struct-attr-decls"], [660, 0, 1, "cmdoption-tblgen-gen-struct-attr-defs", "-gen-struct-attr-defs"], [660, 0, 1, "cmdoption-tblgen-gen-subtarget", "-gen-subtarget"], [660, 0, 1, "cmdoption-tblgen-gen-typedef-decls", "-gen-typedef-decls"], [660, 0, 1, "cmdoption-tblgen-gen-typedef-defs", "-gen-typedef-defs"], [660, 0, 1, "cmdoption-tblgen-gen-x86-EVEX2VEX-tables", "-gen-x86-EVEX2VEX-tables"], [660, 0, 1, "cmdoption-tblgen-gen-x86-fold-tables", "-gen-x86-fold-tables"], [660, 0, 1, "cmdoption-tblgen-gicombiner-show-expansions", "-gicombiner-show-expansions"], [660, 0, 1, "cmdoption-tblgen-gicombiner-stop-after-build", "-gicombiner-stop-after-build"], [660, 0, 1, "cmdoption-tblgen-gicombiner-stop-after-parse", "-gicombiner-stop-after-parse"], [660, 0, 1, "cmdoption-tblgen-gisel-coverage-file", "-gisel-coverage-file"], [660, 0, 1, "cmdoption-tblgen-help", "-help"], [660, 0, 1, "cmdoption-tblgen-help-list", "-help-list"], [660, 0, 1, "cmdoption-tblgen-instrument-coverage", "-instrument-coverage"], [660, 0, 1, "cmdoption-tblgen-instrument-gisel-coverage", "-instrument-gisel-coverage"], [660, 0, 1, "cmdoption-tblgen-intrinsic-prefix", "-intrinsic-prefix"], [660, 0, 1, "cmdoption-tblgen-llvmir-intrinsics-filter", "-llvmir-intrinsics-filter"], [660, 0, 1, "cmdoption-tblgen-long-string-literals", "-long-string-literals"], [660, 0, 1, "cmdoption-tblgen-match-prefix", "-match-prefix"], [660, 0, 1, "cmdoption-tblgen-name", "-name"], [660, 0, 1, "cmdoption-tblgen-null-backend", "-null-backend"], [660, 0, 1, "cmdoption-tblgen-o", "-o"], [660, 0, 1, "cmdoption-tblgen-omit-comments", "-omit-comments"], [660, 0, 1, "cmdoption-tblgen-op-exclude-regex", "-op-exclude-regex"], [660, 0, 1, "cmdoption-tblgen-op-include-regex", "-op-include-regex"], [660, 0, 1, "cmdoption-tblgen-optimize-match-table", "-optimize-match-table"], [660, 0, 1, "cmdoption-tblgen-print-detailed-records", "-print-detailed-records"], [660, 0, 1, "cmdoption-tblgen-print-enums", "-print-enums"], [660, 0, 1, "cmdoption-tblgen-print-records", "-print-records"], [660, 0, 1, "cmdoption-tblgen-print-sets", "-print-sets"], [660, 0, 1, "cmdoption-tblgen-register-info-debug", "-register-info-debug"], [660, 0, 1, "cmdoption-tblgen-stats", "-stats"], [660, 0, 1, "cmdoption-tblgen-time-phases", "-time-phases"], [660, 0, 1, "cmdoption-tblgen-typedefs-dialect", "-typedefs-dialect"], [660, 0, 1, "cmdoption-tblgen-version", "-version"], [660, 0, 1, "cmdoption-tblgen-warn-on-skipped-patterns", "-warn-on-skipped-patterns"], [660, 0, 1, "cmdoption-tblgen-write-if-changed", "-write-if-changed"], [660, 0, 1, "cmdoption-tblgen-arg-gen-lldb-option-defs", "gen-lldb-option-defs"], [660, 0, 1, "cmdoption-tblgen-arg-gen-lldb-property-defs", "gen-lldb-property-defs"], [660, 0, 1, "cmdoption-tblgen-arg-gen-lldb-property-enum-defs", "gen-lldb-property-enum-defs"]]}, "objnames": {"0": ["std", "cmdoption", "option du programme"]}, "objtypes": {"0": "std:cmdoption"}, "terms": {"0": [17, 20, 22, 27, 30, 78, 85, 120, 121, 123, 125, 129, 171, 176, 209, 210, 212, 213, 215, 220, 223, 266, 271, 279, 280, 288, 291, 294, 295, 296, 306, 308, 314, 352, 370, 371, 373, 378, 380, 436, 479, 480, 482, 483, 485, 490, 493, 542, 549, 584, 585, 586, 587, 588, 589, 590, 591, 594, 595, 596, 597, 599, 600, 602, 603, 606, 608, 611, 612, 613, 615, 617, 618, 620, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 657, 659, 660, 662, 665, 666, 668, 670, 672, 673, 675, 676, 677, 680, 683, 685, 689, 690, 692, 693, 699, 700, 701, 702, 707, 708, 710, 713, 714, 715, 716, 717, 718, 719, 721, 722, 726, 727, 729, 730, 731, 732, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 751, 752, 753, 757, 759, 761, 764, 765, 766, 767, 768, 770, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820], "00": [632, 640, 666, 701, 715, 721, 740, 749, 810, 811, 812, 814], "000": 765, "0000": [689, 775, 788], "00000": 689, "000000": [779, 786, 790, 811, 813], "00000000041516c6": 790, "00000006": 765, "000000e": [810, 811, 812, 814], "000001": 790, "000002": 790, "000003": 790, "000006": 790, "000007": 790, "000008": 790, "000010": 790, "000014": 790, "000016": 790, "000017": 790, "000018": 790, "000019": 790, "000023": 790, "00002fc0": 790, "000032": 790, "000035": 790, "000037": 790, "000041": 790, "000046": 790, "000049": 790, "000050": 790, "000063": 790, "000075": 790, "0001": 788, "00010010": 715, "000102030405060708090a0b0c0d0e0f": 715, "000106": 790, "000120": 790, "000123": 790, "000138": 790, "000155": 790, "000156": 790, "000214": 790, "000215": 790, "0003": 788, "000302": 790, "000310": 790, "000342": 790, "0004": 788, "000471": 790, "0005": 788, "000562": 790, "0007": 788, "000737": 790, "000774": 790, "000799": 790, "0008": 753, "001": 598, "00100001": 715, "00110101": 715, "001375": 790, "001596": 790, "003400": 779, "004523": 790, "0050": 775, "0058": 632, "00n": 666, "01": [590, 632, 666, 701, 715, 766, 779, 811, 812, 814], "010": 590, "01010011": 715, "0106": 775, "011": 598, "011200": 779, "012345": 640, "0123456789": 640, "0152": 651, "0156": 775, "01pi0": 589, "02": [632, 666, 813], "03": [663, 813], "03d516c6": 790, "04": [651, 683, 810, 813], "041688": 751, "041721": 751, "041739": 751, "0462": 779, "049886": 751, "04e": 715, "05": [603, 717, 813], "06": [603, 663, 666], "0625": 715, "062624": 790, "067200": 779, "07": [640, 666, 791, 813], "07b": 663, "08": 789, "0a": 715, "0b": [590, 663, 776], "0b000000": 786, "0b00000000": 715, "0b000011": 786, "0b000100": 786, "0b000111": 786, "0b0011": [589, 598], "0b01101101": 715, "0b01111000": 715, "0b100": 776, "0b10000000": 715, "0b101": 776, "0b1010": [589, 590], "0b10110110": 715, "0b111": 776, "0b11100001": 715, "0b1111": 589, "0b11111110": 715, "0b11111111": 715, "0baz": 749, "0c": 666, "0cleanup": 673, "0dev": 779, "0e": 715, "0f": [666, 729], "0f00000000": 729, "0f0d0ed1c78f": 686, "0f3f800000": 729, "0f3fb8aa3b": 729, "0f42d20000": 729, "0f7f800000": 729, "0fb5bfbe8": 729, "0fbf317200": 729, "0fc2d20000": 729, "0ffh": 590, "0git": 707, "0th": 681, "0u": [689, 765], "0x": [590, 591, 612, 621, 661, 692, 715, 765, 775, 776], "0x0": [591, 598, 608, 735, 749], "0x00": [591, 666, 735, 768, 776], "0x000": 591, "0x0000": [586, 591, 743], "0x00000": 692, "0x000000": 692, "0x00000000": [591, 765], "0x0000000000000000": 591, "0x0000000000000010": 765, "0x0000000001f2dc7a": 668, "0x0000000001f2fc2f": 668, "0x00000000029bdb45": 668, "0x0000000002a8306": 668, "0x0000000004589ff8": 668, "0x000000000458ed10": 668, "0x00000000046122f0": 668, "0x00000000ffefffff": 590, "0x00000001": 765, "0x00000002": 765, "0x00000003": 765, "0x00000004": 765, "0x00000009": 765, "0x0000002a": 668, "0x00000064": 765, "0x00000067": 765, "0x0000006e": 765, "0x00000083": 765, "0x000000c9": 612, "0x000000ff": 692, "0x00000100": 765, "0x00000110": 765, "0x00000120": 765, "0x00000130": 765, "0x00000140": 765, "0x00000147": 765, "0x00000150": 765, "0x00000233": 612, "0x000003bd": 765, "0x000003cd": 765, "0x000003f3": 765, "0x000003ff": 608, "0x00000ff0": 692, "0x00001000": 765, "0x00001023": 765, "0x00001203": 765, "0x00001c00": 608, "0x00002000": 765, "0x00002023": 765, "0x00002200": 765, "0x000034f0": 765, "0x00003500": 765, "0x00003550": 765, "0x00007fff": 608, "0x00007ffff788c09b": 668, "0x00007ffff7fd0007": 668, "0x00007ffff7fd003c": 668, "0x00007ffff7fd0095": 668, "0x00007ffff7fd0098": 668, "0x00007fffffffc798": 668, "0x00007fffffffe108": 668, "0x00007fffffffe118": 668, "0x00007fffffffe140": 668, "0x0000fef": 612, "0x0001": [586, 591], "0x0001023": 765, "0x0002": [586, 591], "0x0002023": 765, "0x0003": [586, 591, 743], "0x0004": [586, 591], "0x0007": 743, "0x0008": 743, "0x001": 591, "0x0010": 743, "0x0011": 743, "0x0012": 743, "0x0013": 743, "0x0014": 743, "0x002": 591, "0x0020": 743, "0x0021": 743, "0x0022": 743, "0x0023": 743, "0x0024": 743, "0x003": 591, "0x0030": 743, "0x0031": 743, "0x0032": 743, "0x0033": 743, "0x0034": 743, "0x004": 591, "0x0040": 743, "0x0041": 743, "0x0042": 743, "0x0043": 743, "0x0044": 743, "0x0045": 743, "0x0046": 743, "0x005": 591, "0x0050": 743, "0x0051": 743, "0x0052": 743, "0x0053": 743, "0x0054": 743, "0x0055": 743, "0x0056": 743, "0x006": 591, "0x0068": 743, "0x0069": 743, "0x007": 591, "0x0070": 743, "0x0071": 743, "0x0072": 743, "0x0073": 743, "0x0074": 743, "0x0075": 743, "0x0076": 743, "0x0077": 743, "0x0078": 743, "0x0079": 743, "0x007a": 743, "0x007b": 743, "0x008": 591, "0x009": 591, "0x00a": 591, "0x00b": 591, "0x00c": 591, "0x00d": 591, "0x00e": 591, "0x00f": 591, "0x00ff0000": 608, "0x01": [591, 666, 735, 765, 777, 791], "0x010": 591, "0x011": 591, "0x01f": 591, "0x02": [591, 666, 735, 765, 776], "0x020": 591, "0x021": 591, "0x022": 591, "0x023": 591, "0x024": 591, "0x025": 591, "0x026": 591, "0x027": 591, "0x028": 591, "0x029": 591, "0x02a": 591, "0x02b": 591, "0x02c": 591, "0x02d": 591, "0x02e": 591, "0x02f": 591, "0x03": [591, 735, 768], "0x030": 591, "0x031": 591, "0x032": 591, "0x033": 591, "0x034": 591, "0x035": 591, "0x036": 591, "0x037": 591, "0x038": 591, "0x039": 591, "0x03a": 591, "0x03b": 591, "0x03c": 591, "0x03d": 591, "0x03e": 591, "0x03f": 591, "0x04": [591, 735, 765, 776, 791], "0x040": 591, "0x04000000": 765, "0x041": 591, "0x042": 591, "0x043": 591, "0x044": 591, "0x045": 591, "0x05": [591, 735, 768], "0x06": [591, 735, 768], "0x07": [591, 735, 768], "0x08": [591, 735, 765], "0x09": 735, "0x0a": [735, 768], "0x0abcd": 715, "0x0b": [735, 768], "0x0b17c0de": 598, "0x0c": [666, 735], "0x0d": 768, "0x0e": 768, "0x0f": 768, "0x0f0": 692, "0x0ff": [591, 692], "0x0fffff": 590, "0x0fffffff": 791, "0x1": [589, 591, 608, 749, 765, 768, 774], "0x10": [27, 129, 220, 378, 490, 585, 589, 632, 735, 765, 768], "0x100": [591, 735, 765, 766], "0x1000": [743, 765], "0x100000": 590, "0x10000000": 591, "0x10000001": 591, "0x10000002": 591, "0x10000003": 591, "0x10000004": 591, "0x10000005": 591, "0x10000006": 591, "0x1000000a": 591, "0x1000000b": 591, "0x1000000c": 591, "0x1000000d": 591, "0x1000000f": 591, "0x10000010": 591, "0x10000011": 591, "0x10000015": 591, "0x100000f24": 655, "0x12": [27, 129, 220, 378, 490, 715], "0x1234": [731, 765], "0x12345678": 765, "0x1235": 715, "0x13": 735, "0x14": 774, "0x14c": [736, 820], "0x16": 735, "0x1881": [20, 123, 212, 370, 482], "0x1afp": 590, "0x1c2": 675, "0x1e": 598, "0x1f84": 655, "0x1ff00": 590, "0x2": [589, 608, 749, 768, 774], "0x20": 765, "0x200": [591, 765, 766], "0x2000": [591, 765], "0x20000": 591, "0x2001": 586, "0x2002": 586, "0x20117e": 643, "0x21": 715, "0x2413bc": 788, "0x25": 643, "0x29273623": 765, "0x2a": [597, 700], "0x3": [589, 608, 749, 768, 774], "0x30": 586, "0x300": 591, "0x3000": 645, "0x3039": 749, "0x31": 586, "0x35": 715, "0x3c00": 590, "0x3e0": 586, "0x3e08": 586, "0x3e09": 586, "0x3e0b": 586, "0x3e0c": 586, "0x3f": 675, "0x3f800000": 590, "0x3fe": 765, "0x3fe9": 765, "0x3feaed548f090ce": 811, "0x3feb": 765, "0x3fed": 765, "0x4": [589, 608, 651, 768, 774], "0x40": 765, "0x400": [591, 765, 766], "0x4000": [645, 765], "0x40000000": 721, "0x400480": 655, "0x400486": 655, "0x400490": 655, "0x4004a0": 655, "0x4004b0": 655, "0x4004b6": 655, "0x4004be": 655, "0x4004d0": 655, "0x401167": 655, "0x4200": 765, "0x432ff973cafa8000": 715, "0x45": 700, "0x45c2cb0": 668, "0x494e494d": 741, "0x4c": 774, "0x4d544f4e": 741, "0x5": [608, 735, 768, 774], "0x53": 715, "0x5321": 715, "0x55585c0867ba": 700, "0x55585c0af787": 700, "0x55585c0af7b3": 700, "0x55585c0af7cf": 700, "0x55585c0afa55": 700, "0x57": 700, "0x5cf8c24cdb18bdac": 666, "0x6": [608, 774], "0x601028": 655, "0x60500020": 820, "0x6a": 651, "0x6fff4c02": 675, "0x7": 608, "0x70b298": 788, "0x744e60": 717, "0x744ea0": 717, "0x7c000000": 765, "0x7f": 715, "0x7fecc966952b": 700, "0x7feccab26000": 700, "0x7fefffff00000000": 590, "0x7fefffffffffffff": 590, "0x7fff": 591, "0x7fffffff": 715, "0x8": [589, 608, 735, 749], "0x80": [689, 765, 774], "0x800": [591, 765], "0x8000": [586, 591], "0x80000000": [591, 765], "0x8100": 586, "0x82638293": 765, "0x83": 700, "0x8664": 736, "0x9": [608, 749], "0x90": 770, "0x9f": 700, "0xa": [591, 608, 749, 774], "0xa0463440": 612, "0xa0463443": 612, "0xa0463447": 612, "0xabcdef00": 770, "0xac": 774, "0xb": 608, "0xbeef": 585, "0xc": [598, 608, 612], "0xc00": 591, "0xc3": 776, "0xd": [598, 608, 735, 774], "0xe": [586, 598], "0xe1": 586, "0xe2": 586, "0xe3": 586, "0xe4": 586, "0xe5": 586, "0xe6": 586, "0xe7": 586, "0xe8": [586, 776], "0xe9": 586, "0xeb": [586, 700], "0xec": 586, "0xeffe0000": 736, "0xf": [589, 757, 774, 776], "0xf00d": 585, "0xfc": 591, "0xfe": 591, "0xfef": 612, "0xff": [589, 590, 591, 715, 776], "0xff0": 692, "0xff00": 590, "0xffbef174": 788, "0xffefffff": 590, "0xffefffff00000000": 590, "0xfff": 589, "0xfff8000000000000": 715, "0xffff": [20, 27, 120, 123, 129, 209, 212, 220, 314, 370, 378, 479, 482, 490, 584, 586, 589, 590, 591, 715, 736, 768], "0xffff000000000002": 768, "0xfffff": 590, "0xfffffffc": 590, "0xffffffff": [585, 586, 590, 591, 598, 715], "0xffffffffffefffff": 590, "0xffffffffffff00ff": 590, "0xffffffffffffff00": 590, "0xffffffffffffffff": [585, 586], "0xh": 715, "0xk": 715, "0xl": 715, "0xl00000000000000004000900000000000": 715, "0xm": 715, "0xr": 715, "0xxxxxxxxx": 765, "1": [10, 11, 12, 13, 15, 16, 20, 27, 30, 32, 36, 39, 42, 43, 48, 50, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 69, 71, 73, 74, 75, 76, 77, 80, 82, 83, 84, 85, 87, 88, 90, 93, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 113, 114, 115, 116, 117, 120, 123, 129, 134, 139, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 160, 162, 163, 164, 166, 169, 170, 173, 175, 176, 178, 179, 181, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 209, 212, 213, 220, 223, 226, 229, 234, 236, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 257, 259, 263, 264, 265, 268, 270, 271, 273, 274, 276, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 311, 314, 317, 318, 319, 322, 323, 324, 328, 329, 330, 331, 332, 334, 335, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 361, 362, 365, 370, 371, 378, 380, 382, 386, 389, 392, 397, 399, 403, 404, 405, 406, 407, 411, 412, 414, 421, 423, 427, 428, 429, 431, 433, 434, 435, 436, 438, 439, 441, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 467, 469, 470, 471, 472, 473, 474, 478, 479, 482, 483, 490, 493, 495, 499, 502, 505, 510, 512, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 533, 535, 539, 540, 541, 544, 546, 547, 548, 549, 551, 552, 554, 557, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 574, 577, 578, 579, 580, 581, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 604, 607, 608, 610, 611, 612, 613, 615, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 633, 634, 636, 638, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 654, 655, 657, 661, 662, 663, 664, 665, 666, 668, 669, 670, 673, 675, 676, 677, 679, 680, 683, 686, 688, 689, 690, 692, 693, 694, 698, 699, 700, 701, 703, 704, 707, 710, 711, 713, 714, 715, 717, 719, 721, 723, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 738, 740, 741, 743, 744, 745, 746, 747, 748, 749, 752, 753, 755, 757, 758, 759, 761, 765, 768, 770, 774, 777, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820], "10": [20, 27, 123, 129, 212, 220, 370, 378, 482, 490, 590, 591, 594, 596, 598, 600, 606, 608, 611, 612, 639, 640, 646, 651, 655, 666, 668, 681, 683, 686, 689, 700, 701, 707, 710, 715, 718, 729, 733, 736, 740, 749, 758, 759, 765, 766, 774, 786, 788, 790, 792, 809, 810, 811, 812, 813, 814, 815, 816, 818], "100": [120, 209, 314, 479, 584, 591, 595, 611, 639, 640, 646, 680, 689, 690, 700, 715, 717, 719, 765, 775, 785, 788, 812, 813, 814, 815, 816], "1000": [717, 740, 746, 817, 818], "10000": [632, 727], "10010001": 715, "101": 775, "10110": 689, "102": [590, 640, 775, 790], "1020": [608, 715], "1023": [591, 608], "1024": [591, 608, 661, 715, 740, 785], "1025": 608, "102593": 790, "1026": 608, "102kb": 661, "103": [591, 790], "1030": 715, "104": 590, "1054": 653, "106": [590, 651], "1066": 653, "108055": 790, "1083": 790, "1087": 591, "1088": 591, "109": [640, 776], "10m": 717, "10th": 763, "10x": [662, 728], "11": [20, 27, 120, 123, 212, 314, 370, 479, 482, 584, 589, 591, 595, 598, 606, 608, 611, 640, 655, 662, 668, 689, 700, 710, 715, 729, 733, 736, 740, 759, 761, 763, 765, 785, 786, 789, 790, 792, 813, 814, 815, 816], "110": [598, 790], "1101": 653, "1108": 816, "111": [591, 729, 779], "1110": 598, "11111": 689, "111111": 689, "1112": 653, "112": [591, 764], "1123": 653, "1124": 685, "1129": [591, 816], "113": 715, "1130": [591, 653], "114": [651, 685], "1141": 653, "1183": 816, "1184": 816, "12": [209, 589, 590, 591, 598, 606, 608, 611, 612, 640, 645, 651, 655, 666, 668, 683, 700, 710, 714, 715, 717, 721, 729, 731, 733, 736, 738, 740, 743, 749, 765, 770, 779, 780, 786, 792, 813, 814, 815, 816], "120": [591, 668, 715, 776, 811], "1200": 717, "1210": 816, "1218": 816, "122": 715, "1222": 779, "123": [715, 721, 727, 765, 790, 813, 814], "12303": 775, "1234": [590, 591, 655], "12345": [707, 749, 751], "1234567": 715, "123908342": 749, "123kkk": 661, "123mb": 661, "124": [728, 790], "125": [686, 715, 751, 790], "125000e": 715, "126": 651, "126744": 790, "127": [589, 591, 715], "127715": 790, "128": [34, 132, 225, 384, 497, 589, 591, 597, 598, 608, 666, 715, 719, 729, 741, 743, 749, 757, 774, 786], "128974848": 661, "128mib": 675, "129": 591, "1298": 749, "129894": 753, "129907": 753, "129920": 753, "129923": 753, "129926": 753, "129934": 753, "129941": 753, "129996": 749, "12x10": 715, "13": [84, 175, 270, 435, 548, 589, 591, 598, 606, 608, 640, 666, 668, 683, 700, 710, 715, 729, 733, 736, 759, 763, 765, 774, 781, 785, 786, 788, 791, 814, 815, 816], "130": [715, 790], "130111": 753, "130179": 753, "130181": 753, "130213": 753, "130214": 753, "130228": 753, "130229": 753, "130249": 753, "130266": 753, "130292": 753, "130304": 753, "130306": 753, "130309": 753, "130310": 753, "130312": 753, "130313": 753, "130318": 753, "130320": 753, "130323": 753, "130328": 753, "130329": 753, "130353": 753, "130355": 753, "130388": 753, "130415": 753, "130425": 753, "130430": 753, "130435": 753, "130465": 753, "130629": 753, "130630": 753, "1329373163": 715, "133700e": 810, "134": 749, "138": [749, 790], "1388": 775, "139": 790, "139563": 790, "139605": 790, "139607": 790, "139610": 790, "139612": 790, "139617": 790, "14": [120, 479, 584, 591, 598, 606, 608, 611, 655, 662, 668, 700, 710, 721, 728, 729, 733, 761, 765, 775, 786, 790, 809], "1401": 775, "1402264": 753, "1404": 775, "14159": 591, "14159f": 591, "142": 790, "143": 591, "1439": 816, "144": 715, "1444": 749, "1447": 775, "1459": 816, "147345": 790, "14740650423002898831": 715, "1491": 790, "15": [20, 27, 120, 123, 129, 209, 212, 213, 220, 314, 370, 371, 378, 479, 482, 483, 490, 584, 589, 591, 598, 599, 607, 611, 655, 666, 668, 683, 701, 710, 715, 721, 727, 729, 733, 740, 759, 765, 768, 774, 775, 776, 791], "15155600": 790, "1523017872": 717, "1530": 790, "1535": 591, "1536": 591, "1560": 775, "1564": 790, "1565878005": 715, "159": 591, "15915494": 590, "15915494309189532": 590, "1592": 590, "159279": 790, "15gb": 606, "15mb": 751, "15th": 589, "16": [19, 23, 24, 27, 44, 84, 98, 112, 114, 117, 126, 127, 129, 135, 175, 205, 216, 217, 220, 230, 270, 279, 280, 288, 290, 291, 294, 295, 296, 306, 308, 309, 310, 315, 320, 325, 337, 359, 366, 369, 374, 375, 378, 393, 416, 435, 449, 462, 470, 486, 487, 490, 506, 548, 562, 576, 578, 580, 588, 589, 590, 591, 595, 597, 598, 608, 612, 639, 640, 651, 662, 665, 668, 675, 683, 689, 700, 701, 710, 715, 717, 721, 725, 729, 733, 735, 736, 743, 748, 749, 759, 761, 765, 768, 770, 774, 776, 779, 783, 786, 791, 792, 815], "160": [591, 715], "1600": 715, "16000": 740, "162": 651, "164": 790, "16628590": 790, "16777216": 715, "16777217": 715, "1681": 790, "16b": 597, "16bit": 815, "16gb": [685, 701], "16mib": 675, "17": [591, 598, 601, 606, 640, 661, 666, 668, 681, 683, 700, 715, 733, 761, 765, 776, 816], "171": 585, "172": 774, "1723": 790, "175": 591, "1789": 775, "1791": [591, 775], "1792": 591, "18": [591, 598, 640, 655, 668, 715, 729, 733, 765, 786], "182": [585, 651], "1829": 775, "1840": 775, "187": 790, "188": 790, "18th": 681, "19": [591, 598, 667, 668, 680, 683, 701, 715, 733, 765, 780, 786], "191": 591, "1967": 790, "1980": 755, "1981": 669, "1984": 790, "1987": 669, "1989": 680, "199": 651, "1991": 755, "1994": 680, "19941610": 741, "19950410": 743, "19950623": 741, "19950814": 741, "19951122": 743, "19960307": [736, 741], "19961031": 743, "1997": 667, "19970604": 741, "19970605": 736, "19970606": 736, "19990604": 741, "19990903": [736, 743], "1a": 740, "1afp10": 590, "1b": 717, "1cleanup": 673, "1cy": 640, "1d": 589, "1d_array": 589, "1dx": 666, "1g": [661, 702], "1gb": 751, "1st": 670, "1u": 765, "2": [20, 24, 27, 30, 31, 33, 35, 37, 40, 42, 45, 49, 60, 70, 72, 74, 81, 82, 85, 89, 91, 92, 96, 97, 101, 103, 104, 111, 117, 119, 120, 123, 127, 129, 133, 136, 140, 145, 147, 154, 161, 165, 167, 168, 174, 175, 176, 177, 180, 182, 183, 186, 187, 190, 193, 200, 204, 205, 208, 209, 212, 213, 217, 220, 223, 224, 227, 231, 235, 244, 252, 258, 260, 261, 262, 269, 270, 271, 272, 275, 277, 278, 279, 280, 282, 286, 287, 291, 293, 294, 295, 296, 298, 305, 310, 313, 314, 341, 351, 352, 363, 370, 371, 375, 378, 380, 381, 383, 385, 387, 390, 394, 398, 409, 410, 413, 422, 424, 425, 426, 432, 433, 435, 436, 437, 440, 442, 443, 447, 448, 452, 454, 460, 468, 472, 475, 477, 479, 482, 483, 487, 490, 493, 494, 496, 498, 500, 503, 507, 511, 522, 529, 534, 536, 537, 538, 545, 546, 548, 549, 550, 553, 555, 556, 560, 561, 565, 567, 568, 575, 580, 583, 584, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 600, 604, 606, 607, 608, 611, 612, 617, 626, 628, 629, 638, 640, 641, 645, 646, 651, 655, 662, 663, 665, 666, 668, 669, 670, 672, 673, 675, 677, 680, 681, 682, 683, 686, 688, 689, 690, 692, 693, 694, 699, 700, 701, 703, 704, 710, 714, 715, 717, 719, 721, 724, 726, 727, 729, 731, 733, 735, 736, 738, 740, 741, 743, 744, 745, 746, 748, 749, 753, 755, 757, 758, 759, 761, 763, 765, 770, 774, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 794, 796, 797, 808, 810, 811, 812, 813, 814, 815, 816, 818, 820], "20": [56, 405, 518, 585, 590, 591, 598, 600, 601, 606, 608, 611, 612, 617, 639, 640, 668, 680, 683, 686, 701, 704, 715, 717, 724, 729, 733, 765, 774, 779, 791, 809, 810, 811, 812, 813, 814, 815, 816], "200": [591, 700, 789], "2000": [589, 591, 788], "20000": 770, "200000e": 812, "20000404": 741, "2002": 608, "20030901": 741, "2004": 608, "20040203": 743, "2008": [591, 689, 715, 755], "20091201": [736, 741], "2010": 606, "2011": [751, 755], "2012": [675, 749, 792], "2013": [720, 736, 749], "20140508": 741, "20140516": 736, "2015": [697, 717, 755], "2016": [662, 697, 726, 751, 755, 789], "2017": [675, 679, 695, 697, 717, 755, 791], "2018": [689, 715, 725, 766, 789], "2019": [603, 610, 683, 685, 697, 725, 751, 753, 757], "2020": [686, 701, 726, 747, 763], "2021": [585, 701], "2022": [685, 732, 763], "203": 651, "2047": [589, 591], "2048": [589, 591, 608, 717, 740], "207": 591, "209": 651, "2097496": 651, "20th": 763, "21": [55, 404, 517, 590, 591, 598, 608, 666, 668, 685, 699, 715, 729, 733, 751, 765, 786, 790], "2100": 591, "2101248": 651, "2105344": 651, "2105360": 651, "212": 602, "213": 602, "213336": 790, "21340": 668, "214": 602, "2147483648": [715, 729], "215": 602, "216": 602, "21649": 685, "217": 602, "2192": 779, "22": [591, 598, 668, 715, 729, 733, 765, 774, 786, 790], "2200": 591, "2200g": 591, "223": 591, "224": 591, "225": 715, "225708": 790, "22c": 653, "23": [589, 591, 598, 608, 666, 715, 757, 765, 786, 808], "2303": 591, "2304": 591, "2308": 775, "231150": 765, "231154": 765, "2317": 775, "23333": 678, "234": [590, 657, 810], "234000e": 810, "23421e": 715, "234e2": 590, "235": [657, 715], "236": 653, "239": 591, "24": [589, 591, 598, 608, 610, 640, 651, 665, 715, 721, 729, 749, 751, 757, 760, 765, 786, 792, 811], "240": 809, "2400g": 591, "241": 653, "242": [675, 790], "2468601609": 715, "247": 715, "248": 749, "24a": 653, "24e8": 749, "24mb": 717, "25": [591, 598, 715, 746, 749, 779, 786, 789], "250": 751, "2500": 591, "250000e": 721, "253": 653, "254": 715, "255": [589, 590, 591, 608, 668, 715, 765, 808, 809, 810, 811, 812, 813, 814, 815, 816], "2559": 591, "256": [589, 590, 591, 608, 675, 715, 733, 765], "2560": 591, "257": [608, 715], "258": [608, 653], "2590": 600, "25mb": 717, "26": [585, 591, 598, 651, 715, 729, 765], "260": 591, "2601000000": 790, "26096": 790, "260x": 591, "261": 653, "264": 651, "2692": 790, "27": [586, 591, 598, 729, 749], "2700": 775, "271": 790, "272": [591, 640], "28": [591, 598, 666, 715, 729, 791], "281474976710654": 768, "2815": 591, "2816": 591, "2817": 749, "285": 591, "2882400000": 770, "29": [586, 591, 598, 608, 666, 757, 766, 786, 790], "290": 591, "2900": 715, "290x": 591, "2919": 749, "294": 651, "2963": 790, "297": 640, "2ap3": 675, "2b": 717, "2d": [589, 597], "2d_array": 589, "2d_msa": 589, "2d_msaa_array": 589, "2fstrip": 654, "2gb": 766, "2n": 715, "2nd": [670, 715, 717, 749], "2u": 765, "2x": [698, 700, 717, 766], "2x3x4": 715, "3": [27, 30, 95, 105, 109, 120, 129, 171, 175, 185, 194, 198, 209, 213, 220, 223, 266, 270, 279, 285, 295, 299, 303, 314, 371, 378, 380, 435, 446, 455, 466, 479, 483, 490, 493, 542, 548, 559, 569, 573, 584, 588, 589, 590, 591, 597, 598, 600, 606, 607, 608, 611, 612, 617, 640, 645, 655, 661, 662, 663, 665, 666, 668, 670, 673, 676, 680, 681, 683, 685, 688, 689, 692, 693, 700, 702, 704, 705, 707, 710, 712, 714, 715, 717, 719, 721, 724, 726, 727, 728, 729, 731, 733, 736, 738, 740, 743, 744, 746, 749, 752, 755, 758, 759, 765, 766, 768, 774, 777, 779, 780, 781, 782, 783, 785, 786, 787, 788, 790, 791, 792, 794, 795, 797, 808, 809, 811, 812, 813, 814, 815, 816, 818, 820], "30": [24, 127, 217, 375, 487, 589, 591, 598, 608, 612, 639, 640, 651, 701, 715, 717, 729, 759, 765, 766, 779, 786, 791, 813, 814, 815, 816], "300": [617, 640, 715], "3000": [591, 749], "302": 780, "305064": 672, "306": 640, "3069": 790, "3071": 591, "3072": 591, "308": 668, "30pm": 792, "30th": 763, "31": [20, 78, 123, 171, 209, 212, 266, 370, 482, 542, 585, 586, 589, 591, 598, 608, 668, 700, 715, 766, 786], "31027": 700, "3120": 775, "31337": 810, "314": 640, "3148790418": 715, "31511": 717, "315994": 790, "31st": 763, "32": [17, 20, 24, 32, 42, 51, 74, 82, 83, 86, 96, 97, 98, 110, 112, 114, 121, 123, 127, 142, 145, 186, 187, 199, 210, 212, 217, 237, 286, 287, 288, 304, 306, 308, 351, 355, 360, 367, 370, 375, 382, 400, 417, 433, 434, 447, 448, 449, 463, 467, 470, 480, 482, 487, 495, 513, 546, 547, 560, 561, 562, 574, 576, 578, 588, 589, 590, 595, 597, 598, 600, 606, 608, 612, 624, 640, 651, 662, 663, 665, 666, 673, 674, 675, 683, 685, 689, 701, 713, 715, 717, 721, 729, 735, 736, 738, 741, 743, 757, 758, 761, 765, 766, 768, 774, 776, 777, 783, 786, 790, 791, 813, 815, 817], "32088": 790, "321": 685, "3213": 749, "3221225472": 661, "32768": [21, 23, 24, 124, 126, 127, 214, 216, 217, 372, 374, 375, 484, 486, 487, 740], "32bit": 815, "32gb": 606, "33": [598, 729, 759, 780, 786], "3327": 591, "3328": 591, "3340b": 591, "335": 736, "3363": 790, "339450": 779, "34": [598, 666, 786], "343": 775, "345": 749, "348": 775, "35": [598, 640, 701, 715, 749], "350": 752, "351": [591, 752], "352": [591, 752], "357": 752, "358": 752, "3583": 591, "359": 752, "36": [598, 729, 766], "360": [752, 790], "362": 752, "363": 752, "36652": 790, "367": 752, "37": [598, 608, 715, 790], "370": 752, "371": 752, "3714": 790, "372": 752, "376": 752, "377": 715, "38": [585, 598, 602, 715, 790], "380": 591, "3800": 591, "381": 790, "3811": 717, "3827": 717, "383": 591, "384": 591, "385": 591, "3868": 775, "387": [668, 715], "39": [598, 685, 715, 729], "392": 749, "39331465": 790, "39337525": 790, "3963": 717, "399": [640, 790], "3cy": 640, "3d": [589, 591], "3dnow": 815, "3g": 661, "3gb": 685, "3pm": 682, "3rd": [670, 682, 687, 715, 717, 765, 794], "3u": 765, "3x4": 715, "4": [20, 24, 27, 34, 38, 41, 46, 66, 67, 68, 78, 93, 94, 97, 98, 99, 106, 108, 112, 113, 114, 117, 118, 120, 123, 127, 129, 132, 137, 157, 158, 159, 175, 184, 187, 188, 191, 195, 197, 201, 202, 205, 207, 209, 212, 217, 220, 225, 228, 232, 254, 255, 256, 270, 280, 283, 284, 287, 288, 289, 296, 300, 302, 306, 307, 308, 310, 312, 314, 349, 358, 364, 370, 375, 378, 384, 388, 391, 395, 415, 419, 420, 435, 444, 445, 448, 449, 450, 456, 461, 465, 469, 470, 476, 479, 482, 487, 490, 497, 501, 504, 508, 531, 532, 548, 557, 558, 561, 562, 563, 570, 572, 576, 577, 578, 580, 582, 584, 588, 589, 590, 591, 595, 597, 598, 606, 607, 608, 611, 612, 617, 618, 624, 626, 640, 651, 653, 655, 661, 662, 663, 665, 666, 667, 668, 670, 672, 673, 675, 679, 680, 681, 682, 683, 688, 689, 692, 693, 700, 701, 702, 705, 706, 707, 710, 711, 715, 717, 719, 721, 723, 724, 725, 726, 727, 729, 731, 733, 735, 736, 738, 739, 740, 743, 744, 745, 746, 748, 749, 753, 755, 759, 763, 765, 766, 768, 770, 774, 777, 779, 780, 782, 783, 785, 786, 789, 790, 791, 792, 794, 795, 808, 809, 810, 812, 813, 814, 815, 816, 818], "40": [598, 608, 612, 639, 666, 675, 681, 715, 808, 809, 810, 811, 812, 813, 814, 815, 816], "400": [646, 809], "4000": [589, 591], "40000": 646, "4000g": 591, "40219": 701, "403": 779, "40535375": 790, "408": 728, "4095": [589, 715, 717, 740], "4096": [589, 715, 740, 743], "4097": 740, "4098": 740, "4099": 740, "40kib": 700, "40th": 808, "41": [598, 700, 715], "410": 715, "4112": 643, "412": 651, "415": 591, "416": 591, "4167": 717, "41m": 661, "42": [597, 598, 608, 611, 632, 640, 655, 665, 666, 668, 675, 714, 715, 718, 721, 729, 749, 776, 808, 812, 813, 817], "421": 715, "423325": 779, "429": 715, "43": [598, 608, 813], "4300g": 591, "4300ge": 591, "434": 749, "4350g": 591, "4350ge": 591, "4377547752858689819": 715, "44": [598, 640, 715, 740, 788], "446": 790, "447": 591, "448": 591, "449": 591, "45": [585, 598, 729, 808, 810], "450": 591, "451": 591, "452": 591, "453": 591, "454": 591, "455": 591, "456": [721, 779, 813], "457": 591, "458": 591, "4584": 790, "459": 591, "46": [598, 790, 813], "460": 591, "4600g": 591, "4600ge": 591, "463": 591, "463331": 790, "463340": 790, "464": [591, 779], "465": 591, "4650g": 591, "4650ge": 591, "466": 657, "467": [591, 668], "468": 591, "469": 591, "47": [591, 598, 640, 715, 766, 780], "470": 591, "4700g": 591, "4700ge": 591, "470948": 790, "471": 591, "472": 591, "472618": 790, "474": 779, "4750ge": 591, "48": [591, 598, 608, 640, 651, 743, 783], "480": 591, "4819": 775, "49": [598, 749], "4b": 717, "4gb": 714, "4gib": 675, "4k": 608, "4kib": 740, "4th": [608, 715], "4u": 765, "5": [20, 27, 123, 212, 370, 378, 482, 490, 589, 590, 591, 598, 600, 606, 607, 608, 612, 618, 640, 651, 655, 661, 662, 665, 666, 668, 672, 680, 683, 686, 689, 692, 693, 700, 701, 707, 710, 715, 717, 721, 725, 726, 727, 728, 729, 733, 736, 740, 743, 746, 748, 749, 755, 756, 759, 763, 765, 770, 774, 779, 780, 783, 785, 786, 788, 790, 791, 792, 794, 795, 808, 809, 810, 811, 813, 814, 815, 816, 818], "50": [598, 639, 640, 683, 766, 775, 779], "500": 640, "5000": [591, 700, 761], "503": 752, "5046": 749, "506": [779, 790], "507": 752, "508": [715, 779], "51": [20, 123, 212, 370, 482, 598, 640, 699, 780], "5100": 591, "511": 591, "512": [591, 715, 740], "513": 591, "51440360": 790, "51615": 685, "5197": 775, "52": [598, 643, 715, 780], "5200": 591, "521": 752, "527": 752, "53": [598, 715, 740], "5312": 717, "532": 749, "5321": 751, "54": [598, 640, 779, 790], "542": 775, "543": 775, "5434426023268520": 790, "5434426023523052": 790, "5434426029925386": 790, "5434426030031128": 790, "5434426046951388": 790, "5434426047282020": 790, "5434426047857332": 790, "5434426047984152": 790, "5434426048036584": 790, "5434426048042292": 790, "5434426048055056": 790, "5434426048067316": 790, "547": 700, "548": 752, "549": 752, "55": [598, 715, 759, 788], "5500": 591, "554": [668, 752], "556": 653, "557": 667, "56": [591, 598, 651], "560": 775, "5600": 591, "5600m": 591, "563098": 779, "566": [653, 775], "567": 667, "57": 598, "5700": 591, "577": 653, "58": 598, "584": 775, "58421550": 790, "586": 653, "59": [598, 608, 640], "590": 600, "595": 653, "59620e187c6ac38b36382685ccd2b63b": 779, "5981": 775, "5b": 651, "5e": 715, "5gb": 685, "5l": 663, "5rqxku": 790, "5th": 715, "5u": 765, "5x": [698, 766], "6": [20, 27, 120, 123, 129, 209, 212, 220, 314, 370, 378, 479, 482, 490, 584, 589, 590, 591, 607, 608, 612, 639, 640, 651, 655, 662, 665, 666, 668, 670, 680, 683, 685, 689, 700, 701, 705, 706, 707, 710, 715, 717, 726, 727, 729, 733, 736, 740, 743, 745, 749, 755, 759, 765, 774, 777, 780, 781, 783, 786, 788, 790, 791, 808, 809, 810, 812, 814, 815, 816, 818], "60": [598, 639, 668, 740, 776], "600": [646, 653], "6000": 591, "60000": 646, "603": 752, "609": 653, "61": 598, "610": 640, "62": [598, 766], "621": 752, "626": 751, "62635": 790, "626455": 790, "627": 752, "628": 752, "6295592": 655, "63": [20, 120, 123, 212, 370, 479, 482, 584, 591, 598, 715, 766, 776], "638838075": 715, "64": [31, 33, 81, 82, 86, 96, 97, 111, 133, 174, 176, 186, 187, 200, 224, 269, 286, 287, 305, 341, 351, 381, 383, 432, 433, 447, 448, 468, 494, 496, 545, 546, 560, 561, 575, 588, 589, 590, 595, 597, 598, 600, 606, 608, 612, 624, 632, 640, 642, 662, 663, 673, 674, 675, 681, 683, 685, 710, 714, 715, 717, 721, 727, 729, 735, 736, 738, 743, 749, 757, 761, 764, 765, 768, 770, 774, 775, 776, 783, 786, 790, 808, 816, 817], "643": 668, "648": 752, "649": 752, "6497": 775, "64bit": [715, 721, 758], "64k": 736, "65": [591, 598, 608, 640], "654": 752, "65500": 590, "65535": [21, 22, 23, 24, 124, 125, 126, 127, 214, 215, 216, 217, 372, 373, 374, 375, 484, 485, 486, 487, 589, 715], "65600": 590, "657": 775, "658": 775, "66": [591, 598, 685, 759], "66ghz": 701, "67": [598, 808], "6700": 591, "672368": 790, "6757": 775, "68": 598, "680": 729, "6800": 591, "69": 598, "6900": 591, "69819": 790, "6986": 775, "6b": 717, "6th": 715, "7": [27, 30, 78, 120, 129, 171, 209, 220, 223, 266, 314, 378, 380, 479, 490, 493, 542, 584, 589, 590, 591, 598, 599, 600, 607, 612, 640, 645, 662, 663, 666, 668, 680, 683, 689, 700, 701, 705, 706, 707, 710, 714, 715, 717, 721, 727, 729, 731, 733, 736, 740, 743, 745, 746, 749, 751, 755, 759, 765, 770, 779, 785, 788, 790, 791, 792, 794, 810, 812, 813, 815, 816, 818], "70": [598, 600, 608, 639, 775, 779, 788, 792], "7000": 591, "7004155349499253778": 715, "7009": 775, "703": 680, "705": 680, "7050b": 591, "71": 715, "7100": 591, "7150b": 591, "72": [640, 651], "7200p": 591, "725": 749, "7300": 591, "7350b": 591, "73670648": 668, "74": [598, 640, 715, 766, 780], "7400p": 591, "746": 775, "747": 775, "75": [598, 715, 749, 779, 788, 790], "7500": [591, 717], "754": [591, 689, 715], "756": 752, "758": 775, "76": [598, 774], "7600p": 591, "7646": 749, "7651369219802541373": 715, "767": 591, "768": 591, "769": 591, "77": [598, 640, 717, 768], "7790": 591, "77x": 766, "78": [598, 768, 790, 813], "789": 813, "79": [591, 683], "7938": 775, "7942": 717, "7976922776554302e308": 590, "7976931348623157e308": 590, "7c": 640, "7e15": 661, "7foo_bar": 628, "7nm": 591, "7th": 715, "7ykb2k5f": 635, "8": [27, 47, 66, 84, 120, 129, 138, 145, 157, 175, 209, 220, 233, 254, 270, 314, 378, 396, 408, 418, 435, 464, 479, 490, 509, 530, 548, 584, 588, 589, 590, 591, 595, 597, 598, 599, 600, 607, 608, 612, 640, 641, 651, 655, 660, 662, 665, 666, 668, 672, 673, 675, 681, 682, 683, 685, 689, 700, 701, 702, 705, 707, 710, 714, 715, 721, 724, 727, 729, 731, 733, 735, 736, 738, 740, 743, 749, 751, 755, 757, 759, 761, 764, 765, 766, 768, 770, 774, 777, 779, 785, 786, 790, 791, 792, 812, 813, 814, 816, 818], "80": [598, 600, 611, 639, 640, 646, 715, 743], "8000": 740, "80386": [595, 815], "80f351b51825": 672, "80x86": 701, "80x87": 608, "81": 639, "8191": 740, "82": 651, "83": [639, 775, 790], "83348": 779, "84": [728, 775], "841471": 811, "85": [775, 790], "8500b": 591, "8500p": 591, "86": [749, 779], "8600b": 591, "8600p": 591, "87": [608, 749], "8700b": 591, "8700p": 591, "8770": 591, "8780p": 591, "879": 775, "88": [591, 775, 790], "8800b": 591, "8800p": 591, "8825": 775, "89": 779, "896800": 779, "8981": 775, "8gib": 675, "8x": [612, 766], "9": [27, 129, 220, 378, 490, 590, 591, 594, 598, 607, 608, 612, 640, 655, 662, 666, 668, 670, 672, 685, 700, 705, 708, 710, 715, 717, 721, 722, 729, 731, 733, 736, 740, 745, 749, 751, 755, 758, 759, 765, 766, 779, 780, 781, 786, 808, 809, 810, 811, 812, 813, 814, 815, 818], "90": [611, 639, 651, 775, 779, 790], "900": 640, "9000": 740, "9009": 775, "9010": 591, "9015": 717, "90p": 790, "91": [651, 680], "92": [611, 651], "9210": 591, "928": 779, "93": [685, 715], "930803": 736, "9342": 775, "9410": 591, "95": 591, "96": 591, "9600p": 591, "9630p": 591, "9633790": 790, "97": 715, "9700p": 591, "9730p": 591, "97724f18c79c": 686, "9800p": 591, "9830p": 591, "989": 721, "99": [708, 722, 735, 759, 765, 767], "999": 715, "9990": 701, "9994": 701, "999999999": 759, "99p": 790, "9_": [590, 612], "9a": [590, 612], "9b": 717, "AI": [611, 749], "AS": [585, 586], "AU": [594, 692, 788], "As": [585, 586, 590, 591, 593, 594, 595, 598, 599, 603, 604, 607, 608, 611, 612, 617, 640, 645, 661, 662, 665, 666, 669, 670, 673, 674, 678, 680, 681, 682, 683, 686, 688, 690, 691, 693, 700, 701, 703, 704, 705, 707, 708, 714, 715, 716, 717, 718, 719, 721, 722, 726, 727, 728, 729, 730, 731, 732, 734, 738, 739, 740, 748, 749, 751, 753, 762, 764, 765, 766, 768, 770, 771, 772, 775, 776, 777, 781, 782, 785, 786, 788, 789, 792, 794, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "C": [585, 591, 593, 594, 595, 598, 599, 601, 602, 604, 607, 608, 612, 615, 616, 617, 621, 625, 626, 628, 640, 641, 643, 644, 649, 650, 655, 661, 662, 666, 667, 668, 671, 672, 673, 675, 678, 679, 680, 681, 682, 685, 686, 689, 691, 700, 701, 703, 704, 705, 708, 709, 710, 713, 714, 717, 718, 721, 724, 726, 728, 729, 730, 731, 732, 734, 735, 740, 746, 750, 751, 753, 761, 762, 766, 768, 770, 772, 774, 775, 777, 779, 780, 781, 782, 784, 785, 786, 787, 788, 790, 792, 794, 795, 796, 797, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819], "CE": 666, "CS": 591, "Ce": [1, 2, 3, 4, 6, 7, 8, 9], "Cet": 123, "Cs": 591, "D": [585, 586, 606, 611, 612, 617, 622, 636, 640, 641, 642, 643, 644, 654, 660, 661, 662, 667, 669, 675, 683, 686, 715, 728, 747, 748, 751, 776, 779, 809, 810, 813, 815, 816, 820], "DS": 788, "Ds": 662, "Due": [590, 604, 612, 640, 668, 672, 686, 715, 716, 719, 751, 762, 772, 776, 811], "Il": [122, 336], "J": [611, 669, 670, 714, 715, 731, 765, 794], "L": [585, 586, 608, 622, 636, 642, 644, 654, 661, 662, 667, 683, 705, 706, 715, 717, 727, 731, 733, 749, 751, 753, 797, 810, 811, 812, 813, 814, 815, 816], "LE": 680, "LEA": [632, 777], "LS": [585, 586], "La": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "Lea": 608, "Les": 123, "Ls": 715, "M": [586, 594, 595, 608, 610, 611, 617, 622, 643, 661, 663, 666, 669, 683, 715, 727, 730, 731, 733, 738, 755, 757, 770, 786, 788, 794, 795, 796, 797], "MA": 726, "MESA": 591, "MS": [675, 703, 717], "Me": [610, 716], "Mesa": 591, "Ms": 796, "N": [120, 209, 314, 479, 584, 585, 586, 589, 590, 591, 595, 596, 598, 608, 610, 611, 612, 617, 622, 626, 631, 640, 641, 642, 646, 654, 655, 666, 670, 673, 680, 688, 707, 715, 717, 725, 726, 729, 738, 740, 746, 749, 757, 770, 786, 790, 810], "ON": [596, 606, 672, 679, 683, 703, 705, 717, 779, 788], "On": [586, 589, 591, 593, 595, 596, 597, 604, 606, 608, 611, 617, 627, 632, 640, 642, 649, 654, 662, 664, 668, 671, 673, 677, 678, 679, 680, 683, 696, 705, 709, 713, 714, 715, 717, 718, 727, 731, 735, 747, 749, 758, 766, 767, 768, 771, 774, 776, 781, 784, 791, 792, 794, 796, 810, 811, 813], "PAR": 752, "Pour": [6, 7, 793], "S": [585, 586, 590, 591, 595, 615, 617, 622, 633, 637, 640, 641, 642, 643, 649, 650, 654, 659, 662, 668, 673, 675, 683, 685, 694, 708, 715, 726, 730, 731, 749, 765, 770, 776, 781], "SA": 591, "SE": 715, "SESE": 755, "Sea": 591, "See": [31, 341, 381, 494, 585, 586, 589, 591, 595, 596, 598, 599, 601, 604, 606, 608, 612, 613, 617, 618, 620, 622, 628, 632, 635, 640, 642, 659, 660, 661, 662, 670, 671, 674, 676, 679, 681, 683, 685, 686, 688, 689, 690, 692, 701, 703, 704, 705, 706, 708, 710, 714, 715, 716, 725, 726, 727, 728, 729, 730, 731, 736, 740, 749, 750, 751, 752, 753, 755, 765, 766, 770, 774, 776, 777, 779, 781, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 809, 813], "T": [585, 586, 591, 611, 617, 618, 620, 622, 640, 641, 643, 645, 647, 654, 675, 676, 708, 714, 715, 735, 743, 749, 753, 757, 765, 774, 777, 781, 792], "TA": [585, 586, 589], "TS": [585, 586], "Te": 715, "Un": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 715, 793], "Y": [586, 591, 597, 608, 662, 667, 670, 707, 714, 715, 741, 746, 749, 765, 776, 777, 785, 788, 814], "_": [585, 591, 598, 611, 627, 642, 689, 690, 693, 710, 714, 715, 721, 731, 748, 753, 767, 776, 779], "_0": [715, 721], "__1": 628, "__aarch64_casm_ord": 595, "__aarch64_ldaddn_ord": 595, "__aarch64_ldclrn_ord": 595, "__aarch64_ldeorn_ord": 595, "__aarch64_ldsetn_ord": 595, "__aarch64_swpn_ord": 595, "__active_lane_pc": 591, "__aeabi_": 663, "__annot": 715, "__anon_expr": [809, 810, 811, 812, 813, 814, 815, 816], "__apple_nam": 765, "__apple_namespac": 765, "__apple_objc": 765, "__apple_typ": 765, "__asm": 640, "__atomic_compare_exchang": 595, "__atomic_compare_exchange_n": 595, "__atomic_exchang": 595, "__atomic_exchange_n": 595, "__atomic_fetch_add_n": 595, "__atomic_fetch_and_n": 595, "__atomic_fetch_nand_n": 595, "__atomic_fetch_or_n": 595, "__atomic_fetch_sub_n": 595, "__atomic_fetch_xor_n": 595, "__atomic_load": 595, "__atomic_load_n": 595, "__atomic_stor": 595, "__atomic_store_n": 595, "__attribute__": [662, 757, 765, 783, 789], "__bitcod": 598, "__bss": 641, "__builtin_eh_return": 673, "__builtin_expect": 600, "__builtin_expect_with_probability": 600, "__builtin_longjmp": 673, "__builtin_setjmp": 673, "__builtin_trap": 717, "__builtin_unreach": 719, "__c_specific_handl": 673, "__chkstk": 675, "__clang__": 662, "__class_type_info": 703, "__clear_cach": 715, "__cuda__": 662, "__cuda_arch__": 662, "__cuda_ftz": 729, "__cudacc__": 662, "__cxa_allocate_except": 673, "__cxa_begin_catch": 673, "__cxa_call_unexpected": 673, "__cxa_demangl": 679, "__cxa_end_catch": 673, "__cxa_rethrow": 673, "__cxa_throw": 673, "__cxx11": 628, "__cxx_": 790, "__cxx_global_var_in": 790, "__cxxabiv1": 703, "__cxxframehandler3": 673, "__cxxthrowexcept": 673, "__dat": [641, 651, 715], "__declspec": [811, 812, 813, 814, 815, 816], "__divergent_lane_pc": 591, "__divergent_lane_pc_1_1_els": 591, "__divergent_lane_pc_1_1_then": 591, "__divergent_lane_pc_1_els": 591, "__divergent_lane_pc_1_then": 591, "__dso_handl": 714, "__dwarf": 765, "__eh_fram": [608, 714], "__except": 673, "__fastcall": 715, "__gcmap_": 680, "__global__": [591, 662], "__gwp_asan_default_opt": 700, "__gxx_personality_v0": 673, "__has_attribut": 774, "__i386__": 817, "__ibm128": 757, "__image_info": 715, "__imp_": 715, "__info_plist": 644, "__internal_accurate_powf": 729, "__jit_debug_register_cod": 668, "__kmpc_fork_call": 715, "__lex_1_1_save_exec": 591, "__lex_1_save_exec": 591, "__libc_start_main": [668, 700], "__libunwind_config": 673, "__llvm": [598, 759], "__llvm__": 715, "__llvm_coverage_mapping": 666, "__llvm_covmap": 666, "__llvm_deoptimiz": 715, "__llvm_faultmap": 677, "__llvm_memcpy_element_unordered_atomic_": [715, 770], "__llvm_memcpy_element_unordered_atomic_safepoint_": 770, "__llvm_memcpy_element_unordered_atomic_safepoint_1": 770, "__llvm_memmove_element_unordered_atomic_": [715, 770], "__llvm_memmove_element_unordered_atomic_safepoint_": 770, "__llvm_memset_element_unordered_atomic_": 715, "__llvm_stackmap": 768, "__main": 788, "__mod_in": 714, "__morestack": 764, "__next__": 665, "__nv_isinff": 729, "__nv_isnanf": 729, "__nv_powf": 729, "__nv_truncf": 729, "__nvcc__": 662, "__objc": [651, 715], "__objc_imageinfo": 715, "__profn_foo": 666, "__remark": [618, 759], "__scudo_default_opt": 761, "__stack_chk_fail": [715, 721], "__stack_chk_guard": 715, "__start_": 715, "__stdcall": 715, "__stop_": 715, "__sync_fetch_and_add_n": 595, "__sync_fetch_and_and_n": 595, "__sync_fetch_and_max_n": 595, "__sync_fetch_and_min_n": 595, "__sync_fetch_and_nand_n": 595, "__sync_fetch_and_or_n": 595, "__sync_fetch_and_sub_n": 595, "__sync_fetch_and_umax_n": 595, "__sync_fetch_and_umin_n": 595, "__sync_fetch_and_xor_n": 595, "__sync_lock_test_and_set_n": 595, "__sync_synchroniz": 595, "__sync_val_compare_and_swap_n": 595, "__syncthread": 729, "__text": [608, 641, 644, 651, 779], "__text_exec": 641, "__try": 673, "__uint64": 591, "__uint_64": 591, "__unwind_info": 608, "__vectorcall": 715, "__xray_log_finaliz": 789, "__xray_log_flushlog": 789, "__xray_log_init_mod": 789, "__xray_log_process_buffer": 789, "__xray_log_register_mod": 789, "__xray_log_select_mod": 789, "__xray_log_set_buffer_iterator": 789, "__xray_patch": 789, "__xray_patch_funct": 789, "_align": 765, "_amdgpu_": 591, "_amdgpu_cs_shdr_intrl_dat": 591, "_args_": 607, "_b128": 588, "_b16": 588, "_b256": 588, "_b32": 588, "_b512": 588, "_b64": 588, "_b8": 588, "_binary_": 642, "_bool": 814, "_bootstrap_default_passthrough": 593, "_buff": 591, "_compil": 606, "_crit_edg": 715, "_cuda_ftz": 729, "_cxxthrowexcept": 673, "_dcleanup": 673, "_distribution_component": 604, "_division_by_zero": 591, "_dpp": [588, 591], "_e32": [588, 591], "_e64": [588, 591], "_end": 642, "_except_handler3": 673, "_except_handler4": 673, "_f16": 588, "_f32": 588, "_f64": 588, "_flag": [606, 607], "_flags_": 607, "_flags_relwithdebinfo": 604, "_function_nam": 675, "_gotpcrelx": 675, "_how": 610, "_i": 646, "_i16": 588, "_i32": 588, "_i64": 588, "_i8": 588, "_i_bitcast": 693, "_in": 591, "_index": 774, "_inexact": 591, "_info": 591, "_inv": 591, "_invalid_oper": 591, "_invl": 591, "_is_": 715, "_job": 606, "_link_into_tool": 788, "_lz_o": 775, "_m4enum": 715, "_main": [655, 731, 820], "_name_": 607, "_overflow": 591, "_p1": 765, "_p3": 765, "_padding_record": 735, "_pei386_runtime_relocator": 703, "_pk": 588, "_r0h": 673, "_regoffset": 777, "_rex": 675, "_ri": 776, "_rr": 776, "_runtim": 768, "_s64": 689, "_sdwa": [588, 591], "_segment_buff": 591, "_segment_ptr": 591, "_segment_siz": 591, "_segment_wavefront_offset": 591, "_shdr_intrl_dat": 591, "_siz": [591, 642], "_sourc": 591, "_source_d": 606, "_start": [642, 643, 668, 700], "_suffstring": 776, "_suffstringsuffix": 776, "_trunc": 689, "_try": 715, "_ty": 674, "_u16": 588, "_u32": 588, "_u64": 588, "_u8": 588, "_underflow": 591, "_unwind_resum": 673, "_v4": 591, "_var": 607, "_void": 689, "_vol": 591, "_w_side_effect": 689, "_win32": [771, 811, 812, 813, 814, 815, 816], "_x": 591, "_y": 591, "_z": 591, "_z3bar": 627, "_z3bazv": 655, "_z3foo3barv": 628, "_z3foov": [627, 715], "_z4leak": 766, "_z5hellov": 653, "_zdapv": 657, "_zdapvj": 657, "_zero": 591, "_zfoov": 715, "_zgv": 715, "_zn1a1nei": 715, "_zst1a": 783, "_zstlsicst11char_traitsiceerst13basic_ostreamit_t0_es6_st17basic_string_viewis3_s4_": 700, "_ztid": 715, "_ztii": 715, "_zts1a": [715, 783], "_zts1b": 783, "_zts1c": 783, "_zts1d": 783, "_ztv1a": 783, "_ztv1b": 783, "_ztv1c": 783, "_ztv1d": 783, "_ztv3bar": 612, "_ztv3foo": 612, "a": [1, 5, 8, 18, 20, 23, 24, 27, 30, 33, 34, 52, 53, 55, 81, 82, 84, 104, 105, 106, 107, 110, 111, 115, 120, 123, 126, 127, 129, 132, 133, 143, 145, 174, 175, 176, 194, 195, 196, 199, 200, 203, 204, 209, 211, 212, 213, 216, 217, 220, 223, 224, 225, 238, 239, 269, 270, 279, 280, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 309, 314, 351, 355, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 370, 371, 374, 375, 378, 380, 383, 384, 401, 402, 404, 408, 409, 415, 416, 417, 432, 433, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 477, 478, 479, 481, 482, 483, 486, 487, 490, 493, 496, 497, 514, 515, 517, 545, 546, 548, 568, 569, 570, 571, 574, 575, 579, 584, 587, 588, 589, 591, 595, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 663, 665, 666, 667, 668, 669, 673, 675, 677, 678, 679, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 702, 704, 706, 707, 709, 711, 712, 713, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 732, 733, 734, 735, 736, 738, 739, 740, 743, 744, 745, 750, 753, 754, 755, 756, 757, 761, 764, 765, 767, 768, 769, 770, 771, 772, 774, 777, 778, 779, 780, 781, 782, 784, 785, 789, 790, 791, 792, 793, 808, 810, 812, 813, 817, 818, 820], "a0463440": 612, "a0463443": 612, "a1": [608, 618, 620, 643, 670, 731, 776, 783, 785], "a10": 591, "a12": 591, "a15": 702, "a16": [0, 4, 9, 84, 435, 548], "a2": [608, 618, 620, 643, 670, 715, 731, 776, 783, 785], "a252": 590, "a253": 590, "a254": 590, "a255": 590, "a3": [608, 618, 620, 643, 670, 715], "a32": 597, "a4": [591, 608], "a57": 663, "a6": 591, "a64": 597, "a8": [591, 711], "a9": [591, 706], "a_ctor_bas": 612, "aa": [595, 715, 788], "aad": 608, "aad8i8": 608, "aapc": 715, "aarch32": 663, "aarch64": [595, 597, 605, 608, 642, 643, 671, 679, 683, 688, 696, 698, 702, 710, 715, 721, 725, 753, 768, 774, 786, 789], "aarch64codegen": 671, "aarch64registerinfo": 721, "ab": [25, 128, 219, 316, 321, 326, 338, 377, 489, 714, 729, 762], "abandon": [747, 810], "abandoned": [698, 749], "abbrev": [598, 631], "abbrevi": [611, 716, 753], "abbreviat": [624, 631], "abbreviated": [591, 775], "abbrevid": [598, 759], "abbrevop0": 598, "abbrevop1": 598, "abbrevwidth": 598, "abc": [586, 715], "abcd": 598, "abcdef0": 707, "abcdillnoopsstuuvv": 622, "abi": [585, 586, 597, 601, 605, 606, 622, 628, 643, 665, 670, 675, 676, 683, 688, 690, 695, 705, 706, 707, 713, 715, 729, 732, 745, 746, 748, 765, 768, 781, 783, 786, 811, 815, 816, 817], "abid": [8, 9, 762], "abilit": 661, "ability": [585, 586, 608, 609, 659, 661, 668, 674, 678, 680, 694, 701, 710, 714, 715, 719, 723, 749, 750, 751, 765, 766, 792, 808, 812, 813, 814], "abis": [591, 665, 676, 766], "able": [585, 586, 591, 594, 596, 601, 602, 603, 608, 610, 611, 612, 617, 640, 642, 654, 661, 662, 665, 666, 670, 676, 678, 680, 681, 683, 684, 686, 689, 690, 693, 694, 701, 706, 709, 713, 714, 715, 716, 718, 722, 730, 731, 744, 747, 749, 751, 755, 759, 760, 761, 762, 765, 766, 767, 768, 770, 782, 785, 786, 788, 789, 792, 795, 811, 812, 813, 816, 817], "abnormal": [665, 771], "abnormally": [665, 678], "abort": [602, 608, 611, 686, 715, 719, 749], "aborting": 673, "about": [585, 586, 588, 590, 591, 594, 595, 598, 599, 603, 604, 606, 607, 608, 610, 611, 612, 615, 617, 618, 624, 636, 637, 638, 640, 641, 645, 646, 649, 650, 651, 657, 661, 662, 665, 668, 670, 671, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 692, 694, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 736, 738, 739, 740, 743, 744, 745, 746, 747, 749, 756, 757, 758, 759, 760, 761, 762, 765, 766, 767, 768, 770, 771, 772, 774, 775, 779, 780, 782, 783, 784, 785, 786, 788, 789, 790, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "abov": [20, 27, 120, 123, 129, 209, 212, 213, 220, 314, 370, 371, 378, 479, 482, 483, 490, 584, 585, 586, 588, 589, 590, 594, 595, 597, 598, 599, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 618, 640, 646, 655, 661, 662, 665, 667, 670, 671, 674, 676, 677, 678, 679, 680, 681, 683, 685, 689, 693, 699, 701, 704, 705, 706, 707, 708, 709, 710, 712, 714, 715, 718, 719, 720, 721, 722, 723, 726, 727, 730, 731, 732, 733, 736, 746, 748, 749, 750, 751, 755, 758, 760, 762, 764, 765, 766, 767, 768, 770, 772, 774, 775, 776, 780, 781, 783, 786, 787, 788, 790, 792, 794, 808, 809, 810, 811, 812, 813, 814, 816, 817], "abs8": 675, "abs_f": 777, "abs_fp32": 777, "abs_fp64": 777, "abs_fp80": 777, "absenc": [602, 608, 640, 675, 721, 749, 766], "absent": [586, 612, 715, 749, 757], "absl": 628, "absolu": 123, "absolut": [20, 27, 120, 129, 209, 212, 220, 314, 370, 378, 479, 482, 490, 584, 589, 591, 599, 606, 611, 612, 626, 641, 642, 643, 645, 655, 666, 683, 689, 706, 714, 715, 736, 759, 781, 786, 791], "absolute_express": [20, 21, 22, 23, 24, 27, 30, 51, 52, 53, 120, 123, 124, 125, 126, 127, 129, 142, 143, 209, 212, 213, 214, 215, 216, 217, 220, 223, 237, 238, 239, 314, 370, 371, 372, 373, 374, 375, 378, 380, 400, 401, 402, 479, 482, 483, 484, 485, 486, 487, 490, 493, 513, 514, 515, 584], "absolute_symbol": 714, "absolute_tsc": 791, "absolutely": [674, 688, 749, 788], "absolutesymbol": 731, "abstract": [586, 591, 608, 611, 669, 673, 676, 708, 716, 718, 733, 746, 749, 759, 765, 775, 777, 786, 788, 792, 808, 810, 811, 812, 813, 814, 815, 816], "abstracted": [611, 676], "abstractness": 670, "abstracttyperead": 660, "abstracttypewrit": 660, "absv16i8": 786, "absv1i64": 786, "abtu": 622, "abused": 749, "ac": [717, 753], "academi": 670, "acc": [590, 776], "acc0": 590, "acc2": 590, "acc250": 590, "acc3": 590, "acc_vgpr": 591, "acccurat": 726, "acced": 123, "acceler": 817, "accelerat": 617, "accelerated": 738, "accelerator": [586, 591, 615, 631], "accept": [585, 587, 589, 591, 603, 607, 609, 611, 612, 626, 661, 664, 665, 670, 672, 675, 676, 679, 683, 685, 688, 693, 699, 708, 715, 717, 723, 727, 728, 747, 749, 757, 762, 766, 769, 772, 775, 776, 781], "accepted": [587, 589, 591, 612, 628, 641, 642, 661, 664, 683, 715, 729, 747, 757], "accepting": 661, "access": [585, 589, 590, 594, 595, 597, 601, 610, 640, 642, 643, 654, 661, 664, 665, 669, 672, 674, 678, 680, 681, 683, 685, 688, 693, 694, 700, 701, 710, 714, 717, 720, 725, 726, 729, 730, 731, 732, 734, 738, 740, 743, 746, 747, 749, 757, 761, 765, 766, 768, 769, 770, 782, 785, 786, 788, 789, 792, 795, 814, 817], "accessed": [20, 212, 370, 482, 585, 586, 590, 591, 595, 608, 661, 673, 681, 714, 715, 731, 732, 733, 749, 761, 765, 769, 776, 783], "accessibility": 715, "accessibl": [586, 590, 591, 606, 626, 641, 661, 665, 672, 688, 700, 714, 715, 721, 730, 731, 749, 762, 766, 774, 810], "accessing": [585, 586, 589, 591, 594, 608, 661, 673, 681, 714, 715, 726, 730, 731, 749, 766, 770], "accessor": [608, 765, 788, 809], "accessty": 715, "accessty1": 715, "accessty2": 715, "accidental": 731, "accidentally": [611, 661, 749, 771, 772, 788], "accommodat": [608, 670, 675, 688, 715, 729], "accommodated": 608, "accommodating": 598, "accompanied": [611, 759], "accomplish": [670, 708, 741, 749, 766, 776], "accomplished": [610, 680, 714, 732, 746, 749, 808], "accord": [715, 762], "according": [585, 586, 591, 598, 599, 617, 640, 657, 661, 680, 689, 690, 695, 708, 715, 721, 749, 753, 755, 757, 758, 762, 768, 775, 776, 786, 792, 810], "accordingly": [673, 680, 712, 715, 719, 740, 762], "account": [591, 609, 670, 689, 693, 701, 708, 715, 724, 727, 728, 747, 751, 760, 766, 789, 790, 794, 795], "accounted": 605, "accounting": [591, 645, 680, 789, 790], "accqual": 591, "accum": 591, "accum_offset": 591, "accumul": 591, "accumulat": [717, 765, 766, 785], "accumulateconstantoffset": 727, "accumulated": [766, 776, 785], "accumulator": [590, 689, 746, 776], "accuracy": [640, 710, 715, 746], "accurat": [594, 600, 632, 640, 680, 683, 690, 704, 710, 718, 743, 746, 751, 765, 775, 816, 817], "accurately": [591, 715, 751, 765], "accvgpr": 591, "ace": 771, "achiev": [595, 601, 603, 606, 670, 678, 688, 701, 715, 719, 725, 728, 754, 765, 766, 771], "achieved": [669, 679, 690, 712, 718, 749, 755], "achieving": 610, "acknowledg": 762, "acknowledged": 610, "acknowledging": 760, "acm": [608, 667, 680], "acme": 752, "acos": 594, "acq": 595, "acq_rel": [591, 595, 715], "acquainted": 794, "acquir": [591, 670, 715, 726, 749, 776], "acquired": [591, 717], "acquisit": 749, "acronym": 700, "across": [595, 597, 604, 605, 606, 607, 608, 610, 624, 661, 662, 665, 670, 673, 678, 683, 689, 691, 696, 714, 715, 716, 717, 719, 729, 731, 733, 741, 746, 749, 751, 759, 765, 766, 768, 770, 776, 785, 788, 811, 817], "act": [585, 586, 599, 608, 611, 612, 622, 689, 715, 717, 726, 727, 746, 749, 759, 760, 762, 763, 765, 775, 776, 781], "acting": 586, "action": [585, 586, 591, 592, 600, 601, 608, 611, 665, 673, 674, 679, 683, 701, 714, 715, 716, 731, 733, 747, 749, 751, 760, 762, 770, 772, 786, 788, 791], "actionscript": 817, "actiontyp": 775, "activ": [585, 586, 591, 594, 610, 640, 642, 654, 665, 670, 672, 673, 680, 682, 707, 713, 714, 717, 724, 728, 731, 740, 749, 751, 762, 768, 772, 788, 795, 796, 797, 819], "activat": 779, "activated": [606, 749], "actively": [610, 670, 762, 766, 772, 795], "activit": [608, 786], "activity": [665, 728], "actor": 665, "actual": [14, 79, 84, 172, 175, 267, 270, 333, 350, 430, 435, 543, 548, 585, 586, 587, 591, 594, 595, 598, 602, 608, 611, 612, 617, 622, 632, 636, 640, 661, 665, 668, 669, 670, 677, 678, 681, 704, 715, 716, 717, 719, 720, 726, 727, 732, 736, 749, 750, 758, 761, 765, 766, 769, 770, 771, 779, 781, 786, 792, 794, 795, 808, 812, 816, 817], "actual_access": 591, "actualaccqual": 591, "actually": [175, 270, 435, 548, 585, 586, 591, 594, 597, 598, 601, 607, 608, 611, 612, 657, 661, 662, 665, 670, 673, 676, 677, 680, 681, 685, 701, 703, 704, 708, 715, 719, 726, 727, 728, 730, 731, 732, 746, 749, 751, 765, 770, 771, 779, 781, 786, 787, 788, 792, 794, 809, 810, 811, 812, 813, 814, 816, 817], "acyclic": [608, 660, 716, 743, 765, 775, 786], "ad": [585, 586, 601, 608, 746, 749], "ada": 673, "adapt": [676, 700, 705, 724, 749, 771], "adapted": [662, 670, 746, 747], "adapter": 749, "adaptor": 730, "adc": 591, "adc32mi": 777, "adc32mi8": 777, "adc32mr": 777, "adc32ri": 777, "adc32ri8": 777, "adc32rm": 777, "adc32rr": 777, "adc64mi32": 777, "adc64mi8": 777, "adc64mr": 777, "adc64ri32": 777, "adc64ri8": 777, "adc64rm": 777, "adc64rr": 777, "adce": [716, 749], "add": [93, 96, 97, 100, 101, 104, 105, 106, 107, 112, 113, 114, 115, 186, 187, 189, 190, 191, 194, 195, 196, 201, 202, 203, 204, 281, 282, 283, 286, 287, 294, 295, 296, 297, 298, 299, 300, 301, 306, 307, 308, 309, 354, 447, 448, 455, 456, 457, 469, 470, 471, 472, 557, 560, 561, 564, 565, 568, 569, 570, 571, 576, 577, 578, 579, 585, 588, 591, 594, 595, 598, 601, 602, 606, 607, 608, 610, 611, 612, 613, 617, 622, 626, 634, 636, 640, 641, 642, 643, 645, 655, 659, 661, 662, 664, 665, 668, 670, 672, 673, 674, 675, 676, 677, 678, 680, 682, 683, 685, 688, 689, 690, 694, 699, 700, 704, 705, 706, 708, 709, 710, 711, 712, 714, 717, 719, 721, 724, 725, 727, 728, 729, 730, 733, 745, 746, 747, 749, 750, 751, 753, 754, 755, 757, 758, 765, 766, 768, 770, 771, 772, 775, 776, 777, 779, 780, 781, 782, 784, 786, 787, 788, 789, 790, 792, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "add16mi": 777, "add16mi8": 777, "add16mr": 777, "add16ri": 777, "add16ri8": 777, "add16rm": 777, "add16rr": 777, "add32mi": 777, "add32mi8": 777, "add32mr": 777, "add32ri": 777, "add32ri8": 777, "add32ri8_db": 632, "add32ri_db": 632, "add32rm": [765, 777], "add32rr": [632, 765, 776, 777], "add32rr_db": 632, "add32rr_rev": 632, "add64i32": 632, "add64mi32": 777, "add64mi8": 777, "add64mr": 777, "add64ri32": [632, 777], "add64ri8": 632, "add64rr": 632, "add8rr": 608, "add_": 607, "add_custom_command": 607, "add_custom_target": 607, "add_definit": 606, "add_dep": 607, "add_dependenc": 607, "add_execut": [606, 607], "add_library": 606, "add_llvm_execut": 607, "add_llvm_fuzz": 679, "add_llvm_library": [606, 788], "add_llvm_pass_plugin": 788, "add_llvm_tool": 679, "add_llvm_unittest": 606, "add_pf": 712, "add_pt": 712, "add_ri": 776, "add_rpath": 634, "add_rr": 776, "add_subdirectory": [606, 788], "addabsolutesymbol": 714, "addanonymoussymbol": 714, "addast": 797, "addcodegenprepar": 730, "addcomment": 680, "addcommonsymbol": 714, "adddefinedsymbol": 714, "added": [55, 56, 145, 241, 242, 404, 405, 517, 518, 585, 586, 591, 592, 598, 601, 602, 603, 604, 605, 606, 608, 611, 612, 622, 626, 630, 636, 642, 661, 668, 670, 674, 675, 680, 686, 693, 701, 705, 712, 714, 715, 717, 718, 719, 721, 722, 723, 727, 728, 730, 731, 732, 747, 749, 751, 752, 753, 757, 760, 765, 767, 768, 770, 771, 772, 774, 776, 780, 781, 782, 785, 786, 788, 792, 794, 795, 796, 797, 809, 811, 812, 813, 814, 815, 816], "addedcomplexity": [776, 777], "addend": [591, 663, 714, 715], "addendum": [684, 784], "addexternalsymbol": 714, "addfunctionast": 797, "addgenerator": [731, 794, 795, 796, 797], "addi": 715, "addimm": 608, "addincoming": [812, 813, 814, 815, 816], "adding": [585, 586, 591, 592, 599, 601, 602, 603, 606, 608, 610, 611, 612, 617, 618, 622, 631, 665, 666, 675, 679, 682, 701, 703, 705, 708, 712, 714, 715, 722, 731, 751, 762, 765, 767, 772, 774, 776, 781, 782, 784, 786, 788, 789, 794, 796, 810, 812, 813, 814, 815, 817, 818, 819], "addinstselector": 786, "addintervalsforspill": 608, "addirmodul": 731, "addit": [585, 586, 590, 594, 595, 598, 604, 606, 607, 608, 609, 611, 612, 617, 618, 626, 633, 640, 641, 651, 661, 663, 665, 666, 670, 673, 675, 680, 681, 682, 688, 689, 692, 693, 694, 706, 707, 709, 710, 713, 715, 716, 724, 726, 728, 729, 733, 746, 749, 751, 757, 765, 766, 767, 768, 770, 772, 775, 776, 777, 780, 781, 783, 785, 786, 788, 809, 811, 813, 814, 817], "additional": [585, 586, 589, 590, 593, 595, 598, 602, 604, 606, 608, 611, 612, 613, 622, 624, 632, 638, 645, 659, 660, 661, 662, 663, 665, 666, 670, 675, 678, 680, 681, 682, 683, 685, 688, 690, 693, 694, 695, 696, 703, 704, 705, 707, 715, 716, 717, 719, 721, 723, 725, 727, 733, 736, 744, 746, 748, 749, 750, 751, 752, 753, 755, 761, 762, 765, 766, 768, 769, 770, 771, 774, 775, 782, 786, 788, 789, 810, 815], "additionally": [594, 595, 604, 608, 642, 654, 661, 670, 680, 683, 688, 693, 695, 699, 701, 715, 726, 732, 734, 744, 746, 749, 757, 762, 766, 769, 770], "addl": 766, "addlazyirmodul": 731, "addlib": 622, "addllvm": [606, 607], "addmbb": 608, "addmod": 622, "addmodul": [731, 794, 795, 796, 797, 811, 812, 813, 814], "addmoduleflag": 816, "addobject": 714, "addop": 765, "addpass": 730, "addpassestoemitfil": [788, 815], "addpassestoemitmc": 720, "addpdrm": 776, "addpdrr": 776, "addplugin": 714, "addpreemitpass": 786, "addpreserved": [594, 692], "addpsrm": 776, "addpsrr": 776, "addq": [632, 768], "addr": [585, 612, 631, 642, 643, 649, 650, 651, 655, 665, 710, 721, 766, 786], "addr1": 765, "addr2": [655, 765], "addr2lin": [616, 655, 700], "addr3": 655, "addr64": [2, 176], "addrawvalu": 711, "addreg": 608, "addregbankcoverag": 696, "addregfrm": 786, "addregisterclass": [608, 786], "addrequired": 692, "address": [24, 31, 33, 34, 55, 56, 67, 81, 82, 84, 127, 132, 133, 145, 158, 174, 175, 176, 217, 224, 225, 241, 242, 255, 269, 270, 341, 349, 351, 375, 381, 383, 384, 404, 405, 419, 432, 433, 435, 487, 494, 496, 497, 517, 518, 531, 545, 546, 548, 588, 589, 590, 594, 595, 596, 597, 598, 606, 610, 616, 621, 631, 640, 641, 642, 643, 644, 645, 649, 650, 651, 661, 662, 664, 665, 668, 670, 673, 678, 679, 680, 688, 689, 701, 703, 708, 709, 713, 714, 716, 717, 721, 725, 727, 728, 730, 731, 732, 734, 735, 736, 745, 746, 747, 748, 749, 751, 756, 757, 762, 765, 768, 770, 772, 776, 777, 785, 786, 788, 790, 791, 794, 796, 811, 812, 813, 814, 817], "address_rang": [585, 586], "address_siz": [585, 586, 591, 729], "address_spac": 591, "addressed": [585, 586, 597, 610, 664, 670, 680, 701, 710, 763, 770, 772], "addressibl": [591, 689], "addressing": [31, 82, 341, 351, 381, 433, 494, 546, 585, 586, 591, 610, 611, 670, 701, 751, 764, 776], "addressis32b": 736, "addressmodesemitt": 775, "addressof": 728, "addresssanitiz": [700, 715, 717, 725, 769], "addresssiz": 776, "addressspac": 688, "addri": 786, "addrr": 786, "addrri": 786, "addrrr": 786, "addrsig": [593, 649, 650, 675], "addrsig_sym": 675, "addrspac": [673, 688, 715, 729, 770], "addrspacecast": [591, 689], "addrspacequal": 591, "addsdrm": 776, "addsdrr": 776, "addssrm": 776, "addssrr": 776, "addtmp": [810, 811, 812, 813, 814, 815, 816], "addtmp1": 811, "addtmp4": 810, "addtolinkord": 731, "addtypenam": 749, "addw": 757, "addx": 776, "addxri": 721, "addy": 776, "adequat": [585, 606, 766, 786], "adequately": [680, 685], "adher": [609, 611, 670, 749, 753, 771, 777], "adherent": [731, 771], "aditi": 697, "adjacent": [591, 715, 749, 776], "adjust": [585, 591, 617, 642, 643, 646, 655, 673, 678, 683, 685, 713, 727, 766], "adjusted": [585, 586, 606, 646, 715, 732, 766, 781], "adjuster": 744, "adjusting": [713, 770, 786], "adjustment": [670, 713, 715, 766, 786], "adjustpassmanag": [729, 730], "admin": [670, 685, 701, 762], "administr": 714, "administrator": [685, 701], "adminno": 671, "adopt": [611, 670, 682, 714, 731, 766, 771], "adopted": 608, "adopting": [731, 762], "adornment": [715, 767], "adrian": 664, "adrp": 675, "adsiz": 776, "adsizebit": 776, "adsizex": 776, "adt": [611, 683, 794, 795, 796, 797, 810, 811, 812, 813, 814, 815, 816], "adttest": 606, "advanc": [585, 586, 670, 715, 724, 809, 816], "advanced": [586, 604, 607, 661, 670, 680, 708, 714, 715, 722, 731, 765, 767, 784, 786, 788], "advancedbuild": 704, "advantag": [595, 597, 608, 611, 661, 665, 670, 680, 681, 683, 688, 711, 715, 717, 718, 719, 749, 751, 759, 766, 813, 814, 817], "advent": 715, "adventur": 749, "advertis": 673, "advertised": 724, "advic": [613, 670, 678, 680, 682, 702, 747], "advis": [693, 772, 812], "advised": [604, 607, 622, 711], "advisor": 762, "advisory": 609, "advocating": [609, 611], "aed0d21a6": 686, "aed0d21a62db": 686, "aentry": [774, 775], "affect": [112, 288, 306, 308, 576, 589, 591, 597, 605, 606, 609, 640, 642, 651, 661, 662, 670, 706, 707, 715, 726, 727, 728, 729, 730, 749, 758, 765, 771, 772, 779, 781, 788, 812], "affected": [589, 595, 606, 610, 612, 640, 709, 715, 728, 733, 751, 753, 772], "affecting": [595, 698, 716, 728, 762, 811], "affili": [670, 762], "affiliated": 607, "affinity": 617, "affixed": 666, "afn": 715, "aforementioned": [670, 740, 743, 782], "aform_1": 608, "aform_2": 608, "afre": 713, "aft": 782, "after": [68, 159, 256, 420, 532, 585, 586, 589, 590, 593, 594, 595, 596, 597, 598, 599, 602, 605, 606, 607, 608, 609, 612, 613, 615, 617, 618, 620, 622, 626, 630, 631, 640, 645, 655, 659, 660, 661, 665, 666, 670, 671, 672, 673, 675, 676, 679, 680, 681, 683, 685, 686, 689, 690, 691, 693, 694, 698, 701, 702, 703, 706, 707, 708, 710, 713, 714, 715, 717, 719, 720, 721, 722, 723, 724, 726, 727, 729, 730, 731, 736, 740, 746, 747, 749, 750, 753, 757, 759, 761, 762, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 779, 780, 781, 782, 783, 786, 787, 788, 791, 792, 794, 795, 809, 810, 811, 812, 813, 814, 815, 816, 817], "afterbb": [812, 813, 814, 815, 816], "afterloop": [812, 813, 814, 815, 816], "afterward": [670, 678, 715, 719, 746, 766, 770], "again": [585, 593, 597, 607, 610, 612, 617, 632, 661, 665, 668, 673, 678, 685, 686, 693, 701, 715, 722, 726, 727, 734, 749, 753, 761, 764, 767, 772, 780, 782, 788, 810, 811, 812, 814, 817], "against": [593, 600, 604, 606, 609, 612, 625, 640, 645, 657, 670, 673, 675, 676, 678, 679, 698, 700, 703, 708, 713, 714, 715, 717, 728, 729, 731, 745, 746, 749, 751, 753, 757, 761, 762, 766, 780, 781, 783, 789, 792, 810], "age": [609, 736, 741, 776], "agency": 760, "agent": [591, 715], "agg": 715, "agg1": 715, "agg2": 715, "agg3": 715, "aggreg": 790, "aggregat": [611, 645, 673, 713, 716, 749, 786, 790], "aggregated": [631, 790], "aggress": [594, 608, 611, 662, 677, 680, 683, 715, 716, 765, 809, 812], "aggressively": [715, 746, 749], "agnostic": [597, 608, 642, 654, 715, 731, 765, 771], "ago": 670, "agpr": [591, 715], "agpr0": 591, "agpr255": 591, "agre": [585, 586, 609, 610, 670, 728, 738, 746, 753, 762, 765, 792], "agreed": [670, 690, 753, 762], "agrep": 780, "ah": [715, 768, 777], "ahead": [611, 670, 673, 683, 685, 708, 709, 714, 731, 751, 770, 788, 794, 809, 817, 818], "ahmed": [697, 762], "aid": [680, 714, 715, 775], "aided": 766, "aim": [597, 601, 602, 607, 611, 613, 666, 670, 714, 715, 721, 731, 732, 749, 755, 760, 761, 762, 765, 771, 794], "aimed": [666, 670, 679, 771], "aiming": 756, "ain": 591, "air": 715, "aix": [608, 663, 757], "aka": [593, 594, 608, 657, 670, 715, 716, 717, 730, 743, 744, 749, 808, 809, 810, 811, 812, 813, 814, 815, 816], "al": [608, 708, 715, 721, 768, 777, 786], "al_aliasset": 786, "al_superregsset": 786, "alac": 779, "alacconvert": 779, "albeit": [689, 814], "albin": 762, "alex": [666, 753], "algebraic": 746, "algn": 790, "algo": 788, "algorithm": [594, 611, 629, 632, 640, 661, 669, 673, 680, 694, 715, 719, 726, 727, 736, 746, 749, 755, 766, 774, 776, 786, 809, 810, 811, 812, 813, 814, 815, 817], "algorithmic": 749, "ali": [585, 586, 595, 598, 612, 617, 621, 622, 633, 640, 641, 648, 650, 682, 713, 716, 721, 726, 727, 730, 731, 732, 782, 784, 786, 788], "alias": [594, 631, 640, 643, 650, 660, 707, 726, 746, 757, 786], "aliasanalys": [715, 726, 788], "aliasanalysisdebugg": 594, "aliase": [598, 715, 727], "aliased": [598, 608, 661, 715, 746], "aliaseety": 715, "aliasesset": 594, "aliasing": [586, 589, 594, 632, 640, 681, 726, 768, 817], "aliasopt": 661, "aliasresult": 594, "aliasset": [594, 786], "alic": 774, "align": [591, 598, 612, 642, 666, 673, 678, 680, 700, 710, 711, 715, 721, 729, 749, 755, 765, 768, 770, 786], "align32bit": 598, "align_nod": 715, "aligned": [586, 590, 591, 595, 597, 598, 608, 665, 670, 678, 681, 700, 715, 725, 749, 765, 791, 792], "alignlog2": 715, "alignment": [585, 590, 591, 595, 608, 638, 642, 645, 663, 665, 666, 680, 681, 689, 700, 711, 714, 715, 718, 721, 727, 729, 746, 749, 757, 761, 765, 786, 791], "alignmentoffset": 714, "alignstack": [598, 715], "alignstyl": 749, "aliv": [608, 665, 715, 727, 746, 749, 766, 788], "all": [20, 123, 176, 212, 213, 370, 371, 482, 483, 585, 586, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 636, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 669, 670, 671, 672, 673, 674, 675, 678, 679, 680, 681, 682, 683, 685, 686, 688, 689, 693, 694, 696, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 743, 744, 747, 749, 750, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818], "all_build": 685, "all_ones_mask": 766, "all_zeros_mask": 766, "allanalyseson": 730, "alleviat": [608, 661, 715, 749], "alloc": [20, 123, 212, 370, 482, 586, 591, 594, 595, 611, 618, 620, 641, 642, 654, 673, 675, 680, 681, 683, 710, 713, 714, 721, 725, 726, 731, 733, 746, 749, 755, 766, 768, 769, 770, 786, 788, 790, 794, 811, 814, 815, 816], "allocainst": [611, 715, 749, 814, 815, 816], "allocat": [585, 591, 594, 608, 611, 642, 665, 673, 680, 700, 713, 714, 715, 717, 749, 761, 764, 786, 792, 817], "allocated": [585, 586, 591, 608, 618, 640, 665, 673, 681, 700, 714, 715, 720, 725, 746, 761, 764, 765, 768, 769, 770, 788, 792, 796, 811, 812, 813, 814], "allocatestring": 714, "allocating": [591, 608, 640, 665, 673, 713, 715, 725, 749, 761, 766, 768], "allocationinst": 749, "allocator": [591, 606, 618, 620, 678, 680, 688, 691, 714, 725, 756, 765, 766, 770, 786, 788], "allocsiz": [598, 715], "allon": 715, "allow": [591, 594, 595, 598, 600, 604, 606, 607, 608, 609, 610, 611, 612, 613, 617, 618, 622, 626, 632, 640, 642, 650, 654, 661, 662, 665, 666, 668, 669, 670, 672, 673, 674, 675, 680, 681, 682, 683, 685, 689, 690, 693, 700, 701, 703, 704, 706, 708, 711, 713, 714, 715, 717, 718, 719, 720, 721, 723, 725, 726, 727, 728, 729, 730, 731, 732, 734, 745, 746, 747, 749, 751, 753, 757, 759, 761, 762, 764, 765, 766, 767, 768, 770, 771, 774, 776, 777, 779, 781, 782, 783, 784, 785, 786, 788, 789, 790, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820], "allow_retr": 617, "allowed": [585, 586, 589, 590, 591, 595, 597, 598, 600, 606, 608, 612, 617, 640, 662, 665, 666, 670, 675, 680, 681, 683, 689, 710, 715, 726, 730, 731, 743, 751, 757, 759, 768, 770, 771, 776, 788, 792, 809, 813, 814], "allowing": [585, 586, 591, 594, 608, 611, 612, 617, 661, 665, 669, 670, 673, 678, 680, 710, 714, 715, 723, 730, 731, 733, 734, 736, 745, 746, 747, 749, 751, 756, 759, 765, 766, 768, 770, 776, 788, 792, 810, 814, 818], "allowlist": [626, 731, 757], "allowlist_fun": 626, "allowsanycontiguousstorag": 749, "allowsanysmallsiz": 749, "allroot": 780, "alltargetsasmparser": 604, "alltargetsdesc": 604, "alltargetsdisassembler": 604, "alltargetsinfos": 604, "ally": 715, "almost": [586, 595, 597, 608, 610, 611, 640, 670, 674, 678, 679, 680, 686, 689, 716, 749, 751, 770, 771], "alon": [598, 603, 608, 661, 670, 703, 724, 726, 766, 781, 809], "along": [595, 598, 601, 606, 608, 611, 641, 642, 646, 649, 650, 662, 665, 666, 667, 669, 670, 675, 678, 680, 683, 704, 708, 712, 714, 715, 720, 721, 722, 726, 728, 729, 741, 746, 747, 749, 755, 764, 765, 766, 767, 775, 776, 786, 787, 788, 795, 810, 811, 817, 818], "alongsid": [598, 643, 664, 683, 730, 751, 759, 787, 788], "alpha": [715, 786], "alphabetic": 591, "alphabetical": [774, 776], "alphacompilationcallback": 786, "alphajitinfo": 786, "alphanumeric": [627, 642], "already": [585, 586, 591, 594, 600, 601, 603, 604, 605, 606, 607, 608, 611, 634, 640, 641, 649, 661, 662, 664, 665, 670, 674, 680, 683, 688, 693, 696, 699, 700, 701, 708, 709, 710, 713, 714, 715, 722, 727, 728, 730, 731, 732, 733, 747, 748, 749, 750, 751, 752, 753, 760, 761, 762, 764, 765, 766, 767, 768, 770, 777, 781, 782, 786, 787, 788, 792, 794, 796, 810, 811, 812, 813, 814, 815, 816], "also": [585, 586, 587, 588, 590, 591, 592, 594, 595, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 612, 622, 626, 632, 640, 645, 646, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 685, 688, 689, 690, 691, 693, 694, 696, 699, 700, 702, 703, 704, 705, 706, 707, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 740, 745, 746, 747, 749, 750, 751, 753, 755, 757, 758, 760, 761, 762, 765, 766, 767, 768, 770, 771, 774, 775, 776, 777, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "alt_always_instrumented": 789, "alt_never_instrumented": 789, "alter": [661, 715, 749, 765], "altered": 782, "altering": 715, "altern": [585, 586, 589, 590, 591, 606, 608, 649, 673, 678, 681, 683, 688, 693, 694, 696, 709, 714, 715, 719, 731, 755, 772, 779, 786, 788], "alternat": [585, 586, 615, 686, 699, 715, 733, 749, 792, 820], "alternating": 715, "alternatively": [585, 586, 601, 602, 604, 610, 617, 626, 661, 662, 670, 678, 681, 686, 699, 714, 715, 717, 749, 766, 786, 789, 809, 814], "although": [585, 586, 595, 598, 607, 608, 610, 611, 617, 661, 662, 670, 674, 680, 683, 685, 694, 703, 708, 715, 717, 719, 721, 722, 736, 741, 743, 749, 767, 770, 775, 776, 781, 788, 813], "altivec": [608, 715, 716], "altogeth": [704, 755], "alu": [591, 640], "alu32_rr": 712, "alway": [585, 586, 591, 594, 595, 597, 598, 600, 603, 606, 607, 608, 609, 610, 611, 612, 617, 622, 624, 633, 640, 661, 662, 665, 666, 667, 670, 673, 675, 676, 678, 683, 686, 689, 693, 704, 708, 715, 716, 718, 719, 721, 726, 728, 736, 738, 743, 744, 747, 749, 750, 751, 759, 760, 762, 765, 766, 769, 770, 771, 772, 774, 776, 780, 781, 787, 789, 790, 791, 792, 809, 810, 811, 812, 813, 814, 815, 816, 817], "always_inlin": 662, "always_instru": 789, "always_instrumented": 789, "alwaysinlin": [598, 715, 787], "alwaysinlinerpass": 787, "am": [670, 689, 728, 730, 749, 787], "amar": 753, "amazing": 813, "amazingly": 812, "ambiguity": [589, 708, 776], "ambiguous": [661, 781, 809, 813], "amd": [586, 589, 591, 608, 640, 663, 706, 766, 774], "amd64": [683, 685], "amd_code_version_major": 591, "amd_kernel_code_version_minor": 591, "amd_machine_kind": 591, "amd_machine_version_major": 591, "amd_machine_version_stepping": 591, "amd_queue_t": 591, "amdfam10": 815, "amdgpu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 586, 640, 671, 683, 715, 721, 753, 774, 775, 784], "amdgpu_flat_work_group_siz": 591, "amdgpu_hsa_note_code_object_version_": 591, "amdgpu_hsa_note_hsail_": 591, "amdgpu_hsa_note_isa_": 591, "amdgpu_num_sgpr": 591, "amdgpu_num_vgpr": 591, "amdgpu_waves_per_eu": 591, "amdgpubufferintrinsic": 775, "amdgpubufferload": 775, "amdgpucodegen": 671, "amdgpuimagedimatomicintrinsic": 775, "amdgpursrcintrinsic": 775, "amdgpusample_lz_o": 775, "amdgpusamplevari": 775, "amdgputargetmachin": 730, "amdhsa_accum_offset": 591, "amdhsa_dx10_clamp": 591, "amdhsa_exception_fp_denorm_src": 591, "amdhsa_exception_fp_ieee_div_zero": 591, "amdhsa_exception_fp_ieee_inexact": 591, "amdhsa_exception_fp_ieee_invalid_op": 591, "amdhsa_exception_fp_ieee_overflow": 591, "amdhsa_exception_fp_ieee_underflow": 591, "amdhsa_exception_int_div_zero": 591, "amdhsa_float_denorm_mode_16_64": 591, "amdhsa_float_denorm_mode_32": 591, "amdhsa_float_round_mode_16_64": 591, "amdhsa_float_round_mode_32": 591, "amdhsa_forward_progress": 591, "amdhsa_fp16_overflow": 591, "amdhsa_group_segment_fixed_siz": 591, "amdhsa_ieee_mod": 591, "amdhsa_kernarg_siz": 591, "amdhsa_memory_ordered": 591, "amdhsa_next_free_sgpr": 591, "amdhsa_next_free_spgr": 591, "amdhsa_next_free_vgpr": 591, "amdhsa_private_segment_fixed_siz": 591, "amdhsa_reserve_": 591, "amdhsa_reserve_flat_scratch": 591, "amdhsa_reserve_vcc": 591, "amdhsa_reserve_xnack_mask": 591, "amdhsa_system_sgpr_private_segment_wavefront_offset": 591, "amdhsa_system_sgpr_workgroup_id_x": 591, "amdhsa_system_sgpr_workgroup_id_y": 591, "amdhsa_system_sgpr_workgroup_id_z": 591, "amdhsa_system_sgpr_workgroup_info": 591, "amdhsa_system_vgpr_workitem_id": 591, "amdhsa_tg_spl": 591, "amdhsa_user_sgpr_count": 591, "amdhsa_user_sgpr_dispatch_id": 591, "amdhsa_user_sgpr_dispatch_ptr": 591, "amdhsa_user_sgpr_flat_scratch_in": 591, "amdhsa_user_sgpr_kernarg_segment_ptr": 591, "amdhsa_user_sgpr_private_segment_buff": 591, "amdhsa_user_sgpr_private_segment_siz": 591, "amdhsa_user_sgpr_queue_ptr": 591, "amdhsa_wavefront_size32": 591, "amdhsa_workgroup_processor_mod": 591, "amdkernelcodet": 591, "amen": 608, "amend": [664, 670, 683, 747], "amin": 753, "aminiinconsistent": 753, "among": [585, 586, 608, 611, 612, 662, 675, 678, 683, 690, 715, 717, 718, 727, 729, 746, 749, 751, 774], "amongst": [585, 586, 595], "amortized": 698, "amount": [591, 602, 604, 606, 608, 609, 611, 618, 620, 640, 645, 657, 659, 661, 670, 673, 674, 676, 680, 683, 685, 689, 709, 715, 717, 727, 746, 749, 751, 761, 762, 764, 765, 768, 770, 774, 777, 788, 789, 796, 811, 818], "amper": 702, "ampersand": [120, 209, 314, 479, 584], "ample": 772, "amx": 715, "an": [18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 36, 37, 38, 51, 52, 53, 54, 55, 56, 78, 80, 83, 85, 93, 96, 97, 98, 99, 100, 101, 110, 111, 112, 113, 114, 117, 120, 123, 124, 125, 126, 127, 129, 130, 142, 143, 144, 145, 171, 173, 176, 186, 187, 188, 189, 190, 191, 199, 200, 201, 202, 205, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 223, 237, 238, 239, 240, 241, 242, 266, 268, 271, 281, 282, 283, 286, 287, 288, 289, 304, 305, 306, 307, 308, 310, 314, 315, 320, 325, 337, 340, 341, 342, 352, 354, 355, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 386, 387, 388, 400, 401, 402, 403, 404, 405, 431, 434, 436, 444, 447, 448, 449, 450, 451, 452, 467, 468, 469, 470, 479, 481, 482, 483, 484, 485, 486, 487, 490, 491, 493, 494, 495, 499, 500, 501, 513, 514, 515, 516, 517, 518, 542, 544, 547, 549, 557, 560, 561, 562, 563, 564, 565, 574, 575, 576, 577, 578, 580, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 653, 654, 655, 657, 659, 660, 662, 664, 665, 666, 667, 668, 669, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 699, 701, 702, 703, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 743, 744, 746, 747, 748, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 765, 767, 768, 769, 770, 771, 772, 774, 775, 777, 779, 780, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 794, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820], "anachronistically": 598, "analogous": [585, 586, 673, 680, 694, 715, 732, 749, 766], "analogously": [770, 788], "analogy": [715, 719], "analys": [595, 599, 600, 605, 611, 624, 659, 666, 674, 676, 678, 680, 682, 683, 688, 698, 712, 715, 716, 718, 719, 721, 726, 732, 733, 749, 753, 755, 756, 759, 765, 766, 774, 780, 784, 787, 790, 793, 811, 814, 816], "analysing": [599, 605, 789, 790], "analysisaliasing": 759, "analysisfpcommut": 759, "analysisresultmodel": 730, "analysisusag": [594, 692], "analytic": 752, "analyz": [606, 608, 611, 616, 632, 659, 660, 670, 678, 683, 685, 716, 719, 746, 765, 766, 774, 780, 781, 788, 790, 812], "analyzebranch": 786, "analyzed": [640, 665, 727, 788], "analyzerclang": 671, "analyzing": [624, 669, 696, 749, 789, 790], "ancestor": [591, 708, 776], "anchor": 765, "ancient": 593, "and": [1, 17, 20, 25, 27, 28, 34, 35, 66, 67, 84, 85, 96, 97, 98, 107, 110, 111, 112, 113, 114, 117, 120, 123, 128, 129, 130, 132, 157, 158, 175, 176, 186, 187, 196, 199, 200, 202, 205, 209, 210, 212, 213, 219, 220, 221, 225, 254, 255, 270, 271, 286, 287, 288, 294, 295, 296, 301, 304, 305, 306, 307, 308, 309, 310, 314, 316, 321, 326, 338, 340, 349, 352, 355, 370, 371, 377, 378, 379, 384, 385, 418, 419, 435, 436, 447, 448, 449, 457, 467, 468, 469, 470, 479, 480, 482, 483, 489, 490, 491, 497, 498, 530, 531, 548, 549, 560, 561, 562, 571, 574, 575, 576, 577, 578, 580, 584, 587, 589, 593, 596, 598, 600, 601, 603, 605, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 635, 636, 637, 638, 639, 644, 646, 649, 651, 653, 655, 656, 657, 658, 659, 660, 664, 666, 668, 669, 671, 672, 673, 675, 684, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 699, 700, 701, 702, 703, 707, 709, 710, 711, 712, 716, 717, 721, 723, 724, 725, 729, 732, 733, 734, 735, 736, 739, 741, 744, 745, 747, 748, 750, 752, 753, 754, 757, 758, 759, 760, 761, 763, 764, 767, 769, 771, 772, 774, 777, 778, 780, 783, 785, 787, 789, 790, 792, 793, 794, 795, 796, 797, 812, 813, 814, 815, 816, 818, 819, 820], "andrew": [680, 751], "andric": 762, "android": [683, 761, 781], "andw": 612, "andy": 762, "andykaylor": 762, "anew": 765, "angle": [662, 776, 792], "annot": [600, 612, 617, 646, 678, 714, 721, 729, 766], "annotat": [591, 600, 673, 729, 753], "annotated": [640, 662, 715, 716, 721, 723, 751], "annotating": 678, "announc": [671, 682, 724, 753, 758, 772], "announceannounc": 671, "announced": [758, 789], "announceml": 671, "announcing": [707, 751], "annual": 763, "anon": 715, "anonymous": [640, 714, 765, 774, 775, 776, 786, 788, 790, 809, 810, 811, 812, 813, 814, 815, 816], "anonymous_0": 775, "anonymous_1": 775, "anonymously": [728, 760], "anoth": [585, 586, 589, 590, 591, 594, 595, 596, 597, 598, 601, 604, 606, 607, 608, 609, 611, 612, 617, 622, 626, 640, 642, 645, 654, 655, 659, 661, 665, 666, 667, 669, 670, 673, 674, 675, 676, 680, 683, 685, 689, 691, 692, 693, 694, 696, 702, 703, 704, 706, 712, 713, 714, 715, 716, 717, 718, 719, 722, 726, 727, 728, 729, 730, 731, 735, 743, 744, 746, 751, 753, 765, 766, 767, 768, 769, 770, 771, 774, 775, 776, 777, 781, 782, 783, 786, 788, 789, 790, 791, 792, 795, 809, 810, 811, 812, 813, 814, 815, 816, 817], "another_op": 721, "anotherbranch": 751, "anothercategory": 661, "answer": [594, 601, 611, 661, 670, 676, 681, 691, 708, 715, 722, 726, 727, 746, 756, 811, 812, 814], "answered": 678, "answering": 670, "anti": [640, 669], "anticipat": [751, 791], "anticipated": [586, 753], "antisymmetric": 727, "antisymmetry": 727, "anxious": 606, "any": [120, 209, 314, 479, 584, 585, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 617, 618, 622, 624, 625, 626, 629, 630, 631, 632, 636, 640, 641, 642, 643, 645, 646, 649, 650, 653, 654, 655, 657, 659, 660, 661, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 685, 688, 689, 691, 693, 700, 702, 703, 706, 707, 708, 710, 711, 712, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 740, 743, 744, 746, 749, 750, 751, 752, 753, 755, 757, 759, 760, 761, 762, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 780, 781, 782, 783, 785, 786, 787, 788, 789, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "any_other_cond": 715, "anyextload": 689, "anyhow": 715, "anymor": [782, 788], "anyon": [595, 607, 610, 670, 672, 726, 728, 760, 762, 765, 786], "anyregcc": [598, 715, 768], "anything": [585, 586, 591, 595, 604, 608, 611, 618, 620, 640, 642, 657, 662, 665, 670, 676, 683, 685, 700, 701, 703, 708, 715, 719, 730, 731, 732, 734, 740, 746, 749, 751, 765, 766, 768, 770, 776, 777, 782, 811, 812], "anyway": [611, 669, 701, 706, 715, 726, 746, 753, 765], "anywher": [609, 612, 673, 678, 700, 715, 718, 722, 727, 767, 776, 781, 809, 814], "ao": 675, "ap": [680, 715], "ap2": 715, "apach": [611, 670, 676, 707, 771, 794, 795, 796, 797], "apart": [594, 597, 606, 688, 715, 740, 749], "apertur": [20, 370, 482, 591], "apfloat": [683, 810, 811, 812, 813, 814, 815, 816], "api": [594, 606, 611, 645, 661, 663, 671, 688, 692, 699, 707, 710, 714, 717, 726, 729, 730, 731, 732, 741, 745, 749, 753, 761, 768, 774, 789, 793, 795, 796, 797, 810, 811, 816], "api_create_info": 591, "api_shader_hash": 591, "apilipenko": 762, "apint": [721, 749, 790], "apis": [611, 664, 670, 680, 683, 684, 710, 714, 732, 744, 754, 761, 766, 772, 774, 784, 789, 794, 796, 810], "app": [745, 749, 752], "apparent": [591, 732], "apparently": 814, "appeal": 760, "appealed": 760, "appealing": 766, "appear": [585, 586, 590, 591, 594, 595, 602, 611, 612, 617, 622, 629, 640, 642, 661, 666, 670, 675, 681, 710, 715, 721, 728, 731, 734, 735, 736, 741, 743, 744, 746, 749, 751, 755, 765, 766, 770, 774, 776, 781, 786], "appearing": [617, 661, 715, 751], "appel": 680, "appel89": 680, "append": [585, 586, 591, 606, 612, 613, 622, 693, 710, 715, 749, 750, 775, 779, 781, 789], "appended": [615, 622, 623, 715, 749], "appending": [591, 598, 615, 622, 626, 636, 715, 749], "appendinglinkag": 749, "appendix": [585, 586], "appendun": 715, "appertain": 715, "apple": [607, 608, 612, 615, 631, 634, 668, 670, 673, 683, 715, 762, 765, 774], "apple_nam": [615, 765], "apple_namespac": 765, "apple_objc": 765, "apple_typ": [615, 765], "appli": [585, 586, 591, 595, 607, 608, 609, 611, 617, 622, 626, 651, 661, 669, 670, 683, 704, 710, 714, 715, 730, 747, 753, 755, 757, 762, 771, 776, 795], "applic": [585, 586, 597, 608, 610, 622, 626, 641, 650, 670, 715, 717, 727, 746, 749, 772], "applied": [68, 159, 256, 420, 532, 585, 586, 589, 590, 602, 622, 631, 642, 654, 661, 665, 670, 675, 681, 688, 696, 701, 705, 707, 714, 715, 717, 719, 720, 733, 746, 747, 749, 762, 765, 772, 776, 779, 782, 811], "appliqu": [591, 598, 606, 608, 611, 625, 626, 661, 662, 663, 670, 673, 677, 678, 680, 687, 688, 714, 715, 720, 749, 756, 757, 761, 766, 768, 770, 776, 777, 779, 781, 784, 786, 788, 790, 791, 793, 794, 808, 811, 813, 817], "applu331": 752, "apply": [585, 586, 588, 591, 594, 597, 601, 606, 608, 610, 611, 622, 642, 654, 661, 665, 670, 675, 678, 681, 683, 700, 705, 710, 714, 715, 720, 731, 736, 743, 747, 749, 751, 753, 755, 766, 771, 772, 776, 782, 786, 788, 791, 792, 795, 813, 814], "applying": [610, 659, 665, 670, 704, 714, 715, 718, 758, 782, 791, 817], "applymergedloc": 710, "apprec": 793, "appreciat": [664, 670], "appreciated": [586, 670, 704], "approach": [585, 586, 591, 597, 602, 603, 606, 608, 640, 661, 662, 665, 670, 673, 681, 683, 694, 698, 708, 712, 714, 715, 725, 727, 746, 749, 753, 755, 762, 764, 765, 770, 772, 786], "appropriat": [585, 586, 591, 594, 595, 597, 601, 608, 610, 611, 612, 626, 640, 646, 661, 665, 670, 673, 674, 678, 679, 680, 683, 689, 690, 691, 701, 706, 707, 708, 711, 712, 715, 729, 731, 738, 743, 746, 747, 748, 749, 751, 753, 758, 760, 765, 770, 771, 772, 775, 776, 777, 786, 788, 792, 794, 796, 809, 813, 814], "appropriately": [586, 594, 617, 670, 701, 715, 718, 749, 760, 765, 770, 776, 790], "appropriateness": 760, "approval": [610, 670, 701, 707, 753, 772], "approved": [610, 670, 701, 747, 762], "approving": 707, "approx": [662, 729], "approxim": [600, 716], "approximat": [662, 715, 717], "approximated": 715, "approximately": [617, 685, 700, 762, 782], "apr": 771, "apt": [728, 767], "aptr": 715, "apu": 591, "aq": 715, "aq2": 715, "aqlwrap": 591, "aquired": 726, "ar": [606, 616, 636, 641, 648, 683, 699, 705, 730, 749, 757], "arang": 631, "arbitrarily": [585, 586, 708, 715, 738, 765, 789, 812], "arbitrary": [585, 586, 591, 594, 598, 608, 611, 617, 632, 661, 665, 673, 679, 680, 681, 689, 698, 710, 715, 721, 726, 731, 744, 748, 749, 762, 765, 766, 768, 770, 774, 775, 776, 786, 788, 791, 809, 810, 811, 814, 817, 818], "arc": [626, 683, 728, 747, 753, 775], "arcanist": [682, 683, 728, 747], "arch": [615, 618, 620, 626, 631, 638, 640, 641, 642, 643, 644, 649, 650, 651, 655, 662, 683, 731, 758, 789, 815], "arch1": 641, "arch2": 641, "arch_nam": 655, "arch_only": 636, "arch_vgpr": 591, "arche": [702, 704], "architected": 591, "architectur": [585, 586, 595, 597, 605, 606, 608, 615, 617, 618, 620, 626, 631, 632, 636, 638, 640, 641, 642, 643, 649, 650, 651, 655, 662, 664, 673, 678, 679, 683, 684, 685, 700, 702, 704, 706, 707, 714, 715, 717, 721, 728, 729, 731, 732, 735, 748, 755, 757, 758, 761, 766, 772, 774, 776, 777, 781, 783, 784, 786, 789, 793, 815, 819], "architectural": [585, 586, 591, 612], "architecturally": [640, 662], "architecture_name_siz": 591, "archiv": [604, 616, 626, 631, 635, 641, 642, 643, 651, 654, 663, 682, 699, 718, 736, 749, 750, 751, 757, 760, 761, 789], "archived": [616, 622, 670], "archiveiterator": 749, "archiver": 622, "arcp": 715, "arcpatch": 747, "arctan": 792, "are": [27, 30, 85, 98, 107, 112, 114, 129, 145, 175, 176, 196, 220, 223, 270, 271, 288, 301, 306, 308, 352, 378, 380, 435, 436, 449, 457, 470, 490, 493, 548, 549, 562, 571, 576, 578, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 638, 640, 641, 642, 643, 646, 647, 649, 650, 651, 653, 654, 655, 657, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "aren": [594, 608, 609, 611, 662, 670, 680, 681, 683, 685, 693, 704, 715, 721, 746, 751, 766, 772, 811, 812, 817], "areprivatesymbolsstripped": 736, "arg": [591, 611, 613, 617, 620, 626, 646, 661, 665, 679, 704, 709, 710, 714, 721, 727, 759, 765, 774, 775, 776, 791, 808, 809, 810, 811, 812, 813, 814, 815, 816], "arg1": [665, 715, 717, 789, 808], "arg2": [665, 715, 717, 808], "arg3": 665, "arg_begin": 749, "arg_empty": 749, "arg_end": 749, "arg_index": 715, "arg_iterator": 749, "arg_siz": [680, 749, 810, 811, 812, 813, 814, 815, 816], "argc": [661, 666, 668, 714, 715, 717, 729, 749, 765, 790], "argidx": 816, "arglist": 715, "argmemonly": [598, 678, 715], "argn": 607, "argnam": [661, 809, 810, 811, 812, 813, 814, 815, 816], "argstart": 661, "argsv": [810, 811, 812, 813, 814, 815, 816], "argty": 715, "arguably": 688, "argument": [27, 129, 220, 378, 490, 585, 586, 594, 597, 598, 600, 603, 605, 606, 608, 611, 612, 613, 614, 616, 617, 619, 620, 622, 624, 625, 626, 631, 640, 641, 646, 655, 656, 658, 660, 662, 666, 672, 673, 674, 676, 678, 679, 680, 681, 683, 685, 690, 695, 699, 704, 708, 709, 712, 713, 714, 717, 720, 721, 727, 732, 733, 751, 756, 757, 759, 761, 764, 765, 766, 768, 769, 770, 774, 775, 776, 777, 780, 781, 786, 788, 789, 791, 794, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "argument1": 776, "argument2": 776, "argumentlisttyp": 749, "argv": [602, 607, 620, 661, 666, 668, 714, 717, 729, 749, 765, 790], "argv0": 620, "argvalu": [661, 668], "aris": [667, 670, 681, 701, 715, 749, 776], "arithbinop_rf": 776, "arithmetic": [666, 678, 689, 746, 749, 766, 776, 785, 810, 814], "arithmetical": 666, "arithmetically": 776, "arity": 680, "arm": [595, 608, 642, 643, 649, 650, 654, 660, 671, 673, 678, 682, 683, 693, 704, 715, 716, 721, 723, 753, 754, 762, 774, 776, 781, 784, 786], "arm32": 663, "arm64": [663, 683, 714, 757, 779], "arm64e": 748, "arm7": 789, "arm_aapcs_vfpcc": 598, "arm_aapcscc": 598, "arm_apcscc": 598, "arm_bf16": 660, "arm_cde": 660, "arm_fp16": 660, "arm_mve": 660, "arm_neon": [597, 660, 774], "arm_sve": 660, "arm_sve_builtin": 660, "arm_sve_builtin_cg_map": 660, "arm_sve_sema_rangecheck": 660, "arm_sve_typeflag": 660, "armap": 641, "armcodegen": 671, "armgenasmmatch": 774, "armgenregisterinfo": 774, "armhf": [705, 706], "arminstrinfo": 786, "armv5": 595, "armv6": [663, 702], "armv7": [597, 663, 683, 702, 706, 715], "armv7a": 705, "armv8": [663, 715, 725, 756, 757, 777], "armv9": 757, "arnaud": 724, "around": [586, 594, 595, 605, 607, 610, 612, 639, 640, 661, 670, 673, 680, 681, 682, 683, 687, 694, 703, 711, 713, 715, 717, 724, 726, 727, 730, 731, 732, 733, 746, 749, 751, 753, 757, 765, 766, 767, 770, 771, 776, 786, 787, 788, 789, 809, 812, 816, 817], "arr": [681, 715, 766], "arr1": 766, "arr2": 766, "arrang": [608, 610, 661, 680, 708, 715, 746, 766, 772, 781, 788, 796], "arranged": [715, 766], "arranging": 795, "array": [586, 589, 591, 594, 597, 598, 608, 618, 645, 655, 665, 673, 678, 680, 717, 727, 729, 735, 736, 739, 740, 743, 746, 757, 765, 766, 774, 775, 781, 782, 785, 786, 809, 814, 817], "arrayidx": 715, "arrayidx1": 715, "arrayidx2": 715, "arrayidx3": 715, "arrayidx4": 715, "arrayref": [668, 775], "arraytyp": 749, "arriv": 681, "arsenault": 753, "arsenaultagre": 753, "art": 680, "artem": 662, "articl": [727, 746, 751, 793, 812, 814], "articulat": 610, "artifact": [681, 707, 717, 727, 755], "artifact_prefix": 717, "artificial": 591, "artur": 762, "asan": [717, 756, 761], "asanstackvariabledescript": 769, "asc": 752, "ascending": [585, 586, 666, 715], "ascii": [598, 643, 653, 715, 717, 765, 776, 808, 809, 810, 811, 812, 813, 814, 815, 816], "asciz": 675, "asda": 748, "asdb": 748, "asf": 670, "asga": 748, "ashr": 689, "asi": [748, 786], "asib": 748, "asid": [694, 715, 726, 749], "ask": [594, 601, 609, 610, 662, 664, 670, 674, 676, 680, 683, 707, 708, 714, 724, 727, 728, 730, 751, 758, 762, 765, 770, 772, 788, 796, 809, 817], "asked": [585, 586, 609, 670, 683, 685, 749, 762, 765], "asking": [601, 610, 664, 670, 678, 760, 762, 812, 814, 816, 817], "aslr": 761, "asm": [598, 604, 618, 620, 640, 643, 647, 660, 670, 729, 759], "asmformat": 660, "asmmatchconvert": 776, "asmmatcheremitt": 774, "asmnam": 786, "asmpars": [674, 683, 774], "asmparsernum": 660, "asmprint": [608, 680, 715, 774, 786], "asmstr": [776, 786], "asmstring": [776, 777, 786], "asmvariantnam": 776, "asmwrit": [674, 680], "asmwriternum": 660, "aspac": 585, "aspect": [585, 606, 608, 610, 665, 669, 680, 694, 696, 700, 715, 740, 741, 749, 751, 755, 761, 765, 809, 810, 812, 816, 817], "aspir": 813, "aspx": [611, 752], "assembl": [175, 270, 435, 548, 587, 588, 589, 590, 616, 618, 662, 673, 675, 683, 685, 705, 731, 751, 774, 780, 786, 819], "assembled": [585, 586, 591, 670, 679, 715, 777], "assembler": [608, 675, 679, 683], "assembling": [591, 784], "assembly": [585, 586, 590, 591, 598, 615, 618, 620, 623, 624, 629, 630, 640, 643, 647, 659, 660, 663, 670, 673, 674, 676, 679, 681, 683, 705, 721, 723, 729, 756, 757, 764, 770, 774, 781, 811, 815], "assert": [606, 608, 661, 664, 683, 701, 702, 707, 709, 714, 715, 716, 717, 728, 729, 732, 745, 746, 749, 758, 765, 786, 788, 792, 795, 810, 811, 813, 814, 815, 816], "assign": [590, 601, 608, 632, 661, 673, 676, 688, 715, 727, 728, 729, 749, 765, 776, 786, 818], "assigne": 601, "assigned": [585, 586, 590, 591, 598, 599, 600, 608, 612, 632, 646, 661, 670, 673, 675, 688, 694, 700, 710, 712, 714, 715, 725, 729, 733, 746, 749, 761, 765, 774, 776, 782, 786, 792], "assigning": [590, 712, 715], "assignment": [595, 599, 608, 611, 632, 669, 670, 676, 681, 688, 696, 714, 715, 716, 727, 749, 751, 765, 810, 815, 816, 818], "assignvirt2phy": 608, "assignvirt2stackslot": 608, "assist": [611, 670, 700, 701, 709, 710, 733, 813], "assisting": 678, "associ": [618, 669, 675, 715, 716, 727, 746, 765], "associat": [666, 668, 715, 726, 749, 768, 776, 783, 809], "associated": [585, 586, 591, 597, 598, 599, 600, 607, 608, 610, 611, 661, 665, 666, 671, 673, 675, 680, 709, 711, 714, 720, 721, 727, 731, 733, 749, 753, 759, 761, 765, 768, 770, 771, 772, 775, 776, 783, 784, 786, 789, 791, 811], "associating": [598, 661, 680, 715], "associativity": 715, "assorted": 816, "assum": [585, 586, 591, 593, 594, 602, 606, 608, 610, 611, 618, 620, 627, 632, 640, 645, 646, 662, 667, 670, 673, 674, 678, 681, 683, 685, 686, 688, 703, 714, 719, 727, 728, 729, 732, 736, 739, 740, 744, 746, 747, 749, 751, 753, 764, 765, 766, 768, 770, 775, 776, 783, 788, 790, 792, 794, 809, 810, 813, 814, 815, 816, 818], "assumed": [585, 586, 588, 590, 591, 594, 599, 600, 602, 608, 636, 642, 655, 665, 680, 688, 715, 736, 738, 741, 743, 749, 770, 775, 788], "assuming": [591, 593, 598, 611, 617, 632, 676, 683, 715, 731, 749, 751, 758, 762, 765, 766, 770, 774, 780, 782, 786, 787, 810, 817], "assumpt": [608, 611, 612, 618, 640, 666, 670, 673, 715, 719, 732, 761, 765, 766, 772, 794, 816, 817], "assur": [670, 792], "ast": [643, 660, 662, 683, 716, 731, 774, 776, 794, 796, 808, 810, 811, 813, 814, 816, 817, 818, 819], "astcontext": 611, "astdump": 774, "astlai": [731, 797], "astmaterializationun": 731, "astnod": 774, "astread": 774, "astwrit": 774, "asymmetric": 681, "asymmetry": [677, 727], "asymptomatic": 613, "async": 731, "async_context": 665, "async_coroutin": 665, "async_function_point": 665, "async_op": 665, "async_op1": 665, "async_op2": 665, "asynchronous": [591, 595, 665, 714, 715, 731], "asynchronously": [670, 714], "asynchrous": 715, "at": [585, 586, 590, 591, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 617, 618, 620, 622, 626, 631, 632, 633, 634, 638, 640, 642, 643, 644, 645, 647, 655, 661, 662, 664, 665, 666, 667, 668, 669, 670, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 686, 687, 688, 689, 690, 693, 694, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 740, 741, 743, 744, 745, 747, 748, 749, 750, 753, 755, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819], "at_apple_property": 765, "at_apple_property_attribut": 765, "at_apple_property_set": 765, "at_apple_runtime_class": 765, "at_artificial": 765, "at_byte_siz": 765, "at_decl_fil": 765, "at_decl_lin": 765, "at_encoding": 765, "at_nam": 765, "at_typ": 765, "atabl": [774, 775], "atan2": 808, "atc": 591, "atfirst": 715, "athlon": 815, "atkinson": 752, "atoi": 715, "atom": 765, "atom_count": 765, "atom_count0": 765, "atomic": [36, 37, 38, 93, 96, 97, 100, 101, 110, 111, 186, 187, 189, 190, 191, 199, 200, 281, 282, 283, 286, 287, 304, 305, 354, 355, 386, 387, 388, 444, 447, 448, 451, 452, 467, 468, 499, 500, 501, 557, 560, 561, 564, 565, 574, 575, 589, 591, 612, 669, 670, 678, 689, 693, 726, 740, 749, 756, 757, 770], "atomic_": 595, "atomic_cmpxchg": 595, "atomic_fent": 595, "atomic_load_": 595, "atomic_swap": 595, "atomically": [715, 761, 772], "atomicexpand": 595, "atomicexpandpass": 595, "atomicity": 595, "atomicrmw": [591, 595, 689], "atomtyp": 765, "atop": 680, "att": [618, 620, 643, 647, 715], "attach": [665, 668, 683, 709, 715, 747, 810], "attached": [591, 701, 710, 721, 728, 729, 731, 749, 765, 782, 783, 791, 811, 812, 813, 814], "attachedcall": 715, "attaching": [715, 782, 783, 794], "attachment": [670, 715, 721, 783], "attack": [609, 715, 748], "attacked": 766, "attacker": 766, "attacker_dat": 766, "attacker_offset": 766, "attempt": [585, 586, 590, 594, 598, 602, 613, 621, 627, 640, 642, 643, 644, 659, 662, 670, 673, 678, 683, 693, 700, 705, 710, 714, 715, 717, 720, 731, 746, 749, 759, 760, 766, 768, 770, 771, 772, 774, 786, 788, 790, 791], "attempted": [761, 796], "attempting": [586, 608, 613, 665, 714, 746, 749, 761, 771], "attend": 724, "attende": 724, "attended": 724, "attent": [609, 611, 670, 690, 701, 707, 715, 760, 781, 786, 794], "attorney": 670, "attr": [0, 2, 3, 4, 591, 598, 611, 660, 715, 765, 774, 789, 790], "attr0": [17, 121, 210, 480, 598], "attr1": 598, "attr32": [17, 121, 210, 480], "attract": [585, 586, 670, 680, 724], "attrdump": 774, "attrgrp": 598, "attrgrp0": 598, "attrgrp1": 598, "attribu": 747, "attribut": [17, 121, 210, 480, 585, 598, 608, 618, 620, 629, 631, 642, 643, 649, 650, 654, 660, 665, 670, 673, 675, 680, 688, 691, 694, 701, 709, 712, 718, 727, 729, 732, 733, 735, 749, 754, 756, 757, 759, 764, 770, 774, 775, 776, 777, 782, 786, 787, 788], "attributed": 715, "attributelist": [598, 774], "attributereferent": 774, "attrimpl": 774, "attrinfomap": 774, "attrkind": [711, 774], "attrlist": 774, "attrparsedattrimpl": 774, "attrparsedattrkind": 774, "attrparsedattrlist": 774, "attrparserstringswitch": 774, "attrpchread": 774, "attrpchwrit": 774, "attrrec": 775, "attrrecord": 775, "attrspelling": 774, "attrspellinglistindex": 774, "attrtemplateinstantiat": 774, "attrvisitor": 774, "atyp": 681, "audienc": [678, 793], "auditing": 766, "augment": [585, 591, 600], "augmentation_string": [586, 591], "augmentation_string_siz": 591, "augmented": [696, 749, 813], "augmenting": 690, "august": 720, "auquel": 123, "auror": [663, 754], "aut": 748, "authent": [682, 756], "authenticat": [701, 748], "authenticated": 748, "author": [603, 608, 610, 611, 612, 665, 670, 676, 684, 701, 708, 714, 715, 716, 721, 727, 728, 731, 747, 753, 765, 766], "authored": [665, 670], "authoring": [585, 586, 601], "authorit": 645, "authorized": 670, "auto": [589, 608, 626, 627, 646, 703, 714, 715, 719, 730, 731, 732, 749, 755, 757, 765, 774, 775, 782, 784, 789, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "autoconf": [607, 670, 702], "autocrlf": 683, "autodetected": [606, 612, 618, 620, 626, 640], "autogenerated": 670, "autoimport": 703, "autoimporting": 703, "autoinsert": 749, "autom": 777, "automat": [593, 608, 660, 714, 774], "automated": [660, 670, 683, 728, 747, 750, 753, 774], "automatic": [585, 586, 594, 608, 611, 616, 680, 714, 727, 755, 756, 761, 786, 814, 815, 816], "automatically": [588, 591, 594, 601, 604, 606, 608, 611, 617, 618, 632, 642, 661, 664, 670, 671, 676, 680, 682, 683, 686, 699, 701, 706, 707, 708, 713, 715, 719, 721, 722, 731, 732, 747, 749, 750, 751, 764, 765, 766, 767, 774, 776, 779, 782, 786, 788, 789, 792, 810, 812], "automating": [709, 774], "automaton": [608, 774], "autotool": 683, "autovectoriz": 785, "autr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "auxiliary": [591, 606, 650, 774, 786], "auxiliarydat": 820, "av": 726, "avail": [31, 341, 381, 494, 585, 586, 590, 591, 595, 604, 606, 607, 608, 611, 612, 616, 617, 618, 620, 625, 626, 632, 640, 643, 651, 657, 659, 660, 661, 662, 665, 668, 670, 673, 676, 678, 682, 683, 685, 688, 692, 693, 694, 696, 699, 700, 701, 703, 704, 705, 707, 708, 710, 714, 715, 717, 730, 731, 745, 746, 747, 749, 752, 754, 756, 757, 758, 759, 760, 761, 762, 765, 766, 768, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 783, 785, 786, 788, 789, 790, 794, 808, 810, 811, 812, 813, 815], "availability": [590, 595, 639, 640, 657, 660, 715, 751], "available_externally": [598, 715], "available_featur": [617, 781], "avalanch": 749, "avenu": 760, "averag": [600, 624, 640, 700, 701, 812, 815], "averaging": 717, "avl": 749, "avoid": [585, 586, 589, 591, 594, 596, 597, 598, 601, 602, 606, 607, 608, 612, 632, 650, 665, 670, 675, 679, 680, 681, 691, 693, 698, 704, 708, 710, 713, 715, 718, 719, 727, 746, 749, 751, 753, 755, 757, 758, 761, 762, 765, 766, 768, 769, 770, 771, 772, 781, 782, 785, 786, 788, 814, 816], "avoided": [640, 710, 749, 768], "avoiding": [608, 690, 698, 715, 717, 753, 755, 766, 781, 814], "avr": [683, 753], "avx": [715, 781, 785], "avx1": 781, "avx2": [715, 781], "avx512": [688, 715, 754, 757], "awakening": 673, "awar": [585, 586, 594, 595, 606, 607, 608, 611, 612, 661, 662, 670, 681, 683, 715, 717, 728, 731, 732, 749, 751, 754, 762, 765, 770], "awareness": 670, "away": [585, 599, 604, 611, 612, 662, 665, 670, 680, 689, 708, 715, 718, 724, 728, 746, 749, 751, 765, 766, 772, 788], "awkward": [661, 681], "ax": [608, 675, 715, 777, 786], "axis": [766, 785], "axpy": 662, "ayal": 755, "azul": 762, "b": [589, 591, 598, 599, 603, 607, 608, 611, 612, 617, 622, 626, 640, 641, 642, 647, 651, 661, 667, 668, 669, 670, 673, 675, 678, 681, 685, 686, 688, 689, 694, 698, 699, 701, 710, 712, 713, 714, 715, 726, 727, 728, 729, 731, 743, 746, 748, 749, 751, 752, 755, 757, 765, 770, 777, 781, 782, 785, 786, 788, 809, 810, 814], "b0000": 591, "b1": [710, 731, 776, 783, 785], "b128": 588, "b13e8756b13a00cf168300179061fb4b91fefbed": 717, "b16": [0, 4, 9, 588, 590], "b16x2": 588, "b16x3": 588, "b16x4": 588, "b2": [710, 715, 731, 783, 785], "b256": 588, "b3": 710, "b32": [0, 2, 3, 4, 9, 588, 590, 729], "b32x2": [0, 2, 3, 4, 9], "b512": 588, "b64": [0, 2, 3, 4, 9, 588, 590], "b64x2": [0, 2, 3, 4, 9], "b96": 588, "b_ctor_bas": 612, "bach": 771, "back": [585, 586, 591, 595, 602, 606, 608, 611, 622, 626, 651, 655, 665, 666, 667, 670, 673, 678, 680, 681, 684, 687, 688, 693, 700, 701, 702, 706, 707, 714, 715, 717, 719, 728, 731, 732, 745, 746, 747, 749, 751, 762, 764, 765, 766, 768, 770, 772, 774, 776, 781, 784, 792, 795, 810, 811, 812, 813, 814, 815, 816], "backed": [700, 715, 761], "backedg": [599, 719, 746, 770, 812, 813], "backend": [586, 595, 600, 601, 602, 613, 620, 625, 640, 643, 660, 662, 663, 673, 674, 678, 679, 683, 693, 694, 695, 696, 701, 704, 707, 710, 713, 715, 721, 730, 732, 748, 749, 753, 754, 756, 761, 765, 768, 770, 776, 784, 819], "backendutil": 730, "background": [607, 609, 722, 747, 749, 751, 774, 790], "backing": [585, 591, 699, 715, 731, 765], "backport": 706, "backporting": 762, "backslash": [717, 757], "backtrac": [608, 816], "backtrace_symbol": 700, "backup": [699, 751], "backward": [585, 586, 591, 598, 661, 666, 711, 740, 749, 766, 770, 783, 785], "bad": [602, 611, 612, 613, 686, 704, 710, 715, 727, 749, 758, 765, 766, 771, 792, 813, 816], "badarchivememb": 749, "badfileformat": 749, "badly": [678, 749], "bag": 679, "bai": 752, "bail": [715, 789], "bailing": 795, "bailouton": 749, "bak": 731, "baked": [666, 691, 731], "balanc": [593, 595, 670, 701, 761], "ball": 724, "bam": 611, "ban": 760, "bandwidth": 715, "bangoperator": 776, "bank": [589, 660, 689, 694, 695, 696], "bank_mask": [0, 1, 3, 4, 7, 8, 9, 591], "bann": 749, "banning": 710, "bar": [606, 607, 608, 610, 611, 612, 617, 625, 627, 628, 640, 646, 653, 655, 661, 662, 666, 670, 675, 676, 705, 713, 715, 724, 729, 731, 749, 751, 759, 765, 768, 770, 772, 776, 781, 783, 785, 786, 787, 792, 794, 810, 812], "bar_body": 731, "bar_in_b_cc": 600, "bar_map": 611, "baranalys": 730, "baremetal": 705, "baremetalarm": 705, "barlist": 611, "barri": [595, 640, 705, 715, 766, 770], "barrier0": 715, "bart": 591, "bas": [33, 34, 55, 56, 132, 133, 145, 224, 225, 241, 242, 383, 384, 404, 405, 496, 497, 517, 518, 585, 590, 591, 594, 598, 605, 608, 610, 611, 617, 621, 624, 626, 645, 646, 655, 657, 660, 661, 664, 670, 672, 675, 680, 681, 683, 686, 689, 691, 712, 713, 714, 719, 720, 725, 726, 731, 733, 735, 749, 750, 751, 755, 758, 761, 762, 765, 766, 772, 775, 776, 777, 780, 783, 786, 788, 789, 792, 795, 809, 810, 811, 812, 813, 814, 815, 816], "base0": 779, "base1": 779, "base2": [715, 779], "base_offset": 715, "baseclass": 776, "based": [585, 586, 588, 590, 591, 593, 594, 598, 600, 602, 604, 606, 607, 609, 610, 612, 617, 618, 624, 626, 627, 628, 640, 642, 645, 646, 647, 661, 665, 666, 670, 672, 673, 679, 683, 686, 688, 691, 693, 698, 700, 702, 705, 706, 707, 709, 714, 715, 716, 717, 719, 720, 721, 725, 726, 727, 728, 729, 731, 732, 735, 747, 748, 751, 752, 754, 755, 756, 760, 761, 762, 765, 766, 767, 770, 771, 774, 775, 777, 781, 784, 785, 786, 787, 788, 789, 792, 794, 795, 796, 797, 811, 812, 813, 814, 816], "basedonaddress": 735, "basedonsegment": 735, "basedonsegmentaddress": 735, "basedonsegmentvalu": 735, "basedonself": 735, "basedontyp": 735, "basedonvalu": 735, "basefieldnam": 775, "baseinst": 591, "baseinstrinfo": 774, "baselai": [731, 795, 797], "baselin": [608, 766, 779], "basenam": [655, 734, 765], "basename_t": 617, "baseobject": 766, "baseopcod": [712, 786], "baserec": 775, "basereg": 608, "baseregisterinfo": 774, "basereloc": 650, "basety": 715, "basety1": 715, "basety2": 715, "basetyp": 715, "basevertex": 591, "bash": [617, 672, 685, 767], "bashful": 771, "basic": [591, 595, 599, 601, 607, 608, 611, 618, 622, 624, 626, 629, 632, 633, 642, 649, 650, 660, 661, 662, 665, 666, 667, 669, 670, 671, 673, 679, 680, 683, 685, 689, 691, 694, 698, 701, 707, 710, 716, 719, 722, 726, 728, 729, 730, 731, 735, 744, 747, 750, 755, 759, 761, 765, 766, 767, 768, 770, 771, 776, 779, 785, 790, 795, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818], "basic_": 776, "basic_p": 776, "basic_r": 776, "basic_ss": 776, "basica": 788, "basicaliasanalys": [746, 788, 816], "basically": [600, 608, 611, 661, 676, 681, 698, 709, 711, 715, 719, 746, 749, 765, 780, 809, 810, 811, 812, 813, 814], "basicblock": [611, 683, 689, 726, 746, 753, 755, 788, 810, 811, 812, 813, 814, 815, 816], "basicblocklisttyp": 749, "basicblockutil": 749, "basicirlayermaterializationun": 795, "basicread": 660, "basictyp": 715, "basicwrit": 660, "batch": [685, 701], "battl": 645, "baz": [607, 611, 612, 646, 655, 661, 749, 765, 776, 783, 785, 812], "baz_in_c_cc": 600, "bazanalys": 730, "bazel": 772, "baziot": 726, "bb": [611, 633, 649, 650, 675, 689, 710, 715, 716, 721, 727, 729, 749, 765, 766, 786, 810, 811, 812, 813, 814, 815, 816], "bb0_1": 729, "bb0_2": 729, "bb0_26": 729, "bb0_28": 729, "bb0_29": 729, "bb0_30": 729, "bb0_4": 729, "bb0_5": 729, "bb1": [598, 694, 710, 715, 726, 765, 766], "bb10": 766, "bb2": [598, 694, 710, 715, 726, 765], "bb3": 715, "bb4": 694, "bb_0": 675, "bb_1": 675, "bb_continu": 715, "bb_ex": 715, "bbar": 774, "bbreferent": 721, "bc": [594, 598, 602, 603, 608, 613, 618, 623, 630, 641, 659, 670, 676, 683, 699, 709, 729, 732, 733, 749, 756, 781, 788], "bcanalyz": [598, 616, 759], "bcc": [721, 786], "bcpl": 776, "bcplcomment": 776, "bcread": 625, "bcsymbolmap": 615, "bdce": 716, "be": [20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 83, 84, 85, 86, 107, 110, 111, 117, 120, 123, 124, 125, 126, 127, 128, 129, 130, 176, 196, 199, 200, 205, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 271, 301, 304, 305, 310, 314, 316, 321, 326, 327, 338, 339, 340, 341, 352, 355, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 434, 436, 457, 467, 468, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 547, 549, 571, 574, 575, 580, 584, 585, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 617, 618, 620, 622, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 659, 660, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "bear": 612, "beating": 698, "beautiful": [808, 810, 813], "becam": 586, "becaus": [585, 586, 589, 591, 593, 594, 595, 597, 598, 600, 601, 602, 604, 607, 608, 611, 612, 617, 622, 640, 641, 645, 661, 662, 665, 666, 669, 670, 673, 676, 677, 678, 679, 680, 681, 683, 686, 691, 693, 696, 700, 704, 706, 708, 709, 710, 711, 712, 713, 715, 717, 718, 719, 720, 721, 725, 726, 727, 731, 733, 735, 738, 740, 746, 747, 749, 751, 752, 753, 759, 762, 765, 766, 768, 771, 775, 776, 777, 780, 781, 782, 783, 785, 786, 787, 788, 792, 795, 809, 810, 811, 812, 813, 814, 815, 816, 817], "becom": [585, 586, 591, 597, 607, 608, 611, 612, 631, 640, 643, 655, 661, 662, 665, 670, 671, 678, 688, 690, 692, 694, 702, 708, 710, 715, 719, 728, 730, 732, 746, 749, 751, 753, 762, 765, 766, 768, 770, 772, 776, 777, 781, 785, 786, 788, 789, 795, 809, 812, 814], "becoming": [670, 681, 714, 788], "been": [585, 586, 591, 592, 595, 597, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 615, 617, 624, 626, 640, 659, 661, 662, 664, 665, 666, 668, 670, 673, 674, 675, 676, 678, 680, 681, 689, 690, 691, 693, 694, 701, 703, 707, 710, 714, 715, 717, 720, 721, 722, 727, 728, 729, 730, 731, 733, 735, 736, 739, 741, 743, 744, 746, 747, 749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 765, 766, 768, 770, 771, 772, 773, 775, 776, 777, 782, 783, 786, 787, 788, 789, 790, 792, 794, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 817], "befor": [36, 37, 38, 93, 96, 97, 100, 101, 186, 187, 189, 190, 191, 281, 282, 283, 286, 287, 354, 386, 387, 388, 444, 447, 448, 451, 452, 499, 500, 501, 557, 560, 561, 564, 565, 585, 586, 589, 590, 591, 594, 595, 597, 602, 605, 606, 607, 608, 610, 612, 615, 617, 620, 622, 627, 632, 636, 640, 642, 645, 653, 655, 659, 661, 662, 664, 665, 670, 672, 673, 674, 676, 677, 678, 680, 681, 683, 685, 686, 691, 692, 693, 694, 703, 705, 706, 707, 708, 709, 710, 713, 714, 715, 719, 720, 721, 724, 726, 727, 728, 729, 730, 731, 733, 736, 746, 747, 748, 749, 753, 755, 758, 759, 762, 763, 765, 766, 767, 768, 769, 770, 774, 776, 780, 781, 782, 785, 786, 788, 789, 790, 791, 792, 794, 795, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "beforehand": 719, "began": [611, 731, 751], "begin": [585, 586, 591, 594, 606, 611, 622, 640, 661, 670, 680, 683, 685, 694, 707, 714, 716, 720, 726, 734, 735, 736, 740, 749, 753, 765, 766, 774, 775, 776, 786, 791, 792, 794, 795, 812, 814, 815, 816], "beginassembly": 680, "beginn": [664, 683], "beginnerbeginner": 671, "beginning": [585, 586, 591, 594, 598, 608, 611, 612, 629, 640, 670, 673, 678, 680, 708, 715, 727, 729, 730, 740, 759, 761, 765, 768, 771, 775, 776, 781, 789, 812, 816], "behalf": [664, 670, 715, 747], "behav": [585, 586, 591, 594, 595, 603, 607, 626, 643, 662, 665, 670, 673, 682, 714, 715, 796], "behaved": [611, 677, 719], "behaving": 709, "behavior": [585, 586, 591, 595, 601, 603, 607, 608, 609, 611, 612, 613, 617, 622, 629, 640, 661, 662, 665, 670, 673, 674, 676, 678, 680, 709, 710, 714, 715, 717, 719, 731, 733, 746, 748, 749, 760, 761, 762, 766, 776, 783, 785, 786, 788, 809, 812, 814], "behaviour": [597, 603, 661, 689, 694, 715, 721, 781, 785], "behind": [608, 611, 612, 669, 670, 701, 710, 711, 712, 715, 729, 749, 757, 770, 784, 788, 794], "being": [20, 175, 212, 270, 370, 435, 482, 548, 585, 586, 589, 590, 591, 594, 595, 597, 598, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 615, 617, 622, 624, 629, 630, 632, 640, 646, 651, 661, 662, 664, 665, 666, 670, 671, 673, 674, 677, 679, 681, 683, 686, 692, 693, 701, 702, 703, 705, 707, 708, 709, 711, 713, 714, 715, 717, 719, 720, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 740, 744, 746, 747, 748, 749, 751, 753, 760, 761, 762, 763, 765, 766, 768, 770, 771, 772, 774, 776, 777, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 809, 810, 812, 813, 814, 816, 817], "belevich": 662, "belief": 609, "believ": [601, 609, 670, 709, 715, 731, 733, 749, 760, 763, 811, 812, 813], "believed": 766, "belong": [586, 661, 665, 669, 673, 675, 689, 715, 727, 749, 761, 791, 814], "belonging": [591, 665, 749, 783], "below": [20, 27, 120, 123, 129, 209, 212, 213, 220, 314, 370, 371, 378, 479, 482, 483, 490, 584, 585, 586, 587, 589, 590, 591, 593, 594, 595, 598, 600, 606, 607, 608, 610, 611, 612, 618, 622, 631, 633, 640, 646, 651, 655, 661, 662, 664, 665, 666, 669, 670, 671, 678, 683, 685, 692, 694, 700, 702, 704, 706, 707, 708, 713, 714, 715, 719, 721, 726, 727, 729, 731, 733, 736, 741, 746, 747, 749, 750, 751, 752, 755, 757, 758, 762, 764, 765, 766, 768, 770, 772, 774, 776, 781, 783, 785, 786, 787, 788, 789, 790, 791, 792, 795, 809, 811, 812, 813, 814, 815, 816], "benchmark": [596, 606, 616, 662, 670, 682, 707, 749, 750, 756, 758, 765, 766, 780, 781, 785], "benchmarked": 632, "benchmarking": [683, 758, 781], "benchspec": 780, "bendersky": 662, "beneath": 767, "benef": [585, 586, 591, 594, 604, 681, 688, 701, 704, 714, 715, 717, 719, 746, 750, 753, 765, 772, 795, 811, 815], "beneficial": [585, 604, 665, 690, 696, 715, 772, 782, 785], "benefit": [585, 604, 611, 678, 680, 687, 693, 701, 715, 772, 796, 797], "benign": 749, "benjamin": 680, "bentry": 774, "berkeley": 651, "bernstein": 765, "besid": [661, 682, 715, 751, 757, 760, 766, 781, 786, 813], "bespok": 680, "best": [594, 597, 604, 607, 608, 610, 611, 620, 632, 670, 673, 676, 680, 686, 696, 704, 710, 715, 719, 724, 728, 746, 749, 755, 761, 762, 765, 766, 767, 768, 770, 772, 784, 808, 809, 818], "bet": [585, 586, 595, 601, 608, 610, 611, 612, 615, 632, 640, 670, 673, 682, 688, 689, 694, 698, 700, 701, 702, 704, 709, 710, 715, 716, 717, 719, 724, 725, 726, 727, 728, 730, 731, 746, 749, 751, 765, 766, 775, 780, 785, 788, 789, 790, 794, 809, 812, 814, 817], "betterment": 732, "bettor": 731, "between": [585, 586, 589, 591, 593, 594, 595, 597, 598, 607, 608, 611, 612, 627, 629, 631, 639, 640, 645, 646, 650, 657, 661, 665, 666, 669, 670, 672, 673, 674, 676, 680, 683, 686, 688, 689, 694, 701, 703, 705, 707, 710, 712, 713, 714, 715, 716, 717, 719, 720, 721, 723, 726, 727, 729, 731, 732, 734, 736, 739, 743, 746, 747, 751, 753, 758, 759, 761, 765, 766, 768, 770, 771, 772, 774, 776, 779, 781, 782, 784, 786, 789, 791, 792, 808, 811, 812], "bewar": [680, 724], "beyl": [753, 762], "beylsdistinguish": 753, "beyond": [591, 607, 608, 660, 673, 678, 681, 692, 694, 701, 715, 722, 723, 726, 731, 749, 762, 766, 767, 777], "bf": 752, "bf16": [660, 715], "bf16x2": [8, 9], "bf16x4": 9, "bfd": [679, 699], "bfdnam": 642, "bff": 749, "bfi": 715, "bfloat": [598, 715], "bfoo": 774, "bh": 777, "bi": 596, "biased": 701, "bicubic": 752, "bidirectional": 749, "big": [596, 604, 608, 611, 620, 670, 678, 693, 702, 715, 749, 752, 757, 758, 781, 784, 786, 791, 810, 813, 814], "bigblock": 620, "bigg": [585, 586, 611, 665, 719, 792], "biggest": [608, 713], "bigmip": 642, "bigmsf": 740, "bikeshed": 708, "bilinear": 752, "bin": [593, 606, 613, 626, 661, 668, 672, 679, 683, 685, 686, 694, 699, 702, 704, 705, 706, 728, 750, 751, 758, 777, 779, 781, 786, 787, 790], "binar": [604, 605, 606, 616, 625, 626, 651, 662, 664, 670, 672, 675, 683, 685, 699, 704, 705, 706, 707, 717, 725, 729, 757, 758, 761, 765, 789, 791, 817], "binary": [591, 595, 598, 600, 602, 604, 605, 606, 608, 615, 622, 623, 626, 630, 633, 634, 637, 638, 643, 645, 646, 647, 651, 655, 659, 661, 662, 663, 664, 666, 670, 672, 675, 679, 680, 683, 699, 700, 705, 706, 714, 717, 720, 727, 728, 729, 736, 739, 743, 745, 746, 749, 757, 758, 761, 765, 766, 774, 781, 786, 790, 791, 810, 811, 812, 814, 815, 816, 817, 818, 820], "binary128": 715, "binary16": 715, "binary32": 715, "binary64": 715, "binary_nam": 655, "binaryexprast": [809, 810, 811, 812, 813, 814, 815, 816], "binaryoperator": [611, 749], "binaryprecedent": [813, 814, 815, 816], "bind": [611, 625, 643, 694, 715, 731, 776, 786, 792, 809, 810, 811, 812, 813, 814, 815, 816], "bindex": 786, "binding": [606, 642, 643, 676, 715, 756, 772, 776, 786, 814, 815, 816], "binfmt": 683, "binfmt_misc": 683, "bininteg": 776, "binloc": 816, "binop": [590, 715, 809, 810, 811, 812, 813, 814, 815, 816], "binopprecedent": [809, 810, 811, 812, 813, 814, 815, 816], "binoprh": [809, 810, 811, 812, 813, 814, 815, 816], "binoprr": 776, "binoprr_rf": 776, "binpath": 668, "binutil": [606, 663, 672, 683, 699, 701, 706], "bipartit": 714, "bisect": [682, 683, 701, 749, 751, 756], "bisect_script": 751, "bisecting": 682, "bison": 780, "bit": [19, 20, 23, 24, 27, 30, 31, 32, 33, 34, 51, 55, 56, 81, 82, 83, 96, 97, 98, 110, 111, 112, 114, 117, 120, 123, 126, 127, 129, 132, 133, 142, 145, 174, 176, 186, 187, 199, 200, 205, 209, 212, 213, 216, 217, 220, 223, 224, 225, 237, 269, 279, 280, 286, 287, 288, 290, 291, 294, 295, 296, 304, 305, 306, 308, 309, 310, 314, 315, 320, 325, 337, 341, 351, 355, 369, 370, 371, 374, 375, 378, 380, 381, 382, 383, 384, 400, 404, 405, 432, 433, 434, 447, 448, 449, 467, 468, 470, 479, 482, 483, 486, 487, 490, 493, 494, 495, 496, 497, 513, 517, 518, 545, 546, 547, 560, 561, 562, 574, 575, 576, 578, 580, 584, 588, 589, 590, 593, 595, 597, 600, 606, 607, 608, 612, 624, 632, 662, 663, 665, 666, 670, 673, 674, 675, 676, 679, 680, 681, 683, 685, 688, 689, 690, 693, 698, 701, 708, 711, 713, 716, 717, 719, 721, 725, 727, 728, 729, 731, 735, 736, 740, 741, 743, 748, 757, 758, 761, 765, 768, 770, 772, 774, 775, 776, 777, 783, 786, 788, 791, 792, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "bitbucket": [751, 752], "bitcast": [594, 597, 612, 665, 673, 680, 688, 689, 727, 732, 746, 783, 786], "bitcastability": 727, "bitcasted": [715, 727], "bitcasting": [681, 715], "bitcod": [602, 604, 608, 613, 616, 618, 622, 623, 625, 629, 630, 633, 635, 659, 670, 674, 683, 685, 699, 709, 715, 727, 729, 732, 746, 749, 756, 779, 788], "bitcoderead": 674, "bitcodewrit": [674, 749], "bitconverted": 597, "bitfield": [595, 735, 736, 740, 791], "bitless": 743, "bitmap": 598, "bitmask": [589, 715, 735, 743], "bitmask_perm": 589, "bitness": 743, "bitpacked": 781, "bitpattern": 715, "bitrecty": 775, "bits_0_7": 689, "bits_16_23": 689, "bits_24_31": 689, "bits_8_15": 689, "bitset": [717, 783, 786, 792], "bitsetcas": 792, "bitwidth": [598, 689, 715, 727, 770], "bitwis": [590, 608, 746, 776], "bjark": 662, "bjarn": 749, "bl": [586, 612, 675, 777], "black": [694, 789], "blah": [611, 661, 717], "blam": [728, 747, 751], "blaming": 609, "blank": [611, 612, 622, 628, 646, 670, 722, 747, 767, 776, 809, 817, 818], "blanket": 731, "blarg": 749, "blat": 814, "blatantly": 762, "bleed": 607, "bleeding": 682, "blend": 608, "blended": 748, "blgp": [8, 9], "blind": 608, "blissfully": [661, 662], "bloat": [666, 700], "bloating": 611, "blob": [591, 598, 653, 715, 751, 758, 759], "block": [591, 594, 600, 603, 607, 608, 620, 624, 626, 629, 631, 632, 633, 643, 645, 646, 649, 650, 665, 667, 669, 670, 673, 678, 680, 689, 690, 691, 694, 698, 707, 710, 713, 714, 716, 717, 719, 722, 726, 727, 729, 738, 739, 744, 753, 755, 756, 758, 759, 761, 762, 764, 765, 768, 774, 783, 785, 786, 809, 810, 811, 812, 813, 814, 815, 816], "blockaddress": [689, 715], "blockcodesiz": 759, "blockdim": 729, "blocker": 707, "blockextractor": 694, "blockfrequencyinfo": [599, 756], "blockid": [598, 759], "blockidx": 729, "blockinfo_block": 759, "blocking": [610, 707, 758], "blocklen": 598, "blocklen_32": 598, "blockmapaddr": 740, "blocknam": 598, "blockscalartrait": 792, "blocksiz": [729, 740], "blocksizex": 729, "blocksizey": 729, "blog": [730, 751, 766], "blogspot": 766, "bloom": 608, "blow": 717, "blr": 675, "blunt": 790, "blx": 675, "bmi2": 766, "bnextind": 715, "bnf": 591, "bo": [586, 611], "board": [670, 702, 706, 760, 762], "boat": [611, 753], "bob": [774, 775, 792], "bod": [598, 669, 673, 727, 731, 749, 788, 790, 809, 810, 811], "body": [585, 586, 591, 598, 602, 611, 612, 632, 661, 665, 670, 673, 710, 715, 717, 719, 721, 727, 746, 749, 753, 764, 766, 770, 777, 786, 788, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "bodyexpr": [812, 813, 814, 815, 816], "bodyitem": 776, "bodysequent": 791, "bodyval": [814, 815, 816], "boehm": 680, "bogn": 697, "bogus": [788, 815], "boil": [597, 661, 670, 708, 749, 751, 812, 813], "boilerplat": [661, 680, 708, 787], "bold": [722, 767], "boltbolt": 671, "bon": [768, 786, 794], "bonair": 591, "bondhugul": 752, "book": [611, 663, 664, 686, 716, 749, 788], "bookkeeping": [746, 749], "bool": [594, 595, 604, 606, 608, 611, 640, 661, 691, 692, 708, 715, 717, 727, 730, 733, 749, 759, 765, 775, 786, 787, 788, 789, 790, 792, 810, 811, 812, 813, 814, 815, 816], "boolean": [591, 598, 606, 608, 611, 618, 665, 666, 714, 715, 743, 746, 749, 774, 775, 776, 781, 786, 812], "boolean128": 743, "boolean16": 743, "boolean32": 743, "boolean64": 743, "boolean8": 743, "boolordefault": 661, "booltmp": [810, 811, 812, 813, 814, 815, 816], "boost": 596, "bootstrap": [604, 683], "bootstrap_": [593, 604, 672], "bootstrapping": 593, "boring": [612, 788], "boringssl": 717, "bork": 661, "borrow": 749, "borrowed": 715, "bot": [670, 682, 683, 701, 728, 751], "both": [85, 176, 271, 352, 436, 549, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 598, 600, 601, 602, 604, 606, 607, 608, 609, 610, 611, 612, 617, 622, 626, 631, 635, 638, 640, 641, 645, 646, 661, 662, 663, 666, 667, 669, 670, 673, 676, 678, 679, 680, 681, 685, 688, 689, 693, 696, 698, 700, 701, 705, 706, 707, 708, 710, 714, 715, 717, 719, 720, 725, 726, 727, 730, 731, 732, 736, 740, 741, 745, 746, 748, 749, 753, 755, 760, 761, 762, 763, 764, 765, 766, 768, 770, 772, 774, 775, 776, 777, 781, 782, 785, 786, 788, 789, 790, 792, 794, 795, 809, 810, 811, 812, 814, 816, 817, 818], "botsalgn": 752, "botsspar": 752, "bottom": [599, 620, 661, 691, 693, 715, 716, 719, 728, 746, 747, 771, 776, 785, 786, 788, 795], "bou_fals": 661, "bou_tru": 661, "bou_unset": 661, "bougach": [697, 762], "bound": [585, 586, 590, 591, 670, 693, 713, 715, 721, 729, 749, 769, 770, 776, 786, 792], "bound_ctrl": [0, 1, 3, 4, 7, 8, 9, 591], "boundar": [595, 597, 605, 608, 665, 715, 731, 766, 811], "boundary": [597, 598, 608, 700, 715, 719, 746, 749], "bounded": [585, 586, 640], "bourn": [661, 683], "box": [608, 670, 694, 747, 765, 766, 789], "bp": [591, 768, 777], "bpf": [608, 683, 717, 753], "bpf_add": 608, "bpf_alu": 608, "bpf_alu64": 608, "bpf_and": 608, "bpf_arsh": 608, "bpf_b": 608, "bpf_call": 608, "bpf_class": 608, "bpf_div": 608, "bpf_dw": 608, "bpf_end": 608, "bpf_ex": 608, "bpf_h": 608, "bpf_imm": 608, "bpf_ja": 608, "bpf_jeq": 608, "bpf_jge": 608, "bpf_jgt": 608, "bpf_jmp": 608, "bpf_jne": 608, "bpf_jset": 608, "bpf_jsge": 608, "bpf_jsgt": 608, "bpf_k": 608, "bpf_ld": 608, "bpf_ldx": 608, "bpf_lsh": 608, "bpf_mem": 608, "bpf_mod": 608, "bpf_mov": 608, "bpf_mul": 608, "bpf_neg": 608, "bpf_op": 608, "bpf_or": 608, "bpf_rsh": 608, "bpf_st": 608, "bpf_stx": 608, "bpf_sub": 608, "bpf_w": 608, "bpf_x": 608, "bpf_xadd": 608, "bpf_xor": 608, "bpl": 777, "bptr": 715, "br": [598, 599, 665, 673, 676, 677, 694, 719, 721, 726, 729, 765, 782, 812, 813, 814, 815, 816], "bra": 729, "brac": [612, 673, 715, 749, 776, 781], "bracket": [612, 662, 670, 715, 721, 762, 765, 776, 792], "bracketed": 673, "bradbury": 753, "bradburyconcern": 753, "bradburytransit": 753, "brain": [598, 611, 715], "branch": [24, 127, 217, 375, 487, 585, 586, 590, 605, 606, 608, 611, 626, 632, 640, 643, 663, 665, 666, 670, 671, 672, 673, 676, 677, 678, 683, 686, 689, 701, 710, 715, 719, 721, 728, 733, 747, 749, 753, 755, 756, 770, 772, 783, 812, 813, 814, 815, 816], "branch_weight": [599, 600], "branched": [605, 670, 751], "branchfold": [710, 786], "branchfolding": 786, "branchfunnel": 715, "branching": [599, 707, 715, 719, 786], "branchless": 766, "branchprobability": 600, "branchprobabilityinfo": 781, "brand": [787, 788], "brav": 809, "breadth": [620, 752, 818], "breagen": 752, "break": [597, 600, 611, 661, 670, 673, 674, 680, 701, 703, 707, 710, 711, 714, 715, 719, 728, 745, 749, 770, 772, 776, 785, 786, 788, 808, 809, 810, 811, 812, 813, 814, 815, 816], "breakag": [670, 751, 772], "breakcriticaledg": 788, "breaking": [585, 586, 606, 608, 670, 675, 719, 723, 765, 816], "breakpoint": [591, 602, 668, 710, 715, 757, 816, 818], "breg": [585, 586], "bregx": 585, "brendan": 790, "brevity": [597, 729, 731], "brewed": 749, "brian": 755, "brick": 727, "brief": [585, 594, 601, 606, 607, 611, 645, 661, 683, 727], "briefly": [666, 704, 727, 788], "brig": 591, "bring": [678, 680, 695, 717, 759, 770, 794, 817], "bringing": 714, "broad": [661, 670, 680, 701, 749, 766, 811], "broadcast": [589, 608, 715, 716], "broadcasted": 589, "broadly": 693, "brok": [670, 715, 728], "broken": [591, 597, 610, 617, 642, 654, 670, 676, 686, 701, 715, 728, 749, 751, 753, 757, 766, 770, 772, 776, 781, 786, 788, 793], "brought": [727, 751, 762], "brows": [679, 704, 747, 790], "browsabl": 606, "browsing": [606, 751, 810], "brtarget": 786, "brtarget8": 786, "bruc": 749, "bruno": 753, "bsd": [622, 641, 670, 683], "bsnork": 774, "bss": [591, 620, 641, 651, 653, 675], "bswap": 674, "bswap32r_bswap64r_movsx64rr32": 632, "bt": 668, "bt331": 752, "btver2": 640, "bubbl": 728, "bucket": [639, 645, 649, 650, 738, 741, 743, 749, 765], "bucket_count": 765, "budget": 591, "buf": 759, "buf_data_format_10_10_10_2": 589, "buf_data_format_10_11_11": 589, "buf_data_format_11_11_10": 589, "buf_data_format_16": 589, "buf_data_format_16_16": 589, "buf_data_format_16_16_16_16": 589, "buf_data_format_2_10_10_10": 589, "buf_data_format_32": 589, "buf_data_format_32_32": 589, "buf_data_format_32_32_32": 589, "buf_data_format_32_32_32_32": 589, "buf_data_format_8": 589, "buf_data_format_8_8": 589, "buf_data_format_8_8_8_8": 589, "buf_data_format_invalid": 589, "buf_data_format_reserved_15": 589, "buf_fmt_10_10_10_2_sint": 589, "buf_fmt_10_10_10_2_snorm": 589, "buf_fmt_10_10_10_2_sscaled": 589, "buf_fmt_10_10_10_2_uint": 589, "buf_fmt_10_10_10_2_unorm": 589, "buf_fmt_10_10_10_2_uscaled": 589, "buf_fmt_10_11_11_float": 589, "buf_fmt_10_11_11_sint": 589, "buf_fmt_10_11_11_snorm": 589, "buf_fmt_10_11_11_sscaled": 589, "buf_fmt_10_11_11_uint": 589, "buf_fmt_10_11_11_unorm": 589, "buf_fmt_10_11_11_uscaled": 589, "buf_fmt_11_11_10_float": 589, "buf_fmt_11_11_10_sint": 589, "buf_fmt_11_11_10_snorm": 589, "buf_fmt_11_11_10_sscaled": 589, "buf_fmt_11_11_10_uint": 589, "buf_fmt_11_11_10_unorm": 589, "buf_fmt_11_11_10_uscaled": 589, "buf_fmt_16_16_16_16_float": 589, "buf_fmt_16_16_16_16_sint": 589, "buf_fmt_16_16_16_16_snorm": 589, "buf_fmt_16_16_16_16_sscaled": 589, "buf_fmt_16_16_16_16_uint": 589, "buf_fmt_16_16_16_16_unorm": 589, "buf_fmt_16_16_16_16_uscaled": 589, "buf_fmt_16_16_float": 589, "buf_fmt_16_16_sint": 589, "buf_fmt_16_16_snorm": 589, "buf_fmt_16_16_sscaled": 589, "buf_fmt_16_16_uint": 589, "buf_fmt_16_16_unorm": 589, "buf_fmt_16_16_uscaled": 589, "buf_fmt_16_float": 589, "buf_fmt_16_sint": 589, "buf_fmt_16_snorm": 589, "buf_fmt_16_sscaled": 589, "buf_fmt_16_uint": 589, "buf_fmt_16_unorm": 589, "buf_fmt_16_uscaled": 589, "buf_fmt_2_10_10_10_sint": 589, "buf_fmt_2_10_10_10_snorm": 589, "buf_fmt_2_10_10_10_sscaled": 589, "buf_fmt_2_10_10_10_uint": 589, "buf_fmt_2_10_10_10_unorm": 589, "buf_fmt_2_10_10_10_uscaled": 589, "buf_fmt_32_32_32_32_float": 589, "buf_fmt_32_32_32_32_sint": 589, "buf_fmt_32_32_32_32_uint": 589, "buf_fmt_32_32_32_float": 589, "buf_fmt_32_32_32_sint": 589, "buf_fmt_32_32_32_uint": 589, "buf_fmt_32_32_float": 589, "buf_fmt_32_32_sint": 589, "buf_fmt_32_32_uint": 589, "buf_fmt_32_float": 589, "buf_fmt_32_sint": 589, "buf_fmt_32_uint": 589, "buf_fmt_8_8_8_8_sint": 589, "buf_fmt_8_8_8_8_snorm": 589, "buf_fmt_8_8_8_8_sscaled": 589, "buf_fmt_8_8_8_8_uint": 589, "buf_fmt_8_8_8_8_unorm": 589, "buf_fmt_8_8_8_8_uscaled": 589, "buf_fmt_8_8_sint": 589, "buf_fmt_8_8_snorm": 589, "buf_fmt_8_8_sscaled": 589, "buf_fmt_8_8_uint": 589, "buf_fmt_8_8_unorm": 589, "buf_fmt_8_8_uscaled": 589, "buf_fmt_8_sint": 589, "buf_fmt_8_snorm": 589, "buf_fmt_8_sscaled": 589, "buf_fmt_8_uint": 589, "buf_fmt_8_unorm": 589, "buf_fmt_8_uscaled": 589, "buf_fmt_invalid": 589, "buf_num_format_float": 589, "buf_num_format_reserved_6": 589, "buf_num_format_sint": 589, "buf_num_format_snorm": 589, "buf_num_format_snorm_ogl": 589, "buf_num_format_sscaled": 589, "buf_num_format_uint": 589, "buf_num_format_unorm": 589, "buf_num_format_uscaled": 589, "buff": [34, 66, 67, 104, 105, 106, 107, 115, 132, 157, 158, 194, 195, 196, 203, 204, 225, 254, 255, 279, 280, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 309, 349, 384, 418, 419, 455, 456, 457, 471, 472, 497, 530, 531, 568, 569, 570, 571, 579, 605, 632, 640, 665, 673, 714, 715, 718, 736, 741, 743, 749, 765, 774, 791, 809, 810, 811, 812, 813, 814, 815, 816, 817], "buffer": [117, 205, 310, 580, 591, 715, 749, 789, 791], "buffer_atomic_add": [0, 2, 3, 4, 9], "buffer_atomic_add_f32": [8, 9], "buffer_atomic_add_f64": 9, "buffer_atomic_add_x2": [0, 2, 3, 4, 9], "buffer_atomic_and": [0, 2, 3, 4, 9], "buffer_atomic_and_x2": [0, 2, 3, 4, 9], "buffer_atomic_cmpswap": [0, 2, 3, 4, 9], "buffer_atomic_cmpswap_x2": [0, 2, 3, 4, 9], "buffer_atomic_dec": [0, 2, 3, 4, 9], "buffer_atomic_dec_x2": [0, 2, 3, 4, 9], "buffer_atomic_fcmpswap": [0, 2], "buffer_atomic_fcmpswap_x2": [0, 2], "buffer_atomic_fmax": [0, 2], "buffer_atomic_fmax_x2": [0, 2], "buffer_atomic_fmin": [0, 2], "buffer_atomic_fmin_x2": [0, 2], "buffer_atomic_inc": [0, 2, 3, 4, 9, 591], "buffer_atomic_inc_x2": [0, 2, 3, 4, 9], "buffer_atomic_max_f64": 9, "buffer_atomic_min_f64": 9, "buffer_atomic_or": [0, 2, 3, 4, 9], "buffer_atomic_or_x2": [0, 2, 3, 4, 9], "buffer_atomic_pk_add_f16": [8, 9], "buffer_atomic_smax": [0, 2, 3, 4, 9], "buffer_atomic_smax_x2": [0, 2, 3, 4, 9], "buffer_atomic_smin": [0, 2, 3, 4, 9], "buffer_atomic_smin_x2": [0, 2, 3, 4, 9], "buffer_atomic_sub": [0, 2, 3, 4, 9], "buffer_atomic_sub_x2": [0, 2, 3, 4, 9], "buffer_atomic_swap": [0, 2, 3, 4, 9], "buffer_atomic_swap_x2": [0, 2, 3, 4, 9], "buffer_atomic_umax": [0, 2, 3, 4, 9], "buffer_atomic_umax_x2": [0, 2, 3, 4, 9], "buffer_atomic_umin": [0, 2, 3, 4, 9], "buffer_atomic_umin_x2": [0, 2, 3, 4, 9], "buffer_atomic_xor": [0, 2, 3, 4, 9], "buffer_atomic_xor_x2": [0, 2, 3, 4, 9], "buffer_gl": 591, "buffer_gl0_inv": [0, 591], "buffer_gl1_inv": [0, 591], "buffer_invl2": [9, 591], "buffer_load": 591, "buffer_load_dword": [0, 2, 3, 4, 9, 591], "buffer_load_dwordx2": [0, 2, 3, 4, 9], "buffer_load_dwordx3": [0, 2, 3, 4, 9], "buffer_load_dwordx4": [0, 2, 3, 4, 9], "buffer_load_format_d16_hi_x": [4, 9], "buffer_load_format_d16_x": [0, 3, 4, 9], "buffer_load_format_d16_xy": [0, 3, 4, 9], "buffer_load_format_d16_xyz": [0, 3, 4, 9], "buffer_load_format_d16_xyzw": [0, 3, 4, 9], "buffer_load_format_x": [0, 2, 3, 4, 9], "buffer_load_format_xy": [0, 2, 3, 4, 9], "buffer_load_format_xyz": [0, 2, 3, 4, 9], "buffer_load_format_xyzw": [0, 2, 3, 4, 9], "buffer_load_sbyt": [0, 2, 3, 4, 9], "buffer_load_sbyte_d16": [0, 4, 9], "buffer_load_sbyte_d16_h": [0, 4, 9], "buffer_load_short_d16": [0, 4, 9], "buffer_load_short_d16_h": [0, 4, 9], "buffer_load_sshort": [0, 2, 3, 4, 9], "buffer_load_ubyt": [0, 2, 3, 4, 9], "buffer_load_ubyte_d16": [0, 4, 9], "buffer_load_ubyte_d16_h": [0, 4, 9], "buffer_load_ushort": [0, 2, 3, 4, 9], "buffer_siz": 791, "buffer_store_byt": [0, 2, 3, 4, 9], "buffer_store_byte_d16_h": [0, 4, 9], "buffer_store_dword": [0, 2, 3, 4, 9], "buffer_store_dwordx2": [0, 2, 3, 4, 9], "buffer_store_dwordx3": [0, 2, 3, 4, 9], "buffer_store_dwordx4": [0, 2, 3, 4, 9, 588, 591], "buffer_store_format_d16_hi_x": [4, 9], "buffer_store_format_d16_x": [0, 3, 4, 9], "buffer_store_format_d16_xy": [0, 3, 4, 9], "buffer_store_format_d16_xyz": [0, 3, 4, 9], "buffer_store_format_d16_xyzw": [0, 3, 4, 9], "buffer_store_format_x": [0, 2, 3, 4, 9], "buffer_store_format_xy": [0, 2, 3, 4, 9, 591], "buffer_store_format_xyz": [0, 2, 3, 4, 9], "buffer_store_format_xyzw": [0, 2, 3, 4, 9], "buffer_store_lds_dword": [3, 4, 9], "buffer_store_short": [0, 2, 3, 4, 9], "buffer_store_short_d16_h": [0, 4, 9], "buffer_wbinvl1": [2, 3, 4, 9, 591], "buffer_wbinvl1_vol": [2, 3, 4, 9, 591], "buffer_wbl2": [9, 591], "buffered": 640, "bug": [590, 591, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 633, 640, 668, 670, 671, 678, 682, 683, 686, 694, 700, 701, 706, 707, 714, 715, 716, 717, 721, 725, 727, 746, 747, 749, 751, 753, 756, 757, 762, 763, 769, 777, 781, 810, 814, 817], "buggy": 709, "buggy_cod": 700, "bugpoint": [616, 633, 670, 682, 683, 709, 733, 756, 788], "bugsno": 671, "bugzill": [670, 679, 682, 707, 717, 751, 758, 762, 770, 781], "buid": 665, "builbot": 701, "build": [591, 592, 594, 598, 604, 606, 607, 608, 610, 611, 615, 617, 618, 622, 625, 626, 636, 659, 660, 661, 662, 664, 668, 669, 670, 671, 673, 676, 680, 682, 683, 686, 687, 694, 700, 706, 711, 714, 715, 718, 730, 731, 732, 733, 736, 745, 746, 749, 750, 751, 754, 755, 757, 758, 761, 765, 766, 767, 772, 775, 776, 777, 779, 780, 781, 783, 786, 790, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "build_arch": 750, "build_d": 751, "build_docker_imag": 672, "build_shared_lib": [604, 606], "buildattribut": 705, "buildbot": [610, 617, 670, 679, 682, 707, 728, 747, 751, 772, 781], "buildd": 701, "builddefaultaapipelin": 730, "builder": [670, 701], "building": [593, 607, 608, 611, 660, 664, 665, 669, 670, 671, 680, 685, 686, 699, 700, 701, 714, 715, 717, 726, 730, 731, 755, 774, 775, 776, 777, 779, 780, 781, 784, 789, 812, 813, 814, 815, 816, 817, 818], "buildingaj": 683, "buildm": 608, "buildmast": 701, "buildmod": 781, "buildmodul": 794, "buildnumb": 736, "buildpermoduledefaultpipelin": 730, "built": [593, 598, 604, 606, 625, 626, 628, 645, 655, 661, 664, 670, 672, 673, 678, 679, 681, 683, 685, 686, 693, 698, 699, 701, 703, 704, 705, 706, 708, 714, 715, 716, 717, 726, 728, 731, 736, 743, 744, 746, 749, 750, 751, 755, 757, 761, 765, 766, 774, 775, 777, 779, 780, 781, 786, 790, 791, 809, 810, 811, 812, 813, 814, 816, 817, 818], "builtin": [595, 598, 606, 617, 660, 715, 729, 749, 751, 754, 757, 784, 788, 813, 814, 815, 816], "bulk": [608, 670, 714, 725, 732, 749, 814], "bulky": 591, "bullet": 708, "bump": [680, 707, 749, 764], "bunch": [593, 607, 676, 749, 780, 811, 813], "bundl": [591, 615, 631, 665, 721, 770, 789], "bundled": [608, 685, 714], "bundling": 608, "bunzip2": 683, "bur": 716, "burden": [670, 715, 726, 766, 772], "burg": 716, "burgess": [726, 762], "burk": 752, "burning": 702, "burr": 620, "busiest": 747, "business": 762, "busy": 670, "but": [30, 96, 97, 145, 175, 186, 187, 223, 270, 286, 287, 380, 435, 447, 448, 493, 548, 560, 561, 585, 586, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 615, 617, 620, 624, 625, 626, 628, 631, 632, 635, 639, 640, 642, 643, 645, 646, 654, 655, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 688, 689, 690, 691, 692, 693, 694, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 740, 741, 743, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 758, 760, 761, 762, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 785, 786, 788, 789, 790, 791, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "button": [719, 747], "buy": [702, 762], "bvalu": 774, "bw": 675, "bwav": 752, "bwaves_": 752, "bwaves_r": 752, "bx": 777, "by": [14, 19, 20, 24, 27, 35, 66, 79, 82, 85, 93, 98, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 123, 127, 129, 157, 172, 176, 188, 189, 190, 191, 194, 195, 196, 199, 200, 201, 202, 203, 204, 212, 217, 220, 254, 267, 271, 279, 280, 281, 282, 283, 288, 289, 290, 291, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 315, 320, 325, 333, 337, 350, 351, 352, 354, 355, 369, 370, 375, 378, 385, 430, 433, 436, 449, 450, 455, 456, 457, 467, 468, 469, 470, 471, 472, 482, 487, 490, 498, 543, 546, 549, 557, 562, 563, 564, 565, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 585, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 649, 650, 653, 654, 655, 657, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 738, 740, 741, 743, 744, 745, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819], "by_valu": 591, "byarg": 715, "byp": [591, 640, 715], "bypass": [589, 591], "bypassed": [714, 766], "bypassing": 662, "byproduct": 693, "byref": [598, 715], "byt": [54, 55, 144, 145, 240, 241, 242, 342, 403, 404, 516, 517, 586, 589, 590, 591, 594, 595, 597, 598, 608, 615, 624, 631, 639, 640, 643, 644, 649, 650, 653, 665, 666, 674, 675, 681, 689, 693, 700, 714, 715, 717, 721, 725, 732, 734, 735, 736, 738, 739, 740, 741, 743, 744, 749, 759, 761, 764, 765, 768, 770, 776, 783, 786, 791], "byte_0": [589, 591], "byte_1": [589, 591], "byte_2": [589, 591], "byte_3": 589, "bytearray": 715, "bytecod": [598, 605], "byteswap": 674, "byval": [598, 608, 715, 732, 757], "byvalu": 591, "bz2": 683, "bzero": 689, "bzip2": 683, "bzoo": 774, "c1": [591, 667, 719, 776, 783], "c11": [595, 662, 736, 739, 765], "c11bytesiz": [736, 739], "c11lineinfo": 739, "c11siz": 739, "c13": [645, 736, 739], "c13bytesiz": [736, 739], "c13lineinfo": 739, "c13siz": 739, "c1_1": 646, "c1_2": 646, "c1_n": 646, "c1_u_": 646, "c1_u_1": 646, "c1x": 715, "c2": [591, 667, 719, 776, 783], "c2_1": 646, "c2_2": 646, "c2_n": 646, "c2_u_": 646, "c2_u_2": 646, "c2_v_1": 646, "c2_v_2": 646, "c2_v_i": 646, "c2_v_t": 646, "c3": 719, "c4": 719, "c5": 640, "c5y977rlqpw": 610, "c89": 611, "c9": 666, "c99": [601, 715], "c_ctor_bas": 612, "c_str": [661, 729, 749, 808, 809, 810, 811, 812, 813, 814, 815, 816], "cach": [585, 589, 591, 593, 595, 604, 607, 608, 615, 632, 640, 701, 702, 715, 720, 730, 749, 761, 765, 766, 768, 779, 788, 816], "cached": [591, 606, 607, 632, 720, 726, 730, 731, 761], "cachefil": 779, "caching": [591, 594, 607, 690, 715, 726, 730, 746], "cactubssn": 752, "cactubssn_r": 752, "caf": 724, "caicos": 591, "calcul": [123, 585, 586, 591, 594, 599, 608, 681, 714, 715, 765], "calculat": [585, 586, 591, 594, 600, 608, 616, 673, 689, 715, 746, 776, 781, 786, 812], "calculated": [585, 586, 626, 640, 715, 716, 749, 765, 788], "calculating": [599, 715, 730, 788], "calcvalu": 776, "calendar": 682, "call": [593, 595, 597, 600, 602, 605, 607, 612, 617, 620, 624, 646, 655, 657, 661, 662, 663, 665, 668, 673, 674, 677, 678, 680, 683, 689, 693, 695, 710, 711, 714, 716, 717, 718, 719, 720, 721, 723, 726, 727, 728, 729, 730, 731, 732, 733, 741, 745, 755, 762, 763, 764, 765, 768, 769, 770, 771, 775, 776, 781, 783, 786, 788, 789, 790, 791, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "call2": 612, "call32m": 776, "call32r": 776, "call64pcrel32": 721, "call_branch_weight": 600, "call_convent": 591, "call_site_num": 673, "callabl": [611, 714, 715, 729, 731, 797, 810], "callahan": 755, "callback": [594, 608, 661, 665, 680, 717, 730, 749, 768, 786, 794, 796], "callbackvh": 749, "callbas": 749, "callbr": 749, "callcount": 749, "calle": [585, 586, 597, 608, 662, 665, 676, 714, 717, 727, 746, 766, 768, 776, 783, 786, 788, 809, 810, 811, 812, 813, 814, 815, 816], "called": [585, 586, 591, 593, 594, 595, 597, 599, 600, 602, 604, 607, 608, 626, 633, 642, 661, 662, 665, 666, 667, 669, 672, 673, 676, 680, 682, 683, 694, 704, 713, 714, 715, 717, 719, 720, 725, 726, 727, 728, 729, 731, 735, 741, 746, 747, 749, 750, 751, 761, 764, 765, 766, 770, 771, 775, 776, 780, 786, 788, 792, 794, 795, 796, 808, 809, 811, 815, 816], "calledcount": 602, "calledgekind": 714, "callee_ctxt": 665, "calleef": [810, 811, 812, 813, 814, 815, 816], "caller": [585, 586, 715, 727, 749, 766, 788, 813], "caller_context": 665, "caller_pc": 717, "callexprast": [809, 810, 811, 812, 813, 814, 815, 816], "callgraph": [649, 650], "callgraphscc": [733, 788], "callgraphsccpass": 733, "calling": [591, 595, 598, 606, 607, 611, 660, 661, 663, 665, 673, 678, 690, 714, 720, 723, 727, 729, 730, 731, 733, 741, 749, 757, 765, 768, 770, 774, 788, 789, 792, 795, 808, 809, 810, 811, 812, 816], "callingconv": [598, 660, 786], "callinst": 749, "calllowering": [690, 695], "callloweringinfo": 790, "callon": 749, "callpcrel32": 776, "callq": [764, 766, 768, 770], "callseq_end": 770, "callseq_start": 770, "callsit": [600, 715, 721, 766, 768, 770], "callsitesforfunct": 714, "callthroughmgr": 731, "calltmp": [810, 811, 812, 813, 814, 815, 816], "calltmp1": [810, 812], "calltmp2": 811, "calltmp6": 814, "calltwo": 749, "calm": 814, "cam": [593, 641, 673, 715, 724, 766, 812, 817], "cam4_": 752, "cam4_r": 752, "camel": [611, 753], "camelback": 753, "camelcas": 753, "can": [585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 606, 607, 608, 609, 611, 612, 613, 615, 617, 618, 620, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 638, 640, 642, 643, 645, 646, 648, 652, 654, 655, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 677, 679, 680, 682, 683, 685, 686, 688, 689, 690, 691, 692, 693, 694, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 738, 740, 741, 743, 744, 746, 747, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "canadian": 683, "canal": 121, "canar": 700, "canary": 715, "cancel": 673, "canconstantfoldcallto": 674, "candeletealltext": 728, "candidat": [670, 672, 677, 715, 721, 755, 758, 772], "canfoldasload": [776, 777], "canlosslesslybitcastto": 727, "cannot": [107, 196, 301, 457, 571, 585, 586, 587, 589, 590, 591, 594, 595, 597, 600, 601, 602, 606, 607, 608, 609, 611, 612, 613, 622, 626, 627, 640, 646, 654, 655, 661, 662, 665, 666, 667, 670, 673, 675, 680, 681, 689, 691, 705, 710, 713, 715, 720, 726, 730, 732, 740, 741, 746, 747, 748, 749, 751, 753, 760, 762, 765, 766, 771, 772, 774, 776, 779, 782, 785, 786, 788, 794, 810, 817], "canonical": [585, 586, 591, 597, 673, 678, 715, 731, 746, 749, 751, 765, 766, 784], "canonicalised": 597, "canonicaliz": [608, 612, 689, 749, 788], "canonicalized": [608, 612, 746], "canonically": 751, "canreserveresourc": 608, "cantfail": [731, 794, 795, 796, 797], "cap": [611, 726], "capabilit": [594, 660, 661, 663, 683, 700, 725, 749, 759, 786, 811, 817], "capability": [608, 660, 662, 674, 715, 718, 729, 754, 788, 810, 813], "capabl": [594, 608, 661, 669, 683, 700, 725, 726, 741, 749, 774, 788, 814, 817], "capacity": [738, 749], "capital": 753, "capitaliz": [611, 670], "capston": 717, "captur": [586, 598, 602, 608, 612, 661, 674, 691, 701, 753, 755, 765, 766, 781, 786, 789, 791, 809, 810, 811, 812, 813, 814, 815, 816, 817], "captured": [604, 606, 612, 661, 715, 768], "capturing": [612, 715, 753, 812], "car": [594, 595, 608, 611, 612, 662, 679, 683, 700, 710, 714, 715, 721, 723, 726, 730, 731, 732, 749, 751, 759, 765, 771, 772, 777, 780, 786, 788, 814, 817], "card": [702, 770], "careful": [591, 592, 609, 715, 717, 726, 749, 766], "carefully": [586, 670, 678, 680, 714, 715, 765, 814], "careless": 611, "caret": [626, 715], "carol": 774, "carr": [681, 715, 749, 762], "carried": [640, 669, 715, 782], "carrizo": 591, "carruth": [753, 766], "carruthacronym": 753, "carruthcamelback": 753, "carruthdistinguish": 753, "carruthfunct": 753, "carruthinconsistent": 753, "carruthlow": 753, "carry": [689, 692, 715, 723, 776], "carrying": 715, "carving": 761, "cas": [585, 586, 587, 589, 590, 591, 592, 594, 595, 597, 598, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 616, 617, 622, 625, 627, 631, 633, 640, 641, 642, 655, 659, 661, 662, 664, 665, 666, 671, 672, 673, 674, 676, 677, 678, 680, 681, 683, 687, 689, 698, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 730, 732, 733, 735, 736, 741, 743, 746, 747, 749, 750, 751, 752, 753, 756, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 780, 781, 782, 783, 785, 786, 788, 792, 794, 795, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "cascad": 710, "case_branch_weight": 600, "cassert": [611, 729, 811, 812, 813, 814, 815], "cast": [586, 597, 605, 611, 689, 715, 731, 732, 755, 770, 775, 776, 777, 783, 811, 812, 813, 814, 816, 817], "cast210": [690, 715], "cast_or_null": 749, "casted": [681, 715, 727], "casting": [586, 661, 708, 715, 749, 776], "castinst": 749, "casual": 670, "cat": [627, 653, 655, 661, 680, 683, 700, 714, 717, 772, 774, 781, 787], "catapult": 789, "catastrophic": 766, "catch": [661, 668, 670, 681, 700, 705, 715, 716, 749, 766, 810, 811], "catch3": 673, "catching": 670, "catchpad": 673, "catchret": 673, "catchswitch": 673, "catchy": 728, "categor": [631, 636, 715, 746, 749, 765, 774, 781, 791], "categoriz": [719, 746, 774, 786], "categorized": 661, "category": [611, 645, 661, 671, 715, 735, 749, 765, 772, 786], "categoryemail": 671, "catering": 772, "caught": [611, 673, 700, 715], "caus": [585, 586, 591, 594, 595, 597, 602, 606, 608, 610, 611, 612, 615, 617, 620, 624, 626, 629, 635, 646, 655, 659, 661, 670, 674, 675, 676, 680, 683, 686, 691, 692, 693, 694, 699, 700, 701, 703, 704, 705, 709, 714, 715, 717, 720, 728, 730, 732, 733, 746, 747, 749, 750, 751, 761, 762, 765, 766, 769, 770, 771, 774, 776, 781, 783, 785, 788, 792, 809, 810, 812, 813, 814, 816], "caused": [591, 606, 613, 640, 670, 686, 785], "causing": [602, 612, 642, 665, 700, 715, 730, 733, 749, 772], "caution": [595, 770], "caveat": [603, 662, 715, 816], "cayman": 591, "cb": [640, 651, 666, 749], "cbar": 774, "cbaz": 774, "cbe": 709, "cbpf": 608, "cbsz": [8, 9], "cbtw": 608, "cbw": 608, "cc": [591, 608, 655, 664, 683, 699, 701, 706, 707, 715, 717, 721, 728, 747, 758, 774, 790], "cc_sparc32": 786, "ccach": [606, 701], "ccache_d": 606, "ccache_maxsiz": 606, "ccassigntoreg": 786, "ccassigntoregwithshadow": 786, "ccassigntostack": 786, "ccc": [598, 715], "ccdelegateto": 786, "ccif": 786, "ccifcc": 786, "ccifinreg": 786, "ccifnest": 786, "ccifnotvararg": 786, "cciftyp": 786, "ccmak": 606, "ccomment": 776, "cconv": 715, "ccpassbyval": 786, "ccpromotetotyp": 786, "ccr": 688, "cctool": [606, 636], "cctyp": [809, 810, 811, 812, 813, 814, 815, 816], "cd": [606, 683, 685, 699, 703, 709, 728, 751, 761, 765, 767, 779, 780, 790], "cd8_eltsiz": 776, "cd8_form": 776, "cd8_scal": 776, "cdbg_us": 591, "cde": 660, "cdecl": 715, "cdna1": 591, "cec": [122, 336], "cedar": 591, "cee": 749, "ceil": [591, 740, 785], "ceiling": 715, "cel": 786, "cent": 749, "centered": 816, "centerpoint": 670, "central": [673, 765], "centralizing": 771, "centric": 715, "centry": 774, "cenum": 774, "cerr": [729, 790], "certain": [585, 586, 591, 594, 597, 606, 608, 610, 612, 617, 622, 632, 640, 653, 661, 665, 666, 670, 674, 675, 680, 683, 694, 710, 714, 715, 717, 730, 734, 740, 741, 745, 748, 749, 757, 761, 766, 768, 774, 776, 788, 789, 790, 811, 813, 814, 815], "certainly": [595, 610, 678, 680, 689, 719, 751, 817], "cf": 666, "cfa": [591, 673], "cfd": 752, "cfe": [670, 671, 683, 724, 728, 747, 751, 755, 772], "cfg": [608, 617, 667, 673, 710, 713, 715, 719, 727, 730, 733, 749, 755, 781, 785, 786, 788, 812], "cfganalys": 730, "cfgsimplify": 749, "cfguard_checkcc": [598, 715], "cfi": [605, 673, 714, 716, 721, 766], "cfi_instruct": 721, "cfi_offset": 721, "cflag": [717, 750], "cfoo": 774, "cfrac": 780, "cg": [649, 650, 730, 788], "cg_profil": 675, "cgam": 730, "cgft_objectfil": 815, "cgo": [662, 755], "cgp_from": 675, "cgp_to": 675, "cgp_weight": 675, "cgpm": 730, "cgroup": 672, "cgscc": 730, "cgsccanalysismanag": 730, "cgsccpassmanag": 730, "ch": 777, "ch9": 816, "chain": [592, 593, 594, 600, 606, 608, 611, 617, 631, 640, 665, 685, 688, 691, 716, 718, 719, 726, 727, 746, 765, 771, 782, 786, 788], "chained": [586, 594, 715, 749, 774, 814], "chaining": 747, "challeng": [726, 766, 770], "challenging": [670, 698, 715, 766, 813], "champion": 762, "chanc": [600, 665, 670, 678, 714, 715, 720, 732, 777, 789, 792, 818], "chandl": [753, 766], "chandlerc": [747, 766], "chang": [589, 590, 594, 597, 598, 600, 601, 602, 606, 608, 609, 610, 611, 612, 613, 617, 625, 629, 631, 634, 640, 642, 661, 662, 664, 665, 666, 669, 674, 676, 678, 679, 680, 681, 682, 684, 685, 686, 689, 693, 700, 701, 707, 708, 710, 713, 714, 715, 716, 718, 719, 720, 721, 725, 726, 727, 729, 730, 731, 732, 733, 736, 741, 745, 746, 753, 758, 759, 763, 766, 768, 770, 772, 773, 774, 778, 780, 782, 785, 786, 788, 791, 792, 794, 795, 796, 797, 811, 812, 813, 814, 815, 816], "changeb": 717, "changebyt": 717, "changed": [585, 586, 591, 594, 597, 600, 604, 608, 617, 623, 640, 660, 661, 664, 670, 674, 681, 683, 690, 708, 711, 715, 727, 728, 746, 747, 749, 751, 753, 757, 762, 770, 779, 814, 815, 816], "changelog": 717, "changing": [594, 606, 640, 661, 670, 685, 689, 715, 716, 727, 731, 732, 747, 749, 751, 753, 765, 766], "channel": [17, 210, 480, 589, 591, 601, 609, 664, 682, 714, 766], "chaos": 593, "chapitr": 793, "chapt": [585, 586, 664, 727, 731, 808, 817, 818], "chapter": [794, 795, 810, 811, 812, 813, 814, 815, 816, 818], "char": [591, 594, 611, 660, 661, 665, 666, 668, 681, 700, 708, 714, 715, 717, 718, 729, 731, 736, 740, 743, 749, 761, 765, 766, 774, 785, 786, 788, 789, 790, 794, 809, 810, 811, 812, 813, 814, 815, 816], "char16_t": 743, "char32_t": 743, "char6": 598, "charact": [586, 589, 591, 598, 608, 612, 617, 622, 626, 641, 642, 654, 660, 661, 715, 723, 749, 765, 774, 776, 781, 808, 809, 810, 811, 812, 813, 814, 815, 816], "character": [585, 586, 589, 591, 617, 626, 627, 640, 641, 642, 643, 653, 654, 666, 715, 721, 749, 776, 781, 808, 812, 813], "character16": 743, "character32": 743, "characteristic": [67, 158, 255, 349, 419, 531, 586, 608, 632, 674, 715, 736, 749, 755, 786, 796, 820], "characteriz": [632, 766], "characterized": 715, "charg": [608, 724, 762], "charscalarty": 715, "chart": [670, 785], "chased": 709, "chat": [609, 670, 682], "cheap": [595, 611, 670, 677, 689, 715, 749, 766], "cheapest": 696, "cheaply": [726, 766], "cheat": 796, "check": [585, 586, 590, 591, 593, 595, 602, 605, 606, 607, 608, 611, 613, 615, 616, 617, 632, 640, 660, 661, 665, 670, 672, 673, 678, 680, 681, 683, 685, 686, 689, 691, 694, 699, 701, 702, 704, 705, 706, 707, 708, 709, 710, 714, 715, 717, 718, 719, 721, 722, 727, 728, 730, 731, 732, 733, 747, 748, 751, 753, 755, 756, 757, 758, 761, 764, 765, 768, 769, 770, 772, 775, 779, 780, 781, 782, 783, 786, 787, 788, 790, 792, 794, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "checkcudaerror": 729, "checkcustomhazard": 640, "checked": [595, 606, 612, 670, 672, 677, 679, 683, 704, 705, 717, 727, 730, 746, 747, 748, 749, 766, 776, 779, 780, 781, 783, 811], "checker": [660, 774], "checkformat": 749, "checking": [590, 591, 606, 612, 661, 666, 677, 678, 683, 710, 715, 728, 729, 731, 733, 749, 751, 758, 761, 764, 765, 768, 776, 781, 792, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "checkout": [606, 672, 686, 703, 704, 707, 745, 757, 758, 767], "checkpointing": 673, "checksum": [675, 715, 717, 761], "checksumkind": [675, 715], "checksummed": 761, "chees": 611, "cherry": [683, 707], "child": [667, 673, 708, 715, 717, 747, 749, 813], "child_begin": 749, "child_end": 749, "child_iterator": 749, "childidx": 749, "childorerr": 749, "children": [631, 708, 734, 749], "childvalid": 749, "chilling": 670, "chip": [591, 608, 618, 620, 688, 702, 706, 729, 781, 786], "chmod": 683, "choco": 685, "chocolatey": 685, "choic": [610, 611, 618, 630, 674, 688, 691, 702, 715, 717, 728, 747, 749, 761, 768, 770, 808, 812, 817], "choos": [585, 586, 591, 606, 609, 613, 620, 643, 661, 662, 670, 671, 680, 700, 701, 705, 706, 709, 712, 715, 719, 724, 726, 731, 749, 760, 765, 779, 786, 788, 789, 790, 809, 811, 812], "choosing": [597, 608, 632, 715, 747, 749, 753, 788], "chop": 765, "chos": [667, 701, 758, 766], "chosen": [597, 608, 611, 617, 667, 680, 700, 715, 770, 776, 789], "chris": [608, 662, 670, 751, 753, 788], "chriscox": 752, "chrom": 789, "chromium": [700, 707, 762, 763], "chronological": 753, "chronology": 751, "chunk": [597, 598, 608, 611, 645, 714, 717, 746, 761, 764, 765], "churn": 796, "ci": [585, 586, 591, 716, 747], "cie_id": [585, 586], "cie_point": [585, 586], "cimag": 813, "cin": 676, "cindex": 786, "cint2006": 779, "circl": 708, "circt": 682, "circtcirct": 671, "circuit": 813, "circular": [585, 586, 611, 789], "circumst": [612, 670, 673, 714, 715, 719, 749, 762, 765, 786, 788, 811, 814], "circumvent": 661, "cis": 596, "cis501": 596, "cited": 753, "citizen": 749, "city": [682, 724], "cl": [736, 765, 777, 781, 788], "claim": [595, 670, 791], "clamp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 591, 715], "clamped": [589, 715], "clamping": 589, "clampnumel": 693, "clampscalar": 693, "clang": [586, 595, 600, 601, 603, 604, 605, 606, 610, 611, 612, 615, 616, 617, 618, 626, 628, 640, 643, 655, 664, 666, 668, 670, 671, 672, 673, 676, 678, 681, 682, 685, 686, 699, 700, 701, 703, 707, 708, 709, 710, 714, 715, 716, 717, 718, 728, 729, 730, 731, 732, 733, 744, 747, 749, 750, 751, 753, 754, 757, 758, 759, 762, 765, 775, 776, 777, 779, 781, 782, 783, 785, 788, 789, 790, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "clang_attr_arg_context_list": 774, "clang_attr_identifier_arg_list": 774, "clang_bootstrap_cmake_arg": 593, "clang_cc1": [612, 781], "clang_cl": 781, "clang_cpp": 781, "clang_enable_bootstrap": 593, "clangclang": 671, "clangd": [671, 728, 763], "clangdclangd": 671, "clangxx": 781, "clarif": [611, 663, 670, 791], "clarify": [585, 728, 765], "clarifying": 586, "clarity": [715, 760, 812], "clas": 660, "clash": [611, 715, 724, 797], "class": [597, 598, 609, 612, 632, 640, 642, 645, 654, 660, 664, 669, 670, 673, 674, 679, 680, 683, 684, 688, 689, 691, 693, 694, 695, 696, 703, 711, 713, 714, 716, 720, 723, 725, 727, 731, 733, 735, 736, 741, 743, 745, 746, 753, 754, 755, 756, 761, 765, 766, 771, 774, 777, 783, 787, 789, 792, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817], "classdat": 749, "classic": [603, 608, 611, 700, 749, 766], "classical": 746, "classid": 776, "classif": [715, 769, 771], "classified": 715, "classify": [601, 603], "classifying": 594, "classnam": [660, 736, 775], "classof": 774, "classpair": 775, "classrec": 775, "classref": 776, "claus": [608, 670, 673, 715, 749, 776], "clean": [608, 611, 613, 617, 661, 670, 683, 691, 704, 709, 715, 718, 729, 746, 747, 749, 751, 766, 788], "cleaned": 608, "cleanest": 586, "cleaning": [608, 673], "cleanly": [611, 670, 715, 788], "cleanup": [665, 670, 715, 716, 731, 746, 765, 796, 797, 811, 812], "cleanuppad": [665, 673], "cleanupret": [665, 673], "clear": [606, 610, 611, 659, 670, 680, 681, 707, 710, 713, 715, 728, 730, 731, 736, 740, 749, 751, 753, 766, 772, 775, 776, 809, 810, 811, 812, 813, 814, 815, 816], "cleared": [612, 713, 715, 743, 751, 789], "cleargraphattr": 749, "clearing": 810, "clearly": [585, 586, 601, 611, 670, 719, 726, 735, 751, 762, 765, 768, 772], "clearresourc": 608, "clenumval": 661, "clenumvaln": [661, 775], "clev": [708, 817], "cleverly": 597, "click": [670, 671, 685, 728, 747, 767], "clicking": 747, "client": [586, 591, 598, 606, 608, 611, 661, 670, 671, 680, 708, 714, 720, 723, 731, 749, 751, 756, 759, 765, 768, 779, 783, 786, 788, 794, 795, 811, 814], "cling": 731, "clipped": 668, "clobb": [594, 608, 721, 726, 766, 776], "clobber": 715, "clobbered": [585, 586, 591, 726], "clobbering": [715, 726, 766], "clock": [640, 715, 775, 788], "clon": [606, 670, 683, 685, 699, 728, 749, 779, 780, 788, 814], "cloned": [617, 755, 774], "cloning": [617, 683], "clos": [601, 604, 608, 611, 681, 685, 693, 714, 716, 717, 719, 731, 747, 758, 766, 772], "close_fd_mask": 717, "closed": [601, 611, 682, 707, 716, 731, 749, 788], "closely": [608, 665, 667, 681, 683, 715, 728, 766, 809], "closest": [585, 586, 715, 816], "closing": [611, 612, 715, 719, 731, 747], "closur": 817, "clr": [736, 770], "clrb": 608, "clrl": 608, "clrq": 608, "clrw": 608, "clust": [632, 701], "cluster": 632, "cluster_id": 632, "clustered": 632, "clustering": [632, 688, 694], "clutt": [611, 670], "cluttered": 603, "cm": 753, "cmak": [593, 596, 670, 672, 679, 685, 686, 699, 700, 701, 702, 722, 728, 730, 749, 751, 752, 757, 761, 767, 772, 781, 784, 786, 787, 790], "cmake_": [604, 606, 607], "cmake_asm_compiler_target": 705, "cmake_asm_flag": 705, "cmake_build_typ": [604, 606, 607, 683, 779], "cmake_c_compil": [683, 779], "cmake_c_compiler_external_toolchain": 705, "cmake_c_compiler_target": 705, "cmake_c_flag": [705, 779], "cmake_c_flags_optimiz": 779, "cmake_cflag": 705, "cmake_cxx_compil": 683, "cmake_cxx_flags_releas": 683, "cmake_cxx_flags_relwithdebinfo": 683, "cmake_cxx_standard": 606, "cmake_fortran_compil": 779, "cmake_install": 606, "cmake_install_bind": 606, "cmake_install_docd": 606, "cmake_install_included": 606, "cmake_install_mand": 606, "cmake_install_prefix": [593, 606, 683, 685, 706], "cmake_minimum_required": [606, 607], "cmake_module_path": 606, "cmake_parse_argu": 607, "cmake_sysroot": 705, "cmake_toolchain_fil": [606, 683], "cmake_try_compile_target": 705, "cmake_verbose_makefil": 593, "cmakebuildtyp": 728, "cmakecach": [606, 607, 790], "cmakefil": [683, 779], "cmakelist": [593, 606, 607, 683, 707, 775, 779, 786, 787, 788], "cmakeparseargu": 607, "cmd": 596, "cmdsetuserdat": 591, "cmov": 766, "cmovcc": 766, "cmoveq": 766, "cmovneq": 766, "cmp": [608, 643, 715, 746, 749, 766], "cmp32ri8": 608, "cmpb": 675, "cmpflag": 727, "cmpinst": [721, 749], "cmpnam": 774, "cmpnumber": 727, "cmpq": [675, 764], "cmpswap": 589, "cmptmp": [810, 811, 812, 813, 814, 815, 816], "cmpxchg": [595, 689], "cnt": [120, 209, 314, 479, 584], "co": [724, 751, 783], "coalesc": [608, 620, 749], "coalescing": [608, 629, 749], "coars": [591, 617], "coco": 715, "cod": [27, 86, 129, 177, 220, 272, 378, 437, 490, 550, 585, 586, 590, 592, 593, 594, 595, 597, 598, 600, 603, 604, 605, 606, 607, 612, 613, 616, 617, 618, 621, 626, 627, 634, 636, 639, 641, 642, 643, 644, 645, 647, 649, 650, 651, 653, 654, 657, 661, 664, 665, 669, 671, 672, 674, 675, 677, 678, 679, 681, 682, 685, 688, 691, 693, 694, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707, 708, 710, 711, 713, 714, 716, 717, 718, 719, 722, 724, 725, 727, 729, 730, 731, 732, 733, 734, 735, 736, 744, 745, 751, 752, 753, 755, 756, 757, 758, 759, 762, 764, 766, 768, 769, 770, 772, 774, 775, 776, 777, 779, 780, 781, 783, 785, 789, 790, 792, 808, 817, 818, 819], "code_alignment_factor": [585, 586, 591], "code_object_ur": 591, "code_owner": [664, 670, 747], "codebas": [611, 670, 690, 747, 762], "codeblock": 680, "coded": [608, 766, 775, 776, 781, 816], "codeemittergen": 774, "codegen": [591, 592, 601, 608, 612, 613, 660, 662, 665, 674, 677, 678, 680, 683, 689, 692, 694, 710, 715, 718, 721, 729, 730, 732, 757, 774, 781, 784, 786, 787, 788, 797, 810, 811, 812, 813, 814, 815, 816], "codegenerat": 709, "codegening": 813, "codegenopt": 733, "codegenschedmodel": 786, "codeid": 759, "codepath": [595, 749], "codeprop": 591, "coder": 751, "coderecty": 775, "codereview": [671, 728], "codesiz": [776, 777], "codeview": [645, 650, 736, 741], "codeviewdebug": 765, "coding": [608, 664, 670, 681, 682, 683, 749, 775, 777, 786], "coding_style_cpp": 753, "codlai": 796, "coerc": 727, "coerce_offset0": 612, "coerced": 665, "coexist": 772, "coff": [598, 608, 641, 643, 663, 682, 685, 703, 714, 715, 731, 736, 741, 757], "cofflinkgraphbuild": 714, "cohen": 771, "coherent": [589, 591, 715], "coincident": 782, "col": [715, 816], "cold": [598, 599, 646, 678, 715], "coldcc": [598, 715, 770], "colfield": 712, "collabor": [586, 670, 751], "collaborat": [670, 751], "collaps": [701, 719, 766], "collapsed": 715, "collapserequest": 701, "collapsing": 715, "collated": 714, "colleagu": 609, "collect": [586, 606, 626, 631, 640, 670, 678, 682, 684, 688, 700, 711, 714, 716, 717, 718, 731, 743, 746, 749, 751, 752, 755, 759, 769, 774, 775, 776, 779, 780, 785, 817, 818], "collect_and_build_with_pgo": 704, "collected": [594, 599, 600, 640, 660, 680, 704, 715, 718, 720, 731, 766, 768, 770, 774, 775, 776], "collecting": [768, 780, 790], "collectively": [585, 586, 670, 731, 768, 770], "collector": [598, 660, 676, 716, 770, 817], "collis": [611, 715, 749, 751, 765], "colloquial": 715, "colombet": 697, "colon": [591, 604, 606, 607, 612, 700, 761, 774, 776, 781, 792], "color": [78, 171, 266, 542, 591, 612, 626, 631, 636, 645, 749, 790], "colored": [608, 728], "coloring": [715, 755], "colour": 609, "column": [585, 586, 591, 611, 612, 640, 643, 655, 666, 675, 683, 710, 712, 759, 765, 780, 785, 792, 816], "columnend": 666, "columnstart": 666, "com": [585, 586, 591, 596, 598, 603, 604, 606, 607, 608, 609, 611, 613, 626, 634, 635, 636, 638, 640, 642, 643, 644, 651, 653, 654, 670, 674, 680, 681, 683, 685, 686, 701, 705, 707, 712, 713, 714, 715, 717, 719, 724, 726, 727, 728, 729, 730, 731, 736, 743, 744, 747, 749, 750, 751, 752, 753, 759, 761, 762, 765, 766, 770, 776, 779, 780, 781, 788, 789, 792, 794, 796, 808, 810, 811, 812, 814, 817, 819], "com_f": 608, "combin": [120, 176, 209, 314, 479, 584, 585, 586, 589, 591, 595, 602, 604, 606, 612, 654, 660, 661, 662, 665, 669, 670, 674, 680, 689, 693, 694, 696, 710, 714, 715, 717, 727, 728, 733, 734, 748, 749, 755, 761, 765, 770, 772, 776, 785, 786, 789, 790, 792, 809, 810, 817], "combine1": 608, "combine2": 608, "combined": [586, 591, 608, 612, 626, 634, 643, 661, 666, 670, 674, 675, 681, 693, 710, 715, 717, 721, 744, 748, 749, 765, 766, 782, 788, 789, 790], "combinedallocator": 761, "combiner": [660, 694], "combining": [608, 624, 638, 640, 683, 714, 715, 730, 786], "comdat": [598, 675], "comfort": [728, 760], "coming": [607, 608, 611, 665, 669, 710, 715, 721, 759, 766, 811, 812, 814], "comm": [120, 122, 209, 213, 314, 336, 371, 479, 483, 584, 587, 588, 591, 601, 610, 611, 612, 632, 640, 660, 661, 664, 682, 686, 701, 707, 715, 716, 721, 723, 736, 740, 747, 749, 753, 763, 772, 776, 781, 792, 812], "command": [591, 593, 594, 596, 602, 604, 606, 608, 611, 612, 613, 617, 618, 620, 623, 624, 627, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 644, 645, 649, 650, 651, 653, 654, 655, 657, 659, 660, 662, 664, 668, 670, 672, 679, 682, 683, 691, 694, 699, 701, 704, 705, 707, 709, 711, 714, 715, 717, 718, 728, 731, 733, 749, 751, 757, 758, 761, 770, 774, 775, 776, 777, 779, 780, 781, 784, 786, 788, 790, 808, 809, 810, 811, 812, 813, 814, 815, 816], "commande": 768, "commandguid": 757, "commandlin": [617, 784], "commandlinepars": 790, "commaseparated": 661, "comment": [585, 586, 591, 601, 610, 612, 622, 640, 651, 653, 660, 664, 670, 703, 708, 715, 716, 717, 726, 727, 746, 747, 749, 751, 753, 757, 774, 775, 776, 777, 781, 787, 789, 792, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "commented": [610, 612, 680, 809, 810], "commenting": 608, "commentstring": 786, "commercial": [670, 770], "commercially": 586, "commit": [611, 664, 670, 678, 682, 686, 701, 707, 722, 728, 747, 751, 753, 767, 770], "commitsno": 671, "commitsobsolet": 671, "committ": 670, "committe": [609, 749], "committed": [640, 664, 670, 701, 728, 747], "committing": [610, 670, 683, 707, 728, 751], "common": [585, 586, 591, 593, 594, 595, 597, 598, 604, 607, 608, 610, 611, 614, 619, 622, 641, 642, 651, 656, 658, 661, 662, 664, 665, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 688, 691, 693, 708, 710, 714, 715, 716, 717, 720, 722, 726, 727, 728, 730, 731, 736, 746, 750, 751, 755, 765, 766, 767, 768, 770, 771, 776, 777, 781, 786, 788, 791, 792, 809, 811, 812, 813, 814, 817], "commonality": [608, 776], "commonly": [598, 606, 611, 622, 680, 714, 715, 731, 749, 753, 786], "commun": [4, 6, 609, 611, 671, 714, 715, 720, 760, 762, 771], "communicat": [586, 594, 609, 610, 665, 676, 678, 714, 715, 729, 731, 766, 768, 788], "communicated": 749, "communicating": 609, "communit": [670, 772], "community": [603, 610, 662, 664, 670, 671, 678, 685, 687, 701, 716, 728, 749, 751, 753, 760, 762, 793], "communitycommunity": 671, "commut": [594, 608, 746, 786], "compact": [585, 586, 624, 646, 655, 664, 673, 680, 715, 749, 816, 817], "compacting": 680, "compactly": [665, 749, 776], "compactness": [665, 768], "compan": 724, "companion": 615, "company": [670, 762], "compar": [589, 590, 593, 594, 595, 599, 629, 631, 639, 645, 657, 673, 715, 717, 746, 749, 750, 755, 758, 761, 765, 766, 774, 776, 779, 780, 785, 792, 809, 812], "compared": [608, 612, 629, 640, 669, 715, 727, 749, 758, 765, 766, 775, 776, 781], "comparefp": 776, "comparing": [600, 629, 631, 712, 715, 727, 728, 749, 758, 812, 813, 814, 815, 816], "comparison": [590, 595, 600, 675, 678, 681, 689, 694, 708, 715, 746, 749, 758, 765, 770, 781, 785, 796, 809, 813], "compatibility": [585, 586, 589, 591, 597, 598, 607, 622, 642, 643, 645, 649, 650, 653, 661, 665, 666, 674, 675, 707, 711, 713, 715, 740, 743, 749, 756, 757, 765, 768, 770, 782, 783, 817], "compatibl": [585, 586, 589, 591, 595, 606, 608, 611, 616, 620, 622, 626, 644, 650, 660, 662, 670, 673, 675, 679, 680, 683, 685, 703, 715, 729, 746, 749, 761, 766, 781, 783], "compatible_class": 608, "compbinary": 647, "competent": 670, "compil": [24, 127, 217, 375, 487, 585, 591, 593, 594, 595, 597, 598, 601, 602, 603, 604, 605, 607, 608, 610, 612, 613, 614, 616, 619, 620, 626, 631, 640, 645, 646, 655, 656, 657, 658, 660, 661, 664, 665, 666, 669, 670, 672, 673, 674, 678, 679, 680, 681, 682, 684, 685, 686, 688, 690, 693, 698, 700, 701, 702, 703, 704, 707, 709, 714, 716, 717, 718, 719, 725, 727, 728, 729, 730, 731, 732, 733, 734, 736, 744, 747, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 761, 762, 765, 768, 769, 770, 771, 772, 774, 776, 777, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 797, 808, 809, 810, 812, 813, 814, 815, 817, 818, 819], "compiland": [645, 736, 739, 744], "compile_command": 728, "compile_tim": 779, "compileast": 731, "compilecallbackmanag": 796, "compilecallbackmanager": 797, "compiled": [591, 602, 608, 611, 613, 626, 632, 641, 655, 661, 662, 665, 666, 670, 672, 676, 680, 683, 694, 700, 705, 709, 714, 715, 716, 718, 729, 731, 736, 743, 744, 749, 761, 762, 765, 766, 768, 770, 779, 781, 787, 788, 794, 795, 796, 797, 811, 816, 817], "compilelai": [731, 794, 795, 796, 797], "compilemodul": 790, "compileondemand": 796, "compileondemandlai": [731, 796, 797], "compiler": [585, 586, 593, 602, 606, 608, 611, 613, 631, 660, 663, 669, 670, 671, 672, 676, 680, 681, 683, 715, 726, 729, 749, 755, 756, 765, 770, 785, 793], "compiler_rt": 670, "compiler_rt_test_compile_cflag": 705, "compiler_rt_test_compiler_cflag": 705, "compileutil": [794, 795, 796, 797], "compiling": [591, 613, 626, 670, 685, 686, 700, 702, 704, 705, 715, 716, 729, 731, 746, 749, 756, 761, 762, 765, 766, 768, 770, 779, 780, 781, 784, 788, 790, 794, 795, 811, 814, 816, 817, 818, 819], "compl": [586, 681, 715, 749, 766], "complain": [612, 686, 699], "complaining": 683, "complaint": 817, "complet": [585, 586, 591, 594, 599, 601, 606, 607, 608, 611, 613, 616, 617, 626, 631, 659, 661, 665, 670, 673, 682, 683, 685, 690, 694, 698, 701, 704, 707, 714, 715, 716, 717, 718, 719, 720, 726, 727, 728, 729, 730, 731, 746, 747, 751, 759, 760, 765, 766, 770, 771, 774, 775, 776, 786, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816], "completed": [585, 586, 591, 594, 665, 694, 705, 707, 717, 720, 814], "completely": [591, 598, 608, 611, 661, 669, 670, 686, 701, 715, 718, 730, 731, 755, 765, 766, 771, 774, 775, 776, 788, 792], "completeness": [670, 680], "completing": [591, 749, 771], "complex": [585, 586, 607, 608, 611, 640, 665, 674, 717, 727, 730, 733, 743, 757, 765, 766, 772, 774, 775, 776, 781, 785, 786, 788, 795, 809, 811, 813, 817], "complex128": 743, "complex16": 743, "complex32": 743, "complex32partialprecis": 743, "complex48": 743, "complex64": 743, "complex80": 743, "complexit": [585, 586, 608, 814, 816], "complexity": [585, 586, 608, 680, 717, 727, 730, 746, 749, 770, 771, 772, 776, 777, 786], "complexpattern": [608, 786], "complextyp": 820, "compli": [591, 662], "complicated": [593, 595, 606, 607, 673, 674, 680, 683, 685, 705, 708, 713, 714, 715, 719, 728, 755, 766, 774, 783, 785, 786], "complying": 670, "component": [585, 586, 589, 591, 601, 604, 606, 607, 610, 612, 617, 622, 626, 628, 652, 660, 668, 669, 672, 679, 680, 682, 683, 685, 703, 705, 707, 709, 714, 715, 716, 720, 729, 731, 740, 741, 746, 749, 750, 751, 759, 761, 766, 768, 772, 776, 780, 784, 786, 789, 791, 794, 819], "compos": [585, 586, 604, 685, 715, 795], "composability": 731, "composed": [586, 588, 590, 666, 715, 721, 759, 762, 772, 791], "composing": [585, 715, 731, 795], "composit": [715, 749, 759], "compositional": 755, "compound": 666, "compr": [0, 2, 3, 4, 117, 205, 310, 580], "comprehens": [683, 746, 766, 781], "compress": [598, 606, 642, 646, 660, 666, 683, 717], "compressed": [117, 205, 310, 580, 589, 606, 624, 642, 660, 666, 683, 685, 715, 749], "compris": [585, 586, 591, 666, 715, 755], "comprised": [585, 586, 591], "comprising": [585, 586], "compriz": 624, "compromis": 749, "compromising": [715, 766], "compteur": 123, "comput": [20, 212, 370, 482, 585, 586, 589, 591, 594, 599, 602, 608, 611, 624, 640, 662, 666, 678, 680, 701, 714, 715, 716, 717, 719, 730, 746, 748, 749, 752, 755, 762, 766, 770, 776, 786, 788, 808, 810, 812, 813, 814, 815, 816, 817], "computationally": 716, "compute_20": 729, "compute_factorial": 668, "compute_pgm_rsrc1_fwd_progress": 591, "compute_pgm_rsrc1_mem_ordered": 591, "compute_pgm_rsrc1_sgpr": 591, "compute_pgm_rsrc1_vgpr": 591, "compute_pgm_rsrc1_wgp_mod": 591, "compute_pgm_rsrc2_user_sgpr": 591, "compute_user_data_0": 591, "compute_xx": [662, 729], "computear": 708, "computed": [120, 209, 314, 479, 584, 585, 586, 591, 594, 608, 624, 640, 680, 692, 715, 716, 726, 730, 736, 743, 746, 761, 766, 788, 810, 811, 812, 813, 814, 815, 816], "computeknownbit": 690, "computing": [586, 669, 676, 681, 715, 743, 755, 766, 768, 811], "con": [597, 776], "concat": 715, "concat_vector": 608, "concaten": [585, 586, 591, 592, 598, 683, 749, 776, 781], "concatenat": [689, 693, 715, 749, 776], "concatenated": [715, 749, 776, 781], "concatenating": [597, 715], "concentrat": 705, "concentrated": 640, "concept": [585, 586, 591, 597, 598, 608, 678, 681, 688, 708, 714, 715, 719, 727, 729, 731, 747, 749, 759, 765, 766, 771, 783, 787, 794, 795, 810, 812], "conceptual": [586, 591, 611, 715, 767], "conceptually": [585, 586, 591, 597, 608, 612, 661, 673, 681, 715, 749, 782], "concern": [610, 670, 687, 701, 730, 751, 753, 770, 772], "concerned": [680, 681, 715, 795], "concerning": [585, 586], "concis": [608, 611, 661, 670, 681], "conclud": [640, 715, 812, 813], "conclus": [640, 727, 796, 816, 818, 819], "concret": [598, 608, 661, 669, 688, 693, 694, 715, 726, 749, 754, 765, 775, 777, 786, 788, 811, 818], "concretely": 770, "concurrency": [586, 617, 715, 730, 731, 756], "concurrent": [591, 595, 606, 680, 717, 731, 794], "concurrentircompil": [731, 794, 795, 796, 797], "concurrently": [585, 586, 617, 680, 714, 731, 749], "cond": [599, 665, 676, 715, 719, 726, 765, 776, 786, 812, 813, 814, 815, 816], "cond1": 776, "cond2": 776, "cond_fals": 814, "cond_next": 814, "cond_tru": 814, "condbranch": 786, "condclaus": 776, "condit": [86, 177, 272, 437, 550, 585, 586, 590, 591, 600, 607, 608, 611, 626, 661, 666, 670, 673, 676, 678, 681, 688, 689, 710, 718, 719, 721, 727, 743, 746, 749, 761, 766, 770, 771, 781, 782, 786, 788, 809, 812, 813, 814, 815, 816], "conditional": [585, 586, 595, 600, 603, 605, 606, 607, 608, 611, 626, 665, 678, 683, 689, 715, 716, 719, 729, 733, 765, 770, 776, 786, 808, 809, 810, 812, 813, 814, 815, 816], "conditionaliz": 776, "conditionalized": 776, "conditionally": [607, 617, 680, 766], "conditioned": 610, "condmovfp": 776, "condn": 776, "condoperator": 776, "conduct": [670, 682, 724, 728], "conducted": [610, 640], "condv": [812, 813, 814, 815, 816], "conferent": [585, 608, 680, 682, 724], "confident": [586, 670, 715], "confidential": [760, 762], "confidentiality": 670, "config": [593, 606, 616, 617, 632, 650, 670, 679, 683, 701, 705, 714, 749, 750, 751, 757, 781, 786, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "configur": [591, 606, 608, 612, 632, 670, 671, 679, 682, 685, 698, 699, 700, 704, 705, 706, 714, 717, 729, 731, 745, 749, 750, 751, 758, 759, 761, 772, 780, 781, 784, 785, 786, 787, 788, 789, 790, 792, 794, 795, 815], "configured": [591, 593, 604, 606, 611, 617, 670, 683, 685, 686, 700, 701, 715, 717, 749, 757, 761, 770, 780, 788, 789, 791, 794], "configuring": [604, 606, 683, 728, 749], "confined": 715, "confirm": [611, 683, 701, 717], "confirmed": 601, "conflict": [591, 608, 612, 670, 715, 726, 749, 751, 753, 781], "conflicting": [650, 688, 757], "conform": [586, 591, 605, 606, 611, 617, 618, 664, 670, 676, 680, 707, 714, 715, 749, 795, 796], "conforming": [611, 715, 749, 792], "confronted": [678, 681], "confus": [603, 611, 612, 622, 670, 681, 727, 728, 749, 753, 755, 761, 766, 786], "confused": [673, 715, 775], "confusing": [603, 680, 690, 710, 715], "confusingly": 595, "congrat": 704, "congruenc": 716, "congruency": 716, "congruent": 761, "conjunct": [585, 586, 604, 606, 612, 615, 645, 646, 689, 714, 715, 736, 758, 771, 776], "connect": [669, 693, 701, 726, 747, 749, 755, 766, 770, 779, 782, 794], "connected": [591, 667, 669, 701, 716, 719, 726, 746], "connectivity": 78, "consecut": [585, 586, 590, 591, 597, 612, 715, 761, 765, 776, 783, 785, 788], "consecutively": [715, 755], "consensus": [610, 670, 753, 754, 762, 772], "consequent": [585, 586, 595, 609, 662, 683, 686, 715, 717, 719, 734, 766, 772], "consequently": [602, 640, 673, 715, 748, 749, 768, 781], "conserv": [594, 680, 714, 715, 718, 730, 766, 770, 788], "conservatism": 782, "conservatively": [591, 594, 595, 611, 640, 680, 715, 768, 782], "conserved": [599, 715], "consid": [585, 586, 594, 597, 598, 599, 608, 611, 612, 613, 622, 661, 662, 665, 666, 667, 668, 669, 670, 676, 680, 681, 683, 687, 690, 693, 702, 704, 708, 710, 712, 713, 715, 716, 719, 721, 726, 727, 732, 743, 749, 753, 760, 761, 765, 766, 767, 768, 770, 771, 776, 781, 783, 785, 788, 795, 809, 812, 814], "consider": [585, 586, 608, 662, 669, 675, 717, 746, 749, 751, 762, 765, 770, 771, 792, 809], "considerably": [683, 777], "considerat": 609, "considered": [585, 586, 591, 594, 608, 609, 610, 611, 612, 613, 617, 628, 641, 653, 665, 670, 673, 675, 677, 688, 689, 693, 698, 715, 719, 727, 730, 743, 746, 749, 753, 758, 760, 765, 766, 768, 769, 771, 776, 777, 779, 788, 812, 816, 817], "considering": [586, 603, 608, 612, 696, 719], "consist": [585, 586, 591, 598, 608, 617, 641, 646, 661, 666, 671, 673, 675, 680, 691, 694, 700, 704, 714, 715, 719, 721, 727, 740, 741, 765, 766, 770, 775, 776, 777, 780, 786, 789, 812], "consisted": 711, "consistency": [591, 715, 717, 761, 810, 811, 812, 813, 814, 815, 816], "consistent": [585, 586, 591, 594, 595, 607, 610, 611, 612, 624, 670, 678, 679, 681, 715, 733, 751, 753, 757, 772, 776, 788, 810], "consistently": [611, 612, 632, 707, 772], "consisting": [585, 586, 615, 715, 727, 749, 783, 786], "consol": [608, 682, 717, 722, 728, 767, 789, 811], "const": [10, 11, 34, 54, 57, 59, 60, 63, 64, 66, 67, 68, 69, 70, 75, 77, 96, 97, 120, 132, 144, 146, 147, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 167, 175, 186, 187, 209, 225, 240, 243, 244, 249, 250, 251, 252, 254, 255, 256, 257, 258, 261, 265, 270, 286, 287, 314, 317, 318, 322, 323, 328, 329, 330, 342, 343, 344, 345, 349, 384, 403, 406, 407, 410, 413, 418, 419, 420, 421, 422, 425, 429, 435, 447, 448, 479, 497, 516, 519, 520, 522, 527, 528, 529, 530, 531, 532, 533, 534, 537, 541, 548, 560, 561, 584, 585, 586, 591, 594, 595, 598, 600, 608, 611, 624, 633, 645, 661, 662, 665, 666, 674, 676, 678, 680, 683, 688, 691, 692, 700, 708, 710, 713, 714, 716, 717, 718, 726, 729, 730, 731, 733, 735, 755, 757, 761, 768, 770, 774, 775, 782, 783, 786, 788, 789, 790, 791, 792, 794, 795, 796, 797, 809, 810, 812, 813, 814, 815, 816], "const0": 598, "const_arg_iterator": [749, 775], "const_global_iterator": 749, "const_iterator": [749, 775], "const_name_iterator": 775, "const_op_iterator": 749, "const_record_iterator": 775, "const_use_iterator": 749, "constant_tsc": 791, "constantarray": 749, "constantexpr": 753, "constantfoldcall": 674, "constantfolding": 674, "constantfp": [749, 810, 811, 812, 813, 814, 815, 816], "constantindex": 768, "constantint": [611, 715, 721, 749], "constantness": 715, "constantpoolsect": 786, "constantstruct": 749, "constdat": 721, "constexpr": [660, 662, 774], "constindex": 768, "constituent": [673, 689, 812], "constitut": [597, 598, 749, 760, 781, 795], "constituting": 695, "constprop": 749, "constrain": [676, 688, 696, 726, 776], "constrained": [640, 673, 683, 688, 694, 714, 726, 745, 757, 784, 810], "constrainedop": 592, "constraining": [691, 694], "constraint": [606, 608, 611, 612, 659, 670, 673, 674, 688, 694, 714, 726, 746, 749, 751, 755, 762, 765, 770, 776, 777, 786, 788], "construct": [591, 595, 604, 607, 611, 640, 661, 673, 674, 680, 712, 713, 714, 715, 722, 730, 731, 748, 749, 755, 765, 767, 770, 774, 776, 783, 786, 787, 788, 794, 796, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818], "constructed": [594, 598, 605, 606, 611, 669, 675, 713, 714, 715, 731, 743, 749, 770, 783, 788, 790, 792, 794, 811], "constructing": [608, 715, 749, 765, 770, 788, 809, 814, 816], "constructively": 609, "constructor": [595, 608, 642, 661, 662, 676, 708, 711, 713, 714, 715, 720, 730, 731, 732, 757, 765, 775, 786, 788, 792, 794, 795, 796, 812], "constval": 749, "constvcall": 715, "consult": [606, 611, 683, 685, 716, 736, 788, 793], "consulted": [622, 734, 762], "consulting": [682, 726, 741], "consum": [585, 586, 591, 632, 640, 661, 665, 673, 683, 685, 688, 689, 693, 702, 715, 736, 738, 739, 740, 741, 743, 744, 765, 768, 777, 781, 809, 810, 811, 812, 813, 814, 815, 816], "consumed": [622, 624, 640, 645, 673, 675, 693, 715, 744, 749, 759, 768, 774], "consumeerror": 749, "consumer": [585, 586, 681, 723, 749, 761], "consuming": [640, 665, 675, 715, 717, 728, 741], "consumpt": [608, 640, 649, 650, 701, 717, 759, 788], "cont": [665, 673, 713, 715], "cont6": 673, "contact": [609, 670, 671, 701, 707, 717, 724, 728, 747, 757, 760, 762, 788], "contain": [585, 586, 591, 594, 595, 597, 598, 600, 601, 602, 606, 607, 608, 611, 612, 615, 617, 618, 622, 626, 628, 631, 632, 635, 640, 641, 646, 649, 650, 655, 660, 661, 664, 665, 666, 667, 668, 669, 670, 672, 673, 675, 678, 680, 681, 682, 683, 685, 687, 693, 699, 701, 702, 703, 705, 706, 707, 708, 709, 710, 712, 714, 715, 716, 719, 720, 721, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 743, 746, 750, 751, 752, 755, 757, 758, 762, 765, 766, 767, 768, 770, 774, 775, 776, 777, 779, 780, 781, 783, 785, 786, 787, 788, 789, 791, 792, 794, 795, 796, 797, 810, 812, 816], "contained": [585, 586, 591, 593, 598, 612, 615, 617, 643, 655, 661, 666, 667, 673, 683, 693, 715, 716, 719, 720, 731, 732, 734, 736, 738, 739, 741, 744, 747, 749, 765, 770, 772, 781, 788, 811], "container": [606, 611, 672, 792], "containing": [585, 586, 591, 593, 598, 599, 600, 604, 606, 608, 610, 611, 612, 615, 617, 623, 628, 639, 640, 642, 653, 662, 664, 665, 673, 681, 683, 685, 690, 691, 693, 694, 700, 705, 710, 714, 715, 718, 719, 728, 730, 732, 733, 736, 739, 744, 749, 755, 759, 761, 765, 766, 768, 770, 774, 776, 780, 781, 783, 785, 786, 794, 811], "containingtyp": 715, "containment": 749, "containsfoo": 611, "contb": 715, "contend": 732, "content": [585, 591, 594, 597, 606, 611, 612, 613, 622, 624, 626, 631, 638, 640, 642, 643, 644, 649, 650, 654, 661, 670, 675, 677, 684, 687, 689, 714, 715, 718, 722, 727, 736, 743, 744, 746, 747, 749, 751, 755, 757, 759, 761, 767, 776, 777, 780, 781, 786, 788, 790], "content_disposition_typ": 670, "contentious": 670, "context": [594, 595, 611, 612, 646, 655, 661, 665, 670, 673, 676, 678, 681, 688, 693, 701, 708, 714, 716, 719, 723, 727, 729, 731, 747, 749, 754, 760, 766, 774, 776, 777, 781, 788, 791, 794, 809, 810, 811, 814, 816], "context_projection_funct": 665, "context_siz": 665, "contextual": 715, "contextualiz": 791, "contiguous": [585, 586, 591, 693, 714, 715, 738, 749, 761, 765, 791], "contiguously": [715, 740, 744], "continu": [585, 586, 591, 594, 598, 602, 608, 610, 640, 645, 664, 670, 673, 707, 714, 715, 717, 718, 719, 736, 747, 749, 751, 764, 766, 781, 791, 809, 817], "continually": 613, "continued": [585, 586, 715], "continuing": [591, 612, 661, 673, 708, 715, 757, 775, 794], "continuity": 749, "continuous": [605, 608, 670, 687, 690, 717, 747, 751], "continuously": [605, 728, 749, 779], "contract": [662, 678, 714, 715, 749, 768, 774], "contradict": [667, 715], "contrary": [608, 715], "contrast": [586, 590, 594, 608, 611, 673, 708, 728, 730, 749, 751, 753, 755, 788, 810], "contrib": [645, 683], "contribu": [586, 591, 615, 645, 664, 670, 682, 705, 744, 751, 789, 793], "contribut": [610, 645, 657, 670, 678, 682, 715, 736, 739, 746, 761, 770, 776, 788, 819], "contributed": [608, 615, 670, 728, 736, 762], "contributing": [670, 682, 684, 687, 714, 728, 736, 749, 751], "contributor": [593, 601, 606, 607, 610, 670, 728, 751, 762], "contrived": [676, 776], "control": [213, 371, 483, 589, 590, 591, 601, 602, 606, 608, 611, 612, 617, 618, 620, 629, 640, 661, 665, 669, 670, 672, 673, 674, 677, 678, 685, 713, 715, 716, 717, 718, 719, 720, 729, 730, 746, 749, 751, 755, 756, 764, 765, 768, 770, 781, 783, 784, 785, 786, 789, 790, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819], "controll": 591, "controlled": [19, 85, 176, 271, 315, 320, 325, 337, 352, 369, 436, 549, 589, 591, 595, 670, 672, 715, 717, 746, 761, 766, 782, 789], "controller": 591, "controlling": [617, 683, 715], "controversial": 670, "conv": 676, "convenient": [585, 604, 606, 608, 611, 612, 617, 628, 661, 665, 670, 688, 694, 708, 714, 715, 726, 729, 731, 746, 749, 750, 776, 781, 789, 811, 812, 813], "conveniently": [585, 666, 776, 789, 817], "convent": [585, 586, 598, 607, 611, 660, 663, 665, 673, 690, 708, 719, 722, 727, 728, 743, 749, 753, 765, 767, 768, 770, 774, 775, 810, 816], "conventional": 715, "conventionally": 604, "convergent": [598, 715], "convers": [591, 592, 608, 610, 612, 660, 661, 677, 678, 693, 694, 710, 749, 776, 792], "convert": [585, 586, 589, 590, 591, 595, 608, 616, 617, 630, 661, 677, 678, 681, 683, 689, 694, 700, 704, 711, 719, 727, 729, 749, 751, 775, 786, 788, 789, 790, 792, 808, 810, 811, 812, 813, 814, 815, 816, 817, 820], "converted": [52, 53, 143, 238, 239, 294, 295, 296, 309, 401, 402, 514, 515, 585, 586, 590, 591, 592, 608, 622, 626, 642, 670, 693, 715, 732, 746, 749, 759, 765, 775, 776, 786, 792], "convertibl": [585, 586, 749, 792], "converting": [597, 608, 674, 710, 715, 746, 757, 774, 776, 792], "converttoerrorcod": 749, "convey": [670, 673, 678, 688, 715, 782], "conveyed": 715, "conveying": 680, "cook": [715, 749], "cool": [661, 670, 788, 810, 811, 812, 813, 814, 815, 816], "cooper": [680, 699, 714], "coordin": [680, 770], "coordinat": [84, 175, 270, 435, 548, 792], "coordinating": [715, 770], "cop": [595, 608, 620, 661, 680, 683, 689, 694, 696, 713, 714, 715, 726, 746, 749, 761, 765, 770, 788], "copied": [585, 586, 591, 594, 608, 627, 661, 670, 714, 720, 722, 764, 767, 782], "coprocessor": 688, "copy": [78, 117, 171, 205, 266, 310, 542, 580, 585, 586, 591, 598, 602, 608, 611, 612, 625, 626, 642, 661, 673, 679, 680, 683, 687, 688, 689, 691, 693, 695, 696, 699, 706, 707, 714, 719, 721, 722, 728, 729, 736, 749, 752, 762, 765, 766, 767, 770, 781, 782, 785, 786, 788, 818], "copyabl": 715, "copycost": [696, 786], "copying": [591, 594, 606, 611, 616, 673, 680, 688, 689, 714, 715, 716, 719, 775, 786, 788], "copyleft": 670, "copypart": 717, "copyphysreg": 786, "copyright": [676, 788], "cor": [1, 5, 8, 591, 594, 596, 606, 607, 665, 670, 673, 674, 682, 683, 693, 695, 698, 700, 701, 702, 706, 715, 717, 719, 728, 731, 733, 751, 766, 774, 781, 788, 794, 795, 796, 797, 810, 811, 812, 813, 814, 816], "core2": 781, "corei7": [781, 785], "corn": [585, 671, 768], "cornerston": 681, "coroaddr": 665, "corollary": [715, 739, 741], "corosp": 665, "coroutin": 756, "corp": 717, "corpor": 717, "corpus": 679, "corpus1": 717, "corpus2": 717, "corpus_d": 717, "correct": [585, 591, 594, 595, 597, 606, 608, 611, 657, 661, 662, 665, 670, 674, 678, 683, 685, 699, 701, 706, 709, 715, 716, 726, 728, 733, 741, 746, 747, 748, 749, 758, 764, 765, 766, 771, 780, 785, 788, 789, 811], "correcting": 670, "correctly": [586, 591, 595, 601, 606, 608, 611, 612, 661, 670, 673, 676, 681, 683, 703, 705, 710, 715, 727, 731, 741, 747, 749, 750, 751, 757, 759, 764, 765, 766, 770, 781, 788, 792, 809, 812], "correctness": [661, 670, 683, 694, 709, 715, 719, 746, 758, 770, 779, 780], "correl": 715, "correlat": [591, 640, 646, 680, 715], "correlated": [715, 783], "correspond": [585, 586, 589, 591, 595, 600, 602, 606, 608, 612, 618, 625, 626, 640, 661, 665, 666, 673, 675, 676, 681, 689, 708, 710, 715, 721, 726, 728, 729, 730, 734, 736, 739, 740, 749, 751, 765, 774, 777, 783, 785, 786, 791, 809, 810, 812, 816], "corresponding": [27, 129, 220, 378, 490, 585, 586, 589, 591, 592, 595, 597, 598, 606, 608, 611, 612, 629, 632, 655, 665, 666, 669, 670, 673, 674, 680, 681, 683, 685, 689, 708, 709, 710, 712, 715, 716, 719, 721, 727, 730, 734, 736, 738, 739, 741, 746, 747, 749, 751, 759, 765, 770, 772, 774, 775, 776, 781, 783, 786, 788, 791, 792, 810, 812], "corrupt": [611, 673, 701, 717, 761, 817], "corrupted": 761, "cortex": [663, 702, 706, 711], "cortexa53model": 786, "cortexa57model": 786, "cos": [594, 785, 792, 808, 809, 810, 811], "cosin": [715, 786], "cost": [585, 586, 604, 608, 611, 640, 670, 688, 695, 696, 698, 700, 712, 714, 715, 716, 718, 724, 727, 745, 749, 751, 755, 759, 766, 772, 774, 785, 786, 817], "costly": [753, 761, 766, 791], "costmodel": 781, "could": [585, 586, 591, 594, 595, 602, 603, 606, 607, 608, 611, 612, 617, 628, 632, 640, 661, 665, 670, 672, 676, 677, 678, 679, 680, 681, 683, 688, 689, 693, 696, 699, 701, 706, 708, 710, 711, 712, 713, 714, 715, 716, 719, 722, 726, 728, 730, 731, 732, 733, 735, 740, 746, 747, 749, 751, 752, 753, 759, 761, 762, 765, 766, 767, 768, 770, 771, 772, 776, 781, 782, 783, 786, 789, 791, 792, 795, 796, 797, 809, 810, 811, 812, 814, 815, 817], "couldn": [594, 689, 727, 815], "counsel": 670, "count": [120, 209, 314, 479, 584, 585, 586, 590, 591, 595, 602, 606, 611, 622, 626, 632, 640, 646, 657, 661, 673, 674, 680, 689, 717, 719, 731, 736, 738, 749, 751, 755, 759, 761, 765, 768, 775, 776, 779, 780, 782, 786, 790, 791, 809], "counted": [590, 612, 711, 715], "counter": [20, 212, 370, 482, 591, 593, 632, 640, 646, 666, 715, 717, 733, 765], "counteracty": 761, "counterpart": [585, 586, 592, 715, 731], "counting": [632, 680, 715], "coupl": [595, 610, 678, 701, 715, 718, 724, 730, 747, 770, 787, 788, 789, 812, 813, 816, 817], "coupled": [694, 730, 749, 751], "cour": 123, "cours": [594, 606, 661, 674, 694, 710, 715, 717, 721, 727, 728, 733, 749, 763, 772, 788, 795, 808, 817, 818], "court": 670, "courtesy": [610, 664, 670], "cout": [611, 676, 700, 729, 792, 815], "cov": [585, 586, 606, 608, 611, 612, 616, 639, 666, 670, 683, 704, 707, 717, 722, 728, 732, 735, 749, 757, 767, 768, 818], "cover": [585, 604, 628, 661, 663, 670, 680, 681, 685, 696, 715, 717, 727, 786, 789], "coverag": [605, 606, 616, 639, 646, 660, 670, 679, 695, 704, 715, 756, 765, 784, 790], "covered": [585, 586, 604, 612, 626, 639, 666, 670, 678, 687, 701, 715, 717, 743, 761, 765, 769, 786, 788, 813], "covering": [586, 689, 724, 781, 818], "cp": [591, 683, 717, 721], "cp0": 688, "cp1": 688, "cp2": 688, "cp3": 688, "cpi": 721, "cpp": [592, 606, 607, 608, 611, 612, 617, 625, 640, 653, 655, 661, 668, 674, 676, 680, 683, 694, 700, 714, 715, 727, 728, 729, 730, 731, 751, 761, 765, 770, 771, 774, 775, 781, 785, 786, 787, 788, 790, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "cppflag": 750, "cppguid": 753, "cppperformancebenchmark": 752, "cppreferent": 749, "cpptypenam": [774, 775], "cpsr": 721, "cptmp0": 786, "cptmp1": 786, "cpu": [585, 586, 591, 595, 596, 598, 615, 618, 620, 631, 632, 640, 643, 644, 662, 702, 706, 711, 715, 717, 718, 725, 727, 757, 766, 779, 786, 788, 790, 791, 792, 815], "cpu0": 819, "cpu1": 792, "cpu2": 792, "cpu2017": 752, "cpu_id": 791, "cpu_nam": 632, "cpu_powerpc": 792, "cpu_x86": 792, "cpu_x86_64": 792, "cpufreq": [596, 702], "cpufrequtil": 702, "cpuinfo": 702, "cpun": 596, "cpunam": [618, 620, 640], "cpus": [586, 595, 596, 608, 617, 618, 620, 643, 662, 683, 702, 706, 766, 786, 791, 792, 815], "cpuset": 596, "cpusubtyp": 638, "cputyp": [598, 638], "cpux": 596, "cr": [608, 715], "cr0": 715, "cr7": 715, "craft": 762, "crafted": 749, "crash": [603, 613, 620, 680, 683, 686, 700, 709, 710, 715, 746, 749, 751, 752, 768, 817], "crashed": [613, 683], "crashing": 613, "crawl": 680, "crazi": 812, "crazy": [661, 817], "crc": 717, "crc32": 761, "crd": 752, "creal": 813, "creat": [585, 591, 597, 601, 604, 606, 607, 608, 610, 611, 618, 622, 632, 633, 635, 638, 645, 662, 664, 666, 668, 669, 670, 671, 672, 673, 675, 676, 680, 683, 685, 687, 688, 689, 691, 693, 694, 695, 701, 703, 704, 706, 709, 710, 711, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 726, 727, 728, 729, 730, 746, 747, 749, 751, 758, 765, 766, 767, 768, 770, 771, 772, 774, 775, 777, 779, 780, 783, 785, 786, 787, 788, 789, 790, 792, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817], "createalloc": [814, 815, 816], "createasmstream": 608, "createbarejitdylib": [794, 795, 796, 797], "createbasicaliasanalysispass": 816, "createbasictyp": 816, "createbr": [812, 813, 814, 815, 816], "createcall": [749, 810, 811, 812, 813, 814, 815, 816], "createcfgsimplificationpass": [795, 796, 797, 811, 812, 813, 814, 816], "createcgscctofunctionpassadaptor": 730, "createcompileun": 816, "createcondbr": [812, 813, 814, 815, 816], "createcontentblock": 714, "created": [585, 586, 591, 597, 598, 601, 606, 608, 609, 611, 615, 622, 626, 640, 642, 647, 661, 665, 666, 669, 670, 676, 681, 683, 685, 689, 700, 706, 707, 714, 715, 717, 718, 720, 728, 730, 731, 732, 743, 747, 749, 755, 758, 759, 765, 770, 774, 776, 782, 786, 787, 788, 792, 794, 795, 810, 811, 812, 814, 816], "createdatalayout": [796, 811, 815], "createdefaultmypass": 788, "createentryblockalloc": [814, 815, 816], "createexpress": 816, "createfadd": [810, 811, 812, 813, 814, 815, 816], "createfcmpon": [812, 813, 814, 815, 816], "createfcmpult": [810, 811, 812, 813, 814, 815, 816], "createfil": 816, "createfmul": [810, 811, 812, 813, 814, 815, 816], "createfsub": [810, 811, 812, 813, 814, 815, 816], "createfunct": 816, "createfunctiontolooppassadaptor": 730, "createfunctiontyp": 816, "creategvnpass": [795, 796, 797, 811, 812, 813, 814, 816], "createindirectstubsmanag": 796, "createinstructioncombiningpass": [795, 796, 797, 811, 812, 813, 814], "createj": 720, "createjitdylib": 731, "createlazycallthroughmanag": [796, 797], "createlinkgraph": 714, "createlinkgraph_": 714, "createload": [814, 815, 816], "createlocalcompilecallbackmanag": 796, "createlocalindirectstubsmanagerbuild": 796, "createmiroperandcomment": 721, "createmoduletocgsccpassadaptor": 730, "createmoduletofunctionpassadaptor": 730, "createmul": 749, "createmyregisterallocator": 788, "createparametervari": 816, "createph": [812, 813, 814, 815, 816], "createpromotememorytoregisterpass": [814, 816], "createreassociatepass": [795, 796, 797, 811, 812, 813, 814], "createresourcetrack": [811, 812, 813, 814], "createret": [810, 811, 812, 813, 814, 815, 816], "createsect": 714, "createstor": [814, 815, 816], "createstringerror": 749, "createsubroutinetyp": 816, "createtargetasminfo": 786, "createtargetmachin": 815, "createthin": 622, "createuitofp": [810, 811, 812, 813, 814, 815, 816], "createvirtualregist": 608, "createzerofillblock": 714, "creating": [585, 586, 611, 615, 616, 617, 622, 625, 632, 635, 640, 659, 664, 669, 671, 673, 675, 676, 682, 683, 699, 701, 703, 707, 709, 714, 715, 718, 720, 730, 731, 746, 751, 755, 757, 762, 765, 768, 781, 786, 787, 792, 811, 812, 813, 816, 819], "creation": [591, 606, 622, 665, 669, 680, 707, 711, 715, 749, 751, 786], "creator": [606, 788], "creatur": 813, "cred": 766, "credit": 670, "creduc": [603, 709], "crhc": 752, "critedge1": 729, "criteri": [670, 751, 761], "criterion": 751, "critical": [607, 620, 640, 670, 678, 680, 694, 701, 707, 715, 758, 761, 788, 809], "critically": [594, 766], "cross": [593, 611, 613, 645, 694, 695, 696, 702, 703, 714, 715, 727, 731, 744, 751, 755, 762, 781, 784, 815], "crosscompil": [608, 706], "crossregisterprox": 730, "crt": [606, 703], "crtp": 787, "crucial": [715, 747, 766], "cruel": [722, 767], "cruft": 751, "cruntim": 671, "crypto": 717, "cryptographic": [748, 766], "cryptographically": 761, "cryptography": 757, "cs": [591, 646, 715, 752], "cs1": [594, 715], "cs2": [594, 715], "csail": 766, "cse": [595, 674, 690, 716, 733, 811], "csemirbuild": 690, "cset": 596, "csk_md5": 715, "csk_non": 715, "csk_sha1": 715, "csk_sha256": 715, "csr": 757, "csr_64": 721, "cst": 715, "cst_code_integ": 598, "cst_code_wide_integ": 598, "cstdint": [811, 812, 813, 814], "cstdio": [809, 810, 811, 812, 813, 814, 815, 816], "cstdlib": [809, 810, 811, 812, 813, 814, 815], "cstptr": 715, "csv": [632, 780, 789, 790], "cta": 729, "ctabl": 774, "ctag": 660, "ctaid": 729, "ctest": 779, "ctmark": [732, 779], "ctor": [611, 676, 713, 715, 765], "ctpop": 786, "ctrl": [810, 815], "ctx": [731, 794, 795], "ctxt": [665, 792], "ctyp": 736, "cu": [591, 631, 662, 710, 715, 765], "cub": 589, "cubemap": 589, "cubic": 717, "cucontext": 729, "cuctxcreat": 729, "cuctxdestroy": 729, "cud": [586, 591, 608, 617, 663, 672, 729, 784], "cuda_success": 729, "cudamodul": 729, "cudevic": 729, "cudevicecomputecapability": 729, "cudeviceget": 729, "cudevicegetcount": 729, "cudevicegetnam": 729, "cudeviceptr": 729, "cufunct": 729, "cuin": 729, "culaunchkernel": 729, "culinkstat": 729, "culled": 611, "culling": 591, "cultur": 609, "cultural": 724, "cumbersom": [731, 751], "cumemalloc": 729, "cumemcpydtoh": 729, "cumemcpyhtod": 729, "cumemfre": 729, "cumod": 591, "cumodul": 729, "cumodulegetfunct": 729, "cumoduleloaddat": 729, "cumoduleloaddataex": 729, "cumoduleunload": 729, "cumul": [608, 790], "cumulatively": 642, "cuobjdump": 662, "curesult": 729, "curious": 727, "curiously": 708, "curloc": 816, "curly": [611, 715, 749, 781], "curop": 786, "currency": [608, 610, 811], "current": [585, 586, 589, 590, 591, 598, 603, 604, 607, 608, 611, 612, 618, 620, 622, 640, 653, 665, 666, 668, 669, 670, 673, 674, 677, 678, 680, 682, 683, 686, 687, 694, 698, 706, 707, 712, 713, 714, 715, 717, 719, 727, 728, 729, 740, 746, 747, 748, 749, 750, 757, 758, 761, 764, 765, 766, 768, 770, 774, 776, 777, 781, 782, 783, 784, 786, 788, 792, 795, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "current_corpus_d": 717, "current_valu": 665, "currently": [175, 270, 435, 548, 585, 586, 589, 590, 591, 594, 595, 597, 598, 600, 603, 605, 606, 608, 609, 612, 613, 615, 617, 618, 626, 628, 640, 642, 643, 649, 650, 661, 662, 665, 670, 672, 673, 674, 675, 676, 677, 678, 680, 681, 683, 686, 688, 689, 690, 693, 694, 696, 698, 699, 700, 701, 703, 714, 715, 717, 720, 721, 726, 729, 730, 731, 732, 736, 745, 746, 748, 749, 750, 752, 754, 759, 760, 761, 762, 765, 766, 768, 770, 771, 774, 781, 782, 786, 788, 789, 790, 792, 794, 795, 796, 809, 811, 812, 813, 814, 816, 817], "curs": [613, 617], "curtok": [809, 810, 811, 812, 813, 814, 815, 816], "curvar": [814, 815, 816], "cus": [591, 655], "custom": [603, 606, 608, 611, 612, 613, 673, 676, 678, 683, 684, 693, 714, 715, 717, 721, 730, 746, 770, 774, 776, 777, 781, 789, 791, 794, 797], "customalloc": 665, "customary": [661, 670, 715], "custombehaviour": 640, "customevent": 791, "customeventmarker": 791, "customeventunstructuredmemory": 791, "customfor": 693, "customfre": 665, "customised": 606, "customiz": [606, 661, 674, 681, 690, 694, 710, 730, 749, 779, 781, 789], "customized": [680, 694, 715, 721], "customizing": [606, 640], "cut": [599, 661, 786, 794, 817], "cutoff": 646, "cv": 751, "cv_cpu_type_": 736, "cv_signature_xx": 739, "cvdebugrecord": 741, "cvdump": 645, "cve": [717, 762], "cvinfo": 739, "cvis": 709, "cvpack": 743, "cvt": 729, "cx": 777, "cxa_demangl": 765, "cxx": [604, 606, 611, 617, 671, 683, 699, 706, 731, 758], "cxx11": 752, "cxx14": 611, "cxx_fast_tl": 715, "cxx_fast_tlscc": [598, 715], "cxx_flag": 702, "cxx_status": 611, "cxxcompilelai": 731, "cxxcompilinglai": 731, "cxxfilt": 616, "cxxflag": [625, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "cxxlai": 731, "cxxmap": [616, 646], "cy": 640, "cycl": [632, 640, 664, 669, 673, 682, 701, 715, 718, 719, 765, 784, 790], "cycle_frequency": 791, "cyclic": [585, 586, 683, 715, 719], "cyclonemodel": 786, "cygwin": [608, 683, 685], "cypress": 591, "cywritev3": 786, "d0": [612, 640, 715, 786], "d02": 783, "d0o": 666, "d1": [612, 666, 667, 786], "d10": 786, "d107653": 757, "d108097": 757, "d11": 786, "d110352": 757, "d110595": 757, "d111517": 757, "d111889": 757, "d111937": 757, "d112116": 757, "d113356": 757, "d113717": 757, "d114225": 757, "d114492": 757, "d115635": 757, "d116556": 757, "d116979": 757, "d117281": 757, "d12": [783, 786], "d12344": 747, "d12345": 747, "d13": 786, "d14": 786, "d15": [715, 786], "d16": [0, 3, 4, 9, 98, 112, 114, 288, 306, 308, 449, 470, 562, 576, 578], "d16_x": 588, "d16_xy": 588, "d16_xyz": 588, "d16_xyzw": 588, "d2": [667, 786], "d3": [721, 786], "d31": 715, "d4": [715, 786], "d43184": 703, "d5": 786, "d57504": 754, "d57896": 753, "d58291": 728, "d6": [666, 786], "d7": [715, 786], "d7k": 666, "d8": 786, "d88124": 703, "d89518": 703, "d9": 786, "d90021": 703, "d_ctor_bas": 612, "d_libcpp_abi_force_itanium": 703, "d_no_crt_stdio_inlin": 703, "da": [2, 3, 4, 9, 640, 666, 715], "dag": [592, 660, 715, 716, 743, 749, 751, 770, 774, 775, 777, 781, 786], "dagarg": 776, "dagarglist": 776, "dagcombin": 674, "dagiselemitt": 775, "dagrecty": 775, "dagtodag": 674, "dagtodagisel": 674, "damaging": 765, "dan": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 792], "danc": 686, "dang": [760, 766], "dangerous": [612, 715, 749, 782], "dangling": [611, 749, 776], "daniel": [697, 765], "danil": 753, "darktabl": 752, "darwin": [604, 606, 608, 616, 622, 641, 651, 677, 715, 718, 731, 748, 768, 816], "darwin9": 612, "das": 753, "dash": [661, 679, 792], "dasinconsistent": 753, "dat": [36, 37, 38, 66, 68, 78, 84, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 117, 157, 159, 171, 175, 186, 187, 188, 189, 190, 191, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 254, 256, 266, 270, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 354, 355, 386, 387, 388, 418, 420, 435, 444, 447, 448, 449, 450, 451, 452, 455, 456, 457, 467, 468, 469, 470, 471, 472, 499, 500, 501, 530, 532, 542, 548, 557, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 588, 589, 590, 593, 594, 595, 596, 597, 602, 603, 604, 605, 606, 607, 610, 611, 616, 617, 622, 626, 640, 641, 642, 643, 644, 645, 647, 649, 650, 651, 654, 655, 660, 661, 665, 673, 674, 675, 677, 678, 679, 680, 681, 683, 685, 688, 693, 694, 701, 704, 706, 707, 714, 716, 717, 718, 719, 720, 721, 726, 728, 730, 731, 732, 735, 736, 740, 741, 743, 744, 747, 748, 751, 752, 753, 755, 756, 757, 758, 759, 761, 762, 765, 767, 768, 770, 772, 774, 776, 777, 779, 781, 786, 788, 790, 794, 795, 796, 810, 811, 812, 814, 815, 816], "data1": 776, "data16bitsdirect": 786, "data32bitsdirect": 786, "data64bitsdirect": 786, "data_alignment_factor": [585, 586, 591], "data_ty": 775, "databas": [715, 744, 756, 792, 817], "datacrc": 736, "dataflow": [606, 715, 765, 814], "datalayout": [598, 680, 715, 729, 731, 732, 783, 786, 794, 795, 796, 797], "datalayoutpass": 816, "dataloc": 715, "dataset": [752, 779], "datastructur": [749, 751], "datatyp": [608, 661, 749, 776, 808], "daunting": 606, "david": [753, 755], "day": [606, 610, 670, 682, 683, 701, 707, 728, 749, 762, 772], "db": 715, "dbaremetal_armv6m_sysroot": 705, "dbaremetal_armv7em_sysroot": 705, "dbaremetal_armv7m_sysroot": 705, "dbg": [602, 710, 714, 715, 721, 749, 786, 816], "dbg_instr_ref": 721, "dbg_valu": [591, 710, 715, 721, 765], "dbg_value_list": 765, "dbgentityhistorycalculator": 765, "dbgopt": 765, "dbgstreamarray": 736, "dbi": [734, 739, 744], "dbi_head": 736, "dbistreamhead": 736, "dbistreamvers": 736, "dbl": 779, "dblty": 816, "dbootstrap_cmake_build_typ": 672, "dbootstrap_cmake_c_flag": 593, "dbootstrap_cmake_cxx_flag": 593, "dbscan": 632, "dbuild": 816, "dbuild_shared_lib": 683, "dbx": 765, "dc": [717, 723], "dce": [613, 661, 674, 715, 754], "dced": 749, "dclang_bootstrap_passthrough": 593, "dclang_bootstrap_target": 672, "dclang_enable_bootstrap": [593, 672], "dclang_enable_proto_fuzz": 679, "dclang_enable_static_analyz": 683, "dclang_tablegen": [704, 706], "dcmake_ar": 705, "dcmake_asm_compiler_target": 705, "dcmake_asm_flag": 705, "dcmake_build_typ": [664, 672, 683, 702, 704, 728, 781, 790], "dcmake_c_compil": [704, 705, 779], "dcmake_c_compiler_external_toolchain": 705, "dcmake_c_compiler_target": 705, "dcmake_c_flag": [702, 703, 704, 705], "dcmake_c_flags_releas": 790, "dcmake_crosscompiling": 706, "dcmake_cxx_compil": 704, "dcmake_cxx_flag": [704, 706, 790], "dcmake_cxx_link_flag": 683, "dcmake_exe_linker_flag": 705, "dcmake_install_prefix": [606, 683, 702, 703, 706], "dcmake_nm": 705, "dcmake_osx_architectur": 683, "dcmake_ranlib": 705, "dcmake_sysroot": 705, "dcmake_toolchain_fil": 683, "dcmake_try_compile_target_typ": 705, "dcomm": 751, "dcompiler_rt_baremetal_build": 705, "dcompiler_rt_build_builtin": 705, "dcompiler_rt_build_libfuzz": [705, 717], "dcompiler_rt_build_memprof": 705, "dcompiler_rt_build_profil": 705, "dcompiler_rt_build_sanitizer": 705, "dcompiler_rt_build_xray": 705, "dcompiler_rt_default_target_only": 705, "dcompiler_rt_emulator": 705, "dcompiler_rt_include_test": [705, 717], "dcompiler_rt_os_d": 705, "dcompiler_rt_test_compil": 705, "dcompiler_rt_test_compiler_cflag": 705, "ddg": [669, 756], "ddgbuild": 669, "deactiv": 772, "dead": [594, 608, 661, 676, 678, 683, 691, 710, 714, 715, 716, 718, 721, 729, 733, 749, 765, 770], "deadlin": 610, "deadly": 717, "deadstoreelimin": 726, "deadtypeelim": 749, "deal": [595, 598, 606, 611, 662, 665, 670, 677, 688, 693, 694, 708, 730, 746, 749, 765, 774, 787, 788, 789], "dealing": [595, 597, 609, 611, 670, 673, 677, 735, 743, 749, 751, 755, 761, 765, 766, 814], "dealloc": [700, 715, 761], "dealloc_type_mismatch": 761, "deallocat": [665, 680, 714, 715, 749], "deallocated": [700, 715, 761], "deallocating": [665, 761], "death": [679, 717], "deb": 706, "debat": 690, "debian": [683, 705, 706, 745, 767], "debian8": 672, "debug": [585, 586, 592, 602, 603, 604, 606, 608, 611, 613, 616, 617, 625, 632, 641, 642, 643, 645, 646, 650, 654, 655, 659, 660, 661, 664, 666, 668, 670, 673, 675, 683, 685, 690, 701, 704, 709, 714, 716, 717, 718, 725, 728, 730, 731, 734, 735, 738, 739, 741, 743, 744, 745, 750, 753, 756, 759, 768, 770, 777, 779, 781, 784, 786, 788, 790, 808, 814, 815, 817, 818, 819], "debug_": 591, "debug_addr": [585, 586], "debug_arang": [585, 586, 591], "debug_count": 749, "debug_fram": [585, 586, 643], "debug_info": [585, 631, 765], "debug_inlin": 615, "debug_level": 661, "debug_lin": [585, 586], "debug_loclist": [585, 586], "debug_macinfo": 631, "debug_macro": 631, "debug_metadata_vers": 816, "debug_mod": 591, "debug_nam": [586, 765], "debug_pubnam": [615, 734, 765], "debug_pubtyp": [615, 765], "debug_rnglist": [585, 586], "debug_s_crossscopeexport": 645, "debug_s_crossscopeimport": 645, "debug_s_inlineelin": 645, "debug_s_lin": 645, "debug_str": [612, 765], "debug_string": 632, "debug_symbol": 745, "debug_with_typ": 749, "debugability": 683, "debugcount": 749, "debugflag": [661, 749], "debugg": [585, 586, 611, 645, 660, 668, 700, 720, 728, 731, 741, 772, 781, 784, 788, 812, 816], "debuggability": 673, "debugged": 765, "debugger": [586, 591, 602, 608, 645, 668, 690, 744, 753, 765, 816, 818], "debugging": [591, 602, 603, 606, 608, 611, 613, 617, 618, 629, 633, 642, 660, 661, 680, 683, 685, 707, 709, 710, 714, 715, 721, 727, 730, 731, 733, 746, 777, 784, 786, 788, 816, 818], "debuginfo": [710, 715, 741, 751, 781, 816], "debuginfod": 757, "debuginfoforprofiling": 715, "debuginfometadat": 765, "debuglev": 661, "debuglevel": 661, "debuglink": 642, "debugloc": [608, 721, 759, 816], "debugstreamarray": 736, "debugtrap": 591, "dec": [651, 749], "decemb": 763, "decent": [674, 702, 707, 749, 788, 816], "decid": [591, 606, 661, 662, 670, 673, 674, 693, 709, 715, 736, 747, 749, 762, 765, 766, 785, 788, 809, 813], "decided": [585, 586, 597, 715, 734, 770, 792, 814], "deciding": [597, 604, 693, 698, 749], "decimal": [590, 591, 612, 621, 641, 646, 651, 653, 661, 675, 715, 792], "decimal_numb": 591, "decimalinteg": 776, "deciph": 591, "decis": [597, 602, 604, 608, 609, 610, 611, 670, 673, 678, 687, 689, 693, 698, 715, 717, 728, 731, 749, 755, 760, 766, 770, 785, 795, 811], "decl": [660, 708, 777, 810], "decl_in_loop": 715, "declar": [590, 591, 594, 598, 608, 611, 612, 660, 661, 662, 665, 674, 676, 693, 703, 708, 713, 715, 721, 727, 729, 730, 748, 749, 768, 770, 771, 774, 775, 776, 777, 783, 786, 787, 788, 808, 809, 810, 811, 812, 813, 814, 815, 816], "declarator": 612, "declared": [585, 586, 590, 591, 661, 703, 715, 746, 749, 765, 771, 774, 776, 777, 786, 788, 809, 810, 811, 812, 813, 814, 815, 816], "declaring": [594, 661, 715, 749], "declaring_vari": 753, "declcontext": 708, "declet": 715, "decltyp": [715, 796], "decod": [598, 640, 649, 650, 715, 765, 779], "decoded": [598, 632, 640], "decoder": 632, "decodermethod": 776, "decodernamespac": 776, "decoding": 774, "decompos": [674, 714, 715], "decomposed": [591, 670, 743], "decomposing": [693, 770], "decomposit": 632, "decompress": 642, "decorat": 765, "decorated": 714, "decr": [1, 2, 3, 4, 6, 7, 8, 9, 673, 749], "decreas": [589, 606, 620, 704, 761], "decreased": 707, "decreasing": [604, 715, 735], "decremented": [591, 715], "dedicated": [590, 608, 670, 698, 700, 707, 719, 751, 763, 786], "deduc": [715, 719, 733, 749, 774], "deduced": 782, "deducibl": [591, 678], "dedupl": [715, 736], "deduplicat": 715, "dee": 640, "deem": [670, 709], "deemed": [674, 707, 715, 719], "deep": [607, 611, 645, 669, 679, 714, 746, 752, 767, 779, 794], "deeply": 666, "def": [585, 586, 592, 608, 610, 632, 660, 665, 669, 674, 688, 691, 710, 712, 716, 719, 721, 726, 730, 755, 765, 766, 774, 775, 777, 786, 787, 788, 794, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816], "default": [66, 93, 100, 101, 104, 105, 106, 107, 112, 115, 157, 189, 190, 191, 194, 195, 196, 201, 203, 204, 254, 281, 282, 283, 297, 298, 299, 300, 301, 306, 309, 354, 455, 456, 457, 471, 472, 557, 564, 565, 568, 569, 570, 571, 576, 579, 585, 586, 589, 591, 592, 593, 594, 595, 598, 600, 604, 606, 608, 612, 613, 615, 617, 618, 620, 621, 622, 625, 626, 627, 630, 631, 632, 633, 636, 640, 641, 642, 643, 645, 646, 647, 649, 650, 651, 653, 654, 655, 657, 660, 661, 662, 665, 670, 674, 675, 678, 679, 680, 683, 685, 696, 699, 700, 701, 703, 704, 705, 706, 708, 710, 713, 714, 715, 717, 720, 721, 723, 728, 729, 731, 732, 745, 747, 749, 750, 751, 752, 757, 759, 761, 762, 765, 766, 768, 770, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 785, 786, 788, 789, 790, 794, 795, 809, 810, 811, 812, 813, 814, 815, 816], "default_branch_weight": 600, "default_float_round": 591, "defaultdest": 715, "defaulted": 715, "defaulting": 643, "defaultopt": 661, "defeating": 766, "defect": 610, "defend": 766, "defending": 766, "defens": 670, "deferred": [585, 586, 720, 727, 753], "deferrederr": 749, "deferring": [731, 795], "deficiency": 680, "defin": [66, 67, 157, 158, 254, 255, 349, 418, 419, 530, 531, 585, 589, 591, 594, 597, 598, 599, 600, 606, 607, 608, 611, 612, 613, 617, 640, 661, 662, 664, 665, 666, 669, 670, 672, 673, 676, 680, 681, 683, 688, 693, 700, 705, 706, 708, 710, 712, 713, 714, 715, 717, 719, 721, 722, 726, 727, 728, 729, 731, 732, 736, 739, 744, 746, 747, 748, 749, 750, 754, 755, 756, 761, 765, 767, 770, 771, 774, 777, 779, 781, 782, 783, 786, 787, 788, 789, 790, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "define_dwarf": 591, "defined": [20, 123, 212, 370, 482, 585, 586, 589, 590, 591, 593, 594, 595, 598, 603, 606, 607, 608, 611, 612, 617, 622, 624, 640, 641, 642, 646, 660, 661, 662, 665, 666, 667, 669, 670, 673, 674, 675, 676, 680, 681, 683, 688, 689, 690, 691, 692, 693, 700, 708, 709, 712, 714, 718, 719, 721, 726, 727, 729, 733, 735, 736, 739, 741, 745, 746, 748, 749, 750, 753, 761, 763, 765, 768, 769, 770, 771, 774, 775, 776, 777, 780, 782, 783, 786, 787, 788, 789, 791, 792, 794, 795, 808, 809, 810, 811, 812, 815, 816, 817, 818, 819], "defined_symbol": 714, "defining": [585, 586, 591, 598, 607, 608, 612, 661, 665, 673, 679, 680, 700, 708, 715, 727, 745, 749, 761, 765, 774, 776, 788, 790, 792, 809], "definingaccess": 726, "definit": [590, 591, 595, 597, 598, 600, 607, 608, 612, 615, 629, 632, 641, 645, 660, 661, 665, 667, 669, 674, 680, 688, 689, 691, 692, 693, 700, 703, 712, 714, 715, 718, 721, 726, 727, 731, 746, 749, 761, 765, 770, 774, 775, 777, 783, 786, 787, 788, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "definitely": [664, 709, 715, 719, 726, 749, 761], "defm": [775, 777, 786], "defreg": 632, "defunct": 731, "defvar": 775, "defy": 715, "degener": 715, "degenerat": [746, 814], "degrad": 670, "degraded": 680, "degrading": 772, "degrandmaison": 724, "degre": [595, 670, 672, 678, 701, 766, 785], "deinitializer": 731, "delay": [610, 727, 749, 753, 760, 761, 765], "delayed": [707, 761, 762, 765, 772, 776], "delegat": [595, 640, 673, 715], "delet": [585, 586, 594, 602, 606, 608, 612, 622, 633, 634, 657, 676, 683, 699, 704, 710, 715, 726, 727, 729, 749, 751, 761, 765, 788, 810, 811, 812, 813, 814], "delete_all_rpath": 634, "delete_rpath": 634, "delete_size_mismatch": 761, "deleteaninstruct": 749, "deleted": [594, 676, 710, 714, 715, 719, 721, 730, 749, 765, 794, 796, 811], "deleting": [594, 622, 714, 715, 731, 746, 810, 811, 812, 813, 814, 816], "deliberately": [726, 768], "delicat": 701, "delim": [673, 776], "delimit": 776, "delimited": [607, 683, 715, 723, 776], "delineator": 617, "delt": [603, 640, 791], "deltalinestart": 666, "delv": 811, "delving": 670, "demand": [591, 598, 608, 731, 751, 794, 814], "demanding": 683, "demangl": [604, 616, 621, 626, 641, 643, 649, 650, 655, 717, 757, 765], "demangled": [626, 627, 643, 649, 650, 655, 765], "demangling": [621, 627], "demo": [661, 707, 810], "demonstr": 811, "demonstrat": [585, 666, 670, 683, 715, 740, 749, 765, 786, 810, 811], "demonstrated": [640, 670, 708], "demonstrating": [715, 749], "denisov": 753, "denisovcamelback": 753, "denormal": [591, 662, 715], "denormaliz": 792, "denormalizing": 792, "denot": [585, 586, 598, 680, 683, 715, 740], "denoted": [608, 665, 689, 715, 792], "denoting": [612, 715], "dens": [591, 598, 715, 749, 813], "densely": [598, 715], "densemap": 611, "densemapinfo": 749, "denseset": 731, "density": [611, 813], "deopt": [715, 770], "deopt_arg": 715, "deoptimiz": 770, "depart": 622, "department": [724, 752], "departur": 751, "depend": [84, 86, 96, 97, 98, 99, 113, 114, 175, 186, 187, 188, 202, 270, 279, 280, 286, 287, 288, 289, 291, 294, 295, 296, 307, 308, 435, 447, 448, 449, 450, 469, 470, 548, 560, 561, 562, 563, 577, 578, 585, 586, 589, 590, 591, 592, 593, 594, 595, 600, 601, 606, 608, 609, 611, 613, 617, 618, 622, 632, 640, 659, 662, 670, 673, 681, 683, 688, 693, 701, 705, 715, 717, 721, 726, 727, 729, 730, 731, 733, 745, 746, 747, 749, 750, 758, 759, 765, 768, 772, 776, 781, 782, 785, 788, 791, 794, 809, 810, 814], "depended": [611, 788], "dependenc": [594, 606, 608, 611, 625, 640, 661, 669, 670, 672, 673, 679, 683, 701, 705, 706, 714, 715, 717, 730, 731, 746, 747, 751, 759, 779, 782, 788], "dependencegraphbuild": 669, "dependency": [585, 586, 606, 608, 640, 645, 660, 669, 692, 703, 715, 731, 751, 766], "dependent": [585, 586, 596, 598, 611, 617, 624, 634, 640, 645, 649, 650, 673, 676, 681, 688, 703, 711, 714, 726, 730, 751, 756, 757, 765, 771, 780, 786, 788, 791], "depending": [19, 27, 82, 98, 112, 114, 129, 220, 288, 306, 308, 315, 320, 325, 337, 351, 369, 378, 433, 449, 470, 490, 546, 562, 576, 578, 585, 587, 589, 590, 591, 594, 595, 608, 617, 622, 640, 646, 665, 670, 673, 678, 680, 688, 689, 700, 701, 705, 706, 712, 714, 715, 720, 733, 735, 740, 749, 751, 761, 770, 772, 780, 786, 788, 810], "depict": 669, "depicted": [640, 669], "deplib": [598, 675], "deploi": 766, "deploy": [703, 762, 766], "deployed": 672, "deploying": [747, 766], "deployment": 766, "deprec": [670, 731, 789], "deprecat": [585, 586, 730, 749, 765], "deprecated": [585, 586, 591, 598, 606, 612, 617, 626, 643, 702, 721, 730, 732, 735, 757, 772, 776, 781, 786], "deprecating": 772, "depth": [78, 171, 266, 542, 591, 603, 608, 612, 631, 645, 661, 667, 683, 699, 715, 719, 727, 746, 751, 752, 769, 774, 777, 795, 812], "deref": 585, "deref_bytes_nod": 715, "dereferencability": 678, "dereference": [598, 678], "dereferenceability": 715, "dereferenceable_byt": 715, "dereferenceable_or_null": 598, "dereferenced": [585, 586, 607, 700, 715, 746, 749], "dereferencing": [585, 586, 677, 715, 749], "dereferent": [585, 586, 591, 607, 681, 715, 728, 749, 765, 794], "deriv": [591, 608, 611, 708, 715, 720, 747, 749, 765, 770, 774, 775, 788], "derived": [591, 670, 680, 708, 712, 715, 716, 746, 747, 765, 774, 775, 776, 777, 782, 795, 808], "derived_ptr": 715, "derivedtyp": [674, 749, 810, 811, 812, 813, 814, 815], "deriving": [774, 788], "desc": [591, 661, 786, 788], "descend": [673, 686], "descending": [617, 715], "descent": [809, 813, 818], "describ": [0, 5, 585, 586, 587, 588, 589, 590, 591, 597, 598, 599, 604, 607, 608, 611, 616, 617, 640, 661, 662, 665, 666, 669, 670, 673, 674, 675, 677, 679, 680, 681, 682, 683, 686, 688, 693, 695, 696, 707, 708, 709, 712, 714, 715, 716, 718, 720, 721, 725, 726, 727, 729, 734, 735, 736, 740, 744, 746, 749, 751, 756, 757, 759, 762, 765, 770, 775, 776, 777, 782, 783, 784, 786, 787, 788, 789, 791, 797, 809, 810, 811, 812, 813, 815, 816, 818], "described": [20, 27, 52, 53, 120, 123, 129, 143, 209, 212, 213, 220, 238, 239, 314, 370, 371, 378, 401, 402, 479, 482, 483, 490, 514, 515, 584, 585, 586, 587, 588, 590, 591, 595, 598, 600, 604, 608, 611, 612, 617, 618, 631, 642, 645, 661, 662, 664, 665, 666, 669, 670, 673, 677, 679, 688, 694, 699, 708, 710, 712, 714, 715, 718, 720, 721, 727, 731, 733, 736, 739, 740, 741, 743, 747, 748, 750, 753, 760, 765, 766, 768, 770, 774, 775, 776, 782, 786, 787, 788, 789, 791, 794, 796, 811, 812], "describing": [585, 586, 587, 598, 611, 612, 628, 666, 670, 673, 680, 683, 703, 710, 714, 715, 721, 731, 736, 739, 743, 749, 755, 757, 759, 763, 765, 770, 774, 777, 784, 792], "descript": [1, 5, 6, 7, 8, 17, 20, 27, 29, 30, 31, 78, 120, 121, 123, 129, 131, 171, 209, 210, 212, 213, 220, 222, 223, 266, 314, 341, 370, 371, 378, 380, 381, 479, 480, 482, 483, 490, 492, 493, 494, 542, 584, 587, 588, 589, 590, 591, 594, 595, 598, 601, 604, 606, 607, 610, 611, 616, 661, 666, 671, 672, 673, 680, 683, 689, 693, 696, 700, 701, 708, 709, 715, 716, 727, 728, 729, 734, 746, 747, 749, 756, 761, 762, 765, 768, 774, 775, 776, 777, 779, 784, 786, 789, 791, 815, 816, 820], "descriptor": [585, 586, 598, 640, 714, 715, 731, 736, 765, 768, 786, 816], "deserializ": 774, "deserv": [678, 715], "design": [604, 610, 611, 613, 640, 664, 665, 670, 673, 680, 681, 682, 714, 715, 728, 734, 738, 749, 753, 756, 765, 766, 768, 770, 771, 777, 783, 784, 792, 817, 818], "designat": 665, "designated": [608, 665, 701, 714, 716, 721, 762, 765, 768, 788], "designed": [594, 595, 602, 603, 608, 611, 612, 617, 640, 661, 666, 670, 673, 676, 678, 680, 711, 713, 714, 715, 717, 721, 740, 746, 749, 750, 755, 756, 759, 761, 765, 766, 768, 777, 780, 786, 787, 788, 814], "designer": [776, 818], "designing": [586, 611, 617, 714, 724, 751, 784, 788], "desir": [585, 586, 591, 611, 615, 715, 717, 732, 733, 749, 753, 766, 768, 770, 788, 817], "desired": [585, 586, 595, 602, 606, 612, 615, 617, 631, 675, 678, 680, 712, 715, 717, 720, 746, 759, 760, 765, 766, 768, 770, 774, 775, 776, 781, 786, 788], "desktop": [685, 745, 781], "despair": 728, "despit": [595, 608, 661, 704, 715, 751, 753, 765, 766, 770, 777, 788, 791], "dest": [715, 815], "dest1": 715, "dest2": 715, "dest_bas": 770, "dest_offset": 770, "destabiliz": 670, "destarglist": 715, "destin": [18, 122, 211, 336, 368, 481, 587, 588, 589, 590, 591, 600, 608, 622, 673, 675, 678, 689, 710, 715, 766, 770, 781, 786, 814, 815, 816], "destreg": 608, "destroy": [673, 676, 713, 715, 721, 786, 792], "destroyed": [608, 665, 698, 731, 749], "destroying": 665, "destruct": [713, 765, 766, 768], "destructed": 749, "destructively": [768, 817], "destructor": [611, 662, 673, 676, 715, 749, 753, 765, 788], "detail": [585, 586, 589, 591, 594, 595, 599, 601, 604, 606, 607, 608, 609, 612, 618, 624, 631, 632, 640, 645, 646, 649, 660, 661, 662, 665, 670, 672, 673, 676, 679, 680, 681, 682, 683, 689, 700, 701, 708, 709, 714, 715, 716, 717, 718, 724, 725, 726, 727, 728, 729, 730, 731, 733, 736, 740, 743, 746, 749, 750, 751, 752, 753, 763, 770, 771, 772, 774, 777, 779, 781, 782, 786, 787, 788, 789, 790, 792, 795, 796, 797, 810, 813, 814, 817, 818], "detailed": [27, 129, 220, 378, 490, 588, 591, 602, 606, 608, 610, 611, 617, 640, 660, 661, 680, 683, 685, 700, 704, 715, 727, 736, 749, 756, 760, 766, 775, 786], "detailing": 662, "detect": [606, 626, 627, 632, 640, 646, 662, 701, 706, 715, 717, 719, 725, 727, 731, 747, 749, 755, 756, 761, 765, 766, 769, 781, 785, 789, 791, 811], "detect_leak": 717, "detected": [606, 612, 617, 629, 662, 700, 715, 717, 725, 727, 728, 749, 761], "detecthost": 794, "detecting": [591, 640, 700, 752], "detector": [715, 725, 727], "determin": [585, 586, 591, 594, 595, 598, 603, 608, 621, 622, 628, 640, 642, 659, 665, 666, 670, 673, 691, 692, 693, 707, 708, 709, 712, 714, 715, 720, 727, 729, 731, 733, 734, 736, 743, 746, 749, 750, 760, 762, 765, 768, 769, 770, 774, 775, 776, 781, 782, 783, 786, 788, 791, 792, 809, 810, 812, 813], "determined": [585, 586, 591, 598, 606, 617, 618, 665, 666, 670, 696, 707, 714, 715, 729, 731, 733, 738, 743, 749, 755, 760, 765, 766, 771, 780, 792], "determining": [585, 586, 591, 594, 608, 617, 707, 715, 765], "determinism": [606, 717, 730], "deterministic": [593, 594, 602, 604, 608, 622, 642, 654, 715, 717, 749, 774], "deterministicfiniteautomaton": 753, "detr": 753, "detrimental": 611, "dev": [595, 610, 618, 620, 664, 670, 671, 674, 678, 680, 682, 700, 706, 724, 728, 732, 747, 749, 751, 753, 755, 762, 765, 770, 772, 788, 790, 815, 817], "devbuff": 729, "devbufferb": 729, "devbufferc": 729, "devclang": 671, "devcount": 729, "devel": 758, "develop": [604, 606, 608, 609, 610, 664, 671, 673, 680, 681, 682, 683, 685, 687, 693, 701, 705, 715, 718, 725, 728, 751, 757, 760, 765, 772, 774, 776, 777, 780, 789], "developed": [598, 608, 670, 686, 714, 731, 745, 751, 757, 766, 771, 790], "developer": [586, 601, 606, 607, 610, 611, 664, 670, 671, 678, 682, 701, 707, 709, 715, 724, 745, 750, 751, 753, 755, 762, 765, 771, 772, 789], "developing": [661, 683, 685, 751, 770, 819], "development": [591, 604, 606, 607, 610, 642, 654, 663, 672, 678, 680, 683, 685, 702, 714, 717, 718, 725, 731, 752, 754, 759, 772, 793, 795, 796, 797, 814, 819], "deviat": [608, 611, 675], "devic": [586, 589, 591, 596, 623, 630, 633, 637, 659, 702, 729, 731], "device_enqueue_symbol": 591, "device_fn": 662, "device_only": 662, "devirtualiz": [715, 783], "devirtualized": 715, "devis": 750, "devised": 586, "devmajor": 729, "devmeeting": [695, 747], "devmeetingcommunity": 671, "devminor": 729, "devmtg": 671, "devoid": 608, "devproject": 671, "devruntim": 671, "devsubproject": 671, "dexonsmith": 765, "df": 667, "dfa": [608, 660, 753, 774], "dfapacketiz": 608, "dform_1": 608, "dfpreg": 786, "dfpregsclass": 786, "dfpregsregclass": 786, "dfpregsregisterclass": 786, "dgpu": 591, "dgwp_asan_default_opt": 700, "dh": 777, "di": [585, 586, 606, 631, 639, 645, 655, 685, 710, 765, 777, 796, 816], "di_index": 715, "diag": 660, "diagnos": [715, 785], "diagnosed": [629, 640], "diagnosing": [612, 640, 788], "diagnostic": [611, 612, 616, 617, 618, 629, 641, 660, 709, 715, 717, 725, 728, 749, 774, 777], "diagnosticinfooptimiz": 759, "diagnosticsemakind": 728, "diagram": [669, 694, 740, 785], "dialect": [660, 715, 723, 774], "dialog": 747, "diamond": 710, "dian": [697, 753], "dibasictyp": [710, 765], "dibuild": [765, 816], "dicing": 749, "dicompileun": [710, 765, 816], "dict": 717, "dictat": 585, "dictated": [585, 586, 611, 749, 764], "dictionary": [617, 715, 717, 774], "dictionary_fil": 717, "did": [585, 586, 591, 594, 611, 665, 670, 673, 679, 708, 715, 719, 727, 749, 751, 759, 788, 795, 811, 813, 814, 817], "didn": [608, 662, 668, 678, 679, 715, 727, 728, 749, 765, 766, 787, 788, 810, 814], "die_offset_bas": 765, "diego": 603, "diegotf": 603, "diexpress": [591, 710, 721, 765], "diff": [585, 586, 590, 597, 610, 611, 616, 631, 664, 670, 672, 680, 683, 714, 715, 728, 746, 747, 749, 751, 762, 770, 779, 781, 786], "differ": [14, 79, 172, 267, 333, 350, 430, 543, 587, 591, 602, 603, 640, 665, 669, 689, 693, 708, 714, 715, 727, 734, 746, 768, 781, 814], "different": [288, 306, 308, 586, 588, 589, 590, 591, 592, 593, 597, 598, 599, 600, 602, 606, 607, 608, 609, 610, 611, 612, 613, 617, 618, 620, 621, 622, 624, 626, 629, 631, 632, 639, 640, 642, 643, 645, 651, 652, 654, 655, 661, 663, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 678, 680, 683, 685, 686, 688, 689, 693, 694, 698, 704, 707, 708, 711, 712, 715, 717, 718, 719, 720, 721, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 743, 746, 747, 748, 749, 751, 753, 756, 757, 758, 759, 760, 761, 762, 765, 766, 768, 771, 772, 774, 776, 777, 779, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 811, 812, 814, 815, 816, 817], "differential": [610, 728, 747], "differentiat": 675, "differentiating": 715, "differently": [586, 643, 655, 673, 715, 765, 791, 796, 810], "differing": [594, 609, 715, 765], "difficult": [585, 586, 594, 595, 611, 661, 670, 673, 693, 694, 701, 705, 715, 718, 722, 731, 733, 749, 751, 752, 753, 765, 767, 775, 816], "difficulty": 601, "diffing": 746, "difil": [710, 765, 816], "diflagartificial": 715, "diflagfwddecl": 715, "diflagprototyped": [715, 765], "diflagpublic": 765, "diflagvector": 715, "difwddecl": 715, "dig": [641, 661, 715], "digit": [591, 612, 715, 725, 775], "diglobalvari": 765, "digress": 813, "dijkstr": 752, "dil": [675, 777], "dilexicalblock": 765, "diloc": [612, 710, 721, 765, 816], "dilocalvari": [710, 721, 765, 816], "dim": [0, 84, 715, 762], "dimens": [66, 157, 175, 254, 270, 418, 435, 530, 548, 589, 591, 715], "dimensional": [84, 175, 270, 435, 548, 589, 681, 729, 813], "dimentionality": 591, "diminish": 765, "dimitry": 762, "dindex": 786, "dinkumwar": 749, "dinod": [715, 765, 816], "dinstall_gwp_asan_stub": 700, "diplom": 755, "dir": [593, 606, 617, 626, 636, 679, 683, 703, 705, 706, 715, 717, 750, 758, 765, 779], "dir1": [591, 717], "dir2": [591, 717], "dir3": 591, "dir4": 591, "dir_to_mount": 596, "direct": [585, 586, 605, 606, 607, 611, 613, 617, 632, 640, 650, 660, 661, 665, 670, 673, 678, 679, 690, 694, 705, 710, 714, 726, 727, 728, 730, 732, 743, 749, 751, 757, 758, 765, 766, 770, 771, 775, 776, 777, 780, 782, 786, 788, 792, 814], "directed": [608, 609, 660, 667, 669, 716, 743, 749, 782, 786], "directedgraph": 669, "directing": 766, "directly": [107, 196, 301, 457, 571, 585, 586, 591, 595, 598, 606, 608, 610, 611, 616, 617, 624, 625, 632, 640, 655, 661, 665, 670, 673, 675, 678, 679, 680, 681, 683, 694, 696, 698, 699, 701, 703, 713, 714, 715, 721, 726, 729, 731, 733, 734, 736, 738, 746, 747, 749, 750, 751, 755, 759, 760, 765, 768, 770, 771, 772, 774, 775, 776, 777, 779, 786, 788, 789, 790, 791, 794, 795, 796, 797, 810, 811, 812, 813, 814], "director": [591, 606, 617, 626, 636, 643, 655, 670, 683, 686, 717, 721, 741, 750, 751, 771, 777, 779, 780, 781], "directory": [591, 593, 605, 606, 607, 608, 611, 615, 617, 622, 625, 626, 636, 640, 650, 655, 657, 660, 662, 666, 670, 678, 682, 685, 686, 699, 701, 704, 705, 706, 707, 710, 715, 717, 728, 736, 741, 744, 749, 750, 751, 753, 757, 758, 759, 765, 771, 772, 777, 778, 779, 780, 781, 786, 787, 788, 789, 816], "dirnam": 636, "dirty": [591, 736], "dis": [616, 623, 624, 643, 683, 781, 814], "disabl": [213, 371, 483, 591, 594, 596, 597, 602, 606, 611, 612, 613, 617, 618, 620, 626, 632, 640, 641, 642, 643, 654, 661, 683, 694, 699, 706, 709, 717, 726, 728, 733, 745, 749, 758, 761, 770, 779, 781, 782, 787, 789, 812, 816], "disable_assert": 745, "disable_nonforced": 782, "disable_sanitizer_instrument": [598, 715], "disabled": [589, 590, 591, 596, 606, 611, 617, 640, 665, 666, 680, 683, 707, 710, 715, 717, 726, 745, 749, 757, 758, 761, 772, 779, 781, 782, 785, 789, 812], "disableencoding": [776, 777], "disablelazycompil": 749, "disabling": [602, 606, 685, 715, 758, 761, 789], "disadvantag": [661, 711, 718, 719, 749], "disagre": [609, 610, 657, 670, 715, 762, 765], "disallow": [661, 715, 768, 770], "disallowed": 681, "disambiguat": [594, 678, 719, 726], "disambiguated": 726, "disambiguating": 688, "disappear": [676, 683, 765], "disappearing": 702, "disassembl": [605, 616, 643, 644, 660, 683, 685, 715, 717, 723], "disassembled": [605, 644, 647, 723], "disassembler": [608, 679, 723], "disassembleremitt": 774, "disassembling": [608, 643], "disassembly": [605, 643, 644, 647, 715, 749, 756], "discard": [585, 586, 603, 642, 654, 675, 715, 731, 755, 770, 797], "discarded": [585, 586, 590, 608, 612, 642, 654, 661, 665, 675, 683, 689, 715, 751], "discarding": [693, 715, 749], "discharge": 678, "discharged": 678, "disclaim": [607, 670], "disclos": 762, "disclosed": 762, "disclosing": [760, 762], "disclosur": [670, 760], "discontiguous": 740, "discop": 816, "discord": [601, 670, 671, 682], "discordinfr": 671, "discount": 730, "discourag": [601, 749, 760, 771], "discouraged": [611, 661, 670, 715, 749], "discours": [670, 682, 793], "discov": [586, 601, 608, 617, 632, 680, 717, 741, 765], "discover": [672, 717], "discovered": [617, 667, 707, 717, 772, 812, 814], "discovering": [617, 766, 771], "discrepancy": 657, "discret": 762, "discrimin": 791, "discriminat": [708, 715], "discriminated": [608, 791], "discriminator": [611, 655, 708, 715, 748, 774], "discriminatory": 609, "discuss": [585, 586, 610, 611, 661, 664, 670, 671, 682, 683, 684, 685, 703, 708, 710, 715, 724, 728, 731, 740, 743, 749, 751, 754, 760, 765, 766, 770, 788, 795, 796, 809], "discussed": [607, 609, 612, 640, 661, 665, 666, 670, 679, 687, 690, 703, 733, 736, 738, 747, 749, 760, 762, 763, 765, 766, 768, 786, 788, 789], "discussing": [670, 693, 762, 766, 818], "disjoint": [585, 586, 591, 594, 669, 689, 715, 719, 726], "disjointed": 785, "disk": [586, 591, 611, 617, 632, 668, 683, 685, 701, 714, 715, 717, 718, 736, 740, 741, 743, 751, 765, 771, 789, 794], "dislik": 670, "disp32": 608, "dispatch": [673, 715, 731, 749, 766, 768, 809], "dispatch1": 715, "dispatch2": [673, 715], "dispatched": [591, 640, 673, 715, 731, 749], "dispatching": 591, "dispatchwidth": 640, "dispel": 681, "dispflagdefinit": 765, "dispflagdeleted": 765, "dispflagelemental": 765, "dispflagpur": 765, "dispflagrecurs": 765, "displac": [585, 586, 608, 715, 776], "display": [607, 608, 609, 611, 615, 617, 622, 626, 627, 631, 632, 634, 636, 638, 641, 642, 643, 645, 646, 649, 650, 651, 653, 654, 661, 666, 670, 701, 708, 723, 746, 747, 765, 774, 779, 786, 808], "displayed": [624, 626, 638, 640, 643, 645, 646, 651, 746, 759], "displaying": [608, 626, 631, 640, 645, 649, 650, 780], "disponibl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "disposit": 670, "disproportionat": 765, "disregard": 762, "disrepair": 772, "disrupt": 722, "disrupting": 766, "dissassembler": 604, "dissect": 729, "dissected": 666, "dissemin": 762, "distanc": [643, 715, 749, 761, 792, 797], "distilled": 781, "distinct": [585, 586, 591, 594, 598, 608, 612, 628, 631, 669, 670, 673, 681, 688, 694, 700, 701, 710, 714, 715, 732, 746, 749, 755, 761, 765, 776, 781, 782, 786, 810], "distinctly": 688, "distinguish": [585, 586, 597, 602, 666, 670, 688, 696, 715, 719, 732, 749, 753, 770, 771, 817], "distinguished": [585, 586, 665, 688, 715, 732, 749], "distinguishing": 598, "distracting": 670, "distribu": [593, 599, 607, 613, 617, 640, 646, 662, 664, 668, 670, 672, 676, 682, 683, 684, 685, 705, 706, 715, 729, 759, 766, 777, 788, 789], "distribut": [604, 670, 676, 683, 751, 762, 782, 784, 788], "distributed": [599, 604, 611, 640, 670, 672, 683, 701, 715, 779, 782, 789], "distributionexampl": 604, "distributor": 762, "distringtyp": 765, "distros": [704, 706], "disturb": 772, "disubprogram": [710, 765, 816], "disubroutinetyp": [710, 765, 816], "dityp": 816, "div": [589, 608, 612, 689, 715, 808, 818], "divari": 715, "diverg": [681, 813], "divergent": [585, 591, 715, 733], "divers": [704, 772], "diversity": [585, 748], "divid": [591, 608, 612, 617, 662, 674, 715, 746, 771, 772, 785], "divided": [585, 586, 599, 608, 612, 646, 665, 715, 744, 775, 779], "dividend": [608, 662, 715], "dividing": [591, 624, 640], "diving": 708, "divis": [590, 591, 608, 689, 715, 813], "divisibl": 715, "divisionbyzero": 715, "divisor": [662, 715], "django": [609, 760], "dl": [608, 731, 752, 777, 794, 795, 796, 797], "dlc": [0, 591], "dlclos": [717, 731], "dlibcxx_cxx_ab": 703, "dlibcxx_cxx_abi_include_path": 703, "dlibcxx_cxx_abi_library_path": 703, "dlibcxx_enable_shared": 703, "dlibcxx_enable_static": 703, "dlibcxx_enable_static_abi_library": 703, "dlibcxx_has_win32_thread_ap": 703, "dlibcxx_install_header": 703, "dlibcxx_no_vcruntim": 703, "dlibcxx_use_compiler_rt": 703, "dlibcxxabi_enable_shared": 703, "dlibcxxabi_enable_static": 703, "dlibcxxabi_libcxx_includ": 703, "dlibunwind_enable_shared": 703, "dlibunwind_enable_static": 703, "dlibunwind_use_compiler_rt": 703, "dll": [598, 673, 685, 703, 731, 736, 757, 781], "dllc": [710, 781], "dllexport": [598, 703, 715, 811, 812, 813, 814, 815, 816], "dllexported": 715, "dllimport": [598, 703, 715], "dllstorageclass": [598, 715], "dllvm_binutils_incd": 699, "dllvm_build_instrumented": 704, "dllvm_build_runtim": [679, 683, 704], "dllvm_build_static": 596, "dllvm_config_path": 705, "dllvm_default_target_tripl": 706, "dllvm_dir": 606, "dllvm_enable_assert": [664, 683, 702, 781], "dllvm_enable_backtrac": 683, "dllvm_enable_doxygen": 606, "dllvm_enable_doxygen_qt_help": 606, "dllvm_enable_new_pass_manag": 730, "dllvm_enable_pic": 706, "dllvm_enable_project": [606, 683, 685, 728, 751], "dllvm_enable_runtim": [606, 683], "dllvm_enable_sphinx": [683, 767], "dllvm_experimental_targets_to_build": 786, "dllvm_external_bar_source_d": 606, "dllvm_external_foo_source_d": 606, "dllvm_external_project": 606, "dllvm_include_exampl": 683, "dllvm_include_test": 683, "dllvm_integrated_crt_alloc": 606, "dllvm_libdir_suffix": 606, "dllvm_local_rpath": 683, "dllvm_optimized_tablegen": 683, "dllvm_parallel_link_job": [606, 683], "dllvm_path": 703, "dllvm_profdata_fil": 704, "dllvm_tablegen": [704, 706], "dllvm_target_arch": 706, "dllvm_targets_to_build": [606, 672, 683, 685, 702, 706], "dllvm_use_crt_releas": 606, "dllvm_use_link": [606, 683], "dllvm_use_sanitiz": 679, "dllvm_use_sanitize_coverag": 679, "dllvm_use_split_dwarf": 683, "dloc": 612, "dlopen": 731, "dlsgorerr": 731, "dlsym": 811, "dmacro1": 776, "dmacro3": 776, "dmask": [0, 2, 3, 4, 9, 96, 97, 98, 99, 113, 114, 186, 187, 188, 202, 286, 287, 288, 289, 307, 308, 447, 448, 449, 450, 469, 470, 560, 561, 562, 563, 577, 578], "dmb": 595, "dmlc": 752, "dmpqrstx": 622, "dnam": 661, "do": [288, 306, 308, 585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 601, 604, 605, 606, 607, 608, 609, 610, 612, 613, 615, 616, 617, 622, 623, 626, 627, 629, 632, 634, 636, 640, 641, 642, 643, 646, 649, 650, 654, 655, 657, 660, 661, 662, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 683, 685, 686, 687, 688, 689, 690, 692, 693, 694, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 711, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 743, 747, 748, 749, 750, 751, 752, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 774, 775, 776, 777, 779, 780, 781, 782, 785, 786, 787, 789, 790, 791, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "do_on": 665, "do_safepoint": 770, "do_something": 719, "do_something_with_t": 677, "do_two": 665, "doc": [592, 606, 660, 666, 671, 674, 682, 683, 686, 701, 704, 705, 706, 707, 715, 717, 722, 728, 751, 753, 754, 757, 767, 779, 792, 794, 815], "dockerfil": [685, 784], "dockerized": 672, "doclist": 792, "docsobsolet": 671, "docu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 586, 588, 589, 590, 591, 594, 595, 597, 598, 599, 603, 604, 606, 607, 608, 609, 611, 616, 632, 660, 661, 662, 666, 670, 671, 673, 674, 675, 680, 681, 683, 685, 686, 687, 688, 698, 701, 702, 703, 705, 706, 707, 708, 709, 710, 712, 714, 715, 716, 718, 720, 721, 722, 725, 726, 728, 729, 731, 734, 735, 738, 740, 743, 745, 746, 749, 756, 757, 758, 760, 762, 765, 767, 768, 770, 771, 772, 775, 776, 781, 783, 784, 786, 787, 788, 789, 790, 791, 811], "document": [589, 595, 601, 604, 606, 607, 643, 660, 663, 664, 666, 670, 671, 672, 674, 679, 680, 682, 683, 685, 689, 690, 701, 703, 704, 708, 715, 717, 721, 729, 730, 749, 751, 752, 753, 756, 757, 765, 770, 773, 774, 775, 778, 779, 781, 784, 788, 810, 811, 816], "documented": [591, 601, 603, 604, 611, 669, 670, 680, 682, 683, 685, 715, 716, 751, 765, 768, 770], "documenting": [611, 670, 767, 774], "documentlist": 792, "documentlisttrait": 792, "dodging": 612, "doesn": [591, 594, 595, 597, 600, 601, 602, 603, 607, 608, 609, 611, 612, 617, 622, 640, 657, 661, 662, 664, 666, 670, 672, 673, 676, 678, 680, 681, 683, 686, 689, 692, 693, 696, 699, 701, 703, 708, 709, 715, 719, 721, 726, 728, 732, 738, 749, 751, 753, 762, 765, 766, 768, 770, 771, 772, 781, 788, 790, 792, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "dofinaliz": 786, "dog": [661, 753], "doing": [585, 593, 594, 606, 608, 610, 611, 612, 620, 632, 637, 659, 661, 664, 670, 674, 677, 678, 680, 683, 691, 704, 705, 708, 710, 715, 718, 719, 726, 749, 760, 765, 766, 770, 771, 776, 782, 788, 789, 790, 795, 796, 808, 810, 811, 813, 816, 817], "doinitializ": [717, 786, 795, 796, 797, 811, 812, 813, 814, 816], "dollar": [702, 776], "domain": [591, 608, 680, 688, 715, 766, 776, 777, 786, 817], "domin": [719, 726, 814], "dominat": [633, 667, 680, 701, 715, 719, 726], "dominated": [667, 715, 719, 746, 779], "dominating": [719, 726], "dominator": [662, 667, 730, 749, 787, 788], "dominatoranalys": 730, "dominatorset": 788, "dominatortre": [730, 753, 788], "dominatortreebas": 749, "domtreeupdat": 730, "don": [0, 2, 3, 4, 585, 586, 591, 592, 594, 595, 596, 601, 602, 603, 604, 606, 607, 608, 609, 612, 615, 617, 620, 632, 640, 641, 645, 655, 657, 659, 661, 662, 664, 666, 670, 672, 673, 674, 678, 680, 683, 686, 689, 691, 693, 700, 701, 702, 703, 704, 707, 708, 709, 712, 714, 715, 717, 718, 719, 720, 721, 722, 726, 727, 728, 729, 730, 731, 734, 745, 746, 747, 749, 751, 758, 760, 761, 762, 764, 765, 767, 769, 770, 772, 774, 776, 779, 780, 781, 783, 785, 787, 788, 789, 791, 792, 794, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "donald": 776, "dontcall": 715, "dooneiter": 602, "door": 708, "doorbel": 591, "dootherthing": 611, "dopartialredundancyelimin": 661, "dor": [755, 785], "dosomething": [611, 766], "dosomethinginterestingwithmyap": 717, "dot": [640, 671, 707, 715, 747, 749, 765, 789, 790], "doubl": [590, 591, 598, 600, 608, 612, 661, 662, 663, 685, 688, 708, 715, 721, 727, 749, 757, 761, 774, 786, 792, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "doublescalarty": 715, "doubletyp": 749, "doubleword": 715, "doubling": 746, "doubly": [607, 749, 764], "doubt": [708, 722, 728, 767, 772], "dovetail": 814, "down": [595, 597, 600, 602, 608, 609, 613, 618, 620, 661, 666, 670, 673, 681, 683, 694, 696, 708, 709, 715, 717, 726, 727, 728, 730, 733, 745, 746, 747, 749, 751, 755, 765, 777, 780, 786, 788, 789, 793, 794, 796, 809, 812, 813, 815, 816, 817, 818], "downcast": 708, "downgraded": 772, "download": [606, 670, 672, 683, 685, 699, 701, 705, 706, 707, 715, 717, 728, 749, 758, 781], "download_link": 752, "download_prerequisit": 683, "downloaded": [685, 757, 786], "downsid": [670, 717, 749], "downstream": [599, 610, 629, 670, 751, 772], "downward": 715, "doxgyen": 606, "doxing": 609, "doxygen": [606, 679, 683, 685, 708, 749, 756, 775], "dozen": [678, 702, 749], "dpp": 588, "dpp16": 589, "dpp16_ctrl": [0, 1], "dpp32_ctrl": 9, "dpp64_ctrl": 9, "dpp8_sel": [0, 1], "dpp_ctrl": [3, 4, 7, 8], "dpp_op_sel": 0, "dr": [585, 586, 675], "draft": [595, 603, 609, 689, 715, 728, 747, 760, 765], "dragging": 747, "dragonegg": [608, 670], "dragonflybsd": 683, "dram": 591, "dramatic": 766, "dramatically": [611, 618, 661, 683, 715, 749, 766, 811], "drastically": 771, "draw": [591, 639], "drawback": [607, 661, 670, 749, 797], "drawindex": 591, "drectv": 650, "driv": [591, 604, 606, 626, 662, 663, 685, 699, 702, 703, 705, 706, 717, 718, 729, 733, 750, 755, 762, 781, 808, 811, 812, 813, 814, 815, 816], "driven": [608, 612, 661, 665, 746, 781, 786, 811, 814, 817], "driving": [755, 762, 770], "drop": [611, 616, 634, 636, 642, 651, 653, 654, 670, 715, 721, 731, 747], "dropdown": 747, "droploc": 710, "dropped": [646, 670, 714, 715, 721, 749, 765, 782], "dropping": [670, 710, 715], "drowned": 780, "dry": [704, 753], "ds": 591, "ds_add_f32": [0, 3, 4, 9], "ds_add_f64": 9, "ds_add_rtn_f32": [0, 3, 4, 9], "ds_add_rtn_f64": 9, "ds_add_rtn_u32": [0, 2, 3, 4, 9], "ds_add_rtn_u64": [0, 2, 3, 4, 9], "ds_add_src2_f32": [0, 3, 4], "ds_add_src2_u32": [0, 2, 3, 4], "ds_add_src2_u64": [0, 2, 3, 4], "ds_add_u32": [0, 2, 3, 4, 9, 591], "ds_add_u64": [0, 2, 3, 4, 9], "ds_and_b32": [0, 2, 3, 4, 9], "ds_and_b64": [0, 2, 3, 4, 9], "ds_and_rtn_b32": [0, 2, 3, 4, 9], "ds_and_rtn_b64": [0, 2, 3, 4, 9], "ds_and_src2_b32": [0, 2, 3, 4], "ds_and_src2_b64": [0, 2, 3, 4], "ds_append": [0, 2, 3, 4, 9], "ds_atomic": 591, "ds_bpermute_b32": [0, 3, 4, 9], "ds_cmpst_b32": [0, 2, 3, 4, 9], "ds_cmpst_b64": [0, 2, 3, 4, 9], "ds_cmpst_f32": [0, 2, 3, 4, 9, 591], "ds_cmpst_f64": [0, 2, 3, 4, 9], "ds_cmpst_rtn_b32": [0, 2, 3, 4, 9], "ds_cmpst_rtn_b64": [0, 2, 3, 4, 9], "ds_cmpst_rtn_f32": [0, 2, 3, 4, 9], "ds_cmpst_rtn_f64": [0, 2, 3, 4, 9], "ds_condxchg32_rtn_b64": [0, 2, 3, 4, 9], "ds_consum": [0, 2, 3, 4, 9], "ds_dec_rtn_u32": [0, 2, 3, 4, 9], "ds_dec_rtn_u64": [0, 2, 3, 4, 9], "ds_dec_src2_u32": [0, 2, 3, 4], "ds_dec_src2_u64": [0, 2, 3, 4], "ds_dec_u32": [0, 2, 3, 4, 9], "ds_dec_u64": [0, 2, 3, 4, 9], "ds_gws_barri": [0, 2, 3, 4, 9], "ds_gws_in": [0, 2, 3, 4, 9], "ds_gws_sema_br": [0, 2, 3, 4, 9], "ds_gws_sema_p": [0, 2, 3, 4, 9], "ds_gws_sema_release_all": [0, 2, 3, 4, 9], "ds_gws_sema_v": [0, 2, 3, 4, 9], "ds_inc_rtn_u32": [0, 2, 3, 4, 9], "ds_inc_rtn_u64": [0, 2, 3, 4, 9], "ds_inc_src2_u32": [0, 2, 3, 4], "ds_inc_src2_u64": [0, 2, 3, 4], "ds_inc_u32": [0, 2, 3, 4, 9], "ds_inc_u64": [0, 2, 3, 4, 9], "ds_load": 591, "ds_max_f32": [0, 2, 3, 4, 9], "ds_max_f64": [0, 2, 3, 4, 9], "ds_max_i32": [0, 2, 3, 4, 9], "ds_max_i64": [0, 2, 3, 4, 9], "ds_max_rtn_f32": [0, 2, 3, 4, 9], "ds_max_rtn_f64": [0, 2, 3, 4, 9], "ds_max_rtn_i32": [0, 2, 3, 4, 9], "ds_max_rtn_i64": [0, 2, 3, 4, 9], "ds_max_rtn_u32": [0, 2, 3, 4, 9], "ds_max_rtn_u64": [0, 2, 3, 4, 9], "ds_max_src2_f32": [0, 2, 3, 4], "ds_max_src2_f64": [0, 2, 3, 4], "ds_max_src2_i32": [0, 2, 3, 4], "ds_max_src2_i64": [0, 2, 3, 4], "ds_max_src2_u32": [0, 2, 3, 4], "ds_max_src2_u64": [0, 2, 3, 4], "ds_max_u32": [0, 2, 3, 4, 9], "ds_max_u64": [0, 2, 3, 4, 9], "ds_min_f32": [0, 2, 3, 4, 9], "ds_min_f64": [0, 2, 3, 4, 9], "ds_min_i32": [0, 2, 3, 4, 9], "ds_min_i64": [0, 2, 3, 4, 9], "ds_min_rtn_f32": [0, 2, 3, 4, 9], "ds_min_rtn_f64": [0, 2, 3, 4, 9, 591], "ds_min_rtn_i32": [0, 2, 3, 4, 9], "ds_min_rtn_i64": [0, 2, 3, 4, 9], "ds_min_rtn_u32": [0, 2, 3, 4, 9], "ds_min_rtn_u64": [0, 2, 3, 4, 9], "ds_min_src2_f32": [0, 2, 3, 4], "ds_min_src2_f64": [0, 2, 3, 4], "ds_min_src2_i32": [0, 2, 3, 4], "ds_min_src2_i64": [0, 2, 3, 4], "ds_min_src2_u32": [0, 2, 3, 4], "ds_min_src2_u64": [0, 2, 3, 4], "ds_min_u32": [0, 2, 3, 4, 9], "ds_min_u64": [0, 2, 3, 4, 9], "ds_mskor_b32": [0, 2, 3, 4, 9], "ds_mskor_b64": [0, 2, 3, 4, 9], "ds_mskor_rtn_b32": [0, 2, 3, 4, 9], "ds_mskor_rtn_b64": [0, 2, 3, 4, 9], "ds_nop": [0, 2, 3, 4, 9], "ds_or_b32": [0, 2, 3, 4, 9], "ds_or_b64": [0, 2, 3, 4, 9], "ds_or_rtn_b32": [0, 2, 3, 4, 9], "ds_or_rtn_b64": [0, 2, 3, 4, 9], "ds_or_src2_b32": [0, 2, 3, 4], "ds_or_src2_b64": [0, 2, 3, 4], "ds_ordered_count": [0, 2, 3, 4], "ds_permute_b32": [0, 3, 4, 9], "ds_read2_b32": [0, 2, 3, 4, 9], "ds_read2_b64": [0, 2, 3, 4, 9], "ds_read2st64_b32": [0, 2, 3, 4, 9], "ds_read2st64_b64": [0, 2, 3, 4, 9], "ds_read_addtid_b32": [0, 4, 9], "ds_read_b128": [0, 2, 3, 4, 9], "ds_read_b32": [0, 2, 3, 4, 9], "ds_read_b64": [0, 2, 3, 4, 9], "ds_read_b96": [0, 2, 3, 4, 9], "ds_read_i16": [0, 2, 3, 4, 9], "ds_read_i8": [0, 2, 3, 4, 9], "ds_read_i8_d16": [0, 4, 9], "ds_read_i8_d16_h": [0, 4, 9], "ds_read_u16": [0, 2, 3, 4, 9], "ds_read_u16_d16": [0, 4, 9], "ds_read_u16_d16_h": [0, 4, 9], "ds_read_u8": [0, 2, 3, 4, 9], "ds_read_u8_d16": [0, 4, 9], "ds_read_u8_d16_h": [0, 4, 9], "ds_rsub_rtn_u32": [0, 2, 3, 4, 9], "ds_rsub_rtn_u64": [0, 2, 3, 4, 9], "ds_rsub_src2_u32": [0, 2, 3, 4], "ds_rsub_src2_u64": [0, 2, 3, 4], "ds_rsub_u32": [0, 2, 3, 4, 9], "ds_rsub_u64": [0, 2, 3, 4, 9], "ds_stor": 591, "ds_sub_rtn_u32": [0, 2, 3, 4, 9], "ds_sub_rtn_u64": [0, 2, 3, 4, 9], "ds_sub_src2_u32": [0, 2, 3, 4], "ds_sub_src2_u64": [0, 2, 3, 4], "ds_sub_u32": [0, 2, 3, 4, 9], "ds_sub_u64": [0, 2, 3, 4, 9], "ds_swizzle_b32": [0, 2, 3, 4, 9, 589], "ds_wrap_rtn_b32": [0, 2, 3, 4, 9], "ds_write2_b32": [0, 2, 3, 4, 9], "ds_write2_b64": [0, 2, 3, 4, 9], "ds_write2st64_b32": [0, 2, 3, 4, 9], "ds_write2st64_b64": [0, 2, 3, 4, 9], "ds_write_addtid_b32": [0, 4, 9], "ds_write_b128": [0, 2, 3, 4, 9], "ds_write_b16": [0, 2, 3, 4, 9], "ds_write_b16_d16_h": [0, 4, 9], "ds_write_b32": [0, 2, 3, 4, 9], "ds_write_b64": [0, 2, 3, 4, 9], "ds_write_b8": [0, 2, 3, 4, 9], "ds_write_b8_d16_h": [0, 4, 9], "ds_write_b96": [0, 2, 3, 4, 9], "ds_write_src2_b32": [0, 2, 3, 4], "ds_write_src2_b64": [0, 2, 3, 4, 591], "ds_wrxchg2_rtn_b32": [0, 2, 3, 4, 9], "ds_wrxchg2_rtn_b64": [0, 2, 3, 4, 9], "ds_wrxchg2st64_rtn_b32": [0, 2, 3, 4, 9], "ds_wrxchg2st64_rtn_b64": [0, 2, 3, 4, 9], "ds_wrxchg_rtn_b32": [0, 2, 3, 4, 9], "ds_wrxchg_rtn_b64": [0, 2, 3, 4, 9], "ds_xor_b32": [0, 2, 3, 4, 9], "ds_xor_b64": [0, 2, 3, 4, 9], "ds_xor_rtn_b32": [0, 2, 3, 4, 9], "ds_xor_rtn_b64": [0, 2, 3, 4, 9], "ds_xor_src2_b32": [0, 2, 3, 4], "ds_xor_src2_b64": [0, 2, 3, 4], "dsa": 716, "dsc": 790, "dse": [595, 716, 726], "dsl": 777, "dso": 605, "dso_local": [598, 715, 765], "dso_local_equivalent": 715, "dso_path": 618, "dso_preempt": [598, 715], "dsolocal": 715, "dsos": 595, "dsp": 586, "dst": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 213, 371, 483, 587, 608, 689, 712, 776, 777, 786], "dst0": [0, 2, 3, 4, 9], "dst1": [0, 2, 3, 4, 9], "dst_sel": [0, 3, 4, 7, 8, 9, 591], "dst_unused": [0, 3, 4, 7, 8, 9, 591], "dstindex": 786, "dstkey": 714, "dsym": [606, 615, 631, 643, 646, 655], "dsymtab": 650, "dsymutil": [616, 631], "dt": [650, 753, 788], "dtest_suite_profile_generat": 779, "dtest_suite_profile_us": 779, "dtest_suite_run_typ": 779, "dtest_suite_subdir": 779, "dtor": [676, 715, 765], "dtrac": 604, "dual": 714, "duck": 749, "due": [84, 585, 586, 590, 591, 594, 600, 603, 605, 606, 608, 612, 662, 665, 668, 670, 673, 677, 678, 680, 683, 686, 689, 701, 702, 705, 709, 715, 718, 721, 726, 727, 730, 732, 741, 749, 751, 758, 761, 766, 770, 776, 782, 783, 791, 796, 810], "dumb": 817, "dummy": [608, 666, 676, 721, 746, 781, 786], "dummy_main": 679, "dummytargetmachin": 786, "dump": [591, 598, 602, 608, 612, 615, 616, 624, 626, 632, 641, 642, 646, 649, 650, 657, 660, 709, 714, 731, 736, 749, 757, 765, 774, 777, 788, 792, 810, 811, 812, 816], "dumpabl": 788, "dumpattr": 774, "dumped": [631, 645, 646], "dumping": [616, 631, 642, 643, 645, 700, 714, 765], "dumpmymapdoc": 792, "duo": 591, "duplicat": [585, 586, 594, 601, 606, 608, 611, 612, 622, 632, 661, 666, 675, 701, 714, 715, 716, 727, 731, 741, 747, 749, 765, 770], "duplicated": [604, 665, 678, 715, 765, 809], "duplicating": [665, 678, 715, 746, 770, 785], "dupliqu": [585, 604, 607, 650, 670, 710, 715, 718, 744, 765, 774, 777], "durat": [586, 594, 608, 765, 788, 789, 791, 794], "during": [585, 586, 591, 593, 599, 600, 602, 606, 607, 608, 610, 632, 640, 646, 661, 662, 664, 665, 670, 672, 673, 674, 677, 678, 682, 683, 685, 690, 700, 701, 704, 707, 712, 714, 715, 717, 718, 719, 727, 732, 733, 736, 747, 749, 751, 752, 755, 757, 758, 759, 766, 768, 770, 780, 781, 786, 792, 810], "dvariabl": 606, "dw": 585, "dw_addr_amdgpu_region": 591, "dw_addr_llvm_const": [586, 591], "dw_addr_llvm_generic": 586, "dw_addr_llvm_global": [586, 591], "dw_addr_llvm_group": [586, 591], "dw_addr_llvm_hi_us": 586, "dw_addr_llvm_lo_us": 586, "dw_addr_llvm_privat": [586, 591], "dw_addr_non": [586, 591], "dw_apple_property_assign": 765, "dw_apple_property_atomic": 765, "dw_apple_property_class": 765, "dw_apple_property_copy": 765, "dw_apple_property_get": 765, "dw_apple_property_nonatomic": 765, "dw_apple_property_null_reset": 765, "dw_apple_property_nullability": 765, "dw_apple_property_readonly": 765, "dw_apple_property_readwrit": 765, "dw_apple_property_retain": 765, "dw_apple_property_set": 765, "dw_apple_property_strong": 765, "dw_apple_property_unsafe_unretained": 765, "dw_apple_property_weak": 765, "dw_aspace_": [585, 586], "dw_aspace_amdgpu_generic": 591, "dw_aspace_amdgpu_local": 591, "dw_aspace_amdgpu_private_lan": 591, "dw_aspace_amdgpu_private_wav": 591, "dw_aspace_amdgpu_region": 591, "dw_aspace_non": [585, 586, 591], "dw_at_addr_bas": [585, 586], "dw_at_address_class": [586, 591], "dw_at_address_spac": 586, "dw_at_alignment": 765, "dw_at_apple_property": 765, "dw_at_apple_property_attribut": 765, "dw_at_apple_property_get": 765, "dw_at_apple_property_set": 765, "dw_at_artificial": 765, "dw_at_byte_siz": 591, "dw_at_call_data_loc": [585, 586], "dw_at_call_data_valu": [585, 586], "dw_at_call_site_parameter_valu": 715, "dw_at_call_valu": [585, 586], "dw_at_const_valu": [585, 586], "dw_at_data_loc": [585, 586], "dw_at_data_member_loc": [585, 586], "dw_at_decl_lin": 765, "dw_at_declar": 765, "dw_at_deleted": 765, "dw_at_elemental": 765, "dw_at_encoding": 591, "dw_at_entry_pc": 765, "dw_at_export_symbol": 715, "dw_at_frame_bas": [585, 586, 591], "dw_at_high_pc": 765, "dw_at_languag": 586, "dw_at_llvm_active_lan": 586, "dw_at_llvm_address_spac": 586, "dw_at_llvm_augment": 586, "dw_at_llvm_iter": 586, "dw_at_llvm_lan": 586, "dw_at_llvm_lane_pc": 586, "dw_at_llvm_proc": 586, "dw_at_llvm_vector_siz": 586, "dw_at_loc": [585, 586, 591, 612, 765], "dw_at_loclists_bas": [585, 586], "dw_at_low_pc": 765, "dw_at_mips_linkage_nam": 765, "dw_at_nam": [591, 612, 631, 765], "dw_at_proc": 585, "dw_at_rang": 765, "dw_at_return_addr": [585, 586], "dw_at_static_link": [585, 586], "dw_at_string_length": 765, "dw_at_typ": 765, "dw_at_use_loc": [585, 586], "dw_at_vtable_elem_loc": [585, 586], "dw_ate_address": [585, 586, 715], "dw_ate_boolean": [585, 586, 715], "dw_ate_float": [715, 816], "dw_ate_hi_us": [585, 586], "dw_ate_lo_us": [585, 586], "dw_ate_signed": [585, 586, 715, 765], "dw_ate_signed_char": [585, 586, 715], "dw_ate_unsigned": [585, 586, 591, 710, 715], "dw_ate_unsigned_char": [585, 586, 715], "dw_cfa_aspace_def_cf": 586, "dw_cfa_def_cf": [585, 586], "dw_cfa_def_cfa_express": [585, 586], "dw_cfa_def_cfa_offset": [585, 586], "dw_cfa_def_cfa_offset_sf": [585, 586], "dw_cfa_def_cfa_regist": [585, 586], "dw_cfa_def_cfa_sf": [585, 586], "dw_cfa_express": [585, 586], "dw_cfa_llvm_def_aspace_cf": 586, "dw_cfa_llvm_def_aspace_cfa_sf": 586, "dw_cfa_nop": [585, 586], "dw_cfa_offset": [585, 586], "dw_cfa_offset_extended": [585, 586], "dw_cfa_offset_extended_sf": [585, 586], "dw_cfa_offset_extended_uf": [585, 586], "dw_cfa_offset_uf": [585, 586], "dw_cfa_regist": [585, 586], "dw_cfa_restor": [585, 586], "dw_cfa_restore_extended": [585, 586], "dw_cfa_same_valu": [585, 586], "dw_cfa_undefined": [585, 586], "dw_cfa_val_express": [585, 586], "dw_cfa_val_offset": [585, 586], "dw_cfa_val_offset_sf": [585, 586], "dw_cfa_val_offset_uf": [585, 586], "dw_form_": 765, "dw_form_addr": 765, "dw_form_block": [585, 586], "dw_form_data1": 765, "dw_form_data2": 765, "dw_form_data4": 765, "dw_form_exprloc": [585, 586], "dw_form_flag_present": 765, "dw_form_ref1": 765, "dw_form_ref2": [585, 586, 765], "dw_form_ref4": [585, 586, 765], "dw_form_ref8": 765, "dw_form_ref_addr": [585, 586], "dw_form_ref_udat": 765, "dw_form_sec_offset": 612, "dw_form_strp": [612, 765], "dw_form_strx1": 765, "dw_form_udat": 586, "dw_form_xxx": 765, "dw_lang_c": [710, 816], "dw_lang_c99": [715, 765], "dw_lang_llvm_hip": 586, "dw_lnct_llvm_is_md5": 586, "dw_lnct_llvm_sourc": [586, 591], "dw_lnct_md5": 586, "dw_lnct_path": 586, "dw_macinfo_defin": 715, "dw_macinfo_start_fil": 715, "dw_macinfo_undef": 715, "dw_op_": [585, 586], "dw_op_add": 586, "dw_op_addr": [585, 586, 591, 765], "dw_op_addrx": [585, 586, 591], "dw_op_arg": [585, 586], "dw_op_aspace_bref31": 586, "dw_op_aspace_breg0": 586, "dw_op_aspace_breg1": 586, "dw_op_aspace_bregx": 586, "dw_op_bit_offset": 585, "dw_op_bit_piec": [585, 586, 715], "dw_op_br": [585, 586], "dw_op_breg": [585, 586, 715], "dw_op_breg0": [585, 586], "dw_op_breg1": [585, 586], "dw_op_breg31": [585, 586], "dw_op_bregx": [585, 586, 715], "dw_op_call": [585, 586], "dw_op_call2": [585, 586], "dw_op_call4": [585, 586], "dw_op_call_frame_cf": [585, 586], "dw_op_call_ref": [585, 586, 591], "dw_op_const": [585, 586], "dw_op_const1": [585, 586], "dw_op_const1u": [585, 586], "dw_op_const2": [585, 586], "dw_op_const2u": [585, 586], "dw_op_const4": [585, 586], "dw_op_const4u": [585, 586], "dw_op_const8": [585, 586], "dw_op_const8u": [585, 586], "dw_op_const_typ": [585, 586], "dw_op_constu": [585, 586, 715], "dw_op_constx": [585, 586], "dw_op_convert": [585, 586, 715], "dw_op_deref": [585, 586, 715], "dw_op_deref_siz": [585, 586], "dw_op_deref_typ": [585, 586, 591], "dw_op_drop": [585, 586], "dw_op_dup": [585, 586], "dw_op_entry_valu": [585, 586, 715], "dw_op_eq": [585, 586], "dw_op_fbreg": [585, 586, 765], "dw_op_form_aspace_address": 585, "dw_op_form_tls_address": [585, 586], "dw_op_g": [585, 586], "dw_op_gt": [585, 586], "dw_op_implic": [585, 586], "dw_op_implicit_point": [585, 586, 715], "dw_op_implicit_valu": [585, 586], "dw_op_l": [585, 586], "dw_op_lit0": [585, 586], "dw_op_lit1": [585, 586], "dw_op_lit31": [585, 586], "dw_op_llvm_": 586, "dw_op_llvm_arg": [715, 765], "dw_op_llvm_aspace_bregx": 586, "dw_op_llvm_aspace_implicit_point": 586, "dw_op_llvm_bit_offset": 586, "dw_op_llvm_bit_overlay": 586, "dw_op_llvm_call_frame_entry_reg": 586, "dw_op_llvm_convert": 715, "dw_op_llvm_entry_valu": 715, "dw_op_llvm_extend": [586, 591], "dw_op_llvm_form_aspace_address": [586, 591], "dw_op_llvm_fragment": 715, "dw_op_llvm_implicit_aspace_point": 586, "dw_op_llvm_implicit_point": 715, "dw_op_llvm_offset": [586, 591], "dw_op_llvm_offset_constu": 586, "dw_op_llvm_offset_uconst": 586, "dw_op_llvm_overlay": 586, "dw_op_llvm_piece_end": 586, "dw_op_llvm_push_iter": 586, "dw_op_llvm_push_lan": [586, 591], "dw_op_llvm_select_bit_piec": [586, 591], "dw_op_llvm_tag_offset": 715, "dw_op_llvm_undefined": [586, 591], "dw_op_lt": [585, 586], "dw_op_minus": [586, 715], "dw_op_mul": 585, "dw_op_n": [585, 586], "dw_op_nop": [585, 586], "dw_op_offset": 585, "dw_op_offset_uconst": 585, "dw_op_ov": [585, 586, 715], "dw_op_pick": [585, 586], "dw_op_piec": [585, 586], "dw_op_piece_end": 585, "dw_op_plus": [586, 715, 765], "dw_op_plus_uconst": [585, 586, 715, 765], "dw_op_push_lan": 585, "dw_op_push_object2_address": [585, 586], "dw_op_push_object_address": [585, 586, 715], "dw_op_reg": [585, 586], "dw_op_reg0": [585, 586], "dw_op_reg1": [585, 586], "dw_op_reg31": [585, 586], "dw_op_regval_typ": [585, 586, 591], "dw_op_regx": [585, 586, 591], "dw_op_reinterpret": [585, 586], "dw_op_rot": [585, 586], "dw_op_skip": [585, 586], "dw_op_stack_valu": [585, 586, 591, 715, 765], "dw_op_swap": [585, 586, 715], "dw_op_uconst": 585, "dw_op_xderef": [585, 586, 715], "dw_op_xderef_siz": [585, 586], "dw_op_xderef_typ": [585, 586], "dw_tag": 765, "dw_tag_apple_property": 765, "dw_tag_array_typ": [715, 765], "dw_tag_atomic_typ": [715, 765], "dw_tag_base_typ": [585, 586, 591, 715, 765], "dw_tag_call_site_paramet": [585, 586], "dw_tag_class_typ": [715, 765], "dw_tag_compile_un": 586, "dw_tag_const_typ": [715, 765], "dw_tag_dwarf_procedur": [585, 586, 591], "dw_tag_entry_point": [585, 586], "dw_tag_enumeration_typ": [715, 765], "dw_tag_file_typ": 765, "dw_tag_formal_paramet": [585, 586], "dw_tag_friend": 715, "dw_tag_gnu_template_param_pack": 715, "dw_tag_gnu_template_template_param": 715, "dw_tag_immutable_typ": [715, 765], "dw_tag_imported_declar": 715, "dw_tag_imported_modul": 715, "dw_tag_inherit": 715, "dw_tag_inlined_subroutin": [585, 586, 765], "dw_tag_interface_typ": 765, "dw_tag_label": 765, "dw_tag_llvm_address_class_typ": 586, "dw_tag_memb": [715, 765], "dw_tag_namelist": 765, "dw_tag_namespac": 765, "dw_tag_packed_typ": 765, "dw_tag_pointer_typ": [715, 765], "dw_tag_ptr_to_member_typ": [585, 586, 715, 765], "dw_tag_reference_typ": [715, 765], "dw_tag_restrict_typ": [715, 765], "dw_tag_set_typ": 765, "dw_tag_shared_typ": 765, "dw_tag_string_typ": 765, "dw_tag_structure_typ": [715, 765], "dw_tag_subprogram": [585, 586, 765], "dw_tag_subrange_typ": 765, "dw_tag_subroutine_typ": 765, "dw_tag_template_value_paramet": 715, "dw_tag_typedef": [715, 765], "dw_tag_union_typ": [715, 765], "dw_tag_unspecified_typ": [715, 765], "dw_tag_vari": [585, 586, 765], "dw_tag_volatile_typ": [715, 765], "dw_tag_xxx": 765, "dw_virtuality_pure_virtual": 715, "dwarf": [606, 608, 616, 642, 643, 655, 666, 668, 673, 680, 683, 710, 715, 716, 718, 734, 749, 757, 768, 784, 786], "dwarf2": 816, "dwarfdebug": 765, "dwarfdump": [612, 615, 616, 639, 765], "dwarfencoding": 673, "dwarfnumber": 786, "dwarfregnum": 786, "dwel": 810, "dwo": [585, 586, 642, 683], "dwoid": 715, "dword": [10, 11, 12, 13, 15, 16, 24, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 127, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 217, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 317, 318, 319, 322, 323, 324, 328, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 375, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 487, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591, 643], "dwp": 655, "dx": 777, "dx10": 591, "dx10_clamp": 591, "dying": 710, "dyld": 720, "dyldinfo": 641, "dylib": [643, 714, 731, 745, 781, 794], "dyn": [591, 649, 650, 665], "dyn_cast": [611, 708, 756, 774, 786], "dyn_cast_or_null": 749, "dyn_switch": 611, "dynamic": [591, 596, 604, 613, 618, 620, 626, 634, 636, 640, 641, 643, 649, 650, 659, 665, 675, 678, 680, 681, 689, 700, 708, 714, 717, 720, 731, 746, 749, 750, 757, 765, 766, 770, 782, 783, 792, 811, 813], "dynamic_cast": [611, 708, 749, 814, 815, 816], "dynamic_shared_point": 591, "dynamically": [585, 586, 591, 598, 602, 604, 618, 640, 641, 665, 668, 676, 689, 708, 715, 719, 736, 749, 764, 766, 768, 789, 813], "dynamiclibrary": 796, "dynamiclibrarysearchgenerator": [731, 794, 795, 796, 797], "dynamicsharedpoint": 591, "dynstr": 591, "dynsym": 591, "d\u00e9calag": 123, "d\u00e9cis": 793, "d\u00e9criv": 793, "d\u00e9tail": 793, "d\u00e9velopp": 793, "e": [585, 586, 590, 591, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 617, 618, 625, 626, 627, 632, 640, 641, 642, 643, 645, 649, 650, 654, 655, 661, 662, 663, 665, 666, 670, 672, 673, 675, 677, 678, 680, 681, 682, 683, 685, 688, 689, 691, 693, 700, 701, 702, 703, 704, 707, 708, 709, 710, 711, 714, 715, 717, 718, 719, 721, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 740, 741, 743, 744, 745, 746, 747, 748, 749, 751, 753, 755, 757, 760, 762, 765, 766, 767, 768, 769, 770, 771, 774, 775, 776, 779, 780, 781, 782, 783, 786, 787, 788, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "e1": 591, "e2": 591, "e3": 640, "e3659d43d8911e91739f3b0c5935598bceb859a": 683, "e_entry": 591, "e_ident": 591, "e_machin": 591, "e_typ": 591, "ea_r": 608, "eabi": [618, 705], "eacc": 781, "each": [27, 96, 97, 98, 99, 112, 113, 114, 129, 186, 187, 188, 201, 202, 213, 220, 286, 287, 288, 289, 306, 307, 308, 371, 378, 447, 448, 449, 450, 469, 470, 483, 490, 560, 561, 562, 563, 576, 577, 578, 585, 586, 588, 589, 590, 591, 593, 594, 595, 597, 598, 599, 602, 604, 606, 607, 608, 609, 610, 611, 612, 615, 617, 618, 620, 622, 625, 626, 627, 631, 632, 633, 636, 637, 638, 640, 641, 642, 643, 645, 646, 649, 650, 651, 653, 654, 655, 657, 659, 661, 662, 665, 666, 667, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 682, 683, 686, 688, 689, 693, 694, 695, 696, 700, 701, 707, 708, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 724, 725, 726, 727, 729, 730, 731, 732, 733, 735, 736, 738, 739, 740, 743, 744, 745, 747, 749, 750, 751, 753, 755, 758, 759, 760, 761, 762, 765, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 786, 788, 789, 790, 791, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816], "eag": [731, 749], "eagerly": [731, 795], "eao": 749, "earli": [585, 586, 591, 595, 598, 610, 611, 612, 665, 666, 670, 678, 686, 694, 699, 703, 714, 731, 732, 740, 751, 754, 765, 766, 776, 786, 794, 810, 811], "earliest": 612, "early": [646, 662, 665, 686, 698, 705, 715, 717, 721, 729, 731, 732, 733, 736, 749, 766, 786, 788, 814], "earlyclobb": 721, "earlycs": 678, "earlyout": 774, "earn": 751, "eas": [683, 702, 715, 770], "easi": [585, 586, 591, 592, 594, 595, 601, 603, 608, 609, 611, 612, 625, 664, 665, 668, 670, 674, 676, 680, 683, 706, 709, 715, 719, 726, 729, 730, 731, 746, 747, 749, 751, 753, 758, 774, 775, 776, 777, 781, 788, 809, 810, 814, 816], "easiest": [595, 671, 691, 700, 705, 722, 767, 786, 788, 789, 811, 817], "easily": [585, 586, 608, 661, 669, 678, 680, 709, 724, 726, 731, 746, 749, 759, 762, 765, 766, 768, 770, 771, 774, 775, 781, 788, 792, 794, 815], "easy": [598, 602, 604, 606, 608, 611, 612, 617, 670, 680, 683, 699, 701, 706, 708, 714, 715, 717, 722, 727, 731, 749, 751, 753, 758, 765, 766, 767, 772, 774, 776, 780, 781, 788, 792, 795, 796, 808, 809, 810, 811, 812, 813, 814, 817, 818], "eat": [808, 809, 810, 811, 812, 813, 814, 815, 816], "eating": 661, "eatomtypecuoffset": 765, "eatomtypedieoffset": 765, "eatomtypedietag": 765, "eatomtypenameflag": 765, "eatomtypenull": 765, "eatomtypetag": 765, "eatomtypetypeflag": 765, "eax": [608, 612, 640, 643, 675, 715, 721, 765, 766, 776, 777, 786], "eb": 640, "ebnf": 791, "ebp": [608, 673, 777], "ebx": [608, 675, 777], "ec": [645, 749, 815], "echo": [596, 617, 632, 683, 686, 722, 728, 751, 767], "echoed": [617, 655], "eckel": 749, "ecma": 736, "economic": 609, "ecosystem": [687, 744, 749, 751, 772], "ecsubstreamsiz": 736, "ecx": [608, 675, 715, 776, 777], "ed": [595, 611, 662, 749, 762, 766, 784], "edge": [599, 602, 608, 611, 612, 662, 667, 669, 673, 675, 680, 682, 714, 715, 717, 719, 751, 755, 776, 788, 789, 790], "edi": [608, 612, 721, 766, 777], "edit": [591, 645, 685, 701, 736, 747, 753], "edited": [703, 749], "editing": [606, 616, 747, 749], "editor": [611, 670, 683, 722, 728, 767, 772], "edu": [596, 752, 766], "educational": 609, "edx": [608, 640, 715, 766, 776, 777], "ee": 590, "eee": 640, "ef_amdgpu_feature_sramecc_": 591, "ef_amdgpu_feature_sramecc_any_v4": 591, "ef_amdgpu_feature_sramecc_off_v4": 591, "ef_amdgpu_feature_sramecc_on_v4": 591, "ef_amdgpu_feature_sramecc_unsupported_v4": 591, "ef_amdgpu_feature_sramecc_v3": 591, "ef_amdgpu_feature_sramecc_v4": 591, "ef_amdgpu_feature_trap_handler_v2": 591, "ef_amdgpu_feature_xnack_": 591, "ef_amdgpu_feature_xnack_any_v4": 591, "ef_amdgpu_feature_xnack_off_v4": 591, "ef_amdgpu_feature_xnack_on_v4": 591, "ef_amdgpu_feature_xnack_unsupported_v4": 591, "ef_amdgpu_feature_xnack_v2": 591, "ef_amdgpu_feature_xnack_v3": 591, "ef_amdgpu_feature_xnack_v4": 591, "ef_amdgpu_mach_amdgcn_gfx1010": 591, "ef_amdgpu_mach_amdgcn_gfx1011": 591, "ef_amdgpu_mach_amdgcn_gfx1012": 591, "ef_amdgpu_mach_amdgcn_gfx1013": 591, "ef_amdgpu_mach_amdgcn_gfx1030": 591, "ef_amdgpu_mach_amdgcn_gfx1031": 591, "ef_amdgpu_mach_amdgcn_gfx1032": 591, "ef_amdgpu_mach_amdgcn_gfx1033": 591, "ef_amdgpu_mach_amdgcn_gfx1034": 591, "ef_amdgpu_mach_amdgcn_gfx1035": 591, "ef_amdgpu_mach_amdgcn_gfx600": 591, "ef_amdgpu_mach_amdgcn_gfx601": 591, "ef_amdgpu_mach_amdgcn_gfx602": 591, "ef_amdgpu_mach_amdgcn_gfx700": 591, "ef_amdgpu_mach_amdgcn_gfx701": 591, "ef_amdgpu_mach_amdgcn_gfx702": 591, "ef_amdgpu_mach_amdgcn_gfx703": 591, "ef_amdgpu_mach_amdgcn_gfx704": 591, "ef_amdgpu_mach_amdgcn_gfx705": 591, "ef_amdgpu_mach_amdgcn_gfx801": 591, "ef_amdgpu_mach_amdgcn_gfx802": 591, "ef_amdgpu_mach_amdgcn_gfx803": 591, "ef_amdgpu_mach_amdgcn_gfx805": 591, "ef_amdgpu_mach_amdgcn_gfx810": 591, "ef_amdgpu_mach_amdgcn_gfx90": 591, "ef_amdgpu_mach_amdgcn_gfx900": 591, "ef_amdgpu_mach_amdgcn_gfx902": 591, "ef_amdgpu_mach_amdgcn_gfx904": 591, "ef_amdgpu_mach_amdgcn_gfx906": 591, "ef_amdgpu_mach_amdgcn_gfx908": 591, "ef_amdgpu_mach_amdgcn_gfx909": 591, "ef_amdgpu_mach_amdgcn_gfx90c": 591, "ef_amdgpu_mach_non": 591, "ef_amdgpu_mach_r600_bart": 591, "ef_amdgpu_mach_r600_caicos": 591, "ef_amdgpu_mach_r600_cayman": 591, "ef_amdgpu_mach_r600_cedar": 591, "ef_amdgpu_mach_r600_cypress": 591, "ef_amdgpu_mach_r600_junip": 591, "ef_amdgpu_mach_r600_r600": 591, "ef_amdgpu_mach_r600_r630": 591, "ef_amdgpu_mach_r600_redwood": 591, "ef_amdgpu_mach_r600_rs880": 591, "ef_amdgpu_mach_r600_rv670": 591, "ef_amdgpu_mach_r600_rv710": 591, "ef_amdgpu_mach_r600_rv730": 591, "ef_amdgpu_mach_r600_rv770": 591, "ef_amdgpu_mach_r600_sumo": 591, "ef_amdgpu_mach_r600_turk": 591, "ef_amdgpu_mach_xxx": 591, "effect": [585, 586, 589, 591, 594, 606, 608, 611, 612, 617, 618, 631, 632, 640, 642, 643, 649, 650, 662, 670, 680, 683, 689, 690, 702, 710, 715, 719, 746, 749, 751, 765, 766, 770, 781, 782, 786, 788, 789, 796, 812, 813], "effecting": [608, 689], "effectively": [585, 586, 594, 598, 608, 678, 681, 684, 715, 719, 723, 746, 749, 755, 765, 771, 776, 782, 788], "effectiveness": [678, 761, 788], "efficiency": [586, 749, 781], "efficient": [585, 586, 590, 591, 594, 598, 608, 611, 660, 670, 676, 680, 682, 683, 708, 713, 714, 715, 717, 731, 746, 749, 761, 765, 766, 770, 771, 774, 783, 788, 809, 811], "efficiently": [585, 594, 598, 608, 714, 715, 723, 749, 755, 765, 766, 771, 783, 788], "effort": [591, 611, 670, 674, 678, 701, 710, 715, 720, 728, 730, 732, 746, 757, 765, 766, 768, 771, 772, 789, 810], "eflag": [721, 765, 776, 777], "eg": [754, 761], "egregious": [609, 670], "egrep": 683, "eh": [606, 620, 631, 665, 714, 715, 720, 786], "eh_fram": [651, 673], "eh_label": 721, "eh_return": 673, "eha": 715, "ehashfunctiondjb": 765, "ehcleanup": 665, "ehobj": 673, "ehptr": 673, "ehselector": 665, "ei_abivers": 591, "ei_class": 591, "ei_dat": 591, "ei_osab": 591, "eieio": 715, "eight": [608, 617, 715, 776], "einval": 781, "eip": 777, "eisd": 781, "eith": [32, 83, 84, 98, 112, 114, 120, 209, 288, 306, 308, 314, 382, 434, 449, 470, 479, 495, 547, 562, 576, 578, 584, 585, 586, 589, 590, 591, 594, 595, 597, 598, 602, 604, 606, 608, 610, 611, 617, 618, 622, 625, 626, 632, 640, 642, 654, 655, 659, 661, 664, 665, 667, 670, 673, 674, 675, 678, 680, 681, 683, 688, 689, 692, 693, 699, 700, 709, 710, 714, 715, 716, 717, 719, 720, 721, 726, 727, 728, 729, 730, 731, 733, 735, 736, 738, 743, 746, 747, 749, 751, 753, 757, 760, 763, 765, 766, 768, 770, 772, 776, 777, 779, 780, 781, 782, 783, 786, 788, 789, 790, 791, 808, 809, 810, 812, 816, 817], "eject": 772, "elaborat": [749, 766], "elapsed": 640, "elect": [610, 772], "elected": 670, "electric": 700, "eleg": [585, 809, 811, 812, 817], "elem0": 715, "elem_func": 765, "element": [96, 97, 98, 99, 112, 113, 114, 186, 187, 188, 201, 202, 286, 287, 288, 289, 306, 307, 308, 447, 448, 449, 450, 469, 470, 560, 561, 562, 563, 576, 577, 578, 585, 586, 589, 591, 594, 597, 598, 607, 608, 612, 640, 665, 669, 674, 680, 688, 689, 693, 714, 716, 722, 727, 729, 732, 746, 749, 755, 765, 767, 770, 774, 775, 776, 782, 783, 785, 786, 791, 792, 794], "element_siz": 715, "elemental": 765, "elementtyp": [598, 715], "elementwis": 689, "elevated": 781, "elf": [585, 586, 598, 606, 608, 641, 643, 649, 651, 653, 655, 662, 663, 668, 683, 714, 715, 720, 731, 748, 757, 761, 765, 768, 781, 789], "elf32": 642, "elf64": [642, 790], "elf64_rel": 591, "elf_cgprofil": 675, "elf_word": 675, "elf_x86_64": 714, "elf_xword": 675, "elfabiversion_amdgpu_hsa_v2": 591, "elfabiversion_amdgpu_hsa_v3": 591, "elfabiversion_amdgpu_hsa_v4": 591, "elfabiversion_amdgpu_hsa_v5": 591, "elfabiversion_amdgpu_mesa3d": 591, "elfabiversion_amdgpu_pal": 591, "elfclass32": 591, "elfclass64": 591, "elfdata2lsb": 591, "elflinkgraphbuild": 714, "elfosabi_amdgpu_hs": 591, "elfosabi_amdgpu_mesa3d": 591, "elfosabi_amdgpu_pal": 591, "elfosabi_non": 591, "elfv2": 663, "eli": 662, "elid": [626, 713], "elided": [665, 680], "eligibl": [640, 665, 746], "elimin": [594, 608, 618, 661, 676, 678, 683, 691, 716, 721, 729, 733, 749, 765, 770, 811], "eliminat": [585, 586, 591, 594, 602, 603, 608, 611, 661, 670, 676, 678, 680, 699, 714, 729, 746, 749, 766, 786, 809, 811, 812, 813, 814], "eliminatecallframepseudoinstr": 786, "eliminated": [586, 591, 594, 608, 678, 680, 715, 746, 749], "eliminateframeindex": 786, "eliminating": [611, 665, 680, 714, 746, 749, 786, 796], "elis": 665, "ellips": 757, "else": [591, 608, 609, 610, 612, 620, 631, 632, 638, 661, 662, 665, 666, 670, 674, 685, 686, 699, 700, 704, 710, 715, 717, 719, 721, 726, 727, 728, 729, 730, 731, 746, 747, 749, 751, 766, 767, 770, 771, 772, 776, 781, 782, 785, 786, 792, 795, 808, 809, 810, 811, 813, 814, 815, 816, 817], "elsebb": [812, 813, 814, 815, 816], "elseif": 591, "elsev": [812, 813, 814, 815, 816], "elsewher": [589, 590, 591, 661, 666, 670, 714, 749, 770, 774, 786], "elt": [689, 715], "eltsizeparam": [598, 715], "eltty": [598, 715, 816], "em": 705, "em_amdgpu": 591, "emac": [611, 683, 777], "email": [595, 609, 610, 664, 670, 682, 683, 701, 707, 716, 728, 732, 747, 760, 762, 817], "emailed": [670, 682, 772], "emailing": [609, 670, 683, 760], "emailpost": 671, "emailstopic": 671, "emast": 762, "embargo": 762, "embargoed": 762, "embed": [586, 591, 598, 606, 615, 715, 765, 817], "embedded": [585, 586, 591, 598, 615, 642, 666, 670, 679, 680, 694, 705, 715, 735, 738, 744, 746, 748, 749, 755, 765, 776, 812, 813], "embedding": [715, 736, 749, 766], "embodying": 775, "embrac": 670, "emergency": [591, 762], "emergent": 670, "emerging": 668, "emerson": 753, "emersonconcern": 753, "emiss": [615, 680, 683, 715, 765, 768, 786, 814], "emissionkind": [710, 715, 765], "emit": [585, 586, 595, 598, 602, 608, 611, 612, 615, 616, 618, 620, 631, 640, 642, 643, 646, 654, 660, 661, 662, 665, 666, 668, 673, 675, 676, 678, 680, 681, 683, 685, 703, 709, 712, 715, 720, 728, 729, 731, 734, 741, 743, 746, 749, 759, 765, 766, 768, 774, 775, 776, 782, 786, 790, 795, 797, 809, 810, 812, 813, 814, 816], "emit_22": 786, "emitaddressmod": 775, "emitalignment": 680, "emitbyt": 786, "emitcall": 749, "emitconst": 786, "emitconstantpool": 786, "emitconstpooladdress": 786, "emitepilogu": 786, "emitexternalsymboladdress": 786, "emitfnstart": 608, "emitfunctionstub": 786, "emitglobaladdress": 786, "emitinstruct": [608, 786], "emitint32": 680, "emitjumptableaddress": 786, "emitjumptableinfo": 786, "emitlabel": 608, "emitlabelplusoffset": 680, "emitleadingfent": 595, "emitloadlinked": 595, "emitloc": 816, "emitmaskedatomiccmpxchgintrinsic": 595, "emitmaskedatomicrmwintrinsic": 595, "emitnam": 611, "emitobject": 720, "emitprologu": [673, 786], "emitpseudoexpansionlowering": 774, "emitsourcefilehead": 775, "emitstacksizesect": 608, "emitstoreconditional": 595, "emitsymbolattribut": 608, "emitt": [660, 668, 715, 774, 775, 812], "emitted": [591, 595, 597, 598, 608, 615, 666, 675, 678, 703, 712, 714, 715, 716, 720, 721, 729, 736, 759, 765, 768, 770, 774, 775, 782, 786, 788, 795, 810, 812, 816, 817], "emitter": [759, 774], "emitting": [595, 598, 606, 618, 645, 660, 666, 675, 715, 746, 765, 768, 774, 786, 812, 815, 816, 817], "emittrailingfent": 595, "emitvalu": 608, "emmc": 702, "emphasiz": [611, 776], "emphasized": [722, 767], "employ": [715, 766], "employed": [749, 755, 762, 776], "empty": [213, 371, 483, 585, 586, 591, 606, 607, 611, 617, 632, 655, 660, 661, 665, 670, 673, 680, 683, 714, 715, 717, 721, 727, 738, 749, 751, 762, 765, 766, 770, 775, 776, 781, 782, 786, 792, 809, 810, 812, 816], "empty_nod": 715, "empty_subregsset": 786, "emul": 705, "emulat": [608, 674, 678, 715, 731, 749, 751], "emulated": [640, 715], "emulator": [620, 705], "enabl": [213, 371, 483, 585, 586, 589, 591, 604, 606, 608, 612, 613, 617, 618, 620, 621, 623, 626, 630, 632, 633, 637, 640, 642, 643, 650, 654, 659, 660, 661, 665, 666, 668, 670, 676, 677, 679, 680, 683, 691, 692, 698, 699, 701, 705, 710, 714, 717, 718, 723, 726, 730, 731, 733, 745, 746, 749, 751, 753, 759, 763, 765, 770, 772, 777, 781, 782, 785, 786, 788, 789, 790, 792, 794, 795, 796, 811, 815], "enable_": 708, "enable_dx10_clamp": 591, "enable_exception_address_watch": 591, "enable_exception_fp_denormal": 591, "enable_exception_fp_denormal_sourc": 591, "enable_exception_ieee_754_fp": 591, "enable_exception_ieee_754_fp_division_by_zero": 591, "enable_exception_ieee_754_fp_inexact": 591, "enable_exception_ieee_754_fp_invalid_oper": 591, "enable_exception_ieee_754_fp_overflow": 591, "enable_exception_ieee_754_fp_underflow": 591, "enable_exception_int_divide_by": 591, "enable_exception_int_divide_by_zero": 591, "enable_exception_memory": 591, "enable_ieee_mod": 591, "enable_mem_ordered": 591, "enable_optimized": 745, "enable_private_segment": 591, "enable_sgpr_": 591, "enable_sgpr_dispatch_id": 591, "enable_sgpr_dispatch_ptr": 591, "enable_sgpr_flat_scratch": 591, "enable_sgpr_flat_scratch_in": 591, "enable_sgpr_kernarg": 591, "enable_sgpr_kernarg_segment_ptr": 591, "enable_sgpr_privat": 591, "enable_sgpr_private_segment": 591, "enable_sgpr_private_segment_buff": 591, "enable_sgpr_private_segment_siz": 591, "enable_sgpr_queue_ptr": 591, "enable_sgpr_workgroup": 591, "enable_sgpr_workgroup_id": 591, "enable_sgpr_workgroup_id_x": 591, "enable_sgpr_workgroup_id_y": 591, "enable_sgpr_workgroup_id_z": 591, "enable_sgpr_workgroup_info": 591, "enable_tg_spl": 591, "enable_trap_handl": 591, "enable_vgpr": 591, "enable_vgpr_workitem_id": 591, "enable_wavefront_size32": 591, "enable_wgp_mod": 591, "enabled": [589, 590, 591, 593, 597, 606, 608, 611, 612, 615, 617, 618, 620, 622, 626, 640, 646, 654, 661, 662, 664, 668, 670, 678, 679, 680, 683, 700, 701, 714, 715, 717, 718, 732, 745, 749, 753, 757, 761, 764, 765, 775, 777, 779, 781, 782, 785, 788, 789], "enabling": [586, 606, 607, 640, 679, 683, 685, 691, 701, 715, 719, 749, 751, 755, 789], "enc": 774, "encapsul": [711, 715, 755], "encapsulat": [749, 755], "encapsulated": 708, "encapsulating": 591, "enclos": [585, 586], "enclosed": [589, 612, 721, 776, 781], "enclosing": [585, 586, 591, 598, 615, 655, 665, 749, 768, 816], "encnormal": 776, "encod": [585, 586, 590, 595, 598, 608, 624, 666, 673, 680, 688, 715, 727, 755, 765, 768, 770, 779, 783, 791], "encodability": 673, "encodecompactunwindregisterswithoutfram": 608, "encoded": [175, 270, 435, 548, 585, 586, 588, 590, 591, 597, 598, 608, 618, 620, 624, 665, 666, 673, 675, 715, 732, 744, 748, 765, 768, 770, 774, 786], "encoding": [585, 590, 591, 595, 624, 628, 640, 646, 663, 675, 680, 688, 710, 715, 756, 765, 768, 770, 774, 776, 777, 784, 786, 791, 792, 814, 816], "encodingbyhwmod": 776, "encodinginfos": 776, "encomp": [702, 772], "encompass": [711, 772], "encount": [585, 586, 705, 735, 751], "encounter": [585, 586, 627, 673, 715, 786], "encountered": [591, 598, 608, 612, 641, 678, 749, 790, 795], "encountering": 749, "encourag": [601, 604, 611, 670, 682, 683, 701, 749, 751, 761, 817, 818], "encouraged": [610, 670, 707, 709, 714, 746, 749, 753], "encouraging": 609, "end": [585, 586, 590, 591, 593, 594, 597, 598, 601, 602, 603, 604, 606, 608, 609, 610, 612, 615, 622, 623, 629, 632, 636, 640, 642, 645, 653, 661, 662, 666, 667, 670, 673, 675, 677, 678, 680, 683, 685, 693, 700, 701, 702, 704, 706, 707, 708, 710, 714, 717, 718, 719, 722, 725, 726, 727, 730, 731, 732, 733, 736, 740, 746, 747, 749, 750, 751, 757, 758, 759, 762, 763, 766, 767, 768, 771, 772, 774, 775, 776, 777, 780, 781, 784, 785, 786, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "end_amd_kernel_code_t": 591, "end_amdgpu_metadat": 591, "end_amdhsa_kernel": 591, "endcod": 611, "endcond": [812, 813, 814, 815, 816], "ended": [709, 715, 760], "endexpr": [812, 813, 814, 815, 816], "endforeach": 607, "endfunct": 607, "endian": [591, 598, 608, 693, 714, 715, 744, 759, 765, 784, 786, 791], "endianess": 715, "endianity": [585, 586], "endianness": [597, 608, 714, 786, 791], "endif": [591, 607, 611, 661, 662, 666, 700, 717, 771, 774, 776, 787, 794, 795, 796, 797, 811, 812, 813, 814, 815, 816, 817], "ending": [585, 586, 611, 666, 683, 716, 781, 786], "endl": 815, "endloop": [812, 813, 814, 815, 816], "endmacro": 607, "endorsed": 670, "endsess": [794, 795, 796, 797], "endur": 670, "enforc": [595, 608, 611, 612, 640, 661, 670, 680, 683, 694, 715, 749, 751, 760, 761, 768], "enforced": [611, 715], "enforcing": 749, "engag": 610, "engaging": 670, "engin": [625, 663, 716, 717, 753, 766, 784, 812], "engine": [676, 681, 746, 817], "enginebuild": [720, 796], "engineer": 751, "engineering": [669, 681, 727, 810, 817, 818], "english": 611, "enhanc": [670, 747, 765, 788, 817], "enhanced": [663, 785, 810, 811, 812, 813, 814, 816], "enhancing": [611, 784], "enianity": [585, 586], "enoent": 781, "enough": [585, 586, 595, 601, 606, 608, 610, 611, 632, 640, 645, 661, 670, 678, 681, 694, 700, 701, 707, 710, 714, 715, 723, 727, 728, 749, 750, 763, 764, 765, 768, 771, 772, 781, 786, 788, 794, 809, 812, 816], "enqueu": 591, "enqueue_kernel": 591, "enqueued": 591, "enqueueing": 591, "enrich": 755, "ensu": 593, "ensuing": 786, "ensur": [585, 586, 591, 594, 595, 598, 600, 605, 608, 609, 610, 611, 612, 624, 625, 640, 645, 657, 659, 661, 664, 667, 670, 673, 675, 676, 677, 678, 680, 683, 691, 700, 703, 707, 710, 714, 715, 719, 728, 730, 731, 732, 743, 746, 747, 749, 751, 761, 762, 765, 766, 768, 770, 781, 785, 786, 787, 788, 813, 814, 816], "ensured": 719, "ensuring": [605, 606, 608, 610, 715, 731, 765, 790], "enter": [602, 606, 608, 617, 665, 673, 678, 707, 719, 731, 747, 749, 765, 766, 790, 794, 810, 811], "entered": [591, 598, 665, 673, 715, 749, 765, 791, 809], "entering": [673, 683, 715, 719, 726, 731, 747, 766], "entier": 123, "entir": [585, 586, 597, 598, 608, 611, 612, 617, 622, 624, 626, 631, 645, 653, 661, 665, 670, 671, 680, 685, 689, 709, 715, 717, 719, 726, 733, 736, 739, 741, 743, 746, 749, 765, 766, 779, 780, 781, 782, 785, 786, 788, 792, 810, 811, 817], "entirely": [591, 594, 595, 610, 611, 612, 662, 678, 680, 681, 693, 694, 701, 714, 715, 726, 729, 731, 733, 740, 744, 747, 761, 770, 776, 789], "entirety": [670, 741, 762, 770], "entit": [585, 586, 598, 611, 715, 749], "entity": [585, 586, 590, 715, 741, 749, 755, 762, 768, 776], "ento": 716, "entomology": 716, "entos": 716, "entranc": 715, "entri": [591, 594, 598, 608, 612, 631, 640, 643, 644, 646, 649, 650, 667, 673, 675, 677, 680, 714, 715, 717, 721, 738, 749, 751, 759, 761, 765, 770, 774, 783, 786, 789, 794], "entry": [594, 598, 599, 606, 608, 612, 626, 629, 631, 632, 639, 640, 641, 651, 665, 666, 667, 673, 674, 675, 678, 680, 681, 683, 689, 690, 708, 710, 713, 714, 716, 719, 720, 721, 722, 726, 727, 729, 731, 738, 739, 743, 747, 749, 755, 759, 762, 765, 766, 767, 768, 770, 771, 774, 783, 786, 788, 789, 791, 792, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816], "entry_arg": 791, "entry_point": 591, "entrypoint": [665, 715, 717], "entrysym": 731, "entrytoken": 608, "entr\u00e9": [122, 336], "enum": [592, 594, 608, 611, 645, 660, 661, 673, 674, 693, 708, 710, 711, 712, 714, 715, 735, 736, 741, 743, 749, 765, 774, 777, 786, 792, 808, 809, 810, 811, 812, 813, 814, 815, 816, 820], "enumattr": 660, "enumcas": 792, "enumer": [660, 715, 727, 736, 741, 743, 749, 765, 774, 776, 786, 791, 792], "enumerat": [586, 588, 598, 608, 670, 680, 715, 727], "enumerated": [590, 661, 715, 741, 775, 776, 791, 792], "enumerating": [719, 766], "enumerator": [598, 645, 715, 761, 775], "env": 758, "envelop": 701, "environment": [585, 586, 595, 606, 608, 611, 612, 617, 621, 626, 655, 663, 672, 675, 680, 683, 685, 699, 700, 703, 714, 731, 745, 746, 749, 761, 762, 771, 779, 781, 784, 789, 790, 811], "environmental": [714, 715], "envp": 668, "enzymeenzym": 671, "eof": [612, 717, 776, 791, 808, 809, 810, 811, 812, 813, 814, 815, 816], "eor": [715, 721], "ep_earlyaspossibl": 788, "ep_fulllinktimeoptimizationlast": 788, "epc": [794, 795, 796, 797], "epcindirectionutil": [796, 797], "epciu": [796, 797], "epilog": [715, 786], "epilogu": [680, 715, 765, 782, 786], "episod": 812, "epoch": 792, "epsilon": 632, "eptr": 715, "eq": [598, 665, 715, 721, 729, 776], "equal": [585, 586, 589, 590, 591, 594, 598, 599, 600, 608, 617, 645, 646, 661, 662, 673, 683, 688, 689, 700, 714, 715, 727, 736, 739, 740, 743, 749, 766, 776, 786, 809, 812, 813, 814, 815, 816], "equal_rang": 749, "equalit": 678, "equality": [590, 676, 708, 715, 727, 731, 732, 749, 812], "equally": [731, 743, 766], "equivalent": [585, 586, 589, 591, 595, 597, 598, 606, 607, 608, 611, 612, 615, 620, 622, 626, 628, 640, 642, 643, 646, 648, 649, 650, 651, 654, 661, 662, 673, 675, 680, 681, 688, 689, 691, 693, 705, 716, 721, 727, 729, 730, 731, 734, 746, 749, 754, 761, 765, 776, 795, 817], "equivalently": [680, 688], "eras": [749, 765, 812, 813, 814, 815, 816], "erased": 595, "erasefromparent": [749, 786, 810, 811, 812, 813, 814, 815, 816], "erasur": 749, "ere": 612, "eref": 663, "erefrm": 663, "ericsson": 715, "erlang": 715, "erolling": 779, "err": [609, 729, 731, 749, 762, 787, 788, 794, 795, 796, 797, 810, 811, 812, 813, 814, 815, 816], "err2": 749, "errat": 663, "erratic": 710, "errc": 749, "errc_": 781, "errc_enoent": 781, "errcod": 781, "erred": 715, "erring": 610, "errno": [594, 715, 785], "erroneous": [661, 683, 715], "error": [585, 586, 590, 591, 594, 602, 606, 607, 608, 612, 613, 615, 617, 618, 620, 622, 623, 624, 625, 626, 627, 630, 632, 633, 634, 636, 637, 640, 642, 644, 649, 650, 651, 653, 654, 655, 659, 660, 661, 662, 670, 673, 674, 675, 679, 680, 683, 699, 700, 703, 705, 706, 707, 709, 710, 715, 716, 717, 718, 719, 725, 729, 730, 731, 746, 750, 752, 756, 758, 759, 774, 776, 777, 781, 786, 788, 789, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "error_cod": 815, "error_exitcod": 717, "errorasoutparamet": 749, "errorcodetoerror": 749, "errored": 757, "errorhandling": 794, "errorinfo": 749, "errorlist": 749, "errorloc": 775, "errorortoexpected": 749, "errortoerrorcod": 749, "es_gs_lds_siz": 591, "escal": 762, "escalat": [670, 762], "escap": [594, 612, 642, 654, 680, 715, 718, 776, 813], "escaped": [617, 673, 715, 721, 723], "escaping": [594, 612, 715, 781], "eschnet": 752, "escudo": 761, "esgsldssiz": 591, "esi": [608, 721, 766, 777], "esp": [608, 612, 777], "especially": [585, 586, 595, 600, 606, 609, 610, 611, 617, 632, 640, 646, 661, 662, 670, 672, 678, 683, 702, 714, 715, 716, 719, 727, 728, 730, 732, 746, 749, 750, 755, 765, 766, 767, 771, 772, 776, 786, 794], "espresso": 780, "essenc": [670, 766], "essential": [598, 705, 724, 727, 786], "essentially": [595, 610, 640, 659, 680, 749, 751, 761, 765, 766, 776], "essentiel": 7, "establish": [665, 670, 673, 715, 751, 766, 776, 786], "established": [608, 668, 678, 680, 715, 731, 763, 766, 770], "estim": 755, "estimat": [640, 714, 785], "estimated": 727, "estimating": [599, 755], "et_dyn": 591, "et_rel": 591, "etc": [20, 123, 212, 370, 482, 585, 588, 591, 593, 594, 595, 598, 601, 603, 606, 608, 611, 612, 613, 631, 640, 645, 660, 664, 665, 670, 672, 680, 681, 682, 683, 693, 701, 704, 706, 707, 711, 714, 715, 716, 717, 718, 721, 726, 727, 731, 733, 736, 739, 745, 746, 747, 751, 756, 757, 758, 759, 760, 761, 765, 766, 771, 772, 774, 775, 776, 777, 779, 782, 784, 786, 788, 789, 790, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "ethnicity": 609, "euro": 671, "eurollvm": [671, 679], "eurollvmdevmtg": 671, "european": 755, "evalu": [607, 612, 713, 715, 729, 731, 766, 786, 811, 812, 817], "evaluat": [585, 586, 591, 604, 607, 612, 689, 715, 717, 727, 755, 762, 766, 776, 786, 809, 810, 811, 812, 813, 814, 815, 816], "evaluated": [585, 586, 590, 591, 606, 607, 611, 666, 674, 686, 715, 776, 811, 812, 813, 814], "evaluating": [585, 586, 594, 611, 612, 666, 680, 681, 715], "even": [585, 586, 590, 591, 594, 596, 598, 599, 603, 604, 608, 609, 610, 611, 612, 615, 617, 620, 628, 641, 642, 645, 654, 657, 662, 665, 670, 672, 677, 678, 683, 688, 696, 702, 704, 708, 710, 714, 715, 717, 718, 719, 722, 723, 727, 728, 730, 731, 734, 740, 741, 744, 747, 749, 751, 753, 770, 771, 772, 774, 776, 777, 780, 781, 785, 788, 792, 794, 795, 796, 811, 812, 813, 814, 817], "evenly": [715, 785], "event": [606, 609, 640, 647, 714, 717, 724, 749, 760, 761, 768, 770, 789, 790, 791, 793], "event_siz": 791, "eventual": [766, 770], "eventually": [592, 612, 670, 673, 688, 696, 708, 713, 715, 717, 719, 726, 746, 765, 770, 780, 794, 812], "ever": [591, 594, 611, 670, 686, 715, 739, 748, 749, 774, 795, 796, 817], "evergreen": 591, "every": [585, 586, 591, 594, 595, 597, 598, 599, 600, 602, 604, 607, 608, 610, 612, 617, 626, 632, 640, 642, 646, 659, 661, 665, 666, 667, 670, 673, 675, 676, 678, 680, 682, 686, 688, 701, 702, 707, 708, 709, 710, 714, 715, 716, 717, 719, 721, 724, 725, 726, 727, 729, 731, 734, 735, 740, 743, 746, 747, 749, 751, 758, 761, 762, 764, 765, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 783, 787, 788, 791, 795, 809, 811, 812, 814, 816, 817], "everybody": [610, 728], "everyon": [670, 760, 817], "everything": [595, 602, 604, 607, 608, 661, 662, 664, 681, 683, 684, 685, 687, 699, 702, 704, 706, 707, 715, 728, 729, 751, 772, 781, 788, 795, 809, 810, 812, 813], "everywher": [710, 726, 727, 728, 732, 781, 792, 811], "evex": [660, 774], "evex2vex": 660, "evex2vexoverrid": 776, "evex_w1_vex_w0": 776, "evidenced": 681, "evident": [753, 766, 772], "evil": [597, 749, 777], "evl": 715, "evl1": 715, "evl2": 715, "evlmask": 715, "evolu": [719, 788], "evolutionary": 717, "evolv": [586, 601, 609, 718, 762], "evolving": 670, "evt": 688, "ex": [661, 670, 707, 712, 758, 772], "ex2": 729, "exact": [595, 611, 612, 631, 640, 661, 673, 680, 683, 700, 714, 715, 718, 721, 733, 734, 741, 746, 765, 766, 770, 774, 776, 780, 786, 788], "exact_artifact_path": 717, "exactly": [585, 586, 589, 591, 594, 597, 598, 606, 611, 612, 617, 636, 646, 661, 665, 667, 670, 673, 675, 680, 689, 694, 708, 710, 715, 727, 728, 736, 740, 746, 747, 749, 759, 760, 765, 770, 771, 774, 775, 788, 790, 792, 811], "exactmatch": 715, "examin": [608, 626, 645, 665, 720, 766, 776, 781, 786, 794], "examined": [715, 770, 786, 795], "examining": [586, 602, 707, 738, 765], "exampl": [17, 20, 24, 27, 117, 120, 127, 129, 205, 209, 210, 212, 213, 217, 220, 310, 314, 370, 371, 375, 378, 479, 480, 482, 483, 487, 490, 580, 584, 587, 588, 589, 590, 593, 594, 595, 596, 598, 599, 600, 601, 602, 604, 606, 607, 608, 610, 611, 612, 613, 628, 629, 640, 642, 643, 645, 651, 654, 659, 661, 662, 666, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 681, 685, 686, 687, 688, 689, 690, 693, 694, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 713, 714, 716, 719, 721, 723, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 740, 741, 745, 746, 747, 750, 751, 753, 755, 756, 758, 759, 761, 762, 765, 766, 768, 770, 771, 774, 775, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "exampletest": 617, "exceed": [27, 120, 129, 209, 220, 314, 378, 479, 490, 584, 585, 586, 589, 591, 611, 715, 765, 766], "exceeded": 761, "exceedingly": 766, "excel": 749, "excellent": [594, 607, 676, 683, 724, 749, 786], "except": [585, 586, 587, 588, 589, 591, 594, 595, 597, 598, 604, 606, 608, 609, 612, 617, 618, 620, 623, 624, 627, 642, 654, 661, 662, 663, 665, 670, 675, 676, 678, 681, 688, 689, 692, 700, 701, 703, 714, 719, 721, 725, 726, 727, 729, 730, 731, 733, 736, 749, 751, 756, 765, 768, 770, 771, 775, 776, 781, 782, 786, 788, 792, 794, 795, 796, 797, 810, 811, 813, 814, 817, 818], "exceptional": 715, "excerpt": 729, "excess": [611, 612, 618, 620, 717], "exchang": [683, 749, 761], "exchange2_": 752, "exchange2_r": 752, "excis": 715, "excised": 715, "excited": 817, "exciting": [670, 707], "exclam": 715, "exclud": [596, 608, 612, 617, 642, 645, 660, 670, 686, 715, 753], "excluded": [586, 613, 645, 646, 670, 712, 715, 759], "excluding": [603, 622, 631, 640, 715, 782], "exclus": [595, 608, 638, 661, 715, 731, 761, 776], "exclusionary": 609, "exclusively": [770, 783], "excp_en": 591, "excp_en_msb": 591, "exctyp": 673, "exctype1": 673, "exctypen": 673, "excus": 609, "exe": [616, 655, 701, 703, 736, 744, 781, 816], "exec": [10, 11, 12, 13, 48, 49, 57, 58, 59, 60, 61, 63, 64, 65, 69, 70, 73, 75, 77, 139, 140, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 166, 167, 168, 169, 234, 235, 240, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 261, 262, 263, 265, 317, 318, 322, 323, 328, 329, 330, 331, 332, 342, 343, 344, 345, 347, 348, 397, 398, 403, 406, 407, 410, 411, 412, 413, 421, 422, 425, 426, 427, 429, 510, 511, 516, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 533, 534, 537, 538, 539, 541, 589, 591, 596, 613, 717], "exec_h": 590, "exec_lo": 590, "exec_mask_32": 591, "exec_mask_64": 591, "exec_tim": 779, "execinfo": 700, "execu": [585, 594, 599, 600, 605, 608, 613, 626, 632, 640, 646, 662, 664, 665, 666, 668, 673, 677, 678, 684, 700, 715, 716, 717, 719, 720, 730, 731, 755, 765, 766, 768, 770, 775, 780, 782, 784, 785, 786, 788, 789, 790, 791, 794, 795, 796, 811, 812], "execut": [30, 223, 380, 493, 585, 586, 590, 591, 595, 599, 602, 605, 606, 607, 608, 611, 613, 615, 616, 617, 618, 622, 626, 627, 632, 634, 641, 642, 643, 646, 649, 650, 651, 653, 654, 655, 663, 665, 666, 668, 673, 675, 678, 680, 683, 685, 686, 691, 705, 709, 714, 715, 717, 719, 729, 731, 733, 736, 749, 750, 755, 757, 762, 764, 765, 766, 768, 771, 779, 781, 782, 785, 788, 794, 795, 796, 809, 810, 812, 813, 816, 817], "executable_format_error": 749, "executed": [585, 586, 591, 611, 617, 622, 626, 632, 640, 659, 661, 665, 666, 670, 672, 673, 678, 680, 683, 693, 714, 715, 719, 720, 729, 731, 746, 749, 755, 766, 770, 774, 780, 781, 782, 785, 788, 795, 814], "executeprogramandw": 771, "executing": [585, 586, 591, 602, 607, 617, 620, 640, 665, 673, 683, 715, 716, 717, 766, 770, 781, 782, 787, 788, 791, 794, 795, 811, 812, 813, 814], "executionengin": [608, 668, 683, 714, 731, 749, 753, 794, 795, 796, 797], "executionsess": [714, 731, 794, 795, 796, 797], "executionutil": [794, 795, 796, 797], "executorprocesscontrol": [794, 795, 796, 797], "execv": 771, "execz": [10, 11, 12, 13, 54, 57, 58, 59, 60, 61, 63, 64, 65, 69, 70, 75, 77, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 166, 167, 240, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 261, 265, 317, 318, 322, 323, 328, 329, 330, 331, 332, 342, 343, 344, 345, 347, 348, 403, 406, 407, 410, 411, 412, 413, 421, 422, 425, 429, 516, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 533, 534, 537, 541], "exedepsfix": 696, "exedomain": 776, "exeext": 781, "exeges": [616, 660], "exempl": [121, 123], "exempt": 611, "exercis": [679, 781, 794, 817], "exercised": [761, 770], "exhaust": [604, 608, 609, 611, 678, 683, 749], "exhausted": [680, 693, 701, 761], "exhib": [602, 715, 766], "exhibit": 595, "exigent": 749, "exist": [585, 586, 589, 591, 594, 595, 598, 603, 604, 606, 607, 608, 610, 611, 612, 617, 622, 626, 640, 641, 645, 646, 665, 667, 670, 673, 675, 680, 681, 686, 709, 714, 715, 717, 719, 725, 726, 741, 744, 746, 749, 750, 751, 752, 761, 765, 768, 770, 771, 775, 776, 781, 787, 788, 792, 794, 810, 811, 812, 813, 814, 815, 816], "existed": [612, 670, 715, 760, 765], "existent": [608, 713, 715, 741, 768, 792], "existing": [585, 586, 595, 606, 608, 611, 615, 617, 618, 622, 626, 630, 632, 640, 646, 662, 665, 670, 673, 674, 678, 680, 685, 693, 694, 696, 699, 701, 710, 714, 715, 717, 721, 730, 731, 732, 736, 741, 746, 747, 749, 751, 753, 754, 755, 761, 762, 765, 766, 767, 770, 771, 772, 775, 777, 781, 782, 784, 786, 787, 792, 810, 811, 812, 813, 815, 816, 817], "exit": [585, 586, 591, 599, 603, 608, 638, 643, 668, 673, 676, 678, 683, 685, 686, 715, 717, 719, 727, 729, 731, 749, 751, 755, 765, 766, 780, 782, 788, 789, 790, 791, 796, 797, 812, 814, 815, 816, 817], "exit5": 729, "exitcod": 617, "exitcond": [715, 782], "exited": [591, 668, 673, 715, 719, 791], "exiting": [673, 678, 717, 719, 749, 812], "exitonerr": [714, 731, 749, 811, 812, 813, 814, 815, 816], "exitonerror": [811, 812, 813, 814, 815, 816], "exn": [665, 715], "exp": [117, 205, 310, 580, 600, 785], "exp0": 779, "exp1": 779, "exp2": [779, 785], "exp_cnt": [120, 209, 314, 479, 584], "expand": [586, 592, 595, 603, 608, 611, 617, 626, 649, 650, 666, 674, 688, 703, 710, 715, 747, 753, 765, 776, 777, 781, 792], "expandatomicrmwin": 595, "expanded": [586, 595, 608, 617, 624, 649, 650, 660, 666, 676, 703, 715, 727, 751, 753, 762, 776, 789], "expanding": [608, 617, 670, 674, 711, 753, 789], "expandinlineasm": 786, "expandop": 674, "expans": [595, 607, 608, 626, 660, 666, 678, 693, 711, 715, 717, 721, 786], "expansionregiontag": 666, "expcnt": [120, 209, 314, 479, 584, 591], "expcnt_sat": [120, 209, 314, 479, 584], "expect": [589, 591, 594, 596, 597, 598, 601, 607, 608, 610, 612, 617, 626, 661, 665, 670, 681, 689, 693, 711, 717, 719, 727, 735, 739, 743, 746, 747, 749, 754, 759, 762, 763, 766, 768, 769, 770, 771, 781, 791, 792, 809, 812], "expected": [590, 595, 599, 600, 601, 604, 608, 610, 611, 612, 617, 626, 640, 661, 665, 670, 677, 678, 680, 682, 683, 685, 689, 693, 714, 715, 717, 725, 726, 728, 749, 753, 759, 761, 762, 764, 765, 766, 768, 770, 774, 776, 779, 780, 781, 787, 788, 791, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "expected_val": 715, "expectedly": 685, "expectedtoerroror": 749, "expecting": [595, 612, 809, 810, 811, 812, 813, 814, 815, 816], "expens": [585, 595, 604, 606, 611, 640, 661, 662, 673, 677, 690, 693, 696, 715, 717, 727, 730, 746, 749, 766, 786, 788], "expensive_check": 611, "exper": [753, 779, 795, 811, 818], "experiencing": 602, "experient": [606, 609, 610, 701, 702, 710, 722, 726, 727, 728, 765, 794, 811, 818], "experiment": [674, 753], "experimental": [591, 605, 606, 670, 701, 717, 721, 747, 756, 757, 766, 770, 772], "experimenting": 770, "expert": 762, "expertis": 714, "expir": [751, 762], "explain": [591, 594, 597, 606, 608, 610, 611, 612, 640, 660, 670, 671, 687, 715, 719, 727, 728, 749, 753, 762, 784, 788, 791, 814, 818], "explained": [589, 590, 622, 676, 749, 764, 789], "explaining": [601, 672, 687, 747, 772, 818], "explan": [601, 604, 606, 672, 676, 683, 708, 715, 727, 760], "explanatory": [670, 736], "explic": [585, 586, 591, 595, 608, 609, 610, 611, 632, 646, 661, 669, 675, 676, 677, 680, 681, 683, 689, 693, 708, 715, 716, 727, 728, 729, 730, 749, 754, 755, 760, 766, 787, 788, 794, 812, 813, 814, 815, 816, 817], "explicitly": [585, 586, 591, 593, 594, 604, 606, 608, 610, 611, 612, 661, 662, 665, 668, 670, 676, 678, 680, 681, 686, 713, 715, 717, 720, 721, 730, 731, 732, 746, 747, 748, 749, 751, 765, 766, 770, 772, 774, 776, 780, 782, 785, 810, 817], "expliqu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "exploit": [586, 766, 811], "exploited": 677, "exploiting": [755, 766], "explor": [632, 685, 747, 749, 762], "explored": [585, 665, 770], "exploring": [789, 790], "exponent": [590, 715], "exponential": [661, 689, 715], "exponentially": 746, "export": [78, 117, 120, 171, 205, 209, 266, 310, 314, 479, 542, 580, 584, 589, 591, 594, 604, 606, 643, 645, 650, 668, 699, 707, 710, 715, 751, 757, 758, 811, 813], "exported": [608, 626, 643, 645, 657, 661, 683, 715, 718, 731, 744, 797, 813], "exporting": [626, 715, 731], "exportsymbol": 715, "expos": [586, 591, 594, 608, 611, 617, 645, 670, 671, 680, 683, 715, 730, 731, 748, 749, 770, 788], "exposed": [594, 595, 602, 608, 640, 661, 715, 774, 814], "exposesreturnstwic": 721, "exposing": [591, 595, 718, 746, 748, 766], "exposit": 715, "expr": [590, 612, 633, 660, 668, 714, 715, 753, 776, 809, 812, 813, 814, 815, 816], "expr0lh": 666, "expr0rh": 666, "expr1lh": 666, "expr1rh": 666, "exprast": [797, 809, 810, 811, 812, 813, 814, 815, 816], "express": [20, 27, 120, 123, 129, 209, 212, 220, 314, 370, 378, 479, 482, 490, 584, 589, 600, 608, 609, 610, 611, 612, 617, 626, 631, 633, 642, 645, 654, 660, 661, 665, 676, 678, 680, 681, 683, 692, 714, 716, 717, 719, 721, 731, 749, 759, 765, 768, 774, 781, 784, 786, 788, 792, 794, 808, 811, 813, 814, 815, 816, 817], "expressed": [585, 586, 594, 608, 628, 631, 640, 674, 715, 753, 791, 792], "expressing": [715, 749], "expressiveness": 586, "exprloc": [585, 586], "exprprec": [809, 810, 811, 812, 813, 814, 815, 816], "exprproc": [585, 586], "exprsymbol": [811, 812, 813, 814], "ext": [597, 715, 788], "extbinary": [646, 647], "extend": [585, 586, 589, 590, 605, 608, 669, 674, 675, 678, 680, 689, 708, 715, 731, 744, 749, 755, 757, 766, 769, 770, 776, 777, 794, 808, 809, 811, 812, 813, 814, 817, 818], "extended": [595, 612, 632, 642, 654, 661, 675, 683, 689, 714, 715, 749, 766, 769, 770, 777, 786, 795, 809, 813, 817], "extending": [585, 586, 608, 611, 617, 661, 689, 715, 751, 755, 766, 770, 777, 784, 786, 794, 811, 817, 818, 819], "extens": [591, 595, 605, 606, 608, 610, 611, 615, 617, 618, 626, 635, 663, 670, 673, 674, 676, 678, 680, 682, 683, 688, 698, 714, 715, 722, 725, 727, 746, 748, 749, 754, 756, 757, 758, 766, 767, 770, 774, 776, 784, 785, 786, 809, 813, 814, 820], "extensibility": [661, 749, 768], "extensibl": [591, 608, 646, 661, 715, 765, 771, 813], "extensively": [749, 753], "extent": [670, 680, 681, 715, 753], "exterior": 770, "extern": [597, 641, 655, 661, 699, 700, 717, 718, 761, 786, 788, 808, 809, 810, 811, 812, 813, 814, 815, 816], "extern_weak": [598, 715], "external": [591, 598, 605, 606, 608, 615, 620, 641, 645, 662, 670, 678, 689, 702, 705, 714, 715, 717, 718, 720, 724, 727, 729, 731, 734, 745, 747, 749, 752, 758, 759, 772, 783, 785, 786, 787, 788, 809, 810, 811, 812, 813, 814, 815, 816, 817], "external_symbol": 714, "externallinkag": [810, 811, 812, 813, 814, 815, 816], "externally": [585, 586, 622, 702, 714, 715, 718, 753, 766, 770, 776, 783], "externally_initialized": [598, 715], "externallyinitialized": 715, "externalstorag": 661, "extra": [585, 586, 591, 598, 600, 601, 606, 607, 610, 611, 661, 672, 673, 678, 679, 683, 705, 706, 709, 714, 715, 717, 719, 721, 725, 727, 732, 740, 746, 749, 751, 753, 758, 759, 760, 764, 766, 770, 772, 774, 779], "extra_sourc": 607, "extract": [608, 616, 622, 638, 642, 689, 693, 694, 749, 765, 766, 774, 775, 776, 777, 781, 789], "extract_subreg": 721, "extract_subvector": 608, "extractclassnam": 749, "extracted": [612, 622, 633, 666, 673, 685, 694, 715, 749, 765, 766, 776, 786], "extractel": 597, "extracting": [622, 633, 749], "extractloop": 746, "extras": [645, 746], "extrem": [715, 717, 772, 788, 796, 819], "extremely": [594, 595, 598, 602, 608, 670, 677, 683, 700, 712, 715, 749, 765, 786, 814], "exynosm3model": 786, "f": [585, 586, 590, 591, 595, 597, 608, 611, 612, 615, 621, 622, 623, 626, 630, 631, 633, 637, 641, 642, 643, 644, 646, 653, 655, 659, 661, 662, 665, 668, 673, 676, 680, 681, 683, 686, 710, 713, 715, 717, 729, 730, 732, 733, 736, 746, 749, 751, 757, 764, 765, 766, 770, 776, 783, 785, 786, 787, 788, 790, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "f0": [640, 715, 776, 786], "f00ba": 686, "f1": [681, 715, 727, 729, 776, 786], "f107": 729, "f108": 729, "f110": 729, "f128": [715, 786], "f16": [0, 4, 9, 19, 52, 238, 315, 320, 325, 337, 369, 401, 514, 587, 588, 589, 590, 715], "f16x2": [0, 1, 3, 4, 7, 8, 9, 588], "f16x4": [8, 9], "f1f2": 727, "f2": [681, 715, 727, 729, 776, 786], "f2_1": 786, "f2_2": 786, "f3": [729, 776, 786], "f31": [715, 786], "f32": [0, 1, 2, 3, 4, 7, 8, 9, 19, 53, 143, 239, 315, 320, 325, 337, 369, 402, 515, 587, 589, 590, 608, 662, 688, 710, 715, 729, 786], "f32x16": [8, 9], "f32x2": [0, 2], "f32x32": [8, 9], "f32x4": [8, 9], "f3_1": 786, "f3_12": 786, "f3_2": 786, "f3_3": 786, "f4": 729, "f4rc": 608, "f5": 729, "f64": [0, 2, 9, 589, 590, 608, 715, 729, 786], "f64x2": [0, 2], "f64x4": 9, "f80": 715, "f88": 729, "f89": 729, "f90": 729, "f91": 729, "f92": 729, "f93": 729, "f934": 786, "f94": 729, "f95": 729, "f96": 729, "f97": 729, "f98": 729, "f99": 729, "fa": [590, 608], "fab": 785, "fac": [766, 788], "faced": [611, 764, 771], "facilit": [586, 611, 661, 676, 680, 693, 724, 750, 751, 765, 771, 775, 794], "facilitat": [605, 611, 670, 715, 749, 750, 755, 765, 792], "facilitating": 755, "facility": [594, 617, 776], "facing": [678, 774], "fact": [586, 594, 603, 608, 610, 611, 640, 661, 662, 665, 667, 670, 673, 676, 678, 681, 683, 708, 715, 716, 726, 731, 749, 755, 760, 766, 769, 776, 788, 796, 811, 813, 814, 817], "fact0": 727, "fact1": 727, "factor": [585, 608, 611, 693, 715, 738, 749, 755, 761, 762, 776, 777, 782, 785], "factored": [585, 586, 608, 670, 777], "factorial": 746, "factoriz": 585, "factory": [611, 749], "fadd": [592, 608, 674, 688, 729, 786, 810, 811, 812, 814], "fail": [591, 595, 603, 606, 611, 612, 613, 617, 620, 622, 646, 657, 660, 661, 665, 673, 677, 683, 685, 686, 693, 700, 702, 709, 714, 715, 728, 731, 749, 751, 758, 765, 766, 771, 776, 780, 781, 785, 794, 795, 810], "failed": [617, 677, 685, 686, 688, 709, 714, 715, 747, 758, 761, 765, 769, 785, 795], "failedisel": 694, "failing": [611, 617, 670, 677, 701, 714, 728, 749, 762, 772], "faill": 793, "failmaterializ": 795, "failtkind": 677, "failur": [585, 586, 602, 603, 610, 612, 613, 617, 641, 646, 664, 670, 683, 685, 698, 701, 702, 709, 714, 715, 717, 728, 731, 732, 733, 749, 751, 756, 758, 759, 761, 765, 766, 780, 781, 785, 788, 792], "failure_ord": 595, "fairly": [594, 595, 610, 669, 676, 678, 688, 700, 709, 728, 749, 761, 786, 809, 812, 813], "faithful": 673, "fak": 620, "falkormodel": 786, "falkorwr_1vxvy_2cyc": 786, "falkorwr_2vxvy_2cyc": 786, "fall": [595, 599, 611, 612, 651, 655, 661, 665, 680, 693, 719, 731, 746, 749, 762, 766, 770, 772, 786, 811, 812, 813, 814, 815, 816], "fallback": [598, 655, 680, 693, 698, 715, 761, 766, 782], "fallible_iterator": 749, "falliblechilditerator": 749, "falling": [700, 701, 811], "fallthrough": [605, 715, 766], "fals": [591, 594, 600, 602, 611, 612, 613, 617, 620, 626, 632, 640, 646, 655, 660, 661, 665, 666, 676, 683, 689, 700, 701, 706, 708, 710, 712, 715, 717, 718, 719, 721, 727, 733, 736, 746, 747, 749, 761, 765, 769, 774, 775, 776, 786, 788, 789, 796, 810, 811, 812, 813, 814, 815, 816], "false_branch_weight": 600, "falsebr": 765, "falsedest": 715, "fam": 730, "famil": 591, "familiar": [586, 591, 608, 610, 645, 664, 673, 678, 688, 708, 727, 788, 794, 812, 816], "familiarity": [662, 714, 729], "familiariz": 664, "familiarizing": 683, "family": [585, 591, 609, 660, 714, 715, 749, 765, 776, 817], "fan": 704, "fanci": [722, 788], "fancy": [728, 780], "fancya": 788, "fancyobject": 766, "faq": [670, 715, 817], "far": [586, 594, 607, 661, 674, 714, 715, 724, 735, 736, 740, 743, 749, 762, 765, 766, 788, 790, 795, 796, 809, 810, 813, 814, 817], "far16": 735, "far32": 735, "faraway": 611, "farm": 617, "farpoint": 743, "farpointer32": 743, "fashion": [586, 610, 674, 675, 715, 766, 786], "fast": [586, 602, 604, 608, 611, 618, 622, 646, 660, 662, 673, 678, 679, 683, 686, 694, 696, 698, 702, 714, 717, 722, 725, 726, 727, 728, 730, 744, 749, 751, 757, 761, 765, 766, 767, 774, 786, 788, 814, 818], "fast_filter_branch": 751, "fast_path": 715, "fastcall": 608, "fastcc": [598, 608, 665, 676, 715], "fastem": 774, "fastest": [685, 701, 728], "fastisel": 715, "fastiselshouldignor": 776, "fastlink": 741, "fastmath": 729, "fat": [591, 638, 662], "fatal": [660, 761, 775], "fatbin": 662, "fault": [591, 597, 610, 613, 643, 670, 700, 715, 766], "faulted": 673, "faulting": [677, 715, 756], "faultingload": 677, "faultingloadstor": 677, "faultingpcoffset": 677, "faultingstor": 677, "faultkind": 677, "faultmap": [715, 756], "favor": [610, 611, 670, 710, 741, 757, 776, 777], "favorably": 766, "favorit": [716, 728, 812], "fa\u00e7on": 793, "fbb": 786, "fca": 716, "fcc_g": 786, "fcc_u": 786, "fcc_ug": 786, "fcc_val": 786, "fcf": 715, "fcmp": [810, 812, 814], "fcmpinst": 749, "fcom": 608, "fconst": [346, 408, 409, 414, 415, 416, 417], "fcontext": 816, "fcos": 786, "fcoverag": [626, 666], "fcud": 662, "fcur": 727, "fd": 714, "fde": [585, 586, 591, 608, 716], "fdebug": [615, 655], "fdiv": 754, "fdr": 789, "fe": [680, 724], "fear": 670, "feasibl": [670, 715, 765, 766, 790], "featur": [585, 586, 589, 590, 603, 604, 605, 606, 607, 610, 611, 617, 622, 661, 665, 666, 668, 670, 675, 679, 682, 683, 690, 691, 700, 707, 708, 712, 713, 715, 718, 721, 724, 728, 733, 740, 746, 747, 748, 749, 750, 751, 757, 758, 761, 765, 770, 771, 774, 775, 776, 777, 786, 788, 790, 791, 792, 794, 809, 811, 812, 813, 814, 815, 817], "featureb": 792, "featurec": 792, "featured": [608, 700, 727], "featurefparmv8": 777, "featurev": 786, "featurev8deprecated": 786, "featurev9": 786, "february": 753, "fed": [608, 755], "fedor": 672, "feed": [593, 594, 601, 717, 731, 765, 812], "feedback": [586, 664, 670, 687, 701, 707, 715, 716, 728, 753, 759, 760, 788, 795, 796, 797], "feedbackfeedback": 671, "feeding": [715, 751], "feel": [585, 586, 602, 603, 609, 610, 611, 664, 670, 678, 715, 724, 728, 757, 760, 762, 787, 790, 808, 810, 817], "feh_asynch": 715, "femulated": 715, "fenc": [591, 595, 640, 678, 700, 726], "fencing": 715, "ferm": 608, "ferr": 669, "ferrous": 762, "fesetround": 715, "fetch": [585, 586, 589, 591, 600, 640, 683, 715, 751, 788], "fetched": [590, 591, 608], "fetching": [692, 751, 761], "fetchshaderptr": 591, "few": [591, 593, 595, 598, 602, 604, 606, 607, 608, 609, 611, 612, 622, 640, 659, 662, 670, 672, 673, 679, 680, 686, 688, 693, 704, 705, 707, 715, 719, 728, 729, 730, 746, 749, 750, 751, 753, 765, 766, 770, 771, 775, 776, 781, 785, 786, 788, 790, 791, 796, 809, 810, 811, 813, 816, 817], "fewerelements": 693, "fewerelementsfor": 693, "fexist": 727, "ffast": [662, 785], "ffi": [606, 676, 732], "ffi_include_d": 606, "ffi_library_d": 606, "ffil": 626, "ffmpeg": 717, "ffp": 662, "fgr": 688, "fi": [0, 1, 680, 683, 751, 811, 812, 813, 814, 815, 816], "fib": [746, 808, 812, 814, 816], "fibonacc": [685, 808], "fiddl": 749, "fiddling": [706, 722, 767], "fidelity": 765, "field": [585, 586, 591, 594, 598, 601, 607, 608, 612, 617, 640, 641, 642, 645, 651, 654, 664, 666, 671, 678, 680, 681, 703, 707, 712, 715, 726, 735, 736, 740, 741, 744, 747, 749, 757, 759, 761, 765, 766, 768, 770, 774, 786, 791, 792, 809, 817], "field1": 612, "field2": 612, "field3": 612, "field4": 612, "field_offset": 612, "fieldn": 612, "fieldty": 775, "fifth": [665, 715, 729, 786], "figur": [585, 597, 602, 608, 661, 669, 709, 715, 726, 749, 762, 780, 781, 786, 788], "figured": 602, "fij": 591, "fil": [585, 586, 591, 592, 593, 600, 602, 603, 604, 606, 607, 613, 614, 616, 618, 619, 620, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 642, 644, 646, 647, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 668, 670, 672, 674, 675, 676, 679, 682, 685, 686, 688, 699, 701, 703, 704, 706, 707, 709, 710, 712, 714, 715, 717, 720, 722, 723, 726, 727, 728, 729, 731, 734, 735, 738, 739, 741, 743, 747, 749, 750, 751, 753, 756, 757, 758, 762, 766, 767, 770, 771, 772, 774, 775, 777, 779, 780, 783, 785, 786, 787, 788, 790, 791, 792, 794, 795, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 820], "file1": [591, 639], "file2": 591, "file_nam": 642, "file_path": 591, "file_ur": 591, "filecheck": [606, 613, 616, 645, 694, 710, 721, 765, 781, 787], "filecheck_opt": 612, "filed": [707, 716, 762, 770], "filedesc": 714, "fileinfosubstream": 736, "fileit": 661, "filelist": 636, "filemagic": 740, "filenam": [606, 611, 612, 613, 614, 615, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 636, 637, 638, 639, 640, 641, 642, 643, 646, 649, 650, 651, 652, 655, 656, 657, 658, 659, 660, 661, 662, 666, 675, 710, 749, 759, 765, 767, 777, 779, 789, 815, 816], "filename0": 666, "filename1": 666, "filenameindex0": 666, "filenameindex1": 666, "filenameoffset": 736, "filenotfound": 749, "filenumb": 675, "fileorerr": 749, "filepos": 661, "filesiz": 652, "filesizepars": 661, "filesystem": [617, 672, 706, 815], "filetyp": [618, 765, 815], "filing": 770, "fill": [589, 590, 594, 611, 632, 661, 672, 701, 709, 714, 715, 728, 747, 749, 761, 788, 790, 791, 792], "filled": [601, 611, 661, 707, 714, 715, 747, 761, 765, 766, 770, 776, 792, 808, 809, 810, 811, 812, 813, 814, 815, 816], "filling": [591, 662, 715], "filt": [591, 606, 612, 617, 626, 627, 641, 645, 646, 660, 671, 712, 715, 746, 759, 776, 779, 781], "filter": [608, 645, 670, 790], "filterclass": [712, 774, 775], "filtered": [626, 632, 715], "filtering": [68, 159, 256, 420, 532, 776, 790], "fin": [591, 594, 597, 601, 606, 610, 611, 645, 661, 668, 678, 681, 683, 685, 686, 708, 715, 728, 730, 731, 751, 771, 791, 814], "final": [585, 586, 591, 598, 604, 605, 608, 610, 640, 643, 646, 666, 670, 672, 675, 680, 703, 704, 713, 714, 715, 735, 736, 741, 749, 750, 751, 755, 758, 759, 765, 770, 776, 777, 786, 788, 789, 791, 810, 811, 812, 813, 814, 817], "finaliz": [591, 714, 762, 789, 791, 816], "finalize_status": 789, "finalizeasync": 714, "finalizecontinu": 714, "finalized": [608, 670, 714, 762, 789, 791], "finalizememory": 720, "finalizeobject": [720, 816], "finalizing": 789, "finally": [585, 586, 595, 601, 602, 608, 611, 617, 661, 666, 673, 680, 685, 706, 707, 708, 714, 715, 718, 720, 726, 727, 728, 734, 739, 749, 751, 755, 765, 774, 775, 776, 781, 786, 788, 794, 796, 808, 809, 810, 811, 812, 814, 815], "financial": 751, "find": [585, 586, 591, 593, 594, 602, 603, 604, 606, 608, 610, 611, 612, 613, 615, 617, 626, 629, 631, 645, 660, 661, 666, 670, 672, 673, 674, 679, 681, 682, 683, 688, 689, 694, 700, 702, 703, 705, 706, 709, 714, 715, 717, 718, 719, 722, 726, 727, 728, 731, 741, 747, 749, 750, 751, 756, 757, 758, 760, 765, 766, 767, 768, 770, 771, 776, 777, 779, 780, 786, 788, 792, 794, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "find_": 749, "find_packag": 606, "find_program": 606, "findanalysispass": 790, "finding": [602, 613, 617, 645, 678, 686, 700, 709, 715, 717, 726, 746, 751, 762, 765, 766, 789, 790], "findings_d": 717, "findlead": 749, "findsectionbynam": 714, "findsymbol": [796, 811], "finish": [589, 593, 611, 668, 670, 727, 728, 730, 747, 785, 790, 810, 811, 812, 813, 814, 815, 816], "finishassembly": 680, "finished": [591, 602, 606, 608, 665, 672, 673, 715, 720, 722, 758, 767, 776, 788, 810, 812], "finit": [608, 715, 774], "finliz": 591, "fir": [611, 661, 715], "firefox": [707, 753], "firepro": 591, "firing": 602, "first": [20, 27, 85, 117, 123, 129, 176, 205, 212, 220, 271, 310, 352, 370, 378, 436, 482, 490, 549, 580, 585, 586, 588, 589, 590, 591, 594, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 615, 617, 620, 622, 626, 630, 631, 632, 633, 638, 640, 642, 643, 655, 659, 661, 665, 666, 667, 669, 670, 672, 673, 675, 676, 680, 683, 685, 686, 688, 689, 692, 693, 697, 703, 704, 707, 708, 709, 710, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 738, 740, 741, 743, 746, 747, 749, 750, 751, 752, 753, 754, 755, 759, 760, 762, 763, 765, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 779, 780, 781, 782, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819], "first_wavefront": 591, "firstcondit": 749, "firstlet": 668, "firstly": 715, "fished": 731, "fit": [591, 597, 608, 611, 661, 662, 670, 681, 689, 705, 715, 728, 730, 740, 746, 747, 749, 761, 765, 772, 791, 795, 812], "fiv": [585, 586, 595, 608, 661, 669, 673, 688, 717, 726, 749, 762, 775, 776], "fix": [586, 601, 604, 611, 612, 661, 670, 681, 683, 707, 709, 722, 728, 732, 749, 751, 753, 757, 758, 762, 765, 767, 770, 772, 782, 788, 809, 810, 811, 817], "fixabl": 678, "fixed": [585, 586, 587, 588, 595, 599, 601, 611, 612, 617, 665, 668, 670, 700, 703, 707, 709, 714, 717, 725, 730, 731, 735, 736, 741, 744, 751, 753, 757, 758, 759, 761, 764, 766, 768, 772, 774, 776, 777, 782, 786, 789, 792, 809, 814, 817], "fixedstack": 721, "fixedt": 765, "fixing": [611, 664, 670, 714, 716, 727, 753, 762, 772, 796], "fixm": [612, 672, 760, 780, 786], "fixup": [714, 736], "fl": 727, "flag": [589, 590, 591, 593, 603, 605, 606, 607, 608, 612, 613, 625, 626, 632, 638, 640, 642, 644, 646, 650, 654, 655, 665, 668, 670, 672, 675, 678, 679, 680, 683, 685, 686, 689, 699, 701, 702, 704, 705, 706, 709, 710, 712, 714, 717, 725, 726, 727, 728, 729, 730, 734, 735, 736, 740, 741, 749, 754, 757, 758, 759, 761, 765, 768, 770, 781, 786, 788, 789, 790, 792], "flag1": [717, 727], "flag2": [717, 727], "flagflat": 792, "flagged": [605, 612, 715], "flaghollow": 792, "flagpointy": 792, "flagprototyped": 816, "flaground": 792, "flagscpu1": 792, "flagscpu2": 792, "flagscpumask": 792, "flagsfeatur": 792, "flagsfeatureb": 792, "flagsfeaturec": 792, "flagsflat": 792, "flagshollow": 792, "flagspointy": 792, "flagsround": 792, "flakypass": 617, "flam": 789, "flamegraph": 790, "flang": [671, 682, 683, 686, 779], "flat": [31, 32, 81, 82, 83, 110, 111, 174, 199, 200, 269, 304, 305, 341, 351, 355, 381, 382, 432, 433, 434, 467, 468, 494, 495, 545, 546, 547, 574, 575, 590, 615, 735, 792], "flat32": 735, "flat_atomic": 591, "flat_atomic_add": [0, 2, 3, 4, 9], "flat_atomic_add_f64": 9, "flat_atomic_add_x2": [0, 2, 3, 4, 9], "flat_atomic_and": [0, 2, 3, 4, 9], "flat_atomic_and_x2": [0, 2, 3, 4, 9], "flat_atomic_cmpswap": [0, 2, 3, 4, 9, 591], "flat_atomic_cmpswap_x2": [0, 2, 3, 4, 9], "flat_atomic_dec": [0, 2, 3, 4, 9], "flat_atomic_dec_x2": [0, 2, 3, 4, 9], "flat_atomic_fcmpswap": [0, 2], "flat_atomic_fcmpswap_x2": [0, 2], "flat_atomic_fmax": [0, 2], "flat_atomic_fmax_x2": [0, 2, 591], "flat_atomic_fmin": [0, 2], "flat_atomic_fmin_x2": [0, 2], "flat_atomic_inc": [0, 2, 3, 4, 9], "flat_atomic_inc_x2": [0, 2, 3, 4, 9], "flat_atomic_max_f64": 9, "flat_atomic_min_f64": 9, "flat_atomic_or": [0, 2, 3, 4, 9], "flat_atomic_or_x2": [0, 2, 3, 4, 9], "flat_atomic_smax": [0, 2, 3, 4, 9], "flat_atomic_smax_x2": [0, 2, 3, 4, 9], "flat_atomic_smin": [0, 2, 3, 4, 9], "flat_atomic_smin_x2": [0, 2, 3, 4, 9], "flat_atomic_sub": [0, 2, 3, 4, 9], "flat_atomic_sub_x2": [0, 2, 3, 4, 9], "flat_atomic_swap": [0, 2, 3, 4, 9, 591], "flat_atomic_swap_x2": [0, 2, 3, 4, 9], "flat_atomic_umax": [0, 2, 3, 4, 9], "flat_atomic_umax_x2": [0, 2, 3, 4, 9], "flat_atomic_umin": [0, 2, 3, 4, 9], "flat_atomic_umin_x2": [0, 2, 3, 4, 9], "flat_atomic_xor": [0, 2, 3, 4, 9], "flat_atomic_xor_x2": [0, 2, 3, 4, 9], "flat_load": 591, "flat_load_dword": [0, 2, 3, 4, 9, 591], "flat_load_dwordx2": [0, 2, 3, 4, 9], "flat_load_dwordx3": [0, 2, 3, 4, 9], "flat_load_dwordx4": [0, 2, 3, 4, 9, 588], "flat_load_sbyt": [0, 2, 3, 4, 9], "flat_load_sbyte_d16": [0, 4, 9], "flat_load_sbyte_d16_h": [0, 4, 9], "flat_load_short_d16": [0, 4, 9], "flat_load_short_d16_h": [0, 4, 9], "flat_load_sshort": [0, 2, 3, 4, 9], "flat_load_ubyt": [0, 2, 3, 4, 9], "flat_load_ubyte_d16": [0, 4, 9], "flat_load_ubyte_d16_h": [0, 4, 9], "flat_load_ushort": [0, 2, 3, 4, 9], "flat_scratch": [35, 133, 134, 136, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 224, 226, 227, 229, 231, 234, 235, 236, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 317, 318, 322, 323, 328, 329, 330, 331, 332, 341, 342, 343, 344, 345, 347, 348, 381, 382, 383, 385, 386, 387, 389, 390, 392, 394, 397, 398, 399, 403, 404, 405, 406, 407, 410, 411, 412, 413, 421, 422, 423, 424, 425, 426, 427, 428, 429, 494, 495, 496, 498, 499, 500, 502, 503, 505, 507, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 533, 534, 535, 536, 537, 538, 539, 540, 541, 591], "flat_scratch_h": [20, 590, 591], "flat_scratch_lo": [20, 590, 591], "flat_stor": 591, "flat_store_byt": [0, 2, 3, 4, 9], "flat_store_byte_d16_h": [0, 4, 9], "flat_store_dword": [0, 2, 3, 4, 9, 591], "flat_store_dwordx2": [0, 2, 3, 4, 9], "flat_store_dwordx3": [0, 2, 3, 4, 9, 591], "flat_store_dwordx4": [0, 2, 3, 4, 9], "flat_store_short": [0, 2, 3, 4, 9], "flat_store_short_d16_h": [0, 4, 9], "flatten": 785, "flattened": [608, 715], "flavor": [704, 715, 749, 765, 777], "flavour": 694, "flaw": [688, 766], "flawed": 753, "fldcw": 608, "fldcww": 608, "fleet": 672, "flegacy": 730, "flexibility": [608, 661, 693, 694, 715, 749, 776, 788, 813], "flexibl": [608, 616, 617, 680, 708, 714, 726, 777, 781], "flight": [640, 673, 715], "flipped": 715, "float": [591, 598, 608, 620, 640, 646, 661, 675, 681, 688, 689, 702, 706, 715, 727, 729, 757, 765, 785, 786, 792, 812], "float128": 743, "float16": 743, "float32": 743, "float32partialprecis": 743, "float48": 743, "float64": 743, "float80": 743, "float_denorm_mode_16_64": 591, "float_denorm_mode_32": 591, "float_denorm_mode_flush_dst": 591, "float_denorm_mode_flush_non": 591, "float_denorm_mode_flush_src": 591, "float_denorm_mode_flush_src_dst": 591, "float_mod": 591, "float_round_mode_16_64": 591, "float_round_mode_32": 591, "float_round_mode_minus_infinity": 591, "float_round_mode_near_even": 591, "float_round_mode_plus_infinity": 591, "float_round_mode_zero": 591, "floating": [25, 52, 53, 128, 143, 219, 238, 239, 316, 321, 326, 338, 377, 401, 402, 489, 514, 515, 588, 589, 598, 599, 600, 608, 618, 640, 661, 662, 674, 678, 688, 696, 705, 749, 757, 777, 784, 785, 786, 808, 809, 810, 811, 812], "floatscalarty": 715, "floattyp": 749, "floor": 785, "floorf": 785, "flow": [591, 594, 602, 608, 611, 629, 662, 665, 669, 670, 673, 677, 678, 682, 701, 715, 716, 718, 719, 720, 722, 726, 729, 730, 746, 747, 749, 755, 756, 765, 766, 770, 783, 784, 785, 786, 788, 809, 810, 811, 813, 814, 816, 817, 818, 819], "floyd": 752, "flt_round": 715, "flto": [606, 699, 718, 733], "flush": [591, 611, 662, 715, 729, 789, 815], "flush_status": 789, "flushed": [702, 715, 720, 789, 791], "flushing": [715, 789], "flux": 700, "flwend": 752, "fly": [608, 738, 794, 809, 811], "fma": [608, 662, 710, 729, 785], "fma3d": 752, "fmadd": 608, "fmax": 689, "fmaximum": 689, "fmaxnum": 689, "fmaxnum_iee": 689, "fmin": 689, "fminimum": 689, "fminnum": 689, "fminnum_iee": 689, "fmod": 715, "fmt": [2, 3, 4, 9, 612], "fmt_align": 749, "fmt_pad": 749, "fmt_repeat": 749, "fmtspec": 612, "fmul": [608, 729, 810, 811], "fmuladd": 785, "fn": [668, 715], "fnaddr": 665, "fnast": [797, 810, 811, 812, 813, 814, 815, 816], "fnentry": 598, "fnf": 749, "fnir": [810, 811, 812, 813, 814, 815, 816], "fnloc": 816, "fnnam": [809, 810, 811, 812, 813, 814, 815, 816], "fno": [593, 785], "fnptrval": 715, "fnstart": 608, "fntre": 727, "fnty": 715, "focus": [586, 608, 609, 691, 694, 701, 718, 722, 731, 749, 766, 767, 770, 785, 786, 794, 818], "focused": [585, 586, 591, 680, 714, 731, 766, 781, 795], "focusing": [608, 629], "fold": [606, 660, 672, 674, 690, 691, 715, 746, 766, 767, 768, 776, 811], "foldabl": 690, "folded": [594, 595, 608, 677, 678, 691, 710, 715, 765], "foldgenregform": 776, "folding": [595, 674, 677, 691, 715, 749, 756, 765, 788, 810], "foldingsetnod": 749, "foldingsetnodeid": 749, "foldl": 776, "foldmemoryoperand": [608, 786], "folk": [670, 671, 717, 747], "follow": [112, 306, 576, 585, 586, 588, 589, 591, 592, 598, 607, 608, 610, 611, 612, 641, 645, 646, 655, 662, 664, 665, 666, 667, 668, 670, 674, 675, 676, 677, 681, 683, 686, 689, 699, 700, 701, 706, 707, 709, 710, 714, 715, 719, 722, 724, 725, 728, 729, 733, 736, 738, 739, 740, 743, 744, 747, 749, 751, 755, 758, 760, 761, 763, 765, 767, 768, 770, 772, 774, 776, 780, 781, 782, 786, 788, 789, 791, 796, 809, 814, 816], "followed": [585, 586, 591, 595, 598, 608, 611, 612, 626, 638, 640, 641, 643, 675, 693, 710, 714, 715, 717, 727, 736, 740, 743, 746, 749, 750, 761, 765, 774, 775, 776, 781, 786, 791, 809, 812], "following": [20, 24, 27, 120, 127, 129, 209, 212, 213, 217, 220, 314, 370, 371, 375, 378, 479, 482, 483, 487, 490, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 597, 598, 601, 602, 603, 604, 606, 607, 608, 611, 612, 613, 616, 617, 622, 623, 624, 628, 631, 632, 634, 635, 636, 638, 640, 642, 643, 646, 647, 650, 654, 655, 661, 662, 664, 665, 666, 668, 669, 670, 672, 673, 674, 675, 678, 679, 680, 682, 683, 689, 691, 693, 694, 698, 699, 700, 701, 704, 705, 707, 708, 709, 710, 712, 714, 715, 717, 718, 719, 721, 722, 723, 727, 729, 730, 731, 732, 733, 734, 735, 736, 738, 740, 741, 743, 744, 745, 746, 747, 749, 750, 751, 752, 753, 755, 757, 759, 761, 762, 765, 766, 767, 768, 770, 771, 774, 775, 776, 777, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 794, 796, 808, 813], "followup": 782, "followup_all": 782, "followup_coincident": 782, "followup_epilogu": 782, "followup_fallback": 782, "followup_inn": 782, "followup_out": 782, "followup_remaind": 782, "followup_remainder_inn": 782, "followup_remainder_out": 782, "followup_sequential": 782, "followup_unrolled": 782, "followup_vectorized": 782, "fom": [608, 746], "fonctionnal": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "foo": [594, 597, 599, 600, 606, 607, 608, 611, 612, 627, 628, 640, 646, 653, 655, 661, 662, 666, 673, 675, 676, 680, 681, 694, 708, 709, 710, 713, 714, 715, 717, 721, 726, 728, 729, 730, 731, 735, 749, 759, 765, 770, 774, 776, 781, 783, 785, 787, 792, 809, 810, 811, 812], "foo1": [699, 715, 718], "foo2": [699, 718], "foo3": [699, 718], "foo4": [699, 718], "foo_bar": 628, "foo_body": 731, "foo_ctor": 713, "foo_dtor": 713, "foo_in_a_cc": 600, "foo_test": 781, "foo_var": 607, "fooanalys": 730, "fooanalysisresult": 730, "foobar": [611, 721, 792], "fooding": 753, "foof": 662, "foolproof": 788, "foomodulepass": 730, "foopass": 730, "footnot": [688, 693, 719], "footprint": [688, 761], "for": [1, 5, 8, 24, 31, 33, 34, 36, 37, 38, 84, 93, 96, 97, 100, 101, 120, 127, 132, 133, 186, 187, 189, 190, 191, 209, 213, 217, 224, 225, 279, 280, 281, 282, 283, 286, 287, 288, 291, 294, 295, 296, 306, 308, 314, 341, 354, 371, 375, 381, 383, 384, 386, 387, 388, 444, 447, 448, 451, 452, 479, 483, 487, 494, 496, 497, 499, 500, 501, 557, 560, 561, 564, 565, 584, 585, 587, 588, 589, 590, 592, 593, 595, 596, 597, 598, 599, 600, 601, 603, 605, 606, 607, 609, 612, 613, 615, 616, 617, 618, 620, 622, 624, 625, 626, 627, 628, 629, 631, 632, 635, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 674, 675, 677, 680, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 698, 700, 702, 703, 704, 706, 707, 709, 711, 712, 713, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 730, 732, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 747, 748, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 771, 774, 775, 776, 777, 779, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 808, 809, 810, 811, 813, 815, 816, 817, 818, 819], "for_each": 611, "forbidden": 771, "forc": [586, 588, 589, 591, 593, 606, 607, 611, 620, 640, 645, 661, 662, 673, 675, 683, 713, 715, 730, 749, 761, 765, 768, 770, 774, 782, 785, 788, 792], "force_off": 606, "force_on": 606, "forced": [662, 715, 765, 782, 785], "forcedisassembl": 776, "forcefully": 681, "forcibly": 715, "forcing": [585, 586, 611, 683, 706, 731, 743, 766], "foreach": [607, 777], "foreachiterator": 776, "foreign": [606, 676], "forensic": 616, "foresee": 670, "forest": [667, 719], "forev": 724, "forexpr": [812, 813, 814, 815, 816], "forexprast": [812, 813, 814, 815, 816], "forget": [609, 611, 680, 686, 708, 747, 749, 816], "forgiv": 727, "forgotten": 815, "fork": [751, 753, 766, 771], "forking": [751, 755], "form": [123, 589, 591, 593, 594, 595, 598, 605, 606, 607, 611, 612, 613, 627, 628, 631, 643, 646, 655, 661, 667, 669, 670, 673, 675, 678, 679, 680, 681, 682, 683, 689, 693, 700, 704, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 720, 721, 724, 726, 727, 729, 736, 743, 747, 749, 753, 755, 756, 757, 760, 765, 766, 768, 770, 774, 775, 776, 777, 780, 781, 783, 784, 786, 788, 789, 791, 792, 795, 808, 809, 810, 811, 812, 814, 815, 817, 818], "formal": [585, 586, 591, 631, 639, 662, 715, 719, 727, 749, 760], "format": [66, 96, 97, 157, 175, 186, 187, 254, 270, 286, 287, 294, 295, 296, 309, 418, 435, 447, 448, 530, 548, 560, 561, 588, 589, 590, 597, 601, 605, 606, 612, 614, 615, 618, 619, 620, 622, 624, 626, 627, 629, 632, 640, 641, 643, 645, 646, 647, 649, 651, 653, 654, 656, 658, 659, 660, 661, 663, 664, 668, 670, 674, 675, 676, 677, 680, 683, 685, 703, 712, 714, 715, 717, 720, 722, 724, 729, 731, 734, 735, 736, 739, 741, 743, 746, 747, 749, 751, 753, 755, 756, 757, 759, 762, 767, 774, 775, 776, 777, 780, 781, 784, 786, 789, 790, 792, 816], "format_int_custom": 749, "format_provid": 749, "formatadapt": 749, "formatstring": 591, "formatt": 715, "formatted": [585, 591, 611, 631, 642, 649, 650, 664, 683, 747, 749, 792, 816], "formattedfil": 749, "formatting": [670, 792], "formatv": 775, "formbit": [776, 777], "formed": [585, 586, 594, 608, 612, 661, 670, 714, 715, 746, 749, 759, 762, 776, 788], "formerly": [714, 749], "formfeed": 776, "forming": [608, 715, 749, 753, 766, 779], "formmask": 786, "formul": [591, 715], "formulated": 771, "forth": [591, 595, 597, 688, 732, 776], "fortran": [585, 586, 671, 715, 752, 779], "fortunately": [749, 811, 812, 814, 815, 817], "forum": [609, 670, 682, 715], "forumsinfr": 671, "forward": [585, 586, 591, 594, 595, 598, 608, 611, 662, 670, 674, 680, 700, 710, 711, 715, 730, 744, 746, 747, 749, 751, 757, 762, 765, 770, 771, 776, 789, 809, 812], "forwarded": [673, 715], "forwarding": [640, 732, 749], "fosdem17": 697, "fost": [670, 771], "foster": 670, "fostering": 751, "fotonik3d_": 752, "fotonik3d_r": 752, "found": [588, 590, 591, 594, 596, 602, 606, 608, 612, 613, 615, 617, 622, 624, 631, 632, 636, 637, 643, 655, 657, 661, 662, 667, 670, 672, 673, 679, 680, 682, 683, 685, 688, 689, 698, 703, 705, 706, 707, 709, 710, 712, 714, 715, 717, 718, 721, 722, 724, 726, 727, 729, 731, 733, 736, 744, 746, 747, 749, 750, 752, 754, 758, 765, 766, 770, 771, 774, 776, 779, 781, 785, 786, 788, 789, 792, 810, 811, 813, 814, 815, 816], "foundat": [585, 586, 591, 609, 670, 671, 751, 760, 788], "foundationcommunity": 671, "foundationfound": 671, "foundfoo": 611, "four": [84, 175, 270, 435, 548, 586, 589, 591, 594, 595, 597, 598, 604, 608, 617, 640, 653, 661, 681, 694, 695, 704, 715, 729, 731, 775, 776, 786, 810, 811], "fourinarow": 780, "fourteen": 762, "fourth": [586, 665, 681, 715, 765, 768, 786, 788], "foz": 655, "fp": [590, 591, 608, 618, 620, 640, 661, 676, 715, 721, 757, 764, 765, 777, 786, 811, 812, 813, 814, 816], "fp0": [776, 777], "fp1": [776, 777], "fp128": [598, 715, 727], "fp16": [591, 660, 757], "fp16_ovfl": 591, "fp2": [776, 777], "fp3": [776, 777], "fp4": [776, 777], "fp5": [776, 777], "fp6": [776, 777], "fp_to_sint": 786, "fpexcept": 715, "fpform": [776, 777], "fpformat": [776, 777], "fpformbit": 777, "fpgas": [586, 608], "fpic": [606, 761], "fpimmleaf": 691, "fpinst": 777, "fpm": [645, 730, 740, 795, 796, 797], "fpm1": 740, "fpm2": 740, "fpmad": 765, "fpo": [736, 744], "fpo_dat": 736, "fppassmanag": 790, "fpr": 688, "fpreg": 786, "fpregsclass": 786, "fpregsregclass": 786, "fpregsregisterclass": 786, "fprintf": [809, 810, 811, 812, 813, 814, 815, 816], "fprofil": [606, 626, 666], "fptr": 816, "fptyp": 715, "fpu": [706, 715], "fputc": [811, 812, 813, 814, 815, 816], "fqa": 611, "fr": [715, 727], "fra": 608, "fraction": [590, 599, 708, 712, 717], "fractional": 715, "fragil": 751, "fragility": 612, "fragment": [608, 628, 679, 680, 715, 765, 770, 776, 780], "fragment1": 628, "fragment2": 628, "fragmentkind": 628, "fram": [618, 621, 631, 643, 649, 650, 655, 668, 678, 680, 689, 713, 714, 715, 716, 720, 721, 736, 746, 749, 764, 765, 766, 768, 770, 786, 791], "frameindex": 786, "frameinfo": [721, 786], "frameless": 608, "framemap": 680, "frameptr": 665, "framesiz": 680, "framework": [594, 605, 608, 674, 680, 697, 698, 700, 715, 746, 749, 765, 780, 787, 788, 793, 810, 813, 814], "francesco": 746, "frb": 608, "frc": 608, "fre": [591, 594, 595, 606, 608, 609, 610, 611, 640, 645, 663, 664, 670, 678, 680, 691, 696, 713, 714, 715, 716, 717, 724, 726, 731, 747, 749, 751, 757, 760, 761, 766, 770, 774, 781, 787, 788, 790, 791, 808, 810, 811, 812, 813, 814, 817], "freebench": 780, "freeblockmapblock": 740, "freebsd": [596, 608, 642, 683, 762, 789], "freebsd5": 608, "freed": [585, 586, 591, 594, 665, 715, 725, 731, 749, 764], "freedom": [586, 603, 688, 715, 749], "freeing": [665, 757, 796, 811], "freelist": 761, "freely": [595, 670, 715, 776], "freescal": 663, "freestanding": 715, "freetyp": 717, "freez": [707, 751], "frequenc": 599, "frequency": [596, 600, 682, 715, 756, 790, 791], "frequent": [632, 670, 680, 751, 756, 816], "frequently": [588, 591, 611, 661, 681, 683, 685, 715, 746, 747, 749, 756, 770, 771, 777, 795, 796, 797], "fresh": [715, 751, 772], "frexp": 715, "friend": [676, 715, 749], "friendly": [609, 631, 670, 723, 746, 751, 789, 794, 809], "frighten": 717, "from": [14, 24, 79, 80, 84, 98, 99, 104, 105, 106, 107, 113, 114, 115, 117, 127, 172, 173, 175, 188, 194, 195, 196, 202, 203, 204, 205, 217, 267, 268, 270, 288, 289, 294, 295, 296, 297, 298, 299, 300, 301, 306, 307, 308, 309, 310, 333, 350, 375, 430, 431, 435, 449, 450, 455, 456, 457, 469, 470, 471, 472, 487, 543, 544, 548, 562, 563, 568, 569, 570, 571, 577, 578, 579, 580, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 638, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 653, 654, 655, 657, 659, 660, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 707, 708, 709, 710, 712, 713, 714, 716, 717, 718, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 736, 739, 741, 743, 744, 745, 748, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819], "front": [608, 610, 611, 642, 670, 673, 680, 683, 685, 710, 714, 715, 733, 746, 749, 750, 759, 762, 772, 777, 784, 795, 796, 811, 812, 813, 814, 816, 817, 818], "frontend": [591, 595, 629, 632, 640, 660, 665, 666, 671, 673, 675, 676, 677, 680, 683, 684, 713, 715, 730, 732, 752, 757, 759, 765, 770, 781, 782, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 815, 819], "frontendclang": 671, "fronti": [591, 719, 814], "frowned": 670, "frozen": [668, 715], "frt": 608, "frustrat": 609, "fsanitiz": [605, 700, 709, 717, 725, 761], "fsav": 785, "fsin": [618, 786], "fsjlj": 703, "fstream": 729, "fstrict": 715, "fsub": 814, "ft": [717, 810, 811, 812, 813, 814, 815, 816], "ftest": 626, "fthinlto": 715, "ftl": [715, 768], "ftoi": 786, "ftp": 683, "ftz": 729, "fuchsi": 761, "fucomip": 608, "fucomp": 608, "fudg": 706, "fulfill": [705, 708, 771], "fulfilled": 670, "full": [585, 589, 591, 594, 595, 604, 606, 607, 608, 611, 612, 617, 622, 625, 640, 641, 643, 645, 655, 657, 660, 662, 668, 670, 671, 676, 683, 704, 706, 707, 708, 713, 714, 717, 721, 722, 727, 729, 731, 734, 736, 746, 747, 748, 749, 750, 751, 753, 765, 766, 767, 770, 774, 781, 782, 783, 790, 791, 792, 808, 817], "full_corpus_d": 717, "full_nam": 762, "fulldebug": [710, 715, 765], "fullest": 611, "fully": [586, 591, 593, 598, 599, 605, 606, 607, 608, 620, 640, 662, 665, 679, 681, 683, 685, 689, 691, 714, 715, 731, 732, 734, 746, 755, 762, 765, 766, 770, 777, 782, 785, 794, 795, 809, 813, 814, 817], "fun": [675, 789, 790, 817, 818], "func": [633, 645, 666, 715, 721, 746, 749, 788, 790], "func1": 591, "func_typ": 715, "funcflag": 715, "funcid": 790, "funclet": 665, "funcresolv": 749, "function": [592, 594, 595, 597, 598, 599, 602, 603, 604, 605, 606, 612, 615, 616, 618, 621, 622, 624, 626, 627, 628, 629, 631, 642, 643, 644, 645, 646, 649, 650, 655, 657, 659, 660, 662, 663, 667, 668, 673, 675, 678, 679, 680, 681, 683, 689, 691, 693, 694, 698, 699, 700, 703, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 723, 725, 726, 728, 730, 731, 732, 733, 734, 735, 736, 738, 739, 741, 745, 753, 755, 757, 759, 761, 764, 768, 769, 770, 774, 775, 776, 779, 783, 784, 786, 787, 788, 790, 794, 795, 797, 808, 809, 811, 812, 813, 814, 815, 817, 818, 819], "function1": 591, "function_entry_arg": 791, "function_entry_count": 600, "function_id": 791, "function_old": 598, "function_other_typ": 791, "function_pass": 787, "function_to_mock": 714, "function_to_test": 714, "functionaddress": 677, "functional": [606, 640, 670, 672, 680, 715, 716, 749, 765, 774, 812, 813, 814], "functionality": [585, 586, 591, 595, 603, 607, 611, 640, 645, 661, 670, 674, 680, 681, 683, 701, 703, 711, 712, 715, 716, 723, 725, 727, 731, 746, 749, 753, 764, 765, 768, 770, 772, 774, 788, 789, 792, 794, 811, 814, 815, 816, 818], "functionally": [608, 715, 749], "functionanalysismanag": [730, 787], "functionanalysismanagercgsccproxy": 730, "functionanalysismanagermoduleproxy": 730, "functionast": [797, 809, 810, 811, 812, 813, 814, 815, 816], "functioncalle": 749, "functiondecl": 611, "functionend": 675, "functionfaultinfo": 677, "functionfoopass": 730, "functionid": 675, "functionindex": 711, "functioninfo": 677, "functioning": [673, 794], "functionlisttyp": 749, "functionnam": [655, 680, 714, 715], "functionnod": 727, "functionp": [746, 788], "functionpass": [594, 733, 749, 786], "functionpass1": 730, "functionpass2": 730, "functionpassctor": 788, "functionpassmanag": [730, 795, 796, 797, 811, 812, 813, 814], "functionprotos": [811, 812, 813, 814, 815, 816], "functionptr": 749, "functionstart": 675, "functiontyp": [749, 810, 811, 812, 813, 814, 815, 816], "fundamental": [586, 607, 608, 611, 661, 673, 678, 681, 711, 727, 749, 766, 770, 786, 788], "fundamentally": [585, 586, 766], "funnel": 715, "funny": 814, "furth": [586, 595, 598, 601, 603, 604, 606, 610, 611, 612, 617, 632, 660, 665, 670, 673, 678, 680, 681, 688, 693, 694, 700, 705, 707, 714, 715, 717, 726, 727, 733, 736, 738, 740, 749, 753, 761, 763, 765, 766, 772, 779, 782, 786, 791, 794, 796, 811], "furthermor": [585, 586, 601, 603, 612, 670, 681, 688, 700, 710, 715, 719, 746, 770, 781], "fury": 591, "furyx": 591, "fuse": [606, 662, 699, 703, 705], "fused": [662, 689, 715, 746], "fusing": [620, 662, 715, 746], "fusion": [715, 757], "futur": [586, 591, 598, 605, 606, 610, 611, 626, 640, 670, 679, 680, 681, 683, 696, 697, 700, 710, 711, 713, 715, 717, 721, 728, 730, 747, 749, 751, 757, 758, 761, 762, 765, 768, 769, 770, 782, 785, 787, 791, 810, 811, 812], "fuzz": 756, "fuzz_target": 717, "fuzzed": [679, 717], "fuzzer": [717, 756], "fuzzer_no_main": 717, "fuzzercl": 679, "fuzzing": [715, 756, 762], "fuzzing_build_mode_unsafe_for_product": 717, "fuzzinglibc": 717, "fuzzmutat": 679, "fuzzy": 628, "fval": 765, "fverify": 710, "fwd_progress": 591, "fwdargreg": 721, "fx": [0, 5, 6, 7, 8, 9, 587, 591], "fxray": [789, 790], "g": [591, 593, 594, 595, 596, 598, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 617, 618, 625, 626, 640, 641, 642, 643, 644, 645, 649, 650, 654, 655, 661, 662, 665, 666, 667, 668, 670, 672, 673, 675, 678, 680, 681, 683, 685, 688, 689, 691, 693, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 717, 718, 719, 721, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 741, 743, 744, 745, 746, 747, 749, 751, 753, 755, 757, 760, 762, 765, 766, 767, 768, 769, 770, 771, 774, 775, 776, 779, 780, 781, 782, 783, 787, 788, 790, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "g0": 786, "g1": [715, 765, 786], "g2": [715, 765, 786], "g3": 786, "g4": 786, "g5": 786, "g6": 786, "g7": 786, "g_": 753, "g_add": [688, 690, 693, 710], "g_and": [692, 693], "g_anyext": 693, "g_ashr": 693, "g_bitcast": 693, "g_block_addr": 693, "g_build_vector": 693, "g_build_vector_trunc": 693, "g_concat_vector": 693, "g_const": [688, 690, 692, 693, 710], "g_extract": 693, "g_fconst": [688, 690], "g_fmul": 688, "g_fneg": 688, "g_foo": 693, "g_fpext": 693, "g_frame_index": 693, "g_icmp": 721, "g_implicit_def": 693, "g_inttoptr": 693, "g_load": [688, 693], "g_merge_valu": 693, "g_mul": 693, "g_or": 693, "g_phi": 693, "g_ptrtoint": 693, "g_sext": 693, "g_sext_inreg": 688, "g_shl": 693, "g_stor": 693, "g_sub": [693, 710], "g_trunc": 693, "g_unmerge_valu": 693, "g_vecreduce_add": 689, "g_vecreduce_and": 689, "g_vecreduce_mul": 689, "g_vecreduce_or": 689, "g_vecreduce_smax": 689, "g_vecreduce_smin": 689, "g_vecreduce_umax": 689, "g_vecreduce_umin": 689, "g_vecreduce_xor": 689, "g_xor": [688, 693], "ga": 727, "gab": 663, "gadget": 766, "gain": [601, 661, 670, 700, 715, 719, 760], "gained": 586, "galin": [670, 701], "gamely": 670, "gap": [585, 586, 640, 666, 715, 749], "gapend": 675, "gapstart": 675, "garbag": [598, 676, 716, 743, 768, 818], "gas": [675, 786], "gath": [661, 670, 727, 750, 753, 774], "gather": [715, 755, 785], "gather4": 589, "gathered": [673, 704, 715, 749, 781], "gathering": [591, 704, 715, 753, 791], "gav": 695, "gazonk": 765, "gb": 683, "gc": [598, 716, 727, 751, 756], "gc_transit": 715, "gc_transition_end": 770, "gc_transition_start": 770, "gcal": 682, "gcc": [586, 595, 607, 608, 611, 613, 626, 646, 647, 661, 662, 663, 670, 672, 673, 682, 683, 699, 700, 705, 706, 709, 715, 726, 728, 746, 749, 765, 779, 780, 785, 786, 789], "gcc_version": 683, "gcda": 626, "gcfunctioninfo": 680, "gcfunctionmetadat": [680, 768], "gcmetadaprint": 680, "gcmetadat": 680, "gcmetadataprinterregistry": 680, "gcmetataprint": 770, "gcn": 591, "gcn3": 591, "gcnam": 598, "gcno": 626, "gcodeview": 765, "gcolumn": 785, "gcov": 646, "gcov_prefix": 626, "gcov_prefix_strip": 626, "gcregistry": 680, "gcroot": [680, 768, 770], "gcse": [746, 749], "gcstrategy": [680, 770], "gd": [0, 2, 3, 4, 9, 80, 120, 173, 209, 268, 314, 431, 479, 544, 584, 591], "gdb": [585, 586, 608, 631, 699, 749, 765, 772, 784, 786], "gdbin": 749, "gdbregistrationlisten": 731, "ge": 776, "ge_missing_jmp_buf": 611, "ge_missing_sigjmp_buf": 611, "geared": [604, 606], "geforc": 729, "gembed": 591, "gen": [615, 646, 660, 670, 691, 772, 774, 786, 795, 816], "genaddressmod": 775, "gend": 609, "gendfapacketiz": 608, "gener": [586, 590, 591, 595, 597, 602, 604, 606, 611, 612, 613, 616, 618, 640, 662, 665, 671, 678, 683, 713, 714, 715, 716, 728, 729, 730, 733, 755, 756, 757, 758, 765, 768, 770, 774, 779, 786, 794, 809, 811, 813, 814, 815, 816, 817, 818, 819], "general": [591, 593, 594, 595, 597, 598, 601, 603, 607, 608, 609, 611, 616, 635, 640, 645, 646, 661, 662, 664, 665, 670, 673, 678, 680, 683, 684, 685, 688, 691, 693, 700, 701, 705, 708, 713, 716, 719, 725, 727, 728, 729, 734, 740, 741, 743, 746, 751, 753, 757, 760, 761, 765, 766, 770, 771, 777, 780, 781, 786, 788, 795, 809, 813, 814, 816, 817], "generalis": 813, "generality": [585, 817], "generaliz": [585, 667, 693, 715, 749, 766, 784], "generalized": [585, 586, 611, 749, 770], "generalizing": [585, 586], "generally": [585, 586, 591, 595, 602, 604, 607, 610, 611, 617, 622, 661, 668, 670, 673, 674, 678, 680, 683, 690, 691, 693, 694, 700, 701, 704, 715, 719, 722, 723, 728, 729, 730, 731, 733, 736, 749, 753, 761, 762, 765, 766, 767, 771, 776, 777, 781, 782, 783, 786, 788, 815, 816], "generat": [585, 586, 591, 593, 595, 597, 598, 602, 604, 606, 607, 608, 612, 613, 615, 616, 617, 618, 620, 622, 626, 631, 632, 639, 640, 645, 646, 647, 659, 660, 662, 665, 666, 668, 673, 674, 675, 676, 678, 680, 681, 683, 684, 685, 689, 693, 704, 705, 707, 709, 710, 713, 714, 715, 717, 718, 720, 721, 725, 726, 727, 729, 731, 741, 743, 744, 747, 748, 749, 750, 751, 759, 764, 765, 767, 768, 770, 774, 775, 776, 779, 780, 781, 783, 785, 786, 789, 790, 792, 794, 809, 810, 811, 812, 813, 814, 816, 817, 818], "generated": [585, 586, 591, 595, 600, 604, 605, 606, 611, 612, 618, 622, 624, 626, 632, 639, 640, 645, 646, 647, 652, 661, 662, 666, 668, 670, 673, 677, 678, 679, 680, 683, 685, 696, 704, 714, 715, 717, 718, 720, 726, 729, 731, 734, 735, 736, 741, 746, 749, 755, 756, 759, 764, 765, 766, 767, 770, 774, 776, 777, 781, 782, 785, 786, 788, 789, 790, 792, 794, 809, 810, 811, 812, 813, 814, 815, 816, 817], "generating": [585, 586, 591, 593, 595, 597, 604, 607, 608, 611, 626, 662, 666, 676, 678, 683, 685, 697, 707, 710, 714, 715, 717, 721, 728, 729, 751, 755, 765, 766, 768, 774, 775, 782, 784, 786, 789, 792, 794, 810, 811, 812, 814, 816, 817], "generational": [680, 715, 770], "generationcodegen": 671, "generator": [593, 595, 606, 613, 618, 660, 665, 670, 674, 680, 683, 694, 698, 710, 716, 718, 723, 727, 729, 731, 749, 752, 765, 767, 768, 770, 774, 776, 777, 780, 781, 784, 786, 788, 810, 814, 817], "generic": [585, 586, 588, 591, 595, 597, 598, 606, 608, 611, 620, 640, 660, 661, 662, 670, 673, 683, 691, 693, 694, 695, 696, 698, 700, 715, 716, 721, 729, 748, 749, 765, 771, 777, 781, 786, 789, 815, 817], "genericdomain": 776, "genericenum": 774, "generict": [774, 775], "genericvalu": 668, "genregisternam": 608, "gensubtargetinfo": 786, "genuin": 749, "geomean": 785, "geometric": 817, "geometry": 591, "geord": 682, "georg": 762, "gep": [676, 689, 715, 716, 727, 746, 756, 765, 770], "gep_index": 715, "get": [36, 37, 38, 55, 56, 93, 96, 97, 100, 101, 145, 186, 187, 189, 190, 191, 241, 242, 281, 282, 283, 286, 287, 354, 386, 387, 388, 404, 405, 444, 447, 448, 451, 452, 499, 500, 501, 517, 518, 557, 560, 561, 564, 565, 585, 586, 589, 591, 592, 594, 595, 597, 599, 602, 607, 608, 609, 610, 611, 612, 616, 640, 661, 662, 664, 665, 666, 670, 672, 673, 674, 676, 678, 680, 681, 682, 683, 684, 685, 687, 690, 692, 698, 699, 701, 704, 705, 707, 708, 709, 711, 716, 717, 718, 719, 720, 722, 724, 726, 727, 728, 729, 730, 731, 732, 741, 743, 746, 747, 748, 749, 751, 758, 759, 760, 762, 763, 765, 766, 767, 770, 771, 772, 774, 775, 776, 777, 780, 781, 782, 786, 788, 789, 790, 792, 794, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "get_atable_decl": 774, "get_atable_impl": 774, "get_bvalues_decl": 774, "get_cenum_decl": 774, "get_ctable_decl": 774, "get_ctable_impl": 774, "get_instrinfo_named_op": 786, "get_instrinfo_operand_enum": 786, "get_instrinfo_operand_types_enum": 786, "get_matcher_implement": 774, "get_ptr": 677, "get_reginfo_target_desc": 774, "get_register_match": 774, "get_subtarget_feature_nam": 774, "getactiondefinitionsbuild": 693, "getaddend": 714, "getaddress": [731, 794, 811, 812, 813, 814], "getaddressingmod": 786, "getadjustedanalysispoint": 594, "getalignment": 714, "getalignmentoffset": 714, "getallderiveddefinit": 775, "getallocatedtyp": 814, "getanalys": 692, "getanalysisusag": [594, 692], "getargumentlist": 749, "getattribut": 727, "getattributespellinglistindex": 774, "getb": 775, "getbasicblock": 608, "getbasicblocklist": [749, 812, 813, 814, 815, 816], "getbinarycodeforinstr": 786, "getbinaryprecedent": [813, 814, 815, 816], "getbit": 661, "getbitwidth": 749, "getbuff": [749, 792], "getcachedresult": 730, "getcalledfunct": 749, "getcalleesavedreg": 786, "getchar": [808, 809, 810, 811, 812, 813, 814, 815, 816], "getcheck": 730, "getcl": 775, "getclass": 775, "getclobberingmemoryaccess": 726, "getcol": 816, "getcontent": 714, "getcontext": [731, 794, 816], "getdagop": 776, "getdat": 611, "getdatalayout": [731, 786, 794, 795, 796, 797, 811, 812, 813, 814, 816], "getdatasect": 680, "getdebugloc": 765, "getdef": 775, "getdefaultdatalayoutfortarget": [794, 795, 796, 797], "getdefaultresourcetrack": [794, 795, 796, 797], "getdefaulttargettripl": 815, "getdirectory": [765, 816], "getdirectsupercl": 775, "getdoublety": [810, 811, 812, 813, 814, 815, 816], "getehframesect": 720, "getelementptr": [594, 608, 612, 624, 665, 666, 680, 681, 713, 716, 727, 729, 732, 749, 765, 770, 783, 817], "getelementptrinst": 749, "getelementtyp": [732, 749], "getend": 714, "getendinaness": 714, "getendview": 640, "getentryblock": [749, 814, 815, 816], "getenv": 771, "getexceptionpointerregist": 673, "getexceptionselectorregist": 673, "getexecutionsess": [795, 797], "getexecutorprocesscontrol": [794, 795, 796, 797], "getfil": 731, "getfilenam": [765, 816], "getfixupaddress": 714, "getfoo": 715, "getforcurrentprocess": [731, 794, 795, 796, 797], "getfourdatapointer": 766, "getframeinfo": [608, 786], "getframeinstruct": 721, "getframesiz": 680, "getfunct": [680, 733, 749, 788, 810, 811, 812, 813, 814, 815, 816], "getfunctionlist": 749, "getfunctiontyp": 749, "getgeneralcategory": 661, "getglobal": 786, "getgloballist": 749, "getglobalprefix": [731, 794, 795, 796, 797], "getgotentrytarget": 714, "getimm": 786, "getindex": 786, "getinitializ": 749, "getinsertblock": [812, 813, 814, 815, 816], "getinstlist": 749, "getinstralternativemapping": 696, "getinstrinfo": [608, 786], "getinstrmapping": 696, "getint32ty": 611, "getinterfac": [731, 797], "getjitdylib": [731, 797], "getjitinfo": [608, 786], "getjmp_buftyp": 611, "getkey": 749, "getkind": [708, 714, 774], "getknownbit": 692, "getlazycallthroughmanag": 796, "getlazyresolverfunct": 786, "getlin": [765, 816], "getlinkag": 714, "getllvmcontext": 611, "getlock": 731, "getloopanalysisusag": 788, "getloopid": 782, "getloopinfo": 788, "getmainjitdylib": [731, 794, 795, 796, 797, 811, 812, 813, 814], "getmanag": 730, "getmbb": 786, "getmemb": 749, "getmemoryregioninfo": 757, "getmodul": [731, 795], "getmodulematchquality": 786, "getmyobject": 766, "getnam": [676, 714, 731, 749, 787, 788, 797, 809, 810, 811, 812, 813, 814, 815, 816], "getnamedoperandidx": 786, "getnameinitasstring": 775, "getnexttoken": [809, 810, 811, 812, 813, 814, 815, 816], "getnod": [674, 786], "getnullvalu": [749, 812, 813, 814, 815, 816], "getnumel": 749, "getnumoperand": 749, "getnumparam": 749, "getnumsuccessor": 611, "getnumvirtreg": 608, "getobjfilelowering": 680, "getoffset": [714, 786], "getop": 776, "getopcod": [749, 786], "getoperand": [608, 611, 692, 749, 786], "getoperationnam": 674, "getoperatornam": [813, 814, 815, 816], "getopt": 661, "getorcreatefoo": 749, "getorcreatetypearray": 816, "getordinal": 714, "getorinsertfunct": 749, "getparamtyp": 749, "getparent": [749, 812, 813, 814, 815, 816], "getpoint": 715, "getpointerelementtyp": 732, "getpointersiz": [680, 714], "getpointertofunct": [720, 749, 816], "getpointertonamedfunct": 720, "getpostinstrinfoview": 640, "getpredopcod": 712, "getprocaddress": 811, "getprocesstripl": 816, "getprotectionflag": 714, "getproto": 797, "getrawpoint": 711, "getrawsubclassoptionaldat": 727, "getreg": [608, 692, 786], "getregclass": 608, "getreginfo": 608, "getregisterinfo": [608, 786], "getreservedreg": 786, "getresult": 730, "getreturntyp": 749, "getscev": 719, "getscevatscop": 719, "getschedclass": 786, "getscop": 714, "getsect": 714, "getsextvalu": 749, "getsigjmp_buftyp": 611, "getsiz": 714, "getsourc": 683, "getsrc": 683, "getstart": 714, "getstartview": 640, "getsubtarget": 786, "getsubtargetimpl": [786, 790], "getsupercl": 775, "getsymboladdress": 678, "getsymbolnam": 786, "getsymbolt": 749, "gettarget": 714, "gettargetlowering": 786, "gettargetmachin": 811, "gettargetmemory": 714, "gettargettripl": [714, 794, 795, 796, 797], "getterminator": 749, "getthesparctarget": 786, "getting": [593, 601, 606, 608, 611, 664, 670, 672, 688, 705, 706, 707, 709, 715, 718, 730, 747, 749, 751, 765, 766, 784, 787, 788, 789, 793, 812, 814], "gettingstarted": 705, "gettok": [808, 809, 810, 811, 812, 813, 814, 815, 816], "gettoknam": 816, "gettokprecedent": [809, 810, 811, 812, 813, 814, 815, 816], "gettraget": 714, "gettyp": [611, 732, 749], "gettypenam": 749, "getunqual": 749, "getvalu": [611, 749, 775], "getvalueaslistofint": 775, "getvalueasoptionaldef": 775, "getvalueid": 727, "getvaluein": 775, "getvalueoperand": 732, "getvaluetyp": 786, "getvaluevt": 690, "getview": 640, "getworkingmemory": 714, "getx86regnum": 786, "getzextvalu": 749, "gfx": 591, "gfx10": [1, 588, 589, 590], "gfx1010": 591, "gfx1011": 591, "gfx1012": 591, "gfx1013": 591, "gfx1030": 591, "gfx1031": 591, "gfx1032": 591, "gfx1033": 591, "gfx1034": 591, "gfx1035": 591, "gfx600": 591, "gfx601": 591, "gfx602": 591, "gfx7": [588, 589, 590, 591], "gfx700": 591, "gfx701": 591, "gfx702": 591, "gfx703": 591, "gfx704": 591, "gfx705": 591, "gfx8": [279, 280, 288, 291, 294, 295, 296, 306, 308, 588, 589, 590, 591], "gfx801": 591, "gfx802": 591, "gfx803": 591, "gfx805": 591, "gfx810": 591, "gfx9": [5, 6, 7, 8, 588, 589, 590], "gfx900": 591, "gfx902": 591, "gfx904": 591, "gfx906": 591, "gfx908": [589, 591], "gfx909": 591, "gfx90a": [589, 590], "gfx90c": 591, "gfxip": 591, "ghash": 650, "ghc": [608, 715], "ghostly": 749, "gi": 751, "gicombin": 660, "gicomplexoperandmatch": 691, "gicomplexpatternequiv": 691, "gid": [622, 636, 642, 654], "gif": 717, "gigabyt": 766, "gil": 755, "ginodeequiv": 691, "gird": 591, "gisel": [660, 679], "giselknownbit": 692, "giselknownbitsanalys": 692, "gist": 683, "git": [601, 606, 664, 670, 672, 678, 682, 685, 699, 707, 709, 728, 745, 747, 757, 772, 779, 780], "gitattribut": 683, "github": [591, 596, 601, 606, 634, 636, 638, 642, 643, 644, 651, 653, 654, 670, 671, 682, 683, 685, 707, 715, 728, 744, 747, 749, 752, 753, 762, 779, 780, 781, 789, 790, 819], "githubinfr": 671, "gitlab": [751, 752], "giv": [585, 586, 591, 593, 594, 598, 602, 608, 610, 611, 640, 657, 661, 662, 666, 667, 670, 678, 683, 688, 701, 704, 706, 714, 715, 722, 723, 726, 727, 729, 730, 731, 736, 746, 747, 749, 753, 759, 765, 766, 767, 774, 775, 782, 784, 786, 788, 789, 790, 792, 795, 796, 808, 810, 811, 813, 815, 816, 817, 818], "given": [585, 586, 591, 594, 595, 598, 599, 600, 601, 603, 606, 607, 608, 610, 611, 612, 615, 617, 622, 624, 626, 629, 632, 640, 645, 646, 647, 655, 659, 660, 661, 662, 665, 669, 673, 674, 675, 676, 678, 680, 683, 685, 688, 689, 693, 696, 698, 707, 708, 714, 715, 719, 720, 726, 730, 731, 734, 740, 743, 746, 748, 749, 751, 753, 755, 757, 759, 761, 762, 765, 766, 768, 770, 771, 774, 775, 776, 779, 783, 786, 788, 789, 790, 792, 794, 795, 796, 797, 809, 810, 811, 813], "giving": [715, 731, 767, 770, 774, 788, 810, 816], "gladly": [683, 685], "glanc": [611, 714, 817], "glasgow": 715, "glb": 715, "glb2": 715, "glb3": 715, "glbi": 715, "glc": [0, 2, 3, 4, 9, 18, 28, 36, 37, 38, 93, 96, 97, 100, 101, 110, 111, 122, 130, 186, 187, 189, 190, 191, 199, 200, 211, 221, 281, 282, 283, 286, 287, 304, 305, 336, 340, 354, 355, 368, 379, 386, 387, 388, 444, 447, 448, 451, 452, 467, 468, 481, 491, 499, 500, 501, 557, 560, 561, 564, 565, 574, 575, 587, 591], "glibc": 717, "glibcxx_3": 683, "glin": 785, "glob": 633, "global": [31, 82, 341, 351, 381, 433, 494, 546, 586, 589, 590, 591, 594, 595, 598, 603, 604, 608, 610, 611, 612, 617, 622, 624, 629, 633, 640, 641, 642, 643, 645, 650, 657, 660, 661, 662, 665, 666, 668, 673, 676, 678, 679, 680, 681, 683, 689, 691, 696, 697, 714, 716, 717, 718, 729, 730, 731, 733, 736, 739, 741, 744, 749, 750, 753, 756, 757, 761, 766, 769, 770, 774, 775, 776, 783, 786, 787, 788, 794, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818], "global_atomic": 591, "global_atomic_add": [0, 4, 9], "global_atomic_add_f32": [8, 9], "global_atomic_add_f64": 9, "global_atomic_add_x2": [0, 4, 9], "global_atomic_and": [0, 4, 9], "global_atomic_and_x2": [0, 4, 9], "global_atomic_cmpswap": [0, 4, 9], "global_atomic_cmpswap_x2": [0, 4, 9], "global_atomic_dec": [0, 4, 9], "global_atomic_dec_x2": [0, 4, 9], "global_atomic_fmax": 0, "global_atomic_fmax_x2": 0, "global_atomic_fmin": 0, "global_atomic_fmin_x2": 0, "global_atomic_inc": [0, 4, 9], "global_atomic_inc_x2": [0, 4, 9], "global_atomic_max_f64": 9, "global_atomic_min_f64": 9, "global_atomic_or": [0, 4, 9], "global_atomic_or_x2": [0, 4, 9], "global_atomic_pk_add_f16": [8, 9], "global_atomic_smax": [0, 4, 9], "global_atomic_smax_x2": [0, 4, 9], "global_atomic_smin": [0, 4, 9], "global_atomic_smin_x2": [0, 4, 9], "global_atomic_sub": [0, 4, 9], "global_atomic_sub_x2": [0, 4, 9], "global_atomic_swap": [0, 4, 9], "global_atomic_swap_x2": [0, 4, 9], "global_atomic_umax": [0, 4, 9], "global_atomic_umax_x2": [0, 4, 9], "global_atomic_umin": [0, 4, 9], "global_atomic_umin_x2": [0, 4, 9], "global_atomic_xor": [0, 4, 9], "global_atomic_xor_x2": [0, 4, 9], "global_begin": [611, 749], "global_buff": 591, "global_empty": 749, "global_end": 749, "global_iterator": 749, "global_load": 591, "global_load_dword": [0, 4, 9], "global_load_dwordx2": [0, 4, 9], "global_load_dwordx3": [0, 4, 9], "global_load_dwordx4": [0, 4, 9], "global_load_sbyt": [0, 4, 9], "global_load_sbyte_d16": [0, 4, 9], "global_load_sbyte_d16_h": [0, 4, 9], "global_load_short_d16": [0, 4, 9], "global_load_short_d16_h": [0, 4, 9], "global_load_sshort": [0, 4, 9], "global_load_ubyt": [0, 4, 9], "global_load_ubyte_d16": [0, 4, 9], "global_load_ubyte_d16_h": [0, 4, 9], "global_load_ushort": [0, 4, 9], "global_siz": 749, "global_store_byt": [0, 4, 9], "global_store_byte_d16_h": [0, 4, 9], "global_store_dword": [0, 4, 9], "global_store_dwordx2": [0, 4, 9], "global_store_dwordx3": [0, 4, 9], "global_store_dwordx4": [0, 4, 9], "global_store_short": [0, 4, 9], "global_store_short_d16_h": [0, 4, 9], "globalali": 788, "globalbuff": 591, "globaldc": 749, "globalisel": [608, 660, 688, 689, 690, 691, 692, 693, 694, 697, 698, 756], "globaliz": 642, "globallayoutbuild": 783, "globallisttyp": 749, "globally": [640, 661, 703, 714, 715, 770, 776], "globalref": 739, "globalrefssiz": 739, "globalsa": [726, 730], "globalstreamindex": 736, "globalt": 591, "globalvar": 598, "globalvari": [681, 788, 817], "globalvarnam": 715, "globl": [590, 591, 675, 729, 770], "glu": [608, 676], "gmail": [671, 747], "gmak": [780, 788], "gmir": [688, 690, 693, 694], "gmlt": 701, "gn": 772, "gninj": [779, 790], "gno": 591, "gnu": [586, 593, 606, 608, 611, 617, 618, 621, 622, 627, 631, 632, 641, 642, 643, 648, 650, 651, 653, 654, 655, 672, 673, 675, 679, 683, 699, 700, 701, 702, 703, 705, 715, 757, 786, 788, 815], "gnu_debuglink": 642, "gnu_hash": 765, "gnueab": 705, "gnueabihf": [705, 706], "gnuwin32": 606, "go": [595, 597, 600, 602, 606, 607, 608, 665, 667, 670, 671, 673, 678, 680, 683, 686, 694, 704, 707, 709, 715, 717, 723, 724, 726, 727, 728, 729, 730, 747, 749, 751, 753, 756, 759, 765, 766, 771, 772, 776, 779, 781, 786, 788, 790, 792, 809, 810, 811, 812, 814, 816, 817], "goal": [586, 601, 608, 610, 611, 621, 632, 640, 666, 669, 670, 673, 681, 698, 700, 701, 714, 718, 722, 727, 728, 738, 747, 762, 766, 768, 771, 774, 775, 776, 785, 791, 794, 814], "goat": 611, "goff": 715, "gofmt": 611, "going": [589, 594, 603, 606, 607, 608, 610, 611, 645, 669, 676, 680, 688, 694, 701, 704, 715, 726, 728, 730, 731, 744, 749, 751, 757, 758, 766, 769, 788, 789, 811, 812, 813, 814, 816, 818], "goingnat": 749, "gold": [606, 608, 683, 702, 733, 759, 784], "goldberg": 680, "goldberg91": 680, "golden": 611, "gon": 795, "goncharov": 747, "good": [594, 601, 602, 608, 610, 611, 612, 613, 640, 661, 662, 663, 664, 670, 674, 678, 679, 683, 686, 694, 701, 702, 704, 707, 714, 715, 716, 721, 723, 724, 727, 728, 729, 746, 747, 749, 753, 757, 758, 761, 765, 766, 770, 771, 776, 777, 786, 788, 810, 811, 812, 813, 814], "goodby": [722, 767], "goodwill": 610, "googl": [603, 662, 670, 672, 747, 753, 762, 766, 779, 781], "googleblog": 717, "googlegroup": 717, "googleprojectzero": 766, "googletest": 617, "gory": 670, "got": [591, 608, 646, 661, 683, 686, 714, 715, 749, 816], "gotload": 714, "goto": [611, 715, 727, 812, 813, 814, 815, 816], "gotos": 785, "gotpcrel": 675, "gotpcrel_norelax": 675, "gottarget": 714, "gov": 752, "govern": 715, "governed": 715, "gpg": 683, "gpgpu": 662, "gpl": [670, 676], "gplv2": 670, "gplv3": [670, 699], "gpr": [591, 608, 673, 688, 715, 721, 723, 776], "gpr64": 721, "gpr_idx": [213, 371, 483], "gprc": 608, "gpu": [279, 280, 291, 294, 295, 296, 585, 586, 588, 590, 591, 608, 662, 672, 729, 774, 784], "gpucc": 662, "gpus": [585, 586, 590, 591, 662, 715, 786], "gpz": 766, "gr": [715, 716], "gr1": 715, "gr16": 608, "gr32": [608, 765, 776, 777], "gr64": [608, 721, 765], "gr64_nosp": 765, "gr8": [608, 786], "grab": [749, 758], "gracefully": [717, 749, 772], "grad": 664, "gradient": 752, "gradually": [688, 694], "graduat": 670, "grain": [591, 715, 730], "grained": [728, 791], "grammar": [607, 674, 776, 809, 813], "grammatically": 809, "grand": 657, "grant": [670, 704, 727], "granted": [603, 670, 727, 794], "granting": 687, "granularity": [591, 698, 741, 766, 771], "granulated_lds_siz": 591, "granulated_wavefront_sgpr_count": 591, "granulated_workitem_vgpr_count": 591, "graph": [591, 599, 602, 605, 606, 608, 631, 645, 660, 667, 673, 683, 689, 714, 715, 716, 719, 730, 743, 755, 756, 765, 775, 780, 786, 788, 789, 810, 811, 812, 813, 814, 816], "graphic": [591, 717, 817], "graphical": [719, 813], "graphing": 789, "graphviz": [746, 749, 790], "gratitud": 744, "grayscal": 752, "grbm": 591, "great": [585, 586, 590, 591, 593, 597, 598, 600, 608, 611, 624, 626, 645, 646, 665, 670, 678, 680, 681, 689, 693, 704, 714, 715, 717, 724, 727, 729, 736, 738, 743, 746, 749, 761, 776, 786, 787, 788, 813, 818], "greatest": 586, "greatly": [606, 678, 682, 683, 710, 715, 749, 761, 765, 770], "greedy": [608, 618, 661, 696], "green": [670, 701, 753, 772], "greened": 751, "greenedistinguish": 753, "greenegitblam": 753, "greeting": 776, "gregg": 790, "grep": [606, 608, 612, 661, 683, 702, 728, 751, 780, 781, 815], "grepping": 780, "grey": [694, 758], "grid": 591, "griddim": 729, "gridsiz": 729, "gridsizex": 729, "gridsizey": 729, "grok": [676, 810], "grokabl": 611, "gross": 755, "ground": [609, 762], "groundwork": 754, "group": [585, 586, 589, 591, 598, 608, 612, 622, 632, 640, 649, 650, 660, 661, 666, 669, 670, 671, 682, 687, 694, 724, 727, 730, 736, 751, 755, 760, 771, 772, 774, 776, 777, 780, 786, 789, 817], "group_segment_alignment": 591, "group_segment_fixed_siz": 591, "grouped": [608, 611, 638, 650, 714, 715, 734, 746], "groupinfr": 671, "grouping": [604, 631, 636, 650, 793, 809], "groupsegmentfixedsiz": 591, "grow": [591, 608, 609, 610, 661, 670, 713, 715, 717, 723, 749, 776, 812], "growing": 749, "grown": [603, 749, 813, 817], "growth": [608, 715, 749, 761], "grpc": 717, "grpid": 598, "grunt": 661, "gs_op_cut": [27, 129, 220, 378, 490], "gs_op_em": [27, 129, 220, 378, 490], "gs_op_emit_cut": [27, 129, 220, 378, 490], "gs_op_nop": [27, 129, 220, 378, 490], "gsocgsoc": 671, "gsocobsolet": 671, "gsplit": 606, "gstess": 591, "gt": [626, 666, 729, 776], "gtcasl": 752, "gte": 715, "gtest_filt": 728, "gtu": 729, "gtx": 729, "guarante": [595, 608, 640, 665, 670, 673, 675, 676, 678, 681, 693, 714, 715, 726, 731, 746, 748, 749, 760, 765, 768, 770, 774, 783, 788, 814], "guaranteed": [594, 595, 598, 608, 611, 612, 661, 665, 683, 689, 700, 715, 716, 731, 733, 741, 746, 749, 766, 768, 770, 775], "guaranteedtailcallopt": 715, "guard": [675, 678, 700, 717, 719, 749, 761, 774, 788, 794], "guard_cond": [715, 719], "guard_condit": 715, "guarded": [715, 774], "guardedpoolallocator": 700, "guarding": 766, "guelton": 762, "guess": [606, 642, 714, 717, 753], "guessed": 811, "gui": [606, 685], "guid": [586, 600, 602, 606, 608, 609, 617, 662, 663, 664, 666, 669, 670, 682, 683, 684, 685, 702, 704, 705, 707, 715, 717, 728, 741, 747, 749, 750, 753, 756, 758, 765, 774, 776, 777, 786, 787, 793, 809, 815, 819], "guidanc": [603, 611, 664, 670, 678, 736], "guided": [593, 604, 647, 666, 681, 682, 756, 784], "guidelin": [670, 706, 749, 753, 766], "gunzip": 683, "gupt": 762, "gv": [715, 749], "gvn": [595, 678, 716, 788, 795, 796, 797, 811, 812, 813, 814], "gvneedslazyptr": 786, "gvnhoist": 726, "gvreg": [691, 693], "gwp": [756, 761], "gwp_asan": 700, "gwp_asan_opt": 700, "gwpasanallocator": 700, "gz": [683, 706, 758, 790], "gzip": [683, 790], "g\u00e9n\u00e9ral": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "h": [35, 107, 196, 279, 280, 291, 294, 295, 296, 301, 385, 457, 498, 571, 590, 591, 592, 597, 606, 611, 615, 617, 622, 627, 631, 634, 636, 638, 641, 642, 643, 644, 649, 650, 651, 653, 654, 655, 657, 660, 661, 667, 669, 673, 674, 679, 680, 683, 692, 699, 700, 708, 714, 715, 717, 718, 719, 727, 729, 730, 739, 741, 750, 755, 761, 765, 771, 774, 775, 783, 786, 787, 788, 789, 790, 794, 795, 796, 797, 810, 811, 812, 813, 814, 815, 816], "h264ref": 779, "hab": [611, 746], "hac": 766, "hack": [664, 670, 743, 747, 788, 816, 817, 818], "hackathon": 724, "hacking": [751, 788], "had": [585, 586, 591, 597, 600, 610, 617, 624, 640, 670, 685, 688, 701, 714, 715, 716, 722, 724, 729, 749, 751, 755, 757, 762, 763, 765, 767, 768, 771, 788, 792], "hainan": 591, "half": [589, 591, 598, 608, 611, 626, 645, 689, 717, 722, 749, 757, 767, 786, 795], "halfton": 752, "halfway": [715, 728], "halt": [591, 714], "halted": 591, "halting": 766, "halv": 674, "han": 707, "hand": [585, 586, 595, 608, 611, 668, 669, 680, 681, 683, 686, 708, 714, 715, 719, 721, 726, 727, 731, 735, 746, 749, 758, 760, 766, 771, 774, 776, 777, 781, 786, 792, 809, 810, 811, 813, 818], "handful": [662, 670, 711, 728, 749], "handily": 611, "handing": 731, "handl": [585, 590, 595, 597, 608, 612, 635, 661, 665, 668, 673, 677, 678, 680, 683, 691, 693, 700, 703, 708, 710, 715, 718, 729, 731, 740, 743, 746, 749, 751, 755, 757, 760, 765, 766, 768, 771, 785, 786, 788, 789, 791, 808, 809, 810, 811, 812, 813, 814, 815, 816], "handle_extens": 788, "handleallerror": 749, "handleattr": 611, "handleattrondecl": 611, "handled": [24, 127, 175, 217, 270, 375, 435, 487, 548, 589, 590, 591, 592, 608, 665, 670, 672, 673, 675, 693, 700, 713, 715, 718, 719, 731, 746, 749, 760, 762, 768, 786, 808, 809, 814], "handledefinit": [809, 810, 811, 812, 813, 814, 815, 816], "handleerror": 749, "handleextern": [809, 810, 811, 812, 813, 814, 815, 816], "handlefunctiondecl": 611, "handlelazycallthrougherror": [796, 797], "handlelazycompilefailur": 731, "handleotherdecl": 611, "handler": [591, 608, 611, 660, 665, 700, 715, 794], "handler0": 715, "handler1": 715, "handler2": 715, "handlerpcoffset": 677, "handletoplevelexpress": [809, 810, 811, 812, 813, 814, 815, 816], "handlevardecl": 611, "handling": [586, 591, 606, 620, 661, 663, 665, 679, 689, 710, 711, 721, 733, 756, 757, 760, 765, 766, 770, 771, 776, 786, 794, 809, 810, 811, 812, 813, 814, 815, 816, 817], "handy": [657, 731, 749, 767, 810], "hang": 689, "hao": 755, "happen": [585, 586, 590, 591, 592, 595, 601, 602, 608, 609, 610, 611, 612, 613, 665, 670, 677, 680, 686, 688, 689, 693, 694, 710, 714, 715, 717, 719, 720, 724, 726, 727, 728, 730, 731, 736, 741, 746, 747, 749, 751, 753, 765, 766, 769, 770, 772, 774, 792, 795, 810, 812, 816], "happened": [676, 690, 732, 751, 760, 768, 788, 809, 811], "happening": [608, 720, 749, 765], "happily": 811, "happy": [728, 747, 749, 750, 751, 814], "harassment": 609, "hard": [585, 602, 608, 611, 670, 673, 676, 678, 686, 701, 702, 705, 706, 715, 717, 743, 745, 746, 747, 750, 753, 765, 770, 771, 772, 777, 779, 792, 809, 813, 815], "hardcoded": [712, 786], "hardcodedcontiguousstorag": 749, "hardcodedsmallsiz": 749, "hardcoding": 710, "harddriv": 702, "harden": 766, "hardened": [700, 715, 725, 756, 762], "hardening": [715, 725, 756, 762], "hardwar": [20, 212, 370, 482, 595, 606, 608, 610, 620, 632, 640, 662, 670, 678, 701, 716, 725, 729, 761, 766, 786], "hardware_mapping": 591, "hardware_stag": 591, "hardwareassistedaddresssanitiz": 725, "hardwareloop": 715, "harfbuzz": 717, "harm": [608, 611], "harmed": 611, "harmful": 646, "harmless": [704, 746], "harness": 750, "harr": 752, "harvard": 715, "has": [288, 306, 308, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 617, 622, 623, 631, 632, 635, 638, 640, 642, 643, 645, 646, 649, 650, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 686, 688, 689, 690, 692, 693, 694, 696, 698, 700, 701, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 738, 739, 740, 741, 743, 744, 746, 747, 749, 751, 752, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 766, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "hasactivevectorlength": 715, "hasadsizeprefix": 777, "hasard": 680, "hascompletedecod": 776, "hasconflictingtyp": 736, "hasctrldep": [776, 777], "hasdelayslot": [776, 777], "haserror": 759, "hasevex_b": 776, "hasevex_k": 776, "hasevex_l2": 776, "hasevex_rc": 776, "hasevex_z": 776, "hasexternallinkag": 749, "hasextradefregallocreq": 776, "hasextrasrcregallocreq": 776, "hasfp": 786, "hasfparmv8": 777, "hasgc": 727, "hash": [591, 594, 608, 626, 645, 649, 650, 666, 670, 672, 715, 717, 727, 734, 741, 743, 744, 747, 748, 749, 751, 779, 789, 792, 817], "hash_data_count": 765, "hash_funct": 765, "hashadjbufferlength": 743, "hashadjbufferoffset": 743, "hashauxstreamindex": 743, "hashbufferlength": 743, "hashdat": 765, "hashed": 615, "hashes_count": 765, "hashfunctiontyp": 765, "hashing": [650, 727, 749], "hashkeysiz": 743, "hashstreamindex": 743, "hashvaluebufferlength": 743, "hashvaluebufferoffset": 743, "hasinitializ": 749, "hasinternallinkag": 749, "hasj": 786, "haskel": [715, 817], "haslockprefix": 776, "hasn": [610, 681, 749, 762, 788], "hasnam": [714, 749], "hasnoschedulinginfo": 776, "hasnotrackprefix": 776, "hason": 611, "hasopsizeprefix": 777, "haspostiselhook": 776, "hasrepprefix": 776, "hasrex_wprefix": [776, 777], "hassideeffect": [640, 776, 777], "hassse2": 776, "hassse3": 776, "hasunknowncall": 715, "hasvex_4v": 776, "hasvex_l": 776, "hasvex_w": 776, "haswel": 632, "hat": 792, "hatsiz": 792, "haut": 793, "hav": [20, 27, 120, 129, 209, 212, 220, 314, 370, 378, 479, 482, 490, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 615, 617, 622, 624, 626, 629, 632, 636, 640, 641, 642, 645, 655, 659, 661, 662, 664, 665, 666, 667, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 685, 686, 688, 689, 690, 691, 693, 694, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 741, 743, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "haveactivevectorlength": 754, "haven": [611, 690, 715, 730, 762, 772, 786, 788, 789, 790], "having": [585, 586, 591, 594, 595, 598, 602, 608, 610, 611, 640, 661, 665, 670, 672, 673, 675, 680, 683, 685, 688, 693, 698, 701, 702, 710, 711, 715, 717, 720, 723, 727, 731, 732, 736, 743, 747, 749, 751, 755, 759, 765, 766, 770, 771, 772, 774, 781, 782, 786, 788, 790, 792, 795, 809, 810, 813, 814], "havlak": 667, "havlakcycl": 667, "havoq": 752, "hawai": 591, "hazard": [640, 716], "hazardous": 766, "hblcnsviw": 661, "hd": [591, 662], "hd2xxx": 591, "hd6xxx": 591, "hdl": 665, "he": 781, "head": [585, 593, 595, 598, 606, 635, 642, 643, 644, 645, 649, 650, 654, 660, 661, 662, 664, 667, 669, 671, 675, 676, 677, 678, 680, 682, 683, 685, 686, 692, 697, 708, 714, 715, 719, 721, 728, 735, 746, 747, 749, 750, 751, 757, 759, 768, 771, 772, 774, 775, 776, 780, 782, 786, 787, 789, 790, 794, 796, 812, 813, 814, 815, 816, 820], "headach": 758, "headed": [593, 715], "header": [585, 586, 606, 625, 642, 643, 644, 645, 649, 650, 654, 669, 670, 672, 685, 703, 706, 715, 719, 720, 736, 749, 757, 761, 774, 786], "header0": 715, "header_dat": 765, "header_data_len": 765, "headerblock": 744, "headerdat": 765, "headersiz": 743, "heading": [722, 767], "headlight": 611, "heal": 677, "healing": 677, "healthy": 670, "heap": [594, 700, 715, 716, 756, 761, 764, 766, 768, 770, 792, 814, 817], "heard": [662, 672], "heart": 770, "heartbleed": 717, "heartfelt": 744, "heartwall": 752, "heavi": 670, "heavily": [591, 645, 680, 749, 765, 766, 784, 817], "heavy": [749, 770, 795], "heavyweight": 749, "heffernan": 662, "held": [585, 586, 597, 670, 715, 731, 747, 761], "helllo": 781, "hello": [607, 666, 683, 714, 715, 774, 775, 776, 781], "hello_world": 591, "hellooooooooooooooo": 700, "helloworld": [607, 705, 787], "helloworldpass": 787, "helo": 781, "help": [585, 590, 591, 594, 595, 601, 602, 603, 604, 606, 610, 611, 612, 613, 615, 616, 617, 618, 620, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 640, 641, 642, 643, 644, 646, 649, 650, 651, 653, 654, 655, 657, 659, 660, 663, 665, 669, 670, 671, 674, 678, 680, 683, 693, 694, 700, 701, 702, 704, 707, 709, 711, 714, 715, 717, 718, 720, 723, 726, 728, 730, 733, 747, 749, 751, 752, 753, 754, 758, 760, 761, 762, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 779, 781, 786, 788, 790, 791, 792, 794, 809, 810, 811, 812, 813, 814, 815, 816, 817], "helped": [670, 771], "helper": [660, 679, 727, 749, 781], "helpful": [592, 597, 602, 610, 611, 612, 617, 661, 672, 684, 704, 714, 715, 726, 790, 794], "helping": [609, 709], "henc": [591, 611, 661, 665, 667, 683, 715, 718, 719, 768, 776], "henceforth": [739, 743, 764], "henderson": 753, "henderson2002": 680, "hendersonprefix": 753, "henrik": 771, "her": [52, 53, 143, 238, 239, 401, 402, 514, 515, 585, 586, 589, 590, 591, 594, 595, 601, 602, 606, 607, 608, 611, 612, 621, 622, 640, 645, 646, 661, 662, 666, 668, 670, 672, 673, 676, 678, 680, 681, 682, 683, 685, 686, 688, 692, 694, 700, 701, 702, 703, 704, 705, 707, 708, 710, 712, 714, 715, 716, 717, 718, 719, 720, 721, 724, 726, 727, 729, 731, 735, 736, 741, 744, 747, 749, 751, 753, 757, 760, 761, 762, 763, 764, 765, 766, 768, 770, 771, 774, 775, 776, 777, 779, 780, 782, 784, 786, 787, 788, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820], "hereby": 611, "hertz": 791, "heterogeneous": [591, 784], "heuristic": [608, 715, 746, 782, 789, 791, 814], "heuristically": 782, "hex": [612, 640, 641, 643, 645, 649, 650, 651, 715, 717], "hex16": 792, "hex32": 792, "hex64": 792, "hex8": 792, "hex_numb": 591, "hex_valu": 632, "hexadecimal": [590, 591, 621, 638, 641, 645, 649, 650, 651, 653, 661, 715, 792], "hexagon": [608, 683, 715, 753, 774], "hexinteg": 776, "hfc": 677, "hh": 590, "hh567368": 611, "hi": [590, 680, 688, 717, 718, 749], "hi16": 608, "hid": [586, 632, 661, 665, 731, 751, 770, 776], "hidden": [585, 586, 591, 598, 608, 611, 616, 626, 642, 644, 661, 711, 713, 714, 715, 728, 736, 749, 751, 765, 782, 783, 788], "hidden_block_count_x": 591, "hidden_block_count_y": 591, "hidden_block_count_z": 591, "hidden_completion_act": 591, "hidden_default_queu": 591, "hidden_global_offset_x": 591, "hidden_global_offset_y": 591, "hidden_global_offset_z": 591, "hidden_grid_dim": 591, "hidden_group_size_x": 591, "hidden_group_size_y": 591, "hidden_group_size_z": 591, "hidden_hostcall_buff": 591, "hidden_multigrid_sync_arg": 591, "hidden_non": 591, "hidden_printf_buff": 591, "hidden_private_bas": 591, "hidden_queue_ptr": 591, "hidden_remainder_x": 591, "hidden_remainder_y": 591, "hidden_remainder_z": 591, "hidden_shared_bas": 591, "hiddencompletionact": 591, "hiddendefaultqueu": 591, "hiddenglobaloffsetx": 591, "hiddenglobaloffsety": 591, "hiddenglobaloffsetz": 591, "hiddenhostcallbuff": 591, "hiddenmultigridsyncarg": 591, "hiddennon": 591, "hiddenprintfbuff": 591, "hideak": 608, "hiding": 776, "hierarch": 617, "hierarchical": [598, 669, 746, 755], "hierarchy": [617, 640, 667, 674, 683, 709, 715, 719, 730, 755, 756, 776, 783, 810], "hiet": 762, "high": [0, 3, 4, 120, 288, 306, 308, 479, 584, 586, 590, 591, 593, 594, 596, 598, 600, 603, 606, 610, 632, 640, 645, 662, 664, 665, 668, 670, 672, 673, 674, 678, 679, 680, 681, 682, 689, 694, 700, 701, 704, 707, 714, 720, 724, 725, 726, 727, 729, 731, 733, 740, 743, 746, 748, 749, 750, 756, 765, 768, 770, 772, 775, 776, 781, 782, 783, 785, 786, 789, 791, 793, 794, 796, 809, 814, 817, 818], "highest": [585, 586, 591, 597, 689, 715, 809, 810, 811, 812, 813, 814, 815, 816], "highlight": [585, 607, 666, 678, 688, 722, 749, 790, 816], "highlighted": [608, 640], "highlighting": [683, 701, 722, 767, 810], "highly": [591, 608, 610, 662, 670, 678, 680, 701, 704, 715, 717, 724, 749, 750, 761, 766, 782, 796, 814], "highproductivity": 752, "hihih": 749, "him": 727, "hint": [591, 602, 611, 643, 644, 655, 678, 681, 782, 810], "hip": [591, 608, 715], "hiraditi": 752, "his": 749, "histogram": [639, 640, 649, 650, 752], "histor": 751, "historical": [611, 681, 749, 770, 781], "historically": [593, 607, 611, 715], "history": [670, 683, 686, 701, 728, 744, 747], "hit": [640, 701, 717, 726, 749, 766], "hitherto": 598, "hitting": 599, "hmmer": 779, "hoc": [585, 586, 601, 608, 746, 749], "hoist": [594, 611, 715, 726, 746, 768, 782, 788], "hoistcommoncodeinsucc": 710, "hoisted": [591, 594, 611, 710, 715, 726, 746, 749, 768], "hoisting": [595, 710, 719, 726, 746, 768, 788], "hol": [661, 715, 766, 770], "hold": [585, 586, 590, 591, 593, 604, 608, 609, 661, 670, 673, 675, 680, 683, 714, 715, 717, 720, 727, 731, 743, 746, 749, 750, 755, 759, 761, 765, 766, 774, 775, 776, 777, 786, 791, 808, 809, 810, 811, 812, 813, 814, 815, 816], "holder": 670, "holding": [673, 721, 765, 774, 781, 788, 810], "holiday": 610, "hollow": 792, "hom": [678, 683, 702, 749, 752, 761, 765, 780, 781], "homeless": 749, "homepag": [683, 685], "honour": 675, "honoured": 675, "hood": 666, "hook": [585, 586, 595, 602, 608, 690, 715, 721, 730, 750, 751, 812], "hooked": 673, "hop": [610, 670, 680, 701, 727, 745], "hopefully": [594, 598, 611, 661, 662, 746, 788, 795, 811], "horizontal": [612, 640, 689, 715], "horn": 766, "horribl": 810, "host": [591, 593, 604, 606, 608, 611, 620, 622, 627, 632, 640, 680, 685, 701, 704, 706, 714, 715, 720, 729, 731, 749, 751, 752, 762, 779, 781, 794, 815, 816], "host_fn": 662, "host_install_d": 705, "host_only": 662, "hostb": 729, "hostc": 729, "hostcall": 591, "hosted": [670, 682, 683, 749, 751, 779], "hosting": [747, 751], "hostnam": 779, "hot": [599, 646, 678, 715, 766, 770], "hotfix": 751, "hotness": [715, 759], "hotspot3d": 752, "hott": 599, "hottest": [646, 715], "hour": [593, 610, 670, 686, 701, 760], "hous": 716, "how": [27, 129, 220, 378, 490, 586, 589, 591, 595, 596, 597, 598, 599, 600, 602, 603, 604, 606, 607, 611, 612, 616, 617, 632, 645, 655, 661, 662, 665, 666, 667, 668, 669, 670, 672, 673, 674, 678, 680, 682, 683, 684, 685, 686, 693, 695, 714, 715, 716, 719, 721, 722, 726, 728, 729, 732, 733, 736, 744, 746, 747, 749, 750, 751, 753, 755, 756, 757, 760, 761, 763, 766, 768, 770, 772, 777, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819], "howev": [585, 586, 591, 592, 594, 595, 597, 598, 602, 607, 608, 610, 611, 612, 617, 622, 640, 661, 662, 665, 669, 670, 671, 673, 675, 676, 677, 680, 681, 683, 688, 689, 690, 693, 699, 701, 703, 706, 707, 708, 710, 712, 713, 714, 715, 717, 719, 720, 721, 722, 730, 731, 732, 735, 743, 745, 747, 749, 751, 753, 755, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 780, 781, 783, 785, 788, 796, 810, 811, 812, 813, 814, 817], "howto": [706, 722, 767, 819], "howtosubmitabug": 683, "howtousej": 625, "howtousellj": 731, "hpc": 586, "hpgmg": 752, "hpp": 673, "hresult": 743, "hrf": 591, "hsa": 586, "hsail": 591, "hsail_major_vers": 591, "hsail_minor_vers": 591, "hsatext": 591, "hsl": 752, "ht206167": 717, "htm": 752, "html": [606, 611, 626, 632, 660, 666, 674, 683, 704, 705, 706, 707, 710, 715, 717, 729, 751, 752, 753, 754, 757, 758, 759, 765, 766, 767, 774, 779, 780, 794], "http": [596, 606, 610, 611, 634, 635, 636, 638, 642, 643, 644, 651, 653, 654, 666, 679, 682, 683, 685, 686, 701, 703, 704, 705, 706, 707, 708, 715, 717, 728, 747, 751, 752, 753, 754, 757, 758, 763, 766, 779, 780, 789, 794, 795, 796, 797, 819], "hug": [611, 670, 683, 685, 717, 735, 743, 774, 777, 781], "huge16": 735, "hugepoint": 743, "hull": 591, "human": [605, 609, 611, 623, 624, 626, 630, 631, 637, 639, 646, 655, 683, 700, 710, 715, 721, 746, 766, 777, 781, 788, 792], "hundred": 678, "hundt": 662, "hung": 749, "hunt": 762, "hurdl": 676, "hurt": 611, "hw": [591, 617, 715], "hw_reg_flat_scr_h": 20, "hw_reg_flat_scr_lo": 20, "hw_reg_gpr_alloc": [20, 123, 212, 370, 482], "hw_reg_hw_id": [123, 212, 370, 482], "hw_reg_hw_id1": 20, "hw_reg_hw_id2": 20, "hw_reg_ib_st": [20, 123, 212, 370, 482], "hw_reg_lds_alloc": [20, 123, 212, 370, 482], "hw_reg_mod": [20, 123, 212, 370, 482], "hw_reg_pops_pack": 20, "hw_reg_sh_mem_bas": [20, 370, 482], "hw_reg_status": [20, 123, 212, 370, 482], "hw_reg_tba_h": 20, "hw_reg_tba_lo": 20, "hw_reg_tma_h": 20, "hw_reg_tma_lo": 20, "hw_reg_trapst": [20, 123, 212, 370, 482], "hw_reg_xnack_mask": 20, "hwaddresssanitiz": 715, "hwreg": [0, 2, 3, 4, 9], "hwreg_enc": [20, 123, 212, 370, 482], "hybrid": 766, "hydr": 593, "hydro": 752, "hyp": 753, "hypersparc": 786, "hyphen": [776, 786], "hypothesized": 739, "hypothetical": [585, 586, 608, 673, 727, 731, 740, 749, 770, 788], "hypothetically": 688, "h\u00e4hnle": 753, "h\u00e4hnledistinguish": 753, "i": [585, 586, 589, 591, 594, 595, 596, 598, 599, 602, 604, 605, 606, 607, 608, 611, 612, 613, 621, 622, 626, 627, 631, 632, 640, 641, 642, 644, 646, 649, 650, 654, 655, 660, 661, 665, 666, 669, 670, 673, 675, 677, 680, 682, 683, 688, 689, 690, 700, 701, 706, 708, 709, 714, 715, 717, 718, 719, 721, 722, 724, 726, 728, 729, 731, 740, 746, 747, 748, 749, 751, 753, 756, 760, 761, 765, 767, 768, 770, 771, 774, 776, 777, 779, 781, 782, 783, 785, 786, 788, 790, 795, 809, 810, 811, 812, 813, 814, 815, 816, 817], "i0": 786, "i1": [599, 608, 665, 676, 677, 688, 710, 715, 719, 726, 729, 765, 782, 783, 786, 810, 812, 814], "i100": 715, "i16": [0, 3, 4, 9, 590, 608, 710, 715, 729, 786], "i16x2": [1, 7, 8, 9], "i17": 688, "i19": 715, "i1942652": 715, "i2": [608, 710, 715, 719, 786], "i20": 715, "i24": 715, "i256": 715, "i29": 715, "i3": [608, 786], "i32": [0, 1, 2, 3, 4, 7, 8, 9, 590, 597, 599, 600, 608, 612, 665, 666, 673, 676, 677, 680, 688, 689, 690, 692, 693, 710, 712, 713, 715, 719, 721, 722, 727, 729, 732, 746, 748, 749, 765, 767, 768, 770, 777, 781, 783, 786, 787, 789, 814, 817], "i32imm": [776, 786], "i32mem": 776, "i32x16": [8, 9], "i32x32": [8, 9], "i32x4": [8, 9], "i37": 715, "i386": [608, 642, 655, 715, 757], "i4": [715, 786], "i42": 715, "i48": 715, "i4x8": [1, 7, 8, 9], "i5": 786, "i6": 786, "i64": [0, 2, 3, 4, 9, 590, 597, 600, 608, 612, 665, 666, 681, 715, 729, 732, 748, 768, 770, 777, 783, 786], "i64imm": 786, "i65": 715, "i67": 715, "i686": [608, 612, 781], "i7": [701, 715, 786], "i8": [595, 597, 608, 612, 665, 666, 673, 680, 688, 690, 710, 713, 715, 726, 729, 732, 765, 768, 770, 777, 783, 786], "i8086": 815, "i8mem": 608, "i8x4": [1, 7, 8, 9], "i_intr_llvm_ptrmask": 689, "ia": 663, "iac": 640, "iaddroff": 608, "iamcu": 642, "iat": 703, "ib": 703, "ibc": 703, "ibm": [669, 757], "ic": [602, 682, 753], "icc": [683, 765, 785], "icc_e": 786, "icc_g": 786, "icc_ne": 786, "icc_val": 786, "ice": [683, 716], "iceland": 591, "icmp": [598, 665, 677, 719, 749, 765], "icmp_eq": 721, "icmpinst": 749, "icon": 747, "iconst": [12, 13, 58, 61, 65, 76, 148, 149, 156, 166, 170, 245, 246, 248, 253, 264, 331, 332, 346, 347, 348, 408, 409, 411, 412, 414, 415, 416, 417, 428, 521, 523, 524, 526, 540], "icu": 717, "id": [20, 27, 123, 129, 212, 220, 370, 378, 482, 490, 585, 586, 589, 594, 606, 608, 612, 632, 634, 640, 643, 644, 645, 671, 675, 689, 708, 721, 727, 729, 736, 749, 751, 761, 763, 768, 770, 775, 776, 786, 788, 790, 791, 809, 810, 811, 812, 813, 814, 815, 816], "id1": 689, "id2": 689, "idat": 641, "ide": [593, 598, 599, 606, 607, 611, 640, 661, 665, 669, 670, 673, 674, 678, 685, 686, 702, 715, 724, 727, 728, 746, 747, 752, 753, 758, 765, 766, 790, 794, 809, 810, 811, 812, 814, 817, 818], "ideal": 749, "ideally": [640, 670, 686, 687, 715, 717, 724, 770, 786], "ident": [765, 781], "ident_t": 715, "identical": [585, 586, 593, 597, 608, 611, 612, 622, 628, 693, 706, 710, 715, 716, 721, 727, 736, 743, 749, 761, 765, 774, 790, 811, 812, 814], "identically": [612, 715], "identif": [585, 586, 591, 598, 617, 634, 640, 673, 675, 681, 683, 706, 715, 716, 721, 736, 743, 751, 761, 765, 783, 785, 786], "identifi": [585, 586, 598, 608, 611, 612, 681, 721, 723, 729, 741, 746, 748, 749, 751, 753, 770, 774, 781, 782, 783, 786, 788, 789, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816], "identified": [27, 129, 220, 378, 490, 585, 586, 598, 603, 605, 606, 610, 611, 617, 640, 661, 669, 675, 680, 694, 715, 719, 721, 736, 746, 749, 759, 765, 786], "identifierexpr": [809, 810, 811, 812, 813, 814, 815, 816], "identifierstr": [808, 809, 810, 811, 812, 813, 814, 815, 816], "identify": [591, 602, 611, 617, 640, 657, 660, 673, 680, 700, 708, 710, 714, 715, 716, 746, 747, 748, 749, 751, 753, 755, 758, 765, 766, 768, 770, 783, 785, 786, 788], "identifycudapreferent": 662, "identifying": [598, 609, 640, 665, 710, 715, 721, 753, 770], "identit": [608, 609, 746, 760, 783], "identity": [591, 608, 609, 665, 680, 715, 783], "identitytransform": 795, "idiom": [661, 662, 665, 708, 749, 755, 766, 810], "idiomatic": [611, 749, 755, 781], "idiosyncras": 772, "idiv": 608, "idnam": [809, 810, 811, 812, 813, 814, 815, 816], "idx": [611, 632, 681, 689, 715, 721, 774, 790, 810, 811, 812, 813, 814, 815, 816], "idx0": 715, "idx1": [681, 715], "idx2": 681, "idx3": 681, "idxen": [0, 2, 3, 4, 8, 9, 85, 176, 271, 352, 436, 549, 591], "idxmask": 715, "ie": [606, 661, 715, 726], "iee": [591, 618, 662, 678, 689, 715, 757, 774], "ieee754": 715, "ieee_mod": 591, "if": [18, 27, 28, 31, 32, 36, 37, 38, 42, 55, 66, 74, 83, 84, 85, 86, 93, 96, 97, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 117, 129, 130, 145, 157, 176, 186, 187, 189, 190, 191, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 211, 220, 221, 254, 271, 281, 282, 283, 286, 287, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 340, 341, 352, 354, 355, 368, 378, 379, 381, 382, 386, 387, 388, 404, 434, 436, 444, 447, 448, 451, 452, 455, 456, 457, 467, 468, 469, 470, 471, 472, 481, 490, 491, 494, 495, 499, 500, 501, 517, 547, 549, 557, 560, 561, 564, 565, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 608, 609, 610, 612, 613, 615, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 653, 654, 655, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 685, 686, 687, 688, 689, 692, 693, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 728, 729, 730, 731, 732, 733, 735, 736, 738, 739, 740, 741, 743, 744, 746, 747, 748, 749, 750, 751, 755, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 777, 779, 780, 781, 782, 783, 784, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818], "if_1_then": 591, "ifbody": 776, "ifcond": [812, 813, 814, 815, 816], "ifcont": [812, 813, 814, 815, 816], "ifconvers": 786, "ifconvert": 786, "ifdef": [661, 662, 666, 700, 717, 771, 774, 776, 811, 812, 813, 814, 815, 816, 817], "ifequal": 715, "ifexpr": [812, 813, 814, 815, 816], "ifexprast": [812, 813, 814, 815, 816], "iff": [693, 715], "iffals": 715, "ifiqu": 661, "ifloc": 816, "ifndef": [662, 775, 776, 787, 794, 795, 796, 797], "ifstream": 729, "iftmp": [812, 813, 814, 815, 816], "iftru": 715, "ifunc": 598, "ifuncty": 715, "ifunequal": 715, "ignor": [585, 586, 590, 608, 612, 617, 621, 624, 626, 631, 632, 635, 636, 639, 642, 654, 661, 670, 682, 683, 715, 723, 731, 753, 757, 765, 789, 795, 808, 809, 810, 811, 812, 813, 814, 815, 816], "ignore_crash": 717, "ignore_oom": 717, "ignore_remaining_arg": 679, "ignore_timeout": 717, "ignored": [35, 107, 145, 196, 301, 385, 457, 498, 571, 591, 594, 598, 599, 612, 622, 628, 629, 634, 640, 642, 643, 649, 651, 653, 665, 669, 677, 686, 715, 717, 721, 727, 736, 741, 749, 765, 782, 785, 786], "ignoresvex_l": 776, "ignoresvex_w": 776, "ignoring": [591, 599, 612, 645, 715], "ihex": 642, "ii": 749, "ii32": 776, "ilbdc": 752, "ill": [585, 586, 622, 700], "illegal": [176, 585, 586, 591, 608, 661, 676, 681, 693, 694, 715, 729, 746, 749, 751, 785], "illinois": [670, 752], "illustr": [669, 765], "illustrat": [585, 591, 597, 655, 661, 669, 715, 718, 719, 749, 751, 765, 776, 809, 810, 814], "illustrated": [665, 715, 719, 785, 788, 808], "illustrating": 776, "ilp": [640, 785], "ilp32": 817, "im": [595, 715], "imac": 785, "imag": [66, 68, 84, 96, 97, 98, 99, 112, 113, 114, 157, 159, 175, 186, 187, 188, 201, 202, 254, 256, 270, 286, 287, 288, 289, 306, 307, 308, 418, 420, 435, 447, 448, 449, 450, 469, 470, 530, 532, 548, 560, 561, 562, 563, 576, 577, 578, 589, 590, 608, 639, 641, 642, 643, 645, 675, 715, 720, 741, 774, 813], "image_atomic_add": [0, 2, 3, 4, 9], "image_atomic_and": [0, 2, 3, 4, 9], "image_atomic_cmpswap": [0, 2, 3, 4, 9], "image_atomic_dec": [0, 2, 3, 4, 9], "image_atomic_fcmpswap": [0, 2], "image_atomic_fmax": [0, 2], "image_atomic_fmin": [0, 2], "image_atomic_inc": [0, 2, 3, 4, 9], "image_atomic_or": [0, 2, 3, 4, 9], "image_atomic_smax": [0, 2, 3, 4, 9], "image_atomic_smin": [0, 2, 3, 4, 9], "image_atomic_sub": [0, 2, 3, 4, 9], "image_atomic_swap": [0, 2, 3, 4, 9], "image_atomic_umax": [0, 2, 3, 4, 9], "image_atomic_umin": [0, 2, 3, 4, 9], "image_atomic_xor": [0, 2, 3, 4, 9], "image_comdat_select_associ": 715, "image_comdat_select_largest": 715, "image_debug_directory": 741, "image_debug_type_codeview": 741, "image_debug_type_except": 736, "image_debug_type_fixup": 736, "image_debug_type_fpo": 736, "image_debug_type_omap_from_src": 736, "image_debug_type_omap_to_src": 736, "image_file_32bit_machin": 820, "image_file_aggressive_ws_trim": 820, "image_file_bytes_reversed_h": 820, "image_file_bytes_reversed_lo": 820, "image_file_debug_stripped": 820, "image_file_dll": 820, "image_file_executable_imag": 820, "image_file_large_address_awar": 820, "image_file_line_nums_stripped": 820, "image_file_local_syms_stripped": 820, "image_file_machine_am33": 820, "image_file_machine_amd64": 820, "image_file_machine_arm": 820, "image_file_machine_arm64": 820, "image_file_machine_armnt": 820, "image_file_machine_ebc": 820, "image_file_machine_i386": 820, "image_file_machine_ia64": 820, "image_file_machine_m32r": 820, "image_file_machine_mips16": 820, "image_file_machine_mipsfpu": 820, "image_file_machine_mipsfpu16": 820, "image_file_machine_powerpc": 820, "image_file_machine_powerpcfp": 820, "image_file_machine_r4000": 820, "image_file_machine_sh3": 820, "image_file_machine_sh3dsp": 820, "image_file_machine_sh4": 820, "image_file_machine_sh5": 820, "image_file_machine_thumb": 820, "image_file_machine_unknown": 820, "image_file_machine_wcemipsv2": 820, "image_file_net_run_from_swap": 820, "image_file_relocs_stripped": 820, "image_file_removable_run_from_swap": 820, "image_file_system": 820, "image_file_up_system_only": 820, "image_gather4": [0, 2, 3, 4, 112, 201, 306, 576], "image_gather4_b": [0, 2, 3, 4], "image_gather4_b_cl": [0, 2, 3, 4], "image_gather4_b_cl_o": [0, 2, 3, 4], "image_gather4_b_o": [0, 2, 3, 4], "image_gather4_c": [0, 2, 3, 4], "image_gather4_c_b": [0, 2, 3, 4], "image_gather4_c_b_cl": [0, 2, 3, 4], "image_gather4_c_b_cl_o": [0, 2, 3, 4], "image_gather4_c_b_o": [0, 2, 3, 4], "image_gather4_c_cl": [0, 2, 3, 4], "image_gather4_c_cl_o": [0, 2, 3, 4], "image_gather4_c_l": [0, 2, 3, 4], "image_gather4_c_l_o": [0, 2, 3, 4], "image_gather4_c_lz": [0, 2, 3, 4], "image_gather4_c_lz_o": [0, 2, 3, 4], "image_gather4_c_o": [0, 2, 3, 4], "image_gather4_cl": [0, 2, 3, 4], "image_gather4_cl_o": [0, 2, 3, 4], "image_gather4_l": [0, 2, 3, 4], "image_gather4_l_o": [0, 2, 3, 4], "image_gather4_lz": [0, 2, 3, 4], "image_gather4_lz_o": [0, 2, 3, 4], "image_gather4_o": [0, 2, 3, 4], "image_get_lod": [0, 2, 3, 4], "image_get_resinfo": [0, 2, 3, 4, 9], "image_load": [0, 2, 3, 4, 9], "image_load_mip": [0, 2, 3, 4, 9], "image_load_mip_pck": [0, 2, 3, 4, 9], "image_load_mip_pck_sgn": [0, 2, 3, 4, 9], "image_load_pck": [0, 2, 3, 4, 9], "image_load_pck_sgn": [0, 2, 3, 4, 9], "image_rel_amd64_addr32nb": 675, "image_rel_amd64_secrel": 675, "image_rel_amd64_sect": 675, "image_rel_arm64_secrel_high12": 675, "image_rel_arm64_secrel_low12": 675, "image_rel_arm64_secrel_low12l": 675, "image_rel_i386_dir32nb": 675, "image_rel_i386_secrel": 675, "image_rel_i386_sect": 675, "image_sampl": [0, 2, 3, 4, 9], "image_sample_b": [0, 2, 3, 4], "image_sample_b_cl": [0, 2, 3, 4], "image_sample_b_cl_o": [0, 2, 3, 4], "image_sample_b_o": [0, 2, 3, 4], "image_sample_c": [0, 2, 3, 4], "image_sample_c_b": [0, 2, 3, 4], "image_sample_c_b_cl": [0, 2, 3, 4], "image_sample_c_b_cl_o": [0, 2, 3, 4], "image_sample_c_b_o": [0, 2, 3, 4], "image_sample_c_cd": [0, 2, 3, 4], "image_sample_c_cd_cl": [0, 2, 3, 4], "image_sample_c_cd_cl_g16": 0, "image_sample_c_cd_cl_o": [0, 2, 3, 4], "image_sample_c_cd_cl_o_g16": 0, "image_sample_c_cd_g16": 0, "image_sample_c_cd_o": [0, 2, 3, 4], "image_sample_c_cd_o_g16": 0, "image_sample_c_cl": [0, 2, 3, 4], "image_sample_c_cl_o": [0, 2, 3, 4], "image_sample_c_d": [0, 2, 3, 4], "image_sample_c_d_cl": [0, 2, 3, 4], "image_sample_c_d_cl_g16": 0, "image_sample_c_d_cl_o": [0, 2, 3, 4], "image_sample_c_d_cl_o_g16": 0, "image_sample_c_d_g16": 0, "image_sample_c_d_o": [0, 2, 3, 4], "image_sample_c_d_o_g16": 0, "image_sample_c_l": [0, 2, 3, 4], "image_sample_c_l_o": [0, 2, 3, 4], "image_sample_c_lz": [0, 2, 3, 4], "image_sample_c_lz_o": [0, 2, 3, 4], "image_sample_c_o": [0, 2, 3, 4], "image_sample_cd": [0, 2, 3, 4], "image_sample_cd_cl": [0, 2, 3, 4], "image_sample_cd_cl_g16": 0, "image_sample_cd_cl_o": [0, 2, 3, 4], "image_sample_cd_cl_o_g16": 0, "image_sample_cd_g16": 0, "image_sample_cd_o": [0, 2, 3, 4], "image_sample_cd_o_g16": 0, "image_sample_cl": [0, 2, 3, 4], "image_sample_cl_o": [0, 2, 3, 4], "image_sample_d": [0, 2, 3, 4], "image_sample_d_cl": [0, 2, 3, 4], "image_sample_d_cl_g16": 0, "image_sample_d_cl_o": [0, 2, 3, 4], "image_sample_d_cl_o_g16": 0, "image_sample_d_g16": 0, "image_sample_d_o": [0, 2, 3, 4], "image_sample_d_o_g16": 0, "image_sample_l": [0, 2, 3, 4], "image_sample_l_o": [0, 2, 3, 4], "image_sample_lz": [0, 2, 3, 4], "image_sample_lz_o": [0, 2, 3, 4], "image_sample_o": [0, 2, 3, 4], "image_scn_align_1024byt": 820, "image_scn_align_128byt": 820, "image_scn_align_16byt": 820, "image_scn_align_1byt": 820, "image_scn_align_2048byt": 820, "image_scn_align_256byt": 820, "image_scn_align_2byt": 820, "image_scn_align_32byt": 820, "image_scn_align_4096byt": 820, "image_scn_align_4byt": 820, "image_scn_align_512byt": 820, "image_scn_align_64byt": 820, "image_scn_align_8192byt": 820, "image_scn_align_8byt": 820, "image_scn_cnt_cod": [642, 820], "image_scn_cnt_initialized_dat": [642, 675, 820], "image_scn_cnt_uninitialized_dat": [642, 675, 820], "image_scn_gprel": 820, "image_scn_lnk_comdat": 820, "image_scn_lnk_info": [641, 820], "image_scn_lnk_nreloc_ovfl": 820, "image_scn_lnk_oth": 820, "image_scn_lnk_remov": [642, 675, 820], "image_scn_mem_16b": 820, "image_scn_mem_discard": [642, 675, 820], "image_scn_mem_execut": [642, 820], "image_scn_mem_locked": 820, "image_scn_mem_not_cached": 820, "image_scn_mem_not_paged": 820, "image_scn_mem_preload": 820, "image_scn_mem_purge": 820, "image_scn_mem_read": [642, 820], "image_scn_mem_shared": [642, 820], "image_scn_mem_writ": [642, 820], "image_scn_type_no_pad": 820, "image_section_head": 736, "image_stor": [0, 2, 3, 4, 9, 98, 99, 188, 288, 289, 449, 450, 562, 563], "image_store_mip": [0, 2, 3, 4, 9], "image_store_mip_pck": [0, 2, 3, 4, 9], "image_store_pck": [0, 2, 3, 4, 9], "image_sym_class_argu": 820, "image_sym_class_automatic": 820, "image_sym_class_bit_field": 820, "image_sym_class_block": 820, "image_sym_class_clr_token": 820, "image_sym_class_end_of_funct": 820, "image_sym_class_end_of_struct": 820, "image_sym_class_enum_tag": 820, "image_sym_class_external": 820, "image_sym_class_external_def": 820, "image_sym_class_fil": 820, "image_sym_class_funct": 820, "image_sym_class_label": 820, "image_sym_class_member_of_enum": 820, "image_sym_class_member_of_struct": 820, "image_sym_class_member_of_union": 820, "image_sym_class_null": 820, "image_sym_class_regist": 820, "image_sym_class_register_param": 820, "image_sym_class_sect": 820, "image_sym_class_static": 820, "image_sym_class_struct_tag": 820, "image_sym_class_type_definit": 820, "image_sym_class_undefined_label": 820, "image_sym_class_undefined_static": 820, "image_sym_class_union_tag": 820, "image_sym_class_weak_external": 820, "image_sym_dtype_array": 820, "image_sym_dtype_funct": 820, "image_sym_dtype_null": 820, "image_sym_dtype_point": 820, "image_sym_type_byt": 820, "image_sym_type_char": 820, "image_sym_type_doubl": 820, "image_sym_type_dword": 820, "image_sym_type_enum": 820, "image_sym_type_float": 820, "image_sym_type_int": 820, "image_sym_type_long": 820, "image_sym_type_mo": 820, "image_sym_type_null": 820, "image_sym_type_short": 820, "image_sym_type_struct": 820, "image_sym_type_uint": 820, "image_sym_type_union": 820, "image_sym_type_void": 820, "image_sym_type_word": 820, "imagick": 752, "imagin": [727, 731, 765], "imaginary": 694, "imagmag": 813, "imagstart": 813, "imask": [3, 4, 9], "imbued": 789, "imgrel": 675, "imitat": [722, 767, 776], "imm": [608, 640, 643, 645, 715, 723, 776, 786], "imm16": [0, 2, 3, 4, 9], "imm32": 608, "imm_eq0": 777, "immarg": [598, 674, 715], "immaterial": 727, "immatur": 709, "immediat": [55, 404, 517, 589, 591, 594, 598, 608, 611, 632, 643, 645, 665, 673, 674, 675, 688, 689, 690, 691, 693, 715, 723, 726, 731, 746, 747, 749, 751, 757, 760, 761, 765, 766, 770, 776, 786, 811, 814, 817], "immediately": [585, 586, 591, 595, 605, 608, 611, 612, 626, 636, 640, 665, 673, 676, 710, 714, 715, 717, 719, 720, 723, 729, 731, 732, 736, 740, 749, 751, 753, 760, 761, 765, 766, 768, 770, 776, 791, 796, 811], "immediateparent": 715, "immigr": 609, "imminent": 707, "immleaf": 691, "immsext16": 608, "immsubreg": 786, "immt": [776, 777], "immtyp": [776, 777], "immtypebit": 777, "immun": 766, "immut": [711, 715, 730, 749, 782, 788], "immutablepass": 594, "impact": [591, 604, 605, 607, 610, 611, 640, 670, 680, 700, 715, 749, 752, 753, 755, 765, 766, 772], "impacted": [710, 749], "impactful": [604, 678], "impacting": [701, 715, 766], "imped": 715, "impeded": 715, "imper": [611, 680, 765, 812, 814], "impl": [660, 749, 788], "implement": [585, 586, 591, 595, 604, 605, 607, 610, 612, 617, 618, 622, 640, 655, 660, 661, 662, 665, 667, 668, 670, 673, 674, 675, 679, 680, 683, 689, 690, 691, 693, 695, 699, 700, 708, 714, 716, 717, 719, 723, 726, 729, 730, 735, 743, 746, 748, 749, 751, 753, 754, 756, 757, 765, 768, 769, 770, 772, 774, 775, 776, 783, 784, 787, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 811, 812, 813, 814, 817, 818, 819], "implemented": [585, 586, 591, 592, 594, 595, 597, 603, 605, 607, 608, 611, 640, 642, 649, 650, 654, 661, 665, 673, 680, 681, 690, 691, 700, 713, 714, 715, 718, 719, 725, 726, 727, 729, 731, 733, 735, 746, 749, 757, 758, 761, 763, 764, 765, 766, 768, 769, 770, 771, 774, 784, 786, 788, 789, 795, 814, 817], "implementer": 662, "implementing": [591, 594, 611, 617, 665, 715, 746, 747, 766, 768, 771, 774, 794, 795, 808, 810, 811, 812, 813, 814, 815, 816, 818], "implementor": [680, 777, 811, 812], "impli": [585, 586, 608, 612, 617, 643, 644, 645, 657, 661, 673, 715, 717, 719, 726, 732, 736, 771, 786], "implic": [608, 611, 612, 673, 689, 714, 715, 721, 730, 747, 749, 756, 765, 766, 774, 776, 786, 790, 812], "implicit_def": 710, "implicitarg": 591, "implicitcod": 765, "implicitdef": 608, "implicitdefin": 721, "implicitly": [585, 586, 591, 598, 607, 608, 611, 661, 670, 675, 689, 714, 715, 730, 731, 748, 749, 751, 766, 768, 785, 792, 794, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "implicitus": 608, "implied": [14, 79, 172, 267, 333, 350, 430, 543, 585, 586, 587, 588, 591, 660, 662, 681, 715, 749, 751, 753, 776, 786], "impliqu": [605, 608, 660, 715, 719, 736, 751, 761, 766], "imply": [594, 655, 680, 681, 715, 719, 751, 768], "implying": [670, 715], "import": [594, 595, 597, 598, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 617, 629, 640, 645, 646, 650, 661, 664, 670, 678, 680, 682, 683, 684, 685, 702, 703, 704, 706, 707, 709, 712, 714, 715, 717, 727, 728, 730, 731, 734, 736, 739, 740, 741, 746, 751, 758, 761, 765, 766, 768, 785, 786, 787, 788, 789, 792, 795, 809, 810, 811, 812, 813, 816, 817], "importantly": [594, 611, 670, 812], "imported": [600, 611, 670, 691, 703, 715, 751], "importing": 703, "impos": [608, 670, 715, 721, 749, 772], "imposed": [714, 760, 768, 772], "imposing": 670, "impossibl": [585, 586, 594, 595, 597, 693, 715, 766, 786, 794, 817], "impractical": [670, 700, 733, 734, 749, 766], "improp": 730, "improv": [586, 591, 594, 603, 604, 606, 610, 611, 670, 673, 678, 680, 683, 694, 698, 701, 707, 714, 715, 717, 721, 727, 728, 731, 746, 747, 749, 751, 753, 757, 762, 763, 765, 766, 770, 776, 786, 788, 794, 817], "improved": [586, 617, 694, 717, 719, 747, 757, 763, 786], "improving": [670, 690, 694, 715, 731, 753, 765, 796, 811], "impur": 765, "imul": 608, "imul16rm": 608, "imul16rmi8": 608, "in": [20, 21, 22, 23, 24, 27, 66, 67, 84, 85, 96, 97, 98, 112, 114, 120, 123, 124, 125, 126, 127, 129, 157, 158, 175, 176, 186, 187, 209, 212, 213, 214, 215, 216, 217, 220, 254, 255, 270, 271, 286, 287, 288, 306, 308, 314, 349, 352, 370, 371, 372, 373, 374, 375, 378, 418, 419, 435, 436, 447, 448, 449, 470, 479, 482, 483, 484, 485, 486, 487, 490, 530, 531, 548, 549, 560, 561, 562, 576, 578, 584, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 602, 603, 604, 605, 609, 610, 612, 613, 615, 616, 617, 618, 620, 622, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 653, 654, 655, 657, 659, 660, 661, 662, 663, 664, 666, 667, 668, 670, 671, 672, 674, 675, 677, 678, 679, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 725, 728, 729, 730, 731, 732, 733, 735, 736, 738, 739, 740, 741, 743, 744, 745, 747, 748, 750, 752, 753, 754, 755, 756, 758, 760, 761, 762, 763, 766, 767, 769, 771, 772, 774, 775, 777, 779, 780, 782, 783, 784, 786, 787, 790, 791, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818], "in0": 715, "in1": [608, 715], "in2": 608, "in32bitmod": 608, "in64bitmod": 608, "inaccessibl": 700, "inaccessiblemem_or_argmemonly": 715, "inaccessiblememonly": [598, 715], "inaccessiblememonly_or_argmemonly": 598, "inaccurac": 591, "inaccuracy": 715, "inaccurat": [607, 640], "inact": [585, 586, 589, 591, 715], "inadvertent": [771, 782], "inadvertently": [612, 710], "inadvis": 681, "inalloc": [598, 665, 715, 756], "inapplic": [601, 702, 766], "inappropriat": [760, 762], "inbound": [665, 666, 678, 681, 715], "inc": [608, 611, 660, 665, 683, 712, 715, 721, 749, 762, 771, 774, 775, 776, 786, 788], "inc32r": [721, 765], "inc4": 612, "incant": 662, "incap": [586, 598, 817], "incarn": 674, "incident": 760, "includ": [20, 84, 123, 175, 212, 213, 270, 370, 371, 435, 482, 483, 548, 585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 597, 601, 604, 605, 606, 607, 608, 609, 612, 617, 618, 622, 625, 626, 635, 636, 637, 638, 645, 651, 655, 660, 661, 662, 663, 664, 665, 666, 670, 673, 674, 675, 678, 679, 680, 681, 684, 692, 699, 700, 701, 702, 703, 705, 706, 708, 710, 712, 713, 714, 715, 716, 717, 718, 723, 726, 728, 729, 730, 731, 736, 741, 746, 747, 749, 750, 751, 755, 759, 760, 761, 762, 765, 766, 768, 770, 772, 774, 775, 777, 779, 780, 781, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "include_director": 606, "included": [585, 586, 591, 594, 595, 604, 607, 608, 611, 618, 624, 625, 626, 655, 661, 662, 666, 670, 672, 682, 685, 695, 715, 721, 733, 752, 757, 762, 765, 771, 774, 775, 776, 777, 780, 786, 791, 808, 809, 810, 812], "includedirect": 776, "including": [585, 586, 590, 591, 594, 595, 600, 602, 604, 606, 608, 609, 610, 611, 613, 614, 617, 619, 625, 643, 645, 656, 658, 659, 661, 662, 670, 671, 673, 679, 680, 682, 683, 685, 695, 701, 703, 707, 714, 715, 717, 720, 729, 730, 731, 733, 734, 735, 740, 744, 746, 749, 753, 755, 757, 760, 762, 765, 766, 768, 769, 770, 772, 774, 775, 781, 782, 784, 785, 786, 788, 789, 790, 794, 809, 812, 813, 817, 818], "inclus": [585, 586, 589, 590, 591, 600, 611, 626, 660, 670, 675, 703, 715, 750, 757, 762, 771, 774, 786, 794], "inclusively": 640, "incoming": [591, 608, 670, 671, 689, 698, 715, 719, 749, 762, 766, 786, 812, 814], "incompatibl": [591, 642, 654, 673, 700, 715, 745, 774], "incomplet": [585, 586, 591, 672, 676, 749, 757, 766, 774, 795, 796, 797], "inconsistenc": 632, "inconsistency": [611, 632, 681, 753], "inconsistent": 765, "inconvenient": [717, 814], "inconvertibleerrorcod": 749, "incorporat": [608, 708, 776, 818], "incorporated": [585, 586, 610], "incorporating": 749, "incorrect": [591, 600, 670, 715, 732, 733, 747, 761, 765, 766, 810, 811, 812, 813, 814, 815, 816], "incorrectly": [591, 640, 705, 715, 753, 766, 808, 810], "incq": 612, "incr": 642, "increas": [591, 604, 610, 611, 620, 640, 643, 665, 670, 678, 688, 694, 701, 709, 717, 718, 719, 732, 746, 761, 765, 774, 777, 782, 785], "increased": [585, 586, 715, 717, 757], "increasing": [611, 693, 710, 715, 751, 759, 766, 772, 810], "incredibly": [670, 704, 751], "increment": [591, 608, 670, 741, 746, 749, 812, 814, 815, 816], "incremental": [585, 586, 607, 608, 680, 683, 701, 715, 717, 728, 736, 740, 743, 772], "incrementally": [585, 586, 741, 754, 764, 812], "incremented": [591, 602, 611, 640, 715], "incrementing": [715, 812], "incub": 670, "incubator": [670, 671], "incubatorincubator": 671, "incur": 725, "ind": 816, "ind1": 715, "ind4": 715, "indefinitely": [701, 717], "indemnity": 670, "indent": [643, 722, 749, 767, 816], "indented": [611, 655], "indenting": 792, "independent": [585, 586, 591, 595, 610, 620, 661, 664, 669, 670, 678, 681, 683, 688, 693, 706, 711, 713, 715, 718, 723, 725, 749, 754, 766, 768, 771, 776, 777, 784, 785, 786, 788], "independently": [585, 586, 591, 608, 612, 669, 670, 715, 718, 731, 732, 749, 757, 759, 766, 768, 776, 790, 791], "index": [85, 176, 271, 352, 436, 549, 585, 589, 591, 594, 597, 598, 608, 616, 622, 631, 632, 640, 645, 649, 650, 660, 661, 665, 666, 673, 675, 678, 680, 683, 685, 689, 693, 707, 711, 714, 736, 739, 740, 741, 743, 744, 749, 752, 759, 765, 766, 768, 769, 770, 775, 786, 792, 816], "index2": 766, "index2virtreg": 608, "indexed": [585, 646, 681, 689, 715, 740, 765, 776, 786], "indexedmap": 608, "indexing": [213, 371, 483, 590, 681, 689, 715], "indexloc": 749, "indexoffsetbufferlength": 743, "indexoffsetbufferoffset": 743, "indexreg": 608, "indextyp": 774, "indic": [586, 590, 597, 598, 608, 624, 640, 666, 693, 711, 715, 734, 736, 741, 744, 746, 749, 765, 766, 768, 785, 786], "indicat": [30, 117, 205, 223, 310, 380, 493, 580, 585, 586, 587, 588, 589, 590, 591, 594, 598, 599, 600, 606, 608, 610, 611, 612, 655, 660, 661, 665, 666, 670, 673, 678, 680, 692, 693, 694, 701, 708, 715, 716, 717, 729, 733, 735, 749, 751, 755, 761, 765, 766, 768, 770, 775, 776, 777, 780, 785, 786, 788, 791, 809, 810, 812, 816], "indicated": [20, 82, 96, 97, 123, 186, 187, 212, 286, 287, 351, 370, 433, 447, 448, 482, 546, 560, 561, 585, 586, 588, 589, 591, 598, 622, 665, 674, 675, 715, 735, 746, 765, 786, 788], "indicating": [585, 586, 590, 591, 594, 598, 600, 606, 608, 611, 612, 622, 628, 661, 665, 673, 681, 715, 733, 734, 735, 738, 743, 747, 749, 751, 765, 774, 777, 786], "indicator": [611, 640, 790], "indiqu": [594, 617, 706, 770], "indir": 715, "indirect": [585, 586, 591, 605, 608, 642, 643, 644, 650, 665, 675, 676, 689, 717, 721, 740, 765, 768, 770, 775, 786, 796], "indirectly": [591, 595, 611, 617, 715, 726, 732, 776], "indirectstubmanager": [796, 797], "indistinguish": 776, "individual": [586, 588, 591, 597, 598, 602, 608, 611, 612, 617, 622, 624, 626, 640, 645, 651, 655, 666, 669, 671, 674, 678, 685, 689, 698, 715, 717, 723, 726, 731, 732, 733, 736, 744, 746, 751, 757, 760, 762, 766, 770, 775, 776, 781, 789, 816, 818], "individually": [642, 654, 685, 701, 705, 749, 753, 775, 776, 789], "indivisibl": 713, "induc": 700, "induced": [667, 719, 755, 756], "induct": [594, 678, 683, 715, 719, 788, 810, 812, 814], "industrial": 793, "industry": [586, 670], "indvar": [715, 749, 788], "indx": 792, "ineffect": [665, 766], "inefficienc": [608, 814], "inefficient": [598, 678, 717, 749, 769, 785], "ineg": 608, "inequal": 749, "inequality": [590, 608], "inevitably": [640, 753], "inexact": [591, 715], "inf": [591, 618, 620, 661, 715, 765], "infeasibl": [716, 766], "infectious": 749, "infer": [591, 605, 608, 662, 678, 715, 726, 733, 776, 781, 788], "inferattr": 788, "inferencing": 608, "inferent": [597, 662, 726], "inferior": 668, "inferred": [585, 586, 611, 612, 618, 620, 680, 708, 715, 770, 776, 779, 792], "inferring": 770, "infinit": [586, 594, 608, 693, 715, 717, 719, 728, 746], "infinitely": 585, "infinity": [591, 640, 715], "infix": 776, "influenc": [597, 603, 715, 716, 765, 782], "influenced": [762, 788], "info": [591, 598, 604, 606, 608, 615, 617, 631, 632, 638, 640, 643, 645, 646, 649, 650, 655, 660, 663, 668, 670, 673, 680, 683, 696, 701, 704, 706, 715, 716, 717, 718, 733, 735, 739, 744, 751, 759, 760, 774, 785, 788, 791, 792, 808, 813, 814, 816, 817, 818], "inform": [588, 589, 590, 592, 594, 598, 600, 601, 604, 605, 606, 609, 612, 613, 615, 616, 617, 622, 624, 632, 637, 638, 639, 640, 641, 642, 643, 645, 646, 649, 650, 655, 657, 659, 660, 661, 662, 665, 666, 668, 670, 673, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 688, 690, 692, 693, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 714, 716, 717, 718, 719, 720, 721, 722, 723, 727, 728, 729, 732, 734, 736, 738, 740, 741, 743, 744, 747, 750, 751, 753, 755, 756, 758, 759, 760, 761, 762, 766, 767, 768, 769, 770, 771, 774, 775, 776, 777, 779, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 809, 810, 811, 813, 814, 815, 817, 818, 819], "informal": [670, 715, 760], "informally": [700, 776], "informational": [661, 667], "informativemailnotifi": 701, "informed": [594, 680, 749, 762], "informing": 746, "infos": 673, "infra": 671, "infrastructur": [586, 601, 602, 606, 608, 645, 664, 670, 671, 674, 680, 682, 683, 684, 687, 702, 715, 730, 731, 733, 747, 749, 750, 751, 755, 756, 759, 762, 765, 770, 772, 779, 784, 785, 787, 788, 793, 811], "infrastructurecodegen": 671, "infrastructureinfr": 671, "infrequently": 788, "infringed": 670, "ing": [611, 664, 719, 746, 810, 814], "ingredient": 755, "inher": [594, 608, 611, 731, 745, 749, 775, 776, 782, 787, 788, 795], "inherent": [610, 741, 776], "inherently": [607, 676, 715, 730, 749, 766], "inherit": [591, 608, 661, 669, 708, 749, 771, 774, 776, 777, 782, 783, 787], "inherited": [776, 783, 788], "inheriting": [749, 775, 776, 787], "inhib": [646, 715, 770], "inhibit": 715, "init": [591, 633, 661, 668, 707, 717, 751, 776, 788, 814, 815, 816], "initact": 592, "inited": 717, "initial": [585, 586, 599, 606, 610, 643, 645, 661, 665, 670, 680, 683, 689, 698, 714, 715, 717, 719, 720, 727, 746, 747, 749, 755, 760, 762, 763, 766, 774, 776, 786, 794, 812, 814, 815, 816], "initial_instruct": [585, 586, 591], "initial_loc": [585, 586], "initialc": 730, "initialexec": [598, 715], "initialis": [661, 815], "initialised": [661, 777, 789], "initializ": [591, 598, 608, 640, 661, 665, 674, 676, 680, 715, 727, 729, 746, 761, 764, 766, 774, 775, 776, 786, 788, 789, 792, 794, 795, 796, 811, 814, 815, 816], "initialize_ag_pass": 788, "initialize_pass_begin": 692, "initialize_pass_dependency": [692, 788], "initialize_pass_end": 692, "initializealiasanalys": 594, "initializeallasmparser": 815, "initializeallasmprinter": 815, "initializealltarget": 815, "initializealltargetinfos": 815, "initializealltargetmc": 815, "initialized": [585, 591, 611, 620, 661, 676, 680, 708, 715, 717, 731, 749, 769, 774, 776, 786, 788, 789, 794], "initializemodul": [810, 816], "initializemoduleandpassmanag": [811, 812, 813, 814, 815], "initializenativetarget": [811, 812, 813, 814, 816], "initializenativetargetasmpars": [811, 812, 813, 814, 816], "initializenativetargetasmprint": [811, 812, 813, 814, 816], "initializepass": 594, "initializer": [611, 624, 714, 715, 731, 746, 774, 775], "initializerconst": 715, "initializing": [591, 611, 657, 729, 789, 794, 796, 811], "initially": [594, 608, 617, 665, 715, 726, 732, 749, 751, 753, 786, 792, 810], "initialseed": 652, "initiat": [591, 673], "initiated": 586, "initid": 598, "initsynclibcall": 595, "initval": [814, 815, 816], "inject": [611, 665, 710, 730, 766], "injected": [665, 715], "injecting": [730, 766], "inlin": [591, 595, 626, 640, 646, 655, 661, 662, 670, 673, 675, 676, 689, 703, 721, 729, 747, 749, 759, 768, 770, 788, 792, 808, 811], "inline": [645, 715, 765], "inline_hd1": 662, "inline_hd2": 662, "inlineasm": [721, 727], "inlinebit": 715, "inlined": [585, 586, 591, 600, 605, 608, 621, 641, 646, 655, 665, 673, 675, 678, 689, 710, 715, 749, 751, 759, 765, 766, 770, 788, 812], "inlined_at": 675, "inlinedat": [612, 715], "inlinedinfo": 641, "inlinehint": [598, 715], "inlining": [655, 661, 662, 665, 673, 676, 683, 715, 733, 739, 765, 766, 795, 817], "inner": [604, 607, 613, 673, 710, 713, 715, 717, 719, 730, 746, 749, 755, 776, 782, 784, 785, 792], "inner_": 715, "innerloop": 755, "innerloopvectoriz": 753, "innermost": [755, 785], "innerstructty": 715, "innocent": 812, "innov": 670, "inoperandlist": [776, 777, 786], "inorderissu": 640, "inorderissuestag": 640, "inplac": 615, "inpredsens": 712, "inprocessmemorymanag": 714, "input": [10, 11, 12, 13, 16, 18, 36, 37, 38, 39, 40, 41, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 116, 118, 119, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 206, 207, 208, 211, 226, 227, 228, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 311, 312, 313, 317, 318, 322, 323, 328, 329, 330, 331, 332, 335, 343, 344, 345, 346, 347, 348, 353, 354, 361, 362, 363, 364, 365, 366, 367, 368, 386, 387, 388, 389, 390, 391, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 473, 474, 475, 476, 477, 478, 481, 499, 500, 501, 502, 503, 504, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 533, 534, 535, 536, 537, 538, 539, 540, 541, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 564, 565, 581, 582, 583, 585, 586, 587, 589, 590, 591, 592, 594, 596, 602, 603, 607, 608, 611, 612, 613, 615, 617, 618, 620, 622, 623, 624, 626, 627, 629, 630, 631, 632, 633, 634, 636, 638, 639, 640, 641, 643, 645, 647, 649, 650, 651, 653, 654, 655, 657, 659, 660, 661, 662, 669, 676, 683, 689, 690, 693, 694, 698, 707, 712, 714, 716, 717, 718, 719, 721, 728, 729, 732, 736, 746, 749, 755, 759, 762, 765, 766, 770, 774, 776, 777, 779, 781, 785, 786, 788, 790, 794, 795, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820], "input_vector": 715, "inputcontent": 792, "inputfilenam": 661, "inrang": 715, "inreg": [591, 598, 608, 715, 786], "inresumepart": 665, "insanely": 611, "insect": 716, "insensit": [594, 612, 631], "insert": [597, 611, 617, 622, 661, 665, 680, 689, 710, 719, 727, 746, 749, 765, 766, 767, 771, 786, 810, 811, 812, 813, 814, 815, 816], "insert_subreg": 721, "insert_subvector": 608, "insertbefor": 749, "insertbranch": 786, "insertbyt": 717, "insertdeclar": 816, "inserted": [591, 594, 595, 608, 622, 680, 694, 715, 719, 749, 765, 766, 770, 788, 789, 810, 812, 813, 814, 815, 816], "insertel": [597, 612], "inserter": 749, "inserting": [591, 602, 608, 612, 622, 689, 700, 710, 715, 735, 746, 765, 766, 770, 812, 813, 814, 815, 816], "insertvalu": 665, "insid": [598, 604, 606, 607, 608, 611, 612, 617, 622, 666, 667, 668, 669, 672, 673, 680, 682, 683, 694, 706, 708, 714, 715, 717, 719, 726, 727, 730, 736, 743, 746, 749, 755, 758, 765, 766, 767, 769, 770, 774, 776, 780, 781, 782, 783, 788, 792, 811], "insidebundl": 608, "insight": [586, 666, 715, 759, 790], "insignific": [618, 629, 715, 768], "insn": [643, 757], "insofar": 732, "inspect": [591, 598, 605, 632, 681, 714, 715, 751, 765, 787, 788], "inspected": [714, 715, 749, 809], "inspecting": [608, 678, 714, 715, 732], "inspir": 790, "inspired": [640, 715, 746, 765], "inst": [660, 710, 715, 746, 749, 776, 786], "inst_begin": 749, "inst_call": 598, "inst_end": 749, "inst_invok": 598, "inst_iterator": 749, "instability": 701, "instali": 608, "instalias": 608, "install": [591, 606, 616, 625, 662, 664, 672, 674, 683, 699, 700, 701, 702, 703, 705, 706, 707, 714, 717, 728, 745, 749, 750, 758, 767, 779, 780, 781, 789, 809, 810, 811, 812, 813, 814, 815, 816], "install_gwp_asan_stub": 700, "install_name_tool": 634, "install_prefix": 606, "installed": [591, 593, 606, 607, 625, 662, 664, 672, 679, 683, 685, 699, 700, 701, 702, 703, 706, 714, 728, 729, 745, 749, 751, 758, 777, 779, 780, 781, 789, 814], "installedd": 672, "installing": [683, 685, 703, 779, 788, 814], "installment": 809, "installsignalhandler": 700, "instanc": [585, 586, 591, 592, 606, 608, 611, 612, 617, 622, 661, 665, 672, 680, 682, 688, 691, 698, 708, 713, 714, 715, 719, 720, 721, 727, 731, 733, 738, 747, 749, 751, 758, 765, 768, 774, 775, 776, 779, 781, 782, 786, 788, 789, 792, 794, 795, 809, 810, 817], "instanceof": [749, 774], "instancing": 591, "instanti": [626, 661, 708, 774, 776, 777], "instantiat": [617, 660, 661, 749, 776, 777, 792], "instantiated": [626, 662, 720, 749, 755, 776, 777, 786, 788], "instantiatetemplateattribut": 774, "instantiating": [749, 774, 776], "instantly": 749, "instcombin": [602, 679, 719, 749, 795, 796, 797, 811, 812, 813, 814], "instead": [35, 385, 498, 585, 586, 587, 591, 594, 595, 598, 602, 604, 606, 607, 608, 609, 611, 612, 615, 617, 620, 621, 622, 626, 631, 632, 633, 637, 640, 641, 643, 645, 655, 659, 661, 662, 665, 666, 668, 670, 673, 675, 676, 678, 679, 681, 682, 683, 685, 688, 693, 694, 698, 700, 701, 702, 704, 707, 708, 712, 713, 715, 716, 717, 721, 727, 728, 729, 731, 732, 736, 746, 747, 748, 749, 751, 755, 757, 760, 762, 764, 765, 766, 768, 770, 771, 775, 776, 779, 781, 784, 786, 788, 789, 790, 791, 792, 795, 796, 809, 810, 811, 813, 814, 817, 818], "instinct": 591, "institerator": 749, "instlisttyp": 749, "instnam": 602, "instprint": 774, "instr": [591, 606, 608, 626, 646, 660, 666, 721, 776], "instr0": 727, "instr1": 727, "instr2": 727, "instr_iterator": 608, "instr_map": 790, "instrinfo": [608, 721, 786], "instritinclass": [776, 777], "instrmapping": 786, "instrpostprocess": 640, "instrprofvaluekind": 715, "instrsched": 749, "instrsdrm": 776, "instrsdrr": 776, "instrssrm": 776, "instrssrr": 776, "instruct": [10, 11, 12, 13, 15, 16, 19, 20, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 123, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 324, 325, 328, 329, 330, 331, 332, 334, 335, 337, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 482, 483, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 533, 534, 535, 536, 537, 538, 539, 540, 541, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 592, 594, 598, 602, 603, 605, 606, 611, 612, 616, 618, 620, 622, 624, 643, 645, 646, 652, 660, 661, 662, 663, 664, 665, 669, 670, 672, 675, 677, 678, 679, 680, 682, 683, 685, 689, 690, 691, 693, 694, 695, 696, 697, 699, 705, 707, 709, 713, 714, 716, 719, 725, 726, 727, 729, 733, 747, 751, 755, 756, 757, 759, 764, 768, 770, 774, 776, 777, 781, 782, 783, 784, 785, 788, 789, 810, 811, 812, 813, 814, 815, 816, 817], "instructed": [673, 715, 760], "instructioncount": 759, "instructionencoding": 776, "instructionselect": [690, 693, 698], "instructionselector": 695, "instructor": 786, "instrument": [600, 606, 626, 646, 660, 666, 704, 714, 715, 717, 730, 746, 756, 769, 775, 779, 791], "instrumentationmap": 789, "instrumented": [593, 626, 666, 704, 715, 733, 736, 769, 775, 789, 790, 791], "instrumenting": [681, 715, 790], "instsimplify": 661, "instsimplifypass": 730, "instsp": 786, "insttoreplac": 749, "instvisitor": [674, 749], "insufficient": [662, 665, 702, 715, 765, 771, 786], "insufficiently": 765, "insulat": 766, "insult": 609, "int": [594, 595, 597, 602, 608, 611, 612, 613, 627, 640, 646, 655, 657, 661, 662, 665, 666, 668, 669, 673, 676, 680, 681, 683, 699, 700, 712, 713, 714, 715, 717, 718, 719, 721, 722, 727, 729, 731, 743, 749, 757, 765, 766, 767, 770, 774, 775, 776, 777, 782, 785, 786, 789, 790, 792, 794, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820], "int128": 743, "int128oct": 743, "int16": 743, "int16_t": [786, 792], "int16short": 743, "int2006": 779, "int32": [743, 768], "int32_t": [680, 736, 743, 792], "int32long": 743, "int32ty": 749, "int32x4_t": 597, "int64": 743, "int64_t": [749, 775, 792], "int64quad": 743, "int8_t": 792, "int_amdgcn_buffer_load_format": 775, "int_amdgcn_image_atomic_swap_1d": 775, "int_get_dynamic_area_offset": 715, "int_max": 715, "int_min": 715, "intd": 612, "integ": [20, 24, 26, 27, 120, 127, 129, 209, 212, 217, 218, 220, 314, 327, 339, 370, 375, 376, 378, 479, 482, 487, 488, 490, 584, 585, 586, 588, 589, 591, 595, 598, 599, 608, 611, 612, 617, 640, 646, 661, 662, 665, 666, 673, 674, 678, 680, 688, 696, 717, 721, 727, 731, 732, 736, 741, 743, 748, 749, 751, 752, 757, 765, 770, 774, 775, 776, 781, 785, 786, 792, 810], "integer": [590, 591, 599, 608, 624, 661, 666, 675, 681, 715, 721, 727, 736, 749, 757, 759, 774, 775, 776, 785, 786, 792], "integer_numb": [20, 21, 22, 23, 24, 27, 30, 51, 52, 53, 120, 123, 124, 125, 126, 127, 129, 142, 143, 209, 212, 213, 214, 215, 216, 217, 220, 223, 237, 238, 239, 314, 370, 371, 372, 373, 374, 375, 378, 380, 400, 401, 402, 479, 482, 483, 484, 485, 486, 487, 490, 493, 513, 514, 515, 584], "integertyp": 749, "integr": [605, 661, 664, 670, 683, 687, 717, 718, 722, 733, 747, 751, 754, 770], "integral": [585, 586, 591, 661, 662, 746, 749, 765, 770, 774], "integrat": [606, 680, 687, 751, 770, 772, 789], "integrated": [616, 715, 718, 752, 819], "integrating": [751, 789], "integrator": 751, "integrity": [605, 715, 783, 784], "intel": [595, 606, 620, 640, 643, 647, 663, 706, 715, 755, 757, 761, 762, 766, 776, 781, 785, 815], "intel_pstat": 596, "intel_syntax": 640, "inteldialect": 715, "intelligent": [715, 766], "intelligently": 749, "intend": [606, 610, 611, 670, 674, 696, 698, 728, 749], "intended": [585, 586, 591, 593, 594, 595, 601, 604, 606, 607, 608, 609, 611, 612, 629, 635, 649, 650, 651, 653, 661, 665, 670, 671, 673, 678, 680, 683, 688, 694, 698, 701, 715, 718, 720, 723, 733, 741, 746, 749, 751, 760, 761, 766, 767, 768, 771, 776, 784, 786, 788], "intending": 749, "intens": [604, 678, 749], "intent": [585, 586, 597, 607, 608, 611, 670, 715, 718, 733, 753, 762, 765, 814], "intentionally": [611, 670, 715, 766, 788, 809], "inter": [591, 594, 600, 611, 670, 678, 715, 716, 731, 769, 771, 776], "interact": [589, 595, 602, 606, 608, 661, 680, 683, 704, 715, 720, 726, 747, 751, 759, 760, 765, 770, 786, 794, 809, 816, 817], "interacting": [665, 673, 680, 715], "interactively": 627, "intercept": 717, "intercepted": 717, "interchangeably": [608, 611, 748], "interchanged": 782, "interest": [586, 591, 594, 595, 604, 610, 624, 664, 670, 678, 680, 714, 720, 749, 762, 770], "interested": [594, 608, 616, 617, 661, 664, 666, 670, 673, 678, 680, 701, 724, 728, 741, 749, 762, 765, 770, 775, 780, 784, 795, 817], "interesting": [595, 597, 603, 608, 611, 612, 613, 640, 664, 676, 679, 683, 685, 708, 714, 715, 717, 721, 724, 746, 749, 753, 765, 766, 787, 788, 790, 792, 795, 808, 809, 810, 811, 812, 813, 814, 816, 817], "interfac": [591, 606, 608, 611, 617, 622, 650, 660, 661, 663, 668, 670, 672, 673, 679, 680, 682, 683, 685, 699, 708, 711, 712, 714, 715, 717, 718, 719, 727, 728, 729, 731, 732, 746, 756, 759, 761, 765, 768, 774, 776, 784, 786, 787, 788, 795, 796, 797, 808, 809, 810, 817], "interfacing": [676, 749], "interfer": [640, 673, 678, 681, 715], "interferent": 640, "interfering": 765, "interim": [605, 670], "interior": [680, 708, 715, 716, 770], "interleav": [755, 776, 785], "interleave_count": 785, "interleaved": [585, 586, 591, 643, 728, 751, 755, 782], "interleaving": [585, 586, 591, 715, 776, 785], "intermediary": 749, "intermediat": [598, 606, 633, 637, 659, 662, 664, 672, 673, 676, 680, 683, 688, 689, 693, 698, 711, 713, 715, 721, 726, 748, 749, 756, 758, 759, 765, 770, 776, 779, 784, 786, 809], "intermingled": 715, "intermittent": 683, "intermixed": 591, "intermodular": [718, 784], "intern": 731, "internal": [591, 594, 598, 606, 607, 608, 612, 617, 642, 645, 655, 664, 665, 666, 667, 670, 673, 676, 678, 683, 689, 700, 714, 715, 716, 718, 719, 720, 721, 729, 734, 740, 744, 746, 749, 762, 770, 774, 776, 777, 779, 780, 783, 786, 788, 792, 816], "internal_pipeline_hash": 591, "internaliz": 729, "internalized": [775, 776], "internallinkag": 749, "internally": [591, 608, 613, 640, 672, 673, 678, 681, 715, 733, 744, 749, 771, 774, 794, 810, 814], "internalread": 721, "international": [608, 662], "internet": [663, 751], "interning": 731, "interoperat": [595, 673, 715, 744, 749, 794, 817], "interoperating": 680, "interpol": [17, 29, 121, 131, 210, 222, 480, 492, 591], "interpret": [585, 586, 597, 598, 606, 608, 610, 613, 620, 621, 625, 645, 660, 661, 662, 666, 675, 679, 683, 688, 714, 715, 731, 745, 748, 765, 768, 774, 776, 777, 781, 809, 810, 811, 812, 813, 814, 815, 816, 817], "interpreted": [585, 586, 610, 617, 629, 646, 661, 666, 683, 715, 765, 770, 776, 777, 781, 782], "interpreter": 731, "interpreting": [661, 715, 765], "interprocedural": [594, 715, 718, 733, 788, 795], "interrelated": 715, "interrupt": [611, 766], "interrupted": [617, 715, 717, 771], "interrupting": 677, "intersect": 772, "interspersed": 791, "intertwined": 716, "interval": [591, 740, 749, 761], "intervening": [591, 598, 640, 751, 768], "intimat": 611, "intimidated": 670, "intimmleaf": 691, "into": [107, 196, 301, 457, 571, 585, 586, 589, 591, 593, 594, 595, 597, 598, 599, 601, 602, 604, 606, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 619, 620, 622, 623, 624, 626, 630, 631, 632, 636, 637, 640, 641, 642, 645, 646, 656, 657, 658, 659, 660, 662, 664, 665, 666, 669, 672, 673, 674, 675, 677, 678, 679, 680, 682, 683, 685, 686, 688, 689, 690, 691, 692, 693, 694, 697, 700, 701, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 736, 744, 747, 748, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 764, 765, 767, 768, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "intpred": 721, "intptr_t": [785, 811, 812, 813, 814, 816], "intptrsiz": 680, "intra": [594, 714, 769], "intraprocedural": [602, 726], "intrecty": 775, "intreg": [712, 786], "intregsclass": 786, "intregsregclass": 786, "intregsregclassid": 786, "intregsregisterclass": 786, "intregssubcl": 786, "intregssubregcl": 786, "intregssupercl": 786, "intregssuperregcl": 786, "intregsvt": 786, "intrepid": 809, "intricat": 672, "intrinsic": [595, 610, 646, 660, 663, 678, 689, 694, 710, 716, 719, 721, 730, 732, 749, 757, 764, 775, 783, 784, 785, 786], "intrinsicsamdgpu": 775, "intrinsicsnvvm": 729, "intrnoduplicat": 715, "intro": [663, 664, 715, 793, 814], "introduc": [585, 586, 594, 595, 608, 612, 675, 696, 698, 701, 708, 713, 715, 719, 726, 727, 728, 749, 751, 754, 759, 765, 766, 770, 777, 783, 786, 794, 795, 797, 812, 813, 818], "introduced": [594, 595, 596, 608, 611, 640, 666, 691, 693, 694, 707, 714, 715, 719, 740, 746, 749, 755, 757, 768, 770, 795, 814], "introducing": [595, 688, 696, 708, 715, 726, 746, 749, 755, 766, 794], "introduct": [610, 660, 664, 683, 684, 685, 793, 819], "introspect": [711, 715, 718, 723, 770], "intrus": [715, 749], "intscalarty": 715, "inttoptr": [678, 768, 770], "intty": 715, "inttyp": 715, "intuit": [715, 719, 726], "inv": 730, "invalid": [585, 586, 589, 590, 591, 595, 601, 611, 617, 632, 642, 646, 654, 659, 661, 673, 681, 683, 689, 715, 717, 719, 720, 736, 746, 749, 761, 765, 766, 768, 770, 776, 786, 788, 792, 809, 810, 811, 812, 813, 814, 815, 816], "invalidat": [585, 586, 591, 594, 632, 720, 730, 746, 749, 768, 772, 788], "invalidated": [591, 716, 730, 749, 788], "invalidating": [591, 665, 730, 788], "invalidator": 730, "invalu": 714, "invari": [594, 678, 683, 694, 710, 716, 719, 749, 770, 782, 788], "invas": [670, 707, 792], "invent": 775, "invented": [744, 774], "invers": [589, 632, 715, 746], "inverse_throughput": 632, "invert": [688, 715, 781], "inverted": [678, 715], "invest": [674, 762], "investig": 645, "investigat": [670, 753, 762, 766, 794], "investigated": [753, 762, 817], "investigating": [670, 693], "invit": [682, 795, 796, 797], "invoc": [585, 586, 593, 602, 606, 608, 612, 613, 634, 646, 665, 672, 679, 683, 699, 704, 705, 710, 715, 717, 733, 753, 779, 788, 789, 790, 791], "invok": [591, 594, 600, 606, 608, 611, 662, 673, 678, 680, 683, 699, 713, 717, 718, 720, 721, 727, 749, 768, 770, 774, 775, 781, 786, 788, 789, 791, 809], "invoke": 715, "invoke_normal_weight": 600, "invoke_unwind_weight": 600, "invoked": [585, 586, 591, 600, 606, 607, 612, 626, 655, 661, 665, 710, 715, 717, 731, 733, 749, 775, 776, 781, 786, 788, 814], "invoking": [598, 602, 606, 715, 733, 749, 776, 779], "involv": [585, 586, 591, 599, 606, 669, 673, 678, 681, 701, 703, 707, 714, 715, 731, 749, 751, 755, 760, 766, 770, 771, 786, 787, 792, 812, 816], "involved": [585, 586, 595, 608, 640, 674, 680, 681, 690, 694, 712, 749, 760, 761, 766, 770, 771, 772, 775, 790, 793, 809, 814], "involving": [585, 586, 591, 594, 681, 714, 715, 755, 770, 775, 776], "io": [701, 752, 753, 792], "iommu": 591, "ios": [683, 715, 779], "iostream": [700, 729, 790, 815], "ip": [591, 777], "ipa": 716, "ipc": [640, 771], "iphoneos": 779, "ipi": [645, 734, 735, 741, 744], "ipo": [716, 727, 788], "ipra": 591, "ipsk_covmap": 666, "iptr": [688, 715], "ipv": [585, 586], "ir": [594, 599, 600, 602, 603, 608, 620, 660, 661, 664, 665, 669, 671, 673, 674, 677, 683, 684, 689, 690, 693, 694, 698, 699, 704, 709, 713, 715, 716, 719, 722, 726, 727, 729, 730, 731, 732, 733, 750, 755, 759, 765, 767, 768, 770, 776, 781, 782, 783, 786, 787, 788, 789, 790, 794, 795, 796, 797, 809, 811, 813, 814, 815, 816, 818, 819], "irbuild": [710, 749, 810, 811, 812, 813, 814, 815, 816], "irc": [609, 610, 664, 671, 747, 760], "irce": 678, "ircompil": 794, "ircompilelai": [731, 794, 795, 796, 797], "irgen": 678, "irgenandtakeownership": 797, "irlai": [731, 795, 797], "irpath": 731, "irread": 606, "irreducibl": [715, 719, 746, 786], "irrelev": [594, 612, 681, 715, 774], "irrelevant_external": 714, "irrelevant_funct": 714, "irrespect": 606, "irtest": 606, "irtransformlai": [796, 797], "irtranslator": [694, 698], "is": [18, 19, 24, 27, 28, 30, 35, 36, 37, 38, 42, 51, 52, 53, 55, 66, 68, 74, 82, 84, 85, 86, 93, 96, 97, 100, 101, 107, 110, 111, 117, 120, 127, 129, 130, 142, 143, 145, 157, 159, 176, 186, 187, 189, 190, 191, 196, 199, 200, 205, 209, 211, 213, 217, 220, 221, 223, 237, 238, 239, 254, 256, 271, 281, 282, 283, 286, 287, 288, 301, 304, 305, 306, 308, 310, 314, 315, 320, 325, 337, 340, 351, 352, 354, 355, 368, 369, 371, 375, 378, 379, 380, 385, 386, 387, 388, 400, 401, 402, 404, 420, 433, 436, 444, 447, 448, 451, 452, 457, 467, 468, 479, 481, 483, 487, 490, 491, 493, 498, 499, 500, 501, 513, 514, 515, 517, 532, 546, 549, 557, 560, 561, 564, 565, 571, 574, 575, 580, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 764, 767, 768, 769, 770, 771, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 815, 817, 818, 819], "is64bitmod": 786, "is_base_of": 708, "is_const": 591, "is_int_min_poison": 715, "is_null": 677, "is_open": 729, "is_pip": 591, "is_ptr64": 591, "is_restrict": 591, "is_stmt": 675, "is_trivially_copi": 749, "is_volatil": 591, "is_zero_poison": 715, "isa": [589, 591, 595, 608, 611, 663, 670, 680, 708, 715, 756, 776, 786], "isa_and_nonnull": 749, "isa_impl": 708, "isabsoluteaddress": 736, "isadd": 776, "isaddresstaken": 721, "isalnum": [808, 809, 810, 811, 812, 813, 814, 815, 816], "isaloadbarri": 640, "isalph": [808, 809, 810, 811, 812, 813, 814, 815, 816], "isas": [678, 715, 754], "isascheapasamov": 776, "isascii": [809, 810, 811, 812, 813, 814, 815, 816], "isasmparseronly": 776, "isastorebarri": 640, "isatleastorstrongerthan": 595, "isauthenticated": 776, "isbarri": [776, 777], "isbasewithconstantoffset": 691, "isbinaryop": [813, 814, 815, 816], "isbitcast": 776, "isbranch": [776, 777], "iscall": [714, 776, 777], "iscodegenonly": 776, "iscommut": [776, 777], "iscompar": 776, "isconst": [591, 598, 749], "isconstantpoolindex": 786, "isconvergent": 776, "isconvertibletothreeaddress": [776, 777], "iscxxclass": 765, "isd": [592, 595, 608, 673, 674, 786], "isdeclar": 749, "isdef": 608, "isdefinit": [710, 715, 765], "isdig": [808, 809, 810, 811, 812, 813, 814, 815, 816], "isdopcod": [592, 608, 674], "isdoubl": 776, "isectcoff": 736, "isehscopereturn": 776, "isel": [608, 618, 660, 698, 716, 757, 765, 775, 786], "iseldagtodag": 774, "isellowering": [595, 774], "isempty": 749, "isexternal": 765, "isexternalsymbol": 786, "isextractsubreg": 776, "isfirstclasstyp": 727, "isfloatingpointty": 749, "isfoo": 611, "isfunct": 765, "isglobaladdress": 786, "isgroup": 736, "isgrouping": 661, "ish": 813, "isimm": 689, "isimmediat": 786, "isimplicitcod": 765, "isimplicitdef": 777, "isindirect": 721, "isindirectbranch": [776, 777], "isinlineasmbrindirecttarget": 721, "isinlined": 765, "isinrang": 714, "isinsertsubreg": 776, "isintegerty": 749, "isjumptableindex": 786, "island": 591, "islandingpad": 721, "islazy": 786, "isload": 608, "isloadfromstackslot": 786, "islocal": [710, 715, 765], "isloopinvari": 749, "islvalu": 611, "ismemoryfold": 776, "ismod": 776, "ismoveimm": 776, "ismovereg": 776, "isn": [593, 595, 603, 607, 608, 609, 611, 612, 640, 646, 655, 662, 670, 676, 681, 694, 695, 705, 714, 715, 721, 726, 728, 746, 749, 760, 761, 762, 765, 767, 771, 772, 788, 808, 809, 810, 811, 812, 815, 816], "isnotduplic": [776, 777], "isnull": 611, "isnullvalu": 727, "isobjcclass": 765, "isobviouslysafetofold": 691, "isol": [599, 640, 672, 726, 794, 797], "isolat": [585, 669, 715, 781], "isolated": [596, 606, 608, 664, 672, 715, 749, 770, 814], "isolating": [602, 776], "isomorphic": 676, "isoperandimmequal": 691, "isoperator": [813, 814, 815, 816], "isopt": 661, "isoptimized": [710, 715, 765], "isosdarwin": 816, "ispacked": 598, "isphysicalregist": 608, "isphysreg": 749, "ispic": 786, "ispip": 591, "ispoint": 727, "ispointertyp": 611, "ispredic": [776, 777], "isprefix": 661, "ispreiselopcod": 776, "isprint": 717, "isproto": 598, "ispseudo": 776, "isref": 776, "isregist": 608, "isregsequent": 776, "isrematerializ": [776, 777], "isrequired": 787, "isrestrict": 591, "isreturn": [776, 777], "issafetospeculat": 770, "isselect": 776, "isselector": 736, "isset": 661, "issimpl": 595, "issized": 749, "isspac": [717, 808, 809, 810, 811, 812, 813, 814, 815, 816], "isstor": 608, "isstoretostackslot": 786, "isstrongerthan": 595, "issu": [585, 586, 591, 595, 597, 601, 607, 608, 609, 610, 612, 617, 631, 636, 638, 642, 661, 662, 670, 675, 678, 679, 683, 687, 694, 698, 700, 701, 702, 707, 709, 710, 715, 747, 749, 751, 752, 761, 763, 765, 766, 770, 772, 774, 781, 785, 792, 793, 811, 812, 814, 817], "issued": [617, 640, 715], "issuedinst": 640, "issuedset": 640, "issuewidth": 640, "issuing": [683, 788], "istargetspecific": 721, "isterminator": [611, 776, 777], "istrap": 776, "istreambuf_iterator": 729, "istruncatingstor": 786, "isunaryop": [813, 814, 815, 816], "isunordered": 595, "isunpredic": 776, "isunpredicatedterminator": 786, "isus": 608, "isv9": 786, "isvalidsiz": 776, "isvalueunset": 775, "isvararg": 749, "isvectorized": 782, "isvis": 786, "isvolatil": [591, 715], "iszerofill": 714, "it": [18, 20, 24, 27, 28, 55, 66, 68, 110, 111, 123, 127, 129, 130, 145, 157, 159, 199, 200, 211, 212, 213, 217, 220, 221, 254, 256, 304, 305, 340, 355, 368, 370, 371, 375, 378, 379, 404, 418, 420, 467, 468, 481, 482, 483, 487, 490, 491, 517, 530, 532, 574, 575, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 696, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 820], "italian": 761, "italic": [585, 586], "itanium": [627, 628, 675, 679, 757, 783, 784], "itanium_abi_tripl": 781, "item": [585, 586, 597, 598, 607, 624, 661, 673, 675, 678, 715, 717, 727, 749, 751, 753, 765, 770, 775, 776, 792, 814], "iter": [585, 602, 606, 608, 610, 611, 632, 640, 670, 693, 698, 717, 719, 720, 740, 746, 749, 755, 776, 785, 809, 812, 813, 814], "iterat": [594, 599, 607, 608, 611, 661, 698, 714, 715, 718, 719, 720, 728, 746, 749, 775, 786, 812], "iterated": [606, 814], "iterating": [611, 714, 716, 719], "iteratively": [696, 818], "iterator": [608, 611, 661, 665, 680, 714, 727, 775, 776, 786, 789, 792], "iterator_rang": 749, "ith": 749, "itinerar": [608, 786], "itinerary": [608, 776, 777, 786], "itself": [585, 586, 591, 593, 594, 597, 598, 601, 606, 608, 611, 612, 613, 617, 626, 661, 665, 669, 670, 673, 674, 676, 678, 679, 680, 681, 683, 689, 693, 704, 706, 708, 709, 713, 714, 715, 717, 718, 719, 727, 728, 730, 740, 749, 751, 752, 753, 755, 758, 759, 760, 761, 762, 765, 766, 767, 768, 769, 770, 774, 775, 777, 781, 782, 787, 788, 792, 794, 795, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817], "ity": [700, 776], "iuml": 608, "iv": 762, "ival": [12, 13, 58, 61, 65, 331, 332, 347, 348, 411, 412, 521, 523, 524, 526], "ivanovic": 753, "ivanovicdistinguish": 753, "ivar": 765, "iwg": 671, "j1": 779, "j2": 683, "j4": [704, 758], "jacqu": 662, "jagged": 740, "jaguar": 640, "jalu0": 640, "jalu01": 640, "jalu1": 640, "jam": [715, 753], "jammed": [715, 755], "jamming": [715, 746], "jan": 755, "jann": 766, "january": 732, "jarv": 752, "jav": [595, 677, 680, 715, 746, 749, 770, 817], "javascript": [715, 768, 817], "jazz": 750, "jb_1": 765, "jd": [714, 731, 753, 795, 797], "jd1": 731, "jd2": 731, "jdiv": 640, "jdo": [670, 747], "jeff": 771, "jemalloc": 761, "jess": 706, "jfpa": 640, "jfpm": 640, "jfpu0": 640, "jfpu01": 640, "jfpu1": 640, "jfpuprf": 640, "jg": 764, "jge": 643, "jingling": 755, "jingyu": 662, "jintegerprf": 640, "jit": [602, 606, 613, 620, 625, 670, 676, 680, 683, 685, 709, 715, 729, 731, 745, 768, 770, 793, 808, 810, 812, 813, 814, 815, 816, 817, 818], "jit_dlclos": 731, "jit_dlopen": [714, 731], "jitcompilecallbackmanag": 796, "jitcompilerfn": 786, "jitcompilerfunct": 786, "jitdylib": [714, 794, 795, 796, 797], "jited": [668, 784], "jitevaluatedsymbol": [794, 795, 796, 797], "jiteventlistener": 731, "jitfailed": 731, "jiting": [731, 794, 796, 797], "jitlink": [731, 784], "jitlinkcontext": 714, "jitlinkdylib": 714, "jitloadergdb": 668, "jitstack": 731, "jitsymbol": [794, 795, 796, 797], "jitsymbolflag": [731, 797], "jittargetaddress": [714, 796], "jittargetmachinebuild": [794, 795, 796, 797], "jitted": [632, 749], "jlagu": 640, "jlsagu": 640, "jmp": [715, 766], "jmp_1": 765, "jmpq": 766, "jmul": 640, "jn": [702, 706], "jne": [608, 766], "jo": 669, "job": [606, 671, 683, 708, 717, 726, 731, 771, 788, 795], "joerg": 751, "john": [611, 670, 747], "join": [591, 620, 682, 724, 749, 763, 788, 790], "joined": [717, 749], "joining": [715, 719], "jok": 609, "jon": [753, 755], "jonathan2251": 819, "jonesdistinguish": 753, "jour": 793, "journal": 755, "journey": 814, "jpg": 717, "jsagu": 640, "json": [626, 631, 640, 649, 650, 655, 660, 710, 728, 757, 777, 779], "jsonnrevnum": 751, "jstc": 640, "jti": 689, "jtmb": [794, 795, 796, 797], "judg": [670, 728, 766], "judged": 763, "judging": 631, "judgment": 670, "juggl": [662, 728], "juli": 731, "july": [680, 751, 763, 789], "jump": [590, 598, 605, 661, 665, 673, 675, 689, 709, 710, 715, 728, 731, 750, 757, 766, 783, 786, 796, 812], "jumped": 719, "jumping": [749, 786, 816], "jumptabl": [598, 715, 721], "jumpy": 710, "junip": 591, "jurisdict": 670, "just": [585, 586, 593, 594, 595, 596, 597, 598, 599, 602, 603, 604, 606, 607, 608, 610, 611, 612, 615, 617, 620, 622, 624, 626, 629, 640, 641, 643, 645, 655, 661, 662, 665, 666, 670, 675, 676, 681, 683, 685, 686, 688, 692, 693, 699, 701, 702, 706, 707, 708, 709, 710, 714, 715, 717, 719, 721, 722, 724, 726, 727, 728, 729, 731, 746, 747, 749, 750, 751, 758, 764, 765, 766, 767, 768, 770, 771, 774, 775, 776, 777, 779, 780, 781, 786, 787, 788, 789, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "justified": 772, "justify": 718, "justin": 697, "jvalu0": 640, "jvalu1": 640, "jvimul": 640, "jvm": [731, 817], "jyknight": 751, "k": [590, 596, 608, 642, 654, 655, 661, 669, 708, 714, 715, 719, 738, 766, 785, 795, 816], "kabin": 591, "kaleidoscop": [683, 727, 731, 749, 794, 795, 796, 797, 818], "kaleidoscopeastlai": 797, "kaleidoscopeastmaterializationun": 797, "kaleidoscopej": [795, 796, 797, 811, 812, 813, 814, 816, 819], "kat": 762, "kaver": 591, "kawahito": 608, "kaylor": 762, "kb": [692, 761], "kd": 591, "kdtre": 752, "keep": [591, 594, 608, 612, 615, 633, 642, 654, 660, 661, 662, 665, 670, 672, 676, 680, 700, 701, 708, 714, 715, 718, 719, 721, 724, 725, 726, 727, 728, 730, 732, 746, 749, 759, 762, 765, 771, 772, 777, 781, 784, 788, 789, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "keeping": [608, 715, 719, 746, 754, 755, 765, 785, 788, 810, 811, 816], "kel": 697, "kept": [591, 594, 657, 665, 670, 671, 714, 715, 716, 759, 760, 765, 788], "kern0": 591, "kern1": 591, "kernarg": 591, "kernarg_address": 591, "kernarg_segment_align": 591, "kernarg_segment_alignment": 591, "kernarg_segment_siz": 591, "kernarg_siz": 591, "kernargsegmentalign": 591, "kernargsegmentsiz": 591, "kernel": [595, 596, 608, 620, 640, 662, 672, 702, 715, 717, 752, 766, 784, 785, 786, 817], "kernel1": 591, "kernel_code_entry_byte_offset": 591, "kernel_param_0": 729, "kernel_param_1": 729, "kernel_param_2": 729, "kernelparam": 729, "kevin": 608, "key": [591, 598, 604, 608, 611, 631, 632, 670, 700, 703, 708, 712, 715, 719, 721, 727, 731, 738, 741, 743, 749, 759, 762, 763, 766, 770, 774, 777, 788], "keycol": 712, "keyed": 730, "keyring": 683, "keystrok": 611, "keyt": 749, "keytyp": [765, 774], "keyword": [594, 608, 661, 664, 666, 679, 681, 715, 717, 753, 765, 774, 775, 776, 777, 781, 785, 788, 808, 812, 813, 814, 815, 816], "kib": 661, "kick": [670, 714], "kill": [602, 613, 716, 721], "killall": 717, "killed": [608, 717, 721, 765, 788], "kind": [588, 589, 590, 591, 595, 598, 600, 608, 609, 610, 611, 612, 617, 618, 622, 624, 660, 661, 666, 668, 673, 674, 676, 677, 679, 682, 707, 708, 710, 711, 714, 715, 716, 717, 718, 721, 726, 727, 728, 730, 732, 734, 735, 736, 743, 746, 749, 751, 760, 765, 766, 767, 768, 774, 776, 783, 790, 791, 794, 813, 814, 815, 816], "kistanov": 701, "klabnik": 762, "klaus": 751, "klimek": 747, "kmean": 752, "kmp": 617, "knock": 611, "know": [585, 586, 591, 594, 595, 597, 602, 606, 607, 608, 610, 611, 617, 640, 657, 661, 664, 666, 668, 670, 676, 678, 680, 685, 686, 701, 708, 709, 714, 715, 717, 718, 719, 722, 728, 729, 732, 740, 744, 747, 749, 751, 753, 760, 762, 765, 766, 767, 769, 770, 774, 781, 783, 785, 786, 788, 792, 795, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "knowing": [607, 608, 640, 665, 670, 673, 683, 685, 749, 762, 785, 813, 815], "knowledg": [586, 598, 608, 610, 611, 666, 680, 715, 722, 723, 728, 733, 744, 746, 767, 781, 782, 817], "knowledge": 690, "known": [585, 586, 591, 594, 595, 598, 606, 608, 611, 613, 622, 642, 657, 662, 665, 669, 673, 678, 680, 681, 682, 683, 685, 698, 707, 708, 710, 714, 715, 729, 746, 749, 750, 753, 758, 764, 766, 770, 780, 781, 783, 786, 788, 792, 808, 809, 810, 811, 812, 813, 814, 815, 816], "knownbit": [692, 715], "knownsafevalu": 749, "knuth": 776, "koblenz": 755, "koch": 766, "komatsu": 608, "kostanov": 670, "kripk": 752, "kristof": [753, 762], "kruskal": 752, "kryomodel": 786, "kryowrite_2cyc_xy_norsv_67ln": 786, "kryowrite_2cyc_xy_xy_150ln": 786, "krzysztof": 753, "ksdbginfo": 816, "kuck": 669, "kuhn": 669, "kw1": 717, "kw2": 717, "kw3": 717, "kwalify": 820, "l0": [586, 591, 643, 786], "l1": [586, 591, 608, 640, 786], "l10": 790, "l1d": 640, "l2": [591, 786], "l3": 786, "l4": 786, "l5": 786, "l6": 786, "l7": 786, "lA": 731, "lab": [682, 701, 728], "label": [0, 2, 3, 4, 9, 586, 590, 591, 598, 599, 601, 608, 634, 642, 643, 644, 651, 653, 654, 665, 673, 675, 676, 677, 680, 709, 710, 713, 719, 726, 727, 729, 746, 749, 765, 782, 786, 790, 812, 814], "label0": 715, "label_1": [24, 127, 217, 375, 487], "label_2": [24, 127, 217, 375, 487], "label_3": [24, 127, 217, 375, 487], "label_4": [24, 127, 217, 375, 487], "label_branch_weight": 600, "labeled": [601, 664], "labelled": [587, 715], "labeltyp": 749, "labf": 661, "labor": 661, "laborious": 749, "lack": [605, 608, 609, 640, 680, 681, 693, 703, 715, 732, 745, 761, 766, 772, 777], "lacking": 715, "lad": 661, "laden": 817, "laghos": 752, "lah": 779, "lahf": 766, "lai": [594, 640, 679, 703, 714, 721, 731, 740, 757, 759, 794, 795, 796, 817], "laid": [597, 608, 670, 715, 739, 740, 744, 749, 754], "lakos": 611, "lam": 730, "lambd": [591, 691, 731, 749, 753, 794], "lammp": 752, "lan": [585, 586, 589, 683, 688, 689, 753], "lanczos": 752, "land": [715, 728], "landed": [610, 728], "landing": [601, 665, 670, 673, 713, 715, 721, 728, 762], "landingpad": [665, 673, 746], "landscap": 751, "lang": [604, 661, 753, 779], "langref": [592, 595, 674, 678, 689, 719, 729, 754, 765], "languag": [595, 601, 606, 607, 608, 609, 610, 612, 618, 623, 630, 633, 637, 659, 661, 662, 663, 664, 665, 667, 670, 672, 673, 675, 677, 679, 680, 681, 683, 684, 688, 690, 705, 710, 714, 716, 717, 721, 729, 731, 746, 749, 752, 755, 756, 757, 762, 768, 770, 774, 776, 777, 781, 785, 786, 791, 792, 794, 795, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 815, 816], "language_vers": 591, "languagevers": 591, "larg": [585, 586, 591, 595, 598, 602, 604, 606, 608, 610, 611, 613, 617, 620, 624, 632, 633, 640, 660, 661, 666, 669, 670, 672, 674, 675, 683, 685, 686, 689, 693, 704, 707, 712, 713, 714, 715, 717, 725, 726, 728, 729, 731, 732, 736, 738, 740, 744, 746, 749, 750, 752, 753, 757, 761, 765, 768, 770, 774, 775, 776, 777, 779, 781, 785, 786, 789, 791, 796, 811], "largeconst": 768, "largely": [662, 680, 688, 694, 700, 734, 786], "largest": [120, 209, 314, 479, 584, 585, 586, 589, 591, 608, 612, 615, 675, 678, 693, 715, 736], "last": [585, 586, 589, 591, 595, 598, 600, 608, 611, 612, 617, 622, 634, 640, 661, 664, 665, 670, 673, 683, 685, 686, 701, 707, 708, 710, 715, 719, 722, 726, 728, 733, 740, 743, 747, 749, 751, 757, 762, 767, 770, 776, 781, 782, 785, 786, 788, 791, 794, 808, 811, 813, 816], "lastchar": [808, 809, 810, 811, 812, 813, 814, 815, 816], "lastinst": 786, "lastly": [711, 781, 788, 816], "lastopc": 786, "lat": [585, 586, 590, 591, 593, 595, 600, 605, 606, 607, 611, 612, 617, 626, 665, 666, 670, 673, 678, 683, 685, 686, 693, 694, 703, 714, 715, 717, 720, 721, 722, 727, 728, 730, 731, 740, 746, 747, 749, 750, 751, 755, 757, 759, 762, 765, 767, 768, 770, 772, 776, 781, 782, 786, 788, 789, 794, 809, 810, 811, 816, 818], "latch": [715, 719], "latenc": [586, 608, 640, 790], "latency": [620, 632, 640, 715, 731, 766], "latest": [612, 615, 672, 683, 685, 697, 728, 751, 757, 758, 779], "latt": [585, 586, 590, 595, 608, 665, 670, 685, 693, 696, 701, 715, 719, 727, 749, 753, 765, 775, 782, 786, 809], "lattn": [751, 753], "lattneracronym": 753, "lattneragre": 753, "lattnerfunct": 753, "lattnerlow": 753, "lattnerrevnum": 751, "lattnertransit": 753, "launch": [604, 611, 662, 685, 729, 796], "launched": [591, 729, 731], "launching": 729, "lav": 752, "lavamd": 752, "law": [611, 760], "lawi": 670, "lawsuit": 670, "lawyer": 670, "lay": [608, 611, 681, 715, 716, 749, 783, 816], "layer": [679, 731, 796, 797, 819], "layered": 611, "layering": [694, 751], "laying": [714, 783], "layout": [597, 604, 606, 607, 645, 662, 664, 678, 680, 681, 684, 706, 714, 731, 735, 736, 738, 741, 743, 751, 770, 786, 788, 791, 811, 815], "lazi": 795, "lazily": [598, 692, 714, 718, 749, 794, 795, 796, 797], "laziness": [594, 794, 796, 819], "lazy": [594, 643, 714, 715, 731, 794, 795, 797, 811, 819], "lazycallthrough": [796, 797], "lazyemittinglai": 731, "lazynam": 749, "lazyreexport": [731, 819], "lazyresolverfn": 786, "lb": [731, 753], "lbar": 608, "lbb0_1": [675, 766], "lbb0_2": [764, 766], "lbb0_3": 766, "lbb0_4": 766, "lbb0_5": 766, "lbb0_n": 766, "lbb_end0_0": 675, "lbb_end0_1": 675, "lbd": 819, "lbl": 752, "lbr": 632, "lc_id_dylib": 634, "lclang1": 751, "lclang2": 751, "lcov": 626, "lcovmap": 666, "lcpi0_0": 781, "lcssa": 716, "lcud": 729, "lcudart": 662, "lcudart_static": 662, "ld": [0, 2, 3, 4, 9, 20, 80, 107, 120, 123, 173, 196, 209, 212, 268, 301, 314, 370, 431, 457, 479, 482, 544, 571, 584, 590, 591, 606, 661, 679, 683, 699, 702, 703, 705, 729, 757, 786], "ld64": [666, 733], "ld_preload": 761, "ldflag": [625, 699, 794, 795, 796, 797, 810, 811, 812, 813, 814, 815, 816], "ldl": 662, "ldm": 715, "ldpxi": 721, "ldpxpost": 721, "ldr": [675, 723, 777], "ldrd": 595, "ldrex": 595, "ldri": 786, "ldrr": 786, "lds_direct": [10, 12, 59, 61, 62, 64, 77, 146, 149, 150, 152, 155, 156, 162, 243, 246, 247, 250, 253, 317, 322, 328, 330, 331, 343, 345, 347, 519, 521, 523, 525, 528], "lds_siz": 591, "ldststoreupd": 608, "lea": 766, "lead": [595, 607, 608, 611, 632, 661, 665, 670, 681, 690, 710, 715, 717, 719, 726, 728, 730, 746, 749, 753, 761, 765, 766, 769, 772, 796], "leader": 610, "leading": [612, 617, 627, 642, 643, 644, 665, 681, 689, 699, 705, 715, 749, 753, 781, 792, 809, 816], "leaf": [618, 673, 715, 734, 770, 790], "leak": [617, 675, 680, 713, 715, 764, 766, 781], "leaked": 766, "leaking": [680, 766], "leaksanitiz": 717, "leaky": 717, "leap": 747, "leaq": [714, 764], "learn": [611, 670, 683, 715, 717, 727, 747, 749, 787, 795], "learned": [722, 744, 767, 795, 814], "learning": [609, 752, 753, 817], "leary": 662, "least": [585, 586, 591, 594, 595, 596, 597, 598, 604, 608, 610, 611, 617, 622, 632, 634, 638, 640, 643, 645, 647, 661, 665, 667, 670, 673, 679, 688, 689, 693, 702, 704, 706, 715, 717, 719, 724, 726, 734, 746, 749, 751, 753, 758, 762, 766, 768, 770, 774, 776, 786, 789, 791, 809, 810, 811, 812, 813, 814, 815, 816], "leasur": 669, "leav": [585, 586, 591, 596, 610, 617, 642, 654, 665, 670, 683, 699, 701, 715, 717, 719, 727, 728, 729, 746, 747, 751, 755, 763, 765, 766, 770, 786, 795], "leaving": [601, 603, 661, 665, 676, 680, 689, 715, 719, 728, 731, 765], "leb": 666, "leb128": [585, 586, 608, 618], "lectur": 123, "left": [585, 586, 589, 590, 591, 598, 602, 607, 608, 611, 665, 670, 678, 686, 689, 700, 715, 719, 727, 746, 749, 757, 776, 777, 780, 785, 786, 792, 794, 809, 810, 812, 816], "left_op": 715, "leftr": 727, "legacy": [598, 603, 606, 612, 680, 715, 731, 757, 772, 782, 787, 788, 790, 794, 795, 796, 797, 811, 812, 813, 814, 815], "legacy_stdio_definit": 703, "legacypassmanag": [788, 790, 795, 796, 797, 811, 812, 813, 814, 815, 816], "legal": [586, 591, 595, 608, 662, 670, 673, 674, 681, 689, 693, 695, 710, 715, 723, 726, 729, 734, 749, 755, 781], "legalact": 786, "legalfor": 693, "legalforcartesianproduct": 693, "legalfortypeswithmemsiz": 693, "legalitypredicat": 693, "legalityquery": 693, "legaliz": [592, 674, 691, 694, 695, 698, 715, 754], "legalizeact": 786, "legalized": [592, 608, 674, 693, 694, 721], "legalizedag": [592, 674], "legalizemut": 693, "legalizeop": [592, 674], "legalizerhelpertest": 694, "legalizerinfo": 695, "legally": [608, 749, 755], "len": [715, 765], "len_control": 717, "length": [585, 586, 591, 597, 598, 608, 617, 626, 628, 653, 661, 663, 666, 681, 715, 717, 734, 735, 736, 739, 740, 741, 743, 746, 749, 754, 762, 765, 766, 767, 770, 774, 775, 776, 781, 785], "lengthen": 632, "less": [585, 586, 590, 591, 596, 597, 598, 603, 608, 611, 612, 617, 626, 640, 661, 666, 670, 676, 678, 680, 683, 688, 689, 701, 702, 713, 714, 715, 717, 719, 722, 727, 743, 746, 749, 751, 753, 755, 758, 765, 770, 776, 777, 781, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "let": [593, 598, 603, 604, 608, 611, 612, 646, 650, 661, 662, 664, 665, 666, 667, 670, 681, 688, 694, 701, 707, 708, 712, 715, 718, 719, 722, 726, 727, 728, 729, 730, 731, 740, 745, 747, 749, 751, 753, 760, 762, 765, 766, 767, 769, 770, 774, 777, 780, 786, 788, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "letitem": 776, "letlist": 776, "letter": [598, 661, 715], "letting": [612, 681, 709, 817], "leukocyt": 752, "level": [589, 591, 593, 594, 595, 598, 600, 601, 604, 606, 609, 612, 618, 624, 640, 643, 645, 649, 650, 657, 662, 663, 664, 665, 667, 668, 670, 673, 677, 678, 679, 680, 681, 683, 694, 696, 704, 713, 714, 716, 719, 720, 726, 727, 729, 730, 733, 740, 744, 748, 749, 750, 751, 756, 768, 770, 772, 776, 780, 781, 782, 783, 784, 785, 786, 788, 789, 791, 792, 793, 794, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "leverag": [610, 673, 680, 683, 694, 748, 749], "leveraged": [761, 791], "leveraging": 670, "lex": [683, 790, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819], "lex_1_1_els": 591, "lex_1_1_end": 591, "lex_1_1_start": 591, "lex_1_1_then": 591, "lex_1_els": 591, "lex_1_end": 591, "lex_1_start": 591, "lex_1_then": 591, "lex_end": 591, "lex_start": 591, "lexed": 776, "lexer": 679, "lexical": [608, 617, 676, 715, 765, 809, 816], "lexicalblock": 816, "lexically": [585, 586, 611, 776, 811], "lexicographical": 727, "lexicographically": 611, "lexidentifi": [674, 790], "lexloc": 816, "lf_arglist": 743, "lf_array": 743, "lf_bitfield": 743, "lf_buildinfo": 743, "lf_class": 743, "lf_endprecomp": 743, "lf_enum": 743, "lf_fieldlist": 743, "lf_func_id": 743, "lf_interfac": 743, "lf_label": 743, "lf_methodlist": 743, "lf_mfunc_id": 743, "lf_mfunction": 743, "lf_modifi": 743, "lf_pad0": 735, "lf_point": 743, "lf_precomp": 743, "lf_procedur": 743, "lf_string_id": 743, "lf_structur": 743, "lf_substr_list": 743, "lf_typeserver2": [743, 765], "lf_udt_mod_src_lin": 743, "lf_udt_src_lin": 743, "lf_union": 743, "lf_vftabl": 743, "lf_vtshap": 743, "lfoo": 608, "lfunc1_end": 591, "lfunc_begin0": 675, "lfunc_beign0": 675, "lfunc_end0": 591, "lgkm": 591, "lgkm_cnt": [120, 209, 314, 479, 584], "lgkmcnt": [120, 209, 314, 479, 584, 591], "lgkmcnt_sat": [120, 209, 314, 479, 584], "lgtm": [664, 716, 747], "lh": [611, 715, 727, 749, 774, 779, 809, 810, 811, 812, 813, 814, 815, 816], "lhse": [814, 815, 816], "li": [611, 661, 680, 701, 715, 732, 753, 768, 770, 788], "lib": [591, 592, 606, 608, 616, 624, 625, 636, 640, 645, 649, 650, 661, 662, 672, 674, 675, 680, 685, 699, 700, 703, 706, 717, 721, 727, 731, 749, 750, 751, 753, 757, 759, 761, 765, 771, 774, 775, 784, 786, 787, 788, 794, 795, 796, 797, 810, 811, 812, 813, 814, 815, 816], "lib64": [606, 662, 683], "libb": 731, "libc": [606, 611, 628, 662, 668, 670, 671, 673, 683, 700, 705, 715, 717, 749, 761, 817], "libcall": [693, 780], "libcallfor": 693, "libclang_rt": [704, 717, 789], "libclc": [606, 670, 671, 683, 751], "libcud": 729, "libcxx": [604, 606, 671, 683, 703, 751, 753, 758], "libcxxab": [604, 606, 683, 703, 751], "libd": [625, 657], "liberal": 714, "libff": [606, 745], "libfil": 625, "libfoo": 731, "libfuzz": 679, "libgcc": [595, 673, 764], "libgcc1": 706, "libllvm": [604, 606, 683, 745, 749], "libllvmcor": 749, "liblto": [699, 753], "liblzm": 706, "libm": [810, 811], "libnam": [625, 788], "libobject": 714, "libomp": [617, 758], "libomptarget": 617, "libopagent": 745, "libpartit": 675, "libpath": [635, 675], "libpfm": 606, "libpos": 661, "librar": [595, 596, 598, 604, 606, 607, 613, 616, 624, 625, 626, 641, 643, 644, 645, 649, 650, 657, 659, 661, 670, 672, 676, 682, 683, 685, 703, 704, 705, 706, 709, 714, 715, 717, 728, 731, 746, 749, 756, 765, 766, 771, 772, 786, 789, 794, 809, 810, 817], "library": [585, 586, 594, 595, 598, 606, 613, 616, 620, 622, 625, 626, 634, 636, 637, 643, 644, 663, 670, 675, 676, 678, 679, 680, 681, 685, 694, 700, 703, 704, 705, 706, 714, 718, 729, 733, 739, 746, 750, 756, 759, 765, 776, 779, 781, 784, 785, 786, 790, 792, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818], "librarynam": [680, 750], "libremark": 759, "libsampl": 750, "libscudo": 761, "libsfgcc1": 706, "libstdc": [606, 628, 662, 672, 673, 683, 706], "libsupport": [714, 751], "libtinfo": 706, "libtool": 616, "libunwind": [604, 606, 673, 683, 751, 753], "libx": 636, "libxml": 717, "libxml2": [706, 717], "libxxx": 706, "libz": 715, "lic": 746, "licenc": 687, "licens": [611, 683, 687, 707, 788, 794, 795, 796, 797], "license": 670, "licensed": [670, 699], "licensing": [670, 752], "licm": [595, 665, 678, 710, 716, 719, 749, 788], "lif": [632, 662, 670, 678, 682, 717, 725, 731, 732], "lifelong": 793, "lifetim": [585, 586, 608, 665, 670, 678, 680, 700, 725, 731, 749, 788, 789, 794, 796], "lift": 678, "lifted": [755, 762], "lifting": 795, "light": [611, 671, 715], "lightly": [715, 758, 794], "lightweight": [611, 617, 672, 749], "lik": [585, 586, 589, 591, 593, 594, 595, 598, 601, 602, 604, 606, 608, 612, 620, 629, 632, 639, 640, 643, 645, 661, 662, 665, 666, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 685, 688, 689, 691, 692, 693, 694, 703, 704, 706, 708, 709, 710, 714, 715, 717, 718, 719, 721, 722, 723, 726, 727, 728, 730, 731, 732, 733, 734, 735, 740, 744, 746, 747, 751, 752, 755, 758, 759, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 775, 776, 777, 779, 780, 781, 783, 786, 787, 788, 789, 790, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "likeliness": [600, 715], "likely": [585, 586, 591, 595, 600, 602, 606, 610, 662, 664, 670, 674, 678, 679, 681, 683, 686, 687, 694, 701, 702, 715, 717, 720, 728, 729, 731, 736, 741, 745, 746, 749, 751, 753, 761, 766, 771, 774, 777, 780, 782, 785, 796], "likewis": [715, 775], "lim": [585, 586, 591, 602, 606, 610, 611, 613, 617, 640, 642, 645, 654, 661, 671, 688, 693, 714, 715, 717, 756, 760, 761, 762, 764, 765, 766, 768], "limit": [27, 117, 129, 205, 220, 310, 378, 490, 580, 589, 591, 608, 622, 640, 661, 670, 675, 682, 683, 703, 714, 715, 717, 726, 730, 734, 746, 748, 749, 751, 766, 768, 776, 792, 816], "limited": [84, 175, 270, 435, 548, 585, 586, 589, 590, 591, 594, 595, 604, 608, 609, 640, 669, 670, 678, 680, 681, 683, 707, 711, 714, 715, 732, 736, 749, 751, 753, 765, 766, 772, 811, 813], "limiting": [585, 586, 766, 812], "lin": [593, 595, 601, 602, 606, 607, 608, 611, 612, 613, 617, 618, 620, 622, 623, 624, 626, 627, 628, 630, 631, 632, 633, 634, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 653, 654, 655, 657, 659, 660, 662, 666, 668, 670, 673, 675, 679, 680, 682, 683, 699, 700, 703, 705, 709, 710, 711, 714, 715, 716, 717, 721, 722, 726, 728, 730, 731, 733, 736, 739, 744, 745, 749, 750, 751, 753, 758, 759, 761, 765, 766, 767, 774, 775, 776, 777, 779, 780, 781, 784, 786, 788, 790, 792, 794, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "linaro": [702, 705], "linear": [585, 586, 591, 594, 608, 611, 618, 620, 683, 686, 715, 728, 736, 743, 749, 751, 788], "lineariz": [591, 681], "linearized": [591, 681, 749, 755], "linearscan": [608, 620, 788], "linebegin": 776, "lineend": 776, "lineno": 816, "ling": 770, "lingering": 610, "link": [24, 127, 217, 375, 487, 585, 586, 587, 588, 590, 591, 596, 602, 604, 605, 606, 608, 611, 613, 615, 616, 618, 625, 626, 635, 641, 642, 643, 644, 649, 650, 654, 655, 661, 670, 679, 680, 682, 684, 700, 701, 703, 705, 706, 707, 709, 716, 717, 722, 725, 727, 729, 730, 731, 733, 734, 736, 741, 743, 745, 746, 747, 749, 750, 751, 757, 758, 760, 761, 765, 766, 770, 772, 773, 778, 779, 781, 783, 784, 786, 788, 789, 790, 794, 795, 809, 810, 811, 813, 815], "link_component": 750, "linkabl": [586, 591], "linkag": [598, 608, 629, 655, 678, 683, 700, 714, 727, 729, 734, 749, 783, 810, 816], "linkagenam": [710, 715], "linkagetyp": 749, "linkallcodegencomponent": 788, "linked": [586, 591, 594, 595, 606, 608, 615, 622, 626, 637, 641, 643, 659, 666, 670, 675, 679, 680, 683, 705, 706, 709, 714, 715, 716, 717, 726, 727, 729, 736, 741, 749, 750, 761, 764, 765, 781, 788, 790, 796, 811], "linker": [611, 666, 675, 683, 715, 731, 759], "linkinfo": 744, "linking": [602, 604, 606, 611, 615, 622, 625, 626, 661, 662, 679, 683, 701, 703, 706, 715, 717, 718, 731, 736, 741, 743, 749, 757, 761, 764, 767, 779, 783, 786, 788, 789, 813], "linkonc": [598, 683, 715, 729, 749], "linkonce_odr": [598, 666, 678, 715, 729], "linkonceanylinkag": 749, "linkonceodrlinkag": 749, "linpack": [779, 785], "lint": 753, "linux": [585, 591, 595, 606, 608, 617, 632, 647, 662, 668, 672, 673, 679, 683, 699, 700, 702, 703, 704, 705, 706, 715, 717, 725, 731, 732, 757, 766, 768, 779, 781, 784, 789, 810, 811, 815], "lipo": [606, 616, 718], "liquid": 591, "lis": 608, "lisp": [680, 817], "list": [213, 371, 483, 590, 591, 593, 594, 595, 598, 600, 602, 603, 604, 606, 608, 609, 610, 612, 613, 615, 616, 617, 618, 620, 622, 624, 625, 626, 628, 629, 631, 632, 636, 640, 642, 643, 645, 646, 649, 650, 657, 659, 660, 664, 665, 666, 668, 670, 672, 673, 674, 676, 678, 679, 680, 683, 684, 686, 687, 688, 690, 706, 707, 708, 709, 711, 712, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 738, 740, 741, 745, 746, 747, 750, 751, 753, 758, 759, 760, 761, 762, 763, 764, 765, 768, 770, 772, 774, 775, 776, 777, 779, 781, 784, 785, 786, 788, 789, 790, 793, 794, 809, 810, 811, 812, 813, 814, 815, 816, 817], "list1": 776, "list2": 776, "list_nam": 607, "list_of_list": 607, "listconcat": 776, "listdiscours": 671, "listed": [591, 595, 606, 608, 611, 626, 634, 641, 651, 661, 664, 676, 680, 686, 693, 701, 712, 714, 715, 728, 731, 749, 750, 751, 760, 770, 772, 776, 785, 788], "listen": 714, "listfil": 636, "listing": [612, 615, 616, 622, 651, 661, 740, 749, 770, 786, 808], "listobsolet": 671, "listscategory": 671, "listsplat": 776, "lit": [593, 606, 612, 616, 670, 685, 694, 704, 710, 728, 750, 751, 765, 769, 772, 779, 781, 787], "lit_arg": 781, "lit_config": 617, "lit_filt": 617, "lit_filter_out": 617, "lit_num_shard": 617, "lit_opt": 617, "lit_run_shard": 617, "lit_test_tim": 617, "lit_xfail": 617, "lit_xfail_not": 617, "litconfig": 617, "literal": [10, 11, 12, 13, 59, 60, 61, 63, 65, 69, 70, 77, 146, 147, 149, 151, 160, 161, 162, 166, 243, 244, 246, 248, 249, 257, 258, 328, 343, 406, 410, 411, 421, 422, 519, 522, 523, 526, 527, 533, 534, 591, 598, 607, 611, 612, 621, 640, 660, 661, 677, 715, 721, 723, 749, 774, 792, 808, 809, 810, 811, 812, 813, 814, 815, 816], "literally": [598, 610, 661, 810], "literatur": [608, 719], "lithium": 603, "litloc": 816, "littered": 670, "littl": [591, 597, 598, 608, 661, 669, 672, 676, 680, 681, 683, 693, 694, 698, 702, 715, 719, 722, 727, 728, 733, 744, 746, 749, 759, 765, 767, 771, 783, 786, 788, 791, 795, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "littleaarch64": 642, "littlearm": 642, "littleriscv": 642, "litvalu": 598, "liv": [585, 586, 591, 594, 597, 606, 611, 632, 662, 665, 673, 680, 683, 690, 709, 713, 714, 716, 718, 719, 724, 725, 728, 746, 749, 755, 765, 766, 768, 770, 787, 788, 810, 811, 814], "live_begin": 680, "live_end": 680, "live_iterator": 680, "live_siz": 680, "livecount": 680, "livedebugvalu": 715, "livedebugvari": 765, "livein": [632, 721, 765], "liveinterval": [608, 620], "liveintervalanalys": 608, "liveliness": 632, "liveness": [714, 719, 746, 770], "liveoffset": 680, "liveonentry": 726, "liveout": [768, 770], "living": 715, "livr": 793, "ljti0_0": 766, "lkern0_end": 591, "lkern1_end": 591, "ll": [595, 602, 603, 607, 608, 611, 612, 613, 616, 618, 623, 629, 630, 659, 661, 662, 664, 668, 670, 674, 676, 678, 679, 680, 681, 683, 685, 686, 688, 693, 694, 701, 702, 704, 705, 706, 707, 708, 710, 715, 719, 721, 726, 728, 729, 730, 733, 746, 747, 749, 751, 758, 760, 762, 765, 770, 771, 781, 787, 788, 789, 790, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818], "llazyjitbuild": 731, "llc": [602, 608, 612, 613, 616, 620, 677, 679, 680, 683, 704, 709, 710, 715, 721, 729, 733, 759, 765, 770, 781, 786, 788, 790, 815], "lld": [591, 606, 611, 635, 683, 701, 703, 704, 705, 733, 751, 753, 757, 759], "lldb": [606, 611, 616, 670, 671, 683, 685, 724, 728, 731, 749, 751, 753, 765, 772], "lldblldb": 671, "lldlld": 671, "llegacy_stdio_definit": 703, "llgo": 751, "lli": [613, 616, 618, 668, 683, 709, 733, 788], "llibnam": 661, "lljit": 714, "lljitbuild": [714, 731], "lljitexampl": 731, "lljitwithlazyreexport": 731, "lljitwithobjectlinkinglayerplugin": 714, "lllazyjitbuild": 731, "llld1": 751, "llld2": 751, "lllex": [674, 790], "lllvm1": 751, "lllvm2": 751, "llnl": 752, "llocat": 700, "llpars": [674, 790], "llt": 688, "lltok": 674, "llvhm": 731, "llvm": [585, 586, 592, 593, 605, 612, 613, 614, 615, 619, 658, 661, 662, 668, 677, 678, 684, 687, 689, 690, 692, 693, 694, 695, 697, 698, 700, 703, 705, 711, 713, 720, 721, 722, 725, 727, 730, 731, 732, 733, 734, 735, 736, 740, 741, 743, 744, 747, 752, 753, 758, 760, 761, 766, 767, 775, 776, 777, 779, 780, 782, 783, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 813, 815, 816], "llvm1": 751, "llvm2": 751, "llvm_": [604, 606, 607, 788], "llvm_abi_breaking_check": 606, "llvm_addr2line_opt": 621, "llvm_addrsig": 651, "llvm_all_target": [683, 786], "llvm_analysis_utils_local_h": 611, "llvm_any": 674, "llvm_any_ty": 775, "llvm_append_vc_rev": 606, "llvm_attribute_weak": 788, "llvm_bb_addr_map": 675, "llvm_build_32_bit": 606, "llvm_build_benchmark": 606, "llvm_build_d": 683, "llvm_build_doc": 606, "llvm_build_exampl": 606, "llvm_build_instrumented_coverag": 606, "llvm_build_llvm_dylib": [604, 606, 683], "llvm_build_root": 606, "llvm_build_test": 606, "llvm_build_tool": 606, "llvm_ccache_build": 606, "llvm_ccache_d": 606, "llvm_ccache_maxsiz": 606, "llvm_cmake_d": 606, "llvm_code_coverage_target": 606, "llvm_compiler_job": 606, "llvm_coverage_source_dir": 606, "llvm_create_xcode_toolchain": 606, "llvm_debug": [602, 659, 661], "llvm_default_target_tripl": 606, "llvm_definit": 606, "llvm_definitions_list": 606, "llvm_dependent_librar": 675, "llvm_dir": [606, 727], "llvm_distribu": 604, "llvm_distribution_component": 604, "llvm_doxygen_qch_filenam": 606, "llvm_doxygen_qhelpgenerator_path": 606, "llvm_doxygen_qhp_cust_filter_nam": 606, "llvm_doxygen_qhp_namespac": 606, "llvm_doxygen_svg": 606, "llvm_dylib_component": [604, 606, 683], "llvm_enable_abi_breaking_check": 749, "llvm_enable_assert": [606, 749], "llvm_enable_binding": 606, "llvm_enable_dia_sdk": 606, "llvm_enable_doxygen": [606, 683], "llvm_enable_doxygen_qt_help": 606, "llvm_enable_eh": 606, "llvm_enable_expensive_check": 606, "llvm_enable_ff": 606, "llvm_enable_id": 606, "llvm_enable_libcxx": 606, "llvm_enable_libpfm": 606, "llvm_enable_lld": 606, "llvm_enable_lto": [604, 606], "llvm_enable_modul": 606, "llvm_enable_pedantic": 606, "llvm_enable_pic": 606, "llvm_enable_project": [604, 606, 683, 685, 781], "llvm_enable_rtt": 606, "llvm_enable_runtim": [604, 606, 683, 779], "llvm_enable_sphinx": [606, 683, 767], "llvm_enable_thread": 606, "llvm_enable_unwind_t": 606, "llvm_enable_warning": 606, "llvm_enable_werror": 606, "llvm_enable_z3_solv": 606, "llvm_enable_zlib": 606, "llvm_examples_install_d": 606, "llvm_executionengine_orc_kaleidoscopejit_h": [794, 795, 796, 797], "llvm_experimental_targets_to_build": 606, "llvm_external_": 606, "llvm_external_project": 606, "llvm_externalize_debuginfo": 606, "llvm_force_use_old_toolchain": 606, "llvm_gc_root_chain": 680, "llvm_gcc_dir": 780, "llvm_include_benchmark": 606, "llvm_include_dir": 606, "llvm_include_exampl": 606, "llvm_include_test": 606, "llvm_include_tool": 606, "llvm_install_binutils_symlink": 606, "llvm_install_cctools_symlink": 606, "llvm_install_doxygen_html_d": 606, "llvm_install_ocamldoc_html_d": 606, "llvm_install_sphinx_html_d": 606, "llvm_install_toolchain_only": 604, "llvm_install_util": 606, "llvm_integrated_crt_alloc": 606, "llvm_jitlink": 714, "llvm_lib": 606, "llvm_libdir_suffix": 606, "llvm_library_visibility": 680, "llvm_link_llvm_dylib": [604, 606], "llvm_linker_opt": 675, "llvm_lit_arg": 606, "llvm_lit_tools_d": 606, "llvm_map_components_to_libnam": 606, "llvm_map_components_to_librar": 606, "llvm_obj_root": [750, 780, 781], "llvm_on_unix": 771, "llvm_on_xyz": 771, "llvm_optimized_tablegen": [606, 683], "llvm_package_vers": 606, "llvm_parallel_": 606, "llvm_parallel_compile_job": 606, "llvm_parallel_link_job": 606, "llvm_profdata_fil": [593, 606], "llvm_project": 731, "llvm_reverse_iter": 606, "llvm_revis": 606, "llvm_runtime_distribution_component": 604, "llvm_site_config": 781, "llvm_source_prefix": 606, "llvm_src_dir": 702, "llvm_src_root": [750, 780], "llvm_stackmap": 768, "llvm_static_link_cxx_stdlib": 606, "llvm_symbolizer_opt": [621, 655], "llvm_sympart": 675, "llvm_tablegen": 606, "llvm_target_arch": 606, "llvm_target_definit": 786, "llvm_targets_to_build": [604, 606, 672, 683, 685], "llvm_temporarily_allow_old_toolchain": 606, "llvm_tools_binary_d": 606, "llvm_tools_install_d": 606, "llvm_transforms_hellonew_helloworld_h": 787, "llvm_tripl": 632, "llvm_ubsan_flag": 606, "llvm_unreach": [611, 714, 727, 731, 749, 797], "llvm_use_crt_": 606, "llvm_use_intel_jitevent": 606, "llvm_use_link": 606, "llvm_use_newpm": 606, "llvm_use_oprofil": 606, "llvm_use_perf": 606, "llvm_use_relative_paths_in_debug_info": 606, "llvm_use_relative_paths_in_fil": 606, "llvm_use_sanitiz": 606, "llvm_use_split_dwarf": 606, "llvm_utils_install_d": 606, "llvm_windows_prefer_forward_slash": 757, "llvm_yaml_is_document_list_vector": 792, "llvm_yaml_is_flow_sequence_vector": 792, "llvm_yaml_is_sequence_vector": 792, "llvm_yaml_strong_typedef": 792, "llvmaddali": 732, "llvmaddalias2": 732, "llvmaddmetadatatoinst": 757, "llvmanalys": 750, "llvmasmpars": 750, "llvmbb": 682, "llvmbc": 598, "llvmbitcod": 674, "llvmbitread": 750, "llvmbuildcall": 732, "llvmbuildcall2": 732, "llvmbuildgep": 732, "llvmbuildgep2": 732, "llvmbuildinboundsgep": 732, "llvmbuildinboundsgep2": 732, "llvmbuildinvok": 732, "llvmbuildinvoke2": 732, "llvmbuildload": 732, "llvmbuildload2": 732, "llvmbuildstructgep": 732, "llvmbuildstructgep2": 732, "llvmcfiverify": 605, "llvmconfig": 606, "llvmconstgep": 732, "llvmconstgep2": 732, "llvmconstinboundsgep": 732, "llvmconstinboundsgep2": 732, "llvmcontext": [715, 731, 733, 759, 790, 794, 795, 796, 797, 810, 811, 812, 813, 814, 815, 816], "llvmcontextimpl": 790, "llvmcor": [707, 750, 758], "llvmcreatedisasm": 723, "llvmcreatesimplemcjitmemorymanag": 768, "llvmdevmeeting": 697, "llvmdisasminstruct": 723, "llvmdisassembler_option_usemarkup": 723, "llvmdummy": 786, "llvmdummyasmprint": 786, "llvmdummycodegen": 786, "llvmenableassert": 728, "llvmenableproject": 728, "llvmfuzzerinitializ": 717, "llvmfuzzerrundriv": 717, "llvmfuzzertestoneinput": 717, "llvmgccdir": 780, "llvmgetelementtyp": 732, "llvmgetpassplugininfo": 788, "llvmgettypekind": 674, "llvmgold": 699, "llvmgrep": 683, "llvmhello": 788, "llvminitializesparcasmprint": 786, "llvminitializesparctargetinfo": 786, "llvmir": 660, "llvmlab": 751, "llvmlib": 750, "llvmlibthin": 635, "llvmmemorymanagerallocatedatasectioncallback": 768, "llvmnam": 775, "llvmorg": [683, 707, 724, 751], "llvmpassnam": 606, "llvmpush": 751, "llvmremarkentrydispos": 759, "llvmremarkentryref": 759, "llvmremarkparsercreateyaml": 759, "llvmremarkparserdispos": 759, "llvmremarkparsergetnext": 759, "llvmremarkparserhaserror": 759, "llvmremarkparserref": 759, "llvmrock": 611, "llvmscalaropt": 750, "llvmsetdisasmopt": 723, "llvmsetinstdebugloc": 757, "llvmsupport": [683, 750], "llvmtarget": 750, "llvmtargetmachin": 786, "llvmtop": 788, "llvmtransformutil": 750, "llvmtyp": 775, "llvmtypekind": 674, "llvmtyperef": 674, "llvmweekly": 724, "lma": [643, 790], "lmalloc": 661, "lmas": 643, "lmerg": 751, "lmsvcrt": 703, "lmyproj1": 751, "ln": [608, 683, 699, 702, 706, 728], "lnt": [706, 751, 758], "lo": [586, 591, 688, 715], "lo12": 675, "lo16": 608, "load": [112, 113, 114, 201, 202, 306, 307, 308, 469, 470, 576, 577, 578, 585, 586, 589, 591, 594, 595, 597, 598, 602, 606, 611, 612, 613, 617, 618, 620, 622, 629, 642, 644, 645, 650, 659, 665, 668, 673, 677, 680, 681, 683, 689, 693, 696, 709, 710, 714, 716, 719, 721, 723, 726, 727, 729, 731, 732, 738, 746, 749, 751, 754, 755, 756, 757, 765, 768, 769, 770, 781, 783, 786, 788, 790, 811, 814, 815, 816], "loadabl": [642, 680], "loadable_modul": 680, "loadbarri": 640, "loaded": [585, 586, 594, 595, 597, 606, 608, 613, 617, 645, 646, 659, 661, 675, 688, 689, 693, 694, 714, 715, 717, 718, 720, 729, 731, 746, 761, 768, 770, 786, 789, 790], "loaded1": 765, "loaded2": 765, "loadfromdisk": 714, "loading": [591, 596, 597, 608, 612, 670, 677, 678, 680, 700, 715, 719, 729, 731, 766, 786, 788, 789], "loadinst": 611, "loadlal": 715, "loadlibrarypermanently": 796, "loadmodul": 731, "loadmoduleoncontext": 731, "loadobject": 720, "loadregfromaddr": 786, "loadregfromstackslot": [608, 786], "loadsdnod": 749, "loc": [586, 631, 675, 726, 765, 770, 786, 816], "loc0": 768, "loc1": 768, "local": [585, 586, 591, 594, 598, 599, 608, 611, 612, 618, 620, 626, 629, 631, 636, 639, 641, 642, 643, 654, 661, 662, 673, 676, 701, 702, 705, 710, 714, 716, 720, 721, 725, 727, 728, 729, 734, 746, 747, 753, 755, 761, 765, 766, 769, 770, 772, 774, 776, 781, 784, 788, 792, 810, 811, 818], "local_buff": 766, "local_release_x": 751, "local_unnamed_addr": [598, 675, 715], "localaddress": 715, "localdynamic": [598, 715], "localescap": 673, "localexec": [598, 715], "locality": [611, 680, 715, 730, 749], "localiz": [642, 690], "localized": [670, 765], "locally": [611, 665, 683, 704, 747, 751, 767, 772], "localrecov": 673, "localrepo": 751, "locat": [19, 66, 84, 157, 175, 254, 270, 315, 320, 325, 337, 369, 418, 435, 530, 548, 589, 591, 594, 595, 606, 608, 611, 615, 616, 617, 621, 622, 643, 645, 661, 662, 666, 668, 673, 675, 677, 678, 680, 681, 685, 690, 706, 709, 715, 716, 720, 723, 726, 729, 734, 746, 749, 750, 756, 758, 759, 760, 761, 768, 770, 775, 781, 784, 785, 786, 792, 813, 814], "located": [585, 586, 604, 608, 617, 640, 666, 680, 682, 709, 715, 717, 720, 721, 741, 767, 768, 771, 781, 786], "locating": 655, "lock": [595, 606, 715, 731, 749, 751], "locked": [678, 731], "locking": [595, 731, 749, 761, 788], "lockstep": [585, 751], "loclist": [585, 586, 631], "loclistproc": [585, 586], "loclistsptr": [585, 586], "loclistsptrproc": [585, 586], "locstat": 616, "lod": 589, "lodg": 731, "log": [592, 594, 602, 612, 617, 670, 671, 683, 686, 710, 714, 717, 728, 731, 743, 746, 747, 749, 751, 766, 780, 785, 789, 790, 795], "log10": 785, "log2": 785, "log_arg1": 789, "log_detailed": 731, "log_fast": 731, "logarithm": [598, 715], "logarithmic": 749, "logcount": 736, "logerror": [809, 810, 811, 812, 813, 814, 815, 816], "logerrorp": [809, 810, 811, 812, 813, 814, 815, 816], "logerrorv": [810, 811, 812, 813, 814, 815, 816], "logfil": 789, "logg": [592, 760], "logged": 791, "logging": [717, 749, 789, 791], "logic": [608, 611, 617, 640, 665, 691, 708, 727, 755, 766, 794, 809, 812, 813, 814], "logical": [590, 591, 608, 612, 666, 670, 715, 719, 727, 736, 746, 749, 776, 813], "logically": [585, 608, 670, 681, 715, 776], "logistic": 762, "long": [585, 586, 591, 593, 594, 595, 600, 601, 602, 603, 604, 607, 608, 610, 611, 613, 617, 624, 626, 640, 646, 660, 662, 663, 670, 673, 675, 676, 678, 679, 680, 681, 683, 686, 689, 690, 694, 700, 704, 707, 708, 711, 715, 717, 722, 725, 728, 730, 731, 732, 740, 744, 746, 747, 749, 750, 751, 757, 758, 760, 762, 765, 766, 767, 770, 771, 772, 776, 781, 786, 788, 792, 795, 810, 811, 814, 817], "longjmp": [715, 817], "look": [592, 594, 595, 598, 606, 607, 608, 610, 611, 612, 631, 640, 645, 653, 655, 661, 664, 665, 668, 670, 673, 674, 680, 681, 683, 686, 687, 688, 689, 693, 699, 708, 714, 715, 716, 721, 722, 724, 727, 728, 729, 730, 731, 732, 733, 736, 740, 741, 746, 747, 749, 750, 751, 753, 759, 764, 765, 766, 767, 768, 770, 774, 775, 781, 783, 784, 786, 788, 790, 791, 792, 794, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816], "looked": [675, 715, 731, 749, 776, 794], "looking": [594, 604, 606, 611, 612, 617, 631, 640, 657, 661, 662, 666, 674, 675, 701, 707, 714, 718, 719, 724, 726, 727, 728, 744, 746, 747, 749, 751, 765, 766, 770, 774, 776, 787, 789, 792, 809, 810, 811, 812, 813, 814, 815, 816], "lookup": [611, 631, 655, 683, 714, 715, 727, 731, 734, 743, 744, 749, 774, 776, 786, 791, 794, 795, 796, 797, 810, 811, 812, 813, 814, 817], "lookupatablebyvalu": [774, 775], "lookupcentry": 774, "lookupcentrybyencoding": 774, "lookupcentrybynam": 774, "lookuptarget": 815, "loooong": 751, "loop": [585, 586, 591, 594, 595, 608, 612, 632, 640, 662, 665, 669, 671, 678, 680, 682, 683, 693, 710, 716, 717, 726, 727, 730, 732, 733, 749, 755, 757, 770, 776, 779, 781, 784, 786, 789, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818], "loop_header_weight": 715, "loopanalys": 669, "loopanalysismanag": 730, "loopbb": [812, 813, 814, 815, 816], "loopcond": [812, 813, 814, 815, 816], "loopdistribu": 782, "loopdistribut": 782, "loopend": [812, 813, 814, 815, 816], "loopendbb": [812, 813, 814, 815, 816], "loopfoopass": 730, "loopfullunroll": 782, "loophead": [715, 812, 813], "loopid": 782, "loopinfo": [753, 788], "loopinfobas": 749, "loopinfowrapperpass": 788, "looping": [594, 608, 632, 719], "loopinterchang": 782, "looppass": [719, 733], "looppassmanag": 719, "looprerolling": 779, "looprot": 719, "looprotat": 719, "looprotatepass": 730, "loopsimplify": 719, "loopstandardanalysisresult": 730, "loopunroll": 782, "loopunrollandjam": 782, "loopunswitch": [678, 746], "looputil": 788, "loopvectoriz": [755, 782], "loopvectorizationplann": 755, "loos": 688, "loosely": 777, "lor": 593, "los": [765, 788, 817], "losing": [698, 751, 766, 774], "loss": [590, 680, 710, 749, 751, 766], "losslessly": 727, "lost": [590, 673, 676, 710, 715, 765, 766, 782, 817], "lot": [593, 602, 603, 606, 607, 608, 611, 661, 670, 674, 676, 680, 681, 683, 688, 694, 702, 708, 711, 714, 715, 721, 728, 732, 745, 746, 749, 751, 765, 766, 777, 780, 786, 788, 789, 792, 796, 809, 810, 811, 813, 814, 816, 817], "loved": 749, "low": [30, 120, 223, 288, 306, 308, 380, 479, 493, 584, 589, 590, 591, 594, 595, 596, 598, 608, 624, 640, 641, 645, 649, 650, 661, 662, 665, 670, 674, 676, 678, 680, 681, 682, 683, 689, 690, 693, 695, 696, 700, 714, 715, 721, 725, 727, 729, 730, 731, 732, 740, 743, 749, 753, 754, 755, 761, 766, 770, 771, 772, 775, 776, 785, 786, 791, 809, 813, 814], "lower": [608, 665, 693, 715, 746, 768, 770], "lower16": 675, "lower_bound": [749, 774], "lower_cas": 753, "loweralloc": 788, "lowerbound": 715, "lowercall": 790, "lowercas": [604, 786, 811], "lowercasemod": 775, "lowered": [597, 608, 665, 680, 681, 689, 690, 693, 715, 732, 768, 770, 817], "lowerfor": 693, "lowerfp_to_sint": 786, "lowering": [595, 608, 660, 673, 674, 683, 690, 693, 713, 732, 753, 757, 774, 786, 814], "loweroper": 786, "lowertypetest": [715, 783], "lowest": [585, 586, 591, 595, 597, 666, 689, 715, 809, 810, 811, 812, 813, 814, 815, 816], "lpa": 595, "lpad": [665, 673, 715], "lpc": 586, "lpc0": 721, "lpechacek": 596, "lpm": 788, "lq": 640, "lqueu": 640, "lr": [608, 643, 715, 721], "lround": 689, "lrt": 662, "ls": [591, 661, 715], "lsampl": 750, "lsb": [145, 608, 689, 791], "lsb_extract": 715, "lsb_on": 689, "lsb_two": 689, "lsda": 716, "lse": 595, "lsl": 675, "lsun": 640, "lt": [622, 626, 670, 683, 729, 776], "ltmp": 675, "ltmp1": [721, 770], "lto": [598, 604, 665, 716, 718, 733, 759, 782, 783], "lto2": 715, "lto_codegen_add_modul": 718, "lto_codegen_add_must_preserve_symbol": 718, "lto_codegen_compil": 718, "lto_codegen_creat": 718, "lto_codegen_set_debug_model": 718, "lto_codegen_set_pic_model": 718, "lto_module_creat": 718, "lto_module_create_from_memory": 718, "lto_module_dispos": 718, "lto_module_get_macho_cputyp": 718, "lto_module_get_num_symbol": 718, "lto_module_get_symbol_attribut": 718, "lto_module_get_symbol_nam": 718, "lto_module_is_object_fil": 718, "lto_module_is_object_file_for_target": 718, "lto_module_is_object_file_in_memory": 718, "lto_module_is_object_file_in_memory_for_target": 718, "ltopostlink": 715, "lu": 680, "luck": 728, "luckily": 680, "lud": 752, "lumped": 775, "lv": [727, 754], "lvalu": 749, "lvaluereferent": 735, "lvaluerefthispoint": 735, "lvl": [753, 790], "lvm": 816, "lwe": [0, 2, 3, 4, 9], "lying": 716, "lz": 715, "m0": [10, 11, 12, 13, 48, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 69, 73, 75, 76, 77, 139, 144, 146, 148, 149, 151, 152, 153, 155, 156, 160, 162, 163, 166, 169, 170, 234, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 253, 257, 263, 264, 265, 317, 318, 322, 323, 328, 329, 330, 331, 332, 342, 343, 344, 345, 347, 348, 397, 403, 404, 405, 406, 407, 411, 412, 421, 427, 428, 429, 510, 516, 517, 518, 519, 520, 521, 523, 524, 526, 527, 528, 533, 539, 540, 541], "m1": [715, 731, 751], "m2": [715, 731], "m35qpb": 790, "m3writenmisc1": 786, "m64": 672, "m7170": 591, "m_": 753, "m_cache_count_max": 761, "m_cache_size_max": 761, "m_decay_tim": 761, "m_func": 749, "m_memtag_tuning": 761, "m_op_sel": [0, 5, 6, 7, 8, 9, 19, 315, 320, 325, 337, 369], "m_op_sel_h": [0, 5, 6, 7, 8, 9, 19, 315, 320, 325, 337, 369, 587], "m_purg": 761, "m_thread_disable_mem_in": 761, "m_tsds_count_max": 761, "mac": 611, "mach": [598, 616, 627, 634, 638, 651, 663, 715, 757], "mach_universal_binary": 655, "machin": [585, 586, 591, 597, 605, 606, 612, 616, 617, 618, 622, 626, 631, 635, 649, 650, 655, 660, 662, 668, 670, 672, 680, 683, 685, 686, 691, 693, 698, 701, 702, 705, 706, 710, 714, 715, 716, 717, 720, 727, 729, 731, 736, 749, 751, 753, 756, 765, 774, 776, 779, 784, 785, 788, 791, 811, 816, 817, 820], "machine_model": 591, "machinebasicblock": [721, 749, 786], "machineblockfrequencyinfo": 599, "machinecodeemitt": 786, "machineconstantpool": [608, 721], "machineconstantpoolvalu": 721, "machineframeinfo": 608, "machinefunct": [690, 691, 692, 696, 721, 749, 753, 765], "machinefunctioninfo": [608, 721], "machinefunctionpass": [733, 786, 790], "machineinstr": [677, 688, 690, 691, 692, 753, 774, 781, 786], "machineinstrbuild": 688, "machineir": 688, "machineirbuild": 688, "machinememoperand": [595, 689, 693], "machinemoduleinfo": 721, "machineoperand": [608, 689, 753, 786], "machinepassregistry": 788, "machinepassregistrynod": 788, "machineregisterinfo": [608, 688, 698, 753], "machinery": [703, 708, 780], "macho": [598, 608, 618, 642, 643, 650, 651, 714, 720, 731, 759, 768], "macho2": 651, "macholinkgraphbuild": 714, "machoobjectfil": 749, "machoplatformplugin": 714, "macinfo": 715, "macos": [606, 644, 662, 668, 683, 717, 733, 749, 758, 779, 781, 788], "macosx10": 715, "macosx_deployment_target": 758, "macport": 745, "macro": [606, 607, 611, 617, 626, 631, 659, 660, 661, 662, 666, 715, 717, 774, 776, 786, 788, 792, 811], "macronam": [660, 776], "macros": [611, 626, 661, 662, 666, 673, 703, 715, 749, 774, 777, 786], "mad": [585, 586, 591, 594, 597, 598, 605, 608, 611, 662, 669, 670, 673, 676, 677, 678, 681, 682, 700, 704, 707, 708, 714, 715, 721, 722, 726, 727, 728, 730, 731, 735, 746, 749, 750, 751, 753, 757, 759, 761, 762, 763, 764, 765, 766, 770, 772, 774, 777, 783, 788, 792, 811, 812, 814, 817], "mag": 715, "magic": [683, 715, 717, 740, 749, 759, 765, 813], "magically": 595, "magnif": [808, 813], "magnitud": [606, 689, 715], "mail": [664, 670, 683, 701, 722, 747], "mailed": [679, 722], "mailing": [609, 610, 664, 670, 679, 687, 707, 716, 717, 724, 728, 747, 750, 757, 758, 760, 762, 770, 772, 789, 790, 793, 817], "mailinglist": 671, "mailman": 671, "main": [585, 586, 597, 599, 601, 603, 604, 606, 608, 611, 626, 632, 640, 642, 649, 650, 653, 655, 661, 665, 666, 668, 669, 670, 673, 679, 682, 683, 684, 685, 686, 688, 692, 694, 699, 700, 701, 705, 707, 713, 714, 715, 717, 718, 719, 722, 726, 728, 729, 731, 732, 746, 747, 749, 751, 752, 753, 757, 759, 765, 767, 772, 775, 776, 777, 781, 783, 784, 786, 788, 789, 790, 793, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817], "mainjd": [731, 794, 795, 796, 797], "mainlin": [668, 670, 707, 751], "mainloop": [809, 810, 811, 812, 813, 814, 815, 816], "mainly": [603, 640, 662, 669, 688, 715, 719, 727, 750, 774], "mainsym": [714, 731], "mainsymbolnam": 731, "maintain": [586, 591, 594, 595, 598, 603, 608, 610, 611, 612, 622, 661, 670, 672, 674, 680, 693, 701, 707, 715, 727, 728, 731, 738, 740, 749, 751, 753, 757, 762, 768, 772, 775, 776, 777, 788, 791], "maintainability": [607, 610, 611, 670], "maintained": [598, 601, 606, 608, 664, 665, 670, 715, 751, 765, 771, 772], "maintainer": [662, 670, 715, 753], "maintaining": [594, 680, 749, 751, 761, 772], "mainten": [611, 670, 701, 712, 718, 772], "maj": 758, "major": [586, 594, 608, 610, 611, 673, 676, 678, 683, 695, 698, 707, 714, 719, 727, 732, 734, 736, 745, 746, 749, 751, 755, 757, 765, 777, 781, 786, 814], "major_vers": 591, "majority": [612, 666, 670, 673, 694, 700, 701, 731, 733, 762, 765, 772], "majorvers": 736, "mak": [585, 586, 591, 592, 593, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 612, 613, 615, 617, 618, 621, 622, 625, 626, 632, 639, 640, 642, 660, 661, 662, 664, 665, 666, 668, 670, 672, 673, 678, 679, 680, 681, 683, 685, 686, 689, 692, 693, 694, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 719, 722, 724, 726, 727, 728, 729, 730, 731, 733, 736, 743, 745, 746, 747, 749, 750, 751, 753, 756, 758, 760, 761, 762, 765, 767, 768, 769, 770, 771, 774, 775, 776, 777, 779, 780, 781, 782, 785, 786, 787, 788, 790, 791, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "make_error": 749, "make_error_cod": 749, "make_fallible_end": 749, "make_fallible_itr": 749, "make_pair": [727, 814, 815, 816], "make_rang": 749, "make_shared": 796, "make_un": [714, 731, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "makearrayref": 774, "makeexternal": 714, "makefil": [606, 608, 625, 680, 682, 683, 709, 718, 781, 809, 810], "makelight": 611, "makestruct": 662, "maketir": 611, "makeup": 749, "makevehicl": 611, "making": [585, 589, 591, 603, 605, 608, 610, 611, 642, 662, 665, 673, 677, 680, 681, 682, 684, 693, 715, 718, 731, 732, 746, 747, 751, 755, 757, 762, 765, 766, 770, 772, 777, 779, 781, 790, 792, 794, 795, 811, 817], "malformed": [602, 662, 717, 743, 746, 749], "malicious": [762, 766], "maliciously": 762, "mall": 591, "malloc": [665, 680, 700, 717, 725, 749, 756, 761, 788, 817], "malloc_limit_mb": 717, "mallocbench": 780, "mallopt": 761, "malyutin": 753, "malyutindistinguish": 753, "mam": 730, "mamproxy": 730, "man": [606, 661, 756, 781], "manag": [591, 606, 612, 613, 640, 664, 676, 679, 680, 683, 685, 700, 701, 707, 716, 720, 729, 733, 749, 757, 758, 762, 768, 782, 784, 786, 787, 788, 794, 795, 796, 797, 811, 812, 813, 814, 817], "manage": [602, 762], "managed": [586, 591, 609, 676, 677, 681, 700, 714, 715, 716, 770, 794, 795, 814], "manager": [662, 707, 719, 733, 772, 787], "managing": [591, 714], "mandat": [608, 751], "mandated": 715, "mandatory": [589, 612, 678, 685, 688, 693, 714, 715, 749, 759, 786], "mandel": 813, "mandelbrot": [808, 813], "mandelconverg": 813, "mandelhelp": 813, "mangl": [670, 731, 786, 794, 795, 796, 797], "mangleandintern": [731, 794, 795, 796, 797], "mangled": [616, 627, 643, 655, 715, 734, 759, 765, 794], "manglednamestream": 796, "mangling": [612, 627, 628, 715, 731, 734, 794], "manifest": 715, "manifesting": 732, "manifesto": 670, "manipul": [611, 725, 749, 757, 772, 783], "manipulat": [585, 586, 591, 608, 616, 634, 642, 645, 665, 676, 714, 748, 749, 761, 814], "manipulated": [585, 665, 711], "manipulating": [616, 622, 715, 749, 755], "mann": [585, 586, 589, 591, 595, 608, 612, 622, 666, 670, 673, 681, 701, 715, 721, 726, 731, 733, 749, 766, 770, 772, 776, 786], "manner": 609, "manpag": [606, 607], "manual": [591, 605, 606, 608, 611, 659, 664, 678, 680, 683, 684, 690, 708, 714, 744, 747, 756, 766, 775, 779, 781, 784, 785, 786, 788, 794], "manually": [591, 602, 606, 670, 678, 681, 686, 701, 707, 714, 728, 730, 731, 747, 749, 751, 765, 766, 770, 777, 785, 789], "many": [585, 586, 593, 594, 595, 596, 597, 598, 599, 600, 602, 604, 607, 608, 610, 611, 612, 622, 629, 632, 640, 642, 654, 661, 662, 666, 673, 674, 676, 677, 679, 680, 681, 683, 685, 688, 689, 690, 692, 693, 694, 705, 706, 708, 709, 710, 713, 714, 715, 717, 719, 726, 728, 729, 730, 731, 732, 736, 740, 746, 747, 749, 751, 752, 753, 758, 762, 763, 765, 766, 768, 770, 771, 772, 775, 776, 780, 781, 785, 786, 788, 789, 791, 792, 794, 809, 810, 811, 812, 813, 814, 817], "map": [586, 611, 615, 626, 643, 645, 649, 650, 661, 666, 674, 696, 700, 712, 714, 716, 720, 726, 727, 729, 731, 734, 744, 748, 751, 756, 765, 766, 774, 775, 776, 783, 785, 786, 789, 790, 791, 792, 809, 810, 811, 812, 813, 814, 815, 816, 820], "mapoptional": 792, "mappabl": 757, "mapped": [585, 589, 591, 598, 608, 617, 661, 665, 675, 689, 691, 696, 700, 715, 720, 726, 749, 751, 761, 765, 768], "mapping": [585, 586, 594, 626, 628, 640, 645, 649, 650, 661, 674, 688, 695, 696, 714, 715, 726, 729, 731, 734, 736, 739, 741, 743, 749, 756, 761, 765, 766, 768, 770, 774, 784, 820], "mappingnormaliz": 792, "mappingnormalizationheap": 792, "mappingtrait": 792, "maprequired": 792, "mapsectionaddress": 720, "maptag": 792, "mapvector": 611, "march": [612, 618, 620, 640, 705, 706, 709, 725, 755, 766, 815], "marching": 765, "marginally": [585, 586, 766], "mark": [585, 586, 591, 598, 608, 611, 617, 632, 640, 642, 646, 661, 662, 665, 666, 673, 675, 677, 678, 680, 686, 707, 714, 715, 722, 727, 728, 729, 730, 746, 747, 749, 766, 770, 772, 776, 781, 789, 791], "markasignored": 611, "markdown": 767, "markdownquickstarttemplat": 722, "marked": [591, 593, 595, 601, 605, 608, 611, 665, 666, 673, 675, 677, 680, 703, 714, 715, 723, 735, 746, 749, 757, 766, 770, 777, 783, 786, 791], "markedly": 701, "marker": [670, 791], "marking": [591, 640, 680, 683, 714, 715, 746, 749, 766, 768], "markup": [591, 611, 717, 722, 767], "marshal": 665, "marshaling": 768, "mask": [30, 213, 223, 371, 380, 483, 493, 585, 586, 589, 590, 591, 608, 611, 612, 678, 688, 689, 711, 754, 755, 766, 774, 791, 792], "masked": [585, 586, 786], "maskedbitset": 792, "maskedbitsetcas": 792, "maski64": 715, "masking": [595, 715, 766], "maskipopcnt": 715, "maslov": 762, "masm": [736, 743], "mass": 670, "massaging": 704, "massiv": [629, 682, 717, 774], "mast": [606, 670, 682, 701, 752, 762], "match": [585, 586, 589, 590, 591, 595, 598, 600, 602, 604, 606, 607, 608, 611, 612, 613, 617, 622, 626, 629, 640, 642, 645, 654, 657, 660, 662, 665, 666, 673, 674, 679, 681, 683, 688, 689, 693, 708, 715, 717, 721, 725, 728, 730, 736, 741, 744, 746, 749, 751, 754, 759, 761, 765, 774, 775, 776, 781, 786, 788, 790, 791, 792, 808, 810, 811], "matched": [585, 586, 595, 608, 612, 628, 646, 660, 661, 673, 674, 715, 786, 808], "matcher": [612, 660, 717, 774, 775], "matching": [585, 586, 591, 592, 598, 616, 622, 628, 631, 633, 657, 665, 673, 680, 714, 715, 718, 725, 734, 749, 757, 765, 774, 786, 791, 792], "matchinstructionimpl": 608, "material": [609, 727], "materialis": 757, "materializ": [688, 690, 731, 755, 765, 797], "materializationresponsibility": [714, 731, 795, 796, 797], "materializationun": [731, 795, 797], "materializationunit": [731, 797], "materialized": 731, "materializer": 731, "materially": 701, "math": [607, 611, 618, 620, 661, 678, 729, 765, 784, 785, 808, 811, 813], "mathematic": 809, "mathematical": [676, 715, 729], "mathematically": 727, "matplotlib": 639, "matrix": [589, 680], "matt": [595, 642, 654, 674, 692, 715, 753, 762, 768], "mattdr": 762, "matter": [606, 670, 762, 788], "matthew": [751, 762], "matthewsrevnum": 751, "mattr": [612, 618, 620, 643, 786, 815], "matur": [661, 678, 680, 762, 766], "mat\u00e9riel": 123, "max": [591, 598, 612, 617, 632, 640, 646, 661, 662, 666, 715, 717, 757, 766, 779, 790], "max_dx10": 591, "max_flat_workgroup_siz": 591, "max_fp16": 591, "max_int_bit": 749, "max_len": [679, 717], "max_total_tim": 717, "max_vgpr": 591, "maxatomicsizeinbitssupported": 595, "maxflatworkgroupsiz": 591, "maximal": [667, 669], "maximality": 719, "maximally": [598, 715], "maximiz": [620, 701, 714, 717, 731], "maximizing": 604, "maximum": [591, 594, 595, 599, 606, 608, 615, 617, 624, 631, 632, 640, 661, 689, 693, 700, 717, 719, 727, 749, 761], "maximum_operations_per_instruct": 591, "maxscalar": 693, "maxsimultaneousalloc": 700, "maxsiz": 611, "may": [18, 20, 24, 25, 26, 27, 36, 37, 38, 84, 85, 93, 96, 97, 98, 99, 100, 101, 113, 114, 120, 127, 128, 129, 175, 176, 186, 187, 188, 189, 190, 191, 202, 209, 211, 212, 213, 217, 218, 219, 220, 270, 271, 281, 282, 283, 286, 287, 288, 289, 307, 308, 314, 316, 321, 326, 327, 338, 339, 352, 354, 368, 370, 371, 375, 376, 377, 378, 386, 387, 388, 435, 436, 444, 447, 448, 449, 450, 451, 452, 469, 470, 479, 481, 482, 483, 487, 488, 489, 490, 499, 500, 501, 548, 549, 557, 560, 561, 562, 563, 564, 565, 577, 578, 584, 585, 586, 587, 588, 589, 590, 591, 592, 595, 597, 598, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 617, 618, 620, 622, 626, 631, 632, 633, 640, 641, 642, 643, 646, 649, 650, 654, 661, 662, 664, 665, 666, 669, 670, 673, 674, 675, 676, 678, 679, 680, 681, 683, 685, 688, 689, 690, 693, 694, 699, 700, 701, 702, 704, 705, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 736, 740, 741, 743, 744, 746, 747, 749, 750, 751, 753, 755, 757, 760, 761, 762, 763, 765, 766, 768, 769, 770, 771, 772, 775, 776, 777, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 797, 810, 811, 812, 813, 814, 815, 816, 817], "may_return_null": 761, "may_throw": 673, "mayali": [594, 715], "mayb": [640, 674, 686, 717, 766, 789, 817], "maybe_instru": 789, "maybeoverridden": 727, "maybevalu": 661, "mayfail": 749, "mayfail2": 749, "mayload": [640, 776, 777], "maynot": 662, "mayraisefpexcept": 776, "mayreadfrommemory": 595, "maystor": [640, 776, 777], "maythrow": 715, "maytrap": 715, "maywritetomemory": [595, 749], "mb": [717, 749, 752, 792], "mbb": [608, 786], "mbbi": 608, "mc": [591, 640, 668, 675, 683, 716, 720, 721, 757, 781, 815], "mca": [616, 781], "mcasmpars": 608, "mcasmstream": 608, "mccfiinstruct": 721, "mccodeemitt": [608, 774], "mcdesc": 786, "mcdisassembl": 608, "mce": 786, "mcexpr": 608, "mcinn": 762, "mcinst": [640, 774], "mcinstlow": 608, "mcinstrdesc": 688, "mcinstrinfo": 640, "mcjit": [678, 714, 731, 784, 794], "mclabel": 608, "mcmodel": 675, "mcobjectstream": 608, "mcod": 591, "mcoperand": 608, "mcpu": [591, 618, 620, 632, 640, 643, 644, 702, 706, 729, 781, 786], "mcregaliasiterator": 608, "mcsectioncoff": 608, "mcsectionelf": 608, "mcsectionmacho": 608, "mcstream": 680, "mcsubtargetinfo": 640, "mcsymbol": 680, "mctargetdesc": 774, "mctargetstream": 608, "mcumod": 591, "md": [680, 687, 715, 717, 722, 752], "md5": [626, 646, 666], "md_prof": 600, "mdnod": [600, 715, 782], "mdstring": [600, 715], "mdtupl": 715, "meab": 618, "mean": [585, 586, 589, 591, 594, 596, 597, 598, 600, 601, 604, 606, 607, 608, 609, 610, 611, 612, 617, 622, 640, 646, 661, 665, 670, 673, 678, 680, 681, 683, 688, 689, 693, 694, 699, 706, 713, 715, 717, 718, 719, 721, 725, 726, 727, 728, 730, 731, 733, 736, 740, 741, 743, 746, 747, 749, 750, 751, 753, 754, 757, 760, 761, 765, 766, 770, 771, 772, 774, 776, 779, 782, 783, 786, 788, 792, 795, 808, 810, 811, 812, 814, 816, 817], "meaning": [20, 27, 120, 129, 209, 212, 213, 220, 288, 306, 308, 314, 370, 371, 378, 479, 482, 483, 490, 584, 585, 586, 587, 589, 590, 591, 598, 606, 608, 611, 617, 622, 632, 641, 642, 654, 661, 673, 675, 681, 708, 715, 730, 731, 736, 739, 740, 741, 753, 757, 765, 776, 777, 783, 787, 792, 808], "meaningful": [585, 586, 591, 603, 611, 620, 642, 646, 662, 680, 681, 715, 722, 749, 767, 772, 774, 791], "meaningless": 749, "meant": [611, 659, 666, 682, 683, 685, 704, 710, 715, 722, 726, 749, 758, 760, 761, 767, 772], "meantim": 757, "measur": [596, 606, 632, 640, 701, 719, 749, 779, 791], "measurably": 604, "measured": [632, 640, 766], "measuring": 632, "mechanic": [591, 788], "mechanism": [585, 591, 598, 605, 608, 611, 617, 670, 673, 678, 680, 699, 700, 703, 715, 716, 720, 728, 729, 730, 731, 748, 749, 760, 765, 766, 770, 771, 776, 780, 783, 785, 788], "med": 790, "median": 766, "mediat": [670, 760], "mediated": 594, "medium": [620, 715], "meet": [585, 586, 591, 608, 610, 670, 683, 693, 727, 760, 762, 772, 788], "meeting": [586, 609, 610, 671, 682, 725, 755, 760], "meetingdevmtg": 671, "meetup": 793, "megabyt": 613, "mehd": 753, "meltdown": 766, "mem": [665, 723, 746, 782], "mem2ref": 770, "mem2reg": [678, 680, 749, 765, 814], "mem_address": 608, "mem_not_null": 665, "mem_ordered": 591, "memalign": 761, "memarg": 713, "memb": [591, 601, 608, 610, 611, 622, 642, 643, 654, 662, 675, 703, 708, 715, 720, 731, 734, 743, 746, 749, 753, 760, 762, 775, 783, 786, 791, 792, 794, 795, 796], "member": [607, 609, 611, 622, 635, 640, 645, 651, 662, 670, 715, 718, 763, 765, 772, 775, 779, 785, 786, 794, 795, 796], "memberlist": 786, "membership": [673, 749], "memcheck": [617, 781], "memcpy": [594, 595, 689, 766, 770], "memcpyopt": 595, "memdep": 594, "memfenc": 591, "memmov": [689, 770], "memop": 646, "memoriz": 611, "memory": [20, 33, 34, 36, 37, 38, 55, 56, 66, 67, 80, 93, 96, 97, 100, 101, 104, 105, 106, 107, 115, 120, 132, 133, 145, 157, 158, 173, 186, 187, 189, 190, 191, 194, 195, 196, 203, 204, 209, 224, 225, 241, 242, 254, 255, 268, 281, 282, 283, 286, 287, 294, 295, 296, 297, 298, 299, 300, 301, 309, 314, 349, 354, 370, 383, 384, 386, 387, 388, 404, 405, 418, 419, 431, 444, 447, 448, 451, 452, 455, 456, 457, 471, 472, 479, 482, 496, 497, 499, 500, 501, 517, 518, 530, 531, 544, 557, 560, 561, 564, 565, 568, 569, 570, 571, 579, 584, 589, 590, 595, 597, 606, 608, 613, 615, 617, 629, 632, 642, 643, 646, 662, 665, 668, 669, 673, 674, 676, 677, 680, 681, 683, 688, 700, 701, 702, 710, 713, 716, 717, 718, 720, 721, 723, 725, 726, 729, 731, 732, 733, 756, 757, 759, 764, 765, 766, 768, 769, 770, 774, 783, 785, 786, 788, 789, 791, 792, 794, 795, 796, 797, 809, 810, 811, 812, 813, 815, 816, 817], "memory_manag": 617, "memory_order_acq_rel": [595, 715], "memory_order_acquir": [595, 715], "memory_order_consum": 595, "memory_order_relaxed": [595, 715], "memory_order_releas": [595, 715], "memory_order_seq_cst": [595, 715], "memory_ur": 591, "memoryaccess": 726, "memorybuff": [611, 731, 749], "memorydef": 726, "memorydependenceanalys": 726, "memorydependencyanalys": 595, "memoryloc": 726, "memoryph": 726, "memorysanitiz": [715, 717], "memoryss": [594, 682, 784], "memoryssaupdat": 726, "memoryssawalk": 726, "memoryus": 726, "memorywithorigin": 606, "memr": [608, 786], "memrr": 786, "memset": [595, 689, 746], "memtag": 725, "memtagsanitiz": [715, 756], "mental": [609, 749], "mentality": 604, "mention": [586, 597, 612, 689, 724, 751], "mentioned": [585, 591, 597, 598, 606, 608, 611, 661, 669, 683, 701, 704, 715, 719, 727, 730, 734, 739, 749, 764, 765, 770], "mentioning": [601, 670, 708, 760, 762], "mentorship": 610, "merely": [681, 685, 715, 746, 747, 766, 770, 810], "merg": [593, 594, 626, 642, 666, 670, 680, 683, 686, 696, 701, 704, 719, 726, 727, 759, 765, 772, 779, 785, 809, 810, 811, 812, 813, 814, 815, 816], "merge_control_fil": 717, "mergeabl": 746, "mergebb": [812, 813, 814, 815, 816], "merged": [606, 608, 646, 650, 662, 670, 675, 686, 707, 710, 715, 717, 727, 749, 751, 758, 765, 776, 816], "mergedloadstoremot": 710, "mergefunct": 784, "mergemask": 715, "merging": [594, 612, 645, 646, 666, 710, 715, 717, 718, 746, 753, 765, 766, 784], "merit": 670, "mesa": 591, "mesa3d": 591, "mesh": 591, "mesh_scratch_memory_siz": 591, "messag": [27, 120, 129, 209, 220, 314, 378, 479, 490, 584, 591, 601, 602, 606, 607, 610, 612, 617, 622, 632, 637, 640, 661, 673, 682, 683, 705, 709, 716, 717, 728, 730, 733, 747, 749, 751, 761, 762, 774, 776, 777, 781, 788, 792, 815], "messing": 787, "messy": 608, "met": [585, 586, 608, 640, 643, 680, 707, 715, 721, 727, 749, 759, 765, 768, 774, 777], "metadat": [598, 599, 603, 608, 618, 670, 675, 678, 680, 681, 690, 700, 710, 714, 716, 721, 727, 732, 746, 747, 756, 781, 808, 816], "metadatarecord": 791, "metal": [705, 715], "metarenam": 602, "metasyntactic": 602, "metatad": 600, "method": [585, 586, 602, 604, 605, 607, 608, 612, 640, 661, 669, 670, 674, 680, 681, 683, 691, 696, 700, 703, 705, 707, 708, 709, 711, 713, 714, 715, 716, 720, 727, 730, 731, 747, 757, 762, 765, 766, 768, 770, 774, 776, 780, 786, 787, 789, 792, 794, 795, 796, 809, 810, 811, 812, 814], "methodbod": 786, "methodology": 673, "methodprotos": 786, "metric": [599, 631, 694, 717, 766, 779, 788, 790], "meyer": 611, "mf": [608, 661, 692, 733, 753], "mfc": 736, "mfctypeserverindex": 736, "mfenc": 595, "mfloat": [705, 706], "mfloat128": 757, "mflop": 785, "mfpu": 705, "mft": 744, "mgrid331": 752, "mi": [608, 691, 692, 721, 753, 786], "mi100": 591, "mi25": 591, "mi50": 591, "mi6": 591, "mi60": 591, "mi8": 591, "mib": 675, "michigan": 669, "micro": [586, 591, 611, 640, 752, 766], "microbenchmark": [766, 779], "microcod": 591, "microcontroller": 663, "microopbuffersiz": 640, "microphon": 724, "microprocessor": [608, 715, 786], "microsecond": 791, "microsoft": [608, 611, 635, 645, 661, 663, 675, 684, 701, 713, 715, 736, 740, 743, 744, 756, 762, 765], "mid": [678, 713, 715, 765], "middl": [585, 607, 611, 670, 680, 713, 715, 730, 732, 740, 746, 770, 772], "midly": 606, "might": [585, 586, 594, 595, 596, 600, 601, 602, 606, 608, 609, 610, 611, 612, 622, 628, 632, 640, 643, 661, 670, 672, 676, 678, 679, 680, 683, 685, 691, 703, 706, 707, 708, 715, 716, 717, 719, 722, 723, 727, 728, 731, 740, 741, 743, 747, 749, 750, 751, 752, 761, 762, 765, 766, 767, 770, 771, 772, 774, 775, 782, 783, 785, 786, 792, 812, 815, 817], "migrat": [591, 670, 680, 793], "migrated": [612, 670, 751], "migrating": [594, 751], "mikhail": 747, "mileag": 724, "mileston": 727, "mill": 661, "million": [715, 749], "millisecond": 790, "mimalloc": 606, "mimic": [587, 611, 649, 650, 731, 751], "min": [120, 209, 314, 479, 584, 591, 598, 612, 632, 645, 646, 650, 662, 715, 717, 724, 758, 766, 779, 790], "min_dx10": 591, "min_int_bit": 749, "mind": [611, 670, 730, 749, 761, 809, 814], "minded": 814, "mindful": 610, "mingw": [606, 608, 685, 703, 757], "mingw32": [608, 701, 781], "mingw32msvc": 608, "mingw64": 683, "minimal": [591, 593, 608, 611, 622, 632, 666, 672, 731, 749, 750, 757, 765, 775, 788, 809, 813], "minimaldebuginfo": 741, "minimally": [595, 608, 672], "minimis": [753, 772], "minimiz": [585, 603, 608, 615, 620, 670, 672, 681, 688, 694, 715, 717, 718, 749, 766, 783, 791], "minimize_crash": 717, "minimized": 717, "minimizing": [604, 747, 768], "minimum": [586, 591, 606, 612, 613, 653, 670, 674, 683, 689, 701, 707, 709, 714, 728, 759, 761, 762, 765, 766, 768, 772, 779, 786, 790, 796, 809], "minimum_instruction_length": 591, "minor": [586, 608, 610, 611, 670, 727, 728, 736, 745, 749, 817], "minor_processing": 766, "minor_vers": 591, "minorvers": 736, "minscalar": 693, "minscalarsam": 693, "minsiz": [598, 715], "minsizerel": [604, 606, 683], "minus": [585, 586, 590, 591, 600, 715, 764], "minut": [682, 683, 686, 701, 726, 728], "mioperandinfo": 786, "mip": [595, 608, 678, 683, 688, 693, 706, 715, 753, 786, 789], "mips16": 595, "mips32": 595, "mips64": 789, "mips64el": 789, "mips64l": 757, "mipsel": 789, "mir": [591, 670, 688, 691, 694, 695, 698, 715, 730, 756, 781], "mirdebugify": 710, "mirror": [589, 679, 680, 812, 813], "mirroring": 751, "mirstripdebugify": 710, "mis": [591, 608, 613, 657, 709, 766], "misaligned": 761, "misattributed": 710, "misbehav": 758, "miscellaneous": 715, "miscellanous": 732, "miscommun": 670, "miscompil": [601, 613, 670, 683, 715, 752], "miscompiled": [602, 683, 709], "miscompiling": 709, "misinterpret": 602, "misinterpreted": 589, "mislead": 611, "misleading": [710, 765], "mismatch": [591, 611, 646, 657, 705, 715, 723, 761, 810, 811, 812, 813, 814, 815, 816], "mismatched": [597, 704], "misnamed": 608, "misoptimiz": 600, "mispredict": 766, "mispredicted": 766, "misrepresent": 710, "misrepresenting": 765, "miss": [602, 640, 678, 715, 753, 769], "missed": [640, 759, 782, 785], "missing": [586, 595, 611, 612, 699, 705, 706, 710, 714, 715, 731, 749, 752, 765, 770, 780, 809, 813, 814], "mission": 670, "misspecul": 766, "misspeculated": 766, "misspeculating": 766, "mistak": [609, 611, 678], "mistaken": 811, "misunderstood": [676, 756], "misused": 781, "mit": [670, 766], "mitig": [715, 725, 751, 753, 756, 761, 762], "mitigat": [680, 715, 756, 761, 766, 772], "mitigated": [640, 690, 766], "mitigating": 766, "mitr": 762, "mix": [586, 607, 608, 611, 688, 715, 765, 787], "mixed": [595, 612, 731, 749, 755, 766], "mixing": [612, 681, 699, 715, 718, 766, 776], "mixtur": [585, 586, 655, 694, 766, 776], "mjansson": 606, "mkdir": [606, 683, 699, 717, 728, 751, 767, 779, 781, 790], "ml": [586, 680, 682, 752], "mlim": 613, "mlir": [616, 671, 682, 683, 686, 774], "mlirml": 671, "mlirtorch": 671, "mllvm": [640, 732, 733, 785], "mm0": [608, 776, 777], "mm1": [776, 777], "mm2": [776, 777], "mm3": [776, 777], "mm4": [776, 777], "mm5": [776, 777], "mm6": [776, 777], "mm7": [776, 777], "mma": 757, "mmap": 647, "mmi": 721, "mmio": 715, "mmx": [608, 715, 786], "mnemonic": [643, 786, 789], "mnemonicali": 608, "mno": 591, "mo": 765, "mo1": 786, "mo_cimmediat": 721, "mo_registermask": 608, "mobil": 591, "mock": [714, 781], "mocked": 749, "mocking": 714, "mod": [20, 31, 82, 123, 212, 213, 341, 351, 370, 371, 381, 433, 482, 483, 494, 546, 586, 589, 590, 594, 596, 598, 600, 606, 612, 617, 622, 625, 626, 632, 637, 642, 645, 646, 654, 661, 662, 670, 679, 680, 685, 694, 702, 705, 715, 718, 725, 728, 735, 739, 743, 749, 757, 758, 761, 766, 776, 777, 779, 781, 784, 786, 790, 791, 814, 815], "model": [585, 586, 595, 598, 607, 608, 617, 620, 632, 661, 665, 670, 672, 673, 676, 678, 680, 681, 682, 688, 703, 709, 712, 713, 714, 718, 731, 749, 754, 755, 756, 757, 761, 762, 765, 774, 782, 785, 786, 792, 809, 810, 814, 815], "modeled": [640, 680, 715, 749, 755, 786], "modeling": [640, 712, 755, 785], "modelled": [640, 673, 713, 749, 755], "modelling": [591, 755], "moder": [747, 760], "moderat": [611, 749], "moderator": 670, "modern": [607, 611, 662, 663, 668, 676, 702, 724, 731, 734, 735, 736, 739, 741, 749, 754, 766, 785, 817], "moderniz": 754, "modest": [586, 611], "modfilecount": 736, "modfilecountarray": 736, "modif": [585, 591, 594, 602, 605, 622, 640, 642, 646, 654, 661, 664, 672, 683, 703, 714, 715, 726, 727, 746, 749, 755, 766, 774, 786, 788, 816], "modifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 25, 26, 85, 117, 128, 176, 205, 218, 219, 271, 288, 306, 308, 310, 315, 316, 320, 321, 325, 326, 327, 337, 338, 339, 352, 369, 376, 377, 436, 488, 489, 549, 580, 586, 608, 611, 686, 721, 723, 735, 757], "modified": [585, 586, 591, 592, 594, 602, 608, 611, 622, 642, 654, 661, 694, 710, 712, 714, 715, 726, 730, 740, 743, 747, 749, 752, 765, 770, 772, 788, 794, 811], "modifier0": [588, 591], "modifier1": [588, 591], "modify": [585, 586, 594, 595, 602, 606, 617, 661, 665, 673, 674, 685, 691, 708, 712, 714, 715, 717, 726, 728, 729, 733, 746, 747, 755, 765, 766, 774, 775, 776, 780, 786, 787, 788, 790, 794, 814], "modifying": [606, 607, 611, 617, 622, 640, 715, 717, 730, 733, 747, 749, 751, 779, 788], "modifypassconfig": 714, "modindic": 736, "modinfo": 736, "modinfosiz": 736, "modistream": 739, "modr": 608, "modref": [594, 595, 776], "modrefbit": 776, "modrefresult": 594, "modrefval": 776, "modul": [594, 598, 602, 606, 608, 611, 615, 616, 617, 624, 629, 640, 659, 676, 678, 680, 683, 707, 709, 710, 716, 717, 718, 720, 727, 728, 729, 730, 731, 733, 744, 752, 765, 768, 769, 770, 774, 779, 780, 781, 783, 786, 787, 790, 794, 796, 797, 810, 811, 812, 813, 814, 816], "modular": [594, 659, 731, 766, 788], "modularity": 698, "modulariz": 603, "moduleanalysismanag": 730, "moduleanalysismanagercgsccproxy": 730, "modulebitcodewrit": 674, "modulehandl": 796, "modulehandlet": 796, "moduleid": [781, 810], "moduleindex": 736, "modulelevelpass": 788, "modulenam": [655, 736], "modulepass": [594, 733], "modulepassmanag": 730, "modulepath": 731, "modulesummaryindex": 715, "modulesymstream": 736, "modulo": [585, 586, 608, 715, 765], "moll": 726, "moment": [606, 640, 665, 671, 680, 715, 721, 762, 770, 796], "monday": 682, "monitor": 751, "monitored": [701, 715], "monitoring": [594, 779], "mono": 670, "monolithic": [670, 751, 764], "monorepo": [683, 687, 701, 728, 747, 757, 788], "monorepos": 670, "monospac": [722, 767], "monotonic": [591, 715], "monotonically": 751, "month": [670, 682, 707, 717, 762], "monthly": [682, 762, 763], "mor": [84, 201, 585, 586, 587, 588, 589, 590, 591, 594, 595, 598, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 612, 613, 617, 618, 622, 624, 626, 631, 632, 639, 640, 645, 646, 647, 649, 650, 653, 659, 661, 662, 664, 665, 666, 667, 670, 672, 673, 674, 676, 677, 678, 679, 680, 681, 683, 685, 688, 690, 692, 693, 694, 696, 698, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 718, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 736, 740, 743, 744, 745, 746, 747, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 816, 817], "moreelements": 693, "moreelementsfor": 693, "moreelementstonextmultipl": 693, "moreelementstonextpow2": 693, "moreov": [590, 608, 610, 612, 715, 746], "most": [585, 586, 588, 591, 592, 593, 594, 595, 597, 603, 604, 606, 607, 608, 610, 611, 612, 614, 617, 619, 624, 625, 634, 636, 640, 642, 645, 651, 654, 656, 658, 660, 661, 662, 664, 665, 668, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 682, 683, 687, 688, 691, 693, 696, 700, 701, 702, 704, 705, 706, 707, 708, 709, 711, 714, 715, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 736, 743, 745, 747, 749, 750, 751, 752, 753, 756, 758, 761, 762, 765, 766, 767, 768, 770, 771, 774, 775, 776, 777, 779, 780, 781, 782, 785, 786, 787, 788, 790, 791, 795, 809, 810, 811, 812, 813, 814, 816, 817], "mostly": [595, 608, 640, 661, 662, 683, 686, 696, 716, 719, 726, 727, 730, 746, 761, 765, 770, 779, 786, 791, 812, 816, 817], "motion": [594, 683, 715, 716, 719, 726, 788], "motiv": [586, 712, 714, 795, 812], "motivat": 812, "motivated": [715, 749, 768], "motivating": [585, 724, 814], "motohiro": 608, "mount": [596, 672, 683, 757], "mous": 790, "mov": [585, 586, 591, 594, 595, 596, 606, 608, 611, 612, 622, 670, 675, 679, 680, 682, 683, 696, 701, 707, 715, 719, 729, 730, 731, 746, 749, 755, 765, 766, 768, 770, 777, 788, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817], "mov32mr": 721, "mov32r": [608, 721], "mov32r0": 765, "mov32rm": [721, 765], "mov64r": [721, 786], "mov64rm": 721, "mov64rr": 721, "movabsq": [764, 768], "movapd": 612, "moved": [591, 594, 595, 596, 608, 612, 622, 640, 670, 710, 714, 715, 719, 731, 746, 749, 751, 755, 765, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807], "moveinto": 749, "movhpd": 612, "moving": [591, 606, 622, 665, 679, 682, 710, 746, 755], "movk": 748, "movl": [612, 715, 766, 768, 770], "movnt": 715, "movq": [714, 766, 768, 770], "movsd": 612, "movslq": 768, "movsq": 608, "movsx": 608, "movsx16rm8w": 608, "movsx16rr8w": 608, "movsx32rm16": 608, "movsx32rr16": 608, "movsx32rr8": 608, "movsx64rr16": 608, "movsx64rr32": [608, 632, 765], "movsx64rr8": 608, "movt": 675, "movw": [675, 715], "movz": [597, 715], "mozill": 753, "mpm": 730, "mppassmanag": 790, "mpx": 757, "mr": [714, 731, 797], "mri": [608, 688, 753], "mrm0m": [776, 786], "mrm0r": [776, 786], "mrm1m": 786, "mrm1r": 786, "mrm2m": [776, 786], "mrm2r": [776, 786], "mrm3m": 786, "mrm3r": 786, "mrm4m": 786, "mrm4r": 786, "mrm5m": 786, "mrm5r": 786, "mrm6m": 786, "mrm6r": 786, "mrm7m": 786, "mrm7r": 786, "mrmdestmem": 786, "mrmdestreg": [776, 777, 786], "mrminitreg": 786, "mrmsrcmem": 786, "mrmsrcreg": 786, "mrt": [78, 171, 266, 542], "mrtz": [78, 117, 171, 205, 266, 310, 542, 580], "mrv": 776, "ms": 761, "ms_abi_tripl": 781, "msa": [688, 693, 715], "msan": 717, "msb": [590, 608, 791], "msb_extract": 715, "msbuild": [606, 685], "msdia140": 685, "msdn": [611, 635], "msec": 785, "msf": [736, 741], "msg": [0, 2, 3, 4, 9, 709, 715, 775], "msg_early_prim_dealloc": [378, 490], "msg_g": [27, 129, 220, 378, 490], "msg_get_ddid": 27, "msg_get_doorbel": [27, 378, 490], "msg_gs_alloc_req": [27, 378, 490], "msg_gs_don": [27, 129, 220, 378, 490], "msg_halt_wav": [27, 378, 490], "msg_interrupt": [27, 129, 220, 378, 490, 591], "msg_ordered_ps_don": [27, 378, 490], "msg_savewav": [27, 220, 378, 490], "msg_stall_wave_gen": [27, 378, 490], "msg_sysmsg": [27, 129, 220, 378, 490], "msgpack": 591, "msp430": [608, 683, 715], "mspdb": 736, "mspdbsrv": 736, "mspdbxxxx": 736, "msr": 766, "msse4": 761, "msvc": [606, 608, 611, 673, 675, 683, 703, 715, 736, 749, 757, 765, 766], "mt": 606, "mte": [715, 725], "mthumb": 705, "mtripl": [612, 618, 620, 640, 679, 715, 721, 765], "mtun": 757, "mtyp": 591, "mu": 751, "much": [585, 586, 594, 595, 596, 602, 603, 604, 608, 611, 624, 635, 645, 661, 662, 670, 672, 674, 676, 678, 683, 685, 690, 693, 699, 701, 704, 706, 708, 709, 710, 713, 714, 715, 718, 722, 725, 726, 728, 729, 730, 731, 733, 744, 745, 746, 747, 749, 750, 751, 752, 753, 758, 760, 765, 766, 767, 768, 770, 771, 772, 776, 781, 786, 788, 789, 790, 792, 795, 809, 810, 811, 814, 817], "mul": [585, 589, 612, 681, 710, 729, 746, 776, 810], "mul_r": 776, "mul_rr": 776, "mullin": 591, "mult": [589, 591, 598, 611, 649, 661, 672, 698, 701, 704, 717, 744, 749, 776, 793], "multi_val": 661, "multiarch": [705, 706], "multicl": [775, 777], "multiclass": [777, 786], "multiclassid": 776, "multiclassstat": 776, "multicor": 595, "multidimensional": 715, "multidistributionexampl": 604, "multilib": [672, 706], "multilin": 617, "multimap": 749, "multipl": [590, 591, 592, 594, 595, 596, 598, 599, 603, 604, 606, 607, 608, 610, 611, 612, 615, 626, 628, 631, 633, 634, 640, 641, 642, 654, 655, 661, 662, 664, 667, 669, 670, 675, 678, 681, 682, 683, 689, 690, 693, 696, 701, 703, 708, 710, 713, 714, 715, 717, 719, 720, 721, 726, 727, 728, 731, 736, 744, 746, 747, 750, 755, 759, 765, 766, 768, 770, 771, 772, 774, 775, 777, 779, 781, 782, 783, 785, 786, 787, 788, 789, 790, 792, 809, 810, 811, 812, 813, 816], "multipli": 640, "multiplicand": 715, "multiplied": [591, 646], "multiply": [589, 591, 608, 640, 646, 662, 674, 689, 716, 765], "multiplying": [599, 715, 766], "multiprocessor": [680, 788], "multirepo": 751, "multiset": 749, "multisourc": [670, 709, 752, 765, 779, 780], "multithreaded": [680, 749, 790], "multithreading": 749, "multmp": [810, 811, 812, 813, 814, 815, 816], "multmp1": 810, "multmp2": 810, "multmp3": 810, "multmp4": 811, "mulw": 757, "mummergpu": 752, "mung": [681, 746], "munger_struct": 681, "musl": 717, "must": [20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 83, 84, 85, 110, 111, 117, 120, 123, 124, 125, 126, 127, 129, 130, 176, 199, 200, 205, 209, 212, 213, 214, 215, 216, 217, 220, 221, 223, 271, 304, 305, 310, 314, 340, 341, 352, 355, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 434, 436, 467, 468, 479, 482, 483, 484, 485, 486, 487, 490, 491, 493, 494, 495, 547, 549, 574, 575, 580, 584, 585, 586, 589, 590, 591, 592, 593, 595, 597, 598, 600, 604, 606, 608, 611, 612, 617, 622, 626, 632, 636, 640, 642, 662, 665, 667, 668, 670, 671, 673, 674, 675, 676, 679, 680, 681, 683, 688, 689, 693, 694, 700, 701, 703, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 720, 721, 726, 727, 728, 729, 730, 731, 733, 740, 741, 746, 747, 749, 750, 751, 753, 755, 758, 761, 762, 765, 766, 767, 768, 770, 771, 772, 774, 776, 777, 780, 781, 782, 783, 786, 787, 788, 791, 792, 794, 795, 810, 811, 812, 813, 814, 815, 816], "must_tail_call_return": 665, "mustali": [594, 715], "mustprogress": 598, "mustquot": 792, "musttail": [665, 715], "mutabl": [715, 730, 812, 813, 815, 816, 818, 819], "mutablearrayref": 714, "mutat": [592, 679, 714, 717, 746, 749, 795, 813, 815, 816], "mutated": [611, 710, 795], "mutatestrictfptofp": 592, "mutating": [611, 691, 714, 814], "mutator": [680, 749], "mutex": [595, 794], "mutually": [638, 661, 770, 808], "mv": 683, "mve": 660, "mvt": [608, 688, 786], "my": [594, 670, 680, 683, 728, 729, 730, 731, 751, 779, 788, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 810, 811, 812, 813, 814, 815, 816, 819], "my86_64flag": 792, "my86flag": 792, "my_addit": 765, "my_build_d": 759, "my_fil": 733, "my_fmad": 729, "my_funct": 729, "my_function_fast": 729, "my_function_precis": 729, "my_fuzz": 717, "my_gwp_asan_error": 700, "my_kernel": 729, "my_key": 611, "my_list": 607, "my_list_of_number": 607, "my_local_branch": 751, "my_local_tag": 751, "my_opt_diff": 759, "my_opt_yaml1": 759, "my_opt_yaml2": 759, "my_other_fil": 733, "my_project": 751, "my_string": 607, "my_valu": 611, "my_yaml_fil": 759, "myalloc": 665, "myapp": 731, "myawesomeproject": 715, "mybarflag": 792, "mybison": 780, "myblock": 721, "myboolean": 765, "mybranch": 751, "mybuildd": 606, "mycustomtyp": 792, "mydevic": 779, "mydoclist": 792, "mydoclisttyp": 792, "mydoctyp": 792, "myfirstpatch": 728, "myfirsttypofix": 684, "myflag": 792, "myfoobar": 749, "myfooflag": 792, "myfunct": 729, "mygc": 680, "mygcprint": 680, "myglobal": 765, "myinitprng": 717, "mylist": 792, "mylistel": 792, "mymachinefunctionpass": 733, "mymaptyp": 792, "mymodul": 730, "mynewpass": 613, "myobject": 765, "myocyt": 752, "myownp3set": 765, "mypass": [692, 749, 788], "mypassnam": 749, "mypassopt": 788, "mypatch": 747, "myplugin": 714, "myproj": 751, "myregalloc": 788, "myregisterallocator": 788, "myrepo": 751, "myseq": 792, "myseqel": 792, "myset": 611, "mystery": 681, "mystical": 817, "mystringtyp": 792, "mystruct": 681, "mytarget": 717, "mytyp": 715, "mytype1": 792, "mytype2": 792, "myvar": 681, "n1": [596, 751, 786], "n16": 729, "n2": [596, 765, 786], "n32": 715, "n4absl11string_view": 628, "n8": 715, "n_bucket": 765, "n_hash": 765, "n_stab": 641, "na": 608, "nab": 752, "nadditional": 661, "nail": 812, "naiv": [632, 746], "naively": 766, "nakatan": 608, "naked": [598, 715], "nam": [20, 27, 123, 129, 212, 220, 370, 378, 482, 490, 585, 587, 590, 592, 593, 595, 598, 600, 601, 602, 603, 604, 606, 607, 608, 612, 613, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 649, 650, 653, 654, 655, 657, 660, 661, 662, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 689, 701, 704, 706, 707, 708, 710, 712, 714, 716, 717, 718, 721, 722, 723, 727, 728, 729, 731, 733, 734, 736, 741, 744, 747, 749, 750, 751, 757, 758, 759, 760, 761, 768, 770, 774, 776, 777, 780, 781, 783, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820], "name1": 776, "name2": 776, "name3": 776, "named": [585, 586, 590, 595, 598, 604, 606, 607, 611, 617, 620, 626, 630, 633, 634, 640, 641, 642, 643, 654, 660, 666, 675, 677, 683, 694, 721, 727, 729, 730, 744, 749, 750, 759, 768, 770, 771, 774, 775, 776, 777, 780, 783, 786, 788, 789, 792, 794, 808, 810, 814], "namedindex": 786, "namedvalu": [810, 811, 812, 813, 814, 815, 816], "namedvar": 816, "namefield": 774, "nameflag": 765, "namely": [585, 591, 665, 669, 670, 715, 727], "namesbuff": 736, "namespac": [586, 598, 606, 631, 661, 662, 672, 680, 715, 716, 749, 765, 775, 776, 777, 786, 787, 788, 790, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "namestring": 660, "namesuffix": 776, "namevalu": 776, "naming": [593, 611, 617, 626, 631, 708, 749, 753, 775, 786], "nan": [590, 591, 618, 620, 689, 715, 765], "nand": 715, "nandakumar": 697, "nano": 591, "narrow": [595, 602, 613, 674, 681, 689, 709, 710, 717, 749, 766], "narrowaddr": 715, "narrowcharact": 743, "narrowing": [595, 683, 693, 701], "narrowly": 726, "narrowscalar": 693, "narrowscalarfor": 693, "narrowscalarforcartesianproduct": 693, "narrowscalarfortypeswithmemsiz": 693, "national": 609, "nativ": [586, 588, 591, 595, 602, 604, 606, 607, 613, 618, 622, 625, 655, 672, 673, 676, 683, 699, 706, 709, 715, 718, 729, 751, 754, 765, 768, 786, 792, 794, 795, 796, 797, 810, 811, 812, 813, 814, 815, 816, 817], "native_command": 606, "natively": [595, 608, 674, 678, 681, 715, 751, 786, 792, 817], "natur": [586, 610, 646, 670, 673, 680, 743, 749, 758, 765, 771, 772], "natural": [585, 586, 611, 612, 678, 681, 683, 708, 714, 715, 718, 719, 722, 749, 753, 766, 767, 776, 788, 792, 810], "naturally": [585, 586, 591, 595, 611, 661, 669, 680, 749, 751, 812, 814], "natv": 744, "naveen": 746, "navigat": [661, 671, 747], "navigating": 790, "na\u00efv": 753, "nbranch": 632, "nbsp": 608, "nc": 591, "nc_nv": 591, "ncsa": 670, "nctaid": 729, "nd": 786, "ndebug": [606, 661, 745], "ndk": 683, "near": [612, 678, 682, 730, 743, 766, 770, 816], "near16": 735, "near32": 735, "near64": 735, "nearby": [677, 686, 724], "nearbyint": 785, "nearest": [689, 700, 715, 726, 816], "nearly": [606, 611], "nearpoint": 743, "nearpointer128": 743, "nearpointer32": 743, "nearpointer64": 743, "neat": 795, "nec": [663, 754], "necessarily": [611, 620, 662, 670, 676, 681, 683, 693, 715, 719, 732, 734, 740, 744, 749, 758, 761, 762, 765, 766, 770, 791, 816], "necessary": [585, 586, 591, 594, 595, 597, 599, 606, 608, 610, 611, 612, 626, 661, 665, 668, 670, 673, 674, 678, 680, 683, 688, 691, 693, 696, 704, 705, 706, 707, 709, 710, 711, 715, 716, 717, 718, 720, 721, 722, 728, 730, 731, 732, 741, 743, 744, 747, 749, 753, 761, 762, 763, 765, 766, 767, 768, 770, 771, 772, 774, 776, 779, 781, 783, 784, 785, 786, 787, 788, 790, 810, 815, 816, 818], "necessitat": 703, "necessity": 586, "need": [585, 586, 591, 592, 594, 595, 597, 598, 599, 600, 601, 602, 604, 606, 608, 610, 611, 612, 614, 619, 622, 626, 632, 656, 658, 660, 661, 662, 665, 668, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 682, 683, 685, 686, 687, 688, 690, 691, 693, 694, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 717, 718, 719, 721, 723, 725, 726, 727, 728, 729, 730, 731, 734, 736, 740, 741, 747, 748, 749, 750, 751, 755, 757, 758, 760, 762, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 783, 784, 786, 787, 788, 789, 790, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "needed": [585, 586, 590, 591, 592, 593, 600, 606, 607, 608, 611, 612, 618, 620, 625, 649, 650, 659, 661, 665, 670, 671, 675, 676, 677, 680, 681, 683, 685, 699, 703, 705, 707, 708, 714, 715, 718, 726, 731, 732, 746, 747, 749, 757, 758, 760, 764, 765, 768, 770, 771, 774, 777, 781, 786, 788, 792, 794, 795, 796, 797, 808, 809, 813, 814, 816], "needing": [585, 586, 591, 604, 606, 688, 715, 727, 772, 786, 816], "needlessly": 710, "needstub": 786, "neelakantam": 746, "neg": [25, 128, 219, 316, 321, 326, 338, 377, 489, 715], "neg_h": [0, 1, 4, 7, 8, 9], "neg_lo": [0, 1, 4, 7, 8, 9], "negat": [586, 589, 590, 591, 598, 608, 611, 612, 617, 665, 670, 673, 678, 688, 689, 715, 721, 755, 761, 765, 766, 776, 786, 813], "negated": [598, 642, 654, 715], "negating": 591, "negatively": [640, 701, 772], "negeightkind": 715, "neglected": 780, "negligibl": [677, 717], "negotiat": 762, "neighboring": 589, "neighbour": 632, "neith": [585, 586, 594, 597, 598, 655, 667, 673, 678, 714, 715, 717, 727, 736, 746, 768], "nekbon": 752, "nemanj": 753, "neon": [608, 660, 663, 688, 693, 706, 715, 754, 774, 784], "ness": [603, 714], "nest": [586, 591, 594, 598, 611, 673, 680, 715, 749, 755, 782, 786, 788], "nestabl": 776, "nested": [585, 586, 591, 598, 606, 607, 608, 611, 617, 667, 669, 673, 715, 719, 722, 733, 736, 749, 751, 755, 766, 776, 788, 809, 812], "nesting": [611, 640, 667, 673, 715, 719, 730, 785], "net": [591, 664, 677, 682, 701, 707, 752], "netbsd": [683, 789], "network": [608, 717, 749, 757], "neumann": 715, "neural": 780, "neutral": [586, 715], "nev": [591, 594, 595, 597, 604, 608, 611, 612, 622, 626, 640, 662, 665, 666, 672, 676, 677, 680, 681, 686, 688, 698, 699, 708, 715, 718, 719, 727, 731, 733, 734, 735, 741, 746, 749, 751, 759, 765, 766, 772, 774, 782, 786, 788, 789, 790, 792, 794, 796, 817], "never_instru": 789, "never_instrumented": 789, "nevertheless": 611, "new": [585, 586, 592, 593, 595, 598, 601, 602, 604, 606, 607, 608, 610, 611, 612, 613, 617, 622, 632, 640, 642, 655, 659, 660, 661, 662, 664, 668, 672, 678, 679, 680, 682, 683, 684, 685, 689, 694, 698, 699, 701, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 735, 736, 740, 743, 747, 748, 751, 752, 753, 755, 756, 757, 759, 761, 763, 764, 768, 770, 771, 772, 774, 776, 777, 779, 782, 784, 786, 787, 792, 794, 795, 796, 809, 810, 811, 812, 813, 815, 816, 817], "new_cond": 715, "new_corpus_d": 717, "new_guard_cond": 715, "new_install_nam": 634, "new_potentially_interesting_inputs_d": 717, "new_rpath": 634, "newabbrevlen": 598, "newaddr": 689, "newcomer": [777, 814], "newest": [675, 811], "newinst": 749, "newlin": [598, 611, 617, 626, 636, 646, 776, 813], "newly": [601, 611, 689, 699, 714, 715, 717, 731, 746, 749, 753, 770, 795, 810, 811, 812, 813, 816], "newoffset": 715, "newptr": 715, "newptr2": 715, "newsletterml": 671, "newslettersnewsletter": 671, "newtoset": 611, "newty": 715, "newversionformat": 736, "next": [585, 586, 589, 591, 593, 598, 601, 602, 611, 640, 642, 654, 661, 665, 670, 673, 680, 681, 683, 693, 698, 703, 704, 707, 708, 712, 714, 715, 718, 719, 720, 724, 727, 733, 734, 740, 747, 749, 755, 757, 758, 762, 765, 766, 772, 776, 781, 783, 786, 787, 788, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816], "nextindvar": 715, "nextprec": [809, 810, 811, 812, 813, 814, 815, 816], "nextvar": [812, 813, 814, 815, 816], "nextvari": [812, 813], "nfc": [670, 716], "ngg": 591, "nggcullingdat": 591, "nggsubgroupsiz": 591, "nggtess": 591, "ni": 715, "nic": [612, 661, 683, 688, 704, 726, 732, 746, 749, 776, 788, 792, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818], "nicely": 811, "nich": 606, "nicknam": 760, "nicol": 753, "nifty": [788, 812, 817], "nightly": [670, 682, 707, 780, 781], "nikhgupt": 762, "nikhil": 762, "ninety": 762, "ninf": 715, "ninj": [593, 604, 606, 683, 686, 691, 701, 702, 703, 704, 705, 706, 717, 728, 747, 751, 752, 779, 787, 790], "niveau": 793, "nm": [616, 627, 643, 644, 649, 650, 699, 705, 757], "nmak": 606, "nn": [683, 752], "nnan": 715, "nnnn": 670, "nnnnnn": 608, "no": [279, 280, 288, 291, 294, 295, 296, 306, 308, 585, 586, 587, 588, 589, 591, 595, 597, 598, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 615, 617, 618, 620, 621, 622, 625, 626, 627, 628, 629, 631, 636, 639, 640, 641, 642, 643, 645, 646, 649, 650, 651, 653, 654, 655, 657, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 673, 675, 676, 678, 680, 681, 683, 686, 688, 689, 690, 691, 693, 694, 701, 703, 704, 707, 708, 710, 711, 713, 714, 716, 717, 719, 721, 722, 725, 726, 728, 730, 731, 732, 733, 734, 736, 738, 741, 743, 749, 750, 751, 752, 754, 755, 757, 758, 760, 762, 763, 765, 766, 768, 770, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 791, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "no_cf": 715, "no_dead_strip": 715, "no_merg": 598, "no_switch": 785, "no_turbo": 596, "no_warning_for_no_symbol": 636, "noali": [594, 598, 640, 665, 678, 681, 726], "nobody": 752, "nobuiltin": [598, 715], "nocaptur": [598, 715, 746], "nocf_check": [598, 715], "nod": [594, 599, 600, 608, 624, 660, 667, 669, 673, 677, 689, 708, 714, 716, 719, 721, 726, 727, 729, 749, 755, 756, 765, 770, 774, 776, 782, 783, 785, 786, 788, 792, 809, 810, 811, 812, 813, 814, 815, 816], "nodebuginfo": 661, "nodeduplicat": [598, 715], "nodefinit": 759, "nodenam": 775, "nodetail": 624, "nodetyp": [592, 786], "noduplicat": 715, "noencod": 608, "noexcept": 673, "noexec": 714, "nofre": [598, 715], "nohup": 758, "noimm": [776, 777], "noimplicitfloat": [598, 715], "noinlin": [598, 711, 715, 759], "nois": [596, 611, 747], "noisy": [670, 746, 749], "noitin": 620, "noitinerar": [777, 786], "noitinerary": [776, 777, 786], "nolink": 661, "noload": 642, "nologo": 635, "nom": [20, 123, 212, 370, 482, 591, 744, 765], "nombr": 123, "nomenclatur": 593, "nomerg": 715, "nomin": 763, "nominally": 715, "nominat": 762, "nominated": 762, "nomine": 762, "nomodref": 594, "non": [85, 176, 271, 352, 436, 549, 585, 586, 589, 590, 592, 594, 595, 596, 598, 602, 604, 605, 606, 607, 608, 612, 613, 617, 618, 620, 622, 623, 624, 625, 626, 627, 629, 630, 632, 633, 634, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 653, 654, 655, 657, 659, 660, 661, 662, 663, 665, 666, 667, 670, 673, 674, 677, 678, 681, 682, 683, 688, 689, 690, 693, 699, 701, 702, 704, 705, 708, 709, 710, 712, 713, 714, 717, 718, 719, 720, 721, 724, 725, 727, 729, 730, 731, 733, 735, 736, 741, 743, 749, 751, 753, 758, 759, 761, 762, 765, 766, 768, 771, 772, 776, 781, 782, 783, 786, 787, 788, 791, 792, 809, 811, 812, 813, 814, 815, 816, 817, 818], "non_recurs": 765, "nonan": 689, "nonatomic": 765, "nonempty": 715, "nonetheless": [585, 586, 715, 795, 796, 797], "nonfatal": 776, "nongnu": 752, "nonintuit": 784, "nonlazybind": [598, 715], "nonneg": 715, "nonnull": [598, 673, 678, 715], "nonparameterized": 776, "nonsens": [722, 767, 814], "nonstandard": 776, "nonstop": 790, "nonstop_tsc": 791, "nontemp_nod": 715, "nontemplated": 661, "nontemporal": [591, 715], "nonzero": [598, 603], "noop": 715, "nop": [675, 715, 768, 789], "noprfx": 776, "noprofil": 715, "nor": [585, 586, 591, 598, 608, 673, 676, 680, 681, 714, 715, 717, 727, 736, 746, 768, 771, 772], "norecurs": [598, 715], "noredzon": [598, 715], "noreg": [591, 710, 721, 765], "noreturn": [598, 678, 715, 719], "norm": [670, 760], "normal": [591, 595, 597, 598, 606, 608, 611, 612, 641, 642, 649, 650, 661, 662, 670, 673, 677, 678, 680, 683, 686, 688, 689, 700, 707, 710, 714, 715, 718, 719, 723, 735, 749, 761, 764, 766, 767, 768, 770, 771, 783, 788, 813], "normalformatting": 661, "normaliz": 781, "normalized": [589, 792], "normalizedpolar": 792, "normalizing": 792, "normally": [585, 586, 588, 595, 598, 608, 617, 622, 623, 626, 630, 633, 637, 645, 659, 665, 670, 672, 678, 704, 707, 715, 733, 747, 762, 765, 766, 768, 774, 776, 785, 790], "norman": 608, "normat": [585, 586], "northern": 591, "northov": 697, "nosanitize_coverag": [598, 715], "nosync": [598, 715], "not": [27, 31, 32, 82, 83, 96, 97, 107, 117, 120, 129, 175, 186, 187, 196, 205, 209, 220, 270, 286, 287, 288, 301, 306, 308, 310, 314, 341, 351, 378, 381, 382, 433, 434, 435, 447, 448, 457, 479, 490, 494, 495, 546, 547, 548, 560, 561, 571, 580, 584, 586, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 634, 635, 636, 640, 641, 642, 643, 645, 646, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 662, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 720, 721, 722, 723, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 747, 748, 749, 750, 752, 753, 754, 755, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "not_inline_hd": 662, "not_mangled": 627, "not_null": 677, "notabl": [606, 608, 693, 714, 724], "notably": [662, 674, 681, 700, 704, 715, 749, 765, 766], "notail": 715, "notat": [589, 590, 591, 661, 715, 776, 792], "noted": [588, 605, 693, 694, 770, 775, 794], "noteligibletoimport": 715, "notevex2vexconvertibl": 776, "noteworthy": 719, "notfp": 776, "nothidden": 661, "nothing": [78, 171, 266, 542, 591, 608, 612, 640, 665, 670, 680, 681, 686, 693, 707, 714, 715, 731, 746, 749, 751, 760, 771, 776, 781, 788, 814], "nothrow": 595, "notic": [606, 607, 608, 669, 670, 676, 708, 715, 719, 727, 728, 747, 776, 810, 814], "notice": 678, "noticed": [610, 710, 729], "noticing": [662, 681], "notif": [594, 701, 731, 747, 762, 772], "notified": [640, 707, 714], "notify": [591, 701, 714, 728, 731, 760, 762, 785], "notifyemitted": 714, "notifyfailed": 714, "notifyfinalized": 714, "notifying": 594, "notifyloaded": 714, "notifyremovingresourc": 714, "notifyresolved": 714, "notifytransferringresourc": 714, "noting": [603, 604, 678, 749], "notion": [608, 666, 670, 715, 734, 765, 788, 811, 812], "notional": 708, "notionally": 611, "notorious": 771, "nottranslated": 743, "notw": 612, "notwithstanding": 670, "notypemerg": 741, "noun": [611, 753], "noundef": [598, 715], "nounwind": [598, 612, 673, 678, 715, 729, 765, 781, 783], "nouserdataspilling": 591, "nouveau": 793, "nov": 701, "novel": [680, 715, 749], "novic": 606, "now": [585, 586, 591, 602, 606, 608, 609, 611, 612, 617, 640, 661, 662, 666, 670, 671, 672, 673, 674, 685, 688, 701, 704, 706, 708, 710, 713, 714, 715, 717, 719, 721, 726, 727, 728, 729, 731, 732, 740, 743, 747, 749, 751, 752, 757, 761, 763, 765, 766, 768, 770, 778, 780, 783, 787, 788, 790, 792, 794, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 817], "nowaday": [706, 751], "nozero": 620, "npb": 752, "npb3": 752, "nproc": 683, "nsa": [84, 590], "nsstring": 765, "nsw": [665, 670, 678, 681, 715, 719], "nsz": 715, "nt": [622, 706, 758], "nt_amd_hsa_code_object_vers": 591, "nt_amd_hsa_hsail": 591, "nt_amd_hsa_isa_nam": 591, "nt_amd_hsa_isa_vers": 591, "nt_amd_hsa_metadat": 591, "nt_amdgpu_metadat": 591, "nth": [585, 586, 611, 626], "ntid": 729, "ntohl": 608, "ntradbigmip": 642, "ntradlittlemip": 642, "nuanceur": 123, "nuisanc": 670, "nul": [591, 749, 813], "null": [36, 37, 39, 40, 43, 45, 48, 49, 54, 55, 56, 69, 70, 71, 72, 73, 78, 171, 266, 542, 585, 586, 591, 594, 598, 608, 611, 618, 620, 660, 665, 673, 675, 677, 678, 700, 710, 714, 715, 721, 727, 729, 731, 733, 736, 741, 746, 749, 759, 761, 765, 768, 770, 774, 775, 776, 786, 788, 792, 795, 809, 810, 811, 812, 813, 814, 815, 816], "null_pointer_is_valid": [598, 715], "nullary": 809, "nullpointerexcept": 677, "nullptr": [611, 714, 715, 731, 774, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "nullptr_t": 743, "nullunknown": 715, "num": [590, 591, 612, 615, 617, 626, 632, 646, 680, 715, 747, 751, 770, 786], "num_arg": 715, "num_el": 715, "num_interpol": 591, "num_repetit": 632, "numabbrevop": 598, "numarg": [768, 816], "numb": [27, 30, 117, 120, 129, 205, 209, 220, 223, 310, 314, 378, 380, 479, 490, 493, 580, 584, 589, 590, 594, 595, 597, 599, 600, 601, 602, 606, 607, 608, 610, 611, 612, 615, 617, 622, 624, 625, 626, 631, 632, 638, 639, 640, 642, 643, 645, 646, 653, 654, 655, 657, 660, 662, 665, 666, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 688, 689, 693, 700, 701, 702, 706, 707, 711, 714, 715, 717, 718, 719, 721, 726, 727, 731, 732, 735, 736, 738, 740, 741, 743, 744, 746, 747, 749, 750, 751, 755, 757, 759, 761, 764, 765, 766, 768, 770, 772, 775, 776, 777, 780, 781, 782, 785, 786, 789, 791, 792, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "number": [20, 27, 129, 212, 220, 370, 378, 482, 490, 585, 586, 589, 591, 608, 612, 624, 640, 643, 661, 662, 666, 668, 689, 701, 707, 710, 715, 717, 721, 727, 745, 747, 765, 774, 781, 785, 786, 791, 808, 817], "number1": 727, "number2": 727, "numbered": [585, 586, 591, 598, 640, 670, 676, 715, 722, 749, 767], "numberexpr": [809, 810, 811, 812, 813, 814, 815, 816], "numberexprast": [809, 810, 811, 812, 813, 814, 815, 816], "numbering": [585, 586, 591, 608, 670, 715, 716, 726, 733, 788], "numberofauxsymbol": 820, "numberofcpucor": 717, "numbit": 749, "numblock": 740, "numbyt": 768, "numconst": 768, "numdirectorybyt": 740, "numel": 715, "numelt": 598, "numeltsparam": [598, 715], "numentr": 598, "numentry": 598, "numer": 123, "numeric": [20, 27, 129, 212, 220, 370, 378, 482, 490, 589, 602, 640, 641, 643, 661, 685, 715, 721, 743, 744, 749, 774, 776, 786, 789, 791, 808, 809, 810, 811, 812, 813, 814, 815, 816], "numerical": [715, 774], "numerical_limit": 766, "numerous": [585, 603, 678, 749, 777, 786], "numexpress": 666, "numfaultingpc": 677, "numfilenam": 666, "numfunct": [677, 768], "numfunctionsinmodul": 731, "numhashbucket": 743, "numindic": 666, "numlin": 666, "numliveout": 768, "numloc": 768, "nummember": 749, "nummet": 680, "nummodul": 736, "nummodulevalu": 598, "numop": [598, 786], "numpoint": 632, "numrecord": 768, "numreg": 666, "numregionarray": 666, "numroot": 680, "numsgpr": 591, "numshadowbyt": 768, "numsourcefil": 736, "numspilledsgpr": 591, "numspilledvgpr": 591, "numstr": [808, 809, 810, 811, 812, 813, 814, 815, 816], "numstream": 740, "numthread": 731, "numval": [808, 809, 810, 811, 812, 813, 814, 815, 816], "numvar": 612, "numvgpr": 591, "numword": 759, "numxform": 749, "nutshel": 749, "nuw": [678, 715], "nuzman": [755, 785], "nval": 715, "nvcall": 605, "nvcc": 608, "nvcl": 729, "nvidi": [586, 608, 617, 662, 672, 729, 762], "nvptx": [683, 715, 753, 784], "nvptx64": [617, 729], "nvt": 786, "nvvm": 715, "nvvmreflect": 729, "nw": 752, "nxv16i1": 715, "nxv1i64": 715, "nxv2f64": 715, "nxv2i16": 715, "nxv2i8": 715, "nxv2p0i8": 715, "nxv46i32": 715, "nxv4f32": 715, "nxv4i32": 715, "nxv4i64": 715, "nxv4p4i32": 715, "nxv8f64": 715, "nxv8i16": 715, "o": [586, 591, 594, 596, 598, 611, 612, 615, 616, 618, 622, 623, 625, 626, 627, 628, 630, 631, 633, 634, 636, 637, 638, 640, 646, 651, 652, 653, 654, 659, 660, 661, 662, 663, 671, 675, 683, 686, 694, 699, 709, 710, 714, 715, 717, 718, 721, 729, 731, 733, 734, 743, 746, 749, 750, 756, 757, 759, 761, 779, 781, 786, 788, 790, 794, 795, 796, 797, 810, 811, 812, 813, 814, 815, 816, 818], "o0": [591, 618, 661, 679, 690, 696, 709, 757, 765, 782, 786], "o1": [618, 661, 696, 709, 710, 717, 786], "o2": [594, 595, 604, 618, 640, 655, 661, 678, 679, 683, 710, 715, 729, 730, 733, 745, 761, 786], "o3": [604, 618, 661, 678, 679, 683, 709, 729, 765, 779, 785, 786, 790, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "o4": 786, "o5": 786, "o6": 786, "o7": 786, "ob": 776, "obey": 715, "obit": 715, "obj": [618, 625, 651, 655, 673, 680, 715, 758, 765, 770, 779, 780], "obj2yaml": 757, "obj_root": 683, "objc": [631, 643, 722, 765, 767, 784], "objc_autoreleas": 715, "objc_autoreleasepoolpop": 715, "objc_autoreleasepoolpush": 715, "objc_autoreleasereturnvalu": 715, "objc_copyweak": 715, "objc_destroyweak": 715, "objc_initweak": 715, "objc_loadweak": 715, "objc_loadweakretained": 715, "objc_moveweak": 715, "objc_property": 765, "objc_releas": 715, "objc_retain": 715, "objc_retainautoreleas": 715, "objc_retainautoreleasedreturnvalu": 715, "objc_retainautoreleasereturnvalu": 715, "objc_retainblock": 715, "objc_storestrong": 715, "objc_storeweak": 715, "objc_unsafeclaimautoreleasedreturnvalu": 715, "objcopy": [616, 634, 654, 757], "objdump": [616, 641, 644, 649, 650, 757, 790], "object": [594, 595, 597, 602, 604, 606, 608, 610, 611, 613, 615, 616, 617, 618, 620, 622, 625, 626, 631, 632, 635, 638, 640, 644, 645, 653, 655, 659, 661, 663, 665, 666, 668, 670, 673, 675, 676, 677, 679, 680, 685, 688, 689, 691, 699, 703, 705, 706, 708, 709, 711, 713, 714, 716, 717, 718, 721, 727, 729, 731, 733, 735, 736, 739, 741, 743, 744, 751, 757, 761, 762, 766, 768, 771, 772, 774, 776, 779, 780, 783, 786, 788, 791, 792, 794, 795, 809, 810, 812, 814, 816, 817, 818, 819, 820], "object_addr": 680, "object_error": 749, "objectbuff": 720, "objectbufferstream": 720, "objectcach": 720, "objectfil": 720, "objectimag": 720, "objectivec": 715, "objectlai": [794, 795, 796, 797], "objectlinkinglai": [731, 784, 795], "objfilenam": 736, "objlinkinglai": 731, "objptr": 715, "oblivious": 597, "obscur": [715, 749], "observ": [585, 608, 611, 715, 719, 765, 766, 770, 776, 790, 817], "observably": 770, "observed": [595, 640, 715, 717, 735, 736, 739, 741, 743], "obsolet": [601, 671, 735], "obstacl": 753, "obstructing": 772, "obtain": [585, 586, 591, 603, 608, 662, 665, 666, 668, 685, 691, 715, 749, 762, 771, 775, 776, 786, 790, 791, 811], "obtained": [585, 586, 591, 666, 709, 720, 725, 726, 736, 746, 749, 775, 776, 791], "obtaining": [683, 705, 719, 749], "obtus": 681, "obviat": 750, "obvious": [594, 595, 597, 602, 608, 611, 669, 670, 676, 701, 715, 727, 741, 746, 751, 761, 765, 766, 768, 774, 809, 811, 813, 817], "obviously": [594, 608, 661, 670, 674, 681, 707, 715, 727, 736, 746, 749, 758, 788, 809], "ocaml": [606, 683], "ocamldoc": 606, "occas": [611, 738], "occasional": 701, "occasionally": [598, 662, 670, 680, 690, 714, 743, 762], "occup": [96, 97, 98, 99, 112, 113, 114, 186, 187, 188, 201, 202, 286, 287, 288, 289, 306, 307, 308, 447, 448, 449, 450, 469, 470, 560, 561, 562, 563, 576, 577, 578, 589, 645, 740], "occupancy": 591, "occupy": [585, 715], "occupying": 591, "occur": [585, 586, 589, 590, 591, 598, 600, 608, 611, 612, 613, 617, 618, 622, 623, 624, 625, 630, 632, 633, 637, 640, 659, 660, 667, 670, 673, 680, 681, 691, 694, 700, 710, 715, 716, 719, 721, 731, 746, 749, 750, 751, 760, 761, 762, 765, 766, 768, 770, 771, 776, 781, 782, 788, 809, 815], "occurred": [591, 709, 710, 715, 760, 761, 765, 766], "occurrent": [598, 612, 660, 688, 715, 776], "occurring": [585, 586, 670, 681, 766], "ocommunity": 671, "oct": [651, 725, 751], "octal": [590, 591, 641, 651, 653, 661], "octal_numb": 591, "octopus": 751, "odd": [585, 586, 661, 670, 709, 715], "oddly": 776, "odr": [615, 714, 715], "oeq": 715, "of": [1, 8, 14, 19, 20, 24, 27, 31, 66, 67, 79, 80, 84, 85, 117, 120, 123, 127, 129, 157, 158, 172, 173, 175, 176, 205, 209, 212, 213, 217, 220, 254, 255, 267, 268, 270, 271, 288, 306, 308, 310, 314, 315, 320, 325, 333, 337, 341, 349, 350, 352, 369, 370, 371, 375, 378, 381, 418, 419, 430, 431, 435, 436, 479, 482, 483, 487, 490, 494, 530, 531, 543, 544, 548, 549, 580, 584, 587, 588, 591, 592, 593, 595, 596, 597, 598, 600, 602, 603, 605, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 665, 668, 669, 672, 673, 674, 675, 677, 682, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 714, 716, 719, 720, 721, 722, 723, 724, 725, 727, 728, 731, 732, 733, 735, 736, 738, 739, 740, 741, 743, 744, 745, 747, 748, 751, 752, 754, 755, 756, 759, 761, 763, 764, 767, 768, 769, 770, 771, 772, 774, 775, 777, 779, 780, 781, 782, 783, 784, 787, 789, 790, 791, 793, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 818, 820], "of_non": 815, "off": [31, 32, 82, 83, 85, 117, 176, 205, 271, 310, 341, 351, 352, 381, 382, 433, 434, 436, 494, 495, 546, 547, 549, 580, 585, 589, 591, 602, 604, 606, 608, 611, 622, 643, 645, 662, 670, 679, 683, 690, 701, 702, 703, 704, 705, 714, 715, 726, 728, 729, 730, 731, 745, 749, 760, 766, 770, 777, 779, 781, 790, 791, 794, 795, 810, 811, 812, 813, 814, 815, 816, 817], "offen": [0, 2, 3, 4, 8, 9, 85, 176, 271, 352, 436, 549, 591], "offens": 762, "offer": [586, 595, 680, 703, 710, 749, 751, 761, 792], "offered": 770, "official": [607, 608, 670, 672, 724, 747, 752, 758, 760, 772, 779, 810], "officially": [662, 699, 707, 727, 744, 814], "offlin": [608, 670, 729, 772], "offload": [591, 761], "offloading": 617, "offset": [0, 2, 3, 4, 9, 20, 24, 32, 54, 55, 56, 80, 82, 83, 85, 123, 127, 144, 145, 173, 176, 212, 217, 240, 241, 242, 268, 271, 342, 351, 352, 370, 375, 382, 403, 404, 405, 431, 433, 434, 436, 482, 487, 495, 516, 517, 518, 544, 546, 547, 549, 586, 588, 590, 591, 598, 608, 612, 622, 631, 643, 645, 649, 650, 651, 653, 655, 665, 673, 675, 680, 681, 689, 691, 700, 714, 721, 725, 727, 734, 736, 740, 741, 743, 749, 761, 764, 765, 768, 770, 777, 781, 786, 817], "offset0": [0, 2, 3, 4, 9, 591], "offset1": [0, 2, 3, 4, 9, 591, 715], "offset11": 0, "offset12": [0, 2, 3, 4, 8, 9, 82], "offset13": [4, 8, 9, 351, 433, 546], "offset2": 715, "ofstream": 661, "oftc": [664, 682], "often": [585, 591, 592, 594, 595, 597, 602, 606, 608, 610, 611, 612, 640, 661, 662, 670, 673, 674, 676, 678, 680, 683, 686, 693, 700, 703, 704, 705, 708, 709, 710, 714, 715, 717, 719, 721, 728, 729, 730, 746, 749, 751, 756, 759, 762, 765, 766, 770, 772, 775, 776, 781, 785, 786, 790, 792, 795, 809, 811, 814, 817], "oge": 715, "ogt": 715, "oh": 812, "ojhunt": 762, "ok": [589, 590, 602, 611, 662, 670, 694, 702, 715, 717, 727, 728, 810, 812], "okay": [611, 670, 681, 715, 716, 747, 771, 809, 810, 811, 812, 813, 814, 815, 816], "ol": 586, "oland": 591, "old": [585, 586, 594, 595, 612, 626, 642, 670, 680, 683, 711, 715, 728, 730, 732, 735, 743, 744, 748, 749, 751, 753, 759, 761, 762, 765, 779, 782, 814, 815, 816, 817], "old_install_nam": 634, "old_rpath": 634, "oldbinding": [814, 815, 816], "older": [589, 591, 595, 640, 661, 663, 670, 678, 680, 683, 693, 702, 715, 717, 723, 732, 786], "oldest": [591, 640, 811], "oldval": [715, 812, 813, 814, 815, 816], "ole": [715, 743], "oliv": 762, "oll": 714, "olt": 715, "omap": 736, "omiss": [591, 611, 670, 715], "omit": [591, 611, 644, 645, 655, 660, 662, 715, 765, 768, 789], "omitted": [585, 586, 587, 588, 591, 608, 615, 618, 623, 624, 628, 630, 633, 640, 641, 643, 646, 659, 685, 710, 715, 717, 731, 759, 783, 809, 812], "omitting": [591, 611, 666, 746, 749, 788], "omod": [0, 2, 3, 4, 7, 8, 9], "omp": [746, 752, 782], "on_fals": 715, "on_tru": 715, "once": [213, 371, 483, 585, 590, 591, 594, 598, 602, 603, 606, 607, 608, 610, 611, 613, 615, 617, 626, 631, 633, 636, 640, 646, 659, 661, 662, 664, 668, 670, 673, 674, 676, 677, 680, 681, 682, 683, 685, 686, 693, 694, 699, 701, 705, 707, 709, 710, 714, 715, 716, 717, 718, 719, 720, 722, 727, 728, 730, 731, 733, 736, 743, 747, 749, 751, 755, 758, 760, 761, 762, 765, 766, 767, 770, 771, 772, 776, 777, 780, 783, 786, 788, 789, 790, 792, 794, 796, 809, 810, 811, 812, 814, 817], "one": [20, 24, 27, 84, 112, 120, 127, 129, 175, 201, 209, 212, 213, 217, 220, 270, 294, 295, 296, 306, 314, 370, 371, 375, 378, 435, 479, 482, 483, 487, 490, 548, 576, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 617, 622, 626, 628, 629, 631, 632, 633, 634, 636, 638, 640, 641, 643, 645, 646, 647, 649, 650, 655, 661, 662, 665, 666, 667, 669, 670, 672, 673, 674, 678, 679, 680, 682, 683, 685, 686, 688, 689, 692, 693, 694, 696, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 738, 739, 740, 743, 744, 747, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 786, 788, 789, 790, 791, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "one_only": 675, "oneargfp": 776, "oneargfprw": 776, "onelin": 683, "oneormor": 661, "onfinaliz": 714, "ongoing": [670, 701, 731, 760, 770, 789], "onlin": [591, 596, 606, 607, 814], "only": [20, 27, 28, 30, 85, 110, 111, 129, 130, 176, 199, 200, 212, 213, 220, 221, 223, 271, 304, 305, 340, 352, 355, 370, 371, 378, 379, 380, 436, 467, 468, 482, 483, 490, 491, 493, 549, 574, 575, 585, 586, 587, 589, 590, 591, 593, 594, 595, 597, 598, 600, 602, 603, 605, 606, 607, 608, 610, 611, 612, 614, 615, 617, 618, 619, 620, 622, 624, 626, 628, 629, 631, 632, 634, 635, 636, 639, 640, 641, 642, 645, 646, 649, 650, 651, 654, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 685, 686, 688, 689, 691, 692, 693, 700, 701, 702, 703, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 724, 725, 726, 727, 728, 729, 730, 731, 734, 735, 736, 738, 739, 740, 741, 743, 747, 748, 750, 752, 753, 754, 755, 757, 759, 760, 761, 762, 765, 766, 768, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 794, 795, 796, 808, 809, 810, 812, 813, 814, 815, 816, 817], "only_ascii": 717, "onlyfailsforsomexvalu": 749, "onlyfailsforsomexvalues2": 749, "onon": 715, "ons": 758, "onto": [585, 586, 591, 608, 670, 680, 683, 695, 707, 715, 748, 749, 765, 776, 783], "ontwo": 715, "onward": [591, 606, 704, 719, 765], "onzero": 715, "oom": [606, 717], "oop": [714, 770], "op": [27, 129, 220, 378, 490, 585, 608, 612, 617, 622, 632, 660, 665, 714, 715, 721, 730, 731, 732, 766, 770, 774, 776, 786, 795, 809, 810, 811, 812, 813, 814, 815, 816], "op0": [598, 759], "op1": [598, 715, 759], "op2": [715, 759], "op3": [715, 759, 786], "op3val": 786, "op4": 759, "op_begin": 749, "op_end": 749, "op_iterator": 749, "op_sel": [0, 4, 9], "op_sel_h": [0, 4, 9], "opaqu": [597, 598, 675, 688, 731, 746, 749, 770, 795, 810], "opaqued": 715, "opc": [776, 813, 814, 815, 816], "opclass": 660, "opcod": [14, 79, 84, 172, 175, 267, 270, 333, 350, 430, 435, 543, 548, 585, 586, 589, 591, 595, 608, 611, 632, 640, 644, 660, 693, 698, 708, 712, 715, 721, 727, 749, 755, 776, 777, 786, 809, 810, 813, 814, 815, 816], "opcode_nam": 632, "opcstr": 786, "open": [586, 601, 606, 608, 611, 613, 622, 662, 664, 670, 685, 698, 705, 714, 715, 722, 727, 732, 747, 749, 751, 762, 767, 768, 770, 771, 790, 793, 810, 811, 812, 813, 814, 815, 816], "openbsd": [683, 789], "openbuff": 749, "openc": 776, "opencbit": 776, "opencl": [586, 660, 671, 729], "openclruntim": 671, "opened": [611, 682, 685], "openfil": 611, "openfileforwriting": 771, "openformattedfil": 749, "opengl": 817, "opening": [715, 716, 759, 774], "openmp": [586, 591, 606, 612, 660, 670, 671, 682, 683, 715, 751, 753, 772, 782], "openmp4": 755, "openmpruntim": 671, "openorcreatefileforwriting": 771, "openpow": 663, "opensourc": 717, "openssl": 717, "openwork": 770, "oper": [27, 33, 34, 36, 37, 38, 93, 96, 97, 100, 101, 120, 129, 132, 133, 186, 187, 189, 190, 191, 209, 220, 224, 225, 281, 282, 283, 286, 287, 314, 354, 378, 383, 384, 386, 387, 388, 444, 447, 448, 451, 452, 479, 490, 496, 497, 499, 500, 501, 557, 560, 561, 564, 565, 584, 589, 594, 595, 605, 608, 618, 620, 636, 639, 640, 642, 643, 649, 650, 654, 660, 662, 663, 665, 666, 673, 674, 677, 680, 683, 688, 694, 696, 710, 714, 717, 726, 727, 731, 732, 733, 746, 748, 751, 754, 755, 761, 765, 770, 774, 776, 777, 785, 786, 790, 794, 795, 811, 812, 813, 814, 818], "operand": [10, 11, 12, 13, 14, 15, 16, 18, 20, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 592, 598, 600, 608, 611, 612, 624, 640, 643, 644, 673, 674, 675, 681, 688, 689, 690, 691, 693, 695, 696, 710, 726, 727, 732, 746, 749, 753, 755, 757, 765, 770, 774, 775, 776, 810, 813, 814, 815, 816], "operand0": [588, 591], "operand1": [588, 591], "operand_type_list_end": 786, "operandlist": 776, "operandmap": 786, "operandsiz": 776, "operandty": 608, "operandtyp": 786, "operandv": [813, 814, 815, 816], "operat": [585, 586, 588, 589, 590, 595, 603, 605, 608, 662, 666, 677, 681, 698, 715, 730, 731, 732, 749, 754, 759, 761, 763, 776, 785, 786, 788, 792, 811], "operated": [597, 715], "operating": [589, 597, 606, 608, 622, 663, 676, 693, 714, 715, 717, 729, 761, 766, 771, 772, 788, 789, 815, 817], "operating_system": 715, "operational": 701, "operatively": 783, "operator": [586, 598, 600, 608, 611, 612, 622, 657, 666, 681, 700, 715, 727, 746, 749, 761, 765, 774, 775, 786, 792, 794, 808, 809, 810, 811, 812, 815, 816, 817, 818, 819], "opinion": 657, "opmap": 776, "opmapbit": 776, "opnam": 786, "opnod": 786, "opportunit": [698, 715, 731, 751, 785, 786], "opportunity": [593, 604, 665, 669, 670, 671, 678, 694, 715, 731, 746, 753, 795, 811], "oppos": 753, "opposed": [611, 661, 670, 675, 683, 688, 693, 707, 715, 716, 730, 739, 748, 750, 753, 761], "opposing": 753, "opposit": [611, 622, 716, 749, 753, 765, 774, 789, 792], "opprefix": 776, "opprefixbit": 776, "oprofil": [606, 745], "opsiz": 776, "opsize32": 776, "opsizebit": 776, "opt": [0, 2, 3, 4, 8, 9, 587, 594, 602, 611, 613, 616, 643, 660, 670, 676, 680, 683, 706, 709, 710, 715, 719, 726, 729, 732, 746, 747, 749, 756, 766, 770, 780, 781, 785, 795, 811, 812, 814, 815], "opt1": 643, "opt2": 643, "opta": 661, "optb": 661, "optbisect": [709, 733], "opted": [595, 680], "optforfuzzing": [598, 715], "optimal": [588, 591, 603, 608, 640, 678, 715, 745, 755, 772, 785], "optimally": 765, "optimis": [715, 746, 757, 783], "optimised": 715, "optimistic": [640, 698, 715], "optimistically": 640, "optimiz": [585, 593, 594, 597, 598, 600, 602, 603, 604, 606, 611, 613, 615, 616, 617, 618, 620, 640, 643, 644, 646, 647, 657, 660, 661, 663, 665, 666, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 694, 698, 707, 708, 712, 713, 714, 716, 719, 727, 728, 729, 731, 732, 745, 749, 753, 754, 755, 756, 757, 768, 769, 770, 775, 780, 781, 782, 783, 785, 786, 787, 788, 791, 793, 794, 796, 797, 810, 812, 813, 814, 815, 816, 818, 819], "optimizationbit": 661, "optimizationlevel": [661, 730], "optimizationlist": 661, "optimizationremarkemitt": 753, "optimizations": 671, "optimized": [585, 586, 593, 595, 606, 608, 612, 618, 646, 659, 660, 676, 678, 683, 697, 698, 704, 715, 716, 718, 726, 728, 729, 730, 732, 745, 749, 750, 782, 795, 796, 811, 816], "optimizefunct": 796, "optimizelai": [795, 796, 797], "optimizemodul": [795, 796, 797], "optimizer": [595, 602, 613, 678, 681, 713, 715, 765, 814], "optimizing": [585, 586, 595, 598, 602, 608, 666, 678, 696, 701, 726, 745, 746, 755, 768], "opting": 733, "option": [68, 159, 256, 420, 532, 585, 586, 593, 594, 597, 598, 602, 607, 608, 611, 614, 616, 619, 621, 629, 635, 638, 648, 656, 658, 662, 665, 666, 671, 672, 676, 679, 683, 685, 691, 699, 701, 702, 704, 705, 706, 709, 711, 714, 715, 718, 720, 721, 723, 727, 728, 730, 731, 733, 745, 746, 747, 750, 751, 755, 756, 757, 758, 759, 765, 766, 772, 774, 775, 776, 777, 782, 785, 786, 788, 789, 790, 809, 810, 811, 815], "optional": [27, 28, 31, 32, 83, 85, 110, 111, 117, 120, 129, 130, 176, 199, 200, 205, 209, 220, 221, 271, 304, 305, 310, 314, 340, 341, 352, 355, 378, 379, 381, 382, 434, 436, 467, 468, 479, 490, 491, 494, 495, 547, 549, 574, 575, 580, 584, 586, 587, 588, 589, 591, 594, 600, 607, 608, 612, 617, 620, 621, 622, 631, 640, 641, 661, 675, 680, 692, 693, 694, 700, 701, 714, 715, 716, 717, 721, 730, 749, 750, 754, 756, 759, 761, 776, 777, 779, 781, 782, 788, 792, 810, 812, 813, 814, 815, 816], "optional_dir": 750, "optionaldbgheadersiz": 736, "optionally": [18, 36, 37, 38, 93, 96, 97, 100, 101, 186, 187, 189, 190, 191, 211, 281, 282, 283, 286, 287, 354, 368, 386, 387, 388, 444, 447, 448, 451, 452, 481, 499, 500, 501, 557, 560, 561, 564, 565, 598, 608, 617, 626, 632, 640, 642, 661, 662, 666, 675, 683, 699, 709, 714, 715, 721, 723, 749, 751, 761, 768, 770, 776, 786, 790, 792, 810, 814], "optiondefinit": 660, "options_pars": 700, "optlevel": 661, "optnon": [598, 709, 715, 733, 787], "optnum": 661, "optsiz": [598, 691, 715], "optyp": 786, "optzn": [709, 811, 812, 813, 814], "opval": 786, "op\u00e9rand": [122, 123, 336], "or": [19, 20, 21, 22, 23, 24, 27, 30, 32, 51, 52, 53, 82, 83, 84, 85, 96, 97, 98, 112, 114, 117, 120, 123, 124, 125, 126, 127, 129, 142, 143, 175, 176, 186, 187, 205, 209, 212, 213, 214, 215, 216, 217, 220, 223, 237, 238, 239, 270, 271, 286, 287, 288, 306, 308, 310, 314, 315, 320, 325, 337, 351, 352, 369, 370, 371, 372, 373, 374, 375, 378, 380, 382, 400, 401, 402, 433, 434, 435, 436, 447, 448, 449, 470, 479, 482, 483, 484, 485, 486, 487, 490, 493, 495, 513, 514, 515, 546, 547, 548, 549, 560, 561, 562, 576, 578, 580, 584, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 612, 613, 615, 616, 617, 618, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 653, 654, 655, 657, 659, 660, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 740, 741, 743, 744, 746, 747, 748, 749, 750, 753, 754, 755, 757, 758, 759, 760, 761, 762, 765, 767, 768, 769, 770, 771, 772, 774, 775, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "orang": 728, "orbit": 813, "orc": [668, 683, 784, 794, 796, 797, 811, 812, 813, 814, 816, 819], "orcjit": [794, 795, 796, 797, 811, 812, 813, 814, 816], "orcrpctpcjitlinkmemorymanag": 714, "orcv1": 784, "orcv2": 784, "orcv2exampl": 714, "ord": 715, "order": [120, 209, 314, 479, 584, 586, 587, 588, 594, 595, 597, 598, 603, 604, 606, 608, 610, 612, 617, 636, 641, 642, 645, 654, 659, 661, 664, 665, 666, 667, 668, 670, 672, 673, 674, 675, 676, 678, 679, 680, 681, 683, 685, 687, 689, 700, 701, 708, 710, 712, 714, 716, 717, 718, 719, 721, 726, 727, 728, 730, 731, 732, 733, 736, 740, 741, 744, 746, 749, 750, 751, 753, 755, 759, 765, 766, 768, 770, 771, 774, 775, 776, 780, 781, 783, 785, 786, 787, 788, 796, 809, 810, 811, 812, 814, 818], "ordered": [586, 591, 611, 661, 678, 689, 708, 715, 727, 749, 767, 774, 776, 791, 812], "ordered_append_term": 591, "ordering": [585, 586, 591, 604, 606, 608, 612, 629, 640, 661, 693, 708, 726, 727, 746, 747, 749, 751, 765, 782, 791], "ordinal": [661, 714], "ordinary": [585, 586, 665, 666, 715, 731, 792], "ore": 753, "org": [606, 609, 611, 666, 670, 679, 682, 683, 699, 701, 703, 704, 705, 706, 707, 708, 717, 721, 724, 728, 747, 751, 753, 754, 757, 758, 760, 763, 779, 792, 794, 795, 796, 797, 810], "organis": 687, "organiz": [585, 591, 670, 673, 682, 701, 724, 727, 750, 762, 765, 811], "organized": [589, 591, 673, 682, 743, 770], "organizer": [724, 760], "organizersobsolet": 671, "organizing": 607, "ori": 608, "orient": [609, 817], "oriented": [611, 708, 749, 752, 757, 765, 767], "orig": 715, "origin": [609, 683, 686, 728, 748, 751], "original": [585, 586, 590, 603, 608, 610, 611, 612, 626, 645, 665, 670, 673, 681, 714, 715, 719, 728, 731, 736, 741, 747, 749, 751, 753, 755, 760, 765, 766, 770, 772, 776, 777, 782, 783, 789, 794, 795, 816], "originally": [608, 670, 673, 714, 715, 761, 762, 767, 771, 776], "originat": [585, 586, 755], "originating": [611, 771], "originput": 661, "orl": 766, "orq": 766, "orr": 715, "orthogonal": 595, "orthogonality": 731, "os": [595, 596, 604, 608, 674, 680, 683, 702, 707, 715, 749, 761, 766, 775, 792], "oscillator": 791, "oso": 615, "oss": [679, 707, 717, 751], "ostream": [611, 749], "osuosl": 701, "other": [1, 5, 8, 84, 120, 175, 176, 209, 270, 314, 435, 479, 548, 584, 588, 589, 590, 591, 592, 593, 595, 597, 598, 599, 601, 602, 603, 604, 606, 608, 609, 610, 611, 612, 614, 615, 617, 618, 619, 620, 626, 628, 629, 632, 634, 636, 640, 641, 642, 643, 651, 653, 654, 655, 656, 658, 659, 660, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 680, 682, 683, 685, 687, 688, 691, 692, 693, 694, 696, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 743, 744, 746, 747, 748, 750, 751, 752, 753, 755, 758, 759, 760, 761, 762, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819], "other_funct": 766, "otherspecialsquar": 708, "othervt": 786, "otherwis": [42, 74, 585, 586, 588, 591, 593, 595, 598, 599, 601, 602, 603, 606, 610, 611, 612, 613, 615, 617, 618, 620, 622, 623, 624, 625, 626, 629, 630, 631, 632, 633, 634, 636, 637, 639, 640, 642, 643, 644, 649, 650, 651, 653, 654, 655, 659, 660, 661, 662, 665, 666, 667, 670, 673, 678, 680, 699, 701, 702, 706, 707, 708, 709, 714, 715, 716, 718, 719, 727, 730, 731, 733, 736, 738, 744, 746, 747, 749, 751, 760, 765, 766, 770, 775, 776, 782, 788, 792, 808, 809, 810, 811, 812, 813, 814, 815, 816], "otool": [616, 643], "otp": 715, "ottenstein": 669, "ought": 611, "our": [593, 601, 604, 606, 607, 608, 609, 610, 611, 661, 662, 665, 670, 672, 680, 683, 687, 701, 709, 714, 718, 727, 728, 729, 731, 741, 744, 745, 747, 749, 751, 760, 761, 762, 765, 766, 770, 772, 785, 787, 788, 790, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "ourfpm": 816, "ourfunctionpass": 749, "ourselv": [611, 729, 744, 765, 787, 794], "out": [585, 586, 591, 593, 594, 595, 596, 597, 598, 601, 602, 607, 608, 610, 611, 612, 615, 617, 620, 622, 624, 626, 631, 632, 635, 639, 640, 641, 643, 651, 661, 662, 665, 668, 669, 670, 672, 673, 674, 679, 680, 683, 685, 686, 689, 693, 700, 701, 702, 704, 705, 706, 707, 709, 710, 712, 713, 714, 715, 716, 717, 719, 721, 726, 727, 728, 730, 731, 735, 739, 740, 744, 746, 748, 749, 751, 754, 755, 757, 758, 760, 761, 762, 765, 766, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 786, 787, 788, 789, 790, 791, 792, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819], "out_cpusubtyp": 718, "out_cputyp": 718, "out_of_bound": 607, "outcom": [710, 762], "outdated": [706, 780], "outeranalysismanagerproxy": 730, "outercolumn": 715, "outermost": [586, 667, 715], "outerrow": 715, "outerstructty": 715, "outfil": 652, "outgoing": [599, 715], "outlin": [585, 665, 673, 766, 792], "outlined": [605, 608, 665, 670, 673, 788], "outliv": [714, 715, 717, 746], "outloop": [812, 813, 814, 815, 816], "outlying": 673, "outoperandlist": [776, 777, 786], "output": [15, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 134, 135, 136, 137, 138, 139, 140, 141, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 229, 230, 231, 232, 233, 234, 235, 236, 281, 282, 283, 286, 287, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 309, 319, 324, 334, 354, 356, 357, 358, 359, 360, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 444, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 471, 472, 499, 500, 501, 505, 506, 507, 508, 509, 510, 511, 512, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 579, 585, 589, 591, 593, 594, 596, 599, 602, 605, 606, 608, 611, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 632, 633, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 669, 674, 675, 680, 683, 685, 686, 689, 693, 700, 701, 704, 709, 710, 712, 721, 722, 726, 728, 729, 746, 749, 755, 756, 757, 758, 759, 761, 765, 767, 774, 776, 777, 779, 781, 782, 786, 787, 788, 789, 790, 791, 795, 809, 811, 812, 813, 814, 815, 816, 820], "outputdebuginfo": 661, "outputfilenam": 661, "outputting": 645, "outright": [681, 772], "outsid": [591, 594, 609, 661, 665, 670, 675, 681, 682, 699, 700, 705, 714, 715, 716, 717, 719, 726, 727, 728, 746, 749, 751, 758, 765, 766, 768, 770, 771, 776, 780, 783, 795, 810], "outsider": 611, "outstanding": [20, 120, 209, 212, 314, 370, 479, 482, 584, 610, 707, 714], "outstream": 680, "outweigh": 753, "over": [585, 586, 591, 594, 597, 598, 601, 602, 603, 606, 607, 608, 610, 612, 632, 640, 645, 655, 660, 662, 665, 668, 669, 670, 681, 682, 693, 694, 700, 701, 703, 704, 708, 714, 715, 716, 717, 718, 719, 724, 726, 728, 730, 746, 747, 751, 762, 763, 765, 766, 769, 770, 775, 789, 792, 795, 796, 797, 808, 810, 812, 813, 814, 816, 817, 818], "overall": [585, 601, 604, 608, 610, 643, 669, 670, 673, 680, 681, 704, 715, 728, 744, 747, 766, 772, 774, 775, 812], "overapproxim": 719, "overboard": 611, "overestimating": 715, "overflow": [586, 590, 591, 612, 670, 678, 717, 766, 791], "overflowed": 715, "overhaul": 707, "overhead": [676, 680, 700, 712, 714, 715, 725, 731, 749, 751, 755, 761, 791, 796, 811], "overlaid": 726, "overlap": [585, 586, 607, 608, 612, 640, 689, 715, 719, 772, 785, 788], "overlapping": [585, 586, 594, 612, 640, 713, 715, 765, 768], "overlay": [585, 591, 672, 736], "overload": [611, 662, 715, 775, 788], "overloaded": [662, 674, 708, 715, 729, 749, 770, 775, 786], "overloading": [715, 749, 813], "overly": [591, 670, 726, 753], "overrid": [591, 604, 606, 607, 608, 617, 618, 620, 626, 630, 640, 642, 646, 661, 662, 700, 703, 708, 714, 715, 717, 727, 728, 729, 731, 746, 749, 761, 766, 786, 788, 795, 797, 810, 811, 812, 813, 814, 815, 816], "overridden": [594, 612, 657, 661, 683, 714, 715, 717, 757, 759, 776, 786], "overriding": [595, 617, 618, 620, 669, 691, 721, 731, 765, 774, 788, 816], "overrun": 700, "oversized": 749, "overstat": [585, 586], "overtaking": 772, "overview": [585, 586, 587, 605, 606, 608, 640, 660, 661, 663, 664, 682, 686, 695, 714, 720, 722, 725, 728, 776, 778, 786, 788, 812], "overwhelm": 603, "overwhelming": 818, "overwrit": [661, 750, 768, 789], "overwriting": [750, 766, 768], "overwritten": [608, 673, 715, 761, 768], "overwrot": 591, "ovl": 736, "own": [585, 586, 591, 598, 599, 604, 606, 607, 608, 610, 611, 622, 640, 661, 662, 666, 669, 670, 672, 673, 674, 680, 683, 699, 700, 705, 707, 708, 710, 714, 715, 717, 726, 731, 732, 734, 735, 744, 746, 747, 749, 750, 751, 753, 755, 759, 760, 761, 762, 765, 768, 771, 772, 774, 775, 776, 778, 780, 781, 786, 787, 788, 795, 810, 811, 813, 814, 817], "owned": [720, 731], "owner": [608, 610, 622, 664, 701, 707, 747, 751], "ownership": [670, 701, 731, 749, 797, 811, 812, 813, 814, 815, 816], "owning": [591, 749], "oxid": 762, "p": [585, 586, 589, 591, 594, 597, 606, 608, 611, 612, 617, 622, 626, 631, 641, 642, 643, 644, 649, 650, 654, 655, 667, 668, 672, 681, 700, 712, 715, 719, 729, 732, 749, 751, 757, 763, 770, 776, 783, 786, 790, 811, 812, 813, 814, 815, 816], "p0": [29, 131, 222, 492, 688, 689, 693, 715], "p0928": 766, "p0a10s_union": 715, "p0f_isvoidf": 770, "p0i32": 612, "p0i64": 612, "p0i8": [715, 729], "p0nxv2i16": 715, "p0s_": 715, "p0s_struct": 715, "p0s_union": 715, "p0v16f32": 715, "p0v2f64": 715, "p0v4f32": 715, "p0v4i32": 715, "p0v4p0f_i32f": 715, "p0v8f64": 715, "p0v8i32": 715, "p0v8i8": 715, "p0v8p0f64": 715, "p0v8p0f_i32f": 715, "p1": [689, 693, 715, 726, 729, 765], "p10": [29, 131, 222, 492, 757], "p15": [715, 729], "p16": 729, "p17": 729, "p18": 729, "p19": 729, "p1i8": [729, 770], "p1v8f32": 715, "p2": [612, 688, 715, 726, 729, 732, 765], "p20": [29, 131, 222, 492, 729], "p2align": [591, 766], "p3": [612, 726, 729, 765], "p3i8": 729, "p4": 729, "p4i8": 729, "p5": 729, "p5i8": 729, "p6nxv1i64": 715, "p7": 715, "p_arch": 662, "p_reg": 608, "pa": [730, 749], "pac": [730, 748], "pacbt": 757, "pacg": 748, "pack": [591, 608, 666, 707, 714, 755, 758, 810], "packag": [604, 606, 662, 664, 670, 672, 683, 685, 701, 702, 705, 706, 707, 750, 758, 762, 779, 784], "package_string": 606, "packaged": [599, 662, 707], "packager": [745, 762], "packaging": [604, 682], "packed": [98, 112, 114, 288, 306, 308, 449, 470, 562, 576, 578, 585, 588, 598, 640, 678, 715, 751], "packet": [591, 774], "packetiz": 660, "packetizing": 608, "packing": [279, 280, 288, 291, 294, 295, 296, 306, 308, 589, 608], "pact": 755, "pad": [585, 589, 665, 666, 673, 713, 715, 721, 791], "padded": [591, 735], "padding": [591, 598, 645, 688, 690, 714, 715, 736, 768], "padding1": 736, "padding2": 736, "padparam": 673, "padu": 669, "pag": [591, 593, 601, 604, 606, 611, 616, 645, 661, 663, 664, 670, 671, 675, 677, 680, 683, 685, 700, 707, 709, 710, 714, 720, 721, 725, 728, 730, 740, 744, 747, 749, 751, 753, 756, 757, 759, 761, 762, 763, 765, 766, 773, 776, 778, 781, 785, 793, 810], "paging": [591, 770], "paid": 772, "paill": 762, "pain": [661, 749], "painful": [662, 668, 670, 747, 749, 772], "painlessly": 661, "pair": [585, 586, 588, 589, 590, 591, 594, 595, 596, 597, 606, 608, 611, 612, 618, 628, 631, 633, 640, 649, 650, 651, 673, 675, 689, 710, 711, 715, 717, 721, 726, 727, 731, 743, 746, 749, 751, 757, 762, 765, 770, 775, 776, 786, 791, 792, 796, 809, 812, 814, 815, 816], "paired": [586, 591, 595, 766], "pairwis": 594, "pal": 591, "pamel": 752, "pan": [747, 766], "pand": 779, "pandaboard": 702, "pap": [611, 662, 669, 726, 766], "paper": [596, 608, 663, 669, 749], "papertrail": 615, "paradigm": [681, 749], "paragraph": [611, 670, 722, 727, 767], "parallel": [586, 593, 606, 608, 612, 617, 632, 640, 683, 701, 715, 726, 745, 750, 751, 753, 782], "parallel_dir": 750, "parallel_lib": 671, "parallel_loop_access": 782, "parallelism": [606, 640, 701, 716, 752, 755, 785], "parallelizing": 730, "parallism": 701, "param": [0, 2, 3, 4, 78, 171, 266, 542, 611, 617, 631, 680, 701, 729], "param1": 749, "param2": 749, "paramattr": 598, "paramet": [29, 78, 131, 171, 222, 266, 492, 542, 585, 586, 589, 598, 600, 603, 606, 608, 611, 617, 622, 632, 639, 640, 661, 662, 665, 673, 675, 680, 711, 720, 727, 729, 730, 746, 749, 754, 757, 761, 765, 770, 774, 786, 788, 791, 792, 810], "parameter": [598, 603, 606, 607, 608, 611, 617, 631, 632, 639, 661, 665, 680, 681, 711, 715, 717, 727, 730, 746, 749, 761, 770, 776, 777, 786, 791, 810], "parameteriz": 691, "parameterized": 776, "parameterless": 721, "paramidx": 598, "paramidx0": 598, "paramidx1": 598, "paramty": 598, "parenexpr": [809, 810, 811, 812, 813, 814, 815, 816], "parent": [591, 599, 607, 611, 617, 631, 667, 686, 708, 714, 715, 747, 749, 751, 762, 774, 775, 776, 812], "parent_scop": 607, "parentclasslist": 776, "parentclasslistn": 776, "parenthandl": 715, "parenthes": [589, 612, 617, 715, 774, 775, 776, 809], "parentty": 715, "parity": 700, "parlanc": [607, 726, 783, 808], "pars": [586, 598, 612, 617, 621, 631, 639, 643, 655, 660, 662, 674, 676, 679, 683, 712, 715, 717, 718, 720, 721, 759, 765, 768, 770, 774, 775, 776, 777, 786, 792, 808, 810, 811, 813, 814, 815, 816, 817, 818, 819], "parsabl": [646, 770], "parse_failed": 749, "parseabl": [715, 770], "parsebinoprh": [809, 810, 811, 812, 813, 814, 815, 816], "parsecommandlineopt": 790, "parsed": [585, 586, 598, 608, 612, 631, 639, 640, 660, 661, 662, 674, 700, 715, 759, 761, 770, 774, 775, 776, 791, 792, 809, 811, 813, 814], "parsedattrinfo": 774, "parsedefinit": [809, 810, 811, 812, 813, 814, 815, 816], "parseexpress": [809, 810, 811, 812, 813, 814, 815, 816], "parseextern": [809, 810, 811, 812, 813, 814, 815, 816], "parseforexpr": [812, 813, 814, 815, 816], "parseidentifierexpr": [809, 810, 811, 812, 813, 814, 815, 816], "parseifexpr": [812, 813, 814, 815, 816], "parsenumberexpr": [809, 810, 811, 812, 813, 814, 815, 816], "parseparenexpr": [809, 810, 811, 812, 813, 814, 815, 816], "parsepasspipelin": 679, "parsepath": 731, "parseprimary": [809, 810, 811, 812, 813, 814, 815, 816], "parseprototyp": [809, 810, 811, 812, 813, 814, 815, 816], "parser": [604, 640, 679, 714, 717, 774, 809], "parserclass": 661, "parsesubtargetfeatur": 786, "parsetoplevelexpr": [809, 810, 811, 812, 813, 814, 815, 816], "parsetypetablebody": 674, "parseunary": [813, 814, 815, 816], "parsevalid": 790, "parsevarexpr": [814, 815, 816], "parsing": [585, 586, 598, 607, 617, 655, 660, 662, 714, 715, 716, 749, 759, 765, 774, 775, 784, 792, 810, 811, 812, 813, 814, 815, 816, 818], "part": [586, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 604, 605, 606, 607, 608, 611, 612, 613, 614, 615, 617, 619, 627, 636, 640, 656, 658, 660, 661, 662, 665, 666, 669, 670, 671, 673, 678, 679, 680, 681, 683, 687, 690, 691, 700, 701, 703, 704, 705, 708, 715, 717, 718, 719, 724, 725, 726, 727, 728, 730, 731, 732, 735, 740, 741, 746, 747, 749, 751, 752, 755, 760, 762, 765, 766, 769, 770, 772, 774, 777, 779, 781, 782, 783, 784, 786, 787, 788, 789, 790, 792, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 816, 817, 818], "partial": [591, 608, 646, 660, 714, 715, 716, 717, 748, 749, 765, 768, 782, 792], "partialali": 594, "partially": [585, 586, 589, 715, 746, 752, 761, 782, 791], "particip": 609, "participat": [586, 591, 609, 610, 715, 747, 749, 751, 762, 781], "participated": [747, 751, 762], "participating": [669, 670, 751], "particlefilt": 752, "particular": [585, 586, 589, 594, 595, 596, 598, 601, 602, 604, 606, 608, 610, 611, 617, 626, 645, 660, 661, 662, 665, 666, 670, 673, 678, 680, 681, 683, 686, 688, 691, 693, 694, 704, 708, 709, 710, 713, 714, 715, 717, 719, 720, 726, 727, 729, 731, 735, 736, 738, 740, 741, 746, 749, 751, 752, 755, 757, 759, 760, 762, 765, 766, 768, 770, 775, 776, 777, 781, 783, 786, 788, 789, 791, 809, 811, 814], "particularly": [585, 586, 595, 606, 611, 612, 631, 678, 683, 689, 691, 694, 701, 715, 743, 749, 751, 762, 766, 770, 775, 786, 788, 789, 791], "partit": [602, 642, 702, 715, 716, 726], "partitioned": [608, 618, 726], "partitioning": [617, 726, 796], "partly": 585, "partn": 749, "party": [611, 683, 687, 701, 750, 760, 762], "parzyszek": 753, "parzyszekacronym": 753, "parzyszekacronym2": 753, "parzyszekdistinguish": 753, "pascal": 715, "pass": [585, 586, 591, 593, 595, 597, 599, 602, 603, 608, 612, 613, 616, 617, 618, 620, 622, 626, 629, 640, 643, 659, 660, 661, 662, 664, 670, 673, 674, 675, 676, 679, 680, 681, 683, 685, 686, 690, 691, 692, 693, 694, 695, 696, 698, 699, 704, 705, 708, 709, 713, 715, 716, 717, 718, 719, 720, 723, 726, 729, 743, 749, 750, 751, 753, 755, 756, 757, 758, 759, 765, 768, 776, 779, 780, 781, 783, 784, 786, 790, 792, 794, 795, 796, 797, 809, 810, 812, 813, 814, 815, 816, 817], "pass1": 730, "pass2": 730, "passag": 611, "passbuild": [679, 730, 787, 788], "passcon": 665, "passconfigur": 714, "passed": [585, 586, 591, 593, 594, 597, 603, 606, 607, 608, 610, 617, 618, 620, 622, 632, 646, 661, 662, 665, 668, 672, 673, 677, 679, 680, 681, 683, 685, 707, 709, 711, 712, 713, 714, 715, 716, 717, 720, 727, 730, 731, 732, 733, 736, 749, 755, 759, 761, 764, 766, 768, 769, 770, 774, 775, 776, 779, 781, 782, 783, 786, 790, 795, 809, 810, 811, 812, 813, 814, 815, 816], "passinfomixin": 787, "passing": [585, 586, 591, 593, 596, 597, 606, 607, 608, 611, 612, 661, 665, 667, 673, 675, 683, 691, 709, 713, 715, 717, 720, 731, 746, 766, 775, 777, 781, 794, 795, 796, 811, 817], "passinstrument": 787, "passiv": 733, "passmanag": [661, 720, 749, 787, 790, 795, 811, 815], "passmanagerbas": [786, 788], "passmanagerbuild": [729, 788], "passmanagerimpl": 790, "passnam": [659, 749], "passopt": 788, "passpluginlibraryinfo": 788, "passregistry": [730, 787], "passt": 787, "passthru": 715, "password": [701, 751, 762], "past": [585, 586, 591, 611, 681, 697, 715, 716, 747, 749, 751, 755, 765, 786, 791, 813, 816], "pat": [608, 777, 786], "patch": [596, 611, 678, 682, 685, 701, 704, 714, 715, 716, 728, 731, 749, 754, 756, 762, 770, 772, 781, 789, 790, 811, 816], "patch_premain": [789, 790], "patch_status": 789, "patchabl": [680, 715, 768, 770], "patched": [680, 703, 756, 768], "patching": [643, 677, 680, 703, 707, 715, 768, 789, 791], "patchpoint": [715, 770], "patfrag": 786, "path": [586, 592, 593, 594, 595, 603, 604, 606, 607, 611, 613, 615, 617, 618, 620, 622, 625, 626, 631, 632, 635, 636, 642, 643, 646, 647, 655, 657, 660, 662, 665, 666, 670, 673, 675, 677, 678, 680, 683, 685, 699, 701, 702, 703, 704, 705, 706, 709, 714, 717, 719, 728, 729, 731, 736, 746, 749, 750, 751, 757, 759, 761, 765, 766, 770, 771, 772, 779, 780, 781, 785, 790, 814], "path_to_clang": 593, "path_to_llvm": 683, "pathnam": [625, 683], "pathological": 749, "pathsep": [617, 781], "patient": [609, 728, 788], "patleaf": 786, "pattern": [0, 2, 3, 4, 9, 586, 593, 595, 597, 607, 608, 616, 617, 626, 632, 642, 654, 660, 661, 665, 669, 674, 681, 688, 691, 693, 694, 700, 715, 728, 729, 740, 749, 755, 761, 765, 766, 772, 774, 775, 776, 777, 781, 786, 790, 796, 810], "pattern_fill_content": 761, "patternmatch": 754, "paul": [667, 753, 762, 766], "paus": [680, 751, 795], "pausing": 594, "pay": [611, 692, 707, 781, 786], "paying": [670, 766], "payload": [608, 666, 715, 791], "pb": [730, 749, 788], "pbqp": [608, 618], "pc": [24, 127, 217, 375, 487, 585, 586, 590, 591, 608, 617, 639, 643, 673, 677, 715, 717, 764, 766, 779, 781, 785, 786], "pc_32": 591, "pc_64": 591, "pch": [660, 765], "pci": 591, "pcre": 717, "pcre2": 717, "pcrel32": 714, "pct": 645, "pd": 776, "pdat": [675, 736, 757], "pdb": [606, 616, 685, 734, 735, 739, 740, 756, 765], "pdbdllrbld": 736, "pdbdllversion": 736, "pdbfilepathnameindex": 736, "pdbraw_featuresig": 741, "pdbstreamhead": 741, "pdbstreamvers": 741, "pdbutil": 616, "pdf": [596, 766], "pdg": 669, "pdgbuild": 669, "pe": [642, 663, 680, 703, 736, 741, 757], "pear": 774, "peculiar": 776, "pedantic": 606, "peek": [701, 730], "peephol": [608, 674, 710, 749, 811, 812, 813, 814], "peform": 597, "pen": 752, "penalty": [604, 715, 749], "pending": [664, 668, 683, 714, 762, 772, 809, 810, 811, 812, 813, 814, 815, 816], "peng": 762, "pentium": [683, 786], "penultimat": 786, "peopl": [604, 608, 609, 610, 611, 661, 664, 670, 671, 674, 676, 681, 682, 683, 707, 714, 715, 724, 728, 747, 751, 758, 762, 763, 766, 771, 788, 794, 817], "pep": 753, "pepp": 748, "per": [20, 96, 97, 186, 187, 212, 286, 287, 370, 447, 448, 482, 560, 561, 585, 586, 590, 595, 598, 599, 606, 608, 624, 626, 628, 632, 636, 640, 641, 645, 661, 665, 666, 670, 673, 680, 688, 689, 696, 700, 701, 707, 708, 714, 715, 717, 718, 721, 725, 726, 729, 747, 749, 751, 759, 761, 765, 766, 768, 770, 772, 774, 775, 780, 781, 790, 792, 794, 795, 811, 819], "perceiv": 817, "perceived": [669, 772], "percent": [594, 626], "percentag": [624, 626, 639, 645, 646, 700, 749], "perf": [593, 596, 606, 647, 675, 779], "perf_data_buffer_siz": 591, "perf_test": 752, "perfect": [597, 646, 670, 749], "perfectly": [608, 610, 611, 612, 640, 645, 676, 681, 700, 715, 765, 809], "perfectlyrightalign": 700, "perforc": 586, "perform": [585, 586, 591, 593, 594, 595, 596, 597, 602, 604, 605, 606, 607, 608, 610, 611, 612, 617, 618, 622, 628, 632, 636, 643, 646, 655, 659, 660, 661, 665, 670, 673, 674, 677, 679, 680, 681, 683, 684, 688, 689, 693, 694, 698, 700, 702, 704, 707, 713, 714, 715, 716, 717, 718, 719, 720, 727, 729, 731, 733, 746, 748, 749, 750, 751, 753, 755, 758, 759, 761, 762, 765, 769, 770, 771, 774, 776, 779, 781, 782, 783, 786, 787, 788, 789, 794, 796, 814, 815, 818], "performed": [585, 586, 590, 591, 594, 595, 602, 606, 607, 608, 642, 661, 672, 678, 680, 689, 714, 715, 718, 721, 729, 731, 733, 736, 746, 749, 751, 759, 765, 766, 770, 774, 776, 781, 783, 786, 795, 810], "performing": [585, 586, 591, 597, 603, 604, 608, 611, 632, 655, 673, 681, 708, 715, 717, 728, 733, 746, 749, 755, 761, 770, 774, 785, 786, 817], "perfscript": 647, "perfunctionstat": 790, "perhap": [585, 586, 594, 680, 696, 715, 727, 741, 749, 751, 765], "period": [602, 605, 610, 611, 632, 670, 715, 762, 772, 781], "periodic": 717, "periodically": [670, 680, 717, 789], "peripheral": 670, "perl": 680, "perldoc": 683, "perm": [30, 223, 380, 493, 585, 606, 612, 618, 670, 671, 675, 680, 683, 701, 714, 715, 720, 749, 781, 794, 814], "permanent": [586, 760, 762, 796], "permanently": [670, 693, 721], "permiss": [30, 223, 380, 493, 622, 670, 720, 760], "permissibl": 715, "permissively": 670, "permit": [585, 608, 715, 749, 753, 814, 815, 816], "permitted": [651, 675, 689, 693, 714, 715, 726], "permitting": 716, "permlan": 589, "permut": [589, 715], "perpetual": 789, "perpetually": 670, "pershaderperfdat": 591, "pershadert": 591, "persist": [607, 665, 749], "persisted": 672, "persistent": [715, 717], "persisting": 609, "person": [601, 609, 610, 670, 709, 722, 747, 760, 762, 767, 776, 792, 795], "personal": [609, 670], "personalit": 673, "personality": [598, 673, 716], "personalityfn": 598, "personally": 609, "personlist": 792, "personnam": 776, "perspect": [594, 609, 665, 673, 708, 715, 760, 770, 788], "pertain": [601, 670, 715], "pertaining": [673, 762, 765], "pertinent": 772, "pervas": 749, "pervasively": [708, 818], "pervert": 777, "pessimiz": [677, 746, 749], "pet": 762, "peut": [122, 123, 336], "peuvent": 123, "pf0": 727, "pf1": 727, "pg0": 727, "pg1": 727, "pgo": [604, 646, 731, 744, 759, 766, 784], "ph": 715, "phab": 751, "phabricator": [610, 664, 670, 682, 683, 728, 751, 753, 754, 762, 772], "phabricator_usernam": 762, "phas": [613, 660, 670, 673, 680, 693, 707, 714, 715, 732, 733, 749, 754, 758, 795, 809, 813], "phase3": [707, 758], "phi": [598, 608, 624, 665, 673, 688, 710, 719, 746, 765, 785, 812, 813, 814, 815, 816], "phid": 611, "phielimin": 608, "phieliminationid": 608, "philip": 753, "philosophy": [710, 784], "phinod": [611, 726, 812, 813, 814, 815, 816], "phis": [611, 715, 726], "phony": 714, "phoronix": 752, "php": [747, 752], "phras": [601, 611], "phrasing": 607, "physical": [585, 586, 591, 609, 640, 688, 690, 714, 715, 721, 736, 749, 760, 765, 770, 786], "physically": [604, 688, 760], "physreg": 608, "pi": [590, 669, 680, 749, 761], "pi8": 783, "pic": [608, 620, 706, 709, 714, 721, 746, 765, 786], "pick": [585, 586, 597, 606, 608, 611, 620, 680, 681, 683, 686, 696, 705, 706, 707, 709, 715, 728, 747, 749, 751, 770, 786], "picked": [640, 728, 779], "picking": 611, "pictur": [681, 744, 791, 810], "picus": [697, 753], "picusacronym": 753, "pid": 591, "piec": [585, 586, 598, 602, 604, 607, 608, 610, 611, 632, 670, 678, 681, 685, 704, 709, 714, 715, 765, 770, 776, 781, 809, 810, 812, 813, 814, 816, 818], "pieg": 123, "pienaar": 662, "pietro": 762, "pietroalbin": 762, "pifft": 780, "pilipenko": 762, "ping": [610, 664, 727, 728], "pinned": 715, "pinning": 715, "pinpoint": 751, "pinsrd": 612, "pinsrd_1": 612, "pinst": 749, "pip": [591, 612, 617, 640, 685, 767, 771, 779, 781, 790], "pip3": 685, "piped": 612, "pipefail": 617, "pipelin": [20, 598, 617, 624, 640, 665, 678, 679, 688, 690, 695, 698, 710, 714, 715, 724, 729, 757, 759, 770, 781, 782, 786, 787, 788, 795], "pipelined": 746, "pipelinemetadat": 591, "pipelining": [586, 788], "pipermail": [751, 753], "piping": 781, "pitcairn": 591, "pivot": 715, "pivotmask": 715, "pixel": [78, 96, 97, 171, 186, 187, 266, 286, 287, 447, 448, 542, 560, 561, 591], "pl": [585, 586, 790, 792], "plac": [591, 592, 593, 595, 596, 597, 602, 608, 610, 611, 615, 617, 620, 642, 654, 666, 670, 672, 673, 674, 675, 678, 680, 681, 693, 694, 699, 705, 714, 715, 721, 727, 728, 730, 731, 747, 749, 751, 755, 757, 758, 765, 766, 767, 768, 770, 776, 777, 781, 787, 788, 792, 809, 810, 811, 813, 814, 817, 818], "placed": [585, 591, 608, 615, 617, 622, 640, 661, 665, 675, 683, 690, 701, 705, 715, 721, 751, 759, 765, 779, 781, 782, 786], "placehold": [622, 673], "placeholder": 672, "placesafepoint": 680, "placing": [661, 678, 715, 746, 750, 770, 776, 779, 785], "plag": 123, "plain": [612, 714, 721, 722, 735, 749, 767, 776, 788, 794], "plan": [586, 608, 640, 670, 682, 701, 704, 713, 717, 725, 731, 749, 765, 769, 770, 777, 785, 789, 813], "planned": [670, 680, 725, 729, 755], "planning": [751, 762], "planted": 788, "plat": [661, 749], "platform": [586, 591, 593, 595, 607, 608, 627, 645, 665, 670, 671, 673, 680, 683, 684, 701, 702, 704, 706, 707, 715, 718, 731, 741, 744, 745, 749, 766, 768, 771, 788, 791, 794, 811, 813], "plausibl": 601, "play": [727, 749, 788, 817], "pldi": [680, 755], "pleas": [593, 594, 595, 601, 606, 608, 609, 610, 611, 614, 619, 634, 636, 638, 640, 642, 643, 644, 651, 653, 654, 656, 658, 660, 664, 670, 671, 678, 680, 682, 683, 685, 687, 700, 701, 702, 704, 706, 707, 709, 710, 712, 714, 715, 722, 724, 725, 728, 729, 731, 732, 747, 749, 757, 758, 760, 761, 762, 767, 770, 773, 778, 781, 786, 790, 810, 817, 819], "plethor": [603, 676, 683, 749], "plist": 643, "plot": [639, 813], "plott": 813, "plotting": 813, "plt": [714, 715], "plug": [733, 810], "plugin": [613, 620, 622, 659, 668, 704, 715, 733, 759, 784], "plugin_tool": 788, "pluginfilenam": 620, "plugininfo": 788, "plumber": 585, "plus": [585, 586, 590, 591, 597, 598, 612, 670, 673, 680, 714, 715, 736, 749, 762, 765, 775, 786, 793, 795, 809, 812], "plusieur": [123, 793], "plusten": 765, "plx": 586, "pm": [730, 786, 788], "pmbuild": 729, "pmdatamanag": 790, "pmtoplevelmanag": 790, "pn": [611, 688, 812, 813, 814, 815, 816], "png": [606, 717], "pni8": 673, "point": [25, 128, 219, 316, 321, 326, 338, 377, 489, 588, 589, 594, 595, 598, 599, 600, 602, 605, 606, 608, 611, 612, 618, 626, 632, 640, 645, 661, 662, 667, 670, 672, 673, 674, 677, 678, 682, 688, 691, 694, 696, 701, 703, 705, 706, 707, 708, 710, 713, 714, 716, 718, 719, 720, 721, 725, 726, 727, 728, 729, 730, 731, 735, 740, 743, 746, 747, 751, 756, 757, 758, 759, 761, 762, 765, 770, 771, 774, 775, 776, 777, 783, 784, 786, 788, 789, 790, 791, 792, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "point_numb": [52, 53, 143, 238, 239, 401, 402, 514, 515], "pointcount": 680, "pointe": [591, 598, 715], "pointed": [585, 586, 591, 598, 608, 673, 681, 701, 715, 732, 749, 770, 777, 796], "pointee_align": 591, "pointeealign": 591, "pointer": [586, 595, 608, 662, 665, 673, 676, 680, 681, 688, 689, 703, 713, 714, 716, 720, 727, 729, 730, 731, 735, 743, 746, 748, 749, 765, 766, 768, 774, 775, 783, 788, 792, 794, 811, 812, 814, 817, 818], "pointer1": 766, "pointer2": 766, "pointer_offset": 715, "pointerflag": 735, "pointerkind": 735, "pointermod": 735, "pointermodifi": 735, "pointertodatamemb": 735, "pointertojittargetaddress": [731, 796, 797], "pointertomemberfunct": 735, "pointertyp": [732, 749], "pointing": [591, 601, 661, 683, 707, 714, 715, 731, 736, 749, 751, 765, 789, 814], "pointless": [673, 726, 770], "pointstoconstantmemory": 715, "pointtoconstantmemory": 594, "pointy": 792, "poison2": 715, "poison3": 715, "poison4": 715, "poison5": 715, "poison_yet_again": 715, "poisoned": [715, 766], "pok": 598, "polar": 792, "polaris10": 591, "polaris11": 591, "polic": [682, 772], "policy": [589, 591, 594, 598, 611, 664, 682, 683, 687, 728, 749, 751, 753], "polit": [608, 610], "political": 609, "poll": [680, 724, 770], "polling": 680, "pollut": [611, 747, 787], "polly": [606, 670, 683, 751, 753, 755, 782], "pollypolly": 671, "polyhedral": 755, "polymorphic": [605, 768], "polymorphism": [749, 787], "pong": 727, "pool": [591, 598, 608, 624, 714, 731, 757, 761, 768, 786, 788, 794], "poolalloc": 594, "poor": [609, 611, 770, 812], "poorly": [599, 611], "pop": [585, 586, 590, 593, 608, 680, 715, 749, 812, 814, 815, 816], "pop2_": 752, "pop_back": [661, 749, 816], "popcnt": 717, "popf": 766, "popfq": 766, "popped": [585, 586, 598, 791], "popping": [585, 586, 608], "popq": [766, 768, 770], "pops_exiting_wave_id": 590, "pops_pack": 20, "popul": 674, "popular": [594, 607, 608, 672, 683, 702, 715, 818], "populat": [617, 683, 729, 766, 774], "populated": [673, 715, 733, 762, 810], "populating": 714, "pornin": 766, "porpod": 755, "port": [608, 632, 701, 714, 757, 766, 771, 785, 789, 817], "portability": [611, 641, 680, 771, 817], "portabl": [586, 604, 606, 608, 617, 680, 715, 731, 749, 784, 794], "ported": [676, 771], "porting": [691, 693, 698], "portion": [585, 586, 591, 602, 604, 607, 608, 613, 661, 666, 670, 673, 683, 690, 694, 715, 721, 723, 726, 746, 752, 765, 766, 774, 776, 786, 791, 811], "pos": [78, 171, 266, 542, 662, 680, 715, 716, 719, 766], "pos1": 661, "pos2": 661, "posed": 766, "posit": [20, 27, 78, 84, 123, 129, 171, 175, 212, 220, 266, 270, 370, 378, 435, 482, 490, 542, 548, 585, 586, 589, 590, 591, 598, 608, 612, 620, 622, 632, 665, 670, 673, 675, 683, 689, 701, 706, 710, 712, 715, 717, 718, 719, 721, 728, 736, 747, 749, 755, 757, 762, 765, 766, 768, 770, 776, 792, 812, 813], "positional": [646, 655], "positionaleatsarg": 661, "positioned": [585, 586, 591, 715], "posix": [606, 612, 622, 641, 642, 654, 672, 703, 759], "possess": [666, 749], "possibilit": [598, 681, 719, 731, 808], "possibility": [586, 595, 611, 666, 713, 715, 727, 753], "possibl": [585, 586, 590, 591, 594, 595, 596, 597, 598, 602, 605, 606, 608, 610, 612, 617, 632, 640, 642, 645, 661, 662, 665, 666, 667, 668, 669, 670, 671, 674, 675, 678, 680, 681, 683, 693, 694, 696, 699, 700, 701, 703, 705, 708, 710, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 729, 730, 731, 732, 734, 736, 740, 746, 747, 749, 751, 755, 758, 760, 764, 765, 766, 767, 770, 771, 772, 774, 775, 776, 779, 781, 782, 785, 788, 791, 792, 809, 811, 812, 814, 816, 817], "possibly": [585, 586, 591, 595, 598, 608, 665, 670, 676, 680, 681, 688, 691, 696, 706, 710, 714, 715, 719, 731, 746, 748, 749, 751, 755, 758, 765, 788], "post": [608, 609, 610, 620, 640, 664, 670, 671, 682, 689, 698, 714, 721, 724, 730, 747, 750, 757, 759, 760, 761, 765, 766, 770, 775], "posted": [610, 747, 762], "postencodermethod": 776, "poster": 609, "postfix": [585, 586], "postincr": 611, "posting": [609, 610, 762], "postingscommunity": 671, "postord": 716, "postprocessinstruct": 640, "postprunep": 714, "postrapseudos": 721, "postscript": 746, "potential": [589, 602, 608, 611, 640, 673, 688, 715, 717, 724, 726, 730, 746, 753, 754, 755, 761, 763, 765, 766, 770, 783], "potentially": [586, 594, 608, 611, 617, 632, 640, 661, 670, 673, 676, 678, 680, 683, 704, 715, 717, 726, 730, 749, 755, 760, 761, 765, 766, 768, 770, 772, 782, 790, 808, 809, 812], "pound": 792, "povray31": 780, "pow": [586, 591, 594, 638, 663, 689, 693, 700, 702, 719, 721, 729, 746, 747, 776, 777, 785, 791, 810, 812, 813], "power": 693, "power8": 663, "power9": 663, "powered": 702, "powerful": [594, 604, 608, 612, 661, 693, 713, 714, 715, 718, 749, 767, 777, 809, 811, 812, 813, 814], "powerpc": [595, 606, 642, 643, 671, 674, 683, 715, 716, 753, 768, 781, 786, 792], "powerpc64": [663, 715], "powerpc64l": 789, "powerpccodegen": 671, "powerpcl": 642, "pp": [585, 590, 743], "ppa": 683, "ppas": 683, "ppc32": 608, "ppc64": 608, "ppc_fp128": [598, 715, 727], "ppc_linux_default_ieeelongdoubl": 757, "ppcf128": 715, "ppcinstrinfo": 674, "ppcisellowering": 674, "pr": [670, 716, 765, 781], "pr26161": 690, "pr26576": 688, "pr34636": 679, "practic": [585, 586, 599, 604, 661, 664, 670, 676, 677, 680, 682, 688, 708, 715, 716, 717, 719, 728, 731, 735, 739, 741, 743, 746, 749, 751, 765, 766, 767, 768, 770, 772, 776, 782, 784, 795, 810, 811, 812, 818], "practical": [585, 595, 611, 670, 681, 719, 749, 770, 776], "practically": 585, "pragm": [586, 660, 662, 746, 757, 782], "pre": [589, 591, 608, 610, 620, 670, 674, 689, 707, 709, 710, 714, 716, 731, 746, 749, 750, 751, 754, 757, 765, 777, 782], "pre_stor": 608, "preallocated": [598, 749], "prebuilt": 672, "prec": [813, 814, 815, 816], "precaut": [749, 762], "preced": [641, 715, 726, 749, 768, 776, 781, 791], "preceded": [585, 586, 612, 655, 715, 749, 761, 791, 794], "precedent": [586, 591, 612, 715, 770, 809, 810, 811, 812, 813, 814, 815, 816, 818], "preceding": [585, 586, 591, 594, 598, 611, 612, 617, 665, 691, 715, 746, 749, 765], "precis": [586, 590, 591, 594, 595, 608, 612, 618, 620, 680, 683, 688, 708, 710, 721, 730, 757, 765, 774, 786, 808, 809, 810], "precisely": [715, 726, 768], "preclud": [597, 715, 766, 770], "precluding": 714, "precompiled": [714, 794], "precompiling": 729, "precomputed": 594, "precondit": 611, "precursor": 670, "pred": [673, 715, 729, 749, 765, 812, 814], "predecessor": [599, 608, 678, 710, 715, 719, 746, 755, 765, 812], "predefin": 779, "predefined": [608, 612, 617, 679, 770, 779, 788, 813], "predetermined": 594, "predicat": [595, 597, 731, 774, 776, 777, 786], "predicate_stat": 766, "predicate_stor": 786, "predicated": [682, 712, 715, 749, 755], "predicatedbinaryoperator": 754, "predicatedinstruct": 754, "predicateinfo": 715, "predict": [600, 611, 617, 640, 678, 749, 756, 761, 766, 788], "predicted": 766, "predictor": 766, "prediqu": [682, 688, 755], "predreg": 712, "predrel": 712, "predsens": 712, "preemptabl": 717, "preemptibl": 746, "preemption": 598, "preemptionspecifi": [598, 715], "preexisting": [611, 746], "pref": [595, 640, 660, 662, 670, 701, 704, 714, 715, 724, 747, 749, 758, 777, 781, 790], "prefaced": 607, "prefer": [607, 611, 728, 771], "preferably": [670, 678, 683, 687, 753], "preferent": [594, 611, 670, 701, 715, 727, 753], "preferred": [595, 611, 632, 655, 670, 673, 678, 702, 708, 710, 715, 721, 747, 749, 757, 765, 786], "prefetch": 663, "prefetched": 715, "prefetching": 663, "prefix": [585, 586, 587, 591, 592, 598, 604, 606, 608, 611, 615, 617, 621, 625, 626, 642, 643, 655, 660, 661, 666, 683, 699, 717, 721, 731, 733, 734, 735, 750, 751, 753, 765, 776, 777, 779, 781, 813], "prefix1": 612, "prefix2": 612, "prefixdat": 598, "prefixed": [591, 612, 628, 655, 673, 715, 741, 753, 765], "prefixing": 604, "preformatted": [722, 767], "preg": 608, "prehead": [710, 715, 719, 746, 812], "preheaderbb": [812, 813], "preincrement": 611, "preincrementing": 611, "preinstalled": 672, "premi": 123, "prendr": 123, "preord": [667, 708], "prepar": [706, 715, 724, 746, 751, 758, 765, 811], "prepared": [665, 670, 673, 681, 715, 720, 728, 740, 743, 746, 747, 760], "preparing": [626, 682, 727], "prepass": 608, "prepend": [615, 643, 657, 710, 715, 779], "prepended": [626, 636, 765, 776], "prepending": [636, 715, 749, 753], "preprocessed": 709, "preprocessing": 676, "preprocessor": [606, 626, 661, 662, 666, 676, 749, 774, 776, 786, 811, 817], "preprocessordirect": 776, "prerequisit": [611, 788], "prescrib": 688, "presenc": [595, 608, 611, 612, 640, 673, 708, 710, 715, 733, 741, 749, 765, 772, 786, 791], "present": [585, 591, 598, 603, 605, 608, 610, 612, 617, 620, 627, 631, 638, 640, 645, 653, 655, 657, 661, 662, 665, 666, 673, 675, 677, 680, 681, 683, 688, 697, 705, 715, 732, 733, 735, 736, 739, 740, 741, 743, 749, 751, 759, 765, 766, 770, 772, 776, 782, 793, 812, 813, 814, 815, 816], "presented": [585, 586, 591, 608, 626, 640, 709, 749, 752, 765, 766, 770, 812], "presenting": [585, 765], "presently": 603, "preserv": [589, 594, 597, 606, 608, 626, 633, 642, 654, 661, 681, 683, 692, 714, 719, 730, 751, 757, 765, 766, 768, 781, 787, 788, 791], "preserve_allcc": [598, 715], "preserve_mostcc": [598, 715], "preserveall": 715, "preserved": [585, 586, 589, 591, 608, 611, 665, 692, 694, 710, 715, 730, 751, 766, 782, 788], "preservedanalys": [730, 753, 787], "preservedanalysescheck": 753, "preservedset": 730, "preservedwhenstateless": 730, "preservemost": 715, "preserveset": 730, "preserving": [673, 710, 717, 765, 788, 817], "prespl": 665, "press": 815, "pressur": [608, 640, 683, 746, 766, 772, 785], "presumably": [585, 586, 715, 741, 743, 751, 776], "presumed": [736, 743], "pretty": [596, 639, 649, 650, 655, 681, 711, 717, 722, 723, 726, 727, 746, 749, 757, 766, 767, 771, 780, 788, 808, 809, 810, 811, 812, 813, 814], "prettyprinter": 749, "prev": 749, "prevail": 622, "prevent": [591, 594, 608, 610, 612, 642, 654, 661, 662, 665, 669, 676, 680, 690, 694, 703, 710, 715, 731, 736, 746, 748, 749, 751, 761, 764, 765, 766, 768, 770, 771, 781, 785, 787, 788, 797, 814, 815, 816], "prevented": [591, 746, 751, 766], "preventing": [591, 612, 670, 680, 714, 761, 762, 766, 810], "previous": [585, 586, 591, 595, 597, 598, 608, 611, 612, 617, 622, 640, 646, 665, 666, 670, 671, 674, 683, 700, 704, 707, 710, 715, 719, 722, 727, 728, 729, 730, 734, 744, 747, 749, 757, 758, 764, 766, 770, 772, 775, 776, 786, 788, 791, 792, 794, 796, 810, 811, 812, 813, 814, 815, 816, 818], "previously": [585, 586, 591, 598, 606, 612, 617, 626, 642, 661, 670, 673, 675, 689, 700, 707, 715, 717, 739, 743, 747, 751, 757, 766, 770, 776, 780, 786, 811, 812], "prf": 640, "prim": [78, 604, 606, 632, 752, 767, 809, 810, 811, 812, 813, 814, 815, 816], "primarily": [608, 617, 629, 633, 655, 657, 665, 680, 683, 702, 713, 715, 717, 721, 746, 749, 766, 813], "primary": [591, 594, 607, 608, 609, 617, 670, 673, 680, 714, 715, 717, 725, 733, 736, 746, 749, 761, 766, 769, 774, 775, 776, 808, 809, 810, 811, 812, 813, 814, 815, 816], "primaryexpr": [590, 809], "primaryfunctionid": 675, "primarykey": [774, 775], "primarykeyearlyout": [774, 775], "primarykeynam": [774, 775], "primid": 591, "primit": [78, 595, 611, 661, 681, 715, 721, 727, 735, 748, 749, 761, 766, 791, 813, 817], "princeton": 752, "principl": [586, 663, 705, 727, 749, 753, 765, 771, 818], "print": [607, 608, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 630, 631, 632, 633, 634, 637, 639, 640, 641, 642, 643, 644, 646, 647, 649, 650, 654, 655, 657, 659, 660, 661, 665, 674, 676, 680, 683, 685, 704, 709, 714, 715, 717, 723, 726, 728, 730, 749, 757, 759, 765, 775, 776, 777, 779, 780, 781, 785, 787, 792, 809, 810, 811, 812, 813, 814, 815, 816, 818], "print_arg": 714, "print_final_stat": 717, "print_list": 607, "print_pc": 717, "printabl": [653, 715, 721, 774, 786], "printallsymbol": 714, "printccoperand": 786, "printd": [811, 812, 813, 814, 815, 816, 817], "printdatadirect": 786, "printdeclar": 786, "printdensity": 813, "printed": [594, 608, 611, 622, 624, 626, 627, 631, 632, 640, 641, 655, 661, 674, 721, 728, 733, 746, 749, 775, 776, 786, 787, 788, 792], "printer": [723, 749, 815], "printerror": 775, "printf": [591, 602, 612, 666, 676, 683, 699, 714, 715, 718, 731, 749, 765, 811, 812, 813, 814, 815, 816], "printfatalerror": 775, "printfatalnot": 775, "printformattedfil": 749, "printfunctionpass": 746, "printimplicitdef": 786, "printinformationalmessag": 661, "printing": [607, 611, 622, 631, 639, 640, 643, 644, 680, 721, 749, 757, 786, 788], "printinlineasm": 786, "printinstruct": [774, 786], "printlabel": 786, "printmemoperand": 786, "printmethod": 786, "printnextinstruct": 749, "printnot": 775, "printoperand": 786, "printout": [659, 749], "printstar": 812, "printsth": 746, "printwarning": 775, "prior": [585, 586, 591, 598, 608, 617, 642, 661, 665, 666, 670, 673, 683, 685, 713, 715, 753, 766, 782, 788], "priorit": 715, "prioritiz": 640, "priority": [590, 591, 645, 662, 681, 707, 715, 760, 765], "priority_queu": 749, "pris": 793, "priv": 591, "privacy": 687, "privat": [586, 590, 598, 643, 665, 678, 701, 708, 715, 727, 729, 731, 736, 749, 760, 762, 765, 766, 774, 786, 794, 795, 796, 797], "private_bas": 590, "private_lim": 590, "private_segment_alignment": 591, "private_segment_fixed_siz": 591, "privately": 670, "privatesegmentfixedsiz": 591, "privileg": [591, 715, 771, 794], "privileged": 766, "prng": 717, "pro": 591, "proactiv": 670, "proactively": 602, "prob": [0, 3, 4, 9, 591, 715], "probabilistic": 700, "probabilistically": 700, "probabilit": [599, 626], "probability": [610, 640, 700, 721], "probabl": 715, "probably": [591, 608, 611, 624, 661, 662, 670, 672, 676, 680, 681, 701, 702, 715, 728, 749, 750, 751, 752, 769, 770, 809, 812, 817], "probed": 749, "probing": [608, 715, 749], "probinson": 762, "problem": [585, 586, 591, 594, 601, 602, 603, 608, 610, 611, 612, 613, 661, 665, 670, 676, 678, 679, 680, 681, 685, 686, 694, 698, 701, 702, 705, 706, 707, 709, 710, 713, 715, 716, 719, 728, 732, 733, 736, 741, 745, 746, 747, 749, 751, 753, 761, 765, 770, 771, 772, 781, 810, 812, 813, 817], "problematic": [611, 640, 670, 751, 772], "proc": [585, 586, 596, 683, 702, 786], "procedur": [585, 586, 591, 597, 661, 663, 670, 685, 703, 707, 714, 716, 727, 749, 750, 766], "procedural": [591, 600, 678, 715, 716, 769, 808], "proceed": [606, 665, 670, 673, 680, 688, 707, 714, 716, 727, 749, 755, 758, 766], "proceeded": 591, "proceeding": [608, 610, 662, 680], "process": [585, 586, 591, 593, 594, 595, 596, 602, 603, 604, 610, 611, 640, 643, 645, 660, 661, 662, 664, 666, 668, 670, 672, 673, 680, 683, 684, 693, 694, 700, 702, 704, 709, 712, 714, 715, 717, 718, 720, 733, 734, 746, 747, 749, 751, 753, 756, 761, 763, 765, 770, 771, 776, 777, 781, 785, 786, 788, 792, 793, 794, 796, 797, 808, 809, 811, 817], "process_id": 591, "processbuff": 749, "processbufferatpath": 749, "processed": [599, 606, 607, 608, 612, 631, 639, 640, 646, 675, 715, 717, 718, 734, 746, 775, 776, 777, 788, 792, 808], "processformattedfil": 749, "processing": [611, 615, 640, 660, 661, 663, 673, 683, 715, 759, 766, 770, 775, 776, 777, 786, 789, 808], "processor": [597, 606, 608, 620, 640, 661, 680, 683, 688, 715, 765, 777, 785, 786, 815], "processrelocationref": 720, "procnoitin": 777, "procsym": 675, "produc": [585, 586, 588, 589, 590, 591, 595, 597, 602, 603, 606, 608, 611, 612, 613, 615, 617, 618, 624, 628, 629, 632, 636, 640, 642, 645, 655, 659, 666, 672, 673, 676, 679, 680, 681, 683, 689, 693, 699, 709, 710, 715, 723, 726, 727, 736, 738, 740, 741, 743, 746, 748, 749, 755, 759, 765, 769, 770, 771, 774, 775, 776, 781, 786, 788, 789, 792, 794, 795, 811, 812, 814], "produced": [585, 586, 591, 595, 598, 608, 611, 624, 626, 629, 640, 665, 670, 673, 680, 693, 714, 715, 717, 726, 731, 749, 759, 765, 770, 775, 776, 779, 785, 791, 792, 795, 810], "producer": [586, 673, 681, 723, 738, 765], "producing": [595, 596, 608, 626, 651, 683, 689, 706, 713, 715, 765, 770, 776, 816], "product": [591, 599, 608, 609, 612, 615, 640, 646, 670, 680, 700, 701, 714, 715, 725, 727, 756, 759, 762, 772, 776, 788, 796, 809, 813], "prof": [599, 600, 646, 704, 724], "profdat": [593, 606, 616, 626, 647, 704, 715, 779], "professional": [610, 664], "profgen": 616, "profil": [591, 593, 600, 604, 606, 616, 626, 632, 649, 650, 666, 677, 678, 705, 721, 747, 750, 759, 784, 791], "profiled": [646, 647, 715, 750], "profiledat": 715, "profiler": 591, "profiling": [600, 604, 606, 626, 655, 666, 677, 678, 704, 715, 731, 765], "profit": [608, 662, 677, 678, 715, 746, 766, 782, 785], "profraw": [593, 626, 704], "progbit": [675, 766], "program": [590, 591, 594, 595, 596, 602, 603, 606, 607, 611, 612, 613, 614, 616, 617, 619, 622, 626, 633, 636, 638, 640, 642, 645, 649, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 662, 666, 670, 671, 672, 677, 678, 679, 680, 682, 683, 685, 688, 699, 700, 703, 705, 707, 709, 710, 714, 715, 716, 717, 718, 719, 721, 725, 728, 729, 734, 736, 741, 743, 744, 745, 746, 749, 752, 756, 759, 761, 765, 766, 768, 769, 770, 771, 776, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 809, 811, 814, 815, 816, 817], "programm": [591, 595, 602, 608, 611, 659, 661, 663, 664, 680, 684, 708, 714, 774, 775, 777, 782, 788, 794, 813, 816], "programmatic": [646, 680, 789], "programmatically": [608, 729, 789, 792, 813], "programmed": 591, "programmer": [662, 766, 785], "programmersmanual": 794, "programming": [586, 608, 611, 618, 662, 663, 667, 673, 680, 681, 708, 715, 729, 749, 757, 765, 771, 792, 811, 812, 814, 816, 817], "progress": [591, 592, 595, 606, 608, 617, 640, 663, 665, 670, 680, 707, 715, 716, 721, 749, 753, 772, 779, 789], "prohib": 726, "prohibit": [595, 718, 766], "prohibited": 714, "prohibitively": 766, "proj_install_root": 750, "proj_obj_root": 750, "proj_src_root": 750, "project": [586, 593, 601, 604, 609, 610, 611, 617, 634, 636, 638, 642, 643, 644, 651, 653, 654, 663, 664, 665, 668, 671, 672, 674, 676, 678, 679, 682, 684, 685, 686, 687, 701, 703, 704, 705, 706, 707, 714, 715, 716, 717, 728, 731, 732, 747, 749, 752, 753, 759, 760, 761, 762, 763, 765, 766, 767, 768, 772, 775, 776, 779, 780, 781, 788, 789, 793, 794, 795, 796, 797, 818], "project_nam": 750, "projected": 665, "projectllvmproject": 671, "projector": 724, "prolang": 780, "prolifer": [601, 753], "prolog": [715, 716, 766, 786], "prologepilog": 759, "prologu": [591, 598, 608, 618, 680, 764, 765, 786, 816], "prologue_end": 675, "prologuedat": 598, "prominent": 779, "promis": [610, 670, 772, 789], "promised": 763, "promot": [585, 586, 594, 608, 662, 670, 674, 678, 714, 715, 716, 733, 765, 814, 816], "promoted": [585, 586, 608, 670, 715, 749, 765, 786, 814], "promoteloopaccessestoscalar": 710, "promoteop": 674, "promoting": [594, 608, 662, 755, 814], "prompt": [685, 781], "prompted": 728, "promptly": [610, 670, 762], "pron": [608, 661, 702, 749, 777], "proof": [600, 667, 719, 721, 731, 747, 766], "prop": [595, 611, 617, 640, 662, 666, 670, 691, 708, 710, 715, 730, 749, 757, 786, 787, 816], "propag": [591, 662, 673, 683, 715, 716, 721, 733, 765, 771], "propagat": [591, 606, 608, 673, 714, 715, 749, 765, 769, 770], "propagated": [714, 749, 759, 765, 770], "propagating": [591, 689, 715, 747, 765], "properly": [590, 592, 594, 595, 601, 602, 605, 608, 615, 661, 662, 664, 675, 682, 683, 687, 715, 732, 747, 776, 811, 814], "propert": [586, 587, 594, 597, 598, 608, 640, 642, 660, 661, 665, 667, 680, 685, 712, 715, 718, 719, 721, 726, 727, 736, 746, 749, 762, 766, 768, 769, 774, 775, 777, 781, 782, 786, 814], "property": [586, 591, 592, 594, 595, 597, 598, 603, 611, 615, 617, 640, 660, 661, 666, 667, 670, 674, 685, 692, 694, 715, 719, 743, 747, 749, 751, 765, 770, 782, 811, 814, 817], "propertydefinit": 660, "proponent": 753, "proport": 691, "proportional": [646, 661], "propos": [603, 717, 751, 762, 766, 772, 790], "proposal": [585, 586, 603, 678, 697, 753, 754, 755, 772, 793], "proposed": [585, 599, 610, 612, 670, 716, 751, 762, 766], "proposing": [603, 612, 678, 751, 766, 772], "pros": [597, 611], "prospectively": 670, "protect": [595, 605, 670, 714, 715, 717, 757, 760, 771], "protected": [595, 598, 605, 608, 611, 642, 714, 715, 751, 766, 786], "protectfilecheckoutput": 781, "protecting": [670, 766], "protectionflag": 714, "protector": [715, 765], "proto": [797, 809, 810, 811, 812, 813, 814, 815, 816], "protoast": [810, 811, 812, 813, 814, 815, 816], "protobuf": 679, "protocol": [665, 679, 715, 751, 770], "prototyp": [633, 665, 674, 700, 714, 715, 754, 756, 761, 775, 786, 788, 809, 810, 811, 812, 813, 814, 815, 816], "prototypeast": [797, 809, 810, 811, 812, 813, 814, 815, 816], "prototyped": 611, "prototyping": [586, 678], "prov": [585, 594, 670, 678, 700, 713, 715, 719, 727, 746, 766], "proven": [585, 591, 641, 670, 678, 694, 715, 725, 746, 770, 814], "provid": [34, 132, 225, 384, 497, 585, 586, 587, 590, 591, 593, 594, 595, 598, 600, 601, 604, 605, 606, 607, 608, 610, 617, 624, 631, 632, 640, 646, 650, 655, 659, 661, 662, 664, 665, 666, 668, 670, 672, 673, 675, 678, 680, 681, 682, 683, 685, 687, 688, 691, 693, 698, 700, 701, 702, 703, 708, 714, 715, 716, 717, 718, 719, 720, 723, 724, 726, 729, 730, 731, 733, 738, 744, 746, 748, 749, 750, 751, 756, 759, 760, 761, 762, 765, 766, 768, 770, 771, 774, 775, 776, 780, 784, 786, 788, 789, 791, 792, 794, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 817], "provided": [585, 586, 589, 591, 592, 594, 595, 604, 605, 606, 607, 608, 610, 611, 612, 613, 617, 626, 631, 632, 639, 640, 642, 655, 657, 661, 665, 669, 670, 673, 675, 678, 680, 681, 683, 688, 691, 696, 705, 710, 714, 715, 716, 717, 718, 721, 725, 726, 729, 731, 743, 748, 749, 750, 757, 759, 761, 762, 765, 766, 768, 770, 771, 775, 776, 784, 785, 786, 788, 789, 792, 810], "providing": [585, 586, 594, 603, 607, 610, 611, 617, 661, 664, 670, 673, 678, 680, 700, 708, 714, 715, 717, 719, 731, 749, 759, 760, 761, 765, 766, 768, 776, 788, 789, 790, 793, 795], "proving": [719, 746], "provis": 670, "provisional": [586, 591], "proviso": 670, "prox": 730, "proxy": [585, 608, 701, 730], "proxyapp": 752, "prun": [670, 714, 751, 755], "pruned": [714, 726, 746, 762], "pruneexpir": 751, "pruning": [603, 714, 789], "pr\u00e9sent": 793, "ps4": 657, "psab": 663, "pse": 753, "pseudo": [591, 597, 599, 608, 643, 660, 665, 691, 715, 721, 731, 748, 749, 765, 766, 774, 786, 788], "pseudocod": [700, 715, 786], "pseudonym": 760, "pseudos": [691, 765], "psl": [585, 586], "pstl": [606, 683, 751], "psubus": 781, "psubusw": 781, "psutil": [685, 781], "pt": 752, "pt_load": [585, 586], "pte": 591, "pthread": [662, 715, 761], "pthread_attr_t": 715, "pthread_creat": 715, "ptr": [591, 595, 611, 643, 665, 677, 689, 732, 735, 749, 768, 783, 786], "ptr0": [689, 715], "ptr1": 715, "ptr2": 715, "ptr3": 715, "ptr64": 591, "ptr7": 715, "ptr_is_null": 677, "ptr_rc": 608, "ptra": 729, "ptrauth": 715, "ptrb": 729, "ptrc": 729, "ptrloc": [680, 715], "ptroff": 608, "ptrreg": 608, "ptrtoint": [678, 770], "ptrtoreplacedint": 749, "ptrty": 715, "ptrval": 715, "ptx": [608, 662, 663], "ptx30": 608, "ptx31": 608, "ptxas": 662, "ptxstring": 729, "pty": 715, "pty2": 715, "pub": 765, "publi": 793, "public": [604, 607, 611, 645, 661, 670, 679, 680, 682, 683, 701, 708, 714, 729, 731, 736, 744, 758, 760, 762, 763, 765, 766, 772, 783, 786, 787, 788, 792, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "publicly": [670, 749, 760, 762, 763, 765, 772], "publicstreamindex": 736, "publiqu": 752, "publish": [758, 762], "published": [662, 744, 749, 753, 762], "publishing": 763, "pubnam": [631, 765], "pubtyp": [631, 765], "pugixml": 717, "pull": [589, 595, 683, 728, 747, 751], "pulled": [608, 703, 751, 762, 772], "puls": 717, "punctuat": [611, 715, 776], "pur": [668, 715, 716, 746, 755, 765], "purely": [595, 602, 608, 670, 671, 719, 746, 786, 810], "purpos": [585, 586, 591, 597, 604, 608, 611, 612, 617, 640, 642, 645, 660, 661, 662, 665, 669, 670, 673, 678, 681, 683, 688, 691, 701, 710, 714, 715, 719, 727, 729, 731, 732, 733, 736, 740, 741, 746, 747, 749, 753, 758, 761, 762, 763, 766, 769, 770, 771, 774, 775, 776, 777, 781, 788, 791, 794, 810, 811, 816], "pursued": 766, "push": [585, 586, 611, 680, 707, 715, 728, 747, 751, 816], "push_back": [611, 714, 749, 786, 792, 809, 810, 811, 812, 813, 814, 815, 816], "pushed": [585, 586, 591, 602, 605, 608, 683, 715, 751], "pushf": [608, 766], "pushfl": 608, "pushfq": [608, 766], "pushing": [585, 586, 715, 728, 751], "pushq": [766, 770], "put": [585, 586, 591, 594, 602, 608, 609, 611, 612, 661, 666, 668, 677, 680, 690, 705, 707, 715, 722, 727, 731, 746, 747, 749, 751, 762, 765, 766, 781, 788, 792, 811, 812, 814, 816], "putchar": [811, 812, 813, 814, 815, 816], "putchard": [811, 812, 813, 814, 815, 816, 817], "putting": [595, 596, 606, 611, 672, 673, 683, 688, 689, 715, 731, 749, 751, 766, 781, 811, 817], "puzzl": 709, "pv": 665, "pwd": [655, 683, 706], "pwr4": 757, "pwr7": 757, "py": [617, 664, 683, 685, 701, 704, 707, 709, 710, 749, 751, 779, 781, 786], "pygment": 810, "pynamic": 752, "python": [617, 665, 680, 683, 685, 701, 706, 717, 728, 749, 751, 753, 757, 758, 767, 774, 776, 779, 781, 817], "python3": 685, "python_execut": 683, "q": [617, 622, 661, 699, 715], "q0": [597, 715], "q1": 670, "q15": 715, "q2": 670, "q3": [670, 715], "q7": 715, "qch": 606, "qea": 673, "qemu": 717, "qhelpgenerator": 606, "qmcpack": 752, "qnan": 715, "qp": 766, "qspectr": 766, "qt": [606, 753], "qt_coding_styl": 753, "quad": [589, 590, 591, 675, 714, 715, 757, 766, 770, 786], "quad_perm": [589, 591], "quadr": 591, "quadratic": [608, 618, 726, 749], "quadratically": 749, "quadword": 757, "qualifi": [591, 608, 681, 715, 721, 735], "qualified": [591, 610, 715, 734, 765], "qualify": 715, "qualifying": 721, "quality": [603, 608, 610, 631, 640, 678, 694, 701, 702, 707, 715, 730, 772, 781, 788, 794, 796], "qualtyp": 611, "quantity": [640, 715], "quarantin": 761, "quarantine_max_chunk_siz": 761, "quarantine_size_kb": 761, "quarantined": 761, "quart": 789, "quartil": 766, "quentin": 697, "quer": [586, 591, 594, 611, 640, 678, 698, 714, 726, 731, 746, 749, 817], "queried": [608, 665, 726, 749, 785, 786], "query": [594, 595, 645, 661, 711, 712, 715, 726, 728, 730, 731, 733, 749, 765, 786, 788, 790, 795], "query_sampl": 591, "querying": [586, 712, 715, 726, 730, 732, 744, 749], "question": [585, 586, 594, 601, 610, 640, 664, 670, 678, 681, 682, 683, 685, 688, 708, 715, 717, 722, 727, 747, 749, 750, 753, 756, 757, 765, 767, 776, 782, 809, 812, 814, 817], "queu": [20, 640, 701, 731, 749, 786, 788, 789], "queue_ptr": 591, "queued": 591, "queuing": 591, "quick": [594, 602, 610, 611, 622, 640, 678, 681, 702, 706, 725, 726, 746, 747, 758, 760, 765, 795, 811, 817], "quickest": 700, "quickly": [594, 602, 608, 610, 611, 622, 661, 664, 670, 673, 683, 684, 685, 709, 715, 717, 726, 734, 745, 749, 753, 765, 771, 781, 789, 795], "quicksilv": 752, "quickstart": [682, 706], "quiet": [591, 617, 631, 641, 661, 689, 710, 715], "quiet2": 661, "quieted": 715, "quieting": [591, 715], "quirk": [607, 770], "quit": [594, 608, 612, 640, 662, 668, 674, 678, 680, 681, 683, 715, 722, 727, 749, 766, 767, 768, 771, 776, 796, 810, 812, 817], "quot": [606, 661, 683, 715, 717, 765, 774, 781, 792], "quoted": [591, 715, 721, 781], "quotient": [612, 715], "quoting": [622, 671, 781], "quotingtyp": 792, "quux": 611, "qux": 715, "qx": 597, "r": [585, 586, 596, 608, 612, 622, 626, 628, 631, 640, 641, 642, 643, 644, 646, 649, 650, 654, 669, 675, 680, 701, 707, 708, 714, 715, 727, 729, 731, 735, 740, 749, 751, 757, 770, 776, 786, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816], "r0": [608, 612, 715, 721, 723, 776, 786], "r1": [585, 586, 608, 612, 715, 721, 729, 749, 751, 776, 786], "r10": [608, 612, 632, 729, 764, 777], "r10b": 777, "r10d": 777, "r10w": 777, "r11": [715, 764, 768, 777], "r11b": 777, "r11d": 777, "r11w": 777, "r12": [608, 675, 715, 777], "r1234": 751, "r12345": 707, "r123456": 751, "r128": [66, 157, 254], "r12b": 777, "r12d": 777, "r12w": 777, "r13": [608, 643, 777], "r13b": 777, "r13d": 777, "r13w": 777, "r14": [608, 643, 715, 777], "r14b": 777, "r14d": 777, "r14w": 777, "r15": [608, 643, 715, 721, 777], "r15b": 777, "r15d": 777, "r15w": 777, "r2": [585, 586, 608, 612, 715, 721, 749, 751, 776], "r258109": 751, "r3": [608, 612, 715, 729, 751, 776], "r31": [608, 715], "r341082": 717, "r390": 591, "r390x": 591, "r4": [608, 612, 675], "r5": [608, 612], "r6": [608, 612], "r600": 591, "r630": 591, "r6xx": 591, "r7": [591, 608, 612, 715], "r700": 591, "r7xx": 591, "r8": [608, 632, 715, 766, 768, 777], "r8b": 777, "r8d": 777, "r8w": 777, "r9": [591, 608, 729, 768, 777], "r9b": 777, "r9d": 777, "r9w": 777, "r_386_8": 675, "r_amdgpu_abs32": 591, "r_amdgpu_abs32_h": 591, "r_amdgpu_abs32_lo": 591, "r_amdgpu_abs64": 591, "r_amdgpu_gotpcrel": 591, "r_amdgpu_gotpcrel32_h": 591, "r_amdgpu_gotpcrel32_lo": 591, "r_amdgpu_non": 591, "r_amdgpu_rel16": 591, "r_amdgpu_rel32": 591, "r_amdgpu_rel32_h": 591, "r_amdgpu_rel32_lo": 591, "r_amdgpu_rel64": 591, "r_amdgpu_relative64": 591, "r_arm_thm_movw_abs_nc": 706, "r_offset": 591, "r_x86_64": 675, "r_x86_64_8": 675, "r_x86_64_gotpcrel": 675, "ra": [591, 620, 643, 765], "rac": [591, 595, 609, 665, 715, 749, 761, 781], "racist": 609, "radams": 717, "radare2": 717, "radeon": 591, "radically": [608, 698], "radius": 708, "radix": [608, 611, 641, 651, 653, 715], "rag": 624, "rai": 665, "rais": [586, 602, 671, 673, 680, 687, 689, 715, 749, 766, 770, 776], "raised": [585, 586, 636, 715, 746, 751, 762, 770, 772], "raising": 673, "rajaperf": 752, "rali": 633, "ram": [606, 685, 701, 717], "ramdisk": 757, "ramif": 681, "ramp": 665, "ramsey": 608, "ran": [626, 686, 766, 787, 788], "rand": 717, "random": [602, 611, 616, 617, 670, 715, 717, 725, 749, 752], "randomiz": [596, 613, 761], "randomize_va_spac": 596, "randomized": 602, "randomly": [611, 652, 700, 789], "rang": [20, 21, 22, 23, 24, 27, 84, 120, 123, 124, 125, 126, 127, 129, 175, 209, 212, 213, 214, 215, 216, 217, 220, 270, 314, 370, 371, 372, 373, 374, 375, 378, 435, 479, 482, 483, 484, 485, 486, 487, 490, 548, 584, 585, 586, 589, 590, 591, 594, 599, 600, 602, 608, 609, 617, 618, 631, 639, 640, 645, 661, 665, 669, 673, 675, 678, 680, 681, 682, 686, 689, 690, 708, 714, 719, 746, 755, 757, 765, 770, 774, 775, 776, 785, 788, 789, 793, 811, 813, 818], "range_specifi": 591, "rangecheck": 660, "rangeend": 675, "rangelist": 776, "rangepiec": 776, "rangestart": 675, "ranging": [646, 715], "rank": [715, 746], "ranlib": [616, 622, 683, 699, 705], "rapaport": 755, "rapid": [670, 766], "rar": [598, 608, 609, 611, 612, 677, 680, 690, 715, 743, 749, 766], "rarely": [608, 611, 673, 678, 688, 706, 715, 749, 786], "rashkov": 683, "rat": [598, 610, 624, 640, 664, 700, 717, 751], "rath": [585, 586, 591, 594, 598, 599, 603, 608, 609, 611, 612, 615, 617, 622, 626, 640, 653, 655, 662, 670, 672, 676, 678, 680, 681, 685, 688, 693, 700, 702, 714, 715, 717, 719, 730, 731, 732, 733, 736, 738, 746, 749, 751, 755, 758, 765, 766, 770, 775, 776, 781, 785, 786, 794, 795, 796, 809, 810, 816], "ratified": 757, "ratio": [591, 599, 646, 766], "rational": [585, 586, 608, 670, 688, 762, 784], "rauw": [710, 716, 727, 749], "raw": [608, 623, 626, 630, 633, 637, 640, 642, 643, 645, 646, 647, 649, 650, 659, 661, 665, 675, 704, 711, 715, 720, 723, 748, 749, 780, 790, 810], "raw_fd_ostream": 815, "raw_ostream": [608, 674, 749, 775, 788, 790, 792, 815, 816], "rawfrm": [776, 786], "rax": [608, 715, 721, 766, 768, 770, 777, 786], "rbp": [608, 721, 777], "rbss": 586, "rbx": [608, 777], "rc": [707, 758], "rc1": [707, 758], "rc2": [707, 758], "rc3": 707, "rcn": [707, 758], "rcp_iflag_f32": 591, "rcu": 640, "rcx": [608, 715, 766, 777], "rd": [675, 786], "rdi": [608, 632, 675, 715, 721, 765, 766, 768, 777], "rdna": 591, "rdna1": 591, "rdna2": 591, "rdtsc": [632, 715], "rdx": [608, 766, 768, 770, 777], "rdynamic": [811, 813], "re": [586, 594, 597, 601, 606, 607, 608, 609, 610, 611, 612, 613, 617, 661, 662, 664, 670, 673, 676, 678, 679, 680, 683, 686, 688, 692, 698, 699, 700, 701, 702, 704, 706, 707, 709, 714, 715, 717, 719, 720, 726, 727, 731, 741, 745, 747, 748, 749, 751, 755, 757, 758, 759, 762, 763, 765, 766, 767, 770, 771, 774, 776, 777, 780, 781, 788, 789, 790, 794, 796, 810, 811, 812, 814, 815, 816, 817], "reach": [585, 611, 640, 670, 673, 715, 724, 726, 727, 731, 747, 760, 762, 766, 768, 772], "reachability": [680, 716, 719], "reachabl": [606, 667, 680, 686, 714, 715, 719, 766, 770], "reached": [585, 586, 591, 611, 617, 640, 665, 667, 677, 707, 714, 715, 717, 727, 733, 746, 749, 761, 786], "reaching": [611, 665, 719, 726, 755], "react": 714, "read": [20, 29, 30, 68, 104, 105, 106, 107, 115, 131, 159, 194, 195, 196, 203, 204, 212, 222, 223, 256, 294, 295, 296, 297, 298, 299, 300, 301, 309, 370, 380, 420, 455, 456, 457, 471, 472, 482, 492, 493, 532, 568, 569, 570, 571, 579, 585, 586, 589, 590, 591, 594, 595, 597, 598, 602, 606, 607, 608, 611, 612, 616, 618, 620, 622, 623, 624, 626, 627, 629, 630, 631, 632, 633, 636, 640, 641, 642, 643, 644, 645, 646, 651, 653, 654, 655, 657, 659, 660, 661, 665, 668, 670, 671, 672, 674, 675, 676, 677, 682, 683, 685, 704, 715, 717, 721, 722, 727, 728, 736, 738, 746, 749, 757, 765, 766, 767, 768, 769, 770, 774, 775, 777, 781, 785, 786, 791, 792, 794, 795, 808, 809, 810, 811, 812, 813, 814, 815, 816], "read_only": 591, "read_writ": 591, "readability": [595, 610, 611, 660, 721, 728, 749, 753, 776, 792], "readabl": [590, 592, 595, 605, 608, 623, 624, 626, 630, 631, 637, 639, 646, 649, 650, 655, 675, 683, 700, 710, 714, 715, 721, 722, 736, 746, 749, 753, 762, 765, 788, 792, 810], "readandmaybemodify": 717, "readattribut": 774, "readelf": [616, 641, 643], "reader": [728, 791, 794, 795], "readily": [694, 762], "reading": [585, 586, 594, 598, 608, 611, 624, 627, 645, 663, 670, 683, 685, 709, 714, 715, 727, 732, 736, 744, 747, 749, 753, 757, 763, 765, 766, 776, 789, 791, 792, 808, 810, 811, 812, 813, 814, 815, 816], "readjustment": 608, "readm": [670, 683, 687, 722, 751, 753, 757, 767, 779, 781], "readnon": [598, 678, 715, 729, 746, 765, 783], "readobj": [616, 641, 643, 649, 749, 757, 765], "readonly": [591, 598, 642, 678, 715, 726, 746, 765, 768, 790], "readtscp": 791, "readwrit": 591, "ready": [610, 640, 661, 664, 665, 670, 699, 707, 714, 717, 720, 724, 727, 728, 765, 788, 809, 810, 811, 812, 813, 814, 815, 816, 818], "readyset": 640, "real": [585, 586, 587, 591, 594, 596, 612, 632, 640, 642, 643, 654, 661, 675, 688, 715, 717, 729, 732, 736, 743, 749, 760, 765, 777, 786, 808, 813, 818], "realign": 689, "realignment": [591, 715], "realistic": [680, 766, 809], "reality": 586, "realiz": [670, 674, 813], "realloc": [594, 700, 749, 761], "reallocated": 594, "really": [591, 593, 595, 606, 611, 661, 662, 670, 674, 676, 681, 683, 685, 688, 701, 715, 717, 722, 726, 741, 743, 746, 747, 749, 765, 767, 780, 781, 808, 810, 811, 812, 813, 814, 816, 817], "reallyhidden": 661, "realmag": 813, "realpred": 715, "realstart": 813, "ream": 753, "reamesconcern": 753, "reapplied": 610, "reapply": 670, "reapplying": 670, "rearranging": 716, "reason": [585, 586, 591, 592, 594, 595, 600, 601, 604, 606, 607, 608, 610, 611, 612, 661, 665, 668, 670, 673, 674, 677, 680, 681, 691, 694, 698, 700, 701, 703, 706, 708, 714, 715, 717, 719, 722, 725, 726, 727, 731, 735, 738, 749, 752, 759, 760, 761, 762, 764, 765, 766, 767, 770, 772, 774, 776, 781, 782, 787, 788, 794, 796, 809, 810, 811, 812, 814, 816], "reasonably": [610, 670, 683, 701, 749, 763, 766, 771], "reasoning": [595, 611, 670, 678, 693, 770], "reassoc": 715, "reassoci": [715, 716, 811], "reassociat": [811, 812, 813, 814], "reassociating": 715, "reassur": 717, "rebas": [643, 683, 728, 747, 751], "rebasing": [643, 747], "rebuild": [593, 606, 615, 704, 728, 768, 790], "rec": [775, 776], "rec1": 776, "rec2": 776, "rec20": 776, "recalculating": 730, "recall": [727, 775, 776, 792, 810, 811, 812], "recap": 597, "receipt": 760, "receiv": [598, 607, 608, 670, 673, 679, 701, 715, 717, 730, 749, 760, 762, 766, 774, 776, 782, 796], "received": [590, 610, 664, 678, 701, 720, 763], "receiving": 777, "recent": [585, 586, 606, 610, 622, 664, 672, 683, 701, 715, 717, 724, 728, 743, 747, 758, 761, 762, 811], "recently": [585, 586, 606, 610, 668, 670, 673, 680, 683, 715, 747, 758, 766, 792], "recept": 670, "recheck": 746, "rechecked": 727, "recherch": 793, "recip": [703, 705, 751, 755], "recipient": 670, "reciprocal": [640, 715], "reclaim": 716, "reclaimed": [715, 731], "reclist": 776, "recognis": [749, 757], "recogniz": [596, 601, 608, 612, 661, 715, 718, 727, 749, 766, 780, 808, 812, 816], "recognized": [612, 655, 661, 715], "recognizing": [612, 746], "recombin": [683, 794], "recommend": [611, 640, 662, 670, 680, 683, 685, 695, 700, 701, 713, 715, 717, 724, 745, 762, 776, 788, 809, 811, 814, 815], "recommended": [586, 591, 604, 606, 607, 608, 612, 617, 678, 680, 681, 683, 685, 693, 699, 704, 705, 713, 715, 717, 724, 729, 747, 749, 762, 766, 770, 781, 782], "recommitted": 610, "recommitting": 670, "recommonmark": [722, 767], "recompil": [677, 731], "recompiled": [597, 731, 768], "recompiling": [594, 796, 812], "recomput": [585, 586, 594, 749], "recomputed": [726, 749], "recomputing": 788, "reconfigured": 701, "reconstitut": 710, "reconstituted": 715, "reconstituting": 693, "reconstruct": [585, 586, 681, 738, 789, 791], "reconstructed": [622, 645], "reconstructing": 765, "record": [585, 586, 592, 601, 618, 620, 641, 646, 650, 659, 660, 670, 675, 714, 715, 721, 724, 736, 739, 740, 741, 744, 747, 755, 759, 760, 762, 765, 768, 770, 777, 785, 790, 810, 811, 812, 813, 814, 815, 816, 817], "record_kind": 791, "record_meta_container_info": 759, "record_meta_external_fil": 759, "record_meta_remark_vers": 759, "record_meta_strtab": 759, "record_remark_arg_with_debugloc": 759, "record_remark_arg_without_debugloc": 759, "record_remark_debug_loc": 759, "record_remark_head": 759, "record_remark_hotness": 759, "recordbody": 776, "recordcallsit": 714, "recorded": [585, 586, 591, 618, 700, 715, 765, 768, 770, 791], "recordfield": 775, "recordhead": 735, "recordid": 598, "recording": [765, 789], "recordkind": 735, "recordlen": 735, "recordmap": 775, "recouped": 598, "recov": [612, 673, 700, 701, 715, 765, 768], "recover": [585, 586, 611], "recovered": 765, "recovering": [677, 715], "recovery": [749, 809, 810, 811, 812, 813, 814, 815, 816], "recreat": 792, "recreated": 715, "recurrent": [669, 746, 755], "recurring": 708, "recurs": [591, 631, 633, 645, 660, 700, 715, 728, 746, 749, 765, 766, 770, 774, 808, 809, 810, 813, 814, 818], "recursing": 645, "recursive_funct": 728, "recursiveexpansionlim": 617, "recursively": [591, 611, 612, 617, 633, 667, 680, 809, 810, 812], "recval": 775, "recycl": [608, 761], "recycled": 761, "recycling": 789, "red": [715, 728, 747, 766], "redefin": [642, 810, 813], "redefined": 810, "redefining": 814, "redefinit": [662, 794, 810, 814], "redesign": 682, "redhat": [745, 762], "redirect": [613, 631, 632, 700, 715, 781, 783, 816], "redirected": [717, 781], "redirecting": 816, "rediscov": 817, "redistribu": 670, "redistribut": 670, "redo": 727, "reduc": [585, 591, 596, 602, 603, 604, 605, 606, 607, 608, 611, 613, 633, 661, 662, 666, 670, 672, 681, 683, 689, 701, 709, 712, 716, 717, 727, 731, 749, 756, 758, 761, 766, 776, 777, 781, 788, 797, 811, 816, 818], "reduce_input": 717, "reduced": [602, 613, 670, 709, 715, 757, 761, 794], "reducibl": [667, 719], "reducing": [603, 606, 665, 670, 693, 729, 746, 751, 755, 758, 789], "reduct": [591, 602, 611, 616, 620], "redund": [615, 661, 678, 688, 690, 710, 714, 715, 719, 732, 733, 749, 751, 757, 765, 770, 796, 811], "redundanc": 608, "redundancy": [662, 716, 749], "redwin": 608, "redwood": 591, "reentry": 731, "reexamin": 610, "reexport": 797, "reexported": 731, "reexportedflag": 731, "reexportflag": 731, "ref": [585, 586, 590, 591, 594, 607, 608, 611, 617, 640, 663, 665, 666, 673, 702, 707, 717, 725, 726, 729, 731, 734, 735, 736, 739, 743, 744, 749, 751, 753, 757, 758, 759, 765, 768, 770, 772, 775, 776, 779, 781, 786, 809, 810, 811, 812, 813, 814, 815, 816], "refactor": [714, 753], "refactored": [714, 757], "refactoring": [610, 611, 670, 716, 751, 753, 814], "refcount": 680, "refer": [585, 586, 590, 593, 597, 607, 665, 707, 715, 716, 731, 733, 736, 740, 749, 755, 765, 770, 775, 776, 786, 814, 815, 816], "referenced": [585, 586, 590, 591, 598, 655, 661, 662, 699, 714, 715, 716, 718, 721, 727, 731, 734, 736, 743, 749, 759, 765, 776, 783, 786, 795, 810, 811, 812, 813, 814, 815, 816], "referencing": [586, 715, 727, 749, 794, 809, 810, 811, 812, 813, 814, 815, 816], "referent": [585, 587, 588, 590, 591, 594, 598, 599, 601, 602, 606, 607, 608, 610, 611, 612, 613, 620, 642, 643, 654, 660, 663, 664, 665, 666, 670, 673, 675, 676, 681, 690, 692, 694, 700, 703, 708, 710, 711, 714, 716, 720, 723, 726, 727, 729, 731, 734, 735, 736, 743, 744, 747, 759, 765, 775, 777, 779, 781, 782, 784, 786, 788, 791, 792, 793, 794, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816], "referential": 746, "referred": [24, 127, 217, 375, 487, 585, 586, 607, 669, 673, 675, 680, 715, 716, 721, 726, 731, 739, 740, 743, 749, 751, 755, 765, 768, 770, 771, 774, 775, 781], "referring": [665, 675, 680, 715, 731, 749, 765, 766, 788], "refill": 727, "refin": [594, 715, 749, 753, 794], "refined": [608, 749, 763], "reflect": [585, 586, 590, 591, 594, 666, 670, 698, 707, 715, 718, 731, 753, 765, 772, 786, 788, 813], "reflected": [670, 765], "reflexivity": 727, "reflog": 751, "reflogexpir": 751, "reflogexpireunreach": 751, "refnam": 751, "reformat": [723, 753], "reformatting": [611, 753], "reformulated": 594, "refrain": [707, 715, 760], "refresh": 718, "refreshed": 690, "refs_to_clean": 751, "refspec": 751, "refus": [606, 623, 630, 633, 637, 659, 746, 766], "reg": [20, 123, 212, 370, 482, 585, 586, 591, 608, 612, 632, 643, 721, 723, 729, 749, 768, 776, 786], "reg1": [612, 715], "reg1024": 608, "reg1025": 608, "reg1026": 608, "reg1027": 608, "reg2": [612, 715], "reg_bas": 612, "reg_nam": 632, "reg_offset": 612, "reg_sequent": [688, 721], "regalloc": [608, 618, 620, 788], "regalloclinearscan": 608, "regallocregistry": 788, "regard": [586, 595, 611, 676, 715, 732, 761], "regarded": [611, 646, 713], "regarding": [585, 586, 622, 639, 682, 707, 759, 774], "regardless": [585, 586, 591, 594, 606, 611, 623, 630, 633, 637, 640, 653, 659, 667, 680, 685, 715, 728, 731, 745, 746, 765, 766, 772, 779, 795, 814], "regbankselect": 698, "regbankselected": [694, 721], "regconstraint": 608, "regcost": 775, "regenerat": 709, "regex": [626, 631, 642, 654, 660, 661, 759, 780, 781], "regex_replac": 617, "regexp": 617, "region": [585, 586, 590, 591, 598, 626, 640, 665, 667, 673, 715, 716, 719, 724, 751, 755, 757, 761, 766, 768, 776, 783], "region0": 666, "region1": 666, "regioninfo": [746, 755], "regionsforfile0": 666, "regionsforfile1": 666, "regionvectoriz": 754, "regist": [20, 55, 84, 85, 117, 123, 145, 175, 176, 205, 212, 270, 271, 310, 352, 370, 404, 435, 436, 482, 517, 548, 549, 580, 588, 589, 590, 594, 595, 597, 605, 612, 613, 618, 620, 632, 640, 643, 659, 660, 665, 670, 673, 676, 680, 683, 685, 689, 690, 691, 692, 693, 694, 695, 696, 710, 714, 715, 723, 728, 729, 730, 733, 747, 749, 755, 766, 768, 770, 774, 776, 777, 785, 787, 788, 789, 810, 813, 814, 815, 816], "register": [98, 112, 114, 288, 306, 308, 449, 470, 562, 576, 578, 587, 590, 591, 597, 612, 632, 640, 643, 660, 673, 680, 689, 690, 693, 694, 696, 698, 715, 723, 746, 749, 765, 768, 770, 774, 776, 786, 788, 814, 816], "registeralias": 774, "registeranalysisgroup": 594, "registerasmprint": 786, "registerasmstream": 608, "registerbankinfo": [688, 695], "registercgsccanalys": 730, "registerclass": [608, 774, 777, 786], "registerdescriptor": 786, "registered": [592, 661, 747, 788, 789, 792, 810], "registeredarg": 680, "registerehfram": 720, "registerehframesect": 714, "registerfunctionanalys": 730, "registerinfo": [608, 721, 776, 786], "registering": [668, 701, 714, 720, 731, 786], "registerlist": 786, "registerloopanalys": 730, "registermcobjectstream": 608, "registermoduleanalys": 730, "registermyp": 788, "registerouteranalysisinvalid": 730, "registerpass": [730, 788], "registerpassbuildercallback": [730, 788], "registerpasspars": 788, "registerpipelinestartepcallback": 730, "registerregalloc": 788, "registerschedul": 788, "registerstandardp": 788, "registertarget": 786, "registerwithsubreg": 786, "registr": [123, 663, 668, 676, 680, 714, 731, 794], "registry": [680, 761, 788, 815], "reglist": 786, "regmapping_f": 608, "regmask": 721, "regno": 608, "regnum": 768, "regoffset": 723, "regress": [602, 612, 668, 670, 683, 685, 686, 694, 717, 750, 751, 758, 766, 787], "regressed": 617, "regstat": [608, 721], "regsvr32": 685, "regtyp": 786, "regular": [586, 589, 591, 595, 603, 611, 612, 617, 622, 626, 631, 633, 635, 638, 641, 642, 645, 654, 660, 661, 662, 683, 714, 715, 717, 721, 727, 731, 751, 754, 759, 772, 776, 780, 781, 792, 817], "regularly": 772, "regulating": 788, "regval": 585, "regx": 585, "reid": 771, "reilly": 749, "reinterpret": [597, 689], "reinterpreting": 693, "reintroduc": 766, "reject": [598, 612, 661, 683, 691, 707, 715], "rejected": [612, 671], "rejecting": 817, "rejoin": 719, "rel": [591, 595, 597, 604, 608, 653, 665, 670, 726, 751, 758, 766, 789, 814], "rel32": 591, "rel_path_to_fil": 626, "relat": [24, 127, 217, 375, 487, 585, 590, 591, 594, 598, 599, 605, 606, 608, 611, 612, 617, 624, 626, 643, 645, 646, 649, 650, 655, 665, 666, 669, 675, 680, 681, 712, 714, 719, 723, 726, 727, 749, 750, 751, 753, 755, 761, 764, 768, 770, 781, 793], "related": [585, 586, 591, 594, 595, 601, 607, 608, 610, 611, 614, 617, 619, 640, 642, 654, 656, 658, 660, 664, 665, 670, 673, 675, 682, 683, 687, 688, 703, 709, 712, 715, 717, 724, 726, 728, 729, 732, 736, 746, 747, 749, 751, 754, 756, 758, 762, 765, 768, 772, 774, 781, 786, 788, 810, 812], "relational": [792, 813], "relationship": [591, 612, 631, 669, 673, 680, 710, 712, 714, 715, 727, 765, 771, 786, 788, 789], "relative_function_pointer_to_async_impl": 665, "relatively": [599, 611, 617, 646, 661, 678, 682, 683, 714, 715, 717, 726, 749, 755, 765, 766, 770, 795, 812, 816], "relativenam": 655, "relax": [595, 640, 675, 714, 715], "relaxed": [640, 688, 689, 694, 715, 770], "relaxgotedg": 714, "relay": 715, "relbf": 715, "releas": [591, 604, 606, 608, 611, 625, 626, 665, 668, 670, 671, 672, 673, 678, 682, 683, 685, 699, 701, 702, 704, 705, 711, 717, 728, 731, 745, 749, 750, 751, 759, 761, 762, 763, 765, 768, 772, 781, 786, 788, 790, 810], "release_39": 753, "release_fil": 707, "release_tester": 707, "release_to_os_interval_m": 761, "released": [591, 611, 670, 707, 715, 718, 731, 761, 772], "releasei": 758, "releasing": [707, 758], "relev": [585, 586, 594, 595, 608, 610, 612, 649, 650, 662, 665, 670, 678, 701, 702, 704, 706, 707, 708, 712, 714, 715, 719, 728, 730, 732, 744, 745, 747, 749, 751, 755, 760, 762, 770, 789, 812], "reliability": 765, "reliabl": 662, "reliably": [606, 617, 677, 694, 701, 755, 779], "relicens": 670, "relied": [591, 715], "religion": 609, "relink": 602, "relinked": 625, "reload": [690, 717, 766, 814, 815, 816], "reloaded": [608, 665, 680, 716], "reloading": 766, "reloc": [585, 586, 590, 608, 620, 642, 643, 644, 649, 650, 654, 680, 706, 709, 714, 715, 720, 721, 757, 786, 815], "reloc_absolute_dword": 786, "reloc_absolute_word": 786, "reloc_pcrel_word": 786, "reloc_picrel_word": 786, "relocat": [24, 127, 217, 375, 487, 585, 586, 591, 620, 642, 714, 720, 731, 770, 786], "relocated": [585, 586, 591, 655, 714, 715, 736, 770, 786], "relocationtyp": 786, "reloccrc": 736, "relpos": 622, "relr": [649, 650], "relwithdebinfo": [604, 606, 683, 685, 704, 728], "rely": [585, 586, 597, 599, 607, 608, 611, 665, 670, 678, 680, 681, 693, 703, 714, 715, 717, 731, 741, 751, 765, 770, 781, 785, 787, 795], "relying": [718, 732, 766, 781], "rem": [608, 689], "remain": [586, 595, 606, 611, 612, 669, 670, 671, 673, 680, 693, 694, 701, 710, 714, 715, 719, 730, 732, 733, 749, 755, 760, 761, 762, 765, 766, 770, 772, 776, 781, 794, 814], "remaind": [586, 590, 608, 612, 665, 666, 674, 683, 689, 715, 746, 753, 766, 775, 776, 781, 782, 785, 786], "remaining": [585, 586, 591, 600, 617, 640, 665, 666, 670, 675, 707, 715, 721, 741, 746, 749, 765, 768, 791, 813], "remainingbuffersizetoskip": 791, "remap": [615, 696, 720], "remapped": [608, 615, 628], "remapping": [608, 616, 646], "remark": [615, 618, 753, 784, 785], "remarkably": 602, "remarkemitt": 753, "remarkstream": 759, "rematerializ": [725, 746], "rematerializing": 595, "rememb": [601, 609, 610, 611, 661, 664, 670, 676, 681, 685, 702, 706, 715, 717, 749, 770, 780, 788, 809, 812, 814, 815, 816], "remember": [809, 812], "remembered": 611, "remembering": [661, 812], "remind": [707, 724, 751], "reminding": 670, "remot": [591, 720, 731, 751, 794, 797], "remoteobjectclientlai": 731, "remoteobjectserverlai": 731, "remov": [585, 586, 594, 602, 603, 604, 608, 611, 626, 633, 642, 654, 661, 665, 670, 673, 676, 678, 683, 703, 711, 714, 715, 716, 717, 718, 719, 721, 727, 729, 730, 732, 733, 747, 749, 751, 753, 762, 770, 771, 772, 781, 782, 783, 786, 788, 810, 811, 812, 813, 814, 815, 816, 817], "removal": [670, 714, 731, 732, 749, 757, 762], "remove_": 749, "removeabsolutesymbol": 714, "removeblock": 714, "removebranch": 786, "removed": [585, 586, 598, 604, 606, 608, 611, 612, 615, 617, 622, 626, 630, 640, 670, 672, 673, 688, 690, 693, 701, 703, 707, 711, 714, 715, 718, 719, 721, 726, 727, 730, 731, 732, 745, 746, 749, 757, 765, 770, 772, 796, 811], "removedefinedsymbol": 714, "removeexternalsymbol": 714, "removefromparent": 749, "removejitdylib": 731, "removemodul": [731, 796, 811], "removeobject": 731, "removeredundantdebugvalu": 765, "removing": [585, 586, 601, 602, 603, 612, 618, 622, 642, 654, 708, 714, 715, 718, 746, 749, 770, 782, 783, 788], "renam": [585, 586, 602, 603, 611, 642, 683, 688, 721, 751, 753, 757, 758, 797], "renamed": [715, 731, 751, 753, 765, 773, 814], "renaming": [640, 715, 749, 753], "rend": [585, 586, 591], "render": [608, 691, 813], "rendered": [608, 715, 749], "rendering": 790, "renseign": 123, "reopen": [601, 685], "reord": [595, 640, 715, 765], "reordered": [591, 595, 612, 689, 715], "reordering": [591, 595, 640, 669, 710, 715, 757, 765], "reorganiz": [755, 776, 792], "repack": 751, "repeat": [602, 612, 723, 727, 747, 751, 753, 758, 765], "repeated": [591, 640, 673, 675, 694, 705, 776], "repeatedly": [591, 677, 715], "repeating": [632, 694, 715, 746], "repetit": [608, 612, 632, 772], "rephrased": [681, 715], "repl": [671, 728, 731, 776, 794, 795, 811], "replac": [585, 586, 589, 591, 595, 608, 617, 622, 626, 627, 634, 636, 638, 642, 645, 648, 651, 653, 654, 655, 661, 662, 665, 670, 673, 678, 680, 683, 688, 689, 694, 696, 699, 700, 710, 715, 716, 717, 718, 719, 726, 727, 728, 729, 731, 732, 733, 748, 749, 751, 756, 759, 765, 766, 770, 772, 776, 781, 782, 783, 786, 795, 796, 797, 811, 814], "replace": 715, "replacealldbguseswith": 710, "replaceallus": 693, "replacealluseswith": [710, 716, 719, 727, 749], "replaced": [585, 586, 591, 617, 626, 638, 641, 643, 665, 670, 673, 678, 680, 691, 694, 710, 715, 721, 727, 746, 749, 755, 765, 771, 776, 781], "replaceinstwithinst": 749, "replaceinstwithvalu": 749, "replacementtest": 728, "replaceoperandwith": 782, "replaceusesofwith": [716, 749], "replaceusesofwithonconst": 716, "replacing": [585, 603, 606, 689, 691, 693, 694, 715, 719, 751, 755, 770, 781, 794], "replay": [591, 709], "replicat": [709, 718, 733, 755], "replicated": [585, 586, 755, 792], "reply": [670, 707, 728, 753], "replying": 671, "repo": [670, 672, 683, 707, 744, 751, 788], "report": [585, 586, 591, 596, 602, 606, 609, 612, 617, 618, 624, 634, 636, 638, 640, 642, 643, 644, 651, 653, 654, 655, 657, 660, 666, 679, 682, 699, 700, 704, 707, 710, 714, 715, 716, 717, 718, 719, 747, 749, 751, 758, 761, 768, 769, 775, 780, 781, 788, 793, 810], "report_fatal_error": [611, 749], "reported": [585, 591, 594, 601, 617, 670, 679, 680, 682, 707, 710, 714, 715, 717, 747, 762, 765, 766, 770, 776, 780, 782], "reporter": [601, 682, 762], "reporterror": [794, 795, 796, 797], "reporting": [591, 602, 609, 640, 657, 687, 700, 710, 715, 731, 749, 762, 765, 775, 781, 782, 794], "repos": 707, "repositor": [670, 672, 682, 772, 781], "repository": [610, 670, 672, 673, 682, 683, 686, 687, 706, 707, 709, 728, 747, 752, 753, 762, 765, 772, 781], "represent": [589, 591, 597, 598, 599, 600, 605, 607, 608, 611, 640, 641, 642, 645, 646, 660, 661, 664, 669, 673, 674, 677, 678, 680, 681, 683, 688, 689, 690, 693, 694, 698, 704, 711, 714, 716, 719, 721, 723, 726, 728, 729, 732, 736, 738, 743, 744, 746, 749, 751, 753, 755, 756, 757, 762, 765, 766, 768, 774, 775, 776, 777, 779, 783, 784, 786, 788, 789, 790, 791, 792, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817], "represented": [585, 586, 591, 594, 595, 597, 598, 600, 607, 640, 661, 665, 669, 673, 674, 675, 676, 688, 711, 714, 715, 719, 721, 726, 729, 732, 735, 743, 746, 748, 749, 751, 755, 765, 770, 774, 775, 776, 783, 792, 810], "representing": [24, 127, 217, 375, 487, 585, 586, 590, 594, 598, 612, 617, 631, 640, 642, 665, 669, 673, 676, 678, 680, 688, 689, 711, 714, 715, 736, 740, 743, 746, 749, 755, 759, 765, 766, 770, 774, 775, 776, 786], "reprimand": 760, "repro": 686, "reproduc": [601, 602, 611, 615, 664, 670, 686, 709, 717, 726, 781, 814], "reproduced": [601, 707, 726], "reproducibl": [601, 670, 672], "reproducing": [602, 733], "repros": 709, "repurpos": 765, "reqd_work_group_siz": 591, "reqd_workgroup_siz": 591, "reqdworkgroupsiz": 591, "request": [30, 223, 380, 493, 591, 601, 622, 664, 670, 673, 683, 687, 693, 701, 714, 716, 717, 718, 726, 730, 731, 747, 751, 753, 760, 762, 770, 772, 776, 782, 791, 794, 796], "requested": [585, 586, 591, 598, 610, 612, 640, 642, 654, 672, 675, 689, 714, 715, 717, 720, 730, 731, 749, 753, 759, 761, 768, 795, 815], "requesting": [664, 670, 707, 715, 762, 768], "requir": [84, 585, 586, 590, 591, 593, 594, 595, 597, 598, 602, 604, 605, 606, 607, 608, 610, 611, 612, 617, 622, 626, 632, 638, 639, 640, 643, 661, 665, 666, 667, 673, 674, 676, 677, 678, 681, 686, 687, 688, 692, 693, 694, 698, 699, 700, 701, 702, 704, 706, 707, 708, 713, 714, 715, 717, 718, 719, 720, 726, 730, 731, 732, 733, 738, 746, 749, 750, 751, 753, 757, 758, 760, 761, 762, 765, 766, 768, 770, 771, 774, 775, 776, 779, 782, 786, 792, 794, 808, 810, 811, 812, 814, 815, 816, 817, 818], "required": [585, 586, 588, 589, 590, 591, 593, 595, 596, 597, 598, 606, 607, 611, 612, 617, 628, 634, 642, 643, 647, 653, 654, 663, 665, 666, 670, 673, 674, 676, 677, 678, 679, 680, 683, 685, 688, 689, 694, 703, 706, 707, 712, 713, 714, 715, 718, 719, 720, 721, 727, 729, 731, 733, 740, 746, 749, 751, 759, 765, 766, 768, 770, 774, 775, 776, 779, 781, 782, 786, 791, 792, 794, 809, 812, 813, 814, 815, 816], "requires_rtt": 745, "requiring": [585, 586, 602, 632, 661, 670, 680, 681, 714, 715, 717, 731, 738, 747, 753, 766, 788], "rerereresolved": 751, "rerereunresolved": 751, "rerun": [683, 747], "resbyarg": 715, "rescanned": 727, "reschedul": 765, "research": [601, 674, 752, 762, 766, 780, 793], "researcher": [762, 766], "resembl": [681, 766], "resembling": 766, "reserv": [591, 596, 608, 766, 768], "reserved": [586, 591, 598, 608, 677, 714, 715, 717, 735, 736, 743, 761, 768, 770, 776, 781, 786, 791], "reserved_464": 591, "reserved_468": 591, "reserveresourc": 608, "reserving": [714, 768], "reset": [591, 598, 606, 673, 686, 717, 749, 766, 776], "resetting": [725, 791], "resid": [585, 586, 591, 597, 598, 605, 665, 680, 715, 717, 729, 731, 740, 761, 765, 766], "resident": [589, 788], "residing": [766, 772], "resign": 670, "resigned": 748, "resilient": [640, 724, 772], "resist": 717, "resolu": [596, 611, 662, 670, 694, 714, 715, 731, 760, 762, 811, 813], "resolv": [585, 586, 591, 606, 608, 609, 617, 668, 703, 714, 715, 718, 769, 772, 776, 788, 795, 796, 810, 811], "resolved": [24, 127, 217, 375, 487, 590, 601, 607, 610, 632, 670, 714, 715, 720, 731, 749, 760, 762, 766, 776, 791, 811, 812], "resolver": 731, "resolvereloc": 720, "resolverty": 715, "resolving": [604, 662, 670, 753, 762], "resort": 701, "resorting": 673, "resourc": [34, 66, 67, 96, 97, 132, 157, 158, 175, 186, 187, 225, 254, 255, 270, 286, 287, 349, 384, 418, 419, 435, 447, 448, 497, 530, 531, 548, 560, 561, 589, 606, 607, 632, 640, 650, 661, 672, 673, 698, 701, 714, 731, 749, 786, 788], "resourcekey": 714, "resourcetrack": [811, 812, 813, 814], "resourcetrackersp": [731, 794, 795, 796, 797], "resp": [632, 715, 749], "respect": [585, 586, 591, 606, 631, 662, 670, 680, 689, 703, 708, 715, 716, 719, 731, 751, 762, 770, 779, 781, 814], "respected": [670, 681, 715, 749], "respectful": 609, "respecting": [751, 759], "respectively": [585, 586, 591, 594, 602, 606, 608, 611, 613, 628, 640, 646, 650, 651, 653, 655, 662, 665, 667, 673, 680, 681, 683, 689, 715, 721, 723, 731, 748, 749, 750, 751, 761, 770, 777, 781, 783, 786, 794, 796], "respond": [594, 610, 670, 724, 746, 747, 760], "responding": [594, 664, 670, 762], "respons": [622, 627, 641, 642, 643, 644, 649, 650, 651, 653, 654, 655, 657, 670, 701, 715, 728, 760, 762, 768], "responsibilit": [728, 772, 788], "responsibility": [610, 670, 701, 707, 715, 746, 747, 770, 772], "responsibl": [591, 608, 610, 640, 665, 670, 673, 680, 691, 701, 714, 715, 731, 741, 746, 747, 749, 755, 759, 762, 764, 772, 774, 782, 783, 792, 794], "responsibly": 680, "rest": [213, 371, 483, 585, 586, 591, 598, 608, 612, 633, 665, 670, 680, 683, 688, 693, 698, 700, 701, 703, 715, 717, 718, 721, 722, 727, 728, 740, 747, 749, 759, 765, 767, 771, 776, 789, 811, 814], "restart": [595, 693, 701, 717, 749, 788], "restarting": 788, "restating": 611, "restofthecleanup": 665, "restor": [585, 586, 591, 608, 665, 673, 713, 715, 764, 766, 786, 812, 813, 814, 815, 816], "restored": [591, 598, 608, 673, 713], "restoring": [586, 713, 786], "restrict": [585, 586, 591, 595, 606, 611, 640, 661, 670, 674, 675, 676, 681, 688, 689, 701, 713, 714, 715, 721, 726, 735, 749, 751, 765, 766, 768, 770, 785, 788], "restricted": [585, 586, 591, 608, 670, 714, 715, 762, 766, 770, 772, 776], "restricting": [585, 586, 653, 811], "restructuredtext": 767, "restructuring": 782, "result": [585, 589, 590, 591, 595, 597, 598, 602, 604, 605, 606, 607, 608, 611, 612, 613, 615, 620, 623, 626, 631, 632, 640, 645, 646, 655, 659, 661, 662, 665, 666, 668, 670, 673, 674, 676, 678, 680, 681, 682, 683, 685, 686, 687, 688, 689, 693, 694, 700, 704, 707, 710, 711, 714, 717, 719, 720, 726, 727, 728, 729, 730, 731, 732, 733, 734, 740, 741, 746, 749, 751, 753, 754, 758, 759, 765, 766, 770, 771, 772, 776, 777, 780, 781, 782, 785, 786, 787, 788, 789, 790, 792, 794, 809, 810, 811, 812, 813, 814, 815, 816], "result_typ": 715, "resulted": [585, 602, 715, 719], "resulting": [585, 586, 602, 604, 608, 645, 646, 661, 665, 669, 672, 675, 678, 693, 699, 705, 709, 712, 715, 719, 721, 729, 731, 746, 749, 751, 766, 768, 770, 774, 776, 786, 789, 796], "results_": 779, "results_b": 779, "resultty": 715, "resulttyp": 715, "resultval": 715, "resum": [591, 668, 673, 717, 768], "resume1": 665, "resume2": 665, "resume_func_ptr": 665, "resumed": 665, "resuming": [665, 668], "resumpt": 665, "ret": [595, 597, 600, 608, 612, 665, 673, 676, 680, 681, 710, 719, 721, 722, 726, 729, 732, 746, 749, 764, 765, 766, 767, 768, 770, 776, 781, 783, 787, 810, 811, 812, 814], "ret_typ": 715, "retain": [585, 586, 591, 597, 670, 676, 749, 788], "retained": [661, 715, 716, 776], "retainednod": [710, 715, 765], "retainedtyp": [715, 765], "retaining": [585, 586, 749], "retarget": 608, "retargetting": 784, "retcc_sparc32": 786, "retcc_x86_32": 786, "retcc_x86_32_c": 786, "retcc_x86_32_fast": 786, "retcc_x86_32_ss": 786, "retcc_x86common": 786, "rethrow": [673, 770], "retired": [640, 670], "retireooo": 640, "retiring": 640, "retpolin": 766, "retq": [721, 766, 770], "retriev": [585, 586, 622, 660, 661, 673, 715, 720, 726, 729, 747, 749, 759, 774, 788, 792], "retrieval": [749, 768], "retrieved": [585, 586, 720, 776], "retrieving": [585, 586, 675, 776], "retroactively": 670, "retry": 789, "retrying": 772, "retty": 598, "return": [585, 586, 589, 591, 592, 594, 595, 597, 598, 600, 602, 603, 608, 610, 612, 615, 620, 626, 627, 631, 632, 639, 640, 645, 646, 649, 650, 652, 655, 657, 660, 661, 662, 665, 666, 668, 670, 673, 674, 676, 678, 680, 683, 689, 690, 691, 693, 695, 700, 708, 711, 712, 713, 714, 715, 717, 718, 719, 720, 722, 723, 726, 727, 728, 729, 730, 731, 733, 746, 748, 749, 757, 761, 764, 765, 767, 768, 769, 770, 771, 774, 775, 776, 783, 785, 786, 787, 788, 789, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "return_addr": 766, "return_address_regist": [585, 586, 591], "returnaddress": 721, "returndoesnotali": 715, "returned": [110, 111, 199, 200, 304, 305, 355, 467, 468, 574, 575, 585, 586, 591, 594, 598, 615, 627, 668, 673, 689, 714, 715, 720, 725, 727, 730, 746, 748, 749, 761, 774, 775, 786, 788, 792, 808, 809, 811, 812], "returnindex": 711, "returning": [585, 586, 594, 611, 665, 673, 708, 714, 715, 746, 764, 766, 774, 775, 788, 809, 811, 812, 813, 814, 815, 816], "returns_signed_char": 715, "returns_twic": [598, 715], "returntyp": [680, 715], "retval": [673, 715, 810, 811, 812, 813, 814, 815, 816], "reus": [607, 669, 698, 730, 751, 761, 765, 766, 767, 768, 776, 787], "reusabl": [608, 698], "reused": [591, 612, 669, 700, 715, 753], "reusing": [608, 751, 777], "rev": [597, 751, 753], "rev128": 597, "rev64": 597, "reveal": [681, 766], "revectored": [746, 749], "revers": [589, 597, 606, 612, 641, 681, 689, 716, 746, 749, 766], "reversed": [597, 715, 765, 776], "reversibl": 766, "reversing": 766, "revert": [585, 586, 610, 670, 683, 715], "revert_policy": 670, "reverted": [610, 670, 683, 772], "reverting": [610, 670, 772], "review": [605, 611, 664, 678, 682, 683, 685, 701, 703, 707, 716, 717, 722, 727, 751, 753, 754, 755, 760, 762, 767, 770, 771, 772, 776], "reviewed": [664, 670, 683, 728, 747, 762], "reviewer": [610, 664, 670, 707, 728], "reviewinfr": 671, "reviewing": [610, 664, 670, 762], "revis": [279, 280, 291, 294, 295, 296, 601, 606, 610, 611, 670, 672, 678, 683, 686, 707, 715, 747, 749, 766, 768, 770, 772], "revised": 765, "revisit": 611, "revisited": 755, "revlist": 751, "revmap": 751, "revoc": 762, "revoked": [670, 762], "revolv": 765, "rewording": 612, "rework": 670, "reworking": 661, "rewound": 673, "rewrit": [606, 670, 708, 710, 714, 746, 751, 770, 786, 814], "rewriter": 660, "rewritestatepointsforgc": [680, 715], "rewriting": [640, 715, 716, 751, 765, 766, 770], "rewritten": [608, 665, 749, 751], "rex": 715, "rf": [722, 767, 781, 786], "rfc": [670, 687, 716, 754, 762, 772], "rfunc": 633, "rg": 747, "rgb": 752, "rgba": 589, "rglob": 633, "rgm": 788, "rh": [611, 715, 727, 749, 774, 809, 810, 811, 812, 813, 814, 815, 816], "ri": [680, 715, 776, 786], "ri_inst": 776, "ric": 669, "ricc": 753, "ricciacronym": 753, "rich": [585, 688, 756, 768], "richness": 723, "rid": [727, 736], "right": [585, 586, 589, 590, 591, 595, 597, 607, 608, 611, 613, 632, 661, 664, 669, 670, 671, 674, 676, 678, 683, 689, 700, 708, 709, 715, 719, 721, 727, 728, 741, 746, 747, 751, 758, 766, 767, 774, 776, 781, 791, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "right_op": 715, "rightr": 727, "rigorous": [608, 772], "riinst": 776, "riley": 762, "ring": 591, "rip": [643, 715, 721, 777, 781], "ris": [611, 667], "risc": [595, 608, 643, 660, 682, 715, 753, 754, 786], "riscv": [660, 671, 683], "riscv_vector": 660, "riscv_vector_builtin": 660, "riscv_vector_builtin_cg": 660, "riscvcodegen": 671, "riscvsextwremoval": 757, "risk": [701, 702, 715, 765, 766], "risking": 749, "risky": 766, "rival": 749, "rk": 775, "rl": [585, 586, 729], "rl1": 729, "rl2": 729, "rl247405": 717, "rl247414": 717, "rl247416": 717, "rl247417": 717, "rl247420": 717, "rl247422": 717, "rl3": 729, "rl317337": 761, "rl4": 729, "rl5": 729, "rl6": 729, "rl7": 729, "rm": [683, 715, 717, 722, 767, 776, 777, 781, 786, 790, 815], "rmrk": 759, "rmw": 595, "rn": [675, 729], "rnglist": 631, "ro_signed_pat": 777, "roadmap": [682, 772], "rob": [640, 662], "robert": 662, "robin": 640, "robinson": [753, 762], "robinsonagre": 753, "robinsondistinguish": 753, "robinsondistinguish2": 753, "robinsontransit": 753, "robot": 682, "robust": [662, 698, 710, 715, 723, 781], "robustness": 610, "rocgdb": 586, "rocm": [586, 591], "rodat": [591, 766, 786], "rogu": 766, "rol": [585, 611, 645, 715, 719, 727, 749, 758, 765, 809], "rolled": [611, 708], "rolling": 724, "rom": 642, "roms_": 752, "roms_r": 752, "room": [701, 711, 788, 809], "root": [606, 608, 617, 625, 670, 672, 683, 700, 701, 706, 714, 715, 716, 719, 740, 749, 750, 751, 753, 761, 774, 781, 788, 790, 810], "rootcount": 680, "rooted": 719, "rootmetadat": 680, "rootnum": 680, "roots_begin": 680, "roots_end": 680, "roots_iterator": 680, "roots_siz": 680, "rootstackoffset": 680, "rop": [749, 757], "rot": [670, 772], "rotat": [585, 586, 589, 608, 674, 689, 715, 719], "rotated": 746, "rotl": 674, "rough": [681, 701], "roughly": [595, 608, 662, 673, 707, 708, 716, 717, 753, 765], "roun": 662, "round": [591, 597, 608, 640, 670, 700, 707, 728, 766, 792, 813], "round_m": 689, "rounded": [585, 586, 591, 662, 689, 715], "rounded_32": 689, "rounded_64": 689, "rounding": 689, "roundp": 785, "roundtointegraltiestoeven": 715, "roundup": 591, "routin": [585, 586, 595, 608, 617, 673, 680, 715, 727, 746, 757, 766, 770, 771, 788, 789, 791, 809, 817, 818], "routinely": [670, 701], "rov": 591, "rovid": 700, "row": [589, 640, 712, 715], "row_bcast": [589, 591], "row_half_mirror": 589, "row_mask": [0, 1, 3, 4, 7, 8, 9, 591], "row_mirror": [589, 591], "row_newbcast": 589, "row_ror": 589, "row_shar": 589, "row_shl": [589, 591], "row_shr": 589, "row_xmask": 589, "rowfield": 712, "rpass": 785, "rpath": [616, 643, 683], "rpc": [714, 731, 791], "rpcc": 715, "rpmalloc": 606, "rpo": 716, "rppassmanag": 788, "rr": [776, 786], "rrinst": 776, "rs1": 786, "rs2": 786, "rs4gc": 770, "rs880": 591, "rsb": 766, "rsi": [608, 766, 777], "rsp": [608, 622, 721, 764, 766, 768, 770, 777], "rsrc": [589, 650], "rss": [717, 761], "rss_limit_mb": 717, "rst": [592, 608, 660, 767, 774], "rsync": 779, "rt": [593, 595, 601, 604, 606, 607, 679, 683, 686, 700, 702, 703, 704, 707, 715, 731, 751, 753, 758, 761, 772, 779, 784, 786, 789, 794, 795, 796, 797, 811, 812, 813, 814], "rtc": 782, "rtdyldobjectlinkinglai": [731, 794, 795, 796, 797], "rthroughput": 640, "rtl": 608, "rtld_fin": 668, "rtti": [606, 673, 745, 749, 756, 783, 814, 815, 816], "rttiextend": 708, "rttiroot": 708, "ruby": 680, "rud": 673, "rui": 753, "rul": [588, 591, 595, 608, 609, 611, 612, 615, 623, 628, 640, 645, 660, 662, 670, 688, 690, 701, 706, 713, 714, 727, 731, 749, 750, 753, 758, 759, 761, 765, 766, 770, 771, 772, 776, 777, 780, 781, 788, 791, 810, 811, 812], "ruleset": 693, "run": [585, 586, 591, 593, 594, 595, 596, 597, 602, 603, 606, 607, 608, 612, 613, 615, 625, 626, 632, 640, 646, 659, 660, 661, 662, 663, 664, 665, 668, 672, 673, 676, 677, 678, 679, 680, 682, 683, 685, 687, 694, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 714, 715, 717, 718, 720, 721, 726, 727, 728, 729, 731, 733, 745, 746, 747, 749, 750, 751, 753, 756, 758, 762, 765, 766, 767, 768, 770, 772, 774, 775, 777, 779, 780, 781, 785, 786, 787, 788, 789, 790, 791, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "run_long_test": 781, "runbeforepass": 787, "runfunct": [668, 749], "runfunctionasmain": 668, "runhelp": 611, "runn": 779, "runnabl": 683, "running": [591, 593, 602, 603, 606, 607, 608, 611, 613, 615, 617, 626, 642, 648, 664, 665, 666, 672, 676, 680, 682, 683, 684, 685, 690, 699, 701, 702, 704, 705, 709, 710, 714, 715, 725, 726, 728, 730, 731, 733, 745, 746, 747, 749, 751, 758, 762, 770, 775, 776, 781, 785, 789, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 818], "runonfunct": [594, 602, 733, 749, 786, 790], "runonmachinefunct": [608, 692, 733, 786], "runonmodul": 790, "runtest": [706, 758], "runtim": [585, 591, 593, 595, 598, 600, 602, 604, 606, 608, 611, 612, 626, 640, 643, 655, 661, 662, 663, 668, 670, 671, 677, 680, 683, 703, 705, 716, 717, 719, 731, 741, 746, 749, 751, 761, 764, 765, 768, 770, 771, 779, 782, 786, 788, 790, 792, 795, 796, 811, 813, 817], "runtimedyld": [720, 731], "runtimedyldelf": 720, "runtimedyldimpl": 720, "runtimedyldmacho": 720, "runtimehandl": 591, "runtimesruntim": 671, "runtimevers": [710, 715, 765], "rust": [753, 757, 762], "rv": 727, "rv64": 757, "rv670": 591, "rv710": 591, "rv730": 591, "rv770": 591, "rvaluereferent": 735, "rvaluerefthispoint": 735, "rw": [591, 714, 715], "rwx": 714, "rx": [591, 776], "ryzen": 591, "rzi": 729, "r\u00e9f\u00e9rent": 793, "s0": [590, 591, 715], "s1": [591, 688, 689], "s15": 715, "s16": [688, 689, 693], "s17": 688, "s2": [20, 123, 212, 370, 482, 591], "s3": [590, 591], "s31": 715, "s32": [688, 689, 690, 692, 693, 710, 721, 729], "s33": 689, "s4": [590, 591], "s5": [590, 591], "s6": [590, 591], "s64": [688, 689, 693, 729], "s7": [590, 693], "s7100": 591, "s7150": 591, "s8": [688, 689], "s9": 715, "s9150": 591, "s9170": 591, "s9300x2": 591, "s_": 715, "s_abs_i32": [0, 2, 3, 4, 9], "s_absdiff_i32": [0, 2, 3, 4, 9], "s_add_i32": [0, 2, 3, 4, 9], "s_add_u32": [0, 2, 3, 4, 9, 591, 721], "s_addc_u32": [0, 2, 3, 4, 9, 591], "s_addk_i32": [0, 2, 3, 4, 9], "s_and_b32": [0, 2, 3, 4, 9], "s_and_b64": [0, 2, 3, 4, 9, 591], "s_and_saveexec_b32": 0, "s_and_saveexec_b64": [0, 2, 3, 4, 9], "s_andn1_saveexec_b32": 0, "s_andn1_saveexec_b64": [0, 4, 9], "s_andn1_wrexec_b32": 0, "s_andn1_wrexec_b64": [0, 4, 9], "s_andn2_b32": [0, 2, 3, 4, 9, 591], "s_andn2_b64": [0, 2, 3, 4, 9], "s_andn2_saveexec_b32": 0, "s_andn2_saveexec_b64": [0, 2, 3, 4, 9], "s_andn2_wrexec_b32": 0, "s_andn2_wrexec_b64": [0, 4, 9], "s_annot": 715, "s_arch": 662, "s_ashr_i32": [0, 2, 3, 4, 9, 591], "s_ashr_i64": [0, 2, 3, 4, 9], "s_atc_prob": [0, 3, 4, 9], "s_atc_probe_buff": [0, 3, 4, 9], "s_atomic_add": [0, 4, 9], "s_atomic_add_x2": [0, 4, 9], "s_atomic_and": [0, 4, 9], "s_atomic_and_x2": [0, 4, 9], "s_atomic_cmpswap": [0, 4, 9], "s_atomic_cmpswap_x2": [0, 4, 9], "s_atomic_dec": [0, 4, 9], "s_atomic_dec_x2": [0, 4, 9], "s_atomic_inc": [0, 4, 9], "s_atomic_inc_x2": [0, 4, 9], "s_atomic_or": [0, 4, 9], "s_atomic_or_x2": [0, 4, 9], "s_atomic_smax": [0, 4, 9], "s_atomic_smax_x2": [0, 4, 9], "s_atomic_smin": [0, 4, 9], "s_atomic_smin_x2": [0, 4, 9], "s_atomic_sub": [0, 4, 9], "s_atomic_sub_x2": [0, 4, 9], "s_atomic_swap": [0, 4, 9], "s_atomic_swap_x2": [0, 4, 9], "s_atomic_umax": [0, 4, 9], "s_atomic_umax_x2": [0, 4, 9], "s_atomic_umin": [0, 4, 9], "s_atomic_umin_x2": [0, 4, 9], "s_atomic_xor": [0, 4, 9], "s_atomic_xor_x2": [0, 4, 9], "s_barri": [0, 2, 3, 4, 9, 591], "s_bcnt0_i32_b32": [0, 2, 3, 4, 9], "s_bcnt0_i32_b64": [0, 2, 3, 4, 9, 588, 591], "s_bcnt1_i32_b32": [0, 2, 3, 4, 9], "s_bcnt1_i32_b64": [0, 2, 3, 4, 9], "s_bfe_i32": [0, 2, 3, 4, 9], "s_bfe_i64": [0, 2, 3, 4, 9, 590, 591], "s_bfe_u32": [0, 2, 3, 4, 9], "s_bfe_u64": [0, 2, 3, 4, 9, 590], "s_bfm_b32": [0, 2, 3, 4, 9], "s_bfm_b64": [0, 2, 3, 4, 9, 591], "s_bitcmp0_b32": [0, 2, 3, 4, 9], "s_bitcmp0_b64": [0, 2, 3, 4, 9, 591], "s_bitcmp1_b32": [0, 2, 3, 4, 9, 591], "s_bitcmp1_b64": [0, 2, 3, 4, 9], "s_bitreplicate_b64_b32": [0, 4, 9], "s_bitset0_b32": [0, 2, 3, 4, 9], "s_bitset0_b64": [0, 2, 3, 4, 9], "s_bitset1_b32": [0, 2, 3, 4, 9], "s_bitset1_b64": [0, 2, 3, 4, 9], "s_branch": [0, 2, 3, 4, 9, 24, 127, 217, 375, 487, 590], "s_brev_b32": [0, 2, 3, 4, 9], "s_brev_b64": [0, 2, 3, 4, 9], "s_buffer_atomic_add": [0, 4, 9], "s_buffer_atomic_add_x2": [0, 4, 9], "s_buffer_atomic_and": [0, 4, 9], "s_buffer_atomic_and_x2": [0, 4, 9], "s_buffer_atomic_cmpswap": [0, 4, 9], "s_buffer_atomic_cmpswap_x2": [0, 4, 9], "s_buffer_atomic_dec": [0, 4, 9], "s_buffer_atomic_dec_x2": [0, 4, 9], "s_buffer_atomic_inc": [0, 4, 9], "s_buffer_atomic_inc_x2": [0, 4, 9], "s_buffer_atomic_or": [0, 4, 9], "s_buffer_atomic_or_x2": [0, 4, 9], "s_buffer_atomic_smax": [0, 4, 9], "s_buffer_atomic_smax_x2": [0, 4, 9], "s_buffer_atomic_smin": [0, 4, 9], "s_buffer_atomic_smin_x2": [0, 4, 9], "s_buffer_atomic_sub": [0, 4, 9], "s_buffer_atomic_sub_x2": [0, 4, 9], "s_buffer_atomic_swap": [0, 4, 9], "s_buffer_atomic_swap_x2": [0, 4, 9], "s_buffer_atomic_umax": [0, 4, 9], "s_buffer_atomic_umax_x2": [0, 4, 9], "s_buffer_atomic_umin": [0, 4, 9], "s_buffer_atomic_umin_x2": [0, 4, 9], "s_buffer_atomic_xor": [0, 4, 9], "s_buffer_atomic_xor_x2": [0, 4, 9], "s_buffer_load_dword": [0, 2, 3, 4, 9], "s_buffer_load_dwordx16": [0, 2, 3, 4, 9], "s_buffer_load_dwordx2": [0, 2, 3, 4, 9], "s_buffer_load_dwordx4": [0, 2, 3, 4, 9], "s_buffer_load_dwordx8": [0, 2, 3, 4, 9], "s_buffer_store_dword": [0, 3, 4, 9], "s_buffer_store_dwordx2": [0, 3, 4, 9], "s_buffer_store_dwordx4": [0, 3, 4, 9], "s_call_b64": [0, 4, 9], "s_cbranch_cdbgsy": [0, 2, 3, 4, 9], "s_cbranch_cdbgsys_and_us": [0, 2, 3, 4, 9], "s_cbranch_cdbgsys_or_us": [0, 2, 3, 4, 9], "s_cbranch_cdbgus": [0, 2, 3, 4, 9], "s_cbranch_execnz": [0, 2, 3, 4, 9], "s_cbranch_execz": [0, 2, 3, 4, 9], "s_cbranch_g_fork": [2, 3, 4, 9, 591], "s_cbranch_i_fork": [2, 3, 4, 9], "s_cbranch_join": [2, 3, 4, 9, 591], "s_cbranch_scc0": [0, 2, 3, 4, 9], "s_cbranch_scc1": [0, 2, 3, 4, 9], "s_cbranch_vccnz": [0, 2, 3, 4, 9], "s_cbranch_vccz": [0, 2, 3, 4, 9], "s_claus": 0, "s_cmov_b32": [0, 2, 3, 4, 9, 591], "s_cmov_b64": [0, 2, 3, 4, 9], "s_cmovk_i32": [0, 2, 3, 4, 9], "s_cmp_eq_i32": [0, 2, 3, 4, 9, 591], "s_cmp_eq_u32": [0, 2, 3, 4, 9], "s_cmp_eq_u64": [0, 3, 4, 9], "s_cmp_ge_i32": [0, 2, 3, 4, 9], "s_cmp_ge_u32": [0, 2, 3, 4, 9], "s_cmp_gt_i32": [0, 2, 3, 4, 9], "s_cmp_gt_u32": [0, 2, 3, 4, 9], "s_cmp_le_i32": [0, 2, 3, 4, 9], "s_cmp_le_u32": [0, 2, 3, 4, 9], "s_cmp_lg_i32": [0, 2, 3, 4, 9], "s_cmp_lg_u32": [0, 2, 3, 4, 9], "s_cmp_lg_u64": [0, 3, 4, 9], "s_cmp_lt_i32": [0, 2, 3, 4, 9], "s_cmp_lt_u32": [0, 2, 3, 4, 9], "s_cmpk_eq_i32": [0, 2, 3, 4, 9], "s_cmpk_eq_u32": [0, 2, 3, 4, 9], "s_cmpk_ge_i32": [0, 2, 3, 4, 9], "s_cmpk_ge_u32": [0, 2, 3, 4, 9], "s_cmpk_gt_i32": [0, 2, 3, 4, 9], "s_cmpk_gt_u32": [0, 2, 3, 4, 9], "s_cmpk_le_i32": [0, 2, 3, 4, 9], "s_cmpk_le_u32": [0, 2, 3, 4, 9], "s_cmpk_lg_i32": [0, 2, 3, 4, 9], "s_cmpk_lg_u32": [0, 2, 3, 4, 9], "s_cmpk_lt_i32": [0, 2, 3, 4, 9], "s_cmpk_lt_u32": [0, 2, 3, 4, 9], "s_code_end": 0, "s_cselect_b32": [0, 2, 3, 4, 9, 591], "s_cselect_b64": [0, 2, 3, 4, 9], "s_dcache_discard": [0, 4, 9], "s_dcache_discard_x2": [0, 4, 9], "s_dcache_inv": [0, 2, 3, 4, 9, 591], "s_dcache_inv_vol": [2, 3, 4, 9, 591], "s_dcache_wb": [0, 3, 4, 9, 591], "s_dcache_wb_vol": [3, 4, 9], "s_decperflevel": [0, 2, 3, 4, 9], "s_denorm_mod": 0, "s_endpgm": [0, 2, 3, 4, 9, 591], "s_endpgm_ordered_ps_don": [0, 4, 9], "s_endpgm_saved": [0, 3, 4, 9], "s_ff0_i32_b32": [0, 2, 3, 4, 9], "s_ff0_i32_b64": [0, 2, 3, 4, 9], "s_ff1_i32_b32": [0, 2, 3, 4, 9], "s_ff1_i32_b64": [0, 2, 3, 4, 9], "s_flbit_i32": [0, 2, 3, 4, 9], "s_flbit_i32_b32": [0, 2, 3, 4, 9], "s_flbit_i32_b64": [0, 2, 3, 4, 9], "s_flbit_i32_i64": [0, 2, 3, 4, 9], "s_get_reg": 590, "s_get_waveid_in_workgroup": 0, "s_getpc_b64": [0, 2, 3, 4, 9, 591], "s_getreg_b32": [0, 2, 3, 4, 9, 20, 123, 212, 370, 482], "s_gl1_inv": 0, "s_icache_inv": [0, 2, 3, 4, 9], "s_incperflevel": [0, 2, 3, 4, 9], "s_inst_prefetch": 0, "s_load_dword": [0, 2, 3, 4, 9, 591], "s_load_dwordx16": [0, 2, 3, 4, 9, 591], "s_load_dwordx2": [0, 2, 3, 4, 9, 591], "s_load_dwordx4": [0, 2, 3, 4, 9], "s_load_dwordx8": [0, 2, 3, 4, 9, 591], "s_lshl1_add_u32": [0, 4, 9], "s_lshl2_add_u32": [0, 4, 9], "s_lshl3_add_u32": [0, 4, 9], "s_lshl4_add_u32": [0, 4, 9], "s_lshl_b32": [0, 2, 3, 4, 9], "s_lshl_b64": [0, 2, 3, 4, 9], "s_lshr_b32": [0, 2, 3, 4, 9], "s_lshr_b64": [0, 2, 3, 4, 9, 591], "s_max_i32": [0, 2, 3, 4, 9], "s_max_u32": [0, 2, 3, 4, 9], "s_memrealtim": [0, 3, 4, 9], "s_memtim": [0, 2, 3, 4, 9, 591], "s_min_i32": [0, 2, 3, 4, 9], "s_min_u32": [0, 2, 3, 4, 9], "s_mov_b32": [0, 2, 3, 4, 9, 591], "s_mov_b64": [0, 2, 3, 4, 9, 591], "s_movk_i32": [0, 2, 3, 4, 9], "s_movreld_b32": [0, 2, 3, 4, 9], "s_movreld_b64": [0, 2, 3, 4, 9], "s_movrels_b32": [0, 2, 3, 4, 9], "s_movrels_b64": [0, 2, 3, 4, 9], "s_movrelsd_2_b32": 0, "s_mul_hi_i32": [0, 4, 9], "s_mul_hi_u32": [0, 4, 9], "s_mul_i32": [0, 2, 3, 4, 9], "s_mulk_i32": [0, 2, 3, 4, 9], "s_nand_b32": [0, 2, 3, 4, 9], "s_nand_b64": [0, 2, 3, 4, 9], "s_nand_saveexec_b32": 0, "s_nand_saveexec_b64": [0, 2, 3, 4, 9], "s_nop": [0, 2, 3, 4, 9, 591], "s_nor_b32": [0, 2, 3, 4, 9], "s_nor_b64": [0, 2, 3, 4, 9], "s_nor_saveexec_b32": 0, "s_nor_saveexec_b64": [0, 2, 3, 4, 9], "s_not_b32": [0, 2, 3, 4, 9], "s_not_b64": [0, 2, 3, 4, 9], "s_or_b32": [0, 2, 3, 4, 9], "s_or_b64": [0, 2, 3, 4, 9], "s_or_saveexec_b32": 0, "s_or_saveexec_b64": [0, 2, 3, 4, 9], "s_orn1_saveexec_b32": 0, "s_orn1_saveexec_b64": [0, 4, 9], "s_orn2_b32": [0, 2, 3, 4, 9], "s_orn2_b64": [0, 2, 3, 4, 9], "s_orn2_saveexec_b32": 0, "s_orn2_saveexec_b64": [0, 2, 3, 4, 9], "s_pack_hh_b32_b16": [0, 4, 9], "s_pack_lh_b32_b16": [0, 4, 9], "s_pack_ll_b32_b16": [0, 4, 9], "s_quadmask_b32": [0, 2, 3, 4, 9], "s_quadmask_b64": [0, 2, 3, 4, 9], "s_rfe_b64": [0, 2, 3, 4, 9], "s_rfe_restore_b64": [3, 4, 9], "s_round_mod": 0, "s_scratch_load_dword": [0, 4, 9], "s_scratch_load_dwordx2": [0, 4, 9], "s_scratch_load_dwordx4": [0, 4, 9], "s_scratch_store_dword": [0, 4, 9], "s_scratch_store_dwordx2": [0, 4, 9], "s_scratch_store_dwordx4": [0, 4, 9], "s_sendmsg": [0, 2, 3, 4, 9, 27, 129, 220, 378, 490, 591], "s_sendmsghalt": [0, 2, 3, 4, 9], "s_set_gpr_idx_idx": [3, 4, 9], "s_set_gpr_idx_mod": [3, 4, 9, 213, 371, 483], "s_set_gpr_idx_off": [3, 4, 9], "s_set_gpr_idx_on": [3, 4, 9], "s_set_reg": 590, "s_sethalt": [0, 2, 3, 4, 9, 591], "s_setkill": [0, 2, 3, 4, 9], "s_setpc_b64": [0, 2, 3, 4, 9, 591], "s_setprio": [0, 2, 3, 4, 9], "s_setreg_b32": [0, 2, 3, 4, 9], "s_setreg_imm32_b32": [0, 2, 3, 4, 9], "s_setvskip": [2, 3, 4, 9, 591], "s_sext_i32_i16": [0, 2, 3, 4, 9], "s_sext_i32_i8": [0, 2, 3, 4, 9], "s_sleep": [0, 2, 3, 4, 9, 591], "s_store_dword": [0, 3, 4, 9], "s_store_dwordx2": [0, 3, 4, 9], "s_store_dwordx4": [0, 3, 4, 9], "s_sub_i32": [0, 2, 3, 4, 9], "s_sub_u32": [0, 2, 3, 4, 9], "s_subb_u32": [0, 2, 3, 4, 9], "s_subvector_loop_begin": 0, "s_subvector_loop_end": 0, "s_swappc_b64": [0, 2, 3, 4, 9, 591], "s_trap": [0, 2, 3, 4, 9, 591], "s_ttracedat": [0, 2, 3, 4, 9], "s_ttracedata_imm": 0, "s_version": 0, "s_waitcnt": [0, 2, 3, 4, 9, 120, 209, 314, 479, 584, 591], "s_waitcnt_expcnt": 0, "s_waitcnt_lgkmcnt": 0, "s_waitcnt_vmcnt": 0, "s_waitcnt_vscnt": 0, "s_wakeup": [0, 3, 4, 9], "s_wqm_b32": [0, 2, 3, 4, 9], "s_wqm_b64": [0, 2, 3, 4, 9, 591], "s_xnor_b32": [0, 2, 3, 4, 9], "s_xnor_b64": [0, 2, 3, 4, 9], "s_xnor_saveexec_b32": 0, "s_xnor_saveexec_b64": [0, 2, 3, 4, 9], "s_xor_b32": [0, 2, 3, 4, 9], "s_xor_b64": [0, 2, 3, 4, 9], "s_xor_saveexec_b32": 0, "s_xor_saveexec_b64": [0, 2, 3, 4, 9], "sacrific": [715, 727], "saddr": [0, 4, 8, 9, 82, 83, 351, 433, 434, 546, 547], "sadly": [747, 766], "saf": [591, 594, 595, 598, 602, 604, 613, 661, 670, 678, 681, 689, 693, 707, 709, 710, 715, 716, 731, 746, 751, 760, 766, 768, 769, 770, 782, 794, 817], "safely": [608, 675, 680, 683, 714, 715, 731, 733, 749, 768, 770, 796], "safepoint": [680, 715, 756], "safepoint_poll": 770, "safepointaddress": 680, "safestack": [598, 715, 769], "safety": [677, 678, 715, 725, 760, 784], "sag": 812, "sahf": [608, 766], "said": [603, 610, 611, 632, 640, 667, 670, 673, 700, 701, 704, 714, 715, 726, 741, 747, 749, 761, 762, 765, 817], "sak": [612, 667, 749, 788], "salient": 703, "salt": 748, "salvaged": 765, "salvagedebuginfo": 710, "sam": [20, 24, 120, 123, 127, 209, 212, 213, 217, 314, 370, 371, 375, 479, 482, 483, 487, 584, 585, 586, 589, 590, 591, 592, 594, 595, 597, 598, 600, 601, 602, 603, 606, 607, 608, 610, 611, 613, 615, 617, 620, 622, 623, 624, 626, 632, 634, 640, 641, 642, 645, 650, 654, 655, 657, 659, 661, 662, 665, 666, 667, 670, 671, 673, 674, 675, 677, 678, 679, 680, 681, 683, 688, 689, 692, 693, 694, 699, 700, 701, 702, 703, 704, 705, 707, 710, 712, 713, 714, 715, 716, 717, 719, 721, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 755, 758, 759, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 781, 782, 783, 785, 786, 788, 790, 791, 792, 794, 795, 808, 809, 810, 811, 812, 813, 814, 817], "same_content": 675, "same_siz": 675, "samesiz": 715, "sampl": [68, 159, 256, 420, 532, 589, 591, 593, 632, 639, 646, 647, 661, 668, 670, 680, 685, 700, 710, 717, 729, 750, 770, 779, 788, 789, 790, 809, 810, 816, 820], "sampled": [700, 756, 789], "samplepgo": [600, 710], "samplerat": 700, "sampling": [600, 632, 700], "sampson": 664, "san": [595, 606, 700, 762], "sandbox": [706, 714, 758], "sandboxed": 714, "sander": 697, "sandi": 752, "sandwiched": 710, "sandybridg": 785, "sandylak": 815, "sanitiz": [606, 607, 679, 715, 717, 730, 761, 790], "sanitize_": 715, "sanitize_address": [598, 715], "sanitize_hwaddress": [598, 715], "sanitize_memory": [598, 715], "sanitize_memtag": [598, 715], "sanitize_thread": [598, 715], "sanitizer": [671, 679, 709, 715, 717, 746, 761, 769], "sanitizercoverag": [715, 717], "sanitizercoveragetracedataflow": 717, "sanitizerlist": 790, "sanitizersruntim": 671, "sanity": [678, 683, 717], "sanjoy": 753, "saptr": 715, "sar": 608, "sarq": 766, "sas": 591, "sass": [662, 729], "sat": 702, "satisf": 591, "satisfied": [610, 693, 715, 766, 781], "satisfy": [27, 129, 220, 378, 490, 590, 591, 594, 595, 612, 670, 677, 688, 693, 705, 714, 715, 771, 814], "satisfying": 693, "satur": 689, "saturat": 715, "saturating": 813, "sav": [585, 586, 591, 606, 608, 622, 632, 661, 662, 673, 674, 683, 685, 713, 715, 728, 729, 731, 745, 747, 749, 765, 766, 768, 779, 786, 812, 813, 814, 815, 816], "save1": 665, "save2": 665, "saved": [585, 586, 591, 597, 598, 608, 624, 673, 715, 717, 720, 768, 775, 776, 785, 786], "savesomewher": 611, "saveth": 612, "saving": [586, 611, 661, 673, 715, 717, 768, 775, 811], "savoir": 793, "saw": [640, 718, 788, 812], "say": [591, 608, 609, 612, 617, 661, 670, 681, 683, 693, 708, 710, 712, 715, 719, 722, 726, 728, 730, 740, 741, 749, 751, 753, 767, 771, 775, 776, 780, 787, 808, 810, 817], "saying": 678, "sbas": [0, 2, 3, 4, 9], "sbyt": 743, "sc": [595, 645, 715, 736], "scaffolding": 809, "scal": [586, 608, 611, 681, 708, 715, 753, 766, 772, 774], "scalability": 594, "scalabl": [594, 682], "scalar": [33, 34, 132, 133, 224, 225, 383, 384, 496, 497, 585, 586, 587, 590, 591, 608, 661, 662, 678, 680, 688, 696, 715, 716, 719, 754, 755, 757, 785, 786, 788, 795, 796, 797, 811, 812, 813, 814, 816], "scalar_nam": 715, "scalarbitsettrait": 792, "scalarevolu": [594, 681, 753], "scalariz": 746, "scalarized": [715, 755], "scalarizing": [608, 693, 746], "scalaropt": 625, "scalartrait": 792, "scale2": 715, "scaled": [585, 586, 646, 681, 715], "scaling": [596, 715], "scaling_governor": 596, "scan": [608, 617, 618, 620, 680, 714, 719, 727, 731, 741, 774, 781, 788, 796, 817], "scanf": 612, "scann": 808, "scanned": 617, "scanning": [611, 727, 779], "scar": 670, "scary": 817, "scatter": 755, "scattered": 765, "scc": [10, 11, 12, 13, 54, 57, 58, 59, 60, 61, 63, 64, 65, 69, 70, 75, 77, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 166, 167, 240, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 261, 265, 317, 318, 322, 323, 328, 329, 330, 331, 332, 342, 343, 344, 345, 347, 348, 403, 406, 407, 410, 411, 412, 413, 421, 422, 425, 429, 516, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 533, 534, 537, 541, 669, 716, 730, 733, 788], "sccp": 716, "scei": 657, "scen": 749, "scenario": [593, 749, 755], "scenarios": [595, 602, 634, 636, 642, 654, 676, 683, 710, 743], "scev": [670, 715, 719], "sched": [608, 620, 632, 776, 786], "sched_class": 632, "schedcov": 786, "schedq": 640, "schedreadwrit": 776, "schedrw": 776, "schedul": [586, 608, 612, 620, 632, 640, 702, 707, 729, 772, 774, 786, 788], "scheduled": [608, 693, 724, 788], "scheduler": [620, 640, 765, 788], "scheduling": [620, 632, 640, 683, 710, 719, 749, 755, 757, 770, 774, 788], "schem": [593, 605, 611, 617, 624, 627, 628, 631, 670, 679, 680, 703, 711, 715, 731, 749, 765, 770, 786, 792, 796, 797, 814, 820], "scienc": [719, 752], "scientific": 716, "scipy": 779, "scm": 686, "scop": [594, 598, 602, 606, 611, 612, 639, 655, 660, 670, 673, 680, 709, 710, 714, 717, 719, 721, 728, 730, 734, 749, 753, 762, 765, 766, 769, 770, 774, 776, 788, 792, 810, 812, 813, 814, 815, 816], "scoped": [678, 714, 715, 726, 765, 814], "scopelin": [710, 715, 765, 816], "scoping": 607, "scott": 611, "scraping": 617, "scratch": [32, 83, 382, 434, 495, 547, 585, 589, 590, 608, 715, 726, 749, 786, 788], "scratch_en": 591, "scratch_load": 591, "scratch_load_dword": [0, 4, 9], "scratch_load_dwordx2": [0, 4, 9], "scratch_load_dwordx3": [0, 4, 9], "scratch_load_dwordx4": [0, 4, 9], "scratch_load_sbyt": [0, 4, 9], "scratch_load_sbyte_d16": [0, 4, 9], "scratch_load_sbyte_d16_h": [0, 4, 9], "scratch_load_short_d16": [0, 4, 9], "scratch_load_short_d16_h": [0, 4, 9], "scratch_load_sshort": [0, 4, 9], "scratch_load_ubyt": [0, 4, 9], "scratch_load_ubyte_d16": [0, 4, 9], "scratch_load_ubyte_d16_h": [0, 4, 9], "scratch_load_ushort": [0, 4, 9], "scratch_memory_siz": 591, "scratch_store_byt": [0, 4, 9], "scratch_store_byte_d16_h": [0, 4, 9], "scratch_store_dword": [0, 4, 9], "scratch_store_dwordx2": [0, 4, 9], "scratch_store_dwordx3": [0, 4, 9], "scratch_store_dwordx4": [0, 4, 9], "scratch_store_short": [0, 4, 9], "scratch_store_short_d16_h": [0, 4, 9], "scratchpad": [586, 591], "screen": [603, 685, 758], "screenshot": 747, "script": [593, 602, 603, 606, 607, 613, 617, 647, 661, 664, 672, 676, 683, 686, 700, 702, 707, 709, 710, 728, 749, 750, 751, 753, 772, 774, 777, 779, 780, 781, 788], "scripting": [622, 680, 751, 774], "scriptsobsolet": 671, "scroll": 747, "scrub": 766, "scrutiny": [670, 766], "scudo": [700, 725, 756], "scudo_default_opt": 761, "scudo_memtag_tuning": 761, "scudo_opt": 761, "scudo_standalon": 761, "sd": [650, 702, 776], "sdat": [0, 3, 4, 9], "sdisel": 716, "sdiv": [608, 688], "sdk": [606, 645, 655, 657, 662, 683, 685, 703, 779], "sdnod": [602, 608, 749, 754, 765, 777, 786, 790], "sdnodeproperty": 775, "sdnpmemoperand": 775, "sdpatternoperator": 775, "sdst": [0, 2, 3, 4, 9, 587], "sdtc": 786, "sdvalu": [608, 786, 790], "sdwa": [587, 588], "seamless": 699, "seamlessly": [717, 718], "sean": 749, "search": [602, 606, 611, 612, 617, 631, 636, 643, 645, 653, 661, 667, 670, 671, 675, 680, 683, 712, 714, 716, 717, 731, 743, 749, 750, 765, 769, 770, 775, 776, 785, 786, 794, 811, 812, 813, 814], "searchabl": [660, 774], "searched": [636, 715, 731], "searchindex": 774, "searching": [605, 617, 631, 661, 673, 683, 746, 749, 755, 765, 794, 810], "sec": [646, 714, 715], "secidx": 675, "secnam": 675, "second": [85, 117, 176, 205, 271, 310, 352, 436, 549, 580, 585, 586, 588, 589, 591, 598, 600, 605, 606, 607, 608, 611, 612, 617, 640, 655, 661, 665, 666, 672, 673, 675, 680, 681, 683, 685, 689, 707, 708, 710, 712, 715, 717, 719, 721, 722, 726, 727, 730, 736, 738, 740, 741, 743, 746, 749, 751, 764, 765, 766, 767, 768, 770, 771, 774, 775, 776, 779, 780, 786, 788, 791, 792, 796, 810, 811, 812, 813, 814, 815, 816, 817], "secondary": [605, 670, 673, 761, 768, 774], "secondcondit": 749, "secondlastinst": 786, "secondlastopc": 786, "secondly": 816, "secrel32": 675, "secrel_hi12": 675, "secrel_lo12": 675, "secret": [761, 766], "sectalign": 661, "section": [585, 589, 590, 594, 595, 596, 597, 598, 604, 605, 606, 607, 608, 611, 612, 615, 617, 618, 620, 622, 631, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 653, 654, 655, 659, 661, 662, 665, 666, 670, 671, 672, 673, 680, 681, 683, 688, 698, 701, 703, 704, 707, 708, 709, 710, 714, 715, 720, 721, 723, 726, 727, 728, 731, 734, 735, 743, 744, 746, 747, 749, 751, 757, 759, 762, 764, 765, 766, 770, 771, 774, 775, 776, 783, 785, 786, 787, 788, 789, 790, 794, 809, 811, 816, 817, 820], "section1": 643, "section2": 643, "section_nam": 715, "sectioncontr": 736, "sectioncontribentry": 736, "sectioncontribentry2": 736, "sectioncontributionsiz": 736, "sectioncontrsubstreamvers": 736, "sectiondat": 820, "sectionlength": 736, "sectionmapentry": 736, "sectionmapentryflag": 736, "sectionmaphead": 736, "sectionmapsiz": 736, "sectionmemorymanag": [720, 731, 794, 795, 796, 797], "sectionnam": [598, 736], "sectionnumb": 820, "sectionordinal": 714, "sectionrang": 714, "sectnam": [644, 661], "sector": 771, "sectvalu": 661, "secur": [762, 766], "securely": 762, "security": [605, 661, 671, 682, 687, 709, 746, 756, 761, 793, 811], "sed": [617, 683], "see": [1, 5, 8, 27, 129, 220, 378, 490, 585, 586, 590, 591, 592, 595, 596, 597, 598, 600, 601, 602, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 619, 626, 633, 640, 643, 647, 655, 656, 658, 659, 660, 661, 662, 664, 665, 666, 670, 671, 672, 673, 674, 676, 678, 679, 683, 685, 688, 693, 694, 699, 701, 703, 704, 705, 706, 708, 709, 710, 714, 715, 717, 719, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 739, 740, 743, 744, 746, 747, 749, 750, 751, 755, 757, 758, 762, 763, 765, 766, 767, 768, 770, 771, 775, 776, 777, 780, 781, 783, 784, 786, 787, 788, 790, 794, 795, 809, 810, 811, 812, 813, 814, 815, 816, 817], "seed": [652, 717], "seeded": 717, "seeing": [611, 714, 766, 788, 817], "seek": [586, 670, 675, 681, 746, 756, 791], "seekabl": 791, "seeking": [670, 690], "seem": [585, 586, 591, 594, 597, 602, 606, 608, 629, 661, 662, 670, 680, 681, 708, 710, 726, 727, 736, 751, 752, 753, 762, 766], "seemingly": [688, 786], "seen": [608, 611, 640, 646, 661, 670, 688, 715, 726, 727, 746, 749, 770, 786, 788, 796, 811, 813, 817], "sees": [661, 714, 715, 727], "seg": [714, 715], "segalign": 638, "segment": [585, 586, 608, 641, 642, 643, 644, 649, 650, 651, 654, 700, 714, 715, 735, 736, 765, 766, 768, 779, 791], "segment_selector_siz": [585, 586, 591], "segmented": [591, 756], "segmentreg": 608, "segmentsrequestmap": 714, "segnam": [644, 661], "sel": 665, "seldom": 727, "select": [585, 586, 589, 590, 591, 606, 611, 618, 622, 626, 640, 641, 644, 661, 664, 673, 674, 675, 679, 681, 685, 686, 689, 691, 693, 694, 695, 696, 697, 704, 705, 710, 716, 720, 721, 729, 747, 749, 756, 757, 766, 770, 774, 777, 779, 782, 786, 789, 790, 792, 814, 815], "select_isd_stor": 786, "selectaddrrr": 786, "selectcod": 786, "selectcodecommon": 790, "selected": [585, 586, 589, 591, 597, 602, 608, 617, 622, 634, 670, 672, 680, 683, 685, 689, 691, 693, 700, 705, 712, 715, 721, 746, 751, 755, 775, 776, 777, 789], "selectimpl": 691, "selecting": [585, 602, 632, 640, 683, 685, 691, 712, 715, 779, 790], "selectinst": 611, "selectiondag": [595, 688, 689, 690, 693, 694, 698, 746, 749, 765, 774], "selectiondagbuild": [592, 608, 694], "selectiondagdump": 592, "selectiondagisel": [774, 790], "selectiondaglegaliz": 592, "selectiondagnod": 786, "selectionkind": 715, "selectively": [631, 661, 714, 715, 730, 788, 789], "selector": [585, 586, 591, 608, 640, 660, 673, 683, 688, 691, 694, 698, 715, 736, 765, 774], "selecttarget": 796, "self": [585, 586, 591, 598, 608, 612, 632, 666, 667, 715, 727, 735, 736, 746, 747, 749, 760, 762, 776, 788, 811, 813], "selfexecutorprocesscontrol": [794, 795, 796, 797], "selp": 729, "selty": 715, "sem": [604, 607, 660, 680, 719, 774, 789, 817], "semacxx": 728, "semantic": [585, 586, 588, 591, 595, 600, 608, 611, 642, 662, 673, 676, 680, 689, 716, 718, 719, 723, 732, 749, 754, 755, 765, 766, 774, 776, 777, 782, 787, 788, 792, 810, 812], "semantically": [662, 715, 749, 771, 795], "semicolon": [606, 617, 683, 728, 779, 809, 810, 811, 812, 813, 814, 815, 816], "semispac": 680, "semv": [586, 591], "send": [589, 595, 618, 623, 630, 633, 640, 660, 664, 670, 678, 682, 683, 701, 707, 717, 722, 728, 731, 747, 751, 757, 758, 767, 772, 781], "sending": [608, 664, 670, 671, 747, 762, 788, 810], "sendmsg": [27, 129, 220, 378, 490, 591], "sens": [594, 595, 606, 608, 611, 661, 670, 676, 681, 713, 715, 717, 719, 728, 749, 751, 753, 765, 766, 770, 772, 776, 790, 810, 817], "sensibl": 749, "sensit": [585, 594, 606, 612, 622, 629, 646, 701, 715, 721, 762, 766, 776, 781, 788, 792], "sent": [589, 610, 618, 630, 640, 646, 670, 682, 701, 707, 716, 728, 731, 747, 770], "sentenc": 611, "sentinel": 598, "separ": [680, 715, 765], "separat": [585, 586, 590, 591, 595, 599, 607, 608, 610, 611, 612, 617, 626, 645, 651, 655, 657, 661, 662, 664, 665, 669, 670, 680, 681, 683, 685, 693, 694, 696, 698, 701, 705, 706, 713, 714, 715, 717, 718, 719, 721, 722, 726, 729, 730, 731, 740, 743, 749, 753, 759, 760, 768, 770, 772, 775, 776, 781, 782, 786, 788, 811], "separate_argu": 606, "separated": [213, 371, 483, 587, 588, 591, 593, 598, 604, 606, 608, 611, 612, 617, 622, 626, 632, 636, 638, 641, 642, 645, 646, 660, 661, 665, 670, 683, 700, 715, 728, 750, 759, 761, 765, 771, 774, 776, 779, 781, 792, 809], "separately": [585, 586, 589, 595, 606, 608, 611, 626, 645, 651, 657, 661, 665, 667, 681, 685, 706, 715, 718, 730, 751, 759, 760, 765, 775, 776], "separateremarksfil": 759, "separateremarksmet": 759, "separating": [679, 766], "separator": [120, 209, 314, 479, 584, 590, 611, 617, 627, 757, 781], "seq": [611, 689, 700, 820], "seq_cst": [591, 595, 715], "seq_load": 591, "seq_stor": 591, "sequenc": [84, 175, 270, 435, 548, 585, 586, 589, 590, 595, 597, 608, 611, 612, 622, 633, 640, 653, 657, 660, 665, 666, 667, 670, 673, 675, 678, 680, 681, 690, 693, 714, 715, 717, 727, 733, 734, 735, 743, 746, 749, 751, 753, 755, 759, 765, 766, 768, 770, 774, 775, 785, 786, 788, 791, 809, 820], "sequenced": 715, "sequencetrait": 792, "sequencing": [620, 813, 814], "sequency": 791, "sequential": [590, 591, 598, 608, 612, 689, 715, 719, 751, 782], "sequential_fadd": 715, "sequential_fmul": 715, "sequentially": [591, 598, 640, 673, 710, 715], "sequentialtyp": 749, "ser": [585, 586, 591, 593, 598, 606, 608, 610, 627, 655, 670, 673, 682, 683, 709, 715, 721, 735, 740, 749, 753, 755, 772, 775, 776, 788, 795, 811, 818], "serg": 762, "sergey": 762, "serial": [632, 683, 727], "serializ": [660, 674, 694, 721, 734, 735, 738, 741, 756, 774, 792], "serialized": [694, 721, 741, 743, 744], "serializing": [615, 640, 721, 759, 766], "serially": 750, "serious": [670, 707, 760, 766], "seriously": 685, "serv": [18, 36, 37, 38, 93, 96, 97, 100, 101, 186, 187, 189, 190, 191, 211, 281, 282, 283, 286, 287, 354, 368, 386, 387, 388, 444, 447, 448, 451, 452, 481, 499, 500, 501, 557, 560, 561, 564, 565, 585, 586, 587, 597, 617, 640, 645, 665, 670, 671, 672, 673, 681, 682, 707, 715, 731, 741, 746, 747, 749, 751, 755, 761, 765, 766, 768, 776, 779, 781, 791], "server": [685, 751, 766], "servic": [591, 596, 676, 687, 751, 761, 771], "serviced": 594, "serving": 760, "session": [668, 722, 731, 749, 767, 795], "set": [32, 82, 83, 85, 176, 271, 351, 352, 382, 433, 434, 436, 495, 546, 547, 549, 585, 586, 589, 590, 593, 595, 596, 597, 598, 600, 602, 604, 606, 607, 608, 610, 611, 612, 613, 617, 618, 620, 622, 632, 636, 640, 641, 642, 643, 646, 651, 653, 654, 655, 657, 660, 662, 663, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 679, 680, 683, 685, 688, 689, 694, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 712, 713, 714, 717, 718, 719, 720, 726, 727, 728, 729, 730, 733, 736, 738, 739, 740, 743, 744, 745, 747, 748, 750, 751, 753, 754, 756, 757, 758, 759, 761, 765, 766, 767, 768, 770, 771, 772, 774, 775, 777, 779, 780, 781, 782, 783, 787, 788, 789, 790, 791, 792, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816], "setargstr": 661, "setbann": 749, "setbid": 598, "setbr": 632, "setcategory": 661, "setcc": [608, 749], "setcondcodeact": 786, "setconvertact": 786, "setcurrentdebugloc": 816, "setdagop": 776, "setdat": 611, "setdatalayout": [811, 812, 813, 814, 815, 816], "setdebugloc": 710, "setdescript": 661, "setexitcodemapp": 749, "setfoo": 715, "setgc": 680, "setgraphattr": 749, "setgraphcolor": 749, "seth": 786, "sethiddenflag": 661, "setindexedloadact": 786, "setindexedstoreact": 786, "setinsertfencesforatomic": 595, "setinsertpoint": [810, 811, 812, 813, 814, 815, 816], "setinternallinkag": 749, "setjmp": [715, 817], "setjmp_buf": 673, "setkind": 714, "setlazycompilefailureaddr": 731, "setloadextact": 786, "setloadxact": 786, "setmaxatomicsizeinbitssupported": 595, "setmcjitmemorymanag": 720, "setnam": [749, 810, 811, 812, 813, 814, 815, 816], "setnumcompilethread": 731, "seto": 766, "setobjectlinkinglayercreator": 714, "setop": 776, "setoperationact": [595, 608, 786], "setp": 729, "setpreservesall": 788, "setpreservescfg": 788, "setrecordnam": 598, "setreg": 608, "setrequiresstructuredcfg": 786, "setsubprogram": 816, "settarget": 714, "settargettripl": 815, "setting": [585, 586, 593, 594, 604, 606, 607, 617, 618, 622, 626, 632, 649, 650, 661, 665, 668, 670, 676, 680, 683, 685, 699, 700, 701, 703, 708, 710, 714, 715, 718, 728, 729, 730, 731, 745, 747, 749, 761, 765, 766, 768, 776, 779, 786, 789, 790, 792, 811, 816, 818], "settled": 751, "settransform": 795, "settruncstoreact": 786, "setup": [591, 604, 675, 699, 705, 714, 717, 721, 749, 751, 765, 779, 786, 787, 794, 811, 817], "setup_token": 715, "setupinprocesslctmreentryviaepciu": [796, 797], "setupmachinefunct": 786, "setvector": 611, "setxyzzy": 611, "seul": 123, "sevenkind": 715, "seventeen": 721, "sever": 760, "several": [585, 586, 588, 590, 591, 594, 598, 602, 603, 606, 607, 608, 611, 612, 617, 622, 624, 632, 637, 640, 645, 646, 661, 666, 670, 673, 674, 680, 682, 683, 685, 696, 700, 701, 710, 711, 715, 717, 718, 719, 721, 724, 727, 731, 734, 738, 741, 746, 749, 750, 755, 757, 761, 765, 766, 771, 774, 776, 779, 780, 781, 786, 788, 789, 793, 810, 812, 817, 818], "severely": 710, "severity": [758, 762], "sex": 609, "sexist": 609, "sext": [26, 218, 327, 339, 376, 488, 710, 757], "sextload": [777, 786], "sexual": 609, "sexually": 609, "sf": [683, 702, 706], "sge": 715, "sgi": 749, "sgn": 715, "sgpr": [20, 212, 370, 482, 715], "sgpr0": [585, 591], "sgpr1": 591, "sgpr105": 591, "sgpr2": 721, "sgpr29": 591, "sgpr3": 585, "sgpr30": 591, "sgpr32": 591, "sgpr33": 591, "sgpr34": 591, "sgpr4": 591, "sgpr63": 591, "sgpr64": 591, "sgpr_lim": 591, "sgpr_spill_count": 591, "sgprn": 591, "sgprs_used": 591, "sgt": 715, "sh": [613, 661, 672, 683, 686, 700, 707, 709, 751], "sh_addralign": 591, "sh_entsiz": 675, "sh_hidden_private_base_vimid": 591, "sh_link": [642, 654, 675], "sha": 715, "sha1": 717, "shad": [20, 123, 212, 370, 482, 589, 608], "shader": 591, "shader_funct": 591, "shader_subtyp": 591, "shadow": [715, 725, 753, 768, 770, 776, 786, 812, 813, 814, 815, 816], "shadowbyt": 768, "shadowcallstack": [598, 715], "shadowed": 812, "shadowing": 812, "shadowlist": 786, "shadowstackgc": 680, "shadowstackgclowering": 680, "shall": [606, 661, 675, 715, 724, 762, 817], "shallow": 683, "shap": [693, 694, 707, 708, 715, 749], "shaped": [765, 777], "shapekind": 708, "shar": [589, 591, 595, 598, 606, 608, 622, 634, 642, 670, 673, 683, 688, 692, 698, 714, 715, 719, 734, 746, 755, 761, 762, 771, 775, 776, 777, 788, 791, 794], "shard": 617, "shared": [585, 586, 589, 590, 591, 595, 602, 604, 606, 608, 611, 613, 618, 620, 634, 643, 644, 662, 665, 670, 675, 701, 706, 709, 712, 714, 715, 717, 718, 729, 731, 746, 749, 750, 759, 761, 762, 765, 780, 781, 788, 792, 794, 810, 813, 816], "shared_bas": 590, "shared_library": 750, "shared_lim": 590, "shared_ptr": 796, "shared_vgpr_cnt": 591, "shared_vgpr_count": 591, "sharing": [589, 592, 608, 670, 683, 714, 717, 718, 749], "sharp": 670, "shayn": 762, "she": [585, 701], "shel": [602, 606, 617, 661, 683, 685, 722, 728, 767, 781, 816], "shelf": [731, 794, 795], "shf_alloc": [591, 642], "shf_exclud": [642, 675], "shf_execinstr": [591, 642], "shf_link_ord": [675, 715], "shf_merg": 642, "shf_string": 642, "shf_writ": [591, 642], "shield": [596, 608, 761, 771], "shielding": 771, "shift": [589, 590, 608, 661, 674, 678, 689, 715, 716, 727, 746, 766, 776, 777, 791], "shifted": [591, 598, 599, 608, 715], "shifting": [591, 595, 608, 766], "shiftinst": 611, "shim": 746, "shiny": [787, 788], "ship": [593, 668, 680, 700, 762], "shipped": [595, 605, 683, 770, 772], "shipping": [683, 817], "shirt": 609, "shl": [611, 689, 710, 727, 746, 776], "shlib": 683, "shlibext": 781, "shlq": 766, "shn_amdgpu_ld": 591, "sho": 792, "shooting": 811, "short": [594, 597, 602, 608, 611, 617, 646, 655, 660, 670, 676, 685, 715, 726, 729, 736, 749, 753, 755, 761, 768, 770, 779, 786, 789, 792, 795, 812, 813, 814, 816], "short_enum": 715, "short_wchar": 715, "shortcoming": 762, "shortcut": 591, "shortest": [727, 776], "shortly": [765, 816], "should": [86, 585, 586, 589, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 611, 612, 613, 617, 618, 620, 622, 626, 628, 632, 633, 640, 645, 646, 647, 655, 659, 660, 661, 662, 664, 665, 668, 670, 673, 674, 675, 678, 679, 680, 681, 682, 683, 685, 689, 690, 691, 692, 693, 694, 696, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 726, 728, 729, 730, 731, 732, 733, 735, 736, 738, 740, 743, 745, 746, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 784, 786, 787, 788, 789, 790, 791, 792, 796, 809, 810, 811, 812, 814, 816], "shouldexecut": 749, "shouldexpandatomiccmpxchgin": 595, "shouldexpandatomicloadin": 595, "shouldexpandatomicrmwin": 595, "shouldexpandatomicstorein": 595, "shouldinsertfencesforatomic": 595, "shouldn": [594, 601, 610, 611, 661, 706, 715, 720, 726, 730, 781], "shouldprocess": 611, "shouldprocessattr": 611, "shouldsampl": 700, "show": [591, 600, 608, 612, 617, 621, 631, 632, 636, 639, 640, 641, 643, 645, 647, 655, 660, 661, 668, 670, 671, 675, 681, 683, 699, 709, 715, 716, 719, 721, 722, 728, 729, 730, 747, 749, 751, 753, 757, 758, 765, 766, 767, 768, 772, 774, 776, 779, 783, 785, 786, 788, 790, 794, 796, 809, 810, 811, 812, 813, 814, 815, 817, 818], "showc": 646, "showdebug": 668, "showed": [665, 792], "showing": [639, 683, 720, 729, 747, 749, 787, 788, 814, 818, 819], "shown": [585, 586, 589, 590, 591, 597, 617, 626, 631, 632, 646, 649, 650, 651, 655, 661, 665, 666, 669, 670, 685, 694, 708, 715, 721, 722, 726, 729, 747, 749, 757, 765, 766, 768, 774, 775, 776, 777, 780, 783, 786, 792, 813], "shr": 611, "shrink": [608, 751], "shrinking": 642, "shrx": 766, "shrxq": 766, "shstrtab": 591, "sht_dynamic": 591, "sht_hash": 591, "sht_llvm_linker_opt": 675, "sht_nobit": [591, 642], "sht_not": [591, 642], "sht_progbit": [591, 642], "sht_rel": 591, "sht_strtab": 591, "sht_symtab": 591, "shtest": 617, "shuffl": [608, 611, 617, 689, 715, 731, 754, 755], "shuffle_vector": 608, "shufflebyt": 717, "shufflevector": [597, 608, 612, 689], "shuffling": 591, "shut": [717, 786], "shutdown": 717, "si": [122, 336, 591, 611, 732, 777, 793], "sibling": [667, 686], "sid": [591, 594, 595, 606, 608, 610, 611, 640, 662, 668, 669, 671, 680, 683, 689, 710, 715, 719, 721, 727, 729, 746, 749, 751, 759, 766, 770, 776, 781, 809, 810, 812, 813], "sidebar": [707, 767], "sideeffect": 719, "sidelength": 708, "sierr": 752, "siframelowering": 591, "sift": 789, "sig": 683, "sig_atomic_t": 715, "sig_ign": 700, "sight": 814, "sigil": 721, "sign": [585, 586, 589, 590, 608, 609, 618, 632, 661, 663, 671, 675, 678, 682, 688, 689, 715, 749, 766, 776, 786, 817], "signal": [589, 595, 663, 668, 673, 677, 700, 715, 717, 719, 793], "signaled": 665, "signaling": [589, 591, 661, 689, 715], "signalled": 591, "signatur": [595, 597, 608, 624, 662, 665, 683, 715, 717, 739, 741, 748, 749, 757, 788, 810], "signature_invalid": 683, "signed": [24, 55, 127, 217, 375, 404, 487, 517, 585, 586, 588, 589, 590, 608, 611, 618, 678, 681, 688, 689, 714, 715, 717, 718, 721, 732, 743, 748, 762, 786], "signedcharact": 743, "signedness": [585, 586, 732], "signext": [598, 715], "signextimm": 608, "signif": [689, 715, 732, 765], "signific": [30, 223, 380, 493, 585, 586, 591, 594, 597, 598, 604, 610, 611, 649, 650, 670, 674, 680, 689, 700, 715, 717, 718, 725, 727, 746, 755, 762, 766, 774, 779, 788, 791, 812, 813, 818], "significand": 715, "significantly": [598, 604, 606, 611, 624, 640, 673, 677, 683, 694, 701, 705, 715, 717, 718, 749, 765, 766, 775, 776, 788, 809, 812], "signifient": 123, "signify": 715, "sigplan": [608, 680], "sigsegv": 700, "sigusr1": 717, "sil": 777, "silenc": 704, "silent": [610, 701], "silently": [642, 653, 654, 715], "silly": [594, 611, 676], "simd": [20, 123, 212, 370, 482, 585, 586, 591, 618, 620, 715, 746, 754, 755, 782, 785], "simd_benchmark": 752, "similar": [585, 586, 591, 595, 598, 600, 603, 607, 608, 610, 611, 612, 622, 625, 645, 649, 661, 662, 665, 669, 670, 671, 673, 675, 680, 681, 683, 686, 689, 690, 693, 700, 702, 704, 705, 710, 715, 717, 721, 724, 725, 727, 728, 729, 731, 732, 736, 743, 746, 749, 750, 751, 753, 755, 761, 767, 771, 772, 774, 776, 781, 785, 786, 788, 789, 790, 792, 808, 811, 812, 813, 816], "similarit": [669, 749], "similarity": [694, 734, 810], "similarly": [585, 586, 591, 594, 595, 597, 598, 602, 611, 632, 661, 662, 670, 673, 679, 688, 691, 693, 694, 708, 709, 715, 730, 734, 749, 766, 776, 780, 783, 786, 789, 791, 793, 815, 816], "simm13": 786, "simm21": [55, 404, 517], "simm32": [0, 2, 3, 4, 9], "simpl": [585, 586, 593, 594, 595, 597, 598, 599, 602, 606, 607, 608, 612, 617, 618, 620, 640, 641, 660, 661, 666, 669, 670, 672, 674, 675, 680, 681, 683, 685, 686, 691, 692, 693, 705, 708, 710, 714, 717, 719, 723, 726, 727, 728, 731, 751, 765, 766, 770, 771, 772, 774, 775, 780, 781, 785, 786, 788, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819], "simplecompil": [731, 794, 796], "simpleloopunroll": 782, "simpleproject": 606, "simplest": [586, 593, 604, 608, 661, 669, 685, 717, 721, 751, 766, 786, 792, 795, 809, 810], "simpletyp": 820, "simpletypekind": 743, "simpletypemod": 743, "simplevalu": 776, "simplicity": [680, 688, 749, 768, 808, 810], "simplif": [591, 602, 608, 661, 670, 688, 715, 732, 746, 749, 788, 792], "simplified": [585, 710, 721, 746, 749, 766, 770, 792, 794, 820], "simplify": [585, 586, 593, 608, 670, 680, 685, 692, 705, 709, 721, 731, 733, 747, 770, 776, 780, 811, 812, 813, 814, 816], "simplify_typ": 708, "simplifycfg": [613, 814], "simplifydemandedbit": 790, "simplifying": [603, 715, 749, 794], "simply": [585, 586, 591, 594, 602, 605, 608, 611, 612, 627, 645, 655, 661, 664, 665, 670, 673, 676, 679, 681, 683, 689, 699, 700, 701, 704, 706, 710, 715, 721, 723, 726, 728, 730, 731, 734, 736, 746, 749, 750, 751, 765, 766, 767, 768, 771, 776, 780, 781, 786, 787, 788, 809, 810, 811], "simt": [585, 591], "simul": [640, 715], "simulat": [597, 608, 640, 698], "simulated": [640, 714], "simulator": [670, 715, 779], "simultaneous": [595, 615, 717], "simultaneously": [585, 586, 597, 642, 654, 683, 700, 749, 762, 781, 785], "sin": [594, 662, 785, 786, 792, 794, 808, 809, 810, 811], "sinc": [585, 586, 591, 592, 594, 598, 599, 606, 608, 610, 611, 615, 622, 640, 645, 646, 662, 665, 667, 669, 670, 673, 676, 680, 681, 683, 685, 690, 693, 702, 704, 706, 708, 709, 712, 714, 715, 717, 719, 720, 722, 726, 727, 729, 730, 731, 732, 734, 736, 740, 744, 747, 749, 751, 757, 758, 761, 762, 764, 765, 768, 770, 771, 777, 786, 787, 788, 791, 792, 808, 809, 810, 811, 812, 813, 814, 816], "sinf": 662, "singl": [585, 586, 589, 590, 593, 595, 597, 598, 601, 602, 604, 606, 607, 608, 610, 612, 617, 622, 626, 627, 631, 632, 637, 638, 640, 642, 645, 646, 650, 654, 655, 661, 662, 666, 667, 669, 670, 671, 672, 673, 674, 680, 681, 683, 686, 688, 689, 693, 694, 700, 701, 704, 710, 711, 713, 714, 716, 717, 719, 721, 725, 726, 727, 728, 729, 731, 733, 734, 735, 736, 739, 740, 743, 744, 747, 748, 749, 750, 755, 758, 765, 769, 770, 775, 776, 779, 781, 782, 785, 786, 788, 789, 790, 792, 808, 810, 811, 814, 816, 817], "singleimpl": 715, "singleimplnam": 715, "singlesour": 779, "singlesourc": [752, 779], "singlestepping": 757, "singlethread": [591, 715], "singleton": [585, 586, 775], "singly": 680, "singular": [611, 715, 749], "sink": [594, 661, 755, 766], "sit": [591, 594, 607, 617, 673, 675, 680, 685, 713, 714, 721, 726, 746, 752, 757, 767, 768, 770, 781, 783, 795], "sitofp": 810, "situat": [585, 586, 591, 595, 604, 608, 610, 611, 640, 661, 662, 670, 673, 681, 693, 705, 708, 710, 714, 715, 724, 727, 746, 749, 760, 761, 772, 785, 786, 788, 796, 811], "situational": 761, "six": [595, 608, 665, 762, 774, 794], "sixkind": 715, "sixth": [665, 688, 786], "siz": [10, 11, 12, 13, 15, 16, 19, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 322, 323, 324, 325, 328, 329, 330, 331, 332, 334, 335, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 482, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 586, 589, 591, 594, 595, 596, 597, 598, 602, 606, 609, 611, 613, 615, 616, 618, 622, 624, 626, 631, 632, 640, 641, 642, 645, 646, 649, 650, 652, 655, 661, 666, 668, 674, 675, 678, 680, 681, 688, 689, 693, 694, 700, 710, 714, 715, 716, 717, 718, 721, 725, 727, 729, 731, 732, 735, 736, 738, 740, 743, 745, 746, 752, 757, 759, 761, 764, 765, 766, 768, 770, 772, 775, 776, 777, 779, 781, 782, 783, 785, 786, 788, 790, 791, 792, 795, 809, 810, 811, 812, 813, 814, 815, 816, 817], "sizabl": 749, "size1": 715, "size2": 715, "size3": 715, "size_t": [595, 680, 714, 717, 718, 731, 749, 792], "sized": [585, 586, 591, 598, 608, 617, 665, 681, 714, 715, 761, 776, 792], "sizem1": 715, "sizem1bitwidth": 715, "sizeof": [645, 665, 676, 715, 729, 738, 740, 743, 749, 766, 770], "sizeofimm": 786, "sjlj": 703, "sjljehprepar": 673, "sk_buff": 608, "sk_circl": 708, "sk_lastsquar": 708, "sk_otherspecialsquar": 708, "sk_somewhatspecialsquar": 708, "sk_specialsquar": 708, "sk_squar": 708, "sketched": 665, "skip": [585, 586, 598, 607, 608, 611, 612, 626, 643, 662, 680, 686, 705, 715, 719, 725, 733, 749, 751, 765, 779, 786, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818], "skipbasicblock": 733, "skipfunct": 733, "skiploop": 733, "skipmodul": 733, "skipped": [597, 646, 660, 666, 685, 686, 691, 710, 733, 770, 782, 785, 787], "skipping": [632, 665, 749, 765, 766, 808], "skipscc": 733, "skylak": 632, "sl": [585, 586], "slab": 714, "slash": [715, 757], "slc": [0, 2, 3, 4, 8, 9, 591], "sle": 715, "sleb128": 586, "sled": 789, "slh": 766, "slic": [585, 586, 638, 644, 775, 776], "slicing": 749, "slid": [585, 609, 662, 749], "slight": [675, 704], "slightly": [593, 597, 650, 651, 662, 669, 683, 701, 715, 719, 725, 766, 770, 776, 788, 811, 813, 814], "slliw": 757, "sln": 685, "slot": [585, 586, 591, 608, 624, 640, 665, 673, 678, 700, 713, 715, 764, 768, 770, 786, 814], "slow": [603, 604, 608, 611, 618, 631, 662, 673, 676, 678, 680, 683, 685, 694, 715, 717, 727, 728, 745, 749, 761, 766, 788], "slow_path": 715, "slowdown": [700, 717], "slowest": 617, "slowing": 685, "slowly": [670, 683, 715, 731], "slp": [716, 755], "slt": [715, 719], "sm": [645, 688, 729], "sm_20": [608, 729], "sm_21": 608, "sm_30": [608, 662], "sm_35": [608, 662], "sm_xx": 662, "small": [585, 586, 590, 591, 595, 598, 602, 603, 605, 607, 608, 610, 611, 613, 620, 624, 626, 632, 635, 640, 646, 661, 664, 665, 666, 667, 670, 678, 680, 681, 688, 689, 693, 694, 700, 708, 714, 715, 727, 729, 733, 741, 746, 747, 748, 749, 752, 761, 765, 766, 768, 771, 772, 776, 781, 785, 788, 793, 796, 816, 818], "smallconst": 768, "smallest": [589, 612, 667, 709, 715, 719], "smallsetvector": 749, "smallvector": [611, 816], "smallvectorhead": 749, "smallvectorimpl": [749, 775, 790], "smart": [611, 617, 661, 715, 735], "smartphon": 724, "smashed": 766, "smashing": 715, "smaslov": 762, "smax": 590, "smel": 749, "smith": [611, 762], "smithw": 752, "smloc": 775, "smoothly": 607, "smovq": 608, "smp": [595, 788], "smrang": 775, "smstateen": 757, "smt": 596, "smul_loh": 608, "sn": [645, 688], "sn_map": 727, "sn_mapl": 727, "sn_mapr": 727, "snan": 715, "snapshot": [594, 672, 717], "sneak": 611, "snippet": [670, 680, 710, 749, 788], "snmalloc": 606, "snork": 776, "so": [585, 586, 588, 589, 591, 593, 594, 595, 596, 597, 601, 602, 604, 606, 608, 609, 610, 611, 612, 613, 617, 618, 626, 632, 638, 640, 645, 657, 659, 661, 662, 664, 665, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 688, 691, 692, 693, 694, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 719, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 733, 736, 740, 741, 743, 744, 745, 746, 747, 749, 750, 751, 753, 755, 758, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 786, 787, 788, 789, 790, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "social": [609, 793], "socket": [714, 731], "soffset": [0, 2, 3, 4, 8, 9], "soft": [620, 670, 765], "softfp": 705, "softwar": [586, 591, 607, 611, 620, 663, 670, 672, 680, 704, 705, 715, 716, 728, 735, 753, 766, 781, 786, 788, 810, 817, 818], "sol": [670, 694, 715], "solar": 683, "solaris2": 788, "solely": [670, 715, 726, 749], "solic": [610, 716], "solid": 704, "solut": [586, 595, 597, 606, 608, 661, 665, 672, 683, 685, 715, 731, 749, 751, 765, 772, 788, 795, 814, 817], "solution_1": 715, "solution_2": 715, "solv": [585, 594, 606, 608, 670, 681, 694, 698, 707, 710, 749, 765, 813, 817], "solved": [751, 814, 817], "solving": 608, "som": [585, 586, 589, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 617, 618, 621, 622, 626, 631, 632, 634, 640, 641, 643, 645, 657, 660, 661, 662, 663, 664, 665, 667, 669, 670, 671, 673, 674, 676, 677, 678, 679, 680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 696, 698, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 724, 726, 727, 728, 730, 731, 732, 735, 736, 741, 744, 745, 746, 747, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 774, 775, 776, 777, 779, 780, 781, 782, 784, 785, 786, 787, 788, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "some_bss": 653, "some_crash_test": 751, "some_int": 776, "some_op": 721, "somebody": 610, "someclass": 776, "somedag": 776, "somefancya": 788, "somefunc": 611, "somefunc1": 749, "somefunc2": 749, "somehow": [665, 715, 736, 749, 788], "somellvmdev": 728, "somelocalpath": 717, "somemap": 611, "somemulticlass": 776, "somenamefromast": 731, "someon": [601, 608, 609, 610, 645, 664, 670, 671, 672, 674, 678, 680, 690, 722, 728, 751, 760, 762, 767], "someone_els": 610, "somerec": 775, "sometest": 780, "something": [591, 593, 594, 608, 610, 611, 612, 641, 661, 665, 670, 674, 683, 685, 686, 687, 693, 694, 701, 704, 708, 709, 712, 715, 717, 719, 722, 726, 727, 728, 730, 731, 741, 746, 747, 749, 751, 761, 766, 767, 770, 771, 774, 786, 790, 792, 809, 810, 811, 812, 813, 815, 816, 817, 818], "sometim": [598, 602, 603, 608, 610, 611, 612, 640, 661, 662, 670, 681, 683, 693, 701, 708, 715, 717, 727, 730, 740, 746, 747, 749, 751, 765, 766, 774, 775, 776, 786, 792], "somety": 715, "somewhat": [594, 595, 611, 665, 670, 672, 694, 715, 749, 751, 753, 766, 770, 776, 780, 784, 809, 813], "somewhatspecialsquar": 708, "somewher": [612, 673, 708, 715, 732, 751, 780, 781, 788, 810, 813], "sonnenberg": 751, "sony": 762, "soon": [640, 670, 686, 701, 714, 717, 718, 731, 758, 772, 788, 795, 809, 812], "sophist": [608, 780], "sophisticated": [680, 715, 722, 767, 788], "sort": [595, 606, 611, 641, 645, 661, 662, 670, 676, 709, 714, 715, 732, 749, 751, 752, 775, 776, 790, 793, 809, 811, 812, 814, 817], "sorted": [611, 615, 661, 666, 715, 743, 751, 765, 774], "sorting": [765, 789], "sortord": 790, "sought": [585, 715], "sound": [601, 717, 724], "sourc": [117, 205, 310, 580, 587, 588, 589, 590, 593, 594, 596, 602, 603, 604, 607, 608, 612, 613, 615, 616, 617, 618, 621, 625, 626, 628, 640, 643, 645, 659, 660, 661, 662, 664, 670, 672, 673, 675, 678, 680, 681, 682, 685, 689, 700, 705, 706, 707, 709, 710, 714, 716, 717, 718, 719, 726, 727, 728, 729, 731, 732, 736, 744, 747, 749, 751, 753, 756, 758, 759, 762, 763, 766, 767, 768, 770, 771, 774, 775, 777, 779, 780, 781, 784, 786, 787, 788, 789, 790, 792, 793, 796, 811, 815, 817], "source0": 788, "source_filenam": 715, "source_i386": 655, "source_x86_64": 655, "sourcebas": [664, 684], "sourcebasedcodecoverag": 666, "sourcecontrolbaserevis": 747, "sourced": 586, "sourcefil": 626, "sourcefilecount": 736, "sourcefilenameindex": 736, "sourceforg": 752, "sourceinfosiz": 736, "sourceloc": 816, "sourcewar": [699, 717], "sous": 123, "southern": 591, "sp": [591, 608, 643, 675, 715, 721, 723, 725, 748, 764, 777, 786, 816], "sp3": [589, 590], "spac": [120, 209, 314, 479, 584, 587, 588, 596, 598, 606, 609, 612, 618, 626, 632, 641, 645, 662, 670, 673, 680, 682, 683, 685, 688, 689, 712, 713, 714, 715, 720, 724, 725, 727, 732, 741, 749, 750, 751, 760, 764, 765, 766, 768, 770, 771, 774, 776, 786, 788, 791, 792, 811, 814, 817], "space0": 715, "space1": 715, "space2": 715, "spadin": 746, "spaghet": 818, "spam": 772, "spanish": 761, "spanning": 788, "sparc": [595, 608, 642, 683, 715, 753, 776, 786, 788], "sparcasmprint": [608, 786], "sparccallingconv": 786, "sparcel": 642, "sparcgenregisterinfo": 786, "sparcgensubtarget": 786, "sparcinstrformat": 786, "sparcinstrinfo": 786, "sparciseldagtodag": 786, "sparcisellowering": 786, "sparclet": 786, "sparclit": 786, "sparclite86x": 786, "sparcreg": 786, "sparcregisterinfo": 786, "sparcsubtarget": 786, "sparctargetasminfo": 786, "sparctargetlowering": 786, "sparctargetmachin": 786, "sparcv8": [595, 715], "sparcv9": 715, "sparingly": [611, 678], "spars": [646, 674, 683, 716, 733, 749, 751, 791], "sparsecheckout": 751, "sparsely": [608, 791], "spawn": [717, 731], "spcc": 786, "spdx": [611, 794, 795, 796, 797], "spe": 663, "speak": [609, 662, 760], "speaker": 724, "speaking": [607, 770, 812, 813], "spec": [662, 709, 715, 721, 722, 749, 765, 766, 779, 792], "spec95": 780, "speccpu2000": [779, 780], "speccpu2006": 780, "special": [84, 587, 589, 590, 591, 595, 597, 598, 607, 608, 611, 612, 640, 641, 642, 654, 661, 662, 666, 668, 669, 670, 673, 675, 677, 680, 681, 683, 703, 706, 709, 715, 717, 721, 725, 726, 727, 730, 734, 735, 736, 748, 749, 751, 766, 768, 770, 771, 774, 776, 781, 785, 786, 814, 815, 816, 818], "specialfp": 776, "specializ": [595, 617, 661, 691, 715, 746, 749, 762, 765, 792], "specialized": [585, 586, 595, 608, 611, 672, 694, 714, 726, 749, 759, 765, 786, 793, 817], "specializing": [777, 792], "specially": [608, 715, 731, 749, 768, 788], "specialsquar": 708, "specialty": 749, "specif": [14, 79, 98, 112, 114, 172, 267, 288, 306, 308, 333, 350, 430, 449, 470, 543, 562, 576, 578, 585, 586, 587, 589, 591, 595, 598, 606, 608, 612, 613, 615, 617, 618, 622, 626, 640, 660, 661, 663, 673, 678, 680, 683, 685, 710, 715, 717, 721, 736, 749, 759, 765, 768, 774, 775, 776, 777, 781, 786, 787, 788, 791, 792, 810, 817], "specifi": [598, 612, 633, 666, 675, 729, 749, 774], "specific": [5, 27, 129, 175, 220, 270, 378, 435, 490, 548, 585, 586, 588, 591, 593, 595, 596, 598, 601, 603, 604, 610, 611, 612, 617, 620, 626, 631, 643, 649, 661, 662, 666, 670, 671, 673, 674, 676, 679, 680, 681, 682, 683, 685, 688, 691, 693, 694, 695, 696, 698, 703, 704, 706, 707, 714, 715, 716, 717, 720, 721, 722, 723, 724, 726, 728, 729, 730, 731, 732, 733, 744, 746, 748, 749, 756, 757, 758, 760, 761, 762, 766, 768, 770, 771, 772, 774, 775, 776, 777, 785, 786, 788, 789, 791, 792, 795, 808, 809, 813, 815, 818], "specifically": [586, 593, 595, 606, 608, 610, 611, 662, 670, 678, 679, 680, 681, 683, 707, 715, 719, 720, 726, 730, 733, 746, 749, 754, 765, 766, 768, 771, 777, 780, 786, 788, 789, 811, 818], "specificity": 715, "specified": [18, 20, 24, 27, 28, 30, 31, 32, 36, 37, 38, 55, 66, 83, 84, 85, 93, 96, 97, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 117, 120, 127, 129, 130, 145, 157, 176, 186, 187, 189, 190, 191, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 209, 211, 212, 213, 217, 220, 221, 223, 254, 271, 281, 282, 283, 286, 287, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 314, 340, 341, 352, 354, 355, 368, 370, 371, 375, 378, 379, 380, 381, 382, 386, 387, 388, 404, 434, 436, 444, 447, 448, 451, 452, 455, 456, 457, 467, 468, 469, 470, 471, 472, 479, 481, 482, 483, 487, 490, 491, 493, 494, 495, 499, 500, 501, 517, 547, 549, 557, 560, 561, 564, 565, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 584, 585, 586, 587, 588, 589, 590, 591, 592, 595, 598, 600, 601, 602, 604, 606, 607, 608, 611, 612, 613, 615, 617, 618, 620, 622, 623, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 640, 641, 642, 643, 645, 646, 649, 650, 651, 653, 654, 655, 657, 659, 660, 665, 672, 673, 675, 676, 679, 680, 683, 689, 703, 709, 714, 715, 717, 721, 731, 733, 736, 740, 744, 746, 748, 749, 750, 759, 761, 765, 768, 770, 771, 774, 775, 776, 777, 780, 781, 782, 785, 786, 788, 792, 810, 812, 813, 814, 815, 816], "specify": [68, 84, 85, 96, 97, 98, 99, 113, 114, 117, 159, 176, 186, 187, 188, 202, 205, 256, 271, 286, 287, 288, 289, 307, 308, 310, 352, 420, 436, 447, 448, 449, 450, 469, 470, 532, 549, 560, 561, 562, 563, 577, 578, 580, 585, 586, 589, 591, 594, 595, 598, 601, 604, 606, 608, 612, 615, 617, 618, 620, 622, 623, 626, 628, 630, 632, 633, 636, 637, 640, 641, 642, 643, 645, 646, 647, 652, 655, 659, 660, 661, 662, 665, 666, 672, 673, 679, 680, 681, 683, 700, 715, 717, 719, 721, 722, 728, 729, 731, 736, 746, 748, 749, 755, 768, 770, 775, 776, 779, 780, 781, 786, 788, 789, 790, 792, 810, 813, 815, 817], "specifying": [585, 586, 591, 606, 617, 632, 643, 649, 650, 675, 715, 721, 730, 741, 749, 775, 776, 777, 779, 781, 782, 785, 786, 809], "spectr": [715, 756], "spectre11": 766, "spectreattack": 766, "specul": [595, 640, 662, 673, 715, 731, 756, 770], "speculat": [598, 715, 766, 770], "speculated": [710, 715, 766], "speculative_load_hardening": [598, 715], "speculativej": 731, "speculatively": [594, 678, 715, 733, 766], "speed": [604, 606, 611, 632, 661, 662, 683, 717, 719, 726, 757, 781, 814], "speedup": 766, "spelling": [611, 660, 670, 757, 774, 781], "spenc": 771, "spend": 617, "spending": [785, 790], "spent": [640, 790], "spflag": 765, "spflagdefinit": 816, "spgo": 616, "spgr": 123, "sphinx": [606, 682, 683, 722], "sphinx_execut": 606, "sphinx_output_html": 606, "sphinx_output_man": 606, "sphinx_warnings_as_error": 606, "sphinxquickstarttemplat": 767, "spi": 591, "spi_shader_user_data_ps_0": 591, "spi_shader_user_data_ps_1": 591, "spi_shader_user_data_ps_5": 591, "spiffygrep": 661, "spiffysh": 661, "spik": 701, "spill": [585, 586, 605, 608, 618, 620, 665, 690, 715, 765, 768, 770, 786], "spill_threshold": 591, "spillalignment": 786, "spilled": [586, 591, 605, 608, 665, 748, 766, 768, 770, 786], "spiller": 618, "spilling": [585, 586, 591, 766, 786], "spillsiz": 786, "spilltabl": 591, "spir": [609, 660, 749, 762], "spirv": 660, "spisd": 786, "spl": 777, "splat": [608, 715, 716, 757], "splatting": 731, "splic": 749, "split": [585, 586, 591, 595, 597, 608, 610, 627, 642, 645, 655, 661, 662, 665, 670, 674, 681, 688, 701, 714, 715, 717, 721, 726, 727, 731, 740, 746, 750, 751, 764, 776, 781, 786], "split64": 715, "splitblock": 714, "splitdebugfilenam": 715, "splitting": [602, 608, 665, 694, 701, 715], "sponsor": [701, 751], "sponsoring": 701, "sponsorship": 670, "spot": [715, 717, 746], "spotting": 714, "spotty": 715, "spread": [715, 746], "spreadsheet": 790, "spring": 662, "sprinkl": 749, "spurious": 715, "spuriously": [715, 781], "spus": 786, "sp\u00e9cif": [1, 6, 7, 8], "sp\u00e9cifi": [122, 336], "sq": 640, "sq_rsrc_img_1d": 589, "sq_rsrc_img_1d_array": 589, "sq_rsrc_img_2d": 589, "sq_rsrc_img_2d_array": 589, "sq_rsrc_img_2d_msa": 589, "sq_rsrc_img_2d_msaa_array": 589, "sq_rsrc_img_3d": 589, "sq_rsrc_img_cub": 589, "sqlit": 717, "sqrt": [785, 792], "squar": [670, 708, 715, 792], "squared": 715, "squash": [728, 751], "squashed": 597, "squeu": 640, "sr": [650, 714], "sra": 776, "sramecc": 591, "srand": 717, "src": [0, 2, 3, 4, 8, 9, 606, 608, 625, 673, 689, 703, 707, 715, 736, 744, 749, 750, 758, 780, 786, 811], "src0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 117, 205, 213, 310, 371, 483, 580, 589, 590, 689], "src0_sel": [0, 3, 4, 7, 8, 9, 591], "src1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 117, 205, 213, 310, 371, 483, 580, 587, 589, 608, 689, 776, 777], "src1_sel": [0, 3, 4, 7, 8, 9, 591], "src2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 117, 205, 213, 310, 371, 483, 580, 608, 689, 776, 777], "src3": [0, 2, 3, 4, 8, 9, 117, 205, 310, 580], "src_bas": 770, "src_offset": 770, "src_private_bas": 591, "src_reg": 608, "src_root": 683, "src_shared_bas": 591, "srcarglist": 715, "srckey": 714, "srcloc": 715, "srcvalu": 770, "srd": 591, "srem": 608, "sret": [591, 598, 715], "srgp": 591, "srl": [585, 586, 776], "sro": [595, 662, 678, 716, 733, 814], "srsrc": [0, 2, 3, 4, 8, 9], "ss": [608, 628, 776], "ssa": [673, 678, 680, 689, 716, 726, 749, 765, 770, 786, 788, 810, 812, 813, 814, 817, 818], "ssamp": [0, 2, 3, 4, 9], "ssca2v2": 752, "sscabmk": 752, "sscofpmf": 757, "ssd": 685, "sse": [608, 711, 715, 754, 786, 815], "sse2": [715, 781], "sse4": 785, "sse41": 612, "ssecall": 786, "ssh": 779, "ssize_t": 611, "ssp": [598, 715, 765], "sspreq": [598, 715], "sspstrong": [598, 715], "ssrc": [0, 2, 3, 4, 9], "ssrc0": [0, 2, 3, 4, 9], "ssrc1": [0, 2, 3, 4, 9], "ssrc2": [0, 2, 3, 4, 9], "sstc": 757, "sstream": 611, "ssupport": 586, "st": [628, 650, 715, 729, 786], "st0": [776, 777, 786], "st1": [597, 608, 777, 786], "st17basic_string_viewicst11char_traitsice": 628, "st2": 777, "st3": 777, "st3__1": 628, "st4": 777, "st5": 777, "st6": 777, "st7": 777, "st7__cxx11": 628, "st_shndx": 757, "st_valu": 591, "stab": 765, "stability": [670, 751], "stabl": [591, 611, 629, 632, 670, 701, 707, 710, 715, 718, 733, 749, 772, 786], "stack": [594, 605, 611, 618, 641, 643, 649, 650, 651, 665, 673, 678, 683, 689, 700, 703, 713, 716, 721, 723, 726, 731, 747, 749, 756, 757, 759, 765, 784, 786, 788, 789, 791, 792, 794, 796, 814, 816, 818], "stack_end": 668, "stack_frame_size_in_byt": 591, "stack_loc": 608, "stack_siz": 618, "stackarity": 680, "stacked": 680, "stackentr": 680, "stackentry": 680, "stackframesiz": 680, "stackgrowsdown": 786, "stackmap": [649, 650, 680, 715], "stackoffset": 680, "stackprotectorcheck": 715, "stackrestor": 713, "stacksafety": [715, 746], "stacksav": 713, "stacksiz": 759, "stacksizessect": 608, "staff": 760, "stag": [595, 604, 606, 608, 613, 626, 661, 662, 670, 672, 701, 704, 707, 714, 715, 717, 718, 727, 729, 747, 754, 758, 762, 769, 786, 790, 793, 809], "stage1": [593, 672, 704], "stage2": [593, 604, 606, 672, 704], "stage3": 593, "staged": 755, "stageselectioncat": 661, "staging": [672, 701], "stal": [591, 765], "stall": [640, 766], "stamp": 741, "stanc": 611, "stand": [608, 610, 611, 662, 670, 703, 715, 736, 749, 781, 788, 795, 796, 797, 809], "standalon": [608, 617, 679, 703, 705, 751, 759, 761, 816, 817], "standalone_test": 617, "standard": [84, 585, 590, 591, 593, 594, 595, 597, 601, 606, 608, 612, 613, 617, 618, 620, 622, 623, 624, 627, 630, 631, 632, 633, 637, 639, 640, 641, 642, 643, 645, 646, 649, 650, 651, 653, 654, 655, 659, 660, 661, 663, 664, 670, 673, 675, 676, 677, 678, 680, 682, 689, 691, 704, 708, 714, 718, 721, 729, 731, 746, 754, 761, 767, 770, 774, 775, 776, 777, 781, 785, 786, 788, 791, 795, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "standardized": [585, 595, 611, 670, 781], "standpoint": 749, "star": 752, "start": [80, 173, 268, 431, 544, 585, 586, 591, 593, 594, 598, 602, 604, 611, 612, 613, 617, 626, 640, 642, 643, 644, 645, 655, 664, 665, 666, 667, 668, 670, 672, 674, 678, 681, 682, 683, 685, 686, 693, 694, 701, 706, 710, 714, 717, 721, 725, 727, 728, 729, 734, 746, 747, 749, 751, 753, 758, 761, 765, 766, 767, 776, 785, 786, 789, 790, 791, 792, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "start_valu": 715, "startaddress": 655, "started": [593, 606, 611, 640, 664, 670, 676, 680, 682, 688, 705, 707, 731, 747, 749, 762, 763, 776, 784, 787, 788, 793, 810, 811], "startexpr": [812, 813, 814, 815, 816], "startfilenam": 655, "starting": [288, 306, 308, 585, 586, 591, 593, 594, 598, 606, 608, 611, 612, 613, 628, 640, 642, 645, 646, 654, 666, 667, 672, 674, 675, 678, 680, 683, 688, 689, 710, 715, 717, 722, 726, 727, 746, 747, 766, 767, 770, 774, 775, 776, 781, 787, 788, 791, 810, 811, 812, 813, 816, 819], "startlin": 655, "starttim": 775, "startup": [617, 683, 715, 729, 731, 745, 795, 796], "startval": [812, 813, 814, 815, 816], "stash": 708, "stat": [589, 590, 594, 595, 596, 597, 601, 602, 605, 607, 608, 610, 618, 620, 640, 659, 660, 661, 662, 665, 666, 669, 670, 672, 673, 674, 677, 680, 681, 691, 693, 694, 698, 701, 705, 710, 714, 715, 716, 717, 719, 721, 722, 726, 728, 730, 731, 738, 746, 747, 751, 753, 757, 760, 761, 762, 765, 767, 768, 770, 771, 772, 774, 775, 779, 780, 785, 786, 788, 791, 792, 795, 809, 810, 812, 814, 816, 818], "stated": [595, 707, 715, 731, 772], "stateful": 746, "stateless": [595, 730, 788], "statepoint": 770, "statepoint_token": 715, "static": [585, 586, 591, 594, 595, 596, 602, 604, 605, 606, 608, 613, 615, 616, 620, 636, 640, 660, 661, 665, 671, 674, 676, 680, 681, 683, 696, 700, 703, 706, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 727, 731, 749, 750, 761, 765, 766, 770, 774, 775, 786, 787, 788, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818], "static_cast": [814, 815, 816], "static_library": 705, "statically": [594, 595, 604, 606, 608, 640, 661, 665, 678, 680, 681, 683, 703, 706, 715, 717, 719, 725, 750, 776, 783, 788, 789, 811], "staticanalyz": 671, "stating": [670, 753], "statistic": [594, 596, 615, 616, 618, 620, 624, 626, 659, 660, 666, 717, 750, 759, 762, 779, 780, 789], "statistical": [624, 750], "statistically": 779, "status": [20, 212, 370, 482, 589, 591, 603, 606, 609, 611, 638, 668, 670, 697, 701, 715, 738, 747, 757, 768, 772, 784], "statuscheck": 751, "statut": 123, "stay": [665, 682, 727, 740, 792], "staying": 718, "stb_local": 715, "std": [628, 643, 661, 673, 676, 693, 700, 708, 714, 727, 729, 730, 731, 743, 752, 761, 766, 774, 775, 779, 785, 786, 790, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816], "stdarg": 715, "stdcall": 608, "stddef": 717, "stderr": [611, 612, 613, 717, 733, 749, 781, 787, 809, 810, 811, 812, 813, 814, 815, 816], "stdin": [612, 626, 632, 655, 765, 781, 816], "stdint": 717, "stdio": [683, 699, 703, 714, 718, 771], "stdlib": [606, 683], "stdlibc": 606, "stdout": [617, 626, 628, 631, 632, 715, 717, 781, 820], "steady": [677, 761], "steensgaard": 594, "steer": 670, "steinberg": 752, "stellard": 707, "stem": 662, "stemming": 749, "step": [585, 586, 590, 591, 593, 594, 602, 604, 606, 608, 610, 662, 665, 668, 669, 670, 672, 673, 674, 680, 681, 683, 686, 689, 694, 698, 703, 704, 705, 706, 708, 710, 712, 714, 717, 718, 719, 727, 728, 729, 746, 747, 749, 753, 755, 758, 775, 776, 780, 783, 784, 788, 792, 810, 811, 812, 813, 814, 815, 816, 819], "stepexpr": [812, 813, 814, 815, 816], "stepped": 765, "stepping": [681, 710, 788, 816], "stepval": [812, 813, 814, 815, 816], "stepwithcompactencoding": 673, "stev": 762, "steveklabnik": 762, "stick": [602, 702, 724, 749], "sticking": 751, "sticky": 715, "still": [585, 586, 589, 591, 597, 601, 602, 603, 605, 608, 611, 612, 617, 626, 640, 642, 654, 661, 662, 665, 666, 670, 673, 676, 680, 683, 685, 688, 690, 692, 693, 694, 698, 699, 700, 701, 705, 706, 708, 709, 710, 713, 714, 715, 717, 719, 720, 726, 727, 730, 731, 733, 745, 746, 747, 749, 751, 752, 760, 761, 762, 763, 765, 766, 768, 770, 771, 772, 776, 780, 783, 785, 787, 788, 792, 811, 812, 813, 814, 817], "still_poison": 715, "stingy": 749, "stitched": 740, "stkmaprecord": [768, 770], "stksizerecord": 768, "stl": [611, 676, 683, 717, 746, 749, 792], "stlextr": [810, 811, 812, 813, 814, 815, 816], "stm": 715, "stmt": [660, 782], "stn_undef": 591, "stoney": 591, "stop": [585, 606, 609, 611, 617, 629, 643, 645, 660, 668, 670, 673, 674, 680, 694, 701, 707, 714, 715, 717, 719, 721, 726, 765, 766, 788, 791], "stopgap": 749, "stopiter": 665, "stopped": [665, 668, 714, 715, 789], "stopper": 758, "stopping": [680, 717, 809], "stor": [98, 99, 188, 279, 280, 288, 289, 290, 291, 449, 450, 562, 563, 585, 586, 589, 591, 594, 595, 597, 599, 607, 612, 661, 665, 666, 669, 673, 675, 677, 680, 681, 683, 685, 688, 689, 693, 696, 703, 710, 711, 716, 717, 720, 721, 726, 727, 729, 730, 732, 736, 740, 749, 754, 755, 757, 761, 764, 765, 768, 769, 770, 776, 786, 794, 795, 808, 814, 815, 816], "storag": [585, 586, 591, 596, 598, 608, 665, 680, 683, 714, 725, 729, 765], "storageclass": 820, "storebarri": 640, "stored": [107, 196, 288, 301, 306, 308, 457, 571, 585, 586, 591, 594, 595, 597, 598, 606, 608, 617, 626, 665, 666, 672, 673, 680, 688, 689, 693, 698, 711, 713, 715, 720, 728, 731, 736, 740, 746, 748, 749, 750, 751, 759, 761, 765, 766, 768, 770, 775, 780, 783, 786, 809, 814], "storemerg": 665, "storeregtoaddr": 786, "storeregtostackslot": [608, 786], "storesdnod": 786, "storing": [589, 591, 597, 599, 665, 666, 677, 680, 715, 749, 766], "story": [685, 762, 765], "str": [597, 631, 661, 666, 715, 729, 749, 774, 775, 792, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 820], "str1": 776, "str2": 776, "str_offset": 765, "straight": [594, 608, 632, 662, 711, 727, 728, 749, 770, 771, 772, 809], "straightforward": [597, 608, 676, 708, 714, 749, 751, 761, 765, 776, 786, 788, 795, 808, 810, 811, 812, 813, 814], "strang": [597, 814], "strateg": [595, 603, 665, 715, 749, 770, 772], "strategy": [595, 603, 608, 661, 665, 680, 725, 732, 749, 751, 766, 770, 814], "stray": [757, 781], "strconcat": [776, 786], "stream": [27, 129, 220, 378, 490, 585, 586, 590, 591, 598, 608, 611, 612, 613, 615, 622, 623, 627, 630, 631, 633, 637, 641, 642, 643, 650, 651, 653, 654, 655, 659, 666, 683, 714, 715, 717, 735, 749, 752, 759, 765, 766, 785, 786, 788, 791, 792, 809], "streamblock": 740, "streamclust": 752, "streamdirectory": 740, "streaming": 792, "streamlining": 603, "streamoutt": 591, "streamsiz": 740, "strength": [585, 595, 608, 609, 661, 678, 715, 749, 793, 818], "strengthen": 640, "stress": [611, 616, 679], "stressed": 719, "stressing": 679, "strex": 595, "strict": [27, 129, 220, 378, 490, 592, 595, 597, 612, 670, 678, 688, 715, 717, 719, 727, 731, 749, 765, 777, 810], "strict_": 592, "strict_fadd": 592, "strict_fp_round": 592, "strictfp": [598, 715], "strictly": [612, 673, 683, 715, 728, 729, 749, 765, 770, 771, 810, 812, 815], "strid": [34, 132, 225, 384, 497, 591, 715, 752], "strided": 755, "strik": 670, "striking": [761, 810], "strikingly": 813, "string": [585, 591, 598, 600, 604, 606, 607, 608, 611, 616, 617, 618, 620, 622, 626, 631, 636, 640, 642, 643, 644, 645, 646, 647, 649, 650, 655, 660, 661, 675, 683, 694, 700, 711, 712, 721, 723, 728, 729, 736, 740, 741, 744, 746, 757, 761, 765, 770, 771, 774, 775, 776, 777, 781, 786, 788, 789, 792, 794, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816], "string1": 776, "string2": 776, "string_view": [628, 700], "stringlength": 765, "stringlengthexpress": 765, "stringly": 607, "stringmap": 661, "stringmapentry": 749, "stringrecty": 775, "stringref": [611, 661, 714, 731, 765, 774, 775, 790, 792, 794, 795, 796, 797, 814, 815, 816], "stringsort": 611, "stringswitch": 774, "stringwithcstring": 765, "stringwithspecialstring": 765, "strip": [602, 606, 616, 627, 634, 642, 643, 659, 661, 670, 710, 714, 736, 781], "stripped": [642, 654, 714, 748, 765], "stripping": [616, 626, 659, 714, 715, 718, 746, 749], "strippointercast": 611, "striv": [609, 611, 698, 762, 781], "strlen": 749, "strong": [585, 586, 591, 595, 610, 612, 670, 676, 678, 701, 714, 715, 725, 727, 749, 761, 770], "strongest": 766, "strongly": [604, 607, 610, 611, 640, 667, 669, 670, 678, 680, 700, 701, 705, 706, 716, 719, 747, 761, 772, 812, 814, 817, 818], "stroustrup": 749, "strr": 786, "strtab": [591, 598, 759], "strtab_blob": 598, "strtod": [661, 808, 809, 810, 811, 812, 813, 814, 815, 816], "strtol": 661, "struct": [591, 598, 608, 612, 660, 661, 662, 665, 673, 675, 678, 680, 713, 726, 735, 736, 739, 740, 741, 743, 749, 765, 766, 774, 783, 785, 786, 788, 792, 814, 816, 817], "struct_anon": 598, "struct_nam": 598, "struct_named": 598, "structtyp": 749, "structur": [591, 594, 595, 598, 608, 611, 612, 629, 631, 645, 666, 669, 673, 678, 680, 681, 683, 685, 688, 691, 694, 711, 714, 716, 717, 718, 719, 720, 722, 728, 730, 732, 736, 740, 741, 744, 746, 755, 765, 767, 774, 777, 786, 788, 791, 792, 794, 809, 810, 812, 813, 814, 816, 817], "structural": [610, 616, 661, 666, 715, 755, 817], "structurally": [598, 679, 715], "structured": [591, 598, 602, 640, 649, 650, 666, 673, 715, 717, 726, 765, 785, 818], "structuring": [787, 788], "struggled": 683, "stryjewsk": 746, "stt_amdgpu_hsa_kernel": 591, "stt_fil": [642, 654], "stt_func": [591, 642], "stt_gnu_ifunc": 642, "stt_notyp": 591, "stt_object": [591, 642], "stt_section": 642, "stub": [608, 663, 700, 714, 715, 727, 731, 749, 786, 796, 797], "stubsmgr": 731, "stuck": [752, 817], "student": 664, "studio": [593, 606, 675, 683, 684, 703, 728, 757, 765], "study": [716, 717], "studying": [678, 750], "stuff": [607, 608, 661, 722, 749, 767, 780, 788, 792, 811, 812, 814, 815, 816], "stuffing": 612, "stumped": 786, "stupid": 602, "stwu": 608, "sty": 777, "styl": [586, 591, 593, 595, 602, 612, 616, 617, 620, 621, 622, 626, 627, 640, 642, 643, 650, 655, 661, 665, 670, 680, 719, 721, 736, 749, 753, 756, 757, 766, 772, 774, 775, 776, 789, 809, 814, 817], "styled": 661, "styleguid": 753, "stylistic": [611, 776], "sub": [589, 595, 598, 603, 604, 606, 607, 608, 612, 617, 640, 665, 670, 674, 675, 683, 689, 707, 719, 727, 749, 755, 757, 772, 774, 776, 777, 781, 786, 810, 815], "sub1": 612, "sub32rr": 765, "sub_32": 721, "sub_8b": 721, "sub_r": 776, "sub_rr": 776, "subblock": 598, "subcl": [594, 608, 661, 708, 721, 765, 775, 776, 786, 788], "subclass": [594, 608, 611, 661, 680, 708, 714, 749, 755, 775, 776, 777, 788, 792, 809], "subclassed": [608, 749, 786], "subclassoptionaldat": 727, "subcommand": [788, 789, 790], "subcommunit": 670, "subcomponent": [585, 586, 670], "subd": 751, "subdirector": [606, 607, 617, 683, 779, 780, 786], "subdirectory": [606, 607, 617, 705, 750, 779, 780, 781, 786], "subdivided": 715, "subel": [715, 716], "subexpress": [594, 716, 766, 809, 811, 812, 813, 814], "subfield": 776, "subfold": 672, "subgraph": [667, 669, 719, 746, 755], "subgroup": 591, "subject": [586, 591, 605, 608, 611, 660, 670, 690, 693, 700, 707, 714, 715, 730, 747, 749, 782, 792], "subl": [608, 612], "sublist": 607, "subloop": 782, "subm": [601, 602, 670, 682, 683, 714, 728, 747], "submiss": 670, "submit": 747, "submitted": [586, 664, 670, 728], "submitting": [610, 682, 779], "submodul": 751, "subnormal": [715, 729], "subobject": 783, "suboptimal": 751, "subpath": 617, "subprogram": [585, 586, 591, 715, 765, 816], "subproject": [606, 611, 670, 671, 682, 683, 704, 728, 751, 757, 781], "subproject_branch": 751, "subprojectssubproject": 671, "subrang": 715, "subreg": [715, 721, 786], "subreg_to_reg": 721, "subregclasslist": 786, "subregindex": 721, "subregist": 768, "subregister": 786, "subroutin": [591, 715], "subroutine2": 765, "subscrib": [670, 671, 728, 747], "subscribed": [671, 728, 747, 762], "subscriber": [728, 747], "subscript": [594, 715, 746], "subscripted": 715, "subscripting": 776, "subsect": [645, 650, 714, 715, 731, 749, 774, 775], "subsequent": [213, 371, 483, 585, 586, 591, 592, 608, 622, 661, 670, 673, 681, 707, 714, 715, 723, 726, 731, 743, 746, 761, 765, 766, 768, 772, 785, 786, 796, 810, 811], "subsequently": [612, 673, 715, 720, 753, 765], "subset": [594, 595, 617, 622, 640, 642, 654, 670, 679, 681, 683, 700, 715, 717, 719, 729, 730, 731, 749, 752, 765, 766, 768, 775, 776, 781, 789, 817], "subsetting": 752, "subsidiary": 774, "subst": [776, 777], "substantial": [604, 610, 670, 811], "substantially": [594, 665, 680, 715, 766], "substitu": [607, 628, 715, 746, 776], "substitut": [595, 617, 768, 776, 781], "substituted": [608, 612, 617, 731, 776, 781], "substituting": 705, "substr": [661, 776], "substream": [645, 734, 744], "substring": [640, 660, 666, 746, 776, 781], "subsystem": [608, 642, 715, 757], "subtarget": [591, 608, 632, 660, 691, 715, 757], "subtargetemitt": 786, "subtargetfeatur": [777, 786], "subtl": [604, 607, 681, 717, 732, 736, 809, 812, 817], "subtlety": 689, "subtmp": [810, 811, 812, 813, 814, 815, 816], "subtmp5": 814, "subtool": 662, "subtract": [590, 591, 608, 666, 674, 689, 715, 776], "subtracting": [666, 715], "subtyp": [591, 673, 775, 776, 786], "subvalu": [775, 776], "subvec": 715, "subvector": [608, 715], "subvers": [670, 707, 751], "subvert": 605, "subw": 757, "succ": 611, "succeed": [605, 611, 612, 613, 618, 622, 623, 624, 625, 630, 633, 637, 659, 660, 673, 685, 708, 731, 749, 762, 781, 794, 795, 809, 811], "succeeded": [598, 599, 617, 685, 788], "succeeding": [617, 715], "success": [611, 613, 632, 640, 670, 673, 689, 714, 715, 749, 786, 788, 792, 809, 810, 811, 812, 813, 814, 815, 816], "success_ord": 595, "successful": [683, 709, 715, 719, 751, 759, 762, 781], "successfully": [594, 611, 615, 631, 639, 670, 673, 691, 701, 705, 706, 707, 709, 719, 731, 766, 770, 785, 813], "successively": [673, 719], "successor": [599, 608, 611, 629, 673, 678, 710, 715, 746, 755, 765, 786], "succinct": [611, 612, 617], "such": [585, 586, 588, 589, 590, 591, 594, 595, 597, 598, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 617, 618, 620, 622, 624, 626, 628, 629, 631, 632, 640, 641, 642, 645, 661, 662, 665, 666, 668, 669, 670, 671, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 686, 687, 688, 689, 693, 694, 699, 700, 701, 703, 704, 705, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 738, 741, 743, 744, 745, 746, 748, 749, 751, 752, 753, 754, 755, 756, 760, 761, 762, 764, 765, 766, 768, 770, 771, 772, 774, 775, 776, 777, 779, 781, 782, 784, 785, 786, 788, 792, 794, 795, 808, 809, 810, 811, 812, 813, 814, 815, 817, 818], "sudo": [683, 702, 728, 767, 779, 781], "suff": 680, "suffer": 762, "suffic": [597, 685, 741], "sufficient": [591, 592, 594, 595, 596, 602, 612, 661, 678, 680, 681, 683, 690, 701, 705, 708, 709, 715, 723, 732, 743, 747, 749, 751, 762, 766, 770, 808], "sufficiently": [678, 681, 683, 715, 746, 753], "suffix": [591, 606, 611, 612, 617, 618, 623, 626, 630, 642, 661, 674, 705, 715, 749, 766, 772, 776, 781, 786, 788, 797, 810], "suffixed": [626, 753, 774], "sugar": [715, 776], "suggest": [594, 610, 611, 670, 678, 683, 706, 710, 715, 728, 731, 745, 747, 749, 762, 766, 770, 788], "suggested": [604, 610, 670, 750, 753, 766], "suggesting": [610, 747, 766, 777], "suit": [593, 607, 608, 612, 662, 670, 674, 682, 694, 698, 702, 706, 707, 727, 728, 749, 751, 756, 765, 766, 772, 789], "suitabl": [586, 598, 605, 607, 608, 611, 612, 626, 660, 661, 664, 665, 666, 679, 680, 691, 715, 717, 719, 720, 729, 731, 746, 749, 753, 765, 770, 781], "suitably": 749, "suited": [608, 673, 683, 759, 794], "suiv": 793, "sum": [585, 586, 588, 598, 599, 600, 612, 631, 715, 749, 776, 785, 790], "sum_1": 646, "sum_2": 646, "sum_of_all_vari": 631, "summar": [606, 626, 643, 715, 780], "summaris": [597, 651], "summariz": [608, 631, 665, 680, 759], "summarized": [715, 741, 743, 746], "summarizing": [617, 762], "summary": [598, 612, 613, 617, 618, 620, 622, 623, 625, 626, 627, 630, 632, 633, 634, 637, 640, 641, 642, 646, 649, 650, 651, 653, 654, 657, 659, 661, 686, 688, 744, 746, 747, 761, 766, 769, 770, 814, 816], "summat": 715, "summed": 626, "summing": 736, "sumo": 591, "sun": [608, 788], "sunk": [591, 594, 691, 765], "sunwspro": 683, "sup": [608, 718, 776, 786], "supercl": [749, 774, 777, 788], "superclass": [594, 749, 774, 775, 776, 786, 788], "superfluous": 681, "superior": 772, "superiorly": 640, "supermajority": 762, "superpair": 775, "superpos": 749, "superreg": 786, "superseded": 754, "superset": [595, 667, 715], "supersparc": 786, "superword": [716, 785], "suppl": [55, 85, 145, 176, 271, 352, 404, 436, 517, 549, 590, 646, 663, 760], "supplementing": [617, 655], "supplied": [35, 385, 498, 586, 598, 617, 622, 646, 655, 693, 703, 705, 714, 715, 718, 731, 749, 788, 792, 817], "supply": [589, 622, 626, 665, 693, 702, 703, 705, 707, 709, 714, 723, 731, 751, 794, 795, 796], "supplying": [673, 749], "support": [27, 129, 175, 220, 270, 279, 280, 291, 294, 295, 296, 378, 435, 490, 548, 585, 589, 590, 591, 593, 594, 595, 596, 597, 598, 600, 604, 605, 606, 607, 609, 611, 612, 617, 618, 622, 631, 636, 638, 640, 641, 643, 645, 647, 660, 661, 665, 668, 670, 674, 675, 679, 680, 681, 682, 683, 685, 688, 689, 693, 694, 698, 699, 703, 704, 705, 708, 711, 712, 713, 714, 715, 718, 721, 727, 729, 730, 732, 736, 738, 740, 745, 746, 749, 750, 751, 752, 753, 755, 756, 757, 759, 761, 765, 766, 768, 773, 774, 776, 779, 781, 782, 783, 784, 785, 788, 789, 790, 791, 792, 793, 794, 795, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819], "supported": [27, 84, 129, 220, 378, 490, 585, 586, 588, 589, 590, 595, 598, 604, 606, 611, 612, 617, 622, 625, 626, 628, 631, 640, 641, 643, 645, 646, 647, 660, 661, 662, 663, 665, 670, 671, 674, 675, 677, 678, 680, 683, 688, 694, 698, 699, 700, 701, 703, 704, 705, 707, 714, 721, 722, 727, 730, 731, 738, 744, 748, 749, 751, 755, 757, 759, 761, 762, 767, 771, 772, 774, 776, 777, 781, 785, 786, 789, 792, 813], "supporting": [585, 586, 608, 661, 698, 699, 700, 704, 714, 746, 749, 765, 771, 794, 817], "supportsvp": 754, "supporttest": 606, "suppos": [612, 646, 673, 688, 708, 714, 727, 740, 751, 771, 792], "supposed": [608, 715, 727, 736, 788], "suppress": [611, 615, 617, 641, 665, 710, 715, 782, 792], "suppressed": [611, 641, 715], "sure": [594, 595, 597, 601, 606, 608, 610, 611, 613, 626, 661, 664, 665, 670, 674, 676, 678, 683, 686, 699, 700, 701, 702, 705, 706, 707, 708, 709, 717, 724, 728, 730, 745, 747, 749, 757, 758, 762, 765, 769, 771, 772, 776, 777, 779, 781, 785, 788, 789, 809, 810, 811, 812, 813, 814, 815, 816], "surely": 610, "surfac": [96, 97, 186, 187, 286, 287, 447, 448, 560, 561, 589, 608, 679, 714, 762, 789], "surgical": 749, "surpris": [749, 817], "surprising": [715, 727], "surprisingly": [611, 678, 683, 715, 728, 809, 811], "surround": 746, "surrounded": [612, 700, 715, 721, 761], "surrounding": [595, 605, 612, 681, 683, 715, 753, 766, 768, 776, 777], "survey": 663, "surviv": [673, 766], "survived": 809, "suspected": 659, "suspend1": 665, "suspend2": 665, "suspend_funct": 665, "suspended": [665, 762], "suspens": [665, 762], "suspicious": 771, "sustain": 728, "sv": [606, 700], "sve": [660, 682, 715, 753, 754, 757], "svelt": 761, "svg": [606, 790], "svn": [670, 682, 753, 768, 779, 785], "svptr": 715, "svr4": 622, "sw": [650, 752, 766], "swap": [585, 586, 589, 595, 597, 606, 702, 715, 740], "swapped": [597, 715, 726], "swapping": 597, "sweep": 680, "swift": [654, 714, 731, 753], "swiftasync": [598, 715], "swiftcc": [598, 665, 715], "swifterror": [598, 715], "swiftmodul": 615, "swiftself": [598, 715], "swifttailcc": [598, 608, 715], "swim": 752, "switch": [586, 592, 605, 606, 621, 642, 654, 660, 661, 665, 673, 674, 699, 702, 703, 708, 712, 719, 746, 749, 751, 766, 770, 774, 775, 779, 785, 786, 792, 794, 809, 810, 811, 812, 813, 814, 815, 816], "switched": [595, 612, 715, 757, 791], "switching": [715, 753], "switchsect": [608, 680], "switchtosect": 608, "swizzl": 591, "swizzled": [586, 591], "sx": [663, 754], "sy": [596, 683, 703, 714, 796, 815, 816], "sycl": 586, "sym": [641, 642, 643, 645, 646, 649, 650, 675, 714, 731, 757, 758, 796, 797], "symbol": [24, 127, 217, 375, 487, 598, 604, 608, 611, 616, 618, 620, 622, 624, 626, 628, 635, 636, 640, 642, 643, 644, 646, 649, 650, 651, 654, 655, 657, 661, 666, 680, 683, 703, 714, 715, 717, 720, 736, 744, 745, 749, 757, 765, 770, 783, 786, 791, 792, 794, 795, 797, 810, 811, 812, 813, 814, 815, 816, 817, 820], "symbol1": [643, 675], "symbol2": [643, 675], "symbol_in_partit": 675, "symbolalias": 731, "symbolaliasmap": 731, "symbolflagsmap": [731, 797], "symbolic": [589, 590, 594, 608, 643, 680, 699, 706, 715, 716, 731, 749, 779], "symbolically": [598, 731], "symboliz": [616, 621, 643, 644, 700, 757, 790], "symbolized": [643, 655], "symbolmap": 731, "symbolnam": 591, "symbolsiz": 739, "symbolstringptr": [731, 797], "symbolt": 749, "symbytesiz": [736, 739], "symlik": 606, "symlink": [606, 728], "symlinked": 606, "symmetrical": 662, "symmetry": 781, "symnam": 643, "symposium": 662, "symptom": 683, "symptomatic": 761, "symrecordstream": 736, "symtab": [591, 615, 749], "sync": [595, 729, 762, 792], "synch_and_fetch": 705, "synchroniz": [589, 591, 595, 715, 731, 751], "synchronized": 718, "synchronously": 751, "syncscop": 715, "synergistic": 755, "synonym": 622, "synonymous": 721, "synops": 661, "syntactic": [612, 715, 776, 811], "syntactically": 715, "syntax": [17, 20, 27, 29, 78, 84, 120, 121, 123, 129, 131, 171, 209, 210, 212, 213, 220, 222, 266, 314, 370, 371, 378, 479, 480, 482, 483, 490, 492, 542, 584, 587, 591, 607, 608, 611, 617, 618, 620, 640, 642, 643, 645, 647, 654, 661, 676, 681, 683, 700, 705, 716, 717, 721, 722, 723, 733, 749, 756, 761, 765, 767, 774, 776, 781, 792, 808, 810, 811, 812, 813, 814, 815, 816], "synthesiz": [765, 811], "synthesized": [612, 674, 765], "synthesizedcd": 597, "synthetic": [642, 710, 786], "sysadmin": 751, "syscall": 608, "sysmsg_op_ecc_err_interrupt": [27, 129, 220, 378, 490], "sysmsg_op_host_trap_ack": [27, 129, 220, 378, 490], "sysmsg_op_reg_rd": [27, 129, 220, 378, 490], "sysmsg_op_ttrace_pc": [27, 129, 220, 378, 490], "sysroot": [705, 706, 707, 777], "system": [585, 586, 593, 594, 595, 596, 597, 601, 604, 606, 607, 608, 611, 615, 617, 618, 620, 622, 645, 661, 663, 664, 667, 672, 674, 676, 679, 680, 681, 682, 684, 688, 699, 702, 705, 706, 707, 708, 709, 714, 716, 717, 718, 725, 728, 729, 731, 740, 744, 745, 747, 749, 750, 751, 757, 758, 761, 762, 765, 766, 768, 770, 772, 774, 775, 776, 777, 779, 780, 784, 787, 788, 789, 790, 794, 795, 796, 797, 810, 811, 812, 813, 814, 815, 816, 817], "system_error": 815, "system_vgpr_workitem_id_undefined": 591, "system_vgpr_workitem_id_x": 591, "system_vgpr_workitem_id_x_y": 591, "system_vgpr_workitem_id_x_y_z": 591, "systematic": 766, "systematically": 732, "systemz": [608, 683, 715, 721, 753, 768], "sysv": [641, 651, 663], "sz": 689, "s\u00e9cur": 793, "t1": [608, 715, 727, 781, 790], "t1item": 727, "t2": [608, 612, 715, 727, 729, 781, 790], "t2bcc": 721, "t2item": 727, "t3": [608, 715], "t4": 715, "t5": 715, "tab": [611, 612, 626, 670, 685, 747, 776], "tabl": [27, 129, 220, 378, 490, 585, 586, 588, 589, 590, 592, 594, 597, 598, 605, 606, 615, 616, 622, 624, 631, 635, 640, 642, 643, 644, 645, 646, 649, 650, 654, 660, 661, 665, 670, 671, 683, 684, 689, 698, 708, 712, 714, 715, 717, 718, 720, 727, 728, 731, 734, 736, 741, 743, 744, 749, 757, 766, 770, 772, 775, 777, 780, 785, 786, 791, 792, 794, 809, 810, 811, 812, 813, 814, 815, 816, 817], "tabledef": 632, "tablegen": [606, 660, 670, 674, 683, 691, 696, 706, 707, 712, 753, 784, 786], "tablegen_json_vers": 774, "tablegenbackend": 775, "tablegenbackendskeleton": 775, "tablegenmain": 775, "tablet": 724, "tabsiz": 626, "tac": 701, "tackl": [676, 814], "tackling": 811, "tag": [14, 79, 172, 267, 333, 350, 430, 543, 598, 601, 611, 660, 670, 672, 680, 683, 715, 723, 725, 728, 749, 751, 757, 761, 770, 774, 776], "tag0": [587, 715], "tag1": [587, 715], "tag2": 715, "tag3": 715, "tag_apple_property": 765, "tag_base_typ": 765, "tag_memb": 765, "tag_offset": 715, "tag_pointer_typ": 765, "tag_structure_typ": 765, "tagged": [588, 707, 715, 749, 757, 775, 776], "tagging": 756, "tahit": 591, "tail": [598, 612, 665, 680, 710, 715, 727, 729, 765, 776, 785, 791, 817], "tail_ex": 791, "tailcall": [608, 766], "tailcalle": 608, "tailcallopt": [608, 715], "tailcc": [598, 608, 715], "taill": 123, "tailored": [645, 702], "tak": [585, 586, 591, 593, 594, 595, 597, 598, 600, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 615, 617, 620, 624, 627, 630, 632, 633, 637, 638, 640, 643, 645, 646, 659, 661, 662, 665, 670, 672, 673, 674, 675, 679, 680, 681, 683, 686, 687, 689, 693, 701, 704, 708, 710, 711, 712, 714, 715, 717, 718, 719, 720, 721, 722, 724, 727, 728, 729, 730, 731, 732, 746, 749, 751, 755, 758, 759, 760, 765, 766, 767, 768, 770, 772, 774, 775, 776, 783, 786, 787, 788, 789, 791, 792, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820], "takecallback": 749, "takeerror": [731, 749, 794, 795, 796, 797], "taken": [585, 586, 591, 594, 600, 604, 608, 632, 661, 665, 666, 673, 678, 693, 700, 701, 714, 715, 719, 721, 726, 727, 731, 746, 749, 751, 755, 758, 762, 765, 766, 770, 771, 772, 775, 776, 777, 783, 786, 817], "taking": [598, 603, 618, 624, 664, 708, 713, 715, 732, 746, 749, 755, 760, 765, 770, 775, 779, 814], "talk": [611, 662, 674, 688, 694, 715, 725, 747, 749, 788, 809, 810, 811, 812, 814, 817, 818], "talking": [611, 760, 809, 810, 817], "tally": 780, "tap": 683, "tar": [683, 706, 758], "tarball": [683, 706, 707], "target": [24, 78, 127, 171, 217, 266, 375, 487, 542, 585, 586, 589, 590, 593, 595, 596, 597, 598, 604, 605, 606, 607, 610, 611, 614, 616, 617, 618, 619, 625, 628, 632, 640, 642, 643, 646, 657, 658, 660, 663, 665, 668, 672, 674, 678, 679, 680, 683, 685, 688, 689, 691, 693, 694, 696, 698, 701, 703, 704, 706, 707, 709, 711, 712, 714, 719, 720, 723, 725, 727, 728, 730, 731, 733, 735, 748, 754, 761, 765, 766, 767, 768, 770, 772, 774, 775, 776, 777, 779, 780, 781, 783, 784, 785, 788, 794, 795, 811, 812, 813, 814, 816, 818], "target_compile_definit": 607, "target_link_librar": 606, "targetasminfo": [680, 786], "targetcallingconv": 786, "targetdescript": 786, "targeted": [608, 678, 706, 710, 715, 786, 793], "targetframeinfo": 786, "targetframelowering": 673, "targetfunc": 749, "targetinfo": [670, 786], "targeting": [591, 607, 608, 676, 678, 683, 704, 705, 706, 714, 715, 725, 731, 766, 777, 781, 815], "targetinstrformat": 786, "targetinstrinfo": 753, "targetjitinfo": 786, "targetlibraryinfo": [616, 715, 753], "targetlowering": [602, 673, 674, 693, 753, 786, 790], "targetloweringbas": 592, "targetloweringobjectfil": 608, "targetloweringopt": 790, "targetmachin": [680, 720, 729, 730, 753, 786, 788, 794, 796, 811, 812, 813, 814, 815], "targetnam": [640, 721], "targetopt": [608, 815], "targetpassconfig": [695, 730], "targetprocesscontrol": [714, 731], "targetregisterclass": [608, 786], "targetregisterdesc": [608, 786], "targetregisterinfo": 753, "targetregistry": [608, 786, 815], "targets_to_build": 706, "targetselect": [811, 812, 813, 814, 815, 816], "targetselectiondag": [608, 674, 786], "targetsubtarget": 786, "targettransforminfo": 715, "targettripl": 815, "tarjan": 788, "task": [611, 612, 665, 670, 673, 674, 694, 704, 715, 727, 765, 767, 770, 771], "task_begin": 612, "task_end": 612, "tasked": 772, "taught": [608, 689], "tb": 786, "tba": [586, 591, 678, 716, 726, 732], "tba_h": [20, 590], "tba_lo": [20, 590], "tbb": 786, "tbcc": 786, "tbd": [587, 591, 641, 731], "tbepl": 752, "tblgen": [606, 608, 616, 674, 704, 706, 774, 776, 777, 786], "tblgensubtarget": 786, "tbr_jtr": 721, "tbuffer_load_format_d16_x": [0, 3, 4, 9], "tbuffer_load_format_d16_xy": [0, 3, 4, 9], "tbuffer_load_format_d16_xyz": [0, 3, 4, 9], "tbuffer_load_format_d16_xyzw": [0, 3, 4, 9], "tbuffer_load_format_x": [0, 2, 3, 4, 9], "tbuffer_load_format_xy": [0, 2, 3, 4, 9], "tbuffer_load_format_xyz": [0, 2, 3, 4, 9], "tbuffer_load_format_xyzw": [0, 2, 3, 4, 9], "tbuffer_store_format_d16_x": [0, 3, 4, 9], "tbuffer_store_format_d16_xy": [0, 3, 4, 9], "tbuffer_store_format_d16_xyz": [0, 3, 4, 9], "tbuffer_store_format_d16_xyzw": [0, 3, 4, 9], "tbuffer_store_format_x": [0, 2, 3, 4, 9], "tbuffer_store_format_xy": [0, 2, 3, 4, 9], "tbuffer_store_format_xyz": [0, 2, 3, 4, 9], "tbuffer_store_format_xyzw": [0, 2, 3, 4, 9], "tcb": 764, "tcp": [671, 714], "tcpwg": 671, "td": [592, 608, 614, 619, 620, 656, 658, 660, 674, 712, 721, 728, 729, 774, 775, 776, 777, 786], "tdm": 701, "tdrr": 620, "tdtag": 774, "teach": [674, 683, 794, 810], "teaching": 818, "team": [662, 670, 707, 750, 751, 755], "tear": 673, "technical": [607, 609, 610, 670, 682, 717, 751, 762, 790], "technically": 628, "techniqu": [585, 586, 594, 602, 608, 680, 685, 694, 715, 727, 749, 759, 785, 786, 787, 788, 789, 809, 811, 812, 813, 814, 818], "technological": 669, "technology": [718, 817], "ted": 774, "tedious": [612, 792], "tee": 602, "teething": 772, "tel": [591, 594, 602, 606, 608, 610, 611, 613, 661, 666, 670, 674, 680, 683, 686, 703, 705, 714, 715, 718, 727, 728, 731, 732, 745, 749, 750, 751, 765, 776, 780, 781, 793, 809, 810, 814, 816, 817], "telling": 661, "templat": [594, 611, 626, 660, 661, 682, 708, 727, 746, 762, 771, 774, 775, 776, 777, 786, 788, 792, 810], "templateargdecl": 776, "templatearglist": 776, "templated": [661, 662, 749], "templateparam": 715, "temporal": 715, "temporally": 604, "temporar": [611, 676, 715, 749, 766, 781], "temporarily": [586, 591, 602, 612, 762], "temporary": [590, 608, 611, 617, 632, 675, 693, 700, 715, 716, 717, 721, 746, 749, 751, 757, 760, 776, 780, 781, 792], "tempted": 771, "tempting": [611, 683, 701], "ten": [681, 740], "tend": [585, 629, 632, 640, 670, 677, 681, 683, 694, 701, 714, 715, 731, 732, 749, 753, 758, 765], "tension": 814, "tensorflow": 717, "tentat": [591, 715], "tentatively": 732, "teor": 721, "term": [585, 586, 591, 594, 595, 597, 608, 609, 610, 611, 626, 640, 670, 671, 673, 676, 680, 691, 700, 701, 715, 716, 719, 721, 726, 727, 728, 730, 731, 746, 747, 755, 761, 765, 768, 770, 771, 772, 775, 776, 781, 784, 795], "termed": [585, 586, 591], "termin": [608, 749, 765, 771, 812], "terminal": [602, 622, 623, 630, 633, 637, 645, 659, 661, 685, 727], "terminat": [585, 586, 591, 617, 653, 673, 678, 700, 715, 719, 735, 749, 755, 761, 765, 775, 781], "terminated": [585, 586, 591, 598, 673, 675, 729, 736, 741, 749, 759, 786, 812], "terminating": [678, 715, 749, 761, 786], "terminator": [600, 611, 629, 673, 678, 719, 727, 746, 749, 755, 786, 788], "terminology": [600, 607, 693, 715, 746, 753, 756, 784, 816], "ternary": 608, "terribly": 593, "territory": [670, 683], "terror": 593, "tess": 591, "test": [585, 586, 591, 593, 594, 602, 604, 605, 608, 610, 612, 616, 633, 640, 645, 646, 651, 652, 653, 655, 660, 661, 662, 664, 665, 666, 671, 673, 674, 676, 682, 694, 701, 702, 704, 706, 707, 708, 709, 714, 717, 719, 721, 727, 732, 733, 746, 747, 749, 750, 751, 756, 761, 765, 766, 769, 770, 772, 774, 775, 783, 787, 788, 792, 811, 812, 814, 815, 818], "test1": [722, 767, 770, 781], "test2": [651, 653], "test5": 612, "test_arg": 603, "test_argu": 603, "test_blockaddress": 689, "test_cod": 714, "test_code_harness": 714, "test_devic": 662, "test_exec_root": 617, "test_format": 617, "test_fuzz": 717, "test_hd": 662, "test_host": 662, "test_nam": 603, "test_source_root": 617, "test_suite_benchmarking_only": 779, "test_suite_collect_stat": 779, "test_suite_fortran": 779, "test_suite_remote_host": 779, "test_suite_run_benchmark": 779, "test_suite_run_typ": 779, "test_suite_run_und": 779, "test_suite_spec2000_root": 779, "test_suite_spec2006_root": 779, "test_suite_spec2017_root": 779, "test_suite_subdir": 779, "test_suite_use_perf": 779, "testabl": [611, 694, 747], "testcas": [612, 613, 670, 714, 715, 749, 810], "testcase_d": 717, "testcleanup": 715, "tested": [585, 586, 605, 662, 670, 671, 673, 679, 683, 685, 699, 704, 714, 715, 717, 727, 728, 746, 747, 749, 753, 772, 776, 781, 788, 814], "tester": [670, 671, 707], "testersinfr": 671, "testersproject": 671, "testfnptr": 715, "testfunc": 811, "testing": [594, 604, 605, 606, 612, 613, 617, 618, 645, 660, 665, 670, 679, 683, 685, 693, 700, 701, 702, 728, 732, 746, 749, 750, 751, 758, 762, 765, 766, 772, 779, 780, 784], "testingconfig": 617, "testl": 766, "testq": 766, "testresult": 682, "testrunn": 617, "testsuit": [612, 617], "tex": 780, "text": [585, 591, 606, 608, 609, 610, 612, 622, 626, 628, 631, 641, 644, 646, 647, 651, 653, 660, 670, 671, 674, 675, 679, 715, 717, 722, 723, 728, 747, 749, 760, 765, 766, 768, 776, 779, 780, 781, 786, 789, 792, 796, 808, 817, 820], "textfileread": 611, "textual": [585, 586, 591, 608, 615, 618, 626, 670, 676, 679, 715, 716, 723, 726, 774, 777, 781, 790, 811], "textually": [617, 676, 732, 734], "textur": 589, "tfe": [0, 2, 3, 4, 93, 96, 97, 100, 101, 104, 105, 106, 107, 112, 113, 114, 115, 186, 187, 189, 190, 191, 194, 195, 196, 201, 202, 203, 204, 281, 282, 283, 286, 287, 294, 295, 296, 297, 298, 299, 300, 301, 306, 307, 308, 309, 354, 447, 448, 455, 456, 457, 469, 470, 471, 472, 557, 560, 561, 564, 565, 568, 569, 570, 571, 576, 577, 578, 579, 591], "tg_split": 591, "tgid_size_en": 591, "tgid_x_en": 591, "tgid_y_en": 591, "tgid_z_en": 591, "tgsplit": 591, "tgt": [0, 2, 3, 4], "th": [586, 591, 597, 624, 673, 686, 715, 727, 738, 786, 792, 808], "than": [84, 585, 586, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 602, 604, 606, 608, 610, 611, 612, 615, 617, 618, 622, 624, 626, 628, 632, 640, 641, 645, 646, 650, 653, 655, 661, 662, 665, 666, 669, 670, 671, 672, 673, 674, 676, 678, 679, 680, 682, 683, 685, 689, 693, 694, 698, 700, 701, 702, 707, 709, 710, 711, 713, 714, 715, 717, 718, 719, 722, 723, 724, 726, 727, 728, 730, 731, 734, 736, 738, 740, 741, 743, 746, 749, 750, 751, 752, 755, 758, 760, 761, 762, 764, 765, 766, 768, 770, 772, 774, 775, 776, 781, 782, 785, 786, 787, 788, 791, 792, 794, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "thank": [664, 709, 728, 761], "thanking": 670, "that": [98, 107, 112, 114, 196, 288, 301, 306, 308, 449, 457, 470, 562, 571, 576, 578, 585, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 631, 632, 633, 635, 636, 638, 640, 641, 642, 645, 646, 648, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 682, 683, 685, 686, 688, 689, 690, 691, 692, 693, 694, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "the": [0, 5, 14, 20, 21, 22, 23, 24, 27, 30, 36, 37, 38, 51, 52, 53, 55, 56, 66, 67, 68, 78, 79, 80, 84, 85, 93, 96, 97, 100, 101, 117, 120, 123, 124, 125, 126, 127, 129, 142, 143, 145, 157, 158, 159, 171, 172, 173, 175, 176, 186, 187, 189, 190, 191, 205, 209, 212, 213, 214, 215, 216, 217, 220, 223, 237, 238, 239, 241, 242, 254, 255, 256, 266, 267, 268, 270, 271, 281, 282, 283, 286, 287, 310, 314, 333, 349, 350, 352, 354, 370, 371, 372, 373, 374, 375, 378, 380, 386, 387, 388, 400, 401, 402, 404, 405, 418, 419, 420, 430, 431, 435, 436, 444, 447, 448, 451, 452, 479, 482, 483, 484, 485, 486, 487, 490, 493, 499, 500, 501, 513, 514, 515, 517, 518, 530, 531, 532, 542, 543, 544, 548, 549, 557, 560, 561, 564, 565, 580, 584, 587, 588, 589, 590, 591, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 672, 674, 675, 679, 682, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 700, 701, 702, 703, 706, 709, 711, 712, 718, 719, 720, 721, 723, 725, 727, 733, 735, 745, 748, 750, 754, 756, 761, 763, 764, 765, 768, 769, 771, 772, 773, 774, 778, 781, 782, 783, 784, 789, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 810, 811, 816, 818, 819, 820], "the_dag": 776, "theadsafemodul": 731, "thecontext": [810, 811, 812, 813, 814, 815, 816], "thecu": 816, "thedoc": 792, "thedoclist": 792, "theexecutionengin": 816, "thefpm": [811, 812, 813, 814], "thefunct": [810, 811, 812, 813, 814, 815, 816], "their": [585, 586, 587, 591, 592, 594, 595, 597, 598, 605, 606, 607, 608, 610, 611, 616, 617, 622, 624, 626, 627, 629, 631, 640, 641, 646, 649, 650, 657, 660, 661, 662, 666, 667, 669, 670, 671, 672, 673, 676, 678, 680, 682, 683, 688, 689, 690, 691, 694, 698, 701, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 724, 727, 728, 729, 731, 732, 743, 744, 745, 746, 749, 750, 751, 753, 755, 757, 759, 761, 762, 765, 766, 768, 770, 771, 772, 774, 775, 776, 777, 779, 781, 782, 783, 785, 786, 788, 789, 791, 792, 794, 809, 810, 811, 813, 814, 815, 816, 817], "thej": [811, 812, 813, 814, 816], "them": [585, 586, 591, 594, 595, 597, 598, 601, 602, 603, 605, 606, 607, 608, 609, 611, 612, 613, 617, 622, 626, 631, 635, 637, 640, 642, 645, 646, 649, 650, 653, 654, 661, 662, 664, 666, 667, 669, 670, 672, 673, 676, 678, 679, 680, 681, 683, 685, 688, 689, 690, 691, 693, 694, 696, 700, 703, 704, 706, 707, 708, 711, 712, 714, 715, 717, 718, 719, 721, 723, 724, 726, 727, 728, 729, 730, 731, 743, 745, 746, 747, 749, 750, 751, 753, 755, 757, 758, 760, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 786, 788, 789, 790, 791, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 816, 817], "themodul": [810, 811, 812, 813, 814, 815, 816], "themself": 670, "themselv": [595, 598, 608, 617, 661, 667, 670, 679, 715, 727, 728, 732, 749, 751, 762, 765, 766, 776, 777, 782, 790, 791, 809], "then": [585, 586, 589, 590, 591, 593, 594, 595, 597, 598, 599, 600, 602, 604, 606, 607, 608, 609, 610, 611, 612, 617, 618, 620, 623, 624, 626, 629, 630, 632, 633, 636, 637, 638, 640, 641, 642, 645, 646, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 683, 685, 686, 688, 689, 692, 693, 694, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 728, 730, 731, 734, 735, 736, 739, 740, 741, 746, 747, 749, 750, 751, 753, 759, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 774, 775, 776, 777, 779, 780, 781, 782, 783, 785, 786, 788, 790, 792, 794, 795, 796, 797, 808, 809, 810, 811, 813, 814, 815, 816], "then1": 766, "then2": 766, "thenbb": [812, 813, 814, 815, 816], "thenv": [812, 813, 814, 815, 816], "theoretical": 640, "theoretically": [749, 771], "theorist": 714, "theory": [705, 727, 736, 792], "ther": [288, 306, 308, 585, 586, 588, 589, 590, 591, 594, 595, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 617, 621, 622, 626, 628, 631, 632, 634, 636, 639, 640, 642, 644, 646, 649, 650, 651, 653, 654, 657, 661, 662, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 717, 719, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 734, 736, 738, 739, 741, 743, 744, 746, 747, 749, 750, 751, 752, 753, 754, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 786, 787, 788, 789, 791, 792, 795, 796, 809, 810, 811, 812, 813, 814, 816, 817], "thereaft": 768, "thereby": [661, 689, 715, 768], "therefor": [585, 586, 591, 595, 597, 608, 640, 661, 662, 665, 670, 673, 681, 699, 703, 715, 723, 724, 729, 730, 733, 746, 749, 753, 755, 762, 765, 766, 768, 782, 788, 792], "thereof": [609, 715], "thes": [85, 120, 176, 209, 213, 271, 314, 352, 371, 436, 479, 483, 549, 584, 585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616, 617, 618, 623, 626, 631, 635, 640, 650, 651, 655, 661, 662, 664, 665, 667, 669, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 693, 694, 700, 703, 704, 705, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 759, 762, 763, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 783, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "thesimplifiedandinstruct": 710, "thetargetmachin": 815, "thetripl": 753, "they": [585, 586, 587, 588, 589, 590, 591, 594, 595, 597, 598, 602, 603, 606, 607, 608, 609, 610, 611, 612, 613, 617, 620, 622, 624, 628, 629, 634, 636, 640, 641, 642, 646, 654, 655, 659, 661, 662, 665, 666, 667, 669, 670, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 687, 688, 689, 691, 693, 694, 700, 701, 702, 703, 707, 708, 710, 712, 713, 714, 715, 716, 717, 719, 721, 723, 726, 727, 728, 730, 731, 732, 734, 735, 743, 746, 747, 749, 750, 751, 752, 753, 755, 756, 757, 758, 760, 761, 762, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 785, 786, 787, 788, 790, 791, 792, 794, 795, 809, 810, 811, 812, 814, 817], "thin": [604, 606, 622, 626, 635, 638, 715, 749, 757], "thing": [591, 594, 597, 598, 602, 604, 606, 607, 608, 609, 611, 612, 617, 661, 662, 666, 670, 673, 679, 681, 683, 685, 691, 694, 704, 706, 709, 715, 717, 719, 722, 723, 726, 727, 728, 730, 731, 744, 745, 746, 749, 750, 751, 761, 762, 765, 766, 771, 774, 776, 780, 781, 788, 790, 792, 794, 795, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "think": [601, 606, 608, 611, 666, 670, 674, 680, 681, 688, 701, 708, 712, 714, 715, 716, 726, 728, 729, 735, 747, 749, 751, 766, 771, 776, 812, 815], "thinking": [681, 749, 817], "thinlto": [600, 606, 766, 769], "third": [585, 586, 593, 598, 600, 608, 611, 640, 645, 655, 661, 665, 666, 673, 675, 680, 681, 683, 688, 707, 715, 721, 727, 733, 749, 750, 762, 765, 766, 768, 774, 776, 780, 786, 788, 791, 792, 810, 817], "this": [0, 5, 14, 18, 19, 20, 24, 25, 26, 27, 28, 30, 32, 35, 79, 82, 83, 84, 85, 86, 107, 110, 111, 117, 120, 127, 128, 129, 130, 172, 176, 196, 199, 200, 205, 209, 211, 212, 213, 217, 218, 219, 220, 221, 223, 267, 271, 279, 280, 288, 291, 294, 295, 296, 301, 304, 305, 306, 308, 310, 314, 315, 316, 320, 321, 325, 326, 327, 333, 337, 338, 339, 340, 350, 351, 352, 355, 368, 369, 370, 371, 375, 376, 377, 378, 379, 380, 382, 385, 430, 433, 434, 436, 457, 467, 468, 479, 481, 482, 483, 487, 488, 489, 490, 491, 493, 495, 498, 543, 546, 547, 549, 571, 574, 575, 580, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 636, 637, 638, 640, 641, 642, 643, 645, 646, 649, 650, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 815, 817, 818, 819], "thischar": [808, 809, 810, 811, 812, 813, 814, 815, 816], "thom": 766, "thoroughly": 812, "thos": [585, 586, 589, 591, 594, 595, 602, 604, 606, 607, 608, 609, 610, 611, 612, 617, 621, 622, 624, 626, 629, 640, 641, 642, 645, 646, 661, 666, 669, 670, 673, 679, 680, 681, 682, 683, 684, 686, 690, 692, 693, 701, 702, 705, 706, 708, 714, 715, 716, 717, 719, 726, 727, 730, 731, 744, 746, 748, 749, 751, 754, 760, 761, 762, 765, 766, 768, 770, 771, 772, 774, 775, 776, 781, 783, 784, 786, 788, 789, 792, 814, 815, 816], "thost": 685, "though": [585, 586, 595, 599, 608, 612, 628, 632, 640, 661, 662, 670, 673, 674, 675, 678, 680, 681, 688, 689, 693, 704, 708, 710, 714, 715, 718, 719, 724, 726, 727, 728, 734, 746, 749, 751, 765, 766, 780, 781, 788, 794, 809, 810, 812, 814, 816], "thought": [608, 688, 715, 726, 741, 753, 770], "thousand": [701, 717, 740, 746], "thre": [585, 586, 589, 593, 598, 602, 607, 608, 612, 613, 640, 646, 661, 665, 666, 669, 673, 677, 681, 683, 688, 693, 698, 715, 719, 721, 726, 727, 728, 733, 734, 746, 749, 753, 755, 758, 759, 762, 766, 770, 772, 774, 776, 781, 786, 788, 789, 794, 809, 812], "thread": [585, 586, 589, 590, 594, 595, 596, 598, 606, 608, 612, 615, 626, 646, 664, 665, 668, 670, 671, 672, 673, 680, 700, 714, 716, 717, 729, 731, 746, 751, 752, 753, 761, 764, 766, 770, 779, 789, 790, 791, 794, 795], "thread_id": [612, 791], "thread_local": [608, 715, 770], "thread_local_quarantine_size_kb": 761, "thread_siblings_list": 596, "threadbuff": 791, "threaded": [680, 715, 717, 731, 749], "threadgroup": 591, "threadgroup_dimens": 591, "threadgroup_size_in_wavefront": 591, "threadid": 729, "threadidx": 729, "threading": [665, 710, 749], "threadlocal": [598, 715], "threadpool": 731, "threadsaf": 680, "threadsafecontext": [794, 795], "threadsafemodul": [794, 795, 796, 797, 811, 812, 813, 814], "threadsanitiz": 715, "threadscategory": 671, "threat": [609, 760, 762], "threatened": 609, "threatening": 609, "threshold": [591, 626, 646, 715, 746, 752, 759, 789], "throttling": [632, 755], "through": [585, 586, 591, 594, 595, 598, 599, 602, 603, 606, 607, 608, 610, 618, 622, 640, 661, 662, 663, 664, 665, 667, 669, 670, 671, 673, 676, 677, 678, 679, 680, 681, 683, 684, 686, 689, 691, 693, 700, 701, 704, 707, 708, 711, 713, 714, 715, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 744, 746, 747, 749, 751, 753, 754, 755, 759, 761, 762, 765, 766, 768, 769, 770, 771, 774, 775, 776, 783, 785, 786, 787, 788, 789, 792, 794, 795, 796, 797, 809, 811, 812, 813, 814, 815, 816, 818], "throughout": [589, 590, 597, 598, 607, 611, 612, 666, 670, 683, 715, 720, 740, 743, 749, 759, 765, 771, 776, 791], "throughput": [632, 640, 678, 731], "throw": [585, 586, 634, 662, 665, 678, 713, 715, 731, 746, 788, 796], "throwaway": 593, "throwinfo": 673, "throwing": [608, 665, 673, 714, 715, 749, 771], "thrown": [604, 673, 677, 715], "throwntyp": 715, "thumb": [595, 608, 670, 701, 705, 771, 789], "thumb1": [663, 715], "thumb2": [608, 663, 711, 715], "thunderbird": 670, "thunderx2t99model": 786, "thunderxt8xmodel": 786, "thunk": [608, 645, 715, 727, 746, 783], "thursday": [682, 724], "thus": [585, 586, 594, 595, 598, 599, 602, 603, 608, 611, 612, 632, 661, 665, 667, 670, 673, 676, 678, 680, 700, 701, 709, 710, 715, 717, 725, 726, 727, 734, 736, 743, 746, 747, 749, 751, 765, 766, 770, 776, 781, 782, 788, 809, 810, 811, 812, 813, 814, 815, 816], "thusly": 739, "ti": [591, 665, 670, 672, 689, 715, 731], "tian": 755, "tick": 791, "ticket": 671, "tid": 729, "tidbit": [594, 816, 818, 819], "tidig_cmp_cnt": 591, "tidy": [601, 611, 728, 731, 747, 753, 788], "tiebreak": 662, "tied": [608, 713, 714, 715, 721, 765, 770], "tier": 772, "tight": [678, 718], "tightened": 688, "tightly": [666, 715, 730, 751, 809, 810, 811, 812, 813, 814, 815, 816], "tii": [608, 753], "til": [715, 755], "tiling": [66, 157, 254, 418, 530, 755], "till": 701, "tim": [585, 586, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 612, 615, 617, 618, 620, 622, 626, 631, 632, 633, 634, 640, 641, 642, 645, 646, 654, 655, 659, 660, 661, 662, 663, 664, 665, 666, 670, 672, 673, 674, 675, 678, 680, 682, 683, 685, 686, 689, 690, 693, 694, 697, 698, 700, 701, 703, 704, 705, 706, 707, 708, 713, 714, 715, 716, 717, 719, 720, 721, 722, 724, 725, 727, 728, 729, 730, 731, 733, 736, 740, 741, 744, 745, 746, 749, 750, 751, 752, 755, 758, 761, 762, 765, 767, 768, 770, 772, 774, 775, 776, 777, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 808, 810, 811, 812, 813, 814, 818], "timberwolfmc": 780, "timed": [617, 762, 775], "timeit": 779, "timelin": [762, 789, 790], "timely": [610, 670, 701, 762, 770, 772], "timeout": [617, 717], "timeout_exitcod": 717, "timepassesisenabled": 661, "timescal": 791, "timestamp": [586, 615, 622, 636, 642, 654, 741, 751, 791], "timing": [617, 640, 660, 715, 762, 766, 781, 788, 791], "tiny": [620, 708, 727], "tip": [602, 664, 670, 684, 701, 751, 774, 788], "tir": 611, "tirefactory": 611, "tiring": 777, "titl": [601, 610, 670, 747], "tl": [598, 608, 650, 673, 715, 731, 761, 770], "tli": [616, 753], "tlv": 714, "tm": [729, 786, 796], "tma_h": [20, 590], "tma_lo": [20, 590], "tmax": 590, "tmp": [606, 608, 612, 617, 632, 655, 680, 681, 700, 709, 715, 730, 749, 750, 781, 786, 787, 811, 814], "tmp1": [611, 612, 681], "tmp2": [681, 814], "tmp3": [612, 681], "tmp4": 681, "tmp5": 681, "tmp7": 612, "tmp9": 612, "tmpb": [814, 815, 816], "tmpf": 596, "to": [5, 24, 29, 30, 32, 51, 52, 53, 55, 56, 68, 78, 82, 83, 84, 85, 98, 99, 112, 113, 114, 117, 120, 127, 131, 142, 143, 145, 159, 171, 175, 176, 188, 201, 202, 205, 209, 217, 222, 223, 237, 238, 239, 241, 242, 256, 266, 270, 271, 279, 280, 288, 289, 290, 291, 294, 295, 296, 306, 307, 308, 309, 310, 314, 351, 352, 375, 380, 382, 400, 401, 402, 404, 405, 420, 433, 434, 435, 436, 449, 450, 469, 470, 479, 487, 492, 493, 495, 513, 514, 515, 517, 518, 532, 542, 546, 547, 548, 549, 562, 563, 576, 577, 578, 580, 584, 587, 588, 589, 590, 593, 595, 596, 597, 598, 600, 601, 603, 604, 605, 606, 607, 609, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 657, 659, 662, 663, 665, 666, 667, 668, 669, 673, 674, 675, 677, 682, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 698, 700, 713, 716, 717, 718, 719, 720, 721, 723, 725, 726, 728, 732, 734, 735, 736, 738, 739, 740, 743, 744, 745, 747, 748, 750, 752, 753, 755, 756, 760, 761, 763, 764, 765, 768, 769, 770, 771, 772, 773, 774, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 816, 817, 818, 819, 820], "tobi": 755, "toc": [608, 757], "today": [595, 611, 679, 681, 715, 744, 751, 753, 768, 770], "todefin": 774, "todo": [591, 608, 661, 670, 674, 690, 696, 706, 710, 746, 758, 788], "togeth": [107, 196, 301, 457, 571, 585, 586, 589, 591, 594, 597, 599, 602, 606, 608, 612, 613, 617, 637, 638, 641, 646, 655, 659, 661, 665, 666, 670, 673, 680, 683, 688, 693, 694, 704, 710, 714, 715, 717, 724, 730, 731, 736, 740, 746, 747, 749, 751, 757, 759, 765, 775, 781, 785, 788, 789, 795, 797, 808, 809, 810, 812, 813, 817], "tojittargetaddress": 731, "tok": [665, 715, 816], "tok_binary": [813, 814, 815, 816], "tok_def": [808, 809, 810, 811, 812, 813, 814, 815, 816], "tok_els": [812, 813, 814, 815, 816], "tok_eof": [808, 809, 810, 811, 812, 813, 814, 815, 816], "tok_extern": [808, 809, 810, 811, 812, 813, 814, 815, 816], "tok_for": [812, 813, 814, 815, 816], "tok_identifi": [808, 809, 810, 811, 812, 813, 814, 815, 816], "tok_if": [812, 813, 814, 815, 816], "tok_in": [812, 813, 814, 815, 816], "tok_numb": [808, 809, 810, 811, 812, 813, 814, 815, 816], "tok_then": [812, 813, 814, 815, 816], "tok_unary": [813, 814, 815, 816], "tok_var": [814, 815, 816], "tokcod": 776, "token": [608, 640, 665, 674, 693, 707, 723, 736, 751, 770, 776, 792, 808, 809, 810, 811, 812, 813, 814, 815, 816], "tokidentifi": 776, "tokinteg": 776, "tokprec": [809, 810, 811, 812, 813, 814, 815, 816], "tokstring": 776, "tokvarnam": 776, "told": 670, "toler": [669, 680], "tolerat": [715, 717, 769], "tolmach": 680, "tolmach94": 680, "tom": [707, 792], "tombston": 738, "tonearest": 715, "tonearestaway": 715, "tong": 591, "tongapro": 591, "tons": 726, "too": [593, 602, 606, 608, 610, 611, 612, 632, 661, 666, 670, 677, 683, 685, 693, 694, 699, 700, 702, 707, 708, 715, 719, 726, 727, 728, 749, 752, 755, 766, 771, 772, 774, 776, 781, 788, 791, 792, 795, 809, 814, 816, 817], "tool": [591, 593, 594, 598, 601, 603, 604, 606, 607, 608, 611, 612, 615, 617, 620, 621, 624, 625, 626, 627, 629, 631, 632, 633, 640, 643, 645, 648, 649, 650, 651, 652, 653, 655, 661, 662, 663, 664, 666, 669, 670, 675, 680, 682, 684, 685, 686, 699, 700, 704, 705, 706, 707, 709, 715, 716, 718, 725, 728, 729, 731, 732, 733, 741, 743, 744, 745, 746, 747, 750, 751, 753, 756, 758, 759, 761, 765, 767, 769, 771, 772, 777, 779, 781, 784, 786, 788, 809, 810, 811, 812], "tool_nam": 683, "toolchain": [604, 605, 606, 608, 611, 615, 685, 705, 734, 735, 736, 741, 744, 751, 762, 779], "tooling": [604, 606, 704, 728, 749, 751], "toolingtest": 728, "toolk": [662, 729, 749, 756], "toolnam": 750, "toolset": [606, 685, 789], "toolswict": 671, "top": [585, 586, 591, 594, 595, 598, 606, 607, 608, 611, 612, 617, 620, 640, 646, 667, 670, 671, 672, 673, 679, 681, 683, 689, 693, 696, 699, 703, 713, 715, 716, 717, 719, 726, 727, 728, 746, 747, 749, 750, 751, 759, 765, 774, 775, 776, 779, 780, 783, 788, 790, 792, 794, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 817], "topic": [670, 671, 682, 722, 724, 767, 817, 818], "topl": 667, "toplevel": 686, "toplevelexpr": [809, 810, 811, 812, 813, 814, 815, 816], "topmost": 655, "topn": 646, "topological": 612, "topologically": 743, "topology": 596, "torch": 671, "torec": 749, "torerr": 749, "toret": 765, "toreturn": 791, "toshio": 608, "tot": 770, "total": [591, 595, 598, 624, 639, 640, 646, 651, 657, 715, 717, 727, 736, 740, 743, 746, 749, 759, 764, 765, 766, 775, 776, 780, 788, 790], "totally": [728, 761, 810], "totalview": 586, "touch": [664, 700, 708, 710, 749, 760, 762, 765], "touched": 746, "touching": [596, 715, 751, 765, 766, 788], "tough": 809, "tour": 809, "tout": 793, "toward": [591, 599, 603, 604, 606, 670, 679, 682, 701, 715, 749, 754, 761, 762, 766], "towardzero": 715, "town": 682, "toy": [662, 731, 790, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "tp": 731, "tpeng": 762, "tpi": [645, 734, 735, 741, 744], "tpistreamhead": 743, "tpistreamvers": 743, "tpoff": 770, "trac": [626, 647, 661, 700, 701, 715, 716, 717, 765, 770, 788], "trace_event": 790, "traced": [666, 789, 791], "tracevalu": 746, "tracing": [766, 789, 790, 791], "track": [585, 586, 591, 594, 601, 602, 608, 610, 611, 617, 664, 666, 670, 672, 676, 678, 679, 683, 688, 694, 714, 715, 717, 721, 726, 727, 731, 732, 746, 747, 749, 751, 762, 765, 766, 768, 769, 770, 777, 788, 810, 811, 812, 813, 814, 816], "tracked": [608, 613, 678, 679, 680, 715, 721, 749, 770], "tracker": 609, "tracking": [591, 601, 640, 670, 694, 709, 714, 716, 731, 733, 749, 751, 766, 772], "tracksregliveness": 721, "trad": [602, 604, 683, 714, 726, 749, 766, 795], "tradbigmip": 642, "tradeoff": [595, 611, 680, 715, 730, 811], "tradit": [585, 622], "traditional": [585, 586, 593, 608, 641, 682, 700, 746, 749, 765, 794, 808], "traditionally": [594, 608, 731, 732], "tradlittlemip": 642, "traffic": [724, 749, 751, 814], "tragic": 751, "trailing": [589, 607, 611, 612, 617, 642, 661, 666, 681, 689, 715, 721, 749, 776, 792], "train": [123, 779], "training": [593, 646, 715, 779], "trait": [749, 774, 792], "tramp": 715, "tramp1": 715, "transact": 667, "transcendental": 662, "transcribed": 810, "transcript": 811, "transf": [662, 665, 713, 714, 715, 721, 811, 812, 813, 814, 815, 816], "transfer": [673, 715, 766], "transferred": [597, 673, 715, 764, 779], "transferring": 714, "transform": [589, 595, 602, 606, 608, 612, 669, 674, 676, 677, 678, 680, 683, 685, 691, 692, 693, 704, 712, 714, 715, 719, 727, 730, 733, 749, 750, 755, 765, 768, 770, 774, 777, 781, 784, 786, 787, 788, 793, 795, 796, 797, 810, 811, 812, 813, 814, 816], "transformed": [608, 640, 712, 715, 719, 746, 749, 755, 766, 770, 782, 783, 795], "transformedtsm": 795, "transformfunct": 795, "transforming": [611, 683, 692, 715, 719, 730, 746, 755, 770, 781], "transformlai": 795, "transient": [670, 700], "transiently": [585, 586], "transit": [591, 608, 640, 670, 671, 694, 712, 726, 727, 730, 731, 751, 761, 772, 811], "transitional": 754, "transitioning": [715, 753, 765, 784, 794], "transitively": [715, 788], "transitivity": 727, "translat": [595, 608, 611, 614, 619, 623, 656, 658, 660, 665, 666, 671, 675, 676, 679, 681, 683, 688, 694, 698, 715, 731, 736, 746, 749, 752, 754, 755, 765, 766, 774, 775, 783, 792, 816, 817], "translated": [595, 608, 661, 690, 715, 719, 743, 774, 792], "translating": [594, 608, 678, 681, 754, 765, 774, 786, 792], "translator": 690, "transm": 715, "transmitted": 715, "transparency": 718, "transparent": [674, 762], "transparently": [611, 661, 681, 710, 718, 749], "transposed": 715, "trap": [20, 133, 134, 136, 139, 140, 141, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 212, 224, 226, 227, 229, 231, 234, 235, 236, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 370, 482, 605, 665, 678, 681, 710, 748], "trap_present": 591, "trapping": [618, 715], "travers": [608, 617, 660, 675, 680, 691, 696, 746, 749, 788], "traversal": [608, 708, 726, 727, 746], "traversed": [749, 755], "traversing": [746, 788], "trc": 608, "tre": [591, 593, 604, 606, 608, 610, 611, 617, 645, 660, 667, 670, 673, 676, 678, 679, 680, 681, 682, 683, 685, 686, 689, 701, 703, 706, 708, 715, 716, 719, 727, 728, 729, 730, 731, 749, 751, 755, 757, 761, 765, 772, 776, 780, 781, 787, 788, 790, 808, 810, 811, 812, 813, 814, 815, 816], "treat": [585, 586, 591, 595, 608, 612, 615, 617, 622, 631, 673, 679, 689, 711, 714, 715, 717, 718, 721, 727, 732, 736, 762, 768, 774, 776, 781, 790, 817], "treated": [24, 127, 217, 375, 487, 585, 586, 591, 595, 597, 598, 606, 612, 617, 622, 628, 640, 642, 654, 661, 675, 681, 712, 714, 715, 717, 731, 762, 765, 776, 786], "treating": [585, 586, 597, 679, 715, 727, 770, 810], "treatment": [586, 591, 680, 749, 786], "trevi\u00f1o": 603, "tri": [602, 603, 606, 608, 643, 645, 679, 715, 717, 722, 727, 746, 753, 759, 767, 782, 786, 788], "triag": [601, 701, 710], "triaged": [601, 682], "triaging": 608, "trick": [664, 670, 684, 706, 708, 715, 749, 751, 766, 774, 814], "tricki": 714, "trickrevnum": 751, "tricky": [595, 662, 680, 779, 788], "tried": [608, 811], "trig": 786, "trigg": [591, 594, 665, 680, 700, 715, 716, 717, 721, 730, 731, 747, 749, 768, 772, 781, 792, 794, 796], "trigger": [590, 602, 680, 701, 709, 714, 715, 717, 731, 747, 749, 780, 811], "triggered": [606, 611, 714, 717, 720, 768, 792], "triggering": [633, 715, 731], "trim": 751, "trinity": 591, "trip": [597, 715, 719, 746, 755, 766, 782], "tripcount": 715, "tripl": [598, 606, 618, 620, 640, 643, 657, 670, 678, 679, 703, 706, 714, 720, 721, 731, 753, 765, 781, 786, 815, 816], "triplet": [661, 715], "tripped": 611, "trivial": [594, 595, 597, 607, 610, 611, 661, 674, 681, 683, 691, 693, 700, 713, 714, 715, 746, 751, 762, 765, 771, 772, 786, 788, 791, 809, 814, 817, 818], "trivially": [591, 608, 676, 710, 715, 719, 746, 747, 749, 751, 765, 766, 814, 817], "troubl": [661, 679, 683, 685], "troubleshooting": 701, "trouv": 793, "tru": [591, 594, 595, 600, 607, 608, 611, 612, 613, 617, 620, 626, 632, 640, 646, 655, 661, 665, 666, 670, 680, 681, 688, 689, 693, 699, 700, 702, 706, 708, 710, 712, 714, 715, 717, 719, 721, 727, 729, 730, 736, 744, 746, 747, 749, 751, 757, 761, 762, 765, 774, 775, 777, 781, 782, 783, 786, 787, 788, 789, 790, 792, 796, 809, 810, 811, 812, 813, 814, 815, 816], "true_branch_weight": 600, "truebr": 765, "truedest": 715, "truly": [725, 749, 766, 796], "trunc": [710, 785], "truncat": [585, 586, 590, 622, 710, 715], "truncated": [30, 51, 142, 223, 237, 380, 400, 493, 513, 585, 586, 590, 689, 715], "truncating": [585, 586, 689, 715, 786], "truncinst": 746, "trunk": [605, 608, 672, 682, 686, 707, 717, 747, 751, 765, 779], "trust": [611, 670, 761, 765, 796], "trusted": [670, 762], "truth": [715, 726, 812], "truthful": 670, "try": [594, 595, 596, 597, 601, 602, 603, 606, 608, 609, 611, 631, 661, 662, 664, 670, 672, 678, 680, 682, 683, 686, 700, 701, 709, 717, 722, 724, 727, 728, 731, 743, 746, 749, 751, 760, 762, 766, 788, 789, 792, 795, 796, 797, 811, 813, 814, 815, 817], "trying": [594, 608, 611, 613, 670, 678, 680, 683, 721, 726, 730, 749, 761, 771, 795, 817], "tsc": [790, 791], "tsc701": 786, "tsc_delt": 791, "tsctx": 731, "tsd": 761, "tsflag": [776, 786], "tslp": 755, "tsm": [731, 736, 794, 795, 796, 797, 811, 812, 813, 814], "tsm1": 731, "tsm2": 731, "tstri": 721, "tsubas": 663, "tsvg": 790, "tt": [712, 714], "tti": [753, 754], "ttmp": [10, 11, 12, 13, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 132, 137, 138, 157, 158, 159, 225, 228, 232, 233, 254, 255, 256, 317, 318, 322, 323, 328, 329, 330, 331, 332, 341, 342, 343, 344, 345, 347, 348, 349, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 410, 411, 412, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 591], "ttmp0": 590, "ttmp4": 590, "ttmp5": 590, "ttmp6": 590, "ttmp7": 590, "tuesday": 682, "tun": [661, 749, 757, 761], "tunabl": [700, 761], "tuned": [608, 678, 765, 766, 785, 814], "tupl": [675, 693, 715, 751], "turbo": 596, "turing": [809, 811], "turk": 591, "turn": [591, 597, 602, 603, 606, 607, 608, 609, 612, 622, 661, 670, 683, 702, 704, 715, 718, 719, 722, 726, 731, 745, 746, 749, 753, 760, 765, 770, 774, 776, 777, 788, 794, 795, 796, 809, 810, 817], "turned": [586, 611, 665, 670, 674, 715, 749, 786], "turnercamelback": 753, "turnerlldb": 753, "turning": [595, 608, 715, 731, 746, 755], "tutorial": [661, 662, 682, 683, 698, 708, 717, 727, 728, 731, 749, 793, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816], "tutoriel": 793, "tval": 765, "tweak": [661, 662, 683, 686, 708, 745, 789, 794], "tweaking": 811, "twic": [593, 665, 685, 686, 689, 715, 719, 727, 749, 758, 779, 788, 811], "twiddling": [715, 811, 812, 813, 814], "twin": [714, 775], "twist": 794, "twitt": 724, "two": [585, 586, 588, 589, 590, 591, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 611, 612, 617, 620, 628, 629, 631, 632, 639, 640, 645, 646, 655, 661, 662, 665, 666, 669, 670, 671, 672, 673, 675, 677, 678, 679, 680, 683, 688, 689, 693, 694, 696, 698, 700, 701, 704, 708, 709, 712, 713, 714, 715, 716, 717, 719, 720, 721, 726, 727, 728, 729, 730, 731, 732, 733, 736, 740, 743, 746, 747, 748, 749, 750, 751, 753, 759, 761, 762, 765, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 783, 785, 786, 788, 790, 792, 794, 795, 796, 809, 811, 812, 813, 814, 817], "twoaddressinstructionpass": 608, "twoargfp": 776, "twooperandaliasconstraint": 776, "txt": [593, 606, 611, 617, 627, 653, 655, 661, 664, 670, 683, 687, 700, 707, 722, 747, 751, 765, 767, 775, 779, 781, 786, 787, 788, 790, 794, 795, 796, 797], "ty": [611, 674, 715, 749], "ty2": 715, "ty64": 710, "tying": 608, "typ": [27, 129, 220, 378, 490, 587, 591, 594, 595, 597, 598, 600, 602, 603, 605, 606, 608, 613, 615, 618, 622, 624, 627, 628, 631, 633, 638, 640, 641, 642, 643, 650, 654, 660, 661, 662, 665, 669, 670, 673, 675, 679, 680, 683, 685, 690, 693, 694, 696, 698, 701, 706, 707, 708, 709, 710, 711, 713, 714, 716, 718, 720, 723, 726, 727, 728, 729, 730, 734, 738, 741, 744, 747, 750, 753, 755, 757, 759, 765, 766, 768, 770, 772, 775, 777, 779, 780, 781, 784, 788, 789, 790, 791, 794, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820], "type0": 693, "type1": 693, "type_info": 673, "type_nam": 591, "typecod": 674, "typed": [585, 607, 661, 676, 680, 681, 715, 732, 746, 749, 768, 774, 776, 789, 808, 809, 810, 811, 816, 817], "typedef": [611, 645, 660, 675, 749, 792, 795], "typedescriptor2": 673, "typeendbegin": 743, "typeflag": [660, 765], "typeid": [674, 715, 727, 783], "typeid1": 783, "typeid2": 783, "typeid3": 783, "typeidref": 715, "typeindex": [735, 743], "typeindexbegin": 743, "typeindexend": 743, "typeinto": 703, "typeless": 588, "typemap": 674, "typenam": [591, 715, 749], "typeof_": 774, "typeof_kind": 774, "typeof_xxx": 774, "typeprinting": 674, "typerecordbyt": 743, "typesaf": 715, "typeservermapsiz": 736, "typeset": 693, "typetestr": 715, "typical": [586, 595, 608, 611, 651, 671, 673, 687, 701, 715, 716, 718, 721, 730, 733, 746, 749, 759, 761, 765, 779, 785, 786, 791], "typically": [585, 586, 591, 594, 595, 606, 608, 611, 612, 622, 624, 626, 632, 637, 641, 662, 669, 672, 673, 677, 679, 680, 681, 685, 688, 689, 690, 694, 705, 707, 708, 714, 715, 717, 720, 721, 723, 728, 730, 731, 732, 741, 746, 747, 749, 750, 759, 765, 766, 768, 775, 776, 779, 781, 786, 788, 791, 817], "typing": [683, 702, 715, 730, 749, 792], "typo": [611, 728], "typos": 612, "t\u00e9l\u00e9charg": 793, "u": [585, 586, 612, 615, 622, 626, 631, 636, 640, 641, 642, 643, 649, 650, 654, 667, 670, 683, 715, 747, 749, 751, 781, 786, 788], "u1": [667, 751], "u16": [0, 3, 4, 9, 590], "u16x2": [0, 1, 2, 3, 4, 7, 8, 9, 588], "u16x4": [0, 2, 3, 4, 9], "u2": [667, 751, 759], "u3": [751, 759], "u32": [0, 1, 2, 3, 4, 7, 8, 9, 587, 590, 608, 729, 759], "u32x4": [0, 2, 3, 4, 9], "u4x8": [1, 7, 8, 9], "u64": [0, 2, 3, 4, 9, 590, 729], "u8x4": [0, 1, 2, 3, 4, 7, 8, 9], "u8x8": [0, 2, 3, 4, 9], "u999999": 747, "ualph": 776, "uav": 591, "uavexportt": 591, "ub": 715, "ubsan": [606, 717, 761], "ubuntu": [670, 683, 702, 706, 728, 767], "ubyt": [585, 586, 591], "uc": 591, "uclock_realtim": 703, "uconst": 585, "ud2": [605, 608], "ud2a": 608, "udiv": 688, "ueq": [715, 814], "ueyam": 753, "uf": 755, "ufmt": 0, "uge": 715, "uglify": 811, "ugly": [612, 676, 813], "ugt": 715, "ui": [607, 747], "uid": [622, 636, 642, 654, 715], "uimm20": [56, 241, 242, 405, 518], "uimm32": 145, "uimm8": 145, "uint": [618, 645], "uint128": 743, "uint128oct": 743, "uint16": [677, 740, 743, 768], "uint16_t": [591, 712, 735, 736, 743, 744, 765, 774, 786, 792], "uint16short": 743, "uint16x4_t": 597, "uint32": [677, 738, 743, 768], "uint32_max": [749, 765], "uint32_t": [591, 665, 715, 736, 739, 741, 743, 765, 792], "uint32long": 743, "uint32x2_t": 597, "uint64": [677, 743, 768], "uint64_max": 599, "uint64_t": [599, 711, 714, 715, 727, 744, 749, 759, 792], "uint64quad": 743, "uint8": [677, 768], "uint8_t": [591, 717, 735, 739, 774, 792], "uint_64": 591, "uint_max": [715, 719], "uintptr_t": 766, "uitofp": [810, 812, 814], "uiuc": 670, "ule": 715, "uleb": 591, "uleb128": [586, 675], "ulim": 717, "ulittle32_t": [740, 741], "ulp": 715, "ult": [715, 765, 812, 814], "ultimat": [611, 715, 811], "ultimately": [617, 670, 726, 758, 765, 766], "ultrasparc": [683, 786], "ultrasparc3": 786, "um": [715, 751], "um1": 751, "um2": 751, "um3": 751, "um4": 751, "um5": 751, "um6": 751, "um7": 751, "um8": 751, "umbrel": [670, 751], "uml": 669, "umrel": 751, "unabbrev": 598, "unabbreviated": 598, "unabl": [585, 609, 640, 668, 678, 693, 715, 716, 733, 749, 766], "unabridged": 814, "unaccept": 670, "unadorned": 715, "unaffected": 726, "unaligned": [595, 678, 735], "unallocated": 725, "unambiguous": 710, "unannotated": 751, "unary": [776, 814, 815, 816, 817, 818], "unaryexprast": [813, 814, 815, 816], "unassign": 601, "unassigned": 590, "unattended": 602, "unavail": [595, 640, 668, 710, 765, 786], "unawar": [662, 715], "unbiased": 599, "unblock": 670, "unbound": [640, 786], "unbounded": [608, 640, 715], "unbuild": 751, "uncached": 591, "uncaptured": 715, "uncategorized": 661, "uncertain": [664, 670, 772], "uncertainty": [603, 610], "unchanged": [586, 715, 749, 751, 770, 782], "unchanging": [594, 715, 749, 765], "uncharacterized": 743, "unchecked": 749, "unclear": [585, 586, 611, 612, 736, 741, 743, 814], "unclutter": 771, "uncomfort": 609, "uncommon": [607, 673, 693, 715, 757], "uncompiled": 731, "uncompress": [606, 683], "uncompressed": [666, 749], "unconditional": [585, 586, 608, 626, 689, 715, 719, 746, 770, 786, 812], "unconditionally": [594, 608, 611, 675, 701, 710, 715, 796, 816], "unconnected": 681, "uncontroversial": 680, "unconventional": 817, "unconvincing": 717, "uncooper": 680, "uncov": 611, "uncovered": 717, "uncovering": 606, "undecided": 751, "undeclared": [715, 810], "undef": [595, 612, 665, 673, 690, 710, 713, 715, 721, 726, 749, 765, 774], "undefin": 606, "undefined": [591, 595, 597, 601, 606, 611, 612, 641, 642, 645, 654, 665, 673, 675, 676, 678, 681, 689, 692, 709, 714, 718, 719, 726, 746, 748, 749, 761, 765, 774, 776, 777, 782, 785, 786], "undefinedbehaviorsanitiz": 717, "undefinit": 715, "under": [591, 593, 596, 606, 608, 611, 613, 617, 634, 640, 649, 650, 661, 665, 666, 670, 673, 676, 678, 683, 685, 699, 701, 707, 709, 713, 714, 715, 717, 719, 725, 726, 728, 729, 731, 747, 751, 762, 766, 770, 775, 777, 781, 783, 784, 786, 787, 788, 794, 795, 796, 797, 809, 817, 819], "underestimat": 640, "underestimating": 715, "underflow": [586, 590, 591, 612], "undergo": [610, 715], "undergoing": [731, 746], "underlying": [597, 606, 608, 611, 640, 661, 670, 680, 688, 689, 701, 714, 715, 731, 732, 740, 741, 749, 761, 766, 770, 775, 783, 816], "undermin": 611, "undermining": 765, "underneath": [683, 750, 751, 781], "underscor": [611, 627, 721, 765], "understand": [594, 598, 601, 608, 609, 610, 611, 612, 617, 622, 640, 670, 673, 674, 680, 681, 705, 719, 722, 723, 727, 728, 734, 735, 739, 744, 747, 749, 760, 761, 766, 767, 770, 771, 777, 788, 790, 791, 792, 796, 810, 814, 816, 818], "understandability": 611, "understanding": [594, 598, 601, 611, 715, 727, 728, 744, 746, 765], "understood": [598, 608, 610, 611, 736, 739], "undesir": [715, 762], "undetected": [717, 761], "undisturbed": 611, "undocumented": [673, 736], "undoing": 597, "undu": 772, "unequal": [612, 715], "unexpect": 727, "unexpected": [585, 586, 603, 605, 607, 611, 670, 685, 749, 761, 814], "unexpectedly": [776, 781], "unexposed": 640, "unfamiliar": 767, "unflatten": 790, "unfolding": 766, "unforeseen": 698, "unfortunately": [662, 703, 705, 713, 715, 727, 749, 751, 765, 766, 788, 811, 812, 817], "unfriendly": 717, "unfused": 662, "unglamorous": 670, "unguarded": 715, "unhandled": [673, 749], "unhappy": 662, "unhardened": 766, "unhid": 661, "uni": 729, "unic": 661, "unicod": 643, "unif": [585, 586, 594], "unified": [586, 589, 591, 598, 612, 678, 705, 715, 749, 751], "uniform": [585, 611, 640, 715, 733, 749], "uniformly": [585, 611, 640, 701], "uniformretval": 715, "unify": [751, 759], "unimaginatively": 770, "unimplemented": 788, "unimport": [758, 770], "unindexed": 786, "uninitialized": [585, 586, 641, 680, 681, 715, 769, 775, 776], "uninstrumented": 736, "unintended": 746, "unintentional": 670, "uninteresting": 670, "unintrus": 715, "union": [594, 608, 611, 640, 693, 736, 765, 814], "uniprocessor": 595, "uniqu": [591, 598, 608, 612, 617, 641, 642, 665, 666, 667, 670, 673, 675, 701, 703, 710, 712, 715, 718, 727, 731, 733, 736, 741, 749, 751, 765, 770, 772, 775, 776, 777, 785, 790, 810, 811], "unique_ptr": [714, 729, 731, 749, 775, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "uniqued": [608, 711, 715, 731, 749, 782, 810], "uniqueid": 741, "uniquely": [612, 712, 743, 751, 765, 768], "uniqueness": [675, 741, 768], "uniqueretval": 715, "uniquing": [615, 715, 749], "unistd": 771, "unit": [20, 24, 123, 127, 212, 217, 370, 375, 482, 487, 585, 597, 605, 606, 611, 613, 626, 631, 661, 664, 665, 666, 673, 675, 676, 681, 689, 694, 710, 714, 715, 716, 717, 728, 730, 731, 733, 736, 744, 746, 747, 749, 757, 759, 765, 766, 772, 774, 775, 783, 785, 786, 787, 788, 811], "unittest": [605, 606, 728, 779, 781], "univers": 749, "universal": [616, 626, 643, 644, 651, 655, 666, 715], "universally": 607, "universit": 724, "university": [669, 670, 724], "unix": [606, 611, 612, 622, 661, 676, 679, 683, 714, 715, 749, 771, 781], "unknown": [585, 590, 591, 608, 632, 638, 640, 661, 668, 672, 689, 692, 699, 703, 705, 715, 730, 736, 739, 740, 744, 748, 749, 766, 782, 792, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816], "unknownptr": 715, "unknownvalu": 715, "unless": [585, 586, 588, 591, 593, 601, 602, 604, 606, 607, 608, 610, 611, 612, 615, 617, 618, 626, 627, 631, 633, 637, 640, 642, 643, 661, 662, 665, 670, 671, 673, 678, 680, 681, 707, 715, 717, 722, 726, 731, 744, 746, 749, 751, 753, 760, 762, 767, 768, 770, 772, 775, 779, 780, 781, 782, 786, 788, 812, 814], "unlik": [585, 586, 591, 595, 598, 604, 607, 608, 611, 653, 662, 673, 680, 683, 689, 699, 700, 708, 715, 726, 731, 749, 753, 766, 768, 776, 787, 788, 811, 814], "unlikely": [595, 610, 702, 746, 749, 765, 766, 770, 796], "unlimited": 640, "unlink": [683, 749], "unload": 788, "unloaded": 715, "unloading": 591, "unlock": 731, "unlocked": 731, "unmaintain": 777, "unmaintained": 670, "unmanaged": [715, 770], "unmangled": 628, "unmapped": [757, 761], "unmask": 715, "unmasked": 715, "unmatched": 646, "unmitigated": 766, "unmodeled": 640, "unmodified": [589, 715, 770, 795], "unnamed": [607, 661, 715, 721, 746, 776], "unnamed_addr": [598, 675, 715], "unnecessarily": [594, 610, 788], "unnecessary": [586, 605, 608, 678, 690, 710, 715, 721, 746, 749, 766, 769, 770, 786, 796], "unneeded": [642, 654, 814], "unnormal": 715, "unnormalized": 589, "uno": 715, "unofficial": [681, 752], "unop": [590, 813, 814, 815, 816], "unoptimized": [618, 683, 728, 765], "unord": 715, "unordered": [591, 606, 611, 612, 722, 767, 770, 786], "unordered_map": [611, 749], "unordered_set": 749, "unorm": [0, 2, 3, 4, 9], "unpack": [683, 685, 706], "unpacking": [664, 684], "unparsed": [617, 809], "unpatch": 789, "unpatched": 707, "unpatching": 789, "unpeeling": 591, "unpleas": 766, "unpoisoning": 715, "unpredicated": 715, "unpredictability": 715, "unpredicted": 766, "unprofit": [746, 766, 782], "unprotected": [605, 766], "unprototyped": 715, "unqualified": [608, 610, 765], "unreach": [603, 611, 633, 665, 666, 673, 677, 678, 680, 707, 714, 719, 727, 746, 811, 812, 813, 814, 816], "unread": [595, 611, 686, 751, 766], "unreason": 670, "unrecogniz": 641, "unrecognized": [657, 661, 776], "unrecurs": [814, 815, 816], "unreferenced": [607, 714, 715], "unregist": 788, "unregister": 788, "unrelated": [611, 642, 650, 664, 670, 707, 749, 765, 766, 786], "unreli": [594, 717], "unrelocated": [715, 770], "unreserved": 591, "unresolved": [617, 817], "unrespons": 751, "unreviewed": 670, "unroll": [755, 785], "unroll_and_jam": [757, 782], "unrolled": [715, 755, 782], "unrolling": [632, 662, 715, 746], "unsaf": [595, 618, 620, 715, 765, 768, 769, 782, 817], "unsat": 715, "unseen": 598, "unset": [606, 607, 738, 775, 776, 788, 816], "unshadowed": [812, 813, 814, 815, 816], "unsigned": [54, 55, 56, 144, 145, 240, 241, 242, 342, 403, 404, 405, 516, 517, 518, 585, 586, 588, 589, 591, 594, 598, 600, 608, 611, 612, 618, 646, 657, 661, 666, 680, 681, 688, 689, 715, 718, 719, 721, 727, 729, 732, 743, 749, 765, 766, 774, 785, 786, 790, 791, 792, 810, 811, 812, 813, 814, 815, 816], "unsignedcharact": 743, "unsimm": 608, "unsound": 770, "unspecified": [585, 586, 603, 608, 628, 642, 689, 715, 729, 774, 776, 780, 791], "unstabl": [605, 606, 632, 701, 702, 715, 758], "unstructured": 791, "unsuccessful": 731, "unsuit": [605, 670, 703, 779], "unsuppored": 591, "unsupported": [591, 595, 608, 617, 685, 693, 694, 714, 715, 717, 758, 781, 786], "unsupportedfor": 693, "unsur": [601, 610, 670, 760], "unswitch": 719, "unswitched": 746, "unswitching": 746, "unswizzled": [586, 591], "untested": 758, "until": [585, 586, 591, 597, 598, 602, 608, 610, 611, 613, 617, 632, 640, 641, 661, 664, 665, 670, 673, 678, 683, 686, 688, 694, 711, 714, 715, 717, 720, 726, 731, 734, 746, 747, 749, 751, 758, 760, 762, 765, 766, 776, 779, 781, 786, 788, 789, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816], "untrusted": 762, "untrusted_data_from_call": 766, "untrusted_offset_from_call": 766, "untrusted_size_from_call": 766, "untyped": [721, 732], "unus": [585, 586], "unused": [27, 129, 220, 288, 306, 308, 378, 490, 585, 589, 590, 591, 603, 608, 611, 612, 633, 665, 716, 729, 730, 733, 735, 736, 740, 743, 748, 749, 761, 765, 770, 782, 783, 791], "unused1": 736, "unused2": 736, "unused_pad": [589, 591], "unused_preserv": [589, 591], "unused_sext": 589, "unusual": [608, 611, 670, 679, 680, 694, 749, 764, 776, 817], "unvectoriz": 785, "unversioned": 782, "unvisited": 603, "unwelcom": 609, "unwieldy": [728, 789], "unwind": [585, 586, 591, 600, 606, 643, 649, 650, 665, 673, 675, 678, 700, 703, 713, 715, 716, 757, 786, 796], "unwindcursor": 673, "unwinder": 673, "unwinding": [585, 586, 591, 608, 665, 673, 715, 716, 746], "unwindregistersrestor": 673, "unwindregisterssav": 673, "unwis": 715, "unwound": [585, 586, 715, 766], "unwrap": 794, "unwrapping": [731, 749], "unwritten": 728, "unzip": [683, 685, 758], "uop": [632, 640], "up": [585, 586, 588, 593, 594, 597, 598, 599, 601, 603, 604, 606, 608, 609, 610, 611, 613, 617, 620, 631, 632, 640, 643, 661, 662, 663, 664, 665, 666, 670, 673, 675, 677, 678, 679, 680, 683, 684, 685, 691, 695, 699, 700, 701, 702, 703, 705, 706, 707, 709, 714, 715, 716, 717, 719, 721, 723, 726, 727, 728, 729, 730, 732, 733, 734, 736, 741, 743, 744, 746, 749, 751, 756, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 770, 774, 776, 777, 779, 780, 781, 782, 785, 786, 790, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "upa": 715, "upcast": 708, "upcoming": [668, 670, 724], "updat": [585, 586, 591, 594, 605, 608, 610, 615, 622, 642, 661, 664, 665, 670, 673, 674, 680, 683, 685, 708, 714, 715, 718, 719, 720, 721, 725, 726, 727, 728, 730, 731, 740, 743, 746, 747, 749, 753, 757, 760, 761, 762, 765, 766, 768, 770, 781, 788, 789, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 817], "update_analyze_test_check": 781, "update_cacert": 683, "update_cc_test_check": 781, "update_llc_test_check": 781, "update_mca_test_check": 781, "update_mir_test_check": 781, "update_test_check": 781, "updated": [585, 586, 591, 592, 594, 597, 610, 612, 664, 665, 670, 683, 685, 707, 708, 710, 714, 715, 718, 719, 726, 728, 730, 747, 751, 757, 765, 766, 770, 782, 788, 794, 795, 796, 814], "updater": 730, "updating": [585, 592, 642, 654, 707, 715, 725, 730, 749, 788], "upen": 596, "upgrad": [670, 682, 683, 732, 755], "upgraded": [715, 765], "upgrading": [683, 751, 785], "upheld": 770, "uphold": [715, 766], "upl": 715, "upload": [683, 707, 728, 747, 751], "uploaded": [707, 747], "uploading": [707, 747], "upon": [585, 586, 622, 659, 670, 680, 715, 720, 731, 749, 750, 753, 762, 765, 786], "upper": [585, 586, 589, 591, 611, 613, 641, 715, 730, 749, 753, 774, 786], "upper16": 675, "uppercas": [591, 604, 776], "uppercasemod": 775, "upset": 660, "upsid": 670, "upstream": [586, 664, 670, 672, 678, 683, 707, 751, 770, 772], "upstream_branch": 751, "upstreamed": [586, 670], "upstreaming": [586, 751], "upward": [617, 715, 765], "uq": 715, "urem": [608, 674], "urgent": 610, "uri_encoded_os_file_path": 591, "url": [722, 728, 747, 751, 767], "us": [608, 609, 611, 612, 635, 661, 664, 666, 669, 670, 671, 688, 690, 694, 700, 701, 704, 709, 714, 715, 719, 726, 727, 728, 729, 731, 744, 747, 749, 751, 752, 757, 759, 765, 783, 788, 790, 794, 795, 796, 809, 810, 811, 813, 814, 815, 816, 818], "usabl": [608, 618, 661, 703, 748, 749, 754, 765, 786, 790], "usag": [591, 600, 608, 611, 612, 613, 627, 631, 632, 636, 638, 640, 642, 643, 645, 655, 661, 665, 666, 683, 688, 690, 701, 702, 715, 721, 727, 729, 731, 732, 734, 735, 736, 743, 746, 749, 756, 757, 759, 769, 770, 774, 777, 779, 781, 784, 788], "usb": 702, "use": [117, 205, 310, 580, 585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 631, 632, 636, 640, 641, 642, 643, 645, 646, 650, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 668, 669, 670, 672, 673, 674, 675, 679, 680, 682, 683, 685, 686, 688, 689, 690, 691, 692, 693, 694, 699, 701, 702, 703, 704, 706, 707, 708, 709, 710, 713, 714, 716, 718, 719, 720, 721, 722, 723, 725, 727, 728, 729, 730, 732, 733, 736, 740, 741, 747, 748, 750, 751, 752, 753, 755, 756, 757, 758, 759, 761, 762, 764, 765, 768, 769, 770, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "use_": 749, "use_back": 749, "use_begin": [611, 749], "use_counter": 717, "use_empty": 749, "use_end": 749, "use_iterator": 749, "use_siz": 749, "use_value_profil": 717, "used": [25, 26, 28, 31, 32, 68, 82, 83, 84, 107, 110, 111, 117, 120, 128, 130, 159, 175, 196, 199, 200, 205, 209, 218, 219, 221, 256, 270, 301, 304, 305, 310, 314, 316, 321, 326, 327, 338, 339, 340, 341, 351, 355, 376, 377, 379, 381, 382, 420, 433, 434, 435, 457, 467, 468, 479, 488, 489, 491, 494, 495, 532, 546, 547, 548, 571, 574, 575, 580, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 598, 599, 600, 601, 602, 604, 605, 607, 609, 611, 612, 613, 614, 615, 617, 618, 619, 622, 624, 625, 626, 627, 628, 631, 632, 633, 637, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 652, 654, 655, 656, 658, 660, 661, 662, 663, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 683, 685, 687, 688, 689, 691, 693, 694, 698, 699, 700, 703, 704, 705, 708, 709, 710, 712, 713, 714, 716, 717, 718, 719, 720, 721, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 740, 741, 743, 744, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 759, 761, 762, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817], "usedlib": 750, "useful": [585, 586, 591, 593, 595, 598, 600, 602, 603, 604, 606, 608, 611, 612, 613, 617, 618, 622, 624, 625, 631, 632, 640, 642, 646, 655, 657, 659, 660, 661, 662, 663, 665, 666, 669, 672, 673, 676, 678, 680, 682, 683, 685, 686, 689, 691, 700, 701, 704, 705, 710, 714, 715, 722, 726, 728, 729, 730, 731, 732, 733, 736, 743, 746, 747, 750, 753, 759, 761, 765, 766, 767, 768, 770, 772, 774, 775, 776, 777, 781, 784, 786, 788, 808, 809, 810, 811, 812, 813, 814, 816, 819], "usefulness": [585, 586], "useless": [597, 704, 765, 812, 817], "uselistord": 715, "uselistorder_bb": 715, "usenamedoperandt": [776, 786], "user": [585, 586, 593, 594, 595, 599, 602, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617, 619, 624, 632, 640, 646, 656, 658, 660, 661, 663, 664, 665, 666, 670, 671, 673, 675, 680, 682, 683, 685, 690, 693, 700, 701, 704, 705, 707, 708, 714, 715, 716, 718, 719, 723, 724, 726, 727, 728, 731, 744, 745, 747, 751, 755, 757, 759, 761, 762, 765, 766, 767, 769, 772, 774, 775, 777, 781, 782, 785, 786, 788, 791, 793, 794, 808, 809, 810, 811, 812, 815, 816, 817, 818, 819], "user_dat": 591, "user_data_entry": 591, "user_data_lim": 591, "user_sgpr": 591, "user_sgpr_count": 591, "usercb": 717, "userdatamapping": 591, "userdefinederror": 749, "usernam": [670, 751, 762], "usersclang": 671, "userspac": 673, "uses_append_consum": 591, "uses_prim_id": 591, "uses_rov": 591, "uses_uav": 591, "uses_viewport_array_index": 591, "usescustominsert": [776, 777], "usesmetadat": 680, "using": [27, 84, 129, 220, 378, 490, 585, 586, 587, 589, 590, 591, 592, 593, 595, 596, 598, 603, 604, 606, 607, 609, 610, 612, 613, 615, 617, 620, 622, 624, 626, 630, 631, 632, 642, 645, 646, 649, 653, 661, 664, 665, 666, 668, 669, 670, 671, 672, 674, 677, 678, 681, 682, 684, 689, 690, 691, 692, 693, 694, 696, 700, 701, 702, 703, 707, 708, 709, 712, 713, 714, 715, 716, 718, 721, 724, 726, 727, 728, 729, 731, 732, 741, 743, 746, 748, 750, 751, 753, 755, 756, 758, 759, 760, 761, 762, 765, 766, 768, 770, 771, 774, 775, 777, 779, 780, 781, 782, 784, 785, 786, 787, 790, 792, 794, 796, 810, 811, 812, 813, 814, 815, 816, 819], "usr": [606, 636, 661, 662, 672, 683, 699, 700, 702, 705, 706, 717, 729], "usual": [595, 602, 606, 611, 612, 640, 661, 683, 686, 699, 714, 715, 717, 718, 727, 728, 731, 749, 751, 762, 764, 769, 775, 776, 788, 794, 816], "usually": [590, 594, 595, 598, 602, 606, 608, 611, 612, 624, 640, 641, 659, 661, 662, 665, 670, 674, 675, 680, 681, 688, 689, 693, 705, 708, 714, 715, 716, 717, 719, 721, 722, 727, 728, 731, 732, 736, 741, 743, 747, 749, 757, 761, 762, 765, 767, 772, 775, 776, 779, 780, 781, 786, 788, 817], "ut": 715, "utc": 682, "utf": [585, 586, 591, 660, 675, 774], "util": [591, 593, 611, 660, 672, 685, 704, 707, 709, 710, 749, 758, 774, 777, 779, 781, 786, 787, 814], "utilis": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 122, 336, 793], "utilit": [606, 660, 683, 698, 701, 708, 714, 731, 749, 762, 794, 796], "utility": [594, 606, 622, 624, 641, 643, 646, 647, 660, 661, 670, 680, 683, 701, 715, 719, 731, 749, 784, 794, 796, 809, 814, 815], "utiliz": [593, 620, 640, 785, 786], "utilized": [606, 640, 680], "utilizing": [586, 606, 719], "uuid": 631, "uuidcreat": 741, "uv": 715, "uval": 715, "uvari": 606, "uword": 591, "uwtabl": [598, 715, 765, 789], "uy": 715, "v": [10, 11, 12, 13, 15, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 317, 318, 319, 322, 323, 324, 328, 329, 330, 331, 332, 334, 335, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 361, 363, 365, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 589, 591, 593, 594, 595, 597, 602, 608, 611, 612, 615, 616, 617, 622, 631, 634, 636, 637, 641, 642, 643, 644, 646, 649, 650, 654, 655, 660, 667, 672, 682, 685, 688, 691, 699, 701, 703, 708, 715, 717, 719, 727, 728, 732, 749, 751, 753, 754, 759, 766, 767, 770, 771, 774, 776, 779, 781, 786, 809, 810, 811, 812, 813, 814, 815, 816], "v0": [17, 121, 210, 480, 586, 589, 590, 591, 597, 715], "v1": [17, 121, 210, 480, 586, 588, 590, 591, 594, 611, 715, 756, 766, 768, 776, 781], "v10": 662, "v110": 736, "v128": [715, 729], "v16": 729, "v16f32": 715, "v16i1": 715, "v16i32": 715, "v16p0f32": 715, "v16p1f32": 715, "v1f64": 688, "v1siz": 594, "v2": [588, 590, 594, 611, 663, 676, 686, 715, 736, 749, 752, 776, 781, 794, 795, 796, 797], "v200": 591, "v252": 590, "v253": 590, "v254": 590, "v255": [589, 590], "v256f64": 715, "v256i64": 715, "v2f32": 715, "v2f64": 715, "v2i32": 715, "v2i37": 715, "v2i64": 715, "v2i8": 715, "v2p1f64": 715, "v2p2f32": 715, "v2s32": 693, "v2s64": 693, "v2siz": 594, "v3": [117, 205, 310, 580, 588, 781], "v31": 715, "v32": [590, 729], "v36": 589, "v3i32": 688, "v4": [589, 590], "v40": 743, "v41": 743, "v4f128": 715, "v4f32": [688, 715], "v4f64": 715, "v4i1": 715, "v4i100": 715, "v4i32": 715, "v4i8": 715, "v4p0f64": 715, "v4p0f_i32f": 715, "v4p0p0f64": 715, "v4s32": 693, "v4t": 705, "v5": [589, 765], "v50": [736, 743], "v520": 591, "v6": [591, 705], "v60": 736, "v64": [715, 729], "v7": 705, "v70": [736, 743], "v8": [595, 663, 786], "v80": 743, "v8deprecatedinst": 786, "v8f32": 715, "v8f64": 715, "v8i1": 715, "v8i16": 786, "v8i32": 715, "v8i8": 715, "v8p0f32": 715, "v8p0f64": 715, "v8p0f_i32f": 715, "v8p0i32": 715, "v8p0i8": 715, "v8p0p0f32": 715, "v9": [663, 683, 786], "v_accvgpr_mov_b32": 9, "v_accvgpr_read_b32": [8, 9], "v_accvgpr_write_b32": [8, 9], "v_add3_u32": [0, 4, 9], "v_add_co_ci_u32": 0, "v_add_co_ci_u32_dpp": 0, "v_add_co_ci_u32_e64": 0, "v_add_co_ci_u32_sdw": 0, "v_add_co_u32": [0, 4, 9], "v_add_co_u32_dpp": [4, 9], "v_add_co_u32_e32": 590, "v_add_co_u32_e64": [4, 9], "v_add_co_u32_sdw": [4, 9], "v_add_f16": [0, 3, 4, 9, 590], "v_add_f16_dpp": [0, 3, 4, 9], "v_add_f16_e64": [0, 3, 4, 9], "v_add_f16_sdw": [0, 3, 4, 9], "v_add_f32": [0, 2, 3, 4, 9, 590, 591], "v_add_f32_dpp": [0, 3, 4, 9], "v_add_f32_e32": 591, "v_add_f32_e64": [0, 2, 3, 4, 9], "v_add_f32_sdw": [0, 3, 4, 9], "v_add_f64": [0, 2, 3, 4, 9], "v_add_i16": [4, 9], "v_add_i32": [2, 4, 9], "v_add_i32_e64": 2, "v_add_lshl_u32": [0, 4, 9], "v_add_nc_i16": 0, "v_add_nc_i32": 0, "v_add_nc_u16": 0, "v_add_nc_u32": 0, "v_add_nc_u32_dpp": 0, "v_add_nc_u32_e64": 0, "v_add_nc_u32_sdw": 0, "v_add_u16": [3, 4, 9, 590], "v_add_u16_dpp": [3, 4, 9], "v_add_u16_e64": [3, 4, 9], "v_add_u16_sdw": [3, 4, 9], "v_add_u32": [3, 4, 9, 590], "v_add_u32_dpp": [3, 4, 9], "v_add_u32_e64": [3, 4, 9], "v_add_u32_sdw": [3, 4, 9], "v_addc_co_u32": [4, 9], "v_addc_co_u32_dpp": [4, 9], "v_addc_co_u32_e64": [4, 9], "v_addc_co_u32_sdw": [4, 9], "v_addc_u32": [2, 3, 591], "v_addc_u32_dpp": 3, "v_addc_u32_e64": [2, 3], "v_addc_u32_sdw": 3, "v_alignbit_b32": [0, 2, 3, 4, 9], "v_alignbyte_b32": [0, 2, 3, 4, 9], "v_and_b32": [0, 2, 3, 4, 9], "v_and_b32_dpp": [0, 3, 4, 9], "v_and_b32_e64": [0, 2, 3, 4, 9], "v_and_b32_sdw": [0, 3, 4, 9], "v_and_or_b32": [0, 4, 9], "v_ashr_i32": 2, "v_ashr_i32_e64": 2, "v_ashr_i64": 2, "v_ashrrev_i16": [0, 3, 4, 9], "v_ashrrev_i16_dpp": [3, 4, 9], "v_ashrrev_i16_e64": [3, 4, 9], "v_ashrrev_i16_sdw": [3, 4, 9], "v_ashrrev_i32": [0, 2, 3, 4, 9], "v_ashrrev_i32_dpp": [0, 3, 4, 9], "v_ashrrev_i32_e64": [0, 2, 3, 4, 9], "v_ashrrev_i32_sdw": [0, 3, 4, 9], "v_ashrrev_i64": [0, 3, 4, 9], "v_bcnt_u32_b32": [0, 2, 3, 4, 9], "v_bcnt_u32_b32_e64": 2, "v_bfe_i32": [0, 2, 3, 4, 9], "v_bfe_u32": [0, 2, 3, 4, 9], "v_bfi_b32": [0, 2, 3, 4, 9], "v_bfm_b32": [0, 2, 3, 4, 9], "v_bfm_b32_e64": 2, "v_bfrev_b32": [0, 2, 3, 4, 9], "v_bfrev_b32_dpp": [0, 3, 4, 9], "v_bfrev_b32_e32": 591, "v_bfrev_b32_e64": [0, 2, 3, 4, 9], "v_bfrev_b32_sdw": [0, 3, 4, 9], "v_ceil_f16": [0, 3, 4, 9], "v_ceil_f16_dpp": [0, 3, 4, 9], "v_ceil_f16_e64": [0, 3, 4, 9], "v_ceil_f16_sdw": [0, 3, 4, 9], "v_ceil_f32": [0, 2, 3, 4, 9], "v_ceil_f32_dpp": [0, 3, 4, 9], "v_ceil_f32_e64": [0, 2, 3, 4, 9], "v_ceil_f32_sdw": [0, 3, 4, 9], "v_ceil_f64": [0, 2, 3, 4, 9, 590], "v_ceil_f64_dpp": 9, "v_ceil_f64_e32": 590, "v_ceil_f64_e64": [0, 2, 3, 4, 9], "v_clrexcp": [0, 2, 3, 4, 9], "v_clrexcp_e64": [0, 2, 3, 4, 9], "v_cmp": 589, "v_cmp_class_f16": [0, 3, 4, 9], "v_cmp_class_f16_e64": [0, 3, 4, 9], "v_cmp_class_f16_sdw": [0, 3, 4, 9], "v_cmp_class_f32": [0, 2, 3, 4, 9], "v_cmp_class_f32_e64": [0, 2, 3, 4, 9], "v_cmp_class_f32_sdw": [0, 3, 4, 9], "v_cmp_class_f64": [0, 2, 3, 4, 9], "v_cmp_class_f64_e64": [0, 2, 3, 4, 9], "v_cmp_eq_f16": [0, 3, 4, 9], "v_cmp_eq_f16_e64": [0, 3, 4, 9], "v_cmp_eq_f16_sdw": [0, 3, 4, 9], "v_cmp_eq_f32": [0, 2, 3, 4, 9], "v_cmp_eq_f32_e64": [0, 2, 3, 4, 9], "v_cmp_eq_f32_sdw": [0, 3, 4, 9], "v_cmp_eq_f64": [0, 2, 3, 4, 9], "v_cmp_eq_f64_e64": [0, 2, 3, 4, 9], "v_cmp_eq_i16": [0, 3, 4, 9], "v_cmp_eq_i16_e64": [0, 3, 4, 9], "v_cmp_eq_i16_sdw": [0, 3, 4, 9], "v_cmp_eq_i32": [0, 2, 3, 4, 9], "v_cmp_eq_i32_e64": [0, 2, 3, 4, 9], "v_cmp_eq_i32_sdw": [0, 3, 4, 9], "v_cmp_eq_i64": [0, 2, 3, 4, 9], "v_cmp_eq_i64_e64": [0, 2, 3, 4, 9], "v_cmp_eq_u16": [0, 3, 4, 9], "v_cmp_eq_u16_e64": [0, 3, 4, 9], "v_cmp_eq_u16_sdw": [0, 3, 4, 9], "v_cmp_eq_u32": [0, 2, 3, 4, 9], "v_cmp_eq_u32_e64": [0, 2, 3, 4, 9], "v_cmp_eq_u32_sdw": [0, 3, 4, 9], "v_cmp_eq_u64": [0, 2, 3, 4, 9], "v_cmp_eq_u64_e64": [0, 2, 3, 4, 9], "v_cmp_f_f16": [0, 3, 4, 9], "v_cmp_f_f16_e64": [0, 3, 4, 9], "v_cmp_f_f16_sdwa": [0, 3, 4, 9], "v_cmp_f_f32": [0, 2, 3, 4, 9], "v_cmp_f_f32_e64": [0, 2, 3, 4, 9], "v_cmp_f_f32_sdwa": [0, 3, 4, 9], "v_cmp_f_f64": [0, 2, 3, 4, 9], "v_cmp_f_f64_e64": [0, 2, 3, 4, 9], "v_cmp_f_i16": [3, 4, 9], "v_cmp_f_i16_e64": [3, 4, 9], "v_cmp_f_i16_sdw": [3, 4, 9], "v_cmp_f_i32": [0, 2, 3, 4, 9], "v_cmp_f_i32_e64": [0, 2, 3, 4, 9], "v_cmp_f_i32_sdw": [0, 3, 4, 9], "v_cmp_f_i64": [0, 2, 3, 4, 9], "v_cmp_f_i64_e64": [0, 2, 3, 4, 9], "v_cmp_f_u16": [3, 4, 9], "v_cmp_f_u16_e64": [3, 4, 9], "v_cmp_f_u16_sdw": [3, 4, 9], "v_cmp_f_u32": [0, 2, 3, 4, 9], "v_cmp_f_u32_e64": [0, 2, 3, 4, 9], "v_cmp_f_u32_sdw": [0, 3, 4, 9], "v_cmp_f_u64": [0, 2, 3, 4, 9], "v_cmp_f_u64_e64": [0, 2, 3, 4, 9], "v_cmp_ge_f16": [0, 3, 4, 9], "v_cmp_ge_f16_e64": [0, 3, 4, 9], "v_cmp_ge_f16_sdw": [0, 3, 4, 9], "v_cmp_ge_f32": [0, 2, 3, 4, 9], "v_cmp_ge_f32_e64": [0, 2, 3, 4, 9], "v_cmp_ge_f32_sdw": [0, 3, 4, 9], "v_cmp_ge_f64": [0, 2, 3, 4, 9], "v_cmp_ge_f64_e64": [0, 2, 3, 4, 9], "v_cmp_ge_i16": [0, 3, 4, 9], "v_cmp_ge_i16_e64": [0, 3, 4, 9], "v_cmp_ge_i16_sdw": [0, 3, 4, 9], "v_cmp_ge_i32": [0, 2, 3, 4, 9], "v_cmp_ge_i32_e64": [0, 2, 3, 4, 9], "v_cmp_ge_i32_sdw": [0, 3, 4, 9], "v_cmp_ge_i64": [0, 2, 3, 4, 9], "v_cmp_ge_i64_e64": [0, 2, 3, 4, 9], "v_cmp_ge_u16": [0, 3, 4, 9], "v_cmp_ge_u16_e64": [0, 3, 4, 9], "v_cmp_ge_u16_sdw": [0, 3, 4, 9], "v_cmp_ge_u32": [0, 2, 3, 4, 9], "v_cmp_ge_u32_e64": [0, 2, 3, 4, 9], "v_cmp_ge_u32_sdw": [0, 3, 4, 9], "v_cmp_ge_u64": [0, 2, 3, 4, 9], "v_cmp_ge_u64_e64": [0, 2, 3, 4, 9], "v_cmp_gt_f16": [0, 3, 4, 9], "v_cmp_gt_f16_e64": [0, 3, 4, 9], "v_cmp_gt_f16_sdwa": [0, 3, 4, 9], "v_cmp_gt_f32": [0, 2, 3, 4, 9], "v_cmp_gt_f32_e64": [0, 2, 3, 4, 9], "v_cmp_gt_f32_sdwa": [0, 3, 4, 9], "v_cmp_gt_f64": [0, 2, 3, 4, 9], "v_cmp_gt_f64_e64": [0, 2, 3, 4, 9], "v_cmp_gt_i16": [0, 3, 4, 9], "v_cmp_gt_i16_e64": [0, 3, 4, 9], "v_cmp_gt_i16_sdw": [0, 3, 4, 9], "v_cmp_gt_i32": [0, 2, 3, 4, 9], "v_cmp_gt_i32_e64": [0, 2, 3, 4, 9], "v_cmp_gt_i32_sdw": [0, 3, 4, 9], "v_cmp_gt_i64": [0, 2, 3, 4, 9], "v_cmp_gt_i64_e64": [0, 2, 3, 4, 9], "v_cmp_gt_u16": [0, 3, 4, 9], "v_cmp_gt_u16_e64": [0, 3, 4, 9], "v_cmp_gt_u16_sdw": [0, 3, 4, 9], "v_cmp_gt_u32": [0, 2, 3, 4, 9], "v_cmp_gt_u32_e64": [0, 2, 3, 4, 9], "v_cmp_gt_u32_sdw": [0, 3, 4, 9], "v_cmp_gt_u64": [0, 2, 3, 4, 9], "v_cmp_gt_u64_e64": [0, 2, 3, 4, 9], "v_cmp_le_f16": [0, 3, 4, 9], "v_cmp_le_f16_e64": [0, 3, 4, 9], "v_cmp_le_f16_sdw": [0, 3, 4, 9], "v_cmp_le_f32": [0, 2, 3, 4, 9], "v_cmp_le_f32_e64": [0, 2, 3, 4, 9], "v_cmp_le_f32_sdw": [0, 3, 4, 9], "v_cmp_le_f64": [0, 2, 3, 4, 9], "v_cmp_le_f64_e64": [0, 2, 3, 4, 9], "v_cmp_le_i16": [0, 3, 4, 9], "v_cmp_le_i16_e64": [0, 3, 4, 9], "v_cmp_le_i16_sdw": [0, 3, 4, 9], "v_cmp_le_i32": [0, 2, 3, 4, 9], "v_cmp_le_i32_e64": [0, 2, 3, 4, 9], "v_cmp_le_i32_sdw": [0, 3, 4, 9], "v_cmp_le_i64": [0, 2, 3, 4, 9], "v_cmp_le_i64_e64": [0, 2, 3, 4, 9], "v_cmp_le_u16": [0, 3, 4, 9], "v_cmp_le_u16_e64": [0, 3, 4, 9], "v_cmp_le_u16_sdw": [0, 3, 4, 9], "v_cmp_le_u32": [0, 2, 3, 4, 9], "v_cmp_le_u32_e64": [0, 2, 3, 4, 9], "v_cmp_le_u32_sdw": [0, 3, 4, 9], "v_cmp_le_u64": [0, 2, 3, 4, 9], "v_cmp_le_u64_e64": [0, 2, 3, 4, 9], "v_cmp_lg_f16": [0, 3, 4, 9], "v_cmp_lg_f16_e64": [0, 3, 4, 9], "v_cmp_lg_f16_sdwa": [0, 3, 4, 9], "v_cmp_lg_f32": [0, 2, 3, 4, 9], "v_cmp_lg_f32_e64": [0, 2, 3, 4, 9], "v_cmp_lg_f32_sdwa": [0, 3, 4, 9], "v_cmp_lg_f64": [0, 2, 3, 4, 9], "v_cmp_lg_f64_e64": [0, 2, 3, 4, 9], "v_cmp_lt_f16": [0, 3, 4, 9], "v_cmp_lt_f16_e64": [0, 3, 4, 9], "v_cmp_lt_f16_sdwa": [0, 3, 4, 9], "v_cmp_lt_f32": [0, 2, 3, 4, 9], "v_cmp_lt_f32_e64": [0, 2, 3, 4, 9], "v_cmp_lt_f32_sdwa": [0, 3, 4, 9], "v_cmp_lt_f64": [0, 2, 3, 4, 9], "v_cmp_lt_f64_e64": [0, 2, 3, 4, 9], "v_cmp_lt_i16": [0, 3, 4, 9], "v_cmp_lt_i16_e64": [0, 3, 4, 9], "v_cmp_lt_i16_sdw": [0, 3, 4, 9], "v_cmp_lt_i32": [0, 2, 3, 4, 9], "v_cmp_lt_i32_e64": [0, 2, 3, 4, 9], "v_cmp_lt_i32_sdw": [0, 3, 4, 9], "v_cmp_lt_i64": [0, 2, 3, 4, 9], "v_cmp_lt_i64_e64": [0, 2, 3, 4, 9], "v_cmp_lt_u16": [0, 3, 4, 9], "v_cmp_lt_u16_e64": [0, 3, 4, 9], "v_cmp_lt_u16_sdw": [0, 3, 4, 9], "v_cmp_lt_u32": [0, 2, 3, 4, 9], "v_cmp_lt_u32_e64": [0, 2, 3, 4, 9], "v_cmp_lt_u32_sdw": [0, 3, 4, 9], "v_cmp_lt_u64": [0, 2, 3, 4, 9], "v_cmp_lt_u64_e64": [0, 2, 3, 4, 9], "v_cmp_ne_i16": [0, 3, 4, 9], "v_cmp_ne_i16_e64": [0, 3, 4, 9], "v_cmp_ne_i16_sdw": [0, 3, 4, 9], "v_cmp_ne_i32": [0, 2, 3, 4, 9], "v_cmp_ne_i32_e64": [0, 2, 3, 4, 9], "v_cmp_ne_i32_sdw": [0, 3, 4, 9], "v_cmp_ne_i64": [0, 2, 3, 4, 9], "v_cmp_ne_i64_e64": [0, 2, 3, 4, 9], "v_cmp_ne_u16": [0, 3, 4, 9], "v_cmp_ne_u16_e64": [0, 3, 4, 9], "v_cmp_ne_u16_sdw": [0, 3, 4, 9], "v_cmp_ne_u32": [0, 2, 3, 4, 9], "v_cmp_ne_u32_e64": [0, 2, 3, 4, 9], "v_cmp_ne_u32_sdw": [0, 3, 4, 9], "v_cmp_ne_u64": [0, 2, 3, 4, 9], "v_cmp_ne_u64_e64": [0, 2, 3, 4, 9], "v_cmp_neq_f16": [0, 3, 4, 9], "v_cmp_neq_f16_e64": [0, 3, 4, 9], "v_cmp_neq_f16_sdw": [0, 3, 4, 9], "v_cmp_neq_f32": [0, 2, 3, 4, 9], "v_cmp_neq_f32_e64": [0, 2, 3, 4, 9], "v_cmp_neq_f32_sdw": [0, 3, 4, 9], "v_cmp_neq_f64": [0, 2, 3, 4, 9], "v_cmp_neq_f64_e64": [0, 2, 3, 4, 9], "v_cmp_nge_f16": [0, 3, 4, 9], "v_cmp_nge_f16_e64": [0, 3, 4, 9], "v_cmp_nge_f16_sdw": [0, 3, 4, 9], "v_cmp_nge_f32": [0, 2, 3, 4, 9], "v_cmp_nge_f32_e64": [0, 2, 3, 4, 9], "v_cmp_nge_f32_sdw": [0, 3, 4, 9], "v_cmp_nge_f64": [0, 2, 3, 4, 9], "v_cmp_nge_f64_e64": [0, 2, 3, 4, 9], "v_cmp_ngt_f16": [0, 3, 4, 9], "v_cmp_ngt_f16_e64": [0, 3, 4, 9], "v_cmp_ngt_f16_sdwa": [0, 3, 4, 9], "v_cmp_ngt_f32": [0, 2, 3, 4, 9], "v_cmp_ngt_f32_e64": [0, 2, 3, 4, 9], "v_cmp_ngt_f32_sdwa": [0, 3, 4, 9], "v_cmp_ngt_f64": [0, 2, 3, 4, 9], "v_cmp_ngt_f64_e64": [0, 2, 3, 4, 9], "v_cmp_nle_f16": [0, 3, 4, 9], "v_cmp_nle_f16_e64": [0, 3, 4, 9], "v_cmp_nle_f16_sdw": [0, 3, 4, 9], "v_cmp_nle_f32": [0, 2, 3, 4, 9], "v_cmp_nle_f32_e64": [0, 2, 3, 4, 9], "v_cmp_nle_f32_sdw": [0, 3, 4, 9], "v_cmp_nle_f64": [0, 2, 3, 4, 9], "v_cmp_nle_f64_e64": [0, 2, 3, 4, 9], "v_cmp_nlg_f16": [0, 3, 4, 9], "v_cmp_nlg_f16_e64": [0, 3, 4, 9], "v_cmp_nlg_f16_sdwa": [0, 3, 4, 9], "v_cmp_nlg_f32": [0, 2, 3, 4, 9], "v_cmp_nlg_f32_e64": [0, 2, 3, 4, 9], "v_cmp_nlg_f32_sdwa": [0, 3, 4, 9], "v_cmp_nlg_f64": [0, 2, 3, 4, 9], "v_cmp_nlg_f64_e64": [0, 2, 3, 4, 9], "v_cmp_nlt_f16": [0, 3, 4, 9], "v_cmp_nlt_f16_e64": [0, 3, 4, 9], "v_cmp_nlt_f16_sdwa": [0, 3, 4, 9], "v_cmp_nlt_f32": [0, 2, 3, 4, 9], "v_cmp_nlt_f32_e64": [0, 2, 3, 4, 9], "v_cmp_nlt_f32_sdwa": [0, 3, 4, 9], "v_cmp_nlt_f64": [0, 2, 3, 4, 9], "v_cmp_nlt_f64_e64": [0, 2, 3, 4, 9], "v_cmp_o_f16": [0, 3, 4, 9], "v_cmp_o_f16_e64": [0, 3, 4, 9], "v_cmp_o_f16_sdw": [0, 3, 4, 9], "v_cmp_o_f32": [0, 2, 3, 4, 9], "v_cmp_o_f32_e64": [0, 2, 3, 4, 9], "v_cmp_o_f32_sdw": [0, 3, 4, 9], "v_cmp_o_f64": [0, 2, 3, 4, 9], "v_cmp_o_f64_e64": [0, 2, 3, 4, 9], "v_cmp_t_i16": [3, 4, 9], "v_cmp_t_i16_e64": [3, 4, 9], "v_cmp_t_i16_sdw": [3, 4, 9], "v_cmp_t_i32": [0, 2, 3, 4, 9], "v_cmp_t_i32_e64": [0, 2, 3, 4, 9], "v_cmp_t_i32_sdw": [0, 3, 4, 9], "v_cmp_t_i64": [0, 2, 3, 4, 9], "v_cmp_t_i64_e64": [0, 2, 3, 4, 9], "v_cmp_t_u16": [3, 4, 9], "v_cmp_t_u16_e64": [3, 4, 9], "v_cmp_t_u16_sdw": [3, 4, 9], "v_cmp_t_u32": [0, 2, 3, 4, 9], "v_cmp_t_u32_e64": [0, 2, 3, 4, 9], "v_cmp_t_u32_sdw": [0, 3, 4, 9], "v_cmp_t_u64": [0, 2, 3, 4, 9], "v_cmp_t_u64_e64": [0, 2, 3, 4, 9], "v_cmp_tru_f16": [0, 3, 4, 9], "v_cmp_tru_f16_e64": [0, 3, 4, 9], "v_cmp_tru_f16_sdw": [0, 3, 4, 9], "v_cmp_tru_f32": [0, 2, 3, 4, 9], "v_cmp_tru_f32_e64": [0, 2, 3, 4, 9], "v_cmp_tru_f32_sdw": [0, 3, 4, 9], "v_cmp_tru_f64": [0, 2, 3, 4, 9], "v_cmp_tru_f64_e64": [0, 2, 3, 4, 9], "v_cmp_u_f16": [0, 3, 4, 9], "v_cmp_u_f16_e64": [0, 3, 4, 9], "v_cmp_u_f16_sdw": [0, 3, 4, 9], "v_cmp_u_f32": [0, 2, 3, 4, 9], "v_cmp_u_f32_e64": [0, 2, 3, 4, 9], "v_cmp_u_f32_sdw": [0, 3, 4, 9], "v_cmp_u_f64": [0, 2, 3, 4, 9], "v_cmp_u_f64_e64": [0, 2, 3, 4, 9], "v_cmps_eq_f32": 2, "v_cmps_eq_f32_e64": 2, "v_cmps_eq_f64": 2, "v_cmps_eq_f64_e64": 2, "v_cmps_f_f32": 2, "v_cmps_f_f32_e64": 2, "v_cmps_f_f64": 2, "v_cmps_f_f64_e64": 2, "v_cmps_ge_f32": 2, "v_cmps_ge_f32_e64": 2, "v_cmps_ge_f64": 2, "v_cmps_ge_f64_e64": 2, "v_cmps_gt_f32": 2, "v_cmps_gt_f32_e64": 2, "v_cmps_gt_f64": 2, "v_cmps_gt_f64_e64": 2, "v_cmps_le_f32": 2, "v_cmps_le_f32_e64": 2, "v_cmps_le_f64": 2, "v_cmps_le_f64_e64": 2, "v_cmps_lg_f32": 2, "v_cmps_lg_f32_e64": 2, "v_cmps_lg_f64": 2, "v_cmps_lg_f64_e64": 2, "v_cmps_lt_f32": 2, "v_cmps_lt_f32_e64": 2, "v_cmps_lt_f64": 2, "v_cmps_lt_f64_e64": 2, "v_cmps_neq_f32": 2, "v_cmps_neq_f32_e64": 2, "v_cmps_neq_f64": 2, "v_cmps_neq_f64_e64": 2, "v_cmps_nge_f32": 2, "v_cmps_nge_f32_e64": 2, "v_cmps_nge_f64": 2, "v_cmps_nge_f64_e64": 2, "v_cmps_ngt_f32": 2, "v_cmps_ngt_f32_e64": 2, "v_cmps_ngt_f64": 2, "v_cmps_ngt_f64_e64": 2, "v_cmps_nle_f32": 2, "v_cmps_nle_f32_e64": 2, "v_cmps_nle_f64": 2, "v_cmps_nle_f64_e64": 2, "v_cmps_nlg_f32": 2, "v_cmps_nlg_f32_e64": 2, "v_cmps_nlg_f64": 2, "v_cmps_nlg_f64_e64": 2, "v_cmps_nlt_f32": 2, "v_cmps_nlt_f32_e64": 2, "v_cmps_nlt_f64": 2, "v_cmps_nlt_f64_e64": 2, "v_cmps_o_f32": 2, "v_cmps_o_f32_e64": 2, "v_cmps_o_f64": 2, "v_cmps_o_f64_e64": 2, "v_cmps_tru_f32": 2, "v_cmps_tru_f32_e64": 2, "v_cmps_tru_f64": 2, "v_cmps_tru_f64_e64": 2, "v_cmps_u_f32": 2, "v_cmps_u_f32_e64": 2, "v_cmps_u_f64": 2, "v_cmps_u_f64_e64": 2, "v_cmpsx_eq_f32": 2, "v_cmpsx_eq_f32_e64": 2, "v_cmpsx_eq_f64": 2, "v_cmpsx_eq_f64_e64": 2, "v_cmpsx_f_f32": 2, "v_cmpsx_f_f32_e64": 2, "v_cmpsx_f_f64": 2, "v_cmpsx_f_f64_e64": 2, "v_cmpsx_ge_f32": 2, "v_cmpsx_ge_f32_e64": 2, "v_cmpsx_ge_f64": 2, "v_cmpsx_ge_f64_e64": 2, "v_cmpsx_gt_f32": 2, "v_cmpsx_gt_f32_e64": 2, "v_cmpsx_gt_f64": 2, "v_cmpsx_gt_f64_e64": 2, "v_cmpsx_le_f32": 2, "v_cmpsx_le_f32_e64": 2, "v_cmpsx_le_f64": 2, "v_cmpsx_le_f64_e64": 2, "v_cmpsx_lg_f32": 2, "v_cmpsx_lg_f32_e64": 2, "v_cmpsx_lg_f64": 2, "v_cmpsx_lg_f64_e64": 2, "v_cmpsx_lt_f32": 2, "v_cmpsx_lt_f32_e64": 2, "v_cmpsx_lt_f64": 2, "v_cmpsx_lt_f64_e64": 2, "v_cmpsx_neq_f32": 2, "v_cmpsx_neq_f32_e64": 2, "v_cmpsx_neq_f64": 2, "v_cmpsx_neq_f64_e64": 2, "v_cmpsx_nge_f32": 2, "v_cmpsx_nge_f32_e64": 2, "v_cmpsx_nge_f64": 2, "v_cmpsx_nge_f64_e64": 2, "v_cmpsx_ngt_f32": 2, "v_cmpsx_ngt_f32_e64": 2, "v_cmpsx_ngt_f64": 2, "v_cmpsx_ngt_f64_e64": 2, "v_cmpsx_nle_f32": 2, "v_cmpsx_nle_f32_e64": 2, "v_cmpsx_nle_f64": 2, "v_cmpsx_nle_f64_e64": 2, "v_cmpsx_nlg_f32": 2, "v_cmpsx_nlg_f32_e64": 2, "v_cmpsx_nlg_f64": 2, "v_cmpsx_nlg_f64_e64": 2, "v_cmpsx_nlt_f32": 2, "v_cmpsx_nlt_f32_e64": 2, "v_cmpsx_nlt_f64": 2, "v_cmpsx_nlt_f64_e64": 2, "v_cmpsx_o_f32": 2, "v_cmpsx_o_f32_e64": 2, "v_cmpsx_o_f64": 2, "v_cmpsx_o_f64_e64": 2, "v_cmpsx_tru_f32": 2, "v_cmpsx_tru_f32_e64": 2, "v_cmpsx_tru_f64": 2, "v_cmpsx_tru_f64_e64": 2, "v_cmpsx_u_f32": 2, "v_cmpsx_u_f32_e64": 2, "v_cmpsx_u_f64": 2, "v_cmpsx_u_f64_e64": 2, "v_cmpx_class_f16": [0, 3, 4, 9], "v_cmpx_class_f16_e64": [0, 3, 4, 9], "v_cmpx_class_f16_sdw": [0, 3, 4, 9], "v_cmpx_class_f32": [0, 2, 3, 4, 9], "v_cmpx_class_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_class_f32_sdw": [0, 3, 4, 9], "v_cmpx_class_f64": [0, 2, 3, 4, 9], "v_cmpx_class_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_eq_f16": [0, 3, 4, 9], "v_cmpx_eq_f16_e64": [0, 3, 4, 9], "v_cmpx_eq_f16_sdw": [0, 3, 4, 9], "v_cmpx_eq_f32": [0, 2, 3, 4, 9], "v_cmpx_eq_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_eq_f32_sdw": [0, 3, 4, 9], "v_cmpx_eq_f64": [0, 2, 3, 4, 9], "v_cmpx_eq_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_eq_i16": [0, 3, 4, 9], "v_cmpx_eq_i16_e64": [0, 3, 4, 9], "v_cmpx_eq_i16_sdw": [0, 3, 4, 9], "v_cmpx_eq_i32": [0, 2, 3, 4, 9], "v_cmpx_eq_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_eq_i32_sdw": [0, 3, 4, 9], "v_cmpx_eq_i64": [0, 2, 3, 4, 9], "v_cmpx_eq_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_eq_u16": [0, 3, 4, 9], "v_cmpx_eq_u16_e64": [0, 3, 4, 9], "v_cmpx_eq_u16_sdw": [0, 3, 4, 9], "v_cmpx_eq_u32": [0, 2, 3, 4, 9], "v_cmpx_eq_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_eq_u32_sdw": [0, 3, 4, 9], "v_cmpx_eq_u64": [0, 2, 3, 4, 9], "v_cmpx_eq_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_f_f16": [0, 3, 4, 9], "v_cmpx_f_f16_e64": [0, 3, 4, 9], "v_cmpx_f_f16_sdwa": [0, 3, 4, 9], "v_cmpx_f_f32": [0, 2, 3, 4, 9], "v_cmpx_f_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_f_f32_sdwa": [0, 3, 4, 9], "v_cmpx_f_f64": [0, 2, 3, 4, 9], "v_cmpx_f_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_f_i16": [3, 4, 9], "v_cmpx_f_i16_e64": [3, 4, 9], "v_cmpx_f_i16_sdw": [3, 4, 9], "v_cmpx_f_i32": [0, 2, 3, 4, 9], "v_cmpx_f_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_f_i32_sdw": [0, 3, 4, 9], "v_cmpx_f_i64": [0, 2, 3, 4, 9], "v_cmpx_f_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_f_u16": [3, 4, 9], "v_cmpx_f_u16_e64": [3, 4, 9], "v_cmpx_f_u16_sdw": [3, 4, 9], "v_cmpx_f_u32": [0, 2, 3, 4, 9], "v_cmpx_f_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_f_u32_sdw": [0, 3, 4, 9], "v_cmpx_f_u64": [0, 2, 3, 4, 9], "v_cmpx_f_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_ge_f16": [0, 3, 4, 9], "v_cmpx_ge_f16_e64": [0, 3, 4, 9], "v_cmpx_ge_f16_sdw": [0, 3, 4, 9], "v_cmpx_ge_f32": [0, 2, 3, 4, 9], "v_cmpx_ge_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_ge_f32_sdw": [0, 3, 4, 9], "v_cmpx_ge_f64": [0, 2, 3, 4, 9], "v_cmpx_ge_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_ge_i16": [0, 3, 4, 9], "v_cmpx_ge_i16_e64": [0, 3, 4, 9], "v_cmpx_ge_i16_sdw": [0, 3, 4, 9], "v_cmpx_ge_i32": [0, 2, 3, 4, 9], "v_cmpx_ge_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_ge_i32_sdw": [0, 3, 4, 9], "v_cmpx_ge_i64": [0, 2, 3, 4, 9], "v_cmpx_ge_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_ge_u16": [0, 3, 4, 9], "v_cmpx_ge_u16_e64": [0, 3, 4, 9], "v_cmpx_ge_u16_sdw": [0, 3, 4, 9], "v_cmpx_ge_u32": [0, 2, 3, 4, 9], "v_cmpx_ge_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_ge_u32_sdw": [0, 3, 4, 9], "v_cmpx_ge_u64": [0, 2, 3, 4, 9], "v_cmpx_ge_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_gt_f16": [0, 3, 4, 9], "v_cmpx_gt_f16_e64": [0, 3, 4, 9], "v_cmpx_gt_f16_sdwa": [0, 3, 4, 9], "v_cmpx_gt_f32": [0, 2, 3, 4, 9], "v_cmpx_gt_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_gt_f32_sdwa": [0, 3, 4, 9], "v_cmpx_gt_f64": [0, 2, 3, 4, 9], "v_cmpx_gt_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_gt_i16": [0, 3, 4, 9], "v_cmpx_gt_i16_e64": [0, 3, 4, 9], "v_cmpx_gt_i16_sdw": [0, 3, 4, 9], "v_cmpx_gt_i32": [0, 2, 3, 4, 9], "v_cmpx_gt_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_gt_i32_sdw": [0, 3, 4, 9], "v_cmpx_gt_i64": [0, 2, 3, 4, 9], "v_cmpx_gt_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_gt_u16": [0, 3, 4, 9], "v_cmpx_gt_u16_e64": [0, 3, 4, 9], "v_cmpx_gt_u16_sdw": [0, 3, 4, 9], "v_cmpx_gt_u32": [0, 2, 3, 4, 9], "v_cmpx_gt_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_gt_u32_sdw": [0, 3, 4, 9], "v_cmpx_gt_u64": [0, 2, 3, 4, 9], "v_cmpx_gt_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_le_f16": [0, 3, 4, 9], "v_cmpx_le_f16_e64": [0, 3, 4, 9], "v_cmpx_le_f16_sdw": [0, 3, 4, 9], "v_cmpx_le_f32": [0, 2, 3, 4, 9], "v_cmpx_le_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_le_f32_sdw": [0, 3, 4, 9], "v_cmpx_le_f64": [0, 2, 3, 4, 9], "v_cmpx_le_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_le_i16": [0, 3, 4, 9], "v_cmpx_le_i16_e64": [0, 3, 4, 9], "v_cmpx_le_i16_sdw": [0, 3, 4, 9], "v_cmpx_le_i32": [0, 2, 3, 4, 9], "v_cmpx_le_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_le_i32_sdw": [0, 3, 4, 9], "v_cmpx_le_i64": [0, 2, 3, 4, 9], "v_cmpx_le_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_le_u16": [0, 3, 4, 9], "v_cmpx_le_u16_e64": [0, 3, 4, 9], "v_cmpx_le_u16_sdw": [0, 3, 4, 9], "v_cmpx_le_u32": [0, 2, 3, 4, 9, 591], "v_cmpx_le_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_le_u32_sdw": [0, 3, 4, 9], "v_cmpx_le_u64": [0, 2, 3, 4, 9], "v_cmpx_le_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_lg_f16": [0, 3, 4, 9], "v_cmpx_lg_f16_e64": [0, 3, 4, 9], "v_cmpx_lg_f16_sdwa": [0, 3, 4, 9], "v_cmpx_lg_f32": [0, 2, 3, 4, 9], "v_cmpx_lg_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_lg_f32_sdwa": [0, 3, 4, 9], "v_cmpx_lg_f64": [0, 2, 3, 4, 9], "v_cmpx_lg_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_lt_f16": [0, 3, 4, 9], "v_cmpx_lt_f16_e64": [0, 3, 4, 9], "v_cmpx_lt_f16_sdwa": [0, 3, 4, 9], "v_cmpx_lt_f32": [0, 2, 3, 4, 9], "v_cmpx_lt_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_lt_f32_sdwa": [0, 3, 4, 9], "v_cmpx_lt_f64": [0, 2, 3, 4, 9], "v_cmpx_lt_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_lt_i16": [0, 3, 4, 9], "v_cmpx_lt_i16_e64": [0, 3, 4, 9], "v_cmpx_lt_i16_sdw": [0, 3, 4, 9], "v_cmpx_lt_i32": [0, 2, 3, 4, 9], "v_cmpx_lt_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_lt_i32_sdw": [0, 3, 4, 9], "v_cmpx_lt_i64": [0, 2, 3, 4, 9], "v_cmpx_lt_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_lt_u16": [0, 3, 4, 9], "v_cmpx_lt_u16_e64": [0, 3, 4, 9], "v_cmpx_lt_u16_sdw": [0, 3, 4, 9], "v_cmpx_lt_u32": [0, 2, 3, 4, 9], "v_cmpx_lt_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_lt_u32_sdw": [0, 3, 4, 9], "v_cmpx_lt_u64": [0, 2, 3, 4, 9], "v_cmpx_lt_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_ne_i16": [0, 3, 4, 9], "v_cmpx_ne_i16_e64": [0, 3, 4, 9], "v_cmpx_ne_i16_sdw": [0, 3, 4, 9], "v_cmpx_ne_i32": [0, 2, 3, 4, 9], "v_cmpx_ne_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_ne_i32_sdw": [0, 3, 4, 9], "v_cmpx_ne_i64": [0, 2, 3, 4, 9], "v_cmpx_ne_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_ne_u16": [0, 3, 4, 9], "v_cmpx_ne_u16_e64": [0, 3, 4, 9], "v_cmpx_ne_u16_sdw": [0, 3, 4, 9], "v_cmpx_ne_u32": [0, 2, 3, 4, 9], "v_cmpx_ne_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_ne_u32_sdw": [0, 3, 4, 9], "v_cmpx_ne_u64": [0, 2, 3, 4, 9], "v_cmpx_ne_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_neq_f16": [0, 3, 4, 9], "v_cmpx_neq_f16_e64": [0, 3, 4, 9], "v_cmpx_neq_f16_sdw": [0, 3, 4, 9], "v_cmpx_neq_f32": [0, 2, 3, 4, 9], "v_cmpx_neq_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_neq_f32_sdw": [0, 3, 4, 9], "v_cmpx_neq_f64": [0, 2, 3, 4, 9], "v_cmpx_neq_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_nge_f16": [0, 3, 4, 9], "v_cmpx_nge_f16_e64": [0, 3, 4, 9], "v_cmpx_nge_f16_sdw": [0, 3, 4, 9], "v_cmpx_nge_f32": [0, 2, 3, 4, 9], "v_cmpx_nge_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_nge_f32_sdw": [0, 3, 4, 9], "v_cmpx_nge_f64": [0, 2, 3, 4, 9], "v_cmpx_nge_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_ngt_f16": [0, 3, 4, 9], "v_cmpx_ngt_f16_e64": [0, 3, 4, 9], "v_cmpx_ngt_f16_sdwa": [0, 3, 4, 9], "v_cmpx_ngt_f32": [0, 2, 3, 4, 9], "v_cmpx_ngt_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_ngt_f32_sdwa": [0, 3, 4, 9], "v_cmpx_ngt_f64": [0, 2, 3, 4, 9], "v_cmpx_ngt_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_nle_f16": [0, 3, 4, 9], "v_cmpx_nle_f16_e64": [0, 3, 4, 9], "v_cmpx_nle_f16_sdw": [0, 3, 4, 9], "v_cmpx_nle_f32": [0, 2, 3, 4, 9], "v_cmpx_nle_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_nle_f32_sdw": [0, 3, 4, 9], "v_cmpx_nle_f64": [0, 2, 3, 4, 9], "v_cmpx_nle_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_nlg_f16": [0, 3, 4, 9], "v_cmpx_nlg_f16_e64": [0, 3, 4, 9], "v_cmpx_nlg_f16_sdwa": [0, 3, 4, 9], "v_cmpx_nlg_f32": [0, 2, 3, 4, 9], "v_cmpx_nlg_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_nlg_f32_sdwa": [0, 3, 4, 9], "v_cmpx_nlg_f64": [0, 2, 3, 4, 9], "v_cmpx_nlg_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_nlt_f16": [0, 3, 4, 9], "v_cmpx_nlt_f16_e64": [0, 3, 4, 9], "v_cmpx_nlt_f16_sdwa": [0, 3, 4, 9], "v_cmpx_nlt_f32": [0, 2, 3, 4, 9], "v_cmpx_nlt_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_nlt_f32_sdwa": [0, 3, 4, 9], "v_cmpx_nlt_f64": [0, 2, 3, 4, 9], "v_cmpx_nlt_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_o_f16": [0, 3, 4, 9], "v_cmpx_o_f16_e64": [0, 3, 4, 9], "v_cmpx_o_f16_sdw": [0, 3, 4, 9], "v_cmpx_o_f32": [0, 2, 3, 4, 9], "v_cmpx_o_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_o_f32_sdw": [0, 3, 4, 9], "v_cmpx_o_f64": [0, 2, 3, 4, 9], "v_cmpx_o_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_t_i16": [3, 4, 9], "v_cmpx_t_i16_e64": [3, 4, 9], "v_cmpx_t_i16_sdw": [3, 4, 9], "v_cmpx_t_i32": [0, 2, 3, 4, 9], "v_cmpx_t_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_t_i32_sdw": [0, 3, 4, 9], "v_cmpx_t_i64": [0, 2, 3, 4, 9], "v_cmpx_t_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_t_u16": [3, 4, 9], "v_cmpx_t_u16_e64": [3, 4, 9], "v_cmpx_t_u16_sdw": [3, 4, 9], "v_cmpx_t_u32": [0, 2, 3, 4, 9], "v_cmpx_t_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_t_u32_sdw": [0, 3, 4, 9], "v_cmpx_t_u64": [0, 2, 3, 4, 9], "v_cmpx_t_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_tru_f16": [0, 3, 4, 9], "v_cmpx_tru_f16_e64": [0, 3, 4, 9], "v_cmpx_tru_f16_sdw": [0, 3, 4, 9], "v_cmpx_tru_f32": [0, 2, 3, 4, 9], "v_cmpx_tru_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_tru_f32_sdw": [0, 3, 4, 9], "v_cmpx_tru_f64": [0, 2, 3, 4, 9], "v_cmpx_tru_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_u_f16": [0, 3, 4, 9], "v_cmpx_u_f16_e64": [0, 3, 4, 9], "v_cmpx_u_f16_sdw": [0, 3, 4, 9], "v_cmpx_u_f32": [0, 2, 3, 4, 9], "v_cmpx_u_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_u_f32_sdw": [0, 3, 4, 9], "v_cmpx_u_f64": [0, 2, 3, 4, 9], "v_cmpx_u_f64_e64": [0, 2, 3, 4, 9], "v_cndmask_b32": [0, 2, 3, 4, 9], "v_cndmask_b32_dpp": [0, 3, 4, 9], "v_cndmask_b32_e64": [0, 2, 3, 4, 9], "v_cndmask_b32_sdw": [0, 3, 4, 9], "v_cos_f16": [0, 3, 4, 9], "v_cos_f16_dpp": [0, 3, 4, 9], "v_cos_f16_e64": [0, 3, 4, 9], "v_cos_f16_sdw": [0, 3, 4, 9], "v_cos_f32": [0, 2, 3, 4, 9], "v_cos_f32_dpp": [0, 3, 4, 9], "v_cos_f32_e64": [0, 2, 3, 4, 9], "v_cos_f32_sdw": [0, 3, 4, 9], "v_cubeid_f32": [0, 2, 3, 4, 9], "v_cubema_f32": [0, 2, 3, 4, 9], "v_cubesc_f32": [0, 2, 3, 4, 9], "v_cubetc_f32": [0, 2, 3, 4, 9], "v_cvt_f16_f32": [0, 2, 3, 4, 9, 589], "v_cvt_f16_f32_dpp": [0, 3, 4, 9], "v_cvt_f16_f32_e64": [0, 2, 3, 4, 9], "v_cvt_f16_f32_sdwa": [0, 3, 4, 9], "v_cvt_f16_i16": [0, 3, 4, 9], "v_cvt_f16_i16_dpp": [0, 3, 4, 9], "v_cvt_f16_i16_e64": [0, 3, 4, 9], "v_cvt_f16_i16_sdw": [0, 3, 4, 9], "v_cvt_f16_u16": [0, 3, 4, 9], "v_cvt_f16_u16_dpp": [0, 3, 4, 9], "v_cvt_f16_u16_e64": [0, 3, 4, 9], "v_cvt_f16_u16_sdw": [0, 3, 4, 9], "v_cvt_f32_f16": [0, 2, 3, 4, 9], "v_cvt_f32_f16_dpp": [0, 3, 4, 9], "v_cvt_f32_f16_e64": [0, 2, 3, 4, 9], "v_cvt_f32_f16_sdwa": [0, 3, 4, 9], "v_cvt_f32_f64": [0, 2, 3, 4, 9], "v_cvt_f32_f64_dpp": 9, "v_cvt_f32_f64_e64": [0, 2, 3, 4, 9], "v_cvt_f32_i32": [0, 2, 3, 4, 9], "v_cvt_f32_i32_dpp": [0, 3, 4, 9], "v_cvt_f32_i32_e64": [0, 2, 3, 4, 9], "v_cvt_f32_i32_sdw": [0, 3, 4, 9], "v_cvt_f32_u32": [0, 2, 3, 4, 9, 588], "v_cvt_f32_u32_dpp": [0, 3, 4, 9], "v_cvt_f32_u32_e64": [0, 2, 3, 4, 9], "v_cvt_f32_u32_sdw": [0, 3, 4, 9], "v_cvt_f32_ubyte0": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte0_dpp": [0, 3, 4, 9], "v_cvt_f32_ubyte0_e64": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte0_sdw": [0, 3, 4, 9], "v_cvt_f32_ubyte1": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte1_dpp": [0, 3, 4, 9], "v_cvt_f32_ubyte1_e64": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte1_sdw": [0, 3, 4, 9], "v_cvt_f32_ubyte2": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte2_dpp": [0, 3, 4, 9], "v_cvt_f32_ubyte2_e64": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte2_sdw": [0, 3, 4, 9], "v_cvt_f32_ubyte3": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte3_dpp": [0, 3, 4, 9], "v_cvt_f32_ubyte3_e64": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte3_sdw": [0, 3, 4, 9], "v_cvt_f64_f32": [0, 2, 3, 4, 9], "v_cvt_f64_f32_e64": [0, 2, 3, 4, 9], "v_cvt_f64_i32": [0, 2, 3, 4, 9], "v_cvt_f64_i32_e32": 591, "v_cvt_f64_i32_e64": [0, 2, 3, 4, 9], "v_cvt_f64_u32": [0, 2, 3, 4, 9], "v_cvt_f64_u32_e64": [0, 2, 3, 4, 9], "v_cvt_flr_i32_f32": [0, 2, 3, 4, 9], "v_cvt_flr_i32_f32_dpp": [0, 3, 4, 9], "v_cvt_flr_i32_f32_e64": [0, 2, 3, 4, 9], "v_cvt_flr_i32_f32_sdw": [0, 3, 4, 9], "v_cvt_i16_f16": [0, 3, 4, 9], "v_cvt_i16_f16_dpp": [0, 3, 4, 9], "v_cvt_i16_f16_e64": [0, 3, 4, 9], "v_cvt_i16_f16_sdw": [0, 3, 4, 9], "v_cvt_i32_f32": [0, 2, 3, 4, 9], "v_cvt_i32_f32_dpp": [0, 3, 4, 9], "v_cvt_i32_f32_e64": [0, 2, 3, 4, 9], "v_cvt_i32_f32_sdw": [0, 3, 4, 9], "v_cvt_i32_f64": [0, 2, 3, 4, 9], "v_cvt_i32_f64_dpp": 9, "v_cvt_i32_f64_e64": [0, 2, 3, 4, 9], "v_cvt_norm_i16_f16": [0, 4, 9], "v_cvt_norm_i16_f16_dpp": [0, 4, 9], "v_cvt_norm_i16_f16_e64": [0, 4, 9], "v_cvt_norm_i16_f16_sdw": [0, 4, 9], "v_cvt_norm_u16_f16": [0, 4, 9], "v_cvt_norm_u16_f16_dpp": [0, 4, 9], "v_cvt_norm_u16_f16_e64": [0, 4, 9], "v_cvt_norm_u16_f16_sdw": [0, 4, 9], "v_cvt_off_f32_i4": [0, 2, 3, 4, 9], "v_cvt_off_f32_i4_dpp": [0, 3, 4, 9], "v_cvt_off_f32_i4_e64": [0, 2, 3, 4, 9], "v_cvt_off_f32_i4_sdw": [0, 3, 4, 9], "v_cvt_pk_i16_i32": [0, 2, 3, 4, 9], "v_cvt_pk_i16_i32_e64": 2, "v_cvt_pk_u16_u32": [0, 2, 3, 4, 9], "v_cvt_pk_u16_u32_e64": 2, "v_cvt_pk_u8_f32": [0, 2, 3, 4, 9], "v_cvt_pkaccum_u8_f32": [2, 3, 4, 9], "v_cvt_pkaccum_u8_f32_e64": 2, "v_cvt_pknorm_i16_f16": [0, 4, 9], "v_cvt_pknorm_i16_f32": [0, 2, 3, 4, 9], "v_cvt_pknorm_i16_f32_e64": 2, "v_cvt_pknorm_u16_f16": [0, 4, 9], "v_cvt_pknorm_u16_f32": [0, 2, 3, 4, 9], "v_cvt_pknorm_u16_f32_e64": 2, "v_cvt_pkrtz_f16_f32": [0, 2, 3, 4, 9], "v_cvt_pkrtz_f16_f32_e64": [0, 2], "v_cvt_rpi_i32_f32": [0, 2, 3, 4, 9], "v_cvt_rpi_i32_f32_dpp": [0, 3, 4, 9], "v_cvt_rpi_i32_f32_e64": [0, 2, 3, 4, 9], "v_cvt_rpi_i32_f32_sdw": [0, 3, 4, 9], "v_cvt_u16_f16": [0, 3, 4, 9], "v_cvt_u16_f16_dpp": [0, 3, 4, 9], "v_cvt_u16_f16_e64": [0, 3, 4, 9], "v_cvt_u16_f16_sdw": [0, 3, 4, 9], "v_cvt_u32_f32": [0, 2, 3, 4, 9], "v_cvt_u32_f32_dpp": [0, 3, 4, 9], "v_cvt_u32_f32_e64": [0, 2, 3, 4, 9], "v_cvt_u32_f32_sdw": [0, 3, 4, 9], "v_cvt_u32_f64": [0, 2, 3, 4, 9], "v_cvt_u32_f64_dpp": 9, "v_cvt_u32_f64_e64": [0, 2, 3, 4, 9], "v_div_fixup_f16": [0, 3, 4, 9], "v_div_fixup_f32": [0, 2, 3, 4, 9], "v_div_fixup_f64": [0, 2, 3, 4, 9], "v_div_fixup_legacy_f16": [4, 9], "v_div_fmas_f32": [0, 2, 3, 4, 9], "v_div_fmas_f64": [0, 2, 3, 4, 9], "v_div_scale_f32": [0, 2, 3, 4, 9], "v_div_scale_f64": [0, 2, 3, 4, 9], "v_dot2_f32_f16": [1, 7, 8, 9], "v_dot2_i32_i16": [1, 7, 8, 9], "v_dot2_u32_u16": [1, 7, 8, 9], "v_dot2c_f32_f16": [1, 8, 9], "v_dot2c_f32_f16_dpp": [1, 8, 9], "v_dot2c_i32_i16": [8, 9], "v_dot2c_i32_i16_dpp": [8, 9], "v_dot4_i32_i8": [1, 7, 8, 9], "v_dot4_u32_u8": [1, 7, 8, 9], "v_dot4c_i32_i8": [1, 8, 9], "v_dot4c_i32_i8_dpp": [1, 8, 9], "v_dot8_i32_i4": [1, 7, 8, 9], "v_dot8_u32_u4": [1, 7, 8, 9], "v_dot8c_i32_i4": [8, 9], "v_dot8c_i32_i4_dpp": [8, 9], "v_exp_f16": [0, 3, 4, 9], "v_exp_f16_dpp": [0, 3, 4, 9], "v_exp_f16_e64": [0, 3, 4, 9], "v_exp_f16_sdw": [0, 3, 4, 9], "v_exp_f32": [0, 2, 3, 4, 9], "v_exp_f32_dpp": [0, 3, 4, 9], "v_exp_f32_e64": [0, 2, 3, 4, 9], "v_exp_f32_sdw": [0, 3, 4, 9], "v_exp_legacy_f32": [2, 3, 4, 9], "v_exp_legacy_f32_dpp": [3, 4, 9], "v_exp_legacy_f32_e64": [2, 3, 4, 9], "v_exp_legacy_f32_sdw": [3, 4, 9], "v_ffbh_i32": [0, 2, 3, 4, 9], "v_ffbh_i32_dpp": [0, 3, 4, 9], "v_ffbh_i32_e64": [0, 2, 3, 4, 9], "v_ffbh_i32_sdw": [0, 3, 4, 9], "v_ffbh_u32": [0, 2, 3, 4, 9], "v_ffbh_u32_dpp": [0, 3, 4, 9], "v_ffbh_u32_e64": [0, 2, 3, 4, 9], "v_ffbh_u32_sdw": [0, 3, 4, 9], "v_ffbl_b32": [0, 2, 3, 4, 9], "v_ffbl_b32_dpp": [0, 3, 4, 9], "v_ffbl_b32_e64": [0, 2, 3, 4, 9], "v_ffbl_b32_sdwa": [0, 3, 4, 9], "v_floor_f16": [0, 3, 4, 9], "v_floor_f16_dpp": [0, 3, 4, 9], "v_floor_f16_e64": [0, 3, 4, 9], "v_floor_f16_sdw": [0, 3, 4, 9], "v_floor_f32": [0, 2, 3, 4, 9], "v_floor_f32_dpp": [0, 3, 4, 9], "v_floor_f32_e32": 591, "v_floor_f32_e64": [0, 2, 3, 4, 9], "v_floor_f32_sdw": [0, 3, 4, 9], "v_floor_f64": [0, 2, 3, 4, 9], "v_floor_f64_dpp": 9, "v_floor_f64_e64": [0, 2, 3, 4, 9], "v_fma_f16": [0, 3, 4, 9], "v_fma_f32": [0, 2, 3, 4, 9], "v_fma_f64": [0, 2, 3, 4, 9], "v_fma_legacy_f16": [4, 9], "v_fma_mix": 589, "v_fma_mix_f32": [0, 6, 7, 8, 9], "v_fma_mixhi_f16": [0, 6, 7, 8, 9], "v_fma_mixlo_f16": [0, 6, 7, 8, 9], "v_fmaak_f16": 0, "v_fmaak_f32": 0, "v_fmac_f16": 0, "v_fmac_f16_dpp": 0, "v_fmac_f16_e64": 0, "v_fmac_f32": [0, 7, 8, 9], "v_fmac_f32_dpp": [0, 7, 8, 9], "v_fmac_f32_e64": [0, 7, 8, 9], "v_fmac_f64": 9, "v_fmac_f64_dpp": 9, "v_fmac_f64_e64": 9, "v_fmamk_f16": 0, "v_fmamk_f32": 0, "v_fract_f16": [0, 3, 4, 9], "v_fract_f16_dpp": [0, 3, 4, 9], "v_fract_f16_e64": [0, 3, 4, 9], "v_fract_f16_sdw": [0, 3, 4, 9], "v_fract_f32": [0, 2, 3, 4, 9, 591], "v_fract_f32_dpp": [0, 3, 4, 9], "v_fract_f32_e64": [0, 2, 3, 4, 9], "v_fract_f32_sdw": [0, 3, 4, 9], "v_fract_f64": [0, 2, 3, 4, 9], "v_fract_f64_dpp": 9, "v_fract_f64_e64": [0, 2, 3, 4, 9], "v_frexp_exp_i16_f16": [0, 3, 4, 9], "v_frexp_exp_i16_f16_dpp": [0, 3, 4, 9], "v_frexp_exp_i16_f16_e64": [0, 3, 4, 9], "v_frexp_exp_i16_f16_sdw": [0, 3, 4, 9], "v_frexp_exp_i32_f32": [0, 2, 3, 4, 9], "v_frexp_exp_i32_f32_dpp": [0, 3, 4, 9], "v_frexp_exp_i32_f32_e64": [0, 2, 3, 4, 9], "v_frexp_exp_i32_f32_sdw": [0, 3, 4, 9], "v_frexp_exp_i32_f64": [0, 2, 3, 4, 9], "v_frexp_exp_i32_f64_dpp": 9, "v_frexp_exp_i32_f64_e64": [0, 2, 3, 4, 9], "v_frexp_mant_f16": [0, 3, 4, 9], "v_frexp_mant_f16_dpp": [0, 3, 4, 9], "v_frexp_mant_f16_e64": [0, 3, 4, 9], "v_frexp_mant_f16_sdw": [0, 3, 4, 9], "v_frexp_mant_f32": [0, 2, 3, 4, 9], "v_frexp_mant_f32_dpp": [0, 3, 4, 9], "v_frexp_mant_f32_e64": [0, 2, 3, 4, 9], "v_frexp_mant_f32_sdw": [0, 3, 4, 9], "v_frexp_mant_f64": [0, 2, 3, 4, 9], "v_frexp_mant_f64_dpp": 9, "v_frexp_mant_f64_e64": [0, 2, 3, 4, 9], "v_interp_mov_f32": [0, 2, 3, 4], "v_interp_mov_f32_e64": [0, 3, 4], "v_interp_p1_f32": [0, 2, 3, 4, 17, 121, 210, 480], "v_interp_p1_f32_e64": [0, 3, 4], "v_interp_p1ll_f16": [0, 3, 4], "v_interp_p1lv_f16": [0, 3, 4], "v_interp_p2_f16": [0, 3, 4], "v_interp_p2_f32": [0, 2, 3, 4], "v_interp_p2_f32_e64": [0, 3, 4], "v_interp_p2_legacy_f16": 4, "v_ldexp_f16": [0, 3, 4, 9], "v_ldexp_f16_dpp": [0, 3, 4, 9], "v_ldexp_f16_e64": [0, 3, 4, 9], "v_ldexp_f16_sdw": [0, 3, 4, 9], "v_ldexp_f32": [0, 2, 3, 4, 9], "v_ldexp_f32_e64": 2, "v_ldexp_f64": [0, 2, 3, 4, 9], "v_lerp_u8": [0, 2, 3, 4, 9], "v_log_clamp_f32": 2, "v_log_clamp_f32_e64": 2, "v_log_f16": [0, 3, 4, 9], "v_log_f16_dpp": [0, 3, 4, 9], "v_log_f16_e64": [0, 3, 4, 9], "v_log_f16_sdw": [0, 3, 4, 9], "v_log_f32": [0, 2, 3, 4, 9], "v_log_f32_dpp": [0, 3, 4, 9], "v_log_f32_e64": [0, 2, 3, 4, 9], "v_log_f32_sdw": [0, 3, 4, 9], "v_log_legacy_f32": [2, 3, 4, 9], "v_log_legacy_f32_dpp": [3, 4, 9], "v_log_legacy_f32_e64": [2, 3, 4, 9], "v_log_legacy_f32_sdw": [3, 4, 9], "v_lshl_add_u32": [0, 4, 9], "v_lshl_b32": 2, "v_lshl_b32_e64": 2, "v_lshl_b64": 2, "v_lshl_or_b32": [0, 4, 9], "v_lshlrev_b16": [0, 3, 4, 9], "v_lshlrev_b16_dpp": [3, 4, 9], "v_lshlrev_b16_e64": [3, 4, 9], "v_lshlrev_b16_sdw": [3, 4, 9], "v_lshlrev_b32": [0, 2, 3, 4, 9], "v_lshlrev_b32_dpp": [0, 3, 4, 9], "v_lshlrev_b32_e64": [0, 2, 3, 4, 9], "v_lshlrev_b32_sdw": [0, 3, 4, 9], "v_lshlrev_b64": [0, 3, 4, 9], "v_lshr_b32": 2, "v_lshr_b32_e64": 2, "v_lshr_b64": 2, "v_lshrrev_b16": [0, 3, 4, 9], "v_lshrrev_b16_dpp": [3, 4, 9], "v_lshrrev_b16_e64": [3, 4, 9], "v_lshrrev_b16_sdw": [3, 4, 9], "v_lshrrev_b32": [0, 2, 3, 4, 9], "v_lshrrev_b32_dpp": [0, 3, 4, 9], "v_lshrrev_b32_e64": [0, 2, 3, 4, 9], "v_lshrrev_b32_sdw": [0, 3, 4, 9], "v_lshrrev_b64": [0, 3, 4, 9], "v_mac_f16": [3, 4, 9], "v_mac_f16_dpp": [3, 4, 9], "v_mac_f16_e64": [3, 4, 9], "v_mac_f16_sdw": 3, "v_mac_f32": [0, 2, 3, 4, 9], "v_mac_f32_dpp": [0, 3, 4, 9], "v_mac_f32_e64": [0, 2, 3, 4, 9], "v_mac_f32_sdw": 3, "v_mac_legacy_f32": [0, 2], "v_mac_legacy_f32_e64": [0, 2], "v_mad_f16": [3, 4, 9], "v_mad_f32": [0, 2, 3, 4, 9], "v_mad_i16": [0, 3, 4, 9], "v_mad_i32_i16": [0, 4, 9], "v_mad_i32_i24": [0, 2, 3, 4, 9], "v_mad_i64_i32": [0, 2, 3, 4, 9], "v_mad_legacy_f16": [4, 9], "v_mad_legacy_f32": [0, 2, 3, 4, 9], "v_mad_legacy_i16": [4, 9], "v_mad_legacy_u16": [4, 9], "v_mad_mix": 589, "v_mad_mix_f32": 5, "v_mad_mixhi_f16": 5, "v_mad_mixlo_f16": 5, "v_mad_u16": [0, 3, 4, 9], "v_mad_u32_u16": [0, 4, 9], "v_mad_u32_u24": [0, 2, 3, 4, 9], "v_mad_u64_u32": [0, 2, 3, 4, 9], "v_madak_f16": [3, 4, 9], "v_madak_f32": [0, 2, 3, 4, 9], "v_madmk_f16": [3, 4, 9], "v_madmk_f32": [0, 2, 3, 4, 9], "v_max3_f16": [0, 4, 9], "v_max3_f32": [0, 2, 3, 4, 9, 588], "v_max3_i16": [0, 4, 9, 588], "v_max3_i32": [0, 2, 3, 4, 9], "v_max3_u16": [0, 4, 9], "v_max3_u32": [0, 2, 3, 4, 9], "v_max_f16": [0, 3, 4, 9, 591], "v_max_f16_dpp": [0, 3, 4, 9], "v_max_f16_e32": 591, "v_max_f16_e64": [0, 3, 4, 9], "v_max_f16_sdw": [0, 3, 4, 9], "v_max_f32": [0, 2, 3, 4, 9], "v_max_f32_dpp": [0, 3, 4, 9], "v_max_f32_e64": [0, 2, 3, 4, 9], "v_max_f32_sdw": [0, 3, 4, 9], "v_max_f64": [0, 2, 3, 4, 9], "v_max_i16": [0, 3, 4, 9], "v_max_i16_dpp": [3, 4, 9], "v_max_i16_e64": [3, 4, 9], "v_max_i16_sdw": [3, 4, 9], "v_max_i32": [0, 2, 3, 4, 9], "v_max_i32_dpp": [0, 3, 4, 9], "v_max_i32_e64": [0, 2, 3, 4, 9], "v_max_i32_sdw": [0, 3, 4, 9], "v_max_legacy_f32": 2, "v_max_legacy_f32_e64": 2, "v_max_u16": [0, 3, 4, 9], "v_max_u16_dpp": [3, 4, 9], "v_max_u16_e64": [3, 4, 9], "v_max_u16_sdw": [3, 4, 9], "v_max_u32": [0, 2, 3, 4, 9], "v_max_u32_dpp": [0, 3, 4, 9], "v_max_u32_e64": [0, 2, 3, 4, 9], "v_max_u32_sdw": [0, 3, 4, 9], "v_mbcnt_hi_u32_b32": [0, 2, 3, 4, 9], "v_mbcnt_hi_u32_b32_e64": 2, "v_mbcnt_lo_u32_b32": [0, 2, 3, 4, 9], "v_mbcnt_lo_u32_b32_e64": 2, "v_med3_f16": [0, 4, 9], "v_med3_f32": [0, 2, 3, 4, 9], "v_med3_i16": [0, 4, 9], "v_med3_i32": [0, 2, 3, 4, 9], "v_med3_u16": [0, 4, 9], "v_med3_u32": [0, 2, 3, 4, 9], "v_mfma_f32_16x16x16bf16_1k": 9, "v_mfma_f32_16x16x16f16": [8, 9], "v_mfma_f32_16x16x1f32": [8, 9], "v_mfma_f32_16x16x2bf16": [8, 9], "v_mfma_f32_16x16x4bf16_1k": 9, "v_mfma_f32_16x16x4f16": [8, 9], "v_mfma_f32_16x16x4f32": [8, 9], "v_mfma_f32_16x16x8bf16": [8, 9], "v_mfma_f32_32x32x1f32": [8, 9], "v_mfma_f32_32x32x2bf16": [8, 9], "v_mfma_f32_32x32x2f32": [8, 9], "v_mfma_f32_32x32x4bf16": [8, 9], "v_mfma_f32_32x32x4bf16_1k": 9, "v_mfma_f32_32x32x4f16": [8, 9], "v_mfma_f32_32x32x8bf16_1k": 9, "v_mfma_f32_32x32x8f16": [8, 9], "v_mfma_f32_4x4x1f32": [8, 9], "v_mfma_f32_4x4x2bf16": [8, 9], "v_mfma_f32_4x4x4bf16_1k": 9, "v_mfma_f32_4x4x4f16": [8, 9], "v_mfma_f64_16x16x4f64": 9, "v_mfma_f64_4x4x4f64": 9, "v_mfma_i32_16x16x16i8": [8, 9], "v_mfma_i32_16x16x4i8": [8, 9], "v_mfma_i32_32x32x4i8": [8, 9], "v_mfma_i32_32x32x8i8": [8, 9], "v_mfma_i32_4x4x4i8": [8, 9], "v_min3_f16": [0, 4, 9], "v_min3_f32": [0, 2, 3, 4, 9], "v_min3_i16": [0, 4, 9], "v_min3_i32": [0, 2, 3, 4, 9], "v_min3_u16": [0, 4, 9], "v_min3_u32": [0, 2, 3, 4, 9], "v_min_f16": [0, 3, 4, 9], "v_min_f16_dpp": [0, 3, 4, 9], "v_min_f16_e64": [0, 3, 4, 9], "v_min_f16_sdw": [0, 3, 4, 9], "v_min_f32": [0, 2, 3, 4, 9], "v_min_f32_dpp": [0, 3, 4, 9], "v_min_f32_e64": [0, 2, 3, 4, 9], "v_min_f32_sdw": [0, 3, 4, 9], "v_min_f64": [0, 2, 3, 4, 9], "v_min_i16": [0, 3, 4, 9], "v_min_i16_dpp": [3, 4, 9], "v_min_i16_e64": [3, 4, 9], "v_min_i16_sdw": [3, 4, 9], "v_min_i32": [0, 2, 3, 4, 9], "v_min_i32_dpp": [0, 3, 4, 9], "v_min_i32_e64": [0, 2, 3, 4, 9], "v_min_i32_sdw": [0, 3, 4, 9], "v_min_legacy_f32": 2, "v_min_legacy_f32_e64": 2, "v_min_u16": [0, 3, 4, 9], "v_min_u16_dpp": [3, 4, 9], "v_min_u16_e64": [3, 4, 9], "v_min_u16_sdw": [3, 4, 9], "v_min_u32": [0, 2, 3, 4, 9, 591], "v_min_u32_dpp": [0, 3, 4, 9], "v_min_u32_e64": [0, 2, 3, 4, 9], "v_min_u32_sdw": [0, 3, 4, 9], "v_mov_b32": [0, 2, 3, 4, 9, 591], "v_mov_b32_dpp": [0, 3, 4, 9], "v_mov_b32_e32": 591, "v_mov_b32_e64": [0, 2, 3, 4, 9], "v_mov_b32_sdw": [0, 3, 4, 9], "v_movreld_b32": [0, 2], "v_movreld_b32_dpp": 0, "v_movreld_b32_e64": [0, 2], "v_movreld_b32_sdw": 0, "v_movrels_b32": [0, 2], "v_movrels_b32_dpp": 0, "v_movrels_b32_e64": [0, 2], "v_movrels_b32_sdw": 0, "v_movrelsd_2_b32": 0, "v_movrelsd_2_b32_dpp": 0, "v_movrelsd_2_b32_e64": 0, "v_movrelsd_2_b32_sdw": 0, "v_movrelsd_b32": [0, 2], "v_movrelsd_b32_dpp": 0, "v_movrelsd_b32_e64": [0, 2], "v_movrelsd_b32_sdw": 0, "v_mqsad_pk_u16_u8": [0, 2, 3, 4, 9], "v_mqsad_u32_u8": [0, 2, 3, 4, 9], "v_msad_u8": [0, 2, 3, 4, 9], "v_mul_f16": [0, 3, 4, 9], "v_mul_f16_dpp": [0, 3, 4, 9], "v_mul_f16_e64": [0, 3, 4, 9], "v_mul_f16_sdw": [0, 3, 4, 9], "v_mul_f32": [0, 2, 3, 4, 9], "v_mul_f32_dpp": [0, 3, 4, 9], "v_mul_f32_e64": [0, 2, 3, 4, 9], "v_mul_f32_sdw": [0, 3, 4, 9], "v_mul_f64": [0, 2, 3, 4, 9], "v_mul_hi_i32": [0, 2, 3, 4, 9], "v_mul_hi_i32_i24": [0, 2, 3, 4, 9], "v_mul_hi_i32_i24_dpp": [0, 3, 4, 9], "v_mul_hi_i32_i24_e64": [0, 2, 3, 4, 9], "v_mul_hi_i32_i24_sdw": [0, 3, 4, 9], "v_mul_hi_u32": [0, 2, 3, 4, 9], "v_mul_hi_u32_u24": [0, 2, 3, 4, 9], "v_mul_hi_u32_u24_dpp": [0, 3, 4, 9], "v_mul_hi_u32_u24_e64": [0, 2, 3, 4, 9], "v_mul_hi_u32_u24_sdw": [0, 3, 4, 9], "v_mul_i32_i24": [0, 2, 3, 4, 9], "v_mul_i32_i24_dpp": [0, 3, 4, 9], "v_mul_i32_i24_e32": 591, "v_mul_i32_i24_e64": [0, 2, 3, 4, 9, 591], "v_mul_i32_i24_sdw": [0, 3, 4, 9], "v_mul_legacy_f32": [0, 2, 3, 4, 9], "v_mul_legacy_f32_dpp": [0, 3, 4], "v_mul_legacy_f32_e64": [0, 2, 3, 4], "v_mul_legacy_f32_sdw": [0, 3, 4], "v_mul_lo_i32": 2, "v_mul_lo_u16": [0, 3, 4, 9], "v_mul_lo_u16_dpp": [3, 4, 9], "v_mul_lo_u16_e64": [3, 4, 9], "v_mul_lo_u16_sdw": [3, 4, 9], "v_mul_lo_u32": [0, 2, 3, 4, 9], "v_mul_u32_u24": [0, 2, 3, 4, 9], "v_mul_u32_u24_dpp": [0, 3, 4, 9], "v_mul_u32_u24_e64": [0, 2, 3, 4, 9], "v_mul_u32_u24_sdw": [0, 3, 4, 9], "v_mullit_f32": [0, 2], "v_nop": [0, 2, 3, 4, 9, 591], "v_nop_e64": [0, 2, 3, 4, 9], "v_not_b32": [0, 2, 3, 4, 9], "v_not_b32_dpp": [0, 3, 4, 9], "v_not_b32_e64": [0, 2, 3, 4, 9], "v_not_b32_sdw": [0, 3, 4, 9], "v_or3_b32": [0, 4, 9], "v_or_b32": [0, 2, 3, 4, 9], "v_or_b32_dpp": [0, 3, 4, 9], "v_or_b32_e64": [0, 2, 3, 4, 9], "v_or_b32_sdw": [0, 3, 4, 9], "v_pack_b32_f16": [0, 4, 9], "v_perm_b32": [0, 3, 4, 9], "v_permlane16_b32": 0, "v_permlanex16_b32": 0, "v_pipeflush": 0, "v_pipeflush_e64": 0, "v_pk_add_f16": [0, 4, 9, 588], "v_pk_add_f32": 9, "v_pk_add_i16": [0, 4, 9, 588], "v_pk_add_u16": [0, 4, 9, 588], "v_pk_ashrrev_i16": [0, 4, 9], "v_pk_fma_f16": [0, 4, 9], "v_pk_fma_f32": 9, "v_pk_fmac_f16": [0, 8, 9], "v_pk_lshlrev_b16": [0, 4, 9], "v_pk_lshrrev_b16": [0, 4, 9], "v_pk_mad_i16": [0, 4, 9], "v_pk_mad_u16": [0, 4, 9], "v_pk_max_f16": [0, 4, 9], "v_pk_max_i16": [0, 4, 9], "v_pk_max_u16": [0, 4, 9], "v_pk_min_f16": [0, 4, 9], "v_pk_min_i16": [0, 4, 9], "v_pk_min_u16": [0, 4, 9], "v_pk_mov_b32": 9, "v_pk_mul_f16": [0, 4, 9], "v_pk_mul_f32": 9, "v_pk_mul_lo_u16": [0, 4, 9], "v_pk_sub_i16": [0, 4, 9], "v_pk_sub_u16": [0, 4, 9], "v_qsad_pk_u16_u8": [0, 2, 3, 4, 9], "v_rcp_clamp_f32": 2, "v_rcp_clamp_f32_e64": 2, "v_rcp_clamp_f64": 2, "v_rcp_clamp_f64_e64": 2, "v_rcp_f16": [0, 3, 4, 9], "v_rcp_f16_dpp": [0, 3, 4, 9], "v_rcp_f16_e64": [0, 3, 4, 9], "v_rcp_f16_sdwa": [0, 3, 4, 9], "v_rcp_f32": [0, 2, 3, 4, 9], "v_rcp_f32_dpp": [0, 3, 4, 9], "v_rcp_f32_e64": [0, 2, 3, 4, 9], "v_rcp_f32_sdwa": [0, 3, 4, 9], "v_rcp_f64": [0, 2, 3, 4, 9], "v_rcp_f64_e64": [0, 2, 3, 4, 9], "v_rcp_iflag_f32": [0, 2, 3, 4, 9], "v_rcp_iflag_f32_dpp": [0, 3, 4, 9], "v_rcp_iflag_f32_e64": [0, 2, 3, 4, 9], "v_rcp_iflag_f32_sdw": [0, 3, 4, 9], "v_rcp_legacy_f32": 2, "v_rcp_legacy_f32_e64": 2, "v_readfirstlane_b32": [0, 2, 3, 4, 9], "v_readlane_b32": [0, 2, 3, 4, 9], "v_reg": 608, "v_rndne_f16": [0, 3, 4, 9], "v_rndne_f16_dpp": [0, 3, 4, 9], "v_rndne_f16_e64": [0, 3, 4, 9], "v_rndne_f16_sdw": [0, 3, 4, 9], "v_rndne_f32": [0, 2, 3, 4, 9], "v_rndne_f32_dpp": [0, 3, 4, 9], "v_rndne_f32_e64": [0, 2, 3, 4, 9], "v_rndne_f32_sdw": [0, 3, 4, 9], "v_rndne_f64": [0, 2, 3, 4, 9], "v_rndne_f64_e64": [0, 2, 3, 4, 9], "v_rsq_clamp_f32": 2, "v_rsq_clamp_f32_e64": 2, "v_rsq_clamp_f64": 2, "v_rsq_clamp_f64_e64": 2, "v_rsq_f16": [0, 3, 4, 9], "v_rsq_f16_dpp": [0, 3, 4, 9], "v_rsq_f16_e64": [0, 3, 4, 9], "v_rsq_f16_sdwa": [0, 3, 4, 9], "v_rsq_f32": [0, 2, 3, 4, 9], "v_rsq_f32_dpp": [0, 3, 4, 9], "v_rsq_f32_e64": [0, 2, 3, 4, 9], "v_rsq_f32_sdwa": [0, 3, 4, 9], "v_rsq_f64": [0, 2, 3, 4, 9], "v_rsq_f64_e64": [0, 2, 3, 4, 9], "v_rsq_legacy_f32": 2, "v_rsq_legacy_f32_e64": 2, "v_sad_hi_u8": [0, 2, 3, 4, 9], "v_sad_u16": [0, 2, 3, 4, 9], "v_sad_u32": [0, 2, 3, 4, 9], "v_sad_u8": [0, 2, 3, 4, 9], "v_sat_pk_u8_i16": [0, 4, 9], "v_sat_pk_u8_i16_dpp": [0, 4, 9], "v_sat_pk_u8_i16_e64": [0, 4, 9], "v_sat_pk_u8_i16_sdw": [0, 4, 9], "v_screen_partition_4se_b32": [4, 9], "v_screen_partition_4se_b32_dpp": [4, 9], "v_screen_partition_4se_b32_e64": [4, 9], "v_screen_partition_4se_b32_sdw": [4, 9], "v_sin_f16": [0, 3, 4, 9], "v_sin_f16_dpp": [0, 3, 4, 9], "v_sin_f16_e64": [0, 3, 4, 9], "v_sin_f16_sdw": [0, 3, 4, 9], "v_sin_f32": [0, 2, 3, 4, 9, 591], "v_sin_f32_dpp": [0, 3, 4, 9], "v_sin_f32_e64": [0, 2, 3, 4, 9], "v_sin_f32_sdw": [0, 3, 4, 9], "v_sqrt_f16": [0, 3, 4, 9], "v_sqrt_f16_dpp": [0, 3, 4, 9], "v_sqrt_f16_e64": [0, 3, 4, 9], "v_sqrt_f16_sdwa": [0, 3, 4, 9], "v_sqrt_f32": [0, 2, 3, 4, 9], "v_sqrt_f32_dpp": [0, 3, 4, 9], "v_sqrt_f32_e64": [0, 2, 3, 4, 9], "v_sqrt_f32_sdwa": [0, 3, 4, 9], "v_sqrt_f64": [0, 2, 3, 4, 9], "v_sqrt_f64_e64": [0, 2, 3, 4, 9], "v_sub_co_ci_u32": 0, "v_sub_co_ci_u32_dpp": 0, "v_sub_co_ci_u32_e64": 0, "v_sub_co_ci_u32_sdw": 0, "v_sub_co_u32": [0, 4, 9], "v_sub_co_u32_dpp": [4, 9], "v_sub_co_u32_e64": [4, 9], "v_sub_co_u32_sdw": [4, 9], "v_sub_f16": [0, 3, 4, 9], "v_sub_f16_dpp": [0, 3, 4, 9], "v_sub_f16_e64": [0, 3, 4, 9], "v_sub_f16_sdw": [0, 3, 4, 9], "v_sub_f32": [0, 2, 3, 4, 9], "v_sub_f32_dpp": [0, 3, 4, 9], "v_sub_f32_e64": [0, 2, 3, 4, 9], "v_sub_f32_sdw": [0, 3, 4, 9], "v_sub_i16": [4, 9], "v_sub_i32": [2, 4, 9], "v_sub_i32_e64": 2, "v_sub_nc_i16": 0, "v_sub_nc_i32": 0, "v_sub_nc_u16": 0, "v_sub_nc_u32": 0, "v_sub_nc_u32_dpp": 0, "v_sub_nc_u32_e64": 0, "v_sub_nc_u32_sdw": 0, "v_sub_u16": [3, 4, 9], "v_sub_u16_dpp": [3, 4, 9], "v_sub_u16_e64": [3, 4, 9], "v_sub_u16_sdw": [3, 4, 9], "v_sub_u32": [3, 4, 9], "v_sub_u32_dpp": [3, 4, 9], "v_sub_u32_e64": [3, 4, 9], "v_sub_u32_sdw": [3, 4, 9], "v_subb_co_u32": [4, 9], "v_subb_co_u32_dpp": [4, 9], "v_subb_co_u32_e64": [4, 9], "v_subb_co_u32_sdw": [4, 9], "v_subb_u32": [2, 3], "v_subb_u32_dpp": 3, "v_subb_u32_e64": [2, 3], "v_subb_u32_sdw": 3, "v_subbrev_co_u32": [4, 9], "v_subbrev_co_u32_dpp": [4, 9], "v_subbrev_co_u32_e64": [4, 9], "v_subbrev_co_u32_sdw": [4, 9], "v_subbrev_u32": [2, 3], "v_subbrev_u32_dpp": 3, "v_subbrev_u32_e64": [2, 3], "v_subbrev_u32_sdw": 3, "v_subrev_co_ci_u32": 0, "v_subrev_co_ci_u32_dpp": 0, "v_subrev_co_ci_u32_e64": 0, "v_subrev_co_ci_u32_sdw": 0, "v_subrev_co_u32": [0, 4, 9], "v_subrev_co_u32_dpp": [4, 9], "v_subrev_co_u32_e64": [4, 9], "v_subrev_co_u32_sdw": [4, 9], "v_subrev_f16": [0, 3, 4, 9], "v_subrev_f16_dpp": [0, 3, 4, 9], "v_subrev_f16_e64": [0, 3, 4, 9], "v_subrev_f16_sdw": [0, 3, 4, 9], "v_subrev_f32": [0, 2, 3, 4, 9], "v_subrev_f32_dpp": [0, 3, 4, 9], "v_subrev_f32_e64": [0, 2, 3, 4, 9], "v_subrev_f32_sdw": [0, 3, 4, 9], "v_subrev_i32": 2, "v_subrev_i32_e64": 2, "v_subrev_nc_u32": 0, "v_subrev_nc_u32_dpp": 0, "v_subrev_nc_u32_e64": 0, "v_subrev_nc_u32_sdw": 0, "v_subrev_u16": [3, 4, 9], "v_subrev_u16_dpp": [3, 4, 9], "v_subrev_u16_e64": [3, 4, 9], "v_subrev_u16_sdw": [3, 4, 9], "v_subrev_u32": [3, 4, 9], "v_subrev_u32_dpp": [3, 4, 9], "v_subrev_u32_e64": [3, 4, 9], "v_subrev_u32_sdw": [3, 4, 9], "v_swap_b32": [0, 4, 9], "v_swaprel_b32": 0, "v_trig_preop_f64": [0, 2, 3, 4, 9], "v_trunc_f16": [0, 3, 4, 9], "v_trunc_f16_dpp": [0, 3, 4, 9], "v_trunc_f16_e64": [0, 3, 4, 9], "v_trunc_f16_sdw": [0, 3, 4, 9], "v_trunc_f32": [0, 2, 3, 4, 9], "v_trunc_f32_dpp": [0, 3, 4, 9], "v_trunc_f32_e64": [0, 2, 3, 4, 9], "v_trunc_f32_sdw": [0, 3, 4, 9], "v_trunc_f64": [0, 2, 3, 4, 9], "v_trunc_f64_dpp": 9, "v_trunc_f64_e64": [0, 2, 3, 4, 9], "v_writelane_b32": [0, 2, 3, 4, 9], "v_xad_u32": [0, 4, 9], "v_xnor_b32": [0, 7, 8, 9], "v_xnor_b32_dpp": [0, 7, 8, 9], "v_xnor_b32_e64": [0, 7, 8, 9], "v_xnor_b32_sdw": [0, 7, 8, 9], "v_xor3_b32": 0, "v_xor_b32": [0, 2, 3, 4, 9], "v_xor_b32_dpp": [0, 3, 4, 9], "v_xor_b32_e64": [0, 2, 3, 4, 9], "v_xor_b32_sdw": [0, 3, 4, 9], "va_list": 715, "vacat": 760, "vaddr": [0, 2, 3, 4, 8, 9, 31, 32, 341, 381, 382, 494, 495], "vadv": 780, "vagu": [123, 670], "val": [585, 595, 598, 611, 661, 665, 711, 715, 729, 749, 768, 776, 786, 809, 810, 811, 812, 813, 814, 815, 816], "val0": [665, 715], "val1": [665, 715, 717, 774, 775, 776], "val2": [665, 715, 717, 774, 775, 776], "val29": 665, "val3": [715, 775], "val7": 715, "val_express": 586, "val_offset": 586, "val_success": 715, "valb": 729, "valc": 729, "valeur": 123, "valgrind": [613, 617, 709, 781], "valid": [27, 129, 220, 378, 490, 585, 586, 589, 590, 591, 598, 599, 606, 608, 611, 612, 615, 618, 620, 625, 627, 640, 642, 645, 649, 650, 653, 660, 661, 670, 673, 676, 679, 681, 683, 689, 692, 707, 714, 715, 716, 717, 719, 720, 727, 729, 730, 738, 740, 743, 746, 748, 749, 751, 765, 766, 768, 769, 770, 772, 776, 783, 787, 788, 790, 791, 809, 811], "validat": [591, 602, 605, 632, 661, 670, 682, 707, 714, 766, 781, 792, 809, 810, 811, 812, 813, 814, 815, 816], "validated": [27, 129, 220, 378, 490, 707, 714, 717, 772, 810], "validating": [661, 759], "validator": 717, "validity": 693, "validly": 715, "validsiz": 776, "valn": 776, "valu": [20, 21, 22, 23, 24, 27, 30, 36, 37, 38, 51, 52, 53, 93, 96, 97, 98, 100, 101, 112, 114, 120, 123, 124, 125, 126, 127, 129, 142, 143, 186, 187, 189, 190, 191, 209, 212, 213, 214, 215, 216, 217, 220, 223, 237, 238, 239, 281, 282, 283, 286, 287, 288, 306, 308, 314, 354, 370, 371, 372, 373, 374, 375, 378, 380, 386, 387, 388, 400, 401, 402, 444, 447, 448, 449, 451, 452, 470, 479, 482, 483, 484, 485, 486, 487, 490, 493, 499, 500, 501, 513, 514, 515, 557, 560, 561, 562, 564, 565, 576, 578, 584, 587, 588, 589, 592, 594, 595, 597, 598, 600, 603, 604, 606, 607, 608, 611, 612, 613, 617, 618, 620, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 637, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 653, 654, 655, 659, 660, 665, 666, 668, 670, 672, 673, 674, 675, 678, 680, 683, 685, 688, 689, 690, 691, 692, 693, 705, 707, 708, 711, 712, 713, 714, 716, 719, 725, 726, 729, 731, 735, 736, 738, 739, 740, 741, 743, 744, 748, 750, 755, 756, 759, 761, 764, 768, 770, 774, 775, 777, 780, 781, 783, 785, 786, 787, 788, 789, 791, 794, 795, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820], "valuabl": [610, 617, 664, 670, 694, 700, 753, 780], "value1": 765, "value2": [765, 766], "value_alignment": 715, "value_desc": 661, "value_kind": [591, 715], "value_loaded": 715, "value_typ": [591, 792], "valuecol": 712, "valued": [661, 715], "valuedisallowed": 661, "valuefield": 774, "valuekind": [591, 611], "valuelist": 776, "valuelistn": 776, "valueoptional": 661, "valuerequired": 661, "valuesuffix": 776, "valuet": 749, "valuetracking": [715, 770], "valuetyp": [591, 608, 674, 777, 786], "vanill": 662, "var": [591, 595, 607, 612, 631, 643, 727, 765, 774, 776, 814, 815, 816], "var1": 607, "var_local": 689, "var_nam": 607, "vararg": [598, 607, 608, 715, 749, 810], "varb": 774, "vardecl": 611, "varexpr": [814, 815, 816], "varexprast": [814, 815, 816], "vari": [588, 595, 612, 640, 661, 673, 675, 688, 689, 691, 696, 710, 715, 719, 740, 746, 749, 768, 771, 775, 776, 781, 786, 788], "variability": 596, "variabl": [586, 591, 593, 594, 595, 603, 604, 615, 617, 621, 622, 624, 626, 631, 633, 639, 643, 645, 655, 660, 661, 663, 665, 666, 673, 676, 678, 680, 681, 682, 683, 685, 699, 700, 709, 710, 714, 716, 719, 720, 725, 726, 727, 728, 729, 733, 734, 735, 736, 739, 740, 743, 749, 761, 766, 767, 768, 769, 770, 774, 775, 779, 780, 781, 783, 784, 786, 788, 789, 790, 792, 794, 808, 809, 810, 811, 812, 813, 815, 817, 818, 819], "variable_nam": [606, 753], "variable_op": 776, "variableexprast": [809, 810, 811, 812, 813, 814, 815, 816], "variadic": [715, 749, 757], "variadicopsaredef": 776, "variat": [594, 596, 608, 617, 640, 673, 717, 753, 767, 771, 785, 786, 794], "varied": [609, 717, 762], "variet": 680, "variety": [594, 595, 598, 604, 607, 608, 622, 663, 670, 673, 680, 683, 702, 716, 717, 728, 749, 757, 762, 765, 768, 774, 776, 810, 811, 812, 813, 817], "various": [590, 594, 595, 598, 602, 603, 606, 608, 611, 613, 635, 640, 645, 659, 663, 664, 666, 669, 673, 678, 679, 683, 689, 693, 701, 709, 710, 712, 715, 718, 720, 721, 726, 729, 730, 731, 732, 734, 735, 736, 743, 744, 749, 751, 753, 756, 757, 759, 761, 765, 766, 774, 775, 776, 777, 780, 781, 786, 787, 788, 789, 790, 792, 808, 809, 811, 812, 816], "varnam": [812, 813, 814, 815, 816], "vary": [175, 270, 435, 548, 585, 586, 591, 598, 602, 608, 665, 676, 683, 689, 715, 724, 731, 740, 749, 771, 817], "varying": [608, 749, 776], "vasileios": 755, "vbr": 624, "vbr4": 598, "vbr5": 598, "vbr6": [598, 759], "vbr7": 759, "vbr8": [598, 759], "vc": [703, 717], "vc110": 741, "vc140": 741, "vc2": 741, "vc4": 741, "vc41": [736, 741], "vc50": 741, "vc70": 741, "vc70dep": 741, "vc80": 741, "vc98": 741, "vcall": 605, "vcc": [0, 2, 3, 4, 9, 10, 11, 12, 13, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 45, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 133, 134, 136, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 224, 226, 227, 229, 231, 234, 235, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 317, 318, 322, 323, 328, 329, 330, 331, 332, 341, 342, 343, 344, 345, 347, 348, 381, 382, 383, 385, 386, 387, 389, 390, 392, 394, 397, 398, 403, 404, 405, 406, 407, 410, 411, 412, 413, 421, 422, 423, 424, 425, 426, 427, 428, 429, 494, 495, 496, 498, 499, 500, 502, 503, 505, 507, 510, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 533, 534, 535, 536, 537, 538, 539, 540, 541, 591], "vcc_32": 591, "vcc_64": 591, "vcc_hi": 590, "vcc_lo": [86, 590], "vccz": [10, 11, 12, 13, 54, 57, 58, 59, 60, 61, 63, 64, 65, 69, 70, 75, 77, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 166, 167, 240, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 261, 265, 317, 318, 322, 323, 328, 329, 330, 331, 332, 342, 343, 344, 345, 347, 348, 403, 406, 407, 410, 411, 412, 413, 421, 422, 425, 429, 516, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 533, 534, 537, 541], "vcrt": 703, "vcsrevis": 606, "vdat": [0, 2, 3, 4, 8, 9, 587], "vdata0": [0, 2, 3, 4, 9], "vdata1": [0, 2, 3, 4, 9], "vdst": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 587], "ve": [608, 611, 662, 670, 672, 678, 679, 681, 688, 715, 726, 728, 730, 747, 749, 751, 760, 770, 781, 792, 809, 811, 813, 814, 815, 816, 817], "vec": [715, 749], "vec0": 715, "vec01": 715, "vec012": 715, "vec0123": 715, "vec1": [715, 749], "vec2": [715, 749], "vec_splat": 716, "vec_type_hint": 591, "vector": [86, 120, 177, 209, 272, 314, 437, 479, 550, 584, 587, 590, 591, 597, 598, 608, 611, 640, 660, 661, 682, 688, 691, 714, 716, 727, 729, 746, 755, 757, 775, 783, 785, 786, 792, 809, 810, 811, 812, 813, 814, 815, 816, 817], "vector_length": 715, "vector_redirect": 715, "vectoriz": [586, 640, 682, 716, 757, 779, 784], "vectorize_width": 785, "vectorized": [586, 678, 715, 754, 755, 782, 785], "vectorizer": [754, 785], "vectorizing": [715, 755, 782, 785], "vectorty": 715, "vectortyp": 749, "vectsiz": 776, "vectypehint": 591, "veg": 591, "vega7nm": 591, "vehicl": [607, 611], "vehiclemak": 611, "vehicletyp": 611, "vely": 608, "vend": 713, "vendor": [585, 586, 611, 657, 715, 762, 766, 815], "vendor_and_architecture_nam": 591, "vendor_name_siz": 591, "venu": 760, "venv": 779, "ver": 793, "ver60": 736, "verb": 611, "verbatim": [661, 747, 776, 786], "verbos": [612, 613, 615, 617, 631, 637, 643, 644, 651, 655, 709, 710, 714, 721, 749, 753, 786, 792], "verbosity": [789, 790], "verd": 591, "verif": [591, 612, 661, 694, 715, 746, 761, 779, 783, 784], "verifi": [592, 602, 608, 615, 616, 694, 715, 717, 770, 788, 790, 810, 811, 812, 813, 814, 815, 816], "verified": [612, 685, 715, 768], "verify": [593, 605, 612, 615, 616, 624, 638, 640, 659, 670, 683, 707, 710, 714, 715, 722, 728, 741, 750, 751, 766, 767, 781, 788, 790, 813, 814, 815, 816], "verify_arch": 638, "verifyfunct": [810, 811, 812, 813, 814, 815, 816], "verifying": [612, 631, 765], "verifypreservedanalys": 790, "vers": [585, 595, 665, 710, 715, 740, 755, 770, 781], "version": [589, 591, 592, 593, 594, 595, 598, 603, 606, 607, 608, 612, 615, 617, 618, 620, 622, 624, 625, 626, 627, 631, 634, 636, 637, 638, 641, 642, 643, 644, 649, 650, 651, 653, 654, 655, 660, 661, 662, 663, 664, 666, 670, 672, 674, 677, 678, 680, 683, 685, 689, 691, 693, 699, 701, 705, 706, 710, 715, 723, 726, 727, 728, 729, 731, 732, 736, 741, 743, 745, 747, 749, 751, 752, 753, 757, 759, 761, 762, 765, 767, 768, 770, 772, 774, 779, 782, 785, 786, 788, 789, 790, 791, 793, 794, 810, 811, 812, 814, 815, 816], "version_less": 606, "versioned": [715, 782, 791, 814], "versionhead": 736, "versioning": [586, 591, 715, 726, 755], "versioninglicm": 782, "versionsignatur": 736, "vertex": [78, 171, 266, 542, 591], "vertexbuffert": 591, "vertic": 789, "vertical": 751, "very": [586, 594, 595, 596, 598, 602, 604, 607, 608, 610, 611, 612, 629, 640, 645, 661, 669, 670, 672, 673, 676, 678, 679, 680, 681, 682, 683, 686, 694, 698, 700, 702, 704, 707, 708, 709, 714, 715, 717, 721, 723, 724, 726, 727, 728, 730, 731, 735, 743, 746, 749, 751, 753, 756, 759, 765, 766, 770, 774, 777, 779, 780, 781, 785, 788, 789, 792, 795, 796, 808, 809, 810, 811, 812, 813, 814, 817], "vex": [660, 774], "vf": [753, 755], "vfab": 715, "vfp": [597, 715], "vfp3": 706, "vfprintf": 715, "vfuncid": 715, "vg": [617, 781], "vg_leak": 617, "vgpr": [20, 84, 123, 212, 370, 482, 589, 715], "vgpr0": [585, 591], "vgpr1": [585, 591], "vgpr104": 591, "vgpr120": 591, "vgpr136": 591, "vgpr152": 591, "vgpr168": 591, "vgpr184": 591, "vgpr200": 591, "vgpr216": 591, "vgpr232": 591, "vgpr248": 591, "vgpr255": 591, "vgpr31": 591, "vgpr40": 591, "vgpr56": 591, "vgpr72": 591, "vgpr88": 591, "vgpr_lim": 591, "vgpr_spill_count": 591, "vgprs_used": 591, "vgrp": 591, "vhaddp": [632, 640], "vi": [591, 595, 603, 606, 608, 612, 640, 645, 646, 655, 659, 662, 664, 665, 667, 668, 669, 670, 671, 672, 673, 675, 677, 679, 680, 683, 690, 698, 699, 701, 705, 706, 715, 717, 718, 720, 724, 728, 730, 731, 733, 734, 746, 749, 755, 757, 761, 766, 768, 771, 772, 774, 776, 777, 781, 787, 788, 789, 791, 795, 810, 811, 816], "viabl": [640, 700, 710, 714, 766], "vibr": 670, "vic": [585, 595, 640, 665, 710, 715, 740, 755, 770, 781], "video": [585, 749], "videos": 609, "view": [585, 591, 595, 608, 609, 626, 645, 671, 717, 718, 719, 726, 728, 751, 753, 767, 789, 808, 812], "viewcfg": [749, 812], "viewcfgonly": [749, 812], "viewed": [586, 738], "viewer": 611, "viewgraph": 749, "viewid": 591, "viewing": [726, 780], "viewpoint": 609, "viewport": 591, "viewvc": 751, "vii": 591, "vim": [683, 767, 777], "violat": [591, 609, 670, 681, 715, 719, 749, 760, 812], "violated": [605, 680, 715], "violating": [609, 760], "violent": 609, "virgini": 752, "virt": 749, "virtreg": 608, "virtreg2indexfunctor": 608, "virtregmap": 608, "virtregrewrit": 765, "virtual": [585, 586, 591, 594, 605, 612, 617, 625, 645, 665, 669, 680, 689, 690, 691, 694, 696, 698, 708, 714, 715, 721, 726, 731, 746, 749, 755, 757, 765, 766, 774, 775, 779, 781, 786, 788, 809, 810, 811, 812, 813, 814, 815, 816], "virtualconstprop": 715, "virtualenv": 779, "virtualindex": 715, "virtuality": 715, "virtualized": 591, "virtually": [585, 586, 591, 711, 749, 777, 814], "vis": [602, 634, 636, 638, 642, 643, 644, 651, 653, 654, 667, 674, 749, 786, 795], "visibilit": 714, "visibility": [591, 598, 608, 642, 671, 700, 703, 714, 718, 724, 731, 761, 783], "visibl": [591, 595, 598, 611, 622, 661, 714, 715, 716, 718, 729, 731, 749, 763, 765, 770, 783, 788], "visit": 667, "visitbasicblock": 749, "visitconstrainedfpintrinsic": 592, "visited": [667, 749, 775], "visitfab": 674, "visitfunct": 790, "visitgcroot": 680, "visiticmpinst": 602, "visiting": [680, 776], "visitinstruct": 790, "visitor": [602, 660, 674, 680, 774, 810, 818], "visitsrl": 674, "visitxor": 602, "visual": [593, 611, 673, 675, 683, 684, 703, 728, 735, 751, 757, 759, 765, 786], "visualiz": [608, 715, 717, 740, 746, 749, 759, 766, 789, 812], "visualizing": [786, 790, 812], "visually": 612, "viv": 715, "vk": 590, "vk_argu": 611, "vk_basicblock": 611, "vl": 715, "vla": 715, "vlas": [675, 681], "vle": 663, "vlen": 715, "vliw": [660, 774], "vlk": 766, "vm": [0, 2, 3, 4, 590, 591, 611, 714, 715, 717], "vm_cnt": [120, 209, 314, 479, 584], "vma": [643, 655, 790], "vmaddr": 714, "vmcnt": [120, 209, 314, 479, 584, 591], "vmcnt_sat": [120, 209, 314, 479, 584], "vmkit": 671, "vmodulekey": 795, "vmov": 612, "vmulp": [632, 640], "vn": [590, 716], "vo": 622, "vocabulary": 715, "void": [591, 594, 595, 597, 598, 599, 608, 611, 612, 628, 657, 661, 662, 665, 666, 673, 674, 676, 677, 680, 681, 692, 699, 700, 710, 713, 714, 717, 718, 719, 721, 726, 728, 729, 731, 732, 735, 743, 746, 749, 761, 765, 766, 768, 770, 783, 785, 786, 787, 788, 789, 790, 792, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "voidtyp": 749, "voir": [6, 7, 793], "volatil": [589, 591, 594, 595, 608, 640, 655, 676, 680, 726, 735, 746, 786], "volatility": 594, "volcanic": 591, "volkan": 697, "volum": [682, 749], "voluminous": 749, "voluntary": 751, "volunte": [758, 762], "volunteer": [701, 751, 758], "volunteered": 707, "von": 715, "vop1": [588, 591], "vop2": [588, 591], "vop3": [587, 588, 591], "vop_dpp": 591, "vop_sdw": 591, "vopc": [588, 591], "vot": [724, 762], "voted": 762, "voting": 762, "votr": 793, "vp_fdiv": 754, "vpaddbyrr_vpadddyrr_vpaddqyrr_vpaddwyrr_vpsubbyrr_vpsubdyrr_vpsubqyrr_vpsubwyrr": 632, "vpaddqyrr": 632, "vpbasicblock": 755, "vpblock": 755, "vpblockbas": 755, "vpdef": 755, "vpic": 752, "vpinstruct": 755, "vplan": 754, "vprecip": 755, "vprecipebas": 755, "vpregionblock": 755, "vprfc": 754, "vpsubqyrr": 632, "vpsubusw": 781, "vptr": [715, 766], "vptransformstat": 755, "vpus": 755, "vpvalu": 755, "vr": 715, "vreg": [608, 690, 691, 693], "vscale_rang": [598, 715], "vscale_range_min": 715, "vscnt": 591, "vscod": 763, "vset_lan": 597, "vsetq_lane_s32": 597, "vsinstalld": 685, "vsp": 591, "vsplth": 716, "vsrc": [0, 2, 3, 4, 8, 9], "vsrc0": [0, 1, 2, 3, 4, 7, 8, 9], "vsrc1": [0, 1, 2, 3, 4, 7, 8, 9], "vsrc2": [0, 2, 3, 4, 8, 9], "vsrc3": [0, 2, 3, 4], "vsx": [715, 757], "vtabl": [611, 612, 703, 714, 715, 766, 783], "vulner": 766, "vulnerabilit": [715, 756, 761, 762, 766], "vulnerability": 766, "vv": [612, 617], "vx": [586, 591], "vzeroupp": 632, "w": [17, 35, 107, 121, 196, 210, 279, 280, 291, 294, 295, 296, 301, 385, 457, 480, 498, 571, 590, 608, 641, 642, 643, 649, 650, 654, 675, 680, 700, 715, 717, 757, 770], "w0": 715, "w30": [715, 721], "w31": 715, "w64": 606, "w7100": 591, "w8": 597, "w8100": 591, "w9100": 591, "w_": 777, "wa": 715, "wait": [120, 209, 314, 479, 584, 591, 610, 611, 640, 701, 731, 758, 771], "waitcnt": [0, 2, 3, 4, 9], "waiting": [610, 640, 714, 731, 795, 809, 811], "waitset": 640, "waived": 670, "wak": 751, "walk": [591, 704, 714, 716, 719, 727, 746, 749, 788, 792], "walkarch": 749, "walker": 726, "walking": [691, 726, 749, 751], "wall": [617, 728, 775, 788, 817], "walltimemark": 791, "wambiguous": 628, "want": [585, 586, 591, 594, 596, 598, 601, 604, 606, 608, 609, 610, 611, 612, 617, 626, 640, 661, 662, 664, 670, 672, 674, 676, 679, 681, 682, 683, 685, 686, 687, 688, 691, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 717, 719, 722, 726, 727, 728, 729, 730, 731, 745, 746, 747, 749, 750, 751, 761, 762, 765, 766, 767, 769, 770, 771, 775, 776, 777, 779, 780, 781, 786, 787, 788, 789, 790, 792, 794, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818], "wanted": [585, 586, 708, 719, 749, 751, 771, 789, 790, 811], "wanting": [731, 749, 771], "warn": [606, 611, 636, 660, 691, 715, 728, 746], "warned": [685, 709], "warning": [589, 591, 604, 606, 612, 615, 622, 628, 642, 654, 660, 662, 668, 670, 675, 683, 704, 710, 715, 719, 728, 731, 770, 774, 775, 777, 779, 782, 794, 795, 796, 816, 818], "warnmissedtransformationspass": 782, "warpsiz": 729, "warr": 610, "warranted": [670, 674, 772], "warranty": [670, 788], "warren": 669, "wary": 678, "was": [585, 586, 591, 593, 595, 597, 598, 600, 602, 606, 608, 610, 611, 615, 617, 624, 625, 626, 632, 640, 646, 660, 661, 662, 665, 666, 667, 668, 670, 673, 675, 676, 679, 681, 683, 685, 686, 688, 690, 700, 707, 711, 713, 714, 715, 717, 719, 720, 727, 728, 730, 731, 736, 741, 744, 747, 748, 749, 751, 753, 757, 760, 761, 763, 765, 766, 770, 771, 774, 775, 776, 777, 782, 785, 788, 791, 792, 794, 795, 796, 797, 809, 810, 811, 812, 813, 816, 817], "wasincrementallylinked": 736, "wasn": [594, 727, 813, 814, 815, 816], "wast": [722, 749, 765, 767], "wasted": [720, 749, 768], "wasteful": 814, "watch": 591, "watching": [670, 695], "waterfall": [701, 728], "wav": [20, 212, 370, 482, 591], "wave32": [589, 590], "wave_rol": 589, "wave_ror": 589, "wave_shl": [589, 591], "wave_shr": 589, "wavefront": [42, 74, 86, 586, 589, 591], "wavefront32": 591, "wavefront64": 591, "wavefront_siz": 591, "wavefrontsiz": 591, "wavefrontsize64": 591, "way": [585, 586, 591, 593, 594, 595, 598, 602, 603, 604, 606, 607, 608, 610, 611, 612, 613, 631, 639, 640, 642, 645, 646, 655, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 673, 676, 677, 678, 679, 680, 683, 685, 686, 688, 690, 691, 693, 694, 698, 700, 705, 706, 707, 708, 709, 710, 711, 713, 715, 717, 719, 721, 725, 726, 727, 728, 729, 730, 731, 733, 740, 741, 743, 746, 747, 748, 749, 750, 751, 753, 755, 757, 758, 759, 761, 762, 765, 766, 768, 770, 772, 774, 776, 777, 779, 780, 781, 783, 785, 786, 787, 788, 789, 790, 792, 794, 795, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "waypoint": 602, "wb": 640, "wc": 715, "wchar_t": 715, "wcovered": 611, "wd": 715, "we": [591, 593, 594, 596, 597, 598, 599, 600, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 617, 632, 640, 660, 661, 662, 664, 665, 666, 667, 670, 672, 673, 676, 677, 679, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 698, 700, 701, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 717, 719, 720, 721, 724, 726, 729, 730, 731, 732, 734, 735, 736, 739, 740, 741, 743, 744, 745, 746, 747, 749, 750, 751, 753, 757, 760, 761, 762, 763, 765, 766, 768, 769, 770, 771, 772, 776, 777, 781, 782, 783, 785, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "weak": [595, 598, 641, 642, 643, 675, 714, 715, 718, 727, 731, 749, 757, 814], "weak_odr": [598, 715], "weakanylinkag": 749, "weaken": [640, 642], "weakest": [595, 608], "weakness": 678, "weakodrlinkag": 749, "weakvh": 749, "wealth": 664, "web": [610, 670, 685, 728, 752, 757], "webassembly": [608, 671, 683, 715, 753], "webassemblycodegen": 671, "webk": [715, 753, 768], "webkit_jscc": [598, 715], "websit": [607, 671, 751], "websiteinfr": 671, "wednesday": [682, 724], "week": [610, 664, 670, 682, 707, 724, 728, 753, 760, 762, 772], "weekend": [610, 724], "weekly": [682, 724], "weight": [646, 671, 675, 715, 721, 756], "weird": 608, "wel": [585, 586, 591, 592, 594, 595, 598, 602, 603, 604, 606, 607, 608, 609, 610, 611, 613, 626, 627, 640, 641, 645, 659, 661, 664, 665, 667, 669, 670, 674, 676, 677, 678, 683, 688, 691, 698, 699, 700, 701, 704, 708, 710, 714, 717, 718, 719, 721, 724, 727, 728, 729, 731, 735, 736, 738, 739, 744, 746, 747, 748, 749, 751, 752, 753, 754, 759, 760, 761, 762, 763, 765, 766, 767, 770, 772, 776, 777, 781, 782, 784, 785, 788, 789, 790, 794, 809, 810, 811, 813, 814, 815, 816, 818], "welcom": [609, 610, 663, 670, 682, 683, 685, 705, 731, 770, 788, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "welcoming": [609, 724], "weng": 662, "wennborg": 707, "went": [611, 811, 812], "wer": [585, 586, 591, 595, 597, 608, 611, 612, 617, 626, 631, 639, 640, 649, 650, 655, 659, 661, 662, 665, 666, 670, 673, 678, 685, 689, 691, 707, 709, 710, 713, 714, 715, 716, 717, 726, 727, 730, 731, 736, 746, 749, 751, 757, 760, 763, 765, 766, 770, 772, 774, 775, 777, 785, 790, 795, 817], "weren": [670, 691], "werror": 699, "wf": 715, "wg21": 766, "wget": 683, "wgmlir": 671, "wgp": 591, "wgp_mod": 591, "what": [585, 586, 589, 590, 591, 594, 595, 597, 598, 599, 601, 603, 606, 608, 611, 612, 616, 617, 618, 626, 637, 640, 645, 659, 661, 662, 663, 665, 669, 670, 673, 674, 682, 683, 685, 688, 689, 691, 692, 694, 695, 700, 701, 706, 707, 709, 710, 714, 715, 716, 719, 721, 722, 724, 726, 728, 729, 730, 731, 732, 734, 736, 740, 743, 744, 746, 747, 749, 750, 753, 755, 758, 759, 765, 766, 767, 769, 770, 771, 774, 776, 777, 780, 786, 789, 791, 792, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "whatev": [594, 606, 612, 632, 661, 662, 665, 673, 681, 683, 704, 706, 714, 715, 717, 724, 726, 734, 746, 747, 749, 771, 787, 792], "whatsoev": [670, 715], "when": [82, 351, 433, 546, 585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 601, 603, 604, 606, 607, 608, 609, 612, 613, 615, 617, 622, 625, 626, 627, 631, 632, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 654, 655, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 679, 680, 681, 682, 683, 685, 688, 689, 692, 693, 694, 696, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 714, 715, 716, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 733, 735, 736, 738, 740, 743, 745, 746, 747, 748, 749, 751, 755, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 794, 795, 796, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "whenev": [585, 586, 593, 594, 607, 611, 612, 613, 661, 668, 700, 712, 715, 726, 749, 765, 768, 772, 781, 808, 816], "wher": [24, 127, 217, 375, 487, 585, 586, 587, 589, 590, 591, 592, 595, 597, 598, 599, 600, 602, 604, 605, 606, 608, 609, 610, 611, 612, 615, 617, 621, 622, 626, 628, 631, 632, 639, 640, 641, 642, 645, 646, 650, 659, 660, 661, 662, 665, 666, 667, 668, 670, 673, 674, 677, 678, 679, 680, 681, 683, 685, 686, 688, 689, 690, 693, 694, 699, 700, 703, 706, 707, 708, 709, 710, 711, 714, 715, 717, 719, 720, 721, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 743, 744, 746, 747, 749, 750, 751, 755, 758, 759, 760, 761, 762, 765, 766, 770, 772, 774, 776, 777, 780, 781, 782, 786, 787, 788, 789, 790, 792, 794, 796, 808, 810, 811, 812, 814, 815, 816, 818], "whereby": [740, 751], "wherev": [662, 715, 749, 816], "wheth": [585, 586, 589, 591, 592, 594, 595, 598, 599, 602, 605, 606, 608, 611, 618, 620, 622, 628, 640, 647, 657, 659, 662, 665, 673, 674, 675, 680, 681, 683, 689, 690, 698, 699, 705, 707, 708, 709, 714, 715, 717, 718, 719, 727, 730, 733, 740, 743, 746, 747, 749, 750, 751, 753, 755, 759, 760, 761, 762, 765, 766, 768, 770, 774, 775, 776, 782, 783, 786, 789, 791, 795, 809, 811, 812, 813, 814, 815, 816, 817], "which": [24, 30, 34, 66, 67, 84, 85, 99, 127, 132, 157, 158, 175, 176, 188, 213, 217, 223, 225, 254, 255, 270, 271, 289, 349, 352, 371, 375, 380, 384, 418, 419, 435, 436, 450, 483, 487, 493, 497, 530, 531, 548, 549, 563, 585, 586, 587, 588, 589, 590, 591, 595, 596, 597, 598, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 617, 618, 620, 622, 624, 625, 626, 627, 628, 629, 632, 636, 638, 640, 641, 642, 645, 646, 649, 650, 653, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 673, 674, 675, 676, 678, 679, 680, 683, 684, 685, 686, 688, 689, 693, 694, 695, 696, 698, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 741, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "whichev": [747, 765], "whil": [213, 371, 483, 585, 586, 588, 589, 591, 593, 594, 598, 600, 601, 602, 606, 607, 608, 609, 611, 612, 617, 640, 659, 661, 664, 665, 668, 669, 670, 672, 673, 677, 679, 681, 682, 683, 685, 686, 689, 690, 693, 694, 698, 700, 701, 704, 705, 706, 710, 712, 713, 715, 716, 717, 718, 719, 721, 724, 726, 727, 728, 732, 733, 734, 735, 736, 740, 741, 743, 744, 745, 746, 747, 751, 753, 758, 759, 760, 761, 762, 765, 768, 770, 771, 774, 775, 776, 777, 781, 785, 788, 790, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "whilst": [641, 655], "whip": 813, "whirlwind": 809, "whisker": 766, "whit": 663, "whitelist": [626, 757], "whitelist_fun": 626, "whitepap": [725, 789], "whitespac": [612, 622, 636, 638, 642, 670, 776, 808, 809, 810, 811, 812, 813, 814, 815, 816], "whitespaceoranycomment": 776, "whitespaceorccomment": 776, "whizbang": 611, "who": [604, 606, 607, 666, 670, 672, 682, 688, 690, 701, 709, 714, 715, 724, 727, 728, 731, 745, 747, 751, 760, 762, 771, 772, 776, 784, 786, 794, 795, 811, 814, 817, 818], "whol": [585, 586, 589, 591, 593, 608, 610, 622, 646, 670, 673, 674, 678, 680, 698, 706, 707, 711, 715, 717, 719, 721, 727, 731, 746, 749, 759, 761, 769, 772, 779, 780, 781, 783, 788, 794, 795, 809, 811, 812], "whom": [727, 744], "whos": [585, 586, 589, 591, 594, 598, 602, 608, 611, 617, 622, 631, 640, 641, 642, 645, 646, 666, 667, 669, 714, 715, 741, 743, 749, 755, 759, 762, 765, 774, 775, 776, 786, 791, 795, 809, 813, 814], "why": [585, 586, 591, 594, 600, 601, 609, 610, 611, 640, 660, 662, 670, 679, 683, 699, 701, 708, 715, 722, 726, 727, 728, 741, 747, 749, 752, 762, 765, 766, 767, 770, 774, 788, 792, 809, 810, 812, 818], "wibbl": 653, "wictcommunity": 671, "wid": [585, 586, 590, 591, 594, 595, 598, 604, 608, 609, 643, 649, 670, 674, 680, 681, 689, 693, 702, 715, 729, 734, 743, 744, 749, 755, 757, 762, 776, 793, 811, 812], "wideaddr": 715, "widecharact": 743, "widely": [595, 607, 670, 680, 683, 749, 765, 783, 817], "widen": [755, 785, 788], "widenable_cond": 715, "widenable_condit": 715, "widened": 755, "widening": [608, 693, 788], "widenscalar": 693, "widenscalarfor": 693, "widenscalartonextpow2": 693, "widest": 670, "width": [590, 595, 597, 632, 640, 643, 662, 680, 689, 736, 746, 748, 749, 753, 782, 785, 817], "width_fiv": 689, "width_thre": 689, "wik": [606, 683, 706, 717, 752, 753], "wikipedi": [715, 719, 812], "wild": [661, 813], "wildcard": [626, 642, 654], "will": [585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 637, 640, 641, 642, 643, 645, 646, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 670, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 693, 694, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 738, 740, 741, 743, 745, 746, 747, 749, 750, 751, 753, 755, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "willing": [610, 728, 817], "willreturn": [598, 715], "wily": 681, "win": [594, 611, 660, 749, 766], "win32": [608, 683, 703, 741, 771, 781], "wincomplet": 628, "windbg": 765, "window": [591, 604, 606, 608, 611, 617, 622, 628, 645, 661, 662, 665, 666, 676, 682, 683, 684, 685, 701, 713, 715, 731, 741, 744, 749, 751, 765, 771, 781, 784, 788, 810, 811, 812, 813], "wineh": 665, "winfinit": 728, "winrt": 735, "winrtsmartpoint": 735, "wip": 591, "wireshark": 717, "wiring": 676, "wis": [675, 716], "wisely": 776, "wish": [606, 610, 617, 622, 640, 661, 662, 674, 678, 681, 683, 694, 705, 709, 715, 731, 744, 749, 760, 766, 770, 786, 818], "wished": 727, "wishing": [670, 731], "with": [17, 25, 26, 27, 128, 129, 210, 218, 219, 220, 316, 321, 326, 327, 338, 339, 376, 377, 378, 480, 488, 489, 490, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 615, 617, 618, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 653, 654, 655, 659, 660, 664, 665, 666, 667, 668, 669, 672, 673, 674, 675, 677, 678, 679, 682, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 697, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 731, 733, 734, 735, 736, 738, 739, 740, 741, 743, 744, 745, 748, 750, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 780, 781, 782, 783, 784, 786, 789, 791, 792, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820], "with_assert": 606, "withcolor": 611, "withentryval": 639, "withholding": 765, "within": [585, 586, 589, 591, 594, 597, 598, 602, 607, 608, 609, 611, 612, 617, 631, 640, 642, 643, 653, 654, 659, 662, 665, 666, 670, 673, 675, 680, 681, 683, 693, 698, 701, 708, 710, 714, 715, 716, 719, 721, 727, 728, 729, 730, 731, 733, 734, 736, 740, 743, 744, 746, 749, 750, 751, 753, 755, 759, 760, 761, 762, 765, 766, 768, 770, 772, 774, 776, 779, 780, 781, 783, 788, 791, 792, 794, 811, 812, 813, 814, 815, 816], "withmoduledo": [731, 795, 796, 797], "without": [585, 586, 589, 590, 591, 595, 597, 598, 599, 602, 604, 606, 607, 608, 610, 611, 612, 613, 617, 620, 622, 625, 631, 636, 642, 643, 646, 654, 655, 661, 662, 665, 666, 668, 670, 671, 673, 675, 678, 680, 681, 683, 688, 689, 693, 694, 699, 701, 710, 711, 714, 715, 716, 717, 718, 719, 722, 723, 726, 727, 731, 732, 733, 736, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 759, 760, 765, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 781, 782, 785, 786, 788, 809, 811, 812, 813, 814, 815, 816], "witness": 760, "witnessed": 591, "witnessing": 760, "wl": [683, 733, 813], "wlandry": 752, "wno": 704, "woff2": 717, "wojciech": 746, "wolf": 669, "women": 671, "won": [606, 608, 611, 662, 670, 681, 683, 691, 705, 706, 711, 715, 728, 731, 747, 751, 758, 761, 765, 766, 772, 780, 781, 810, 811, 816], "wond": [676, 681, 708], "wondered": 766, "wonderful": 811, "wondering": [611, 670], "wontfix": 601, "word": [589, 591, 595, 599, 608, 609, 610, 611, 666, 669, 673, 675, 676, 680, 692, 694, 708, 715, 717, 726, 732, 738, 749, 753, 761, 765, 766, 776, 786, 791, 794, 810], "word16": 591, "word32": 591, "word64": 591, "word_0": [589, 591, 738], "word_1": [589, 591, 738], "word_n": 738, "wording": [609, 670, 728, 760], "wordsiz": 680, "work": [585, 586, 592, 593, 594, 595, 599, 601, 602, 603, 606, 607, 608, 609, 611, 612, 617, 618, 620, 626, 632, 634, 636, 639, 642, 643, 646, 654, 661, 662, 663, 665, 666, 670, 672, 673, 674, 676, 679, 680, 682, 683, 685, 686, 687, 690, 694, 699, 700, 701, 703, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 718, 719, 721, 724, 725, 726, 728, 730, 732, 741, 746, 747, 749, 750, 751, 753, 754, 761, 762, 764, 765, 770, 771, 772, 776, 777, 779, 780, 781, 784, 786, 788, 790, 792, 795, 796, 808, 809, 810, 811, 812, 814, 815, 817, 818], "work_group_size_hint": 591, "workabl": 749, "workaround": [591, 640, 686], "worked": [601, 607, 609, 664, 686, 690, 699, 704, 714, 715], "worker": [617, 670, 701, 717], "workflow": [593, 604, 683, 701, 714, 747, 762, 789], "workgroup": 591, "workgroup_size_hint": 591, "workgroupsizehint": 591, "working": [586, 594, 595, 602, 604, 608, 611, 612, 613, 624, 645, 646, 661, 662, 664, 671, 674, 680, 682, 683, 685, 687, 701, 705, 708, 709, 714, 715, 716, 717, 718, 719, 720, 724, 728, 731, 747, 749, 751, 760, 766, 772, 776, 783, 784, 786, 788, 789, 790, 811, 813, 816, 817], "workitem": 591, "worklist": [727, 746, 749], "workload": [591, 670, 685], "worksform": 601, "workshop": 724, "workspac": [668, 683], "world": [607, 609, 666, 670, 680, 683, 700, 714, 715, 722, 724, 728, 747, 762, 765, 767, 817], "worry": [661, 715, 728, 747, 809, 816], "wors": [597, 608, 710, 715], "worsen": 670, "worst": [698, 749, 764, 765, 770, 817], "worth": [586, 602, 603, 604, 611, 678, 686, 693, 701, 702, 708, 726, 749, 766, 789], "worthwhil": [701, 749], "would": [585, 586, 590, 591, 593, 594, 595, 597, 598, 599, 601, 602, 603, 605, 606, 607, 608, 610, 611, 612, 615, 617, 618, 624, 642, 645, 654, 661, 662, 665, 666, 667, 669, 670, 672, 673, 675, 676, 677, 678, 679, 680, 681, 685, 688, 693, 698, 701, 704, 707, 708, 709, 710, 714, 715, 716, 717, 719, 721, 722, 726, 727, 728, 730, 731, 733, 734, 735, 736, 740, 743, 744, 746, 747, 749, 750, 751, 752, 753, 760, 761, 762, 765, 766, 767, 768, 770, 771, 774, 775, 776, 777, 781, 782, 783, 785, 787, 788, 789, 790, 791, 792, 794, 796, 809, 810, 811, 812, 816, 817], "wouldn": [611, 710, 719, 814, 816], "wp": 700, "wpdre": 715, "wpdresolu": 715, "wrap": [586, 611, 632, 661, 670, 678, 681, 683, 688, 715, 720, 730, 731, 749, 771, 792, 794, 795, 809, 810, 818], "wrapcolumn": 792, "wrapp": [607, 611, 639, 662, 714, 720, 727, 731, 733, 746, 749, 771, 786], "wrapped": [598, 730, 731, 749, 765, 794], "wrapper": [731, 771, 786], "wrapping": [607, 611, 670, 681, 713, 715, 749, 766, 770, 792, 795], "wrf_": 752, "wrf_r": 752, "wrinkl": 713, "writ": [30, 223, 380, 493, 585, 586, 591, 594, 595, 598, 601, 602, 608, 612, 622, 623, 626, 628, 630, 632, 633, 637, 642, 645, 653, 654, 659, 660, 661, 662, 663, 664, 671, 672, 673, 674, 678, 681, 683, 685, 686, 687, 694, 713, 715, 717, 721, 722, 727, 729, 730, 731, 736, 740, 746, 749, 750, 753, 757, 762, 765, 767, 768, 775, 776, 777, 780, 781, 784, 786, 787, 788, 790, 792, 808, 811, 812, 815, 816], "writabl": [590, 641, 672, 675, 714, 736, 765], "write_escaped": 788, "write_only": 591, "writeabl": [20, 123, 212, 370, 482], "writeali": 727, "writealu": [632, 776], "writeattribut": 774, "writeback": 591, "writeonly": [591, 598, 715], "writer": [595, 629, 680, 684], "writes_depth": 591, "writes_uav": 591, "writesetcc": 632, "writethunk": 727, "writethunkorali": 727, "writetypet": 674, "writev": 786, "writing": [585, 586, 595, 611, 612, 614, 619, 624, 645, 646, 655, 656, 658, 660, 662, 682, 683, 686, 689, 690, 714, 715, 722, 727, 731, 740, 741, 747, 749, 755, 756, 762, 763, 766, 767, 771, 774, 775, 776, 777, 784, 789, 792, 811, 817, 819], "written": [585, 586, 591, 593, 594, 607, 608, 611, 624, 626, 628, 630, 632, 633, 640, 642, 646, 664, 670, 672, 675, 677, 683, 690, 709, 715, 717, 719, 721, 727, 728, 729, 736, 740, 741, 746, 747, 749, 751, 752, 753, 762, 765, 766, 767, 770, 771, 774, 776, 779, 781, 785, 786, 791, 792, 812, 813, 816, 817, 818], "wrong": [596, 601, 606, 609, 611, 662, 670, 676, 709, 761, 771, 811, 816], "wrot": [674, 681, 715, 815, 816], "wsl": 685, "wswitch": 611, "wu": 662, "www": [596, 606, 671, 707, 715, 751, 752, 753], "wzr": 715, "x": [17, 121, 210, 480, 586, 588, 589, 590, 591, 595, 597, 600, 608, 611, 612, 613, 622, 626, 631, 636, 641, 642, 643, 644, 649, 650, 651, 653, 654, 661, 662, 666, 667, 670, 673, 675, 676, 679, 680, 683, 688, 689, 693, 707, 710, 714, 715, 717, 721, 726, 729, 735, 741, 746, 749, 751, 765, 770, 774, 775, 776, 777, 783, 786, 788, 792, 794, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "x0": [675, 721], "x00": [759, 820], "x00argpath": 759, "x00function": 759, "x00key": 759, "x00path": 759, "x00remark": 759, "x00valu": 759, "x01": 820, "x03": 820, "x04": 820, "x08": 820, "x0abar": 717, "x0c": 820, "x1": [643, 675, 719, 746, 814], "x11": 749, "x15": [675, 715], "x16": [588, 675], "x2": [588, 715, 719, 746, 814], "x20": 721, "x21": 721, "x24": 820, "x3": [588, 719, 746, 814], "x30": 715, "x32": 612, "x4": [588, 719, 746, 814], "x44": 820, "x64": [612, 683, 685, 701], "x8": 588, "x83": 820, "x86": [593, 595, 605, 606, 612, 618, 620, 632, 640, 642, 643, 647, 660, 665, 671, 673, 674, 678, 683, 685, 688, 702, 714, 715, 716, 721, 736, 753, 764, 770, 774, 776, 777, 781, 783, 785, 786, 790, 792, 815], "x86_64": [605, 608, 612, 617, 632, 640, 655, 657, 668, 672, 678, 679, 700, 702, 703, 704, 705, 714, 715, 721, 757, 758, 765, 768, 770, 781, 789, 792, 815], "x86_amx": 598, "x86_fastcall": 608, "x86_fastcallcc": 598, "x86_fp80": [598, 715, 727], "x86_mmx": 598, "x86_ssecall": 786, "x86_stdcall": 608, "x86_stdcallcc": 598, "x86_thiscall": 608, "x86add_flag": 776, "x86call": 776, "x86callingconv": 786, "x86codeemitt": 786, "x86codegen": 671, "x86custombehaviour": 640, "x86dagtodagisel": 790, "x86framelowering": 608, "x86genregisterinfo": [608, 786], "x86ii": 786, "x86inst": [776, 777], "x86instrinfo": 786, "x86instrmmx": 786, "x86instrpostprocess": 640, "x86instrss": 786, "x86iseldagtodag": 790, "x86isellowering": 790, "x86registerinfo": [608, 786], "x86reloc": 786, "x86retflag": 776, "x86subtarget": 790, "x86targetasminfo": 786, "x86targetlowering": 790, "x86targetmachin": [608, 790], "x87": [688, 715], "x8b": 820, "x_": 777, "x_was_zexted": 689, "xab": 717, "xadd": 595, "xarch": 683, "xarg": 751, "xbas": 775, "xc3": 820, "xc4": 820, "xc7": 820, "xchg": [595, 715], "xclang": [703, 709, 710], "xcod": [606, 668, 683], "xcodebuild": 606, "xcoff": [715, 757], "xcor": [608, 683, 715, 753], "xctoolchain": 606, "xd": 776, "xdat": 736, "xdemangl": 626, "xderef": 585, "xdig": 612, "xe8": 820, "xec": 820, "xemac": 683, "xentry": 775, "xf7": 717, "xf8": 717, "xfail": [617, 781], "xgmi": 591, "xinmin": 755, "xl": 757, "xlc": 683, "xlen": 715, "xmax": 813, "xme": 645, "xmi": 645, "xmin": 813, "xml": 598, "xmm": [612, 715, 786], "xmm0": [612, 640, 768, 776, 777, 781], "xmm1": [632, 640, 776, 777], "xmm10": 777, "xmm11": 777, "xmm12": 777, "xmm13": 777, "xmm14": 777, "xmm15": 777, "xmm2": [632, 640, 715, 776, 777], "xmm3": [632, 640, 715, 776, 777], "xmm4": [640, 776, 777], "xmm5": [776, 777], "xmm6": [776, 777], "xmm7": [776, 777], "xmm8": 777, "xmm9": 777, "xmos": 663, "xnack": [590, 591], "xnack_mask": [20, 224, 226, 227, 229, 231, 234, 235, 236, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 317, 318, 322, 323, 328, 329, 330, 331, 332, 341, 342, 343, 344, 345, 347, 348, 381, 382, 383, 385, 386, 387, 389, 390, 392, 394, 397, 398, 399, 403, 404, 405, 406, 407, 410, 411, 412, 413, 421, 422, 423, 424, 425, 426, 427, 428, 429, 494, 495, 496, 498, 499, 500, 502, 503, 505, 507, 510, 511, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 533, 534, 535, 536, 537, 538, 539, 540, 541, 591], "xnack_mask_h": 590, "xnack_mask_lo": 590, "xnor": 786, "xnorrr": 786, "xor": [589, 590, 608, 665, 729, 746, 749, 776, 785, 786], "xor16rr": 608, "xor32rr": [608, 721], "xor64rr": 608, "xor8rr": 608, "xorl": 766, "xorr": 786, "xorrr": 786, "xp": 771, "xpac": 748, "xpass": 617, "xplus1": 776, "xray": 779, "xray_always_instru": [789, 790], "xray_basic_opt": 789, "xray_fdr_opt": 789, "xray_instr_map": [789, 790], "xray_log_finalized": 789, "xray_log_flushed": 789, "xray_log_interfac": 789, "xray_logfile_bas": 789, "xray_mod": [789, 790], "xray_never_instru": 789, "xray_opt": [789, 790], "xraylogimpl": 789, "xs1": 663, "xs2": 663, "xstep": 813, "xt": 591, "xtemp": 595, "xu": 755, "xuetian": 662, "xvjf": 683, "xword": 786, "xx": [596, 715], "xxx": [611, 612, 774, 775, 779, 780, 786], "xxxasmprint": 786, "xxxbegin": 749, "xxxbranchselector": 786, "xxxcallingconv": 786, "xxxcodeemitt": 786, "xxxend": 749, "xxxgenasmwrit": 786, "xxxgencallingconv": 786, "xxxgencodeemitt": 786, "xxxgendagisel": 786, "xxxgeninstrinfo": 786, "xxxgenregisterinfo": 786, "xxxinstrdescriptor": 786, "xxxinstrformat": 786, "xxxinstrinfo": [712, 786], "xxxiseldagtodag": 786, "xxxisellowering": 786, "xxxiterator": 749, "xxxjitinfo": 786, "xxxkind": 708, "xxxlai": 731, "xxxregisterinfo": 786, "xxxreloc": 786, "xxxschedul": 786, "xxxsubtarget": 786, "xxxtargetasminfo": 786, "xxxtargetlowering": 786, "xxxtargetmachin": 786, "xxxtrait": 792, "xxxxxx": [709, 789], "xy": 588, "xyz": [588, 618, 620, 683, 712], "xyzw": 588, "xyzzy": 611, "xz": 673, "xzr": 715, "y_was_zexted": 689, "yaml": [591, 615, 632, 645, 721, 756, 789, 790, 820], "yaml2obj": 757, "yaxxz": 673, "ye": [588, 657, 670, 676, 681, 683, 717, 722, 727, 746, 764, 767], "year": [603, 670, 762], "yearly": 763, "yet": [585, 586, 595, 608, 610, 611, 612, 625, 646, 661, 665, 670, 673, 680, 689, 701, 704, 713, 714, 715, 720, 727, 728, 731, 732, 746, 749, 752, 762, 766, 770, 772, 786, 788, 789, 796, 810, 812, 813], "yield": [598, 617, 661, 665, 681, 715, 746, 749, 770, 780, 790, 795], "yielded": 665, "yielding": 715, "yin": 792, "ymax": 813, "ymin": 813, "ymm": 715, "ymm0": 768, "yosefk": 611, "you": [593, 594, 595, 596, 598, 601, 602, 604, 606, 607, 608, 609, 610, 611, 612, 613, 616, 617, 620, 622, 626, 630, 631, 632, 640, 645, 655, 659, 661, 662, 664, 666, 668, 670, 671, 672, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 691, 692, 693, 694, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 717, 719, 721, 724, 726, 727, 728, 729, 730, 731, 732, 733, 736, 740, 744, 745, 746, 747, 749, 750, 751, 753, 757, 758, 761, 762, 763, 765, 766, 767, 770, 771, 774, 775, 776, 777, 779, 780, 781, 784, 786, 787, 788, 789, 790, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "young": [640, 749], "your": [593, 594, 595, 596, 601, 602, 604, 608, 609, 610, 611, 612, 615, 622, 626, 632, 640, 645, 661, 662, 664, 670, 672, 673, 674, 676, 678, 679, 680, 681, 682, 683, 685, 686, 687, 692, 699, 700, 702, 704, 705, 706, 707, 709, 710, 714, 715, 716, 717, 719, 722, 725, 726, 729, 731, 740, 745, 747, 750, 751, 756, 758, 759, 760, 761, 762, 767, 770, 773, 775, 776, 777, 778, 779, 780, 781, 784, 786, 787, 790, 792, 794, 810, 811, 812, 813, 814, 815, 816, 817, 818], "yourallocator": 700, "yourregex": 612, "yourself": [601, 606, 610, 664, 670, 674, 683, 715, 728, 747, 749], "yout": 792, "youtu": 610, "yplus1": 776, "ystep": 813, "yy": 729, "yypvr": 767, "z": [17, 78, 121, 171, 210, 266, 480, 542, 589, 591, 598, 608, 612, 615, 642, 643, 654, 663, 679, 689, 707, 715, 721, 729, 746, 748, 765, 776, 777, 808, 809, 810, 811, 812, 813, 814, 815, 816], "z0": [590, 591, 612, 715, 808, 809, 810, 811, 812, 813, 814, 815, 816], "z2": 813, "z3": 606, "z7": [715, 736, 765], "z_": [590, 612], "z_was_sexted": 689, "za": [590, 591, 612, 715, 721, 808, 809, 810, 811, 812, 813, 814, 815, 816], "zachary": 753, "zak": 755, "zb": 757, "zba": 757, "zbb": 757, "zbc": 757, "zbproposedc": 757, "zc": 715, "zchf": 706, "zero": [585, 586, 587, 589, 590, 591, 597, 598, 608, 611, 612, 613, 617, 618, 620, 622, 623, 624, 625, 626, 627, 629, 630, 633, 634, 636, 637, 640, 641, 642, 643, 644, 646, 649, 650, 651, 653, 654, 655, 657, 659, 660, 661, 662, 665, 666, 675, 678, 680, 681, 689, 692, 694, 714, 715, 716, 717, 720, 721, 729, 731, 736, 746, 749, 755, 761, 765, 766, 768, 770, 776, 781, 783, 785, 786, 791, 809, 812, 817], "zero_content": 761, "zeroargfp": 776, "zerodirect": 786, "zeroed": [590, 761], "zeroext": [598, 715], "zeroing": 766, "zeroinitializ": 715, "zeroormor": 661, "zeros": [589, 590, 612, 618, 689, 692, 715], "zeroth": 776, "zext": [710, 711], "zfh": 757, "zfhmin": 757, "zhou": 755, "zi": [736, 765], "zip": [683, 685, 751], "zipped": 751, "zippped": 751, "zlib": [606, 642, 666, 683], "zlib1g": 706, "zon": [715, 766], "zoo": 726, "zorg": 701, "zy": 715, "zz": 715, "\u00e9gal": [122, 336], "\u00eatre": [122, 123, 336], "\u03c6": [689, 715]}, "titles": ["Syntax of Core GFX10 Instructions", "Syntaxe des instructions gfx1011 et gfx1012", "Syntaxe des instructions GFX7", "Syntaxe des instructions GFX8", "Syntaxe des instructions GFX9", "Syntax of gfx900, gfx902 and gfx909 Instructions", "Syntaxe des instructions gfx904", "Syntaxe des instructions gfx906", "Syntaxe des instructions gfx908", "Syntaxe des instructions gfx90a", "src", "src", "src", "src", "Type Deviation", "vdst", "vsrc", "attr", "dst", "FX Operand", "hwreg", "imm16", "imm16", "imm16", "label", "m", "m", "msg", "opt", "param", "probe", "saddr", "saddr", "sbase", "sbase", "sbase", "sdata", "sdata", "sdata", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "simm32", "simm32", "simm32", "soffset", "soffset", "soffset", "src", "src", "src", "src", "src", "src", "src", "src", "src", "srsrc", "srsrc", "ssamp", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type Deviation", "vaddr", "vaddr", "vaddr", "vaddr", "vaddr", "vaddr", "vcc", "vdata", "vdata0", "vdata0", "vdata1", "vdata1", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "attr", "dst", "hwreg", "imm16", "imm16", "imm16", "label", "m", "msg", "opt", "param", "sbase", "sbase", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "simm32", "simm32", "soffset", "soffset", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "srsrc", "srsrc", "ssamp", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type Deviation", "vaddr", "vaddr", "vaddr", "vaddr", "vcc", "vdata", "vdata0", "vdata0", "vdata1", "vdata1", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "attr", "dst", "hwreg", "imask", "imm16", "imm16", "imm16", "label", "m", "m", "msg", "opt", "param", "probe", "sbase", "sbase", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "simm32", "simm32", "simm32", "soffset", "soffset", "soffset", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "srsrc", "srsrc", "ssamp", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type Deviation", "vaddr", "vaddr", "vaddr", "vaddr", "vcc", "vdata", "vdata0", "vdata0", "vdata1", "vdata1", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "FX Operand", "m", "src", "src", "vdst", "FX Operand", "m", "src", "src", "vdst", "FX Operand", "m", "m", "src", "src", "src", "src", "src", "Type Deviation", "vdst", "vsrc", "dst", "FX Operand", "m", "m", "opt", "saddr", "soffset", "src", "src", "src", "src", "src", "src", "srsrc", "Type Deviation", "vaddr", "vaddr", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "vsrc", "vsrc", "vsrc", "dst", "FX Operand", "hwreg", "imask", "imm16", "imm16", "imm16", "label", "m", "m", "msg", "opt", "probe", "saddr", "saddr", "sbase", "sbase", "sbase", "sdata", "sdata", "sdata", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "simm32", "simm32", "simm32", "soffset", "soffset", "soffset", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "srsrc", "srsrc", "ssamp", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "Type Deviation", "vaddr", "vaddr", "vaddr", "vaddr", "vaddr", "vaddr", "vcc", "vdata", "vdata0", "vdata0", "vdata1", "vdata1", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "attr", "dst", "hwreg", "imask", "imm16", "imm16", "imm16", "label", "m", "m", "msg", "opt", "param", "probe", "saddr", "saddr", "sbase", "sbase", "sbase", "sdata", "sdata", "sdata", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "simm32", "simm32", "simm32", "soffset", "soffset", "soffset", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "srsrc", "srsrc", "ssamp", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type Deviation", "vaddr", "vaddr", "vaddr", "vaddr", "vaddr", "vaddr", "vcc", "vdata", "vdata0", "vdata0", "vdata1", "vdata1", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "Allow Location Descriptions on the DWARF Expression Stack <!-- omit in toc -->", "DWARF Extensions For Heterogeneous Debugging", "AMDGPU Instructions Notation", "AMDGPU Instruction Syntax", "Syntax of AMDGPU Instruction Modifiers", "Syntax of AMDGPU Instruction Operands", "User Guide for AMDGPU Backend", "How To Add A Constrained Floating-Point Intrinsic", "Advanced Build Configurations", "LLVM Alias Analysis Infrastructure", "LLVM Atomic Instructions and Concurrency Guide", "Benchmarking tips", "Using ARM NEON instructions in big endian mode", "LLVM Bitcode File Format", "LLVM Block Frequency Terminology", "LLVM Branch Weight Metadata", "LLVM Bug Life Cycle", "LLVM bugpoint tool: design and usage", "Bugpoint Redesign", "Building a Distribution of LLVM", "Control Flow Verification Tool Design Document", "Building LLVM with CMake", "CMake Primer", "The LLVM Target-Independent Code Generator", "LLVM Community Code of Conduct", "LLVM Code-Review Policy and Practices", "LLVM Coding Standards", "FileCheck - Flexible pattern matching file verifier", "bugpoint - automatic test case reduction tool", "clang-tblgen - Description to C++ Code for Clang", "dsymutil - manipulate archived DWARF debug symbol files", "LLVM Command Guide", "lit - LLVM Integrated Tester", "llc - LLVM static compiler", "lldb-tblgen - Description to C++ Code for LLDB", "lli - directly execute programs from LLVM bitcode", "llvm-addr2line - a drop-in replacement for addr2line", "llvm-ar - LLVM archiver", "llvm-as - LLVM assembler", "llvm-bcanalyzer - LLVM bitcode analyzer", "llvm-config - Print LLVM compilation options", "llvm-cov - emit coverage information", "llvm-cxxfilt - LLVM symbol name demangler", "llvm-cxxmap - Mangled name remapping tool", "llvm-diff - LLVM structural \u201cdiff\u201d", "llvm-dis - LLVM disassembler", "llvm-dwarfdump - dump and verify DWARF debug information", "llvm-exegesis - LLVM Machine Instruction Benchmark", "llvm-extract - extract a function from an LLVM module", "llvm-install-name-tool - LLVM tool for manipulating install-names and rpaths", "llvm-lib - LLVM lib.exe compatible library tool", "llvm-libtool-darwin - LLVM tool for creating libraries for Darwin", "llvm-link - LLVM bitcode linker", "llvm-lipo - LLVM tool for manipulating universal binaries", "llvm-locstats - calculate statistics on DWARF debug location", "llvm-mca - LLVM Machine Code Analyzer", "llvm-nm - list LLVM bitcode and object file\u2019s symbol table", "llvm-objcopy - object copying and editing tool", "llvm-objdump - LLVM\u2019s object file dumper", "llvm-otool - Mach-O dumping tool", "llvm-pdbutil - PDB File forensics and diagnostics", "llvm-profdata - Profile data tool", "llvm-profgen - LLVM SPGO profile generation tool", "llvm-ranlib - generates an archive index", "llvm-readelf - GNU-style LLVM Object Reader", "llvm-readobj - LLVM Object Reader", "llvm-size - print size information", "llvm-stress - generate random .ll files", "llvm-strings - print strings", "llvm-strip - object stripping tool", "llvm-symbolizer - convert addresses into source code locations", "llvm-tblgen - Target Description to C++ Code for LLVM", "llvm-tli-checker - TargetLibraryInfo vs library checker", "mlir-tblgen - Description to C++ Code for MLIR", "opt - LLVM optimizer", "tblgen - Description to C++ Code", "CommandLine 2.0 Library Manual", "Compiling CUDA with clang", "Architecture &amp; Platform Information for Compiler Writers", "Contributing to LLVM", "Coroutines in LLVM", "LLVM Code Coverage Mapping Format", "LLVM Cycle Terminology", "Debugging JIT-ed Code", "Dependence Graphs in LLVM", "LLVM Developer Policy", "Discourse Migration Guide", "A guide to Dockerfiles for building LLVM", "Exception Handling in LLVM", "Extending LLVM: Adding instructions, intrinsics, types, etc.", "LLVM Extensions", "Frequently Asked Questions (FAQ)", "FaultMaps and implicit checks", "Performance Tips for Frontend Authors", "Fuzzing LLVM libraries and tools", "Garbage Collection with LLVM", "The Often Misunderstood GEP Instruction", "Getting Involved", "Getting Started with the LLVM System", "Getting Started/Tutorials", "Getting Started with the LLVM System using Microsoft Visual Studio", "Bisecting LLVM code", "Policies on git repositories", "Generic Machine IR", "Generic Opcodes", "IRTranslator", "InstructionSelect", "Known Bits Analysis", "Legalizer", "Core Pipeline", "Porting GlobalISel to A New Target", "RegBankSelect", "Resources", "Global Instruction Selection", "The LLVM gold plugin", "GWP-ASan", "How To Add Your Build Configuration To LLVM Buildbot Infrastructure", "How To Build On ARM", "How to build Windows Itanium applications.", "How To Build Clang and LLVM with Profile-Guided Optimizations", "How to Cross Compile Compiler-rt Builtins For Arm", "How To Cross-Compile Clang/LLVM using Clang/LLVM", "How To Release LLVM To The Public", "How to set up LLVM-style RTTI for your class hierarchy", "How to submit an LLVM bug report", "How to Update Debug Info: A Guide for LLVM Pass Authors", "How To Use Attributes", "How To Use Instruction Mappings", "Design and Usage of the InAlloca Attribute", "JITLink and ORC\u2019s ObjectLinkingLayer", "LLVM Language Reference Manual", "The LLVM Lexicon", "libFuzzer \u2013 a library for coverage-guided fuzz testing.", "LLVM Link Time Optimization: Design and Implementation", "LLVM Loop Terminology (and Canonical Forms)", "MCJIT Design and Implementation", "Machine IR (MIR) Format Reference Manual", "Markdown Quickstart Template", "LLVM\u2019s Optional Rich Disassembly Output", "How to start LLVM Social in your town", "MemTagSanitizer", "MemorySSA", "MergeFunctions pass, how it works", "MyFirstTypoFix", "User Guide for NVPTX Back-end", "Using the New Pass Manager", "ORC Design and Implementation", "Opaque Pointers", "Using -opt-bisect-limit to debug optimization errors", "CodeView Symbol Records", "CodeView Type Records", "The PDB DBI (Debug Info) Stream", "The PDB Global Symbol Stream", "The PDB Serialized Hash Table Format", "The Module Information Stream", "The MSF File Format", "The PDB Info Stream (aka the PDB Stream)", "The PDB Public Symbol Stream", "The PDB TPI and IPI Streams", "The PDB File Format", "Advice on Packaging LLVM", "LLVM\u2019s Analysis and Transform Passes", "Code Reviews with Phabricator", "Pointer Authentication", "LLVM Programmer\u2019s Manual", "Creating an LLVM Project", "Moving LLVM Projects to GitHub", "Test-Suite Extensions", "Variable Names Plan", "Vector Predication Roadmap", "Vectorization Plan", "Reference", "LLVM  Release Notes", "How To Validate a New Release", "Remarks", "Reporting Guide", "Scudo Hardened Allocator", "LLVM Security Group", "LLVM Security Group Transparency Reports", "Segmented Stacks in LLVM", "Source Level Debugging with LLVM", "Speculative Load Hardening", "Sphinx Quickstart Template", "Stack maps and patch points in LLVM", "Stack Safety Analysis", "Garbage Collection Safepoints in LLVM", "Support Library", "LLVM Community Support Policy", "System Library", "TableGen BackEnds", "<span class=\"sectnum\">1 </span>TableGen Backend Developer\u2019s Guide", "<span class=\"sectnum\">1 </span>TableGen Programmer\u2019s Reference", "TableGen Overview", "TableGen Fundamentals", "test-suite Guide", "test-suite Makefile Guide (deprecated)", "LLVM Testing Infrastructure Guide", "Code Transformation Metadata", "Type Metadata", "User Guides", "Auto-Vectorization in LLVM", "Writing an LLVM Backend", "Writing an LLVM Pass", "Writing an LLVM Pass", "XRay Instrumentation", "Debugging with XRay", "XRay Flight Data Recorder Trace Format", "YAML I/O", "\u00c0 propos", "<span class=\"section-number\">1. </span>Building a JIT: Starting out with KaleidoscopeJIT", "<span class=\"section-number\">2. </span>Building a JIT: Adding Optimizations \u2013 An introduction to ORC Layers", "<span class=\"section-number\">3. </span>Building a JIT: Per-function Lazy Compilation", "<span class=\"section-number\">4. </span>Building a JIT: Extreme Laziness - Using LazyReexports to JIT from ASTs", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "<span class=\"section-number\">1. </span>Kaleidoscope: Kaleidoscope Introduction and the Lexer", "<span class=\"section-number\">2. </span>Kaleidoscope: Implementing a Parser and AST", "<span class=\"section-number\">3. </span>Kaleidoscope: Code generation to LLVM IR", "<span class=\"section-number\">4. </span>Kaleidoscope: Adding JIT and Optimizer Support", "<span class=\"section-number\">5. </span>Kaleidoscope: Extending the Language: Control Flow", "<span class=\"section-number\">6. </span>Kaleidoscope: Extending the Language: User-defined Operators", "<span class=\"section-number\">7. </span>Kaleidoscope: Extending the Language: Mutable Variables", "<span class=\"section-number\">8. </span>Kaleidoscope: Compiling to Object Code", "<span class=\"section-number\">9. </span>Kaleidoscope: Adding Debug Information", "<span class=\"section-number\">10. </span>Kaleidoscope: Conclusion and other useful LLVM tidbits", "My First Language Frontend with LLVM Tutorial", "LLVM Tutorial: Table of Contents", "yaml2obj"], "titleterms": {"0": [598, 661, 681], "000": 607, "0x0006": 734, "0x000a": 735, "0x000e": 735, "0x0014": 735, "0x1001": 735, "0x1002": 735, "0x1008": 735, "0x1009": 735, "0x1012": 734, "0x1101": 734, "0x1102": 734, "0x1103": 734, "0x1105": 734, "0x1106": 734, "0x1107": 734, "0x1108": 734, "0x110b": 734, "0x110c": 734, "0x110e": 734, "0x110f": 734, "0x1110": 734, "0x1111": 734, "0x1112": 734, "0x1113": 734, "0x1116": 734, "0x111c": 734, "0x111d": 734, "0x1124": 734, "0x1125": 734, "0x1127": 734, "0x112c": 734, "0x112d": 734, "0x1136": 734, "0x1137": 734, "0x1138": 734, "0x1139": 734, "0x113a": 734, "0x113c": 734, "0x113d": 734, "0x113e": 734, "0x113f": 734, "0x1140": 734, "0x1141": 734, "0x1142": 734, "0x1143": 734, "0x1144": 734, "0x1145": 734, "0x1146": 734, "0x1147": 734, "0x114c": 734, "0x114d": 734, "0x114e": 734, "0x114f": 734, "0x1153": 734, "0x1155": 734, "0x1156": 734, "0x115a": 734, "0x115b": 734, "0x115e": 734, "0x1167": 734, "0x1168": 734, "0x1201": 735, "0x1203": 735, "0x1205": 735, "0x1206": 735, "0x1400": 735, "0x1401": 735, "0x1402": 735, "0x1404": 735, "0x1409": 735, "0x1502": 735, "0x1503": 735, "0x1504": 735, "0x1505": 735, "0x1506": 735, "0x1507": 735, "0x1509": 735, "0x150d": 735, "0x150e": 735, "0x150f": 735, "0x1510": 735, "0x1511": 735, "0x1515": 735, "0x1519": 735, "0x151a": 735, "0x151d": 735, "0x1601": 735, "0x1602": 735, "0x1603": 735, "0x1604": 735, "0x1605": 735, "0x1606": 735, "0x1607": 735, "0xf0": 735, "1": [585, 586, 632, 639, 681, 718, 751, 754, 766, 775, 776, 794], "10": [586, 607, 775, 776], "11": [586, 775, 776], "12": [586, 776], "13": 586, "14": [585, 586, 757], "15": 586, "16": [585, 586], "17": 586, "18": 586, "19": 586, "2": [585, 586, 632, 639, 661, 718, 751, 752, 754, 766, 775, 776, 795, 809], "20": 586, "2017": 752, "2021": 763, "22": 586, "24": 586, "3": [585, 586, 593, 632, 639, 718, 748, 751, 754, 775, 776, 796, 810], "32": [585, 586, 591, 618], "4": [585, 586, 718, 751, 752, 754, 775, 776, 797, 811], "5": [585, 586, 754, 775, 776, 812], "6": [585, 586, 598, 775, 776, 813], "64": [585, 586, 591, 766], "7": [585, 586, 775, 776, 814], "8": [585, 586, 775, 776, 815], "9": [586, 775, 776, 816], "C": [586, 597, 606, 611, 614, 619, 656, 658, 660, 663, 670, 676, 683, 715, 716, 723, 745, 749, 752, 757, 759, 765, 771, 776, 783, 789], "D": [716, 783], "DS": [0, 2, 3, 4, 9, 589, 591], "L": 716, "M": [705, 716], "Me": 730, "N": [716, 727], "On": [702, 738, 751, 770], "S": 716, "SEE": [613, 615, 617, 618, 620, 621, 623, 624, 627, 630, 631, 633, 634, 636, 639, 641, 642, 643, 644, 648, 649, 650, 654, 655], "See": 611, "T": 716, "__atomic_": 595, "__device__": 662, "__host__": 662, "__nvvm_reflect": 729, "__sync_": 595, "_global__i_": 676, "a": [585, 586, 590, 592, 593, 594, 599, 604, 608, 610, 611, 621, 632, 633, 661, 662, 664, 670, 671, 672, 674, 676, 680, 681, 683, 695, 701, 703, 705, 708, 710, 714, 716, 717, 728, 729, 730, 731, 741, 746, 747, 748, 749, 751, 752, 758, 759, 760, 762, 766, 775, 776, 783, 786, 787, 788, 794, 795, 796, 797, 809, 811, 814, 815, 816, 819], "a16": 589, "aa": [594, 746], "aapc": 597, "aarch64": [663, 705, 748, 757], "ab": [589, 715], "abandoning": 747, "abbrevi": 598, "abbreviated": 598, "abi": [591, 608, 663, 673, 703, 749, 766], "abid": 589, "able": 727, "about": [664, 676, 751], "abov": 591, "absolut": [590, 661, 731], "absolute_symbol": 715, "abstract": [598, 678, 680, 715, 752, 755, 770, 771, 776, 809], "accelerated": [586, 591], "accelerator": 765, "accept": 610, "accepted": 610, "accepting": [728, 762], "access": [586, 591, 608, 670, 687, 715, 727, 728, 751, 762], "accessing": 747, "account": 671, "accumulating": 766, "accurat": 715, "achieving": [601, 749], "acknowledg": 610, "acquir": 595, "acquirereleas": 595, "acronym": 753, "across": [585, 686], "action": 693, "activ": 715, "actively": 601, "acyclic": 776, "adce": [594, 746], "add": [586, 592, 681, 701, 715, 731], "addescapingus": 594, "adding": [661, 670, 674, 678, 730, 733, 749, 795, 811, 816], "addit": 591, "additional": [591, 617, 756, 757, 776, 784], "addpreserved": 788, "addr": [715, 765], "addr2lin": 621, "addr64": 589, "addrequired": 788, "addrequiredtransit": 788, "address": [585, 586, 591, 608, 655, 671, 675, 681, 715, 720, 729, 766, 783], "addressing": [608, 681, 715, 766], "addressofreturnaddress": 715, "addrspacecast": 715, "adjust": 715, "adjusting": 814, "admin": 671, "administr": 707, "adt": 749, "advanced": [593, 606, 666, 717, 749, 819], "advantag": [669, 671, 753], "advertis": 724, "advic": [602, 745], "advisory": 760, "afl": 717, "after": [591, 610, 611, 700, 718, 751, 760, 766], "again": [728, 766], "aggregat": [678, 690, 715, 746], "aggress": 746, "ahead": 816, "aid": 749, "aim": 610, "aka": 741, "algorithm": [608, 662, 714, 752], "ali": [594, 608, 661, 681, 715, 746, 785], "alias": [608, 661, 715, 727, 731], "aliasanalys": 594, "aliasing": [678, 715], "aliassettrack": 594, "align": 665, "aligned": 585, "alignment": [597, 598, 678, 740], "all": [610, 676, 746, 751, 815], "alloc": [608, 665, 678, 700, 715, 761, 764, 765], "allocated": 749, "allocating": 764, "allocator": [608, 700, 761], "allow": [585, 586], "allowed": 661, "along": [727, 770], "also": [611, 613, 615, 617, 618, 620, 621, 623, 624, 627, 630, 631, 633, 634, 636, 639, 641, 642, 643, 644, 648, 649, 650, 654, 655], "altern": [661, 685, 705, 718, 766], "alternat": 770, "alway": [681, 746], "always_inlin": 746, "ambiguous": 782, "amd_kernel_code_t": 591, "amdgcn": 591, "amdgcn_target": 591, "amdgpu": [587, 588, 589, 590, 591, 608, 663, 757], "amdgpu_hsa_kernel": 591, "amdgpu_metadat": 591, "amdhsa": 591, "amdhsa_kernel": 591, "amdpal": 591, "an": [610, 633, 648, 661, 670, 671, 681, 683, 709, 710, 749, 750, 751, 766, 776, 786, 787, 788, 795], "analys": [594, 603, 608, 632, 640, 681, 692, 730, 746, 769, 776, 781, 785, 788, 789], "analysisusag": 788, "analyz": [624, 640], "analyzing": 779, "anchor": 611, "and": [5, 585, 586, 588, 590, 591, 592, 594, 595, 597, 599, 602, 604, 606, 607, 608, 610, 611, 631, 634, 640, 641, 642, 643, 645, 650, 654, 661, 662, 663, 665, 667, 670, 674, 676, 677, 678, 679, 680, 681, 682, 683, 689, 693, 698, 704, 705, 706, 708, 713, 714, 715, 718, 719, 720, 722, 726, 727, 728, 730, 731, 738, 740, 743, 746, 749, 751, 755, 756, 762, 765, 766, 768, 770, 775, 776, 779, 781, 782, 784, 786, 788, 791, 808, 809, 810, 811, 817], "annot": [715, 723], "announc": 707, "anonymous": [611, 746], "anoth": [671, 749], "any": [586, 717], "aper\u00e7u": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 745, 793], "api": [591, 608, 670, 676, 691, 693, 696, 723, 751, 756, 757, 759, 766, 794], "apis": [726, 731, 749], "appealing": 760, "appended": 591, "appendix": 776, "apple": 593, "appliqu": [703, 752, 789], "approach": [718, 766], "aql": 591, "ar": 622, "arc": 715, "arch": 591, "architectur": [591, 663, 705, 768, 770], "archiv": [622, 648, 671, 683], "archived": 615, "are": [608, 610, 665, 671, 676, 715, 776], "arg": 715, "argpromot": [594, 746], "argument": [591, 607, 661, 665, 689, 715, 746, 748, 749], "arithmetic": [585, 586, 608, 681, 715], "arm": [597, 663, 675, 702, 705, 706, 757], "arm64": 675, "armneon": 774, "armneonsem": 774, "armneontest": 774, "armv6": 705, "armv7": 705, "armv7e": 705, "armv8": 748, "array": [585, 666, 675, 681, 715, 749], "arrayref": 749, "articl": 767, "asan": 700, "ashr": 715, "asked": 676, "asm": [608, 673, 715], "asmmatch": 774, "asmwrit": 774, "assembl": [591, 608, 623, 679, 715], "assembling": 703, "assembly": [597, 608, 675, 680, 715, 786], "assert": [611, 776, 781], "assign": 746, "assignment": 814, "associat": 727, "associated": 715, "assum": 715, "ast": [797, 809, 812], "async": [665, 715], "at": [671, 746, 751], "atomic": [595, 715, 746], "atomicrmw": 715, "attached": 715, "attack": 766, "attent": 665, "attr": [17, 121, 210, 480, 746], "attrbuild": 711, "attrdoc": 774, "attribu": 670, "attribut": [586, 591, 661, 662, 711, 713, 715, 721, 746, 765, 789, 790], "attributelist": 711, "audienc": 786, "augment": 586, "auth": 748, "authent": [715, 748], "author": [678, 710], "authoring": 767, "auto": [611, 785], "automatic": [602, 613, 671, 715, 766], "automatically": 710, "autoreleas": 715, "autoreleasepoolpop": 715, "autoreleasepoolpush": 715, "autoreleasereturnvalu": 715, "autotooled": 699, "avail": [594, 679, 680], "availability": 714, "avoid": [611, 678], "avoiding": 665, "avr": 757, "awar": [671, 708], "b": [585, 586, 716, 776, 783], "back": [640, 671, 676, 729], "backend": [591, 608, 681, 709, 714, 757, 774, 775, 777, 786], "background": [603, 605, 668, 673, 708, 765], "backward": 670, "baked": 770, "bang": [753, 776], "bank": 688, "bank_mask": 589, "barri": [680, 729], "barrier0": 729, "bas": [586, 708, 715, 770], "based": [608, 611, 662, 676, 681, 746, 749, 776], "basic": [594, 598, 606, 616, 646, 672, 675, 678, 686, 708, 714, 715, 721, 727, 746, 749, 751, 777, 786, 787, 788, 789, 794, 809], "basicblock": [727, 749], "basiccg": 746, "bb": 746, "bcanalyz": 624, "be": [586, 594, 610, 661, 681, 708, 722, 727, 766], "befor": [611, 671, 751], "begin": [665, 715], "begincatch": 673, "behavior": 594, "behaviour": [640, 675], "behind": 765, "being": 610, "benchmark": [632, 704, 752, 779], "benchmarking": [596, 632, 752], "berkeley": 608, "best": [678, 701], "between": [604, 662, 681, 718, 749, 788], "bewar": 611, "bi": 599, "big": [597, 753], "bigg": 664, "binar": [638, 676], "binary": [590, 642, 707, 715, 789, 809, 813], "binding": [683, 757], "binutil": 616, "bisect": [686, 733], "bisecting": [683, 686, 751], "bit": [585, 586, 591, 598, 661, 692, 715, 738, 749, 766], "bitcast": 715, "bitcod": [598, 620, 624, 637, 641, 676, 718], "bitconvert": 597, "bitin": 775, "bitrevers": 715, "bitsin": 775, "bitsrecty": 775, "bitstream": [598, 759], "bitvalu": 792, "bitvector": 749, "bitwis": [689, 715], "blam": 753, "blend": 748, "blgp": 589, "blitz": 752, "block": [585, 586, 598, 599, 610, 611, 612, 640, 675, 715, 721, 740, 746, 749, 766, 767, 792], "blockinfo": 598, "bod": [611, 746, 776], "body": 776, "bolt": 757, "boolean": 661, "bootstrap": 593, "both": [683, 734], "bottleneck": 640, "bound": [681, 766], "bound_ctrl": 589, "boundar": 740, "bpf_ab": 608, "bpf_ind": 608, "br": 715, "brac": 611, "braced": 611, "branch": [599, 600, 707, 746, 751, 766, 786], "branch_weight": 715, "branching": 751, "branchinst": 600, "break": [746, 766], "breaking": 749, "breakpoint": 788, "bridg": 751, "bswap": 715, "buff": [591, 700], "bug": [601, 629, 634, 636, 638, 641, 642, 643, 644, 651, 653, 654, 664, 679, 708, 709, 758, 770], "bugpoint": [602, 603, 613, 746], "build": [593, 672, 679, 685, 699, 701, 702, 703, 704, 705, 707, 717, 726, 728, 747, 784, 787, 788], "buildbot": 701, "building": [592, 604, 606, 672, 676, 679, 683, 702, 703, 704, 705, 706, 728, 749, 750, 751, 757, 788, 790, 794, 795, 796, 797, 819], "buildmaster": 701, "built": [600, 607, 608, 680, 776, 792], "builtin": [661, 705], "bundl": [608, 715], "bundled": [591, 721], "but": [705, 717], "by": [586, 591, 665, 671, 676, 681, 728, 746], "bypass": 766, "byt": [585, 645], "c99": 675, "cach": [606, 704, 705], "calculat": 639, "call": [585, 586, 591, 594, 608, 611, 675, 676, 682, 690, 713, 715, 746, 749, 766, 785], "callabl": 749, "callargu": 791, "callback": 715, "callbr": 715, "calle": [713, 715], "callgraph": [746, 788], "callgraphsccpass": 788, "calling": [585, 586, 608, 676, 713, 715, 766, 786], "callingconv": 774, "callinst": 600, "callsit": [673, 746, 749], "can": [610, 671, 676, 678, 681, 734, 766], "candidat": 707, "canonical": 719, "canonicaliz": [715, 746], "cantfail": 749, "captur": 715, "cas": [603, 613, 670, 731, 789], "cast": [681, 749], "catch": 673, "catchpad": 715, "catchret": 715, "catchswitch": 715, "categor": [661, 671, 734, 735], "caus": 603, "cbsz": 589, "ceil": 715, "cfa": [585, 586], "cfg": [600, 746], "cfi": [585, 586, 591, 715], "cfiindex": 721, "chain": [683, 749], "chaining": 594, "chang": [585, 586, 591, 670, 683, 728, 747, 749, 751, 757, 762, 765, 810], "chapt": [794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "character": [598, 612], "check": [612, 657, 677, 746, 749, 766, 776, 785], "checked": 715, "checking": 766, "checkout": [683, 728, 751], "checksum": 586, "choos": 672, "choosing": [762, 815], "chrom": 790, "ci": 670, "cl": 661, "clamp": 589, "clang": [591, 593, 614, 660, 662, 679, 683, 702, 704, 705, 706, 761, 774, 784], "clangattrcl": 774, "clangattrdump": 774, "clangattrimpl": 774, "clangattrlist": 774, "clangattrparsedattrimpl": 774, "clangattrparsedattrkind": 774, "clangattrparsedattrlist": 774, "clangattrparserstringswitch": 774, "clangattrpchread": 774, "clangattrpchwrit": 774, "clangattrspelling": 774, "clangattrspellinglistindex": 774, "clangattrtemplateinstantiat": 774, "clangattrvisitor": 774, "clangcommentcommandinfo": 774, "clangcommentcommandlist": 774, "clangcommenthtmlnamedcharacterreferent": 774, "clangcommenthtmltag": 774, "clangcommenthtmltagspropert": 774, "clangcommentnod": 774, "clangdeclnod": 774, "clangdiaggroup": 774, "clangdiagsdef": 774, "clangdiagsindexnam": 774, "clangsachecker": 774, "clangstmtnod": 774, "class": [585, 586, 591, 594, 608, 611, 661, 662, 708, 712, 715, 749, 775, 776, 786, 788], "classof": 708, "cleanup": [673, 713], "cleanuppad": 715, "cleanupret": 715, "clear_cach": 715, "client": 594, "clobb": 715, "clobber": 726, "clobbered": 608, "clon": 751, "closed": [667, 719, 746], "closing": [601, 810], "cmak": [604, 606, 607, 683, 703, 704, 705, 706, 779], "cmath": 662, "cmp": 717, "cmpconst": 727, "cmpgep": 727, "cmpoper": 727, "cmptyp": 727, "cmpvalu": 727, "cmpxchg": 715, "coalescingbitvector": 749, "cod": [591, 602, 608, 609, 610, 611, 614, 619, 620, 632, 640, 655, 656, 658, 660, 662, 666, 668, 670, 673, 676, 680, 683, 686, 709, 715, 720, 721, 728, 741, 746, 747, 748, 749, 750, 760, 765, 767, 771, 782, 784, 786, 787, 788, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "codeemitt": 774, "codegen": [595, 754, 765], "codegenprepar": 746, "codeview": [675, 715, 734, 735, 739, 743, 744, 765], "coding": [611, 753], "coff": [642, 650, 654, 675, 820], "collabor": 762, "collect": [663, 680, 715, 756, 770], "collected": 817, "collecting": 661, "collector": [680, 715], "color": 752, "column": 715, "com": 612, "combin": [608, 746], "comdat": 715, "comm": [670, 683, 728, 751], "command": [603, 607, 616, 622, 626, 638, 643, 646, 647, 661, 685, 747, 756, 785], "commandlin": 661, "comment": [611, 721, 728], "commenting": 611, "commit": 683, "committe": 760, "committed": 610, "committing": 747, "common": [683, 703, 729, 749, 779], "commun": 718, "communaut": 793, "community": [609, 682, 707, 772], "compact": 608, "compar": [681, 727], "comparison": 727, "compatibility": [670, 717], "compatibl": 635, "compil": [586, 606, 611, 618, 625, 662, 663, 676, 683, 705, 706, 715, 745, 766, 779, 796, 811, 816], "compiler": 731, "compiling": [606, 662, 683, 706, 815], "complain": 729, "complex": [593, 662, 715, 749], "complexpattern": 691, "complicated": 717, "component": [592, 608, 625, 670, 755], "composit": [585, 586, 693, 762], "compr": 589, "comprehens": 757, "compressing": 715, "compressstor": 715, "comput": [681, 729], "compute_pgm_rsrc1": 591, "compute_pgm_rsrc2": 591, "compute_pgm_rsrc3": 591, "computed": 681, "computing": [585, 680], "concatenating": 749, "concept": [666, 770, 776, 777, 788, 793], "conclus": [585, 728, 809, 817], "concret": [708, 776], "concurrency": 595, "concurrent": [586, 715], "condit": [715, 776], "conditional": [610, 746, 766], "conduct": [609, 760], "confidentiality": 762, "config": 625, "configur": [593, 604, 617, 618, 683, 701, 703, 728, 779], "configuring": [679, 701, 706, 780, 815], "connect": 714, "consid": 678, "consider": [597, 713], "considered": 762, "consistency": [601, 640], "consistent": 771, "const": [590, 675, 689, 690, 715, 721, 727, 746, 749, 765, 766, 811], "constants_block": 598, "constmerg": 746, "constrained": [592, 715], "constraining": 781, "constraint": [591, 715], "construct": [608, 669, 676, 721, 746], "constructing": 714, "constructor": [611, 749], "consumeaft": 661, "consumer": 765, "consuming": 749, "contain": [645, 744, 749, 759], "contained": 611, "container": 749, "content": [586, 598, 765, 819], "context": [585, 586, 715, 792], "contextual": 723, "continu": [611, 665], "continuous": 779, "continuously": 679, "contract": 708, "contribu": 736, "contribut": 664, "contributing": 664, "control": [585, 586, 605, 607, 662, 689, 766, 812], "controlling": [661, 790], "convent": [589, 590, 591, 608, 676, 713, 715, 729, 766, 786], "convers": [585, 586, 590, 689, 715, 729, 752, 785, 786], "convert": [655, 710, 715, 746], "cop": 611, "copy": [713, 715], "copying": 642, "copyright": 670, "copysign": 715, "copyvalu": 594, "copyweak": 715, "cor": [0, 694, 749, 770, 772], "coral": 752, "coreclr": 680, "coro": 665, "corocleanup": 665, "coroearly": 665, "coroelid": 665, "corospl": 665, "coroutin": 665, "corpus": 717, "cos": 715, "cost": [673, 753], "could": 727, "count": [600, 612, 666, 715, 746, 785], "counter": 749, "cov": [626, 715], "coverag": [626, 666, 717], "covered": [611, 671, 772], "cpu": 752, "crash": [602, 717], "crashing": 709, "creat": [586, 707, 731, 776], "creating": [636, 747, 749, 750, 767, 775, 788], "creation": [585, 586, 720], "crit": 746, "criteri": [707, 762], "critical": 746, "cross": [606, 642, 654, 683, 705, 706, 779], "ctag": 774, "ctlz": 715, "ctpop": 715, "cttz": 715, "cud": 662, "current": [671, 731, 751, 753, 762], "currently": 751, "custom": [632, 640, 661, 665, 680, 681, 691, 731, 749, 779, 780, 786, 792], "customeventmark": 791, "cv_def_rang": 675, "cv_fil": 675, "cv_filechecksum": 675, "cv_filechecksumoffset": 675, "cv_fpo_dat": 675, "cv_func_id": 675, "cv_inline_linet": 675, "cv_inline_site_id": 675, "cv_linet": 675, "cv_loc": 675, "cv_stringtabl": 675, "cxxfilt": 627, "cxxmap": 628, "cycl": [601, 667], "d16": 589, "da": [589, 746], "dag": [599, 608, 612, 757, 776], "dagcombin": 754, "dagin": 775, "dagisel": 774, "darp": 752, "darwin": 636, "dat": [585, 586, 591, 598, 608, 646, 666, 669, 715, 724, 729, 746, 749, 766, 771, 775, 789, 791, 792], "datalayout": 608, "dbg": [746, 765], "dbi": [645, 736], "dce": 746, "dead": 746, "deadargelim": 746, "deadarghax0r": 746, "deadtypeelim": 746, "deal": 601, "dealloc": 665, "debug": [591, 615, 631, 639, 710, 715, 721, 733, 736, 746, 749, 757, 765, 816], "debug_info": 586, "debug_typ": 749, "debugg": [591, 602, 715, 746, 765], "debugging": [585, 586, 594, 616, 668, 694, 749, 756, 765, 775, 781, 790], "debugify": 710, "debuginfo": 746, "debugtrap": 715, "decl": 715, "declar": [746, 765], "declared": 611, "declaring": 693, "decod": 746, "deconstruct": 608, "decr": 715, "deduc": 746, "deduct": 611, "deep": [708, 722], "def": [749, 776], "default": [611, 726, 730, 792], "deferred": 766, "deficienc": 777, "defin": [586, 766, 775, 776], "define_abbrev": 598, "defined": [715, 813, 814], "defining": [611, 786], "definit": [585, 586, 611, 624, 716, 719, 755, 768, 776], "defm": 776, "defset": 776, "defvar": 776, "delet": 746, "deleted": 738, "deletevalu": 594, "deleting": [710, 749], "demangl": [627, 679], "demo": 676, "demot": 746, "denorm": 591, "densemap": 749, "denseset": 749, "deoptimiz": 715, "dependenc": [728, 745], "dependent": [594, 669, 675, 715, 721, 746, 766], "deprec": 772, "deprecat": 754, "deprecated": [779, 780], "dequ": 749, "dereference": 715, "dereferenceable_or_null": 715, "dereferenced": 681, "dereferencing": 607, "derived": [585, 586, 674, 749, 770], "describing": 678, "descript": [585, 586, 602, 608, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 718, 751], "descriptor": 591, "design": [602, 603, 605, 608, 669, 698, 700, 713, 718, 720, 726, 731, 755, 761], "designed": 681, "designing": 749, "destroy": 665, "destroyweak": 715, "detail": [611, 669, 723, 747, 764, 765, 766, 776, 785], "detailed": [624, 774], "detect": [700, 746, 752], "detecting": 662, "determining": 661, "determinism": [593, 611], "deterministic": 611, "develop": [616, 670, 775], "developer": [683, 714, 726], "developing": [606, 717], "development": [670, 682, 751, 785], "deviat": [14, 79, 172, 267, 333, 350, 430, 543], "devic": [585, 662, 779], "dfapacketiz": 774, "di": 746, "diagnos": 640, "diagnostic": [645, 759, 785], "dialect": 662, "diarglist": 715, "dibasictyp": 715, "dicompileun": 715, "dicompositetyp": 715, "dictionar": 717, "did": 676, "diderivedtyp": 715, "didn": 753, "dienumerator": 715, "diexpress": 715, "diff": [629, 759], "different": [585, 594, 604, 650, 662, 681, 780], "differentiating": 753, "difil": 715, "diflag": 715, "diglobalvari": 715, "diglobalvariableexpress": 715, "diimportedentity": 715, "dilabel": 715, "dilexicalblock": 715, "dilexicalblockfil": 715, "diloc": 715, "dilocalvari": 715, "dim": 589, "dimacro": 715, "dimacrofil": 715, "dinamespac": 715, "diobjcproperty": 715, "direct": [591, 608, 612, 675, 715, 768, 785], "directed": 776, "directly": [594, 620, 766], "directory": [683, 740], "dis": 630, "disabl": 715, "disable_nonforced": 715, "disadvantag": [669, 753], "disassembl": [608, 630, 679, 774], "disassembly": 723, "disclosur": 762, "discours": 671, "discovery": 617, "discuss": 762, "disk": 738, "dispatch": [591, 640], "displaying": 779, "dissecting": [666, 729], "distanc": 681, "distinct": 665, "distribu": [604, 707, 782, 784], "distribut": 715, "disubprogram": 715, "disubrang": 715, "disubroutinetyp": 715, "ditemplatetypeparamet": 715, "ditemplatevalueparamet": 715, "dith": 752, "divergent": 586, "dlc": 589, "dll": 715, "dmask": 589, "do": [602, 611, 671, 676, 681, 717, 727, 746, 788], "doc": 663, "dock": 672, "dockerfil": 672, "docu": [605, 663, 678, 727, 792], "document": [591, 592, 611, 707, 722, 767, 793], "doesn": 717, "doesnotaccessmemory": 594, "dofinaliz": 788, "doinitializ": 788, "dom": 746, "domfronti": 746, "domin": 746, "dominator": 746, "domtre": 746, "don": [589, 610, 611, 665, 671, 676, 681, 766, 771], "donothing": 715, "dot": 746, "down": 766, "downstream": 753, "doxygen": 611, "dpp": 589, "dpp16": [0, 1], "dpp16_ctrl": 589, "dpp32_ctrl": 589, "dpp64_ctrl": 589, "dpp8": [0, 1, 589], "dpp8_sel": 589, "dpp_ctrl": 589, "dpp_op_sel": 589, "drawback": 751, "driv": [809, 810], "driven": 594, "drop": [621, 710], "ds": 594, "dse": [594, 746], "dso": 715, "dst": [18, 122, 211, 336, 368, 481], "dst_sel": 589, "dst_unused": 589, "dsymutil": 615, "due": 611, "dump": [631, 643, 645], "dumping": 644, "duplicat": [746, 771], "during": [765, 785], "dw_at_llvm_active_lan": 591, "dw_at_llvm_augment": 591, "dw_at_llvm_lane_pc": 591, "dwarf": [585, 586, 591, 615, 631, 639, 765, 816], "dwarfdump": [631, 679], "dyn_cast": 749, "dynamic": [585, 586, 608, 715], "dynamically": [661, 788], "e": 716, "e_flag": 591, "each": 746, "early": 611, "easi": 766, "ebpf": 608, "ec": 736, "ed": 668, "edge": [746, 766, 770], "edit": 728, "editing": 642, "ef_amdgpu_mach": 591, "effect": [678, 681], "efficiency": [594, 713], "efficient": 610, "eh": [673, 746], "eith": 734, "element": [611, 681, 715], "elf": [591, 642, 650, 654, 675], "elimin": 746, "elis": 713, "else": [607, 611, 812], "elseif": 607, "email": [671, 751], "embed": 766, "embedded": [663, 721], "embedding": [586, 591, 606], "emiss": [608, 675, 816], "emit": [626, 815], "emitt": 786, "emitting": [608, 680, 759, 775], "empty": 612, "enabl": 715, "enabling": 759, "enclosing": 667, "encoding": [586, 588, 598, 608, 666], "end": [611, 618, 665, 676, 681, 709, 715, 729, 765], "end_block": 598, "endcatch": 673, "endian": 597, "ending": 749, "endl": 611, "endofbuff": 791, "engin": 720, "enhanc": 770, "enough": 602, "enter_subblock": 598, "entri": [585, 586, 768], "entry": [585, 586, 591, 600, 715, 746], "enumer": [591, 611], "enumerated": 774, "enumerator": 611, "environment": [591, 715, 788], "epilog": 608, "epilogu": 785, "equal": 611, "equivalent": 715, "erlang": 680, "error": [611, 714, 728, 733, 749, 761, 771, 775, 792], "error_cod": 749, "erroror": 749, "established": 670, "etc": [674, 749], "eval": [594, 746], "evalu": [585, 586, 594], "evaluat": 611, "evaluator": 746, "even": 766, "event": 682, "every": 611, "everyon": 610, "everything": 766, "evolu": 746, "exactly": 717, "exampl": [585, 586, 591, 597, 617, 625, 627, 632, 639, 646, 653, 655, 657, 665, 667, 668, 680, 683, 692, 699, 700, 712, 715, 717, 718, 722, 733, 749, 767, 776, 777, 788], "except": [611, 673, 713, 715, 746], "exceptional": 770, "exceptionpoint": 673, "exe": 635, "exec": 590, "execu": [586, 591, 617, 714, 749, 781], "execut": [620, 640, 741], "executing": [606, 729], "executor": 714, "execz": 590, "exeges": 632, "exhaust": 746, "existing": [594, 788, 814], "exit": [611, 612, 613, 615, 617, 618, 620, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 639, 640, 641, 642, 644, 646, 649, 650, 651, 652, 653, 654, 655, 657, 659, 660, 746], "exitonerror": 749, "exp": [0, 2, 3, 4, 589, 715], "exp2": 715, "expand": 786, "expanding": 715, "expandload": 715, "expans": 765, "expect": [600, 701, 715, 728], "exper": 751, "experimental": [715, 754, 768], "expert": 610, "explic": [732, 770], "exploiting": 661, "explor": 790, "export": 626, "expos": 771, "exposed": 771, "express": [585, 586, 590, 591, 666, 673, 715, 746, 766, 776, 809, 810, 812], "extended": [585, 586, 608], "extending": [674, 812, 813, 814], "extens": [585, 586, 661, 675, 689, 752, 765, 788, 812], "external": [661, 721, 746, 757, 779, 780, 819], "externalfnconst": 746, "extra": [640, 681, 781], "extract": [633, 715, 746], "extractel": 715, "extractvalu": 715, "extrahelp": 661, "extrem": 797, "f": [716, 727], "fab": 715, "facilit": 776, "fadd": 715, "fail": 705, "fair": [591, 606, 661, 708, 753, 810], "fallibl": 749, "faq": [671, 676, 717, 787], "fast": [701, 715], "fastisel": [698, 757, 774], "fault": 677, "faultmap": 677, "fcmp": 715, "fconst": 590, "fdiv": 715, "featur": [591, 608, 680, 714, 717, 731, 741, 745, 752, 781, 785], "feedback": 610, "fenc": 715, "ffmpeg": 752, "fi": 589, "fidelity": 790, "field": [727, 775, 776], "fil": [598, 608, 611, 612, 615, 617, 628, 641, 643, 645, 652, 661, 666, 683, 705, 718, 721, 736, 740, 744, 746, 759, 760, 765, 776, 781, 789], "filecheck": 612, "filenam": 715, "filing": 760, "filt": [608, 673], "filter": 673, "filtering": 645, "fin": [717, 733, 749, 766], "final": [665, 707, 720], "find": [678, 746], "finding": [679, 728, 747, 749], "findregress": 758, "firehos": 752, "first": [681, 715, 818], "fix": [664, 715, 727], "fixed": [591, 598, 608, 715, 721, 749, 765], "fixing": 601, "flag": [661, 662, 715, 721, 745, 766, 779, 785], "flam": 790, "flat": [0, 2, 3, 4, 8, 9, 589, 591], "flat_scratch": 590, "flexibl": 612, "flight": [789, 791], "float": 705, "floating": [590, 591, 592, 620, 675, 689, 715], "floor": 715, "flow": [585, 586, 605, 607, 640, 689, 792, 812], "flt": 715, "fma": 715, "fma_mix": 589, "fmax": 715, "fmin": 715, "fmt": 589, "fmul": 715, "fmuladd": 715, "fn": 746, "fneg": 715, "focus": 603, "folded": 766, "folding": [608, 786, 811], "foldingset": 749, "follow": 727, "following": 681, "followup": 715, "followup_all": 715, "followup_coincident": 715, "followup_epilogu": 715, "followup_fallback": 715, "followup_inn": 715, "followup_out": 715, "followup_remaind": 715, "followup_remainder_inn": 715, "followup_remainder_out": 715, "followup_sequential": 715, "followup_vectorized": 715, "for": [586, 591, 594, 602, 604, 608, 610, 611, 614, 619, 621, 634, 636, 638, 656, 658, 663, 671, 672, 673, 676, 678, 679, 681, 683, 693, 699, 701, 705, 708, 710, 714, 715, 717, 728, 729, 731, 746, 749, 750, 751, 752, 765, 770, 772, 780, 783, 812, 814], "forbidden": 611, "forced": 746, "foreach": 776, "forensic": 645, "fork": 717, "form": [585, 586, 608, 719, 746], "format": [585, 586, 591, 598, 608, 611, 617, 631, 642, 650, 666, 673, 679, 721, 738, 740, 744, 765, 768, 770, 791], "formatting": [611, 661, 749, 767], "formatv": 749, "formedness": 715, "fortran": 765, "fp16": 715, "fpext": 715, "fpmath": 715, "fptos": 715, "fptou": 715, "fptrunc": 715, "fragil": 781, "fram": [585, 586, 591, 608, 665, 673, 817], "frameaddress": 715, "framework": 670, "fre": [665, 700, 740], "freeform": 661, "freepoom": 752, "freez": 715, "frem": 715, "frequency": 599, "frequently": [606, 676], "friendly": 717, "from": [599, 608, 620, 633, 661, 662, 671, 681, 683, 706, 715, 731, 746, 747, 749, 766, 797], "front": [676, 681, 709, 765], "frontend": [678, 818], "fronti": 746, "fshl": 715, "fshr": 715, "fsub": 715, "ft": 607, "ftensor": 752, "full": [586, 715, 794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "fully": 611, "funclet": [673, 715], "function": [585, 586, 591, 600, 607, 608, 611, 633, 661, 665, 666, 674, 676, 690, 715, 721, 727, 729, 746, 749, 765, 766, 771, 785, 789, 791, 796, 810, 816], "function_block": 598, "function_entry_count": 715, "function_ref": 749, "functional": 608, "functionality": 771, "functioncomparator": 727, "functionpass": 788, "fundamental": [674, 778], "furth": [585, 640, 731, 750, 790], "futur": [608, 698, 731, 766, 788, 789], "fuzz": [679, 717], "fuzzer": 679, "fuzzing": [679, 717], "fx": [19, 315, 320, 325, 337, 369], "g": 716, "g_ab": 689, "g_add": 689, "g_addrspace_cast": 689, "g_and": 689, "g_anyext": 689, "g_ashr": 689, "g_assert_sext": 689, "g_assert_zext": 689, "g_atomic_cmpxchg": 689, "g_atomic_cmpxchg_with_success": 689, "g_atomicrmw_add": 689, "g_atomicrmw_and": 689, "g_atomicrmw_fadd": 689, "g_atomicrmw_fsub": 689, "g_atomicrmw_max": 689, "g_atomicrmw_min": 689, "g_atomicrmw_nand": 689, "g_atomicrmw_or": 689, "g_atomicrmw_sub": 689, "g_atomicrmw_umax": 689, "g_atomicrmw_umin": 689, "g_atomicrmw_xchg": 689, "g_atomicrmw_xor": 689, "g_bitcast": 689, "g_bitrevers": 689, "g_block_addr": 689, "g_br": 689, "g_brcond": 689, "g_brindirect": 689, "g_brjt": 689, "g_bswap": 689, "g_build_vector": 689, "g_build_vector_trunc": 689, "g_bzero": 689, "g_concat_vector": 689, "g_const": 689, "g_ctlz": 689, "g_ctlz_zero_undef": 689, "g_ctpop": 689, "g_cttz": 689, "g_cttz_zero_undef": 689, "g_dyn_stackalloc": 689, "g_extract": 689, "g_extract_vector_elt": 689, "g_fab": 689, "g_fadd": 689, "g_fcanonicaliz": 689, "g_fceil": 689, "g_fcmp": 689, "g_fconst": 689, "g_fcopysign": 689, "g_fcos": 689, "g_fdiv": 689, "g_fenc": 689, "g_fexp": 689, "g_fexp2": 689, "g_ffloor": 689, "g_flog": 689, "g_flog10": 689, "g_flog2": 689, "g_fma": 689, "g_fmad": 689, "g_fmaximum": 689, "g_fmaxnum": 689, "g_fmaxnum_iee": 689, "g_fminimum": 689, "g_fminnum": 689, "g_fminnum_iee": 689, "g_fmul": 689, "g_fnearbyint": 689, "g_fneg": 689, "g_fpext": 689, "g_fpow": 689, "g_fptos": 689, "g_fptou": 689, "g_fptrunc": 689, "g_frame_index": 689, "g_frem": 689, "g_frint": 689, "g_fsin": 689, "g_fsqrt": 689, "g_fsub": 689, "g_global_valu": 689, "g_icmp": 689, "g_implicit_def": 689, "g_indexed_load": 689, "g_indexed_sextload": 689, "g_indexed_stor": 689, "g_indexed_zextload": 689, "g_insert": 689, "g_insert_vector_elt": 689, "g_intrinsic": 689, "g_intrinsic_round": 689, "g_intrinsic_trunc": 689, "g_intrinsic_w_side_effect": 689, "g_inttoptr": 689, "g_jump_tabl": 689, "g_llround": 689, "g_load": 689, "g_lround": 689, "g_lshr": 689, "g_memcpy": 689, "g_memcpy_inlin": 689, "g_memmov": 689, "g_memset": 689, "g_merge_valu": 689, "g_mul": 689, "g_or": 689, "g_phi": 689, "g_ptr_add": 689, "g_ptrmask": 689, "g_ptrtoint": 689, "g_rotl": 689, "g_rotr": 689, "g_sadd": 689, "g_saddo": 689, "g_saddsat": 689, "g_sbfx": 689, "g_sdiv": 689, "g_sdivrem": 689, "g_select": 689, "g_sext": 689, "g_sext_inreg": 689, "g_sextload": 689, "g_shl": 689, "g_shuffle_vector": 689, "g_sitofp": 689, "g_smax": 689, "g_smin": 689, "g_smulh": 689, "g_smulo": 689, "g_srem": 689, "g_sshlsat": 689, "g_ssub": 689, "g_ssubo": 689, "g_ssubsat": 689, "g_stor": 689, "g_sub": 689, "g_trunc": 689, "g_uadd": 689, "g_uaddo": 689, "g_uaddsat": 689, "g_ubfx": 689, "g_udiv": 689, "g_udivrem": 689, "g_uitofp": 689, "g_umax": 689, "g_umin": 689, "g_umulh": 689, "g_umulo": 689, "g_unmerge_valu": 689, "g_urem": 689, "g_ushlsat": 689, "g_usub": 689, "g_usubo": 689, "g_usubsat": 689, "g_vaarg": 689, "g_vastart": 689, "g_vecreduce_fadd": 689, "g_vecreduce_fmax": 689, "g_vecreduce_fmin": 689, "g_vecreduce_fmul": 689, "g_vecreduce_seq_fadd": 689, "g_vecreduce_seq_fmul": 689, "g_xor": 689, "g_zext": 689, "g_zextload": 689, "garbag": [680, 715, 756, 770, 817], "gath": [715, 785], "gc": [680, 715, 770], "gcmetadataprint": 680, "gcov": 626, "gcread": [680, 715], "gcroot": 715, "gcwrit": [680, 715], "gd": 589, "gdb": [668, 788], "gen": 729, "gener": [608, 620, 647, 673, 680, 709, 720, 721, 746, 784, 790, 810, 812], "general": [585, 586, 596, 604, 610, 617, 620, 650, 660, 675, 715, 724, 749, 774, 791], "generaliz": 586, "generally": 608, "generat": [648, 652], "generated": [608, 676], "generating": [680, 722, 767, 780, 781], "generator": [602, 608, 676, 679, 709, 715, 746], "generic": [622, 642, 654, 679, 688, 689, 714, 752, 774], "geometric": 752, "gep": [678, 681], "get": 715, "getanalys": 788, "getanalysisifavail": 788, "getanalysisusag": 788, "getelementptr": [676, 715], "getmodrefinfo": 594, "getposit": 661, "getregisteredopt": 661, "getting": [599, 682, 683, 684, 685, 717, 728, 733, 775, 790], "gfx10": [0, 591], "gfx1011": 1, "gfx1012": 1, "gfx6": 591, "gfx7": 2, "gfx8": 3, "gfx9": [4, 591], "gfx900": 5, "gfx902": 5, "gfx904": 6, "gfx906": 7, "gfx908": 8, "gfx909": 5, "gfx90a": [9, 591], "gfx_generation_minor": 591, "gfx_generation_numb": 591, "gfx_generation_stepping": 591, "git": [683, 686, 687, 751, 753], "github": [687, 751], "given": 705, "glc": 589, "global": [585, 698, 715, 721, 727, 734, 737, 746, 765, 785], "global_ctor": [676, 715], "global_dtor": 715, "globaldc": 746, "globalisel": 695, "globalopt": 746, "globalsmodref": [594, 746], "globalvalu": 749, "globalvari": 749, "gnu": [616, 649], "gnupg": 752, "go": [611, 676, 734, 757], "goal": [680, 726], "gold": 699, "good": 717, "got": 709, "grained": [749, 766], "grammar": 791, "granularity": 733, "graph": [669, 675, 746, 749, 752, 766, 776, 790], "graph500": 752, "great": 728, "group": [715, 762, 763, 788], "grouping": 661, "guarante": 817, "guard": [611, 715, 766], "guarded": 700, "guid": [591, 595, 616, 661, 671, 672, 710, 721, 729, 760, 775, 779, 780, 781, 784], "guidanc": 604, "guided": [704, 717, 746, 779], "guidelin": [611, 722, 755, 767], "gvn": [594, 746], "gwp": 700, "h": [608, 662, 716, 749], "hack": 706, "hacking": 746, "half": [715, 770], "handl": 591, "handler": 749, "handling": [607, 608, 673, 714, 715, 746, 749, 792], "happen": [671, 676, 681, 760], "hard": [766, 814, 816], "hardened": [761, 766], "hardening": 766, "hardwar": [585, 586, 591, 663, 683, 685, 715], "harness": [714, 752], "hasglobalalias": 727, "hash": [738, 765], "haswel": 766, "hav": [671, 681], "hcc": 591, "head": [586, 591, 611, 666, 705, 736, 741, 743, 761, 765, 791], "header": [591, 611, 771], "heap": [665, 680, 725, 749], "heavy": 766, "hello": [787, 788], "help": [661, 662, 676, 750], "helpful": [664, 749], "her": 671, "heterogeneous": [585, 586], "hex": 792, "hexadecimal": 675, "hexagon": [663, 757], "hiding": 661, "hierarch": [708, 749], "hierarchy": [708, 749], "high": [585, 589, 608, 611, 666, 669, 676, 715, 721, 752, 755, 766, 771], "hint": [689, 715, 749, 785], "hip": 586, "historical": [603, 688], "history": 751, "hook": 683, "hopefully": 722, "host": [662, 683, 705, 724], "hosting": 676, "how": [585, 592, 601, 608, 610, 640, 664, 671, 676, 681, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 717, 724, 727, 730, 731, 758, 762, 765, 767, 769, 776], "hpc": 752, "hsa": 591, "hsa_code_object_is": 591, "hsa_code_object_vers": 591, "http": 671, "hwreg": [20, 123, 212, 370, 482], "hydrobench": 752, "hyphen": 661, "i": [671, 672, 676, 678, 681, 716, 727, 732, 792], "i32": 681, "ia": 618, "ia64": 663, "ibm": 663, "icmp": 715, "iconst": 590, "id": [591, 598, 665, 666, 715], "ide": [605, 770, 813], "identifi": [591, 715, 776], "identifying": 680, "idxen": 589, "if": [600, 607, 611, 681, 727, 776, 785, 786, 812], "ifunc": 715, "ilist": 749, "ilist_nod": 749, "ilist_trait": 749, "imag": [591, 672, 752], "imask": [213, 371, 483], "imm16": [21, 22, 23, 124, 125, 126, 214, 215, 216, 372, 373, 374, 484, 485, 486], "immediat": 721, "immutablemap": 749, "immutablepass": 788, "immutableset": 749, "impl": 746, "implement": [594, 597, 599, 603, 608, 611, 669, 698, 715, 718, 720, 725, 727, 731, 733, 752, 764, 766, 771, 786, 788], "implementing": [608, 680, 730, 788, 809, 817, 819], "implic": [585, 586, 591, 677], "implicitnullcheck": 677, "import": [691, 719, 749], "importing": 751, "in": [585, 586, 597, 600, 601, 606, 607, 608, 611, 621, 640, 665, 669, 673, 676, 680, 710, 721, 724, 726, 727, 734, 746, 749, 751, 757, 759, 764, 765, 768, 770, 776, 781, 785, 788, 789, 792, 814, 819], "inalloc": 713, "includ": [611, 676, 683, 771, 776], "inclus": 772, "incorrect": 709, "increment": 715, "incremental": 670, "incubating": 670, "indent": 611, "independent": [608, 676, 817], "index": [586, 648, 681, 715, 721, 733, 774, 793], "indexedmap": 749, "indic": [678, 681, 721, 743], "indirect": [715, 766], "indirectbr": 715, "indirectbrinst": 600, "individual": [721, 749], "induct": [746, 785], "indvar": 746, "info": [710, 721, 734, 736, 741, 746, 749, 757, 765, 786], "inform": [585, 586, 591, 608, 611, 626, 631, 651, 663, 664, 715, 725, 739, 746, 749, 757, 765, 781, 783, 816], "informed": 670, "infrastructur": [594, 617, 701, 757, 781], "init": [715, 775], "initial": [591, 608], "initializ": [594, 611, 717, 749], "initializing": 680, "initweak": 715, "inlin": [590, 608, 611, 715, 746], "inlining": 746, "input": [642, 646, 679, 715, 792], "insert": [608, 715, 770], "insertel": 715, "inserting": [730, 749], "insertvalu": 715, "inspect": 749, "install": [604, 634, 685], "installing": 706, "instcombin": [676, 746, 754], "instcount": 746, "instnam": 746, "instrinfo": 774, "instrmapping": 712, "instrprof": 715, "instruct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 585, 586, 587, 588, 589, 590, 591, 595, 597, 600, 608, 632, 640, 673, 674, 676, 681, 688, 698, 710, 712, 715, 717, 721, 723, 732, 746, 748, 749, 754, 765, 766, 786, 790], "instructionselect": 691, "instructionselector": 691, "instrument": [725, 789, 790], "instrumenting": 789, "instsimplify": 754, "integ": [590, 681, 689, 715], "integer": 598, "integr": [746, 766], "integral": 715, "integrated": 617, "intel": [596, 618], "intended": 713, "inteqcl": 749, "interact": [671, 749, 788], "interchang": 782, "interfac": [585, 586, 594, 603, 676, 747, 749, 771], "interleav": 715, "interleaving": 782, "internal": [611, 661, 766], "internaliz": 746, "interoperability": 749, "interprocedural": [746, 766], "interval": [608, 746], "intervalmap": 749, "intin": 775, "into": [611, 655, 661, 670, 676, 681, 710, 730, 746, 749, 766], "intrinsic": [591, 592, 597, 665, 673, 674, 680, 690, 715, 729, 746, 748, 754, 765, 768, 770, 774], "intrinsicid": 721, "introducing": 670, "introduct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 586, 587, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 606, 607, 608, 611, 661, 662, 665, 666, 669, 670, 672, 673, 674, 675, 679, 680, 681, 686, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 717, 720, 721, 722, 723, 725, 726, 727, 728, 729, 731, 733, 734, 735, 736, 738, 739, 743, 744, 746, 748, 749, 751, 753, 757, 758, 759, 761, 764, 765, 769, 774, 775, 776, 777, 786, 787, 788, 789, 791, 792, 794, 795, 796, 797, 808, 809, 810, 811, 812, 813, 814, 815, 816], "inttoptr": [681, 715], "invalid": [726, 730], "invari": [715, 746, 766, 791], "invok": [715, 746, 776], "invokeinst": 600, "invoking": [662, 730], "involved": 682, "iostream": [611, 676], "ipi": 743, "iplist": 749, "ipsccp": 746, "ir": [591, 592, 595, 597, 598, 666, 670, 676, 678, 679, 680, 681, 688, 710, 721, 746, 748, 749, 754, 756, 757, 810, 812, 817], "irc": 682, "irr_loop": 715, "irreducibl": 667, "irtransformlai": 795, "irtranslator": 690, "is": [608, 610, 611, 671, 676, 680, 681, 715, 717, 751, 762, 765, 766, 772, 776, 787, 788, 814, 816], "isa": 749, "isel": 679, "isn": 602, "isol": 749, "issu": [594, 603, 611, 640, 664, 671, 703, 729, 732, 762], "it": [610, 676, 681, 699, 727, 741, 769, 815], "itanium": [663, 673, 703], "item": [591, 683], "iter": [586, 715], "iterat": 776, "iterating": 749, "iterator": [749, 785], "iv": 746, "ival": 590, "jam": [746, 782], "jit": [608, 668, 714, 749, 784, 786, 794, 795, 796, 797, 811, 819], "jitdylib": 731, "jitlink": 714, "jitlinkmemorymanag": 714, "joinerror": 749, "json": 774, "jump": [608, 721, 746], "just": 730, "kaleidoscop": [798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819], "kaleidoscopej": 794, "keep": [611, 753], "keeping": [753, 762, 771], "kernel": [591, 729], "key": [748, 792], "keyword": 611, "kicking": 813, "kind": [585, 586, 587, 753], "know": [671, 727], "known": [692, 703], "kokkos": 752, "label": [24, 127, 217, 375, 487, 611, 612, 715], "lai": 608, "laiss": 753, "lambd": 611, "lan": [591, 597, 663, 715], "landingpad": 715, "languag": [585, 586, 591, 611, 676, 678, 715, 765, 808, 812, 813, 814, 817, 818, 819], "larg": [678, 766], "lat": 608, "laund": 715, "layer": 795, "layering": 611, "layout": [591, 608, 683, 715, 729, 739, 740, 744, 746, 749, 750, 765, 783], "laziness": [731, 797], "lazy": [746, 749, 796], "lazyreexport": 797, "lcssa": [719, 746], "ld": 589, "ld1": 597, "ldr": 597, "lds_direct": 590, "leaf": 735, "leak": 717, "leb128": 666, "leftov": 782, "legacy": [670, 730], "legal": [678, 786], "legality": 693, "legaliz": [608, 693, 786], "legalizerinfo": 693, "legalizetyp": 608, "length": 675, "less": 766, "let": 776, "level": [585, 586, 597, 608, 611, 661, 666, 669, 676, 688, 710, 715, 721, 731, 746, 754, 755, 765, 766, 771], "lex": [808, 812], "lexical": [585, 586, 776], "lexicon": 716, "lf_arglist": 735, "lf_array": 735, "lf_bclass": 735, "lf_binterfac": 735, "lf_bitfield": 735, "lf_buildinfo": 735, "lf_class": 735, "lf_endprecomp": 735, "lf_enum": 735, "lf_enumerat": 735, "lf_fieldlist": 735, "lf_func_id": 735, "lf_index": 735, "lf_interfac": 735, "lf_ivbclass": 735, "lf_label": 735, "lf_memb": 735, "lf_method": 735, "lf_methodlist": 735, "lf_mfunc_id": 735, "lf_mfunction": 735, "lf_modifi": 735, "lf_nesttyp": 735, "lf_onemethod": 735, "lf_padn": 735, "lf_point": 735, "lf_precomp": 735, "lf_procedur": 735, "lf_stmemb": 735, "lf_string_id": 735, "lf_structur": 735, "lf_substr_list": 735, "lf_typeserver2": 735, "lf_udt_mod_src_lin": 735, "lf_udt_src_lin": 735, "lf_union": 735, "lf_vbclass": 735, "lf_vftabl": 735, "lf_vfunctab": 735, "lf_vtshap": 735, "lfenc": 766, "lgtm": 610, "lib": [635, 683, 715], "libc": 703, "libcall": [595, 746], "libdevic": 729, "liberally": 611, "libfuzz": [717, 756], "liblto": 718, "libm": 715, "libprotobuf": 679, "librar": [611, 636, 675, 679, 750, 752], "library": [604, 611, 635, 657, 661, 662, 683, 715, 717, 731, 745, 749, 752, 761, 771, 773, 789], "libtool": 636, "libunwind": 703, "licens": [670, 676], "licensing": 699, "licm": [594, 715, 746, 782], "licm_versioning": 715, "lif": 601, "lifetim": [713, 715, 765], "lift": 754, "lik": [611, 676, 749], "lim": 733, "limit": [585, 594, 721, 770, 783], "lin": [585, 586, 591, 603, 661, 685, 747, 756, 785], "link": [637, 675, 683, 685, 699, 714, 715, 718, 767], "linkag": [715, 731], "linkgraph": 714, "linking": [714, 729], "linkonc": 675, "lint": 746, "linux": [596, 663], "lipo": 638, "list": [585, 586, 607, 611, 641, 661, 663, 671, 682, 715, 743, 749, 757, 767, 792], "listin": 775, "listing": [794, 795, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816], "listrecty": 775, "lit": 617, "literal": [585, 586, 590, 776], "littl": 611, "liv": [608, 715, 721], "livedebugvalu": 765, "ll": 652, "llc": 618, "lldb": [619, 660, 668, 757], "lli": 620, "lljit": 731, "lllazyj": 731, "llrint": 715, "llround": 715, "llvm": [591, 594, 595, 597, 598, 599, 600, 601, 602, 604, 606, 607, 608, 609, 610, 611, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 685, 686, 699, 701, 702, 704, 706, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 723, 724, 726, 728, 729, 745, 746, 748, 749, 750, 751, 754, 755, 756, 757, 759, 762, 763, 764, 765, 768, 770, 771, 772, 774, 781, 784, 785, 786, 787, 788, 789, 790, 793, 810, 811, 812, 814, 817, 818, 819], "llvm_debug": 749, "llvm_shutdown": 749, "llvmcontext": 749, "lnt": 779, "load": [608, 640, 678, 715, 766], "loaded": [591, 766, 788], "loading": 720, "loadweak": 715, "loadweakretained": 715, "local": [617, 683, 715, 751, 814], "localescap": 715, "locally": 728, "localrecov": 715, "locat": [585, 586, 605, 639, 655, 683, 710, 721, 765, 766, 816], "locating": 726, "locstat": 639, "log": [715, 727], "log10": 715, "log2": 715, "logarithmical": 727, "logical": [585, 586], "long": 753, "longjmp": 673, "looking": 678, "lookup": [586, 591, 746, 765], "loop": [599, 607, 611, 667, 715, 719, 746, 782, 785, 788, 812], "loopinfo": 719, "looppass": 788, "lostdebuglocobserv": 710, "low": [585, 586, 611, 688, 746], "loweratomic": 746, "lowering": [665, 680, 681, 715, 770], "lowerinvok": 746, "lowerswitch": 746, "lppassmanag": 788, "lrint": 715, "lround": 715, "lsda": 673, "lshr": 715, "lto": [699, 715], "lto_code_gen_t": 718, "lto_module_t": 718, "lwe": 589, "m0": [590, 591], "m_op_sel": 589, "m_op_sel_h": 589, "mach": [641, 642, 643, 644, 650, 655, 765], "machin": [608, 632, 640, 675, 678, 688, 721, 770, 786, 815], "machine_version_major": 591, "machine_version_minor": 591, "machine_version_stepping": 591, "machinebasicblock": 608, "machinefunct": [608, 788], "machinefunctionpass": 788, "machineinstr": [608, 710], "machineinstrbuild": 608, "machineverifi": 694, "machsuit": 752, "macos": 663, "macro": 749, "macros": [607, 792], "mad_mix": 589, "magic": 598, "mailing": [671, 682], "main": 727, "mainten": 601, "major": [591, 670, 715], "mak": [610, 611, 676, 677, 766], "makefil": [750, 779, 780], "making": [670, 728, 749], "man": 751, "manag": [714, 730, 731], "managedstatic": 749, "manager": 730, "managing": 751, "mangled": 628, "manipul": [665, 715], "manipulat": 615, "manipulating": [634, 638], "manual": [661, 663, 685, 715, 721, 749], "map": [585, 591, 608, 675, 677, 680, 715, 736, 740, 741, 749, 768, 770], "mapped": 586, "mapping": [591, 592, 608, 666, 671, 712, 786, 792], "mapvector": 749, "markdown": 722, "marker": [640, 715], "marking": 729, "markup": 723, "mask": 715, "masked": [715, 754], "mass": 599, "matching": [608, 612, 741], "math": [662, 715], "mati": 754, "matrix": [608, 715], "maximum": 715, "maxnum": 715, "may": [594, 727], "mc": [608, 679], "mca": 640, "mccontext": 608, "mcinst": 608, "mcjit": [668, 720], "mcsection": 608, "mcstream": 608, "mcsymbol": [608, 721], "md5": 586, "mechanical": 611, "medium": 762, "meeting": 726, "meetup": [682, 724], "mem2reg": 746, "memb": [585, 586, 681, 735, 765], "member": [749, 760, 762], "membership": [762, 783], "memcpy": [715, 746], "memcpyopt": [594, 746], "memdep": 746, "memmov": 715, "memory": [585, 586, 591, 594, 640, 678, 689, 714, 715, 746, 749, 761, 814], "memorydependenceanalys": 594, "memoryss": 726, "memset": 715, "memtagsanitiz": 725, "merg": [645, 646, 671, 707, 710, 715, 717, 746, 747, 751, 753], "mergefunc": 746, "mergefunct": 727, "mergereturn": 746, "mergetwofunct": 727, "merging": [707, 727], "messag": [611, 670, 671, 775], "meta_block": 759, "metadat": [591, 600, 601, 677, 715, 729, 759, 765, 782, 783, 791], "metadata_attachment": 598, "metadata_block": 598, "method": [591, 594, 611, 749, 771, 788], "mf": 788, "mfma": 589, "microscopic": 611, "microsoft": [606, 685], "middl": [676, 709], "migrat": [671, 732, 751], "mimg": [0, 2, 3, 4, 9, 589], "minimising": 753, "minimiz": 771, "minimizing": [672, 789], "minimum": [693, 715], "minnum": 715, "minor": 591, "mip": [663, 757], "mir": [710, 721, 765], "mirror": 751, "miscellaneous": [589, 645, 661, 663, 721, 750, 788], "miscompil": [602, 709], "mismatched": 676, "missed": 746, "misunderstood": 681, "mitig": 766, "mixed": 785, "mixing": 770, "mlir": [658, 660], "mnemonic": [588, 608], "mod": [591, 597, 608, 696, 714, 717, 732, 746, 759, 789, 816], "model": [591, 640, 662, 715, 766, 770], "modeling": 678, "modern": 683, "modif": [600, 705], "modifi": [587, 588, 589, 591, 612, 622, 661, 715], "modified": 676, "modify": 676, "modul": [607, 633, 645, 715, 721, 734, 736, 739, 746, 749, 788, 795, 815], "module_block": 598, "module_code_ali": 598, "module_code_asm": 598, "module_code_datalayout": 598, "module_code_deplib": 598, "module_code_funct": 598, "module_code_gcnam": 598, "module_code_globalvar": 598, "module_code_sectionnam": 598, "module_code_tripl": 598, "module_code_vers": 598, "modulepass": 788, "monorepo": [670, 751], "monotonic": 595, "mor": [593, 611, 671, 686, 717, 719, 725, 749, 789], "most": 746, "motion": 746, "motiv": [677, 754, 768], "mov": 751, "moved": [773, 778], "moveweak": 715, "moving": 751, "mri": 622, "msf": [645, 740, 744], "msg": [27, 129, 220, 378, 490], "mtbuf": [0, 2, 3, 4, 9, 589], "mubuf": [0, 2, 3, 4, 8, 9, 589, 591], "mul": 715, "mult": [593, 604, 650, 718], "multicl": 776, "multiclass": 776, "multigrid": 752, "multipl": [585, 586, 665, 686, 749, 751, 776], "multiply": 715, "multithreaded": 788, "must": [594, 610, 661], "mustprogress": 715, "mutabl": 814, "mutat": [710, 814], "mutator": [679, 717], "my": [671, 676, 681, 717, 818], "myfirsttypofix": 728, "nam": [586, 591, 611, 627, 628, 634, 715, 746, 753, 765, 775, 786], "named": [661, 715, 741], "namespac": 611, "naming": 608, "narrat": 727, "narrow": 603, "nas": 752, "nativ": [598, 608], "natural": [667, 746], "near": 731, "nearbyint": 715, "need": [681, 722, 732], "neg": 589, "neg_h": 589, "neg_lo": 589, "negat": 681, "neon": 597, "nested": [713, 767], "new": [594, 603, 670, 671, 673, 674, 687, 695, 730, 746, 749, 758, 762, 765, 766, 767, 775, 781, 788, 814], "newbuff": 791, "newcpuid": 791, "newlin": 612, "next": [612, 685, 790], "next_free_sgpr": 591, "next_free_vgpr": 591, "nightly": 758, "nm": 641, "no": [594, 705, 715, 727, 746, 771, 792], "noali": 715, "nod": [592, 674, 715, 746], "nomin": 762, "non": [591, 593, 610, 611, 680, 715, 726, 746, 757, 770], "nondebug": 746, "noop": 665, "normal": 665, "normaliz": 792, "not": [585, 591, 604, 605, 608, 611, 612, 661, 663, 671, 676, 688, 702, 703, 705, 717, 719, 727, 746, 751, 757], "notat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 587, 683], "notatomic": 595, "null": [590, 680, 681], "numb": [585, 586, 591, 598, 661, 753], "number": [590, 598, 751], "numbering": 746, "numeric": 612, "numerical": 662, "nv": 589, "nvcc": 662, "nvptx": [608, 663, 729], "nvvm": 729, "nwchem": 752, "o": [608, 641, 642, 643, 644, 650, 655, 716, 727, 765, 792], "objc": 715, "objcopy": 642, "objdump": 643, "object": [585, 586, 591, 598, 605, 641, 642, 643, 649, 650, 654, 681, 683, 715, 720, 749, 750, 759, 765, 770, 789, 815], "objectlinkinglai": 714, "objectsiz": 715, "obtaining": [662, 670], "ocaml": [680, 757], "occurrent": 661, "of": [0, 5, 585, 586, 589, 590, 594, 599, 601, 604, 606, 607, 608, 609, 610, 611, 631, 661, 664, 666, 667, 670, 671, 676, 678, 679, 680, 681, 683, 690, 699, 708, 713, 715, 717, 718, 726, 729, 730, 734, 746, 749, 750, 753, 757, 758, 760, 762, 765, 766, 776, 785, 786, 788, 792, 816, 817, 819], "off": [590, 669], "offen": 589, "official": [663, 707], "offset": [585, 589, 715, 766, 783], "offset0": 589, "offset1": 589, "offset11": 589, "offset12": 589, "offset13": 589, "offsetof": 817, "offsetting": [585, 586], "often": 681, "old": 671, "omit": 585, "omod": 589, "omp2012": 752, "once": [665, 671], "one": [671, 676, 681, 746], "ongoing": 785, "onlin": [586, 671, 682], "only": [604, 643, 746, 749, 751], "onlyreadsmemory": 594, "op_sel": 589, "op_sel_h": 589, "opaqu": [715, 732], "opcod": [587, 588, 688, 689], "open": [708, 757], "openbenchmarking": 752, "opencl": 591, "opencv": 752, "openmp": 752, "oper": [585, 586, 590, 591, 622, 678, 686, 689, 693, 715, 749, 766], "operand": [19, 315, 320, 325, 337, 369, 587, 588, 589, 590, 591, 715, 721, 768, 786], "operating": 591, "operational": 747, "operator": [590, 776, 813, 814], "opt": [28, 130, 221, 340, 379, 491, 659, 661, 679, 730, 733, 759, 787, 788], "optimiz": [586, 591, 595, 608, 659, 662, 689, 699, 704, 709, 710, 715, 718, 726, 730, 733, 746, 759, 765, 766, 779, 784, 795, 811, 817], "optimized": 765, "optimizer": 676, "optimizing": [604, 795], "opting": 747, "option": [591, 603, 604, 606, 612, 613, 615, 617, 618, 620, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 657, 659, 660, 661, 675, 700, 703, 717, 749, 753, 761, 779, 781], "optional": [683, 723, 736], "optionally": 586, "optioncategory": 661, "optparserdef": 774, "or": [585, 586, 611, 661, 676, 715, 751, 766, 776], "orc": [714, 731, 795], "orcv1": 731, "orcv2": 731, "order": [585, 591, 611, 640, 715, 782, 791, 792], "ordering": [595, 597, 611, 678, 715], "org": [671, 752], "organiz": [771, 781], "original": 710, "os": 591, "other": [585, 586, 594, 600, 605, 607, 622, 645, 661, 663, 676, 678, 681, 689, 705, 715, 729, 749, 781, 817], "otool": 644, "our": 671, "out": [606, 681, 747, 794], "output": [617, 624, 631, 642, 661, 715, 717, 723, 775, 780, 792], "outsid": 595, "outstanding": 751, "over": [611, 671, 678, 749, 776], "overflow": [681, 700, 715], "overhead": [766, 770], "overlap": 646, "overlay": 586, "overloading": 662, "overrid": [594, 776], "overridden": 727, "overview": [594, 598, 607, 611, 665, 666, 672, 673, 680, 683, 685, 712, 715, 721, 729, 730, 731, 748, 750, 758, 767, 768, 770, 777, 780, 781, 782], "owned": 749, "owner": 670, "p": 716, "packaging": 745, "packed": 591, "packedvector": 749, "packet": 608, "packetiz": 608, "packing": 588, "padding": [585, 586, 735], "pag": 676, "parallel": [717, 752], "parallel_access": 715, "param": [29, 131, 222, 492, 715], "paramattr_block": 598, "paramattr_code_entry": 598, "paramattr_code_entry_old": 598, "paramattr_group_block": 598, "paramattr_grp_code_entry": 598, "paramet": 715, "parameter": [585, 586, 729], "parboil": 752, "parent": 673, "parenthes": 611, "parr": 752, "pars": [608, 661, 809, 812], "parsec": 752, "parsecommandlineopt": 661, "parser": 661, "parsing": [608, 661, 809], "part": 585, "partial": [586, 746, 785], "partit": [675, 746], "pass": [594, 606, 665, 677, 678, 710, 714, 721, 727, 730, 733, 746, 766, 770, 782, 787, 788, 811], "passed": [705, 746], "passing": 749, "passmanag": 788, "past": 776, "patch": [610, 664, 670, 683, 707, 747, 768], "patchpoint": 768, "patent": 670, "path": [591, 667, 715], "patleaf": 691, "pattern": [589, 612, 746], "pauth": 748, "pcmark": 715, "pdb": [645, 655, 736, 737, 738, 741, 742, 743, 744], "pdb2yaml": 645, "pdbutil": 645, "pe": 650, "per": [591, 796], "perform": [640, 678, 752, 766, 785], "peripheral": 772, "personality": 715, "pgo": [593, 704], "phabricator": 747, "phas": [608, 718, 775, 786], "phi": [715, 726], "philosophy": [602, 718, 765], "physical": 608, "pick": 724, "picking": 749, "piec": 664, "pipelin": [591, 694, 730], "plac": [585, 586, 726, 746, 750], "placesafepoint": 770, "plan": [751, 753, 755], "planned": 788, "planning": 755, "platform": [606, 642, 654, 663, 676, 761, 781, 789], "plugin": [680, 699, 714, 788], "point": [585, 586, 590, 591, 592, 620, 665, 675, 680, 681, 689, 715, 732, 748, 749, 766, 768, 785], "pointe": 732, "pointer": [594, 611, 693, 715, 732, 770, 785], "pointstoconstantmemory": 594, "poison": 715, "polic": [610, 670, 687], "policy": [610, 670, 762, 772], "polybench": 752, "polymag": 752, "polymorphic": 749, "pool": [700, 721], "portabl": [611, 676, 771, 817], "porting": 695, "posit": 661, "positional": 661, "possibilit": 661, "possibl": [611, 727], "post": [715, 728, 746, 751], "postdom": 746, "postdomfronti": 746, "postdomin": 746, "postdomtre": 746, "potential": 747, "pow": [715, 728], "powerpc": [608, 663, 757], "practic": [610, 678, 701, 726], "pragm": 785, "pre": [683, 747, 758], "preallocated": 715, "preassigned": 608, "precis": [715, 726, 746], "preconfigured": 704, "predecessor": 749, "predefined": 591, "predicat": [611, 691, 693, 715, 721, 766], "predicated": 754, "prediqu": [715, 754], "preemption": 715, "pref": [611, 678], "prefetch": 715, "prefix": [612, 715], "preincr": 611, "preliminar": 786, "prepar": [665, 720], "preprocessing": 776, "prerequisit": [662, 703, 705, 786], "present": [586, 726, 727, 738], "preserv": [710, 715], "preserving": [715, 766], "pretty": 645, "previously": 611, "prim": 607, "primit": 598, "print": [594, 625, 651, 653, 746, 774, 786, 788], "printdetailedrecord": 775, "printing": 775, "printrecord": 775, "prior": 610, "privat": [591, 611, 671], "privileg": 762, "prob": [30, 223, 380, 493, 675], "probability": [599, 600, 715], "problem": [597, 683, 717, 766, 788, 814, 816], "process": [608, 682, 707, 727, 728, 731, 755, 758, 762], "processing": [608, 693, 752], "processor": [591, 663, 752, 766], "prof": 715, "profdat": 646, "profgen": 647, "profil": [646, 647, 675, 704, 715, 717, 746, 779], "program": [585, 586, 608, 620, 669, 731, 750, 777], "programing": 586, "programm": [749, 776], "programmatic": 749, "progress": 698, "project": [606, 607, 670, 683, 699, 750, 751, 757], "prolog": [591, 608], "prologu": 715, "promis": 665, "promot": [746, 786], "propag": 746, "propagat": 766, "propagating": 749, "properly": 611, "propert": [591, 678, 765, 817], "propos": 793, "proposal": [682, 751, 765], "proposed": 603, "protect": 766, "proto": 679, "prototyp": 746, "provid": 611, "provisional": 753, "proxy": 728, "prun": 746, "pseudo": [612, 666], "pseudolowering": 774, "ptr": [715, 729], "ptrauth": 748, "ptrmask": 715, "ptrtoint": [681, 715], "ptx": 729, "ptxas": 729, "public": [707, 734, 742, 749], "publiqu": 662, "push": 683, "putting": 815, "pwm": 752, "py": [758, 759], "q": 717, "qemu": 705, "qualif": 707, "qualifi": 611, "quality": [670, 770], "query": 746, "question": [609, 671, 676, 751], "queu": 591, "quick": [606, 661, 680, 781, 787, 788], "quickstart": [699, 722, 767, 779], "quirky": 603, "r": 716, "r128": 589, "raj": 752, "random": [652, 679, 727], "randomness": 761, "rang": [611, 666, 715, 749], "ranlib": 648, "rarely": 606, "rational": [681, 715], "raw": 770, "raw_ostream": 611, "rawspeed": 752, "re": 728, "read": [649, 650, 680, 718, 729, 751, 753], "read_regist": 715, "read_volatile_regist": 715, "readabl": 611, "readcyclecount": 715, "readelf": [649, 650], "reading": [680, 729, 786], "readobj": 650, "reason": 671, "reassociat": 746, "reciprocity": 610, "reclaiming": 761, "record": [591, 598, 645, 666, 734, 735, 743, 774, 775, 776, 789, 791], "recording": 770, "recordkeep": 775, "recordrecty": 775, "recordval": 775, "recover": 749, "recty": 775, "redesign": 603, "redistribut": 676, "redistributing": 676, "reduc": [715, 746, 754], "reducing": [604, 753], "reduct": [603, 613, 689, 715, 746, 785], "redund": 746, "reexport": 731, "ref": [715, 746], "referencing": 721, "referent": [586, 661, 669, 680, 688, 698, 715, 721, 746, 749, 751, 752, 753, 754, 755, 756, 770, 774, 776], "reflect": 729, "reg": 715, "reg2mem": 746, "regbankselect": 696, "regex": 612, "region": [666, 746, 770, 788], "regionpass": 788, "regist": [585, 586, 591, 608, 678, 688, 721, 746, 765, 786], "register": [585, 586, 608, 676, 688, 721, 729, 766], "registeranalysisgroup": 788, "registerbankinfo": 696, "registerinfo": 774, "registering": 788, "registr": [786, 788], "regress": [707, 710, 714, 781], "regular": 682, "reinstat": 772, "reject": 676, "rel": 746, "relat": [586, 715, 746, 766, 786], "related": [606, 755], "relationship": [731, 749], "releas": [595, 707, 715, 757, 758], "releasememory": 788, "relev": [604, 663], "reliabl": 608, "relicensing": 670, "reloc": [591, 675, 770], "relocat": [590, 715], "relocating": 770, "remapping": [628, 720], "remark": 759, "remark_block": 759, "remot": 714, "remov": [731, 746], "removal": 772, "removeuser": 727, "replac": [616, 621, 698, 746], "replacedirectcaller": 727, "replacewithnewvalu": 594, "replacing": 749, "reply": 671, "repo": 687, "report": [601, 626, 664, 709, 746, 760, 762, 763], "reporting": [601, 664, 707, 758, 760], "repositor": [687, 751], "repository": 751, "represent": [585, 586, 594, 665, 666, 676, 715, 731, 748, 770], "represented": 608, "representing": [608, 783], "request": [610, 707], "requesting": 747, "requir": [670, 680, 683, 685, 747, 772, 781, 788], "required": [594, 608, 610, 661, 681, 750, 787, 788], "requiring": 665, "resampling": 752, "resign": 748, "resolu": 718, "resolving": 601, "resourc": [591, 663, 686, 697], "respons": [594, 661, 746], "responsibilit": 762, "rest": 809, "restrict": 673, "restricted": 678, "result": [586, 594, 617, 715, 747, 779], "resum": [665, 715], "resuming": 717, "ret": 715, "retain": 715, "retainautoreleas": 715, "retainautoreleasedreturnvalu": 715, "retainautoreleasereturnvalu": 715, "retainblock": 715, "retcon": 665, "retir": 640, "return": [611, 766], "returnaddress": 715, "returned": 665, "returning": 749, "revers": [670, 715, 785], "revert": 728, "reverting": 683, "review": [610, 670, 728, 747], "reviewed": 610, "reviewer": 747, "reviewing": 747, "revis": [728, 751], "rewrit": 766, "rewritestatepointsforgc": 770, "rfc": 610, "rgpassmanag": 788, "rich": 723, "right": 749, "rint": 715, "rip": 766, "risc": [663, 757], "roadmap": [714, 731, 754, 755], "rodini": 752, "rol": [586, 701], "root": [603, 680, 686], "rotat": 746, "rotated": 719, "round": 715, "roundeven": 715, "rounding": [591, 715], "routin": 749, "row": [585, 586], "row_mask": 589, "rpath": 634, "rt": 705, "rtti": [611, 708], "rul": [585, 586, 681, 691, 693, 707, 708, 710, 715], "run": [617, 686, 730], "running": [679, 706, 717, 729, 777, 779, 780, 787, 788], "runonfunct": 788, "runonloop": 788, "runonmachinefunct": 788, "runonmodul": [727, 788], "runonregion": 788, "runonscc": 788, "runtim": [586, 673, 714, 715, 785, 789], "runtimedyld": 714, "s_block32": 734, "s_bprel32": 734, "s_buildinfo": 734, "s_calle": 734, "s_caller": 734, "s_callsiteinfo": 734, "s_coffgroup": 734, "s_compile2": 734, "s_compile3": 734, "s_const": 734, "s_defrang": 734, "s_defrange_framepointer_rel": 734, "s_defrange_framepointer_rel_full_scop": 734, "s_defrange_regist": 734, "s_defrange_register_rel": 734, "s_defrange_subfield": 734, "s_defrange_subfield_regist": 734, "s_end": 734, "s_envblock": 734, "s_export": 734, "s_fastlink": 734, "s_filestatic": 734, "s_framecook": 734, "s_frameproc": 734, "s_gdata32": 734, "s_gmandat": 734, "s_gproc32": 734, "s_gproc32_id": 734, "s_gthread32": 734, "s_heapallocsit": 734, "s_inline": 734, "s_inlinesit": 734, "s_inlinesite_end": 734, "s_label32": 734, "s_ldata32": 734, "s_lmandat": 734, "s_local": 734, "s_lproc32": 734, "s_lproc32_dpc": 734, "s_lproc32_dpc_id": 734, "s_lproc32_id": 734, "s_lprocref": 734, "s_lthread32": 734, "s_manconst": 734, "s_objnam": 734, "s_proc_id_end": 734, "s_procref": 734, "s_pub32": 734, "s_regist": 734, "s_regrel32": 734, "s_section": 734, "s_thunk32": 734, "s_trampolin": 734, "s_udt": 734, "s_unamespac": 734, "sadd": 715, "saddr": [31, 32, 341, 381, 382, 494, 495], "saf": [680, 749], "safepoint": 770, "safety": [746, 769, 817], "sam": 612, "sampl": [666, 712, 776], "sampler": 591, "sanitizer": 757, "sat": 715, "satur": 715, "saturating": 715, "sav": 665, "sbas": [33, 34, 35, 132, 133, 224, 225, 383, 384, 385, 496, 497, 498], "scal": 599, "scalabl": 715, "scalar": [689, 693, 746, 792], "scalarenumerationtrait": 792, "scalarevolu": 746, "scatt": [715, 785], "scc": [590, 746], "sccp": 746, "scev": [594, 746], "scheduling": [608, 765, 786], "scop": [585, 586, 591, 607, 715], "scoping": 765, "scratch": 591, "script": [622, 671, 704, 758], "scripting": 607, "scrubbing": 751, "scudo": 761, "sdat": [36, 37, 38, 39, 40, 41, 226, 227, 228, 386, 387, 388, 389, 390, 391, 499, 500, 501, 502, 503, 504], "sdiv": 715, "sdnod": 691, "sdst": [42, 43, 44, 45, 46, 47, 48, 49, 50, 134, 135, 136, 137, 138, 139, 140, 141, 229, 230, 231, 232, 233, 234, 235, 236, 392, 393, 394, 395, 396, 397, 398, 399, 505, 506, 507, 508, 509, 510, 511, 512], "sdwa": [0, 589], "search": [727, 752, 774], "searchablet": 774, "section": [586, 591, 675, 677, 722, 736, 767, 768, 791], "security": [664, 714, 762, 763, 766], "segment": 591, "segmented": [586, 608, 764], "seh": [673, 715], "select": [602, 608, 617, 698, 715, 765, 776], "selecting": [661, 704], "selectiondag": [592, 608, 674, 691, 786], "selector": [592, 786], "self": [611, 676], "semantic": [665, 678, 715, 729, 748, 768, 770, 771], "send": 671, "sending": 683, "sentinel": 749, "sequenc": [591, 776, 792], "sequential": 749, "sequentiallyconsistent": 595, "ser": [599, 747], "serializ": 759, "serialized": [738, 759], "serv": 736, "set": [591, 594, 661, 671, 693, 708, 715, 731, 746, 749, 776, 786], "setjmp": 673, "setting": [591, 671, 787, 788], "setup": [708, 715, 810, 816], "setvector": 749, "setversionprint": 661, "sext": [589, 678, 715], "sgpr": 591, "sgpr_count": 591, "sh": 758, "shad": 591, "shadow": 680, "shared": 745, "shl": 715, "should": [610, 671, 672, 676, 727], "show": [626, 646, 676], "sht_llvm_addrsig": 675, "sht_llvm_bb_addr_map": 675, "sht_llvm_call_graph_profil": 675, "sht_llvm_dependent_librar": 675, "sht_llvm_sympart": 675, "shufflevector": 715, "sibling": 608, "sideeffect": 715, "sign": [747, 748], "sign_generic": 748, "signal": 591, "signed": 598, "signific": 675, "simd": 752, "simm21": 590, "simm32": [51, 52, 53, 142, 143, 237, 238, 239, 400, 401, 402, 513, 514, 515], "simpl": [611, 715, 729, 746, 749, 776], "simplif": 770, "simplify": [611, 719, 746, 749], "simplifycfg": [676, 746], "simplifying": 721, "simt": 586, "sin": 715, "singl": [591, 611, 715, 746, 751, 766], "sink": 746, "sinking": 746, "sit": [585, 586, 715, 749], "sitofp": 715, "siz": [585, 588, 590, 604, 608, 651, 665, 672, 749, 789], "sized": 764, "sizeof": 817, "sjlj": 673, "skeleton": 775, "skipping": 733, "sky": 663, "slambench": 752, "slc": 589, "slightly": 749, "slot": 746, "slp": 785, "small": 717, "smallbitvector": 749, "smallptrset": 749, "smallset": 749, "smallstring": 749, "smallvector": 749, "smax": 715, "smem": [0, 3, 4, 9, 589, 591], "smin": 715, "smrd": [2, 589, 591], "smul": 715, "snippet": 632, "so": 717, "social": [682, 724], "soffset": [54, 55, 56, 144, 145, 240, 241, 242, 342, 403, 404, 405, 516, 517, 518], "soft": [705, 771], "softwar": [683, 685], "solut": [585, 717, 727], "someon": 747, "sommair": 708, "sop1": [0, 2, 3, 4, 9, 591], "sop2": [0, 2, 3, 4, 9, 591], "sopc": [0, 2, 3, 4, 9, 591], "sopk": [0, 2, 3, 4, 9], "sopp": [0, 2, 3, 4, 9, 591], "sorted": 749, "sorting": [611, 645], "sourc": [585, 586, 591, 606, 611, 655, 666, 676, 683, 715, 721, 750, 757, 765, 776, 816], "spac": [585, 586, 591, 608, 611, 681, 729], "spanning": 752, "sparc": 663, "spars": 746, "sparsebitvector": 749, "sparsemultiset": 749, "sparseset": 749, "spec": 752, "special": [585, 586, 604, 729, 765, 789], "specialised": 715, "specialized": 715, "specif": [675, 771], "specifi": 715, "specific": [606, 608, 618, 622, 640, 641, 642, 650, 654, 655, 675, 678, 689, 765, 781, 782, 817], "specified": [594, 661], "specify": 678, "specifying": [661, 680, 788], "spectr": 766, "specul": 766, "speed": 610, "spgo": 647, "sphinx": 767, "spill": 591, "spilled": 585, "splic": 715, "splitting": 610, "sponentry": 715, "spread": 585, "sqrt": 715, "src": [10, 11, 12, 13, 57, 58, 59, 60, 61, 62, 63, 64, 65, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 317, 318, 322, 323, 328, 329, 330, 331, 332, 343, 344, 345, 346, 347, 348, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "src0_sel": 589, "src1_sel": 589, "sreg": 729, "srem": 715, "sro": 746, "srsrc": [66, 67, 157, 158, 254, 255, 349, 418, 419, 530, 531], "ssa": [608, 676, 715, 719, 746], "ssamp": [68, 159, 256, 420, 532], "ssca": 752, "sshl": 715, "ssrc": [69, 70, 71, 72, 73, 74, 75, 76, 77, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 257, 258, 259, 260, 261, 262, 263, 264, 265, 421, 422, 423, 424, 425, 426, 427, 428, 429, 533, 534, 535, 536, 537, 538, 539, 540, 541], "ssub": 715, "stabl": 672, "stack": [585, 586, 591, 608, 675, 680, 715, 725, 746, 764, 766, 768, 769, 770, 790, 817], "stackguard": 715, "stacklet": 764, "stackmap": [768, 770], "stackprotector": 715, "stackrestor": 715, "stacksav": 715, "stag": [591, 593, 640, 705], "standard": [586, 598, 611, 662, 665, 683, 715, 749, 752, 753, 765, 771], "start": [606, 608, 661, 680, 715, 724, 781, 787, 788], "started": [683, 684, 685, 717, 733], "starting": 794, "startup": 717, "stashing": 751, "stat": [585, 586, 591, 600, 611, 727, 732, 749, 759, 766, 776], "stateless": 746, "statepoint": [680, 715], "static": [611, 618], "statically": 746, "statistic": [631, 639, 640, 749, 788], "status": [612, 613, 615, 617, 618, 620, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 639, 640, 641, 642, 644, 646, 649, 650, 651, 652, 653, 654, 655, 657, 659, 660, 671, 714, 730, 751], "statut": [747, 770], "stay": 670, "std": [611, 662, 749], "stderr": 746, "steen": 594, "step": [685, 701, 715, 751, 772, 786, 790], "stepping": 591, "stepvector": 715, "still": [671, 678, 732], "stor": [608, 640, 676, 678, 715, 746, 766], "storag": [661, 715, 749], "storestrong": 715, "storeweak": 715, "strateg": [680, 766], "strategy": 715, "straw": 751, "stream": [645, 734, 736, 737, 739, 740, 741, 742, 743, 744, 775], "streamer": 759, "strength": 746, "stress": 652, "string": [586, 612, 653, 666, 715, 731, 749, 759], "stringerror": 749, "stringin": 775, "stringmap": 749, "stringref": 749, "stringset": 749, "strip": [654, 715, 746, 748], "stripping": 654, "strtab_block": 598, "struct": [611, 681, 715], "structur": [585, 586, 665, 670, 671, 715, 721, 726, 727, 749, 775, 779, 781, 782, 785], "structural": 629, "structured": 679, "studio": 685, "stuff": 676, "styl": [594, 611, 649, 675, 708, 715, 750], "sub": [666, 715, 751], "subcl": 749, "subclass": 786, "subcommand": 645, "subdirector": 750, "subm": [664, 709], "submitting": 670, "subregist": 721, "subroutin": [585, 586, 776], "subsect": [722, 767], "substitu": [612, 617, 781], "substream": [736, 739], "subsubsect": 722, "subtarget": [774, 786], "successor": [721, 749], "suffic": 588, "suffix": 588, "suffixed": 776, "suggest": 724, "suit": [617, 683, 685, 752, 758, 779, 780, 781], "summar": 747, "summary": [597, 624, 645, 681, 715], "superblock": 740, "supercl": 775, "supplied": 717, "support": [586, 608, 662, 673, 676, 700, 717, 731, 748, 754, 770, 771, 772, 786, 811], "supported": [591, 600, 608, 642, 676, 715, 768, 770], "supporting": 731, "suspend": 665, "svn": 751, "swift": 715, "switch": [600, 611, 715], "switched": 665, "switchinst": [600, 746], "swizzl": 589, "symbol": [590, 591, 615, 627, 641, 645, 675, 718, 721, 731, 734, 737, 739, 742, 746], "symboliz": 655, "sync": [591, 682], "synops": [612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660], "syntax": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 588, 589, 590, 612, 665, 675, 715, 729, 748, 768, 777, 809, 820], "synthesized": 715, "system": [591, 670, 683, 685, 715, 771, 773], "systemz": 663, "tabl": [591, 608, 641, 673, 675, 721, 738, 746, 754, 759, 765, 774, 783, 819], "tableau": 793, "tablegen": [608, 757, 774, 775, 776, 777, 778], "tag": [586, 587, 666, 707, 765, 792], "tagging": [707, 725], "tail": [608, 746], "tailcallelim": 746, "talk": 724, "target": [591, 608, 620, 656, 670, 673, 675, 681, 690, 695, 705, 715, 717, 721, 729, 746, 757, 786, 815, 817], "targetdat": 746, "targetframelowering": 608, "targetinstrinfo": [608, 786], "targetjitinfo": 608, "targetlibraryinfo": 657, "targetlowering": 608, "targetmachin": 608, "targetregisterinfo": [608, 786], "targetsubtarget": 608, "task": [707, 749], "tba": [590, 715], "tblgen": [614, 619, 656, 658, 660], "teardown": 715, "tech": 724, "techniqu": 766, "tel": [681, 730], "templat": [715, 722, 749, 767], "tempting": 766, "terminator": 715, "terminology": [599, 667, 683, 719], "test": [592, 603, 606, 613, 617, 670, 683, 685, 705, 710, 715, 728, 752, 758, 776, 779, 780, 781], "testing": [694, 705, 707, 710, 714, 717, 721, 747, 756, 769, 781, 783, 787], "text": [586, 661, 767, 775], "tfe": 589, "tgt": [78, 171, 266, 542], "than": 681, "that": [586, 662, 676, 681, 766, 776], "the": [585, 586, 592, 594, 606, 608, 611, 612, 661, 666, 670, 671, 673, 676, 677, 678, 680, 681, 683, 685, 699, 704, 705, 707, 708, 710, 713, 714, 715, 716, 717, 722, 724, 726, 728, 729, 730, 731, 732, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 747, 749, 751, 752, 753, 755, 757, 758, 759, 760, 762, 766, 767, 770, 775, 776, 777, 779, 780, 785, 786, 787, 788, 790, 795, 808, 809, 812, 813, 814, 815, 817], "then": 812, "ther": 676, "thing": [676, 678], "thinlto": 715, "this": [676, 678, 681, 717, 722, 727, 751, 757, 767, 814, 816], "thought": 810, "thread": [591, 715, 749], "threading": 746, "threadsafecontext": 731, "threadsafemodul": 731, "threshold": 790, "through": 611, "throw": [673, 771], "thumb": 708, "ti": 772, "tidbit": 817, "tim": [610, 611, 699, 718, 726, 766, 816], "timelin": [640, 707], "timing": 775, "tinyptrvector": 749, "tip": [596, 678, 714, 817], "tir": 813, "tl": 766, "tli": 657, "tma": 590, "to": [585, 586, 591, 592, 594, 599, 602, 608, 610, 611, 614, 619, 640, 650, 656, 658, 660, 661, 664, 670, 671, 672, 676, 678, 679, 680, 681, 683, 685, 695, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 722, 724, 727, 729, 730, 731, 733, 741, 746, 749, 751, 754, 757, 758, 759, 762, 766, 767, 775, 776, 792, 795, 797, 810, 815], "toc": 585, "togeth": 815, "token": [673, 715], "too": 753, "tool": [602, 605, 610, 613, 616, 628, 634, 635, 636, 638, 642, 644, 646, 647, 654, 671, 676, 679, 683, 714, 749, 757, 775, 789, 790], "toolchain": [670, 683, 703], "top": [661, 731], "topic": [606, 749, 756, 784, 819], "tos": 731, "town": 724, "toy": 717, "tpi": 743, "trac": [789, 790, 791], "tracing": 717, "tracking": 779, "trad": 669, "tradeoff": [726, 766], "trampolin": 715, "transform": [594, 665, 710, 746, 782], "transformed": 765, "transit": [673, 715, 732, 753, 766, 770], "transitioning": 731, "translat": 690, "translating": 690, "transparency": [762, 763], "transpos": 715, "trap": [590, 591, 715], "traversal": 749, "tre": [746, 750, 752, 809], "treat": 611, "triaging": 601, "trick": 817, "trip": 785, "tripl": [591, 608, 715, 729], "trivial": 811, "troph": 717, "troubleshooting": 705, "tru": 776, "trunc": 715, "truncat": 689, "try": [673, 705, 715], "tscwrap": 791, "ttmp": 590, "tuning": 618, "turn": [611, 676], "turning": 749, "tutorial": [612, 684, 695, 729, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 817, 818, 819], "tvm": 752, "twin": 749, "two": [608, 667, 681], "typ": [14, 79, 172, 267, 333, 350, 430, 543, 585, 586, 588, 590, 592, 607, 611, 645, 666, 674, 678, 681, 688, 689, 715, 732, 735, 736, 743, 746, 749, 761, 774, 776, 783, 785, 786, 792], "type_block": 598, "type_code_array": 598, "type_code_bfloat": 598, "type_code_doubl": 598, "type_code_float": 598, "type_code_fp128": 598, "type_code_funct": 598, "type_code_function_old": 598, "type_code_half": 598, "type_code_integ": 598, "type_code_label": 598, "type_code_metadat": 598, "type_code_numentry": 598, "type_code_opaqu": 598, "type_code_point": 598, "type_code_ppc_fp128": 598, "type_code_struct_anon": 598, "type_code_struct_nam": 598, "type_code_struct_named": 598, "type_code_vector": 598, "type_code_void": 598, "type_code_x86_amx": 598, "type_code_x86_fp80": 598, "type_code_x86_mmx": 598, "typecheckedloadconstvcall": 715, "typecheckedloadvcall": 715, "typedin": 775, "typeid": 673, "typeidinfo": 715, "typetest": 715, "typetestassumeconstvcall": 715, "typetestassumevcall": 715, "uadd": 715, "ubsantrap": 715, "udiv": 715, "ufmt": 589, "uglygep": 681, "ui": 671, "uimm20": 590, "uimm32": 590, "uimm8": 590, "uitofp": 715, "umax": 715, "umin": 715, "umul": 715, "unabbrev_record": 598, "unary": [590, 715, 813], "undef": 676, "undefined": [585, 586, 715, 729], "underflow": 700, "underlying": 681, "understand": 676, "uniform": 591, "unify": 746, "unintentionally": 610, "union": [585, 586, 667, 715], "uniqu": 792, "uniquevector": 749, "unit": [586, 591, 608, 640, 781, 816], "universal": 638, "unknown": 785, "unnecessary": 611, "unordered": [595, 715], "unorm": 589, "unpacked": 591, "unpacking": 683, "unpredict": 715, "unreach": [676, 715], "unroll": [715, 746, 782], "unroll_and_jam": 715, "unrolling": [782, 785], "unsetin": 775, "unspecified": 591, "unswitch": 746, "unused": [746, 771], "unwind": 608, "unwindless": 746, "up": [591, 671, 676, 682, 708, 731, 747, 787, 788], "updat": [592, 671, 707, 710, 751], "updating": [594, 670, 710, 726, 728, 751], "uploading": 728, "urem": 715, "uri": 591, "url": 671, "usabl": 753, "usag": [585, 586, 602, 606, 646, 672, 692, 699, 700, 713, 714, 717, 725, 733, 761, 768, 785], "use": [610, 611, 671, 676, 678, 681, 700, 705, 711, 712, 715, 717, 726, 731, 746, 749, 766, 767, 771], "used": [606, 608, 610, 715, 746], "useful": [594, 607, 749, 817], "user": [591, 618, 717, 729, 746, 749, 784, 792, 813, 814], "ushl": 715, "using": [594, 597, 602, 608, 611, 640, 662, 673, 676, 679, 680, 683, 685, 699, 704, 705, 706, 710, 717, 730, 733, 747, 749, 757, 776, 783, 788, 789, 795, 797], "usub": 715, "util": 683, "utilit": [679, 756], "utility": [710, 714, 746, 770, 792], "v": [590, 607, 657, 661, 662, 663, 700, 743, 757], "v2": 591, "v3": 591, "v4": 591, "v5": 591, "va_arg": 715, "va_copy": 715, "va_end": 715, "va_start": 715, "vaddr": [80, 81, 82, 83, 84, 85, 173, 174, 175, 176, 268, 269, 270, 271, 351, 352, 431, 432, 433, 434, 435, 436, 544, 545, 546, 547, 548, 549], "valid": 792, "validat": 758, "valu": [585, 586, 590, 591, 661, 676, 681, 710, 715, 717, 721, 727, 733, 746, 749, 765, 766, 776, 792], "value_symtab_block": 598, "valuemap": 749, "valuesymbolt": 749, "var": 715, "vari": [751, 766], "variabl": [585, 598, 606, 607, 608, 611, 612, 675, 715, 721, 746, 750, 753, 764, 765, 776, 785, 814, 816], "variadic": 689, "various": 746, "varying": 721, "vbr": 598, "vcall_visibility": 783, "vcc": [86, 177, 272, 437, 550, 590], "vccz": 590, "vdat": [87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 273, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 353, 354, 438, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 551, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565], "vdata0": [88, 89, 179, 180, 274, 275, 439, 440, 552, 553], "vdata1": [90, 91, 181, 182, 276, 277, 441, 442, 554, 555], "vdst": [15, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 319, 324, 334, 355, 356, 357, 358, 359, 360, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "ve": 663, "vecmathlib": 752, "vector": [585, 586, 681, 689, 693, 715, 738, 749, 754], "vectoriz": [715, 746, 755, 782, 785], "vendor": 591, "verif": [605, 770], "verifi": [612, 676, 746], "verify": [631, 746], "vers": 749, "version": [585, 586, 611, 668, 707, 717], "versioning": 782, "vgpr": 591, "vgpr_count": 591, "vi": [714, 747, 779], "vic": 749, "view": [607, 640, 746, 759, 790], "viewing": 749, "vintrp": [0, 2, 3, 4, 589], "virtual": [608, 611, 676, 688, 771, 783], "visibility": 715, "visual": [606, 685], "visualiz": 790, "vla": 681, "vliw": 608, "vm": 589, "void": [715, 727], "volatil": 715, "vop1": [0, 2, 3, 4, 9], "vop2": [0, 1, 2, 3, 4, 7, 8, 9], "vop3": [0, 2, 3, 4, 7, 8, 9, 589], "vop3p": [0, 1, 4, 5, 6, 7, 8, 9, 589], "vopc": [0, 2, 3, 4, 9], "vp": [715, 754], "vplan": 755, "vscal": 715, "vsrc": [16, 116, 117, 118, 119, 205, 206, 207, 208, 310, 311, 312, 313, 335, 361, 362, 363, 364, 365, 366, 367, 473, 474, 475, 476, 477, 478, 580, 581, 582, 583], "waitcnt": [120, 209, 314, 479, 584], "walk": 726, "wallclocktim": 791, "want": 671, "warning": [611, 674, 746, 772], "way": [664, 681], "we": [601, 671, 727, 728], "web": [671, 747], "webassembly": 757, "websit": 707, "weight": [599, 600], "weighted": 646, "wel": [671, 715], "what": [602, 610, 671, 676, 678, 680, 681, 717, 727, 751, 760, 762, 772, 787, 788], "when": [602, 610, 611, 676, 678, 710, 717], "wher": [676, 724], "wherev": 611, "wheth": 661, "which": [594, 672, 681, 734], "whil": [749, 766], "whitespac": 611, "who": [610, 671], "why": [672, 676, 681, 717, 751, 814, 816], "wid": 682, "widen": 715, "widening": 715, "width": [598, 611, 678, 715], "will": 671, "window": [655, 663, 673, 675, 703, 717, 757], "wis": 715, "with": [600, 601, 606, 611, 661, 662, 670, 671, 676, 680, 681, 683, 685, 699, 704, 714, 715, 727, 728, 729, 730, 732, 746, 747, 749, 751, 759, 765, 766, 779, 785, 787, 788, 790, 794, 818, 819], "without": [667, 676], "won": 722, "word": 598, "work": [591, 640, 664, 671, 681, 698, 717, 727, 731, 766, 769, 789], "workflow": [610, 751, 755], "working": [601, 670, 765], "workspac": 728, "world": [787, 788], "wrapp": 598, "wrapper": 607, "writ": [611, 640, 676, 680, 751], "write_regist": 715, "writer": 663, "writing": [594, 608, 661, 679, 680, 681, 750, 780, 781, 786, 787, 788], "written": 676, "x": [681, 752], "x86": [608, 663, 675, 757, 766], "x86_64": 706, "x86_amx": 715, "x86_mmx": 715, "x86evex2vex": 774, "xcoff": [643, 650], "xcor": 663, "xnack_mask": 590, "xor": 715, "xray": [756, 789, 790, 791], "yaml": [759, 792], "yaml2obj": 820, "yaml2pdb": 645, "you": [722, 760], "your": [606, 671, 701, 708, 724, 728, 749, 788, 789], "yourself": 726, "zen": 766, "zero": 673, "zext": [678, 715], "zipping": 751, "\u00c0": [591, 606, 661, 708, 793, 810]}})