Search.setIndex({"alltitles": {"!vcall_visibility Metadata": [[643, "vcall-visibility-metadata"]], "#0 - BLOCKINFO Block": [[473, "blockinfo-block"]], "#include <iostream> is Forbidden": [[486, "include-iostream-is-forbidden"]], "#include Style": [[486, "include-style"]], "#include as Little as Possible": [[486, "include-as-little-as-possible"]], "-aa-eval: Exhaustive Alias Analysis Precision Evaluator": [[607, "aa-eval-exhaustive-alias-analysis-precision-evaluator"]], "-adce: Aggressive Dead Code Elimination": [[607, "adce-aggressive-dead-code-elimination"]], "-aggressive-instcombine: Combine expression patterns": [[607, "aggressive-instcombine-combine-expression-patterns"]], "-always-inline: Inliner for always_inline functions": [[607, "always-inline-inliner-for-always-inline-functions"]], "-argpromotion: Promote \u201cby reference\u201d arguments to scalars": [[607, "argpromotion-promote-by-reference-arguments-to-scalars"]], "-basic-aa: Basic Alias Analysis (stateless AA impl)": [[607, "basic-aa-basic-alias-analysis-stateless-aa-impl"]], "-basiccg: Basic CallGraph Construction": [[607, "basiccg-basic-callgraph-construction"]], "-bb-vectorize: Basic-Block Vectorization": [[607, "bb-vectorize-basic-block-vectorization"]], "-block-placement: Profile Guided Basic Block Placement": [[607, "block-placement-profile-guided-basic-block-placement"]], "-break-crit-edges: Break critical edges in CFG": [[607, "break-crit-edges-break-critical-edges-in-cfg"]], "-codegenprepare: Optimize for code generation": [[607, "codegenprepare-optimize-for-code-generation"]], "-constmerge: Merge Duplicate Global Constants": [[607, "constmerge-merge-duplicate-global-constants"]], "-count-aa: Count Alias Analysis Query Responses": [[607, "count-aa-count-alias-analysis-query-responses"]], "-da: Dependence Analysis": [[607, "da-dependence-analysis"]], "-dce: Dead Code Elimination": [[607, "dce-dead-code-elimination"]], "-deadargelim: Dead Argument Elimination": [[607, "deadargelim-dead-argument-elimination"]], "-deadarghaX0r: Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)": [[607, "deadarghax0r-dead-argument-hacking-bugpoint-use-only-do-not-use"]], "-deadtypeelim: Dead Type Elimination": [[607, "deadtypeelim-dead-type-elimination"]], "-debug-aa: AA use debugger": [[607, "debug-aa-aa-use-debugger"]], "-die: Dead Instruction Elimination": [[607, "die-dead-instruction-elimination"]], "-domfrontier: Dominance Frontier Construction": [[607, "domfrontier-dominance-frontier-construction"]], "-domtree: Dominator Tree Construction": [[607, "domtree-dominator-tree-construction"]], "-dot-callgraph: Print Call Graph to \u00ab\u00a0dot\u00a0\u00bb file": [[607, "dot-callgraph-print-call-graph-to-dot-file"]], "-dot-cfg-only: Print CFG of function to \u00ab\u00a0dot\u00a0\u00bb file (with no function bodies)": [[607, "dot-cfg-only-print-cfg-of-function-to-dot-file-with-no-function-bodies"]], "-dot-cfg: Print CFG of function to \u00ab\u00a0dot\u00a0\u00bb file": [[607, "dot-cfg-print-cfg-of-function-to-dot-file"]], "-dot-dom-only: Print dominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file (with no function bodies)": [[607, "dot-dom-only-print-dominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-dom: Print dominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file": [[607, "dot-dom-print-dominance-tree-of-function-to-dot-file"]], "-dot-postdom-only: Print postdominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file (with no function bodies)": [[607, "dot-postdom-only-print-postdominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-postdom: Print postdominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file": [[607, "dot-postdom-print-postdominance-tree-of-function-to-dot-file"]], "-dse: Dead Store Elimination": [[607, "dse-dead-store-elimination"]], "-extract-blocks: Extract Basic Blocks From Module (for bugpoint use)": [[607, "extract-blocks-extract-basic-blocks-from-module-for-bugpoint-use"]], "-function-attrs: Deduce function attributes": [[607, "function-attrs-deduce-function-attributes"]], "-globaldce: Dead Global Elimination": [[607, "globaldce-dead-global-elimination"]], "-globalopt: Global Variable Optimizer": [[607, "globalopt-global-variable-optimizer"]], "-globalsmodref-aa: Simple mod/ref analysis for globals": [[607, "globalsmodref-aa-simple-mod-ref-analysis-for-globals"]], "-gvn: Global Value Numbering": [[607, "gvn-global-value-numbering"]], "-indvars: Canonicalize Induction Variables": [[607, "indvars-canonicalize-induction-variables"]], "-inline: Function Integration/Inlining": [[607, "inline-function-integration-inlining"]], "-instcombine: Combine redundant instructions": [[607, "instcombine-combine-redundant-instructions"]], "-instcount: Counts the various types of Instructions": [[607, "instcount-counts-the-various-types-of-instructions"]], "-instnamer: Assign names to anonymous instructions": [[607, "instnamer-assign-names-to-anonymous-instructions"]], "-internalize: Internalize Global Symbols": [[607, "internalize-internalize-global-symbols"]], "-intervals: Interval Partition Construction": [[607, "intervals-interval-partition-construction"]], "-ipsccp: Interprocedural Sparse Conditional Constant Propagation": [[607, "ipsccp-interprocedural-sparse-conditional-constant-propagation"]], "-iv-users: Induction Variable Users": [[607, "iv-users-induction-variable-users"]], "-jump-threading: Jump Threading": [[607, "jump-threading-jump-threading"]], "-lazy-value-info: Lazy Value Information Analysis": [[607, "lazy-value-info-lazy-value-information-analysis"]], "-lcssa: Loop-Closed SSA Form Pass": [[607, "lcssa-loop-closed-ssa-form-pass"]], "-libcall-aa: LibCall Alias Analysis": [[607, "libcall-aa-libcall-alias-analysis"]], "-licm: Loop Invariant Code Motion": [[607, "licm-loop-invariant-code-motion"]], "-lint: Statically lint-checks LLVM IR": [[607, "lint-statically-lint-checks-llvm-ir"]], "-loop-deletion: Delete dead loops": [[607, "loop-deletion-delete-dead-loops"]], "-loop-extract-single: Extract at most one loop into a new function": [[607, "loop-extract-single-extract-at-most-one-loop-into-a-new-function"]], "-loop-extract: Extract loops into new functions": [[607, "loop-extract-extract-loops-into-new-functions"]], "-loop-reduce: Loop Strength Reduction": [[607, "loop-reduce-loop-strength-reduction"]], "-loop-rotate: Rotate Loops": [[607, "loop-rotate-rotate-loops"]], "-loop-simplify: Canonicalize natural loops": [[607, "loop-simplify-canonicalize-natural-loops"]], "-loop-unroll-and-jam: Unroll and Jam loops": [[607, "loop-unroll-and-jam-unroll-and-jam-loops"]], "-loop-unroll: Unroll loops": [[607, "loop-unroll-unroll-loops"]], "-loop-unswitch: Unswitch loops": [[607, "loop-unswitch-unswitch-loops"]], "-loops: Natural Loop Information": [[607, "loops-natural-loop-information"]], "-loweratomic: Lower atomic intrinsics to non-atomic form": [[607, "loweratomic-lower-atomic-intrinsics-to-non-atomic-form"]], "-lowerinvoke: Lower invokes to calls, for unwindless code generators": [[607, "lowerinvoke-lower-invokes-to-calls-for-unwindless-code-generators"]], "-lowerswitch: Lower SwitchInsts to branches": [[607, "lowerswitch-lower-switchinsts-to-branches"]], "-mem2reg: Promote Memory to Register": [[607, "mem2reg-promote-memory-to-register"]], "-memcpyopt: MemCpy Optimization": [[607, "memcpyopt-memcpy-optimization"]], "-memdep: Memory Dependence Analysis": [[607, "memdep-memory-dependence-analysis"]], "-mergefunc: Merge Functions": [[607, "mergefunc-merge-functions"]], "-mergereturn: Unify function exit nodes": [[607, "mergereturn-unify-function-exit-nodes"]], "-module-debuginfo: Decodes module-level debug info": [[607, "module-debuginfo-decodes-module-level-debug-info"]], "-partial-inliner: Partial Inliner": [[607, "partial-inliner-partial-inliner"]], "-postdomfrontier: Post-Dominance Frontier Construction": [[607, "postdomfrontier-post-dominance-frontier-construction"]], "-postdomtree: Post-Dominator Tree Construction": [[607, "postdomtree-post-dominator-tree-construction"]], "-print-alias-sets: Alias Set Printer": [[607, "print-alias-sets-alias-set-printer"]], "-print-callgraph-sccs: Print SCCs of the Call Graph": [[607, "print-callgraph-sccs-print-sccs-of-the-call-graph"]], "-print-callgraph: Print a call graph": [[607, "print-callgraph-print-a-call-graph"]], "-print-cfg-sccs: Print SCCs of each function CFG": [[607, "print-cfg-sccs-print-sccs-of-each-function-cfg"]], "-print-dom-info: Dominator Info Printer": [[607, "print-dom-info-dominator-info-printer"]], "-print-externalfnconstants: Print external fn callsites passed constants": [[607, "print-externalfnconstants-print-external-fn-callsites-passed-constants"]], "-print-function: Print function to stderr": [[607, "print-function-print-function-to-stderr"]], "-print-module: Print module to stderr": [[607, "print-module-print-module-to-stderr"]], "-print-used-types: Find Used Types": [[607, "print-used-types-find-used-types"]], "-prune-eh: Remove unused exception handling info": [[607, "prune-eh-remove-unused-exception-handling-info"]], "-reassociate: Reassociate expressions": [[607, "reassociate-reassociate-expressions"]], "-reg2mem: Demote all values to stack slots": [[607, "reg2mem-demote-all-values-to-stack-slots"]], "-regions: Detect single entry single exit regions": [[607, "regions-detect-single-entry-single-exit-regions"]], "-scalar-evolution: Scalar Evolution Analysis": [[607, "scalar-evolution-scalar-evolution-analysis"]], "-sccp: Sparse Conditional Constant Propagation": [[607, "sccp-sparse-conditional-constant-propagation"]], "-scev-aa: ScalarEvolution-based Alias Analysis": [[607, "scev-aa-scalarevolution-based-alias-analysis"]], "-simplifycfg: Simplify the CFG": [[607, "simplifycfg-simplify-the-cfg"]], "-sink: Code sinking": [[607, "sink-code-sinking"]], "-sroa: Scalar Replacement of Aggregates": [[607, "sroa-scalar-replacement-of-aggregates"]], "-stack-safety: Stack Safety Analysis": [[607, "stack-safety-stack-safety-analysis"]], "-strip-dead-debug-info: Strip debug info for unused symbols": [[607, "strip-dead-debug-info-strip-debug-info-for-unused-symbols"]], "-strip-dead-prototypes: Strip Unused Function Prototypes": [[607, "strip-dead-prototypes-strip-unused-function-prototypes"]], "-strip-debug-declare: Strip all llvm.dbg.declare intrinsics": [[607, "strip-debug-declare-strip-all-llvm-dbg-declare-intrinsics"]], "-strip-nondebug: Strip all symbols, except dbg symbols, from a module": [[607, "strip-nondebug-strip-all-symbols-except-dbg-symbols-from-a-module"]], "-strip: Strip all symbols from a module": [[607, "strip-strip-all-symbols-from-a-module"]], "-tailcallelim: Tail Call Elimination": [[607, "tailcallelim-tail-call-elimination"]], "-targetdata: Target Data Layout": [[607, "targetdata-target-data-layout"]], "-transform-warning: Report missed forced transformations": [[607, "transform-warning-report-missed-forced-transformations"]], "-verify: Module Verifier": [[607, "verify-module-verifier"]], "-view-cfg-only: View CFG of function (with no function bodies)": [[607, "view-cfg-only-view-cfg-of-function-with-no-function-bodies"]], "-view-cfg: View CFG of function": [[607, "view-cfg-view-cfg-of-function"]], "-view-dom-only: View dominance tree of function (with no function bodies)": [[607, "view-dom-only-view-dominance-tree-of-function-with-no-function-bodies"]], "-view-dom: View dominance tree of function": [[607, "view-dom-view-dominance-tree-of-function"]], "-view-postdom-only: View postdominance tree of function (with no function bodies)": [[607, "view-postdom-only-view-postdominance-tree-of-function-with-no-function-bodies"]], "-view-postdom: View postdominance tree of function": [[607, "view-postdom-view-postdominance-tree-of-function"]], ".amd_kernel_code_t": [[466, "amd-kernel-code-t"]], ".amdgcn.gfx_generation_minor": [[466, "amdgcn-gfx-generation-minor"]], ".amdgcn.gfx_generation_number": [[466, "amdgcn-gfx-generation-number"]], ".amdgcn.gfx_generation_stepping": [[466, "amdgcn-gfx-generation-stepping"]], ".amdgcn.next_free_sgpr": [[466, "amdgcn-next-free-sgpr"]], ".amdgcn.next_free_vgpr": [[466, "amdgcn-next-free-vgpr"]], ".amdgcn_target <target-triple> \u00ab\u00a0-\u00a0\u00bb <target-id>": [[466, "amdgcn-target-target-triple-target-id"]], ".amdgpu_hsa_kernel (name)": [[466, "amdgpu-hsa-kernel-name"]], ".amdgpu_metadata": [[466, "amdgpu-metadata"]], ".amdhsa_kernel <name>": [[466, "amdhsa-kernel-name"]], ".cv_def_range Directive": [[542, "cv-def-range-directive"]], ".cv_file Directive": [[542, "cv-file-directive"]], ".cv_filechecksumoffset Directive": [[542, "cv-filechecksumoffset-directive"]], ".cv_filechecksums Directive": [[542, "cv-filechecksums-directive"]], ".cv_fpo_data Directive": [[542, "cv-fpo-data-directive"]], ".cv_func_id Directive": [[542, "cv-func-id-directive"]], ".cv_inline_linetable Directive": [[542, "cv-inline-linetable-directive"]], ".cv_inline_site_id Directive": [[542, "cv-inline-site-id-directive"]], ".cv_linetable Directive": [[542, "cv-linetable-directive"]], ".cv_loc Directive": [[542, "cv-loc-directive"]], ".cv_stringtable Directive": [[542, "cv-stringtable-directive"]], ".debug_info section attribute form roles": [[461, "amdgpu-dwarf-debug-info-section-attribute-form-roles-table"]], ".hsa_code_object_isa [major, minor, stepping, vendor, arch]": [[466, "hsa-code-object-isa-major-minor-stepping-vendor-arch"]], ".hsa_code_object_version major, minor": [[466, "hsa-code-object-version-major-minor"]], ".kernel.sgpr_count": [[466, "kernel-sgpr-count"]], ".kernel.vgpr_count": [[466, "kernel-vgpr-count"]], ".linker-options Section (linker options)": [[542, "linker-options-section-linker-options"]], ".linkonce Directive": [[542, "linkonce-directive"]], ".o File Writing": [[483, "o-file-writing"]], ".option.machine_version_major": [[466, "option-machine-version-major"]], ".option.machine_version_minor": [[466, "option-machine-version-minor"]], ".option.machine_version_stepping": [[466, "option-machine-version-stepping"]], ".section Directive": [[542, "section-directive"], [542, "id2"]], "1. IR-level VP intrinsics": [[615, "ir-level-vp-intrinsics"]], "1.1.1\u00a0\u00a0\u00a0Concepts": [[636, "concepts"]], "1.10\u00a0\u00a0\u00a0Appendix A: Bang Operators": [[636, "appendix-a-bang-operators"]], "1.10\u00a0\u00a0\u00a0Printing Error Messages": [[635, "printing-error-messages"]], "1.11.1\u00a0\u00a0\u00a0The PrintRecords Backend": [[635, "the-printrecords-backend"]], "1.11.2\u00a0\u00a0\u00a0The PrintDetailedRecords Backend": [[635, "the-printdetailedrecords-backend"]], "1.11.3\u00a0\u00a0\u00a0Timing TableGen Phases": [[635, "timing-tablegen-phases"]], "1.11\u00a0\u00a0\u00a0Appendix B: Paste Operator Examples": [[636, "appendix-b-paste-operator-examples"]], "1.11\u00a0\u00a0\u00a0Debugging Tools": [[635, "debugging-tools"]], "1.12\u00a0\u00a0\u00a0Appendix C: Sample Record": [[636, "appendix-c-sample-record"]], "1.1\u00a0\u00a0\u00a0Introduction": [[635, "introduction"], [636, "introduction"]], "1.2.1\u00a0\u00a0\u00a0RecordKeeper": [[635, "recordkeeper"]], "1.2.2\u00a0\u00a0\u00a0Record": [[635, "record"]], "1.2.3\u00a0\u00a0\u00a0RecordVal": [[635, "recordval"]], "1.2.4.1\u00a0\u00a0\u00a0BitsRecTy": [[635, "bitsrecty"]], "1.2.4.2\u00a0\u00a0\u00a0ListRecTy": [[635, "listrecty"]], "1.2.4.3\u00a0\u00a0\u00a0RecordRecTy": [[635, "recordrecty"]], "1.2.4\u00a0\u00a0\u00a0RecTy": [[635, "recty"]], "1.2.5.1\u00a0\u00a0\u00a0UnsetInit": [[635, "unsetinit"]], "1.2.5.2\u00a0\u00a0\u00a0TypedInit": [[635, "typedinit"]], "1.2.5.3\u00a0\u00a0\u00a0BitInit": [[635, "bitinit"]], "1.2.5.4\u00a0\u00a0\u00a0BitsInit": [[635, "bitsinit"]], "1.2.5.5\u00a0\u00a0\u00a0DagInit": [[635, "daginit"]], "1.2.5.6\u00a0\u00a0\u00a0DefInit": [[635, "definit"]], "1.2.5.7\u00a0\u00a0\u00a0IntInit": [[635, "intinit"]], "1.2.5.8\u00a0\u00a0\u00a0ListInit": [[635, "listinit"]], "1.2.5.9\u00a0\u00a0\u00a0StringInit": [[635, "stringinit"]], "1.2.5\u00a0\u00a0\u00a0Init": [[635, "init"]], "1.2\u00a0\u00a0\u00a0Data Structures": [[635, "data-structures"]], "1.2\u00a0\u00a0\u00a0Source Files": [[636, "source-files"]], "1.3.1\u00a0\u00a0\u00a0Literals": [[636, "literals"]], "1.3.2\u00a0\u00a0\u00a0Identifiers": [[636, "identifiers"]], "1.3.3\u00a0\u00a0\u00a0Bang operators": [[636, "bang-operators"]], "1.3.4\u00a0\u00a0\u00a0Include files": [[636, "include-files"]], "1.3\u00a0\u00a0\u00a0Creating a New Backend": [[635, "creating-a-new-backend"]], "1.3\u00a0\u00a0\u00a0Lexical Analysis": [[636, "lexical-analysis"]], "1.4\u00a0\u00a0\u00a0The Backend Skeleton": [[635, "the-backend-skeleton"]], "1.4\u00a0\u00a0\u00a0Types": [[636, "types"]], "1.5.1\u00a0\u00a0\u00a0Simple values": [[636, "simple-values"]], "1.5.2\u00a0\u00a0\u00a0Suffixed values": [[636, "suffixed-values"]], "1.5.3\u00a0\u00a0\u00a0The paste operator": [[636, "the-paste-operator"]], "1.5\u00a0\u00a0\u00a0Getting Classes": [[635, "getting-classes"]], "1.5\u00a0\u00a0\u00a0Values and Expressions": [[636, "values-and-expressions"]], "1.6.1.1\u00a0\u00a0\u00a0Record Bodies": [[636, "record-bodies"]], "1.6.10\u00a0\u00a0\u00a0foreach \u2014 iterate over a sequence of statements": [[636, "foreach-iterate-over-a-sequence-of-statements"]], "1.6.11\u00a0\u00a0\u00a0if \u2014 select statements based on a test": [[636, "if-select-statements-based-on-a-test"]], "1.6.12\u00a0\u00a0\u00a0assert \u2014 check that a condition is true": [[636, "assert-check-that-a-condition-is-true"]], "1.6.1\u00a0\u00a0\u00a0class \u2014 define an abstract record class": [[636, "class-define-an-abstract-record-class"]], "1.6.2\u00a0\u00a0\u00a0def \u2014 define a concrete record": [[636, "def-define-a-concrete-record"]], "1.6.3\u00a0\u00a0\u00a0Examples: classes and records": [[636, "examples-classes-and-records"]], "1.6.4\u00a0\u00a0\u00a0let \u2014 override fields in classes or records": [[636, "let-override-fields-in-classes-or-records"]], "1.6.5\u00a0\u00a0\u00a0multiclass \u2014 define multiple records": [[636, "multiclass-define-multiple-records"]], "1.6.6\u00a0\u00a0\u00a0defm \u2014 invoke multiclasses to define multiple records": [[636, "defm-invoke-multiclasses-to-define-multiple-records"]], "1.6.7\u00a0\u00a0\u00a0Examples: multiclasses and defms": [[636, "examples-multiclasses-and-defms"]], "1.6.8\u00a0\u00a0\u00a0defset \u2014 create a definition set": [[636, "defset-create-a-definition-set"]], "1.6.9\u00a0\u00a0\u00a0defvar \u2014 define a variable": [[636, "defvar-define-a-variable"]], "1.6\u00a0\u00a0\u00a0Getting Records": [[635, "getting-records"]], "1.6\u00a0\u00a0\u00a0Statements": [[636, "statements"]], "1.7.1\u00a0\u00a0\u00a0Directed acyclic graphs (DAGs)": [[636, "directed-acyclic-graphs-dags"]], "1.7.2\u00a0\u00a0\u00a0Defvar in a record body": [[636, "defvar-in-a-record-body"]], "1.7.3\u00a0\u00a0\u00a0How records are built": [[636, "how-records-are-built"]], "1.7\u00a0\u00a0\u00a0Additional Details": [[636, "additional-details"]], "1.7\u00a0\u00a0\u00a0Getting Record Names and Fields": [[635, "getting-record-names-and-fields"]], "1.8\u00a0\u00a0\u00a0Getting Record Superclasses": [[635, "getting-record-superclasses"]], "1.8\u00a0\u00a0\u00a0Using Classes as Subroutines": [[636, "using-classes-as-subroutines"]], "1.9\u00a0\u00a0\u00a0Emitting Text to the Output Stream": [[635, "emitting-text-to-the-output-stream"]], "1.9\u00a0\u00a0\u00a0Preprocessing Facilities": [[636, "preprocessing-facilities"]], "10,000 ft View": [[482, "ft-view"]], "1\u00a0\u00a0\u00a0TableGen Backend Developer\u2019s Guide": [[635, null]], "1\u00a0\u00a0\u00a0TableGen Programmer\u2019s Reference": [[636, null]], "2. CodeGen support": [[615, "codegen-support"]], "3-Stage Non-Determinism": [[468, "stage-non-determinism"]], "3. Lift InstSimplify/InstCombine/DAGCombiner to VP": [[615, "lift-instsimplify-instcombine-dagcombiner-to-vp"]], "32-Bit and 64-Bit DWARF Formats": [[461, "bit-and-64-bit-dwarf-formats"], [466, "bit-and-64-bit-dwarf-formats"]], "4. Deprecate llvm.masked.* / llvm.experimental.reduce.*": [[615, "deprecate-llvm-masked-llvm-experimental-reduce"]], "5. Predicated IR Instructions": [[615, "predicated-ir-instructions"]], "6-bit characters": [[473, "bit-characters"]], "64-bit load checking instructions": [[626, "bit-load-checking-instructions"]], "<algorithm>": [[531, "algorithm"]], "<deque>": [[609, "deque"]], "<list>": [[609, "list"]], "<map>": [[609, "map"]], "<math.h> and <cmath>": [[531, "math-h-and-cmath"]], "<set>": [[609, "set"]], "<std::complex>": [[531, "std-complex"]], "<vector>": [[609, "vector"]], "A": [[580, "a"]], "A Benchmark for the C/C++ Standard Library": [[613, "a-benchmark-for-the-c-c-standard-library"]], "A Bug to be Aware Of": [[573, "a-bug-to-be-aware-of"]], "A Spectre Variant #1 Mitigation Technique": [[626, "a-spectre-variant-1-mitigation-technique"]], "A flag-less alternative on Haswell, Zen and newer processors": [[626, "a-flag-less-alternative-on-haswell-zen-and-newer-processors"]], "A guide to Dockerfiles for building LLVM": [[539, null]], "A sorted \u201cvector\u201d": [[609, "a-sorted-vector"], [609, "dss-sortedvectormap"]], "AAPCS": [[472, "aapcs"]], "AArch64 & ARM": [[532, "aarch64-arm"]], "AArch64 Target": [[570, "aarch64-target"]], "ABI": [[532, "abi"]], "ABI Breaking Checks": [[609, "abi-breaking-checks"]], "ABI Compatibility": [[612, "abi-compatibility"]], "ADDITIONAL OPTIONS": [[491, "additional-options"]], "AFL compatibility": [[581, "afl-compatibility"]], "AMDGPU": [[532, "amdgpu"]], "AMDGPU Address Spaces": [[466, "amdgpu-address-spaces-table"]], "AMDGPU Architectures": [[466, "amdgpu-architecture-table"]], "AMDGPU Clang Debug Options": [[466, "amdgpu-clang-debug-options-table"]], "AMDGPU Code Object V2 ELF Note Record Enumeration Values": [[466, "amdgpu-elf-note-record-enumeration-values-v2-table"]], "AMDGPU Code Object V2 ELF Note Records": [[466, "amdgpu-elf-note-records-v2-table"]], "AMDGPU Code Object V2 Supported Processors and Fixed Target Feature Settings": [[466, "amdgpu-elf-note-record-supported-processors-v2-table"]], "AMDGPU Code Object V3 to V4 ELF Note Record Enumeration Values": [[466, "amdgpu-elf-note-record-enumeration-values-table-v3-v4"]], "AMDGPU Code Object V3 to V4 ELF Note Records": [[466, "amdgpu-elf-note-records-table-v3-v4"]], "AMDGPU DWARF Address Class Mapping": [[466, "amdgpu-dwarf-address-class-mapping-table"]], "AMDGPU DWARF Address Space Mapping": [[466, "amdgpu-dwarf-address-space-mapping-table"]], "AMDGPU DWARF Register Mapping": [[466, "amdgpu-dwarf-register-mapping-table"]], "AMDGPU EF_AMDGPU_MACH Values": [[466, "amdgpu-ef-amdgpu-mach-table"]], "AMDGPU ELF Header": [[466, "amdgpu-elf-header-table"]], "AMDGPU ELF Header Enumeration Values": [[466, "amdgpu-elf-header-enumeration-values-table"]], "AMDGPU ELF Header e_flags for Code Object V2": [[466, "amdgpu-elf-header-e-flags-v2-table"]], "AMDGPU ELF Header e_flags for Code Object V3": [[466, "amdgpu-elf-header-e-flags-table-v3"]], "AMDGPU ELF Header e_flags for Code Object V4": [[466, "amdgpu-elf-header-e-flags-table-v4"]], "AMDGPU ELF Relocation Records": [[466, "amdgpu-elf-relocation-records-table"]], "AMDGPU ELF Sections": [[466, "amdgpu-elf-sections-table"]], "AMDGPU ELF Symbols": [[466, "amdgpu-elf-symbols-table"]], "AMDGPU Environments": [[466, "amdgpu-environment-table"]], "AMDGPU Instruction Syntax": [[463, null]], "AMDGPU Instructions Notation": [[462, null]], "AMDGPU LLVM IR Attributes": [[466, "amdgpu-llvm-ir-attributes-table"]], "AMDGPU Operating Systems": [[466, "amdgpu-os"]], "AMDGPU Processors": [[466, "amdgpu-processor-table"]], "AMDGPU Target Features": [[466, "amdgpu-target-features-table"]], "AMDGPU Trap Handler for AMDHSA OS Code Object V2": [[466, "amdgpu-trap-handler-for-amdhsa-os-v2-table"]], "AMDGPU Trap Handler for AMDHSA OS Code Object V3": [[466, "amdgpu-trap-handler-for-amdhsa-os-v3-table"]], "AMDGPU Trap Handler for AMDHSA OS Code Object V4": [[466, "amdgpu-trap-handler-for-amdhsa-os-v4-table"]], "AMDGPU Trap Handler for Non-AMDHSA OS": [[466, "amdgpu-trap-handler-for-non-amdhsa-os-table"]], "AMDGPU Vendors": [[466, "amdgpu-vendor-table"]], "AMDHSA": [[466, "amdhsa"]], "AMDHSA Code Object V2 Kernel Argument Metadata Map": [[466, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-v2-table"]], "AMDHSA Code Object V2 Kernel Attribute Metadata Map": [[466, "amdgpu-amdhsa-code-object-kernel-attribute-metadata-map-v2-table"]], "AMDHSA Code Object V2 Kernel Code Properties Metadata Map": [[466, "amdgpu-amdhsa-code-object-kernel-code-properties-metadata-map-v2-table"]], "AMDHSA Code Object V2 Kernel Metadata Map": [[466, "amdgpu-amdhsa-code-object-kernel-metadata-map-v2-table"]], "AMDHSA Code Object V2 Metadata Map": [[466, "amdgpu-amdhsa-code-object-metadata-map-v2-table"]], "AMDHSA Code Object V3 Kernel Argument Metadata Map": [[466, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-table-v3"]], "AMDHSA Code Object V3 Kernel Metadata Map": [[466, "amdgpu-amdhsa-code-object-kernel-metadata-map-table-v3"]], "AMDHSA Code Object V3 Metadata Map": [[466, "amdgpu-amdhsa-code-object-metadata-map-table-v3"]], "AMDHSA Code Object V4 Metadata Map Changes from Code Object V3 Metadata": [[466, "amdgpu-amdhsa-code-object-metadata-map-table-v4"]], "AMDHSA Kernel Assembler Directives": [[466, "amdhsa-kernel-directives-table"]], "AMDHSA LLVM Sync Scopes": [[466, "amdgpu-amdhsa-llvm-sync-scopes-table"]], "AMDHSA Memory Model Code Sequences GFX10": [[466, "amdgpu-amdhsa-memory-model-code-sequences-gfx10-table"]], "AMDHSA Memory Model Code Sequences GFX6-GFX9": [[466, "amdgpu-amdhsa-memory-model-code-sequences-gfx6-gfx9-table"]], "AMDHSA Memory Model Single Thread Optimization Constraints": [[466, "amdgpu-amdhsa-memory-model-single-thread-optimization-constraints-table"]], "AMDHSA Memory Spaces": [[466, "amdgpu-amdhsa-memory-spaces-table"]], "AMDPAL": [[466, "amdpal"]], "API Reference": [[617, "api-reference"]], "API: InstructionSelector": [[557, "api-instructionselector"]], "API: LegalizerInfo": [[559, "api-legalizerinfo"]], "API: RegisterBankInfo": [[562, "api-registerbankinfo"]], "ARM64/COFF-Dependent": [[542, "arm64-coff-dependent"]], "AST Extensions for If/Then/Else": [[672, "ast-extensions-for-if-then-else"], [683, "ast-extensions-for-if-then-else"]], "AST Extensions for the \u201cfor\u201d Loop": [[672, "ast-extensions-for-the-for-loop"], [683, "ast-extensions-for-the-for-loop"]], "Abandoning a change": [[608, "abandoning-a-change"]], "Abbreviated Record Encoding": [[473, "abbreviated-record-encoding"]], "Abbreviation IDs": [[473, "abbreviation-ids"]], "Abbreviations": [[473, "abbreviations"]], "Absolute Expressions": [[465, "absolute-expressions"]], "Absolute Symbols": [[593, "absolute-symbols"]], "Absolute Symbols, Aliases, and Reexports": [[593, "absolute-symbols-aliases-and-reexports"]], "Abstract": [[473, "abstract"], [545, "abstract"], [547, "abstract"], [579, "abstract"], [613, "abstract"], [616, "abstract"], [631, "abstract"]], "Abstract Machine Model": [[630, "abstract-machine-model"]], "Accelerated Access": [[461, "accelerated-access"], [466, "accelerated-access"]], "Accepting membership": [[623, "accepting-membership"]], "Access": [[623, "access"]], "Accumulating Predicate State": [[626, "accumulating-predicate-state"]], "Accurate Garbage Collection Intrinsics": [[579, "accurate-garbage-collection-intrinsics"]], "Achieving Isolation with LLVMContext": [[609, "achieving-isolation-with-llvmcontext"]], "Acknowledge All Reviewer Feedback": [[485, "acknowledge-all-reviewer-feedback"]], "Acquire": [[470, "acquire"]], "AcquireRelease": [[470, "acquirerelease"]], "Actively working on fixing bugs": [[476, "actively-working-on-fixing-bugs"]], "Add SelectionDAG node types": [[467, "add-selectiondag-node-types"]], "Add documentation and tests": [[467, "add-documentation-and-tests"]], "Add the intrinsic": [[467, "add-the-intrinsic"]], "Adding Finer Granularity": [[594, "adding-finer-granularity"]], "Adding a JIT Compiler": [[671, "adding-a-jit-compiler"], [682, "adding-a-jit-compiler"]], "Adding a New Target": [[538, "adding-a-new-target"]], "Adding a derived type": [[541, "adding-a-derived-type"]], "Adding a fundamental type": [[541, "adding-a-fundamental-type"]], "Adding a new SelectionDAG node": [[541, "adding-a-new-selectiondag-node"]], "Adding a new instruction": [[541, "adding-a-new-instruction"]], "Adding a new intrinsic function": [[541, "adding-a-new-intrinsic-function"]], "Adding a new type": [[541, "adding-a-new-type"]], "Adding an Established Project To the LLVM Monorepo": [[538, "adding-an-established-project-to-the-llvm-monorepo"]], "Adding debug counters to aid in debugging your code": [[609, "adding-debug-counters-to-aid-in-debugging-your-code"]], "Adding freeform text to help output": [[530, "adding-freeform-text-to-help-output"]], "Adding to this document": [[545, "adding-to-this-document"]], "Additional Documentation": [[466, "additional-documentation"]], "Additional Information": [[618, "additional-information"]], "Additional Topics": [[617, "additional-topics"], [644, "additional-topics"]], "Address Class Identifier": [[466, "address-class-identifier"]], "Address Class and Address Space Encodings": [[461, "address-class-and-address-space-encodings"]], "Address Computation": [[548, "address-computation"]], "Address Remapping": [[584, "address-remapping"]], "Address Space Conversion": [[592, "address-space-conversion"]], "Address Space Identifier": [[466, "address-space-identifier"]], "Address Spaces": [[466, "address-spaces"], [592, "address-spaces"], [592, "id10"]], "Address class": [[461, "amdgpu-dwarf-address-class-table"]], "Address class encodings": [[461, "amdgpu-dwarf-address-class-encodings-table"]], "Addresses of Basic Blocks": [[579, "addresses-of-basic-blocks"]], "Adjusting Existing Variables for Mutation": [[674, "adjusting-existing-variables-for-mutation"], [685, "adjusting-existing-variables-for-mutation"]], "Advanced Build Configurations": [[468, null]], "Advanced Concepts": [[535, "advanced-concepts"]], "Advanced Topics": [[609, "advanced-topics"], [687, "advanced-topics"]], "Advanced features": [[581, "advanced-features"]], "Advantages": [[614, "advantages"]], "Advantages:": [[537, "advantages"]], "Advertisement": [[588, "advertisement"]], "Advice for using bugpoint": [[477, "advice-for-using-bugpoint"]], "Advice on Packaging LLVM": [[606, null]], "Aggregate Operations": [[579, "aggregate-operations"]], "Aggregate Types": [[579, "aggregate-types"]], "Aggregates": [[556, "aggregates"]], "Ahead-of-Time Compilation Mode": [[676, "ahead-of-time-compilation-mode"]], "Aim to Make Efficient Use of Everyone\u2019s Time": [[485, "aim-to-make-efficient-use-of-everyone-s-time"]], "Alias Summary": [[579, "alias-summary"]], "Alias analysis driven transformations": [[469, "alias-analysis-driven-transformations"]], "AliasAnalysis Class Overview": [[469, "aliasanalysis-class-overview"]], "AliasAnalysis chaining behavior": [[469, "aliasanalysis-chaining-behavior"]], "Aliases": [[579, "aliases"]], "Aliases and Reexports": [[593, "aliases-and-reexports"]], "Alignment": [[472, "alignment"]], "Alignment and Block Boundaries": [[601, "alignment-and-block-boundaries"]], "Allocating Stacklets": [[624, "allocating-stacklets"]], "Allocator": [[622, "allocator"]], "Allocator Support": [[566, "allocator-support"]], "Alternative Approaches": [[582, "alternative-approaches"]], "Alternative using a cmake cache": [[570, "alternative-using-a-cmake-cache"]], "Ambiguous Transformation Order": [[642, "ambiguous-transformation-order"]], "An Example Using the LLVM Tool Chain": [[550, "an-example-using-the-llvm-tool-chain"], [552, "an-example-using-the-llvm-tool-chain"]], "Analysis Group Concepts": [[648, "analysis-group-concepts"]], "Analysis Passes": [[607, "analysis-passes"]], "Announce the Release": [[572, "announce-the-release"]], "Anonymous Namespaces": [[486, "anonymous-namespaces"]], "Aper\u00e7u": [[0, "overview"], [1, "overview"], [2, "overview"], [3, "overview"], [4, "overview"], [5, "overview"], [6, "overview"], [7, "overview"], [8, "overview"], [606, "overview"]], "Appealing": [[621, "appealing"]], "Apple Clang Builds (A More Complex Bootstrap)": [[468, "apple-clang-builds-a-more-complex-bootstrap"]], "Applications/Libraries": [[613, "applications-libraries"]], "Architecture & Platform Information for Compiler Writers": [[532, null]], "Areas Requiring Attention": [[534, "areas-requiring-attention"]], "Argument Aliases": [[530, "argument-aliases"]], "Argument Handling": [[482, "argument-handling"]], "Arguments": [[579, "id651"], [579, "id656"], [579, "id661"], [579, "id666"], [579, "id671"], [579, "id676"], [579, "id681"], [579, "id686"], [579, "id691"], [579, "id696"], [579, "id701"], [579, "id706"], [579, "id711"], [579, "id716"]], "Arguments:": [[534, "arguments"], [534, "id4"], [534, "id7"], [534, "id10"], [534, "id13"], [534, "id16"], [534, "id19"], [534, "id21"], [534, "id25"], [534, "id28"], [534, "id31"], [534, "id34"], [534, "id37"], [534, "id39"], [534, "id41"], [534, "id44"], [534, "id46"], [534, "id49"], [534, "id53"], [534, "id56"], [534, "id58"], [534, "id61"], [579, "arguments"], [579, "id31"], [579, "id36"], [579, "id41"], [579, "id47"], [579, "id52"], [579, "id57"], [579, "id62"], [579, "id67"], [579, "id72"], [579, "id82"], [579, "id87"], [579, "id92"], [579, "id97"], [579, "id102"], [579, "id107"], [579, "id112"], [579, "id117"], [579, "id122"], [579, "id127"], [579, "id132"], [579, "id137"], [579, "id142"], [579, "id147"], [579, "id152"], [579, "id157"], [579, "id162"], [579, "id167"], [579, "id172"], [579, "id177"], [579, "id182"], [579, "id187"], [579, "id192"], [579, "id197"], [579, "id202"], [579, "id207"], [579, "id212"], [579, "id217"], [579, "id222"], [579, "id227"], [579, "id232"], [579, "id237"], [579, "id242"], [579, "id247"], [579, "id252"], [579, "id257"], [579, "id262"], [579, "id267"], [579, "id272"], [579, "id277"], [579, "id282"], [579, "id287"], [579, "id292"], [579, "id297"], [579, "id302"], [579, "id307"], [579, "id312"], [579, "id317"], [579, "id322"], [579, "id327"], [579, "id332"], [579, "id338"], [579, "id344"], [579, "id351"], [579, "id357"], [579, "id361"], [579, "id365"], [579, "id370"], [579, "id374"], [579, "id378"], [579, "id382"], [579, "id392"], [579, "id396"], [579, "id412"], [579, "id416"], [579, "id426"], [579, "id430"], [579, "id434"], [579, "id451"], [579, "id455"], [579, "id458"], [579, "id461"], [579, "id464"], [579, "id467"], [579, "id471"], [579, "id475"], [579, "id479"], [579, "id483"], [579, "id487"], [579, "id491"], [579, "id495"], [579, "id499"], [579, "id503"], [579, "id507"], [579, "id511"], [579, "id515"], [579, "id519"], [579, "id523"], [579, "id527"], [579, "id531"], [579, "id535"], [579, "id539"], [579, "id543"], [579, "id547"], [579, "id551"], [579, "id555"], [579, "id559"], [579, "id563"], [579, "id567"], [579, "id571"], [579, "id575"], [579, "id579"], [579, "id583"], [579, "id587"], [579, "id591"], [579, "id601"], [579, "id605"], [579, "id609"], [579, "id613"], [579, "id617"], [579, "id621"], [579, "id626"], [579, "id631"], [579, "id636"], [579, "id641"], [579, "id646"], [579, "id723"], [579, "id728"], [579, "id732"], [579, "id736"], [579, "id740"], [579, "id744"], [579, "id748"], [579, "id751"], [579, "id755"], [579, "id758"], [579, "id762"], [579, "id765"], [579, "id768"], [579, "id771"], [579, "id774"], [579, "id777"], [579, "id780"], [579, "id783"], [579, "id786"], [579, "id789"], [579, "id792"], [579, "id795"], [579, "id798"], [579, "id801"], [579, "id804"], [579, "id807"], [579, "id812"], [579, "id817"], [579, "id822"], [579, "id827"], [579, "id831"], [579, "id835"], [579, "id840"], [579, "id845"], [579, "id850"], [579, "id855"], [579, "id860"], [579, "id865"], [579, "id870"], [579, "id875"], [579, "id880"], [579, "id885"], [579, "id890"], [579, "id895"], [579, "id900"], [579, "id905"], [579, "id909"], [579, "id913"], [579, "id917"], [579, "id921"], [579, "id925"], [579, "id929"], [579, "id933"], [579, "id937"], [579, "id941"], [579, "id945"], [579, "id949"], [579, "id953"], [579, "id957"], [579, "id961"], [579, "id965"], [579, "id969"], [579, "id973"], [579, "id977"], [579, "id981"], [579, "id985"], [579, "id989"], [579, "id993"], [579, "id997"], [579, "id1001"], [579, "id1005"], [579, "id1009"], [579, "id1013"], [579, "id1017"], [579, "id1021"], [579, "id1025"], [579, "id1029"], [579, "id1033"], [579, "id1037"], [579, "id1041"], [579, "id1045"], [579, "id1049"], [579, "id1053"], [579, "id1057"], [579, "id1061"], [579, "id1065"], [579, "id1069"], [579, "id1073"], [579, "id1077"], [579, "id1081"], [579, "id1085"], [579, "id1089"], [579, "id1093"], [579, "id1097"], [579, "id1101"], [579, "id1105"], [579, "id1109"], [579, "id1116"], [579, "id1120"], [579, "id1124"], [579, "id1127"], [579, "id1130"], [579, "id1134"], [579, "id1138"], [579, "id1142"], [579, "id1146"], [579, "id1150"], [579, "id1154"], [579, "id1158"], [579, "id1162"], [579, "id1165"], [579, "id1168"], [579, "id1171"], [579, "id1175"], [579, "id1179"], [579, "id1185"], [579, "id1192"], [579, "id1198"], [579, "id1206"], [579, "id1211"], [579, "id1216"], [579, "id1257"], [579, "id1261"], [579, "id1265"]], "Arithmetic and Logical Operations": [[461, "arithmetic-and-logical-operations"]], "Arithmetic with Overflow Intrinsics": [[579, "arithmetic-with-overflow-intrinsics"]], "Arm Soft-Float Target": [[570, "arm-soft-float-target"]], "Arm architecture not given": [[570, "arm-architecture-not-given"]], "ArmNeon": [[634, "armneon"]], "ArmNeonSema": [[634, "armneonsema"]], "ArmNeonTest": [[634, "armneontest"]], "Armv6-m, Armv7-m and Armv7E-M targets": [[570, "armv6-m-armv7-m-and-armv7e-m-targets"]], "Array Type": [[579, "array-type"]], "Asm Table Formats": [[540, "asm-table-formats"]], "Asm template argument modifiers": [[579, "asm-template-argument-modifiers"]], "AsmMatcher": [[634, "asmmatcher"]], "AsmWriter": [[634, "asmwriter"]], "Assembler": [[466, "assembler"]], "Assembly Parser": [[483, "assembly-parser"]], "Assembly Printer": [[646, "assembly-printer"]], "Assert Liberally": [[486, "assert-liberally"]], "Assume Operand Bundles": [[579, "assume-operand-bundles"]], "Async Lowering": [[534, "async-lowering"]], "Atomic Memory Ordering Constraints": [[579, "atomic-memory-ordering-constraints"]], "Atomic instructions": [[470, "atomic-instructions"]], "Atomic orderings": [[470, "atomic-orderings"]], "Atomics and Codegen": [[470, "atomics-and-codegen"]], "Atomics and IR optimization": [[470, "atomics-and-ir-optimization"]], "AttrBuilder": [[576, "attrbuilder"]], "AttrDocs": [[634, "attrdocs"]], "Attribute": [[576, "attribute"]], "Attribute Encodings": [[461, "attribute-encodings"]], "Attribute Groups": [[579, "attribute-groups"]], "Attribute Types": [[461, "attribute-types"]], "Attribute encodings": [[461, "amdgpu-dwarf-attribute-encodings-table"]], "Attribute names": [[461, "amdgpu-dwarf-attribute-names-table"]], "AttributeList": [[576, "attributelist"]], "Attributes by Tag Value (Informative)": [[461, "attributes-by-tag-value-informative"]], "Attributes by tag value": [[461, "amdgpu-dwarf-attributes-by-tag-value-table"]], "Attribution of Changes": [[538, "attribution-of-changes"]], "Audience": [[646, "audience"]], "Authoring Guidelines": [[627, "authoring-guidelines"]], "Auto-Vectorization in LLVM": [[645, null]], "Automatic Debugger Selection": [[477, "automatic-debugger-selection"]], "Automatic Linker Flags Named Metadata": [[579, "automatic-linker-flags-named-metadata"]], "Automatic lfence on Conditional Edges": [[626, "automatic-lfence-on-conditional-edges"]], "Available AliasAnalysis implementations": [[469, "available-aliasanalysis-implementations"]], "Available Fuzzers": [[546, "available-fuzzers"]], "Avoid loads and stores of large aggregate type": [[545, "avoid-loads-and-stores-of-large-aggregate-type"]], "Avoid std::endl": [[486, "avoid-std-endl"]], "Avoiding Heap Allocations": [[534, "avoiding-heap-allocations"]], "B": [[580, "b"]], "BINARY INPUT AND OUTPUT": [[515, "binary-input-and-output"]], "BUGS": [[502, "bugs"], [507, "bugs"], [509, "bugs"], [511, "bugs"], [514, "bugs"], [515, "bugs"], [516, "bugs"], [523, "bugs"], [525, "bugs"], [526, "bugs"]], "Background": [[480, "background"], [536, "background"], [573, "background"]], "Background on Windows exceptions": [[540, "background-on-windows-exceptions"]], "Background on historical bugpoint issues": [[478, "background-on-historical-bugpoint-issues"]], "Barriers": [[592, "barriers"]], "Base & Derived Pointers": [[630, "base-derived-pointers"]], "Basic CMake usage": [[481, "usage"]], "Basic Commands": [[490, "basic-commands"]], "Basic Expression Parsing": [[669, "basic-expression-parsing"], [680, "basic-expression-parsing"]], "Basic Inspection and Traversal Routines": [[609, "basic-inspection-and-traversal-routines"]], "Basic Mode": [[649, "basic-mode"]], "Basic Setup": [[573, "basic-setup"]], "Basic Steps": [[646, "basic-steps"]], "Basic Usage": [[518, "basic-usage"]], "Basic code required": [[647, "basic-code-required"], [648, "basic-code-required"]], "Basic concepts": [[637, "basic-concepts"]], "Basic migration": [[611, "basic-migration"]], "Basic operation": [[553, "basic-operation"]], "Basics": [[473, "basics"], [591, "basics"]], "Benchmarking tips": [[471, null]], "Benchmarks": [[613, "benchmarks"], [639, "benchmarks"]], "Beware of non-determinism due to ordering of pointers": [[486, "beware-of-non-determinism-due-to-ordering-of-pointers"]], "Beware of non-deterministic sorting order of equal elements": [[486, "beware-of-non-deterministic-sorting-order-of-equal-elements"]], "Beware unnecessary copies with auto": [[486, "beware-unnecessary-copies-with-auto"]], "Big bang": [[614, "big-bang"]], "Bigger Pieces of Work": [[533, "bigger-pieces-of-work"]], "Binary Expression Parsing": [[669, "binary-expression-parsing"], [680, "binary-expression-parsing"]], "Binary Operations": [[579, "binary-operations"]], "Binary Operators": [[465, "binary-operators"]], "Bisecting": [[611, "bisecting"]], "Bisecting LLVM code": [[553, null]], "Bisecting across multiple roots": [[553, "bisecting-across-multiple-roots"]], "Bisecting commits": [[550, "bisecting-commits"]], "Bisection Index Values": [[594, "bisection-index-values"]], "Bit Manipulation Intrinsics": [[579, "bit-manipulation-intrinsics"]], "Bit storage containers (BitVector, SparseBitVector, CoalescingBitVector)": [[609, "bit-storage-containers-bitvector-sparsebitvector-coalescingbitvector"]], "BitValue": [[652, "bitvalue"]], "BitVector": [[609, "bitvector"]], "Bitcode Wrapper Format": [[473, "bitcode-wrapper-format"]], "Bitconverts": [[472, "bitconverts"]], "Bitstream Format": [[473, "bitstream-format"]], "Bitwise Binary Operations": [[579, "bitwise-binary-operations"]], "Blitz++": [[613, "blitz"]], "Block Bias": [[474, "block-bias"]], "Block Frequency": [[474, "block-frequency"]], "Block Mass": [[474, "block-mass"]], "Block References": [[585, "block-references"]], "Block Scalars": [[652, "block-scalars"]], "Blocks": [[473, "blocks"]], "Boolean Arguments": [[530, "boolean-arguments"]], "Bootstrap Builds": [[468, "bootstrap-builds"]], "Bottleneck Analysis": [[513, "bottleneck-analysis"]], "Braced Initializer Lists": [[486, "braced-initializer-lists"]], "Branch Folding and If Conversion": [[646, "branch-folding-and-if-conversion"]], "Branch Probability": [[474, "branch-probability"]], "Branch Weight": [[474, "branch-weight"]], "BranchInst": [[475, "branchinst"]], "Branching/Stashing/Updating for Local Development or Experiments": [[611, "branching-stashing-updating-for-local-development-or-experiments"]], "Buffer Underflow/Overflow Detection": [[566, "buffer-underflow-overflow-detection"]], "Bug Fixes": [[533, "bug-fixes"]], "Bug Reporting Process": [[619, "bug-reporting-process"]], "Bug Reports": [[533, "bug-reports"]], "Bugpoint Redesign": [[478, null]], "Bugs and Enhancements": [[630, "bugs-and-enhancements"]], "Build Bots": [[612, "build-bots"]], "Build The Binary Distribution": [[572, "build-the-binary-distribution"]], "Build-time use optimization": [[590, "build-time-use-optimization"]], "Building Clang with PGO": [[569, "building-clang-with-pgo"]], "Building LLVM with CMake": [[481, null]], "Building a Distribution of LLVM": [[479, null]], "Building a JIT in LLVM": [[687, "building-a-jit-in-llvm"]], "Building a JIT: Adding Optimizations \u2013 An introduction to ORC Layers": [[655, null]], "Building a JIT: Extreme Laziness - Using LazyReexports to JIT from ASTs": [[657, null]], "Building a JIT: Per-function Lazy Compilation": [[656, null]], "Building a JIT: Starting out with KaleidoscopeJIT": [[654, null]], "Building a single sub-project": [[611, "building-a-single-sub-project"]], "Building and Running": [[546, "building-and-running"]], "Building compiler-rt builtins for Arm": [[570, "building-compiler-rt-builtins-for-arm"]], "Building fallible iterators and iterator ranges": [[609, "building-fallible-iterators-and-iterator-ranges"]], "Building pass plugins": [[648, "building-pass-plugins"]], "Building the SelectionDAG": [[467, "building-the-selectiondag"]], "Building with XRay": [[650, "building-with-xray"]], "Buildmasters": [[567, "buildmasters"]], "Built In GC Strategies": [[547, "built-in-gc-strategies"]], "Built in register allocators": [[483, "built-in-register-allocators"]], "Built-in expect Instructions": [[475, "built-in-expect-instructions"]], "Built-in expect.with.probability Instruction": [[475, "built-in-expect-with-probability-instruction"]], "Built-in types": [[652, "built-in-types"]], "Builtin parsers": [[530, "builtin-parsers"]], "Bundled Instructions": [[585, "bundled-instructions"]], "C": [[580, "c"]], "C API": [[620, "c-api"]], "C API Changes": [[538, "c-api-changes"]], "C API Details": [[587, "c-api-details"]], "C type width Module Flags Metadata": [[579, "c-type-width-module-flags-metadata"]], "C++ Features": [[606, "c-features"]], "C++ Performance Benchmarks": [[613, "c-performance-benchmarks"]], "C++ Standard Library": [[486, "c-standard-library"]], "C++ Standard Versions": [[486, "c-standard-versions"]], "C++ special member functions information": [[625, "c-special-member-functions-information"]], "C++ specific debug information": [[625, "c-specific-debug-information"]], "C-SKY": [[532, "c-sky"]], "C/C++ front-end specific debug information": [[625, "c-c-front-end-specific-debug-information"]], "C/C++ function information": [[625, "c-c-function-information"]], "C/C++ global variable information": [[625, "c-c-global-variable-information"]], "C/C++ source file information": [[625, "c-c-source-file-information"]], "C99-style Hexadecimal Floating-point Constants": [[542, "c99-style-hexadecimal-floating-point-constants"]], "CFA Definition Instructions": [[461, "cfa-definition-instructions"]], "CFG Modifications": [[475, "cfg-modifications"]], "CFI": [[466, "cfi"]], "CFIIndex Operands": [[585, "cfiindex-operands"]], "CMake Caches": [[481, "cmake-caches"]], "CMake Primer": [[482, null]], "CODE GENERATION OPTIONS": [[493, "code-generation-options"]], "COFF Syntax": [[688, "coff-syntax"]], "COFF-SPECIFIC OPTIONS": [[526, "coff-specific-options"]], "COMMANDS": [[499, "commands"], [511, "commands"], [516, "commands"], [518, "commands"], [519, "commands"]], "COMPONENTS": [[498, "components"]], "CONSTANTS_BLOCK Contents": [[473, "constants-block-contents"]], "CORAL-2 Benchmarks": [[613, "coral-2-benchmarks"]], "CTags": [[634, "ctags"]], "Call Convention": [[466, "call-convention"], [466, "pal-call-convention"]], "Call Frame Calling Address": [[461, "call-frame-calling-address"]], "Call Frame Information": [[461, "call-frame-information"], [461, "id3"], [466, "call-frame-information"]], "Call Frame Instruction Usage": [[461, "call-frame-instruction-usage"]], "Call Frame Instructions": [[461, "call-frame-instructions"]], "Call Site Attributes": [[579, "call-site-attributes"]], "Call frame instruction encodings": [[461, "amdgpu-dwarf-call-frame-instruction-encodings-table"]], "Call-clobbered registers": [[483, "call-clobbered-registers"]], "CallArgument Records": [[651, "callargument-records"]], "CallInst": [[475, "callinst"]], "Callee-cleanup Calling Conventions": [[578, "callee-cleanup-calling-conventions"]], "Calling Conventions": [[579, "calling-conventions"], [646, "calling-conventions"]], "CallingConv": [[634, "callingconv"]], "Calls": [[579, "calls"]], "Can Code Be Reviewed After It Is Committed?": [[485, "can-code-be-reviewed-after-it-is-committed"]], "Can GEP index into vector elements?": [[548, "can-gep-index-into-vector-elements"]], "Can I cast an object\u2019s address to integer and add it to null?": [[548, "can-i-cast-an-object-s-address-to-integer-and-add-it-to-null"]], "Can I compare two values computed with GEPs?": [[548, "can-i-compare-two-values-computed-with-geps"]], "Can I compile C or C++ code to platform-independent LLVM bitcode?": [[543, "can-i-compile-c-or-c-code-to-platform-independent-llvm-bitcode"]], "Can I compute the distance between two objects, and add that value to one address to compute the other address?": [[548, "can-i-compute-the-distance-between-two-objects-and-add-that-value-to-one-address-to-compute-the-other-address"]], "Can I do GEP with a different pointer type than the type of the underlying object?": [[548, "can-i-do-gep-with-a-different-pointer-type-than-the-type-of-the-underlying-object"]], "Can I do type-based alias analysis on LLVM IR?": [[548, "can-i-do-type-based-alias-analysis-on-llvm-ir"]], "Can I modify LLVM source code and redistribute the modified source?": [[543, "can-i-modify-llvm-source-code-and-redistribute-the-modified-source"]], "Can I modify the LLVM source code and redistribute binaries or other tools based on it, without redistributing the source?": [[543, "can-i-modify-the-llvm-source-code-and-redistribute-binaries-or-other-tools-based-on-it-without-redistributing-the-source"]], "Can array indices be negative?": [[548, "can-array-indices-be-negative"]], "Changes Relative to DWARF Version 5": [[461, "changes-relative-to-dwarf-version-5"]], "Changes to LLDB": [[618, "changes-to-lldb"]], "Changes to Sanitizers": [[618, "changes-to-sanitizers"]], "Changes to TableGen": [[618, "changes-to-tablegen"]], "Changes to building LLVM": [[618, "changes-to-building-llvm"]], "Changes to the AArch64 Backend": [[618, "changes-to-the-aarch64-backend"]], "Changes to the AMDGPU Target": [[618, "changes-to-the-amdgpu-target"]], "Changes to the ARM Backend": [[618, "changes-to-the-arm-backend"]], "Changes to the AVR Target": [[618, "changes-to-the-avr-target"]], "Changes to the C API": [[618, "changes-to-the-c-api"]], "Changes to the DAG infrastructure": [[618, "changes-to-the-dag-infrastructure"]], "Changes to the Debug Info": [[618, "changes-to-the-debug-info"]], "Changes to the Go bindings": [[618, "changes-to-the-go-bindings"]], "Changes to the LLVM IR": [[618, "changes-to-the-llvm-ir"]], "Changes to the LLVM tools": [[618, "changes-to-the-llvm-tools"]], "Changes to the MIPS Target": [[618, "changes-to-the-mips-target"]], "Changes to the OCaml bindings": [[618, "changes-to-the-ocaml-bindings"]], "Changes to the Policy": [[623, "changes-to-the-policy"]], "Changes to the PowerPC Target": [[618, "changes-to-the-powerpc-target"]], "Changes to the WebAssembly Target": [[618, "changes-to-the-webassembly-target"]], "Changes to the X86 Target": [[618, "changes-to-the-x86-target"]], "Chapter 1 Introduction": [[654, "chapter-1-introduction"]], "Chapter 2 Introduction": [[655, "chapter-2-introduction"], [669, "chapter-2-introduction"], [680, "chapter-2-introduction"]], "Chapter 3 Introduction": [[656, "chapter-3-introduction"], [670, "chapter-3-introduction"], [681, "chapter-3-introduction"]], "Chapter 4 Introduction": [[657, "chapter-4-introduction"], [671, "chapter-4-introduction"], [682, "chapter-4-introduction"]], "Chapter 5 Introduction": [[672, "chapter-5-introduction"], [683, "chapter-5-introduction"]], "Chapter 6 Introduction": [[673, "chapter-6-introduction"], [684, "chapter-6-introduction"]], "Chapter 7 Introduction": [[674, "chapter-7-introduction"], [685, "chapter-7-introduction"]], "Chapter 8 Introduction": [[675, "chapter-8-introduction"]], "Chapter 9 Introduction": [[676, "chapter-9-introduction"]], "Checkout LLVM from Git": [[550, "checkout-llvm-from-git"]], "Checkout via SVN (deprecated)": [[550, "checkout-via-svn-deprecated"]], "Checkout/Clone Multiple Projects, with Commit Access": [[611, "checkout-clone-multiple-projects-with-commit-access"]], "Checkout/Clone a Single Project, with Commit Access": [[611, "checkout-clone-a-single-project-with-commit-access"]], "Choosing a target": [[675, "choosing-a-target"]], "Choosing new members": [[623, "choosing-new-members"]], "Chrome Trace Viewer Visualization": [[650, "chrome-trace-viewer-visualization"]], "Chunk Header": [[622, "chunk-header"]], "Clang": [[622, "clang"], [644, "id1"]], "Clang BackEnds": [[634, "clang-backends"]], "Clang uses the host header files": [[570, "clang-uses-the-host-header-files"]], "ClangAttrClasses": [[634, "clangattrclasses"]], "ClangAttrDump": [[634, "clangattrdump"]], "ClangAttrImpl": [[634, "clangattrimpl"]], "ClangAttrList": [[634, "clangattrlist"]], "ClangAttrPCHRead": [[634, "clangattrpchread"]], "ClangAttrPCHWrite": [[634, "clangattrpchwrite"]], "ClangAttrParsedAttrImpl": [[634, "clangattrparsedattrimpl"]], "ClangAttrParsedAttrKinds": [[634, "clangattrparsedattrkinds"]], "ClangAttrParsedAttrList": [[634, "clangattrparsedattrlist"]], "ClangAttrParserStringSwitches": [[634, "clangattrparserstringswitches"]], "ClangAttrSpellingListIndex": [[634, "clangattrspellinglistindex"]], "ClangAttrSpellings": [[634, "clangattrspellings"]], "ClangAttrTemplateInstantiate": [[634, "clangattrtemplateinstantiate"]], "ClangAttrVisitor": [[634, "clangattrvisitor"]], "ClangCommentCommandInfo": [[634, "clangcommentcommandinfo"]], "ClangCommentCommandList": [[634, "clangcommentcommandlist"]], "ClangCommentHTMLNamedCharacterReferences": [[634, "clangcommenthtmlnamedcharacterreferences"]], "ClangCommentHTMLTags": [[634, "clangcommenthtmltags"]], "ClangCommentHTMLTagsProperties": [[634, "clangcommenthtmltagsproperties"]], "ClangCommentNodes": [[634, "clangcommentnodes"]], "ClangDeclNodes": [[634, "clangdeclnodes"]], "ClangDiagGroups": [[634, "clangdiaggroups"]], "ClangDiagsDefs": [[634, "clangdiagsdefs"]], "ClangDiagsIndexName": [[634, "clangdiagsindexname"]], "ClangSACheckers": [[634, "clangsacheckers"]], "ClangStmtNodes": [[634, "clangstmtnodes"]], "Class overviews": [[486, "class-overviews"]], "Cleanups": [[540, "cleanups"]], "Clients for debugging and evaluation of implementations": [[469, "clients-for-debugging-and-evaluation-of-implementations"]], "Clobber constraints": [[579, "clobber-constraints"]], "CoalescingBitVector": [[609, "coalescingbitvector"]], "Code Blocks": [[627, "code-blocks"]], "Code Conventions": [[466, "code-conventions"]], "Code Emission": [[483, "code-emission"]], "Code Generation": [[584, "code-generation"], [644, "code-generation"]], "Code Generation Setup": [[670, "code-generation-setup"], [681, "code-generation-setup"]], "Code Generation for If/Then/Else": [[672, "code-generation-for-if-then-else"], [683, "code-generation-for-if-then-else"]], "Code Generation for the \u201cfor\u201d Loop": [[672, "code-generation-for-the-for-loop"], [683, "code-generation-for-the-for-loop"]], "Code Generator Intrinsics": [[579, "code-generator-intrinsics"]], "Code Object Metadata": [[466, "code-object-metadata"]], "Code Object V2 Directives": [[466, "code-object-v2-directives"]], "Code Object V2 Example Source Code": [[466, "code-object-v2-example-source-code"]], "Code Object V2 Metadata": [[466, "code-object-v2-metadata"]], "Code Object V2 Note Records": [[466, "code-object-v2-note-records"]], "Code Object V2 Predefined Symbols": [[466, "code-object-v2-predefined-symbols"]], "Code Object V2 to V3 Target ID": [[466, "code-object-v2-to-v3-target-id"]], "Code Object V3 Kernel Descriptor": [[466, "code-object-v3-kernel-descriptor"], [466, "amdgpu-amdhsa-kernel-descriptor-v3-table"]], "Code Object V3 Metadata": [[466, "code-object-v3-metadata"]], "Code Object V3 to V4 Directives": [[466, "code-object-v3-to-v4-directives"]], "Code Object V3 to V4 Example Source Code": [[466, "code-object-v3-to-v4-example-source-code"]], "Code Object V3 to V4 Note Records": [[466, "code-object-v3-to-v4-note-records"]], "Code Object V3 to V4 Predefined Symbols": [[466, "code-object-v3-to-v4-predefined-symbols"]], "Code Object V4 Metadata": [[466, "code-object-v4-metadata"]], "Code Organization": [[631, "code-organization"]], "Code Owners": [[538, "code-owners"]], "Code Reviews": [[538, "code-reviews"]], "Code Reviews with Phabricator": [[608, null]], "Code Reviews, Speed, and Reciprocity": [[485, "code-reviews-speed-and-reciprocity"]], "Code Transformation Metadata": [[642, null]], "Code generator bugs": [[574, "code-generator-bugs"]], "Code generator debugger": [[477, "code-generator-debugger"]], "Code-Review Workflow": [[485, "code-review-workflow"]], "CodeEmitter": [[634, "codeemitter"]], "CodeView": [[605, "codeview"]], "CodeView Debug Info Format": [[625, "codeview-debug-info-format"]], "CodeView Symbol Records": [[595, null]], "CodeView Type Record List": [[604, "codeview-type-record-list"]], "CodeView Type Records": [[596, null]], "CodeView-Dependent": [[542, "codeview-dependent"]], "Collaboration": [[623, "collaboration"]], "Collecting options as a set of flags": [[530, "collecting-options-as-a-set-of-flags"]], "Collector Requirements": [[547, "collector-requirements"]], "Color conversion": [[613, "color-conversion"]], "Comdats": [[579, "comdats"]], "Command Line Utilities": [[617, "command-line-utilities"]], "Command line flags": [[645, "command-line-flags"]], "Command-Line Options": [[478, "command-line-options"]], "CommandLine 2.0 Library Manual": [[530, null]], "Comment Formatting": [[486, "comment-formatting"]], "Commenting": [[486, "commenting"]], "Commit an API Change in LLVM and Update the Sub-projects": [[611, "commit-an-api-change-in-llvm-and-update-the-sub-projects"]], "Commit messages": [[538, "commit-messages"]], "Committing a change": [[608, "committing-a-change"]], "Committing someone\u2019s change from Phabricator": [[608, "committing-someone-s-change-from-phabricator"]], "Common CMake Flags": [[639, "common-cmake-flags"]], "Common Configuration Options": [[639, "common-configuration-options"]], "Common Issues": [[592, "common-issues"]], "Common Problems": [[550, "common-problems"], [552, "common-problems"]], "Communaut\u00e9": [[653, "community"]], "Community Testing": [[572, "community-testing"]], "Community wide proposals": [[549, "community-wide-proposals"]], "Comparison and logarithmical search": [[591, "comparison-and-logarithmical-search"]], "Compilation": [[639, "compilation"]], "Compilation Models": [[531, "compilation-models"]], "Compile Flags": [[606, "compile-flags"]], "Compile Unit": [[676, "compile-unit"]], "Compile-time optimization bugs": [[574, "compile-time-optimization-bugs"]], "Compiler-rt builds but the tests fail to build": [[570, "compiler-rt-builds-but-the-tests-fail-to-build"]], "Compiler/Platform-specific topics": [[481, "compiler-platform-specific-topics"]], "Compiling CUDA Code": [[531, "compiling-cuda-code"]], "Compiling CUDA with clang": [[531, null]], "Compiling the LLVM Suite Source Code": [[550, "compiling-the-llvm-suite-source-code"]], "Complex Constants": [[579, "complex-constants"]], "ComplexPatterns": [[557, "complexpatterns"]], "Composite Location Description Operations": [[461, "composite-location-description-operations"]], "Composite Rules": [[559, "composite-rules"]], "Compute User Data": [[466, "compute-user-data"]], "Computing stack maps": [[547, "computing-stack-maps"]], "Concatenating Errors with joinErrors": [[609, "concatenating-errors-with-joinerrors"]], "Conception et aper\u00e7u de LLVM": [[653, "llvm-design-overview"]], "Conclusions": [[669, "conclusions"], [680, "conclusions"]], "Concrete Bases and Deeper Hierarchies": [[573, "concrete-bases-and-deeper-hierarchies"]], "Confidentiality": [[623, "confidentiality"]], "Configuration": [[639, "configuration"]], "Configuring CMake": [[571, "configuring-cmake"]], "Configuring External Tests": [[640, "configuring-external-tests"]], "Configuring LLVM to Build Fuzzers": [[546, "configuring-llvm-to-build-fuzzers"]], "Configuring the Module": [[675, "configuring-the-module"]], "Considerations": [[472, "considerations"]], "Consistent Semantics": [[631, "consistent-semantics"]], "Constant Expressions": [[579, "constant-expressions"]], "Constant Pool Indices": [[585, "constant-pool-indices"]], "Constants": [[555, "constants"], [579, "constants"]], "Constrained Floating-Point Intrinsics": [[579, "constrained-floating-point-intrinsics"]], "Constrained libm-equivalent Intrinsics": [[579, "constrained-libm-equivalent-intrinsics"]], "Constraining test execution": [[641, "constraining-test-execution"]], "Constraint Codes": [[579, "constraint-codes"]], "Contents": [[625, "contents"]], "Contents of the Name Index": [[461, "contents-of-the-name-index"]], "Contextual markups": [[587, "contextual-markups"]], "Continuous Tracking with LNT": [[639, "continuous-tracking-with-lnt"]], "Continuously Running and Finding Bugs": [[546, "continuously-running-and-finding-bugs"]], "Contributing to LLVM": [[533, null]], "Control Flow": [[482, "control-flow"], [555, "control-flow"]], "Control Flow Operations": [[461, "control-flow-operations"]], "Control Flow Verification Tool Design Document": [[480, null]], "Controlling Fidelity": [[650, "controlling-fidelity"]], "Controlling options grouping": [[530, "controlling-options-grouping"]], "Controlling other formatting options": [[530, "controlling-other-formatting-options"]], "Controlling the number of occurrences required and allowed": [[530, "controlling-the-number-of-occurrences-required-and-allowed"]], "Controlling whether or not a value must be specified": [[530, "controlling-whether-or-not-a-value-must-be-specified"]], "Conventions": [[464, "conventions"], [465, "conventions"], [592, "conventions"]], "Conversion Operations": [[579, "conversion-operations"]], "Conversion of Floating-Point Values": [[465, "conversion-of-floating-point-values"]], "Conversion of Integer Values": [[465, "conversion-of-integer-values"]], "Conversion of Relocatable Values": [[465, "conversion-of-relocatable-values"]], "Copyright": [[538, "copyright"]], "Copyright, License, and Patents": [[538, "copyright-license-and-patents"]], "Core Pipeline": [[560, null]], "Core Tier": [[632, "core-tier"]], "CoroCleanup": [[534, "corocleanup"]], "CoroEarly": [[534, "coroearly"]], "CoroElide": [[534, "coroelide"]], "CoroSplit": [[534, "corosplit"]], "Coroutine Manipulation Intrinsics": [[534, "coroutine-manipulation-intrinsics"]], "Coroutine Promise": [[534, "coroutine-promise"]], "Coroutine Representation": [[534, "coroutine-representation"]], "Coroutine Structure Intrinsics": [[534, "coroutine-structure-intrinsics"]], "Coroutine Transformation": [[534, "coroutine-transformation"]], "Coroutine Transformation Passes": [[534, "coroutine-transformation-passes"]], "Coroutines by Example": [[534, "coroutines-by-example"]], "Coroutines in LLVM": [[534, null]], "Corpus": [[581, "corpus"]], "Counter": [[535, "id3"]], "Counter Expressions": [[535, "counter-expressions"]], "Counter:": [[535, "counter"], [535, "id8"]], "Coverage Mapping Header:": [[535, "coverage-mapping-header"]], "Crash debugger": [[477, "crash-debugger"]], "Crashing Bugs": [[574, "crashing-bugs"]], "Create Release Branch": [[572, "create-release-branch"]], "Creating New Articles": [[627, "creating-new-articles"]], "Creating an LLVM Project": [[610, null]], "Creating and inserting new Instructions": [[609, "creating-and-inserting-new-instructions"]], "Creating new registries": [[648, "creating-new-registries"]], "Criteria": [[623, "criteria"]], "Cross Compilation and External Devices": [[639, "cross-compilation-and-external-devices"]], "Cross compiling": [[481, "cross-compiling"]], "Cross-Compiling LLVM": [[550, "cross-compiling-llvm"]], "Cross-Compiling from x86_64 to ARM": [[571, "cross-compiling-from-x86-64-to-arm"]], "Current Status": [[611, "current-status"], [612, "current-status"]], "Current Work": [[593, "current-work"]], "Currently": [[611, "currently"], [611, "id7"], [611, "id9"], [611, "id11"]], "Custom": [[646, "custom"]], "Custom GC Strategies": [[547, "custom-gc-strategies"]], "Custom SDNodes": [[557, "custom-sdnodes"]], "Custom Scalar": [[652, "custom-scalar"]], "Custom Suites": [[639, "custom-suites"]], "Custom formatting": [[609, "custom-formatting"]], "Custom lowering of intrinsics": [[547, "custom-lowering-of-intrinsics"]], "CustomEventMarker Records": [[651, "customeventmarker-records"]], "D": [[580, "d"]], "DAGISel": [[634, "dagisel"]], "DARPA HPCS SSCA#2 C/OpenMP reference implementation": [[613, "darpa-hpcs-ssca-2-c-openmp-reference-implementation"]], "DBI Stream Options": [[517, "dbi-stream-options"]], "DEFINE_ABBREV Encoding": [[473, "define-abbrev-encoding"]], "DESCRIPTION": [[487, "description"], [488, "description"], [489, "description"], [491, "description"], [492, "description"], [493, "description"], [494, "description"], [495, "description"], [496, "description"], [497, "description"], [498, "description"], [499, "description"], [499, "id2"], [499, "id4"], [499, "id7"], [499, "id10"], [500, "description"], [501, "description"], [502, "description"], [503, "description"], [504, "description"], [505, "description"], [506, "description"], [507, "description"], [508, "description"], [509, "description"], [510, "description"], [511, "description"], [512, "description"], [513, "description"], [514, "description"], [515, "description"], [516, "description"], [518, "description"], [518, "id2"], [518, "id4"], [518, "id7"], [519, "description"], [520, "description"], [521, "description"], [522, "description"], [523, "description"], [524, "description"], [525, "description"], [526, "description"], [527, "description"], [528, "description"], [529, "description"]], "DETAILED OUTPUT DEFINITIONS": [[497, "detailed-output-definitions"]], "DFAPacketizer": [[634, "dfapacketizer"]], "DIBasicType": [[579, "dibasictype"]], "DICompileUnit": [[579, "dicompileunit"]], "DICompositeType": [[579, "dicompositetype"]], "DIDerivedType": [[579, "diderivedtype"]], "DIEnumerator": [[579, "dienumerator"]], "DIExpression": [[579, "diexpression"]], "DIFFERENCES TO LLVM-READELF": [[522, "differences-to-llvm-readelf"]], "DIFile": [[579, "difile"]], "DIFlags": [[579, "diflags"]], "DIGlobalVariable": [[579, "diglobalvariable"]], "DIGlobalVariableExpression": [[579, "diglobalvariableexpression"]], "DIImportedEntity": [[579, "diimportedentity"]], "DILabel": [[579, "dilabel"]], "DILexicalBlock": [[579, "dilexicalblock"]], "DILexicalBlockFile": [[579, "dilexicalblockfile"]], "DILocalVariable": [[579, "dilocalvariable"]], "DILocation": [[579, "dilocation"]], "DIMacro": [[579, "dimacro"]], "DIMacroFile": [[579, "dimacrofile"]], "DINamespace": [[579, "dinamespace"]], "DIObjCProperty": [[579, "diobjcproperty"]], "DISubprogram": [[579, "disubprogram"]], "DISubrange": [[579, "disubrange"]], "DISubroutineType": [[579, "disubroutinetype"]], "DITemplateTypeParameter": [[579, "ditemplatetypeparameter"]], "DITemplateValueParameter": [[579, "ditemplatevalueparameter"]], "DLL Storage Classes": [[579, "dll-storage-classes"]], "DPP/DPP16 Modifiers": [[464, "dpp-dpp16-modifiers"]], "DPP16": [[0, "dpp16"], [1, "dpp16"]], "DPP8": [[0, "dpp8"], [1, "dpp8"]], "DPP8 Modifiers": [[464, "dpp8-modifiers"]], "DS": [[0, "ds"], [2, "ds"], [3, "ds"], [4, "ds"], [466, "ds"]], "DS Modifiers": [[464, "ds-modifiers"]], "DSO Local Equivalent": [[579, "dso-local-equivalent"]], "DWARF Debug Information": [[466, "dwarf-debug-information"]], "DWARF Emission Setup": [[676, "dwarf-emission-setup"]], "DWARF Expression Evaluation Context": [[461, "dwarf-expression-evaluation-context"]], "DWARF Expression Value": [[461, "dwarf-expression-value"]], "DWARF Expressions": [[461, "dwarf-expressions"], [461, "id1"]], "DWARF Extensions For Heterogeneous Debugging": [[461, null]], "DWARF Location Description": [[461, "dwarf-location-description"]], "DWARF Location List Expressions": [[461, "dwarf-location-list-expressions"]], "DWARF Operation Encodings": [[461, "amdgpu-dwarf-operation-encodings-table"]], "DWARF Operation Expressions": [[461, "dwarf-operation-expressions"]], "DW_AT_LLVM_active_lane": [[466, "dw-at-llvm-active-lane"]], "DW_AT_LLVM_augmentation": [[466, "dw-at-llvm-augmentation"]], "DW_AT_LLVM_lane_pc": [[466, "dw-at-llvm-lane-pc"]], "Data Dependence Graph": [[537, "data-dependence-graph"]], "Data Layout": [[579, "data-layout"], [592, "data-layout"]], "Data Records": [[473, "data-records"]], "Data Representation": [[461, "data-representation"]], "Data Representation of the Name Index": [[461, "data-representation-of-the-name-index"]], "Data Section": [[651, "data-section"]], "Data:": [[535, "data"]], "Debug information and optimizations": [[625, "debug-information-and-optimizations"]], "Debug information consumers": [[625, "debug-information-consumers"]], "Debug-Info constructs": [[585, "debug-info-constructs"]], "Debugger Information Entry Attributes": [[466, "debugger-information-entry-attributes"]], "Debugger Intrinsics": [[579, "debugger-intrinsics"]], "Debugger intrinsic functions": [[625, "debugger-intrinsic-functions"]], "Debugging": [[560, "debugging"], [609, "debugging"]], "Debugging Information Entry Attributes": [[461, "debugging-information-entry-attributes"]], "Debugging Information Extension for Objective C Properties": [[625, "debugging-information-extension-for-objective-c-properties"]], "Debugging Information tests": [[641, "debugging-information-tests"], [641, "id1"]], "Debugging JIT-ed Code": [[536, null]], "Debugging MCJIT-ed code": [[536, "debugging-mcjit-ed-code"]], "Debugging Tools": [[490, "debugging-tools"]], "Debugging information format": [[625, "debugging-information-format"], [625, "id4"]], "Debugging with XRay": [[650, null]], "Default values": [[652, "default-values"]], "Default walker APIs": [[590, "default-walker-apis"]], "Define a new ABI and/or calling convention": [[626, "define-a-new-abi-and-or-calling-convention"]], "Defining a Register": [[646, "defining-a-register"]], "Defining a Register Class": [[646, "defining-a-register-class"]], "Definitions": [[580, "definitions"], [616, "definitions"], [628, "definitions"]], "Delayed Freelist": [[622, "delayed-freelist"]], "Deleting GlobalVariables": [[609, "deleting-globalvariables"]], "Deleting Instructions": [[609, "deleting-instructions"], [609, "schanges-deleting-sub"]], "Deleting a MIR-level MachineInstr": [[575, "deleting-a-mir-level-machineinstr"]], "Deleting an IR-level Instruction": [[575, "deleting-an-ir-level-instruction"]], "Deoptimization Operand Bundles": [[579, "deoptimization-operand-bundles"]], "Dependence Graphs in LLVM": [[537, null]], "Dependencies": [[606, "dependencies"]], "Dependent Libs Named Metadata": [[579, "dependent-libs-named-metadata"]], "Deprecation Policy": [[632, "deprecation-policy"]], "Dereferencing": [[482, "dereferencing"]], "Describing Aliasing Properties": [[545, "describing-aliasing-properties"]], "Describing Language Specific Properties": [[545, "describing-language-specific-properties"]], "Description": [[477, "description"], [517, "description"], [582, "description"]], "Design": [[566, "design"], [622, "design"]], "Design Considerations": [[578, "design-considerations"]], "Design Guidelines": [[616, "design-guidelines"]], "Design Ideas": [[480, "design-ideas"]], "Design Overview": [[593, "design-overview"]], "Design Philosophy": [[477, "design-philosophy"], [582, "design-philosophy"]], "Design Trade-offs": [[537, "design-trade-offs"]], "Design and Implementation Reference": [[564, "design-and-implementation-reference"]], "Design and Usage of the InAlloca Attribute": [[578, null]], "Design of MemorySSA": [[590, "design-of-memoryssa"]], "Design tradeoffs": [[590, "design-tradeoffs"]], "Designing Type Hierarchies and Polymorphic Interfaces": [[609, "designing-type-hierarchies-and-polymorphic-interfaces"]], "Details": [[625, "details"], [645, "details"]], "Detecting clang vs NVCC from code": [[531, "detecting-clang-vs-nvcc-from-code"]], "Determining absolute position with getPosition()": [[530, "determining-absolute-position-with-getposition"]], "Developer Policies": [[538, "developer-policies"]], "Developer Tools": [[490, "developer-tools"]], "Developing LLVM passes out of source": [[481, "developing-llvm-passes-out-of-source"]], "Developing libFuzzer": [[581, "developing-libfuzzer"]], "Development Process": [[549, "development-process"]], "Diagnostics": [[645, "diagnostics"]], "Dialect Differences Between clang and nvcc": [[531, "dialect-differences-between-clang-and-nvcc"]], "Dictionaries": [[581, "dictionaries"]], "Difference between install and install-distribution": [[479, "difference-between-install-and-install-distribution"]], "Different Pass styles": [[469, "different-pass-styles"]], "Differentiating variable kinds": [[614, "differentiating-variable-kinds"]], "Direct Stack Map Entries": [[628, "direct-stack-map-entries"]], "Directive modifiers": [[487, "directive-modifiers"]], "Directory Layout": [[550, "directory-layout"]], "Disadvantages": [[614, "disadvantages"]], "Disadvantages:": [[537, "disadvantages"]], "Disassembler": [[483, "disassembler"], [634, "disassembler"]], "Disclosure": [[623, "disclosure"]], "Discussion Medium": [[623, "discussion-medium"]], "Displaying and Analyzing Results": [[639, "displaying-and-analyzing-results"]], "Dissecting the Kernel": [[592, "dissecting-the-kernel"]], "Dissecting the sample:": [[535, "dissecting-the-sample"]], "Distinct Save and Suspend": [[534, "distinct-save-and-suspend"]], "Dither": [[613, "dither"]], "Do Not Use using namespace std": [[486, "do-not-use-using-namespace-std"]], "Do not use Braced Initializer Lists to Call a Constructor": [[486, "do-not-use-braced-initializer-lists-to-call-a-constructor"]], "Do not use RTTI or Exceptions": [[486, "do-not-use-rtti-or-exceptions"]], "Do not use Static Constructors": [[486, "do-not-use-static-constructors"]], "Docker basics": [[539, "docker-basics"]], "Document List": [[652, "document-list"]], "Documentation": [[653, "documentation"]], "Don\u2019t Expose System Headers": [[631, "don-t-expose-system-headers"]], "Don\u2019t Include System Headers": [[631, "don-t-include-system-headers"]], "Don\u2019t Unintentionally Block a Review": [[485, "don-t-unintentionally-block-a-review"]], "Don\u2019t Use Braces on Simple Single-Statement Bodies of if/else/loop Statements": [[486, "don-t-use-braces-on-simple-single-statement-bodies-of-if-else-loop-statements"]], "Don\u2019t evaluate end() every time through a loop": [[486, "don-t-evaluate-end-every-time-through-a-loop"]], "Don\u2019t use default labels in fully covered switches over enumerations": [[486, "don-t-use-default-labels-in-fully-covered-switches-over-enumerations"]], "Don\u2019t use else after a return": [[486, "don-t-use-else-after-a-return"]], "Don\u2019t use inline when defining a function in a class definition": [[486, "don-t-use-inline-when-defining-a-function-in-a-class-definition"]], "Don\u201dt check dependent loads": [[626, "don-t-check-dependent-loads"]], "Don\u201dt check loads from compile-time constant stack offsets": [[626, "don-t-check-loads-from-compile-time-constant-stack-offsets"]], "Doxygen Use in Documentation Comments": [[486, "doxygen-use-in-documentation-comments"]], "Driver Changes and Closing Thoughts": [[670, "driver-changes-and-closing-thoughts"], [681, "driver-changes-and-closing-thoughts"]], "Dynamic Allocation": [[483, "dynamic-allocation"]], "Dynamically adding command line options": [[530, "dynamically-adding-command-line-options"]], "E": [[580, "e"]], "EC Substream": [[597, "ec-substream"]], "ELF Code Object": [[466, "elf-code-object"]], "ELF SPECIFIC OPTIONS": [[522, "elf-specific-options"]], "ELF-Dependent": [[542, "elf-dependent"]], "ELF-SPECIFIC OPTIONS": [[515, "elf-specific-options"], [526, "elf-specific-options"]], "END_BLOCK Encoding": [[473, "end-block-encoding"]], "ENTER_SUBBLOCK Encoding": [[473, "enter-subblock-encoding"]], "EXAMPLE": [[500, "example"], [525, "example"]], "EXAMPLE 1": [[512, "example-1"]], "EXAMPLE 1: benchmarking instructions": [[505, "example-1-benchmarking-instructions"]], "EXAMPLE 2": [[512, "example-2"]], "EXAMPLE 2: benchmarking a custom code snippet": [[505, "example-2-benchmarking-a-custom-code-snippet"]], "EXAMPLE 3": [[512, "example-3"]], "EXAMPLE 3: analysis": [[505, "example-3-analysis"]], "EXAMPLES": [[498, "examples"], [518, "examples"], [527, "examples"]], "EXECUTION OPTIONS": [[491, "execution-options"]], "EXIT STATUS": [[487, "exit-status"], [488, "exit-status"], [489, "exit-status"], [491, "exit-status"], [492, "exit-status"], [493, "exit-status"], [495, "exit-status"], [496, "exit-status"], [497, "exit-status"], [498, "exit-status"], [499, "exit-status"], [500, "exit-status"], [502, "exit-status"], [503, "exit-status"], [504, "exit-status"], [505, "exit-status"], [506, "exit-status"], [507, "exit-status"], [509, "exit-status"], [510, "exit-status"], [512, "exit-status"], [513, "exit-status"], [514, "exit-status"], [515, "exit-status"], [518, "exit-status"], [521, "exit-status"], [522, "exit-status"], [523, "exit-status"], [524, "exit-status"], [525, "exit-status"], [526, "exit-status"], [527, "exit-status"], [528, "exit-status"], [529, "exit-status"]], "EXP": [[0, "exp"], [2, "exp"], [3, "exp"], [4, "exp"]], "EXP Modifiers": [[464, "exp-modifiers"]], "EXPORT COMMAND": [[499, "export-command"]], "Efficiency": [[578, "efficiency"]], "Efficiency Issues": [[469, "efficiency-issues"]], "Element Wise Atomic Memory Intrinsics": [[579, "element-wise-atomic-memory-intrinsics"]], "Embed the predicate state into the high bit(s) of the stack pointer": [[626, "embed-the-predicate-state-into-the-high-bit-s-of-the-stack-pointer"]], "Embedded Module": [[585, "embedded-module"]], "Embedded PowerPC Processors manuals and docs": [[532, "embedded-powerpc-processors-manuals-and-docs"]], "Embedding Bundled Code Objects": [[466, "embedding-bundled-code-objects"]], "Embedding LLVM in your project": [[481, "embedding-llvm-in-your-project"]], "Emit Object Code": [[675, "emit-object-code"]], "Emitting assembly code: GCMetadataPrinter": [[547, "emitting-assembly-code-gcmetadataprinter"]], "Emitting function stack size information": [[483, "emitting-function-stack-size-information"]], "Emitting remark diagnostics in the object file": [[620, "emitting-remark-diagnostics-in-the-object-file"]], "Enabling optimization remarks": [[620, "enabling-optimization-remarks"]], "Encoding": [[535, "encoding"]], "Encoding Suffices": [[463, "encoding-suffices"]], "End-user Options": [[492, "end-user-options"]], "EndOfBuffer Records": [[651, "endofbuffer-records"]], "Ending Execution with llvm_shutdown()": [[609, "ending-execution-with-llvm-shutdown"]], "Engine Creation": [[584, "engine-creation"]], "Epilogue Vectorization": [[645, "epilogue-vectorization"]], "Error Handling": [[652, "error-handling"]], "Error Types": [[622, "error-types"]], "Error and Warning Messages": [[486, "error-and-warning-messages"]], "Error handling": [[609, "error-handling"]], "Example": [[536, "example"], [566, "example"], [637, "example"]], "Example (custom deallocation function):": [[534, "example-custom-deallocation-function"]], "Example (final suspend point):": [[534, "example-final-suspend-point"]], "Example (normal suspend point):": [[534, "example-normal-suspend-point"]], "Example (standard deallocation functions):": [[534, "example-standard-deallocation-functions"]], "Example Nested Subsection": [[627, "example-nested-subsection"]], "Example Section": [[586, "example-section"], [627, "example-section"]], "Example Subsection": [[586, "example-subsection"]], "Example Subsubsection": [[586, "example-subsubsection"]], "Example Usage": [[594, "example-usage"]], "Example implementations of getAnalysisUsage": [[648, "example-implementations-of-getanalysisusage"]], "Example of link time optimization": [[565, "example-of-link-time-optimization"], [582, "example-of-link-time-optimization"]], "Example with clang": [[550, "example-with-clang"]], "Example:": [[534, "example"], [534, "id23"], [534, "id51"], [534, "id63"], [579, "example"], [579, "id33"], [579, "id38"], [579, "id44"], [579, "id49"], [579, "id54"], [579, "id59"], [579, "id64"], [579, "id69"], [579, "id76"], [579, "id84"], [579, "id89"], [579, "id94"], [579, "id99"], [579, "id104"], [579, "id109"], [579, "id114"], [579, "id119"], [579, "id124"], [579, "id129"], [579, "id134"], [579, "id139"], [579, "id144"], [579, "id149"], [579, "id154"], [579, "id159"], [579, "id164"], [579, "id169"], [579, "id174"], [579, "id179"], [579, "id184"], [579, "id189"], [579, "id194"], [579, "id199"], [579, "id204"], [579, "id214"], [579, "id219"], [579, "id224"], [579, "id229"], [579, "id234"], [579, "id239"], [579, "id244"], [579, "id249"], [579, "id254"], [579, "id259"], [579, "id264"], [579, "id269"], [579, "id274"], [579, "id279"], [579, "id284"], [579, "id289"], [579, "id294"], [579, "id299"], [579, "id304"], [579, "id309"], [579, "id314"], [579, "id319"], [579, "id324"], [579, "id329"], [579, "id334"], [579, "id340"], [579, "id347"], [579, "id354"], [579, "id448"], [579, "id614"], [579, "id618"], [579, "id819"], [579, "id824"]], "Example: C-level intrinsics -> assembly": [[472, "example-c-level-intrinsics-assembly"]], "Examples": [[461, "examples"], [558, "examples"], [579, "id653"], [579, "id658"], [579, "id663"], [579, "id668"], [579, "id673"], [579, "id678"], [579, "id683"], [579, "id688"], [579, "id693"], [579, "id698"], [579, "id703"], [579, "id708"], [579, "id713"], [579, "id718"], [581, "examples"]], "Examples:": [[579, "examples"], [579, "id209"], [579, "id623"], [579, "id628"], [579, "id633"], [579, "id638"], [579, "id643"], [579, "id648"], [579, "id725"], [579, "id752"], [579, "id759"], [579, "id809"], [579, "id814"], [579, "id837"], [579, "id842"], [579, "id847"], [579, "id852"], [579, "id857"], [579, "id862"], [579, "id867"], [579, "id872"], [579, "id877"], [579, "id882"], [579, "id887"], [579, "id892"], [579, "id897"], [579, "id902"]], "Exception Handling Frame": [[540, "exception-handling-frame"]], "Exception Handling Intrinsics": [[540, "exception-handling-intrinsics"], [579, "exception-handling-intrinsics"]], "Exception Handling in LLVM": [[540, null]], "Exception Handling support on the target": [[540, "exception-handling-support-on-the-target"]], "Exception Handling using the Windows Runtime": [[540, "exception-handling-using-the-windows-runtime"]], "Exception Tables": [[540, "exception-tables"]], "Exceptions": [[578, "exceptions"]], "Executing PTX": [[592, "executing-ptx"]], "Executing the Tests": [[481, "executing-the-tests"]], "Existing alias analysis implementations and clients": [[469, "existing-alias-analysis-implementations-and-clients"]], "Expand": [[646, "expand"]], "Experimental Statepoint Intrinsics": [[579, "experimental-statepoint-intrinsics"]], "Experts Should Review Code": [[485, "experts-should-review-code"]], "Explicit Representation": [[630, "explicit-representation"]], "Exploiting external storage": [[530, "exploiting-external-storage"]], "Expression Code Generation": [[670, "expression-code-generation"], [681, "expression-code-generation"]], "Expressions": [[465, "expressions"]], "Extending LLVM: Adding instructions, intrinsics, types, etc.": [[541, null]], "Extension Guide": [[530, "extending-the-library"]], "External Open Source Projects Using LLVM 12": [[618, "external-open-source-projects-using-llvm-12"]], "External Suites": [[639, "external-suites"]], "External Symbol Operands": [[585, "external-symbol-operands"]], "External Tutorials": [[687, "external-tutorials"]], "Extra Statistics to Further Diagnose Performance Issues": [[513, "extra-statistics-to-further-diagnose-performance-issues"]], "Extra files": [[641, "extra-files"]], "F": [[580, "f"]], "FAQ": [[581, "faq"]], "FAQs": [[647, "faqs"]], "FFmpeg": [[613, "ffmpeg"]], "FLAT": [[0, "flat"], [2, "flat"], [3, "flat"], [4, "flat"], [8, "flat"], [466, "flat"]], "FLAT Modifiers": [[464, "flat-modifiers"]], "FLOATING POINT OPTIONS": [[493, "floating-point-options"]], "FORMAT OF STATISTICS OUTPUT": [[504, "format-of-statistics-output"]], "FTensors": [[613, "ftensors"]], "FUNCTION_BLOCK Contents": [[473, "function-block-contents"]], "Fallible constructors": [[609, "fallible-constructors"]], "Fast-Math Flags": [[579, "fast-math-flags"]], "FastISel": [[634, "fastisel"]], "FastISel Replacement": [[564, "fastisel-replacement"]], "FaultMaps and implicit checks": [[544, null]], "Feature detection": [[613, "feature-detection"]], "Features": [[593, "features"], [612, "features"], [645, "features"]], "File Headers": [[486, "file-headers"]], "File ID Mapping": [[535, "file-id-mapping"]], "File ID:": [[535, "file-id"]], "File Info Substream": [[597, "file-info-substream"]], "File Layout": [[601, "file-layout"], [605, "file-layout"]], "FileCheck - Flexible pattern matching file verifier": [[487, null]], "FileCheck Numeric Substitution Blocks": [[487, "filecheck-numeric-substitution-blocks"]], "FileCheck Pseudo Numeric Variables": [[487, "filecheck-pseudo-numeric-variables"]], "FileCheck Regex Matching Syntax": [[487, "filecheck-regex-matching-syntax"]], "FileCheck String Substitution Blocks": [[487, "filecheck-string-substitution-blocks"]], "Filing a report": [[621, "filing-a-report"]], "Filtering and Sorting Options": [[517, "filtering-and-sorting-options"]], "Final Preparations": [[584, "final-preparations"]], "Final Suspend": [[534, "final-suspend"]], "Finding call sites: a slightly more complex example": [[609, "finding-call-sites-a-slightly-more-complex-example"]], "Finding potential reviewers": [[608, "finding-potential-reviewers"]], "Fine grained debug info with DEBUG_TYPE and the -debug-only option": [[609, "fine-grained-debug-info-with-debug-type-and-the-debug-only-option"]], "FireHose": [[613, "firehose"]], "First Class Types": [[579, "first-class-types"]], "Fixed (preassigned) registers": [[483, "fixed-preassigned-registers"]], "Fixed Lookup": [[625, "fixed-lookup"]], "Fixed Point Arithmetic Intrinsics": [[579, "fixed-point-arithmetic-intrinsics"]], "Fixed Size Arrays": [[609, "fixed-size-arrays"]], "Fixed Width Integers": [[473, "fixed-width-value"]], "Fixed variable locations": [[585, "fixed-variable-locations"]], "Flags that control numerical code": [[531, "flags-that-control-numerical-code"]], "Flame Graph Generation": [[650, "flame-graph-generation"]], "Flat Scratch": [[466, "flat-scratch"]], "Flight Data Recorder Mode": [[649, "flight-data-recorder-mode"]], "Floating Point Denorm Mode Enumeration Values": [[466, "amdgpu-amdhsa-floating-point-denorm-mode-enumeration-values-table"]], "Floating Point Environment Manipulation intrinsics": [[579, "floating-point-environment-manipulation-intrinsics"]], "Floating Point Operations": [[555, "floating-point-operations"]], "Floating Point Rounding Mode Enumeration Values": [[466, "amdgpu-amdhsa-floating-point-rounding-mode-enumeration-values-table"]], "Floating-Point Environment": [[579, "floating-point-environment"]], "Floating-Point Numbers": [[465, "floating-point-numbers"]], "Floating-Point Types": [[579, "floating-point-types"]], "Flow Mapping": [[652, "flow-mapping"]], "Flow Sequence": [[652, "flow-sequence"]], "For developers to commit changes from Git": [[550, "for-developers-to-commit-changes-from-git"]], "Fork mode": [[581, "fork-mode"]], "Format Background": [[625, "format-background"]], "Format Grammar and Invariants": [[651, "format-grammar-and-invariants"]], "Format Lambdas Like Blocks Of Code": [[486, "format-lambdas-like-blocks-of-code"]], "Format of Debugging Information": [[461, "format-of-debugging-information"]], "Formatting strings (the formatv function)": [[609, "formatting-strings-the-formatv-function"]], "Fortran function information": [[625, "fortran-function-information"]], "Fortran specific debug information": [[625, "fortran-specific-debug-information"]], "Fragile tests": [[641, "fragile-tests"]], "Frame Layout": [[483, "frame-layout"]], "Frame Pointer": [[466, "frame-pointer"]], "FreePOOMA": [[613, "freepooma"]], "Frequently Asked Questions (FAQ)": [[543, null]], "Frequently-used CMake variables": [[481, "frequently-used-cmake-variables"]], "Front-end bugs": [[574, "front-end-bugs"]], "Full Code Listing": [[654, "full-code-listing"], [655, "full-code-listing"], [656, "full-code-listing"], [657, "full-code-listing"], [669, "full-code-listing"], [670, "full-code-listing"], [671, "full-code-listing"], [672, "full-code-listing"], [673, "full-code-listing"], [674, "id1"], [675, "full-code-listing"], [676, "full-code-listing"], [680, "full-code-listing"], [681, "full-code-listing"], [682, "full-code-listing"], [683, "full-code-listing"], [684, "full-code-listing"], [685, "id1"]], "Funclet Operand Bundles": [[579, "funclet-operand-bundles"]], "Funclet parent tokens": [[540, "funclet-parent-tokens"]], "Funclet transitions": [[540, "funclet-transitions"]], "Function Attributes": [[579, "function-attributes"]], "Function Code Generation": [[670, "function-code-generation"], [681, "function-code-generation"]], "Function Entry Counts": [[475, "function-entry-counts"]], "Function Flags": [[579, "function-flags"]], "Function Record Order": [[651, "function-record-order"]], "Function Records": [[651, "function-records"]], "Function Summary": [[579, "function-summary"]], "Function Type": [[579, "function-type"]], "Function calls": [[483, "function-calls"]], "Function record:": [[535, "function-record"]], "Function template": [[609, "function-template"]], "FunctionComparator::cmpType": [[591, "functioncomparator-cmptype"]], "FunctionComparator::compare(void)": [[591, "functioncomparator-compare-void"]], "Functions": [[579, "functions"], [676, "functions"]], "Functions Vs Macros": [[482, "functions-vs-macros"]], "Functions comparison": [[591, "functions-comparison"]], "Further Exploration": [[650, "further-exploration"]], "Further Future Work": [[593, "further-future-work"]], "Further Help": [[610, "further-help"]], "Future Work": [[649, "future-work"]], "Future Work: Fine Grained Control and API-Integration": [[626, "future-work-fine-grained-control-and-api-integration"]], "Future directions for the SelectionDAG": [[483, "future-directions-for-the-selectiondag"]], "Future extensions planned": [[648, "future-extensions-planned"]], "Fuzz Target": [[581, "fuzz-target"]], "Fuzzer Usage": [[581, "fuzzer-usage"]], "Fuzzer-friendly build mode": [[581, "fuzzer-friendly-build-mode"]], "Fuzzing LLVM libraries and tools": [[546, null]], "G": [[580, "g"]], "GC Live Operand Bundles": [[579, "gc-live-operand-bundles"]], "GC Transition Operand Bundles": [[579, "gc-transition-operand-bundles"]], "GC Transitions": [[630, "gc-transitions"]], "GCOV COMMAND": [[499, "gcov-command"]], "GDB Version": [[536, "gdb-version"]], "GENERAL AND MULTI-FORMAT OPTIONS": [[522, "general-and-multi-format-options"]], "GENERAL OPTIONS": [[491, "general-options"], [493, "general-options"]], "GENERIC AND CROSS-PLATFORM OPTIONS": [[515, "generic-and-cross-platform-options"], [526, "generic-and-cross-platform-options"]], "GNU binutils replacements": [[490, "gnu-binutils-replacements"]], "GWP-ASan": [[566, null]], "GWP-ASan vs. ASan": [[566, "gwp-asan-vs-asan"]], "G_ABS": [[555, "g-abs"]], "G_ADD, G_SUB, G_MUL, G_AND, G_OR, G_XOR, G_SDIV, G_UDIV, G_SREM, G_UREM": [[555, "g-add-g-sub-g-mul-g-and-g-or-g-xor-g-sdiv-g-udiv-g-srem-g-urem"]], "G_ADDRSPACE_CAST": [[555, "g-addrspace-cast"]], "G_ANYEXT": [[555, "g-anyext"]], "G_ATOMICRMW_XCHG, G_ATOMICRMW_ADD, G_ATOMICRMW_SUB, G_ATOMICRMW_AND, G_ATOMICRMW_NAND, G_ATOMICRMW_OR, G_ATOMICRMW_XOR, G_ATOMICRMW_MAX, G_ATOMICRMW_MIN, G_ATOMICRMW_UMAX, G_ATOMICRMW_UMIN, G_ATOMICRMW_FADD, G_ATOMICRMW_FSUB": [[555, "g-atomicrmw-xchg-g-atomicrmw-add-g-atomicrmw-sub-g-atomicrmw-and-g-atomicrmw-nand-g-atomicrmw-or-g-atomicrmw-xor-g-atomicrmw-max-g-atomicrmw-min-g-atomicrmw-umax-g-atomicrmw-umin-g-atomicrmw-fadd-g-atomicrmw-fsub"]], "G_ATOMIC_CMPXCHG": [[555, "g-atomic-cmpxchg"]], "G_ATOMIC_CMPXCHG_WITH_SUCCESS": [[555, "g-atomic-cmpxchg-with-success"]], "G_BITCAST": [[555, "g-bitcast"]], "G_BITREVERSE": [[555, "g-bitreverse"]], "G_BLOCK_ADDR": [[555, "g-block-addr"]], "G_BR": [[555, "g-br"]], "G_BRCOND": [[555, "g-brcond"]], "G_BRINDIRECT": [[555, "g-brindirect"]], "G_BRJT": [[555, "g-brjt"]], "G_BSWAP": [[555, "g-bswap"]], "G_BUILD_VECTOR, G_BUILD_VECTOR_TRUNC": [[555, "g-build-vector-g-build-vector-trunc"]], "G_CONCAT_VECTORS": [[555, "g-concat-vectors"]], "G_CONSTANT": [[555, "g-constant"]], "G_CTLZ, G_CTTZ, G_CTPOP": [[555, "g-ctlz-g-cttz-g-ctpop"]], "G_CTLZ_ZERO_UNDEF, G_CTTZ_ZERO_UNDEF": [[555, "g-ctlz-zero-undef-g-cttz-zero-undef"]], "G_DYN_STACKALLOC": [[555, "g-dyn-stackalloc"]], "G_EXTRACT": [[555, "g-extract"]], "G_EXTRACT_VECTOR_ELT": [[555, "g-extract-vector-elt"]], "G_FABS": [[555, "g-fabs"]], "G_FADD, G_FSUB, G_FMUL, G_FDIV, G_FREM": [[555, "g-fadd-g-fsub-g-fmul-g-fdiv-g-frem"]], "G_FCANONICALIZE": [[555, "g-fcanonicalize"]], "G_FCEIL, G_FCOS, G_FSIN, G_FSQRT, G_FFLOOR, G_FRINT, G_FNEARBYINT": [[555, "g-fceil-g-fcos-g-fsin-g-fsqrt-g-ffloor-g-frint-g-fnearbyint"]], "G_FCMP": [[555, "g-fcmp"]], "G_FCONSTANT": [[555, "g-fconstant"]], "G_FCOPYSIGN": [[555, "g-fcopysign"]], "G_FENCE": [[555, "g-fence"]], "G_FEXP, G_FEXP2": [[555, "g-fexp-g-fexp2"]], "G_FLOG, G_FLOG2, G_FLOG10": [[555, "g-flog-g-flog2-g-flog10"]], "G_FMA": [[555, "g-fma"]], "G_FMAD": [[555, "g-fmad"]], "G_FMAXIMUM": [[555, "g-fmaximum"]], "G_FMAXNUM": [[555, "g-fmaxnum"]], "G_FMAXNUM_IEEE": [[555, "g-fmaxnum-ieee"]], "G_FMINIMUM": [[555, "g-fminimum"]], "G_FMINNUM": [[555, "g-fminnum"]], "G_FMINNUM_IEEE": [[555, "g-fminnum-ieee"]], "G_FNEG": [[555, "g-fneg"]], "G_FPEXT": [[555, "g-fpext"]], "G_FPOW": [[555, "g-fpow"]], "G_FPTOSI, G_FPTOUI, G_SITOFP, G_UITOFP": [[555, "g-fptosi-g-fptoui-g-sitofp-g-uitofp"]], "G_FPTRUNC": [[555, "g-fptrunc"]], "G_FRAME_INDEX": [[555, "g-frame-index"]], "G_GLOBAL_VALUE": [[555, "g-global-value"]], "G_ICMP": [[555, "g-icmp"]], "G_IMPLICIT_DEF": [[555, "g-implicit-def"]], "G_INDEXED_LOAD": [[555, "g-indexed-load"]], "G_INDEXED_SEXTLOAD": [[555, "g-indexed-sextload"]], "G_INDEXED_STORE": [[555, "g-indexed-store"]], "G_INDEXED_ZEXTLOAD": [[555, "g-indexed-zextload"]], "G_INSERT": [[555, "g-insert"]], "G_INSERT_VECTOR_ELT": [[555, "g-insert-vector-elt"]], "G_INTRINSIC, G_INTRINSIC_W_SIDE_EFFECTS": [[555, "g-intrinsic-g-intrinsic-w-side-effects"]], "G_INTRINSIC_ROUND": [[555, "g-intrinsic-round"]], "G_INTRINSIC_TRUNC": [[555, "g-intrinsic-trunc"]], "G_INTTOPTR": [[555, "g-inttoptr"]], "G_JUMP_TABLE": [[555, "g-jump-table"]], "G_LOAD, G_SEXTLOAD, G_ZEXTLOAD": [[555, "g-load-g-sextload-g-zextload"]], "G_MERGE_VALUES": [[555, "g-merge-values"]], "G_PHI": [[555, "g-phi"]], "G_PTRMASK": [[555, "g-ptrmask"]], "G_PTRTOINT": [[555, "g-ptrtoint"]], "G_PTR_ADD": [[555, "g-ptr-add"]], "G_SADDSAT, G_UADDSAT, G_SSUBSAT, G_USUBSAT, G_SSHLSAT, G_USHLSAT": [[555, "g-saddsat-g-uaddsat-g-ssubsat-g-usubsat-g-sshlsat-g-ushlsat"]], "G_SELECT": [[555, "g-select"]], "G_SEXT": [[555, "g-sext"]], "G_SEXT_INREG": [[555, "g-sext-inreg"]], "G_SHL, G_LSHR, G_ASHR": [[555, "g-shl-g-lshr-g-ashr"]], "G_SHUFFLE_VECTOR": [[555, "g-shuffle-vector"]], "G_SMIN, G_SMAX, G_UMIN, G_UMAX": [[555, "g-smin-g-smax-g-umin-g-umax"]], "G_STORE": [[555, "g-store"]], "G_TRUNC": [[555, "g-trunc"]], "G_UADDE, G_SADDE, G_USUBE, G_SSUBE": [[555, "g-uadde-g-sadde-g-usube-g-ssube"]], "G_UADDO, G_SADDO, G_USUBO, G_SSUBO, G_SMULO, G_UMULO": [[555, "g-uaddo-g-saddo-g-usubo-g-ssubo-g-smulo-g-umulo"]], "G_UMULH, G_SMULH": [[555, "g-umulh-g-smulh"]], "G_UNMERGE_VALUES": [[555, "g-unmerge-values"]], "G_VAARG": [[555, "g-vaarg"]], "G_VASTART": [[555, "g-vastart"]], "G_VECREDUCE_FADD, G_VECREDUCE_FMUL": [[555, "g-vecreduce-fadd-g-vecreduce-fmul"]], "G_VECREDUCE_FMAX, G_VECREDUCE_FMIN": [[555, "g-vecreduce-fmax-g-vecreduce-fmin"]], "G_VECREDUCE_SEQ_FADD, G_VECREDUCE_SEQ_FMUL": [[555, "g-vecreduce-seq-fadd-g-vecreduce-seq-fmul"]], "G_ZEXT": [[555, "g-zext"]], "Garbage Collected Stack Frames": [[677, "garbage-collected-stack-frames"], [686, "garbage-collected-stack-frames"]], "Garbage Collection": [[617, "garbage-collection"]], "Garbage Collection Safepoints in LLVM": [[630, null]], "Garbage Collection with LLVM": [[547, null]], "Garbage Collector Strategy Names": [[579, "garbage-collector-strategy-names"]], "General": [[471, "general"], [651, "general"]], "General Assembly Syntax": [[542, "general-assembly-syntax"]], "General BackEnds": [[634, "general-backends"]], "General Description": [[461, "general-description"]], "General Distribution Guidance": [[479, "general-distribution-guidance"]], "General Information": [[609, "general-information"]], "General Intrinsics": [[579, "general-intrinsics"]], "General Location Description Operations": [[461, "general-location-description-operations"]], "General Options": [[529, "general-options"]], "General Policies": [[485, "general-policies"]], "General suggestions": [[588, "general-suggestions"]], "Generating Test Output": [[640, "generating-test-output"]], "Generating safe points": [[547, "generating-safe-points"]], "Generic Algorithms": [[613, "generic-algorithms"]], "Generic Enumerated Types": [[634, "generic-enumerated-types"]], "Generic Machine IR": [[554, null]], "Generic Machine Instructions": [[554, "generic-machine-instructions"]], "Generic Opcode Reference": [[554, "generic-opcode-reference"]], "Generic Opcodes": [[555, null]], "Generic Random Fuzzing": [[546, "generic-random-fuzzing"]], "Generic Tables": [[634, "generic-tables"]], "Generic Virtual Registers": [[554, "generic-virtual-registers"]], "Getting Involved": [[549, null]], "Getting Started": [[552, "getting-started"], [581, "getting-started"], [594, "getting-started"]], "Getting Started with LLVM": [[550, "getting-started-with-llvm"]], "Getting Started with the LLVM System": [[550, null]], "Getting Started with the LLVM System using Microsoft Visual Studio": [[552, null]], "Getting Started/Tutorials": [[551, null]], "Getting Traces": [[650, "getting-traces"]], "Getting a Modern Host C++ Toolchain": [[550, "getting-a-modern-host-c-toolchain"]], "Getting the Source Code and Building LLVM": [[550, "getting-the-source-code-and-building-llvm"]], "Git pre-push hook": [[550, "git-pre-push-hook"]], "GitHub Repository Description": [[611, "github-repository-description"]], "Global Attributes": [[579, "global-attributes"]], "Global Instruction Selection": [[564, null]], "Global Internal Table": [[466, "global-internal-table"]], "Global Structures Alias Analysis": [[645, "global-structures-alias-analysis"]], "Global Symbols": [[595, "global-symbols"]], "Global Value Operands": [[585, "global-value-operands"]], "Global Value Summary Entry": [[579, "global-value-summary-entry"]], "Global Variable Summary": [[579, "global-variable-summary"]], "Global Variable and Function Addresses": [[579, "global-variable-and-function-addresses"]], "Global Variables": [[579, "global-variables"]], "GnuPG": [[613, "gnupg"]], "Goals and non-goals": [[547, "goals-and-non-goals"]], "Graph": [[613, "graph"]], "Graph Construction": [[537, "graph-construction"]], "Graph500 reference implementations": [[613, "graph500-reference-implementations"]], "Graphics User Data": [[466, "graphics-user-data"]], "Group Composition": [[623, "group-composition"]], "Grouping options into categories": [[530, "grouping-options-into-categories"]], "Guard widening:": [[579, "guard-widening"]], "Guarded Allocation Pool": [[566, "guarded-allocation-pool"]], "Guidelines": [[586, "guidelines"]], "Guidelines for Go code": [[486, "guidelines-for-go-code"]], "H": [[580, "h"]], "HCC": [[466, "hcc"]], "HOW LLVM-MCA WORKS": [[513, "how-llvm-mca-works"]], "HSA AQL Queue": [[466, "hsa-aql-queue"]], "HSA Signals": [[466, "hsa-signals"]], "Hacks": [[571, "hacks"]], "Half Precision Floating-Point Intrinsics": [[579, "half-precision-floating-point-intrinsics"]], "Handling two address instructions": [[483, "handling-two-address-instructions"]], "Hardening Loads": [[626, "hardening-loads"]], "Hardening loaded values": [[626, "hardening-loaded-values"]], "Hardening of loaded values deferred down the data-invariant expression graph": [[626, "hardening-of-loaded-values-deferred-down-the-data-invariant-expression-graph"]], "Hardening the address of the load": [[626, "hardening-the-address-of-the-load"]], "Hardware": [[532, "hardware"], [550, "hardware"], [552, "hardware"]], "Hardware-Loop Intrinsics": [[579, "hardware-loop-intrinsics"]], "HasGlobalAliases, removeUsers": [[591, "hasglobalaliases-removeusers"]], "Hash Tables": [[625, "hash-tables"]], "Header": [[466, "header"], [535, "header"]], "Header Guard": [[486, "header-guard"]], "Header Layout": [[625, "header-layout"]], "Header Section": [[651, "header-section"]], "Heap Allocated Arrays": [[609, "heap-allocated-arrays"]], "Heap tagging": [[589, "heap-tagging"]], "Helpful Hints for Common Operations": [[609, "helpful-hints-for-common-operations"]], "Helpful Information About LLVM": [[533, "helpful-information-about-llvm"]], "Hex types": [[652, "hex-types"]], "Hexagon": [[532, "hexagon"]], "Hiding an option from -help output": [[530, "hiding-an-option-from-help-output"]], "High Level Interface": [[631, "high-level-interface"]], "High Level Mitigation Approach": [[626, "high-level-mitigation-approach"]], "High Level Overview": [[535, "high-level-overview"]], "High Level Structure": [[579, "high-level-structure"], [585, "high-level-structure"]], "High Performance Geometric Multigrid": [[613, "high-performance-geometric-multigrid"]], "High-Level Alternative Mitigation Strategies": [[626, "high-level-alternative-mitigation-strategies"]], "High-Level Design": [[537, "high-level-design"]], "High-level Design": [[616, "high-level-design"]], "Historical Note": [[554, null]], "Hopefully you won\u201dt need to be this deep": [[586, "hopefully-you-won-t-need-to-be-this-deep"]], "Host C++ Toolchain, both Compiler and Standard Library": [[550, "host-c-toolchain-both-compiler-and-standard-library"]], "How To Add A Constrained Floating-Point Intrinsic": [[467, null]], "How To Add Your Build Configuration To LLVM Buildbot Infrastructure": [[567, null]], "How To Build Clang and LLVM with Profile-Guided Optimizations": [[569, null]], "How To Build On ARM": [[568, null]], "How To Cross-Compile Clang/LLVM using Clang/LLVM": [[571, null]], "How To Release LLVM To The Public": [[572, null]], "How To Use Attributes": [[576, null]], "How To Use Instruction Mappings": [[577, null]], "How To Validate a New Release": [[619, null]], "How can I tell if my front-end is following the rules?": [[548, "how-can-i-tell-if-my-front-end-is-following-the-rules"]], "How does VLA addressing work with GEPs?": [[548, "how-does-vla-addressing-work-with-geps"]], "How good is my fuzzer?": [[581, "how-good-is-my-fuzzer"]], "How is GEP different from ptrtoint, arithmetic, and inttoptr?": [[548, "how-is-gep-different-from-ptrtoint-arithmetic-and-inttoptr"]], "How it works": [[629, "how-it-works"]], "How portable is the LLVM source code?": [[543, "how-portable-is-the-llvm-source-code"]], "How registers are represented in LLVM": [[483, "how-registers-are-represented-in-llvm"]], "How the packetization tables are generated and used": [[483, "how-the-packetization-tables-are-generated-and-used"]], "How to Add Process and Library Symbols to the JITDylibs": [[593, "how-to-add-process-and-library-symbols-to-the-jitdylibs"]], "How to Cross Compile Compiler-rt Builtins For Arm": [[570, null]], "How to Submit a Patch": [[533, "how-to-submit-a-patch"]], "How to Update Debug Info: A Guide for LLVM Pass Authors": [[575, null]], "How to automatically convert tests into debug info tests": [[575, "how-to-automatically-convert-tests-into-debug-info-tests"]], "How to build it": [[565, "how-to-build-it"]], "How to create JITDylibs and set up linkage relationships": [[593, "how-to-create-jitdylibs-and-set-up-linkage-relationships"]], "How to do it?": [[591, "how-to-do-it"]], "How to implement cmpValues?": [[591, "how-to-implement-cmpvalues"]], "How to manage symbol strings": [[593, "how-to-manage-symbol-strings"]], "How to pick the date?": [[588, "how-to-pick-the-date"]], "How to report a security issue?": [[623, "how-to-report-a-security-issue"]], "How to set up LLVM-style RTTI for your class hierarchy": [[573, null]], "How to start LLVM Social in your town": [[588, null]], "How to submit an LLVM bug report": [[574, null]], "How to use ThreadSafeModule and ThreadSafeContext": [[593, "how-to-use-threadsafemodule-and-threadsafecontext"]], "How to use this template": [[627, "how-to-use-this-template"]], "How variable location metadata is transformed during CodeGen": [[625, "how-variable-location-metadata-is-transformed-during-codegen"]], "How-tos": [[593, "how-tos"]], "HydroBench": [[613, "hydrobench"]], "I": [[580, "i"]], "I Still Can\u2019t Find What I\u2019m Looking For": [[545, "i-still-can-t-find-what-i-m-looking-for"]], "I don\u2019t understand the GetElementPtr instruction. Help!": [[543, "i-don-t-understand-the-getelementptr-instruction-help"]], "IBM - Official manuals and docs": [[532, "ibm-official-manuals-and-docs"]], "IFuncs": [[579, "ifuncs"]], "IR Backwards Compatibility": [[538, "ir-backwards-compatibility"]], "IR Best Practices": [[545, "ir-best-practices"]], "IRC": [[549, "irc"]], "IRTranslator": [[556, null]], "Identifiers": [[579, "identifiers"]], "Identifying GC roots on the stack": [[547, "gcroot"]], "If Conversion": [[645, "if-conversion"]], "If \u201cF\u201d could not be overridden, fix it!": [[591, "if-f-could-not-be-overridden-fix-it"]], "If \u201cF\u201d may be overridden": [[591, "if-f-may-be-overridden"]], "If, ElseIf, Else": [[482, "if-elseif-else"]], "If/Then/Else": [[672, "if-then-else"], [683, "if-then-else"]], "Image and Samplers": [[466, "image-and-samplers"]], "Image processing": [[613, "image-processing"]], "Immediate Operands": [[585, "immediate-operands"]], "Implement a subclass of TargetInstrInfo": [[646, "implement-a-subclass-of-targetinstrinfo"]], "Implement a subclass of TargetRegisterInfo": [[646, "implement-a-subclass-of-targetregisterinfo"]], "Implementation": [[472, "implementation"], [478, "implementation"], [589, "implementation"]], "Implementation Details": [[537, "implementation-details"], [624, "implementation-details"], [626, "implementation-details"]], "Implementation:": [[579, "implementation"], [579, "id43"]], "Implementation: Getting from mass and scale to frequency": [[474, "implementation-getting-from-mass-and-scale-to-frequency"]], "Implementation: a series of DAGs": [[474, "implementation-a-series-of-dags"]], "Implementing Analysis Groups": [[648, "implementing-analysis-groups"]], "Implementing a Native Assembler": [[483, "implementing-a-native-assembler"]], "Implementing a collector plugin": [[547, "implementing-a-collector-plugin"]], "Implementing portable offsetof/sizeof": [[677, "implementing-portable-offsetof-sizeof"], [686, "implementing-portable-offsetof-sizeof"]], "Implicit Location Description Operations": [[461, "implicit-location-description-operations"]], "Important Derived Types": [[609, "important-derived-types"]], "Important Notes": [[583, "important-notes"]], "Important Public Members of the BasicBlock class": [[609, "important-public-members-of-the-basicblock-class"]], "Important Public Members of the Function": [[609, "important-public-members-of-the-function"]], "Important Public Members of the GlobalValue class": [[609, "important-public-members-of-the-globalvalue-class"]], "Important Public Members of the GlobalVariable class": [[609, "important-public-members-of-the-globalvariable-class"]], "Important Public Members of the Instruction class": [[609, "important-public-members-of-the-instruction-class"]], "Important Public Members of the Module class": [[609, "important-public-members-of-the-module-class"]], "Important Public Members of the User class": [[609, "important-public-members-of-the-user-class"]], "Important Public Members of the Value class": [[609, "important-public-members-of-the-value-class"]], "Important Public Methods": [[609, "important-public-methods"]], "Important Subclasses of Constant": [[609, "important-subclasses-of-constant"]], "Important Subclasses of the Instruction class": [[609, "important-subclasses-of-the-instruction-class"]], "Important and useful LLVM APIs": [[609, "important-and-useful-llvm-apis"]], "Importing local repositories": [[611, "importing-local-repositories"]], "In what language is LLVM written?": [[543, "in-what-language-is-llvm-written"]], "Inclusion Policy": [[632, "inclusion-policy"]], "Incorrect code generation": [[574, "incorrect-code-generation"]], "Incremental Development": [[538, "incremental-development"]], "Incubating New Projects": [[538, "incubating-new-projects"]], "Index et tableaux": [[653, "indices-and-tables"]], "Indirect Branches, Calls, and Returns": [[626, "indirect-branches-calls-and-returns"]], "Indirect Call, Branch, and Return Predicates": [[626, "indirect-call-branch-and-return-predicates"]], "Indirect inputs and outputs": [[579, "indirect-inputs-and-outputs"]], "IndirectBrInst": [[475, "indirectbrinst"]], "Inductions": [[645, "inductions"]], "Initial Kernel Execution State": [[466, "initial-kernel-execution-state"]], "Initial SelectionDAG Construction": [[483, "initial-selectiondag-construction"]], "Initializing roots to null": [[547, "initializing-roots-to-null"]], "Inline Asm": [[483, "inline-asm"]], "Inline Asm Constraint String": [[579, "inline-asm-constraint-string"]], "Inline Asm Metadata": [[579, "inline-asm-metadata"]], "Inline Assembler Expressions": [[579, "inline-assembler-expressions"]], "Input": [[652, "input"]], "Input constraints": [[579, "input-constraints"]], "Installing and Using": [[571, "installing-and-using"]], "InstrInfo": [[634, "instrinfo"]], "InstrMapping Class Overview": [[577, "instrmapping-class-overview"]], "Instruction Alias Processing": [[483, "instruction-alias-processing"]], "Instruction Aliases": [[483, "instruction-aliases"]], "Instruction Annotations": [[587, "instruction-annotations"]], "Instruction Dispatch": [[513, "instruction-dispatch"]], "Instruction Examples": [[466, "instruction-examples"]], "Instruction Flags": [[585, "instruction-flags"]], "Instruction Flow": [[513, "instruction-flow"]], "Instruction Issue": [[513, "instruction-issue"]], "Instruction Matching": [[483, "instruction-matching"]], "Instruction Operand Mapping": [[646, "instruction-operand-mapping"]], "Instruction Operand Name Mapping": [[646, "instruction-operand-name-mapping"]], "Instruction Operand Types": [[646, "instruction-operand-types"]], "Instruction Parsing": [[483, "instruction-parsing"]], "Instruction Reference": [[579, "instruction-reference"]], "Instruction Relation Mapping": [[646, "instruction-relation-mapping"]], "Instruction Scheduling": [[625, "instruction-scheduling"], [646, "instruction-scheduling"]], "Instruction Selection": [[483, "instruction-selection-section"]], "Instruction Selector": [[646, "instruction-selector"]], "Instruction Set": [[646, "instruction-set"]], "Instruction Threshold": [[650, "instruction-threshold"]], "Instruction encoding (arithmetic and jump)": [[483, "instruction-encoding-arithmetic-and-jump"]], "Instruction encoding (load, store)": [[483, "instruction-encoding-load-store"]], "Instruction folding": [[483, "instruction-folding"]], "Instruction naming": [[483, "instruction-naming"]], "Instruction referencing locations": [[585, "instruction-referencing-locations"]], "InstructionSelect": [[557, null]], "Instructions": [[0, "instructions"], [1, "instructions"], [2, "instructions"], [3, "instructions"], [4, "instructions"], [5, "instructions"], [6, "instructions"], [7, "instructions"], [8, "instructions"], [462, "instructions"], [463, "instructions"], [466, "instructions"]], "Instrumentation Attributes": [[650, "instrumentation-attributes"]], "Instrumenting your C/C++/Objective-C Application": [[649, "instrumenting-your-c-c-objective-c-application"]], "Integer Extension and Truncation": [[555, "integer-extension-and-truncation"]], "Integer Numbers": [[465, "integer-numbers"]], "Integer Operations": [[555, "integer-operations"]], "Integer Type": [[579, "integer-type"]], "Integer/bitwise reductions": [[555, "integer-bitwise-reductions"]], "Intel IA-32-specific Options": [[492, "intel-ia-32-specific-options"]], "Intended Usage": [[578, "intended-usage"]], "Interaction and relationship between User and Use objects": [[609, "interaction-and-relationship-between-user-and-use-objects"]], "Interfaces which may be specified": [[469, "interfaces-which-may-be-specified"]], "Internal vs External Storage": [[530, "internal-vs-external-storage"]], "Interoperability with std::error_code and ErrorOr": [[609, "interoperability-with-std-error-code-and-erroror"]], "Interprocedural Checking": [[626, "interprocedural-checking"]], "Intrinsic": [[634, "intrinsic"]], "Intrinsic Functions": [[579, "intrinsic-functions"]], "Intrinsic Global Variables": [[579, "intrinsic-global-variables"]], "IntrinsicID Operands": [[585, "intrinsicid-operands"]], "Intrinsics": [[534, "intrinsics"], [628, "intrinsics"], [630, "intrinsics"]], "Introducing New Components into LLVM": [[538, "introducing-new-components-into-llvm"]], "Introduction": [[0, "introduction"], [1, "introduction"], [2, "introduction"], [3, "introduction"], [4, "introduction"], [5, "introduction"], [6, "introduction"], [7, "introduction"], [8, "introduction"], [461, "introduction"], [462, "introduction"], [466, "introduction"], [468, "introduction"], [469, "introduction"], [470, "introduction"], [471, "introduction"], [472, "introduction"], [474, "introduction"], [475, "introduction"], [478, "introduction"], [479, "introduction"], [481, "introduction"], [482, "introduction"], [483, "introduction"], [486, "introduction"], [530, "introduction"], [531, "introduction"], [534, "introduction"], [535, "introduction"], [537, "introduction"], [538, "introduction"], [539, "introduction"], [540, "introduction"], [542, "introduction"], [546, "introduction"], [547, "introduction"], [548, "introduction"], [553, "introduction"], [564, "introduction"], [565, "introduction"], [566, "introduction"], [567, "introduction"], [568, "introduction"], [569, "introduction"], [570, "introduction"], [571, "introduction"], [572, "introduction"], [575, "introduction"], [576, "introduction"], [577, "introduction"], [578, "introduction"], [579, "introduction"], [581, "introduction"], [584, "introduction"], [585, "introduction"], [587, "introduction"], [589, "introduction"], [590, "introduction"], [591, "introduction"], [592, "introduction"], [593, "introduction"], [594, "introduction"], [595, "introduction"], [596, "introduction"], [597, "introduction"], [599, "introduction"], [600, "introduction"], [604, "introduction"], [605, "introduction"], [607, "introduction"], [609, "introduction"], [611, "introduction"], [612, "introduction"], [614, "introduction"], [618, "introduction"], [619, "introduction"], [622, "introduction"], [624, "introduction"], [625, "introduction"], [625, "id5"], [625, "id6"], [629, "introduction"], [634, "introduction"], [637, "introduction"], [646, "introduction"], [649, "introduction"], [651, "introduction"]], "Introduction - Achieving consistency in how we deal with bug reports": [[476, "introduction-achieving-consistency-in-how-we-deal-with-bug-reports"]], "Introduction - Got bugs?": [[574, "introduction-got-bugs"]], "Introduction and Quickstart": [[586, "introduction-and-quickstart"]], "Introduction and Warning": [[541, "introduction-and-warning"]], "Introduction to SelectionDAGs": [[483, "introduction-to-selectiondags"]], "Introduction to YAML": [[652, "introduction-to-yaml"]], "Introduction to YAML I/O": [[652, "introduction-to-yaml-i-o"]], "Introduction to the LLVM remark diagnostics": [[620, "introduction-to-the-llvm-remark-diagnostics"]], "Introduction \u2014 What is a pass?": [[647, "introduction-what-is-a-pass"], [648, "introduction-what-is-a-pass"]], "Invalidation and updating": [[590, "invalidation-and-updating"]], "InvokeInst": [[475, "invokeinst"]], "Invoking clang": [[531, "invoking-clang"]], "Is Generally Reliable": [[483, "is-generally-reliable"]], "Itanium (ia64)": [[532, "itanium-ia64"]], "Itanium ABI Zero-cost Exception Handling": [[540, "itanium-abi-zero-cost-exception-handling"]], "Iterating over def-use & use-def chains": [[609, "iterating-over-def-use-use-def-chains"]], "Iterating over predecessors & successors of blocks": [[609, "iterating-over-predecessors-successors-of-blocks"]], "Iterating over the BasicBlock in a Function": [[609, "iterating-over-the-basicblock-in-a-function"]], "Iterating over the Instruction in a BasicBlock": [[609, "iterating-over-the-instruction-in-a-basicblock"]], "Iterating over the Instruction in a Function": [[609, "iterating-over-the-instruction-in-a-function"]], "I\u2019d like to write a self-hosting LLVM compiler. How should I interface with the LLVM middle-end optimizers and back-end code generators?": [[543, "i-d-like-to-write-a-self-hosting-llvm-compiler-how-should-i-interface-with-the-llvm-middle-end-optimizers-and-back-end-code-generators"]], "I\u2019m writing a backend for a target which needs custom lowering for GEP. How do I do this?": [[548, "i-m-writing-a-backend-for-a-target-which-needs-custom-lowering-for-gep-how-do-i-do-this"]], "JIT": [[644, "jit"]], "JIT API Basics": [[654, "jit-api-basics"]], "JIT Support": [[483, "jit-support"], [646, "jit-support"]], "JSON Reference": [[634, "json-reference"]], "Jump-table Index Operands": [[585, "jump-table-index-operands"]], "Kaleidoscope Tutorial": [[658, null], [659, null], [660, null], [661, null], [662, null], [663, null], [664, null], [665, null], [666, null], [667, null]], "Kaleidoscope: Adding Debug Information": [[676, null]], "Kaleidoscope: Adding JIT and Optimizer Support": [[671, null], [682, null]], "Kaleidoscope: Code generation to LLVM IR": [[670, null], [681, null]], "Kaleidoscope: Compiling to Object Code": [[675, null]], "Kaleidoscope: Conclusion and other useful LLVM tidbits": [[677, null], [686, null]], "Kaleidoscope: Extending the Language: Control Flow": [[672, null], [683, null]], "Kaleidoscope: Extending the Language: Mutable Variables": [[674, null], [685, null]], "Kaleidoscope: Extending the Language: User-defined Operators": [[673, null], [684, null]], "Kaleidoscope: Implementing a Language with LLVM": [[687, "kaleidoscope-implementing-a-language-with-llvm"]], "Kaleidoscope: Implementing a Language with LLVM in Objective Caml": [[687, "kaleidoscope-implementing-a-language-with-llvm-in-objective-caml"]], "Kaleidoscope: Implementing a Parser and AST": [[669, null], [680, null]], "Kaleidoscope: Kaleidoscope Introduction and the Lexer": [[668, null]], "Kaleidoscope: Tutorial Introduction and the Lexer": [[679, null]], "KaleidoscopeJIT": [[654, "kaleidoscopejit"]], "Keep the current coding standard": [[614, "keep-the-current-coding-standard"]], "Keep \u00ab\u00a0Internal\u00a0\u00bb Headers Private": [[486, "keep-internal-headers-private"]], "Keeping LLVM Portable": [[631, "keeping-llvm-portable"]], "Keeping Membership Current": [[623, "keeping-membership-current"]], "Keeping git blame usable": [[614, "keeping-git-blame-usable"]], "Kernel Descriptor": [[466, "kernel-descriptor"]], "Kernel Dispatch": [[466, "kernel-dispatch"]], "Kernel Functions": [[466, "kernel-functions"]], "Kernel Metadata": [[592, "kernel-metadata"]], "Kernel Prolog": [[466, "kernel-prolog"]], "Kicking the Tires": [[673, "kicking-the-tires"], [684, "kicking-the-tires"]], "Known Bits Analysis": [[558, null]], "Kokkos": [[613, "kokkos"]], "L": [[580, "l"]], "LDR and LD1": [[472, "ldr-and-ld1"]], "LEB128": [[535, "leb128"]], "LF_ARGLIST (0x1201)": [[596, "lf-arglist-0x1201"]], "LF_ARRAY (0x1503)": [[596, "lf-array-0x1503"]], "LF_BCLASS (0x1400)": [[596, "lf-bclass-0x1400"]], "LF_BINTERFACE (0x151a)": [[596, "lf-binterface-0x151a"]], "LF_BITFIELD (0x1205)": [[596, "lf-bitfield-0x1205"]], "LF_BUILDINFO (0x1603)": [[596, "lf-buildinfo-0x1603"]], "LF_CLASS (0x1504)": [[596, "lf-class-0x1504"]], "LF_ENDPRECOMP (0x0014)": [[596, "lf-endprecomp-0x0014"]], "LF_ENUM (0x1507)": [[596, "lf-enum-0x1507"]], "LF_ENUMERATE (0x1502)": [[596, "lf-enumerate-0x1502"]], "LF_FIELDLIST (0x1203)": [[596, "lf-fieldlist-0x1203"]], "LF_FUNC_ID (0x1601)": [[596, "lf-func-id-0x1601"]], "LF_INDEX (0x1404)": [[596, "lf-index-0x1404"]], "LF_INTERFACE (0x1519)": [[596, "lf-interface-0x1519"]], "LF_IVBCLASS (0x1402)": [[596, "lf-ivbclass-0x1402"]], "LF_LABEL (0x000e)": [[596, "lf-label-0x000e"]], "LF_MEMBER (0x150d)": [[596, "lf-member-0x150d"]], "LF_METHOD (0x150f)": [[596, "lf-method-0x150f"]], "LF_METHODLIST (0x1206)": [[596, "lf-methodlist-0x1206"]], "LF_MFUNCTION (0x1009)": [[596, "lf-mfunction-0x1009"]], "LF_MFUNC_ID (0x1602)": [[596, "lf-mfunc-id-0x1602"]], "LF_MODIFIER (0x1001)": [[596, "lf-modifier-0x1001"]], "LF_NESTTYPE (0x1510)": [[596, "lf-nesttype-0x1510"]], "LF_ONEMETHOD (0x1511)": [[596, "lf-onemethod-0x1511"]], "LF_PADn (0xf0 + n)": [[596, "lf-padn-0xf0-n"]], "LF_POINTER (0x1002)": [[596, "lf-pointer-0x1002"]], "LF_PRECOMP (0x1509)": [[596, "lf-precomp-0x1509"]], "LF_PROCEDURE (0x1008)": [[596, "lf-procedure-0x1008"]], "LF_STMEMBER (0x150e)": [[596, "lf-stmember-0x150e"]], "LF_STRING_ID (0x1605)": [[596, "lf-string-id-0x1605"]], "LF_STRUCTURE (0x1505)": [[596, "lf-structure-0x1505"]], "LF_SUBSTR_LIST (0x1604)": [[596, "lf-substr-list-0x1604"]], "LF_TYPESERVER2 (0x1515)": [[596, "lf-typeserver2-0x1515"]], "LF_UDT_MOD_SRC_LINE (0x1607)": [[596, "lf-udt-mod-src-line-0x1607"]], "LF_UDT_SRC_LINE (0x1606)": [[596, "lf-udt-src-line-0x1606"]], "LF_UNION (0x1506)": [[596, "lf-union-0x1506"]], "LF_VBCLASS (0x1401)": [[596, "lf-vbclass-0x1401"]], "LF_VFTABLE (0x151d)": [[596, "lf-vftable-0x151d"]], "LF_VFUNCTAB (0x1409)": [[596, "lf-vfunctab-0x1409"]], "LF_VTSHAPE (0x000a)": [[596, "lf-vtshape-0x000a"]], "LGTM - How a Patch Is Accepted": [[485, "lgtm-how-a-patch-is-accepted"]], "LIT EXAMPLE TESTS": [[491, "lit-example-tests"]], "LIT INFRASTRUCTURE": [[491, "lit-infrastructure"]], "LLDB Version": [[536, "lldb-version"]], "LLJIT and LLLazyJIT": [[593, "lljit-and-lllazyjit"]], "LLVM": [[466, "llvm"]], "LLVM 12.0.0 Release Notes": [[618, null]], "LLVM Alias Analysis Infrastructure": [[469, null]], "LLVM Atomic Instructions and Concurrency Guide": [[470, null]], "LLVM BackEnds": [[634, "llvm-backends"]], "LLVM Bitcode File Format": [[473, null]], "LLVM Block Frequency Terminology": [[474, null]], "LLVM Branch Weight Metadata": [[475, null]], "LLVM Bug Life Cycle": [[476, null]], "LLVM Builds and Distributions": [[644, "llvm-builds-and-distributions"]], "LLVM Code Coverage Mapping Format": [[535, null]], "LLVM Code Generation": [[540, "llvm-code-generation"]], "LLVM Code-Review Policy and Practices": [[485, null]], "LLVM Coding Standards": [[486, null]], "LLVM Command Guide": [[490, null]], "LLVM Community Code of Conduct": [[484, null]], "LLVM Community Support Policy": [[632, null]], "LLVM Developer Policy": [[538, null]], "LLVM Developers Meeting presentations": [[590, "llvm-developers-meeting-presentations"]], "LLVM Extensions": [[542, null]], "LLVM Function Attribute": [[649, "llvm-function-attribute"]], "LLVM IR": [[617, "llvm-ir"]], "LLVM IR Attributes": [[466, "llvm-ir-attributes"]], "LLVM IR Blocks": [[473, "llvm-ir-blocks"]], "LLVM IR Encoding": [[473, "llvm-ir-encoding"]], "LLVM IR Features": [[547, "llvm-ir-features"]], "LLVM IR Intrinsics": [[466, "llvm-ir-intrinsics"]], "LLVM IR Lane ordering": [[472, "llvm-ir-lane-ordering"]], "LLVM IR Magic Number": [[473, "llvm-ir-magic-number"]], "LLVM IR Representation": [[535, "llvm-ir-representation"]], "LLVM IR for If/Then/Else": [[672, "llvm-ir-for-if-then-else"], [683, "llvm-ir-for-if-then-else"]], "LLVM IR for the \u201cfor\u201d Loop": [[672, "llvm-ir-for-the-for-loop"], [683, "llvm-ir-for-the-for-loop"]], "LLVM Language Reference Manual": [[579, null]], "LLVM Link Time Optimization: Design and Implementation": [[582, null]], "LLVM Loop Terminology (and Canonical Forms)": [[583, null]], "LLVM Optimization Passes": [[671, "llvm-optimization-passes"], [682, "llvm-optimization-passes"]], "LLVM PowerPC ABI": [[483, "llvm-powerpc-abi"]], "LLVM Programmer\u2019s Manual": [[609, null]], "LLVM Project Wrappers": [[482, "llvm-project-wrappers"]], "LLVM Reference": [[617, "llvm-reference"]], "LLVM Security Group": [[623, null]], "LLVM Testing Infrastructure Guide": [[641, null]], "LLVM Testing Infrastructure Organization": [[641, "llvm-testing-infrastructure-organization"]], "LLVM Tutorial: Table of Contents": [[687, null]], "LLVM bitstream remarks": [[620, "llvm-bitstream-remarks"]], "LLVM bugpoint tool: design and usage": [[477, null]], "LLVM-specific variables": [[481, "llvm-specific-variables"]], "LLVM\u2019s Analysis and Transform Passes": [[607, null]], "LLVM\u2019s Optional Rich Disassembly Output": [[587, null]], "LOCAL CONFIGURATION FILES": [[491, "local-configuration-files"]], "LTO Post-Link Module Flags Metadata": [[579, "lto-post-link-module-flags-metadata"]], "Label Type": [[579, "label-type"]], "Laissez faire": [[614, "laissez-faire"]], "Lanai": [[532, "lanai"]], "Lane identifier": [[466, "lane-identifier"]], "Language Extensions and File Format Changes": [[625, "language-extensions-and-file-format-changes"]], "Language Names": [[461, "amdgpu-dwarf-language-names-table"]], "Language and Compiler Issues": [[486, "language-and-compiler-issues"]], "Language encodings": [[461, "amdgpu-dwarf-language-encodings-table"]], "Language-Specific Optimizations": [[677, "language-specific-optimizations"], [686, "language-specific-optimizations"]], "Languages, Libraries, and Standards": [[486, "languages-libraries-and-standards"]], "Late Machine Code Optimizations": [[483, "late-machine-code-optimizations"]], "Layering Over Another libc": [[612, "layering-over-another-libc"]], "Laziness": [[593, "laziness"]], "Lazy Compilation": [[656, "lazy-compilation"]], "Lazy Initialization with ManagedStatic": [[609, "lazy-initialization-with-managedstatic"]], "Leaf Records": [[596, "leaf-records"]], "Leaks": [[581, "leaks"]], "Leftover Transformations": [[642, "leftover-transformations"]], "Legacy License Structure": [[538, "legacy-license-structure"]], "Legal": [[646, "legal"]], "Legalizer": [[559, null]], "Lexer Extensions for If/Then/Else": [[672, "lexer-extensions-for-if-then-else"], [683, "lexer-extensions-for-if-then-else"]], "Lexer Extensions for the \u201cfor\u201d Loop": [[672, "lexer-extensions-for-the-for-loop"], [683, "lexer-extensions-for-the-for-loop"]], "LibFuzzer": [[617, "libfuzzer"]], "Libcalls: __atomic_*": [[470, "libcalls-atomic"]], "Libcalls: __sync_*": [[470, "libcalls-sync"]], "Library": [[622, "library"]], "Library Layering": [[486, "library-layering"]], "License": [[543, "license"]], "Licensing": [[565, "licensing"]], "Lifetime": [[578, "lifetime"]], "Limitation": [[643, null]], "Limitations": [[469, "limitations"], [585, "limitations"]], "Limitations and Half Baked Ideas": [[630, "limitations-and-half-baked-ideas"]], "Line Number Information": [[461, "line-number-information"], [461, "id2"], [466, "line-number-information"]], "Line number header entry format encodings": [[461, "amdgpu-dwarf-line-number-header-entry-format-encodings-table"]], "Linkage Types": [[579, "linkage-types"]], "Linking with Libdevice": [[592, "linking-with-libdevice"]], "Links": [[550, "links"], [552, "links"], [627, "links"]], "Linux": [[471, "linux"], [532, "linux"]], "Linux Intel": [[471, "linux-intel"]], "Lists": [[482, "lists"], [627, "lists"]], "Lists of Lists": [[482, "lists-of-lists"]], "Literal Operations": [[461, "literal-operations"]], "Live In Registers": [[585, "live-in-registers"]], "Live Intervals": [[483, "live-intervals"]], "Live Intervals Analysis": [[483, "live-intervals-analysis"]], "Live Variable Analysis": [[483, "live-variable-analysis"]], "LiveDebugValues expansion of variable locations": [[625, "livedebugvalues-expansion-of-variable-locations"]], "Load/Store Unit and Memory Consistency Model": [[513, "load-store-unit-and-memory-consistency-model"]], "Loaded Code Object Path Uniform Resource Identifier (URI)": [[466, "loaded-code-object-path-uniform-resource-identifier-uri"]], "Loads folded into data-invariant operations can be hardened after the operation": [[626, "loads-folded-into-data-invariant-operations-can-be-hardened-after-the-operation"]], "Local LLVM Configuration": [[550, "local-llvm-configuration"]], "Locating clobbers yourself": [[590, "locating-clobbers-yourself"]], "Location": [[480, "location"]], "Location Description Operations": [[461, "location-description-operations"]], "Location List Expressions": [[461, "location-list-expressions"]], "Logarithmical search": [[591, "logarithmical-search"]], "Lookup By Address Section Header": [[466, "lookup-by-address-section-header"]], "Lookup By Name": [[461, "lookup-by-name"]], "Lookup By Name Section Header": [[466, "lookup-by-name-section-header"]], "Loop Closed SSA (LCSSA)": [[583, "loop-closed-ssa-lcssa"]], "Loop Definition": [[583, "loop-definition"]], "Loop Distribution": [[642, "loop-distribution"]], "Loop Interchange": [[642, "loop-interchange"]], "Loop Scale": [[474, "loop-scale"]], "Loop Simplify Form": [[583, "loop-simplify-form"]], "Loop Unrolling": [[642, "loop-unrolling"]], "Loop Vectorization and Interleaving": [[642, "loop-vectorization-and-interleaving"]], "LoopInfo": [[583, "loopinfo"]], "Loops": [[482, "loops"]], "Loops with unknown trip count": [[645, "loops-with-unknown-trip-count"]], "Low Level Type": [[554, "low-level-type"]], "Lowering Quality and Representation Overhead": [[630, "lowering-quality-and-representation-overhead"]], "Lowering:": [[579, "lowering"], [579, "id1187"], [579, "id1208"], [579, "id1213"], [579, "id1218"], [579, "id1220"], [579, "id1222"], [579, "id1224"], [579, "id1226"], [579, "id1228"], [579, "id1230"], [579, "id1232"], [579, "id1234"], [579, "id1236"], [579, "id1238"], [579, "id1240"], [579, "id1242"], [579, "id1244"], [579, "id1246"], [579, "id1248"], [579, "id1250"], [579, "id1252"], [579, "id1254"]], "M": [[580, "m"]], "M0": [[466, "m0"]], "MACH-O ONLY OPTIONS AND COMMANDS": [[516, "mach-o-only-options-and-commands"]], "MACH-O SPECIFIC OPTIONS": [[514, "mach-o-specific-options"], [522, "mach-o-specific-options"], [527, "mach-o-specific-options"]], "MCJIT Design and Implementation": [[584, null]], "MCSymbol Operands": [[585, "mcsymbol-operands"]], "MERGE": [[518, "merge"]], "METADATA_ATTACHMENT Contents": [[473, "metadata-attachment-contents"]], "METADATA_BLOCK Contents": [[473, "metadata-block-contents"]], "META_BLOCK": [[620, "meta-block"]], "MIMG": [[0, "mimg"], [2, "mimg"], [3, "mimg"], [4, "mimg"]], "MIMG Modifiers": [[464, "mimg-modifiers"]], "MIPS": [[532, "mips"]], "MIR Testing Guide": [[585, "mir-testing-guide"]], "MODULE_BLOCK Contents": [[473, "module-block-contents"]], "MODULE_CODE_ALIAS Record": [[473, "module-code-alias-record"]], "MODULE_CODE_ASM Record": [[473, "module-code-asm-record"]], "MODULE_CODE_DATALAYOUT Record": [[473, "module-code-datalayout-record"]], "MODULE_CODE_DEPLIB Record": [[473, "module-code-deplib-record"]], "MODULE_CODE_FUNCTION Record": [[473, "module-code-function-record"]], "MODULE_CODE_GCNAME Record": [[473, "module-code-gcname-record"]], "MODULE_CODE_GLOBALVAR Record": [[473, "module-code-globalvar-record"]], "MODULE_CODE_SECTIONNAME Record": [[473, "module-code-sectionname-record"]], "MODULE_CODE_TRIPLE Record": [[473, "module-code-triple-record"]], "MODULE_CODE_VERSION Record": [[473, "module-code-version-record"]], "MRI SCRIPTS": [[495, "mri-scripts"]], "MRI Script Commands": [[495, "mri-script-commands"]], "MSF Container Options": [[517, "msf-container-options"]], "MSF File Options": [[517, "msf-file-options"]], "MTBUF": [[0, "mtbuf"], [2, "mtbuf"], [3, "mtbuf"], [4, "mtbuf"]], "MUBUF": [[0, "mubuf"], [2, "mubuf"], [3, "mubuf"], [4, "mubuf"], [8, "mubuf"], [466, "mubuf"]], "MUBUF/MTBUF Modifiers": [[464, "mubuf-mtbuf-modifiers"]], "Mach-O Changes": [[625, "mach-o-changes"]], "MachSuite": [[613, "machsuite"]], "Machine Basic Blocks": [[585, "machine-basic-blocks"]], "Machine Code Emitter": [[646, "machine-code-emitter"]], "Machine Functions": [[585, "machine-functions"]], "Machine IR (MIR) Format Reference Manual": [[585, null]], "Machine Instructions": [[585, "machine-instructions"]], "Machine Instructions Format Reference": [[585, "machine-instructions-format-reference"]], "Machine Operands": [[585, "machine-operands"]], "Machine code description classes": [[483, "machine-code-description-classes"]], "Machine code in SSA form": [[483, "machine-code-in-ssa-form"]], "Machine-specific Assembly Syntax": [[542, "machine-specific-assembly-syntax"]], "MachineInstr Bundles": [[483, "machineinstr-bundles"]], "MachineVerifier": [[560, "machineverifier"]], "Magic Numbers": [[473, "magic-numbers"]], "Mailing Lists": [[549, "mailing-lists"]], "Maintenance of cc-by-default settings": [[476, "maintenance-of-cc-by-default-settings"]], "Maintenance of products/components metadata": [[476, "maintenance-of-products-components-metadata"]], "Making a Major Change": [[538, "making-a-major-change"]], "Making and Submitting a Patch": [[538, "making-and-submitting-a-patch"]], "Making simple changes": [[609, "making-simple-changes"]], "Map-Like Containers (std::map, DenseMap, etc)": [[609, "map-like-containers-std-map-densemap-etc"]], "Mapping Region": [[535, "mapping-region"], [535, "id6"]], "Mapping Regions": [[535, "mapping-regions"]], "Mapping from instructions to functional units": [[483, "mapping-from-instructions-to-functional-units"]], "Mapping virtual registers to physical registers": [[483, "mapping-virtual-registers-to-physical-registers"]], "Mappings": [[652, "mappings"]], "Markdown Quickstart Template": [[586, null]], "Marking Functions as Kernels": [[592, "marking-functions-as-kernels"]], "Masked Vector Expanding Load and Compressing Store Intrinsics": [[579, "masked-vector-expanding-load-and-compressing-store-intrinsics"]], "Masked Vector Gather and Scatter Intrinsics": [[579, "masked-vector-gather-and-scatter-intrinsics"]], "Masked Vector Load and Store Intrinsics": [[579, "masked-vector-load-and-store-intrinsics"]], "Matching Newline Characters": [[487, "matching-newline-characters"]], "Matching a PDB to its executable": [[602, "matching-a-pdb-to-its-executable"]], "Matrix Intrinsics": [[579, "matrix-intrinsics"]], "Mechanical Source Issues": [[486, "mechanical-source-issues"]], "Meetups and social events": [[549, "meetups-and-social-events"]], "MemTagSanitizer": [[589, null]], "Member Records": [[596, "member-records"]], "Members of the Code of Conduct Advisory Committee": [[621, "members-of-the-code-of-conduct-advisory-committee"]], "Memory Access and Addressing Operations": [[579, "memory-access-and-addressing-operations"]], "Memory Dependence Analysis": [[469, "memory-dependence-analysis"]], "Memory Location Description Operations": [[461, "memory-location-description-operations"]], "Memory Model": [[466, "memory-model"]], "Memory Model GFX10": [[466, "memory-model-gfx10"]], "Memory Model GFX6-GFX9": [[466, "memory-model-gfx6-gfx9"]], "Memory Model for Concurrent Operations": [[579, "memory-model-for-concurrent-operations"]], "Memory Operations": [[555, "memory-operations"]], "Memory Scopes": [[466, "memory-scopes"]], "Memory Spaces": [[466, "memory-spaces"]], "Memory Use Markers": [[579, "memory-use-markers"]], "Memory in LLVM": [[674, "memory-in-llvm"], [685, "memory-in-llvm"]], "MemorySSA": [[590, null]], "MemorySSA Structure": [[590, "memoryssa-structure"]], "Merge Requests": [[572, "merge-requests"]], "MergeFunctions pass, how it works": [[591, null]], "MergeFunctions, main fields and runOnModule": [[591, "mergefunctions-main-fields-and-runonmodule"]], "Merging Patches": [[572, "merging-patches"]], "Merging process, mergeTwoFunctions": [[591, "merging-process-mergetwofunctions"]], "Metadata": [[579, "metadata"]], "Metadata Nodes and Metadata Strings": [[579, "metadata-nodes-and-metadata-strings"]], "Metadata Records": [[651, "metadata-records"]], "Metadata Type": [[579, "metadata-type"]], "Metadata on Loops": [[642, "metadata-on-loops"]], "Method information": [[486, "method-information"]], "Microscopic Details": [[486, "microscopic-details"]], "Microsoft Visual C++": [[481, "microsoft-visual-c"]], "Minimising cost of downstream merges": [[614, "minimising-cost-of-downstream-merges"]], "Minimize Soft Errors": [[631, "minimize-soft-errors"]], "Minimizing Binary Size": [[649, "minimizing-binary-size"]], "Minimizing docker image size": [[539, "minimizing-docker-image-size"]], "Minimum Legality For Operations": [[559, "minimum-legality-for-operations"]], "Minimum Legality For Vectors": [[559, "minimum-legality-for-vectors"]], "Minimum Legality for Pointers": [[559, "minimum-legality-for-pointers"]], "Minimum Rule Set": [[559, "minimum-rule-set"]], "Minimum Rules For Scalars": [[559, "minimum-rules-for-scalars"]], "Miscellaneous Attributes": [[585, "miscellaneous-attributes"]], "Miscellaneous Modifiers": [[464, "miscellaneous-modifiers"]], "Miscellaneous Options": [[517, "miscellaneous-options"]], "Miscellaneous Problems": [[648, "miscellaneous-problems"]], "Miscellaneous Resources": [[532, "miscellaneous-resources"]], "Miscellaneous Variables": [[610, "miscellaneous-variables"]], "Miscellaneous option modifiers": [[530, "miscellaneous-option-modifiers"]], "Miscompilation debugger": [[477, "miscompilation-debugger"]], "Miscompilations": [[574, "miscompilations"]], "Mixing References and Raw Pointers": [[630, "mixing-references-and-raw-pointers"]], "Mnemonic Aliases": [[483, "mnemonic-aliases"]], "Modeling Memory Effects": [[545, "modeling-memory-effects"]], "Modifications for other Targets": [[570, "modifications-for-other-targets"]], "Modifiers": [[462, "modifiers"], [463, "modifiers"], [464, "modifiers"], [466, "modifiers"]], "Modifiers (generic)": [[495, "modifiers-generic"]], "Modifiers (operation specific)": [[495, "modifiers-operation-specific"]], "Module & File Options": [[517, "module-file-options"]], "Module Flags Metadata": [[579, "module-flags-metadata"]], "Module Info Substream": [[597, "module-info-substream"]], "Module Options": [[517, "module-options"]], "Module Path Summary Entry": [[579, "module-path-summary-entry"]], "Module Structure": [[579, "module-structure"]], "Module Symbols": [[595, "module-symbols"]], "Module-Level Inline Assembly": [[579, "module-level-inline-assembly"]], "Modules": [[482, "modules"]], "Modules, Functions and Macros": [[482, "modules-functions-and-macros"]], "Monorepo": [[611, "monorepo"]], "Monorepo Drawbacks": [[611, "monorepo-drawbacks"]], "Monorepo Variant": [[611, "monorepo-variant"], [611, "workflow-monocheckout-multicommit"], [611, "workflow-mono-branching"], [611, "workflow-mono-bisecting"]], "Monotonic": [[470, "monotonic"]], "More Platforms": [[649, "more-platforms"]], "More Resources": [[553, "more-resources"]], "More examples": [[581, "more-examples"]], "More information": [[589, "more-information"]], "Motivation": [[461, "motivation"], [544, "motivation"], [615, "motivation"], [628, "motivation"]], "Moved": [[633, "moved"], [638, "moved"]], "Moving LLVM Projects to GitHub": [[611, null]], "Moving Local Branches to the Monorepo": [[611, "moving-local-branches-to-the-monorepo"]], "Multi-phase communication between libLTO and linker": [[582, "multi-phase-communication-between-liblto-and-linker"]], "Multi-stage PGO": [[468, "multi-stage-pgo"]], "Multiple Suspend Points": [[534, "multiple-suspend-points"]], "Multithreaded LLVM": [[648, "multithreaded-llvm"]], "Must Code Be Reviewed Prior to Being Committed?": [[485, "must-code-be-reviewed-prior-to-being-committed"]], "Must, May, and No Alias Responses": [[469, "must-may-and-no-alias-responses"]], "Mutable Variables in Kaleidoscope": [[674, "mutable-variables-in-kaleidoscope"], [685, "mutable-variables-in-kaleidoscope"]], "Mutation testing for IR-level transformations": [[575, "mutation-testing-for-ir-level-transformations"]], "Mutation testing for MIR-level transformations": [[575, "mutation-testing-for-mir-level-transformations"]], "Mutators and Input Generators": [[546, "mutators-and-input-generators"]], "My First Language Frontend with LLVM Tutorial": [[678, null]], "N": [[580, "n"]], "NAS Parallel Benchmarks": [[613, "nas-parallel-benchmarks"]], "NVPTX": [[532, "nvptx"]], "NVPTX Intrinsics": [[592, "nvptx-intrinsics"]], "NWChem": [[613, "nwchem"]], "Name Accelerator Tables": [[625, "name-accelerator-tables"]], "Name Hash Tables": [[625, "name-hash-tables"]], "Name Types, Functions, Variables, and Enumerators Properly": [[486, "name-types-functions-variables-and-enumerators-properly"]], "Named Alternatives": [[530, "named-alternatives"]], "Named Metadata": [[579, "named-metadata"]], "Named Stream Map": [[602, "named-stream-map"]], "Namespace Indentation": [[486, "namespace-indentation"]], "Narrative structure": [[591, "narrative-structure"]], "Narrow focus: test-case reduction": [[478, "narrow-focus-test-case-reduction"]], "Native Object File Wrapper Format": [[473, "native-object-file-wrapper-format"]], "Near Future Work": [[593, "near-future-work"]], "Nested Calls and Copy Elision": [[578, "nested-calls-and-copy-elision"]], "New Assignment Operator": [[674, "new-assignment-operator"], [685, "new-assignment-operator"]], "New DWARF Attributes": [[625, "new-dwarf-attributes"]], "New DWARF Constants": [[625, "new-dwarf-constants"]], "New DWARF Tags": [[625, "new-dwarf-tags"]], "New LLVM Project License Framework": [[538, "new-llvm-project-license-framework"]], "New exception handling instructions": [[540, "new-exception-handling-instructions"]], "NewBuffer Records": [[651, "newbuffer-records"]], "NewCpuId Records": [[651, "newcpuid-records"]], "Next Steps": [[650, "next-steps"]], "No Duplicate Implementations": [[631, "no-duplicate-implementations"]], "No Exposed Data": [[631, "no-exposed-data"]], "No Exposed Functions": [[631, "no-exposed-functions"]], "No Normalization": [[652, "no-normalization"]], "No Unused Functionality": [[631, "no-unused-functionality"]], "No Virtual Methods": [[631, "no-virtual-methods"]], "No global aliases, replaceDirectCallers": [[591, "no-global-aliases-replacedirectcallers"]], "No target passed to clang": [[570, "no-target-passed-to-clang"]], "No throw Specifications": [[631, "no-throw-specifications"]], "Nomination process": [[623, "nomination-process"]], "Non-Experts Should Review Code": [[485, "non-experts-should-review-code"]], "Non-Goals": [[590, "non-goals"]], "Non-Integral Pointer Type": [[579, "non-integral-pointer-type"]], "Non-Kernel Functions": [[466, "non-kernel-functions"]], "Non-comprehensive list of changes in this release": [[618, "non-comprehensive-list-of-changes-in-this-release"]], "Normalization": [[652, "normalization"]], "NotAtomic": [[470, "notatomic"]], "Notation": [[0, "notation"], [1, "notation"], [2, "notation"], [3, "notation"], [4, "notation"], [5, "notation"], [6, "notation"], [7, "notation"], [8, "notation"], [462, "notation"], [462, "id1"], [462, "amdgpu-syn-instruction-operand-notation"], [462, "amdgpu-syn-instruction-modifier-notation"]], "Note Records": [[466, "note-records"]], "Notes On Building LLVM/Clang on ARM": [[568, "notes-on-building-llvm-clang-on-arm"]], "Numbers": [[465, "numbers"]], "O": [[580, "o"]], "O(log(N))": [[591, "o-log-n"]], "OPTIONS": [[487, "options"], [488, "options"], [489, "options"], [492, "options"], [495, "options"], [496, "options"], [497, "options"], [498, "options"], [499, "options"], [499, "id5"], [499, "id8"], [499, "id11"], [500, "options"], [501, "options"], [503, "options"], [504, "options"], [505, "options"], [506, "options"], [507, "options"], [509, "options"], [510, "options"], [512, "options"], [513, "options"], [514, "options"], [516, "options"], [518, "options"], [518, "id5"], [518, "id8"], [519, "options"], [521, "options"], [523, "options"], [524, "options"], [525, "options"], [527, "options"], [528, "options"], [529, "options"]], "ORC Design and Implementation": [[593, null]], "OUTPUT OPTIONS": [[491, "output-options"]], "OVERLAP": [[518, "overlap"]], "Object Loading": [[584, "object-loading"]], "Object lifetime in optimized code": [[625, "object-lifetime-in-optimized-code"]], "Object lifetimes and scoping": [[625, "object-lifetimes-and-scoping"]], "Objective": [[480, "objective"]], "Objective-C ARC Runtime Intrinsics": [[579, "objective-c-arc-runtime-intrinsics"]], "Objective-C Extensions": [[625, "objective-c-extensions"]], "Objective-C Garbage Collection Module Flags Metadata": [[579, "objective-c-garbage-collection-module-flags-metadata"]], "Objects on the Stack": [[630, "objects-on-the-stack"]], "Obtaining Commit Access": [[538, "obtaining-commit-access"]], "Obtaining Help": [[531, "obtaining-help"]], "Official Testing": [[572, "official-testing"]], "On Managing Revision Numbers with Git": [[611, "on-managing-revision-numbers-with-git"]], "On-Disk Format": [[599, "on-disk-format"]], "Ongoing Development Directions": [[645, "ongoing-development-directions"]], "Opaque Structure Types": [[579, "opaque-structure-types"]], "Opcode": [[462, "opcode"]], "Opcode Mnemonic": [[463, "opcode-mnemonic"]], "OpenBenchmarking.org CPU / Processor Suite": [[613, "openbenchmarking-org-cpu-processor-suite"]], "OpenCL": [[466, "opencl"]], "OpenCL kernel implicit arguments appended for AMDHSA OS": [[466, "opencl-kernel-implicit-arguments-appended-for-amdhsa-os-table"]], "OpenCV": [[613, "opencv"]], "OpenMP 4.x SIMD Benchmarks": [[613, "openmp-4-x-simd-benchmarks"]], "Operand Bundles": [[579, "operand-bundles"]], "Operands": [[462, "operands"], [463, "operands"], [465, "operands"], [466, "operands"]], "Operands and Operations": [[465, "operands-and-operations"]], "Operands:": [[628, "operands"], [628, "id3"], [630, "operands"], [630, "id3"], [630, "id7"]], "Operation Expressions": [[461, "operation-expressions"], [466, "operation-expressions"]], "Operations": [[495, "operations"]], "OptParserDefs": [[634, "optparserdefs"]], "Optimization Hint": [[579, "optimization-hint"]], "Optimization outside atomic": [[470, "optimization-outside-atomic"]], "Optimizations": [[531, "optimizations"], [626, "optimizations"], [644, "optimizations"]], "Optimizations, Alternatives, and Tradeoffs": [[626, "optimizations-alternatives-and-tradeoffs"]], "Optimizing Modules using the IRTransformLayer": [[655, "optimizing-modules-using-the-irtransformlayer"]], "Option Attributes": [[530, "option-attributes"]], "Option Modifiers": [[530, "option-modifiers"]], "Optional Configuration Items": [[550, "optional-configuration-items"]], "Optional Debug Header Stream": [[597, "optional-debug-header-stream"]], "Options": [[517, "options"], [517, "id2"], [517, "id4"], [517, "id7"], [517, "id9"], [517, "id11"], [566, "options"], [581, "options"], [622, "options"], [641, "options"]], "Options and variables": [[481, "options-and-variables"]], "Options for Optimizing LLVM": [[479, "options-for-optimizing-llvm"]], "Options for Reducing Size": [[479, "options-for-reducing-size"]], "Order of Keys": [[652, "order-of-keys"]], "Other": [[475, "other"], [495, "other"]], "Other Debugger Information": [[461, "other-debugger-information"]], "Other Design Notes": [[480, "other-design-notes"]], "Other Features": [[641, "other-features"]], "Other Intrinsics": [[592, "other-intrinsics"]], "Other Map-Like Container Options": [[609, "other-map-like-container-options"]], "Other Operations": [[555, "other-operations"], [579, "other-operations"]], "Other Options": [[517, "other-options"]], "Other Sequential Container options": [[609, "other-sequential-container-options"]], "Other Set-Like Container Options": [[609, "other-set-like-container-options"]], "Other Things to Consider": [[545, "other-things-to-consider"]], "Other Types": [[482, "other-types"]], "Other Values": [[579, "other-values"]], "Other documents, collections, notes": [[532, "other-documents-collections-notes"]], "Other relevant lists": [[532, "other-relevant-lists"]], "Other useful AliasAnalysis methods": [[469, "other-useful-aliasanalysis-methods"]], "Other useful references": [[609, "other-useful-references"]], "Output": [[581, "output"], [652, "output"]], "Output constraints": [[579, "output-constraints"]], "Outstanding Questions": [[611, "outstanding-questions"]], "Overloading Based on __host__ and __device__ Attributes": [[531, "overloading-based-on-host-and-device-attributes"]], "Overview": [[473, "overview"], [539, "overview"], [540, "overview"], [550, "overview"], [552, "overview"], [579, "id650"], [579, "id655"], [579, "id660"], [579, "id665"], [579, "id670"], [579, "id675"], [579, "id680"], [579, "id685"], [579, "id690"], [579, "id695"], [579, "id700"], [579, "id705"], [579, "id710"], [579, "id715"], [585, "overview"], [610, "overview"], [627, "overview"], [640, "overview"], [641, "overview"], [642, "overview"]], "Overview & Core Concepts": [[630, "overview-core-concepts"]], "Overview of available features": [[547, "overview-of-available-features"]], "Overview of the Release Process": [[619, "overview-of-the-release-process"]], "Overview:": [[534, "overview"], [534, "id3"], [534, "id6"], [534, "id9"], [534, "id12"], [534, "id15"], [534, "id18"], [534, "id20"], [534, "id24"], [534, "id27"], [534, "id30"], [534, "id33"], [534, "id36"], [534, "id38"], [534, "id40"], [534, "id43"], [534, "id45"], [534, "id48"], [534, "id52"], [534, "id55"], [534, "id57"], [534, "id60"], [579, "overview"], [579, "id30"], [579, "id35"], [579, "id40"], [579, "id46"], [579, "id51"], [579, "id56"], [579, "id61"], [579, "id66"], [579, "id71"], [579, "id78"], [579, "id81"], [579, "id86"], [579, "id91"], [579, "id96"], [579, "id101"], [579, "id106"], [579, "id111"], [579, "id116"], [579, "id121"], [579, "id126"], [579, "id131"], [579, "id136"], [579, "id141"], [579, "id146"], [579, "id151"], [579, "id156"], [579, "id161"], [579, "id166"], [579, "id171"], [579, "id176"], [579, "id181"], [579, "id186"], [579, "id191"], [579, "id196"], [579, "id201"], [579, "id206"], [579, "id211"], [579, "id216"], [579, "id221"], [579, "id226"], [579, "id231"], [579, "id236"], [579, "id241"], [579, "id246"], [579, "id251"], [579, "id256"], [579, "id261"], [579, "id266"], [579, "id271"], [579, "id276"], [579, "id281"], [579, "id286"], [579, "id291"], [579, "id296"], [579, "id301"], [579, "id306"], [579, "id311"], [579, "id316"], [579, "id321"], [579, "id326"], [579, "id331"], [579, "id336"], [579, "id342"], [579, "id349"], [579, "id356"], [579, "id360"], [579, "id364"], [579, "id369"], [579, "id373"], [579, "id377"], [579, "id381"], [579, "id385"], [579, "id388"], [579, "id391"], [579, "id395"], [579, "id399"], [579, "id402"], [579, "id405"], [579, "id408"], [579, "id411"], [579, "id415"], [579, "id419"], [579, "id422"], [579, "id425"], [579, "id429"], [579, "id433"], [579, "id437"], [579, "id440"], [579, "id443"], [579, "id446"], [579, "id450"], [579, "id454"], [579, "id457"], [579, "id460"], [579, "id463"], [579, "id466"], [579, "id470"], [579, "id474"], [579, "id478"], [579, "id482"], [579, "id486"], [579, "id490"], [579, "id494"], [579, "id498"], [579, "id502"], [579, "id506"], [579, "id510"], [579, "id514"], [579, "id518"], [579, "id522"], [579, "id526"], [579, "id530"], [579, "id534"], [579, "id538"], [579, "id542"], [579, "id546"], [579, "id550"], [579, "id554"], [579, "id558"], [579, "id562"], [579, "id566"], [579, "id570"], [579, "id574"], [579, "id578"], [579, "id582"], [579, "id586"], [579, "id590"], [579, "id594"], [579, "id597"], [579, "id600"], [579, "id604"], [579, "id608"], [579, "id612"], [579, "id616"], [579, "id620"], [579, "id625"], [579, "id630"], [579, "id635"], [579, "id640"], [579, "id645"], [579, "id720"], [579, "id722"], [579, "id727"], [579, "id731"], [579, "id735"], [579, "id739"], [579, "id743"], [579, "id747"], [579, "id750"], [579, "id754"], [579, "id757"], [579, "id761"], [579, "id764"], [579, "id767"], [579, "id770"], [579, "id773"], [579, "id776"], [579, "id779"], [579, "id782"], [579, "id785"], [579, "id788"], [579, "id791"], [579, "id794"], [579, "id797"], [579, "id800"], [579, "id803"], [579, "id806"], [579, "id811"], [579, "id816"], [579, "id821"], [579, "id826"], [579, "id830"], [579, "id834"], [579, "id839"], [579, "id844"], [579, "id849"], [579, "id854"], [579, "id859"], [579, "id864"], [579, "id869"], [579, "id874"], [579, "id879"], [579, "id884"], [579, "id889"], [579, "id894"], [579, "id899"], [579, "id904"], [579, "id908"], [579, "id912"], [579, "id916"], [579, "id920"], [579, "id924"], [579, "id928"], [579, "id932"], [579, "id936"], [579, "id940"], [579, "id944"], [579, "id948"], [579, "id952"], [579, "id956"], [579, "id960"], [579, "id964"], [579, "id968"], [579, "id972"], [579, "id976"], [579, "id980"], [579, "id984"], [579, "id988"], [579, "id992"], [579, "id996"], [579, "id1000"], [579, "id1004"], [579, "id1008"], [579, "id1012"], [579, "id1016"], [579, "id1020"], [579, "id1024"], [579, "id1028"], [579, "id1032"], [579, "id1036"], [579, "id1040"], [579, "id1044"], [579, "id1048"], [579, "id1052"], [579, "id1056"], [579, "id1060"], [579, "id1064"], [579, "id1068"], [579, "id1072"], [579, "id1076"], [579, "id1080"], [579, "id1084"], [579, "id1088"], [579, "id1092"], [579, "id1096"], [579, "id1100"], [579, "id1104"], [579, "id1108"], [579, "id1112"], [579, "id1115"], [579, "id1119"], [579, "id1123"], [579, "id1129"], [579, "id1133"], [579, "id1137"], [579, "id1141"], [579, "id1145"], [579, "id1149"], [579, "id1153"], [579, "id1157"], [579, "id1161"], [579, "id1166"], [579, "id1169"], [579, "id1172"], [579, "id1174"], [579, "id1178"], [579, "id1182"], [579, "id1184"], [579, "id1189"], [579, "id1191"], [579, "id1195"], [579, "id1199"], [579, "id1202"], [579, "id1205"], [579, "id1210"], [579, "id1215"], [579, "id1256"], [579, "id1260"], [579, "id1264"], [592, "overview"], [592, "id4"], [592, "id7"], [592, "id9"], [628, "overview"], [628, "id2"], [630, "overview"], [630, "id2"], [630, "id6"]], "P": [[580, "p"]], "PAL Compute Shader User Data Registers": [[466, "pal-compute-user-data-registers"]], "PAL Global Internal Table": [[466, "pal-git-table"]], "PAL Graphics Shader User Data Registers": [[466, "pal-graphics-user-data-registers"]], "PARAMATTR_BLOCK Contents": [[473, "paramattr-block-contents"]], "PARAMATTR_CODE_ENTRY Record": [[473, "paramattr-code-entry-record"]], "PARAMATTR_CODE_ENTRY_OLD Record": [[473, "paramattr-code-entry-old-record"]], "PARAMATTR_GROUP_BLOCK Contents": [[473, "paramattr-group-block-contents"]], "PARAMATTR_GRP_CODE_ENTRY Record": [[473, "paramattr-grp-code-entry-record"]], "PARSEC": [[613, "parsec"]], "PDB Feature Codes": [[602, "pdb-feature-codes"]], "PDB Stream Options": [[517, "pdb-stream-options"]], "PE/COFF SPECIFIC OPTIONS": [[522, "pe-coff-specific-options"]], "PWM-benchmarking": [[613, "pwm-benchmarking"]], "Packet data access (BPF_ABS, BPF_IND)": [[483, "packet-data-access-bpf-abs-bpf-ind"]], "Padding Instruction": [[461, "padding-instruction"]], "Padding Records": [[596, "padding-records"]], "ParRes": [[613, "parres"]], "Parallel Fuzzing": [[581, "parallel-fuzzing"]], "Parameter Attributes": [[579, "parameter-attributes"]], "Params": [[579, "params"]], "Parboil Benchmarks": [[613, "parboil-benchmarks"]], "Parser Basics": [[669, "parser-basics"], [680, "parser-basics"]], "Parser Extensions for If/Then/Else": [[672, "parser-extensions-for-if-then-else"], [683, "parser-extensions-for-if-then-else"]], "Parser Extensions for the \u201cfor\u201d Loop": [[672, "parser-extensions-for-the-for-loop"], [683, "parser-extensions-for-the-for-loop"]], "Parsing a list of options": [[530, "parsing-a-list-of-options"]], "Parsing the Rest": [[669, "parsing-the-rest"], [680, "parsing-the-rest"]], "Partial unrolling during vectorization": [[645, "partial-unrolling-during-vectorization"]], "Pass Ordering": [[545, "pass-ordering"]], "Pass Skipping Implementation": [[594, "pass-skipping-implementation"]], "Pass Statistics": [[648, "pass-statistics"]], "Pass classes and requirements": [[648, "pass-classes-and-requirements"]], "Pass registration": [[648, "pass-registration"]], "Pass-Specific Transformation Metadata": [[642, "pass-specific-transformation-metadata"]], "Passing functions and other callable objects": [[609, "passing-functions-and-other-callable-objects"]], "Passing strings (the StringRef and Twine classes)": [[609, "passing-strings-the-stringref-and-twine-classes"]], "PatLeaf Predicates": [[557, "patleaf-predicates"]], "Patents": [[538, "patents"]], "Performance": [[645, "performance"]], "Performance Overhead": [[626, "performance-overhead"]], "Performance Tips for Frontend Authors": [[545, null]], "Peripheral Tier": [[632, "peripheral-tier"]], "Personality Function": [[579, "personality-function"]], "Phase 1 : Read LLVM Bitcode Files": [[582, "phase-1-read-llvm-bitcode-files"]], "Phase 2 : Symbol Resolution": [[582, "phase-2-symbol-resolution"]], "Phase 3 : Optimize Bitcode Files": [[582, "phase-3-optimize-bitcode-files"]], "Phase 4 : Symbol Resolution after optimization": [[582, "phase-4-symbol-resolution-after-optimization"]], "Phi placement": [[590, "phi-placement"]], "Philosophy behind LLVM debugging information": [[625, "philosophy-behind-llvm-debugging-information"]], "Picking the Right Data Structure for a Task": [[609, "picking-the-right-data-structure-for-a-task"]], "PlaceSafepoints": [[630, "placesafepoints"]], "Placement of Object Code": [[610, "placement-of-object-code"]], "Platform Support": [[612, "platform-support"]], "Platform-Specific Tests": [[641, "platform-specific-tests"]], "Pointer Aliasing Rules": [[579, "pointer-aliasing-rules"]], "Pointer Induction Variables": [[645, "pointer-induction-variables"]], "Pointer Type": [[579, "pointer-type"]], "Poison Values": [[579, "poison-values"]], "PolyBench": [[613, "polybench"]], "PolyMage": [[613, "polymage"]], "Porting GlobalISel to A New Target": [[561, null]], "Positional Arguments": [[530, "positional-options"]], "Possible solutions": [[591, "possible-solutions"]], "PowerPC": [[532, "powerpc"]], "Pragma loop hint directives": [[645, "pragma-loop-hint-directives"]], "Pre-Release Process": [[619, "pre-release-process"]], "Preallocated Operand Bundles": [[579, "preallocated-operand-bundles"]], "Precision": [[590, "precision"]], "Predicate Operands": [[585, "predicate-operands"]], "Prefer Preincrement": [[486, "prefer-preincrement"]], "Prefer zext over sext when legal": [[545, "prefer-zext-over-sext-when-legal"]], "Prefix Data": [[579, "prefix-data"]], "Preliminaries": [[646, "preliminaries"]], "Prerequisite Reading": [[646, "prerequisite-reading"]], "Prerequisites": [[531, "prerequisites"], [570, "prerequisites"]], "Present and Deleted Bit Vectors": [[599, "present-and-deleted-bit-vectors"]], "Present state": [[591, "present-state"]], "Preserving Debug Information Intrinsics": [[579, "preserving-debug-information-intrinsics"]], "Preserving the flags while hardening loaded values on Haswell, Zen, and newer processors": [[626, "preserving-the-flags-while-hardening-loaded-values-on-haswell-zen-and-newer-processors"]], "Primitives": [[473, "primitives"]], "Print Detailed Records": [[634, "print-detailed-records"]], "Print Records": [[634, "print-records"]], "Private Segment Buffer": [[466, "private-segment-buffer"]], "Privileges and Responsibilities of LLVM Security Group Members": [[623, "privileges-and-responsibilities-of-llvm-security-group-members"]], "Problem": [[472, "problem"]], "Problem Statement": [[626, "problem-statement"]], "Process": [[623, "process"]], "Processors": [[466, "processors"]], "Profile Guided Optimization": [[639, "profile-guided-optimization"]], "Program Dependence Graph": [[537, "program-dependence-graph"]], "Program Scope Entities": [[461, "program-scope-entities"]], "Program start": [[483, "program-start"]], "Programmatic Errors": [[609, "programmatic-errors"]], "Progress and Future Work": [[564, "progress-and-future-work"]], "Prolog/Epilog": [[483, "prolog-epilog"]], "Prolog/Epilog Code Insertion": [[483, "prolog-epilog-code-insertion"]], "Prologue Data": [[579, "prologue-data"]], "Promote": [[646, "promote"]], "Propagating and consuming errors based on types": [[609, "propagating-and-consuming-errors-based-on-types"]], "Properties of the LLVM IR": [[677, "properties-of-the-llvm-ir"], [686, "properties-of-the-llvm-ir"]], "Proposal": [[625, "proposal"]], "Proposed New Design": [[478, "proposed-new-design"]], "Protect large, load-heavy blocks with a single lfence": [[626, "protect-large-load-heavy-blocks-with-a-single-lfence"]], "Provide a Virtual Method Anchor for Classes in Headers": [[486, "provide-a-virtual-method-anchor-for-classes-in-headers"]], "Provisional Plan": [[614, "provisional-plan"]], "Pseudo-Counter:": [[535, "pseudo-counter"]], "PseudoLowering": [[634, "pseudolowering"]], "Public Symbols": [[595, "public-symbols"]], "Publication": [[531, "publication"]], "Putting It All Together": [[675, "putting-it-all-together"]], "Q. Does libFuzzer Support Windows?": [[581, "q-does-libfuzzer-support-windows"]], "Q. LibFuzzer crashes on my complicated fuzz target (but works fine for me on smaller targets).": [[581, "q-libfuzzer-crashes-on-my-complicated-fuzz-target-but-works-fine-for-me-on-smaller-targets"]], "Q. So, what exactly this Fuzzer is good for?": [[581, "q-so-what-exactly-this-fuzzer-is-good-for"]], "Q. When libFuzzer is not a good solution for a problem?": [[581, "q-when-libfuzzer-is-not-a-good-solution-for-a-problem"]], "Q. Why doesn\u2019t libFuzzer use any of the LLVM support?": [[581, "q-why-doesn-t-libfuzzer-use-any-of-the-llvm-support"]], "Quality": [[538, "quality"]], "Questions about code generated by the demo page": [[543, "questions-about-code-generated-by-the-demo-page"]], "Questions?": [[484, "questions"]], "Quick Start": [[547, "quick-start"]], "Quick Start Guide": [[530, "quick-start-guide"]], "Quick Start \u2014 Writing hello world": [[647, "quick-start-writing-hello-world"], [648, "quick-start-writing-hello-world"]], "Quick start": [[481, "quick-start"], [641, "quick-start"]], "Quickstart": [[639, "quickstart"]], "Quickstart for using LTO with autotooled projects": [[565, "quickstart-for-using-lto-with-autotooled-projects"]], "R": [[580, "r"]], "RAJA Performance Suite": [[613, "raja-performance-suite"]], "REMAPPING FILE": [[501, "remapping-file"]], "REMARK_BLOCK": [[620, "remark-block"]], "REPORT COMMAND": [[499, "report-command"]], "RIP-relative addressing is even easier to break": [[626, "rip-relative-addressing-is-even-easier-to-break"]], "RISC-V": [[532, "risc-v"]], "RTTI for Open Class Hierarchies": [[573, "rtti-for-open-class-hierarchies"]], "Random-access": [[591, "random-access"]], "Randomness": [[622, "randomness"]], "Rarely-used CMake variables": [[481, "rarely-used-cmake-variables"]], "Rationale": [[548, "rationale"], [579, null]], "Read barrier: llvm.gcread": [[547, "read-barrier-llvm-gcread"]], "Read-only sub-project mirrors": [[611, "read-only-sub-project-mirrors"]], "Read/write SVN bridge": [[611, "read-write-svn-bridge"]], "Reading PTX Special Registers": [[592, "reading-ptx-special-registers"]], "Reading and writing references in the heap": [[547, "reading-and-writing-references-in-the-heap"]], "Record Categories": [[595, "record-categories"], [596, "record-categories"]], "Recording On Stack Regions": [[630, "recording-on-stack-regions"]], "Recoverable Errors": [[609, "recoverable-errors"]], "Reducing the number of acronyms": [[614, "reducing-the-number-of-acronyms"]], "Reductions": [[645, "reductions"]], "Reference": [[617, null]], "Reference Guide": [[530, "reference-guide"]], "References": [[461, "references"], [537, "references"], [547, "references"], [611, "references"], [614, "references"], [615, "references"], [616, "references"]], "Reflection Parameters": [[592, "reflection-parameters"]], "Refs": [[579, "refs"]], "RegBankSelect": [[562, null]], "RegBankSelect Modes": [[562, "regbankselect-modes"]], "Register Allocation": [[483, "register-allocator"]], "Register Bank": [[554, "register-bank"]], "Register Flags": [[585, "register-flags"]], "Register Identifier": [[466, "register-identifier"]], "Register Location Description Operations": [[461, "register-location-description-operations"]], "Register Operands": [[585, "register-operands"]], "Register Rule Instructions": [[461, "register-rule-instructions"]], "Register Set and Register Classes": [[646, "register-set-and-register-classes"]], "RegisterInfo": [[634, "registerinfo"]], "Registering dynamically loaded passes": [[648, "registering-dynamically-loaded-passes"]], "Registers": [[585, "mir-registers"]], "Regression test structure": [[641, "regression-test-structure"]], "Regression tests": [[641, "regression-tests"]], "Reinstatement": [[632, "reinstatement"]], "Related LLVM components": [[616, "related-llvm-components"]], "Release": [[470, "release"]], "Release Administrative Tasks": [[572, "release-administrative-tasks"]], "Release Final Tasks": [[572, "release-final-tasks"]], "Release Patch Rules": [[572, "release-patch-rules"]], "Release Process": [[572, "release-process"], [619, "release-process"]], "Release Qualification Criteria": [[572, "release-qualification-criteria"]], "Release Timeline": [[572, "release-timeline"]], "Relevant CMake Options": [[479, "relevant-cmake-options"]], "Relicensing": [[538, "relicensing"]], "Relocatable Expressions": [[465, "relocatable-expressions"]], "Relocation Records": [[466, "relocation-records"]], "Relocations": [[542, "relocations"], [542, "id1"], [542, "id3"]], "Relocations Along Exceptional Edges": [[630, "relocations-along-exceptional-edges"]], "Remark diagnostics": [[620, "remark-diagnostics"]], "Remark streamers": [[620, "remark-streamers"]], "Remarks": [[620, null]], "Replacing an Instruction with another Value": [[609, "replacing-an-instruction-with-another-value"]], "Replacing individual instructions": [[609, "replacing-individual-instructions"]], "Replacing multiple uses of Users and Values": [[609, "replacing-multiple-uses-of-users-and-values"]], "Reporting Guide": [[621, null]], "Reporting Regressions": [[572, "reporting-regressions"]], "Reporting a Security Issue": [[533, "reporting-a-security-issue"]], "Reporting bugs": [[476, "reporting-bugs"]], "Representation": [[579, "representation"]], "Representation of Pointers": [[469, "representation-of-pointers"]], "Representing Type Information using Type Metadata": [[643, "representing-type-information-using-type-metadata"]], "Representing X86 addressing modes in MachineInstrs": [[483, "representing-x86-addressing-modes-in-machineinstrs"]], "Requesting a review via the command line": [[608, "requesting-a-review-via-the-command-line"]], "Requesting a review via the web interface": [[608, "requesting-a-review-via-the-web-interface"]], "Required Variables": [[610, "required-variables"]], "Required components in the code generator": [[483, "required-components-in-the-code-generator"]], "Required initialization calls": [[469, "required-initialization-calls"]], "Required methods to override": [[469, "required-methods-to-override"]], "Required passes": [[647, "required-passes"]], "Requirements": [[550, "requirements"], [552, "requirements"], [632, "requirements"], [632, "id2"], [641, "requirements"]], "Resampling": [[613, "resampling"]], "Resolving/Closing bugs": [[476, "resolving-closing-bugs"]], "Resources": [[563, null]], "Response files": [[530, "response-files"]], "Restricted Operation Semantics": [[545, "restricted-operation-semantics"]], "Restrictions": [[540, "restrictions"]], "Resuming merge": [[581, "resuming-merge"]], "Returned-Continuation Lowering": [[534, "returned-continuation-lowering"]], "Returning Errors from error handlers": [[609, "returning-errors-from-error-handlers"]], "Reverse Iterators": [[645, "reverse-iterators"]], "Reverting a change": [[550, "reverting-a-change"]], "Reviewing code with Phabricator": [[608, "reviewing-code-with-phabricator"]], "Rewrite API of internal functions to directly propagate predicate state": [[626, "rewrite-api-of-internal-functions-to-directly-propagate-predicate-state"]], "RewriteStatepointsForGC": [[630, "rewritestatepointsforgc"]], "RewriteStatepointsForGC intrinsic lowering": [[630, "rewritestatepointsforgc-intrinsic-lowering"]], "Roadmap": [[593, "roadmap"], [615, "roadmap"]], "Rodinia": [[613, "rodinia"]], "Root Cause Analysis": [[478, "root-cause-analysis"]], "Rotated Loops": [[583, "rotated-loops"]], "Row Creation Instructions": [[461, "row-creation-instructions"]], "Row State Instructions": [[461, "row-state-instructions"]], "Rule Actions": [[559, "rule-actions"]], "Rule Predicates": [[559, "rule-predicates"]], "Rule Processing and Declaring Rules": [[559, "rule-processing-and-declaring-rules"]], "Rules": [[548, "rules"]], "Rules for updating debug locations": [[575, "rules-for-updating-debug-locations"]], "Rules for updating debug values": [[575, "rules-for-updating-debug-values"]], "Rules of Thumb": [[573, "rules-of-thumb"]], "Running": [[581, "running"], [639, "running"]], "Running CMake and Building": [[571, "running-cmake-and-building"]], "Running Different Tests": [[640, "running-different-tests"]], "Running TableGen": [[637, "running-tablegen"]], "Running a pass with opt": [[647, "running-a-pass-with-opt"], [648, "running-a-pass-with-opt"]], "Running the Kernel": [[592, "running-the-kernel"]], "Running the test-suite via LNT": [[639, "running-the-test-suite-via-lnt"]], "Running the test-suite via Makefiles (deprecated)": [[639, "running-the-test-suite-via-makefiles-deprecated"]], "Runtime Checks of Pointers": [[645, "runtime-checks-of-pointers"]], "Runtime Preemption Specifiers": [[579, "runtime-preemption-specifiers"]], "S": [[580, "s"]], "SDWA": [[0, "sdwa"]], "SDWA Modifiers": [[464, "sdwa-modifiers"]], "SDWA Operand Modifiers": [[464, "sdwa-operand-modifiers"]], "SEE ALSO": [[488, "see-also"], [489, "see-also"], [491, "see-also"], [492, "see-also"], [493, "see-also"], [494, "see-also"], [496, "see-also"], [497, "see-also"], [500, "see-also"], [503, "see-also"], [504, "see-also"], [506, "see-also"], [507, "see-also"], [509, "see-also"], [512, "see-also"], [514, "see-also"], [515, "see-also"], [516, "see-also"], [520, "see-also"], [521, "see-also"], [522, "see-also"], [526, "see-also"], [527, "see-also"]], "SEH filter expressions": [[540, "seh-filter-expressions"]], "SELECTION OPTIONS": [[491, "selection-options"]], "SGPR Register Set Up Order": [[466, "amdgpu-amdhsa-sgpr-register-set-up-order-table"]], "SHOW": [[518, "show"]], "SHOW COMMAND": [[499, "show-command"]], "SHT_LLVM_ADDRSIG Section (address-significance table)": [[542, "sht-llvm-addrsig-section-address-significance-table"]], "SHT_LLVM_BB_ADDR_MAP Section (basic block address map)": [[542, "sht-llvm-bb-addr-map-section-basic-block-address-map"]], "SHT_LLVM_CALL_GRAPH_PROFILE Section (Call Graph Profile)": [[542, "sht-llvm-call-graph-profile-section-call-graph-profile"]], "SHT_LLVM_DEPENDENT_LIBRARIES Section (Dependent Libraries)": [[542, "sht-llvm-dependent-libraries-section-dependent-libraries"]], "SHT_LLVM_SYMPART Section (symbol partition specification)": [[542, "sht-llvm-sympart-section-symbol-partition-specification"]], "SJLJ Intrinsics": [[540, "sjlj-intrinsics"]], "SLAMBench": [[613, "slambench"]], "SMEM": [[0, "smem"], [3, "smem"], [4, "smem"]], "SMRD": [[2, "smrd"]], "SMRD/SMEM": [[466, "smrd-smem"]], "SMRD/SMEM Modifiers": [[464, "smrd-smem-modifiers"]], "SOP1": [[0, "sop1"], [2, "sop1"], [3, "sop1"], [4, "sop1"], [466, "sop1"]], "SOP2": [[0, "sop2"], [2, "sop2"], [3, "sop2"], [4, "sop2"], [466, "sop2"]], "SOPC": [[0, "sopc"], [2, "sopc"], [3, "sopc"], [4, "sopc"], [466, "sopc"]], "SOPK": [[0, "sopk"], [2, "sopk"], [3, "sopk"], [4, "sopk"]], "SOPP": [[0, "sopp"], [2, "sopp"], [3, "sopp"], [4, "sopp"], [466, "sopp"]], "SPARC": [[532, "sparc"]], "SPEC CPU 2017": [[613, "spec-cpu-2017"]], "SPEC OMP2012": [[613, "spec-omp2012"]], "SSA-based Machine Code Optimizations": [[483, "ssa-based-machine-code-optimizations"]], "STRTAB_BLOCK Contents": [[473, "strtab-block-contents"]], "SUBSTITUTIONS": [[491, "substitutions"]], "SUMMARY OUTPUT DEFINITIONS": [[497, "summary-output-definitions"]], "SUPPORTED FORMATS": [[515, "supported-formats"]], "SYNOPSIS": [[487, "synopsis"], [488, "synopsis"], [489, "synopsis"], [491, "synopsis"], [492, "synopsis"], [493, "synopsis"], [494, "synopsis"], [495, "synopsis"], [496, "synopsis"], [497, "synopsis"], [498, "synopsis"], [499, "synopsis"], [499, "id1"], [499, "id3"], [499, "id6"], [499, "id9"], [500, "synopsis"], [501, "synopsis"], [502, "synopsis"], [503, "synopsis"], [504, "synopsis"], [505, "synopsis"], [506, "synopsis"], [507, "synopsis"], [508, "synopsis"], [509, "synopsis"], [510, "synopsis"], [511, "synopsis"], [512, "synopsis"], [513, "synopsis"], [514, "synopsis"], [515, "synopsis"], [516, "synopsis"], [518, "synopsis"], [518, "id1"], [518, "id3"], [518, "id6"], [519, "synopsis"], [520, "synopsis"], [521, "synopsis"], [522, "synopsis"], [523, "synopsis"], [524, "synopsis"], [525, "synopsis"], [526, "synopsis"], [527, "synopsis"], [528, "synopsis"], [529, "synopsis"]], "S_BLOCK32 (0x1103)": [[595, "s-block32-0x1103"]], "S_BPREL32 (0x110b)": [[595, "s-bprel32-0x110b"]], "S_BUILDINFO (0x114c)": [[595, "s-buildinfo-0x114c"]], "S_CALLEES (0x115a)": [[595, "s-callees-0x115a"]], "S_CALLERS (0x115b)": [[595, "s-callers-0x115b"]], "S_CALLSITEINFO (0x1139)": [[595, "s-callsiteinfo-0x1139"]], "S_COFFGROUP (0x1137)": [[595, "s-coffgroup-0x1137"]], "S_COMPILE2 (0x1116)": [[595, "s-compile2-0x1116"]], "S_COMPILE3 (0x113c)": [[595, "s-compile3-0x113c"]], "S_CONSTANT (0x1107)": [[595, "s-constant-0x1107"]], "S_DEFRANGE (0x113f)": [[595, "s-defrange-0x113f"]], "S_DEFRANGE_FRAMEPOINTER_REL (0x1142)": [[595, "s-defrange-framepointer-rel-0x1142"]], "S_DEFRANGE_FRAMEPOINTER_REL_FULL_SCOPE (0x1144)": [[595, "s-defrange-framepointer-rel-full-scope-0x1144"]], "S_DEFRANGE_REGISTER (0x1141)": [[595, "s-defrange-register-0x1141"]], "S_DEFRANGE_REGISTER_REL (0x1145)": [[595, "s-defrange-register-rel-0x1145"]], "S_DEFRANGE_SUBFIELD (0x1140)": [[595, "s-defrange-subfield-0x1140"]], "S_DEFRANGE_SUBFIELD_REGISTER (0x1143)": [[595, "s-defrange-subfield-register-0x1143"]], "S_END (0x0006)": [[595, "s-end-0x0006"]], "S_ENVBLOCK (0x113d)": [[595, "s-envblock-0x113d"]], "S_EXPORT (0x1138)": [[595, "s-export-0x1138"]], "S_FASTLINK (0x1167)": [[595, "s-fastlink-0x1167"]], "S_FILESTATIC (0x1153)": [[595, "s-filestatic-0x1153"]], "S_FRAMECOOKIE (0x113a)": [[595, "s-framecookie-0x113a"]], "S_FRAMEPROC (0x1012)": [[595, "s-frameproc-0x1012"]], "S_GDATA32": [[595, "s-gdata32"]], "S_GMANDATA (0x111d)": [[595, "s-gmandata-0x111d"]], "S_GPROC32 (0x1110)": [[595, "s-gproc32-0x1110"]], "S_GPROC32_ID (0x1147)": [[595, "s-gproc32-id-0x1147"]], "S_GTHREAD32 (0x1113)": [[595, "s-gthread32-0x1113"]], "S_HEAPALLOCSITE (0x115e)": [[595, "s-heapallocsite-0x115e"]], "S_INLINEES (0x1168)": [[595, "s-inlinees-0x1168"]], "S_INLINESITE (0x114d)": [[595, "s-inlinesite-0x114d"]], "S_INLINESITE_END (0x114e)": [[595, "s-inlinesite-end-0x114e"]], "S_LABEL32 (0x1105)": [[595, "s-label32-0x1105"]], "S_LDATA32 (0x110c)": [[595, "s-ldata32-0x110c"]], "S_LMANDATA (0x111c)": [[595, "s-lmandata-0x111c"]], "S_LOCAL (0x113e)": [[595, "s-local-0x113e"]], "S_LPROC32 (0x110f)": [[595, "s-lproc32-0x110f"]], "S_LPROC32_DPC (0x1155)": [[595, "s-lproc32-dpc-0x1155"]], "S_LPROC32_DPC_ID (0x1156)": [[595, "s-lproc32-dpc-id-0x1156"]], "S_LPROC32_ID (0x1146)": [[595, "s-lproc32-id-0x1146"]], "S_LPROCREF (0x1127)": [[595, "s-lprocref-0x1127"]], "S_LTHREAD32 (0x1112)": [[595, "s-lthread32-0x1112"]], "S_MANCONSTANT (0x112d)": [[595, "s-manconstant-0x112d"]], "S_OBJNAME (0x1101)": [[595, "s-objname-0x1101"]], "S_PROCREF (0x1125)": [[595, "s-procref-0x1125"]], "S_PROC_ID_END (0x114f)": [[595, "s-proc-id-end-0x114f"]], "S_PUB32 (0x110e)": [[595, "s-pub32-0x110e"]], "S_REGISTER (0x1106)": [[595, "s-register-0x1106"]], "S_REGREL32 (0x1111)": [[595, "s-regrel32-0x1111"]], "S_SECTION (0x1136)": [[595, "s-section-0x1136"]], "S_THUNK32 (0x1102)": [[595, "s-thunk32-0x1102"]], "S_TRAMPOLINE (0x112c)": [[595, "s-trampoline-0x112c"]], "S_UDT (0x1108)": [[595, "s-udt-0x1108"]], "S_UNAMESPACE (0x1124)": [[595, "s-unamespace-0x1124"]], "Safepoint Semantics & Verification": [[630, "safepoint-semantics-verification"]], "Safety Guarantees": [[677, "safety-guarantees"], [686, "safety-guarantees"]], "Sample Example": [[577, "sample-example"]], "Saturating floating-point to integer conversions": [[579, "saturating-floating-point-to-integer-conversions"]], "Saturation Arithmetic Intrinsics": [[579, "saturation-arithmetic-intrinsics"]], "Scalar Operations": [[555, "scalar-operations"]], "ScalarEnumerationTraits": [[652, "scalarenumerationtraits"]], "Scalars": [[652, "scalars"]], "Scatter / Gather": [[645, "scatter-gather"]], "Scope": [[482, "scope"]], "Scripting Overview": [[482, "scripting-overview"]], "Scripts": [[619, "scripts"]], "Scrubbing the Local Monorepo": [[611, "scrubbing-the-local-monorepo"]], "Scudo Hardened Allocator": [[622, null]], "Search Algorithms": [[613, "search-algorithms"]], "Search Indexes": [[634, "search-indexes"]], "SearchableTables": [[634, "searchabletables"]], "SearchableTables Reference": [[634, "searchabletables-reference"]], "Section Contribution Substream": [[597, "section-contribution-substream"]], "Section Header": [[461, "section-header"]], "Section Map Substream": [[597, "section-map-substream"]], "Sections": [[466, "sections"]], "Security Group Members": [[623, "security-group-members"]], "See Also": [[486, "see-also"]], "Segmented Addresses": [[461, "segmented-addresses"]], "Segmented Stacks": [[483, "segmented-stacks"]], "Segmented Stacks in LLVM": [[624, null]], "Selecting an alternative from a set of possibilities": [[530, "selecting-an-alternative-from-a-set-of-possibilities"]], "Selecting \u201cbenchmarks\u201d": [[569, "selecting-benchmarks"]], "SelectionDAG Instruction Selection Process": [[483, "selectiondag-instruction-selection-process"]], "SelectionDAG Legalize Phase": [[483, "selectiondag-legalize-phase"]], "SelectionDAG LegalizeTypes Phase": [[483, "selectiondag-legalizetypes-phase"]], "SelectionDAG Optimization Phase: the DAG Combiner": [[483, "selectiondag-optimization-phase-the-dag-combiner"]], "SelectionDAG Rule Imports": [[557, "selectiondag-rule-imports"]], "SelectionDAG Scheduling and Formation Phase": [[483, "selectiondag-scheduling-and-formation-phase"]], "SelectionDAG Select Phase": [[483, "selectiondag-select-phase"]], "Self-contained Headers": [[486, "self-contained-headers"]], "Semantics": [[579, "semantics"]], "Semantics:": [[534, "semantics"], [534, "id5"], [534, "id8"], [534, "id11"], [534, "id14"], [534, "id17"], [534, "id22"], [534, "id26"], [534, "id29"], [534, "id32"], [534, "id35"], [534, "id42"], [534, "id47"], [534, "id50"], [534, "id54"], [534, "id59"], [534, "id62"], [579, "id28"], [579, "id32"], [579, "id37"], [579, "id42"], [579, "id48"], [579, "id53"], [579, "id58"], [579, "id63"], [579, "id68"], [579, "id75"], [579, "id79"], [579, "id83"], [579, "id88"], [579, "id93"], [579, "id98"], [579, "id103"], [579, "id108"], [579, "id113"], [579, "id118"], [579, "id123"], [579, "id128"], [579, "id133"], [579, "id138"], [579, "id143"], [579, "id148"], [579, "id153"], [579, "id158"], [579, "id163"], [579, "id168"], [579, "id173"], [579, "id178"], [579, "id183"], [579, "id188"], [579, "id193"], [579, "id198"], [579, "id203"], [579, "id208"], [579, "id213"], [579, "id218"], [579, "id223"], [579, "id228"], [579, "id233"], [579, "id238"], [579, "id243"], [579, "id248"], [579, "id253"], [579, "id258"], [579, "id263"], [579, "id268"], [579, "id273"], [579, "id278"], [579, "id283"], [579, "id288"], [579, "id293"], [579, "id298"], [579, "id303"], [579, "id308"], [579, "id313"], [579, "id318"], [579, "id323"], [579, "id328"], [579, "id333"], [579, "id339"], [579, "id345"], [579, "id352"], [579, "id358"], [579, "id362"], [579, "id366"], [579, "id371"], [579, "id375"], [579, "id379"], [579, "id383"], [579, "id386"], [579, "id389"], [579, "id393"], [579, "id397"], [579, "id400"], [579, "id403"], [579, "id406"], [579, "id409"], [579, "id413"], [579, "id417"], [579, "id420"], [579, "id423"], [579, "id427"], [579, "id431"], [579, "id435"], [579, "id438"], [579, "id441"], [579, "id444"], [579, "id447"], [579, "id452"], [579, "id468"], [579, "id472"], [579, "id476"], [579, "id480"], [579, "id484"], [579, "id488"], [579, "id492"], [579, "id496"], [579, "id500"], [579, "id504"], [579, "id508"], [579, "id512"], [579, "id516"], [579, "id520"], [579, "id524"], [579, "id528"], [579, "id532"], [579, "id536"], [579, "id540"], [579, "id544"], [579, "id548"], [579, "id552"], [579, "id556"], [579, "id560"], [579, "id564"], [579, "id568"], [579, "id572"], [579, "id576"], [579, "id580"], [579, "id584"], [579, "id588"], [579, "id592"], [579, "id595"], [579, "id598"], [579, "id602"], [579, "id606"], [579, "id610"], [579, "id622"], [579, "id627"], [579, "id632"], [579, "id637"], [579, "id642"], [579, "id647"], [579, "id652"], [579, "id657"], [579, "id662"], [579, "id667"], [579, "id672"], [579, "id677"], [579, "id682"], [579, "id687"], [579, "id692"], [579, "id697"], [579, "id702"], [579, "id707"], [579, "id712"], [579, "id717"], [579, "id724"], [579, "id729"], [579, "id733"], [579, "id737"], [579, "id741"], [579, "id745"], [579, "id808"], [579, "id813"], [579, "id818"], [579, "id823"], [579, "id828"], [579, "id832"], [579, "id836"], [579, "id841"], [579, "id846"], [579, "id851"], [579, "id856"], [579, "id861"], [579, "id866"], [579, "id871"], [579, "id876"], [579, "id881"], [579, "id886"], [579, "id891"], [579, "id896"], [579, "id901"], [579, "id906"], [579, "id910"], [579, "id914"], [579, "id918"], [579, "id922"], [579, "id926"], [579, "id930"], [579, "id934"], [579, "id938"], [579, "id942"], [579, "id946"], [579, "id950"], [579, "id954"], [579, "id958"], [579, "id962"], [579, "id966"], [579, "id970"], [579, "id974"], [579, "id978"], [579, "id982"], [579, "id986"], [579, "id990"], [579, "id994"], [579, "id998"], [579, "id1002"], [579, "id1006"], [579, "id1010"], [579, "id1014"], [579, "id1018"], [579, "id1022"], [579, "id1026"], [579, "id1030"], [579, "id1034"], [579, "id1038"], [579, "id1042"], [579, "id1046"], [579, "id1050"], [579, "id1054"], [579, "id1058"], [579, "id1062"], [579, "id1066"], [579, "id1070"], [579, "id1074"], [579, "id1078"], [579, "id1082"], [579, "id1086"], [579, "id1090"], [579, "id1094"], [579, "id1098"], [579, "id1102"], [579, "id1106"], [579, "id1110"], [579, "id1113"], [579, "id1117"], [579, "id1121"], [579, "id1125"], [579, "id1131"], [579, "id1135"], [579, "id1139"], [579, "id1143"], [579, "id1147"], [579, "id1151"], [579, "id1155"], [579, "id1159"], [579, "id1163"], [579, "id1176"], [579, "id1180"], [579, "id1186"], [579, "id1193"], [579, "id1196"], [579, "id1200"], [579, "id1203"], [579, "id1207"], [579, "id1212"], [579, "id1217"], [579, "id1258"], [579, "id1262"], [579, "id1266"], [592, "semantics"], [592, "id5"], [628, "semantics"], [628, "id4"], [630, "semantics"], [630, "id4"], [630, "id8"]], "Sending patches": [[550, "sending-patches"]], "Sentinels": [[609, "sentinels"]], "Sequence": [[652, "sequence"]], "Sequential Containers (std::vector, std::list, etc)": [[609, "sequential-containers-std-vector-std-list-etc"]], "SequentiallyConsistent": [[470, "sequentiallyconsistent"]], "Serialization modes": [[620, "serialization-modes"]], "Serialized remarks": [[620, "serialized-remarks"]], "Set-Like Containers (std::set, SmallSet, SetVector, etc)": [[609, "set-like-containers-std-set-smallset-setvector-etc"]], "Setjmp/Longjmp Exception Handling": [[540, "setjmp-longjmp-exception-handling"]], "Setting a breakpoint in your pass": [[648, "setting-a-breakpoint-in-your-pass"]], "Setting up the build": [[647, "setting-up-the-build"]], "Setting up the build environment": [[648, "setting-up-the-build-environment"]], "Shared Library": [[606, "shared-library"]], "Sibling call optimization": [[483, "sibling-call-optimization"]], "Sign up": [[608, "sign-up"]], "Signed VBRs": [[473, "signed-vbrs"]], "Simple Constants": [[579, "simple-constants"]], "Simple formatting": [[609, "simple-formatting"]], "Simplifications for Non-Relocating GCs": [[630, "simplifications-for-non-relocating-gcs"]], "Simplifying MIR files": [[585, "simplifying-mir-files"]], "Single Value Types": [[579, "single-value-types"]], "SmallBitVector": [[609, "smallbitvector"]], "Software": [[550, "software"], [552, "software"]], "Sommaire": [[573, "sommaire"]], "Source Code": [[543, "source-code"]], "Source Code Formatting": [[486, "source-code-formatting"]], "Source Code Width": [[486, "source-code-width"]], "Source Filename": [[579, "source-filename"]], "Source Languages": [[461, "source-languages"], [466, "source-languages"], [543, "source-languages"]], "Source Level Debugging with LLVM": [[625, null]], "Source Locations": [[676, "source-locations"]], "Source Range": [[535, "id9"]], "Source Range:": [[535, "source-range"]], "Source Tree Layout": [[610, "source-tree-layout"]], "Source locations": [[585, "source-locations"]], "Spaces Before Parentheses": [[486, "spaces-before-parentheses"]], "Spanning Tree": [[613, "spanning-tree"]], "SparseBitVector": [[609, "sparsebitvector"]], "Special Case File": [[649, "special-case-file"]], "Special Notes for Library-only Distributions": [[479, "special-notes-for-library-only-distributions"]], "Special Value Operations": [[461, "special-value-operations"]], "Specialised Arithmetic Intrinsics": [[579, "specialised-arithmetic-intrinsics"]], "Specialized Metadata Nodes": [[579, "specialized-metadata-nodes"]], "Specifying GC code generation: gc \"...\"": [[547, "specifying-gc-code-generation-gc"]], "Specifying interactions between passes": [[648, "specifying-interactions-between-passes"]], "Specifying positional options with hyphens": [[530, "specifying-positional-options-with-hyphens"]], "Speculative Load Hardening": [[626, null]], "Sphinx Quickstart Template": [[627, null]], "Splitting Requests and Conditional Acceptance": [[485, "splitting-requests-and-conditional-acceptance"]], "Stable build": [[539, "stable-build"]], "Stack Map Format": [[628, "stack-map-format"], [630, "stack-map-format"]], "Stack Map Intrinsics": [[579, "stack-map-intrinsics"]], "Stack Map Section": [[628, "stack-map-section"]], "Stack Map Usage": [[628, "stack-map-usage"]], "Stack Operations": [[461, "stack-operations"]], "Stack Pointer": [[466, "stack-pointer"]], "Stack Probe Emission": [[542, "stack-probe-emission"], [542, "id4"]], "Stack Safety Analysis": [[629, null]], "Stack instrumentation": [[589, "stack-instrumentation"]], "Stack maps and patch points in LLVM": [[628, null]], "Standard Blocks": [[473, "standard-block"]], "Standard C/C++ Library Intrinsics": [[579, "standard-c-c-library-intrinsics"]], "Standard Content Descriptions": [[461, "standard-content-descriptions"]], "Standard Hash Tables": [[625, "standard-hash-tables"]], "Standard library support": [[531, "standard-library-support"]], "Startup initialization": [[581, "startup-initialization"]], "Statut": [[608, "status"], [630, "status"]], "Stay Informed": [[538, "stay-informed"]], "Step #1 : Before The Move": [[611, "step-1-before-the-move"]], "Step #2 : Git Move": [[611, "step-2-git-move"]], "Step #3: Write Access Move": [[611, "step-3-write-access-move"]], "Step #4 : Post Move": [[611, "step-4-post-move"]], "Steps To Add Builder To LLVM Buildbot": [[567, "steps-to-add-builder-to-llvm-buildbot"]], "Steps for removal": [[632, "steps-for-removal"]], "Straw Man Migration Plan": [[611, "straw-man-migration-plan"]], "Stream Header": [[597, "stream-header"], [602, "stream-header"], [604, "stream-header"]], "Stream Layout": [[600, "stream-layout"]], "Streams": [[605, "streams"]], "String-like containers": [[609, "string-like-containers"]], "StringError": [[609, "stringerror"]], "Strings": [[535, "strings"]], "Structure": [[639, "structure"]], "Structure Type": [[579, "structure-type"]], "Structure Types": [[579, "structure-types"]], "Structure of Call Frame Information": [[461, "structure-of-call-frame-information"]], "Structured Fuzzing of LLVM IR": [[546, "structured-fuzzing-of-llvm-ir"]], "Structured Fuzzing using libprotobuf-mutator": [[546, "structured-fuzzing-using-libprotobuf-mutator"]], "Style Issues": [[486, "style-issues"]], "Sub-Array of Regions": [[535, "sub-array-of-regions"]], "Subcommands": [[517, "subcommands"]], "Subregister Indices": [[585, "subregister-indices"]], "Substitutions": [[641, "substitutions"]], "Substreams": [[597, "substreams"]], "Subtarget": [[634, "subtarget"]], "Subtarget Support": [[646, "subtarget-support"]], "Successors": [[585, "successors"]], "Summary": [[472, "summary"], [517, "summary"], [517, "id1"], [517, "id3"], [517, "id6"], [517, "id8"], [517, "id10"], [548, "summary"]], "Support Library": [[631, null]], "Support for alternate stackmap formats": [[630, "support-for-alternate-stackmap-formats"]], "Supported Architectures": [[628, "supported-architectures"], [630, "supported-architectures"]], "Supported Constraint Code List": [[579, "supported-constraint-code-list"]], "Supported Instructions": [[475, "supported-instructions"]], "Supporting Custom Compilers": [[593, "supporting-custom-compilers"]], "SwitchInst": [[475, "switchinst"]], "Switched-Resume Lowering": [[534, "switched-resume-lowering"]], "Symbol Options": [[517, "symbol-options"]], "Symbol Type Options": [[517, "symbol-type-options"]], "Symbols": [[465, "symbols"], [466, "symbols"]], "Symbols which can go in either/both of the module info stream & global stream": [[595, "symbols-which-can-go-in-either-both-of-the-module-info-stream-global-stream"]], "Synopsis": [[517, "synopsis"]], "Syntax": [[463, "syntax"], [463, "id1"], [463, "id2"], [579, "id649"], [579, "id654"], [579, "id659"], [579, "id664"], [579, "id669"], [579, "id674"], [579, "id679"], [579, "id684"], [579, "id689"], [579, "id694"], [579, "id699"], [579, "id704"], [579, "id709"], [579, "id714"], [637, "syntax"]], "Syntax of AMDGPU Instruction Modifiers": [[464, null]], "Syntax of AMDGPU Instruction Operands": [[465, null]], "Syntax of Core GFX10 Instructions": [[0, null]], "Syntax of Core GFX7 Instructions": [[2, null]], "Syntax of Core GFX8 Instructions": [[3, null]], "Syntax of Expressions": [[465, "syntax-of-expressions"]], "Syntax of gfx900, gfx902 and gfx909 Instructions": [[5, null]], "Syntax:": [[534, "syntax"], [579, "syntax"], [579, "id29"], [579, "id34"], [579, "id39"], [579, "id45"], [579, "id50"], [579, "id55"], [579, "id60"], [579, "id65"], [579, "id70"], [579, "id77"], [579, "id80"], [579, "id85"], [579, "id90"], [579, "id95"], [579, "id100"], [579, "id105"], [579, "id110"], [579, "id115"], [579, "id120"], [579, "id125"], [579, "id130"], [579, "id135"], [579, "id140"], [579, "id145"], [579, "id150"], [579, "id155"], [579, "id160"], [579, "id165"], [579, "id170"], [579, "id175"], [579, "id180"], [579, "id185"], [579, "id190"], [579, "id195"], [579, "id200"], [579, "id205"], [579, "id210"], [579, "id215"], [579, "id220"], [579, "id225"], [579, "id230"], [579, "id235"], [579, "id240"], [579, "id245"], [579, "id250"], [579, "id255"], [579, "id260"], [579, "id265"], [579, "id270"], [579, "id275"], [579, "id280"], [579, "id285"], [579, "id290"], [579, "id295"], [579, "id300"], [579, "id305"], [579, "id310"], [579, "id315"], [579, "id320"], [579, "id325"], [579, "id330"], [579, "id335"], [579, "id341"], [579, "id348"], [579, "id355"], [579, "id359"], [579, "id363"], [579, "id368"], [579, "id372"], [579, "id376"], [579, "id380"], [579, "id384"], [579, "id387"], [579, "id390"], [579, "id394"], [579, "id398"], [579, "id401"], [579, "id404"], [579, "id407"], [579, "id410"], [579, "id414"], [579, "id418"], [579, "id421"], [579, "id424"], [579, "id428"], [579, "id432"], [579, "id436"], [579, "id439"], [579, "id442"], [579, "id445"], [579, "id449"], [579, "id453"], [579, "id456"], [579, "id459"], [579, "id462"], [579, "id465"], [579, "id469"], [579, "id473"], [579, "id477"], [579, "id481"], [579, "id485"], [579, "id489"], [579, "id493"], [579, "id497"], [579, "id501"], [579, "id505"], [579, "id509"], [579, "id513"], [579, "id517"], [579, "id521"], [579, "id525"], [579, "id529"], [579, "id533"], [579, "id537"], [579, "id541"], [579, "id545"], [579, "id549"], [579, "id553"], [579, "id557"], [579, "id561"], [579, "id565"], [579, "id569"], [579, "id573"], [579, "id577"], [579, "id581"], [579, "id585"], [579, "id589"], [579, "id593"], [579, "id596"], [579, "id599"], [579, "id603"], [579, "id607"], [579, "id611"], [579, "id615"], [579, "id619"], [579, "id624"], [579, "id629"], [579, "id634"], [579, "id639"], [579, "id644"], [579, "id719"], [579, "id721"], [579, "id726"], [579, "id730"], [579, "id734"], [579, "id738"], [579, "id742"], [579, "id746"], [579, "id749"], [579, "id753"], [579, "id756"], [579, "id760"], [579, "id763"], [579, "id766"], [579, "id769"], [579, "id772"], [579, "id775"], [579, "id778"], [579, "id781"], [579, "id784"], [579, "id787"], [579, "id790"], [579, "id793"], [579, "id796"], [579, "id799"], [579, "id802"], [579, "id805"], [579, "id810"], [579, "id815"], [579, "id820"], [579, "id825"], [579, "id829"], [579, "id833"], [579, "id838"], [579, "id843"], [579, "id848"], [579, "id853"], [579, "id858"], [579, "id863"], [579, "id868"], [579, "id873"], [579, "id878"], [579, "id883"], [579, "id888"], [579, "id893"], [579, "id898"], [579, "id903"], [579, "id907"], [579, "id911"], [579, "id915"], [579, "id919"], [579, "id923"], [579, "id927"], [579, "id931"], [579, "id935"], [579, "id939"], [579, "id943"], [579, "id947"], [579, "id951"], [579, "id955"], [579, "id959"], [579, "id963"], [579, "id967"], [579, "id971"], [579, "id975"], [579, "id979"], [579, "id983"], [579, "id987"], [579, "id991"], [579, "id995"], [579, "id999"], [579, "id1003"], [579, "id1007"], [579, "id1011"], [579, "id1015"], [579, "id1019"], [579, "id1023"], [579, "id1027"], [579, "id1031"], [579, "id1035"], [579, "id1039"], [579, "id1043"], [579, "id1047"], [579, "id1051"], [579, "id1055"], [579, "id1059"], [579, "id1063"], [579, "id1067"], [579, "id1071"], [579, "id1075"], [579, "id1079"], [579, "id1083"], [579, "id1087"], [579, "id1091"], [579, "id1095"], [579, "id1099"], [579, "id1103"], [579, "id1107"], [579, "id1111"], [579, "id1114"], [579, "id1118"], [579, "id1122"], [579, "id1126"], [579, "id1128"], [579, "id1132"], [579, "id1136"], [579, "id1140"], [579, "id1144"], [579, "id1148"], [579, "id1152"], [579, "id1156"], [579, "id1160"], [579, "id1164"], [579, "id1167"], [579, "id1170"], [579, "id1173"], [579, "id1177"], [579, "id1181"], [579, "id1183"], [579, "id1188"], [579, "id1190"], [579, "id1194"], [579, "id1197"], [579, "id1201"], [579, "id1204"], [579, "id1209"], [579, "id1214"], [579, "id1219"], [579, "id1221"], [579, "id1223"], [579, "id1225"], [579, "id1227"], [579, "id1229"], [579, "id1231"], [579, "id1233"], [579, "id1235"], [579, "id1237"], [579, "id1239"], [579, "id1241"], [579, "id1243"], [579, "id1245"], [579, "id1247"], [579, "id1249"], [579, "id1251"], [579, "id1253"], [579, "id1255"], [579, "id1259"], [579, "id1263"], [592, "syntax"], [592, "id3"], [592, "id6"], [592, "id8"], [628, "syntax"], [628, "id1"], [630, "syntax"], [630, "id1"], [630, "id5"]], "Syntaxe des instructions GFX9": [[4, null]], "Syntaxe des instructions gfx1011 et gfx1012": [[1, null]], "Syntaxe des instructions gfx904": [[6, null]], "Syntaxe des instructions gfx906": [[7, null]], "Syntaxe des instructions gfx908": [[8, null]], "System Library": [[633, null]], "System VGPR Work-Item ID Enumeration Values": [[466, "amdgpu-amdhsa-system-vgpr-work-item-id-enumeration-values-table"]], "SystemZ": [[532, "systemz"]], "T": [[580, "t"]], "TARGET OPTIONS": [[493, "target-options"]], "TEST DISCOVERY": [[491, "test-discovery"], [491, "id7"]], "TEST RUN OUTPUT FORMAT": [[491, "test-run-output-format"]], "TEST STATUS RESULTS": [[491, "test-status-results"]], "TEST SUITES": [[491, "test-suites"]], "TPI vs IPI Stream": [[604, "tpi-vs-ipi-stream"]], "TSCWrap Records": [[651, "tscwrap-records"]], "TUTORIAL": [[487, "tutorial"]], "TVM": [[613, "tvm"]], "TYPE_BLOCK Contents": [[473, "type-block-contents"]], "TYPE_CODE_ARRAY Record": [[473, "type-code-array-record"]], "TYPE_CODE_BFLOAT Record": [[473, "type-code-bfloat-record"]], "TYPE_CODE_DOUBLE Record": [[473, "type-code-double-record"]], "TYPE_CODE_FLOAT Record": [[473, "type-code-float-record"]], "TYPE_CODE_FP128 Record": [[473, "type-code-fp128-record"]], "TYPE_CODE_FUNCTION Record": [[473, "type-code-function-record"]], "TYPE_CODE_FUNCTION_OLD Record": [[473, "type-code-function-old-record"]], "TYPE_CODE_HALF Record": [[473, "type-code-half-record"]], "TYPE_CODE_INTEGER Record": [[473, "type-code-integer-record"]], "TYPE_CODE_LABEL Record": [[473, "type-code-label-record"]], "TYPE_CODE_METADATA Record": [[473, "type-code-metadata-record"]], "TYPE_CODE_NUMENTRY Record": [[473, "type-code-numentry-record"]], "TYPE_CODE_OPAQUE Record": [[473, "type-code-opaque-record"]], "TYPE_CODE_POINTER Record": [[473, "type-code-pointer-record"]], "TYPE_CODE_PPC_FP128 Record": [[473, "type-code-ppc-fp128-record"]], "TYPE_CODE_STRUCT_ANON Record": [[473, "type-code-struct-anon-record"]], "TYPE_CODE_STRUCT_NAME Record": [[473, "type-code-struct-name-record"]], "TYPE_CODE_STRUCT_NAMED Record": [[473, "type-code-struct-named-record"]], "TYPE_CODE_VECTOR Record": [[473, "type-code-vector-record"]], "TYPE_CODE_VOID Record": [[473, "type-code-void-record"]], "TYPE_CODE_X86_FP80 Record": [[473, "type-code-x86-fp80-record"]], "TYPE_CODE_X86_MMX Record": [[473, "type-code-x86-mmx-record"]], "Table des mati\u00e8res": [[612, "table-of-contents"], [615, "table-of-contents"]], "TableGen BackEnds": [[634, null]], "TableGen Deficiencies": [[637, "tablegen-deficiencies"]], "TableGen Fundamentals": [[638, null]], "TableGen Overview": [[637, null]], "TableGen backends": [[637, "tablegen-backends"]], "Tag the LLVM Final Release": [[572, "tag-the-llvm-final-release"]], "Tag:": [[535, "tag"]], "Tagging the LLVM Release Candidates": [[572, "tagging-the-llvm-release-candidates"]], "Tags": [[652, "tags"]], "Tail Calls": [[483, "tail-calls"]], "Tail call optimization": [[483, "tail-call-optimization"]], "Target Feature Matrix": [[483, "target-feature-matrix"]], "Target Features": [[466, "target-features"]], "Target ID": [[466, "target-id"]], "Target Independence": [[677, "target-independence"], [686, "target-independence"]], "Target Intrinsics": [[556, "target-intrinsics"], [592, "target-intrinsics"]], "Target JIT Info": [[646, "target-jit-info"]], "Target Machine": [[646, "target-machine"], [675, "target-machine"]], "Target Registration": [[646, "target-registration"]], "Target Specific Behaviour": [[542, "target-specific-behaviour"]], "Target Triple": [[579, "target-triple"]], "Target Triples": [[466, "target-triples"]], "Target description classes": [[483, "target-description-classes"]], "Target-dependent Index Operands": [[585, "target-dependent-index-operands"]], "Target-independent code generation algorithms": [[483, "target-independent-code-generation-algorithms"]], "Target-specific Implementation Notes": [[483, "target-specific-implementation-notes"]], "Tech talks": [[588, "tech-talks"]], "Tempting optimizations that break the security model": [[626, "tempting-optimizations-that-break-the-security-model"]], "Terminator Instructions": [[579, "terminator-instructions"]], "Terminology": [[583, "terminology"]], "Terminology and Notation": [[550, "terminology-and-notation"]], "Test Cases": [[538, "test-cases"]], "Test Suite": [[619, "test-suite"]], "Test-Suite Extensions": [[613, null]], "Testing": [[560, "testing"], [629, "testing"]], "Testing Addresses For Type Membership": [[643, "testing-addresses-for-type-membership"]], "Testing Analysis": [[641, "testing-analysis"]], "Testing Individual Code Generation Passes": [[585, "testing-individual-code-generation-passes"]], "Testing a pass": [[647, "testing-a-pass"]], "Testing and Debugging": [[617, "testing-and-debugging"]], "Testing compiler-rt builtins using qemu-arm": [[570, "testing-compiler-rt-builtins-using-qemu-arm"]], "Text Formatting": [[627, "text-formatting"]], "The -aa-eval pass": [[469, "the-aa-eval-pass"]], "The -adce pass": [[469, "the-adce-pass"]], "The -argpromotion pass": [[469, "the-argpromotion-pass"]], "The -basic-aa pass": [[469, "the-basic-aa-pass"]], "The -ds-aa pass": [[469, "the-ds-aa-pass"]], "The -globalsmodref-aa pass": [[469, "the-globalsmodref-aa-pass"]], "The -gvn, -memcpyopt, and -dse passes": [[469, "the-gvn-memcpyopt-and-dse-passes"]], "The -licm pass": [[469, "the-licm-pass"]], "The -no-aa pass": [[469, "the-no-aa-pass"]], "The -print-alias-sets pass": [[469, "the-print-alias-sets-pass"]], "The -scev-aa pass": [[469, "the-scev-aa-pass"]], "The -steens-aa pass": [[469, "the-steens-aa-pass"]], "The AMDGPU backend": [[483, "the-amdgpu-backend"]], "The Abstract Syntax Tree (AST)": [[669, "the-abstract-syntax-tree-ast"], [680, "the-abstract-syntax-tree-ast"]], "The AliasSetTracker implementation": [[469, "the-aliassettracker-implementation"]], "The AnalysisUsage::addPreserved<> method": [[648, "the-analysisusage-addpreserved-method"]], "The AnalysisUsage::addRequired<> and AnalysisUsage::addRequiredTransitive<> methods": [[648, "the-analysisusage-addrequired-and-analysisusage-addrequiredtransitive-methods"]], "The Argument class": [[609, "the-argument-class"]], "The Basic Language": [[679, "the-basic-language"]], "The BasicBlock class": [[609, "the-basicblock-class"]], "The Basics": [[545, "the-basics"]], "The C++ Standard Template Library": [[609, "the-c-standard-template-library"]], "The CallGraphSCCPass class": [[648, "the-callgraphsccpass-class"]], "The CodeView Symbol Substream": [[600, "the-codeview-symbol-substream"]], "The Constant class and subclasses": [[609, "the-constant-class-and-subclasses"]], "The Contract of classof": [[573, "the-contract-of-classof"]], "The Core LLVM Class Hierarchy Reference": [[609, "the-core-llvm-class-hierarchy-reference"]], "The CoreCLR GC": [[547, "the-coreclr-gc"]], "The DataLayout class": [[483, "the-datalayout-class"]], "The Driver": [[669, "the-driver"], [680, "the-driver"]], "The Fault Map Section": [[544, "the-fault-map-section"]], "The FileCheck -check-prefix option": [[487, "the-filecheck-check-prefix-option"]], "The Free Block Map": [[601, "the-free-block-map"]], "The Function class": [[609, "the-function-class"]], "The FunctionPass class": [[648, "the-functionpass-class"]], "The GlobalValue class": [[609, "the-globalvalue-class"]], "The GlobalVariable class": [[609, "the-globalvariable-class"]], "The High-Level Issues": [[486, "the-high-level-issues"]], "The ImmutablePass class": [[648, "the-immutablepass-class"]], "The ImplicitNullChecks pass": [[544, "the-implicitnullchecks-pass"]], "The Instruction class": [[609, "the-instruction-class"]], "The Kaleidoscope Language": [[668, "the-kaleidoscope-language"]], "The Kernel": [[592, "the-kernel"]], "The LLVM Lexicon": [[580, null]], "The LLVM Target-Independent Code Generator": [[483, null]], "The LLVM gold plugin": [[565, null]], "The LLVM_DEBUG() macro and -debug option": [[609, "the-llvm-debug-macro-and-debug-option"]], "The Lexer": [[668, "the-lexer"], [679, "the-lexer"]], "The Line Number Program Header": [[461, "the-line-number-program-header"]], "The Location of LLVM Object Files": [[550, "the-location-of-llvm-object-files"]], "The Loop Vectorizer": [[645, "the-loop-vectorizer"]], "The LoopPass class": [[648, "the-looppass-class"]], "The Low-Level Issues": [[486, "the-low-level-issues"]], "The MCContext class": [[483, "the-mccontext-class"]], "The MCInst class": [[483, "the-mcinst-class"]], "The MCSection class": [[483, "the-mcsection-class"]], "The MCStreamer API": [[483, "the-mcstreamer-api"]], "The MCSymbol class": [[483, "the-mcsymbol-class"]], "The MSF Container": [[605, "the-msf-container"]], "The MSF File Format": [[601, null]], "The MachineBasicBlock class": [[483, "the-machinebasicblock-class"]], "The MachineFunction class": [[483, "the-machinefunction-class"]], "The MachineFunctionPass class": [[648, "the-machinefunctionpass-class"]], "The MachineInstr class": [[483, "the-machineinstr-class"]], "The Module Information Stream": [[600, null]], "The Module class": [[609, "the-module-class"]], "The ModulePass class": [[648, "the-modulepass-class"]], "The NVPTX backend": [[483, "the-nvptx-backend"]], "The Often Misunderstood GEP Instruction": [[548, null]], "The PDB DBI (Debug Info) Stream": [[597, null]], "The PDB File Format": [[605, null]], "The PDB Global Symbol Stream": [[598, null]], "The PDB Info Stream (aka the PDB Stream)": [[602, null]], "The PDB Public Symbol Stream": [[603, null]], "The PDB Serialized Hash Table Format": [[599, null]], "The PDB TPI and IPI Streams": [[604, null]], "The Planning Process and VPlan Roadmap": [[616, "the-planning-process-and-vplan-roadmap"]], "The PowerPC backend": [[483, "the-powerpc-backend"]], "The RegionPass class": [[648, "the-regionpass-class"]], "The SLP Vectorizer": [[645, "the-slp-vectorizer"]], "The SSA deconstruction phase": [[483, "the-ssa-deconstruction-phase"]], "The SelectionDAG Legalize Phase": [[646, "the-selectiondag-legalize-phase"]], "The Shadow Stack GC": [[547, "the-shadow-stack-gc"]], "The Statepoint Example GC": [[547, "the-statepoint-example-gc"]], "The Statistic class & -stats option": [[609, "the-statistic-class-stats-option"]], "The Stream Directory": [[601, "the-stream-directory"]], "The StringRef class": [[609, "the-stringref-class"]], "The Superblock": [[601, "the-superblock"]], "The TableGen program": [[637, "the-tablegen-program"]], "The TargetFrameLowering class": [[483, "the-targetframelowering-class"]], "The TargetInstrInfo class": [[483, "the-targetinstrinfo-class"]], "The TargetJITInfo class": [[483, "the-targetjitinfo-class"]], "The TargetLowering class": [[483, "the-targetlowering-class"]], "The TargetMachine class": [[483, "the-targetmachine-class"]], "The TargetRegisterInfo class": [[483, "the-targetregisterinfo-class"]], "The TargetSubtarget class": [[483, "the-targetsubtarget-class"]], "The Twine class": [[609, "the-twine-class"]], "The Type class and Derived Types": [[609, "the-type-class-and-derived-types"]], "The User and owned Use classes\u201d memory layout": [[609, "the-user-and-owned-use-classes-memory-layout"]], "The User class": [[609, "the-user-class"]], "The Value class": [[609, "the-value-class"]], "The ValueSymbolTable class": [[609, "the-valuesymboltable-class"]], "The X86 backend": [[483, "the-x86-backend"]], "The XRay stack tool": [[650, "the-xray-stack-tool"]], "The addEscapingUse method": [[469, "the-addescapinguse-method"]], "The alias method": [[469, "the-alias-method"]], "The cl::ConsumeAfter modifier": [[530, "the-cl-consumeafter-modifier"]], "The cl::OptionCategory class": [[530, "the-cl-optioncategory-class"]], "The cl::ParseCommandLineOptions function": [[530, "the-cl-parsecommandlineoptions-function"]], "The cl::SetVersionPrinter function": [[530, "the-cl-setversionprinter-function"]], "The cl::alias class": [[530, "the-cl-alias-class"]], "The cl::bits class": [[530, "the-cl-bits-class"]], "The cl::extrahelp class": [[530, "the-cl-extrahelp-class"]], "The cl::getRegisteredOptions function": [[530, "the-cl-getregisteredoptions-function"]], "The cl::list class": [[530, "the-cl-list-class"]], "The cl::opt class": [[530, "the-cl-opt-class"]], "The cmake try compile stage fails": [[570, "the-cmake-try-compile-stage-fails"]], "The copyValue method": [[469, "the-copyvalue-method"]], "The debugify utility": [[575, "the-debugify-utility"]], "The deleteValue method": [[469, "the-deletevalue-method"]], "The doFinalization() method": [[648, "the-dofinalization-method"], [648, "id2"]], "The doFinalization(CallGraph &) method": [[648, "the-dofinalization-callgraph-method"]], "The doFinalization(Module &) method": [[648, "the-dofinalization-module-method"]], "The doInitialization(CallGraph &) method": [[648, "the-doinitialization-callgraph-method"]], "The doInitialization(Loop *, LPPassManager &) method": [[648, "the-doinitialization-loop-lppassmanager-method"]], "The doInitialization(Module &) method": [[648, "the-doinitialization-module-method"]], "The doInitialization(Region *, RGPassManager &) method": [[648, "the-doinitialization-region-rgpassmanager-method"]], "The doesNotAccessMemory and  onlyReadsMemory methods": [[469, "the-doesnotaccessmemory-and-onlyreadsmemory-methods"]], "The extended Berkeley Packet Filter (eBPF) backend": [[483, "the-extended-berkeley-packet-filter-ebpf-backend"]], "The flag registers again make everything hard": [[626, "the-flag-registers-again-make-everything-hard"]], "The function_ref class template": [[609, "the-function-ref-class-template"]], "The getAnalysis<> and getAnalysisIfAvailable<> methods": [[648, "the-getanalysis-and-getanalysisifavailable-methods"]], "The getAnalysisUsage method": [[648, "the-getanalysisusage-method"]], "The getModRefInfo methods": [[469, "the-getmodrefinfo-methods"]], "The high-level design of the code generator": [[483, "the-high-level-design-of-the-code-generator"]], "The isa<>, cast<> and dyn_cast<> templates": [[609, "the-isa-cast-and-dyn-cast-templates"]], "The llvm-xray Tool": [[650, "the-llvm-xray-tool"]], "The pointsToConstantMemory method": [[469, "the-pointstoconstantmemory-method"]], "The print method": [[648, "the-print-method"]], "The releaseMemory method": [[648, "the-releasememory-method"]], "The remark container": [[620, "the-remark-container"]], "The replaceWithNewValue method": [[469, "the-replacewithnewvalue-method"]], "The runOnFunction method": [[648, "the-runonfunction-method"]], "The runOnLoop method": [[648, "the-runonloop-method"]], "The runOnMachineFunction(MachineFunction &MF) method": [[648, "the-runonmachinefunction-machinefunction-mf-method"]], "The runOnModule method": [[648, "the-runonmodule-method"]], "The runOnRegion method": [[648, "the-runonregion-method"]], "The runOnSCC method": [[648, "the-runonscc-method"]], "The walker": [[590, "the-walker"]], "The \u00ab\u00a0CHECK-COUNT:\u00a0\u00bb directive": [[487, "the-check-count-directive"]], "The \u00ab\u00a0CHECK-DAG:\u00a0\u00bb directive": [[487, "the-check-dag-directive"]], "The \u00ab\u00a0CHECK-EMPTY:\u00a0\u00bb directive": [[487, "the-check-empty-directive"]], "The \u00ab\u00a0CHECK-LABEL:\u00a0\u00bb directive": [[487, "the-check-label-directive"]], "The \u00ab\u00a0CHECK-NEXT:\u00a0\u00bb directive": [[487, "the-check-next-directive"]], "The \u00ab\u00a0CHECK-NOT:\u00a0\u00bb directive": [[487, "the-check-not-directive"]], "The \u00ab\u00a0CHECK-SAME:\u00a0\u00bb directive": [[487, "the-check-same-directive"]], "The \u00ab\u00a0COM:\u00a0\u00bb directive": [[487, "the-com-directive"]], "The \u00ab\u00a0MC\u00a0\u00bb Layer": [[483, "the-mc-layer"]], "The \u201cErlang\u201d and \u201cOcaml\u201d GCs": [[547, "the-erlang-and-ocaml-gcs"]], "The \u201cllvm.compiler.used\u201d Global Variable": [[579, "the-llvm-compiler-used-global-variable"]], "The \u201cllvm.global_ctors\u201d Global Variable": [[579, "the-llvm-global-ctors-global-variable"]], "The \u201cllvm.global_dtors\u201d Global Variable": [[579, "the-llvm-global-dtors-global-variable"]], "The \u201cllvm.used\u201d Global Variable": [[579, "the-llvm-used-global-variable"]], "ThinLTO Summary": [[579, "thinlto-summary"]], "Thread Local Storage Models": [[579, "thread-local-storage-models"]], "Threads and LLVM": [[609, "threads-and-llvm"]], "Threads and the JIT": [[609, "threads-and-the-jit"]], "Throw": [[540, "throw"]], "Throw Filters": [[540, "throw-filters"]], "Timeline View": [[513, "timeline-view"]], "Tips and Tricks": [[677, "tips-and-tricks"], [686, "tips-and-tricks"]], "Token Type": [[579, "token-type"]], "Too Long; Didn\u2019t Read": [[614, "too-long-didn-t-read"]], "Top Level APIs": [[593, "top-level-apis"]], "Top-Level Classes and Functions": [[530, "top-level-classes-and-functions"]], "Toy example": [[581, "toy-example"]], "Trace Analysis Tools": [[649, "trace-analysis-tools"], [649, "id1"]], "Tracing CMP instructions": [[581, "tracing-cmp-instructions"]], "Trampoline Intrinsics": [[579, "trampoline-intrinsics"]], "Transform Passes": [[607, "transform-passes"]], "Transformation Metadata Structure": [[642, "transformation-metadata-structure"]], "Transition Options": [[614, "transition-options"]], "Transitioning from ORCv1 to ORCv2": [[593, "transitioning-from-orcv1-to-orcv2"]], "Translating Function Calls": [[556, "translating-function-calls"]], "Translation of Constants": [[556, "translation-of-constants"]], "Transparency Report": [[623, "transparency-report"]], "Trap Handler ABI": [[466, "trap-handler-abi"], [466, "id79"]], "Treat Compiler Warnings Like Errors": [[486, "treat-compiler-warnings-like-errors"]], "Triaging bugs": [[476, "triaging-bugs"]], "Triples": [[592, "triples"]], "Trivial Constant Folding": [[671, "trivial-constant-folding"], [682, "trivial-constant-folding"]], "Trophies": [[581, "trophies"]], "Troubleshooting": [[570, "troubleshooting"]], "Try/Catch": [[540, "try-catch"]], "Tuning/Configuration Options": [[492, "tuning-configuration-options"]], "Turn Predicate Loops into Predicate Functions": [[486, "turn-predicate-loops-into-predicate-functions"]], "Turning an iterator into a class pointer (and vice-versa)": [[609, "turning-an-iterator-into-a-class-pointer-and-vice-versa"]], "Tutorial Conclusion": [[677, "tutorial-conclusion"], [686, "tutorial-conclusion"]], "Tutorial Introduction": [[679, "tutorial-introduction"]], "Tutorial: A Simple Compute Kernel": [[592, "tutorial-a-simple-compute-kernel"]], "Tutorial: Linking with Libdevice": [[592, "tutorial-linking-with-libdevice"]], "Tutorials": [[561, "tutorials"]], "Type Conversion Operations": [[461, "type-conversion-operations"]], "Type Conversions": [[555, "type-conversions"]], "Type ID Summary Entry": [[579, "type-id-summary-entry"]], "Type Indices": [[604, "type-indices"]], "Type Metadata": [[643, null]], "Type Offsets for A, B, C, D": [[643, "id2"]], "Type Record Options": [[517, "type-record-options"], [517, "id5"]], "Type Server Map Substream": [[597, "type-server-map-substream"]], "Type System": [[579, "type-system"]], "Type and Size Conversion": [[465, "type-and-size-conversion"]], "Type and Size Suffices": [[463, "type-and-size-suffices"]], "Type deviation": [[13, null], [97, null], [186, null], [288, null], [323, null], [352, null], [443, null]], "TypeCheckedLoadConstVCalls": [[579, "typecheckedloadconstvcalls"]], "TypeCheckedLoadVCalls": [[579, "typecheckedloadvcalls"]], "TypeIdInfo": [[579, "typeidinfo"]], "TypeTestAssumeConstVCalls": [[579, "typetestassumeconstvcalls"]], "TypeTestAssumeVCalls": [[579, "typetestassumevcalls"]], "TypeTests": [[579, "typetests"]], "Types": [[535, "types"]], "UNABBREV_RECORD Encoding": [[473, "unabbrev-record-encoding"]], "USING MARKERS TO ANALYZE SPECIFIC CODE BLOCKS": [[513, "using-markers-to-analyze-specific-code-blocks"]], "Unary Operations": [[579, "unary-operations"]], "Unary Operators": [[465, "unary-operators"]], "Undefined Location Description Operations": [[461, "undefined-location-description-operations"]], "Undefined Values": [[579, "undefined-values"]], "Unique types": [[652, "unique-types"]], "Unit Entities": [[461, "unit-entities"]], "Unit Headers": [[466, "unit-headers"]], "Unit and Regression tests": [[641, "unit-and-regression-tests"]], "Unit tests": [[641, "unit-tests"]], "Unordered": [[470, "unordered"]], "Unpacking the LLVM Archives": [[550, "unpacking-the-llvm-archives"]], "Unroll-And-Jam": [[642, "unroll-and-jam"]], "Unspecified OS": [[466, "unspecified-os"]], "Update Documentation": [[572, "update-documentation"]], "Update IR components": [[467, "update-ir-components"]], "Update LLVM Version": [[572, "update-llvm-version"]], "Update Selector components": [[467, "update-selector-components"]], "Update mappings": [[467, "update-mappings"]], "Update the LLVM Website": [[572, "update-the-llvm-website"]], "Updating Toolchain Requirements": [[538, "updating-toolchain-requirements"]], "Updating analysis results for transformations": [[469, "updating-analysis-results-for-transformations"]], "Usage": [[539, "usage"], [558, "usage"], [565, "usage"], [566, "usage"], [589, "usage"], [622, "usage"], [645, "usage"], [645, "id1"]], "Use Early Exits and continue to Simplify Code": [[486, "use-early-exits-and-continue-to-simplify-code"]], "Use Namespace Qualifiers to Implement Previously Declared Functions": [[486, "use-namespace-qualifiers-to-implement-previously-declared-functions"]], "Use Optimization": [[590, "use-optimization"]], "Use Standard C Headers": [[631, "use-standard-c-headers"]], "Use Standard C++ Headers": [[631, "id1"]], "Use after Free Detection": [[566, "use-after-free-detection"]], "Use an internal TLS location to pass predicate state": [[626, "use-an-internal-tls-location-to-pass-predicate-state"]], "Use auto Type Deduction to Make Code More Readable": [[486, "use-auto-type-deduction-to-make-code-more-readable"]], "Use lfence to guard function transitions": [[626, "use-lfence-to-guard-function-transitions"]], "Use of allocas": [[545, "use-of-allocas"]], "Use of class and struct Keywords": [[486, "use-of-class-and-struct-keywords"]], "Use range-based for loops wherever possible": [[486, "use-range-based-for-loops-wherever-possible"]], "Use raw_ostream": [[486, "use-raw-ostream"]], "Use-cases": [[593, "use-cases"]], "Use-list Order Directives": [[579, "use-list-order-directives"]], "Useful Built-in Commands": [[482, "useful-built-in-commands"]], "User Context Data": [[652, "user-context-data"]], "User Data": [[466, "user-data"]], "User Guide for AMDGPU Backend": [[466, null]], "User Guide for NVPTX Back-end": [[592, null]], "User Guides": [[644, null]], "User-defined Binary Operators": [[673, "user-defined-binary-operators"], [684, "user-defined-binary-operators"]], "User-defined Local Variables": [[674, "user-defined-local-variables"], [685, "user-defined-local-variables"]], "User-defined Operators: the Idea": [[673, "user-defined-operators-the-idea"], [684, "user-defined-operators-the-idea"]], "User-defined Unary Operators": [[673, "user-defined-unary-operators"], [684, "user-defined-unary-operators"]], "User-supplied mutators": [[581, "user-supplied-mutators"]], "Using -opt-bisect-limit to debug optimization errors": [[594, null]], "Using ARM NEON instructions in big endian mode": [[472, null]], "Using ExitOnError to simplify tool code": [[609, "using-exitonerror-to-simplify-tool-code"]], "Using GDB with dynamically loaded passes": [[648, "using-gdb-with-dynamically-loaded-passes"]], "Using LostDebugLocObserver": [[575, "using-lostdebuglocobserver"]], "Using RegisterAnalysisGroup": [[648, "using-registeranalysisgroup"]], "Using TableGen for target description": [[483, "using-tablegen-for-target-description"]], "Using XRay": [[649, "using-xray"]], "Using a Different Class on Host/Device": [[531, "using-a-different-class-on-host-device"]], "Using alias analysis results": [[469, "using-alias-analysis-results"]], "Using cantFail to simplify safe callsites": [[609, "using-cantfail-to-simplify-safe-callsites"]], "Using debugify": [[575, "using-debugify"]], "Using existing registries": [[648, "using-existing-registries"]], "Using gc.statepoint": [[547, "using-gc-statepoint"]], "Using libFuzzer as a library": [[581, "using-libfuzzer-as-a-library"]], "Using llvm.gcwrite": [[547, "using-llvm-gcwrite"]], "Using preconfigured CMake caches": [[569, "using-preconfigured-cmake-caches"]], "Using the AliasAnalysis interface directly": [[469, "using-the-aliasanalysis-interface-directly"]], "Using the AliasSetTracker class": [[469, "using-the-aliassettracker-class"]], "Using the C and C++ Front Ends": [[543, "using-the-c-and-c-front-ends"]], "Using the MachineInstrBuilder.h functions": [[483, "using-the-machineinstrbuilder-h-functions"]], "Using the MemoryDependenceAnalysis Pass": [[469, "using-the-memorydependenceanalysis-pass"]], "Using the script": [[569, "using-the-script"]], "Utilities for Writing Fuzzers": [[546, "utilities-for-writing-fuzzers"]], "Utility Macros": [[652, "utility-macros"]], "Utility Passes": [[607, "utility-passes"]], "Utility Passes for Safepoint Insertion": [[630, "utility-passes-for-safepoint-insertion"]], "VALU": [[466, "valu"]], "VALUE_SYMTAB_BLOCK Contents": [[473, "value-symtab-block-contents"]], "VGPR Register Set Up Order": [[466, "amdgpu-amdhsa-vgpr-register-set-up-order-table"]], "VINTRP": [[0, "vintrp"], [2, "vintrp"], [3, "vintrp"], [4, "vintrp"]], "VINTRP Modifiers": [[464, "vintrp-modifiers"]], "VLIW Packetizer": [[483, "vliw-packetizer"]], "VOP1": [[0, "vop1"], [2, "vop1"], [3, "vop1"], [4, "vop1"]], "VOP2": [[0, "vop2"], [1, "vop2"], [2, "vop2"], [3, "vop2"], [4, "vop2"], [7, "vop2"], [8, "vop2"]], "VOP3": [[0, "vop3"], [2, "vop3"], [3, "vop3"], [4, "vop3"], [7, "vop3"], [8, "vop3"]], "VOP3 Modifiers": [[464, "vop3-modifiers"]], "VOP3 Operand Modifiers": [[464, "vop3-operand-modifiers"]], "VOP3P": [[0, "vop3p"], [1, "vop3p"], [4, "vop3p"], [5, "vop3p"], [6, "vop3p"], [7, "vop3p"], [8, "vop3p"]], "VOP3P MAD_MIX/FMA_MIX Modifiers": [[464, "vop3p-mad-mix-fma-mix-modifiers"]], "VOP3P MFMA Modifiers": [[464, "vop3p-mfma-modifiers"]], "VOP3P Modifiers": [[464, "vop3p-modifiers"]], "VOPC": [[0, "vopc"], [2, "vopc"], [3, "vopc"], [4, "vopc"]], "VP": [[579, "vp"]], "Validation": [[652, "validation"]], "Value Operations": [[461, "value-operations"]], "Value Profile": [[581, "value-profile"]], "Variable Argument Handling Intrinsics": [[579, "variable-argument-handling-intrinsics"]], "Variable Length Arrays": [[542, "variable-length-arrays"]], "Variable Names Coding Standard Options": [[614, "variable-names-coding-standard-options"]], "Variable Names Plan": [[614, null]], "Variable Sized Allocas": [[624, "variable-sized-allocas"]], "Variable Width Integers": [[473, "variable-width-value"]], "Variable locations during Register Allocation": [[625, "variable-locations-during-register-allocation"]], "Variable locations in Instruction Selection and MIR": [[625, "variable-locations-in-instruction-selection-and-mir"]], "Variables": [[676, "variables"]], "Variables for Building Libraries": [[610, "variables-for-building-libraries"]], "Variables for Building Programs": [[610, "variables-for-building-programs"]], "Variables for Building Subdirectories": [[610, "variables-for-building-subdirectories"]], "Variables, Types, and Scope": [[482, "variables-types-and-scope"]], "Variadic Arguments": [[555, "variadic-arguments"]], "Variant #1.1 and #1.2 attacks: \u00ab\u00a0Bounds Check Bypass Store\u00a0\u00bb": [[626, "variant-1-1-and-1-2-attacks-bounds-check-bypass-store"]], "Varying variable locations": [[585, "varying-variable-locations"]], "Vector Operations": [[579, "vector-operations"]], "Vector Predication Intrinsics": [[579, "vector-predication-intrinsics"]], "Vector Predication Roadmap": [[615, null]], "Vector Reduction Intrinsics": [[579, "vector-reduction-intrinsics"]], "Vector Reduction Operations": [[555, "vector-reduction-operations"]], "Vector Specific Operations": [[555, "vector-specific-operations"]], "Vector Type": [[579, "vector-type"]], "Vector of pointers:": [[579, "vector-of-pointers"]], "Vectorization Plan": [[616, null]], "Vectorization Workflow": [[616, "vectorization-workflow"]], "Vectorization of Mixed Types": [[645, "vectorization-of-mixed-types"]], "Vectorization of function calls": [[645, "vectorization-of-function-calls"]], "Versioning LICM": [[642, "versioning-licm"]], "Versions": [[581, "versions"]], "Viewing graphs while debugging code": [[609, "viewing-graphs-while-debugging-code"]], "Virtual Table Layout for A, B, C, D": [[643, "id1"]], "Visibility Styles": [[579, "visibility-styles"]], "Void Type": [[579, "void-type"]], "Volatile Memory Accesses": [[579, "volatile-memory-accesses"]], "WINDOWS/PDB SPECIFIC OPTIONS": [[527, "windows-pdb-specific-options"]], "WallClockTime Records": [[651, "wallclocktime-records"]], "Warnings": [[632, "warnings"]], "Ways to Contribute": [[533, "ways-to-contribute"]], "Weighted Input": [[518, "weighted-input"]], "Well-Defined Values": [[579, "well-defined-values"]], "Well-Formedness": [[579, "well-formedness"]], "What API do I use to store a value to one of the virtual registers in LLVM IR\u2019s SSA representation?": [[543, "what-api-do-i-use-to-store-a-value-to-one-of-the-virtual-registers-in-llvm-ir-s-ssa-representation"]], "What About Branches and Merges?": [[611, "what-about-branches-and-merges"]], "What About Commit Emails?": [[611, "what-about-commit-emails"]], "What Code Should Be Reviewed?": [[485, "what-code-should-be-reviewed"]], "What PassManager does": [[648, "what-passmanager-does"]], "What This Proposal is Not About": [[611, "what-this-proposal-is-not-about"]], "What Tools Are Used for Code Review?": [[485, "what-tools-are-used-for-code-review"]], "What effect do address spaces have on GEPs?": [[548, "what-effect-do-address-spaces-have-on-geps"]], "What happens after you file a report?": [[621, "what-happens-after-you-file-a-report"]], "What happens if a GEP computation overflows?": [[548, "what-happens-if-a-gep-computation-overflows"]], "What happens if an array index is out of bounds?": [[548, "what-happens-if-an-array-index-is-out-of-bounds"]], "What is Garbage Collection?": [[547, "what-is-garbage-collection"]], "What is considered a security issue?": [[623, "what-is-considered-a-security-issue"]], "What is covered": [[632, "what-is-covered"], [632, "id1"]], "What is dereferenced by GEP?": [[548, "what-is-dereferenced-by-gep"]], "What is the first index of the GEP instruction?": [[548, "what-is-the-first-index-of-the-gep-instruction"]], "What is this llvm.global_ctors and _GLOBAL__I_a... stuff that happens when I #include <iostream>?": [[543, "what-is-this-llvm-global-ctors-and-global-i-a-stuff-that-happens-when-i-include-iostream"]], "What is this \u00ab\u00a0undef\u00a0\u00bb thing that shows up in my code?": [[543, "what-is-this-undef-thing-that-shows-up-in-my-code"]], "What should I know to be able to follow along with this document?": [[591, "what-should-i-know-to-be-able-to-follow-along-with-this-document"]], "What source languages are supported?": [[543, "what-source-languages-are-supported"]], "What support is there for a higher level source language constructs for building a compiler?": [[543, "what-support-is-there-for-a-higher-level-source-language-constructs-for-building-a-compiler"]], "What to do when bugpoint isn\u2019t enough": [[477, "what-to-do-when-bugpoint-isn-t-enough"]], "What we associate in cmpValues?": [[591, "what-we-associate-in-cmpvalues"]], "What\u2019s an uglygep?": [[548, "what-s-an-uglygep"]], "When Is an RFC Required?": [[485, "when-is-an-rfc-required"]], "When to drop an instruction location": [[575, "when-to-drop-an-instruction-location"]], "When to merge instruction locations": [[575, "when-to-merge-instruction-locations"]], "When to preserve an instruction location": [[575, "when-to-preserve-an-instruction-location"]], "When to specify alignment": [[545, "when-to-specify-alignment"]], "Where did all of my code go??": [[543, "where-did-all-of-my-code-go"]], "Where to host the meetup?": [[588, "where-to-host-the-meetup"]], "Which image should I choose?": [[539, "which-image-should-i-choose"]], "Whitespace": [[486, "whitespace"]], "Who Can/Should Review Code?": [[485, "who-can-should-review-code"]], "Why Git, and Why GitHub?": [[611, "why-git-and-why-github"]], "Why Git?": [[611, "why-git"]], "Why GitHub?": [[611, "why-github"]], "Why Move At All?": [[611, "why-move-at-all"]], "Why a new C Standard Library?": [[612, "why-a-new-c-standard-library"]], "Why do GEP x,1,0,0 and GEP x,1 alias?": [[548, "why-do-gep-x-1-0-0-and-gep-x-1-alias"]], "Why do struct member indices always use i32?": [[548, "why-do-struct-member-indices-always-use-i32"]], "Why does instcombine + simplifycfg turn a call to a function with a mismatched calling convention into \u00ab\u00a0unreachable\u00a0\u00bb? Why not make the verifier reject it?": [[543, "why-does-instcombine-simplifycfg-turn-a-call-to-a-function-with-a-mismatched-calling-convention-into-unreachable-why-not-make-the-verifier-reject-it"]], "Why don\u2019t GEP x,0,0,1 and GEP x,1 alias?": [[548, "why-don-t-gep-x-0-0-1-and-gep-x-1-alias"]], "Why is GEP designed this way?": [[548, "why-is-gep-designed-this-way"]], "Why is the extra 0 index required?": [[548, "why-is-the-extra-0-index-required"]], "Why is this a hard problem?": [[674, "why-is-this-a-hard-problem"], [676, "why-is-this-a-hard-problem"], [685, "why-is-this-a-hard-problem"]], "Why?": [[539, "why"]], "Windows": [[532, "windows"]], "Windows Runtime Exception Handling": [[540, "windows-runtime-exception-handling"]], "Windows on ARM": [[542, "windows-on-arm"]], "Windows on ARM64": [[542, "windows-on-arm64"]], "Word Alignment": [[473, "word-alignment"]], "Work-item implicit argument layout": [[466, "amdgpu-amdhsa-workitem-implicit-argument-layout-table"]], "Workflow Before/After": [[611, "workflow-before-after"]], "Workflows": [[611, "workflows"]], "Working with CodeView": [[625, "working-with-codeview"]], "Write Portable Code": [[486, "write-portable-code"]], "Write barrier: llvm.gcwrite": [[547, "write-barrier-llvm-gcwrite"]], "Write-Back and Retire Stage": [[513, "write-back-and-retire-stage"]], "Writing Custom Tests for the test-suite": [[640, "writing-custom-tests-for-the-test-suite"]], "Writing LLVM Style Makefiles": [[610, "writing-llvm-style-makefiles"]], "Writing a custom parser": [[530, "writing-a-custom-parser"]], "Writing a new AliasAnalysis Implementation": [[469, "writing-a-new-aliasanalysis-implementation"]], "Writing an LLVM Backend": [[646, null]], "Writing an LLVM Pass": [[647, null], [648, null]], "Writing new regression tests": [[641, "writing-new-regression-tests"]], "X86": [[532, "x86"], [542, "x86"]], "X86 Calling Conventions supported": [[483, "x86-calling-conventions-supported"]], "X86 Target Triples supported": [[483, "x86-target-triples-supported"]], "X86 address spaces supported": [[483, "x86-address-spaces-supported"]], "X86/COFF-Dependent": [[542, "x86-coff-dependent"]], "X86EVEX2VEX": [[634, "x86evex2vex"]], "X86_mmx Type": [[579, "x86-mmx-type"]], "XCOFF ONLY OPTIONS AND COMMANDS": [[516, "xcoff-only-options-and-commands"]], "XCore": [[532, "xcore"]], "XRay": [[617, "xray"]], "XRay Flight Data Recorder Trace Format": [[651, null]], "XRay Instrumentation": [[649, null]], "XRay Runtime Library": [[649, "xray-runtime-library"]], "XRay in LLVM": [[649, "xray-in-llvm"]], "YAML I/O": [[652, null]], "YAML metadata": [[620, "yaml-metadata"]], "YAML remarks": [[620, "yaml-remarks"]], "YAML with a string table": [[620, "yaml-with-a-string-table"]], "Zext GEP indices to machine register width": [[545, "zext-gep-indices-to-machine-register-width"]], "Zipping local history": [[611, "zipping-local-history"]], "a": [[465, "a"]], "a16": [[464, "a16"]], "abid": [[464, "abid"]], "abs": [[464, "abs"], [464, "amdgpu-synid-abs"], [464, "id27"]], "addr64": [[464, "addr64"]], "adst": [[327, null], [328, null], [329, null], [330, null]], "asrc": [[331, null], [332, null], [333, null], [334, null]], "attr": [[20, null], [121, null], [206, null], [363, null]], "bank_mask": [[464, "bank-mask"]], "blgp": [[464, "blgp"]], "bound_ctrl": [[464, "bound-ctrl"]], "branch_weights": [[579, "branch-weights"]], "bugpoint - automatic test case reduction tool": [[488, null]], "bytes": [[517, "bytes"]], "cbsz": [[464, "cbsz"]], "clamp": [[464, "clamp"], [464, "amdgpu-synid-clamp"], [464, "id26"], [464, "id29"]], "clang-format-fuzzer": [[546, "clang-format-fuzzer"]], "clang-fuzzer": [[546, "clang-fuzzer"]], "clang-proto-fuzzer": [[546, "clang-proto-fuzzer"]], "clang-tblgen Options": [[529, "clang-tblgen-options"]], "cmpConstants": [[591, "cmpconstants"]], "cmpGEP": [[591, "cmpgep"]], "cmpOperation": [[591, "cmpoperation"]], "cmpValues(const Value*, const Value*)": [[591, "cmpvalues-const-value-const-value"]], "compare(const BasicBlock*, const BasicBlock*)": [[591, "compare-const-basicblock-const-basicblock"]], "compr": [[464, "compr"]], "compute_pgm_rsrc1 for GFX6-GFX10": [[466, "amdgpu-amdhsa-compute-pgm-rsrc1-gfx6-gfx10-table"]], "compute_pgm_rsrc2 for GFX6-GFX10": [[466, "amdgpu-amdhsa-compute-pgm-rsrc2-gfx6-gfx10-table"]], "compute_pgm_rsrc3 for GFX10": [[466, "amdgpu-amdhsa-compute-pgm-rsrc3-gfx10-table"]], "d16": [[464, "d16"]], "da": [[464, "da"]], "debugify in regression tests": [[575, "debugify-in-regression-tests"]], "dim": [[464, "dim"]], "dlc": [[464, "dlc"], [464, "id4"], [464, "amdgpu-synid-dlc"], [464, "id15"], [464, "id19"]], "dmask": [[464, "dmask"]], "done": [[464, "done"]], "dpp16_ctrl": [[464, "dpp16-ctrl"]], "dpp8_sel": [[464, "dpp8-sel"]], "dpp_ctrl": [[464, "dpp-ctrl"]], "dst": [[61, null], [150, null], [251, null], [343, null], [404, null]], "dst_sel": [[464, "dst-sel"]], "dst_unused": [[464, "dst-unused"]], "dsymutil - manipulate archived DWARF debug symbol files": [[489, null]], "dump": [[517, "dump"]], "eBPF maps": [[483, "ebpf-maps"]], "exec": [[465, "exec"]], "execz": [[465, "execz"]], "fconst": [[465, "fconst"]], "fi": [[464, "fi"], [464, "amdgpu-synid-fi16"]], "findRegressions-nightly.py": [[619, "findregressions-nightly-py"]], "flat_scratch": [[465, "flat-scratch"]], "fmt": [[464, "fmt"]], "formatv Examples": [[609, "formatv-examples"]], "function_entry_count": [[579, "function-entry-count"]], "fx": [[50, null], [304, null], [309, null], [314, null], [337, null]], "gds": [[464, "gds"]], "git bisect run": [[553, "git-bisect-run"]], "glc": [[464, "glc"], [464, "id1"], [464, "amdgpu-synid-glc"], [464, "id12"], [464, "id17"]], "high": [[464, "high"]], "hwreg": [[48, null], [142, null], [238, null], [391, null]], "iconst": [[465, "iconst"]], "idxen": [[464, "amdgpu-synid-idxen"]], "if statement": [[475, "if-statement"], [475, "id1"]], "ilist_traits": [[609, "ilist-traits"]], "imask": [[239, null], [392, null]], "imm16": [[24, null], [78, null], [98, null], [124, null], [162, null], [187, null], [209, null], [266, null], [289, null], [367, null], [421, null], [444, null]], "imm3": [[60, null], [250, null], [403, null]], "imm32": [[25, null], [46, null], [47, null], [125, null], [141, null], [210, null], [236, null], [237, null], [368, null], [389, null], [390, null]], "inline constant": [[465, "inline-constant"]], "iplist": [[609, "iplist"]], "ival": [[465, "ival"]], "label": [[49, null], [143, null], [240, null], [393, null]], "lds": [[464, "lds"], [464, "amdgpu-synid-lds"], [464, "id14"]], "lds_direct": [[465, "lds-direct"]], "libFuzzer \u2013 a library for coverage-guided fuzz testing.": [[581, null]], "libLTO": [[582, "liblto"]], "lit - LLVM Integrated Tester": [[491, null]], "literal": [[465, "literal"]], "llc - LLVM static compiler": [[492, null]], "lli - directly execute programs from LLVM bitcode": [[493, null]], "llvm-addr2line - a drop-in replacement for addr2line": [[494, null]], "llvm-ar - LLVM archiver": [[495, null]], "llvm-as - LLVM assembler": [[496, null]], "llvm-as-fuzzer": [[546, "llvm-as-fuzzer"]], "llvm-bcanalyzer - LLVM bitcode analyzer": [[497, null]], "llvm-config - Print LLVM compilation options": [[498, null]], "llvm-cov - emit coverage information": [[499, null]], "llvm-cxxfilt - LLVM symbol name demangler": [[500, null]], "llvm-cxxmap - Mangled name remapping tool": [[501, null]], "llvm-demangle-fuzzer": [[546, "llvm-demangle-fuzzer"]], "llvm-diff - LLVM structural \u201cdiff\u201d": [[502, null]], "llvm-dis - LLVM disassembler": [[503, null]], "llvm-dwarfdump - dump and verify DWARF debug information": [[504, null]], "llvm-dwarfdump-fuzzer": [[546, "llvm-dwarfdump-fuzzer"]], "llvm-exegesis - LLVM Machine Instruction Benchmark": [[505, null]], "llvm-extract - extract a function from an LLVM module": [[506, null]], "llvm-install-name-tool - LLVM tool for manipulating install-names and rpaths": [[507, null]], "llvm-isel-fuzzer": [[546, "llvm-isel-fuzzer"]], "llvm-lib - LLVM lib.exe compatible library tool": [[508, null]], "llvm-libtool-darwin - LLVM tool for creating libraries for Darwin": [[509, null]], "llvm-link - LLVM bitcode linker": [[510, null]], "llvm-lipo - LLVM tool for manipulating universal binaries": [[511, null]], "llvm-locstats - calculate statistics on DWARF debug location": [[512, null]], "llvm-mc-assemble-fuzzer": [[546, "llvm-mc-assemble-fuzzer"]], "llvm-mc-disassemble-fuzzer": [[546, "llvm-mc-disassemble-fuzzer"]], "llvm-mca - LLVM Machine Code Analyzer": [[513, null]], "llvm-nm - list LLVM bitcode and object file\u2019s symbol table": [[514, null]], "llvm-objcopy - object copying and editing tool": [[515, null]], "llvm-objdump - LLVM\u2019s object file dumper": [[516, null]], "llvm-opt-fuzzer": [[546, "llvm-opt-fuzzer"]], "llvm-pdbutil - PDB File forensics and diagnostics": [[517, null]], "llvm-profdata - Profile data tool": [[518, null]], "llvm-profgen - LLVM SPGO profile generation tool": [[519, null]], "llvm-ranlib - generates an archive index": [[520, null]], "llvm-readelf - GNU-style LLVM Object Reader": [[521, null]], "llvm-readobj - LLVM Object Reader": [[522, null]], "llvm-size - print size information": [[523, null]], "llvm-stress - generate random .ll files": [[524, null]], "llvm-strings - print strings": [[525, null]], "llvm-strip - object stripping tool": [[526, null]], "llvm-symbolizer - convert addresses into source code locations": [[527, null]], "llvm-tblgen Options": [[529, "llvm-tblgen-options"]], "llvm.dbg.addr": [[625, "llvm-dbg-addr"]], "llvm.dbg.declare": [[625, "llvm-dbg-declare"]], "llvm.dbg.value": [[625, "llvm-dbg-value"]], "llvm.eh.begincatch": [[540, "llvm-eh-begincatch"]], "llvm.eh.endcatch": [[540, "llvm-eh-endcatch"]], "llvm.eh.exceptionpointer": [[540, "llvm-eh-exceptionpointer"]], "llvm.eh.sjlj.callsite": [[540, "llvm-eh-sjlj-callsite"]], "llvm.eh.sjlj.longjmp": [[540, "llvm-eh-sjlj-longjmp"]], "llvm.eh.sjlj.lsda": [[540, "llvm-eh-sjlj-lsda"]], "llvm.eh.sjlj.setjmp": [[540, "llvm-eh-sjlj-setjmp"]], "llvm.eh.typeid.for": [[540, "llvm-eh-typeid-for"]], "llvm/ADT/ArrayRef.h": [[609, "llvm-adt-arrayref-h"]], "llvm/ADT/DenseMap.h": [[609, "llvm-adt-densemap-h"]], "llvm/ADT/DenseSet.h": [[609, "llvm-adt-denseset-h"]], "llvm/ADT/FoldingSet.h": [[609, "llvm-adt-foldingset-h"]], "llvm/ADT/ImmutableMap.h": [[609, "llvm-adt-immutablemap-h"]], "llvm/ADT/ImmutableSet.h": [[609, "llvm-adt-immutableset-h"]], "llvm/ADT/IndexedMap.h": [[609, "llvm-adt-indexedmap-h"]], "llvm/ADT/IntEqClasses.h": [[609, "llvm-adt-inteqclasses-h"]], "llvm/ADT/IntervalMap.h": [[609, "llvm-adt-intervalmap-h"]], "llvm/ADT/MapVector.h": [[609, "llvm-adt-mapvector-h"]], "llvm/ADT/PackedVector.h": [[609, "llvm-adt-packedvector-h"]], "llvm/ADT/SetVector.h": [[609, "llvm-adt-setvector-h"]], "llvm/ADT/SmallPtrSet.h": [[609, "llvm-adt-smallptrset-h"]], "llvm/ADT/SmallSet.h": [[609, "llvm-adt-smallset-h"]], "llvm/ADT/SmallString.h": [[609, "llvm-adt-smallstring-h"]], "llvm/ADT/SmallVector.h": [[609, "llvm-adt-smallvector-h"]], "llvm/ADT/SparseMultiSet.h": [[609, "llvm-adt-sparsemultiset-h"]], "llvm/ADT/SparseSet.h": [[609, "llvm-adt-sparseset-h"]], "llvm/ADT/StringMap.h": [[609, "llvm-adt-stringmap-h"]], "llvm/ADT/StringRef.h": [[609, "llvm-adt-stringref-h"]], "llvm/ADT/StringSet.h": [[609, "llvm-adt-stringset-h"]], "llvm/ADT/TinyPtrVector.h": [[609, "llvm-adt-tinyptrvector-h"]], "llvm/ADT/Twine.h": [[609, "llvm-adt-twine-h"]], "llvm/ADT/UniqueVector.h": [[609, "llvm-adt-uniquevector-h"]], "llvm/ADT/ilist.h": [[609, "llvm-adt-ilist-h"]], "llvm/ADT/ilist_node.h": [[609, "llvm-adt-ilist-node-h"]], "llvm/IR/ValueMap.h": [[609, "llvm-ir-valuemap-h"]], "llvm/examples": [[550, "llvm-examples"]], "llvm/include": [[550, "llvm-include"]], "llvm/lib": [[550, "llvm-lib"]], "llvm/projects": [[550, "llvm-projects"]], "llvm/test": [[550, "llvm-test"]], "llvm/tools": [[550, "llvm-tools"]], "llvm/utils": [[550, "llvm-utils"]], "lto_code_gen_t": [[582, "lto-code-gen-t"]], "lto_module_t": [[582, "lto-module-t"]], "lwe": [[464, "lwe"]], "m": [[51, null], [52, null], [53, null], [144, null], [241, null], [242, null], [243, null], [305, null], [310, null], [315, null], [316, null], [317, null], [338, null], [339, null], [340, null], [394, null], [395, null], [396, null]], "m0": [[465, "m0"]], "m_op_sel": [[464, "m-op-sel"]], "m_op_sel_hi": [[464, "m-op-sel-hi"]], "macOS": [[532, "macos"]], "make.implicit metadata": [[544, "make-implicit-metadata"]], "merge": [[517, "merge"]], "mlir-tblgen Options": [[529, "mlir-tblgen-options"]], "msg": [[54, null], [145, null], [244, null], [397, null]], "neg": [[464, "neg"], [464, "amdgpu-synid-neg"], [464, "id28"]], "neg_hi": [[464, "neg-hi"]], "neg_lo": [[464, "neg-lo"]], "null": [[465, "null"]], "nv": [[464, "nv"], [464, "amdgpu-synid-nv"], [464, "id18"]], "off": [[465, "off"]], "offen": [[464, "offen"]], "offset11": [[464, "offset11"]], "offset12": [[464, "offset12"], [464, "amdgpu-synid-buf-offset12"]], "offset12s": [[464, "offset12s"]], "offset13s": [[464, "offset13s"]], "offset16": [[464, "offset16"]], "offset8": [[464, "offset8"]], "omod": [[464, "omod"], [464, "amdgpu-synid-omod"]], "op_sel": [[464, "op-sel"], [464, "amdgpu-synid-op-sel"]], "op_sel_hi": [[464, "op-sel-hi"]], "opt": [[58, null], [148, null], [248, null], [342, null], [401, null]], "opt - LLVM optimizer": [[528, null]], "opt-diff.py": [[620, "opt-diff-py"]], "opt-stats.py": [[620, "opt-stats-py"]], "opt-viewer": [[620, "opt-viewer"]], "opt-viewer.py": [[620, "opt-viewer-py"]], "param": [[59, null], [149, null], [249, null], [402, null]], "pdb2yaml": [[517, "pdb2yaml"]], "pretty": [[517, "pretty"]], "ptxas complains of undefined function: __nvvm_reflect": [[592, "ptxas-complains-of-undefined-function-nvvm-reflect"]], "r128": [[464, "r128"]], "rawspeed": [[613, "rawspeed"]], "row_mask": [[464, "row-mask"]], "runOnModule": [[591, "runonmodule"]], "s": [[465, "s"]], "saddr": [[64, null], [65, null], [345, null], [407, null], [408, null]], "sbase": [[21, null], [22, null], [23, null], [122, null], [123, null], [207, null], [208, null], [364, null], [365, null], [366, null]], "scc": [[465, "scc"]], "sdata": [[33, null], [34, null], [35, null], [67, null], [68, null], [69, null], [255, null], [256, null], [257, null], [376, null], [377, null], [378, null], [410, null], [411, null], [412, null]], "sdst": [[70, null], [71, null], [72, null], [73, null], [74, null], [75, null], [76, null], [77, null], [115, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [161, null], [258, null], [259, null], [260, null], [261, null], [262, null], [263, null], [264, null], [265, null], [413, null], [414, null], [415, null], [416, null], [417, null], [418, null], [419, null], [420, null]], "sext": [[464, "sext"]], "simm21": [[465, "simm21"]], "slc": [[464, "slc"], [464, "id2"], [464, "amdgpu-synid-slc"], [464, "id13"]], "soffset": [[55, null], [56, null], [57, null], [146, null], [147, null], [245, null], [246, null], [247, null], [341, null], [398, null], [399, null], [400, null]], "src": [[9, null], [10, null], [11, null], [12, null], [79, null], [80, null], [81, null], [82, null], [83, null], [84, null], [85, null], [86, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [169, null], [170, null], [171, null], [172, null], [267, null], [268, null], [269, null], [270, null], [271, null], [272, null], [273, null], [274, null], [275, null], [276, null], [306, null], [307, null], [311, null], [312, null], [318, null], [319, null], [320, null], [321, null], [322, null], [346, null], [347, null], [348, null], [349, null], [350, null], [351, null], [422, null], [423, null], [424, null], [425, null], [426, null], [427, null], [428, null], [429, null], [430, null], [431, null]], "src0_sel": [[464, "src0-sel"]], "src1_sel": [[464, "src1-sel"]], "srsrc": [[62, null], [63, null], [151, null], [152, null], [252, null], [253, null], [344, null], [405, null], [406, null]], "ssamp": [[66, null], [153, null], [254, null], [409, null]], "ssrc": [[88, null], [89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [116, null], [174, null], [175, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [278, null], [279, null], [280, null], [281, null], [282, null], [283, null], [284, null], [285, null], [286, null], [433, null], [434, null], [435, null], [436, null], [437, null], [438, null], [439, null], [440, null], [441, null]], "std::string": [[609, "std-string"]], "switch statement": [[475, "switch-statement"], [475, "id2"]], "swizzle pattern": [[464, "swizzle-pattern"]], "tba": [[465, "tba"]], "test-release.sh": [[619, "test-release-sh"]], "test-suite": [[550, "test-suite"], [641, "test-suite"]], "test-suite Guide": [[639, null]], "test-suite Makefile Guide (deprecated)": [[640, null]], "tfe": [[464, "tfe"], [464, "id3"], [464, "amdgpu-synid-tfe"], [464, "id16"]], "tgt": [[96, null], [185, null], [287, null], [442, null]], "tma": [[465, "tma"]], "trap": [[465, "trap"]], "ttmp": [[465, "ttmp"]], "ufmt": [[464, "ufmt"]], "uimm20": [[465, "uimm20"]], "uimm21": [[465, "uimm21"]], "uimm32": [[465, "uimm32"]], "uimm8": [[465, "uimm8"]], "unorm": [[464, "unorm"]], "v": [[465, "v"]], "vaddr": [[16, null], [17, null], [18, null], [19, null], [99, null], [100, null], [117, null], [118, null], [119, null], [120, null], [202, null], [203, null], [204, null], [205, null], [326, null], [353, null], [359, null], [360, null], [361, null], [362, null], [445, null], [446, null]], "vasrc": [[354, null], [355, null]], "vcc": [[101, null], [188, null], [290, null], [447, null], [465, "vcc"]], "vccz": [[465, "vccz"]], "vdata": [[26, null], [27, null], [28, null], [29, null], [30, null], [31, null], [32, null], [102, null], [103, null], [104, null], [105, null], [126, null], [127, null], [128, null], [129, null], [130, null], [131, null], [189, null], [190, null], [191, null], [192, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null], [291, null], [292, null], [293, null], [294, null], [335, null], [356, null], [369, null], [370, null], [371, null], [372, null], [373, null], [374, null], [375, null], [448, null], [449, null], [450, null], [451, null]], "vdst": [[14, null], [36, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [106, null], [107, null], [108, null], [109, null], [132, null], [133, null], [134, null], [135, null], [136, null], [137, null], [138, null], [139, null], [140, null], [193, null], [194, null], [195, null], [196, null], [222, null], [223, null], [224, null], [225, null], [226, null], [227, null], [228, null], [229, null], [230, null], [231, null], [232, null], [233, null], [234, null], [235, null], [295, null], [296, null], [297, null], [298, null], [308, null], [313, null], [324, null], [336, null], [357, null], [379, null], [380, null], [381, null], [382, null], [383, null], [384, null], [385, null], [386, null], [387, null], [388, null], [452, null], [453, null], [454, null], [455, null]], "vecmathlib tests harness": [[613, "vecmathlib-tests-harness"]], "vm": [[464, "vm"]], "vsrc": [[15, null], [87, null], [110, null], [111, null], [112, null], [113, null], [173, null], [197, null], [198, null], [199, null], [200, null], [277, null], [299, null], [300, null], [301, null], [302, null], [325, null], [358, null], [432, null], [456, null], [457, null], [458, null], [459, null]], "waitcnt": [[114, null], [201, null], [303, null], [460, null]], "x86 Implementation Details": [[626, "x86-implementation-details"]], "xnack": [[465, "xnack"]], "xxx-tblgen - Target Description to C++ Code": [[529, null]], "yaml2obj": [[688, null]], "yaml2pdb": [[517, "yaml2pdb"]], "\u00ab\u00a0More Canonical\u00a0\u00bb Loops": [[583, "more-canonical-loops"]], "\u00ab\u00a0Quirky\u00a0\u00bb Interface": [[478, "quirky-interface"]], "\u00ab\u00a0llvm-libc\u00a0\u00bb C Standard Library": [[612, null]], "\u00c0 faire": [[466, "id10"], [466, "id12"], [466, "id14"], [466, "id15"], [466, "id16"], [466, "id18"], [466, "id20"], [466, "id21"], [466, "id22"], [466, "id23"], [466, "id29"], [466, "id40"], [466, "id45"], [466, "id46"], [466, "id48"], [466, "id51"], [466, "id52"], [466, "id53"], [466, "id54"], [466, "id56"], [466, "id57"], [466, "id58"], [466, "id68"], [466, "id69"], [466, "id70"], [466, "id71"], [466, "id72"], [466, "id73"], [466, "id74"], [466, "id75"], [466, "id76"], [466, "id77"], [481, "id3"], [530, "id8"], [530, "id9"], [573, "id1"], [670, "id1"]], "\u00c0 propos": [[653, null]], "\u201cabsolute_symbol\u201d Metadata": [[579, "absolute-symbol-metadata"]], "\u201caddrspacecast .. to\u201d Instruction": [[579, "addrspacecast-to-instruction"]], "\u201cadd\u201d Instruction": [[579, "add-instruction"]], "\u201calloca\u201d Instruction": [[579, "alloca-instruction"]], "\u201cand\u201d Instruction": [[579, "and-instruction"]], "\u201cannotation\u201d Metadata": [[579, "annotation-metadata"]], "\u201cashr\u201d Instruction": [[579, "ashr-instruction"]], "\u201cassociated\u201d Metadata": [[579, "associated-metadata"]], "\u201catomicrmw\u201d Instruction": [[579, "atomicrmw-instruction"]], "\u201cbitcast .. to\u201d Instruction": [[579, "bitcast-to-instruction"]], "\u201cbr\u201d Instruction": [[579, "br-instruction"]], "\u201ccallback\u201d Metadata": [[579, "callback-metadata"]], "\u201ccallbr\u201d Instruction": [[579, "callbr-instruction"]], "\u201ccallees\u201d Metadata": [[579, "callees-metadata"]], "\u201ccall\u201d Instruction": [[579, "call-instruction"]], "\u201ccatchpad\u201d Instruction": [[579, "catchpad-instruction"]], "\u201ccatchret\u201d Instruction": [[579, "catchret-instruction"]], "\u201ccatchswitch\u201d Instruction": [[579, "catchswitch-instruction"]], "\u201ccleanuppad\u201d Instruction": [[579, "cleanuppad-instruction"]], "\u201ccleanupret\u201d Instruction": [[579, "cleanupret-instruction"]], "\u201ccmpxchg\u201d Instruction": [[579, "cmpxchg-instruction"]], "\u201cdereferenceable_or_null\u201d Metadata": [[579, "dereferenceable-or-null-metadata"]], "\u201cdereferenceable\u201d Metadata": [[579, "dereferenceable-metadata"]], "\u201cextractelement\u201d Instruction": [[579, "extractelement-instruction"]], "\u201cextractvalue\u201d Instruction": [[579, "extractvalue-instruction"]], "\u201cfadd\u201d Instruction": [[579, "fadd-instruction"]], "\u201cfcmp\u201d Instruction": [[579, "fcmp-instruction"]], "\u201cfdiv\u201d Instruction": [[579, "fdiv-instruction"]], "\u201cfence\u201d Instruction": [[579, "fence-instruction"]], "\u201cfmul\u201d Instruction": [[579, "fmul-instruction"]], "\u201cfneg\u201d Instruction": [[579, "fneg-instruction"]], "\u201cfor\u201d Loop Expression": [[672, "for-loop-expression"], [683, "for-loop-expression"]], "\u201cfpext .. to\u201d Instruction": [[579, "fpext-to-instruction"]], "\u201cfpmath\u201d Metadata": [[579, "fpmath-metadata"]], "\u201cfptosi .. to\u201d Instruction": [[579, "fptosi-to-instruction"]], "\u201cfptoui .. to\u201d Instruction": [[579, "fptoui-to-instruction"]], "\u201cfptrunc .. to\u201d Instruction": [[579, "fptrunc-to-instruction"]], "\u201cfreeze\u201d Instruction": [[579, "freeze-instruction"]], "\u201cfrem\u201d Instruction": [[579, "frem-instruction"]], "\u201cfsub\u201d Instruction": [[579, "fsub-instruction"]], "\u201cgetelementptr\u201d Instruction": [[579, "getelementptr-instruction"]], "\u201cicmp\u201d Instruction": [[579, "icmp-instruction"]], "\u201cindirectbr\u201d Instruction": [[579, "indirectbr-instruction"]], "\u201cinsertelement\u201d Instruction": [[579, "insertelement-instruction"]], "\u201cinsertvalue\u201d Instruction": [[579, "insertvalue-instruction"]], "\u201cinttoptr .. to\u201d Instruction": [[579, "inttoptr-to-instruction"]], "\u201cinvariant.group\u201d Metadata": [[579, "invariant-group-metadata"]], "\u201cinvoke\u201d Instruction": [[579, "invoke-instruction"]], "\u201cirr_loop\u201d Metadata": [[579, "irr-loop-metadata"]], "\u201clandingpad\u201d Instruction": [[579, "landingpad-instruction"]], "\u201cllvm.abs.*\u201d Intrinsic": [[579, "llvm-abs-intrinsic"]], "\u201cllvm.access.group\u201d Metadata": [[579, "llvm-access-group-metadata"]], "\u201cllvm.addressofreturnaddress\u201d Intrinsic": [[579, "llvm-addressofreturnaddress-intrinsic"]], "\u201cllvm.adjust.trampoline\u201d Intrinsic": [[579, "llvm-adjust-trampoline-intrinsic"]], "\u201cllvm.annotation.*\u201d Intrinsic": [[579, "llvm-annotation-intrinsic"]], "\u201cllvm.assume\u201d Intrinsic": [[579, "llvm-assume-intrinsic"]], "\u201cllvm.bitreverse.*\u201d Intrinsics": [[579, "llvm-bitreverse-intrinsics"]], "\u201cllvm.bswap.*\u201d Intrinsics": [[579, "llvm-bswap-intrinsics"]], "\u201cllvm.call.preallocated.arg\u201d Intrinsic": [[579, "llvm-call-preallocated-arg-intrinsic"]], "\u201cllvm.call.preallocated.setup\u201d Intrinsic": [[579, "llvm-call-preallocated-setup-intrinsic"]], "\u201cllvm.call.preallocated.teardown\u201d Intrinsic": [[579, "llvm-call-preallocated-teardown-intrinsic"]], "\u201cllvm.canonicalize.*\u201d Intrinsic": [[579, "llvm-canonicalize-intrinsic"]], "\u201cllvm.ceil.*\u201d Intrinsic": [[579, "llvm-ceil-intrinsic"]], "\u201cllvm.clear_cache\u201d Intrinsic": [[579, "llvm-clear-cache-intrinsic"]], "\u201cllvm.codeview.annotation\u201d Intrinsic": [[579, "llvm-codeview-annotation-intrinsic"]], "\u201cllvm.convert.from.fp16\u201d Intrinsic": [[579, "llvm-convert-from-fp16-intrinsic"]], "\u201cllvm.convert.to.fp16\u201d Intrinsic": [[579, "llvm-convert-to-fp16-intrinsic"]], "\u201cllvm.copysign.*\u201d Intrinsic": [[579, "llvm-copysign-intrinsic"]], "\u201cllvm.coro.alloc\u201d Intrinsic": [[534, "llvm-coro-alloc-intrinsic"]], "\u201cllvm.coro.begin\u201d Intrinsic": [[534, "llvm-coro-begin-intrinsic"]], "\u201cllvm.coro.destroy\u201d Intrinsic": [[534, "llvm-coro-destroy-intrinsic"]], "\u201cllvm.coro.done\u201d Intrinsic": [[534, "llvm-coro-done-intrinsic"]], "\u201cllvm.coro.end.async\u201d Intrinsic": [[534, "llvm-coro-end-async-intrinsic"]], "\u201cllvm.coro.end\u201d Intrinsic": [[534, "llvm-coro-end-intrinsic"]], "\u201cllvm.coro.frame\u201d Intrinsic": [[534, "llvm-coro-frame-intrinsic"]], "\u201cllvm.coro.free\u201d Intrinsic": [[534, "llvm-coro-free-intrinsic"]], "\u201cllvm.coro.id.async\u201d Intrinsic": [[534, "llvm-coro-id-async-intrinsic"]], "\u201cllvm.coro.id.retcon.once\u201d Intrinsic": [[534, "llvm-coro-id-retcon-once-intrinsic"]], "\u201cllvm.coro.id.retcon\u201d Intrinsic": [[534, "llvm-coro-id-retcon-intrinsic"]], "\u201cllvm.coro.id\u201d Intrinsic": [[534, "llvm-coro-id-intrinsic"]], "\u201cllvm.coro.noop\u201d Intrinsic": [[534, "llvm-coro-noop-intrinsic"]], "\u201cllvm.coro.param\u201d Intrinsic": [[534, "llvm-coro-param-intrinsic"]], "\u201cllvm.coro.prepare.async\u201d Intrinsic": [[534, "llvm-coro-prepare-async-intrinsic"]], "\u201cllvm.coro.promise\u201d Intrinsic": [[534, "llvm-coro-promise-intrinsic"]], "\u201cllvm.coro.resume\u201d Intrinsic": [[534, "llvm-coro-resume-intrinsic"]], "\u201cllvm.coro.save\u201d Intrinsic": [[534, "llvm-coro-save-intrinsic"]], "\u201cllvm.coro.size\u201d Intrinsic": [[534, "llvm-coro-size-intrinsic"]], "\u201cllvm.coro.suspend.async\u201d Intrinsic": [[534, "llvm-coro-suspend-async-intrinsic"]], "\u201cllvm.coro.suspend.retcon\u201d Intrinsic": [[534, "llvm-coro-suspend-retcon-intrinsic"]], "\u201cllvm.coro.suspend\u201d Intrinsic": [[534, "llvm-coro-suspend-intrinsic"]], "\u201cllvm.cos.*\u201d Intrinsic": [[579, "llvm-cos-intrinsic"]], "\u201cllvm.ctlz.*\u201d Intrinsic": [[579, "llvm-ctlz-intrinsic"]], "\u201cllvm.ctpop.*\u201d Intrinsic": [[579, "llvm-ctpop-intrinsic"]], "\u201cllvm.cttz.*\u201d Intrinsic": [[579, "llvm-cttz-intrinsic"]], "\u201cllvm.debugtrap\u201d Intrinsic": [[579, "llvm-debugtrap-intrinsic"]], "\u201cllvm.donothing\u201d Intrinsic": [[579, "llvm-donothing-intrinsic"]], "\u201cllvm.exp.*\u201d Intrinsic": [[579, "llvm-exp-intrinsic"]], "\u201cllvm.exp2.*\u201d Intrinsic": [[579, "llvm-exp2-intrinsic"]], "\u201cllvm.expect.with.probability\u201d Intrinsic": [[579, "llvm-expect-with-probability-intrinsic"]], "\u201cllvm.expect\u201d Intrinsic": [[579, "llvm-expect-intrinsic"]], "\u201cllvm.experimental.constrained.ceil\u201d Intrinsic": [[579, "llvm-experimental-constrained-ceil-intrinsic"]], "\u201cllvm.experimental.constrained.cos\u201d Intrinsic": [[579, "llvm-experimental-constrained-cos-intrinsic"]], "\u201cllvm.experimental.constrained.exp2\u201d Intrinsic": [[579, "llvm-experimental-constrained-exp2-intrinsic"]], "\u201cllvm.experimental.constrained.exp\u201d Intrinsic": [[579, "llvm-experimental-constrained-exp-intrinsic"]], "\u201cllvm.experimental.constrained.fadd\u201d Intrinsic": [[579, "llvm-experimental-constrained-fadd-intrinsic"]], "\u201cllvm.experimental.constrained.fcmp\u201d and \u201cllvm.experimental.constrained.fcmps\u201d Intrinsics": [[579, "llvm-experimental-constrained-fcmp-and-llvm-experimental-constrained-fcmps-intrinsics"]], "\u201cllvm.experimental.constrained.fdiv\u201d Intrinsic": [[579, "llvm-experimental-constrained-fdiv-intrinsic"]], "\u201cllvm.experimental.constrained.floor\u201d Intrinsic": [[579, "llvm-experimental-constrained-floor-intrinsic"]], "\u201cllvm.experimental.constrained.fma\u201d Intrinsic": [[579, "llvm-experimental-constrained-fma-intrinsic"]], "\u201cllvm.experimental.constrained.fmuladd\u201d Intrinsic": [[579, "llvm-experimental-constrained-fmuladd-intrinsic"]], "\u201cllvm.experimental.constrained.fmul\u201d Intrinsic": [[579, "llvm-experimental-constrained-fmul-intrinsic"]], "\u201cllvm.experimental.constrained.fpext\u201d Intrinsic": [[579, "llvm-experimental-constrained-fpext-intrinsic"]], "\u201cllvm.experimental.constrained.fptosi\u201d Intrinsic": [[579, "llvm-experimental-constrained-fptosi-intrinsic"]], "\u201cllvm.experimental.constrained.fptoui\u201d Intrinsic": [[579, "llvm-experimental-constrained-fptoui-intrinsic"]], "\u201cllvm.experimental.constrained.fptrunc\u201d Intrinsic": [[579, "llvm-experimental-constrained-fptrunc-intrinsic"]], "\u201cllvm.experimental.constrained.frem\u201d Intrinsic": [[579, "llvm-experimental-constrained-frem-intrinsic"]], "\u201cllvm.experimental.constrained.fsub\u201d Intrinsic": [[579, "llvm-experimental-constrained-fsub-intrinsic"]], "\u201cllvm.experimental.constrained.llrint\u201d Intrinsic": [[579, "llvm-experimental-constrained-llrint-intrinsic"]], "\u201cllvm.experimental.constrained.llround\u201d Intrinsic": [[579, "llvm-experimental-constrained-llround-intrinsic"]], "\u201cllvm.experimental.constrained.log10\u201d Intrinsic": [[579, "llvm-experimental-constrained-log10-intrinsic"]], "\u201cllvm.experimental.constrained.log2\u201d Intrinsic": [[579, "llvm-experimental-constrained-log2-intrinsic"]], "\u201cllvm.experimental.constrained.log\u201d Intrinsic": [[579, "llvm-experimental-constrained-log-intrinsic"]], "\u201cllvm.experimental.constrained.lrint\u201d Intrinsic": [[579, "llvm-experimental-constrained-lrint-intrinsic"]], "\u201cllvm.experimental.constrained.lround\u201d Intrinsic": [[579, "llvm-experimental-constrained-lround-intrinsic"]], "\u201cllvm.experimental.constrained.maximum\u201d Intrinsic": [[579, "llvm-experimental-constrained-maximum-intrinsic"]], "\u201cllvm.experimental.constrained.maxnum\u201d Intrinsic": [[579, "llvm-experimental-constrained-maxnum-intrinsic"]], "\u201cllvm.experimental.constrained.minimum\u201d Intrinsic": [[579, "llvm-experimental-constrained-minimum-intrinsic"]], "\u201cllvm.experimental.constrained.minnum\u201d Intrinsic": [[579, "llvm-experimental-constrained-minnum-intrinsic"]], "\u201cllvm.experimental.constrained.nearbyint\u201d Intrinsic": [[579, "llvm-experimental-constrained-nearbyint-intrinsic"]], "\u201cllvm.experimental.constrained.powi\u201d Intrinsic": [[579, "llvm-experimental-constrained-powi-intrinsic"]], "\u201cllvm.experimental.constrained.pow\u201d Intrinsic": [[579, "llvm-experimental-constrained-pow-intrinsic"]], "\u201cllvm.experimental.constrained.rint\u201d Intrinsic": [[579, "llvm-experimental-constrained-rint-intrinsic"]], "\u201cllvm.experimental.constrained.roundeven\u201d Intrinsic": [[579, "llvm-experimental-constrained-roundeven-intrinsic"]], "\u201cllvm.experimental.constrained.round\u201d Intrinsic": [[579, "llvm-experimental-constrained-round-intrinsic"]], "\u201cllvm.experimental.constrained.sin\u201d Intrinsic": [[579, "llvm-experimental-constrained-sin-intrinsic"]], "\u201cllvm.experimental.constrained.sitofp\u201d Intrinsic": [[579, "llvm-experimental-constrained-sitofp-intrinsic"]], "\u201cllvm.experimental.constrained.sqrt\u201d Intrinsic": [[579, "llvm-experimental-constrained-sqrt-intrinsic"]], "\u201cllvm.experimental.constrained.trunc\u201d Intrinsic": [[579, "llvm-experimental-constrained-trunc-intrinsic"]], "\u201cllvm.experimental.constrained.uitofp\u201d Intrinsic": [[579, "llvm-experimental-constrained-uitofp-intrinsic"]], "\u201cllvm.experimental.deoptimize\u201d Intrinsic": [[579, "llvm-experimental-deoptimize-intrinsic"]], "\u201cllvm.experimental.gc.relocate\u201d Intrinsic": [[630, "llvm-experimental-gc-relocate-intrinsic"]], "\u201cllvm.experimental.gc.result\u201d Intrinsic": [[630, "llvm-experimental-gc-result-intrinsic"]], "\u201cllvm.experimental.gc.statepoint\u201d Intrinsic": [[630, "llvm-experimental-gc-statepoint-intrinsic"]], "\u201cllvm.experimental.guard\u201d Intrinsic": [[579, "llvm-experimental-guard-intrinsic"]], "\u201cllvm.experimental.noalias.scope.decl\u201d Intrinsic": [[579, "llvm-experimental-noalias-scope-decl-intrinsic"]], "\u201cllvm.experimental.patchpoint.*\u201d Intrinsic": [[628, "llvm-experimental-patchpoint-intrinsic"]], "\u201cllvm.experimental.stackmap\u201d Intrinsic": [[628, "llvm-experimental-stackmap-intrinsic"]], "\u201cllvm.experimental.vector.extract\u201d Intrinsic": [[579, "llvm-experimental-vector-extract-intrinsic"]], "\u201cllvm.experimental.vector.insert\u201d Intrinsic": [[579, "llvm-experimental-vector-insert-intrinsic"]], "\u201cllvm.experimental.widenable.condition\u201d Intrinsic": [[579, "llvm-experimental-widenable-condition-intrinsic"]], "\u201cllvm.fabs.*\u201d Intrinsic": [[579, "llvm-fabs-intrinsic"]], "\u201cllvm.floor.*\u201d Intrinsic": [[579, "llvm-floor-intrinsic"]], "\u201cllvm.flt.rounds\u201d Intrinsic": [[579, "llvm-flt-rounds-intrinsic"]], "\u201cllvm.fma.*\u201d Intrinsic": [[579, "llvm-fma-intrinsic"]], "\u201cllvm.fmuladd.*\u201d Intrinsic": [[579, "llvm-fmuladd-intrinsic"]], "\u201cllvm.fptosi.sat.*\u201d Intrinsic": [[579, "llvm-fptosi-sat-intrinsic"]], "\u201cllvm.fptoui.sat.*\u201d Intrinsic": [[579, "llvm-fptoui-sat-intrinsic"]], "\u201cllvm.frameaddress\u201d Intrinsic": [[579, "llvm-frameaddress-intrinsic"]], "\u201cllvm.fshl.*\u201d Intrinsic": [[579, "llvm-fshl-intrinsic"]], "\u201cllvm.fshr.*\u201d Intrinsic": [[579, "llvm-fshr-intrinsic"]], "\u201cllvm.gcread\u201d Intrinsic": [[579, "llvm-gcread-intrinsic"]], "\u201cllvm.gcroot\u201d Intrinsic": [[579, "llvm-gcroot-intrinsic"]], "\u201cllvm.gcwrite\u201d Intrinsic": [[579, "llvm-gcwrite-intrinsic"]], "\u201cllvm.get.active.lane.mask.*\u201d Intrinsics": [[579, "llvm-get-active-lane-mask-intrinsics"]], "\u201cllvm.get.dynamic.area.offset\u201d Intrinsic": [[579, "llvm-get-dynamic-area-offset-intrinsic"]], "\u201cllvm.init.trampoline\u201d Intrinsic": [[579, "llvm-init-trampoline-intrinsic"]], "\u201cllvm.instrprof.increment.step\u201d Intrinsic": [[579, "llvm-instrprof-increment-step-intrinsic"]], "\u201cllvm.instrprof.increment\u201d Intrinsic": [[579, "llvm-instrprof-increment-intrinsic"]], "\u201cllvm.instrprof.value.profile\u201d Intrinsic": [[579, "llvm-instrprof-value-profile-intrinsic"]], "\u201cllvm.invariant.end\u201d Intrinsic": [[579, "llvm-invariant-end-intrinsic"]], "\u201cllvm.invariant.start\u201d Intrinsic": [[579, "llvm-invariant-start-intrinsic"]], "\u201cllvm.is.constant.*\u201d Intrinsic": [[579, "llvm-is-constant-intrinsic"]], "\u201cllvm.launder.invariant.group\u201d Intrinsic": [[579, "llvm-launder-invariant-group-intrinsic"]], "\u201cllvm.licm.disable\u201d Metadata": [[579, "llvm-licm-disable-metadata"]], "\u201cllvm.lifetime.end\u201d Intrinsic": [[579, "llvm-lifetime-end-intrinsic"]], "\u201cllvm.lifetime.start\u201d Intrinsic": [[579, "llvm-lifetime-start-intrinsic"]], "\u201cllvm.llrint.*\u201d Intrinsic": [[579, "llvm-llrint-intrinsic"]], "\u201cllvm.llround.*\u201d Intrinsic": [[579, "llvm-llround-intrinsic"]], "\u201cllvm.load.relative\u201d Intrinsic": [[579, "llvm-load-relative-intrinsic"]], "\u201cllvm.localescape\u201d and \u201cllvm.localrecover\u201d Intrinsics": [[579, "llvm-localescape-and-llvm-localrecover-intrinsics"]], "\u201cllvm.log.*\u201d Intrinsic": [[579, "llvm-log-intrinsic"]], "\u201cllvm.log10.*\u201d Intrinsic": [[579, "llvm-log10-intrinsic"]], "\u201cllvm.log2.*\u201d Intrinsic": [[579, "llvm-log2-intrinsic"]], "\u201cllvm.loop.decrement.*\u201d Intrinsic": [[579, "llvm-loop-decrement-intrinsic"]], "\u201cllvm.loop.decrement.reg.*\u201d Intrinsic": [[579, "llvm-loop-decrement-reg-intrinsic"]], "\u201cllvm.loop.disable_nonforced\u201d": [[579, "llvm-loop-disable-nonforced"]], "\u201cllvm.loop.distribute.enable\u201d Metadata": [[579, "llvm-loop-distribute-enable-metadata"]], "\u201cllvm.loop.distribute.followup_all\u201d Metadata": [[579, "llvm-loop-distribute-followup-all-metadata"]], "\u201cllvm.loop.distribute.followup_coincident\u201d Metadata": [[579, "llvm-loop-distribute-followup-coincident-metadata"]], "\u201cllvm.loop.distribute.followup_fallback\u201d Metadata": [[579, "llvm-loop-distribute-followup-fallback-metadata"]], "\u201cllvm.loop.distribute.followup_sequential\u201d Metadata": [[579, "llvm-loop-distribute-followup-sequential-metadata"]], "\u201cllvm.loop.interleave.count\u201d Metadata": [[579, "llvm-loop-interleave-count-metadata"]], "\u201cllvm.loop.licm_versioning.disable\u201d Metadata": [[579, "llvm-loop-licm-versioning-disable-metadata"]], "\u201cllvm.loop.mustprogress\u201d Metadata": [[579, "llvm-loop-mustprogress-metadata"]], "\u201cllvm.loop.parallel_accesses\u201d Metadata": [[579, "llvm-loop-parallel-accesses-metadata"]], "\u201cllvm.loop.unroll.count\u201d Metadata": [[579, "llvm-loop-unroll-count-metadata"]], "\u201cllvm.loop.unroll.disable\u201d Metadata": [[579, "llvm-loop-unroll-disable-metadata"]], "\u201cllvm.loop.unroll.enable\u201d Metadata": [[579, "llvm-loop-unroll-enable-metadata"]], "\u201cllvm.loop.unroll.followup_remainder\u201d Metadata": [[579, "llvm-loop-unroll-followup-remainder-metadata"]], "\u201cllvm.loop.unroll.followup\u201d Metadata": [[579, "llvm-loop-unroll-followup-metadata"]], "\u201cllvm.loop.unroll.full\u201d Metadata": [[579, "llvm-loop-unroll-full-metadata"]], "\u201cllvm.loop.unroll.runtime.disable\u201d Metadata": [[579, "llvm-loop-unroll-runtime-disable-metadata"]], "\u201cllvm.loop.unroll_and_jam.count\u201d Metadata": [[579, "llvm-loop-unroll-and-jam-count-metadata"]], "\u201cllvm.loop.unroll_and_jam.disable\u201d Metadata": [[579, "llvm-loop-unroll-and-jam-disable-metadata"]], "\u201cllvm.loop.unroll_and_jam.enable\u201d Metadata": [[579, "llvm-loop-unroll-and-jam-enable-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_all\u201d Metadata": [[579, "llvm-loop-unroll-and-jam-followup-all-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_inner\u201d Metadata": [[579, "llvm-loop-unroll-and-jam-followup-inner-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_outer\u201d Metadata": [[579, "llvm-loop-unroll-and-jam-followup-outer-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_remainder_inner\u201d Metadata": [[579, "llvm-loop-unroll-and-jam-followup-remainder-inner-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_remainder_outer\u201d Metadata": [[579, "llvm-loop-unroll-and-jam-followup-remainder-outer-metadata"]], "\u201cllvm.loop.unroll_and_jam\u201d": [[579, "llvm-loop-unroll-and-jam"]], "\u201cllvm.loop.unroll\u201d": [[579, "llvm-loop-unroll"]], "\u201cllvm.loop.vectorize.enable\u201d Metadata": [[579, "llvm-loop-vectorize-enable-metadata"]], "\u201cllvm.loop.vectorize.followup_all\u201d Metadata": [[579, "llvm-loop-vectorize-followup-all-metadata"]], "\u201cllvm.loop.vectorize.followup_epilogue\u201d Metadata": [[579, "llvm-loop-vectorize-followup-epilogue-metadata"]], "\u201cllvm.loop.vectorize.followup_vectorized\u201d Metadata": [[579, "llvm-loop-vectorize-followup-vectorized-metadata"]], "\u201cllvm.loop.vectorize.predicate.enable\u201d Metadata": [[579, "llvm-loop-vectorize-predicate-enable-metadata"]], "\u201cllvm.loop.vectorize.scalable.enable\u201d Metadata": [[579, "llvm-loop-vectorize-scalable-enable-metadata"]], "\u201cllvm.loop.vectorize.width\u201d Metadata": [[579, "llvm-loop-vectorize-width-metadata"]], "\u201cllvm.loop.vectorize\u201d and \u201cllvm.loop.interleave\u201d": [[579, "llvm-loop-vectorize-and-llvm-loop-interleave"]], "\u201cllvm.loop\u201d": [[579, "llvm-loop"]], "\u201cllvm.lrint.*\u201d Intrinsic": [[579, "llvm-lrint-intrinsic"]], "\u201cllvm.lround.*\u201d Intrinsic": [[579, "llvm-lround-intrinsic"]], "\u201cllvm.masked.compressstore.*\u201d Intrinsics": [[579, "llvm-masked-compressstore-intrinsics"]], "\u201cllvm.masked.expandload.*\u201d Intrinsics": [[579, "llvm-masked-expandload-intrinsics"]], "\u201cllvm.masked.gather.*\u201d Intrinsics": [[579, "llvm-masked-gather-intrinsics"]], "\u201cllvm.masked.load.*\u201d Intrinsics": [[579, "llvm-masked-load-intrinsics"]], "\u201cllvm.masked.scatter.*\u201d Intrinsics": [[579, "llvm-masked-scatter-intrinsics"]], "\u201cllvm.masked.store.*\u201d Intrinsics": [[579, "llvm-masked-store-intrinsics"]], "\u201cllvm.matrix.column.major.load.*\u201d Intrinsic": [[579, "llvm-matrix-column-major-load-intrinsic"]], "\u201cllvm.matrix.column.major.store.*\u201d Intrinsic": [[579, "llvm-matrix-column-major-store-intrinsic"]], "\u201cllvm.matrix.multiply.*\u201d Intrinsic": [[579, "llvm-matrix-multiply-intrinsic"]], "\u201cllvm.matrix.transpose.*\u201d Intrinsic": [[579, "llvm-matrix-transpose-intrinsic"]], "\u201cllvm.maximum.*\u201d Intrinsic": [[579, "llvm-maximum-intrinsic"]], "\u201cllvm.maxnum.*\u201d Intrinsic": [[579, "llvm-maxnum-intrinsic"]], "\u201cllvm.memcpy.element.unordered.atomic\u201d Intrinsic": [[579, "llvm-memcpy-element-unordered-atomic-intrinsic"]], "\u201cllvm.memcpy.inline\u201d Intrinsic": [[579, "llvm-memcpy-inline-intrinsic"]], "\u201cllvm.memcpy\u201d Intrinsic": [[579, "llvm-memcpy-intrinsic"]], "\u201cllvm.memmove.element.unordered.atomic\u201d Intrinsic": [[579, "llvm-memmove-element-unordered-atomic-intrinsic"]], "\u201cllvm.memmove\u201d Intrinsic": [[579, "llvm-memmove-intrinsic"]], "\u201cllvm.memset.*\u201d Intrinsics": [[579, "llvm-memset-intrinsics"]], "\u201cllvm.memset.element.unordered.atomic\u201d Intrinsic": [[579, "llvm-memset-element-unordered-atomic-intrinsic"]], "\u201cllvm.minimum.*\u201d Intrinsic": [[579, "llvm-minimum-intrinsic"]], "\u201cllvm.minnum.*\u201d Intrinsic": [[579, "llvm-minnum-intrinsic"]], "\u201cllvm.nearbyint.*\u201d Intrinsic": [[579, "llvm-nearbyint-intrinsic"]], "\u201cllvm.nvvm.barrier0\u201d": [[592, "llvm-nvvm-barrier0"]], "\u201cllvm.nvvm.ptr.*.to.gen\u201d Intrinsics": [[592, "llvm-nvvm-ptr-to-gen-intrinsics"]], "\u201cllvm.nvvm.ptr.gen.to.*\u201d Intrinsics": [[592, "llvm-nvvm-ptr-gen-to-intrinsics"]], "\u201cllvm.nvvm.read.ptx.sreg.*\u201d": [[592, "llvm-nvvm-read-ptx-sreg"]], "\u201cllvm.objc.autoreleasePoolPop\u201d Intrinsic": [[579, "llvm-objc-autoreleasepoolpop-intrinsic"]], "\u201cllvm.objc.autoreleasePoolPush\u201d Intrinsic": [[579, "llvm-objc-autoreleasepoolpush-intrinsic"]], "\u201cllvm.objc.autoreleaseReturnValue\u201d Intrinsic": [[579, "llvm-objc-autoreleasereturnvalue-intrinsic"]], "\u201cllvm.objc.autorelease\u201d Intrinsic": [[579, "llvm-objc-autorelease-intrinsic"]], "\u201cllvm.objc.copyWeak\u201d Intrinsic": [[579, "llvm-objc-copyweak-intrinsic"]], "\u201cllvm.objc.destroyWeak\u201d Intrinsic": [[579, "llvm-objc-destroyweak-intrinsic"]], "\u201cllvm.objc.initWeak\u201d Intrinsic": [[579, "llvm-objc-initweak-intrinsic"]], "\u201cllvm.objc.loadWeakRetained\u201d Intrinsic": [[579, "llvm-objc-loadweakretained-intrinsic"]], "\u201cllvm.objc.loadWeak\u201d Intrinsic": [[579, "llvm-objc-loadweak-intrinsic"]], "\u201cllvm.objc.moveWeak\u201d Intrinsic": [[579, "llvm-objc-moveweak-intrinsic"]], "\u201cllvm.objc.release\u201d Intrinsic": [[579, "llvm-objc-release-intrinsic"]], "\u201cllvm.objc.retainAutoreleaseReturnValue\u201d Intrinsic": [[579, "llvm-objc-retainautoreleasereturnvalue-intrinsic"]], "\u201cllvm.objc.retainAutoreleasedReturnValue\u201d Intrinsic": [[579, "llvm-objc-retainautoreleasedreturnvalue-intrinsic"]], "\u201cllvm.objc.retainAutorelease\u201d Intrinsic": [[579, "llvm-objc-retainautorelease-intrinsic"]], "\u201cllvm.objc.retainBlock\u201d Intrinsic": [[579, "llvm-objc-retainblock-intrinsic"]], "\u201cllvm.objc.retain\u201d Intrinsic": [[579, "llvm-objc-retain-intrinsic"]], "\u201cllvm.objc.storeStrong\u201d Intrinsic": [[579, "llvm-objc-storestrong-intrinsic"]], "\u201cllvm.objc.storeWeak\u201d Intrinsic": [[579, "llvm-objc-storeweak-intrinsic"]], "\u201cllvm.objectsize\u201d Intrinsic": [[579, "llvm-objectsize-intrinsic"]], "\u201cllvm.pcmarker\u201d Intrinsic": [[579, "llvm-pcmarker-intrinsic"]], "\u201cllvm.pow.*\u201d Intrinsic": [[579, "llvm-pow-intrinsic"]], "\u201cllvm.powi.*\u201d Intrinsic": [[579, "llvm-powi-intrinsic"]], "\u201cllvm.prefetch\u201d Intrinsic": [[579, "llvm-prefetch-intrinsic"]], "\u201cllvm.preserve.array.access.index\u201d Intrinsic": [[579, "llvm-preserve-array-access-index-intrinsic"]], "\u201cllvm.preserve.struct.access.index\u201d Intrinsic": [[579, "llvm-preserve-struct-access-index-intrinsic"]], "\u201cllvm.preserve.union.access.index\u201d Intrinsic": [[579, "llvm-preserve-union-access-index-intrinsic"]], "\u201cllvm.ptr.annotation.*\u201d Intrinsic": [[579, "llvm-ptr-annotation-intrinsic"]], "\u201cllvm.ptrmask\u201d Intrinsic": [[579, "llvm-ptrmask-intrinsic"]], "\u201cllvm.readcyclecounter\u201d Intrinsic": [[579, "llvm-readcyclecounter-intrinsic"]], "\u201cllvm.returnaddress\u201d Intrinsic": [[579, "llvm-returnaddress-intrinsic"]], "\u201cllvm.rint.*\u201d Intrinsic": [[579, "llvm-rint-intrinsic"]], "\u201cllvm.round.*\u201d Intrinsic": [[579, "llvm-round-intrinsic"]], "\u201cllvm.roundeven.*\u201d Intrinsic": [[579, "llvm-roundeven-intrinsic"]], "\u201cllvm.sadd.sat.*\u201d Intrinsics": [[579, "llvm-sadd-sat-intrinsics"]], "\u201cllvm.sadd.with.overflow.*\u201d Intrinsics": [[579, "llvm-sadd-with-overflow-intrinsics"]], "\u201cllvm.sdiv.fix.*\u201d Intrinsics": [[579, "llvm-sdiv-fix-intrinsics"]], "\u201cllvm.sdiv.fix.sat.*\u201d Intrinsics": [[579, "llvm-sdiv-fix-sat-intrinsics"]], "\u201cllvm.set.loop.iterations.*\u201d Intrinsic": [[579, "llvm-set-loop-iterations-intrinsic"]], "\u201cllvm.sideeffect\u201d Intrinsic": [[579, "llvm-sideeffect-intrinsic"]], "\u201cllvm.sin.*\u201d Intrinsic": [[579, "llvm-sin-intrinsic"]], "\u201cllvm.smax.*\u201d Intrinsic": [[579, "llvm-smax-intrinsic"]], "\u201cllvm.smin.*\u201d Intrinsic": [[579, "llvm-smin-intrinsic"]], "\u201cllvm.smul.fix.*\u201d Intrinsics": [[579, "llvm-smul-fix-intrinsics"]], "\u201cllvm.smul.fix.sat.*\u201d Intrinsics": [[579, "llvm-smul-fix-sat-intrinsics"]], "\u201cllvm.smul.with.overflow.*\u201d Intrinsics": [[579, "llvm-smul-with-overflow-intrinsics"]], "\u201cllvm.sponentry\u201d Intrinsic": [[579, "llvm-sponentry-intrinsic"]], "\u201cllvm.sqrt.*\u201d Intrinsic": [[579, "llvm-sqrt-intrinsic"]], "\u201cllvm.ssa.copy\u201d Intrinsic": [[579, "llvm-ssa-copy-intrinsic"]], "\u201cllvm.sshl.sat.*\u201d Intrinsics": [[579, "llvm-sshl-sat-intrinsics"]], "\u201cllvm.ssub.sat.*\u201d Intrinsics": [[579, "llvm-ssub-sat-intrinsics"]], "\u201cllvm.ssub.with.overflow.*\u201d Intrinsics": [[579, "llvm-ssub-with-overflow-intrinsics"]], "\u201cllvm.stackguard\u201d Intrinsic": [[579, "llvm-stackguard-intrinsic"]], "\u201cllvm.stackprotector\u201d Intrinsic": [[579, "llvm-stackprotector-intrinsic"]], "\u201cllvm.stackrestore\u201d Intrinsic": [[579, "llvm-stackrestore-intrinsic"]], "\u201cllvm.stacksave\u201d Intrinsic": [[579, "llvm-stacksave-intrinsic"]], "\u201cllvm.start.loop.iterations.*\u201d Intrinsic": [[579, "llvm-start-loop-iterations-intrinsic"]], "\u201cllvm.strip.invariant.group\u201d Intrinsic": [[579, "llvm-strip-invariant-group-intrinsic"]], "\u201cllvm.test.set.loop.iterations.*\u201d Intrinsic": [[579, "llvm-test-set-loop-iterations-intrinsic"]], "\u201cllvm.thread.pointer\u201d Intrinsic": [[579, "llvm-thread-pointer-intrinsic"]], "\u201cllvm.trap\u201d Intrinsic": [[579, "llvm-trap-intrinsic"]], "\u201cllvm.trunc.*\u201d Intrinsic": [[579, "llvm-trunc-intrinsic"]], "\u201cllvm.type.checked.load\u201d Intrinsic": [[579, "llvm-type-checked-load-intrinsic"]], "\u201cllvm.type.test\u201d Intrinsic": [[579, "llvm-type-test-intrinsic"]], "\u201cllvm.uadd.sat.*\u201d Intrinsics": [[579, "llvm-uadd-sat-intrinsics"]], "\u201cllvm.uadd.with.overflow.*\u201d Intrinsics": [[579, "llvm-uadd-with-overflow-intrinsics"]], "\u201cllvm.ubsantrap\u201d Intrinsic": [[579, "llvm-ubsantrap-intrinsic"]], "\u201cllvm.udiv.fix.*\u201d Intrinsics": [[579, "llvm-udiv-fix-intrinsics"]], "\u201cllvm.udiv.fix.sat.*\u201d Intrinsics": [[579, "llvm-udiv-fix-sat-intrinsics"]], "\u201cllvm.umax.*\u201d Intrinsic": [[579, "llvm-umax-intrinsic"]], "\u201cllvm.umin.*\u201d Intrinsic": [[579, "llvm-umin-intrinsic"]], "\u201cllvm.umul.fix.*\u201d Intrinsics": [[579, "llvm-umul-fix-intrinsics"]], "\u201cllvm.umul.fix.sat.*\u201d Intrinsics": [[579, "llvm-umul-fix-sat-intrinsics"]], "\u201cllvm.umul.with.overflow.*\u201d Intrinsics": [[579, "llvm-umul-with-overflow-intrinsics"]], "\u201cllvm.ushl.sat.*\u201d Intrinsics": [[579, "llvm-ushl-sat-intrinsics"]], "\u201cllvm.usub.sat.*\u201d Intrinsics": [[579, "llvm-usub-sat-intrinsics"]], "\u201cllvm.usub.with.overflow.*\u201d Intrinsics": [[579, "llvm-usub-with-overflow-intrinsics"]], "\u201cllvm.va_copy\u201d Intrinsic": [[579, "llvm-va-copy-intrinsic"]], "\u201cllvm.va_end\u201d Intrinsic": [[579, "llvm-va-end-intrinsic"]], "\u201cllvm.va_start\u201d Intrinsic": [[579, "llvm-va-start-intrinsic"]], "\u201cllvm.var.annotation\u201d Intrinsic": [[579, "llvm-var-annotation-intrinsic"]], "\u201cllvm.vector.reduce.add.*\u201d Intrinsic": [[579, "llvm-vector-reduce-add-intrinsic"]], "\u201cllvm.vector.reduce.and.*\u201d Intrinsic": [[579, "llvm-vector-reduce-and-intrinsic"]], "\u201cllvm.vector.reduce.fadd.*\u201d Intrinsic": [[579, "llvm-vector-reduce-fadd-intrinsic"]], "\u201cllvm.vector.reduce.fmax.*\u201d Intrinsic": [[579, "llvm-vector-reduce-fmax-intrinsic"]], "\u201cllvm.vector.reduce.fmin.*\u201d Intrinsic": [[579, "llvm-vector-reduce-fmin-intrinsic"]], "\u201cllvm.vector.reduce.fmul.*\u201d Intrinsic": [[579, "llvm-vector-reduce-fmul-intrinsic"]], "\u201cllvm.vector.reduce.mul.*\u201d Intrinsic": [[579, "llvm-vector-reduce-mul-intrinsic"]], "\u201cllvm.vector.reduce.or.*\u201d Intrinsic": [[579, "llvm-vector-reduce-or-intrinsic"]], "\u201cllvm.vector.reduce.smax.*\u201d Intrinsic": [[579, "llvm-vector-reduce-smax-intrinsic"]], "\u201cllvm.vector.reduce.smin.*\u201d Intrinsic": [[579, "llvm-vector-reduce-smin-intrinsic"]], "\u201cllvm.vector.reduce.umax.*\u201d Intrinsic": [[579, "llvm-vector-reduce-umax-intrinsic"]], "\u201cllvm.vector.reduce.umin.*\u201d Intrinsic": [[579, "llvm-vector-reduce-umin-intrinsic"]], "\u201cllvm.vector.reduce.xor.*\u201d Intrinsic": [[579, "llvm-vector-reduce-xor-intrinsic"]], "\u201cllvm.vp.add.*\u201d Intrinsics": [[579, "llvm-vp-add-intrinsics"]], "\u201cllvm.vp.and.*\u201d Intrinsics": [[579, "llvm-vp-and-intrinsics"]], "\u201cllvm.vp.ashr.*\u201d Intrinsics": [[579, "llvm-vp-ashr-intrinsics"]], "\u201cllvm.vp.lshr.*\u201d Intrinsics": [[579, "llvm-vp-lshr-intrinsics"]], "\u201cllvm.vp.mul.*\u201d Intrinsics": [[579, "llvm-vp-mul-intrinsics"]], "\u201cllvm.vp.or.*\u201d Intrinsics": [[579, "llvm-vp-or-intrinsics"]], "\u201cllvm.vp.sdiv.*\u201d Intrinsics": [[579, "llvm-vp-sdiv-intrinsics"]], "\u201cllvm.vp.shl.*\u201d Intrinsics": [[579, "llvm-vp-shl-intrinsics"]], "\u201cllvm.vp.srem.*\u201d Intrinsics": [[579, "llvm-vp-srem-intrinsics"]], "\u201cllvm.vp.sub.*\u201d Intrinsics": [[579, "llvm-vp-sub-intrinsics"]], "\u201cllvm.vp.udiv.*\u201d Intrinsics": [[579, "llvm-vp-udiv-intrinsics"]], "\u201cllvm.vp.urem.*\u201d Intrinsics": [[579, "llvm-vp-urem-intrinsics"]], "\u201cllvm.vp.xor.*\u201d Intrinsics": [[579, "llvm-vp-xor-intrinsics"]], "\u201cllvm.vscale\u201d Intrinsic": [[579, "llvm-vscale-intrinsic"]], "\u201cload\u201d Instruction": [[579, "load-instruction"]], "\u201clshr\u201d Instruction": [[579, "lshr-instruction"]], "\u201cmul\u201d Instruction": [[579, "mul-instruction"]], "\u201cnoalias\u201d and \u201calias.scope\u201d Metadata": [[579, "noalias-and-alias-scope-metadata"]], "\u201cor\u201d Instruction": [[579, "or-instruction"]], "\u201cphi\u201d Instruction": [[579, "phi-instruction"]], "\u201cprof\u201d Metadata": [[579, "prof-metadata"]], "\u201cptrtoint .. to\u201d Instruction": [[579, "ptrtoint-to-instruction"]], "\u201crange\u201d Metadata": [[579, "range-metadata"]], "\u201cresume\u201d Instruction": [[579, "resume-instruction"]], "\u201cret\u201d Instruction": [[579, "ret-instruction"]], "\u201csdiv\u201d Instruction": [[579, "sdiv-instruction"]], "\u201cselect\u201d Instruction": [[579, "select-instruction"]], "\u201csext .. to\u201d Instruction": [[579, "sext-to-instruction"]], "\u201cshl\u201d Instruction": [[579, "shl-instruction"]], "\u201cshufflevector\u201d Instruction": [[579, "shufflevector-instruction"]], "\u201csitofp .. to\u201d Instruction": [[579, "sitofp-to-instruction"]], "\u201csrem\u201d Instruction": [[579, "srem-instruction"]], "\u201cstore\u201d Instruction": [[579, "store-instruction"]], "\u201csub\u201d Instruction": [[579, "sub-instruction"]], "\u201cswitch\u201d Instruction": [[579, "switch-instruction"]], "\u201ctbaa.struct\u201d Metadata": [[579, "tbaa-struct-metadata"]], "\u201ctbaa\u201d Metadata": [[579, "tbaa-metadata"]], "\u201ctrunc .. to\u201d Instruction": [[579, "trunc-to-instruction"]], "\u201ctype\u201d Metadata": [[579, "type-metadata"]], "\u201cudiv\u201d Instruction": [[579, "udiv-instruction"]], "\u201cuitofp .. to\u201d Instruction": [[579, "uitofp-to-instruction"]], "\u201cunpredictable\u201d Metadata": [[579, "unpredictable-metadata"]], "\u201cunreachable\u201d Instruction": [[579, "unreachable-instruction"]], "\u201curem\u201d Instruction": [[579, "urem-instruction"]], "\u201cva_arg\u201d Instruction": [[579, "va-arg-instruction"]], "\u201cxor\u201d Instruction": [[579, "xor-instruction"]], "\u201czext .. to\u201d Instruction": [[579, "zext-to-instruction"]]}, "docnames": ["AMDGPU/AMDGPUAsmGFX10", "AMDGPU/AMDGPUAsmGFX1011", "AMDGPU/AMDGPUAsmGFX7", "AMDGPU/AMDGPUAsmGFX8", "AMDGPU/AMDGPUAsmGFX9", "AMDGPU/AMDGPUAsmGFX900", "AMDGPU/AMDGPUAsmGFX904", "AMDGPU/AMDGPUAsmGFX906", "AMDGPU/AMDGPUAsmGFX908", "AMDGPU/gfx1011_src32_0", "AMDGPU/gfx1011_src32_1", "AMDGPU/gfx1011_src32_2", "AMDGPU/gfx1011_src32_3", "AMDGPU/gfx1011_type_dev", "AMDGPU/gfx1011_vdst32_0", "AMDGPU/gfx1011_vsrc32_0", "AMDGPU/gfx10_addr_buf", "AMDGPU/gfx10_addr_ds", "AMDGPU/gfx10_addr_flat", "AMDGPU/gfx10_addr_mimg", "AMDGPU/gfx10_attr", "AMDGPU/gfx10_base_smem_addr", "AMDGPU/gfx10_base_smem_buf", "AMDGPU/gfx10_base_smem_scratch", "AMDGPU/gfx10_bimm16", "AMDGPU/gfx10_bimm32", "AMDGPU/gfx10_data_buf_atomic128", "AMDGPU/gfx10_data_buf_atomic32", "AMDGPU/gfx10_data_buf_atomic64", "AMDGPU/gfx10_data_mimg_atomic_cmp", "AMDGPU/gfx10_data_mimg_atomic_reg", "AMDGPU/gfx10_data_mimg_store", "AMDGPU/gfx10_data_mimg_store_d16", "AMDGPU/gfx10_data_smem_atomic128", "AMDGPU/gfx10_data_smem_atomic32", "AMDGPU/gfx10_data_smem_atomic64", "AMDGPU/gfx10_dst_buf_128", "AMDGPU/gfx10_dst_buf_32", "AMDGPU/gfx10_dst_buf_64", "AMDGPU/gfx10_dst_buf_96", "AMDGPU/gfx10_dst_buf_lds", "AMDGPU/gfx10_dst_flat_atomic32", "AMDGPU/gfx10_dst_flat_atomic64", "AMDGPU/gfx10_dst_mimg_gather4", "AMDGPU/gfx10_dst_mimg_regular", "AMDGPU/gfx10_dst_mimg_regular_d16", "AMDGPU/gfx10_fimm16", "AMDGPU/gfx10_fimm32", "AMDGPU/gfx10_hwreg", "AMDGPU/gfx10_label", "AMDGPU/gfx10_mad_type_dev", "AMDGPU/gfx10_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx10_mod_sdwa_sext", "AMDGPU/gfx10_mod_vop3_abs_neg", "AMDGPU/gfx10_msg", "AMDGPU/gfx10_offset_buf", "AMDGPU/gfx10_offset_smem_buf", "AMDGPU/gfx10_offset_smem_plain", "AMDGPU/gfx10_opt", "AMDGPU/gfx10_param", "AMDGPU/gfx10_perm_smem", "AMDGPU/gfx10_ret", "AMDGPU/gfx10_rsrc_buf", "AMDGPU/gfx10_rsrc_mimg", "AMDGPU/gfx10_saddr_flat_global", "AMDGPU/gfx10_saddr_flat_scratch", "AMDGPU/gfx10_samp_mimg", "AMDGPU/gfx10_sdata128_0", "AMDGPU/gfx10_sdata32_0", "AMDGPU/gfx10_sdata64_0", "AMDGPU/gfx10_sdst128_0", "AMDGPU/gfx10_sdst256_0", "AMDGPU/gfx10_sdst32_0", "AMDGPU/gfx10_sdst32_1", "AMDGPU/gfx10_sdst32_2", "AMDGPU/gfx10_sdst512_0", "AMDGPU/gfx10_sdst64_0", "AMDGPU/gfx10_sdst64_1", "AMDGPU/gfx10_simm16", "AMDGPU/gfx10_src32_0", "AMDGPU/gfx10_src32_1", "AMDGPU/gfx10_src32_2", "AMDGPU/gfx10_src32_3", "AMDGPU/gfx10_src32_4", "AMDGPU/gfx10_src32_5", "AMDGPU/gfx10_src32_6", "AMDGPU/gfx10_src64_0", "AMDGPU/gfx10_src_exp", "AMDGPU/gfx10_ssrc32_0", "AMDGPU/gfx10_ssrc32_1", "AMDGPU/gfx10_ssrc32_2", "AMDGPU/gfx10_ssrc32_3", "AMDGPU/gfx10_ssrc32_4", "AMDGPU/gfx10_ssrc32_5", "AMDGPU/gfx10_ssrc64_0", "AMDGPU/gfx10_ssrc64_1", "AMDGPU/gfx10_tgt", "AMDGPU/gfx10_type_dev", "AMDGPU/gfx10_uimm16", "AMDGPU/gfx10_vaddr_flat_global", "AMDGPU/gfx10_vaddr_flat_scratch", "AMDGPU/gfx10_vcc_32", "AMDGPU/gfx10_vdata128_0", "AMDGPU/gfx10_vdata32_0", "AMDGPU/gfx10_vdata64_0", "AMDGPU/gfx10_vdata96_0", "AMDGPU/gfx10_vdst128_0", "AMDGPU/gfx10_vdst32_0", "AMDGPU/gfx10_vdst64_0", "AMDGPU/gfx10_vdst96_0", "AMDGPU/gfx10_vsrc128_0", "AMDGPU/gfx10_vsrc32_0", "AMDGPU/gfx10_vsrc32_1", "AMDGPU/gfx10_vsrc64_0", "AMDGPU/gfx10_waitcnt", "AMDGPU/gfx10_wsdst", "AMDGPU/gfx10_wssrc", "AMDGPU/gfx7_addr_buf", "AMDGPU/gfx7_addr_ds", "AMDGPU/gfx7_addr_flat", "AMDGPU/gfx7_addr_mimg", "AMDGPU/gfx7_attr", "AMDGPU/gfx7_base_smem_addr", "AMDGPU/gfx7_base_smem_buf", "AMDGPU/gfx7_bimm16", "AMDGPU/gfx7_bimm32", "AMDGPU/gfx7_data_buf_atomic128", "AMDGPU/gfx7_data_buf_atomic32", "AMDGPU/gfx7_data_buf_atomic64", "AMDGPU/gfx7_data_mimg_atomic_cmp", "AMDGPU/gfx7_data_mimg_atomic_reg", "AMDGPU/gfx7_data_mimg_store", "AMDGPU/gfx7_dst_buf_128", "AMDGPU/gfx7_dst_buf_32", "AMDGPU/gfx7_dst_buf_64", "AMDGPU/gfx7_dst_buf_96", "AMDGPU/gfx7_dst_buf_lds", "AMDGPU/gfx7_dst_flat_atomic32", "AMDGPU/gfx7_dst_flat_atomic64", "AMDGPU/gfx7_dst_mimg_gather4", "AMDGPU/gfx7_dst_mimg_regular", "AMDGPU/gfx7_fimm32", "AMDGPU/gfx7_hwreg", "AMDGPU/gfx7_label", "AMDGPU/gfx7_mod", "AMDGPU/gfx7_msg", "AMDGPU/gfx7_offset_buf", "AMDGPU/gfx7_offset_smem", "AMDGPU/gfx7_opt", "AMDGPU/gfx7_param", "AMDGPU/gfx7_ret", "AMDGPU/gfx7_rsrc_buf", "AMDGPU/gfx7_rsrc_mimg", "AMDGPU/gfx7_samp_mimg", "AMDGPU/gfx7_sdst128_0", "AMDGPU/gfx7_sdst256_0", "AMDGPU/gfx7_sdst32_0", "AMDGPU/gfx7_sdst32_1", "AMDGPU/gfx7_sdst32_2", "AMDGPU/gfx7_sdst512_0", "AMDGPU/gfx7_sdst64_0", "AMDGPU/gfx7_sdst64_1", "AMDGPU/gfx7_simm16", "AMDGPU/gfx7_src32_0", "AMDGPU/gfx7_src32_1", "AMDGPU/gfx7_src32_2", "AMDGPU/gfx7_src32_3", "AMDGPU/gfx7_src32_4", "AMDGPU/gfx7_src32_5", "AMDGPU/gfx7_src32_6", "AMDGPU/gfx7_src64_0", "AMDGPU/gfx7_src64_1", "AMDGPU/gfx7_src64_2", "AMDGPU/gfx7_src_exp", "AMDGPU/gfx7_ssrc32_0", "AMDGPU/gfx7_ssrc32_1", "AMDGPU/gfx7_ssrc32_2", "AMDGPU/gfx7_ssrc32_3", "AMDGPU/gfx7_ssrc32_4", "AMDGPU/gfx7_ssrc32_5", "AMDGPU/gfx7_ssrc32_6", "AMDGPU/gfx7_ssrc64_0", "AMDGPU/gfx7_ssrc64_1", "AMDGPU/gfx7_ssrc64_2", "AMDGPU/gfx7_ssrc64_3", "AMDGPU/gfx7_tgt", "AMDGPU/gfx7_type_dev", "AMDGPU/gfx7_uimm16", "AMDGPU/gfx7_vcc_64", "AMDGPU/gfx7_vdata128_0", "AMDGPU/gfx7_vdata32_0", "AMDGPU/gfx7_vdata64_0", "AMDGPU/gfx7_vdata96_0", "AMDGPU/gfx7_vdst128_0", "AMDGPU/gfx7_vdst32_0", "AMDGPU/gfx7_vdst64_0", "AMDGPU/gfx7_vdst96_0", "AMDGPU/gfx7_vsrc128_0", "AMDGPU/gfx7_vsrc32_0", "AMDGPU/gfx7_vsrc32_1", "AMDGPU/gfx7_vsrc64_0", "AMDGPU/gfx7_waitcnt", "AMDGPU/gfx8_addr_buf", "AMDGPU/gfx8_addr_ds", "AMDGPU/gfx8_addr_flat", "AMDGPU/gfx8_addr_mimg", "AMDGPU/gfx8_attr", "AMDGPU/gfx8_base_smem_addr", "AMDGPU/gfx8_base_smem_buf", "AMDGPU/gfx8_bimm16", "AMDGPU/gfx8_bimm32", "AMDGPU/gfx8_data_buf_atomic128", "AMDGPU/gfx8_data_buf_atomic32", "AMDGPU/gfx8_data_buf_atomic64", "AMDGPU/gfx8_data_buf_d16_128", "AMDGPU/gfx8_data_buf_d16_32", "AMDGPU/gfx8_data_buf_d16_64", "AMDGPU/gfx8_data_buf_d16_96", "AMDGPU/gfx8_data_mimg_atomic_cmp", "AMDGPU/gfx8_data_mimg_atomic_reg", "AMDGPU/gfx8_data_mimg_store", "AMDGPU/gfx8_data_mimg_store_d16", "AMDGPU/gfx8_dst_buf_128", "AMDGPU/gfx8_dst_buf_32", "AMDGPU/gfx8_dst_buf_64", "AMDGPU/gfx8_dst_buf_96", "AMDGPU/gfx8_dst_buf_d16_128", "AMDGPU/gfx8_dst_buf_d16_32", "AMDGPU/gfx8_dst_buf_d16_64", "AMDGPU/gfx8_dst_buf_d16_96", "AMDGPU/gfx8_dst_buf_lds", "AMDGPU/gfx8_dst_flat_atomic32", "AMDGPU/gfx8_dst_flat_atomic64", "AMDGPU/gfx8_dst_mimg_gather4", "AMDGPU/gfx8_dst_mimg_regular", "AMDGPU/gfx8_dst_mimg_regular_d16", "AMDGPU/gfx8_fimm16", "AMDGPU/gfx8_fimm32", "AMDGPU/gfx8_hwreg", "AMDGPU/gfx8_imask", "AMDGPU/gfx8_label", "AMDGPU/gfx8_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx8_mod_sdwa_sext", "AMDGPU/gfx8_mod_vop3_abs_neg", "AMDGPU/gfx8_msg", "AMDGPU/gfx8_offset_buf", "AMDGPU/gfx8_offset_smem_load", "AMDGPU/gfx8_offset_smem_store", "AMDGPU/gfx8_opt", "AMDGPU/gfx8_param", "AMDGPU/gfx8_perm_smem", "AMDGPU/gfx8_ret", "AMDGPU/gfx8_rsrc_buf", "AMDGPU/gfx8_rsrc_mimg", "AMDGPU/gfx8_samp_mimg", "AMDGPU/gfx8_sdata128_0", "AMDGPU/gfx8_sdata32_0", "AMDGPU/gfx8_sdata64_0", "AMDGPU/gfx8_sdst128_0", "AMDGPU/gfx8_sdst256_0", "AMDGPU/gfx8_sdst32_0", "AMDGPU/gfx8_sdst32_1", "AMDGPU/gfx8_sdst32_2", "AMDGPU/gfx8_sdst512_0", "AMDGPU/gfx8_sdst64_0", "AMDGPU/gfx8_sdst64_1", "AMDGPU/gfx8_simm16", "AMDGPU/gfx8_src32_0", "AMDGPU/gfx8_src32_1", "AMDGPU/gfx8_src32_2", "AMDGPU/gfx8_src32_3", "AMDGPU/gfx8_src32_4", "AMDGPU/gfx8_src32_5", "AMDGPU/gfx8_src32_6", "AMDGPU/gfx8_src32_7", "AMDGPU/gfx8_src64_0", "AMDGPU/gfx8_src64_1", "AMDGPU/gfx8_src_exp", "AMDGPU/gfx8_ssrc32_0", "AMDGPU/gfx8_ssrc32_1", "AMDGPU/gfx8_ssrc32_2", "AMDGPU/gfx8_ssrc32_3", "AMDGPU/gfx8_ssrc32_4", "AMDGPU/gfx8_ssrc64_0", "AMDGPU/gfx8_ssrc64_1", "AMDGPU/gfx8_ssrc64_2", "AMDGPU/gfx8_ssrc64_3", "AMDGPU/gfx8_tgt", "AMDGPU/gfx8_type_dev", "AMDGPU/gfx8_uimm16", "AMDGPU/gfx8_vcc_64", "AMDGPU/gfx8_vdata128_0", "AMDGPU/gfx8_vdata32_0", "AMDGPU/gfx8_vdata64_0", "AMDGPU/gfx8_vdata96_0", "AMDGPU/gfx8_vdst128_0", "AMDGPU/gfx8_vdst32_0", "AMDGPU/gfx8_vdst64_0", "AMDGPU/gfx8_vdst96_0", "AMDGPU/gfx8_vsrc128_0", "AMDGPU/gfx8_vsrc32_0", "AMDGPU/gfx8_vsrc32_1", "AMDGPU/gfx8_vsrc64_0", "AMDGPU/gfx8_waitcnt", "AMDGPU/gfx900_mad_type_dev", "AMDGPU/gfx900_mod_vop3_abs_neg", "AMDGPU/gfx900_src32_0", "AMDGPU/gfx900_src32_1", "AMDGPU/gfx900_vdst32_0", "AMDGPU/gfx904_mad_type_dev", "AMDGPU/gfx904_mod_vop3_abs_neg", "AMDGPU/gfx904_src32_0", "AMDGPU/gfx904_src32_1", "AMDGPU/gfx904_vdst32_0", "AMDGPU/gfx906_mad_type_dev", "AMDGPU/gfx906_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx906_mod_sdwa_sext", "AMDGPU/gfx906_mod_vop3_abs_neg", "AMDGPU/gfx906_src32_0", "AMDGPU/gfx906_src32_1", "AMDGPU/gfx906_src32_2", "AMDGPU/gfx906_src32_3", "AMDGPU/gfx906_src32_4", "AMDGPU/gfx906_type_dev", "AMDGPU/gfx906_vdst32_0", "AMDGPU/gfx906_vsrc32_0", "AMDGPU/gfx908_addr_buf", "AMDGPU/gfx908_adst1024_0", "AMDGPU/gfx908_adst128_0", "AMDGPU/gfx908_adst32_0", "AMDGPU/gfx908_adst512_0", "AMDGPU/gfx908_asrc1024_0", "AMDGPU/gfx908_asrc128_0", "AMDGPU/gfx908_asrc32_0", "AMDGPU/gfx908_asrc512_0", "AMDGPU/gfx908_data_buf_atomic32", "AMDGPU/gfx908_dst_flat_atomic32", "AMDGPU/gfx908_mad_type_dev", "AMDGPU/gfx908_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx908_mod_sdwa_sext", "AMDGPU/gfx908_mod_vop3_abs_neg", "AMDGPU/gfx908_offset_buf", "AMDGPU/gfx908_opt", "AMDGPU/gfx908_ret", "AMDGPU/gfx908_rsrc_buf", "AMDGPU/gfx908_saddr_flat_global", "AMDGPU/gfx908_src32_0", "AMDGPU/gfx908_src32_1", "AMDGPU/gfx908_src32_2", "AMDGPU/gfx908_src32_3", "AMDGPU/gfx908_src32_4", "AMDGPU/gfx908_src32_5", "AMDGPU/gfx908_type_dev", "AMDGPU/gfx908_vaddr_flat_global", "AMDGPU/gfx908_vasrc32_0", "AMDGPU/gfx908_vasrc64_0", "AMDGPU/gfx908_vdata32_0", "AMDGPU/gfx908_vdst32_0", "AMDGPU/gfx908_vsrc32_0", "AMDGPU/gfx9_addr_buf", "AMDGPU/gfx9_addr_ds", "AMDGPU/gfx9_addr_flat", "AMDGPU/gfx9_addr_mimg", "AMDGPU/gfx9_attr", "AMDGPU/gfx9_base_smem_addr", "AMDGPU/gfx9_base_smem_buf", "AMDGPU/gfx9_base_smem_scratch", "AMDGPU/gfx9_bimm16", "AMDGPU/gfx9_bimm32", "AMDGPU/gfx9_data_buf_atomic128", "AMDGPU/gfx9_data_buf_atomic32", "AMDGPU/gfx9_data_buf_atomic64", "AMDGPU/gfx9_data_mimg_atomic_cmp", "AMDGPU/gfx9_data_mimg_atomic_reg", "AMDGPU/gfx9_data_mimg_store", "AMDGPU/gfx9_data_mimg_store_d16", "AMDGPU/gfx9_data_smem_atomic128", "AMDGPU/gfx9_data_smem_atomic32", "AMDGPU/gfx9_data_smem_atomic64", "AMDGPU/gfx9_dst_buf_128", "AMDGPU/gfx9_dst_buf_32", "AMDGPU/gfx9_dst_buf_64", "AMDGPU/gfx9_dst_buf_96", "AMDGPU/gfx9_dst_buf_lds", "AMDGPU/gfx9_dst_flat_atomic32", "AMDGPU/gfx9_dst_flat_atomic64", "AMDGPU/gfx9_dst_mimg_gather4", "AMDGPU/gfx9_dst_mimg_regular", "AMDGPU/gfx9_dst_mimg_regular_d16", "AMDGPU/gfx9_fimm16", "AMDGPU/gfx9_fimm32", "AMDGPU/gfx9_hwreg", "AMDGPU/gfx9_imask", "AMDGPU/gfx9_label", "AMDGPU/gfx9_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx9_mod_sdwa_sext", "AMDGPU/gfx9_mod_vop3_abs_neg", "AMDGPU/gfx9_msg", "AMDGPU/gfx9_offset_buf", "AMDGPU/gfx9_offset_smem_buf", "AMDGPU/gfx9_offset_smem_plain", "AMDGPU/gfx9_opt", "AMDGPU/gfx9_param", "AMDGPU/gfx9_perm_smem", "AMDGPU/gfx9_ret", "AMDGPU/gfx9_rsrc_buf", "AMDGPU/gfx9_rsrc_mimg", "AMDGPU/gfx9_saddr_flat_global", "AMDGPU/gfx9_saddr_flat_scratch", "AMDGPU/gfx9_samp_mimg", "AMDGPU/gfx9_sdata128_0", "AMDGPU/gfx9_sdata32_0", "AMDGPU/gfx9_sdata64_0", "AMDGPU/gfx9_sdst128_0", "AMDGPU/gfx9_sdst256_0", "AMDGPU/gfx9_sdst32_0", "AMDGPU/gfx9_sdst32_1", "AMDGPU/gfx9_sdst32_2", "AMDGPU/gfx9_sdst512_0", "AMDGPU/gfx9_sdst64_0", "AMDGPU/gfx9_sdst64_1", "AMDGPU/gfx9_simm16", "AMDGPU/gfx9_src32_0", "AMDGPU/gfx9_src32_1", "AMDGPU/gfx9_src32_2", "AMDGPU/gfx9_src32_3", "AMDGPU/gfx9_src32_4", "AMDGPU/gfx9_src32_5", "AMDGPU/gfx9_src32_6", "AMDGPU/gfx9_src32_7", "AMDGPU/gfx9_src64_0", "AMDGPU/gfx9_src64_1", "AMDGPU/gfx9_src_exp", "AMDGPU/gfx9_ssrc32_0", "AMDGPU/gfx9_ssrc32_1", "AMDGPU/gfx9_ssrc32_2", "AMDGPU/gfx9_ssrc32_3", "AMDGPU/gfx9_ssrc32_4", "AMDGPU/gfx9_ssrc64_0", "AMDGPU/gfx9_ssrc64_1", "AMDGPU/gfx9_ssrc64_2", "AMDGPU/gfx9_ssrc64_3", "AMDGPU/gfx9_tgt", "AMDGPU/gfx9_type_dev", "AMDGPU/gfx9_uimm16", "AMDGPU/gfx9_vaddr_flat_global", "AMDGPU/gfx9_vaddr_flat_scratch", "AMDGPU/gfx9_vcc_64", "AMDGPU/gfx9_vdata128_0", "AMDGPU/gfx9_vdata32_0", "AMDGPU/gfx9_vdata64_0", "AMDGPU/gfx9_vdata96_0", "AMDGPU/gfx9_vdst128_0", "AMDGPU/gfx9_vdst32_0", "AMDGPU/gfx9_vdst64_0", "AMDGPU/gfx9_vdst96_0", "AMDGPU/gfx9_vsrc128_0", "AMDGPU/gfx9_vsrc32_0", "AMDGPU/gfx9_vsrc32_1", "AMDGPU/gfx9_vsrc64_0", "AMDGPU/gfx9_waitcnt", "AMDGPUDwarfExtensionsForHeterogeneousDebugging", "AMDGPUInstructionNotation", "AMDGPUInstructionSyntax", "AMDGPUModifierSyntax", "AMDGPUOperandSyntax", "AMDGPUUsage", "AddingConstrainedIntrinsics", "AdvancedBuilds", "AliasAnalysis", "Atomics", "Benchmarking", "BigEndianNEON", "BitCodeFormat", "BlockFrequencyTerminology", "BranchWeightMetadata", "BugLifeCycle", "Bugpoint", "BugpointRedesign", "BuildingADistribution", "CFIVerify", "CMake", "CMakePrimer", "CodeGenerator", "CodeOfConduct", "CodeReview", "CodingStandards", "CommandGuide/FileCheck", "CommandGuide/bugpoint", "CommandGuide/dsymutil", "CommandGuide/index", "CommandGuide/lit", "CommandGuide/llc", "CommandGuide/lli", "CommandGuide/llvm-addr2line", "CommandGuide/llvm-ar", "CommandGuide/llvm-as", "CommandGuide/llvm-bcanalyzer", "CommandGuide/llvm-config", "CommandGuide/llvm-cov", "CommandGuide/llvm-cxxfilt", "CommandGuide/llvm-cxxmap", "CommandGuide/llvm-diff", "CommandGuide/llvm-dis", "CommandGuide/llvm-dwarfdump", "CommandGuide/llvm-exegesis", "CommandGuide/llvm-extract", "CommandGuide/llvm-install-name-tool", "CommandGuide/llvm-lib", "CommandGuide/llvm-libtool-darwin", "CommandGuide/llvm-link", "CommandGuide/llvm-lipo", "CommandGuide/llvm-locstats", "CommandGuide/llvm-mca", "CommandGuide/llvm-nm", "CommandGuide/llvm-objcopy", "CommandGuide/llvm-objdump", "CommandGuide/llvm-pdbutil", "CommandGuide/llvm-profdata", "CommandGuide/llvm-profgen", "CommandGuide/llvm-ranlib", "CommandGuide/llvm-readelf", "CommandGuide/llvm-readobj", "CommandGuide/llvm-size", "CommandGuide/llvm-stress", "CommandGuide/llvm-strings", "CommandGuide/llvm-strip", "CommandGuide/llvm-symbolizer", "CommandGuide/opt", "CommandGuide/tblgen", "CommandLine", "CompileCudaWithLLVM", "CompilerWriterInfo", "Contributing", "Coroutines", "CoverageMappingFormat", "DebuggingJITedCode", "DependenceGraphs/index", "DeveloperPolicy", "Docker", "ExceptionHandling", "ExtendingLLVM", "Extensions", "FAQ", "FaultMaps", "Frontend/PerformanceTips", "FuzzingLLVM", "GarbageCollection", "GetElementPtr", "GettingInvolved", "GettingStarted", "GettingStartedTutorials", "GettingStartedVS", "GitBisecting", "GlobalISel/GMIR", "GlobalISel/GenericOpcode", "GlobalISel/IRTranslator", "GlobalISel/InstructionSelect", "GlobalISel/KnownBits", "GlobalISel/Legalizer", "GlobalISel/Pipeline", "GlobalISel/Porting", "GlobalISel/RegBankSelect", "GlobalISel/Resources", "GlobalISel/index", "GoldPlugin", "GwpAsan", "HowToAddABuilder", "HowToBuildOnARM", "HowToBuildWithPGO", "HowToCrossCompileBuiltinsOnArm", "HowToCrossCompileLLVM", "HowToReleaseLLVM", "HowToSetUpLLVMStyleRTTI", "HowToSubmitABug", "HowToUpdateDebugInfo", "HowToUseAttributes", "HowToUseInstrMappings", "InAlloca", "LangRef", "Lexicon", "LibFuzzer", "LinkTimeOptimization", "LoopTerminology", "MCJITDesignAndImplementation", "MIRLangRef", "MarkdownQuickstartTemplate", "MarkedUpDisassembly", "MeetupGuidelines", "MemTagSanitizer", "MemorySSA", "MergeFunctions", "NVPTXUsage", "ORCv2", "OptBisect", "PDB/CodeViewSymbols", "PDB/CodeViewTypes", "PDB/DbiStream", "PDB/GlobalStream", "PDB/HashTable", "PDB/ModiStream", "PDB/MsfFile", "PDB/PdbStream", "PDB/PublicStream", "PDB/TpiStream", "PDB/index", "Packaging", "Passes", "Phabricator", "ProgrammersManual", "Projects", "Proposals/GitHubMove", "Proposals/LLVMLibC", "Proposals/TestSuite", "Proposals/VariableNames", "Proposals/VectorPredication", "Proposals/VectorizationPlan", "Reference", "ReleaseNotes", "ReleaseProcess", "Remarks", "ReportingGuide", "ScudoHardenedAllocator", "Security", "SegmentedStacks", "SourceLevelDebugging", "SpeculativeLoadHardening", "SphinxQuickstartTemplate", "StackMaps", "StackSafetyAnalysis", "Statepoints", "SupportLibrary", "SupportPolicy", "SystemLibrary", "TableGen/BackEnds", "TableGen/BackGuide", "TableGen/ProgRef", "TableGen/index", "TableGenFundamentals", "TestSuiteGuide", "TestSuiteMakefileGuide", "TestingGuide", "TransformMetadata", "TypeMetadata", "UserGuides", "Vectorizers", "WritingAnLLVMBackend", "WritingAnLLVMNewPMPass", "WritingAnLLVMPass", "XRay", "XRayExample", "XRayFDRFormat", "YamlIO", "index", "tutorial/BuildingAJIT1", "tutorial/BuildingAJIT2", "tutorial/BuildingAJIT3", "tutorial/BuildingAJIT4", "tutorial/LangImpl01", "tutorial/LangImpl02", "tutorial/LangImpl03", "tutorial/LangImpl04", "tutorial/LangImpl05", "tutorial/LangImpl06", "tutorial/LangImpl07", "tutorial/LangImpl08", "tutorial/LangImpl09", "tutorial/LangImpl10", "tutorial/MyFirstLanguageFrontend/LangImpl01", "tutorial/MyFirstLanguageFrontend/LangImpl02", "tutorial/MyFirstLanguageFrontend/LangImpl03", "tutorial/MyFirstLanguageFrontend/LangImpl04", "tutorial/MyFirstLanguageFrontend/LangImpl05", "tutorial/MyFirstLanguageFrontend/LangImpl06", "tutorial/MyFirstLanguageFrontend/LangImpl07", "tutorial/MyFirstLanguageFrontend/LangImpl08", "tutorial/MyFirstLanguageFrontend/LangImpl09", "tutorial/MyFirstLanguageFrontend/LangImpl10", "tutorial/MyFirstLanguageFrontend/index", "tutorial/OCamlLangImpl1", "tutorial/OCamlLangImpl2", "tutorial/OCamlLangImpl3", "tutorial/OCamlLangImpl4", "tutorial/OCamlLangImpl5", "tutorial/OCamlLangImpl6", "tutorial/OCamlLangImpl7", "tutorial/OCamlLangImpl8", "tutorial/index", "yaml2obj"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["AMDGPU/AMDGPUAsmGFX10.rst", "AMDGPU/AMDGPUAsmGFX1011.rst", "AMDGPU/AMDGPUAsmGFX7.rst", "AMDGPU/AMDGPUAsmGFX8.rst", "AMDGPU/AMDGPUAsmGFX9.rst", "AMDGPU/AMDGPUAsmGFX900.rst", "AMDGPU/AMDGPUAsmGFX904.rst", "AMDGPU/AMDGPUAsmGFX906.rst", "AMDGPU/AMDGPUAsmGFX908.rst", "AMDGPU/gfx1011_src32_0.rst", "AMDGPU/gfx1011_src32_1.rst", "AMDGPU/gfx1011_src32_2.rst", "AMDGPU/gfx1011_src32_3.rst", "AMDGPU/gfx1011_type_dev.rst", "AMDGPU/gfx1011_vdst32_0.rst", "AMDGPU/gfx1011_vsrc32_0.rst", "AMDGPU/gfx10_addr_buf.rst", "AMDGPU/gfx10_addr_ds.rst", "AMDGPU/gfx10_addr_flat.rst", "AMDGPU/gfx10_addr_mimg.rst", "AMDGPU/gfx10_attr.rst", "AMDGPU/gfx10_base_smem_addr.rst", "AMDGPU/gfx10_base_smem_buf.rst", "AMDGPU/gfx10_base_smem_scratch.rst", "AMDGPU/gfx10_bimm16.rst", "AMDGPU/gfx10_bimm32.rst", "AMDGPU/gfx10_data_buf_atomic128.rst", "AMDGPU/gfx10_data_buf_atomic32.rst", "AMDGPU/gfx10_data_buf_atomic64.rst", "AMDGPU/gfx10_data_mimg_atomic_cmp.rst", "AMDGPU/gfx10_data_mimg_atomic_reg.rst", "AMDGPU/gfx10_data_mimg_store.rst", "AMDGPU/gfx10_data_mimg_store_d16.rst", "AMDGPU/gfx10_data_smem_atomic128.rst", "AMDGPU/gfx10_data_smem_atomic32.rst", "AMDGPU/gfx10_data_smem_atomic64.rst", "AMDGPU/gfx10_dst_buf_128.rst", "AMDGPU/gfx10_dst_buf_32.rst", "AMDGPU/gfx10_dst_buf_64.rst", "AMDGPU/gfx10_dst_buf_96.rst", "AMDGPU/gfx10_dst_buf_lds.rst", "AMDGPU/gfx10_dst_flat_atomic32.rst", "AMDGPU/gfx10_dst_flat_atomic64.rst", "AMDGPU/gfx10_dst_mimg_gather4.rst", "AMDGPU/gfx10_dst_mimg_regular.rst", "AMDGPU/gfx10_dst_mimg_regular_d16.rst", "AMDGPU/gfx10_fimm16.rst", "AMDGPU/gfx10_fimm32.rst", "AMDGPU/gfx10_hwreg.rst", "AMDGPU/gfx10_label.rst", "AMDGPU/gfx10_mad_type_dev.rst", "AMDGPU/gfx10_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx10_mod_sdwa_sext.rst", "AMDGPU/gfx10_mod_vop3_abs_neg.rst", "AMDGPU/gfx10_msg.rst", "AMDGPU/gfx10_offset_buf.rst", "AMDGPU/gfx10_offset_smem_buf.rst", "AMDGPU/gfx10_offset_smem_plain.rst", "AMDGPU/gfx10_opt.rst", "AMDGPU/gfx10_param.rst", "AMDGPU/gfx10_perm_smem.rst", "AMDGPU/gfx10_ret.rst", "AMDGPU/gfx10_rsrc_buf.rst", "AMDGPU/gfx10_rsrc_mimg.rst", "AMDGPU/gfx10_saddr_flat_global.rst", "AMDGPU/gfx10_saddr_flat_scratch.rst", "AMDGPU/gfx10_samp_mimg.rst", "AMDGPU/gfx10_sdata128_0.rst", "AMDGPU/gfx10_sdata32_0.rst", "AMDGPU/gfx10_sdata64_0.rst", "AMDGPU/gfx10_sdst128_0.rst", "AMDGPU/gfx10_sdst256_0.rst", "AMDGPU/gfx10_sdst32_0.rst", "AMDGPU/gfx10_sdst32_1.rst", "AMDGPU/gfx10_sdst32_2.rst", "AMDGPU/gfx10_sdst512_0.rst", "AMDGPU/gfx10_sdst64_0.rst", "AMDGPU/gfx10_sdst64_1.rst", "AMDGPU/gfx10_simm16.rst", "AMDGPU/gfx10_src32_0.rst", "AMDGPU/gfx10_src32_1.rst", "AMDGPU/gfx10_src32_2.rst", "AMDGPU/gfx10_src32_3.rst", "AMDGPU/gfx10_src32_4.rst", "AMDGPU/gfx10_src32_5.rst", "AMDGPU/gfx10_src32_6.rst", "AMDGPU/gfx10_src64_0.rst", "AMDGPU/gfx10_src_exp.rst", "AMDGPU/gfx10_ssrc32_0.rst", "AMDGPU/gfx10_ssrc32_1.rst", "AMDGPU/gfx10_ssrc32_2.rst", "AMDGPU/gfx10_ssrc32_3.rst", "AMDGPU/gfx10_ssrc32_4.rst", "AMDGPU/gfx10_ssrc32_5.rst", "AMDGPU/gfx10_ssrc64_0.rst", "AMDGPU/gfx10_ssrc64_1.rst", "AMDGPU/gfx10_tgt.rst", "AMDGPU/gfx10_type_dev.rst", "AMDGPU/gfx10_uimm16.rst", "AMDGPU/gfx10_vaddr_flat_global.rst", "AMDGPU/gfx10_vaddr_flat_scratch.rst", "AMDGPU/gfx10_vcc_32.rst", "AMDGPU/gfx10_vdata128_0.rst", "AMDGPU/gfx10_vdata32_0.rst", "AMDGPU/gfx10_vdata64_0.rst", "AMDGPU/gfx10_vdata96_0.rst", "AMDGPU/gfx10_vdst128_0.rst", "AMDGPU/gfx10_vdst32_0.rst", "AMDGPU/gfx10_vdst64_0.rst", "AMDGPU/gfx10_vdst96_0.rst", "AMDGPU/gfx10_vsrc128_0.rst", "AMDGPU/gfx10_vsrc32_0.rst", "AMDGPU/gfx10_vsrc32_1.rst", "AMDGPU/gfx10_vsrc64_0.rst", "AMDGPU/gfx10_waitcnt.rst", "AMDGPU/gfx10_wsdst.rst", "AMDGPU/gfx10_wssrc.rst", "AMDGPU/gfx7_addr_buf.rst", "AMDGPU/gfx7_addr_ds.rst", "AMDGPU/gfx7_addr_flat.rst", "AMDGPU/gfx7_addr_mimg.rst", "AMDGPU/gfx7_attr.rst", "AMDGPU/gfx7_base_smem_addr.rst", "AMDGPU/gfx7_base_smem_buf.rst", "AMDGPU/gfx7_bimm16.rst", "AMDGPU/gfx7_bimm32.rst", "AMDGPU/gfx7_data_buf_atomic128.rst", "AMDGPU/gfx7_data_buf_atomic32.rst", "AMDGPU/gfx7_data_buf_atomic64.rst", "AMDGPU/gfx7_data_mimg_atomic_cmp.rst", "AMDGPU/gfx7_data_mimg_atomic_reg.rst", "AMDGPU/gfx7_data_mimg_store.rst", "AMDGPU/gfx7_dst_buf_128.rst", "AMDGPU/gfx7_dst_buf_32.rst", "AMDGPU/gfx7_dst_buf_64.rst", "AMDGPU/gfx7_dst_buf_96.rst", "AMDGPU/gfx7_dst_buf_lds.rst", "AMDGPU/gfx7_dst_flat_atomic32.rst", "AMDGPU/gfx7_dst_flat_atomic64.rst", "AMDGPU/gfx7_dst_mimg_gather4.rst", "AMDGPU/gfx7_dst_mimg_regular.rst", "AMDGPU/gfx7_fimm32.rst", "AMDGPU/gfx7_hwreg.rst", "AMDGPU/gfx7_label.rst", "AMDGPU/gfx7_mod.rst", "AMDGPU/gfx7_msg.rst", "AMDGPU/gfx7_offset_buf.rst", "AMDGPU/gfx7_offset_smem.rst", "AMDGPU/gfx7_opt.rst", "AMDGPU/gfx7_param.rst", "AMDGPU/gfx7_ret.rst", "AMDGPU/gfx7_rsrc_buf.rst", "AMDGPU/gfx7_rsrc_mimg.rst", "AMDGPU/gfx7_samp_mimg.rst", "AMDGPU/gfx7_sdst128_0.rst", "AMDGPU/gfx7_sdst256_0.rst", "AMDGPU/gfx7_sdst32_0.rst", "AMDGPU/gfx7_sdst32_1.rst", "AMDGPU/gfx7_sdst32_2.rst", "AMDGPU/gfx7_sdst512_0.rst", "AMDGPU/gfx7_sdst64_0.rst", "AMDGPU/gfx7_sdst64_1.rst", "AMDGPU/gfx7_simm16.rst", "AMDGPU/gfx7_src32_0.rst", "AMDGPU/gfx7_src32_1.rst", "AMDGPU/gfx7_src32_2.rst", "AMDGPU/gfx7_src32_3.rst", "AMDGPU/gfx7_src32_4.rst", "AMDGPU/gfx7_src32_5.rst", "AMDGPU/gfx7_src32_6.rst", "AMDGPU/gfx7_src64_0.rst", "AMDGPU/gfx7_src64_1.rst", "AMDGPU/gfx7_src64_2.rst", "AMDGPU/gfx7_src_exp.rst", "AMDGPU/gfx7_ssrc32_0.rst", "AMDGPU/gfx7_ssrc32_1.rst", "AMDGPU/gfx7_ssrc32_2.rst", "AMDGPU/gfx7_ssrc32_3.rst", "AMDGPU/gfx7_ssrc32_4.rst", "AMDGPU/gfx7_ssrc32_5.rst", "AMDGPU/gfx7_ssrc32_6.rst", "AMDGPU/gfx7_ssrc64_0.rst", "AMDGPU/gfx7_ssrc64_1.rst", "AMDGPU/gfx7_ssrc64_2.rst", "AMDGPU/gfx7_ssrc64_3.rst", "AMDGPU/gfx7_tgt.rst", "AMDGPU/gfx7_type_dev.rst", "AMDGPU/gfx7_uimm16.rst", "AMDGPU/gfx7_vcc_64.rst", "AMDGPU/gfx7_vdata128_0.rst", "AMDGPU/gfx7_vdata32_0.rst", "AMDGPU/gfx7_vdata64_0.rst", "AMDGPU/gfx7_vdata96_0.rst", "AMDGPU/gfx7_vdst128_0.rst", "AMDGPU/gfx7_vdst32_0.rst", "AMDGPU/gfx7_vdst64_0.rst", "AMDGPU/gfx7_vdst96_0.rst", "AMDGPU/gfx7_vsrc128_0.rst", "AMDGPU/gfx7_vsrc32_0.rst", "AMDGPU/gfx7_vsrc32_1.rst", "AMDGPU/gfx7_vsrc64_0.rst", "AMDGPU/gfx7_waitcnt.rst", "AMDGPU/gfx8_addr_buf.rst", "AMDGPU/gfx8_addr_ds.rst", "AMDGPU/gfx8_addr_flat.rst", "AMDGPU/gfx8_addr_mimg.rst", "AMDGPU/gfx8_attr.rst", "AMDGPU/gfx8_base_smem_addr.rst", "AMDGPU/gfx8_base_smem_buf.rst", "AMDGPU/gfx8_bimm16.rst", "AMDGPU/gfx8_bimm32.rst", "AMDGPU/gfx8_data_buf_atomic128.rst", "AMDGPU/gfx8_data_buf_atomic32.rst", "AMDGPU/gfx8_data_buf_atomic64.rst", "AMDGPU/gfx8_data_buf_d16_128.rst", "AMDGPU/gfx8_data_buf_d16_32.rst", "AMDGPU/gfx8_data_buf_d16_64.rst", "AMDGPU/gfx8_data_buf_d16_96.rst", "AMDGPU/gfx8_data_mimg_atomic_cmp.rst", "AMDGPU/gfx8_data_mimg_atomic_reg.rst", "AMDGPU/gfx8_data_mimg_store.rst", "AMDGPU/gfx8_data_mimg_store_d16.rst", "AMDGPU/gfx8_dst_buf_128.rst", "AMDGPU/gfx8_dst_buf_32.rst", "AMDGPU/gfx8_dst_buf_64.rst", "AMDGPU/gfx8_dst_buf_96.rst", "AMDGPU/gfx8_dst_buf_d16_128.rst", "AMDGPU/gfx8_dst_buf_d16_32.rst", "AMDGPU/gfx8_dst_buf_d16_64.rst", "AMDGPU/gfx8_dst_buf_d16_96.rst", "AMDGPU/gfx8_dst_buf_lds.rst", "AMDGPU/gfx8_dst_flat_atomic32.rst", "AMDGPU/gfx8_dst_flat_atomic64.rst", "AMDGPU/gfx8_dst_mimg_gather4.rst", "AMDGPU/gfx8_dst_mimg_regular.rst", "AMDGPU/gfx8_dst_mimg_regular_d16.rst", "AMDGPU/gfx8_fimm16.rst", "AMDGPU/gfx8_fimm32.rst", "AMDGPU/gfx8_hwreg.rst", "AMDGPU/gfx8_imask.rst", "AMDGPU/gfx8_label.rst", "AMDGPU/gfx8_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx8_mod_sdwa_sext.rst", "AMDGPU/gfx8_mod_vop3_abs_neg.rst", "AMDGPU/gfx8_msg.rst", "AMDGPU/gfx8_offset_buf.rst", "AMDGPU/gfx8_offset_smem_load.rst", "AMDGPU/gfx8_offset_smem_store.rst", "AMDGPU/gfx8_opt.rst", "AMDGPU/gfx8_param.rst", "AMDGPU/gfx8_perm_smem.rst", "AMDGPU/gfx8_ret.rst", "AMDGPU/gfx8_rsrc_buf.rst", "AMDGPU/gfx8_rsrc_mimg.rst", "AMDGPU/gfx8_samp_mimg.rst", "AMDGPU/gfx8_sdata128_0.rst", "AMDGPU/gfx8_sdata32_0.rst", "AMDGPU/gfx8_sdata64_0.rst", "AMDGPU/gfx8_sdst128_0.rst", "AMDGPU/gfx8_sdst256_0.rst", "AMDGPU/gfx8_sdst32_0.rst", "AMDGPU/gfx8_sdst32_1.rst", "AMDGPU/gfx8_sdst32_2.rst", "AMDGPU/gfx8_sdst512_0.rst", "AMDGPU/gfx8_sdst64_0.rst", "AMDGPU/gfx8_sdst64_1.rst", "AMDGPU/gfx8_simm16.rst", "AMDGPU/gfx8_src32_0.rst", "AMDGPU/gfx8_src32_1.rst", "AMDGPU/gfx8_src32_2.rst", "AMDGPU/gfx8_src32_3.rst", "AMDGPU/gfx8_src32_4.rst", "AMDGPU/gfx8_src32_5.rst", "AMDGPU/gfx8_src32_6.rst", "AMDGPU/gfx8_src32_7.rst", "AMDGPU/gfx8_src64_0.rst", "AMDGPU/gfx8_src64_1.rst", "AMDGPU/gfx8_src_exp.rst", "AMDGPU/gfx8_ssrc32_0.rst", "AMDGPU/gfx8_ssrc32_1.rst", "AMDGPU/gfx8_ssrc32_2.rst", "AMDGPU/gfx8_ssrc32_3.rst", "AMDGPU/gfx8_ssrc32_4.rst", "AMDGPU/gfx8_ssrc64_0.rst", "AMDGPU/gfx8_ssrc64_1.rst", "AMDGPU/gfx8_ssrc64_2.rst", "AMDGPU/gfx8_ssrc64_3.rst", "AMDGPU/gfx8_tgt.rst", "AMDGPU/gfx8_type_dev.rst", "AMDGPU/gfx8_uimm16.rst", "AMDGPU/gfx8_vcc_64.rst", "AMDGPU/gfx8_vdata128_0.rst", "AMDGPU/gfx8_vdata32_0.rst", "AMDGPU/gfx8_vdata64_0.rst", "AMDGPU/gfx8_vdata96_0.rst", "AMDGPU/gfx8_vdst128_0.rst", "AMDGPU/gfx8_vdst32_0.rst", "AMDGPU/gfx8_vdst64_0.rst", "AMDGPU/gfx8_vdst96_0.rst", "AMDGPU/gfx8_vsrc128_0.rst", "AMDGPU/gfx8_vsrc32_0.rst", "AMDGPU/gfx8_vsrc32_1.rst", "AMDGPU/gfx8_vsrc64_0.rst", "AMDGPU/gfx8_waitcnt.rst", "AMDGPU/gfx900_mad_type_dev.rst", "AMDGPU/gfx900_mod_vop3_abs_neg.rst", "AMDGPU/gfx900_src32_0.rst", "AMDGPU/gfx900_src32_1.rst", "AMDGPU/gfx900_vdst32_0.rst", "AMDGPU/gfx904_mad_type_dev.rst", "AMDGPU/gfx904_mod_vop3_abs_neg.rst", "AMDGPU/gfx904_src32_0.rst", "AMDGPU/gfx904_src32_1.rst", "AMDGPU/gfx904_vdst32_0.rst", "AMDGPU/gfx906_mad_type_dev.rst", "AMDGPU/gfx906_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx906_mod_sdwa_sext.rst", "AMDGPU/gfx906_mod_vop3_abs_neg.rst", "AMDGPU/gfx906_src32_0.rst", "AMDGPU/gfx906_src32_1.rst", "AMDGPU/gfx906_src32_2.rst", "AMDGPU/gfx906_src32_3.rst", "AMDGPU/gfx906_src32_4.rst", "AMDGPU/gfx906_type_dev.rst", "AMDGPU/gfx906_vdst32_0.rst", "AMDGPU/gfx906_vsrc32_0.rst", "AMDGPU/gfx908_addr_buf.rst", "AMDGPU/gfx908_adst1024_0.rst", "AMDGPU/gfx908_adst128_0.rst", "AMDGPU/gfx908_adst32_0.rst", "AMDGPU/gfx908_adst512_0.rst", "AMDGPU/gfx908_asrc1024_0.rst", "AMDGPU/gfx908_asrc128_0.rst", "AMDGPU/gfx908_asrc32_0.rst", "AMDGPU/gfx908_asrc512_0.rst", "AMDGPU/gfx908_data_buf_atomic32.rst", "AMDGPU/gfx908_dst_flat_atomic32.rst", "AMDGPU/gfx908_mad_type_dev.rst", "AMDGPU/gfx908_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx908_mod_sdwa_sext.rst", "AMDGPU/gfx908_mod_vop3_abs_neg.rst", "AMDGPU/gfx908_offset_buf.rst", "AMDGPU/gfx908_opt.rst", "AMDGPU/gfx908_ret.rst", "AMDGPU/gfx908_rsrc_buf.rst", "AMDGPU/gfx908_saddr_flat_global.rst", "AMDGPU/gfx908_src32_0.rst", "AMDGPU/gfx908_src32_1.rst", "AMDGPU/gfx908_src32_2.rst", "AMDGPU/gfx908_src32_3.rst", "AMDGPU/gfx908_src32_4.rst", "AMDGPU/gfx908_src32_5.rst", "AMDGPU/gfx908_type_dev.rst", "AMDGPU/gfx908_vaddr_flat_global.rst", "AMDGPU/gfx908_vasrc32_0.rst", "AMDGPU/gfx908_vasrc64_0.rst", "AMDGPU/gfx908_vdata32_0.rst", "AMDGPU/gfx908_vdst32_0.rst", "AMDGPU/gfx908_vsrc32_0.rst", "AMDGPU/gfx9_addr_buf.rst", "AMDGPU/gfx9_addr_ds.rst", "AMDGPU/gfx9_addr_flat.rst", "AMDGPU/gfx9_addr_mimg.rst", "AMDGPU/gfx9_attr.rst", "AMDGPU/gfx9_base_smem_addr.rst", "AMDGPU/gfx9_base_smem_buf.rst", "AMDGPU/gfx9_base_smem_scratch.rst", "AMDGPU/gfx9_bimm16.rst", "AMDGPU/gfx9_bimm32.rst", "AMDGPU/gfx9_data_buf_atomic128.rst", "AMDGPU/gfx9_data_buf_atomic32.rst", "AMDGPU/gfx9_data_buf_atomic64.rst", "AMDGPU/gfx9_data_mimg_atomic_cmp.rst", "AMDGPU/gfx9_data_mimg_atomic_reg.rst", "AMDGPU/gfx9_data_mimg_store.rst", "AMDGPU/gfx9_data_mimg_store_d16.rst", "AMDGPU/gfx9_data_smem_atomic128.rst", "AMDGPU/gfx9_data_smem_atomic32.rst", "AMDGPU/gfx9_data_smem_atomic64.rst", "AMDGPU/gfx9_dst_buf_128.rst", "AMDGPU/gfx9_dst_buf_32.rst", "AMDGPU/gfx9_dst_buf_64.rst", "AMDGPU/gfx9_dst_buf_96.rst", "AMDGPU/gfx9_dst_buf_lds.rst", "AMDGPU/gfx9_dst_flat_atomic32.rst", "AMDGPU/gfx9_dst_flat_atomic64.rst", "AMDGPU/gfx9_dst_mimg_gather4.rst", "AMDGPU/gfx9_dst_mimg_regular.rst", "AMDGPU/gfx9_dst_mimg_regular_d16.rst", "AMDGPU/gfx9_fimm16.rst", "AMDGPU/gfx9_fimm32.rst", "AMDGPU/gfx9_hwreg.rst", "AMDGPU/gfx9_imask.rst", "AMDGPU/gfx9_label.rst", "AMDGPU/gfx9_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx9_mod_sdwa_sext.rst", "AMDGPU/gfx9_mod_vop3_abs_neg.rst", "AMDGPU/gfx9_msg.rst", "AMDGPU/gfx9_offset_buf.rst", "AMDGPU/gfx9_offset_smem_buf.rst", "AMDGPU/gfx9_offset_smem_plain.rst", "AMDGPU/gfx9_opt.rst", "AMDGPU/gfx9_param.rst", "AMDGPU/gfx9_perm_smem.rst", "AMDGPU/gfx9_ret.rst", "AMDGPU/gfx9_rsrc_buf.rst", "AMDGPU/gfx9_rsrc_mimg.rst", "AMDGPU/gfx9_saddr_flat_global.rst", "AMDGPU/gfx9_saddr_flat_scratch.rst", "AMDGPU/gfx9_samp_mimg.rst", "AMDGPU/gfx9_sdata128_0.rst", "AMDGPU/gfx9_sdata32_0.rst", "AMDGPU/gfx9_sdata64_0.rst", "AMDGPU/gfx9_sdst128_0.rst", "AMDGPU/gfx9_sdst256_0.rst", "AMDGPU/gfx9_sdst32_0.rst", "AMDGPU/gfx9_sdst32_1.rst", "AMDGPU/gfx9_sdst32_2.rst", "AMDGPU/gfx9_sdst512_0.rst", "AMDGPU/gfx9_sdst64_0.rst", "AMDGPU/gfx9_sdst64_1.rst", "AMDGPU/gfx9_simm16.rst", "AMDGPU/gfx9_src32_0.rst", "AMDGPU/gfx9_src32_1.rst", "AMDGPU/gfx9_src32_2.rst", "AMDGPU/gfx9_src32_3.rst", "AMDGPU/gfx9_src32_4.rst", "AMDGPU/gfx9_src32_5.rst", "AMDGPU/gfx9_src32_6.rst", "AMDGPU/gfx9_src32_7.rst", "AMDGPU/gfx9_src64_0.rst", "AMDGPU/gfx9_src64_1.rst", "AMDGPU/gfx9_src_exp.rst", "AMDGPU/gfx9_ssrc32_0.rst", "AMDGPU/gfx9_ssrc32_1.rst", "AMDGPU/gfx9_ssrc32_2.rst", "AMDGPU/gfx9_ssrc32_3.rst", "AMDGPU/gfx9_ssrc32_4.rst", "AMDGPU/gfx9_ssrc64_0.rst", "AMDGPU/gfx9_ssrc64_1.rst", "AMDGPU/gfx9_ssrc64_2.rst", "AMDGPU/gfx9_ssrc64_3.rst", "AMDGPU/gfx9_tgt.rst", "AMDGPU/gfx9_type_dev.rst", "AMDGPU/gfx9_uimm16.rst", "AMDGPU/gfx9_vaddr_flat_global.rst", "AMDGPU/gfx9_vaddr_flat_scratch.rst", "AMDGPU/gfx9_vcc_64.rst", "AMDGPU/gfx9_vdata128_0.rst", "AMDGPU/gfx9_vdata32_0.rst", "AMDGPU/gfx9_vdata64_0.rst", "AMDGPU/gfx9_vdata96_0.rst", "AMDGPU/gfx9_vdst128_0.rst", "AMDGPU/gfx9_vdst32_0.rst", "AMDGPU/gfx9_vdst64_0.rst", "AMDGPU/gfx9_vdst96_0.rst", "AMDGPU/gfx9_vsrc128_0.rst", "AMDGPU/gfx9_vsrc32_0.rst", "AMDGPU/gfx9_vsrc32_1.rst", "AMDGPU/gfx9_vsrc64_0.rst", "AMDGPU/gfx9_waitcnt.rst", "AMDGPUDwarfExtensionsForHeterogeneousDebugging.rst", "AMDGPUInstructionNotation.rst", "AMDGPUInstructionSyntax.rst", "AMDGPUModifierSyntax.rst", "AMDGPUOperandSyntax.rst", "AMDGPUUsage.rst", "AddingConstrainedIntrinsics.rst", "AdvancedBuilds.rst", "AliasAnalysis.rst", "Atomics.rst", "Benchmarking.rst", "BigEndianNEON.rst", "BitCodeFormat.rst", "BlockFrequencyTerminology.rst", "BranchWeightMetadata.rst", "BugLifeCycle.rst", "Bugpoint.rst", "BugpointRedesign.md", "BuildingADistribution.rst", "CFIVerify.rst", "CMake.rst", "CMakePrimer.rst", "CodeGenerator.rst", "CodeOfConduct.rst", "CodeReview.rst", "CodingStandards.rst", "CommandGuide/FileCheck.rst", "CommandGuide/bugpoint.rst", "CommandGuide/dsymutil.rst", "CommandGuide/index.rst", "CommandGuide/lit.rst", "CommandGuide/llc.rst", "CommandGuide/lli.rst", "CommandGuide/llvm-addr2line.rst", "CommandGuide/llvm-ar.rst", "CommandGuide/llvm-as.rst", "CommandGuide/llvm-bcanalyzer.rst", "CommandGuide/llvm-config.rst", "CommandGuide/llvm-cov.rst", "CommandGuide/llvm-cxxfilt.rst", "CommandGuide/llvm-cxxmap.rst", "CommandGuide/llvm-diff.rst", "CommandGuide/llvm-dis.rst", "CommandGuide/llvm-dwarfdump.rst", "CommandGuide/llvm-exegesis.rst", "CommandGuide/llvm-extract.rst", "CommandGuide/llvm-install-name-tool.rst", "CommandGuide/llvm-lib.rst", "CommandGuide/llvm-libtool-darwin.rst", "CommandGuide/llvm-link.rst", "CommandGuide/llvm-lipo.rst", "CommandGuide/llvm-locstats.rst", "CommandGuide/llvm-mca.rst", "CommandGuide/llvm-nm.rst", "CommandGuide/llvm-objcopy.rst", "CommandGuide/llvm-objdump.rst", "CommandGuide/llvm-pdbutil.rst", "CommandGuide/llvm-profdata.rst", "CommandGuide/llvm-profgen.rst", "CommandGuide/llvm-ranlib.rst", "CommandGuide/llvm-readelf.rst", "CommandGuide/llvm-readobj.rst", "CommandGuide/llvm-size.rst", "CommandGuide/llvm-stress.rst", "CommandGuide/llvm-strings.rst", "CommandGuide/llvm-strip.rst", "CommandGuide/llvm-symbolizer.rst", "CommandGuide/opt.rst", "CommandGuide/tblgen.rst", "CommandLine.rst", "CompileCudaWithLLVM.rst", "CompilerWriterInfo.rst", "Contributing.rst", "Coroutines.rst", "CoverageMappingFormat.rst", "DebuggingJITedCode.rst", "DependenceGraphs/index.rst", "DeveloperPolicy.rst", "Docker.rst", "ExceptionHandling.rst", "ExtendingLLVM.rst", "Extensions.rst", "FAQ.rst", "FaultMaps.rst", "Frontend/PerformanceTips.rst", "FuzzingLLVM.rst", "GarbageCollection.rst", "GetElementPtr.rst", "GettingInvolved.rst", "GettingStarted.rst", "GettingStartedTutorials.rst", "GettingStartedVS.rst", "GitBisecting.rst", "GlobalISel/GMIR.rst", "GlobalISel/GenericOpcode.rst", "GlobalISel/IRTranslator.rst", "GlobalISel/InstructionSelect.rst", "GlobalISel/KnownBits.rst", "GlobalISel/Legalizer.rst", "GlobalISel/Pipeline.rst", "GlobalISel/Porting.rst", "GlobalISel/RegBankSelect.rst", "GlobalISel/Resources.rst", "GlobalISel/index.rst", "GoldPlugin.rst", "GwpAsan.rst", "HowToAddABuilder.rst", "HowToBuildOnARM.rst", "HowToBuildWithPGO.rst", "HowToCrossCompileBuiltinsOnArm.rst", "HowToCrossCompileLLVM.rst", "HowToReleaseLLVM.rst", "HowToSetUpLLVMStyleRTTI.rst", "HowToSubmitABug.rst", "HowToUpdateDebugInfo.rst", "HowToUseAttributes.rst", "HowToUseInstrMappings.rst", "InAlloca.rst", "LangRef.rst", "Lexicon.rst", "LibFuzzer.rst", "LinkTimeOptimization.rst", "LoopTerminology.rst", "MCJITDesignAndImplementation.rst", "MIRLangRef.rst", "MarkdownQuickstartTemplate.md", "MarkedUpDisassembly.rst", "MeetupGuidelines.rst", "MemTagSanitizer.rst", "MemorySSA.rst", "MergeFunctions.rst", "NVPTXUsage.rst", "ORCv2.rst", "OptBisect.rst", "PDB/CodeViewSymbols.rst", "PDB/CodeViewTypes.rst", "PDB/DbiStream.rst", "PDB/GlobalStream.rst", "PDB/HashTable.rst", "PDB/ModiStream.rst", "PDB/MsfFile.rst", "PDB/PdbStream.rst", "PDB/PublicStream.rst", "PDB/TpiStream.rst", "PDB/index.rst", "Packaging.rst", "Passes.rst", "Phabricator.rst", "ProgrammersManual.rst", "Projects.rst", "Proposals/GitHubMove.rst", "Proposals/LLVMLibC.rst", "Proposals/TestSuite.rst", "Proposals/VariableNames.rst", "Proposals/VectorPredication.rst", "Proposals/VectorizationPlan.rst", "Reference.rst", "ReleaseNotes.rst", "ReleaseProcess.rst", "Remarks.rst", "ReportingGuide.rst", "ScudoHardenedAllocator.rst", "Security.rst", "SegmentedStacks.rst", "SourceLevelDebugging.rst", "SpeculativeLoadHardening.md", "SphinxQuickstartTemplate.rst", "StackMaps.rst", "StackSafetyAnalysis.rst", "Statepoints.rst", "SupportLibrary.rst", "SupportPolicy.rst", "SystemLibrary.rst", "TableGen/BackEnds.rst", "TableGen/BackGuide.rst", "TableGen/ProgRef.rst", "TableGen/index.rst", "TableGenFundamentals.rst", "TestSuiteGuide.md", "TestSuiteMakefileGuide.rst", "TestingGuide.rst", "TransformMetadata.rst", "TypeMetadata.rst", "UserGuides.rst", "Vectorizers.rst", "WritingAnLLVMBackend.rst", "WritingAnLLVMNewPMPass.rst", "WritingAnLLVMPass.rst", "XRay.rst", "XRayExample.rst", "XRayFDRFormat.rst", "YamlIO.rst", "index.rst", "tutorial/BuildingAJIT1.rst", "tutorial/BuildingAJIT2.rst", "tutorial/BuildingAJIT3.rst", "tutorial/BuildingAJIT4.rst", "tutorial/LangImpl01.rst", "tutorial/LangImpl02.rst", "tutorial/LangImpl03.rst", "tutorial/LangImpl04.rst", "tutorial/LangImpl05.rst", "tutorial/LangImpl06.rst", "tutorial/LangImpl07.rst", "tutorial/LangImpl08.rst", "tutorial/LangImpl09.rst", "tutorial/LangImpl10.rst", "tutorial/MyFirstLanguageFrontend/LangImpl01.rst", "tutorial/MyFirstLanguageFrontend/LangImpl02.rst", "tutorial/MyFirstLanguageFrontend/LangImpl03.rst", "tutorial/MyFirstLanguageFrontend/LangImpl04.rst", "tutorial/MyFirstLanguageFrontend/LangImpl05.rst", "tutorial/MyFirstLanguageFrontend/LangImpl06.rst", "tutorial/MyFirstLanguageFrontend/LangImpl07.rst", "tutorial/MyFirstLanguageFrontend/LangImpl08.rst", "tutorial/MyFirstLanguageFrontend/LangImpl09.rst", "tutorial/MyFirstLanguageFrontend/LangImpl10.rst", "tutorial/MyFirstLanguageFrontend/index.rst", "tutorial/OCamlLangImpl1.rst", "tutorial/OCamlLangImpl2.rst", "tutorial/OCamlLangImpl3.rst", "tutorial/OCamlLangImpl4.rst", "tutorial/OCamlLangImpl5.rst", "tutorial/OCamlLangImpl6.rst", "tutorial/OCamlLangImpl7.rst", "tutorial/OCamlLangImpl8.rst", "tutorial/index.rst", "yaml2obj.rst"], "indexentries": {"--accelerator": [[489, "cmdoption-dsymutil-accelerator", false]], "--add-dyldinfo": [[514, "cmdoption-llvm-nm-add-dyldinfo", false]], "--add-gnu-debuglink": [[515, "cmdoption-llvm-objcopy-add-gnu-debuglink", false]], "--add-inlinedinfo": [[514, "cmdoption-llvm-nm-add-inlinedinfo", false]], "--add-section": [[515, "cmdoption-llvm-objcopy-add-section", false]], "--add-symbol": [[515, "cmdoption-llvm-objcopy-add-symbol", false]], "--addresses": [[527, "cmdoption-llvm-symbolizer-print-address", false]], "--addrsig": [[521, "cmdoption-llvm-readelf-addrsig", false], [522, "cmdoption-llvm-readobj-addrsig", false]], "--adjust-start": [[515, "cmdoption-llvm-objcopy-change-start", false]], "--adjust-vma": [[516, "cmdoption-llvm-objdump-adjust-vma", false], [527, "cmdoption-llvm-symbolizer-adjust-vma", false]], "--all": [[504, "cmdoption-llvm-dwarfdump-a", false], [521, "cmdoption-llvm-readelf-all", false], [522, "cmdoption-llvm-readobj-all", false], [525, "cmdoption-llvm-strings-all", false]], "--all-blocks": [[499, "cmdoption-llvm-cov-gcov-a", false]], "--all-headers": [[516, "cmdoption-llvm-objdump-x", false]], "--allow-broken-links": [[515, "cmdoption-llvm-objcopy-allow-broken-links", false], [526, "cmdoption-llvm-strip-allow-broken-links", false]], "--allow-deprecated-dag-overlap": [[487, "cmdoption-FileCheck-allow-deprecated-dag-overlap", false]], "--allow-empty": [[487, "cmdoption-FileCheck-allow-empty", false]], "--allow-unused-prefixes": [[487, "cmdoption-FileCheck-allow-unused-prefixes", false]], "--apple-names": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-namespaces": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-objc": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-types": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--arch": [[489, "cmdoption-dsymutil-arch", false], [504, "cmdoption-llvm-dwarfdump-arch", false], [514, "cmdoption-llvm-nm-arch", false], [516, "cmdoption-llvm-objdump-arch", false], [523, "cmdoption-llvm-size-arch", false]], "--arch-name": [[516, "cmdoption-llvm-objdump-arch-name", false]], "--arch-specific": [[521, "cmdoption-llvm-readelf-arch-specific", false], [522, "cmdoption-llvm-readobj-arch-specific", false]], "--archive-headers": [[516, "cmdoption-llvm-objdump-a", false]], "--archive-member-offsets": [[516, "cmdoption-llvm-objdump-archive-member-offsets", false]], "--basenames": [[527, "cmdoption-llvm-symbolizer-basenames", false]], "--binary": [[519, "cmdoption-llvm-profgen-binary", false]], "--binary-architecture": [[515, "cmdoption-llvm-objcopy-binary-architecture", false]], "--bind": [[516, "cmdoption-llvm-objdump-bind", false]], "--branch-counts": [[499, "cmdoption-llvm-cov-gcov-c", false]], "--branch-probabilities": [[499, "cmdoption-llvm-cov-gcov-b", false]], "--build-id-link-dir": [[515, "cmdoption-llvm-objcopy-build-id-link-dir", false]], "--build-id-link-input": [[515, "cmdoption-llvm-objcopy-build-id-link-input", false]], "--build-id-link-output": [[515, "cmdoption-llvm-objcopy-build-id-link-output", false]], "--bytes": [[525, "cmdoption-llvm-strings-bytes", false]], "--cfg": [[516, "cmdoption-llvm-objdump-cfg", false]], "--cg-profile": [[521, "cmdoption-llvm-readelf-cg-profile", false], [522, "cmdoption-llvm-readobj-cg-profile", false]], "--change-start": [[515, "cmdoption-llvm-objcopy-change-start", false]], "--check-prefix": [[487, "cmdoption-FileCheck-check-prefix", false]], "--check-prefixes": [[487, "cmdoption-FileCheck-check-prefixes", false]], "--codeview": [[522, "cmdoption-llvm-readobj-codeview", false]], "--codeview-ghash": [[522, "cmdoption-llvm-readobj-codeview-ghash", false]], "--codeview-merged-types": [[522, "cmdoption-llvm-readobj-codeview-merged-types", false]], "--codeview-subsection-bytes": [[522, "cmdoption-llvm-readobj-codeview-subsection-bytes", false]], "--coff-basereloc": [[522, "cmdoption-llvm-readobj-coff-basereloc", false]], "--coff-debug-directory": [[522, "cmdoption-llvm-readobj-coff-debug-directory", false]], "--coff-directives": [[522, "cmdoption-llvm-readobj-coff-directives", false]], "--coff-exports": [[522, "cmdoption-llvm-readobj-coff-exports", false]], "--coff-imports": [[522, "cmdoption-llvm-readobj-coff-imports", false]], "--coff-load-config": [[522, "cmdoption-llvm-readobj-coff-load-config", false]], "--coff-resources": [[522, "cmdoption-llvm-readobj-coff-resources", false]], "--coff-tls-directory": [[522, "cmdoption-llvm-readobj-coff-tls-directory", false]], "--color": [[487, "cmdoption-FileCheck-color", false], [504, "cmdoption-llvm-dwarfdump-color", false], [521, "cmdoption-llvm-readelf-color", false], [522, "cmdoption-llvm-readobj-color", false]], "--comment-prefixes": [[487, "cmdoption-FileCheck-comment-prefixes", false]], "--common": [[523, "cmdoption-llvm-size-common", false]], "--compare": [[512, "cmdoption-llvm-locstats-compare", false]], "--compress-debug-sections": [[515, "cmdoption-llvm-objcopy-compress-debug-sections", false]], "--config-prefix": [[491, "cmdoption-lit-config-prefix", false]], "--data-in-code": [[516, "cmdoption-llvm-objdump-data-in-code", false]], "--debug": [[491, "cmdoption-lit-debug", false]], "--debug-abbrev": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-addr": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-aranges": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-cu-index": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-frame": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-gnu-pubnames": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-gnu-pubtypes": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-info": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-line": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-line-str": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-loc": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-loclists": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-macro": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-names": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-pubnames": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-pubtypes": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-ranges": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-rnglists": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-str": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-str-offsets": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-syms": [[514, "cmdoption-llvm-nm-debug-syms", false]], "--debug-tu-index": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-types": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-vars": [[516, "cmdoption-llvm-objdump-debug-vars", false]], "--debug-vars-indent": [[516, "cmdoption-llvm-objdump-debug-vars-indent", false]], "--decompress-debug-sections": [[515, "cmdoption-llvm-objcopy-decompress-debug-sections", false]], "--default-arch": [[527, "cmdoption-llvm-symbolizer-default-arch", false]], "--defined-only": [[514, "cmdoption-llvm-nm-defined-only", false]], "--demangle": [[514, "cmdoption-llvm-nm-demangle", false], [516, "cmdoption-llvm-objdump-C", false], [521, "cmdoption-llvm-readelf-demangle", false], [522, "cmdoption-llvm-readobj-demangle", false], [527, "cmdoption-llvm-symbolizer-demangle", false]], "--dependent-libraries": [[522, "cmdoption-llvm-readobj-dependent-libraries", false]], "--dia": [[527, "cmdoption-llvm-symbolizer-dia", false]], "--diff": [[504, "cmdoption-llvm-dwarfdump-diff", false]], "--dis-symname": [[516, "cmdoption-llvm-objdump-dis-symname", false]], "--disable-deterministic-archives": [[515, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [526, "cmdoption-llvm-strip-disable-deterministic-archives", false]], "--disable-excess-fp-precision": [[492, "cmdoption-llc-disable-excess-fp-precision", false]], "--disassemble": [[516, "cmdoption-llvm-objdump-d", false]], "--disassemble-all": [[516, "cmdoption-llvm-objdump-D", false]], "--disassemble-symbols": [[516, "cmdoption-llvm-objdump-disassemble-symbols", false]], "--disassemble-zeroes": [[516, "cmdoption-llvm-objdump-z", false]], "--disassembler-options": [[516, "cmdoption-llvm-objdump-M", false]], "--discard-all": [[515, "cmdoption-llvm-objcopy-discard-all", false], [526, "cmdoption-llvm-strip-discard-all", false]], "--discard-locals": [[515, "cmdoption-llvm-objcopy-discard-locals", false], [526, "cmdoption-llvm-strip-discard-locals", false]], "--draw-plot": [[512, "cmdoption-llvm-locstats-draw-plot", false]], "--dsym": [[516, "cmdoption-llvm-objdump-dsym", false]], "--dsym-hint": [[527, "cmdoption-llvm-symbolizer-dsym-hint", false]], "--dt": [[522, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dump-debug-map": [[489, "cmdoption-dsymutil-dump-debug-map", false]], "--dump-input": [[487, "cmdoption-FileCheck-dump-input", false]], "--dump-input-context": [[487, "cmdoption-FileCheck-dump-input-context", false]], "--dump-input-filter": [[487, "cmdoption-FileCheck-dump-input-filter", false]], "--dump-object-to-disk": [[505, "cmdoption-llvm-exegesis-dump-object-to-disk", false]], "--dump-section": [[515, "cmdoption-llvm-objcopy-dump-section", false]], "--dwarf": [[516, "cmdoption-llvm-objdump-dwarf", false]], "--dwp": [[527, "cmdoption-llvm-symbolizer-dwp", false]], "--dyldinfo-only": [[514, "cmdoption-llvm-nm-dyldinfo-only", false]], "--dylib-id": [[516, "cmdoption-llvm-objdump-dylib-id", false]], "--dylibs-used": [[516, "cmdoption-llvm-objdump-dylibs-used", false]], "--dyn-relocations": [[521, "cmdoption-llvm-readelf-dyn-relocations", false], [522, "cmdoption-llvm-readobj-dyn-relocations", false]], "--dyn-symbols": [[521, "cmdoption-llvm-readelf-dyn-symbols", false], [522, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dyn-syms": [[521, "cmdoption-llvm-readelf-dyn-symbols", false], [522, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dynamic": [[514, "cmdoption-llvm-nm-dynamic", false], [521, "cmdoption-llvm-readelf-dynamic-table", false], [522, "cmdoption-llvm-readobj-dynamic-table", false]], "--dynamic-reloc": [[516, "cmdoption-llvm-objdump-R", false]], "--dynamic-syms": [[516, "cmdoption-llvm-objdump-T", false]], "--dynamic-table": [[521, "cmdoption-llvm-readelf-dynamic-table", false], [522, "cmdoption-llvm-readobj-dynamic-table", false]], "--echo-all-commands": [[491, "cmdoption-lit-vv", false]], "--eh-frame": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--elf-hash-histogram": [[521, "cmdoption-llvm-readelf-elf-hash-histogram", false], [522, "cmdoption-llvm-readobj-elf-hash-histogram", false]], "--elf-linker-options": [[521, "cmdoption-llvm-readelf-elf-linker-options", false], [522, "cmdoption-llvm-readobj-elf-linker-options", false]], "--elf-output-style": [[521, "cmdoption-llvm-readelf-elf-output-style", false], [522, "cmdoption-llvm-readobj-elf-output-style", false]], "--elf-section-groups": [[521, "cmdoption-llvm-readelf-elf-section-groups", false], [522, "cmdoption-llvm-readobj-elf-section-groups", false]], "--enable-deterministic-archives": [[515, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [526, "cmdoption-llvm-strip-enable-deterministic-archives", false]], "--enable-no-infs-fp-math": [[492, "cmdoption-llc-enable-no-infs-fp-math", false]], "--enable-no-nans-fp-math": [[492, "cmdoption-llc-enable-no-nans-fp-math", false]], "--enable-no-signed-zeros-fp-math": [[492, "cmdoption-llc-enable-no-signed-zeros-fp-math", false]], "--enable-no-trapping-fp-math": [[492, "cmdoption-llc-enable-no-trapping-fp-math", false]], "--enable-unsafe-fp-math": [[492, "cmdoption-llc-enable-unsafe-fp-math", false]], "--enable-var-scope": [[487, "cmdoption-FileCheck-enable-var-scope", false]], "--exe": [[527, "cmdoption-llvm-symbolizer-obj", false]], "--expand-relocs": [[521, "cmdoption-llvm-readelf-expand-relocs", false], [522, "cmdoption-llvm-readobj-expand-relocs", false]], "--exports-trie": [[516, "cmdoption-llvm-objdump-exports-trie", false]], "--extern-only": [[514, "cmdoption-llvm-nm-extern-only", false]], "--extract-dwo": [[515, "cmdoption-llvm-objcopy-extract-dwo", false]], "--extract-main-partition": [[515, "cmdoption-llvm-objcopy-extract-main-partition", false]], "--extract-partition": [[515, "cmdoption-llvm-objcopy-extract-partition", false]], "--fallback-debug-path": [[527, "cmdoption-llvm-symbolizer-fallback-debug-path", false]], "--fault-map-section": [[516, "cmdoption-llvm-objdump-fault-map-section", false]], "--file-headers": [[516, "cmdoption-llvm-objdump-f", false], [521, "cmdoption-llvm-readelf-file-headers", false], [522, "cmdoption-llvm-readobj-file-headers", false]], "--filter": [[491, "cmdoption-lit-filter", false]], "--find": [[504, "cmdoption-llvm-dwarfdump-f", false]], "--flat": [[489, "cmdoption-dsymutil-flat", false]], "--format": [[495, "cmdoption-llvm-ar-format", false], [500, "cmdoption-llvm-cxxfilt-format", false], [514, "cmdoption-llvm-nm-format", false], [519, "cmdoption-llvm-profgen-format", false], [523, "cmdoption-llvm-size-format", false]], "--frame-pointer": [[492, "cmdoption-llc-frame-pointer", false]], "--full-contents": [[516, "cmdoption-llvm-objdump-s", false]], "--full-leading-addr": [[516, "cmdoption-llvm-objdump-full-leading-addr", false]], "--function-summaries": [[499, "cmdoption-llvm-cov-gcov-f", false]], "--functions": [[527, "cmdoption-llvm-symbolizer-functions", false]], "--gdb-index": [[504, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--gen-reproducer": [[489, "cmdoption-dsymutil-gen-reproducer", false]], "--globalize-symbol": [[515, "cmdoption-llvm-objcopy-globalize-symbol", false]], "--globalize-symbols": [[515, "cmdoption-llvm-objcopy-globalize-symbols", false]], "--gnu-hash-table": [[521, "cmdoption-llvm-readelf-gnu-hash-table", false], [522, "cmdoption-llvm-readobj-gnu-hash-table", false]], "--hash-filenames": [[499, "cmdoption-llvm-cov-gcov-x", false]], "--hash-symbols": [[521, "cmdoption-llvm-readelf-hash-symbols", false], [522, "cmdoption-llvm-readobj-hash-symbols", false]], "--hash-table": [[521, "cmdoption-llvm-readelf-hash-table", false], [522, "cmdoption-llvm-readobj-hash-table", false]], "--headers": [[516, "cmdoption-llvm-objdump-h", false], [521, "cmdoption-llvm-readelf-headers", false], [522, "cmdoption-llvm-readobj-headers", false]], "--help": [[489, "cmdoption-dsymutil-help", false], [491, "cmdoption-lit-h", false], [495, "cmdoption-llvm-ar-h", false], [499, "cmdoption-llvm-cov-gcov-help", false], [500, "cmdoption-llvm-cxxfilt-help", false], [504, "cmdoption-llvm-dwarfdump-h", false], [507, "cmdoption-llvm-install-name-tool-help", false], [514, "cmdoption-llvm-nm-help", false], [515, "cmdoption-llvm-objcopy-help", false], [516, "cmdoption-llvm-objdump-help", false], [521, "cmdoption-llvm-readelf-help", false], [522, "cmdoption-llvm-readobj-help", false], [523, "cmdoption-llvm-size-help", false], [525, "cmdoption-llvm-strings-help", false], [526, "cmdoption-llvm-strip-help", false], [527, "cmdoption-llvm-symbolizer-help", false]], "--help-list": [[500, "cmdoption-llvm-cxxfilt-help-list", false], [504, "cmdoption-llvm-dwarfdump-help-list", false], [514, "cmdoption-llvm-nm-help-list", false], [521, "cmdoption-llvm-readelf-help-list", false], [522, "cmdoption-llvm-readobj-help-list", false], [523, "cmdoption-llvm-size-help-list", false], [525, "cmdoption-llvm-strings-help-list", false]], "--hex-dump": [[521, "cmdoption-llvm-readelf-hex-dump", false], [522, "cmdoption-llvm-readobj-hex-dump", false]], "--histogram": [[521, "cmdoption-llvm-readelf-elf-hash-histogram", false], [522, "cmdoption-llvm-readobj-elf-hash-histogram", false]], "--ignore-case": [[487, "cmdoption-FileCheck-ignore-case", false], [504, "cmdoption-llvm-dwarfdump-i", false]], "--ignore-debug-entry-values": [[512, "cmdoption-llvm-locstats-ignore-debug-entry-values", false]], "--implicit-check-not": [[487, "cmdoption-FileCheck-implicit-check-not", false]], "--indirect-symbols": [[516, "cmdoption-llvm-objdump-indirect-symbols", false]], "--info-plist": [[516, "cmdoption-llvm-objdump-info-plist", false]], "--inlines": [[527, "cmdoption-llvm-symbolizer-inlining", false]], "--inlining": [[527, "cmdoption-llvm-symbolizer-inlining", false]], "--input-file": [[487, "cmdoption-FileCheck-input-file", false]], "--input-target": [[515, "cmdoption-llvm-objcopy-input-target", false]], "--just-symbol-name": [[514, "cmdoption-llvm-nm-just-symbol-name", false]], "--keep-file-symbols": [[515, "cmdoption-llvm-objcopy-keep-file-symbols", false], [526, "cmdoption-llvm-strip-keep-file-symbols", false]], "--keep-global-symbol": [[515, "cmdoption-llvm-objcopy-keep-global-symbol", false]], "--keep-global-symbols": [[515, "cmdoption-llvm-objcopy-keep-global-symbols", false]], "--keep-section": [[515, "cmdoption-llvm-objcopy-keep-section", false], [526, "cmdoption-llvm-strip-keep-section", false]], "--keep-symbol": [[515, "cmdoption-llvm-objcopy-keep-symbol", false], [526, "cmdoption-llvm-strip-keep-symbol", false]], "--keep-symbols": [[515, "cmdoption-llvm-objcopy-keep-symbols", false]], "--lazy-bind": [[516, "cmdoption-llvm-objdump-lazy-bind", false]], "--line-numbers": [[516, "cmdoption-llvm-objdump-l", false]], "--link-opt-hints": [[516, "cmdoption-llvm-objdump-link-opt-hints", false]], "--load": [[492, "cmdoption-llc-load", false]], "--localize-hidden": [[515, "cmdoption-llvm-objcopy-localize-hidden", false]], "--localize-symbol": [[515, "cmdoption-llvm-objcopy-localize-symbol", false]], "--localize-symbols": [[515, "cmdoption-llvm-objcopy-localize-symbols", false]], "--long-file-names": [[499, "cmdoption-llvm-cov-gcov-l", false]], "--lookup": [[504, "cmdoption-llvm-dwarfdump-lookup", false]], "--macho": [[516, "cmdoption-llvm-objdump-m", false]], "--macho-data-in-code": [[522, "cmdoption-llvm-readobj-macho-data-in-code", false]], "--macho-dsymtab": [[522, "cmdoption-llvm-readobj-macho-dsymtab", false]], "--macho-indirect-symbols": [[522, "cmdoption-llvm-readobj-macho-indirect-symbols", false]], "--macho-linker-options": [[522, "cmdoption-llvm-readobj-macho-linker-options", false]], "--macho-segment": [[522, "cmdoption-llvm-readobj-macho-segment", false]], "--macho-version-min": [[522, "cmdoption-llvm-readobj-macho-version-min", false]], "--match-full-lines": [[487, "cmdoption-FileCheck-match-full-lines", false]], "--mattr": [[516, "cmdoption-llvm-objdump-mattr", false]], "--max-failures": [[491, "cmdoption-lit-max-failures", false]], "--max-tests": [[491, "cmdoption-lit-max-tests", false]], "--max-time": [[491, "cmdoption-lit-max-time", false]], "--mcpu": [[516, "cmdoption-llvm-objdump-mcpu", false]], "--minimize": [[489, "cmdoption-dsymutil-minimize", false]], "--name": [[504, "cmdoption-llvm-dwarfdump-n", false]], "--needed-libs": [[521, "cmdoption-llvm-readelf-needed-libs", false], [522, "cmdoption-llvm-readobj-needed-libs", false]], "--new-symbol-visibility": [[515, "cmdoption-llvm-objcopy-new-symbol-visibility", false]], "--no-demangle": [[514, "cmdoption-llvm-nm-no-demangle", false], [527, "cmdoption-llvm-symbolizer-no-demangle", false]], "--no-dyldinfo": [[514, "cmdoption-llvm-nm-no-dyldinfo", false]], "--no-inlines": [[527, "cmdoption-llvm-symbolizer-no-inlines", false]], "--no-leading-addr": [[516, "cmdoption-llvm-objdump-no-leading-addr", false]], "--no-leading-headers": [[516, "cmdoption-llvm-objdump-no-leading-headers", false]], "--no-llvm-bc": [[514, "cmdoption-llvm-nm-no-llvm-bc", false]], "--no-odr": [[489, "cmdoption-dsymutil-no-odr", false]], "--no-output": [[489, "cmdoption-dsymutil-no-output", false], [499, "cmdoption-llvm-cov-gcov-n", false]], "--no-progress-bar": [[491, "cmdoption-lit-no-progress-bar", false]], "--no-show-raw-insn": [[516, "cmdoption-llvm-objdump-no-show-raw-insn", false]], "--no-sort": [[514, "cmdoption-llvm-nm-no-sort", false]], "--no-strip-all": [[526, "cmdoption-llvm-strip-no-strip-all", false]], "--no-strip-underscore": [[500, "cmdoption-llvm-cxxfilt-no-strip-underscore", false]], "--no-swiftmodule-timestamp": [[489, "cmdoption-dsymutil-no-swiftmodule-timestamp", false]], "--no-symbolic-operands": [[516, "cmdoption-llvm-objdump-no-symbolic-operands", false]], "--no-weak": [[514, "cmdoption-llvm-nm-no-weak", false]], "--non-verbose": [[516, "cmdoption-llvm-objdump-non-verbose", false]], "--notes": [[521, "cmdoption-llvm-readelf-notes", false], [522, "cmdoption-llvm-readobj-notes", false]], "--num-shards": [[491, "cmdoption-lit-num-shards", false]], "--num-threads": [[489, "cmdoption-dsymutil-num-threads", false]], "--numeric-sort": [[514, "cmdoption-llvm-nm-numeric-sort", false]], "--obj": [[527, "cmdoption-llvm-symbolizer-obj", false]], "--objc-meta-data": [[516, "cmdoption-llvm-objdump-objc-meta-data", false]], "--object-directory": [[499, "cmdoption-llvm-cov-gcov-o", false]], "--object-file": [[499, "cmdoption-llvm-cov-gcov-o", false]], "--object-prefix-map": [[489, "cmdoption-dsymutil-object-prefix-map", false]], "--only-formal-parameters": [[512, "cmdoption-llvm-locstats-only-formal-parameters", false]], "--only-keep-debug": [[515, "cmdoption-llvm-objcopy-only-keep-debug", false], [526, "cmdoption-llvm-strip-only-keep-debug", false]], "--only-section": [[515, "cmdoption-llvm-objcopy-only-section", false]], "--only-variables": [[512, "cmdoption-llvm-locstats-only-variables", false]], "--oso-prepend-path": [[489, "cmdoption-dsymutil-oso-prepend-path", false]], "--out": [[489, "cmdoption-dsymutil-out", false]], "--output": [[519, "cmdoption-llvm-profgen-output", false]], "--output-style": [[527, "cmdoption-llvm-symbolizer-output-style", false]], "--output-target": [[515, "cmdoption-llvm-objcopy-output-target", false]], "--papertrail": [[489, "cmdoption-dsymutil-papertrail", false]], "--param": [[491, "cmdoption-lit-D", false]], "--parent-recurse-depth": [[504, "cmdoption-llvm-dwarfdump-parent-recurse-depth", false]], "--path": [[491, "cmdoption-lit-path", false]], "--perfscript": [[519, "cmdoption-llvm-profgen-perfscript", false]], "--portability": [[514, "cmdoption-llvm-nm-portability", false]], "--prefix": [[516, "cmdoption-llvm-objdump-prefix", false]], "--prefix-alloc-sections": [[515, "cmdoption-llvm-objcopy-prefix-alloc-sections", false]], "--prefix-symbols": [[515, "cmdoption-llvm-objcopy-prefix-symbols", false]], "--preserve-dates": [[515, "cmdoption-llvm-objcopy-preserve-dates", false], [526, "cmdoption-llvm-strip-preserve-dates", false]], "--preserve-paths": [[499, "cmdoption-llvm-cov-gcov-p", false]], "--pretty-print": [[527, "cmdoption-llvm-symbolizer-pretty-print", false]], "--print-address": [[527, "cmdoption-llvm-symbolizer-print-address", false]], "--print-after-isel": [[492, "cmdoption-llc-print-after-isel", false]], "--print-armap": [[514, "cmdoption-llvm-nm-print-armap", false]], "--print-file-name": [[514, "cmdoption-llvm-nm-print-file-name", false], [525, "cmdoption-llvm-strings-print-file-name", false]], "--print-imm-hex": [[516, "cmdoption-llvm-objdump-print-imm-hex", false]], "--print-size": [[514, "cmdoption-llvm-nm-print-size", false]], "--print-source-context-lines": [[527, "cmdoption-llvm-symbolizer-print-source-context-lines", false]], "--private-header": [[516, "cmdoption-llvm-objdump-private-header", false]], "--private-headers": [[516, "cmdoption-llvm-objdump-p", false]], "--program-headers": [[521, "cmdoption-llvm-readelf-program-headers", false], [522, "cmdoption-llvm-readobj-program-headers", false]], "--quiet": [[491, "cmdoption-lit-q", false], [504, "cmdoption-llvm-dwarfdump-quiet", false]], "--radix": [[514, "cmdoption-llvm-nm-radix", false], [523, "cmdoption-llvm-size-radix", false], [525, "cmdoption-llvm-strings-radix", false]], "--raw-clang-ast": [[516, "cmdoption-llvm-objdump-raw-clang-ast", false]], "--raw-relr": [[521, "cmdoption-llvm-readelf-raw-relr", false], [522, "cmdoption-llvm-readobj-raw-relr", false]], "--rebase": [[516, "cmdoption-llvm-objdump-rebase", false]], "--recurse-depth": [[504, "cmdoption-llvm-dwarfdump-r", false]], "--redefine-sym": [[515, "cmdoption-llvm-objcopy-redefine-sym", false]], "--redefine-syms": [[515, "cmdoption-llvm-objcopy-redefine-syms", false]], "--regalloc": [[492, "cmdoption-llc-regalloc", false]], "--regex": [[504, "cmdoption-llvm-dwarfdump-x", false], [515, "cmdoption-llvm-objcopy-regex", false], [526, "cmdoption-llvm-strip-regex", false]], "--relativenames": [[527, "cmdoption-llvm-symbolizer-relativenames", false]], "--reloc": [[516, "cmdoption-llvm-objdump-r", false]], "--relocations": [[521, "cmdoption-llvm-readelf-relocations", false], [522, "cmdoption-llvm-readobj-relocations", false]], "--relocs": [[521, "cmdoption-llvm-readelf-relocations", false], [522, "cmdoption-llvm-readobj-relocations", false]], "--remarks-output-format": [[489, "cmdoption-dsymutil-remarks-output-format", false]], "--remarks-prepend-path": [[489, "cmdoption-dsymutil-remarks-prepend-path", false]], "--remove-section": [[515, "cmdoption-llvm-objcopy-remove-section", false], [526, "cmdoption-llvm-strip-remove-section", false]], "--rename-section": [[515, "cmdoption-llvm-objcopy-rename-section", false]], "--reverse-sort": [[514, "cmdoption-llvm-nm-reverse-sort", false]], "--run-shard": [[491, "cmdoption-lit-run-shard", false]], "--sd": [[522, "cmdoption-llvm-readobj-section-data", false]], "--section": [[516, "cmdoption-llvm-objdump-j", false]], "--section-data": [[521, "cmdoption-llvm-readelf-section-data", false], [522, "cmdoption-llvm-readobj-section-data", false]], "--section-details": [[521, "cmdoption-llvm-readelf-section-details", false]], "--section-groups": [[521, "cmdoption-llvm-readelf-elf-section-groups", false], [522, "cmdoption-llvm-readobj-elf-section-groups", false]], "--section-headers": [[516, "cmdoption-llvm-objdump-h", false], [521, "cmdoption-llvm-readelf-sections", false], [522, "cmdoption-llvm-readobj-sections", false]], "--section-mapping": [[521, "cmdoption-llvm-readelf-section-mapping", false], [522, "cmdoption-llvm-readobj-section-mapping", false]], "--section-relocations": [[521, "cmdoption-llvm-readelf-section-relocations", false], [522, "cmdoption-llvm-readobj-section-relocations", false]], "--section-symbols": [[521, "cmdoption-llvm-readelf-section-symbols", false], [522, "cmdoption-llvm-readobj-section-symbols", false]], "--sections": [[521, "cmdoption-llvm-readelf-sections", false], [522, "cmdoption-llvm-readobj-sections", false]], "--segments": [[521, "cmdoption-llvm-readelf-program-headers", false], [522, "cmdoption-llvm-readobj-program-headers", false]], "--set-section-alignment": [[515, "cmdoption-llvm-objcopy-set-section-alignment", false]], "--set-section-flags": [[515, "cmdoption-llvm-objcopy-set-section-flags", false]], "--set-start-addr": [[515, "cmdoption-llvm-objcopy-set-start-addr", false]], "--show-all": [[491, "cmdoption-lit-a", false]], "--show-children": [[504, "cmdoption-llvm-dwarfdump-c", false]], "--show-disassembly": [[519, "cmdoption-llvm-profgen-show-disassembly", false]], "--show-form": [[504, "cmdoption-llvm-dwarfdump-F", false]], "--show-lma": [[516, "cmdoption-llvm-objdump-show-lma", false]], "--show-mmap-events": [[519, "cmdoption-llvm-profgen-show-mmap-events", false]], "--show-parents": [[504, "cmdoption-llvm-dwarfdump-p", false]], "--show-section-sizes": [[504, "cmdoption-llvm-dwarfdump-show-section-sizes", false]], "--show-suites": [[491, "cmdoption-lit-show-suites", false]], "--show-tests": [[491, "cmdoption-lit-show-tests", false]], "--show-unsupported": [[491, "cmdoption-lit-show-unsupported", false]], "--show-xfail": [[491, "cmdoption-lit-show-xfail", false]], "--shuffle": [[491, "cmdoption-lit-shuffle", false]], "--size-sort": [[514, "cmdoption-llvm-nm-size-sort", false]], "--source": [[516, "cmdoption-llvm-objdump-S", false]], "--special-syms": [[514, "cmdoption-llvm-nm-special-syms", false]], "--spiller": [[492, "cmdoption-llc-spiller", false]], "--split-dwo": [[515, "cmdoption-llvm-objcopy-split-dwo", false]], "--sr": [[522, "cmdoption-llvm-readobj-section-relocations", false]], "--st": [[522, "cmdoption-llvm-readobj-section-symbols", false]], "--stack-sizes": [[521, "cmdoption-llvm-readelf-stack-sizes", false], [522, "cmdoption-llvm-readobj-stack-sizes", false]], "--stackmap": [[521, "cmdoption-llvm-readelf-stackmap", false], [522, "cmdoption-llvm-readobj-stackmap", false]], "--start-address": [[516, "cmdoption-llvm-objdump-start-address", false]], "--statistics": [[489, "cmdoption-dsymutil-statistics", false], [504, "cmdoption-llvm-dwarfdump-statistics", false]], "--stats": [[492, "cmdoption-llc-stats", false]], "--stop-address": [[516, "cmdoption-llvm-objdump-stop-address", false]], "--strict-whitespace": [[487, "cmdoption-FileCheck-strict-whitespace", false]], "--string-dump": [[521, "cmdoption-llvm-readelf-string-dump", false], [522, "cmdoption-llvm-readobj-string-dump", false]], "--strip-all": [[515, "cmdoption-llvm-objcopy-strip-all", false], [526, "cmdoption-llvm-strip-strip-all", false]], "--strip-all-gnu": [[515, "cmdoption-llvm-objcopy-strip-all-gnu", false], [526, "cmdoption-llvm-strip-strip-all-gnu", false]], "--strip-debug": [[515, "cmdoption-llvm-objcopy-strip-debug", false], [526, "cmdoption-llvm-strip-strip-debug", false]], "--strip-dwo": [[515, "cmdoption-llvm-objcopy-strip-dwo", false]], "--strip-non-alloc": [[515, "cmdoption-llvm-objcopy-strip-non-alloc", false]], "--strip-sections": [[515, "cmdoption-llvm-objcopy-strip-sections", false], [526, "cmdoption-llvm-strip-strip-sections", false]], "--strip-symbol": [[515, "cmdoption-llvm-objcopy-strip-symbol", false], [526, "cmdoption-llvm-strip-strip-symbol", false]], "--strip-symbols": [[515, "cmdoption-llvm-objcopy-strip-symbols", false]], "--strip-underscore": [[500, "cmdoption-llvm-cxxfilt-strip-underscore", false]], "--strip-unneeded": [[515, "cmdoption-llvm-objcopy-strip-unneeded", false], [526, "cmdoption-llvm-strip-strip-unneeded", false]], "--strip-unneeded-symbol": [[515, "cmdoption-llvm-objcopy-strip-unneeded-symbol", false]], "--strip-unneeded-symbols": [[515, "cmdoption-llvm-objcopy-strip-unneeded-symbols", false]], "--succinct": [[491, "cmdoption-lit-s", false]], "--summarize-types": [[504, "cmdoption-llvm-dwarfdump-summarize-types", false]], "--symbol-description": [[516, "cmdoption-llvm-objdump-symbol-description", false]], "--symbol-map": [[489, "cmdoption-dsymutil-symbol-map", false]], "--symbolize-operands": [[516, "cmdoption-llvm-objdump-symbolize-operands", false]], "--symbols": [[521, "cmdoption-llvm-readelf-symbols", false], [522, "cmdoption-llvm-readobj-symbols", false]], "--syms": [[516, "cmdoption-llvm-objdump-t", false], [521, "cmdoption-llvm-readelf-symbols", false], [522, "cmdoption-llvm-readobj-symbols", false]], "--symtab": [[489, "cmdoption-dsymutil-s", false]], "--target": [[515, "cmdoption-llvm-objcopy-target", false]], "--time-passes": [[492, "cmdoption-llc-time-passes", false]], "--time-tests": [[491, "cmdoption-lit-time-tests", false]], "--timeout": [[491, "cmdoption-lit-timeout", false]], "--toolchain": [[489, "cmdoption-dsymutil-toolchain", false]], "--totals": [[523, "cmdoption-llvm-size-totals", false]], "--triple": [[516, "cmdoption-llvm-objdump-triple", false]], "--types": [[500, "cmdoption-llvm-cxxfilt-types", false]], "--unconditional-branches": [[499, "cmdoption-llvm-cov-gcov-u", false]], "--undefined-only": [[514, "cmdoption-llvm-nm-undefined-only", false]], "--universal-headers": [[516, "cmdoption-llvm-objdump-universal-headers", false]], "--unwind": [[521, "cmdoption-llvm-readelf-unwind", false], [522, "cmdoption-llvm-readobj-unwind", false]], "--unwind-info": [[516, "cmdoption-llvm-objdump-u", false]], "--update": [[489, "cmdoption-dsymutil-u", false]], "--use-reproducer": [[489, "cmdoption-dsymutil-use-reproducer", false]], "--use-symbol-table": [[527, "cmdoption-llvm-symbolizer-use-symbol-table", false]], "--uuid": [[504, "cmdoption-llvm-dwarfdump-u", false]], "--verbose": [[489, "cmdoption-dsymutil-verbose", false], [491, "cmdoption-lit-v", false], [504, "cmdoption-llvm-dwarfdump-v", false], [527, "cmdoption-llvm-symbolizer-verbose", false]], "--verify": [[489, "cmdoption-dsymutil-verify", false], [504, "cmdoption-llvm-dwarfdump-verify", false]], "--version": [[489, "cmdoption-dsymutil-v", false], [495, "cmdoption-llvm-ar-version", false], [500, "cmdoption-llvm-cxxfilt-version", false], [504, "cmdoption-llvm-dwarfdump-version", false], [507, "cmdoption-llvm-install-name-tool-version", false], [514, "cmdoption-llvm-nm-version", false], [515, "cmdoption-llvm-objcopy-version", false], [516, "cmdoption-llvm-objdump-version", false], [521, "cmdoption-llvm-readelf-version", false], [522, "cmdoption-llvm-readobj-version", false], [523, "cmdoption-llvm-size-version", false], [525, "cmdoption-llvm-strings-version", false], [526, "cmdoption-llvm-strip-version", false], [527, "cmdoption-llvm-symbolizer-version", false]], "--version-info": [[521, "cmdoption-llvm-readelf-version-info", false], [522, "cmdoption-llvm-readobj-version-info", false]], "--vg": [[491, "cmdoption-lit-vg", false]], "--vg-arg": [[491, "cmdoption-lit-vg-arg", false]], "--vg-leak": [[491, "cmdoption-lit-vg-leak", false]], "--weak-bind": [[516, "cmdoption-llvm-objdump-weak-bind", false]], "--weaken": [[515, "cmdoption-llvm-objcopy-weaken", false]], "--weaken-symbol": [[515, "cmdoption-llvm-objcopy-weaken-symbol", false]], "--weaken-symbols": [[515, "cmdoption-llvm-objcopy-weaken-symbols", false]], "--wide": [[516, "cmdoption-llvm-objdump-w", false]], "--wildcard": [[515, "cmdoption-llvm-objcopy-wildcard", false], [526, "cmdoption-llvm-strip-wildcard", false]], "--without-aliases": [[514, "cmdoption-llvm-nm-without-aliases", false]], "--workers": [[491, "cmdoption-lit-j", false]], "--x86-asm-syntax": [[492, "cmdoption-llc-x86-asm-syntax", false], [516, "cmdoption-llvm-objdump-x86-asm-syntax", false], [519, "cmdoption-llvm-profgen-x86-asm-syntax", false]], "-_": [[500, "cmdoption-llvm-cxxfilt-strip-underscore", false]], "-a": [[491, "cmdoption-lit-a", false], [499, "cmdoption-llvm-cov-gcov-a", false], [504, "cmdoption-llvm-dwarfdump-a", false], [514, "cmdoption-llvm-nm-print-file-name", false], [514, "cmdoption-llvm-nm-debug-syms", false], [516, "cmdoption-llvm-objdump-a", false], [521, "cmdoption-llvm-readelf-arch-specific", false], [522, "cmdoption-llvm-readobj-arch-specific", false], [523, "cmdoption-llvm-size-A", false], [525, "cmdoption-llvm-strings-all", false], [527, "cmdoption-llvm-symbolizer-print-address", false]], "-add_rpath": [[507, "cmdoption-llvm-install-name-tool-add_rpath", false]], "-all": [[517, "cmdoption-llvm-pdbutil-dump-all", false], [517, "cmdoption-llvm-pdbutil-pretty-all", false]], "-all-functions": [[518, "cmdoption-llvm-profdata-show-all-functions", false]], "-all-stats": [[513, "cmdoption-llvm-mca-all-stats", false]], "-all-views": [[513, "cmdoption-llvm-mca-all-views", false]], "-analysis-clustering": [[505, "cmdoption-llvm-exegesis-analysis-clustering", false]], "-analysis-clustering-epsilon": [[505, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", false]], "-analysis-clusters-output-file": [[505, "cmdoption-llvm-exegesis-analysis-clusters-output-file", false]], "-analysis-display-unstable-clusters": [[505, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", false]], "-analysis-inconsistencies-output-file": [[505, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", false]], "-analysis-inconsistency-epsilon": [[505, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", false]], "-analysis-numpoints": [[505, "cmdoption-llvm-exegesis-analysis-numpoints", false]], "-arch": [[499, "cmdoption-llvm-cov-export-arch", false], [499, "cmdoption-llvm-cov-report-arch", false], [499, "cmdoption-llvm-cov-show-arch", false]], "-arch_only": [[509, "cmdoption-llvm-libtool-darwin-arch_only", false]], "-archs": [[511, "cmdoption-llvm-lipo-archs", false]], "-asmformat-error-is-fatal": [[529, "cmdoption-tblgen-asmformat-error-is-fatal", false]], "-asmparsernum": [[529, "cmdoption-tblgen-asmparsernum", false]], "-asmwriternum": [[529, "cmdoption-tblgen-asmwriternum", false]], "-b": [[499, "cmdoption-llvm-cov-gcov-b", false], [514, "cmdoption-llvm-nm-B", false], [515, "cmdoption-llvm-objcopy-binary-architecture", false], [523, "cmdoption-llvm-size-B", false]], "-benchmarks-file": [[505, "cmdoption-llvm-exegesis-benchmarks-file", false]], "-binary": [[518, "cmdoption-llvm-profdata-merge-binary", false]], "-block-range": [[517, "cmdoption-llvm-pdbutil-bytes-block-range", false]], "-bottleneck-analysis": [[513, "cmdoption-llvm-mca-bottleneck-analysis", false]], "-byte-range": [[517, "cmdoption-llvm-pdbutil-bytes-byte-range", false]], "-c": [[499, "cmdoption-llvm-cov-gcov-c", false], [504, "cmdoption-llvm-dwarfdump-c", false], [514, "cmdoption-llvm-nm-demangle", false], [516, "cmdoption-llvm-objdump-C", false], [521, "cmdoption-llvm-readelf-demangle", false], [522, "cmdoption-llvm-readobj-demangle", false], [527, "cmdoption-llvm-symbolizer-demangle", false]], "-change": [[507, "cmdoption-llvm-install-name-tool-change", false]], "-chunks": [[517, "cmdoption-llvm-pdbutil-bytes-chunks", false]], "-clang-component": [[529, "cmdoption-tblgen-clang-component", false]], "-class": [[529, "cmdoption-tblgen-class", false]], "-class-definitions": [[517, "cmdoption-llvm-pdbutil-pretty-class-definitions", false]], "-class-order": [[517, "cmdoption-llvm-pdbutil-pretty-class-order", false]], "-class-recurse-depth": [[517, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false]], "-classes": [[517, "cmdoption-llvm-pdbutil-pretty-classes", false]], "-code-model": [[493, "cmdoption-lli-code-model", false]], "-color": [[509, "cmdoption-llvm-libtool-darwin-color", false]], "-color-output": [[517, "cmdoption-llvm-pdbutil-pretty-color-output", false]], "-combiners": [[529, "cmdoption-tblgen-combiners", false]], "-compilands": [[517, "cmdoption-llvm-pdbutil-pretty-compilands", false]], "-compress-all-sections": [[518, "cmdoption-llvm-profdata-merge-compress-all-sections", false]], "-counts": [[518, "cmdoption-llvm-profdata-show-counts", false]], "-create": [[511, "cmdoption-llvm-lipo-create", false]], "-cs": [[518, "cmdoption-llvm-profdata-overlap-cs", false]], "-d": [[491, "cmdoption-lit-D", false], [509, "cmdoption-llvm-libtool-darwin-D", false], [510, "cmdoption-llvm-link-d", false], [514, "cmdoption-llvm-nm-dynamic", false], [515, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [516, "cmdoption-llvm-objdump-D", false], [516, "cmdoption-llvm-objdump-d", false], [521, "cmdoption-llvm-readelf-dynamic-table", false], [522, "cmdoption-llvm-readobj-dynamic-table", false], [523, "cmdoption-llvm-size-d", false], [526, "cmdoption-llvm-strip-enable-deterministic-archives", false], [529, "cmdoption-tblgen-D", false], [529, "cmdoption-tblgen-d", false]], "-d#<fmt>,<numvar>": [[487, "cmdoption-FileCheck-D-FMT-NUMVAR", false]], "-d<var": [[487, "cmdoption-FileCheck-D-VAR", false]], "-debug": [[528, "cmdoption-opt-debug", false], [529, "cmdoption-tblgen-debug", false]], "-delete_all_rpaths": [[507, "cmdoption-llvm-install-name-tool-delete_all_rpaths", false]], "-delete_rpath": [[507, "cmdoption-llvm-install-name-tool-delete_rpath", false]], "-dependents": [[517, "cmdoption-llvm-pdbutil-dump-dependents", false]], "-dialect": [[529, "cmdoption-tblgen-dialect", false]], "-dialect-opclass-base": [[529, "cmdoption-tblgen-dialect-opclass-base", false]], "-disable-excess-fp-precision": [[493, "cmdoption-lli-disable-excess-fp-precision", false]], "-disable-inlining": [[528, "cmdoption-opt-disable-inlining", false]], "-disable-opt": [[528, "cmdoption-opt-disable-opt", false]], "-disable-post-ra-scheduler": [[493, "cmdoption-lli-disable-post-RA-scheduler", false]], "-disable-spill-fusing": [[493, "cmdoption-lli-disable-spill-fusing", false]], "-dispatch": [[513, "cmdoption-llvm-mca-dispatch", false]], "-dispatch-stats": [[513, "cmdoption-llvm-mca-dispatch-stats", false]], "-dump": [[497, "cmdoption-llvm-bcanalyzer-dump", false]], "-dump-json": [[529, "cmdoption-tblgen-dump-json", false]], "-e": [[521, "cmdoption-llvm-readelf-headers", false], [522, "cmdoption-llvm-readobj-headers", false], [527, "cmdoption-llvm-symbolizer-obj", false]], "-ec": [[517, "cmdoption-llvm-pdbutil-bytes-ec", false]], "-enable-no-infs-fp-math": [[493, "cmdoption-lli-enable-no-infs-fp-math", false]], "-enable-no-nans-fp-math": [[493, "cmdoption-lli-enable-no-nans-fp-math", false]], "-enable-unsafe-fp-math": [[493, "cmdoption-lli-enable-unsafe-fp-math", false]], "-enums": [[517, "cmdoption-llvm-pdbutil-pretty-enums", false]], "-exclude-compilands": [[517, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false]], "-exclude-symbols": [[517, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false]], "-exclude-types": [[517, "cmdoption-llvm-pdbutil-pretty-exclude-types", false]], "-extbinary": [[518, "cmdoption-llvm-profdata-merge-extbinary", false]], "-externals": [[517, "cmdoption-llvm-pdbutil-pretty-externals", false]], "-f": [[489, "cmdoption-dsymutil-flat", false], [499, "cmdoption-llvm-cov-gcov-f", false], [504, "cmdoption-llvm-dwarfdump-F", false], [504, "cmdoption-llvm-dwarfdump-f", false], [510, "cmdoption-llvm-link-f", false], [514, "cmdoption-llvm-nm-format", false], [515, "cmdoption-llvm-objcopy-target", false], [516, "cmdoption-llvm-objdump-f", false], [518, "cmdoption-llvm-profdata-merge-input-files", false], [525, "cmdoption-llvm-strings-print-file-name", false], [527, "cmdoption-llvm-symbolizer-functions", false], [528, "cmdoption-opt-f", false]], "-failure-mode": [[518, "cmdoption-llvm-profdata-merge-failure-mode", false]], "-fake-argv0": [[493, "cmdoption-lli-fake-argv0", false]], "-filelist": [[509, "cmdoption-llvm-libtool-darwin-filelist", false]], "-files": [[517, "cmdoption-llvm-pdbutil-bytes-files", false], [517, "cmdoption-llvm-pdbutil-dump-files", false]], "-filetype": [[492, "cmdoption-llc-filetype", false]], "-force-interpreter": [[493, "cmdoption-lli-force-interpreter", false]], "-format": [[499, "cmdoption-llvm-cov-export-format", false], [499, "cmdoption-llvm-cov-show-format", false]], "-fpm": [[517, "cmdoption-llvm-pdbutil-bytes-fpm", false]], "-function": [[518, "cmdoption-llvm-profdata-overlap-function", false], [518, "cmdoption-llvm-profdata-show-function", false]], "-g": [[514, "cmdoption-llvm-nm-extern-only", false], [515, "cmdoption-llvm-objcopy-strip-debug", false], [516, "cmdoption-llvm-objdump-g", false], [521, "cmdoption-llvm-readelf-elf-section-groups", false], [522, "cmdoption-llvm-readobj-elf-section-groups", false], [526, "cmdoption-llvm-strip-strip-debug", false]], "-gcc": [[518, "cmdoption-llvm-profdata-merge-gcc", false]], "-gen-arm-bf16": [[529, "cmdoption-tblgen-gen-arm-bf16", false]], "-gen-arm-cde-builtin-aliases": [[529, "cmdoption-tblgen-gen-arm-cde-builtin-aliases", false]], "-gen-arm-cde-builtin-codegen": [[529, "cmdoption-tblgen-gen-arm-cde-builtin-codegen", false]], "-gen-arm-cde-builtin-def": [[529, "cmdoption-tblgen-gen-arm-cde-builtin-def", false]], "-gen-arm-cde-builtin-sema": [[529, "cmdoption-tblgen-gen-arm-cde-builtin-sema", false]], "-gen-arm-cde-header": [[529, "cmdoption-tblgen-gen-arm-cde-header", false]], "-gen-arm-fp16": [[529, "cmdoption-tblgen-gen-arm-fp16", false]], "-gen-arm-mve-builtin-aliases": [[529, "cmdoption-tblgen-gen-arm-mve-builtin-aliases", false]], "-gen-arm-mve-builtin-codegen": [[529, "cmdoption-tblgen-gen-arm-mve-builtin-codegen", false]], "-gen-arm-mve-builtin-def": [[529, "cmdoption-tblgen-gen-arm-mve-builtin-def", false]], "-gen-arm-mve-builtin-sema": [[529, "cmdoption-tblgen-gen-arm-mve-builtin-sema", false]], "-gen-arm-mve-header": [[529, "cmdoption-tblgen-gen-arm-mve-header", false]], "-gen-arm-neon": [[529, "cmdoption-tblgen-gen-arm-neon", false]], "-gen-arm-neon-sema": [[529, "cmdoption-tblgen-gen-arm-neon-sema", false]], "-gen-arm-neon-test": [[529, "cmdoption-tblgen-gen-arm-neon-test", false]], "-gen-arm-sve-builtin-codegen": [[529, "cmdoption-tblgen-gen-arm-sve-builtin-codegen", false]], "-gen-arm-sve-builtins": [[529, "cmdoption-tblgen-gen-arm-sve-builtins", false]], "-gen-arm-sve-header": [[529, "cmdoption-tblgen-gen-arm-sve-header", false]], "-gen-arm-sve-sema-rangechecks": [[529, "cmdoption-tblgen-gen-arm-sve-sema-rangechecks", false]], "-gen-arm-sve-typeflags": [[529, "cmdoption-tblgen-gen-arm-sve-typeflags", false]], "-gen-asm-matcher": [[529, "cmdoption-tblgen-gen-asm-matcher", false]], "-gen-asm-parser": [[529, "cmdoption-tblgen-gen-asm-parser", false]], "-gen-asm-writer": [[529, "cmdoption-tblgen-gen-asm-writer", false]], "-gen-attr-docs": [[529, "cmdoption-tblgen-gen-attr-docs", false]], "-gen-attrs": [[529, "cmdoption-tblgen-gen-attrs", false]], "-gen-automata": [[529, "cmdoption-tblgen-gen-automata", false]], "-gen-avail-interface-decls": [[529, "cmdoption-tblgen-gen-avail-interface-decls", false]], "-gen-avail-interface-defs": [[529, "cmdoption-tblgen-gen-avail-interface-defs", false]], "-gen-callingconv": [[529, "cmdoption-tblgen-gen-callingconv", false]], "-gen-clang-attr-ast-visitor": [[529, "cmdoption-tblgen-gen-clang-attr-ast-visitor", false]], "-gen-clang-attr-classes": [[529, "cmdoption-tblgen-gen-clang-attr-classes", false]], "-gen-clang-attr-has-attribute-impl": [[529, "cmdoption-tblgen-gen-clang-attr-has-attribute-impl", false]], "-gen-clang-attr-impl": [[529, "cmdoption-tblgen-gen-clang-attr-impl", false]], "-gen-clang-attr-list\"": [[529, "cmdoption-tblgen-gen-clang-attr-list", false]], "-gen-clang-attr-node-traverse": [[529, "cmdoption-tblgen-gen-clang-attr-node-traverse", false]], "-gen-clang-attr-parsed-attr-impl": [[529, "cmdoption-tblgen-gen-clang-attr-parsed-attr-impl", false]], "-gen-clang-attr-parsed-attr-kinds": [[529, "cmdoption-tblgen-gen-clang-attr-parsed-attr-kinds", false]], "-gen-clang-attr-parsed-attr-list": [[529, "cmdoption-tblgen-gen-clang-attr-parsed-attr-list", false]], "-gen-clang-attr-parser-string-switches": [[529, "cmdoption-tblgen-gen-clang-attr-parser-string-switches", false]], "-gen-clang-attr-pch-read": [[529, "cmdoption-tblgen-gen-clang-attr-pch-read", false]], "-gen-clang-attr-pch-write": [[529, "cmdoption-tblgen-gen-clang-attr-pch-write", false]], "-gen-clang-attr-spelling-index": [[529, "cmdoption-tblgen-gen-clang-attr-spelling-index", false]], "-gen-clang-attr-subject-match-rule-list": [[529, "cmdoption-tblgen-gen-clang-attr-subject-match-rule-list", false]], "-gen-clang-attr-subject-match-rules-parser-string-switches": [[529, "cmdoption-tblgen-gen-clang-attr-subject-match-rules-parser-string-switches", false]], "-gen-clang-attr-template-instantiate": [[529, "cmdoption-tblgen-gen-clang-attr-template-instantiate", false]], "-gen-clang-attr-text-node-dump": [[529, "cmdoption-tblgen-gen-clang-attr-text-node-dump", false]], "-gen-clang-basic-reader": [[529, "cmdoption-tblgen-gen-clang-basic-reader", false]], "-gen-clang-basic-writer": [[529, "cmdoption-tblgen-gen-clang-basic-writer", false]], "-gen-clang-comment-command-info": [[529, "cmdoption-tblgen-gen-clang-comment-command-info", false]], "-gen-clang-comment-command-list": [[529, "cmdoption-tblgen-gen-clang-comment-command-list", false]], "-gen-clang-comment-html-named-character-references": [[529, "cmdoption-tblgen-gen-clang-comment-html-named-character-references", false]], "-gen-clang-comment-html-tags": [[529, "cmdoption-tblgen-gen-clang-comment-html-tags", false]], "-gen-clang-comment-html-tags-properties": [[529, "cmdoption-tblgen-gen-clang-comment-html-tags-properties", false]], "-gen-clang-comment-nodes": [[529, "cmdoption-tblgen-gen-clang-comment-nodes", false]], "-gen-clang-data-collectors": [[529, "cmdoption-tblgen-gen-clang-data-collectors", false]], "-gen-clang-decl-nodes": [[529, "cmdoption-tblgen-gen-clang-decl-nodes", false]], "-gen-clang-diag-groups": [[529, "cmdoption-tblgen-gen-clang-diag-groups", false]], "-gen-clang-diags-defs": [[529, "cmdoption-tblgen-gen-clang-diags-defs", false]], "-gen-clang-diags-index-name": [[529, "cmdoption-tblgen-gen-clang-diags-index-name", false]], "-gen-clang-opcodes": [[529, "cmdoption-tblgen-gen-clang-opcodes", false]], "-gen-clang-opencl-builtins": [[529, "cmdoption-tblgen-gen-clang-opencl-builtins", false]], "-gen-clang-sa-checkers": [[529, "cmdoption-tblgen-gen-clang-sa-checkers", false]], "-gen-clang-stmt-nodes": [[529, "cmdoption-tblgen-gen-clang-stmt-nodes", false]], "-gen-clang-test-pragma-attribute-supported-attributes": [[529, "cmdoption-tblgen-gen-clang-test-pragma-attribute-supported-attributes", false]], "-gen-clang-type-nodes": [[529, "cmdoption-tblgen-gen-clang-type-nodes", false]], "-gen-clang-type-reader": [[529, "cmdoption-tblgen-gen-clang-type-reader", false]], "-gen-clang-type-writer": [[529, "cmdoption-tblgen-gen-clang-type-writer", false]], "-gen-compress-inst-emitter": [[529, "cmdoption-tblgen-gen-compress-inst-emitter", false]], "-gen-ctags": [[529, "cmdoption-tblgen-gen-ctags", false]], "-gen-dag-isel": [[529, "cmdoption-tblgen-gen-dag-isel", false]], "-gen-dfa-packetizer": [[529, "cmdoption-tblgen-gen-dfa-packetizer", false]], "-gen-diag-docs": [[529, "cmdoption-tblgen-gen-diag-docs", false]], "-gen-dialect-doc": [[529, "cmdoption-tblgen-gen-dialect-doc", false]], "-gen-directive-decl": [[529, "cmdoption-tblgen-0", false], [529, "cmdoption-tblgen-gen-directive-decl", false]], "-gen-directive-gen": [[529, "cmdoption-tblgen-gen-directive-gen", false]], "-gen-directive-impl": [[529, "cmdoption-tblgen-gen-directive-impl", false]], "-gen-disassembler": [[529, "cmdoption-tblgen-gen-disassembler", false]], "-gen-emitter": [[529, "cmdoption-tblgen-gen-emitter", false]], "-gen-enum-decls": [[529, "cmdoption-tblgen-gen-enum-decls", false]], "-gen-enum-defs": [[529, "cmdoption-tblgen-gen-enum-defs", false]], "-gen-enum-from-llvmir-conversions": [[529, "cmdoption-tblgen-gen-enum-from-llvmir-conversions", false]], "-gen-enum-to-llvmir-conversions": [[529, "cmdoption-tblgen-gen-enum-to-llvmir-conversions", false]], "-gen-exegesis": [[529, "cmdoption-tblgen-gen-exegesis", false]], "-gen-fast-isel": [[529, "cmdoption-tblgen-gen-fast-isel", false]], "-gen-global-isel": [[529, "cmdoption-tblgen-gen-global-isel", false]], "-gen-global-isel-combiner": [[529, "cmdoption-tblgen-gen-global-isel-combiner", false]], "-gen-instr-docs": [[529, "cmdoption-tblgen-gen-instr-docs", false]], "-gen-instr-info": [[529, "cmdoption-tblgen-gen-instr-info", false]], "-gen-intrinsic-enums": [[529, "cmdoption-tblgen-gen-intrinsic-enums", false]], "-gen-intrinsic-impl": [[529, "cmdoption-tblgen-gen-intrinsic-impl", false]], "-gen-llvmir-conversions": [[529, "cmdoption-tblgen-gen-llvmir-conversions", false]], "-gen-llvmir-intrinsics": [[529, "cmdoption-tblgen-gen-llvmir-intrinsics", false]], "-gen-op-decls": [[529, "cmdoption-tblgen-gen-op-decls", false]], "-gen-op-defs": [[529, "cmdoption-tblgen-gen-op-defs", false]], "-gen-op-doc": [[529, "cmdoption-tblgen-gen-op-doc", false]], "-gen-opt-docs": [[529, "cmdoption-tblgen-gen-opt-docs", false]], "-gen-opt-parser-defs": [[529, "cmdoption-tblgen-gen-opt-parser-defs", false]], "-gen-opt-rst": [[529, "cmdoption-tblgen-gen-opt-rst", false]], "-gen-partial-profile": [[518, "cmdoption-llvm-profdata-merge-gen-partial-profile", false]], "-gen-pass-decls": [[529, "cmdoption-tblgen-gen-pass-decls", false]], "-gen-pass-doc": [[529, "cmdoption-tblgen-gen-pass-doc", false]], "-gen-pseudo-lowering": [[529, "cmdoption-tblgen-gen-pseudo-lowering", false]], "-gen-register-bank": [[529, "cmdoption-tblgen-gen-register-bank", false]], "-gen-register-info": [[529, "cmdoption-tblgen-gen-register-info", false]], "-gen-rewriters": [[529, "cmdoption-tblgen-gen-rewriters", false]], "-gen-searchable-tables": [[529, "cmdoption-tblgen-gen-searchable-tables", false]], "-gen-spirv-avail-impls": [[529, "cmdoption-tblgen-gen-spirv-avail-impls", false]], "-gen-spirv-capability-implication": [[529, "cmdoption-tblgen-gen-spirv-capability-implication", false]], "-gen-spirv-enum-avail-decls": [[529, "cmdoption-tblgen-gen-spirv-enum-avail-decls", false]], "-gen-spirv-enum-avail-defs": [[529, "cmdoption-tblgen-gen-spirv-enum-avail-defs", false]], "-gen-spirv-op-utils": [[529, "cmdoption-tblgen-gen-spirv-op-utils", false]], "-gen-spirv-serialization": [[529, "cmdoption-tblgen-gen-spirv-serialization", false]], "-gen-struct-attr-decls": [[529, "cmdoption-tblgen-gen-struct-attr-decls", false]], "-gen-struct-attr-defs": [[529, "cmdoption-tblgen-gen-struct-attr-defs", false]], "-gen-subtarget": [[529, "cmdoption-tblgen-gen-subtarget", false]], "-gen-typedef-decls": [[529, "cmdoption-tblgen-gen-typedef-decls", false]], "-gen-typedef-defs": [[529, "cmdoption-tblgen-gen-typedef-defs", false]], "-gen-x86-evex2vex-tables": [[529, "cmdoption-tblgen-gen-x86-EVEX2VEX-tables", false]], "-gen-x86-fold-tables": [[529, "cmdoption-tblgen-gen-x86-fold-tables", false]], "-gicombiner-show-expansions": [[529, "cmdoption-tblgen-gicombiner-show-expansions", false]], "-gicombiner-stop-after-build": [[529, "cmdoption-tblgen-gicombiner-stop-after-build", false]], "-gicombiner-stop-after-parse": [[529, "cmdoption-tblgen-gicombiner-stop-after-parse", false]], "-gisel-coverage-file": [[529, "cmdoption-tblgen-gisel-coverage-file", false]], "-global-extras": [[517, "cmdoption-llvm-pdbutil-dump-global-extras", false]], "-globals": [[517, "cmdoption-llvm-pdbutil-dump-globals", false], [517, "cmdoption-llvm-pdbutil-pretty-globals", false]], "-h": [[489, "cmdoption-dsymutil-help", false], [491, "cmdoption-lit-h", false], [495, "cmdoption-llvm-ar-h", false], [500, "cmdoption-llvm-cxxfilt-help", false], [504, "cmdoption-llvm-dwarfdump-h", false], [507, "cmdoption-llvm-install-name-tool-help", false], [509, "cmdoption-llvm-libtool-darwin-h", false], [511, "cmdoption-llvm-lipo-help", false], [514, "cmdoption-llvm-nm-help", false], [515, "cmdoption-llvm-objcopy-help", false], [516, "cmdoption-llvm-objdump-h", false], [521, "cmdoption-llvm-readelf-file-headers", false], [522, "cmdoption-llvm-readobj-file-headers", false], [523, "cmdoption-llvm-size-help", false], [525, "cmdoption-llvm-strings-help", false], [526, "cmdoption-llvm-strip-help", false], [527, "cmdoption-llvm-symbolizer-help", false]], "-help": [[487, "cmdoption-FileCheck-help", false], [492, "cmdoption-llc-help", false], [493, "cmdoption-lli-help", false], [497, "cmdoption-llvm-bcanalyzer-help", false], [505, "cmdoption-llvm-exegesis-help", false], [509, "cmdoption-llvm-libtool-darwin-h", false], [510, "cmdoption-llvm-link-help", false], [511, "cmdoption-llvm-lipo-help", false], [513, "cmdoption-llvm-mca-help", false], [518, "cmdoption-llvm-profdata-merge-help", false], [518, "cmdoption-llvm-profdata-overlap-help", false], [518, "cmdoption-llvm-profdata-show-help", false], [528, "cmdoption-opt-help", false], [529, "cmdoption-tblgen-help", false]], "-help-list": [[509, "cmdoption-llvm-libtool-darwin-help-list", false], [529, "cmdoption-tblgen-help-list", false]], "-i": [[504, "cmdoption-llvm-dwarfdump-i", false], [515, "cmdoption-llvm-objcopy-input-target", false], [521, "cmdoption-llvm-readelf-elf-hash-histogram", false], [522, "cmdoption-llvm-readobj-elf-hash-histogram", false], [527, "cmdoption-llvm-symbolizer-inlining", false], [529, "cmdoption-tblgen-I", false]], "-id": [[507, "cmdoption-llvm-install-name-tool-id", false], [517, "cmdoption-llvm-pdbutil-bytes-id", false]], "-id-data": [[517, "cmdoption-llvm-pdbutil-dump-id-data", false]], "-id-extras": [[517, "cmdoption-llvm-pdbutil-dump-id-extras", false]], "-id-index": [[517, "cmdoption-llvm-pdbutil-dump-id-index", false]], "-ids": [[517, "cmdoption-llvm-pdbutil-dump-ids", false]], "-ignore-filename-regex": [[499, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [499, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [499, "cmdoption-llvm-cov-show-ignore-filename-regex", false]], "-ignore-invalid-sched-class": [[505, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", false]], "-il": [[517, "cmdoption-llvm-pdbutil-dump-il", false]], "-include-compilands": [[517, "cmdoption-llvm-pdbutil-pretty-include-compilands", false]], "-include-symbols": [[517, "cmdoption-llvm-pdbutil-pretty-include-symbols", false]], "-include-types": [[517, "cmdoption-llvm-pdbutil-pretty-include-types", false]], "-info": [[511, "cmdoption-llvm-lipo-info", false]], "-input-files": [[518, "cmdoption-llvm-profdata-merge-input-files", false]], "-instr": [[518, "cmdoption-llvm-profdata-merge-instr", false], [518, "cmdoption-llvm-profdata-show-instr", false]], "-instr-prof-cold-threshold": [[518, "cmdoption-llvm-profdata-merge-instr-prof-cold-threshold", false]], "-instruction-info": [[513, "cmdoption-llvm-mca-instruction-info", false]], "-instruction-tables": [[513, "cmdoption-llvm-mca-instruction-tables", false]], "-instrument-coverage": [[529, "cmdoption-tblgen-instrument-coverage", false]], "-instrument-gisel-coverage": [[529, "cmdoption-tblgen-instrument-gisel-coverage", false]], "-intrinsic-prefix": [[529, "cmdoption-tblgen-intrinsic-prefix", false]], "-iterations": [[513, "cmdoption-llvm-mca-iterations", false]], "-j": [[489, "cmdoption-dsymutil-num-threads", false], [491, "cmdoption-lit-j", false], [499, "cmdoption-llvm-cov-export-num-threads", false], [499, "cmdoption-llvm-cov-show-num-threads", false], [514, "cmdoption-llvm-nm-just-symbol-name", false], [515, "cmdoption-llvm-objcopy-only-section", false], [516, "cmdoption-llvm-objdump-j", false], [518, "cmdoption-llvm-profdata-merge-num-threads", false]], "-jit-enable-eh": [[493, "cmdoption-lli-jit-enable-eh", false]], "-join-liveintervals": [[493, "cmdoption-lli-join-liveintervals", false]], "-json": [[513, "cmdoption-llvm-mca-json", false]], "-k": [[515, "cmdoption-llvm-objcopy-keep-symbol", false], [526, "cmdoption-llvm-strip-keep-symbol", false]], "-l": [[499, "cmdoption-llvm-cov-gcov-l", false], [509, "cmdoption-llvm-libtool-darwin-L", false], [509, "cmdoption-llvm-libtool-darwin-l", false], [515, "cmdoption-llvm-objcopy-localize-symbol", false], [516, "cmdoption-llvm-objdump-l", false], [517, "cmdoption-llvm-pdbutil-dump-l", false], [521, "cmdoption-llvm-readelf-program-headers", false], [522, "cmdoption-llvm-readobj-program-headers", false], [523, "cmdoption-llvm-size-l", false]], "-line-coverage-gt": [[499, "cmdoption-llvm-cov-show-line-coverage-gt", false]], "-line-coverage-lt": [[499, "cmdoption-llvm-cov-show-line-coverage-lt", false]], "-lines": [[517, "cmdoption-llvm-pdbutil-pretty-lines", false]], "-list-below-cutoff": [[518, "cmdoption-llvm-profdata-show-list-below-cutoff", false]], "-llvmir-intrinsics-filter": [[529, "cmdoption-tblgen-llvmir-intrinsics-filter", false]], "-load": [[493, "cmdoption-lli-load", false], [528, "cmdoption-opt-load", false]], "-load-address": [[517, "cmdoption-llvm-pdbutil-pretty-load-address", false]], "-long-string-literals": [[529, "cmdoption-tblgen-long-string-literals", false]], "-lqueue": [[513, "cmdoption-llvm-mca-lqueue", false]], "-lto-pass-remarks-filter": [[620, "cmdoption-lto-pass-remarks-filter", false]], "-lto-pass-remarks-format": [[620, "cmdoption-lto-pass-remarks-format", false]], "-lto-pass-remarks-hotness-threshold": [[620, "cmdoption-lto-pass-remarks-hotness-threshold", false]], "-lto-pass-remarks-output": [[620, "cmdoption-lto-pass-remarks-output", false]], "-lto-pass-remarks-with-hotness": [[620, "cmdoption-lto-pass-remarks-with-hotness", false]], "-m": [[495, "cmdoption-llvm-ar-M", false], [514, "cmdoption-llvm-nm-print-armap", false], [514, "cmdoption-llvm-nm-m", false], [516, "cmdoption-llvm-objdump-M", false], [516, "cmdoption-llvm-objdump-m", false], [523, "cmdoption-llvm-size-m", false]], "-march": [[492, "cmdoption-llc-march", false], [493, "cmdoption-lli-march", false], [513, "cmdoption-llvm-mca-march", false]], "-match-prefix": [[529, "cmdoption-tblgen-match-prefix", false]], "-mattr": [[492, "cmdoption-llc-mattr", false], [493, "cmdoption-lli-mattr", false]], "-max-configs-per-opcode": [[505, "cmdoption-llvm-exegesis-max-configs-per-opcode", false]], "-mcpu": [[492, "cmdoption-llc-mcpu", false], [493, "cmdoption-lli-mcpu", false], [505, "cmdoption-llvm-exegesis-mcpu", false], [513, "cmdoption-llvm-mca-mcpu", false]], "-meabi": [[492, "cmdoption-llc-meabi", false]], "-memop-sizes": [[518, "cmdoption-llvm-profdata-show-memop-sizes", false]], "-min-class-padding": [[517, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false]], "-min-class-padding-imm": [[517, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false]], "-min-type-size": [[517, "cmdoption-llvm-pdbutil-pretty-min-type-size", false]], "-mod": [[517, "cmdoption-llvm-pdbutil-bytes-mod", false]], "-mode": [[505, "cmdoption-llvm-exegesis-mode", false]], "-modi": [[517, "cmdoption-llvm-pdbutil-bytes-modi", false], [517, "cmdoption-llvm-pdbutil-dump-modi", false]], "-module-syms": [[517, "cmdoption-llvm-pdbutil-pretty-module-syms", false]], "-modules": [[517, "cmdoption-llvm-pdbutil-dump-modules", false]], "-mtriple": [[492, "cmdoption-llc-mtriple", false], [493, "cmdoption-lli-mtriple", false], [513, "cmdoption-llvm-mca-mtriple", false]], "-n": [[499, "cmdoption-llvm-cov-gcov-n", false], [500, "cmdoption-llvm-cxxfilt-no-strip-underscore", false], [504, "cmdoption-llvm-dwarfdump-n", false], [514, "cmdoption-llvm-nm-numeric-sort", false], [515, "cmdoption-llvm-objcopy-strip-symbol", false], [521, "cmdoption-llvm-readelf-notes", false], [522, "cmdoption-llvm-readobj-notes", false], [525, "cmdoption-llvm-strings-bytes", false], [526, "cmdoption-llvm-strip-strip-symbol", false]], "-name": [[499, "cmdoption-llvm-cov-show-name", false], [529, "cmdoption-tblgen-name", false]], "-name-map": [[517, "cmdoption-llvm-pdbutil-bytes-name-map", false]], "-name-regex": [[499, "cmdoption-llvm-cov-show-name-regex", false]], "-name-whitelist": [[499, "cmdoption-llvm-cov-show-name-whitelist", false]], "-no-compiler-generated": [[517, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false]], "-no-enum-definitions": [[517, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false]], "-no-system-libs": [[517, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false]], "-noalias": [[513, "cmdoption-llvm-mca-noalias", false]], "-nodetails": [[497, "cmdoption-llvm-bcanalyzer-nodetails", false]], "-nozero-initialized-in-bss": [[493, "cmdoption-lli-nozero-initialized-in-bss", false]], "-null-backend": [[529, "cmdoption-tblgen-null-backend", false]], "-num-repetitions": [[505, "cmdoption-llvm-exegesis-num-repetitions", false]], "-num-threads": [[499, "cmdoption-llvm-cov-export-num-threads", false], [499, "cmdoption-llvm-cov-show-num-threads", false], [518, "cmdoption-llvm-profdata-merge-num-threads", false]], "-o": [[489, "cmdoption-dsymutil-out", false], [492, "cmdoption-llc-O", false], [492, "cmdoption-llc-o", false], [499, "cmdoption-llvm-cov-gcov-o", false], [501, "cmdoption-llvm-cxxmap-output", false], [504, "cmdoption-llvm-dwarfdump-o", false], [509, "cmdoption-llvm-libtool-darwin-o", false], [510, "cmdoption-llvm-link-o", false], [513, "cmdoption-llvm-mca-o", false], [514, "cmdoption-llvm-nm-print-file-name", false], [515, "cmdoption-llvm-objcopy-output-target", false], [518, "cmdoption-llvm-profdata-merge-output", false], [518, "cmdoption-llvm-profdata-overlap-o", false], [518, "cmdoption-llvm-profdata-show-output", false], [523, "cmdoption-llvm-size-o", false], [524, "cmdoption-llvm-stress-o", false], [526, "cmdoption-llvm-strip-o", false], [528, "cmdoption-opt-o", false], [529, "cmdoption-tblgen-o", false]], "-omit-comments": [[529, "cmdoption-tblgen-omit-comments", false]], "-op-exclude-regex": [[529, "cmdoption-tblgen-op-exclude-regex", false]], "-op-include-regex": [[529, "cmdoption-tblgen-op-include-regex", false]], "-opcode-index": [[505, "cmdoption-llvm-exegesis-opcode-index", false]], "-opcode-name": [[505, "cmdoption-llvm-exegesis-opcode-name", false]], "-opt-remarks-filename": [[620, "cmdoption-opt-remarks-filename", false]], "-opt-remarks-filter": [[620, "cmdoption-opt-remarks-filter", false]], "-opt-remarks-format": [[620, "cmdoption-opt-remarks-format", false]], "-opt-remarks-with-hotness": [[620, "cmdoption-opt-remarks-with-hotness", false]], "-optimize-match-table": [[529, "cmdoption-tblgen-optimize-match-table", false]], "-output": [[501, "cmdoption-llvm-cxxmap-output", false], [518, "cmdoption-llvm-profdata-merge-output", false], [518, "cmdoption-llvm-profdata-show-output", false]], "-output-asm-variant": [[513, "cmdoption-llvm-mca-output-asm-variant", false]], "-output-dir": [[499, "cmdoption-llvm-cov-show-output-dir", false]], "-p": [[499, "cmdoption-llvm-cov-gcov-p", false], [504, "cmdoption-llvm-dwarfdump-p", false], [514, "cmdoption-llvm-nm-portability", false], [514, "cmdoption-llvm-nm-no-sort", false], [515, "cmdoption-llvm-objcopy-preserve-dates", false], [516, "cmdoption-llvm-objdump-p", false], [521, "cmdoption-llvm-readelf-string-dump", false], [522, "cmdoption-llvm-readobj-string-dump", false], [526, "cmdoption-llvm-strip-preserve-dates", false], [527, "cmdoption-llvm-symbolizer-pretty-print", false], [528, "cmdoption-opt-p", false]], "-pass-remarks": [[620, "cmdoption-pass-remarks", false]], "-pass-remarks-analysis": [[620, "cmdoption-pass-remarks-analysis", false]], "-pass-remarks-filter": [[620, "cmdoption-pass-remarks-filter", false]], "-pass-remarks-format": [[620, "cmdoption-pass-remarks-format", false]], "-pass-remarks-hotness-threshold": [[620, "cmdoption-pass-remarks-hotness-threshold", false]], "-pass-remarks-missed": [[620, "cmdoption-pass-remarks-missed", false]], "-pass-remarks-output": [[620, "cmdoption-pass-remarks-output", false]], "-pass-remarks-with-hotness": [[620, "cmdoption-pass-remarks-with-hotness", false]], "-path-equivalence": [[499, "cmdoption-llvm-cov-show-path-equivalence", false]], "-pdb": [[517, "cmdoption-llvm-pdbutil-merge-pdb", false], [517, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "-pre-ra-sched": [[493, "cmdoption-lli-pre-RA-sched", false]], "-print-detailed-records": [[529, "cmdoption-tblgen-print-detailed-records", false]], "-print-enums": [[529, "cmdoption-tblgen-print-enums", false]], "-print-imm-hex": [[513, "cmdoption-llvm-mca-print-imm-hex", false]], "-print-records": [[529, "cmdoption-tblgen-print-records", false]], "-print-sets": [[529, "cmdoption-tblgen-print-sets", false]], "-prof-sym-list": [[518, "cmdoption-llvm-profdata-merge-prof-sym-list", false]], "-public-extras": [[517, "cmdoption-llvm-pdbutil-dump-public-extras", false]], "-publics": [[517, "cmdoption-llvm-pdbutil-dump-publics", false]], "-q": [[491, "cmdoption-lit-q", false]], "-r": [[501, "cmdoption-llvm-cxxmap-remapping-file", false], [504, "cmdoption-llvm-dwarfdump-r", false], [514, "cmdoption-llvm-nm-reverse-sort", false], [515, "cmdoption-llvm-objcopy-remove-section", false], [516, "cmdoption-llvm-objdump-R", false], [516, "cmdoption-llvm-objdump-r", false], [518, "cmdoption-llvm-profdata-merge-remapping-file", false], [521, "cmdoption-llvm-readelf-relocations", false], [522, "cmdoption-llvm-readobj-relocations", false], [526, "cmdoption-llvm-strip-remove-section", false]], "-regalloc": [[493, "cmdoption-lli-regalloc", false]], "-region-coverage-gt": [[499, "cmdoption-llvm-cov-show-region-coverage-gt", false]], "-region-coverage-lt": [[499, "cmdoption-llvm-cov-show-region-coverage-lt", false]], "-register-file-size": [[513, "cmdoption-llvm-mca-register-file-size", false]], "-register-file-stats": [[513, "cmdoption-llvm-mca-register-file-stats", false]], "-register-info-debug": [[529, "cmdoption-tblgen-register-info-debug", false]], "-relocation-model": [[493, "cmdoption-lli-relocation-model", false]], "-remapping-file": [[501, "cmdoption-llvm-cxxmap-remapping-file", false], [518, "cmdoption-llvm-profdata-merge-remapping-file", false]], "-remarks-section": [[492, "cmdoption-llc-remarks-section", false]], "-repetition-mode": [[505, "cmdoption-llvm-exegesis-repetition-mode", false]], "-replace": [[511, "cmdoption-llvm-lipo-replace", false]], "-resource-pressure": [[513, "cmdoption-llvm-mca-resource-pressure", false]], "-retire-stats": [[513, "cmdoption-llvm-mca-retire-stats", false]], "-rpath": [[507, "cmdoption-llvm-install-name-tool-rpath", false]], "-s": [[489, "cmdoption-dsymutil-S", false], [489, "cmdoption-dsymutil-s", false], [491, "cmdoption-lit-s", false], [500, "cmdoption-llvm-cxxfilt-format", false], [510, "cmdoption-llvm-link-S", false], [514, "cmdoption-llvm-nm-print-size", false], [514, "cmdoption-llvm-nm-s", false], [515, "cmdoption-llvm-objcopy-strip-all", false], [516, "cmdoption-llvm-objdump-S", false], [516, "cmdoption-llvm-objdump-s", false], [521, "cmdoption-llvm-readelf-sections", false], [521, "cmdoption-llvm-readelf-symbols", false], [522, "cmdoption-llvm-readobj-sections", false], [522, "cmdoption-llvm-readobj-sections", false], [526, "cmdoption-llvm-strip-strip-all", false], [527, "cmdoption-llvm-symbolizer-basenames", false], [528, "cmdoption-opt-S", false]], "-sample": [[518, "cmdoption-llvm-profdata-merge-sample", false], [518, "cmdoption-llvm-profdata-show-sample", false]], "-sc": [[517, "cmdoption-llvm-pdbutil-bytes-sc", false]], "-scheduler-stats": [[513, "cmdoption-llvm-mca-scheduler-stats", false]], "-section-contribs": [[517, "cmdoption-llvm-pdbutil-dump-section-contribs", false]], "-section-headers": [[517, "cmdoption-llvm-pdbutil-dump-section-headers", false]], "-section-map": [[517, "cmdoption-llvm-pdbutil-dump-section-map", false]], "-seed": [[524, "cmdoption-llvm-stress-seed", false]], "-segalign": [[511, "cmdoption-llvm-lipo-segalign", false]], "-show-branch-summary": [[499, "cmdoption-llvm-cov-report-show-branch-summary", false]], "-show-branches": [[499, "cmdoption-llvm-cov-show-show-branches", false]], "-show-encoding": [[513, "cmdoption-llvm-mca-show-encoding", false]], "-show-expansions": [[499, "cmdoption-llvm-cov-show-show-expansions", false]], "-show-functions": [[499, "cmdoption-llvm-cov-report-show-functions", false]], "-show-instantiation-summary": [[499, "cmdoption-llvm-cov-report-show-instantiation-summary", false]], "-show-instantiations": [[499, "cmdoption-llvm-cov-show-show-instantiations", false]], "-show-line-counts": [[499, "cmdoption-llvm-cov-show-show-line-counts", false]], "-show-line-counts-or-regions": [[499, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false]], "-show-prof-sym-list": [[518, "cmdoption-llvm-profdata-show-show-prof-sym-list", false]], "-show-regions": [[499, "cmdoption-llvm-cov-show-show-regions", false]], "-show-sec-info-only": [[518, "cmdoption-llvm-profdata-show-show-sec-info-only", false]], "-showcs": [[518, "cmdoption-llvm-profdata-show-showcs", false]], "-size": [[524, "cmdoption-llvm-stress-size", false]], "-skip-expansions": [[499, "cmdoption-llvm-cov-export-skip-expansions", false]], "-skip-functions": [[499, "cmdoption-llvm-cov-export-skip-functions", false]], "-sm": [[517, "cmdoption-llvm-pdbutil-bytes-sm", false]], "-snippets-file": [[505, "cmdoption-llvm-exegesis-snippets-file", false]], "-soft-float": [[493, "cmdoption-lli-soft-float", false]], "-sparse": [[518, "cmdoption-llvm-profdata-merge-sparse", false]], "-spiller": [[493, "cmdoption-lli-spiller", false]], "-split-chunks": [[517, "cmdoption-llvm-pdbutil-bytes-split-chunks", false]], "-squeue": [[513, "cmdoption-llvm-mca-squeue", false]], "-stack-size-section": [[492, "cmdoption-llc-stack-size-section", false]], "-static": [[509, "cmdoption-llvm-libtool-darwin-static", false]], "-stats": [[493, "cmdoption-lli-stats", false], [528, "cmdoption-opt-stats", false], [529, "cmdoption-tblgen-stats", false]], "-stream-blocks": [[517, "cmdoption-llvm-pdbutil-dump-stream-blocks", false]], "-stream-data": [[517, "cmdoption-llvm-pdbutil-bytes-stream-data", false]], "-streams": [[517, "cmdoption-llvm-pdbutil-dump-streams", false]], "-string-table": [[517, "cmdoption-llvm-pdbutil-dump-string-table", false]], "-strip-debug": [[528, "cmdoption-opt-strip-debug", false]], "-summary": [[517, "cmdoption-llvm-pdbutil-dump-summary", false]], "-summary-only": [[499, "cmdoption-llvm-cov-export-summary-only", false]], "-suppl-min-size-threshold": [[518, "cmdoption-llvm-profdata-merge-suppl-min-size-threshold", false]], "-supplement-instr-with-sample": [[518, "cmdoption-llvm-profdata-merge-supplement-instr-with-sample", false]], "-sym-data": [[517, "cmdoption-llvm-pdbutil-dump-sym-data", false]], "-sym-types": [[517, "cmdoption-llvm-pdbutil-pretty-sym-types", false]], "-symbol-order": [[517, "cmdoption-llvm-pdbutil-pretty-symbol-order", false]], "-symbols": [[517, "cmdoption-llvm-pdbutil-dump-symbols", false]], "-syms": [[517, "cmdoption-llvm-pdbutil-bytes-syms", false]], "-t": [[500, "cmdoption-llvm-cxxfilt-types", false], [514, "cmdoption-llvm-nm-radix", false], [516, "cmdoption-llvm-objdump-T", false], [516, "cmdoption-llvm-objdump-t", false], [521, "cmdoption-llvm-readelf-section-details", false], [522, "cmdoption-llvm-readobj-symbols", false], [523, "cmdoption-llvm-size-totals", false], [525, "cmdoption-llvm-strings-radix", false], [526, "cmdoption-llvm-strip-T", false]], "-tab-size": [[499, "cmdoption-llvm-cov-show-tab-size", false]], "-text": [[518, "cmdoption-llvm-profdata-merge-text", false], [518, "cmdoption-llvm-profdata-show-text", false]], "-thin": [[511, "cmdoption-llvm-lipo-thin", false]], "-time-passes": [[493, "cmdoption-lli-time-passes", false], [528, "cmdoption-opt-time-passes", false]], "-time-phases": [[529, "cmdoption-tblgen-time-phases", false]], "-timeline": [[513, "cmdoption-llvm-mca-timeline", false]], "-timeline-max-cycles": [[513, "cmdoption-llvm-mca-timeline-max-cycles", false]], "-timeline-max-iterations": [[513, "cmdoption-llvm-mca-timeline-max-iterations", false]], "-topn": [[518, "cmdoption-llvm-profdata-show-topn", false]], "-type": [[517, "cmdoption-llvm-pdbutil-bytes-type", false]], "-type-data": [[517, "cmdoption-llvm-pdbutil-dump-type-data", false]], "-type-extras": [[517, "cmdoption-llvm-pdbutil-dump-type-extras", false]], "-type-index": [[517, "cmdoption-llvm-pdbutil-dump-type-index", false]], "-type-server": [[517, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "-typedefs": [[517, "cmdoption-llvm-pdbutil-pretty-typedefs", false]], "-typedefs-dialect": [[529, "cmdoption-tblgen-typedefs-dialect", false]], "-types": [[517, "cmdoption-llvm-pdbutil-dump-types", false], [517, "cmdoption-llvm-pdbutil-pretty-types", false]], "-u": [[489, "cmdoption-dsymutil-u", false], [499, "cmdoption-llvm-cov-gcov-u", false], [504, "cmdoption-llvm-dwarfdump-u", false], [509, "cmdoption-llvm-libtool-darwin-U", false], [514, "cmdoption-llvm-nm-defined-only", false], [514, "cmdoption-llvm-nm-undefined-only", false], [515, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [516, "cmdoption-llvm-objdump-u", false], [521, "cmdoption-llvm-readelf-unwind", false], [522, "cmdoption-llvm-readobj-unwind", false], [526, "cmdoption-llvm-strip-disable-deterministic-archives", false]], "-use-color": [[499, "cmdoption-llvm-cov-report-use-color", false], [499, "cmdoption-llvm-cov-show-use-color", false]], "-use-md5": [[518, "cmdoption-llvm-profdata-merge-use-md5", false]], "-v": [[487, "cmdoption-FileCheck-v", false], [489, "cmdoption-dsymutil-v", false], [491, "cmdoption-lit-v", false], [504, "cmdoption-llvm-dwarfdump-v", false], [507, "cmdoption-llvm-install-name-tool-version", false], [509, "cmdoption-llvm-libtool-darwin-V", false], [510, "cmdoption-llvm-link-v", false], [514, "cmdoption-llvm-nm-numeric-sort", false], [515, "cmdoption-llvm-objcopy-version", false], [521, "cmdoption-llvm-readelf-version-info", false], [522, "cmdoption-llvm-readobj-version-info", false], [526, "cmdoption-llvm-strip-version", false], [527, "cmdoption-llvm-symbolizer-version", false]], "-value-cutoff": [[518, "cmdoption-llvm-profdata-overlap-value-cutoff", false], [518, "cmdoption-llvm-profdata-show-value-cutoff", false]], "-verify": [[497, "cmdoption-llvm-bcanalyzer-verify", false]], "-verify-each": [[528, "cmdoption-opt-verify-each", false]], "-verify_arch": [[511, "cmdoption-llvm-lipo-verify_arch", false]], "-version": [[487, "cmdoption-FileCheck-version", false], [493, "cmdoption-lli-version", false], [499, "cmdoption-llvm-cov-gcov-version", false], [509, "cmdoption-llvm-libtool-darwin-version", false], [511, "cmdoption-llvm-lipo-version", false], [529, "cmdoption-tblgen-version", false]], "-vv": [[487, "cmdoption-FileCheck-vv", false], [491, "cmdoption-lit-vv", false]], "-w": [[514, "cmdoption-llvm-nm-no-weak", false], [515, "cmdoption-llvm-objcopy-weaken-symbol", false], [515, "cmdoption-llvm-objcopy-wildcard", false], [516, "cmdoption-llvm-objdump-w", false], [526, "cmdoption-llvm-strip-wildcard", false]], "-wambiguous": [[501, "cmdoption-llvm-cxxmap-Wambiguous", false]], "-warn-on-skipped-patterns": [[529, "cmdoption-tblgen-warn-on-skipped-patterns", false]], "-weighted-input": [[518, "cmdoption-llvm-profdata-merge-weighted-input", false]], "-wincomplete": [[501, "cmdoption-llvm-cxxmap-Wincomplete", false]], "-write-if-changed": [[529, "cmdoption-tblgen-write-if-changed", false]], "-x": [[499, "cmdoption-llvm-cov-gcov-x", false], [504, "cmdoption-llvm-dwarfdump-x", false], [514, "cmdoption-llvm-nm-x", false], [515, "cmdoption-llvm-objcopy-discard-locals", false], [515, "cmdoption-llvm-objcopy-discard-all", false], [516, "cmdoption-llvm-objdump-x", false], [521, "cmdoption-llvm-readelf-hex-dump", false], [522, "cmdoption-llvm-readobj-hex-dump", false], [523, "cmdoption-llvm-size-x", false], [526, "cmdoption-llvm-strip-discard-locals", false], [526, "cmdoption-llvm-strip-discard-all", false]], "-x86-asm-syntax": [[493, "cmdoption-lli-x86-asm-syntax", false]], "-x86-lbr-sample-period": [[505, "cmdoption-llvm-exegesis-x86-lbr-sample-period", false]], "-xdemangler": [[499, "cmdoption-llvm-cov-show-Xdemangler", false]], "-xme": [[517, "cmdoption-llvm-pdbutil-dump-xme", false]], "-xmi": [[517, "cmdoption-llvm-pdbutil-dump-xmi", false]], "-y": [[489, "cmdoption-dsymutil-y", false]], "-z": [[489, "cmdoption-dsymutil-minimize", false], [516, "cmdoption-llvm-objdump-z", false]], "-zero-counter-threshold": [[518, "cmdoption-llvm-profdata-merge-zero-counter-threshold", false]], "-{passname}": [[528, "cmdoption-opt-passname", false]], "@<file>": [[495, "cmdoption-llvm-ar-arg-FILE", false], [500, "cmdoption-llvm-cxxfilt-arg-FILE", false], [504, "cmdoption-llvm-dwarfdump-arg-FILE", false], [514, "cmdoption-llvm-nm-arg-FILE", false], [515, "cmdoption-llvm-objcopy-arg-FILE", false], [516, "cmdoption-llvm-objdump-arg-FILE", false], [521, "cmdoption-llvm-readelf-arg-FILE", false], [522, "cmdoption-llvm-readobj-arg-FILE", false], [523, "cmdoption-llvm-size-arg-FILE", false], [525, "cmdoption-llvm-strings-arg-FILE", false], [526, "cmdoption-llvm-strip-arg-FILE", false], [527, "cmdoption-llvm-symbolizer-arg-FILE", false]], "a": [[495, "cmdoption-llvm-ar-arg-a", false]], "addlib": [[495, "cmdoption-llvm-ar-arg-ADDLIB", false]], "addmod": [[495, "cmdoption-llvm-ar-arg-ADDMOD", false]], "att": [[516, "cmdoption-llvm-objdump-arg-att", false]], "b": [[495, "cmdoption-llvm-ar-arg-b", false]], "c": [[495, "cmdoption-llvm-ar-arg-c", false]], "create": [[495, "cmdoption-llvm-ar-arg-CREATE", false]], "createthin": [[495, "cmdoption-llvm-ar-arg-CREATETHIN", false]], "d": [[495, "cmdoption-llvm-ar-arg-D", false], [495, "cmdoption-llvm-ar-arg-d", false]], "delete": [[495, "cmdoption-llvm-ar-arg-DELETE", false]], "end": [[495, "cmdoption-llvm-ar-arg-END", false]], "i": [[495, "cmdoption-llvm-ar-arg-i", false]], "intel": [[516, "cmdoption-llvm-objdump-arg-intel", false]], "l": [[495, "cmdoption-llvm-ar-arg-L", false]], "m": [[495, "cmdoption-llvm-ar-arg-m", false]], "n": [[495, "cmdoption-llvm-ar-arg-N", false]], "o": [[495, "cmdoption-llvm-ar-arg-O", false], [495, "cmdoption-llvm-ar-arg-o", false]], "option de ligne de commande": [[620, "cmdoption-lto-pass-remarks-filter", false], [620, "cmdoption-lto-pass-remarks-format", false], [620, "cmdoption-lto-pass-remarks-hotness-threshold", false], [620, "cmdoption-lto-pass-remarks-output", false], [620, "cmdoption-lto-pass-remarks-with-hotness", false], [620, "cmdoption-opt-remarks-filename", false], [620, "cmdoption-opt-remarks-filter", false], [620, "cmdoption-opt-remarks-format", false], [620, "cmdoption-opt-remarks-with-hotness", false], [620, "cmdoption-pass-remarks", false], [620, "cmdoption-pass-remarks-analysis", false], [620, "cmdoption-pass-remarks-filter", false], [620, "cmdoption-pass-remarks-format", false], [620, "cmdoption-pass-remarks-hotness-threshold", false], [620, "cmdoption-pass-remarks-missed", false], [620, "cmdoption-pass-remarks-output", false], [620, "cmdoption-pass-remarks-with-hotness", false]], "option de ligne de commande dsymutil": [[489, "cmdoption-dsymutil-S", false], [489, "cmdoption-dsymutil-accelerator", false], [489, "cmdoption-dsymutil-arch", false], [489, "cmdoption-dsymutil-dump-debug-map", false], [489, "cmdoption-dsymutil-flat", false], [489, "cmdoption-dsymutil-gen-reproducer", false], [489, "cmdoption-dsymutil-help", false], [489, "cmdoption-dsymutil-minimize", false], [489, "cmdoption-dsymutil-no-odr", false], [489, "cmdoption-dsymutil-no-output", false], [489, "cmdoption-dsymutil-no-swiftmodule-timestamp", false], [489, "cmdoption-dsymutil-num-threads", false], [489, "cmdoption-dsymutil-object-prefix-map", false], [489, "cmdoption-dsymutil-oso-prepend-path", false], [489, "cmdoption-dsymutil-out", false], [489, "cmdoption-dsymutil-papertrail", false], [489, "cmdoption-dsymutil-remarks-output-format", false], [489, "cmdoption-dsymutil-remarks-prepend-path", false], [489, "cmdoption-dsymutil-s", false], [489, "cmdoption-dsymutil-statistics", false], [489, "cmdoption-dsymutil-symbol-map", false], [489, "cmdoption-dsymutil-toolchain", false], [489, "cmdoption-dsymutil-u", false], [489, "cmdoption-dsymutil-use-reproducer", false], [489, "cmdoption-dsymutil-v", false], [489, "cmdoption-dsymutil-verbose", false], [489, "cmdoption-dsymutil-verify", false], [489, "cmdoption-dsymutil-y", false]], "option de ligne de commande filecheck": [[487, "cmdoption-FileCheck-D-FMT-NUMVAR", false], [487, "cmdoption-FileCheck-D-VAR", false], [487, "cmdoption-FileCheck-allow-deprecated-dag-overlap", false], [487, "cmdoption-FileCheck-allow-empty", false], [487, "cmdoption-FileCheck-allow-unused-prefixes", false], [487, "cmdoption-FileCheck-check-prefix", false], [487, "cmdoption-FileCheck-check-prefixes", false], [487, "cmdoption-FileCheck-color", false], [487, "cmdoption-FileCheck-comment-prefixes", false], [487, "cmdoption-FileCheck-dump-input", false], [487, "cmdoption-FileCheck-dump-input-context", false], [487, "cmdoption-FileCheck-dump-input-filter", false], [487, "cmdoption-FileCheck-enable-var-scope", false], [487, "cmdoption-FileCheck-help", false], [487, "cmdoption-FileCheck-ignore-case", false], [487, "cmdoption-FileCheck-implicit-check-not", false], [487, "cmdoption-FileCheck-input-file", false], [487, "cmdoption-FileCheck-match-full-lines", false], [487, "cmdoption-FileCheck-strict-whitespace", false], [487, "cmdoption-FileCheck-v", false], [487, "cmdoption-FileCheck-version", false], [487, "cmdoption-FileCheck-vv", false]], "option de ligne de commande lit": [[491, "cmdoption-lit-D", false], [491, "cmdoption-lit-a", false], [491, "cmdoption-lit-config-prefix", false], [491, "cmdoption-lit-debug", false], [491, "cmdoption-lit-filter", false], [491, "cmdoption-lit-h", false], [491, "cmdoption-lit-j", false], [491, "cmdoption-lit-max-failures", false], [491, "cmdoption-lit-max-tests", false], [491, "cmdoption-lit-max-time", false], [491, "cmdoption-lit-no-progress-bar", false], [491, "cmdoption-lit-num-shards", false], [491, "cmdoption-lit-path", false], [491, "cmdoption-lit-q", false], [491, "cmdoption-lit-run-shard", false], [491, "cmdoption-lit-s", false], [491, "cmdoption-lit-show-suites", false], [491, "cmdoption-lit-show-tests", false], [491, "cmdoption-lit-show-unsupported", false], [491, "cmdoption-lit-show-xfail", false], [491, "cmdoption-lit-shuffle", false], [491, "cmdoption-lit-time-tests", false], [491, "cmdoption-lit-timeout", false], [491, "cmdoption-lit-v", false], [491, "cmdoption-lit-vg", false], [491, "cmdoption-lit-vg-arg", false], [491, "cmdoption-lit-vg-leak", false], [491, "cmdoption-lit-vv", false]], "option de ligne de commande llc": [[492, "cmdoption-llc-O", false], [492, "cmdoption-llc-disable-excess-fp-precision", false], [492, "cmdoption-llc-enable-no-infs-fp-math", false], [492, "cmdoption-llc-enable-no-nans-fp-math", false], [492, "cmdoption-llc-enable-no-signed-zeros-fp-math", false], [492, "cmdoption-llc-enable-no-trapping-fp-math", false], [492, "cmdoption-llc-enable-unsafe-fp-math", false], [492, "cmdoption-llc-filetype", false], [492, "cmdoption-llc-frame-pointer", false], [492, "cmdoption-llc-help", false], [492, "cmdoption-llc-load", false], [492, "cmdoption-llc-march", false], [492, "cmdoption-llc-mattr", false], [492, "cmdoption-llc-mcpu", false], [492, "cmdoption-llc-meabi", false], [492, "cmdoption-llc-mtriple", false], [492, "cmdoption-llc-o", false], [492, "cmdoption-llc-print-after-isel", false], [492, "cmdoption-llc-regalloc", false], [492, "cmdoption-llc-remarks-section", false], [492, "cmdoption-llc-spiller", false], [492, "cmdoption-llc-stack-size-section", false], [492, "cmdoption-llc-stats", false], [492, "cmdoption-llc-time-passes", false], [492, "cmdoption-llc-x86-asm-syntax", false]], "option de ligne de commande lli": [[493, "cmdoption-lli-code-model", false], [493, "cmdoption-lli-disable-excess-fp-precision", false], [493, "cmdoption-lli-disable-post-RA-scheduler", false], [493, "cmdoption-lli-disable-spill-fusing", false], [493, "cmdoption-lli-enable-no-infs-fp-math", false], [493, "cmdoption-lli-enable-no-nans-fp-math", false], [493, "cmdoption-lli-enable-unsafe-fp-math", false], [493, "cmdoption-lli-fake-argv0", false], [493, "cmdoption-lli-force-interpreter", false], [493, "cmdoption-lli-help", false], [493, "cmdoption-lli-jit-enable-eh", false], [493, "cmdoption-lli-join-liveintervals", false], [493, "cmdoption-lli-load", false], [493, "cmdoption-lli-march", false], [493, "cmdoption-lli-mattr", false], [493, "cmdoption-lli-mcpu", false], [493, "cmdoption-lli-mtriple", false], [493, "cmdoption-lli-nozero-initialized-in-bss", false], [493, "cmdoption-lli-pre-RA-sched", false], [493, "cmdoption-lli-regalloc", false], [493, "cmdoption-lli-relocation-model", false], [493, "cmdoption-lli-soft-float", false], [493, "cmdoption-lli-spiller", false], [493, "cmdoption-lli-stats", false], [493, "cmdoption-lli-time-passes", false], [493, "cmdoption-lli-version", false], [493, "cmdoption-lli-x86-asm-syntax", false]], "option de ligne de commande llvm-ar": [[495, "cmdoption-llvm-ar-M", false], [495, "cmdoption-llvm-ar-arg-ADDLIB", false], [495, "cmdoption-llvm-ar-arg-ADDMOD", false], [495, "cmdoption-llvm-ar-arg-CREATE", false], [495, "cmdoption-llvm-ar-arg-CREATETHIN", false], [495, "cmdoption-llvm-ar-arg-D", false], [495, "cmdoption-llvm-ar-arg-DELETE", false], [495, "cmdoption-llvm-ar-arg-END", false], [495, "cmdoption-llvm-ar-arg-FILE", false], [495, "cmdoption-llvm-ar-arg-L", false], [495, "cmdoption-llvm-ar-arg-N", false], [495, "cmdoption-llvm-ar-arg-O", false], [495, "cmdoption-llvm-ar-arg-P", false], [495, "cmdoption-llvm-ar-arg-S", false], [495, "cmdoption-llvm-ar-arg-SAVE", false], [495, "cmdoption-llvm-ar-arg-T", false], [495, "cmdoption-llvm-ar-arg-U", false], [495, "cmdoption-llvm-ar-arg-V", false], [495, "cmdoption-llvm-ar-arg-a", false], [495, "cmdoption-llvm-ar-arg-b", false], [495, "cmdoption-llvm-ar-arg-c", false], [495, "cmdoption-llvm-ar-arg-d", false], [495, "cmdoption-llvm-ar-arg-i", false], [495, "cmdoption-llvm-ar-arg-m", false], [495, "cmdoption-llvm-ar-arg-o", false], [495, "cmdoption-llvm-ar-arg-p", false], [495, "cmdoption-llvm-ar-arg-q", false], [495, "cmdoption-llvm-ar-arg-r", false], [495, "cmdoption-llvm-ar-arg-s", false], [495, "cmdoption-llvm-ar-arg-u", false], [495, "cmdoption-llvm-ar-arg-v", false], [495, "cmdoption-llvm-ar-arg-x", false], [495, "cmdoption-llvm-ar-format", false], [495, "cmdoption-llvm-ar-h", false], [495, "cmdoption-llvm-ar-version", false]], "option de ligne de commande llvm-bcanalyzer": [[497, "cmdoption-llvm-bcanalyzer-dump", false], [497, "cmdoption-llvm-bcanalyzer-help", false], [497, "cmdoption-llvm-bcanalyzer-nodetails", false], [497, "cmdoption-llvm-bcanalyzer-verify", false]], "option de ligne de commande llvm-cov-export": [[499, "cmdoption-llvm-cov-export-arch", false], [499, "cmdoption-llvm-cov-export-format", false], [499, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [499, "cmdoption-llvm-cov-export-num-threads", false], [499, "cmdoption-llvm-cov-export-skip-expansions", false], [499, "cmdoption-llvm-cov-export-skip-functions", false], [499, "cmdoption-llvm-cov-export-summary-only", false]], "option de ligne de commande llvm-cov-gcov": [[499, "cmdoption-llvm-cov-gcov-a", false], [499, "cmdoption-llvm-cov-gcov-b", false], [499, "cmdoption-llvm-cov-gcov-c", false], [499, "cmdoption-llvm-cov-gcov-f", false], [499, "cmdoption-llvm-cov-gcov-help", false], [499, "cmdoption-llvm-cov-gcov-l", false], [499, "cmdoption-llvm-cov-gcov-n", false], [499, "cmdoption-llvm-cov-gcov-o", false], [499, "cmdoption-llvm-cov-gcov-p", false], [499, "cmdoption-llvm-cov-gcov-u", false], [499, "cmdoption-llvm-cov-gcov-version", false], [499, "cmdoption-llvm-cov-gcov-x", false]], "option de ligne de commande llvm-cov-report": [[499, "cmdoption-llvm-cov-report-arch", false], [499, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [499, "cmdoption-llvm-cov-report-show-branch-summary", false], [499, "cmdoption-llvm-cov-report-show-functions", false], [499, "cmdoption-llvm-cov-report-show-instantiation-summary", false], [499, "cmdoption-llvm-cov-report-use-color", false]], "option de ligne de commande llvm-cov-show": [[499, "cmdoption-llvm-cov-show-Xdemangler", false], [499, "cmdoption-llvm-cov-show-arch", false], [499, "cmdoption-llvm-cov-show-format", false], [499, "cmdoption-llvm-cov-show-ignore-filename-regex", false], [499, "cmdoption-llvm-cov-show-line-coverage-gt", false], [499, "cmdoption-llvm-cov-show-line-coverage-lt", false], [499, "cmdoption-llvm-cov-show-name", false], [499, "cmdoption-llvm-cov-show-name-regex", false], [499, "cmdoption-llvm-cov-show-name-whitelist", false], [499, "cmdoption-llvm-cov-show-num-threads", false], [499, "cmdoption-llvm-cov-show-output-dir", false], [499, "cmdoption-llvm-cov-show-path-equivalence", false], [499, "cmdoption-llvm-cov-show-region-coverage-gt", false], [499, "cmdoption-llvm-cov-show-region-coverage-lt", false], [499, "cmdoption-llvm-cov-show-show-branches", false], [499, "cmdoption-llvm-cov-show-show-expansions", false], [499, "cmdoption-llvm-cov-show-show-instantiations", false], [499, "cmdoption-llvm-cov-show-show-line-counts", false], [499, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false], [499, "cmdoption-llvm-cov-show-show-regions", false], [499, "cmdoption-llvm-cov-show-tab-size", false], [499, "cmdoption-llvm-cov-show-use-color", false]], "option de ligne de commande llvm-cxxfilt": [[500, "cmdoption-llvm-cxxfilt-arg-FILE", false], [500, "cmdoption-llvm-cxxfilt-format", false], [500, "cmdoption-llvm-cxxfilt-help", false], [500, "cmdoption-llvm-cxxfilt-help-list", false], [500, "cmdoption-llvm-cxxfilt-no-strip-underscore", false], [500, "cmdoption-llvm-cxxfilt-strip-underscore", false], [500, "cmdoption-llvm-cxxfilt-types", false], [500, "cmdoption-llvm-cxxfilt-version", false]], "option de ligne de commande llvm-cxxmap": [[501, "cmdoption-llvm-cxxmap-Wambiguous", false], [501, "cmdoption-llvm-cxxmap-Wincomplete", false], [501, "cmdoption-llvm-cxxmap-output", false], [501, "cmdoption-llvm-cxxmap-remapping-file", false]], "option de ligne de commande llvm-dwarfdump": [[504, "cmdoption-llvm-dwarfdump-F", false], [504, "cmdoption-llvm-dwarfdump-a", false], [504, "cmdoption-llvm-dwarfdump-arch", false], [504, "cmdoption-llvm-dwarfdump-arg-FILE", false], [504, "cmdoption-llvm-dwarfdump-c", false], [504, "cmdoption-llvm-dwarfdump-color", false], [504, "cmdoption-llvm-dwarfdump-debug-abbrev", false], [504, "cmdoption-llvm-dwarfdump-diff", false], [504, "cmdoption-llvm-dwarfdump-f", false], [504, "cmdoption-llvm-dwarfdump-h", false], [504, "cmdoption-llvm-dwarfdump-help-list", false], [504, "cmdoption-llvm-dwarfdump-i", false], [504, "cmdoption-llvm-dwarfdump-lookup", false], [504, "cmdoption-llvm-dwarfdump-n", false], [504, "cmdoption-llvm-dwarfdump-o", false], [504, "cmdoption-llvm-dwarfdump-p", false], [504, "cmdoption-llvm-dwarfdump-parent-recurse-depth", false], [504, "cmdoption-llvm-dwarfdump-quiet", false], [504, "cmdoption-llvm-dwarfdump-r", false], [504, "cmdoption-llvm-dwarfdump-show-section-sizes", false], [504, "cmdoption-llvm-dwarfdump-statistics", false], [504, "cmdoption-llvm-dwarfdump-summarize-types", false], [504, "cmdoption-llvm-dwarfdump-u", false], [504, "cmdoption-llvm-dwarfdump-v", false], [504, "cmdoption-llvm-dwarfdump-verify", false], [504, "cmdoption-llvm-dwarfdump-version", false], [504, "cmdoption-llvm-dwarfdump-x", false]], "option de ligne de commande llvm-exegesis": [[505, "cmdoption-llvm-exegesis-analysis-clustering", false], [505, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", false], [505, "cmdoption-llvm-exegesis-analysis-clusters-output-file", false], [505, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", false], [505, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", false], [505, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", false], [505, "cmdoption-llvm-exegesis-analysis-numpoints", false], [505, "cmdoption-llvm-exegesis-benchmarks-file", false], [505, "cmdoption-llvm-exegesis-dump-object-to-disk", false], [505, "cmdoption-llvm-exegesis-help", false], [505, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", false], [505, "cmdoption-llvm-exegesis-max-configs-per-opcode", false], [505, "cmdoption-llvm-exegesis-mcpu", false], [505, "cmdoption-llvm-exegesis-mode", false], [505, "cmdoption-llvm-exegesis-num-repetitions", false], [505, "cmdoption-llvm-exegesis-opcode-index", false], [505, "cmdoption-llvm-exegesis-opcode-name", false], [505, "cmdoption-llvm-exegesis-repetition-mode", false], [505, "cmdoption-llvm-exegesis-snippets-file", false], [505, "cmdoption-llvm-exegesis-x86-lbr-sample-period", false]], "option de ligne de commande llvm-install-name-tool": [[507, "cmdoption-llvm-install-name-tool-add_rpath", false], [507, "cmdoption-llvm-install-name-tool-change", false], [507, "cmdoption-llvm-install-name-tool-delete_all_rpaths", false], [507, "cmdoption-llvm-install-name-tool-delete_rpath", false], [507, "cmdoption-llvm-install-name-tool-help", false], [507, "cmdoption-llvm-install-name-tool-id", false], [507, "cmdoption-llvm-install-name-tool-rpath", false], [507, "cmdoption-llvm-install-name-tool-version", false]], "option de ligne de commande llvm-libtool-darwin": [[509, "cmdoption-llvm-libtool-darwin-D", false], [509, "cmdoption-llvm-libtool-darwin-L", false], [509, "cmdoption-llvm-libtool-darwin-U", false], [509, "cmdoption-llvm-libtool-darwin-V", false], [509, "cmdoption-llvm-libtool-darwin-arch_only", false], [509, "cmdoption-llvm-libtool-darwin-color", false], [509, "cmdoption-llvm-libtool-darwin-filelist", false], [509, "cmdoption-llvm-libtool-darwin-h", false], [509, "cmdoption-llvm-libtool-darwin-help-list", false], [509, "cmdoption-llvm-libtool-darwin-l", false], [509, "cmdoption-llvm-libtool-darwin-o", false], [509, "cmdoption-llvm-libtool-darwin-static", false], [509, "cmdoption-llvm-libtool-darwin-version", false]], "option de ligne de commande llvm-link": [[510, "cmdoption-llvm-link-S", false], [510, "cmdoption-llvm-link-d", false], [510, "cmdoption-llvm-link-f", false], [510, "cmdoption-llvm-link-help", false], [510, "cmdoption-llvm-link-o", false], [510, "cmdoption-llvm-link-v", false]], "option de ligne de commande llvm-lipo": [[511, "cmdoption-llvm-lipo-archs", false], [511, "cmdoption-llvm-lipo-create", false], [511, "cmdoption-llvm-lipo-help", false], [511, "cmdoption-llvm-lipo-info", false], [511, "cmdoption-llvm-lipo-replace", false], [511, "cmdoption-llvm-lipo-segalign", false], [511, "cmdoption-llvm-lipo-thin", false], [511, "cmdoption-llvm-lipo-verify_arch", false], [511, "cmdoption-llvm-lipo-version", false]], "option de ligne de commande llvm-locstats": [[512, "cmdoption-llvm-locstats-compare", false], [512, "cmdoption-llvm-locstats-draw-plot", false], [512, "cmdoption-llvm-locstats-ignore-debug-entry-values", false], [512, "cmdoption-llvm-locstats-only-formal-parameters", false], [512, "cmdoption-llvm-locstats-only-variables", false]], "option de ligne de commande llvm-mca": [[513, "cmdoption-llvm-mca-all-stats", false], [513, "cmdoption-llvm-mca-all-views", false], [513, "cmdoption-llvm-mca-bottleneck-analysis", false], [513, "cmdoption-llvm-mca-dispatch", false], [513, "cmdoption-llvm-mca-dispatch-stats", false], [513, "cmdoption-llvm-mca-help", false], [513, "cmdoption-llvm-mca-instruction-info", false], [513, "cmdoption-llvm-mca-instruction-tables", false], [513, "cmdoption-llvm-mca-iterations", false], [513, "cmdoption-llvm-mca-json", false], [513, "cmdoption-llvm-mca-lqueue", false], [513, "cmdoption-llvm-mca-march", false], [513, "cmdoption-llvm-mca-mcpu", false], [513, "cmdoption-llvm-mca-mtriple", false], [513, "cmdoption-llvm-mca-noalias", false], [513, "cmdoption-llvm-mca-o", false], [513, "cmdoption-llvm-mca-output-asm-variant", false], [513, "cmdoption-llvm-mca-print-imm-hex", false], [513, "cmdoption-llvm-mca-register-file-size", false], [513, "cmdoption-llvm-mca-register-file-stats", false], [513, "cmdoption-llvm-mca-resource-pressure", false], [513, "cmdoption-llvm-mca-retire-stats", false], [513, "cmdoption-llvm-mca-scheduler-stats", false], [513, "cmdoption-llvm-mca-show-encoding", false], [513, "cmdoption-llvm-mca-squeue", false], [513, "cmdoption-llvm-mca-timeline", false], [513, "cmdoption-llvm-mca-timeline-max-cycles", false], [513, "cmdoption-llvm-mca-timeline-max-iterations", false]], "option de ligne de commande llvm-nm": [[514, "cmdoption-llvm-nm-B", false], [514, "cmdoption-llvm-nm-add-dyldinfo", false], [514, "cmdoption-llvm-nm-add-inlinedinfo", false], [514, "cmdoption-llvm-nm-arch", false], [514, "cmdoption-llvm-nm-arg-FILE", false], [514, "cmdoption-llvm-nm-debug-syms", false], [514, "cmdoption-llvm-nm-defined-only", false], [514, "cmdoption-llvm-nm-demangle", false], [514, "cmdoption-llvm-nm-dyldinfo-only", false], [514, "cmdoption-llvm-nm-dynamic", false], [514, "cmdoption-llvm-nm-extern-only", false], [514, "cmdoption-llvm-nm-format", false], [514, "cmdoption-llvm-nm-help", false], [514, "cmdoption-llvm-nm-help-list", false], [514, "cmdoption-llvm-nm-just-symbol-name", false], [514, "cmdoption-llvm-nm-m", false], [514, "cmdoption-llvm-nm-no-demangle", false], [514, "cmdoption-llvm-nm-no-dyldinfo", false], [514, "cmdoption-llvm-nm-no-llvm-bc", false], [514, "cmdoption-llvm-nm-no-sort", false], [514, "cmdoption-llvm-nm-no-weak", false], [514, "cmdoption-llvm-nm-numeric-sort", false], [514, "cmdoption-llvm-nm-portability", false], [514, "cmdoption-llvm-nm-print-armap", false], [514, "cmdoption-llvm-nm-print-file-name", false], [514, "cmdoption-llvm-nm-print-size", false], [514, "cmdoption-llvm-nm-radix", false], [514, "cmdoption-llvm-nm-reverse-sort", false], [514, "cmdoption-llvm-nm-s", false], [514, "cmdoption-llvm-nm-size-sort", false], [514, "cmdoption-llvm-nm-special-syms", false], [514, "cmdoption-llvm-nm-undefined-only", false], [514, "cmdoption-llvm-nm-version", false], [514, "cmdoption-llvm-nm-without-aliases", false], [514, "cmdoption-llvm-nm-x", false]], "option de ligne de commande llvm-objcopy": [[515, "cmdoption-llvm-objcopy-add-gnu-debuglink", false], [515, "cmdoption-llvm-objcopy-add-section", false], [515, "cmdoption-llvm-objcopy-add-symbol", false], [515, "cmdoption-llvm-objcopy-allow-broken-links", false], [515, "cmdoption-llvm-objcopy-arg-FILE", false], [515, "cmdoption-llvm-objcopy-binary-architecture", false], [515, "cmdoption-llvm-objcopy-build-id-link-dir", false], [515, "cmdoption-llvm-objcopy-build-id-link-input", false], [515, "cmdoption-llvm-objcopy-build-id-link-output", false], [515, "cmdoption-llvm-objcopy-change-start", false], [515, "cmdoption-llvm-objcopy-compress-debug-sections", false], [515, "cmdoption-llvm-objcopy-decompress-debug-sections", false], [515, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [515, "cmdoption-llvm-objcopy-discard-all", false], [515, "cmdoption-llvm-objcopy-discard-locals", false], [515, "cmdoption-llvm-objcopy-dump-section", false], [515, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [515, "cmdoption-llvm-objcopy-extract-dwo", false], [515, "cmdoption-llvm-objcopy-extract-main-partition", false], [515, "cmdoption-llvm-objcopy-extract-partition", false], [515, "cmdoption-llvm-objcopy-globalize-symbol", false], [515, "cmdoption-llvm-objcopy-globalize-symbols", false], [515, "cmdoption-llvm-objcopy-help", false], [515, "cmdoption-llvm-objcopy-input-target", false], [515, "cmdoption-llvm-objcopy-keep-file-symbols", false], [515, "cmdoption-llvm-objcopy-keep-global-symbol", false], [515, "cmdoption-llvm-objcopy-keep-global-symbols", false], [515, "cmdoption-llvm-objcopy-keep-section", false], [515, "cmdoption-llvm-objcopy-keep-symbol", false], [515, "cmdoption-llvm-objcopy-keep-symbols", false], [515, "cmdoption-llvm-objcopy-localize-hidden", false], [515, "cmdoption-llvm-objcopy-localize-symbol", false], [515, "cmdoption-llvm-objcopy-localize-symbols", false], [515, "cmdoption-llvm-objcopy-new-symbol-visibility", false], [515, "cmdoption-llvm-objcopy-only-keep-debug", false], [515, "cmdoption-llvm-objcopy-only-section", false], [515, "cmdoption-llvm-objcopy-output-target", false], [515, "cmdoption-llvm-objcopy-prefix-alloc-sections", false], [515, "cmdoption-llvm-objcopy-prefix-symbols", false], [515, "cmdoption-llvm-objcopy-preserve-dates", false], [515, "cmdoption-llvm-objcopy-redefine-sym", false], [515, "cmdoption-llvm-objcopy-redefine-syms", false], [515, "cmdoption-llvm-objcopy-regex", false], [515, "cmdoption-llvm-objcopy-remove-section", false], [515, "cmdoption-llvm-objcopy-rename-section", false], [515, "cmdoption-llvm-objcopy-set-section-alignment", false], [515, "cmdoption-llvm-objcopy-set-section-flags", false], [515, "cmdoption-llvm-objcopy-set-start-addr", false], [515, "cmdoption-llvm-objcopy-split-dwo", false], [515, "cmdoption-llvm-objcopy-strip-all", false], [515, "cmdoption-llvm-objcopy-strip-all-gnu", false], [515, "cmdoption-llvm-objcopy-strip-debug", false], [515, "cmdoption-llvm-objcopy-strip-dwo", false], [515, "cmdoption-llvm-objcopy-strip-non-alloc", false], [515, "cmdoption-llvm-objcopy-strip-sections", false], [515, "cmdoption-llvm-objcopy-strip-symbol", false], [515, "cmdoption-llvm-objcopy-strip-symbols", false], [515, "cmdoption-llvm-objcopy-strip-unneeded", false], [515, "cmdoption-llvm-objcopy-strip-unneeded-symbol", false], [515, "cmdoption-llvm-objcopy-strip-unneeded-symbols", false], [515, "cmdoption-llvm-objcopy-target", false], [515, "cmdoption-llvm-objcopy-version", false], [515, "cmdoption-llvm-objcopy-weaken", false], [515, "cmdoption-llvm-objcopy-weaken-symbol", false], [515, "cmdoption-llvm-objcopy-weaken-symbols", false], [515, "cmdoption-llvm-objcopy-wildcard", false]], "option de ligne de commande llvm-objdump": [[516, "cmdoption-llvm-objdump-C", false], [516, "cmdoption-llvm-objdump-D", false], [516, "cmdoption-llvm-objdump-M", false], [516, "cmdoption-llvm-objdump-R", false], [516, "cmdoption-llvm-objdump-S", false], [516, "cmdoption-llvm-objdump-T", false], [516, "cmdoption-llvm-objdump-a", false], [516, "cmdoption-llvm-objdump-adjust-vma", false], [516, "cmdoption-llvm-objdump-arch", false], [516, "cmdoption-llvm-objdump-arch-name", false], [516, "cmdoption-llvm-objdump-archive-member-offsets", false], [516, "cmdoption-llvm-objdump-arg-FILE", false], [516, "cmdoption-llvm-objdump-arg-att", false], [516, "cmdoption-llvm-objdump-arg-intel", false], [516, "cmdoption-llvm-objdump-bind", false], [516, "cmdoption-llvm-objdump-cfg", false], [516, "cmdoption-llvm-objdump-d", false], [516, "cmdoption-llvm-objdump-data-in-code", false], [516, "cmdoption-llvm-objdump-debug-vars", false], [516, "cmdoption-llvm-objdump-debug-vars-indent", false], [516, "cmdoption-llvm-objdump-dis-symname", false], [516, "cmdoption-llvm-objdump-disassemble-symbols", false], [516, "cmdoption-llvm-objdump-dsym", false], [516, "cmdoption-llvm-objdump-dwarf", false], [516, "cmdoption-llvm-objdump-dylib-id", false], [516, "cmdoption-llvm-objdump-dylibs-used", false], [516, "cmdoption-llvm-objdump-exports-trie", false], [516, "cmdoption-llvm-objdump-f", false], [516, "cmdoption-llvm-objdump-fault-map-section", false], [516, "cmdoption-llvm-objdump-full-leading-addr", false], [516, "cmdoption-llvm-objdump-g", false], [516, "cmdoption-llvm-objdump-h", false], [516, "cmdoption-llvm-objdump-help", false], [516, "cmdoption-llvm-objdump-indirect-symbols", false], [516, "cmdoption-llvm-objdump-info-plist", false], [516, "cmdoption-llvm-objdump-j", false], [516, "cmdoption-llvm-objdump-l", false], [516, "cmdoption-llvm-objdump-lazy-bind", false], [516, "cmdoption-llvm-objdump-link-opt-hints", false], [516, "cmdoption-llvm-objdump-m", false], [516, "cmdoption-llvm-objdump-mattr", false], [516, "cmdoption-llvm-objdump-mcpu", false], [516, "cmdoption-llvm-objdump-no-leading-addr", false], [516, "cmdoption-llvm-objdump-no-leading-headers", false], [516, "cmdoption-llvm-objdump-no-show-raw-insn", false], [516, "cmdoption-llvm-objdump-no-symbolic-operands", false], [516, "cmdoption-llvm-objdump-non-verbose", false], [516, "cmdoption-llvm-objdump-objc-meta-data", false], [516, "cmdoption-llvm-objdump-p", false], [516, "cmdoption-llvm-objdump-prefix", false], [516, "cmdoption-llvm-objdump-print-imm-hex", false], [516, "cmdoption-llvm-objdump-private-header", false], [516, "cmdoption-llvm-objdump-r", false], [516, "cmdoption-llvm-objdump-raw-clang-ast", false], [516, "cmdoption-llvm-objdump-rebase", false], [516, "cmdoption-llvm-objdump-s", false], [516, "cmdoption-llvm-objdump-show-lma", false], [516, "cmdoption-llvm-objdump-start-address", false], [516, "cmdoption-llvm-objdump-stop-address", false], [516, "cmdoption-llvm-objdump-symbol-description", false], [516, "cmdoption-llvm-objdump-symbolize-operands", false], [516, "cmdoption-llvm-objdump-t", false], [516, "cmdoption-llvm-objdump-triple", false], [516, "cmdoption-llvm-objdump-u", false], [516, "cmdoption-llvm-objdump-universal-headers", false], [516, "cmdoption-llvm-objdump-version", false], [516, "cmdoption-llvm-objdump-w", false], [516, "cmdoption-llvm-objdump-weak-bind", false], [516, "cmdoption-llvm-objdump-x", false], [516, "cmdoption-llvm-objdump-x86-asm-syntax", false], [516, "cmdoption-llvm-objdump-z", false]], "option de ligne de commande llvm-pdbutil-bytes": [[517, "cmdoption-llvm-pdbutil-bytes-block-range", false], [517, "cmdoption-llvm-pdbutil-bytes-byte-range", false], [517, "cmdoption-llvm-pdbutil-bytes-chunks", false], [517, "cmdoption-llvm-pdbutil-bytes-ec", false], [517, "cmdoption-llvm-pdbutil-bytes-files", false], [517, "cmdoption-llvm-pdbutil-bytes-fpm", false], [517, "cmdoption-llvm-pdbutil-bytes-id", false], [517, "cmdoption-llvm-pdbutil-bytes-mod", false], [517, "cmdoption-llvm-pdbutil-bytes-modi", false], [517, "cmdoption-llvm-pdbutil-bytes-name-map", false], [517, "cmdoption-llvm-pdbutil-bytes-sc", false], [517, "cmdoption-llvm-pdbutil-bytes-sm", false], [517, "cmdoption-llvm-pdbutil-bytes-split-chunks", false], [517, "cmdoption-llvm-pdbutil-bytes-stream-data", false], [517, "cmdoption-llvm-pdbutil-bytes-syms", false], [517, "cmdoption-llvm-pdbutil-bytes-type", false], [517, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "option de ligne de commande llvm-pdbutil-dump": [[517, "cmdoption-llvm-pdbutil-dump-all", false], [517, "cmdoption-llvm-pdbutil-dump-dependents", false], [517, "cmdoption-llvm-pdbutil-dump-files", false], [517, "cmdoption-llvm-pdbutil-dump-global-extras", false], [517, "cmdoption-llvm-pdbutil-dump-globals", false], [517, "cmdoption-llvm-pdbutil-dump-id-data", false], [517, "cmdoption-llvm-pdbutil-dump-id-extras", false], [517, "cmdoption-llvm-pdbutil-dump-id-index", false], [517, "cmdoption-llvm-pdbutil-dump-ids", false], [517, "cmdoption-llvm-pdbutil-dump-il", false], [517, "cmdoption-llvm-pdbutil-dump-l", false], [517, "cmdoption-llvm-pdbutil-dump-modi", false], [517, "cmdoption-llvm-pdbutil-dump-modules", false], [517, "cmdoption-llvm-pdbutil-dump-public-extras", false], [517, "cmdoption-llvm-pdbutil-dump-publics", false], [517, "cmdoption-llvm-pdbutil-dump-section-contribs", false], [517, "cmdoption-llvm-pdbutil-dump-section-headers", false], [517, "cmdoption-llvm-pdbutil-dump-section-map", false], [517, "cmdoption-llvm-pdbutil-dump-stream-blocks", false], [517, "cmdoption-llvm-pdbutil-dump-streams", false], [517, "cmdoption-llvm-pdbutil-dump-string-table", false], [517, "cmdoption-llvm-pdbutil-dump-summary", false], [517, "cmdoption-llvm-pdbutil-dump-sym-data", false], [517, "cmdoption-llvm-pdbutil-dump-symbols", false], [517, "cmdoption-llvm-pdbutil-dump-type-data", false], [517, "cmdoption-llvm-pdbutil-dump-type-extras", false], [517, "cmdoption-llvm-pdbutil-dump-type-index", false], [517, "cmdoption-llvm-pdbutil-dump-types", false], [517, "cmdoption-llvm-pdbutil-dump-xme", false], [517, "cmdoption-llvm-pdbutil-dump-xmi", false]], "option de ligne de commande llvm-pdbutil-merge": [[517, "cmdoption-llvm-pdbutil-merge-pdb", false]], "option de ligne de commande llvm-pdbutil-pretty": [[517, "cmdoption-llvm-pdbutil-pretty-all", false], [517, "cmdoption-llvm-pdbutil-pretty-class-definitions", false], [517, "cmdoption-llvm-pdbutil-pretty-class-order", false], [517, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false], [517, "cmdoption-llvm-pdbutil-pretty-classes", false], [517, "cmdoption-llvm-pdbutil-pretty-color-output", false], [517, "cmdoption-llvm-pdbutil-pretty-compilands", false], [517, "cmdoption-llvm-pdbutil-pretty-enums", false], [517, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false], [517, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false], [517, "cmdoption-llvm-pdbutil-pretty-exclude-types", false], [517, "cmdoption-llvm-pdbutil-pretty-externals", false], [517, "cmdoption-llvm-pdbutil-pretty-globals", false], [517, "cmdoption-llvm-pdbutil-pretty-include-compilands", false], [517, "cmdoption-llvm-pdbutil-pretty-include-symbols", false], [517, "cmdoption-llvm-pdbutil-pretty-include-types", false], [517, "cmdoption-llvm-pdbutil-pretty-lines", false], [517, "cmdoption-llvm-pdbutil-pretty-load-address", false], [517, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false], [517, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false], [517, "cmdoption-llvm-pdbutil-pretty-min-type-size", false], [517, "cmdoption-llvm-pdbutil-pretty-module-syms", false], [517, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false], [517, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false], [517, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false], [517, "cmdoption-llvm-pdbutil-pretty-sym-types", false], [517, "cmdoption-llvm-pdbutil-pretty-symbol-order", false], [517, "cmdoption-llvm-pdbutil-pretty-typedefs", false], [517, "cmdoption-llvm-pdbutil-pretty-types", false]], "option de ligne de commande llvm-pdbutil-yaml2pdb": [[517, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "option de ligne de commande llvm-profdata-merge": [[518, "cmdoption-llvm-profdata-merge-binary", false], [518, "cmdoption-llvm-profdata-merge-compress-all-sections", false], [518, "cmdoption-llvm-profdata-merge-extbinary", false], [518, "cmdoption-llvm-profdata-merge-failure-mode", false], [518, "cmdoption-llvm-profdata-merge-gcc", false], [518, "cmdoption-llvm-profdata-merge-gen-partial-profile", false], [518, "cmdoption-llvm-profdata-merge-help", false], [518, "cmdoption-llvm-profdata-merge-input-files", false], [518, "cmdoption-llvm-profdata-merge-instr", false], [518, "cmdoption-llvm-profdata-merge-instr-prof-cold-threshold", false], [518, "cmdoption-llvm-profdata-merge-num-threads", false], [518, "cmdoption-llvm-profdata-merge-output", false], [518, "cmdoption-llvm-profdata-merge-prof-sym-list", false], [518, "cmdoption-llvm-profdata-merge-remapping-file", false], [518, "cmdoption-llvm-profdata-merge-sample", false], [518, "cmdoption-llvm-profdata-merge-sparse", false], [518, "cmdoption-llvm-profdata-merge-suppl-min-size-threshold", false], [518, "cmdoption-llvm-profdata-merge-supplement-instr-with-sample", false], [518, "cmdoption-llvm-profdata-merge-text", false], [518, "cmdoption-llvm-profdata-merge-use-md5", false], [518, "cmdoption-llvm-profdata-merge-weighted-input", false], [518, "cmdoption-llvm-profdata-merge-zero-counter-threshold", false]], "option de ligne de commande llvm-profdata-overlap": [[518, "cmdoption-llvm-profdata-overlap-cs", false], [518, "cmdoption-llvm-profdata-overlap-function", false], [518, "cmdoption-llvm-profdata-overlap-help", false], [518, "cmdoption-llvm-profdata-overlap-o", false], [518, "cmdoption-llvm-profdata-overlap-value-cutoff", false]], "option de ligne de commande llvm-profdata-show": [[518, "cmdoption-llvm-profdata-show-all-functions", false], [518, "cmdoption-llvm-profdata-show-counts", false], [518, "cmdoption-llvm-profdata-show-function", false], [518, "cmdoption-llvm-profdata-show-help", false], [518, "cmdoption-llvm-profdata-show-instr", false], [518, "cmdoption-llvm-profdata-show-list-below-cutoff", false], [518, "cmdoption-llvm-profdata-show-memop-sizes", false], [518, "cmdoption-llvm-profdata-show-output", false], [518, "cmdoption-llvm-profdata-show-sample", false], [518, "cmdoption-llvm-profdata-show-show-prof-sym-list", false], [518, "cmdoption-llvm-profdata-show-show-sec-info-only", false], [518, "cmdoption-llvm-profdata-show-showcs", false], [518, "cmdoption-llvm-profdata-show-text", false], [518, "cmdoption-llvm-profdata-show-topn", false], [518, "cmdoption-llvm-profdata-show-value-cutoff", false]], "option de ligne de commande llvm-profgen": [[519, "cmdoption-llvm-profgen-binary", false], [519, "cmdoption-llvm-profgen-format", false], [519, "cmdoption-llvm-profgen-output", false], [519, "cmdoption-llvm-profgen-perfscript", false], [519, "cmdoption-llvm-profgen-show-disassembly", false], [519, "cmdoption-llvm-profgen-show-mmap-events", false], [519, "cmdoption-llvm-profgen-x86-asm-syntax", false]], "option de ligne de commande llvm-readelf": [[521, "cmdoption-llvm-readelf-addrsig", false], [521, "cmdoption-llvm-readelf-all", false], [521, "cmdoption-llvm-readelf-arch-specific", false], [521, "cmdoption-llvm-readelf-arg-FILE", false], [521, "cmdoption-llvm-readelf-cg-profile", false], [521, "cmdoption-llvm-readelf-color", false], [521, "cmdoption-llvm-readelf-demangle", false], [521, "cmdoption-llvm-readelf-dyn-relocations", false], [521, "cmdoption-llvm-readelf-dyn-symbols", false], [521, "cmdoption-llvm-readelf-dynamic-table", false], [521, "cmdoption-llvm-readelf-elf-hash-histogram", false], [521, "cmdoption-llvm-readelf-elf-linker-options", false], [521, "cmdoption-llvm-readelf-elf-output-style", false], [521, "cmdoption-llvm-readelf-elf-section-groups", false], [521, "cmdoption-llvm-readelf-expand-relocs", false], [521, "cmdoption-llvm-readelf-file-headers", false], [521, "cmdoption-llvm-readelf-gnu-hash-table", false], [521, "cmdoption-llvm-readelf-hash-symbols", false], [521, "cmdoption-llvm-readelf-hash-table", false], [521, "cmdoption-llvm-readelf-headers", false], [521, "cmdoption-llvm-readelf-help", false], [521, "cmdoption-llvm-readelf-help-list", false], [521, "cmdoption-llvm-readelf-hex-dump", false], [521, "cmdoption-llvm-readelf-needed-libs", false], [521, "cmdoption-llvm-readelf-notes", false], [521, "cmdoption-llvm-readelf-program-headers", false], [521, "cmdoption-llvm-readelf-raw-relr", false], [521, "cmdoption-llvm-readelf-relocations", false], [521, "cmdoption-llvm-readelf-section-data", false], [521, "cmdoption-llvm-readelf-section-details", false], [521, "cmdoption-llvm-readelf-section-mapping", false], [521, "cmdoption-llvm-readelf-section-relocations", false], [521, "cmdoption-llvm-readelf-section-symbols", false], [521, "cmdoption-llvm-readelf-sections", false], [521, "cmdoption-llvm-readelf-stack-sizes", false], [521, "cmdoption-llvm-readelf-stackmap", false], [521, "cmdoption-llvm-readelf-string-dump", false], [521, "cmdoption-llvm-readelf-symbols", false], [521, "cmdoption-llvm-readelf-unwind", false], [521, "cmdoption-llvm-readelf-version", false], [521, "cmdoption-llvm-readelf-version-info", false]], "option de ligne de commande llvm-readobj": [[522, "cmdoption-llvm-readobj-addrsig", false], [522, "cmdoption-llvm-readobj-all", false], [522, "cmdoption-llvm-readobj-arch-specific", false], [522, "cmdoption-llvm-readobj-arg-FILE", false], [522, "cmdoption-llvm-readobj-cg-profile", false], [522, "cmdoption-llvm-readobj-codeview", false], [522, "cmdoption-llvm-readobj-codeview-ghash", false], [522, "cmdoption-llvm-readobj-codeview-merged-types", false], [522, "cmdoption-llvm-readobj-codeview-subsection-bytes", false], [522, "cmdoption-llvm-readobj-coff-basereloc", false], [522, "cmdoption-llvm-readobj-coff-debug-directory", false], [522, "cmdoption-llvm-readobj-coff-directives", false], [522, "cmdoption-llvm-readobj-coff-exports", false], [522, "cmdoption-llvm-readobj-coff-imports", false], [522, "cmdoption-llvm-readobj-coff-load-config", false], [522, "cmdoption-llvm-readobj-coff-resources", false], [522, "cmdoption-llvm-readobj-coff-tls-directory", false], [522, "cmdoption-llvm-readobj-color", false], [522, "cmdoption-llvm-readobj-demangle", false], [522, "cmdoption-llvm-readobj-dependent-libraries", false], [522, "cmdoption-llvm-readobj-dyn-relocations", false], [522, "cmdoption-llvm-readobj-dyn-symbols", false], [522, "cmdoption-llvm-readobj-dynamic-table", false], [522, "cmdoption-llvm-readobj-elf-hash-histogram", false], [522, "cmdoption-llvm-readobj-elf-linker-options", false], [522, "cmdoption-llvm-readobj-elf-output-style", false], [522, "cmdoption-llvm-readobj-elf-section-groups", false], [522, "cmdoption-llvm-readobj-expand-relocs", false], [522, "cmdoption-llvm-readobj-file-headers", false], [522, "cmdoption-llvm-readobj-gnu-hash-table", false], [522, "cmdoption-llvm-readobj-hash-symbols", false], [522, "cmdoption-llvm-readobj-hash-table", false], [522, "cmdoption-llvm-readobj-headers", false], [522, "cmdoption-llvm-readobj-help", false], [522, "cmdoption-llvm-readobj-help-list", false], [522, "cmdoption-llvm-readobj-hex-dump", false], [522, "cmdoption-llvm-readobj-macho-data-in-code", false], [522, "cmdoption-llvm-readobj-macho-dsymtab", false], [522, "cmdoption-llvm-readobj-macho-indirect-symbols", false], [522, "cmdoption-llvm-readobj-macho-linker-options", false], [522, "cmdoption-llvm-readobj-macho-segment", false], [522, "cmdoption-llvm-readobj-macho-version-min", false], [522, "cmdoption-llvm-readobj-needed-libs", false], [522, "cmdoption-llvm-readobj-notes", false], [522, "cmdoption-llvm-readobj-program-headers", false], [522, "cmdoption-llvm-readobj-raw-relr", false], [522, "cmdoption-llvm-readobj-relocations", false], [522, "cmdoption-llvm-readobj-section-data", false], [522, "cmdoption-llvm-readobj-section-mapping", false], [522, "cmdoption-llvm-readobj-section-relocations", false], [522, "cmdoption-llvm-readobj-section-symbols", false], [522, "cmdoption-llvm-readobj-sections", false], [522, "cmdoption-llvm-readobj-stack-sizes", false], [522, "cmdoption-llvm-readobj-stackmap", false], [522, "cmdoption-llvm-readobj-string-dump", false], [522, "cmdoption-llvm-readobj-symbols", false], [522, "cmdoption-llvm-readobj-unwind", false], [522, "cmdoption-llvm-readobj-version", false], [522, "cmdoption-llvm-readobj-version-info", false]], "option de ligne de commande llvm-size": [[523, "cmdoption-llvm-size-A", false], [523, "cmdoption-llvm-size-B", false], [523, "cmdoption-llvm-size-arch", false], [523, "cmdoption-llvm-size-arg-FILE", false], [523, "cmdoption-llvm-size-common", false], [523, "cmdoption-llvm-size-d", false], [523, "cmdoption-llvm-size-format", false], [523, "cmdoption-llvm-size-help", false], [523, "cmdoption-llvm-size-help-list", false], [523, "cmdoption-llvm-size-l", false], [523, "cmdoption-llvm-size-m", false], [523, "cmdoption-llvm-size-o", false], [523, "cmdoption-llvm-size-radix", false], [523, "cmdoption-llvm-size-totals", false], [523, "cmdoption-llvm-size-version", false], [523, "cmdoption-llvm-size-x", false]], "option de ligne de commande llvm-stress": [[524, "cmdoption-llvm-stress-o", false], [524, "cmdoption-llvm-stress-seed", false], [524, "cmdoption-llvm-stress-size", false]], "option de ligne de commande llvm-strings": [[525, "cmdoption-llvm-strings-all", false], [525, "cmdoption-llvm-strings-arg-FILE", false], [525, "cmdoption-llvm-strings-bytes", false], [525, "cmdoption-llvm-strings-help", false], [525, "cmdoption-llvm-strings-help-list", false], [525, "cmdoption-llvm-strings-print-file-name", false], [525, "cmdoption-llvm-strings-radix", false], [525, "cmdoption-llvm-strings-version", false]], "option de ligne de commande llvm-strip": [[526, "cmdoption-llvm-strip-T", false], [526, "cmdoption-llvm-strip-allow-broken-links", false], [526, "cmdoption-llvm-strip-arg-FILE", false], [526, "cmdoption-llvm-strip-disable-deterministic-archives", false], [526, "cmdoption-llvm-strip-discard-all", false], [526, "cmdoption-llvm-strip-discard-locals", false], [526, "cmdoption-llvm-strip-enable-deterministic-archives", false], [526, "cmdoption-llvm-strip-help", false], [526, "cmdoption-llvm-strip-keep-file-symbols", false], [526, "cmdoption-llvm-strip-keep-section", false], [526, "cmdoption-llvm-strip-keep-symbol", false], [526, "cmdoption-llvm-strip-no-strip-all", false], [526, "cmdoption-llvm-strip-o", false], [526, "cmdoption-llvm-strip-only-keep-debug", false], [526, "cmdoption-llvm-strip-preserve-dates", false], [526, "cmdoption-llvm-strip-regex", false], [526, "cmdoption-llvm-strip-remove-section", false], [526, "cmdoption-llvm-strip-strip-all", false], [526, "cmdoption-llvm-strip-strip-all-gnu", false], [526, "cmdoption-llvm-strip-strip-debug", false], [526, "cmdoption-llvm-strip-strip-sections", false], [526, "cmdoption-llvm-strip-strip-symbol", false], [526, "cmdoption-llvm-strip-strip-unneeded", false], [526, "cmdoption-llvm-strip-version", false], [526, "cmdoption-llvm-strip-wildcard", false]], "option de ligne de commande llvm-symbolizer": [[527, "cmdoption-llvm-symbolizer-adjust-vma", false], [527, "cmdoption-llvm-symbolizer-arg-FILE", false], [527, "cmdoption-llvm-symbolizer-basenames", false], [527, "cmdoption-llvm-symbolizer-default-arch", false], [527, "cmdoption-llvm-symbolizer-demangle", false], [527, "cmdoption-llvm-symbolizer-dia", false], [527, "cmdoption-llvm-symbolizer-dsym-hint", false], [527, "cmdoption-llvm-symbolizer-dwp", false], [527, "cmdoption-llvm-symbolizer-fallback-debug-path", false], [527, "cmdoption-llvm-symbolizer-functions", false], [527, "cmdoption-llvm-symbolizer-help", false], [527, "cmdoption-llvm-symbolizer-inlining", false], [527, "cmdoption-llvm-symbolizer-no-demangle", false], [527, "cmdoption-llvm-symbolizer-no-inlines", false], [527, "cmdoption-llvm-symbolizer-obj", false], [527, "cmdoption-llvm-symbolizer-output-style", false], [527, "cmdoption-llvm-symbolizer-pretty-print", false], [527, "cmdoption-llvm-symbolizer-print-address", false], [527, "cmdoption-llvm-symbolizer-print-source-context-lines", false], [527, "cmdoption-llvm-symbolizer-relativenames", false], [527, "cmdoption-llvm-symbolizer-use-symbol-table", false], [527, "cmdoption-llvm-symbolizer-verbose", false], [527, "cmdoption-llvm-symbolizer-version", false]], "option de ligne de commande opt": [[528, "cmdoption-opt-S", false], [528, "cmdoption-opt-debug", false], [528, "cmdoption-opt-disable-inlining", false], [528, "cmdoption-opt-disable-opt", false], [528, "cmdoption-opt-f", false], [528, "cmdoption-opt-help", false], [528, "cmdoption-opt-load", false], [528, "cmdoption-opt-o", false], [528, "cmdoption-opt-p", false], [528, "cmdoption-opt-passname", false], [528, "cmdoption-opt-stats", false], [528, "cmdoption-opt-strip-debug", false], [528, "cmdoption-opt-time-passes", false], [528, "cmdoption-opt-verify-each", false]], "option de ligne de commande tblgen": [[529, "cmdoption-tblgen-0", false], [529, "cmdoption-tblgen-D", false], [529, "cmdoption-tblgen-I", false], [529, "cmdoption-tblgen-asmformat-error-is-fatal", false], [529, "cmdoption-tblgen-asmparsernum", false], [529, "cmdoption-tblgen-asmwriternum", false], [529, "cmdoption-tblgen-clang-component", false], [529, "cmdoption-tblgen-class", false], [529, "cmdoption-tblgen-combiners", false], [529, "cmdoption-tblgen-d", false], [529, "cmdoption-tblgen-debug", false], [529, "cmdoption-tblgen-dialect", false], [529, "cmdoption-tblgen-dialect-opclass-base", false], [529, "cmdoption-tblgen-dump-json", false], [529, "cmdoption-tblgen-gen-arm-bf16", false], [529, "cmdoption-tblgen-gen-arm-cde-builtin-aliases", false], [529, "cmdoption-tblgen-gen-arm-cde-builtin-codegen", false], [529, "cmdoption-tblgen-gen-arm-cde-builtin-def", false], [529, "cmdoption-tblgen-gen-arm-cde-builtin-sema", false], [529, "cmdoption-tblgen-gen-arm-cde-header", false], [529, "cmdoption-tblgen-gen-arm-fp16", false], [529, "cmdoption-tblgen-gen-arm-mve-builtin-aliases", false], [529, "cmdoption-tblgen-gen-arm-mve-builtin-codegen", false], [529, "cmdoption-tblgen-gen-arm-mve-builtin-def", false], [529, "cmdoption-tblgen-gen-arm-mve-builtin-sema", false], [529, "cmdoption-tblgen-gen-arm-mve-header", false], [529, "cmdoption-tblgen-gen-arm-neon", false], [529, "cmdoption-tblgen-gen-arm-neon-sema", false], [529, "cmdoption-tblgen-gen-arm-neon-test", false], [529, "cmdoption-tblgen-gen-arm-sve-builtin-codegen", false], [529, "cmdoption-tblgen-gen-arm-sve-builtins", false], [529, "cmdoption-tblgen-gen-arm-sve-header", false], [529, "cmdoption-tblgen-gen-arm-sve-sema-rangechecks", false], [529, "cmdoption-tblgen-gen-arm-sve-typeflags", false], [529, "cmdoption-tblgen-gen-asm-matcher", false], [529, "cmdoption-tblgen-gen-asm-parser", false], [529, "cmdoption-tblgen-gen-asm-writer", false], [529, "cmdoption-tblgen-gen-attr-docs", false], [529, "cmdoption-tblgen-gen-attrs", false], [529, "cmdoption-tblgen-gen-automata", false], [529, "cmdoption-tblgen-gen-avail-interface-decls", false], [529, "cmdoption-tblgen-gen-avail-interface-defs", false], [529, "cmdoption-tblgen-gen-callingconv", false], [529, "cmdoption-tblgen-gen-clang-attr-ast-visitor", false], [529, "cmdoption-tblgen-gen-clang-attr-classes", false], [529, "cmdoption-tblgen-gen-clang-attr-has-attribute-impl", false], [529, "cmdoption-tblgen-gen-clang-attr-impl", false], [529, "cmdoption-tblgen-gen-clang-attr-list", false], [529, "cmdoption-tblgen-gen-clang-attr-node-traverse", false], [529, "cmdoption-tblgen-gen-clang-attr-parsed-attr-impl", false], [529, "cmdoption-tblgen-gen-clang-attr-parsed-attr-kinds", false], [529, "cmdoption-tblgen-gen-clang-attr-parsed-attr-list", false], [529, "cmdoption-tblgen-gen-clang-attr-parser-string-switches", false], [529, "cmdoption-tblgen-gen-clang-attr-pch-read", false], [529, "cmdoption-tblgen-gen-clang-attr-pch-write", false], [529, "cmdoption-tblgen-gen-clang-attr-spelling-index", false], [529, "cmdoption-tblgen-gen-clang-attr-subject-match-rule-list", false], [529, "cmdoption-tblgen-gen-clang-attr-subject-match-rules-parser-string-switches", false], [529, "cmdoption-tblgen-gen-clang-attr-template-instantiate", false], [529, "cmdoption-tblgen-gen-clang-attr-text-node-dump", false], [529, "cmdoption-tblgen-gen-clang-basic-reader", false], [529, "cmdoption-tblgen-gen-clang-basic-writer", false], [529, "cmdoption-tblgen-gen-clang-comment-command-info", false], [529, "cmdoption-tblgen-gen-clang-comment-command-list", false], [529, "cmdoption-tblgen-gen-clang-comment-html-named-character-references", false], [529, "cmdoption-tblgen-gen-clang-comment-html-tags", false], [529, "cmdoption-tblgen-gen-clang-comment-html-tags-properties", false], [529, "cmdoption-tblgen-gen-clang-comment-nodes", false], [529, "cmdoption-tblgen-gen-clang-data-collectors", false], [529, "cmdoption-tblgen-gen-clang-decl-nodes", false], [529, "cmdoption-tblgen-gen-clang-diag-groups", false], [529, "cmdoption-tblgen-gen-clang-diags-defs", false], [529, "cmdoption-tblgen-gen-clang-diags-index-name", false], [529, "cmdoption-tblgen-gen-clang-opcodes", false], [529, "cmdoption-tblgen-gen-clang-opencl-builtins", false], [529, "cmdoption-tblgen-gen-clang-sa-checkers", false], [529, "cmdoption-tblgen-gen-clang-stmt-nodes", false], [529, "cmdoption-tblgen-gen-clang-test-pragma-attribute-supported-attributes", false], [529, "cmdoption-tblgen-gen-clang-type-nodes", false], [529, "cmdoption-tblgen-gen-clang-type-reader", false], [529, "cmdoption-tblgen-gen-clang-type-writer", false], [529, "cmdoption-tblgen-gen-compress-inst-emitter", false], [529, "cmdoption-tblgen-gen-ctags", false], [529, "cmdoption-tblgen-gen-dag-isel", false], [529, "cmdoption-tblgen-gen-dfa-packetizer", false], [529, "cmdoption-tblgen-gen-diag-docs", false], [529, "cmdoption-tblgen-gen-dialect-doc", false], [529, "cmdoption-tblgen-gen-directive-decl", false], [529, "cmdoption-tblgen-gen-directive-gen", false], [529, "cmdoption-tblgen-gen-directive-impl", false], [529, "cmdoption-tblgen-gen-disassembler", false], [529, "cmdoption-tblgen-gen-emitter", false], [529, "cmdoption-tblgen-gen-enum-decls", false], [529, "cmdoption-tblgen-gen-enum-defs", false], [529, "cmdoption-tblgen-gen-enum-from-llvmir-conversions", false], [529, "cmdoption-tblgen-gen-enum-to-llvmir-conversions", false], [529, "cmdoption-tblgen-gen-exegesis", false], [529, "cmdoption-tblgen-gen-fast-isel", false], [529, "cmdoption-tblgen-gen-global-isel", false], [529, "cmdoption-tblgen-gen-global-isel-combiner", false], [529, "cmdoption-tblgen-gen-instr-docs", false], [529, "cmdoption-tblgen-gen-instr-info", false], [529, "cmdoption-tblgen-gen-intrinsic-enums", false], [529, "cmdoption-tblgen-gen-intrinsic-impl", false], [529, "cmdoption-tblgen-gen-llvmir-conversions", false], [529, "cmdoption-tblgen-gen-llvmir-intrinsics", false], [529, "cmdoption-tblgen-gen-op-decls", false], [529, "cmdoption-tblgen-gen-op-defs", false], [529, "cmdoption-tblgen-gen-op-doc", false], [529, "cmdoption-tblgen-gen-opt-docs", false], [529, "cmdoption-tblgen-gen-opt-parser-defs", false], [529, "cmdoption-tblgen-gen-opt-rst", false], [529, "cmdoption-tblgen-gen-pass-decls", false], [529, "cmdoption-tblgen-gen-pass-doc", false], [529, "cmdoption-tblgen-gen-pseudo-lowering", false], [529, "cmdoption-tblgen-gen-register-bank", false], [529, "cmdoption-tblgen-gen-register-info", false], [529, "cmdoption-tblgen-gen-rewriters", false], [529, "cmdoption-tblgen-gen-searchable-tables", false], [529, "cmdoption-tblgen-gen-spirv-avail-impls", false], [529, "cmdoption-tblgen-gen-spirv-capability-implication", false], [529, "cmdoption-tblgen-gen-spirv-enum-avail-decls", false], [529, "cmdoption-tblgen-gen-spirv-enum-avail-defs", false], [529, "cmdoption-tblgen-gen-spirv-op-utils", false], [529, "cmdoption-tblgen-gen-spirv-serialization", false], [529, "cmdoption-tblgen-gen-struct-attr-decls", false], [529, "cmdoption-tblgen-gen-struct-attr-defs", false], [529, "cmdoption-tblgen-gen-subtarget", false], [529, "cmdoption-tblgen-gen-typedef-decls", false], [529, "cmdoption-tblgen-gen-typedef-defs", false], [529, "cmdoption-tblgen-gen-x86-EVEX2VEX-tables", false], [529, "cmdoption-tblgen-gen-x86-fold-tables", false], [529, "cmdoption-tblgen-gicombiner-show-expansions", false], [529, "cmdoption-tblgen-gicombiner-stop-after-build", false], [529, "cmdoption-tblgen-gicombiner-stop-after-parse", false], [529, "cmdoption-tblgen-gisel-coverage-file", false], [529, "cmdoption-tblgen-help", false], [529, "cmdoption-tblgen-help-list", false], [529, "cmdoption-tblgen-instrument-coverage", false], [529, "cmdoption-tblgen-instrument-gisel-coverage", false], [529, "cmdoption-tblgen-intrinsic-prefix", false], [529, "cmdoption-tblgen-llvmir-intrinsics-filter", false], [529, "cmdoption-tblgen-long-string-literals", false], [529, "cmdoption-tblgen-match-prefix", false], [529, "cmdoption-tblgen-name", false], [529, "cmdoption-tblgen-null-backend", false], [529, "cmdoption-tblgen-o", false], [529, "cmdoption-tblgen-omit-comments", false], [529, "cmdoption-tblgen-op-exclude-regex", false], [529, "cmdoption-tblgen-op-include-regex", false], [529, "cmdoption-tblgen-optimize-match-table", false], [529, "cmdoption-tblgen-print-detailed-records", false], [529, "cmdoption-tblgen-print-enums", false], [529, "cmdoption-tblgen-print-records", false], [529, "cmdoption-tblgen-print-sets", false], [529, "cmdoption-tblgen-register-info-debug", false], [529, "cmdoption-tblgen-stats", false], [529, "cmdoption-tblgen-time-phases", false], [529, "cmdoption-tblgen-typedefs-dialect", false], [529, "cmdoption-tblgen-version", false], [529, "cmdoption-tblgen-warn-on-skipped-patterns", false], [529, "cmdoption-tblgen-write-if-changed", false]], "p": [[495, "cmdoption-llvm-ar-arg-P", false], [495, "cmdoption-llvm-ar-arg-p", false]], "q": [[495, "cmdoption-llvm-ar-arg-q", false]], "r": [[495, "cmdoption-llvm-ar-arg-r", false]], "s": [[495, "cmdoption-llvm-ar-arg-S", false], [495, "cmdoption-llvm-ar-arg-s", false]], "save": [[495, "cmdoption-llvm-ar-arg-SAVE", false]], "t": [[495, "cmdoption-llvm-ar-arg-T", false]], "u": [[495, "cmdoption-llvm-ar-arg-U", false], [495, "cmdoption-llvm-ar-arg-u", false]], "v": [[495, "cmdoption-llvm-ar-arg-V", false], [495, "cmdoption-llvm-ar-arg-v", false]], "x": [[495, "cmdoption-llvm-ar-arg-x", false]]}, "objects": {"": [[620, 0, 1, "cmdoption-lto-pass-remarks-filter", "-lto-pass-remarks-filter"], [620, 0, 1, "cmdoption-lto-pass-remarks-format", "-lto-pass-remarks-format"], [620, 0, 1, "cmdoption-lto-pass-remarks-hotness-threshold", "-lto-pass-remarks-hotness-threshold"], [620, 0, 1, "cmdoption-lto-pass-remarks-output", "-lto-pass-remarks-output"], [620, 0, 1, "cmdoption-lto-pass-remarks-with-hotness", "-lto-pass-remarks-with-hotness"], [620, 0, 1, "cmdoption-opt-remarks-filename", "-opt-remarks-filename"], [620, 0, 1, "cmdoption-opt-remarks-filter", "-opt-remarks-filter"], [620, 0, 1, "cmdoption-opt-remarks-format", "-opt-remarks-format"], [620, 0, 1, "cmdoption-opt-remarks-with-hotness", "-opt-remarks-with-hotness"], [620, 0, 1, "cmdoption-pass-remarks", "-pass-remarks"], [620, 0, 1, "cmdoption-pass-remarks-analysis", "-pass-remarks-analysis"], [620, 0, 1, "cmdoption-pass-remarks-filter", "-pass-remarks-filter"], [620, 0, 1, "cmdoption-pass-remarks-format", "-pass-remarks-format"], [620, 0, 1, "cmdoption-pass-remarks-hotness-threshold", "-pass-remarks-hotness-threshold"], [620, 0, 1, "cmdoption-pass-remarks-missed", "-pass-remarks-missed"], [620, 0, 1, "cmdoption-pass-remarks-output", "-pass-remarks-output"], [620, 0, 1, "cmdoption-pass-remarks-with-hotness", "-pass-remarks-with-hotness"]], "FileCheck": [[487, 0, 1, "cmdoption-FileCheck-allow-deprecated-dag-overlap", "--allow-deprecated-dag-overlap"], [487, 0, 1, "cmdoption-FileCheck-allow-empty", "--allow-empty"], [487, 0, 1, "cmdoption-FileCheck-allow-unused-prefixes", "--allow-unused-prefixes"], [487, 0, 1, "cmdoption-FileCheck-check-prefix", "--check-prefix"], [487, 0, 1, "cmdoption-FileCheck-check-prefixes", "--check-prefixes"], [487, 0, 1, "cmdoption-FileCheck-color", "--color"], [487, 0, 1, "cmdoption-FileCheck-comment-prefixes", "--comment-prefixes"], [487, 0, 1, "cmdoption-FileCheck-dump-input", "--dump-input"], [487, 0, 1, "cmdoption-FileCheck-dump-input-context", "--dump-input-context"], [487, 0, 1, "cmdoption-FileCheck-dump-input-filter", "--dump-input-filter"], [487, 0, 1, "cmdoption-FileCheck-enable-var-scope", "--enable-var-scope"], [487, 0, 1, "cmdoption-FileCheck-ignore-case", "--ignore-case"], [487, 0, 1, "cmdoption-FileCheck-implicit-check-not", "--implicit-check-not"], [487, 0, 1, "cmdoption-FileCheck-input-file", "--input-file"], [487, 0, 1, "cmdoption-FileCheck-match-full-lines", "--match-full-lines"], [487, 0, 1, "cmdoption-FileCheck-strict-whitespace", "--strict-whitespace"], [487, 0, 1, "cmdoption-FileCheck-D-FMT-NUMVAR", "-D#&lt;FMT&gt;,&lt;NUMVAR&gt;"], [487, 0, 1, "cmdoption-FileCheck-D-VAR", "-D&lt;VAR"], [487, 0, 1, "cmdoption-FileCheck-help", "-help"], [487, 0, 1, "cmdoption-FileCheck-v", "-v"], [487, 0, 1, "cmdoption-FileCheck-version", "-version"], [487, 0, 1, "cmdoption-FileCheck-vv", "-vv"]], "dsymutil": [[489, 0, 1, "cmdoption-dsymutil-accelerator", "--accelerator"], [489, 0, 1, "cmdoption-dsymutil-arch", "--arch"], [489, 0, 1, "cmdoption-dsymutil-dump-debug-map", "--dump-debug-map"], [489, 0, 1, "cmdoption-dsymutil-flat", "--flat"], [489, 0, 1, "cmdoption-dsymutil-gen-reproducer", "--gen-reproducer"], [489, 0, 1, "cmdoption-dsymutil-help", "--help"], [489, 0, 1, "cmdoption-dsymutil-minimize", "--minimize"], [489, 0, 1, "cmdoption-dsymutil-no-odr", "--no-odr"], [489, 0, 1, "cmdoption-dsymutil-no-output", "--no-output"], [489, 0, 1, "cmdoption-dsymutil-no-swiftmodule-timestamp", "--no-swiftmodule-timestamp"], [489, 0, 1, "cmdoption-dsymutil-num-threads", "--num-threads"], [489, 0, 1, "cmdoption-dsymutil-object-prefix-map", "--object-prefix-map"], [489, 0, 1, "cmdoption-dsymutil-oso-prepend-path", "--oso-prepend-path"], [489, 0, 1, "cmdoption-dsymutil-out", "--out"], [489, 0, 1, "cmdoption-dsymutil-papertrail", "--papertrail"], [489, 0, 1, "cmdoption-dsymutil-remarks-output-format", "--remarks-output-format"], [489, 0, 1, "cmdoption-dsymutil-remarks-prepend-path", "--remarks-prepend-path"], [489, 0, 1, "cmdoption-dsymutil-statistics", "--statistics"], [489, 0, 1, "cmdoption-dsymutil-symbol-map", "--symbol-map"], [489, 0, 1, "cmdoption-dsymutil-s", "--symtab"], [489, 0, 1, "cmdoption-dsymutil-toolchain", "--toolchain"], [489, 0, 1, "cmdoption-dsymutil-u", "--update"], [489, 0, 1, "cmdoption-dsymutil-use-reproducer", "--use-reproducer"], [489, 0, 1, "cmdoption-dsymutil-verbose", "--verbose"], [489, 0, 1, "cmdoption-dsymutil-verify", "--verify"], [489, 0, 1, "cmdoption-dsymutil-v", "--version"], [489, 0, 1, "cmdoption-dsymutil-S", "-S"], [489, 0, 1, "cmdoption-dsymutil-flat", "-f"], [489, 0, 1, "cmdoption-dsymutil-help", "-h"], [489, 0, 1, "cmdoption-dsymutil-num-threads", "-j"], [489, 0, 1, "cmdoption-dsymutil-out", "-o"], [489, 0, 1, "cmdoption-dsymutil-s", "-s"], [489, 0, 1, "cmdoption-dsymutil-u", "-u"], [489, 0, 1, "cmdoption-dsymutil-v", "-v"], [489, 0, 1, "cmdoption-dsymutil-y", "-y"], [489, 0, 1, "cmdoption-dsymutil-minimize", "-z"]], "lit": [[491, 0, 1, "cmdoption-lit-config-prefix", "--config-prefix"], [491, 0, 1, "cmdoption-lit-debug", "--debug"], [491, 0, 1, "cmdoption-lit-vv", "--echo-all-commands"], [491, 0, 1, "cmdoption-lit-filter", "--filter"], [491, 0, 1, "cmdoption-lit-h", "--help"], [491, 0, 1, "cmdoption-lit-max-failures", "--max-failures"], [491, 0, 1, "cmdoption-lit-max-tests", "--max-tests"], [491, 0, 1, "cmdoption-lit-max-time", "--max-time"], [491, 0, 1, "cmdoption-lit-no-progress-bar", "--no-progress-bar"], [491, 0, 1, "cmdoption-lit-num-shards", "--num-shards"], [491, 0, 1, "cmdoption-lit-D", "--param"], [491, 0, 1, "cmdoption-lit-path", "--path"], [491, 0, 1, "cmdoption-lit-q", "--quiet"], [491, 0, 1, "cmdoption-lit-run-shard", "--run-shard"], [491, 0, 1, "cmdoption-lit-a", "--show-all"], [491, 0, 1, "cmdoption-lit-show-suites", "--show-suites"], [491, 0, 1, "cmdoption-lit-show-tests", "--show-tests"], [491, 0, 1, "cmdoption-lit-show-unsupported", "--show-unsupported"], [491, 0, 1, "cmdoption-lit-show-xfail", "--show-xfail"], [491, 0, 1, "cmdoption-lit-shuffle", "--shuffle"], [491, 0, 1, "cmdoption-lit-s", "--succinct"], [491, 0, 1, "cmdoption-lit-time-tests", "--time-tests"], [491, 0, 1, "cmdoption-lit-timeout", "--timeout"], [491, 0, 1, "cmdoption-lit-v", "--verbose"], [491, 0, 1, "cmdoption-lit-vg", "--vg"], [491, 0, 1, "cmdoption-lit-vg-arg", "--vg-arg"], [491, 0, 1, "cmdoption-lit-vg-leak", "--vg-leak"], [491, 0, 1, "cmdoption-lit-j", "--workers"], [491, 0, 1, "cmdoption-lit-D", "-D"], [491, 0, 1, "cmdoption-lit-a", "-a"], [491, 0, 1, "cmdoption-lit-h", "-h"], [491, 0, 1, "cmdoption-lit-j", "-j"], [491, 0, 1, "cmdoption-lit-q", "-q"], [491, 0, 1, "cmdoption-lit-s", "-s"], [491, 0, 1, "cmdoption-lit-v", "-v"], [491, 0, 1, "cmdoption-lit-vv", "-vv"]], "llc": [[492, 0, 1, "cmdoption-llc-disable-excess-fp-precision", "--disable-excess-fp-precision"], [492, 0, 1, "cmdoption-llc-enable-no-infs-fp-math", "--enable-no-infs-fp-math"], [492, 0, 1, "cmdoption-llc-enable-no-nans-fp-math", "--enable-no-nans-fp-math"], [492, 0, 1, "cmdoption-llc-enable-no-signed-zeros-fp-math", "--enable-no-signed-zeros-fp-math"], [492, 0, 1, "cmdoption-llc-enable-no-trapping-fp-math", "--enable-no-trapping-fp-math"], [492, 0, 1, "cmdoption-llc-enable-unsafe-fp-math", "--enable-unsafe-fp-math"], [492, 0, 1, "cmdoption-llc-frame-pointer", "--frame-pointer"], [492, 0, 1, "cmdoption-llc-load", "--load"], [492, 0, 1, "cmdoption-llc-print-after-isel", "--print-after-isel"], [492, 0, 1, "cmdoption-llc-regalloc", "--regalloc"], [492, 0, 1, "cmdoption-llc-spiller", "--spiller"], [492, 0, 1, "cmdoption-llc-stats", "--stats"], [492, 0, 1, "cmdoption-llc-time-passes", "--time-passes"], [492, 0, 1, "cmdoption-llc-x86-asm-syntax", "--x86-asm-syntax"], [492, 0, 1, "cmdoption-llc-O", "-O"], [492, 0, 1, "cmdoption-llc-filetype", "-filetype"], [492, 0, 1, "cmdoption-llc-help", "-help"], [492, 0, 1, "cmdoption-llc-march", "-march"], [492, 0, 1, "cmdoption-llc-mattr", "-mattr"], [492, 0, 1, "cmdoption-llc-mcpu", "-mcpu"], [492, 0, 1, "cmdoption-llc-meabi", "-meabi"], [492, 0, 1, "cmdoption-llc-mtriple", "-mtriple"], [492, 0, 1, "cmdoption-llc-o", "-o"], [492, 0, 1, "cmdoption-llc-remarks-section", "-remarks-section"], [492, 0, 1, "cmdoption-llc-stack-size-section", "-stack-size-section"]], "lli": [[493, 0, 1, "cmdoption-lli-code-model", "-code-model"], [493, 0, 1, "cmdoption-lli-disable-excess-fp-precision", "-disable-excess-fp-precision"], [493, 0, 1, "cmdoption-lli-disable-post-RA-scheduler", "-disable-post-RA-scheduler"], [493, 0, 1, "cmdoption-lli-disable-spill-fusing", "-disable-spill-fusing"], [493, 0, 1, "cmdoption-lli-enable-no-infs-fp-math", "-enable-no-infs-fp-math"], [493, 0, 1, "cmdoption-lli-enable-no-nans-fp-math", "-enable-no-nans-fp-math"], [493, 0, 1, "cmdoption-lli-enable-unsafe-fp-math", "-enable-unsafe-fp-math"], [493, 0, 1, "cmdoption-lli-fake-argv0", "-fake-argv0"], [493, 0, 1, "cmdoption-lli-force-interpreter", "-force-interpreter"], [493, 0, 1, "cmdoption-lli-help", "-help"], [493, 0, 1, "cmdoption-lli-jit-enable-eh", "-jit-enable-eh"], [493, 0, 1, "cmdoption-lli-join-liveintervals", "-join-liveintervals"], [493, 0, 1, "cmdoption-lli-load", "-load"], [493, 0, 1, "cmdoption-lli-march", "-march"], [493, 0, 1, "cmdoption-lli-mattr", "-mattr"], [493, 0, 1, "cmdoption-lli-mcpu", "-mcpu"], [493, 0, 1, "cmdoption-lli-mtriple", "-mtriple"], [493, 0, 1, "cmdoption-lli-nozero-initialized-in-bss", "-nozero-initialized-in-bss"], [493, 0, 1, "cmdoption-lli-pre-RA-sched", "-pre-RA-sched"], [493, 0, 1, "cmdoption-lli-regalloc", "-regalloc"], [493, 0, 1, "cmdoption-lli-relocation-model", "-relocation-model"], [493, 0, 1, "cmdoption-lli-soft-float", "-soft-float"], [493, 0, 1, "cmdoption-lli-spiller", "-spiller"], [493, 0, 1, "cmdoption-lli-stats", "-stats"], [493, 0, 1, "cmdoption-lli-time-passes", "-time-passes"], [493, 0, 1, "cmdoption-lli-version", "-version"], [493, 0, 1, "cmdoption-lli-x86-asm-syntax", "-x86-asm-syntax"]], "llvm-ar": [[495, 0, 1, "cmdoption-llvm-ar-format", "--format"], [495, 0, 1, "cmdoption-llvm-ar-h", "--help"], [495, 0, 1, "cmdoption-llvm-ar-version", "--version"], [495, 0, 1, "cmdoption-llvm-ar-M", "-M"], [495, 0, 1, "cmdoption-llvm-ar-h", "-h"], [495, 0, 1, "cmdoption-llvm-ar-arg-FILE", "@&lt;FILE&gt;"], [495, 0, 1, "cmdoption-llvm-ar-arg-ADDLIB", "ADDLIB"], [495, 0, 1, "cmdoption-llvm-ar-arg-ADDMOD", "ADDMOD"], [495, 0, 1, "cmdoption-llvm-ar-arg-CREATE", "CREATE"], [495, 0, 1, "cmdoption-llvm-ar-arg-CREATETHIN", "CREATETHIN"], [495, 0, 1, "cmdoption-llvm-ar-arg-D", "D"], [495, 0, 1, "cmdoption-llvm-ar-arg-DELETE", "DELETE"], [495, 0, 1, "cmdoption-llvm-ar-arg-END", "END"], [495, 0, 1, "cmdoption-llvm-ar-arg-L", "L"], [495, 0, 1, "cmdoption-llvm-ar-arg-N", "N"], [495, 0, 1, "cmdoption-llvm-ar-arg-O", "O"], [495, 0, 1, "cmdoption-llvm-ar-arg-P", "P"], [495, 0, 1, "cmdoption-llvm-ar-arg-S", "S"], [495, 0, 1, "cmdoption-llvm-ar-arg-SAVE", "SAVE"], [495, 0, 1, "cmdoption-llvm-ar-arg-T", "T"], [495, 0, 1, "cmdoption-llvm-ar-arg-U", "U"], [495, 0, 1, "cmdoption-llvm-ar-arg-V", "V"], [495, 0, 1, "cmdoption-llvm-ar-arg-a", "a"], [495, 0, 1, "cmdoption-llvm-ar-arg-b", "b"], [495, 0, 1, "cmdoption-llvm-ar-arg-c", "c"], [495, 0, 1, "cmdoption-llvm-ar-arg-d", "d"], [495, 0, 1, "cmdoption-llvm-ar-arg-i", "i"], [495, 0, 1, "cmdoption-llvm-ar-arg-m", "m"], [495, 0, 1, "cmdoption-llvm-ar-arg-o", "o"], [495, 0, 1, "cmdoption-llvm-ar-arg-p", "p"], [495, 0, 1, "cmdoption-llvm-ar-arg-q", "q"], [495, 0, 1, "cmdoption-llvm-ar-arg-r", "r"], [495, 0, 1, "cmdoption-llvm-ar-arg-s", "s"], [495, 0, 1, "cmdoption-llvm-ar-arg-u", "u"], [495, 0, 1, "cmdoption-llvm-ar-arg-v", "v"], [495, 0, 1, "cmdoption-llvm-ar-arg-x", "x"]], "llvm-bcanalyzer": [[497, 0, 1, "cmdoption-llvm-bcanalyzer-dump", "-dump"], [497, 0, 1, "cmdoption-llvm-bcanalyzer-help", "-help"], [497, 0, 1, "cmdoption-llvm-bcanalyzer-nodetails", "-nodetails"], [497, 0, 1, "cmdoption-llvm-bcanalyzer-verify", "-verify"]], "llvm-cov-export": [[499, 0, 1, "cmdoption-llvm-cov-export-arch", "-arch"], [499, 0, 1, "cmdoption-llvm-cov-export-format", "-format"], [499, 0, 1, "cmdoption-llvm-cov-export-ignore-filename-regex", "-ignore-filename-regex"], [499, 0, 1, "cmdoption-llvm-cov-export-num-threads", "-j"], [499, 0, 1, "cmdoption-llvm-cov-export-num-threads", "-num-threads"], [499, 0, 1, "cmdoption-llvm-cov-export-skip-expansions", "-skip-expansions"], [499, 0, 1, "cmdoption-llvm-cov-export-skip-functions", "-skip-functions"], [499, 0, 1, "cmdoption-llvm-cov-export-summary-only", "-summary-only"]], "llvm-cov-gcov": [[499, 0, 1, "cmdoption-llvm-cov-gcov-a", "--all-blocks"], [499, 0, 1, "cmdoption-llvm-cov-gcov-c", "--branch-counts"], [499, 0, 1, "cmdoption-llvm-cov-gcov-b", "--branch-probabilities"], [499, 0, 1, "cmdoption-llvm-cov-gcov-f", "--function-summaries"], [499, 0, 1, "cmdoption-llvm-cov-gcov-x", "--hash-filenames"], [499, 0, 1, "cmdoption-llvm-cov-gcov-help", "--help"], [499, 0, 1, "cmdoption-llvm-cov-gcov-l", "--long-file-names"], [499, 0, 1, "cmdoption-llvm-cov-gcov-n", "--no-output"], [499, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-directory"], [499, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-file"], [499, 0, 1, "cmdoption-llvm-cov-gcov-p", "--preserve-paths"], [499, 0, 1, "cmdoption-llvm-cov-gcov-u", "--unconditional-branches"], [499, 0, 1, "cmdoption-llvm-cov-gcov-a", "-a"], [499, 0, 1, "cmdoption-llvm-cov-gcov-b", "-b"], [499, 0, 1, "cmdoption-llvm-cov-gcov-c", "-c"], [499, 0, 1, "cmdoption-llvm-cov-gcov-f", "-f"], [499, 0, 1, "cmdoption-llvm-cov-gcov-l", "-l"], [499, 0, 1, "cmdoption-llvm-cov-gcov-n", "-n"], [499, 0, 1, "cmdoption-llvm-cov-gcov-o", "-o"], [499, 0, 1, "cmdoption-llvm-cov-gcov-p", "-p"], [499, 0, 1, "cmdoption-llvm-cov-gcov-u", "-u"], [499, 0, 1, "cmdoption-llvm-cov-gcov-version", "-version"], [499, 0, 1, "cmdoption-llvm-cov-gcov-x", "-x"]], "llvm-cov-report": [[499, 0, 1, "cmdoption-llvm-cov-report-arch", "-arch"], [499, 0, 1, "cmdoption-llvm-cov-report-ignore-filename-regex", "-ignore-filename-regex"], [499, 0, 1, "cmdoption-llvm-cov-report-show-branch-summary", "-show-branch-summary"], [499, 0, 1, "cmdoption-llvm-cov-report-show-functions", "-show-functions"], [499, 0, 1, "cmdoption-llvm-cov-report-show-instantiation-summary", "-show-instantiation-summary"], [499, 0, 1, "cmdoption-llvm-cov-report-use-color", "-use-color"]], "llvm-cov-show": [[499, 0, 1, "cmdoption-llvm-cov-show-Xdemangler", "-Xdemangler"], [499, 0, 1, "cmdoption-llvm-cov-show-arch", "-arch"], [499, 0, 1, "cmdoption-llvm-cov-show-format", "-format"], [499, 0, 1, "cmdoption-llvm-cov-show-ignore-filename-regex", "-ignore-filename-regex"], [499, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-j"], [499, 0, 1, "cmdoption-llvm-cov-show-line-coverage-gt", "-line-coverage-gt"], [499, 0, 1, "cmdoption-llvm-cov-show-line-coverage-lt", "-line-coverage-lt"], [499, 0, 1, "cmdoption-llvm-cov-show-name", "-name"], [499, 0, 1, "cmdoption-llvm-cov-show-name-regex", "-name-regex"], [499, 0, 1, "cmdoption-llvm-cov-show-name-whitelist", "-name-whitelist"], [499, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-num-threads"], [499, 0, 1, "cmdoption-llvm-cov-show-output-dir", "-output-dir"], [499, 0, 1, "cmdoption-llvm-cov-show-path-equivalence", "-path-equivalence"], [499, 0, 1, "cmdoption-llvm-cov-show-region-coverage-gt", "-region-coverage-gt"], [499, 0, 1, "cmdoption-llvm-cov-show-region-coverage-lt", "-region-coverage-lt"], [499, 0, 1, "cmdoption-llvm-cov-show-show-branches", "-show-branches"], [499, 0, 1, "cmdoption-llvm-cov-show-show-expansions", "-show-expansions"], [499, 0, 1, "cmdoption-llvm-cov-show-show-instantiations", "-show-instantiations"], [499, 0, 1, "cmdoption-llvm-cov-show-show-line-counts", "-show-line-counts"], [499, 0, 1, "cmdoption-llvm-cov-show-show-line-counts-or-regions", "-show-line-counts-or-regions"], [499, 0, 1, "cmdoption-llvm-cov-show-show-regions", "-show-regions"], [499, 0, 1, "cmdoption-llvm-cov-show-tab-size", "-tab-size"], [499, 0, 1, "cmdoption-llvm-cov-show-use-color", "-use-color"]], "llvm-cxxfilt": [[500, 0, 1, "cmdoption-llvm-cxxfilt-format", "--format"], [500, 0, 1, "cmdoption-llvm-cxxfilt-help", "--help"], [500, 0, 1, "cmdoption-llvm-cxxfilt-help-list", "--help-list"], [500, 0, 1, "cmdoption-llvm-cxxfilt-no-strip-underscore", "--no-strip-underscore"], [500, 0, 1, "cmdoption-llvm-cxxfilt-strip-underscore", "--strip-underscore"], [500, 0, 1, "cmdoption-llvm-cxxfilt-types", "--types"], [500, 0, 1, "cmdoption-llvm-cxxfilt-version", "--version"], [500, 0, 1, "cmdoption-llvm-cxxfilt-strip-underscore", "-_"], [500, 0, 1, "cmdoption-llvm-cxxfilt-help", "-h"], [500, 0, 1, "cmdoption-llvm-cxxfilt-no-strip-underscore", "-n"], [500, 0, 1, "cmdoption-llvm-cxxfilt-format", "-s"], [500, 0, 1, "cmdoption-llvm-cxxfilt-types", "-t"], [500, 0, 1, "cmdoption-llvm-cxxfilt-arg-FILE", "@&lt;FILE&gt;"]], "llvm-cxxmap": [[501, 0, 1, "cmdoption-llvm-cxxmap-Wambiguous", "-Wambiguous"], [501, 0, 1, "cmdoption-llvm-cxxmap-Wincomplete", "-Wincomplete"], [501, 0, 1, "cmdoption-llvm-cxxmap-output", "-o"], [501, 0, 1, "cmdoption-llvm-cxxmap-output", "-output"], [501, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-r"], [501, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-remapping-file"]], "llvm-dwarfdump": [[504, 0, 1, "cmdoption-llvm-dwarfdump-a", "--all"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-names"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-namespaces"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-objc"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-types"], [504, 0, 1, "cmdoption-llvm-dwarfdump-arch", "--arch"], [504, 0, 1, "cmdoption-llvm-dwarfdump-color", "--color"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-abbrev"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-addr"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-aranges"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-cu-index"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-frame"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-gnu-pubnames"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-gnu-pubtypes"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-info"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-line"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-line-str"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-loc"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-loclists"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-macro"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-names"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-pubnames"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-pubtypes"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-ranges"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-rnglists"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-str"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-str-offsets"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-tu-index"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-types"], [504, 0, 1, "cmdoption-llvm-dwarfdump-diff", "--diff"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--eh-frame"], [504, 0, 1, "cmdoption-llvm-dwarfdump-f", "--find"], [504, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--gdb-index"], [504, 0, 1, "cmdoption-llvm-dwarfdump-h", "--help"], [504, 0, 1, "cmdoption-llvm-dwarfdump-help-list", "--help-list"], [504, 0, 1, "cmdoption-llvm-dwarfdump-i", "--ignore-case"], [504, 0, 1, "cmdoption-llvm-dwarfdump-lookup", "--lookup"], [504, 0, 1, "cmdoption-llvm-dwarfdump-n", "--name"], [504, 0, 1, "cmdoption-llvm-dwarfdump-parent-recurse-depth", "--parent-recurse-depth"], [504, 0, 1, "cmdoption-llvm-dwarfdump-quiet", "--quiet"], [504, 0, 1, "cmdoption-llvm-dwarfdump-r", "--recurse-depth"], [504, 0, 1, "cmdoption-llvm-dwarfdump-x", "--regex"], [504, 0, 1, "cmdoption-llvm-dwarfdump-c", "--show-children"], [504, 0, 1, "cmdoption-llvm-dwarfdump-F", "--show-form"], [504, 0, 1, "cmdoption-llvm-dwarfdump-p", "--show-parents"], [504, 0, 1, "cmdoption-llvm-dwarfdump-show-section-sizes", "--show-section-sizes"], [504, 0, 1, "cmdoption-llvm-dwarfdump-statistics", "--statistics"], [504, 0, 1, "cmdoption-llvm-dwarfdump-summarize-types", "--summarize-types"], [504, 0, 1, "cmdoption-llvm-dwarfdump-u", "--uuid"], [504, 0, 1, "cmdoption-llvm-dwarfdump-v", "--verbose"], [504, 0, 1, "cmdoption-llvm-dwarfdump-verify", "--verify"], [504, 0, 1, "cmdoption-llvm-dwarfdump-version", "--version"], [504, 0, 1, "cmdoption-llvm-dwarfdump-F", "-F"], [504, 0, 1, "cmdoption-llvm-dwarfdump-a", "-a"], [504, 0, 1, "cmdoption-llvm-dwarfdump-c", "-c"], [504, 0, 1, "cmdoption-llvm-dwarfdump-f", "-f"], [504, 0, 1, "cmdoption-llvm-dwarfdump-h", "-h"], [504, 0, 1, "cmdoption-llvm-dwarfdump-i", "-i"], [504, 0, 1, "cmdoption-llvm-dwarfdump-n", "-n"], [504, 0, 1, "cmdoption-llvm-dwarfdump-o", "-o"], [504, 0, 1, "cmdoption-llvm-dwarfdump-p", "-p"], [504, 0, 1, "cmdoption-llvm-dwarfdump-r", "-r"], [504, 0, 1, "cmdoption-llvm-dwarfdump-u", "-u"], [504, 0, 1, "cmdoption-llvm-dwarfdump-v", "-v"], [504, 0, 1, "cmdoption-llvm-dwarfdump-x", "-x"], [504, 0, 1, "cmdoption-llvm-dwarfdump-arg-FILE", "@&lt;FILE&gt;"]], "llvm-exegesis": [[505, 0, 1, "cmdoption-llvm-exegesis-dump-object-to-disk", "--dump-object-to-disk"], [505, 0, 1, "cmdoption-llvm-exegesis-analysis-clustering", "-analysis-clustering"], [505, 0, 1, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", "-analysis-clustering-epsilon"], [505, 0, 1, "cmdoption-llvm-exegesis-analysis-clusters-output-file", "-analysis-clusters-output-file"], [505, 0, 1, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", "-analysis-display-unstable-clusters"], [505, 0, 1, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", "-analysis-inconsistencies-output-file"], [505, 0, 1, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", "-analysis-inconsistency-epsilon"], [505, 0, 1, "cmdoption-llvm-exegesis-analysis-numpoints", "-analysis-numpoints"], [505, 0, 1, "cmdoption-llvm-exegesis-benchmarks-file", "-benchmarks-file"], [505, 0, 1, "cmdoption-llvm-exegesis-help", "-help"], [505, 0, 1, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", "-ignore-invalid-sched-class"], [505, 0, 1, "cmdoption-llvm-exegesis-max-configs-per-opcode", "-max-configs-per-opcode"], [505, 0, 1, "cmdoption-llvm-exegesis-mcpu", "-mcpu"], [505, 0, 1, "cmdoption-llvm-exegesis-mode", "-mode"], [505, 0, 1, "cmdoption-llvm-exegesis-num-repetitions", "-num-repetitions"], [505, 0, 1, "cmdoption-llvm-exegesis-opcode-index", "-opcode-index"], [505, 0, 1, "cmdoption-llvm-exegesis-opcode-name", "-opcode-name"], [505, 0, 1, "cmdoption-llvm-exegesis-repetition-mode", "-repetition-mode"], [505, 0, 1, "cmdoption-llvm-exegesis-snippets-file", "-snippets-file"], [505, 0, 1, "cmdoption-llvm-exegesis-x86-lbr-sample-period", "-x86-lbr-sample-period"]], "llvm-install-name-tool": [[507, 0, 1, "cmdoption-llvm-install-name-tool-help", "--help"], [507, 0, 1, "cmdoption-llvm-install-name-tool-version", "--version"], [507, 0, 1, "cmdoption-llvm-install-name-tool-version", "-V"], [507, 0, 1, "cmdoption-llvm-install-name-tool-add_rpath", "-add_rpath"], [507, 0, 1, "cmdoption-llvm-install-name-tool-change", "-change"], [507, 0, 1, "cmdoption-llvm-install-name-tool-delete_all_rpaths", "-delete_all_rpaths"], [507, 0, 1, "cmdoption-llvm-install-name-tool-delete_rpath", "-delete_rpath"], [507, 0, 1, "cmdoption-llvm-install-name-tool-help", "-h"], [507, 0, 1, "cmdoption-llvm-install-name-tool-id", "-id"], [507, 0, 1, "cmdoption-llvm-install-name-tool-rpath", "-rpath"]], "llvm-libtool-darwin": [[509, 0, 1, "cmdoption-llvm-libtool-darwin-D", "-D"], [509, 0, 1, "cmdoption-llvm-libtool-darwin-L", "-L"], [509, 0, 1, "cmdoption-llvm-libtool-darwin-U", "-U"], [509, 0, 1, "cmdoption-llvm-libtool-darwin-V", "-V"], [509, 0, 1, "cmdoption-llvm-libtool-darwin-arch_only", "-arch_only"], [509, 0, 1, "cmdoption-llvm-libtool-darwin-color", "-color"], [509, 0, 1, "cmdoption-llvm-libtool-darwin-filelist", "-filelist"], [509, 0, 1, "cmdoption-llvm-libtool-darwin-h", "-h"], [509, 0, 1, "cmdoption-llvm-libtool-darwin-h", "-help"], [509, 0, 1, "cmdoption-llvm-libtool-darwin-help-list", "-help-list"], [509, 0, 1, "cmdoption-llvm-libtool-darwin-l", "-l"], [509, 0, 1, "cmdoption-llvm-libtool-darwin-o", "-o"], [509, 0, 1, "cmdoption-llvm-libtool-darwin-static", "-static"], [509, 0, 1, "cmdoption-llvm-libtool-darwin-version", "-version"]], "llvm-link": [[510, 0, 1, "cmdoption-llvm-link-S", "-S"], [510, 0, 1, "cmdoption-llvm-link-d", "-d"], [510, 0, 1, "cmdoption-llvm-link-f", "-f"], [510, 0, 1, "cmdoption-llvm-link-help", "-help"], [510, 0, 1, "cmdoption-llvm-link-o", "-o"], [510, 0, 1, "cmdoption-llvm-link-v", "-v"]], "llvm-lipo": [[511, 0, 1, "cmdoption-llvm-lipo-archs", "-archs"], [511, 0, 1, "cmdoption-llvm-lipo-create", "-create"], [511, 0, 1, "cmdoption-llvm-lipo-help", "-h"], [511, 0, 1, "cmdoption-llvm-lipo-help", "-help"], [511, 0, 1, "cmdoption-llvm-lipo-info", "-info"], [511, 0, 1, "cmdoption-llvm-lipo-replace", "-replace"], [511, 0, 1, "cmdoption-llvm-lipo-segalign", "-segalign"], [511, 0, 1, "cmdoption-llvm-lipo-thin", "-thin"], [511, 0, 1, "cmdoption-llvm-lipo-verify_arch", "-verify_arch"], [511, 0, 1, "cmdoption-llvm-lipo-version", "-version"]], "llvm-locstats": [[512, 0, 1, "cmdoption-llvm-locstats-compare", "--compare"], [512, 0, 1, "cmdoption-llvm-locstats-draw-plot", "--draw-plot"], [512, 0, 1, "cmdoption-llvm-locstats-ignore-debug-entry-values", "--ignore-debug-entry-values"], [512, 0, 1, "cmdoption-llvm-locstats-only-formal-parameters", "--only-formal-parameters"], [512, 0, 1, "cmdoption-llvm-locstats-only-variables", "--only-variables"]], "llvm-mca": [[513, 0, 1, "cmdoption-llvm-mca-all-stats", "-all-stats"], [513, 0, 1, "cmdoption-llvm-mca-all-views", "-all-views"], [513, 0, 1, "cmdoption-llvm-mca-bottleneck-analysis", "-bottleneck-analysis"], [513, 0, 1, "cmdoption-llvm-mca-dispatch", "-dispatch"], [513, 0, 1, "cmdoption-llvm-mca-dispatch-stats", "-dispatch-stats"], [513, 0, 1, "cmdoption-llvm-mca-help", "-help"], [513, 0, 1, "cmdoption-llvm-mca-instruction-info", "-instruction-info"], [513, 0, 1, "cmdoption-llvm-mca-instruction-tables", "-instruction-tables"], [513, 0, 1, "cmdoption-llvm-mca-iterations", "-iterations"], [513, 0, 1, "cmdoption-llvm-mca-json", "-json"], [513, 0, 1, "cmdoption-llvm-mca-lqueue", "-lqueue"], [513, 0, 1, "cmdoption-llvm-mca-march", "-march"], [513, 0, 1, "cmdoption-llvm-mca-mcpu", "-mcpu"], [513, 0, 1, "cmdoption-llvm-mca-mtriple", "-mtriple"], [513, 0, 1, "cmdoption-llvm-mca-noalias", "-noalias"], [513, 0, 1, "cmdoption-llvm-mca-o", "-o"], [513, 0, 1, "cmdoption-llvm-mca-output-asm-variant", "-output-asm-variant"], [513, 0, 1, "cmdoption-llvm-mca-print-imm-hex", "-print-imm-hex"], [513, 0, 1, "cmdoption-llvm-mca-register-file-size", "-register-file-size"], [513, 0, 1, "cmdoption-llvm-mca-register-file-stats", "-register-file-stats"], [513, 0, 1, "cmdoption-llvm-mca-resource-pressure", "-resource-pressure"], [513, 0, 1, "cmdoption-llvm-mca-retire-stats", "-retire-stats"], [513, 0, 1, "cmdoption-llvm-mca-scheduler-stats", "-scheduler-stats"], [513, 0, 1, "cmdoption-llvm-mca-show-encoding", "-show-encoding"], [513, 0, 1, "cmdoption-llvm-mca-squeue", "-squeue"], [513, 0, 1, "cmdoption-llvm-mca-timeline", "-timeline"], [513, 0, 1, "cmdoption-llvm-mca-timeline-max-cycles", "-timeline-max-cycles"], [513, 0, 1, "cmdoption-llvm-mca-timeline-max-iterations", "-timeline-max-iterations"]], "llvm-nm": [[514, 0, 1, "cmdoption-llvm-nm-add-dyldinfo", "--add-dyldinfo"], [514, 0, 1, "cmdoption-llvm-nm-add-inlinedinfo", "--add-inlinedinfo"], [514, 0, 1, "cmdoption-llvm-nm-arch", "--arch"], [514, 0, 1, "cmdoption-llvm-nm-debug-syms", "--debug-syms"], [514, 0, 1, "cmdoption-llvm-nm-defined-only", "--defined-only"], [514, 0, 1, "cmdoption-llvm-nm-demangle", "--demangle"], [514, 0, 1, "cmdoption-llvm-nm-dyldinfo-only", "--dyldinfo-only"], [514, 0, 1, "cmdoption-llvm-nm-dynamic", "--dynamic"], [514, 0, 1, "cmdoption-llvm-nm-extern-only", "--extern-only"], [514, 0, 1, "cmdoption-llvm-nm-format", "--format"], [514, 0, 1, "cmdoption-llvm-nm-help", "--help"], [514, 0, 1, "cmdoption-llvm-nm-help-list", "--help-list"], [514, 0, 1, "cmdoption-llvm-nm-just-symbol-name", "--just-symbol-name"], [514, 0, 1, "cmdoption-llvm-nm-no-demangle", "--no-demangle"], [514, 0, 1, "cmdoption-llvm-nm-no-dyldinfo", "--no-dyldinfo"], [514, 0, 1, "cmdoption-llvm-nm-no-llvm-bc", "--no-llvm-bc"], [514, 0, 1, "cmdoption-llvm-nm-no-sort", "--no-sort"], [514, 0, 1, "cmdoption-llvm-nm-no-weak", "--no-weak"], [514, 0, 1, "cmdoption-llvm-nm-numeric-sort", "--numeric-sort"], [514, 0, 1, "cmdoption-llvm-nm-portability", "--portability"], [514, 0, 1, "cmdoption-llvm-nm-print-armap", "--print-armap"], [514, 0, 1, "cmdoption-llvm-nm-print-file-name", "--print-file-name"], [514, 0, 1, "cmdoption-llvm-nm-print-size", "--print-size"], [514, 0, 1, "cmdoption-llvm-nm-radix", "--radix"], [514, 0, 1, "cmdoption-llvm-nm-reverse-sort", "--reverse-sort"], [514, 0, 1, "cmdoption-llvm-nm-size-sort", "--size-sort"], [514, 0, 1, "cmdoption-llvm-nm-special-syms", "--special-syms"], [514, 0, 1, "cmdoption-llvm-nm-undefined-only", "--undefined-only"], [514, 0, 1, "cmdoption-llvm-nm-version", "--version"], [514, 0, 1, "cmdoption-llvm-nm-without-aliases", "--without-aliases"], [514, 0, 1, "cmdoption-llvm-nm-print-file-name", "-A"], [514, 0, 1, "cmdoption-llvm-nm-B", "-B"], [514, 0, 1, "cmdoption-llvm-nm-demangle", "-C"], [514, 0, 1, "cmdoption-llvm-nm-dynamic", "-D"], [514, 0, 1, "cmdoption-llvm-nm-print-armap", "-M"], [514, 0, 1, "cmdoption-llvm-nm-portability", "-P"], [514, 0, 1, "cmdoption-llvm-nm-print-size", "-S"], [514, 0, 1, "cmdoption-llvm-nm-defined-only", "-U"], [514, 0, 1, "cmdoption-llvm-nm-no-weak", "-W"], [514, 0, 1, "cmdoption-llvm-nm-debug-syms", "-a"], [514, 0, 1, "cmdoption-llvm-nm-format", "-f"], [514, 0, 1, "cmdoption-llvm-nm-extern-only", "-g"], [514, 0, 1, "cmdoption-llvm-nm-help", "-h"], [514, 0, 1, "cmdoption-llvm-nm-just-symbol-name", "-j"], [514, 0, 1, "cmdoption-llvm-nm-m", "-m"], [514, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-n"], [514, 0, 1, "cmdoption-llvm-nm-print-file-name", "-o"], [514, 0, 1, "cmdoption-llvm-nm-no-sort", "-p"], [514, 0, 1, "cmdoption-llvm-nm-reverse-sort", "-r"], [514, 0, 1, "cmdoption-llvm-nm-s", "-s"], [514, 0, 1, "cmdoption-llvm-nm-radix", "-t"], [514, 0, 1, "cmdoption-llvm-nm-undefined-only", "-u"], [514, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-v"], [514, 0, 1, "cmdoption-llvm-nm-x", "-x"], [514, 0, 1, "cmdoption-llvm-nm-arg-FILE", "@&lt;FILE&gt;"]], "llvm-objcopy": [[515, 0, 1, "cmdoption-llvm-objcopy-add-gnu-debuglink", "--add-gnu-debuglink"], [515, 0, 1, "cmdoption-llvm-objcopy-add-section", "--add-section"], [515, 0, 1, "cmdoption-llvm-objcopy-add-symbol", "--add-symbol"], [515, 0, 1, "cmdoption-llvm-objcopy-change-start", "--adjust-start"], [515, 0, 1, "cmdoption-llvm-objcopy-allow-broken-links", "--allow-broken-links"], [515, 0, 1, "cmdoption-llvm-objcopy-binary-architecture", "--binary-architecture"], [515, 0, 1, "cmdoption-llvm-objcopy-build-id-link-dir", "--build-id-link-dir"], [515, 0, 1, "cmdoption-llvm-objcopy-build-id-link-input", "--build-id-link-input"], [515, 0, 1, "cmdoption-llvm-objcopy-build-id-link-output", "--build-id-link-output"], [515, 0, 1, "cmdoption-llvm-objcopy-change-start", "--change-start"], [515, 0, 1, "cmdoption-llvm-objcopy-compress-debug-sections", "--compress-debug-sections"], [515, 0, 1, "cmdoption-llvm-objcopy-decompress-debug-sections", "--decompress-debug-sections"], [515, 0, 1, "cmdoption-llvm-objcopy-disable-deterministic-archives", "--disable-deterministic-archives"], [515, 0, 1, "cmdoption-llvm-objcopy-discard-all", "--discard-all"], [515, 0, 1, "cmdoption-llvm-objcopy-discard-locals", "--discard-locals"], [515, 0, 1, "cmdoption-llvm-objcopy-dump-section", "--dump-section"], [515, 0, 1, "cmdoption-llvm-objcopy-enable-deterministic-archives", "--enable-deterministic-archives"], [515, 0, 1, "cmdoption-llvm-objcopy-extract-dwo", "--extract-dwo"], [515, 0, 1, "cmdoption-llvm-objcopy-extract-main-partition", "--extract-main-partition"], [515, 0, 1, "cmdoption-llvm-objcopy-extract-partition", "--extract-partition"], [515, 0, 1, "cmdoption-llvm-objcopy-globalize-symbol", "--globalize-symbol"], [515, 0, 1, "cmdoption-llvm-objcopy-globalize-symbols", "--globalize-symbols"], [515, 0, 1, "cmdoption-llvm-objcopy-help", "--help"], [515, 0, 1, "cmdoption-llvm-objcopy-input-target", "--input-target"], [515, 0, 1, "cmdoption-llvm-objcopy-keep-file-symbols", "--keep-file-symbols"], [515, 0, 1, "cmdoption-llvm-objcopy-keep-global-symbol", "--keep-global-symbol"], [515, 0, 1, "cmdoption-llvm-objcopy-keep-global-symbols", "--keep-global-symbols"], [515, 0, 1, "cmdoption-llvm-objcopy-keep-section", "--keep-section"], [515, 0, 1, "cmdoption-llvm-objcopy-keep-symbol", "--keep-symbol"], [515, 0, 1, "cmdoption-llvm-objcopy-keep-symbols", "--keep-symbols"], [515, 0, 1, "cmdoption-llvm-objcopy-localize-hidden", "--localize-hidden"], [515, 0, 1, "cmdoption-llvm-objcopy-localize-symbol", "--localize-symbol"], [515, 0, 1, "cmdoption-llvm-objcopy-localize-symbols", "--localize-symbols"], [515, 0, 1, "cmdoption-llvm-objcopy-new-symbol-visibility", "--new-symbol-visibility"], [515, 0, 1, "cmdoption-llvm-objcopy-only-keep-debug", "--only-keep-debug"], [515, 0, 1, "cmdoption-llvm-objcopy-only-section", "--only-section"], [515, 0, 1, "cmdoption-llvm-objcopy-output-target", "--output-target"], [515, 0, 1, "cmdoption-llvm-objcopy-prefix-alloc-sections", "--prefix-alloc-sections"], [515, 0, 1, "cmdoption-llvm-objcopy-prefix-symbols", "--prefix-symbols"], [515, 0, 1, "cmdoption-llvm-objcopy-preserve-dates", "--preserve-dates"], [515, 0, 1, "cmdoption-llvm-objcopy-redefine-sym", "--redefine-sym"], [515, 0, 1, "cmdoption-llvm-objcopy-redefine-syms", "--redefine-syms"], [515, 0, 1, "cmdoption-llvm-objcopy-regex", "--regex"], [515, 0, 1, "cmdoption-llvm-objcopy-remove-section", "--remove-section"], [515, 0, 1, "cmdoption-llvm-objcopy-rename-section", "--rename-section"], [515, 0, 1, "cmdoption-llvm-objcopy-set-section-alignment", "--set-section-alignment"], [515, 0, 1, "cmdoption-llvm-objcopy-set-section-flags", "--set-section-flags"], [515, 0, 1, "cmdoption-llvm-objcopy-set-start-addr", "--set-start-addr"], [515, 0, 1, "cmdoption-llvm-objcopy-split-dwo", "--split-dwo"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-all", "--strip-all"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-all-gnu", "--strip-all-gnu"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-debug", "--strip-debug"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-dwo", "--strip-dwo"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-non-alloc", "--strip-non-alloc"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-sections", "--strip-sections"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-symbol", "--strip-symbol"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-symbols", "--strip-symbols"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded", "--strip-unneeded"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded-symbol", "--strip-unneeded-symbol"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded-symbols", "--strip-unneeded-symbols"], [515, 0, 1, "cmdoption-llvm-objcopy-target", "--target"], [515, 0, 1, "cmdoption-llvm-objcopy-version", "--version"], [515, 0, 1, "cmdoption-llvm-objcopy-weaken", "--weaken"], [515, 0, 1, "cmdoption-llvm-objcopy-weaken-symbol", "--weaken-symbol"], [515, 0, 1, "cmdoption-llvm-objcopy-weaken-symbols", "--weaken-symbols"], [515, 0, 1, "cmdoption-llvm-objcopy-wildcard", "--wildcard"], [515, 0, 1, "cmdoption-llvm-objcopy-binary-architecture", "-B"], [515, 0, 1, "cmdoption-llvm-objcopy-enable-deterministic-archives", "-D"], [515, 0, 1, "cmdoption-llvm-objcopy-target", "-F"], [515, 0, 1, "cmdoption-llvm-objcopy-input-target", "-I"], [515, 0, 1, "cmdoption-llvm-objcopy-keep-symbol", "-K"], [515, 0, 1, "cmdoption-llvm-objcopy-localize-symbol", "-L"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-symbol", "-N"], [515, 0, 1, "cmdoption-llvm-objcopy-output-target", "-O"], [515, 0, 1, "cmdoption-llvm-objcopy-remove-section", "-R"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-all", "-S"], [515, 0, 1, "cmdoption-llvm-objcopy-disable-deterministic-archives", "-U"], [515, 0, 1, "cmdoption-llvm-objcopy-version", "-V"], [515, 0, 1, "cmdoption-llvm-objcopy-weaken-symbol", "-W"], [515, 0, 1, "cmdoption-llvm-objcopy-discard-locals", "-X"], [515, 0, 1, "cmdoption-llvm-objcopy-strip-debug", "-g"], [515, 0, 1, "cmdoption-llvm-objcopy-help", "-h"], [515, 0, 1, "cmdoption-llvm-objcopy-only-section", "-j"], [515, 0, 1, "cmdoption-llvm-objcopy-preserve-dates", "-p"], [515, 0, 1, "cmdoption-llvm-objcopy-wildcard", "-w"], [515, 0, 1, "cmdoption-llvm-objcopy-discard-all", "-x"], [515, 0, 1, "cmdoption-llvm-objcopy-arg-FILE", "@&lt;FILE&gt;"]], "llvm-objdump": [[516, 0, 1, "cmdoption-llvm-objdump-adjust-vma", "--adjust-vma"], [516, 0, 1, "cmdoption-llvm-objdump-x", "--all-headers"], [516, 0, 1, "cmdoption-llvm-objdump-arch", "--arch"], [516, 0, 1, "cmdoption-llvm-objdump-arch-name", "--arch-name"], [516, 0, 1, "cmdoption-llvm-objdump-a", "--archive-headers"], [516, 0, 1, "cmdoption-llvm-objdump-archive-member-offsets", "--archive-member-offsets"], [516, 0, 1, "cmdoption-llvm-objdump-bind", "--bind"], [516, 0, 1, "cmdoption-llvm-objdump-cfg", "--cfg"], [516, 0, 1, "cmdoption-llvm-objdump-data-in-code", "--data-in-code"], [516, 0, 1, "cmdoption-llvm-objdump-debug-vars", "--debug-vars"], [516, 0, 1, "cmdoption-llvm-objdump-debug-vars-indent", "--debug-vars-indent"], [516, 0, 1, "cmdoption-llvm-objdump-C", "--demangle"], [516, 0, 1, "cmdoption-llvm-objdump-dis-symname", "--dis-symname"], [516, 0, 1, "cmdoption-llvm-objdump-d", "--disassemble"], [516, 0, 1, "cmdoption-llvm-objdump-D", "--disassemble-all"], [516, 0, 1, "cmdoption-llvm-objdump-disassemble-symbols", "--disassemble-symbols"], [516, 0, 1, "cmdoption-llvm-objdump-z", "--disassemble-zeroes"], [516, 0, 1, "cmdoption-llvm-objdump-M", "--disassembler-options"], [516, 0, 1, "cmdoption-llvm-objdump-dsym", "--dsym"], [516, 0, 1, "cmdoption-llvm-objdump-dwarf", "--dwarf"], [516, 0, 1, "cmdoption-llvm-objdump-dylib-id", "--dylib-id"], [516, 0, 1, "cmdoption-llvm-objdump-dylibs-used", "--dylibs-used"], [516, 0, 1, "cmdoption-llvm-objdump-R", "--dynamic-reloc"], [516, 0, 1, "cmdoption-llvm-objdump-T", "--dynamic-syms"], [516, 0, 1, "cmdoption-llvm-objdump-exports-trie", "--exports-trie"], [516, 0, 1, "cmdoption-llvm-objdump-fault-map-section", "--fault-map-section"], [516, 0, 1, "cmdoption-llvm-objdump-f", "--file-headers"], [516, 0, 1, "cmdoption-llvm-objdump-s", "--full-contents"], [516, 0, 1, "cmdoption-llvm-objdump-full-leading-addr", "--full-leading-addr"], [516, 0, 1, "cmdoption-llvm-objdump-h", "--headers"], [516, 0, 1, "cmdoption-llvm-objdump-help", "--help"], [516, 0, 1, "cmdoption-llvm-objdump-indirect-symbols", "--indirect-symbols"], [516, 0, 1, "cmdoption-llvm-objdump-info-plist", "--info-plist"], [516, 0, 1, "cmdoption-llvm-objdump-lazy-bind", "--lazy-bind"], [516, 0, 1, "cmdoption-llvm-objdump-l", "--line-numbers"], [516, 0, 1, "cmdoption-llvm-objdump-link-opt-hints", "--link-opt-hints"], [516, 0, 1, "cmdoption-llvm-objdump-m", "--macho"], [516, 0, 1, "cmdoption-llvm-objdump-mattr", "--mattr"], [516, 0, 1, "cmdoption-llvm-objdump-mcpu", "--mcpu"], [516, 0, 1, "cmdoption-llvm-objdump-no-leading-addr", "--no-leading-addr"], [516, 0, 1, "cmdoption-llvm-objdump-no-leading-headers", "--no-leading-headers"], [516, 0, 1, "cmdoption-llvm-objdump-no-show-raw-insn", "--no-show-raw-insn"], [516, 0, 1, "cmdoption-llvm-objdump-no-symbolic-operands", "--no-symbolic-operands"], [516, 0, 1, "cmdoption-llvm-objdump-non-verbose", "--non-verbose"], [516, 0, 1, "cmdoption-llvm-objdump-objc-meta-data", "--objc-meta-data"], [516, 0, 1, "cmdoption-llvm-objdump-prefix", "--prefix"], [516, 0, 1, "cmdoption-llvm-objdump-print-imm-hex", "--print-imm-hex"], [516, 0, 1, "cmdoption-llvm-objdump-private-header", "--private-header"], [516, 0, 1, "cmdoption-llvm-objdump-p", "--private-headers"], [516, 0, 1, "cmdoption-llvm-objdump-raw-clang-ast", "--raw-clang-ast"], [516, 0, 1, "cmdoption-llvm-objdump-rebase", "--rebase"], [516, 0, 1, "cmdoption-llvm-objdump-r", "--reloc"], [516, 0, 1, "cmdoption-llvm-objdump-j", "--section"], [516, 0, 1, "cmdoption-llvm-objdump-h", "--section-headers"], [516, 0, 1, "cmdoption-llvm-objdump-show-lma", "--show-lma"], [516, 0, 1, "cmdoption-llvm-objdump-S", "--source"], [516, 0, 1, "cmdoption-llvm-objdump-start-address", "--start-address"], [516, 0, 1, "cmdoption-llvm-objdump-stop-address", "--stop-address"], [516, 0, 1, "cmdoption-llvm-objdump-symbol-description", "--symbol-description"], [516, 0, 1, "cmdoption-llvm-objdump-symbolize-operands", "--symbolize-operands"], [516, 0, 1, "cmdoption-llvm-objdump-t", "--syms"], [516, 0, 1, "cmdoption-llvm-objdump-triple", "--triple"], [516, 0, 1, "cmdoption-llvm-objdump-universal-headers", "--universal-headers"], [516, 0, 1, "cmdoption-llvm-objdump-u", "--unwind-info"], [516, 0, 1, "cmdoption-llvm-objdump-version", "--version"], [516, 0, 1, "cmdoption-llvm-objdump-weak-bind", "--weak-bind"], [516, 0, 1, "cmdoption-llvm-objdump-w", "--wide"], [516, 0, 1, "cmdoption-llvm-objdump-x86-asm-syntax", "--x86-asm-syntax"], [516, 0, 1, "cmdoption-llvm-objdump-C", "-C"], [516, 0, 1, "cmdoption-llvm-objdump-D", "-D"], [516, 0, 1, "cmdoption-llvm-objdump-M", "-M"], [516, 0, 1, "cmdoption-llvm-objdump-R", "-R"], [516, 0, 1, "cmdoption-llvm-objdump-S", "-S"], [516, 0, 1, "cmdoption-llvm-objdump-T", "-T"], [516, 0, 1, "cmdoption-llvm-objdump-a", "-a"], [516, 0, 1, "cmdoption-llvm-objdump-d", "-d"], [516, 0, 1, "cmdoption-llvm-objdump-f", "-f"], [516, 0, 1, "cmdoption-llvm-objdump-g", "-g"], [516, 0, 1, "cmdoption-llvm-objdump-h", "-h"], [516, 0, 1, "cmdoption-llvm-objdump-j", "-j"], [516, 0, 1, "cmdoption-llvm-objdump-l", "-l"], [516, 0, 1, "cmdoption-llvm-objdump-m", "-m"], [516, 0, 1, "cmdoption-llvm-objdump-p", "-p"], [516, 0, 1, "cmdoption-llvm-objdump-r", "-r"], [516, 0, 1, "cmdoption-llvm-objdump-s", "-s"], [516, 0, 1, "cmdoption-llvm-objdump-t", "-t"], [516, 0, 1, "cmdoption-llvm-objdump-u", "-u"], [516, 0, 1, "cmdoption-llvm-objdump-w", "-w"], [516, 0, 1, "cmdoption-llvm-objdump-x", "-x"], [516, 0, 1, "cmdoption-llvm-objdump-z", "-z"], [516, 0, 1, "cmdoption-llvm-objdump-arg-FILE", "@&lt;FILE&gt;"], [516, 0, 1, "cmdoption-llvm-objdump-arg-att", "att"], [516, 0, 1, "cmdoption-llvm-objdump-arg-intel", "intel"]], "llvm-pdbutil-bytes": [[517, 0, 1, "cmdoption-llvm-pdbutil-bytes-block-range", "-block-range"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-byte-range", "-byte-range"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-chunks", "-chunks"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-ec", "-ec"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-files", "-files"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-fpm", "-fpm"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-id", "-id"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-mod", "-mod"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-modi", "-modi"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-name-map", "-name-map"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-sc", "-sc"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-sm", "-sm"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-split-chunks", "-split-chunks"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-stream-data", "-stream-data"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-syms", "-syms"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-type", "-type"], [517, 0, 1, "cmdoption-llvm-pdbutil-bytes-type-server", "-type-server"]], "llvm-pdbutil-dump": [[517, 0, 1, "cmdoption-llvm-pdbutil-dump-all", "-all"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-dependents", "-dependents"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-files", "-files"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-global-extras", "-global-extras"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-globals", "-globals"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-id-data", "-id-data"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-id-extras", "-id-extras"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-id-index", "-id-index"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-ids", "-ids"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-il", "-il"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-l", "-l"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-modi", "-modi"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-modules", "-modules"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-public-extras", "-public-extras"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-publics", "-publics"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-section-contribs", "-section-contribs"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-section-headers", "-section-headers"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-section-map", "-section-map"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-stream-blocks", "-stream-blocks"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-streams", "-streams"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-string-table", "-string-table"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-summary", "-summary"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-sym-data", "-sym-data"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-symbols", "-symbols"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-type-data", "-type-data"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-type-extras", "-type-extras"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-type-index", "-type-index"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-types", "-types"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-xme", "-xme"], [517, 0, 1, "cmdoption-llvm-pdbutil-dump-xmi", "-xmi"]], "llvm-pdbutil-merge": [[517, 0, 1, "cmdoption-llvm-pdbutil-merge-pdb", "-pdb"]], "llvm-pdbutil-pretty": [[517, 0, 1, "cmdoption-llvm-pdbutil-pretty-all", "-all"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-definitions", "-class-definitions"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-order", "-class-order"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", "-class-recurse-depth"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-classes", "-classes"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-color-output", "-color-output"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-compilands", "-compilands"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-enums", "-enums"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", "-exclude-compilands"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", "-exclude-symbols"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-types", "-exclude-types"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-externals", "-externals"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-globals", "-globals"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-compilands", "-include-compilands"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-symbols", "-include-symbols"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-types", "-include-types"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-lines", "-lines"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-load-address", "-load-address"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding", "-min-class-padding"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", "-min-class-padding-imm"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-type-size", "-min-type-size"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-module-syms", "-module-syms"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", "-no-compiler-generated"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", "-no-enum-definitions"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-system-libs", "-no-system-libs"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-sym-types", "-sym-types"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-symbol-order", "-symbol-order"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-typedefs", "-typedefs"], [517, 0, 1, "cmdoption-llvm-pdbutil-pretty-types", "-types"]], "llvm-pdbutil-yaml2pdb": [[517, 0, 1, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", "-pdb"]], "llvm-profdata-merge": [[518, 0, 1, "cmdoption-llvm-profdata-merge-binary", "-binary"], [518, 0, 1, "cmdoption-llvm-profdata-merge-compress-all-sections", "-compress-all-sections"], [518, 0, 1, "cmdoption-llvm-profdata-merge-extbinary", "-extbinary"], [518, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "-f"], [518, 0, 1, "cmdoption-llvm-profdata-merge-failure-mode", "-failure-mode"], [518, 0, 1, "cmdoption-llvm-profdata-merge-gcc", "-gcc"], [518, 0, 1, "cmdoption-llvm-profdata-merge-gen-partial-profile", "-gen-partial-profile"], [518, 0, 1, "cmdoption-llvm-profdata-merge-help", "-help"], [518, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "-input-files"], [518, 0, 1, "cmdoption-llvm-profdata-merge-instr", "-instr"], [518, 0, 1, "cmdoption-llvm-profdata-merge-instr-prof-cold-threshold", "-instr-prof-cold-threshold"], [518, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "-j"], [518, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "-num-threads"], [518, 0, 1, "cmdoption-llvm-profdata-merge-output", "-o"], [518, 0, 1, "cmdoption-llvm-profdata-merge-output", "-output"], [518, 0, 1, "cmdoption-llvm-profdata-merge-prof-sym-list", "-prof-sym-list"], [518, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "-r"], [518, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "-remapping-file"], [518, 0, 1, "cmdoption-llvm-profdata-merge-sample", "-sample"], [518, 0, 1, "cmdoption-llvm-profdata-merge-sparse", "-sparse"], [518, 0, 1, "cmdoption-llvm-profdata-merge-suppl-min-size-threshold", "-suppl-min-size-threshold"], [518, 0, 1, "cmdoption-llvm-profdata-merge-supplement-instr-with-sample", "-supplement-instr-with-sample"], [518, 0, 1, "cmdoption-llvm-profdata-merge-text", "-text"], [518, 0, 1, "cmdoption-llvm-profdata-merge-use-md5", "-use-md5"], [518, 0, 1, "cmdoption-llvm-profdata-merge-weighted-input", "-weighted-input"], [518, 0, 1, "cmdoption-llvm-profdata-merge-zero-counter-threshold", "-zero-counter-threshold"]], "llvm-profdata-overlap": [[518, 0, 1, "cmdoption-llvm-profdata-overlap-cs", "-cs"], [518, 0, 1, "cmdoption-llvm-profdata-overlap-function", "-function"], [518, 0, 1, "cmdoption-llvm-profdata-overlap-help", "-help"], [518, 0, 1, "cmdoption-llvm-profdata-overlap-o", "-o"], [518, 0, 1, "cmdoption-llvm-profdata-overlap-value-cutoff", "-value-cutoff"]], "llvm-profdata-show": [[518, 0, 1, "cmdoption-llvm-profdata-show-all-functions", "-all-functions"], [518, 0, 1, "cmdoption-llvm-profdata-show-counts", "-counts"], [518, 0, 1, "cmdoption-llvm-profdata-show-function", "-function"], [518, 0, 1, "cmdoption-llvm-profdata-show-help", "-help"], [518, 0, 1, "cmdoption-llvm-profdata-show-instr", "-instr"], [518, 0, 1, "cmdoption-llvm-profdata-show-list-below-cutoff", "-list-below-cutoff"], [518, 0, 1, "cmdoption-llvm-profdata-show-memop-sizes", "-memop-sizes"], [518, 0, 1, "cmdoption-llvm-profdata-show-output", "-o"], [518, 0, 1, "cmdoption-llvm-profdata-show-output", "-output"], [518, 0, 1, "cmdoption-llvm-profdata-show-sample", "-sample"], [518, 0, 1, "cmdoption-llvm-profdata-show-show-prof-sym-list", "-show-prof-sym-list"], [518, 0, 1, "cmdoption-llvm-profdata-show-show-sec-info-only", "-show-sec-info-only"], [518, 0, 1, "cmdoption-llvm-profdata-show-showcs", "-showcs"], [518, 0, 1, "cmdoption-llvm-profdata-show-text", "-text"], [518, 0, 1, "cmdoption-llvm-profdata-show-topn", "-topn"], [518, 0, 1, "cmdoption-llvm-profdata-show-value-cutoff", "-value-cutoff"]], "llvm-profgen": [[519, 0, 1, "cmdoption-llvm-profgen-binary", "--binary"], [519, 0, 1, "cmdoption-llvm-profgen-format", "--format"], [519, 0, 1, "cmdoption-llvm-profgen-output", "--output"], [519, 0, 1, "cmdoption-llvm-profgen-perfscript", "--perfscript"], [519, 0, 1, "cmdoption-llvm-profgen-show-disassembly", "--show-disassembly"], [519, 0, 1, "cmdoption-llvm-profgen-show-mmap-events", "--show-mmap-events"], [519, 0, 1, "cmdoption-llvm-profgen-x86-asm-syntax", "--x86-asm-syntax"]], "llvm-readelf": [[521, 0, 1, "cmdoption-llvm-readelf-addrsig", "--addrsig"], [521, 0, 1, "cmdoption-llvm-readelf-all", "--all"], [521, 0, 1, "cmdoption-llvm-readelf-arch-specific", "--arch-specific"], [521, 0, 1, "cmdoption-llvm-readelf-cg-profile", "--cg-profile"], [521, 0, 1, "cmdoption-llvm-readelf-color", "--color"], [521, 0, 1, "cmdoption-llvm-readelf-demangle", "--demangle"], [521, 0, 1, "cmdoption-llvm-readelf-dyn-relocations", "--dyn-relocations"], [521, 0, 1, "cmdoption-llvm-readelf-dyn-symbols", "--dyn-symbols"], [521, 0, 1, "cmdoption-llvm-readelf-dyn-symbols", "--dyn-syms"], [521, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "--dynamic"], [521, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "--dynamic-table"], [521, 0, 1, "cmdoption-llvm-readelf-elf-hash-histogram", "--elf-hash-histogram"], [521, 0, 1, "cmdoption-llvm-readelf-elf-linker-options", "--elf-linker-options"], [521, 0, 1, "cmdoption-llvm-readelf-elf-output-style", "--elf-output-style"], [521, 0, 1, "cmdoption-llvm-readelf-elf-section-groups", "--elf-section-groups"], [521, 0, 1, "cmdoption-llvm-readelf-expand-relocs", "--expand-relocs"], [521, 0, 1, "cmdoption-llvm-readelf-file-headers", "--file-headers"], [521, 0, 1, "cmdoption-llvm-readelf-gnu-hash-table", "--gnu-hash-table"], [521, 0, 1, "cmdoption-llvm-readelf-hash-symbols", "--hash-symbols"], [521, 0, 1, "cmdoption-llvm-readelf-hash-table", "--hash-table"], [521, 0, 1, "cmdoption-llvm-readelf-headers", "--headers"], [521, 0, 1, "cmdoption-llvm-readelf-help", "--help"], [521, 0, 1, "cmdoption-llvm-readelf-help-list", "--help-list"], [521, 0, 1, "cmdoption-llvm-readelf-hex-dump", "--hex-dump"], [521, 0, 1, "cmdoption-llvm-readelf-elf-hash-histogram", "--histogram"], [521, 0, 1, "cmdoption-llvm-readelf-needed-libs", "--needed-libs"], [521, 0, 1, "cmdoption-llvm-readelf-notes", "--notes"], [521, 0, 1, "cmdoption-llvm-readelf-program-headers", "--program-headers"], [521, 0, 1, "cmdoption-llvm-readelf-raw-relr", "--raw-relr"], [521, 0, 1, "cmdoption-llvm-readelf-relocations", "--relocations"], [521, 0, 1, "cmdoption-llvm-readelf-relocations", "--relocs"], [521, 0, 1, "cmdoption-llvm-readelf-section-data", "--section-data"], [521, 0, 1, "cmdoption-llvm-readelf-section-details", "--section-details"], [521, 0, 1, "cmdoption-llvm-readelf-elf-section-groups", "--section-groups"], [521, 0, 1, "cmdoption-llvm-readelf-sections", "--section-headers"], [521, 0, 1, "cmdoption-llvm-readelf-section-mapping", "--section-mapping"], [521, 0, 1, "cmdoption-llvm-readelf-section-relocations", "--section-relocations"], [521, 0, 1, "cmdoption-llvm-readelf-section-symbols", "--section-symbols"], [521, 0, 1, "cmdoption-llvm-readelf-sections", "--sections"], [521, 0, 1, "cmdoption-llvm-readelf-program-headers", "--segments"], [521, 0, 1, "cmdoption-llvm-readelf-stack-sizes", "--stack-sizes"], [521, 0, 1, "cmdoption-llvm-readelf-stackmap", "--stackmap"], [521, 0, 1, "cmdoption-llvm-readelf-string-dump", "--string-dump"], [521, 0, 1, "cmdoption-llvm-readelf-symbols", "--symbols"], [521, 0, 1, "cmdoption-llvm-readelf-symbols", "--syms"], [521, 0, 1, "cmdoption-llvm-readelf-unwind", "--unwind"], [521, 0, 1, "cmdoption-llvm-readelf-version", "--version"], [521, 0, 1, "cmdoption-llvm-readelf-version-info", "--version-info"], [521, 0, 1, "cmdoption-llvm-readelf-arch-specific", "-A"], [521, 0, 1, "cmdoption-llvm-readelf-demangle", "-C"], [521, 0, 1, "cmdoption-llvm-readelf-elf-hash-histogram", "-I"], [521, 0, 1, "cmdoption-llvm-readelf-sections", "-S"], [521, 0, 1, "cmdoption-llvm-readelf-version-info", "-V"], [521, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "-d"], [521, 0, 1, "cmdoption-llvm-readelf-headers", "-e"], [521, 0, 1, "cmdoption-llvm-readelf-elf-section-groups", "-g"], [521, 0, 1, "cmdoption-llvm-readelf-file-headers", "-h"], [521, 0, 1, "cmdoption-llvm-readelf-program-headers", "-l"], [521, 0, 1, "cmdoption-llvm-readelf-notes", "-n"], [521, 0, 1, "cmdoption-llvm-readelf-string-dump", "-p"], [521, 0, 1, "cmdoption-llvm-readelf-relocations", "-r"], [521, 0, 1, "cmdoption-llvm-readelf-symbols", "-s"], [521, 0, 1, "cmdoption-llvm-readelf-section-details", "-t"], [521, 0, 1, "cmdoption-llvm-readelf-unwind", "-u"], [521, 0, 1, "cmdoption-llvm-readelf-hex-dump", "-x"], [521, 0, 1, "cmdoption-llvm-readelf-arg-FILE", "@&lt;FILE&gt;"]], "llvm-readobj": [[522, 0, 1, "cmdoption-llvm-readobj-addrsig", "--addrsig"], [522, 0, 1, "cmdoption-llvm-readobj-all", "--all"], [522, 0, 1, "cmdoption-llvm-readobj-arch-specific", "--arch-specific"], [522, 0, 1, "cmdoption-llvm-readobj-cg-profile", "--cg-profile"], [522, 0, 1, "cmdoption-llvm-readobj-codeview", "--codeview"], [522, 0, 1, "cmdoption-llvm-readobj-codeview-ghash", "--codeview-ghash"], [522, 0, 1, "cmdoption-llvm-readobj-codeview-merged-types", "--codeview-merged-types"], [522, 0, 1, "cmdoption-llvm-readobj-codeview-subsection-bytes", "--codeview-subsection-bytes"], [522, 0, 1, "cmdoption-llvm-readobj-coff-basereloc", "--coff-basereloc"], [522, 0, 1, "cmdoption-llvm-readobj-coff-debug-directory", "--coff-debug-directory"], [522, 0, 1, "cmdoption-llvm-readobj-coff-directives", "--coff-directives"], [522, 0, 1, "cmdoption-llvm-readobj-coff-exports", "--coff-exports"], [522, 0, 1, "cmdoption-llvm-readobj-coff-imports", "--coff-imports"], [522, 0, 1, "cmdoption-llvm-readobj-coff-load-config", "--coff-load-config"], [522, 0, 1, "cmdoption-llvm-readobj-coff-resources", "--coff-resources"], [522, 0, 1, "cmdoption-llvm-readobj-coff-tls-directory", "--coff-tls-directory"], [522, 0, 1, "cmdoption-llvm-readobj-color", "--color"], [522, 0, 1, "cmdoption-llvm-readobj-demangle", "--demangle"], [522, 0, 1, "cmdoption-llvm-readobj-dependent-libraries", "--dependent-libraries"], [522, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dt"], [522, 0, 1, "cmdoption-llvm-readobj-dyn-relocations", "--dyn-relocations"], [522, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dyn-symbols"], [522, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dyn-syms"], [522, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "--dynamic"], [522, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "--dynamic-table"], [522, 0, 1, "cmdoption-llvm-readobj-elf-hash-histogram", "--elf-hash-histogram"], [522, 0, 1, "cmdoption-llvm-readobj-elf-linker-options", "--elf-linker-options"], [522, 0, 1, "cmdoption-llvm-readobj-elf-output-style", "--elf-output-style"], [522, 0, 1, "cmdoption-llvm-readobj-elf-section-groups", "--elf-section-groups"], [522, 0, 1, "cmdoption-llvm-readobj-expand-relocs", "--expand-relocs"], [522, 0, 1, "cmdoption-llvm-readobj-file-headers", "--file-headers"], [522, 0, 1, "cmdoption-llvm-readobj-gnu-hash-table", "--gnu-hash-table"], [522, 0, 1, "cmdoption-llvm-readobj-hash-symbols", "--hash-symbols"], [522, 0, 1, "cmdoption-llvm-readobj-hash-table", "--hash-table"], [522, 0, 1, "cmdoption-llvm-readobj-headers", "--headers"], [522, 0, 1, "cmdoption-llvm-readobj-help", "--help"], [522, 0, 1, "cmdoption-llvm-readobj-help-list", "--help-list"], [522, 0, 1, "cmdoption-llvm-readobj-hex-dump", "--hex-dump"], [522, 0, 1, "cmdoption-llvm-readobj-elf-hash-histogram", "--histogram"], [522, 0, 1, "cmdoption-llvm-readobj-macho-data-in-code", "--macho-data-in-code"], [522, 0, 1, "cmdoption-llvm-readobj-macho-dsymtab", "--macho-dsymtab"], [522, 0, 1, "cmdoption-llvm-readobj-macho-indirect-symbols", "--macho-indirect-symbols"], [522, 0, 1, "cmdoption-llvm-readobj-macho-linker-options", "--macho-linker-options"], [522, 0, 1, "cmdoption-llvm-readobj-macho-segment", "--macho-segment"], [522, 0, 1, "cmdoption-llvm-readobj-macho-version-min", "--macho-version-min"], [522, 0, 1, "cmdoption-llvm-readobj-needed-libs", "--needed-libs"], [522, 0, 1, "cmdoption-llvm-readobj-notes", "--notes"], [522, 0, 1, "cmdoption-llvm-readobj-program-headers", "--program-headers"], [522, 0, 1, "cmdoption-llvm-readobj-raw-relr", "--raw-relr"], [522, 0, 1, "cmdoption-llvm-readobj-relocations", "--relocations"], [522, 0, 1, "cmdoption-llvm-readobj-relocations", "--relocs"], [522, 0, 1, "cmdoption-llvm-readobj-section-data", "--sd"], [522, 0, 1, "cmdoption-llvm-readobj-section-data", "--section-data"], [522, 0, 1, "cmdoption-llvm-readobj-elf-section-groups", "--section-groups"], [522, 0, 1, "cmdoption-llvm-readobj-sections", "--section-headers"], [522, 0, 1, "cmdoption-llvm-readobj-section-mapping", "--section-mapping"], [522, 0, 1, "cmdoption-llvm-readobj-section-relocations", "--section-relocations"], [522, 0, 1, "cmdoption-llvm-readobj-section-symbols", "--section-symbols"], [522, 0, 1, "cmdoption-llvm-readobj-sections", "--sections"], [522, 0, 1, "cmdoption-llvm-readobj-program-headers", "--segments"], [522, 0, 1, "cmdoption-llvm-readobj-section-relocations", "--sr"], [522, 0, 1, "cmdoption-llvm-readobj-section-symbols", "--st"], [522, 0, 1, "cmdoption-llvm-readobj-stack-sizes", "--stack-sizes"], [522, 0, 1, "cmdoption-llvm-readobj-stackmap", "--stackmap"], [522, 0, 1, "cmdoption-llvm-readobj-string-dump", "--string-dump"], [522, 0, 1, "cmdoption-llvm-readobj-symbols", "--symbols"], [522, 0, 1, "cmdoption-llvm-readobj-symbols", "--syms"], [522, 0, 1, "cmdoption-llvm-readobj-unwind", "--unwind"], [522, 0, 1, "cmdoption-llvm-readobj-version", "--version"], [522, 0, 1, "cmdoption-llvm-readobj-version-info", "--version-info"], [522, 0, 1, "cmdoption-llvm-readobj-arch-specific", "-A"], [522, 0, 1, "cmdoption-llvm-readobj-demangle", "-C"], [522, 0, 1, "cmdoption-llvm-readobj-elf-hash-histogram", "-I"], [522, 0, 1, "cmdoption-llvm-readobj-sections", "-S"], [522, 0, 1, "cmdoption-llvm-readobj-version-info", "-V"], [522, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "-d"], [522, 0, 1, "cmdoption-llvm-readobj-headers", "-e"], [522, 0, 1, "cmdoption-llvm-readobj-elf-section-groups", "-g"], [522, 0, 1, "cmdoption-llvm-readobj-file-headers", "-h"], [522, 0, 1, "cmdoption-llvm-readobj-program-headers", "-l"], [522, 0, 1, "cmdoption-llvm-readobj-notes", "-n"], [522, 0, 1, "cmdoption-llvm-readobj-string-dump", "-p"], [522, 0, 1, "cmdoption-llvm-readobj-relocations", "-r"], [522, 0, 1, "cmdoption-llvm-readobj-sections", "-s"], [522, 0, 1, "cmdoption-llvm-readobj-symbols", "-t"], [522, 0, 1, "cmdoption-llvm-readobj-unwind", "-u"], [522, 0, 1, "cmdoption-llvm-readobj-hex-dump", "-x"], [522, 0, 1, "cmdoption-llvm-readobj-arg-FILE", "@&lt;FILE&gt;"]], "llvm-size": [[523, 0, 1, "cmdoption-llvm-size-arch", "--arch"], [523, 0, 1, "cmdoption-llvm-size-common", "--common"], [523, 0, 1, "cmdoption-llvm-size-format", "--format"], [523, 0, 1, "cmdoption-llvm-size-help", "--help"], [523, 0, 1, "cmdoption-llvm-size-help-list", "--help-list"], [523, 0, 1, "cmdoption-llvm-size-radix", "--radix"], [523, 0, 1, "cmdoption-llvm-size-totals", "--totals"], [523, 0, 1, "cmdoption-llvm-size-version", "--version"], [523, 0, 1, "cmdoption-llvm-size-A", "-A"], [523, 0, 1, "cmdoption-llvm-size-B", "-B"], [523, 0, 1, "cmdoption-llvm-size-d", "-d"], [523, 0, 1, "cmdoption-llvm-size-help", "-h"], [523, 0, 1, "cmdoption-llvm-size-l", "-l"], [523, 0, 1, "cmdoption-llvm-size-m", "-m"], [523, 0, 1, "cmdoption-llvm-size-o", "-o"], [523, 0, 1, "cmdoption-llvm-size-totals", "-t"], [523, 0, 1, "cmdoption-llvm-size-x", "-x"], [523, 0, 1, "cmdoption-llvm-size-arg-FILE", "@&lt;FILE&gt;"]], "llvm-stress": [[524, 0, 1, "cmdoption-llvm-stress-o", "-o"], [524, 0, 1, "cmdoption-llvm-stress-seed", "-seed"], [524, 0, 1, "cmdoption-llvm-stress-size", "-size"]], "llvm-strings": [[525, 0, 1, "cmdoption-llvm-strings-all", "--all"], [525, 0, 1, "cmdoption-llvm-strings-bytes", "--bytes"], [525, 0, 1, "cmdoption-llvm-strings-help", "--help"], [525, 0, 1, "cmdoption-llvm-strings-help-list", "--help-list"], [525, 0, 1, "cmdoption-llvm-strings-print-file-name", "--print-file-name"], [525, 0, 1, "cmdoption-llvm-strings-radix", "--radix"], [525, 0, 1, "cmdoption-llvm-strings-version", "--version"], [525, 0, 1, "cmdoption-llvm-strings-all", "-a"], [525, 0, 1, "cmdoption-llvm-strings-print-file-name", "-f"], [525, 0, 1, "cmdoption-llvm-strings-help", "-h"], [525, 0, 1, "cmdoption-llvm-strings-bytes", "-n"], [525, 0, 1, "cmdoption-llvm-strings-radix", "-t"], [525, 0, 1, "cmdoption-llvm-strings-arg-FILE", "@&lt;FILE&gt;"]], "llvm-strip": [[526, 0, 1, "cmdoption-llvm-strip-allow-broken-links", "--allow-broken-links"], [526, 0, 1, "cmdoption-llvm-strip-disable-deterministic-archives", "--disable-deterministic-archives"], [526, 0, 1, "cmdoption-llvm-strip-discard-all", "--discard-all"], [526, 0, 1, "cmdoption-llvm-strip-discard-locals", "--discard-locals"], [526, 0, 1, "cmdoption-llvm-strip-enable-deterministic-archives", "--enable-deterministic-archives"], [526, 0, 1, "cmdoption-llvm-strip-help", "--help"], [526, 0, 1, "cmdoption-llvm-strip-keep-file-symbols", "--keep-file-symbols"], [526, 0, 1, "cmdoption-llvm-strip-keep-section", "--keep-section"], [526, 0, 1, "cmdoption-llvm-strip-keep-symbol", "--keep-symbol"], [526, 0, 1, "cmdoption-llvm-strip-no-strip-all", "--no-strip-all"], [526, 0, 1, "cmdoption-llvm-strip-only-keep-debug", "--only-keep-debug"], [526, 0, 1, "cmdoption-llvm-strip-preserve-dates", "--preserve-dates"], [526, 0, 1, "cmdoption-llvm-strip-regex", "--regex"], [526, 0, 1, "cmdoption-llvm-strip-remove-section", "--remove-section"], [526, 0, 1, "cmdoption-llvm-strip-strip-all", "--strip-all"], [526, 0, 1, "cmdoption-llvm-strip-strip-all-gnu", "--strip-all-gnu"], [526, 0, 1, "cmdoption-llvm-strip-strip-debug", "--strip-debug"], [526, 0, 1, "cmdoption-llvm-strip-strip-sections", "--strip-sections"], [526, 0, 1, "cmdoption-llvm-strip-strip-symbol", "--strip-symbol"], [526, 0, 1, "cmdoption-llvm-strip-strip-unneeded", "--strip-unneeded"], [526, 0, 1, "cmdoption-llvm-strip-version", "--version"], [526, 0, 1, "cmdoption-llvm-strip-wildcard", "--wildcard"], [526, 0, 1, "cmdoption-llvm-strip-enable-deterministic-archives", "-D"], [526, 0, 1, "cmdoption-llvm-strip-keep-symbol", "-K"], [526, 0, 1, "cmdoption-llvm-strip-strip-symbol", "-N"], [526, 0, 1, "cmdoption-llvm-strip-remove-section", "-R"], [526, 0, 1, "cmdoption-llvm-strip-strip-all", "-S"], [526, 0, 1, "cmdoption-llvm-strip-T", "-T"], [526, 0, 1, "cmdoption-llvm-strip-disable-deterministic-archives", "-U"], [526, 0, 1, "cmdoption-llvm-strip-version", "-V"], [526, 0, 1, "cmdoption-llvm-strip-discard-locals", "-X"], [526, 0, 1, "cmdoption-llvm-strip-strip-debug", "-g"], [526, 0, 1, "cmdoption-llvm-strip-help", "-h"], [526, 0, 1, "cmdoption-llvm-strip-o", "-o"], [526, 0, 1, "cmdoption-llvm-strip-preserve-dates", "-p"], [526, 0, 1, "cmdoption-llvm-strip-wildcard", "-w"], [526, 0, 1, "cmdoption-llvm-strip-discard-all", "-x"], [526, 0, 1, "cmdoption-llvm-strip-arg-FILE", "@&lt;FILE&gt;"]], "llvm-symbolizer": [[527, 0, 1, "cmdoption-llvm-symbolizer-print-address", "--addresses"], [527, 0, 1, "cmdoption-llvm-symbolizer-adjust-vma", "--adjust-vma"], [527, 0, 1, "cmdoption-llvm-symbolizer-basenames", "--basenames"], [527, 0, 1, "cmdoption-llvm-symbolizer-default-arch", "--default-arch"], [527, 0, 1, "cmdoption-llvm-symbolizer-demangle", "--demangle"], [527, 0, 1, "cmdoption-llvm-symbolizer-dia", "--dia"], [527, 0, 1, "cmdoption-llvm-symbolizer-dsym-hint", "--dsym-hint"], [527, 0, 1, "cmdoption-llvm-symbolizer-dwp", "--dwp"], [527, 0, 1, "cmdoption-llvm-symbolizer-obj", "--exe"], [527, 0, 1, "cmdoption-llvm-symbolizer-fallback-debug-path", "--fallback-debug-path"], [527, 0, 1, "cmdoption-llvm-symbolizer-functions", "--functions"], [527, 0, 1, "cmdoption-llvm-symbolizer-help", "--help"], [527, 0, 1, "cmdoption-llvm-symbolizer-inlining", "--inlines"], [527, 0, 1, "cmdoption-llvm-symbolizer-inlining", "--inlining"], [527, 0, 1, "cmdoption-llvm-symbolizer-no-demangle", "--no-demangle"], [527, 0, 1, "cmdoption-llvm-symbolizer-no-inlines", "--no-inlines"], [527, 0, 1, "cmdoption-llvm-symbolizer-obj", "--obj"], [527, 0, 1, "cmdoption-llvm-symbolizer-output-style", "--output-style"], [527, 0, 1, "cmdoption-llvm-symbolizer-pretty-print", "--pretty-print"], [527, 0, 1, "cmdoption-llvm-symbolizer-print-address", "--print-address"], [527, 0, 1, "cmdoption-llvm-symbolizer-print-source-context-lines", "--print-source-context-lines"], [527, 0, 1, "cmdoption-llvm-symbolizer-relativenames", "--relativenames"], [527, 0, 1, "cmdoption-llvm-symbolizer-use-symbol-table", "--use-symbol-table"], [527, 0, 1, "cmdoption-llvm-symbolizer-verbose", "--verbose"], [527, 0, 1, "cmdoption-llvm-symbolizer-version", "--version"], [527, 0, 1, "cmdoption-llvm-symbolizer-demangle", "-C"], [527, 0, 1, "cmdoption-llvm-symbolizer-print-address", "-a"], [527, 0, 1, "cmdoption-llvm-symbolizer-obj", "-e"], [527, 0, 1, "cmdoption-llvm-symbolizer-functions", "-f"], [527, 0, 1, "cmdoption-llvm-symbolizer-help", "-h"], [527, 0, 1, "cmdoption-llvm-symbolizer-inlining", "-i"], [527, 0, 1, "cmdoption-llvm-symbolizer-pretty-print", "-p"], [527, 0, 1, "cmdoption-llvm-symbolizer-basenames", "-s"], [527, 0, 1, "cmdoption-llvm-symbolizer-version", "-v"], [527, 0, 1, "cmdoption-llvm-symbolizer-arg-FILE", "@&lt;FILE&gt;"]], "opt": [[528, 0, 1, "cmdoption-opt-S", "-S"], [528, 0, 1, "cmdoption-opt-debug", "-debug"], [528, 0, 1, "cmdoption-opt-disable-inlining", "-disable-inlining"], [528, 0, 1, "cmdoption-opt-disable-opt", "-disable-opt"], [528, 0, 1, "cmdoption-opt-f", "-f"], [528, 0, 1, "cmdoption-opt-help", "-help"], [528, 0, 1, "cmdoption-opt-load", "-load"], [528, 0, 1, "cmdoption-opt-o", "-o"], [528, 0, 1, "cmdoption-opt-p", "-p"], [528, 0, 1, "cmdoption-opt-stats", "-stats"], [528, 0, 1, "cmdoption-opt-strip-debug", "-strip-debug"], [528, 0, 1, "cmdoption-opt-time-passes", "-time-passes"], [528, 0, 1, "cmdoption-opt-verify-each", "-verify-each"], [528, 0, 1, "cmdoption-opt-passname", "-{passname}"]], "tblgen": [[529, 0, 1, "cmdoption-tblgen-D", "-D"], [529, 0, 1, "cmdoption-tblgen-I", "-I"], [529, 0, 1, "cmdoption-tblgen-asmformat-error-is-fatal", "-asmformat-error-is-fatal"], [529, 0, 1, "cmdoption-tblgen-asmparsernum", "-asmparsernum"], [529, 0, 1, "cmdoption-tblgen-asmwriternum", "-asmwriternum"], [529, 0, 1, "cmdoption-tblgen-clang-component", "-clang-component"], [529, 0, 1, "cmdoption-tblgen-class", "-class"], [529, 0, 1, "cmdoption-tblgen-combiners", "-combiners"], [529, 0, 1, "cmdoption-tblgen-d", "-d"], [529, 0, 1, "cmdoption-tblgen-debug", "-debug"], [529, 0, 1, "cmdoption-tblgen-dialect", "-dialect"], [529, 0, 1, "cmdoption-tblgen-dialect-opclass-base", "-dialect-opclass-base"], [529, 0, 1, "cmdoption-tblgen-dump-json", "-dump-json"], [529, 0, 1, "cmdoption-tblgen-gen-arm-bf16", "-gen-arm-bf16"], [529, 0, 1, "cmdoption-tblgen-gen-arm-cde-builtin-aliases", "-gen-arm-cde-builtin-aliases"], [529, 0, 1, "cmdoption-tblgen-gen-arm-cde-builtin-codegen", "-gen-arm-cde-builtin-codegen"], [529, 0, 1, "cmdoption-tblgen-gen-arm-cde-builtin-def", "-gen-arm-cde-builtin-def"], [529, 0, 1, "cmdoption-tblgen-gen-arm-cde-builtin-sema", "-gen-arm-cde-builtin-sema"], [529, 0, 1, "cmdoption-tblgen-gen-arm-cde-header", "-gen-arm-cde-header"], [529, 0, 1, "cmdoption-tblgen-gen-arm-fp16", "-gen-arm-fp16"], [529, 0, 1, "cmdoption-tblgen-gen-arm-mve-builtin-aliases", "-gen-arm-mve-builtin-aliases"], [529, 0, 1, "cmdoption-tblgen-gen-arm-mve-builtin-codegen", "-gen-arm-mve-builtin-codegen"], [529, 0, 1, "cmdoption-tblgen-gen-arm-mve-builtin-def", "-gen-arm-mve-builtin-def"], [529, 0, 1, "cmdoption-tblgen-gen-arm-mve-builtin-sema", "-gen-arm-mve-builtin-sema"], [529, 0, 1, "cmdoption-tblgen-gen-arm-mve-header", "-gen-arm-mve-header"], [529, 0, 1, "cmdoption-tblgen-gen-arm-neon", "-gen-arm-neon"], [529, 0, 1, "cmdoption-tblgen-gen-arm-neon-sema", "-gen-arm-neon-sema"], [529, 0, 1, "cmdoption-tblgen-gen-arm-neon-test", "-gen-arm-neon-test"], [529, 0, 1, "cmdoption-tblgen-gen-arm-sve-builtin-codegen", "-gen-arm-sve-builtin-codegen"], [529, 0, 1, "cmdoption-tblgen-gen-arm-sve-builtins", "-gen-arm-sve-builtins"], [529, 0, 1, "cmdoption-tblgen-gen-arm-sve-header", "-gen-arm-sve-header"], [529, 0, 1, "cmdoption-tblgen-gen-arm-sve-sema-rangechecks", "-gen-arm-sve-sema-rangechecks"], [529, 0, 1, "cmdoption-tblgen-gen-arm-sve-typeflags", "-gen-arm-sve-typeflags"], [529, 0, 1, "cmdoption-tblgen-gen-asm-matcher", "-gen-asm-matcher"], [529, 0, 1, "cmdoption-tblgen-gen-asm-parser", "-gen-asm-parser"], [529, 0, 1, "cmdoption-tblgen-gen-asm-writer", "-gen-asm-writer"], [529, 0, 1, "cmdoption-tblgen-gen-attr-docs", "-gen-attr-docs"], [529, 0, 1, "cmdoption-tblgen-gen-attrs", "-gen-attrs"], [529, 0, 1, "cmdoption-tblgen-gen-automata", "-gen-automata"], [529, 0, 1, "cmdoption-tblgen-gen-avail-interface-decls", "-gen-avail-interface-decls"], [529, 0, 1, "cmdoption-tblgen-gen-avail-interface-defs", "-gen-avail-interface-defs"], [529, 0, 1, "cmdoption-tblgen-gen-callingconv", "-gen-callingconv"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-ast-visitor", "-gen-clang-attr-ast-visitor"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-classes", "-gen-clang-attr-classes"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-has-attribute-impl", "-gen-clang-attr-has-attribute-impl"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-impl", "-gen-clang-attr-impl"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-list", "-gen-clang-attr-list&quot;"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-node-traverse", "-gen-clang-attr-node-traverse"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-parsed-attr-impl", "-gen-clang-attr-parsed-attr-impl"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-parsed-attr-kinds", "-gen-clang-attr-parsed-attr-kinds"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-parsed-attr-list", "-gen-clang-attr-parsed-attr-list"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-parser-string-switches", "-gen-clang-attr-parser-string-switches"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-pch-read", "-gen-clang-attr-pch-read"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-pch-write", "-gen-clang-attr-pch-write"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-spelling-index", "-gen-clang-attr-spelling-index"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-subject-match-rule-list", "-gen-clang-attr-subject-match-rule-list"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-subject-match-rules-parser-string-switches", "-gen-clang-attr-subject-match-rules-parser-string-switches"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-template-instantiate", "-gen-clang-attr-template-instantiate"], [529, 0, 1, "cmdoption-tblgen-gen-clang-attr-text-node-dump", "-gen-clang-attr-text-node-dump"], [529, 0, 1, "cmdoption-tblgen-gen-clang-basic-reader", "-gen-clang-basic-reader"], [529, 0, 1, "cmdoption-tblgen-gen-clang-basic-writer", "-gen-clang-basic-writer"], [529, 0, 1, "cmdoption-tblgen-gen-clang-comment-command-info", "-gen-clang-comment-command-info"], [529, 0, 1, "cmdoption-tblgen-gen-clang-comment-command-list", "-gen-clang-comment-command-list"], [529, 0, 1, "cmdoption-tblgen-gen-clang-comment-html-named-character-references", "-gen-clang-comment-html-named-character-references"], [529, 0, 1, "cmdoption-tblgen-gen-clang-comment-html-tags", "-gen-clang-comment-html-tags"], [529, 0, 1, "cmdoption-tblgen-gen-clang-comment-html-tags-properties", "-gen-clang-comment-html-tags-properties"], [529, 0, 1, "cmdoption-tblgen-gen-clang-comment-nodes", "-gen-clang-comment-nodes"], [529, 0, 1, "cmdoption-tblgen-gen-clang-data-collectors", "-gen-clang-data-collectors"], [529, 0, 1, "cmdoption-tblgen-gen-clang-decl-nodes", "-gen-clang-decl-nodes"], [529, 0, 1, "cmdoption-tblgen-gen-clang-diag-groups", "-gen-clang-diag-groups"], [529, 0, 1, "cmdoption-tblgen-gen-clang-diags-defs", "-gen-clang-diags-defs"], [529, 0, 1, "cmdoption-tblgen-gen-clang-diags-index-name", "-gen-clang-diags-index-name"], [529, 0, 1, "cmdoption-tblgen-gen-clang-opcodes", "-gen-clang-opcodes"], [529, 0, 1, "cmdoption-tblgen-gen-clang-opencl-builtins", "-gen-clang-opencl-builtins"], [529, 0, 1, "cmdoption-tblgen-gen-clang-sa-checkers", "-gen-clang-sa-checkers"], [529, 0, 1, "cmdoption-tblgen-gen-clang-stmt-nodes", "-gen-clang-stmt-nodes"], [529, 0, 1, "cmdoption-tblgen-gen-clang-test-pragma-attribute-supported-attributes", "-gen-clang-test-pragma-attribute-supported-attributes"], [529, 0, 1, "cmdoption-tblgen-gen-clang-type-nodes", "-gen-clang-type-nodes"], [529, 0, 1, "cmdoption-tblgen-gen-clang-type-reader", "-gen-clang-type-reader"], [529, 0, 1, "cmdoption-tblgen-gen-clang-type-writer", "-gen-clang-type-writer"], [529, 0, 1, "cmdoption-tblgen-gen-compress-inst-emitter", "-gen-compress-inst-emitter"], [529, 0, 1, "cmdoption-tblgen-gen-ctags", "-gen-ctags"], [529, 0, 1, "cmdoption-tblgen-gen-dag-isel", "-gen-dag-isel"], [529, 0, 1, "cmdoption-tblgen-gen-dfa-packetizer", "-gen-dfa-packetizer"], [529, 0, 1, "cmdoption-tblgen-gen-diag-docs", "-gen-diag-docs"], [529, 0, 1, "cmdoption-tblgen-gen-dialect-doc", "-gen-dialect-doc"], [529, 0, 1, "cmdoption-tblgen-gen-directive-decl", "-gen-directive-decl"], [529, 0, 1, "cmdoption-tblgen-gen-directive-gen", "-gen-directive-gen"], [529, 0, 1, "cmdoption-tblgen-gen-directive-impl", "-gen-directive-impl"], [529, 0, 1, "cmdoption-tblgen-gen-disassembler", "-gen-disassembler"], [529, 0, 1, "cmdoption-tblgen-gen-emitter", "-gen-emitter"], [529, 0, 1, "cmdoption-tblgen-gen-enum-decls", "-gen-enum-decls"], [529, 0, 1, "cmdoption-tblgen-gen-enum-defs", "-gen-enum-defs"], [529, 0, 1, "cmdoption-tblgen-gen-enum-from-llvmir-conversions", "-gen-enum-from-llvmir-conversions"], [529, 0, 1, "cmdoption-tblgen-gen-enum-to-llvmir-conversions", "-gen-enum-to-llvmir-conversions"], [529, 0, 1, "cmdoption-tblgen-gen-exegesis", "-gen-exegesis"], [529, 0, 1, "cmdoption-tblgen-gen-fast-isel", "-gen-fast-isel"], [529, 0, 1, "cmdoption-tblgen-gen-global-isel", "-gen-global-isel"], [529, 0, 1, "cmdoption-tblgen-gen-global-isel-combiner", "-gen-global-isel-combiner"], [529, 0, 1, "cmdoption-tblgen-gen-instr-docs", "-gen-instr-docs"], [529, 0, 1, "cmdoption-tblgen-gen-instr-info", "-gen-instr-info"], [529, 0, 1, "cmdoption-tblgen-gen-intrinsic-enums", "-gen-intrinsic-enums"], [529, 0, 1, "cmdoption-tblgen-gen-intrinsic-impl", "-gen-intrinsic-impl"], [529, 0, 1, "cmdoption-tblgen-gen-llvmir-conversions", "-gen-llvmir-conversions"], [529, 0, 1, "cmdoption-tblgen-gen-llvmir-intrinsics", "-gen-llvmir-intrinsics"], [529, 0, 1, "cmdoption-tblgen-gen-op-decls", "-gen-op-decls"], [529, 0, 1, "cmdoption-tblgen-gen-op-defs", "-gen-op-defs"], [529, 0, 1, "cmdoption-tblgen-gen-op-doc", "-gen-op-doc"], [529, 0, 1, "cmdoption-tblgen-gen-opt-docs", "-gen-opt-docs"], [529, 0, 1, "cmdoption-tblgen-gen-opt-parser-defs", "-gen-opt-parser-defs"], [529, 0, 1, "cmdoption-tblgen-gen-opt-rst", "-gen-opt-rst"], [529, 0, 1, "cmdoption-tblgen-gen-pass-decls", "-gen-pass-decls"], [529, 0, 1, "cmdoption-tblgen-gen-pass-doc", "-gen-pass-doc"], [529, 0, 1, "cmdoption-tblgen-gen-pseudo-lowering", "-gen-pseudo-lowering"], [529, 0, 1, "cmdoption-tblgen-gen-register-bank", "-gen-register-bank"], [529, 0, 1, "cmdoption-tblgen-gen-register-info", "-gen-register-info"], [529, 0, 1, "cmdoption-tblgen-gen-rewriters", "-gen-rewriters"], [529, 0, 1, "cmdoption-tblgen-gen-searchable-tables", "-gen-searchable-tables"], [529, 0, 1, "cmdoption-tblgen-gen-spirv-avail-impls", "-gen-spirv-avail-impls"], [529, 0, 1, "cmdoption-tblgen-gen-spirv-capability-implication", "-gen-spirv-capability-implication"], [529, 0, 1, "cmdoption-tblgen-gen-spirv-enum-avail-decls", "-gen-spirv-enum-avail-decls"], [529, 0, 1, "cmdoption-tblgen-gen-spirv-enum-avail-defs", "-gen-spirv-enum-avail-defs"], [529, 0, 1, "cmdoption-tblgen-gen-spirv-op-utils", "-gen-spirv-op-utils"], [529, 0, 1, "cmdoption-tblgen-gen-spirv-serialization", "-gen-spirv-serialization"], [529, 0, 1, "cmdoption-tblgen-gen-struct-attr-decls", "-gen-struct-attr-decls"], [529, 0, 1, "cmdoption-tblgen-gen-struct-attr-defs", "-gen-struct-attr-defs"], [529, 0, 1, "cmdoption-tblgen-gen-subtarget", "-gen-subtarget"], [529, 0, 1, "cmdoption-tblgen-gen-typedef-decls", "-gen-typedef-decls"], [529, 0, 1, "cmdoption-tblgen-gen-typedef-defs", "-gen-typedef-defs"], [529, 0, 1, "cmdoption-tblgen-gen-x86-EVEX2VEX-tables", "-gen-x86-EVEX2VEX-tables"], [529, 0, 1, "cmdoption-tblgen-gen-x86-fold-tables", "-gen-x86-fold-tables"], [529, 0, 1, "cmdoption-tblgen-gicombiner-show-expansions", "-gicombiner-show-expansions"], [529, 0, 1, "cmdoption-tblgen-gicombiner-stop-after-build", "-gicombiner-stop-after-build"], [529, 0, 1, "cmdoption-tblgen-gicombiner-stop-after-parse", "-gicombiner-stop-after-parse"], [529, 0, 1, "cmdoption-tblgen-gisel-coverage-file", "-gisel-coverage-file"], [529, 0, 1, "cmdoption-tblgen-help", "-help"], [529, 0, 1, "cmdoption-tblgen-help-list", "-help-list"], [529, 0, 1, "cmdoption-tblgen-instrument-coverage", "-instrument-coverage"], [529, 0, 1, "cmdoption-tblgen-instrument-gisel-coverage", "-instrument-gisel-coverage"], [529, 0, 1, "cmdoption-tblgen-intrinsic-prefix", "-intrinsic-prefix"], [529, 0, 1, "cmdoption-tblgen-llvmir-intrinsics-filter", "-llvmir-intrinsics-filter"], [529, 0, 1, "cmdoption-tblgen-long-string-literals", "-long-string-literals"], [529, 0, 1, "cmdoption-tblgen-match-prefix", "-match-prefix"], [529, 0, 1, "cmdoption-tblgen-name", "-name"], [529, 0, 1, "cmdoption-tblgen-null-backend", "-null-backend"], [529, 0, 1, "cmdoption-tblgen-o", "-o"], [529, 0, 1, "cmdoption-tblgen-omit-comments", "-omit-comments"], [529, 0, 1, "cmdoption-tblgen-op-exclude-regex", "-op-exclude-regex"], [529, 0, 1, "cmdoption-tblgen-op-include-regex", "-op-include-regex"], [529, 0, 1, "cmdoption-tblgen-optimize-match-table", "-optimize-match-table"], [529, 0, 1, "cmdoption-tblgen-print-detailed-records", "-print-detailed-records"], [529, 0, 1, "cmdoption-tblgen-print-enums", "-print-enums"], [529, 0, 1, "cmdoption-tblgen-print-records", "-print-records"], [529, 0, 1, "cmdoption-tblgen-print-sets", "-print-sets"], [529, 0, 1, "cmdoption-tblgen-register-info-debug", "-register-info-debug"], [529, 0, 1, "cmdoption-tblgen-stats", "-stats"], [529, 0, 1, "cmdoption-tblgen-time-phases", "-time-phases"], [529, 0, 1, "cmdoption-tblgen-typedefs-dialect", "-typedefs-dialect"], [529, 0, 1, "cmdoption-tblgen-version", "-version"], [529, 0, 1, "cmdoption-tblgen-warn-on-skipped-patterns", "-warn-on-skipped-patterns"], [529, 0, 1, "cmdoption-tblgen-write-if-changed", "-write-if-changed"]]}, "objnames": {"0": ["std", "cmdoption", "option du programme"]}, "objtypes": {"0": "std:cmdoption"}, "terms": {"0": [16, 20, 48, 54, 60, 96, 98, 114, 117, 121, 142, 145, 185, 187, 201, 202, 206, 214, 216, 217, 221, 226, 228, 229, 233, 235, 238, 239, 244, 250, 287, 289, 303, 326, 359, 363, 391, 392, 397, 403, 442, 444, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 474, 475, 477, 478, 481, 483, 486, 487, 488, 489, 491, 492, 493, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 515, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 534, 535, 536, 538, 539, 540, 542, 543, 544, 547, 550, 552, 555, 556, 558, 559, 565, 566, 567, 568, 572, 573, 575, 578, 579, 580, 581, 582, 583, 585, 586, 590, 591, 592, 593, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 609, 611, 613, 614, 620, 622, 624, 625, 626, 627, 628, 630, 634, 635, 636, 637, 639, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 688], "00": [505, 513, 535, 567, 579, 585, 601, 609, 670, 671, 672, 674, 681, 682, 683, 685], "000": 625, "0000": [635, 648], "000000": [639, 646, 650, 671, 673, 682, 684], "00000000041516c6": 650, "00000006": 625, "000000e": [670, 671, 672, 674, 681, 682, 683, 685], "000001": 650, "000002": 650, "000003": 650, "000006": 650, "000007": 650, "000008": 650, "000010": 650, "000014": 650, "000016": 650, "000017": 650, "000018": 650, "000019": 650, "000023": 650, "00002fc0": 650, "000032": 650, "000035": 650, "000037": 650, "000041": 650, "000046": 650, "000049": 650, "000050": 650, "000063": 650, "000075": 650, "0001": 648, "000102030405060708090a0b0c0d0e0f": 579, "000106": 650, "000120": 650, "000123": 650, "000138": 650, "000155": 650, "000156": 650, "000214": 650, "000215": 650, "0003": 648, "000302": 650, "000310": 650, "000342": 650, "0004": 648, "000471": 650, "0005": 648, "000562": 650, "0007": 648, "000737": 650, "000774": 650, "000799": 650, "0008": 614, "001": 473, "0011": 473, "001375": 650, "001596": 650, "003400": 639, "004523": 650, "0050": 635, "0058": 505, "00n": 535, "01": [465, 505, 535, 567, 579, 626, 639, 671, 672, 674, 682, 683, 685], "010": 465, "0106": 635, "011": 473, "011200": 639, "012345": 513, "0123456789": 513, "0152": 523, "0156": 635, "01pi0": 464, "02": [505, 535, 673, 684], "03": [532, 673, 684], "03d516c6": 650, "04": [523, 550, 670, 673, 681, 684], "041688": 611, "041721": 611, "041739": 611, "0462": 639, "049886": 611, "04e": 579, "05": [478, 581, 673, 684], "06": [478, 532, 535], "0625": 579, "062624": 650, "067200": 639, "07": [513, 535, 651, 673, 684], "07b": 532, "08": 649, "0a": 579, "0b": [465, 532, 636], "0b000000": 646, "0b00000000": 579, "0b000011": 646, "0b000100": 646, "0b000111": 646, "0b0011": 464, "0b01101101": 579, "0b01111000": 579, "0b100": 636, "0b10000000": 579, "0b101": 636, "0b1010": [464, 465], "0b10110110": 579, "0b111": 636, "0b11100001": 579, "0b1111": 464, "0b11111110": 579, "0b11111111": 579, "0baz": 609, "0c": 535, "0cleanup": 540, "0dev": 639, "0e": 579, "0f": [535, 592], "0f00000000": 592, "0f0d0ed1c78f": 553, "0f3f800000": 592, "0f3fb8aa3b": 592, "0f42d20000": 592, "0f7f800000": 592, "0fb5bfbe8": 592, "0fbf317200": 592, "0fc2d20000": 592, "0ffh": 465, "0git": 572, "0th": 548, "0u": [555, 625], "0x": [465, 466, 487, 494, 530, 558, 579, 625, 635, 636], "0x0": [466, 473, 483, 596, 609], "0x00": [466, 535, 596, 628, 636], "0x000": 466, "0x0000": [461, 466, 604], "0x00000": 558, "0x000000": 558, "0x00000000": [466, 625], "0x0000000000000000": 466, "0x0000000000000010": 625, "0x0000000001f2dc7a": 536, "0x0000000001f2fc2f": 536, "0x00000000029bdb45": 536, "0x0000000002a8306": 536, "0x0000000004589ff8": 536, "0x000000000458ed10": 536, "0x00000000046122f0": 536, "0x00000000ffefffff": 465, "0x00000001": 625, "0x00000002": 625, "0x00000003": 625, "0x00000004": 625, "0x00000009": 625, "0x0000002a": 536, "0x00000064": 625, "0x00000067": 625, "0x0000006e": 625, "0x00000083": 625, "0x000000c9": 487, "0x000000ff": 558, "0x00000100": 625, "0x00000110": 625, "0x00000120": 625, "0x00000130": 625, "0x00000140": 625, "0x00000147": 625, "0x00000150": 625, "0x00000233": 487, "0x000003bd": 625, "0x000003cd": 625, "0x000003f3": 625, "0x000003ff": 483, "0x00000ff0": 558, "0x00001000": 625, "0x00001023": 625, "0x00001203": 625, "0x00001c00": 483, "0x00002000": 625, "0x00002023": 625, "0x00002200": 625, "0x000034f0": 625, "0x00003500": 625, "0x00003550": 625, "0x00007fff": 483, "0x00007ffff788c09b": 536, "0x00007ffff7fd0007": 536, "0x00007ffff7fd003c": 536, "0x00007ffff7fd0095": 536, "0x00007ffff7fd0098": 536, "0x00007fffffffc798": 536, "0x00007fffffffe108": 536, "0x00007fffffffe118": 536, "0x00007fffffffe140": 536, "0x0000fef": 487, "0x0001": [461, 466], "0x0001023": 625, "0x0002": [461, 466], "0x0002023": 625, "0x0003": [461, 466, 604], "0x0004": [461, 466], "0x0007": 604, "0x0008": 604, "0x001": 466, "0x0010": 604, "0x0011": 604, "0x0012": 604, "0x0013": 604, "0x0014": 604, "0x002": 466, "0x0020": 604, "0x0021": 604, "0x0022": 604, "0x0023": 604, "0x0024": 604, "0x003": 466, "0x0030": 604, "0x0031": 604, "0x0032": 604, "0x0033": 604, "0x0034": 604, "0x004": 466, "0x0040": 604, "0x0041": 604, "0x0042": 604, "0x0043": 604, "0x0044": 604, "0x0045": 604, "0x0046": 604, "0x005": 466, "0x0050": 604, "0x0051": 604, "0x0052": 604, "0x0053": 604, "0x0054": 604, "0x0055": 604, "0x0056": 604, "0x006": 466, "0x0068": 604, "0x0069": 604, "0x007": 466, "0x0070": 604, "0x0071": 604, "0x0072": 604, "0x0073": 604, "0x0074": 604, "0x0075": 604, "0x0076": 604, "0x0077": 604, "0x0078": 604, "0x0079": 604, "0x007a": 604, "0x007b": 604, "0x008": 466, "0x009": 466, "0x00a": 466, "0x00b": 466, "0x00c": 466, "0x00d": 466, "0x00e": 466, "0x00f": 466, "0x00ff0000": 483, "0x01": [466, 535, 596, 625, 637, 651], "0x010": 466, "0x011": 466, "0x01f": 466, "0x02": [466, 535, 596, 625, 636], "0x020": 466, "0x021": 466, "0x022": 466, "0x023": 466, "0x024": 466, "0x025": 466, "0x026": 466, "0x027": 466, "0x028": 466, "0x029": 466, "0x02a": 466, "0x02b": 466, "0x02c": 466, "0x02d": 466, "0x02e": 466, "0x02f": 466, "0x03": [466, 596, 628], "0x030": 466, "0x031": 466, "0x032": 466, "0x033": 466, "0x034": 466, "0x035": 466, "0x036": 466, "0x037": 466, "0x038": 466, "0x039": 466, "0x03a": 466, "0x03b": 466, "0x03c": 466, "0x04": [466, 596, 625, 636, 651], "0x04000000": 625, "0x05": [466, 596, 628], "0x06": [466, 596, 628], "0x07": [466, 596, 628], "0x08": [466, 596, 625], "0x09": 596, "0x0a": [596, 628], "0x0abcd": 579, "0x0b": [596, 628], "0x0b17c0de": 473, "0x0c": [535, 596], "0x0d": 628, "0x0e": 628, "0x0f": 628, "0x0f0": 558, "0x0ff": [466, 558], "0x0fffff": 465, "0x0fffffff": 651, "0x1": [464, 466, 483, 609, 625, 628, 634], "0x10": [54, 145, 244, 397, 464, 505, 596, 625, 628], "0x100": [466, 596, 625, 626], "0x1000": [604, 625], "0x100000": 465, "0x100000f24": 527, "0x12": [54, 145, 244, 397], "0x1234": [593, 625], "0x12345678": 625, "0x13": 596, "0x14": 634, "0x14c": [597, 688], "0x16": 596, "0x1881": [48, 142, 238, 391], "0x1afp": 465, "0x1b": 473, "0x1c2": 542, "0x1f84": 527, "0x1ff00": 465, "0x1fffff": 465, "0x2": [464, 483, 609, 628, 634], "0x20": 625, "0x200": [466, 625, 626], "0x2000": [466, 625], "0x20000": 466, "0x2001": 461, "0x2002": 461, "0x20117e": 516, "0x2413bc": 648, "0x25": 516, "0x29273623": 625, "0x2a": [472, 566], "0x3": [464, 483, 609, 628, 634], "0x30": 461, "0x300": 466, "0x3000": 517, "0x3039": 609, "0x31": 461, "0x3c00": 465, "0x3e0": 461, "0x3e08": 461, "0x3e09": 461, "0x3e0b": 461, "0x3e0c": 461, "0x3f": 542, "0x3f800000": 465, "0x3fe": 625, "0x3fe9": 625, "0x3feaed548f090ce": 671, "0x3feb": 625, "0x3fed": 625, "0x4": [464, 483, 523, 628, 634], "0x40": 625, "0x400": [466, 625, 626], "0x4000": [517, 625], "0x40000000": 585, "0x400480": 527, "0x400486": 527, "0x400490": 527, "0x4004a0": 527, "0x4004be": 527, "0x4004d0": 527, "0x401167": 527, "0x4200": 625, "0x432ff973cafa8000": 579, "0x45": 566, "0x45c2cb0": 536, "0x494e494d": 602, "0x4c": 634, "0x4d544f4e": 602, "0x5": [483, 596, 628, 634], "0x55585c0867ba": 566, "0x55585c0af787": 566, "0x55585c0af7b3": 566, "0x55585c0af7cf": 566, "0x55585c0afa55": 566, "0x57": 566, "0x5cf8c24cdb18bdac": 535, "0x6": [483, 634], "0x601028": 527, "0x60500020": 688, "0x6a": 523, "0x6fff4c02": 542, "0x7": 483, "0x70b298": 648, "0x744e60": 581, "0x744ea0": 581, "0x7c000000": 625, "0x7f": 579, "0x7fecc966952b": 566, "0x7feccab26000": 566, "0x7fefffff00000000": 465, "0x7fefffffffffffff": 465, "0x7fff": 466, "0x7fffffff": 579, "0x8": [464, 483, 596, 609], "0x80": [555, 625, 634], "0x800": [466, 625], "0x8000": [461, 466], "0x80000000": [466, 625], "0x8100": 461, "0x82638293": 625, "0x83": 566, "0x8664": 597, "0x9": [483, 609], "0x90": 630, "0x9f": 566, "0xa": [466, 483, 609, 634], "0xa0463440": 487, "0xa0463443": 487, "0xa0463447": 487, "0xabcdef00": 630, "0xac": 634, "0xb": 483, "0xc": [473, 483, 487], "0xc00": 466, "0xc3": 636, "0xd": [473, 483, 596, 634], "0xe": [461, 473], "0xe1": 461, "0xe2": 461, "0xe3": 461, "0xe4": 461, "0xe5": 461, "0xe6": 461, "0xe7": 461, "0xe8": [461, 636], "0xe9": 461, "0xeb": [461, 566], "0xec": 461, "0xeffe0000": 597, "0xf": [464, 634, 636], "0xfc": 466, "0xfe": 466, "0xfef": 487, "0xff": [464, 465, 466, 579, 636], "0xff0": 558, "0xff00": 465, "0xffbef174": 648, "0xffefffff": 465, "0xffefffff00000000": 465, "0xfff": 464, "0xfff8000000000000": 579, "0xffff": [48, 54, 114, 142, 145, 201, 238, 244, 303, 391, 397, 460, 461, 464, 465, 466, 579, 597, 628], "0xffff000000000002": 628, "0xfffff": 465, "0xfffffffc": 465, "0xffffffff": [461, 465, 466, 473, 579], "0xffffffffffefffff": 465, "0xffffffffffff00ff": 465, "0xffffffffffffff00": 465, "0xffffffffffffffff": 461, "0xh": 579, "0xk": 579, "0xl": 579, "0xl00000000000000004000900000000000": 579, "0xm": 579, "0xr": 579, "0xxxxxxxxx": 625, "1": [9, 10, 11, 12, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 44, 45, 48, 54, 55, 56, 57, 60, 65, 68, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 99, 100, 103, 107, 111, 112, 114, 115, 116, 117, 118, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 145, 146, 147, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 190, 194, 198, 199, 201, 202, 203, 205, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 238, 239, 244, 245, 246, 247, 250, 256, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 292, 296, 300, 301, 303, 306, 307, 308, 311, 312, 313, 318, 319, 320, 321, 322, 324, 325, 326, 329, 333, 335, 336, 341, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 362, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 387, 388, 391, 392, 397, 398, 399, 400, 403, 408, 411, 415, 416, 417, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 445, 446, 449, 453, 457, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 506, 507, 509, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 542, 543, 544, 546, 547, 550, 553, 554, 555, 556, 558, 559, 560, 564, 565, 566, 567, 569, 572, 575, 576, 578, 579, 581, 583, 585, 587, 590, 591, 592, 593, 594, 595, 596, 597, 599, 601, 602, 604, 605, 606, 607, 608, 609, 612, 613, 614, 616, 619, 620, 622, 625, 628, 630, 634, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688], "10": [48, 54, 142, 145, 238, 244, 391, 397, 465, 466, 469, 471, 473, 475, 481, 483, 486, 487, 512, 513, 518, 523, 527, 531, 535, 536, 548, 550, 553, 555, 566, 572, 575, 579, 582, 592, 594, 597, 601, 609, 618, 619, 620, 625, 626, 634, 646, 648, 650, 652, 669, 670, 671, 672, 673, 674, 675, 676, 678, 680, 681, 682, 683, 684, 685], "100": [114, 201, 303, 460, 466, 470, 486, 512, 513, 518, 547, 556, 566, 579, 581, 583, 625, 635, 645, 648, 672, 673, 674, 675, 676, 683], "1000": [581, 601, 607, 677, 678], "10000": [505, 591], "10010001": 579, "101": 635, "1011": 473, "102": [465, 513, 635, 650], "1020": [483, 579], "1023": [466, 483], "1024": [466, 483, 530, 579, 601, 622, 645], "1025": 483, "102593": 650, "1026": 483, "102kb": 530, "103": [466, 650], "1030": 579, "104": 465, "1054": 525, "106": [465, 523], "1066": 525, "108055": 650, "1083": 650, "1087": 466, "1088": 466, "109": [513, 636], "10m": 581, "10x": 531, "11": [48, 114, 142, 238, 303, 391, 460, 464, 466, 470, 473, 481, 483, 486, 513, 527, 531, 536, 566, 575, 579, 592, 594, 597, 601, 618, 620, 622, 625, 645, 646, 649, 650, 652, 673, 674, 675, 676], "110": 650, "1101": 525, "1108": 676, "111": [466, 592, 639], "1112": 525, "112": [466, 624], "1123": 525, "1129": [466, 676], "113": 579, "1130": [466, 525], "114": 523, "1141": 525, "1183": 676, "1184": 676, "12": [201, 461, 464, 465, 466, 473, 481, 483, 486, 487, 513, 517, 523, 527, 535, 536, 550, 566, 575, 579, 581, 585, 592, 593, 594, 597, 599, 601, 604, 609, 625, 630, 639, 640, 646, 652, 673, 674, 675, 676], "120": [466, 536, 579, 671, 682], "1200": 581, "1210": 676, "1218": 676, "122": 579, "1222": 639, "123": [579, 585, 591, 625, 650, 673, 674, 684, 685], "12303": 635, "1234": [465, 466, 527], "12345": [572, 609, 611], "1234567": 579, "123908342": 609, "123kkk": 530, "123mb": 530, "124": 650, "125": [553, 579, 611, 650], "125000e": 579, "126": 523, "126744": 650, "127": [464, 466, 579], "127715": 650, "128": [22, 123, 208, 365, 464, 466, 472, 473, 483, 535, 579, 583, 592, 602, 604, 609, 634, 646], "128974848": 530, "128mib": 542, "129": 466, "1298": 609, "129894": 614, "129907": 614, "129920": 614, "129923": 614, "129926": 614, "129934": 614, "129941": 614, "129996": 609, "12x10": 579, "13": [19, 120, 205, 362, 461, 464, 466, 473, 481, 483, 513, 535, 536, 550, 566, 575, 579, 592, 594, 597, 620, 625, 634, 641, 645, 646, 648, 651, 674, 675, 676], "130": [579, 650], "130111": 614, "130179": 614, "130181": 614, "130213": 614, "130214": 614, "130228": 614, "130229": 614, "130249": 614, "130266": 614, "130292": 614, "130304": 614, "130306": 614, "130309": 614, "130310": 614, "130312": 614, "130313": 614, "130318": 614, "130320": 614, "130323": 614, "130328": 614, "130329": 614, "130353": 614, "130355": 614, "130388": 614, "130415": 614, "130425": 614, "130430": 614, "130435": 614, "130465": 614, "130629": 614, "130630": 614, "1329373163": 579, "133700e": [670, 681], "134": 609, "138": [609, 650], "1388": 635, "139": 650, "139563": 650, "139605": 650, "139607": 650, "139610": 650, "139612": 650, "139617": 650, "14": [114, 460, 461, 466, 473, 481, 483, 486, 527, 531, 536, 566, 575, 592, 594, 622, 625, 635, 646, 650, 669, 680], "1401": 635, "1402264": 614, "1404": 635, "14159": 466, "142": 650, "143": 466, "1439": 676, "144": 579, "1444": 609, "1447": 635, "1459": 676, "147345": 650, "14740650423002898831": 579, "1491": 650, "15": [48, 54, 114, 142, 145, 201, 238, 239, 244, 303, 391, 392, 397, 460, 464, 466, 473, 474, 482, 486, 527, 535, 536, 550, 575, 579, 585, 591, 592, 594, 601, 620, 625, 628, 634, 635, 636, 651], "15155600": 650, "1523017872": 581, "1530": 650, "1535": 466, "1536": 466, "1560": 635, "1564": 650, "1565878005": 579, "159": 466, "15915494": 465, "15915494309189532": 465, "1592": 465, "159279": 650, "15mb": 611, "15th": 464, "16": [19, 24, 32, 43, 45, 49, 50, 54, 75, 87, 120, 124, 143, 145, 159, 173, 205, 209, 214, 215, 216, 217, 221, 226, 227, 228, 229, 233, 235, 240, 244, 263, 277, 304, 309, 314, 330, 334, 337, 362, 367, 375, 386, 388, 393, 397, 418, 432, 463, 464, 465, 466, 470, 472, 473, 483, 487, 512, 513, 523, 531, 534, 536, 542, 550, 555, 566, 567, 575, 579, 581, 585, 589, 592, 594, 596, 597, 604, 609, 620, 622, 625, 628, 630, 634, 636, 639, 643, 646, 651, 652, 675], "160": [466, 579], "1600": 579, "16000": 601, "162": 523, "164": 650, "16628590": 650, "16777216": 579, "16777217": 579, "1681": 650, "16b": 472, "16bit": 675, "16gb": 567, "16mib": 542, "17": [461, 466, 473, 481, 513, 530, 535, 536, 548, 550, 566, 579, 594, 625, 636, 676], "172": 634, "1723": 650, "175": 466, "1789": 635, "1791": [466, 635], "1792": 466, "18": [466, 473, 513, 527, 536, 579, 592, 594, 625, 646], "182": 523, "1829": 635, "1840": 635, "187": 650, "188": 650, "18th": 548, "19": [466, 473, 536, 547, 550, 567, 579, 594, 625, 640, 646], "191": 466, "1967": 650, "1980": 616, "1981": 537, "1984": 650, "1987": 537, "1989": 547, "199": 523, "1991": 616, "1994": 547, "19941610": 602, "19950410": 604, "19950623": 602, "19950814": 602, "19951122": 604, "19960307": [597, 602], "19961031": 604, "19970604": 602, "19970605": 597, "19970606": 597, "19990604": 602, "19990903": [597, 604], "1a": 601, "1afp10": 465, "1b": 581, "1cleanup": 540, "1cy": 513, "1d": 464, "1d_array": 464, "1dx": 535, "1g": [530, 568], "1gb": 611, "1ue": [672, 683], "20000404": 602, "2002": 483, "20030901": 602, "2004": 483, "20040203": 604, "2008": [466, 555, 579, 616], "20091201": [597, 602], "2010": 481, "2011": [611, 616], "2012": [542, 609, 652], "2013": [584, 597, 609], "20140508": 602, "20140516": 597, "2015": [563, 581, 616], "2016": [531, 563, 590, 611, 616, 649], "2017": [481, 542, 546, 550, 552, 561, 563, 581, 616, 651], "2018": [555, 579, 589, 626, 649], "2019": [478, 485, 563, 589, 611, 614], "2020": [553, 590], "203": 523, "2047": [464, 466], "2048": [464, 466, 483, 581, 601, 622], "207": 466, "209": 523, "2097496": 523, "21": [57, 400, 465, 466, 473, 483, 535, 536, 565, 579, 592, 594, 611, 625, 646, 650], "2100": 466, "2101248": 523, "2105344": 523, "2105360": 523, "212": 477, "213": 477, "213336": 650, "21340": 536, "214": 477, "2147483648": [579, 592], "215": 477, "216": 477, "217": 477, "2192": 639, "22": [461, 466, 473, 536, 579, 592, 594, 625, 634, 646, 650], "2200": 466, "2200g": 466, "223": 466, "224": 466, "225": 579, "225708": 650, "22c": 525, "23": [464, 466, 473, 483, 535, 579, 625, 646, 668, 679], "2303": 466, "2304": 466, "2308": 635, "231150": 625, "231154": 625, "2317": 635, "23333": 545, "234": [465, 618, 670, 681], "234000e": [670, 681], "23421e": 579, "234e2": 465, "235": 579, "236": 525, "239": 466, "24": [461, 464, 466, 473, 483, 485, 513, 523, 534, 579, 585, 592, 609, 611, 621, 625, 646, 652, 671, 682], "240": [669, 680], "2400g": 466, "241": 525, "242": [542, 650], "2468601609": 579, "247": 579, "248": 609, "24a": 525, "24e8": 609, "24mb": 581, "25": [466, 473, 579, 607, 609, 639, 646, 649], "250": 611, "2500": 466, "250000e": 585, "253": 525, "254": 579, "255": [464, 465, 466, 483, 536, 579, 625, 668, 669, 670, 671, 672, 673, 674, 675, 676, 684], "2559": 466, "256": [464, 465, 466, 483, 542, 579, 594, 622, 625], "2560": 466, "257": [483, 579], "258": [483, 525], "2590": 475, "25mb": 581, "26": [466, 473, 523, 579, 592, 625], "260": 466, "2601000000": 650, "26096": 650, "260x": 466, "261": 525, "264": 523, "2692": 650, "27": [461, 466, 473, 592, 609], "2700": 635, "271": 650, "272": [466, 513], "28": [466, 473, 535, 579, 592, 651], "281474976710654": 628, "2815": 466, "2816": 466, "2817": 609, "285": 466, "2882400000": 630, "29": [461, 466, 473, 483, 535, 579, 626, 646, 650], "290": 466, "2900": 579, "290x": 466, "2919": 609, "294": 523, "2963": 650, "297": 513, "2ap3": 542, "2b": 581, "2d": [464, 472], "2d_array": 464, "2d_msa": 464, "2d_msaa_array": 464, "2gb": 626, "2n": 579, "2nd": [579, 581, 609], "2u": 625, "2x": [564, 566, 581, 626], "2x3x4": 579, "3": [19, 39, 54, 60, 105, 109, 114, 120, 135, 145, 185, 192, 196, 201, 205, 217, 225, 229, 239, 244, 250, 287, 294, 298, 303, 362, 382, 392, 397, 403, 442, 451, 455, 460, 461, 463, 464, 465, 466, 472, 473, 475, 481, 482, 483, 486, 487, 491, 513, 517, 527, 530, 531, 532, 534, 535, 536, 538, 540, 543, 547, 548, 550, 552, 554, 555, 558, 559, 566, 568, 569, 570, 572, 575, 577, 579, 581, 583, 585, 588, 590, 591, 592, 593, 594, 597, 599, 601, 604, 605, 607, 609, 613, 616, 619, 620, 625, 626, 628, 634, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 654, 655, 657, 668, 669, 671, 672, 673, 674, 675, 676, 678, 679, 682, 683, 684, 685, 688], "30": [49, 143, 240, 393, 464, 466, 473, 483, 487, 512, 513, 523, 579, 581, 592, 620, 625, 626, 639, 646, 651, 673, 674, 675, 676, 681, 684, 685], "300": [491, 513, 579, 680], "3000": [466, 609], "302": 640, "305064": 539, "306": 513, "3069": 650, "3071": 466, "3072": 466, "308": 536, "30pm": 652, "31": [48, 96, 142, 185, 201, 238, 287, 391, 442, 461, 464, 466, 473, 483, 536, 566, 579, 626, 646], "31027": 566, "3120": 635, "31337": [670, 681], "314": 513, "3148790418": 579, "31511": 581, "315994": 650, "32": [20, 25, 29, 30, 32, 41, 43, 45, 48, 49, 65, 99, 100, 101, 115, 116, 121, 125, 129, 130, 137, 142, 143, 147, 206, 210, 218, 219, 221, 231, 233, 235, 238, 240, 327, 331, 336, 353, 363, 368, 372, 373, 375, 384, 386, 388, 391, 393, 408, 445, 446, 463, 464, 465, 470, 472, 473, 475, 481, 483, 487, 497, 513, 523, 531, 532, 534, 535, 540, 541, 542, 550, 552, 555, 567, 578, 579, 581, 585, 592, 596, 597, 599, 602, 604, 618, 619, 622, 625, 626, 628, 634, 636, 637, 643, 646, 650, 651, 673, 675, 677, 684, 686], "32088": 650, "3213": 609, "3221225472": 530, "32768": [24, 49, 78, 124, 143, 162, 209, 240, 266, 367, 393, 421, 601], "32bit": 675, "33": [473, 592, 620, 640, 646], "3327": 466, "3328": 466, "3340b": 466, "335": 597, "3363": 650, "339450": 639, "34": [473, 535, 646], "343": 635, "345": 609, "348": 635, "35": [466, 473, 513, 579, 609], "350": 613, "351": [466, 613], "352": [466, 613], "357": 613, "358": 613, "3583": 466, "359": 613, "36": [466, 473, 592, 626], "360": [613, 650], "362": 613, "363": 613, "36652": 650, "367": 613, "37": [473, 483, 579, 650], "370": 613, "371": 613, "3714": 650, "372": 613, "376": 613, "377": 579, "38": [473, 477, 579, 650], "380": 466, "3800": 466, "381": 650, "3811": 581, "3827": 581, "383": 466, "384": 466, "385": 466, "3868": 635, "387": [536, 579], "39": [466, 473, 579, 592], "392": 609, "39331465": 650, "39337525": 650, "3963": 581, "399": [513, 650], "3cy": 513, "3d": [464, 466], "3dnow": 675, "3g": 530, "3gb": 552, "3rd": [579, 581, 654], "3u": 625, "3x4": 579, "4": [19, 22, 26, 29, 31, 32, 33, 36, 43, 44, 45, 48, 49, 54, 62, 63, 66, 67, 70, 87, 96, 102, 106, 110, 114, 120, 123, 126, 129, 131, 132, 139, 140, 142, 143, 145, 151, 152, 153, 154, 173, 189, 193, 197, 201, 205, 208, 211, 214, 218, 220, 221, 222, 226, 233, 234, 235, 238, 240, 244, 252, 253, 254, 255, 258, 277, 291, 295, 299, 303, 328, 332, 344, 362, 365, 369, 372, 374, 375, 376, 379, 386, 387, 388, 391, 393, 397, 405, 409, 410, 413, 432, 448, 452, 456, 460, 461, 463, 464, 465, 466, 470, 472, 473, 481, 482, 483, 486, 487, 491, 492, 497, 499, 513, 523, 525, 527, 530, 531, 532, 534, 535, 536, 538, 539, 540, 542, 546, 547, 548, 550, 554, 555, 558, 559, 566, 567, 568, 570, 571, 572, 575, 576, 579, 581, 583, 585, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 599, 600, 601, 604, 605, 606, 607, 609, 614, 616, 620, 625, 626, 628, 630, 634, 637, 639, 640, 642, 643, 645, 646, 649, 650, 651, 652, 654, 655, 668, 669, 670, 672, 673, 674, 675, 676, 678, 679, 680, 681, 683, 684, 685], "40": [466, 473, 483, 487, 512, 516, 535, 542, 548, 579, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "400": [518, 669], "4000": [464, 466], "40000": 518, "4000g": 466, "40219": 567, "403": 639, "40535375": 650, "4095": [464, 579, 581, 601], "4096": [464, 579, 601, 604], "4097": 601, "4098": 601, "4099": 601, "40kib": 566, "40th": [668, 679], "41": [473, 566, 579], "410": 579, "4112": 516, "412": 523, "415": 466, "416": 466, "4167": 581, "41m": 530, "42": [472, 473, 483, 486, 505, 513, 527, 534, 535, 536, 542, 579, 582, 585, 592, 609, 636, 668, 672, 673, 677, 679, 683, 684, 686], "421": 579, "423325": 639, "429": 579, "43": [466, 473, 483, 673, 684], "4300g": 466, "4300ge": 466, "434": 609, "4350g": 466, "4350ge": 466, "4377547752858689819": 579, "44": [466, 473, 513, 579, 601, 648], "446": 650, "447": 466, "448": 466, "449": 466, "45": [473, 592, 668, 670, 679], "450": 466, "451": 466, "452": 466, "453": 466, "454": 466, "455": 466, "456": [585, 639, 673, 684], "457": 466, "458": 466, "4584": 650, "459": 466, "46": [473, 650, 673, 684], "460": 466, "4600g": 466, "4600ge": 466, "463": 466, "463331": 650, "463340": 650, "464": [466, 639], "465": 466, "4650g": 466, "4650ge": 466, "467": [466, 536], "468": 466, "469": 466, "47": [466, 473, 513, 579, 626, 640], "470": 466, "4700g": 466, "4700ge": 466, "470948": 650, "471": 466, "472": 466, "472618": 650, "474": 639, "4750ge": 466, "48": [466, 473, 483, 513, 523, 604, 643], "480": 466, "4819": 635, "49": [473, 609], "4b": 581, "4gib": 542, "4k": 483, "4kib": 601, "4th": [483, 579], "4u": 625, "5": [48, 142, 238, 391, 464, 465, 466, 473, 475, 481, 482, 483, 487, 492, 513, 523, 527, 530, 531, 534, 535, 536, 539, 547, 550, 553, 555, 558, 559, 566, 567, 572, 575, 579, 581, 585, 589, 590, 591, 592, 594, 597, 601, 604, 607, 609, 616, 617, 620, 625, 630, 634, 639, 640, 643, 645, 646, 648, 650, 651, 652, 654, 655, 668, 669, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 682, 684], "50": [473, 512, 513, 550, 626, 635, 639], "500": 513, "5000": [466, 566], "503": 613, "5046": 609, "506": [639, 650], "507": 613, "508": [579, 639], "51": [48, 142, 238, 391, 466, 473, 513, 565, 640], "5100": 466, "511": 466, "512": [466, 579, 601, 622], "513": 466, "51440360": 650, "5197": 635, "52": [466, 473, 579, 640], "5200": 466, "521": 613, "527": 613, "53": [473, 579, 601], "5312": 581, "532": 609, "5321": 611, "54": [473, 513, 639, 650], "542": 635, "543": 635, "5434426023268520": 650, "5434426023523052": 650, "5434426029925386": 650, "5434426030031128": 650, "5434426046951388": 650, "5434426047282020": 650, "5434426047857332": 650, "5434426047984152": 650, "5434426048036584": 650, "5434426048042292": 650, "5434426048055056": 650, "5434426048067316": 650, "547": 566, "548": 613, "549": 613, "55": [473, 579, 620, 648], "5500": 466, "554": [536, 613], "556": 525, "56": [466, 473, 523], "560": 635, "5600": 466, "5600m": 466, "563098": 639, "566": [525, 635], "57": 473, "5700": 466, "577": 525, "58": 473, "584": 635, "58421550": 650, "586": 525, "59": [473, 483, 513], "590": 475, "595": 525, "59620e187c6ac38b36382685ccd2b63b": 639, "5981": 635, "5b": 523, "5e": 579, "5l": 532, "5rqxku": 650, "5th": 579, "5u": 625, "5x": [564, 626], "6": [48, 54, 114, 142, 145, 201, 238, 244, 303, 391, 397, 460, 461, 464, 466, 482, 483, 487, 512, 513, 523, 527, 531, 534, 535, 536, 547, 550, 552, 555, 566, 570, 571, 572, 575, 579, 581, 590, 591, 592, 594, 597, 601, 604, 606, 609, 616, 620, 625, 634, 637, 640, 641, 643, 646, 648, 650, 651, 668, 669, 670, 672, 674, 675, 676, 678, 679, 680, 685], "60": [473, 512, 536, 601, 618], "600": [518, 525], "6000": 466, "60000": 518, "603": 613, "609": 525, "61": 473, "610": 513, "62": [473, 626], "621": 613, "626": 611, "62635": 650, "626455": 650, "627": 613, "628": 613, "6295592": 527, "63": [48, 114, 142, 238, 391, 460, 466, 473, 626, 630, 636], "638838075": 579, "64": [18, 21, 29, 30, 42, 64, 99, 101, 117, 119, 122, 129, 130, 138, 204, 207, 218, 219, 232, 345, 353, 361, 364, 372, 373, 385, 407, 445, 463, 464, 465, 470, 472, 473, 475, 481, 483, 487, 497, 505, 513, 515, 531, 532, 540, 541, 542, 548, 550, 552, 575, 579, 581, 585, 591, 592, 596, 597, 599, 604, 609, 618, 622, 624, 625, 628, 630, 634, 635, 636, 643, 646, 650, 668, 676, 677, 679, 686], "643": 536, "648": 613, "649": 613, "6497": 635, "64bit": [579, 585, 619], "64k": 597, "65": [466, 473, 483, 513], "654": 613, "65500": 465, "65535": [24, 49, 78, 98, 124, 143, 162, 187, 209, 240, 266, 289, 367, 393, 421, 444, 464, 579], "65600": 465, "657": 635, "658": 635, "66": [466, 473, 620], "66ghz": 567, "67": [473, 668, 679], "672368": 650, "6757": 635, "68": 473, "680": 592, "69": 473, "69819": 650, "6986": 635, "6b": 581, "6th": 579, "7": [54, 60, 96, 114, 145, 185, 201, 244, 250, 287, 303, 397, 403, 442, 460, 461, 464, 465, 466, 473, 474, 475, 482, 487, 513, 517, 531, 532, 535, 536, 547, 550, 555, 566, 567, 570, 571, 572, 575, 579, 581, 585, 591, 592, 593, 594, 597, 601, 604, 606, 607, 609, 611, 616, 620, 625, 630, 639, 645, 648, 650, 651, 652, 654, 670, 672, 673, 675, 676, 678, 679, 683], "70": [473, 475, 483, 512, 635, 639, 648, 652], "700": [679, 686], "7000": 466, "7004155349499253778": 579, "7009": 635, "703": 547, "705": 547, "7050b": 466, "71": 579, "7100": 466, "7150b": 466, "72": [513, 523], "7200p": 466, "725": 609, "7300": 466, "7350b": 466, "73670648": 536, "74": [513, 579, 626, 640], "7400p": 466, "746": 635, "747": 635, "75": [579, 609, 639, 648, 650], "7500": [466, 581], "754": [466, 555, 579], "756": 613, "758": 635, "76": 634, "7600p": 466, "7646": 609, "7651369219802541373": 579, "768": 466, "769": 466, "77": [513, 581, 628], "7790": 466, "77x": 626, "78": [628, 650, 673, 684], "789": [673, 684], "79": [466, 550], "7938": 635, "7942": 581, "7976922776554302e308": 465, "7976931348623157e308": 465, "7c": 513, "7e15": 530, "7foo_bar": 501, "7th": 579, "7ykb2k5f": 508, "8": [19, 54, 63, 71, 114, 120, 145, 147, 152, 155, 201, 205, 244, 253, 259, 303, 362, 397, 406, 414, 460, 461, 463, 464, 465, 466, 470, 472, 473, 474, 475, 482, 483, 487, 513, 514, 523, 527, 529, 531, 534, 535, 536, 539, 540, 542, 548, 550, 552, 555, 566, 567, 568, 570, 572, 575, 579, 585, 588, 591, 592, 593, 594, 596, 597, 599, 601, 604, 609, 611, 616, 620, 622, 624, 625, 626, 628, 630, 634, 637, 639, 645, 646, 650, 651, 652, 672, 673, 674, 676, 678, 679, 684], "80": [473, 475, 486, 512, 513, 518, 579, 604], "8000": 601, "8011": [549, 567], "8014": 567, "80386": [470, 675], "80f351b51825": 539, "80x86": 567, "80x87": 483, "81": 512, "8191": 601, "82": 523, "83": [512, 635, 650], "83348": 639, "84": 635, "841471": [671, 682], "85": [635, 650], "8500b": 466, "8500p": 466, "86": [609, 639], "8600b": 466, "8600p": 466, "87": [483, 609], "8700b": 466, "8700p": 466, "8770": 466, "8780p": 466, "879": 635, "88": [466, 635, 650], "8800b": 466, "8800p": 466, "8825": 635, "89": 639, "896800": 639, "8981": 635, "8gib": 542, "8x": [487, 626], "9": [54, 145, 244, 397, 461, 465, 466, 469, 473, 482, 483, 487, 513, 527, 531, 535, 536, 538, 539, 550, 566, 570, 573, 575, 579, 581, 585, 586, 592, 593, 594, 597, 601, 606, 609, 611, 616, 618, 619, 620, 625, 626, 639, 640, 641, 646, 668, 669, 670, 671, 672, 673, 674, 675, 678, 679, 680, 681, 682, 683, 684, 685], "90": [486, 512, 523, 635, 639, 650], "900": 513, "9000": 601, "9009": 635, "9010": 466, "9015": 581, "90p": 650, "91": [523, 547], "92": [486, 523], "9210": 466, "928": 639, "93": 579, "930803": 597, "9342": 635, "9410": 466, "95": 466, "96": 466, "9600p": 466, "9630p": 466, "9633790": 650, "97": 579, "9700p": 466, "9730p": 466, "97724f18c79c": 553, "9800p": 466, "9830p": 466, "989": 585, "99": [573, 586, 596, 620, 625, 627], "999": 579, "9990": 567, "9994": 567, "999999999": 620, "99p": 650, "9_": [465, 487], "9a": [465, 487], "9b": 581, "AI": [486, 609], "AS": 461, "AU": [469, 558, 648], "As": [461, 465, 466, 468, 469, 470, 473, 474, 478, 479, 482, 483, 486, 487, 491, 513, 517, 530, 531, 534, 535, 537, 538, 540, 541, 545, 547, 548, 549, 550, 553, 554, 556, 557, 559, 566, 569, 570, 572, 573, 579, 580, 581, 582, 583, 585, 586, 590, 591, 592, 593, 595, 599, 600, 601, 609, 611, 612, 614, 623, 624, 625, 626, 628, 630, 631, 632, 635, 636, 637, 641, 642, 645, 646, 648, 649, 652, 654, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "C": [461, 466, 468, 469, 470, 473, 474, 477, 479, 482, 483, 487, 489, 490, 491, 494, 498, 499, 501, 513, 514, 516, 521, 522, 527, 530, 531, 535, 536, 539, 540, 542, 545, 546, 547, 548, 549, 552, 553, 555, 557, 566, 567, 569, 570, 573, 574, 575, 578, 581, 582, 588, 590, 592, 593, 595, 596, 601, 607, 610, 611, 614, 622, 623, 626, 628, 630, 632, 634, 635, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 652, 654, 655, 656, 657, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 684, 685, 686, 687], "CE": 535, "CS": 466, "Ce": [1, 4, 6, 7, 8], "Cet": 142, "D": [461, 481, 486, 487, 491, 495, 509, 513, 514, 515, 516, 526, 529, 530, 531, 537, 542, 550, 553, 579, 608, 611, 636, 639, 669, 670, 673, 675, 676, 680, 681, 684, 688], "DS": 648, "Ds": 531, "Due": [465, 479, 487, 536, 539, 553, 579, 580, 583, 611, 623, 632, 636, 671], "Il": [61, 150, 251, 343, 404], "J": [486, 537, 538, 579, 593, 625, 654], "L": [461, 483, 495, 509, 515, 526, 530, 531, 550, 570, 571, 579, 581, 591, 593, 594, 609, 611, 614, 657, 670, 671, 672, 673, 674, 675, 676], "LE": 547, "LEA": [505, 637], "LS": 461, "La": [0, 1, 2, 3, 4, 5, 6, 7, 8], "Lea": 483, "Les": 142, "Ls": 579, "M": [461, 469, 470, 483, 485, 486, 491, 495, 514, 516, 530, 532, 535, 537, 550, 579, 591, 593, 594, 599, 616, 630, 646, 648, 654, 655, 656, 657], "MA": 590, "MESA": 466, "MS": [542, 581], "Me": [485, 580], "Mesa": 466, "Ms": 656, "N": [114, 201, 303, 460, 461, 464, 465, 466, 470, 471, 473, 483, 485, 486, 487, 491, 495, 499, 504, 513, 514, 515, 518, 526, 527, 535, 540, 547, 554, 572, 579, 581, 589, 590, 592, 599, 601, 607, 609, 630, 646, 650, 670, 681], "ON": [471, 481, 539, 546, 550, 570, 581, 639, 648], "On": [461, 464, 466, 468, 470, 471, 472, 479, 481, 483, 486, 491, 500, 505, 513, 515, 526, 531, 533, 536, 540, 544, 545, 546, 547, 550, 562, 570, 578, 579, 581, 582, 591, 593, 596, 608, 609, 619, 626, 628, 631, 634, 636, 641, 644, 651, 652, 654, 656, 670, 671, 673, 681, 682, 684], "PAR": 613, "Pour": [6, 7, 653], "S": [461, 465, 466, 470, 489, 491, 495, 506, 510, 513, 514, 515, 516, 521, 522, 526, 528, 531, 536, 540, 542, 550, 560, 573, 579, 590, 593, 609, 622, 625, 630, 636, 641, 681, 682, 683, 684, 685], "SA": 466, "SE": 579, "SESE": 616, "Sea": 466, "See": [64, 345, 407, 461, 464, 466, 470, 471, 473, 474, 476, 479, 481, 483, 487, 488, 491, 492, 493, 495, 501, 505, 508, 513, 515, 528, 529, 530, 531, 538, 541, 543, 546, 548, 550, 552, 553, 554, 555, 556, 558, 567, 569, 570, 571, 573, 575, 579, 580, 589, 590, 591, 592, 593, 597, 601, 609, 610, 611, 613, 614, 616, 623, 625, 626, 630, 634, 636, 637, 639, 641, 645, 646, 647, 648, 649, 650, 654, 655, 656, 657, 669, 673, 680, 684], "T": [461, 466, 486, 491, 492, 493, 495, 513, 514, 516, 517, 519, 526, 542, 543, 550, 573, 579, 596, 604, 609, 614, 625, 634, 637, 641, 652], "TA": [461, 464], "TS": 461, "Te": 579, "Un": [0, 1, 2, 3, 4, 5, 6, 7, 8, 579, 653], "Y": [461, 466, 472, 483, 531, 538, 572, 579, 602, 607, 609, 625, 636, 637, 645, 648, 674, 685], "_": [466, 473, 486, 500, 515, 555, 556, 559, 575, 579, 585, 593, 614, 627, 636, 639, 680, 681, 682, 683, 684, 685], "_0": [579, 585], "__1": 501, "__aarch64_casm_ord": 470, "__aarch64_ldaddn_ord": 470, "__aarch64_ldclrn_ord": 470, "__aarch64_ldeorn_ord": 470, "__aarch64_ldsetn_ord": 470, "__aarch64_swpn_ord": 470, "__active_lane_pc": 466, "__aeabi_": 532, "__annot": 579, "__anon_expr": [669, 670, 671, 672, 673, 674, 675, 676], "__apple_nam": 625, "__apple_namespac": 625, "__apple_objc": 625, "__apple_typ": 625, "__asm": 513, "__atomic_compare_exchang": 470, "__atomic_compare_exchange_n": 470, "__atomic_exchang": 470, "__atomic_exchange_n": 470, "__atomic_fetch_add_n": 470, "__atomic_fetch_and_n": 470, "__atomic_fetch_nand_n": 470, "__atomic_fetch_or_n": 470, "__atomic_fetch_sub_n": 470, "__atomic_fetch_xor_n": 470, "__atomic_load": 470, "__atomic_load_n": 470, "__atomic_stor": 470, "__atomic_store_n": 470, "__attribute__": [531, 625, 643, 649], "__bitcod": 473, "__bss": 514, "__builtin_eh_return": 540, "__builtin_expect": 475, "__builtin_expect_with_probability": 475, "__builtin_longjmp": 540, "__builtin_setjmp": 540, "__builtin_trap": 581, "__builtin_unreach": 583, "__c_specific_handl": 540, "__chkstk": 542, "__clang__": 531, "__clear_cach": 579, "__cuda__": 531, "__cuda_arch__": 531, "__cuda_ftz": 592, "__cudacc__": 531, "__cxa_allocate_except": 540, "__cxa_begin_catch": 540, "__cxa_call_unexpected": 540, "__cxa_demangl": 546, "__cxa_end_catch": 540, "__cxa_rethrow": 540, "__cxa_throw": 540, "__cxx11": 501, "__cxx_": 650, "__cxx_global_var_in": 650, "__cxxframehandler3": 540, "__cxxthrowexcept": 540, "__dat": [514, 523, 579], "__declspec": [671, 672, 673, 674, 675, 676], "__divergent_lane_pc": 466, "__divergent_lane_pc_1_1_els": 466, "__divergent_lane_pc_1_1_then": 466, "__divergent_lane_pc_1_els": 466, "__divergent_lane_pc_1_then": 466, "__dwarf": 625, "__eh_fram": 483, "__except": 540, "__fastcall": 579, "__gcmap_": 547, "__global__": 531, "__gwp_asan_default_opt": 566, "__gxx_personality_v0": 540, "__has_attribut": 634, "__i386__": [677, 686], "__image_info": 579, "__imp_": 579, "__internal_accurate_powf": 592, "__jit_debug_register_cod": 536, "__kmpc_fork_call": 579, "__lex_1_1_save_exec": 466, "__lex_1_save_exec": 466, "__libc_start_main": [536, 566], "__libunwind_config": 540, "__llvm": [473, 620], "__llvm__": 579, "__llvm_coverage_mapping": 535, "__llvm_covmap": 535, "__llvm_deoptimiz": 579, "__llvm_faultmap": 544, "__llvm_memcpy_element_unordered_atomic_": [579, 630], "__llvm_memcpy_element_unordered_atomic_safepoint_": 630, "__llvm_memcpy_element_unordered_atomic_safepoint_1": 630, "__llvm_memmove_element_unordered_atomic_": [579, 630], "__llvm_memmove_element_unordered_atomic_safepoint_": 630, "__llvm_memset_element_unordered_atomic_": 579, "__llvm_stackmap": 628, "__main": 648, "__morestack": 624, "__next__": 534, "__nv_isinff": 592, "__nv_isnanf": 592, "__nv_powf": 592, "__nv_truncf": 592, "__nvcc__": 531, "__objc": [523, 579], "__objc_imageinfo": 579, "__profn_foo": 535, "__remark": [492, 620], "__scudo_default_opt": 622, "__stack_chk_fail": [579, 585], "__stack_chk_guard": 579, "__stdcall": 579, "__sync_fetch_and_add_n": 470, "__sync_fetch_and_and_n": 470, "__sync_fetch_and_max_n": 470, "__sync_fetch_and_min_n": 470, "__sync_fetch_and_nand_n": 470, "__sync_fetch_and_or_n": 470, "__sync_fetch_and_sub_n": 470, "__sync_fetch_and_umax_n": 470, "__sync_fetch_and_umin_n": 470, "__sync_fetch_and_xor_n": 470, "__sync_lock_test_and_set_n": 470, "__sync_synchroniz": 470, "__sync_val_compare_and_swap_n": 470, "__syncthread": 592, "__text": [483, 514, 523, 639], "__text_exec": 514, "__try": 540, "__uint64": 466, "__uint_64": 466, "__unwind_info": 483, "__vectorcall": 579, "__xray_log_finaliz": 649, "__xray_log_flushlog": 649, "__xray_log_init_mod": 649, "__xray_log_process_buffer": 649, "__xray_log_register_mod": 649, "__xray_log_select_mod": 649, "__xray_log_set_buffer_iterator": 649, "__xray_patch": 649, "__xray_patch_funct": 649, "_align": 625, "_args_": 482, "_b128": 463, "_b16": 463, "_b256": 463, "_b32": 463, "_b512": 463, "_b64": 463, "_b8": 463, "_binary_": 515, "_bool": [674, 685], "_bootstrap_default_passthrough": 468, "_buff": 466, "_crit_edg": 579, "_cuda_ftz": 592, "_cxxthrowexcept": 540, "_dcleanup": 540, "_division_by_zero": 466, "_dpp": [463, 466], "_e32": [463, 466], "_e64": [463, 466], "_end": 515, "_except_handler3": 540, "_except_handler4": 540, "_f16": 463, "_f32": 463, "_f64": 463, "_flag": 482, "_flags_": 482, "_flags_relwithdebinfo": 479, "_function_nam": 542, "_how": 485, "_i": 518, "_i16": 463, "_i32": 463, "_i64": 463, "_i8": 463, "_i_bitcast": 559, "_index": 634, "_inexact": 466, "_info": 466, "_inv": 466, "_invalid_oper": 466, "_invl": 466, "_is_": 579, "_link_into_tool": 648, "_lz_o": 635, "_m4enum": 579, "_main": [527, 593, 688], "_name_": 482, "_overflow": 466, "_p1": 625, "_p3": 625, "_padding_record": 596, "_r0h": 540, "_regoffset": 637, "_ri": 636, "_rr": 636, "_runtim": 628, "_sdwa": [463, 466], "_segment_buff": 466, "_segment_ptr": 466, "_segment_wavefront_offset": 466, "_siz": [466, 515], "_sourc": 466, "_source_d": 481, "_start": [515, 516, 536, 566], "_suffstring": 636, "_suffstringsuffix": 636, "_tag": [680, 681, 682, 683, 684, 685], "_trunc": 555, "_ty": 541, "_u16": 463, "_u32": 463, "_u64": 463, "_u8": 463, "_underflow": 466, "_unwind_resum": 540, "_v4": 466, "_var": 482, "_void": 555, "_vol": 466, "_w_side_effect": 555, "_win32": [631, 671, 672, 673, 674, 675, 676], "_workgroup_count_x": 466, "_workgroup_count_y": 466, "_workgroup_count_z": 466, "_x": 466, "_y": 466, "_z": 466, "_z3bar": 500, "_z3bazv": 527, "_z3foo3barv": 501, "_z3foov": [500, 579], "_z4leak": 626, "_z5hellov": 525, "_zero": 466, "_zfoov": 579, "_zgv": 579, "_zn1a1nei": 579, "_zst1a": 643, "_zstlsicst11char_traitsiceerst13basic_ostreamit_t0_es6_st17basic_string_viewis3_s4_": 566, "_ztid": 579, "_ztii": 579, "_zts1a": [579, 643], "_zts1b": 643, "_zts1c": 643, "_zts1d": 643, "_ztv1a": 643, "_ztv1b": 643, "_ztv1c": 643, "_ztv1d": 643, "_ztv3bar": 487, "_ztv3foo": 487, "a": [1, 5, 8, 18, 19, 21, 22, 24, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 54, 57, 60, 99, 114, 117, 119, 120, 122, 123, 124, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 145, 147, 201, 204, 205, 207, 208, 209, 214, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 244, 250, 303, 327, 328, 329, 330, 331, 332, 333, 334, 336, 353, 354, 355, 361, 362, 364, 365, 367, 379, 380, 381, 382, 383, 384, 385, 389, 390, 391, 392, 393, 397, 400, 403, 445, 460, 461, 462, 463, 464, 466, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 484, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 532, 534, 535, 536, 537, 540, 542, 544, 545, 546, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 576, 577, 578, 579, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 604, 605, 606, 610, 614, 615, 616, 617, 618, 622, 624, 625, 627, 628, 629, 630, 631, 632, 634, 637, 638, 639, 640, 641, 642, 644, 645, 649, 650, 651, 652, 653, 668, 670, 672, 673, 677, 678, 679, 681, 683, 684, 686, 688], "a0463440": 487, "a0463443": 487, "a1": [483, 492, 493, 516, 538, 593, 636, 643, 645], "a10": 466, "a12": 466, "a15": 568, "a16": [0, 4, 19, 362], "a2": [483, 492, 493, 516, 538, 579, 593, 636, 643, 645], "a252": 465, "a253": 465, "a254": 465, "a255": 465, "a3": [483, 492, 493, 516, 538, 579], "a32": 472, "a4": [466, 483], "a57": 532, "a6": 466, "a64": 472, "a8": [466, 576], "a9": [466, 571], "a_ctor_bas": 487, "aa": [470, 579, 648], "aad": 483, "aad8i8": 483, "aapc": 579, "aarch32": 532, "aarch64": [470, 472, 480, 515, 546, 550, 554, 562, 564, 568, 575, 579, 585, 589, 614, 622, 628, 634, 646, 649], "aarch64registerinfo": 585, "ab": [51, 53, 144, 241, 243, 305, 310, 315, 317, 338, 340, 394, 396, 592], "abandon": [608, 670], "abandoned": [564, 609], "abbrev": [473, 504], "abbrevi": [486, 580, 614], "abbreviat": [497, 504], "abbreviated": [466, 635], "abbreviaton": 580, "abbrevid": [473, 620], "abbrevop0": 473, "abbrevop1": 473, "abbrevwidth": 473, "abc": [461, 579], "abcd": 473, "abcdef0": 572, "abcdillnoopsstuuvv": 495, "abi": [461, 472, 480, 481, 495, 501, 534, 538, 542, 543, 550, 554, 556, 561, 570, 571, 572, 578, 579, 592, 606, 607, 618, 625, 628, 641, 643, 646, 671, 675, 676, 677, 682, 686], "abid": [8, 623], "abilit": 530, "ability": [461, 483, 484, 528, 530, 536, 541, 545, 547, 560, 575, 579, 583, 587, 609, 610, 611, 612, 625, 626, 652, 668, 672, 673, 674, 679, 683, 684, 685], "abis": [466, 534, 543, 612, 626], "able": [461, 466, 469, 471, 477, 478, 483, 485, 486, 487, 491, 513, 515, 526, 530, 531, 534, 535, 538, 543, 545, 547, 548, 550, 551, 553, 555, 556, 559, 560, 571, 574, 578, 579, 580, 582, 586, 593, 605, 609, 611, 612, 616, 618, 620, 621, 623, 625, 626, 627, 628, 630, 642, 645, 646, 648, 649, 652, 655, 671, 672, 673, 676, 677, 682, 683, 684, 686], "abnormal": [534, 631], "abnormally": [534, 545], "abort": [477, 483, 486, 553, 579, 583, 609], "abort_on_error": 622, "aborting": 540, "about": [461, 463, 465, 466, 469, 470, 473, 474, 478, 479, 481, 482, 483, 485, 486, 487, 489, 491, 492, 497, 510, 511, 513, 514, 517, 518, 521, 522, 523, 530, 531, 534, 536, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 558, 560, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 597, 599, 600, 601, 604, 605, 606, 607, 608, 609, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 634, 635, 639, 640, 642, 643, 644, 645, 646, 648, 649, 650, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "abov": [48, 54, 114, 142, 145, 201, 238, 239, 244, 303, 391, 392, 397, 460, 461, 463, 464, 465, 466, 469, 470, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 492, 513, 518, 527, 530, 531, 534, 538, 541, 543, 544, 545, 546, 547, 548, 550, 555, 559, 565, 569, 570, 571, 572, 573, 574, 575, 577, 579, 582, 583, 584, 585, 586, 587, 590, 591, 593, 594, 597, 607, 609, 610, 611, 612, 616, 619, 621, 623, 624, 625, 626, 627, 628, 630, 632, 634, 635, 636, 640, 641, 643, 646, 647, 648, 650, 652, 654, 668, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "abs8": 542, "abs_f": 637, "abs_fp32": 637, "abs_fp64": 637, "abs_fp80": 637, "absenc": [477, 483, 513, 542, 585, 609, 626], "absent": [461, 487, 609], "absl": 501, "absolu": 142, "absolut": [48, 54, 114, 145, 201, 238, 244, 303, 391, 397, 460, 464, 466, 474, 481, 486, 487, 499, 514, 515, 516, 517, 527, 550, 555, 571, 579, 597, 620, 641, 646, 651], "absolute_express": [24, 25, 46, 47, 48, 49, 54, 60, 78, 98, 114, 124, 125, 141, 142, 143, 145, 162, 187, 201, 209, 210, 236, 237, 238, 239, 240, 244, 250, 266, 289, 303, 367, 368, 389, 390, 391, 392, 393, 397, 403, 421, 444, 460], "absolute_tsc": 651, "absolutely": [541, 554, 609, 648], "absolutesymbol": 593, "abstract": [461, 483, 486, 537, 540, 543, 573, 580, 582, 594, 607, 609, 620, 625, 635, 637, 646, 648, 652, 668, 670, 671, 672, 673, 674, 675, 676, 679, 681, 682, 683, 684, 685], "abstracted": [486, 543], "abstractness": 538, "abstracttyperead": 529, "abstracttypewrit": 529, "absv16i8": 646, "absv1i64": 646, "abtu": 495, "abused": 609, "ac": [581, 614], "academi": 538, "acc": [465, 466, 636], "acc0": 465, "acc2": 465, "acc250": 465, "acc3": 465, "acced": 142, "acceler": [677, 686], "accelerated": 599, "accelerator": [461, 489, 504], "accept": [464, 466, 478, 482, 484, 486, 487, 499, 530, 533, 534, 538, 539, 542, 543, 546, 550, 552, 554, 559, 565, 573, 579, 581, 587, 591, 608, 609, 623, 626, 629, 632, 635, 636, 641], "accepted": [461, 466, 487, 501, 514, 515, 530, 533, 550, 579, 592, 608], "accepthed": 464, "accepting": 530, "access": [464, 465, 469, 470, 472, 485, 515, 516, 526, 530, 533, 534, 537, 539, 541, 545, 547, 548, 550, 552, 554, 559, 560, 566, 567, 575, 581, 584, 589, 590, 592, 593, 595, 599, 601, 604, 607, 608, 609, 618, 625, 626, 628, 629, 630, 642, 645, 646, 648, 649, 652, 655, 674, 677, 685, 686], "accessed": [48, 238, 391, 461, 465, 466, 470, 483, 530, 540, 548, 579, 593, 594, 609, 622, 625, 629, 636, 643], "accessibility": 612, "accessibl": [461, 465, 466, 481, 499, 514, 530, 534, 539, 554, 566, 579, 585, 593, 609, 626, 634, 670], "accessing": [461, 464, 466, 469, 483, 530, 540, 548, 579, 590, 593, 609, 626, 630], "accessor": [483, 625, 648, 669], "accessty": 579, "accessty1": 579, "accessty2": 579, "accidental": 593, "accidentally": [486, 530, 609, 631, 632, 648], "accommodat": [483, 542, 554, 579, 592], "accommodated": 483, "accommodating": 473, "accompanied": [486, 620], "accomplish": [538, 573, 602, 609, 626, 636], "accomplished": [485, 547, 607, 609, 668, 679], "accord": [623, 630], "according": [466, 473, 474, 513, 530, 547, 555, 556, 561, 573, 579, 585, 609, 614, 616, 619, 623, 628, 630, 635, 636, 646, 652, 670], "accordingly": [540, 547, 577, 579, 583, 601, 623], "account": [466, 484, 533, 538, 555, 559, 567, 573, 579, 588, 591, 608, 611, 621, 626, 649, 650, 654, 655], "accounted": 480, "accounting": [466, 517, 547, 649, 650], "accqual": 466, "accross": 534, "accumul": 466, "accumulat": [581, 625, 626, 645], "accumulateconstantoffset": 591, "accumulated": [626, 636, 645], "accumulator": [465, 555, 607, 636, 680, 681, 682, 683, 684, 685], "accuracy": [513, 575, 579, 607], "accurat": [469, 475, 505, 513, 547, 550, 556, 569, 575, 582, 604, 607, 611, 625, 635, 676, 677, 686], "accurately": [466, 499, 579, 611, 625], "ace": 631, "achiev": [470, 476, 478, 481, 538, 545, 554, 579, 583, 589, 615, 618, 622, 625, 626, 631], "achieved": [537, 546, 556, 577, 582, 609, 616, 618], "achieving": 485, "acknowledg": 623, "acknowledged": 485, "acknowledging": 621, "acm": [483, 547], "acme": 613, "acos": 469, "acq": 470, "acq_rel": [466, 470, 579], "acquainted": 654, "acquir": [466, 538, 579, 590, 609, 636], "acquired": [466, 581], "acquisit": 609, "acronym": 566, "across": [470, 472, 479, 480, 482, 483, 485, 497, 530, 531, 534, 538, 540, 545, 550, 555, 557, 562, 579, 580, 581, 583, 592, 593, 594, 602, 607, 609, 611, 620, 625, 626, 628, 630, 636, 645, 648, 671, 677, 682, 686], "act": [461, 474, 483, 486, 487, 495, 555, 579, 581, 590, 591, 607, 609, 620, 621, 623, 625, 635, 636, 641], "acting": 461, "action": [461, 466, 467, 475, 476, 483, 486, 534, 540, 541, 546, 550, 579, 580, 593, 594, 608, 609, 611, 621, 623, 630, 632, 646, 648, 651], "actionscript": [677, 686], "actiontyp": 635, "activ": [461, 466, 469, 485, 513, 515, 526, 534, 538, 539, 540, 547, 549, 572, 578, 581, 588, 593, 601, 609, 611, 623, 628, 632, 648, 655, 656, 657, 687], "activat": 639, "activated": [481, 609], "actively": [485, 538, 623, 626, 632, 655], "activit": [483, 646], "activity": 534, "actor": 534, "actual": [13, 19, 97, 120, 186, 205, 288, 323, 352, 362, 443, 461, 462, 466, 469, 470, 473, 477, 483, 486, 487, 491, 495, 509, 513, 530, 534, 536, 537, 544, 545, 548, 569, 579, 580, 581, 583, 584, 590, 591, 597, 609, 610, 619, 622, 625, 626, 629, 630, 631, 639, 641, 646, 652, 654, 655, 668, 672, 676, 677, 679, 683, 686], "actual_access": 466, "actualaccqual": 466, "actually": [120, 205, 362, 461, 466, 469, 472, 473, 476, 482, 483, 486, 487, 530, 531, 534, 538, 540, 543, 544, 547, 548, 567, 569, 573, 579, 583, 590, 591, 593, 607, 609, 611, 618, 625, 630, 631, 639, 641, 646, 647, 648, 652, 654, 669, 670, 671, 672, 673, 674, 676, 677, 680, 681, 682, 683, 684, 685, 686], "acyclic": [483, 529, 580, 604, 625, 635, 646], "ad": [461, 483, 607, 609], "ada": 540, "adapt": [543, 566, 570, 588, 609, 631], "adapted": [531, 538, 607], "adapter": 609, "adc": 466, "adc32mi": 637, "adc32mi8": 637, "adc32mr": 637, "adc32ri": 637, "adc32ri8": 637, "adc32rm": 637, "adc32rr": 637, "adc64mi32": 637, "adc64mi8": 637, "adc64mr": 637, "adc64ri32": 637, "adc64ri8": 637, "adc64rm": 637, "adc64rr": 637, "adce": [580, 609], "add": [26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 43, 44, 45, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 140, 211, 212, 213, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 335, 369, 370, 371, 372, 373, 379, 380, 381, 382, 383, 386, 387, 388, 461, 463, 466, 469, 470, 473, 476, 477, 481, 482, 483, 485, 486, 487, 488, 491, 495, 499, 507, 509, 513, 514, 515, 516, 517, 527, 528, 530, 531, 533, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 547, 549, 550, 554, 555, 556, 560, 565, 566, 569, 570, 571, 573, 574, 575, 576, 577, 581, 583, 585, 588, 589, 591, 592, 594, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 625, 626, 628, 630, 631, 632, 635, 636, 637, 640, 641, 642, 644, 646, 647, 648, 649, 650, 652, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "add16mi": 637, "add16mi8": 637, "add16mr": 637, "add16ri": 637, "add16ri8": 637, "add16rm": 637, "add16rr": 637, "add32mi": 637, "add32mi8": 637, "add32mr": 637, "add32ri": 637, "add32ri8": 637, "add32ri8_db": 505, "add32ri_db": 505, "add32rm": [625, 637], "add32rr": [505, 625, 636, 637], "add32rr_db": 505, "add32rr_rev": 505, "add64i32": 505, "add64mi32": 637, "add64mi8": 637, "add64mr": 637, "add64ri32": [505, 637], "add64ri8": 505, "add64rr": 505, "add8rr": 483, "add_": 482, "add_cfg_simplif": [682, 683, 684, 685], "add_char": [679, 680, 681, 682, 683, 684, 685], "add_custom_command": 482, "add_custom_target": 482, "add_definit": 481, "add_dep": 482, "add_dependenc": 482, "add_execut": [481, 482], "add_gvn": [682, 683, 684, 685], "add_incoming": [683, 684], "add_instruction_combin": [682, 683, 684, 685], "add_instruction_combining": [682, 685], "add_library": 481, "add_llvm_component_library": 647, "add_llvm_execut": 482, "add_llvm_fuzz": 546, "add_llvm_library": [481, 648], "add_llvm_pass_plugin": 648, "add_llvm_tool": 546, "add_llvm_unittest": 481, "add_memory_to_register_promot": 685, "add_pf": 577, "add_pt": 577, "add_reassoci": [682, 683, 684, 685], "add_ri": 636, "add_rpath": 507, "add_rr": 636, "add_subdirectory": [481, 648], "addast": 657, "addcomment": 547, "added": [56, 57, 147, 246, 247, 399, 400, 461, 466, 467, 473, 477, 478, 480, 481, 483, 486, 487, 495, 499, 503, 509, 515, 530, 536, 538, 541, 542, 547, 553, 559, 567, 570, 577, 579, 581, 582, 583, 585, 586, 587, 591, 593, 608, 609, 611, 612, 613, 614, 618, 621, 625, 627, 628, 630, 631, 632, 634, 636, 640, 641, 642, 645, 646, 648, 652, 654, 655, 656, 657, 669, 671, 672, 673, 674, 675, 676, 680, 682, 683, 684], "addedcomplexity": [636, 637], "addend": [466, 532, 579], "addendum": [551, 644], "addfunctionast": 657, "addgenerator": [654, 655, 656, 657], "addi": 579, "addimm": 483, "addincoming": [672, 673, 674, 675, 676], "adding": [461, 466, 467, 474, 477, 478, 481, 483, 485, 486, 487, 491, 492, 495, 504, 534, 535, 542, 546, 549, 567, 570, 573, 577, 579, 586, 593, 611, 623, 625, 627, 632, 634, 636, 641, 642, 644, 646, 648, 649, 654, 656, 670, 672, 673, 674, 675, 677, 678, 679, 681, 683, 684, 685, 686, 687], "addinstselector": 646, "addintervalsforspill": 483, "addirmodul": 593, "addit": [461, 465, 466, 469, 470, 473, 479, 481, 482, 483, 484, 486, 487, 491, 492, 499, 506, 513, 514, 523, 530, 532, 534, 535, 538, 540, 542, 547, 548, 554, 555, 558, 559, 560, 571, 572, 574, 575, 578, 579, 580, 588, 590, 592, 594, 607, 609, 611, 625, 626, 628, 630, 632, 635, 636, 637, 640, 641, 643, 645, 646, 648, 669, 671, 673, 674, 677, 680, 682, 684, 685, 686], "additional": [461, 464, 465, 468, 470, 473, 477, 479, 481, 483, 486, 487, 488, 495, 497, 505, 511, 517, 528, 529, 530, 531, 532, 534, 535, 538, 542, 545, 547, 548, 549, 550, 552, 554, 556, 559, 560, 561, 562, 569, 570, 572, 579, 580, 581, 583, 585, 587, 589, 591, 594, 597, 605, 607, 609, 610, 611, 613, 614, 616, 622, 623, 625, 626, 628, 629, 630, 631, 634, 635, 642, 646, 648, 649, 670, 675, 681], "additionally": [469, 470, 479, 483, 515, 526, 530, 538, 547, 550, 554, 559, 561, 565, 579, 590, 595, 605, 607, 609, 623, 626, 629, 630], "addl": 626, "addlazyirmodul": 593, "addlib": 495, "addllvm": [481, 482], "addmbb": 483, "addmod": 495, "addmodul": [593, 654, 655, 656, 657, 671, 672, 673, 674], "addmoduleflag": 676, "addop": 625, "addpassestoemitfil": [648, 675], "addpassestoemitmc": 584, "addpdrm": 636, "addpdrr": 636, "addpreemitpass": 646, "addpreserved": [469, 558], "addpsrm": 636, "addpsrr": 636, "addq": [505, 628], "addr": [487, 504, 515, 516, 523, 527, 534, 575, 579, 585, 626, 646], "addr1": 625, "addr2": [527, 625], "addr2lin": [490, 527, 566], "addr3": 527, "addr64": [2, 117], "addrawvalu": 576, "addreg": 483, "addregbankcoverag": 562, "addregfrm": 646, "addregisterclass": [483, 646], "addrequired": 558, "address": [18, 19, 21, 22, 49, 56, 57, 62, 64, 99, 117, 119, 120, 122, 123, 143, 147, 151, 204, 205, 207, 208, 240, 246, 247, 252, 344, 345, 353, 361, 362, 364, 365, 393, 399, 400, 405, 407, 445, 463, 464, 465, 469, 470, 471, 472, 473, 481, 485, 490, 494, 504, 513, 514, 515, 516, 517, 521, 522, 523, 530, 531, 533, 534, 536, 538, 540, 545, 546, 547, 554, 555, 567, 573, 578, 580, 581, 585, 589, 591, 593, 595, 596, 597, 606, 607, 608, 609, 611, 617, 622, 623, 625, 628, 630, 632, 636, 637, 645, 646, 648, 650, 651, 654, 656, 671, 672, 673, 674, 677, 682, 685, 686], "address_rang": 461, "address_siz": [461, 466, 592], "address_spac": 466, "addressed": [461, 472, 485, 533, 538, 547, 630, 632], "addressibl": [466, 555], "addressing": [64, 99, 345, 353, 407, 445, 461, 485, 486, 538, 611, 618, 624, 636], "addressis32b": 597, "addressmodesemitt": 635, "addresssanitiz": [566, 579, 581, 589, 629], "addresssiz": 636, "addressspac": 554, "addri": 646, "addrr": 646, "addrri": 646, "addrrr": 646, "addrsig": [468, 521, 522, 542], "addrsig_sym": 542, "addrspac": [540, 554, 579, 592, 630], "addrspacecast": 555, "addrspacequal": 466, "addsdrm": 636, "addsdrr": 636, "addssrm": 636, "addssrr": 636, "addtmp": [670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "addtmp1": [671, 682], "addtmp4": [670, 681], "addtolinkord": 593, "addtypenam": 609, "addx": 636, "addxri": 585, "addy": 636, "adequat": [481, 626, 646], "adequately": [547, 552], "adher": [484, 486, 538, 609, 614, 631, 637], "adherent": [593, 631], "aditi": 563, "adjacent": [466, 579, 609, 636], "adjust": [466, 515, 516, 518, 527, 540, 545, 550, 578, 591, 626], "adjusted": [461, 481, 518, 579, 626, 641], "adjuster": 605, "adjusting": [578, 630, 646], "adjustment": [578, 579, 626, 646], "adjustpassmanag": 592, "admin": [476, 538, 567], "administrator": 567, "adopt": [486, 538, 549, 593, 626, 631], "adopted": 483, "adopting": 593, "adornment": [579, 627], "adrian": 533, "adrp": 542, "adsiz": 636, "adsizebit": 636, "adsizex": 636, "adst": 8, "adt": [486, 550, 654, 655, 656, 657, 670, 671, 672, 673, 674, 675, 676], "adttest": 481, "advanc": [461, 538, 579, 588, 669, 676, 680], "advanced": [461, 479, 481, 482, 530, 538, 547, 573, 579, 586, 593, 625, 627, 644, 646, 648, 682], "advancedbuild": 569, "advantag": [470, 472, 483, 486, 530, 534, 538, 547, 548, 554, 576, 579, 581, 582, 583, 609, 611, 612, 620, 626, 673, 674, 677, 684, 685, 686], "advent": 579, "adventur": 609, "advertis": 540, "advertised": 588, "advic": [488, 538, 545, 547, 549, 568, 608], "advis": [559, 632, 672, 683], "advised": [479, 482, 495, 576], "advisory": 484, "advocating": [484, 486], "aed0d21a6": 553, "aed0d21a62db": 553, "aentry": [634, 635], "affect": [43, 221, 233, 235, 386, 464, 466, 472, 480, 481, 484, 513, 515, 523, 530, 531, 538, 571, 572, 579, 591, 592, 609, 619, 625, 631, 632, 639, 641, 648, 672, 683], "affected": [464, 470, 481, 485, 487, 513, 574, 579, 594, 611, 614, 632], "affecting": [470, 564, 580, 623, 671], "affili": 538, "affiliated": 482, "affixed": 535, "afn": 579, "aforementioned": [538, 601, 604, 642], "aform_1": 483, "aform_2": 483, "afre": 578, "aft": 642, "after": [66, 153, 254, 409, 461, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 477, 480, 481, 482, 483, 484, 487, 488, 489, 491, 492, 493, 495, 499, 503, 504, 513, 517, 527, 528, 529, 530, 534, 535, 538, 539, 540, 542, 543, 546, 547, 548, 550, 553, 555, 556, 557, 559, 560, 564, 567, 568, 571, 572, 573, 575, 578, 579, 581, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 597, 601, 607, 609, 610, 614, 620, 622, 623, 625, 627, 628, 629, 630, 631, 632, 634, 635, 636, 639, 640, 641, 642, 643, 646, 647, 648, 651, 652, 654, 655, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686], "after_bb": [683, 684, 685], "afterbb": [672, 673, 674, 675, 676], "afterloop": [672, 673, 674, 675, 676, 683, 684, 685], "afterward": [538, 545, 579, 583, 607, 626, 630], "again": [468, 472, 482, 485, 487, 491, 530, 534, 536, 540, 545, 553, 559, 574, 579, 586, 590, 591, 595, 609, 614, 622, 624, 627, 632, 640, 642, 648, 670, 671, 672, 674, 677, 682, 683, 685, 686], "against": [468, 475, 476, 479, 481, 484, 487, 498, 513, 517, 538, 540, 542, 543, 545, 546, 564, 566, 573, 578, 579, 581, 592, 593, 606, 607, 609, 611, 612, 614, 622, 623, 626, 640, 641, 643, 649, 652, 670], "age": [484, 597, 602], "agency": 621, "agent": [466, 579], "agg": 579, "agg1": 579, "agg2": 579, "agg3": 579, "aggreg": 650, "aggregat": [486, 517, 540, 578, 580, 609, 618, 646, 650], "aggregated": [504, 650], "aggress": [469, 483, 486, 531, 544, 547, 550, 579, 580, 625, 669, 672, 680, 683], "aggressively": [579, 607, 609], "agnostic": [472, 483, 515, 526, 579, 593, 625, 631], "agpr": 579, "agpr0": 466, "agpr255": 466, "agre": [461, 484, 485, 538, 599, 607, 614, 623, 625, 652], "agreed": [538, 556, 614, 623], "agrep": 640, "ah": [579, 628, 637], "ahead": [486, 538, 540, 550, 552, 573, 574, 593, 611, 630, 648, 654, 669, 677, 678, 679, 680, 686], "ahmed": [563, 623], "aid": [547, 579, 635], "aided": 626, "aim": [472, 476, 477, 482, 486, 488, 535, 538, 579, 585, 593, 609, 616, 621, 622, 623, 625, 631, 654], "aimed": [535, 538, 546, 631], "aiming": 617, "ain": 466, "air": 579, "aix": [483, 532, 618], "aka": [468, 469, 483, 579, 580, 581, 604, 605, 609, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "akil": 623, "al": [483, 573, 579, 585, 628, 637, 646], "al_aliasset": 646, "al_superregsset": 646, "alac": 639, "alacconvert": 639, "albeit": [674, 685], "albin": 623, "alderlak": 618, "alex": [535, 614], "algebraic": 607, "algn": 650, "algo": 648, "algorithm": [469, 486, 502, 505, 513, 530, 537, 540, 547, 560, 579, 583, 590, 591, 597, 607, 609, 616, 618, 626, 634, 636, 646, 669, 670, 671, 672, 673, 674, 675, 677, 680, 683, 685, 686], "algorithmic": 609, "ali": [461, 470, 473, 487, 491, 494, 506, 513, 514, 520, 522, 578, 580, 585, 590, 591, 593, 618, 642, 644, 646, 648], "alias": [469, 513, 514, 522, 529, 572, 590, 607, 646], "aliasanalys": [579, 648], "aliasanalysisdebugg": 469, "aliase": [473, 579, 591], "aliased": [473, 483, 530, 579, 607], "aliaseety": 579, "aliasesset": 469, "aliasing": [461, 464, 469, 505, 513, 548, 590, 628, 677, 686], "aliasopt": 530, "aliasresult": 469, "aliasset": [469, 646], "alic": 634, "align": [466, 473, 487, 515, 534, 535, 540, 545, 547, 566, 575, 576, 579, 585, 592, 609, 616, 618, 625, 628, 630, 646], "align32bit": 473, "align_nod": 579, "aligned": [461, 465, 466, 470, 472, 473, 483, 534, 538, 545, 548, 566, 579, 589, 609, 625, 651, 652], "alignlog2": 579, "alignment": [465, 466, 470, 483, 511, 515, 517, 532, 534, 535, 547, 548, 555, 566, 576, 579, 582, 585, 591, 592, 607, 609, 622, 625, 630, 646, 651], "alignstack": [473, 579], "alignstyl": 609, "aliv": [483, 534, 591, 607, 609, 626, 648], "all": [48, 117, 142, 238, 239, 391, 392, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 540, 541, 542, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 559, 560, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 588, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 604, 605, 608, 609, 610, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "all_build": 552, "all_ones_mask": 626, "all_zeros_mask": 626, "alleviat": [483, 530, 579, 609], "alloc": [48, 142, 238, 391, 461, 466, 469, 470, 486, 492, 493, 514, 515, 526, 540, 542, 547, 548, 550, 575, 578, 585, 589, 590, 593, 594, 607, 609, 616, 622, 626, 628, 629, 630, 646, 648, 650, 654, 671, 674, 675, 676, 685], "allocainst": [486, 579, 609, 674, 675, 676, 685], "allocat": [466, 469, 483, 486, 515, 534, 540, 547, 566, 578, 579, 581, 609, 622, 624, 646, 652, 677, 686], "allocated": [461, 466, 483, 492, 513, 534, 540, 548, 566, 579, 584, 589, 607, 622, 624, 625, 628, 629, 630, 648, 652, 656, 671, 672, 673, 674, 682, 685], "allocating": [466, 483, 513, 534, 540, 578, 579, 589, 609, 622, 626, 628], "allocationinst": 609, "allocator": [466, 481, 492, 493, 545, 547, 554, 557, 589, 617, 625, 626, 630, 646, 648], "allocator_may_return_null": 622, "allocinst": 685, "allocsiz": [473, 579], "allon": 579, "allow": [461, 466, 469, 470, 473, 475, 479, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 495, 499, 505, 513, 515, 522, 526, 530, 531, 534, 535, 536, 537, 538, 539, 540, 541, 542, 547, 548, 549, 550, 555, 556, 559, 566, 567, 569, 571, 573, 576, 578, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 595, 606, 607, 608, 609, 611, 614, 618, 620, 622, 623, 624, 625, 626, 627, 628, 630, 631, 634, 636, 637, 639, 641, 642, 643, 645, 646, 648, 649, 650, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688], "allow_retr": 491, "allowed": [461, 464, 465, 466, 470, 472, 473, 475, 481, 483, 487, 491, 513, 531, 534, 535, 538, 542, 547, 548, 550, 555, 575, 579, 593, 604, 611, 620, 628, 630, 631, 636, 648, 652, 669, 673, 674, 680, 684, 685], "allowing": [461, 466, 469, 483, 486, 487, 491, 530, 534, 537, 538, 540, 545, 547, 575, 579, 587, 593, 594, 595, 597, 606, 607, 608, 609, 611, 617, 618, 620, 622, 625, 626, 628, 630, 636, 648, 652, 670, 674, 678, 681, 685], "allowlist": 593, "allowsanycontiguousstorag": 609, "allowsanysmallsiz": 609, "allroot": 640, "alltargetsasmparser": 479, "alltargetsdesc": 479, "alltargetsdisassembler": 479, "alltargetsinfos": 479, "ally": 579, "almost": [461, 470, 472, 483, 485, 486, 513, 538, 541, 545, 546, 547, 553, 555, 580, 609, 611, 630, 631], "alon": [473, 478, 483, 530, 538, 588, 590, 626, 641, 669, 680], "along": [470, 473, 481, 483, 486, 514, 515, 518, 531, 534, 535, 537, 542, 545, 547, 550, 569, 573, 574, 577, 579, 584, 585, 586, 590, 592, 602, 607, 609, 616, 624, 625, 626, 627, 635, 636, 646, 647, 648, 655, 670, 671, 677, 678, 679, 681, 682, 686], "alongsid": [473, 516, 533, 550, 611, 620, 647, 648], "alpha": [579, 646], "alphabetic": 466, "alphabetical": [634, 636], "alphacompilationcallback": 646, "alphajitinfo": 646, "alphanumeric": [500, 515], "already": [461, 466, 469, 475, 476, 478, 479, 480, 481, 482, 483, 486, 507, 513, 514, 530, 531, 533, 534, 538, 541, 547, 550, 552, 554, 559, 562, 565, 566, 573, 574, 575, 578, 579, 586, 591, 593, 594, 609, 610, 611, 613, 614, 621, 623, 624, 625, 626, 627, 628, 630, 637, 641, 642, 646, 647, 648, 652, 654, 656, 670, 671, 672, 673, 674, 675, 676, 679, 681, 682, 683, 684, 685], "also": [461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 495, 499, 505, 513, 517, 518, 530, 531, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 559, 560, 562, 565, 566, 568, 569, 570, 571, 572, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 590, 591, 592, 593, 594, 595, 597, 601, 606, 607, 608, 609, 610, 611, 612, 614, 616, 618, 619, 621, 622, 623, 625, 626, 627, 628, 630, 631, 634, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "alt_always_instrumented": 649, "alt_never_instrumented": 649, "alter": [530, 579, 609, 625], "altered": 642, "altering": 579, "altern": [461, 464, 465, 466, 481, 483, 521, 540, 545, 548, 550, 554, 559, 560, 562, 579, 583, 593, 616, 632, 639, 646, 648], "alternat": [461, 489, 553, 565, 579, 594, 609, 652, 688], "alternating": 579, "alternatively": [461, 477, 479, 485, 499, 530, 531, 538, 545, 548, 552, 553, 565, 579, 581, 609, 626, 646, 649, 669, 674, 680, 685], "although": [461, 470, 473, 482, 483, 485, 486, 491, 530, 531, 538, 541, 547, 550, 552, 560, 573, 579, 581, 583, 585, 586, 597, 602, 604, 609, 627, 630, 635, 636, 641, 648, 673, 681], "altivec": [483, 579, 580, 618], "altogeth": [569, 616], "alu": [466, 513], "alu32_rr": 577, "alway": [461, 466, 469, 470, 472, 473, 475, 476, 478, 481, 482, 483, 484, 485, 486, 487, 491, 495, 497, 506, 513, 530, 531, 534, 535, 538, 540, 542, 543, 545, 550, 553, 555, 559, 569, 573, 579, 580, 582, 583, 585, 590, 597, 599, 604, 605, 608, 609, 610, 611, 620, 621, 623, 625, 626, 629, 630, 631, 632, 634, 636, 640, 641, 647, 649, 650, 651, 652, 669, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 683, 684, 685, 686], "always_inlin": 531, "always_instru": 649, "always_instrumented": 649, "alwaysinlin": [473, 579, 647], "alwaysinlinerpass": 647, "am": [538, 555, 609, 647], "amar": 614, "amazing": [673, 684], "amazingly": [672, 683], "ambiguity": [464, 573, 636], "ambiguous": [530, 641, 669, 673, 680, 684], "amd": [461, 464, 466, 483, 513, 532, 571, 626, 634], "amd64": 550, "amd_code_version_major": 466, "amd_kernel_code_version_minor": 466, "amd_machine_kind": 466, "amd_machine_version_major": 466, "amd_machine_version_stepping": 466, "amd_queue_t": 466, "amdfam10": 675, "amdgpu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 461, 550, 579, 585, 614, 634, 635, 644], "amdgpu_flat_work_group_siz": 466, "amdgpu_gfx": 466, "amdgpu_hsa_note_code_object_version_": 466, "amdgpu_hsa_note_hsail_": 466, "amdgpu_hsa_note_isa_": 466, "amdgpu_kernel": 618, "amdgpu_num_sgpr": 466, "amdgpu_num_vgpr": 466, "amdgpu_waves_per_eu": 466, "amdgpubufferintrinsic": 635, "amdgpubufferload": 635, "amdgpuimagedimatomicintrinsic": 635, "amdgpursrcintrinsic": 635, "amdgpusample_lz_o": 635, "amdgpusamplevari": 635, "amdhsa_dx10_clamp": 466, "amdhsa_exception_fp_denorm_src": 466, "amdhsa_exception_fp_ieee_div_zero": 466, "amdhsa_exception_fp_ieee_inexact": 466, "amdhsa_exception_fp_ieee_invalid_op": 466, "amdhsa_exception_fp_ieee_overflow": 466, "amdhsa_exception_fp_ieee_underflow": 466, "amdhsa_exception_int_div_zero": 466, "amdhsa_float_denorm_mode_16_64": 466, "amdhsa_float_denorm_mode_32": 466, "amdhsa_float_round_mode_16_64": 466, "amdhsa_float_round_mode_32": 466, "amdhsa_forward_progress": 466, "amdhsa_fp16_overflow": 466, "amdhsa_group_segment_fixed_siz": 466, "amdhsa_ieee_mod": 466, "amdhsa_kernarg_siz": 466, "amdhsa_memory_ordered": 466, "amdhsa_next_free_sgpr": 466, "amdhsa_next_free_spgr": 466, "amdhsa_next_free_vgpr": 466, "amdhsa_private_segment_fixed_siz": 466, "amdhsa_reserve_": 466, "amdhsa_reserve_flat_scratch": 466, "amdhsa_reserve_vcc": 466, "amdhsa_reserve_xnack_mask": 466, "amdhsa_system_sgpr_private_segment_wavefront_offset": 466, "amdhsa_system_sgpr_workgroup_id_x": 466, "amdhsa_system_sgpr_workgroup_id_y": 466, "amdhsa_system_sgpr_workgroup_id_z": 466, "amdhsa_system_sgpr_workgroup_info": 466, "amdhsa_system_vgpr_workitem_id": 466, "amdhsa_user_sgpr_dispatch_id": 466, "amdhsa_user_sgpr_dispatch_ptr": 466, "amdhsa_user_sgpr_flat_scratch_in": 466, "amdhsa_user_sgpr_kernarg_segment_ptr": 466, "amdhsa_user_sgpr_private_segment_buff": 466, "amdhsa_user_sgpr_private_segment_siz": 466, "amdhsa_user_sgpr_queue_ptr": 466, "amdhsa_wavefront_size32": 466, "amdhsa_workgroup_processor_mod": 466, "amdkernelcodet": 466, "amen": [483, 612], "amend": [533, 538, 550, 608], "amin": 614, "aminiinconsistent": 614, "among": [461, 483, 486, 487, 531, 542, 545, 550, 556, 579, 581, 582, 591, 592, 607, 609, 611, 634], "amongst": [461, 470], "amortized": 564, "amount": [466, 477, 479, 483, 484, 486, 492, 493, 513, 517, 528, 530, 538, 540, 541, 543, 547, 550, 555, 574, 579, 581, 591, 607, 609, 611, 612, 622, 623, 624, 625, 628, 630, 634, 637, 648, 649, 656, 671, 678, 679, 682], "amper": 568, "ampersand": [114, 201, 303, 460], "ample": 632, "an": [16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 64, 65, 78, 87, 96, 98, 100, 114, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 162, 173, 185, 187, 201, 202, 203, 209, 210, 211, 212, 213, 218, 219, 220, 221, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 250, 266, 277, 287, 289, 303, 304, 309, 314, 326, 335, 336, 337, 341, 342, 345, 359, 360, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 399, 400, 401, 403, 407, 408, 421, 432, 442, 444, 446, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 526, 527, 528, 529, 531, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 553, 554, 555, 556, 557, 559, 560, 561, 562, 565, 567, 568, 570, 571, 572, 573, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 604, 605, 607, 608, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 627, 628, 629, 630, 631, 632, 634, 635, 637, 639, 640, 641, 642, 643, 644, 645, 649, 650, 651, 652, 653, 654, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688], "anachronistically": 473, "analogous": [461, 540, 547, 560, 579, 609, 626], "analogously": [630, 648], "analogy": 583, "analys": [470, 474, 475, 480, 486, 497, 528, 535, 541, 543, 545, 547, 550, 554, 564, 577, 579, 580, 582, 583, 585, 590, 594, 609, 614, 616, 617, 618, 620, 625, 626, 634, 640, 644, 647, 650, 653, 671, 674, 676, 682, 685], "analysing": [474, 480, 649, 650], "analysisaliasing": 620, "analysisfpcommut": 620, "analysisusag": [469, 558], "analytic": 613, "analyz": [481, 483, 486, 490, 505, 528, 529, 545, 550, 552, 580, 583, 607, 625, 626, 634, 640, 648, 650, 672, 683], "analyzebranch": 646, "analyzed": [513, 534, 591, 648], "analyzing": [497, 537, 562, 609, 649, 650], "ancestor": [466, 573, 636], "anchor": 625, "ancient": 468, "and": [1, 16, 19, 20, 22, 23, 29, 30, 32, 40, 41, 42, 43, 44, 45, 48, 51, 53, 54, 58, 62, 63, 87, 114, 117, 120, 123, 129, 130, 136, 137, 138, 140, 142, 144, 145, 148, 151, 152, 173, 201, 202, 205, 206, 208, 218, 219, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 241, 243, 244, 248, 252, 253, 277, 303, 305, 310, 315, 317, 326, 336, 338, 340, 342, 344, 359, 362, 363, 365, 366, 372, 373, 375, 383, 384, 385, 386, 387, 388, 391, 392, 394, 396, 397, 401, 405, 406, 432, 460, 462, 464, 468, 471, 473, 475, 476, 478, 480, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 508, 509, 510, 511, 512, 518, 521, 523, 525, 527, 528, 529, 533, 535, 536, 537, 539, 540, 542, 551, 552, 553, 554, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 572, 574, 575, 576, 577, 580, 581, 585, 587, 588, 589, 592, 594, 595, 596, 597, 600, 602, 605, 606, 608, 610, 612, 613, 614, 615, 618, 619, 620, 621, 622, 624, 627, 629, 631, 632, 634, 637, 638, 640, 643, 645, 647, 649, 650, 652, 653, 654, 655, 656, 657, 672, 673, 674, 675, 676, 678, 683, 684, 685, 687, 688], "andrew": [547, 611], "andric": 623, "android": 641, "andw": 487, "anew": 625, "angle": [531, 636, 652], "annot": [475, 487, 491, 518, 545, 592, 626], "annotat": [466, 475, 540, 592, 614], "annotated": [513, 531, 579, 580, 587, 611], "annotating": 545, "announc": [549, 588, 614, 619, 632], "announced": [619, 649], "announcing": [572, 611], "anon": 579, "anonymous": [513, 625, 634, 635, 636, 646, 648, 650, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "anonymous_0": 635, "anonymous_1": 635, "anonymously": 621, "anoth": [461, 464, 465, 466, 469, 470, 471, 472, 473, 479, 481, 482, 483, 484, 486, 487, 491, 495, 499, 513, 515, 517, 526, 527, 528, 530, 534, 535, 537, 538, 540, 541, 542, 543, 547, 550, 552, 555, 557, 558, 559, 560, 562, 568, 569, 571, 577, 578, 579, 580, 581, 582, 583, 586, 590, 591, 592, 593, 596, 604, 605, 607, 611, 614, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 641, 642, 643, 646, 648, 649, 650, 651, 652, 655, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 682, 683, 684, 685, 686], "another_op": 585, "anotherbranch": 611, "anothercategory": 530, "answer": [469, 476, 486, 530, 538, 543, 548, 557, 573, 579, 586, 590, 591, 607, 612, 617, 671, 672, 674, 682, 683, 685], "answered": 545, "answering": 538, "anti": [513, 537], "anticipat": [611, 651], "anticipated": [461, 614], "antisymmetric": 591, "antisymmetry": 591, "anxious": 481, "any": [114, 201, 303, 460, 461, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 495, 497, 498, 499, 502, 503, 504, 505, 509, 513, 514, 515, 516, 517, 518, 521, 522, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 552, 554, 555, 557, 559, 566, 568, 571, 572, 573, 575, 576, 577, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 601, 604, 605, 607, 609, 610, 611, 613, 614, 616, 618, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 640, 641, 642, 643, 645, 646, 647, 648, 649, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "any_other_cond": 579, "anyextload": 555, "anyhow": 579, "anymor": [476, 642, 648], "anyon": [470, 482, 485, 538, 539, 590, 621, 623, 625, 646], "anyregcc": [473, 579, 628], "anything": [461, 470, 479, 483, 486, 492, 493, 513, 515, 531, 534, 538, 543, 550, 552, 566, 573, 579, 583, 593, 595, 601, 607, 609, 611, 625, 626, 628, 630, 636, 637, 642, 671, 672, 681, 682, 683], "anyway": [486, 537, 571, 579, 590, 607, 614, 625], "anywher": [484, 487, 540, 545, 566, 579, 582, 586, 591, 627, 636, 641, 669, 674, 680, 685], "ao": 542, "ap": [547, 579], "ap2": 579, "apach": [486, 538, 543, 572, 631, 654, 655, 656, 657], "apart": [469, 472, 481, 554, 579, 601, 609], "apertur": [48, 391, 466], "apfloat": [550, 670, 671, 672, 673, 674, 675, 676, 681], "api": [466, 469, 481, 486, 517, 530, 532, 554, 558, 565, 572, 575, 581, 590, 592, 593, 602, 606, 609, 612, 614, 628, 634, 649, 653, 655, 656, 657, 670, 671, 676, 681], "apint": [585, 609, 650], "apis": [486, 533, 538, 547, 551, 575, 605, 615, 617, 622, 626, 632, 634, 649, 654, 656, 670, 682], "app": [606, 609, 613], "apparent": 466, "apparently": [674, 685], "appeal": 621, "appealed": 621, "appealing": 626, "appear": [461, 465, 466, 469, 470, 477, 486, 487, 491, 495, 502, 513, 515, 530, 535, 538, 542, 548, 575, 579, 585, 593, 595, 596, 597, 602, 604, 605, 607, 609, 611, 616, 625, 626, 630, 634, 636, 646], "appearing": [530, 579, 611], "appel": 547, "appel89": 547, "append": [461, 466, 481, 487, 488, 495, 559, 575, 579, 609, 610, 635, 639, 641, 649], "append_block": [681, 682, 683, 684, 685], "appended": [489, 495, 496, 579, 609, 683], "appending": [466, 473, 489, 495, 499, 509, 579, 609], "appendinglinkag": 609, "appendix": 461, "appendun": 579, "appertain": 579, "apple": [482, 483, 487, 489, 504, 507, 536, 538, 540, 549, 550, 579, 623, 625, 634], "apple_nam": [489, 625], "apple_namespac": 625, "apple_objc": 625, "apple_typ": [489, 625], "appli": [461, 470, 482, 483, 484, 486, 491, 495, 499, 523, 530, 537, 550, 569, 575, 579, 614, 616, 618, 623, 631, 636, 655], "applic": [461, 472, 483, 485, 495, 499, 514, 522, 538, 579, 581, 591, 607, 609, 632], "applied": [66, 153, 254, 409, 461, 464, 465, 477, 495, 504, 515, 526, 530, 534, 538, 542, 548, 554, 562, 567, 570, 572, 579, 581, 583, 584, 594, 607, 609, 618, 623, 625, 632, 636, 639, 642, 671, 682], "appliqu": [466, 473, 481, 483, 486, 498, 499, 530, 531, 532, 538, 540, 544, 545, 547, 554, 579, 584, 609, 617, 626, 628, 630, 636, 637, 639, 641, 646, 648, 650, 651, 653, 654, 668, 671, 673, 677, 679, 682, 684, 686], "applu331": 613, "apply": [461, 463, 466, 469, 472, 476, 481, 483, 485, 486, 495, 515, 526, 530, 534, 538, 542, 545, 548, 566, 570, 575, 579, 584, 593, 597, 604, 609, 611, 614, 616, 626, 631, 632, 636, 642, 646, 648, 651, 652, 655, 673, 674, 684, 685], "applying": [485, 528, 534, 569, 579, 582, 619, 642, 651, 677, 686], "applymergedloc": 575, "apprec": 653, "appreciat": [461, 533, 538], "appreciated": [461, 538, 569], "approach": [461, 466, 472, 477, 478, 481, 483, 513, 530, 531, 534, 538, 540, 548, 560, 564, 573, 577, 579, 589, 591, 607, 609, 614, 616, 618, 624, 625, 630, 632, 646], "appropriat": [461, 466, 469, 470, 472, 483, 485, 486, 487, 499, 513, 518, 530, 534, 538, 540, 541, 545, 546, 547, 550, 555, 556, 557, 567, 571, 572, 573, 576, 577, 579, 592, 593, 599, 604, 607, 608, 609, 611, 612, 614, 619, 621, 625, 630, 631, 632, 635, 636, 637, 646, 648, 652, 654, 656, 669, 673, 674, 680, 684, 685], "appropriately": [461, 469, 491, 538, 579, 582, 609, 621, 625, 630, 636, 650], "appropriateness": 621, "approval": [485, 538, 572, 614, 632], "approved": [485, 538, 608, 623], "approving": 572, "approx": [531, 592], "approxim": [475, 580], "approximat": [531, 579, 581], "approximated": 579, "approximately": [491, 552, 566, 623, 642], "apr": 631, "aptr": 579, "apu": 466, "aq": 579, "aq2": 579, "aqlwrap": 466, "ar": [481, 490, 509, 514, 520, 550, 565, 570, 609], "arang": 504, "arbitrarily": [461, 573, 579, 599, 625, 649, 672, 683], "arbitrary": [461, 466, 469, 473, 483, 486, 491, 505, 530, 534, 540, 546, 547, 548, 555, 564, 575, 579, 585, 590, 593, 605, 609, 623, 625, 626, 628, 630, 634, 635, 636, 646, 648, 651, 669, 670, 671, 674, 677, 678, 679, 680, 681, 682, 685, 686], "arc": [499, 550, 608, 614, 635], "arcanist": [549, 550, 608], "arch": [489, 492, 493, 499, 504, 511, 513, 514, 515, 516, 521, 522, 523, 527, 531, 550, 593, 619, 649, 675], "arch1": 514, "arch2": 514, "arch_nam": 527, "arch_only": 509, "arche": [568, 569], "architected": 466, "architectur": [461, 470, 472, 480, 481, 483, 489, 491, 492, 493, 499, 504, 505, 509, 511, 513, 514, 515, 516, 521, 522, 523, 527, 531, 533, 540, 545, 546, 550, 551, 552, 566, 568, 569, 571, 572, 579, 581, 585, 592, 593, 596, 616, 619, 622, 626, 632, 634, 636, 637, 641, 643, 644, 646, 649, 653, 675, 687], "architectural": [461, 466, 487], "architecturally": [513, 531], "architecture_name_siz": 466, "archiv": [479, 490, 499, 504, 508, 514, 515, 516, 523, 526, 532, 549, 565, 582, 597, 609, 610, 611, 621, 622, 649], "archived": [490, 495, 538], "archiveiterator": 609, "archiver": 495, "arcp": 579, "arcpatch": 608, "arctan": 652, "are": [16, 32, 40, 43, 45, 54, 60, 117, 120, 136, 145, 147, 202, 205, 221, 230, 233, 235, 244, 250, 326, 359, 362, 375, 383, 386, 388, 397, 403, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 518, 519, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "aren": [469, 483, 484, 486, 531, 538, 547, 548, 550, 552, 559, 569, 579, 585, 607, 611, 626, 632, 671, 672, 677, 682, 686], "areprivatesymbolsstripped": 597, "arg": [466, 486, 488, 491, 493, 499, 518, 530, 534, 546, 569, 574, 575, 585, 591, 620, 625, 630, 634, 635, 636, 651, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "arg1": [534, 579, 581, 649, 668, 679], "arg2": [534, 579, 581, 668, 679], "arg3": 534, "arg_begin": 609, "arg_empty": 609, "arg_end": 609, "arg_index": 579, "arg_iterator": 609, "arg_siz": [547, 609, 670, 671, 672, 673, 674, 675, 676], "argc": [530, 535, 536, 579, 581, 592, 609, 625, 650], "argidx": 676, "arglist": 579, "argmemonly": [473, 545, 579], "argn": 482, "argnam": [530, 669, 670, 671, 672, 673, 674, 675, 676], "argstart": 530, "argsv": [670, 671, 672, 673, 674, 675, 676], "argty": 579, "arguably": 554, "argument": [54, 145, 244, 397, 461, 469, 472, 473, 475, 478, 480, 481, 483, 486, 487, 488, 490, 491, 493, 495, 497, 498, 499, 504, 514, 518, 527, 529, 531, 535, 539, 540, 541, 543, 545, 546, 547, 548, 550, 552, 556, 561, 565, 569, 573, 574, 577, 578, 581, 584, 585, 591, 594, 611, 617, 618, 620, 622, 624, 625, 626, 628, 629, 630, 634, 635, 636, 637, 640, 641, 646, 648, 649, 651, 654, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686], "argument1": 636, "argument2": 636, "argumentexpr": [680, 681, 682, 683, 684, 685], "argumentlisttyp": 609, "argv": [477, 482, 493, 530, 535, 536, 581, 592, 609, 625, 650], "argv0": 493, "argvalu": [530, 536], "aris": [538, 548, 579, 609], "arithbinop_rf": 636, "arithmetic": [535, 545, 555, 607, 609, 626, 636, 645, 670, 674, 681, 685], "arithmetical": 535, "arithmetically": 636, "arity": 547, "arm": [470, 483, 515, 516, 521, 522, 526, 529, 540, 545, 550, 559, 569, 579, 580, 585, 587, 614, 615, 623, 634, 636, 641, 644, 646], "arm32": 532, "arm64": [532, 550, 639], "arm7": 649, "arm_aapcs_vfpcc": 473, "arm_aapcscc": 473, "arm_apcscc": 473, "arm_bf16": 529, "arm_cde": 529, "arm_fp16": 529, "arm_mve": 529, "arm_neon": [472, 529, 634], "arm_sve": 529, "arm_sve_builtin": 529, "arm_sve_builtin_cg_map": 529, "arm_sve_sema_rangecheck": 529, "arm_sve_typeflag": 529, "armap": 514, "armgenasmmatch": 634, "armgenregisterinfo": 634, "armhf": [570, 571, 622], "arminstrinfo": 646, "armv5": 470, "armv6": [532, 568], "armv7": [472, 532, 550, 568, 571, 579], "armv7a": 570, "armv8": [532, 579, 589, 617, 637], "arnaud": 588, "around": [461, 469, 470, 480, 482, 485, 487, 512, 513, 530, 538, 540, 547, 548, 550, 560, 576, 578, 579, 581, 588, 590, 591, 593, 594, 607, 609, 611, 614, 618, 625, 626, 627, 630, 631, 636, 646, 648, 649, 669, 672, 676, 677, 683, 686], "arr": [548, 579, 626], "arr1": 626, "arr2": 626, "arrang": [483, 485, 530, 547, 573, 579, 607, 626, 632, 641, 648, 656], "arranged": [579, 626], "arranging": 655, "array": [461, 464, 466, 469, 472, 473, 483, 492, 517, 534, 540, 545, 547, 581, 591, 592, 596, 597, 600, 601, 604, 607, 625, 626, 634, 635, 641, 642, 645, 646, 669, 674, 677, 680, 681, 682, 683, 684, 685, 686], "arrayidx": 579, "arrayidx1": 579, "arrayidx2": 579, "arrayidx3": 579, "arrayidx4": 579, "arrayref": [536, 635], "arraytyp": 609, "arriv": 548, "arsenault": 614, "arsenaultagre": 614, "art": 547, "artem": 531, "articl": [579, 591, 607, 611, 653, 672, 674, 683, 685], "articulat": 485, "artifact": [548, 572, 581, 591, 616], "artifact_prefix": 581, "artificial": 466, "artur": 623, "as_float": [682, 683, 684, 685], "asan": [581, 617, 618, 622], "asanstackvariabledescript": 629, "asc": 613, "ascending": [461, 535, 579], "ascii": [473, 516, 525, 579, 581, 625, 636, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "asciz": 542, "asf": 538, "ashr": 555, "asi": 646, "asid": [560, 579, 590, 609, 622], "ask": [469, 476, 484, 485, 531, 533, 538, 541, 543, 547, 550, 572, 573, 588, 591, 611, 612, 619, 623, 625, 630, 632, 648, 656, 669, 677, 680, 686], "asked": [461, 484, 550, 552, 609, 623, 625], "asking": [485, 533, 545, 621, 623, 672, 674, 676, 677, 683, 685, 686], "asm": [473, 479, 492, 493, 505, 513, 516, 519, 529, 592, 620], "asmformat": 529, "asmmatchconvert": 636, "asmmatcheremitt": 634, "asmnam": 646, "asmpars": [541, 550, 634], "asmparsernum": 529, "asmprint": [483, 547, 579, 634, 646], "asmstr": [636, 646], "asmstring": [636, 637, 646], "asmvariantnam": 636, "asmwrit": [541, 547], "asmwriternum": 529, "aspect": [461, 481, 483, 485, 534, 537, 547, 560, 562, 566, 579, 601, 602, 609, 611, 616, 622, 625, 669, 670, 672, 676, 677, 680, 681, 683, 686], "aspir": [673, 684], "aspx": [486, 613], "asrc": 8, "asrc2": 8, "assembl": [19, 56, 57, 120, 205, 362, 399, 400, 462, 463, 464, 465, 490, 492, 531, 540, 542, 550, 552, 570, 593, 611, 618, 634, 640, 646, 687], "assembled": [461, 466, 538, 546, 579, 618, 637], "assembler": [483, 542, 546, 550], "assembling": 466, "assembly": [461, 465, 466, 473, 489, 492, 493, 496, 497, 502, 503, 513, 516, 519, 528, 529, 532, 538, 540, 541, 543, 546, 548, 550, 552, 570, 585, 587, 592, 612, 617, 618, 624, 630, 634, 641, 671, 675, 682], "assert": [481, 483, 530, 533, 550, 568, 572, 574, 579, 580, 581, 592, 606, 607, 609, 619, 625, 641, 646, 648, 652, 655, 670, 671, 673, 674, 675, 676], "assert_valid_funct": [681, 682, 683, 684, 685], "assign": [465, 476, 483, 505, 530, 533, 540, 543, 554, 579, 591, 592, 609, 625, 636, 646, 678, 679], "assigne": 476, "assigned": [461, 465, 466, 473, 474, 475, 483, 487, 505, 518, 530, 538, 540, 542, 554, 560, 566, 575, 577, 579, 589, 592, 594, 607, 609, 622, 625, 634, 636, 642, 646, 652], "assigning": [465, 577], "assignment": [470, 474, 483, 486, 505, 537, 538, 543, 548, 554, 562, 579, 580, 591, 609, 611, 625, 670, 675, 676, 678, 679, 681], "assignvirt2phy": 483, "assignvirt2stackslot": 483, "assist": [486, 566, 574, 575, 594, 673, 684], "assisting": 545, "associ": [492, 537, 542, 579, 580, 591, 607, 625], "associat": [535, 536, 579, 590, 609, 628, 636, 643, 669, 680], "associated": [461, 466, 472, 473, 474, 475, 482, 483, 485, 486, 530, 534, 535, 540, 542, 547, 576, 584, 585, 591, 593, 594, 609, 614, 618, 620, 622, 625, 628, 630, 631, 632, 635, 636, 643, 644, 646, 649, 651, 671], "associating": [473, 530, 547, 579], "associativity": 579, "assorted": 676, "assum": [461, 466, 468, 469, 477, 481, 483, 485, 486, 492, 493, 500, 505, 513, 517, 518, 531, 538, 540, 541, 545, 548, 550, 552, 553, 554, 583, 591, 592, 597, 600, 601, 605, 607, 609, 611, 612, 614, 624, 625, 626, 628, 630, 635, 636, 643, 648, 650, 652, 654, 669, 670, 673, 674, 675, 676, 678, 681, 684], "assumed": [461, 463, 465, 466, 469, 474, 475, 477, 483, 509, 515, 527, 534, 547, 554, 579, 597, 599, 602, 604, 609, 630, 635, 648], "assuming": [466, 468, 473, 486, 491, 505, 543, 550, 579, 593, 609, 611, 619, 623, 625, 626, 630, 634, 640, 642, 646, 670, 677, 681, 686], "assumpt": [483, 486, 487, 492, 513, 535, 538, 540, 579, 583, 625, 626, 632, 654, 676, 677, 686], "assur": 652, "ast": [516, 529, 531, 580, 634, 636, 654, 656, 668, 670, 671, 673, 674, 676, 677, 678, 679, 681, 682, 684, 685, 686, 687], "astcontext": 486, "astdump": 634, "astlai": 657, "astnod": 634, "astread": 634, "astwrit": 634, "asymmetric": 548, "asymmetry": [544, 591], "asymptomatic": 488, "async": 593, "async_context": 534, "async_coroutin": 534, "async_function_point": 534, "async_op": 534, "async_op1": 534, "async_op2": 534, "asynchronous": [466, 470, 534, 579, 593], "at": [461, 465, 466, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 491, 492, 493, 495, 499, 504, 505, 506, 507, 511, 513, 515, 516, 517, 519, 527, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 553, 554, 555, 556, 559, 560, 562, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 601, 602, 604, 605, 606, 608, 609, 610, 614, 616, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687], "at_apple_property": 625, "at_apple_property_attribut": 625, "at_apple_property_set": 625, "at_apple_runtime_class": 625, "at_artificial": 625, "at_byte_siz": 625, "at_decl_fil": 625, "at_decl_lin": 625, "at_encoding": 625, "at_end": [681, 682, 683, 684, 685], "at_nam": 625, "at_typ": 625, "atabl": [634, 635], "atan2": [668, 679], "atc": 466, "athlon": 675, "atkinson": 613, "atoi": 579, "atom": 625, "atom_count": 625, "atom_count0": 625, "atomic": [26, 27, 28, 29, 30, 33, 34, 35, 41, 42, 126, 127, 128, 129, 130, 137, 138, 211, 212, 213, 218, 219, 231, 232, 335, 336, 369, 370, 371, 372, 373, 376, 377, 378, 384, 385, 464, 466, 487, 537, 538, 545, 555, 559, 590, 601, 609, 617, 630], "atomic_": 470, "atomic_cmpxchg": 470, "atomic_fent": 470, "atomic_load_": 470, "atomic_swap": 470, "atomically": [579, 622, 632], "atomicexpand": 470, "atomicexpandpass": 470, "atomicity": 470, "atomicrmw": [466, 470, 555], "atomtyp": 625, "atop": 547, "att": [492, 493, 516, 519, 579], "attach": [534, 536, 550, 579, 608, 670], "attached": [567, 575, 579, 585, 592, 593, 609, 625, 642, 643, 651, 671, 672, 673, 674, 685], "attaching": [579, 642, 643, 654], "attachment": [538, 579, 585, 643], "attack": [484, 579], "attacked": 626, "attacker": 626, "attacker_dat": 626, "attacker_offset": 626, "attempt": [461, 465, 469, 473, 477, 488, 494, 500, 513, 515, 516, 528, 531, 538, 540, 545, 550, 559, 566, 570, 575, 579, 581, 584, 593, 607, 609, 620, 621, 626, 628, 630, 631, 632, 634, 646, 648, 650, 651], "attempted": 656, "attempting": [461, 483, 488, 534, 607, 609, 622, 631], "attend": 588, "attende": 588, "attended": 588, "attent": [484, 486, 538, 556, 572, 579, 621, 641, 646, 654], "attorney": 538, "attr": [0, 2, 3, 4, 466, 473, 486, 529, 579, 625, 634, 649, 650], "attr0": [20, 121, 206, 363, 473], "attr1": 473, "attr32": [20, 121, 206, 363], "attract": [461, 538, 547, 588], "attrdump": 634, "attrgrp": 473, "attrgrp0": 473, "attrgrp1": 473, "attribu": 608, "attribut": [20, 121, 206, 363, 473, 483, 492, 493, 502, 504, 515, 516, 521, 522, 526, 529, 534, 538, 540, 542, 547, 554, 557, 560, 577, 582, 591, 592, 594, 596, 609, 615, 617, 618, 620, 624, 630, 634, 635, 636, 637, 642, 646, 647, 648], "attributed": 579, "attributelist": [473, 634], "attributereferent": 634, "attrimpl": 634, "attrinfomap": 634, "attrkind": [576, 634], "attrlist": 634, "attrparsedattrimpl": 634, "attrparsedattrkind": 634, "attrparsedattrlist": 634, "attrparserstringswitch": 634, "attrpchread": 634, "attrpchwrit": 634, "attrrec": 635, "attrrecord": 635, "attrspelling": 634, "attrspellinglistindex": 634, "attrtemplateinstantiat": 634, "attrvisitor": 634, "atyp": 548, "audienc": [545, 653], "auditing": 626, "augment": [461, 466, 475], "augmentation_string": [461, 466], "augmentation_string_siz": 466, "augmented": [562, 609, 673, 684], "augmenting": 556, "august": 584, "auquel": 142, "auror": 615, "authenticat": 567, "author": [461, 478, 483, 485, 486, 487, 534, 538, 543, 551, 567, 573, 579, 580, 585, 591, 593, 608, 614, 625, 626], "authored": [534, 538], "authoring": 461, "authorit": 517, "authorized": 538, "auto": [464, 483, 499, 500, 518, 579, 583, 593, 609, 616, 625, 634, 635, 642, 644, 649, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676], "autoconf": [482, 538, 568], "autocrlf": 550, "autodetected": [481, 487, 492, 493, 499, 513], "autogenerated": 538, "autoinsert": 609, "autom": 637, "automat": [468, 483, 529, 634], "automated": [529, 538, 550, 608, 610, 614, 634], "automatic": [461, 469, 483, 486, 490, 547, 591, 616, 617, 646, 674, 675, 676], "automatically": [463, 466, 469, 476, 481, 483, 486, 491, 492, 505, 515, 530, 533, 538, 543, 547, 549, 550, 553, 565, 567, 571, 572, 573, 578, 579, 583, 585, 586, 593, 608, 609, 610, 611, 624, 625, 626, 627, 634, 636, 639, 642, 646, 648, 649, 652, 670, 672, 681, 682, 683], "automating": 634, "automaton": [483, 634], "autotool": 550, "autovectoriz": 645, "autr": [0, 1, 2, 3, 4, 5, 6, 7, 8], "auxiliary": [466, 634, 646], "auxiliarydat": 688, "av": 590, "avail": [64, 345, 407, 461, 465, 466, 470, 479, 481, 482, 483, 486, 490, 491, 492, 493, 498, 499, 505, 513, 516, 523, 528, 529, 530, 531, 534, 536, 538, 540, 543, 545, 550, 554, 558, 559, 560, 562, 565, 566, 567, 569, 570, 572, 573, 575, 579, 581, 593, 606, 607, 609, 613, 615, 617, 618, 619, 620, 621, 622, 625, 626, 628, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 643, 645, 646, 648, 649, 650, 654, 668, 670, 671, 672, 673, 675, 679, 681, 682, 683], "availab": 636, "availability": [465, 470, 512, 513, 529, 579, 611], "available_externally": [473, 579], "available_featur": [491, 641], "avalanch": 609, "avenu": 621, "averag": [475, 497, 513, 566, 672, 675, 683], "averaging": 581, "avl": 609, "avoid": [461, 464, 466, 469, 471, 472, 473, 477, 481, 482, 483, 487, 505, 522, 534, 538, 542, 546, 547, 548, 557, 559, 564, 569, 573, 575, 578, 579, 582, 583, 591, 607, 609, 611, 614, 616, 619, 622, 623, 625, 626, 628, 629, 630, 631, 632, 641, 642, 645, 646, 648, 674, 676, 685], "avoided": [513, 575, 609, 628], "avoiding": [483, 556, 564, 579, 581, 614, 616, 626, 641, 674, 685], "avr": 614, "avx": [579, 641, 645], "avx1": 641, "avx2": [579, 641], "avx512": [554, 579, 615], "avxvnni": 618, "awakening": 540, "awar": [469, 470, 481, 482, 483, 486, 487, 530, 531, 538, 548, 550, 579, 581, 593, 609, 611, 615, 623, 625, 630], "awareness": 538, "away": [474, 479, 486, 487, 531, 534, 538, 547, 573, 579, 582, 588, 607, 609, 611, 625, 626, 632, 648, 679], "awkward": [530, 548], "ax": [483, 542, 579, 637, 646], "axis": [626, 645], "axpy": 531, "ayal": 616, "azul": 623, "b": [461, 466, 473, 474, 478, 482, 483, 486, 487, 491, 495, 499, 513, 514, 515, 519, 523, 530, 534, 536, 537, 538, 540, 542, 545, 548, 550, 553, 554, 560, 564, 565, 575, 577, 578, 579, 590, 591, 592, 593, 604, 607, 609, 611, 613, 616, 625, 630, 637, 641, 642, 645, 646, 648, 669, 670, 674, 680, 681, 685], "b0000": 466, "b1": [575, 593, 636, 643, 645], "b128": [0, 2, 3, 4, 463], "b13e8756b13a00cf168300179061fb4b91fefbed": 581, "b16": [463, 465], "b16x2": [0, 4, 463], "b16x3": 463, "b16x4": 463, "b2": [575, 579, 593, 643, 645], "b256": 463, "b3": 575, "b32": [0, 2, 3, 4, 463, 465, 592], "b32x2": [0, 2, 3, 4], "b512": 463, "b64": [0, 2, 3, 4, 463, 465], "b64x2": [0, 2, 3, 4], "b96": 463, "b_ctor_bas": 487, "bach": 631, "back": [461, 466, 470, 477, 481, 483, 486, 495, 499, 523, 527, 534, 535, 538, 540, 545, 547, 548, 554, 559, 566, 568, 571, 572, 579, 581, 583, 593, 606, 607, 609, 611, 623, 624, 625, 626, 628, 630, 632, 634, 636, 641, 644, 652, 655, 670, 671, 672, 673, 674, 675, 676, 682, 683, 685], "backed": [566, 579, 622], "backedg": [474, 583, 607, 630, 672, 673, 683, 684], "backend": [461, 470, 475, 477, 488, 493, 498, 513, 516, 529, 531, 532, 540, 541, 545, 546, 550, 559, 560, 561, 562, 567, 569, 572, 574, 575, 578, 579, 585, 609, 614, 615, 622, 625, 628, 630, 636, 644, 687], "background": [482, 484, 586, 609, 611, 634, 650], "backing": [466, 565, 579, 593, 625], "backport": 571, "backporting": 623, "backslash": 581, "backtrac": [483, 676], "backtrace_symbol": 566, "backup": [565, 611], "backward": [461, 466, 473, 530, 535, 576, 601, 609, 626, 630, 643, 645], "bad": [477, 486, 487, 488, 553, 569, 575, 579, 591, 609, 619, 625, 626, 631, 652, 673, 676, 684], "badarchivememb": 609, "badfileformat": 609, "badly": [545, 609], "bag": 546, "bai": 613, "bail": [579, 649], "bailing": 655, "bailouton": 609, "bak": 593, "baked": [535, 557, 593], "balanc": [468, 470, 538, 622], "ball": 588, "bam": 486, "ban": 621, "bandwidth": 579, "bangoperator": 636, "bank": [464, 529, 555, 560, 561, 562], "bank_mask": [0, 1, 3, 4, 7, 8, 466], "bann": 609, "banning": 575, "bar": [481, 482, 483, 485, 486, 487, 491, 498, 500, 501, 513, 518, 525, 527, 530, 531, 534, 535, 538, 542, 543, 570, 578, 579, 588, 592, 593, 609, 611, 620, 625, 628, 630, 632, 636, 641, 643, 645, 646, 647, 652, 654, 670, 672, 681, 683], "bar_body": 593, "bar_in_b_cc": 475, "bar_map": 486, "baremetal": 570, "baremetalarm": 570, "barlist": 486, "barri": [470, 513, 570, 579, 626, 630], "barrier0": 579, "bart": 466, "bas": [21, 22, 56, 57, 122, 123, 147, 207, 208, 246, 247, 364, 365, 399, 400, 461, 465, 466, 469, 473, 480, 483, 485, 486, 491, 494, 497, 499, 517, 518, 527, 529, 530, 533, 538, 539, 542, 547, 548, 550, 553, 555, 557, 577, 578, 579, 583, 584, 589, 590, 593, 594, 596, 609, 610, 611, 616, 618, 619, 622, 623, 625, 626, 632, 635, 636, 637, 640, 643, 646, 648, 649, 652, 655, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "base0": 639, "base1": 639, "base2": [579, 639], "base_offset": 630, "baseclass": 636, "based": [461, 463, 465, 466, 468, 469, 473, 475, 477, 479, 481, 482, 484, 485, 487, 491, 492, 497, 499, 500, 501, 513, 515, 517, 518, 519, 530, 534, 535, 538, 539, 540, 546, 550, 553, 554, 557, 559, 564, 566, 568, 570, 571, 572, 574, 579, 580, 581, 583, 584, 585, 589, 590, 591, 592, 593, 596, 608, 611, 612, 613, 615, 616, 617, 618, 621, 622, 623, 625, 626, 627, 630, 631, 634, 635, 637, 641, 644, 645, 646, 647, 648, 649, 652, 654, 655, 656, 657, 671, 672, 673, 674, 676, 682, 683, 684, 685], "basedonaddress": 596, "basedonsegment": 596, "basedonsegmentaddress": 596, "basedonsegmentvalu": 596, "basedonself": 596, "basedontyp": 596, "basedonvalu": 596, "basefieldnam": 635, "baseinstrinfo": 634, "baselai": [655, 657], "baselin": [483, 626, 639], "basenam": [527, 595, 625], "basename_t": 491, "baseobject": 626, "baseopcod": [577, 646], "baserec": 635, "basereg": 483, "baseregisterinfo": 634, "basereloc": 522, "basety": 579, "basety1": 579, "basety2": 579, "basetyp": 579, "bash": [491, 539, 627], "bashful": 631, "basic": [466, 470, 474, 476, 482, 483, 486, 492, 495, 497, 499, 502, 505, 506, 515, 529, 530, 531, 534, 535, 537, 538, 540, 546, 547, 550, 552, 555, 557, 560, 564, 572, 575, 580, 583, 586, 590, 592, 593, 596, 605, 608, 610, 616, 620, 622, 625, 626, 627, 628, 630, 631, 636, 639, 645, 650, 655, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 684, 685, 686], "basic_": 636, "basic_block": 681, "basic_p": 636, "basic_r": 636, "basic_ss": 636, "basica": 648, "basicaliasanalys": [607, 648, 676], "basically": [475, 483, 486, 530, 543, 548, 564, 574, 576, 583, 607, 609, 625, 640, 669, 670, 671, 672, 673, 674, 680, 681, 682, 683, 684, 685], "basicblock": [486, 550, 590, 607, 614, 616, 648, 670, 671, 672, 673, 674, 675, 676, 683], "basicblocklisttyp": 609, "basicblockutil": 609, "basicirlayermaterializationun": 655, "basicread": 529, "basictyp": 579, "basicwrit": 529, "batch": 552, "battl": [517, 612], "baz": [482, 486, 487, 518, 527, 530, 609, 625, 636, 643, 645, 672, 683], "baz_in_c_cc": 475, "bazel": 632, "baziot": 590, "bb": [486, 506, 542, 555, 575, 579, 580, 585, 591, 592, 609, 625, 626, 646, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "bb0_1": 592, "bb0_2": 592, "bb0_26": 592, "bb0_28": 592, "bb0_29": 592, "bb0_30": 592, "bb0_4": 592, "bb0_5": 592, "bb1": [473, 560, 575, 579, 590, 625, 626], "bb10": 626, "bb2": [473, 560, 575, 579, 590, 625], "bb3": 579, "bb4": 560, "bb_0": 542, "bb_1": 542, "bbar": 634, "bbreferent": 585, "bc": [469, 473, 477, 478, 483, 488, 492, 496, 503, 514, 528, 538, 543, 550, 552, 565, 574, 592, 594, 609, 617, 641, 648], "bcanalyz": [473, 490, 620], "bcc": 646, "bcdtor": 618, "bcpl": 636, "bcplcomment": 636, "bcread": 498, "bcsymbolmap": 489, "bdce": 580, "be": [16, 19, 24, 40, 41, 42, 48, 49, 51, 52, 53, 54, 58, 60, 64, 65, 78, 87, 98, 100, 101, 114, 117, 124, 136, 137, 138, 142, 143, 144, 145, 148, 162, 173, 187, 201, 202, 209, 230, 231, 232, 238, 239, 240, 241, 242, 243, 244, 248, 250, 266, 277, 289, 303, 305, 310, 315, 316, 317, 326, 336, 338, 339, 340, 342, 345, 359, 367, 383, 384, 385, 391, 392, 393, 394, 395, 396, 397, 401, 403, 407, 408, 421, 432, 444, 446, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 495, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "bear": 487, "beating": 564, "beautiful": [668, 670, 673, 679, 681, 684], "becam": 461, "becaus": [461, 464, 466, 468, 469, 470, 472, 473, 475, 477, 479, 482, 483, 486, 487, 491, 495, 513, 514, 517, 530, 531, 534, 535, 537, 538, 540, 543, 544, 545, 546, 547, 548, 550, 552, 553, 557, 559, 562, 566, 569, 571, 573, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 589, 590, 591, 594, 596, 599, 601, 607, 608, 609, 611, 613, 614, 620, 623, 625, 626, 628, 631, 635, 636, 637, 640, 641, 642, 643, 645, 646, 647, 648, 652, 655, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "becom": [461, 466, 472, 482, 483, 486, 487, 504, 513, 516, 527, 530, 531, 534, 538, 545, 554, 556, 558, 560, 568, 573, 575, 579, 583, 607, 609, 611, 614, 623, 625, 626, 628, 630, 632, 636, 637, 641, 645, 646, 648, 649, 655, 669, 672, 674, 680, 683, 685], "becoming": [538, 548, 648], "been": [461, 466, 467, 470, 472, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 491, 497, 513, 528, 530, 531, 533, 534, 535, 536, 538, 540, 541, 542, 543, 545, 547, 548, 552, 555, 556, 557, 559, 560, 572, 579, 581, 584, 586, 591, 592, 593, 594, 596, 597, 600, 602, 604, 605, 607, 608, 609, 610, 611, 613, 614, 616, 618, 619, 620, 621, 622, 623, 625, 626, 628, 630, 631, 632, 633, 635, 636, 637, 642, 643, 646, 647, 648, 649, 650, 652, 654, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 686], "befor": [26, 27, 28, 29, 30, 33, 34, 35, 126, 127, 128, 129, 130, 211, 212, 213, 218, 219, 335, 369, 370, 371, 372, 373, 376, 377, 378, 461, 464, 465, 466, 469, 470, 472, 477, 480, 481, 482, 483, 485, 487, 489, 491, 493, 495, 500, 505, 509, 513, 515, 517, 525, 527, 528, 530, 531, 533, 534, 538, 539, 540, 541, 543, 544, 545, 547, 548, 550, 552, 553, 557, 558, 559, 560, 570, 571, 572, 573, 574, 575, 578, 579, 583, 584, 585, 588, 590, 591, 592, 593, 594, 597, 607, 608, 609, 614, 616, 618, 619, 620, 623, 625, 626, 627, 628, 629, 630, 634, 636, 640, 641, 642, 645, 646, 648, 649, 650, 651, 652, 654, 655, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "beforehand": 583, "began": [486, 593, 611], "begin": [461, 466, 469, 481, 486, 495, 513, 530, 538, 547, 550, 552, 560, 572, 579, 580, 584, 590, 595, 596, 597, 601, 609, 614, 625, 626, 634, 635, 636, 646, 651, 652, 654, 655, 672, 674, 675, 676, 680, 681, 682, 683, 684, 685], "beginassembly": 547, "beginn": [476, 533], "beginning": [461, 466, 469, 473, 483, 486, 487, 502, 513, 538, 540, 545, 547, 573, 579, 591, 592, 601, 620, 622, 625, 628, 631, 635, 636, 641, 649, 672, 676, 683], "behalf": [533, 538, 608], "behav": [461, 466, 469, 470, 478, 482, 499, 513, 516, 531, 534, 538, 540, 549, 579, 656], "behaved": [486, 544, 583], "behaving": 574, "behavior": [461, 466, 470, 476, 478, 482, 483, 484, 486, 487, 488, 491, 495, 502, 513, 530, 531, 534, 538, 540, 541, 543, 545, 547, 574, 575, 579, 581, 583, 593, 594, 607, 609, 618, 621, 622, 623, 626, 636, 643, 645, 646, 648, 669, 672, 674, 680, 683, 685], "behaviour": [472, 478, 530, 555, 560, 579, 585, 641, 645], "behind": [483, 486, 487, 537, 538, 574, 575, 576, 577, 579, 592, 609, 630, 644, 648, 654], "being": [48, 120, 205, 238, 362, 391, 461, 464, 465, 466, 469, 470, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 495, 497, 502, 503, 505, 513, 518, 523, 530, 531, 533, 534, 535, 538, 540, 541, 544, 546, 548, 550, 553, 558, 559, 568, 570, 572, 573, 574, 576, 578, 579, 581, 583, 584, 590, 591, 592, 593, 594, 597, 599, 601, 605, 607, 608, 609, 611, 614, 618, 621, 622, 623, 625, 626, 628, 630, 631, 632, 634, 636, 637, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 669, 670, 672, 673, 674, 676, 677, 681, 683, 684, 685, 686], "belevich": 531, "belief": 484, "believ": [484, 538, 574, 579, 593, 594, 609, 621, 671, 672, 673, 682, 683, 684], "believed": [461, 626], "bellow": 537, "belong": [530, 534, 537, 540, 542, 579, 591, 609, 622, 651, 674], "belonging": [466, 534, 609, 643], "below": [48, 54, 114, 142, 145, 201, 238, 239, 244, 303, 391, 392, 397, 460, 461, 462, 464, 465, 466, 468, 469, 470, 473, 475, 481, 482, 483, 485, 486, 487, 492, 495, 504, 506, 513, 518, 523, 527, 530, 531, 533, 534, 535, 538, 545, 550, 552, 558, 560, 566, 568, 569, 571, 572, 573, 578, 579, 583, 585, 590, 591, 592, 593, 594, 597, 602, 607, 608, 609, 610, 611, 613, 616, 619, 622, 623, 624, 625, 626, 628, 630, 632, 634, 636, 641, 643, 645, 646, 647, 648, 649, 650, 651, 652, 655, 669, 671, 672, 673, 674, 675, 676, 680, 682, 684, 685], "benchmark": [471, 481, 490, 531, 538, 549, 572, 609, 610, 617, 619, 625, 626, 640, 641, 645], "benchmarked": 505, "benchmarking": [550, 619, 641], "benchspec": 640, "bendersky": 531, "beneath": 627, "benef": [461, 469, 479, 548, 554, 569, 579, 581, 583, 607, 610, 614, 622, 625, 632, 655, 671, 675], "beneficial": [479, 534, 556, 562, 579, 632, 642, 645], "benefit": [461, 479, 486, 545, 547, 559, 579, 632, 656, 657], "benign": 609, "benjamin": 547, "bentry": 634, "berkeley": 523, "bernstein": 625, "besid": [530, 549, 579, 611, 621, 626, 641, 646, 673, 680, 684], "bespok": 547, "best": [469, 472, 479, 482, 483, 485, 486, 493, 505, 513, 538, 540, 543, 547, 553, 562, 569, 574, 575, 579, 583, 588, 607, 609, 616, 622, 625, 626, 627, 628, 630, 632, 644, 668, 669, 678, 680, 686], "bet": [461, 466, 470, 476, 483, 485, 486, 487, 489, 505, 513, 538, 540, 549, 554, 555, 560, 564, 566, 568, 569, 574, 575, 579, 580, 581, 583, 588, 589, 590, 591, 593, 607, 609, 611, 618, 625, 626, 635, 640, 645, 648, 649, 650, 654, 669, 672, 674, 677, 680, 683, 685, 686], "bettor": 593, "between": [461, 464, 466, 468, 469, 470, 472, 473, 482, 483, 486, 487, 500, 502, 504, 512, 513, 517, 518, 522, 530, 534, 535, 537, 538, 539, 540, 541, 543, 547, 550, 553, 554, 555, 560, 570, 572, 575, 577, 578, 579, 580, 581, 583, 584, 585, 587, 590, 591, 592, 593, 595, 597, 600, 604, 607, 608, 611, 614, 618, 619, 620, 622, 625, 626, 628, 630, 631, 632, 634, 636, 639, 641, 642, 644, 646, 649, 651, 652, 668, 671, 672, 679, 682, 683], "bewar": [547, 588], "beyl": [614, 623], "beylsdistinguish": 614, "beyond": [466, 482, 483, 529, 540, 545, 548, 558, 560, 579, 586, 587, 590, 593, 609, 623, 626, 627, 637], "bf": 613, "bf16": [529, 579], "bf16x2": 8, "bfd": [546, 565], "bfdnam": 515, "bff": 609, "bfi": 579, "bfloat": [473, 579], "bfoo": 634, "bh": 637, "bi": 471, "bicubic": 613, "bidirectional": 609, "big": [471, 479, 483, 486, 493, 538, 545, 559, 568, 579, 609, 613, 619, 641, 644, 646, 651, 670, 673, 674, 681, 684, 685], "bigblock": 493, "bigg": [461, 486, 534, 583, 652], "biggest": [483, 578], "bigmip": 515, "bigmsf": 601, "bikeshed": 573, "bilinear": 613, "bin": [468, 488, 499, 530, 536, 539, 546, 550, 552, 553, 560, 565, 568, 569, 570, 571, 610, 611, 619, 637, 639, 641, 646, 647, 650], "binar": [479, 480, 481, 490, 498, 499, 523, 531, 533, 538, 539, 542, 550, 565, 569, 570, 571, 572, 581, 589, 592, 619, 622, 625, 649, 651, 677, 686], "binary": [466, 470, 473, 475, 477, 479, 480, 481, 483, 489, 495, 496, 499, 503, 506, 507, 510, 511, 516, 517, 518, 519, 523, 527, 528, 530, 531, 532, 533, 535, 538, 539, 542, 546, 547, 550, 552, 565, 566, 570, 571, 581, 584, 591, 592, 597, 600, 604, 606, 607, 609, 619, 622, 625, 626, 634, 646, 650, 651, 670, 671, 672, 674, 675, 676, 677, 678, 679, 681, 682, 683, 685, 686, 688], "binary128": 579, "binary16": 579, "binary32": 579, "binary64": 579, "binary_nam": 527, "binary_precedent": [684, 685], "binaryexprast": [669, 670, 671, 672, 673, 674, 675, 676], "binaryoperator": [486, 609], "binaryprecedent": [673, 674, 675, 676], "bind": [486, 498, 516, 560, 579, 593, 636, 646, 652, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "bindex": 646, "binding": [481, 515, 516, 543, 579, 617, 632, 636, 646, 674, 675, 676, 682, 683, 684, 685], "binfmt": 550, "binfmt_misc": 550, "bininteg": 636, "binloc": 676, "binop": [465, 579, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "binop_precedent": [680, 681, 682, 683, 684, 685], "binopprecedent": [669, 670, 671, 672, 673, 674, 675, 676], "binopprototyp": [684, 685], "binoprh": [669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "binoprr": 636, "binoprr_rf": 636, "binpath": 536, "binutil": [481, 532, 539, 550, 565, 567, 571], "bisect": [549, 550, 609, 611, 617], "bisect_script": 611, "bisecting": 549, "bison": 640, "bit": [18, 21, 22, 24, 25, 29, 30, 32, 41, 42, 43, 45, 48, 49, 50, 54, 56, 57, 60, 64, 65, 87, 99, 100, 114, 117, 119, 122, 123, 124, 125, 129, 130, 137, 138, 142, 143, 145, 147, 173, 201, 204, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 221, 226, 227, 228, 229, 231, 232, 233, 235, 238, 239, 240, 244, 250, 277, 303, 304, 309, 314, 336, 337, 345, 353, 361, 364, 365, 367, 368, 372, 373, 375, 384, 385, 386, 388, 391, 392, 393, 397, 399, 400, 403, 407, 408, 432, 445, 446, 460, 463, 464, 465, 468, 470, 472, 475, 481, 482, 483, 487, 497, 505, 531, 532, 534, 535, 538, 540, 541, 542, 543, 546, 547, 548, 550, 552, 554, 555, 556, 559, 564, 567, 573, 576, 578, 580, 581, 583, 585, 589, 591, 592, 593, 596, 597, 601, 602, 604, 618, 619, 622, 625, 628, 630, 632, 634, 635, 636, 637, 643, 646, 648, 651, 652, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "bitbucket": [611, 613], "bitcast": [469, 472, 487, 534, 540, 547, 554, 555, 591, 607, 643, 646], "bitcastability": 591, "bitcasted": [579, 591], "bitcasting": [548, 579], "bitcod": [477, 479, 483, 488, 490, 492, 495, 496, 498, 502, 503, 506, 508, 528, 538, 541, 550, 552, 565, 574, 579, 591, 592, 607, 609, 617, 639, 648], "bitcoderead": 541, "bitcodewrit": [541, 609], "bitconverted": 472, "bitfield": [470, 596, 597, 601, 651], "bitless": 604, "bitmap": 473, "bitmask": [464, 579, 596, 604], "bitmask_perm": 464, "bitness": 604, "bitpacked": 641, "bitpattern": 579, "bitrecty": 635, "bits_0_7": 555, "bits_16_23": 555, "bits_24_31": 555, "bits_8_15": 555, "bitset": [581, 643, 646, 652], "bitsetcas": 652, "bitwidth": [473, 555, 579, 591, 630], "bitwis": [465, 483, 607, 636], "bjark": 531, "bjarn": 609, "bl": [487, 542, 637], "black": [560, 649], "blah": [486, 530, 581], "blam": [608, 611], "blaming": 484, "blank": [486, 487, 495, 501, 518, 538, 586, 608, 627, 636, 669, 677, 678, 679, 680, 686], "blanket": 593, "blarg": 609, "blat": 674, "blatantly": 623, "blatent": 685, "bleed": 482, "bleeding": 549, "blend": 483, "blgp": 8, "blind": 483, "blissfully": [530, 531], "bloat": [535, 566], "bloating": 486, "blob": [473, 525, 579, 611, 619, 620], "block": [461, 466, 469, 475, 476, 478, 482, 483, 493, 497, 499, 502, 504, 505, 506, 516, 517, 518, 534, 537, 538, 540, 545, 547, 555, 556, 557, 560, 564, 572, 575, 578, 580, 581, 583, 586, 590, 591, 592, 599, 600, 605, 614, 616, 617, 619, 620, 623, 624, 625, 628, 634, 643, 645, 646, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "block_begin": [681, 682, 683, 684, 685], "block_parent": [683, 684, 685], "blockaddress": [555, 579], "blockcodesiz": 620, "blockdim": 592, "blocker": 572, "blockextractor": 560, "blockfrequencyinfo": [474, 617], "blockid": [473, 620], "blockidx": 592, "blockinfo_block": 620, "blocking": [485, 572, 619], "blocklen": 473, "blocklen_32": 473, "blockmapaddr": 601, "blocknam": 473, "blockscalartrait": 652, "blocksiz": [592, 601], "blocksizex": 592, "blocksizey": 592, "blog": [611, 626], "blogspot": 626, "bloom": 483, "blow": 581, "blr": 542, "blunt": 650, "blx": 542, "bmi2": 626, "bnextind": 579, "bnf": 466, "bo": 486, "board": [568, 571, 621, 623], "boat": [486, 614], "bob": [634, 635, 652], "bod": [473, 537, 540, 591, 593, 609, 648, 650, 669, 670, 671, 680, 681, 682], "body": [461, 466, 473, 477, 486, 487, 530, 534, 538, 540, 575, 579, 581, 583, 585, 591, 607, 609, 614, 624, 626, 630, 637, 646, 648, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "body_val": 685, "bodyexpr": [672, 673, 674, 675, 676, 685], "bodyitem": 636, "bodysequent": 651, "bodyval": [674, 675, 676], "boehm": 547, "bogn": 563, "bogus": [648, 675], "boil": [472, 530, 538, 573, 609, 611, 672, 673, 683, 684], "boilerplat": [530, 547, 573, 647, 682], "bold": [586, 627], "bon": [628, 646, 654], "bonair": 466, "bondhugul": 613, "book": [486, 532, 533, 553, 580, 609, 648], "bookkeeping": [607, 609], "bool": [469, 470, 479, 481, 483, 486, 513, 530, 534, 557, 558, 573, 579, 581, 591, 594, 609, 620, 625, 635, 646, 647, 648, 649, 650, 652, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "boolean": [466, 473, 481, 483, 486, 492, 534, 535, 579, 604, 607, 609, 634, 635, 636, 641, 646, 672, 683], "boolean128": 604, "boolean16": 604, "boolean32": 604, "boolean64": 604, "boolean8": 604, "boolordefault": 530, "booltmp": [670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "boost": 471, "bootstrap": [479, 550], "bootstrap_": [468, 479, 539], "bootstrapping": 468, "boring": [487, 648], "boringssl": 581, "bork": 530, "borrow": 609, "borrowed": 579, "bot": [538, 549, 550, 611], "both": [16, 117, 202, 326, 359, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 475, 477, 479, 481, 482, 483, 484, 485, 486, 487, 491, 495, 499, 508, 511, 513, 514, 517, 518, 530, 531, 532, 535, 537, 538, 540, 543, 545, 546, 547, 548, 554, 555, 559, 562, 564, 566, 570, 571, 572, 573, 575, 579, 581, 583, 584, 589, 590, 591, 593, 597, 601, 602, 606, 607, 609, 614, 616, 621, 622, 623, 624, 625, 626, 628, 630, 632, 634, 635, 636, 637, 641, 642, 645, 646, 648, 649, 650, 652, 654, 655, 669, 670, 671, 672, 674, 676, 677, 678, 680, 681, 682, 683, 685, 686], "botsalgn": 613, "botsspar": 613, "bottom": [474, 493, 530, 557, 559, 579, 580, 583, 607, 608, 631, 636, 645, 646, 648, 655, 683], "bou_fals": 530, "bou_tru": 530, "bou_unset": 530, "bougach": [563, 623], "bound": [461, 465, 538, 559, 578, 579, 585, 592, 609, 629, 630, 636, 646, 652], "bound_ctrl": [0, 1, 3, 4, 7, 8, 466], "boundar": [470, 472, 480, 483, 534, 579, 593, 626, 671], "boundary": [472, 473, 483, 566, 579, 583, 607, 609], "bounded": [461, 513], "bourn": [530, 550], "box": [483, 538, 560, 608, 625, 626, 649], "bp": [466, 628, 637], "bpf": [483, 550, 581, 614], "bpf_add": 483, "bpf_alu": 483, "bpf_alu64": 483, "bpf_and": 483, "bpf_arsh": 483, "bpf_b": 483, "bpf_call": 483, "bpf_class": 483, "bpf_div": 483, "bpf_dw": 483, "bpf_end": 483, "bpf_ex": 483, "bpf_h": 483, "bpf_imm": 483, "bpf_ja": 483, "bpf_jeq": 483, "bpf_jge": 483, "bpf_jgt": 483, "bpf_jmp": 483, "bpf_jne": 483, "bpf_jset": 483, "bpf_jsge": 483, "bpf_jsgt": 483, "bpf_k": 483, "bpf_ld": 483, "bpf_ldx": 483, "bpf_lsh": 483, "bpf_mem": 483, "bpf_mod": 483, "bpf_mov": 483, "bpf_mul": 483, "bpf_neg": 483, "bpf_op": 483, "bpf_or": 483, "bpf_rsh": 483, "bpf_st": 483, "bpf_stx": 483, "bpf_sub": 483, "bpf_w": 483, "bpf_x": 483, "bpf_xadd": 483, "bpf_xor": 483, "bpl": 637, "bptr": 579, "br": [473, 474, 534, 540, 543, 544, 560, 583, 590, 592, 625, 642, 672, 673, 674, 675, 676, 683, 685], "bra": 592, "brac": [487, 540, 579, 609, 636, 641], "bracket": [487, 531, 538, 579, 585, 625, 636, 652], "bracketed": 540, "bradbury": 614, "bradburyconcern": 614, "bradburytransit": 614, "brain": [473, 486, 579], "branch": [49, 143, 240, 393, 461, 465, 480, 481, 483, 486, 499, 505, 513, 516, 532, 534, 535, 538, 539, 540, 543, 544, 545, 550, 553, 555, 575, 579, 583, 585, 594, 608, 609, 614, 616, 617, 630, 632, 643, 672, 673, 674, 675, 676, 683, 684, 685], "branch_weight": [474, 475], "branched": [480, 538, 611], "branchfold": [575, 646], "branchfolding": 646, "branchfunnel": 579, "branching": [474, 572, 579, 583, 646], "branchless": 626, "branchprobability": 475, "branchprobabilityinfo": 641, "brand": [647, 648], "brav": [669, 680], "breadth": [493, 613, 678, 679], "breagen": 613, "break": [472, 475, 486, 530, 538, 540, 541, 547, 567, 572, 575, 576, 579, 583, 606, 609, 612, 630, 632, 636, 645, 646, 648, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 683, 684], "breakag": [538, 611, 632], "breakcriticaledg": 648, "breakdown": 476, "breaking": [461, 481, 483, 538, 542, 583, 587, 625, 676], "breakpoint": [466, 477, 536, 575, 579, 676, 678], "breg": 461, "brendan": 650, "brevity": [472, 592, 593], "brewed": 609, "brian": 616, "brick": 591, "brief": [469, 481, 482, 486, 517, 530, 550, 574, 591], "briefly": [535, 569, 591, 648], "brig": 466, "bring": [545, 547, 561, 581, 620, 630, 654, 677, 686], "broad": [530, 538, 547, 609, 612, 626, 671, 679, 682], "broadcast": [464, 483, 579, 580], "broadcasted": 464, "broadly": 559, "brok": 579, "broken": [466, 472, 485, 491, 515, 526, 538, 543, 553, 567, 579, 609, 611, 614, 626, 630, 632, 636, 641, 646, 648, 653], "brought": [591, 611, 623], "brows": [546, 569, 608, 650], "browsabl": 481, "browsing": [481, 611, 670, 681], "brtarget": 646, "brtarget8": 646, "bruc": 609, "bruno": 614, "bsd": [495, 514, 538, 550], "bsnork": 634, "bss": [466, 493, 514, 523, 525, 542], "bswap": 541, "bswap32r_bswap64r_movsx64rr32": 505, "bt": 536, "bt331": 613, "btver2": 513, "bucket": [512, 517, 521, 522, 599, 602, 604, 609, 622, 625], "bucket_count": 625, "budget": 466, "buf": 620, "buf_data_format_10_10_10_2": 464, "buf_data_format_10_11_11": 464, "buf_data_format_11_11_10": 464, "buf_data_format_16": 464, "buf_data_format_16_16": 464, "buf_data_format_16_16_16_16": 464, "buf_data_format_2_10_10_10": 464, "buf_data_format_32": 464, "buf_data_format_32_32": 464, "buf_data_format_32_32_32": 464, "buf_data_format_32_32_32_32": 464, "buf_data_format_8": 464, "buf_data_format_8_8": 464, "buf_data_format_8_8_8_8": 464, "buf_data_format_invalid": 464, "buf_data_format_reserved_15": 464, "buf_fmt_10_10_10_2_sint": 464, "buf_fmt_10_10_10_2_snorm": 464, "buf_fmt_10_10_10_2_sscaled": 464, "buf_fmt_10_10_10_2_uint": 464, "buf_fmt_10_10_10_2_unorm": 464, "buf_fmt_10_10_10_2_uscaled": 464, "buf_fmt_10_11_11_float": 464, "buf_fmt_10_11_11_sint": 464, "buf_fmt_10_11_11_snorm": 464, "buf_fmt_10_11_11_sscaled": 464, "buf_fmt_10_11_11_uint": 464, "buf_fmt_10_11_11_unorm": 464, "buf_fmt_10_11_11_uscaled": 464, "buf_fmt_11_11_10_float": 464, "buf_fmt_11_11_10_sint": 464, "buf_fmt_11_11_10_snorm": 464, "buf_fmt_11_11_10_sscaled": 464, "buf_fmt_11_11_10_uint": 464, "buf_fmt_11_11_10_unorm": 464, "buf_fmt_11_11_10_uscaled": 464, "buf_fmt_16_16_16_16_float": 464, "buf_fmt_16_16_16_16_sint": 464, "buf_fmt_16_16_16_16_snorm": 464, "buf_fmt_16_16_16_16_sscaled": 464, "buf_fmt_16_16_16_16_uint": 464, "buf_fmt_16_16_16_16_unorm": 464, "buf_fmt_16_16_16_16_uscaled": 464, "buf_fmt_16_16_float": 464, "buf_fmt_16_16_sint": 464, "buf_fmt_16_16_snorm": 464, "buf_fmt_16_16_sscaled": 464, "buf_fmt_16_16_uint": 464, "buf_fmt_16_16_unorm": 464, "buf_fmt_16_16_uscaled": 464, "buf_fmt_16_float": 464, "buf_fmt_16_sint": 464, "buf_fmt_16_snorm": 464, "buf_fmt_16_sscaled": 464, "buf_fmt_16_uint": 464, "buf_fmt_16_unorm": 464, "buf_fmt_16_uscaled": 464, "buf_fmt_2_10_10_10_sint": 464, "buf_fmt_2_10_10_10_snorm": 464, "buf_fmt_2_10_10_10_sscaled": 464, "buf_fmt_2_10_10_10_uint": 464, "buf_fmt_2_10_10_10_unorm": 464, "buf_fmt_2_10_10_10_uscaled": 464, "buf_fmt_32_32_32_32_float": 464, "buf_fmt_32_32_32_32_sint": 464, "buf_fmt_32_32_32_32_uint": 464, "buf_fmt_32_32_32_float": 464, "buf_fmt_32_32_32_sint": 464, "buf_fmt_32_32_32_uint": 464, "buf_fmt_32_32_float": 464, "buf_fmt_32_32_sint": 464, "buf_fmt_32_32_uint": 464, "buf_fmt_32_float": 464, "buf_fmt_32_sint": 464, "buf_fmt_32_uint": 464, "buf_fmt_8_8_8_8_sint": 464, "buf_fmt_8_8_8_8_snorm": 464, "buf_fmt_8_8_8_8_sscaled": 464, "buf_fmt_8_8_8_8_uint": 464, "buf_fmt_8_8_8_8_unorm": 464, "buf_fmt_8_8_8_8_uscaled": 464, "buf_fmt_8_8_sint": 464, "buf_fmt_8_8_snorm": 464, "buf_fmt_8_8_sscaled": 464, "buf_fmt_8_8_uint": 464, "buf_fmt_8_8_unorm": 464, "buf_fmt_8_8_uscaled": 464, "buf_fmt_8_sint": 464, "buf_fmt_8_snorm": 464, "buf_fmt_8_sscaled": 464, "buf_fmt_8_uint": 464, "buf_fmt_8_unorm": 464, "buf_fmt_8_uscaled": 464, "buf_fmt_invalid": 464, "buf_num_format_float": 464, "buf_num_format_reserved_6": 464, "buf_num_format_sint": 464, "buf_num_format_snorm": 464, "buf_num_format_snorm_ogl": 464, "buf_num_format_sscaled": 464, "buf_num_format_uint": 464, "buf_num_format_unorm": 464, "buf_num_format_uscaled": 464, "buff": [22, 36, 37, 38, 39, 40, 62, 63, 123, 132, 133, 134, 135, 136, 151, 152, 208, 214, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 252, 253, 344, 365, 379, 380, 381, 382, 383, 405, 406, 480, 505, 513, 534, 540, 579, 582, 597, 602, 604, 609, 625, 634, 651, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "buffer": [87, 173, 277, 432, 579, 609, 649, 651], "buffer_atomic_add": [0, 2, 3, 4], "buffer_atomic_add_f32": 8, "buffer_atomic_add_x2": [0, 2, 3, 4], "buffer_atomic_and": [0, 2, 3, 4], "buffer_atomic_and_x2": [0, 2, 3, 4], "buffer_atomic_cmpswap": [0, 2, 3, 4], "buffer_atomic_cmpswap_x2": [0, 2, 3, 4], "buffer_atomic_dec": [0, 2, 3, 4], "buffer_atomic_dec_x2": [0, 2, 3, 4], "buffer_atomic_fcmpswap": [0, 2], "buffer_atomic_fcmpswap_x2": [0, 2], "buffer_atomic_fmax": [0, 2], "buffer_atomic_fmax_x2": [0, 2], "buffer_atomic_fmin": [0, 2], "buffer_atomic_fmin_x2": [0, 2], "buffer_atomic_inc": [0, 2, 3, 4, 466], "buffer_atomic_inc_x2": [0, 2, 3, 4], "buffer_atomic_or": [0, 2, 3, 4], "buffer_atomic_or_x2": [0, 2, 3, 4], "buffer_atomic_pk_add_f16": 8, "buffer_atomic_smax": [0, 2, 3, 4], "buffer_atomic_smax_x2": [0, 2, 3, 4], "buffer_atomic_smin": [0, 2, 3, 4], "buffer_atomic_smin_x2": [0, 2, 3, 4], "buffer_atomic_sub": [0, 2, 3, 4], "buffer_atomic_sub_x2": [0, 2, 3, 4], "buffer_atomic_swap": [0, 2, 3, 4], "buffer_atomic_swap_x2": [0, 2, 3, 4], "buffer_atomic_umax": [0, 2, 3, 4], "buffer_atomic_umax_x2": [0, 2, 3, 4], "buffer_atomic_umin": [0, 2, 3, 4], "buffer_atomic_umin_x2": [0, 2, 3, 4], "buffer_atomic_xor": [0, 2, 3, 4], "buffer_atomic_xor_x2": [0, 2, 3, 4], "buffer_gl": 466, "buffer_gl0_inv": [0, 466], "buffer_gl1_inv": [0, 466], "buffer_load": 466, "buffer_load_dword": [0, 2, 3, 4, 466], "buffer_load_dwordx2": [0, 2, 3, 4], "buffer_load_dwordx3": [0, 2, 3, 4], "buffer_load_dwordx4": [0, 2, 3, 4], "buffer_load_format_d16_hi_x": 4, "buffer_load_format_d16_x": [0, 3, 4], "buffer_load_format_d16_xy": [0, 3, 4], "buffer_load_format_d16_xyz": [0, 3, 4], "buffer_load_format_d16_xyzw": [0, 3, 4], "buffer_load_format_x": [0, 2, 3, 4], "buffer_load_format_xy": [0, 2, 3, 4], "buffer_load_format_xyz": [0, 2, 3, 4], "buffer_load_format_xyzw": [0, 2, 3, 4], "buffer_load_sbyt": [0, 2, 3, 4], "buffer_load_sbyte_d16": [0, 4], "buffer_load_sbyte_d16_h": [0, 4], "buffer_load_short_d16": [0, 4], "buffer_load_short_d16_h": [0, 4], "buffer_load_sshort": [0, 2, 3, 4], "buffer_load_ubyt": [0, 2, 3, 4], "buffer_load_ubyte_d16": [0, 4], "buffer_load_ubyte_d16_h": [0, 4], "buffer_load_ushort": [0, 2, 3, 4], "buffer_siz": 651, "buffer_store_byt": [0, 2, 3, 4], "buffer_store_byte_d16_h": [0, 4], "buffer_store_dword": [0, 2, 3, 4], "buffer_store_dwordx2": [0, 2, 3, 4], "buffer_store_dwordx3": [0, 2, 3, 4], "buffer_store_dwordx4": [0, 2, 3, 4, 463, 466], "buffer_store_format_d16_hi_x": 4, "buffer_store_format_d16_x": [0, 3, 4], "buffer_store_format_d16_xy": [0, 3, 4], "buffer_store_format_d16_xyz": [0, 3, 4], "buffer_store_format_d16_xyzw": [0, 3, 4], "buffer_store_format_x": [0, 2, 3, 4], "buffer_store_format_xy": [0, 2, 3, 4, 466], "buffer_store_format_xyz": [0, 2, 3, 4], "buffer_store_format_xyzw": [0, 2, 3, 4], "buffer_store_lds_dword": [3, 4], "buffer_store_short": [0, 2, 3, 4], "buffer_store_short_d16_h": [0, 4], "buffer_wbinvl1": [2, 3, 4, 466], "buffer_wbinvl1_vol": [2, 3, 4, 466], "buffered": 513, "bug": [465, 466, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 506, 513, 536, 538, 545, 549, 550, 553, 560, 566, 571, 572, 579, 580, 581, 585, 589, 591, 607, 608, 609, 611, 612, 614, 617, 618, 629, 637, 641, 670, 674, 677, 681, 685, 686], "buggy": 574, "buggy_cod": 566, "bugpoint": [490, 506, 538, 549, 550, 574, 594, 617, 648], "bugzill": [476, 538, 546, 549, 572, 581, 611, 619, 623, 630, 641], "buid": 534, "build": [467, 469, 473, 479, 481, 482, 483, 485, 486, 489, 491, 492, 495, 498, 499, 509, 515, 528, 529, 530, 531, 533, 536, 537, 538, 540, 543, 547, 549, 550, 552, 553, 560, 566, 571, 576, 579, 582, 593, 594, 597, 606, 607, 609, 610, 611, 615, 616, 618, 619, 622, 625, 626, 632, 635, 636, 637, 639, 640, 641, 643, 646, 650, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "build_add": [681, 682, 683, 684, 685], "build_alloc": 685, "build_arch": 610, "build_br": [683, 684, 685], "build_call": [681, 682, 683, 684, 685], "build_cond_br": [683, 684, 685], "build_config": 552, "build_d": 611, "build_docker_imag": 539, "build_fadd": 681, "build_fcmp": [681, 682, 683, 684, 685], "build_fmul": 681, "build_fsub": 681, "build_load": 685, "build_mod": 552, "build_mul": [681, 682, 683, 684, 685], "build_ph": [683, 684, 685], "build_ret": [681, 682, 683, 684, 685], "build_shared_lib": [479, 481], "build_stor": 685, "build_sub": [681, 682, 683, 684, 685], "build_uitofp": [681, 682, 683, 684, 685], "buildattribut": 570, "buildbot": [485, 491, 538, 546, 549, 572, 611, 612, 632, 641], "buildd": 567, "builder": [567, 612], "builder_at": 685, "building": [468, 482, 483, 486, 529, 533, 534, 537, 538, 547, 552, 553, 565, 566, 579, 581, 590, 593, 616, 634, 635, 636, 637, 639, 640, 641, 644, 649, 672, 673, 674, 675, 676, 677, 678, 683, 684, 685, 686], "buildm": 483, "buildmast": 567, "buildmod": 641, "buildmodul": 654, "buildnumb": 597, "built": [468, 473, 479, 481, 498, 499, 501, 517, 527, 530, 533, 538, 539, 540, 545, 546, 548, 550, 552, 553, 559, 564, 565, 567, 569, 570, 571, 573, 579, 580, 581, 590, 593, 597, 604, 605, 607, 609, 610, 611, 612, 616, 622, 625, 626, 634, 635, 637, 640, 641, 646, 650, 651, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "builtin": [470, 473, 491, 529, 579, 592, 609, 611, 615, 618, 644, 648, 673, 674, 675, 676, 680, 684, 685], "bulk": [483, 538, 589, 609, 674, 685], "bulky": 466, "bullet": 573, "bump": [547, 572, 609, 624], "bunch": [468, 482, 543, 609, 640, 671, 673, 679, 682, 684], "bundl": [466, 489, 504, 534, 585, 630, 649], "bundled": 483, "bundling": 483, "bunzip2": 550, "bur": 580, "burden": [538, 579, 590, 626, 632], "burg": 580, "burgess": 590, "burk": 613, "burning": 568, "burr": 493, "busiest": 608, "business": 623, "busy": 538, "but": [29, 30, 60, 120, 129, 130, 147, 205, 218, 219, 250, 362, 372, 373, 403, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 493, 497, 498, 499, 501, 504, 505, 508, 512, 513, 515, 516, 517, 518, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 564, 565, 568, 569, 571, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 601, 602, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618, 619, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "button": [583, 608], "buy": [568, 623], "bvalu": 634, "bw": 542, "bwav": 613, "bwaves_": 613, "bwaves_r": 613, "bx": 637, "by": [13, 16, 23, 26, 27, 28, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 54, 63, 97, 99, 117, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 152, 186, 202, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 227, 230, 231, 232, 233, 234, 235, 238, 240, 244, 253, 288, 304, 309, 314, 323, 326, 335, 336, 337, 352, 353, 359, 366, 369, 370, 371, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 393, 397, 443, 445, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 522, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 601, 602, 604, 605, 606, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687], "by_valu": 466, "byarg": 579, "byp": 579, "bypass": [464, 466], "bypassed": 626, "bypassing": 531, "byproduct": 559, "byref": [473, 579, 618], "byt": [55, 56, 57, 146, 147, 245, 246, 247, 341, 398, 399, 400, 461, 464, 465, 466, 469, 470, 472, 473, 483, 489, 497, 504, 512, 513, 516, 521, 522, 525, 534, 535, 541, 542, 548, 555, 559, 566, 579, 581, 585, 589, 595, 596, 597, 599, 600, 601, 602, 604, 605, 609, 620, 622, 624, 625, 628, 630, 636, 643, 646, 651, 680, 681, 682, 683, 684, 685], "byte_0": [464, 466], "byte_1": [464, 466], "byte_2": [464, 466], "byte_3": 464, "bytearray": 579, "bytecod": [473, 480], "byteswap": 541, "byval": [473, 483, 579], "byvalu": 466, "bz2": 550, "bzip2": 550, "bzoo": 634, "c1": [466, 583, 636, 643], "c11": [470, 531, 597, 600, 625], "c11bytesiz": [597, 600], "c11lineinfo": 600, "c11siz": 600, "c13": [517, 597, 600], "c13bytesiz": [597, 600], "c13lineinfo": 600, "c13siz": 600, "c17": 612, "c1_1": 518, "c1_2": 518, "c1_n": 518, "c1_u_": 518, "c1_u_1": 518, "c1x": 579, "c2": [466, 583, 636, 643, 680, 681, 682, 683, 684, 685], "c2_1": 518, "c2_2": 518, "c2_n": 518, "c2_u_": 518, "c2_u_2": 518, "c2_v_1": 518, "c2_v_2": 518, "c2_v_i": 518, "c2_v_t": 518, "c3": 583, "c4": 583, "c5": 513, "c5y977rlqpw": 485, "c89": 486, "c9": 535, "c99": [579, 618], "c_ctor_bas": 487, "c_str": [530, 592, 609, 668, 669, 670, 671, 672, 673, 674, 675, 676], "cach": [464, 466, 468, 470, 479, 482, 483, 489, 505, 513, 568, 579, 584, 609, 622, 625, 626, 628, 639, 648, 676], "cached": [481, 482, 584, 590, 593], "cachefil": 639, "caching": [466, 469, 482, 556, 579, 590, 607], "cactubssn": 613, "cactubssn_r": 613, "caf": 588, "caicos": 466, "calcul": [142, 461, 466, 469, 474, 483, 548, 579, 625], "calculat": [466, 469, 475, 483, 490, 540, 555, 579, 607, 636, 641, 646, 672, 683], "calculated": [461, 499, 513, 579, 580, 609, 625, 648], "calculating": [474, 579, 648], "calcvalu": 636, "call": [468, 470, 472, 475, 477, 480, 482, 487, 491, 493, 497, 518, 527, 530, 531, 532, 534, 536, 540, 541, 544, 545, 547, 550, 555, 559, 561, 575, 576, 580, 581, 582, 583, 584, 585, 587, 590, 591, 592, 593, 594, 602, 606, 612, 616, 623, 624, 625, 628, 629, 630, 631, 635, 636, 641, 643, 646, 648, 649, 650, 651, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "call2": 487, "call32m": 636, "call32r": 636, "call64pcrel32": 585, "call_branch_weight": 475, "call_convent": 466, "call_site_num": 540, "callabl": [486, 579, 592, 593, 657, 670, 681], "callahan": 616, "callback": [469, 483, 530, 534, 547, 581, 609, 628, 646, 654, 656], "callbackvh": 609, "callbas": 609, "callbr": 609, "callcount": 609, "calle": [461, 472, 483, 531, 534, 543, 581, 591, 607, 626, 628, 630, 636, 643, 646, 648, 669, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "called": [461, 466, 468, 469, 470, 472, 474, 475, 477, 479, 482, 483, 499, 506, 515, 530, 531, 534, 535, 537, 539, 540, 543, 547, 549, 550, 560, 569, 578, 579, 581, 583, 584, 589, 590, 591, 592, 593, 596, 602, 607, 608, 609, 610, 611, 622, 624, 625, 626, 630, 631, 635, 636, 640, 646, 648, 652, 654, 655, 656, 668, 669, 671, 675, 676, 679, 680, 682], "calledcount": 477, "callee_ctxt": 534, "calleef": [670, 671, 672, 673, 674, 675, 676], "caller": [579, 591, 609, 626, 648, 673, 684], "caller_context": 534, "caller_pc": 581, "callexprast": [669, 670, 671, 672, 673, 674, 675, 676], "callgraph": [521, 522], "callgraphscc": [594, 648], "callgraphsccpass": 594, "calling": [466, 470, 473, 481, 482, 486, 529, 530, 532, 534, 540, 545, 556, 584, 587, 591, 592, 593, 594, 602, 609, 618, 625, 628, 630, 634, 648, 649, 652, 655, 668, 669, 670, 671, 672, 676, 680, 681, 682, 683], "callingconv": [473, 529, 646], "callinst": 609, "calllowering": [556, 561], "callloweringinfo": 650, "callon": 609, "callpcrel32": 636, "callq": [624, 626, 628, 630], "callseq_end": 630, "callseq_start": 630, "callsit": [475, 579, 585, 626, 628, 630], "callthroughmgr": 593, "calltmp": [670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "calltmp1": [670, 672, 681, 683], "calltmp2": [671, 682], "calltmp6": [674, 685], "calltwo": 609, "calm": [674, 685], "cam": [468, 514, 540, 588, 626, 672, 677, 683, 686], "cam4_": 613, "cam4_r": 613, "camel": [486, 614], "camelback": 614, "camelcas": 614, "caml": [679, 680], "camlp4": [679, 680], "camlp4of": [680, 681, 682, 683, 684, 685], "can": [461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 511, 513, 515, 516, 517, 518, 520, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 546, 547, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 599, 601, 602, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 625, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "canadian": 550, "canal": 121, "canar": 566, "canary": 579, "cancel": 540, "canconstantfoldcallto": 541, "candidat": [476, 538, 539, 544, 579, 585, 616, 619, 632], "canfoldasload": [636, 637], "canlosslesslybitcastto": 591, "cannot": [40, 136, 230, 383, 461, 462, 464, 465, 466, 469, 470, 472, 475, 476, 477, 481, 482, 483, 484, 486, 487, 488, 495, 499, 500, 513, 518, 526, 527, 530, 531, 534, 535, 538, 540, 542, 547, 548, 552, 555, 557, 570, 575, 578, 579, 584, 590, 601, 602, 607, 608, 609, 611, 612, 614, 621, 623, 625, 626, 631, 632, 634, 636, 639, 642, 645, 646, 648, 654, 670, 677, 686], "canonical": [461, 466, 472, 540, 545, 579, 593, 607, 609, 611, 625, 626, 644], "canonicalised": 472, "canonicaliz": [483, 487, 555, 609, 648], "canonicalized": [483, 487, 607], "canonically": 611, "canreserveresourc": 483, "cantfail": [654, 655, 656, 657], "cap": 486, "capabilit": [469, 529, 530, 532, 550, 566, 589, 609, 620, 646, 671, 677, 682, 686], "capability": [483, 529, 531, 541, 579, 582, 592, 615, 648, 670, 673, 681, 684], "capabl": [469, 483, 530, 537, 550, 566, 589, 590, 602, 609, 634, 648, 674, 677, 685, 686], "capacity": [599, 609], "capital": 614, "capitaliz": [486, 538], "capston": 581, "captur": [461, 473, 477, 483, 487, 530, 541, 557, 579, 614, 616, 625, 626, 641, 646, 649, 651, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686], "captured": [479, 487, 530, 579, 628], "capturing": [487, 579, 614, 672, 683], "car": [469, 470, 483, 486, 487, 531, 546, 550, 566, 575, 579, 585, 587, 590, 593, 609, 611, 620, 625, 631, 632, 637, 640, 646, 648, 674, 677, 685, 686], "card": [568, 630], "careful": [466, 467, 484, 579, 581, 590, 609, 626], "carefully": [461, 538, 545, 547, 579, 625, 674, 685], "careless": 486, "caret": [499, 579], "carol": 634, "carr": [548, 579, 609, 623], "carried": [513, 537, 579, 642], "carrizo": 466, "carruth": [614, 626], "carruthacronym": 614, "carruthcamelback": 614, "carruthdistinguish": 614, "carruthfunct": 614, "carruthinconsistent": 614, "carruthlow": 614, "carry": [555, 558, 579, 587, 636], "carrying": 579, "cas": [461, 462, 464, 465, 466, 467, 469, 470, 472, 473, 475, 477, 480, 481, 482, 483, 484, 485, 486, 487, 490, 491, 495, 498, 500, 504, 506, 513, 514, 515, 527, 528, 530, 531, 533, 534, 535, 539, 540, 541, 543, 544, 545, 547, 548, 550, 555, 564, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 594, 596, 597, 602, 604, 607, 609, 610, 611, 613, 614, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 640, 641, 642, 643, 645, 646, 648, 652, 654, 655, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "cascad": 575, "case_branch_weight": 475, "cassert": [486, 592, 671, 672, 673, 674, 675], "cast": [461, 472, 480, 486, 555, 579, 593, 616, 630, 635, 636, 637, 643, 671, 672, 673, 674, 676, 677, 682, 686], "cast210": [556, 579], "cast_or_null": 609, "casted": [548, 591], "casting": [461, 530, 573, 579, 609, 636], "castinst": 609, "casual": 538, "cat": [500, 525, 527, 530, 547, 550, 566, 581, 632, 634, 641, 647], "catagoriz": 607, "catapult": 649, "catastrophic": 626, "catch": [530, 536, 538, 548, 566, 570, 579, 580, 609, 626, 670, 671, 681, 682], "catch3": 540, "catching": 538, "catchpad": 540, "catchret": 540, "catchswitch": 540, "categor": [504, 509, 579, 607, 609, 625, 634, 641, 651], "categoriz": [583, 607, 634, 646], "categorized": 530, "category": [486, 517, 530, 574, 579, 596, 609, 625, 632, 646], "catering": 632, "caught": [486, 540, 566, 579], "caus": [461, 466, 469, 470, 472, 476, 477, 483, 485, 486, 487, 489, 491, 493, 497, 499, 502, 508, 518, 528, 530, 538, 541, 542, 543, 547, 550, 553, 557, 558, 559, 560, 565, 566, 569, 570, 574, 579, 581, 584, 594, 607, 609, 610, 611, 622, 623, 625, 626, 629, 630, 631, 634, 636, 641, 643, 645, 648, 652, 669, 670, 672, 673, 674, 676, 680, 685], "caused": [481, 488, 513, 538, 553, 574, 645], "causing": [477, 487, 515, 566, 579, 594, 609, 632], "caution": [470, 630], "caveat": [478, 531, 676], "cayman": 466, "cb": [523, 535, 609], "cbar": 634, "cbaz": 634, "cbe": 574, "cbpf": 483, "cbsz": 8, "cbtw": 483, "cbw": 483, "cc": [466, 483, 527, 533, 550, 565, 571, 572, 579, 581, 608, 619, 622, 634, 650, 681, 682, 683, 684, 685], "cc_sparc32": 646, "ccach": 481, "ccache_d": 481, "ccache_maxsiz": 481, "ccassigntoreg": 646, "ccassigntoregwithshadow": 646, "ccassigntostack": 646, "ccc": [473, 579], "ccdelegateto": 646, "ccif": 646, "ccifcc": 646, "ccifinreg": 646, "ccifnest": 646, "ccifnotvararg": 646, "cciftyp": 646, "cclib": [684, 685], "ccmak": 481, "ccomment": 636, "cconv": 579, "ccpassbyval": 646, "ccpromotetotyp": 646, "ccr": 554, "cctool": [481, 509], "cctyp": [669, 670, 671, 672, 673, 674, 675, 676], "cd": [481, 550, 552, 565, 574, 611, 622, 625, 639, 640, 650], "cd8_eltsiz": 636, "cd8_form": 636, "cd8_scal": 636, "cdbg_us": 466, "cde": 529, "cdecl": 579, "cec": [61, 150, 251, 343, 404], "cedar": 466, "cee": 609, "ceil": [466, 601, 645], "ceiling": 579, "cel": 646, "cent": 609, "centered": 676, "centerpoint": 538, "central": [540, 625], "centralizing": 631, "centric": 579, "centry": 634, "cenum": 634, "cerr": [592, 650], "certain": [461, 466, 469, 472, 481, 483, 485, 487, 491, 495, 505, 525, 530, 534, 535, 541, 542, 547, 550, 560, 575, 579, 581, 595, 601, 602, 606, 609, 612, 618, 626, 628, 630, 634, 636, 648, 649, 650, 671, 673, 674, 675, 682, 685], "certainly": [470, 485, 545, 547, 555, 583, 611, 677, 686], "cf": 535, "cfa": [466, 540], "cfd": 613, "cfe": [538, 550, 588, 608, 611, 616, 632], "cfg": [483, 491, 516, 540, 552, 575, 578, 579, 583, 591, 594, 609, 616, 641, 645, 646, 648, 672, 683], "cfgsimplify": 609, "cfguard_checkcc": 579, "cfi": [461, 480, 540, 580, 585, 618, 626], "cfi_instruct": 585, "cfi_offset": 585, "cflag": [581, 610], "cfoo": 634, "cfrac": 640, "cg": [521, 522, 648], "cg_profil": 542, "cgft_objectfil": 675, "cgo": [531, 616], "cgp_from": 542, "cgp_to": 542, "cgp_weight": 542, "cgroup": 539, "ch": 637, "ch9": 676, "chain": [467, 468, 469, 475, 481, 483, 486, 491, 504, 513, 534, 554, 557, 580, 582, 583, 590, 591, 607, 625, 631, 642, 646, 648], "chained": [461, 469, 579, 609, 634, 674, 685], "challeng": [626, 630], "challenging": [538, 564, 626, 673, 684], "champion": 623, "chanc": [475, 534, 538, 545, 579, 584, 618, 637, 649, 652, 678, 679], "chandl": [614, 626], "chandlerc": [608, 626], "chang": [464, 465, 469, 472, 473, 475, 476, 477, 481, 483, 484, 485, 486, 487, 488, 491, 498, 502, 504, 507, 513, 515, 530, 531, 533, 534, 535, 537, 541, 543, 545, 546, 547, 548, 549, 552, 553, 559, 566, 567, 572, 573, 575, 578, 579, 580, 582, 583, 584, 585, 589, 591, 592, 593, 594, 597, 602, 606, 607, 612, 614, 619, 620, 626, 628, 630, 632, 633, 634, 638, 640, 642, 645, 646, 648, 651, 652, 654, 655, 656, 657, 671, 672, 673, 674, 675, 676, 682, 683, 684, 685], "changeb": 581, "changebyt": 581, "changed": [461, 466, 469, 472, 475, 479, 483, 496, 529, 530, 533, 538, 541, 548, 550, 556, 573, 576, 579, 591, 607, 609, 611, 614, 618, 623, 630, 639, 674, 675, 676], "changelog": 581, "changing": [469, 481, 513, 530, 538, 552, 555, 579, 580, 591, 593, 609, 611, 614, 625, 626], "channel": [20, 206, 363, 464, 466, 484, 533, 549, 626], "chaos": 468, "chapitr": 653, "chapt": [461, 533, 591, 668, 677, 678, 679, 686], "chapter": [654, 655, 670, 671, 672, 673, 674, 675, 676, 678, 679, 681, 682, 683, 684, 685], "char": [466, 469, 486, 529, 530, 534, 535, 536, 548, 566, 573, 579, 581, 582, 592, 593, 597, 601, 604, 609, 622, 625, 626, 634, 645, 646, 648, 649, 650, 654, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "char16_t": 604, "char32_t": 604, "char6": 473, "charact": [461, 464, 466, 473, 483, 487, 491, 495, 499, 514, 515, 526, 529, 530, 579, 587, 609, 625, 634, 636, 641, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "character": [461, 464, 466, 491, 499, 500, 513, 514, 515, 516, 525, 526, 535, 579, 585, 609, 636, 641, 668, 672, 673, 679, 683, 684], "character16": 604, "character32": 604, "characteristic": [62, 151, 252, 344, 405, 461, 483, 505, 541, 579, 597, 609, 616, 646, 656, 688], "characteriz": [505, 626], "characterized": 579, "charg": [483, 588, 623], "charscalarty": 579, "chart": [538, 645], "chased": 574, "chat": [484, 538], "cheap": [470, 486, 538, 544, 555, 579, 609, 626], "cheapest": 562, "cheaply": [590, 626], "cheat": 656, "check": [461, 465, 466, 468, 470, 477, 480, 481, 482, 483, 486, 488, 489, 491, 505, 513, 529, 530, 534, 538, 539, 540, 545, 547, 548, 550, 552, 553, 555, 557, 560, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 579, 581, 582, 583, 585, 586, 591, 593, 594, 608, 611, 614, 616, 617, 618, 619, 622, 624, 625, 628, 629, 630, 632, 635, 639, 640, 641, 642, 643, 646, 647, 648, 650, 652, 654, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 686], "checkcudaerror": 592, "checked": [470, 481, 487, 538, 539, 544, 546, 550, 569, 570, 581, 591, 607, 609, 626, 636, 639, 640, 641, 643, 671, 682], "checker": [529, 634], "checkformat": 609, "checking": [465, 466, 481, 487, 530, 535, 544, 545, 550, 579, 592, 593, 594, 609, 611, 619, 622, 624, 625, 628, 641, 652, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "checkout": [481, 539, 553, 569, 572, 606, 618, 619], "checkpointing": 540, "checksum": [461, 542, 579, 581, 622], "checksumkind": [542, 579], "checksummed": 622, "chees": 486, "cherry": 572, "child": [540, 573, 579, 581, 609, 673, 684], "child_begin": 609, "child_end": 609, "child_iterator": 609, "childidx": 609, "childorerr": 609, "children": [504, 573, 595, 609], "childvalid": 609, "chilling": 538, "chip": [466, 483, 492, 493, 554, 568, 571, 592, 641, 646], "chmod": 550, "choic": [461, 485, 486, 492, 503, 541, 554, 557, 568, 579, 581, 608, 609, 628, 630, 668, 672, 677, 683, 686], "choos": [461, 466, 481, 484, 488, 493, 516, 530, 531, 538, 547, 566, 567, 570, 571, 574, 577, 579, 583, 588, 590, 593, 609, 612, 621, 625, 639, 646, 648, 649, 650, 669, 671, 672, 679, 680, 681, 682, 683], "choosing": [472, 483, 505, 579, 608, 609, 612, 614, 648], "chop": 625, "chos": [619, 626, 682], "chosen": [472, 483, 486, 491, 547, 566, 579, 630, 636, 649], "chris": [483, 531, 538, 611, 614, 648, 686], "chriscox": 613, "chrom": 649, "chromium": [566, 572, 623], "chronological": 614, "chronology": 611, "chunk": [472, 473, 483, 486, 517, 581, 607, 624, 625, 681], "churn": 656, "ci": [461, 466, 538, 580], "cie_id": 461, "cie_point": 461, "cimag": [673, 684], "cin": 543, "cindex": 646, "cint2006": 639, "circl": 573, "circuit": [673, 684], "circular": [461, 486, 649], "circumst": [476, 487, 540, 579, 583, 609, 623, 625, 646, 648, 671, 674, 682, 685], "circumvent": 530, "cis": 471, "cis501": 471, "cited": 614, "citizen": 609, "city": [549, 588], "cl": [597, 625, 637, 641, 648], "claim": [470, 538, 651], "clamp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 466, 579], "clamped": [464, 579], "clamping": 464, "clampnumel": 559, "clampscalar": 559, "clang": [461, 470, 475, 478, 479, 480, 481, 485, 486, 487, 489, 491, 492, 499, 501, 513, 516, 527, 533, 535, 536, 538, 539, 540, 543, 545, 548, 549, 552, 553, 565, 566, 572, 573, 574, 579, 580, 581, 582, 592, 593, 594, 605, 608, 609, 610, 611, 614, 615, 618, 619, 620, 623, 625, 635, 636, 637, 639, 641, 642, 643, 645, 648, 649, 650, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 682, 685, 686], "clang_attr_arg_context_list": 634, "clang_attr_identifier_arg_list": 634, "clang_bootstrap_cmake_arg": 468, "clang_cc1": [487, 641], "clang_cl": 641, "clang_cpp": 641, "clang_enable_bootstrap": 468, "clangxx": 641, "clarif": [486, 532, 538, 651], "clarify": [461, 625], "clarifying": 461, "clarity": [579, 621, 672, 683], "clas": 529, "clash": [486, 579, 588, 618, 657], "class": [472, 473, 484, 487, 505, 515, 517, 526, 529, 533, 537, 538, 540, 541, 546, 547, 550, 551, 554, 557, 559, 560, 561, 562, 576, 578, 580, 584, 587, 589, 591, 593, 594, 596, 597, 602, 604, 606, 607, 614, 615, 616, 617, 622, 625, 626, 631, 634, 637, 643, 647, 649, 652, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 685, 686], "classic": [478, 483, 486, 566, 609, 626], "classical": 607, "classid": 636, "classif": [579, 629, 631], "classified": 579, "classify": 478, "classifying": 469, "classnam": [529, 597, 635], "classof": 634, "classpair": 635, "classrec": 635, "classref": 636, "claus": [483, 538, 540, 579, 609, 636], "clean": [483, 486, 488, 530, 538, 550, 557, 569, 574, 579, 582, 592, 607, 608, 609, 611, 618, 626, 648], "cleaned": 483, "cleanest": 461, "cleaning": [483, 540], "cleanly": [486, 538, 579, 648], "cleanup": [534, 538, 579, 580, 593, 607, 625, 656, 657, 671, 672, 682, 683], "cleanuppad": [534, 540], "cleanupret": [534, 540], "clear": [485, 486, 528, 538, 547, 548, 572, 575, 578, 579, 597, 601, 609, 611, 614, 623, 626, 632, 635, 636, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "cleared": [487, 578, 579, 604, 611, 630, 649], "cleargraphattr": 609, "clearing": 670, "clearly": [461, 476, 486, 538, 583, 590, 596, 611, 623, 625, 628, 632], "clearresourc": 483, "clenumval": 530, "clenumvaln": [530, 635], "clev": [573, 677, 686], "cleverly": 472, "click": [538, 552, 608, 627], "clicking": 608, "client": [466, 473, 481, 483, 486, 530, 538, 547, 573, 584, 587, 593, 609, 611, 617, 620, 625, 628, 639, 643, 646, 648, 654, 655, 671, 674, 682, 685], "cling": 593, "clipped": 536, "clobb": [469, 483, 585, 590, 626, 636], "clobber": 579, "clobbered": [461, 466, 590], "clobbering": [579, 590, 626], "clock": [513, 579, 635, 648], "clon": [481, 538, 550, 552, 565, 609, 639, 640, 648, 674, 685], "cloned": [491, 616, 634], "cloning": [491, 550], "clos": [476, 479, 483, 486, 548, 559, 580, 581, 583, 608, 619, 626, 632], "close_fd_mask": 581, "closed": [476, 486, 549, 572, 580, 609, 648], "closely": [483, 534, 548, 550, 579, 626, 669, 680], "closest": [461, 579, 676], "closing": [486, 487, 579, 583, 608], "closur": [677, 686], "clr": [597, 630], "clrb": 483, "clrl": 483, "clrq": 483, "clrw": 483, "clust": [505, 618], "cluster": 505, "cluster_id": 505, "clustered": 505, "clustering": [505, 554, 560], "clutt": [486, 538], "cluttered": 478, "cm": 614, "cmak": [468, 471, 538, 539, 546, 550, 552, 553, 565, 566, 567, 568, 586, 609, 611, 613, 618, 622, 627, 632, 641, 644, 646, 650], "cmake_": [479, 482], "cmake_asm_compiler_target": 570, "cmake_asm_flag": 570, "cmake_build_typ": [479, 481, 482, 550, 639], "cmake_c_compil": [550, 639], "cmake_c_compiler_external_toolchain": 570, "cmake_c_compiler_target": 570, "cmake_c_flag": [481, 570, 639], "cmake_c_flags_optimiz": 639, "cmake_cflag": 570, "cmake_cxx_compil": 550, "cmake_cxx_flag": 481, "cmake_cxx_flags_releas": 550, "cmake_cxx_flags_relwithdebinfo": 550, "cmake_cxx_standard": 481, "cmake_install": 481, "cmake_install_prefix": [468, 481, 550, 552, 571], "cmake_minimum_required": [481, 482], "cmake_module_path": 481, "cmake_parse_argu": 482, "cmake_sysroot": 570, "cmake_toolchain_fil": [481, 550], "cmake_try_compile_target": 570, "cmake_verbose_makefil": 468, "cmakecach": [481, 482, 650], "cmakefil": [550, 639], "cmakelist": [468, 481, 482, 550, 572, 635, 639, 646, 647, 648], "cmakeparseargu": 482, "cmd": 471, "cmov": 626, "cmovcc": 626, "cmoveq": 626, "cmovneq": 626, "cmp": [483, 516, 579, 607, 609, 626], "cmp32ri8": 483, "cmpb": 542, "cmpflag": 591, "cmpinst": [585, 609], "cmpnam": 634, "cmpnumber": 591, "cmpq": [542, 624], "cmpswap": 464, "cmptmp": [670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "cmpxchg": [470, 555], "cnt": [114, 201, 303, 460], "co": [550, 588, 611, 643], "co_aw": 534, "coalesc": [483, 493, 609], "coalescing": [483, 502, 609], "coars": 491, "coco": 579, "cod": [54, 101, 145, 188, 244, 290, 397, 447, 461, 465, 467, 468, 469, 470, 472, 473, 475, 476, 478, 479, 480, 481, 482, 487, 488, 490, 491, 492, 494, 499, 500, 507, 509, 512, 514, 515, 516, 517, 519, 521, 522, 523, 525, 526, 530, 533, 534, 537, 539, 541, 542, 544, 545, 546, 548, 549, 552, 554, 557, 559, 560, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 575, 576, 578, 580, 581, 582, 583, 586, 588, 589, 591, 592, 593, 594, 595, 596, 597, 605, 606, 611, 612, 613, 614, 616, 617, 618, 619, 620, 623, 624, 626, 628, 629, 630, 632, 634, 635, 636, 637, 639, 640, 641, 643, 645, 649, 650, 652, 668, 677, 678, 679, 686, 687], "code_alignment_factor": [461, 466], "code_object_ur": 466, "code_owner": [533, 538, 608], "codebas": [486, 538, 556, 608, 618, 623], "codeblock": 547, "coded": [483, 626, 635, 636, 641, 676], "codeemittergen": 634, "codegen": [466, 467, 483, 487, 488, 529, 531, 534, 541, 544, 545, 547, 550, 558, 560, 575, 579, 582, 585, 592, 618, 634, 641, 644, 646, 648, 657, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "codegen_expr": [681, 682, 683, 684, 685], "codegen_func": [681, 682, 683, 684, 685], "codegen_proto": [681, 682, 683, 684, 685], "codegenerat": 574, "codegening": [673, 684], "codegenopt": 594, "codegenschedmodel": 646, "codeid": 620, "codepath": [470, 609], "codeprop": 466, "coder": 611, "coderecty": 635, "codesiz": [636, 637], "codeview": [517, 522, 597, 602], "codeviewdebug": 625, "coding": [483, 533, 538, 548, 549, 550, 609, 635, 637, 646], "coding_style_cpp": 614, "codlai": 656, "coerc": 591, "coerce_offset0": 487, "coerced": 534, "coexist": 632, "coff": [473, 483, 514, 515, 532, 552, 579, 593, 597, 602], "cohen": 631, "coherent": [464, 466, 579], "coincident": 642, "col": [579, 676], "cold": [473, 474, 518, 545, 579], "coldcc": [473, 579, 630], "colfield": 577, "collabor": [461, 538, 611], "collaborat": [538, 611], "collaps": [583, 626], "collapsed": 579, "collapsing": 579, "colleagu": 484, "collect": [461, 481, 499, 504, 513, 538, 545, 551, 554, 566, 576, 580, 581, 582, 593, 604, 607, 609, 611, 613, 616, 620, 629, 634, 635, 636, 639, 640, 645, 677, 678, 679, 686], "collect_and_build_with_pgo": 569, "collected": [469, 474, 475, 513, 529, 547, 569, 579, 582, 584, 593, 626, 628, 630, 634, 635, 636], "collecting": [628, 640, 650], "collectively": [461, 538, 593, 628, 630], "collector": [473, 529, 543, 580, 630, 677, 686], "collis": [486, 579, 609, 611, 625], "colloquial": 579, "colombet": 563, "colon": [466, 479, 481, 482, 487, 566, 622, 634, 636, 641, 652], "color": [96, 185, 287, 442, 487, 499, 504, 509, 517, 521, 522, 609, 650], "colored": 483, "coloring": 616, "colour": 484, "column": [461, 466, 486, 487, 513, 516, 527, 535, 542, 550, 575, 577, 620, 625, 640, 645, 652, 676], "columnend": 535, "columnstart": 535, "com": [461, 466, 471, 473, 478, 479, 481, 482, 483, 484, 486, 488, 499, 508, 538, 541, 547, 548, 550, 552, 553, 570, 572, 577, 578, 579, 581, 583, 588, 590, 591, 592, 593, 597, 604, 605, 608, 609, 610, 611, 613, 614, 620, 622, 623, 625, 626, 630, 636, 639, 640, 641, 648, 649, 652, 654, 656, 668, 670, 671, 672, 674, 677, 679, 681, 682, 683, 685, 686, 687], "com_f": 483, "combin": [114, 117, 201, 303, 460, 461, 464, 466, 470, 477, 479, 481, 487, 526, 529, 530, 531, 534, 537, 538, 541, 547, 555, 559, 560, 562, 575, 579, 581, 591, 594, 595, 609, 616, 618, 625, 630, 632, 636, 645, 646, 649, 650, 652, 669, 670, 677, 680, 681, 686], "combine1": 483, "combine2": 483, "combined": [461, 466, 483, 487, 499, 507, 516, 530, 538, 541, 542, 548, 559, 575, 579, 581, 585, 605, 609, 625, 626, 642, 648, 649, 650], "combinedallocator": 622, "combiner": [529, 560], "combining": [483, 497, 511, 513, 550, 579, 646], "comdat": [473, 542], "comfort": 621, "coming": [482, 483, 486, 534, 537, 575, 579, 585, 612, 620, 626, 671, 672, 674, 682, 683, 685], "comm": [61, 114, 150, 201, 239, 251, 303, 343, 392, 404, 460, 462, 463, 466, 476, 485, 486, 487, 505, 529, 530, 533, 549, 553, 567, 572, 579, 580, 585, 587, 597, 601, 608, 609, 614, 632, 636, 641, 652, 672, 683], "command": [466, 468, 469, 471, 477, 479, 481, 483, 486, 487, 488, 491, 492, 493, 496, 497, 500, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 517, 521, 522, 523, 525, 526, 527, 528, 529, 531, 533, 536, 538, 539, 546, 549, 550, 552, 557, 560, 565, 567, 569, 570, 572, 574, 576, 579, 581, 582, 593, 594, 609, 611, 618, 619, 622, 630, 634, 635, 636, 637, 639, 640, 641, 644, 646, 648, 650, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "commande": 628, "commandlin": [491, 644], "commandlinepars": 650, "commaseparated": 530, "comment": [466, 476, 485, 487, 495, 513, 523, 525, 529, 533, 538, 573, 579, 580, 581, 590, 591, 607, 608, 609, 611, 614, 618, 634, 635, 636, 637, 641, 647, 649, 652, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "commented": [485, 487, 547, 669, 670, 680, 681], "commenting": 483, "commentstring": 646, "commercial": [538, 630], "commercially": 461, "commit": [486, 533, 538, 545, 549, 553, 572, 586, 608, 611, 614, 627, 630], "committ": 538, "committe": [484, 609], "committed": [513, 533, 538, 567, 608], "committing": [485, 538, 550, 572, 611], "common": [461, 466, 468, 469, 470, 472, 473, 479, 482, 483, 485, 486, 495, 514, 515, 523, 530, 531, 533, 534, 537, 538, 540, 541, 543, 545, 546, 547, 548, 554, 557, 559, 573, 575, 579, 580, 581, 584, 586, 590, 591, 593, 597, 607, 610, 611, 616, 622, 625, 626, 627, 628, 630, 631, 636, 637, 646, 648, 651, 652, 669, 671, 672, 673, 674, 677, 680, 682, 683, 684, 685, 686], "commonality": [483, 636], "commonly": [473, 486, 495, 547, 579, 593, 609, 614, 646], "commun": [4, 6, 484, 486, 579, 584, 621, 623, 631], "communicat": [469, 484, 485, 534, 543, 545, 579, 592, 593, 626, 628, 648], "communicated": 609, "communicating": 484, "communit": [538, 632], "community": [478, 485, 531, 533, 538, 545, 580, 609, 611, 612, 614, 621, 623, 653], "commut": [469, 483, 607, 646], "compact": [461, 466, 483, 497, 518, 533, 540, 547, 579, 609, 676, 677, 686], "compacting": 547, "compactly": [534, 609, 636], "compactness": [534, 628], "compan": 588, "companion": 489, "company": [538, 623], "compar": [464, 465, 468, 469, 470, 474, 502, 504, 512, 517, 540, 579, 581, 607, 609, 610, 616, 619, 625, 626, 634, 636, 639, 640, 645, 652, 669, 672, 680, 683], "compared": [483, 487, 502, 513, 537, 579, 591, 609, 618, 619, 625, 626, 635, 636, 641], "comparefp": 636, "comparing": [475, 502, 504, 577, 579, 591, 609, 619, 672, 673, 674, 675, 676, 683, 684, 685], "comparison": [465, 470, 475, 542, 545, 548, 555, 560, 573, 579, 607, 609, 619, 625, 630, 645, 656, 669, 673, 680, 684], "compatibility": [461, 464, 466, 472, 473, 482, 495, 515, 516, 517, 522, 525, 530, 534, 535, 541, 542, 572, 576, 578, 579, 601, 604, 609, 617, 625, 628, 630, 642, 643, 677, 686], "compatibl": [461, 464, 466, 470, 481, 483, 486, 490, 493, 495, 499, 522, 529, 531, 538, 540, 542, 546, 547, 550, 552, 579, 592, 607, 609, 622, 626, 641, 643], "compatible_class": 483, "compbinary": 519, "competent": 538, "compil": [49, 143, 240, 393, 461, 466, 468, 469, 470, 472, 473, 477, 478, 479, 480, 482, 483, 485, 487, 488, 490, 493, 499, 504, 513, 517, 518, 527, 529, 530, 533, 534, 535, 537, 538, 539, 540, 541, 545, 546, 547, 548, 551, 552, 553, 554, 556, 559, 564, 566, 567, 568, 569, 572, 580, 581, 582, 583, 589, 591, 592, 593, 594, 595, 597, 605, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 622, 623, 625, 628, 629, 630, 631, 632, 634, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 657, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687], "compiland": [517, 597, 600, 605], "compile_tim": 639, "compilecallbackmanag": 656, "compilecallbackmanager": 657, "compiled": [466, 477, 483, 486, 488, 499, 505, 514, 527, 530, 531, 534, 535, 538, 539, 543, 547, 550, 552, 560, 566, 570, 574, 579, 580, 582, 592, 593, 597, 604, 605, 609, 623, 625, 626, 628, 630, 639, 641, 647, 648, 654, 655, 656, 657, 671, 676, 677, 681, 682, 686], "compilelai": [593, 654, 655, 656, 657], "compilemodul": 650, "compileondemand": 656, "compileondemandlai": [593, 656, 657], "compiler": [461, 468, 477, 481, 483, 486, 488, 504, 529, 532, 537, 538, 539, 543, 547, 548, 550, 579, 590, 592, 609, 616, 617, 625, 630, 645, 653, 679], "compiler_rt": 538, "compiler_rt_test_compile_cflag": 570, "compiler_rt_test_compiler_cflag": 570, "compileutil": [654, 655, 656, 657], "compiling": [466, 488, 499, 538, 552, 553, 566, 568, 569, 570, 579, 580, 592, 593, 607, 609, 617, 622, 623, 625, 626, 628, 630, 639, 640, 641, 644, 648, 650, 654, 655, 671, 674, 676, 677, 678, 682, 686], "compl": [461, 548, 579, 609, 626], "complain": [487, 552, 553, 565], "complaining": 550, "complaint": [677, 686], "complet": [461, 466, 469, 474, 476, 481, 482, 483, 486, 488, 490, 491, 499, 504, 528, 530, 534, 538, 540, 549, 552, 556, 560, 564, 569, 572, 579, 580, 581, 582, 583, 584, 590, 591, 592, 593, 607, 611, 618, 620, 621, 625, 626, 630, 631, 634, 635, 636, 646, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "completed": [461, 466, 469, 534, 560, 570, 572, 581, 584, 674, 685], "completely": [473, 483, 486, 530, 537, 538, 553, 567, 579, 582, 616, 625, 626, 631, 634, 635, 636, 648, 652, 679], "completeness": [538, 547], "completing": [466, 609, 631], "complex": [461, 482, 483, 486, 534, 541, 581, 591, 594, 604, 618, 625, 626, 632, 634, 635, 636, 645, 646, 648, 655, 669, 671, 673, 677, 680, 682, 684, 686], "complex128": 604, "complex16": 604, "complex32": 604, "complex32partialprecis": 604, "complex48": 604, "complex64": 604, "complex80": 604, "complexit": [461, 483, 674, 676, 685], "complexity": [461, 483, 547, 581, 591, 607, 609, 630, 631, 632, 636, 637, 646], "complexpattern": [483, 646], "complextyp": 688, "compli": [466, 531, 612], "complicated": [468, 470, 481, 482, 540, 541, 547, 550, 552, 570, 573, 578, 579, 583, 616, 618, 626, 634, 643, 645, 646], "complying": 538, "component": [461, 464, 466, 479, 481, 482, 485, 487, 491, 495, 499, 501, 524, 529, 536, 537, 539, 546, 547, 549, 550, 552, 570, 572, 574, 579, 580, 584, 592, 593, 601, 602, 607, 609, 610, 611, 618, 620, 626, 628, 632, 640, 644, 646, 649, 651, 654, 687], "compos": [461, 479, 552, 579, 655], "composability": 593, "composed": [461, 465, 535, 579, 585, 620, 623, 632, 651], "composing": [579, 593, 655], "composit": [579, 609, 620], "compositional": 616, "compound": 535, "compr": [0, 2, 3, 4, 87, 173, 277, 432], "comprehens": [550, 607, 626, 641], "compress": [473, 481, 515, 518, 529, 535, 550, 581], "compressed": [87, 173, 277, 432, 464, 481, 497, 515, 529, 535, 550, 579, 609], "compris": [461, 466, 535, 616], "comprised": [461, 466], "comprising": 461, "compriz": 497, "compromis": 609, "compromising": [579, 626], "compteur": 142, "comput": [48, 238, 391, 461, 464, 469, 474, 477, 483, 486, 497, 513, 531, 535, 545, 547, 567, 579, 580, 581, 583, 607, 609, 613, 616, 623, 626, 630, 636, 646, 648, 668, 670, 672, 673, 674, 675, 676, 677, 679, 681, 683, 684, 685, 686], "computationally": 580, "compute_20": 592, "compute_factorial": 536, "compute_pgm_rsrc1_fwd_progress": 466, "compute_pgm_rsrc1_mem_ordered": 466, "compute_pgm_rsrc1_sgpr": 466, "compute_pgm_rsrc1_vgpr": 466, "compute_pgm_rsrc1_wgp_mod": 466, "compute_pgm_rsrc2_user_sgpr": 466, "compute_xx": [531, 592], "computear": 573, "computed": [114, 201, 303, 460, 461, 466, 469, 483, 497, 513, 547, 558, 579, 580, 590, 597, 604, 607, 622, 626, 648, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "computeknownbit": 556, "computing": [461, 537, 543, 548, 579, 604, 616, 622, 626, 628, 671, 682], "con": [472, 636], "concat": 579, "concat_vector": 483, "concaten": [461, 466, 467, 473, 550, 609, 636, 641], "concatenat": [555, 559, 609, 636], "concatenated": [579, 609, 636, 641], "concatenating": 472, "concentrat": 570, "concentrated": 513, "concept": [461, 466, 472, 473, 483, 545, 548, 554, 573, 579, 583, 591, 592, 593, 609, 620, 625, 626, 631, 643, 647, 654, 655, 670, 672, 681, 683], "conceptual": [461, 466, 486, 579, 627], "conceptually": [461, 466, 472, 483, 487, 530, 540, 548, 579, 609, 642], "concern": [485, 538, 611, 614, 630, 632], "concerned": [547, 548, 579, 655], "concerning": 461, "concis": [483, 486, 530, 538, 548], "conclud": [513, 579, 672, 673, 683, 684], "conclus": [513, 591, 656, 676, 678, 679, 685, 687], "concret": [473, 483, 530, 537, 554, 559, 560, 579, 590, 609, 615, 625, 635, 637, 646, 648, 671, 678, 682], "concretely": 630, "concurrency": [579, 593, 617], "concurrent": [466, 470, 481, 547, 581, 593, 654], "concurrentircompil": [593, 654, 655, 656, 657], "concurrently": [547, 593, 609], "cond": [474, 534, 543, 579, 583, 590, 625, 636, 646, 672, 673, 674, 675, 676, 683, 684, 685], "cond1": 636, "cond2": 636, "cond_fals": [674, 685], "cond_next": [674, 685], "cond_tru": [674, 685], "cond_val": [683, 684, 685], "condbranch": 646, "condclaus": 636, "condit": [101, 188, 290, 447, 461, 465, 466, 475, 482, 483, 486, 499, 530, 535, 538, 540, 543, 545, 548, 554, 575, 582, 583, 591, 604, 607, 609, 622, 626, 630, 631, 641, 642, 646, 648, 669, 672, 673, 674, 675, 676, 680, 683, 684, 685], "conditional": [461, 470, 475, 478, 480, 481, 482, 483, 486, 499, 534, 545, 550, 555, 579, 580, 583, 592, 594, 625, 630, 636, 646, 668, 669, 670, 672, 673, 674, 675, 676, 679, 680, 681, 683, 684, 685], "conditionaliz": 636, "conditionalized": 636, "conditionally": [482, 491, 547, 626], "conditioned": 485, "condmovfp": 636, "condn": 636, "condoperator": 636, "conduct": [538, 549, 588], "conducted": [485, 513], "condv": [672, 673, 674, 675, 676], "conferent": [483, 547, 549, 588], "confident": [461, 538, 579], "confidential": [621, 623], "confidentiality": 538, "config": [468, 481, 490, 491, 505, 522, 538, 546, 550, 567, 570, 609, 610, 611, 618, 641, 646, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 681], "configur": [466, 479, 481, 483, 487, 505, 538, 546, 549, 552, 564, 565, 566, 569, 570, 571, 581, 592, 593, 606, 609, 610, 611, 619, 620, 622, 632, 640, 641, 644, 645, 646, 647, 648, 649, 650, 652, 654, 655, 675], "configured": [466, 468, 479, 481, 486, 491, 550, 552, 553, 566, 579, 581, 609, 622, 630, 640, 648, 649, 651, 654], "configuring": [550, 609], "confirm": [486, 550, 581], "confirmed": 476, "conflict": [466, 483, 487, 538, 579, 590, 609, 611, 614, 641], "conflicted": [681, 682, 683, 684, 685], "conflicting": [522, 554, 681], "conform": [461, 466, 480, 481, 486, 491, 492, 533, 538, 543, 547, 572, 579, 609, 612, 655, 656], "conforming": [486, 579, 609, 652], "confronted": [545, 548], "confus": [478, 486, 487, 495, 538, 548, 591, 609, 614, 616, 622, 626, 646], "confused": [540, 579, 635], "confusing": [478, 547, 556, 575, 579], "confusingly": 470, "congrat": 569, "congruenc": 580, "congruency": 580, "congruent": 622, "conjunct": [461, 479, 481, 487, 489, 517, 518, 579, 597, 619, 631, 636], "connect": [537, 559, 590, 608, 609, 616, 626, 630, 639, 642, 654], "connected": [466, 537, 567, 580, 583, 590, 607], "connectivity": 96, "consecut": [461, 465, 466, 472, 487, 579, 622, 625, 636, 643, 645, 648], "consecutively": [579, 616], "consensus": [485, 538, 614, 615, 623, 632], "consequent": [461, 470, 484, 531, 550, 553, 579, 581, 583, 595, 626, 632], "consequently": [477, 513, 540, 579, 609, 628, 641], "conserv": [469, 547, 579, 582, 626, 630, 648], "conservatism": 642, "conservatively": [466, 469, 470, 486, 513, 547, 579, 628, 642], "conserved": [474, 579], "consid": [461, 469, 472, 473, 474, 483, 486, 487, 488, 495, 530, 531, 534, 535, 536, 537, 543, 547, 548, 550, 556, 559, 568, 569, 573, 575, 577, 578, 579, 580, 583, 585, 590, 591, 604, 609, 614, 621, 622, 625, 626, 627, 628, 630, 631, 636, 641, 643, 645, 648, 655, 669, 672, 674, 679, 680, 683, 685], "consider": [461, 483, 531, 537, 542, 581, 607, 609, 611, 623, 625, 630, 631, 652, 669, 680], "considerably": [550, 637], "considerat": 484, "considered": [461, 466, 469, 483, 484, 485, 486, 487, 488, 491, 501, 514, 525, 534, 538, 540, 542, 544, 554, 555, 559, 564, 579, 583, 591, 604, 607, 609, 614, 619, 621, 622, 625, 626, 628, 629, 631, 636, 637, 639, 648, 672, 676, 677, 683, 686], "considering": [461, 478, 483, 487, 562, 583], "consist": [461, 466, 473, 483, 491, 514, 518, 530, 535, 540, 542, 547, 557, 560, 566, 569, 579, 583, 585, 591, 601, 602, 625, 626, 630, 635, 636, 637, 640, 646, 649, 672, 683], "consisted": 576, "consistency": [466, 579, 581, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "consistent": [461, 466, 469, 470, 482, 485, 486, 487, 497, 538, 545, 546, 548, 579, 594, 611, 614, 618, 632, 636, 648, 670], "consistently": [486, 487, 505, 572, 632], "consisting": [461, 489, 579, 591, 609, 643, 646], "consol": [483, 549, 581, 586, 627, 649, 671, 682], "const": [9, 10, 22, 29, 30, 55, 62, 63, 66, 79, 81, 83, 85, 86, 88, 91, 93, 94, 114, 120, 123, 129, 130, 146, 151, 152, 153, 163, 165, 166, 167, 170, 171, 174, 180, 181, 183, 201, 205, 208, 218, 219, 245, 252, 253, 254, 267, 270, 271, 272, 275, 276, 278, 282, 283, 285, 303, 306, 307, 311, 312, 318, 319, 320, 341, 344, 346, 347, 348, 349, 362, 365, 372, 373, 398, 405, 406, 409, 422, 425, 426, 427, 430, 431, 433, 437, 438, 440, 460, 461, 466, 469, 470, 473, 475, 483, 486, 497, 506, 517, 530, 531, 534, 535, 541, 543, 545, 547, 550, 554, 557, 558, 566, 573, 575, 578, 580, 581, 582, 590, 592, 593, 594, 596, 616, 622, 628, 630, 634, 635, 642, 643, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 669, 670, 672, 673, 674, 675, 676, 681], "const0": 473, "const_arg_iterator": [609, 635], "const_float": [681, 682, 683, 684, 685], "const_global_iterator": 609, "const_iterator": [609, 635], "const_name_iterator": 635, "const_null": [683, 684, 685], "const_op_iterator": 609, "const_record_iterator": 635, "const_use_iterator": 609, "constant_tsc": 651, "constantarray": 609, "constantexpr": 614, "constantfoldcall": 541, "constantfolding": 541, "constantfp": [609, 670, 671, 672, 673, 674, 675, 676, 681], "constantindex": 628, "constantint": [486, 579, 585, 609], "constantness": 579, "constantpoolsect": 646, "constantpropag": 618, "constantstruct": 609, "constdat": 585, "constexpr": [529, 531, 634], "constindex": 628, "constituent": [540, 555, 672, 683], "constitut": [472, 473, 609, 621, 641, 655], "constituting": 561, "constprop": 609, "constrain": [543, 554, 562, 590, 636], "constrained": [513, 540, 550, 554, 560, 590, 606, 618, 644, 670, 681], "constrainedop": 467, "constraining": [557, 560], "constraint": [481, 483, 486, 487, 528, 538, 540, 541, 554, 560, 590, 607, 609, 611, 616, 623, 625, 630, 636, 637, 646, 648], "construct": [466, 470, 479, 482, 486, 513, 530, 534, 540, 541, 547, 577, 578, 579, 586, 593, 609, 616, 625, 627, 630, 634, 636, 643, 646, 647, 648, 654, 656, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "constructed": [469, 473, 480, 486, 537, 542, 578, 579, 593, 604, 609, 630, 643, 648, 650, 652, 654, 671, 682], "constructing": [483, 579, 609, 625, 630, 648, 669, 674, 676, 680, 685], "constructively": 484, "constructor": [470, 483, 515, 530, 531, 534, 543, 573, 576, 578, 579, 584, 593, 625, 635, 646, 648, 652, 654, 655, 656, 672], "constval": 609, "constvcall": 579, "consult": [481, 486, 550, 552, 580, 597, 648, 653], "consulted": [495, 595, 623], "consulting": [549, 590, 602], "consum": [461, 466, 505, 513, 530, 534, 540, 550, 552, 554, 555, 559, 568, 579, 597, 599, 600, 601, 602, 604, 605, 625, 628, 637, 641, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "consumed": [466, 495, 497, 513, 517, 540, 542, 559, 579, 605, 609, 620, 628, 634], "consumeerror": 609, "consumer": [461, 548, 587, 609], "consuming": [513, 534, 542, 579, 581, 602], "consumpt": [483, 513, 581, 620, 648], "cont": [534, 540, 578, 579], "cont6": 540, "contact": [484, 538, 567, 572, 581, 588, 618, 621, 623, 648], "contain": [461, 466, 469, 470, 472, 473, 475, 476, 477, 481, 482, 483, 486, 487, 489, 491, 492, 495, 499, 501, 504, 505, 508, 513, 514, 518, 527, 529, 530, 533, 534, 535, 536, 537, 538, 539, 540, 542, 545, 547, 548, 549, 550, 552, 559, 565, 567, 568, 570, 571, 572, 573, 574, 575, 577, 579, 580, 583, 584, 585, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 604, 607, 610, 611, 613, 616, 618, 619, 623, 625, 626, 627, 628, 630, 634, 635, 636, 637, 639, 640, 641, 643, 645, 646, 647, 648, 649, 651, 652, 654, 655, 656, 657, 670, 672, 676, 681, 683], "contained": [461, 466, 468, 473, 487, 489, 491, 516, 530, 535, 540, 550, 559, 579, 580, 583, 584, 593, 595, 597, 599, 600, 602, 605, 609, 625, 630, 632, 641, 648, 671, 680, 682], "container": [481, 486, 539, 652], "containing": [461, 466, 468, 473, 474, 475, 481, 483, 485, 486, 487, 489, 491, 496, 501, 512, 515, 525, 531, 533, 534, 540, 548, 550, 552, 556, 557, 559, 560, 566, 570, 574, 575, 579, 582, 583, 594, 597, 600, 605, 609, 616, 620, 622, 625, 626, 628, 630, 634, 636, 640, 641, 643, 645, 646, 654, 671], "containingtyp": 579, "containment": 609, "containsfoo": 486, "contb": 579, "content": [466, 469, 472, 481, 486, 487, 488, 495, 497, 499, 504, 511, 513, 515, 516, 521, 522, 526, 530, 538, 542, 544, 551, 579, 582, 586, 591, 597, 604, 605, 607, 609, 611, 616, 620, 622, 627, 636, 637, 640, 641, 646, 648, 650, 679, 680, 681, 682, 683, 684, 685], "content_disposition_typ": 538, "contentious": 538, "context": [469, 470, 486, 487, 518, 527, 530, 534, 540, 543, 545, 548, 554, 559, 567, 573, 579, 580, 583, 587, 591, 592, 593, 608, 609, 615, 621, 626, 634, 636, 637, 641, 648, 651, 654, 669, 670, 671, 674, 676, 680, 681, 682, 683, 684, 685], "context_projection_funct": 534, "context_siz": 534, "contextual": 579, "contextualiz": 651, "contiguous": [461, 466, 559, 579, 599, 609, 625, 651], "contiguously": [579, 601, 605], "continu": [461, 466, 469, 473, 477, 483, 485, 517, 533, 538, 540, 572, 579, 581, 582, 583, 597, 608, 609, 611, 618, 624, 626, 641, 651, 669, 677, 680, 686], "continually": 488, "continued": [461, 579], "continuing": [466, 487, 530, 540, 573, 579, 635, 654], "continuity": 609, "continuous": [480, 483, 538, 556, 581, 611], "continuously": [480, 609, 639], "contract": [531, 545, 579, 609, 628, 634], "contradict": 579, "contrary": [483, 579], "contrast": [465, 469, 483, 486, 540, 573, 609, 611, 614, 616, 648, 670, 681], "contrib": [517, 550], "contribu": [461, 466, 489, 517, 533, 538, 549, 570, 605, 611, 649, 653], "contribut": [485, 517, 538, 545, 549, 579, 597, 600, 607, 630, 636, 648, 687], "contributed": [483, 489, 538, 597, 623], "contributing": [538, 549, 597, 609, 611], "contributor": [468, 481, 482, 485, 538, 611, 612, 623], "contrived": [543, 636], "control": [239, 392, 464, 465, 466, 477, 481, 483, 486, 487, 491, 492, 493, 502, 513, 530, 534, 537, 538, 539, 540, 541, 544, 545, 552, 578, 579, 580, 581, 582, 583, 584, 592, 607, 609, 611, 616, 617, 624, 625, 628, 630, 641, 643, 644, 645, 646, 649, 650, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687], "controll": 466, "controlled": [16, 50, 117, 202, 304, 309, 314, 326, 337, 359, 464, 466, 470, 538, 539, 579, 581, 607, 626, 642, 649], "controller": 466, "controlling": [491, 550, 579, 618, 682], "conv": 543, "convenient": [479, 481, 483, 486, 487, 491, 501, 530, 534, 538, 554, 560, 573, 579, 590, 592, 593, 607, 609, 610, 636, 641, 649, 671, 672, 673, 683, 684], "conveniently": [535, 636, 649, 677, 686], "convent": [461, 473, 482, 486, 529, 532, 534, 540, 556, 573, 583, 586, 591, 604, 609, 614, 618, 625, 627, 628, 630, 634, 635, 670, 676, 681], "conventional": 579, "converg": 684, "convergent": [473, 579], "convers": [466, 467, 483, 485, 487, 529, 530, 544, 545, 559, 560, 575, 609, 636, 652], "convert": [461, 464, 465, 466, 470, 483, 490, 491, 503, 530, 544, 545, 548, 550, 555, 560, 566, 569, 576, 583, 591, 592, 607, 609, 611, 635, 646, 648, 649, 650, 652, 668, 670, 671, 672, 673, 674, 675, 676, 677, 679, 681, 682, 683, 684, 685, 686, 688], "converted": [46, 47, 141, 226, 227, 228, 229, 236, 237, 389, 390, 461, 465, 466, 467, 483, 495, 499, 515, 538, 559, 579, 607, 609, 620, 625, 635, 636, 646, 652], "convertibl": [461, 609, 652], "converting": [472, 483, 541, 575, 579, 607, 634, 636, 652], "converttoerrorcod": 609, "convey": [538, 540, 545, 554, 579, 642], "conveyed": 579, "conveying": 547, "cook": [579, 609], "cool": [530, 538, 648, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "cooper": [547, 565], "coordin": [547, 630], "coordinat": [19, 120, 205, 362, 652], "coordinating": [579, 630], "cop": [470, 483, 493, 505, 530, 534, 547, 550, 560, 562, 578, 579, 590, 607, 609, 622, 625, 630, 648], "copied": [466, 469, 483, 500, 530, 534, 538, 584, 586, 624, 627, 642], "coprocessor": 554, "copy": [87, 96, 173, 185, 277, 287, 432, 442, 461, 466, 473, 477, 483, 486, 487, 498, 499, 515, 530, 534, 540, 546, 547, 550, 554, 555, 557, 559, 561, 562, 565, 571, 572, 583, 585, 586, 592, 597, 609, 613, 623, 625, 626, 627, 630, 641, 642, 645, 646, 648, 678], "copyabl": 579, "copycost": [562, 646], "copying": [466, 469, 481, 486, 490, 540, 547, 554, 555, 579, 580, 583, 635, 646, 648], "copyleft": 538, "copypart": 581, "copyphysreg": 646, "copyright": [543, 648], "cor": [1, 5, 8, 466, 469, 471, 481, 482, 534, 538, 540, 541, 549, 550, 559, 561, 564, 566, 567, 568, 571, 579, 581, 583, 593, 594, 611, 612, 626, 634, 641, 648, 654, 655, 656, 657, 670, 671, 672, 673, 674, 676], "core2": 641, "corei7": [641, 645], "corn": 628, "cornerston": 548, "coroaddr": 534, "corollary": [579, 600, 602], "corosp": 534, "coroutin": 617, "corp": 581, "corpor": 581, "corpus": 546, "corpus1": 581, "corpus2": 581, "corpus_d": 581, "correct": [466, 469, 470, 472, 481, 483, 486, 530, 531, 534, 538, 541, 545, 550, 565, 567, 571, 574, 579, 580, 594, 602, 607, 608, 609, 619, 624, 625, 626, 631, 640, 645, 648, 649, 671, 682], "correcting": 538, "correctly": [461, 466, 470, 476, 481, 483, 486, 487, 530, 538, 540, 543, 548, 550, 570, 575, 579, 591, 593, 602, 608, 609, 610, 611, 620, 624, 625, 626, 630, 641, 648, 652, 669, 672, 680, 683], "correctness": [530, 538, 550, 560, 574, 579, 583, 607, 619, 630, 639, 640], "correl": 579, "correlat": [513, 547, 579], "correlated": [579, 643], "correspond": [461, 464, 466, 470, 475, 477, 481, 483, 487, 492, 498, 499, 513, 530, 534, 535, 540, 542, 543, 548, 552, 555, 573, 575, 579, 585, 590, 592, 595, 597, 600, 601, 609, 611, 625, 634, 637, 643, 645, 646, 651, 669, 670, 672, 676, 680, 681], "corresponding": [54, 145, 244, 397, 461, 464, 466, 467, 470, 472, 473, 481, 483, 486, 487, 502, 505, 527, 534, 535, 537, 538, 540, 541, 547, 548, 550, 552, 555, 573, 574, 575, 577, 579, 580, 583, 585, 591, 595, 597, 599, 600, 602, 607, 608, 609, 611, 620, 625, 630, 632, 634, 635, 636, 641, 643, 646, 648, 651, 652, 670, 672, 683], "corrupt": [486, 540, 581, 622, 677, 686], "corrupted": 622, "cortex": [532, 568, 571, 576], "cortexa53model": 646, "cortexa57model": 646, "cos": [469, 645, 652, 668, 669, 670, 671, 679, 680, 681, 682], "cosin": [579, 646], "cost": [461, 479, 483, 486, 513, 538, 554, 561, 562, 564, 566, 577, 579, 580, 582, 588, 591, 606, 609, 611, 616, 620, 626, 632, 634, 645, 646, 677, 686], "costly": [614, 626, 651], "could": [461, 466, 469, 470, 477, 478, 481, 482, 483, 486, 487, 491, 501, 505, 513, 530, 534, 538, 539, 543, 544, 545, 546, 547, 548, 550, 554, 555, 559, 562, 565, 567, 571, 573, 576, 577, 578, 579, 580, 583, 586, 590, 593, 594, 596, 601, 607, 608, 609, 611, 613, 614, 620, 622, 623, 625, 626, 627, 628, 630, 631, 632, 636, 641, 642, 643, 646, 649, 651, 652, 655, 656, 657, 669, 670, 671, 672, 674, 675, 677, 680, 682, 683, 685, 686], "couldn": [469, 555, 591, 675], "counsel": 538, "count": [114, 201, 303, 460, 461, 465, 466, 470, 477, 481, 486, 495, 499, 513, 518, 530, 540, 541, 547, 555, 581, 583, 593, 597, 599, 609, 611, 616, 620, 625, 628, 635, 636, 639, 640, 642, 646, 650, 651, 669, 680], "counted": [465, 487, 576, 579], "counter": [48, 238, 391, 466, 468, 505, 513, 518, 535, 579, 581, 594, 625], "counterpart": [461, 467, 579, 593], "counting": [505, 547, 579], "coupl": [470, 485, 545, 579, 582, 588, 608, 630, 647, 648, 649, 672, 673, 676, 677, 683, 684, 686], "coupled": [560, 609, 611], "cour": 142, "cours": [469, 481, 530, 541, 560, 575, 579, 581, 585, 591, 594, 609, 632, 648, 655, 668, 677, 678, 679, 680, 686], "court": 538, "courtesy": [485, 533], "cout": [486, 543, 566, 592, 652, 675], "cov": [461, 483, 486, 487, 490, 512, 535, 538, 550, 569, 572, 579, 581, 586, 596, 609, 627, 628, 678, 679], "cover": [479, 501, 530, 532, 538, 547, 548, 552, 562, 579, 581, 591, 646, 649], "coverag": [480, 481, 490, 512, 518, 529, 538, 546, 561, 569, 579, 617, 625, 644, 650], "covered": [461, 479, 487, 499, 512, 535, 538, 545, 567, 579, 581, 604, 625, 629, 646, 648, 673, 684], "covering": [588, 641, 678], "cp": [466, 550, 581, 585], "cp0": 554, "cp1": 554, "cp2": 554, "cp3": 554, "cpi": 585, "cpp": [467, 481, 482, 483, 486, 487, 498, 525, 527, 530, 536, 541, 543, 547, 550, 560, 566, 591, 592, 593, 611, 622, 625, 630, 631, 634, 635, 641, 645, 646, 647, 648, 650, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676], "cppflag": 610, "cppguid": 614, "cppperformancebenchmark": 613, "cppreferent": 609, "cpptypenam": [634, 635], "cptmp0": 646, "cptmp1": 646, "cpu": [461, 466, 470, 471, 473, 489, 492, 493, 504, 505, 513, 516, 531, 568, 571, 576, 579, 581, 582, 589, 591, 618, 626, 639, 646, 648, 650, 651, 652, 675], "cpu0": 687, "cpu1": 652, "cpu2": 652, "cpu2017": 613, "cpu_id": 651, "cpu_nam": 505, "cpu_powerpc": 652, "cpu_x86": 652, "cpu_x86_64": 652, "cpufreq": [471, 568], "cpufrequtil": 568, "cpuinfo": 568, "cpun": 471, "cpunam": [492, 493, 513], "cpus": [461, 470, 471, 483, 491, 492, 493, 516, 531, 550, 568, 571, 626, 646, 651, 652, 675], "cpuset": 471, "cpusubtyp": 511, "cputyp": [473, 511], "cpux": 471, "cr": [483, 579], "cr0": 579, "cr7": 579, "craft": 623, "crafted": 609, "crash": [478, 488, 493, 547, 550, 553, 566, 574, 575, 579, 607, 609, 611, 613, 628, 677, 686], "crashed": [488, 550], "crashing": 488, "crawl": 547, "crazi": [672, 683], "crazy": [530, 677, 679, 686], "crc": 581, "crc32": 622, "crd": 613, "creal": [673, 684], "creat": [461, 466, 472, 479, 481, 482, 483, 485, 486, 492, 495, 505, 506, 508, 511, 516, 517, 531, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 547, 550, 552, 554, 555, 557, 559, 560, 561, 567, 569, 571, 575, 576, 578, 579, 580, 581, 582, 584, 585, 586, 587, 590, 591, 592, 607, 608, 609, 611, 619, 625, 626, 627, 628, 630, 631, 632, 634, 635, 637, 639, 640, 643, 645, 646, 647, 648, 649, 650, 652, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "create_add": 681, "create_argument_alloc": 685, "create_entry_block_alloc": 685, "create_funct": [682, 683, 684, 685], "create_modul": [681, 682, 683, 684, 685], "createalloc": [674, 675, 676], "createasmstream": 483, "createbarejitdylib": [654, 655, 656, 657], "createbasicaliasanalysispass": 676, "createbasictyp": 676, "createbr": [672, 673, 674, 675, 676], "createcall": [609, 670, 671, 672, 673, 674, 675, 676], "createcfgsimplificationpass": [655, 656, 657, 671, 672, 673, 674, 676], "createcompileun": 676, "createcondbr": [672, 673, 674, 675, 676], "created": [461, 466, 472, 473, 481, 483, 484, 486, 489, 495, 499, 513, 515, 519, 530, 534, 535, 537, 538, 543, 548, 550, 552, 555, 566, 571, 572, 579, 581, 582, 584, 593, 604, 608, 609, 616, 618, 619, 620, 625, 630, 634, 636, 642, 646, 647, 648, 652, 654, 655, 670, 671, 672, 674, 676, 681, 682, 683, 685], "createdatalayout": [656, 671, 675], "createdefaultmypass": 648, "createentryblockalloc": [674, 675, 676], "createexpress": 676, "createfadd": [670, 671, 672, 673, 674, 675, 676], "createfcmpon": [672, 673, 674, 675, 676], "createfcmpult": [670, 671, 672, 673, 674, 675, 676], "createfil": 676, "createfmul": [670, 671, 672, 673, 674, 675, 676], "createfsub": [670, 671, 672, 673, 674, 675, 676], "createfunct": 676, "createfunctiontyp": 676, "creategvnpass": [655, 656, 657, 671, 672, 673, 674, 676], "createindirectstubsmanag": 656, "createinstructioncombiningpass": [655, 656, 657, 671, 672, 673, 674], "createj": 584, "createjitdylib": 593, "createlazycallthroughmanag": [656, 657], "createload": [674, 675, 676], "createlocalcompilecallbackmanag": 656, "createlocalindirectstubsmanagerbuild": 656, "createmul": 609, "createmyregisterallocator": 648, "createparametervari": 676, "createph": [672, 673, 674, 675, 676], "createpromotememorytoregisterpass": [674, 676], "createreassociatepass": [655, 656, 657, 671, 672, 673, 674], "createresourcetrack": [671, 672, 673, 674], "createret": [670, 671, 672, 673, 674, 675, 676], "createstor": [674, 675, 676], "createstringerror": 609, "createsubroutinetyp": 676, "createtargetasminfo": 646, "createtargetmachin": 675, "createthin": 495, "createuitofp": [670, 671, 672, 673, 674, 675, 676], "createvirtualregist": 483, "creating": [461, 486, 489, 490, 491, 495, 498, 505, 508, 513, 528, 533, 537, 540, 542, 543, 549, 550, 565, 567, 572, 579, 582, 584, 593, 607, 608, 611, 616, 618, 625, 628, 641, 646, 647, 652, 671, 672, 673, 676, 682, 683, 684, 687], "creation": [481, 495, 534, 537, 547, 572, 576, 579, 609, 611, 646], "creator": [481, 648], "creatur": [673, 679, 684], "cred": 626, "credit": 538, "creduc": 478, "crhc": 613, "critedge1": 592, "criteri": [538, 611], "criterion": [611, 622], "critical": [482, 493, 513, 538, 545, 547, 560, 572, 579, 619, 648, 669, 680], "critically": [469, 626], "cross": [468, 486, 488, 517, 560, 561, 562, 568, 579, 591, 593, 605, 611, 616, 623, 644, 675], "crosscompil": [483, 571], "crt": 481, "crtp": 647, "crucial": [579, 608, 626], "cruel": [586, 627], "cruft": 611, "crypto": 581, "cryptographic": 626, "cryptographically": 622, "cs": [518, 579, 613], "cs1": [469, 579], "cs2": [469, 579], "csail": 626, "cse": [470, 541, 556, 580, 594, 671, 682], "csemirbuild": 556, "cset": 471, "csk_md5": 579, "csk_non": 579, "csk_sha1": 579, "csk_sha256": 579, "csr_64": 585, "cst": 579, "cst_code_integ": 473, "cst_code_wide_integ": 473, "cstdint": [671, 672, 673, 674], "cstdio": [669, 670, 671, 672, 673, 674, 675, 676], "cstdlib": [669, 670, 671, 672, 673, 674, 675], "cstptr": 579, "csv": [505, 640, 649, 650], "cta": 592, "ctabl": 634, "ctag": 529, "ctaid": 592, "ctest": 639, "ctmark": 639, "ctor": [486, 543, 578, 579, 625], "ctpop": 646, "ctrl": [670, 675], "ctx": [593, 654, 655], "ctxt": [534, 652], "ctyp": 597, "cu": [466, 504, 531, 575, 579, 625], "cub": 464, "cubemap": 464, "cubic": 581, "cucontext": 592, "cuctxcreat": 592, "cuctxdestroy": 592, "cud": [461, 466, 483, 532, 539, 592, 644], "cuda_success": 592, "cudamodul": 592, "cudevic": 592, "cudevicecomputecapability": 592, "cudeviceget": 592, "cudevicegetcount": 592, "cudevicegetnam": 592, "cudeviceptr": 592, "cufunct": 592, "cuin": 592, "culaunchkernel": 592, "culinkstat": 592, "culled": 486, "cultur": 484, "cultural": 588, "cumbersom": [593, 611], "cumemalloc": 592, "cumemcpydtoh": 592, "cumemcpyhtod": 592, "cumemfre": 592, "cumod": 466, "cumodul": 592, "cumodulegetfunct": 592, "cumoduleloaddat": 592, "cumoduleloaddataex": 592, "cumoduleunload": 592, "cumul": [483, 650], "cumulatively": 515, "cuobjdump": 531, "cur_var": 685, "curesult": 592, "curious": 591, "curiously": 573, "curloc": 676, "curly": [486, 579, 609, 641], "curop": 646, "curr": 679, "currency": [483, 485, 671, 682], "current": [461, 464, 465, 466, 473, 478, 479, 482, 483, 486, 487, 492, 493, 495, 513, 525, 534, 535, 536, 537, 538, 540, 541, 544, 545, 547, 549, 550, 553, 560, 564, 571, 572, 577, 578, 579, 581, 583, 591, 592, 601, 607, 608, 609, 610, 618, 619, 622, 624, 625, 626, 628, 630, 634, 636, 637, 641, 642, 643, 644, 646, 648, 652, 655, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "current_corpus_d": 581, "current_valu": 534, "currently": [19, 56, 57, 120, 205, 362, 399, 400, 461, 464, 465, 466, 469, 470, 472, 473, 475, 478, 480, 481, 483, 484, 487, 488, 489, 491, 492, 499, 501, 513, 515, 516, 521, 522, 530, 531, 534, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 550, 552, 553, 554, 555, 556, 559, 560, 562, 564, 565, 566, 567, 579, 581, 584, 585, 592, 593, 597, 606, 607, 609, 610, 613, 615, 620, 621, 622, 623, 625, 626, 628, 630, 631, 634, 642, 646, 648, 649, 650, 652, 654, 655, 656, 669, 671, 672, 673, 674, 676, 677, 680, 682, 683, 684, 685, 686], "curs": [488, 491], "curtok": [669, 670, 671, 672, 673, 674, 675, 676], "curvar": [674, 675, 676, 685], "cus": [466, 527], "custom": [478, 481, 483, 486, 487, 488, 540, 543, 545, 551, 559, 579, 581, 585, 607, 630, 634, 636, 637, 641, 649, 651, 654, 657], "customalloc": 534, "customary": [530, 538, 579], "customevent": 651, "customeventmarker": 651, "customeventunstructuredmemory": 651, "customfor": 559, "customfre": 534, "customis": 649, "customised": 481, "customiz": [481, 530, 541, 548, 556, 560, 575, 609, 639, 641], "customized": [547, 560, 579], "customizing": 481, "cut": [474, 530, 646, 654, 677, 686], "cutoff": 518, "cv": 611, "cv_cpu_type_": 597, "cv_signature_xx": 600, "cvdebugrecord": 602, "cvdump": 517, "cve": [581, 623], "cvinfo": 600, "cvpack": 604, "cvt": 592, "cx": 637, "cxa_demangl": 625, "cxx": [479, 486, 491, 550, 565, 571, 593, 619], "cxx11": 613, "cxx14": 486, "cxx_fast_tl": 579, "cxx_fast_tlscc": [473, 579], "cxx_flag": 568, "cxx_status": 486, "cxxcompilelai": 593, "cxxcompilinglai": 593, "cxxfilt": 490, "cxxflag": [498, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676], "cxxlai": 593, "cxxmap": [490, 518], "cy": 513, "cycl": [505, 513, 533, 537, 540, 549, 579, 582, 583, 625, 650], "cycle_frequency": 651, "cyclic": [461, 550, 579, 583], "cyclonemodel": 646, "cygwin": [483, 550, 552], "cypress": 466, "cywritev3": 646, "d0": [487, 513, 579, 646], "d02": 643, "d0o": 535, "d1": [487, 535, 646], "d10": 646, "d11": 646, "d12": [643, 646], "d13": 646, "d14": 646, "d15": [579, 646], "d16": [0, 3, 4, 32, 43, 45, 221, 233, 235, 375, 386, 388], "d16_x": 463, "d16_xy": 463, "d16_xyz": 463, "d16_xyzw": 463, "d2": 646, "d3": [585, 646], "d31": 579, "d32": 618, "d4": [579, 646], "d5": 646, "d57504": 615, "d57896": 614, "d6": [535, 646], "d7": [579, 646], "d7k": 535, "d8": [618, 646], "d9": 646, "d_ctor_bas": 487, "da": [2, 3, 4, 513, 535, 579], "dag": [467, 529, 579, 580, 604, 609, 611, 630, 634, 635, 637, 641, 646], "dagarg": 636, "dagarglist": 636, "dagcombin": 541, "dagiselemitt": 635, "dagrecty": 635, "dagtodag": 541, "dagtodagisel": 541, "damaging": 625, "dan": [0, 1, 2, 3, 4, 5, 6, 7, 8, 652], "danc": 553, "dang": [621, 626], "dangerous": [487, 579, 609, 642], "dangling": [486, 579, 609, 636, 683], "daniel": [563, 625], "danil": 614, "darktabl": 613, "darn": 618, "darwin": [479, 481, 483, 490, 495, 514, 523, 544, 579, 582, 593, 628, 676], "darwin9": 487, "das": 614, "dash": [530, 546, 652], "dasinconsistent": 614, "dat": [19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 63, 66, 87, 96, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 152, 153, 173, 185, 205, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 253, 254, 277, 287, 335, 336, 362, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 406, 409, 432, 442, 463, 464, 465, 468, 469, 470, 471, 472, 477, 478, 479, 480, 482, 485, 486, 490, 495, 499, 513, 514, 515, 516, 517, 519, 521, 522, 523, 526, 527, 529, 530, 534, 540, 541, 542, 544, 545, 546, 547, 548, 550, 552, 554, 559, 560, 569, 571, 572, 580, 581, 582, 583, 584, 585, 590, 593, 596, 597, 601, 602, 604, 605, 608, 611, 612, 613, 614, 616, 617, 618, 619, 620, 623, 625, 628, 630, 632, 634, 636, 637, 639, 641, 646, 648, 650, 654, 655, 656, 670, 671, 672, 674, 675, 676, 682, 683, 684, 685], "data1": 636, "data16bitsdirect": 646, "data32bitsdirect": 646, "data64bitsdirect": 646, "data_alignment_factor": [461, 466], "data_ty": 635, "databas": [579, 605, 617, 652, 677, 686], "datacrc": 597, "dataflow": [481, 579, 625, 674, 685], "datalayout": [473, 547, 579, 592, 593, 643, 646, 654, 655, 656, 657, 682, 683, 684, 685], "datalayoutpass": 676, "dataloc": 579, "dataset": [613, 639], "datastructur": [609, 611], "datatyp": [483, 530, 609, 636, 668, 679], "daunting": 481, "david": [614, 616], "day": [481, 485, 538, 549, 550, 572, 609, 623, 632, 686], "db": 579, "dbaremetal_armv6m_sysroot": 570, "dbaremetal_armv7em_sysroot": 570, "dbaremetal_armv7m_sysroot": 570, "dbg": [477, 575, 579, 585, 609, 646, 676], "dbg_instr_ref": 585, "dbg_valu": [466, 575, 585, 625], "dbgentityhistorycalculator": 625, "dbgopt": 625, "dbgstreamarray": 597, "dbi": [595, 600, 605], "dbi_head": 597, "dbistreamhead": 597, "dbistreamvers": 597, "dbl": 639, "dblty": 676, "dbootstrap_cmake_build_typ": 539, "dbootstrap_cmake_c_flag": 468, "dbootstrap_cmake_cxx_flag": 468, "dbscan": 505, "dbuild": 676, "dbuild_shared_lib": 550, "dbx": 625, "dc": [581, 587], "dce": [488, 530, 534, 541, 579, 615], "dced": 609, "dclang_bootstrap_passthrough": 468, "dclang_bootstrap_target": 539, "dclang_enable_bootstrap": [468, 539], "dclang_enable_proto_fuzz": 546, "dclang_enable_static_analyz": 550, "dclang_tablegen": [569, 571], "dcmake_ar": 570, "dcmake_asm_compiler_target": 570, "dcmake_asm_flag": 570, "dcmake_build_typ": [533, 539, 550, 568, 569, 641, 650], "dcmake_c_compil": [569, 570, 639], "dcmake_c_compiler_external_toolchain": 570, "dcmake_c_compiler_target": 570, "dcmake_c_flag": [568, 569, 570], "dcmake_c_flags_releas": 650, "dcmake_crosscompiling": 571, "dcmake_cxx_compil": 569, "dcmake_cxx_flag": [569, 571, 650], "dcmake_cxx_link_flag": 550, "dcmake_exe_linker_flag": 570, "dcmake_install_prefix": [481, 550, 568, 571], "dcmake_nm": 570, "dcmake_osx_architectur": 550, "dcmake_ranlib": 570, "dcmake_sysroot": 570, "dcmake_toolchain_fil": 550, "dcmake_try_compile_target_typ": 570, "dcomm": 611, "dcompiler_rt_baremetal_build": 570, "dcompiler_rt_build_builtin": 570, "dcompiler_rt_build_libfuzz": 570, "dcompiler_rt_build_profil": 570, "dcompiler_rt_build_sanitizer": 570, "dcompiler_rt_build_xray": 570, "dcompiler_rt_default_target_only": 570, "dcompiler_rt_emulator": 570, "dcompiler_rt_include_test": 570, "dcompiler_rt_os_d": 570, "dcompiler_rt_test_compil": 570, "dcompiler_rt_test_compiler_cflag": 570, "ddg": [537, 617, 618], "ddgbuild": 537, "deactiv": 632, "dead": [469, 483, 530, 543, 545, 550, 557, 575, 579, 580, 582, 585, 592, 594, 609, 625, 630], "deadlin": 485, "deadly": 581, "deadtypeelim": 609, "deal": [470, 473, 481, 486, 531, 534, 538, 544, 554, 559, 560, 573, 607, 609, 625, 634, 648, 649], "dealing": [470, 472, 484, 486, 538, 540, 544, 596, 604, 609, 611, 616, 625, 626, 674, 685], "dealloc": [566, 579, 622], "deallocat": [534, 547, 579, 609], "deallocated": [566, 622], "deallocating": [534, 622], "deallocationtypemismatch": 622, "death": [546, 581], "deb": 571, "debat": 556, "debian": [550, 570, 571, 606], "debian8": 539, "debug": [461, 467, 477, 478, 479, 481, 483, 486, 488, 490, 491, 498, 505, 514, 515, 516, 517, 522, 526, 527, 528, 529, 530, 533, 535, 536, 538, 540, 542, 550, 552, 556, 569, 574, 580, 581, 582, 589, 593, 595, 596, 599, 600, 602, 604, 605, 606, 610, 614, 617, 620, 628, 630, 637, 639, 641, 644, 646, 648, 650, 668, 674, 675, 677, 678, 685, 686], "debug_": 466, "debug_addr": 461, "debug_arang": [461, 466], "debug_count": 609, "debug_fram": [461, 516], "debug_info": [504, 625], "debug_inlin": 489, "debug_level": 530, "debug_lin": 461, "debug_line_str": 461, "debug_loclist": 461, "debug_metadata_vers": 676, "debug_mod": 466, "debug_nam": [461, 625], "debug_pubnam": [489, 595, 625], "debug_pubtyp": [489, 625], "debug_rnglist": 461, "debug_s_crossscopeexport": 517, "debug_s_crossscopeimport": 517, "debug_s_inlineelin": 517, "debug_s_lin": 517, "debug_str": [461, 487, 625], "debug_string": 505, "debug_symbol": 606, "debug_with_typ": 609, "debugability": 550, "debugcount": 609, "debugflag": [530, 609], "debugg": [486, 517, 536, 566, 584, 593, 602, 618, 632, 641, 644, 648, 672, 676, 683, 686], "debuggability": 540, "debugged": 625, "debugger": [461, 466, 477, 483, 517, 536, 556, 605, 614, 625, 676, 678, 686], "debugging": [466, 477, 478, 481, 483, 486, 488, 491, 492, 499, 502, 506, 515, 529, 530, 547, 550, 552, 572, 574, 575, 579, 585, 591, 593, 594, 607, 618, 637, 644, 646, 648, 676, 678, 679], "debuginfo": [481, 550, 579, 602, 611, 618, 641, 676], "debuginfoforprofiling": 579, "debuginfometadat": 625, "debuglev": 530, "debuglevel": 530, "debuglink": 515, "debugloc": [483, 585, 620, 676], "debugstreamarray": 597, "debugtrap": 466, "dec": [523, 609], "decent": [541, 568, 572, 609, 648, 676], "decid": [466, 481, 530, 531, 538, 540, 541, 559, 574, 579, 597, 608, 609, 623, 625, 626, 630, 645, 648, 669, 673, 680, 682, 684], "decided": [461, 472, 579, 595, 623, 630, 652, 674, 685], "deciding": [472, 479, 559, 564, 609], "decimal": [465, 466, 487, 494, 514, 518, 523, 525, 530, 542, 579, 652], "decimal_numb": 466, "decimalinteg": 636, "deciph": 466, "decis": [472, 477, 479, 483, 484, 485, 486, 538, 540, 545, 555, 559, 564, 579, 581, 593, 609, 616, 621, 626, 630, 645, 655, 671, 682], "decl": [529, 573, 637, 670], "decl_in_loop": 579, "declar": [465, 466, 469, 473, 483, 486, 487, 529, 530, 531, 534, 541, 543, 559, 573, 578, 579, 585, 591, 592, 609, 618, 628, 630, 631, 634, 635, 636, 637, 643, 646, 647, 648, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "declarator": 487, "declare_funct": [681, 682, 683, 684, 685], "declared": [461, 465, 466, 530, 579, 607, 609, 625, 631, 634, 636, 637, 646, 648, 669, 670, 671, 672, 673, 674, 675, 676, 685], "declaring": [469, 530, 579, 609], "declaring_vari": 614, "declcontext": 573, "declet": 579, "decltyp": [579, 656], "decod": [473, 513, 521, 522, 579, 625, 639], "decoded": [473, 505, 513], "decodermethod": 636, "decodernamespac": 636, "decoding": 634, "decompos": [541, 579], "decomposed": [466, 538, 604], "decomposing": [559, 630], "decomposit": 505, "decompress": 515, "decorat": 625, "decr": [1, 4, 6, 7, 8, 540, 609], "decreas": [481, 493, 569, 622], "decreased": 572, "decreasing": [479, 579, 596], "decremented": [466, 579], "dedicated": [465, 483, 538, 564, 566, 572, 583, 611, 646], "deduc": [579, 583, 594, 609, 634], "deduced": 642, "deducibl": [466, 545], "dedupl": 597, "dee": 513, "deem": [538, 574], "deemed": [541, 572, 579, 583], "deep": [482, 486, 517, 537, 546, 607, 613, 627, 639, 654], "deeply": 535, "def": [461, 467, 483, 485, 505, 529, 534, 537, 541, 554, 557, 575, 577, 580, 583, 585, 590, 616, 625, 626, 634, 635, 637, 646, 647, 648, 654, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "default": [26, 27, 28, 36, 37, 38, 39, 40, 43, 63, 126, 127, 128, 132, 133, 134, 135, 136, 139, 152, 211, 212, 213, 222, 223, 224, 225, 227, 230, 233, 253, 335, 369, 370, 371, 379, 380, 381, 382, 383, 386, 461, 464, 466, 467, 468, 469, 470, 473, 475, 479, 481, 483, 487, 488, 489, 491, 492, 493, 494, 495, 498, 499, 500, 503, 504, 505, 506, 509, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 525, 526, 527, 529, 530, 531, 534, 538, 541, 542, 545, 546, 547, 550, 552, 562, 565, 566, 567, 569, 570, 571, 573, 575, 578, 579, 581, 584, 585, 587, 592, 593, 606, 608, 609, 610, 611, 618, 620, 622, 623, 625, 626, 628, 630, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 648, 649, 650, 654, 655, 669, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684], "default_branch_weight": 475, "default_float_round": 466, "defaultdest": 579, "defaulted": 579, "defaulting": 516, "defaultlib": 552, "defaultopt": 530, "defeating": 626, "defect": 485, "defend": 626, "defending": 626, "defens": 538, "deferred": [461, 584, 591, 614], "deferrederr": 609, "deferring": [593, 655], "deficienc": 679, "deficiency": 547, "defin": [62, 63, 151, 152, 252, 253, 344, 405, 406, 461, 464, 466, 469, 472, 473, 474, 475, 481, 482, 483, 486, 487, 488, 491, 513, 530, 531, 533, 534, 535, 537, 538, 539, 540, 543, 547, 548, 550, 554, 559, 566, 570, 571, 573, 575, 577, 578, 579, 581, 583, 585, 586, 590, 591, 592, 593, 597, 600, 605, 607, 609, 610, 612, 615, 616, 617, 622, 625, 627, 630, 631, 634, 637, 639, 641, 642, 643, 646, 647, 648, 649, 650, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "define_dwarf": 466, "defined": [48, 142, 238, 391, 461, 464, 465, 466, 468, 469, 470, 473, 478, 481, 482, 483, 486, 487, 491, 495, 497, 513, 514, 515, 518, 529, 530, 531, 534, 535, 537, 538, 540, 541, 542, 543, 547, 548, 550, 554, 555, 556, 557, 558, 559, 566, 573, 574, 577, 582, 583, 585, 590, 591, 592, 594, 596, 597, 600, 602, 606, 607, 609, 610, 614, 618, 622, 625, 628, 629, 630, 631, 634, 635, 636, 637, 640, 642, 643, 646, 647, 648, 649, 651, 652, 654, 655, 668, 669, 670, 671, 672, 675, 676, 677, 678, 679, 680, 681, 682, 683, 686, 687], "defining": [461, 466, 473, 482, 483, 487, 530, 534, 540, 546, 547, 566, 573, 579, 591, 606, 609, 622, 625, 634, 636, 648, 650, 652, 669, 680, 681], "definingaccess": 590, "definit": [465, 466, 470, 472, 473, 475, 482, 483, 487, 489, 502, 505, 514, 517, 529, 530, 534, 537, 541, 547, 554, 555, 557, 558, 559, 566, 577, 579, 582, 585, 590, 591, 593, 607, 609, 622, 625, 630, 634, 635, 637, 643, 646, 647, 648, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "definitely": [533, 574, 579, 583, 590, 609, 622], "defm": [635, 637, 646], "defreg": 505, "defunct": 593, "defvar": 635, "defy": 579, "degener": 579, "degenerat": [607, 674, 685], "degrad": 538, "degraded": 547, "degrading": 632, "degrandmaison": 588, "degre": [470, 538, 539, 545, 567, 626, 645], "deinitializer": 593, "delay": [485, 591, 609, 614, 621, 622, 625], "delayed": [572, 623, 625, 632, 636], "deleg": 612, "delegat": [470, 513, 540, 579, 612], "delet": [461, 469, 477, 483, 487, 495, 506, 507, 543, 550, 565, 569, 575, 579, 590, 591, 592, 609, 611, 622, 625, 648, 670, 671, 672, 673, 674, 681, 682], "delete_all_rpath": 507, "delete_funct": [681, 682, 683, 684, 685], "delete_rpath": 507, "deleteaninstruct": 609, "deleted": [469, 543, 575, 579, 583, 585, 609, 625, 654, 656, 671], "deletesizemismatch": 622, "deleting": [469, 495, 579, 593, 607, 670, 671, 672, 673, 674, 676, 681, 682, 683, 684, 685], "deliberately": [590, 628], "delim": [540, 636], "delimit": 636, "delimited": [482, 550, 579, 587, 636], "delineator": 491, "delt": [478, 513, 574, 651], "deltalinestart": 535, "delv": [671, 682], "delving": 538, "demand": [466, 473, 483, 593, 611, 654, 674, 685], "demanding": 550, "demangl": [479, 490, 494, 499, 514, 516, 521, 522, 527, 581, 625], "demangled": [500, 516, 521, 522, 527, 625], "demangling": [494, 500], "demo": [530, 572, 670, 681], "demonstr": [671, 682], "demonstrat": [535, 550, 579, 601, 609, 625, 646, 670, 671, 681, 682], "demonstrated": [513, 538, 573], "demonstrating": [579, 609], "denisov": 614, "denisovcamelback": 614, "denormal": [466, 531, 579], "denormaliz": 652, "denormalizing": 652, "denot": [461, 473, 547, 550, 579, 601], "denoted": [483, 534, 579, 652], "denoting": [487, 579], "dens": [466, 473, 579, 609, 673, 684], "densely": [473, 579], "densemap": 486, "densemapinfo": 609, "denseset": 593, "density": [486, 673, 684], "deopt": [579, 630], "deopt_arg": 579, "deoptimiz": 630, "dep": [682, 683, 684, 685], "depart": 495, "department": [588, 613], "departur": 611, "depend": [19, 29, 30, 31, 32, 44, 45, 101, 120, 129, 130, 131, 140, 205, 214, 216, 217, 218, 219, 220, 221, 226, 228, 229, 234, 235, 362, 372, 373, 374, 375, 387, 388, 461, 464, 465, 466, 467, 468, 469, 470, 475, 476, 481, 483, 484, 486, 488, 491, 492, 495, 505, 513, 528, 531, 538, 540, 548, 550, 554, 559, 570, 579, 581, 585, 590, 591, 592, 593, 594, 606, 607, 609, 610, 619, 620, 625, 628, 632, 636, 641, 642, 645, 647, 648, 651, 654, 669, 670, 674, 680, 681, 685], "depended": [486, 648], "dependenc": [469, 481, 483, 486, 498, 513, 530, 537, 538, 539, 540, 546, 550, 567, 570, 571, 579, 581, 593, 607, 611, 618, 620, 639, 642, 648], "dependencegraphbuild": 537, "dependency": [461, 481, 483, 513, 517, 529, 537, 558, 579, 593, 611, 626], "dependent": [461, 471, 473, 486, 491, 497, 507, 513, 517, 522, 540, 543, 548, 554, 576, 590, 611, 612, 617, 618, 625, 631, 640, 646, 648, 651], "depending": [32, 43, 45, 50, 54, 99, 145, 221, 233, 235, 244, 304, 309, 314, 337, 353, 375, 386, 388, 397, 445, 462, 464, 465, 466, 469, 470, 483, 491, 495, 513, 518, 534, 538, 540, 545, 547, 554, 555, 566, 567, 570, 571, 577, 579, 584, 594, 596, 601, 609, 611, 622, 630, 632, 640, 646, 648, 670, 681], "depict": 537, "depicted": [513, 537], "deplib": [473, 542], "deploi": 626, "deploy": [623, 626], "deployed": 539, "deploying": [608, 626], "deployment": 626, "deprec": [538, 593, 649], "deprecat": [461, 609, 625], "deprecated": [461, 466, 473, 481, 487, 491, 568, 585, 596, 618, 632, 636, 641, 646], "deprecating": 632, "depth": [96, 185, 287, 442, 478, 483, 487, 504, 517, 530, 565, 579, 583, 591, 607, 611, 613, 629, 634, 637, 655, 672, 683], "deref_bytes_nod": 579, "dereferencability": 545, "dereference": [473, 545], "dereferenceability": 579, "dereferenceable_byt": 579, "dereferenceable_or_null": 473, "dereferenced": [461, 482, 566, 579, 607, 609], "dereferencing": [461, 544, 579, 609], "dereferent": [461, 466, 482, 548, 579, 609, 625, 654], "deriv": [466, 483, 486, 573, 579, 584, 608, 609, 625, 630, 634, 635, 648], "derived": [466, 515, 538, 547, 573, 577, 579, 580, 607, 608, 625, 634, 635, 636, 637, 642, 655, 668, 679], "derivedtyp": [541, 609, 670, 671, 672, 673, 674, 675], "deriving": [634, 648], "desc": [466, 530, 646, 648], "descend": [540, 553], "descending": 579, "descent": [669, 673, 678, 679, 680, 684], "descreas": 464, "describ": [0, 2, 3, 5, 461, 462, 463, 464, 465, 466, 472, 473, 474, 479, 482, 483, 486, 490, 491, 513, 530, 531, 534, 535, 537, 538, 540, 541, 542, 544, 546, 547, 548, 549, 550, 553, 554, 559, 561, 562, 572, 573, 574, 577, 579, 580, 582, 584, 585, 589, 590, 591, 592, 595, 596, 597, 601, 605, 607, 609, 611, 617, 618, 620, 623, 625, 630, 635, 636, 637, 642, 643, 644, 646, 647, 648, 649, 651, 657, 669, 670, 671, 672, 673, 675, 676, 678, 679, 680, 681, 682, 683, 684, 686], "described": [46, 47, 48, 54, 114, 141, 142, 145, 201, 236, 237, 238, 239, 244, 303, 389, 390, 391, 392, 397, 460, 461, 462, 463, 465, 466, 470, 473, 475, 479, 483, 486, 487, 491, 492, 504, 515, 517, 530, 531, 533, 534, 535, 537, 538, 540, 544, 546, 554, 560, 565, 573, 575, 577, 579, 582, 584, 585, 591, 593, 594, 597, 600, 601, 602, 604, 608, 610, 614, 621, 625, 626, 628, 630, 634, 635, 636, 642, 646, 647, 648, 649, 651, 654, 656, 671, 672, 682, 683], "describing": [461, 473, 486, 487, 501, 535, 540, 547, 550, 575, 579, 585, 593, 597, 600, 604, 609, 616, 620, 625, 630, 634, 637, 644, 652, 679], "descript": [1, 5, 6, 7, 8, 20, 48, 54, 59, 60, 64, 96, 114, 121, 142, 145, 149, 185, 201, 206, 238, 239, 244, 249, 250, 287, 303, 345, 363, 391, 392, 397, 402, 403, 407, 442, 460, 462, 463, 464, 465, 466, 469, 470, 473, 479, 482, 485, 486, 490, 530, 535, 539, 540, 547, 550, 555, 559, 562, 566, 567, 573, 574, 579, 580, 591, 592, 595, 607, 608, 609, 617, 622, 623, 625, 628, 634, 635, 636, 637, 639, 644, 646, 649, 651, 675, 676, 688], "descriptor": [461, 473, 513, 579, 593, 597, 625, 628, 646, 676], "deserializ": 634, "deserv": [545, 579], "design": [479, 485, 486, 488, 513, 533, 534, 538, 540, 547, 548, 549, 579, 595, 599, 609, 612, 614, 617, 625, 626, 628, 630, 631, 637, 643, 644, 652, 677, 678, 679, 686], "designat": 534, "designated": [483, 534, 567, 580, 585, 623, 625, 628, 648], "designed": [469, 470, 477, 478, 483, 486, 487, 491, 513, 530, 535, 538, 540, 543, 545, 547, 576, 578, 579, 581, 585, 601, 607, 609, 610, 612, 616, 617, 620, 622, 625, 626, 628, 637, 640, 646, 647, 648, 674, 685], "designer": [636, 678], "designing": [486, 491, 588, 611, 644, 648], "desir": [461, 466, 481, 486, 489, 579, 581, 594, 609, 614, 626, 628, 630, 648, 677, 686], "desired": [461, 466, 470, 477, 481, 487, 489, 491, 504, 542, 545, 547, 577, 579, 581, 584, 607, 612, 620, 621, 625, 626, 628, 630, 634, 635, 636, 641, 646, 648], "desktop": [606, 641], "despit": [470, 483, 530, 569, 579, 611, 614, 625, 626, 630, 637, 648, 651], "dest": [579, 675], "dest1": 579, "dest2": 579, "dest_bas": 630, "dest_offset": 630, "destarglist": 579, "destin": [61, 150, 251, 343, 404, 462, 463, 464, 465, 466, 475, 483, 495, 540, 542, 545, 555, 575, 579, 626, 630, 641, 646, 674, 675, 676, 685], "destreg": 483, "destroy": [540, 543, 578, 579, 585, 646, 652], "destroyed": [483, 534, 564, 593, 609], "destroying": 534, "destruct": [534, 578, 625, 626, 628], "destructed": 609, "destructively": [628, 677, 686], "destructor": [486, 531, 534, 540, 543, 579, 609, 614, 625, 648], "detail": [461, 464, 469, 470, 474, 476, 481, 482, 483, 484, 487, 492, 497, 504, 505, 513, 517, 518, 521, 529, 530, 531, 534, 538, 539, 540, 543, 546, 547, 548, 549, 550, 566, 567, 573, 574, 579, 580, 581, 582, 588, 589, 591, 592, 593, 594, 597, 601, 604, 607, 609, 610, 611, 613, 614, 623, 630, 631, 632, 634, 637, 639, 641, 642, 646, 647, 648, 649, 650, 652, 655, 656, 657, 670, 673, 674, 677, 678, 679, 681, 684, 685, 686], "detailed": [54, 145, 244, 397, 463, 466, 477, 481, 483, 485, 486, 491, 513, 529, 530, 547, 550, 552, 566, 569, 579, 591, 597, 609, 617, 621, 622, 626, 635, 646], "detailing": 531, "detect": [481, 499, 500, 505, 513, 518, 531, 571, 579, 581, 583, 589, 591, 593, 608, 609, 616, 617, 622, 625, 626, 629, 641, 645, 649, 651, 671, 682], "detect_leak": 581, "detected": [481, 487, 491, 502, 531, 566, 579, 581, 589, 591, 609, 622], "detecthost": 654, "detecting": [466, 513, 566, 613], "detector": [579, 589, 591], "determin": [461, 466, 469, 470, 473, 478, 483, 494, 495, 501, 513, 515, 528, 534, 535, 538, 540, 557, 558, 559, 572, 573, 574, 577, 579, 584, 591, 592, 593, 594, 595, 597, 604, 607, 609, 610, 621, 623, 625, 628, 629, 630, 634, 635, 636, 641, 642, 643, 646, 648, 651, 652, 669, 670, 672, 673, 680, 681, 683, 684], "determined": [461, 466, 473, 481, 491, 492, 534, 535, 538, 562, 572, 579, 592, 593, 594, 599, 604, 609, 616, 621, 625, 626, 631, 640, 652], "determining": [461, 466, 469, 483, 491, 572, 579, 625], "determinism": [481, 581, 622], "deterministic": [468, 469, 477, 479, 483, 495, 515, 526, 579, 581, 609, 634], "deterministicfiniteautomaton": 614, "detr": 614, "detrimental": 486, "dev": [470, 485, 492, 493, 533, 538, 541, 545, 547, 549, 566, 571, 588, 608, 609, 611, 614, 616, 623, 625, 630, 632, 648, 650, 675, 677, 686], "devbuff": 592, "devbufferb": 592, "devbufferc": 592, "devcount": 592, "devel": 619, "develop": [479, 481, 483, 484, 485, 533, 540, 547, 548, 549, 550, 559, 570, 582, 589, 611, 618, 621, 625, 632, 634, 636, 637, 640, 649], "developed": [473, 483, 538, 553, 593, 606, 611, 612, 626, 631, 650], "developer": [461, 476, 481, 482, 485, 486, 533, 538, 545, 549, 567, 572, 574, 579, 588, 606, 610, 611, 614, 616, 625, 631, 632, 649], "developing": [530, 550, 552, 611, 630, 687], "development": [466, 479, 481, 482, 485, 515, 526, 532, 539, 545, 547, 550, 568, 581, 582, 589, 593, 612, 613, 615, 620, 632, 653, 655, 656, 657, 674, 685, 687], "deviat": [483, 486, 542], "devic": [461, 464, 466, 471, 496, 503, 506, 510, 528, 568, 592, 593], "device_enqueue_symbol": 466, "device_fn": 531, "device_only": 531, "devirtualiz": [579, 643], "devirtualized": 579, "devis": 610, "devmajor": 592, "devmeeting": 561, "devminor": 592, "devoid": 483, "dexonsmith": 625, "dfa": [483, 529, 614, 634], "dfapacketiz": 483, "dform_1": 483, "dfpreg": 646, "dfpregsclass": 646, "dfpregsregclass": 646, "dfpregsregisterclass": 646, "dgpu": 466, "dgwp_asan_default_opt": 566, "dh": 637, "di": [461, 481, 504, 512, 517, 527, 575, 625, 637, 656, 676], "di_index": 579, "diag": 529, "diagnos": [579, 645], "diagnosed": [502, 513], "diagnosing": [487, 513, 648], "diagnostic": [486, 487, 490, 491, 492, 502, 529, 581, 589, 609, 634, 637], "diagnosticinfooptimiz": 620, "diagram": [537, 560, 601, 645], "dialect": [529, 579, 587, 634], "diamond": 575, "dian": [563, 614], "dibasictyp": [575, 625], "dibuild": [625, 676], "dicing": 609, "dicompileun": [575, 625, 676], "dict": 581, "dictated": [461, 486, 609, 624], "dictionary": [491, 579, 581, 634], "dictionary_fil": 581, "did": [461, 466, 469, 486, 534, 538, 540, 546, 573, 579, 583, 591, 609, 611, 620, 648, 655, 671, 673, 674, 677, 682, 684, 685, 686], "didn": [483, 531, 536, 545, 546, 579, 591, 609, 625, 626, 647, 648, 670, 674, 680, 681, 685], "die_offset_bas": 625, "diego": 478, "diegotf": 478, "diexpress": [466, 575, 585, 625], "diff": [461, 465, 472, 485, 486, 490, 504, 533, 538, 539, 547, 550, 579, 607, 608, 609, 611, 612, 623, 630, 639, 641, 646], "differ": [13, 97, 186, 288, 323, 352, 443, 462, 466, 477, 478, 513, 534, 537, 555, 556, 559, 573, 579, 591, 595, 607, 628, 641, 674, 685], "different": [221, 233, 235, 461, 463, 464, 465, 466, 467, 468, 472, 473, 474, 475, 477, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 497, 499, 502, 504, 505, 512, 513, 515, 516, 517, 523, 524, 526, 527, 530, 532, 534, 535, 537, 538, 539, 540, 541, 542, 543, 545, 547, 550, 552, 553, 554, 555, 559, 560, 564, 569, 572, 573, 576, 577, 579, 581, 582, 583, 584, 585, 588, 591, 592, 593, 594, 595, 597, 604, 607, 608, 609, 611, 614, 617, 619, 620, 621, 622, 623, 625, 626, 628, 631, 632, 634, 636, 637, 639, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 671, 672, 674, 675, 676, 677, 681, 682, 683, 684, 685, 686], "differential": [485, 608, 612], "differentiat": 542, "differently": [461, 516, 527, 540, 579, 625, 651, 656, 670], "differing": [469, 484, 579, 625], "difficult": [461, 469, 470, 486, 530, 538, 540, 559, 560, 570, 579, 582, 586, 593, 594, 609, 611, 613, 614, 625, 627, 635, 676, 684], "diffing": 607, "difil": [575, 625, 676], "diflagartificial": 579, "diflagfwddecl": 579, "diflagprototyped": [579, 625], "diflagpublic": 625, "diflagvector": 579, "difwddecl": 579, "dig": [514, 530, 579, 679], "digit": [466, 487, 579, 589, 635], "diglobalvari": 625, "digress": [673, 684], "dijkstr": 613, "dil": [542, 637], "dilexicalblock": 625, "diloc": [487, 575, 585, 625, 676], "dilocalvari": [575, 585, 625, 676], "dim": [0, 19, 579], "dimens": [63, 120, 152, 205, 253, 362, 406, 464, 466, 579], "dimensional": [19, 120, 205, 362, 464, 548, 592, 673, 684], "diminish": 625, "dimitry": 623, "dimodul": 618, "dindex": 646, "dinkumwar": 609, "dinod": [579, 625, 676], "dinstall_gwp_asan_stub": 566, "diplom": 616, "dir": [468, 481, 491, 499, 509, 515, 546, 550, 570, 571, 579, 581, 610, 619, 625, 639], "dir1": [466, 581], "dir2": [466, 581], "dir3": 466, "dir4": 466, "dir_to_mount": 471, "direct": [461, 480, 481, 482, 486, 488, 491, 505, 513, 522, 529, 530, 534, 538, 540, 545, 546, 556, 560, 570, 575, 591, 604, 609, 611, 618, 619, 625, 626, 630, 631, 635, 636, 637, 640, 642, 646, 648, 652, 674, 685], "directed": [483, 484, 529, 537, 580, 604, 609, 642, 646], "directedgraph": 537, "directing": 626, "directly": [40, 136, 230, 383, 461, 466, 470, 473, 481, 483, 485, 486, 490, 497, 498, 513, 527, 530, 534, 538, 540, 542, 545, 546, 547, 548, 550, 552, 560, 562, 564, 565, 567, 578, 579, 585, 590, 592, 593, 594, 595, 597, 599, 607, 608, 609, 610, 611, 616, 620, 621, 622, 623, 625, 628, 630, 631, 632, 634, 635, 636, 637, 639, 646, 648, 649, 650, 651, 654, 655, 656, 657, 670, 671, 672, 673, 674, 682, 683, 684, 685], "director": [466, 481, 491, 499, 509, 527, 550, 553, 581, 585, 602, 610, 611, 631, 637, 639, 640, 641], "directory": [466, 468, 480, 481, 482, 483, 486, 489, 491, 495, 498, 499, 509, 515, 522, 527, 529, 531, 538, 545, 549, 552, 553, 565, 567, 569, 570, 571, 572, 575, 579, 581, 597, 602, 605, 609, 610, 611, 614, 618, 619, 620, 625, 631, 632, 637, 638, 639, 640, 641, 646, 647, 648, 649, 676], "dirnam": 509, "dirty": 597, "dis": [490, 496, 497, 516, 550, 552, 641, 674, 685], "disabl": [239, 392, 466, 469, 471, 472, 477, 481, 486, 487, 488, 491, 492, 493, 499, 505, 514, 515, 516, 526, 528, 530, 550, 560, 565, 571, 574, 581, 590, 594, 606, 609, 618, 619, 622, 630, 639, 641, 642, 647, 649, 672, 676, 683], "disable_assert": 606, "disable_nonforced": 642, "disabled": [464, 465, 466, 471, 481, 486, 513, 535, 547, 550, 572, 575, 579, 581, 606, 609, 619, 632, 639, 641, 642, 645, 649, 672, 683], "disableencoding": [636, 637], "disablelazycompil": 609, "disabling": [477, 481, 579, 619, 649], "disadvantag": [530, 576, 582, 583, 609], "disagre": [484, 485, 538, 579, 623, 625], "disallow": [530, 579, 628, 630], "disallowed": 548, "disambiguat": [469, 545, 583, 590], "disambiguated": 590, "disambiguating": 554, "disappear": [543, 550, 625], "disappearing": 568, "disassembl": [480, 490, 516, 529, 550, 552, 579, 581, 587], "disassembled": [480, 519, 587], "disassembler": [483, 546, 587], "disassembleremitt": 634, "disassembling": [483, 516], "disassembly": [480, 516, 519, 579, 609, 617], "discard": [461, 478, 515, 526, 542, 579, 616, 630, 657], "discarded": [461, 465, 483, 487, 515, 526, 530, 534, 542, 550, 555, 579, 611], "discarding": [559, 579, 609], "discharge": 545, "discharged": 545, "disclaim": [482, 538], "disclos": 623, "disclosed": 623, "disclosing": [621, 623], "disclosur": [538, 621], "discontiguous": 601, "discop": 676, "discord": 538, "discourag": [609, 621, 631], "discouraged": [486, 530, 538, 579, 609], "discours": 538, "discov": [461, 483, 491, 505, 547, 581, 602, 625], "discover": [534, 539, 581], "discovered": [491, 572, 581, 632, 672, 674, 683, 685], "discovering": [491, 626, 631], "discret": 623, "discrimin": 651, "discriminat": [573, 579], "discriminated": [483, 651], "discriminator": [486, 527, 573, 579, 634], "discriminatory": 484, "discuss": [461, 485, 486, 530, 533, 538, 549, 550, 551, 552, 573, 575, 579, 588, 593, 601, 604, 609, 611, 615, 621, 625, 626, 630, 648, 655, 656, 669, 680], "discussed": [482, 484, 487, 513, 530, 534, 535, 538, 546, 556, 594, 597, 599, 608, 609, 621, 625, 626, 628, 646, 648, 649], "discussing": [538, 559, 623, 626, 678], "disjoint": [461, 466, 469, 537, 555, 579, 583, 590], "disjointed": 645, "disk": [461, 466, 486, 491, 505, 536, 550, 579, 581, 582, 597, 601, 602, 604, 611, 625, 631, 649, 654], "dislik": 538, "disp32": [483, 618], "disp8": 618, "dispatch": [540, 579, 593, 609, 626, 628, 669, 680], "dispatch1": 579, "dispatch2": [540, 579], "dispatched": [466, 513, 540, 579, 593, 609], "dispatching": 466, "dispatchwidth": 513, "dispel": 548, "dispflagdefinit": 625, "dispflagdeleted": 625, "dispflagelemental": 625, "dispflagpur": 625, "dispflagrecurs": 625, "displac": [461, 483, 579, 618, 636], "display": [482, 483, 484, 486, 489, 491, 495, 499, 500, 504, 505, 507, 509, 511, 514, 515, 516, 517, 518, 521, 522, 523, 525, 526, 530, 535, 538, 567, 573, 587, 607, 625, 634, 639, 646, 668, 679], "displayed": [497, 499, 511, 513, 516, 517, 518, 523, 620], "displaying": [483, 499, 504, 513, 517, 521, 522, 640], "disponibl": [0, 1, 2, 3, 4, 5, 6, 7, 8], "disposit": 538, "disproportionat": 625, "disregard": 623, "disrepair": 632, "disrupt": 586, "disrupting": 626, "dissassembler": 479, "dissect": 592, "dissected": 535, "dissemin": 623, "distanc": [516, 579, 609, 622, 652, 657], "distilled": 641, "distinct": [461, 466, 469, 473, 483, 487, 501, 504, 537, 538, 540, 548, 554, 560, 566, 575, 579, 607, 609, 616, 622, 625, 636, 641, 642, 646, 670, 681], "distinctly": 554, "distinguish": [461, 472, 477, 535, 538, 554, 562, 579, 583, 609, 614, 630, 631, 677, 686], "distinguished": [461, 534, 554, 579, 609], "distinguishing": 473, "distracting": 538, "distribu": [468, 474, 482, 488, 491, 513, 518, 531, 533, 536, 538, 539, 543, 549, 550, 551, 570, 571, 579, 592, 618, 620, 626, 637, 648, 649], "distribut": [479, 538, 543, 550, 611, 623, 642, 644, 648], "distributed": [474, 479, 486, 513, 538, 539, 550, 552, 579, 639, 642, 649], "distributionexampl": 479, "distributor": 623, "distringtyp": 625, "distros": [569, 571], "disturb": 632, "disubprogram": [575, 625, 676], "disubroutinetyp": [575, 625, 676], "dityp": 676, "div": [464, 483, 487, 579, 668, 678, 679], "divari": 579, "diverg": [548, 673, 684], "divergent": [461, 466, 579, 594], "divers": [569, 632], "divid": [466, 483, 487, 491, 531, 541, 579, 607, 631, 632, 645], "divided": [461, 474, 483, 487, 518, 534, 579, 605, 635, 639], "dividend": [483, 531, 579], "dividing": [466, 497, 513], "diving": 573, "divis": [465, 466, 483, 579, 673, 684], "divisionbyzero": 579, "divisor": [531, 579], "django": [484, 621], "dl": [483, 593, 613, 637, 654, 655, 656, 657], "dlc": [0, 466], "dlclos": [581, 593], "dlibfuzzer_en": 581, "dlibfuzzer_enable_test": 581, "dll": [473, 540, 593, 597, 641], "dllc": [575, 641], "dllexport": [473, 579, 671, 672, 673, 674, 675, 676], "dllexported": 579, "dllimport": [473, 579], "dllstorageclass": [473, 579], "dllvm_binutils_incd": 565, "dllvm_build_instrumented": 569, "dllvm_build_runtim": [546, 550, 569], "dllvm_build_static": 471, "dllvm_config_path": 570, "dllvm_default_target_tripl": 571, "dllvm_dir": 481, "dllvm_enable_assert": [533, 550, 568, 641], "dllvm_enable_backtrac": 550, "dllvm_enable_doxygen": 481, "dllvm_enable_doxygen_qt_help": 481, "dllvm_enable_pic": 571, "dllvm_enable_project": [550, 611], "dllvm_enable_sphinx": 550, "dllvm_experimental_targets_to_build": 646, "dllvm_external_bar_source_d": 481, "dllvm_external_foo_source_d": 481, "dllvm_external_project": 481, "dllvm_include_exampl": 550, "dllvm_include_test": 550, "dllvm_integrated_crt_alloc": 481, "dllvm_libdir_suffix": 481, "dllvm_local_rpath": 550, "dllvm_optimized_tablegen": 550, "dllvm_parallel_link_job": 550, "dllvm_profdata_fil": 569, "dllvm_tablegen": [569, 571], "dllvm_target_arch": 571, "dllvm_targets_to_build": [481, 539, 550, 568, 571], "dllvm_use_crt_releas": 481, "dllvm_use_link": [481, 550], "dllvm_use_sanitiz": 546, "dllvm_use_sanitize_coverag": 546, "dllvm_use_split_dwarf": 550, "dloc": 487, "dlopen": 593, "dlsym": [671, 682], "dmacro1": 636, "dmacro3": 636, "dmask": [0, 2, 3, 4, 29, 30, 31, 32, 44, 45, 129, 130, 131, 140, 218, 219, 220, 221, 234, 235, 372, 373, 374, 375, 387, 388], "dmb": 470, "dmlc": 613, "dmpqrstx": 495, "dnam": 530, "do": [221, 233, 235, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 495, 496, 499, 500, 502, 505, 507, 513, 514, 515, 516, 518, 521, 522, 526, 527, 529, 530, 531, 533, 534, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 550, 552, 553, 554, 555, 556, 558, 559, 560, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 600, 601, 602, 604, 608, 609, 610, 611, 612, 613, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 634, 635, 636, 637, 639, 640, 641, 642, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "do_on": 534, "do_safepoint": 630, "do_something": 583, "do_something_with_t": 544, "do_two": 534, "doc": [467, 481, 486, 529, 535, 541, 549, 550, 553, 569, 570, 571, 572, 579, 581, 586, 611, 614, 615, 618, 627, 639, 652, 654, 675], "dockerfil": 644, "dockerized": 539, "doclist": 652, "docu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 461, 463, 464, 465, 466, 469, 470, 472, 473, 474, 478, 479, 481, 482, 483, 484, 486, 490, 505, 529, 530, 531, 535, 538, 540, 541, 542, 547, 548, 550, 552, 553, 554, 564, 567, 568, 570, 571, 572, 573, 574, 575, 577, 579, 580, 582, 584, 585, 586, 589, 590, 592, 593, 595, 596, 599, 601, 604, 606, 607, 609, 617, 618, 619, 621, 623, 625, 627, 628, 630, 631, 632, 635, 636, 641, 643, 644, 646, 648, 649, 650, 651, 671, 682], "document": [464, 470, 479, 481, 482, 529, 532, 533, 535, 538, 539, 541, 546, 547, 549, 550, 552, 555, 556, 567, 569, 573, 579, 581, 585, 586, 592, 609, 611, 613, 614, 617, 618, 625, 627, 630, 633, 634, 635, 638, 639, 641, 644, 648, 670, 671, 676, 682], "documented": [466, 476, 478, 479, 486, 537, 538, 547, 550, 552, 579, 580, 611, 625, 628, 630], "documenting": [486, 627, 634], "documentlist": 652, "documentlisttrait": 652, "dodging": 487, "doesn": [469, 470, 472, 475, 476, 477, 478, 482, 483, 484, 486, 487, 491, 495, 513, 530, 531, 533, 535, 538, 539, 540, 543, 545, 547, 548, 550, 553, 555, 558, 559, 562, 565, 573, 574, 579, 583, 585, 590, 599, 609, 611, 614, 623, 625, 626, 628, 630, 631, 632, 641, 648, 650, 652, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "dofinaliz": 646, "dog": [530, 614], "doing": [468, 469, 476, 481, 483, 485, 486, 487, 493, 505, 510, 528, 530, 533, 538, 541, 544, 545, 547, 550, 557, 569, 570, 573, 575, 579, 582, 583, 590, 609, 621, 625, 626, 630, 631, 636, 642, 648, 649, 650, 655, 656, 668, 670, 671, 673, 676, 677, 679, 681, 686], "doinitializ": [581, 646, 655, 656, 657, 671, 672, 673, 674, 676], "dollar": [568, 636], "domain": [483, 547, 554, 579, 626, 636, 637, 646, 677, 686], "domin": [583, 590, 674, 685], "dominat": [506, 547, 579, 583, 590], "dominated": [579, 583, 607, 639], "dominating": [583, 590], "dominator": [531, 609, 647, 648], "dominatorset": 648, "dominatortre": [614, 648], "dominatortreebas": 609, "don": [0, 2, 3, 4, 461, 466, 467, 469, 470, 471, 476, 477, 478, 479, 481, 482, 483, 484, 487, 489, 491, 493, 505, 513, 514, 517, 527, 528, 530, 531, 533, 535, 538, 539, 540, 541, 545, 547, 550, 553, 555, 557, 559, 566, 568, 569, 572, 573, 574, 577, 579, 581, 582, 583, 584, 585, 586, 590, 591, 592, 593, 595, 606, 607, 608, 609, 611, 619, 621, 623, 624, 625, 627, 629, 630, 632, 634, 636, 639, 640, 641, 643, 645, 647, 648, 649, 651, 652, 654, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "dooneiter": 477, "door": 573, "doorbel": 466, "dootherthing": 486, "dopartialredundancyelimin": 530, "dor": [616, 645], "dosomething": [486, 626], "dosomethinginterestingwithmyap": 581, "dot": [513, 572, 608, 609, 618, 625, 649, 650], "doubl": [465, 466, 473, 475, 483, 487, 530, 531, 532, 552, 554, 573, 579, 585, 591, 609, 618, 622, 634, 646, 652, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "double_typ": [681, 682, 683, 684, 685], "doublescalarty": 579, "doubletyp": 609, "doubleword": 579, "doubling": 607, "doubly": [482, 609, 624], "doubt": [573, 586, 627, 632], "dovetail": [674, 685], "down": [469, 470, 472, 475, 477, 483, 484, 488, 492, 493, 530, 535, 538, 540, 548, 550, 560, 562, 573, 574, 579, 581, 590, 591, 594, 606, 607, 608, 609, 611, 616, 625, 637, 640, 646, 648, 649, 653, 654, 656, 669, 672, 673, 675, 676, 677, 678, 680, 683, 684, 686], "downcast": 573, "downgraded": 632, "download": [481, 538, 539, 550, 552, 565, 567, 570, 571, 572, 581, 609, 618, 619, 641], "download_link": 613, "download_prerequisit": 550, "downloaded": [618, 646], "downsid": [538, 581, 609], "downstream": [474, 485, 502, 611, 632], "downward": 579, "doxgyen": 481, "doxing": 484, "doxygen": [481, 546, 550, 552, 573, 609, 617, 635], "dozen": [545, 568, 609], "dpp": 463, "dpp16_ctrl": [0, 1], "dpp8_sel": [0, 1], "dpp_ctrl": [3, 4, 7, 8], "dr": [461, 542], "draft": [470, 478, 484, 555, 579, 621, 625], "dragging": 608, "dragonegg": [483, 538], "dramatic": 626, "dramatically": [486, 492, 530, 550, 579, 609, 626, 671, 682], "drastically": 631, "draw": [466, 512], "drawback": [482, 530, 538, 609, 657], "drectv": 522, "driv": [466, 479, 499, 531, 532, 565, 568, 570, 571, 581, 582, 592, 594, 610, 616, 623, 641, 668, 671, 672, 673, 674, 675, 676, 679, 682, 683, 684, 685], "driven": [483, 487, 530, 534, 607, 641, 646, 671, 674, 677, 679, 682, 685, 686], "driving": [612, 616, 623, 630], "drop": [486, 490, 507, 509, 515, 523, 525, 526, 538, 579, 585, 608, 618, 641], "dropdown": 608, "droploc": 575, "dropped": [518, 538, 579, 585, 609, 625, 642], "dropping": [538, 575, 579], "drowned": 640, "dry": [569, 614], "ds": 466, "ds_add_f32": [0, 3, 4], "ds_add_rtn_f32": [0, 3, 4], "ds_add_rtn_u32": [0, 2, 3, 4], "ds_add_rtn_u64": [0, 2, 3, 4], "ds_add_src2_f32": [0, 3, 4], "ds_add_src2_u32": [0, 2, 3, 4], "ds_add_src2_u64": [0, 2, 3, 4], "ds_add_u32": [0, 2, 3, 4, 466], "ds_add_u64": [0, 2, 3, 4], "ds_and_b32": [0, 2, 3, 4], "ds_and_b64": [0, 2, 3, 4], "ds_and_rtn_b32": [0, 2, 3, 4], "ds_and_rtn_b64": [0, 2, 3, 4], "ds_and_src2_b32": [0, 2, 3, 4], "ds_and_src2_b64": [0, 2, 3, 4], "ds_append": [0, 2, 3, 4], "ds_atomic": 466, "ds_bpermute_b32": [0, 3, 4], "ds_cmpst_b32": [0, 2, 3, 4], "ds_cmpst_b64": [0, 2, 3, 4], "ds_cmpst_f32": [0, 2, 3, 4, 466], "ds_cmpst_f64": [0, 2, 3, 4], "ds_cmpst_rtn_b32": [0, 2, 3, 4], "ds_cmpst_rtn_b64": [0, 2, 3, 4], "ds_cmpst_rtn_f32": [0, 2, 3, 4], "ds_cmpst_rtn_f64": [0, 2, 3, 4], "ds_condxchg32_rtn_b64": [0, 2, 3, 4], "ds_consum": [0, 2, 3, 4], "ds_dec_rtn_u32": [0, 2, 3, 4], "ds_dec_rtn_u64": [0, 2, 3, 4], "ds_dec_src2_u32": [0, 2, 3, 4], "ds_dec_src2_u64": [0, 2, 3, 4], "ds_dec_u32": [0, 2, 3, 4], "ds_dec_u64": [0, 2, 3, 4], "ds_gws_barri": [0, 2, 3, 4], "ds_gws_in": [0, 2, 3, 4], "ds_gws_sema_br": [0, 2, 3, 4], "ds_gws_sema_p": [0, 2, 3, 4], "ds_gws_sema_release_all": [0, 2, 3, 4], "ds_gws_sema_v": [0, 2, 3, 4], "ds_inc_rtn_u32": [0, 2, 3, 4], "ds_inc_rtn_u64": [0, 2, 3, 4], "ds_inc_src2_u32": [0, 2, 3, 4], "ds_inc_src2_u64": [0, 2, 3, 4], "ds_inc_u32": [0, 2, 3, 4], "ds_inc_u64": [0, 2, 3, 4], "ds_load": 466, "ds_max_f32": [0, 2, 3, 4], "ds_max_f64": [0, 2, 3, 4], "ds_max_i32": [0, 2, 3, 4], "ds_max_i64": [0, 2, 3, 4], "ds_max_rtn_f32": [0, 2, 3, 4], "ds_max_rtn_f64": [0, 2, 3, 4], "ds_max_rtn_i32": [0, 2, 3, 4], "ds_max_rtn_i64": [0, 2, 3, 4], "ds_max_rtn_u32": [0, 2, 3, 4], "ds_max_rtn_u64": [0, 2, 3, 4], "ds_max_src2_f32": [0, 2, 3, 4], "ds_max_src2_f64": [0, 2, 3, 4], "ds_max_src2_i32": [0, 2, 3, 4], "ds_max_src2_i64": [0, 2, 3, 4], "ds_max_src2_u32": [0, 2, 3, 4], "ds_max_src2_u64": [0, 2, 3, 4], "ds_max_u32": [0, 2, 3, 4], "ds_max_u64": [0, 2, 3, 4], "ds_min_f32": [0, 2, 3, 4], "ds_min_f64": [0, 2, 3, 4], "ds_min_i32": [0, 2, 3, 4], "ds_min_i64": [0, 2, 3, 4], "ds_min_rtn_f32": [0, 2, 3, 4], "ds_min_rtn_f64": [0, 2, 3, 4, 466], "ds_min_rtn_i32": [0, 2, 3, 4], "ds_min_rtn_i64": [0, 2, 3, 4], "ds_min_rtn_u32": [0, 2, 3, 4], "ds_min_rtn_u64": [0, 2, 3, 4], "ds_min_src2_f32": [0, 2, 3, 4], "ds_min_src2_f64": [0, 2, 3, 4], "ds_min_src2_i32": [0, 2, 3, 4], "ds_min_src2_i64": [0, 2, 3, 4], "ds_min_src2_u32": [0, 2, 3, 4], "ds_min_src2_u64": [0, 2, 3, 4], "ds_min_u32": [0, 2, 3, 4], "ds_min_u64": [0, 2, 3, 4], "ds_mskor_b32": [0, 2, 3, 4], "ds_mskor_b64": [0, 2, 3, 4], "ds_mskor_rtn_b32": [0, 2, 3, 4], "ds_mskor_rtn_b64": [0, 2, 3, 4], "ds_nop": [0, 2, 3, 4], "ds_or_b32": [0, 2, 3, 4], "ds_or_b64": [0, 2, 3, 4], "ds_or_rtn_b32": [0, 2, 3, 4], "ds_or_rtn_b64": [0, 2, 3, 4], "ds_or_src2_b32": [0, 2, 3, 4], "ds_or_src2_b64": [0, 2, 3, 4], "ds_ordered_count": [0, 2, 3, 4], "ds_permute_b32": [0, 3, 4], "ds_read2_b32": [0, 2, 3, 4], "ds_read2_b64": [0, 2, 3, 4], "ds_read2st64_b32": [0, 2, 3, 4], "ds_read2st64_b64": [0, 2, 3, 4], "ds_read_addtid_b32": [0, 4], "ds_read_b128": [0, 2, 3, 4], "ds_read_b32": [0, 2, 3, 4], "ds_read_b64": [0, 2, 3, 4], "ds_read_b96": [0, 2, 3, 4], "ds_read_i16": [0, 2, 3, 4], "ds_read_i8": [0, 2, 3, 4], "ds_read_i8_d16": [0, 4], "ds_read_i8_d16_h": [0, 4], "ds_read_u16": [0, 2, 3, 4], "ds_read_u16_d16": [0, 4], "ds_read_u16_d16_h": [0, 4], "ds_read_u8": [0, 2, 3, 4], "ds_read_u8_d16": [0, 4], "ds_read_u8_d16_h": [0, 4], "ds_rsub_rtn_u32": [0, 2, 3, 4], "ds_rsub_rtn_u64": [0, 2, 3, 4], "ds_rsub_src2_u32": [0, 2, 3, 4], "ds_rsub_src2_u64": [0, 2, 3, 4], "ds_rsub_u32": [0, 2, 3, 4], "ds_rsub_u64": [0, 2, 3, 4], "ds_stor": 466, "ds_sub_rtn_u32": [0, 2, 3, 4], "ds_sub_rtn_u64": [0, 2, 3, 4], "ds_sub_src2_u32": [0, 2, 3, 4], "ds_sub_src2_u64": [0, 2, 3, 4], "ds_sub_u32": [0, 2, 3, 4], "ds_sub_u64": [0, 2, 3, 4], "ds_swizzle_b32": [0, 2, 3, 4, 464], "ds_wrap_rtn_b32": [0, 2, 3, 4], "ds_write2_b32": [0, 2, 3, 4], "ds_write2_b64": [0, 2, 3, 4], "ds_write2st64_b32": [0, 2, 3, 4], "ds_write2st64_b64": [0, 2, 3, 4], "ds_write_addtid_b32": [0, 4], "ds_write_b128": [0, 2, 3, 4], "ds_write_b16": [0, 2, 3, 4], "ds_write_b16_d16_h": [0, 4], "ds_write_b32": [0, 2, 3, 4], "ds_write_b64": [0, 2, 3, 4], "ds_write_b8": [0, 2, 3, 4], "ds_write_b8_d16_h": [0, 4], "ds_write_b96": [0, 2, 3, 4], "ds_write_src2_b32": [0, 2, 3, 4], "ds_write_src2_b64": [0, 2, 3, 4, 466], "ds_wrxchg2_rtn_b32": [0, 2, 3, 4], "ds_wrxchg2_rtn_b64": [0, 2, 3, 4], "ds_wrxchg2st64_rtn_b32": [0, 2, 3, 4], "ds_wrxchg2st64_rtn_b64": [0, 2, 3, 4], "ds_wrxchg_rtn_b32": [0, 2, 3, 4], "ds_wrxchg_rtn_b64": [0, 2, 3, 4], "ds_xor_b32": [0, 2, 3, 4], "ds_xor_b64": [0, 2, 3, 4], "ds_xor_rtn_b32": [0, 2, 3, 4], "ds_xor_rtn_b64": [0, 2, 3, 4], "ds_xor_src2_b32": [0, 2, 3, 4], "ds_xor_src2_b64": [0, 2, 3, 4], "dsa": 580, "dsc": 650, "dse": [470, 580], "dsl": 637, "dso": 480, "dso_local": [473, 579, 625], "dso_local_equivalent": 579, "dso_path": 492, "dso_preempt": [473, 579], "dsolocal": 579, "dsos": 470, "dsp": 461, "dst": [0, 1, 2, 3, 4, 5, 6, 7, 8, 239, 392, 462, 483, 577, 636, 637, 646], "dst0": [0, 2, 3, 4], "dst1": [0, 2, 3, 4], "dst_sel": [0, 3, 4, 7, 8, 466], "dst_unused": [0, 3, 4, 7, 8, 466], "dstindex": 646, "dsym": [481, 489, 504, 516, 527], "dsymtab": 522, "dsymutil": [490, 504], "dt": [522, 614, 648], "dtest_suite_profile_generat": 639, "dtest_suite_profile_us": 639, "dtest_suite_run_typ": 639, "dtest_suite_subdir": 639, "dtor": [543, 579, 625], "dtrac": 479, "duck": 609, "due": [461, 465, 466, 469, 475, 478, 480, 481, 483, 487, 531, 534, 536, 538, 540, 544, 545, 547, 550, 553, 555, 568, 570, 574, 579, 582, 585, 591, 602, 609, 611, 619, 622, 626, 630, 636, 642, 643, 651, 656, 670], "dumb": [677, 686], "dummy": [483, 535, 543, 585, 607, 641, 646], "dummy_main": 546, "dummytargetmachin": 646, "dump": [466, 473, 477, 483, 487, 489, 490, 497, 505, 514, 515, 518, 521, 522, 529, 593, 597, 609, 625, 634, 637, 648, 652, 670, 671, 672, 676, 681, 682, 683], "dump_modul": [681, 682, 683, 684, 685], "dump_valu": [681, 682, 683, 684, 685], "dumpabl": 648, "dumpattr": 634, "dumped": [504, 517, 518], "dumping": [504, 515, 516, 517, 566, 625], "dumpmymapdoc": 652, "duo": 466, "duplicat": [461, 469, 476, 483, 486, 487, 495, 505, 530, 535, 542, 579, 580, 591, 593, 602, 609, 625, 630], "duplicated": [479, 534, 545, 579, 625, 669, 680], "duplicating": [534, 545, 579, 607, 630, 645], "dupliqu": [479, 482, 522, 538, 575, 579, 582, 605, 625, 634, 637], "durat": [469, 483, 625, 648, 649, 651, 654], "during": [461, 466, 468, 474, 475, 477, 481, 482, 483, 485, 505, 513, 518, 530, 531, 533, 534, 538, 539, 540, 541, 544, 545, 549, 550, 556, 566, 569, 572, 577, 579, 581, 582, 583, 591, 594, 597, 609, 611, 613, 616, 618, 619, 620, 626, 628, 630, 640, 641, 646, 652, 670, 681], "dvariabl": 481, "dw_addr_amdgpu_region": 466, "dw_addr_llvm_const": [461, 466], "dw_addr_llvm_generic": 461, "dw_addr_llvm_global": [461, 466], "dw_addr_llvm_group": [461, 466], "dw_addr_llvm_hi_us": 461, "dw_addr_llvm_lo_us": 461, "dw_addr_llvm_privat": [461, 466], "dw_addr_non": [461, 466], "dw_apple_property_assign": 625, "dw_apple_property_atomic": 625, "dw_apple_property_class": 625, "dw_apple_property_copy": 625, "dw_apple_property_get": 625, "dw_apple_property_nonatomic": 625, "dw_apple_property_null_reset": 625, "dw_apple_property_nullability": 625, "dw_apple_property_readonly": 625, "dw_apple_property_readwrit": 625, "dw_apple_property_retain": 625, "dw_apple_property_set": 625, "dw_apple_property_strong": 625, "dw_apple_property_unsafe_unretained": 625, "dw_apple_property_weak": 625, "dw_aspace_": 461, "dw_aspace_amdgpu_generic": 466, "dw_aspace_amdgpu_local": 466, "dw_aspace_amdgpu_private_lan": 466, "dw_aspace_amdgpu_private_wav": 466, "dw_aspace_amdgpu_region": 466, "dw_aspace_non": [461, 466], "dw_at_addr_bas": 461, "dw_at_address_class": [461, 466], "dw_at_address_spac": 461, "dw_at_alignment": 625, "dw_at_apple_property": 625, "dw_at_apple_property_attribut": 625, "dw_at_apple_property_get": 625, "dw_at_apple_property_set": 625, "dw_at_artificial": 625, "dw_at_byte_siz": 466, "dw_at_call_data_loc": 461, "dw_at_call_data_valu": 461, "dw_at_call_site_parameter_valu": 579, "dw_at_call_valu": 461, "dw_at_const_valu": 461, "dw_at_data_loc": 461, "dw_at_data_member_loc": 461, "dw_at_decl_lin": 625, "dw_at_declar": 625, "dw_at_deleted": 625, "dw_at_elemental": 625, "dw_at_encoding": 466, "dw_at_entry_pc": 625, "dw_at_export_symbol": 579, "dw_at_frame_bas": [461, 466], "dw_at_high_pc": 625, "dw_at_languag": 461, "dw_at_llvm_active_lan": 461, "dw_at_llvm_address_spac": 461, "dw_at_llvm_augment": 461, "dw_at_llvm_lan": 461, "dw_at_llvm_lane_pc": 461, "dw_at_llvm_proc": 461, "dw_at_llvm_vector_siz": 461, "dw_at_loc": [461, 466, 487, 625], "dw_at_loclists_bas": 461, "dw_at_low_pc": 625, "dw_at_mips_linkage_nam": 625, "dw_at_nam": [466, 487, 504, 625], "dw_at_rang": 625, "dw_at_return_addr": 461, "dw_at_static_link": 461, "dw_at_string_length": 625, "dw_at_typ": 625, "dw_at_use_loc": 461, "dw_at_vtable_elem_loc": 461, "dw_ate_address": [461, 579], "dw_ate_boolean": [461, 579], "dw_ate_float": [579, 676], "dw_ate_hi_us": 461, "dw_ate_lo_us": 461, "dw_ate_signed": [461, 579, 625], "dw_ate_signed_char": [461, 579], "dw_ate_unsigned": [461, 466, 575, 579], "dw_ate_unsigned_char": [461, 579], "dw_cfa_aspace_def_cf": 461, "dw_cfa_def_aspace_cf": 461, "dw_cfa_def_aspace_cfa_sf": 461, "dw_cfa_def_cf": 461, "dw_cfa_def_cfa_express": 461, "dw_cfa_def_cfa_offset": 461, "dw_cfa_def_cfa_offset_sf": 461, "dw_cfa_def_cfa_regist": 461, "dw_cfa_def_cfa_sf": 461, "dw_cfa_express": 461, "dw_cfa_nop": 461, "dw_cfa_offset": 461, "dw_cfa_offset_extended": 461, "dw_cfa_offset_extended_sf": 461, "dw_cfa_offset_extended_uf": 461, "dw_cfa_offset_uf": 461, "dw_cfa_regist": 461, "dw_cfa_restor": 461, "dw_cfa_restore_extended": 461, "dw_cfa_same_valu": 461, "dw_cfa_undefined": 461, "dw_cfa_val_express": 461, "dw_cfa_val_offset": 461, "dw_cfa_val_offset_sf": 461, "dw_cfa_val_offset_uf": 461, "dw_form_": 625, "dw_form_addr": 625, "dw_form_block": 461, "dw_form_data1": 625, "dw_form_data2": 625, "dw_form_data4": 625, "dw_form_exprloc": 461, "dw_form_flag_present": 625, "dw_form_line_strp": 461, "dw_form_ref1": 625, "dw_form_ref2": [461, 625], "dw_form_ref4": [461, 625], "dw_form_ref8": 625, "dw_form_ref_addr": 461, "dw_form_ref_udat": 625, "dw_form_sec_offset": [461, 487], "dw_form_strp": [461, 487, 625], "dw_form_strp_sup": 461, "dw_form_strx1": 625, "dw_form_udat": 461, "dw_form_xxx": 625, "dw_lang_c": [575, 676], "dw_lang_c99": [579, 625], "dw_lang_llvm_hip": 461, "dw_lnct_llvm_is_md5": 461, "dw_lnct_llvm_sourc": [461, 466], "dw_lnct_md5": 461, "dw_lnct_path": 461, "dw_macinfo_defin": 579, "dw_macinfo_start_fil": 579, "dw_macinfo_undef": 579, "dw_op_": 461, "dw_op_add": 461, "dw_op_addr": [461, 466, 625], "dw_op_addrx": [461, 466], "dw_op_aspace_bref31": 461, "dw_op_aspace_breg0": 461, "dw_op_aspace_breg1": 461, "dw_op_aspace_bregx": 461, "dw_op_bit_piec": [461, 579], "dw_op_br": 461, "dw_op_breg": [461, 579], "dw_op_breg0": 461, "dw_op_breg1": 461, "dw_op_breg31": 461, "dw_op_bregx": [461, 579], "dw_op_call": 461, "dw_op_call2": 461, "dw_op_call4": 461, "dw_op_call_frame_cf": 461, "dw_op_call_ref": [461, 466], "dw_op_const": 461, "dw_op_const1": 461, "dw_op_const1u": 461, "dw_op_const2": 461, "dw_op_const2u": 461, "dw_op_const4": 461, "dw_op_const4u": 461, "dw_op_const8": 461, "dw_op_const8u": 461, "dw_op_const_typ": 461, "dw_op_constu": [461, 579], "dw_op_constx": 461, "dw_op_convert": [461, 579], "dw_op_deref": [461, 579], "dw_op_deref_siz": 461, "dw_op_deref_typ": [461, 466], "dw_op_drop": 461, "dw_op_dup": 461, "dw_op_entry_valu": 461, "dw_op_eq": 461, "dw_op_fbreg": [461, 625], "dw_op_form_tls_address": 461, "dw_op_g": 461, "dw_op_gt": 461, "dw_op_implic": 461, "dw_op_implicit_point": [461, 579], "dw_op_implicit_valu": 461, "dw_op_l": 461, "dw_op_lit0": 461, "dw_op_lit1": 461, "dw_op_lit31": 461, "dw_op_llvm_": 461, "dw_op_llvm_aspace_bregx": 461, "dw_op_llvm_aspace_implicit_point": 461, "dw_op_llvm_bit_offset": 461, "dw_op_llvm_call_frame_entry_reg": 461, "dw_op_llvm_convert": 579, "dw_op_llvm_entry_valu": 579, "dw_op_llvm_extend": [461, 466], "dw_op_llvm_form_aspace_address": [461, 466], "dw_op_llvm_fragment": 579, "dw_op_llvm_implicit_aspace_point": 461, "dw_op_llvm_implicit_point": 579, "dw_op_llvm_offset": [461, 466], "dw_op_llvm_offset_constu": 461, "dw_op_llvm_offset_uconst": 461, "dw_op_llvm_piece_end": 461, "dw_op_llvm_push_lan": [461, 466], "dw_op_llvm_select_bit_piec": [461, 466], "dw_op_llvm_tag_offset": 579, "dw_op_llvm_undefined": [461, 466], "dw_op_lt": 461, "dw_op_minus": [461, 579], "dw_op_n": 461, "dw_op_nop": 461, "dw_op_ov": [461, 579], "dw_op_pick": 461, "dw_op_piec": 461, "dw_op_plus": [461, 579, 625], "dw_op_plus_uconst": [461, 579, 625], "dw_op_push_object_address": [461, 579], "dw_op_reg": 461, "dw_op_reg0": 461, "dw_op_reg1": 461, "dw_op_reg31": 461, "dw_op_regval_typ": [461, 466], "dw_op_regx": [461, 466], "dw_op_reinterpret": 461, "dw_op_rot": 461, "dw_op_skip": 461, "dw_op_stack_valu": [461, 466, 579, 625], "dw_op_swap": [461, 579], "dw_op_xderef": [461, 579], "dw_op_xderef_siz": 461, "dw_op_xderef_typ": 461, "dw_opreg": 461, "dw_tag": 625, "dw_tag_apple_property": 625, "dw_tag_array_typ": [579, 625], "dw_tag_atomic_typ": [579, 625], "dw_tag_base_typ": [461, 466, 579, 625], "dw_tag_call_site_paramet": 461, "dw_tag_class_typ": [579, 625], "dw_tag_compile_un": 461, "dw_tag_const_typ": [579, 625], "dw_tag_dwarf_procedur": [461, 466], "dw_tag_entry_point": 461, "dw_tag_enumeration_typ": [579, 625], "dw_tag_file_typ": 625, "dw_tag_formal_paramet": 461, "dw_tag_friend": 579, "dw_tag_gnu_template_param_pack": 579, "dw_tag_gnu_template_template_param": 579, "dw_tag_imported_modul": 579, "dw_tag_inherit": 579, "dw_tag_inlined_subroutin": [461, 625], "dw_tag_interface_typ": 625, "dw_tag_label": 625, "dw_tag_llvm_address_class_typ": 461, "dw_tag_memb": [579, 625], "dw_tag_namelist": 625, "dw_tag_namespac": 625, "dw_tag_packed_typ": 625, "dw_tag_pointer_typ": [579, 625], "dw_tag_ptr_to_member_typ": [461, 579, 625], "dw_tag_reference_typ": [579, 625], "dw_tag_restrict_typ": [579, 625], "dw_tag_set_typ": 625, "dw_tag_shared_typ": 625, "dw_tag_string_typ": 625, "dw_tag_structure_typ": [579, 625], "dw_tag_subprogram": [461, 625], "dw_tag_subrange_typ": 625, "dw_tag_subroutine_typ": 625, "dw_tag_template_value_paramet": 579, "dw_tag_typedef": [579, 625], "dw_tag_union_typ": [579, 625], "dw_tag_unspecified_typ": [579, 625], "dw_tag_vari": [461, 625], "dw_tag_volatile_typ": [579, 625], "dw_tag_xxx": 625, "dw_virtuality_pure_virtual": 579, "dwarf": [483, 490, 515, 516, 527, 535, 536, 540, 547, 550, 575, 579, 580, 582, 595, 609, 628, 644, 646, 686], "dwarf2": 676, "dwarfdebug": 625, "dwarfdump": [487, 489, 490, 512, 625], "dwarfencoding": 540, "dwarfnumber": 646, "dwarfregnum": 646, "dwel": 670, "dwo": [461, 515, 550], "dwoid": 579, "dword": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 240, 245, 246, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 306, 307, 308, 311, 312, 313, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 341, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 393, 398, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 516], "dwp": 527, "dx": 637, "dx10": 466, "dx10_clamp": 466, "dying": 575, "dyld": 584, "dyldinfo": 514, "dylib": [516, 593, 606, 641, 654], "dyn": [466, 521, 522, 534], "dyn_cast": [486, 573, 617, 634, 646], "dyn_cast_or_null": 609, "dyn_switch": 486, "dynamic": [461, 466, 471, 479, 488, 492, 493, 499, 507, 509, 513, 514, 516, 521, 522, 528, 534, 542, 545, 547, 548, 566, 573, 581, 584, 593, 607, 609, 610, 618, 622, 625, 626, 630, 642, 643, 652, 671, 673], "dynamic_cast": [486, 573, 609, 674, 675, 676], "dynamic_shared_point": 466, "dynamically": [461, 466, 473, 477, 479, 492, 513, 514, 534, 536, 543, 555, 573, 579, 583, 597, 609, 624, 626, 628, 649, 673, 682, 684], "dynamiclibrary": 656, "dynamiclibrarysearchgenerator": [593, 654, 655, 656, 657], "dynamicsharedpoint": 466, "dynstr": 466, "dynsym": 466, "d\u00e9calag": 142, "d\u00e9cis": 653, "d\u00e9criv": 653, "d\u00e9tail": 653, "d\u00e9velopp": 653, "e": [461, 465, 466, 469, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 491, 492, 498, 499, 500, 505, 513, 514, 515, 517, 521, 522, 526, 527, 530, 531, 532, 535, 538, 539, 540, 542, 544, 545, 547, 548, 549, 550, 552, 554, 555, 557, 559, 566, 567, 568, 569, 572, 573, 574, 575, 576, 579, 581, 582, 583, 585, 588, 590, 591, 592, 593, 595, 596, 597, 601, 602, 604, 605, 606, 607, 608, 609, 611, 614, 616, 618, 621, 623, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 639, 640, 641, 642, 643, 646, 647, 648, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "e1": 466, "e2": 466, "e3": 513, "e_entry": 466, "e_ident": 466, "e_machin": 466, "e_typ": 466, "ea_r": 483, "eabi": [492, 570], "each": [29, 30, 31, 32, 43, 44, 45, 54, 129, 130, 131, 139, 140, 145, 218, 219, 220, 221, 233, 234, 235, 239, 244, 372, 373, 374, 375, 386, 387, 388, 392, 397, 461, 464, 465, 466, 468, 469, 470, 472, 473, 474, 477, 479, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 495, 498, 499, 500, 504, 505, 506, 509, 510, 511, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 526, 527, 528, 530, 531, 534, 535, 537, 538, 540, 541, 543, 545, 546, 547, 548, 549, 550, 553, 554, 555, 559, 560, 561, 562, 566, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 588, 589, 590, 591, 592, 593, 594, 596, 597, 599, 600, 601, 604, 605, 606, 609, 610, 611, 614, 616, 618, 619, 620, 621, 623, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 646, 648, 649, 650, 651, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "ead": 623, "eag": [593, 609, 655], "eagerly": [593, 655], "eao": 609, "earli": [461, 466, 470, 473, 485, 486, 487, 534, 535, 538, 545, 553, 560, 565, 593, 601, 611, 615, 625, 626, 636, 646, 654, 670, 671], "earliest": 487, "early": [518, 531, 534, 553, 564, 570, 579, 581, 585, 592, 594, 597, 609, 626, 646, 648, 674, 685], "earlyclobb": 585, "earlycs": 545, "earlyout": 634, "earn": 611, "eas": [550, 568, 579, 630], "easi": [461, 466, 467, 469, 470, 476, 478, 483, 484, 486, 487, 498, 533, 534, 536, 538, 541, 543, 547, 550, 571, 574, 579, 583, 590, 592, 593, 607, 608, 609, 611, 614, 619, 634, 635, 636, 637, 641, 648, 669, 670, 674, 676, 680, 681, 685], "easiest": [470, 557, 566, 570, 586, 627, 646, 648, 649, 671, 677, 686], "easily": [461, 476, 483, 530, 537, 545, 547, 574, 588, 590, 593, 607, 609, 620, 625, 626, 628, 630, 631, 634, 635, 641, 648, 652, 654, 675], "easy": [473, 477, 479, 481, 483, 486, 487, 491, 538, 547, 550, 565, 571, 573, 579, 581, 586, 591, 593, 609, 611, 612, 614, 619, 623, 625, 626, 627, 632, 634, 636, 640, 641, 648, 652, 655, 656, 668, 669, 670, 671, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 685, 686], "eat": [668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "eating": 530, "eatomtypecuoffset": 625, "eatomtypedieoffset": 625, "eatomtypedietag": 625, "eatomtypenameflag": 625, "eatomtypenull": 625, "eatomtypetag": 625, "eatomtypetypeflag": 625, "eax": [483, 487, 513, 516, 542, 579, 585, 625, 626, 636, 637, 646], "eb": 513, "ebnf": 651, "ebp": [483, 540, 637], "ebx": [483, 542, 637], "ec": [517, 609, 675], "echo": [471, 491, 505, 550, 553, 586, 611, 627], "echoed": [491, 527], "eckel": 609, "ecma": 597, "economic": 484, "ecosystem": [605, 609, 611, 632], "ecsubstreamsiz": 597, "ecx": [483, 542, 579, 636, 637], "ed": [470, 476, 486, 531, 609, 623, 626, 644], "edge": [474, 477, 483, 486, 487, 531, 537, 540, 542, 547, 549, 579, 581, 583, 611, 616, 636, 648, 649, 650], "edi": [483, 487, 585, 626, 637], "edit": [466, 517, 597, 608, 614], "edited": 609, "editing": [481, 490, 609], "editor": [486, 538, 550, 586, 627, 632], "edu": [471, 613, 626], "educational": 484, "edx": [483, 513, 579, 626, 636, 637], "ee": 465, "eee": 513, "ef_amdgpu_feature_sramecc_": 466, "ef_amdgpu_feature_sramecc_any_v4": 466, "ef_amdgpu_feature_sramecc_off_v4": 466, "ef_amdgpu_feature_sramecc_on_v4": 466, "ef_amdgpu_feature_sramecc_unsupported_v4": 466, "ef_amdgpu_feature_sramecc_v3": 466, "ef_amdgpu_feature_sramecc_v4": 466, "ef_amdgpu_feature_trap_handler_v2": 466, "ef_amdgpu_feature_xnack_": 466, "ef_amdgpu_feature_xnack_any_v4": 466, "ef_amdgpu_feature_xnack_off_v4": 466, "ef_amdgpu_feature_xnack_on_v4": 466, "ef_amdgpu_feature_xnack_unsupported_v4": 466, "ef_amdgpu_feature_xnack_v2": 466, "ef_amdgpu_feature_xnack_v3": 466, "ef_amdgpu_feature_xnack_v4": 466, "ef_amdgpu_mach_amdgcn_gfx1010": 466, "ef_amdgpu_mach_amdgcn_gfx1011": 466, "ef_amdgpu_mach_amdgcn_gfx1012": 466, "ef_amdgpu_mach_amdgcn_gfx1030": 466, "ef_amdgpu_mach_amdgcn_gfx1031": 466, "ef_amdgpu_mach_amdgcn_gfx1032": 466, "ef_amdgpu_mach_amdgcn_gfx1033": 466, "ef_amdgpu_mach_amdgcn_gfx600": 466, "ef_amdgpu_mach_amdgcn_gfx601": 466, "ef_amdgpu_mach_amdgcn_gfx602": 466, "ef_amdgpu_mach_amdgcn_gfx700": 466, "ef_amdgpu_mach_amdgcn_gfx701": 466, "ef_amdgpu_mach_amdgcn_gfx702": 466, "ef_amdgpu_mach_amdgcn_gfx703": 466, "ef_amdgpu_mach_amdgcn_gfx704": 466, "ef_amdgpu_mach_amdgcn_gfx705": 466, "ef_amdgpu_mach_amdgcn_gfx801": 466, "ef_amdgpu_mach_amdgcn_gfx802": 466, "ef_amdgpu_mach_amdgcn_gfx803": 466, "ef_amdgpu_mach_amdgcn_gfx805": 466, "ef_amdgpu_mach_amdgcn_gfx810": 466, "ef_amdgpu_mach_amdgcn_gfx900": 466, "ef_amdgpu_mach_amdgcn_gfx902": 466, "ef_amdgpu_mach_amdgcn_gfx904": 466, "ef_amdgpu_mach_amdgcn_gfx906": 466, "ef_amdgpu_mach_amdgcn_gfx908": 466, "ef_amdgpu_mach_amdgcn_gfx909": 466, "ef_amdgpu_mach_amdgcn_gfx90c": 466, "ef_amdgpu_mach_non": 466, "ef_amdgpu_mach_r600_bart": 466, "ef_amdgpu_mach_r600_caicos": 466, "ef_amdgpu_mach_r600_cayman": 466, "ef_amdgpu_mach_r600_cedar": 466, "ef_amdgpu_mach_r600_cypress": 466, "ef_amdgpu_mach_r600_junip": 466, "ef_amdgpu_mach_r600_r600": 466, "ef_amdgpu_mach_r600_r630": 466, "ef_amdgpu_mach_r600_redwood": 466, "ef_amdgpu_mach_r600_rs880": 466, "ef_amdgpu_mach_r600_rv670": 466, "ef_amdgpu_mach_r600_rv710": 466, "ef_amdgpu_mach_r600_rv730": 466, "ef_amdgpu_mach_r600_rv770": 466, "ef_amdgpu_mach_r600_sumo": 466, "ef_amdgpu_mach_r600_turk": 466, "ef_amdgpu_mach_xxx": 466, "effect": [461, 464, 466, 469, 481, 483, 486, 487, 492, 504, 505, 513, 515, 521, 522, 531, 538, 547, 550, 555, 556, 568, 575, 579, 583, 607, 609, 611, 618, 625, 626, 630, 641, 642, 646, 648, 649, 656, 672, 673, 683, 684], "effecting": [483, 555], "effectively": [461, 469, 473, 483, 545, 548, 551, 579, 583, 587, 607, 609, 616, 625, 631, 636, 642, 648], "effectiveness": [545, 622, 648], "efficiency": [461, 609, 641], "efficient": [461, 465, 466, 469, 473, 483, 486, 529, 538, 543, 547, 549, 550, 573, 578, 579, 581, 593, 607, 609, 622, 625, 626, 630, 631, 634, 643, 648, 669, 671, 680, 682], "efficiently": [469, 473, 483, 579, 587, 609, 616, 625, 626, 631, 643, 648], "effort": [466, 486, 538, 541, 545, 575, 579, 584, 607, 625, 626, 628, 631, 632, 649, 670, 681], "eflag": [585, 625, 636, 637], "eg": [615, 622], "egregious": [484, 538], "egrep": 550, "eh": [481, 493, 504, 534, 579, 584, 646], "eh_fram": [523, 540], "eh_label": 585, "eh_return": 540, "ehashfunctiondjb": 625, "ehcleanup": 534, "ehobj": 540, "ehptr": 540, "ehselector": 534, "ei_abivers": 466, "ei_class": 466, "ei_dat": 466, "ei_osab": 466, "eieio": 579, "eight": [483, 491, 579, 636], "eip": 637, "eith": [19, 32, 43, 45, 65, 100, 114, 201, 221, 233, 235, 303, 375, 386, 388, 408, 446, 460, 461, 464, 465, 466, 469, 470, 472, 473, 477, 479, 481, 483, 485, 486, 491, 492, 495, 498, 499, 505, 513, 515, 526, 527, 528, 530, 533, 534, 538, 540, 541, 542, 545, 547, 548, 550, 554, 555, 558, 559, 565, 566, 574, 575, 579, 580, 581, 583, 584, 585, 590, 591, 592, 593, 594, 596, 597, 599, 604, 607, 609, 611, 614, 621, 625, 626, 628, 630, 632, 636, 637, 639, 640, 641, 642, 643, 646, 648, 649, 650, 651, 668, 669, 670, 672, 676, 677, 679, 680, 682, 683, 686], "eject": 632, "elaborat": [609, 626], "elapsed": 513, "elect": [485, 632], "elected": 538, "electric": 566, "eleg": [669, 671, 672, 677, 680, 682, 683, 686], "elem0": 579, "elem_func": 625, "element": [29, 30, 31, 32, 43, 44, 45, 129, 130, 131, 139, 140, 218, 219, 220, 221, 233, 234, 235, 372, 373, 374, 375, 386, 387, 388, 461, 464, 466, 469, 472, 473, 482, 483, 487, 513, 534, 537, 541, 547, 554, 555, 559, 580, 586, 591, 592, 607, 609, 616, 618, 625, 627, 630, 634, 635, 636, 642, 643, 645, 646, 651, 652, 654], "element_siz": 579, "element_typ": [681, 682, 683, 684, 685], "elemental": 625, "elementtyp": 579, "elementwis": 555, "elf": [461, 473, 483, 514, 516, 521, 523, 525, 527, 531, 532, 536, 550, 579, 584, 593, 618, 625, 628, 641, 649], "elf32": 515, "elf64": [515, 650], "elf64_rel": 466, "elf_cgprofil": 542, "elf_word": 542, "elf_xword": 542, "elfabiversion_amdgpu_hsa_v2": 466, "elfabiversion_amdgpu_hsa_v3": 466, "elfabiversion_amdgpu_hsa_v4": 466, "elfabiversion_amdgpu_mesa3d": 466, "elfabiversion_amdgpu_pal": 466, "elfclass32": 466, "elfclass64": 466, "elfdata2lsb": 466, "elfosabi_amdgpu_hs": 466, "elfosabi_amdgpu_mesa3d": 466, "elfosabi_amdgpu_pal": 466, "elfosabi_non": 466, "elfv2": 532, "eli": 531, "elid": 578, "elided": [534, 547], "eligibl": [513, 534, 607], "elimin": [469, 483, 492, 530, 543, 545, 550, 557, 580, 585, 592, 594, 609, 625, 630, 671, 682], "eliminat": [461, 466, 469, 477, 478, 483, 486, 530, 538, 543, 545, 547, 565, 592, 607, 609, 626, 646, 669, 671, 672, 673, 674, 680, 682, 683, 684, 685], "eliminatecallframepseudoinstr": 646, "eliminated": [461, 466, 469, 483, 545, 547, 579, 607, 609], "eliminateframeindex": 646, "eliminating": [486, 534, 547, 607, 609, 646, 656], "elis": 534, "else": [466, 483, 484, 485, 487, 493, 504, 505, 511, 530, 531, 534, 535, 538, 541, 552, 553, 565, 566, 569, 575, 579, 581, 583, 585, 590, 591, 592, 607, 608, 609, 611, 626, 627, 630, 631, 632, 636, 641, 642, 645, 646, 652, 655, 668, 669, 670, 671, 673, 674, 675, 676, 677, 679, 680, 681, 682, 684, 685, 686], "else_": [683, 684, 685], "else_bb": [683, 684, 685], "else_val": [683, 684, 685], "elsebb": [672, 673, 674, 675, 676], "elseif": 466, "elsev": [672, 673, 674, 675, 676], "elsewher": [464, 465, 466, 530, 535, 538, 609, 630, 634, 646], "elt": [555, 579], "eltsizeparam": [473, 579], "eltty": [473, 676], "em": 570, "em_amdgpu": 466, "emac": [486, 550, 637], "email": [470, 484, 485, 533, 538, 549, 550, 567, 572, 580, 608, 621, 623, 677, 686], "emailed": [538, 549, 632], "emailing": [484, 538, 550, 621], "embargo": 623, "embargoed": 623, "embed": [461, 466, 473, 481, 489, 579, 625, 677, 686], "embedded": [461, 466, 473, 489, 515, 535, 538, 546, 547, 560, 570, 579, 596, 599, 605, 607, 609, 616, 625, 636, 672, 673, 683, 684], "embedding": [579, 597, 609, 626], "embodying": 635, "embrac": 538, "emergency": [466, 623], "emergent": 538, "emerging": 536, "emerson": 614, "emersonconcern": 614, "emiss": [489, 547, 579, 618, 625, 628, 646, 674, 685], "emissionkind": [575, 579, 625], "emit": [461, 470, 473, 477, 483, 486, 487, 489, 490, 492, 493, 504, 513, 515, 516, 518, 526, 529, 530, 531, 534, 535, 536, 540, 542, 543, 545, 547, 548, 550, 552, 574, 577, 579, 584, 592, 595, 602, 604, 607, 609, 618, 620, 625, 626, 628, 630, 634, 635, 636, 642, 646, 650, 655, 657, 669, 670, 672, 673, 674, 676, 680, 681, 683, 684, 685], "emit_22": 646, "emitaddressmod": 635, "emitalignment": 547, "emitbyt": 646, "emitcall": 609, "emitconst": 646, "emitconstantpool": 646, "emitconstpooladdress": 646, "emitepilogu": 646, "emitexternalsymboladdress": 646, "emitfnstart": 483, "emitfunctionstub": 646, "emitglobaladdress": 646, "emitinstruct": [483, 646], "emitint32": 547, "emitjumptableaddress": 646, "emitjumptableinfo": 646, "emitlabel": 483, "emitlabelplusoffset": 547, "emitleadingfent": 470, "emitloadlinked": 470, "emitloc": 676, "emitmaskedatomiccmpxchgintrinsic": 470, "emitmaskedatomicrmwintrinsic": 470, "emitnam": 486, "emitobject": 584, "emitprologu": [540, 646], "emitpseudoexpansionlowering": 634, "emitsourcefilehead": 635, "emitstacksizesect": 483, "emitstoreconditional": 470, "emitsymbolattribut": 483, "emitt": [529, 536, 579, 634, 635, 672, 683], "emitted": [466, 470, 472, 473, 483, 489, 535, 542, 545, 577, 579, 580, 584, 585, 592, 597, 620, 625, 628, 630, 634, 635, 642, 646, 648, 655, 670, 672, 676, 677, 681, 683], "emitter": [620, 634], "emitting": [470, 473, 481, 492, 517, 529, 535, 542, 579, 607, 625, 628, 634, 646, 672, 675, 676, 677, 683, 686], "emittrailingfent": 470, "emitvalu": 483, "emmc": 568, "emphasiz": [486, 636], "emphasized": [586, 627], "employ": [579, 612, 626], "employed": [609, 616, 623, 636], "emptied": 622, "empty": [239, 392, 461, 466, 481, 482, 486, 491, 505, 527, 529, 530, 534, 538, 540, 547, 550, 579, 581, 585, 591, 599, 609, 611, 625, 626, 630, 635, 636, 641, 642, 646, 652, 669, 670, 672, 676, 680, 681, 683], "empty_nod": 579, "empty_subregsset": 646, "emul": 570, "emulat": [483, 541, 545, 579, 593, 609, 611], "emulated": [513, 579], "emulator": [493, 570], "enabl": [239, 392, 461, 464, 466, 479, 481, 483, 487, 488, 491, 492, 493, 494, 496, 499, 503, 505, 506, 510, 513, 515, 516, 522, 526, 528, 529, 530, 534, 535, 536, 543, 544, 546, 547, 550, 557, 558, 564, 565, 570, 575, 581, 582, 587, 590, 593, 594, 606, 607, 609, 611, 614, 618, 620, 625, 630, 632, 637, 641, 642, 645, 646, 649, 650, 652, 654, 655, 656, 671, 675], "enable_": 573, "enable_dx10_clamp": 466, "enable_exception_address_watch": 466, "enable_exception_fp_denormal": 466, "enable_exception_fp_denormal_sourc": 466, "enable_exception_ieee_754_fp": 466, "enable_exception_ieee_754_fp_division_by_zero": 466, "enable_exception_ieee_754_fp_inexact": 466, "enable_exception_ieee_754_fp_invalid_oper": 466, "enable_exception_ieee_754_fp_overflow": 466, "enable_exception_ieee_754_fp_underflow": 466, "enable_exception_int_divide_by": 466, "enable_exception_int_divide_by_zero": 466, "enable_exception_memory": 466, "enable_ieee_mod": 466, "enable_mem_ordered": 466, "enable_optimized": 606, "enable_private_segment": 466, "enable_sgpr_": 466, "enable_sgpr_dispatch_id": 466, "enable_sgpr_dispatch_ptr": 466, "enable_sgpr_flat_scratch_in": 466, "enable_sgpr_grid": 466, "enable_sgpr_kernarg": 466, "enable_sgpr_kernarg_segment_ptr": 466, "enable_sgpr_privat": 466, "enable_sgpr_private_segment": 466, "enable_sgpr_private_segment_buff": 466, "enable_sgpr_private_segment_siz": 466, "enable_sgpr_queue_ptr": 466, "enable_sgpr_workgroup": 466, "enable_sgpr_workgroup_id": 466, "enable_sgpr_workgroup_id_x": 466, "enable_sgpr_workgroup_id_y": 466, "enable_sgpr_workgroup_id_z": 466, "enable_sgpr_workgroup_info": 466, "enable_trap_handl": 466, "enable_vgpr": 466, "enable_vgpr_workitem_id": 466, "enable_wavefront_size32": 466, "enable_wgp_mod": 466, "enabled": [464, 465, 466, 468, 472, 481, 483, 486, 487, 489, 491, 492, 493, 495, 499, 513, 518, 526, 530, 531, 533, 536, 538, 545, 546, 547, 550, 566, 579, 581, 582, 606, 609, 614, 618, 622, 624, 625, 635, 637, 639, 641, 642, 645, 648, 649], "enabling": [481, 482, 546, 550, 557, 579, 583, 609, 611, 616, 649], "enc": 634, "encapsul": [576, 616], "encapsulat": [609, 616], "encapsulated": 573, "encapsulating": 466, "enclos": 461, "enclosed": [464, 487, 636, 641], "enclosing": [461, 466, 473, 527, 534, 609, 628, 676], "encnormal": 636, "encod": [461, 465, 470, 473, 483, 497, 535, 540, 547, 554, 579, 591, 616, 618, 625, 628, 630, 639, 643, 651], "encodability": 540, "encodecompactunwindregisterswithoutfram": 483, "encoded": [120, 205, 362, 461, 463, 465, 466, 472, 473, 483, 492, 493, 497, 534, 535, 540, 542, 579, 605, 625, 628, 630, 634, 646], "encoding": [465, 466, 470, 497, 501, 513, 518, 532, 542, 547, 554, 575, 579, 617, 625, 628, 630, 634, 636, 637, 644, 646, 651, 652, 674, 676, 685], "encodingbyhwmod": 636, "encodinginfos": 636, "encomp": [568, 632], "encompass": [576, 632], "encount": [461, 570, 596, 611], "encounter": [461, 500, 540, 579, 646], "encountered": [466, 473, 483, 487, 514, 545, 609, 650, 655], "encountering": 609, "encourag": [476, 486, 538, 549, 550, 609, 611, 677, 678, 686], "encouraged": [485, 538, 572, 574, 607, 609, 612, 614], "encouraging": 484, "end": [461, 465, 466, 468, 469, 472, 473, 476, 477, 478, 479, 481, 483, 484, 485, 487, 489, 495, 496, 502, 505, 509, 513, 515, 517, 525, 530, 531, 535, 538, 540, 542, 544, 545, 547, 550, 552, 559, 566, 568, 569, 571, 572, 573, 581, 582, 583, 586, 589, 590, 591, 593, 594, 597, 601, 607, 608, 609, 610, 611, 619, 620, 623, 626, 627, 628, 631, 632, 634, 635, 636, 637, 640, 641, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "end_": [683, 684, 685], "end_amd_kernel_code_t": 466, "end_amdgpu_metadat": 466, "end_amdhsa_kernel": 466, "end_cond": [683, 684, 685], "endcod": 486, "endcond": [672, 673, 674, 675, 676, 685], "ended": [574, 579, 621, 682], "endexpr": [672, 673, 674, 675, 676, 685], "endforeach": 482, "endfunct": 482, "endian": [466, 473, 483, 559, 579, 605, 620, 625, 644, 646, 651], "endianness": [472, 483, 646, 651], "endif": [466, 482, 486, 530, 531, 535, 566, 581, 631, 634, 636, 647, 654, 655, 656, 657, 671, 672, 673, 674, 675, 676, 677, 686], "ending": [461, 486, 535, 550, 552, 580, 641, 646], "endl": 675, "endloop": [672, 673, 674, 675, 676, 685], "endmacro": 482, "endorsed": 538, "endsess": [654, 655, 656, 657], "endur": 538, "enforc": [470, 483, 486, 487, 513, 530, 538, 547, 550, 560, 579, 609, 611, 621, 622, 628], "enforced": [486, 579], "enforcing": 609, "engag": 485, "engaging": 538, "engin": [466, 498, 532, 580, 581, 614, 626, 644, 672, 682, 683], "engine": [543, 548, 607, 677, 686], "enginebuild": [584, 656], "engineer": 611, "engineering": [537, 548, 591, 670, 677, 678, 679, 686], "english": 486, "enhanc": [538, 618, 625, 648, 677, 686], "enhanced": [532, 645, 670, 671, 672, 673, 674, 676, 681, 682, 683, 684, 685], "enhancing": [486, 644], "enjoy": 567, "enough": [461, 470, 476, 481, 483, 485, 486, 505, 513, 517, 530, 538, 545, 548, 560, 566, 572, 575, 579, 587, 591, 609, 610, 624, 625, 628, 631, 632, 641, 646, 648, 654, 669, 672, 676, 680, 681, 683], "enqueu": 466, "enqueue_kernel": 466, "enqueued": 466, "enqueueing": 466, "enrich": 616, "ensu": 468, "ensuing": 646, "ensur": [461, 466, 469, 470, 473, 475, 480, 483, 484, 485, 486, 487, 497, 498, 517, 528, 530, 533, 538, 540, 542, 543, 544, 545, 547, 550, 557, 566, 572, 575, 579, 583, 593, 604, 607, 608, 609, 611, 623, 625, 626, 628, 630, 641, 645, 646, 647, 648, 673, 674, 676, 681, 685], "ensured": 583, "ensuring": [480, 481, 483, 485, 579, 625, 650], "enter": [477, 481, 483, 491, 534, 540, 545, 572, 583, 593, 608, 609, 625, 626, 650, 654, 670, 671, 682], "entered": [466, 473, 534, 540, 579, 609, 625, 651, 669, 680], "entering": [540, 550, 579, 583, 590, 593, 626], "entier": 142, "entir": [461, 472, 473, 483, 486, 487, 491, 495, 497, 499, 504, 517, 525, 530, 534, 538, 547, 574, 579, 581, 583, 590, 594, 597, 600, 602, 604, 607, 609, 625, 626, 639, 640, 641, 642, 645, 646, 648, 652, 670, 671, 677, 681, 682, 686], "entirely": [466, 469, 470, 485, 486, 487, 531, 545, 547, 548, 559, 560, 579, 590, 592, 593, 594, 601, 605, 622, 630, 636, 649], "entirety": [538, 602, 623, 630], "entit": [473, 486, 579, 609], "entity": [461, 465, 579, 602, 609, 616, 623, 628, 636], "ento": 580, "entomology": 580, "entos": 580, "entranc": 579, "entri": [461, 466, 469, 473, 483, 487, 504, 513, 516, 518, 521, 522, 540, 542, 544, 547, 579, 581, 585, 599, 609, 611, 618, 620, 625, 630, 634, 643, 646, 649, 654], "entry": [469, 473, 474, 481, 483, 487, 499, 502, 504, 505, 512, 513, 514, 523, 534, 540, 541, 542, 545, 547, 548, 550, 555, 556, 573, 575, 578, 580, 583, 584, 585, 586, 590, 591, 592, 593, 599, 600, 604, 609, 616, 620, 623, 625, 626, 627, 628, 630, 631, 634, 643, 646, 648, 649, 651, 652, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "entry_arg": 651, "entry_block": 685, "entrypoint": [534, 579, 581], "entrysym": 593, "entrytoken": 483, "entr\u00e9": [61, 150, 251, 343, 404], "enum": [467, 469, 483, 486, 517, 529, 530, 540, 541, 559, 573, 575, 576, 577, 579, 596, 597, 602, 604, 609, 625, 634, 637, 646, 652, 668, 669, 670, 671, 672, 673, 674, 675, 676, 688], "enumattr": 529, "enumcas": 652, "enumer": [529, 579, 591, 597, 602, 604, 609, 625, 634, 636, 646, 651, 652], "enumerat": [463, 473, 483, 547, 579, 591], "enumerated": [465, 530, 579, 602, 635, 636, 651, 652], "enumerating": [583, 626], "enumerator": [473, 517, 579, 635], "env": 619, "environment": [461, 470, 481, 483, 486, 487, 491, 494, 499, 527, 532, 539, 542, 547, 550, 565, 566, 593, 606, 607, 609, 622, 623, 631, 639, 649, 650, 671], "envis": 612, "envp": 536, "eof": [487, 581, 636, 651, 668, 669, 670, 671, 672, 673, 674, 675, 676], "eor": 579, "ep_earlyaspossibl": 648, "ep_fulllinktimeoptimizationlast": 648, "epilog": [579, 618, 646], "epilogu": [547, 579, 618, 625, 642, 646], "episod": [672, 683], "epoch": 652, "epsilon": 505, "eptr": 579, "eq": [473, 534, 579, 585, 592, 636], "equal": [461, 464, 465, 466, 469, 473, 474, 475, 483, 491, 517, 518, 530, 531, 540, 550, 554, 555, 566, 579, 591, 597, 600, 601, 604, 609, 626, 636, 646, 669, 672, 673, 674, 675, 676, 680, 683, 684, 685], "equal_rang": 609, "equalit": 545, "equality": [465, 543, 573, 579, 591, 593, 609, 672, 683], "equally": [593, 604, 626], "equivalent": [461, 464, 466, 470, 472, 473, 481, 482, 483, 486, 487, 489, 493, 495, 499, 501, 513, 515, 516, 518, 520, 521, 522, 523, 526, 530, 531, 540, 542, 547, 548, 554, 555, 557, 559, 570, 580, 585, 591, 592, 593, 595, 607, 609, 615, 622, 625, 630, 636, 655, 677, 686], "equivalently": [547, 554], "eras": [609, 625, 672, 673, 674, 675, 676], "erased": 470, "erasefromparent": [609, 646, 670, 671, 672, 673, 674, 675, 676], "erasur": 609, "ere": 487, "eref": 532, "erefrm": 532, "ericsson": 579, "erlang": 579, "erolling": 639, "err": [484, 592, 593, 609, 623, 647, 648, 654, 655, 656, 657, 670, 671, 672, 673, 674, 675, 676], "err2": 609, "errat": 532, "erratic": 575, "errc": 609, "erred": 579, "erring": 485, "errno": [469, 579, 645], "erroneous": [530, 550, 579], "error": [461, 465, 466, 469, 477, 481, 482, 483, 487, 488, 489, 491, 492, 493, 495, 496, 497, 498, 499, 500, 503, 505, 506, 507, 509, 510, 513, 515, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 538, 540, 541, 542, 546, 547, 550, 565, 566, 570, 571, 572, 574, 575, 579, 580, 581, 582, 583, 589, 592, 593, 607, 610, 613, 617, 618, 619, 620, 634, 636, 637, 641, 646, 648, 649, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "error_cod": 675, "error_exitcod": 581, "errorasoutparamet": 609, "errorcodetoerror": 609, "errorhandling": 654, "errorinfo": 609, "errorlist": 609, "errorloc": 635, "errorortoexpected": 609, "errortoerrorcod": 609, "escal": 623, "escalat": 623, "escap": [469, 487, 515, 526, 547, 579, 582, 636, 673, 684], "escaped": [491, 540, 579, 585, 587], "escaping": [469, 487, 579, 641], "eschnet": 613, "escudo": 622, "esi": [483, 585, 626, 637], "esp": [483, 487, 637], "especially": [461, 470, 475, 481, 484, 485, 486, 491, 513, 518, 530, 531, 538, 539, 545, 550, 568, 579, 580, 583, 591, 607, 609, 610, 616, 618, 625, 626, 627, 631, 632, 636, 646, 654], "espresso": 640, "essenc": [538, 626], "essential": [473, 570, 588, 591, 646], "essentially": [470, 485, 513, 528, 547, 609, 611, 612, 625, 626, 636], "essentiel": 7, "establish": [534, 538, 540, 579, 611, 626, 636, 646, 682], "established": [483, 536, 545, 547, 579, 593, 626, 630], "estim": 616, "estimat": [513, 645], "estimated": 591, "estimating": [474, 616], "et_dyn": 466, "et_rel": 466, "etc": [48, 142, 238, 391, 466, 468, 469, 470, 473, 478, 481, 483, 486, 487, 488, 504, 513, 517, 529, 533, 534, 538, 539, 547, 548, 549, 550, 552, 559, 569, 571, 572, 576, 579, 580, 581, 582, 585, 590, 591, 593, 594, 597, 600, 606, 607, 608, 611, 617, 618, 619, 620, 621, 622, 623, 625, 626, 631, 632, 634, 635, 636, 637, 639, 642, 644, 646, 648, 649, 650, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "ethnicity": 484, "eurollvm": 546, "european": 616, "evalu": [482, 487, 578, 579, 592, 593, 626, 646, 671, 672, 677, 683, 686], "evaluat": [461, 466, 479, 482, 487, 579, 581, 591, 616, 623, 626, 636, 646, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "evaluated": [461, 465, 466, 481, 482, 486, 535, 541, 553, 579, 636, 671, 672, 673, 674, 682, 683, 684, 685], "evaluating": [461, 469, 486, 487, 535, 547, 548, 579], "even": [461, 465, 466, 469, 471, 473, 474, 478, 479, 483, 484, 485, 486, 487, 491, 493, 501, 514, 515, 517, 526, 531, 534, 538, 539, 544, 545, 550, 554, 562, 568, 569, 573, 575, 579, 581, 582, 583, 586, 587, 591, 593, 595, 601, 602, 605, 608, 609, 611, 614, 630, 631, 632, 634, 636, 637, 640, 641, 645, 648, 652, 654, 655, 656, 671, 672, 673, 674, 677, 679, 682, 684, 685, 686], "evenly": 645, "event": [481, 484, 513, 519, 581, 588, 609, 621, 628, 630, 649, 650, 651, 653], "event_siz": 651, "eventual": [626, 630], "eventually": [467, 487, 538, 540, 554, 562, 573, 578, 579, 581, 583, 590, 607, 625, 630, 640, 654, 672, 683], "ever": [466, 469, 486, 538, 553, 579, 600, 609, 634, 655, 656, 677, 686], "evergreen": 466, "every": [461, 466, 469, 470, 472, 473, 474, 475, 477, 479, 482, 483, 485, 487, 491, 499, 505, 513, 515, 516, 518, 528, 530, 534, 535, 538, 540, 542, 543, 545, 547, 549, 553, 554, 567, 568, 572, 573, 575, 579, 580, 581, 583, 585, 588, 589, 590, 591, 592, 593, 595, 596, 601, 604, 607, 609, 611, 619, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 643, 647, 648, 651, 655, 669, 671, 672, 674, 676, 677, 682, 683, 685, 686], "everybody": 485, "everyon": [538, 621, 623, 677, 686], "everything": [470, 477, 479, 482, 483, 530, 531, 533, 548, 550, 551, 552, 565, 568, 569, 571, 572, 579, 592, 611, 632, 641, 648, 655, 669, 670, 672, 673, 679, 680, 681, 683, 684], "everywher": [575, 590, 591, 641, 652, 671, 682], "evex": [529, 634], "evex2vex": 529, "evex2vexoverrid": 636, "evex_w1_vex_w0": 636, "evidenced": 548, "evident": [614, 626, 632], "evil": [472, 609, 637], "evl": 579, "evlmask": 579, "evolu": [583, 648], "evolutionary": 581, "evolv": [476, 484, 582], "evolved": 461, "evolving": 538, "evt": 554, "ex": [530, 538, 572, 577, 619, 632], "ex2": 592, "exact": [470, 486, 487, 504, 530, 540, 547, 550, 566, 579, 582, 585, 594, 595, 602, 607, 625, 626, 630, 634, 636, 640, 646, 648], "exact_artifact_path": 581, "exactly": [461, 464, 466, 469, 472, 473, 481, 486, 487, 491, 509, 518, 530, 534, 540, 542, 547, 555, 560, 573, 575, 579, 591, 597, 601, 607, 608, 609, 612, 620, 621, 625, 630, 631, 634, 635, 648, 650, 652, 671, 682], "exactmatch": 579, "examin": [483, 499, 517, 534, 584, 626, 636, 641, 646, 654], "examined": [579, 630, 646, 655], "examining": [461, 477, 572, 599, 625], "exampl": [20, 48, 49, 54, 87, 114, 143, 145, 173, 201, 206, 238, 239, 240, 244, 277, 303, 363, 391, 392, 393, 397, 432, 460, 462, 463, 464, 465, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 481, 482, 483, 485, 486, 487, 488, 501, 502, 513, 515, 516, 517, 523, 526, 528, 530, 531, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 553, 554, 556, 559, 560, 567, 568, 570, 571, 572, 573, 574, 575, 576, 578, 580, 583, 585, 587, 590, 591, 592, 593, 595, 596, 597, 601, 602, 606, 607, 608, 610, 611, 612, 614, 616, 617, 619, 620, 622, 623, 625, 626, 628, 630, 631, 634, 635, 639, 640, 641, 642, 643, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "exampletest": 491, "exceed": [54, 114, 145, 201, 244, 303, 397, 460, 461, 464, 466, 486, 579, 625, 626], "exceeded": 622, "exceedingly": 626, "excel": 609, "excellent": [469, 482, 543, 550, 588, 609, 646], "except": [461, 462, 463, 464, 466, 469, 470, 472, 473, 479, 481, 483, 484, 487, 491, 492, 493, 496, 497, 500, 515, 526, 530, 531, 532, 534, 538, 542, 543, 545, 548, 554, 555, 558, 566, 583, 585, 589, 591, 592, 593, 594, 597, 609, 611, 617, 618, 625, 628, 630, 631, 635, 636, 641, 642, 646, 648, 652, 654, 655, 656, 657, 670, 671, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "exceptional": 579, "excerpt": 592, "excess": [486, 487, 492, 493, 581], "exchang": [550, 609], "exchange2_": 613, "exchange2_r": 613, "excis": 579, "excised": 579, "excited": [677, 686], "exciting": [538, 572], "exclam": 579, "exclud": [471, 483, 487, 514, 515, 517, 529, 538, 553, 579, 614], "excluded": [461, 488, 517, 518, 538, 577, 579, 620], "excluding": [478, 495, 504, 513, 579, 642], "exclus": [470, 483, 511, 530, 579, 593, 636], "exclusionary": 484, "exclusively": [630, 643], "excp_en": 466, "excp_en_msb": 466, "exctyp": 540, "exctype1": 540, "exctypen": 540, "excus": [476, 484], "exe": [490, 527, 552, 567, 597, 605, 641, 676], "exec": [9, 10, 11, 12, 73, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 146, 157, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 180, 181, 183, 184, 245, 261, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 283, 285, 286, 306, 307, 311, 312, 318, 319, 320, 321, 322, 341, 345, 346, 347, 348, 350, 351, 398, 407, 408, 416, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 435, 437, 438, 440, 441, 464, 466, 471, 488, 581], "exec_h": 465, "exec_lo": 465, "exec_mask_32": 466, "exec_mask_64": 466, "exec_tim": 639, "execinfo": 566, "execu": [461, 469, 474, 475, 480, 483, 488, 499, 505, 513, 518, 531, 533, 534, 535, 536, 540, 544, 545, 551, 552, 566, 579, 580, 581, 583, 584, 593, 616, 625, 626, 628, 630, 635, 640, 642, 644, 645, 646, 648, 649, 650, 651, 654, 655, 656, 671, 672, 682, 683], "execut": [60, 250, 403, 461, 465, 466, 470, 474, 477, 480, 481, 482, 483, 486, 488, 489, 490, 491, 492, 495, 499, 500, 507, 513, 514, 515, 516, 521, 522, 523, 525, 526, 527, 532, 534, 535, 536, 540, 542, 545, 547, 550, 552, 553, 557, 570, 574, 579, 581, 583, 592, 593, 594, 597, 609, 610, 616, 623, 624, 625, 626, 628, 631, 639, 641, 642, 645, 648, 654, 655, 656, 669, 670, 672, 673, 676, 677, 680, 681, 683], "executable_format_error": 609, "executed": [461, 466, 486, 491, 495, 499, 505, 513, 528, 530, 534, 535, 539, 540, 545, 547, 550, 559, 579, 583, 584, 592, 593, 607, 609, 616, 618, 626, 630, 634, 640, 641, 642, 645, 648, 655, 674, 685], "executeprogramandw": 631, "executing": [461, 466, 477, 482, 491, 493, 513, 534, 540, 550, 579, 580, 581, 626, 630, 641, 642, 647, 648, 651, 654, 655, 671, 672, 673, 674, 682, 683], "executionengin": [483, 536, 550, 593, 609, 614, 654, 655, 656, 657, 682, 683, 684, 685], "executionsess": [593, 654, 655, 656, 657], "executionutil": [654, 655, 656, 657], "execv": 631, "execz": [9, 10, 11, 12, 55, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 93, 94, 146, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 180, 181, 183, 245, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 282, 283, 285, 306, 307, 311, 312, 318, 319, 320, 321, 322, 341, 346, 347, 348, 350, 351, 398, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 437, 438, 440], "exedepsfix": 562, "exedomain": 636, "exeext": 641, "exeges": [490, 529, 618], "exempl": [121, 142], "exempt": 486, "exercis": [546, 641, 654, 677, 686], "exercised": [622, 630], "exhaust": [479, 483, 484, 486, 545, 550, 609], "exhausted": [547, 559, 622], "exhib": [477, 579, 626], "exhibit": 470, "exigent": 609, "exist": [461, 464, 466, 469, 470, 473, 478, 479, 481, 482, 483, 485, 486, 487, 491, 495, 499, 514, 517, 518, 534, 538, 540, 542, 547, 548, 553, 574, 579, 581, 583, 589, 590, 602, 605, 607, 609, 610, 611, 613, 625, 628, 630, 631, 635, 636, 647, 648, 652, 654, 670, 671, 672, 673, 674, 675, 676, 683], "existed": [487, 538, 579, 621, 625], "existent": [483, 578, 579, 602, 628, 652], "existing": [461, 470, 481, 483, 486, 489, 491, 492, 495, 499, 503, 505, 513, 518, 531, 534, 538, 540, 541, 545, 547, 552, 559, 560, 562, 565, 567, 575, 579, 581, 585, 593, 597, 602, 607, 608, 609, 611, 614, 615, 616, 622, 623, 625, 626, 627, 630, 631, 632, 635, 637, 641, 642, 644, 646, 647, 652, 670, 671, 672, 673, 675, 676, 677, 681, 683, 684, 686], "exit": [461, 466, 474, 478, 483, 511, 516, 536, 540, 543, 545, 550, 553, 579, 581, 583, 591, 592, 593, 609, 611, 616, 625, 626, 640, 642, 648, 649, 650, 651, 656, 657, 672, 674, 675, 676, 677, 683, 686], "exit5": 592, "exitcod": 491, "exitcond": [579, 642], "exited": [466, 536, 540, 579, 583, 651], "exiting": [540, 545, 581, 583, 609, 672, 683], "exitonerr": [593, 609, 671, 672, 673, 674, 675, 676], "exitonerror": [671, 672, 673, 674, 675, 676], "exmapl": 593, "exn": [534, 579], "exp": [87, 173, 277, 432, 475, 645], "exp0": 639, "exp1": 639, "exp2": [639, 645], "exp_cnt": [114, 201, 303, 460], "expand": [461, 467, 470, 478, 483, 486, 491, 499, 521, 522, 535, 541, 554, 575, 579, 614, 625, 636, 637, 641, 652], "expandatomicrmwin": 470, "expanded": [461, 470, 483, 491, 497, 521, 522, 529, 535, 543, 579, 591, 611, 614, 623, 636, 649], "expanding": [483, 491, 538, 541, 576, 614, 649], "expandinlineasm": 646, "expandop": 541, "expans": [470, 482, 483, 499, 529, 535, 545, 559, 576, 579, 581, 585, 646], "expansionregiontag": 535, "expcnt": [114, 201, 303, 460, 466], "expcnt_sat": [114, 201, 303, 460], "expect": [466, 469, 471, 472, 473, 476, 482, 483, 485, 487, 491, 499, 530, 534, 538, 548, 555, 559, 576, 581, 583, 591, 596, 600, 604, 607, 609, 615, 620, 623, 626, 628, 629, 630, 631, 641, 651, 652, 669, 672, 679, 680, 683], "expected": [461, 465, 470, 474, 475, 479, 483, 485, 486, 487, 491, 499, 513, 530, 534, 538, 544, 545, 547, 550, 552, 559, 579, 581, 589, 590, 609, 614, 618, 620, 622, 623, 624, 625, 626, 628, 630, 634, 636, 639, 640, 641, 647, 648, 651, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "expected_val": 579, "expectedtoerroror": 609, "expecting": [470, 487, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "expens": [470, 479, 481, 486, 513, 530, 531, 540, 544, 556, 559, 562, 579, 581, 591, 607, 609, 626, 646, 648], "expensive_check": 486, "exper": [461, 614, 639, 655, 671, 678, 682], "experiencing": 477, "experient": [461, 481, 484, 485, 568, 575, 586, 590, 591, 625, 654, 671, 678, 682], "experiment": [541, 614], "experimental": [466, 480, 481, 538, 567, 581, 585, 617, 618, 626, 632], "experimenting": 630, "expert": 623, "expertis": 612, "expir": [611, 623], "explain": [466, 469, 472, 481, 483, 485, 486, 487, 513, 529, 538, 579, 583, 591, 609, 614, 623, 644, 648, 651, 674, 678, 685], "explained": [464, 465, 495, 543, 609, 624, 649], "explaining": [539, 608, 632, 678, 679], "explan": [479, 481, 539, 543, 550, 573, 579, 591, 621], "explanatory": [538, 597], "explic": [461, 466, 470, 483, 484, 485, 486, 505, 518, 530, 537, 542, 543, 544, 547, 548, 550, 555, 559, 573, 579, 580, 591, 592, 609, 615, 616, 618, 621, 626, 647, 648, 654, 672, 673, 674, 675, 676, 677, 682, 683, 684, 685, 686], "explicitly": [461, 466, 468, 469, 481, 483, 485, 486, 487, 530, 531, 534, 536, 538, 543, 545, 547, 548, 553, 578, 579, 581, 584, 585, 593, 607, 608, 609, 611, 625, 626, 630, 632, 634, 636, 640, 642, 645, 670, 677, 681, 686], "expliqu": [0, 1, 2, 3, 4, 5, 6, 7, 8], "exploit": [618, 626, 671], "exploited": 544, "exploiting": [616, 626], "explor": [505, 608, 609, 623], "explored": [534, 630], "exploring": [649, 650], "exponent": [465, 579], "exponential": [530, 555, 579], "exponentially": 607, "export": [87, 96, 114, 173, 185, 201, 277, 287, 303, 432, 442, 460, 464, 469, 481, 516, 517, 522, 536, 565, 572, 579, 611, 619, 671, 673], "exported": [483, 499, 516, 517, 530, 550, 579, 582, 593, 605, 657, 673], "exporting": [499, 579, 593], "exportsymbol": 579, "expos": [461, 466, 469, 483, 486, 491, 517, 547, 550, 579, 593, 609, 630, 648], "exposed": [469, 470, 477, 483, 530, 579, 634, 674, 685], "exposesreturnstwic": 585, "exposing": [470, 582, 607, 626], "exposit": [579, 679], "expr": [465, 487, 506, 529, 536, 579, 614, 636, 669, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "expr0lh": 535, "expr0rh": 535, "expr1lh": 535, "expr1rh": 535, "expr_prec": [680, 681, 682, 683, 684, 685], "exprast": [657, 669, 670, 671, 672, 673, 674, 675, 676, 680], "express": [48, 54, 114, 142, 145, 201, 238, 244, 303, 391, 397, 460, 464, 475, 483, 484, 485, 486, 487, 491, 499, 504, 506, 515, 517, 526, 529, 530, 534, 543, 545, 547, 548, 550, 558, 580, 581, 583, 585, 593, 609, 620, 625, 628, 634, 641, 646, 648, 652, 654, 668, 671, 673, 674, 675, 676, 677, 679, 682, 684, 685, 686], "expressed": [461, 469, 483, 501, 504, 541, 579, 614, 651, 652], "expressing": [579, 609], "expressiveness": 461, "exprloc": 461, "exprprec": [669, 670, 671, 672, 673, 674, 675, 676], "exprproc": 461, "exprsymbol": [671, 672, 673, 674], "ext": [472, 579, 648], "extab": 618, "extbinary": [518, 519], "extend": [461, 464, 465, 480, 483, 537, 541, 542, 545, 547, 555, 573, 579, 593, 605, 609, 616, 626, 629, 630, 636, 637, 654, 668, 669, 671, 672, 673, 674, 677, 678, 679, 680, 682, 683, 684, 685, 686], "extended": [461, 470, 487, 505, 515, 526, 530, 542, 550, 555, 579, 609, 618, 626, 629, 630, 637, 646, 655, 669, 673, 677, 680, 684, 686], "extending": [461, 483, 486, 491, 530, 555, 579, 611, 616, 626, 630, 637, 644, 646, 654, 671, 677, 678, 679, 682, 686, 687], "extens": [466, 470, 480, 481, 483, 485, 486, 489, 491, 492, 499, 508, 532, 538, 540, 541, 543, 545, 547, 549, 550, 554, 564, 579, 586, 589, 591, 607, 609, 612, 615, 617, 618, 619, 626, 630, 634, 636, 644, 645, 646, 669, 673, 674, 680, 684, 685, 688], "extensibility": [530, 609, 628], "extensibl": [466, 483, 518, 530, 579, 625, 631, 673, 684], "extensively": [609, 614], "extent": [538, 547, 548, 579, 614], "exterior": 630, "extern": [472, 514, 527, 530, 565, 566, 581, 582, 622, 646, 648, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "extern_weak": [473, 579], "external": [466, 473, 480, 481, 483, 489, 493, 514, 517, 531, 538, 545, 568, 570, 579, 581, 582, 584, 588, 591, 592, 593, 595, 606, 609, 613, 619, 620, 632, 643, 645, 646, 647, 648, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686], "externallinkag": [670, 671, 672, 673, 674, 675, 676, 681], "externally": [461, 495, 568, 579, 582, 614, 626, 630, 636, 643], "externally_initialized": [473, 579], "externallyinitialized": 579, "externalstorag": 530, "extra": [461, 466, 473, 475, 481, 482, 485, 486, 530, 539, 540, 545, 546, 550, 570, 571, 574, 579, 581, 583, 585, 589, 591, 601, 607, 609, 611, 614, 618, 619, 620, 621, 624, 626, 630, 632, 634, 639], "extra_sourc": 482, "extract": [483, 490, 495, 511, 515, 555, 559, 560, 609, 625, 626, 630, 634, 635, 636, 637, 641, 649], "extract_subreg": 585, "extract_subvector": 483, "extracted": [487, 495, 506, 535, 540, 552, 560, 579, 609, 625, 626, 636, 641, 646], "extractel": 472, "extracting": [495, 506, 609], "extractloop": 607, "extras": [517, 607], "extrem": [579, 581, 632, 648, 656, 687], "extremely": [469, 470, 473, 477, 483, 538, 544, 550, 566, 577, 579, 609, 625, 646, 674, 685], "exynosm3model": 646, "f": [461, 465, 466, 470, 472, 483, 486, 487, 489, 494, 495, 496, 499, 503, 504, 506, 510, 514, 515, 516, 518, 525, 527, 528, 530, 531, 534, 536, 540, 543, 547, 548, 550, 553, 575, 578, 579, 581, 592, 594, 597, 607, 609, 611, 618, 624, 625, 626, 630, 636, 643, 645, 646, 647, 648, 650, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "f0": [513, 579, 636, 646], "f00ba": 553, "f1": [548, 579, 591, 592, 636, 646], "f107": 592, "f108": 592, "f110": 592, "f128": [579, 646], "f16": [46, 50, 236, 304, 309, 314, 337, 389, 462, 464, 465, 579], "f16x2": [0, 1, 3, 4, 7, 8], "f16x4": 8, "f1f2": 591, "f2": [548, 579, 591, 592, 636, 646], "f2_1": 646, "f2_2": 646, "f3": [592, 636, 646], "f31": [579, 646], "f32": [0, 1, 2, 3, 4, 7, 8, 47, 50, 141, 237, 304, 309, 314, 337, 390, 462, 464, 465, 483, 531, 554, 575, 579, 592, 646], "f32x16": 8, "f32x2": [0, 2], "f32x32": 8, "f32x4": 8, "f3_1": 646, "f3_12": 646, "f3_2": 646, "f3_3": 646, "f4": 592, "f4rc": 483, "f5": 592, "f64": [0, 2, 464, 465, 483, 579, 592, 646], "f64x2": [0, 2], "f80": 579, "f88": 592, "f89": 592, "f90": 592, "f91": 592, "f92": 592, "f93": 592, "f934": 646, "f94": 592, "f95": 592, "f96": 592, "f97": 592, "f98": 592, "f99": 592, "fa": [465, 483], "fab": 645, "fac": [626, 648], "faced": [486, 624, 631], "facilit": [461, 486, 530, 543, 547, 552, 559, 588, 610, 611, 612, 625, 631, 635, 654], "facilitat": [480, 486, 538, 579, 609, 610, 616, 625, 652], "facilitating": 616, "facility": [469, 491, 636], "facing": [545, 634], "fact": [461, 469, 478, 483, 485, 486, 513, 530, 531, 534, 538, 540, 543, 545, 548, 550, 573, 579, 580, 590, 593, 609, 616, 621, 626, 629, 636, 648, 656, 671, 673, 674, 677, 682, 684, 685, 686], "fact0": 591, "fact1": 591, "factor": [466, 483, 486, 559, 579, 599, 609, 616, 623, 636, 637, 642, 645], "factored": [461, 483, 538, 637], "factorial": 607, "factory": [486, 609], "fadd": [467, 483, 541, 554, 592, 646, 670, 671, 672, 674, 681, 682, 683, 685], "fail": [466, 470, 478, 481, 486, 487, 488, 491, 493, 495, 518, 529, 530, 534, 540, 544, 550, 552, 553, 559, 566, 568, 574, 579, 593, 609, 611, 619, 625, 626, 631, 636, 640, 641, 645, 654, 655, 670], "failed": [491, 544, 553, 554, 574, 579, 619, 622, 625, 629, 645, 655], "failedisel": 560, "failing": [486, 491, 538, 544, 609, 623, 632], "faill": 653, "failmaterializ": 655, "failtkind": 544, "failur": [461, 477, 478, 485, 487, 488, 491, 514, 518, 533, 538, 550, 552, 564, 567, 568, 574, 579, 581, 593, 594, 609, 611, 617, 619, 620, 625, 626, 640, 641, 645, 648, 652, 679, 680], "failure_ord": 470, "fairly": [469, 470, 485, 537, 543, 545, 554, 566, 609, 622, 646, 669, 672, 673, 679, 680, 683, 684, 686], "faithful": 540, "fak": 493, "falkormodel": 646, "falkorwr_1vxvy_2cyc": 646, "falkorwr_2vxvy_2cyc": 646, "fall": [470, 474, 486, 487, 523, 527, 530, 534, 547, 559, 579, 583, 593, 607, 609, 623, 626, 630, 632, 646, 671, 672, 673, 674, 675, 676, 682, 683, 684, 685], "fallback": [473, 527, 547, 559, 564, 579, 622, 626, 642], "fallible_iterator": 609, "falliblechilditerator": 609, "falling": [566, 671], "fallthrough": [480, 579, 626], "fals": [466, 469, 475, 477, 486, 487, 488, 491, 493, 499, 505, 518, 527, 529, 530, 534, 535, 543, 550, 555, 566, 571, 573, 575, 577, 579, 581, 582, 583, 585, 591, 594, 597, 607, 609, 622, 625, 629, 634, 635, 636, 646, 648, 649, 656, 670, 671, 672, 673, 674, 675, 676, 683], "false_branch_weight": 475, "falsebr": 625, "falsedest": 579, "famil": 466, "familiar": [461, 466, 483, 485, 517, 533, 540, 545, 554, 573, 591, 623, 648, 654, 672, 676, 679, 683], "familiarity": [531, 592], "familiariz": 533, "familiarizing": 550, "family": [466, 484, 529, 579, 609, 618, 625, 630, 677, 686], "fan": 569, "fanci": [586, 648], "fancy": 640, "fancya": 648, "fancyobject": 626, "faq": [538, 579, 677, 686], "far": [461, 469, 482, 530, 541, 579, 588, 596, 597, 601, 604, 609, 612, 623, 625, 626, 648, 650, 655, 656, 669, 670, 673, 674, 677, 680, 681, 684, 685, 686], "far16": 596, "far32": 596, "faraway": 486, "farm": 491, "farpoint": 604, "farpointer32": 604, "fashion": [485, 541, 542, 579, 612, 626, 646], "fast": [461, 477, 479, 483, 486, 492, 495, 518, 529, 531, 540, 545, 546, 550, 553, 560, 562, 564, 567, 568, 581, 586, 589, 590, 591, 605, 609, 611, 622, 625, 626, 627, 634, 646, 648, 674, 678, 685], "fast_filter_branch": 611, "fast_path": 579, "fastcall": 483, "fastcc": [473, 483, 534, 543, 579], "fastem": 634, "fastest": 567, "fastisel": 579, "fastiselshouldignor": 636, "fastlink": 602, "fastmath": 592, "fat": [466, 511, 531], "fatal": [529, 635], "fatbin": 531, "fault": [466, 472, 485, 488, 516, 538, 566, 626], "faulted": 540, "faulting": [544, 617], "faultingload": 544, "faultingloadstor": 544, "faultingpcoffset": 544, "faultingstor": 544, "faultkind": 544, "faultmap": [579, 617], "favor": [485, 486, 538, 575, 602, 636, 637], "favorably": 626, "favorit": [580, 612, 672, 683], "fa\u00e7on": 653, "fbb": 646, "fca": 580, "fcc_g": 646, "fcc_u": 646, "fcc_ug": 646, "fcc_val": 646, "fcf": 579, "fcmp": [670, 672, 674, 681, 682, 683, 684, 685], "fcmpinst": 609, "fcom": 483, "fcontext": 676, "fcos": 646, "fcoverag": [499, 535], "fcud": 531, "fcur": 591, "fdat": 618, "fde": [461, 466, 483, 580], "fdebug": [489, 527], "fdiv": 615, "fdr": 649, "fe": [547, 588], "fear": 538, "feasibl": [538, 579, 625, 626, 650], "featur": [461, 464, 465, 478, 479, 480, 481, 482, 485, 486, 491, 495, 530, 534, 535, 536, 538, 542, 546, 549, 550, 556, 557, 566, 572, 573, 577, 578, 579, 582, 585, 588, 594, 601, 607, 608, 609, 610, 611, 618, 619, 622, 625, 630, 631, 634, 635, 636, 637, 646, 648, 650, 651, 652, 654, 669, 671, 672, 673, 674, 675, 677, 680, 683, 684, 685, 686], "featureb": 652, "featurec": 652, "featured": [483, 566, 591], "featurefparmv8": 637, "featurev": 646, "featurev8deprecated": 646, "featurev9": 646, "february": 614, "fed": [483, 616], "fedor": 539, "feed": [468, 469, 581, 593, 625, 672, 683], "feedback": [461, 533, 538, 567, 572, 579, 580, 614, 620, 621, 648, 655, 656, 657], "feeding": [579, 611], "feel": [461, 477, 478, 484, 485, 486, 533, 538, 545, 579, 588, 618, 621, 623, 647, 650, 668, 670, 677, 679, 681, 686], "femulated": 579, "fenc": [466, 470, 513, 545, 566, 590], "ferm": 483, "ferr": 537, "fetch": [461, 464, 475, 513, 579, 611, 622, 648], "fetched": [465, 466, 483], "fetching": [558, 611], "few": [466, 468, 470, 473, 477, 479, 481, 482, 483, 484, 486, 487, 495, 513, 528, 531, 538, 539, 540, 546, 547, 553, 554, 559, 569, 570, 572, 579, 583, 592, 607, 609, 610, 611, 612, 614, 625, 626, 630, 631, 635, 636, 641, 645, 646, 648, 650, 651, 656, 669, 670, 671, 673, 676, 677, 680, 681, 682, 684, 686], "fewerelements": 559, "fewerelementsfor": 559, "fexist": 591, "ffast": [531, 645], "ffi": [481, 543], "ffi_include_d": 481, "ffi_library_d": 481, "ffmpeg": 581, "ffp": 531, "fgr": 554, "fi": [0, 1, 547, 550, 611, 671, 672, 673, 674, 675, 676], "fib": [607, 668, 672, 674, 676, 679, 683, 685], "fibonacc": [552, 668, 679], "fiddl": 609, "fiddling": [571, 586, 627], "fidelity": 625, "field": [461, 466, 469, 473, 476, 482, 483, 487, 491, 513, 514, 515, 517, 523, 526, 533, 535, 545, 547, 548, 572, 577, 579, 590, 596, 597, 601, 602, 605, 608, 609, 618, 620, 622, 625, 626, 628, 630, 634, 646, 651, 652, 669, 677, 680, 686], "field1": 487, "field2": 487, "field3": 487, "field4": 487, "field_offset": 487, "fieldn": 487, "fieldty": 635, "fifth": [534, 579, 592, 646], "figur": [472, 477, 483, 530, 537, 574, 579, 590, 609, 623, 640, 641, 646, 648], "figured": [477, 623], "fij": 466, "fil": [461, 466, 467, 468, 475, 477, 478, 479, 481, 482, 488, 490, 492, 493, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 518, 519, 521, 522, 523, 525, 526, 527, 528, 529, 531, 532, 533, 536, 538, 539, 541, 542, 543, 546, 549, 552, 553, 554, 565, 567, 569, 571, 572, 574, 575, 577, 579, 581, 584, 586, 587, 590, 591, 592, 593, 595, 596, 599, 600, 602, 604, 608, 609, 610, 611, 612, 614, 617, 618, 619, 623, 626, 627, 630, 631, 632, 634, 635, 637, 639, 640, 643, 645, 646, 647, 648, 650, 651, 652, 654, 655, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 682, 685, 688], "file1": [466, 512], "file2": 466, "file_nam": 515, "file_path": 466, "file_ur": 466, "filecheck": [481, 488, 490, 517, 560, 575, 585, 625, 641, 647], "filecheck_opt": 487, "filed": [572, 580, 623, 630], "fileinfosubstream": 597, "fileit": 530, "filelist": 509, "filemagic": 601, "filenam": [481, 486, 487, 488, 489, 492, 493, 495, 496, 497, 498, 499, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 516, 518, 521, 522, 523, 524, 527, 528, 529, 530, 531, 535, 542, 575, 609, 620, 625, 627, 637, 639, 649, 675, 676], "filename0": 535, "filename1": 535, "filenameindex0": 535, "filenameindex1": 535, "filenameoffset": 597, "filenotfound": 609, "filenumb": 542, "fileorerr": 609, "filepos": 530, "filesiz": 524, "filesizepars": 530, "filesystem": [491, 539, 571, 675], "filetyp": [492, 552, 625, 675], "filing": 630, "fill": [464, 465, 469, 476, 486, 505, 530, 539, 567, 574, 579, 608, 609, 648, 650, 651, 652], "filled": [476, 486, 530, 572, 579, 608, 625, 626, 630, 636, 652, 668, 669, 670, 671, 672, 673, 674, 675, 676], "filling": [466, 531], "filt": [481, 487, 491, 499, 500, 514, 517, 518, 529, 577, 579, 620, 636, 639, 641], "filter": [483, 517, 538, 650], "filterclass": [577, 634, 635], "filtered": [499, 505, 579], "filtering": [66, 153, 254, 409, 636, 650], "fin": [469, 472, 476, 485, 486, 517, 530, 536, 545, 548, 550, 552, 553, 573, 579, 593, 611, 631, 651, 674, 679, 685], "final": [461, 466, 473, 479, 480, 483, 485, 513, 516, 518, 535, 539, 542, 547, 550, 569, 578, 579, 596, 597, 602, 609, 610, 611, 616, 619, 620, 625, 630, 636, 637, 646, 648, 649, 651, 670, 671, 672, 673, 674, 677, 681, 683, 684, 685, 686], "finaliz": [466, 618, 649, 651, 676], "finalize_status": 649, "finalized": [483, 538, 623, 649, 651], "finalizememory": 584, "finalizeobject": [584, 676], "finalizing": 649, "finally": [461, 470, 476, 477, 483, 486, 491, 530, 535, 540, 547, 571, 572, 573, 579, 582, 584, 590, 591, 595, 600, 609, 611, 616, 625, 634, 635, 636, 641, 646, 648, 654, 656, 668, 669, 670, 671, 672, 674, 675, 679, 680, 683, 684, 685], "financial": 611, "find": [461, 466, 468, 469, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 491, 499, 502, 504, 517, 529, 530, 535, 538, 539, 540, 541, 546, 548, 549, 550, 552, 554, 555, 560, 566, 568, 570, 571, 574, 579, 581, 582, 583, 586, 590, 591, 593, 602, 608, 609, 610, 611, 617, 619, 621, 623, 625, 626, 628, 630, 631, 637, 639, 640, 646, 648, 652, 654, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "find_": 609, "find_packag": 481, "find_program": 481, "findanalysispass": 650, "finding": [476, 477, 488, 491, 517, 545, 553, 566, 579, 581, 590, 607, 611, 623, 625, 626, 649, 650], "findings_d": 581, "findlead": 609, "findsymbol": [656, 671], "finish": [464, 468, 486, 536, 538, 591, 608, 645, 650, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "finishassembly": 547, "finished": [466, 477, 481, 483, 534, 539, 540, 579, 584, 586, 619, 627, 636, 648, 670, 672, 681, 683], "finit": [483, 579, 634], "finliz": 466, "fir": [486, 530, 579], "firefox": [572, 614], "firepro": 466, "firing": 477, "first": [16, 48, 54, 87, 117, 142, 145, 173, 202, 238, 244, 277, 326, 359, 391, 397, 432, 461, 463, 464, 465, 466, 469, 470, 472, 473, 475, 477, 478, 479, 481, 482, 483, 485, 486, 487, 489, 491, 493, 495, 499, 503, 504, 506, 511, 513, 515, 516, 527, 528, 530, 534, 535, 537, 538, 539, 540, 542, 543, 547, 550, 552, 553, 554, 555, 558, 559, 563, 567, 569, 572, 573, 574, 575, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 599, 601, 602, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 634, 636, 637, 639, 640, 641, 642, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687], "first_wavefront": 466, "firstcondit": 609, "firstlet": 536, "firstly": 579, "fished": 593, "fit": [466, 472, 483, 486, 530, 531, 538, 548, 555, 570, 579, 601, 607, 608, 609, 622, 625, 632, 651, 655, 672, 683], "fiv": [461, 470, 483, 530, 537, 540, 554, 581, 590, 609, 623, 635, 636], "fix": [479, 486, 487, 530, 538, 548, 572, 574, 586, 609, 611, 612, 614, 618, 619, 623, 625, 627, 630, 632, 642, 648, 669, 670, 671, 677, 680, 681, 686], "fixabl": 545, "fixed": [461, 462, 463, 470, 474, 476, 486, 487, 491, 534, 536, 538, 566, 572, 574, 581, 589, 593, 596, 597, 602, 605, 611, 614, 619, 620, 622, 624, 626, 628, 632, 634, 636, 637, 642, 646, 649, 652, 669, 674, 677, 680, 685, 686], "fixedstack": 585, "fixedt": 625, "fixing": [486, 533, 538, 580, 591, 614, 623, 632, 656, 679], "fixm": [487, 539, 550, 621, 640, 646], "fixup": 597, "fl": 591, "flag": [464, 465, 466, 468, 478, 480, 481, 482, 483, 488, 498, 499, 505, 511, 513, 515, 518, 522, 526, 527, 534, 536, 538, 539, 542, 545, 546, 547, 550, 552, 553, 555, 565, 568, 569, 570, 571, 575, 577, 581, 589, 591, 592, 595, 596, 597, 601, 602, 609, 615, 619, 620, 622, 625, 628, 630, 641, 646, 649, 650, 652, 681, 682, 683, 684, 685], "flag1": [581, 591], "flag2": [581, 591], "flagflat": 652, "flagged": [480, 487, 579], "flaghollow": 652, "flagpointy": 652, "flagprototyped": 676, "flaground": 652, "flagscpu1": 652, "flagscpu2": 652, "flagscpumask": 652, "flagsfeatur": 652, "flagsfeatureb": 652, "flagsfeaturec": 652, "flagsflat": 652, "flagshollow": 652, "flagspointy": 652, "flagsround": 652, "flakypass": 491, "flam": 649, "flamegraph": 650, "flang": 553, "flat": [18, 41, 42, 64, 65, 99, 100, 119, 137, 138, 204, 231, 232, 336, 345, 353, 361, 384, 385, 407, 408, 445, 446, 465, 489, 596, 652], "flat32": 596, "flat_atomic": 466, "flat_atomic_add": [0, 2, 3, 4], "flat_atomic_add_x2": [0, 2, 3, 4], "flat_atomic_and": [0, 2, 3, 4], "flat_atomic_and_x2": [0, 2, 3, 4], "flat_atomic_cmpswap": [0, 2, 3, 4, 466], "flat_atomic_cmpswap_x2": [0, 2, 3, 4], "flat_atomic_dec": [0, 2, 3, 4], "flat_atomic_dec_x2": [0, 2, 3, 4], "flat_atomic_fcmpswap": [0, 2], "flat_atomic_fcmpswap_x2": [0, 2], "flat_atomic_fmax": [0, 2], "flat_atomic_fmax_x2": [0, 2, 466], "flat_atomic_fmin": [0, 2], "flat_atomic_fmin_x2": [0, 2], "flat_atomic_inc": [0, 2, 3, 4], "flat_atomic_inc_x2": [0, 2, 3, 4], "flat_atomic_or": [0, 2, 3, 4], "flat_atomic_or_x2": [0, 2, 3, 4], "flat_atomic_smax": [0, 2, 3, 4], "flat_atomic_smax_x2": [0, 2, 3, 4], "flat_atomic_smin": [0, 2, 3, 4], "flat_atomic_smin_x2": [0, 2, 3, 4], "flat_atomic_sub": [0, 2, 3, 4], "flat_atomic_sub_x2": [0, 2, 3, 4], "flat_atomic_swap": [0, 2, 3, 4, 466], "flat_atomic_swap_x2": [0, 2, 3, 4], "flat_atomic_umax": [0, 2, 3, 4], "flat_atomic_umax_x2": [0, 2, 3, 4], "flat_atomic_umin": [0, 2, 3, 4], "flat_atomic_umin_x2": [0, 2, 3, 4], "flat_atomic_xor": [0, 2, 3, 4], "flat_atomic_xor_x2": [0, 2, 3, 4], "flat_load": 466, "flat_load_dword": [0, 2, 3, 4, 466], "flat_load_dwordx2": [0, 2, 3, 4], "flat_load_dwordx3": [0, 2, 3, 4], "flat_load_dwordx4": [0, 2, 3, 4, 463], "flat_load_sbyt": [0, 2, 3, 4], "flat_load_sbyte_d16": [0, 4], "flat_load_sbyte_d16_h": [0, 4], "flat_load_short_d16": [0, 4], "flat_load_short_d16_h": [0, 4], "flat_load_sshort": [0, 2, 3, 4], "flat_load_ubyt": [0, 2, 3, 4], "flat_load_ubyte_d16": [0, 4], "flat_load_ubyte_d16_h": [0, 4], "flat_load_ushort": [0, 2, 3, 4], "flat_scratch": [23, 122, 146, 147, 156, 157, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 207, 245, 246, 256, 257, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 306, 307, 311, 312, 318, 319, 320, 321, 322, 341, 345, 346, 347, 348, 350, 351, 364, 366, 377, 378, 398, 399, 400, 407, 408, 411, 412, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 466], "flat_scratch_h": [48, 465, 466], "flat_scratch_lo": [48, 465, 466], "flat_stor": 466, "flat_store_byt": [0, 2, 3, 4], "flat_store_byte_d16_h": [0, 4], "flat_store_dword": [0, 2, 3, 4, 466], "flat_store_dwordx2": [0, 2, 3, 4], "flat_store_dwordx3": [0, 2, 3, 4, 466], "flat_store_dwordx4": [0, 2, 3, 4], "flat_store_short": [0, 2, 3, 4], "flat_store_short_d16_h": [0, 4], "flatten": 645, "flattened": [483, 579], "flavor": [569, 579, 609, 625], "flavour": 560, "flaw": [554, 626], "flawed": 614, "fldcw": 483, "fldcww": 483, "fleet": 539, "flexibility": [483, 530, 559, 560, 579, 609, 636, 648, 673, 684], "flexibl": [466, 483, 490, 491, 547, 573, 590, 637, 641], "flight": [513, 540, 579], "flipped": 579, "float": [473, 483, 493, 513, 530, 542, 548, 554, 555, 568, 571, 579, 591, 592, 625, 645, 646, 652, 672, 679, 680, 681, 682, 683, 684, 685], "float128": 604, "float16": 604, "float32": 604, "float32partialprecis": 604, "float48": 604, "float64": 604, "float80": 604, "float_denorm_mode_16_64": 466, "float_denorm_mode_32": 466, "float_denorm_mode_flush_dst": 466, "float_denorm_mode_flush_non": 466, "float_denorm_mode_flush_src": 466, "float_denorm_mode_flush_src_dst": 466, "float_mod": 466, "float_of_string": [679, 680, 681, 682, 683, 684, 685], "float_round_mode_16_64": 466, "float_round_mode_32": 466, "float_round_mode_minus_infinity": 466, "float_round_mode_near_even": 466, "float_round_mode_plus_infinity": 466, "float_round_mode_zero": 466, "floating": [46, 47, 51, 53, 141, 144, 236, 237, 241, 243, 305, 310, 315, 317, 338, 340, 389, 390, 394, 396, 463, 464, 473, 474, 475, 483, 492, 513, 530, 531, 541, 545, 554, 562, 570, 609, 618, 637, 644, 645, 646, 668, 669, 670, 671, 672, 679, 680, 681, 682], "floatscalarty": 579, "floattyp": 609, "floor": 645, "floorf": 645, "flow": [466, 469, 477, 483, 486, 502, 531, 534, 537, 538, 540, 544, 545, 549, 579, 580, 582, 583, 584, 586, 590, 592, 607, 609, 616, 617, 625, 626, 630, 643, 644, 645, 646, 648, 669, 670, 671, 673, 674, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687], "floyd": 613, "flt_round": 579, "flto": [481, 565, 582, 594], "flush": [466, 486, 513, 531, 579, 592, 649, 675, 680, 681, 682, 683, 684, 685], "flush_status": 649, "flushed": [568, 579, 584, 649, 651], "flushing": [579, 649], "flux": 566, "flwend": 613, "fly": [483, 599, 654, 669, 671, 680, 682], "fma": [483, 531, 575, 592, 645], "fma3d": 613, "fmadd": 483, "fmax": 555, "fmaximum": 555, "fmaxnum": 555, "fmaxnum_iee": 555, "fmin": 555, "fminimum": 555, "fminnum": 555, "fminnum_iee": 555, "fmod": 579, "fmt": [2, 3, 4, 487], "fmt_align": 609, "fmt_pad": 609, "fmt_repeat": 609, "fmtspec": 487, "fmul": [483, 592, 670, 671, 681, 682], "fmuladd": 645, "fn": [536, 579], "fnaddr": 534, "fnast": [657, 670, 671, 672, 673, 674, 675, 676], "fnentry": 473, "fnf": 609, "fnir": [670, 671, 672, 673, 674, 675, 676], "fnloc": 676, "fnnam": [669, 670, 671, 672, 673, 674, 675, 676], "fno": [468, 645], "fnptrval": 579, "fnstart": 483, "fntre": 591, "fnty": 579, "focus": [483, 484, 557, 560, 582, 586, 593, 609, 626, 627, 630, 645, 646, 654, 678], "focused": [461, 466, 547, 593, 612, 626, 641, 655], "focusing": [483, 502], "fold": [481, 529, 539, 541, 556, 557, 579, 607, 626, 628, 636, 671, 682], "foldabl": 556, "folded": [469, 470, 483, 544, 545, 557, 575, 579, 625, 682], "foldgenregform": 636, "folding": [470, 541, 544, 557, 579, 609, 617, 625, 648, 670], "foldingsetnod": 609, "foldingsetnodeid": 609, "foldl": 636, "foldmemoryoperand": [483, 646], "folk": [581, 608], "follow": [43, 233, 386, 461, 463, 464, 466, 467, 473, 482, 483, 485, 486, 487, 514, 517, 518, 527, 531, 533, 534, 535, 536, 538, 541, 542, 543, 544, 548, 550, 553, 555, 565, 566, 567, 571, 572, 574, 575, 579, 583, 586, 588, 589, 592, 594, 597, 599, 600, 601, 604, 605, 608, 609, 611, 612, 616, 618, 619, 621, 622, 623, 625, 627, 628, 630, 632, 634, 636, 640, 641, 642, 646, 648, 649, 651, 656, 669, 674, 676, 680, 685], "followed": [461, 466, 470, 473, 483, 486, 487, 499, 511, 513, 514, 542, 559, 575, 579, 581, 591, 597, 601, 604, 607, 609, 610, 622, 625, 630, 634, 635, 636, 641, 646, 651, 669, 672, 680, 683], "following": [48, 49, 54, 114, 143, 145, 201, 238, 239, 240, 244, 303, 391, 392, 393, 397, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 472, 473, 476, 477, 478, 479, 481, 482, 483, 486, 487, 488, 490, 491, 495, 496, 497, 501, 504, 505, 507, 508, 509, 511, 513, 515, 516, 518, 519, 522, 526, 527, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 545, 546, 547, 549, 550, 555, 557, 559, 560, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 577, 579, 581, 582, 583, 585, 586, 587, 591, 592, 593, 594, 595, 596, 597, 599, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 616, 620, 622, 623, 625, 626, 627, 628, 630, 631, 634, 635, 636, 637, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 656, 668, 673, 679, 684], "followup": 642, "followup_all": 642, "followup_coincident": 642, "followup_epilogu": 642, "followup_fallback": 642, "followup_inn": 642, "followup_out": 642, "followup_remaind": 642, "followup_remainder_inn": 642, "followup_remainder_out": 642, "followup_sequential": 642, "followup_unrolled": 642, "followup_vectorized": 642, "fom": [483, 607], "fonctionnal": [0, 1, 2, 3, 4, 5, 6, 7, 8], "foo": [469, 472, 474, 475, 481, 482, 483, 486, 487, 500, 501, 513, 518, 525, 527, 530, 531, 534, 535, 540, 542, 543, 547, 548, 560, 573, 574, 575, 578, 579, 581, 585, 590, 592, 593, 596, 609, 620, 625, 630, 634, 636, 641, 643, 645, 647, 652, 669, 670, 671, 672, 680, 681, 682, 683], "foo1": [565, 579, 582], "foo2": [565, 582], "foo3": [565, 582], "foo4": [565, 582], "foo_bar": 501, "foo_body": 593, "foo_ctor": 578, "foo_dtor": 578, "foo_in_a_cc": 475, "foo_test": 641, "foo_var": 482, "foobar": [486, 585, 652], "fooding": 614, "foof": 531, "foolproof": 648, "footnot": [554, 559, 583], "footprint": 554, "fopen": 612, "for": [1, 5, 8, 21, 22, 26, 27, 28, 29, 30, 33, 34, 35, 49, 64, 114, 122, 123, 126, 127, 128, 129, 130, 143, 201, 207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 221, 226, 228, 229, 233, 235, 239, 240, 303, 335, 345, 364, 365, 369, 370, 371, 372, 373, 376, 377, 378, 392, 393, 407, 460, 462, 463, 464, 465, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 504, 505, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 541, 542, 544, 547, 549, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 564, 566, 567, 568, 569, 571, 572, 574, 576, 577, 578, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 608, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 634, 635, 636, 637, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 668, 669, 670, 671, 673, 675, 676, 677, 678, 679, 680, 681, 682, 684, 686, 687], "for_each": 486, "forbidden": 631, "forc": [461, 463, 464, 466, 468, 481, 482, 486, 493, 517, 530, 531, 540, 542, 550, 578, 579, 609, 625, 628, 630, 634, 642, 645, 648, 652], "force_off": 481, "force_on": 481, "forced": [531, 579, 625, 642, 645], "forcedisassembl": 636, "forcefully": 548, "forcibly": 579, "forcing": [461, 486, 513, 550, 571, 593, 604, 626], "foreach": [482, 637], "foreachiterator": 636, "foreign": [481, 543], "forensic": 490, "foresee": 538, "forest": 583, "forev": 588, "forexpr": [672, 673, 674, 675, 676, 683, 684, 685], "forexprast": [672, 673, 674, 675, 676], "forget": [484, 486, 547, 553, 573, 608, 609, 676], "forgiv": 591, "forgotten": 675, "fork": [611, 614, 626, 631], "forking": [611, 616], "form": [142, 464, 466, 468, 469, 470, 473, 480, 481, 482, 486, 487, 488, 500, 501, 504, 516, 518, 530, 537, 538, 540, 542, 545, 546, 547, 548, 549, 550, 555, 559, 566, 569, 572, 573, 574, 577, 579, 580, 581, 582, 584, 585, 588, 590, 591, 592, 597, 604, 608, 609, 614, 616, 617, 618, 621, 625, 626, 628, 630, 634, 635, 636, 637, 640, 641, 643, 644, 646, 648, 649, 651, 652, 655, 668, 669, 670, 671, 672, 674, 675, 677, 678, 679, 680, 681, 682, 683, 685, 686], "formal": [461, 466, 504, 512, 531, 579, 583, 591, 609, 621], "format": [29, 30, 63, 120, 129, 130, 152, 205, 218, 219, 226, 227, 228, 229, 253, 362, 372, 373, 406, 463, 464, 465, 472, 480, 487, 489, 492, 493, 495, 497, 499, 500, 502, 505, 513, 514, 516, 517, 518, 519, 521, 523, 525, 526, 528, 529, 530, 532, 533, 536, 538, 541, 542, 543, 544, 547, 550, 552, 577, 579, 581, 584, 586, 588, 592, 593, 595, 596, 597, 600, 602, 604, 607, 609, 611, 614, 616, 617, 618, 620, 627, 634, 635, 636, 637, 640, 641, 644, 646, 649, 650, 652, 676], "format_int_custom": 609, "format_provid": 609, "formatadapt": 609, "formatstring": 466, "formatt": 579, "formatted": [466, 486, 504, 515, 533, 550, 608, 609, 652, 676], "formattedfil": 609, "formatting": [538, 652], "formatv": 635, "formbit": [636, 637], "formed": [461, 469, 483, 487, 530, 538, 579, 607, 609, 620, 623, 636, 648], "formerly": 609, "formfeed": 636, "forming": [483, 579, 609, 614, 626, 639], "formmask": 646, "formul": [466, 579], "formulated": 631, "forth": [461, 466, 470, 472, 554, 636], "fortran": [461, 579, 613, 618], "fortunately": [609, 671, 672, 674, 675, 677, 682, 683, 685, 686], "forum": [484, 538, 549, 579], "forward": [461, 466, 469, 470, 473, 483, 486, 531, 541, 547, 566, 575, 576, 579, 605, 607, 609, 611, 623, 625, 630, 631, 636, 649, 669, 672, 679, 680, 681], "forwarded": [540, 579], "forwarding": [513, 609], "fosdem17": 563, "fost": [538, 631], "foster": 538, "fostering": 611, "fotonik3d_": 613, "fotonik3d_r": 613, "found": [463, 465, 466, 469, 471, 477, 481, 483, 487, 488, 489, 491, 495, 497, 504, 505, 509, 510, 516, 527, 530, 531, 538, 539, 540, 546, 547, 549, 550, 552, 554, 555, 564, 570, 571, 572, 574, 577, 579, 581, 582, 585, 586, 588, 590, 591, 592, 593, 594, 597, 605, 607, 609, 610, 613, 615, 618, 619, 622, 623, 625, 626, 630, 631, 634, 639, 641, 645, 646, 648, 649, 652, 670, 671, 673, 674, 675, 676, 681, 684, 685], "foundat": [461, 466, 484, 538, 611, 621, 648], "foundfoo": 486, "four": [19, 120, 205, 362, 464, 466, 469, 470, 472, 473, 479, 483, 491, 513, 525, 530, 548, 560, 561, 569, 579, 592, 593, 635, 636, 646, 670, 671, 681], "fourinarow": 640, "fourteen": 623, "fourth": [534, 548, 579, 625, 628, 646, 648, 683], "foz": 527, "fp": [465, 466, 483, 492, 493, 513, 530, 543, 579, 585, 624, 625, 637, 646, 671, 672, 673, 674, 676], "fp0": [636, 637], "fp1": [636, 637], "fp128": [473, 579, 591], "fp16": [466, 529], "fp16_ovfl": 466, "fp2": [636, 637], "fp3": [636, 637], "fp4": [636, 637], "fp5": [636, 637], "fp6": [636, 637], "fp_to_sint": 646, "fpexcept": 579, "fpform": [636, 637], "fpformat": [636, 637], "fpformbit": 637, "fpgas": [461, 483], "fpic": [481, 622], "fpimmleaf": 557, "fpinst": 637, "fpm": [517, 601, 655, 656, 657], "fpm1": 601, "fpm2": 601, "fpmad": 625, "fpo": [597, 605], "fpo_dat": 597, "fppassmanag": 650, "fpr": 554, "fpreg": 646, "fpregsclass": 646, "fpregsregclass": 646, "fpregsregisterclass": 646, "fprintf": [669, 670, 671, 672, 673, 674, 675, 676], "fprofil": [481, 499, 535], "fptr": 676, "fptyp": 579, "fpu": [571, 579], "fputc": [671, 672, 673, 674, 675, 676], "fqa": 486, "fr": [579, 591], "fra": 483, "fraction": [465, 474, 573, 577, 581], "fractional": 579, "fragil": 611, "fragility": 487, "fragment": [483, 501, 546, 547, 579, 625, 630, 636, 640], "fragment1": 501, "fragment2": 501, "fragmentkind": 501, "fram": [492, 494, 504, 516, 521, 522, 527, 536, 545, 547, 555, 578, 579, 580, 584, 585, 597, 607, 609, 624, 625, 626, 628, 630, 646, 651], "frameindex": 646, "frameinfo": [585, 646], "frameless": 483, "framemap": 547, "frameptr": 534, "framesiz": 547, "framework": [469, 480, 483, 541, 547, 563, 564, 566, 579, 607, 609, 625, 640, 647, 648, 653, 670, 673, 674, 679, 681, 684, 685], "francesco": 607, "frb": 483, "frc": 483, "fre": [466, 469, 470, 481, 483, 484, 485, 486, 513, 517, 532, 533, 538, 545, 547, 557, 562, 578, 579, 580, 581, 588, 593, 608, 609, 611, 618, 621, 622, 626, 630, 634, 641, 647, 648, 650, 651, 668, 670, 671, 672, 673, 674, 677, 679, 681, 686], "freebench": 640, "freeblockmapblock": 601, "freebsd": [471, 483, 515, 550, 623, 649], "freebsd5": 483, "freed": [461, 466, 469, 534, 589, 593, 609, 624], "freedom": [461, 478, 554, 579, 609], "freeing": [534, 618, 656, 671, 682], "freely": [470, 538, 579, 636], "freescal": 532, "freestanding": 579, "freetyp": 581, "freez": [572, 611], "frequenc": 474, "frequency": [471, 475, 579, 617, 650, 651], "frequent": [505, 538, 547, 611, 617, 676], "frequently": [463, 466, 486, 530, 548, 550, 552, 579, 607, 609, 617, 630, 631, 655, 656, 657], "fresh": [579, 611, 632], "frexp": 579, "friend": [543, 579, 609], "friendly": [484, 504, 538, 587, 611, 649, 654, 669, 680], "frighten": 581, "from": [13, 17, 19, 31, 32, 36, 37, 38, 39, 40, 44, 45, 49, 87, 97, 118, 120, 131, 132, 133, 134, 135, 136, 140, 143, 173, 186, 203, 205, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 240, 277, 288, 323, 352, 360, 362, 374, 375, 379, 380, 381, 382, 383, 387, 388, 393, 432, 443, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 511, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 577, 578, 580, 581, 582, 583, 584, 585, 588, 589, 590, 591, 592, 594, 595, 597, 600, 602, 604, 605, 606, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687], "front": [483, 485, 486, 515, 538, 540, 547, 550, 552, 579, 594, 607, 609, 610, 620, 623, 632, 637, 644, 655, 656, 671, 672, 673, 674, 676, 677, 678, 679, 682, 683, 684, 685, 686], "frontend": [470, 502, 505, 513, 529, 534, 535, 540, 542, 543, 544, 547, 550, 551, 578, 579, 613, 618, 620, 622, 625, 630, 641, 642, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 675, 687], "fronti": [466, 583, 674, 685], "frowned": 538, "frozen": [536, 579], "frt": 483, "frustrat": 484, "fsanitiz": [480, 566, 581, 589, 618, 622], "fsav": 645, "fsin": [492, 646], "fstream": 592, "fstrict": 579, "fsub": [674, 685], "ft": [581, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "ftest": 499, "fthinlto": 579, "ftl": [579, 628], "ftoi": 646, "ftp": 550, "ftz": 592, "fucomip": 483, "fucomp": 483, "fudg": 571, "fulfill": [570, 573, 631], "full": [461, 464, 466, 469, 470, 479, 481, 482, 483, 486, 487, 495, 498, 513, 514, 516, 517, 527, 529, 531, 536, 538, 543, 550, 569, 571, 572, 573, 578, 581, 585, 586, 591, 592, 593, 595, 597, 607, 608, 609, 610, 611, 614, 625, 626, 627, 630, 634, 641, 642, 643, 650, 651, 652, 668, 677, 679, 686], "full_corpus_d": 581, "fulldebug": [575, 579, 625], "fullest": 486, "fully": [461, 466, 468, 473, 474, 480, 481, 482, 483, 493, 513, 531, 534, 546, 548, 550, 552, 555, 557, 579, 593, 595, 607, 616, 618, 625, 626, 630, 637, 642, 645, 654, 655, 669, 673, 674, 677, 680, 684, 685, 686], "fun": [542, 649, 650, 677, 678, 679, 681, 682, 683, 684, 685, 686], "func": [506, 517, 535, 579, 585, 609, 648, 650, 680, 681, 682, 683, 684, 685], "func1": 466, "func_typ": 630, "funcflag": 579, "funcid": 650, "funclet": 534, "funcresolv": 609, "function": [461, 467, 469, 470, 472, 473, 474, 477, 478, 479, 480, 481, 487, 490, 492, 494, 495, 497, 499, 500, 501, 502, 504, 515, 517, 518, 521, 522, 527, 528, 529, 531, 532, 536, 540, 542, 545, 546, 547, 548, 550, 555, 557, 559, 560, 564, 565, 566, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 587, 589, 590, 593, 594, 595, 596, 597, 599, 600, 602, 606, 612, 614, 616, 618, 620, 622, 624, 628, 629, 630, 634, 635, 636, 639, 643, 644, 646, 647, 648, 650, 654, 655, 657, 668, 669, 671, 672, 673, 674, 675, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687], "function1": 466, "function_entry_arg": 651, "function_entry_count": 475, "function_id": 651, "function_old": 473, "function_other_typ": 651, "function_pass": 647, "function_typ": [681, 682, 683, 684, 685], "functionaddress": 544, "functional": [481, 513, 538, 539, 547, 579, 580, 609, 625, 634, 672, 673, 674, 683, 684, 685], "functionality": [461, 470, 478, 482, 486, 517, 530, 538, 541, 547, 548, 550, 576, 577, 579, 580, 587, 589, 591, 593, 607, 609, 612, 614, 618, 624, 625, 628, 630, 632, 634, 648, 649, 652, 654, 671, 674, 675, 676, 678, 679, 682, 685], "functionally": [483, 579, 609], "functionanalysismanag": 647, "functionast": [657, 669, 670, 671, 672, 673, 674, 675, 676], "functioncalle": 609, "functiondecl": 486, "functionend": 542, "functionfaultinfo": 544, "functionid": 542, "functionindex": 576, "functioninfo": 544, "functioning": [540, 654], "functionlisttyp": 609, "functionnam": [547, 579], "functionnod": 591, "functionp": [607, 648], "functionpass": [469, 594, 609, 646], "functionpassctor": 648, "functionpassmanag": [655, 656, 657, 671, 672, 673, 674], "functionprotos": [671, 672, 673, 674, 675, 676], "functionptr": 609, "functionstart": 542, "functiontyp": [609, 670, 671, 672, 673, 674, 675, 676], "fundamental": [461, 482, 483, 486, 530, 540, 545, 548, 576, 591, 609, 626, 630, 646, 648], "fundamentally": [461, 626], "funnel": 579, "funny": [674, 685], "furth": [461, 470, 473, 476, 478, 479, 481, 485, 486, 487, 491, 505, 529, 534, 538, 540, 545, 547, 548, 552, 554, 559, 560, 566, 570, 572, 579, 581, 590, 591, 594, 597, 599, 601, 609, 614, 625, 626, 632, 639, 642, 646, 651, 654, 656, 671], "furthermor": [461, 476, 478, 487, 538, 548, 554, 566, 579, 583, 607, 630], "fury": 466, "furyx": 466, "fuse": [481, 531, 565, 570], "fused": [531, 555, 579, 607], "fusing": [493, 531, 579, 607], "fusion": 579, "futur": [461, 466, 473, 480, 481, 485, 486, 538, 546, 547, 548, 550, 562, 563, 566, 576, 578, 579, 581, 585, 609, 611, 619, 623, 625, 628, 629, 630, 642, 645, 647, 651, 670, 671, 672, 679, 681, 683, 685], "fuzz": [612, 617], "fuzz_target": 581, "fuzzed": [546, 581], "fuzzer": [581, 617], "fuzzer_no_main": 581, "fuzzercl": 546, "fuzzing": [579, 617, 623], "fuzzing_build_mode_unsafe_for_product": 581, "fuzzinglibc": 581, "fuzzmutat": 546, "fuzzy": 501, "fval": 625, "fwd_progress": 466, "fwdargreg": 585, "fx": [0, 5, 6, 7, 8, 462, 466], "fxray": [649, 650], "g": [466, 468, 469, 470, 471, 473, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 491, 492, 498, 499, 513, 514, 515, 516, 517, 521, 522, 526, 527, 530, 531, 534, 535, 536, 538, 539, 540, 542, 545, 547, 548, 550, 552, 554, 555, 557, 559, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 581, 582, 583, 585, 588, 590, 591, 592, 593, 594, 595, 596, 597, 602, 604, 605, 606, 607, 609, 611, 614, 616, 618, 621, 623, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 639, 640, 641, 642, 643, 647, 648, 650, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "g0": 646, "g1": [579, 625, 646], "g2": [579, 625, 646], "g3": 646, "g4": 646, "g5": 646, "g6": 646, "g7": 646, "g_": 614, "g_add": [554, 556, 559, 575], "g_and": [558, 559], "g_anyext": 559, "g_ashr": 559, "g_bitcast": 559, "g_block_addr": 559, "g_build_vector": 559, "g_build_vector_trunc": 559, "g_concat_vector": 559, "g_const": [554, 556, 558, 559, 575], "g_extract": 559, "g_fconst": [554, 556], "g_fmul": 554, "g_fneg": 554, "g_foo": 559, "g_fpext": 559, "g_frame_index": 559, "g_icmp": 585, "g_implicit_def": 559, "g_inttoptr": 559, "g_load": [554, 559], "g_merge_valu": 559, "g_mul": 559, "g_or": 559, "g_phi": 559, "g_ptrtoint": 559, "g_sext": 559, "g_sext_inreg": 554, "g_shl": 559, "g_stor": 559, "g_sub": [559, 575], "g_trunc": 559, "g_unmerge_valu": 559, "g_vecreduce_add": 555, "g_vecreduce_and": 555, "g_vecreduce_mul": 555, "g_vecreduce_or": 555, "g_vecreduce_smax": 555, "g_vecreduce_smin": 555, "g_vecreduce_umax": 555, "g_vecreduce_umin": 555, "g_vecreduce_xor": 555, "g_xor": [554, 559], "ga": 591, "gab": 532, "gadget": 626, "gain": [476, 530, 538, 566, 579, 583, 621], "galin": 567, "gamely": 538, "gap": [461, 513, 535, 579, 609, 618], "gapend": 542, "gapstart": 542, "garbag": [473, 543, 580, 604, 628, 678, 679], "gas": [542, 646], "gath": [530, 538, 591, 610, 614, 634], "gather": [579, 616, 645], "gather4": 464, "gathered": [540, 569, 579, 609, 641], "gathering": [466, 569, 579, 614, 651], "gav": 561, "gazonk": 625, "gb": 550, "gc": [473, 580, 591, 611, 617], "gc_transit": 579, "gc_transition_end": 630, "gc_transition_start": 630, "gcc": [461, 470, 482, 483, 486, 488, 499, 518, 519, 530, 531, 532, 538, 539, 540, 549, 550, 565, 566, 570, 571, 574, 579, 590, 607, 609, 618, 625, 639, 640, 645, 646, 649], "gcc_version": 550, "gcda": 499, "gcfunctioninfo": 547, "gcfunctionmetadat": [547, 628], "gcmetadaprint": 547, "gcmetadat": 547, "gcmetadataprinterregistry": 547, "gcmetataprint": 630, "gcn": 466, "gcn3": 466, "gcnam": 473, "gcno": 499, "gcodeview": 625, "gcolumn": 645, "gcov": 518, "gcov_prefix": 499, "gcov_prefix_strip": 499, "gcregistry": 547, "gcroot": [547, 628, 630], "gcse": [607, 609], "gcstrategy": [547, 630], "gd": [0, 2, 3, 4, 17, 114, 118, 201, 203, 303, 360, 460, 466], "gdb": [461, 483, 504, 565, 609, 625, 632, 644, 646, 686], "gdbin": 609, "gdbregistrationlisten": 593, "ge": 636, "ge_missing_jmp_buf": 486, "ge_missing_sigjmp_buf": 486, "geared": [479, 481], "geforc": 592, "gembed": 466, "gen": [489, 518, 529, 557, 632, 634, 646, 655, 676], "genaddressmod": 635, "gend": 484, "gendfapacketiz": 483, "geneerat": 529, "gener": [461, 465, 466, 470, 472, 477, 479, 481, 486, 487, 488, 490, 492, 513, 531, 534, 545, 550, 578, 579, 580, 592, 594, 616, 617, 618, 619, 625, 628, 630, 634, 639, 646, 654, 669, 671, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687], "general": [466, 468, 469, 470, 472, 473, 478, 482, 483, 484, 486, 490, 508, 513, 517, 518, 530, 531, 533, 534, 538, 540, 545, 547, 550, 551, 552, 554, 557, 559, 566, 570, 573, 578, 580, 583, 589, 591, 592, 595, 601, 602, 604, 607, 611, 614, 618, 621, 622, 625, 626, 630, 631, 637, 640, 641, 646, 648, 655, 669, 673, 674, 676, 677, 680, 684, 685, 686], "generalcategory": 530, "generalis": [673, 684], "generality": [677, 686], "generaliz": [461, 559, 579, 609, 626], "generalized": [461, 486, 609, 630], "generalizing": 461, "generally": [461, 470, 477, 479, 482, 485, 486, 491, 495, 530, 536, 538, 540, 541, 545, 547, 550, 552, 556, 557, 559, 560, 566, 567, 569, 579, 583, 586, 587, 592, 593, 594, 597, 609, 614, 625, 626, 627, 631, 636, 637, 641, 642, 643, 646, 648, 675, 676], "generat": [461, 466, 468, 470, 472, 473, 477, 479, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 495, 499, 504, 505, 512, 513, 517, 518, 519, 528, 529, 531, 534, 535, 536, 540, 541, 542, 543, 545, 547, 548, 550, 551, 552, 559, 569, 570, 572, 574, 578, 579, 581, 582, 584, 585, 589, 590, 591, 592, 593, 602, 604, 605, 608, 609, 610, 611, 620, 624, 625, 628, 630, 634, 635, 636, 639, 640, 641, 643, 645, 646, 649, 650, 652, 654, 669, 670, 671, 672, 673, 674, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686], "generated": [461, 466, 470, 475, 479, 480, 481, 486, 487, 492, 495, 497, 499, 505, 512, 513, 517, 518, 519, 524, 530, 531, 535, 536, 538, 540, 544, 545, 546, 547, 550, 552, 562, 569, 579, 581, 582, 584, 590, 592, 593, 595, 596, 597, 602, 607, 609, 616, 617, 620, 624, 625, 626, 630, 634, 636, 637, 641, 642, 645, 646, 648, 649, 650, 652, 654, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686], "generating": [461, 466, 468, 470, 472, 479, 482, 483, 486, 499, 531, 535, 543, 545, 550, 552, 563, 572, 579, 581, 585, 592, 611, 616, 625, 626, 628, 634, 635, 642, 644, 646, 649, 652, 654, 670, 671, 672, 674, 676, 677, 681, 682, 683, 685, 686], "generational": [547, 579, 630], "generator": [468, 470, 481, 488, 492, 529, 534, 538, 541, 547, 550, 552, 560, 564, 575, 580, 582, 587, 591, 592, 593, 609, 613, 625, 627, 628, 630, 634, 636, 637, 640, 641, 644, 646, 648, 670, 674, 677, 679, 681, 685, 686], "generic": [461, 466, 470, 472, 473, 481, 483, 486, 493, 529, 530, 531, 538, 540, 550, 557, 559, 560, 561, 562, 564, 566, 579, 580, 585, 592, 609, 625, 630, 631, 637, 641, 646, 649, 675, 677, 686], "genericdomain": 636, "genericenum": 634, "generict": [634, 635], "genericvalu": [536, 682, 683, 684, 685], "genregisternam": 483, "gensubtargetinfo": 646, "genuin": 609, "geomean": 645, "geometric": [677, 686], "geord": 549, "gep": [543, 555, 579, 580, 591, 607, 617, 625, 630], "gep_index": 579, "get": [26, 27, 28, 29, 30, 33, 34, 35, 56, 57, 126, 127, 128, 129, 130, 147, 211, 212, 213, 218, 219, 246, 247, 335, 369, 370, 371, 372, 373, 376, 377, 378, 399, 400, 461, 464, 466, 467, 469, 470, 472, 474, 477, 482, 483, 484, 485, 486, 487, 490, 513, 530, 531, 533, 534, 535, 538, 539, 540, 541, 543, 545, 547, 548, 549, 550, 551, 552, 556, 558, 564, 565, 567, 569, 570, 572, 573, 576, 580, 581, 582, 583, 584, 586, 588, 590, 591, 592, 593, 602, 604, 607, 608, 609, 611, 619, 620, 621, 623, 625, 626, 627, 630, 631, 632, 634, 635, 636, 637, 640, 641, 642, 646, 648, 649, 650, 652, 654, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "get_atable_decl": 634, "get_atable_impl": 634, "get_bvalues_decl": 634, "get_cenum_decl": 634, "get_ctable_decl": 634, "get_ctable_impl": 634, "get_instrinfo_named_op": 646, "get_instrinfo_operand_enum": 646, "get_instrinfo_operand_types_enum": 646, "get_matcher_implement": 634, "get_ptr": 544, "get_reginfo_target_desc": 634, "get_register_match": 634, "get_subtarget_feature_nam": 634, "getactiondefinitionsbuild": 559, "getaddress": [593, 654, 671, 672, 673, 674], "getaddressingmod": 646, "getadjustedanalysispoint": 469, "getallderiveddefinit": 635, "getanalys": 558, "getanalysisusag": [469, 558], "getargumentlist": 609, "getattribut": 591, "getattributespellinglistindex": 634, "getb": 635, "getbasicblock": 483, "getbasicblocklist": [609, 672, 673, 674, 675, 676], "getbinarycodeforinstr": 646, "getbinaryprecedent": [673, 674, 675, 676], "getbit": 530, "getbitwidth": 609, "getbuff": 652, "getcalledfunct": 609, "getcalleesavedreg": 646, "getchar": [668, 669, 670, 671, 672, 673, 674, 675, 676], "getcl": 635, "getclass": 635, "getclobberingmemoryaccess": 590, "getcol": 676, "getcontext": [593, 654, 676], "getdagop": 636, "getdat": 486, "getdatalayout": [593, 646, 654, 655, 656, 657, 671, 672, 673, 674, 676], "getdatasect": 547, "getdebugloc": 625, "getdef": 635, "getdefaultdatalayoutfortarget": [654, 655, 656, 657], "getdefaultresourcetrack": [654, 655, 656, 657], "getdefaulttargettripl": 675, "getdirectory": [625, 676], "getdirectsupercl": 635, "getdoublety": [670, 671, 672, 673, 674, 675, 676], "getehframesect": 584, "getelementptr": [469, 483, 487, 497, 534, 535, 547, 548, 578, 580, 591, 592, 609, 625, 630, 643, 677, 686], "getelementptrinst": 609, "getelementtyp": 609, "getentryblock": [609, 674, 675, 676], "getenv": 631, "getexceptionpointerregist": 540, "getexceptionselectorregist": 540, "getexecutionsess": [655, 657], "getfil": 593, "getfilenam": [625, 676], "getfoo": 579, "getforcurrentprocess": [593, 654, 655, 656, 657], "getfourdatapointer": 626, "getframeinfo": [483, 646], "getframeinstruct": 585, "getframesiz": 547, "getfunct": [547, 594, 609, 648, 670, 671, 672, 673, 674, 675, 676], "getfunctionlist": 609, "getfunctiontyp": 609, "getglobal": 646, "getgloballist": 609, "getglobalprefix": [593, 654, 655, 656, 657], "getimm": 646, "getindex": 646, "getinitializ": 609, "getinsertblock": [672, 673, 674, 675, 676], "getinstlist": 609, "getinstralternativemapping": 562, "getinstrinfo": [483, 646], "getinstrmapping": 562, "getint32ty": 486, "getinterfac": 657, "getjitdylib": 657, "getjitinfo": [483, 646], "getjmp_buftyp": 486, "getkey": 609, "getkind": [573, 634], "getknownbit": 558, "getlazycallthroughmanag": 656, "getlazyresolverfunct": 646, "getlin": [625, 676], "getllvmcontext": 486, "getlock": 593, "getloopanalysisusag": 648, "getloopid": 642, "getloopinfo": 648, "getmainjitdylib": [593, 654, 655, 656, 657, 671, 672, 673, 674], "getmbb": 646, "getmemb": 609, "getmodul": [593, 655], "getmodulematchquality": 646, "getmyobject": 626, "getnam": [543, 609, 647, 648, 657, 669, 670, 671, 672, 673, 674, 675, 676], "getnamedoperandidx": 646, "getnameinitasstring": 635, "getnexttoken": [669, 670, 671, 672, 673, 674, 675, 676], "getnod": [541, 646], "getnullvalu": [609, 672, 673, 674, 675, 676], "getnumel": 609, "getnumoperand": 609, "getnumparam": 609, "getnumsuccessor": 486, "getnumvirtreg": 483, "getobjfilelowering": 547, "getoffset": 646, "getop": 636, "getopcod": [609, 646], "getoperand": [483, 486, 558, 609, 646], "getoperationnam": 541, "getoperatornam": [673, 674, 675, 676], "getopt": 530, "getorcreatefoo": 609, "getorcreatetypearray": 676, "getorinsertfunct": 609, "getparamtyp": 609, "getparent": [609, 672, 673, 674, 675, 676], "getpoint": 579, "getpointersiz": 547, "getpointertofunct": [584, 609, 676], "getpointertonamedfunct": 584, "getpredopcod": 577, "getprocaddress": 671, "getprocesstripl": 676, "getproto": 657, "getrawpoint": 576, "getrawsubclassoptionaldat": 591, "getreg": [483, 558, 646], "getregclass": 483, "getreginfo": 483, "getregisterinfo": [483, 646], "getreservedreg": 646, "getreturntyp": 609, "getscev": 583, "getscevatscop": 583, "getschedclass": 646, "getsextvalu": 609, "getsigjmp_buftyp": 486, "getsourc": 550, "getsrc": 550, "getsubtarget": 646, "getsubtargetimpl": [646, 650], "getsupercl": 635, "getsymboladdress": 545, "getsymbolnam": 646, "getsymbolt": 609, "gettargetlowering": 646, "gettargetmachin": 671, "gettargettripl": [654, 655, 656, 657], "getterminator": 609, "getthesparctarget": 646, "getting": [468, 476, 481, 483, 486, 533, 538, 539, 554, 570, 571, 572, 574, 579, 582, 608, 609, 611, 625, 626, 644, 647, 648, 649, 653, 672, 674, 683, 685], "gettingstarted": 570, "gettok": [668, 669, 670, 671, 672, 673, 674, 675, 676], "gettoknam": 676, "gettokprecedent": [669, 670, 671, 672, 673, 674, 675, 676], "gettyp": [486, 609], "gettypenam": 609, "getunqual": 609, "getvalu": [486, 609, 635], "getvalueaslistofint": 635, "getvalueasoptionaldef": 635, "getvalueid": 591, "getvaluein": 635, "getvaluetyp": 646, "getvaluevt": 556, "getx86regnum": 646, "getzextvalu": 609, "gfx": 466, "gfx10": [1, 463, 464, 465], "gfx1010": 466, "gfx1011": 466, "gfx1012": 466, "gfx1030": 466, "gfx1031": 466, "gfx1032": 466, "gfx1033": 466, "gfx600": 466, "gfx601": 466, "gfx602": 466, "gfx7": [463, 464, 465, 466], "gfx700": 466, "gfx701": 466, "gfx702": 466, "gfx703": 466, "gfx704": 466, "gfx705": 466, "gfx8": [214, 216, 217, 221, 226, 228, 229, 233, 235, 463, 464, 465, 466], "gfx801": 466, "gfx802": 466, "gfx803": 466, "gfx805": 466, "gfx810": 466, "gfx9": [5, 6, 7, 8, 463, 464, 465], "gfx900": 466, "gfx902": 466, "gfx904": 466, "gfx906": 466, "gfx908": 466, "gfx909": 466, "gfx90c": 466, "ghash": 522, "ghc": [483, 579], "ghostly": 609, "gi": 611, "gicombin": 529, "gicomplexoperandmatch": 557, "gicomplexpatternequiv": 557, "gid": [495, 509, 515, 526], "gif": 581, "gigabyt": 626, "gil": 616, "ginodeequiv": 557, "gird": 466, "gisel": [529, 546], "giselknownbit": 558, "giselknownbitsanalys": 558, "gist": 550, "git": [481, 533, 538, 539, 545, 549, 552, 565, 572, 574, 606, 608, 618, 632, 639, 640], "gitattribut": 550, "github": [466, 471, 481, 538, 549, 550, 552, 572, 579, 605, 608, 609, 613, 614, 622, 623, 639, 640, 649, 650, 687], "gitlab": [611, 613], "giv": [461, 466, 468, 469, 473, 477, 483, 485, 486, 513, 530, 531, 535, 545, 550, 554, 567, 569, 571, 579, 586, 587, 590, 591, 592, 597, 607, 609, 614, 620, 625, 626, 627, 634, 635, 642, 644, 646, 648, 649, 650, 652, 655, 656, 668, 670, 671, 673, 675, 676, 677, 678, 679, 681, 684, 686], "given": [461, 466, 469, 470, 473, 474, 475, 476, 478, 481, 482, 483, 485, 486, 487, 489, 491, 495, 497, 499, 502, 505, 513, 517, 518, 519, 527, 528, 529, 530, 531, 534, 537, 540, 541, 542, 543, 545, 547, 550, 552, 554, 555, 559, 562, 564, 572, 573, 579, 583, 584, 590, 593, 595, 601, 604, 607, 609, 611, 614, 616, 620, 622, 625, 626, 628, 630, 631, 634, 635, 636, 639, 643, 646, 648, 649, 650, 652, 654, 655, 656, 657, 669, 670, 671, 673, 680, 681, 684], "giving": [579, 593, 627, 630, 634, 648, 670, 676, 681], "gladly": [550, 552], "glanc": [486, 677, 686], "glasgow": 579, "glc": [0, 2, 3, 4, 26, 27, 28, 29, 30, 33, 34, 35, 41, 42, 58, 61, 126, 127, 128, 129, 130, 137, 138, 148, 150, 211, 212, 213, 218, 219, 231, 232, 248, 251, 335, 336, 342, 343, 369, 370, 371, 372, 373, 376, 377, 378, 384, 385, 401, 404, 462, 466], "glibc": 581, "glibcxx_3": 550, "glin": 645, "glob": 506, "global": [64, 99, 345, 353, 407, 445, 461, 464, 465, 469, 470, 473, 478, 479, 483, 485, 486, 487, 491, 495, 497, 502, 506, 513, 514, 515, 516, 517, 522, 529, 530, 531, 534, 535, 536, 540, 543, 545, 546, 547, 548, 550, 555, 557, 562, 563, 580, 581, 582, 592, 593, 594, 597, 600, 602, 605, 609, 610, 614, 617, 622, 626, 629, 630, 634, 635, 636, 643, 646, 647, 648, 654, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 685, 686], "global_atomic": 466, "global_atomic_add": [0, 4], "global_atomic_add_f32": 8, "global_atomic_add_x2": [0, 4], "global_atomic_and": [0, 4], "global_atomic_and_x2": [0, 4], "global_atomic_cmpswap": [0, 4], "global_atomic_cmpswap_x2": [0, 4], "global_atomic_dec": [0, 4], "global_atomic_dec_x2": [0, 4], "global_atomic_fmax": 0, "global_atomic_fmax_x2": 0, "global_atomic_fmin": 0, "global_atomic_fmin_x2": 0, "global_atomic_inc": [0, 4], "global_atomic_inc_x2": [0, 4], "global_atomic_or": [0, 4], "global_atomic_or_x2": [0, 4], "global_atomic_pk_add_f16": 8, "global_atomic_smax": [0, 4], "global_atomic_smax_x2": [0, 4], "global_atomic_smin": [0, 4], "global_atomic_smin_x2": [0, 4], "global_atomic_sub": [0, 4], "global_atomic_sub_x2": [0, 4], "global_atomic_swap": [0, 4], "global_atomic_swap_x2": [0, 4], "global_atomic_umax": [0, 4], "global_atomic_umax_x2": [0, 4], "global_atomic_umin": [0, 4], "global_atomic_umin_x2": [0, 4], "global_atomic_xor": [0, 4], "global_atomic_xor_x2": [0, 4], "global_begin": [486, 609], "global_buff": 466, "global_context": [681, 682, 683, 684, 685], "global_empty": 609, "global_end": 609, "global_iterator": 609, "global_load": 466, "global_load_dword": [0, 4], "global_load_dwordx2": [0, 4], "global_load_dwordx3": [0, 4], "global_load_dwordx4": [0, 4], "global_load_sbyt": [0, 4], "global_load_sbyte_d16": [0, 4], "global_load_sbyte_d16_h": [0, 4], "global_load_short_d16": [0, 4], "global_load_short_d16_h": [0, 4], "global_load_sshort": [0, 4], "global_load_ubyt": [0, 4], "global_load_ubyte_d16": [0, 4], "global_load_ubyte_d16_h": [0, 4], "global_load_ushort": [0, 4], "global_siz": 609, "global_store_byt": [0, 4], "global_store_byte_d16_h": [0, 4], "global_store_dword": [0, 4], "global_store_dwordx2": [0, 4], "global_store_dwordx3": [0, 4], "global_store_dwordx4": [0, 4], "global_store_short": [0, 4], "global_store_short_d16_h": [0, 4], "globalali": 648, "globalbuff": 466, "globaldc": 609, "globalisel": [529, 554, 556, 557, 558, 559, 560, 563, 564, 617], "globaliz": 515, "globallayoutbuild": 643, "globallisttyp": 609, "globally": [513, 530, 579, 630, 636], "globalref": 600, "globalrefssiz": 600, "globalsa": 590, "globalstreamindex": 597, "globalvar": 473, "globalvari": [548, 648, 677, 686], "globalvarnam": 579, "globl": [465, 466, 542, 592, 630], "glu": [483, 543], "gmail": 608, "gmak": [640, 648], "gmir": [554, 556, 559, 560], "gn": 632, "gninj": [639, 650], "gno": 466, "gnu": [461, 468, 481, 483, 486, 492, 494, 495, 500, 504, 505, 514, 515, 516, 520, 522, 523, 525, 526, 527, 539, 540, 542, 546, 550, 565, 566, 567, 568, 570, 579, 646, 648, 675], "gnu_debuglink": 515, "gnu_hash": 625, "gnueab": 570, "gnueabihf": [570, 571], "gnuwin32": [481, 552], "go": [470, 472, 475, 477, 481, 482, 483, 534, 538, 540, 545, 547, 550, 553, 560, 569, 572, 574, 579, 581, 587, 588, 590, 591, 592, 609, 611, 614, 617, 620, 625, 626, 631, 632, 636, 639, 641, 646, 648, 650, 652, 669, 670, 671, 672, 674, 676, 677, 679, 680, 681, 682, 683, 685, 686], "goal": [461, 476, 483, 485, 486, 494, 505, 513, 535, 537, 538, 540, 548, 564, 566, 582, 586, 591, 599, 623, 626, 628, 631, 634, 635, 636, 645, 651, 654, 674, 679, 685], "goat": 486, "gofmt": 486, "going": [464, 469, 478, 482, 483, 485, 486, 517, 537, 543, 547, 554, 560, 569, 579, 590, 593, 605, 609, 611, 618, 619, 626, 629, 648, 649, 671, 672, 673, 674, 676, 678, 679, 682, 683, 684, 685], "goingnat": 609, "gold": [481, 483, 550, 568, 594, 620, 644], "goldberg": 547, "goldberg91": 547, "golden": 486, "gon": 655, "good": [469, 476, 477, 483, 485, 486, 487, 488, 513, 530, 531, 532, 533, 538, 541, 545, 546, 550, 553, 560, 568, 569, 572, 579, 580, 585, 587, 588, 591, 592, 607, 608, 609, 612, 614, 618, 619, 622, 625, 626, 630, 631, 636, 637, 646, 648, 670, 671, 672, 673, 674, 682, 683, 684, 685], "goodby": [586, 627], "goodwill": 485, "googl": [478, 531, 538, 539, 608, 614, 622, 623, 626, 639, 641], "googleblog": 581, "googlegroup": 581, "googleprojectzero": 626, "googletest": 491, "gory": 538, "got": [466, 483, 518, 530, 550, 553, 579, 609, 676, 682], "goto": [486, 579, 591, 672, 673, 674, 675, 676, 685], "gotos": 645, "gov": 613, "govern": 579, "governed": 579, "gpg": 550, "gpgpu": 531, "gpl": [538, 543], "gplv2": 538, "gplv3": [538, 565], "gpr": [466, 483, 540, 554, 579, 585, 587, 636], "gpr64": 585, "gpr_idx": [239, 392], "gprc": 483, "gpu": [214, 216, 217, 226, 228, 229, 461, 463, 465, 466, 483, 531, 539, 592, 634, 644], "gpucc": 531, "gpus": [461, 465, 466, 531, 579, 646], "gpz": 626, "gr": [579, 580], "gr1": 579, "gr16": 483, "gr32": [483, 625, 636, 637], "gr64": [483, 585, 625], "gr64_nosp": 625, "gr8": [483, 646], "grab": [609, 619, 683, 684, 685], "gracefully": [581, 609, 632], "grad": 533, "gradient": 613, "gradually": [554, 560], "graduat": 538, "grain": 579, "grained": 651, "grammar": [482, 541, 636, 669, 673, 680, 684], "grammatically": [669, 680], "grant": [538, 569, 591], "granted": [478, 538, 591, 654], "granularity": [466, 564, 602, 626, 631], "granulated_lds_siz": 466, "granulated_wavefront_sgpr_count": 466, "granulated_workitem_vgpr_count": 466, "graph": [466, 474, 477, 480, 481, 483, 504, 517, 529, 540, 550, 555, 579, 580, 583, 604, 616, 617, 618, 625, 635, 640, 646, 648, 649, 670, 671, 672, 673, 674, 676, 681, 682, 683, 684, 685], "graphic": [581, 677, 686], "graphical": [583, 673, 684], "graphing": 649, "graphviz": [516, 607, 609, 650], "gratitud": 605, "grayscal": 613, "great": [461, 465, 466, 468, 472, 473, 475, 483, 486, 497, 499, 517, 518, 534, 538, 545, 547, 548, 555, 559, 569, 579, 581, 588, 591, 592, 597, 599, 604, 607, 609, 636, 646, 647, 648, 673, 678, 679, 684], "greatest": 461, "greatly": [481, 545, 549, 550, 575, 579, 609, 625, 630], "greedy": [483, 492, 530, 562], "green": [614, 632], "greened": 611, "greenedistinguish": 614, "greenegitblam": 614, "greeting": 636, "gregg": 650, "grep": [481, 483, 487, 530, 550, 568, 611, 622, 640, 641, 675], "grepping": 640, "grey": [560, 619], "grid": 466, "grid_siz": 466, "griddim": 592, "gridsiz": 592, "gridsizex": 592, "gridsizey": 592, "grok": [543, 670, 681], "grokabl": 486, "gross": 616, "ground": [484, 623], "groundwork": 615, "group": [461, 464, 466, 473, 483, 487, 495, 505, 513, 521, 522, 529, 530, 535, 537, 538, 549, 560, 588, 591, 597, 611, 616, 621, 631, 632, 634, 636, 637, 640, 646, 649, 677, 686], "group_segment_alignment": 466, "group_segment_fixed_siz": 466, "grouped": [483, 486, 511, 522, 579, 595, 607], "grouping": [479, 504, 509, 522, 653, 669, 680], "groupsegmentfixedsiz": 466, "grow": [466, 483, 484, 485, 530, 538, 578, 579, 581, 587, 609, 636, 672, 683], "growing": 609, "grown": [478, 609, 673, 677, 684, 686], "growth": [483, 579, 609], "grpc": 581, "grpid": 473, "grunt": 530, "gs_op_cut": [54, 145, 244, 397], "gs_op_em": [54, 145, 244, 397], "gs_op_emit_cut": [54, 145, 244, 397], "gs_op_nop": [54, 145, 244, 397], "gt": [499, 535, 592, 636], "gtcasl": 613, "gte": 579, "gtu": 592, "gtx": 592, "guarante": [470, 483, 513, 534, 538, 540, 542, 543, 545, 548, 559, 579, 590, 593, 607, 609, 621, 625, 628, 630, 634, 643, 648, 674, 685], "guaranteed": [469, 470, 473, 483, 486, 487, 530, 534, 550, 566, 579, 580, 593, 594, 602, 607, 609, 626, 628, 630, 635], "guaranteedtailcallopt": 579, "guard": [542, 545, 566, 581, 583, 609, 634, 648, 654], "guard_cond": [579, 583], "guard_condit": 579, "guarded": [579, 634], "guardedpoolallocator": 566, "guarding": 626, "guelton": 623, "guess": [481, 515, 581, 614], "guessed": 671, "gui": [481, 552], "guid": [461, 475, 477, 481, 483, 484, 491, 531, 532, 533, 535, 537, 538, 549, 550, 551, 552, 568, 569, 570, 572, 579, 581, 602, 608, 609, 610, 614, 617, 619, 625, 634, 636, 637, 646, 647, 653, 669, 675, 680, 687], "guidanc": [478, 486, 533, 538, 545, 597], "guided": [468, 479, 519, 535, 548, 617, 644], "guidelin": [538, 571, 609, 614, 626], "gunzip": [550, 552], "gv": [579, 609], "gvn": [470, 545, 580, 648, 655, 656, 657, 671, 672, 673, 674], "gvneedslazyptr": 646, "gvnhoist": 590, "gvreg": [557, 559], "gwp": 617, "gwp_asan": 566, "gwp_asan_opt": 566, "gwpasanallocator": 566, "gz": [550, 552, 571, 619, 650], "gzip": [550, 650], "g\u00e9n\u00e9ral": [0, 1, 2, 3, 4, 5, 6, 7, 8], "h": [23, 40, 136, 214, 216, 217, 226, 228, 229, 230, 366, 383, 465, 466, 467, 472, 481, 486, 489, 491, 495, 500, 504, 507, 509, 511, 514, 515, 516, 521, 522, 523, 525, 526, 527, 529, 530, 537, 540, 541, 546, 547, 550, 552, 558, 565, 566, 573, 579, 581, 582, 583, 591, 592, 600, 602, 610, 616, 625, 631, 634, 635, 643, 646, 647, 648, 649, 650, 654, 655, 656, 657, 670, 671, 672, 673, 674, 675, 676, 682, 683, 684, 685], "h264ref": 639, "hab": [486, 607], "hac": 626, "hack": [533, 538, 604, 608, 648, 676, 677, 678, 679, 686], "hackabl": 679, "hackathon": 588, "hacking": [611, 648, 679], "had": [461, 466, 472, 475, 485, 497, 513, 538, 554, 579, 580, 586, 588, 592, 609, 611, 616, 618, 625, 627, 628, 630, 631, 648, 652], "hainan": 466, "half": [464, 466, 473, 483, 486, 499, 517, 555, 581, 586, 609, 627, 646, 655], "halfton": 613, "halfway": 579, "halt": 466, "halted": 466, "halting": 626, "halv": 541, "han": 572, "hand": [461, 470, 483, 486, 536, 537, 547, 548, 553, 573, 579, 583, 585, 590, 591, 593, 596, 607, 609, 619, 621, 626, 631, 634, 636, 637, 646, 652, 669, 670, 671, 673, 678, 679, 680, 681, 682, 684, 686], "handful": [531, 576, 609], "handily": 486, "handl": [465, 470, 472, 483, 487, 508, 530, 534, 536, 540, 544, 545, 547, 557, 559, 566, 573, 575, 579, 582, 592, 593, 601, 604, 607, 609, 611, 616, 618, 621, 625, 626, 628, 631, 645, 646, 648, 649, 651, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 683, 684, 685], "handle_extens": 648, "handleallerror": 609, "handleattr": 486, "handleattrondecl": 486, "handled": [49, 120, 143, 205, 240, 362, 393, 464, 465, 466, 467, 483, 534, 538, 539, 540, 542, 559, 566, 578, 579, 582, 583, 593, 607, 609, 621, 623, 628, 630, 646, 668, 669, 674, 679, 680, 685], "handledefinit": [669, 670, 671, 672, 673, 674, 675, 676], "handleerror": 609, "handleextern": [669, 670, 671, 672, 673, 674, 675, 676], "handlefunctiondecl": 486, "handlelazycallthrougherror": [656, 657], "handlelazycompilefailur": 593, "handleotherdecl": 486, "handler": [466, 483, 486, 529, 534, 566, 579, 654], "handler0": 579, "handler1": 579, "handler2": 579, "handlerpcoffset": 544, "handletoplevelexpress": [669, 670, 671, 672, 673, 674, 675, 676], "handlevardecl": 486, "handling": [461, 481, 493, 530, 532, 534, 546, 555, 575, 576, 585, 594, 617, 618, 621, 625, 626, 630, 631, 636, 646, 654, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 683, 686], "handy": [593, 609, 627, 670, 681], "hang": 555, "hao": 616, "happen": [461, 465, 466, 467, 470, 476, 477, 483, 484, 485, 486, 487, 488, 534, 538, 544, 547, 553, 554, 555, 559, 560, 575, 579, 581, 583, 584, 588, 590, 591, 593, 597, 602, 607, 608, 609, 611, 612, 614, 625, 626, 629, 630, 632, 634, 652, 655, 670, 672, 676, 681, 683], "happened": [543, 556, 611, 621, 628, 648, 669, 671, 680, 682], "happening": [483, 584, 609, 625], "happily": 671, "happy": [608, 609, 610, 611, 674, 685], "harassment": 484, "hard": [477, 483, 486, 515, 538, 540, 543, 545, 553, 568, 570, 571, 579, 581, 604, 606, 607, 608, 610, 614, 625, 630, 631, 632, 637, 639, 652, 669, 673, 675, 679, 680, 684], "hardcoded": [577, 646], "hardcodedcontiguousstorag": 609, "hardcodedsmallsiz": 609, "hardcoding": 575, "harddriv": 568, "harden": 626, "hardened": [566, 579, 589, 617, 623], "hardening": [579, 589, 617, 623], "hardwar": [48, 238, 391, 461, 466, 470, 481, 483, 485, 493, 505, 513, 531, 538, 545, 580, 589, 592, 622, 626, 646], "hardwareassistedaddresssanitiz": 589, "hardwareloop": 579, "harfbuzz": 581, "harm": [483, 486], "harmed": 486, "harmful": 518, "harmless": [569, 607], "harness": 610, "harr": 613, "harvard": 579, "has": [221, 233, 235, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 495, 496, 504, 505, 508, 511, 513, 515, 516, 517, 518, 521, 522, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 556, 558, 559, 560, 562, 564, 566, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 597, 599, 600, 601, 602, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 618, 620, 621, 622, 623, 624, 625, 626, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "hasactivevectorlength": 579, "hasadsizeprefix": 637, "hasard": 547, "hascompletedecod": 636, "hasconflictingtyp": 597, "hasctrldep": [636, 637], "hasdelayslot": [636, 637], "haserror": 620, "hasevex_b": 636, "hasevex_k": 636, "hasevex_l2": 636, "hasevex_rc": 636, "hasevex_z": 636, "hasexternallinkag": 609, "hasextradefregallocreq": 636, "hasextrasrcregallocreq": 636, "hasfp": 646, "hasfparmv8": 637, "hasgc": 591, "hash": [466, 469, 483, 499, 517, 521, 522, 535, 538, 539, 579, 581, 591, 595, 602, 604, 605, 609, 611, 639, 649, 652, 677, 686], "hash_data_count": 625, "hash_funct": 625, "hash_map": 609, "hash_set": 609, "hashadjbufferlength": 604, "hashadjbufferoffset": 604, "hashauxstreamindex": 604, "hashbufferlength": 604, "hashdat": 625, "hashed": 489, "hashes_count": 625, "hashfunctiontyp": 625, "hashing": [522, 591, 609], "hashkeysiz": 604, "hashstreamindex": 604, "hashtbl": [680, 681, 682, 683, 684, 685], "hashvaluebufferlength": 604, "hashvaluebufferoffset": 604, "hasinitializ": 609, "hasinternallinkag": 609, "hasj": 646, "haskel": [579, 677, 686], "haslockprefix": 636, "hasn": [485, 548, 609, 623, 648], "hasnam": 609, "hasnoschedulinginfo": 636, "hasnotrackprefix": 636, "hason": 486, "hasopsizeprefix": 637, "haspostiselhook": 636, "hasrepprefix": 636, "hasrex_wprefix": [636, 637], "hassideeffect": [513, 636, 637], "hassse2": 636, "hassse3": 636, "hasvex_4v": 636, "hasvex_l": 636, "hasvex_w": 636, "haswel": 505, "hat": 652, "hatsiz": 652, "haut": 653, "hav": [48, 54, 114, 145, 201, 238, 244, 303, 391, 397, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 491, 495, 497, 499, 502, 505, 513, 514, 515, 517, 527, 528, 530, 531, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 552, 553, 554, 555, 556, 557, 559, 560, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 584, 585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 602, 604, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "haveactivevectorlength": 615, "haven": [486, 552, 556, 579, 623, 632, 646, 648, 649, 650], "having": [461, 466, 469, 470, 473, 477, 483, 485, 486, 513, 530, 534, 538, 539, 540, 542, 547, 550, 552, 554, 559, 564, 568, 575, 576, 579, 581, 584, 587, 591, 593, 597, 604, 608, 609, 611, 612, 616, 620, 625, 626, 630, 631, 632, 634, 641, 642, 646, 648, 650, 652, 655, 669, 670, 673, 674, 680, 682, 684, 685], "havoq": 613, "hawai": 466, "hazard": 580, "hazardous": 626, "hblcnsviw": 530, "hd": [466, 531], "hd2xxx": 466, "hd6xxx": 466, "hdl": 534, "he": 461, "head": [468, 470, 473, 481, 508, 515, 516, 517, 526, 529, 530, 531, 533, 537, 542, 543, 544, 545, 547, 549, 550, 552, 553, 558, 563, 573, 579, 583, 585, 596, 607, 608, 609, 610, 611, 618, 620, 628, 631, 632, 634, 635, 636, 640, 642, 646, 647, 649, 650, 654, 656, 672, 673, 674, 675, 676, 683, 684, 685, 688], "headach": 619, "headed": [468, 579], "header": [461, 481, 498, 515, 516, 517, 521, 522, 526, 537, 538, 539, 552, 571, 579, 583, 584, 597, 609, 634, 646], "header0": 579, "header_dat": 625, "header_data_len": 625, "headerblock": 605, "headerdat": 625, "headersiz": 604, "heading": [586, 627], "headlight": 486, "heal": 544, "healing": 544, "heap": [469, 566, 579, 580, 617, 622, 624, 626, 628, 630, 652, 674, 677, 685, 686], "heard": [531, 539, 612], "heart": 630, "heartbleed": 581, "heartfelt": 605, "heartwall": 613, "heavily": [466, 517, 547, 609, 625, 626, 644, 677, 686], "heavy": [609, 630, 655], "heavyweight": 609, "heffernan": 531, "held": [461, 472, 538, 579, 608], "hello": [482, 535, 550, 552, 579, 634, 635, 636, 679], "hello_world": 466, "hellonew": 647, "hellooooooooooooooo": 566, "helloworld": [482, 570, 647], "helloworldpass": 647, "help": [465, 466, 469, 470, 476, 477, 478, 479, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 507, 509, 510, 511, 513, 514, 515, 516, 518, 521, 522, 523, 525, 526, 527, 528, 529, 532, 534, 537, 538, 541, 545, 547, 550, 559, 560, 566, 567, 568, 569, 572, 574, 576, 579, 581, 582, 584, 587, 590, 594, 608, 609, 611, 612, 613, 614, 615, 619, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 641, 646, 648, 650, 651, 652, 654, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 684, 685, 686], "helped": 631, "helper": [529, 546, 591, 609, 641], "helpful": [461, 467, 472, 477, 485, 486, 487, 530, 539, 551, 569, 579, 590, 650, 654], "helping": [484, 574], "henc": [466, 486, 530, 534, 550, 579, 582, 583, 628, 636], "henceforth": [600, 604, 624], "henderson": 614, "henderson2002": 547, "hendersonprefix": 614, "henrik": 631, "her": [46, 47, 141, 236, 237, 389, 390, 461, 464, 465, 466, 469, 470, 476, 477, 481, 482, 483, 486, 487, 494, 495, 513, 517, 518, 530, 531, 535, 536, 538, 539, 540, 543, 545, 547, 548, 549, 550, 552, 553, 554, 558, 560, 566, 567, 568, 569, 570, 572, 573, 575, 577, 579, 580, 581, 582, 583, 584, 585, 588, 590, 591, 592, 593, 596, 597, 602, 605, 608, 609, 611, 614, 618, 621, 622, 624, 625, 626, 628, 630, 631, 634, 635, 636, 637, 639, 640, 642, 644, 646, 647, 648, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 688], "hereby": 486, "hertz": 651, "heterogeneous": [466, 644], "heuristic": [483, 579, 607, 618, 642, 649, 651, 674, 685], "heuristically": 642, "hex": [487, 513, 514, 515, 516, 517, 521, 522, 523, 579, 581], "hex16": 652, "hex32": 652, "hex64": 652, "hex8": 652, "hex_numb": 466, "hex_valu": 505, "hexadecimal": [465, 466, 494, 511, 514, 517, 521, 522, 523, 525, 530, 579, 652], "hexagon": [483, 550, 579, 614, 634], "hexinteg": 636, "hfc": 544, "hh": 465, "hh567368": 486, "hi": [465, 547, 554, 581, 582, 609], "hi16": 483, "hid": [505, 530, 534, 593, 611, 630, 636], "hidden": [461, 466, 473, 483, 486, 490, 499, 515, 530, 576, 578, 579, 597, 609, 611, 625, 642, 643, 648], "hidden_completion_act": 466, "hidden_default_queu": 466, "hidden_global_offset_x": 466, "hidden_global_offset_y": 466, "hidden_global_offset_z": 466, "hidden_hostcall_buff": 466, "hidden_multigrid_sync_arg": 466, "hidden_non": 466, "hidden_printf_buff": 466, "hiddencompletionact": 466, "hiddendefaultqueu": 466, "hiddenglobaloffsetx": 466, "hiddenglobaloffsety": 466, "hiddenglobaloffsetz": 466, "hiddenhostcallbuff": 466, "hiddenmultigridsyncarg": 466, "hiddennon": 466, "hiddenprintfbuff": 466, "hideak": 483, "hiding": 636, "hierarch": 491, "hierarchical": [473, 537, 607, 616], "hierarchy": [491, 513, 541, 550, 574, 579, 583, 616, 617, 636, 643, 670], "hiet": 623, "high": [0, 3, 4, 114, 221, 233, 235, 460, 461, 465, 466, 468, 469, 471, 473, 475, 478, 481, 485, 505, 513, 517, 531, 533, 534, 536, 538, 539, 540, 541, 545, 546, 547, 548, 549, 552, 555, 560, 566, 569, 572, 584, 588, 589, 590, 591, 592, 593, 594, 601, 604, 607, 609, 610, 617, 625, 628, 630, 632, 635, 636, 641, 642, 643, 645, 646, 649, 651, 653, 654, 656, 669, 674, 677, 678, 680, 685, 686], "highest": [461, 466, 472, 555, 579, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "highlight": [482, 535, 545, 554, 586, 609, 650, 676], "highlighted": [483, 513], "highlighting": [550, 586, 627, 670], "highly": [466, 483, 485, 531, 538, 545, 547, 569, 579, 581, 588, 609, 610, 622, 626, 642, 656, 674, 685], "highproductivity": 613, "hihih": 609, "him": 591, "hint": [477, 486, 516, 527, 545, 548, 642, 670, 681], "hip": [461, 466, 483, 579], "hiraditi": 613, "his": 609, "histogram": [512, 513, 521, 522, 613], "histor": 611, "historical": [486, 548, 609, 630, 641], "historically": [468, 482, 486, 579], "history": [538, 550, 553, 605, 608], "hit": [513, 581, 590, 609, 626], "hitherto": 473, "hitting": 474, "hmmer": 639, "hoc": [461, 483, 607, 609], "hoist": [469, 486, 590, 607, 628, 642, 648], "hoistcommoncodeinsucc": 575, "hoisted": [466, 469, 486, 575, 579, 590, 607, 609, 628], "hoisting": [470, 575, 583, 590, 607, 628, 648], "hol": [530, 579, 612, 626, 630], "hold": [461, 465, 466, 468, 483, 484, 530, 538, 540, 542, 547, 550, 579, 581, 584, 591, 604, 607, 609, 610, 616, 620, 622, 625, 626, 634, 635, 636, 637, 646, 651, 668, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "holder": 538, "holding": [540, 585, 625, 634, 641, 648, 670, 681], "holiday": 485, "hollow": 652, "hom": [545, 550, 568, 609, 613, 625, 640, 641], "homeless": 609, "homepag": [550, 552], "honour": 542, "honoured": 542, "hood": 535, "hook": [461, 470, 477, 483, 556, 579, 610, 611, 672], "hooked": 540, "hop": [485, 538, 547, 591, 606], "hopefully": [469, 473, 486, 530, 531, 607, 648, 655, 671, 682], "horizontal": [487, 513, 555, 579], "horn": 626, "horribl": 670, "host": [466, 468, 479, 481, 483, 486, 493, 495, 500, 505, 513, 547, 569, 571, 579, 584, 592, 593, 609, 611, 613, 623, 639, 641, 654, 675, 676], "host_fn": 531, "host_install_d": 570, "host_only": 531, "hostb": 592, "hostc": 592, "hostcall": 466, "hosted": [538, 549, 550, 609, 611, 639], "hosting": [608, 611], "hostnam": 639, "hot": [474, 518, 545, 579, 626, 630], "hotfix": 611, "hotness": [579, 620], "hotspot3d": 613, "hott": 474, "hottest": [518, 579], "hour": [468, 485, 553, 621], "hous": 580, "how": [54, 145, 244, 397, 461, 464, 466, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481, 482, 486, 487, 490, 491, 505, 517, 527, 530, 531, 534, 535, 536, 537, 538, 539, 540, 541, 545, 547, 549, 550, 551, 552, 553, 559, 561, 579, 580, 583, 585, 586, 590, 592, 594, 597, 605, 607, 608, 609, 610, 611, 612, 614, 616, 617, 618, 621, 626, 628, 630, 632, 637, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687], "howev": [461, 466, 467, 469, 470, 472, 473, 477, 482, 483, 485, 486, 487, 491, 495, 513, 530, 531, 534, 537, 538, 540, 542, 543, 544, 547, 548, 550, 554, 555, 556, 559, 565, 571, 572, 573, 575, 577, 578, 579, 581, 583, 584, 585, 586, 593, 596, 604, 606, 608, 609, 611, 612, 614, 616, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 636, 637, 640, 641, 643, 645, 648, 656, 670, 671, 672, 673, 674, 677, 682, 683, 684, 685, 686], "howto": [571, 586, 627, 687], "howtosubmitabug": 550, "howtousej": 498, "howtousellj": 593, "hpc": 461, "hpgmg": 613, "hpp": 540, "hreset": 618, "hresult": 604, "hrf": 466, "hsa": 461, "hsail": 466, "hsail_major_vers": 466, "hsail_minor_vers": 466, "hsatext": 466, "hsl": 613, "ht206167": 581, "htm": 613, "html": [481, 486, 499, 505, 529, 535, 541, 550, 569, 570, 571, 572, 581, 592, 611, 613, 614, 615, 619, 620, 626, 634, 639, 640, 654], "http": [471, 481, 485, 486, 507, 508, 509, 511, 515, 516, 523, 525, 526, 535, 546, 549, 550, 552, 553, 567, 569, 570, 571, 572, 573, 579, 581, 608, 611, 613, 614, 615, 619, 622, 626, 639, 640, 649, 654, 655, 656, 657, 687], "hug": [486, 538, 550, 581, 596, 604, 634, 637, 641], "huge16": 596, "hugepoint": 604, "human": [480, 484, 486, 496, 497, 499, 503, 504, 510, 512, 518, 527, 550, 566, 579, 585, 607, 626, 637, 648, 652], "hundred": 545, "hundt": 531, "hung": [609, 686], "hunt": 623, "hurdl": 543, "hurt": 486, "hw": [466, 579], "hw_reg_flat_scr_h": 48, "hw_reg_flat_scr_lo": 48, "hw_reg_gpr_alloc": [48, 142, 238, 391], "hw_reg_hw_id": [48, 142, 238, 391], "hw_reg_ib_st": [48, 142, 238, 391], "hw_reg_lds_alloc": [48, 142, 238, 391], "hw_reg_mod": [48, 142, 238, 391], "hw_reg_pops_pack": 48, "hw_reg_sh_mem_bas": [48, 391], "hw_reg_status": [48, 142, 238, 391], "hw_reg_tba_h": 48, "hw_reg_tba_lo": 48, "hw_reg_tma_h": 48, "hw_reg_tma_lo": 48, "hw_reg_trapst": [48, 142, 238, 391], "hw_reg_xnack_mask": 48, "hwaddresssanitiz": 579, "hwreg": [0, 2, 3, 4], "hwreg_enc": [48, 142, 238, 391], "hybrid": 626, "hydr": 468, "hydro": 613, "hyp": 614, "hypersparc": 646, "hyphen": [618, 636, 646], "hypothesized": 600, "hypothetical": [461, 483, 540, 591, 593, 601, 609, 630, 648], "hypothetically": 554, "h\u00e4hnle": 614, "h\u00e4hnledistinguish": 614, "i": [461, 464, 466, 469, 470, 471, 473, 474, 477, 479, 480, 481, 482, 483, 486, 487, 488, 494, 495, 499, 500, 504, 505, 513, 514, 515, 518, 521, 522, 526, 527, 529, 530, 534, 535, 537, 538, 540, 542, 544, 547, 549, 550, 554, 555, 556, 566, 571, 573, 574, 579, 581, 582, 583, 586, 588, 590, 592, 593, 601, 607, 609, 611, 614, 617, 618, 621, 622, 625, 627, 628, 630, 631, 634, 636, 637, 639, 641, 642, 643, 645, 646, 648, 650, 655, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "i0": 646, "i1": [474, 483, 534, 543, 544, 554, 575, 579, 583, 590, 592, 625, 642, 643, 646, 670, 672, 674, 681, 683, 685], "i100": 579, "i16": [0, 3, 4, 465, 483, 575, 579, 592, 646], "i16x2": [1, 7, 8], "i17": 554, "i19": 579, "i1942652": 579, "i2": [483, 575, 579, 583, 646], "i20": 579, "i24": 579, "i256": 579, "i29": 579, "i3": [483, 646], "i32": [0, 1, 2, 3, 4, 7, 8, 465, 472, 474, 475, 483, 487, 534, 535, 540, 543, 544, 547, 554, 555, 556, 558, 559, 575, 577, 578, 579, 583, 585, 586, 591, 592, 607, 609, 625, 627, 628, 630, 637, 641, 643, 646, 647, 649, 674, 677, 685, 686], "i32imm": [636, 646], "i32mem": 636, "i32x16": 8, "i32x32": 8, "i32x4": 8, "i386": [483, 515, 527, 579, 622], "i4": [579, 646], "i48": 579, "i4x8": [1, 7, 8], "i5": 646, "i6": 646, "i64": [0, 2, 3, 4, 465, 472, 475, 483, 487, 534, 535, 548, 579, 592, 628, 630, 637, 643, 646], "i64imm": 646, "i65": 579, "i67": 579, "i686": [483, 487, 622, 641], "i7": [567, 579, 646], "i8": [470, 472, 483, 487, 534, 535, 540, 547, 554, 556, 575, 578, 579, 590, 592, 625, 628, 630, 637, 643, 646], "i8086": 675, "i8mem": 483, "i8x4": [1, 7, 8], "i_intr_llvm_ptrmask": 555, "ia": 532, "iac": 513, "iaddroff": 483, "iamcu": 515, "ibm": 537, "ic": [477, 614], "icc": [550, 625, 645], "icc_e": 646, "icc_g": 646, "icc_ne": 646, "icc_val": 646, "ice": [550, 580], "iceland": 466, "icmp": [473, 534, 544, 583, 609, 625], "icmp_eq": 585, "icmpinst": 609, "icon": 608, "iconst": [11, 12, 80, 82, 84, 92, 164, 169, 172, 177, 179, 268, 269, 273, 274, 281, 321, 322, 350, 351, 423, 424, 428, 429, 436], "icu": 581, "id": [48, 54, 142, 145, 238, 244, 391, 397, 461, 464, 469, 481, 483, 487, 505, 507, 513, 515, 516, 517, 542, 573, 585, 591, 592, 597, 609, 611, 622, 628, 630, 635, 636, 646, 648, 650, 651, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "idat": 514, "ide": [468, 473, 474, 481, 482, 486, 513, 530, 534, 537, 538, 540, 541, 545, 552, 553, 568, 579, 588, 591, 607, 613, 614, 619, 625, 626, 650, 654, 669, 670, 671, 672, 674, 677, 678, 680, 681, 682, 683, 685, 686], "ideal": 609, "ideally": [513, 538, 553, 581, 588, 630, 646], "ident": [625, 641, 679, 680, 681, 682, 683, 684, 685], "ident_t": 579, "identical": [461, 468, 472, 483, 486, 487, 495, 501, 559, 571, 575, 579, 580, 585, 591, 597, 604, 609, 625, 634, 650, 671, 672, 674, 682, 683, 685], "identically": [487, 579], "identif": [461, 466, 473, 491, 507, 513, 540, 542, 548, 550, 571, 579, 580, 585, 597, 604, 611, 625, 643, 645, 646], "identifi": [461, 473, 483, 486, 487, 548, 585, 587, 592, 602, 607, 609, 611, 614, 630, 634, 642, 643, 646, 648, 649, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "identified": [54, 145, 244, 397, 461, 473, 478, 480, 481, 485, 486, 491, 513, 530, 537, 542, 547, 560, 579, 583, 585, 597, 607, 609, 620, 625, 646], "identifierexpr": [669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "identifierstr": [668, 669, 670, 671, 672, 673, 674, 675, 676], "identify": [466, 477, 486, 491, 513, 529, 540, 547, 566, 573, 575, 579, 580, 607, 609, 611, 614, 616, 619, 625, 626, 628, 630, 643, 645, 646, 648], "identifycudapreferent": 531, "identifying": [473, 484, 513, 534, 575, 579, 585, 614, 630], "identit": [483, 484, 607, 621, 643], "identity": [466, 483, 484, 534, 547, 579, 643], "identitytransform": 655, "idiom": [530, 531, 534, 573, 609, 616, 626, 670, 681], "idiomatic": [486, 609, 616, 641], "idiosyncras": 632, "idiv": 483, "idnam": [669, 670, 671, 672, 673, 674, 675, 676], "idx": [486, 505, 548, 579, 585, 634, 650, 670, 671, 672, 673, 674, 675, 676], "idx0": 579, "idx1": [548, 579], "idx2": 548, "idx3": 548, "idxen": [0, 2, 3, 4, 8, 16, 117, 202, 326, 359, 466], "idxmask": 579, "ie": [481, 530, 579, 590], "iee": [466, 492, 531, 545, 555, 579, 618, 634], "ieee754": 579, "ieee_mod": 466, "if": [16, 19, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 57, 58, 63, 64, 65, 87, 100, 101, 115, 116, 117, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 147, 148, 152, 173, 202, 211, 212, 213, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 244, 248, 253, 277, 326, 335, 336, 342, 345, 359, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 397, 400, 401, 407, 408, 432, 446, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 552, 553, 554, 555, 558, 559, 562, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 592, 593, 594, 596, 597, 599, 600, 601, 602, 604, 605, 607, 608, 609, 610, 611, 612, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 637, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686], "if_1_then": 466, "ifbody": 636, "ifcond": [672, 673, 674, 675, 676, 683, 684, 685], "ifcont": [672, 673, 674, 675, 676, 683, 684, 685], "ifconvers": 646, "ifconvert": 646, "ifdef": [530, 531, 535, 566, 581, 631, 634, 636, 671, 672, 673, 674, 675, 676, 677, 686], "ifequal": 579, "ifexpr": [672, 673, 674, 675, 676, 683, 684, 685], "ifexprast": [672, 673, 674, 675, 676, 683], "iff": [559, 579], "iffals": 579, "ifiqu": 530, "ifloc": 676, "ifndef": [531, 635, 636, 647, 654, 655, 656, 657], "ifstream": 592, "iftmp": [672, 673, 674, 675, 676, 683, 684, 685], "iftru": 579, "ifunc": 473, "ifuncty": 579, "ifunequal": 579, "ignor": [461, 465, 483, 487, 494, 497, 499, 504, 505, 508, 509, 512, 515, 526, 530, 538, 549, 550, 579, 587, 614, 625, 649, 655, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "ignore_crash": 581, "ignore_oom": 581, "ignore_remaining_arg": 546, "ignore_timeout": 581, "ignored": [23, 40, 136, 147, 230, 366, 383, 466, 469, 473, 474, 487, 495, 501, 502, 507, 513, 515, 516, 523, 525, 534, 537, 544, 553, 579, 581, 591, 597, 602, 609, 625, 642, 645, 646], "ignoresvex_l": 636, "ignoresvex_w": 636, "ignoring": [466, 474, 487, 517, 579], "ihex": 515, "ii": [579, 609], "ii32": 636, "ilbdc": 613, "ill": [461, 495, 566, 579], "illegal": [117, 461, 466, 483, 530, 543, 548, 559, 560, 579, 592, 607, 609, 611, 630, 645], "illinois": [538, 613], "illustr": [537, 625], "illustrat": [466, 472, 527, 530, 537, 579, 582, 583, 609, 611, 625, 636, 669, 670, 674, 680, 681, 682, 685], "illustrated": [534, 579, 583, 645, 648, 668, 679], "illustrating": 636, "ilp": [513, 645], "ilp32": [677, 686], "im": [470, 579], "imac": 645, "imag": [19, 29, 30, 31, 32, 43, 44, 45, 63, 66, 120, 129, 130, 131, 139, 140, 152, 153, 205, 218, 219, 220, 221, 233, 234, 235, 253, 254, 362, 372, 373, 374, 375, 386, 387, 388, 406, 409, 464, 465, 483, 512, 514, 515, 516, 517, 542, 579, 584, 602, 634, 673, 684], "image_atomic_add": [0, 2, 3, 4], "image_atomic_and": [0, 2, 3, 4], "image_atomic_cmpswap": [0, 2, 3, 4], "image_atomic_dec": [0, 2, 3, 4], "image_atomic_inc": [0, 2, 3, 4], "image_atomic_or": [0, 2, 3, 4], "image_atomic_smax": [0, 2, 3, 4], "image_atomic_smin": [0, 2, 3, 4], "image_atomic_sub": [0, 2, 3, 4], "image_atomic_swap": [0, 2, 3, 4], "image_atomic_umax": [0, 2, 3, 4], "image_atomic_umin": [0, 2, 3, 4], "image_atomic_xor": [0, 2, 3, 4], "image_comdat_select_associ": 579, "image_comdat_select_largest": 579, "image_debug_directory": 602, "image_debug_type_codeview": 602, "image_debug_type_except": 597, "image_debug_type_fixup": 597, "image_debug_type_fpo": 597, "image_debug_type_omap_from_src": 597, "image_debug_type_omap_to_src": 597, "image_file_32bit_machin": 688, "image_file_aggressive_ws_trim": 688, "image_file_bytes_reversed_h": 688, "image_file_bytes_reversed_lo": 688, "image_file_debug_stripped": 688, "image_file_dll": 688, "image_file_executable_imag": 688, "image_file_large_address_awar": 688, "image_file_line_nums_stripped": 688, "image_file_local_syms_stripped": 688, "image_file_machine_am33": 688, "image_file_machine_amd64": 688, "image_file_machine_arm": 688, "image_file_machine_arm64": 688, "image_file_machine_armnt": 688, "image_file_machine_ebc": 688, "image_file_machine_i386": 688, "image_file_machine_ia64": 688, "image_file_machine_m32r": 688, "image_file_machine_mips16": 688, "image_file_machine_mipsfpu": 688, "image_file_machine_mipsfpu16": 688, "image_file_machine_powerpc": 688, "image_file_machine_powerpcfp": 688, "image_file_machine_r4000": 688, "image_file_machine_sh3": 688, "image_file_machine_sh3dsp": 688, "image_file_machine_sh4": 688, "image_file_machine_sh5": 688, "image_file_machine_thumb": 688, "image_file_machine_unknown": 688, "image_file_machine_wcemipsv2": 688, "image_file_net_run_from_swap": 688, "image_file_relocs_stripped": 688, "image_file_removable_run_from_swap": 688, "image_file_system": 688, "image_file_up_system_only": 688, "image_gather4": [0, 2, 3, 4, 43, 139, 233, 386], "image_gather4_b": [0, 2, 3, 4], "image_gather4_b_cl": [0, 2, 3, 4], "image_gather4_b_cl_o": [0, 2, 3, 4], "image_gather4_b_o": [0, 2, 3, 4], "image_gather4_c": [0, 2, 3, 4], "image_gather4_c_b": [0, 2, 3, 4], "image_gather4_c_b_cl": [0, 2, 3, 4], "image_gather4_c_b_cl_o": [0, 2, 3, 4], "image_gather4_c_b_o": [0, 2, 3, 4], "image_gather4_c_cl": [0, 2, 3, 4], "image_gather4_c_cl_o": [0, 2, 3, 4], "image_gather4_c_l": [0, 2, 3, 4], "image_gather4_c_l_o": [0, 2, 3, 4], "image_gather4_c_lz": [0, 2, 3, 4], "image_gather4_c_lz_o": [0, 2, 3, 4], "image_gather4_c_o": [0, 2, 3, 4], "image_gather4_cl": [0, 2, 3, 4], "image_gather4_cl_o": [0, 2, 3, 4], "image_gather4_l": [0, 2, 3, 4], "image_gather4_l_o": [0, 2, 3, 4], "image_gather4_lz": [0, 2, 3, 4], "image_gather4_lz_o": [0, 2, 3, 4], "image_gather4_o": [0, 2, 3, 4], "image_get_lod": [0, 2, 3, 4], "image_get_resinfo": [0, 2, 3, 4], "image_load": [0, 2, 3, 4], "image_load_mip": [0, 2, 3, 4], "image_load_mip_pck": [0, 2, 3, 4], "image_load_mip_pck_sgn": [0, 2, 3, 4], "image_load_pck": [0, 2, 3, 4], "image_load_pck_sgn": [0, 2, 3, 4], "image_rel_amd64_addr32nb": 542, "image_rel_amd64_secrel": 542, "image_rel_amd64_sect": 542, "image_rel_arm64_secrel_high12": 542, "image_rel_arm64_secrel_low12": 542, "image_rel_arm64_secrel_low12l": 542, "image_rel_i386_dir32nb": 542, "image_rel_i386_secrel": 542, "image_rel_i386_sect": 542, "image_sampl": [0, 2, 3, 4], "image_sample_b": [0, 2, 3, 4], "image_sample_b_cl": [0, 2, 3, 4], "image_sample_b_cl_o": [0, 2, 3, 4], "image_sample_b_o": [0, 2, 3, 4], "image_sample_c": [0, 2, 3, 4], "image_sample_c_b": [0, 2, 3, 4], "image_sample_c_b_cl": [0, 2, 3, 4], "image_sample_c_b_cl_o": [0, 2, 3, 4], "image_sample_c_b_o": [0, 2, 3, 4], "image_sample_c_cd": [0, 2, 3, 4], "image_sample_c_cd_cl": [0, 2, 3, 4], "image_sample_c_cd_cl_g16": 0, "image_sample_c_cd_cl_o": [0, 2, 3, 4], "image_sample_c_cd_cl_o_g16": 0, "image_sample_c_cd_g16": 0, "image_sample_c_cd_o": [0, 2, 3, 4], "image_sample_c_cd_o_g16": 0, "image_sample_c_cl": [0, 2, 3, 4], "image_sample_c_cl_o": [0, 2, 3, 4], "image_sample_c_d": [0, 2, 3, 4], "image_sample_c_d_cl": [0, 2, 3, 4], "image_sample_c_d_cl_g16": 0, "image_sample_c_d_cl_o": [0, 2, 3, 4], "image_sample_c_d_cl_o_g16": 0, "image_sample_c_d_g16": 0, "image_sample_c_d_o": [0, 2, 3, 4], "image_sample_c_d_o_g16": 0, "image_sample_c_l": [0, 2, 3, 4], "image_sample_c_l_o": [0, 2, 3, 4], "image_sample_c_lz": [0, 2, 3, 4], "image_sample_c_lz_o": [0, 2, 3, 4], "image_sample_c_o": [0, 2, 3, 4], "image_sample_cd": [0, 2, 3, 4], "image_sample_cd_cl": [0, 2, 3, 4], "image_sample_cd_cl_g16": 0, "image_sample_cd_cl_o": [0, 2, 3, 4], "image_sample_cd_cl_o_g16": 0, "image_sample_cd_g16": 0, "image_sample_cd_o": [0, 2, 3, 4], "image_sample_cd_o_g16": 0, "image_sample_cl": [0, 2, 3, 4], "image_sample_cl_o": [0, 2, 3, 4], "image_sample_d": [0, 2, 3, 4], "image_sample_d_cl": [0, 2, 3, 4], "image_sample_d_cl_g16": 0, "image_sample_d_cl_o": [0, 2, 3, 4], "image_sample_d_cl_o_g16": 0, "image_sample_d_g16": 0, "image_sample_d_o": [0, 2, 3, 4], "image_sample_d_o_g16": 0, "image_sample_l": [0, 2, 3, 4], "image_sample_l_o": [0, 2, 3, 4], "image_sample_lz": [0, 2, 3, 4], "image_sample_lz_o": [0, 2, 3, 4], "image_sample_o": [0, 2, 3, 4], "image_scn_align_1024byt": 688, "image_scn_align_128byt": 688, "image_scn_align_16byt": 688, "image_scn_align_1byt": 688, "image_scn_align_2048byt": 688, "image_scn_align_256byt": 688, "image_scn_align_2byt": 688, "image_scn_align_32byt": 688, "image_scn_align_4096byt": 688, "image_scn_align_4byt": 688, "image_scn_align_512byt": 688, "image_scn_align_64byt": 688, "image_scn_align_8192byt": 688, "image_scn_align_8byt": 688, "image_scn_cnt_cod": [515, 688], "image_scn_cnt_initialized_dat": [515, 542, 688], "image_scn_cnt_uninitialized_dat": [515, 542, 688], "image_scn_gprel": 688, "image_scn_lnk_comdat": 688, "image_scn_lnk_info": [514, 688], "image_scn_lnk_nreloc_ovfl": 688, "image_scn_lnk_oth": 688, "image_scn_lnk_remov": [515, 542, 688], "image_scn_mem_16b": 688, "image_scn_mem_discard": [515, 542, 688], "image_scn_mem_execut": [515, 688], "image_scn_mem_locked": 688, "image_scn_mem_not_cached": 688, "image_scn_mem_not_paged": 688, "image_scn_mem_preload": 688, "image_scn_mem_purge": 688, "image_scn_mem_read": [515, 688], "image_scn_mem_shared": [515, 688], "image_scn_mem_writ": [515, 688], "image_scn_type_no_pad": 688, "image_section_head": 597, "image_stor": [0, 2, 3, 4, 31, 32, 131, 220, 221, 374, 375], "image_store_mip": [0, 2, 3, 4], "image_store_mip_pck": [0, 2, 3, 4], "image_store_pck": [0, 2, 3, 4], "image_sym_class_argu": 688, "image_sym_class_automatic": 688, "image_sym_class_bit_field": 688, "image_sym_class_block": 688, "image_sym_class_clr_token": 688, "image_sym_class_end_of_funct": 688, "image_sym_class_end_of_struct": 688, "image_sym_class_enum_tag": 688, "image_sym_class_external": 688, "image_sym_class_external_def": 688, "image_sym_class_fil": 688, "image_sym_class_funct": 688, "image_sym_class_label": 688, "image_sym_class_member_of_enum": 688, "image_sym_class_member_of_struct": 688, "image_sym_class_member_of_union": 688, "image_sym_class_null": 688, "image_sym_class_regist": 688, "image_sym_class_register_param": 688, "image_sym_class_sect": 688, "image_sym_class_static": 688, "image_sym_class_struct_tag": 688, "image_sym_class_type_definit": 688, "image_sym_class_undefined_label": 688, "image_sym_class_undefined_static": 688, "image_sym_class_union_tag": 688, "image_sym_class_weak_external": 688, "image_sym_dtype_array": 688, "image_sym_dtype_funct": 688, "image_sym_dtype_null": 688, "image_sym_dtype_point": 688, "image_sym_type_byt": 688, "image_sym_type_char": 688, "image_sym_type_doubl": 688, "image_sym_type_dword": 688, "image_sym_type_enum": 688, "image_sym_type_float": 688, "image_sym_type_int": 688, "image_sym_type_long": 688, "image_sym_type_mo": 688, "image_sym_type_null": 688, "image_sym_type_short": 688, "image_sym_type_struct": 688, "image_sym_type_uint": 688, "image_sym_type_union": 688, "image_sym_type_void": 688, "image_sym_type_word": 688, "imagick": 613, "imagin": [591, 593, 625], "imaginary": 560, "imagmag": [673, 684], "imagstart": [673, 684], "imask": [3, 4], "imbued": 649, "imgrel": 542, "imitat": [586, 627, 636], "imm": [483, 513, 516, 517, 587, 636, 646], "imm16": [0, 2, 3, 4], "imm3": [0, 3, 4], "imm32": [0, 2, 3, 4, 483], "imm_eq0": 637, "immarg": [473, 541, 579], "immaterial": 591, "immediat": [57, 400, 464, 466, 469, 473, 483, 486, 505, 516, 517, 534, 540, 541, 542, 554, 555, 556, 557, 559, 579, 587, 590, 593, 607, 609, 611, 621, 625, 626, 630, 636, 646, 671, 674, 677, 685, 686], "immediately": [461, 466, 470, 480, 483, 486, 487, 499, 509, 513, 534, 540, 543, 575, 579, 581, 583, 584, 587, 592, 593, 597, 601, 609, 611, 614, 621, 625, 626, 628, 630, 636, 651, 656, 671, 682], "immediateparent": 579, "immigr": 484, "imminent": 572, "immleaf": 557, "immsext16": 483, "immsubreg": 646, "immt": [636, 637], "immtyp": [636, 637], "immtypebit": 637, "immun": 626, "immut": [576, 579, 609, 642, 648], "immutablepass": 469, "impact": [466, 479, 480, 482, 485, 486, 513, 547, 566, 579, 609, 613, 614, 616, 625, 626, 632], "impacted": [575, 609], "impactful": [479, 545], "impacting": [579, 626], "impeded": 579, "imper": [486, 547, 625, 672, 674, 683, 685], "impl": [529, 609, 648], "implement": [461, 466, 470, 479, 480, 482, 485, 487, 491, 492, 495, 513, 527, 529, 530, 531, 534, 536, 538, 540, 541, 542, 546, 547, 549, 550, 555, 556, 557, 559, 561, 565, 566, 573, 580, 581, 583, 587, 592, 596, 604, 607, 609, 611, 612, 614, 615, 617, 618, 622, 625, 628, 629, 630, 632, 634, 635, 636, 643, 644, 647, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 671, 672, 673, 674, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687], "implemented": [461, 466, 467, 469, 470, 472, 478, 480, 482, 483, 486, 515, 521, 522, 526, 530, 534, 540, 547, 548, 556, 557, 566, 578, 579, 582, 583, 589, 590, 591, 592, 593, 594, 596, 607, 609, 612, 619, 624, 625, 626, 628, 629, 630, 631, 634, 644, 646, 648, 649, 655, 674, 677, 685, 686], "implementer": 531, "implementing": [466, 469, 486, 491, 534, 579, 607, 608, 612, 626, 628, 631, 634, 654, 655, 668, 670, 671, 672, 673, 674, 675, 676, 678, 679, 681, 682, 683, 684, 685], "implementor": [547, 637, 671, 672, 682, 683], "impli": [483, 487, 491, 516, 517, 530, 540, 579, 581, 583, 590, 597, 631, 646], "implic": [483, 486, 487, 540, 555, 579, 585, 609, 617, 625, 626, 634, 636, 646, 650, 672, 683], "implicit_def": 575, "implicitarg": 466, "implicitcod": 625, "implicitdef": 483, "implicitdefin": 585, "implicitly": [461, 466, 473, 482, 483, 486, 530, 538, 542, 555, 579, 593, 609, 611, 626, 628, 645, 652, 654, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "implicitus": 483, "implied": [13, 97, 186, 288, 323, 352, 443, 461, 462, 463, 466, 529, 531, 548, 579, 609, 611, 614, 636, 646], "impliqu": [480, 483, 529, 583, 597, 611, 622, 626], "imply": [469, 527, 547, 548, 579, 583, 611, 628], "implying": [538, 579], "import": [469, 470, 472, 473, 475, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 491, 502, 513, 517, 518, 522, 530, 533, 538, 545, 547, 549, 550, 551, 552, 568, 569, 571, 572, 574, 577, 579, 581, 591, 593, 595, 597, 600, 601, 602, 607, 611, 619, 622, 625, 626, 628, 645, 646, 647, 648, 649, 652, 655, 669, 670, 671, 672, 673, 676, 677, 680, 681, 682, 683, 684, 686], "importantly": [469, 486, 538, 672, 683], "imported": [475, 486, 538, 557, 579, 611], "impos": [483, 538, 579, 585, 609, 632], "imposed": [621, 628, 632], "imposing": 538, "impossibl": [469, 470, 472, 559, 579, 626, 646, 654, 677, 686], "impractical": [538, 566, 594, 595, 609, 626], "improv": [461, 466, 469, 478, 479, 481, 485, 486, 540, 545, 547, 550, 560, 564, 572, 579, 581, 591, 593, 607, 608, 609, 611, 614, 618, 623, 625, 626, 630, 636, 646, 648, 654, 677, 686], "improved": [461, 491, 560, 581, 583, 608, 618, 646], "improving": [556, 560, 579, 593, 614, 625, 656, 671, 682], "impur": 625, "imul": 483, "imul16rm": 483, "imul16rmi8": 483, "in": [16, 19, 24, 29, 30, 32, 43, 45, 48, 49, 54, 62, 63, 78, 98, 114, 117, 120, 124, 129, 130, 142, 143, 145, 151, 152, 162, 187, 201, 202, 205, 209, 218, 219, 221, 233, 235, 238, 239, 240, 244, 252, 253, 266, 289, 303, 326, 344, 359, 362, 367, 372, 373, 375, 386, 388, 391, 392, 393, 397, 405, 406, 421, 444, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 477, 478, 479, 480, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 541, 542, 544, 545, 546, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 589, 590, 592, 593, 594, 596, 597, 599, 600, 601, 602, 604, 605, 606, 608, 610, 612, 613, 614, 615, 616, 617, 619, 621, 622, 623, 626, 627, 629, 631, 632, 634, 635, 637, 639, 640, 641, 642, 643, 644, 646, 647, 650, 651, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686], "in0": 579, "in1": [483, 579], "in2": 483, "in32bitmod": 483, "in64bitmod": 483, "inaccessibl": 566, "inaccessiblemem_or_argmemonly": 579, "inaccessiblememonly": [473, 579], "inaccessiblememonly_or_argmemonly": 473, "inaccurac": 466, "inaccuracy": 579, "inaccurat": [482, 513], "inact": [461, 464, 466, 579], "inadvertent": [631, 642], "inadvertently": [487, 575], "inadvis": 548, "inalloc": [473, 534, 579, 617], "inapplic": [476, 568, 626], "inappropriat": 621, "inbound": [534, 535, 545, 548, 579], "inc": [483, 486, 529, 534, 550, 577, 579, 585, 609, 623, 631, 634, 635, 636, 646, 648], "inc32r": [585, 625], "inc4": 487, "incant": 531, "incap": [461, 473, 677, 686], "incarn": 541, "incident": 621, "includ": [19, 48, 120, 142, 205, 238, 239, 362, 391, 392, 461, 463, 464, 465, 466, 467, 468, 469, 470, 472, 479, 480, 481, 482, 483, 484, 487, 491, 492, 495, 498, 499, 508, 509, 510, 511, 517, 523, 527, 529, 530, 531, 532, 533, 534, 535, 538, 540, 541, 542, 545, 546, 547, 548, 551, 552, 558, 565, 566, 568, 570, 571, 573, 575, 577, 578, 579, 580, 581, 582, 587, 590, 592, 593, 597, 602, 607, 608, 609, 610, 611, 616, 620, 621, 623, 625, 626, 628, 630, 632, 634, 635, 637, 639, 640, 641, 645, 646, 647, 648, 649, 650, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686], "include_director": 481, "included": [461, 466, 469, 470, 479, 482, 483, 486, 492, 497, 498, 499, 527, 530, 531, 535, 538, 539, 549, 552, 561, 579, 585, 594, 613, 623, 625, 631, 634, 635, 636, 637, 640, 646, 651, 668, 669, 670, 672, 679, 680, 683], "including": [461, 465, 466, 469, 470, 475, 477, 479, 481, 483, 484, 485, 486, 488, 498, 516, 517, 528, 530, 531, 538, 540, 546, 547, 549, 550, 561, 572, 579, 581, 584, 592, 593, 594, 595, 596, 601, 605, 607, 609, 614, 616, 617, 618, 621, 622, 623, 625, 626, 628, 629, 630, 632, 634, 635, 641, 642, 645, 646, 648, 649, 650, 654, 669, 672, 673, 677, 678, 679, 680, 683, 684, 686], "inclus": [461, 464, 465, 466, 475, 486, 499, 529, 538, 542, 579, 610, 623, 631, 634, 646, 654], "inclusively": 513, "incoming": [466, 483, 538, 555, 564, 579, 583, 609, 623, 626, 646, 672, 674, 683, 684, 685], "incompatibl": [515, 526, 540, 566, 579, 606, 634], "incomplet": [461, 466, 539, 543, 609, 626, 634, 655, 656, 657], "inconsistenc": 505, "inconsistency": [486, 505, 548, 614], "inconsistent": 625, "inconvenient": [581, 674, 685], "inconvertibleerrorcod": 609, "incorporat": [483, 573, 636, 678], "incorporated": [461, 485], "incorporating": 609, "incorrect": [466, 475, 538, 579, 594, 608, 625, 626, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "incorrectly": [466, 570, 579, 614, 626, 668, 670, 681], "incq": 487, "incr": 515, "increas": [466, 479, 485, 486, 493, 513, 516, 534, 538, 545, 554, 560, 574, 581, 582, 583, 607, 618, 622, 625, 634, 637, 642, 645], "increased": [461, 579, 581], "increasing": [486, 559, 575, 579, 611, 620, 626, 632, 670, 681], "incredibly": [538, 569, 611], "increment": [466, 483, 538, 602, 607, 609, 672, 674, 675, 676, 683, 685], "incremental": [461, 482, 483, 547, 550, 579, 581, 597, 601, 604, 632], "incrementally": [461, 602, 615, 624, 672, 683], "incremented": [466, 477, 486, 513, 579], "incrementing": [579, 672, 683], "incub": 538, "incubator": 538, "incur": 589, "ind": 676, "ind1": 579, "ind4": 579, "indefinitely": 581, "indemnity": 538, "indent": [516, 586, 609, 627, 676], "indented": 486, "indenting": 652, "independent": [461, 466, 470, 485, 493, 530, 533, 537, 538, 545, 548, 550, 554, 559, 571, 576, 578, 579, 582, 587, 589, 609, 612, 615, 618, 626, 628, 631, 636, 637, 644, 645, 646, 648], "independently": [461, 466, 483, 487, 537, 538, 579, 582, 593, 609, 620, 626, 628, 636, 650, 651], "index": [16, 117, 202, 326, 359, 464, 466, 469, 472, 473, 483, 490, 495, 504, 505, 513, 517, 521, 522, 529, 530, 534, 535, 540, 542, 545, 547, 550, 555, 559, 572, 576, 597, 600, 601, 602, 604, 605, 609, 613, 620, 625, 626, 628, 629, 630, 635, 646, 652, 676], "index2": 626, "index2virtreg": 483, "indexed": [518, 548, 555, 579, 601, 625, 636, 646], "indexedmap": 483, "indexing": [239, 392, 465, 548, 555, 579], "indexloc": 609, "indexoffsetbufferlength": 604, "indexoffsetbufferoffset": 604, "indexreg": 483, "indextyp": 634, "indic": [461, 465, 472, 473, 483, 497, 513, 535, 559, 576, 579, 595, 597, 602, 605, 607, 609, 625, 626, 628, 630, 645, 646], "indicat": [60, 87, 173, 250, 277, 403, 432, 461, 462, 463, 464, 465, 466, 469, 473, 474, 475, 476, 481, 483, 485, 486, 487, 527, 529, 530, 534, 535, 538, 540, 545, 547, 558, 559, 560, 573, 579, 580, 581, 592, 594, 596, 609, 611, 616, 618, 622, 625, 626, 628, 630, 635, 636, 637, 640, 645, 646, 648, 651, 669, 670, 672, 676, 680, 681, 683], "indicated": [29, 30, 48, 99, 129, 130, 142, 218, 219, 238, 353, 372, 373, 391, 445, 461, 464, 466, 473, 495, 534, 541, 542, 579, 596, 607, 646, 648], "indicating": [461, 465, 469, 473, 475, 481, 483, 486, 487, 495, 501, 530, 534, 540, 548, 579, 594, 595, 596, 599, 604, 608, 609, 611, 625, 634, 637, 646], "indicator": [486, 513, 650], "indiqu": [469, 491, 571, 630], "indir": 579, "indirect": [461, 466, 480, 483, 515, 516, 522, 534, 542, 543, 555, 581, 585, 601, 625, 628, 630, 635, 646, 656], "indirectly": [470, 486, 491, 579, 590, 636], "indirectstubmanager": [656, 657], "indistinguish": 636, "individual": [461, 463, 466, 472, 473, 477, 483, 486, 487, 491, 495, 497, 499, 513, 517, 523, 535, 537, 541, 545, 555, 564, 579, 581, 587, 590, 594, 597, 605, 607, 611, 612, 621, 623, 626, 630, 635, 636, 641, 649, 676, 678], "individually": [515, 526, 552, 570, 609, 614, 635, 636, 649], "indivisibl": 578, "induc": 566, "induced": [583, 616, 617], "induct": [469, 545, 550, 579, 583, 648, 670, 672, 674, 681, 683, 685], "industrial": 653, "industry": [461, 538], "indvar": [579, 609, 648], "indx": 652, "ineffect": [534, 626], "inefficienc": [483, 674, 685], "inefficient": [473, 545, 581, 609, 629, 645], "ineg": 483, "inequal": 609, "inequality": [465, 483], "inevitably": [513, 614], "inexact": [466, 579], "inf": [466, 492, 493, 530, 579, 625], "infeasibl": [580, 626], "infectious": 609, "infer": [480, 483, 531, 545, 579, 594, 636, 641, 648], "inferattr": 648, "inferencing": 483, "inferent": [472, 531], "inferior": 536, "inferred": [461, 486, 487, 492, 493, 547, 573, 579, 630, 636, 639, 652], "inferring": 630, "infinit": [461, 469, 483, 559, 579, 581, 583, 607], "infinity": [466, 513, 579], "infix": 636, "influenc": [472, 478, 579, 580, 625, 642], "influenced": [623, 648], "info": [466, 473, 479, 481, 483, 489, 491, 504, 505, 511, 513, 516, 517, 518, 521, 522, 527, 529, 532, 536, 538, 540, 547, 550, 562, 569, 571, 579, 580, 581, 582, 594, 596, 600, 605, 611, 620, 621, 634, 645, 648, 651, 652, 668, 673, 674, 676, 677, 678, 679, 682, 683, 684, 685, 686], "inform": [463, 464, 465, 467, 469, 473, 475, 476, 479, 480, 481, 484, 487, 488, 489, 490, 491, 495, 497, 505, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 522, 527, 528, 529, 530, 531, 534, 535, 536, 538, 540, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 554, 556, 558, 559, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 580, 581, 582, 583, 584, 585, 586, 587, 591, 592, 595, 597, 599, 601, 602, 604, 605, 608, 610, 611, 614, 616, 617, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 639, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 669, 670, 671, 673, 674, 675, 677, 678, 681, 682, 684, 685, 686], "informal": [538, 579, 621], "informally": [566, 636], "informational": 530, "informativemailnotifi": 567, "informed": [469, 547, 609, 623], "informing": 607, "infos": 540, "infrastructur": [461, 477, 481, 483, 517, 533, 538, 541, 547, 549, 550, 551, 568, 579, 593, 594, 609, 610, 611, 616, 617, 620, 623, 625, 630, 632, 639, 644, 645, 647, 648, 653, 671], "infrequently": 648, "infringed": 538, "ing": [486, 533, 583, 607, 670, 674, 681, 682, 685], "ingredient": 616, "inher": [469, 483, 486, 593, 606, 609, 635, 636, 642, 647, 648, 655], "inherent": [485, 602, 636], "inherently": [482, 543, 579, 609, 626], "inherit": [466, 483, 530, 537, 573, 609, 631, 634, 636, 637, 642, 643, 647], "inherited": [636, 643, 648], "inheriting": [609, 635, 636, 647], "inhib": [518, 579, 630], "init": [466, 506, 530, 536, 572, 581, 611, 636, 648, 674, 675, 676, 685], "init_val": 685, "initact": 467, "inited": 581, "initial": [461, 474, 481, 485, 517, 530, 534, 547, 550, 555, 564, 579, 581, 583, 584, 591, 607, 608, 609, 612, 616, 621, 622, 623, 626, 634, 636, 646, 654, 672, 674, 675, 676, 683, 685], "initial_instruct": [461, 466], "initial_loc": 461, "initialexec": [473, 579], "initialis": [530, 675], "initialised": [530, 637, 649], "initializ": [466, 473, 483, 513, 530, 534, 541, 543, 547, 579, 591, 592, 607, 618, 624, 626, 634, 635, 636, 646, 648, 649, 652, 654, 655, 656, 671, 674, 675, 676, 682, 683, 684, 685], "initialize_ag_pass": 648, "initialize_native_target": [682, 683, 684, 685], "initialize_pass_begin": 558, "initialize_pass_dependency": [558, 648], "initialize_pass_end": 558, "initializealiasanalys": 469, "initializeallasmparser": 675, "initializeallasmprinter": 675, "initializealltarget": 675, "initializealltargetinfos": 675, "initializealltargetmc": 675, "initialized": [466, 486, 493, 530, 543, 547, 573, 579, 581, 593, 629, 634, 636, 646, 648, 649, 654], "initializemodul": [670, 676], "initializemoduleandpassmanag": [671, 672, 673, 674, 675], "initializenativetarget": [671, 672, 673, 674, 676], "initializenativetargetasmpars": [671, 672, 673, 674, 676], "initializenativetargetasmprint": [671, 672, 673, 674, 676], "initializepass": 469, "initializer": [486, 497, 579, 593, 607, 634, 635], "initializerconst": 579, "initializing": [466, 486, 592, 649, 654, 656, 671], "initially": [469, 483, 491, 534, 590, 609, 611, 614, 646, 652, 670, 681], "initialseed": 524, "initiat": [466, 540], "initiated": 461, "initid": 473, "initiliz": 466, "initsynclibcall": 470, "initval": [674, 675, 676], "inject": [486, 534, 575, 626], "injected": 534, "injecting": 626, "inlin": [466, 470, 499, 513, 518, 527, 530, 531, 538, 540, 542, 543, 585, 592, 608, 609, 620, 628, 630, 648, 652, 668, 671, 682], "inline": [517, 579, 625], "inline_hd1": 531, "inline_hd2": 531, "inlineasm": 591, "inlinebit": 579, "inlined": [461, 466, 475, 480, 483, 494, 514, 518, 527, 534, 540, 542, 545, 575, 579, 609, 611, 620, 625, 626, 648, 672, 683], "inlined_at": 542, "inlinedat": [487, 579], "inlinedinfo": 514, "inlinehint": [473, 579], "inlining": [527, 528, 530, 531, 534, 540, 543, 550, 579, 594, 600, 625, 626, 655, 677, 686], "inner": [479, 482, 488, 540, 575, 578, 579, 581, 583, 607, 609, 616, 636, 642, 644, 645, 652], "inner_": 579, "innerloop": 616, "innerloopvectoriz": 614, "innermost": [616, 645], "innerstructty": 579, "innocent": [672, 683], "innov": 538, "inoperandlist": [636, 637, 646], "inplac": 489, "inpredsens": 577, "input": [9, 10, 11, 12, 15, 26, 27, 28, 29, 30, 33, 34, 35, 67, 68, 69, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 110, 111, 112, 113, 116, 126, 127, 128, 129, 130, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 197, 198, 199, 200, 211, 212, 213, 218, 219, 255, 256, 257, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 293, 294, 299, 300, 301, 302, 306, 307, 311, 312, 318, 319, 320, 321, 322, 325, 331, 332, 333, 334, 335, 346, 347, 348, 349, 350, 351, 354, 355, 356, 358, 369, 370, 371, 372, 373, 376, 377, 378, 410, 411, 412, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 450, 451, 456, 457, 458, 459, 461, 462, 464, 465, 466, 467, 469, 471, 477, 478, 482, 483, 486, 487, 488, 489, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 516, 517, 519, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 537, 543, 550, 555, 556, 559, 560, 564, 572, 577, 580, 581, 582, 583, 585, 592, 597, 607, 609, 616, 618, 620, 623, 625, 626, 630, 634, 636, 637, 639, 641, 645, 646, 648, 650, 654, 655, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 681, 682, 683, 685, 686, 688], "input_vector": 579, "inputcontent": 652, "inputfilenam": 530, "inrang": 579, "inreg": [466, 473, 483, 579, 646], "inresumepart": 534, "insanely": 486, "insect": 580, "insensit": [469, 487, 504], "insert": [472, 486, 491, 495, 530, 534, 547, 555, 575, 583, 591, 607, 609, 625, 626, 627, 631, 646, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "insert_subreg": 585, "insert_subvector": 483, "insertbefor": 609, "insertbranch": 646, "insertbyt": 581, "insertdeclar": 676, "inserted": [466, 469, 470, 483, 495, 547, 560, 579, 583, 609, 625, 626, 630, 648, 649, 670, 672, 673, 674, 675, 676, 681, 683, 684, 685], "insertel": [472, 487], "inserter": 609, "inserting": [466, 477, 483, 487, 495, 555, 566, 575, 579, 596, 607, 625, 626, 630, 672, 673, 674, 675, 676, 683, 684, 685], "insertion_block": [683, 684, 685], "insertvalu": 534, "insid": [473, 479, 481, 482, 483, 486, 487, 491, 495, 535, 536, 537, 539, 540, 547, 549, 550, 560, 571, 573, 579, 581, 583, 590, 591, 597, 604, 607, 609, 616, 619, 625, 626, 629, 630, 634, 636, 640, 641, 642, 643, 648, 652, 671], "insidebundl": 483, "insight": [461, 535, 579, 620, 650], "insignific": [492, 502, 579, 628], "insn": 516, "inspect": [466, 473, 480, 505, 548, 579, 611, 618, 625, 647, 648], "inspected": [579, 609, 669], "inspecting": [483, 545, 579], "inspir": 650, "inspired": [513, 579, 607, 625], "inst": [529, 575, 579, 607, 609, 636, 646], "inst_begin": 609, "inst_call": 473, "inst_end": 609, "inst_invok": 473, "inst_iterator": 609, "instali": 483, "instalias": 483, "install": [466, 481, 490, 498, 531, 533, 539, 541, 550, 552, 565, 566, 567, 568, 570, 571, 572, 581, 606, 609, 610, 619, 639, 640, 649, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "install_gwp_asan_stub": 566, "install_name_tool": 507, "install_prefix": 481, "installed": [466, 468, 481, 482, 498, 531, 533, 539, 546, 550, 552, 565, 566, 567, 568, 571, 592, 606, 609, 611, 619, 637, 639, 640, 649, 674, 685], "installedd": 539, "installing": [550, 639, 648, 674, 685], "installment": [669, 680], "installsignalhandler": 566, "instanc": [461, 466, 467, 481, 483, 486, 487, 491, 495, 530, 534, 539, 547, 549, 554, 557, 564, 573, 578, 579, 583, 584, 585, 591, 593, 594, 599, 608, 609, 611, 619, 625, 628, 634, 635, 636, 639, 641, 642, 646, 648, 649, 652, 654, 655, 669, 670, 677, 680, 681, 686], "instanceof": [609, 634], "instanti": [499, 530, 573, 634, 636, 637], "instantiat": [491, 529, 530, 609, 636, 637, 652], "instantiated": [499, 531, 584, 609, 616, 636, 637, 646, 648], "instantiatetemplateattribut": 634, "instantiating": [609, 634, 636], "instantly": 609, "instcombin": [477, 546, 583, 609, 655, 656, 657, 671, 672, 673, 674], "instead": [23, 56, 57, 366, 399, 400, 461, 462, 466, 469, 470, 473, 477, 481, 482, 483, 484, 486, 487, 489, 491, 493, 494, 495, 499, 504, 505, 506, 510, 513, 514, 516, 517, 527, 528, 530, 531, 534, 535, 536, 540, 542, 543, 545, 546, 548, 549, 550, 554, 559, 560, 564, 566, 567, 568, 569, 572, 573, 577, 578, 579, 580, 581, 585, 591, 592, 593, 597, 607, 609, 611, 616, 618, 621, 624, 625, 626, 628, 630, 631, 635, 636, 639, 641, 644, 646, 648, 649, 650, 651, 652, 655, 656, 669, 670, 671, 673, 674, 677, 678, 679, 680, 681, 682, 684, 685, 686], "instinct": 466, "institerator": 609, "instlisttyp": 609, "instnam": 477, "instprint": 634, "instr": [466, 481, 483, 499, 518, 529, 535, 585, 636], "instr0": 591, "instr1": 591, "instr2": 591, "instr_begin": 685, "instr_iterator": 483, "instr_map": 650, "instrinfo": [483, 585, 646], "instritinclass": [636, 637], "instrmapping": 646, "instrprofvaluekind": 579, "instrsched": 609, "instrsdrm": 636, "instrsdrr": 636, "instrssrm": 636, "instrssrr": 636, "instruct": [9, 10, 11, 12, 14, 15, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 318, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 362, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 467, 469, 473, 477, 478, 480, 481, 486, 487, 490, 492, 493, 495, 497, 516, 517, 518, 524, 529, 530, 531, 532, 533, 534, 537, 538, 539, 542, 544, 545, 546, 547, 549, 550, 555, 556, 557, 559, 560, 561, 562, 563, 565, 570, 572, 574, 578, 580, 583, 589, 590, 591, 592, 594, 608, 611, 616, 617, 618, 620, 623, 624, 628, 630, 634, 636, 637, 641, 642, 643, 644, 645, 648, 649, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 683, 685, 686], "instructed": [540, 579, 621], "instructioncount": 620, "instructionencoding": 636, "instructionselect": [556, 559, 564], "instructionselector": 561, "instructor": 646, "instrument": [475, 481, 499, 518, 529, 535, 569, 579, 581, 607, 617, 629, 635, 639, 651], "instrumentationmap": 649, "instrumentaton": 649, "instrumented": [468, 499, 535, 569, 579, 594, 597, 629, 635, 649, 650, 651], "instrumenting": [548, 650], "instsimplify": [530, 618], "instsp": 646, "insttoreplac": 609, "instvisitor": [541, 609], "insufficient": [531, 534, 568, 579, 625, 631, 646], "insufficiently": 625, "insulat": 626, "insult": 484, "int": [469, 470, 472, 477, 483, 486, 487, 488, 500, 513, 527, 530, 531, 534, 535, 536, 537, 540, 543, 547, 548, 550, 552, 565, 566, 577, 578, 579, 581, 582, 583, 585, 586, 591, 592, 593, 604, 609, 625, 626, 627, 630, 634, 635, 636, 637, 642, 645, 646, 649, 650, 652, 654, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686, 688], "int128": 604, "int128oct": 604, "int16": 604, "int16_t": [646, 652], "int16short": 604, "int2006": 639, "int32": [604, 628], "int32_t": [547, 597, 604, 652], "int32long": 604, "int32ty": 609, "int32x4_t": 472, "int64": 604, "int64_t": [609, 635, 652], "int64quad": 604, "int8_t": 652, "int_amdgcn_buffer_load_format": 635, "int_amdgcn_image_atomic_swap_1d": 635, "int_get_dynamic_area_offset": 579, "int_min": 579, "int_of_float": [684, 685], "intd": 487, "integ": [48, 49, 52, 54, 114, 143, 145, 201, 238, 240, 242, 244, 303, 316, 339, 391, 393, 395, 397, 460, 461, 463, 464, 466, 470, 473, 474, 483, 486, 487, 491, 513, 518, 530, 531, 534, 535, 540, 541, 545, 547, 554, 562, 581, 585, 591, 593, 597, 602, 604, 609, 611, 613, 618, 625, 630, 634, 635, 636, 641, 645, 646, 652, 670, 681], "integer": [465, 466, 474, 483, 497, 530, 535, 542, 548, 579, 585, 591, 597, 609, 620, 634, 635, 636, 645, 646, 652], "integer_numb": [24, 25, 46, 47, 48, 49, 54, 60, 78, 98, 114, 124, 125, 141, 142, 143, 145, 162, 187, 201, 209, 210, 236, 237, 238, 239, 240, 244, 250, 266, 289, 303, 367, 368, 389, 390, 391, 392, 393, 397, 403, 421, 444, 460], "integertyp": 609, "integr": [480, 481, 530, 533, 538, 550, 581, 582, 586, 594, 611, 615, 630], "integral": [461, 466, 530, 531, 607, 609, 625, 630, 634], "integrat": [481, 547, 611, 630, 632, 649], "integrated": [490, 579, 582, 613, 687], "integrating": [611, 649], "integrator": 611, "integrity": [480, 579, 643, 644], "intel": [470, 481, 493, 513, 516, 519, 532, 571, 579, 616, 622, 626, 636, 641, 645, 675], "intel_pstat": 471, "intel_syntax": 513, "inteldialect": 579, "intelligent": [579, 626], "intelligently": 609, "intend": [481, 485, 486, 538, 541, 562, 564, 609], "intended": [461, 466, 468, 469, 470, 479, 481, 482, 483, 484, 486, 487, 502, 508, 523, 525, 530, 534, 538, 540, 545, 547, 550, 554, 560, 564, 579, 582, 584, 587, 594, 602, 607, 609, 611, 621, 622, 626, 627, 628, 631, 636, 644, 646, 648], "intendend": 579, "intending": 609, "intens": [479, 545, 609], "intent": [461, 472, 482, 483, 486, 538, 579, 582, 594, 614, 623, 625, 674, 685], "intentionally": [486, 538, 579, 626, 648, 669, 680], "inter": [466, 469, 475, 486, 538, 545, 579, 580, 593, 629, 631, 636], "interact": [464, 470, 477, 481, 483, 530, 547, 569, 579, 584, 590, 608, 611, 620, 621, 625, 630, 646, 654, 669, 676, 677, 680, 686], "interacting": [534, 540, 547], "interactively": 500, "intercept": 581, "intercepted": 581, "interchangeably": [483, 486], "interchanged": 642, "interest": [461, 466, 469, 470, 479, 485, 497, 533, 538, 545, 547, 584, 609, 623, 630], "interested": [469, 483, 490, 491, 530, 533, 535, 538, 540, 545, 547, 567, 588, 602, 609, 612, 625, 630, 635, 640, 644, 655, 677, 679, 686], "interesting": [470, 472, 478, 483, 486, 487, 488, 513, 533, 543, 546, 550, 552, 573, 579, 581, 585, 588, 607, 609, 614, 625, 626, 647, 648, 650, 652, 655, 668, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "interfac": [466, 481, 483, 486, 491, 495, 522, 529, 530, 532, 536, 538, 539, 540, 546, 547, 549, 550, 565, 573, 576, 577, 579, 581, 582, 583, 591, 592, 593, 607, 617, 620, 625, 628, 634, 636, 644, 646, 647, 648, 655, 656, 668, 669, 670, 677, 679, 680, 681, 682, 686], "interfacing": [543, 609], "interfer": [513, 540, 545, 548, 579], "interferent": 513, "interfering": 625, "interim": [480, 538], "interior": [547, 573, 580, 630], "interleav": [616, 636, 645], "interleave_count": 645, "interleaved": [466, 516, 611, 616, 642], "interleaving": [461, 466, 579, 636, 645], "intermediary": 609, "intermediat": [473, 481, 506, 510, 528, 531, 533, 539, 540, 543, 547, 550, 554, 555, 559, 564, 576, 578, 579, 585, 590, 609, 617, 619, 620, 625, 630, 636, 639, 644, 646, 669, 680], "intermingled": 579, "intermittent": 550, "intermixed": 466, "intermodular": [582, 644], "intern": 593, "internal": [469, 473, 481, 482, 483, 487, 491, 515, 517, 527, 533, 534, 535, 538, 540, 543, 545, 549, 550, 555, 566, 579, 580, 582, 583, 584, 585, 592, 595, 601, 605, 607, 609, 612, 618, 630, 634, 636, 637, 639, 640, 643, 646, 648, 652, 676], "internaliz": 592, "internalized": [635, 636], "internallinkag": 609, "internally": [483, 488, 513, 539, 540, 545, 548, 579, 594, 605, 609, 631, 634, 654, 670, 674, 681, 685], "internalread": 585, "international": [483, 531], "internet": [532, 611], "interning": 593, "interoperat": [470, 540, 579, 605, 609, 654, 677, 686], "interoperating": 547, "interpol": [20, 59, 121, 149, 206, 249, 363, 402], "interpret": [461, 472, 473, 481, 483, 485, 488, 493, 494, 498, 517, 529, 530, 531, 535, 542, 546, 550, 554, 579, 593, 606, 625, 628, 630, 634, 636, 637, 641, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686], "interpreted": [461, 485, 491, 502, 518, 530, 535, 550, 579, 625, 630, 636, 637, 641, 642], "interpreter": 593, "interpreting": [530, 579, 625], "interprocedural": [469, 579, 582, 594, 648, 655], "interrupt": [486, 626], "interrupted": [491, 579, 581, 631], "interrupting": 544, "intersect": 632, "interspersed": 651, "intertwined": 580, "interval": [466, 601, 609], "intervening": [466, 473, 513, 611, 628], "intimat": 486, "intimidated": 538, "intimmleaf": 557, "into": [40, 136, 230, 383, 461, 464, 466, 468, 469, 470, 472, 473, 474, 476, 477, 479, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 493, 495, 496, 497, 499, 503, 504, 505, 509, 510, 513, 514, 515, 517, 518, 528, 529, 531, 533, 534, 535, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 566, 569, 570, 571, 572, 573, 574, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 597, 605, 608, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 624, 625, 627, 628, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "intpred": 585, "intptr_t": [645, 671, 672, 673, 674, 676], "intptrsiz": 547, "intra": [469, 629], "intraprocedural": [477, 590], "intrecty": 635, "intreg": [577, 646], "intregsclass": 646, "intregsregclass": 646, "intregsregclassid": 646, "intregsregisterclass": 646, "intregssubcl": 646, "intregssubregcl": 646, "intregssupercl": 646, "intregssuperregcl": 646, "intregsvt": 646, "intrepid": [669, 680], "intricat": 539, "intrinisc": 534, "intrinsic": [470, 485, 518, 529, 532, 545, 555, 560, 575, 580, 583, 585, 609, 618, 624, 635, 643, 644, 645, 646], "intrinsics_gen": 647, "intrinsicsamdgpu": 635, "intrinsicsnvvm": 592, "intrnoduplicat": 579, "intro": [532, 533, 579, 653, 674, 685], "introduc": [461, 469, 470, 483, 487, 534, 542, 562, 564, 573, 578, 579, 583, 590, 591, 609, 611, 615, 620, 625, 626, 630, 637, 643, 646, 654, 655, 657, 672, 673, 678, 683, 684], "introduced": [469, 470, 471, 483, 486, 513, 535, 557, 559, 560, 572, 579, 583, 601, 607, 609, 616, 628, 630, 655, 674, 685], "introducing": [470, 554, 562, 573, 579, 590, 607, 609, 616, 626, 654], "introduct": [485, 529, 533, 550, 551, 552, 653, 687], "introspect": [576, 579, 582, 587, 630], "intrus": [579, 609], "intscalarty": 579, "inttoptr": [545, 628, 630], "intty": 579, "inttyp": 579, "intuit": [579, 583, 590], "invalid": [461, 464, 465, 466, 470, 486, 491, 505, 515, 518, 526, 528, 530, 540, 548, 550, 555, 579, 581, 583, 584, 597, 607, 609, 622, 625, 626, 628, 630, 646, 648, 652, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "invalidat": [461, 466, 469, 505, 584, 607, 609, 628, 632, 648], "invalidated": [466, 580, 609, 648], "invalidating": [466, 534, 648], "invari": [469, 545, 550, 560, 575, 580, 583, 609, 630, 642, 648], "invas": [538, 572, 652], "invent": 635, "invented": [605, 634], "invers": [464, 505, 579, 607], "inverse_throughput": 505, "invert": [554, 579, 641], "inverted": [545, 579], "invest": [541, 623], "investig": 517, "investigat": [614, 623, 626, 654], "investigated": [614, 623, 677, 686], "investigating": 559, "invisibl": 612, "invit": [655, 656, 657], "invoc": [461, 466, 468, 477, 481, 483, 487, 488, 507, 518, 534, 539, 546, 550, 565, 569, 570, 575, 579, 581, 594, 614, 639, 648, 649, 650, 651], "invok": [466, 469, 475, 481, 483, 486, 531, 540, 545, 547, 550, 565, 578, 581, 582, 584, 585, 591, 609, 628, 630, 634, 635, 637, 641, 646, 648, 649, 651, 655, 669, 680, 682], "invoke": 579, "invoke_normal_weight": 475, "invoke_unwind_weight": 475, "invoked": [461, 475, 481, 482, 487, 499, 527, 530, 534, 579, 581, 593, 594, 609, 635, 636, 641, 646, 648, 674, 682, 685], "invoking": [473, 477, 481, 579, 594, 609, 636, 639], "involv": [461, 466, 474, 481, 537, 540, 545, 548, 572, 579, 593, 609, 611, 616, 621, 626, 630, 631, 646, 647, 652, 672, 676, 683], "involved": [461, 470, 483, 513, 541, 547, 548, 556, 560, 577, 609, 621, 622, 626, 630, 631, 632, 635, 650, 653, 669, 674, 680, 685], "involving": [461, 466, 469, 548, 579, 616, 622, 630, 635, 636], "io": [613, 614, 652], "iommu": 466, "ios": [550, 579, 639], "iostream": [566, 592, 650, 675], "ip": 637, "ipa": 580, "ipc": [513, 631], "iphoneos": 639, "ipi": [517, 595, 596, 602, 605], "ipo": [580, 591, 648], "ipra": 466, "ipsk_covmap": 535, "iptr": [554, 579], "ipv": 461, "ir": [469, 474, 475, 477, 478, 483, 493, 529, 530, 533, 534, 537, 540, 541, 544, 550, 551, 555, 556, 559, 560, 564, 565, 569, 578, 579, 580, 583, 586, 590, 591, 592, 593, 594, 610, 616, 620, 625, 627, 628, 630, 636, 641, 642, 643, 646, 647, 648, 649, 650, 654, 655, 656, 657, 669, 671, 673, 674, 675, 676, 678, 679, 680, 682, 685, 687], "irbuild": [575, 609, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683], "irc": [484, 485, 533, 608, 621], "irce": 545, "ircompil": 654, "ircompilelai": [593, 654, 655, 656, 657], "irgen": 545, "irgenandtakeownership": 657, "irlai": [655, 657], "irpath": 593, "irread": 481, "irreducibl": [579, 583, 607, 646], "irrelev": [469, 487, 548, 579, 634], "irrespect": 481, "irtest": 481, "irtransformlai": [656, 657], "irtranslator": [560, 564], "is": [16, 19, 23, 25, 26, 27, 28, 29, 30, 33, 34, 35, 40, 41, 42, 46, 47, 49, 50, 54, 57, 58, 60, 63, 66, 87, 99, 101, 114, 115, 116, 117, 125, 126, 127, 128, 129, 130, 136, 137, 138, 141, 143, 145, 147, 148, 152, 153, 173, 201, 202, 210, 211, 212, 213, 218, 219, 221, 230, 231, 232, 233, 235, 236, 237, 239, 240, 244, 248, 250, 253, 254, 277, 303, 304, 309, 314, 326, 335, 336, 337, 342, 353, 359, 366, 368, 369, 370, 371, 372, 373, 376, 377, 378, 383, 384, 385, 389, 390, 392, 393, 397, 400, 401, 403, 409, 432, 445, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 627, 628, 629, 630, 631, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 675, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687], "is64bitmod": 646, "is_base_of": 573, "is_const": 466, "is_int_min_poison": 579, "is_null": 544, "is_open": 592, "is_pip": 466, "is_ptr64": 466, "is_restrict": 466, "is_stmt": 542, "is_trivially_copi": 609, "is_volatil": 466, "is_zero_undef": 579, "isa": [464, 466, 470, 483, 486, 532, 538, 547, 573, 579, 617, 636, 646], "isa_and_nonnull": 609, "isa_impl": 573, "isabsoluteaddress": 597, "isadd": 636, "isaddresstaken": 585, "isalnum": [668, 669, 670, 671, 672, 673, 674, 675, 676], "isalph": [668, 669, 670, 671, 672, 673, 674, 675, 676], "isas": [545, 579, 615], "isascheapasamov": 636, "isascii": [669, 670, 671, 672, 673, 674, 675, 676], "isasmparseronly": 636, "isatleastorstrongerthan": 470, "isauthenticated": 636, "isbarri": [636, 637], "isbasewithconstantoffset": 557, "isbinaryop": [673, 674, 675, 676], "isbitcast": 636, "isbranch": [636, 637], "iscall": [636, 637], "iscodegenonly": 636, "iscommut": [636, 637], "iscompar": 636, "isconst": [466, 473, 609], "isconstantpoolindex": 646, "isconvergent": 636, "isconvertibletothreeaddress": [636, 637], "iscxxclass": 625, "isd": [467, 470, 483, 540, 541, 646], "isdeclar": 609, "isdef": 483, "isdefinit": [575, 579, 625], "isdig": [668, 669, 670, 671, 672, 673, 674, 675, 676], "isdopcod": [467, 483, 541], "isdoubl": 636, "isectcoff": 597, "isehscopereturn": 636, "isel": [483, 492, 529, 564, 580, 625, 635, 646], "iseldagtodag": 634, "isellowering": [470, 634], "isempty": 609, "isexternal": 625, "isexternalsymbol": 646, "isextractsubreg": 636, "isfirstclasstyp": 591, "isfloatingpointty": 609, "isfoo": 486, "isfunct": 625, "isglobaladdress": 646, "isgroup": 597, "isgrouping": 530, "ish": [673, 684], "isimm": 555, "isimmediat": 646, "isimplicitcod": 625, "isimplicitdef": 637, "isindirect": 585, "isindirectbranch": [636, 637], "isinlined": 625, "isinsertsubreg": 636, "isintegerty": 609, "isjumptableindex": 646, "island": 466, "islandingpad": 585, "islazy": 646, "isload": 483, "isloadfromstackslot": 646, "islocal": [575, 579, 625], "isloopinvari": 609, "islvalu": 486, "ismemoryfold": 636, "ismod": 636, "ismoveimm": 636, "ismovereg": 636, "isn": [468, 470, 478, 482, 483, 484, 486, 487, 518, 527, 531, 538, 543, 548, 560, 561, 570, 579, 585, 590, 607, 609, 621, 625, 627, 631, 632, 648, 668, 669, 670, 671, 672, 675, 676, 679, 680, 681, 682, 683], "isnotduplic": [636, 637], "isnull": 486, "isnullvalu": 591, "isobjcclass": 625, "isobviouslysafetofold": 557, "isol": [474, 513, 539, 654, 657], "isolat": [537, 579, 641], "isolated": [471, 481, 483, 533, 539, 579, 609, 630, 674, 685], "isolating": [477, 636], "isomorphic": 543, "isoperandimmequal": 557, "isoperator": [673, 674, 675, 676], "isopt": 530, "isoptimized": [575, 579, 625], "isosdarwin": 676, "ispacked": 473, "isphysicalregist": 483, "isphysreg": 609, "ispic": 646, "ispip": 466, "ispoint": 591, "ispointertyp": 486, "ispredic": [636, 637], "isprefix": 530, "ispreiselopcod": 636, "isprint": 581, "isproto": 473, "ispseudo": 636, "isref": 636, "isregist": 483, "isregsequent": 636, "isrematerializ": [636, 637], "isrequired": 647, "isrestrict": 466, "isreturn": [636, 637], "issafetospeculat": 630, "isselect": 636, "isselector": 597, "isset": 530, "issimpl": 470, "issized": 609, "isspac": [581, 668, 669, 670, 671, 672, 673, 674, 675, 676], "isstor": 483, "isstoretostackslot": 646, "isstrongerthan": 470, "issu": [461, 466, 470, 472, 476, 482, 483, 484, 485, 487, 491, 504, 515, 530, 531, 538, 542, 545, 546, 550, 560, 564, 566, 568, 572, 574, 579, 609, 611, 613, 622, 625, 626, 630, 632, 634, 641, 645, 652, 653, 671, 672, 674, 677, 679, 682, 683, 685, 686], "issued": [491, 513, 579], "issuedset": 513, "issuewidth": 513, "issuing": [550, 648], "istargetspecific": 585, "isterminator": [486, 636, 637], "istrap": 636, "istreambuf_iterator": 592, "istruncatingstor": 646, "isunaryop": [673, 674, 675, 676], "isunordered": 470, "isunpredic": 636, "isunpredicatedterminator": 646, "isus": 483, "isv9": 646, "isvalidsiz": 636, "isvalueunset": 635, "isvararg": 609, "isvectorized": 642, "isvis": 646, "isvolatil": [466, 579], "it": [41, 42, 48, 49, 54, 57, 58, 63, 66, 137, 138, 142, 143, 145, 147, 148, 152, 153, 231, 232, 238, 239, 240, 244, 248, 253, 254, 336, 342, 384, 385, 391, 392, 393, 397, 400, 401, 406, 409, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 509, 510, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688], "italic": 461, "itanium": [500, 501, 542, 546, 643], "itanium_abi_tripl": 641, "item": [461, 472, 473, 482, 497, 530, 540, 542, 545, 579, 581, 591, 609, 611, 614, 625, 630, 635, 636, 652, 674, 685], "iter": [477, 481, 483, 485, 486, 505, 513, 538, 559, 564, 581, 583, 584, 601, 607, 609, 616, 636, 645, 669, 672, 673, 674, 680, 681, 682, 683, 684, 685], "iterat": [469, 474, 482, 483, 486, 530, 564, 579, 582, 583, 584, 607, 609, 635, 646, 672, 683], "iterated": [481, 674, 685], "iterating": [486, 580, 583], "iteratively": [562, 678], "iterator": [483, 486, 530, 534, 547, 591, 635, 636, 646, 649, 652], "iterator_rang": 609, "ith": 609, "itinerar": [483, 646], "itinerary": [483, 636, 637, 646], "itself": [461, 468, 469, 472, 473, 481, 483, 486, 487, 488, 491, 499, 530, 534, 537, 538, 540, 541, 543, 545, 546, 547, 548, 550, 552, 555, 559, 569, 571, 573, 574, 578, 579, 581, 582, 583, 591, 601, 609, 611, 613, 614, 616, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 634, 635, 637, 641, 642, 647, 648, 652, 654, 655, 657, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686], "ity": [566, 636], "iuml": 483, "ivanovic": 614, "ivanovicdistinguish": 614, "ivar": 625, "j1": 639, "j2": 550, "j4": [569, 619], "jacqu": 531, "jagged": 601, "jaguar": 513, "jalu0": 513, "jalu01": 513, "jalu1": 513, "jam": [579, 614, 618], "jammed": [579, 616], "jamming": [579, 607], "jan": 616, "jann": 626, "jarv": 613, "jav": [470, 544, 547, 579, 607, 609, 630, 677, 686], "javascript": [579, 628, 677, 686], "jazz": 610, "jb_1": 625, "jd": [593, 614, 655, 657], "jd1": 593, "jd2": 593, "jdiv": 513, "jdo": [538, 608], "jeff": 631, "jess": 571, "jfpa": 513, "jfpm": 513, "jfpu0": 513, "jfpu01": 513, "jfpu1": 513, "jfpuprf": 513, "jg": 624, "jge": 516, "jingling": 616, "jingyu": 531, "jintegerprf": 513, "jit": [477, 481, 488, 493, 498, 538, 543, 547, 550, 552, 574, 579, 592, 593, 606, 628, 630, 653, 668, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686], "jit_dlclos": 593, "jit_dlopen": 593, "jitcompilecallbackmanag": 656, "jitcompilerfn": 646, "jitcompilerfunct": 646, "jitdylib": [654, 655, 656, 657], "jited": [536, 644], "jitevaluatedsymbol": [654, 655, 656, 657], "jiteventlistener": 593, "jitfailed": 593, "jiting": [593, 654, 656, 657], "jitlink": 593, "jitloadergdb": 536, "jitstack": 593, "jitsymbol": [654, 655, 656, 657], "jitsymbolflag": [593, 657], "jittargetaddress": 656, "jittargetmachinebuild": [654, 655, 656, 657], "jitted": [505, 609], "jlagu": 513, "jlsagu": 513, "jmp": [579, 626], "jmp_1": 625, "jmpq": 626, "jmul": 513, "jn": [568, 571], "jne": [483, 626], "jo": 537, "job": [481, 550, 573, 581, 590, 593, 631, 648, 655], "joerg": 611, "john": [486, 538, 608], "join": [466, 493, 549, 588, 609, 648, 650], "joined": [581, 609], "joining": [579, 583], "jok": 484, "jon": [614, 616], "jonathan2251": 687, "jonesdistinguish": 614, "josh": 623, "jour": 653, "journal": 616, "journey": [674, 685], "jpg": 581, "jsagu": 513, "json": [499, 504, 513, 529, 618, 637, 639], "jsonnrevnum": 611, "jstc": 513, "jtmb": [654, 655, 656, 657], "judg": [538, 626], "judging": 504, "juggl": 531, "juli": [593, 618], "july": [547, 611, 649], "jump": [465, 473, 480, 530, 534, 540, 542, 555, 574, 575, 579, 593, 610, 618, 626, 643, 646, 656, 672, 683], "jumped": 583, "jumping": [609, 646, 676], "jumptabl": [473, 579, 585], "jumpy": 575, "junip": 466, "junk": [680, 681, 682, 683, 684, 685], "jurisdict": 538, "just": [461, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 482, 483, 485, 486, 487, 489, 491, 493, 495, 497, 499, 502, 513, 514, 516, 517, 527, 530, 531, 534, 535, 538, 542, 543, 548, 550, 552, 553, 554, 558, 559, 565, 568, 571, 572, 573, 574, 575, 579, 581, 583, 585, 586, 588, 590, 591, 592, 593, 607, 608, 609, 610, 611, 612, 619, 624, 625, 626, 628, 630, 631, 634, 635, 636, 637, 639, 640, 641, 646, 647, 648, 649, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "justified": 632, "justify": 582, "justin": 563, "jvalu0": 513, "jvalu1": 513, "jvimul": 513, "jvm": [593, 677, 686], "jyknight": 611, "k": [465, 471, 483, 515, 526, 527, 530, 537, 573, 579, 583, 599, 626, 645, 655, 676], "kabin": 466, "kaleidoscop": [591, 593, 609, 654, 655, 656, 657, 678], "kaleidoscopeastlai": 657, "kaleidoscopeastmaterializationun": 657, "kaleidoscopej": [655, 656, 657, 671, 672, 673, 674, 676, 687], "kaver": 466, "kawahito": 483, "kb": [558, 622], "kd": 466, "kdtre": 613, "keep": [469, 483, 487, 506, 515, 526, 529, 530, 531, 534, 538, 539, 543, 547, 566, 573, 579, 582, 583, 585, 588, 589, 590, 591, 607, 609, 620, 622, 623, 625, 631, 632, 637, 641, 644, 648, 649, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 684, 685, 686], "keeping": [483, 579, 583, 607, 615, 616, 625, 645, 648, 670, 671, 676], "kel": 563, "kept": [466, 469, 534, 538, 580, 620, 621, 625, 648], "kern0": 466, "kern1": 466, "kernarg": 466, "kernarg_address": 466, "kernarg_segment_align": 466, "kernarg_segment_alignment": 466, "kernarg_segment_siz": 466, "kernarg_siz": 466, "kernargsegmentalign": 466, "kernargsegmentsiz": 466, "kernel": [470, 471, 483, 493, 513, 531, 539, 568, 579, 581, 613, 618, 626, 644, 645, 646, 677, 686], "kernel1": 466, "kernel_code_entry_byte_offset": 466, "kernel_param_0": 592, "kernel_param_1": 592, "kernel_param_2": 592, "kernelparam": 592, "kevin": 483, "key": [466, 473, 479, 483, 486, 504, 505, 538, 566, 573, 577, 579, 583, 585, 591, 593, 599, 602, 604, 609, 620, 623, 626, 630, 634, 637, 648], "keycol": 577, "keyring": 550, "keystrok": 486, "keyt": 609, "keytyp": [625, 634], "keyword": [469, 476, 483, 530, 533, 535, 546, 548, 579, 581, 614, 625, 634, 635, 636, 637, 641, 645, 648, 668, 672, 673, 674, 675, 676, 679, 683, 684, 685], "kib": 530, "kick": 538, "kill": [477, 488, 580, 585], "killall": 581, "killed": [483, 581, 585, 625, 648], "kind": [461, 463, 464, 465, 466, 470, 473, 475, 483, 484, 485, 486, 487, 491, 492, 495, 497, 529, 530, 535, 536, 540, 541, 543, 544, 546, 549, 572, 573, 575, 576, 579, 580, 581, 582, 585, 590, 591, 595, 596, 597, 604, 607, 609, 611, 621, 625, 626, 627, 628, 634, 636, 643, 650, 651, 654, 673, 674, 675, 676, 684, 685], "kistanov": 567, "klabnik": 623, "klaus": 611, "klimek": 608, "kmean": 613, "knock": 486, "know": [461, 466, 469, 470, 472, 476, 477, 481, 482, 483, 485, 486, 491, 513, 530, 533, 535, 536, 538, 543, 545, 547, 552, 553, 567, 573, 574, 579, 581, 582, 583, 586, 592, 601, 605, 608, 609, 611, 614, 621, 623, 625, 626, 627, 629, 630, 634, 641, 643, 645, 646, 648, 652, 655, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686], "knowing": [482, 483, 513, 534, 538, 540, 550, 552, 609, 623, 645, 673, 675, 684], "knowledg": [461, 473, 483, 485, 486, 535, 547, 579, 586, 587, 594, 605, 607, 627, 641, 642, 677, 686], "knowledge": 556, "known": [461, 466, 469, 470, 473, 481, 483, 486, 488, 495, 515, 531, 534, 537, 540, 545, 547, 548, 549, 550, 552, 564, 572, 573, 579, 592, 607, 609, 610, 614, 619, 624, 626, 630, 640, 641, 643, 646, 648, 652, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "knownbit": [558, 579], "knownsafevalu": 609, "koblenz": 616, "koch": 626, "komatsu": 483, "kripk": 613, "kristof": [614, 623], "kruskal": 613, "kryomodel": 646, "kryowrite_2cyc_xy_norsv_67ln": 646, "kryowrite_2cyc_xy_xy_150ln": 646, "krzysztof": 614, "ksdbginfo": 676, "kuck": 537, "kuhn": 537, "kw1": 581, "kw2": 581, "kw3": 581, "kwalify": 688, "kwd": [679, 680, 681, 682, 683, 684, 685], "l0": [461, 466, 516, 646], "l1": [461, 466, 483, 513, 646], "l10": 650, "l1d": 513, "l2": [466, 646], "l3": 646, "l4": 646, "l5": 646, "l6": 646, "l7": 646, "lA": 593, "lab": [549, 567], "label": [0, 2, 3, 4, 461, 465, 466, 473, 474, 483, 516, 534, 540, 542, 543, 544, 547, 575, 578, 583, 590, 591, 592, 607, 609, 625, 642, 646, 650, 672, 674, 683, 685], "label0": 579, "label_1": [49, 143, 240, 393], "label_2": [49, 143, 240, 393], "label_3": [49, 143, 240, 393], "label_4": [49, 143, 240, 393], "label_branch_weight": 475, "labeled": 533, "labelled": 579, "labeltyp": 609, "labf": 530, "labor": 530, "laborious": 609, "lack": [480, 483, 484, 513, 547, 548, 559, 579, 606, 622, 626, 632, 637, 682], "lacking": 579, "lad": 530, "laden": [677, 686], "laghos": 613, "lah": 639, "lahf": 626, "lai": [469, 546, 585, 593, 601, 612, 620, 654, 655, 656, 677, 686], "laid": [472, 483, 538, 579, 600, 601, 605, 609, 615, 682], "lakos": 486, "lambd": [466, 557, 593, 609, 614, 654], "lammp": 613, "lan": [461, 464, 554, 555, 614], "lanczos": 613, "land": [579, 630], "landed": 485, "landing": [534, 538, 540, 578, 579, 585, 623], "landingpad": [534, 540, 607], "landscap": 611, "lang": [479, 530, 614, 639], "langref": [467, 470, 541, 545, 583, 592, 615], "languag": [470, 481, 482, 483, 484, 485, 487, 492, 496, 503, 506, 510, 528, 530, 531, 532, 533, 534, 538, 539, 540, 542, 544, 546, 547, 548, 550, 551, 554, 556, 570, 575, 580, 581, 585, 592, 593, 607, 609, 612, 613, 616, 617, 618, 623, 628, 630, 634, 636, 637, 641, 645, 646, 651, 652, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 675, 676, 680, 681, 682], "language_vers": 466, "languagevers": 466, "larg": [461, 466, 470, 473, 477, 479, 481, 483, 485, 486, 488, 491, 493, 497, 505, 506, 513, 529, 530, 535, 537, 538, 539, 541, 542, 550, 553, 555, 559, 569, 572, 577, 578, 579, 581, 589, 590, 592, 593, 597, 599, 601, 605, 607, 609, 610, 612, 613, 614, 618, 622, 625, 628, 630, 634, 635, 636, 637, 639, 641, 645, 646, 649, 651, 656, 671, 682], "largeconst": 628, "largely": [531, 547, 554, 560, 566, 595, 646], "largest": [114, 201, 303, 460, 461, 464, 466, 483, 487, 489, 542, 545, 559, 579, 597], "last": [461, 464, 466, 470, 473, 475, 483, 486, 487, 491, 495, 507, 513, 530, 533, 534, 538, 540, 550, 552, 553, 572, 573, 575, 579, 583, 586, 590, 594, 601, 604, 608, 609, 611, 623, 627, 630, 636, 641, 642, 645, 646, 648, 651, 654, 668, 671, 673, 676, 681, 684], "lastchar": [668, 669, 670, 671, 672, 673, 674, 675, 676], "lastinst": 646, "lastly": [576, 641, 648, 676], "lastopc": 646, "lat": [461, 465, 466, 468, 470, 475, 480, 481, 482, 486, 487, 499, 534, 535, 538, 540, 545, 550, 552, 553, 559, 560, 579, 581, 584, 585, 586, 591, 601, 607, 608, 609, 610, 611, 616, 620, 622, 623, 625, 627, 628, 630, 632, 636, 641, 642, 646, 648, 649, 654, 669, 670, 671, 676, 678, 680, 681, 682, 683, 684, 685], "latch": [579, 583], "latenc": [483, 513, 650], "latency": [493, 505, 513, 579, 593, 626], "latest": [487, 489, 539, 550, 552, 563, 611, 618, 619, 639], "latt": [465, 470, 483, 534, 538, 559, 562, 579, 583, 591, 609, 614, 625, 630, 635, 642, 646, 669, 680], "lattn": [611, 614, 686], "lattneracronym": 614, "lattneragre": 614, "lattnerfunct": 614, "lattnerlow": 614, "lattnerrevnum": 611, "lattnertransit": 614, "launch": [479, 486, 531, 592, 656], "launched": [466, 592, 593], "launching": 592, "lav": 613, "lavamd": 613, "law": [486, 621], "lawi": 538, "lawsuit": 538, "lawyer": 538, "lay": [483, 486, 548, 579, 580, 609, 643, 676, 682, 683, 684, 685], "layer": [546, 593, 656, 657, 687], "layered": 486, "layering": [560, 611], "laying": 643, "layout": [472, 479, 481, 482, 517, 531, 533, 545, 547, 548, 551, 571, 593, 596, 597, 599, 602, 604, 611, 630, 646, 648, 651, 671, 675], "lazi": 655, "lazily": [473, 558, 582, 609, 654, 655, 656, 657, 682], "laziness": [469, 654, 656, 687], "lazy": [469, 516, 579, 593, 654, 655, 657, 671, 687], "lazycallthrough": [656, 657], "lazyemittinglai": 593, "lazyreexport": [593, 687], "lazyresolverfn": 646, "lb": [593, 614], "lbar": 483, "lbb0_1": [542, 626], "lbb0_2": [624, 626], "lbb0_3": 626, "lbb0_4": 626, "lbb0_5": 626, "lbb0_n": 626, "lbb_end0_0": 542, "lbb_end0_1": 542, "lbd": 687, "lbl": 613, "lbr": 505, "lc_id_dylib": 507, "lclang1": 611, "lclang2": 611, "lcov": 499, "lcovmap": 535, "lcpi0_0": 641, "lcssa": 580, "lcud": 592, "lcudart": 531, "lcudart_static": 531, "ld": [0, 2, 3, 4, 17, 40, 48, 114, 118, 136, 142, 201, 203, 230, 238, 303, 360, 383, 391, 460, 465, 466, 481, 530, 546, 550, 565, 568, 570, 592, 646], "ld64": [535, 594], "ld_preload": 622, "ldflag": [498, 565, 654, 655, 656, 657, 670, 671, 672, 673, 674, 675, 676], "ldl": 531, "ldm": 579, "ldpxi": 585, "ldpxpost": 585, "ldr": [542, 587, 637], "ldrd": 470, "ldrex": 470, "ldri": 646, "ldrr": 646, "lds_direct": [9, 11, 81, 82, 85, 93, 112, 163, 164, 166, 168, 180, 199, 267, 268, 271, 273, 301, 306, 311, 318, 319, 321, 346, 347, 350, 422, 423, 426, 428, 458], "lds_siz": 466, "ldststoreupd": 483, "lea": 626, "lead": [470, 482, 483, 486, 505, 530, 534, 538, 548, 556, 575, 579, 581, 583, 607, 609, 614, 625, 626, 629, 632, 656], "leader": 485, "leading": [487, 491, 500, 515, 516, 534, 548, 555, 565, 570, 579, 609, 614, 641, 652, 669, 676, 680], "leaf": [492, 540, 595, 630, 650], "leak": [491, 542, 547, 578, 579, 624, 626, 641, 679], "leaked": 626, "leaking": [547, 626], "leaksanitiz": 581, "leaky": 581, "leap": 608, "leaq": 624, "learn": [486, 550, 579, 581, 591, 608, 609, 647, 655], "learned": [586, 605, 627, 655, 674, 685], "learning": [484, 613, 614, 677, 686], "leary": 531, "least": [461, 466, 469, 470, 471, 472, 473, 479, 483, 485, 486, 491, 495, 505, 507, 511, 513, 516, 517, 519, 530, 534, 538, 540, 546, 554, 559, 568, 569, 571, 579, 581, 583, 588, 590, 595, 607, 609, 611, 614, 619, 623, 626, 628, 630, 634, 636, 646, 649, 651, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "leasur": 537, "leav": [461, 466, 471, 485, 491, 515, 526, 534, 538, 550, 565, 574, 579, 581, 583, 591, 592, 607, 608, 611, 616, 625, 626, 630, 646, 655], "leaving": [476, 478, 530, 534, 543, 547, 555, 579, 583, 593, 625], "leb": 535, "leb128": [461, 483, 492], "lectur": 142, "left": [461, 464, 465, 466, 473, 477, 482, 483, 486, 534, 538, 545, 553, 555, 566, 579, 583, 591, 607, 609, 618, 636, 637, 640, 645, 646, 652, 654, 669, 670, 672, 676, 680, 681, 683], "left_op": 579, "leftr": 591, "legacy": [473, 478, 481, 487, 547, 579, 593, 632, 642, 647, 648, 650, 654, 655, 656, 657, 671, 672, 673, 674, 675], "legacypassmanag": [648, 650, 655, 656, 657, 671, 672, 673, 674, 675, 676], "legal": [461, 466, 470, 483, 531, 538, 540, 541, 548, 555, 559, 561, 575, 579, 587, 590, 592, 595, 609, 616, 630, 641], "legalact": 646, "legalfor": 559, "legalforcartesianproduct": 559, "legalfortypeswithmemsiz": 559, "legalitypredicat": 559, "legalityquery": 559, "legaliz": [467, 541, 557, 560, 561, 564, 579, 615], "legalizeact": 646, "legalized": [467, 483, 541, 559, 560, 585], "legalizedag": [467, 541], "legalizemut": 559, "legalizeop": [467, 541], "legalizerhelpertest": 560, "legalizerinfo": 561, "legally": [483, 609, 616], "len": [579, 625], "len_control": 581, "length": [461, 466, 472, 473, 483, 491, 499, 501, 525, 530, 532, 535, 548, 579, 581, 595, 596, 597, 600, 601, 602, 604, 607, 609, 615, 623, 625, 626, 627, 630, 634, 635, 636, 641, 645, 681, 682, 683, 684, 685], "lengthen": 505, "less": [461, 465, 466, 471, 472, 473, 478, 483, 486, 487, 491, 499, 513, 530, 535, 538, 543, 545, 547, 550, 554, 555, 568, 578, 579, 581, 583, 586, 591, 604, 607, 609, 611, 614, 616, 619, 625, 630, 636, 637, 641, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "let": [468, 473, 478, 483, 486, 487, 518, 522, 530, 531, 533, 534, 535, 548, 554, 560, 567, 572, 573, 577, 579, 582, 583, 586, 590, 591, 592, 593, 601, 606, 608, 609, 611, 614, 621, 623, 625, 626, 627, 629, 630, 634, 637, 640, 646, 648, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "letitem": 636, "letlist": 636, "letter": [473, 530, 579], "letting": [487, 548, 574, 677, 686], "leukocyt": 613, "level": [461, 464, 466, 468, 469, 470, 473, 475, 476, 479, 481, 484, 487, 492, 497, 513, 516, 517, 521, 522, 531, 532, 533, 534, 536, 538, 540, 544, 545, 546, 547, 548, 550, 560, 562, 569, 578, 580, 583, 584, 590, 591, 592, 594, 601, 605, 609, 610, 611, 617, 628, 630, 632, 636, 640, 641, 642, 643, 644, 645, 646, 648, 649, 651, 652, 653, 654, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "leverag": [485, 540, 547, 550, 560, 609], "leveraged": 651, "leveraging": 538, "lex": [650, 669, 670, 671, 673, 674, 675, 676, 677, 678, 680, 681, 682, 684, 685, 686, 687], "lex_1_1_els": 466, "lex_1_1_end": 466, "lex_1_1_start": 466, "lex_1_1_then": 466, "lex_1_els": 466, "lex_1_end": 466, "lex_1_start": 466, "lex_1_then": 466, "lex_comment": [679, 680, 681, 682, 683, 684, 685], "lex_end": 466, "lex_ident": [679, 680, 681, 682, 683, 684, 685], "lex_numb": [679, 680, 681, 682, 683, 684, 685], "lex_start": 466, "lexed": 636, "lexer": 546, "lexical": [461, 483, 543, 579, 625, 630, 669, 676, 680], "lexicalblock": 676, "lexically": [461, 486, 636, 671, 682], "lexicographical": 591, "lexicographically": 486, "lexidentifi": [541, 650], "lexloc": 676, "lf_arglist": 604, "lf_array": 604, "lf_bitfield": 604, "lf_buildinfo": 604, "lf_class": 604, "lf_endprecomp": 604, "lf_enum": 604, "lf_fieldlist": 604, "lf_func_id": 604, "lf_interfac": 604, "lf_label": 604, "lf_methodlist": 604, "lf_mfunc_id": 604, "lf_mfunction": 604, "lf_modifi": 604, "lf_pad0": 596, "lf_point": 604, "lf_precomp": 604, "lf_procedur": 604, "lf_string_id": 604, "lf_structur": 604, "lf_substr_list": 604, "lf_typeserver2": [604, 625], "lf_udt_mod_src_lin": 604, "lf_udt_src_lin": 604, "lf_union": 604, "lf_vftabl": 604, "lf_vtshap": 604, "lfoo": 483, "lfunc1_end": 466, "lfunc_begin0": 542, "lfunc_beign0": 542, "lfunc_end0": 466, "lgkm_cnt": [114, 201, 303, 460], "lgkmcnt": [114, 201, 303, 460, 466], "lgkmcnt_sat": [114, 201, 303, 460], "lgtm": [533, 580, 608], "lh": [486, 579, 591, 609, 634, 639, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "lhs_val": [681, 682, 683, 684, 685], "lhse": [674, 675, 676], "li": [486, 530, 547, 579, 614, 628, 630, 648], "lib": [466, 467, 481, 483, 490, 497, 498, 509, 517, 521, 522, 530, 531, 539, 541, 542, 547, 552, 565, 566, 571, 581, 585, 591, 593, 609, 610, 611, 614, 620, 622, 625, 631, 634, 635, 644, 646, 647, 648, 654, 655, 656, 657, 670, 671, 672, 673, 674, 675, 676], "lib64": [481, 531, 550], "libb": 593, "libc": [481, 486, 501, 531, 536, 538, 540, 549, 550, 566, 570, 579, 581, 609, 622, 677, 686], "libcall": [559, 640], "libcallfor": 559, "libclang_rt": [569, 581, 649], "libclc": [481, 538, 611], "libcmt": 552, "libcud": 592, "libcxx": [479, 481, 550, 611, 614, 619], "libcxxab": [479, 481, 550, 611], "libd": 498, "libff": [481, 606], "libfil": 498, "libfoo": 593, "libfuzz": 546, "libgcc": [470, 540, 624], "libgcc1": 571, "libllvm": [479, 481, 550, 606, 609], "libllvmcor": 609, "liblto": [565, 614], "liblzm": 571, "libm": [670, 671, 681, 682], "libnam": [498, 648], "libomp": 619, "libopagent": 606, "libpartit": 542, "libpath": [508, 542], "libpfm": 481, "libpos": 530, "librar": [470, 471, 473, 479, 481, 482, 488, 490, 497, 498, 499, 514, 516, 517, 521, 522, 528, 530, 538, 539, 543, 549, 550, 552, 569, 570, 571, 574, 579, 581, 593, 607, 609, 612, 617, 625, 626, 631, 632, 646, 649, 654, 669, 670, 677, 680, 681, 686], "library": [461, 469, 470, 473, 481, 488, 490, 493, 495, 498, 499, 507, 509, 510, 516, 532, 538, 542, 543, 545, 546, 547, 548, 549, 552, 560, 566, 569, 570, 571, 582, 592, 594, 600, 607, 610, 617, 618, 620, 625, 636, 639, 641, 644, 645, 646, 650, 652, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 684, 686], "librarynam": [547, 610], "libremark": 620, "librt": 612, "libsampl": 610, "libscudo": 622, "libsfgcc1": 571, "libstdc": [481, 501, 531, 539, 540, 550, 571], "libsupport": 611, "libtinfo": 571, "libtool": 490, "libunwind": [479, 481, 540, 550, 611, 614], "libx": 509, "libxml": 581, "libxml2": [571, 581], "libxxx": 571, "libz": 579, "lic": 607, "licens": [486, 550, 572, 612, 648, 654, 655, 656, 657], "license": 538, "licensed": [538, 565], "licensing": [538, 613], "licm": [470, 545, 575, 580, 583, 609, 648], "lif": [505, 531, 538, 545, 549, 581, 589, 593], "lifelong": 653, "lifetim": [461, 483, 534, 538, 545, 547, 566, 589, 593, 609, 648, 649, 654, 656], "lift": 545, "lifted": [616, 623], "lifting": 655, "light": [486, 579], "lightly": [579, 612, 619, 654], "lightweight": [486, 491, 539, 609], "lik": [461, 466, 468, 469, 470, 473, 477, 479, 481, 483, 487, 493, 502, 505, 512, 513, 516, 517, 530, 531, 534, 535, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 550, 552, 554, 557, 558, 559, 560, 569, 571, 573, 575, 579, 581, 582, 583, 585, 586, 587, 590, 591, 593, 594, 595, 596, 601, 605, 607, 608, 611, 612, 613, 616, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 635, 636, 637, 639, 640, 641, 643, 646, 647, 648, 649, 650, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "likeliness": [475, 579], "likely": [461, 466, 470, 475, 477, 485, 531, 533, 538, 541, 545, 546, 548, 550, 553, 560, 568, 579, 581, 584, 592, 593, 597, 602, 606, 607, 609, 611, 614, 622, 626, 631, 634, 637, 640, 642, 645, 656], "likewis": [579, 635], "lim": [461, 466, 477, 485, 486, 488, 491, 513, 515, 517, 526, 530, 554, 559, 579, 581, 617, 621, 622, 623, 624, 625, 626, 628], "limit": [54, 87, 145, 173, 244, 277, 397, 432, 464, 466, 483, 495, 513, 530, 538, 542, 549, 550, 579, 581, 590, 595, 607, 609, 611, 626, 628, 636, 652, 676], "limited": [19, 120, 205, 362, 461, 464, 465, 466, 469, 470, 479, 483, 484, 513, 537, 538, 545, 547, 548, 550, 572, 576, 579, 597, 609, 611, 614, 625, 626, 632, 671, 673, 682, 684], "limiting": [461, 626, 672, 683], "lin": [468, 470, 477, 481, 482, 483, 486, 487, 488, 491, 492, 493, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 507, 509, 510, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 526, 527, 528, 529, 531, 535, 536, 538, 540, 542, 546, 547, 549, 550, 552, 565, 566, 570, 574, 575, 576, 579, 580, 581, 585, 586, 590, 593, 594, 597, 600, 605, 606, 609, 610, 611, 614, 618, 619, 620, 622, 625, 626, 627, 634, 635, 636, 637, 639, 640, 641, 644, 646, 648, 650, 652, 654, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "linaro": [568, 570], "linear": [461, 466, 469, 483, 486, 492, 493, 550, 553, 579, 597, 604, 609, 611, 648], "lineariz": [466, 548], "linearized": [466, 548, 609, 616], "linearscan": [483, 493, 648], "linebegin": 636, "lineend": 636, "lineno": 676, "ling": 630, "lingering": 485, "link": [49, 143, 240, 393, 461, 462, 463, 465, 466, 471, 477, 479, 480, 481, 483, 486, 488, 489, 490, 492, 498, 499, 508, 514, 515, 516, 521, 522, 526, 527, 528, 530, 538, 546, 547, 549, 551, 566, 570, 571, 572, 574, 580, 581, 586, 589, 591, 592, 593, 594, 595, 597, 602, 604, 606, 607, 608, 609, 610, 611, 618, 619, 621, 622, 625, 626, 630, 632, 633, 638, 639, 641, 643, 644, 646, 648, 649, 650, 654, 655, 669, 670, 671, 673, 675, 679, 681, 682, 683, 684, 685], "link_component": 610, "linkabl": [461, 466], "linkag": [473, 483, 502, 527, 545, 550, 566, 591, 592, 595, 609, 643, 670, 676, 681], "linkagenam": [575, 579], "linkagetyp": 609, "linkallcodegencomponent": 648, "linked": [461, 466, 469, 470, 481, 483, 489, 495, 499, 510, 514, 516, 528, 535, 538, 542, 546, 547, 550, 570, 571, 574, 579, 580, 581, 590, 591, 592, 597, 602, 609, 610, 622, 624, 625, 641, 648, 650, 656, 671, 682, 686], "linker": [486, 535, 542, 550, 579, 593, 620], "linkinfo": 605, "linking": [461, 477, 479, 481, 486, 489, 495, 498, 499, 530, 531, 546, 550, 571, 579, 581, 582, 593, 597, 602, 604, 609, 618, 622, 624, 627, 639, 643, 646, 648, 649, 673], "linkonc": [473, 550, 579, 592, 609], "linkonce_odr": [473, 535, 545, 579, 592], "linkonceanylinkag": 609, "linkonceodrlinkag": 609, "linpack": [639, 645], "lint": 614, "linux": [466, 470, 481, 483, 505, 519, 531, 536, 539, 540, 546, 550, 565, 566, 568, 569, 570, 571, 579, 581, 589, 593, 612, 618, 626, 628, 639, 641, 644, 649, 670, 671, 675], "lipo": [481, 490, 582], "liquid": 466, "lis": 483, "lisp": [547, 677, 686], "list": [239, 392, 465, 466, 468, 469, 470, 473, 475, 477, 478, 479, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 504, 505, 509, 515, 516, 517, 518, 521, 522, 523, 525, 528, 529, 533, 534, 535, 536, 538, 539, 540, 541, 543, 545, 546, 547, 550, 551, 553, 554, 556, 571, 572, 573, 574, 576, 577, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 599, 601, 602, 606, 607, 608, 610, 611, 614, 619, 620, 621, 622, 623, 624, 625, 628, 630, 632, 634, 635, 636, 637, 639, 641, 644, 645, 646, 648, 649, 650, 653, 654, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686], "list1": 636, "list2": 636, "list_nam": 482, "list_of_list": 482, "listconcat": 636, "listed": [466, 470, 481, 483, 486, 499, 507, 514, 523, 530, 533, 543, 547, 553, 559, 577, 579, 593, 609, 610, 611, 621, 630, 632, 636, 645, 648], "listfil": 509, "listing": [487, 489, 490, 495, 523, 530, 601, 609, 630, 646, 668, 679], "listsplat": 636, "lit": [468, 481, 487, 490, 552, 560, 569, 575, 610, 611, 625, 629, 632, 639, 641, 647], "lit_arg": 641, "lit_config": 491, "lit_filt": 491, "lit_num_shard": 491, "lit_opt": 491, "lit_run_shard": 491, "litconfig": 491, "literal": [9, 10, 11, 12, 81, 82, 83, 84, 86, 88, 93, 94, 163, 165, 170, 174, 177, 180, 181, 267, 268, 269, 270, 275, 278, 283, 318, 346, 422, 423, 424, 425, 430, 433, 438, 466, 473, 482, 486, 487, 494, 513, 529, 530, 544, 579, 585, 587, 609, 634, 652, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "literally": [473, 485, 530, 670, 681], "literatur": [483, 583], "lithium": 478, "litloc": 676, "littered": 538, "littl": [466, 472, 473, 483, 530, 537, 539, 543, 547, 548, 559, 560, 564, 568, 579, 583, 586, 591, 594, 605, 607, 609, 620, 625, 627, 631, 643, 646, 648, 651, 655, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 684, 685, 686], "littleaarch64": 515, "littlearm": 515, "littleriscv": 515, "litvalu": 473, "liv": [461, 466, 469, 472, 481, 486, 505, 531, 534, 540, 547, 550, 552, 556, 574, 578, 580, 582, 583, 588, 589, 607, 609, 616, 625, 626, 628, 630, 647, 648, 670, 671, 674, 681, 685], "live_begin": 547, "live_end": 547, "live_iterator": 547, "live_siz": 547, "livecount": 547, "livedebugvalu": 579, "livedebugvari": 625, "livein": [505, 585, 625], "liveinterval": [483, 493], "liveintervalanalys": 483, "liveliness": 505, "liveness": [583, 607, 630], "liveoffset": 547, "liveonentry": 590, "liveout": [628, 630], "living": 579, "livr": 653, "ljti0_0": 626, "lkern0_end": 466, "lkern1_end": 466, "ll": [470, 477, 478, 482, 483, 486, 487, 488, 490, 492, 496, 502, 503, 528, 530, 531, 533, 536, 538, 541, 543, 545, 546, 547, 548, 550, 552, 553, 554, 559, 560, 567, 568, 569, 570, 571, 572, 573, 575, 579, 583, 585, 590, 592, 594, 607, 608, 609, 611, 618, 619, 621, 623, 625, 630, 631, 641, 647, 648, 649, 650, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686], "llazyjitbuild": 593, "llbuild": 685, "llc": [477, 483, 487, 488, 490, 493, 544, 546, 547, 550, 552, 569, 574, 575, 579, 585, 592, 594, 620, 625, 630, 641, 646, 648, 650, 675], "lld": [466, 481, 486, 508, 550, 569, 570, 594, 611, 614, 618, 620], "lldb": [481, 486, 538, 550, 588, 593, 609, 611, 614, 625, 632], "llgo": 611, "lli": [488, 490, 492, 536, 550, 552, 574, 594, 648], "llibnam": 530, "lljitbuild": 593, "lljitexampl": 593, "lljitwithlazyreexport": 593, "lllazyjitbuild": 593, "llld1": 611, "llld2": 611, "lllex": [541, 650], "lllvm1": 611, "lllvm2": 611, "llnl": 613, "llocat": 566, "llpars": [541, 650], "llt": 554, "lltok": 541, "llvalu": [681, 682, 683, 684, 685], "llvm": [461, 467, 468, 480, 487, 488, 489, 530, 531, 536, 544, 545, 549, 551, 555, 556, 558, 559, 560, 561, 563, 564, 566, 570, 576, 578, 584, 585, 586, 589, 591, 593, 594, 595, 596, 597, 601, 602, 604, 605, 608, 613, 614, 619, 621, 622, 626, 627, 635, 636, 637, 639, 640, 642, 643, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 673, 675, 676, 679, 680, 684], "llvm1": 611, "llvm2": 611, "llvm_": [482, 648], "llvm_abi_breaking_check": 481, "llvm_addr2line_opt": 494, "llvm_addrsig": 523, "llvm_all_target": [550, 646], "llvm_analys": [681, 682, 683, 684, 685], "llvm_analysis_utils_local_h": 486, "llvm_any": 541, "llvm_any_ty": 635, "llvm_append_vc_rev": 481, "llvm_attribute_weak": 648, "llvm_bb_addr_map": 542, "llvm_build_32_bit": 481, "llvm_build_benchmark": 481, "llvm_build_d": 550, "llvm_build_doc": 481, "llvm_build_exampl": 481, "llvm_build_instrumented_coverag": 481, "llvm_build_llvm_dylib": [479, 481, 550], "llvm_build_root": 481, "llvm_build_test": 481, "llvm_build_tool": 481, "llvm_ccache_build": 481, "llvm_ccache_d": 481, "llvm_ccache_maxsiz": 481, "llvm_cmake_d": 481, "llvm_compiler_job": 481, "llvm_create_xcode_toolchain": 481, "llvm_debug": [477, 528, 530], "llvm_definit": 481, "llvm_dependent_librar": 542, "llvm_dir": [481, 591], "llvm_distribution_component": 479, "llvm_doxygen_qch_filenam": 481, "llvm_doxygen_qhelpgenerator_path": 481, "llvm_doxygen_qhp_cust_filter_nam": 481, "llvm_doxygen_qhp_namespac": 481, "llvm_doxygen_svg": 481, "llvm_dylib_component": [479, 481, 550], "llvm_enable_abi_breaking_check": 609, "llvm_enable_assert": [481, 609], "llvm_enable_binding": 481, "llvm_enable_dia_sdk": 481, "llvm_enable_doxygen": [481, 550], "llvm_enable_doxygen_qt_help": 481, "llvm_enable_eh": 481, "llvm_enable_expensive_check": 481, "llvm_enable_ff": 481, "llvm_enable_id": 481, "llvm_enable_libcxx": 481, "llvm_enable_libpfm": 481, "llvm_enable_lld": 481, "llvm_enable_lto": [479, 481], "llvm_enable_modul": 481, "llvm_enable_pedantic": 481, "llvm_enable_pic": 481, "llvm_enable_project": [479, 481, 550, 641], "llvm_enable_rtt": 481, "llvm_enable_runtim": 479, "llvm_enable_sphinx": [481, 550], "llvm_enable_thread": 481, "llvm_enable_unwind_t": 481, "llvm_enable_warning": 481, "llvm_enable_werror": 481, "llvm_enable_z3_solv": 481, "llvm_enable_zlib": 481, "llvm_executionengin": [682, 683, 684, 685], "llvm_executionengine_orc_kaleidoscopejit_h": [654, 655, 656, 657], "llvm_external_": 481, "llvm_external_project": 481, "llvm_externalize_debuginfo": 481, "llvm_force_use_old_toolchain": 481, "llvm_gc_root_chain": 547, "llvm_gcc_dir": 640, "llvm_include_benchmark": 481, "llvm_include_dir": 481, "llvm_include_exampl": 481, "llvm_include_test": 481, "llvm_include_tool": 481, "llvm_install_binutils_symlink": 481, "llvm_install_cctools_symlink": 481, "llvm_install_doxygen_html_d": 481, "llvm_install_ocamldoc_html_d": 481, "llvm_install_sphinx_html_d": 481, "llvm_install_toolchain_only": 479, "llvm_install_util": 481, "llvm_integrated_crt_alloc": 481, "llvm_lib": 481, "llvm_libdir_suffix": 481, "llvm_library_visibility": 547, "llvm_link_llvm_dylib": [479, 481], "llvm_linker_opt": 542, "llvm_lit_arg": 481, "llvm_lit_tools_d": [481, 552], "llvm_map_components_to_libnam": 481, "llvm_map_components_to_librar": 481, "llvm_obj_root": [610, 640, 641], "llvm_on_unix": 631, "llvm_on_xyz": 631, "llvm_optimized_tablegen": [481, 550], "llvm_package_vers": 481, "llvm_parallel_compile_job": 481, "llvm_parallel_link_job": 481, "llvm_profdata_fil": [468, 481], "llvm_project": 593, "llvm_reverse_iter": 481, "llvm_revis": 481, "llvm_runtime_distribution_component": 479, "llvm_scalar_opt": [682, 683, 684, 685], "llvm_site_config": [552, 641], "llvm_source_prefix": 481, "llvm_src_dir": 568, "llvm_src_root": [610, 640], "llvm_stackmap": 628, "llvm_static_link_cxx_stdlib": 481, "llvm_symbolizer_opt": [494, 527], "llvm_sympart": 542, "llvm_tablegen": 481, "llvm_target": [682, 683, 684, 685], "llvm_target_arch": 481, "llvm_target_definit": 646, "llvm_targets_to_build": [479, 481, 539, 550, 552], "llvm_temporarily_allow_old_toolchain": 481, "llvm_tools_binary_d": 481, "llvm_transforms_hellonew_helloworld_h": 647, "llvm_tripl": 505, "llvm_ubsan_flag": 481, "llvm_unreach": [486, 591, 609, 657], "llvm_use_crt_": 481, "llvm_use_intel_jitevent": 481, "llvm_use_link": 481, "llvm_use_newpm": 481, "llvm_use_oprofil": 481, "llvm_use_perf": 481, "llvm_use_relative_paths_in_debug_info": 481, "llvm_use_relative_paths_in_fil": 481, "llvm_use_sanitiz": 481, "llvm_yaml_is_document_list_vector": 652, "llvm_yaml_is_flow_sequence_vector": 652, "llvm_yaml_is_sequence_vector": 652, "llvm_yaml_strong_typedef": 652, "llvmanalys": 610, "llvmasmpars": 610, "llvmbb": 549, "llvmbc": 473, "llvmbitcod": 541, "llvmbitread": 610, "llvmbuild": [618, 682], "llvmcfiverify": 480, "llvmconfig": 481, "llvmcontext": [579, 593, 594, 620, 650, 654, 655, 656, 657, 670, 671, 672, 673, 674, 675, 676], "llvmcontextimpl": 650, "llvmcor": [572, 610, 619], "llvmcreatedisasm": 587, "llvmcreatesimplemcjitmemorymanag": 628, "llvmdevmeeting": 563, "llvmdisasminstruct": 587, "llvmdisassembler_option_usemarkup": 587, "llvmdummy": 646, "llvmdummyasmprint": 646, "llvmdummycodegen": 646, "llvmfoldingbuild": 682, "llvmfuzzerinitializ": 581, "llvmfuzzerrundriv": 581, "llvmfuzzertestoneinput": 581, "llvmgccdir": 640, "llvmgetpassplugininfo": 648, "llvmgettypekind": 541, "llvmgold": 565, "llvmgrep": 550, "llvmhello": 648, "llvmhelloworld": 647, "llvminitializesparcasmprint": 646, "llvminitializesparctargetinfo": 646, "llvmir": 529, "llvmlab": 611, "llvmlib": 610, "llvmlibthin": 508, "llvmmemorymanagerallocatedatasectioncallback": 628, "llvmnam": 635, "llvmorg": [550, 572, 588, 611], "llvmpassnam": 481, "llvmpush": 611, "llvmremarkentrydispos": 620, "llvmremarkentryref": 620, "llvmremarkparsercreateyaml": 620, "llvmremarkparserdispos": 620, "llvmremarkparsergetnext": 620, "llvmremarkparserhaserror": 620, "llvmremarkparserref": 620, "llvmrock": 486, "llvmscalaropt": 610, "llvmsetdisasmopt": 587, "llvmsupport": [550, 610], "llvmtarget": 610, "llvmtargetmachin": 646, "llvmtop": 648, "llvmtransformutil": 610, "llvmtyp": 635, "llvmtypekind": 541, "llvmtyperef": 541, "llvmweekly": 588, "lma": [516, 650], "lmalloc": 530, "lmas": 516, "lmerg": 611, "lmyproj1": 611, "ln": [483, 550, 565, 568, 571], "lnt": [571, 611, 619], "lo": [466, 554, 579], "lo12": [542, 618], "lo16": 483, "load": [43, 44, 45, 139, 140, 233, 234, 235, 386, 387, 388, 461, 464, 466, 469, 470, 472, 473, 477, 481, 486, 487, 488, 491, 492, 493, 495, 502, 515, 517, 522, 528, 534, 536, 540, 544, 547, 548, 550, 555, 559, 562, 574, 575, 580, 583, 585, 587, 590, 591, 592, 593, 599, 607, 609, 611, 615, 616, 617, 618, 625, 628, 629, 630, 641, 643, 646, 648, 650, 671, 674, 675, 676, 685], "loadabl": [515, 547], "loadable_modul": 547, "loaded": [461, 469, 470, 472, 481, 483, 488, 491, 517, 518, 528, 530, 542, 554, 555, 559, 560, 579, 581, 582, 584, 592, 593, 607, 622, 628, 630, 646, 649, 650], "loaded1": 625, "loaded2": 625, "loading": [466, 471, 472, 483, 487, 538, 544, 545, 547, 566, 579, 583, 592, 593, 626, 646, 648, 649], "loadinst": 486, "loadlal": 579, "loadlibrarypermanently": 656, "loadmodul": 593, "loadmoduleoncontext": 593, "loadobject": 584, "loadregfromaddr": 646, "loadregfromstackslot": [483, 646], "loadsdnod": 609, "loc": [504, 542, 590, 625, 630, 646, 676], "loc0": 628, "loc1": 628, "local": [461, 466, 469, 473, 474, 483, 486, 487, 492, 493, 499, 502, 504, 509, 512, 514, 515, 516, 526, 530, 531, 540, 543, 568, 570, 575, 580, 584, 585, 589, 591, 592, 595, 607, 608, 614, 616, 618, 622, 625, 626, 629, 630, 632, 634, 636, 641, 644, 648, 652, 670, 671, 678, 679, 681, 682], "local_buff": 626, "local_release_x": 611, "local_unnamed_addr": [473, 542, 579], "localaddress": 579, "localdynamic": [473, 579], "localescap": 540, "localexec": [473, 579], "locality": [486, 547, 579, 609], "localiz": [515, 556], "localized": [538, 625], "locally": [486, 534, 550, 569, 611, 632], "localrecov": 540, "localrepo": 611, "locat": [19, 50, 63, 120, 152, 205, 253, 304, 309, 314, 337, 362, 406, 464, 466, 469, 470, 481, 483, 486, 489, 490, 491, 494, 495, 516, 517, 530, 531, 535, 536, 540, 542, 544, 545, 547, 548, 556, 571, 574, 579, 580, 584, 587, 590, 592, 595, 607, 609, 610, 617, 619, 620, 621, 628, 630, 635, 645, 646, 652, 673, 674, 684, 685], "located": [461, 479, 483, 491, 513, 535, 547, 549, 550, 579, 581, 584, 585, 602, 622, 627, 628, 631, 641, 646], "locating": 527, "lock": [470, 481, 579, 593, 609, 611], "locked": [545, 593], "locking": [470, 593, 609, 622, 648], "lockstep": 611, "loclist": [461, 504], "loclistproc": 461, "loclistsptr": 461, "loclistsptrproc": 461, "locstat": 490, "lod": 464, "lodg": 593, "log": [467, 469, 477, 487, 491, 538, 550, 553, 575, 581, 593, 604, 607, 608, 609, 611, 626, 640, 645, 649, 650, 655], "log10": 645, "log2": 645, "log_arg1": 649, "log_detailed": 593, "log_fast": 593, "logarithm": [473, 579], "logarithmic": 609, "logcount": 597, "logerror": [669, 670, 671, 672, 673, 674, 675, 676], "logerrorp": [669, 670, 671, 672, 673, 674, 675, 676], "logerrorv": [670, 671, 672, 673, 674, 675, 676], "logfil": 649, "logg": [467, 621], "logged": 651, "logging": [581, 609, 649, 651], "logic": [483, 486, 491, 513, 534, 557, 573, 591, 616, 626, 654, 669, 672, 673, 674, 681, 683, 684, 685], "logical": [465, 466, 483, 487, 535, 538, 579, 583, 591, 597, 607, 609, 636, 673, 684], "logically": [483, 538, 548, 579, 636], "long": [461, 466, 468, 469, 470, 475, 476, 477, 478, 479, 482, 483, 485, 486, 488, 491, 497, 499, 513, 518, 529, 531, 532, 538, 540, 542, 543, 545, 546, 547, 548, 550, 553, 555, 556, 560, 566, 569, 572, 573, 576, 579, 581, 586, 589, 593, 601, 605, 607, 608, 609, 610, 611, 618, 619, 621, 623, 625, 626, 627, 630, 631, 632, 641, 646, 648, 652, 655, 670, 671, 674, 677, 681, 685, 686], "longjmp": [579, 677, 686], "look": [467, 469, 470, 473, 481, 482, 483, 485, 486, 487, 504, 513, 517, 525, 527, 530, 533, 534, 536, 538, 540, 541, 547, 548, 550, 552, 553, 554, 559, 565, 573, 579, 580, 585, 586, 588, 591, 592, 593, 594, 597, 601, 602, 607, 608, 609, 610, 611, 614, 618, 620, 624, 625, 626, 627, 628, 630, 634, 635, 641, 643, 644, 646, 648, 650, 651, 652, 654, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685, 686], "looked": [542, 579, 593, 609, 636, 654], "looking": [469, 481, 486, 487, 491, 504, 513, 530, 531, 535, 541, 542, 572, 582, 583, 588, 590, 591, 605, 607, 608, 609, 611, 612, 625, 626, 630, 634, 636, 647, 649, 652, 669, 670, 671, 672, 673, 674, 675, 676, 682, 685], "lookup": [486, 504, 527, 550, 579, 591, 593, 595, 604, 605, 607, 609, 634, 636, 646, 651, 654, 655, 656, 657, 670, 671, 672, 673, 674, 677, 681, 684, 685, 686], "lookup_funct": [681, 682, 683, 684, 685], "lookupatablebyvalu": [634, 635], "lookupcentry": 634, "lookupcentrybyencoding": 634, "lookupcentrybynam": 634, "lookuptarget": 675, "loooong": 611, "loop": [466, 469, 470, 483, 487, 505, 513, 531, 534, 537, 545, 547, 549, 550, 559, 575, 580, 581, 590, 591, 594, 609, 616, 618, 630, 636, 639, 641, 644, 646, 649, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686], "loop_bb": [683, 684, 685], "loop_end_bb": [683, 684, 685], "loop_header_weight": 579, "loopanalys": 537, "loopbb": [672, 673, 674, 675, 676], "loopcond": [672, 673, 674, 675, 676, 683, 684, 685], "loopdistribu": 642, "loopdistribut": 642, "loopend": [672, 673, 674, 675, 676, 685], "loopendbb": [672, 673, 674, 675, 676], "loopfullunroll": 642, "loophead": [579, 672, 673], "loopid": 642, "loopidiomrecognizepass": 618, "loopinfo": [614, 648], "loopinfobas": 609, "loopinfowrapperpass": 648, "looping": [469, 483, 583], "loopinterchang": 642, "looppass": [583, 594], "looppassmanag": 583, "looprerolling": 639, "looprot": 583, "looprotat": 583, "loopsimplify": 583, "loopsink": 618, "loopstrengthreduc": 618, "loopunroll": 642, "loopunrollandjam": 642, "loopunswitch": [545, 607], "looputil": 648, "loopvectoriz": [616, 642], "loopvectorizationplann": 616, "loos": 554, "loosely": 637, "lor": 468, "los": [625, 648, 677, 686], "losing": [564, 611, 626, 634], "loss": [465, 547, 575, 609, 611, 626], "losslessly": 591, "lost": [465, 540, 543, 575, 579, 625, 626, 642, 677, 686], "lot": [468, 477, 478, 482, 483, 486, 530, 538, 541, 543, 547, 548, 550, 554, 560, 568, 573, 576, 579, 585, 606, 607, 609, 611, 618, 625, 626, 637, 640, 646, 648, 649, 652, 656, 669, 670, 671, 673, 674, 676, 677, 679, 680, 681, 682, 684, 685, 686], "loved": 609, "low": [60, 114, 221, 233, 235, 250, 403, 460, 461, 464, 465, 466, 469, 470, 471, 473, 483, 497, 513, 514, 517, 521, 522, 530, 531, 534, 541, 543, 545, 547, 548, 549, 550, 555, 556, 559, 561, 562, 566, 579, 585, 589, 591, 592, 593, 601, 604, 609, 614, 615, 616, 622, 626, 630, 631, 632, 635, 636, 645, 646, 651, 669, 673, 674, 680, 684, 685], "lower": [483, 534, 559, 579, 607, 628, 630], "lower16": 542, "lower_bound": [609, 634], "lower_cas": 614, "loweralloc": 648, "lowerbound": 579, "lowercall": 650, "lowercas": [646, 671, 682], "lowercasemod": 635, "lowered": [472, 483, 534, 547, 548, 555, 556, 559, 579, 628, 630, 677, 686], "lowerfor": 559, "lowerfp_to_sint": 646, "lowering": [470, 483, 529, 540, 541, 556, 559, 578, 614, 634, 646, 674, 685], "loweroper": 646, "lowertypetest": 643, "lowest": [461, 466, 470, 472, 535, 555, 579, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "lpa": 470, "lpad": [534, 540, 579], "lpc": 461, "lpc0": 585, "lpechacek": 471, "lpm": 648, "lq": 513, "lqueu": 513, "lr": [483, 579, 585], "lrt": 531, "ls": [530, 579, 622], "lsampl": 610, "lsan": 618, "lsb": [147, 483, 651], "lsb_extract": 579, "lsda": 580, "lse": 470, "lsl": 542, "lsun": 513, "lt": [495, 499, 538, 550, 592, 636], "ltmp": 542, "ltmp1": [585, 630], "lto": [473, 479, 534, 580, 582, 594, 620, 642, 643], "lto2": 579, "lto_codegen_add_modul": 582, "lto_codegen_add_must_preserve_symbol": 582, "lto_codegen_compil": 582, "lto_codegen_creat": 582, "lto_codegen_set_debug_model": 582, "lto_codegen_set_pic_model": 582, "lto_module_creat": 582, "lto_module_create_from_memory": 582, "lto_module_dispos": 582, "lto_module_get_macho_cputyp": 582, "lto_module_get_num_symbol": 582, "lto_module_get_symbol_attribut": 582, "lto_module_get_symbol_nam": 582, "lto_module_is_object_fil": 582, "lto_module_is_object_file_for_target": 582, "lto_module_is_object_file_in_memory": 582, "lto_module_is_object_file_in_memory_for_target": 582, "ltopostlink": 579, "lu": 547, "luckily": 547, "lud": 613, "lumped": 635, "lv": [591, 615], "lvalu": 609, "lvaluereferent": 596, "lvaluerefthispoint": 596, "lvl": [614, 650], "lvm": 676, "lwe": [0, 2, 3, 4], "lying": 580, "lz": 579, "m0": [9, 10, 11, 12, 55, 56, 57, 73, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 146, 157, 163, 164, 165, 166, 167, 168, 169, 174, 175, 177, 178, 179, 180, 245, 246, 247, 261, 267, 268, 269, 270, 271, 272, 273, 274, 278, 280, 281, 282, 306, 307, 311, 312, 318, 319, 320, 321, 322, 341, 346, 347, 348, 350, 351, 398, 399, 400, 416, 422, 423, 424, 425, 426, 427, 428, 429, 433, 435, 436, 437], "m1": [579, 593, 611], "m2": [579, 593], "m35qpb": 650, "m3writenmisc1": 646, "m64": 539, "m7170": 466, "m_": 614, "m_func": 609, "m_op_sel": [0, 5, 6, 7, 8, 50, 304, 309, 314, 337], "m_op_sel_h": [0, 5, 6, 7, 8, 50, 304, 309, 314, 337, 462], "mab": 618, "mac": 486, "mach": [473, 500, 507, 511, 515, 523, 532, 579], "mach_universal_binary": 527, "machin": [461, 466, 472, 480, 481, 487, 490, 491, 492, 495, 499, 504, 508, 529, 531, 536, 538, 539, 547, 550, 552, 553, 557, 559, 564, 567, 568, 570, 571, 575, 579, 580, 581, 584, 591, 592, 593, 597, 609, 611, 614, 617, 618, 625, 634, 636, 639, 644, 645, 648, 651, 671, 676, 677, 682, 686, 688], "machine_model": 466, "machinebasicblock": [585, 609, 646], "machineblockfrequencyinfo": 474, "machinecodeemitt": 646, "machineconstantpool": [483, 585], "machineconstantpoolvalu": 585, "machineframeinfo": 483, "machinefunct": [556, 557, 558, 562, 585, 609, 614, 625], "machinefunctioninfo": [483, 585], "machinefunctionpass": [594, 646, 650], "machineinstr": [544, 554, 556, 557, 558, 614, 634, 641, 646], "machineinstrbuild": 554, "machineir": 554, "machineirbuild": 554, "machinememoperand": [470, 555, 559], "machinemoduleinfo": 585, "machineoperand": [483, 555, 614, 646], "machinepassregistry": 648, "machinepassregistrynod": 648, "machineregisterinfo": [483, 554, 564, 614], "machinery": [573, 640], "machinesink": 618, "macho": [473, 483, 492, 515, 516, 522, 523, 584, 593, 620, 628], "macho2": 523, "machoobjectfil": 609, "macinfo": 579, "macos": [481, 531, 536, 550, 581, 594, 609, 619, 639, 641, 648], "macosx10": 579, "macosx_deployment_target": 619, "macport": 606, "macro": [481, 482, 486, 491, 499, 504, 528, 529, 530, 531, 535, 579, 581, 634, 636, 646, 648, 652, 671, 682], "macronam": [529, 636], "macros": [486, 499, 530, 531, 535, 540, 579, 609, 634, 637, 646], "mad": [461, 466, 469, 472, 473, 476, 480, 483, 486, 531, 537, 538, 540, 543, 544, 545, 548, 549, 566, 569, 572, 573, 579, 585, 586, 590, 591, 593, 596, 607, 609, 610, 611, 614, 618, 620, 622, 623, 624, 625, 626, 630, 632, 634, 637, 643, 648, 652, 671, 672, 674, 677, 683, 685, 686], "mag": 579, "magic": [550, 579, 581, 601, 609, 620, 625, 673, 684], "magically": 470, "magnif": [668, 673, 679, 684], "magnitud": [481, 555, 579], "mail": [533, 538, 550, 567, 586, 608], "mailed": [546, 586], "mailing": [484, 485, 533, 538, 546, 572, 580, 581, 588, 608, 610, 618, 619, 621, 623, 630, 632, 649, 650, 653, 677, 686], "main": [461, 472, 474, 476, 478, 479, 481, 483, 486, 499, 505, 513, 515, 521, 522, 525, 527, 530, 534, 535, 536, 537, 538, 540, 546, 549, 550, 551, 552, 553, 554, 558, 560, 565, 566, 567, 570, 572, 578, 579, 581, 582, 583, 586, 590, 592, 593, 607, 608, 609, 611, 614, 618, 620, 625, 627, 632, 635, 636, 637, 641, 643, 644, 646, 648, 649, 650, 653, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686], "main_loop": [680, 681, 682, 683, 684, 685], "mainjd": [593, 654, 655, 656, 657], "mainlin": [536, 538, 572, 611], "mainloop": [669, 670, 671, 672, 673, 674, 675, 676], "mainly": [478, 513, 531, 537, 554, 579, 583, 591, 610, 634], "mainsym": 593, "mainsymbolnam": 593, "maintain": [461, 466, 469, 470, 473, 478, 483, 485, 486, 487, 495, 530, 538, 539, 541, 547, 559, 572, 579, 591, 593, 599, 601, 609, 611, 614, 623, 628, 632, 635, 636, 637, 648, 651], "maintainability": [482, 485, 486, 538], "maintained": [473, 476, 481, 483, 533, 534, 538, 579, 611, 625, 631, 632], "maintainer": [531, 538, 579, 614], "maintaining": [469, 547, 609, 611, 622, 632], "mainten": [486, 538, 577, 582, 632], "maj": 619, "major": [461, 469, 483, 485, 486, 540, 543, 545, 550, 552, 561, 564, 572, 583, 591, 595, 597, 606, 607, 609, 611, 612, 616, 618, 625, 637, 641, 646, 674, 685], "major_vers": 466, "majority": [466, 487, 535, 538, 540, 560, 566, 593, 594, 623, 625, 632], "majorvers": 597, "mak": [461, 466, 467, 468, 469, 470, 472, 473, 476, 477, 478, 481, 482, 483, 484, 487, 488, 491, 492, 494, 495, 498, 499, 505, 512, 513, 515, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 545, 546, 547, 548, 550, 552, 553, 555, 558, 559, 560, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 578, 579, 580, 581, 583, 586, 588, 590, 591, 592, 593, 594, 597, 604, 606, 607, 608, 609, 610, 611, 612, 614, 617, 619, 621, 622, 623, 625, 627, 628, 629, 630, 631, 634, 635, 636, 637, 639, 640, 641, 642, 645, 646, 647, 648, 650, 651, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "make_error": 609, "make_error_cod": 609, "make_fallible_end": 609, "make_fallible_itr": 609, "make_pair": [591, 674, 675, 676], "make_rang": 609, "make_shared": [654, 655, 656, 657], "make_un": [593, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676], "makearrayref": 634, "makefil": [481, 483, 498, 547, 549, 550, 574, 582, 641, 669, 670, 681], "makelight": 486, "makestruct": 531, "maketir": 486, "makeup": 609, "makevehicl": 486, "making": [461, 464, 466, 478, 480, 483, 485, 486, 515, 531, 540, 544, 547, 548, 549, 551, 559, 579, 582, 593, 607, 608, 611, 616, 623, 625, 626, 630, 632, 637, 639, 641, 650, 652, 654, 655, 671, 677, 686], "malformed": [477, 531, 581, 604, 607, 609], "malicious": [623, 626], "maliciously": 623, "malloc": [534, 547, 566, 581, 589, 609, 617, 622, 648, 677, 686], "malloc_limit_mb": 581, "mallocbench": 640, "malyutin": 614, "malyutindistinguish": 614, "man": [481, 530, 617, 641], "manag": [466, 481, 487, 488, 513, 533, 543, 546, 547, 550, 552, 566, 567, 572, 580, 584, 592, 594, 609, 619, 623, 628, 642, 644, 646, 647, 648, 654, 655, 656, 657, 671, 672, 673, 674, 677, 686], "manage": [477, 623], "managed": [461, 466, 484, 543, 544, 548, 566, 579, 580, 630, 654, 655, 674, 685], "manager": [531, 572, 583, 594, 632, 647], "managing": 466, "mandat": [483, 611], "mandated": 579, "mandatory": [464, 487, 545, 552, 554, 559, 579, 609, 620, 646], "mandel": [673, 684], "mandelbrot": [668, 673, 679, 684], "mandelconverg": [673, 684], "mandelhelp": [673, 684], "mangl": [538, 593, 646, 654, 655, 656, 657], "mangleandintern": [593, 654, 655, 656, 657], "mangled": [490, 500, 516, 527, 579, 595, 620, 625, 654], "manglednamestream": 656, "mangling": [487, 500, 501, 579, 593, 595, 654], "manifest": 579, "manifesto": 538, "manipul": [486, 589, 609, 632, 643], "manipulat": [461, 466, 483, 490, 507, 515, 517, 534, 543, 609, 622, 674, 685], "manipulated": [534, 576], "manipulating": [490, 495, 609, 616], "mann": [461, 464, 466, 470, 483, 487, 495, 535, 538, 540, 548, 579, 585, 590, 593, 594, 609, 612, 626, 630, 632, 636, 646], "manner": 484, "manpag": 482, "manual": [466, 480, 481, 483, 486, 528, 533, 545, 547, 550, 551, 556, 573, 605, 617, 626, 635, 639, 641, 644, 645, 646, 648, 654, 686], "manually": [466, 477, 481, 538, 545, 548, 553, 567, 572, 593, 608, 609, 611, 625, 626, 630, 637, 645, 649], "many": [461, 468, 469, 470, 471, 472, 473, 474, 475, 477, 479, 482, 483, 485, 486, 487, 502, 505, 513, 515, 526, 530, 531, 535, 540, 541, 543, 544, 546, 547, 548, 550, 552, 554, 555, 556, 558, 559, 560, 570, 571, 573, 574, 575, 578, 579, 581, 583, 590, 592, 593, 597, 601, 607, 608, 609, 611, 613, 614, 618, 619, 625, 626, 628, 630, 631, 632, 635, 636, 640, 641, 645, 646, 648, 649, 651, 652, 654, 669, 670, 671, 672, 673, 674, 677, 679, 680, 681, 682, 683, 684, 685, 686], "map": [461, 486, 489, 499, 516, 517, 530, 535, 541, 562, 566, 577, 580, 584, 590, 591, 592, 593, 595, 605, 611, 617, 625, 626, 634, 635, 636, 643, 645, 646, 649, 650, 651, 652, 669, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685, 688], "mapoptional": 652, "mapped": [461, 464, 466, 473, 483, 491, 499, 530, 534, 542, 555, 557, 562, 566, 579, 584, 590, 609, 611, 625, 628], "mapping": [461, 469, 499, 501, 513, 517, 521, 522, 530, 541, 554, 561, 562, 579, 590, 592, 593, 595, 597, 600, 602, 604, 609, 617, 622, 625, 626, 628, 630, 634, 644, 682, 688], "mappingnormaliz": 652, "mappingnormalizationheap": 652, "mappingtrait": 652, "maprequired": 652, "mapsectionaddress": 584, "maptag": 652, "mapvector": 486, "march": [487, 492, 493, 513, 570, 571, 574, 589, 616, 618, 626, 675], "marching": 625, "marginally": 626, "mark": [461, 466, 473, 483, 486, 491, 505, 513, 515, 518, 530, 531, 534, 535, 540, 542, 544, 545, 547, 553, 572, 579, 586, 591, 592, 607, 609, 626, 630, 632, 636, 641, 649, 651], "markasignored": 486, "markdown": 627, "markdownquickstarttemplat": 586, "marked": [466, 468, 470, 480, 483, 486, 534, 535, 540, 542, 544, 547, 579, 587, 596, 607, 609, 626, 630, 637, 643, 646, 651], "marker": [538, 651], "marking": [513, 547, 550, 579, 607, 609, 626, 628], "markup": [466, 486, 581, 586, 627], "marshal": 534, "marshaling": 628, "mask": [60, 239, 250, 392, 403, 461, 464, 465, 466, 483, 486, 487, 545, 554, 555, 576, 615, 616, 626, 634, 651, 652], "masked": [461, 646], "maskedbitset": 652, "maskedbitsetcas": 652, "maski64": 579, "masking": [470, 626], "maskipopcnt": 579, "masm": [597, 604], "mass": 538, "massaging": 569, "massiv": [502, 549, 581, 634], "mast": [481, 549, 567, 605, 610, 611, 613, 623, 636], "match": [461, 464, 465, 466, 470, 473, 475, 477, 479, 482, 483, 486, 487, 488, 491, 495, 499, 502, 513, 515, 517, 526, 529, 531, 534, 535, 540, 541, 546, 548, 550, 554, 555, 559, 573, 579, 581, 585, 589, 597, 602, 605, 607, 609, 611, 615, 620, 622, 625, 630, 634, 635, 636, 641, 646, 648, 650, 651, 652, 668, 670, 671, 679, 680, 681, 682, 683, 684, 685], "matched": [461, 470, 483, 487, 501, 518, 529, 530, 540, 541, 579, 646, 668], "matcher": [487, 529, 581, 634, 635], "matching": [461, 466, 467, 473, 490, 495, 501, 504, 506, 534, 540, 547, 579, 582, 589, 595, 609, 625, 634, 646, 651, 652, 680], "matchinstructionimpl": 483, "material": [484, 591], "materializ": [554, 556, 593, 616, 625, 657], "materializationresponsibility": [593, 655, 656, 657], "materializationun": [593, 655, 657], "materializationunit": [593, 657], "materialized": 593, "materializer": 593, "math": [482, 486, 492, 493, 530, 545, 592, 625, 644, 645, 668, 671, 673, 679, 684], "mathematic": [669, 680], "mathematical": [543, 579, 592], "mathematically": 591, "matplotlib": 512, "matrix": [547, 618], "matt": [470, 515, 526, 541, 558, 579, 614, 623, 628, 682], "matter": [538, 623, 648], "matthew": [611, 623], "matthewsrevnum": 611, "mattr": [487, 492, 493, 516, 646, 675], "matur": [530, 545, 547, 623, 626], "mat\u00e9riel": 142, "max": [466, 487, 491, 505, 513, 518, 530, 531, 535, 579, 581, 626, 639, 650], "max_dx10": 466, "max_flat_workgroup_siz": 466, "max_fp16": 466, "max_int_bit": 609, "max_len": [546, 581], "max_total_tim": 581, "max_vgpr": 466, "maxatomicsizeinbitssupported": 470, "maxflatworkgroupsiz": 466, "maximal": 537, "maximality": 583, "maximally": [473, 579, 679], "maximiz": [493, 581, 593], "maximizing": 479, "maximum": [466, 469, 470, 474, 481, 483, 489, 491, 497, 504, 505, 513, 530, 555, 559, 566, 581, 583, 591, 609, 622], "maximum_operations_per_instruct": 466, "maxscalar": 559, "maxsimultaneousalloc": 566, "maxsiz": 486, "may": [16, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 44, 45, 48, 49, 51, 52, 53, 54, 114, 117, 120, 126, 127, 128, 129, 130, 131, 140, 143, 144, 145, 201, 202, 205, 211, 212, 213, 218, 219, 220, 221, 234, 235, 238, 239, 240, 241, 242, 243, 244, 303, 305, 310, 315, 316, 317, 326, 335, 338, 339, 340, 359, 362, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 387, 388, 391, 392, 393, 394, 395, 396, 397, 460, 461, 462, 463, 464, 465, 466, 467, 470, 472, 473, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 495, 499, 504, 505, 506, 513, 514, 515, 516, 518, 521, 522, 526, 530, 531, 533, 534, 535, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 552, 554, 555, 556, 559, 560, 565, 566, 567, 568, 569, 570, 572, 573, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 588, 589, 590, 592, 593, 594, 595, 597, 601, 602, 604, 605, 607, 608, 609, 610, 611, 612, 614, 616, 618, 621, 622, 623, 625, 626, 628, 629, 630, 631, 632, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 655, 656, 657, 670, 671, 672, 673, 674, 675, 676, 677, 679, 681, 683, 684, 685, 686], "may_throw": 540, "mayali": [469, 579], "mayb": [541, 553, 581, 626, 649, 677, 686], "maybe_instru": 649, "maybeoverridden": 591, "maybevalu": 530, "mayfail": 609, "mayfail2": 609, "mayload": [513, 636, 637], "maynot": 531, "mayraisefpexcept": 636, "mayreadfrommemory": 470, "maystor": [513, 636, 637], "maytrap": 579, "maywritetomemory": [470, 609], "mb": [581, 613, 652], "mbb": [483, 646], "mbbi": 483, "mc": [466, 536, 542, 550, 580, 584, 585, 641], "mca": [490, 618], "mcasmpars": 483, "mcasmstream": 483, "mccfiinstruct": 585, "mccodeemitt": [483, 634], "mcdesc": 646, "mcdisassembl": 483, "mce": 646, "mcexpr": 483, "mcinst": [513, 634], "mcinstlow": 483, "mcinstrdesc": 554, "mcjit": [545, 593, 644, 654], "mclabel": 483, "mcmodel": 542, "mcobjectstream": 483, "mcod": 466, "mcoperand": 483, "mcpu": [466, 492, 493, 505, 513, 516, 568, 571, 592, 641, 646], "mcregaliasiterator": 483, "mcsectioncoff": 483, "mcsectionelf": 483, "mcsectionmacho": 483, "mcstream": 547, "mcsymbol": 547, "mctargetdesc": 634, "mctargetstream": 483, "mcumod": 466, "md": [547, 579, 581, 586, 613], "md5": [461, 499, 518, 535], "md_prof": 475, "mdnod": [475, 579, 642], "mdstring": [475, 579], "mdtupl": 579, "meab": 492, "mean": [461, 464, 466, 469, 471, 472, 473, 475, 476, 479, 481, 482, 483, 484, 485, 486, 487, 491, 495, 513, 518, 530, 534, 538, 540, 545, 547, 548, 550, 554, 555, 559, 560, 565, 571, 578, 579, 581, 582, 583, 585, 589, 590, 591, 593, 594, 597, 601, 602, 604, 607, 608, 609, 610, 611, 612, 614, 615, 621, 625, 626, 630, 631, 632, 634, 636, 639, 642, 643, 646, 648, 652, 655, 668, 670, 671, 672, 674, 676, 677, 679, 681, 682, 683, 685, 686], "meaning": [48, 54, 114, 145, 201, 221, 233, 235, 238, 239, 244, 303, 391, 392, 397, 460, 461, 462, 464, 465, 466, 473, 481, 483, 486, 491, 495, 505, 514, 515, 526, 530, 540, 542, 548, 573, 579, 593, 597, 600, 601, 602, 614, 622, 625, 630, 636, 637, 643, 647, 652, 668, 679], "meaningful": [461, 466, 478, 486, 493, 515, 518, 528, 531, 547, 548, 579, 586, 609, 612, 627, 632, 634, 651], "meaningless": 609, "meant": [486, 528, 535, 549, 550, 552, 569, 575, 579, 586, 590, 609, 619, 621, 622, 627, 632], "meantim": 623, "measur": [471, 481, 505, 513, 583, 609, 639, 651], "measurably": 479, "measured": [505, 513, 626], "measuring": 505, "meat": 682, "mechanic": [466, 648, 681], "mechanism": [466, 473, 480, 483, 486, 491, 538, 540, 545, 547, 565, 566, 579, 580, 584, 592, 593, 609, 612, 621, 625, 626, 630, 631, 636, 640, 643, 645, 648], "med": 650, "median": 626, "mediat": [538, 621], "mediated": 469, "medium": [493, 579], "meet": [461, 466, 483, 485, 538, 550, 559, 591, 621, 623, 632, 648], "meeting": [461, 484, 485, 549, 589, 616, 621], "meetup": 653, "megabyt": 488, "mehd": 614, "meltdown": 626, "mem": [534, 587, 607, 642, 680, 681, 682, 683, 684, 685], "mem2ref": 630, "mem2reg": [545, 547, 609, 625, 674, 685], "mem_address": 483, "mem_not_null": 534, "mem_ordered": 466, "memalign": 622, "memarg": 578, "memb": [461, 466, 483, 485, 486, 495, 515, 516, 526, 531, 542, 573, 579, 584, 593, 595, 604, 607, 609, 614, 621, 623, 635, 643, 646, 651, 652, 654, 655, 656], "member": [482, 484, 486, 495, 508, 513, 517, 523, 531, 538, 579, 582, 625, 632, 635, 639, 645, 646, 654, 655, 656], "memberlist": 646, "membership": [540, 609], "memcheck": [491, 641], "memcpy": [469, 470, 626, 630], "memcpyopt": 470, "memdep": 469, "memfenc": 466, "memmov": 630, "memop": 518, "memoriz": 486, "memory": [17, 21, 22, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 48, 56, 57, 62, 63, 114, 118, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 147, 151, 152, 201, 203, 207, 208, 211, 212, 213, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 246, 247, 252, 253, 303, 335, 344, 360, 364, 365, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 391, 399, 400, 405, 406, 460, 464, 465, 470, 472, 481, 483, 488, 489, 491, 502, 505, 515, 516, 518, 531, 534, 536, 537, 540, 541, 543, 544, 547, 548, 550, 554, 566, 568, 574, 575, 578, 580, 581, 582, 584, 585, 587, 589, 590, 592, 593, 594, 617, 618, 620, 622, 624, 625, 626, 628, 629, 630, 634, 643, 645, 646, 648, 649, 651, 652, 654, 655, 656, 657, 669, 670, 671, 672, 673, 675, 676, 677, 679, 686], "memory_order_acq_rel": [470, 579], "memory_order_acquir": [470, 579], "memory_order_consum": 470, "memory_order_relaxed": [470, 579], "memory_order_releas": [470, 579], "memory_order_seq_cst": [470, 579], "memory_ur": 466, "memoryaccess": 590, "memorybuff": [486, 593], "memorydef": 590, "memorydependenceanalys": 590, "memorydependencyanalys": 470, "memoryloc": 590, "memoryph": 590, "memorysanitiz": [579, 581], "memoryss": [469, 618, 644], "memoryssawalk": 590, "memoryus": 590, "memorywithorigin": 481, "memr": [483, 646], "memrr": 646, "memset": [470, 607], "memtag": 589, "memtagsanitiz": [579, 617], "mental": [484, 609], "mentality": 479, "mention": [461, 472, 487, 555, 588, 611, 618], "mentioned": [466, 472, 473, 481, 483, 486, 530, 537, 550, 569, 579, 583, 591, 595, 600, 609, 624, 625, 630], "mentioning": [573, 621, 623], "mentorship": 485, "merely": [548, 552, 579, 607, 608, 626, 630, 670, 681], "merg": [468, 469, 499, 515, 535, 538, 547, 550, 553, 562, 569, 579, 583, 590, 591, 608, 620, 625, 632, 639, 645, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "mergabl": 607, "merge_bb": [683, 684, 685], "merge_control_fil": 581, "mergebb": [672, 673, 674, 675, 676], "merged": [481, 483, 518, 522, 531, 538, 542, 553, 572, 575, 579, 581, 591, 609, 611, 619, 625, 636, 676], "mergedloadstoremot": 575, "mergefunct": 644, "merging": [469, 487, 517, 518, 535, 575, 579, 581, 582, 607, 614, 625, 626, 644], "mesa": 466, "mesa3d": 466, "messag": [54, 114, 145, 201, 244, 303, 397, 460, 466, 477, 481, 482, 485, 487, 491, 495, 505, 510, 513, 530, 540, 549, 550, 570, 574, 580, 581, 594, 608, 609, 611, 618, 622, 623, 634, 636, 637, 648, 652, 675], "messy": 483, "met": [461, 483, 516, 547, 572, 579, 585, 591, 609, 620, 622, 625, 628, 634, 637], "metadat": [473, 474, 478, 483, 492, 538, 542, 545, 547, 548, 556, 566, 575, 580, 585, 591, 607, 608, 617, 618, 641, 668, 676, 679], "metadatarecord": 651, "metal": [570, 579], "metarenam": 477, "metasyntactic": 477, "metatad": 475, "method": [461, 466, 477, 479, 480, 482, 483, 487, 530, 537, 538, 541, 547, 548, 550, 557, 562, 566, 570, 572, 573, 574, 576, 578, 579, 580, 584, 591, 593, 608, 618, 625, 626, 628, 630, 634, 636, 640, 646, 647, 649, 652, 654, 655, 656, 669, 670, 671, 672, 674, 681, 682, 683, 685], "methodbod": 646, "methodology": 540, "methodprotos": 646, "metric": [474, 504, 560, 581, 626, 639, 648, 650], "meyer": 486, "mf": [483, 530, 558, 594, 614], "mfc": 597, "mfctypeserverindex": 597, "mfenc": 470, "mfloat": [570, 571], "mflop": 645, "mfpu": 570, "mft": 605, "mgrid331": 613, "mi": [483, 557, 558, 585, 614, 646], "mi25": 466, "mi50": 466, "mi6": 466, "mi60": 466, "mi8": 466, "mib": 542, "michigan": 537, "micro": [461, 466, 486, 513, 613, 626], "microarchitectural": 618, "microbenchmark": [626, 639], "microcod": 466, "microcontroller": 532, "microopbuffersiz": 513, "microphon": 588, "microprocessor": [483, 579, 646], "microsecond": 651, "microsoft": [483, 486, 508, 517, 530, 532, 542, 551, 567, 578, 579, 597, 601, 604, 605, 617, 623, 625], "mid": [545, 578, 579, 625], "middl": [482, 486, 538, 547, 578, 579, 601, 607, 630, 632], "midly": 481, "might": [461, 469, 470, 471, 475, 476, 477, 481, 483, 484, 485, 486, 487, 495, 501, 505, 513, 516, 530, 538, 539, 543, 545, 546, 547, 550, 552, 557, 571, 572, 573, 579, 580, 581, 583, 586, 587, 591, 593, 601, 602, 604, 608, 609, 610, 611, 613, 622, 623, 625, 626, 627, 630, 631, 632, 634, 635, 642, 643, 645, 646, 652, 672, 675, 677, 683, 684, 685, 686], "mignor": 618, "migrat": [466, 538, 547], "migrated": [487, 538, 611], "migrating": [469, 611], "mileag": 588, "mileston": 591, "mill": 530, "million": [579, 609], "millisecond": 650, "mimalloc": 481, "mimic": [462, 486, 521, 522, 593, 611], "min": [114, 201, 303, 460, 466, 487, 505, 517, 518, 522, 531, 579, 581, 588, 619, 626, 639, 650], "min_dx10": 466, "min_int_bit": 609, "mind": [486, 538, 609, 622, 669, 674, 680, 685], "minded": [674, 685], "mindful": [485, 612], "mingw": [481, 483, 552, 618], "mingw32": [483, 567, 641], "mingw32msvc": 483, "mingw64": 550, "minimal": [466, 468, 483, 486, 495, 505, 535, 539, 593, 609, 610, 625, 635, 648, 669, 673, 680, 684], "minimaldebuginfo": 602, "minimally": [470, 483, 539], "minimis": [614, 632], "minimiz": [478, 483, 489, 493, 539, 548, 554, 560, 579, 581, 582, 609, 626, 643, 651], "minimize_crash": 581, "minimized": 581, "minimizing": [479, 628], "minimum": [466, 481, 487, 488, 525, 538, 541, 550, 555, 572, 574, 612, 620, 623, 625, 626, 628, 632, 639, 646, 650, 656, 669, 680], "minimum_instruction_length": 466, "minor": [461, 483, 485, 486, 538, 591, 597, 606, 609, 677, 686], "minor_processing": 626, "minor_vers": 466, "minorvers": 597, "minscalar": 559, "minscalarsam": 559, "minsiz": [473, 579], "minsizerel": [479, 481, 550], "minus": [461, 465, 466, 475, 579, 624], "minut": [550, 553, 590], "mioperandinfo": 646, "mip": [470, 483, 545, 550, 554, 559, 571, 579, 614, 622, 646, 649], "mips16": 470, "mips32": 470, "mips64": 649, "mips64el": 649, "mipsel": 649, "mir": [466, 554, 557, 560, 561, 564, 579, 617], "mirdebugify": 575, "mirror": [464, 546, 547, 672, 673, 683, 684], "mirroring": 611, "mirstripdebugify": 575, "mis": [466, 483, 488, 574, 626], "misaligned": 622, "misattributed": 575, "misbehav": 619, "miscellaneous": 579, "miscommun": 538, "miscompil": [476, 488, 538, 550, 579, 613], "miscompiled": [477, 550, 574], "miscompiling": 574, "misinterpret": 477, "misinterpreted": 464, "mislead": 486, "misleading": [575, 625], "mismatch": [466, 486, 518, 570, 579, 587, 622, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "mismatched": [472, 569], "misnamed": 483, "misoptimiz": 475, "mispredict": 626, "mispredicted": 626, "misrepresent": 575, "misrepresenting": 625, "miss": [477, 513, 545, 579, 614, 629], "missed": [513, 620, 642, 645], "missing": [470, 486, 487, 565, 570, 571, 575, 579, 593, 609, 613, 625, 630, 640, 669, 673, 674, 680, 684, 685], "mission": 538, "misspecul": 626, "misspeculated": 626, "misspeculating": 626, "mistak": [484, 486, 545], "mistaken": [671, 682], "misunderstood": [543, 617], "misused": 641, "mit": [538, 626], "mitig": [579, 589, 611, 614, 617, 622, 623], "mitigat": [547, 579, 617, 622, 626, 632], "mitigated": [513, 556, 626], "mitigating": 626, "mitr": 623, "mix": [461, 482, 483, 486, 554, 579, 612, 625, 647], "mixed": [470, 487, 593, 609, 616, 626], "mixing": [487, 548, 565, 579, 582, 626, 636], "mixtur": [461, 527, 560, 626, 636], "mjansson": 481, "mkdir": [481, 550, 565, 581, 611, 639, 641, 650], "ml": [461, 547, 613, 680, 681, 682, 683, 684, 685], "mli": 682, "mlim": 488, "mlir": [553, 634], "mllvm": [513, 594, 645], "mm0": [483, 636, 637], "mm1": [636, 637], "mm2": [636, 637], "mm3": [636, 637], "mm4": [636, 637], "mm5": [636, 637], "mm6": [636, 637], "mm7": [636, 637], "mma": 618, "mmap": 519, "mmi": 585, "mmio": 579, "mmx": [483, 579, 646], "mnemonic": [618, 646, 649], "mnemonicali": 483, "mno": 466, "mo": 625, "mo1": 646, "mo_cimmediat": 585, "mo_registermask": 483, "mobil": 466, "mock": 641, "mocked": 609, "mod": [48, 64, 99, 142, 238, 239, 345, 353, 391, 392, 407, 445, 464, 465, 469, 471, 473, 475, 481, 487, 491, 495, 498, 499, 505, 510, 515, 517, 518, 526, 530, 531, 538, 546, 547, 560, 568, 570, 579, 582, 589, 596, 600, 604, 609, 619, 622, 626, 636, 637, 639, 641, 644, 646, 650, 651, 674, 675, 685], "model": [461, 470, 473, 482, 483, 491, 493, 505, 530, 534, 538, 539, 540, 543, 545, 547, 548, 549, 554, 574, 577, 578, 582, 593, 609, 615, 616, 617, 618, 623, 625, 634, 642, 645, 646, 652, 669, 670, 674, 675, 680, 685], "modeled": [476, 513, 547, 579, 609, 616, 630, 646, 681], "modeling": [577, 616, 645], "modelled": [540, 578, 609, 616], "modelling": [466, 616], "moder": [608, 621], "moderat": [486, 609], "moderator": 538, "modern": [482, 486, 531, 532, 536, 543, 568, 588, 593, 595, 596, 597, 600, 602, 609, 615, 626, 645, 677, 679, 686], "moderniz": 615, "modest": [461, 486], "modfilecount": 597, "modfilecountarray": 597, "modif": [466, 469, 477, 480, 495, 515, 518, 526, 530, 533, 539, 550, 579, 590, 591, 607, 609, 616, 626, 634, 646, 648, 676], "modifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 50, 51, 52, 53, 87, 117, 144, 173, 202, 221, 233, 235, 241, 242, 243, 277, 304, 305, 309, 310, 314, 315, 316, 317, 326, 337, 338, 339, 340, 359, 394, 395, 396, 432, 461, 483, 486, 553, 585, 587, 596], "modified": [461, 466, 467, 469, 477, 483, 486, 495, 515, 526, 530, 560, 575, 577, 579, 590, 601, 604, 608, 609, 613, 625, 630, 632, 648, 654, 671], "modifier0": [463, 466], "modifier1": [463, 466], "modify": [461, 469, 470, 477, 481, 530, 534, 540, 541, 552, 557, 573, 577, 579, 581, 590, 592, 594, 607, 616, 625, 626, 634, 635, 636, 640, 646, 647, 648, 650, 654, 674, 685], "modifying": [461, 481, 482, 486, 495, 579, 581, 594, 608, 609, 611, 639, 647, 648], "modindic": 597, "modinfo": 597, "modinfosiz": 597, "modistream": 600, "modr": 483, "modref": [469, 470, 636], "modrefbit": 636, "modrefresult": 469, "modrefval": 636, "modul": [469, 473, 477, 481, 483, 486, 489, 490, 491, 497, 502, 513, 528, 543, 545, 547, 550, 572, 575, 580, 581, 582, 584, 591, 592, 593, 594, 605, 613, 618, 625, 628, 629, 630, 634, 639, 640, 641, 643, 646, 647, 650, 654, 656, 657, 670, 671, 672, 673, 674, 676, 681, 682, 683, 684, 685], "modular": [469, 528, 593, 612, 626, 648], "modularity": [564, 612], "modulariz": 478, "modulebitcodewrit": 541, "modulehandl": 656, "modulehandlet": 656, "moduleid": [641, 670, 681], "moduleindex": 597, "modulelevelpass": 648, "modulenam": 597, "modulepass": [469, 594], "modulepath": 593, "modulesummaryindex": 579, "modulesymstream": 597, "modulo": [461, 483, 579, 625], "moll": 590, "moment": [481, 513, 534, 547, 579, 585, 630, 656, 681], "monitor": 611, "monitored": 579, "monitoring": [469, 639], "mono": 538, "monolithic": [538, 611, 612, 624], "monorepo": [608, 648], "monorepos": 538, "monospac": [586, 627], "monotonic": [466, 579], "monotonically": 611, "month": [538, 549, 572, 581, 623], "mor": [139, 461, 462, 463, 464, 465, 466, 469, 470, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 488, 491, 492, 495, 497, 499, 504, 505, 512, 513, 517, 518, 519, 521, 522, 525, 528, 530, 531, 533, 534, 535, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 550, 552, 554, 556, 558, 559, 560, 562, 564, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 580, 582, 585, 586, 587, 588, 590, 591, 592, 593, 597, 601, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 616, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "moreelements": 559, "moreelementsfor": 559, "moreelementstonextmultipl": 559, "moreelementstonextpow2": 559, "moreov": [465, 483, 485, 487, 579, 607, 612], "most": [461, 463, 466, 467, 468, 469, 470, 472, 476, 478, 479, 481, 482, 483, 485, 486, 487, 491, 497, 498, 507, 509, 513, 515, 517, 523, 526, 528, 529, 530, 531, 533, 534, 536, 537, 538, 540, 541, 543, 545, 546, 547, 548, 549, 550, 554, 557, 559, 562, 566, 568, 569, 570, 571, 572, 573, 574, 576, 579, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 597, 604, 606, 608, 609, 610, 611, 612, 613, 614, 617, 619, 622, 623, 625, 626, 627, 628, 630, 631, 634, 635, 636, 637, 639, 640, 642, 645, 646, 647, 648, 650, 651, 655, 669, 670, 671, 672, 673, 674, 676, 677, 680, 681, 683, 684, 685, 686], "mostly": [470, 483, 513, 530, 531, 550, 553, 562, 580, 583, 590, 591, 607, 625, 630, 639, 646, 651, 672, 676, 677, 683, 686], "motion": [469, 550, 579, 580, 583, 590, 648], "motiv": [577, 655, 672, 683], "motivat": [672, 683], "motivated": [579, 609, 628], "motivating": [588, 674, 685], "motohiro": 483, "mount": [471, 539, 550], "mous": 650, "mov": [461, 466, 469, 470, 471, 481, 483, 486, 487, 495, 534, 538, 542, 546, 547, 549, 550, 562, 572, 579, 583, 592, 593, 607, 609, 616, 625, 626, 628, 630, 637, 648, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 677, 683, 686], "mov32mr": 585, "mov32r": [483, 585], "mov32r0": 625, "mov32rm": [585, 625], "mov64r": [585, 646], "mov64rm": 585, "mov64rr": 585, "movabsq": [624, 628], "movapd": 487, "moved": [466, 469, 470, 471, 476, 483, 487, 495, 513, 538, 575, 579, 583, 593, 607, 609, 611, 616, 625, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667], "movhpd": 487, "moving": [466, 481, 495, 546, 549, 575, 607, 616], "movl": [487, 579, 626, 628, 630], "movnt": 579, "movq": [626, 628, 630], "movsd": 487, "movslq": 628, "movsq": 483, "movsx": 483, "movsx16rm8w": 483, "movsx16rr8w": 483, "movsx32rm16": 483, "movsx32rr16": 483, "movsx32rr8": 483, "movsx64rr16": 483, "movsx64rr32": [483, 505, 625], "movsx64rr8": 483, "movt": 542, "movw": [542, 579], "movz": [472, 579], "mozill": 614, "mppassmanag": 650, "mpx": 618, "mr": 657, "mri": [483, 554, 614], "mrm0m": [636, 646], "mrm0r": [636, 646], "mrm1m": 646, "mrm1r": 646, "mrm2m": [636, 646], "mrm2r": [636, 646], "mrm3m": 646, "mrm3r": 646, "mrm4m": 646, "mrm4r": 646, "mrm5m": 646, "mrm5r": 646, "mrm6m": 646, "mrm6r": 646, "mrm7m": 646, "mrm7r": 646, "mrmdestmem": 646, "mrmdestreg": [636, 637, 646], "mrminitreg": 646, "mrmsrcmem": 646, "mrmsrcreg": 646, "mrt": [96, 185, 287, 442], "mrtz": [87, 96, 173, 185, 277, 287, 432, 442], "mrv": 636, "ms_abi_tripl": 641, "msa": [554, 559, 579], "msan": [581, 618], "msb": [465, 483, 651], "msb_extract": 579, "msbuild": [481, 552], "msdn": [486, 508], "msec": 645, "msf": [597, 602], "msg": [0, 2, 3, 4, 579, 635], "msg_g": [54, 145, 244, 397], "msg_get_doorbel": [54, 397], "msg_gs_alloc_req": [54, 397], "msg_gs_don": [54, 145, 244, 397], "msg_interrupt": [54, 145, 244, 397, 466], "msg_sysmsg": [54, 145, 244, 397], "msgpack": 466, "msp430": [483, 550, 579], "mspdb": 597, "mspdbsrv": 597, "mspdbxxxx": 597, "msr": 626, "msse4": 622, "msvc": [481, 483, 486, 540, 542, 579, 597, 609, 618, 625, 626], "mt": 481, "mte": [579, 589], "mthumb": 570, "mtripl": [487, 492, 493, 513, 546, 579, 585, 625], "mtun": 618, "mtyp": 466, "mu": 611, "much": [461, 466, 469, 470, 471, 477, 478, 479, 483, 486, 497, 508, 517, 530, 531, 538, 539, 541, 543, 545, 550, 556, 559, 565, 567, 569, 571, 573, 574, 575, 578, 579, 582, 586, 589, 590, 592, 593, 594, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 619, 621, 625, 626, 627, 628, 630, 631, 632, 636, 637, 641, 646, 648, 649, 650, 652, 655, 669, 670, 671, 674, 677, 680, 681, 682, 685, 686], "mul": [464, 487, 548, 575, 592, 607, 636, 670, 681], "mul_r": 636, "mul_rr": 636, "mullin": 466, "mult": [464, 466, 486, 521, 530, 539, 564, 569, 581, 605, 609, 636, 653], "multi_val": 530, "multiarch": [570, 571], "multicl": [635, 637], "multiclass": [637, 646], "multiclassid": 636, "multicor": 470, "multidimensional": 579, "multilib": [539, 571], "multilin": 491, "multimap": 609, "multipl": [461, 465, 466, 467, 469, 470, 471, 473, 474, 478, 482, 483, 485, 486, 487, 489, 499, 501, 504, 506, 507, 513, 514, 515, 526, 527, 530, 531, 533, 537, 538, 542, 545, 548, 550, 555, 556, 559, 562, 567, 573, 575, 578, 579, 581, 583, 584, 585, 590, 591, 593, 597, 605, 607, 608, 610, 616, 618, 620, 625, 626, 628, 630, 631, 632, 634, 635, 637, 639, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 669, 670, 671, 672, 673, 676, 680, 681, 682, 683, 684], "multipli": 513, "multiplicand": 579, "multiplied": [466, 518], "multiply": [464, 466, 483, 513, 518, 531, 541, 555, 580, 625], "multiplying": [474, 579, 626], "multiprocessor": [547, 648], "multirepo": 611, "multiset": 609, "multisourc": [538, 574, 613, 625, 639, 640], "multithreaded": [547, 609, 650], "multithreading": 609, "multmp": [670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "multmp1": [670, 681], "multmp2": [670, 681], "multmp3": [670, 681], "multmp4": [671, 682], "mummergpu": 613, "mung": [548, 607], "munger_struct": 548, "musl": [581, 618], "must": [16, 24, 41, 42, 48, 49, 54, 58, 60, 64, 65, 78, 87, 98, 100, 114, 117, 124, 137, 138, 142, 143, 145, 148, 162, 173, 187, 201, 202, 209, 231, 232, 238, 239, 240, 244, 248, 250, 266, 277, 289, 303, 326, 336, 342, 345, 359, 367, 384, 385, 391, 392, 393, 397, 401, 403, 407, 408, 421, 432, 444, 446, 460, 461, 464, 465, 466, 467, 468, 470, 472, 473, 475, 481, 483, 486, 487, 491, 495, 499, 505, 509, 513, 515, 531, 534, 536, 538, 540, 541, 542, 543, 546, 547, 548, 550, 554, 555, 559, 560, 566, 570, 571, 572, 573, 574, 575, 578, 579, 580, 581, 582, 583, 584, 585, 590, 591, 592, 593, 594, 601, 602, 607, 608, 609, 610, 611, 614, 616, 619, 622, 623, 625, 626, 627, 628, 630, 631, 632, 634, 636, 637, 640, 641, 642, 643, 646, 647, 648, 651, 652, 654, 655, 670, 671, 672, 673, 674, 675, 676, 681, 683, 684, 685], "must_tail_call_return": 534, "mustali": [469, 579], "mustprogress": 473, "mustquot": 652, "musttail": [534, 579], "mutabl": [579, 672, 673, 675, 676, 678, 679, 683, 684, 687], "mutat": [467, 546, 581, 607, 609, 655, 673, 675, 676, 684], "mutated": [486, 575, 655], "mutatestrictfptofp": 467, "mutating": [486, 557, 674, 685], "mutator": [547, 609], "mutex": [470, 654], "mutually": [511, 530, 630, 668, 679, 681], "mv": 550, "mve": 529, "mvt": [483, 554, 646], "my": [469, 538, 547, 550, 592, 593, 611, 639, 648, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685, 687], "my86_64flag": 652, "my86flag": 652, "my_addit": 625, "my_build_d": 620, "my_fil": 594, "my_fmad": 592, "my_funct": 592, "my_function_fast": 592, "my_function_precis": 592, "my_fuzz": 581, "my_gwp_asan_error": 566, "my_kernel": 592, "my_key": 486, "my_list": 482, "my_list_of_number": 482, "my_local_branch": 611, "my_local_tag": 611, "my_opt_diff": 620, "my_opt_yaml1": 620, "my_opt_yaml2": 620, "my_other_fil": 594, "my_project": 611, "my_string": 482, "my_valu": 486, "my_yaml_fil": 620, "myalloc": 534, "myapp": 593, "myawesomeproject": 579, "mybarflag": 652, "mybison": 640, "myblock": 585, "myboolean": 625, "mybranch": 611, "mybuildd": 481, "mycustomtyp": 652, "mydevic": 639, "mydoclist": 652, "mydoclisttyp": 652, "mydoctyp": 652, "myflag": 652, "myfoobar": 609, "myfooflag": 652, "myfunct": 592, "mygc": 547, "mygcprint": 547, "myglobal": 625, "myinitprng": 581, "mylist": 652, "mylistel": 652, "mymachinefunctionpass": 594, "mymaptyp": 652, "mynewpass": 488, "myobject": 625, "myocamlbuild": [681, 682, 683, 684, 685], "myocyt": 613, "myownp3set": 625, "mypass": [558, 609, 648], "mypassnam": 609, "mypassopt": 648, "mypatch": 608, "myproj": 611, "myregalloc": 648, "myregisterallocator": 648, "myrepo": 611, "myseq": 652, "myseqel": 652, "myset": 486, "mystery": 548, "mystical": [677, 686], "mystringtyp": 652, "mystruct": 548, "mytarget": 581, "mytyp": 579, "mytype1": 652, "mytype2": 652, "myvar": 548, "n1": [471, 611, 646], "n16": 592, "n2": [471, 625, 646], "n32": 579, "n4absl11string_view": 501, "n8": 579, "n_bucket": 625, "n_hash": 625, "n_stab": 514, "na": 483, "nab": 613, "nadditional": 530, "nail": [672, 683], "naiv": [505, 607], "naively": 626, "nakatan": 483, "naked": [473, 579], "nam": [48, 54, 142, 145, 238, 244, 391, 397, 462, 465, 467, 468, 470, 473, 475, 477, 478, 479, 481, 482, 483, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 509, 510, 513, 514, 515, 516, 517, 518, 521, 522, 525, 526, 527, 529, 530, 531, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548, 549, 550, 552, 555, 567, 569, 571, 572, 573, 575, 577, 580, 581, 582, 585, 586, 587, 591, 592, 593, 594, 595, 597, 602, 605, 608, 609, 610, 611, 618, 619, 620, 621, 622, 628, 630, 634, 636, 637, 640, 641, 643, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686, 688], "name1": 636, "name2": 636, "name3": 636, "named": [461, 465, 470, 473, 481, 482, 486, 493, 499, 503, 506, 507, 513, 514, 515, 516, 526, 529, 535, 542, 544, 550, 560, 585, 591, 592, 605, 609, 610, 620, 628, 630, 631, 634, 635, 636, 637, 640, 643, 646, 648, 649, 652, 654, 668, 670, 674, 679, 681, 682, 683, 684, 685], "named_valu": [681, 682, 683, 684, 685], "namedindex": 646, "namedvalu": [670, 671, 672, 673, 674, 675, 676], "namedvar": 676, "namefield": 634, "nameflag": 625, "namely": [466, 534, 537, 538, 579, 591], "namesbuff": 597, "namespac": [461, 473, 481, 504, 530, 531, 539, 547, 579, 580, 609, 625, 635, 636, 637, 646, 647, 648, 650, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676], "namestring": 529, "namesuffix": 636, "namevalu": 636, "naming": [468, 486, 499, 504, 573, 609, 614, 635, 646], "nan": [465, 466, 492, 493, 555, 579, 625], "nand": 579, "nandakumar": 563, "nano": 466, "narrow": [469, 470, 477, 488, 541, 548, 555, 574, 575, 581, 609, 626], "narrowaddr": 579, "narrowcharact": 604, "narrowing": [470, 550, 559], "narrowscalar": 559, "narrowscalarfor": 559, "narrowscalarforcartesianproduct": 559, "narrowscalarfortypeswithmemsiz": 559, "national": 484, "nativ": [461, 463, 466, 470, 477, 479, 481, 482, 488, 492, 495, 498, 527, 539, 540, 543, 550, 552, 565, 571, 574, 579, 582, 592, 611, 615, 625, 628, 646, 652, 654, 655, 656, 657, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 683, 684, 685, 686], "natively": [470, 483, 541, 545, 548, 579, 611, 646, 652, 677, 686], "natur": [461, 485, 518, 538, 540, 547, 604, 609, 619, 625, 631, 632], "natural": [461, 486, 487, 545, 548, 550, 573, 579, 582, 583, 586, 609, 612, 614, 618, 626, 627, 636, 648, 652, 670, 681], "naturally": [461, 466, 470, 486, 530, 537, 547, 609, 611, 672, 674, 683, 685], "natv": 605, "naveen": 607, "navigat": [530, 608], "navigating": 650, "na\u00efv": 614, "nbranch": 505, "nbsp": 483, "nc": 466, "nc_nv": 466, "ncsa": 538, "nctaid": 592, "nd": 646, "ndebug": [481, 530, 606], "near": [487, 545, 549, 604, 626, 630, 676], "near16": 596, "near32": 596, "near64": 596, "nearby": [544, 553, 588], "nearbyint": 645, "nearest": [555, 566, 579, 590, 676], "nearly": 486, "nearpoint": 604, "nearpointer128": 604, "nearpointer32": 604, "nearpointer64": 604, "neat": 655, "neatly": 655, "nec": 615, "necessarily": [486, 493, 531, 538, 543, 548, 550, 559, 579, 583, 595, 601, 605, 609, 619, 622, 623, 625, 626, 630, 651, 676], "necessary": [461, 466, 469, 470, 472, 474, 481, 483, 485, 486, 487, 499, 530, 534, 536, 538, 540, 541, 545, 547, 550, 554, 557, 559, 562, 569, 570, 571, 572, 574, 575, 576, 579, 580, 581, 582, 584, 585, 586, 593, 602, 604, 605, 608, 609, 612, 614, 618, 622, 623, 625, 626, 627, 628, 630, 631, 632, 634, 636, 639, 641, 643, 644, 645, 646, 647, 648, 650, 670, 675, 676, 678], "necessity": 461, "need": [461, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 479, 481, 483, 485, 486, 487, 495, 499, 505, 529, 530, 531, 534, 536, 538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 550, 552, 553, 554, 556, 557, 559, 560, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 585, 587, 589, 590, 591, 592, 593, 595, 597, 601, 602, 608, 609, 610, 611, 612, 616, 619, 621, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 643, 644, 646, 647, 648, 649, 650, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "needed": [461, 465, 466, 467, 468, 475, 481, 482, 483, 486, 487, 492, 493, 498, 521, 522, 528, 530, 534, 538, 542, 543, 544, 547, 548, 550, 552, 565, 570, 572, 573, 579, 582, 590, 593, 607, 608, 609, 619, 621, 624, 625, 628, 630, 631, 634, 637, 641, 646, 648, 652, 654, 655, 656, 657, 668, 669, 673, 674, 676, 679, 680, 683, 685], "needing": [461, 466, 479, 554, 579, 591, 632, 646, 676], "needlessly": 575, "needstub": 646, "neelakantam": 607, "neg": [51, 53, 144, 241, 243, 305, 310, 315, 317, 338, 340, 394, 396, 579], "neg_h": [0, 1, 4, 7, 8], "neg_lo": [0, 1, 4, 7, 8], "negat": [461, 464, 465, 466, 473, 483, 486, 487, 491, 534, 538, 540, 545, 554, 555, 579, 585, 616, 622, 625, 626, 636, 646, 673, 684], "negated": [473, 515, 526, 579], "negating": 466, "negatively": [513, 632], "negeightkind": 579, "neglected": 640, "negligibl": [544, 581], "negotiat": 623, "neighboring": 464, "neighbour": 505, "neith": [461, 469, 472, 473, 527, 540, 545, 552, 579, 581, 591, 597, 607, 628], "nekbon": 613, "nemanj": 614, "neon": [483, 529, 532, 554, 559, 571, 579, 615, 634, 644], "ness": 478, "nest": [466, 469, 473, 486, 540, 547, 579, 609, 616, 642, 646, 648], "nestabl": 636, "nested": [461, 466, 473, 481, 482, 483, 486, 491, 537, 540, 579, 583, 586, 594, 597, 609, 611, 616, 626, 636, 648, 669, 672, 680, 683], "nesting": [486, 513, 540, 579, 583, 645], "net": [466, 533, 544, 549, 567, 572, 613], "netbsd": [550, 649], "network": [483, 581, 609], "neumann": 579, "neural": 640, "neutral": [461, 579], "nev": [466, 469, 470, 472, 479, 483, 486, 487, 495, 499, 513, 531, 534, 535, 539, 543, 544, 547, 548, 553, 554, 564, 565, 573, 579, 582, 583, 591, 593, 594, 595, 596, 602, 607, 609, 611, 620, 625, 626, 632, 634, 642, 646, 648, 649, 650, 652, 654, 656, 677, 682, 686], "never_instru": 649, "never_instrumented": 649, "nevertheless": 486, "new": [461, 467, 468, 470, 473, 476, 477, 479, 481, 482, 483, 485, 486, 487, 488, 491, 495, 505, 515, 528, 529, 530, 531, 533, 536, 539, 545, 546, 547, 549, 550, 551, 552, 555, 560, 564, 565, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 601, 604, 608, 611, 613, 614, 616, 617, 618, 620, 622, 624, 628, 630, 631, 632, 634, 636, 637, 639, 642, 644, 646, 647, 652, 654, 655, 656, 669, 670, 671, 672, 673, 675, 676, 677, 680, 681, 682, 683, 684, 686], "new_cond": 579, "new_corpus_d": 581, "new_else_bb": [683, 684, 685], "new_guard_cond": 579, "new_install_nam": 507, "new_potentially_interesting_inputs_d": 581, "new_rpath": 507, "new_then_bb": [683, 684, 685], "newabbrevlen": 473, "newaddr": 555, "newcomer": [637, 674, 685], "newest": [542, 671], "newinst": 609, "newlin": [473, 486, 491, 499, 509, 518, 636, 673, 684], "newly": [476, 486, 555, 565, 581, 593, 607, 609, 614, 630, 655, 670, 671, 672, 673, 676, 681, 682, 683, 684], "newoffset": 579, "newptr": 579, "newptr2": 579, "newtoset": 486, "newty": 579, "newversionformat": 597, "next": [461, 464, 466, 468, 473, 476, 477, 486, 513, 515, 526, 530, 534, 538, 540, 547, 548, 550, 552, 559, 564, 569, 572, 573, 577, 579, 582, 583, 584, 588, 591, 594, 595, 601, 609, 616, 618, 619, 623, 625, 626, 632, 636, 641, 643, 646, 647, 648, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "next_prec": [680, 681, 682, 683, 684, 685], "next_var": [683, 684, 685], "nextindvar": 579, "nextprec": [669, 670, 671, 672, 673, 674, 675, 676], "nextvar": [672, 673, 674, 675, 676, 683, 684, 685], "nextvari": [672, 673], "nfc": [538, 580], "ni": 579, "nic": [487, 530, 550, 554, 569, 590, 607, 609, 636, 648, 652, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "nicely": [671, 682], "nicknam": 621, "nicol": 614, "nifty": [648, 672, 677, 683, 686], "nightly": [538, 549, 572, 640, 641], "ninety": 623, "ninf": 579, "ninj": [468, 479, 481, 550, 553, 557, 568, 569, 570, 571, 581, 608, 611, 613, 639, 647, 650], "niveau": 653, "nm": [490, 500, 516, 521, 522, 565, 570], "nmak": 481, "nn": [550, 613], "nnan": 579, "nnnn": 538, "nnnnnn": [476, 483], "no": [214, 216, 217, 221, 226, 228, 229, 233, 235, 461, 463, 464, 466, 470, 472, 473, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 504, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 526, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 540, 542, 543, 545, 547, 548, 550, 553, 554, 555, 556, 557, 559, 560, 569, 572, 573, 575, 576, 578, 579, 580, 581, 583, 585, 586, 589, 590, 593, 594, 595, 597, 599, 602, 604, 609, 610, 611, 612, 613, 615, 616, 618, 619, 621, 623, 625, 626, 628, 630, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 651, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "no_dead_strip": 579, "no_merg": 473, "no_switch": 645, "no_turbo": 471, "noali": [469, 473, 513, 534, 545, 548, 590], "nobody": 613, "nobuiltin": [473, 579], "nocaptur": [473, 579, 607], "nocf_check": [473, 579], "nod": [469, 474, 475, 483, 497, 529, 537, 540, 544, 555, 573, 580, 583, 585, 590, 591, 592, 609, 616, 617, 625, 630, 634, 636, 642, 643, 645, 646, 648, 652, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "nodebuginfo": 530, "nodefinit": 620, "nodenam": 635, "nodetail": 497, "nodetyp": [467, 646], "noduplicat": [473, 579], "noencod": 483, "noexcept": 540, "nofre": [473, 579], "nohup": 619, "noimm": [636, 637], "noimplicitfloat": [473, 579], "noinlin": [473, 576, 579, 620], "nois": [471, 486], "noisy": [538, 607, 609], "noitin": 493, "noitinerar": [637, 646], "noitinerary": [636, 637, 646], "nolink": 530, "noload": 515, "nologo": 508, "nom": [48, 142, 238, 391, 466, 605, 625], "nombr": 142, "nomenclatur": 468, "nomerg": 579, "nominat": 623, "nominated": 623, "nomine": 623, "nomodref": 469, "non": [16, 117, 202, 326, 359, 461, 464, 465, 467, 469, 470, 471, 473, 477, 479, 480, 481, 482, 483, 487, 488, 491, 492, 493, 495, 496, 497, 498, 499, 500, 502, 503, 505, 506, 507, 509, 510, 511, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 538, 540, 541, 544, 545, 548, 549, 550, 554, 555, 556, 559, 565, 568, 569, 570, 573, 574, 575, 577, 578, 581, 582, 583, 584, 585, 588, 589, 591, 592, 593, 594, 596, 597, 602, 604, 609, 611, 612, 614, 619, 620, 623, 625, 626, 628, 631, 632, 636, 641, 642, 643, 646, 647, 648, 651, 652, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "non_recurs": 625, "nonan": 555, "nonatomic": 625, "nondeterministically": 579, "nondot": 476, "nonempty": 579, "nonetheless": [461, 579, 655, 656, 657], "nonfatal": 636, "nongnu": 613, "nonintuit": 644, "nonlazybind": [473, 579], "nonneg": 579, "nonnull": [473, 540, 545, 579], "nonparameterized": 636, "nonsens": [586, 627, 674, 685], "nonstop": 650, "nonstop_tsc": 651, "nontemp_nod": 579, "nontemplated": 530, "nontemporal": [466, 579], "nonzero": [473, 478], "noop": 579, "nop": [542, 579, 628, 630, 649], "noprfx": 636, "nor": [461, 473, 483, 540, 543, 547, 548, 552, 579, 581, 591, 597, 607, 628, 631, 632], "norecurs": [473, 579], "noredzon": [473, 579], "noreg": [466, 575, 585, 625], "noreturn": [473, 545, 579, 583], "norm": 621, "normal": [466, 470, 472, 473, 481, 483, 486, 487, 514, 515, 521, 522, 530, 531, 538, 540, 544, 545, 547, 550, 553, 554, 555, 566, 572, 575, 579, 582, 583, 587, 596, 609, 612, 624, 626, 628, 630, 631, 643, 648, 673, 684], "normalformatting": 530, "normaliz": 641, "normalized": [464, 652], "normalizedpolar": 652, "normalizing": 652, "normally": [461, 463, 470, 473, 483, 491, 495, 496, 499, 503, 506, 510, 517, 528, 534, 538, 539, 545, 569, 572, 579, 594, 608, 623, 625, 626, 628, 634, 636, 645, 650], "norman": 483, "normat": 461, "northern": 466, "northov": 563, "nosync": [473, 579], "not": [19, 29, 30, 40, 54, 64, 65, 87, 99, 100, 114, 120, 129, 130, 136, 145, 173, 201, 205, 218, 219, 221, 230, 233, 235, 244, 277, 303, 345, 353, 362, 372, 373, 383, 397, 407, 408, 432, 445, 446, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 484, 485, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 513, 514, 515, 516, 517, 518, 521, 522, 523, 526, 527, 528, 529, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "not_found": [680, 681, 682, 683, 684, 685], "not_inline_hd": 531, "not_mangled": 500, "not_null": 544, "notabl": [481, 483, 559, 588], "notably": [531, 541, 548, 566, 569, 579, 609, 625, 626], "notail": 579, "notat": [464, 465, 466, 530, 579, 636, 652], "noted": [480, 559, 560, 630, 635, 654], "noteligibletoimport": 579, "notevex2vexconvertibl": 636, "noteworthy": 583, "notfp": 636, "nothidden": 530, "nothing": [96, 185, 287, 442, 466, 483, 487, 534, 538, 547, 548, 553, 559, 572, 579, 593, 607, 609, 611, 621, 631, 636, 641, 648, 674, 679, 685], "nothrow": 470, "notic": [481, 482, 483, 537, 538, 543, 573, 579, 583, 591, 636, 670, 674, 681, 685], "notice": 545, "noticed": [485, 575, 592], "noticing": [531, 548], "notif": [469, 567, 593, 608, 623, 632], "notified": [513, 572], "notify": [466, 476, 567, 593, 621, 623, 645], "notifying": 469, "noting": [478, 479, 545, 609], "notion": [483, 535, 538, 579, 595, 625, 648, 671, 672, 682, 683], "notional": 573, "notionally": 486, "notorious": 631, "nottranslated": 604, "notw": 487, "notwithstanding": 538, "notypemerg": 602, "noun": [486, 614], "noundef": [473, 579], "nounwind": [473, 487, 540, 545, 579, 592, 625, 641, 643], "nouveau": 653, "novel": [547, 579, 609], "novic": 481, "now": [461, 466, 477, 481, 483, 484, 486, 487, 491, 530, 531, 535, 538, 539, 540, 541, 550, 554, 569, 571, 573, 575, 578, 579, 581, 583, 585, 590, 591, 592, 593, 601, 604, 608, 609, 611, 613, 618, 622, 625, 626, 628, 630, 638, 640, 643, 647, 648, 650, 652, 654, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686], "nowaday": [571, 611], "nozero": 493, "npb": 613, "npb3": 613, "nproc": 550, "nsa": [19, 465], "nsstring": 625, "nsw": [534, 538, 545, 548, 579, 583], "nsz": 579, "nt": [495, 571, 619], "nt_amd_hsa_code_object_vers": 466, "nt_amd_hsa_hsail": 466, "nt_amd_hsa_isa_nam": 466, "nt_amd_hsa_isa_vers": 466, "nt_amd_hsa_metadat": 466, "nt_amdgpu_metadat": 466, "nth": [486, 499], "ntid": 592, "ntohl": 483, "ntradbigmip": 515, "ntradlittlemip": 515, "nuanceur": 142, "nuisanc": 538, "nul": [466, 609, 673, 684], "null": [34, 35, 55, 56, 57, 64, 65, 68, 69, 72, 73, 76, 77, 88, 89, 90, 94, 95, 96, 185, 287, 442, 461, 466, 469, 473, 483, 486, 492, 493, 529, 534, 540, 542, 544, 545, 566, 575, 579, 585, 591, 592, 593, 594, 597, 602, 607, 609, 620, 625, 628, 630, 634, 635, 646, 648, 652, 655, 669, 670, 671, 672, 673, 674, 675, 676, 683], "null_pointer_is_valid": [473, 579], "nullary": [669, 680], "nullpointerexcept": 544, "nullptr": [486, 579, 634, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676], "nullptr_t": 604, "nullunknown": 579, "num": [465, 466, 487, 489, 491, 499, 505, 518, 547, 579, 611, 630, 646], "num_arg": 579, "num_el": 579, "num_repetit": 505, "numabbrevop": 473, "numarg": [628, 676], "numb": [54, 60, 87, 114, 145, 173, 201, 244, 250, 277, 303, 397, 403, 432, 460, 464, 465, 469, 470, 472, 474, 475, 476, 477, 481, 482, 483, 485, 486, 487, 489, 491, 495, 497, 498, 499, 504, 505, 511, 512, 513, 515, 517, 518, 525, 526, 527, 529, 531, 534, 535, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 554, 555, 559, 566, 568, 571, 572, 576, 579, 581, 582, 583, 585, 590, 591, 593, 596, 597, 599, 601, 602, 604, 605, 607, 608, 609, 610, 611, 616, 618, 620, 624, 625, 626, 628, 630, 632, 635, 636, 637, 640, 641, 642, 645, 646, 649, 651, 652, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "number": [48, 54, 145, 238, 244, 391, 397, 461, 464, 466, 483, 487, 497, 513, 516, 530, 531, 535, 536, 555, 572, 575, 579, 581, 585, 591, 606, 608, 625, 634, 641, 645, 646, 651, 668, 677, 679, 686], "number1": 591, "number2": 591, "numbered": [461, 466, 473, 513, 543, 579, 586, 609, 627], "numberexpr": [669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "numberexprast": [669, 670, 671, 672, 673, 674, 675, 676], "numbering": [461, 466, 483, 579, 580, 590, 594, 648], "numberofauxsymbol": 688, "numberofcpucor": 581, "numbit": 609, "numblock": 601, "numbyt": 628, "numconst": 628, "numdirectorybyt": 601, "numel": 579, "numelt": 473, "numeltsparam": [473, 579], "numentr": 473, "numentry": 473, "numer": 142, "numeric": [48, 54, 145, 238, 244, 391, 397, 464, 477, 513, 514, 516, 530, 552, 579, 585, 604, 605, 609, 634, 636, 646, 649, 651, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "numerical": [579, 634], "numerical_limit": 626, "numerous": [478, 545, 609, 637, 646], "numexpress": 535, "numfaultingpc": 544, "numfilenam": 535, "numfunct": [544, 628], "numfunctionsinmodul": 593, "numhashbucket": 604, "numindic": 535, "numlin": 535, "numliveout": 628, "numloc": 628, "nummember": 609, "nummet": 547, "nummodul": 597, "nummodulevalu": 473, "numop": [473, 646], "numpoint": 505, "numrecord": 628, "numreg": 535, "numregionarray": 535, "numroot": 547, "numsgpr": 466, "numshadowbyt": 628, "numsourcefil": 597, "numspilledsgpr": 466, "numspilledvgpr": 466, "numstr": [668, 669, 670, 671, 672, 673, 674, 675, 676], "numstream": 601, "numthread": 593, "numval": [668, 669, 670, 671, 672, 673, 674, 675, 676], "numvar": 487, "numvgpr": 466, "numword": 620, "numxform": 609, "nutshel": 609, "nuw": [545, 579], "nuzman": [616, 645], "nval": 579, "nvcall": 480, "nvcc": 483, "nvcl": 592, "nvidi": [461, 483, 531, 539, 592], "nvptx": [550, 579, 614, 644], "nvptx64": 592, "nvt": 646, "nvvm": 579, "nvvmreflect": 592, "nw": 613, "nxv16i1": 579, "nxv46i32": 579, "nxv4i32": 579, "o": [466, 469, 471, 473, 486, 487, 489, 492, 495, 496, 498, 499, 500, 501, 503, 504, 506, 507, 509, 510, 511, 513, 515, 518, 523, 524, 525, 526, 528, 529, 530, 531, 532, 542, 550, 552, 553, 560, 565, 574, 575, 579, 581, 582, 585, 592, 593, 594, 595, 604, 607, 609, 610, 617, 620, 622, 639, 641, 646, 648, 650, 654, 655, 656, 657, 670, 671, 672, 673, 674, 675, 676, 678, 682, 683, 684, 685], "o0": [466, 492, 499, 530, 546, 556, 562, 574, 625, 642, 646, 686], "o1": [492, 530, 562, 574, 575, 581, 646], "o2": [469, 470, 479, 492, 513, 527, 530, 545, 546, 550, 575, 579, 592, 594, 606, 622, 646], "o3": [479, 492, 530, 545, 546, 550, 574, 592, 625, 639, 645, 646, 650, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676], "o4": 646, "o5": 646, "o6": 646, "o7": 646, "ob": 636, "obey": 579, "obit": 579, "obj": [492, 498, 523, 527, 540, 547, 552, 579, 619, 625, 630, 639, 640], "obj_root": 550, "objc": [504, 516, 586, 625, 627, 644], "objc_autoreleas": 579, "objc_autoreleasepoolpop": 579, "objc_autoreleasepoolpush": 579, "objc_autoreleasereturnvalu": 579, "objc_copyweak": 579, "objc_destroyweak": 579, "objc_initweak": 579, "objc_loadweak": 579, "objc_loadweakretained": 579, "objc_moveweak": 579, "objc_property": 625, "objc_releas": 579, "objc_retain": 579, "objc_retainautoreleas": 579, "objc_retainautoreleasedreturnvalu": 579, "objc_retainautoreleasereturnvalu": 579, "objc_retainblock": 579, "objc_storestrong": 579, "objc_storeweak": 579, "objcopy": [490, 507, 526], "objdump": [490, 514, 521, 522, 650], "object": [461, 469, 470, 472, 477, 479, 483, 485, 486, 488, 489, 490, 491, 492, 493, 495, 498, 499, 504, 505, 508, 511, 513, 517, 525, 527, 528, 530, 532, 534, 535, 536, 538, 540, 542, 543, 544, 546, 547, 552, 554, 555, 557, 565, 570, 571, 573, 574, 576, 578, 580, 581, 582, 585, 591, 592, 593, 594, 596, 597, 600, 602, 604, 605, 611, 622, 623, 626, 628, 631, 632, 634, 636, 639, 640, 643, 646, 648, 651, 652, 654, 655, 669, 670, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 688], "object_addr": 547, "object_error": 609, "objectbuff": 584, "objectbufferstream": 584, "objectcach": 584, "objectfil": 584, "objectimag": 584, "objectivec": 579, "objectlai": [654, 655, 656, 657], "objectlinkinglai": 655, "objfilenam": 597, "objlinkinglai": 593, "objptr": 579, "oblivious": 472, "obscur": [579, 609], "observ": [483, 486, 579, 583, 625, 626, 630, 636, 650, 677, 686], "observably": 630, "observed": [470, 513, 579, 581, 596, 597, 600, 602, 604], "obsolet": [476, 596], "obstacl": 614, "obstructing": 632, "obtain": [461, 466, 478, 483, 531, 534, 535, 536, 557, 579, 609, 623, 631, 635, 636, 646, 650, 651, 671], "obtained": [461, 466, 535, 574, 584, 589, 590, 597, 607, 609, 635, 636, 651], "obtaining": [550, 570, 583, 609], "obtus": 548, "obviat": 610, "obvious": [469, 470, 472, 477, 483, 486, 537, 538, 543, 579, 591, 602, 607, 611, 622, 625, 626, 628, 634, 669, 671, 673, 677, 682, 684, 686], "obviously": [469, 483, 530, 538, 541, 548, 572, 579, 591, 597, 607, 609, 619, 648, 669, 679, 680], "ocaml": [481, 679, 680, 681, 682, 683, 684, 685], "ocaml_lib": [681, 682, 683, 684, 685], "ocamlbuild": [680, 681, 682, 683, 684, 685], "ocamlbuild_plugin": [681, 682, 683, 684, 685], "ocamldoc": 481, "occas": [486, 599], "occasionally": [473, 531, 547, 556, 604], "occup": [29, 30, 31, 32, 43, 44, 45, 129, 130, 131, 139, 140, 218, 219, 220, 221, 233, 234, 235, 372, 373, 374, 375, 386, 387, 388, 464, 517, 601], "occupancy": 466, "occupy": 579, "occupying": 466, "occur": [461, 464, 465, 466, 473, 475, 483, 486, 487, 488, 491, 492, 495, 496, 497, 498, 503, 505, 506, 510, 513, 528, 529, 538, 540, 547, 548, 557, 560, 566, 575, 579, 580, 583, 585, 593, 607, 609, 610, 611, 621, 622, 623, 625, 626, 628, 630, 631, 636, 641, 642, 648, 669, 675, 680], "occurent": 529, "occurred": [466, 574, 575, 579, 621, 622, 625, 626], "occurrent": [473, 487, 554, 636], "occurring": [461, 538, 548, 626], "oct": [523, 589, 611], "octal": [465, 466, 514, 523, 525, 530], "octal_numb": 466, "octopus": 611, "odd": [461, 530, 538, 574, 579], "oddly": 636, "odr": [489, 579], "oeq": 579, "of": [1, 8, 13, 16, 17, 19, 48, 49, 50, 54, 56, 57, 62, 63, 64, 87, 97, 114, 117, 118, 120, 142, 143, 145, 151, 152, 173, 186, 201, 202, 203, 205, 221, 233, 235, 238, 239, 240, 244, 252, 253, 277, 288, 303, 304, 309, 314, 323, 326, 337, 344, 345, 352, 359, 360, 362, 391, 392, 393, 397, 399, 400, 405, 406, 407, 432, 443, 460, 462, 463, 466, 467, 468, 470, 471, 472, 473, 475, 477, 478, 480, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 534, 536, 537, 539, 540, 541, 542, 544, 549, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 580, 583, 584, 585, 586, 587, 588, 589, 591, 593, 594, 596, 597, 599, 600, 601, 602, 604, 605, 606, 608, 611, 612, 613, 615, 616, 617, 620, 622, 624, 627, 628, 629, 630, 631, 632, 634, 635, 637, 639, 640, 641, 642, 643, 644, 647, 649, 650, 651, 653, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 678, 679, 680, 681, 682, 683, 684, 685, 688], "of_channel": [680, 681, 682, 683, 684, 685], "of_list": [680, 681, 682, 683, 684, 685], "of_non": 675, "off": [16, 64, 65, 87, 99, 100, 117, 173, 202, 277, 326, 345, 353, 359, 407, 408, 432, 445, 446, 464, 466, 477, 479, 481, 483, 486, 495, 516, 517, 531, 538, 546, 550, 556, 568, 569, 570, 579, 590, 592, 593, 606, 609, 621, 626, 630, 637, 639, 641, 650, 651, 654, 655, 670, 671, 672, 673, 674, 675, 676, 677, 679, 681, 682, 683, 684, 685, 686], "offen": [0, 2, 3, 4, 8, 16, 117, 202, 326, 359, 466], "offens": 623, "offer": [461, 470, 547, 575, 609, 611, 612, 652], "offered": 630, "official": [482, 483, 538, 539, 588, 608, 613, 619, 621, 632, 639, 670], "officially": [531, 565, 572, 591, 605, 674, 685], "offlin": [483, 592, 632], "offload": [466, 622], "offset": [16, 17, 48, 49, 55, 56, 57, 65, 99, 100, 117, 118, 142, 143, 146, 147, 202, 203, 238, 240, 245, 246, 247, 326, 341, 353, 359, 360, 391, 393, 398, 399, 400, 408, 445, 446, 461, 463, 464, 465, 466, 473, 483, 487, 495, 504, 516, 517, 523, 525, 527, 534, 540, 542, 547, 548, 555, 557, 566, 585, 589, 591, 595, 597, 601, 602, 604, 609, 622, 624, 625, 628, 630, 637, 641, 646, 677, 686], "offset0": 466, "offset1": [466, 579], "offset11": 0, "offset12": [0, 2, 3, 4, 8, 99], "offset13": [4, 8, 353, 445], "offset16": [0, 2, 3, 4], "offset2": 579, "offset8": [0, 2, 3, 4], "offsetting": 461, "ofstream": 530, "oftc": [533, 549], "often": [466, 467, 469, 470, 472, 477, 481, 483, 485, 486, 487, 530, 531, 538, 540, 541, 543, 545, 547, 550, 553, 559, 566, 569, 570, 573, 574, 575, 579, 581, 583, 585, 592, 607, 609, 611, 617, 620, 623, 625, 626, 630, 632, 635, 636, 641, 645, 646, 650, 652, 655, 669, 671, 674, 677, 680, 682, 685, 686], "oge": 579, "ogt": 579, "oh": [672, 683], "ok": [464, 465, 477, 486, 531, 538, 560, 568, 579, 581, 591, 670, 672, 681], "okay": [486, 548, 579, 580, 608, 631, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "oland": 466, "old": [461, 469, 470, 476, 487, 499, 515, 538, 547, 550, 576, 579, 596, 604, 605, 609, 611, 614, 618, 620, 623, 625, 639, 642, 674, 675, 676, 677, 685, 686], "old_binding": 685, "old_install_nam": 507, "old_rpath": 507, "old_val": [683, 684, 685], "old_valu": 685, "oldbinding": [674, 675, 676, 685], "older": [464, 466, 470, 513, 530, 532, 538, 545, 547, 550, 559, 568, 579, 581, 587, 646], "oldest": [466, 513, 671], "oldval": [579, 672, 673, 674, 675, 676], "ole": [579, 604], "oliv": 623, "olt": 579, "omap": 597, "omiss": [466, 486, 538, 579], "omit": [466, 486, 517, 527, 529, 531, 579, 625, 628, 649], "omitted": [461, 462, 463, 466, 483, 492, 496, 497, 501, 503, 506, 513, 514, 516, 518, 528, 575, 579, 581, 593, 620, 643, 669, 672, 680, 683], "omitting": [466, 486, 607, 609, 648], "omod": [0, 2, 3, 4, 7, 8], "omp": [607, 613, 642], "once": [239, 392, 465, 466, 469, 473, 477, 478, 481, 482, 483, 485, 486, 488, 489, 491, 499, 504, 506, 509, 518, 528, 530, 531, 533, 536, 538, 540, 541, 543, 544, 547, 548, 549, 550, 552, 553, 559, 560, 565, 570, 572, 574, 575, 579, 580, 581, 582, 583, 584, 586, 591, 593, 594, 597, 604, 608, 609, 611, 612, 616, 618, 619, 621, 622, 623, 625, 626, 627, 630, 631, 632, 636, 637, 640, 643, 646, 648, 649, 650, 652, 654, 656, 669, 670, 671, 672, 674, 677, 680, 681, 682, 683, 685, 686], "one": [19, 43, 48, 49, 54, 114, 120, 139, 143, 145, 201, 205, 226, 228, 229, 233, 238, 239, 240, 244, 303, 362, 386, 391, 392, 393, 397, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 495, 499, 501, 502, 504, 505, 506, 507, 509, 511, 513, 514, 516, 517, 518, 519, 521, 522, 527, 530, 531, 534, 535, 537, 538, 539, 540, 541, 545, 546, 547, 549, 550, 552, 553, 554, 555, 558, 559, 560, 562, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 604, 605, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 646, 648, 649, 650, 651, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "one_only": 542, "oneargfp": 636, "oneargfprw": 636, "onelin": 550, "oneormor": 530, "ongoing": [538, 593, 621, 630, 649], "onlin": [461, 466, 471, 481, 482, 674, 685], "only": [16, 41, 42, 48, 54, 56, 57, 58, 60, 117, 137, 138, 145, 148, 202, 231, 232, 238, 239, 244, 248, 250, 326, 336, 342, 359, 384, 385, 391, 392, 397, 399, 400, 401, 403, 461, 464, 465, 466, 468, 469, 470, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 489, 491, 492, 493, 495, 497, 499, 501, 502, 504, 505, 507, 508, 509, 512, 513, 514, 515, 517, 518, 521, 522, 523, 526, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 550, 552, 553, 554, 555, 557, 558, 559, 566, 568, 569, 570, 571, 572, 573, 577, 578, 579, 580, 581, 582, 583, 585, 588, 589, 590, 591, 592, 593, 595, 596, 597, 599, 600, 601, 602, 604, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 625, 626, 628, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 654, 655, 656, 668, 669, 670, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "only_ascii": 581, "onlyfailsforsomexvalu": 609, "onlyfailsforsomexvalues2": 609, "onon": 579, "ons": 619, "onto": [461, 466, 483, 538, 547, 550, 561, 572, 579, 609, 625, 636, 643], "ontwo": 579, "onward": [466, 481, 569, 583], "onzero": 579, "oom": 581, "oop": 630, "op": [54, 145, 244, 397, 483, 487, 491, 495, 529, 534, 579, 585, 593, 626, 630, 634, 636, 646, 655, 669, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "op0": [473, 620], "op1": [473, 579, 620], "op2": [579, 620], "op3": [579, 620, 646], "op3val": 646, "op4": 620, "op_begin": 609, "op_end": 609, "op_iterator": 609, "op_sel": [0, 4], "op_sel_h": [0, 4], "opaqu": [472, 473, 542, 554, 593, 607, 609, 630, 655, 670], "opaqued": 579, "opc": [636, 673, 674, 675, 676], "opclass": 529, "opcod": [13, 19, 97, 120, 186, 205, 288, 323, 352, 362, 443, 461, 464, 466, 470, 483, 486, 505, 513, 529, 559, 564, 573, 577, 579, 585, 591, 609, 616, 636, 637, 646, 669, 670, 673, 674, 675, 676, 680, 681, 684], "opcode_nam": 505, "opcstr": 646, "open": [461, 476, 481, 483, 486, 488, 531, 533, 538, 552, 564, 570, 579, 586, 591, 608, 609, 611, 623, 627, 628, 630, 631, 650, 653, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "openbsd": 649, "openc": 636, "opencbit": 636, "opencl": [461, 529, 592], "opened": [486, 549], "openfil": 486, "openfileforwriting": 631, "openformattedfil": 609, "opengl": [677, 686], "opening": [579, 580, 620, 634], "openmp": [461, 466, 481, 487, 529, 538, 579, 611, 614, 632, 642], "openmp4": 616, "openorcreatefileforwriting": 631, "openpow": 532, "opensourc": 581, "openssl": 581, "openwork": 630, "oper": [21, 22, 26, 27, 28, 29, 30, 33, 34, 35, 54, 114, 122, 123, 126, 127, 128, 129, 130, 145, 201, 207, 208, 211, 212, 213, 218, 219, 244, 303, 335, 364, 365, 369, 370, 371, 372, 373, 376, 377, 378, 397, 460, 464, 469, 470, 480, 483, 492, 493, 509, 512, 513, 515, 521, 522, 526, 529, 531, 532, 534, 535, 540, 541, 544, 547, 550, 554, 560, 562, 575, 581, 590, 591, 593, 594, 607, 611, 615, 616, 618, 622, 625, 630, 634, 636, 637, 645, 646, 650, 654, 655, 671, 672, 673, 674, 678, 679, 682, 683, 684, 685], "operand": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 467, 473, 475, 483, 486, 487, 497, 513, 516, 540, 541, 542, 548, 554, 555, 556, 557, 559, 561, 562, 575, 590, 591, 607, 609, 614, 616, 618, 625, 634, 635, 636, 670, 673, 674, 675, 676, 681, 684, 685], "operand0": [463, 466], "operand1": [463, 466], "operand_type_list_end": 646, "operandlist": 636, "operandmap": 646, "operandsiz": 636, "operandty": 483, "operandtyp": 646, "operandv": [673, 674, 675, 676], "operat": [461, 463, 464, 465, 470, 478, 480, 483, 531, 535, 544, 548, 564, 579, 593, 609, 615, 620, 636, 645, 646, 648, 652, 671, 682], "operated": [472, 579], "operating": [464, 472, 481, 483, 495, 532, 543, 559, 579, 581, 592, 622, 626, 631, 632, 648, 649, 675, 677, 686], "operating_system": 579, "operatively": 643, "operator": [473, 475, 483, 486, 487, 495, 535, 548, 566, 579, 591, 607, 609, 622, 625, 634, 635, 646, 652, 654, 668, 669, 670, 671, 672, 675, 676, 677, 678, 679, 680, 681, 682, 683, 686, 687], "opmap": 636, "opmapbit": 636, "opnam": 646, "opnod": 646, "opportunit": [564, 593, 611, 645, 646], "opportunity": [468, 479, 534, 537, 545, 560, 579, 593, 607, 612, 614, 655, 671, 682], "oppos": 614, "opposed": [486, 530, 542, 550, 554, 559, 572, 579, 580, 600, 610, 614, 683], "opposing": 614, "opposit": [486, 495, 580, 609, 614, 625, 634, 649, 652], "opprefix": 636, "opprefixbit": 636, "oprofil": [481, 606], "opsiz": 636, "opsize32": 636, "opsizebit": 636, "opt": [0, 2, 3, 4, 8, 462, 469, 477, 486, 488, 490, 516, 529, 538, 543, 547, 550, 552, 571, 574, 575, 579, 583, 590, 592, 607, 609, 617, 626, 630, 640, 641, 645, 655, 671, 672, 674, 675, 682, 683, 685], "opt1": 516, "opt2": 516, "opta": 530, "optb": 530, "optbisect": 594, "opted": [470, 547], "optforfuzzing": [473, 579], "optimal": [463, 466, 478, 483, 513, 545, 579, 606, 616, 632, 645], "optimally": 625, "optimis": [579, 607, 643, 682], "optimised": 579, "optimistic": [513, 564, 579], "optimistically": 513, "optimiz": [461, 468, 469, 472, 473, 475, 477, 478, 479, 481, 486, 488, 489, 490, 492, 493, 499, 513, 516, 518, 519, 529, 530, 532, 534, 535, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 555, 560, 564, 572, 573, 575, 577, 578, 580, 583, 591, 592, 593, 606, 609, 614, 615, 616, 617, 618, 628, 629, 630, 635, 640, 641, 642, 643, 645, 646, 647, 648, 651, 653, 654, 656, 657, 670, 672, 673, 674, 675, 676, 678, 679, 681, 683, 684, 685, 687], "optimizationbit": 530, "optimizationlevel": 530, "optimizationlist": 530, "optimizationremarkemitt": 614, "optimized": [461, 468, 470, 481, 483, 487, 492, 518, 528, 529, 543, 545, 550, 563, 564, 569, 579, 580, 582, 590, 592, 606, 609, 610, 618, 642, 655, 656, 671, 676, 682], "optimizefunct": 656, "optimizelai": [655, 656, 657], "optimizemodul": [655, 656, 657], "optimizer": [470, 477, 488, 545, 548, 578, 579, 625, 674, 685], "optimizing": [461, 470, 473, 477, 483, 535, 545, 562, 567, 590, 606, 607, 616, 628], "opting": 594, "option": [66, 153, 254, 409, 461, 468, 469, 472, 473, 477, 482, 483, 486, 490, 494, 502, 508, 511, 520, 531, 534, 535, 539, 543, 546, 550, 552, 557, 565, 568, 569, 570, 571, 574, 576, 579, 582, 584, 585, 587, 591, 593, 594, 606, 607, 608, 610, 611, 612, 616, 617, 618, 619, 620, 625, 626, 632, 634, 635, 636, 637, 642, 645, 646, 648, 649, 650, 669, 670, 671, 675, 681, 683, 684, 685], "optional": [16, 41, 42, 54, 58, 64, 65, 87, 100, 114, 117, 137, 138, 145, 148, 173, 201, 202, 231, 232, 244, 248, 277, 303, 326, 336, 342, 345, 359, 384, 385, 397, 401, 407, 408, 432, 446, 460, 461, 462, 463, 464, 466, 469, 475, 482, 483, 487, 491, 493, 494, 495, 504, 513, 514, 530, 542, 547, 558, 559, 560, 566, 579, 580, 581, 585, 609, 610, 615, 617, 620, 622, 636, 637, 639, 641, 642, 648, 652, 670, 672, 673, 674, 675, 676, 681, 683, 685], "optional_dir": 610, "optionaldbgheadersiz": 597, "optionally": [26, 27, 28, 29, 30, 33, 34, 35, 126, 127, 128, 129, 130, 211, 212, 213, 218, 219, 335, 369, 370, 371, 372, 373, 376, 377, 378, 461, 473, 483, 499, 513, 530, 531, 535, 542, 550, 565, 574, 579, 585, 587, 609, 611, 612, 622, 628, 630, 636, 646, 650, 652, 670, 674, 681, 685], "options_pars": 566, "optlevel": 530, "optnon": [473, 579, 594, 647], "optnum": 530, "optsiz": [473, 557, 579], "optyp": 646, "optzn": [574, 671, 672, 673, 674, 682, 683, 684, 685], "opval": 646, "op\u00e9rand": [61, 142, 150, 251, 343, 404], "or": [16, 19, 24, 25, 29, 30, 32, 43, 45, 46, 47, 48, 49, 50, 54, 60, 65, 78, 87, 98, 99, 100, 114, 117, 120, 124, 125, 129, 130, 141, 142, 143, 145, 162, 173, 187, 201, 202, 205, 209, 210, 218, 219, 221, 233, 235, 236, 237, 238, 239, 240, 244, 250, 266, 277, 289, 303, 304, 309, 314, 326, 337, 353, 359, 362, 367, 368, 372, 373, 375, 386, 388, 389, 390, 391, 392, 393, 397, 403, 408, 421, 432, 444, 445, 446, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 525, 526, 527, 528, 529, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 601, 602, 604, 605, 607, 608, 609, 610, 614, 615, 616, 618, 619, 620, 621, 622, 623, 625, 627, 628, 629, 630, 631, 632, 634, 635, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "orbit": [673, 684], "orc": [536, 617, 654, 656, 657, 671, 672, 673, 674, 676, 687], "orcjit": [654, 655, 656, 657, 671, 672, 673, 674, 676], "orcv1": 617, "orcv2": 617, "ord": 579, "order": [114, 201, 303, 460, 461, 462, 463, 469, 470, 472, 473, 478, 479, 481, 483, 485, 487, 491, 509, 513, 514, 515, 517, 526, 528, 530, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 550, 552, 555, 566, 573, 575, 577, 580, 581, 582, 583, 585, 590, 591, 593, 594, 597, 601, 602, 605, 607, 609, 610, 611, 614, 616, 620, 622, 625, 626, 628, 630, 631, 634, 635, 636, 640, 641, 643, 645, 646, 647, 648, 656, 669, 670, 671, 672, 674, 678, 679, 680, 681, 682, 683, 685], "ordered": [461, 466, 486, 530, 545, 555, 573, 579, 591, 609, 627, 634, 636, 651, 672, 683], "ordered_append_term": 466, "ordering": [461, 466, 479, 483, 487, 502, 513, 530, 559, 573, 590, 591, 607, 609, 611, 625, 642, 651], "ordinal": 530, "ordinary": [461, 534, 535, 579, 593, 652], "ore": 614, "org": [476, 481, 484, 486, 507, 509, 511, 515, 516, 523, 525, 526, 535, 538, 546, 549, 550, 565, 567, 569, 570, 571, 572, 573, 581, 585, 588, 608, 611, 614, 615, 619, 621, 639, 652, 654, 655, 656, 657, 670], "organiz": [461, 466, 538, 540, 549, 588, 591, 610, 623, 625, 671, 682], "organized": [461, 464, 466, 540, 604, 630], "organizer": [588, 621], "organizing": 482, "ori": 483, "orient": [484, 677, 686], "oriented": [486, 573, 609, 613, 625, 627], "orig": 579, "origin": [484, 550, 553, 611], "original": [461, 465, 478, 483, 485, 486, 487, 499, 517, 534, 538, 540, 548, 575, 579, 583, 593, 597, 602, 608, 609, 611, 614, 616, 621, 625, 626, 630, 632, 636, 637, 642, 643, 649, 654, 655, 676], "originally": [483, 538, 540, 579, 623, 627, 630, 631, 636], "originat": [461, 616], "originating": [486, 631], "originput": 530, "orl": 626, "orq": 626, "orr": 579, "orthogonal": 470, "orthogonality": 593, "os": [470, 471, 479, 483, 541, 547, 550, 568, 572, 579, 609, 626, 635, 652], "oscillator": 651, "oso": 489, "oss": [546, 572, 581, 611], "ostream": [486, 609], "osuosl": 567, "other": [1, 5, 8, 19, 114, 117, 120, 201, 205, 303, 362, 460, 463, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 499, 501, 502, 505, 507, 509, 513, 514, 515, 516, 523, 525, 526, 527, 528, 529, 531, 533, 534, 535, 537, 538, 539, 540, 541, 542, 547, 549, 550, 552, 554, 557, 558, 559, 560, 562, 564, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 597, 600, 601, 602, 604, 605, 607, 610, 611, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 687], "other_funct": 626, "otherspecialsquar": 573, "othervt": 646, "otherwis": [115, 116, 461, 466, 468, 470, 473, 474, 476, 477, 478, 481, 485, 486, 487, 488, 489, 491, 492, 493, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 509, 510, 512, 513, 515, 516, 521, 522, 523, 525, 526, 528, 529, 530, 531, 534, 535, 538, 540, 545, 547, 565, 567, 568, 571, 572, 573, 574, 579, 580, 582, 583, 591, 593, 594, 597, 599, 605, 607, 608, 609, 611, 621, 625, 626, 630, 635, 636, 642, 648, 652, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "otp": 579, "ottenstein": 537, "ought": 486, "our": [468, 479, 481, 482, 483, 484, 485, 486, 530, 531, 534, 538, 539, 547, 550, 574, 582, 591, 592, 593, 602, 605, 606, 609, 611, 621, 622, 623, 625, 626, 630, 632, 645, 647, 648, 650, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "ourfpm": 676, "ourfunctionpass": 609, "ourselv": [486, 592, 605, 625, 647, 654], "out": [461, 466, 468, 469, 470, 471, 472, 473, 476, 477, 482, 483, 485, 486, 487, 489, 491, 493, 495, 497, 499, 504, 505, 508, 512, 513, 514, 516, 523, 530, 531, 534, 536, 537, 538, 539, 540, 541, 546, 547, 550, 552, 553, 555, 559, 566, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 581, 583, 585, 590, 591, 593, 596, 600, 601, 605, 607, 608, 609, 611, 615, 616, 618, 619, 621, 622, 623, 625, 626, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 646, 647, 648, 649, 650, 651, 652, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687], "out_cpusubtyp": 582, "out_cputyp": 582, "out_of_bound": 482, "outcom": [575, 623], "outdated": [571, 640], "outercolumn": 579, "outermost": [461, 579], "outerrow": 579, "outerstructty": 579, "outfil": 524, "outgoing": [474, 579], "outlin": [534, 540, 626, 652], "outlined": [480, 483, 534, 538, 540, 648], "outliv": [579, 581, 607], "outloop": [672, 673, 674, 675, 676, 685], "outlying": 540, "outoperandlist": [636, 637, 646], "output": [14, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 70, 71, 72, 73, 74, 75, 76, 77, 106, 107, 108, 109, 115, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 154, 155, 156, 157, 158, 159, 160, 161, 193, 194, 195, 196, 211, 212, 213, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 258, 259, 260, 261, 262, 263, 264, 265, 295, 296, 297, 298, 308, 313, 324, 327, 328, 329, 330, 335, 357, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 413, 414, 415, 416, 417, 418, 419, 420, 452, 453, 454, 455, 464, 466, 468, 469, 471, 474, 477, 480, 481, 483, 486, 487, 488, 489, 492, 493, 494, 495, 496, 499, 500, 501, 502, 503, 505, 506, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 537, 541, 542, 547, 550, 552, 553, 555, 559, 566, 569, 574, 575, 577, 585, 586, 590, 592, 607, 609, 616, 617, 618, 619, 620, 622, 625, 627, 634, 636, 637, 639, 641, 642, 646, 647, 648, 649, 650, 651, 655, 669, 671, 672, 673, 674, 675, 676, 680, 682, 683, 684, 685, 688], "outputdebuginfo": 530, "outputfilenam": 530, "outputting": 517, "outright": [548, 632], "outsid": [466, 469, 484, 530, 534, 538, 542, 548, 549, 565, 566, 570, 579, 580, 581, 583, 590, 591, 607, 609, 611, 619, 625, 626, 628, 630, 631, 636, 640, 643, 655, 670, 681], "outsider": 486, "outstanding": [48, 114, 201, 238, 303, 391, 460, 485, 572], "outstream": 547, "outweigh": 614, "over": [461, 466, 469, 472, 473, 476, 477, 478, 482, 483, 485, 487, 505, 513, 517, 529, 531, 534, 536, 537, 538, 548, 559, 560, 566, 569, 573, 579, 580, 581, 582, 583, 588, 590, 607, 608, 611, 623, 625, 626, 629, 630, 635, 649, 652, 655, 656, 657, 668, 670, 672, 673, 674, 676, 677, 678, 679, 681, 683, 684, 685, 686], "overall": [476, 479, 483, 485, 516, 537, 538, 540, 547, 548, 569, 579, 605, 608, 626, 632, 634, 635, 672, 683], "overapproxim": 583, "overboard": 486, "overestimating": 579, "overflow": [461, 465, 466, 487, 538, 545, 581, 618, 622, 626, 651], "overflowed": 579, "overhaul": 572, "overhead": [543, 547, 566, 577, 579, 589, 593, 609, 611, 616, 651, 656, 671, 682], "overlaid": 590, "overlap": [461, 482, 483, 487, 513, 579, 583, 632, 645, 648], "overlapping": [461, 469, 487, 513, 578, 579, 625, 628], "overlay": [466, 539, 597], "overload": [486, 531, 579, 635, 648], "overloaded": [531, 541, 573, 579, 592, 609, 630, 635, 646], "overloading": [579, 609, 673, 684], "overly": [466, 538, 614], "overrid": [466, 479, 481, 482, 483, 492, 493, 499, 503, 515, 518, 530, 531, 566, 573, 579, 581, 591, 592, 607, 609, 622, 626, 646, 648, 655, 657, 670, 671, 672, 673, 674, 675, 676], "overridden": [469, 487, 530, 550, 579, 581, 620, 646], "overriden": 636, "overriding": [470, 491, 492, 493, 537, 557, 625, 634, 648, 676], "overrun": 566, "oversized": 609, "overstat": 461, "overtaking": 632, "overview": [462, 480, 481, 483, 513, 529, 530, 532, 533, 549, 553, 561, 584, 586, 589, 636, 638, 646, 648, 672, 683], "overwhelm": 478, "overwhelming": [678, 679], "overwrit": [530, 610, 628, 649], "overwriting": [610, 626, 628], "overwritten": [483, 540, 579, 622, 628], "overwrot": 466, "ovl": 597, "own": [461, 466, 473, 474, 481, 482, 483, 485, 486, 495, 530, 531, 535, 537, 538, 539, 540, 541, 547, 550, 565, 566, 570, 572, 573, 575, 579, 581, 590, 593, 595, 596, 605, 607, 608, 609, 610, 611, 614, 616, 620, 621, 623, 625, 628, 631, 632, 634, 635, 636, 638, 640, 641, 646, 647, 648, 670, 671, 673, 674, 677, 679, 684, 685, 686], "owned": [584, 593], "owner": [483, 485, 495, 533, 572, 608, 611], "ownership": [538, 593, 609, 657, 671, 672, 673, 674, 675, 676], "owning": [466, 609], "oxid": 623, "p": [461, 464, 466, 469, 472, 481, 483, 486, 487, 491, 495, 499, 504, 514, 515, 516, 521, 522, 526, 527, 528, 536, 539, 548, 566, 577, 579, 583, 592, 609, 611, 630, 636, 643, 646, 650, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "p0": [59, 149, 249, 402, 554, 555, 559, 579], "p0928": 626, "p0a10s_union": 579, "p0f_isvoidf": 630, "p0i32": 487, "p0i64": 487, "p0i8": [579, 592], "p0s_struct": 579, "p0s_union": 579, "p0v16f32": 579, "p0v2f64": 579, "p0v4i32": 579, "p0v4p0f_i32f": 579, "p0v8f64": 579, "p0v8i32": 579, "p0v8p0f64": 579, "p0v8p0f_i32f": 579, "p1": [555, 559, 579, 590, 592, 625], "p10": [59, 149, 249, 402, 618], "p15": [579, 592], "p16": 592, "p17": 592, "p18": 592, "p19": 592, "p1i8": [592, 630], "p2": [487, 554, 579, 590, 592, 625], "p20": [59, 149, 249, 402, 592], "p2align": [466, 626], "p3": [487, 590, 592, 625], "p3i8": 592, "p4": 592, "p4i8": 592, "p5": 592, "p5i8": 592, "p7": 579, "p_arch": 531, "p_reg": 483, "pa": 609, "pack": [466, 483, 535, 572, 616, 618, 619, 670, 681], "packag": [479, 481, 531, 533, 538, 539, 550, 567, 568, 570, 571, 572, 610, 619, 623, 639, 644], "package_string": 481, "packaged": [474, 531, 572, 612], "packager": [606, 623], "packaging": [479, 549], "packed": [32, 43, 45, 221, 233, 235, 375, 386, 388, 463, 466, 473, 513, 545, 579, 611, 618], "packet": [466, 634], "packetiz": 529, "packetizing": 483, "packing": [214, 216, 217, 221, 226, 228, 229, 233, 235, 464, 483], "pact": 616, "pad": [464, 534, 535, 540, 578, 579, 585, 651], "padded": [466, 596], "padding": [466, 473, 517, 554, 556, 579, 597, 628], "padding1": 597, "padding2": 597, "padparam": 540, "padu": 537, "pag": [466, 468, 479, 481, 486, 490, 517, 530, 532, 533, 538, 542, 544, 547, 550, 552, 566, 572, 584, 585, 589, 601, 605, 608, 609, 611, 614, 617, 618, 620, 625, 626, 633, 636, 638, 641, 645, 653, 670], "paging": [466, 630], "paid": 632, "pain": [530, 609], "painful": [531, 536, 538, 608, 609, 632], "painlessly": 530, "pair": [461, 464, 465, 466, 469, 470, 471, 472, 483, 486, 487, 492, 501, 504, 506, 513, 521, 522, 523, 540, 542, 555, 575, 576, 579, 581, 585, 590, 591, 593, 604, 607, 609, 611, 623, 625, 630, 635, 636, 646, 651, 652, 656, 669, 672, 674, 675, 676, 680, 683], "paired": [461, 466, 470, 626], "pairwis": 469, "pamel": 613, "pan": [608, 626], "pand": 639, "pandaboard": 568, "pap": [486, 531, 537, 590, 626], "paper": [471, 483, 532, 537, 609], "papertrail": 489, "paradigm": [548, 609], "paragraph": [486, 538, 586, 591, 627], "parallel": [461, 468, 481, 483, 487, 491, 505, 513, 550, 579, 590, 606, 610, 611, 614, 642], "parallel_dir": 610, "parallel_loop_access": 642, "parallelism": [513, 567, 580, 613, 616, 645], "param": [0, 2, 3, 4, 96, 185, 287, 442, 466, 486, 491, 504, 547, 552, 567, 592, 681, 682, 683, 684, 685], "param1": 609, "param2": 609, "paramattr": 473, "paramet": [59, 96, 149, 185, 249, 287, 402, 442, 461, 464, 473, 475, 478, 481, 483, 486, 491, 495, 505, 512, 530, 531, 534, 540, 542, 547, 576, 584, 591, 592, 607, 609, 615, 618, 622, 625, 630, 634, 646, 648, 651, 652, 670, 681], "parameter": [461, 466, 473, 478, 481, 482, 483, 486, 491, 504, 505, 512, 530, 534, 547, 548, 576, 579, 581, 591, 607, 609, 630, 636, 637, 646, 651, 670, 681], "parameteriz": 557, "parameterized": 636, "parameterless": 585, "paramidx": 473, "paramidx0": 473, "paramidx1": 473, "paramty": 473, "parenexpr": [669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "parent": [466, 474, 482, 486, 491, 504, 553, 573, 579, 609, 611, 623, 634, 635, 636, 672, 683], "parent_scop": 482, "parentclasslist": 636, "parentclasslistn": 636, "parenthandl": 579, "parenthes": [464, 487, 491, 579, 634, 635, 636, 669, 680], "parentmulticlasslist": 636, "parentty": 579, "parity": 566, "parlanc": [482, 590, 643, 668, 679], "pars": [461, 473, 487, 491, 494, 504, 512, 516, 527, 529, 531, 541, 543, 546, 550, 577, 579, 581, 582, 584, 585, 620, 625, 628, 630, 634, 635, 636, 637, 646, 652, 668, 670, 671, 673, 674, 675, 676, 677, 678, 679, 681, 682, 684, 685, 686, 687], "parsabl": [518, 630], "parse_arg": [680, 681, 682, 683, 684, 685], "parse_bin_rh": [680, 681, 682, 683, 684, 685], "parse_binary_precedent": [684, 685], "parse_definit": [680, 681, 682, 683, 684, 685], "parse_expr": [680, 681, 682, 683, 684, 685], "parse_extern": [680, 681, 682, 683, 684, 685], "parse_failed": 609, "parse_ident": [680, 681, 682, 683, 684, 685], "parse_operator": [684, 685], "parse_primary": [680, 681, 682, 683, 684, 685], "parse_prototyp": [680, 681, 682, 683, 684, 685], "parse_toplevel": [680, 681, 682, 683, 684, 685], "parse_unary": [684, 685], "parse_var_in": 685, "parse_var_nam": 685, "parseabl": [579, 630], "parsebinoprh": [669, 670, 671, 672, 673, 674, 675, 676], "parsecommandlineopt": 650, "parsed": [461, 473, 483, 487, 504, 512, 513, 529, 530, 531, 541, 566, 579, 620, 622, 630, 634, 635, 636, 651, 652, 669, 671, 673, 674, 680, 681, 682, 683, 684, 685], "parsedattrinfo": 634, "parsedefinit": [669, 670, 671, 672, 673, 674, 675, 676], "parseexpress": [669, 670, 671, 672, 673, 674, 675, 676], "parseextern": [669, 670, 671, 672, 673, 674, 675, 676], "parseforexpr": [672, 673, 674, 675, 676], "parseidentifierexpr": [669, 670, 671, 672, 673, 674, 675, 676], "parseifexpr": [672, 673, 674, 675, 676], "parsenumberexpr": [669, 670, 671, 672, 673, 674, 675, 676], "parseparenexpr": [669, 670, 671, 672, 673, 674, 675, 676], "parsepasspipelin": 546, "parsepath": 593, "parseprimary": [669, 670, 671, 672, 673, 674, 675, 676, 684], "parseprototyp": [669, 670, 671, 672, 673, 674, 675, 676], "parser": [479, 513, 546, 581, 634, 669, 680], "parserclass": 530, "parsesubtargetfeatur": 646, "parsetoplevelexpr": [669, 670, 671, 672, 673, 674, 675, 676], "parsetypetablebody": 541, "parseunary": [673, 674, 675, 676, 684], "parsevalid": 650, "parsevarexpr": [674, 675, 676], "parsing": [461, 473, 482, 491, 527, 529, 531, 579, 580, 609, 620, 625, 634, 635, 644, 652, 670, 671, 672, 673, 674, 675, 676, 678, 679, 681, 682, 683, 684, 685], "part": [461, 464, 465, 466, 467, 469, 470, 472, 473, 476, 477, 479, 480, 481, 482, 483, 486, 487, 488, 489, 491, 500, 509, 513, 529, 530, 531, 534, 535, 537, 538, 540, 545, 546, 547, 548, 550, 552, 556, 557, 566, 569, 570, 573, 579, 581, 582, 583, 588, 589, 590, 591, 593, 596, 601, 602, 607, 609, 611, 612, 613, 616, 618, 621, 623, 625, 626, 629, 630, 632, 634, 637, 639, 641, 642, 643, 646, 647, 648, 649, 650, 652, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "partial": [461, 466, 483, 518, 529, 579, 580, 581, 609, 618, 625, 628, 642, 652], "partialali": 469, "partialinlin": 618, "partially": [461, 464, 579, 607, 613, 622, 642, 651], "particip": 484, "participat": [466, 484, 485, 579, 608, 609, 611, 612, 623, 641], "participated": [608, 611, 623], "participating": [537, 538, 611], "particlefilt": 613, "particular": [461, 464, 469, 470, 471, 473, 476, 477, 481, 483, 485, 486, 491, 499, 517, 529, 530, 531, 534, 535, 538, 540, 545, 547, 548, 550, 553, 554, 557, 559, 560, 569, 573, 574, 575, 578, 579, 581, 583, 584, 590, 591, 592, 593, 596, 597, 599, 601, 602, 607, 609, 611, 613, 616, 618, 620, 621, 623, 625, 626, 628, 630, 635, 636, 637, 641, 643, 646, 648, 649, 651, 669, 671, 674, 680, 682, 685], "particularly": [461, 470, 486, 487, 504, 545, 550, 555, 557, 560, 567, 579, 604, 609, 611, 623, 626, 630, 635, 646, 648, 649, 651], "partit": [477, 515, 568, 580, 590], "partitioned": [483, 492, 590], "partitioning": [491, 590, 656], "partn": 609, "party": [461, 486, 550, 610, 621, 623], "parzyszek": 614, "parzyszekacronym": 614, "parzyszekacronym2": 614, "parzyszekdistinguish": 614, "pascal": 579, "pass": [461, 466, 468, 470, 472, 474, 477, 478, 483, 487, 488, 490, 491, 492, 493, 495, 499, 502, 513, 516, 528, 529, 530, 531, 533, 538, 540, 541, 542, 543, 546, 547, 548, 550, 552, 553, 556, 557, 558, 559, 560, 561, 562, 564, 565, 569, 570, 573, 574, 578, 579, 580, 581, 582, 583, 584, 587, 590, 592, 604, 609, 610, 611, 614, 616, 617, 618, 619, 620, 625, 628, 636, 639, 640, 641, 643, 644, 646, 650, 652, 654, 655, 656, 657, 669, 670, 672, 673, 674, 675, 676, 677, 680, 685, 686], "passag": 486, "passbuild": [546, 647, 648], "passcon": 534, "passed": [461, 466, 468, 469, 472, 478, 481, 482, 483, 485, 491, 492, 493, 495, 505, 518, 530, 531, 534, 536, 539, 540, 544, 546, 547, 548, 550, 572, 574, 576, 577, 578, 579, 580, 581, 584, 591, 593, 594, 597, 609, 616, 620, 622, 624, 626, 628, 629, 630, 634, 635, 636, 639, 641, 642, 643, 646, 650, 655, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "passinfomixin": 647, "passing": [466, 468, 471, 472, 481, 482, 483, 486, 487, 530, 534, 540, 542, 550, 557, 574, 578, 579, 581, 584, 593, 607, 618, 626, 635, 637, 641, 654, 655, 656, 671, 677, 686], "passinstrument": 647, "passiv": 594, "passmanag": [530, 584, 609, 647, 650, 655, 671, 675, 682, 683, 684, 685], "passmanagerbas": [646, 648], "passmanagerbuild": [592, 648], "passmanagerimpl": 650, "passnam": [528, 609], "passopt": 648, "passpluginlibraryinfo": 648, "passregistry": 647, "passt": 647, "passthru": 579, "password": [567, 611, 623], "past": [461, 466, 486, 548, 563, 579, 580, 608, 609, 611, 616, 618, 625, 630, 646, 651, 673, 676, 684], "pat": [483, 637, 646], "patch": [471, 486, 545, 549, 552, 567, 569, 579, 580, 593, 608, 609, 615, 617, 623, 630, 632, 641, 649, 650, 671, 676, 682], "patch_premain": [649, 650], "patch_status": 649, "patchabl": [547, 579, 628, 630], "patched": [547, 617, 628], "patching": [516, 544, 547, 572, 579, 628, 630, 649, 651], "patchpoint": [579, 630], "patfrag": 646, "path": [461, 467, 468, 469, 470, 478, 479, 481, 482, 486, 488, 489, 491, 492, 493, 495, 498, 499, 504, 505, 508, 509, 515, 516, 518, 519, 527, 529, 531, 535, 538, 540, 542, 544, 545, 547, 550, 552, 565, 568, 569, 570, 571, 581, 583, 592, 593, 597, 607, 609, 610, 611, 620, 625, 626, 630, 631, 632, 639, 640, 641, 645, 650, 674, 685], "path_to_clang": 468, "path_to_llvm": 550, "path_to_sample_profil": 518, "pathnam": [498, 550], "pathological": 609, "pathsep": [491, 641], "patient": [484, 648], "patleaf": 646, "pattern": [0, 2, 3, 4, 461, 468, 470, 472, 482, 483, 490, 491, 499, 505, 515, 526, 529, 530, 534, 537, 541, 548, 554, 557, 559, 560, 566, 579, 592, 601, 609, 616, 622, 625, 626, 632, 634, 635, 636, 637, 641, 646, 650, 656, 670, 679, 680], "patternmatch": 615, "paul": [614, 623, 626], "paus": [547, 611, 655], "pausing": 469, "pay": [486, 558, 572, 641, 646], "paying": [538, 626], "payload": [483, 535, 579, 651], "pb": [609, 648], "pbqp": [483, 492], "pc": [49, 143, 240, 393, 461, 465, 466, 483, 512, 516, 540, 544, 579, 581, 618, 624, 626, 639, 641, 645, 646], "pc_32": 466, "pc_64": 466, "pch": [529, 625], "pcre": 581, "pcre2": 581, "pct": 517, "pd": 636, "pdat": [542, 597, 618], "pdb": [481, 490, 595, 596, 600, 601, 617, 625], "pdbdllrbld": 597, "pdbdllversion": 597, "pdbfilepathnameindex": 597, "pdbraw_featuresig": 602, "pdbstreamhead": 602, "pdbstreamvers": 602, "pdbutil": 490, "pdf": [471, 626], "pdg": 537, "pdgbuild": 537, "pe": [532, 547, 597, 602], "pear": 634, "peculiar": 636, "pedantic": 481, "peek": [680, 681, 682, 683, 684, 685], "peephol": [483, 541, 575, 609, 671, 672, 673, 674, 682, 683, 684, 685], "peform": 472, "pen": 613, "penalty": [479, 579, 609], "pending": [533, 536, 550, 623, 632, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "pentium": [550, 646], "penultimat": 646, "peopl": [476, 479, 483, 484, 485, 486, 530, 533, 538, 541, 543, 548, 549, 550, 572, 579, 588, 608, 611, 619, 623, 626, 631, 648, 654, 677, 679, 686], "pep": 614, "per": [29, 30, 48, 129, 130, 218, 219, 238, 372, 373, 391, 461, 465, 466, 470, 473, 474, 481, 483, 497, 499, 501, 505, 509, 513, 514, 517, 530, 534, 535, 540, 547, 554, 555, 562, 566, 572, 573, 579, 581, 582, 585, 589, 590, 592, 608, 609, 611, 620, 622, 625, 626, 628, 630, 632, 634, 635, 640, 641, 650, 652, 654, 655, 671, 682, 687], "perceiv": [677, 686], "perceived": [537, 632], "percent": [469, 499], "percentag": [497, 499, 512, 517, 518, 566, 609], "perf": [468, 471, 481, 519, 542, 639], "perf_test": 613, "perfect": [472, 518, 538, 609], "perfectly": [483, 485, 486, 487, 517, 543, 548, 566, 579, 625, 669, 680], "perfectlyrightalign": 566, "perforc": 461, "perform": [461, 466, 468, 469, 470, 471, 472, 477, 479, 480, 481, 482, 483, 485, 486, 487, 491, 492, 495, 501, 505, 509, 516, 518, 527, 528, 529, 530, 534, 538, 540, 541, 544, 546, 547, 548, 550, 551, 554, 555, 559, 560, 564, 566, 568, 569, 572, 578, 579, 580, 581, 582, 583, 584, 591, 592, 593, 594, 607, 609, 610, 611, 612, 614, 616, 619, 620, 622, 623, 625, 629, 630, 631, 634, 636, 639, 641, 642, 643, 646, 647, 648, 649, 654, 656, 674, 675, 678, 685], "performed": [461, 465, 466, 469, 470, 477, 481, 482, 483, 515, 530, 539, 545, 547, 555, 579, 582, 585, 592, 593, 594, 597, 607, 609, 611, 620, 625, 626, 630, 634, 636, 641, 643, 646, 655, 670, 681], "performing": [461, 466, 472, 478, 479, 483, 486, 505, 527, 540, 548, 573, 579, 581, 594, 607, 609, 616, 622, 630, 634, 645, 646, 677, 686], "perfscript": 519, "perfunctionstat": 650, "perhap": [461, 469, 547, 562, 579, 591, 602, 609, 611, 625], "period": [477, 480, 485, 486, 505, 538, 579, 623, 632, 641], "periodic": 581, "periodically": [538, 547, 581, 649], "peripheral": 538, "perl": 547, "perldoc": 550, "perm": [60, 250, 403, 487, 492, 538, 542, 547, 550, 567, 579, 584, 609, 641, 654, 674, 685], "permanent": [461, 621, 623, 656], "permanently": [559, 585], "permiss": [60, 250, 403, 495, 538, 584, 621], "permissibl": 579, "permissively": 538, "permit": [483, 579, 609, 614, 674, 675, 676, 685], "permitted": [523, 542, 555, 559, 579], "permitting": 580, "permut": [464, 579], "perpetual": 649, "perpetually": 538, "persist": [482, 534, 609], "persisted": 539, "persistent": [579, 581], "persisting": 484, "person": [484, 485, 574, 586, 608, 621, 623, 627, 652, 655], "personal": [484, 538], "personalit": 540, "personality": [473, 540, 580], "personalityfn": 473, "personally": 484, "personlist": 652, "perspect": [469, 484, 534, 540, 573, 579, 621, 630, 648], "pertain": [461, 538, 579], "pertaining": [540, 623, 625], "pertinent": 632, "pervas": 609, "pervasively": [573, 678], "pervert": 637, "pessimiz": [544, 607, 609], "pet": 623, "peut": [61, 142, 150, 251, 343, 404], "peuvent": 142, "pf0": 591, "pf1": 591, "pg0": 591, "pg1": 591, "pgo": [479, 518, 593, 605, 618, 620, 626, 644], "ph": 579, "phab": 611, "phabricator": [485, 533, 538, 549, 550, 611, 614, 615, 632], "phas": [488, 529, 540, 547, 559, 572, 579, 594, 609, 612, 615, 619, 655, 669, 673, 680, 684], "phase3": [572, 619], "phi": [473, 483, 497, 534, 540, 554, 575, 583, 607, 625, 645, 672, 673, 674, 675, 676, 683, 684, 685], "phid": 486, "phielimin": 483, "phieliminationid": 483, "philip": 614, "philosophy": [575, 612, 644], "phinod": [486, 590, 672, 673, 674, 675, 676], "phis": [486, 579, 590], "phoronix": 613, "php": [608, 613], "phras": 486, "phrasing": 482, "physical": [461, 466, 484, 513, 554, 556, 579, 585, 597, 609, 621, 625, 630, 646], "physically": [479, 554, 621], "physreg": 483, "pi": [465, 537, 547, 609, 622], "pi8": 643, "pic": [483, 493, 571, 574, 585, 625, 646], "pick": [461, 472, 481, 483, 486, 493, 547, 548, 553, 562, 570, 571, 572, 574, 579, 608, 609, 611, 612, 630, 646, 682], "picked": [513, 639], "picking": [486, 612], "pictur": [548, 605, 651, 670, 681], "picus": [563, 614], "picusacronym": 614, "pid": 466, "piec": [461, 473, 477, 479, 482, 483, 485, 486, 505, 538, 545, 548, 552, 569, 574, 579, 612, 625, 630, 636, 641, 669, 670, 672, 673, 674, 676, 678, 679, 680, 681, 683, 684, 685], "pieg": 142, "pienaar": 531, "pietro": 623, "pifft": 640, "pilipenko": 623, "ping": [485, 533, 591], "pinned": 579, "pinning": 579, "pinpoint": 611, "pinsrd": 487, "pinsrd_1": 487, "pinst": 609, "pip": [466, 487, 491, 513, 631, 639, 650], "piped": 487, "pipefail": 491, "pipelin": [466, 473, 491, 497, 513, 534, 545, 546, 554, 556, 561, 564, 575, 579, 588, 592, 620, 630, 641, 642, 646, 648, 655, 682, 683, 684, 685], "pipelined": 607, "pipelining": 648, "pipermail": [611, 614], "piping": 641, "pitcairn": 466, "pixel": [29, 30, 96, 129, 130, 185, 218, 219, 287, 372, 373, 442], "pl": [461, 650, 652], "plac": [461, 466, 467, 468, 470, 471, 472, 477, 483, 485, 486, 489, 491, 493, 515, 526, 535, 538, 539, 540, 541, 542, 545, 547, 548, 559, 560, 565, 570, 579, 585, 591, 593, 608, 609, 611, 616, 618, 619, 625, 626, 627, 628, 630, 636, 637, 641, 647, 648, 652, 669, 670, 671, 673, 674, 677, 678, 679, 681, 682, 684, 685, 686], "placed": [466, 483, 489, 491, 495, 513, 530, 534, 542, 550, 556, 567, 570, 579, 585, 611, 620, 625, 639, 641, 642, 646], "placehold": [495, 540], "placeholder": 539, "placesafepoint": 547, "placing": [530, 545, 579, 607, 610, 630, 636, 639, 645], "plag": 142, "plain": [487, 585, 586, 596, 609, 627, 636, 648, 654], "plan": [461, 483, 538, 549, 569, 578, 581, 589, 593, 609, 625, 629, 630, 637, 645, 649, 673, 684], "planned": [538, 547, 589, 592, 616], "planning": [611, 612, 623], "planted": 648, "plat": [530, 609], "platform": [461, 466, 468, 470, 482, 483, 500, 517, 534, 538, 540, 547, 550, 551, 567, 568, 569, 571, 572, 579, 582, 593, 602, 605, 606, 609, 622, 626, 628, 631, 648, 651, 654, 671, 673, 682], "plausibl": 476, "play": [591, 609, 648, 677, 679, 686], "playground": 679, "pldi": [547, 616], "pleas": [468, 469, 470, 476, 481, 483, 484, 485, 486, 507, 509, 511, 513, 515, 516, 523, 525, 526, 529, 533, 538, 545, 547, 549, 550, 552, 566, 567, 568, 569, 571, 572, 574, 577, 579, 586, 588, 589, 592, 593, 608, 609, 618, 619, 621, 622, 623, 627, 630, 633, 638, 641, 646, 650, 670, 677, 681, 686, 687], "plethor": [478, 543, 550, 609], "plist": 516, "plot": [512, 673, 684], "plott": [673, 684], "plotting": [673, 684], "plt": 579, "plug": [594, 670, 681], "plugged": 612, "plugin": [488, 493, 495, 528, 536, 569, 579, 594, 620, 644], "plugin_tool": 648, "pluginfilenam": 493, "plugininfo": 648, "plus": [461, 465, 466, 472, 473, 487, 538, 540, 547, 579, 597, 609, 623, 625, 635, 646, 653, 655, 669, 672, 680, 683], "plusieur": [142, 653], "plusten": 625, "plx": 461, "pm": [646, 648], "pmbuild": 592, "pmdatamanag": 650, "pmtoplevelmanag": 650, "pn": [486, 554, 672, 673, 674, 675, 676], "png": [481, 581], "pni8": 540, "point": [51, 53, 144, 241, 243, 305, 310, 315, 317, 338, 340, 394, 396, 461, 463, 464, 469, 470, 473, 474, 475, 477, 480, 481, 483, 486, 487, 492, 499, 505, 513, 517, 530, 531, 539, 540, 541, 544, 545, 554, 557, 560, 562, 567, 570, 571, 572, 573, 575, 578, 580, 582, 583, 584, 585, 589, 590, 591, 592, 593, 596, 601, 604, 607, 611, 612, 617, 618, 619, 620, 622, 623, 625, 630, 631, 634, 635, 636, 637, 643, 644, 646, 648, 649, 650, 651, 652, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "point_numb": [46, 47, 141, 236, 237, 389, 390], "pointcount": 547, "pointe": [466, 473, 579], "pointed": [461, 466, 473, 483, 540, 548, 579, 609, 630, 637, 656], "pointee_align": 466, "pointeealign": 466, "pointer": [461, 470, 483, 531, 534, 540, 543, 547, 548, 554, 555, 578, 580, 584, 591, 592, 593, 596, 604, 607, 609, 625, 626, 628, 634, 635, 643, 648, 652, 654, 671, 672, 674, 677, 678, 679, 683, 685, 686], "pointer1": 626, "pointer2": 626, "pointer_offset": 630, "pointerflag": 596, "pointerkind": 596, "pointermod": 596, "pointermodifi": 596, "pointertodatamemb": 596, "pointertojittargetaddress": [593, 656, 657], "pointertomemberfunct": 596, "pointertyp": 609, "pointing": [466, 476, 530, 550, 572, 579, 593, 597, 609, 611, 625, 649, 674, 685], "pointless": [540, 590, 630], "pointstoconstantmemory": 579, "pointtoconstantmemory": 469, "pointy": 652, "poison2": 579, "poison3": 579, "poison4": 579, "poison5": 579, "poison_yet_again": 579, "poisoned": [579, 626], "pok": 473, "polar": 652, "polaris10": 466, "polaris11": 466, "polic": 632, "policy": [464, 466, 469, 473, 486, 533, 549, 550, 609, 611, 614], "polit": [483, 485], "political": 484, "poll": [547, 588, 630], "polling": 547, "pollut": [486, 647], "polly": [481, 538, 550, 611, 614, 616, 642], "polyhedral": 616, "polymorphic": [480, 628], "polymorphism": [609, 647], "pong": 591, "pool": [466, 473, 483, 497, 593, 628, 646, 648, 654], "poolalloc": 469, "poor": [484, 486, 630, 672, 683], "poorly": [474, 486], "pop": [461, 465, 468, 483, 547, 579, 609, 672, 674, 675, 676, 683, 685], "pop2_": 613, "pop_back": [530, 609, 676], "popcnt": 581, "popf": 626, "popfq": 626, "popped": [461, 473, 651], "popping": [461, 483], "popq": [626, 628, 630], "pops_exiting_wave_id": 465, "pops_pack": 48, "popul": 541, "popular": [469, 482, 483, 539, 550, 568, 579, 678], "populat": [491, 550, 592, 626, 634], "populated": [540, 579, 594, 623, 670], "pornin": 626, "porpod": 616, "port": [483, 505, 567, 626, 631, 645, 649, 677, 686], "portability": [486, 514, 547, 631, 677, 686], "portabl": [461, 479, 481, 483, 491, 547, 579, 593, 609, 644, 654], "ported": [543, 631], "porting": [557, 559, 564, 612], "portion": [461, 477, 479, 482, 483, 488, 513, 530, 535, 538, 540, 550, 556, 560, 579, 585, 587, 590, 607, 613, 625, 626, 634, 636, 646, 651, 655, 671, 682], "portugues": 622, "pos": [96, 185, 287, 442, 531, 547, 579, 580, 583, 626], "pos1": 530, "pos2": 530, "posed": 626, "posit": [19, 48, 54, 96, 120, 142, 145, 185, 205, 238, 244, 287, 362, 391, 397, 442, 461, 464, 465, 466, 473, 483, 487, 493, 495, 505, 534, 538, 540, 542, 550, 555, 571, 577, 579, 581, 582, 583, 585, 597, 609, 616, 623, 625, 626, 628, 630, 636, 652, 672, 673, 680, 683, 684], "position_at_end": [681, 682, 683, 684, 685], "positional": [518, 527], "positionaleatsarg": 530, "positioned": [461, 466, 579], "posix": [481, 487, 514, 515, 526, 539, 612, 620], "possess": [535, 609], "possibilit": [473, 548, 583, 593, 668, 679], "possibility": [461, 470, 486, 535, 578, 579, 591, 614], "possibl": [461, 465, 466, 469, 470, 471, 472, 473, 477, 480, 481, 483, 485, 487, 491, 505, 513, 515, 517, 530, 531, 534, 535, 536, 537, 538, 541, 542, 545, 547, 548, 550, 559, 560, 562, 565, 566, 567, 570, 573, 575, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 595, 597, 601, 607, 608, 609, 611, 612, 616, 618, 619, 621, 624, 625, 626, 627, 630, 631, 632, 634, 635, 636, 639, 641, 642, 645, 648, 651, 652, 669, 671, 672, 674, 676, 677, 680, 682, 683, 685, 686], "possibly": [461, 466, 470, 473, 483, 534, 543, 547, 548, 554, 557, 562, 571, 574, 575, 579, 583, 593, 607, 609, 611, 616, 619, 625, 648], "post": [483, 484, 485, 493, 533, 538, 549, 555, 564, 585, 588, 608, 610, 620, 621, 622, 625, 626, 630, 635], "posted": [485, 623], "postencodermethod": 636, "poster": 484, "postfix": 461, "postincr": 486, "posting": [484, 485, 623], "postord": 580, "postrapseudos": 585, "postscript": 607, "potential": [464, 476, 477, 483, 486, 513, 540, 554, 579, 581, 588, 590, 607, 614, 615, 616, 622, 625, 626, 630, 643, 679], "potentially": [461, 469, 483, 486, 491, 513, 530, 538, 540, 543, 545, 547, 550, 569, 579, 581, 590, 609, 616, 621, 622, 625, 626, 628, 630, 632, 642, 650, 668, 669, 672, 679, 680, 683], "pound": 652, "povray31": 640, "pow": [461, 466, 469, 511, 532, 555, 559, 566, 568, 583, 585, 592, 607, 608, 618, 636, 637, 645, 651, 670, 672, 673, 679, 681, 683, 684], "power": 559, "power10": 618, "power8": [532, 618], "power9": [532, 618], "powered": 568, "powerful": [469, 479, 483, 487, 530, 559, 578, 579, 582, 609, 627, 637, 669, 671, 672, 673, 674, 680, 682, 683, 684, 685], "powerpc": [470, 481, 515, 541, 550, 579, 580, 614, 628, 641, 646, 652], "powerpc64": [532, 579], "powerpc64l": 649, "powerpcl": 515, "pp": [465, 604, 680, 681, 682, 683, 684, 685], "ppa": 550, "ppas": 550, "ppc32": 483, "ppc64": 483, "ppc_fp128": [473, 579, 591], "ppcf128": 579, "ppcinstrinfo": 541, "ppcisellowering": 541, "ppcloopinstrformprep": 618, "pr": [538, 580, 625, 641], "pr26161": 556, "pr26576": 554, "pr34636": 546, "practic": [461, 474, 479, 530, 533, 538, 543, 544, 547, 549, 554, 573, 579, 580, 581, 583, 593, 596, 600, 602, 604, 607, 609, 611, 625, 626, 627, 628, 630, 632, 636, 642, 644, 655, 670, 671, 672, 678, 679, 681, 682, 683], "practical": [470, 486, 548, 583, 609, 630, 636], "practically": 612, "pragm": [461, 529, 531, 607, 618, 642], "pre": [464, 483, 485, 493, 538, 541, 555, 572, 574, 580, 593, 607, 608, 609, 610, 611, 615, 625, 637, 642, 681], "pre_stor": 483, "preallocated": [473, 609], "prebuilt": 539, "prec": [673, 674, 675, 676, 684, 685], "precaut": [609, 623], "preced": [514, 579, 590, 609, 628, 636, 641, 651], "preceded": [461, 487, 527, 579, 609, 622, 651, 654], "precedent": [461, 487, 579, 630, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685], "preceding": [461, 466, 469, 473, 486, 487, 491, 534, 557, 579, 607, 609, 625], "precis": [461, 465, 466, 469, 470, 483, 487, 492, 493, 547, 550, 554, 573, 575, 585, 625, 634, 646, 668, 669, 670, 679, 680, 681], "precisely": [579, 590, 628], "preclud": [472, 626, 630], "precompiled": 654, "precompiling": 592, "precomputed": 469, "precondit": 486, "precursor": 538, "pred": [540, 579, 592, 609, 625, 672, 674, 683, 685], "predecessor": [474, 483, 545, 575, 579, 583, 607, 616, 625, 672, 683], "predefin": 639, "predefined": [483, 487, 491, 546, 630, 639, 648, 673, 684], "predetermined": 469, "predicat": [470, 472, 593, 634, 636, 637, 646], "predicate_stat": 626, "predicate_stor": 646, "predicated": [549, 577, 579, 609, 616], "predicatedbinaryoperator": 615, "predicatedinstruct": 615, "predicateinfo": 579, "predict": [475, 486, 513, 545, 609, 617, 626, 648], "predicted": 626, "predictor": 626, "prediqu": [549, 554, 616], "predreg": 577, "predrel": 577, "predsens": 577, "preemptabl": 581, "preemptibl": 607, "preemption": 473, "preemptionspecifi": [473, 579], "preexisting": [486, 607], "pref": [470, 513, 527, 529, 531, 538, 567, 569, 579, 588, 608, 609, 619, 637, 641, 650, 679], "prefaced": 482, "prefer": [482, 486, 631], "preferably": [538, 545, 550, 614], "preferent": [469, 485, 486, 538, 579, 591, 614], "preferred": [470, 486, 505, 527, 538, 540, 545, 568, 573, 575, 579, 585, 608, 609, 618, 625, 646], "prefetch": 532, "prefetched": 579, "prefetching": 532, "prefix": [461, 466, 467, 473, 479, 481, 483, 486, 489, 491, 494, 498, 499, 515, 516, 527, 529, 530, 550, 565, 581, 585, 593, 594, 595, 596, 610, 611, 614, 618, 625, 630, 636, 637, 639, 641, 673, 684, 685], "prefix1": 487, "prefix2": 487, "prefixdat": 473, "prefixed": [466, 487, 501, 527, 540, 579, 602, 614, 625], "prefixing": 479, "preformatted": [586, 627], "preg": 483, "prehead": [575, 579, 583, 607, 672, 683], "preheader_bb": [683, 684], "preheaderbb": [672, 673], "preincrement": 486, "preincrementing": 486, "preinstalled": 539, "premi": 142, "prendr": 142, "preord": 573, "prepar": [571, 588, 607, 611, 619, 625, 630, 671], "prepared": [534, 540, 548, 579, 584, 601, 604, 607, 608, 621], "preparing": [499, 549, 591], "prepass": 483, "prepend": [489, 516, 575, 579, 639], "prepended": [499, 509, 625, 636], "prepending": [509, 579, 609, 614], "preprocessed": 574, "preprocessing": 543, "preprocessor": [481, 499, 530, 531, 535, 543, 609, 634, 636, 646, 671, 677, 682, 686], "prerequisit": [486, 648], "prescrib": 554, "presenc": [470, 483, 486, 487, 513, 540, 573, 575, 579, 594, 602, 609, 625, 632, 646, 651], "present": [461, 466, 473, 478, 480, 483, 485, 487, 491, 493, 500, 511, 513, 517, 525, 527, 530, 531, 534, 535, 540, 542, 544, 547, 548, 550, 554, 563, 570, 579, 594, 596, 597, 600, 601, 602, 604, 609, 611, 618, 620, 625, 626, 630, 632, 636, 642, 653, 672, 673, 674, 675, 676, 683, 684, 685], "presented": [461, 466, 483, 499, 513, 574, 609, 613, 625, 626, 630, 672, 683], "presenting": 625, "presently": 478, "preserv": [464, 469, 472, 483, 499, 506, 515, 526, 530, 548, 550, 558, 583, 611, 625, 626, 628, 641, 647, 648, 651], "preserve_allcc": [473, 579], "preserve_mostcc": [473, 579], "preserveall": 579, "preserved": [461, 464, 466, 483, 486, 534, 558, 560, 575, 579, 611, 626, 642, 648], "preservedanalys": [614, 647], "preservedanalysescheck": 614, "preservemost": 579, "preserving": [540, 575, 581, 625, 648, 677, 686], "press": 675, "pressur": [483, 513, 550, 607, 618, 626, 632, 645], "presumably": [461, 579, 602, 604, 611, 636], "presumed": [597, 604], "pretty": [471, 512, 527, 548, 576, 581, 586, 587, 590, 591, 607, 609, 626, 627, 631, 640, 648, 668, 669, 670, 671, 672, 673, 674, 679, 680, 681, 682, 683, 684, 685], "prettyprinter": 609, "prev": 609, "prevail": 495, "prevent": [466, 469, 483, 485, 487, 515, 526, 530, 531, 534, 537, 543, 547, 556, 560, 575, 579, 593, 597, 607, 609, 611, 622, 624, 625, 626, 628, 630, 631, 641, 645, 647, 648, 657, 674, 675, 676, 685], "prevented": [466, 607, 611, 626], "preventing": [466, 487, 538, 547, 623, 626, 670, 681], "previous": [461, 466, 470, 472, 473, 483, 486, 487, 495, 513, 518, 534, 535, 538, 541, 550, 566, 569, 572, 575, 579, 583, 586, 591, 592, 595, 605, 608, 609, 618, 619, 624, 626, 630, 632, 635, 636, 646, 648, 651, 652, 654, 656, 670, 671, 672, 673, 674, 675, 676, 678, 680, 681, 683, 684, 685], "previously": [461, 466, 473, 481, 487, 499, 515, 530, 538, 540, 542, 566, 572, 579, 581, 600, 604, 608, 611, 626, 630, 636, 640, 646, 671, 672, 681], "prf": 513, "prim": [96, 479, 481, 505, 613, 627, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "primarily": [483, 491, 502, 506, 527, 534, 547, 550, 568, 578, 581, 585, 607, 609, 626, 673, 684], "primary": [466, 469, 482, 483, 484, 538, 540, 547, 579, 581, 589, 594, 597, 607, 609, 622, 626, 629, 634, 635, 636, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "primaryexpr": [465, 669, 680], "primaryfunctionid": 542, "primarykey": [634, 635], "primarykeyearlyout": [634, 635], "primarykeynam": [634, 635], "primit": [96, 470, 486, 530, 548, 579, 585, 591, 596, 609, 622, 626, 651, 673, 677, 684, 686], "princeton": 613, "principl": [532, 570, 591, 609, 614, 625, 631, 678, 679], "print": [482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 503, 504, 505, 506, 507, 510, 512, 513, 514, 515, 516, 518, 519, 526, 527, 528, 529, 530, 534, 541, 543, 547, 550, 552, 569, 574, 579, 581, 587, 590, 609, 618, 620, 625, 635, 636, 637, 639, 640, 641, 645, 647, 652, 669, 670, 671, 672, 673, 674, 675, 676, 678, 680, 681, 682, 683, 684, 685], "print_endlin": [680, 681, 682, 683, 684, 685], "print_final_stat": 581, "print_float": [682, 683, 684, 685], "print_list": 482, "print_newlin": [682, 683, 684, 685], "print_pc": 581, "print_string": [680, 681, 682, 683, 684, 685], "printabl": [525, 579, 585, 634, 646], "printccoperand": 646, "printd": [671, 672, 673, 674, 675, 676, 677, 684, 685, 686], "printdatadirect": 646, "printdeclar": 646, "printdensity": [673, 684], "printed": [469, 483, 486, 495, 497, 499, 500, 504, 505, 513, 514, 527, 530, 541, 574, 585, 594, 609, 635, 636, 646, 647, 648, 652], "printer": [587, 609, 675], "printerror": 635, "printf": [466, 477, 487, 535, 543, 550, 552, 565, 579, 582, 593, 609, 625, 671, 672, 673, 674, 675, 676, 684, 685], "printfatalerror": 635, "printfatalnot": 635, "printformattedfil": 609, "printfunctionpass": 607, "printimplicitdef": 646, "printinformationalmessag": 530, "printing": [482, 486, 495, 504, 512, 513, 516, 547, 585, 609, 618, 646, 648], "printinlineasm": 646, "printinstruct": [634, 646], "printlabel": 646, "printmemoperand": 646, "printmethod": 646, "printnextinstruct": 609, "printnot": 635, "printoperand": 646, "printout": [528, 609], "printstar": [672, 683], "printsth": 607, "printwarning": 635, "prior": [461, 466, 473, 483, 491, 515, 530, 534, 535, 538, 540, 550, 578, 579, 614, 626, 642, 648], "priorit": 579, "prioritiz": 513, "priority": [465, 466, 517, 531, 548, 572, 579, 621, 625], "priority_queu": 609, "pris": 653, "priv": 466, "privat": [461, 465, 473, 516, 534, 545, 567, 573, 579, 591, 592, 597, 609, 621, 623, 625, 626, 634, 646, 654, 655, 656, 657], "private_bas": 465, "private_lim": 465, "private_segment_alignment": 466, "private_segment_fixed_siz": 466, "privately": 538, "privatesegmentfixedsiz": 466, "privileg": [466, 579, 631, 654], "privileged": 626, "prng": 581, "pro": 466, "proactiv": 538, "proactively": 477, "prob": [579, 618], "probabilistic": 566, "probabilistically": 566, "probabilit": [474, 499], "probability": [485, 513, 566, 585], "probabl": 579, "probably": [466, 483, 486, 497, 530, 531, 538, 539, 543, 547, 548, 568, 579, 609, 610, 611, 613, 629, 630, 669, 672, 677, 680, 683, 686], "probed": 609, "probing": [483, 579, 609], "problem": [461, 466, 469, 476, 477, 478, 483, 485, 486, 487, 488, 530, 538, 543, 545, 546, 547, 548, 553, 560, 564, 568, 570, 571, 572, 574, 575, 578, 579, 580, 583, 594, 597, 602, 606, 607, 609, 611, 612, 614, 622, 625, 630, 631, 632, 641, 670, 672, 673, 677, 681, 683, 684, 686], "problematic": [486, 513, 538, 611, 632], "proc": [461, 471, 550, 568, 646], "procedur": [461, 466, 472, 530, 532, 572, 580, 591, 609, 610, 626], "procedural": [466, 475, 545, 579, 580, 629, 668, 679], "proceed": [481, 534, 540, 547, 554, 572, 580, 591, 609, 616, 619, 626], "proceeded": 466, "proceeding": [483, 485, 531, 547], "process": [461, 466, 468, 469, 470, 471, 477, 478, 479, 485, 486, 513, 516, 517, 529, 530, 531, 533, 535, 536, 538, 539, 540, 547, 550, 559, 560, 566, 568, 569, 574, 577, 579, 581, 582, 584, 594, 595, 607, 608, 609, 611, 614, 617, 622, 625, 630, 631, 636, 637, 641, 645, 646, 648, 652, 653, 654, 656, 657, 668, 669, 671, 677, 679, 680, 682, 686], "process_id": 466, "processed": [474, 481, 482, 483, 487, 504, 512, 513, 518, 542, 579, 581, 582, 595, 607, 618, 635, 636, 637, 648, 652, 668], "processformattedfil": 609, "processing": [486, 489, 529, 530, 532, 540, 550, 579, 620, 626, 630, 635, 636, 637, 646, 649, 668, 679], "processor": [461, 472, 481, 483, 493, 513, 530, 547, 550, 554, 579, 625, 637, 645, 646, 675], "processrelocationref": 584, "procnoitin": 637, "procsym": 542, "produc": [461, 464, 465, 466, 470, 472, 477, 478, 481, 483, 486, 487, 488, 489, 491, 492, 497, 501, 502, 505, 509, 513, 515, 517, 527, 528, 535, 539, 540, 543, 546, 547, 548, 550, 555, 559, 565, 574, 575, 579, 587, 590, 591, 597, 599, 601, 602, 604, 607, 609, 616, 618, 620, 625, 629, 630, 631, 634, 635, 636, 641, 646, 648, 649, 652, 654, 655, 671, 672, 674, 682, 683, 685, 686], "produced": [461, 466, 470, 473, 483, 486, 497, 499, 502, 513, 534, 538, 540, 547, 559, 579, 581, 590, 593, 609, 620, 625, 630, 635, 636, 639, 645, 651, 652, 655, 670, 681], "producer": [461, 540, 548, 587, 599, 625], "producing": [470, 471, 483, 523, 550, 555, 571, 578, 579, 625, 630, 636, 676], "product": [466, 474, 483, 484, 487, 489, 513, 518, 538, 547, 566, 579, 589, 591, 617, 620, 623, 632, 636, 648, 656, 669, 673, 680, 684], "prof": [474, 475, 518, 569, 588], "profdat": [468, 481, 490, 499, 519, 569, 579, 639], "professional": [485, 533], "profgen": 490, "profil": [466, 468, 475, 479, 490, 499, 505, 521, 522, 535, 544, 545, 570, 585, 608, 610, 618, 620, 644, 651], "profiled": [518, 519, 579, 610], "profiledat": 579, "profiler": 466, "profiling": [475, 479, 481, 499, 527, 535, 544, 545, 569, 579, 593, 625], "profit": [483, 531, 544, 545, 579, 607, 626, 642, 645], "profraw": [468, 499, 569], "progbit": [542, 626], "program": [465, 466, 469, 470, 471, 477, 478, 481, 482, 486, 487, 488, 490, 491, 495, 499, 506, 509, 511, 513, 515, 517, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 535, 538, 539, 544, 545, 546, 547, 549, 550, 552, 554, 565, 566, 570, 572, 574, 575, 579, 580, 581, 582, 583, 585, 589, 592, 593, 595, 597, 602, 604, 605, 606, 607, 609, 613, 617, 620, 622, 625, 626, 628, 629, 630, 631, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 669, 671, 674, 675, 676, 677, 679, 680, 682, 685, 686], "programm": [466, 470, 477, 483, 486, 528, 530, 532, 533, 547, 551, 573, 618, 634, 635, 637, 642, 648, 654, 673, 676, 684, 686], "programmatic": [518, 547, 649], "programmatically": [483, 592, 649, 652, 673, 684], "programmer": [531, 626, 645], "programmersmanual": [486, 654], "programming": [461, 483, 486, 492, 531, 532, 540, 547, 548, 573, 579, 592, 609, 625, 631, 652, 671, 672, 674, 676, 677, 682, 683, 685, 686], "progress": [466, 467, 470, 481, 483, 491, 513, 532, 534, 538, 547, 572, 579, 580, 585, 609, 614, 618, 632, 649], "progressively": 679, "prohib": 590, "prohibit": [470, 582, 626], "prohibitively": 626, "proj_install_root": 610, "proj_obj_root": 610, "proj_src_root": 610, "project": [461, 468, 479, 484, 485, 486, 491, 532, 533, 534, 536, 539, 541, 543, 545, 546, 549, 552, 553, 569, 570, 571, 572, 580, 581, 593, 608, 609, 612, 613, 614, 620, 621, 622, 623, 625, 626, 628, 630, 632, 635, 636, 639, 640, 641, 648, 649, 653, 654, 655, 656, 657, 678, 679], "project_nam": 610, "projected": 534, "projector": 588, "prolang": 640, "prolifer": 614, "prolog": [579, 580, 618, 626, 646], "prologepilog": 620, "prologu": [466, 473, 483, 492, 547, 624, 625, 646, 676], "prologue_end": 542, "prologuedat": 473, "prominent": 639, "promis": [485, 538, 632, 649], "promot": [469, 483, 531, 538, 541, 545, 579, 580, 594, 625, 674, 676, 685], "promoted": [461, 483, 538, 579, 609, 625, 646, 674, 685], "promoteloopaccessestoscalar": 575, "promoteop": 541, "promoting": [469, 483, 531, 616, 674, 685], "promptly": [485, 538, 623], "pron": [483, 530, 568, 609, 637], "proof": [475, 583, 585, 593, 626], "prop": [470, 486, 491, 531, 535, 557, 573, 575, 579, 609, 618, 646, 647, 676], "propag": [466, 531, 540, 550, 579, 580, 585, 594, 625, 631], "propagat": [466, 481, 483, 540, 579, 609, 625, 629, 630], "propagated": [609, 620, 625, 630], "propagating": [466, 555, 579, 608, 625], "properly": [465, 467, 469, 470, 476, 477, 480, 483, 489, 530, 531, 533, 542, 549, 550, 579, 608, 636, 671, 674, 685], "propert": [461, 462, 469, 472, 473, 483, 513, 515, 529, 530, 534, 547, 552, 577, 579, 582, 583, 585, 590, 591, 597, 607, 609, 618, 623, 626, 628, 629, 634, 635, 637, 641, 642, 646, 674, 685], "property": [461, 466, 467, 469, 470, 472, 473, 478, 486, 489, 491, 530, 535, 538, 541, 552, 558, 560, 579, 583, 604, 608, 609, 611, 625, 630, 642, 671, 674, 677, 685, 686], "proponent": 614, "proport": 557, "proportional": [518, 530], "propos": [478, 581, 611, 623, 626, 632, 650], "proposal": [461, 478, 545, 563, 612, 614, 615, 616, 632, 653], "proposed": [474, 485, 487, 538, 580, 611, 626], "proposing": [478, 487, 545, 611, 626, 632], "pros": [472, 486], "prospectively": 538, "protect": [470, 480, 538, 579, 581, 618, 621, 631], "protected": [470, 473, 480, 483, 486, 515, 579, 611, 626, 646], "protectfilecheckoutput": 641, "protecting": [538, 626], "protector": [579, 625], "proto": [657, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "protoast": [670, 671, 672, 673, 674, 675, 676], "protobuf": 546, "protocol": [534, 546, 579, 611, 630], "prototyp": [506, 534, 541, 566, 579, 615, 617, 622, 635, 646, 648, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "prototypeast": [657, 669, 670, 671, 672, 673, 674, 675, 676], "prototyped": 486, "prototyping": [461, 545], "prov": [469, 538, 545, 566, 578, 579, 583, 591, 607, 626], "proven": [466, 514, 538, 545, 560, 579, 589, 607, 630, 674, 685], "provid": [22, 123, 208, 365, 461, 462, 465, 466, 468, 469, 470, 473, 475, 479, 480, 481, 482, 483, 485, 491, 497, 504, 505, 513, 518, 522, 528, 530, 531, 533, 534, 535, 536, 538, 539, 540, 542, 545, 547, 548, 549, 550, 552, 554, 557, 559, 564, 566, 567, 568, 573, 579, 580, 581, 582, 583, 584, 587, 588, 590, 592, 593, 594, 599, 605, 607, 609, 610, 611, 612, 617, 620, 621, 623, 625, 626, 628, 630, 631, 634, 635, 636, 640, 644, 646, 648, 649, 651, 652, 654, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 685, 686], "provided": [461, 464, 466, 467, 469, 470, 479, 480, 481, 482, 483, 485, 486, 487, 488, 491, 499, 504, 505, 512, 513, 515, 527, 530, 534, 537, 538, 540, 542, 545, 547, 548, 550, 554, 557, 562, 570, 579, 580, 581, 582, 585, 589, 592, 593, 604, 609, 610, 618, 620, 623, 625, 626, 628, 630, 631, 635, 636, 644, 645, 646, 648, 649, 652, 670, 681], "providing": [461, 469, 478, 482, 485, 486, 491, 530, 533, 538, 540, 545, 547, 566, 573, 579, 581, 583, 593, 609, 620, 621, 622, 625, 626, 628, 636, 648, 649, 650, 653, 655], "proving": [583, 607], "provis": 538, "provisional": [461, 466], "proviso": 538, "proxy": 483, "proxyapp": 613, "prun": [611, 616], "pruned": [590, 607, 623], "pruneexpir": 611, "pruning": [478, 649], "pr\u00e9sent": 653, "psab": 532, "pse": 614, "pseudo": [466, 472, 474, 483, 529, 534, 557, 579, 585, 593, 609, 618, 625, 626, 634, 646, 648], "pseudocod": [566, 579, 646], "pseudonym": 621, "pseudos": [557, 625], "psl": 461, "pstl": [481, 611], "psubus": 641, "psubusw": 641, "pt": 613, "pthread": [531, 579, 612, 622], "pthread_attr_t": 579, "pthread_creat": 579, "ptr": [466, 470, 486, 516, 534, 544, 596, 609, 628, 643, 646], "ptr0": [555, 579], "ptr1": 579, "ptr2": 579, "ptr3": 579, "ptr64": 466, "ptr7": 579, "ptr_is_null": 544, "ptr_rc": 483, "ptra": 592, "ptrb": 592, "ptrc": 592, "ptrloc": [547, 579], "ptroff": 483, "ptrreg": 483, "ptrtoint": [545, 630], "ptrtoreplacedint": 609, "ptrty": 579, "ptrval": 579, "ptx": [483, 531, 532], "ptx30": 483, "ptx31": 483, "ptxas": 531, "ptxstring": 592, "pty": 579, "pty2": 579, "pub": 625, "publi": 653, "public": [479, 482, 486, 517, 530, 538, 546, 547, 549, 550, 567, 573, 592, 597, 605, 619, 621, 623, 625, 626, 632, 643, 646, 647, 648, 652, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676], "publicly": [538, 609, 621, 623, 625, 632], "publicstreamindex": 597, "publiqu": 613, "publish": [619, 623], "published": [531, 605, 609, 614], "pubnam": [504, 625], "pubtyp": [504, 625], "pugixml": 581, "pull": [464, 470, 476, 550, 608, 611], "pulled": [483, 611, 623, 632], "puls": 581, "punctuat": [486, 579, 618, 636], "pur": [536, 580, 607, 616, 618, 625, 630], "purely": [470, 477, 483, 538, 583, 607, 646, 670, 681], "purify": 574, "purpos": [461, 466, 472, 479, 483, 486, 487, 513, 515, 517, 529, 530, 531, 534, 537, 538, 540, 545, 548, 550, 554, 557, 575, 579, 583, 591, 592, 593, 594, 597, 601, 602, 607, 609, 614, 619, 622, 626, 629, 630, 631, 634, 635, 636, 637, 648, 651, 654, 670, 671, 676], "pursued": 626, "push": [461, 486, 547, 572, 579, 608, 611, 676], "push_back": [486, 609, 646, 652, 669, 670, 671, 672, 673, 674, 675, 676], "pushed": [461, 466, 477, 480, 483, 550, 579, 611], "pushf": [483, 626], "pushfl": 483, "pushfq": [483, 626], "pushing": [461, 579, 611], "pushq": [626, 630], "put": [461, 466, 469, 477, 483, 484, 486, 487, 530, 535, 536, 544, 547, 556, 570, 572, 579, 586, 591, 593, 607, 608, 609, 611, 623, 625, 626, 641, 648, 652, 671, 672, 674, 676, 679, 683, 685], "putchar": [671, 672, 673, 674, 675, 676, 682, 683, 684, 685], "putchard": [671, 672, 673, 674, 675, 676, 677, 682, 683, 684, 685, 686], "putting": [470, 471, 486, 539, 540, 550, 554, 555, 579, 593, 609, 611, 626, 641, 671, 677, 686], "puzzl": 574, "pv": 534, "pwd": [527, 550, 571, 622], "py": [491, 533, 550, 567, 569, 572, 609, 611, 639, 646], "pygment": 670, "pynamic": 613, "python": [491, 534, 547, 550, 552, 571, 581, 609, 611, 614, 618, 619, 627, 634, 636, 639, 641, 677, 686], "python_execut": 550, "q": [491, 495, 530, 565, 579], "q0": [472, 579], "q1": 538, "q15": 579, "q2": 538, "q3": [538, 579], "q7": 579, "qch": 481, "qea": 540, "qemu": 581, "qhelpgenerator": 481, "qmcpack": 613, "qnan": 579, "qp": 626, "qpx": 618, "qspectr": 626, "qt": [481, 614], "qt_coding_styl": 614, "quad": [464, 465, 466, 542, 579, 626, 630, 646], "quad_perm": [464, 466], "quadr": 466, "quadratic": [483, 492, 590, 609], "quadratically": 609, "qualifi": [466, 483, 548, 579, 585, 596], "qualified": [466, 485, 579, 595, 625], "qualify": 579, "qualifying": 585, "quality": [478, 483, 485, 504, 513, 545, 560, 568, 572, 579, 632, 641, 648, 654, 656], "qualtyp": 486, "quantity": [513, 579], "quarantin": 622, "quarantinechunksuptosiz": 622, "quarantined": 622, "quarantinesizekb": 622, "quart": 649, "quartil": 626, "quentin": 563, "quer": [461, 466, 469, 486, 513, 545, 564, 590, 593, 607, 609, 677, 686], "queried": [483, 534, 590, 609, 645, 646], "query": [469, 470, 517, 530, 576, 577, 579, 590, 593, 594, 609, 625, 646, 648, 650, 655], "query_sampl": 466, "querying": [461, 577, 579, 590, 605, 609], "question": [461, 469, 476, 485, 533, 538, 545, 548, 549, 550, 552, 554, 573, 579, 581, 586, 591, 608, 609, 610, 612, 614, 617, 618, 625, 627, 636, 642, 669, 672, 674, 677, 680, 683, 685, 686], "questional": [677, 686], "queu": [513, 593, 609, 646, 648, 649], "queue_ptr": 466, "queued": 466, "queuing": 466, "quick": [469, 477, 485, 486, 495, 513, 545, 548, 568, 571, 589, 590, 607, 608, 619, 621, 625, 655, 671, 677, 682, 686], "quickest": 566, "quickly": [469, 477, 483, 485, 486, 495, 530, 533, 540, 550, 551, 552, 574, 579, 581, 590, 595, 606, 609, 614, 625, 631, 641, 649, 655], "quicksilv": 613, "quickstart": [549, 571], "quiet": [466, 491, 504, 530, 555, 575, 579], "quiet2": 530, "quieted": 579, "quieting": [466, 579], "quirk": [482, 630], "quit": [469, 483, 487, 531, 536, 541, 545, 547, 548, 550, 579, 586, 591, 609, 626, 627, 628, 631, 636, 656, 670, 672, 677, 681, 683, 686], "quot": [481, 530, 550, 579, 581, 625, 634, 641, 652], "quoted": [466, 579, 585, 641], "quotient": [487, 579], "quoting": 641, "quotingtyp": 652, "quux": 486, "qux": 579, "qx": 472, "r": [461, 471, 483, 487, 495, 501, 504, 513, 514, 515, 516, 518, 521, 522, 526, 537, 542, 547, 567, 572, 573, 579, 591, 592, 596, 601, 609, 611, 630, 636, 646, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "r0": [483, 487, 579, 585, 587, 636, 646], "r1": [461, 483, 487, 579, 585, 592, 609, 611, 636, 646], "r10": [483, 487, 505, 592, 624, 637], "r10b": 637, "r10d": 637, "r10w": 637, "r11": [579, 624, 628, 637], "r11b": 637, "r11d": 637, "r11w": 637, "r12": [483, 542, 579, 637], "r1234": 611, "r12345": 572, "r123456": 611, "r128": [63, 152, 253], "r12b": 637, "r12d": 637, "r12w": 637, "r13": [483, 637], "r13b": 637, "r13d": 637, "r13w": 637, "r14": [483, 579, 637], "r14b": 637, "r14d": 637, "r14w": 637, "r15": [483, 579, 585, 637], "r15b": 637, "r15d": 637, "r15w": 637, "r2": [461, 483, 487, 579, 585, 609, 611, 636], "r258109": 611, "r3": [483, 487, 579, 592, 611, 636], "r31": [483, 579], "r341082": 581, "r390": 466, "r390x": 466, "r4": [483, 487, 542], "r5": [483, 487], "r6": [483, 487], "r600": 466, "r630": 466, "r6xx": 466, "r7": [466, 483, 487, 579], "r700": 466, "r7xx": 466, "r8": [483, 505, 579, 626, 628, 637], "r8b": 637, "r8d": 637, "r8w": 637, "r9": [466, 483, 592, 628, 637], "r9b": 637, "r9d": 637, "r9w": 637, "r_386_8": 542, "r_amdgpu_abs32": 466, "r_amdgpu_abs32_h": 466, "r_amdgpu_abs32_lo": 466, "r_amdgpu_abs64": 466, "r_amdgpu_gotpcrel": 466, "r_amdgpu_gotpcrel32_h": 466, "r_amdgpu_gotpcrel32_lo": 466, "r_amdgpu_non": 466, "r_amdgpu_rel32": 466, "r_amdgpu_rel32_h": 466, "r_amdgpu_rel32_lo": 466, "r_amdgpu_rel64": 466, "r_amdgpu_relative64": 466, "r_arm_thm_movw_abs_nc": 571, "r_offset": 466, "r_x86_64_8": 542, "ra": [466, 493, 625], "rac": [466, 470, 484, 534, 579, 609, 622, 641], "racist": 484, "radams": 581, "radare2": 581, "radeon": [461, 466], "radically": [483, 564], "radius": 573, "radix": [483, 486, 514, 523, 525, 579], "rag": 497, "rai": 534, "rais": [461, 476, 477, 540, 547, 555, 579, 609, 626, 630, 636, 679, 680, 681, 682, 683, 684, 685], "raised": [461, 509, 579, 607, 611, 623, 630, 632, 680], "raising": [540, 680], "rajaperf": 613, "rali": 506, "ram": [567, 581], "ramif": 548, "ramp": 534, "ramsey": 483, "ran": [499, 553, 626, 647, 648], "rand": 581, "random": [477, 486, 490, 491, 538, 579, 581, 589, 609, 613], "randomiz": [471, 488], "randomize_va_spac": 471, "randomized": 477, "randomly": [486, 524, 566, 649], "rang": [19, 24, 48, 49, 54, 78, 98, 114, 120, 124, 142, 143, 145, 162, 187, 201, 205, 209, 238, 239, 240, 244, 266, 289, 303, 362, 367, 391, 392, 393, 397, 421, 444, 460, 461, 464, 465, 466, 469, 474, 475, 477, 483, 484, 491, 492, 504, 512, 513, 517, 530, 534, 537, 540, 542, 545, 547, 548, 553, 556, 573, 583, 607, 616, 618, 625, 630, 634, 635, 636, 645, 648, 649, 653, 671, 673, 678, 679, 682, 684], "range_specifi": 466, "rangecheck": 529, "rangeend": 542, "rangelist": 636, "rangepiec": 636, "rangestart": 542, "ranging": [518, 579], "rank": [579, 607], "ranlib": [490, 495, 550, 565, 570], "rapaport": 616, "rapid": [538, 626], "rar": [473, 483, 484, 486, 487, 544, 547, 556, 579, 604, 609, 626], "rarely": [483, 486, 540, 545, 554, 571, 579, 609, 646], "rat": [473, 485, 497, 513, 533, 566, 581, 611], "rath": [461, 466, 469, 473, 474, 478, 483, 484, 486, 487, 489, 491, 495, 499, 525, 527, 531, 538, 539, 543, 545, 547, 548, 550, 552, 554, 559, 566, 568, 579, 581, 583, 593, 594, 597, 599, 607, 609, 611, 612, 616, 619, 625, 626, 630, 635, 636, 641, 645, 646, 654, 655, 656, 669, 670, 676, 680], "ratio": [474, 518, 626], "rational": [483, 538, 554, 623, 644], "rauw": [575, 580, 591, 609], "raw": [483, 496, 499, 503, 506, 510, 513, 515, 516, 517, 519, 521, 522, 528, 530, 534, 542, 569, 576, 579, 584, 587, 609, 640, 650, 670], "raw_fd_ostream": 675, "raw_ostream": [483, 541, 609, 635, 648, 650, 652, 675, 676], "rawfrm": [636, 646], "rax": [483, 579, 585, 626, 628, 630, 637, 646], "rbp": [483, 585, 637], "rbx": [483, 637], "rc": [572, 619], "rc1": [572, 619], "rc2": [572, 619], "rc3": 572, "rcn": [572, 619], "rcp_iflag_f32": 466, "rcu": 513, "rcx": [483, 579, 626, 637], "rd": [542, 646], "rdi": [483, 505, 542, 579, 585, 625, 626, 628, 637], "rdna": 466, "rdna1": 466, "rdna2": 466, "rdtsc": [505, 579], "rdx": [483, 626, 628, 630, 637], "rdynamic": [671, 673, 684, 685], "re": [461, 469, 472, 476, 481, 482, 483, 484, 485, 486, 487, 488, 491, 530, 531, 533, 538, 540, 543, 545, 546, 547, 550, 553, 554, 558, 564, 565, 566, 568, 569, 571, 572, 574, 579, 581, 583, 584, 590, 591, 593, 602, 606, 608, 609, 611, 616, 619, 620, 623, 625, 626, 627, 630, 631, 634, 636, 637, 640, 641, 648, 649, 650, 654, 656, 670, 671, 672, 674, 675, 676, 677, 679, 681, 682, 683, 685, 686], "reach": [486, 513, 538, 540, 579, 588, 590, 591, 593, 621, 623, 626, 628, 632], "reachability": [547, 580, 583], "reachabl": [481, 547, 553, 579, 583, 626, 630], "reached": [461, 486, 491, 513, 534, 544, 572, 579, 581, 591, 594, 607, 609, 646], "reaching": [486, 534, 583, 590, 616], "react": 476, "read": [36, 37, 38, 39, 40, 48, 59, 60, 66, 132, 133, 134, 135, 136, 149, 153, 222, 223, 224, 225, 226, 227, 228, 229, 230, 238, 249, 250, 254, 379, 380, 381, 382, 383, 391, 402, 403, 409, 461, 464, 465, 466, 469, 470, 472, 473, 477, 481, 482, 483, 486, 487, 490, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 509, 513, 514, 515, 516, 517, 518, 523, 525, 526, 527, 528, 529, 530, 534, 536, 538, 539, 541, 542, 543, 544, 549, 550, 552, 569, 579, 581, 585, 586, 591, 597, 599, 607, 609, 625, 626, 627, 628, 629, 630, 634, 635, 637, 641, 645, 646, 651, 652, 654, 655, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 684, 685, 686], "read_async": 534, "read_only": 466, "read_regist": 579, "read_volatile_regist": 579, "read_writ": 466, "readability": [470, 485, 486, 529, 609, 614, 636, 652], "readabl": [465, 467, 470, 480, 483, 496, 497, 499, 503, 504, 510, 512, 518, 527, 542, 550, 566, 579, 585, 586, 597, 607, 609, 614, 625, 648, 652, 670], "readandmaybemodify": 581, "readattribut": 634, "readelf": [490, 514, 516, 618], "reader": [651, 654, 655], "readily": [560, 623], "reading": [461, 469, 473, 483, 486, 497, 500, 517, 532, 538, 550, 552, 574, 579, 591, 597, 605, 608, 609, 614, 618, 625, 626, 636, 649, 651, 652, 668, 670, 671, 672, 673, 674, 675, 676, 679], "readjustment": 483, "readm": [538, 550, 586, 611, 614, 627, 639, 641], "readnon": [473, 545, 579, 592, 607, 625, 630, 643], "readobj": [490, 514, 516, 521, 609, 618, 625], "readonly": [466, 473, 515, 545, 579, 590, 607, 625, 628, 630, 650], "readtscp": 651, "readwrit": 466, "ready": [485, 513, 530, 533, 534, 538, 565, 572, 581, 584, 588, 591, 625, 648, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685], "readyset": 513, "real": [461, 462, 466, 469, 471, 487, 505, 513, 515, 516, 526, 530, 542, 554, 579, 581, 592, 597, 604, 609, 621, 625, 637, 646, 668, 673, 678, 684], "realign": 555, "realigned": 618, "realignment": [466, 579], "realistic": [547, 626, 669, 680], "reality": 461, "realiz": [538, 541, 673, 684], "realized": 682, "realloc": [469, 566, 609], "reallocated": 469, "really": [466, 468, 470, 481, 486, 530, 531, 538, 541, 543, 548, 550, 552, 554, 579, 581, 586, 590, 593, 602, 604, 607, 608, 609, 625, 627, 640, 641, 668, 670, 671, 672, 673, 674, 676, 677, 679, 681, 682, 683, 684, 685, 686], "reallyhidden": 530, "realmag": [673, 684], "realpred": 579, "realstart": [673, 684], "ream": 614, "reamesconcern": 614, "reapplied": 485, "reapply": 538, "rearranging": 580, "reason": [461, 466, 467, 469, 470, 475, 476, 479, 481, 482, 483, 485, 486, 487, 530, 534, 536, 538, 540, 541, 544, 547, 548, 550, 557, 560, 564, 566, 571, 573, 579, 581, 583, 586, 589, 590, 591, 593, 596, 599, 609, 612, 613, 620, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 641, 642, 647, 648, 654, 656, 669, 670, 671, 672, 674, 676, 679, 680, 681, 682, 683, 685], "reasonably": [485, 550, 609, 626, 631], "reasoning": [470, 486, 538, 545, 559, 630], "reassoc": 579, "reassoci": [579, 580, 671, 682], "reassociat": [671, 672, 673, 674, 682, 683, 684, 685], "reassociating": 579, "reassur": 581, "rebas": [516, 550, 608, 611], "rebasing": 516, "rebuild": [468, 481, 489, 569, 628, 650], "rec": [635, 636, 679, 680, 681, 682, 683, 684, 685], "rec1": 636, "rec2": 636, "recall": [591, 635, 636, 652, 670, 671, 672, 681, 682], "recap": 472, "receipt": 621, "receiv": [473, 482, 483, 540, 546, 567, 579, 581, 609, 621, 623, 626, 634, 636, 642, 656], "received": [465, 485, 533, 545, 584, 680], "receiving": 637, "recent": [461, 481, 485, 495, 533, 539, 550, 579, 581, 588, 604, 619, 622, 623, 671], "recently": [461, 481, 485, 536, 538, 540, 547, 550, 579, 608, 619, 626, 652], "recept": 538, "recheck": 607, "rechecked": 591, "recherch": 653, "recip": [570, 611, 616], "recipient": 538, "reciprocal": [513, 579], "reclaim": 580, "reclaimed": [579, 593], "reclist": 636, "recognis": 609, "recogniz": [471, 483, 487, 530, 579, 582, 591, 609, 626, 640, 668, 672, 676, 679, 683], "recognized": [487, 527, 530, 579], "recognizing": [487, 607], "recombin": 654, "recommend": [486, 513, 531, 538, 547, 550, 561, 566, 578, 579, 581, 588, 606, 623, 636, 648, 669, 671, 674, 675, 680, 682, 685], "recommended": [461, 466, 479, 481, 482, 483, 487, 491, 545, 547, 548, 550, 559, 565, 569, 570, 578, 579, 581, 588, 592, 608, 609, 626, 630, 641, 642], "recommitted": 485, "recommonmark": 586, "recompil": [544, 593], "recompiled": [472, 593, 628], "recompiling": [469, 656, 672, 683], "recomput": [461, 469, 609], "recomputed": 609, "recomputing": 648, "reconfigured": 567, "reconstitut": 575, "reconstituted": 579, "reconstituting": 559, "reconstruct": [461, 548, 599, 649, 651], "reconstructed": [495, 517], "reconstructing": 625, "record": [461, 467, 476, 492, 493, 514, 518, 522, 528, 529, 538, 542, 579, 585, 588, 597, 600, 601, 602, 605, 608, 616, 620, 621, 623, 625, 628, 630, 637, 645, 650, 670, 671, 672, 673, 674, 675, 676, 677, 686], "record_kind": 651, "record_meta_container_info": 620, "record_meta_external_fil": 620, "record_meta_remark_vers": 620, "record_meta_strtab": 620, "record_remark_arg_with_debugloc": 620, "record_remark_arg_without_debugloc": 620, "record_remark_debug_loc": 620, "record_remark_head": 620, "record_remark_hotness": 620, "recordbody": 636, "recorded": [461, 466, 492, 566, 579, 625, 628, 630, 651], "recordfield": 635, "recordhead": 596, "recordid": 473, "recording": [625, 649], "recordkind": 596, "recordlen": 596, "recordmap": 635, "recouped": 473, "recov": [487, 540, 566, 579, 625, 628], "recover": [461, 486], "recovered": 625, "recovering": [544, 579], "recovery": [609, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "recreat": 652, "recreated": 579, "recurrent": [537, 607, 616], "recurring": 573, "recurs": [466, 504, 506, 517, 529, 566, 579, 607, 609, 625, 626, 630, 634, 668, 669, 670, 673, 674, 678, 679, 680, 681, 684, 685, 686], "recursing": [517, 679], "recursiveexpansionlim": 491, "recursively": [466, 486, 487, 491, 506, 547, 669, 670, 672, 680, 681, 683], "recval": 635, "recycl": [483, 622], "recycling": 649, "red": [579, 626], "redefin": [515, 670, 673, 681, 684], "redefined": 670, "redefining": [674, 685], "redefinit": [531, 654, 670, 674, 681, 682, 683, 684, 685], "redesign": 549, "redhat": [606, 623], "redirect": [488, 504, 505, 566, 579, 641, 643, 676], "redirected": [581, 641], "redirecting": 676, "rediscov": [677, 686], "redistribu": 538, "redistribut": 538, "redo": 591, "reduc": [466, 471, 477, 478, 479, 480, 481, 482, 483, 486, 488, 506, 530, 531, 535, 538, 539, 548, 550, 555, 574, 577, 580, 581, 591, 593, 609, 617, 618, 619, 622, 626, 636, 637, 648, 657, 671, 676, 678, 682], "reduce_input": 581, "reduced": [477, 488, 538, 574, 579, 654], "reducibl": 583, "reducing": [478, 534, 538, 559, 592, 607, 611, 616, 618, 619, 622, 649], "reduct": [466, 477, 486, 490, 493], "redund": [489, 530, 545, 554, 556, 575, 583, 594, 609, 611, 625, 630, 656, 671, 682], "redundanc": 483, "redundancy": [531, 580, 609], "redwin": 483, "redwood": 466, "reentry": 593, "reexamin": 485, "reexport": 657, "reexported": 593, "reexportedflag": 593, "reexportflag": 593, "reextern": [681, 682, 683, 684, 685], "ref": [461, 465, 466, 469, 482, 483, 486, 491, 513, 532, 534, 535, 540, 568, 572, 581, 589, 590, 592, 593, 595, 596, 597, 600, 604, 605, 609, 611, 614, 619, 620, 625, 628, 630, 632, 635, 636, 639, 641, 646, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "refactor": 614, "refactoring": [485, 486, 538, 580, 611, 614, 674, 685], "refcount": 547, "refer": [461, 465, 468, 472, 482, 534, 572, 579, 580, 593, 594, 597, 601, 609, 616, 625, 630, 635, 636, 646, 674, 675, 676, 685], "referenced": [461, 465, 466, 473, 527, 530, 531, 565, 579, 580, 582, 585, 591, 593, 595, 597, 604, 609, 620, 622, 625, 636, 643, 646, 655, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "referencing": [461, 579, 591, 609, 654, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "referent": [462, 463, 465, 466, 469, 473, 474, 477, 481, 482, 483, 485, 486, 487, 488, 493, 515, 516, 526, 529, 532, 533, 534, 535, 538, 540, 542, 543, 548, 556, 558, 560, 566, 573, 575, 576, 580, 584, 587, 590, 591, 592, 593, 595, 596, 597, 604, 605, 608, 618, 620, 625, 635, 637, 639, 641, 642, 644, 646, 648, 651, 652, 653, 654, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 683, 685], "referential": 607, "referred": [49, 143, 240, 393, 461, 482, 537, 540, 542, 547, 579, 580, 585, 590, 593, 600, 601, 604, 609, 611, 616, 625, 628, 630, 631, 634, 635, 641], "referring": [534, 542, 547, 579, 593, 609, 625, 626, 648], "refill": 591, "refin": [469, 579, 609, 614, 654], "refined": [483, 609], "reflect": [461, 465, 466, 469, 535, 538, 564, 572, 579, 582, 593, 614, 625, 632, 646, 648, 673, 684], "reflected": [538, 625], "reflecting": 618, "reflexivity": 591, "reflog": 611, "reflogexpir": 611, "reflogexpireunreach": 611, "refnam": 611, "reformat": [587, 614], "reformatting": [486, 614], "reformulated": 469, "refrain": [572, 579, 621], "refresh": 582, "refreshed": 556, "refs_to_clean": 611, "refspec": 611, "refus": [481, 496, 503, 506, 510, 528, 607, 626], "reg": [48, 142, 238, 391, 461, 483, 487, 505, 516, 585, 587, 592, 609, 628, 636, 646], "reg1": 487, "reg1024": 483, "reg1025": 483, "reg1026": 483, "reg1027": 483, "reg2": 487, "reg_bas": 487, "reg_nam": 505, "reg_offset": 487, "reg_sequent": [554, 585], "regalloc": [483, 492, 493, 648], "regalloclinearscan": 483, "regallocregistry": 648, "regard": [470, 486, 543, 579], "regarded": [486, 518, 578], "regarding": [461, 495, 512, 549, 572, 620, 634], "regardless": [461, 466, 469, 481, 486, 496, 503, 506, 510, 513, 525, 528, 547, 552, 579, 593, 606, 607, 625, 626, 632, 639, 655, 674, 685], "regbankselect": 564, "regbankselected": [560, 585], "regconstraint": 483, "regcost": 635, "regenerat": 574, "regex": [499, 504, 515, 526, 529, 530, 620, 640, 641], "regex_replac": 491, "regexp": 491, "region": [461, 465, 466, 473, 499, 513, 534, 540, 579, 580, 583, 588, 611, 616, 618, 626, 628, 636, 643], "region0": 535, "region1": 535, "regioninfo": [607, 616], "regionsforfile0": 535, "regionsforfile1": 535, "regionvectoriz": 615, "regist": [16, 19, 48, 57, 87, 117, 120, 142, 147, 173, 202, 205, 238, 277, 326, 359, 362, 391, 400, 432, 463, 464, 465, 469, 470, 472, 480, 487, 488, 492, 493, 505, 513, 528, 529, 534, 538, 540, 543, 547, 550, 555, 556, 557, 558, 559, 560, 561, 562, 575, 579, 587, 592, 594, 608, 609, 616, 618, 626, 628, 630, 634, 636, 637, 645, 647, 648, 649, 670, 673, 674, 675, 676, 681, 684, 685], "register": [32, 43, 45, 221, 233, 235, 375, 386, 388, 461, 465, 472, 487, 505, 513, 516, 529, 540, 547, 555, 556, 559, 560, 562, 564, 579, 587, 607, 609, 625, 628, 630, 634, 636, 646, 648, 674, 676, 685], "registeralias": 634, "registeranalysisgroup": 469, "registerasmprint": 646, "registerasmstream": 483, "registerbankinfo": [554, 561], "registerclass": [483, 634, 637, 646], "registerdescriptor": 646, "registered": [467, 530, 608, 648, 649, 652, 670, 681], "registeredarg": 547, "registerehfram": 584, "registerinfo": [483, 585, 636, 646], "registering": [536, 567, 584, 593, 646, 681, 682, 683, 684, 685], "registerlist": 646, "registermcobjectstream": 483, "registermyp": 648, "registerpass": 648, "registerpassbuildercallback": 648, "registerpasspars": 648, "registerregalloc": 648, "registerschedul": 648, "registerstandardp": 648, "registertarget": 646, "registerwithsubreg": 646, "registr": [142, 532, 536, 543, 547, 593, 654], "registry": [547, 648, 675], "reglist": 646, "regmapping_f": 483, "regmask": 585, "regno": 483, "regnum": 628, "regoffset": 587, "regress": [477, 487, 536, 538, 550, 552, 553, 560, 581, 610, 611, 619, 626, 647], "regressed": 491, "regstat": [483, 585], "regtyp": 646, "regular": [461, 464, 466, 470, 478, 486, 487, 491, 495, 499, 504, 506, 508, 511, 514, 515, 517, 526, 529, 530, 531, 550, 579, 581, 585, 591, 593, 611, 615, 620, 632, 636, 640, 652, 677, 686], "regularly": 632, "regulating": 648, "reid": 631, "reilly": 609, "reinterpret": [472, 555], "reinterpreting": 559, "reintroduc": 626, "rej": 682, "reject": [473, 487, 530, 550, 557, 572, 579, 681, 682, 683, 684, 685], "rejected": 487, "rejecting": [677, 686], "rejoin": 583, "rel": [466, 470, 472, 479, 483, 525, 534, 538, 611, 619, 626, 649, 674, 685], "rel32": 466, "rel_path_to_fil": 499, "relat": [49, 143, 240, 393, 465, 466, 469, 473, 474, 480, 481, 483, 486, 487, 491, 497, 516, 517, 518, 527, 534, 537, 542, 547, 548, 577, 583, 587, 590, 591, 609, 610, 611, 614, 616, 618, 622, 624, 628, 630, 653], "related": [461, 466, 469, 470, 476, 482, 483, 485, 486, 491, 513, 515, 526, 529, 533, 534, 538, 540, 542, 550, 554, 574, 577, 579, 581, 588, 590, 592, 597, 607, 609, 611, 612, 615, 617, 619, 622, 623, 625, 628, 632, 634, 641, 646, 648, 670, 672, 681, 682], "relational": [652, 673, 684], "relationship": [466, 487, 504, 537, 540, 547, 575, 577, 579, 591, 625, 630, 631, 646, 648, 649], "relative_function_pointer_to_async_impl": 534, "relatively": [474, 486, 491, 518, 530, 545, 549, 550, 579, 581, 590, 609, 616, 625, 626, 630, 655, 672, 676, 683], "relativenam": 527, "relax": [470, 513, 579], "relaxed": [513, 554, 555, 560, 579, 630], "relay": 579, "relbf": 579, "releas": [466, 479, 481, 483, 486, 498, 534, 536, 538, 539, 540, 545, 549, 550, 565, 568, 569, 570, 576, 581, 593, 606, 609, 610, 611, 620, 623, 625, 628, 632, 641, 646, 648, 650, 670], "release_1": 550, "release_11": 550, "release_29": 550, "release_350": 550, "release_39": 614, "release_fil": 572, "release_tester": 572, "released": [466, 486, 538, 572, 579, 582, 593, 632], "releasei": 619, "releasing": [572, 619], "relev": [461, 469, 470, 483, 485, 487, 522, 531, 534, 538, 545, 568, 569, 571, 572, 573, 577, 579, 583, 605, 606, 608, 609, 611, 612, 616, 621, 623, 630, 649, 672, 683], "reliability": 625, "reliabl": 531, "reliably": [481, 491, 544, 560, 616, 639], "relicens": 538, "relied": 579, "religion": 484, "relink": 477, "relinked": 498, "reload": [556, 581, 626, 674, 675, 676, 685], "reloaded": [483, 534, 547, 580], "reloading": 626, "reloc": [461, 465, 483, 493, 515, 516, 521, 522, 526, 547, 571, 574, 579, 584, 585, 618, 646, 675], "reloc_absolute_dword": 646, "reloc_absolute_word": 646, "reloc_pcrel_word": 646, "reloc_picrel_word": 646, "relocat": [49, 143, 240, 393, 461, 466, 493, 515, 579, 584, 593, 646], "relocated": [461, 466, 527, 579, 597, 630, 646], "relocationtyp": 646, "reloccrc": 597, "relpos": 495, "relr": [521, 522], "relwithdebinfo": [479, 481, 550, 569], "rely": [461, 472, 474, 482, 483, 486, 534, 538, 545, 547, 548, 559, 579, 581, 593, 602, 611, 625, 630, 641, 645, 647, 655], "relying": [582, 626, 641], "rem": 483, "remain": [461, 466, 470, 481, 486, 487, 537, 538, 540, 547, 559, 560, 575, 579, 583, 594, 609, 616, 621, 623, 625, 626, 630, 632, 636, 641, 654, 674, 685], "remaind": [461, 465, 483, 487, 534, 535, 541, 550, 579, 607, 614, 626, 635, 636, 641, 642, 645, 646], "remaining": [461, 466, 475, 513, 534, 535, 538, 542, 572, 579, 585, 602, 607, 609, 625, 628, 630, 651, 673, 684], "remainingbuffersizetoskip": 651, "remap": [489, 562, 584], "remapped": [483, 489, 501], "remapping": [466, 483, 490, 518], "remark": [489, 492, 614, 644, 645], "remarkably": 477, "remarkemitt": 614, "remarkstream": 620, "rematerializ": [589, 607], "rematerializing": 470, "rememb": [476, 484, 485, 486, 530, 533, 543, 548, 552, 568, 571, 579, 581, 609, 630, 640, 648, 669, 672, 674, 675, 676, 680, 683, 685], "remember": [669, 672, 680, 683], "remembered": 486, "remembering": [530, 672, 683], "remind": [572, 588, 611], "reminding": 538, "remot": [584, 593, 611, 654, 657], "remoteobjectclientlai": 593, "remoteobjectserverlai": 593, "remov": [461, 469, 477, 478, 479, 483, 486, 499, 506, 515, 526, 528, 530, 534, 538, 540, 543, 545, 550, 576, 579, 580, 581, 582, 583, 585, 591, 592, 593, 594, 609, 611, 614, 618, 623, 630, 631, 632, 641, 642, 643, 646, 648, 670, 671, 672, 673, 674, 675, 676, 677, 683, 686], "removal": [538, 593, 609, 623], "remove_": 609, "removebranch": 646, "removed": [461, 466, 473, 479, 481, 483, 486, 487, 489, 491, 495, 499, 503, 513, 538, 539, 540, 554, 556, 559, 572, 576, 579, 582, 583, 585, 590, 591, 593, 606, 607, 609, 618, 625, 630, 632, 656, 671, 682], "removefromparent": 609, "removemodul": [593, 656, 671], "removeobject": 593, "removing": [461, 477, 478, 487, 492, 495, 515, 526, 573, 579, 582, 607, 609, 618, 630, 642, 643, 648], "renam": [461, 477, 478, 486, 515, 550, 554, 585, 611, 614, 619, 657], "renamed": [579, 593, 611, 614, 618, 625, 633, 674, 685], "renaming": [513, 579, 609, 614], "rend": 461, "render": [483, 557, 673, 684], "rendered": [483, 579, 609], "rendering": 650, "renseign": 142, "reopen": 476, "reord": [470, 513, 579, 625], "reordered": [466, 470, 487, 555, 630], "reordering": [466, 470, 513, 537, 575, 579, 625], "reorganiz": [616, 636, 652], "repack": 611, "repeat": [477, 487, 587, 591, 611, 614, 619, 625], "repeated": [466, 513, 540, 542, 560, 570, 636], "repeatedly": [466, 544, 579], "repeating": [560, 579, 607], "repetit": [483, 487, 505, 632], "rephrased": [548, 579], "repl": [593, 636, 654, 655, 671], "replac": [461, 464, 465, 470, 483, 491, 495, 499, 500, 507, 509, 511, 515, 517, 520, 523, 525, 526, 527, 530, 531, 534, 538, 540, 545, 547, 550, 554, 560, 562, 565, 566, 575, 579, 580, 581, 582, 583, 590, 591, 592, 593, 594, 609, 611, 617, 618, 620, 625, 626, 630, 632, 636, 641, 642, 643, 646, 655, 656, 657, 671, 674, 685], "replace": 579, "replacealldbguseswith": 575, "replaceallus": 559, "replacealluseswith": [575, 580, 583, 591, 609], "replaced": [461, 466, 491, 499, 511, 514, 534, 538, 540, 545, 547, 557, 560, 575, 579, 585, 591, 607, 609, 616, 618, 625, 630, 631, 636, 641], "replaceinstwithinst": 609, "replaceinstwithvalu": 609, "replaceoperandwith": 642, "replaceusesofwith": [580, 609], "replaceusesofwithonconst": 580, "replacing": [478, 481, 534, 555, 557, 559, 560, 579, 583, 611, 616, 630, 641, 654], "replay": 466, "replicat": [574, 582, 594, 616], "replicated": [461, 616, 652], "reply": [538, 572, 614], "repo": [538, 539, 550, 572, 605, 611, 648], "report": [461, 466, 471, 477, 484, 487, 491, 492, 497, 507, 509, 511, 513, 515, 516, 523, 525, 526, 527, 529, 535, 546, 549, 565, 566, 569, 572, 579, 580, 581, 582, 583, 609, 611, 618, 619, 622, 628, 629, 635, 640, 641, 648, 653, 670, 681], "report_fatal_error": [486, 609], "reported": [461, 466, 469, 476, 491, 546, 547, 549, 572, 579, 581, 623, 625, 626, 630, 636, 640, 642], "reporter": [476, 549, 623], "reporterror": [654, 655, 656, 657], "reporting": [466, 477, 484, 513, 566, 575, 579, 593, 609, 625, 635, 641, 642, 654], "repos": 572, "repositor": [538, 539, 632], "repository": [485, 538, 539, 540, 549, 550, 553, 571, 572, 574, 608, 613, 614, 623, 625, 632, 641], "represent": [464, 466, 472, 473, 474, 475, 480, 482, 483, 486, 514, 515, 517, 518, 529, 530, 533, 537, 540, 541, 544, 545, 547, 548, 550, 554, 555, 556, 559, 560, 564, 569, 576, 580, 583, 585, 587, 590, 592, 593, 597, 599, 604, 605, 607, 609, 611, 614, 616, 617, 618, 623, 625, 626, 628, 634, 635, 636, 637, 639, 643, 644, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686], "represented": [461, 466, 469, 470, 472, 473, 475, 482, 513, 530, 534, 537, 540, 541, 542, 543, 554, 576, 579, 583, 585, 590, 592, 596, 604, 607, 609, 611, 616, 625, 630, 634, 635, 636, 643, 652, 670, 681], "representing": [49, 143, 240, 393, 461, 465, 469, 473, 487, 491, 504, 513, 515, 534, 537, 540, 543, 545, 547, 554, 555, 576, 579, 597, 601, 604, 607, 609, 616, 618, 620, 625, 626, 630, 634, 635, 636, 646], "reprimand": 621, "repro": 553, "reproduc": [476, 477, 486, 489, 533, 538, 553, 574, 581, 641, 674, 685], "reproduced": [476, 572], "reproducibl": [476, 539], "reproducing": [477, 594], "repurpos": 625, "reqd_work_group_siz": 466, "reqd_workgroup_siz": 466, "reqdworkgroupsiz": 466, "request": [60, 250, 403, 466, 476, 495, 533, 538, 540, 550, 559, 580, 581, 582, 590, 593, 608, 611, 614, 621, 623, 630, 632, 636, 642, 651, 654, 656], "requested": [461, 466, 473, 485, 487, 513, 515, 526, 539, 542, 555, 579, 581, 584, 593, 609, 614, 620, 622, 628, 655, 675], "requesting": [533, 538, 572, 579, 623, 628], "requir": [461, 466, 468, 469, 470, 472, 473, 477, 479, 480, 481, 482, 483, 485, 486, 487, 491, 495, 499, 505, 511, 512, 513, 516, 530, 534, 535, 540, 541, 543, 544, 545, 548, 553, 554, 558, 559, 560, 564, 565, 566, 568, 569, 571, 572, 573, 578, 579, 581, 582, 583, 584, 590, 593, 594, 599, 607, 609, 610, 611, 614, 619, 621, 622, 623, 625, 626, 628, 630, 631, 634, 635, 636, 639, 642, 646, 652, 654, 668, 670, 671, 672, 674, 675, 676, 677, 678, 679, 681, 682, 683, 685, 686], "required": [461, 463, 464, 465, 466, 468, 470, 471, 472, 473, 481, 482, 486, 487, 491, 501, 507, 515, 516, 519, 525, 526, 532, 534, 535, 538, 540, 541, 543, 544, 545, 546, 547, 550, 552, 554, 560, 571, 572, 577, 578, 579, 582, 583, 584, 585, 591, 592, 593, 594, 601, 607, 609, 611, 620, 625, 626, 628, 630, 634, 635, 636, 639, 641, 642, 646, 651, 652, 654, 669, 672, 673, 674, 675, 676, 680, 683, 684, 685], "requires_rtt": 606, "requiring": [461, 477, 505, 530, 538, 547, 548, 579, 581, 593, 599, 608, 614, 626, 648], "rerereresolved": 611, "rerereunresolved": 611, "rerun": [550, 608], "resbyarg": 579, "rescanned": 591, "reschedul": 625, "research": [541, 613, 623, 626, 640, 653], "researcher": [623, 626], "resembl": [548, 626], "resembling": 626, "reserv": [466, 471, 483, 626, 628], "reserved": [466, 473, 483, 544, 579, 581, 596, 597, 604, 628, 630, 636, 641, 646, 651], "reserved_464": 466, "reserved_468": 466, "reserveresourc": 483, "reserving": 628, "reset": [466, 473, 481, 540, 553, 581, 609, 626, 636], "resetting": [589, 651], "resid": [461, 466, 472, 473, 480, 534, 547, 579, 581, 592, 593, 601, 622, 625, 626], "resident": [464, 648], "residing": [626, 632], "resign": 538, "resilient": [513, 588, 632], "resist": 581, "resolu": [471, 476, 486, 531, 538, 560, 579, 593, 621, 623, 671, 673], "resolv": [466, 476, 483, 484, 491, 536, 579, 582, 618, 629, 632, 636, 648, 655, 656, 670, 671, 681, 682], "resolved": [49, 143, 240, 393, 465, 476, 482, 485, 505, 538, 579, 584, 593, 609, 621, 626, 636, 651, 671, 672, 682, 683], "resolver": 593, "resolvereloc": 584, "resolverty": 579, "resolving": [479, 531, 538, 614, 623], "resorting": 540, "resourc": [22, 29, 30, 62, 63, 120, 123, 129, 130, 151, 152, 205, 208, 218, 219, 252, 253, 344, 362, 365, 372, 373, 405, 406, 464, 482, 505, 513, 522, 530, 539, 540, 564, 593, 609, 646, 648], "resourcetrack": [671, 672, 673, 674], "resourcetrackersp": [654, 655, 656, 657], "resp": [505, 579, 609], "respect": [461, 466, 481, 504, 531, 538, 547, 555, 573, 579, 580, 583, 593, 611, 618, 623, 630, 639, 641, 674, 685], "respected": [538, 548, 579, 609], "respectful": 484, "respecting": [611, 620], "respectively": [461, 466, 469, 477, 481, 483, 486, 488, 501, 513, 518, 522, 523, 525, 527, 531, 534, 540, 547, 548, 550, 555, 579, 585, 587, 593, 609, 610, 611, 630, 637, 641, 643, 646, 654, 656], "respond": [469, 485, 588, 607, 608, 621], "responding": [469, 533, 623], "respons": [495, 500, 514, 515, 516, 521, 522, 523, 525, 526, 527, 579, 621, 623, 628], "responsibilit": [632, 648], "responsibility": [485, 538, 572, 579, 607, 608, 630, 632], "responsibl": [466, 483, 485, 513, 534, 538, 540, 547, 557, 579, 593, 602, 607, 608, 609, 616, 620, 623, 624, 632, 634, 642, 643, 652, 654], "responsibly": 547, "rest": [239, 392, 461, 466, 473, 483, 487, 506, 534, 538, 547, 550, 554, 559, 564, 566, 579, 581, 582, 585, 586, 591, 601, 609, 620, 625, 627, 631, 636, 649, 671, 674, 685], "restart": [470, 559, 567, 581, 609, 648], "restarting": 648, "restating": 486, "restofthecleanup": 534, "restor": [461, 466, 483, 534, 540, 578, 579, 624, 626, 646, 672, 673, 674, 675, 676, 683, 684, 685], "restored": [466, 473, 483, 540, 578], "restoring": [461, 578, 646], "restrict": [461, 466, 470, 486, 513, 530, 538, 541, 542, 543, 548, 554, 578, 579, 585, 590, 596, 609, 611, 625, 626, 628, 630, 645, 648], "restricted": [461, 466, 483, 538, 579, 626, 630, 632, 636], "restricting": [461, 525, 671], "restructuredtext": 627, "restructuring": 642, "result": [461, 464, 465, 466, 470, 472, 473, 477, 479, 480, 481, 482, 483, 486, 487, 488, 489, 493, 496, 499, 504, 505, 513, 517, 518, 528, 530, 531, 534, 535, 536, 538, 540, 541, 543, 545, 547, 548, 549, 550, 552, 553, 554, 555, 559, 560, 566, 569, 572, 575, 576, 579, 581, 583, 584, 590, 591, 592, 593, 594, 595, 601, 602, 607, 609, 611, 614, 615, 619, 620, 625, 626, 631, 632, 636, 637, 640, 641, 642, 645, 646, 647, 648, 649, 650, 652, 654, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "result_typ": 579, "resulted": [477, 574, 579, 583], "resulting": [461, 477, 479, 483, 517, 518, 530, 534, 537, 539, 542, 545, 559, 565, 570, 574, 577, 579, 583, 585, 592, 607, 609, 611, 626, 628, 630, 634, 636, 646, 649, 656], "results_": 639, "results_b": 639, "resultty": 579, "resulttyp": 579, "resultval": 579, "resum": [466, 536, 540, 581, 628], "resume1": 534, "resume2": 534, "resume_func_ptr": 534, "resumed": 534, "resuming": [534, 536], "resumpt": 534, "ret": [470, 472, 475, 483, 487, 534, 540, 543, 547, 548, 575, 583, 585, 586, 590, 592, 607, 609, 624, 625, 626, 627, 628, 630, 636, 641, 643, 647, 670, 671, 672, 674, 681, 682, 683, 685], "ret_typ": 579, "ret_val": [681, 682, 683, 684, 685], "retain": [461, 466, 472, 538, 543, 609, 648], "retained": [530, 579, 580, 622, 636], "retainednod": [575, 579, 625], "retainedtyp": [579, 625], "retaining": [461, 609], "retarget": 483, "retargetting": 644, "retcc_sparc32": 646, "retcc_x86_32": 646, "retcc_x86_32_c": 646, "retcc_x86_32_fast": 646, "retcc_x86_32_ss": 646, "retcc_x86common": 646, "rethrow": [540, 630], "retired": [513, 538], "retiring": 513, "retpolin": 626, "retq": [585, 626, 630], "retriev": [461, 495, 529, 530, 540, 584, 592, 608, 609, 620, 630, 634, 648, 652], "retrieval": [609, 628], "retrieved": [461, 584, 636], "retrieving": [461, 542, 636], "retriv": 590, "retroactively": 538, "retry": 649, "retrying": 632, "retty": 473, "return": [461, 464, 466, 467, 469, 470, 472, 473, 475, 477, 478, 483, 485, 487, 489, 493, 499, 500, 504, 505, 512, 513, 517, 518, 521, 522, 524, 527, 529, 530, 531, 534, 535, 536, 540, 541, 543, 545, 547, 550, 552, 555, 556, 557, 559, 561, 566, 573, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 590, 591, 592, 593, 594, 607, 609, 622, 624, 625, 627, 628, 629, 630, 631, 634, 635, 636, 643, 645, 646, 647, 648, 649, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "return_addr": 626, "return_address_regist": [461, 466], "returnaddress": 585, "returndoesnotali": 579, "returned": [41, 42, 137, 138, 231, 232, 336, 384, 385, 461, 466, 469, 473, 489, 500, 536, 540, 555, 579, 584, 589, 591, 607, 609, 622, 630, 634, 635, 646, 648, 652, 668, 669, 671, 672, 679, 680, 682, 683], "returnindex": 576, "returning": [461, 469, 486, 534, 540, 573, 579, 607, 624, 626, 634, 635, 648, 669, 671, 672, 673, 674, 675, 676, 682, 683, 684, 685], "returns_signed_char": 579, "returns_twic": [473, 579], "returntyp": [547, 579], "retval": [540, 579, 670, 671, 672, 673, 674, 675, 676], "reus": [482, 537, 564, 611, 625, 626, 628, 636, 647], "reusabl": [483, 564], "reused": [466, 487, 537, 566, 579, 614], "reusing": [483, 611, 637], "rev": [472, 611, 614, 680, 681, 682, 683, 684, 685], "rev128": 472, "rev64": 472, "reveal": [548, 626], "revectored": [607, 609], "revers": [464, 472, 481, 487, 514, 548, 555, 579, 580, 607, 609, 626], "reversed": [472, 625, 636], "reversibl": 626, "reversing": 626, "revert": [461, 485, 538, 550, 579], "reverted": [485, 538, 550, 632], "reverting": [485, 538, 632], "review": [476, 480, 486, 533, 545, 549, 550, 552, 572, 580, 581, 586, 591, 611, 614, 615, 616, 621, 623, 627, 630, 631, 632, 636], "reviewed": [533, 538, 550, 608, 623], "reviewer": [476, 485, 533, 538, 572], "reviewing": [485, 533, 623], "revis": [214, 216, 217, 226, 228, 229, 476, 481, 485, 486, 538, 539, 545, 550, 553, 572, 608, 609, 626, 628, 630, 632], "revised": 625, "revisit": 486, "revisited": 616, "revlist": 611, "revmap": 611, "revoc": 623, "revoked": [538, 623], "revolv": 625, "rewording": 487, "rework": 538, "reworking": 530, "rewound": 540, "rewrit": [481, 538, 573, 575, 607, 611, 630, 646, 674, 685], "rewriter": 529, "rewritestatepointsforgc": [547, 579], "rewriting": [513, 579, 580, 611, 626, 630], "rewritten": [483, 534, 609, 611], "rex": 579, "rf": [586, 627, 641, 646], "rfc": [538, 580, 615, 623, 632], "rfunc": 506, "rg": 608, "rgb": 613, "rgba": 464, "rglob": 506, "rgm": 648, "rh": [486, 579, 591, 609, 634, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "rhs_val": [681, 682, 683, 684, 685], "ri": [547, 579, 636, 646], "ri_inst": 636, "ric": 537, "ricc": 614, "ricciacronym": 614, "rich": [554, 617, 628], "richness": 587, "rid": [591, 597], "right": [461, 464, 465, 466, 470, 472, 482, 483, 486, 488, 505, 530, 533, 537, 538, 541, 543, 545, 550, 555, 566, 573, 574, 579, 583, 585, 591, 602, 607, 608, 611, 619, 626, 627, 634, 636, 641, 651, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686], "right_op": 579, "rightr": 591, "rigorous": [483, 632], "riinst": 636, "riley": 623, "ring": 466, "rip": [516, 579, 585, 637, 641], "ris": 486, "risc": [470, 483, 579, 614, 615, 646], "riscv": 529, "risk": [568, 579, 625, 626], "risking": 609, "risky": 626, "rival": 609, "rk": 635, "rl": [461, 592], "rl1": 592, "rl2": 592, "rl247405": 581, "rl247414": 581, "rl247416": 581, "rl247417": 581, "rl247420": 581, "rl247422": 581, "rl3": 592, "rl317337": 622, "rl4": 592, "rl5": 592, "rl6": 592, "rl7": 592, "rm": [550, 579, 581, 586, 627, 636, 637, 641, 646, 650, 675], "rmrk": 620, "rmw": 470, "rn": [542, 592], "rnglist": 504, "ro_signed_pat": 637, "roadmap": [549, 632], "rob": [513, 531], "robert": 531, "robin": 513, "robinson": [614, 623], "robinsonagre": 614, "robinsondistinguish": 614, "robinsondistinguish2": 614, "robinsontransit": 614, "robot": 549, "robust": [531, 564, 575, 579, 587, 612, 641], "robustness": 485, "rocgdb": 461, "rocm": [461, 466], "rodat": [466, 626, 646], "rogu": 626, "rol": [486, 517, 583, 591, 609, 619, 625, 630, 669, 680], "rolled": [486, 573], "rolling": 588, "rom": 515, "roms_": 613, "roms_r": 613, "room": [576, 648, 669, 680], "root": [476, 481, 483, 491, 498, 538, 539, 550, 566, 567, 571, 579, 580, 583, 601, 609, 610, 611, 614, 622, 634, 641, 648, 650, 670, 681], "rootcount": 547, "rooted": 583, "rootmetadat": 547, "rootnum": 547, "roots_begin": 547, "roots_end": 547, "roots_iterator": 547, "roots_siz": 547, "rootstackoffset": 547, "rop": 609, "rot": [538, 632], "rotat": [461, 464, 483, 541, 579, 583], "rotated": 607, "rotl": 541, "rough": 548, "roughly": [470, 483, 531, 540, 572, 573, 580, 581, 614, 625], "roun": 531, "round": [466, 472, 483, 513, 566, 572, 626, 652, 673, 684], "rounded": [461, 466, 531, 555, 579], "rounding": [555, 579], "roundp": 645, "roundtointegraltiestoeven": 579, "roundup": 466, "routin": [461, 470, 483, 491, 540, 547, 579, 591, 607, 626, 630, 631, 648, 649, 651, 669, 677, 678, 679, 680, 682, 686], "routinely": 538, "rovid": 566, "row": [464, 513, 577, 579], "row_bcast": [464, 466], "row_half_mirror": 464, "row_mask": [0, 1, 3, 4, 7, 8, 466], "row_mirror": [464, 466], "row_ror": 464, "row_shar": 464, "row_shl": [464, 466], "row_shr": 464, "row_xmask": 464, "rowfield": 577, "rpass": 645, "rpath": [490, 550], "rpc": [593, 651], "rpcc": 579, "rpmalloc": 481, "rpo": 580, "rppassmanag": 648, "rr": [636, 646], "rrinst": 636, "rs1": 646, "rs2": 646, "rs4gc": 630, "rs880": 466, "rsb": 626, "rsi": [483, 626, 637], "rsp": [483, 585, 624, 626, 628, 630, 637], "rsrc": [464, 522], "rss": [581, 622], "rss_limit_mb": 581, "rst": [467, 483, 529, 627, 634], "rsync": 639, "rt": [468, 470, 479, 481, 482, 546, 550, 553, 566, 568, 569, 572, 579, 593, 611, 614, 618, 619, 622, 632, 644, 646, 649, 654, 655, 656, 657, 671, 672, 673, 674], "rtc": 642, "rtdyldobjectlinkinglai": [593, 654, 655, 656, 657], "rthroughput": 513, "rtl": 483, "rtld_fin": 536, "rtlib": 618, "rtti": [481, 540, 606, 609, 617, 643, 674, 675, 676], "rttiextend": 573, "rttiroot": 573, "ruby": 547, "rud": 540, "rudimentary": 618, "rui": 614, "rul": [463, 466, 470, 483, 484, 486, 487, 489, 496, 501, 513, 517, 529, 531, 534, 538, 554, 556, 571, 578, 591, 593, 609, 610, 614, 619, 620, 622, 625, 626, 630, 631, 632, 636, 637, 640, 641, 648, 651, 670, 671, 672, 681, 683], "ruleset": 559, "run": [461, 466, 468, 469, 470, 471, 472, 477, 478, 481, 482, 483, 487, 488, 489, 498, 499, 505, 513, 518, 528, 529, 530, 531, 532, 533, 534, 536, 539, 540, 543, 544, 545, 546, 547, 549, 550, 552, 560, 565, 568, 569, 570, 571, 572, 574, 575, 579, 581, 582, 584, 585, 590, 591, 592, 593, 594, 606, 607, 608, 609, 610, 611, 614, 617, 618, 619, 623, 625, 626, 628, 630, 632, 634, 635, 637, 639, 640, 641, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "run_funct": [682, 683, 684, 685], "run_long_test": 641, "runbeforepass": 647, "runfunct": [536, 609], "runfunctionasmain": 536, "runhelp": 486, "runn": 639, "runnabl": 550, "running": [466, 468, 477, 478, 481, 482, 483, 486, 488, 489, 491, 499, 515, 520, 533, 534, 535, 539, 543, 547, 549, 550, 551, 552, 556, 565, 567, 568, 569, 570, 575, 579, 589, 590, 593, 594, 606, 607, 608, 609, 611, 619, 623, 630, 635, 636, 641, 645, 649, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685], "runonfunct": [469, 477, 594, 609, 646, 650], "runonmachinefunct": [483, 558, 594, 646], "runonmodul": 650, "runtest": [571, 619], "runtim": [461, 466, 468, 470, 473, 475, 477, 479, 481, 483, 486, 487, 499, 513, 516, 527, 530, 531, 532, 536, 538, 544, 547, 550, 570, 580, 581, 583, 593, 602, 607, 609, 611, 624, 625, 628, 630, 631, 639, 642, 646, 648, 650, 652, 655, 656, 671, 673, 677, 684, 686], "runtimedyld": [584, 593], "runtimedyldelf": 584, "runtimedyldimpl": 584, "runtimedyldmacho": 584, "runtimehandl": 466, "runtimevers": [575, 579, 625], "rust": [614, 623], "rv": 591, "rv670": 466, "rv710": 466, "rv730": 466, "rv770": 466, "rvaluereferent": 596, "rvaluerefthispoint": 596, "rw": 579, "rx": [466, 636], "ryzen": 466, "rzi": 592, "r\u00e9f\u00e9rent": 653, "s0": [465, 466, 579], "s1": [466, 554, 555], "s15": 579, "s16": [554, 555, 559], "s17": 554, "s2": [48, 142, 238, 391, 466], "s3": [465, 466], "s31": 579, "s32": [0, 2, 3, 4, 554, 555, 556, 558, 559, 575, 585, 592], "s33": 555, "s4": [465, 466], "s5": [465, 466], "s6": [465, 466], "s64": [0, 2, 3, 4, 554, 555, 559, 592], "s7": [465, 559], "s7100": 466, "s7150": 466, "s8": [554, 555], "s9": 579, "s9150": 466, "s9170": 466, "s9300x2": 466, "s_abs_i32": [0, 2, 3, 4], "s_absdiff_i32": [0, 2, 3, 4], "s_add_i32": [0, 2, 3, 4], "s_add_u32": [0, 2, 3, 4, 466, 585], "s_addc_u32": [0, 2, 3, 4, 466], "s_addk_i32": [0, 2, 3, 4], "s_and_b32": [0, 2, 3, 4], "s_and_b64": [0, 2, 3, 4, 466], "s_and_saveexec_b32": 0, "s_and_saveexec_b64": [0, 2, 3, 4], "s_andn1_saveexec_b32": 0, "s_andn1_saveexec_b64": [0, 4], "s_andn1_wrexec_b32": 0, "s_andn1_wrexec_b64": [0, 4], "s_andn2_b32": [0, 2, 3, 4, 466], "s_andn2_b64": [0, 2, 3, 4], "s_andn2_saveexec_b32": 0, "s_andn2_saveexec_b64": [0, 2, 3, 4], "s_andn2_wrexec_b32": 0, "s_andn2_wrexec_b64": [0, 4], "s_annot": 579, "s_arch": 531, "s_ashr_i32": [0, 2, 3, 4, 466], "s_ashr_i64": [0, 2, 3, 4], "s_atc_prob": [0, 3, 4], "s_atc_probe_buff": [0, 3, 4], "s_atomic_add": [0, 4], "s_atomic_add_x2": [0, 4], "s_atomic_and": [0, 4], "s_atomic_and_x2": [0, 4], "s_atomic_cmpswap": [0, 4], "s_atomic_cmpswap_x2": [0, 4], "s_atomic_dec": [0, 4], "s_atomic_dec_x2": [0, 4], "s_atomic_inc": [0, 4], "s_atomic_inc_x2": [0, 4], "s_atomic_or": [0, 4], "s_atomic_or_x2": [0, 4], "s_atomic_smax": [0, 4], "s_atomic_smax_x2": [0, 4], "s_atomic_smin": [0, 4], "s_atomic_smin_x2": [0, 4], "s_atomic_sub": [0, 4], "s_atomic_sub_x2": [0, 4], "s_atomic_swap": [0, 4], "s_atomic_swap_x2": [0, 4], "s_atomic_umax": [0, 4], "s_atomic_umax_x2": [0, 4], "s_atomic_umin": [0, 4], "s_atomic_umin_x2": [0, 4], "s_atomic_xor": [0, 4], "s_atomic_xor_x2": [0, 4], "s_barri": [0, 2, 3, 4, 466], "s_bcnt0_i32_b32": [0, 2, 3, 4], "s_bcnt0_i32_b64": [0, 2, 3, 4, 463, 466], "s_bcnt1_i32_b32": [0, 2, 3, 4], "s_bcnt1_i32_b64": [0, 2, 3, 4], "s_bfe_i32": [0, 2, 3, 4], "s_bfe_i64": [0, 2, 3, 4, 465, 466], "s_bfe_u32": [0, 2, 3, 4], "s_bfe_u64": [0, 2, 3, 4, 465], "s_bfm_b32": [0, 2, 3, 4], "s_bfm_b64": [0, 2, 3, 4, 466], "s_bitcmp0_b32": [0, 2, 3, 4], "s_bitcmp0_b64": [0, 2, 3, 4, 466], "s_bitcmp1_b32": [0, 2, 3, 4, 466], "s_bitcmp1_b64": [0, 2, 3, 4], "s_bitreplicate_b64_b32": [0, 4], "s_bitset0_b32": [0, 2, 3, 4], "s_bitset0_b64": [0, 2, 3, 4], "s_bitset1_b32": [0, 2, 3, 4], "s_bitset1_b64": [0, 2, 3, 4], "s_branch": [0, 2, 3, 4, 49, 143, 240, 393, 465], "s_brev_b32": [0, 2, 3, 4], "s_brev_b64": [0, 2, 3, 4], "s_buffer_atomic_add": [0, 4], "s_buffer_atomic_add_x2": [0, 4], "s_buffer_atomic_and": [0, 4], "s_buffer_atomic_and_x2": [0, 4], "s_buffer_atomic_cmpswap": [0, 4], "s_buffer_atomic_cmpswap_x2": [0, 4], "s_buffer_atomic_dec": [0, 4], "s_buffer_atomic_dec_x2": [0, 4], "s_buffer_atomic_inc": [0, 4], "s_buffer_atomic_inc_x2": [0, 4], "s_buffer_atomic_or": [0, 4], "s_buffer_atomic_or_x2": [0, 4], "s_buffer_atomic_smax": [0, 4], "s_buffer_atomic_smax_x2": [0, 4], "s_buffer_atomic_smin": [0, 4], "s_buffer_atomic_smin_x2": [0, 4], "s_buffer_atomic_sub": [0, 4], "s_buffer_atomic_sub_x2": [0, 4], "s_buffer_atomic_swap": [0, 4], "s_buffer_atomic_swap_x2": [0, 4], "s_buffer_atomic_umax": [0, 4], "s_buffer_atomic_umax_x2": [0, 4], "s_buffer_atomic_umin": [0, 4], "s_buffer_atomic_umin_x2": [0, 4], "s_buffer_atomic_xor": [0, 4], "s_buffer_atomic_xor_x2": [0, 4], "s_buffer_load_dword": [0, 2, 3, 4], "s_buffer_load_dwordx16": [0, 2, 3, 4], "s_buffer_load_dwordx2": [0, 2, 3, 4], "s_buffer_load_dwordx4": [0, 2, 3, 4], "s_buffer_load_dwordx8": [0, 2, 3, 4], "s_buffer_store_dword": [0, 3, 4], "s_buffer_store_dwordx2": [0, 3, 4], "s_buffer_store_dwordx4": [0, 3, 4], "s_call_b64": [0, 4], "s_cbranch_cdbgsy": [0, 2, 3, 4], "s_cbranch_cdbgsys_and_us": [0, 2, 3, 4], "s_cbranch_cdbgsys_or_us": [0, 2, 3, 4], "s_cbranch_cdbgus": [0, 2, 3, 4], "s_cbranch_execnz": [0, 2, 3, 4], "s_cbranch_execz": [0, 2, 3, 4], "s_cbranch_g_fork": [2, 3, 4, 466], "s_cbranch_i_fork": [2, 3, 4], "s_cbranch_join": [2, 3, 4, 466], "s_cbranch_scc0": [0, 2, 3, 4], "s_cbranch_scc1": [0, 2, 3, 4], "s_cbranch_vccnz": [0, 2, 3, 4], "s_cbranch_vccz": [0, 2, 3, 4], "s_claus": 0, "s_cmov_b32": [0, 2, 3, 4, 466], "s_cmov_b64": [0, 2, 3, 4], "s_cmovk_i32": [0, 2, 3, 4], "s_cmp_eq_i32": [0, 2, 3, 4, 466], "s_cmp_eq_u32": [0, 2, 3, 4], "s_cmp_eq_u64": [0, 3, 4], "s_cmp_ge_i32": [0, 2, 3, 4], "s_cmp_ge_u32": [0, 2, 3, 4], "s_cmp_gt_i32": [0, 2, 3, 4], "s_cmp_gt_u32": [0, 2, 3, 4], "s_cmp_le_i32": [0, 2, 3, 4], "s_cmp_le_u32": [0, 2, 3, 4], "s_cmp_lg_i32": [0, 2, 3, 4], "s_cmp_lg_u32": [0, 2, 3, 4], "s_cmp_lg_u64": [0, 3, 4], "s_cmp_lt_i32": [0, 2, 3, 4], "s_cmp_lt_u32": [0, 2, 3, 4], "s_cmpk_eq_i32": [0, 2, 3, 4], "s_cmpk_eq_u32": [0, 2, 3, 4], "s_cmpk_ge_i32": [0, 2, 3, 4], "s_cmpk_ge_u32": [0, 2, 3, 4], "s_cmpk_gt_i32": [0, 2, 3, 4], "s_cmpk_gt_u32": [0, 2, 3, 4], "s_cmpk_le_i32": [0, 2, 3, 4], "s_cmpk_le_u32": [0, 2, 3, 4], "s_cmpk_lg_i32": [0, 2, 3, 4], "s_cmpk_lg_u32": [0, 2, 3, 4], "s_cmpk_lt_i32": [0, 2, 3, 4], "s_cmpk_lt_u32": [0, 2, 3, 4], "s_code_end": 0, "s_cselect_b32": [0, 2, 3, 4, 466], "s_cselect_b64": [0, 2, 3, 4], "s_dcache_discard": [0, 4], "s_dcache_discard_x2": [0, 4], "s_dcache_inv": [0, 2, 3, 4, 466], "s_dcache_inv_vol": [2, 3, 4, 466], "s_dcache_wb": [0, 3, 4, 466], "s_dcache_wb_vol": [3, 4], "s_decperflevel": [0, 2, 3, 4], "s_denorm_mod": 0, "s_endpgm": [0, 2, 3, 4, 466], "s_endpgm_ordered_ps_don": [0, 4], "s_endpgm_saved": [0, 3, 4], "s_ff0_i32_b32": [0, 2, 3, 4], "s_ff0_i32_b64": [0, 2, 3, 4], "s_ff1_i32_b32": [0, 2, 3, 4], "s_ff1_i32_b64": [0, 2, 3, 4], "s_flbit_i32": [0, 2, 3, 4], "s_flbit_i32_b32": [0, 2, 3, 4], "s_flbit_i32_b64": [0, 2, 3, 4], "s_flbit_i32_i64": [0, 2, 3, 4], "s_get_reg": 465, "s_get_waveid_in_workgroup": 0, "s_getpc_b64": [0, 2, 3, 4, 466], "s_getreg_b32": [0, 2, 3, 4, 48, 142, 238, 391], "s_gl1_inv": 0, "s_icache_inv": [0, 2, 3, 4], "s_incperflevel": [0, 2, 3, 4], "s_inst_prefetch": 0, "s_load_dword": [0, 2, 3, 4, 466], "s_load_dwordx16": [0, 2, 3, 4, 466], "s_load_dwordx2": [0, 2, 3, 4, 466], "s_load_dwordx4": [0, 2, 3, 4], "s_load_dwordx8": [0, 2, 3, 4, 466], "s_lshl1_add_u32": [0, 4], "s_lshl2_add_u32": [0, 4], "s_lshl3_add_u32": [0, 4], "s_lshl4_add_u32": [0, 4], "s_lshl_b32": [0, 2, 3, 4], "s_lshl_b64": [0, 2, 3, 4], "s_lshr_b32": [0, 2, 3, 4], "s_lshr_b64": [0, 2, 3, 4, 466], "s_max_i32": [0, 2, 3, 4], "s_max_u32": [0, 2, 3, 4], "s_memrealtim": [0, 3, 4], "s_memtim": [0, 2, 3, 4, 466], "s_min_i32": [0, 2, 3, 4], "s_min_u32": [0, 2, 3, 4], "s_mov_b32": [0, 2, 3, 4, 466], "s_mov_b64": [0, 2, 3, 4, 466], "s_movk_i32": [0, 2, 3, 4], "s_movreld_b32": [0, 2, 3, 4], "s_movreld_b64": [0, 2, 3, 4], "s_movrels_b32": [0, 2, 3, 4], "s_movrels_b64": [0, 2, 3, 4], "s_movrelsd_2_b32": 0, "s_mul_hi_i32": [0, 4], "s_mul_hi_u32": [0, 4], "s_mul_i32": [0, 2, 3, 4], "s_mulk_i32": [0, 2, 3, 4], "s_nand_b32": [0, 2, 3, 4], "s_nand_b64": [0, 2, 3, 4], "s_nand_saveexec_b32": 0, "s_nand_saveexec_b64": [0, 2, 3, 4], "s_nop": [0, 2, 3, 4, 466], "s_nor_b32": [0, 2, 3, 4], "s_nor_b64": [0, 2, 3, 4], "s_nor_saveexec_b32": 0, "s_nor_saveexec_b64": [0, 2, 3, 4], "s_not_b32": [0, 2, 3, 4], "s_not_b64": [0, 2, 3, 4], "s_or_b32": [0, 2, 3, 4], "s_or_b64": [0, 2, 3, 4], "s_or_saveexec_b32": 0, "s_or_saveexec_b64": [0, 2, 3, 4], "s_orn1_saveexec_b32": 0, "s_orn1_saveexec_b64": [0, 4], "s_orn2_b32": [0, 2, 3, 4], "s_orn2_b64": [0, 2, 3, 4], "s_orn2_saveexec_b32": 0, "s_orn2_saveexec_b64": [0, 2, 3, 4], "s_pack_hh_b32_b16": [0, 4], "s_pack_lh_b32_b16": [0, 4], "s_pack_ll_b32_b16": [0, 4], "s_quadmask_b32": [0, 2, 3, 4], "s_quadmask_b64": [0, 2, 3, 4], "s_rfe_b64": [0, 2, 3, 4], "s_rfe_restore_b64": [3, 4], "s_round_mod": 0, "s_scratch_load_dword": [0, 4], "s_scratch_load_dwordx2": [0, 4], "s_scratch_load_dwordx4": [0, 4], "s_scratch_store_dword": [0, 4], "s_scratch_store_dwordx2": [0, 4], "s_scratch_store_dwordx4": [0, 4], "s_sendmsg": [0, 2, 3, 4, 54, 145, 244, 397, 466], "s_sendmsghalt": [0, 2, 3, 4], "s_set_gpr_idx_idx": [3, 4], "s_set_gpr_idx_mod": [3, 4, 239, 392], "s_set_gpr_idx_off": [3, 4], "s_set_gpr_idx_on": [3, 4], "s_set_reg": 465, "s_sethalt": [0, 2, 3, 4, 466], "s_setkill": [0, 2, 3, 4], "s_setpc_b64": [0, 2, 3, 4, 466], "s_setprio": [0, 2, 3, 4], "s_setreg_b32": [0, 2, 3, 4], "s_setreg_imm32_b32": [0, 2, 3, 4], "s_setvskip": [2, 3, 4, 466], "s_sext_i32_i16": [0, 2, 3, 4], "s_sext_i32_i8": [0, 2, 3, 4], "s_sleep": [0, 2, 3, 4, 466], "s_store_dword": [0, 3, 4], "s_store_dwordx2": [0, 3, 4], "s_store_dwordx4": [0, 3, 4], "s_sub_i32": [0, 2, 3, 4], "s_sub_u32": [0, 2, 3, 4], "s_subb_u32": [0, 2, 3, 4], "s_subvector_loop_begin": 0, "s_subvector_loop_end": 0, "s_swappc_b64": [0, 2, 3, 4, 466], "s_trap": [0, 2, 3, 4, 466], "s_ttracedat": [0, 2, 3, 4], "s_ttracedata_imm": 0, "s_version": 0, "s_waitcnt": [0, 2, 3, 4, 114, 201, 303, 460, 466], "s_waitcnt_expcnt": 0, "s_waitcnt_lgkmcnt": 0, "s_waitcnt_vmcnt": 0, "s_waitcnt_vscnt": 0, "s_wakeup": [0, 3, 4], "s_wqm_b32": [0, 2, 3, 4], "s_wqm_b64": [0, 2, 3, 4, 466], "s_xnor_b32": [0, 2, 3, 4], "s_xnor_b64": [0, 2, 3, 4], "s_xnor_saveexec_b32": 0, "s_xnor_saveexec_b64": [0, 2, 3, 4], "s_xor_b32": [0, 2, 3, 4], "s_xor_b64": [0, 2, 3, 4], "s_xor_saveexec_b32": 0, "s_xor_saveexec_b64": [0, 2, 3, 4], "sacrific": [579, 591], "sacrificing": 612, "saddr": [0, 4, 8, 99, 100, 353, 445, 446], "sadly": [608, 626], "saf": [466, 469, 470, 473, 477, 479, 488, 530, 538, 545, 548, 559, 572, 574, 575, 579, 580, 593, 607, 611, 621, 626, 628, 629, 630, 642, 654, 677, 685, 686], "safely": [483, 542, 547, 550, 579, 593, 594, 609, 628, 630, 656], "safepoint": [547, 579, 617], "safepoint_poll": 630, "safepointaddress": 547, "safestack": [473, 579, 629], "safety": [544, 545, 579, 589, 621, 644], "sag": [672, 683], "sahf": [483, 626], "said": [478, 485, 486, 505, 513, 538, 540, 566, 569, 579, 590, 602, 609, 622, 623, 625, 677, 686], "sak": [487, 609, 648], "salvaged": 625, "salvagedebuginfo": 575, "sam": [48, 49, 114, 142, 143, 201, 238, 239, 240, 303, 391, 392, 393, 460, 461, 464, 465, 466, 467, 469, 470, 472, 473, 475, 476, 477, 478, 481, 482, 483, 485, 486, 488, 489, 491, 493, 495, 496, 497, 499, 505, 507, 513, 514, 515, 517, 522, 526, 527, 528, 530, 531, 534, 535, 538, 540, 541, 542, 544, 545, 546, 547, 548, 550, 554, 555, 558, 559, 560, 565, 566, 568, 569, 570, 572, 574, 575, 577, 578, 579, 580, 581, 583, 585, 588, 590, 591, 592, 593, 594, 595, 597, 602, 604, 605, 606, 607, 608, 609, 610, 611, 614, 616, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 641, 642, 643, 645, 646, 648, 650, 651, 652, 654, 655, 668, 669, 670, 671, 672, 673, 674, 677, 680, 681, 682, 683, 684, 685, 686], "same_content": 542, "same_siz": 542, "samesiz": 579, "sampl": [66, 153, 254, 409, 464, 466, 468, 505, 512, 518, 519, 530, 536, 538, 547, 552, 566, 575, 581, 592, 610, 630, 639, 648, 649, 650, 669, 670, 676, 680, 681, 688], "sampled": [566, 617, 649], "samplepgo": [475, 575], "samplerat": 566, "sampling": [475, 505, 566], "sampson": 533, "san": [470, 481, 566, 679], "sancov_": 622, "sandbox": [571, 619], "sander": 563, "sandi": 613, "sandwiched": 575, "sandybridg": 645, "sandylak": 675, "sanitiz": [481, 482, 546, 581, 612, 618, 622, 650], "sanitize_address": [473, 579], "sanitize_hwaddress": [473, 579], "sanitize_memory": [473, 579], "sanitize_memtag": [473, 579], "sanitize_thread": [473, 579], "sanitizer": [546, 581, 607, 622, 629], "sanitizer_common": 622, "sanitizer_common_nolibc": 622, "sanitizer_symbol": 622, "sanitizer_termin": 622, "sanitizer_unwind": 622, "sanitizercommonflag": 622, "sanitizercoverag": 581, "sanitizercoveragetracedataflow": 581, "sanitizerlist": 650, "sanity": [545, 550, 581], "sanjoy": 614, "sapphirerapid": 618, "saptr": 579, "sar": 483, "sarq": 626, "sas": 466, "sass": [531, 592], "sat": 568, "satisf": 466, "satisfied": [485, 559, 579, 626], "satisfy": [54, 145, 244, 397, 465, 469, 470, 487, 538, 544, 554, 559, 570, 579, 631, 674, 685], "satisfying": 559, "satur": 555, "saturat": 579, "saturating": [673, 684], "sav": [461, 466, 481, 483, 495, 505, 530, 531, 540, 541, 550, 552, 574, 578, 579, 592, 593, 606, 608, 609, 625, 626, 628, 639, 646, 672, 673, 674, 675, 676, 683, 684, 685], "save1": 534, "save2": 534, "saved": [461, 466, 472, 473, 483, 497, 540, 579, 581, 584, 628, 635, 636, 645, 646], "savesomewher": 486, "saveth": 487, "saving": [486, 530, 540, 579, 581, 628, 635, 671, 682, 683], "savoir": 653, "saw": [513, 582, 648, 672, 683], "say": [466, 483, 484, 487, 491, 530, 548, 550, 559, 573, 575, 577, 579, 583, 586, 590, 601, 602, 609, 611, 614, 627, 631, 635, 636, 640, 647, 668, 670, 677, 679, 681, 686], "saying": 545, "sbas": [0, 2, 3, 4], "sbyt": 604, "sc": [470, 517, 579, 597], "scaffolding": [669, 680], "scal": [461, 483, 486, 548, 573, 579, 614, 626, 632, 634], "scalability": 469, "scalabl": 469, "scalar": [21, 22, 122, 123, 207, 208, 364, 365, 461, 465, 466, 483, 530, 531, 545, 547, 554, 556, 562, 579, 580, 583, 615, 616, 645, 646, 648, 655, 656, 657, 671, 672, 673, 674, 676, 685], "scalar_nam": 579, "scalarbitsettrait": 652, "scalarevolu": [469, 548, 614], "scalariz": 607, "scalarized": [579, 616], "scalarizing": [483, 559, 607], "scalaropt": 498, "scalartrait": 652, "scale2": 579, "scaled": [461, 518, 548, 579], "scaling": [471, 579], "scaling_governor": 471, "scan": [483, 491, 492, 493, 547, 583, 591, 593, 602, 634, 641, 648, 656, 677, 686], "scanf": 487, "scann": [668, 679], "scanned": [491, 682], "scanning": [486, 591, 639], "scar": 538, "scary": [677, 679, 686], "scatter": 616, "scattered": 625, "scc": [9, 10, 11, 12, 55, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 93, 94, 146, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 180, 181, 183, 245, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 282, 283, 285, 306, 307, 311, 312, 318, 319, 320, 321, 322, 341, 346, 347, 348, 350, 351, 398, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 437, 438, 440, 537, 580, 594, 648], "sccp": 580, "scen": 609, "scenario": [468, 481, 609, 616], "scenarios": [470, 477, 507, 509, 515, 526, 543, 550, 575, 604], "scev": [538, 579, 583], "sched": [483, 493, 505, 636, 646], "sched_class": 505, "schedcov": 646, "schedq": 513, "schedreadwrit": 636, "schedrw": 636, "schedul": [483, 487, 493, 505, 513, 568, 572, 592, 632, 634, 646, 648], "scheduled": [483, 559, 588, 648], "scheduler": [493, 513, 625, 648], "scheduling": [493, 505, 513, 550, 575, 583, 609, 616, 618, 630, 634, 648], "schem": [468, 480, 486, 491, 497, 500, 501, 504, 538, 546, 547, 576, 579, 593, 609, 612, 625, 630, 646, 652, 656, 657, 674, 685, 688], "scienc": [583, 613], "scientific": 580, "scipy": 639, "scm": 553, "scop": [469, 473, 477, 481, 486, 487, 512, 527, 529, 538, 540, 547, 575, 581, 583, 585, 595, 609, 614, 623, 625, 626, 629, 630, 634, 636, 648, 652, 670, 672, 673, 674, 675, 676, 681, 683, 684, 685], "scoped": [545, 579, 625, 674, 685], "scopelin": [575, 579, 625, 676], "scoping": 482, "scott": 486, "scraping": 491, "scratch": [65, 100, 408, 446, 464, 465, 483, 579, 609, 646, 648], "scratch_en": 466, "scratch_load": 466, "scratch_load_dword": [0, 4], "scratch_load_dwordx2": [0, 4], "scratch_load_dwordx3": [0, 4], "scratch_load_dwordx4": [0, 4], "scratch_load_sbyt": [0, 4], "scratch_load_sbyte_d16": [0, 4], "scratch_load_sbyte_d16_h": [0, 4], "scratch_load_short_d16": [0, 4], "scratch_load_short_d16_h": [0, 4], "scratch_load_sshort": [0, 4], "scratch_load_ubyt": [0, 4], "scratch_load_ubyte_d16": [0, 4], "scratch_load_ubyte_d16_h": [0, 4], "scratch_load_ushort": [0, 4], "scratch_segment_siz": 466, "scratch_store_byt": [0, 4], "scratch_store_byte_d16_h": [0, 4], "scratch_store_dword": [0, 4], "scratch_store_dwordx2": [0, 4], "scratch_store_dwordx3": [0, 4], "scratch_store_dwordx4": [0, 4], "scratch_store_short": [0, 4], "scratch_store_short_d16_h": [0, 4], "scratchpad": [461, 466], "screen": [478, 619], "script": [468, 477, 478, 481, 482, 488, 491, 519, 530, 533, 539, 543, 550, 553, 566, 568, 572, 609, 610, 611, 614, 618, 632, 634, 637, 639, 640, 641, 648], "scripting": [495, 547, 611, 634], "scroll": 608, "scrub": 626, "scrutiny": [538, 626], "scudo": [566, 589, 617], "scudo_default_opt": 622, "scudo_opt": 622, "sd": [522, 568, 636], "sdat": [0, 3, 4], "sdisel": 580, "sdiv": [483, 554], "sdk": [481, 517, 527, 531, 550, 639], "sdnod": [477, 483, 609, 615, 625, 637, 646, 650], "sdnodeproperty": 635, "sdnpmemoperand": 635, "sdpatternoperator": 635, "sdst": [0, 2, 3, 4], "sdtc": 646, "sdvalu": [483, 646, 650], "sdwa": [462, 463], "seamless": 565, "seamlessly": [581, 582], "sean": 609, "search": [477, 481, 486, 487, 491, 504, 509, 517, 525, 530, 538, 542, 547, 550, 577, 580, 581, 593, 604, 609, 610, 625, 629, 630, 635, 645, 646, 654, 671, 672, 673, 674, 683], "searchabl": [529, 634], "searched": [509, 579, 593], "searchindex": 634, "searching": [480, 491, 504, 530, 540, 550, 607, 609, 616, 625, 654, 670], "sec": [518, 579], "secidx": 542, "secnam": 542, "second": [16, 87, 117, 173, 202, 277, 326, 359, 432, 461, 463, 464, 466, 473, 475, 480, 481, 482, 483, 486, 487, 491, 513, 527, 530, 534, 535, 539, 540, 542, 547, 548, 550, 552, 555, 572, 573, 575, 577, 579, 581, 583, 585, 586, 590, 591, 597, 599, 601, 602, 604, 607, 609, 611, 622, 624, 625, 626, 627, 628, 630, 631, 634, 635, 636, 639, 640, 646, 648, 651, 652, 656, 670, 671, 672, 673, 674, 675, 676, 677, 681, 683, 686], "secondary": [480, 538, 540, 622, 628, 634], "secondcondit": 609, "secondlastinst": 646, "secondlastopc": 646, "secondly": 676, "secrel32": 542, "secrel_hi12": 542, "secrel_lo12": 542, "secret": [622, 626], "sectalign": 530, "section": [464, 465, 469, 470, 471, 472, 473, 479, 480, 481, 482, 483, 486, 487, 489, 491, 492, 493, 495, 504, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 526, 527, 528, 530, 531, 534, 535, 538, 539, 540, 547, 548, 550, 554, 564, 569, 572, 573, 574, 575, 579, 584, 585, 587, 590, 591, 593, 595, 596, 604, 605, 607, 608, 609, 611, 618, 620, 622, 623, 624, 625, 626, 630, 631, 634, 635, 636, 643, 645, 646, 647, 648, 649, 650, 654, 669, 671, 676, 677, 680, 682, 686, 688], "section1": 516, "section2": 516, "sectioncontr": 597, "sectioncontribentry": 597, "sectioncontribentry2": 597, "sectioncontributionsiz": 597, "sectioncontrsubstreamvers": 597, "sectiondat": 688, "sectionlength": 597, "sectionmapentry": 597, "sectionmapentryflag": 597, "sectionmaphead": 597, "sectionmapsiz": 597, "sectionmemorymanag": [584, 593, 654, 655, 656, 657], "sectionnam": [473, 597], "sectionnumb": 688, "sectnam": 530, "sector": 631, "sectvalu": 530, "secur": [623, 626], "securely": 623, "security": [480, 530, 574, 607, 617, 622, 653, 671], "sed": [491, 550], "see": [1, 5, 8, 54, 145, 244, 397, 461, 465, 466, 467, 470, 471, 472, 473, 475, 477, 481, 482, 483, 484, 485, 486, 487, 488, 491, 499, 506, 513, 516, 519, 527, 528, 529, 530, 531, 533, 534, 535, 538, 539, 540, 541, 543, 545, 546, 550, 552, 554, 559, 560, 565, 567, 569, 570, 571, 573, 574, 575, 579, 581, 583, 585, 586, 587, 590, 591, 592, 593, 594, 600, 601, 604, 605, 607, 608, 609, 610, 611, 616, 618, 619, 622, 623, 625, 626, 627, 628, 630, 631, 635, 636, 637, 640, 641, 643, 644, 646, 647, 648, 650, 654, 655, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686], "seed": [524, 581], "seeded": 581, "seeing": [486, 626, 648, 677, 686], "seek": [461, 538, 542, 548, 607, 617, 651], "seekabl": 651, "seeking": [538, 556], "seem": [461, 466, 469, 472, 477, 481, 483, 502, 530, 531, 547, 548, 573, 575, 590, 591, 597, 611, 613, 614, 623, 626], "seemingly": [554, 646], "seen": [483, 486, 513, 518, 530, 538, 554, 579, 590, 591, 607, 609, 630, 646, 648, 656, 671, 673, 677, 684, 686], "sees": [530, 579, 591], "seg": 579, "segalign": 511, "segment": [461, 483, 514, 515, 516, 521, 522, 523, 526, 566, 579, 596, 597, 625, 626, 628, 639, 651], "segment_selector_siz": [461, 466], "segmented": [466, 617], "segmentreg": 483, "segnam": 530, "seh": 579, "seh_": 618, "sel": 534, "seldom": 591, "select": [461, 464, 465, 466, 481, 486, 492, 495, 499, 513, 514, 530, 533, 540, 541, 542, 546, 548, 552, 553, 555, 557, 559, 560, 561, 562, 563, 569, 570, 575, 580, 584, 585, 592, 608, 609, 617, 618, 626, 630, 634, 637, 639, 642, 646, 649, 650, 652, 674, 675, 685], "select_isd_stor": 646, "selectaddrrr": 646, "selectcod": 646, "selectcodecommon": 650, "selected": [461, 464, 466, 472, 477, 483, 491, 495, 507, 538, 539, 547, 550, 555, 557, 559, 566, 570, 577, 579, 585, 607, 611, 616, 635, 636, 637, 649], "selectimpl": 557, "selecting": [477, 505, 513, 550, 557, 577, 639, 650], "selectinst": 486, "selectiondag": [470, 554, 555, 556, 559, 560, 564, 607, 609, 625, 634], "selectiondagbuild": [467, 483, 560], "selectiondagdump": 467, "selectiondagisel": [634, 650], "selectiondaglegaliz": 467, "selectiondagnod": 646, "selectionkind": 579, "selectively": [504, 530, 579, 648, 649], "selector": [461, 466, 483, 513, 529, 540, 550, 554, 557, 560, 564, 579, 597, 625, 634], "selecttarget": 656, "self": [461, 466, 473, 483, 487, 505, 535, 579, 591, 596, 597, 607, 608, 609, 621, 623, 636, 648, 671, 673, 680, 682, 684], "selftargetprocesscontrol": [654, 655, 656, 657], "selp": 592, "selty": 579, "sem": [479, 482, 529, 547, 583, 634, 649, 677, 686], "semantic": [461, 463, 466, 470, 475, 483, 486, 515, 531, 540, 543, 547, 555, 580, 582, 583, 587, 609, 615, 616, 625, 626, 634, 636, 637, 642, 647, 648, 652, 670, 672, 681, 683], "semantically": [531, 579, 609, 630, 631, 655], "semicolon": [481, 550, 639, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "semispac": 547, "semv": [461, 466], "send": [464, 470, 492, 496, 503, 506, 513, 529, 533, 538, 545, 549, 550, 567, 572, 574, 581, 586, 593, 608, 611, 618, 619, 627, 632, 641], "sending": [483, 533, 538, 608, 623, 648, 670], "sendmsg": [54, 145, 244, 397, 466], "sens": [469, 470, 481, 483, 486, 530, 538, 543, 548, 578, 579, 581, 583, 609, 611, 614, 625, 626, 630, 632, 636, 650, 670, 677, 681, 686], "sensibl": 609, "sensit": [469, 481, 487, 495, 502, 518, 579, 585, 623, 626, 636, 648, 652], "sent": [464, 485, 492, 503, 513, 518, 538, 549, 572, 580, 593, 608, 630], "sentenc": 486, "sentinel": 473, "separ": [547, 579, 625], "separat": [461, 465, 466, 470, 474, 482, 483, 485, 486, 487, 491, 499, 517, 523, 527, 530, 531, 533, 534, 537, 538, 547, 548, 550, 559, 560, 562, 564, 570, 571, 578, 579, 581, 582, 583, 585, 586, 590, 592, 593, 601, 604, 609, 614, 620, 621, 628, 630, 632, 635, 636, 641, 642, 646, 648, 671], "separated": [239, 392, 462, 463, 466, 468, 473, 479, 481, 483, 486, 487, 495, 499, 505, 509, 511, 514, 515, 517, 518, 529, 530, 534, 538, 550, 566, 579, 610, 620, 622, 625, 631, 634, 636, 639, 641, 652, 669, 680], "separately": [461, 464, 470, 481, 483, 486, 499, 517, 523, 530, 534, 548, 571, 579, 582, 611, 620, 621, 625, 635, 636], "separateremarksfil": 620, "separateremarksmet": 620, "separating": [546, 626], "separator": [114, 201, 303, 460, 465, 486, 491, 500, 618, 641], "seq": [486, 555, 566, 688], "seq_cst": [466, 470, 579], "seq_load": 466, "seq_stor": 466, "sequenc": [19, 120, 205, 362, 461, 464, 465, 470, 472, 483, 486, 487, 495, 506, 513, 525, 529, 534, 535, 540, 542, 545, 547, 548, 556, 559, 579, 581, 591, 594, 595, 596, 604, 607, 609, 611, 614, 616, 620, 625, 626, 628, 630, 634, 635, 645, 646, 648, 651, 669, 680, 688], "sequenced": 579, "sequencetrait": 652, "sequencing": [493, 673, 674, 684, 685], "sequency": 651, "sequential": [465, 466, 473, 483, 487, 555, 579, 583, 611, 642], "sequential_fadd": 579, "sequential_fmul": 579, "sequentially": [466, 473, 513, 540, 575, 579], "sequentialtyp": 609, "ser": [461, 466, 468, 473, 481, 483, 485, 500, 538, 540, 550, 574, 579, 585, 596, 601, 609, 614, 616, 632, 635, 636, 648, 655, 671, 678, 679, 682], "serg": 623, "serial": [505, 550, 591], "serializ": [513, 529, 541, 560, 585, 595, 596, 599, 602, 617, 618, 634, 652], "serialized": [560, 585, 602, 604, 605], "serializing": [489, 513, 585, 620, 626], "serially": 610, "serious": [572, 621, 626], "seriously": 552, "serv": [26, 27, 28, 29, 30, 33, 34, 35, 126, 127, 128, 129, 130, 211, 212, 213, 218, 219, 335, 369, 370, 371, 372, 373, 376, 377, 378, 461, 462, 472, 491, 513, 517, 534, 539, 540, 548, 549, 572, 579, 593, 602, 607, 609, 611, 616, 625, 626, 628, 636, 639, 641, 651], "server": [611, 626], "servic": [466, 471, 543, 611, 622, 631], "serviced": 469, "serving": 621, "session": [536, 586, 593, 609, 627, 655], "set": [16, 65, 99, 100, 117, 202, 326, 353, 359, 408, 445, 446, 461, 464, 465, 468, 470, 471, 472, 473, 475, 477, 479, 481, 482, 483, 485, 486, 487, 488, 491, 492, 493, 495, 505, 509, 513, 514, 515, 518, 523, 525, 526, 527, 529, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 550, 552, 554, 555, 560, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 575, 577, 578, 581, 582, 583, 584, 591, 592, 594, 597, 599, 600, 601, 604, 605, 606, 608, 610, 611, 612, 614, 615, 617, 618, 619, 620, 622, 623, 625, 626, 628, 630, 631, 632, 634, 635, 637, 639, 640, 641, 642, 643, 647, 648, 649, 650, 651, 652, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "set_value_nam": [681, 682, 683, 684, 685], "setargstr": 530, "setbann": 609, "setbid": 473, "setbr": 505, "setcategory": 530, "setcc": [483, 609], "setcondcodeact": 646, "setconvertact": 646, "setcurrentdebugloc": 676, "setdagop": 636, "setdat": 486, "setdatalayout": [671, 672, 673, 674, 675, 676], "setdebugloc": 575, "setdescript": 530, "setexitcodemapp": 609, "setfoo": 579, "setgc": 547, "setgenerator": [593, 654, 655], "setgraphattr": 609, "setgraphcolor": 609, "seth": 646, "sethiddenflag": 530, "setindexedloadact": 646, "setindexedstoreact": 646, "setinsertfencesforatomic": 470, "setinsertpoint": [670, 671, 672, 673, 674, 675, 676], "setinternallinkag": 609, "setjmp": [579, 677, 686], "setjmp_buf": 540, "setlazycompilefailureaddr": 593, "setloadextact": 646, "setloadxact": 646, "setmaxatomicsizeinbitssupported": 470, "setmcjitmemorymanag": 584, "setnam": [609, 670, 671, 672, 673, 674, 675, 676], "setnumcompilethread": 593, "seto": 626, "setop": 636, "setoperationact": [470, 483, 646], "setp": 592, "setpreservesall": 648, "setpreservescfg": 648, "setrecordnam": 473, "setreg": 483, "setrequiresstructuredcfg": 646, "setsubprogram": 676, "settargettripl": 675, "setting": [461, 468, 469, 479, 481, 482, 491, 492, 495, 499, 505, 521, 522, 530, 534, 536, 538, 543, 547, 550, 552, 565, 566, 573, 575, 579, 582, 592, 593, 606, 608, 609, 622, 625, 626, 628, 636, 639, 646, 649, 650, 652, 671, 676, 678, 681, 682], "settled": 611, "settransform": 655, "settruncstoreact": 646, "setup": [466, 542, 565, 570, 581, 585, 609, 611, 625, 639, 646, 647, 654, 671, 677, 686], "setup_token": 579, "setupinprocesslctmreentryviatpciu": [656, 657], "setupmachinefunct": 646, "setvector": 486, "setxyzzy": 486, "seul": 142, "sevenkind": 579, "seventeen": 585, "sever": 621, "several": [461, 463, 465, 469, 473, 477, 478, 481, 482, 483, 486, 487, 491, 495, 497, 505, 510, 517, 518, 530, 535, 538, 540, 541, 547, 549, 550, 562, 566, 575, 576, 579, 581, 582, 583, 585, 588, 591, 593, 595, 599, 602, 607, 609, 610, 616, 622, 625, 626, 631, 634, 636, 639, 640, 641, 646, 648, 649, 653, 670, 672, 677, 678, 681, 683, 686], "severely": 575, "severity": [619, 623], "sex": 484, "sexist": 484, "sext": [52, 242, 316, 339, 395, 575], "sextload": [637, 646], "sexual": 484, "sexually": 484, "sexy": 679, "sf": [550, 568, 571], "sge": 579, "sgi": 609, "sgn": 579, "sgpr": [48, 238, 391, 579], "sgpr0": 466, "sgpr1": 466, "sgpr105": 466, "sgpr2": 585, "sgpr29": 466, "sgpr30": 466, "sgpr32": 466, "sgpr33": 466, "sgpr34": 466, "sgpr4": 466, "sgpr63": 466, "sgpr64": 466, "sgpr_spill_count": 466, "sgprn": 466, "sgprs_used": 466, "sgt": 579, "sh": [488, 530, 539, 550, 553, 566, 572, 611], "sh_addralign": 466, "sh_entsiz": 542, "sh_hidden_private_base_vimid": 466, "sh_link": [515, 526, 542], "sha": 579, "sha1": 581, "shad": [48, 142, 238, 391, 464, 483], "shader": 466, "shadow": [589, 614, 628, 630, 636, 646, 672, 673, 674, 675, 676, 683, 684, 685], "shadowbyt": 628, "shadowcallstack": [473, 579], "shadowdescriptort": 466, "shadowed": [672, 683], "shadowing": [672, 683], "shadowlist": 646, "shadowstackgc": 547, "shadowstackgclowering": 547, "shall": [481, 530, 542, 579, 588, 623, 677, 686], "shap": [559, 560, 572, 573, 579, 609], "shaped": [625, 637], "shapekind": 573, "shar": [464, 466, 470, 473, 481, 483, 495, 507, 515, 540, 550, 554, 558, 564, 579, 583, 595, 607, 616, 623, 631, 635, 636, 637, 648, 651, 654], "shard": 491, "shared": [461, 464, 465, 466, 470, 477, 479, 481, 483, 486, 488, 492, 493, 507, 516, 531, 534, 542, 571, 574, 577, 579, 581, 582, 592, 593, 607, 609, 610, 620, 622, 623, 625, 640, 641, 648, 652, 654, 670, 673, 676, 681], "shared_bas": 465, "shared_library": 610, "shared_lim": 465, "shared_ptr": 656, "shared_vgpr_cnt": 466, "shared_vgpr_count": 466, "sharing": [464, 467, 483, 550, 581, 582, 609], "shayn": 623, "she": 567, "shel": [477, 481, 491, 530, 550, 586, 627, 641, 676], "shelf": [593, 654, 655], "shf_alloc": [466, 515], "shf_exclud": [515, 542], "shf_execinstr": [466, 515], "shf_link_ord": 542, "shf_merg": 515, "shf_string": 515, "shf_writ": [466, 515], "shield": [471, 483, 622, 631], "shielding": 631, "shift": [464, 465, 483, 530, 541, 545, 555, 579, 580, 591, 607, 618, 626, 636, 637, 651], "shifted": [466, 473, 474, 483, 579], "shifting": [466, 470, 483, 626], "shiftinst": 486, "shim": 607, "shiny": [647, 648], "ship": [468, 536, 547, 566, 623], "shipped": [470, 480, 550, 630, 632], "shipping": [550, 677, 686], "shirt": 484, "shl": [486, 555, 575, 591, 607, 636], "shlib": 550, "shlibext": 641, "shlq": 626, "shn_amdgpu_ld": 466, "sho": 652, "shooting": [671, 682], "short": [469, 472, 477, 483, 486, 491, 518, 527, 529, 538, 543, 552, 579, 590, 592, 597, 609, 614, 616, 622, 628, 630, 639, 646, 649, 652, 655, 672, 673, 674, 676, 683, 684, 685], "short_enum": 579, "short_wchar": 579, "shortcoming": 623, "shortcut": [466, 679, 680], "shortest": [591, 636], "shortly": [625, 676], "should": [101, 461, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 486, 487, 488, 491, 492, 493, 495, 499, 501, 505, 506, 513, 517, 518, 519, 527, 528, 529, 530, 531, 533, 534, 536, 538, 540, 541, 542, 545, 546, 547, 548, 550, 552, 555, 556, 557, 558, 559, 560, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 596, 597, 599, 601, 604, 606, 607, 608, 609, 610, 611, 612, 614, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 646, 647, 648, 649, 650, 651, 652, 656, 669, 670, 671, 672, 674, 676, 679, 680, 681, 682, 683, 685], "shouldexecut": 609, "shouldexpandatomiccmpxchgin": 470, "shouldexpandatomicloadin": 470, "shouldexpandatomicrmwin": 470, "shouldexpandatomicstorein": 470, "shouldinsertfencesforatomic": 470, "shouldn": [469, 485, 486, 530, 571, 579, 584, 590, 641, 679], "shouldprocess": 486, "shouldprocessattr": 486, "shouldsampl": 566, "show": [466, 475, 483, 487, 491, 494, 504, 505, 509, 512, 513, 514, 516, 517, 519, 527, 529, 530, 536, 542, 548, 550, 565, 579, 580, 583, 585, 586, 592, 608, 609, 611, 614, 619, 625, 626, 627, 628, 632, 634, 636, 639, 643, 645, 646, 648, 650, 654, 656, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "showc": 518, "showdebug": 536, "showed": [534, 652], "showing": [512, 584, 592, 609, 647, 648, 674, 678, 679, 685, 687], "shown": [461, 464, 465, 466, 472, 491, 499, 504, 505, 518, 521, 522, 523, 527, 530, 534, 535, 537, 552, 560, 573, 579, 585, 586, 590, 592, 609, 625, 626, 628, 634, 635, 636, 637, 640, 643, 646, 652, 673, 684], "shr": 486, "shrink": [483, 611], "shrinking": 515, "shrx": 626, "shrxq": 626, "shstrtab": 466, "sht_dynamic": 466, "sht_hash": 466, "sht_llvm_linker_opt": 542, "sht_nobit": [466, 515], "sht_not": [466, 515], "sht_progbit": [466, 515], "sht_rel": 466, "sht_strtab": 466, "sht_symtab": 466, "shtest": 491, "shuffl": [483, 486, 491, 555, 579, 593, 615, 616], "shuffle_vector": 483, "shufflebyt": 581, "shufflevector": [472, 483, 487, 555], "shuffling": 466, "shut": [581, 646], "shutdown": 581, "si": [61, 150, 251, 343, 404, 466, 486, 637, 653], "sibling": 553, "sid": [466, 469, 470, 481, 483, 485, 486, 513, 531, 536, 537, 547, 550, 555, 575, 579, 583, 585, 591, 592, 607, 609, 611, 620, 626, 630, 636, 641, 669, 670, 672, 673, 680, 681, 683, 684], "sidebar": [572, 627], "sideeffect": 583, "sidelength": 573, "sierr": 613, "siframelowering": 466, "sift": 649, "sig": 550, "sig_atomic_t": 579, "sig_ign": 566, "sight": [674, 685], "sigil": 585, "sign": [461, 464, 465, 483, 484, 492, 505, 530, 532, 542, 545, 554, 555, 579, 609, 626, 636, 646, 677, 686], "signal": [464, 470, 532, 536, 540, 544, 566, 579, 581, 583, 653], "signaled": 534, "signaling": [464, 466, 530, 555, 579], "signalled": 466, "signatur": [470, 472, 483, 497, 531, 534, 550, 579, 581, 600, 602, 609, 630, 648, 670], "signature_invalid": 550, "signed": [49, 57, 143, 240, 393, 400, 461, 463, 464, 465, 483, 486, 492, 545, 548, 554, 555, 579, 581, 582, 585, 604, 623, 646], "signedcharact": 604, "signedness": 461, "signext": [473, 579], "signextimm": 483, "signif": [579, 625], "signific": [60, 250, 403, 461, 466, 469, 472, 473, 479, 485, 486, 521, 522, 538, 541, 547, 566, 579, 581, 582, 589, 591, 607, 616, 618, 623, 626, 630, 634, 639, 648, 651, 672, 673, 678, 679, 684], "significand": 579, "significantly": [473, 479, 481, 486, 497, 513, 540, 544, 550, 560, 570, 579, 581, 582, 609, 625, 626, 635, 636, 648, 669, 672, 680, 683], "signifient": 142, "sigplan": [483, 547], "sigsegv": 566, "sigusr1": 581, "sil": 637, "silenc": 569, "silent": [485, 567], "silently": [515, 525, 526, 579], "silly": [469, 486, 543, 679], "simd": [48, 142, 238, 391, 461, 466, 492, 493, 579, 607, 615, 616, 642, 645], "simd_benchmark": 613, "similar": [461, 470, 473, 475, 478, 482, 483, 485, 486, 487, 495, 498, 517, 530, 531, 534, 537, 538, 540, 542, 547, 548, 550, 553, 559, 566, 568, 569, 570, 575, 579, 581, 585, 588, 589, 591, 592, 593, 597, 604, 607, 609, 610, 611, 614, 616, 622, 627, 631, 632, 634, 636, 641, 645, 646, 648, 649, 650, 652, 668, 671, 672, 673, 676, 679, 682, 683, 684], "similarit": [537, 609], "similarity": [560, 595, 670, 681], "similarly": [461, 466, 469, 470, 472, 473, 477, 486, 505, 513, 530, 531, 538, 540, 546, 554, 557, 559, 560, 573, 574, 579, 595, 609, 626, 640, 643, 646, 649, 651, 653, 675, 676], "simm13": 646, "simm21": [57, 400], "simpl": [461, 466, 468, 469, 470, 472, 473, 474, 477, 481, 482, 483, 487, 491, 492, 493, 513, 514, 529, 530, 535, 537, 538, 539, 541, 542, 547, 548, 550, 552, 553, 557, 558, 559, 570, 573, 575, 581, 583, 587, 590, 591, 593, 611, 625, 626, 630, 631, 632, 634, 635, 640, 641, 645, 646, 648, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687], "simplecompil": [593, 654, 656], "simpleloopunroll": 642, "simpleproject": 481, "simplest": [461, 468, 479, 483, 530, 537, 552, 581, 611, 626, 646, 652, 655, 669, 670, 680, 682], "simpletyp": 688, "simpletypekind": 604, "simpletypemod": 604, "simplevalu": 636, "simplicity": [476, 547, 554, 609, 612, 628, 668, 670, 681], "simpliest": 585, "simplif": [466, 477, 483, 530, 538, 554, 579, 607, 609, 648, 652], "simplified": [575, 585, 607, 609, 626, 630, 652, 654, 688], "simplify": [461, 468, 483, 538, 547, 558, 570, 574, 585, 593, 594, 608, 630, 640, 671, 672, 673, 674, 676, 679, 682, 683, 684, 685], "simplify_typ": 573, "simplifycfg": [488, 674, 685], "simplifydemandedbit": 650, "simplifying": [478, 579, 609, 654], "simply": [461, 466, 469, 477, 480, 483, 486, 487, 500, 517, 527, 528, 530, 533, 534, 538, 540, 543, 546, 548, 550, 555, 565, 566, 569, 571, 575, 579, 585, 587, 590, 593, 595, 597, 607, 609, 610, 611, 625, 626, 627, 628, 630, 631, 636, 640, 641, 646, 647, 648, 669, 670, 671, 680, 681, 682], "simt": [461, 466], "simul": [513, 579], "simulat": [472, 483, 513, 564], "simulated": 513, "simulator": [538, 579, 639], "simultaneous": [470, 489, 581], "simultaneously": [461, 472, 515, 526, 550, 566, 609, 623, 641, 645], "sin": [469, 531, 645, 646, 652, 654, 668, 669, 670, 671, 679, 680, 681, 682], "sinc": [461, 466, 467, 469, 473, 474, 481, 483, 485, 486, 489, 495, 513, 517, 518, 531, 534, 537, 538, 540, 543, 547, 548, 550, 552, 556, 559, 568, 569, 571, 573, 574, 577, 579, 581, 583, 584, 586, 590, 591, 592, 593, 595, 597, 601, 605, 609, 611, 619, 623, 624, 625, 628, 630, 631, 637, 646, 647, 648, 651, 652, 668, 669, 670, 671, 672, 673, 674, 676, 680, 681, 682, 683, 684, 685], "sinf": 531, "singl": [461, 465, 468, 470, 472, 473, 477, 481, 482, 483, 485, 487, 491, 495, 499, 500, 504, 505, 510, 511, 513, 515, 517, 518, 522, 526, 530, 531, 535, 537, 538, 539, 540, 541, 547, 548, 550, 553, 554, 555, 556, 559, 560, 566, 569, 575, 576, 578, 580, 581, 583, 585, 589, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 604, 605, 609, 610, 612, 616, 619, 625, 629, 630, 635, 636, 639, 641, 642, 645, 646, 648, 649, 650, 652, 668, 670, 671, 674, 676, 677, 681, 682, 685, 686], "singleimpl": 579, "singleimplnam": 579, "singlesour": 639, "singlesourc": [613, 639], "singlethread": [466, 579], "singleton": [461, 635], "singly": 547, "singular": [486, 579, 609], "sink": [469, 530, 616, 626], "sinking": 618, "sint": 579, "sit": [461, 466, 469, 482, 491, 540, 542, 547, 552, 578, 585, 590, 607, 613, 618, 627, 628, 630, 641, 643, 655], "sitofp": [670, 681], "situat": [461, 470, 479, 483, 485, 486, 513, 530, 531, 538, 540, 548, 559, 570, 573, 575, 579, 588, 591, 607, 609, 621, 632, 645, 646, 648, 656, 671, 682], "situational": 622, "six": [470, 483, 534, 623, 634, 654], "sixkind": 579, "sixth": [534, 554, 646], "siz": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 245, 246, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 306, 307, 308, 309, 311, 312, 313, 314, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 341, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 398, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 464, 466, 469, 470, 471, 472, 473, 477, 481, 484, 486, 488, 489, 490, 492, 495, 497, 499, 504, 513, 514, 515, 517, 518, 521, 522, 524, 527, 530, 535, 536, 541, 542, 545, 547, 548, 554, 555, 559, 560, 566, 575, 579, 580, 581, 582, 585, 589, 591, 592, 593, 596, 597, 599, 601, 604, 606, 607, 613, 618, 620, 622, 624, 625, 626, 628, 630, 632, 635, 636, 637, 639, 641, 642, 643, 645, 646, 648, 650, 651, 652, 655, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 685, 686], "sizabl": 609, "size1": 579, "size2": 579, "size3": 579, "size_t": [470, 547, 581, 582, 593, 609, 652], "sizeclassallocator": 622, "sized": [461, 466, 473, 483, 491, 534, 548, 579, 622, 636, 652], "sizem1": 579, "sizem1bitwidth": 579, "sizeof": [517, 534, 543, 579, 592, 599, 601, 604, 609, 626, 630], "sizeofimm": 646, "sjljehprepar": 540, "sk_buff": 483, "sk_circl": 573, "sk_lastsquar": 573, "sk_otherspecialsquar": 573, "sk_somewhatspecialsquar": 573, "sk_specialsquar": 573, "sk_squar": 573, "sketched": 534, "skip": [461, 473, 482, 483, 486, 487, 499, 516, 531, 547, 553, 570, 579, 583, 589, 594, 609, 611, 625, 639, 646, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685], "skipbasicblock": 594, "skipfunct": 594, "skiploop": 594, "skipmodul": 594, "skipped": [472, 518, 529, 535, 553, 557, 575, 594, 630, 642, 645, 647], "skipping": [505, 534, 609, 625, 626, 668, 679], "skipscc": 594, "skylak": 505, "sl": 461, "slash": 579, "slc": [0, 2, 3, 4, 8, 466], "sle": 579, "sleb128": 461, "sled": 649, "slh": 626, "slic": [511, 635, 636], "slicing": 609, "slid": [484, 531, 609], "slight": [542, 569], "slightly": [468, 472, 522, 523, 531, 537, 550, 579, 583, 589, 626, 630, 636, 648, 671, 673, 674, 682, 684, 685], "sln": 552, "slot": [461, 466, 483, 497, 513, 534, 540, 545, 566, 578, 579, 624, 628, 630, 646, 674, 685], "slow": [478, 479, 483, 486, 492, 504, 531, 540, 543, 545, 547, 550, 560, 579, 581, 591, 606, 609, 626, 648], "slow_path": 579, "slowdown": [566, 581], "slowly": [538, 550, 579, 593], "slp": [580, 616], "slt": [579, 583], "sm": [517, 554, 592], "sm_20": [483, 592], "sm_21": 483, "sm_30": [483, 531], "sm_35": [483, 531], "sm_xx": 531, "small": [461, 465, 466, 470, 473, 477, 478, 480, 482, 483, 485, 486, 488, 493, 497, 499, 505, 508, 513, 518, 530, 533, 534, 535, 538, 545, 547, 548, 554, 555, 559, 560, 566, 573, 579, 591, 592, 594, 602, 607, 608, 609, 612, 613, 622, 625, 626, 628, 631, 632, 636, 641, 645, 648, 653, 656, 676, 678, 679], "smallconst": 628, "smallest": [464, 487, 574, 579, 583], "smallsetvector": 609, "smallvector": [486, 676], "smallvectorhead": 609, "smallvectorimpl": [609, 635, 650], "smart": [486, 530, 579, 596], "smartphon": 588, "smashed": 626, "smashing": 579, "smax": 465, "smel": 609, "smith": [486, 623], "smithw": 613, "smloc": 635, "smooshlab": 549, "smoothly": 482, "smovq": 483, "smp": [470, 648], "smrang": 635, "smt": 471, "smul_loh": 483, "sn": [517, 554], "sn_map": 591, "sn_mapl": 591, "sn_mapr": 591, "snan": 579, "snapshot": [469, 539, 581], "sneak": 486, "snippet": [538, 547, 575, 609, 648], "snmalloc": 481, "snork": 636, "so": [461, 463, 464, 466, 468, 469, 470, 471, 472, 476, 477, 479, 481, 483, 484, 485, 486, 487, 488, 491, 492, 499, 505, 511, 513, 517, 528, 530, 531, 533, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 553, 554, 557, 558, 559, 560, 562, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 583, 585, 586, 587, 588, 590, 591, 592, 593, 594, 597, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 646, 647, 648, 649, 650, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "social": [484, 653], "socket": 593, "soffset": [0, 2, 3, 4, 8], "soft": [493, 513, 538, 625], "softfp": 570, "softwar": [461, 466, 482, 486, 493, 532, 538, 539, 547, 569, 570, 579, 580, 596, 614, 626, 641, 646, 648, 670, 677, 678, 679, 686], "sol": [538, 560, 579], "solar": 550, "solaris2": 648, "solely": [538, 579, 590, 609], "solic": [485, 580], "solid": 569, "solut": [461, 470, 472, 481, 483, 530, 539, 550, 552, 579, 593, 609, 611, 625, 632, 648, 655, 674, 677, 685, 686], "solution_1": 579, "solution_2": 579, "solv": [469, 481, 483, 538, 548, 560, 564, 572, 575, 609, 625, 673, 677, 684, 686], "solved": [611, 674, 677, 685, 686], "solving": 483, "som": [461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 491, 492, 494, 495, 499, 504, 505, 507, 513, 514, 516, 517, 529, 530, 531, 532, 533, 534, 537, 538, 540, 541, 543, 544, 545, 546, 547, 548, 550, 551, 552, 554, 555, 556, 557, 559, 560, 562, 564, 566, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 590, 591, 593, 596, 597, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 634, 635, 636, 637, 639, 640, 641, 642, 645, 646, 647, 648, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "some_bss": 525, "some_crash_test": 611, "some_int": 636, "some_op": 585, "somebody": 485, "someclass": 636, "somedag": 636, "somefancya": 648, "somefunc": 486, "somefunc1": 609, "somefunc2": 609, "somehow": [534, 579, 597, 609, 648], "somelocalpath": 581, "somemap": 486, "somemulticlass": 636, "someon": [476, 483, 484, 485, 517, 533, 538, 539, 541, 545, 547, 556, 586, 611, 621, 623, 627, 686], "someone_els": 485, "somerec": 635, "sometest": 640, "something": [466, 468, 469, 483, 485, 486, 487, 514, 530, 534, 538, 541, 550, 552, 553, 559, 560, 569, 573, 574, 577, 579, 581, 583, 586, 590, 591, 593, 602, 607, 608, 609, 611, 622, 626, 627, 630, 631, 634, 646, 650, 652, 669, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686], "sometim": [473, 477, 478, 483, 485, 486, 487, 513, 530, 531, 548, 550, 559, 573, 579, 581, 591, 601, 607, 609, 611, 625, 626, 634, 635, 636, 646, 652], "somety": 579, "somewhat": [469, 470, 486, 534, 538, 539, 560, 579, 609, 611, 614, 626, 630, 636, 640, 644, 669, 673, 680, 684], "somewhatspecialsquar": 573, "somewher": [487, 540, 573, 579, 611, 640, 641, 648, 670, 673, 681, 684], "sonnenberg": 611, "sony": 623, "soon": [538, 553, 567, 581, 582, 593, 619, 632, 648, 655, 669, 672, 680, 683], "sophist": [483, 640], "sophisticated": [547, 579, 586, 627, 648], "sorry": 686, "sort": [470, 481, 486, 514, 517, 530, 531, 538, 543, 574, 579, 609, 611, 613, 635, 636, 650, 653, 669, 671, 672, 674, 677, 680, 682, 683, 685, 686], "sorted": [486, 489, 530, 535, 579, 604, 611, 618, 625, 634], "sorting": [625, 649], "sortord": 650, "sought": [461, 579], "sound": [469, 476, 581, 588], "sourc": [87, 173, 277, 432, 462, 463, 464, 465, 468, 469, 471, 477, 478, 479, 482, 483, 487, 488, 489, 490, 491, 492, 494, 498, 499, 501, 513, 516, 517, 528, 529, 530, 531, 533, 538, 539, 540, 542, 545, 547, 548, 549, 552, 555, 566, 570, 571, 572, 574, 575, 580, 581, 582, 583, 590, 591, 592, 593, 597, 605, 608, 609, 611, 612, 614, 617, 619, 620, 623, 626, 627, 628, 630, 631, 634, 635, 637, 639, 640, 641, 644, 646, 647, 648, 649, 650, 652, 653, 656, 671, 675, 677, 682, 686], "source0": 648, "source_filenam": 579, "source_i386": 527, "source_x86_64": 527, "sourcebas": [533, 551], "sourcebasedcodecoverag": 535, "sourced": 461, "sourcefil": 499, "sourcefilecount": 597, "sourcefilenameindex": 597, "sourceforg": 613, "sourceinfosiz": 597, "sourceloc": 676, "sourcewar": [565, 581], "sous": 142, "southern": 466, "sp": [466, 483, 542, 579, 585, 587, 589, 624, 637, 646, 676], "sp3": [464, 465], "spac": [114, 201, 303, 460, 462, 463, 471, 473, 481, 484, 487, 492, 499, 505, 514, 517, 531, 538, 540, 547, 549, 550, 552, 554, 555, 577, 578, 579, 584, 588, 589, 591, 602, 609, 610, 611, 612, 621, 624, 625, 626, 628, 630, 631, 634, 636, 646, 648, 651, 652, 671, 674, 677, 682, 685, 686], "space0": 579, "space1": 579, "space2": 579, "spadin": 607, "spaghet": [678, 679], "spam": 632, "spanish": 622, "spanning": 648, "sparc": [470, 483, 515, 550, 579, 614, 636, 646, 648], "sparcasmprint": [483, 646], "sparccallingconv": 646, "sparcel": 515, "sparcgenregisterinfo": 646, "sparcgensubtarget": 646, "sparcinstrformat": 646, "sparcinstrinfo": 646, "sparciseldagtodag": 646, "sparcisellowering": 646, "sparclet": 646, "sparclit": 646, "sparclite86x": 646, "sparcreg": 646, "sparcregisterinfo": 646, "sparcsubtarget": 646, "sparctargetasminfo": 646, "sparctargetlowering": 646, "sparctargetmachin": 646, "sparcv8": [470, 579], "sparcv9": 579, "sparingly": [486, 545], "spars": [518, 541, 550, 580, 594, 609, 611, 651], "sparsecheckout": 611, "sparsely": [483, 651], "spawn": [581, 593], "spcc": 646, "spdx": [486, 654, 655, 656, 657], "spe": 532, "speak": [484, 531, 621], "speaker": 588, "speaking": [482, 630, 672, 673, 683, 684], "spec": [531, 574, 579, 585, 586, 609, 625, 626, 639, 652], "spec95": 640, "speccpu2000": [639, 640], "speccpu2006": 640, "specfied": 507, "special": [19, 462, 464, 465, 466, 469, 470, 472, 473, 482, 483, 486, 487, 513, 514, 515, 526, 530, 531, 535, 536, 537, 538, 540, 542, 544, 547, 548, 550, 571, 574, 579, 581, 585, 589, 590, 591, 595, 596, 597, 609, 611, 626, 628, 630, 631, 634, 636, 641, 645, 646, 674, 675, 676, 678, 679, 685], "specialfp": 636, "specializ": [470, 491, 530, 557, 579, 607, 609, 623, 625, 652], "specialized": [461, 470, 483, 486, 539, 560, 590, 609, 612, 620, 625, 646, 653, 677, 686], "specializing": [637, 652], "specially": [483, 579, 593, 609, 628, 648], "specialsquar": 573, "specialty": 609, "specif": [13, 32, 43, 45, 97, 186, 221, 233, 235, 288, 323, 352, 375, 386, 388, 443, 461, 462, 464, 466, 470, 473, 481, 483, 487, 488, 489, 492, 495, 499, 513, 529, 530, 532, 540, 545, 547, 550, 575, 579, 581, 585, 597, 609, 620, 625, 628, 630, 634, 635, 636, 637, 641, 646, 647, 648, 651, 652, 670, 677, 681, 686], "specifi": [473, 487, 506, 535, 542, 592, 609, 618, 634], "specific": [5, 54, 120, 145, 205, 244, 362, 397, 461, 463, 466, 468, 470, 471, 473, 476, 478, 479, 485, 486, 487, 491, 493, 499, 504, 516, 521, 530, 531, 535, 538, 540, 541, 543, 546, 547, 548, 550, 552, 554, 557, 559, 560, 561, 562, 564, 569, 571, 572, 579, 580, 581, 584, 585, 586, 587, 588, 590, 592, 593, 594, 605, 607, 609, 612, 617, 618, 619, 621, 623, 626, 628, 630, 631, 632, 634, 635, 636, 637, 645, 646, 648, 649, 651, 652, 655, 668, 669, 673, 675, 678, 679, 680, 684], "specifically": [461, 468, 470, 481, 483, 485, 486, 531, 538, 545, 546, 547, 548, 550, 572, 579, 583, 584, 590, 594, 607, 609, 615, 625, 626, 628, 631, 637, 640, 646, 648, 649, 671, 678, 679], "specificity": 579, "specified": [16, 19, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 54, 57, 58, 60, 63, 64, 65, 87, 100, 114, 117, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 145, 147, 148, 152, 173, 201, 202, 211, 212, 213, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 244, 248, 250, 253, 277, 303, 326, 335, 336, 342, 345, 359, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 397, 400, 401, 403, 407, 408, 432, 446, 460, 461, 462, 463, 464, 465, 466, 467, 470, 473, 475, 477, 479, 481, 482, 483, 486, 487, 488, 489, 491, 492, 493, 495, 496, 498, 499, 500, 503, 504, 505, 506, 507, 509, 510, 511, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 526, 527, 528, 529, 534, 539, 540, 542, 543, 546, 547, 550, 555, 574, 579, 581, 585, 593, 594, 597, 601, 605, 609, 610, 612, 620, 622, 625, 628, 630, 631, 634, 635, 636, 637, 640, 641, 642, 645, 646, 648, 652, 670, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "specify": [16, 29, 30, 31, 32, 44, 45, 66, 87, 117, 129, 130, 131, 140, 153, 173, 202, 218, 219, 220, 221, 234, 235, 254, 277, 326, 359, 372, 373, 374, 375, 387, 388, 409, 432, 461, 464, 466, 469, 470, 473, 476, 479, 481, 483, 487, 489, 491, 492, 493, 495, 496, 499, 501, 503, 505, 506, 509, 510, 513, 514, 515, 516, 517, 518, 519, 524, 527, 528, 529, 530, 531, 534, 535, 539, 540, 546, 547, 548, 550, 552, 566, 579, 581, 583, 585, 586, 592, 593, 597, 607, 609, 616, 628, 630, 635, 636, 639, 640, 641, 646, 648, 649, 650, 652, 670, 673, 675, 677, 681, 686], "specifying": [461, 466, 491, 505, 516, 521, 522, 542, 579, 585, 602, 609, 618, 635, 636, 637, 639, 641, 642, 645, 646, 669, 680], "spectr": [579, 617], "spectre11": 626, "spectreattack": 626, "specul": [470, 513, 531, 540, 579, 593, 617, 630], "speculat": [473, 579, 626, 630], "speculated": [575, 579, 626], "speculative_load_hardening": [473, 579], "speculativej": 593, "speculatively": [469, 545, 579, 594, 626], "speed": [479, 481, 486, 505, 530, 531, 550, 581, 583, 590, 641, 674, 685], "speedup": 626, "spelling": [486, 529, 538, 634], "spenc": 631, "spend": 491, "spending": [645, 650], "spent": [513, 650], "spflag": 625, "spflagdefinit": 676, "spgo": 490, "spgr": 142, "sphinx": [481, 549, 550, 586], "sphinx_execut": 481, "sphinx_output_html": 481, "sphinx_output_man": 481, "sphinx_warnings_as_error": 481, "sphinxquickstarttemplat": 627, "spi": 466, "spiffygrep": 530, "spiffysh": 530, "spill": [461, 466, 480, 483, 492, 493, 534, 556, 579, 625, 628, 630, 646], "spillalignment": 646, "spilled": [461, 466, 480, 483, 534, 626, 628, 630, 646], "spiller": 492, "spilling": [461, 466, 626, 646], "spillsiz": 646, "spir": [484, 529, 609, 623], "spirv": 529, "spisd": 646, "spl": 637, "splat": [483, 580], "splatting": 593, "splic": [579, 609], "split": [461, 466, 470, 472, 483, 485, 500, 515, 517, 527, 530, 531, 534, 538, 541, 548, 554, 579, 581, 585, 590, 591, 593, 601, 607, 610, 611, 622, 624, 636, 641, 646], "split64": 579, "splitdebugfilenam": 579, "splitting": [477, 483, 534, 560, 579], "sponsor": 611, "sponsorship": 538, "spot": [579, 581, 607], "spotty": 579, "spread": [579, 607], "spreadsheet": 650, "spring": 531, "sprinkl": 609, "spurious": 579, "spuriously": [579, 641], "spus": 646, "sp\u00e9cif": [1, 6, 7, 8], "sp\u00e9cifi": [61, 150, 251, 343, 404], "sq": 513, "sq_rsrc_img_1d": 464, "sq_rsrc_img_1d_array": 464, "sq_rsrc_img_2d": 464, "sq_rsrc_img_2d_array": 464, "sq_rsrc_img_2d_msa": 464, "sq_rsrc_img_2d_msaa_array": 464, "sq_rsrc_img_3d": 464, "sq_rsrc_img_cub": 464, "sqlit": 581, "sqrt": [645, 652], "squar": [538, 573, 579, 652], "squared": 579, "squash": 611, "squashed": 472, "squeu": 513, "sr": 522, "sra": 636, "sramecc": 466, "srand": 581, "src": [0, 2, 3, 4, 8, 481, 483, 498, 540, 572, 579, 597, 605, 609, 610, 619, 640, 646, 671], "src0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 87, 173, 239, 277, 392, 432, 464, 465], "src0_sel": [0, 3, 4, 7, 8, 466], "src1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 87, 173, 239, 277, 392, 432, 462, 464, 483, 636, 637], "src1_sel": [0, 3, 4, 7, 8, 466], "src2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 87, 173, 239, 277, 392, 432, 483, 636, 637], "src3": [0, 2, 3, 4, 8, 87, 173, 277, 432], "src_bas": 630, "src_offset": 630, "src_private_bas": 466, "src_reg": 483, "src_root": 550, "src_shared_bas": 466, "srcarglist": 579, "srcloc": 579, "srcvalu": 630, "srd": 466, "srem": 483, "sret": [466, 473, 579, 618], "srgp": 466, "srinivasan": 623, "srl": [461, 636], "sro": [470, 531, 545, 580, 594, 674, 685], "srsrc": [0, 2, 3, 4, 8], "ss": [483, 501, 636], "ssa": [540, 545, 547, 555, 580, 590, 609, 625, 630, 646, 648, 670, 672, 673, 674, 677, 678, 679, 681, 683, 684, 685, 686], "ssamp": [0, 2, 3, 4], "ssca2v2": 613, "sscabmk": 613, "sse": [483, 576, 579, 615, 646, 675], "sse2": [579, 641], "sse4": 645, "sse41": 487, "ssecall": 646, "ssh": 639, "ssize_t": 486, "ssp": [473, 579, 625, 654, 655, 656, 657], "sspreq": [473, 579], "sspstrong": [473, 579], "ssrc": [0, 2, 3, 4], "ssrc0": [0, 2, 3, 4], "ssrc1": [0, 2, 3, 4], "ssrc2": [0, 2, 3, 4], "sstream": 486, "st": [501, 522, 579, 592, 646], "st0": [636, 637, 646], "st1": [472, 483, 637, 646], "st17basic_string_viewicst11char_traitsice": 501, "st2": 637, "st3": 637, "st3__1": 501, "st4": 637, "st5": 637, "st6": 637, "st7": 637, "st7__cxx11": 501, "st_valu": 466, "stab": 625, "stability": [538, 611, 612], "stabl": [486, 502, 505, 538, 572, 575, 582, 594, 609, 632, 646], "stack": [469, 480, 486, 492, 514, 516, 521, 522, 523, 534, 540, 545, 550, 555, 566, 578, 580, 585, 587, 590, 593, 609, 617, 618, 620, 625, 644, 646, 648, 649, 651, 652, 654, 656, 674, 676, 678, 679, 685], "stack_end": 536, "stack_loc": 483, "stack_siz": 492, "stackarity": 547, "stacked": 547, "stackentr": 547, "stackentry": 547, "stackframesiz": 547, "stackgrowsdown": 646, "stackmap": [521, 522, 547, 579], "stackoffset": 547, "stackprotectorcheck": 579, "stackptr": 618, "stackrestor": 578, "stacksafety": [579, 607], "stacksav": 578, "stacksiz": 620, "stacksizessect": 483, "staff": 621, "stag": [466, 470, 479, 481, 483, 488, 499, 530, 531, 538, 539, 569, 572, 579, 581, 582, 591, 592, 612, 615, 619, 623, 629, 646, 650, 653, 669, 680], "stage1": [468, 539, 569], "stage2": [468, 479, 481, 539, 569], "stage3": 468, "staged": 616, "stageselectioncat": 530, "staging": [539, 567], "stal": [466, 625], "stall": [513, 626], "stamp": 602, "stanc": 486, "stand": [483, 485, 486, 531, 538, 579, 597, 609, 641, 648, 655, 656, 657, 669, 680], "standalon": [483, 546, 570, 611, 620, 676, 677], "standard": [19, 465, 466, 468, 469, 470, 472, 481, 483, 487, 488, 491, 492, 493, 495, 496, 497, 500, 503, 504, 505, 506, 510, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 526, 527, 528, 529, 530, 532, 533, 538, 540, 542, 543, 544, 545, 547, 549, 552, 555, 557, 569, 573, 582, 585, 592, 593, 607, 615, 627, 630, 634, 635, 636, 637, 641, 645, 646, 648, 651, 655, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "standardized": [470, 486, 538, 641], "standpoint": 609, "star": 613, "start": [17, 118, 203, 360, 461, 466, 468, 469, 473, 477, 486, 487, 488, 491, 499, 513, 515, 516, 517, 527, 533, 534, 535, 536, 538, 539, 541, 545, 548, 549, 550, 552, 553, 559, 560, 567, 571, 575, 581, 585, 589, 591, 592, 595, 607, 608, 609, 611, 612, 614, 619, 622, 625, 626, 627, 630, 636, 645, 646, 649, 650, 651, 652, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "start_bb": [683, 684, 685], "start_val": [683, 684, 685], "start_valu": 579, "started": [468, 481, 486, 513, 533, 538, 543, 547, 549, 554, 570, 572, 593, 608, 609, 636, 644, 647, 648, 653, 670, 671, 679, 681, 682], "startexpr": [672, 673, 674, 675, 676, 685], "starting": [221, 233, 235, 461, 466, 468, 469, 473, 481, 483, 486, 487, 488, 501, 513, 515, 517, 518, 526, 535, 539, 541, 542, 545, 547, 550, 554, 555, 575, 579, 581, 586, 590, 591, 607, 608, 626, 627, 630, 634, 635, 636, 641, 647, 648, 651, 670, 671, 672, 673, 676, 681, 682, 683, 684, 687], "starttim": 635, "startup": [491, 550, 579, 592, 593, 606, 655, 656], "startval": [672, 673, 674, 675, 676], "stash": 573, "stat": [464, 465, 469, 470, 471, 472, 476, 477, 480, 482, 483, 485, 492, 493, 513, 528, 529, 530, 531, 534, 535, 537, 538, 539, 540, 541, 544, 547, 548, 557, 559, 560, 564, 570, 575, 579, 580, 581, 583, 585, 586, 590, 593, 599, 607, 608, 611, 614, 618, 621, 622, 623, 625, 627, 628, 630, 631, 632, 634, 635, 639, 640, 645, 646, 648, 651, 652, 655, 669, 670, 672, 674, 676, 678, 683, 685], "stated": [470, 572, 593, 632], "stateful": 607, "stateless": [470, 648], "statepoint_token": 630, "static": [461, 466, 469, 470, 471, 477, 479, 480, 481, 483, 488, 490, 493, 509, 513, 529, 530, 534, 541, 543, 547, 548, 550, 562, 566, 571, 573, 574, 578, 579, 580, 581, 582, 583, 584, 591, 593, 609, 610, 622, 625, 626, 630, 634, 635, 646, 647, 648, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 681, 682], "static_cast": [674, 675, 676], "static_library": 570, "statically": [469, 470, 479, 481, 483, 513, 530, 534, 545, 547, 548, 550, 571, 579, 581, 583, 589, 610, 630, 636, 643, 648, 649, 671, 682], "stating": [538, 614], "statistic": [469, 471, 489, 490, 492, 493, 497, 499, 528, 529, 535, 581, 610, 620, 623, 639, 640, 649], "statistical": [497, 610], "statistically": 639, "status": [48, 238, 391, 464, 466, 476, 478, 481, 484, 486, 511, 536, 538, 563, 567, 579, 599, 618, 628, 632, 644], "statuscheck": 611, "statut": 142, "stay": [534, 549, 591, 601, 652], "staying": 582, "stb_local": 579, "std": [501, 516, 528, 530, 540, 543, 559, 566, 573, 591, 592, 593, 604, 613, 622, 626, 634, 635, 639, 645, 646, 650, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676], "stdarg": 579, "stdcall": 483, "stddef": 581, "stderr": [486, 487, 488, 581, 594, 609, 618, 641, 647, 669, 670, 671, 672, 673, 674, 675, 676], "stdin": [487, 499, 505, 618, 625, 641, 676, 680, 681, 682, 683, 684, 685], "stdint": 581, "stdio": [550, 552, 565, 582, 631, 682, 683, 684, 685], "stdlib": [481, 550], "stdlibc": 481, "stdout": [491, 499, 501, 504, 505, 552, 579, 581, 618, 641, 680, 681, 682, 683, 684, 685, 688], "steady": 544, "steensgaard": 469, "steer": 538, "steinberg": 613, "stellard": 572, "stem": 531, "stemming": 609, "step": [461, 465, 466, 468, 469, 477, 479, 481, 483, 485, 531, 534, 536, 537, 538, 539, 540, 541, 547, 548, 550, 552, 553, 555, 560, 564, 569, 570, 571, 573, 575, 577, 581, 582, 583, 591, 592, 607, 609, 614, 616, 619, 635, 636, 640, 643, 644, 648, 652, 670, 671, 672, 673, 674, 675, 676, 683, 684, 685, 687], "step_val": [683, 684, 685], "stepexpr": [672, 673, 674, 675, 676, 685], "stepped": 625, "stepping": [548, 575, 648, 676], "stepval": [672, 673, 674, 675, 676], "stepwithcompactencoding": 540, "stev": 623, "stick": [477, 568, 588, 609], "sticking": 611, "sticky": 579, "still": [461, 464, 466, 472, 476, 477, 478, 480, 483, 486, 487, 491, 499, 515, 526, 530, 531, 535, 538, 540, 543, 547, 550, 552, 554, 556, 558, 559, 560, 564, 565, 566, 570, 571, 573, 574, 575, 578, 579, 581, 583, 584, 590, 591, 593, 594, 606, 607, 608, 609, 611, 612, 613, 618, 621, 623, 625, 626, 628, 630, 631, 632, 636, 640, 643, 645, 647, 648, 652, 671, 672, 673, 674, 677, 683, 684, 685, 686], "still_poison": 579, "stingy": 609, "stitched": 601, "stkmaprecord": [628, 630], "stksizerecord": 628, "stl": [486, 543, 550, 581, 607, 609, 652], "stlextr": [670, 671, 672, 673, 674, 675, 676], "stm": 579, "stmt": [529, 642], "stn_undef": 466, "stoney": 466, "stop": [481, 484, 486, 491, 502, 516, 517, 529, 536, 538, 540, 541, 547, 560, 572, 579, 581, 583, 585, 590, 625, 626, 648, 651], "stopgap": 609, "stopiter": 534, "stopped": [534, 536, 579, 649], "stopper": 619, "stopping": [547, 581, 669, 680], "stor": [31, 32, 131, 214, 215, 216, 217, 220, 221, 374, 375, 461, 464, 466, 469, 470, 472, 474, 482, 487, 530, 534, 535, 537, 540, 542, 544, 547, 548, 550, 554, 555, 559, 562, 575, 576, 580, 581, 584, 585, 590, 591, 592, 597, 601, 609, 615, 616, 618, 622, 624, 625, 628, 629, 630, 636, 646, 654, 655, 668, 674, 675, 676, 679, 685], "storag": [461, 466, 471, 473, 483, 534, 547, 589, 592, 625], "storageclass": 688, "stored": [40, 136, 221, 230, 233, 235, 383, 461, 469, 470, 472, 473, 481, 483, 499, 527, 534, 535, 539, 540, 547, 554, 555, 559, 564, 576, 578, 579, 584, 593, 597, 601, 607, 609, 610, 611, 620, 622, 625, 626, 628, 630, 635, 640, 643, 646, 669, 674, 680, 685], "storemerg": 534, "storeregtoaddr": 646, "storeregtostackslot": [483, 646], "storesdnod": 646, "storing": [464, 466, 472, 474, 534, 535, 544, 547, 579, 609, 626], "story": [552, 625], "str": [472, 504, 530, 535, 579, 592, 609, 634, 635, 652, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 688], "str1": 636, "str2": 636, "str_offset": 625, "straight": [469, 483, 505, 531, 576, 591, 609, 630, 631, 632, 669, 679, 680, 681], "straightforward": [472, 483, 543, 573, 609, 611, 612, 622, 625, 636, 646, 648, 655, 668, 670, 671, 672, 673, 674, 681, 682, 683, 684, 685, 686], "strang": [472, 674, 685], "strateg": [470, 478, 534, 579, 609, 630, 632], "strategy": [470, 478, 483, 530, 534, 547, 589, 609, 611, 626, 630, 674, 685], "stray": 641, "strconcat": [636, 646], "stream": [54, 145, 244, 397, 461, 465, 473, 483, 486, 487, 488, 489, 495, 496, 500, 503, 504, 506, 510, 514, 515, 516, 522, 523, 525, 526, 527, 528, 535, 550, 579, 581, 596, 609, 613, 620, 625, 626, 645, 646, 648, 651, 652, 669, 679, 680, 681, 682, 683, 684, 685], "streamblock": 601, "streamclust": 613, "streamdirectory": 601, "streaming": 652, "streamlining": 478, "streamsiz": 601, "strength": [470, 483, 484, 530, 545, 579, 609, 653, 678, 679], "strengthen": 513, "stress": [486, 490, 546], "stressed": 583, "stressing": 546, "strex": 470, "strict": [54, 145, 244, 397, 467, 470, 472, 487, 538, 545, 554, 579, 581, 583, 591, 593, 609, 625, 637, 670, 681], "strict_": 467, "strict_fadd": 467, "strict_fp_round": 467, "strictfp": [473, 579], "strictly": [487, 540, 550, 579, 592, 609, 625, 630, 631, 670, 672, 675, 683], "strid": [22, 123, 208, 365, 466, 579, 613], "strided": 616, "strik": 538, "striking": [622, 670, 681], "strikingly": [673, 684], "string": [461, 466, 473, 475, 479, 481, 482, 483, 486, 490, 491, 492, 493, 495, 504, 509, 513, 515, 516, 517, 518, 519, 521, 522, 527, 529, 530, 542, 550, 560, 566, 576, 577, 585, 587, 592, 597, 601, 602, 605, 607, 618, 622, 625, 630, 631, 634, 635, 636, 637, 646, 648, 649, 652, 654, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "string_view": [501, 566], "stringlength": 625, "stringlengthexpress": 625, "stringly": 482, "stringmap": 530, "stringmapentry": 609, "stringrecty": 635, "stringref": [486, 530, 625, 634, 635, 650, 652, 654, 655, 656, 657, 674, 675, 676], "stringsort": 486, "stringswitch": 634, "stringwithcstring": 625, "stringwithspecialstring": 625, "strip": [477, 481, 490, 500, 515, 528, 530, 538, 575, 597, 641], "stripped": [515, 526, 625], "stripping": [490, 499, 528, 579, 582, 607, 609], "strippointercast": 486, "striv": [484, 486, 564, 623, 641], "strlen": 609, "strong": [461, 466, 470, 485, 487, 538, 543, 545, 579, 589, 591, 609, 612, 622, 630], "strongest": 626, "strongly": [482, 485, 486, 513, 537, 545, 547, 566, 570, 571, 580, 583, 622, 632, 672, 674, 677, 678, 683, 685, 686], "stroustrup": 609, "strr": 646, "strtab": [466, 473, 620], "strtab_blob": 473, "strtod": [530, 668, 669, 670, 671, 672, 673, 674, 675, 676], "strtol": 530, "struct": [466, 473, 483, 487, 529, 530, 531, 534, 540, 542, 545, 547, 578, 590, 596, 597, 600, 601, 602, 604, 609, 625, 626, 634, 643, 645, 646, 648, 652, 674, 676, 677, 685, 686], "struct_anon": 473, "struct_nam": 473, "struct_named": 473, "structtyp": 609, "structur": [466, 469, 470, 473, 483, 486, 487, 502, 504, 517, 535, 537, 540, 545, 547, 548, 550, 552, 554, 557, 560, 576, 580, 581, 582, 583, 584, 586, 597, 601, 602, 605, 607, 612, 616, 618, 625, 627, 634, 637, 646, 648, 651, 652, 654, 669, 670, 672, 673, 674, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "structural": [485, 490, 530, 535, 579, 616, 677, 686], "structurally": [473, 546, 579], "structured": [466, 473, 477, 513, 521, 522, 535, 540, 579, 581, 590, 625, 645, 678], "structuring": [647, 648], "struggled": 550, "stryjewsk": 607, "stt_amdgpu_hsa_kernel": 466, "stt_fil": [515, 526], "stt_func": [466, 515], "stt_gnu_ifunc": 515, "stt_notyp": 466, "stt_object": [466, 515], "stt_section": 515, "stub": [483, 532, 566, 579, 591, 593, 609, 646, 656, 657], "stubsmgr": 593, "stuck": [613, 677, 686], "student": 533, "studio": [468, 481, 542, 550, 551, 625], "study": [580, 581], "studying": [545, 610], "stuff": [482, 483, 530, 586, 609, 627, 640, 648, 652, 671, 672, 674, 675, 676, 682, 683, 685], "stuffing": 487, "stumped": 646, "stupid": 477, "stwu": 483, "sty": 637, "styl": [461, 466, 468, 470, 477, 487, 490, 491, 493, 494, 495, 499, 500, 513, 515, 516, 522, 527, 530, 534, 538, 547, 552, 583, 597, 609, 614, 617, 626, 632, 634, 635, 636, 649, 669, 674, 677, 680, 685, 686], "styled": 530, "styleguid": 614, "stylistic": [486, 636], "sub": [464, 470, 473, 478, 479, 482, 483, 487, 491, 513, 534, 538, 541, 542, 550, 555, 572, 583, 591, 609, 616, 632, 634, 636, 637, 641, 646, 670, 675, 681], "sub1": 487, "sub32rr": 625, "sub_32": 585, "sub_8b": 585, "sub_r": 636, "sub_rr": 636, "subblock": 473, "subcl": [469, 483, 530, 573, 585, 625, 635, 646, 648], "subclass": [469, 483, 486, 530, 547, 573, 609, 616, 635, 636, 637, 648, 652, 669, 680], "subclassed": [483, 609, 646], "subclassoptionaldat": 591, "subcommand": [648, 649, 650], "subcommunit": 538, "subcomponent": [461, 538], "subd": 611, "subdirector": [481, 482, 491, 550, 639, 640, 646], "subdirectory": [481, 482, 491, 570, 610, 639, 640, 641, 646], "subdivided": 579, "subel": [579, 580], "subexpress": [469, 580, 626, 669, 671, 672, 673, 674, 680, 682, 683, 684, 685], "subfield": 636, "subfold": 539, "subgraph": [537, 583, 607, 616], "subject": [461, 466, 480, 483, 486, 529, 538, 556, 559, 566, 572, 579, 608, 609, 642, 652], "subl": [483, 487], "sublist": 482, "subloop": 642, "subm": [476, 477, 538, 549, 608], "submiss": 538, "submit": 608, "submitted": [461, 533, 538], "submitting": [485, 549, 639], "submodul": 611, "subnormal": [579, 592], "subobject": 643, "suboptimal": 611, "subpath": 491, "subprogram": [461, 466, 579, 625, 676], "subproject": [486, 538, 549, 550, 569, 611, 618, 641], "subproject_branch": 611, "subrang": 579, "subreg": [579, 585, 646], "subreg_to_reg": 585, "subregclasslist": 646, "subregindex": 585, "subregist": 628, "subregister": 646, "subroutin": 579, "subroutine2": 625, "subscrib": [538, 608], "subscribed": [608, 623], "subscript": [469, 579, 607], "subscripted": 579, "subsect": [517, 522, 579, 593, 609, 634, 635], "subsequent": [239, 392, 461, 466, 467, 483, 495, 530, 538, 540, 548, 572, 579, 587, 593, 604, 607, 625, 626, 628, 632, 645, 646, 656, 670, 671], "subsequently": [487, 540, 579, 584, 614], "subset": [469, 470, 491, 495, 513, 515, 526, 538, 546, 548, 550, 566, 579, 581, 583, 592, 593, 609, 613, 625, 626, 628, 635, 636, 641, 649, 677, 686], "subsetting": 613, "subsidiary": 634, "subst": [636, 637], "substantial": [479, 485, 671, 682], "substantially": [469, 534, 547, 579, 626], "substitu": [482, 501, 579, 607, 636], "substitut": [470, 491, 628, 636, 641], "substituted": [483, 487, 491, 593, 636], "substituting": 570, "substr": [530, 636], "substream": [517, 595, 605], "substring": [513, 529, 535, 636, 641], "subsystem": [483, 579], "subtarget": [483, 505, 529, 557, 579], "subtargetemitt": 646, "subtargetfeatur": [637, 646], "subtl": [479, 482, 548, 581, 597, 669, 672, 677, 680, 682, 683, 686], "subtlety": 555, "subtmp": [670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "subtmp5": [674, 685], "subtool": 531, "subtract": [465, 466, 483, 535, 541, 555, 579, 636], "subtracting": [535, 579], "subtyp": [540, 635, 636, 646], "subvalu": [635, 636], "subvec": 579, "subvector": [483, 579], "subvers": [538, 572, 611, 641], "subvert": 480, "succ": 486, "succeed": [476, 480, 486, 487, 488, 492, 495, 496, 497, 498, 503, 506, 510, 528, 529, 540, 567, 573, 593, 609, 623, 641, 654, 655, 669, 671, 680, 685], "succeeded": [473, 474, 491, 648], "succeeding": [491, 579], "success": [486, 488, 505, 513, 538, 540, 555, 579, 609, 646, 648, 652, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "success_ord": 470, "successful": [550, 574, 579, 583, 611, 620, 623, 641], "successfully": [469, 486, 489, 504, 512, 538, 540, 557, 567, 570, 571, 572, 574, 583, 593, 626, 630, 645, 673, 684], "successively": [540, 583], "successor": [474, 483, 486, 502, 540, 545, 575, 579, 607, 616, 625, 646], "succinct": [486, 491], "succint": 487, "such": [461, 463, 464, 465, 466, 469, 470, 472, 473, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 495, 497, 499, 501, 502, 504, 505, 514, 515, 517, 530, 531, 534, 535, 536, 537, 538, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 559, 560, 565, 566, 569, 570, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 590, 591, 592, 593, 594, 596, 597, 599, 602, 604, 605, 606, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 628, 630, 631, 632, 634, 635, 636, 637, 639, 641, 642, 644, 645, 646, 648, 652, 654, 655, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "sudo": [550, 568, 639], "suff": 547, "suffer": 623, "suffic": [472, 602], "sufficient": [466, 467, 469, 470, 471, 477, 487, 530, 545, 547, 548, 550, 556, 570, 573, 574, 579, 587, 604, 608, 609, 611, 612, 623, 626, 630, 668, 679], "sufficiently": [545, 548, 550, 579, 607, 614], "suffix": [463, 466, 481, 486, 487, 491, 492, 496, 499, 503, 515, 530, 541, 570, 579, 609, 618, 626, 632, 636, 641, 646, 648, 657, 670, 681], "suffixed": [499, 614, 634], "sugar": [579, 636], "suggest": [461, 469, 485, 486, 538, 545, 550, 571, 575, 579, 593, 606, 608, 609, 623, 626, 630, 648], "suggested": [479, 485, 538, 610, 614, 626], "suggesting": [485, 608, 626, 637], "suit": [468, 482, 483, 487, 531, 538, 541, 549, 552, 560, 564, 568, 571, 572, 591, 609, 611, 617, 625, 626, 632, 649], "suitabl": [461, 473, 480, 482, 483, 486, 487, 499, 529, 530, 533, 534, 535, 546, 547, 557, 579, 581, 583, 584, 592, 593, 607, 609, 614, 625, 630, 641], "suitably": 609, "suited": [483, 540, 620, 654], "suiv": 653, "sum": [461, 473, 474, 475, 487, 504, 579, 609, 636, 645, 650], "sum_1": 518, "sum_2": 518, "sum_of_all_vari": 504, "summar": [499, 516, 579, 640], "summaris": [472, 523], "summariz": [483, 504, 534, 547, 620], "summarized": [579, 602, 604, 607], "summarizing": [491, 623], "summary": [473, 487, 488, 491, 492, 493, 495, 496, 498, 499, 500, 503, 505, 506, 507, 510, 513, 514, 515, 518, 521, 522, 523, 525, 526, 528, 530, 553, 554, 605, 607, 608, 618, 622, 626, 629, 630, 674, 676, 685], "summat": 579, "summed": 499, "summing": 597, "sumo": 466, "sun": [483, 648], "sunk": [466, 469, 557, 625], "sunwspro": 550, "sup": [483, 582, 646], "supercl": [609, 634, 636, 637, 648], "superclass": [469, 609, 634, 635, 636, 646, 648], "superfluous": 548, "superior": 632, "superiorly": 513, "supermajority": 623, "superpair": 635, "superpos": 609, "superreg": 646, "superseded": 615, "superset": [470, 579], "supersparc": 646, "superword": [580, 645], "suppl": [16, 57, 117, 147, 202, 326, 359, 400, 465, 518, 532, 621], "supplementary": 461, "supplementing": [491, 527], "supplied": [23, 366, 461, 473, 491, 495, 518, 559, 570, 579, 582, 593, 609, 648, 652, 677, 686], "supply": [464, 495, 499, 534, 559, 568, 570, 572, 574, 587, 593, 611, 654, 655, 656], "supplying": [540, 609], "support": [19, 54, 56, 57, 120, 145, 205, 214, 216, 217, 226, 228, 229, 244, 362, 397, 399, 400, 461, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 479, 480, 481, 482, 484, 486, 487, 491, 492, 495, 504, 509, 511, 513, 514, 516, 517, 519, 529, 530, 534, 536, 538, 541, 542, 546, 547, 548, 549, 550, 552, 554, 559, 560, 564, 565, 569, 570, 573, 576, 577, 578, 579, 582, 585, 591, 592, 593, 597, 599, 601, 606, 607, 609, 610, 611, 613, 614, 616, 617, 618, 620, 622, 625, 626, 628, 633, 634, 636, 639, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654, 655, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687], "supported": [54, 145, 244, 397, 461, 463, 464, 465, 470, 473, 479, 481, 486, 487, 491, 495, 498, 499, 501, 504, 514, 516, 517, 518, 519, 529, 530, 531, 532, 534, 538, 541, 542, 544, 545, 547, 550, 554, 560, 564, 565, 566, 569, 570, 572, 585, 586, 591, 593, 599, 605, 609, 611, 612, 616, 618, 620, 622, 623, 627, 631, 632, 634, 636, 637, 645, 646, 649, 652, 673, 684], "supporting": [461, 483, 530, 564, 565, 566, 569, 607, 609, 625, 631, 654, 677, 686], "supportsvp": 615, "supporttest": 481, "suppos": [487, 518, 540, 554, 573, 591, 601, 611, 631, 652], "supposed": [483, 579, 591, 597, 648], "suppress": [486, 489, 491, 534, 575, 579, 642, 652], "suppressed": [486, 514, 579], "sure": [469, 470, 472, 476, 481, 483, 485, 486, 488, 499, 530, 533, 534, 538, 541, 543, 545, 550, 552, 553, 565, 566, 567, 568, 570, 571, 572, 573, 574, 581, 588, 606, 608, 609, 619, 623, 625, 629, 631, 632, 636, 637, 639, 641, 645, 648, 649, 669, 670, 671, 672, 673, 674, 675, 676, 681, 685, 686], "surely": 485, "surfac": [29, 30, 129, 130, 218, 219, 372, 373, 464, 483, 546, 623, 649], "surgical": 609, "surpris": [609, 677, 686], "surprising": [579, 591], "surprisingly": [486, 545, 550, 669, 671, 680, 682], "surround": 607, "surrounded": [487, 566, 579, 585], "surrounding": [470, 480, 487, 548, 550, 579, 614, 626, 628, 636, 637], "survey": 532, "surviv": [540, 626], "survived": [669, 680], "suspected": 528, "suspend1": 534, "suspend2": 534, "suspend_funct": 534, "suspended": [534, 623], "suspens": [534, 623], "suspicious": 631, "sv": [481, 566], "sve": [529, 579, 614, 615], "svg": [481, 650], "svn": [538, 549, 614, 628, 639, 645, 681], "svptr": 579, "svr4": 495, "sw": [522, 613, 626], "swap": [461, 464, 470, 472, 568, 579, 601], "swapped": [472, 579, 590], "swapping": 472, "sweep": 547, "swift": [526, 579, 593, 614], "swiftcc": [473, 534, 579], "swifterror": [473, 579], "swiftmodul": 489, "swiftself": [473, 579], "swim": 613, "switch": [467, 480, 481, 494, 515, 526, 529, 530, 534, 540, 541, 565, 568, 573, 577, 583, 607, 609, 611, 618, 626, 630, 634, 635, 639, 645, 646, 652, 654, 669, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683], "switched": [470, 487, 579, 651], "switching": [579, 614], "switchsect": [483, 547], "switchtosect": 483, "swizzl": 466, "swizzled": [461, 466], "sx": 615, "sy": [471, 550, 656, 675, 676], "sycl": 461, "sym": [514, 515, 516, 517, 518, 521, 522, 542, 593, 619, 656, 657], "symbol": [49, 143, 240, 393, 473, 479, 483, 486, 490, 492, 493, 495, 497, 499, 501, 508, 515, 516, 518, 521, 522, 523, 526, 527, 530, 535, 547, 550, 579, 581, 584, 597, 605, 606, 609, 612, 625, 630, 643, 646, 651, 652, 654, 655, 657, 670, 671, 672, 673, 674, 675, 676, 677, 681, 683, 684, 685, 686, 688], "symbol1": [516, 542], "symbol2": [516, 542], "symbol_in_partit": 542, "symbolalias": 593, "symbolaliasmap": 593, "symbolflagsmap": 657, "symbolic": [464, 465, 469, 483, 516, 547, 565, 571, 580, 593, 609, 630, 639], "symbolically": [473, 593], "symboliz": [490, 494, 516, 566, 650], "symbolized": [516, 527], "symbolmap": 593, "symbolnam": 466, "symbolsiz": 600, "symbolstringpool": [654, 655, 656, 657], "symbolstringptr": [593, 657], "symbolt": 609, "symbytesiz": [597, 600], "symlik": 481, "symlink": 481, "symlinked": 481, "symmetrical": 531, "symmetry": 641, "symnam": 516, "symposium": 531, "symptom": 550, "symptomatic": 622, "symrecordstream": 597, "symtab": [466, 489, 609], "sync": [470, 592, 652], "synch_and_fetch": 570, "synchroniz": [464, 466, 470, 579, 593, 611], "synchronized": 582, "synchronously": 611, "syncscop": 579, "synergistic": 616, "synonym": 495, "synonymous": 585, "synops": 530, "syntactic": [487, 579, 636, 671, 682], "syntactically": 579, "syntax": [19, 20, 48, 54, 59, 96, 114, 121, 142, 145, 149, 185, 201, 206, 238, 239, 244, 249, 287, 303, 363, 391, 392, 397, 402, 442, 460, 462, 466, 482, 483, 486, 492, 493, 513, 515, 516, 517, 519, 526, 530, 543, 548, 550, 566, 570, 580, 581, 585, 586, 587, 594, 609, 617, 618, 622, 625, 627, 634, 636, 641, 652, 668, 670, 671, 672, 673, 674, 675, 676, 679, 681, 682, 683, 684, 685], "synthesiz": [625, 671, 682], "synthesized": [487, 541, 625], "synthesizedcd": 472, "synthetic": [515, 575, 646], "sysadmin": 611, "syscall": 483, "sysmsg_op_ecc_err_interrupt": [54, 145, 244, 397], "sysmsg_op_host_trap_ack": [54, 145, 244, 397], "sysmsg_op_reg_rd": [54, 145, 244, 397], "sysmsg_op_ttrace_pc": [54, 145, 244, 397], "sysroot": [570, 571, 572, 637], "system": [461, 468, 469, 470, 471, 472, 476, 479, 481, 482, 483, 486, 489, 491, 492, 493, 495, 517, 530, 532, 533, 538, 539, 541, 543, 546, 547, 548, 549, 551, 554, 565, 568, 570, 571, 572, 573, 574, 580, 581, 582, 589, 592, 593, 601, 605, 606, 608, 609, 610, 611, 612, 619, 622, 623, 625, 626, 628, 630, 632, 634, 635, 636, 637, 639, 640, 644, 647, 648, 649, 650, 654, 655, 656, 657, 670, 671, 672, 673, 674, 675, 676, 677, 679, 682, 685, 686], "system_error": 675, "system_vgpr_workitem_id_undefined": 466, "system_vgpr_workitem_id_x": 466, "system_vgpr_workitem_id_x_y": 466, "system_vgpr_workitem_id_x_y_z": 466, "systematic": 626, "systemz": [483, 550, 579, 585, 614, 628], "sysv": [514, 523, 532], "sz": 555, "s\u00e9cur": 653, "t1": [483, 579, 591, 641, 650], "t1item": 591, "t2": [483, 487, 579, 591, 592, 641, 650], "t2item": 591, "t3": [483, 579], "t4": 579, "t5": 579, "tab": [486, 487, 499, 636], "tabl": [54, 145, 244, 397, 461, 463, 464, 465, 467, 469, 472, 473, 480, 481, 489, 490, 495, 497, 504, 508, 513, 515, 516, 517, 518, 521, 522, 526, 527, 529, 530, 534, 550, 551, 555, 564, 573, 577, 579, 581, 582, 584, 591, 593, 595, 597, 602, 604, 605, 607, 609, 618, 626, 630, 632, 635, 637, 640, 645, 646, 651, 652, 654, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686], "tabledef": 505, "tablegen": [481, 529, 541, 550, 557, 562, 571, 572, 577, 614, 644, 646], "tablegen_json_vers": 634, "tablegenbackend": 635, "tablegenbackendskeleton": 635, "tablegenmain": 635, "tablet": 588, "tabsiz": 499, "tackl": [543, 674, 685], "tackling": [671, 682], "tag": [13, 97, 186, 288, 323, 352, 443, 462, 473, 486, 529, 538, 539, 547, 550, 579, 587, 589, 609, 611, 630, 634, 636], "tag0": [462, 579], "tag1": [462, 579], "tag2": 579, "tag3": 579, "tag_apple_property": 625, "tag_base_typ": 625, "tag_memb": 625, "tag_offset": 579, "tag_pointer_typ": 625, "tag_structure_typ": 625, "tagged": [463, 572, 579, 609, 635, 636], "tagging": 617, "tahit": 466, "tail": [473, 487, 534, 547, 575, 579, 591, 592, 625, 636, 645, 651, 677, 686], "tail_ex": 651, "tailcall": [483, 626], "tailcalle": 483, "tailcallopt": [483, 579], "tailcc": [473, 483, 579], "taill": 142, "tailored": [517, 568], "tak": [461, 466, 468, 469, 470, 472, 473, 475, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 491, 493, 497, 500, 503, 505, 506, 510, 511, 513, 516, 517, 518, 528, 530, 531, 534, 538, 539, 540, 541, 542, 546, 547, 548, 550, 552, 553, 555, 559, 569, 573, 575, 576, 577, 579, 581, 582, 583, 584, 585, 586, 588, 591, 592, 593, 607, 609, 611, 612, 616, 619, 620, 621, 625, 626, 627, 628, 630, 632, 634, 635, 636, 643, 646, 647, 648, 649, 651, 652, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688], "takecallback": 609, "takeerror": [593, 609, 654, 655, 656, 657], "taken": [466, 469, 475, 479, 483, 505, 530, 534, 535, 540, 545, 559, 566, 579, 583, 585, 590, 591, 593, 607, 609, 611, 612, 616, 619, 623, 625, 626, 630, 631, 632, 635, 636, 637, 643, 646, 677, 686], "taking": [473, 478, 492, 497, 533, 573, 578, 579, 607, 609, 616, 621, 625, 630, 635, 639, 674, 685, 686], "talk": [486, 531, 541, 554, 560, 579, 589, 609, 648, 669, 670, 671, 672, 674, 677, 678, 679, 680, 681, 682, 683, 685, 686], "talking": [486, 621, 669, 670, 677, 679, 680, 681, 686], "tally": 640, "tap": 550, "tar": [550, 552, 571, 619], "tarball": [550, 571, 572], "target": [49, 96, 143, 185, 240, 287, 393, 442, 461, 464, 465, 468, 470, 471, 472, 473, 479, 480, 481, 482, 485, 486, 490, 491, 492, 498, 501, 513, 515, 516, 518, 532, 534, 536, 539, 541, 545, 546, 547, 550, 552, 554, 555, 557, 559, 560, 562, 564, 569, 571, 572, 574, 576, 577, 583, 584, 587, 589, 591, 593, 594, 596, 615, 622, 625, 626, 628, 630, 632, 634, 635, 636, 637, 639, 640, 641, 643, 644, 645, 648, 654, 655, 671, 672, 673, 674, 676, 678, 682, 683, 684, 685], "target_compile_definit": 482, "target_dat": [682, 683, 684, 685], "target_link_librar": 481, "targetasminfo": [547, 646], "targetcallingconv": 646, "targetdescript": 646, "targeted": [483, 545, 571, 575, 579, 646, 653], "targetframeinfo": 646, "targetframelowering": 540, "targetfunc": 609, "targetinfo": [538, 646], "targeting": [466, 482, 483, 543, 545, 550, 569, 570, 571, 579, 589, 593, 612, 618, 626, 637, 641, 675], "targetinstrformat": 646, "targetinstrinfo": 614, "targetjitinfo": 646, "targetlibraryinfo": [579, 614], "targetlowering": [477, 540, 541, 559, 614, 646, 650], "targetloweringbas": 467, "targetloweringobjectfil": 483, "targetloweringopt": 650, "targetmachin": [547, 584, 592, 614, 618, 646, 648, 654, 656, 671, 672, 673, 674, 675], "targetnam": 585, "targetopt": [483, 675], "targetpassconfig": 561, "targetprocesscontrol": [593, 654, 655, 656, 657], "targetregisterclass": [483, 646], "targetregisterdesc": [483, 646], "targetregisterinfo": 614, "targetregistry": [483, 646, 675], "targets_to_build": 571, "targetselect": [671, 672, 673, 674, 675, 676], "targetselectiondag": [483, 541, 646], "targetsubtarget": 646, "targettransforminfo": 579, "targettripl": 675, "tarjan": 648, "task": [486, 487, 534, 540, 541, 560, 569, 579, 591, 612, 625, 627, 630, 631], "task_begin": 487, "task_end": 487, "tasked": 632, "taught": 483, "tb": 646, "tba": [466, 545, 580, 590], "tba_h": [48, 465], "tba_lo": [48, 465], "tbb": 646, "tbcc": 646, "tbd": [462, 464, 466, 514, 593], "tbepl": 613, "tblgen": [481, 483, 490, 541, 569, 571, 634, 636, 637, 646], "tblgensubtarget": 646, "tbr_jtr": 585, "tbuffer_load_format_d16_x": [0, 3, 4], "tbuffer_load_format_d16_xy": [0, 3, 4], "tbuffer_load_format_d16_xyz": [0, 3, 4], "tbuffer_load_format_d16_xyzw": [0, 3, 4], "tbuffer_load_format_x": [0, 2, 3, 4], "tbuffer_load_format_xy": [0, 2, 3, 4], "tbuffer_load_format_xyz": [0, 2, 3, 4], "tbuffer_load_format_xyzw": [0, 2, 3, 4], "tbuffer_store_format_d16_x": [0, 3, 4], "tbuffer_store_format_d16_xy": [0, 3, 4], "tbuffer_store_format_d16_xyz": [0, 3, 4], "tbuffer_store_format_d16_xyzw": [0, 3, 4], "tbuffer_store_format_x": [0, 2, 3, 4], "tbuffer_store_format_xy": [0, 2, 3, 4], "tbuffer_store_format_xyz": [0, 2, 3, 4], "tbuffer_store_format_xyzw": [0, 2, 3, 4], "tcb": 624, "td": [467, 483, 493, 529, 541, 577, 585, 592, 634, 635, 636, 637, 646], "tdm": 567, "tdrr": 493, "tdtag": 634, "teach": [541, 654, 670, 681], "teaching": [678, 679], "team": [531, 538, 572, 610, 611, 616], "tear": 540, "technical": [482, 484, 485, 538, 549, 581, 611, 623, 650], "technically": 501, "techniqu": [461, 469, 477, 483, 547, 560, 579, 591, 609, 620, 645, 646, 647, 648, 649, 669, 671, 672, 673, 674, 678, 679, 680, 682, 683, 684, 685], "technological": 537, "technology": [582, 677, 686], "ted": 634, "tedious": [487, 652], "tee": 477, "teething": 632, "tel": [469, 477, 481, 483, 485, 486, 488, 530, 535, 538, 541, 547, 550, 553, 570, 579, 582, 591, 593, 606, 609, 610, 611, 625, 636, 640, 641, 653, 669, 670, 674, 676, 677, 680, 681, 685, 686], "telling": 530, "temp": 574, "templat": [469, 486, 499, 529, 530, 549, 573, 591, 607, 623, 631, 634, 635, 636, 637, 646, 648, 652, 670], "templateargdecl": 636, "templatearglist": 636, "templated": [530, 531, 609], "templateparam": 579, "temporal": 579, "temporally": 479, "temporar": [486, 543, 579, 609, 626, 641], "temporarily": [461, 466, 477, 487, 623], "temporary": [465, 483, 486, 491, 505, 542, 559, 566, 579, 580, 581, 585, 607, 609, 611, 621, 636, 640, 641, 652], "tempted": 631, "tempting": [486, 550], "ten": [548, 601], "tend": [502, 505, 513, 538, 544, 548, 550, 560, 593, 609, 614, 619, 625], "tension": [674, 685], "tensorflow": 581, "tentat": [466, 579, 623], "term": [461, 466, 469, 470, 472, 483, 484, 485, 486, 499, 513, 538, 540, 543, 547, 557, 566, 579, 580, 583, 585, 590, 591, 593, 607, 608, 616, 625, 628, 630, 631, 632, 635, 636, 641, 644, 655], "termed": [461, 466], "termin": [483, 609, 625, 631, 672, 683], "terminal": [477, 495, 496, 503, 506, 510, 517, 528, 530, 591], "terminat": [461, 466, 491, 525, 540, 545, 566, 579, 583, 596, 609, 616, 622, 625, 635, 641], "terminated": [461, 466, 473, 540, 542, 592, 597, 602, 609, 620, 622, 646, 672, 683], "terminating": [545, 579, 609, 646], "terminator": [475, 486, 502, 540, 545, 583, 591, 607, 609, 616, 646, 648], "terminology": [475, 482, 559, 579, 607, 614, 617, 644, 676], "ternary": 483, "terribly": 468, "territory": 550, "terror": 468, "tessel": 466, "test": [461, 466, 468, 469, 477, 479, 480, 483, 485, 487, 490, 506, 513, 517, 518, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 540, 541, 543, 549, 552, 560, 568, 569, 571, 572, 573, 574, 581, 583, 585, 591, 594, 607, 608, 609, 610, 611, 612, 617, 618, 622, 625, 626, 629, 630, 632, 634, 635, 643, 647, 648, 652, 671, 672, 674, 675, 678, 679, 682, 683, 685], "test1": [586, 627, 630, 641], "test2": [523, 525], "test5": 487, "test_arg": 478, "test_argu": 478, "test_blockaddress": 555, "test_devic": 531, "test_exec_root": 491, "test_format": 491, "test_fuzz": 581, "test_hd": 531, "test_host": 531, "test_nam": 478, "test_source_root": 491, "test_suite_benchmarking_only": 639, "test_suite_collect_stat": 639, "test_suite_remote_host": 639, "test_suite_run_benchmark": 639, "test_suite_run_typ": 639, "test_suite_run_und": 639, "test_suite_spec2000_root": 639, "test_suite_spec2006_root": 639, "test_suite_spec2017_root": 639, "test_suite_subdir": 639, "test_suite_use_perf": 639, "testabl": [486, 560, 608], "testcas": [487, 488, 538, 579, 609, 670, 681], "testcase_d": 581, "testcleanup": 579, "tested": [461, 480, 531, 538, 540, 546, 550, 565, 569, 579, 581, 591, 607, 609, 612, 614, 622, 632, 636, 641, 648, 674, 685], "tester": [538, 572], "testfnptr": 579, "testfunc": [671, 682], "testing": [469, 479, 480, 481, 487, 488, 491, 492, 517, 529, 534, 538, 546, 550, 559, 566, 568, 607, 608, 609, 610, 611, 612, 619, 623, 625, 626, 632, 639, 640, 644], "testingconfig": 491, "testl": 626, "testq": 626, "testresult": 549, "testrunn": 491, "testsuit": [487, 491, 612], "tex": 640, "text": [461, 466, 481, 483, 484, 485, 487, 495, 499, 501, 504, 514, 516, 518, 519, 523, 525, 529, 538, 541, 542, 546, 579, 581, 586, 587, 608, 609, 621, 625, 626, 628, 636, 639, 640, 641, 646, 649, 652, 656, 668, 677, 679, 686, 688], "textfileread": 486, "textual": [461, 466, 483, 489, 492, 499, 538, 543, 546, 579, 580, 587, 590, 634, 637, 641, 650, 671, 682], "textually": [491, 543, 595], "textur": 464, "tfe": [0, 2, 3, 4, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 43, 44, 45, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 140, 211, 212, 213, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 335, 369, 370, 371, 372, 373, 379, 380, 381, 382, 383, 386, 387, 388, 466], "tgid_size_en": 466, "tgid_x_en": 466, "tgid_y_en": 466, "tgid_z_en": 466, "tgt": [0, 2, 3, 4], "th": [461, 466, 472, 497, 540, 553, 579, 591, 599, 646, 652, 668, 679], "than": [461, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 477, 479, 481, 483, 485, 486, 487, 489, 491, 492, 495, 497, 499, 501, 505, 513, 514, 517, 518, 522, 525, 527, 530, 531, 534, 535, 537, 538, 539, 540, 541, 543, 545, 546, 547, 549, 550, 555, 559, 560, 564, 566, 567, 568, 572, 574, 575, 576, 578, 579, 581, 582, 583, 586, 587, 588, 590, 591, 593, 595, 597, 599, 601, 602, 604, 607, 609, 610, 611, 612, 613, 616, 618, 619, 621, 623, 624, 625, 626, 628, 630, 632, 634, 635, 636, 641, 642, 645, 646, 647, 648, 651, 652, 654, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "thank": [533, 574, 622], "that": [19, 32, 40, 43, 45, 136, 221, 230, 233, 235, 375, 383, 386, 388, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 505, 506, 508, 511, 513, 514, 515, 517, 518, 520, 522, 523, 524, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "the": [0, 2, 3, 5, 13, 16, 17, 19, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 46, 47, 48, 49, 54, 56, 57, 60, 62, 63, 66, 78, 87, 96, 97, 98, 114, 117, 118, 120, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 145, 147, 151, 152, 153, 162, 173, 185, 186, 187, 201, 202, 203, 205, 209, 210, 211, 212, 213, 218, 219, 236, 237, 238, 239, 240, 244, 246, 247, 250, 252, 253, 254, 266, 277, 287, 288, 289, 303, 323, 326, 335, 344, 352, 359, 360, 362, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 389, 390, 391, 392, 393, 397, 399, 400, 403, 405, 406, 409, 421, 432, 442, 443, 444, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 539, 541, 542, 546, 549, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566, 567, 568, 571, 574, 576, 577, 582, 583, 584, 585, 586, 587, 589, 591, 594, 596, 606, 610, 612, 615, 617, 622, 624, 625, 627, 628, 629, 631, 632, 633, 634, 638, 641, 642, 643, 644, 649, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 671, 676, 678, 681, 682, 687, 688], "the_dag": 636, "the_execution_engin": [682, 683, 684, 685], "the_fpm": [682, 683, 684, 685], "the_funct": [681, 682, 683, 684, 685], "the_modul": [681, 682, 683, 684, 685], "theadsafemodul": 593, "thecontext": [670, 671, 672, 673, 674, 675, 676], "thecu": 676, "thedoc": 652, "thedoclist": 652, "theexecutionengin": 676, "thefpm": [671, 672, 673, 674], "thefunct": [670, 671, 672, 673, 674, 675, 676], "thei": 607, "their": [461, 462, 466, 467, 469, 470, 472, 473, 476, 480, 481, 482, 483, 485, 486, 490, 491, 495, 497, 499, 500, 502, 504, 513, 514, 518, 521, 522, 529, 530, 531, 535, 537, 538, 539, 540, 543, 545, 547, 549, 550, 554, 555, 556, 557, 560, 564, 567, 572, 573, 577, 578, 579, 580, 581, 582, 583, 585, 588, 591, 592, 593, 604, 605, 606, 607, 609, 610, 611, 612, 614, 616, 618, 620, 622, 623, 625, 626, 628, 630, 631, 632, 634, 635, 636, 637, 639, 641, 642, 643, 645, 646, 648, 649, 651, 652, 654, 655, 669, 670, 671, 673, 674, 675, 676, 677, 679, 680, 681, 682, 684, 685, 686], "thej": [671, 672, 673, 674, 676], "them": [461, 466, 469, 470, 472, 473, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 491, 495, 499, 504, 508, 510, 513, 515, 517, 518, 521, 522, 525, 526, 530, 531, 533, 535, 537, 538, 539, 540, 543, 545, 546, 547, 548, 550, 552, 554, 556, 557, 559, 560, 562, 566, 569, 571, 572, 573, 576, 577, 579, 581, 582, 583, 585, 587, 588, 590, 591, 592, 593, 604, 606, 607, 608, 609, 610, 611, 614, 616, 618, 619, 621, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 646, 648, 649, 650, 651, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "themodul": [670, 671, 672, 673, 674, 675, 676], "themself": 538, "themselv": [470, 473, 483, 491, 530, 538, 546, 579, 591, 609, 611, 623, 625, 626, 636, 637, 642, 650, 651, 669, 680], "then": [461, 464, 465, 466, 468, 469, 470, 472, 473, 474, 475, 477, 479, 481, 482, 483, 484, 485, 486, 487, 491, 492, 493, 496, 497, 499, 502, 503, 506, 509, 510, 511, 513, 515, 517, 518, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 550, 552, 553, 554, 555, 558, 559, 560, 562, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 593, 595, 596, 597, 600, 601, 602, 607, 608, 609, 610, 611, 614, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 648, 650, 652, 654, 655, 656, 657, 668, 669, 670, 671, 673, 674, 675, 676, 679, 680, 681, 682, 684, 685], "then1": 626, "then2": 626, "then_": [683, 684, 685], "then_bb": [683, 684, 685], "then_val": [683, 684, 685], "thenbb": [672, 673, 674, 675, 676, 683], "thenv": [672, 673, 674, 675, 676], "theoretical": 513, "theoretically": [609, 631], "theory": [570, 591, 597, 652, 686], "ther": [221, 233, 235, 461, 463, 464, 465, 466, 469, 470, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 491, 494, 495, 499, 501, 504, 505, 507, 509, 512, 513, 515, 518, 521, 522, 523, 525, 526, 530, 531, 533, 534, 535, 536, 537, 538, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 581, 583, 585, 586, 587, 589, 590, 591, 592, 593, 595, 597, 599, 600, 602, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 619, 620, 621, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 646, 647, 648, 649, 651, 652, 655, 656, 669, 670, 671, 672, 673, 674, 676, 677, 680, 681, 682, 683, 684, 685, 686], "thereaft": 628, "thereby": [530, 579, 628], "therefor": [461, 466, 470, 472, 483, 513, 530, 531, 534, 538, 540, 548, 565, 579, 587, 588, 592, 594, 607, 609, 614, 616, 623, 625, 626, 628, 642, 648, 652], "thereof": [484, 579], "thes": [16, 114, 117, 201, 202, 239, 303, 326, 359, 392, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 496, 499, 504, 508, 513, 522, 523, 527, 530, 531, 533, 534, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 553, 554, 555, 556, 559, 560, 566, 569, 570, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 588, 590, 591, 592, 593, 594, 595, 597, 602, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 616, 618, 620, 623, 625, 626, 628, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "thesimplifiedandinstruct": 575, "thetargetmachin": 675, "thetripl": 614, "they": [461, 462, 463, 464, 465, 466, 469, 470, 472, 473, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 491, 493, 495, 497, 501, 502, 507, 509, 513, 514, 515, 518, 526, 527, 528, 530, 531, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554, 557, 559, 560, 566, 567, 568, 572, 573, 575, 577, 578, 579, 580, 581, 583, 585, 587, 590, 591, 593, 595, 596, 604, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 619, 621, 623, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 654, 655, 669, 670, 671, 672, 674, 677, 680, 681, 682, 683, 685, 686], "thin": [479, 481, 495, 499, 508, 511, 579, 609], "thing": [466, 469, 472, 473, 477, 479, 482, 483, 484, 486, 487, 491, 530, 531, 535, 538, 540, 546, 548, 550, 552, 557, 560, 569, 571, 574, 579, 581, 583, 586, 587, 590, 591, 593, 605, 606, 607, 609, 610, 611, 622, 623, 625, 626, 631, 634, 636, 640, 641, 648, 650, 652, 654, 655, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "think": [469, 476, 481, 483, 486, 535, 538, 541, 547, 548, 554, 573, 577, 579, 580, 590, 592, 596, 608, 609, 611, 612, 626, 631, 636, 672, 675, 679, 683], "thinking": [461, 548, 609, 677, 686], "thinlto": [475, 481, 626, 629], "third": [461, 468, 473, 475, 483, 486, 513, 517, 527, 530, 534, 535, 540, 542, 547, 548, 550, 554, 572, 579, 585, 591, 594, 609, 610, 623, 625, 626, 628, 630, 634, 636, 640, 646, 648, 651, 652, 670, 677, 681, 686], "this": [0, 2, 3, 5, 13, 16, 19, 23, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 58, 60, 65, 87, 97, 99, 100, 101, 114, 117, 136, 137, 138, 143, 144, 145, 148, 173, 186, 201, 202, 214, 216, 217, 221, 226, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 248, 250, 277, 288, 303, 304, 305, 309, 310, 314, 315, 316, 317, 323, 326, 336, 337, 338, 339, 340, 342, 352, 353, 359, 366, 383, 384, 385, 391, 392, 393, 394, 395, 396, 397, 401, 403, 408, 432, 443, 445, 446, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 509, 510, 511, 513, 514, 515, 517, 518, 521, 522, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 546, 547, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 675, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687], "thischar": [668, 669, 670, 671, 672, 673, 674, 675, 676], "thom": 626, "thoroughly": [672, 683], "thos": [461, 464, 466, 469, 470, 477, 479, 481, 482, 483, 484, 485, 486, 487, 491, 494, 495, 497, 499, 502, 513, 514, 515, 517, 518, 530, 535, 537, 538, 540, 546, 547, 548, 549, 550, 551, 553, 556, 558, 559, 568, 570, 571, 573, 579, 580, 581, 583, 590, 591, 593, 605, 607, 609, 611, 612, 615, 621, 622, 623, 625, 626, 628, 630, 631, 632, 634, 635, 636, 641, 643, 644, 646, 648, 649, 652, 674, 675, 676, 685], "thost": 552, "though": [461, 470, 474, 483, 487, 501, 505, 530, 531, 538, 540, 541, 542, 545, 547, 548, 554, 559, 569, 573, 575, 579, 582, 583, 588, 590, 591, 595, 607, 609, 611, 625, 626, 640, 641, 648, 654, 669, 670, 672, 674, 676, 680, 681, 682, 685], "thought": [483, 554, 579, 590, 602, 614, 630], "thousand": [581, 601, 607], "thre": [461, 464, 468, 473, 477, 482, 483, 487, 488, 513, 518, 530, 534, 535, 537, 540, 544, 548, 550, 554, 559, 564, 579, 583, 585, 590, 591, 594, 595, 607, 609, 614, 616, 619, 620, 623, 626, 630, 632, 634, 636, 641, 646, 648, 649, 654, 669, 672, 680], "thread": [461, 464, 465, 469, 470, 471, 473, 481, 483, 487, 489, 499, 518, 533, 534, 536, 538, 539, 540, 547, 566, 580, 581, 592, 593, 607, 611, 613, 614, 622, 624, 626, 630, 639, 649, 650, 651, 654, 655], "thread_id": [487, 651], "thread_local": [483, 579, 630], "thread_siblings_list": 471, "threadbuff": 651, "threaded": [547, 579, 581, 593, 609], "threadgroup_size_in_wavefront": 466, "threadid": 592, "threadidx": 592, "threading": [534, 575, 609], "threadlocal": [473, 579], "threadlocalquarantinesizekb": 622, "threadpool": 593, "threadsaf": 547, "threadsafecontext": [654, 655], "threadsafemodul": [654, 655, 656, 657, 671, 672, 673, 674], "threadsanitiz": 579, "threat": [484, 621, 623], "threatened": 484, "threatening": 484, "threshold": [499, 518, 579, 607, 613, 620, 649], "threshold_float_numb": 518, "threshold_int_numb": 518, "throttling": [505, 616], "through": [461, 466, 469, 470, 473, 474, 477, 478, 481, 482, 483, 485, 492, 495, 513, 530, 531, 532, 533, 534, 537, 538, 540, 543, 544, 545, 546, 547, 548, 550, 553, 557, 559, 566, 567, 569, 572, 573, 576, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 593, 594, 605, 607, 608, 609, 611, 614, 615, 616, 620, 622, 623, 625, 626, 628, 629, 630, 631, 634, 635, 636, 643, 645, 646, 647, 648, 649, 652, 654, 655, 656, 657, 669, 671, 672, 673, 674, 675, 676, 678, 679, 680, 682, 683, 684, 685], "throughout": [464, 465, 472, 473, 482, 486, 487, 535, 538, 550, 579, 584, 601, 604, 609, 620, 625, 631, 636, 651], "throughput": [505, 513, 545, 593], "throw": [461, 507, 531, 534, 545, 578, 579, 593, 607, 648, 656], "throwaway": 468, "throwinfo": 540, "throwing": [483, 534, 540, 579, 609, 631], "thrown": [479, 540, 544, 579], "throwntyp": 579, "thumb": [470, 483, 538, 570, 631, 649], "thumb1": [532, 579], "thumb2": [483, 532, 576, 579], "thunderbird": 538, "thunderx2t99model": 646, "thunderxt8xmodel": 646, "thunk": [483, 517, 579, 591, 607, 643], "thursday": 588, "thus": [461, 469, 470, 473, 474, 477, 478, 483, 486, 487, 530, 534, 538, 540, 543, 545, 547, 566, 574, 575, 579, 581, 589, 590, 591, 595, 597, 604, 607, 608, 609, 611, 625, 626, 630, 636, 641, 642, 648, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "thusly": 600, "ti": [466, 534, 538, 539, 579, 593], "tian": 616, "tick": 651, "tid": 592, "tidbit": [469, 676, 678, 679, 685, 687], "tidig_cmp_cnt": 466, "tidy": [486, 593, 614, 648], "tiebreak": 531, "tied": [483, 578, 579, 585, 625, 630], "tier": 632, "tight": [545, 582], "tightened": 554, "tightly": [535, 579, 611, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "tii": [483, 614], "til": 616, "tiling": [63, 152, 253, 406, 616], "till": 567, "tim": [461, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 487, 489, 491, 492, 493, 495, 499, 504, 505, 506, 507, 513, 514, 515, 517, 518, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 538, 539, 540, 541, 542, 545, 547, 549, 550, 552, 553, 555, 556, 559, 560, 563, 564, 566, 567, 569, 570, 571, 572, 573, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 591, 592, 593, 594, 597, 601, 602, 605, 606, 607, 609, 610, 611, 613, 616, 619, 622, 623, 625, 627, 628, 630, 632, 634, 635, 636, 637, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 668, 670, 671, 672, 673, 674, 678, 679, 681, 682, 683, 684, 685], "timberwolfmc": 640, "timed": [491, 623, 635], "timeit": 639, "timelin": [618, 623, 649, 650], "timely": [485, 623, 630, 632], "timeout": [491, 581], "timeout_exitcod": 581, "timepassesisenabled": 530, "timescal": 651, "timestamp": [461, 489, 495, 509, 515, 526, 602, 611, 651], "timing": [513, 529, 579, 623, 626, 641, 648, 651], "tiny": [493, 573, 591], "tip": [477, 533, 538, 551, 611, 634, 648, 679], "tir": 486, "tirefactory": 486, "tiring": 637, "titl": [476, 485, 538, 608], "tl": [473, 483, 522, 540, 579, 593, 630], "tli": 614, "tm": [592, 646, 656], "tma_h": [48, 465], "tma_lo": [48, 465], "tmax": 465, "tmp": [481, 483, 487, 491, 505, 527, 547, 548, 566, 579, 609, 610, 641, 646, 647, 671, 674, 682, 685], "tmp1": [486, 487, 548], "tmp2": [548, 674, 685], "tmp3": [487, 548], "tmp4": 548, "tmp5": 548, "tmp7": 487, "tmp9": 487, "tmpb": [674, 675, 676], "tmpf": 471, "to": [5, 16, 19, 25, 31, 32, 43, 44, 45, 46, 47, 49, 56, 57, 59, 60, 65, 66, 87, 96, 99, 100, 114, 117, 120, 125, 131, 139, 140, 141, 143, 147, 149, 153, 173, 185, 201, 202, 205, 210, 214, 215, 216, 217, 220, 221, 226, 227, 228, 229, 233, 234, 235, 236, 237, 240, 246, 247, 249, 250, 254, 277, 287, 303, 326, 353, 359, 362, 368, 374, 375, 386, 387, 388, 389, 390, 393, 399, 400, 402, 403, 408, 409, 432, 442, 445, 446, 460, 462, 463, 464, 465, 468, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 532, 534, 535, 536, 537, 540, 541, 542, 544, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 564, 566, 578, 580, 581, 582, 583, 584, 585, 587, 589, 590, 595, 596, 597, 599, 600, 601, 604, 605, 606, 608, 610, 612, 613, 614, 616, 617, 621, 622, 624, 625, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688], "tobi": 616, "toc": 483, "today": [470, 486, 546, 548, 579, 605, 611, 614, 628, 630], "todefin": 634, "todo": [466, 483, 530, 538, 541, 556, 562, 571, 575, 607, 619, 648], "togeth": [40, 136, 230, 383, 461, 464, 466, 469, 472, 474, 477, 483, 487, 488, 491, 510, 511, 514, 518, 527, 528, 530, 534, 535, 538, 540, 547, 550, 554, 559, 560, 569, 575, 579, 581, 588, 593, 597, 601, 607, 609, 611, 620, 625, 635, 641, 645, 648, 649, 655, 657, 668, 669, 670, 672, 673, 677, 679, 680, 681, 683, 684, 686], "tojittargetaddress": 593, "tok": [534, 579, 676], "tok_binary": [673, 674, 675, 676], "tok_def": [668, 669, 670, 671, 672, 673, 674, 675, 676], "tok_els": [672, 673, 674, 675, 676], "tok_eof": [668, 669, 670, 671, 672, 673, 674, 675, 676], "tok_extern": [668, 669, 670, 671, 672, 673, 674, 675, 676], "tok_for": [672, 673, 674, 675, 676], "tok_identifi": [668, 669, 670, 671, 672, 673, 674, 675, 676], "tok_if": [672, 673, 674, 675, 676], "tok_in": [672, 673, 674, 675, 676], "tok_numb": [668, 669, 670, 671, 672, 673, 674, 675, 676], "tok_then": [672, 673, 674, 675, 676], "tok_unary": [673, 674, 675, 676], "tok_var": [674, 675, 676], "tokcod": 636, "token": [483, 513, 534, 541, 559, 572, 587, 597, 611, 630, 636, 652, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "token_prec": [680, 681, 682, 683, 684, 685], "tokeniz": 679, "tokidentifi": 636, "tokinteg": 636, "tokprec": [669, 670, 671, 672, 673, 674, 675, 676], "tokstring": 636, "tokvarnam": 636, "told": 538, "toler": [537, 547], "tolerat": [579, 581, 629], "tolmach": 547, "tolmach94": 547, "tom": [572, 652], "tombston": 599, "tonearest": 579, "tonearestaway": 579, "tong": 466, "tongapro": 466, "tons": [590, 679], "too": [468, 477, 483, 485, 486, 487, 505, 530, 535, 538, 544, 550, 552, 559, 560, 565, 566, 568, 572, 573, 579, 583, 590, 591, 609, 613, 616, 618, 626, 631, 632, 634, 641, 648, 651, 652, 655, 669, 674, 676, 677, 680, 685, 686], "took": [681, 682, 683, 684, 685], "tool": [466, 468, 469, 473, 478, 479, 481, 482, 483, 486, 487, 489, 491, 493, 494, 497, 498, 499, 500, 502, 504, 505, 506, 513, 517, 520, 521, 522, 523, 524, 525, 527, 530, 531, 532, 533, 535, 537, 538, 542, 547, 549, 551, 553, 565, 566, 569, 570, 571, 572, 574, 579, 580, 582, 589, 592, 593, 594, 602, 604, 605, 606, 607, 608, 610, 611, 614, 617, 619, 620, 622, 625, 629, 631, 632, 637, 639, 641, 644, 646, 648, 669, 670, 671, 672, 679, 681, 682, 683], "tool_nam": 550, "toolchain": [479, 480, 481, 483, 486, 489, 552, 570, 595, 596, 597, 602, 605, 611, 612, 623, 639], "tooling": [479, 569, 609, 611, 612], "toolk": [531, 592, 609, 617], "toolnam": 610, "toolset": [481, 552, 649], "toosl": 650, "top": [461, 466, 469, 470, 473, 481, 482, 483, 486, 487, 491, 493, 513, 518, 538, 539, 540, 546, 548, 550, 555, 559, 562, 565, 578, 579, 580, 581, 583, 590, 591, 607, 608, 609, 610, 611, 620, 625, 634, 635, 636, 639, 640, 643, 648, 650, 652, 654, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686], "topic": [538, 549, 586, 588, 627, 677, 678, 679, 686], "toplevel": [553, 680, 681, 682, 683, 684, 685], "toplevelexpr": [669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "topmost": 527, "topn": 518, "topological": 487, "topologically": 604, "topology": 471, "torec": 609, "torerr": 609, "toret": 625, "toreturn": 651, "toshio": 483, "tot": 630, "total": [466, 470, 473, 497, 512, 513, 518, 523, 579, 581, 591, 597, 601, 604, 607, 609, 620, 624, 625, 626, 635, 636, 640, 648, 650], "totally": [622, 670], "totalview": 461, "touch": [533, 566, 573, 575, 609, 621, 623, 625], "touched": 607, "touching": [471, 579, 611, 625, 626, 648], "tough": [669, 680], "tour": [669, 680], "tout": 653, "toward": [466, 474, 478, 479, 481, 538, 546, 549, 579, 609, 615, 623, 626], "towardzero": 579, "town": 549, "toy": [531, 593, 650, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "tp": 593, "tpc": [654, 655, 656, 657], "tpcindirectionutil": [656, 657], "tpciu": [656, 657], "tpi": [517, 595, 596, 602, 605], "tpistreamhead": 604, "tpistreamvers": 604, "tpoff": 630, "tr1": 609, "trac": [499, 519, 530, 566, 567, 579, 580, 581, 625, 630, 648], "trace_event": 650, "traceback": 618, "traced": [535, 649, 651], "tracevalu": 607, "tracing": [626, 649, 650, 651], "track": [461, 466, 469, 476, 477, 483, 485, 486, 491, 533, 535, 538, 539, 543, 545, 546, 550, 554, 560, 579, 581, 585, 590, 591, 593, 607, 608, 609, 611, 623, 625, 626, 628, 629, 630, 637, 648, 670, 671, 672, 673, 674, 676, 681, 684, 685], "tracked": [483, 488, 545, 546, 547, 579, 585, 609, 630], "tracker": 484, "tracking": [466, 476, 513, 538, 560, 574, 580, 593, 594, 609, 611, 626, 632], "tracksregliveness": 585, "trad": [477, 479, 550, 590, 609, 626, 655], "tradbigmip": 515, "tradeoff": [470, 486, 547, 579, 671, 682], "tradit": 495, "traditional": [461, 468, 483, 514, 566, 607, 609, 625, 654, 668, 679], "traditionally": [469, 483, 593], "tradlittlemip": 515, "traffic": [588, 609, 611, 674, 685], "tragic": 611, "trailing": [464, 482, 486, 487, 491, 515, 530, 535, 548, 555, 579, 585, 609, 652], "train": [142, 639], "training": [468, 518, 579, 639], "trait": [609, 634, 652], "tramp": 579, "tramp1": 579, "tranf": 534, "transcendental": 531, "transcribed": [670, 681], "transcript": [671, 682], "transf": [531, 534, 578, 579, 585, 671, 672, 673, 674, 675, 676], "transfer": [540, 579, 626], "transferred": [472, 540, 579, 624, 639], "transform": [464, 470, 477, 481, 483, 487, 528, 537, 541, 543, 544, 545, 547, 550, 557, 558, 559, 569, 577, 579, 583, 591, 594, 609, 610, 616, 625, 628, 630, 634, 637, 641, 644, 646, 647, 648, 653, 655, 656, 657, 670, 671, 672, 673, 674, 676, 681, 682, 685], "transformed": [483, 513, 577, 579, 583, 607, 609, 616, 626, 630, 642, 643, 655], "transformedtsm": 655, "transformfunct": 655, "transforming": [486, 550, 558, 579, 583, 607, 616, 630, 641], "transformlai": 655, "transient": [538, 566], "transiently": 461, "transit": [466, 483, 513, 538, 560, 577, 590, 591, 593, 611, 632, 671], "transitional": 615, "transitioning": [614, 617, 625, 648, 654], "transitively": [579, 648, 682], "transitivity": 591, "translat": [470, 483, 486, 496, 529, 534, 535, 542, 543, 546, 548, 550, 554, 560, 564, 579, 593, 597, 607, 609, 612, 613, 615, 616, 625, 626, 634, 635, 643, 652, 676, 677, 686], "translated": [470, 483, 530, 556, 579, 583, 604, 634, 652], "translating": [469, 483, 545, 548, 615, 625, 634, 646, 652], "translator": 556, "transm": 579, "transmitted": 579, "transparency": 582, "transparent": 541, "transparently": [486, 530, 548, 575, 582, 609], "transposed": 579, "trap": [48, 122, 146, 147, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 207, 238, 245, 246, 256, 257, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 391, 480, 534, 545, 548, 575], "trap_present": 466, "trapping": [492, 579], "travers": [483, 491, 529, 542, 547, 557, 562, 607, 609, 648], "traversal": [483, 573, 591, 607], "traversed": [609, 616], "traversing": [607, 648], "trc": 483, "tre": [466, 468, 479, 481, 483, 485, 486, 491, 517, 529, 538, 540, 543, 545, 546, 547, 548, 549, 550, 552, 553, 555, 571, 573, 579, 580, 583, 591, 592, 593, 609, 611, 616, 618, 622, 625, 632, 636, 640, 641, 647, 648, 650, 668, 670, 671, 672, 673, 674, 675, 676, 679, 681, 682, 683, 684, 685], "treat": [461, 466, 470, 483, 487, 489, 495, 504, 540, 546, 555, 576, 579, 581, 582, 585, 591, 597, 623, 628, 634, 641, 650, 677, 686], "treated": [49, 143, 240, 393, 461, 466, 470, 472, 473, 481, 487, 495, 501, 513, 515, 526, 530, 542, 548, 577, 579, 581, 593, 623, 625, 636, 646], "treating": [461, 472, 546, 579, 591, 630, 670, 681], "treatment": [466, 547, 609, 646], "trevi\u00f1o": 478, "tri": [477, 478, 481, 483, 516, 517, 546, 579, 581, 586, 591, 607, 614, 620, 627, 642, 646, 648], "triag": [476, 575], "triaged": [476, 549], "triaging": 483, "trick": [533, 538, 551, 571, 573, 579, 609, 611, 626, 634, 674, 679, 685], "trickrevnum": 611, "tricky": [470, 531, 547, 639, 648], "tried": [483, 671, 679], "trig": 646, "trigg": [466, 469, 534, 547, 566, 579, 580, 581, 585, 593, 609, 628, 632, 641, 652, 654, 656], "trigger": [465, 477, 547, 574, 581, 593, 609, 640, 671], "triggered": [481, 486, 581, 584, 628, 652], "triggering": [506, 579, 593], "trim": 611, "trinity": 466, "trip": [472, 579, 583, 607, 616, 626, 642], "tripcount": 579, "tripl": [473, 492, 493, 513, 516, 545, 546, 571, 584, 585, 593, 614, 625, 641, 646, 675, 676], "triplet": [530, 579], "tripped": 486, "trivial": [469, 470, 472, 482, 485, 486, 530, 541, 548, 557, 559, 566, 578, 579, 607, 611, 612, 623, 625, 631, 632, 646, 648, 651, 669, 674, 677, 678, 679, 680, 685, 686], "trivially": [466, 483, 543, 575, 579, 583, 607, 608, 609, 611, 625, 626, 674, 677, 685, 686], "troubl": [530, 546, 550, 552], "trouv": 653, "tru": [466, 469, 470, 475, 482, 483, 486, 487, 488, 493, 499, 505, 513, 518, 527, 530, 534, 535, 538, 547, 548, 554, 555, 559, 565, 566, 568, 571, 573, 575, 577, 579, 581, 583, 585, 591, 592, 597, 605, 607, 609, 611, 622, 623, 625, 634, 635, 637, 641, 642, 643, 646, 647, 648, 649, 650, 652, 656, 669, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685], "true_branch_weight": 475, "truebr": 625, "truedest": 579, "truly": [589, 609, 626, 656], "trunc": [575, 645], "truncat": [461, 465, 495, 575, 579], "truncated": [25, 60, 125, 210, 250, 368, 403, 461, 465, 555, 579], "truncating": [461, 555, 579, 646], "truncinst": 607, "trunk": [480, 483, 539, 549, 550, 553, 572, 581, 608, 611, 625, 639], "trust": [486, 538, 625, 656], "trusted": [538, 623], "truth": [579, 590, 672, 683], "truthful": 538, "try": [469, 470, 471, 472, 476, 477, 478, 481, 483, 484, 486, 504, 530, 531, 533, 538, 539, 545, 547, 549, 550, 553, 566, 574, 579, 581, 586, 588, 591, 593, 604, 607, 609, 611, 612, 621, 623, 626, 648, 649, 652, 655, 656, 657, 671, 673, 674, 675, 677, 680, 681, 682, 683, 684, 685, 686], "trying": [469, 483, 486, 488, 538, 545, 547, 550, 552, 585, 590, 609, 622, 631, 655, 677, 686], "tsan": 618, "tsc": [650, 651], "tsc701": 646, "tsc_delt": 651, "tsctx": 593, "tsflag": [636, 646], "tslp": 616, "tsm": [593, 597, 654, 655, 656, 657, 671, 672, 673, 674], "tsm1": 593, "tsm2": 593, "tstri": 585, "tsvg": 650, "tt": 577, "tti": [614, 615], "ttmp": [9, 10, 11, 12, 21, 22, 23, 33, 34, 35, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 115, 116, 123, 151, 152, 153, 154, 155, 208, 252, 253, 254, 255, 258, 259, 306, 307, 311, 312, 318, 319, 320, 321, 322, 341, 344, 345, 346, 347, 348, 350, 351, 364, 365, 366, 376, 377, 378, 398, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 466], "ttmp0": 465, "ttmp4": 465, "ttmp5": 465, "ttmp6": 465, "ttmp7": 465, "tun": [530, 609, 618], "tunabl": [566, 612, 622], "tuned": [483, 545, 625, 626, 645, 674, 685], "tuning": 618, "tupl": [542, 559, 579, 611], "turbo": 471, "turing": [669, 671, 680, 682], "turk": 466, "turn": [466, 472, 477, 478, 481, 482, 483, 484, 487, 495, 530, 538, 550, 568, 569, 579, 582, 583, 586, 590, 593, 606, 607, 609, 614, 621, 625, 630, 634, 636, 637, 648, 654, 655, 656, 669, 670, 677, 680, 681, 686], "turned": [461, 486, 534, 538, 541, 579, 609, 646], "turnercamelback": 614, "turnerlldb": 614, "turning": [470, 483, 579, 593, 607, 616], "tutorial": [530, 531, 549, 564, 573, 581, 591, 593, 609, 653, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "tutoriel": 653, "tval": 625, "tweak": [530, 531, 550, 553, 573, 606, 649, 654], "tweaked": 618, "tweaking": 671, "twic": [468, 534, 552, 553, 555, 579, 583, 591, 609, 619, 639, 648, 671, 682], "twiddling": [579, 671, 672, 673, 674, 682, 683, 684, 685], "twin": 635, "twist": 654, "twitt": 588, "two": [461, 464, 465, 466, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 486, 487, 491, 493, 501, 502, 504, 505, 512, 513, 517, 518, 527, 530, 531, 534, 535, 537, 538, 539, 540, 542, 544, 545, 546, 547, 550, 554, 555, 559, 560, 562, 564, 566, 567, 569, 573, 574, 577, 578, 579, 580, 581, 583, 584, 585, 590, 591, 592, 593, 594, 597, 601, 604, 607, 608, 609, 610, 611, 614, 620, 622, 623, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 643, 645, 646, 648, 650, 652, 654, 655, 656, 669, 671, 672, 673, 674, 677, 680, 681, 682, 683, 684, 685, 686], "twoaddressinstructionpass": 483, "twoargfp": 636, "twooperandaliasconstraint": 636, "twos": 461, "txt": [468, 481, 486, 500, 525, 527, 530, 533, 538, 550, 566, 572, 586, 608, 611, 618, 625, 627, 635, 639, 641, 646, 647, 648, 650, 654, 655, 656, 657], "ty": [486, 541, 579, 609], "ty2": 579, "ty64": 575, "tying": 483, "typ": [54, 145, 244, 397, 462, 466, 469, 470, 472, 473, 475, 477, 478, 480, 481, 483, 488, 489, 492, 495, 497, 500, 501, 504, 506, 511, 513, 514, 515, 516, 522, 526, 529, 530, 531, 534, 537, 538, 540, 542, 546, 547, 550, 552, 556, 559, 560, 562, 564, 571, 572, 573, 574, 575, 576, 578, 580, 582, 584, 587, 590, 591, 592, 595, 599, 602, 605, 608, 610, 614, 616, 618, 620, 625, 626, 628, 630, 632, 635, 637, 639, 640, 641, 644, 648, 649, 650, 651, 654, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 688], "type0": 559, "type1": 559, "type_info": 540, "type_nam": 466, "type_of": [681, 682, 683, 684, 685], "typecod": 541, "typed": [482, 530, 543, 547, 548, 579, 607, 609, 628, 634, 636, 649, 668, 669, 670, 671, 676, 677, 680, 681, 682, 686], "typedef": [486, 517, 529, 542, 609, 652, 655], "typedescriptor2": 540, "typeendbegin": 604, "typeflag": [529, 625], "typeid": [541, 579, 591, 643], "typeid1": 643, "typeid2": 643, "typeid3": 643, "typeidref": 579, "typeindex": [596, 604], "typeindexbegin": 604, "typeindexend": 604, "typeless": 463, "typemap": 541, "typenam": [466, 579, 609], "typeof_": 634, "typeof_kind": 634, "typeof_xxx": 634, "typeprinting": 541, "typerecordbyt": 604, "typesaf": 579, "typeservermapsiz": 597, "typeset": 559, "typetestr": 579, "typical": [461, 470, 483, 486, 523, 540, 567, 579, 580, 582, 585, 594, 607, 609, 612, 620, 622, 625, 639, 645, 646, 651], "typically": [461, 469, 470, 481, 483, 486, 487, 495, 497, 499, 505, 510, 514, 531, 537, 539, 540, 544, 546, 547, 548, 552, 554, 555, 556, 560, 570, 572, 573, 579, 581, 584, 585, 587, 593, 602, 607, 608, 609, 610, 620, 625, 626, 628, 635, 636, 639, 641, 646, 648, 651, 677, 686], "typing": [550, 568, 609, 630, 652], "typo": 486, "typos": 487, "t\u00e9l\u00e9charg": 653, "u": [461, 487, 489, 495, 499, 504, 509, 513, 514, 515, 516, 521, 522, 526, 538, 550, 579, 608, 609, 611, 646, 648], "u1": 611, "u16": [0, 3, 4, 465], "u16x2": [0, 1, 2, 3, 4, 7, 8], "u2": [611, 620], "u3": [611, 620], "u32": [0, 1, 2, 3, 4, 7, 8, 462, 465, 483, 592, 620], "u4x8": [1, 7, 8], "u64": [0, 2, 3, 4, 465, 592], "u8x4": [0, 1, 2, 3, 4, 7, 8], "u999999": 608, "ualph": 636, "ub": 579, "ubsan": [481, 581, 618, 622], "ubuntu": [538, 550, 568, 571], "ubyt": [461, 466], "uc": 466, "ud2": [480, 483], "ud2a": 483, "udiv": 554, "ueq": [579, 674, 685], "ueyam": 614, "uf": 616, "ufmt": 0, "uge": 579, "uglify": [671, 682], "ugly": [487, 543, 673, 684], "ugt": 579, "ui": [482, 608], "uid": [495, 509, 515, 526, 579], "uimm20": [56, 57, 246, 247, 399, 400], "uimm21": [56, 399], "uimm32": 147, "uimm8": 147, "uint": [492, 517], "uint128": 604, "uint128oct": 604, "uint16": [544, 601, 604, 628], "uint16_t": [466, 577, 596, 597, 604, 605, 625, 634, 646, 652], "uint16short": 604, "uint16x4_t": 472, "uint32": [544, 599, 604, 628], "uint32_max": [609, 625], "uint32_t": [466, 534, 579, 597, 600, 602, 604, 625, 652], "uint32long": 604, "uint32x2_t": 472, "uint64": [544, 604, 628], "uint64_max": 474, "uint64_t": [474, 576, 579, 591, 605, 609, 620, 652], "uint64quad": 604, "uint8": [544, 628], "uint8_t": [466, 581, 596, 600, 634, 652], "uint_64": 466, "uint_max": 583, "uintptr_t": 626, "uintr": 618, "uitofp": [670, 672, 674, 681, 683, 685], "uiuc": 538, "ule": 579, "uleb": 466, "uleb128": [461, 542], "ulim": 581, "ulittle32_t": [601, 602], "ulp": 579, "ult": [579, 625, 672, 674, 681, 682, 683, 684, 685], "ultimat": [486, 579, 671, 682], "ultimately": [491, 538, 590, 619, 625, 626], "ultrasparc": [550, 646], "ultrasparc3": 646, "um": [579, 611], "um1": 611, "um2": 611, "um3": 611, "um4": 611, "um5": 611, "um6": 611, "um7": 611, "um8": 611, "umbrel": [538, 611], "uml": 537, "umrel": 611, "unabbrev": 473, "unabbreviated": 473, "unabl": [484, 513, 536, 545, 559, 579, 580, 594, 609, 626, 680], "unabridged": [674, 685], "unaccept": 538, "unadorned": 579, "unaffected": 590, "unaligned": [470, 545, 596], "unallocated": 589, "unambiguous": 575, "unannotated": 611, "unary": [636, 674, 675, 676, 677, 678, 679, 685, 686], "unaryexprast": [673, 674, 675, 676], "unassign": 476, "unassigned": 465, "unassignedbug": 476, "unattended": 477, "unavail": [470, 513, 536, 575, 625, 646], "unawar": [531, 579], "unbiased": 474, "unbound": [513, 646], "unbounded": [483, 513, 579], "unbuild": 611, "uncached": 466, "uncaptured": 579, "uncategorized": [500, 514, 521, 522, 523, 525, 530], "uncertain": [533, 632], "uncertainty": [478, 485], "unchanged": [461, 579, 609, 611, 630, 642], "unchanging": [469, 579, 609, 625], "uncharacterized": 604, "unchecked": 609, "unclear": [461, 486, 487, 597, 602, 604, 674, 685], "unclutter": 631, "uncomfort": 484, "uncommon": [482, 540, 559, 579], "uncompiled": 593, "uncompress": [481, 550], "uncompressed": [535, 609], "unconditional": [461, 483, 499, 555, 579, 583, 607, 630, 646, 672, 683, 684, 685], "unconditionally": [469, 483, 486, 542, 567, 575, 579, 656, 676], "unconnected": 548, "uncontroversial": 547, "unconventional": [677, 686], "unconvincing": 581, "uncooper": 547, "uncov": 486, "uncovered": 581, "uncovering": 481, "undecided": 611, "undeclared": [579, 670, 681], "undef": [470, 487, 534, 540, 556, 575, 578, 579, 585, 590, 609, 625, 634], "undefin": 481, "undefined": [466, 470, 472, 476, 481, 486, 487, 514, 515, 517, 526, 534, 540, 542, 543, 545, 548, 555, 558, 574, 582, 583, 590, 607, 609, 618, 622, 625, 634, 636, 637, 642, 645, 646], "undefinedbehaviorsanitiz": 581, "undefinit": 579, "under": [466, 468, 471, 481, 483, 486, 488, 491, 507, 513, 521, 522, 530, 534, 535, 538, 540, 543, 545, 549, 550, 565, 567, 572, 578, 579, 581, 583, 589, 592, 593, 608, 611, 618, 623, 626, 630, 635, 637, 641, 643, 644, 646, 647, 648, 654, 655, 656, 657, 669, 677, 680, 686, 687], "underestimating": 579, "underflow": [461, 465, 466, 487], "undergo": [485, 579], "undergoing": [593, 607], "underlying": [472, 481, 483, 486, 513, 530, 538, 547, 554, 555, 579, 593, 601, 602, 609, 626, 630, 635, 643, 676], "undermin": 486, "undermining": 625, "underneath": [550, 610, 611, 641], "underscor": [486, 500, 585, 625], "understand": [469, 473, 476, 483, 484, 485, 486, 487, 491, 495, 513, 538, 540, 541, 547, 548, 570, 583, 586, 587, 591, 595, 596, 600, 605, 608, 609, 612, 621, 622, 626, 627, 630, 631, 637, 648, 650, 651, 652, 656, 670, 674, 676, 678, 679, 685, 686], "understandability": 486, "understanding": [469, 473, 476, 486, 579, 591, 605, 607, 625], "understood": [473, 483, 485, 486, 597, 600, 686], "undesir": [579, 623], "undetected": 581, "undisturbed": 486, "undocumented": [540, 597], "undoing": 472, "undu": 632, "unequal": [487, 579], "unexpect": 591, "unexpected": [461, 478, 480, 482, 486, 538, 552, 609, 622, 674, 685], "unexpectedly": [636, 641], "unfamiliar": 627, "unflatten": 650, "unfolding": 626, "unforeseen": 564, "unfortunately": [531, 570, 578, 579, 591, 609, 611, 625, 626, 648, 671, 672, 677, 682, 683, 686], "unfriendly": 581, "unfused": 531, "unglamorous": 538, "unguarded": 579, "unhandled": [540, 609], "unhappy": 531, "unhardened": 626, "unhid": 530, "uni": 592, "unic": 530, "unicod": 516, "unif": [461, 469], "unified": [461, 464, 473, 487, 545, 570, 579, 609, 611, 686], "unifom": 466, "uniform": [486, 513, 579, 594, 609], "uniformly": [486, 513], "uniformretval": 579, "unify": [611, 620], "unimaginatively": 630, "unimplemented": 648, "unimport": [619, 630], "unindexed": 646, "uninitialized": [461, 514, 547, 548, 579, 629, 635, 636], "uninstrumented": 597, "unintended": 607, "unintentional": 538, "uninterested": 679, "uninteresting": 538, "unintrus": 579, "union": [461, 469, 483, 486, 513, 559, 597, 625, 674, 685], "uniprocessor": 470, "uniqu": [466, 473, 483, 487, 491, 514, 515, 534, 535, 538, 540, 542, 567, 575, 577, 579, 582, 591, 593, 594, 597, 602, 609, 611, 625, 630, 632, 635, 636, 637, 645, 650, 670, 671, 681], "unique_ptr": [592, 593, 609, 635, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676], "uniqued": [483, 576, 579, 593, 609, 642, 670, 681], "uniqueid": 602, "uniquely": [487, 577, 604, 611, 625, 628], "uniqueness": [542, 602, 628], "uniqueretval": 579, "uniquing": [489, 579, 609], "unistd": 631, "unit": [48, 49, 142, 143, 238, 240, 391, 393, 472, 480, 481, 486, 488, 499, 504, 530, 533, 534, 535, 540, 542, 543, 548, 555, 560, 575, 579, 580, 581, 593, 594, 597, 605, 607, 609, 612, 620, 625, 626, 632, 634, 635, 643, 645, 646, 647, 648, 671], "unittest": [480, 481, 639, 641], "univers": 609, "universal": [490, 499, 516, 523, 527, 535, 579], "universally": 482, "universit": 588, "university": [537, 538, 588], "unix": [481, 486, 487, 495, 530, 543, 546, 550, 552, 579, 609, 631, 641], "unknown": [465, 466, 483, 505, 511, 513, 530, 536, 539, 555, 558, 565, 570, 579, 597, 600, 601, 605, 609, 626, 642, 652, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "unknownptr": 579, "unknownvalu": 579, "unless": [461, 466, 468, 477, 481, 482, 483, 485, 486, 487, 489, 491, 492, 499, 500, 504, 506, 510, 513, 515, 516, 530, 531, 534, 538, 540, 545, 547, 548, 572, 579, 581, 586, 590, 593, 605, 607, 609, 611, 614, 621, 623, 627, 628, 630, 632, 635, 640, 641, 642, 646, 648, 672, 674, 683, 685], "unlik": [461, 470, 473, 482, 483, 486, 525, 531, 540, 547, 550, 555, 565, 566, 573, 579, 590, 593, 609, 614, 626, 628, 630, 636, 647, 648, 671, 674, 682, 685], "unlikely": [470, 485, 568, 607, 609, 625, 626, 630, 656], "unlimited": 513, "unlink": [550, 609], "unload": 648, "unloaded": 579, "unlock": 593, "unlocked": 593, "unmaintain": 637, "unmaintained": 538, "unmanaged": [579, 630], "unmangled": 501, "unmask": 579, "unmasked": 579, "unmatched": 518, "unmitigated": 626, "unmodeled": 513, "unmodified": [464, 579, 630, 655], "unnamed": [482, 530, 579, 585, 607, 636], "unnamed_addr": [473, 542, 579], "unnecessarily": [469, 485, 648], "unnecessary": [461, 480, 483, 545, 556, 575, 579, 585, 607, 609, 626, 629, 630, 646, 656], "unneeded": [515, 526, 674, 685], "unnormal": 579, "unnormalized": 464, "uno": 579, "unofficial": [548, 613], "unop": [465, 673, 674, 675, 676, 684, 685], "unoptimized": [492, 550, 625], "unord": 579, "unordered": [466, 481, 486, 487, 586, 627, 630, 646], "unordered_map": 486, "unordered_set": 609, "unorm": [0, 2, 3, 4], "unpack": [550, 571], "unpacking": [533, 551], "unparsed": [491, 669, 680], "unpatch": 649, "unpatched": 572, "unpatching": 649, "unpeeling": 466, "unpleas": 626, "unpoisoning": 579, "unpredictability": 579, "unpredicted": 626, "unprofit": [607, 626, 642], "unprotected": [480, 626], "unprototyped": 579, "unqualified": [483, 485, 625], "unreach": [478, 486, 506, 534, 535, 540, 544, 545, 547, 572, 583, 591, 607, 671, 672, 673, 674, 676, 682, 683, 684, 685], "unread": [470, 486, 553, 611, 626], "unrecogniz": 514, "unrecognized": [530, 636], "unrecurs": [674, 675, 676, 685], "unreferenced": [482, 579], "unregist": 648, "unregister": 648, "unrelated": [486, 515, 522, 533, 538, 572, 609, 625, 626, 646], "unreli": [469, 581], "unrelocated": 630, "unreserved": 466, "unresolved": [491, 677, 686], "unrespons": 611, "unreviewed": 538, "unroll": [616, 618, 645], "unroll_and_jam": 642, "unrolled": [579, 616, 642], "unrolling": [531, 579, 607], "unsaf": [470, 492, 493, 579, 625, 628, 629, 642, 677, 686], "unsat": 579, "unseen": 473, "unset": [481, 482, 599, 635, 636, 648, 676], "unshadowed": [672, 673, 674, 675, 676, 683, 684, 685], "unsigned": [55, 56, 57, 146, 147, 245, 246, 247, 341, 398, 399, 400, 461, 463, 464, 465, 466, 469, 473, 475, 483, 486, 487, 492, 518, 530, 535, 547, 548, 554, 555, 579, 582, 583, 585, 591, 592, 604, 609, 618, 625, 626, 634, 645, 646, 650, 651, 652, 670, 671, 672, 673, 674, 675, 676, 681], "unsignedcharact": 604, "unsimm": 483, "unsound": 630, "unspecified": [461, 478, 483, 501, 515, 555, 579, 592, 630, 634, 636, 640, 651], "unstabl": [480, 505, 568, 579, 619], "unstructured": 651, "unsuccessful": 593, "unsuit": [480, 538, 639], "unsuppored": 466, "unsupported": [466, 470, 483, 491, 552, 559, 560, 579, 581, 619, 641, 646], "unsupportedfor": 559, "unsur": [485, 621], "unswitch": 583, "unswitched": 607, "unswitching": 607, "unswizzled": [461, 466], "untested": 619, "until": [461, 466, 472, 473, 477, 483, 485, 486, 488, 491, 513, 514, 530, 533, 534, 538, 540, 545, 550, 553, 554, 560, 576, 579, 581, 584, 590, 593, 595, 607, 608, 609, 611, 619, 621, 623, 625, 626, 636, 639, 641, 646, 648, 649, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "untrusted": 623, "untrusted_data_from_call": 626, "untrusted_offset_from_call": 626, "untrusted_size_from_call": 626, "untyped": 585, "unus": 461, "unused": [54, 145, 221, 233, 235, 244, 397, 464, 465, 466, 478, 483, 486, 487, 506, 534, 580, 592, 594, 596, 597, 601, 604, 609, 622, 625, 630, 642, 643, 651], "unused1": 597, "unused2": 597, "unused_pad": [464, 466], "unused_preserv": [464, 466], "unused_sext": 464, "unusual": [483, 486, 538, 546, 547, 560, 609, 624, 636, 677, 686], "unvectoriz": 645, "unveil": 679, "unversioned": 642, "unvisited": 478, "unwelcom": 484, "unwieldy": 649, "unwind": [461, 466, 475, 481, 483, 516, 521, 522, 534, 540, 542, 545, 566, 578, 579, 580, 618, 646, 656], "unwindcursor": 540, "unwinder": 540, "unwinding": [461, 466, 483, 534, 540, 579, 580, 607], "unwindregistersrestor": 540, "unwindregisterssav": 540, "unwis": 579, "unwound": [461, 579, 626], "unwrap": 654, "unwrapping": [593, 609], "unzip": [550, 619], "uop": [505, 513], "up": [461, 468, 469, 472, 473, 474, 476, 478, 479, 481, 483, 484, 485, 486, 488, 491, 493, 504, 505, 513, 516, 530, 531, 532, 533, 534, 535, 538, 540, 542, 544, 545, 546, 547, 550, 551, 552, 557, 561, 565, 566, 567, 568, 570, 571, 572, 574, 579, 580, 581, 583, 585, 587, 590, 591, 592, 594, 595, 597, 602, 604, 605, 607, 609, 611, 617, 618, 619, 620, 621, 622, 623, 625, 626, 630, 634, 636, 637, 639, 640, 641, 642, 645, 646, 650, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "upa": 579, "upcast": 573, "upcoming": [536, 538, 588, 618], "updat": [461, 466, 469, 480, 483, 485, 489, 495, 515, 530, 533, 534, 538, 540, 541, 547, 550, 552, 573, 579, 582, 583, 584, 585, 589, 590, 591, 593, 601, 604, 607, 608, 609, 614, 621, 623, 625, 626, 628, 630, 648, 649, 655, 656, 669, 670, 671, 672, 673, 674, 675, 676, 677, 682, 683, 684, 685, 686], "updated": [461, 466, 467, 469, 472, 485, 487, 533, 534, 538, 550, 572, 573, 575, 579, 582, 583, 590, 608, 611, 625, 626, 630, 642, 648, 654, 655, 656, 674, 685], "updating": [467, 515, 526, 572, 579, 589, 609, 648], "upen": 471, "upgrad": [538, 549, 550, 616], "upgraded": 625, "upgrading": [550, 611, 645], "upheld": 630, "uphold": [579, 626], "upl": 579, "upload": [550, 572, 608, 611], "uploaded": 572, "uploading": [572, 608], "upon": [461, 495, 528, 538, 547, 579, 584, 593, 609, 610, 614, 623, 625, 646], "upper": [461, 464, 486, 488, 514, 579, 609, 614, 634, 646], "upper16": 542, "uppercas": [466, 636], "uppercasemod": 635, "upset": 529, "upsid": 538, "upstream": [461, 533, 538, 539, 545, 550, 572, 611, 630, 632], "upstream_branch": 611, "upstreamed": [461, 538], "upstreaming": 611, "upward": [491, 579, 612, 625], "uq": 579, "urem": [483, 541], "urgent": 485, "uri_encoded_os_file_path": 466, "url": [586, 608, 611, 627], "us": [483, 484, 486, 487, 508, 530, 533, 535, 537, 538, 554, 556, 560, 566, 569, 574, 579, 583, 590, 591, 592, 593, 605, 608, 609, 611, 612, 613, 618, 620, 622, 625, 643, 648, 650, 654, 655, 656, 669, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 682, 684, 685], "usabl": [483, 492, 530, 609, 615, 625, 646, 650], "usag": [466, 475, 483, 486, 487, 488, 500, 504, 505, 509, 511, 513, 515, 516, 517, 527, 530, 534, 535, 550, 554, 556, 568, 579, 585, 591, 592, 593, 595, 596, 597, 604, 607, 609, 617, 620, 629, 630, 634, 637, 639, 641, 648, 679], "usb": 568, "use": [56, 57, 87, 173, 277, 399, 400, 432, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 504, 505, 509, 513, 514, 515, 516, 517, 518, 521, 522, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 546, 547, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 565, 567, 568, 569, 571, 572, 573, 574, 575, 578, 580, 582, 583, 584, 585, 586, 587, 589, 591, 592, 594, 597, 601, 602, 608, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 622, 624, 625, 628, 629, 630, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "use_": 609, "use_back": 609, "use_begin": [486, 609], "use_binding": [682, 683, 684, 685], "use_camlp4": [680, 681, 682, 683, 684, 685], "use_counter": 581, "use_empty": 609, "use_end": 609, "use_iterator": 609, "use_llvm": [681, 682, 683, 684, 685], "use_llvm_analys": [681, 682, 683, 684, 685], "use_llvm_executionengin": [682, 683, 684, 685], "use_llvm_scalar_opt": [682, 683, 684, 685], "use_llvm_target": [682, 683, 684, 685], "use_siz": 609, "use_value_profil": 581, "used": [19, 40, 41, 42, 51, 52, 53, 58, 64, 65, 66, 87, 99, 100, 114, 120, 136, 137, 138, 144, 148, 153, 173, 201, 205, 230, 231, 232, 241, 242, 243, 248, 254, 277, 303, 305, 310, 315, 316, 317, 336, 338, 339, 340, 342, 345, 353, 362, 383, 384, 385, 394, 395, 396, 401, 407, 408, 409, 432, 445, 446, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 473, 474, 475, 477, 479, 480, 482, 484, 486, 487, 488, 489, 491, 492, 495, 497, 498, 499, 500, 501, 504, 505, 506, 510, 513, 514, 515, 516, 517, 518, 520, 521, 522, 524, 526, 527, 529, 530, 531, 532, 534, 535, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 550, 552, 554, 557, 559, 560, 564, 565, 566, 569, 570, 573, 575, 577, 578, 580, 581, 582, 583, 584, 585, 590, 591, 592, 593, 594, 597, 599, 601, 602, 604, 605, 609, 610, 611, 613, 614, 616, 617, 618, 620, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "usedlib": 610, "useful": [461, 466, 468, 470, 473, 475, 477, 478, 479, 481, 483, 486, 487, 488, 491, 492, 495, 497, 498, 504, 505, 513, 515, 518, 527, 528, 529, 530, 531, 532, 534, 535, 537, 539, 540, 543, 545, 547, 549, 550, 552, 553, 555, 557, 566, 567, 569, 570, 575, 579, 586, 590, 592, 593, 594, 597, 604, 607, 608, 610, 614, 620, 622, 625, 626, 627, 628, 630, 632, 634, 635, 636, 637, 641, 644, 646, 648, 668, 669, 670, 671, 672, 673, 674, 676, 679, 680, 681, 682, 683, 684, 685, 687], "usefulness": 461, "useless": [472, 569, 625, 672, 677, 683, 686], "uselistord": 579, "uselistorder_bb": 579, "usenamedoperandt": [636, 646], "user": [461, 468, 469, 470, 474, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 491, 497, 505, 513, 518, 529, 530, 532, 533, 534, 535, 538, 540, 542, 547, 549, 550, 556, 559, 566, 567, 569, 570, 572, 573, 579, 580, 582, 583, 587, 588, 590, 591, 593, 605, 606, 608, 611, 612, 616, 617, 618, 620, 622, 623, 625, 626, 627, 629, 630, 632, 634, 635, 637, 641, 642, 645, 646, 648, 651, 653, 654, 668, 669, 670, 671, 672, 675, 676, 677, 678, 679, 680, 681, 682, 683, 686, 687], "user_sgpr": 466, "user_sgpr_count": 466, "usercb": 581, "userdefinederror": 609, "usernam": [538, 611, 623], "userspac": 540, "usescustominsert": [636, 637], "usesmetadat": 547, "using": [19, 54, 145, 244, 397, 461, 462, 464, 465, 466, 467, 468, 470, 471, 473, 478, 479, 481, 482, 484, 485, 487, 488, 489, 491, 493, 495, 497, 499, 503, 504, 505, 515, 517, 518, 525, 530, 533, 534, 535, 536, 537, 538, 539, 541, 544, 545, 548, 549, 551, 555, 556, 557, 558, 559, 560, 562, 566, 567, 568, 572, 573, 574, 577, 578, 579, 580, 582, 585, 588, 590, 591, 592, 593, 602, 604, 607, 608, 610, 611, 612, 614, 616, 617, 619, 620, 621, 622, 625, 626, 628, 630, 631, 634, 635, 637, 639, 640, 641, 642, 644, 645, 646, 647, 650, 652, 654, 656, 670, 671, 672, 673, 674, 675, 676, 679, 681, 682, 683, 684, 685, 687], "usr": [481, 509, 530, 531, 539, 550, 565, 566, 568, 570, 571, 581, 592], "usual": [470, 477, 481, 486, 487, 530, 550, 553, 565, 579, 581, 582, 591, 593, 609, 611, 623, 624, 629, 635, 636, 648, 654, 676], "usually": [465, 469, 470, 473, 477, 481, 483, 486, 487, 497, 513, 514, 528, 530, 531, 534, 538, 541, 542, 547, 548, 554, 555, 559, 570, 573, 579, 580, 581, 583, 585, 586, 591, 593, 597, 602, 604, 608, 609, 622, 623, 625, 627, 632, 635, 636, 639, 640, 641, 646, 648, 677, 686], "ut": 579, "utf": [461, 466, 529, 542, 634], "util": [468, 486, 529, 539, 569, 572, 609, 619, 634, 637, 639, 646, 674], "utilis": [0, 1, 2, 3, 4, 5, 6, 7, 8, 61, 150, 251, 343, 404, 653], "utilit": [529, 550, 564, 573, 593, 609, 623, 654, 656], "utility": [469, 481, 495, 497, 514, 516, 518, 519, 529, 530, 538, 547, 550, 552, 579, 583, 593, 609, 644, 654, 656, 669, 674, 675], "utiliz": [468, 493, 513, 645, 646], "utilized": [481, 513, 547], "utilizing": [461, 481, 583], "uuid": 504, "uuidcreat": 602, "uv": 579, "uval": 579, "uvari": 481, "uword": 466, "uwtabl": [473, 579, 625, 649], "uy": 579, "v": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 79, 80, 81, 82, 83, 84, 85, 86, 87, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 306, 307, 308, 311, 312, 313, 318, 319, 320, 321, 322, 324, 325, 326, 335, 336, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 464, 466, 468, 469, 470, 472, 477, 483, 486, 487, 489, 491, 495, 504, 507, 509, 510, 514, 515, 518, 521, 522, 526, 527, 529, 539, 552, 554, 557, 565, 573, 579, 581, 583, 591, 609, 611, 614, 615, 618, 620, 622, 626, 627, 630, 631, 634, 636, 639, 641, 646, 669, 670, 671, 672, 673, 674, 675, 676, 684, 685], "v0": [20, 121, 206, 363, 461, 464, 465, 466, 472, 579], "v1": [20, 121, 206, 363, 461, 465, 466, 469, 486, 579, 617, 626, 628, 636, 641], "v10": 531, "v110": 597, "v128": [579, 592], "v16": 592, "v16f32": 579, "v16i1": 579, "v16i32": 579, "v16p0f32": 579, "v16p1f32": 579, "v1f64": 554, "v1siz": 469, "v2": [465, 469, 486, 532, 543, 553, 579, 597, 609, 613, 636, 641, 654, 655, 656, 657], "v200": 466, "v252": 465, "v253": 465, "v254": 465, "v255": [464, 465], "v256i64": 579, "v2f64": 579, "v2i32": 579, "v2i64": 579, "v2p1f64": 579, "v2s32": 559, "v2s64": 559, "v2siz": 469, "v3": [87, 173, 277, 432, 641], "v31": 579, "v32": [465, 592], "v36": 464, "v3i32": 554, "v4": [464, 465], "v40": 604, "v41": 604, "v4f128": 579, "v4f32": [554, 579], "v4f64": 579, "v4i1": 579, "v4i100": 579, "v4i32": 579, "v4p0f64": 579, "v4p0f_i32f": 579, "v4p0p0f64": 579, "v4s32": 559, "v4t": 570, "v5": [464, 466, 625], "v50": [597, 604], "v6": [466, 570], "v60": 597, "v64": [579, 592], "v7": 570, "v70": [597, 604], "v8": [470, 532, 646], "v80": 604, "v8deprecatedinst": 646, "v8f64": 579, "v8i1": 579, "v8i16": 646, "v8i32": 579, "v8p0f32": 579, "v8p0f64": 579, "v8p0f_i32f": 579, "v8p0i32": 579, "v8p0p0f32": 579, "v9": [532, 550, 646], "v_accvgpr_read_b32": 8, "v_accvgpr_write_b32": 8, "v_add3_u32": [0, 4], "v_add_co_ci_u32": 0, "v_add_co_ci_u32_dpp": 0, "v_add_co_ci_u32_e64": 0, "v_add_co_ci_u32_sdw": 0, "v_add_co_u32": [0, 4], "v_add_co_u32_dpp": 4, "v_add_co_u32_e32": 465, "v_add_co_u32_e64": 4, "v_add_co_u32_sdw": 4, "v_add_f16": [0, 3, 4, 465], "v_add_f16_dpp": [0, 3, 4], "v_add_f16_e64": [0, 3, 4], "v_add_f16_sdw": [0, 3, 4], "v_add_f32": [0, 2, 3, 4, 465, 466], "v_add_f32_dpp": [0, 3, 4], "v_add_f32_e32": 466, "v_add_f32_e64": [0, 2, 3, 4], "v_add_f32_sdw": [0, 3, 4], "v_add_f64": [0, 2, 3, 4], "v_add_i16": 4, "v_add_i32": [2, 4], "v_add_i32_e64": 2, "v_add_lshl_u32": [0, 4], "v_add_nc_i16": 0, "v_add_nc_i32": 0, "v_add_nc_u16": 0, "v_add_nc_u32": 0, "v_add_nc_u32_dpp": 0, "v_add_nc_u32_e64": 0, "v_add_nc_u32_sdw": 0, "v_add_u16": [3, 4, 465], "v_add_u16_dpp": [3, 4], "v_add_u16_e64": [3, 4], "v_add_u16_sdw": [3, 4], "v_add_u32": [3, 4, 465], "v_add_u32_dpp": [3, 4], "v_add_u32_e64": [3, 4], "v_add_u32_sdw": [3, 4], "v_addc_co_u32": 4, "v_addc_co_u32_dpp": 4, "v_addc_co_u32_e64": 4, "v_addc_co_u32_sdw": 4, "v_addc_u32": [2, 3, 466], "v_addc_u32_dpp": 3, "v_addc_u32_e64": [2, 3], "v_addc_u32_sdw": 3, "v_alignbit_b32": [0, 2, 3, 4], "v_alignbyte_b32": [0, 2, 3, 4], "v_and_b32": [0, 2, 3, 4], "v_and_b32_dpp": [0, 3, 4], "v_and_b32_e64": [0, 2, 3, 4], "v_and_b32_sdw": [0, 3, 4], "v_and_or_b32": [0, 4], "v_ashr_i32": 2, "v_ashr_i32_e64": 2, "v_ashr_i64": 2, "v_ashrrev_i16": [0, 3, 4], "v_ashrrev_i16_dpp": [3, 4], "v_ashrrev_i16_e64": [3, 4], "v_ashrrev_i16_sdw": [3, 4], "v_ashrrev_i32": [0, 2, 3, 4], "v_ashrrev_i32_dpp": [0, 3, 4], "v_ashrrev_i32_e64": [0, 2, 3, 4], "v_ashrrev_i32_sdw": [0, 3, 4], "v_ashrrev_i64": [0, 3, 4], "v_bcnt_u32_b32": [0, 2, 3, 4], "v_bcnt_u32_b32_e64": 2, "v_bfe_i32": [0, 2, 3, 4], "v_bfe_u32": [0, 2, 3, 4], "v_bfi_b32": [0, 2, 3, 4], "v_bfm_b32": [0, 2, 3, 4], "v_bfm_b32_e64": 2, "v_bfrev_b32": [0, 2, 3, 4], "v_bfrev_b32_dpp": [0, 3, 4], "v_bfrev_b32_e32": 466, "v_bfrev_b32_e64": [0, 2, 3, 4], "v_bfrev_b32_sdw": [0, 3, 4], "v_ceil_f16": [0, 3, 4], "v_ceil_f16_dpp": [0, 3, 4], "v_ceil_f16_e64": [0, 3, 4], "v_ceil_f16_sdw": [0, 3, 4], "v_ceil_f32": [0, 2, 3, 4], "v_ceil_f32_dpp": [0, 3, 4], "v_ceil_f32_e64": [0, 2, 3, 4], "v_ceil_f32_sdw": [0, 3, 4], "v_ceil_f64": [0, 2, 3, 4, 465], "v_ceil_f64_e32": 465, "v_ceil_f64_e64": [0, 2, 3, 4], "v_clrexcp": [0, 2, 3, 4], "v_clrexcp_e64": [0, 2, 3, 4], "v_cmp": 464, "v_cmp_class_f16": [0, 3, 4], "v_cmp_class_f16_e64": [0, 3, 4], "v_cmp_class_f16_sdw": [0, 3, 4], "v_cmp_class_f32": [0, 2, 3, 4], "v_cmp_class_f32_e64": [0, 2, 3, 4], "v_cmp_class_f32_sdw": [0, 3, 4], "v_cmp_class_f64": [0, 2, 3, 4], "v_cmp_class_f64_e64": [0, 2, 3, 4], "v_cmp_eq_f16": [0, 3, 4], "v_cmp_eq_f16_e64": [0, 3, 4], "v_cmp_eq_f16_sdw": [0, 3, 4], "v_cmp_eq_f32": [0, 2, 3, 4], "v_cmp_eq_f32_e64": [0, 2, 3, 4], "v_cmp_eq_f32_sdw": [0, 3, 4], "v_cmp_eq_f64": [0, 2, 3, 4], "v_cmp_eq_f64_e64": [0, 2, 3, 4], "v_cmp_eq_i16": [0, 3, 4], "v_cmp_eq_i16_e64": [0, 3, 4], "v_cmp_eq_i16_sdw": [0, 3, 4], "v_cmp_eq_i32": [0, 2, 3, 4], "v_cmp_eq_i32_e64": [0, 2, 3, 4], "v_cmp_eq_i32_sdw": [0, 3, 4], "v_cmp_eq_i64": [0, 2, 3, 4], "v_cmp_eq_i64_e64": [0, 2, 3, 4], "v_cmp_eq_u16": [0, 3, 4], "v_cmp_eq_u16_e64": [0, 3, 4], "v_cmp_eq_u16_sdw": [0, 3, 4], "v_cmp_eq_u32": [0, 2, 3, 4], "v_cmp_eq_u32_e64": [0, 2, 3, 4], "v_cmp_eq_u32_sdw": [0, 3, 4], "v_cmp_eq_u64": [0, 2, 3, 4], "v_cmp_eq_u64_e64": [0, 2, 3, 4], "v_cmp_f_f16": [0, 3, 4], "v_cmp_f_f16_e64": [0, 3, 4], "v_cmp_f_f16_sdwa": [0, 3, 4], "v_cmp_f_f32": [0, 2, 3, 4], "v_cmp_f_f32_e64": [0, 2, 3, 4], "v_cmp_f_f32_sdwa": [0, 3, 4], "v_cmp_f_f64": [0, 2, 3, 4], "v_cmp_f_f64_e64": [0, 2, 3, 4], "v_cmp_f_i16": [3, 4], "v_cmp_f_i16_e64": [3, 4], "v_cmp_f_i16_sdw": [3, 4], "v_cmp_f_i32": [0, 2, 3, 4], "v_cmp_f_i32_e64": [0, 2, 3, 4], "v_cmp_f_i32_sdw": [0, 3, 4], "v_cmp_f_i64": [0, 2, 3, 4], "v_cmp_f_i64_e64": [0, 2, 3, 4], "v_cmp_f_u16": [3, 4], "v_cmp_f_u16_e64": [3, 4], "v_cmp_f_u16_sdw": [3, 4], "v_cmp_f_u32": [0, 2, 3, 4], "v_cmp_f_u32_e64": [0, 2, 3, 4], "v_cmp_f_u32_sdw": [0, 3, 4], "v_cmp_f_u64": [0, 2, 3, 4], "v_cmp_f_u64_e64": [0, 2, 3, 4], "v_cmp_ge_f16": [0, 3, 4], "v_cmp_ge_f16_e64": [0, 3, 4], "v_cmp_ge_f16_sdw": [0, 3, 4], "v_cmp_ge_f32": [0, 2, 3, 4], "v_cmp_ge_f32_e64": [0, 2, 3, 4], "v_cmp_ge_f32_sdw": [0, 3, 4], "v_cmp_ge_f64": [0, 2, 3, 4], "v_cmp_ge_f64_e64": [0, 2, 3, 4], "v_cmp_ge_i16": [0, 3, 4], "v_cmp_ge_i16_e64": [0, 3, 4], "v_cmp_ge_i16_sdw": [0, 3, 4], "v_cmp_ge_i32": [0, 2, 3, 4], "v_cmp_ge_i32_e64": [0, 2, 3, 4], "v_cmp_ge_i32_sdw": [0, 3, 4], "v_cmp_ge_i64": [0, 2, 3, 4], "v_cmp_ge_i64_e64": [0, 2, 3, 4], "v_cmp_ge_u16": [0, 3, 4], "v_cmp_ge_u16_e64": [0, 3, 4], "v_cmp_ge_u16_sdw": [0, 3, 4], "v_cmp_ge_u32": [0, 2, 3, 4], "v_cmp_ge_u32_e64": [0, 2, 3, 4], "v_cmp_ge_u32_sdw": [0, 3, 4], "v_cmp_ge_u64": [0, 2, 3, 4], "v_cmp_ge_u64_e64": [0, 2, 3, 4], "v_cmp_gt_f16": [0, 3, 4], "v_cmp_gt_f16_e64": [0, 3, 4], "v_cmp_gt_f16_sdwa": [0, 3, 4], "v_cmp_gt_f32": [0, 2, 3, 4], "v_cmp_gt_f32_e64": [0, 2, 3, 4], "v_cmp_gt_f32_sdwa": [0, 3, 4], "v_cmp_gt_f64": [0, 2, 3, 4], "v_cmp_gt_f64_e64": [0, 2, 3, 4], "v_cmp_gt_i16": [0, 3, 4], "v_cmp_gt_i16_e64": [0, 3, 4], "v_cmp_gt_i16_sdw": [0, 3, 4], "v_cmp_gt_i32": [0, 2, 3, 4], "v_cmp_gt_i32_e64": [0, 2, 3, 4], "v_cmp_gt_i32_sdw": [0, 3, 4], "v_cmp_gt_i64": [0, 2, 3, 4], "v_cmp_gt_i64_e64": [0, 2, 3, 4], "v_cmp_gt_u16": [0, 3, 4], "v_cmp_gt_u16_e64": [0, 3, 4], "v_cmp_gt_u16_sdw": [0, 3, 4], "v_cmp_gt_u32": [0, 2, 3, 4], "v_cmp_gt_u32_e64": [0, 2, 3, 4], "v_cmp_gt_u32_sdw": [0, 3, 4], "v_cmp_gt_u64": [0, 2, 3, 4], "v_cmp_gt_u64_e64": [0, 2, 3, 4], "v_cmp_le_f16": [0, 3, 4], "v_cmp_le_f16_e64": [0, 3, 4], "v_cmp_le_f16_sdw": [0, 3, 4], "v_cmp_le_f32": [0, 2, 3, 4], "v_cmp_le_f32_e64": [0, 2, 3, 4], "v_cmp_le_f32_sdw": [0, 3, 4], "v_cmp_le_f64": [0, 2, 3, 4], "v_cmp_le_f64_e64": [0, 2, 3, 4], "v_cmp_le_i16": [0, 3, 4], "v_cmp_le_i16_e64": [0, 3, 4], "v_cmp_le_i16_sdw": [0, 3, 4], "v_cmp_le_i32": [0, 2, 3, 4], "v_cmp_le_i32_e64": [0, 2, 3, 4], "v_cmp_le_i32_sdw": [0, 3, 4], "v_cmp_le_i64": [0, 2, 3, 4], "v_cmp_le_i64_e64": [0, 2, 3, 4], "v_cmp_le_u16": [0, 3, 4], "v_cmp_le_u16_e64": [0, 3, 4], "v_cmp_le_u16_sdw": [0, 3, 4], "v_cmp_le_u32": [0, 2, 3, 4], "v_cmp_le_u32_e64": [0, 2, 3, 4], "v_cmp_le_u32_sdw": [0, 3, 4], "v_cmp_le_u64": [0, 2, 3, 4], "v_cmp_le_u64_e64": [0, 2, 3, 4], "v_cmp_lg_f16": [0, 3, 4], "v_cmp_lg_f16_e64": [0, 3, 4], "v_cmp_lg_f16_sdwa": [0, 3, 4], "v_cmp_lg_f32": [0, 2, 3, 4], "v_cmp_lg_f32_e64": [0, 2, 3, 4], "v_cmp_lg_f32_sdwa": [0, 3, 4], "v_cmp_lg_f64": [0, 2, 3, 4], "v_cmp_lg_f64_e64": [0, 2, 3, 4], "v_cmp_lt_f16": [0, 3, 4], "v_cmp_lt_f16_e64": [0, 3, 4], "v_cmp_lt_f16_sdwa": [0, 3, 4], "v_cmp_lt_f32": [0, 2, 3, 4], "v_cmp_lt_f32_e64": [0, 2, 3, 4], "v_cmp_lt_f32_sdwa": [0, 3, 4], "v_cmp_lt_f64": [0, 2, 3, 4], "v_cmp_lt_f64_e64": [0, 2, 3, 4], "v_cmp_lt_i16": [0, 3, 4], "v_cmp_lt_i16_e64": [0, 3, 4], "v_cmp_lt_i16_sdw": [0, 3, 4], "v_cmp_lt_i32": [0, 2, 3, 4], "v_cmp_lt_i32_e64": [0, 2, 3, 4], "v_cmp_lt_i32_sdw": [0, 3, 4], "v_cmp_lt_i64": [0, 2, 3, 4], "v_cmp_lt_i64_e64": [0, 2, 3, 4], "v_cmp_lt_u16": [0, 3, 4], "v_cmp_lt_u16_e64": [0, 3, 4], "v_cmp_lt_u16_sdw": [0, 3, 4], "v_cmp_lt_u32": [0, 2, 3, 4], "v_cmp_lt_u32_e64": [0, 2, 3, 4], "v_cmp_lt_u32_sdw": [0, 3, 4], "v_cmp_lt_u64": [0, 2, 3, 4], "v_cmp_lt_u64_e64": [0, 2, 3, 4], "v_cmp_ne_i16": [0, 3, 4], "v_cmp_ne_i16_e64": [0, 3, 4], "v_cmp_ne_i16_sdw": [0, 3, 4], "v_cmp_ne_i32": [0, 2, 3, 4], "v_cmp_ne_i32_e64": [0, 2, 3, 4], "v_cmp_ne_i32_sdw": [0, 3, 4], "v_cmp_ne_i64": [0, 2, 3, 4], "v_cmp_ne_i64_e64": [0, 2, 3, 4], "v_cmp_ne_u16": [0, 3, 4], "v_cmp_ne_u16_e64": [0, 3, 4], "v_cmp_ne_u16_sdw": [0, 3, 4], "v_cmp_ne_u32": [0, 2, 3, 4], "v_cmp_ne_u32_e64": [0, 2, 3, 4], "v_cmp_ne_u32_sdw": [0, 3, 4], "v_cmp_ne_u64": [0, 2, 3, 4], "v_cmp_ne_u64_e64": [0, 2, 3, 4], "v_cmp_neq_f16": [0, 3, 4], "v_cmp_neq_f16_e64": [0, 3, 4], "v_cmp_neq_f16_sdw": [0, 3, 4], "v_cmp_neq_f32": [0, 2, 3, 4], "v_cmp_neq_f32_e64": [0, 2, 3, 4], "v_cmp_neq_f32_sdw": [0, 3, 4], "v_cmp_neq_f64": [0, 2, 3, 4], "v_cmp_neq_f64_e64": [0, 2, 3, 4], "v_cmp_nge_f16": [0, 3, 4], "v_cmp_nge_f16_e64": [0, 3, 4], "v_cmp_nge_f16_sdw": [0, 3, 4], "v_cmp_nge_f32": [0, 2, 3, 4], "v_cmp_nge_f32_e64": [0, 2, 3, 4], "v_cmp_nge_f32_sdw": [0, 3, 4], "v_cmp_nge_f64": [0, 2, 3, 4], "v_cmp_nge_f64_e64": [0, 2, 3, 4], "v_cmp_ngt_f16": [0, 3, 4], "v_cmp_ngt_f16_e64": [0, 3, 4], "v_cmp_ngt_f16_sdwa": [0, 3, 4], "v_cmp_ngt_f32": [0, 2, 3, 4], "v_cmp_ngt_f32_e64": [0, 2, 3, 4], "v_cmp_ngt_f32_sdwa": [0, 3, 4], "v_cmp_ngt_f64": [0, 2, 3, 4], "v_cmp_ngt_f64_e64": [0, 2, 3, 4], "v_cmp_nle_f16": [0, 3, 4], "v_cmp_nle_f16_e64": [0, 3, 4], "v_cmp_nle_f16_sdw": [0, 3, 4], "v_cmp_nle_f32": [0, 2, 3, 4], "v_cmp_nle_f32_e64": [0, 2, 3, 4], "v_cmp_nle_f32_sdw": [0, 3, 4], "v_cmp_nle_f64": [0, 2, 3, 4], "v_cmp_nle_f64_e64": [0, 2, 3, 4], "v_cmp_nlg_f16": [0, 3, 4], "v_cmp_nlg_f16_e64": [0, 3, 4], "v_cmp_nlg_f16_sdwa": [0, 3, 4], "v_cmp_nlg_f32": [0, 2, 3, 4], "v_cmp_nlg_f32_e64": [0, 2, 3, 4], "v_cmp_nlg_f32_sdwa": [0, 3, 4], "v_cmp_nlg_f64": [0, 2, 3, 4], "v_cmp_nlg_f64_e64": [0, 2, 3, 4], "v_cmp_nlt_f16": [0, 3, 4], "v_cmp_nlt_f16_e64": [0, 3, 4], "v_cmp_nlt_f16_sdwa": [0, 3, 4], "v_cmp_nlt_f32": [0, 2, 3, 4], "v_cmp_nlt_f32_e64": [0, 2, 3, 4], "v_cmp_nlt_f32_sdwa": [0, 3, 4], "v_cmp_nlt_f64": [0, 2, 3, 4], "v_cmp_nlt_f64_e64": [0, 2, 3, 4], "v_cmp_o_f16": [0, 3, 4], "v_cmp_o_f16_e64": [0, 3, 4], "v_cmp_o_f16_sdw": [0, 3, 4], "v_cmp_o_f32": [0, 2, 3, 4], "v_cmp_o_f32_e64": [0, 2, 3, 4], "v_cmp_o_f32_sdw": [0, 3, 4], "v_cmp_o_f64": [0, 2, 3, 4], "v_cmp_o_f64_e64": [0, 2, 3, 4], "v_cmp_t_i16": [3, 4], "v_cmp_t_i16_e64": [3, 4], "v_cmp_t_i16_sdw": [3, 4], "v_cmp_t_i32": [0, 2, 3, 4], "v_cmp_t_i32_e64": [0, 2, 3, 4], "v_cmp_t_i32_sdw": [0, 3, 4], "v_cmp_t_i64": [0, 2, 3, 4], "v_cmp_t_i64_e64": [0, 2, 3, 4], "v_cmp_t_u16": [3, 4], "v_cmp_t_u16_e64": [3, 4], "v_cmp_t_u16_sdw": [3, 4], "v_cmp_t_u32": [0, 2, 3, 4], "v_cmp_t_u32_e64": [0, 2, 3, 4], "v_cmp_t_u32_sdw": [0, 3, 4], "v_cmp_t_u64": [0, 2, 3, 4], "v_cmp_t_u64_e64": [0, 2, 3, 4], "v_cmp_tru_f16": [0, 3, 4], "v_cmp_tru_f16_e64": [0, 3, 4], "v_cmp_tru_f16_sdw": [0, 3, 4], "v_cmp_tru_f32": [0, 2, 3, 4], "v_cmp_tru_f32_e64": [0, 2, 3, 4], "v_cmp_tru_f32_sdw": [0, 3, 4], "v_cmp_tru_f64": [0, 2, 3, 4], "v_cmp_tru_f64_e64": [0, 2, 3, 4], "v_cmp_u_f16": [0, 3, 4], "v_cmp_u_f16_e64": [0, 3, 4], "v_cmp_u_f16_sdw": [0, 3, 4], "v_cmp_u_f32": [0, 2, 3, 4], "v_cmp_u_f32_e64": [0, 2, 3, 4], "v_cmp_u_f32_sdw": [0, 3, 4], "v_cmp_u_f64": [0, 2, 3, 4], "v_cmp_u_f64_e64": [0, 2, 3, 4], "v_cmps_eq_f32": 2, "v_cmps_eq_f32_e64": 2, "v_cmps_eq_f64": 2, "v_cmps_eq_f64_e64": 2, "v_cmps_f_f32": 2, "v_cmps_f_f32_e64": 2, "v_cmps_f_f64": 2, "v_cmps_f_f64_e64": 2, "v_cmps_ge_f32": 2, "v_cmps_ge_f32_e64": 2, "v_cmps_ge_f64": 2, "v_cmps_ge_f64_e64": 2, "v_cmps_gt_f32": 2, "v_cmps_gt_f32_e64": 2, "v_cmps_gt_f64": 2, "v_cmps_gt_f64_e64": 2, "v_cmps_le_f32": 2, "v_cmps_le_f32_e64": 2, "v_cmps_le_f64": 2, "v_cmps_le_f64_e64": 2, "v_cmps_lg_f32": 2, "v_cmps_lg_f32_e64": 2, "v_cmps_lg_f64": 2, "v_cmps_lg_f64_e64": 2, "v_cmps_lt_f32": 2, "v_cmps_lt_f32_e64": 2, "v_cmps_lt_f64": 2, "v_cmps_lt_f64_e64": 2, "v_cmps_neq_f32": 2, "v_cmps_neq_f32_e64": 2, "v_cmps_neq_f64": 2, "v_cmps_neq_f64_e64": 2, "v_cmps_nge_f32": 2, "v_cmps_nge_f32_e64": 2, "v_cmps_nge_f64": 2, "v_cmps_nge_f64_e64": 2, "v_cmps_ngt_f32": 2, "v_cmps_ngt_f32_e64": 2, "v_cmps_ngt_f64": 2, "v_cmps_ngt_f64_e64": 2, "v_cmps_nle_f32": 2, "v_cmps_nle_f32_e64": 2, "v_cmps_nle_f64": 2, "v_cmps_nle_f64_e64": 2, "v_cmps_nlg_f32": 2, "v_cmps_nlg_f32_e64": 2, "v_cmps_nlg_f64": 2, "v_cmps_nlg_f64_e64": 2, "v_cmps_nlt_f32": 2, "v_cmps_nlt_f32_e64": 2, "v_cmps_nlt_f64": 2, "v_cmps_nlt_f64_e64": 2, "v_cmps_o_f32": 2, "v_cmps_o_f32_e64": 2, "v_cmps_o_f64": 2, "v_cmps_o_f64_e64": 2, "v_cmps_tru_f32": 2, "v_cmps_tru_f32_e64": 2, "v_cmps_tru_f64": 2, "v_cmps_tru_f64_e64": 2, "v_cmps_u_f32": 2, "v_cmps_u_f32_e64": 2, "v_cmps_u_f64": 2, "v_cmps_u_f64_e64": 2, "v_cmpsx_eq_f32": 2, "v_cmpsx_eq_f32_e64": 2, "v_cmpsx_eq_f64": 2, "v_cmpsx_eq_f64_e64": 2, "v_cmpsx_f_f32": 2, "v_cmpsx_f_f32_e64": 2, "v_cmpsx_f_f64": 2, "v_cmpsx_f_f64_e64": 2, "v_cmpsx_ge_f32": 2, "v_cmpsx_ge_f32_e64": 2, "v_cmpsx_ge_f64": 2, "v_cmpsx_ge_f64_e64": 2, "v_cmpsx_gt_f32": 2, "v_cmpsx_gt_f32_e64": 2, "v_cmpsx_gt_f64": 2, "v_cmpsx_gt_f64_e64": 2, "v_cmpsx_le_f32": 2, "v_cmpsx_le_f32_e64": 2, "v_cmpsx_le_f64": 2, "v_cmpsx_le_f64_e64": 2, "v_cmpsx_lg_f32": 2, "v_cmpsx_lg_f32_e64": 2, "v_cmpsx_lg_f64": 2, "v_cmpsx_lg_f64_e64": 2, "v_cmpsx_lt_f32": 2, "v_cmpsx_lt_f32_e64": 2, "v_cmpsx_lt_f64": 2, "v_cmpsx_lt_f64_e64": 2, "v_cmpsx_neq_f32": 2, "v_cmpsx_neq_f32_e64": 2, "v_cmpsx_neq_f64": 2, "v_cmpsx_neq_f64_e64": 2, "v_cmpsx_nge_f32": 2, "v_cmpsx_nge_f32_e64": 2, "v_cmpsx_nge_f64": 2, "v_cmpsx_nge_f64_e64": 2, "v_cmpsx_ngt_f32": 2, "v_cmpsx_ngt_f32_e64": 2, "v_cmpsx_ngt_f64": 2, "v_cmpsx_ngt_f64_e64": 2, "v_cmpsx_nle_f32": 2, "v_cmpsx_nle_f32_e64": 2, "v_cmpsx_nle_f64": 2, "v_cmpsx_nle_f64_e64": 2, "v_cmpsx_nlg_f32": 2, "v_cmpsx_nlg_f32_e64": 2, "v_cmpsx_nlg_f64": 2, "v_cmpsx_nlg_f64_e64": 2, "v_cmpsx_nlt_f32": 2, "v_cmpsx_nlt_f32_e64": 2, "v_cmpsx_nlt_f64": 2, "v_cmpsx_nlt_f64_e64": 2, "v_cmpsx_o_f32": 2, "v_cmpsx_o_f32_e64": 2, "v_cmpsx_o_f64": 2, "v_cmpsx_o_f64_e64": 2, "v_cmpsx_tru_f32": 2, "v_cmpsx_tru_f32_e64": 2, "v_cmpsx_tru_f64": 2, "v_cmpsx_tru_f64_e64": 2, "v_cmpsx_u_f32": 2, "v_cmpsx_u_f32_e64": 2, "v_cmpsx_u_f64": 2, "v_cmpsx_u_f64_e64": 2, "v_cmpx_class_f16": [0, 3, 4], "v_cmpx_class_f16_e64": [0, 3, 4], "v_cmpx_class_f16_sdw": [0, 3, 4], "v_cmpx_class_f32": [0, 2, 3, 4], "v_cmpx_class_f32_e64": [0, 2, 3, 4], "v_cmpx_class_f32_sdw": [0, 3, 4], "v_cmpx_class_f64": [0, 2, 3, 4], "v_cmpx_class_f64_e64": [0, 2, 3, 4], "v_cmpx_eq_f16": [0, 3, 4], "v_cmpx_eq_f16_e64": [0, 3, 4], "v_cmpx_eq_f16_sdw": [0, 3, 4], "v_cmpx_eq_f32": [0, 2, 3, 4], "v_cmpx_eq_f32_e64": [0, 2, 3, 4], "v_cmpx_eq_f32_sdw": [0, 3, 4], "v_cmpx_eq_f64": [0, 2, 3, 4], "v_cmpx_eq_f64_e64": [0, 2, 3, 4], "v_cmpx_eq_i16": [0, 3, 4], "v_cmpx_eq_i16_e64": [0, 3, 4], "v_cmpx_eq_i16_sdw": [0, 3, 4], "v_cmpx_eq_i32": [0, 2, 3, 4], "v_cmpx_eq_i32_e64": [0, 2, 3, 4], "v_cmpx_eq_i32_sdw": [0, 3, 4], "v_cmpx_eq_i64": [0, 2, 3, 4], "v_cmpx_eq_i64_e64": [0, 2, 3, 4], "v_cmpx_eq_u16": [0, 3, 4], "v_cmpx_eq_u16_e64": [0, 3, 4], "v_cmpx_eq_u16_sdw": [0, 3, 4], "v_cmpx_eq_u32": [0, 2, 3, 4], "v_cmpx_eq_u32_e64": [0, 2, 3, 4], "v_cmpx_eq_u32_sdw": [0, 3, 4], "v_cmpx_eq_u64": [0, 2, 3, 4], "v_cmpx_eq_u64_e64": [0, 2, 3, 4], "v_cmpx_f_f16": [0, 3, 4], "v_cmpx_f_f16_e64": [0, 3, 4], "v_cmpx_f_f16_sdwa": [0, 3, 4], "v_cmpx_f_f32": [0, 2, 3, 4], "v_cmpx_f_f32_e64": [0, 2, 3, 4], "v_cmpx_f_f32_sdwa": [0, 3, 4], "v_cmpx_f_f64": [0, 2, 3, 4], "v_cmpx_f_f64_e64": [0, 2, 3, 4], "v_cmpx_f_i16": [3, 4], "v_cmpx_f_i16_e64": [3, 4], "v_cmpx_f_i16_sdw": [3, 4], "v_cmpx_f_i32": [0, 2, 3, 4], "v_cmpx_f_i32_e64": [0, 2, 3, 4], "v_cmpx_f_i32_sdw": [0, 3, 4], "v_cmpx_f_i64": [0, 2, 3, 4], "v_cmpx_f_i64_e64": [0, 2, 3, 4], "v_cmpx_f_u16": [3, 4], "v_cmpx_f_u16_e64": [3, 4], "v_cmpx_f_u16_sdw": [3, 4], "v_cmpx_f_u32": [0, 2, 3, 4], "v_cmpx_f_u32_e64": [0, 2, 3, 4], "v_cmpx_f_u32_sdw": [0, 3, 4], "v_cmpx_f_u64": [0, 2, 3, 4], "v_cmpx_f_u64_e64": [0, 2, 3, 4], "v_cmpx_ge_f16": [0, 3, 4], "v_cmpx_ge_f16_e64": [0, 3, 4], "v_cmpx_ge_f16_sdw": [0, 3, 4], "v_cmpx_ge_f32": [0, 2, 3, 4], "v_cmpx_ge_f32_e64": [0, 2, 3, 4], "v_cmpx_ge_f32_sdw": [0, 3, 4], "v_cmpx_ge_f64": [0, 2, 3, 4], "v_cmpx_ge_f64_e64": [0, 2, 3, 4], "v_cmpx_ge_i16": [0, 3, 4], "v_cmpx_ge_i16_e64": [0, 3, 4], "v_cmpx_ge_i16_sdw": [0, 3, 4], "v_cmpx_ge_i32": [0, 2, 3, 4], "v_cmpx_ge_i32_e64": [0, 2, 3, 4], "v_cmpx_ge_i32_sdw": [0, 3, 4], "v_cmpx_ge_i64": [0, 2, 3, 4], "v_cmpx_ge_i64_e64": [0, 2, 3, 4], "v_cmpx_ge_u16": [0, 3, 4], "v_cmpx_ge_u16_e64": [0, 3, 4], "v_cmpx_ge_u16_sdw": [0, 3, 4], "v_cmpx_ge_u32": [0, 2, 3, 4], "v_cmpx_ge_u32_e64": [0, 2, 3, 4], "v_cmpx_ge_u32_sdw": [0, 3, 4], "v_cmpx_ge_u64": [0, 2, 3, 4], "v_cmpx_ge_u64_e64": [0, 2, 3, 4], "v_cmpx_gt_f16": [0, 3, 4], "v_cmpx_gt_f16_e64": [0, 3, 4], "v_cmpx_gt_f16_sdwa": [0, 3, 4], "v_cmpx_gt_f32": [0, 2, 3, 4], "v_cmpx_gt_f32_e64": [0, 2, 3, 4], "v_cmpx_gt_f32_sdwa": [0, 3, 4], "v_cmpx_gt_f64": [0, 2, 3, 4], "v_cmpx_gt_f64_e64": [0, 2, 3, 4], "v_cmpx_gt_i16": [0, 3, 4], "v_cmpx_gt_i16_e64": [0, 3, 4], "v_cmpx_gt_i16_sdw": [0, 3, 4], "v_cmpx_gt_i32": [0, 2, 3, 4], "v_cmpx_gt_i32_e64": [0, 2, 3, 4], "v_cmpx_gt_i32_sdw": [0, 3, 4], "v_cmpx_gt_i64": [0, 2, 3, 4], "v_cmpx_gt_i64_e64": [0, 2, 3, 4], "v_cmpx_gt_u16": [0, 3, 4], "v_cmpx_gt_u16_e64": [0, 3, 4], "v_cmpx_gt_u16_sdw": [0, 3, 4], "v_cmpx_gt_u32": [0, 2, 3, 4], "v_cmpx_gt_u32_e64": [0, 2, 3, 4], "v_cmpx_gt_u32_sdw": [0, 3, 4], "v_cmpx_gt_u64": [0, 2, 3, 4], "v_cmpx_gt_u64_e64": [0, 2, 3, 4], "v_cmpx_le_f16": [0, 3, 4], "v_cmpx_le_f16_e64": [0, 3, 4], "v_cmpx_le_f16_sdw": [0, 3, 4], "v_cmpx_le_f32": [0, 2, 3, 4], "v_cmpx_le_f32_e64": [0, 2, 3, 4], "v_cmpx_le_f32_sdw": [0, 3, 4], "v_cmpx_le_f64": [0, 2, 3, 4], "v_cmpx_le_f64_e64": [0, 2, 3, 4], "v_cmpx_le_i16": [0, 3, 4], "v_cmpx_le_i16_e64": [0, 3, 4], "v_cmpx_le_i16_sdw": [0, 3, 4], "v_cmpx_le_i32": [0, 2, 3, 4], "v_cmpx_le_i32_e64": [0, 2, 3, 4], "v_cmpx_le_i32_sdw": [0, 3, 4], "v_cmpx_le_i64": [0, 2, 3, 4], "v_cmpx_le_i64_e64": [0, 2, 3, 4], "v_cmpx_le_u16": [0, 3, 4], "v_cmpx_le_u16_e64": [0, 3, 4], "v_cmpx_le_u16_sdw": [0, 3, 4], "v_cmpx_le_u32": [0, 2, 3, 4, 466], "v_cmpx_le_u32_e64": [0, 2, 3, 4], "v_cmpx_le_u32_sdw": [0, 3, 4], "v_cmpx_le_u64": [0, 2, 3, 4], "v_cmpx_le_u64_e64": [0, 2, 3, 4], "v_cmpx_lg_f16": [0, 3, 4], "v_cmpx_lg_f16_e64": [0, 3, 4], "v_cmpx_lg_f16_sdwa": [0, 3, 4], "v_cmpx_lg_f32": [0, 2, 3, 4], "v_cmpx_lg_f32_e64": [0, 2, 3, 4], "v_cmpx_lg_f32_sdwa": [0, 3, 4], "v_cmpx_lg_f64": [0, 2, 3, 4], "v_cmpx_lg_f64_e64": [0, 2, 3, 4], "v_cmpx_lt_f16": [0, 3, 4], "v_cmpx_lt_f16_e64": [0, 3, 4], "v_cmpx_lt_f16_sdwa": [0, 3, 4], "v_cmpx_lt_f32": [0, 2, 3, 4], "v_cmpx_lt_f32_e64": [0, 2, 3, 4], "v_cmpx_lt_f32_sdwa": [0, 3, 4], "v_cmpx_lt_f64": [0, 2, 3, 4], "v_cmpx_lt_f64_e64": [0, 2, 3, 4], "v_cmpx_lt_i16": [0, 3, 4], "v_cmpx_lt_i16_e64": [0, 3, 4], "v_cmpx_lt_i16_sdw": [0, 3, 4], "v_cmpx_lt_i32": [0, 2, 3, 4], "v_cmpx_lt_i32_e64": [0, 2, 3, 4], "v_cmpx_lt_i32_sdw": [0, 3, 4], "v_cmpx_lt_i64": [0, 2, 3, 4], "v_cmpx_lt_i64_e64": [0, 2, 3, 4], "v_cmpx_lt_u16": [0, 3, 4], "v_cmpx_lt_u16_e64": [0, 3, 4], "v_cmpx_lt_u16_sdw": [0, 3, 4], "v_cmpx_lt_u32": [0, 2, 3, 4], "v_cmpx_lt_u32_e64": [0, 2, 3, 4], "v_cmpx_lt_u32_sdw": [0, 3, 4], "v_cmpx_lt_u64": [0, 2, 3, 4], "v_cmpx_lt_u64_e64": [0, 2, 3, 4], "v_cmpx_ne_i16": [0, 3, 4], "v_cmpx_ne_i16_e64": [0, 3, 4], "v_cmpx_ne_i16_sdw": [0, 3, 4], "v_cmpx_ne_i32": [0, 2, 3, 4], "v_cmpx_ne_i32_e64": [0, 2, 3, 4], "v_cmpx_ne_i32_sdw": [0, 3, 4], "v_cmpx_ne_i64": [0, 2, 3, 4], "v_cmpx_ne_i64_e64": [0, 2, 3, 4], "v_cmpx_ne_u16": [0, 3, 4], "v_cmpx_ne_u16_e64": [0, 3, 4], "v_cmpx_ne_u16_sdw": [0, 3, 4], "v_cmpx_ne_u32": [0, 2, 3, 4], "v_cmpx_ne_u32_e64": [0, 2, 3, 4], "v_cmpx_ne_u32_sdw": [0, 3, 4], "v_cmpx_ne_u64": [0, 2, 3, 4], "v_cmpx_ne_u64_e64": [0, 2, 3, 4], "v_cmpx_neq_f16": [0, 3, 4], "v_cmpx_neq_f16_e64": [0, 3, 4], "v_cmpx_neq_f16_sdw": [0, 3, 4], "v_cmpx_neq_f32": [0, 2, 3, 4], "v_cmpx_neq_f32_e64": [0, 2, 3, 4], "v_cmpx_neq_f32_sdw": [0, 3, 4], "v_cmpx_neq_f64": [0, 2, 3, 4], "v_cmpx_neq_f64_e64": [0, 2, 3, 4], "v_cmpx_nge_f16": [0, 3, 4], "v_cmpx_nge_f16_e64": [0, 3, 4], "v_cmpx_nge_f16_sdw": [0, 3, 4], "v_cmpx_nge_f32": [0, 2, 3, 4], "v_cmpx_nge_f32_e64": [0, 2, 3, 4], "v_cmpx_nge_f32_sdw": [0, 3, 4], "v_cmpx_nge_f64": [0, 2, 3, 4], "v_cmpx_nge_f64_e64": [0, 2, 3, 4], "v_cmpx_ngt_f16": [0, 3, 4], "v_cmpx_ngt_f16_e64": [0, 3, 4], "v_cmpx_ngt_f16_sdwa": [0, 3, 4], "v_cmpx_ngt_f32": [0, 2, 3, 4], "v_cmpx_ngt_f32_e64": [0, 2, 3, 4], "v_cmpx_ngt_f32_sdwa": [0, 3, 4], "v_cmpx_ngt_f64": [0, 2, 3, 4], "v_cmpx_ngt_f64_e64": [0, 2, 3, 4], "v_cmpx_nle_f16": [0, 3, 4], "v_cmpx_nle_f16_e64": [0, 3, 4], "v_cmpx_nle_f16_sdw": [0, 3, 4], "v_cmpx_nle_f32": [0, 2, 3, 4], "v_cmpx_nle_f32_e64": [0, 2, 3, 4], "v_cmpx_nle_f32_sdw": [0, 3, 4], "v_cmpx_nle_f64": [0, 2, 3, 4], "v_cmpx_nle_f64_e64": [0, 2, 3, 4], "v_cmpx_nlg_f16": [0, 3, 4], "v_cmpx_nlg_f16_e64": [0, 3, 4], "v_cmpx_nlg_f16_sdwa": [0, 3, 4], "v_cmpx_nlg_f32": [0, 2, 3, 4], "v_cmpx_nlg_f32_e64": [0, 2, 3, 4], "v_cmpx_nlg_f32_sdwa": [0, 3, 4], "v_cmpx_nlg_f64": [0, 2, 3, 4], "v_cmpx_nlg_f64_e64": [0, 2, 3, 4], "v_cmpx_nlt_f16": [0, 3, 4], "v_cmpx_nlt_f16_e64": [0, 3, 4], "v_cmpx_nlt_f16_sdwa": [0, 3, 4], "v_cmpx_nlt_f32": [0, 2, 3, 4], "v_cmpx_nlt_f32_e64": [0, 2, 3, 4], "v_cmpx_nlt_f32_sdwa": [0, 3, 4], "v_cmpx_nlt_f64": [0, 2, 3, 4], "v_cmpx_nlt_f64_e64": [0, 2, 3, 4], "v_cmpx_o_f16": [0, 3, 4], "v_cmpx_o_f16_e64": [0, 3, 4], "v_cmpx_o_f16_sdw": [0, 3, 4], "v_cmpx_o_f32": [0, 2, 3, 4], "v_cmpx_o_f32_e64": [0, 2, 3, 4], "v_cmpx_o_f32_sdw": [0, 3, 4], "v_cmpx_o_f64": [0, 2, 3, 4], "v_cmpx_o_f64_e64": [0, 2, 3, 4], "v_cmpx_t_i16": [3, 4], "v_cmpx_t_i16_e64": [3, 4], "v_cmpx_t_i16_sdw": [3, 4], "v_cmpx_t_i32": [0, 2, 3, 4], "v_cmpx_t_i32_e64": [0, 2, 3, 4], "v_cmpx_t_i32_sdw": [0, 3, 4], "v_cmpx_t_i64": [0, 2, 3, 4], "v_cmpx_t_i64_e64": [0, 2, 3, 4], "v_cmpx_t_u16": [3, 4], "v_cmpx_t_u16_e64": [3, 4], "v_cmpx_t_u16_sdw": [3, 4], "v_cmpx_t_u32": [0, 2, 3, 4], "v_cmpx_t_u32_e64": [0, 2, 3, 4], "v_cmpx_t_u32_sdw": [0, 3, 4], "v_cmpx_t_u64": [0, 2, 3, 4], "v_cmpx_t_u64_e64": [0, 2, 3, 4], "v_cmpx_tru_f16": [0, 3, 4], "v_cmpx_tru_f16_e64": [0, 3, 4], "v_cmpx_tru_f16_sdw": [0, 3, 4], "v_cmpx_tru_f32": [0, 2, 3, 4], "v_cmpx_tru_f32_e64": [0, 2, 3, 4], "v_cmpx_tru_f32_sdw": [0, 3, 4], "v_cmpx_tru_f64": [0, 2, 3, 4], "v_cmpx_tru_f64_e64": [0, 2, 3, 4], "v_cmpx_u_f16": [0, 3, 4], "v_cmpx_u_f16_e64": [0, 3, 4], "v_cmpx_u_f16_sdw": [0, 3, 4], "v_cmpx_u_f32": [0, 2, 3, 4], "v_cmpx_u_f32_e64": [0, 2, 3, 4], "v_cmpx_u_f32_sdw": [0, 3, 4], "v_cmpx_u_f64": [0, 2, 3, 4], "v_cmpx_u_f64_e64": [0, 2, 3, 4], "v_cndmask_b32": [0, 2, 3, 4], "v_cndmask_b32_dpp": [0, 3, 4], "v_cndmask_b32_e64": [0, 2, 3, 4], "v_cndmask_b32_sdw": [0, 3, 4], "v_cos_f16": [0, 3, 4], "v_cos_f16_dpp": [0, 3, 4], "v_cos_f16_e64": [0, 3, 4], "v_cos_f16_sdw": [0, 3, 4], "v_cos_f32": [0, 2, 3, 4], "v_cos_f32_dpp": [0, 3, 4], "v_cos_f32_e64": [0, 2, 3, 4], "v_cos_f32_sdw": [0, 3, 4], "v_cubeid_f32": [0, 2, 3, 4], "v_cubema_f32": [0, 2, 3, 4], "v_cubesc_f32": [0, 2, 3, 4], "v_cubetc_f32": [0, 2, 3, 4], "v_cvt_f16_f32": [0, 2, 3, 4, 464], "v_cvt_f16_f32_dpp": [0, 3, 4], "v_cvt_f16_f32_e64": [0, 2, 3, 4], "v_cvt_f16_f32_sdwa": [0, 3, 4], "v_cvt_f16_i16": [0, 3, 4], "v_cvt_f16_i16_dpp": [0, 3, 4], "v_cvt_f16_i16_e64": [0, 3, 4], "v_cvt_f16_i16_sdw": [0, 3, 4], "v_cvt_f16_u16": [0, 3, 4], "v_cvt_f16_u16_dpp": [0, 3, 4], "v_cvt_f16_u16_e64": [0, 3, 4], "v_cvt_f16_u16_sdw": [0, 3, 4], "v_cvt_f32_f16": [0, 2, 3, 4], "v_cvt_f32_f16_dpp": [0, 3, 4], "v_cvt_f32_f16_e64": [0, 2, 3, 4], "v_cvt_f32_f16_sdwa": [0, 3, 4], "v_cvt_f32_f64": [0, 2, 3, 4], "v_cvt_f32_f64_e64": [0, 2, 3, 4], "v_cvt_f32_i32": [0, 2, 3, 4], "v_cvt_f32_i32_dpp": [0, 3, 4], "v_cvt_f32_i32_e64": [0, 2, 3, 4], "v_cvt_f32_i32_sdw": [0, 3, 4], "v_cvt_f32_u32": [0, 2, 3, 4, 463], "v_cvt_f32_u32_dpp": [0, 3, 4], "v_cvt_f32_u32_e64": [0, 2, 3, 4], "v_cvt_f32_u32_sdw": [0, 3, 4], "v_cvt_f32_ubyte0": [0, 2, 3, 4], "v_cvt_f32_ubyte0_dpp": [0, 3, 4], "v_cvt_f32_ubyte0_e64": [0, 2, 3, 4], "v_cvt_f32_ubyte0_sdw": [0, 3, 4], "v_cvt_f32_ubyte1": [0, 2, 3, 4], "v_cvt_f32_ubyte1_dpp": [0, 3, 4], "v_cvt_f32_ubyte1_e64": [0, 2, 3, 4], "v_cvt_f32_ubyte1_sdw": [0, 3, 4], "v_cvt_f32_ubyte2": [0, 2, 3, 4], "v_cvt_f32_ubyte2_dpp": [0, 3, 4], "v_cvt_f32_ubyte2_e64": [0, 2, 3, 4], "v_cvt_f32_ubyte2_sdw": [0, 3, 4], "v_cvt_f32_ubyte3": [0, 2, 3, 4], "v_cvt_f32_ubyte3_dpp": [0, 3, 4], "v_cvt_f32_ubyte3_e64": [0, 2, 3, 4], "v_cvt_f32_ubyte3_sdw": [0, 3, 4], "v_cvt_f64_f32": [0, 2, 3, 4], "v_cvt_f64_f32_e64": [0, 2, 3, 4], "v_cvt_f64_i32": [0, 2, 3, 4], "v_cvt_f64_i32_e32": 466, "v_cvt_f64_i32_e64": [0, 2, 3, 4], "v_cvt_f64_u32": [0, 2, 3, 4], "v_cvt_f64_u32_e64": [0, 2, 3, 4], "v_cvt_flr_i32_f32": [0, 2, 3, 4], "v_cvt_flr_i32_f32_dpp": [0, 3, 4], "v_cvt_flr_i32_f32_e64": [0, 2, 3, 4], "v_cvt_flr_i32_f32_sdw": [0, 3, 4], "v_cvt_i16_f16": [0, 3, 4], "v_cvt_i16_f16_dpp": [0, 3, 4], "v_cvt_i16_f16_e64": [0, 3, 4], "v_cvt_i16_f16_sdw": [0, 3, 4], "v_cvt_i32_f32": [0, 2, 3, 4], "v_cvt_i32_f32_dpp": [0, 3, 4], "v_cvt_i32_f32_e64": [0, 2, 3, 4], "v_cvt_i32_f32_sdw": [0, 3, 4], "v_cvt_i32_f64": [0, 2, 3, 4], "v_cvt_i32_f64_e64": [0, 2, 3, 4], "v_cvt_norm_i16_f16": [0, 4], "v_cvt_norm_i16_f16_dpp": [0, 4], "v_cvt_norm_i16_f16_e64": [0, 4], "v_cvt_norm_i16_f16_sdw": [0, 4], "v_cvt_norm_u16_f16": [0, 4], "v_cvt_norm_u16_f16_dpp": [0, 4], "v_cvt_norm_u16_f16_e64": [0, 4], "v_cvt_norm_u16_f16_sdw": [0, 4], "v_cvt_off_f32_i4": [0, 2, 3, 4], "v_cvt_off_f32_i4_dpp": [0, 3, 4], "v_cvt_off_f32_i4_e64": [0, 2, 3, 4], "v_cvt_off_f32_i4_sdw": [0, 3, 4], "v_cvt_pk_i16_i32": [0, 2, 3, 4], "v_cvt_pk_i16_i32_e64": 2, "v_cvt_pk_u16_u32": [0, 2, 3, 4], "v_cvt_pk_u16_u32_e64": 2, "v_cvt_pk_u8_f32": [0, 2, 3, 4], "v_cvt_pkaccum_u8_f32": [2, 3, 4], "v_cvt_pkaccum_u8_f32_e64": 2, "v_cvt_pknorm_i16_f16": [0, 4], "v_cvt_pknorm_i16_f32": [0, 2, 3, 4], "v_cvt_pknorm_i16_f32_e64": 2, "v_cvt_pknorm_u16_f16": [0, 4], "v_cvt_pknorm_u16_f32": [0, 2, 3, 4], "v_cvt_pknorm_u16_f32_e64": 2, "v_cvt_pkrtz_f16_f32": [0, 2, 3, 4], "v_cvt_pkrtz_f16_f32_e64": [0, 2], "v_cvt_rpi_i32_f32": [0, 2, 3, 4], "v_cvt_rpi_i32_f32_dpp": [0, 3, 4], "v_cvt_rpi_i32_f32_e64": [0, 2, 3, 4], "v_cvt_rpi_i32_f32_sdw": [0, 3, 4], "v_cvt_u16_f16": [0, 3, 4], "v_cvt_u16_f16_dpp": [0, 3, 4], "v_cvt_u16_f16_e64": [0, 3, 4], "v_cvt_u16_f16_sdw": [0, 3, 4], "v_cvt_u32_f32": [0, 2, 3, 4], "v_cvt_u32_f32_dpp": [0, 3, 4], "v_cvt_u32_f32_e64": [0, 2, 3, 4], "v_cvt_u32_f32_sdw": [0, 3, 4], "v_cvt_u32_f64": [0, 2, 3, 4], "v_cvt_u32_f64_e64": [0, 2, 3, 4], "v_div_fixup_f16": [0, 3, 4], "v_div_fixup_f32": [0, 2, 3, 4], "v_div_fixup_f64": [0, 2, 3, 4], "v_div_fixup_legacy_f16": 4, "v_div_fmas_f32": [0, 2, 3, 4], "v_div_fmas_f64": [0, 2, 3, 4], "v_div_scale_f32": [0, 2, 3, 4], "v_div_scale_f64": [0, 2, 3, 4], "v_dot2_f32_f16": [1, 7, 8], "v_dot2_i32_i16": [1, 7, 8], "v_dot2_u32_u16": [1, 7, 8], "v_dot2c_f32_f16": [1, 8], "v_dot2c_f32_f16_dpp": [1, 8], "v_dot2c_i32_i16": 8, "v_dot2c_i32_i16_dpp": 8, "v_dot4_i32_i8": [1, 7, 8], "v_dot4_u32_u8": [1, 7, 8], "v_dot4c_i32_i8": [1, 8], "v_dot4c_i32_i8_dpp": [1, 8], "v_dot8_i32_i4": [1, 7, 8], "v_dot8_u32_u4": [1, 7, 8], "v_dot8c_i32_i4": 8, "v_dot8c_i32_i4_dpp": 8, "v_exp_f16": [0, 3, 4], "v_exp_f16_dpp": [0, 3, 4], "v_exp_f16_e64": [0, 3, 4], "v_exp_f16_sdw": [0, 3, 4], "v_exp_f32": [0, 2, 3, 4], "v_exp_f32_dpp": [0, 3, 4], "v_exp_f32_e64": [0, 2, 3, 4], "v_exp_f32_sdw": [0, 3, 4], "v_exp_legacy_f32": [2, 3, 4], "v_exp_legacy_f32_dpp": [3, 4], "v_exp_legacy_f32_e64": [2, 3, 4], "v_exp_legacy_f32_sdw": [3, 4], "v_ffbh_i32": [0, 2, 3, 4], "v_ffbh_i32_dpp": [0, 3, 4], "v_ffbh_i32_e64": [0, 2, 3, 4], "v_ffbh_i32_sdw": [0, 3, 4], "v_ffbh_u32": [0, 2, 3, 4], "v_ffbh_u32_dpp": [0, 3, 4], "v_ffbh_u32_e64": [0, 2, 3, 4], "v_ffbh_u32_sdw": [0, 3, 4], "v_ffbl_b32": [0, 2, 3, 4], "v_ffbl_b32_dpp": [0, 3, 4], "v_ffbl_b32_e64": [0, 2, 3, 4], "v_ffbl_b32_sdwa": [0, 3, 4], "v_floor_f16": [0, 3, 4], "v_floor_f16_dpp": [0, 3, 4], "v_floor_f16_e64": [0, 3, 4], "v_floor_f16_sdw": [0, 3, 4], "v_floor_f32": [0, 2, 3, 4], "v_floor_f32_dpp": [0, 3, 4], "v_floor_f32_e32": 466, "v_floor_f32_e64": [0, 2, 3, 4], "v_floor_f32_sdw": [0, 3, 4], "v_floor_f64": [0, 2, 3, 4], "v_floor_f64_e64": [0, 2, 3, 4], "v_fma_f16": [0, 3, 4], "v_fma_f32": [0, 2, 3, 4], "v_fma_f64": [0, 2, 3, 4], "v_fma_legacy_f16": 4, "v_fma_mix": 464, "v_fma_mix_f32": [0, 6, 7, 8], "v_fma_mixhi_f16": [0, 6, 7, 8], "v_fma_mixlo_f16": [0, 6, 7, 8], "v_fmaak_f16": 0, "v_fmaak_f32": 0, "v_fmac_f16": 0, "v_fmac_f16_dpp": 0, "v_fmac_f16_e64": 0, "v_fmac_f32": [0, 7, 8], "v_fmac_f32_dpp": [0, 7, 8], "v_fmac_f32_e64": [0, 7, 8], "v_fmamk_f16": 0, "v_fmamk_f32": 0, "v_fract_f16": [0, 3, 4], "v_fract_f16_dpp": [0, 3, 4], "v_fract_f16_e64": [0, 3, 4], "v_fract_f16_sdw": [0, 3, 4], "v_fract_f32": [0, 2, 3, 4, 466], "v_fract_f32_dpp": [0, 3, 4], "v_fract_f32_e64": [0, 2, 3, 4], "v_fract_f32_sdw": [0, 3, 4], "v_fract_f64": [0, 2, 3, 4], "v_fract_f64_e64": [0, 2, 3, 4], "v_frexp_exp_i16_f16": [0, 3, 4], "v_frexp_exp_i16_f16_dpp": [0, 3, 4], "v_frexp_exp_i16_f16_e64": [0, 3, 4], "v_frexp_exp_i16_f16_sdw": [0, 3, 4], "v_frexp_exp_i32_f32": [0, 2, 3, 4], "v_frexp_exp_i32_f32_dpp": [0, 3, 4], "v_frexp_exp_i32_f32_e64": [0, 2, 3, 4], "v_frexp_exp_i32_f32_sdw": [0, 3, 4], "v_frexp_exp_i32_f64": [0, 2, 3, 4], "v_frexp_exp_i32_f64_e64": [0, 2, 3, 4], "v_frexp_mant_f16": [0, 3, 4], "v_frexp_mant_f16_dpp": [0, 3, 4], "v_frexp_mant_f16_e64": [0, 3, 4], "v_frexp_mant_f16_sdw": [0, 3, 4], "v_frexp_mant_f32": [0, 2, 3, 4], "v_frexp_mant_f32_dpp": [0, 3, 4], "v_frexp_mant_f32_e64": [0, 2, 3, 4], "v_frexp_mant_f32_sdw": [0, 3, 4], "v_frexp_mant_f64": [0, 2, 3, 4], "v_frexp_mant_f64_e64": [0, 2, 3, 4], "v_interp_mov_f32": [0, 2, 3, 4], "v_interp_mov_f32_e64": [0, 3, 4], "v_interp_p1_f32": [0, 2, 3, 4, 20, 121, 206, 363], "v_interp_p1_f32_e64": [0, 3, 4], "v_interp_p1ll_f16": [0, 3, 4], "v_interp_p1lv_f16": [0, 3, 4], "v_interp_p2_f16": [0, 3, 4], "v_interp_p2_f32": [0, 2, 3, 4], "v_interp_p2_f32_e64": [0, 3, 4], "v_interp_p2_legacy_f16": 4, "v_ldexp_f16": [0, 3, 4], "v_ldexp_f16_dpp": [0, 3, 4], "v_ldexp_f16_e64": [0, 3, 4], "v_ldexp_f16_sdw": [0, 3, 4], "v_ldexp_f32": [0, 2, 3, 4], "v_ldexp_f32_e64": 2, "v_ldexp_f64": [0, 2, 3, 4], "v_lerp_u8": [0, 2, 3, 4], "v_log_clamp_f32": 2, "v_log_clamp_f32_e64": 2, "v_log_f16": [0, 3, 4], "v_log_f16_dpp": [0, 3, 4], "v_log_f16_e64": [0, 3, 4], "v_log_f16_sdw": [0, 3, 4], "v_log_f32": [0, 2, 3, 4], "v_log_f32_dpp": [0, 3, 4], "v_log_f32_e64": [0, 2, 3, 4], "v_log_f32_sdw": [0, 3, 4], "v_log_legacy_f32": [2, 3, 4], "v_log_legacy_f32_dpp": [3, 4], "v_log_legacy_f32_e64": [2, 3, 4], "v_log_legacy_f32_sdw": [3, 4], "v_lshl_add_u32": [0, 4], "v_lshl_b32": 2, "v_lshl_b32_e64": 2, "v_lshl_b64": 2, "v_lshl_or_b32": [0, 4], "v_lshlrev_b16": [0, 3, 4], "v_lshlrev_b16_dpp": [3, 4], "v_lshlrev_b16_e64": [3, 4], "v_lshlrev_b16_sdw": [3, 4], "v_lshlrev_b32": [0, 2, 3, 4], "v_lshlrev_b32_dpp": [0, 3, 4], "v_lshlrev_b32_e64": [0, 2, 3, 4], "v_lshlrev_b32_sdw": [0, 3, 4], "v_lshlrev_b64": [0, 3, 4], "v_lshr_b32": 2, "v_lshr_b32_e64": 2, "v_lshr_b64": 2, "v_lshrrev_b16": [0, 3, 4], "v_lshrrev_b16_dpp": [3, 4], "v_lshrrev_b16_e64": [3, 4], "v_lshrrev_b16_sdw": [3, 4], "v_lshrrev_b32": [0, 2, 3, 4], "v_lshrrev_b32_dpp": [0, 3, 4], "v_lshrrev_b32_e64": [0, 2, 3, 4], "v_lshrrev_b32_sdw": [0, 3, 4], "v_lshrrev_b64": [0, 3, 4], "v_mac_f16": [3, 4], "v_mac_f16_dpp": [3, 4], "v_mac_f16_e64": [3, 4], "v_mac_f16_sdw": 3, "v_mac_f32": [0, 2, 3, 4], "v_mac_f32_dpp": [0, 3, 4], "v_mac_f32_e64": [0, 2, 3, 4], "v_mac_f32_sdw": 3, "v_mac_legacy_f32": [0, 2], "v_mac_legacy_f32_e64": [0, 2], "v_mad_f16": [3, 4], "v_mad_f32": [0, 2, 3, 4], "v_mad_i16": [0, 3, 4], "v_mad_i32_i16": [0, 4], "v_mad_i32_i24": [0, 2, 3, 4], "v_mad_i64_i32": [0, 2, 3, 4], "v_mad_legacy_f16": 4, "v_mad_legacy_f32": [0, 2, 3, 4], "v_mad_legacy_i16": 4, "v_mad_legacy_u16": 4, "v_mad_mix": 464, "v_mad_mix_f32": 5, "v_mad_mixhi_f16": 5, "v_mad_mixlo_f16": 5, "v_mad_u16": [0, 3, 4], "v_mad_u32_u16": [0, 4], "v_mad_u32_u24": [0, 2, 3, 4], "v_mad_u64_u32": [0, 2, 3, 4], "v_madak_f16": [3, 4], "v_madak_f32": [0, 2, 3, 4], "v_madmk_f16": [3, 4], "v_madmk_f32": [0, 2, 3, 4], "v_max3_f16": [0, 4], "v_max3_f32": [0, 2, 3, 4, 463], "v_max3_i16": [0, 4, 463], "v_max3_i32": [0, 2, 3, 4], "v_max3_u16": [0, 4], "v_max3_u32": [0, 2, 3, 4], "v_max_f16": [0, 3, 4, 466], "v_max_f16_dpp": [0, 3, 4], "v_max_f16_e32": 466, "v_max_f16_e64": [0, 3, 4], "v_max_f16_sdw": [0, 3, 4], "v_max_f32": [0, 2, 3, 4], "v_max_f32_dpp": [0, 3, 4], "v_max_f32_e64": [0, 2, 3, 4], "v_max_f32_sdw": [0, 3, 4], "v_max_f64": [0, 2, 3, 4], "v_max_i16": [0, 3, 4], "v_max_i16_dpp": [3, 4], "v_max_i16_e64": [3, 4], "v_max_i16_sdw": [3, 4], "v_max_i32": [0, 2, 3, 4], "v_max_i32_dpp": [0, 3, 4], "v_max_i32_e64": [0, 2, 3, 4], "v_max_i32_sdw": [0, 3, 4], "v_max_legacy_f32": 2, "v_max_legacy_f32_e64": 2, "v_max_u16": [0, 3, 4], "v_max_u16_dpp": [3, 4], "v_max_u16_e64": [3, 4], "v_max_u16_sdw": [3, 4], "v_max_u32": [0, 2, 3, 4], "v_max_u32_dpp": [0, 3, 4], "v_max_u32_e64": [0, 2, 3, 4], "v_max_u32_sdw": [0, 3, 4], "v_mbcnt_hi_u32_b32": [0, 2, 3, 4], "v_mbcnt_hi_u32_b32_e64": 2, "v_mbcnt_lo_u32_b32": [0, 2, 3, 4], "v_mbcnt_lo_u32_b32_e64": 2, "v_med3_f16": [0, 4], "v_med3_f32": [0, 2, 3, 4], "v_med3_i16": [0, 4], "v_med3_i32": [0, 2, 3, 4], "v_med3_u16": [0, 4], "v_med3_u32": [0, 2, 3, 4], "v_mfma_f32_16x16x16f16": 8, "v_mfma_f32_16x16x1f32": 8, "v_mfma_f32_16x16x2bf16": 8, "v_mfma_f32_16x16x4f16": 8, "v_mfma_f32_16x16x4f32": 8, "v_mfma_f32_16x16x8bf16": 8, "v_mfma_f32_32x32x1f32": 8, "v_mfma_f32_32x32x2bf16": 8, "v_mfma_f32_32x32x2f32": 8, "v_mfma_f32_32x32x4bf16": 8, "v_mfma_f32_32x32x4f16": 8, "v_mfma_f32_32x32x8f16": 8, "v_mfma_f32_4x4x1f32": 8, "v_mfma_f32_4x4x2bf16": 8, "v_mfma_f32_4x4x4f16": 8, "v_mfma_i32_16x16x16i8": 8, "v_mfma_i32_16x16x4i8": 8, "v_mfma_i32_32x32x4i8": 8, "v_mfma_i32_32x32x8i8": 8, "v_mfma_i32_4x4x4i8": 8, "v_min3_f16": [0, 4], "v_min3_f32": [0, 2, 3, 4], "v_min3_i16": [0, 4], "v_min3_i32": [0, 2, 3, 4], "v_min3_u16": [0, 4], "v_min3_u32": [0, 2, 3, 4], "v_min_f16": [0, 3, 4], "v_min_f16_dpp": [0, 3, 4], "v_min_f16_e64": [0, 3, 4], "v_min_f16_sdw": [0, 3, 4], "v_min_f32": [0, 2, 3, 4], "v_min_f32_dpp": [0, 3, 4], "v_min_f32_e64": [0, 2, 3, 4], "v_min_f32_sdw": [0, 3, 4], "v_min_f64": [0, 2, 3, 4], "v_min_i16": [0, 3, 4], "v_min_i16_dpp": [3, 4], "v_min_i16_e64": [3, 4], "v_min_i16_sdw": [3, 4], "v_min_i32": [0, 2, 3, 4], "v_min_i32_dpp": [0, 3, 4], "v_min_i32_e64": [0, 2, 3, 4], "v_min_i32_sdw": [0, 3, 4], "v_min_legacy_f32": 2, "v_min_legacy_f32_e64": 2, "v_min_u16": [0, 3, 4], "v_min_u16_dpp": [3, 4], "v_min_u16_e64": [3, 4], "v_min_u16_sdw": [3, 4], "v_min_u32": [0, 2, 3, 4, 466], "v_min_u32_dpp": [0, 3, 4], "v_min_u32_e64": [0, 2, 3, 4], "v_min_u32_sdw": [0, 3, 4], "v_mov_b32": [0, 2, 3, 4, 466], "v_mov_b32_dpp": [0, 3, 4], "v_mov_b32_e32": 466, "v_mov_b32_e64": [0, 2, 3, 4], "v_mov_b32_sdw": [0, 3, 4], "v_movreld_b32": [0, 2, 3], "v_movreld_b32_dpp": 0, "v_movreld_b32_e64": [0, 2, 3], "v_movreld_b32_sdw": 0, "v_movrels_b32": [0, 2, 3], "v_movrels_b32_dpp": 0, "v_movrels_b32_e64": [0, 2, 3], "v_movrels_b32_sdw": 0, "v_movrelsd_2_b32": 0, "v_movrelsd_2_b32_dpp": 0, "v_movrelsd_2_b32_e64": 0, "v_movrelsd_2_b32_sdw": 0, "v_movrelsd_b32": [0, 2, 3], "v_movrelsd_b32_dpp": 0, "v_movrelsd_b32_e64": [0, 2, 3], "v_movrelsd_b32_sdw": 0, "v_mqsad_pk_u16_u8": [0, 2, 3, 4], "v_mqsad_u32_u8": [0, 2, 3, 4], "v_msad_u8": [0, 2, 3, 4], "v_mul_f16": [0, 3, 4], "v_mul_f16_dpp": [0, 3, 4], "v_mul_f16_e64": [0, 3, 4], "v_mul_f16_sdw": [0, 3, 4], "v_mul_f32": [0, 2, 3, 4], "v_mul_f32_dpp": [0, 3, 4], "v_mul_f32_e64": [0, 2, 3, 4], "v_mul_f32_sdw": [0, 3, 4], "v_mul_f64": [0, 2, 3, 4], "v_mul_hi_i32": [0, 2, 3, 4], "v_mul_hi_i32_i24": [0, 2, 3, 4], "v_mul_hi_i32_i24_dpp": [0, 3, 4], "v_mul_hi_i32_i24_e64": [0, 2, 3, 4], "v_mul_hi_i32_i24_sdw": [0, 3, 4], "v_mul_hi_u32": [0, 2, 3, 4], "v_mul_hi_u32_u24": [0, 2, 3, 4], "v_mul_hi_u32_u24_dpp": [0, 3, 4], "v_mul_hi_u32_u24_e64": [0, 2, 3, 4], "v_mul_hi_u32_u24_sdw": [0, 3, 4], "v_mul_i32_i24": [0, 2, 3, 4], "v_mul_i32_i24_dpp": [0, 3, 4], "v_mul_i32_i24_e32": 466, "v_mul_i32_i24_e64": [0, 2, 3, 4, 466], "v_mul_i32_i24_sdw": [0, 3, 4], "v_mul_legacy_f32": [0, 2, 3, 4], "v_mul_legacy_f32_dpp": [0, 3, 4], "v_mul_legacy_f32_e64": [0, 2, 3, 4], "v_mul_legacy_f32_sdw": [0, 3, 4], "v_mul_lo_i32": 2, "v_mul_lo_u16": [0, 3, 4], "v_mul_lo_u16_dpp": [3, 4], "v_mul_lo_u16_e64": [3, 4], "v_mul_lo_u16_sdw": [3, 4], "v_mul_lo_u32": [0, 2, 3, 4], "v_mul_u32_u24": [0, 2, 3, 4], "v_mul_u32_u24_dpp": [0, 3, 4], "v_mul_u32_u24_e64": [0, 2, 3, 4], "v_mul_u32_u24_sdw": [0, 3, 4], "v_mullit_f32": [0, 2], "v_nop": [0, 2, 3, 4, 466], "v_nop_e64": [0, 2, 3, 4], "v_not_b32": [0, 2, 3, 4], "v_not_b32_dpp": [0, 3, 4], "v_not_b32_e64": [0, 2, 3, 4], "v_not_b32_sdw": [0, 3, 4], "v_or3_b32": [0, 4], "v_or_b32": [0, 2, 3, 4], "v_or_b32_dpp": [0, 3, 4], "v_or_b32_e64": [0, 2, 3, 4], "v_or_b32_sdw": [0, 3, 4], "v_pack_b32_f16": [0, 4], "v_perm_b32": [0, 3, 4], "v_permlane16_b32": 0, "v_permlanex16_b32": 0, "v_pipeflush": 0, "v_pipeflush_e64": 0, "v_pk_add_f16": [0, 4, 463], "v_pk_add_i16": [0, 4, 463], "v_pk_add_u16": [0, 4, 463], "v_pk_ashrrev_i16": [0, 4], "v_pk_fma_f16": [0, 4], "v_pk_fmac_f16": [0, 8], "v_pk_lshlrev_b16": [0, 4], "v_pk_lshrrev_b16": [0, 4], "v_pk_mad_i16": [0, 4], "v_pk_mad_u16": [0, 4], "v_pk_max_f16": [0, 4], "v_pk_max_i16": [0, 4], "v_pk_max_u16": [0, 4], "v_pk_min_f16": [0, 4], "v_pk_min_i16": [0, 4], "v_pk_min_u16": [0, 4], "v_pk_mul_f16": [0, 4], "v_pk_mul_lo_u16": [0, 4], "v_pk_sub_i16": [0, 4], "v_pk_sub_u16": [0, 4], "v_qsad_pk_u16_u8": [0, 2, 3, 4], "v_rcp_clamp_f32": 2, "v_rcp_clamp_f32_e64": 2, "v_rcp_clamp_f64": 2, "v_rcp_clamp_f64_e64": 2, "v_rcp_f16": [0, 3, 4], "v_rcp_f16_dpp": [0, 3, 4], "v_rcp_f16_e64": [0, 3, 4], "v_rcp_f16_sdwa": [0, 3, 4], "v_rcp_f32": [0, 2, 3, 4], "v_rcp_f32_dpp": [0, 3, 4], "v_rcp_f32_e64": [0, 2, 3, 4], "v_rcp_f32_sdwa": [0, 3, 4], "v_rcp_f64": [0, 2, 3, 4], "v_rcp_f64_e64": [0, 2, 3, 4], "v_rcp_iflag_f32": [0, 2, 3, 4], "v_rcp_iflag_f32_dpp": [0, 3, 4], "v_rcp_iflag_f32_e64": [0, 2, 3, 4], "v_rcp_iflag_f32_sdw": [0, 3, 4], "v_rcp_legacy_f32": 2, "v_rcp_legacy_f32_e64": 2, "v_readfirstlane_b32": [0, 2, 3, 4], "v_readlane_b32": [0, 2, 3, 4], "v_reg": 483, "v_rndne_f16": [0, 3, 4], "v_rndne_f16_dpp": [0, 3, 4], "v_rndne_f16_e64": [0, 3, 4], "v_rndne_f16_sdw": [0, 3, 4], "v_rndne_f32": [0, 2, 3, 4], "v_rndne_f32_dpp": [0, 3, 4], "v_rndne_f32_e64": [0, 2, 3, 4], "v_rndne_f32_sdw": [0, 3, 4], "v_rndne_f64": [0, 2, 3, 4], "v_rndne_f64_e64": [0, 2, 3, 4], "v_rsq_clamp_f32": 2, "v_rsq_clamp_f32_e64": 2, "v_rsq_clamp_f64": 2, "v_rsq_clamp_f64_e64": 2, "v_rsq_f16": [0, 3, 4], "v_rsq_f16_dpp": [0, 3, 4], "v_rsq_f16_e64": [0, 3, 4], "v_rsq_f16_sdwa": [0, 3, 4], "v_rsq_f32": [0, 2, 3, 4], "v_rsq_f32_dpp": [0, 3, 4], "v_rsq_f32_e64": [0, 2, 3, 4], "v_rsq_f32_sdwa": [0, 3, 4], "v_rsq_f64": [0, 2, 3, 4], "v_rsq_f64_e64": [0, 2, 3, 4], "v_rsq_legacy_f32": 2, "v_rsq_legacy_f32_e64": 2, "v_sad_hi_u8": [0, 2, 3, 4], "v_sad_u16": [0, 2, 3, 4], "v_sad_u32": [0, 2, 3, 4], "v_sad_u8": [0, 2, 3, 4], "v_sat_pk_u8_i16": [0, 4], "v_sat_pk_u8_i16_dpp": [0, 4], "v_sat_pk_u8_i16_e64": [0, 4], "v_sat_pk_u8_i16_sdw": [0, 4], "v_screen_partition_4se_b32": 4, "v_screen_partition_4se_b32_dpp": 4, "v_screen_partition_4se_b32_e64": 4, "v_screen_partition_4se_b32_sdw": 4, "v_sin_f16": [0, 3, 4], "v_sin_f16_dpp": [0, 3, 4], "v_sin_f16_e64": [0, 3, 4], "v_sin_f16_sdw": [0, 3, 4], "v_sin_f32": [0, 2, 3, 4, 466], "v_sin_f32_dpp": [0, 3, 4], "v_sin_f32_e64": [0, 2, 3, 4], "v_sin_f32_sdw": [0, 3, 4], "v_sqrt_f16": [0, 3, 4], "v_sqrt_f16_dpp": [0, 3, 4], "v_sqrt_f16_e64": [0, 3, 4], "v_sqrt_f16_sdwa": [0, 3, 4], "v_sqrt_f32": [0, 2, 3, 4], "v_sqrt_f32_dpp": [0, 3, 4], "v_sqrt_f32_e64": [0, 2, 3, 4], "v_sqrt_f32_sdwa": [0, 3, 4], "v_sqrt_f64": [0, 2, 3, 4], "v_sqrt_f64_e64": [0, 2, 3, 4], "v_sub_co_ci_u32": 0, "v_sub_co_ci_u32_dpp": 0, "v_sub_co_ci_u32_e64": 0, "v_sub_co_ci_u32_sdw": 0, "v_sub_co_u32": [0, 4], "v_sub_co_u32_dpp": 4, "v_sub_co_u32_e64": 4, "v_sub_co_u32_sdw": 4, "v_sub_f16": [0, 3, 4], "v_sub_f16_dpp": [0, 3, 4], "v_sub_f16_e64": [0, 3, 4], "v_sub_f16_sdw": [0, 3, 4], "v_sub_f32": [0, 2, 3, 4], "v_sub_f32_dpp": [0, 3, 4], "v_sub_f32_e64": [0, 2, 3, 4], "v_sub_f32_sdw": [0, 3, 4], "v_sub_i16": 4, "v_sub_i32": [2, 4], "v_sub_i32_e64": 2, "v_sub_nc_i16": 0, "v_sub_nc_i32": 0, "v_sub_nc_u16": 0, "v_sub_nc_u32": 0, "v_sub_nc_u32_dpp": 0, "v_sub_nc_u32_e64": 0, "v_sub_nc_u32_sdw": 0, "v_sub_u16": [3, 4], "v_sub_u16_dpp": [3, 4], "v_sub_u16_e64": [3, 4], "v_sub_u16_sdw": [3, 4], "v_sub_u32": [3, 4], "v_sub_u32_dpp": [3, 4], "v_sub_u32_e64": [3, 4], "v_sub_u32_sdw": [3, 4], "v_subb_co_u32": 4, "v_subb_co_u32_dpp": 4, "v_subb_co_u32_e64": 4, "v_subb_co_u32_sdw": 4, "v_subb_u32": [2, 3], "v_subb_u32_dpp": 3, "v_subb_u32_e64": [2, 3], "v_subb_u32_sdw": 3, "v_subbrev_co_u32": 4, "v_subbrev_co_u32_dpp": 4, "v_subbrev_co_u32_e64": 4, "v_subbrev_co_u32_sdw": 4, "v_subbrev_u32": [2, 3], "v_subbrev_u32_dpp": 3, "v_subbrev_u32_e64": [2, 3], "v_subbrev_u32_sdw": 3, "v_subrev_co_ci_u32": 0, "v_subrev_co_ci_u32_dpp": 0, "v_subrev_co_ci_u32_e64": 0, "v_subrev_co_ci_u32_sdw": 0, "v_subrev_co_u32": [0, 4], "v_subrev_co_u32_dpp": 4, "v_subrev_co_u32_e64": 4, "v_subrev_co_u32_sdw": 4, "v_subrev_f16": [0, 3, 4], "v_subrev_f16_dpp": [0, 3, 4], "v_subrev_f16_e64": [0, 3, 4], "v_subrev_f16_sdw": [0, 3, 4], "v_subrev_f32": [0, 2, 3, 4], "v_subrev_f32_dpp": [0, 3, 4], "v_subrev_f32_e64": [0, 2, 3, 4], "v_subrev_f32_sdw": [0, 3, 4], "v_subrev_i32": 2, "v_subrev_i32_e64": 2, "v_subrev_nc_u32": 0, "v_subrev_nc_u32_dpp": 0, "v_subrev_nc_u32_e64": 0, "v_subrev_nc_u32_sdw": 0, "v_subrev_u16": [3, 4], "v_subrev_u16_dpp": [3, 4], "v_subrev_u16_e64": [3, 4], "v_subrev_u16_sdw": [3, 4], "v_subrev_u32": [3, 4], "v_subrev_u32_dpp": [3, 4], "v_subrev_u32_e64": [3, 4], "v_subrev_u32_sdw": [3, 4], "v_swap_b32": [0, 4], "v_swaprel_b32": 0, "v_trig_preop_f64": [0, 2, 3, 4], "v_trunc_f16": [0, 3, 4], "v_trunc_f16_dpp": [0, 3, 4], "v_trunc_f16_e64": [0, 3, 4], "v_trunc_f16_sdw": [0, 3, 4], "v_trunc_f32": [0, 2, 3, 4], "v_trunc_f32_dpp": [0, 3, 4], "v_trunc_f32_e64": [0, 2, 3, 4], "v_trunc_f32_sdw": [0, 3, 4], "v_trunc_f64": [0, 2, 3, 4], "v_trunc_f64_e64": [0, 2, 3, 4], "v_writelane_b32": [0, 2, 3, 4], "v_xad_u32": [0, 4], "v_xnor_b32": [0, 7, 8], "v_xnor_b32_dpp": [0, 7, 8], "v_xnor_b32_e64": [0, 7, 8], "v_xnor_b32_sdw": [0, 7, 8], "v_xor3_b32": 0, "v_xor_b32": [0, 2, 3, 4], "v_xor_b32_dpp": [0, 3, 4], "v_xor_b32_e64": [0, 2, 3, 4], "v_xor_b32_sdw": [0, 3, 4], "va_list": 579, "vacat": 621, "vaddr": [0, 2, 3, 4, 8, 64, 65, 345, 407, 408], "vadv": 640, "vagu": [142, 538], "val": [470, 473, 486, 530, 534, 576, 579, 592, 609, 628, 636, 646, 669, 670, 671, 672, 673, 674, 675, 676], "val0": [534, 579], "val1": [534, 579, 581, 634, 635, 636], "val1l": 579, "val2": [534, 579, 581, 634, 635, 636], "val29": 534, "val3": [579, 635], "val7": 579, "val_": 685, "val_express": 461, "val_offset": 461, "val_success": 579, "valb": 592, "valc": 592, "valeur": 142, "valgrind": [488, 491, 574, 641], "valid": [54, 145, 244, 397, 461, 464, 465, 466, 473, 474, 481, 483, 486, 487, 489, 492, 493, 498, 500, 515, 517, 521, 522, 525, 529, 530, 538, 540, 543, 546, 548, 550, 555, 558, 572, 579, 580, 581, 583, 584, 591, 592, 599, 601, 604, 607, 609, 611, 625, 626, 628, 629, 630, 632, 636, 643, 647, 648, 650, 651, 669, 671, 680], "validat": [466, 477, 480, 505, 530, 538, 549, 572, 626, 641, 652, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "validated": [54, 145, 244, 397, 572, 581, 632, 670, 681], "validating": [530, 620], "validator": 581, "validity": 559, "validsiz": 636, "valn": 636, "valu": [24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 43, 45, 46, 47, 48, 49, 54, 60, 78, 98, 114, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 145, 162, 187, 201, 209, 210, 211, 212, 213, 218, 219, 221, 233, 235, 236, 237, 238, 239, 240, 244, 250, 266, 289, 303, 335, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 386, 388, 389, 390, 391, 392, 393, 397, 403, 421, 444, 460, 464, 467, 469, 470, 472, 473, 475, 478, 479, 481, 482, 483, 486, 487, 488, 491, 492, 493, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 510, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 526, 527, 528, 529, 534, 535, 536, 538, 539, 540, 541, 542, 545, 547, 550, 552, 554, 555, 556, 557, 558, 559, 570, 572, 573, 576, 577, 578, 580, 583, 589, 590, 592, 593, 596, 597, 599, 600, 601, 602, 604, 605, 610, 616, 617, 620, 622, 624, 628, 630, 634, 635, 637, 640, 641, 643, 645, 646, 647, 648, 649, 651, 654, 655, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 688], "valuabl": [485, 491, 533, 538, 560, 566, 614, 640], "value1": 625, "value2": [625, 626], "value_alignment": 579, "value_desc": 530, "value_kind": [466, 579], "value_loaded": 579, "value_typ": [466, 652], "valuecol": 577, "valued": [530, 579], "valuedisallowed": 530, "valuefield": 634, "valuekind": [466, 486], "valuelist": 636, "valuelistn": 636, "valueoptional": 530, "valuerequired": 530, "valuesuffix": 636, "valuet": 609, "valuetracking": [579, 630], "valuetyp": [466, 483, 541, 637, 646], "vanill": 531, "var": [466, 470, 482, 487, 504, 516, 591, 625, 634, 636, 674, 675, 676, 685], "var1": 482, "var_arg_function_typ": 681, "var_local": 555, "var_nam": [482, 683, 684, 685], "varang": 466, "vararg": [473, 482, 483, 579, 609, 670, 681], "varb": 634, "vardecl": 486, "varexpr": [674, 675, 676, 685], "varexprast": [674, 675, 676], "vari": [463, 470, 487, 513, 530, 540, 542, 554, 555, 557, 562, 575, 579, 583, 601, 607, 609, 628, 631, 635, 636, 641, 646, 648, 679, 680, 681, 682, 683, 684, 685], "variability": 471, "variabl": [461, 466, 468, 469, 470, 478, 479, 491, 494, 495, 497, 499, 504, 506, 512, 516, 517, 527, 529, 530, 532, 534, 535, 540, 543, 545, 547, 548, 549, 550, 552, 565, 566, 574, 575, 580, 583, 584, 589, 590, 591, 592, 594, 595, 596, 597, 600, 601, 604, 609, 618, 622, 626, 628, 629, 630, 634, 635, 639, 640, 641, 643, 644, 646, 648, 649, 650, 652, 654, 668, 669, 670, 671, 672, 673, 675, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687], "variable_nam": [481, 614], "variable_op": 636, "variableexprast": [669, 670, 671, 672, 673, 674, 675, 676], "variadic": [579, 609], "variadicopsaredef": 636, "variat": [469, 471, 483, 491, 540, 581, 614, 627, 631, 645, 646, 654], "varied": [484, 581, 623], "variet": 547, "variety": [469, 470, 473, 479, 482, 483, 495, 532, 538, 540, 547, 550, 568, 580, 581, 609, 612, 618, 623, 625, 628, 634, 636, 670, 671, 672, 673, 677, 681, 682, 683, 684, 686], "various": [465, 469, 470, 473, 477, 478, 481, 483, 486, 488, 508, 513, 517, 528, 532, 533, 535, 537, 540, 545, 546, 550, 559, 575, 577, 579, 582, 584, 585, 590, 592, 593, 595, 596, 597, 604, 605, 609, 611, 614, 617, 618, 620, 622, 625, 626, 634, 635, 636, 637, 640, 641, 646, 647, 648, 649, 650, 652, 668, 669, 671, 672, 676, 679, 680, 682, 683], "varnam": [672, 673, 674, 675, 676, 683, 685], "vary": [120, 205, 362, 461, 466, 473, 477, 483, 534, 543, 550, 555, 579, 588, 593, 601, 609, 631, 677, 686], "varying": [483, 609, 636], "vasileios": 616, "vasrc0": 8, "vasrc1": 8, "vbr": 497, "vbr4": 473, "vbr5": 473, "vbr6": [473, 620], "vbr7": 620, "vbr8": [473, 620], "vc": 581, "vc110": 602, "vc140": 602, "vc2": 602, "vc4": 602, "vc41": [597, 602], "vc50": 602, "vc70": 602, "vc70dep": 602, "vc80": 602, "vc98": 602, "vcall": 480, "vcc": [0, 2, 3, 4, 9, 10, 11, 12, 21, 23, 34, 35, 55, 56, 57, 64, 65, 68, 69, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 115, 116, 122, 146, 147, 156, 157, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 207, 245, 246, 256, 257, 260, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 306, 307, 311, 312, 318, 319, 320, 321, 322, 341, 345, 346, 347, 348, 350, 351, 364, 366, 377, 378, 398, 399, 400, 407, 408, 411, 412, 415, 416, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 466], "vcc_32": 466, "vcc_64": 466, "vcc_hi": 465, "vcc_lo": [101, 465], "vccz": [9, 10, 11, 12, 55, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 93, 94, 146, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 180, 181, 183, 245, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 282, 283, 285, 306, 307, 311, 312, 318, 319, 320, 321, 322, 341, 346, 347, 348, 350, 351, 398, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 437, 438, 440], "vcsrevis": 481, "vdat": [0, 2, 3, 4, 8, 462], "vdata0": [0, 2, 3, 4], "vdata1": [0, 2, 3, 4], "vdst": [0, 1, 2, 3, 4, 5, 6, 7, 8, 462], "ve": [483, 486, 531, 538, 539, 545, 546, 548, 554, 579, 590, 608, 609, 611, 612, 621, 623, 630, 641, 652, 669, 671, 673, 674, 675, 676, 677, 679, 680, 684, 685, 686], "vec": [579, 609, 618], "vec0": 579, "vec01": 579, "vec012": 579, "vec0123": 579, "vec1": [579, 609], "vec2": [579, 609], "vec_splat": 580, "vec_type_hint": 466, "vector": [101, 114, 188, 201, 290, 303, 447, 460, 461, 465, 466, 472, 473, 483, 486, 513, 530, 549, 554, 557, 580, 591, 592, 607, 616, 618, 635, 643, 645, 646, 652, 669, 670, 671, 672, 673, 674, 675, 676, 677, 681, 685, 686], "vector_length": 579, "vector_redirect": 579, "vectoriz": [513, 549, 580, 618, 639, 644], "vectorize_width": 645, "vectorized": [545, 579, 615, 616, 642, 645], "vectorizer": [615, 645], "vectorizing": [579, 616, 642, 645], "vectorty": 579, "vectortyp": 609, "vectsiz": 636, "vectypehint": 466, "veg": 466, "vehicl": [482, 486], "vehiclemak": 486, "vehicletyp": 486, "vely": 483, "vend": 578, "vendor": [461, 486, 579, 612, 623, 626, 675], "vendor_and_architecture_nam": 466, "vendor_name_siz": 466, "venu": 621, "venv": 639, "ver60": 597, "verb": 486, "verbatim": [530, 608, 636, 646], "verbos": [487, 488, 489, 491, 504, 510, 516, 523, 527, 575, 585, 609, 614, 646, 652], "verbosity": [649, 650], "verd": 466, "verif": [466, 487, 530, 560, 579, 607, 622, 639, 643, 644], "verifi": [467, 477, 483, 489, 490, 560, 579, 581, 630, 648, 650, 670, 671, 672, 673, 674, 675, 676, 683], "verified": [487, 579, 628], "verify": [468, 480, 487, 489, 490, 497, 511, 513, 528, 538, 550, 572, 575, 579, 586, 602, 610, 611, 626, 627, 641, 648, 650, 673, 674, 675, 676, 681, 684, 685], "verify_arch": 511, "verifyfunct": [670, 671, 672, 673, 674, 675, 676], "verifying": [487, 504, 625], "verifypreservedanalys": 650, "vers": [470, 534, 575, 579, 601, 616, 630, 641], "version": [466, 467, 468, 469, 470, 473, 478, 481, 482, 483, 487, 489, 492, 493, 495, 497, 498, 499, 500, 504, 507, 509, 510, 511, 514, 515, 516, 521, 522, 523, 525, 526, 527, 529, 530, 531, 532, 533, 535, 538, 539, 541, 544, 545, 547, 550, 552, 555, 557, 559, 565, 567, 570, 571, 575, 579, 587, 590, 591, 592, 593, 597, 602, 604, 606, 608, 609, 611, 613, 614, 618, 620, 622, 623, 625, 628, 630, 632, 634, 639, 642, 645, 646, 648, 649, 650, 651, 653, 654, 670, 671, 672, 674, 675, 676, 681, 682, 683, 685, 686], "version_less": 481, "versioned": [579, 642, 651, 674, 685], "versionhead": 597, "versioning": [461, 466, 579, 590, 616], "versioninglicm": 642, "versionsignatur": 597, "vertex": [96, 185, 287, 442, 466], "vertic": 649, "vertical": 611, "very": [461, 469, 470, 471, 473, 477, 479, 482, 483, 485, 486, 487, 502, 513, 517, 530, 537, 538, 539, 540, 543, 545, 546, 547, 548, 549, 550, 553, 560, 564, 566, 568, 569, 572, 573, 579, 581, 585, 587, 588, 590, 591, 593, 596, 604, 607, 609, 611, 614, 617, 620, 625, 626, 630, 634, 637, 639, 640, 641, 645, 648, 649, 652, 655, 656, 668, 669, 670, 671, 672, 673, 674, 677, 679, 680, 681, 682, 683, 684, 685, 686], "vex": [529, 634], "vf": [614, 616], "vfab": 579, "vfp": [472, 579], "vfp3": 571, "vfprintf": 579, "vfuncid": 579, "vg": [491, 641], "vg_leak": 491, "vgpr": [19, 48, 142, 238, 391, 464, 579], "vgpr0": 466, "vgpr1": 466, "vgpr104": 466, "vgpr120": 466, "vgpr136": 466, "vgpr152": 466, "vgpr168": 466, "vgpr184": 466, "vgpr200": 466, "vgpr216": 466, "vgpr232": 466, "vgpr248": 466, "vgpr255": 466, "vgpr31": 466, "vgpr40": 466, "vgpr56": 466, "vgpr72": 466, "vgpr88": 466, "vgpr_spill_count": 466, "vgprs_used": 466, "vgrp": 466, "vhaddp": [505, 513], "vi": [466, 470, 478, 481, 483, 487, 513, 517, 518, 527, 528, 531, 533, 534, 536, 537, 538, 539, 540, 542, 544, 546, 547, 556, 564, 565, 570, 571, 579, 581, 582, 584, 588, 593, 594, 595, 607, 609, 616, 618, 626, 628, 631, 632, 634, 636, 637, 641, 647, 648, 649, 651, 655, 670, 671, 676], "viabl": [566, 575, 626], "vibr": 538, "vic": [470, 513, 534, 575, 579, 601, 616, 630, 641], "video": 609, "videos": 484, "view": [466, 470, 483, 484, 499, 517, 581, 582, 583, 590, 611, 612, 614, 618, 627, 649, 668, 672, 679, 683], "view_function_cfg": 683, "view_function_cfg_only": 683, "viewcfg": [609, 672], "viewcfgonly": [609, 672], "viewed": [461, 599], "viewer": 486, "viewgraph": 609, "viewing": [590, 640], "viewpoint": 484, "viewvc": 611, "vii": 466, "vim": [550, 627, 637], "violat": [466, 484, 538, 548, 579, 583, 609, 621, 672, 683], "violated": [480, 547, 579], "violating": [484, 621], "violent": 484, "virgini": 613, "virt": 609, "virtreg": 483, "virtreg2indexfunctor": 483, "virtregmap": 483, "virtregrewrit": 625, "virtual": [461, 466, 469, 480, 487, 491, 498, 517, 534, 537, 547, 556, 557, 560, 562, 564, 573, 579, 585, 590, 593, 607, 609, 616, 625, 626, 634, 635, 639, 646, 648, 669, 670, 671, 672, 673, 674, 675, 676, 681], "virtualconstprop": 579, "virtualenv": 639, "virtualindex": 579, "virtuality": 579, "virtually": [461, 466, 576, 609, 637, 674, 685], "vis": [477, 507, 509, 511, 515, 516, 523, 525, 526, 541, 609, 646, 655], "visibility": [466, 473, 483, 515, 566, 582, 588, 593, 618, 622, 643], "visibl": [466, 470, 473, 486, 495, 530, 579, 580, 582, 592, 593, 609, 625, 630, 643, 648], "visitbasicblock": 609, "visitconstrainedfpintrinsic": 467, "visited": [609, 635], "visitfab": 541, "visitfunct": 650, "visitgcroot": 547, "visiticmpinst": 477, "visiting": [547, 636], "visitinstruct": 650, "visitor": [477, 529, 541, 547, 634, 670, 678, 679], "visitsrl": 541, "visitxor": 477, "visual": [468, 486, 540, 542, 550, 551, 596, 611, 618, 620, 625, 646], "visualiz": [483, 579, 581, 601, 607, 609, 620, 626, 649, 672, 683], "visualizing": [646, 650, 672, 683], "visually": 487, "viv": 579, "vk": 465, "vk_argu": 486, "vk_basicblock": 486, "vla": 579, "vlas": [542, 548], "vle": 532, "vlen": 579, "vliw": [529, 634], "vlk": 626, "vm": [0, 2, 3, 4, 465, 466, 486, 581], "vm_cnt": [114, 201, 303, 460], "vma": [516, 527, 650], "vmcnt": [114, 201, 303, 460, 466], "vmcnt_sat": [114, 201, 303, 460], "vmodulekey": 655, "vmov": 487, "vmulp": [505, 513], "vn": [465, 580], "vo": 495, "vocabulary": 579, "void": [469, 470, 472, 473, 474, 483, 486, 487, 501, 530, 531, 534, 535, 540, 541, 543, 544, 547, 548, 558, 565, 566, 575, 578, 581, 582, 583, 585, 590, 592, 593, 596, 604, 607, 609, 622, 625, 626, 628, 630, 643, 645, 646, 647, 648, 649, 650, 652, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676], "voidtyp": 609, "voir": [6, 7, 653], "volatil": [464, 466, 469, 470, 483, 513, 527, 543, 547, 590, 596, 607, 646], "volatility": 469, "volcanic": 466, "volkan": 563, "volum": [549, 609], "voluminous": 609, "voluntary": 611, "volunte": [619, 623], "volunteer": [567, 611, 619], "volunteered": 572, "von": 579, "vop1": [463, 466], "vop2": [463, 466], "vop3": [462, 463, 466], "vop_dpp": 466, "vop_sdw": 466, "vopc": [463, 466], "vot": [588, 623], "voting": 623, "votr": 653, "vp_fdiv": 615, "vpaddbyrr_vpadddyrr_vpaddqyrr_vpaddwyrr_vpsubbyrr_vpsubdyrr_vpsubqyrr_vpsubwyrr": 505, "vpaddqyrr": 505, "vpbasicblock": 616, "vpblock": 616, "vpblockbas": 616, "vpdef": 616, "vpic": 613, "vpinstruct": 616, "vplan": 615, "vprecip": 616, "vprecipebas": 616, "vpregionblock": 616, "vprfc": 615, "vpsubqyrr": 505, "vpsubusw": 641, "vptr": [579, 626], "vptransformstat": 616, "vpus": 616, "vpvalu": 616, "vreg": [483, 556, 557, 559], "vscnt": 466, "vset_lan": 472, "vsetq_lane_s32": 472, "vsplth": 580, "vsrc": [0, 2, 3, 4], "vsrc0": [0, 1, 2, 3, 4, 7, 8], "vsrc1": [0, 1, 2, 3, 4, 7, 8], "vsrc2": [0, 2, 3, 4], "vsrc3": [0, 2, 3, 4], "vsx": 579, "vtabl": [486, 487, 579, 626, 643], "vulner": 626, "vulnerabilit": [579, 617, 622, 623, 626], "vulnerability": 626, "vv": [487, 491], "vx": [461, 466], "vzeroupp": 505, "w": [20, 23, 40, 121, 136, 206, 214, 216, 217, 226, 228, 229, 230, 363, 366, 383, 465, 483, 514, 515, 516, 522, 526, 542, 547, 566, 579, 581, 630], "w0": 579, "w30": [579, 585], "w31": 579, "w64": 481, "w7100": 466, "w8": 472, "w8100": 466, "w9100": 466, "w_": 637, "wa": 579, "wait": [114, 201, 303, 460, 466, 485, 486, 513, 567, 593, 619, 631], "waitcnt": [0, 2, 3, 4], "waiting": [485, 513, 593, 655, 669, 671, 680], "waitset": 513, "waived": 538, "wak": 611, "walk": [466, 569, 580, 583, 591, 607, 609, 648, 652], "walkarch": 609, "walker": 590, "walking": [557, 590, 609, 611], "wall": [491, 635, 648, 677, 686], "walltimemark": 651, "wambiguous": 501, "want": [461, 469, 471, 473, 479, 481, 483, 484, 485, 486, 487, 499, 513, 530, 531, 533, 538, 539, 541, 543, 546, 548, 549, 550, 552, 553, 554, 557, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 583, 586, 590, 591, 592, 593, 606, 607, 608, 609, 610, 611, 612, 622, 623, 625, 626, 627, 629, 630, 631, 635, 636, 637, 640, 646, 647, 648, 649, 650, 652, 654, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686], "wanted": [461, 573, 583, 609, 611, 631, 649, 650, 671, 682], "wanting": [593, 609, 631], "warn": [481, 486, 529, 557, 607], "warned": 552, "warning": [464, 466, 479, 481, 487, 489, 495, 501, 515, 521, 522, 526, 529, 531, 536, 538, 542, 550, 569, 575, 579, 583, 593, 630, 634, 635, 637, 639, 642, 654, 655, 656, 676, 678], "warnmissedtransformationspass": 642, "warpsiz": 592, "warr": 485, "warranted": [541, 632], "warranty": [538, 648], "warren": 537, "wary": 545, "was": [461, 466, 468, 470, 472, 473, 475, 476, 477, 481, 483, 485, 486, 489, 491, 497, 498, 499, 505, 513, 529, 530, 531, 534, 535, 536, 538, 540, 542, 543, 546, 548, 550, 553, 554, 556, 566, 572, 576, 578, 579, 581, 583, 584, 591, 593, 597, 602, 605, 608, 609, 611, 614, 618, 621, 622, 625, 626, 630, 631, 634, 635, 636, 637, 642, 645, 648, 651, 652, 654, 655, 656, 657, 669, 670, 671, 672, 673, 676, 677, 680, 681, 682, 683, 684, 685, 686], "wasincrementallylinked": 597, "wasn": [469, 591, 673, 674, 675, 676, 684, 685], "wast": [586, 609, 625, 627], "wasted": [584, 609, 628], "wasteful": [674, 685], "watch": 466, "watching": [538, 561], "waterfall": 567, "wav": [48, 238, 391, 466], "wave32": [464, 465], "wave_rol": 464, "wave_ror": 464, "wave_shl": [464, 466], "wave_shr": 464, "wavefront": [101, 115, 116, 461, 464, 466], "wavefront32": 466, "wavefront64": 466, "wavefront_siz": 466, "wavefrontsiz": 466, "wavefrontsize64": 466, "way": [461, 466, 468, 469, 470, 473, 477, 478, 479, 482, 483, 485, 486, 487, 488, 504, 512, 513, 515, 517, 518, 527, 530, 531, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 547, 550, 552, 553, 554, 556, 557, 559, 560, 564, 566, 570, 571, 572, 573, 574, 575, 576, 578, 579, 581, 583, 585, 589, 590, 591, 592, 593, 594, 601, 602, 604, 607, 608, 609, 610, 611, 612, 614, 616, 619, 620, 622, 625, 626, 628, 630, 632, 634, 636, 637, 639, 640, 641, 643, 645, 646, 647, 648, 649, 650, 652, 654, 655, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "waypoint": 477, "wb": 513, "wc": 579, "wchar_t": 579, "wcovered": 486, "wd": 579, "we": [461, 466, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 505, 513, 529, 530, 531, 533, 534, 535, 538, 539, 540, 543, 544, 546, 547, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 564, 566, 567, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 581, 583, 584, 585, 588, 590, 592, 593, 595, 596, 597, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 618, 621, 622, 623, 625, 626, 628, 629, 630, 631, 632, 636, 637, 641, 642, 643, 645, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "weak": [470, 473, 514, 515, 516, 542, 579, 582, 591, 593, 609, 674, 685], "weak_odr": [473, 579], "weakanylinkag": 609, "weaken": [513, 515], "weakest": [470, 483], "weakness": 545, "weakodrlinkag": 609, "weakvh": 609, "wealth": 533, "web": [485, 538, 613, 618], "webassembly": [483, 579, 614], "webk": [579, 614, 628], "webkit_jscc": [473, 579], "websit": [482, 574, 611, 623], "wednesday": 588, "week": [485, 533, 572, 588, 614, 621, 623, 632], "weekend": [485, 588], "weekly": 588, "weight": [518, 542, 579, 585, 617], "weird": 483, "wel": [461, 466, 467, 469, 470, 473, 477, 478, 479, 481, 482, 483, 484, 485, 486, 488, 499, 500, 513, 514, 517, 528, 530, 533, 534, 537, 538, 541, 543, 544, 545, 550, 554, 557, 564, 565, 566, 569, 573, 575, 581, 582, 583, 585, 588, 591, 592, 593, 596, 597, 599, 600, 605, 607, 608, 609, 611, 613, 614, 615, 620, 621, 622, 623, 625, 626, 627, 630, 632, 636, 637, 641, 642, 644, 645, 648, 649, 650, 654, 669, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 682, 684, 685], "welcom": [484, 485, 532, 538, 549, 550, 552, 570, 593, 630, 648, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "welcoming": [484, 588], "weng": 531, "wennborg": 572, "went": [486, 671, 672, 683], "wer": [461, 466, 470, 472, 483, 486, 487, 491, 499, 504, 512, 513, 521, 522, 527, 528, 530, 531, 534, 535, 538, 540, 545, 552, 557, 572, 574, 575, 578, 579, 580, 581, 590, 591, 593, 597, 607, 609, 611, 621, 625, 626, 630, 632, 634, 635, 637, 645, 650, 655, 677, 686], "weren": [538, 557], "werror": 565, "wf": 579, "wg21": 626, "wget": 550, "wgp": 466, "wgp_mod": 466, "what": [461, 464, 465, 466, 469, 470, 472, 473, 474, 476, 478, 481, 483, 486, 487, 490, 491, 492, 499, 510, 513, 517, 528, 530, 531, 532, 534, 537, 538, 540, 541, 549, 550, 552, 554, 555, 557, 558, 560, 561, 566, 567, 571, 572, 574, 575, 579, 580, 583, 585, 586, 588, 590, 592, 593, 595, 597, 601, 604, 605, 607, 608, 609, 610, 612, 614, 616, 618, 619, 620, 625, 626, 627, 629, 630, 631, 634, 636, 637, 640, 646, 649, 651, 652, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "whatev": [469, 481, 487, 505, 530, 531, 534, 540, 548, 550, 569, 571, 579, 581, 588, 590, 595, 607, 608, 609, 631, 647, 652], "whatsoev": [538, 579], "when": [99, 353, 445, 461, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 476, 478, 479, 481, 482, 483, 484, 487, 488, 489, 491, 495, 498, 499, 500, 504, 505, 513, 514, 515, 516, 517, 518, 521, 522, 523, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 546, 547, 548, 549, 550, 552, 554, 558, 559, 560, 562, 566, 567, 568, 569, 570, 571, 572, 573, 574, 579, 580, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 593, 594, 596, 597, 599, 601, 604, 606, 607, 608, 609, 611, 612, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "whenev": [461, 468, 469, 482, 486, 487, 488, 530, 536, 566, 577, 579, 590, 609, 625, 628, 632, 641, 668, 676], "wher": [49, 143, 240, 393, 461, 462, 464, 465, 466, 467, 470, 472, 473, 474, 475, 477, 480, 481, 483, 484, 485, 486, 487, 489, 491, 494, 495, 499, 501, 504, 505, 512, 513, 514, 515, 517, 518, 522, 528, 529, 530, 531, 534, 535, 536, 538, 540, 541, 544, 545, 546, 547, 548, 550, 552, 553, 554, 555, 556, 559, 560, 565, 566, 571, 572, 573, 574, 575, 576, 579, 581, 583, 584, 585, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 604, 605, 607, 608, 609, 610, 611, 616, 618, 619, 620, 621, 622, 623, 625, 626, 630, 632, 634, 636, 637, 640, 641, 642, 646, 647, 648, 649, 650, 652, 654, 656, 668, 670, 671, 672, 674, 675, 676, 678, 679, 680, 681, 682, 683, 685], "whereby": [601, 611], "wherev": [531, 579, 609, 676], "wheth": [461, 464, 466, 467, 469, 470, 473, 474, 477, 480, 481, 483, 486, 492, 493, 495, 501, 519, 528, 531, 534, 540, 541, 542, 547, 548, 550, 555, 556, 564, 565, 570, 572, 573, 574, 579, 581, 582, 583, 591, 594, 601, 604, 607, 608, 609, 610, 611, 614, 616, 620, 621, 622, 623, 625, 626, 628, 630, 634, 635, 636, 642, 643, 646, 649, 651, 655, 669, 671, 672, 673, 674, 675, 676, 677, 680, 683, 684, 685, 686], "which": [16, 19, 22, 31, 49, 60, 62, 63, 117, 120, 123, 131, 143, 151, 152, 202, 205, 208, 220, 239, 240, 250, 252, 253, 326, 344, 359, 362, 365, 374, 392, 393, 403, 405, 406, 461, 462, 463, 464, 465, 466, 470, 471, 472, 473, 475, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 505, 509, 511, 513, 514, 515, 517, 518, 525, 528, 529, 530, 531, 533, 534, 535, 536, 538, 540, 541, 542, 543, 545, 546, 547, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 597, 599, 600, 601, 602, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686], "whichev": [608, 625], "whil": [239, 392, 461, 463, 464, 466, 468, 469, 473, 475, 476, 477, 481, 482, 483, 484, 486, 487, 491, 513, 528, 530, 533, 534, 536, 537, 538, 539, 540, 544, 546, 548, 549, 550, 553, 555, 556, 559, 560, 564, 566, 569, 570, 571, 575, 577, 578, 579, 580, 581, 582, 583, 585, 588, 590, 591, 594, 595, 596, 597, 601, 602, 604, 605, 606, 607, 608, 611, 614, 619, 620, 621, 622, 623, 625, 628, 630, 631, 634, 635, 636, 637, 641, 645, 648, 650, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 683, 685, 686], "whilst": [514, 521, 522, 527], "whip": [673, 684], "whirlwind": [669, 680], "whisker": 626, "whit": 532, "whitelist": 499, "whitelist_fun": 499, "whitepap": [589, 649], "whitespac": [487, 495, 509, 511, 515, 538, 636, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "whitespaceoranycomment": 636, "whitespaceorccomment": 636, "whizbang": 486, "who": [476, 479, 481, 482, 535, 538, 539, 549, 554, 556, 574, 579, 588, 591, 593, 606, 608, 611, 621, 623, 631, 632, 636, 644, 646, 654, 655, 671, 674, 677, 678, 682, 685, 686], "whol": [461, 466, 468, 483, 485, 495, 518, 538, 540, 541, 545, 547, 564, 571, 572, 576, 579, 581, 583, 585, 591, 593, 607, 609, 620, 622, 629, 632, 639, 640, 641, 643, 648, 654, 655, 669, 671, 672, 680, 682, 683], "whom": [591, 605], "whos": [461, 464, 466, 469, 473, 477, 483, 486, 491, 495, 504, 513, 514, 515, 517, 518, 535, 537, 579, 602, 604, 609, 616, 620, 623, 625, 634, 635, 636, 646, 651, 655, 669, 673, 674, 680, 684, 685], "why": [461, 466, 469, 475, 476, 484, 485, 486, 513, 529, 531, 538, 546, 550, 565, 573, 579, 586, 590, 591, 602, 608, 609, 613, 625, 626, 627, 630, 634, 648, 652, 669, 670, 672, 678, 679, 680, 683], "wibbl": 525, "wid": [465, 466, 469, 470, 473, 479, 483, 484, 516, 541, 547, 548, 555, 559, 568, 579, 592, 595, 604, 605, 609, 616, 618, 623, 636, 653, 671, 672, 682, 683], "wideaddr": 579, "widecharact": 604, "widely": [470, 482, 538, 547, 550, 609, 625, 643, 677, 686], "widen": [616, 645, 648], "widenable_cond": 579, "widenable_condit": 579, "widened": 616, "widening": [483, 559, 648], "widenscalar": 559, "widenscalarfor": 559, "widenscalartonextpow2": 559, "widest": 538, "width": [465, 470, 472, 505, 513, 516, 531, 547, 555, 597, 607, 609, 614, 642, 645, 677, 686], "wik": [481, 550, 571, 581, 613, 614, 622], "wikipedi": [579, 583, 672, 683], "wild": [530, 673, 684], "wildcard": [499, 515, 526], "will": [461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 510, 513, 514, 515, 516, 517, 518, 521, 522, 523, 526, 527, 528, 529, 530, 531, 533, 534, 535, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 550, 552, 553, 554, 555, 557, 559, 560, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 599, 601, 602, 604, 606, 607, 608, 609, 610, 611, 612, 614, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "willing": [485, 677, 686], "willreturn": [473, 579], "wily": 548, "win": [469, 486, 529, 609, 626], "win32": [483, 550, 552, 602, 631, 641], "wincomplet": 501, "windbg": 625, "window": [466, 479, 481, 483, 486, 491, 495, 501, 517, 530, 531, 534, 535, 543, 550, 551, 552, 567, 578, 579, 593, 602, 605, 609, 611, 618, 625, 631, 641, 648, 670, 671, 672, 673, 683], "wineh": 534, "winrt": 596, "winrtsmartpoint": 596, "winzip": 552, "wip": 466, "wireshark": 581, "wiring": 543, "wis": [542, 580], "wisely": 636, "wish": [481, 485, 491, 495, 530, 531, 541, 545, 548, 550, 560, 570, 574, 579, 593, 605, 609, 621, 626, 630, 646, 678], "wished": 591, "wishing": 593, "with": [20, 51, 52, 53, 54, 144, 145, 206, 241, 242, 243, 244, 305, 310, 315, 316, 317, 338, 339, 340, 363, 394, 395, 396, 397, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 525, 526, 527, 528, 529, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 549, 551, 553, 554, 555, 556, 557, 558, 559, 560, 563, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 593, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 610, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 646, 649, 651, 652, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 688], "with_assert": 481, "withcolor": 486, "withentryval": 512, "withholding": 625, "within": [461, 464, 466, 469, 472, 473, 477, 482, 483, 484, 486, 487, 491, 504, 513, 515, 516, 525, 526, 528, 531, 534, 535, 538, 540, 542, 547, 548, 550, 559, 564, 573, 575, 579, 580, 583, 585, 591, 592, 593, 594, 595, 597, 601, 604, 605, 607, 609, 610, 611, 614, 616, 620, 621, 622, 623, 625, 626, 628, 630, 632, 634, 636, 639, 640, 643, 648, 651, 652, 654, 671, 672, 673, 674, 675, 676, 682, 683, 684, 685], "withmoduledo": [593, 655, 656, 657], "without": [461, 464, 465, 466, 470, 472, 473, 474, 477, 479, 481, 482, 483, 485, 486, 487, 488, 491, 493, 495, 498, 499, 504, 509, 513, 514, 515, 518, 526, 527, 530, 531, 534, 535, 536, 538, 540, 542, 545, 547, 548, 550, 554, 555, 559, 560, 565, 575, 576, 579, 580, 581, 582, 583, 586, 587, 590, 591, 593, 594, 597, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 620, 621, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 641, 642, 645, 646, 648, 669, 671, 672, 673, 674, 675, 676, 679, 680, 682, 683, 684, 685], "witness": 621, "witnessed": 466, "witnessing": 621, "wl": [550, 594, 673], "wlandry": 613, "wno": 569, "woff2": 581, "wojciech": 607, "wolf": 537, "won": [481, 483, 486, 531, 538, 548, 550, 557, 570, 571, 576, 579, 611, 619, 625, 626, 632, 640, 641, 670, 671, 676, 682], "wond": [543, 548, 573], "wondered": 626, "wonderful": [671, 682], "wondering": [486, 538], "wontfix": 476, "word": [464, 466, 470, 474, 483, 484, 485, 486, 535, 537, 540, 542, 543, 547, 558, 560, 573, 579, 581, 590, 599, 609, 614, 625, 626, 636, 646, 651, 654, 670, 681], "word32": 466, "word64": 466, "word_0": [464, 466, 599], "word_1": [464, 466, 599], "word_n": 599, "wording": [484, 538, 621], "wordsiz": 547, "work": [461, 467, 468, 469, 470, 474, 476, 477, 478, 482, 483, 484, 486, 487, 491, 492, 493, 499, 505, 507, 509, 512, 515, 516, 518, 526, 530, 531, 532, 534, 535, 538, 539, 540, 541, 543, 546, 547, 549, 550, 552, 553, 556, 560, 565, 566, 567, 570, 571, 572, 573, 575, 578, 579, 580, 582, 583, 585, 588, 589, 590, 602, 607, 609, 610, 611, 612, 614, 615, 618, 623, 624, 625, 630, 631, 632, 636, 637, 639, 640, 641, 644, 646, 648, 650, 652, 655, 656, 668, 669, 670, 671, 672, 674, 675, 677, 678, 679, 680, 681, 682, 683, 685, 686], "work_group_size_hint": 466, "workabl": 609, "workaround": [466, 513, 553, 612], "worked": [476, 482, 484, 533, 553, 556, 565, 569], "worker": [491, 567, 581], "workflow": [468, 479, 550, 567, 608, 649], "workgroup": 466, "workgroup_siz": 466, "workgroup_size_hint": 466, "workgroupsiz": 466, "workgroupsizehint": 466, "working": [461, 469, 470, 477, 479, 483, 486, 487, 488, 497, 517, 518, 530, 531, 533, 538, 541, 547, 550, 570, 573, 574, 579, 580, 581, 582, 583, 584, 588, 593, 608, 609, 611, 621, 626, 632, 636, 643, 644, 646, 648, 649, 650, 671, 673, 676, 677, 682, 684, 686], "worklist": [591, 607, 609], "workload": 466, "worksform": 476, "workshop": 588, "workspac": [536, 550], "world": [482, 484, 535, 538, 547, 550, 552, 566, 579, 586, 588, 608, 625, 627, 677, 679, 686], "worry": [530, 579, 608, 669, 676, 680], "wors": [472, 483, 575, 579], "worst": [564, 609, 624, 625, 630, 677, 686], "worth": [461, 477, 478, 479, 486, 545, 553, 559, 568, 573, 590, 609, 626, 649], "worthwhil": 609, "would": [461, 465, 466, 468, 469, 470, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 491, 492, 497, 515, 517, 526, 530, 531, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 552, 554, 559, 564, 567, 569, 572, 573, 574, 575, 579, 580, 581, 583, 585, 586, 590, 591, 593, 594, 595, 596, 597, 601, 604, 605, 607, 608, 609, 610, 611, 613, 614, 621, 622, 625, 626, 627, 628, 630, 631, 634, 635, 636, 637, 641, 642, 643, 645, 647, 648, 649, 650, 651, 652, 654, 656, 669, 670, 671, 672, 676, 677, 680, 681, 682, 683, 684, 686], "wouldn": [486, 575, 583, 674, 676, 685], "wp": 566, "wpdre": 579, "wpdresolu": 579, "wrap": [461, 486, 505, 530, 538, 545, 548, 550, 554, 579, 584, 593, 609, 631, 652, 654, 655, 669, 670, 678, 679, 680, 681], "wrapcolumn": 652, "wrapp": [482, 486, 512, 531, 584, 591, 593, 594, 607, 609, 631, 646], "wrapped": [473, 609, 625, 654], "wrapper": [593, 631, 646], "wrapping": [482, 486, 538, 548, 578, 579, 609, 626, 630, 652, 655], "wrf_": 613, "wrf_r": 613, "wrinkl": 578, "writ": [60, 250, 403, 461, 466, 469, 470, 473, 477, 483, 487, 495, 496, 499, 501, 503, 505, 506, 510, 515, 516, 517, 525, 526, 528, 529, 530, 531, 532, 533, 539, 540, 541, 545, 548, 550, 552, 553, 560, 578, 579, 581, 585, 586, 591, 592, 593, 597, 601, 607, 609, 610, 614, 623, 625, 627, 628, 630, 635, 636, 637, 640, 641, 644, 646, 647, 648, 650, 652, 668, 671, 672, 675, 676, 679, 682, 683], "writabl": [465, 514, 539, 542, 597, 625], "write_escaped": 648, "write_only": 466, "write_regist": 579, "writeabl": [48, 142, 238, 391], "writeali": 591, "writealu": [505, 636], "writeattribut": 634, "writeonly": [466, 473, 579], "writer": [470, 502, 547, 551], "writesetcc": 505, "writethunk": 591, "writethunkorali": 591, "writetypet": 541, "writev": 646, "writing": [461, 470, 486, 487, 497, 517, 518, 527, 529, 531, 549, 550, 553, 555, 556, 579, 586, 591, 593, 601, 602, 609, 616, 617, 623, 626, 627, 631, 634, 635, 636, 637, 644, 649, 652, 671, 677, 682, 686, 687], "written": [461, 466, 468, 469, 482, 483, 486, 497, 499, 501, 503, 505, 506, 513, 515, 518, 533, 538, 539, 542, 544, 550, 556, 574, 579, 581, 583, 585, 591, 592, 597, 601, 602, 607, 609, 611, 612, 613, 614, 618, 623, 625, 626, 627, 630, 631, 634, 636, 639, 641, 645, 646, 651, 652, 672, 673, 676, 677, 678, 679, 683, 684, 686], "wrong": [469, 471, 476, 484, 486, 531, 543, 574, 622, 631, 671, 676], "wrot": [541, 548, 579, 675, 676], "wswitch": 486, "wu": 531, "www": [471, 481, 572, 611, 613, 614], "wzr": 579, "x": [20, 121, 206, 363, 461, 463, 464, 465, 466, 470, 472, 475, 483, 486, 487, 488, 495, 499, 504, 509, 514, 515, 516, 521, 522, 523, 525, 526, 530, 531, 535, 538, 540, 542, 543, 546, 547, 550, 554, 555, 559, 572, 575, 579, 581, 585, 590, 592, 596, 602, 607, 609, 611, 625, 630, 634, 635, 636, 637, 643, 646, 648, 652, 654, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686], "x0": [542, 585], "x00": [620, 688], "x00argpath": 620, "x00function": 620, "x00key": 620, "x00path": 620, "x00remark": 620, "x00valu": 620, "x01": 688, "x03": 688, "x04": 688, "x08": 688, "x0abar": 581, "x0c": 688, "x1": [542, 583, 607, 674, 685], "x11": 609, "x15": [542, 579], "x16": [463, 542], "x2": [463, 579, 583, 607, 674, 685], "x20": 585, "x21": 585, "x24": 688, "x3": [463, 583, 607, 674, 685], "x30": 579, "x32": 487, "x4": [463, 583, 607, 674, 685], "x44": 688, "x64": [487, 550, 552, 567], "x8": 463, "x83": 688, "x86": [468, 470, 480, 481, 487, 492, 493, 505, 513, 515, 516, 519, 529, 534, 540, 541, 545, 550, 554, 568, 579, 580, 585, 597, 614, 624, 630, 634, 636, 637, 641, 643, 645, 646, 650, 652, 675], "x86_64": [480, 483, 487, 505, 513, 527, 536, 539, 545, 546, 566, 568, 569, 570, 579, 585, 619, 622, 625, 628, 630, 641, 649, 652, 675], "x86_fastcall": 483, "x86_fastcallcc": 473, "x86_fp80": [473, 579, 591], "x86_mmx": 473, "x86_ssecall": 646, "x86_stdcall": 483, "x86_stdcallcc": 473, "x86_thiscall": 483, "x86add_flag": 636, "x86call": 636, "x86callingconv": 646, "x86codeemitt": 646, "x86dagtodagisel": 650, "x86framelowering": 483, "x86genregisterinfo": [483, 646], "x86ii": 646, "x86inst": [636, 637], "x86instrinfo": 646, "x86instrmmx": 646, "x86instrss": 646, "x86iseldagtodag": 650, "x86isellowering": 650, "x86registerinfo": [483, 646], "x86reloc": 646, "x86retflag": 636, "x86subtarget": 650, "x86targetasminfo": 646, "x86targetlowering": 650, "x86targetmachin": [483, 650], "x87": [554, 579], "x8b": 688, "x_": 637, "xab": 581, "xadd": 470, "xarch": 550, "xarg": 611, "xbas": 635, "xc3": 688, "xc4": 688, "xc7": 688, "xchg": [470, 579], "xclang": 574, "xcod": [481, 536, 550], "xcodebuild": 481, "xcoff": [579, 618], "xcor": [483, 550, 579, 614], "xctoolchain": 481, "xd": 636, "xdat": [597, 618], "xdemangl": 499, "xdig": 487, "xe8": 688, "xec": 688, "xemac": 550, "xentry": 635, "xf7": 581, "xf8": 581, "xfail": [491, 641], "xinmin": 616, "xlc": 550, "xlen": 579, "xmax": [673, 684], "xme": 517, "xmi": 517, "xmin": [673, 684], "xml": 473, "xmm": [487, 579, 646], "xmm0": [487, 513, 628, 636, 637, 641], "xmm1": [505, 513, 636, 637], "xmm10": 637, "xmm11": 637, "xmm12": 637, "xmm13": 637, "xmm14": 637, "xmm15": 637, "xmm2": [505, 513, 579, 636, 637], "xmm3": [505, 513, 579, 636, 637], "xmm4": [513, 636, 637], "xmm5": [636, 637], "xmm6": [636, 637], "xmm7": [636, 637], "xmm8": 637, "xmm9": 637, "xmos": 532, "xnack": [207, 245, 246, 256, 257, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 306, 307, 311, 312, 318, 319, 320, 321, 322, 341, 345, 346, 347, 348, 350, 351, 364, 366, 377, 378, 398, 399, 400, 407, 408, 411, 412, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 466], "xnack_mask": [48, 465, 466], "xnack_mask_h": 465, "xnack_mask_lo": 465, "xnor": 646, "xnorrr": 646, "xor": [464, 465, 483, 534, 592, 607, 609, 636, 645, 646], "xor16rr": 483, "xor32rr": [483, 585], "xor64rr": 483, "xor8rr": 483, "xorl": 626, "xorr": 646, "xorrr": 646, "xp": 631, "xpass": 491, "xplus1": 636, "xray_always_instru": [649, 650], "xray_basic_opt": 649, "xray_fdr_opt": 649, "xray_instr_map": [649, 650], "xray_log_finalized": 649, "xray_log_flushed": 649, "xray_log_interfac": 649, "xray_logfile_bas": 649, "xray_mod": [649, 650], "xray_never_instru": 649, "xray_opt": [649, 650], "xraylogimpl": 649, "xs1": 532, "xs2": 532, "xstep": [673, 684], "xt": 466, "xtemp": 470, "xu": 616, "xuetian": 531, "xvf": 552, "xvjf": 550, "xvtdiv": 618, "xvtsqrt": 618, "xword": 646, "xx": [471, 515, 579], "xxx": [486, 487, 490, 515, 634, 635, 636, 637, 639, 640, 646], "xxxasmprint": 646, "xxxbegin": 609, "xxxbranchselector": 646, "xxxcallingconv": 646, "xxxcodeemitt": 646, "xxxend": 609, "xxxgenasmwrit": 646, "xxxgencallingconv": 646, "xxxgencodeemitt": 646, "xxxgendagisel": 646, "xxxgeninstrinfo": 646, "xxxgenregisterinfo": 646, "xxxinstrdescriptor": 646, "xxxinstrformat": 646, "xxxinstrinfo": [577, 646], "xxxiseldagtodag": 646, "xxxisellowering": 646, "xxxiterator": 609, "xxxjitinfo": 646, "xxxkind": 573, "xxxlai": 593, "xxxregisterinfo": 646, "xxxreloc": 646, "xxxschedul": 646, "xxxsubtarget": 646, "xxxtargetasminfo": 646, "xxxtargetlowering": 646, "xxxtargetmachin": 646, "xxxtrait": 652, "xxxxxx": 649, "xy": 463, "xyz": [463, 492, 493, 550, 577], "xyzw": 463, "xyzzy": 486, "xz": 540, "xzr": 579, "yaml": [466, 489, 505, 517, 585, 617, 649, 650, 688], "yaxxz": 540, "ye": [463, 538, 543, 548, 550, 581, 586, 591, 607, 624, 627], "year": [478, 538, 612, 623], "yet": [461, 470, 483, 485, 486, 487, 498, 518, 530, 534, 538, 540, 547, 555, 567, 569, 578, 579, 584, 591, 593, 607, 609, 613, 623, 626, 630, 632, 636, 646, 648, 649, 656, 670, 672, 673, 682, 683, 684], "yield": [473, 491, 530, 534, 548, 579, 607, 609, 630, 640, 650, 655], "yielded": 534, "yielding": 579, "yin": 652, "ymax": [673, 684], "ymin": [673, 684], "ymm": 579, "ymm0": 628, "yosefk": 486, "you": [468, 469, 470, 471, 473, 476, 477, 479, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 493, 495, 499, 503, 504, 505, 513, 517, 527, 528, 530, 531, 533, 535, 536, 538, 539, 540, 541, 543, 545, 546, 547, 548, 549, 550, 552, 553, 554, 557, 558, 559, 560, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 579, 581, 583, 585, 588, 590, 591, 592, 593, 594, 597, 601, 605, 606, 607, 608, 609, 610, 611, 614, 618, 619, 622, 623, 625, 626, 627, 630, 631, 634, 635, 636, 637, 639, 640, 641, 644, 646, 647, 648, 649, 650, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "young": [513, 609], "your": [468, 469, 470, 471, 477, 479, 483, 484, 485, 486, 487, 489, 495, 499, 505, 517, 530, 531, 533, 538, 539, 540, 541, 543, 545, 546, 547, 548, 549, 550, 552, 553, 558, 565, 566, 568, 569, 570, 571, 572, 574, 575, 579, 580, 581, 583, 586, 589, 590, 592, 593, 601, 606, 608, 610, 611, 617, 619, 620, 621, 622, 623, 627, 630, 633, 635, 636, 637, 638, 640, 641, 644, 646, 647, 650, 652, 654, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 682, 683, 684, 685, 686], "yourallocator": 566, "yourregex": 487, "yourself": [476, 481, 485, 533, 538, 541, 550, 579, 608, 609], "yout": 652, "youtu": 485, "yplus1": 636, "ystep": [673, 684], "yy": 592, "yypvr": 627, "z": [20, 96, 121, 185, 206, 287, 363, 442, 464, 466, 473, 483, 487, 489, 515, 516, 526, 532, 546, 572, 579, 585, 592, 607, 625, 636, 637, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "z0": [465, 466, 487, 579, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "z2": 673, "z3": 481, "z7": [579, 597, 625], "z_": [465, 487], "za": [465, 466, 487, 579, 585, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "zachary": 614, "zak": 616, "zc": 579, "zchf": 571, "zero": [461, 462, 464, 465, 466, 472, 473, 483, 486, 487, 488, 491, 492, 493, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 509, 510, 513, 514, 515, 516, 518, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 534, 535, 542, 545, 547, 548, 555, 558, 560, 579, 580, 581, 584, 585, 592, 593, 597, 607, 609, 616, 622, 625, 626, 628, 630, 636, 641, 643, 645, 646, 651, 669, 672, 677, 680, 683, 684, 685, 686], "zeroargfp": 636, "zerocontent": 622, "zerodirect": 646, "zeroed": [465, 622], "zeroext": [473, 579], "zeroing": 626, "zeroinitializ": 579, "zeroormor": 530, "zeros": [464, 465, 487, 492, 555, 558, 579], "zeroth": 636, "zext": [575, 576], "zhou": 616, "zi": [597, 625], "zip": [550, 611], "zipped": 611, "zippped": 611, "zlib": [481, 515, 535, 550], "zlib1g": 571, "znver3": 618, "zon": [579, 626], "zoo": 590, "zorg": 567, "zy": 579, "zz": 579, "\u00e9gal": [61, 150, 251, 343, 404], "\u00eatre": [61, 142, 150, 251, 343, 404], "\u03c6": [555, 579]}, "titles": ["Syntax of Core GFX10 Instructions", "Syntaxe des instructions gfx1011 et gfx1012", "Syntax of Core GFX7 Instructions", "Syntax of Core GFX8 Instructions", "Syntaxe des instructions GFX9", "Syntax of gfx900, gfx902 and gfx909 Instructions", "Syntaxe des instructions gfx904", "Syntaxe des instructions gfx906", "Syntaxe des instructions gfx908", "src", "src", "src", "src", "Type deviation", "vdst", "vsrc", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "sdata", "sdata", "sdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "label", "fx", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "saddr", "saddr", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vaddr", "vaddr", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "sdst", "ssrc", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "hwreg", "label", "m", "msg", "soffset", "soffset", "opt", "param", "dst", "srsrc", "srsrc", "ssamp", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "imask", "label", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "fx", "m", "src", "src", "vdst", "fx", "m", "src", "src", "vdst", "fx", "m", "m", "m", "src", "src", "src", "src", "src", "Type deviation", "vdst", "vsrc", "vaddr", "adst", "adst", "adst", "adst", "asrc", "asrc", "asrc", "asrc", "vdata", "vdst", "fx", "m", "m", "m", "soffset", "opt", "dst", "srsrc", "saddr", "src", "src", "src", "src", "src", "src", "Type deviation", "vaddr", "vasrc", "vasrc", "vdata", "vdst", "vsrc", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "sdata", "sdata", "sdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "imask", "label", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "saddr", "saddr", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vaddr", "vaddr", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "DWARF Extensions For Heterogeneous Debugging", "AMDGPU Instructions Notation", "AMDGPU Instruction Syntax", "Syntax of AMDGPU Instruction Modifiers", "Syntax of AMDGPU Instruction Operands", "User Guide for AMDGPU Backend", "How To Add A Constrained Floating-Point Intrinsic", "Advanced Build Configurations", "LLVM Alias Analysis Infrastructure", "LLVM Atomic Instructions and Concurrency Guide", "Benchmarking tips", "Using ARM NEON instructions in big endian mode", "LLVM Bitcode File Format", "LLVM Block Frequency Terminology", "LLVM Branch Weight Metadata", "LLVM Bug Life Cycle", "LLVM bugpoint tool: design and usage", "Bugpoint Redesign", "Building a Distribution of LLVM", "Control Flow Verification Tool Design Document", "Building LLVM with CMake", "CMake Primer", "The LLVM Target-Independent Code Generator", "LLVM Community Code of Conduct", "LLVM Code-Review Policy and Practices", "LLVM Coding Standards", "FileCheck - Flexible pattern matching file verifier", "bugpoint - automatic test case reduction tool", "dsymutil - manipulate archived DWARF debug symbol files", "LLVM Command Guide", "lit - LLVM Integrated Tester", "llc - LLVM static compiler", "lli - directly execute programs from LLVM bitcode", "llvm-addr2line - a drop-in replacement for addr2line", "llvm-ar - LLVM archiver", "llvm-as - LLVM assembler", "llvm-bcanalyzer - LLVM bitcode analyzer", "llvm-config - Print LLVM compilation options", "llvm-cov - emit coverage information", "llvm-cxxfilt - LLVM symbol name demangler", "llvm-cxxmap - Mangled name remapping tool", "llvm-diff - LLVM structural \u201cdiff\u201d", "llvm-dis - LLVM disassembler", "llvm-dwarfdump - dump and verify DWARF debug information", "llvm-exegesis - LLVM Machine Instruction Benchmark", "llvm-extract - extract a function from an LLVM module", "llvm-install-name-tool - LLVM tool for manipulating install-names and rpaths", "llvm-lib - LLVM lib.exe compatible library tool", "llvm-libtool-darwin - LLVM tool for creating libraries for Darwin", "llvm-link - LLVM bitcode linker", "llvm-lipo - LLVM tool for manipulating universal binaries", "llvm-locstats - calculate statistics on DWARF debug location", "llvm-mca - LLVM Machine Code Analyzer", "llvm-nm - list LLVM bitcode and object file\u2019s symbol table", "llvm-objcopy - object copying and editing tool", "llvm-objdump - LLVM\u2019s object file dumper", "llvm-pdbutil - PDB File forensics and diagnostics", "llvm-profdata - Profile data tool", "llvm-profgen - LLVM SPGO profile generation tool", "llvm-ranlib - generates an archive index", "llvm-readelf - GNU-style LLVM Object Reader", "llvm-readobj - LLVM Object Reader", "llvm-size - print size information", "llvm-stress - generate random .ll files", "llvm-strings - print strings", "llvm-strip - object stripping tool", "llvm-symbolizer - convert addresses into source code locations", "opt - LLVM optimizer", "xxx-tblgen - Target Description to C++ Code", "CommandLine 2.0 Library Manual", "Compiling CUDA with clang", "Architecture &amp; Platform Information for Compiler Writers", "Contributing to LLVM", "Coroutines in LLVM", "LLVM Code Coverage Mapping Format", "Debugging JIT-ed Code", "Dependence Graphs in LLVM", "LLVM Developer Policy", "A guide to Dockerfiles for building LLVM", "Exception Handling in LLVM", "Extending LLVM: Adding instructions, intrinsics, types, etc.", "LLVM Extensions", "Frequently Asked Questions (FAQ)", "FaultMaps and implicit checks", "Performance Tips for Frontend Authors", "Fuzzing LLVM libraries and tools", "Garbage Collection with LLVM", "The Often Misunderstood GEP Instruction", "Getting Involved", "Getting Started with the LLVM System", "Getting Started/Tutorials", "Getting Started with the LLVM System using Microsoft Visual Studio", "Bisecting LLVM code", "Generic Machine IR", "Generic Opcodes", "IRTranslator", "InstructionSelect", "Known Bits Analysis", "Legalizer", "Core Pipeline", "Porting GlobalISel to A New Target", "RegBankSelect", "Resources", "Global Instruction Selection", "The LLVM gold plugin", "GWP-ASan", "How To Add Your Build Configuration To LLVM Buildbot Infrastructure", "How To Build On ARM", "How To Build Clang and LLVM with Profile-Guided Optimizations", "How to Cross Compile Compiler-rt Builtins For Arm", "How To Cross-Compile Clang/LLVM using Clang/LLVM", "How To Release LLVM To The Public", "How to set up LLVM-style RTTI for your class hierarchy", "How to submit an LLVM bug report", "How to Update Debug Info: A Guide for LLVM Pass Authors", "How To Use Attributes", "How To Use Instruction Mappings", "Design and Usage of the InAlloca Attribute", "LLVM Language Reference Manual", "The LLVM Lexicon", "libFuzzer \u2013 a library for coverage-guided fuzz testing.", "LLVM Link Time Optimization: Design and Implementation", "LLVM Loop Terminology (and Canonical Forms)", "MCJIT Design and Implementation", "Machine IR (MIR) Format Reference Manual", "Markdown Quickstart Template", "LLVM\u2019s Optional Rich Disassembly Output", "How to start LLVM Social in your town", "MemTagSanitizer", "MemorySSA", "MergeFunctions pass, how it works", "User Guide for NVPTX Back-end", "ORC Design and Implementation", "Using -opt-bisect-limit to debug optimization errors", "CodeView Symbol Records", "CodeView Type Records", "The PDB DBI (Debug Info) Stream", "The PDB Global Symbol Stream", "The PDB Serialized Hash Table Format", "The Module Information Stream", "The MSF File Format", "The PDB Info Stream (aka the PDB Stream)", "The PDB Public Symbol Stream", "The PDB TPI and IPI Streams", "The PDB File Format", "Advice on Packaging LLVM", "LLVM\u2019s Analysis and Transform Passes", "Code Reviews with Phabricator", "LLVM Programmer\u2019s Manual", "Creating an LLVM Project", "Moving LLVM Projects to GitHub", "\u00ab\u00a0llvm-libc\u00a0\u00bb C Standard Library", "Test-Suite Extensions", "Variable Names Plan", "Vector Predication Roadmap", "Vectorization Plan", "Reference", "LLVM 12.0.0 Release Notes", "How To Validate a New Release", "Remarks", "Reporting Guide", "Scudo Hardened Allocator", "LLVM Security Group", "Segmented Stacks in LLVM", "Source Level Debugging with LLVM", "Speculative Load Hardening", "Sphinx Quickstart Template", "Stack maps and patch points in LLVM", "Stack Safety Analysis", "Garbage Collection Safepoints in LLVM", "Support Library", "LLVM Community Support Policy", "System Library", "TableGen BackEnds", "<span class=\"sectnum\">1 </span>TableGen Backend Developer\u2019s Guide", "<span class=\"sectnum\">1 </span>TableGen Programmer\u2019s Reference", "TableGen Overview", "TableGen Fundamentals", "test-suite Guide", "test-suite Makefile Guide (deprecated)", "LLVM Testing Infrastructure Guide", "Code Transformation Metadata", "Type Metadata", "User Guides", "Auto-Vectorization in LLVM", "Writing an LLVM Backend", "Writing an LLVM Pass", "Writing an LLVM Pass", "XRay Instrumentation", "Debugging with XRay", "XRay Flight Data Recorder Trace Format", "YAML I/O", "\u00c0 propos", "<span class=\"section-number\">1. </span>Building a JIT: Starting out with KaleidoscopeJIT", "<span class=\"section-number\">2. </span>Building a JIT: Adding Optimizations \u2013 An introduction to ORC Layers", "<span class=\"section-number\">3. </span>Building a JIT: Per-function Lazy Compilation", "<span class=\"section-number\">4. </span>Building a JIT: Extreme Laziness - Using LazyReexports to JIT from ASTs", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope: Kaleidoscope Introduction and the Lexer", "Kaleidoscope: Implementing a Parser and AST", "Kaleidoscope: Code generation to LLVM IR", "Kaleidoscope: Adding JIT and Optimizer Support", "Kaleidoscope: Extending the Language: Control Flow", "Kaleidoscope: Extending the Language: User-defined Operators", "Kaleidoscope: Extending the Language: Mutable Variables", "Kaleidoscope: Compiling to Object Code", "Kaleidoscope: Adding Debug Information", "Kaleidoscope: Conclusion and other useful LLVM tidbits", "My First Language Frontend with LLVM Tutorial", "<span class=\"section-number\">1. </span>Kaleidoscope: Tutorial Introduction and the Lexer", "<span class=\"section-number\">2. </span>Kaleidoscope: Implementing a Parser and AST", "<span class=\"section-number\">3. </span>Kaleidoscope: Code generation to LLVM IR", "<span class=\"section-number\">4. </span>Kaleidoscope: Adding JIT and Optimizer Support", "<span class=\"section-number\">5. </span>Kaleidoscope: Extending the Language: Control Flow", "<span class=\"section-number\">6. </span>Kaleidoscope: Extending the Language: User-defined Operators", "<span class=\"section-number\">7. </span>Kaleidoscope: Extending the Language: Mutable Variables", "<span class=\"section-number\">8. </span>Kaleidoscope: Conclusion and other useful LLVM tidbits", "LLVM Tutorial: Table of Contents", "yaml2obj"], "titleterms": {"0": [473, 530, 548, 618], "000": 482, "0x0006": 595, "0x000a": 596, "0x000e": 596, "0x0014": 596, "0x1001": 596, "0x1002": 596, "0x1008": 596, "0x1009": 596, "0x1012": 595, "0x1101": 595, "0x1102": 595, "0x1103": 595, "0x1105": 595, "0x1106": 595, "0x1107": 595, "0x1108": 595, "0x110b": 595, "0x110c": 595, "0x110e": 595, "0x110f": 595, "0x1110": 595, "0x1111": 595, "0x1112": 595, "0x1113": 595, "0x1116": 595, "0x111c": 595, "0x111d": 595, "0x1124": 595, "0x1125": 595, "0x1127": 595, "0x112c": 595, "0x112d": 595, "0x1136": 595, "0x1137": 595, "0x1138": 595, "0x1139": 595, "0x113a": 595, "0x113c": 595, "0x113d": 595, "0x113e": 595, "0x113f": 595, "0x1140": 595, "0x1141": 595, "0x1142": 595, "0x1143": 595, "0x1144": 595, "0x1145": 595, "0x1146": 595, "0x1147": 595, "0x114c": 595, "0x114d": 595, "0x114e": 595, "0x114f": 595, "0x1153": 595, "0x1155": 595, "0x1156": 595, "0x115a": 595, "0x115b": 595, "0x115e": 595, "0x1167": 595, "0x1168": 595, "0x1201": 596, "0x1203": 596, "0x1205": 596, "0x1206": 596, "0x1400": 596, "0x1401": 596, "0x1402": 596, "0x1404": 596, "0x1409": 596, "0x1502": 596, "0x1503": 596, "0x1504": 596, "0x1505": 596, "0x1506": 596, "0x1507": 596, "0x1509": 596, "0x150d": 596, "0x150e": 596, "0x150f": 596, "0x1510": 596, "0x1511": 596, "0x1515": 596, "0x1519": 596, "0x151a": 596, "0x151d": 596, "0x1601": 596, "0x1602": 596, "0x1603": 596, "0x1604": 596, "0x1605": 596, "0x1606": 596, "0x1607": 596, "0xf0": 596, "1": [505, 512, 548, 582, 611, 615, 626, 635, 636, 654], "10": [482, 635, 636], "11": [635, 636], "12": [618, 636], "2": [505, 512, 530, 582, 611, 613, 615, 626, 635, 636, 655, 669, 680], "2017": 613, "3": [468, 505, 512, 582, 611, 615, 635, 636, 656, 670, 681], "32": [461, 466, 492], "4": [582, 611, 613, 615, 635, 636, 657, 671, 682], "5": [461, 615, 635, 636, 672, 683], "6": [473, 635, 636, 673, 684], "64": [461, 466, 626], "7": [635, 636, 674, 685], "8": [635, 636, 675], "9": [635, 636, 676], "C": [472, 481, 486, 529, 532, 538, 543, 550, 579, 580, 587, 606, 609, 612, 613, 618, 620, 625, 631, 636, 643, 649], "D": [580, 643], "DS": [0, 2, 3, 4, 464, 466], "L": 580, "M": [570, 580], "N": [580, 591], "On": [568, 599, 611, 630], "S": 580, "SEE": [488, 489, 491, 492, 493, 494, 496, 497, 500, 503, 504, 506, 507, 509, 512, 514, 515, 516, 520, 521, 522, 526, 527], "See": 486, "T": 580, "__atomic_": 470, "__device__": 531, "__host__": 531, "__nvvm_reflect": 592, "__sync_": 470, "_global__i_": 543, "a": [465, 467, 468, 469, 474, 479, 483, 485, 486, 494, 505, 506, 530, 531, 533, 538, 539, 541, 543, 547, 548, 550, 561, 570, 573, 575, 580, 581, 592, 602, 607, 608, 609, 611, 612, 613, 619, 620, 621, 623, 626, 635, 636, 643, 646, 647, 648, 654, 655, 656, 657, 669, 671, 674, 675, 676, 680, 682, 685, 687], "a16": 464, "aa": [469, 607], "aapc": 472, "aarch64": [532, 570, 618], "ab": [464, 579], "abandoning": 608, "abbrevi": 473, "abbreviated": 473, "abi": [466, 483, 532, 540, 609, 612, 626], "abid": 464, "able": 591, "about": [533, 543, 611], "absolut": [465, 530, 593], "absolute_symbol": 579, "abstract": [473, 545, 547, 579, 613, 616, 630, 631, 636, 669, 680], "accelerated": [461, 466], "accelerator": 625, "accept": 485, "accepted": 485, "accepting": 623, "access": [461, 466, 483, 538, 579, 591, 611, 623], "accumulating": 626, "accurat": 579, "achieving": [476, 609], "acknowledg": 485, "acquir": 470, "acquirereleas": 470, "acronym": 614, "across": 553, "action": 559, "activ": 579, "actively": 476, "acyclic": 636, "adce": [469, 607], "add": [467, 548, 567, 579, 593], "addescapingus": 469, "adding": [530, 538, 541, 545, 594, 609, 655, 671, 676, 682], "additional": [466, 491, 617, 618, 636, 644], "addpreserved": 648, "addr": 625, "addr2lin": 494, "addr64": 464, "addrequired": 648, "addrequiredtransit": 648, "address": [461, 466, 483, 527, 542, 548, 579, 584, 592, 626, 643], "addressing": [483, 548, 579, 626], "addressofreturnaddress": 579, "addrspacecast": 579, "adjust": 579, "adjusting": [674, 685], "administr": 572, "adst": [327, 328, 329, 330], "adt": 609, "advanced": [468, 535, 581, 609, 687], "advantag": [537, 614], "advertis": 588, "advic": [477, 606], "advisory": 621, "afl": 581, "after": [485, 486, 566, 582, 611, 621, 626], "again": 626, "aggregat": [545, 556, 579, 607], "aggress": 607, "ahead": 676, "aid": 609, "aim": 485, "aka": 602, "algorithm": [483, 531, 613], "ali": [469, 483, 530, 548, 579, 607, 645], "alias": [483, 530, 579, 591, 593], "aliasanalys": 469, "aliasing": [545, 579], "aliassettrack": 469, "alignment": [472, 473, 545, 601], "all": [485, 543, 607, 611, 675], "alloc": [483, 534, 545, 566, 579, 624, 625], "allocated": 609, "allocating": 624, "allocator": [483, 566, 622], "allowed": 530, "along": [591, 630], "also": [486, 488, 489, 491, 492, 493, 494, 496, 497, 500, 503, 504, 506, 507, 509, 512, 514, 515, 516, 520, 521, 522, 526, 527], "altern": [530, 570, 582, 626], "alternat": 630, "alway": [548, 607], "always_inlin": 607, "ambiguous": 642, "amd_kernel_code_t": 466, "amdgcn": 466, "amdgcn_target": 466, "amdgpu": [462, 463, 464, 465, 466, 483, 532, 618], "amdgpu_hsa_kernel": 466, "amdgpu_metadat": 466, "amdhsa": 466, "amdhsa_kernel": 466, "amdpal": 466, "an": [485, 506, 520, 530, 538, 548, 550, 552, 574, 575, 609, 610, 611, 626, 636, 646, 647, 648, 655], "analys": [469, 478, 483, 505, 513, 548, 558, 607, 629, 636, 641, 645, 648, 649], "analysisusag": 648, "analyz": [497, 513], "analyzing": 639, "anchor": 486, "and": [5, 461, 463, 465, 466, 467, 469, 470, 472, 474, 477, 479, 481, 482, 483, 485, 486, 504, 507, 513, 514, 515, 516, 517, 522, 526, 530, 531, 532, 534, 538, 541, 543, 544, 545, 546, 547, 548, 549, 550, 555, 559, 564, 569, 570, 571, 573, 578, 579, 582, 583, 584, 586, 590, 591, 593, 599, 601, 604, 607, 609, 611, 616, 617, 623, 625, 626, 628, 630, 635, 636, 639, 641, 642, 644, 646, 648, 651, 668, 669, 670, 671, 677, 679, 680, 681, 682, 686], "annot": [579, 587], "announc": 572, "anonymous": [486, 607], "anoth": [609, 612], "any": 581, "aper\u00e7u": [0, 1, 2, 3, 4, 5, 6, 7, 8, 606, 653], "api": [483, 538, 543, 557, 559, 562, 587, 611, 617, 618, 620, 626, 654], "apis": [590, 593, 609], "appealing": 621, "appended": 466, "appendix": 636, "apple": 468, "appliqu": [613, 649], "approach": [582, 626], "aql": 466, "ar": 495, "arc": 579, "arch": 466, "architectur": [466, 532, 570, 628, 630], "archiv": [495, 520, 550], "archived": 489, "are": [483, 485, 534, 543, 579, 636], "arg": 579, "argpromot": [469, 607], "argument": [466, 482, 530, 534, 555, 579, 607, 609], "arithmetic": [461, 483, 548, 579], "arm": [472, 532, 542, 568, 570, 571, 618], "arm64": 542, "armneon": 634, "armneonsem": 634, "armneontest": 634, "armv6": 570, "armv7": 570, "armv7e": 570, "array": [535, 542, 548, 579, 609], "arrayref": 609, "articl": 627, "asan": 566, "ashr": 579, "asked": 543, "asm": [483, 540, 579], "asmmatch": 634, "asmwrit": 634, "asrc": [331, 332, 333, 334], "assembl": [466, 483, 496, 546, 579], "assembly": [472, 483, 542, 547, 579, 646], "assert": [486, 636], "assign": 607, "assignment": [674, 685], "associat": 591, "associated": 579, "assum": 579, "ast": [657, 669, 672, 680, 683], "async": 534, "at": [607, 611], "atomic": [470, 579, 607], "atomicrmw": 579, "attack": 626, "attent": 534, "attr": [20, 121, 206, 363, 607], "attrbuild": 576, "attrdoc": 634, "attribu": 538, "attribut": [461, 466, 530, 531, 576, 578, 579, 585, 607, 625, 649, 650], "attributelist": 576, "audienc": 646, "author": [545, 575], "authoring": 627, "auto": [486, 645], "automatic": [477, 488, 579, 626], "automatically": 575, "autoreleas": 579, "autoreleasepoolpop": 579, "autoreleasepoolpush": 579, "autoreleasereturnvalu": 579, "autotooled": 565, "avail": [469, 546, 547], "avoid": [486, 545], "avoiding": 534, "avr": 618, "awar": 573, "b": [580, 636, 643], "back": [513, 543, 592], "backend": [466, 483, 548, 618, 634, 635, 637, 646], "background": [478, 480, 536, 540, 573, 625], "backward": 538, "baked": 630, "bang": [614, 636], "bank": 554, "bank_mask": 464, "barri": [547, 592], "barrier0": 592, "bas": [573, 630], "based": [483, 486, 531, 543, 548, 607, 609, 636], "basic": [469, 473, 481, 490, 518, 539, 542, 545, 553, 573, 579, 585, 591, 607, 609, 611, 637, 646, 647, 648, 649, 654, 669, 679, 680], "basicblock": [591, 609], "basiccg": 607, "bb": 607, "bcanalyz": 497, "be": [469, 485, 530, 548, 573, 586, 591, 626], "befor": [486, 611], "begin": 534, "begincatch": 540, "behavior": 469, "behaviour": 542, "behind": 625, "being": 485, "benchmark": [505, 569, 613, 639], "benchmarking": [471, 505, 613], "berkeley": 483, "best": 545, "between": [479, 531, 548, 582, 609, 648], "bewar": 486, "bi": 474, "big": [472, 614], "bigg": 533, "binar": [511, 543], "binary": [465, 515, 572, 579, 649, 669, 673, 680, 684], "binding": 618, "binutil": 490, "bisect": [553, 594], "bisecting": [550, 553, 611], "bit": [461, 466, 473, 530, 558, 579, 599, 609, 626], "bitcast": 579, "bitcod": [473, 493, 497, 510, 514, 543, 582], "bitconvert": 472, "bitin": 635, "bitrevers": 579, "bitsin": 635, "bitsrecty": 635, "bitstream": [473, 620], "bitvalu": 652, "bitvector": 609, "bitwis": [555, 579], "blam": 614, "blgp": 464, "blitz": 613, "block": [473, 474, 485, 486, 487, 513, 542, 579, 585, 601, 607, 609, 626, 627, 652], "blockinfo": 473, "bod": [486, 607, 636], "body": 636, "boolean": 530, "bootstrap": 468, "bot": 612, "both": [550, 595], "bottleneck": 513, "bound": [548, 626], "bound_ctrl": 464, "boundar": 601, "bpf_ab": 483, "bpf_ind": 483, "br": 579, "brac": 486, "braced": 486, "branch": [474, 475, 572, 607, 611, 626, 646], "branch_weight": 579, "branching": 611, "branchinst": 475, "break": [607, 626], "breaking": 609, "breakpoint": 648, "bridg": 611, "bswap": 579, "buff": [466, 566], "bug": [476, 502, 507, 509, 511, 514, 515, 516, 523, 525, 526, 533, 546, 573, 574, 619, 630], "bugpoint": [477, 478, 488, 607], "build": [468, 539, 546, 565, 567, 568, 569, 570, 572, 581, 590, 612, 644, 647, 648], "buildbot": 567, "building": [467, 479, 481, 539, 543, 546, 550, 568, 569, 570, 571, 609, 610, 611, 618, 648, 650, 654, 655, 656, 657, 687], "buildmaster": 567, "built": [475, 482, 483, 547, 636, 652], "builtin": [530, 570], "bundl": [483, 579], "bundled": [466, 585], "but": [570, 581], "by": [461, 466, 476, 534, 543, 548, 607], "bypass": 626, "byt": 517, "c99": 542, "cach": [481, 569, 570], "calculat": 512, "call": [461, 466, 469, 483, 486, 542, 543, 556, 578, 579, 607, 609, 626, 645], "callabl": 609, "callargu": 651, "callback": 579, "callbr": 579, "calle": [578, 579], "callgraph": [607, 648], "callgraphsccpass": 648, "calling": [461, 483, 543, 578, 579, 626, 646], "callingconv": 634, "callinst": 475, "callsit": [540, 607, 609], "caml": 687, "can": [485, 543, 545, 548, 595, 626], "candidat": 572, "canonical": 583, "canonicaliz": [579, 607], "cantfail": 609, "cas": [478, 488, 538, 593, 649], "cast": [548, 609], "catch": 540, "catchpad": 579, "catchret": 579, "catchswitch": 579, "categor": [530, 595, 596], "caus": 478, "cbsz": 464, "cc": 476, "ceil": 579, "cfa": 461, "cfg": [475, 607], "cfi": 466, "cfiindex": 585, "chain": [550, 552, 609], "chaining": 469, "chang": [461, 466, 538, 550, 608, 609, 611, 618, 623, 625, 670, 681], "chapt": [654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "character": [473, 487], "check": [487, 544, 607, 609, 626, 636, 645], "checked": 579, "checking": 626, "checkout": [550, 611], "choos": 539, "choosing": [623, 675], "chrom": 650, "chunk": 622, "cl": 530, "clamp": 464, "clang": [466, 468, 529, 531, 546, 550, 568, 569, 570, 571, 622, 634, 644], "clangattrcl": 634, "clangattrdump": 634, "clangattrimpl": 634, "clangattrlist": 634, "clangattrparsedattrimpl": 634, "clangattrparsedattrkind": 634, "clangattrparsedattrlist": 634, "clangattrparserstringswitch": 634, "clangattrpchread": 634, "clangattrpchwrit": 634, "clangattrspelling": 634, "clangattrspellinglistindex": 634, "clangattrtemplateinstantiat": 634, "clangattrvisitor": 634, "clangcommentcommandinfo": 634, "clangcommentcommandlist": 634, "clangcommenthtmlnamedcharacterreferent": 634, "clangcommenthtmltag": 634, "clangcommenthtmltagspropert": 634, "clangcommentnod": 634, "clangdeclnod": 634, "clangdiaggroup": 634, "clangdiagsdef": 634, "clangdiagsindexnam": 634, "clangsachecker": 634, "clangstmtnod": 634, "class": [461, 466, 469, 483, 486, 530, 531, 573, 577, 579, 609, 635, 636, 646, 648], "classof": 573, "cleanup": [540, 578], "cleanuppad": 579, "cleanupret": 579, "clear_cach": 579, "client": 469, "clobb": 579, "clobber": 590, "clobbered": 483, "clon": 611, "closed": [583, 607], "closing": [476, 670, 681], "cmak": [479, 481, 482, 569, 570, 571, 639], "cmath": 531, "cmp": 581, "cmpconst": 591, "cmpgep": 591, "cmpoper": 591, "cmptyp": 591, "cmpvalu": 591, "cmpxchg": 579, "coalescingbitvector": 609, "cod": [466, 477, 483, 484, 485, 486, 493, 505, 513, 527, 529, 531, 535, 536, 538, 540, 543, 547, 550, 553, 574, 579, 584, 585, 602, 607, 608, 609, 610, 621, 625, 627, 631, 642, 644, 646, 647, 648, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "codeemitt": 634, "codegen": [470, 615, 625], "codegenprepar": 607, "codeview": [542, 579, 595, 596, 600, 604, 605, 625], "coding": [486, 614], "coff": [522, 526, 542, 688], "collabor": 623, "collect": [532, 547, 579, 617, 630], "collected": [677, 686], "collecting": 530, "collector": [547, 579], "color": 613, "column": 579, "com": 487, "combin": [483, 607], "comdat": 579, "comm": [538, 550, 611], "command": [478, 482, 490, 495, 499, 511, 516, 518, 519, 530, 608, 617, 645], "commandlin": 530, "comment": 486, "commenting": 486, "commit": 550, "committe": 621, "committed": 485, "committing": 608, "common": [550, 552, 592, 609, 639], "commun": 582, "communaut": 653, "community": [484, 549, 572, 632], "compar": [548, 591], "comparison": 591, "compatibility": [538, 581, 612], "compatibl": 508, "compil": [481, 486, 492, 498, 531, 532, 543, 550, 570, 571, 574, 579, 606, 626, 639, 656, 671, 676, 682], "compiler": 593, "compiling": [481, 531, 550, 571, 675], "complain": 592, "complex": [468, 531, 579, 609], "complexpattern": 557, "complicated": 581, "component": [467, 476, 483, 498, 538, 616], "composit": [461, 559, 623], "compr": 464, "comprehens": 618, "compressing": 579, "compressstor": 579, "comput": [466, 548, 592], "compute_pgm_rsrc1": 466, "compute_pgm_rsrc2": 466, "compute_pgm_rsrc3": 466, "computed": 548, "computing": 547, "concatenating": 609, "concept": [535, 630, 636, 637, 648, 653], "conclus": [669, 677, 680, 686], "concret": [573, 636], "concurrency": 470, "concurrent": 579, "condit": [579, 636], "conditional": [485, 607, 626], "conduct": [484, 621], "confidentiality": 623, "config": 498, "configur": [468, 491, 492, 550, 567, 639], "configuring": [546, 571, 640, 675], "consid": 545, "consider": [472, 578], "considered": 623, "consistency": [476, 513], "consistent": 631, "const": [465, 542, 555, 556, 579, 585, 591, 607, 609, 625, 626, 671, 682], "constants_block": 473, "constmerg": 607, "constrained": [467, 579], "constraining": 641, "constraint": [466, 579], "construct": [483, 537, 543, 585, 607], "constructor": [486, 609], "consumeaft": 530, "consumer": 625, "consuming": 609, "contain": [517, 605, 609, 620], "contained": 486, "container": 609, "content": [461, 473, 625, 687], "context": [461, 652], "contextual": 587, "continu": [486, 534], "continuous": 639, "continuously": 546, "contract": 573, "contribu": 597, "contribut": 533, "contributing": 533, "control": [461, 480, 482, 531, 555, 626, 672, 683], "controlling": [530, 650], "convent": [464, 465, 466, 483, 543, 578, 579, 592, 626, 646], "convers": [461, 465, 555, 579, 592, 613, 645, 646], "convert": [527, 575, 579], "cop": 486, "copy": [578, 579], "copying": 515, "copyright": 538, "copysign": 579, "copyvalu": 469, "copyweak": 579, "cor": [0, 2, 3, 560, 609, 630, 632], "coral": 613, "coreclr": 547, "coro": 534, "corocleanup": 534, "coroearly": 534, "coroelid": 534, "corospl": 534, "coroutin": 534, "corpus": 581, "cos": 579, "cost": [540, 614], "could": 591, "count": [475, 487, 535, 579, 607, 645], "counter": 609, "cov": 499, "coverag": [499, 535, 581], "covered": [486, 632], "cpu": 613, "crash": [477, 581], "crashing": 574, "creat": [572, 593, 636], "creating": [509, 609, 610, 627, 635, 648], "creation": [461, 584], "crit": 607, "criteri": [572, 623], "critical": 607, "cross": [481, 515, 526, 550, 570, 571, 639], "ctag": 634, "ctlz": 579, "ctpop": 579, "cttz": 579, "cud": 531, "current": [593, 611, 612, 614, 623], "currently": 611, "custom": [505, 530, 534, 547, 548, 557, 593, 609, 639, 640, 646, 652], "customeventmark": 651, "cv_def_rang": 542, "cv_fil": 542, "cv_filechecksum": 542, "cv_filechecksumoffset": 542, "cv_fpo_dat": 542, "cv_func_id": 542, "cv_inline_linet": 542, "cv_inline_site_id": 542, "cv_linet": 542, "cv_loc": 542, "cv_stringtabl": 542, "cxxfilt": 500, "cxxmap": 501, "cycl": 476, "d16": 464, "da": [464, 607], "dag": [474, 483, 487, 618, 636], "dagcombin": 615, "dagin": 635, "dagisel": 634, "darp": 613, "darwin": 509, "dat": [461, 466, 473, 483, 518, 535, 537, 579, 588, 592, 607, 609, 626, 631, 635, 649, 651, 652], "datalayout": 483, "dbg": [607, 625], "dbi": [517, 597], "dce": 607, "dead": 607, "deadargelim": 607, "deadarghax0r": 607, "deadtypeelim": 607, "deal": 476, "dealloc": 534, "debug": [466, 489, 504, 512, 575, 579, 585, 594, 597, 607, 609, 618, 625, 676], "debug_info": 461, "debug_typ": 609, "debugg": [461, 466, 477, 579, 607, 625], "debugging": [461, 469, 490, 536, 560, 609, 617, 625, 635, 641, 650], "debugify": 575, "debuginfo": 607, "debugtrap": 579, "decl": 579, "declar": [607, 625], "declared": 486, "declaring": 559, "decod": 607, "deconstruct": 483, "decr": 579, "deduc": 607, "deduct": 486, "deep": [573, 586], "def": [609, 636], "default": [476, 486, 590, 652], "deferred": 626, "deficienc": 637, "defin": [626, 635, 636], "define_abbrev": 473, "defined": [579, 673, 674, 684, 685], "defining": [486, 646], "definit": [461, 486, 497, 580, 583, 616, 628, 636], "defm": 636, "defset": 636, "defvar": 636, "delayed": 622, "delet": 607, "deleted": 599, "deletevalu": 469, "deleting": [575, 609], "demangl": [500, 546], "demo": 543, "demot": 607, "denorm": 466, "densemap": 609, "denseset": 609, "deoptimiz": 579, "dependenc": 606, "dependent": [469, 537, 542, 579, 585, 607, 626], "deprec": 632, "deprecat": 615, "deprecated": [550, 639, 640], "dequ": 609, "dereference": 579, "dereferenceable_or_null": 579, "dereferenced": 548, "dereferencing": 482, "derived": [541, 609, 630], "describing": 545, "descript": [461, 477, 483, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 582, 611], "descriptor": 466, "design": [477, 478, 480, 483, 537, 564, 566, 578, 582, 584, 590, 593, 616, 622], "designed": 548, "designing": 609, "destroy": 534, "destroyweak": 579, "detail": [486, 537, 587, 624, 625, 626, 636, 645], "detailed": [497, 634], "detect": [566, 607, 613], "detecting": 531, "determining": 530, "determinism": [468, 486], "deterministic": 486, "develop": [490, 538, 635], "developer": [550, 590], "developing": [481, 581], "development": [538, 549, 611, 645], "deviat": [13, 97, 186, 288, 323, 352, 443], "devic": [531, 639], "dfapacketiz": 634, "di": 607, "diagnos": 513, "diagnostic": [517, 620, 645], "dialect": 531, "dibasictyp": 579, "dicompileun": 579, "dicompositetyp": 579, "dictionar": 581, "did": 543, "diderivedtyp": 579, "didn": 614, "dienumerator": 579, "diexpress": 579, "diff": [502, 620], "different": [469, 479, 522, 531, 548, 640], "differentiating": 614, "difil": 579, "diflag": 579, "diglobalvari": 579, "diglobalvariableexpress": 579, "diimportedentity": 579, "dilabel": 579, "dilexicalblock": 579, "dilexicalblockfil": 579, "diloc": 579, "dilocalvari": 579, "dim": 464, "dimacro": 579, "dimacrofil": 579, "dinamespac": 579, "diobjcproperty": 579, "direct": [466, 483, 487, 542, 579, 628, 645], "directed": 636, "directly": [469, 493, 626], "directory": [550, 601], "dis": 503, "disabl": 579, "disable_nonforced": 579, "disadvantag": [537, 614], "disassembl": [483, 503, 546, 634], "disassembly": 587, "disclosur": 623, "discovery": 491, "discuss": 623, "disk": 599, "dispatch": [466, 513], "displaying": 639, "dissecting": [535, 592], "distanc": 548, "distinct": 534, "distribu": [479, 572, 642, 644], "distribut": 579, "disubprogram": 579, "disubrang": 579, "disubroutinetyp": 579, "ditemplatetypeparamet": 579, "ditemplatevalueparamet": 579, "dith": 613, "dlc": 464, "dll": 579, "dmask": 464, "do": [477, 486, 543, 548, 581, 591, 607, 648], "doc": 532, "dock": 539, "dockerfil": 539, "docu": [480, 532, 545, 591, 652], "document": [466, 467, 486, 572, 653], "doesn": 581, "doesnotaccessmemory": 469, "dofinaliz": 648, "doinitializ": 648, "dom": 607, "domfronti": 607, "domin": 607, "dominator": 607, "domtre": 607, "don": [464, 485, 486, 534, 543, 548, 626, 631], "donothing": 579, "dot": 607, "down": 626, "downstream": 614, "doxygen": 486, "dpp": 464, "dpp16": [0, 1, 464], "dpp16_ctrl": 464, "dpp8": [0, 1, 464], "dpp8_sel": 464, "dpp_ctrl": 464, "drawback": 611, "driv": [669, 670, 680, 681], "driven": 469, "drop": [494, 575], "ds": 469, "dse": [469, 607], "dso": 579, "dst": [61, 150, 251, 343, 404], "dst_sel": 464, "dst_unused": 464, "dsymutil": 489, "due": 486, "dump": [504, 516, 517], "duplicat": [607, 631], "during": [625, 645], "dw_at_llvm_active_lan": 466, "dw_at_llvm_augment": 466, "dw_at_llvm_lane_pc": 466, "dwarf": [461, 466, 489, 504, 512, 625, 676], "dwarfdump": [504, 546], "dyn_cast": 609, "dynamic": [483, 579], "dynamically": [530, 648], "e": 580, "e_flag": 466, "each": 607, "early": 486, "easi": 626, "ebpf": 483, "ec": 597, "ed": 536, "edge": [607, 626, 630], "editing": 515, "ef_amdgpu_mach": 466, "effect": [545, 548], "efficiency": [469, 578], "efficient": 485, "eh": [540, 607], "eith": 595, "element": [486, 548, 579], "elf": [466, 515, 522, 526, 542], "elimin": 607, "elis": 578, "else": [482, 486, 672, 683], "elseif": 482, "email": 611, "embed": 626, "embedded": [532, 585], "embedding": [466, 481], "emiss": [483, 542, 676], "emit": [499, 675], "emitt": 646, "emitting": [483, 547, 620, 635], "empty": 487, "enabl": 579, "enabling": 620, "encoding": [461, 463, 473, 483, 535], "end": [486, 492, 534, 543, 548, 574, 579, 592, 625], "end_block": 473, "endcatch": 540, "endian": 472, "ending": 609, "endl": 486, "endofbuff": 651, "engin": 584, "enhanc": 630, "enough": 477, "enter_subblock": 473, "entit": 461, "entri": 628, "entry": [461, 466, 475, 579, 607], "enumer": [466, 486], "enumerated": 634, "enumerator": 486, "environment": [466, 579, 648], "epilog": 483, "epilogu": 645, "equal": 486, "equivalent": 579, "erlang": 547, "error": [486, 594, 609, 622, 631, 635, 652], "error_cod": 609, "erroror": 609, "established": 538, "etc": [541, 609], "eval": [469, 607], "evalu": [461, 469], "evaluat": 486, "evaluator": 607, "even": 626, "event": 549, "every": 486, "everyon": 485, "everything": 626, "evolu": 607, "exactly": 581, "exampl": [461, 466, 472, 491, 498, 500, 505, 512, 518, 525, 527, 534, 536, 547, 550, 552, 558, 565, 566, 577, 579, 581, 582, 586, 594, 609, 627, 636, 637, 648], "except": [486, 540, 578, 579, 607], "exceptional": 630, "exceptionpoint": 540, "exe": 508, "exec": 465, "execu": [466, 491, 609, 641], "execut": [493, 602], "executing": [481, 592], "execz": 465, "exeges": 505, "exhaust": 607, "existing": [469, 648, 674, 685], "exit": [486, 487, 488, 489, 491, 492, 493, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 509, 510, 512, 513, 514, 515, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 607], "exitonerror": 609, "exp": [0, 2, 3, 4, 464, 579], "exp2": 579, "expand": 646, "expanding": 579, "expandload": 579, "expans": 625, "expect": [475, 579], "exper": 611, "experimental": [579, 615, 628, 630], "expert": 485, "explic": 630, "exploiting": 530, "explor": 650, "export": 499, "expos": 631, "exposed": 631, "express": [461, 465, 466, 535, 540, 579, 607, 626, 636, 669, 670, 672, 680, 681, 683], "extended": 483, "extending": [541, 672, 673, 674, 683, 684, 685], "extens": [461, 530, 542, 555, 613, 625, 648, 672, 683], "external": [530, 585, 607, 618, 639, 640, 687], "externalfnconst": 607, "extra": [513, 548, 641], "extract": [506, 579, 607], "extractel": 579, "extractvalu": 579, "extrahelp": 530, "extrem": 657, "f": [580, 591], "fab": 579, "facilit": 636, "fadd": 579, "fail": 570, "fair": [466, 481, 530, 573, 614, 670], "fallibl": 609, "faq": [543, 581, 647], "fast": 579, "fastisel": [564, 634], "fault": 544, "faultmap": 544, "fcmp": 579, "fconst": 465, "fdiv": 579, "featur": [466, 483, 547, 581, 593, 602, 606, 612, 613, 641, 645], "feedback": 485, "fenc": 579, "ffmpeg": 613, "fi": 464, "fidelity": 650, "field": [591, 635, 636], "fil": [473, 483, 486, 487, 489, 491, 501, 514, 516, 517, 524, 530, 535, 550, 570, 582, 585, 597, 601, 605, 607, 620, 621, 625, 636, 641, 649], "filecheck": 487, "filenam": 579, "filing": 621, "filt": [483, 540], "filter": 540, "filtering": 517, "fin": [581, 594, 609, 626], "final": [534, 572, 584], "find": [545, 607], "finding": [546, 608, 609], "findregress": 619, "firehos": 613, "first": [548, 579, 678], "fix": [533, 579, 591], "fixed": [466, 473, 483, 579, 585, 609, 625], "fixing": 476, "flag": [530, 531, 579, 585, 606, 626, 639, 645], "flam": 650, "flat": [0, 2, 3, 4, 8, 464, 466], "flat_scratch": 465, "flexibl": 487, "flight": [649, 651], "float": 570, "floating": [465, 466, 467, 493, 542, 555, 579], "floor": 579, "flow": [461, 480, 482, 513, 555, 652, 672, 683], "flt": 579, "fma": 579, "fma_mix": 464, "fmax": 579, "fmin": 579, "fmt": 464, "fmul": 579, "fmuladd": 579, "fn": 607, "fneg": 579, "focus": 478, "folded": 626, "folding": [483, 646, 671, 682], "foldingset": 609, "follow": 591, "following": 548, "followup": 579, "followup_all": 579, "followup_coincident": 579, "followup_epilogu": 579, "followup_fallback": 579, "followup_inn": 579, "followup_out": 579, "followup_remaind": 579, "followup_remainder_inn": 579, "followup_remainder_out": 579, "followup_sequential": 579, "followup_vectorized": 579, "for": [461, 466, 469, 477, 479, 483, 485, 486, 494, 507, 509, 511, 532, 539, 540, 543, 545, 546, 548, 550, 559, 565, 570, 573, 575, 579, 581, 592, 607, 609, 610, 611, 613, 625, 630, 632, 640, 643, 672, 674, 683, 685], "forbidden": 486, "forced": 607, "foreach": 636, "forensic": 517, "fork": 581, "form": [461, 483, 583, 607], "format": [461, 466, 473, 483, 486, 491, 504, 515, 522, 535, 540, 546, 585, 599, 601, 605, 625, 628, 630, 651], "formatting": [486, 530, 609, 627], "formatv": 609, "formedness": 579, "fortran": 625, "fp16": 579, "fpext": 579, "fpmath": 579, "fptos": 579, "fptou": 579, "fptrunc": 579, "fragil": 641, "fram": [461, 466, 483, 534, 540, 677, 686], "frameaddress": 579, "framework": 538, "fre": [534, 566, 601], "freeform": 530, "freelist": 622, "freepoom": 613, "freez": 579, "frem": 579, "frequency": 474, "frequently": [481, 543], "friendly": 581, "from": [466, 474, 483, 493, 506, 530, 531, 548, 550, 571, 579, 593, 607, 608, 609, 626, 657], "front": [543, 548, 574, 625], "frontend": [545, 678], "fronti": 607, "fshl": 579, "fshr": 579, "fsub": 579, "ft": 482, "ftensor": 613, "full": [579, 654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "fully": 486, "funclet": [540, 579], "function": [466, 475, 482, 483, 486, 506, 530, 534, 535, 541, 543, 556, 579, 585, 591, 592, 607, 609, 625, 626, 631, 645, 649, 651, 656, 670, 676, 681], "function_block": 473, "function_entry_count": 579, "function_ref": 609, "functional": 483, "functionality": 631, "functioncomparator": 591, "functionpass": 648, "fundamental": [541, 638], "furth": [513, 593, 610, 650], "futur": [483, 564, 593, 626, 648, 649], "fuzz": [546, 581], "fuzzer": 546, "fuzzing": [546, 581], "fx": [50, 304, 309, 314, 337], "g": 580, "g_ab": 555, "g_add": 555, "g_addrspace_cast": 555, "g_and": 555, "g_anyext": 555, "g_ashr": 555, "g_atomic_cmpxchg": 555, "g_atomic_cmpxchg_with_success": 555, "g_atomicrmw_add": 555, "g_atomicrmw_and": 555, "g_atomicrmw_fadd": 555, "g_atomicrmw_fsub": 555, "g_atomicrmw_max": 555, "g_atomicrmw_min": 555, "g_atomicrmw_nand": 555, "g_atomicrmw_or": 555, "g_atomicrmw_sub": 555, "g_atomicrmw_umax": 555, "g_atomicrmw_umin": 555, "g_atomicrmw_xchg": 555, "g_atomicrmw_xor": 555, "g_bitcast": 555, "g_bitrevers": 555, "g_block_addr": 555, "g_br": 555, "g_brcond": 555, "g_brindirect": 555, "g_brjt": 555, "g_bswap": 555, "g_build_vector": 555, "g_build_vector_trunc": 555, "g_concat_vector": 555, "g_const": 555, "g_ctlz": 555, "g_ctlz_zero_undef": 555, "g_ctpop": 555, "g_cttz": 555, "g_cttz_zero_undef": 555, "g_dyn_stackalloc": 555, "g_extract": 555, "g_extract_vector_elt": 555, "g_fab": 555, "g_fadd": 555, "g_fcanonicaliz": 555, "g_fceil": 555, "g_fcmp": 555, "g_fconst": 555, "g_fcopysign": 555, "g_fcos": 555, "g_fdiv": 555, "g_fenc": 555, "g_fexp": 555, "g_fexp2": 555, "g_ffloor": 555, "g_flog": 555, "g_flog10": 555, "g_flog2": 555, "g_fma": 555, "g_fmad": 555, "g_fmaximum": 555, "g_fmaxnum": 555, "g_fmaxnum_iee": 555, "g_fminimum": 555, "g_fminnum": 555, "g_fminnum_iee": 555, "g_fmul": 555, "g_fnearbyint": 555, "g_fneg": 555, "g_fpext": 555, "g_fpow": 555, "g_fptos": 555, "g_fptou": 555, "g_fptrunc": 555, "g_frame_index": 555, "g_frem": 555, "g_frint": 555, "g_fsin": 555, "g_fsqrt": 555, "g_fsub": 555, "g_global_valu": 555, "g_icmp": 555, "g_implicit_def": 555, "g_indexed_load": 555, "g_indexed_sextload": 555, "g_indexed_stor": 555, "g_indexed_zextload": 555, "g_insert": 555, "g_insert_vector_elt": 555, "g_intrinsic": 555, "g_intrinsic_round": 555, "g_intrinsic_trunc": 555, "g_intrinsic_w_side_effect": 555, "g_inttoptr": 555, "g_jump_tabl": 555, "g_load": 555, "g_lshr": 555, "g_merge_valu": 555, "g_mul": 555, "g_or": 555, "g_phi": 555, "g_ptr_add": 555, "g_ptrmask": 555, "g_ptrtoint": 555, "g_sadd": 555, "g_saddo": 555, "g_saddsat": 555, "g_sdiv": 555, "g_select": 555, "g_sext": 555, "g_sext_inreg": 555, "g_sextload": 555, "g_shl": 555, "g_shuffle_vector": 555, "g_sitofp": 555, "g_smax": 555, "g_smin": 555, "g_smulh": 555, "g_smulo": 555, "g_srem": 555, "g_sshlsat": 555, "g_ssub": 555, "g_ssubo": 555, "g_ssubsat": 555, "g_stor": 555, "g_sub": 555, "g_trunc": 555, "g_uadd": 555, "g_uaddo": 555, "g_uaddsat": 555, "g_udiv": 555, "g_uitofp": 555, "g_umax": 555, "g_umin": 555, "g_umulh": 555, "g_umulo": 555, "g_unmerge_valu": 555, "g_urem": 555, "g_ushlsat": 555, "g_usub": 555, "g_usubo": 555, "g_usubsat": 555, "g_vaarg": 555, "g_vastart": 555, "g_vecreduce_fadd": 555, "g_vecreduce_fmax": 555, "g_vecreduce_fmin": 555, "g_vecreduce_fmul": 555, "g_vecreduce_seq_fadd": 555, "g_vecreduce_seq_fmul": 555, "g_xor": 555, "g_zext": 555, "g_zextload": 555, "garbag": [547, 579, 617, 630, 677, 686], "gath": [579, 645], "gc": [547, 579, 630], "gcmetadataprint": 547, "gcov": 499, "gcread": [547, 579], "gcroot": 579, "gcwrit": [547, 579], "gd": 464, "gdb": [536, 648], "gen": 592, "gener": [483, 493, 519, 540, 547, 574, 584, 585, 607, 644, 650, 670, 672, 681, 683], "general": [461, 471, 479, 485, 491, 493, 522, 529, 542, 579, 588, 609, 634, 651], "generally": 483, "generat": [520, 524], "generated": [483, 543], "generating": [547, 640], "generator": [477, 483, 543, 546, 574, 579, 607], "generic": [495, 515, 526, 546, 554, 555, 613, 634], "geometric": 613, "gep": [545, 548], "get": 579, "getanalys": 648, "getanalysisifavail": 648, "getanalysisusag": 648, "getelementptr": [543, 579], "getmodrefinfo": 469, "getposit": 530, "getregisteredopt": 530, "getting": [474, 549, 550, 551, 552, 581, 594, 635, 650], "gfx10": [0, 466], "gfx1011": 1, "gfx1012": 1, "gfx6": 466, "gfx7": 2, "gfx8": 3, "gfx9": [4, 466], "gfx900": 5, "gfx902": 5, "gfx904": 6, "gfx906": 7, "gfx908": 8, "gfx909": 5, "gfx_generation_minor": 466, "gfx_generation_numb": 466, "gfx_generation_stepping": 466, "git": [550, 553, 611, 614], "github": 611, "given": 570, "glc": 464, "global": [466, 564, 579, 585, 591, 595, 598, 607, 625, 645], "global_ctor": [543, 579], "global_dtor": 579, "globaldc": 607, "globalisel": 561, "globalopt": 607, "globalsmodref": [469, 607], "globalvalu": 609, "globalvari": 609, "gnu": [490, 521], "gnupg": 613, "go": [486, 543, 595, 618], "goal": [547, 590], "gold": 565, "good": 581, "got": 574, "grained": [609, 626], "grammar": 651, "granularity": 594, "graph": [537, 542, 607, 609, 613, 626, 636, 650], "graph500": 613, "graphic": 466, "group": [579, 623, 648], "grouping": 530, "guarante": [677, 686], "guard": [486, 579, 626], "guarded": 566, "guid": [466, 470, 490, 530, 539, 575, 585, 592, 621, 635, 639, 640, 641, 644], "guidanc": 479, "guided": [569, 581, 607, 639], "guidelin": [486, 586, 616, 627], "gvn": [469, 607], "gwp": 566, "h": [483, 531, 580, 609], "hack": 571, "hacking": 607, "half": [579, 630], "handl": 466, "handler": 609, "handling": [482, 483, 540, 579, 607, 609, 652], "happen": [543, 548, 621], "hard": [626, 674, 676, 685], "hardened": [622, 626], "hardening": 626, "hardwar": [532, 550, 552, 579], "harness": 613, "hasglobalalias": 591, "hash": [599, 625], "haswel": 626, "hav": 548, "hcc": 466, "head": [461, 466, 486, 535, 570, 597, 602, 604, 622, 625, 651], "header": [466, 486, 631], "heap": [534, 547, 589, 609], "heavy": 626, "hello": [647, 648], "help": [530, 531, 543, 610], "helpful": [533, 609], "heterogeneous": 461, "hex": 652, "hexadecimal": 542, "hexagon": 532, "hiding": 530, "hierarch": [573, 609], "hierarchy": [573, 609], "high": [464, 483, 486, 535, 537, 543, 579, 585, 613, 616, 626, 631], "hint": [579, 609, 645], "historical": [478, 554], "history": 611, "hook": 550, "hopefully": 586, "host": [531, 550, 570, 588], "hosting": 543, "how": [467, 476, 483, 485, 513, 533, 543, 548, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 581, 588, 591, 593, 619, 623, 625, 627, 629, 636], "hpc": 613, "hsa": 466, "hsa_code_object_is": 466, "hsa_code_object_vers": 466, "hwreg": [48, 142, 238, 391], "hydrobench": 613, "hyphen": 530, "i": [539, 543, 545, 548, 580, 591, 652], "i32": 548, "ia": 492, "ia64": 532, "ibm": 532, "icmp": 579, "iconst": 465, "id": [466, 473, 534, 535, 579], "ide": [480, 630, 673, 684], "identifi": [466, 579, 636], "identifying": 547, "idxen": 464, "if": [475, 482, 486, 548, 591, 636, 645, 646, 672, 683], "ifunc": 579, "ilist": 609, "ilist_nod": 609, "ilist_trait": 609, "imag": [466, 539, 613], "imask": [239, 392], "imm16": [24, 78, 98, 124, 162, 187, 209, 266, 289, 367, 421, 444], "imm3": [60, 250, 403], "imm32": [25, 46, 47, 125, 141, 210, 236, 237, 368, 389, 390], "immediat": 585, "immutablemap": 609, "immutablepass": 648, "immutableset": 609, "impl": 607, "implement": [469, 472, 474, 478, 483, 486, 537, 564, 579, 582, 584, 589, 591, 593, 594, 613, 624, 626, 631, 646, 648], "implementing": [483, 547, 648, 669, 677, 680, 686, 687], "implic": [461, 466, 544], "implicitnullcheck": 544, "import": [557, 583, 609], "importing": 611, "in": [472, 475, 476, 481, 482, 483, 486, 494, 534, 537, 540, 543, 547, 575, 585, 588, 591, 595, 607, 609, 611, 618, 620, 624, 625, 628, 630, 636, 645, 648, 649, 652, 674, 685, 687], "inalloc": 578, "includ": [486, 543, 550, 631, 636], "inclus": 632, "incorrect": 574, "increment": 579, "incremental": 538, "incubating": 538, "indent": 486, "independent": [483, 543, 677, 686], "index": [461, 520, 548, 579, 585, 594, 634, 653], "indexedmap": 609, "indic": [545, 548, 585, 604], "indirect": [579, 626], "indirectbr": 579, "indirectbrinst": 475, "individual": [585, 609], "induct": [607, 645], "indvar": 607, "info": [575, 585, 595, 597, 602, 607, 609, 618, 625, 646], "inform": [461, 466, 483, 486, 499, 504, 523, 532, 533, 579, 589, 600, 607, 609, 618, 625, 641, 643, 676], "informed": 538, "infrastructur": [469, 491, 567, 618, 641], "init": [579, 635], "initial": [466, 483], "initializ": [469, 486, 581, 609], "initializing": 547, "initweak": 579, "inlin": [465, 483, 486, 579, 607], "inlining": 607, "input": [515, 518, 546, 579, 652], "insert": [483, 579, 630], "insertel": 579, "inserting": 609, "insertvalu": 579, "inspect": 609, "install": [479, 507], "installing": 571, "instcombin": [543, 607, 615], "instcount": 607, "instnam": 607, "instrinfo": 634, "instrmapping": 577, "instrprof": 579, "instruct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 461, 462, 463, 464, 465, 466, 470, 472, 475, 483, 505, 513, 540, 541, 543, 548, 554, 564, 575, 577, 579, 581, 585, 587, 607, 609, 615, 625, 626, 646, 650], "instructionselect": 557, "instructionselector": 557, "instrument": [589, 649, 650], "instrumenting": 649, "instsimplify": 615, "integ": [465, 548, 555, 579], "integer": 473, "integr": [607, 626], "integral": 579, "integrated": 491, "intel": [471, 492], "intended": 578, "inteqcl": 609, "interact": [609, 648], "interchang": 642, "interfac": [469, 478, 543, 608, 609, 631], "interleav": 579, "interleaving": 642, "internal": [466, 486, 530, 626], "internaliz": 607, "interoperability": 609, "interprocedural": [607, 626], "interval": [483, 607], "intervalmap": 609, "intin": 635, "into": [486, 527, 530, 538, 543, 548, 575, 607, 609, 626], "intrinsic": [466, 467, 472, 534, 540, 541, 547, 556, 579, 592, 607, 615, 625, 628, 630, 634], "intrinsicid": 585, "introducing": 538, "introduct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 461, 462, 466, 468, 469, 470, 471, 472, 474, 475, 476, 478, 479, 481, 482, 483, 486, 530, 531, 534, 535, 537, 538, 539, 540, 541, 542, 546, 547, 548, 553, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 581, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 604, 605, 607, 609, 611, 612, 614, 618, 619, 620, 622, 624, 625, 629, 634, 635, 636, 637, 646, 647, 648, 649, 651, 652, 654, 655, 656, 657, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 684, 685], "inttoptr": [548, 579], "invalid": 590, "invari": [579, 607, 626, 651], "invok": [579, 607, 636], "invokeinst": 475, "invoking": 531, "involved": 549, "iostream": [486, 543], "ipi": 604, "iplist": 609, "ipsccp": 607, "ir": [466, 467, 470, 472, 473, 535, 538, 543, 545, 546, 547, 548, 554, 575, 585, 607, 609, 615, 617, 618, 670, 672, 677, 681, 683, 686], "irc": 549, "irr_loop": 579, "irtransformlai": 655, "irtranslator": 556, "is": [483, 485, 486, 543, 547, 548, 579, 581, 611, 623, 625, 626, 632, 636, 647, 648, 674, 676, 685], "isa": 609, "isel": 546, "isn": 477, "isol": 609, "issu": [469, 478, 486, 513, 533, 592, 623], "it": [485, 543, 548, 565, 591, 602, 629, 675], "itanium": [532, 540], "item": [466, 550], "iter": 579, "iterat": 636, "iterating": 609, "iterator": [609, 645], "iv": 607, "ival": 465, "jam": [607, 642], "jit": [483, 536, 609, 644, 646, 654, 655, 656, 657, 671, 682, 687], "jitdylib": 593, "joinerror": 609, "json": 634, "jump": [483, 585, 607], "kaleidoscop": [658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687], "kaleidoscopej": 654, "keep": [486, 614], "keeping": [614, 623, 631], "kernel": [466, 592], "key": 652, "keyword": 486, "kicking": [673, 684], "kind": 614, "know": 591, "known": 558, "kokkos": 613, "label": [49, 143, 240, 393, 486, 487, 579], "lai": 483, "laiss": 614, "lambd": 486, "lan": [466, 472, 532, 579], "landingpad": 579, "languag": [461, 466, 486, 543, 545, 579, 625, 668, 672, 673, 674, 677, 678, 679, 683, 684, 685, 686, 687], "larg": [545, 626], "lat": 483, "laund": 579, "layer": 655, "layering": [486, 612], "layout": [466, 483, 550, 579, 592, 600, 601, 605, 607, 609, 610, 625, 643], "laziness": [593, 657], "lazy": [607, 609, 656], "lazyreexport": 657, "lcssa": [583, 607], "ld": 464, "ld1": 472, "ldr": 472, "lds_direct": 465, "leaf": 596, "leak": 581, "leb128": 535, "leftov": 642, "legacy": 538, "legal": [545, 646], "legality": 559, "legaliz": [483, 559, 646], "legalizerinfo": 559, "legalizetyp": 483, "length": 542, "less": 626, "let": 636, "level": [472, 483, 486, 530, 535, 537, 543, 554, 575, 579, 585, 593, 607, 615, 616, 625, 626, 631], "lex": [668, 672, 679, 683], "lexical": 636, "lexicon": 580, "lf_arglist": 596, "lf_array": 596, "lf_bclass": 596, "lf_binterfac": 596, "lf_bitfield": 596, "lf_buildinfo": 596, "lf_class": 596, "lf_endprecomp": 596, "lf_enum": 596, "lf_enumerat": 596, "lf_fieldlist": 596, "lf_func_id": 596, "lf_index": 596, "lf_interfac": 596, "lf_ivbclass": 596, "lf_label": 596, "lf_memb": 596, "lf_method": 596, "lf_methodlist": 596, "lf_mfunc_id": 596, "lf_mfunction": 596, "lf_modifi": 596, "lf_nesttyp": 596, "lf_onemethod": 596, "lf_padn": 596, "lf_point": 596, "lf_precomp": 596, "lf_procedur": 596, "lf_stmemb": 596, "lf_string_id": 596, "lf_structur": 596, "lf_substr_list": 596, "lf_typeserver2": 596, "lf_udt_mod_src_lin": 596, "lf_udt_src_lin": 596, "lf_union": 596, "lf_vbclass": 596, "lf_vftabl": 596, "lf_vfunctab": 596, "lf_vtshap": 596, "lfenc": 626, "lgtm": 485, "lib": [508, 550, 579], "libc": 612, "libcall": [470, 607], "libdevic": 592, "liberally": 486, "libfuzz": [581, 617], "liblto": 582, "libm": 579, "libprotobuf": 546, "librar": [486, 509, 542, 546, 610, 613], "library": [479, 486, 508, 530, 531, 550, 579, 581, 593, 606, 609, 612, 613, 622, 631, 633, 649], "libtool": 509, "licens": [538, 543], "licensing": 565, "licm": [469, 579, 607, 642], "licm_versioning": 579, "lif": 476, "lifetim": [578, 579, 625], "lift": 615, "lik": [486, 543, 609], "lim": 594, "limit": [469, 585, 630, 643], "lin": [461, 466, 478, 530, 608, 617, 645], "link": [510, 542, 550, 552, 565, 579, 582, 627], "linkag": [579, 593], "linking": 592, "linkonc": 542, "lint": 607, "linux": [471, 532], "lipo": 511, "list": [461, 482, 486, 514, 530, 532, 549, 579, 604, 609, 618, 627, 652], "listin": 635, "listing": [654, 655, 656, 657, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685], "listrecty": 635, "lit": 491, "literal": [461, 465, 636], "littl": 486, "liv": [483, 579, 585], "livedebugvalu": 625, "ll": 524, "llc": 492, "lldb": [536, 618], "lli": 493, "lljit": 593, "lllazyj": 593, "llrint": 579, "llround": 579, "llvm": [466, 469, 470, 472, 473, 474, 475, 476, 477, 479, 481, 482, 483, 484, 485, 486, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548, 550, 552, 553, 565, 567, 568, 569, 571, 572, 573, 574, 575, 579, 580, 581, 582, 583, 587, 588, 590, 592, 606, 607, 609, 610, 611, 612, 615, 616, 617, 618, 620, 623, 624, 625, 628, 630, 631, 632, 634, 641, 644, 645, 646, 647, 648, 649, 650, 653, 670, 671, 672, 674, 677, 678, 681, 682, 683, 685, 686, 687], "llvm_debug": 609, "llvm_shutdown": 609, "llvmcontext": 609, "lnt": 639, "load": [483, 513, 545, 579, 626], "loaded": [466, 626, 648], "loading": 584, "loadweak": 579, "loadweakretained": 579, "local": [491, 550, 579, 611, 674, 685], "localescap": 579, "localrecov": 579, "locat": [461, 480, 512, 527, 550, 575, 585, 625, 626, 676], "locating": 590, "locstat": 512, "log": [579, 591], "log10": 579, "log2": 579, "logarithmical": 591, "logical": 461, "long": 614, "longjmp": 540, "looking": 545, "lookup": [461, 466, 625], "loop": [474, 482, 486, 579, 583, 607, 642, 645, 648, 672, 683], "loopinfo": 583, "looppass": 648, "lostdebuglocobserv": 575, "low": [486, 554, 607], "loweratomic": 607, "lowering": [534, 547, 548, 579, 630], "lowerinvok": 607, "lowerswitch": 607, "lppassmanag": 648, "lrint": 579, "lround": 579, "lsda": 540, "lshr": 579, "lto": [565, 579], "lto_code_gen_t": 582, "lto_module_t": 582, "lwe": 464, "m0": [465, 466], "m_op_sel": 464, "m_op_sel_h": 464, "mach": [514, 516, 522, 527, 625], "machin": [483, 505, 513, 542, 545, 554, 585, 630, 646, 675], "machine_version_major": 466, "machine_version_minor": 466, "machine_version_stepping": 466, "machinebasicblock": 483, "machinefunct": [483, 648], "machinefunctionpass": 648, "machineinstr": [483, 575], "machineinstrbuild": 483, "machineverifi": 560, "machsuit": 613, "macos": 532, "macro": 609, "macros": [482, 652], "mad_mix": 464, "magic": 473, "mailing": 549, "main": 591, "mainten": 476, "major": [466, 538, 579], "mak": [485, 486, 543, 544, 626], "makefil": [610, 639, 640], "making": [538, 609], "man": 611, "manag": 593, "managedstatic": 609, "managing": 611, "mangled": 501, "manipul": [534, 579], "manipulat": 489, "manipulating": [507, 511], "manual": [530, 532, 579, 585, 609], "map": [466, 483, 542, 544, 547, 579, 597, 601, 602, 609, 628, 630], "mapping": [466, 467, 483, 535, 577, 646, 652], "mapvector": 609, "markdown": 586, "marker": [513, 579], "marking": 592, "markup": 587, "mask": 579, "masked": [579, 615], "mass": 474, "matching": [483, 487, 602], "math": [531, 579], "mati": [612, 615], "matrix": [483, 579], "maximum": 579, "maxnum": 579, "may": [469, 591], "mc": [483, 546], "mca": 513, "mccontext": 483, "mcinst": 483, "mcjit": [536, 584], "mcsection": 483, "mcstream": 483, "mcsymbol": [483, 585], "mechanical": 486, "medium": 623, "meeting": 590, "meetup": [549, 588], "mem2reg": 607, "memb": [548, 596, 625], "member": [609, 621, 623], "membership": [623, 643], "memcpy": [579, 607], "memcpyopt": [469, 607], "memdep": 607, "memmov": 579, "memory": [461, 466, 469, 513, 545, 555, 579, 607, 609, 674, 685], "memorydependenceanalys": 469, "memoryss": 590, "memset": 579, "memtagsanitiz": 589, "merg": [517, 518, 572, 575, 581, 607, 611, 614], "mergefunc": 607, "mergefunct": 591, "mergereturn": 607, "mergetwofunct": 591, "merging": [572, 591], "messag": [486, 538, 635], "meta_block": 620, "metadat": [466, 475, 476, 544, 579, 592, 620, 625, 642, 643, 651], "metadata_attachment": 473, "metadata_block": 473, "method": [469, 486, 609, 631, 648], "mf": 648, "mfma": 464, "microscopic": 486, "microsoft": [481, 552], "middl": 543, "migrat": 611, "mimg": [0, 2, 3, 4, 464], "minimising": 614, "minimiz": 631, "minimizing": [539, 649], "minimum": [559, 579], "minnum": 579, "minor": 466, "mip": [532, 618], "mir": [575, 585, 625], "mirror": 611, "miscellaneous": [464, 517, 530, 532, 585, 610, 648], "miscompil": [477, 574], "mismatched": 543, "missed": 607, "misunderstood": 548, "mitig": 626, "mixed": 645, "mixing": 630, "mlir": 529, "mnemonic": [463, 483], "mod": [466, 472, 483, 562, 581, 607, 620, 649, 676], "model": [466, 513, 531, 579, 626, 630], "modeling": 545, "modern": 550, "modif": [475, 570], "modifi": [462, 463, 464, 466, 487, 495, 530, 579], "modified": 543, "modify": 543, "modul": [482, 506, 517, 579, 585, 595, 597, 600, 607, 609, 648, 655, 675], "module_block": 473, "module_code_ali": 473, "module_code_asm": 473, "module_code_datalayout": 473, "module_code_deplib": 473, "module_code_funct": 473, "module_code_gcnam": 473, "module_code_globalvar": 473, "module_code_sectionnam": 473, "module_code_tripl": 473, "module_code_vers": 473, "modulepass": 648, "monorepo": [538, 611], "monotonic": 470, "mor": [468, 486, 553, 581, 583, 589, 609, 649], "most": 607, "motion": 607, "motiv": [461, 544, 615, 628], "mov": 611, "moved": [633, 638], "moveweak": 579, "moving": 611, "mri": 495, "msf": [517, 601, 605], "msg": [54, 145, 244, 397], "mtbuf": [0, 2, 3, 4, 464], "mubuf": [0, 2, 3, 4, 8, 464, 466], "mul": 579, "mult": [468, 522, 582], "multicl": 636, "multiclass": 636, "multigrid": 613, "multipl": [534, 553, 609, 611, 636], "multiply": 579, "multithreaded": 648, "must": [469, 485, 530], "mustprogress": 579, "mutabl": [674, 685], "mutat": [575, 674, 685], "mutator": [546, 581], "my": [543, 548, 581, 678], "nam": [461, 466, 486, 500, 501, 507, 579, 607, 614, 625, 635, 646], "named": [530, 579, 602], "namespac": 486, "naming": 483, "narrat": 591, "narrow": 478, "nas": 613, "nativ": [473, 483], "natural": 607, "near": 593, "nearbyint": 579, "need": [548, 586], "neg": 464, "neg_h": 464, "neg_lo": 464, "negat": 548, "neon": 472, "nested": [578, 627], "new": [469, 478, 538, 540, 541, 561, 607, 609, 612, 619, 623, 625, 626, 627, 635, 641, 648, 674, 685], "newbuff": 651, "newcpuid": 651, "newlin": 487, "next": [487, 650], "next_free_sgpr": 466, "next_free_vgpr": 466, "nightly": 619, "nm": 514, "no": [469, 570, 591, 607, 631, 652], "noali": 579, "nod": [467, 541, 579, 607], "nomin": 623, "non": [466, 468, 485, 486, 547, 579, 590, 607, 618, 630], "nondebug": 607, "noop": 534, "normal": 534, "normaliz": 652, "not": [466, 479, 480, 483, 486, 487, 530, 532, 543, 554, 568, 570, 581, 583, 591, 607, 611, 618], "notat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 462, 550], "notatomic": 470, "null": [465, 547, 548], "numb": [461, 466, 473, 530, 614], "number": [465, 473, 611], "numbering": 607, "numeric": 487, "numerical": 531, "nv": 464, "nvcc": 531, "nvptx": [483, 532, 592], "nvvm": 592, "nwchem": 613, "o": [483, 514, 516, 522, 527, 580, 591, 625, 652], "objc": 579, "objcopy": 515, "objdump": 516, "object": [466, 473, 480, 514, 515, 516, 521, 522, 526, 548, 550, 579, 584, 609, 610, 620, 625, 630, 649, 675, 687], "objectsiz": 579, "obtaining": [531, 538], "ocaml": [547, 618], "occurrent": 530, "of": [0, 2, 3, 5, 461, 464, 465, 469, 474, 476, 479, 481, 482, 483, 484, 485, 486, 504, 530, 533, 535, 538, 543, 545, 546, 547, 548, 550, 556, 565, 573, 578, 579, 581, 582, 590, 592, 595, 607, 609, 610, 614, 618, 619, 621, 623, 625, 626, 636, 645, 646, 648, 652, 676, 677, 686, 687], "off": [465, 537], "offen": 464, "official": [532, 572], "offset": [579, 626, 643], "offset11": 464, "offset12": 464, "offset13": 464, "offset16": 464, "offset8": 464, "offsetof": [677, 686], "often": 548, "omod": 464, "omp2012": 613, "once": 534, "one": [543, 548, 607], "ongoing": 645, "only": [479, 516, 607, 609, 611], "onlyreadsmemory": 469, "op_sel": 464, "op_sel_h": 464, "opaqu": 579, "opcod": [462, 463, 554, 555], "open": [573, 618], "openbenchmarking": 613, "opencl": 466, "opencv": 613, "openmp": 613, "oper": [461, 465, 466, 495, 545, 553, 555, 559, 579, 609, 626], "operand": [462, 463, 464, 465, 466, 579, 585, 628, 630, 646], "operating": 466, "operator": [465, 636, 673, 674, 684, 685], "opt": [58, 148, 248, 342, 401, 528, 530, 546, 594, 620, 647, 648], "optimiz": [466, 470, 483, 528, 531, 565, 569, 574, 579, 582, 590, 594, 607, 620, 625, 626, 639, 644, 655, 671, 677, 682, 686], "optimized": 625, "optimizer": 543, "optimizing": [479, 655], "option": [466, 478, 479, 481, 487, 488, 489, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 542, 566, 581, 609, 614, 622, 639, 641], "optional": [550, 587, 597], "optioncategory": 530, "optparserdef": 634, "or": [486, 530, 543, 579, 611, 626, 636], "orc": [593, 655], "orcv1": 593, "orcv2": 593, "order": [466, 486, 579, 642, 651, 652], "ordering": [470, 472, 486, 545, 579], "org": 613, "organiz": [631, 641], "os": 466, "other": [461, 469, 475, 480, 482, 495, 517, 530, 532, 543, 545, 548, 555, 570, 579, 592, 609, 641, 677, 686], "out": [481, 548, 654], "output": [491, 497, 504, 515, 530, 579, 581, 587, 635, 640, 652], "outsid": 470, "outstanding": 611, "over": [486, 545, 609, 612, 636], "overflow": [548, 566, 579], "overhead": [626, 630], "overlap": 518, "overloading": 531, "overrid": [469, 636], "overridden": 591, "overview": [469, 473, 482, 486, 534, 535, 539, 540, 547, 550, 552, 577, 579, 585, 592, 593, 610, 619, 627, 628, 630, 637, 640, 641, 642], "owned": 609, "owner": 538, "p": 580, "packaging": 606, "packedvector": 609, "packet": 483, "packetiz": 483, "padding": [461, 596], "pag": 543, "pal": 466, "parallel": [581, 613], "parallel_access": 579, "param": [59, 149, 249, 402, 534, 579], "paramattr_block": 473, "paramattr_code_entry": 473, "paramattr_code_entry_old": 473, "paramattr_group_block": 473, "paramattr_grp_code_entry": 473, "paramet": 579, "parameter": 592, "parboil": 613, "parent": 540, "parenthes": 486, "parr": 613, "pars": [483, 530, 669, 672, 680, 683], "parsec": 613, "parsecommandlineopt": 530, "parser": 530, "parsing": [483, 530, 669, 680], "partial": [607, 645], "partit": [542, 607], "pass": [469, 481, 534, 544, 545, 575, 585, 591, 594, 607, 626, 630, 642, 647, 648, 671, 682], "passed": [570, 607], "passing": 609, "passmanag": 648, "past": 636, "patch": [485, 533, 538, 550, 572, 628], "patchpoint": 628, "patent": 538, "path": [466, 579], "patleaf": 557, "pattern": [464, 487, 607], "pcmark": 579, "pdb": [517, 527, 597, 598, 599, 602, 603, 604, 605], "pdb2yaml": 517, "pdbutil": 517, "pe": 522, "per": 656, "perform": [513, 545, 613, 626, 645], "peripheral": 632, "personality": 579, "pgo": [468, 569], "phabricator": 608, "phas": [483, 582, 635, 646], "phi": [579, 590], "philosophy": [477, 582, 625], "physical": 483, "pick": 588, "picking": 609, "piec": 533, "pipelin": 560, "plac": [590, 607, 610], "placesafepoint": 630, "plan": [611, 614, 616], "planned": 648, "planning": 616, "platform": [481, 515, 526, 532, 543, 612, 641, 649], "plugin": [547, 565, 648], "point": [465, 466, 467, 493, 534, 542, 547, 548, 555, 579, 609, 626, 628, 645], "pointer": [469, 486, 559, 579, 630, 645], "pointstoconstantmemory": 469, "poison": 579, "polic": [485, 538], "policy": [485, 538, 623, 632], "polybench": 613, "polymag": 613, "polymorphic": 609, "pool": [566, 585], "portabl": [486, 543, 631, 677, 686], "porting": 561, "posit": 530, "positional": 530, "possibilit": 530, "possibl": [486, 591], "post": [579, 607, 611], "postdom": 607, "postdomfronti": 607, "postdomin": 607, "postdomtre": 607, "potential": 608, "pow": 579, "powerpc": [483, 532, 618], "practic": [485, 545], "pragm": 645, "pre": [550, 619], "preallocated": 579, "preassigned": 483, "precis": [579, 590, 607], "preconfigured": 569, "predecessor": 609, "predefined": 466, "predicat": [486, 557, 559, 579, 585, 626], "predicated": 615, "prediqu": [579, 615], "preemption": 579, "pref": [486, 545], "prefetch": 579, "prefix": [487, 579], "preincr": 486, "preliminar": 646, "prepar": [534, 584], "preprocessing": 636, "prerequisit": [531, 570, 646], "present": [590, 591, 599], "preserv": [575, 579], "preserving": [579, 626], "pretty": 517, "previously": 486, "prim": 482, "primit": 473, "print": [469, 498, 523, 525, 607, 634, 646, 648], "printdetailedrecord": 635, "printing": 635, "printrecord": 635, "prior": 485, "privat": [466, 486], "privileg": 623, "prob": 542, "probability": [474, 475, 579], "problem": [472, 550, 552, 581, 626, 648, 674, 676, 685], "process": [483, 549, 572, 591, 593, 616, 619, 623], "processing": [483, 559, 613], "processor": [466, 532, 613, 626], "product": 476, "prof": 579, "profdat": 518, "profgen": 519, "profil": [518, 519, 542, 569, 579, 581, 607, 639], "program": [461, 483, 493, 537, 610, 637], "programm": [609, 636], "programmatic": 609, "progress": 564, "project": [481, 482, 538, 550, 565, 610, 611, 618], "prolog": [466, 483], "prologu": 579, "promis": 534, "promot": [607, 646], "propag": 607, "propagat": 626, "propagating": 609, "properly": 486, "propert": [466, 545, 625, 677, 686], "propos": 653, "proposal": [549, 611, 625], "proposed": 478, "protect": 626, "proto": 546, "prototyp": 607, "provid": 486, "provisional": 614, "prun": 607, "pseudo": [487, 535], "pseudolowering": 634, "ptr": [579, 592], "ptrmask": 579, "ptrtoint": [548, 579], "ptx": 592, "ptxas": 592, "public": [572, 595, 603, 609], "publiqu": 531, "push": 550, "putting": 675, "pwm": 613, "py": [619, 620], "q": 581, "qemu": 570, "qualif": 572, "qualifi": 486, "quality": [538, 630], "query": 607, "question": [484, 543, 611], "queu": 466, "quick": [481, 530, 547, 641, 647, 648], "quickstart": [565, 586, 627, 639], "quirky": 478, "r": 580, "r128": 464, "raj": 613, "random": [524, 546, 591], "randomness": 622, "rang": [486, 535, 579, 609], "ranlib": 520, "rarely": 481, "rational": [548, 579], "raw": 630, "raw_ostream": 486, "rawspeed": 613, "read": [521, 522, 547, 582, 592, 611, 614], "readabl": 486, "readcyclecount": 579, "readelf": [521, 522], "reading": [547, 592, 646], "readobj": 522, "reassociat": 607, "reciprocity": 485, "record": [466, 473, 517, 535, 595, 596, 604, 634, 635, 636, 649, 651], "recording": 630, "recordkeep": 635, "recordrecty": 635, "recordval": 635, "recover": 609, "recty": 635, "redesign": 478, "redistribut": 543, "redistributing": 543, "reduc": [579, 607, 615], "reducing": [479, 614], "reduct": [478, 488, 555, 579, 607, 645], "redund": 607, "reexport": 593, "ref": [579, 607], "referencing": 585, "referent": [461, 530, 537, 547, 554, 564, 579, 585, 607, 609, 611, 613, 614, 615, 616, 617, 630, 634, 636], "reflect": 592, "reg": 579, "reg2mem": 607, "regbankselect": 562, "regex": 487, "region": [535, 607, 630, 648], "regionpass": 648, "regist": [461, 466, 483, 545, 554, 585, 607, 625, 646], "register": [466, 483, 543, 554, 585, 592, 626], "registeranalysisgroup": 648, "registerbankinfo": 562, "registerinfo": 634, "registering": 648, "registr": [646, 648], "regress": [572, 575, 641], "reinstat": 632, "reject": 543, "relat": [461, 579, 626, 646], "related": 616, "relationship": [593, 609], "releas": [470, 572, 579, 618, 619], "releasememory": 648, "relev": [479, 532], "reliabl": 483, "relicensing": 538, "reloc": [466, 542, 630], "relocat": [465, 630], "relocating": 630, "remapping": [501, 584], "remark": 620, "remark_block": 620, "remov": 607, "removal": 632, "removeuser": 591, "replac": [490, 494, 564, 607], "replacedirectcaller": 591, "replacewithnewvalu": 469, "replacing": 609, "report": [476, 499, 533, 574, 607, 621, 623], "reporting": [476, 533, 572, 619, 621], "repositor": 611, "repository": 611, "represent": [461, 469, 534, 535, 543, 579, 630], "represented": 483, "representing": [483, 643], "request": [485, 572], "requesting": 608, "requir": [538, 547, 550, 552, 632, 641, 648], "required": [469, 483, 485, 530, 548, 610, 647, 648], "requiring": 534, "resampling": 613, "resolu": 582, "resolving": 476, "resourc": [466, 532, 553, 563], "respons": [469, 530, 607], "responsibilit": 623, "rest": [669, 680], "restrict": 540, "restricted": 545, "result": [469, 491, 630, 639], "resum": [534, 579], "resuming": 581, "ret": 579, "retain": 579, "retainautoreleas": 579, "retainautoreleasedreturnvalu": 579, "retainautoreleasereturnvalu": 579, "retainblock": 579, "retcon": 534, "retir": 513, "return": [486, 626], "returnaddress": 579, "returned": 534, "returning": 609, "revers": 645, "reverting": 550, "review": [485, 538, 608], "reviewed": 485, "reviewer": 608, "reviewing": 608, "revis": 611, "rewrit": 626, "rewritestatepointsforgc": 630, "rfc": 485, "rgpassmanag": 648, "rich": 587, "right": 609, "rint": 579, "rip": 626, "risc": 532, "roadmap": [593, 615, 616], "rodini": 613, "rol": 461, "root": [478, 547, 553], "rotat": 607, "rotated": 583, "round": 579, "roundeven": 579, "rounding": 466, "routin": 609, "row": 461, "row_mask": 464, "rpath": 507, "rt": 570, "rtti": [486, 573], "rul": [461, 548, 557, 559, 572, 573, 575, 579], "run": [491, 553], "running": [546, 571, 581, 592, 637, 639, 640, 647, 648], "runonfunct": 648, "runonloop": 648, "runonmachinefunct": 648, "runonmodul": [591, 648], "runonregion": 648, "runonscc": 648, "runtim": [540, 579, 645, 649], "s_block32": 595, "s_bprel32": 595, "s_buildinfo": 595, "s_calle": 595, "s_caller": 595, "s_callsiteinfo": 595, "s_coffgroup": 595, "s_compile2": 595, "s_compile3": 595, "s_const": 595, "s_defrang": 595, "s_defrange_framepointer_rel": 595, "s_defrange_framepointer_rel_full_scop": 595, "s_defrange_regist": 595, "s_defrange_register_rel": 595, "s_defrange_subfield": 595, "s_defrange_subfield_regist": 595, "s_end": 595, "s_envblock": 595, "s_export": 595, "s_fastlink": 595, "s_filestatic": 595, "s_framecook": 595, "s_frameproc": 595, "s_gdata32": 595, "s_gmandat": 595, "s_gproc32": 595, "s_gproc32_id": 595, "s_gthread32": 595, "s_heapallocsit": 595, "s_inline": 595, "s_inlinesit": 595, "s_inlinesite_end": 595, "s_label32": 595, "s_ldata32": 595, "s_lmandat": 595, "s_local": 595, "s_lproc32": 595, "s_lproc32_dpc": 595, "s_lproc32_dpc_id": 595, "s_lproc32_id": 595, "s_lprocref": 595, "s_lthread32": 595, "s_manconst": 595, "s_objnam": 595, "s_proc_id_end": 595, "s_procref": 595, "s_pub32": 595, "s_regist": 595, "s_regrel32": 595, "s_section": 595, "s_thunk32": 595, "s_trampolin": 595, "s_udt": 595, "s_unamespac": 595, "sadd": 579, "saddr": [64, 65, 345, 407, 408], "saf": [547, 609], "safepoint": 630, "safety": [607, 629, 677, 686], "sam": 487, "sampl": [535, 577, 636], "sampler": 466, "sanitizer": 618, "sat": 579, "satur": 579, "saturating": 579, "sav": 534, "sbas": [21, 22, 23, 122, 123, 207, 208, 364, 365, 366], "scal": 474, "scalabl": 579, "scalar": [555, 559, 607, 652], "scalarenumerationtrait": 652, "scalarevolu": 607, "scatt": [579, 645], "scc": [465, 607], "sccp": 607, "scev": [469, 607], "scheduling": [483, 625, 646], "scop": [461, 466, 482, 579], "scoping": 625, "scratch": 466, "script": [495, 569, 619], "scripting": 482, "scrubbing": 611, "scudo": 622, "sdat": [33, 34, 35, 67, 68, 69, 255, 256, 257, 376, 377, 378, 410, 411, 412], "sdiv": 579, "sdnod": 557, "sdst": [70, 71, 72, 73, 74, 75, 76, 77, 115, 154, 155, 156, 157, 158, 159, 160, 161, 258, 259, 260, 261, 262, 263, 264, 265, 413, 414, 415, 416, 417, 418, 419, 420], "sdwa": [0, 464], "search": [591, 613, 634], "searchablet": 634, "section": [461, 466, 542, 544, 586, 597, 627, 628, 651], "security": [533, 623, 626], "segment": 466, "segmented": [461, 483, 624], "seh": 540, "select": [477, 483, 491, 564, 579, 625, 636], "selecting": [530, 569], "selectiondag": [467, 483, 541, 557, 646], "selector": [467, 646], "self": [486, 543], "semantic": [534, 545, 579, 592, 628, 630, 631], "sending": 550, "sentinel": 609, "sequenc": [466, 636, 652], "sequential": 609, "sequentiallyconsistent": 470, "ser": 474, "serializ": 620, "serialized": [599, 620], "serv": 597, "set": [466, 469, 530, 559, 573, 579, 593, 607, 609, 636, 646], "setjmp": 540, "setting": [466, 476, 647, 648], "setup": [573, 579, 670, 676, 681], "setvector": 609, "setversionprint": 530, "sext": [464, 545, 579], "sgpr": 466, "sgpr_count": 466, "sh": 619, "shad": 466, "shadow": 547, "shared": 606, "shl": 579, "should": [485, 539, 543, 591], "show": [499, 518, 543], "sht_llvm_addrsig": 542, "sht_llvm_bb_addr_map": 542, "sht_llvm_call_graph_profil": 542, "sht_llvm_dependent_librar": 542, "sht_llvm_sympart": 542, "shufflevector": 579, "sibling": 483, "sideeffect": 579, "sign": 608, "signal": 466, "signed": 473, "signific": 542, "simd": 613, "simm21": 465, "simpl": [486, 579, 592, 607, 609, 636], "simplif": 630, "simplify": [486, 583, 607, 609], "simplifycfg": [543, 607], "simplifying": 585, "sin": 579, "singl": [466, 486, 579, 607, 611, 626], "sink": 607, "sinking": 607, "sit": [579, 609], "sitofp": 579, "siz": [463, 465, 479, 483, 523, 534, 539, 609, 649], "sized": 624, "sizeof": [677, 686], "sjlj": 540, "skeleton": 635, "skipping": 594, "sky": 532, "slambench": 613, "slc": 464, "slightly": 609, "slot": 607, "slp": 645, "small": 581, "smallbitvector": 609, "smallptrset": 609, "smallset": 609, "smallstring": 609, "smallvector": 609, "smax": 579, "smem": [0, 3, 4, 464, 466], "smin": 579, "smrd": [2, 464, 466], "smul": 579, "snippet": 505, "so": 581, "social": [549, 588], "soffset": [55, 56, 57, 146, 147, 245, 246, 247, 341, 398, 399, 400], "soft": [570, 631], "softwar": [550, 552], "solut": [581, 591], "someon": 608, "sommair": 573, "sop1": [0, 2, 3, 4, 466], "sop2": [0, 2, 3, 4, 466], "sopc": [0, 2, 3, 4, 466], "sopk": [0, 2, 3, 4], "sopp": [0, 2, 3, 4, 466], "sorted": 609, "sorting": [486, 517], "sourc": [461, 466, 481, 486, 527, 535, 543, 550, 579, 585, 610, 618, 625, 636, 676], "spac": [461, 466, 483, 486, 548, 592], "spanning": 613, "sparc": 532, "spars": 607, "sparsebitvector": 609, "sparsemultiset": 609, "sparseset": 609, "spec": 613, "special": [461, 479, 592, 625, 649], "specialised": 579, "specialized": 579, "specif": [542, 631], "specifi": 579, "specific": [481, 483, 492, 495, 513, 514, 515, 522, 526, 527, 542, 545, 555, 625, 641, 642, 677, 686], "specified": [469, 530], "specify": 545, "specifying": [530, 547, 648], "spectr": 626, "specul": 626, "speed": 485, "spgo": 519, "sphinx": 627, "splitting": 485, "sponentry": 579, "sqrt": 579, "src": [9, 10, 11, 12, 79, 80, 81, 82, 83, 84, 85, 86, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 306, 307, 311, 312, 318, 319, 320, 321, 322, 346, 347, 348, 349, 350, 351, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431], "src0_sel": 464, "src1_sel": 464, "sreg": 592, "srem": 579, "sro": 607, "srsrc": [62, 63, 151, 152, 252, 253, 344, 405, 406], "ssa": [483, 543, 579, 583, 607], "ssamp": [66, 153, 254, 409], "ssca": 613, "sshl": 579, "ssrc": [88, 89, 90, 91, 92, 93, 94, 95, 116, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 278, 279, 280, 281, 282, 283, 284, 285, 286, 433, 434, 435, 436, 437, 438, 439, 440, 441], "ssub": 579, "stabl": 539, "stack": [461, 466, 483, 542, 547, 579, 589, 607, 624, 626, 628, 629, 630, 650, 677, 686], "stackguard": 579, "stacklet": 624, "stackmap": [628, 630], "stackprotector": 579, "stackrestor": 579, "stacksav": 579, "stag": [468, 513, 570], "standard": [461, 473, 486, 531, 534, 550, 579, 609, 612, 613, 614, 625, 631], "start": [481, 483, 530, 547, 579, 588, 641, 647, 648], "started": [550, 551, 552, 581, 594], "starting": 654, "startup": 581, "stashing": 611, "stat": [461, 466, 475, 486, 591, 609, 620, 626, 636], "stateless": 607, "statepoint": [547, 579, 630], "static": [486, 492], "statically": 607, "statistic": [504, 512, 513, 609, 648], "status": [487, 488, 489, 491, 492, 493, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 509, 510, 512, 513, 514, 515, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 611, 612], "statut": [608, 630], "stay": 538, "std": [486, 531, 609], "stderr": 607, "steen": 469, "step": [567, 579, 611, 632, 646, 650], "stepping": 466, "still": 545, "stor": [483, 513, 543, 545, 579, 607, 626], "storag": [530, 579, 609], "storestrong": 579, "storeweak": 579, "strateg": [547, 626], "strategy": 579, "straw": 611, "stream": [517, 595, 597, 598, 600, 601, 602, 603, 604, 605, 635], "streamer": 620, "strength": 607, "stress": 524, "string": [487, 525, 535, 579, 593, 609, 620], "stringerror": 609, "stringin": 635, "stringmap": 609, "stringref": 609, "stringset": 609, "strip": [526, 579, 607], "stripping": 526, "strtab_block": 473, "struct": [486, 548, 579], "structur": [461, 534, 538, 579, 585, 590, 591, 609, 635, 639, 641, 642, 645], "structural": 502, "structured": 546, "studio": 552, "stuff": 543, "styl": [469, 486, 521, 542, 573, 579, 610], "sub": [535, 579, 611], "subcl": 609, "subclass": 646, "subcommand": 517, "subdirector": 610, "subm": [533, 574], "submitting": 538, "subregist": 585, "subroutin": 636, "subsect": [586, 627], "substitu": [487, 491, 641], "substream": [597, 600], "subsubsect": 586, "subtarget": [634, 646], "successor": [585, 609], "suffic": 463, "suffixed": 636, "suggest": 588, "suit": [491, 550, 613, 619, 639, 640, 641], "summary": [472, 497, 517, 548, 579], "superblock": 601, "supercl": 635, "supplied": 581, "support": [483, 531, 540, 543, 566, 581, 612, 615, 630, 631, 632, 646, 671, 682], "supported": [466, 475, 483, 515, 543, 579, 628, 630], "supporting": 593, "suspend": 534, "svn": [550, 611], "switch": [475, 486, 579], "switched": 534, "switchinst": [475, 607], "swizzl": 464, "symbol": [465, 466, 489, 500, 514, 517, 542, 582, 585, 593, 595, 598, 600, 603, 607], "symboliz": 527, "sync": 466, "synops": [487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "syntax": [0, 1, 2, 3, 4, 5, 6, 7, 8, 463, 464, 465, 487, 534, 542, 579, 592, 628, 630, 637, 669, 680, 688], "system": [466, 550, 552, 579, 631, 633], "systemz": 532, "tabl": [466, 483, 514, 540, 542, 585, 599, 612, 615, 620, 625, 634, 643, 687], "tableau": 653, "tablegen": [483, 618, 634, 635, 636, 637, 638], "tag": [461, 535, 572, 625, 652], "tagging": [572, 589], "tail": [483, 607], "tailcallelim": 607, "talk": 588, "target": [466, 483, 493, 529, 538, 540, 542, 548, 556, 561, 570, 579, 581, 585, 592, 607, 618, 646, 675, 677, 686], "targetdat": 607, "targetframelowering": 483, "targetinstrinfo": [483, 646], "targetjitinfo": 483, "targetlowering": 483, "targetmachin": 483, "targetregisterinfo": [483, 646], "targetsubtarget": 483, "task": [572, 609], "tba": [465, 579], "tblgen": 529, "teardown": 579, "tech": 588, "techniqu": 626, "tel": 548, "templat": [579, 586, 609, 627], "tempting": 626, "terminator": 579, "terminology": [474, 550, 583], "test": [467, 478, 481, 488, 491, 538, 550, 570, 575, 579, 613, 619, 636, 639, 640, 641], "testing": [560, 570, 572, 575, 581, 585, 617, 629, 641, 643, 647], "text": [530, 627, 635], "tfe": 464, "tgt": [96, 185, 287, 442], "than": 548, "that": [531, 543, 548, 626, 636], "the": [461, 467, 469, 481, 483, 486, 487, 530, 535, 538, 540, 543, 544, 545, 547, 548, 550, 552, 565, 569, 570, 572, 573, 575, 578, 579, 580, 581, 588, 590, 592, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 611, 613, 614, 616, 618, 619, 620, 621, 623, 626, 630, 635, 636, 637, 639, 640, 645, 646, 647, 648, 650, 655, 668, 669, 672, 673, 674, 675, 677, 679, 680, 683, 684, 685, 686], "then": [672, 683], "ther": 543, "thing": [543, 545], "thinlto": 579, "this": [543, 545, 548, 581, 586, 591, 611, 618, 627, 674, 676, 685], "thought": [670, 681], "thread": [466, 579, 609], "threading": 607, "threadsafecontext": 593, "threadsafemodul": 593, "threshold": 650, "through": 486, "throw": [540, 631], "thumb": 573, "ti": 632, "tidbit": [677, 686], "tim": [485, 486, 565, 574, 582, 590, 626, 676], "timelin": [513, 572], "timing": 635, "tinyptrvector": 609, "tip": [471, 545, 677, 686], "tir": [673, 684], "tl": 626, "tma": 465, "to": [461, 466, 467, 469, 474, 477, 483, 485, 486, 513, 522, 529, 530, 533, 538, 539, 543, 545, 546, 547, 548, 550, 561, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 586, 588, 591, 592, 593, 594, 602, 607, 609, 611, 615, 618, 619, 620, 623, 626, 627, 635, 636, 652, 655, 657, 670, 675, 681], "togeth": 675, "token": [540, 579], "too": 614, "tool": [477, 480, 485, 488, 490, 501, 507, 508, 509, 511, 515, 518, 519, 526, 543, 546, 550, 552, 609, 618, 635, 649, 650], "toolchain": [538, 550], "top": [530, 593], "topic": [481, 609, 617, 644, 687], "tos": 593, "town": 588, "toy": 581, "tpi": 604, "trac": [649, 650, 651], "tracing": 581, "tracking": 639, "trad": 537, "tradeoff": [590, 626], "trampolin": 579, "transform": [469, 534, 575, 607, 642], "transformed": 625, "transit": [540, 579, 614, 626, 630], "transitioning": 593, "translat": 556, "translating": 556, "transparency": 623, "transpos": 579, "trap": [465, 466, 579], "traversal": 609, "tre": [607, 610, 613, 669, 680], "treat": 486, "triaging": 476, "trick": [677, 686], "trip": 645, "tripl": [466, 483, 579, 592], "trivial": [671, 682], "troph": 581, "troubleshooting": 570, "tru": 636, "trunc": 579, "truncat": 555, "try": [540, 570], "tscwrap": 651, "ttmp": 465, "tuning": 492, "turn": [486, 543], "turning": 609, "tutorial": [487, 551, 561, 592, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 677, 678, 679, 686, 687], "tvm": 613, "twin": 609, "two": [483, 548], "typ": [13, 97, 186, 288, 323, 352, 443, 461, 463, 465, 467, 482, 486, 517, 535, 541, 545, 548, 554, 555, 579, 596, 597, 604, 607, 609, 622, 634, 636, 643, 645, 646, 652], "type_block": 473, "type_code_array": 473, "type_code_bfloat": 473, "type_code_doubl": 473, "type_code_float": 473, "type_code_fp128": 473, "type_code_funct": 473, "type_code_function_old": 473, "type_code_half": 473, "type_code_integ": 473, "type_code_label": 473, "type_code_metadat": 473, "type_code_numentry": 473, "type_code_opaqu": 473, "type_code_point": 473, "type_code_ppc_fp128": 473, "type_code_struct_anon": 473, "type_code_struct_nam": 473, "type_code_struct_named": 473, "type_code_vector": 473, "type_code_void": 473, "type_code_x86_fp80": 473, "type_code_x86_mmx": 473, "typecheckedloadconstvcall": 579, "typecheckedloadvcall": 579, "typedin": 635, "typeid": 540, "typeidinfo": 579, "typetest": 579, "typetestassumeconstvcall": 579, "typetestassumevcall": 579, "uadd": 579, "ubsantrap": 579, "udiv": 579, "ufmt": 464, "uglygep": 548, "uimm20": 465, "uimm21": 465, "uimm32": 465, "uimm8": 465, "uitofp": 579, "umax": 579, "umin": 579, "umul": 579, "unabbrev_record": 473, "unary": [465, 579, 673, 684], "undef": 543, "undefined": [461, 579, 592], "underflow": 566, "underlying": 548, "understand": 543, "uniform": 466, "unify": 607, "unintentionally": 485, "union": 579, "uniqu": 652, "uniquevector": 609, "unit": [461, 466, 483, 513, 641, 676], "universal": 511, "unknown": 645, "unnecessary": 486, "unordered": [470, 579], "unorm": 464, "unpacking": 550, "unpredict": 579, "unreach": [543, 579], "unroll": [579, 607, 642], "unroll_and_jam": 579, "unrolling": [642, 645], "unsetin": 635, "unspecified": 466, "unswitch": 607, "unused": [607, 631], "unwindless": 607, "up": [466, 543, 573, 593, 608, 647, 648], "updat": [467, 572, 575, 611], "updating": [469, 538, 575, 590, 611], "urem": 579, "uri": 466, "usabl": 614, "usag": [461, 477, 481, 518, 539, 558, 565, 566, 578, 581, 589, 594, 622, 628, 645], "use": [485, 486, 543, 545, 548, 566, 570, 576, 577, 579, 581, 590, 593, 607, 609, 626, 627, 631], "used": [481, 483, 485, 579, 607], "useful": [469, 482, 609, 677, 686], "user": [466, 492, 581, 592, 607, 609, 644, 652, 673, 674, 684, 685], "ushl": 579, "using": [469, 472, 477, 483, 486, 513, 531, 540, 543, 546, 547, 550, 552, 565, 569, 570, 571, 575, 581, 594, 609, 618, 636, 643, 648, 649, 655, 657], "usub": 579, "util": 550, "utilit": [546, 617], "utility": [575, 607, 630, 652], "v": [465, 482, 530, 531, 532, 566, 604], "v2": 466, "v3": 466, "v4": 466, "va_arg": 579, "va_copy": 579, "va_end": 579, "va_start": 579, "vaddr": [16, 17, 18, 19, 99, 100, 117, 118, 119, 120, 202, 203, 204, 205, 326, 353, 359, 360, 361, 362, 445, 446], "valid": 652, "validat": 619, "valu": [461, 465, 466, 530, 543, 548, 575, 579, 581, 585, 591, 594, 607, 609, 625, 626, 636, 652], "value_symtab_block": 473, "valuemap": 609, "valuesymbolt": 609, "var": 579, "vari": [611, 626], "variabl": [473, 481, 482, 483, 486, 487, 542, 579, 585, 607, 610, 614, 624, 625, 636, 645, 674, 676, 685], "variadic": 555, "various": 607, "varying": 585, "vasrc": [354, 355], "vbr": 473, "vcall_visibility": 643, "vcc": [101, 188, 290, 447, 465], "vccz": 465, "vdat": [26, 27, 28, 29, 30, 31, 32, 102, 103, 104, 105, 126, 127, 128, 129, 130, 131, 189, 190, 191, 192, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 291, 292, 293, 294, 335, 356, 369, 370, 371, 372, 373, 374, 375, 448, 449, 450, 451], "vdst": [14, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 106, 107, 108, 109, 132, 133, 134, 135, 136, 137, 138, 139, 140, 193, 194, 195, 196, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 295, 296, 297, 298, 308, 313, 324, 336, 357, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 452, 453, 454, 455], "vecmathlib": 613, "vector": [548, 555, 559, 579, 599, 609, 615], "vectoriz": [579, 607, 616, 642, 645], "vendor": 466, "verif": [480, 630], "verifi": [487, 543, 607], "verify": [504, 607], "vers": 609, "version": [461, 486, 536, 572, 581], "versioning": 642, "vgpr": 466, "vgpr_count": 466, "vi": [550, 608, 639], "vic": 609, "view": [482, 513, 607, 620, 650], "viewing": 609, "vintrp": [0, 2, 3, 4, 464], "virtual": [483, 486, 543, 554, 631, 643], "visibility": 579, "visual": [481, 552], "visualiz": 650, "vla": 548, "vliw": 483, "vm": 464, "void": [579, 591], "volatil": 579, "vop1": [0, 2, 3, 4], "vop2": [0, 1, 2, 3, 4, 7, 8], "vop3": [0, 2, 3, 4, 7, 8, 464], "vop3p": [0, 1, 4, 5, 6, 7, 8, 464], "vopc": [0, 2, 3, 4], "vp": [579, 615], "vplan": 616, "vscal": 579, "vsrc": [15, 87, 110, 111, 112, 113, 173, 197, 198, 199, 200, 277, 299, 300, 301, 302, 325, 358, 432, 456, 457, 458, 459], "waitcnt": [114, 201, 303, 460], "walk": 590, "wallclocktim": 651, "warning": [486, 541, 607, 632], "way": [533, 548], "we": [476, 591], "web": 608, "webassembly": 618, "websit": 572, "weight": [474, 475], "weighted": 518, "wel": 579, "what": [477, 485, 543, 545, 547, 548, 581, 591, 611, 621, 623, 632, 647, 648], "when": [477, 485, 486, 543, 545, 575, 581], "wher": [543, 588], "wherev": 486, "wheth": 530, "which": [469, 539, 548, 595], "whil": [609, 626], "whitespac": 486, "who": 485, "why": [539, 543, 548, 581, 611, 612, 674, 676, 685], "wid": 549, "widen": 579, "widening": 579, "width": [473, 486, 545, 579], "window": [527, 532, 540, 542, 581], "wis": 579, "with": [475, 476, 481, 486, 530, 531, 543, 547, 548, 550, 552, 565, 569, 579, 591, 592, 607, 608, 609, 611, 620, 625, 626, 639, 645, 647, 648, 650, 654, 678, 687], "without": 543, "won": 586, "word": 473, "work": [466, 513, 533, 548, 564, 581, 591, 593, 626, 629, 649], "workflow": [485, 611, 616], "working": [476, 625], "world": [647, 648], "wrapp": 473, "wrapper": 482, "writ": [486, 513, 543, 547, 611], "writer": 532, "writing": [469, 483, 530, 546, 547, 548, 610, 640, 641, 646, 647, 648], "written": 543, "x": [548, 613], "x86": [483, 532, 542, 618, 626], "x86_64": 571, "x86_mmx": 579, "x86evex2vex": 634, "xcoff": 516, "xcor": 532, "xnack": 465, "xor": 579, "xray": [617, 649, 650, 651], "xxx": 529, "yaml": [620, 652], "yaml2obj": 688, "yaml2pdb": 517, "you": [586, 621], "your": [481, 567, 573, 588, 609, 648, 649], "yourself": 590, "zen": 626, "zero": 540, "zext": [545, 579], "zipping": 611, "\u00c0": [466, 481, 530, 573, 653, 670]}})