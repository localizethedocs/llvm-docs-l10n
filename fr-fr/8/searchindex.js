Search.setIndex({"alltitles": {"#0 - BLOCKINFO Block": [[281, "blockinfo-block"]], "#include <iostream> is Forbidden": [[291, "include-iostream-is-forbidden"]], "#include Style": [[291, "include-style"]], "#include as Little as Possible": [[291, "include-as-little-as-possible"]], "-aa-eval: Exhaustive Alias Analysis Precision Evaluator": [[381, "aa-eval-exhaustive-alias-analysis-precision-evaluator"]], "-adce: Aggressive Dead Code Elimination": [[381, "adce-aggressive-dead-code-elimination"]], "-aggressive-instcombine: Combine expression patterns": [[381, "aggressive-instcombine-combine-expression-patterns"]], "-always-inline: Inliner for always_inline functions": [[381, "always-inline-inliner-for-always-inline-functions"]], "-argpromotion: Promote \u201cby reference\u201d arguments to scalars": [[381, "argpromotion-promote-by-reference-arguments-to-scalars"]], "-basicaa: Basic Alias Analysis (stateless AA impl)": [[381, "basicaa-basic-alias-analysis-stateless-aa-impl"]], "-basiccg: Basic CallGraph Construction": [[381, "basiccg-basic-callgraph-construction"]], "-bb-vectorize: Basic-Block Vectorization": [[381, "bb-vectorize-basic-block-vectorization"]], "-block-placement: Profile Guided Basic Block Placement": [[381, "block-placement-profile-guided-basic-block-placement"]], "-break-crit-edges: Break critical edges in CFG": [[381, "break-crit-edges-break-critical-edges-in-cfg"]], "-codegenprepare: Optimize for code generation": [[381, "codegenprepare-optimize-for-code-generation"]], "-constmerge: Merge Duplicate Global Constants": [[381, "constmerge-merge-duplicate-global-constants"]], "-constprop: Simple constant propagation": [[381, "constprop-simple-constant-propagation"]], "-count-aa: Count Alias Analysis Query Responses": [[381, "count-aa-count-alias-analysis-query-responses"]], "-da: Dependence Analysis": [[381, "da-dependence-analysis"]], "-dce: Dead Code Elimination": [[381, "dce-dead-code-elimination"]], "-deadargelim: Dead Argument Elimination": [[381, "deadargelim-dead-argument-elimination"]], "-deadarghaX0r: Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)": [[381, "deadarghax0r-dead-argument-hacking-bugpoint-use-only-do-not-use"]], "-deadtypeelim: Dead Type Elimination": [[381, "deadtypeelim-dead-type-elimination"]], "-debug-aa: AA use debugger": [[381, "debug-aa-aa-use-debugger"]], "-die: Dead Instruction Elimination": [[381, "die-dead-instruction-elimination"]], "-domfrontier: Dominance Frontier Construction": [[381, "domfrontier-dominance-frontier-construction"]], "-domtree: Dominator Tree Construction": [[381, "domtree-dominator-tree-construction"]], "-dot-callgraph: Print Call Graph to \u00ab\u00a0dot\u00a0\u00bb file": [[381, "dot-callgraph-print-call-graph-to-dot-file"]], "-dot-cfg-only: Print CFG of function to \u00ab\u00a0dot\u00a0\u00bb file (with no function bodies)": [[381, "dot-cfg-only-print-cfg-of-function-to-dot-file-with-no-function-bodies"]], "-dot-cfg: Print CFG of function to \u00ab\u00a0dot\u00a0\u00bb file": [[381, "dot-cfg-print-cfg-of-function-to-dot-file"]], "-dot-dom-only: Print dominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file (with no function bodies)": [[381, "dot-dom-only-print-dominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-dom: Print dominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file": [[381, "dot-dom-print-dominance-tree-of-function-to-dot-file"]], "-dot-postdom-only: Print postdominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file (with no function bodies)": [[381, "dot-postdom-only-print-postdominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-postdom: Print postdominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file": [[381, "dot-postdom-print-postdominance-tree-of-function-to-dot-file"]], "-dse: Dead Store Elimination": [[381, "dse-dead-store-elimination"]], "-extract-blocks: Extract Basic Blocks From Module (for bugpoint use)": [[381, "extract-blocks-extract-basic-blocks-from-module-for-bugpoint-use"]], "-functionattrs: Deduce function attributes": [[381, "functionattrs-deduce-function-attributes"]], "-globaldce: Dead Global Elimination": [[381, "globaldce-dead-global-elimination"]], "-globalopt: Global Variable Optimizer": [[381, "globalopt-global-variable-optimizer"]], "-globalsmodref-aa: Simple mod/ref analysis for globals": [[381, "globalsmodref-aa-simple-mod-ref-analysis-for-globals"]], "-gvn: Global Value Numbering": [[381, "gvn-global-value-numbering"]], "-indvars: Canonicalize Induction Variables": [[381, "indvars-canonicalize-induction-variables"]], "-inline: Function Integration/Inlining": [[381, "inline-function-integration-inlining"]], "-instcombine: Combine redundant instructions": [[381, "instcombine-combine-redundant-instructions"]], "-instcount: Counts the various types of Instructions": [[381, "instcount-counts-the-various-types-of-instructions"]], "-instnamer: Assign names to anonymous instructions": [[381, "instnamer-assign-names-to-anonymous-instructions"]], "-internalize: Internalize Global Symbols": [[381, "internalize-internalize-global-symbols"]], "-intervals: Interval Partition Construction": [[381, "intervals-interval-partition-construction"]], "-ipconstprop: Interprocedural constant propagation": [[381, "ipconstprop-interprocedural-constant-propagation"]], "-ipsccp: Interprocedural Sparse Conditional Constant Propagation": [[381, "ipsccp-interprocedural-sparse-conditional-constant-propagation"]], "-iv-users: Induction Variable Users": [[381, "iv-users-induction-variable-users"]], "-jump-threading: Jump Threading": [[381, "jump-threading-jump-threading"]], "-lazy-value-info: Lazy Value Information Analysis": [[381, "lazy-value-info-lazy-value-information-analysis"]], "-lcssa: Loop-Closed SSA Form Pass": [[381, "lcssa-loop-closed-ssa-form-pass"]], "-libcall-aa: LibCall Alias Analysis": [[381, "libcall-aa-libcall-alias-analysis"]], "-licm: Loop Invariant Code Motion": [[381, "licm-loop-invariant-code-motion"]], "-lint: Statically lint-checks LLVM IR": [[381, "lint-statically-lint-checks-llvm-ir"]], "-loop-deletion: Delete dead loops": [[381, "loop-deletion-delete-dead-loops"]], "-loop-extract-single: Extract at most one loop into a new function": [[381, "loop-extract-single-extract-at-most-one-loop-into-a-new-function"]], "-loop-extract: Extract loops into new functions": [[381, "loop-extract-extract-loops-into-new-functions"]], "-loop-reduce: Loop Strength Reduction": [[381, "loop-reduce-loop-strength-reduction"]], "-loop-rotate: Rotate Loops": [[381, "loop-rotate-rotate-loops"]], "-loop-simplify: Canonicalize natural loops": [[381, "loop-simplify-canonicalize-natural-loops"]], "-loop-unroll-and-jam: Unroll and Jam loops": [[381, "loop-unroll-and-jam-unroll-and-jam-loops"]], "-loop-unroll: Unroll loops": [[381, "loop-unroll-unroll-loops"]], "-loop-unswitch: Unswitch loops": [[381, "loop-unswitch-unswitch-loops"]], "-loops: Natural Loop Information": [[381, "loops-natural-loop-information"]], "-loweratomic: Lower atomic intrinsics to non-atomic form": [[381, "loweratomic-lower-atomic-intrinsics-to-non-atomic-form"]], "-lowerinvoke: Lower invokes to calls, for unwindless code generators": [[381, "lowerinvoke-lower-invokes-to-calls-for-unwindless-code-generators"]], "-lowerswitch: Lower SwitchInsts to branches": [[381, "lowerswitch-lower-switchinsts-to-branches"]], "-mem2reg: Promote Memory to Register": [[381, "mem2reg-promote-memory-to-register"]], "-memcpyopt: MemCpy Optimization": [[381, "memcpyopt-memcpy-optimization"]], "-memdep: Memory Dependence Analysis": [[381, "memdep-memory-dependence-analysis"]], "-mergefunc: Merge Functions": [[381, "mergefunc-merge-functions"]], "-mergereturn: Unify function exit nodes": [[381, "mergereturn-unify-function-exit-nodes"]], "-module-debuginfo: Decodes module-level debug info": [[381, "module-debuginfo-decodes-module-level-debug-info"]], "-partial-inliner: Partial Inliner": [[381, "partial-inliner-partial-inliner"]], "-postdomfrontier: Post-Dominance Frontier Construction": [[381, "postdomfrontier-post-dominance-frontier-construction"]], "-postdomtree: Post-Dominator Tree Construction": [[381, "postdomtree-post-dominator-tree-construction"]], "-print-alias-sets: Alias Set Printer": [[381, "print-alias-sets-alias-set-printer"]], "-print-callgraph-sccs: Print SCCs of the Call Graph": [[381, "print-callgraph-sccs-print-sccs-of-the-call-graph"]], "-print-callgraph: Print a call graph": [[381, "print-callgraph-print-a-call-graph"]], "-print-cfg-sccs: Print SCCs of each function CFG": [[381, "print-cfg-sccs-print-sccs-of-each-function-cfg"]], "-print-dom-info: Dominator Info Printer": [[381, "print-dom-info-dominator-info-printer"]], "-print-externalfnconstants: Print external fn callsites passed constants": [[381, "print-externalfnconstants-print-external-fn-callsites-passed-constants"]], "-print-function: Print function to stderr": [[381, "print-function-print-function-to-stderr"]], "-print-module: Print module to stderr": [[381, "print-module-print-module-to-stderr"]], "-print-used-types: Find Used Types": [[381, "print-used-types-find-used-types"]], "-prune-eh: Remove unused exception handling info": [[381, "prune-eh-remove-unused-exception-handling-info"]], "-reassociate: Reassociate expressions": [[381, "reassociate-reassociate-expressions"]], "-reg2mem: Demote all values to stack slots": [[381, "reg2mem-demote-all-values-to-stack-slots"]], "-regions: Detect single entry single exit regions": [[381, "regions-detect-single-entry-single-exit-regions"]], "-scalar-evolution: Scalar Evolution Analysis": [[381, "scalar-evolution-scalar-evolution-analysis"]], "-sccp: Sparse Conditional Constant Propagation": [[381, "sccp-sparse-conditional-constant-propagation"]], "-scev-aa: ScalarEvolution-based Alias Analysis": [[381, "scev-aa-scalarevolution-based-alias-analysis"]], "-simplifycfg: Simplify the CFG": [[381, "simplifycfg-simplify-the-cfg"]], "-sink: Code sinking": [[381, "sink-code-sinking"]], "-sroa: Scalar Replacement of Aggregates": [[381, "sroa-scalar-replacement-of-aggregates"]], "-stack-safety: Stack Safety Analysis": [[381, "stack-safety-stack-safety-analysis"]], "-strip-dead-debug-info: Strip debug info for unused symbols": [[381, "strip-dead-debug-info-strip-debug-info-for-unused-symbols"]], "-strip-dead-prototypes: Strip Unused Function Prototypes": [[381, "strip-dead-prototypes-strip-unused-function-prototypes"]], "-strip-debug-declare: Strip all llvm.dbg.declare intrinsics": [[381, "strip-debug-declare-strip-all-llvm-dbg-declare-intrinsics"]], "-strip-nondebug: Strip all symbols, except dbg symbols, from a module": [[381, "strip-nondebug-strip-all-symbols-except-dbg-symbols-from-a-module"]], "-strip: Strip all symbols from a module": [[381, "strip-strip-all-symbols-from-a-module"]], "-tailcallelim: Tail Call Elimination": [[381, "tailcallelim-tail-call-elimination"]], "-targetdata: Target Data Layout": [[381, "targetdata-target-data-layout"]], "-transform-warning: Report missed forced transformations": [[381, "transform-warning-report-missed-forced-transformations"]], "-verify: Module Verifier": [[381, "verify-module-verifier"]], "-view-cfg-only: View CFG of function (with no function bodies)": [[381, "view-cfg-only-view-cfg-of-function-with-no-function-bodies"]], "-view-cfg: View CFG of function": [[381, "view-cfg-view-cfg-of-function"]], "-view-dom-only: View dominance tree of function (with no function bodies)": [[381, "view-dom-only-view-dominance-tree-of-function-with-no-function-bodies"]], "-view-dom: View dominance tree of function": [[381, "view-dom-view-dominance-tree-of-function"]], "-view-postdom-only: View postdominance tree of function (with no function bodies)": [[381, "view-postdom-only-view-postdominance-tree-of-function-with-no-function-bodies"]], "-view-postdom: View postdominance tree of function": [[381, "view-postdom-view-postdominance-tree-of-function"]], ".amd_kernel_code_t": [[275, "amd-kernel-code-t"]], ".amdgcn.gfx_generation_number": [[275, "amdgcn-gfx-generation-number"]], ".amdgcn.next_free_sgpr": [[275, "amdgcn-next-free-sgpr"]], ".amdgcn.next_free_vgpr": [[275, "amdgcn-next-free-vgpr"]], ".amdgcn_target <target>": [[275, "amdgcn-target-target"]], ".amdgpu_hsa_kernel (name)": [[275, "amdgpu-hsa-kernel-name"]], ".amdgpu_metadata": [[275, "amdgpu-metadata"]], ".amdhsa_kernel <name>": [[275, "amdhsa-kernel-name"]], ".cv_def_range Directive": [[334, "cv-def-range-directive"]], ".cv_file Directive": [[334, "cv-file-directive"]], ".cv_filechecksumoffset Directive": [[334, "cv-filechecksumoffset-directive"]], ".cv_filechecksums Directive": [[334, "cv-filechecksums-directive"]], ".cv_fpo_data Directive": [[334, "cv-fpo-data-directive"]], ".cv_func_id Directive": [[334, "cv-func-id-directive"]], ".cv_inline_linetable Directive": [[334, "cv-inline-linetable-directive"]], ".cv_inline_site_id Directive": [[334, "cv-inline-site-id-directive"]], ".cv_linetable Directive": [[334, "cv-linetable-directive"]], ".cv_loc Directive": [[334, "cv-loc-directive"]], ".cv_stringtable Directive": [[334, "cv-stringtable-directive"]], ".hsa_code_object_isa [major, minor, stepping, vendor, arch]": [[275, "hsa-code-object-isa-major-minor-stepping-vendor-arch"]], ".hsa_code_object_version major, minor": [[275, "hsa-code-object-version-major-minor"]], ".linker-options Section (linker options)": [[334, "linker-options-section-linker-options"]], ".linkonce Directive": [[334, "linkonce-directive"]], ".o File Writing": [[289, "o-file-writing"]], ".section Directive": [[334, "section-directive"], [334, "id2"]], "10,000 ft View": [[288, "ft-view"]], "3-Stage Non-Determinism": [[276, "stage-non-determinism"]], "6-bit characters": [[281, "bit-characters"]], "<algorithm>": [[324, "algorithm"]], "<deque>": [[383, "deque"]], "<list>": [[383, "list"]], "<map>": [[383, "map"]], "<math.h> and <cmath>": [[324, "math-h-and-cmath"]], "<set>": [[383, "set"]], "<std::complex>": [[324, "std-complex"]], "<vector>": [[383, "vector"]], "A": [[358, "a"]], "A Benchmark for the C/C++ Standard Library": [[386, "a-benchmark-for-the-c-c-standard-library"]], "A Bug to be Aware Of": [[351, "a-bug-to-be-aware-of"]], "A guide to Dockerfiles for building LLVM": [[331, null]], "A sorted \u201cvector\u201d": [[383, "a-sorted-vector"], [383, "dss-sortedvectormap"]], "AAPCS": [[280, "aapcs"]], "AArch64 & ARM": [[325, "aarch64-arm"]], "AArch64 Target": [[348, "aarch64-target"]], "ABI": [[325, "abi"]], "ABI Breaking Checks": [[383, "abi-breaking-checks"]], "ADDITIONAL OPTIONS": [[296, "additional-options"]], "AFL compatibility": [[359, "afl-compatibility"]], "AMDGPU": [[325, "amdgpu"]], "AMDGPU Architectures": [[275, "amdgpu-architecture-table"]], "AMDGPU Attributes": [[275, "amdgpu-attributes"]], "AMDGPU Code Object V2 ELF Note Record Enumeration Values": [[275, "amdgpu-elf-note-record-enumeration-values-table-v2"]], "AMDGPU Code Object V2 ELF Note Records": [[275, "amdgpu-elf-note-records-table-v2"]], "AMDGPU Code Object V3 ELF Note Record Enumeration Values": [[275, "amdgpu-elf-note-record-enumeration-values-table-v3"]], "AMDGPU Code Object V3 ELF Note Records": [[275, "amdgpu-elf-note-records-table-v3"]], "AMDGPU DWARF Address Space Mapping": [[275, "amdgpu-dwarf-address-space-mapping-table"]], "AMDGPU DWARF Line Number Program Header Extended Content Types": [[275, "amdgpu-dwarf-extended-content-types"]], "AMDGPU DWARF Line Number Program Header Extended Content Types Encoding": [[275, "amdgpu-dwarf-extended-content-types-encoding"]], "AMDGPU Debug Options": [[275, "amdgpu-debug-options"]], "AMDGPU EF_AMDGPU_MACH Values": [[275, "amdgpu-ef-amdgpu-mach-table"]], "AMDGPU ELF Header": [[275, "amdgpu-elf-header-table"]], "AMDGPU ELF Header Enumeration Values": [[275, "amdgpu-elf-header-enumeration-values-table"]], "AMDGPU ELF Header e_flags": [[275, "amdgpu-elf-header-e-flags-table"]], "AMDGPU ELF Relocation Records": [[275, "amdgpu-elf-relocation-records-table"]], "AMDGPU ELF Sections": [[275, "amdgpu-elf-sections-table"]], "AMDGPU ELF Symbols": [[275, "amdgpu-elf-symbols-table"]], "AMDGPU Environments": [[275, "amdgpu-environment-table"]], "AMDGPU Instruction Syntax": [[272, null]], "AMDGPU Instructions Notation": [[271, null]], "AMDGPU Intrinsics": [[275, "amdgpu-intrinsics"]], "AMDGPU LLVM IR Attributes": [[275, "amdgpu-llvm-ir-attributes-table"]], "AMDGPU Operating Systems": [[275, "amdgpu-os-table"]], "AMDGPU Processors": [[275, "amdgpu-processor-table"]], "AMDGPU Target Features": [[275, "amdgpu-target-feature-table"]], "AMDGPU Trap Handler for AMDHSA OS": [[275, "amdgpu-trap-handler-for-amdhsa-os-table"]], "AMDGPU Trap Handler for Non-AMDHSA OS": [[275, "amdgpu-trap-handler-for-non-amdhsa-os-table"]], "AMDGPU Vendors": [[275, "amdgpu-vendor-table"]], "AMDHSA": [[275, "amdhsa"]], "AMDHSA Code Object V2 Kernel Argument Metadata Map": [[275, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-table-v2"]], "AMDHSA Code Object V2 Kernel Attribute Metadata Map": [[275, "amdgpu-amdhsa-code-object-kernel-attribute-metadata-map-table-v2"]], "AMDHSA Code Object V2 Kernel Code Properties Metadata Map": [[275, "amdgpu-amdhsa-code-object-kernel-code-properties-metadata-map-table-v2"]], "AMDHSA Code Object V2 Kernel Metadata Map": [[275, "amdgpu-amdhsa-code-object-kernel-metadata-map-table-v2"]], "AMDHSA Code Object V2 Metadata Map": [[275, "amdgpu-amdhsa-code-object-metadata-map-table-v2"]], "AMDHSA Code Object V3 Kernel Argument Metadata Map": [[275, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-table-v3"]], "AMDHSA Code Object V3 Kernel Metadata Map": [[275, "amdgpu-amdhsa-code-object-kernel-metadata-map-table-v3"]], "AMDHSA Code Object V3 Metadata Map": [[275, "amdgpu-amdhsa-code-object-metadata-map-table-v3"]], "AMDHSA Kernel Assembler Directives": [[275, "amdhsa-kernel-directives-table"]], "AMDHSA LLVM Sync Scopes": [[275, "amdgpu-amdhsa-llvm-sync-scopes-table"]], "AMDHSA Memory Model Code Sequences GFX6-GFX9": [[275, "amdgpu-amdhsa-memory-model-code-sequences-gfx6-gfx9-table"]], "AMDHSA Memory Model Single Thread Optimization Constraints GFX6-GFX9": [[275, "amdgpu-amdhsa-memory-model-single-thread-optimization-constraints-gfx6-gfx9-table"]], "AMDHSA Memory Spaces": [[275, "amdgpu-amdhsa-memory-spaces-table"]], "AMDPAL": [[275, "amdpal"]], "API: CallLowering": [[343, "api-calllowering"]], "API: InstructionSelector": [[343, "api-instructionselector"]], "API: LegalizerInfo": [[343, "api-legalizerinfo"]], "API: RegisterBankInfo": [[343, "api-registerbankinfo"]], "ARM64/COFF-Dependent": [[334, "arm64-coff-dependent"]], "AST Extensions for If/Then/Else": [[429, "ast-extensions-for-if-then-else"], [439, "ast-extensions-for-if-then-else"]], "AST Extensions for the \u201cfor\u201d Loop": [[429, "ast-extensions-for-the-for-loop"], [439, "ast-extensions-for-the-for-loop"]], "Abandoning a change": [[382, "abandoning-a-change"]], "Abbreviated Record Encoding": [[281, "abbreviated-record-encoding"]], "Abbreviation IDs": [[281, "abbreviation-ids"]], "Abbreviations": [[281, "abbreviations"]], "Absolute Expressions": [[274, "absolute-expressions"]], "Abstract": [[281, "abstract"], [337, "abstract"], [339, "abstract"], [357, "abstract"], [386, "abstract"], [387, "abstract"], [399, "abstract"]], "Abstract Machine Model": [[398, "abstract-machine-model"]], "Accurate Garbage Collection Intrinsics": [[357, "accurate-garbage-collection-intrinsics"]], "Achieving Isolation with LLVMContext": [[383, "achieving-isolation-with-llvmcontext"]], "Acquire": [[278, "acquire"]], "AcquireRelease": [[278, "acquirerelease"]], "Actively working on fixing bugs": [[284, "actively-working-on-fixing-bugs"]], "Adding Finer Granularity": [[368, "adding-finer-granularity"]], "Adding a JIT Compiler": [[428, "adding-a-jit-compiler"], [438, "adding-a-jit-compiler"]], "Adding a derived type": [[333, "adding-a-derived-type"]], "Adding a fundamental type": [[333, "adding-a-fundamental-type"]], "Adding a new SelectionDAG node": [[333, "adding-a-new-selectiondag-node"]], "Adding a new instruction": [[333, "adding-a-new-instruction"]], "Adding a new intrinsic function": [[333, "adding-a-new-intrinsic-function"]], "Adding a new type": [[333, "adding-a-new-type"]], "Adding debug counters to aid in debugging your code": [[383, "adding-debug-counters-to-aid-in-debugging-your-code"]], "Adding freeform text to help output": [[323, "adding-freeform-text-to-help-output"]], "Adding to this document": [[337, "adding-to-this-document"]], "Additional Documentation": [[275, "additional-documentation"]], "Additional Information": [[388, "additional-information"]], "Address Computation": [[340, "address-computation"]], "Address Remapping": [[361, "address-remapping"]], "Address Space Conversion": [[367, "address-space-conversion"]], "Address Space Mapping": [[275, "amdgpu-address-space-mapping-table"], [275, "address-space-mapping"]], "Address Spaces": [[275, "address-spaces"], [367, "address-spaces"], [367, "id10"]], "Addresses of Basic Blocks": [[357, "addresses-of-basic-blocks"]], "Adjusting Existing Variables for Mutation": [[431, "adjusting-existing-variables-for-mutation"], [441, "adjusting-existing-variables-for-mutation"]], "Advanced Build Configurations": [[276, null]], "Advanced Concepts": [[328, "advanced-concepts"]], "Advanced Topics": [[383, "advanced-topics"], [443, "advanced-topics"]], "Advanced features": [[359, "advanced-features"]], "Advice for using bugpoint": [[285, "advice-for-using-bugpoint"]], "Advice on Packaging LLVM": [[380, null]], "Aggregate Operations": [[357, "aggregate-operations"]], "Aggregate Types": [[357, "aggregate-types"]], "Aggregates": [[343, "aggregates"]], "Ahead-of-Time Compilation Mode": [[433, "ahead-of-time-compilation-mode"]], "Alias Summary": [[357, "alias-summary"]], "Alias analysis driven transformations": [[277, "alias-analysis-driven-transformations"]], "AliasAnalysis Class Overview": [[277, "aliasanalysis-class-overview"]], "AliasAnalysis chaining behavior": [[277, "aliasanalysis-chaining-behavior"]], "Aliases": [[357, "aliases"]], "Alignment": [[280, "alignment"]], "Alignment and Block Boundaries": [[375, "alignment-and-block-boundaries"]], "Allocating Stacklets": [[392, "allocating-stacklets"]], "Allocator": [[391, "allocator"]], "Alternative Approaches": [[360, "alternative-approaches"]], "Alternative using a cmake cache": [[348, "alternative-using-a-cmake-cache"]], "Ambiguous Transformation Order": [[410, "ambiguous-transformation-order"]], "An Example Using the LLVM Tool Chain": [[341, "an-example-using-the-llvm-tool-chain"], [342, "an-example-using-the-llvm-tool-chain"]], "Analysis Group Concepts": [[414, "analysis-group-concepts"]], "Analysis Passes": [[381, "analysis-passes"]], "Announce the Release": [[350, "announce-the-release"]], "Anonymous Namespaces": [[291, "anonymous-namespaces"]], "Aper\u00e7u": [[380, "overview"]], "Appealing": [[390, "appealing"]], "Apple Clang Builds (A More Complex Bootstrap)": [[276, "apple-clang-builds-a-more-complex-bootstrap"]], "Applications/Libraries": [[386, "applications-libraries"]], "Architecture & Platform Information for Compiler Writers": [[325, null]], "Areas Requiring Attention": [[327, "areas-requiring-attention"]], "Argument Aliases": [[323, "argument-aliases"]], "Argument Handling": [[288, "argument-handling"]], "Arguments": [[357, "id588"], [357, "id593"], [357, "id598"], [357, "id603"], [357, "id608"]], "Arguments:": [[327, "arguments"], [327, "id4"], [327, "id7"], [327, "id10"], [327, "id13"], [327, "id16"], [327, "id19"], [327, "id21"], [327, "id25"], [327, "id28"], [327, "id31"], [327, "id34"], [327, "id37"], [327, "id40"], [327, "id44"], [357, "arguments"], [357, "id28"], [357, "id33"], [357, "id38"], [357, "id44"], [357, "id49"], [357, "id54"], [357, "id59"], [357, "id64"], [357, "id74"], [357, "id79"], [357, "id84"], [357, "id89"], [357, "id94"], [357, "id99"], [357, "id104"], [357, "id109"], [357, "id114"], [357, "id119"], [357, "id124"], [357, "id129"], [357, "id134"], [357, "id139"], [357, "id144"], [357, "id149"], [357, "id154"], [357, "id159"], [357, "id164"], [357, "id169"], [357, "id174"], [357, "id179"], [357, "id184"], [357, "id189"], [357, "id194"], [357, "id199"], [357, "id204"], [357, "id209"], [357, "id214"], [357, "id219"], [357, "id224"], [357, "id229"], [357, "id234"], [357, "id239"], [357, "id244"], [357, "id249"], [357, "id254"], [357, "id259"], [357, "id264"], [357, "id269"], [357, "id274"], [357, "id279"], [357, "id284"], [357, "id289"], [357, "id294"], [357, "id299"], [357, "id304"], [357, "id309"], [357, "id314"], [357, "id319"], [357, "id325"], [357, "id331"], [357, "id338"], [357, "id344"], [357, "id348"], [357, "id352"], [357, "id357"], [357, "id361"], [357, "id365"], [357, "id369"], [357, "id379"], [357, "id383"], [357, "id399"], [357, "id403"], [357, "id413"], [357, "id417"], [357, "id421"], [357, "id428"], [357, "id432"], [357, "id436"], [357, "id440"], [357, "id444"], [357, "id448"], [357, "id452"], [357, "id456"], [357, "id460"], [357, "id464"], [357, "id468"], [357, "id472"], [357, "id476"], [357, "id480"], [357, "id484"], [357, "id488"], [357, "id492"], [357, "id496"], [357, "id500"], [357, "id504"], [357, "id508"], [357, "id512"], [357, "id516"], [357, "id520"], [357, "id524"], [357, "id528"], [357, "id538"], [357, "id542"], [357, "id546"], [357, "id550"], [357, "id554"], [357, "id558"], [357, "id563"], [357, "id568"], [357, "id573"], [357, "id578"], [357, "id583"], [357, "id615"], [357, "id620"], [357, "id623"], [357, "id627"], [357, "id630"], [357, "id634"], [357, "id637"], [357, "id640"], [357, "id643"], [357, "id646"], [357, "id649"], [357, "id652"], [357, "id655"], [357, "id658"], [357, "id661"], [357, "id666"], [357, "id671"], [357, "id675"], [357, "id679"], [357, "id683"], [357, "id687"], [357, "id691"], [357, "id695"], [357, "id699"], [357, "id703"], [357, "id707"], [357, "id711"], [357, "id715"], [357, "id719"], [357, "id723"], [357, "id727"], [357, "id731"], [357, "id735"], [357, "id739"], [357, "id743"], [357, "id747"], [357, "id751"], [357, "id755"], [357, "id759"], [357, "id763"], [357, "id767"], [357, "id771"], [357, "id775"], [357, "id779"], [357, "id783"], [357, "id787"], [357, "id791"], [357, "id795"], [357, "id799"], [357, "id803"], [357, "id807"], [357, "id811"], [357, "id815"], [357, "id819"], [357, "id823"], [357, "id827"], [357, "id831"], [357, "id834"], [357, "id837"], [357, "id841"], [357, "id845"], [357, "id849"], [357, "id853"], [357, "id857"], [357, "id861"], [357, "id864"], [357, "id867"], [357, "id870"], [357, "id874"], [357, "id878"], [357, "id884"], [357, "id891"], [357, "id898"], [357, "id903"], [357, "id908"]], "Arithmetic with Overflow Intrinsics": [[357, "arithmetic-with-overflow-intrinsics"]], "Arm Soft-Float Target": [[348, "arm-soft-float-target"]], "Arm architecture not given": [[348, "arm-architecture-not-given"]], "ArmNeon": [[401, "armneon"]], "ArmNeonSema": [[401, "armneonsema"]], "ArmNeonTest": [[401, "armneontest"]], "Armv6-m, Armv7-m and Armv7E-M targets": [[348, "armv6-m-armv7-m-and-armv7e-m-targets"]], "Array Type": [[357, "array-type"]], "Asm Table Formats": [[332, "asm-table-formats"]], "Asm template argument modifiers": [[357, "asm-template-argument-modifiers"]], "AsmMatcher": [[401, "asmmatcher"]], "AsmWriter": [[401, "asmwriter"]], "Assembler": [[275, "assembler"]], "Assembly Parser": [[289, "assembly-parser"]], "Assembly Printer": [[413, "assembly-printer"]], "Assert Liberally": [[291, "assert-liberally"]], "Atomic Memory Ordering Constraints": [[357, "atomic-memory-ordering-constraints"]], "Atomic instructions": [[278, "atomic-instructions"]], "Atomic orderings": [[278, "atomic-orderings"]], "Atomics and Codegen": [[278, "atomics-and-codegen"]], "Atomics and IR optimization": [[278, "atomics-and-ir-optimization"]], "AttrBuilder": [[353, "attrbuilder"]], "AttrDocs": [[401, "attrdocs"]], "Attribute": [[353, "attribute"]], "Attribute Groups": [[357, "attribute-groups"]], "AttributeList": [[353, "attributelist"]], "Attribution of Changes": [[330, "attribution-of-changes"]], "Audience": [[413, "audience"]], "Auto-Vectorization in LLVM": [[412, null]], "Automatic Debugger Selection": [[285, "automatic-debugger-selection"]], "Automatic Linker Flags Named Metadata": [[357, "automatic-linker-flags-named-metadata"]], "Available AliasAnalysis implementations": [[277, "available-aliasanalysis-implementations"]], "Available Fuzzers": [[338, "available-fuzzers"]], "Avoid loads and stores of large aggregate type": [[337, "avoid-loads-and-stores-of-large-aggregate-type"]], "Avoid std::endl": [[291, "avoid-std-endl"]], "Avoiding Heap Allocations": [[327, "avoiding-heap-allocations"]], "B": [[358, "b"]], "BUGS": [[306, "bugs"], [314, "bugs"], [315, "bugs"]], "Background": [[286, "background"], [329, "background"], [351, "background"]], "Background on Windows exceptions": [[332, "background-on-windows-exceptions"]], "Barriers": [[367, "barriers"]], "Base & Derived Pointers": [[398, "base-derived-pointers"]], "Basic CMake usage": [[287, "usage"]], "Basic Commands": [[295, "basic-commands"]], "Basic Expression Parsing": [[426, "basic-expression-parsing"], [436, "basic-expression-parsing"]], "Basic Inspection and Traversal Routines": [[383, "basic-inspection-and-traversal-routines"]], "Basic Mode": [[415, "basic-mode"]], "Basic Setup": [[351, "basic-setup"]], "Basic Steps": [[413, "basic-steps"]], "Basic Usage": [[317, "basic-usage"]], "Basic code required": [[414, "basic-code-required"]], "Basic concepts": [[405, "basic-concepts"]], "Basics": [[281, "basics"], [366, "basics"]], "Benchmarking tips": [[279, null]], "Benchmarks": [[386, "benchmarks"]], "Beware of non-determinism due to ordering of pointers": [[291, "beware-of-non-determinism-due-to-ordering-of-pointers"]], "Beware of non-deterministic sorting order of equal elements": [[291, "beware-of-non-deterministic-sorting-order-of-equal-elements"]], "Beware unnecessary copies with auto": [[291, "beware-unnecessary-copies-with-auto"]], "Bigger Pieces of Work": [[326, "bigger-pieces-of-work"]], "Binary Expression Parsing": [[426, "binary-expression-parsing"], [436, "binary-expression-parsing"]], "Binary Operations": [[357, "binary-operations"]], "Binary Operators": [[274, "binary-operators"]], "Bisecting": [[385, "bisecting"]], "Bisection Index Values": [[368, "bisection-index-values"]], "Bit Manipulation Intrinsics": [[357, "bit-manipulation-intrinsics"]], "Bit storage containers (BitVector, SparseBitVector)": [[383, "bit-storage-containers-bitvector-sparsebitvector"]], "BitValue": [[418, "bitvalue"]], "BitVector": [[383, "bitvector"]], "Bitcode Wrapper Format": [[281, "bitcode-wrapper-format"]], "Bitconverts": [[280, "bitconverts"]], "Bitstream Format": [[281, "bitstream-format"]], "Bitwise Binary Operations": [[357, "bitwise-binary-operations"]], "Blitz++": [[386, "blitz"]], "Block Bias": [[282, "block-bias"]], "Block Frequency": [[282, "block-frequency"]], "Block Mass": [[282, "block-mass"]], "Block References": [[362, "block-references"]], "Block Scalars": [[418, "block-scalars"]], "Blocks": [[281, "blocks"]], "Bodies": [[404, "bodies"]], "Boolean Arguments": [[323, "boolean-arguments"]], "Bootstrap Builds": [[276, "bootstrap-builds"]], "Braced Initializer Lists": [[291, "braced-initializer-lists"]], "Branch Folding and If Conversion": [[413, "branch-folding-and-if-conversion"]], "Branch Probability": [[282, "branch-probability"]], "Branch Weight": [[282, "branch-weight"]], "BranchInst": [[283, "branchinst"]], "Branching/Stashing/Updating for Local Development or Experiments": [[385, "branching-stashing-updating-for-local-development-or-experiments"]], "Bug Fixes": [[326, "bug-fixes"]], "Bug Reporting Process": [[389, "bug-reporting-process"]], "Bug Reports": [[326, "bug-reports"]], "Bugs and Enhancements": [[398, "bugs-and-enhancements"]], "Build Clang Binary Distribution": [[350, "build-clang-binary-distribution"]], "Build Integration": [[356, "build-integration"]], "Build-time use optimization": [[365, "build-time-use-optimization"]], "Building Clang with PGO": [[347, "building-clang-with-pgo"]], "Building LLVM with CMake": [[287, null]], "Building a JIT in LLVM": [[443, "building-a-jit-in-llvm"]], "Building a JIT: Adding Optimizations \u2013 An introduction to ORC Layers": [[421, null]], "Building a JIT: Extreme Laziness - Using Compile Callbacks to JIT from ASTs": [[423, null]], "Building a JIT: Per-function Lazy Compilation": [[422, null]], "Building a JIT: Remote-JITing \u2013 Process Isolation and Laziness at a Distance": [[424, null]], "Building a JIT: Starting out with KaleidoscopeJIT": [[420, null]], "Building a single sub-project": [[385, "building-a-single-sub-project"]], "Building and Running": [[338, "building-and-running"]], "Building compiler-rt builtins for Arm": [[348, "building-compiler-rt-builtins-for-arm"]], "Building fallible iterators and iterator ranges": [[383, "building-fallible-iterators-and-iterator-ranges"]], "Building with XRay": [[416, "building-with-xray"]], "Buildmasters": [[345, "buildmasters"]], "Built In GC Strategies": [[339, "built-in-gc-strategies"]], "Built in register allocators": [[289, "built-in-register-allocators"]], "Built-in expect Instructions": [[283, "built-in-expect-instructions"]], "Built-in types": [[418, "built-in-types"]], "Builtin parsers": [[323, "builtin-parsers"]], "Bundled Instructions": [[362, "bundled-instructions"]], "C": [[358, "c"]], "C API Changes": [[330, "c-api-changes"]], "C API Details": [[364, "c-api-details"]], "C type width Module Flags Metadata": [[357, "c-type-width-module-flags-metadata"]], "C++ Features": [[380, "c-features"]], "C++ Performance Benchmarks": [[386, "c-performance-benchmarks"]], "C++ Standard Library": [[291, "c-standard-library"]], "C++ Standard Versions": [[291, "c-standard-versions"]], "C/C++ front-end specific debug information": [[393, "c-c-front-end-specific-debug-information"]], "C/C++ function information": [[393, "c-c-function-information"]], "C/C++ global variable information": [[393, "c-c-global-variable-information"]], "C/C++ source file information": [[393, "c-c-source-file-information"]], "C99-style Hexadecimal Floating-point Constants": [[334, "c99-style-hexadecimal-floating-point-constants"]], "CFG Modifications": [[283, "cfg-modifications"]], "CFIIndex Operands": [[362, "cfiindex-operands"]], "CMake Caches": [[287, "cmake-caches"]], "CMake Primer": [[288, null]], "CODE GENERATION OPTIONS": [[298, "code-generation-options"]], "COFF Syntax": [[444, "coff-syntax"]], "COMMANDS": [[304, "commands"], [315, "commands"], [317, "commands"]], "COMPONENTS": [[303, "components"]], "CONSTANTS_BLOCK Contents": [[281, "constants-block-contents"]], "CORAL-2 Benchmarks": [[386, "coral-2-benchmarks"]], "CTags": [[401, "ctags"]], "Call-clobbered registers": [[289, "call-clobbered-registers"]], "CallArgument Records": [[417, "callargument-records"]], "CallInst": [[283, "callinst"]], "Callee-cleanup Calling Conventions": [[355, "callee-cleanup-calling-conventions"]], "Calling Conventions": [[357, "calling-conventions"], [413, "calling-conventions"]], "CallingConv": [[401, "callingconv"]], "Calls": [[357, "calls"]], "Can GEP index into vector elements?": [[340, "can-gep-index-into-vector-elements"]], "Can I cast an object\u2019s address to integer and add it to null?": [[340, "can-i-cast-an-object-s-address-to-integer-and-add-it-to-null"]], "Can I compare two values computed with GEPs?": [[340, "can-i-compare-two-values-computed-with-geps"]], "Can I compile C or C++ code to platform-independent LLVM bitcode?": [[335, "can-i-compile-c-or-c-code-to-platform-independent-llvm-bitcode"]], "Can I compute the distance between two objects, and add that value to one address to compute the other address?": [[340, "can-i-compute-the-distance-between-two-objects-and-add-that-value-to-one-address-to-compute-the-other-address"]], "Can I do GEP with a different pointer type than the type of the underlying object?": [[340, "can-i-do-gep-with-a-different-pointer-type-than-the-type-of-the-underlying-object"]], "Can I do type-based alias analysis on LLVM IR?": [[340, "can-i-do-type-based-alias-analysis-on-llvm-ir"]], "Can I modify LLVM source code and redistribute the modified source?": [[335, "can-i-modify-llvm-source-code-and-redistribute-the-modified-source"]], "Can I modify the LLVM source code and redistribute binaries or other tools based on it, without redistributing the source?": [[335, "can-i-modify-the-llvm-source-code-and-redistribute-binaries-or-other-tools-based-on-it-without-redistributing-the-source"]], "Can array indices be negative?": [[340, "can-array-indices-be-negative"]], "Changes to LLDB": [[388, "changes-to-lldb"]], "Changes to the AArch64 Target": [[388, "changes-to-the-aarch64-target"]], "Changes to the C++ APIs": [[388, "changes-to-the-c-apis"]], "Changes to the Hexagon Target": [[388, "changes-to-the-hexagon-target"]], "Changes to the JIT APIs": [[388, "changes-to-the-jit-apis"]], "Changes to the LLVM IR": [[388, "changes-to-the-llvm-ir"]], "Changes to the MIPS Target": [[388, "changes-to-the-mips-target"]], "Changes to the Nios2 Target": [[388, "changes-to-the-nios2-target"]], "Changes to the PowerPC Target": [[388, "changes-to-the-powerpc-target"]], "Changes to the SystemZ Target": [[388, "changes-to-the-systemz-target"]], "Changes to the WebAssembly Target": [[388, "changes-to-the-webassembly-target"]], "Changes to the X86 Target": [[388, "changes-to-the-x86-target"]], "Chapter 1 Introduction": [[420, "chapter-1-introduction"]], "Chapter 2 Introduction": [[421, "chapter-2-introduction"], [426, "chapter-2-introduction"], [436, "chapter-2-introduction"]], "Chapter 3 Introduction": [[422, "chapter-3-introduction"], [427, "chapter-3-introduction"], [437, "chapter-3-introduction"]], "Chapter 4 Introduction": [[423, "chapter-4-introduction"], [428, "chapter-4-introduction"], [438, "chapter-4-introduction"]], "Chapter 5 Introduction": [[424, "chapter-5-introduction"], [429, "chapter-5-introduction"], [439, "chapter-5-introduction"]], "Chapter 6 Introduction": [[430, "chapter-6-introduction"], [440, "chapter-6-introduction"]], "Chapter 7 Introduction": [[431, "chapter-7-introduction"], [441, "chapter-7-introduction"]], "Chapter 8 Introduction": [[432, "chapter-8-introduction"]], "Chapter 9 Introduction": [[433, "chapter-9-introduction"]], "Checkout LLVM from Git": [[341, "checkout-llvm-from-git"]], "Checkout via SVN (deprecated)": [[341, "checkout-via-svn-deprecated"]], "Checkout/Clone Multiple Projects, with Commit Access": [[385, "checkout-clone-multiple-projects-with-commit-access"]], "Checkout/Clone a Single Project, with Commit Access": [[385, "checkout-clone-a-single-project-with-commit-access"]], "Checkout/Clone a Single Project, without Commit Access": [[385, "checkout-clone-a-single-project-without-commit-access"]], "Choosing a target": [[432, "choosing-a-target"]], "Chrome Trace Viewer Visualization": [[416, "chrome-trace-viewer-visualization"]], "Chunk Header": [[391, "chunk-header"]], "Clang": [[391, "clang"]], "Clang BackEnds": [[401, "clang-backends"]], "Clang uses the host header files": [[348, "clang-uses-the-host-header-files"]], "ClangAttrClasses": [[401, "clangattrclasses"]], "ClangAttrDump": [[401, "clangattrdump"]], "ClangAttrImpl": [[401, "clangattrimpl"]], "ClangAttrList": [[401, "clangattrlist"]], "ClangAttrPCHRead": [[401, "clangattrpchread"]], "ClangAttrPCHWrite": [[401, "clangattrpchwrite"]], "ClangAttrParsedAttrImpl": [[401, "clangattrparsedattrimpl"]], "ClangAttrParsedAttrKinds": [[401, "clangattrparsedattrkinds"]], "ClangAttrParsedAttrList": [[401, "clangattrparsedattrlist"]], "ClangAttrParserStringSwitches": [[401, "clangattrparserstringswitches"]], "ClangAttrSpellingListIndex": [[401, "clangattrspellinglistindex"]], "ClangAttrSpellings": [[401, "clangattrspellings"]], "ClangAttrTemplateInstantiate": [[401, "clangattrtemplateinstantiate"]], "ClangAttrVisitor": [[401, "clangattrvisitor"]], "ClangCommentCommandInfo": [[401, "clangcommentcommandinfo"]], "ClangCommentCommandList": [[401, "clangcommentcommandlist"]], "ClangCommentHTMLNamedCharacterReferences": [[401, "clangcommenthtmlnamedcharacterreferences"]], "ClangCommentHTMLTags": [[401, "clangcommenthtmltags"]], "ClangCommentHTMLTagsProperties": [[401, "clangcommenthtmltagsproperties"]], "ClangCommentNodes": [[401, "clangcommentnodes"]], "ClangDeclNodes": [[401, "clangdeclnodes"]], "ClangDiagGroups": [[401, "clangdiaggroups"]], "ClangDiagsDefs": [[401, "clangdiagsdefs"]], "ClangDiagsIndexName": [[401, "clangdiagsindexname"]], "ClangSACheckers": [[401, "clangsacheckers"]], "ClangStmtNodes": [[401, "clangstmtnodes"]], "Class overviews": [[291, "class-overviews"]], "Class template arguments": [[403, "class-template-arguments"]], "Classes and definitions": [[403, "classes-and-definitions"]], "Cleanups": [[332, "cleanups"]], "Clients for debugging and evaluation of implementations": [[277, "clients-for-debugging-and-evaluation-of-implementations"]], "Clobber constraints": [[357, "clobber-constraints"]], "Code Conventions": [[275, "code-conventions"]], "Code Emission": [[289, "code-emission"]], "Code Generation": [[361, "code-generation"]], "Code Generation Setup": [[427, "code-generation-setup"], [437, "code-generation-setup"]], "Code Generation for If/Then/Else": [[429, "code-generation-for-if-then-else"], [439, "code-generation-for-if-then-else"]], "Code Generation for the \u201cfor\u201d Loop": [[429, "code-generation-for-the-for-loop"], [439, "code-generation-for-the-for-loop"]], "Code Generator Intrinsics": [[357, "code-generator-intrinsics"]], "Code Generator backend info": [[403, "code-generator-backend-info"]], "Code Object": [[275, "code-object"]], "Code Object Directives (-mattr=+code-object-v3)": [[275, "code-object-directives-mattr-code-object-v3"]], "Code Object Metadata": [[275, "code-object-metadata"]], "Code Object Target Identification": [[275, "code-object-target-identification"]], "Code Object V2 Metadata (-mattr=-code-object-v3)": [[275, "code-object-v2-metadata-mattr-code-object-v3"]], "Code Object V2 Note Records (-mattr=-code-object-v3)": [[275, "code-object-v2-note-records-mattr-code-object-v3"]], "Code Object V3 Metadata (-mattr=+code-object-v3)": [[275, "code-object-v3-metadata-mattr-code-object-v3"]], "Code Object V3 Note Records (-mattr=+code-object-v3)": [[275, "code-object-v3-note-records-mattr-code-object-v3"]], "Code Organization": [[399, "code-organization"]], "Code Owners": [[330, "code-owners"]], "Code Reviews": [[330, "code-reviews"]], "Code Reviews with Phabricator": [[382, null]], "Code Transformation Metadata": [[410, null]], "Code generator bugs": [[352, "code-generator-bugs"]], "Code generator debugger": [[285, "code-generator-debugger"]], "CodeEmitter": [[401, "codeemitter"]], "CodeView": [[379, "codeview"]], "CodeView Debug Info Format": [[393, "codeview-debug-info-format"]], "CodeView Symbol Records": [[369, null]], "CodeView Type Records": [[370, null]], "CodeView-Dependent": [[334, "codeview-dependent"]], "Collecting options as a set of flags": [[323, "collecting-options-as-a-set-of-flags"]], "Collector Requirements": [[339, "collector-requirements"]], "Color conversion": [[386, "color-conversion"]], "Comdats": [[357, "comdats"]], "Command line flags": [[412, "command-line-flags"]], "CommandLine 2.0 Library Manual": [[323, null]], "Comment Formatting": [[291, "comment-formatting"]], "Commenting": [[291, "commenting"]], "Commit an API Change in LLVM and Update the Sub-projects": [[385, "commit-an-api-change-in-llvm-and-update-the-sub-projects"]], "Commit messages": [[330, "commit-messages"]], "Committing a change": [[382, "committing-a-change"]], "Committing someone\u2019s change from Phabricator": [[382, "committing-someone-s-change-from-phabricator"]], "Common Issues": [[367, "common-issues"]], "Common Problems": [[341, "common-problems"], [342, "common-problems"]], "Communaut\u00e9": [[419, "community"]], "Community Testing": [[350, "community-testing"]], "Community wide proposals": [[419, "community-wide-proposals"]], "Comparison and logarithmical search": [[366, "comparison-and-logarithmical-search"]], "Compilation Models": [[324, "compilation-models"]], "Compile Flags": [[380, "compile-flags"]], "Compile Unit": [[433, "compile-unit"]], "Compile-time optimization bugs": [[352, "compile-time-optimization-bugs"]], "Compiler-rt builds but the tests fail to build": [[348, "compiler-rt-builds-but-the-tests-fail-to-build"]], "Compiler/Platform-specific topics": [[287, "compiler-platform-specific-topics"]], "Compiling CUDA Code": [[324, "compiling-cuda-code"]], "Compiling CUDA with clang": [[324, null]], "Compiling the LLVM Suite Source Code": [[341, "compiling-the-llvm-suite-source-code"]], "Complex Constants": [[357, "complex-constants"]], "ComplexPatterns": [[343, "complexpatterns"]], "Component Overview": [[356, "component-overview"]], "Compute User Data": [[275, "compute-user-data"]], "Computing stack maps": [[339, "computing-stack-maps"]], "Concatenating Errors with joinErrors": [[383, "concatenating-errors-with-joinerrors"]], "Conception et aper\u00e7u de LLVM": [[419, "llvm-design-overview"]], "Concerns": [[385, "concerns"], [385, "id12"], [385, "id14"]], "Conclusions": [[426, "conclusions"], [436, "conclusions"]], "Concrete Bases and Deeper Hierarchies": [[351, "concrete-bases-and-deeper-hierarchies"]], "Configuration": [[407, "configuration"]], "Configuring CMake": [[349, "configuring-cmake"]], "Configuring External Tests": [[408, "configuring-external-tests"]], "Configuring LLVM to Build Fuzzers": [[338, "configuring-llvm-to-build-fuzzers"]], "Configuring the Module": [[432, "configuring-the-module"]], "Considerations": [[280, "considerations"]], "Consistent Semantics": [[399, "consistent-semantics"]], "Constant Expressions": [[357, "constant-expressions"]], "Constant Lowering": [[343, "constant-lowering"]], "Constant Pool Indices": [[362, "constant-pool-indices"]], "Constants": [[357, "constants"]], "Constrained Floating-Point Intrinsics": [[357, "constrained-floating-point-intrinsics"]], "Constrained libm-equivalent Intrinsics": [[357, "constrained-libm-equivalent-intrinsics"]], "Constraining test execution": [[409, "constraining-test-execution"]], "Constraint Codes": [[357, "constraint-codes"]], "Contents": [[393, "contents"]], "Contextual markups": [[364, "contextual-markups"]], "Continuously Running and Finding Bugs": [[338, "continuously-running-and-finding-bugs"]], "Contributing to LLVM": [[326, null]], "Control Flow": [[288, "control-flow"]], "Control Flow Verification Tool Design Document": [[286, null]], "Controlling Fidelity": [[416, "controlling-fidelity"]], "Controlling other formatting options": [[323, "controlling-other-formatting-options"]], "Controlling the number of occurrences required and allowed": [[323, "controlling-the-number-of-occurrences-required-and-allowed"]], "Controlling whether or not a value must be specified": [[323, "controlling-whether-or-not-a-value-must-be-specified"]], "Conventions": [[273, "conventions"], [274, "conventions"], [367, "conventions"]], "Conversion Operations": [[357, "conversion-operations"]], "Conversions": [[274, "conversions"]], "Copyright": [[330, "copyright"]], "Copyright, License, and Patents": [[330, "copyright-license-and-patents"]], "Core Pipeline": [[343, "core-pipeline"]], "CoroCleanup": [[327, "corocleanup"]], "CoroEarly": [[327, "coroearly"]], "CoroElide": [[327, "coroelide"]], "CoroSplit": [[327, "corosplit"]], "Coroutine Manipulation Intrinsics": [[327, "coroutine-manipulation-intrinsics"]], "Coroutine Promise": [[327, "coroutine-promise"]], "Coroutine Representation": [[327, "coroutine-representation"]], "Coroutine Structure Intrinsics": [[327, "coroutine-structure-intrinsics"]], "Coroutine Transformation": [[327, "coroutine-transformation"]], "Coroutine Transformation Passes": [[327, "coroutine-transformation-passes"]], "Coroutines by Example": [[327, "coroutines-by-example"]], "Coroutines in LLVM": [[327, null]], "Corpus": [[359, "corpus"]], "Counter": [[328, "id3"]], "Counter Expressions": [[328, "counter-expressions"]], "Counter:": [[328, "counter"], [328, "id8"]], "Coverage Mapping Header:": [[328, "coverage-mapping-header"]], "Crash debugger": [[285, "crash-debugger"]], "Crashing Bugs": [[352, "crashing-bugs"]], "Create Release Branch": [[350, "create-release-branch"]], "Creating an LLVM Project": [[384, null]], "Creating and inserting new Instructions": [[383, "creating-and-inserting-new-instructions"]], "Creating new registries": [[414, "creating-new-registries"]], "Cross Compilation and External Devices": [[407, "cross-compilation-and-external-devices"]], "Cross compiling": [[287, "cross-compiling"]], "Cross-Compiling LLVM": [[341, "cross-compiling-llvm"]], "Cross-Compiling from x86_64 to ARM": [[349, "cross-compiling-from-x86-64-to-arm"]], "Currently": [[385, "currently"], [385, "id17"], [385, "id20"], [385, "id23"]], "Custom": [[413, "custom"]], "Custom GC Strategies": [[339, "custom-gc-strategies"]], "Custom SDNodes": [[343, "custom-sdnodes"]], "Custom Scalar": [[418, "custom-scalar"]], "Custom Suites": [[407, "custom-suites"]], "Custom formatting": [[383, "custom-formatting"]], "Custom lowering of intrinsics": [[339, "custom-lowering-of-intrinsics"]], "CustomEventMarker Records": [[417, "customeventmarker-records"]], "D": [[358, "d"]], "DAGISel": [[401, "dagisel"]], "DARPA HPCS SSCA#2 C/OpenMP reference implementation": [[386, "darpa-hpcs-ssca-2-c-openmp-reference-implementation"]], "DBI Stream Options": [[316, "dbi-stream-options"]], "DEFINE_ABBREV Encoding": [[281, "define-abbrev-encoding"]], "DESCRIPTION": [[292, "description"], [293, "description"], [294, "description"], [296, "description"], [297, "description"], [298, "description"], [299, "description"], [300, "description"], [301, "description"], [302, "description"], [303, "description"], [304, "description"], [304, "id2"], [304, "id4"], [304, "id7"], [304, "id10"], [305, "description"], [306, "description"], [307, "description"], [308, "description"], [309, "description"], [310, "description"], [311, "description"], [312, "description"], [313, "description"], [314, "description"], [315, "description"], [317, "description"], [317, "id2"], [317, "id4"], [318, "description"], [319, "description"], [320, "description"], [321, "description"], [322, "description"]], "DETAILED OUTPUT DEFINITIONS": [[301, "detailed-output-definitions"]], "DFAPacketizer": [[401, "dfapacketizer"]], "DIBasicType": [[357, "dibasictype"]], "DICompileUnit": [[357, "dicompileunit"]], "DICompositeType": [[357, "dicompositetype"]], "DIDerivedType": [[357, "diderivedtype"]], "DIEnumerator": [[357, "dienumerator"]], "DIExpression": [[357, "diexpression"]], "DIFile": [[357, "difile"]], "DIGlobalVariable": [[357, "diglobalvariable"]], "DIImportedEntity": [[357, "diimportedentity"]], "DILexicalBlock": [[357, "dilexicalblock"]], "DILexicalBlockFile": [[357, "dilexicalblockfile"]], "DILocalVariable": [[357, "dilocalvariable"]], "DILocation": [[357, "dilocation"]], "DIMacro": [[357, "dimacro"]], "DIMacroFile": [[357, "dimacrofile"]], "DINamespace": [[357, "dinamespace"]], "DIObjCProperty": [[357, "diobjcproperty"]], "DISubprogram": [[357, "disubprogram"]], "DISubrange": [[357, "disubrange"]], "DISubroutineType": [[357, "disubroutinetype"]], "DITemplateTypeParameter": [[357, "ditemplatetypeparameter"]], "DITemplateValueParameter": [[357, "ditemplatevalueparameter"]], "DLL Storage Classes": [[357, "dll-storage-classes"]], "DS": [[0, "ds"], [1, "ds"], [2, "ds"], [275, "ds"]], "DS Modifiers": [[273, "ds-modifiers"]], "DWARF": [[275, "dwarf"]], "DWARF Emission Setup": [[433, "dwarf-emission-setup"]], "Data Layout": [[357, "data-layout"], [367, "data-layout"]], "Data Records": [[281, "data-records"]], "Data Section": [[417, "data-section"]], "Data:": [[328, "data"]], "Debug information and optimizations": [[393, "debug-information-and-optimizations"]], "Debug information consumers": [[393, "debug-information-consumers"]], "Debugger Intrinsics": [[357, "debugger-intrinsics"]], "Debugger intrinsic functions": [[393, "debugger-intrinsic-functions"]], "Debugging": [[383, "debugging"]], "Debugging Information Extension for Objective C Properties": [[393, "debugging-information-extension-for-objective-c-properties"]], "Debugging Information tests": [[409, "debugging-information-tests"], [409, "id2"]], "Debugging JIT-ed Code With GDB": [[329, null]], "Debugging MCJIT-ed code": [[329, "debugging-mcjit-ed-code"]], "Debugging Tools": [[295, "debugging-tools"]], "Debugging information format": [[393, "debugging-information-format"], [393, "id4"]], "Debugging with XRay": [[416, null]], "Declarations": [[404, "declarations"]], "Default values": [[418, "default-values"]], "Defining a Register": [[413, "defining-a-register"]], "Defining a Register Class": [[413, "defining-a-register-class"]], "Definitions": [[358, "definitions"], [387, "definitions"], [396, "definitions"]], "Delayed Freelist": [[391, "delayed-freelist"]], "Deleting GlobalVariables": [[383, "deleting-globalvariables"]], "Deleting Instructions": [[383, "deleting-instructions"], [383, "schanges-deleting-sub"]], "Deoptimization Operand Bundles": [[357, "deoptimization-operand-bundles"]], "Dependencies": [[380, "dependencies"]], "Dereferencing": [[288, "dereferencing"]], "Describing Aliasing Properties": [[337, "describing-aliasing-properties"]], "Describing Language Specific Properties": [[337, "describing-language-specific-properties"]], "Description": [[285, "description"], [316, "description"], [360, "description"]], "Design": [[391, "design"]], "Design Considerations": [[355, "design-considerations"]], "Design Guidelines": [[387, "design-guidelines"]], "Design Ideas": [[286, "design-ideas"]], "Design Philosophy": [[285, "design-philosophy"], [360, "design-philosophy"]], "Design and Usage of the InAlloca Attribute": [[355, null]], "Design of MemorySSA": [[365, "design-of-memoryssa"]], "Design tradeoffs": [[365, "design-tradeoffs"]], "Designing Type Hiercharies and Polymorphic Interfaces": [[383, "designing-type-hiercharies-and-polymorphic-interfaces"]], "Details": [[393, "details"], [412, "details"]], "Detecting clang vs NVCC from code": [[324, "detecting-clang-vs-nvcc-from-code"]], "Determining absolute position with getPosition()": [[323, "determining-absolute-position-with-getposition"]], "Developer Policies": [[330, "developer-policies"]], "Developer Tools": [[295, "developer-tools"]], "Developing LLVM passes out of source": [[287, "developing-llvm-passes-out-of-source"]], "Developing libFuzzer": [[359, "developing-libfuzzer"]], "Development Process Documentation": [[419, "development-process-documentation"]], "Diagnostics": [[412, "diagnostics"]], "Dialect Differences Between clang and nvcc": [[324, "dialect-differences-between-clang-and-nvcc"]], "Dictionaries": [[359, "dictionaries"]], "Different Pass styles": [[277, "different-pass-styles"]], "Direct Stack Map Entries": [[396, "direct-stack-map-entries"]], "Directory Layout": [[341, "directory-layout"]], "Disassembler": [[289, "disassembler"], [401, "disassembler"]], "Displaying and Analyzing Results": [[407, "displaying-and-analyzing-results"]], "Dissecting the Kernel": [[367, "dissecting-the-kernel"]], "Dissecting the sample:": [[328, "dissecting-the-sample"]], "Distinct Save and Suspend": [[327, "distinct-save-and-suspend"]], "Dither": [[386, "dither"]], "Do Not Use using namespace std": [[291, "do-not-use-using-namespace-std"]], "Do not use Braced Initializer Lists to Call a Constructor": [[291, "do-not-use-braced-initializer-lists-to-call-a-constructor"]], "Do not use RTTI or Exceptions": [[291, "do-not-use-rtti-or-exceptions"]], "Do not use Static Constructors": [[291, "do-not-use-static-constructors"]], "Docker basics": [[331, "docker-basics"]], "Document List": [[418, "document-list"]], "Does the University of Illinois Open Source License really qualify as an \u00ab\u00a0open source\u00a0\u00bb license?": [[335, "does-the-university-of-illinois-open-source-license-really-qualify-as-an-open-source-license"]], "Don\u2019t Expose System Headers": [[399, "don-t-expose-system-headers"]], "Don\u2019t Include System Headers": [[399, "don-t-include-system-headers"]], "Don\u2019t evaluate end() every time through a loop": [[291, "don-t-evaluate-end-every-time-through-a-loop"]], "Don\u2019t use default labels in fully covered switches over enumerations": [[291, "don-t-use-default-labels-in-fully-covered-switches-over-enumerations"]], "Don\u2019t use else after a return": [[291, "don-t-use-else-after-a-return"]], "Don\u2019t use inline when defining a function in a class definition": [[291, "don-t-use-inline-when-defining-a-function-in-a-class-definition"]], "Doxygen Use in Documentation Comments": [[291, "doxygen-use-in-documentation-comments"]], "Driver Changes and Closing Thoughts": [[427, "driver-changes-and-closing-thoughts"], [437, "driver-changes-and-closing-thoughts"]], "Dynamic Allocation": [[289, "dynamic-allocation"]], "Dynamically adding command line options": [[323, "dynamically-adding-command-line-options"]], "EC Substream": [[371, "ec-substream"]], "ELF-Dependent": [[334, "elf-dependent"]], "END_BLOCK Encoding": [[281, "end-block-encoding"]], "ENTER_SUBBLOCK Encoding": [[281, "enter-subblock-encoding"]], "EXAMPLE": [[320, "example"]], "EXAMPLE 1: benchmarking instructions": [[309, "example-1-benchmarking-instructions"]], "EXAMPLE 2: benchmarking a custom code snippet": [[309, "example-2-benchmarking-a-custom-code-snippet"]], "EXAMPLE 3: analysis": [[309, "example-3-analysis"]], "EXAMPLES": [[303, "examples"], [317, "examples"]], "EXECUTION OPTIONS": [[296, "execution-options"]], "EXIT STATUS": [[292, "exit-status"], [293, "exit-status"], [294, "exit-status"], [296, "exit-status"], [297, "exit-status"], [298, "exit-status"], [299, "exit-status"], [300, "exit-status"], [301, "exit-status"], [302, "exit-status"], [303, "exit-status"], [304, "exit-status"], [306, "exit-status"], [307, "exit-status"], [308, "exit-status"], [309, "exit-status"], [310, "exit-status"], [312, "exit-status"], [313, "exit-status"], [314, "exit-status"], [317, "exit-status"], [318, "exit-status"], [319, "exit-status"], [320, "exit-status"], [321, "exit-status"], [322, "exit-status"]], "EXP": [[0, "exp"], [1, "exp"], [2, "exp"]], "EXP Modifiers": [[273, "exp-modifiers"]], "EXPORT COMMAND": [[304, "export-command"]], "Efficiency": [[355, "efficiency"]], "Efficiency Issues": [[277, "efficiency-issues"]], "Element Wise Atomic Memory Intrinsics": [[357, "element-wise-atomic-memory-intrinsics"]], "Embedded Module": [[362, "embedded-module"]], "Embedding LLVM in your project": [[287, "embedding-llvm-in-your-project"]], "Emit Object Code": [[432, "emit-object-code"]], "Emitting assembly code: GCMetadataPrinter": [[339, "emitting-assembly-code-gcmetadataprinter"]], "Emitting function stack size information": [[289, "emitting-function-stack-size-information"]], "Encoded data:": [[328, "encoded-data"]], "Encoding": [[328, "encoding"]], "Encoding Suffices": [[272, "encoding-suffices"]], "End-user Options": [[297, "end-user-options"]], "EndOfBuffer Records": [[417, "endofbuffer-records"]], "Ending Execution with llvm_shutdown()": [[383, "ending-execution-with-llvm-shutdown"]], "Engine Creation": [[361, "engine-creation"]], "Error Handling": [[418, "error-handling"]], "Error handling": [[383, "error-handling"]], "Example": [[329, "example"], [405, "example"]], "Example (custom deallocation function):": [[327, "example-custom-deallocation-function"]], "Example (final suspend point):": [[327, "example-final-suspend-point"]], "Example (normal suspend point):": [[327, "example-normal-suspend-point"]], "Example (standard deallocation functions):": [[327, "example-standard-deallocation-functions"]], "Example HSA Source Code (-mattr=+code-object-v3)": [[275, "example-hsa-source-code-mattr-code-object-v3"]], "Example Section": [[395, "example-section"]], "Example Subsection": [[395, "example-subsection"]], "Example Subsubsection": [[395, "example-subsubsection"]], "Example Usage": [[368, "example-usage"]], "Example implementations of getAnalysisUsage": [[414, "example-implementations-of-getanalysisusage"]], "Example of link time optimization": [[344, "example-of-link-time-optimization"], [360, "example-of-link-time-optimization"]], "Example with clang": [[341, "example-with-clang"]], "Example:": [[327, "example"], [327, "id23"], [327, "id42"], [327, "id46"], [357, "example"], [357, "id30"], [357, "id35"], [357, "id41"], [357, "id46"], [357, "id51"], [357, "id56"], [357, "id61"], [357, "id68"], [357, "id76"], [357, "id81"], [357, "id86"], [357, "id91"], [357, "id96"], [357, "id101"], [357, "id106"], [357, "id111"], [357, "id116"], [357, "id121"], [357, "id126"], [357, "id131"], [357, "id136"], [357, "id141"], [357, "id146"], [357, "id151"], [357, "id156"], [357, "id161"], [357, "id166"], [357, "id171"], [357, "id176"], [357, "id181"], [357, "id186"], [357, "id191"], [357, "id196"], [357, "id206"], [357, "id211"], [357, "id216"], [357, "id221"], [357, "id226"], [357, "id231"], [357, "id236"], [357, "id241"], [357, "id246"], [357, "id251"], [357, "id256"], [357, "id261"], [357, "id266"], [357, "id271"], [357, "id276"], [357, "id281"], [357, "id286"], [357, "id291"], [357, "id296"], [357, "id301"], [357, "id306"], [357, "id311"], [357, "id316"], [357, "id321"], [357, "id327"], [357, "id334"], [357, "id341"], [357, "id551"], [357, "id555"]], "Example: C-level intrinsics -> assembly": [[280, "example-c-level-intrinsics-assembly"]], "Examples": [[357, "id590"], [357, "id595"], [357, "id600"], [357, "id605"], [357, "id610"], [359, "examples"]], "Examples:": [[357, "examples"], [357, "id201"], [357, "id560"], [357, "id565"], [357, "id570"], [357, "id575"], [357, "id580"], [357, "id585"], [357, "id617"], [357, "id624"], [357, "id631"], [357, "id663"], [357, "id668"]], "Exception Handling Frame": [[332, "exception-handling-frame"]], "Exception Handling Intrinsics": [[332, "exception-handling-intrinsics"], [357, "exception-handling-intrinsics"]], "Exception Handling in LLVM": [[332, null]], "Exception Handling support on the target": [[332, "exception-handling-support-on-the-target"]], "Exception Handling using the Windows Runtime": [[332, "exception-handling-using-the-windows-runtime"]], "Exception Tables": [[332, "exception-tables"]], "Exceptions": [[355, "exceptions"]], "Executing PTX": [[367, "executing-ptx"]], "Executing the Tests": [[287, "executing-the-tests"]], "Existing alias analysis implementations and clients": [[277, "existing-alias-analysis-implementations-and-clients"]], "Expand": [[413, "expand"]], "Experimental Statepoint Intrinsics": [[357, "experimental-statepoint-intrinsics"]], "Experimental Vector Reduction Intrinsics": [[357, "experimental-vector-reduction-intrinsics"]], "Explicit Representation": [[398, "explicit-representation"]], "Exploiting external storage": [[323, "exploiting-external-storage"]], "Expression Code Generation": [[427, "expression-code-generation"], [437, "expression-code-generation"]], "Expression Data Type": [[274, "expression-data-type"]], "Expressions": [[274, "expressions"], [274, "amdgpu-synid-exp-conv"]], "Extending LLVM: Adding instructions, intrinsics, types, etc.": [[333, null]], "Extension Guide": [[323, "extending-the-library"]], "External Open Source Projects Using LLVM 8": [[388, "external-open-source-projects-using-llvm-8"]], "External Suites": [[407, "external-suites"]], "External Symbol Operands": [[362, "external-symbol-operands"]], "External Tutorials": [[443, "external-tutorials"]], "Extra Statistics to Further Diagnose Performance Issues": [[313, "extra-statistics-to-further-diagnose-performance-issues"]], "Extra files": [[409, "extra-files"]], "F": [[358, "f"]], "FAQ": [[359, "faq"]], "FFmpeg": [[386, "ffmpeg"]], "FILE FORMAT": [[299, "file-format"]], "FLAT": [[0, "flat"], [1, "flat"], [2, "flat"], [275, "flat"]], "FLAT Modifiers": [[273, "flat-modifiers"]], "FLOATING POINT OPTIONS": [[298, "floating-point-options"]], "FTensors": [[386, "ftensors"]], "FUNCTION_BLOCK Contents": [[281, "function-block-contents"]], "Fallible constructors": [[383, "fallible-constructors"]], "Fast-Math Flags": [[357, "fast-math-flags"]], "FastISel": [[401, "fastisel"]], "FastISel Replacement": [[343, "fastisel-replacement"]], "FaultMaps and implicit checks": [[336, null]], "Feature detection": [[386, "feature-detection"]], "Features": [[412, "features"]], "File Headers": [[291, "file-headers"]], "File ID Mapping": [[328, "file-id-mapping"]], "File ID:": [[328, "file-id"]], "File Info Substream": [[371, "file-info-substream"]], "File Layout": [[375, "file-layout"], [379, "file-layout"]], "File inclusion": [[403, "file-inclusion"]], "File scope entities": [[403, "file-scope-entities"]], "FileCheck - Flexible pattern matching file verifier": [[292, null]], "FileCheck Expressions": [[292, "filecheck-expressions"]], "FileCheck Pattern Matching Syntax": [[292, "filecheck-pattern-matching-syntax"]], "FileCheck Variables": [[292, "filecheck-variables"]], "Filing a report": [[390, "filing-a-report"]], "Filtering and Sorting Options": [[316, "filtering-and-sorting-options"]], "Final Preparations": [[361, "final-preparations"]], "Final Suspend": [[327, "final-suspend"]], "Finding call sites: a slightly more complex example": [[383, "finding-call-sites-a-slightly-more-complex-example"]], "Finding potential reviewers": [[382, "finding-potential-reviewers"]], "Fine grained debug info with DEBUG_TYPE and the -debug-only option": [[383, "fine-grained-debug-info-with-debug-type-and-the-debug-only-option"]], "FireHose": [[386, "firehose"]], "First Class Types": [[357, "first-class-types"]], "Fixed (preassigned) registers": [[289, "fixed-preassigned-registers"]], "Fixed Lookup": [[393, "fixed-lookup"]], "Fixed Point Arithmetic Intrinsics": [[357, "fixed-point-arithmetic-intrinsics"]], "Fixed Size Arrays": [[383, "fixed-size-arrays"]], "Fixed Width Integers": [[281, "fixed-width-value"]], "Fixing errors": [[393, "fixing-errors"]], "Flags that control numerical code": [[324, "flags-that-control-numerical-code"]], "Flame Graph Generation": [[416, "flame-graph-generation"]], "Flat Scratch": [[275, "flat-scratch"]], "Flight Data Recorder Mode": [[415, "flight-data-recorder-mode"]], "Floating Point Denorm Mode Enumeration Values": [[275, "amdgpu-amdhsa-floating-point-denorm-mode-enumeration-values-table"]], "Floating Point Rounding Mode Enumeration Values": [[275, "amdgpu-amdhsa-floating-point-rounding-mode-enumeration-values-table"]], "Floating-Point Environment": [[357, "floating-point-environment"]], "Floating-Point Inline Constants": [[274, "floating-point-inline-constants"]], "Floating-Point Literals": [[274, "floating-point-literals"]], "Floating-Point Numbers": [[274, "floating-point-numbers"]], "Floating-Point Types": [[357, "floating-point-types"]], "Flow Mapping": [[418, "flow-mapping"]], "Flow Sequence": [[418, "flow-sequence"]], "For developers to commit changes from Git": [[341, "for-developers-to-commit-changes-from-git"]], "Format Background": [[393, "format-background"]], "Format Grammar and Invariants": [[417, "format-grammar-and-invariants"]], "Format Lambdas Like Blocks Of Code": [[291, "format-lambdas-like-blocks-of-code"]], "Formatting strings (the formatv function)": [[383, "formatting-strings-the-formatv-function"]], "Fragile tests": [[409, "fragile-tests"]], "Frame Layout": [[289, "frame-layout"]], "FreePOOMA": [[386, "freepooma"]], "Frequently Asked Questions (FAQ)": [[335, null]], "Frequently-used CMake variables": [[287, "frequently-used-cmake-variables"]], "Front-end bugs": [[352, "front-end-bugs"]], "Full Code Listing": [[420, "full-code-listing"], [421, "full-code-listing"], [422, "full-code-listing"], [423, "full-code-listing"], [424, "full-code-listing"], [426, "full-code-listing"], [427, "full-code-listing"], [428, "full-code-listing"], [429, "full-code-listing"], [430, "full-code-listing"], [431, "id1"], [432, "full-code-listing"], [433, "full-code-listing"], [436, "full-code-listing"], [437, "full-code-listing"], [438, "full-code-listing"], [439, "full-code-listing"], [440, "full-code-listing"], [441, "id1"]], "Funclet Operand Bundles": [[357, "funclet-operand-bundles"]], "Funclet parent tokens": [[332, "funclet-parent-tokens"]], "Funclet transitions": [[332, "funclet-transitions"]], "Function Attributes": [[357, "function-attributes"]], "Function Code Generation": [[427, "function-code-generation"], [437, "function-code-generation"]], "Function Entry Counts": [[283, "function-entry-counts"]], "Function Flags": [[357, "function-flags"]], "Function Record Order": [[417, "function-record-order"]], "Function Records": [[417, "function-records"]], "Function Summary": [[357, "function-summary"]], "Function Type": [[357, "function-type"]], "Function calls": [[289, "function-calls"]], "Function record:": [[328, "function-record"]], "Function template": [[383, "function-template"]], "FunctionComparator::cmpType": [[366, "functioncomparator-cmptype"]], "FunctionComparator::compare(void)": [[366, "functioncomparator-compare-void"]], "Functions": [[357, "functions"], [433, "functions"]], "Functions Vs Macros": [[288, "functions-vs-macros"]], "Functions comparison": [[366, "functions-comparison"]], "Further Exploration": [[416, "further-exploration"]], "Further Help": [[384, "further-help"]], "Future Work": [[415, "future-work"]], "Future directions for the SelectionDAG": [[289, "future-directions-for-the-selectiondag"]], "Future extensions planned": [[414, "future-extensions-planned"]], "Fuzz Target": [[359, "fuzz-target"]], "Fuzzer Usage": [[359, "fuzzer-usage"]], "Fuzzer-friendly build mode": [[359, "fuzzer-friendly-build-mode"]], "Fuzzing LLVM libraries and tools": [[338, null]], "G": [[358, "g"]], "GC Transition Operand Bundles": [[357, "gc-transition-operand-bundles"]], "GC Transitions": [[398, "gc-transitions"]], "GCOV COMMAND": [[304, "gcov-command"]], "GDB Version": [[329, "gdb-version"]], "GENERAL OPTIONS": [[296, "general-options"], [298, "general-options"]], "Garbage Collected Stack Frames": [[434, "garbage-collected-stack-frames"], [442, "garbage-collected-stack-frames"]], "Garbage Collection Safepoints in LLVM": [[398, null]], "Garbage Collection with LLVM": [[339, null]], "Garbage Collector Strategy Names": [[357, "garbage-collector-strategy-names"]], "General": [[279, "general"], [417, "general"]], "General Assembly Syntax": [[334, "general-assembly-syntax"]], "General BackEnds": [[401, "general-backends"]], "General Information": [[383, "general-information"]], "General Intrinsics": [[357, "general-intrinsics"]], "Generating Test Output": [[408, "generating-test-output"]], "Generating safe points": [[339, "generating-safe-points"]], "Generic Algorithms": [[386, "generic-algorithms"]], "Generic Instructions": [[343, "generic-instructions"]], "Generic Machine IR": [[343, "generic-machine-ir"]], "Generic Random Fuzzing": [[338, "generic-random-fuzzing"]], "Generic Virtual Registers": [[343, "generic-virtual-registers"]], "Getting Started": [[342, "getting-started"], [359, "getting-started"], [368, "getting-started"]], "Getting Started Quickly (A Summary)": [[341, "getting-started-quickly-a-summary"]], "Getting Started with LLVM": [[341, "getting-started-with-llvm"]], "Getting Started with the LLVM System": [[341, null]], "Getting Started with the LLVM System using Microsoft Visual Studio": [[342, null]], "Getting Traces": [[416, "getting-traces"]], "Getting a Modern Host C++ Toolchain": [[341, "getting-a-modern-host-c-toolchain"]], "Global Attributes": [[357, "global-attributes"]], "Global Instruction Selection": [[343, null]], "Global Internal Table": [[275, "global-internal-table"]], "Global Structures Alias Analysis": [[412, "global-structures-alias-analysis"]], "Global Value Operands": [[362, "global-value-operands"]], "Global Value Summary Entry": [[357, "global-value-summary-entry"]], "Global Variable Summary": [[357, "global-variable-summary"]], "Global Variable and Function Addresses": [[357, "global-variable-and-function-addresses"]], "Global Variables": [[357, "global-variables"]], "GnuPG": [[386, "gnupg"]], "Goals and non-goals": [[339, "goals-and-non-goals"]], "Graph": [[386, "graph"]], "Graph500 reference implementations": [[386, "graph500-reference-implementations"]], "Graphics User Data": [[275, "graphics-user-data"]], "Grouping options into categories": [[323, "grouping-options-into-categories"]], "Guard widening:": [[357, "guard-widening"]], "Guidelines": [[395, "guidelines"]], "H": [[358, "h"]], "HCC": [[275, "hcc"]], "HOW LLVM-MCA WORKS": [[313, "how-llvm-mca-works"]], "HSA AQL Queue": [[275, "hsa-aql-queue"]], "HSA Code Object Directives": [[275, "hsa-code-object-directives"]], "HSA Signals": [[275, "hsa-signals"]], "Hacks": [[349, "hacks"]], "Half Precision Floating-Point Intrinsics": [[357, "half-precision-floating-point-intrinsics"]], "Handling two address instructions": [[289, "handling-two-address-instructions"]], "Hardware": [[325, "hardware"], [341, "hardware"], [342, "hardware"]], "HasGlobalAliases, removeUsers": [[366, "hasglobalaliases-removeusers"]], "Hash Tables": [[393, "hash-tables"]], "Header": [[275, "header"], [328, "header"]], "Header Layout": [[393, "header-layout"]], "Header Section": [[417, "header-section"]], "Heap Allocated Arrays": [[383, "heap-allocated-arrays"]], "Helpful Hints for Common Operations": [[383, "helpful-hints-for-common-operations"]], "Helpful Information About LLVM": [[326, "helpful-information-about-llvm"]], "Hex types": [[418, "hex-types"]], "Hexagon": [[325, "hexagon"]], "Hiding an option from -help output": [[323, "hiding-an-option-from-help-output"]], "High Level Interface": [[399, "high-level-interface"]], "High Level Overview": [[328, "high-level-overview"]], "High Level Structure": [[357, "high-level-structure"], [362, "high-level-structure"]], "High Performance Geometric Multigrid": [[386, "high-performance-geometric-multigrid"]], "High-level Design": [[387, "high-level-design"]], "Hopefully you won\u2019t need to be this deep": [[395, "hopefully-you-won-t-need-to-be-this-deep"]], "Host C++ Toolchain, both Compiler and Standard Library": [[341, "host-c-toolchain-both-compiler-and-standard-library"]], "How To Add Your Build Configuration To LLVM Buildbot Infrastructure": [[345, null]], "How To Build Clang and LLVM with Profile-Guided Optimizations": [[347, null]], "How To Build On ARM": [[346, null]], "How To Cross-Compile Clang/LLVM using Clang/LLVM": [[349, null]], "How To Release LLVM To The Public": [[350, null]], "How To Use Attributes": [[353, null]], "How To Use Instruction Mappings": [[354, null]], "How To Validate a New Release": [[389, null]], "How can I tell if my front-end is following the rules?": [[340, "how-can-i-tell-if-my-front-end-is-following-the-rules"]], "How does VLA addressing work with GEPs?": [[340, "how-does-vla-addressing-work-with-geps"]], "How good is my fuzzer?": [[359, "how-good-is-my-fuzzer"]], "How is GEP different from ptrtoint, arithmetic, and inttoptr?": [[340, "how-is-gep-different-from-ptrtoint-arithmetic-and-inttoptr"]], "How it works": [[397, "how-it-works"]], "How portable is the LLVM source code?": [[335, "how-portable-is-the-llvm-source-code"]], "How registers are represented in LLVM": [[289, "how-registers-are-represented-in-llvm"]], "How the packetization tables are generated and used": [[289, "how-the-packetization-tables-are-generated-and-used"]], "How to Cross Compile Compiler-rt Builtins For Arm": [[348, null]], "How to Submit a Patch": [[326, "how-to-submit-a-patch"]], "How to build it": [[344, "how-to-build-it"]], "How to do it?": [[366, "how-to-do-it"]], "How to implement cmpValues?": [[366, "how-to-implement-cmpvalues"]], "How to set up LLVM-style RTTI for your class hierarchy": [[351, null]], "How to submit an LLVM bug report": [[352, null]], "How to write a back-end": [[401, "how-to-write-a-back-end"]], "HydroBench": [[386, "hydrobench"]], "I": [[358, "i"]], "I Still Can\u2019t Find What I\u2019m Looking For": [[337, "i-still-can-t-find-what-i-m-looking-for"]], "I don\u2019t understand the GetElementPtr instruction. Help!": [[335, "i-don-t-understand-the-getelementptr-instruction-help"]], "IBM - Official manuals and docs": [[325, "ibm-official-manuals-and-docs"]], "IFuncs": [[357, "ifuncs"]], "IR Backwards Compatibility": [[330, "ir-backwards-compatibility"]], "IR Best Practices": [[337, "ir-best-practices"]], "IRC": [[419, "irc"]], "IRTranslator": [[343, "irtranslator"]], "Identifiers": [[357, "identifiers"]], "Identifying GC roots on the stack": [[339, "gcroot"]], "If Conversion": [[412, "if-conversion"]], "If \u201cF\u201d could not be overridden, fix it!": [[366, "if-f-could-not-be-overridden-fix-it"]], "If \u201cF\u201d may be overridden": [[366, "if-f-may-be-overridden"]], "If, ElseIf, Else": [[288, "if-elseif-else"]], "If/Then/Else": [[429, "if-then-else"], [439, "if-then-else"]], "Image and Samplers": [[275, "image-and-samplers"]], "Image processing": [[386, "image-processing"]], "Immediate Operands": [[362, "immediate-operands"]], "Implement a subclass of TargetInstrInfo": [[413, "implement-a-subclass-of-targetinstrinfo"]], "Implement a subclass of TargetRegisterInfo": [[413, "implement-a-subclass-of-targetregisterinfo"]], "Implementation": [[280, "implementation"]], "Implementation Details": [[392, "implementation-details"]], "Implementation:": [[357, "implementation"], [357, "id40"]], "Implementation: Getting from mass and scale to frequency": [[282, "implementation-getting-from-mass-and-scale-to-frequency"]], "Implementation: a series of DAGs": [[282, "implementation-a-series-of-dags"]], "Implementing Analysis Groups": [[414, "implementing-analysis-groups"]], "Implementing a Native Assembler": [[289, "implementing-a-native-assembler"]], "Implementing a collector plugin": [[339, "implementing-a-collector-plugin"]], "Implementing portable offsetof/sizeof": [[434, "implementing-portable-offsetof-sizeof"], [442, "implementing-portable-offsetof-sizeof"]], "Important Derived Types": [[383, "important-derived-types"]], "Important Public Members of the BasicBlock class": [[383, "important-public-members-of-the-basicblock-class"]], "Important Public Members of the Function": [[383, "important-public-members-of-the-function"]], "Important Public Members of the GlobalValue class": [[383, "important-public-members-of-the-globalvalue-class"]], "Important Public Members of the GlobalVariable class": [[383, "important-public-members-of-the-globalvariable-class"]], "Important Public Members of the Instruction class": [[383, "important-public-members-of-the-instruction-class"]], "Important Public Members of the Module class": [[383, "important-public-members-of-the-module-class"]], "Important Public Members of the User class": [[383, "important-public-members-of-the-user-class"]], "Important Public Members of the Value class": [[383, "important-public-members-of-the-value-class"]], "Important Public Methods": [[383, "important-public-methods"]], "Important Subclasses of Constant": [[383, "important-subclasses-of-constant"]], "Important Subclasses of the Instruction class": [[383, "important-subclasses-of-the-instruction-class"]], "Important and useful LLVM APIs": [[383, "important-and-useful-llvm-apis"]], "In what language is LLVM written?": [[335, "in-what-language-is-llvm-written"]], "Incorrect code generation": [[352, "incorrect-code-generation"]], "Incremental Development": [[330, "incremental-development"]], "Indent Code Consistently": [[291, "indent-code-consistently"]], "Index et tableaux": [[419, "indices-and-tables"]], "Indirect inputs and outputs": [[357, "indirect-inputs-and-outputs"]], "IndirectBrInst": [[283, "indirectbrinst"]], "Inductions": [[412, "inductions"]], "Initial Kernel Execution State": [[275, "initial-kernel-execution-state"]], "Initial SelectionDAG Construction": [[289, "initial-selectiondag-construction"]], "Initializing roots to null": [[339, "initializing-roots-to-null"]], "Inline Asm": [[289, "inline-asm"]], "Inline Asm Constraint String": [[357, "inline-asm-constraint-string"]], "Inline Asm Metadata": [[357, "inline-asm-metadata"]], "Inline Assembler Expressions": [[357, "inline-assembler-expressions"]], "Inline Constants": [[274, "inline-constants"]], "Input": [[418, "input"]], "Input constraints": [[357, "input-constraints"]], "Installing and Using": [[349, "installing-and-using"]], "InstrInfo": [[401, "instrinfo"]], "InstrMapping Class Overview": [[354, "instrmapping-class-overview"]], "Instruction Alias Processing": [[289, "instruction-alias-processing"]], "Instruction Aliases": [[289, "instruction-aliases"]], "Instruction Annotations": [[364, "instruction-annotations"]], "Instruction Dispatch": [[313, "instruction-dispatch"]], "Instruction Examples": [[275, "instruction-examples"]], "Instruction Flags": [[362, "instruction-flags"]], "Instruction Flow": [[313, "instruction-flow"]], "Instruction Issue": [[313, "instruction-issue"]], "Instruction Matching": [[289, "instruction-matching"]], "Instruction Operand Mapping": [[413, "instruction-operand-mapping"]], "Instruction Operand Name Mapping": [[413, "instruction-operand-name-mapping"]], "Instruction Operand Types": [[413, "instruction-operand-types"]], "Instruction Parsing": [[289, "instruction-parsing"]], "Instruction Reference": [[357, "instruction-reference"]], "Instruction Relation Mapping": [[413, "instruction-relation-mapping"]], "Instruction Scheduling": [[413, "instruction-scheduling"]], "Instruction Selection": [[289, "instruction-selection-section"]], "Instruction Selector": [[413, "instruction-selector"]], "Instruction Set": [[413, "instruction-set"]], "Instruction Threshold": [[416, "instruction-threshold"]], "Instruction encoding (arithmetic and jump)": [[289, "instruction-encoding-arithmetic-and-jump"]], "Instruction encoding (load, store)": [[289, "instruction-encoding-load-store"]], "Instruction folding": [[289, "instruction-folding"]], "Instruction naming": [[289, "instruction-naming"]], "InstructionSelect": [[343, "instructionselect"]], "Instructions": [[0, "instructions"], [1, "instructions"], [2, "instructions"], [271, "instructions"], [272, "instructions"], [275, "instructions"]], "Instrumentation Attributes": [[416, "instrumentation-attributes"]], "Instrumenting your C/C++/Objective-C Application": [[415, "instrumenting-your-c-c-objective-c-application"]], "Integer Inline Constants": [[274, "integer-inline-constants"]], "Integer Literals": [[274, "integer-literals"]], "Integer Numbers": [[274, "integer-numbers"]], "Integer Type": [[357, "integer-type"]], "Intel IA-32-specific Options": [[297, "intel-ia-32-specific-options"]], "Intended Usage": [[355, "intended-usage"]], "Interaction and relationship between User and Use objects": [[383, "interaction-and-relationship-between-user-and-use-objects"]], "Interfaces which may be specified": [[277, "interfaces-which-may-be-specified"]], "Internal vs External Storage": [[323, "internal-vs-external-storage"]], "Interoperability with std::error_code and ErrorOr": [[383, "interoperability-with-std-error-code-and-erroror"]], "Intrinsic": [[401, "intrinsic"]], "Intrinsic Functions": [[357, "intrinsic-functions"]], "Intrinsic Global Variables": [[357, "intrinsic-global-variables"]], "IntrinsicID Operands": [[362, "intrinsicid-operands"]], "Intrinsics": [[327, "intrinsics"], [396, "intrinsics"], [398, "intrinsics"]], "Introduction": [[0, "introduction"], [1, "introduction"], [2, "introduction"], [271, "introduction"], [275, "introduction"], [276, "introduction"], [277, "introduction"], [278, "introduction"], [279, "introduction"], [280, "introduction"], [282, "introduction"], [283, "introduction"], [287, "introduction"], [288, "introduction"], [289, "introduction"], [291, "introduction"], [323, "introduction"], [324, "introduction"], [327, "introduction"], [328, "introduction"], [330, "introduction"], [331, "introduction"], [332, "introduction"], [334, "introduction"], [338, "introduction"], [339, "introduction"], [340, "introduction"], [343, "introduction"], [344, "introduction"], [345, "introduction"], [346, "introduction"], [347, "introduction"], [348, "introduction"], [349, "introduction"], [350, "introduction"], [353, "introduction"], [354, "introduction"], [355, "introduction"], [356, "introduction"], [357, "introduction"], [359, "introduction"], [361, "introduction"], [362, "introduction"], [364, "introduction"], [365, "introduction"], [366, "introduction"], [367, "introduction"], [368, "introduction"], [371, "introduction"], [374, "introduction"], [379, "introduction"], [381, "introduction"], [383, "introduction"], [385, "introduction"], [388, "introduction"], [389, "introduction"], [391, "introduction"], [392, "introduction"], [393, "introduction"], [393, "id5"], [393, "id6"], [397, "introduction"], [401, "introduction"], [402, "introduction"], [403, "introduction"], [404, "introduction"], [405, "introduction"], [413, "introduction"], [415, "introduction"], [417, "introduction"]], "Introduction - Achieving consistency in how we deal with bug reports": [[284, "introduction-achieving-consistency-in-how-we-deal-with-bug-reports"]], "Introduction - Got bugs?": [[352, "introduction-got-bugs"]], "Introduction and Quickstart": [[395, "introduction-and-quickstart"]], "Introduction and Warning": [[333, "introduction-and-warning"]], "Introduction to SelectionDAGs": [[289, "introduction-to-selectiondags"]], "Introduction to YAML": [[418, "introduction-to-yaml"]], "Introduction to YAML I/O": [[418, "introduction-to-yaml-i-o"]], "Introduction \u2014 What is a pass?": [[414, "introduction-what-is-a-pass"]], "Invalidation and updating": [[365, "invalidation-and-updating"]], "Invoking clang": [[324, "invoking-clang"]], "Is Generally Reliable": [[289, "is-generally-reliable"]], "Itanium (ia64)": [[325, "itanium-ia64"]], "Itanium ABI Zero-cost Exception Handling": [[332, "itanium-abi-zero-cost-exception-handling"]], "Iterating over def-use & use-def chains": [[383, "iterating-over-def-use-use-def-chains"]], "Iterating over predecessors & successors of blocks": [[383, "iterating-over-predecessors-successors-of-blocks"]], "Iterating over the BasicBlock in a Function": [[383, "iterating-over-the-basicblock-in-a-function"]], "Iterating over the Instruction in a BasicBlock": [[383, "iterating-over-the-instruction-in-a-basicblock"]], "Iterating over the Instruction in a Function": [[383, "iterating-over-the-instruction-in-a-function"]], "Iterative Transformations": [[343, "iterative-transformations"]], "I\u2019d like to write a self-hosting LLVM compiler. How should I interface with the LLVM middle-end optimizers and back-end code generators?": [[335, "i-d-like-to-write-a-self-hosting-llvm-compiler-how-should-i-interface-with-the-llvm-middle-end-optimizers-and-back-end-code-generators"]], "I\u2019m writing a backend for a target which needs custom lowering for GEP. How do I do this?": [[340, "i-m-writing-a-backend-for-a-target-which-needs-custom-lowering-for-gep-how-do-i-do-this"]], "JIT API Basics": [[420, "jit-api-basics"]], "JIT Support": [[289, "jit-support"], [413, "jit-support"]], "JSON": [[401, "json"]], "Jump-table Index Operands": [[362, "jump-table-index-operands"]], "Kaleidoscope: Adding Debug Information": [[433, null]], "Kaleidoscope: Adding JIT and Optimizer Support": [[428, null], [438, null]], "Kaleidoscope: Code generation to LLVM IR": [[427, null], [437, null]], "Kaleidoscope: Compiling to Object Code": [[432, null]], "Kaleidoscope: Conclusion and other useful LLVM tidbits": [[434, null], [442, null]], "Kaleidoscope: Extending the Language: Control Flow": [[429, null], [439, null]], "Kaleidoscope: Extending the Language: Mutable Variables": [[431, null], [441, null]], "Kaleidoscope: Extending the Language: User-defined Operators": [[430, null], [440, null]], "Kaleidoscope: Implementing a Language with LLVM": [[443, "kaleidoscope-implementing-a-language-with-llvm"]], "Kaleidoscope: Implementing a Language with LLVM in Objective Caml": [[443, "kaleidoscope-implementing-a-language-with-llvm-in-objective-caml"]], "Kaleidoscope: Implementing a Parser and AST": [[426, null], [436, null]], "Kaleidoscope: Tutorial Introduction and the Lexer": [[425, null], [435, null]], "KaleidoscopeJIT": [[420, "kaleidoscopejit"]], "Keep \u00ab\u00a0Internal\u00a0\u00bb Headers Private": [[291, "keep-internal-headers-private"]], "Keeping LLVM Portable": [[399, "keeping-llvm-portable"]], "Kernel Descriptor": [[275, "kernel-descriptor"]], "Kernel Descriptor for GFX6-GFX9": [[275, "kernel-descriptor-for-gfx6-gfx9"], [275, "amdgpu-amdhsa-kernel-descriptor-gfx6-gfx9-table"]], "Kernel Dispatch": [[275, "kernel-dispatch"]], "Kernel Metadata": [[367, "kernel-metadata"]], "Kernel Prolog": [[275, "kernel-prolog"]], "Kicking the Tires": [[430, "kicking-the-tires"], [440, "kicking-the-tires"]], "Known Issues": [[388, "known-issues"]], "Known Problems": [[402, "known-problems"]], "Kokkos": [[386, "kokkos"]], "L": [[358, "l"]], "LDC - the LLVM-based D compiler": [[388, "ldc-the-llvm-based-d-compiler"]], "LDR and LD1": [[280, "ldr-and-ld1"]], "LEB128": [[328, "leb128"]], "LIT EXAMPLE TESTS": [[296, "lit-example-tests"]], "LIT INFRASTRUCTURE": [[296, "lit-infrastructure"]], "LLVM": [[275, "llvm"]], "LLVM 8.0.0 Release Notes": [[388, null]], "LLVM Alias Analysis Infrastructure": [[277, null]], "LLVM Atomic Instructions and Concurrency Guide": [[278, null]], "LLVM BackEnds": [[401, "llvm-backends"]], "LLVM Bitcode File Format": [[281, null]], "LLVM Block Frequency Terminology": [[282, null]], "LLVM Branch Weight Metadata": [[283, null]], "LLVM Bug Life Cycle": [[284, null]], "LLVM Code Coverage Mapping Format": [[328, null]], "LLVM Code Generation": [[332, "llvm-code-generation"]], "LLVM Coding Standards": [[291, null]], "LLVM Command Guide": [[295, null]], "LLVM Community Code of Conduct": [[290, null]], "LLVM Developer Policy": [[330, null]], "LLVM Extensions": [[334, null]], "LLVM Function Attribute": [[415, "llvm-function-attribute"]], "LLVM IR Blocks": [[281, "llvm-ir-blocks"]], "LLVM IR Encoding": [[281, "llvm-ir-encoding"]], "LLVM IR Features": [[339, "llvm-ir-features"]], "LLVM IR Lane ordering": [[280, "llvm-ir-lane-ordering"]], "LLVM IR Magic Number": [[281, "llvm-ir-magic-number"]], "LLVM IR Representation": [[328, "llvm-ir-representation"]], "LLVM IR for If/Then/Else": [[429, "llvm-ir-for-if-then-else"], [439, "llvm-ir-for-if-then-else"]], "LLVM IR for the \u201cfor\u201d Loop": [[429, "llvm-ir-for-the-for-loop"], [439, "llvm-ir-for-the-for-loop"]], "LLVM Language Reference Manual": [[357, null]], "LLVM Link Time Optimization: Design and Implementation": [[360, null]], "LLVM Optimization Passes": [[428, "llvm-optimization-passes"], [438, "llvm-optimization-passes"]], "LLVM PowerPC ABI": [[289, "llvm-powerpc-abi"]], "LLVM Programmer\u2019s Manual": [[383, null]], "LLVM Project Wrappers": [[288, "llvm-project-wrappers"]], "LLVM Testing Infrastructure Guide": [[409, null]], "LLVM Testing Infrastructure Organization": [[409, "llvm-testing-infrastructure-organization"]], "LLVM Tutorial: Table of Contents": [[443, null]], "LLVM bugpoint tool: design and usage": [[285, null]], "LLVM-specific variables": [[287, "llvm-specific-variables"]], "LLVMBuild Format Reference": [[356, "llvmbuild-format-reference"]], "LLVMBuild Guide": [[356, null]], "LLVM\u2019s Analysis and Transform Passes": [[381, null]], "LLVM\u2019s Optional Rich Disassembly Output": [[364, null]], "LOCAL CONFIGURATION FILES": [[296, "local-configuration-files"]], "Label Type": [[357, "label-type"]], "Lanai": [[325, "lanai"]], "Language Extensions and File Format Changes": [[393, "language-extensions-and-file-format-changes"]], "Language and Compiler Issues": [[291, "language-and-compiler-issues"]], "Language-Specific Optimizations": [[434, "language-specific-optimizations"], [442, "language-specific-optimizations"]], "Languages, Libraries, and Standards": [[291, "languages-libraries-and-standards"]], "Late Machine Code Optimizations": [[289, "late-machine-code-optimizations"]], "Lazy Compilation": [[422, "lazy-compilation"]], "Lazy Initialization with ManagedStatic": [[383, "lazy-initialization-with-managedstatic"]], "Leaks": [[359, "leaks"]], "Leftover Transformations": [[410, "leftover-transformations"]], "Legal": [[413, "legal"]], "Legalizer": [[343, "legalizer"]], "Lexer Extensions for If/Then/Else": [[429, "lexer-extensions-for-if-then-else"], [439, "lexer-extensions-for-if-then-else"]], "Lexer Extensions for the \u201cfor\u201d Loop": [[429, "lexer-extensions-for-the-for-loop"], [439, "lexer-extensions-for-the-for-loop"]], "Lexical Analysis": [[404, "lexical-analysis"]], "Libcalls: __atomic_*": [[278, "libcalls-atomic"]], "Libcalls: __sync_*": [[278, "libcalls-sync"]], "Library": [[391, "library"]], "Library Layering": [[291, "library-layering"]], "License": [[330, "license"], [335, "license"]], "Licensing": [[344, "licensing"]], "Lifetime": [[355, "lifetime"]], "Limitation": [[411, null]], "Limitations": [[277, "limitations"], [362, "limitations"]], "Limitations and Half Baked Ideas": [[398, "limitations-and-half-baked-ideas"]], "Linkage Types": [[357, "linkage-types"]], "Linking with Libdevice": [[367, "linking-with-libdevice"]], "Links": [[341, "links"], [342, "links"]], "Linux": [[279, "linux"], [325, "linux"]], "Linux Intel": [[279, "linux-intel"]], "Lists": [[288, "lists"]], "Lists of Lists": [[288, "lists-of-lists"]], "Literals": [[274, "literals"]], "Live In Registers": [[362, "live-in-registers"]], "Live Intervals": [[289, "live-intervals"]], "Live Intervals Analysis": [[289, "live-intervals-analysis"]], "Live Variable Analysis": [[289, "live-variable-analysis"]], "Living Downstream": [[385, "living-downstream"], [385, "id9"]], "Load/Store Unit and Memory Consistency Model": [[313, "load-store-unit-and-memory-consistency-model"]], "Local LLVM Configuration": [[341, "local-llvm-configuration"]], "Locating clobbers yourself": [[365, "locating-clobbers-yourself"]], "Location": [[286, "location"]], "Logarithmical search": [[366, "logarithmical-search"]], "Loop Distribution": [[410, "loop-distribution"]], "Loop Interchange": [[410, "loop-interchange"]], "Loop Scale": [[282, "loop-scale"]], "Loop Unrolling": [[410, "loop-unrolling"]], "Loop Vectorization and Interleaving": [[410, "loop-vectorization-and-interleaving"]], "Looping": [[403, "looping"]], "Loops": [[288, "loops"]], "Loops with unknown trip count": [[412, "loops-with-unknown-trip-count"]], "Low Level Type": [[343, "low-level-type"]], "Lowering Quality and Representation Overhead": [[398, "lowering-quality-and-representation-overhead"]], "Lowering:": [[357, "lowering"], [357, "id886"], [357, "id900"], [357, "id905"], [357, "id910"], [357, "id912"], [357, "id914"], [357, "id916"], [357, "id918"], [357, "id920"], [357, "id922"], [357, "id924"], [357, "id926"], [357, "id928"], [357, "id930"], [357, "id932"], [357, "id934"], [357, "id936"], [357, "id938"], [357, "id940"], [357, "id942"], [357, "id944"], [357, "id946"]], "M": [[358, "m"]], "M0": [[275, "m0"]], "MCJIT Design and Implementation": [[361, null]], "MCSymbol Operands": [[362, "mcsymbol-operands"]], "MERGE": [[317, "merge"]], "METADATA_ATTACHMENT Contents": [[281, "metadata-attachment-contents"]], "METADATA_BLOCK Contents": [[281, "metadata-block-contents"]], "MIMG": [[0, "mimg"], [1, "mimg"], [2, "mimg"]], "MIMG Modifiers": [[273, "mimg-modifiers"]], "MIPS": [[325, "mips"]], "MIR Serialization": [[343, "mir-serialization"]], "MIR Testing Guide": [[362, "mir-testing-guide"]], "MODULE_BLOCK Contents": [[281, "module-block-contents"]], "MODULE_CODE_ALIAS Record": [[281, "module-code-alias-record"]], "MODULE_CODE_ASM Record": [[281, "module-code-asm-record"]], "MODULE_CODE_DATALAYOUT Record": [[281, "module-code-datalayout-record"]], "MODULE_CODE_DEPLIB Record": [[281, "module-code-deplib-record"]], "MODULE_CODE_FUNCTION Record": [[281, "module-code-function-record"]], "MODULE_CODE_GCNAME Record": [[281, "module-code-gcname-record"]], "MODULE_CODE_GLOBALVAR Record": [[281, "module-code-globalvar-record"]], "MODULE_CODE_SECTIONNAME Record": [[281, "module-code-sectionname-record"]], "MODULE_CODE_TRIPLE Record": [[281, "module-code-triple-record"]], "MODULE_CODE_VERSION Record": [[281, "module-code-version-record"]], "MSF Container Options": [[316, "msf-container-options"]], "MSF File Options": [[316, "msf-file-options"]], "MUBUF": [[0, "mubuf"], [1, "mubuf"], [2, "mubuf"], [275, "mubuf"]], "MUBUF/MTBUF Modifiers": [[273, "mubuf-mtbuf-modifiers"]], "Mach-O Changes": [[393, "mach-o-changes"]], "MachSuite": [[386, "machsuite"]], "Machine Basic Blocks": [[362, "machine-basic-blocks"]], "Machine Code Emitter": [[413, "machine-code-emitter"]], "Machine Functions": [[362, "machine-functions"]], "Machine IR (MIR) Format Reference Manual": [[362, null]], "Machine Instructions": [[362, "machine-instructions"]], "Machine Instructions Format Reference": [[362, "machine-instructions-format-reference"]], "Machine Operands": [[362, "machine-operands"]], "Machine code description classes": [[289, "machine-code-description-classes"]], "Machine code in SSA form": [[289, "machine-code-in-ssa-form"]], "Machine-specific Assembly Syntax": [[334, "machine-specific-assembly-syntax"]], "MachineInstr Bundles": [[289, "machineinstr-bundles"]], "MachineVerifier": [[343, "machineverifier"]], "Magic Numbers": [[281, "magic-numbers"]], "Mailing Lists": [[419, "mailing-lists"]], "Maintainability": [[343, "maintainability"]], "Maintenance of cc-by-default settings": [[284, "maintenance-of-cc-by-default-settings"]], "Maintenance of products/components metadata": [[284, "maintenance-of-products-components-metadata"]], "Making a Major Change": [[330, "making-a-major-change"]], "Making and Submitting a Patch": [[330, "making-and-submitting-a-patch"]], "Making simple changes": [[383, "making-simple-changes"]], "Map-Like Containers (std::map, DenseMap, etc)": [[383, "map-like-containers-std-map-densemap-etc"]], "Mapping Region": [[328, "mapping-region"], [328, "id6"]], "Mapping Regions": [[328, "mapping-regions"]], "Mapping from instructions to functional units": [[289, "mapping-from-instructions-to-functional-units"]], "Mapping virtual registers to physical registers": [[289, "mapping-virtual-registers-to-physical-registers"]], "Mappings": [[418, "mappings"]], "Marking Functions as Kernels": [[367, "marking-functions-as-kernels"]], "Masked Vector Expanding Load and Compressing Store Intrinsics": [[357, "masked-vector-expanding-load-and-compressing-store-intrinsics"]], "Masked Vector Gather and Scatter Intrinsics": [[357, "masked-vector-gather-and-scatter-intrinsics"]], "Masked Vector Load and Store Intrinsics": [[357, "masked-vector-load-and-store-intrinsics"]], "Matching Newline Characters": [[292, "matching-newline-characters"]], "Matching a PDB to its executable": [[376, "matching-a-pdb-to-its-executable"]], "Mechanical Source Issues": [[291, "mechanical-source-issues"]], "Members of the Code of Conduct Advisory Committee": [[390, "members-of-the-code-of-conduct-advisory-committee"]], "Memory Access and Addressing Operations": [[357, "memory-access-and-addressing-operations"]], "Memory Dependence Analysis": [[277, "memory-dependence-analysis"]], "Memory Model": [[275, "memory-model"]], "Memory Model for Concurrent Operations": [[357, "memory-model-for-concurrent-operations"]], "Memory Scopes": [[275, "memory-scopes"]], "Memory Spaces": [[275, "memory-spaces"]], "Memory Use Markers": [[357, "memory-use-markers"]], "Memory in LLVM": [[431, "memory-in-llvm"], [441, "memory-in-llvm"]], "MemorySSA": [[365, null]], "MemorySSA Structure": [[365, "memoryssa-structure"]], "Merge Requests": [[350, "merge-requests"]], "MergeFunctions pass, how it works": [[366, null]], "MergeFunctions, main fields and runOnModule": [[366, "mergefunctions-main-fields-and-runonmodule"]], "Merging Patches": [[350, "merging-patches"]], "Merging process, mergeTwoFunctions": [[366, "merging-process-mergetwofunctions"]], "Metadata": [[357, "metadata"]], "Metadata Nodes and Metadata Strings": [[357, "metadata-nodes-and-metadata-strings"]], "Metadata Records": [[417, "metadata-records"]], "Metadata Type": [[357, "metadata-type"]], "Metadata on Loops": [[410, "metadata-on-loops"]], "Method information": [[291, "method-information"]], "Microscopic Details": [[291, "microscopic-details"]], "Microsoft Visual C++": [[287, "microsoft-visual-c"]], "Minimize Soft Errors": [[399, "minimize-soft-errors"]], "Minimizing docker image size": [[331, "minimizing-docker-image-size"]], "Minimum Required Compiler Version": [[388, "minimum-required-compiler-version"]], "Miscellaneous Attributes": [[362, "miscellaneous-attributes"]], "Miscellaneous Modifiers": [[273, "miscellaneous-modifiers"]], "Miscellaneous Options": [[316, "miscellaneous-options"]], "Miscellaneous Problems": [[414, "miscellaneous-problems"]], "Miscellaneous Resources": [[325, "miscellaneous-resources"]], "Miscellaneous Variables": [[384, "miscellaneous-variables"]], "Miscellaneous option modifiers": [[323, "miscellaneous-option-modifiers"]], "Miscompilation debugger": [[285, "miscompilation-debugger"]], "Miscompilations": [[352, "miscompilations"]], "Mixing References and Raw Pointers": [[398, "mixing-references-and-raw-pointers"]], "Mnemonic Aliases": [[289, "mnemonic-aliases"]], "Modeling Memory Effects": [[337, "modeling-memory-effects"]], "Modifications for other Targets": [[348, "modifications-for-other-targets"]], "Modifiers": [[271, "modifiers"], [272, "modifiers"], [273, "modifiers"], [275, "modifiers"]], "Modifiers (generic)": [[299, "modifiers-generic"]], "Modifiers (operation specific)": [[299, "modifiers-operation-specific"]], "Module & File Options": [[316, "module-file-options"]], "Module Flags Metadata": [[357, "module-flags-metadata"]], "Module Info Substream": [[371, "module-info-substream"]], "Module Options": [[316, "module-options"]], "Module Path Summary Entry": [[357, "module-path-summary-entry"]], "Module Structure": [[357, "module-structure"]], "Module-Level Inline Assembly": [[357, "module-level-inline-assembly"]], "Modules": [[288, "modules"]], "Modules, Functions and Macros": [[288, "modules-functions-and-macros"]], "Monorepo Preview": [[385, "monorepo-preview"]], "Monorepo Variant": [[385, "monorepo-variant"], [385, "workflow-monocheckout-nocommit"], [385, "workflow-monocheckout-multicommit"], [385, "workflow-mono-branching"], [385, "workflow-mono-bisecting"]], "Monotonic": [[278, "monotonic"]], "More Platforms": [[415, "more-platforms"]], "More examples": [[359, "more-examples"]], "Motivation": [[336, "motivation"], [396, "motivation"]], "Moved": [[400, "moved"], [406, "moved"]], "Moving LLVM Projects to GitHub": [[385, null]], "Multi-phase communication between libLTO and linker": [[360, "multi-phase-communication-between-liblto-and-linker"]], "Multi-stage PGO": [[276, "multi-stage-pgo"]], "Multi/Mono Hybrid Variant": [[385, "multi-mono-hybrid-variant"]], "Multiclass definitions and instances": [[403, "multiclass-definitions-and-instances"]], "Multiple Suspend Points": [[327, "multiple-suspend-points"]], "Multirepo Preview": [[385, "multirepo-preview"]], "Multirepo Variant": [[385, "multirepo-variant"], [385, "workflow-multicheckout-nocommit"], [385, "workflow-multicheckout-multicommit"], [385, "workflow-multi-branching"], [385, "workflow-multi-bisecting"]], "Multithreaded LLVM": [[414, "multithreaded-llvm"]], "Must, May, and No Alias Responses": [[277, "must-may-and-no-alias-responses"]], "Mutable Variables in Kaleidoscope": [[431, "mutable-variables-in-kaleidoscope"], [441, "mutable-variables-in-kaleidoscope"]], "Mutators and Input Generators": [[338, "mutators-and-input-generators"]], "N": [[358, "n"]], "NAS Parallel Benchmarks": [[386, "nas-parallel-benchmarks"]], "NVPTX": [[325, "nvptx"]], "NVPTX Intrinsics": [[367, "nvptx-intrinsics"]], "NWChem": [[386, "nwchem"]], "Name Accelerator Tables": [[393, "name-accelerator-tables"]], "Name Hash Tables": [[393, "name-hash-tables"]], "Name Types, Functions, Variables, and Enumerators Properly": [[291, "name-types-functions-variables-and-enumerators-properly"]], "Named Alternatives": [[323, "named-alternatives"]], "Named Metadata": [[357, "named-metadata"]], "Namespace Indentation": [[291, "namespace-indentation"]], "Narrative structure": [[366, "narrative-structure"]], "Native Object File Wrapper Format": [[281, "native-object-file-wrapper-format"]], "Nested Calls and Copy Elision": [[355, "nested-calls-and-copy-elision"]], "New Assignment Operator": [[431, "new-assignment-operator"], [441, "new-assignment-operator"]], "New DWARF Attributes": [[393, "new-dwarf-attributes"]], "New DWARF Constants": [[393, "new-dwarf-constants"]], "New DWARF Tags": [[393, "new-dwarf-tags"]], "New Targets": [[330, "new-targets"]], "New exception handling instructions": [[332, "new-exception-handling-instructions"]], "NewBuffer Records": [[417, "newbuffer-records"]], "NewCpuId Records": [[417, "newcpuid-records"]], "Next Steps": [[416, "next-steps"]], "No Duplicate Implementations": [[399, "no-duplicate-implementations"]], "No Exposed Data": [[399, "no-exposed-data"]], "No Exposed Functions": [[399, "no-exposed-functions"]], "No Normalization": [[418, "no-normalization"]], "No Unused Functionality": [[399, "no-unused-functionality"]], "No Virtual Methods": [[399, "no-virtual-methods"]], "No global aliases, replaceDirectCallers": [[366, "no-global-aliases-replacedirectcallers"]], "No target passed to clang": [[348, "no-target-passed-to-clang"]], "No throw Specifications": [[399, "no-throw-specifications"]], "Non-Goals": [[365, "non-goals"]], "Non-Integral Pointer Type": [[357, "non-integral-pointer-type"]], "Non-comprehensive list of changes in this release": [[388, "non-comprehensive-list-of-changes-in-this-release"]], "Non-power of 2 types": [[343, "non-power-of-2-types"]], "Normalization": [[418, "normalization"]], "NotAtomic": [[278, "notatomic"]], "Notation": [[0, "notation"], [1, "notation"], [2, "notation"], [271, "notation"], [271, "id1"], [271, "amdgpu-syn-instruction-operand-notation"], [271, "amdgpu-syn-instruction-modifier-notation"], [404, "notation"]], "Note Records": [[275, "note-records"]], "Notes On Building LLVM/Clang on ARM": [[346, "notes-on-building-llvm-clang-on-arm"]], "Numbers": [[274, "numbers"]], "O": [[358, "o"]], "O(log(N))": [[366, "o-log-n"]], "OPTIONS": [[292, "options"], [293, "options"], [294, "options"], [297, "options"], [299, "options"], [300, "options"], [301, "options"], [302, "options"], [303, "options"], [304, "options"], [304, "id5"], [304, "id8"], [304, "id11"], [305, "options"], [307, "options"], [308, "options"], [309, "options"], [310, "options"], [312, "options"], [313, "options"], [314, "options"], [315, "options"], [317, "options"], [317, "id5"], [318, "options"], [319, "options"], [320, "options"], [321, "options"], [322, "options"]], "OS X": [[325, "os-x"]], "OUTPUT OPTIONS": [[296, "output-options"]], "Object Loading": [[361, "object-loading"]], "Object lifetimes and scoping": [[393, "object-lifetimes-and-scoping"]], "Objective": [[286, "objective"]], "Objective-C ARC Runtime Intrinsics": [[357, "objective-c-arc-runtime-intrinsics"]], "Objective-C Extensions": [[393, "objective-c-extensions"]], "Objective-C Garbage Collection Module Flags Metadata": [[357, "objective-c-garbage-collection-module-flags-metadata"]], "Objects on the Stack": [[398, "objects-on-the-stack"]], "Obtaining Commit Access": [[330, "obtaining-commit-access"]], "Obtaining Help": [[324, "obtaining-help"]], "Official Testing": [[350, "official-testing"]], "On Managing Revision Numbers with Git": [[385, "on-managing-revision-numbers-with-git"]], "One or Multiple Repositories?": [[385, "one-or-multiple-repositories"]], "Ongoing Development Directions": [[412, "ongoing-development-directions"]], "Opaque Structure Types": [[357, "opaque-structure-types"]], "Opcode": [[271, "opcode"]], "Opcode Mnemonic": [[272, "opcode-mnemonic"]], "Open Dylan Compiler": [[388, "open-dylan-compiler"]], "OpenBenchmarking.org CPU / Processor Suite": [[386, "openbenchmarking-org-cpu-processor-suite"]], "OpenCL": [[275, "opencl"]], "OpenCL kernel implicit arguments appended for AMDHSA OS": [[275, "opencl-kernel-implicit-arguments-appended-for-amdhsa-os-table"]], "OpenCV": [[386, "opencv"]], "OpenMP 4.x SIMD Benchmarks": [[386, "openmp-4-x-simd-benchmarks"]], "Operand Bundles": [[357, "operand-bundles"]], "Operands": [[271, "operands"], [272, "operands"], [274, "operands"], [275, "operands"]], "Operands:": [[396, "operands"], [396, "id3"], [398, "operands"], [398, "id3"], [398, "id7"]], "Operations": [[299, "operations"]], "OptParserDefs": [[401, "optparserdefs"]], "Optimization outside atomic": [[278, "optimization-outside-atomic"]], "Optimizations": [[324, "optimizations"]], "Optimizing Modules using the IRTransformLayer": [[421, "optimizing-modules-using-the-irtransformlayer"]], "Option Attributes": [[323, "option-attributes"]], "Option Modifiers": [[323, "option-modifiers"]], "Optional Configuration Items": [[341, "optional-configuration-items"]], "Optional Debug Header Stream": [[371, "optional-debug-header-stream"]], "Options": [[316, "options"], [316, "id2"], [316, "id4"], [316, "id7"], [316, "id9"], [316, "id11"], [359, "options"], [391, "options"], [409, "options"]], "Options and variables": [[287, "options-and-variables"]], "Order of Keys": [[418, "order-of-keys"]], "Other": [[283, "other"]], "Other Design Notes": [[286, "other-design-notes"]], "Other Features": [[409, "other-features"]], "Other Intrinsics": [[367, "other-intrinsics"]], "Other Languages": [[291, "other-languages"]], "Other Map-Like Container Options": [[383, "other-map-like-container-options"]], "Other Operations": [[357, "other-operations"]], "Other Options": [[316, "other-options"]], "Other Sequential Container options": [[383, "other-sequential-container-options"]], "Other Set-Like Container Options": [[383, "other-set-like-container-options"]], "Other Things to Consider": [[337, "other-things-to-consider"]], "Other Types": [[288, "other-types"]], "Other Values": [[357, "other-values"]], "Other documents, collections, notes": [[325, "other-documents-collections-notes"]], "Other relevant lists": [[325, "other-relevant-lists"]], "Other useful AliasAnalysis methods": [[277, "other-useful-aliasanalysis-methods"]], "Other useful references": [[383, "other-useful-references"]], "Output": [[359, "output"], [418, "output"]], "Output constraints": [[357, "output-constraints"]], "Overloading Based on __host__ and __device__ Attributes": [[324, "overloading-based-on-host-and-device-attributes"]], "Overview": [[281, "overview"], [331, "overview"], [332, "overview"], [341, "overview"], [342, "overview"], [357, "id587"], [357, "id592"], [357, "id597"], [357, "id602"], [357, "id607"], [362, "overview"], [384, "overview"], [408, "overview"], [409, "overview"], [410, "overview"], [419, null]], "Overview & Core Concepts": [[398, "overview-core-concepts"]], "Overview of available features": [[339, "overview-of-available-features"]], "Overview of the Release Process": [[389, "overview-of-the-release-process"]], "Overview:": [[327, "overview"], [327, "id3"], [327, "id6"], [327, "id9"], [327, "id12"], [327, "id15"], [327, "id18"], [327, "id20"], [327, "id24"], [327, "id27"], [327, "id30"], [327, "id33"], [327, "id36"], [327, "id39"], [327, "id43"], [357, "overview"], [357, "id27"], [357, "id32"], [357, "id37"], [357, "id43"], [357, "id48"], [357, "id53"], [357, "id58"], [357, "id63"], [357, "id70"], [357, "id73"], [357, "id78"], [357, "id83"], [357, "id88"], [357, "id93"], [357, "id98"], [357, "id103"], [357, "id108"], [357, "id113"], [357, "id118"], [357, "id123"], [357, "id128"], [357, "id133"], [357, "id138"], [357, "id143"], [357, "id148"], [357, "id153"], [357, "id158"], [357, "id163"], [357, "id168"], [357, "id173"], [357, "id178"], [357, "id183"], [357, "id188"], [357, "id193"], [357, "id198"], [357, "id203"], [357, "id208"], [357, "id213"], [357, "id218"], [357, "id223"], [357, "id228"], [357, "id233"], [357, "id238"], [357, "id243"], [357, "id248"], [357, "id253"], [357, "id258"], [357, "id263"], [357, "id268"], [357, "id273"], [357, "id278"], [357, "id283"], [357, "id288"], [357, "id293"], [357, "id298"], [357, "id303"], [357, "id308"], [357, "id313"], [357, "id318"], [357, "id323"], [357, "id329"], [357, "id336"], [357, "id343"], [357, "id347"], [357, "id351"], [357, "id356"], [357, "id360"], [357, "id364"], [357, "id368"], [357, "id372"], [357, "id375"], [357, "id378"], [357, "id382"], [357, "id386"], [357, "id389"], [357, "id392"], [357, "id395"], [357, "id398"], [357, "id402"], [357, "id406"], [357, "id409"], [357, "id412"], [357, "id416"], [357, "id420"], [357, "id424"], [357, "id427"], [357, "id431"], [357, "id435"], [357, "id439"], [357, "id443"], [357, "id447"], [357, "id451"], [357, "id455"], [357, "id459"], [357, "id463"], [357, "id467"], [357, "id471"], [357, "id475"], [357, "id479"], [357, "id483"], [357, "id487"], [357, "id491"], [357, "id495"], [357, "id499"], [357, "id503"], [357, "id507"], [357, "id511"], [357, "id515"], [357, "id519"], [357, "id523"], [357, "id527"], [357, "id531"], [357, "id534"], [357, "id537"], [357, "id541"], [357, "id545"], [357, "id549"], [357, "id553"], [357, "id557"], [357, "id562"], [357, "id567"], [357, "id572"], [357, "id577"], [357, "id582"], [357, "id612"], [357, "id614"], [357, "id619"], [357, "id622"], [357, "id626"], [357, "id629"], [357, "id633"], [357, "id636"], [357, "id639"], [357, "id642"], [357, "id645"], [357, "id648"], [357, "id651"], [357, "id654"], [357, "id657"], [357, "id660"], [357, "id665"], [357, "id670"], [357, "id674"], [357, "id678"], [357, "id682"], [357, "id686"], [357, "id690"], [357, "id694"], [357, "id698"], [357, "id702"], [357, "id706"], [357, "id710"], [357, "id714"], [357, "id718"], [357, "id722"], [357, "id726"], [357, "id730"], [357, "id734"], [357, "id738"], [357, "id742"], [357, "id746"], [357, "id750"], [357, "id754"], [357, "id758"], [357, "id762"], [357, "id766"], [357, "id770"], [357, "id774"], [357, "id778"], [357, "id782"], [357, "id786"], [357, "id790"], [357, "id794"], [357, "id798"], [357, "id802"], [357, "id806"], [357, "id810"], [357, "id814"], [357, "id818"], [357, "id822"], [357, "id826"], [357, "id830"], [357, "id836"], [357, "id840"], [357, "id844"], [357, "id848"], [357, "id852"], [357, "id856"], [357, "id860"], [357, "id865"], [357, "id868"], [357, "id871"], [357, "id873"], [357, "id877"], [357, "id881"], [357, "id883"], [357, "id888"], [357, "id890"], [357, "id894"], [357, "id897"], [357, "id902"], [357, "id907"], [367, "overview"], [367, "id4"], [367, "id7"], [367, "id9"], [396, "overview"], [396, "id2"], [398, "overview"], [398, "id2"], [398, "id6"]], "P": [[358, "p"]], "PAL Compute Shader User Data Registers": [[275, "pal-compute-user-data-registers"]], "PAL Global Internal Table": [[275, "pal-git-table"]], "PAL Graphics Shader User Data Registers": [[275, "pal-graphics-user-data-registers"]], "PARAMATTR_BLOCK Contents": [[281, "paramattr-block-contents"]], "PARAMATTR_CODE_ENTRY Record": [[281, "paramattr-code-entry-record"]], "PARAMATTR_CODE_ENTRY_OLD Record": [[281, "paramattr-code-entry-old-record"]], "PARAMATTR_GROUP_BLOCK Contents": [[281, "paramattr-group-block-contents"]], "PARAMATTR_GRP_CODE_ENTRY Record": [[281, "paramattr-grp-code-entry-record"]], "PARSEC": [[386, "parsec"]], "PDB Stream Options": [[316, "pdb-stream-options"]], "PRE-DEFINED SUBSTITUTIONS": [[296, "pre-defined-substitutions"]], "PWM-benchmarking": [[386, "pwm-benchmarking"]], "Packet data access (BPF_ABS, BPF_IND)": [[289, "packet-data-access-bpf-abs-bpf-ind"]], "ParRes": [[386, "parres"]], "Parallel Fuzzing": [[359, "parallel-fuzzing"]], "Parameter Attributes": [[357, "parameter-attributes"]], "Parboil Benchmarks": [[386, "parboil-benchmarks"]], "Parser Basics": [[426, "parser-basics"], [436, "parser-basics"]], "Parser Extensions for If/Then/Else": [[429, "parser-extensions-for-if-then-else"], [439, "parser-extensions-for-if-then-else"]], "Parser Extensions for the \u201cfor\u201d Loop": [[429, "parser-extensions-for-the-for-loop"], [439, "parser-extensions-for-the-for-loop"]], "Parsing a list of options": [[323, "parsing-a-list-of-options"]], "Parsing the Rest": [[426, "parsing-the-rest"], [436, "parsing-the-rest"]], "Partial unrolling during vectorization": [[412, "partial-unrolling-during-vectorization"]], "Pass Ordering": [[337, "pass-ordering"]], "Pass Skipping Implementation": [[368, "pass-skipping-implementation"]], "Pass Statistics": [[414, "pass-statistics"]], "Pass classes and requirements": [[414, "pass-classes-and-requirements"]], "Pass registration": [[414, "pass-registration"]], "Pass-Specific Transformation Metadata": [[410, "pass-specific-transformation-metadata"]], "Passing functions and other callable objects": [[383, "passing-functions-and-other-callable-objects"]], "Passing strings (the StringRef and Twine classes)": [[383, "passing-strings-the-stringref-and-twine-classes"]], "PatLeaf Predicates": [[343, "patleaf-predicates"]], "Patents": [[330, "patents"]], "Performance": [[412, "performance"]], "Performance Tips for Frontend Authors": [[337, null]], "Personality Function": [[357, "personality-function"]], "Phase 1 : Read LLVM Bitcode Files": [[360, "phase-1-read-llvm-bitcode-files"]], "Phase 2 : Symbol Resolution": [[360, "phase-2-symbol-resolution"]], "Phase 3 : Optimize Bitcode Files": [[360, "phase-3-optimize-bitcode-files"]], "Phase 4 : Symbol Resolution after optimization": [[360, "phase-4-symbol-resolution-after-optimization"]], "Phi placement": [[365, "phi-placement"]], "Philosophy behind LLVM debugging information": [[393, "philosophy-behind-llvm-debugging-information"]], "Picking the Right Data Structure for a Task": [[383, "picking-the-right-data-structure-for-a-task"]], "PlaceSafepoints": [[398, "placesafepoints"]], "Placement of Object Code": [[384, "placement-of-object-code"]], "Platform-Specific Tests": [[409, "platform-specific-tests"]], "Pointer Aliasing Rules": [[357, "pointer-aliasing-rules"]], "Pointer Induction Variables": [[412, "pointer-induction-variables"]], "Pointer Type": [[357, "pointer-type"]], "Poison Values": [[357, "poison-values"]], "PolyBench": [[386, "polybench"]], "PolyMage": [[386, "polymage"]], "Porting GlobalISel to A New Target": [[343, "porting-globalisel-to-a-new-target"]], "Positional Arguments": [[323, "positional-options"]], "Possible solutions": [[366, "possible-solutions"]], "PowerPC": [[325, "powerpc"]], "Pragma loop hint directives": [[412, "pragma-loop-hint-directives"]], "Pre-Release Process": [[389, "pre-release-process"]], "Precision": [[365, "precision"]], "Predefined Symbols (-mattr=+code-object-v3)": [[275, "predefined-symbols-mattr-code-object-v3"]], "Predicate Operands": [[362, "predicate-operands"]], "Prefer Preincrement": [[291, "prefer-preincrement"]], "Prefer zext over sext when legal": [[337, "prefer-zext-over-sext-when-legal"]], "Prefix Data": [[357, "prefix-data"]], "Preliminaries": [[413, "preliminaries"]], "Preprocessing Support": [[404, "preprocessing-support"]], "Prerequisite Reading": [[413, "prerequisite-reading"]], "Prerequisites": [[324, "prerequisites"], [348, "prerequisites"]], "Present state": [[366, "present-state"]], "Primitives": [[281, "primitives"]], "Problem": [[280, "problem"]], "Processors": [[275, "processors"]], "Profile Guided Optimization": [[407, "profile-guided-optimization"]], "Program start": [[289, "program-start"]], "Programmatic Errors": [[383, "programmatic-errors"]], "Programming Documentation": [[419, "programming-documentation"]], "Progress and Future Work": [[343, "progress-and-future-work"]], "Project Organization": [[356, "project-organization"]], "Prolog/Epilog": [[289, "prolog-epilog"]], "Prolog/Epilog Code Insertion": [[289, "prolog-epilog-code-insertion"]], "Prologue Data": [[357, "prologue-data"]], "Promote": [[413, "promote"]], "Propagating and consuming errors based on types": [[383, "propagating-and-consuming-errors-based-on-types"]], "Properties of the LLVM IR": [[434, "properties-of-the-llvm-ir"], [442, "properties-of-the-llvm-ir"]], "Proposal": [[393, "proposal"]], "Provide a Virtual Method Anchor for Classes in Headers": [[291, "provide-a-virtual-method-anchor-for-classes-in-headers"]], "Pseudo-Counter:": [[328, "pseudo-counter"]], "PseudoLowering": [[401, "pseudolowering"]], "Publication": [[324, "publication"]], "Putting It All Together": [[432, "putting-it-all-together"]], "Q. Does libFuzzer Support Windows?": [[359, "q-does-libfuzzer-support-windows"]], "Q. So, what exactly this Fuzzer is good for?": [[359, "q-so-what-exactly-this-fuzzer-is-good-for"]], "Q. When libFuzzer is not a good solution for a problem?": [[359, "q-when-libfuzzer-is-not-a-good-solution-for-a-problem"]], "Q. Why doesn\u2019t libFuzzer use any of the LLVM support?": [[359, "q-why-doesn-t-libfuzzer-use-any-of-the-llvm-support"]], "Quality": [[330, "quality"]], "Questions about code generated by the demo page": [[335, "questions-about-code-generated-by-the-demo-page"]], "Questions?": [[290, "questions"]], "Quick Start": [[328, "quick-start"], [339, "quick-start"]], "Quick Start Guide": [[323, "quick-start-guide"]], "Quick Start \u2014 Writing hello world": [[414, "quick-start-writing-hello-world"]], "Quick start": [[287, "quick-start"], [409, "quick-start"]], "Quickstart": [[407, "quickstart"]], "Quickstart for using LTO with autotooled projects": [[344, "quickstart-for-using-lto-with-autotooled-projects"]], "R": [[358, "r"]], "RAJA Performance Suite": [[386, "raja-performance-suite"]], "REMAPPING FILE": [[305, "remapping-file"]], "REPORT COMMAND": [[304, "report-command"]], "RISC-V": [[325, "risc-v"]], "Random-access": [[366, "random-access"]], "Randomness": [[391, "randomness"]], "Rationale": [[340, "rationale"], [357, null]], "Read barrier: llvm.gcread": [[339, "read-barrier-llvm-gcread"]], "Read/write sub-project mirrors": [[385, "read-write-sub-project-mirrors"]], "Reading PTX Special Registers": [[367, "reading-ptx-special-registers"]], "Reading and writing references in the heap": [[339, "reading-and-writing-references-in-the-heap"]], "Recording On Stack Regions": [[398, "recording-on-stack-regions"]], "Recoverable Errors": [[383, "recoverable-errors"]], "Reductions": [[412, "reductions"]], "Reference Guide": [[323, "reference-guide"]], "Reference implementation": [[383, "reference-implementation"]], "References": [[339, "references"], [385, "references"], [387, "references"]], "Reflection Parameters": [[367, "reflection-parameters"]], "Refs": [[357, "refs"]], "RegBankSelect": [[343, "regbankselect"]], "RegBankSelect Modes": [[343, "regbankselect-modes"]], "Register Allocation": [[289, "register-allocator"]], "Register Bank": [[343, "register-bank"]], "Register Flags": [[362, "register-flags"]], "Register Mapping": [[275, "register-mapping"]], "Register Operands": [[362, "register-operands"]], "Register Set and Register Classes": [[413, "register-set-and-register-classes"]], "RegisterInfo": [[401, "registerinfo"]], "Registering dynamically loaded passes": [[414, "registering-dynamically-loaded-passes"]], "Registers": [[362, "id5"]], "Regression test structure": [[409, "regression-test-structure"]], "Regression tests": [[409, "regression-tests"], [409, "id1"]], "Related LLVM components": [[387, "related-llvm-components"]], "Release": [[278, "release"]], "Release Administrative Tasks": [[350, "release-administrative-tasks"]], "Release Final Tasks": [[350, "release-final-tasks"]], "Release Patch Rules": [[350, "release-patch-rules"]], "Release Process": [[350, "release-process"], [389, "release-process"]], "Release Qualification Criteria": [[350, "release-qualification-criteria"]], "Release Timeline": [[350, "release-timeline"]], "Relocatable Expressions": [[274, "relocatable-expressions"]], "Relocation Records": [[275, "relocation-records"]], "Relocations": [[334, "relocations"], [334, "id1"], [334, "id3"]], "Relocations Along Exceptional Edges": [[398, "relocations-along-exceptional-edges"]], "Replacing an Instruction with another Value": [[383, "replacing-an-instruction-with-another-value"]], "Replacing individual instructions": [[383, "replacing-individual-instructions"]], "Replacing multiple uses of Users and Values": [[383, "replacing-multiple-uses-of-users-and-values"]], "Reporting Guide": [[390, null]], "Reporting Regressions": [[350, "reporting-regressions"]], "Reporting bugs": [[284, "reporting-bugs"]], "Representation": [[357, "representation"]], "Representation of Pointers": [[277, "representation-of-pointers"]], "Representing Type Information using Type Metadata": [[411, "representing-type-information-using-type-metadata"]], "Representing X86 addressing modes in MachineInstrs": [[289, "representing-x86-addressing-modes-in-machineinstrs"]], "Requesting a review via the command line": [[382, "requesting-a-review-via-the-command-line"]], "Requesting a review via the web interface": [[382, "requesting-a-review-via-the-web-interface"]], "Required Variables": [[384, "required-variables"]], "Required components in the code generator": [[289, "required-components-in-the-code-generator"]], "Required initialization calls": [[277, "required-initialization-calls"]], "Required methods to override": [[277, "required-methods-to-override"]], "Requirements": [[341, "requirements"], [342, "requirements"], [409, "requirements"]], "Resampling": [[386, "resampling"]], "Resolving/Closing bugs": [[284, "resolving-closing-bugs"]], "Resources": [[343, "resources"]], "Response files": [[323, "response-files"]], "Restricted Operation Semantics": [[337, "restricted-operation-semantics"]], "Restrictions": [[332, "restrictions"]], "Resuming merge": [[359, "resuming-merge"]], "Returning Errors from error handlers": [[383, "returning-errors-from-error-handlers"]], "Reverse Iterators": [[412, "reverse-iterators"]], "Reviewing code with Phabricator": [[382, "reviewing-code-with-phabricator"]], "RewriteStatepointsForGC": [[398, "rewritestatepointsforgc"]], "Rodinia": [[386, "rodinia"]], "Rules": [[340, "rules"]], "Rules of Thumb": [[351, "rules-of-thumb"]], "Running": [[359, "running"]], "Running CMake and Building": [[349, "running-cmake-and-building"]], "Running Different Tests": [[408, "running-different-tests"]], "Running TableGen": [[405, "running-tablegen"]], "Running a pass with opt": [[414, "running-a-pass-with-opt"]], "Running the Kernel": [[367, "running-the-kernel"]], "Running the test-suite via LNT": [[407, "running-the-test-suite-via-lnt"]], "Running the test-suite via Makefiles (deprecated)": [[407, "running-the-test-suite-via-makefiles-deprecated"]], "Runtime Checks of Pointers": [[412, "runtime-checks-of-pointers"]], "Runtime Preemption Specifiers": [[357, "runtime-preemption-specifiers"]], "S": [[358, "s"]], "SEE ALSO": [[293, "see-also"], [294, "see-also"], [296, "see-also"], [297, "see-also"], [298, "see-also"], [299, "see-also"], [300, "see-also"], [301, "see-also"], [307, "see-also"], [308, "see-also"], [310, "see-also"], [314, "see-also"], [315, "see-also"]], "SEH filter expressions": [[332, "seh-filter-expressions"]], "SELECTION OPTIONS": [[296, "selection-options"]], "SGPR Register Set Up Order": [[275, "amdgpu-amdhsa-sgpr-register-set-up-order-table"]], "SHOW": [[317, "show"]], "SHOW COMMAND": [[304, "show-command"]], "SHT_LLVM_ADDRSIG Section (address-significance table)": [[334, "sht-llvm-addrsig-section-address-significance-table"]], "SHT_LLVM_CALL_GRAPH_PROFILE Section (Call Graph Profile)": [[334, "sht-llvm-call-graph-profile-section-call-graph-profile"]], "SJLJ Intrinsics": [[332, "sjlj-intrinsics"]], "SLAMBench": [[386, "slambench"]], "SMEM": [[1, "smem"], [2, "smem"]], "SMRD": [[0, "smrd"]], "SMRD/SMEM": [[275, "smrd-smem"]], "SMRD/SMEM Modifiers": [[273, "smrd-smem-modifiers"]], "SOP1": [[0, "sop1"], [1, "sop1"], [2, "sop1"], [275, "sop1"]], "SOP2": [[0, "sop2"], [1, "sop2"], [2, "sop2"], [275, "sop2"]], "SOPC": [[0, "sopc"], [1, "sopc"], [2, "sopc"], [275, "sopc"]], "SOPK": [[0, "sopk"], [1, "sopk"], [2, "sopk"]], "SOPP": [[0, "sopp"], [1, "sopp"], [2, "sopp"], [275, "sopp"]], "SPARC": [[325, "sparc"]], "SPEC CPU 2017": [[386, "spec-cpu-2017"]], "SPEC OMP2012": [[386, "spec-omp2012"]], "SSA-based Machine Code Optimizations": [[289, "ssa-based-machine-code-optimizations"]], "STANDARDS": [[299, "standards"]], "STRTAB_BLOCK Contents": [[281, "strtab-block-contents"]], "SUMMARY OUTPUT DEFINITIONS": [[301, "summary-output-definitions"]], "SYNOPSIS": [[292, "synopsis"], [293, "synopsis"], [294, "synopsis"], [296, "synopsis"], [297, "synopsis"], [298, "synopsis"], [299, "synopsis"], [300, "synopsis"], [301, "synopsis"], [302, "synopsis"], [303, "synopsis"], [304, "synopsis"], [304, "id1"], [304, "id3"], [304, "id6"], [304, "id9"], [305, "synopsis"], [306, "synopsis"], [307, "synopsis"], [308, "synopsis"], [309, "synopsis"], [310, "synopsis"], [311, "synopsis"], [312, "synopsis"], [313, "synopsis"], [314, "synopsis"], [315, "synopsis"], [317, "synopsis"], [317, "id1"], [317, "id3"], [318, "synopsis"], [319, "synopsis"], [320, "synopsis"], [321, "synopsis"], [322, "synopsis"]], "Safepoint Semantics & Verification": [[398, "safepoint-semantics-verification"]], "Safety Guarantees": [[434, "safety-guarantees"], [442, "safety-guarantees"]], "Sample Example": [[354, "sample-example"]], "Saturation Arithmetic Intrinsics": [[357, "saturation-arithmetic-intrinsics"]], "ScalarEnumerationTraits": [[418, "scalarenumerationtraits"]], "Scalars": [[418, "scalars"]], "Scatter / Gather": [[412, "scatter-gather"]], "Scope": [[288, "scope"]], "Scripting Overview": [[288, "scripting-overview"]], "Scripts": [[389, "scripts"]], "Scudo Hardened Allocator": [[391, null]], "Search Algorithms": [[386, "search-algorithms"]], "SearchableTables": [[401, "searchabletables"]], "Section Contribution Substream": [[371, "section-contribution-substream"]], "Section Map Substream": [[371, "section-map-substream"]], "Sections": [[275, "sections"]], "See Also": [[291, "see-also"]], "Segmented Stacks": [[289, "segmented-stacks"]], "Segmented Stacks in LLVM": [[392, null]], "Selecting an alternative from a set of possibilities": [[323, "selecting-an-alternative-from-a-set-of-possibilities"]], "Selecting \u201cbenchmarks\u201d": [[347, "selecting-benchmarks"]], "SelectionDAG Instruction Selection Process": [[289, "selectiondag-instruction-selection-process"]], "SelectionDAG Legalize Phase": [[289, "selectiondag-legalize-phase"]], "SelectionDAG LegalizeTypes Phase": [[289, "selectiondag-legalizetypes-phase"]], "SelectionDAG Optimization Phase: the DAG Combiner": [[289, "selectiondag-optimization-phase-the-dag-combiner"]], "SelectionDAG Rule Imports": [[343, "selectiondag-rule-imports"]], "SelectionDAG Scheduling and Formation Phase": [[289, "selectiondag-scheduling-and-formation-phase"]], "SelectionDAG Select Phase": [[289, "selectiondag-select-phase"]], "Self-contained Headers": [[291, "self-contained-headers"]], "Semantics": [[357, "semantics"]], "Semantics:": [[327, "semantics"], [327, "id5"], [327, "id8"], [327, "id11"], [327, "id14"], [327, "id17"], [327, "id22"], [327, "id26"], [327, "id29"], [327, "id32"], [327, "id35"], [327, "id38"], [327, "id41"], [327, "id45"], [357, "id25"], [357, "id29"], [357, "id34"], [357, "id39"], [357, "id45"], [357, "id50"], [357, "id55"], [357, "id60"], [357, "id67"], [357, "id71"], [357, "id75"], [357, "id80"], [357, "id85"], [357, "id90"], [357, "id95"], [357, "id100"], [357, "id105"], [357, "id110"], [357, "id115"], [357, "id120"], [357, "id125"], [357, "id130"], [357, "id135"], [357, "id140"], [357, "id145"], [357, "id150"], [357, "id155"], [357, "id160"], [357, "id165"], [357, "id170"], [357, "id175"], [357, "id180"], [357, "id185"], [357, "id190"], [357, "id195"], [357, "id200"], [357, "id205"], [357, "id210"], [357, "id215"], [357, "id220"], [357, "id225"], [357, "id230"], [357, "id235"], [357, "id240"], [357, "id245"], [357, "id250"], [357, "id255"], [357, "id260"], [357, "id265"], [357, "id270"], [357, "id275"], [357, "id280"], [357, "id285"], [357, "id290"], [357, "id295"], [357, "id300"], [357, "id305"], [357, "id310"], [357, "id315"], [357, "id320"], [357, "id326"], [357, "id332"], [357, "id339"], [357, "id345"], [357, "id349"], [357, "id353"], [357, "id358"], [357, "id362"], [357, "id366"], [357, "id370"], [357, "id373"], [357, "id376"], [357, "id380"], [357, "id384"], [357, "id387"], [357, "id390"], [357, "id393"], [357, "id396"], [357, "id400"], [357, "id404"], [357, "id407"], [357, "id410"], [357, "id414"], [357, "id418"], [357, "id422"], [357, "id425"], [357, "id429"], [357, "id433"], [357, "id437"], [357, "id441"], [357, "id445"], [357, "id449"], [357, "id453"], [357, "id457"], [357, "id461"], [357, "id465"], [357, "id469"], [357, "id473"], [357, "id477"], [357, "id481"], [357, "id485"], [357, "id489"], [357, "id493"], [357, "id497"], [357, "id501"], [357, "id505"], [357, "id509"], [357, "id513"], [357, "id517"], [357, "id521"], [357, "id525"], [357, "id529"], [357, "id532"], [357, "id535"], [357, "id539"], [357, "id543"], [357, "id547"], [357, "id559"], [357, "id564"], [357, "id569"], [357, "id574"], [357, "id579"], [357, "id584"], [357, "id589"], [357, "id594"], [357, "id599"], [357, "id604"], [357, "id609"], [357, "id616"], [357, "id662"], [357, "id667"], [357, "id672"], [357, "id676"], [357, "id680"], [357, "id684"], [357, "id688"], [357, "id692"], [357, "id696"], [357, "id700"], [357, "id704"], [357, "id708"], [357, "id712"], [357, "id716"], [357, "id720"], [357, "id724"], [357, "id728"], [357, "id732"], [357, "id736"], [357, "id740"], [357, "id744"], [357, "id748"], [357, "id752"], [357, "id756"], [357, "id760"], [357, "id764"], [357, "id768"], [357, "id772"], [357, "id776"], [357, "id780"], [357, "id784"], [357, "id788"], [357, "id792"], [357, "id796"], [357, "id800"], [357, "id804"], [357, "id808"], [357, "id812"], [357, "id816"], [357, "id820"], [357, "id824"], [357, "id828"], [357, "id832"], [357, "id838"], [357, "id842"], [357, "id846"], [357, "id850"], [357, "id854"], [357, "id858"], [357, "id862"], [357, "id875"], [357, "id879"], [357, "id885"], [357, "id892"], [357, "id895"], [357, "id899"], [357, "id904"], [357, "id909"], [367, "semantics"], [367, "id5"], [396, "semantics"], [396, "id4"], [398, "semantics"], [398, "id4"], [398, "id8"]], "Sending patches": [[341, "sending-patches"]], "Sentinels": [[383, "sentinels"]], "Sequence": [[418, "sequence"]], "Sequential Containers (std::vector, std::list, etc)": [[383, "sequential-containers-std-vector-std-list-etc"]], "SequentiallyConsistent": [[278, "sequentiallyconsistent"]], "Set-Like Containers (std::set, SmallSet, SetVector, etc)": [[383, "set-like-containers-std-set-smallset-setvector-etc"]], "Setjmp/Longjmp Exception Handling": [[332, "setjmp-longjmp-exception-handling"]], "Setting a breakpoint in your pass": [[414, "setting-a-breakpoint-in-your-pass"]], "Setting up the build environment": [[414, "setting-up-the-build-environment"]], "Shared Library": [[380, "shared-library"]], "Sibling call optimization": [[289, "sibling-call-optimization"]], "Sign up": [[382, "sign-up"]], "Signed VBRs": [[281, "signed-vbrs"]], "Simple Constants": [[357, "simple-constants"]], "Simple formatting": [[383, "simple-formatting"]], "Simplifications for Non-Relocating GCs": [[398, "simplifications-for-non-relocating-gcs"]], "Simplifying MIR files": [[362, "simplifying-mir-files"]], "Single Value Types": [[357, "single-value-types"]], "SmallBitVector": [[383, "smallbitvector"]], "Software": [[341, "software"], [342, "software"]], "Sommaire": [[351, "sommaire"]], "Source Code": [[335, "source-code"]], "Source Code Formatting": [[291, "source-code-formatting"]], "Source Code Width": [[291, "source-code-width"]], "Source Filename": [[357, "source-filename"]], "Source Languages": [[275, "source-languages"], [335, "source-languages"]], "Source Level Debugging with LLVM": [[393, null]], "Source Locations": [[433, "source-locations"]], "Source Range": [[328, "id9"]], "Source Range:": [[328, "source-range"]], "Source Text": [[275, "source-text"]], "Source Tree Layout": [[384, "source-tree-layout"]], "Spaces Before Parentheses": [[291, "spaces-before-parentheses"]], "Spanning Tree": [[386, "spanning-tree"]], "SparseBitVector": [[383, "sparsebitvector"]], "Special Case File": [[415, "special-case-file"]], "Specialised Arithmetic Intrinsics": [[357, "specialised-arithmetic-intrinsics"]], "Specialized Metadata Nodes": [[357, "specialized-metadata-nodes"]], "Specifying GC code generation: gc \"...\"": [[339, "specifying-gc-code-generation-gc"]], "Specifying interactions between passes": [[414, "specifying-interactions-between-passes"]], "Specifying positional options with hyphens": [[323, "specifying-positional-options-with-hyphens"]], "Sphinx Quickstart Template": [[395, null]], "Stable build": [[331, "stable-build"]], "Stack Map Format": [[396, "stack-map-format"], [398, "stack-map-format"]], "Stack Map Intrinsics": [[357, "stack-map-intrinsics"]], "Stack Map Section": [[396, "stack-map-section"]], "Stack Map Usage": [[396, "stack-map-usage"]], "Stack Probe Emission": [[334, "stack-probe-emission"], [334, "id4"]], "Stack Safety Analysis": [[397, null]], "Stack maps and patch points in LLVM": [[396, null]], "Standard Blocks": [[281, "standard-block"]], "Standard C Library Intrinsics": [[357, "standard-c-library-intrinsics"]], "Standard Hash Tables": [[393, "standard-hash-tables"]], "Standard library support": [[324, "standard-library-support"]], "Startup initialization": [[359, "startup-initialization"]], "Statut": [[382, "status"], [398, "status"]], "Stay Informed": [[330, "stay-informed"]], "Step #1 : Before The Move": [[385, "step-1-before-the-move"]], "Step #2 : Git Move": [[385, "step-2-git-move"]], "Step #3: Write Access Move": [[385, "step-3-write-access-move"]], "Step #4 : Post Move": [[385, "step-4-post-move"]], "Steps To Add Builder To LLVM Buildbot": [[345, "steps-to-add-builder-to-llvm-buildbot"]], "Straw Man Migration Plan": [[385, "straw-man-migration-plan"]], "Stream Header": [[371, "stream-header"], [376, "stream-header"]], "Stream Layout": [[374, "stream-layout"]], "Streams": [[379, "streams"]], "String-like containers": [[383, "string-like-containers"]], "StringError": [[383, "stringerror"]], "Strings": [[328, "strings"]], "Structure": [[407, "structure"]], "Structure Type": [[357, "structure-type"]], "Structure Types": [[357, "structure-types"]], "Structured Fuzzing of LLVM IR": [[338, "structured-fuzzing-of-llvm-ir"]], "Structured Fuzzing using libprotobuf-mutator": [[338, "structured-fuzzing-using-libprotobuf-mutator"]], "Style Issues": [[291, "style-issues"]], "Sub-Array of Regions": [[328, "sub-array-of-regions"]], "Subcommands": [[316, "subcommands"]], "Subregister Indices": [[362, "subregister-indices"]], "Substitutions": [[409, "substitutions"]], "Substreams": [[371, "substreams"]], "Subsystem Documentation": [[419, "subsystem-documentation"]], "Subtarget": [[401, "subtarget"]], "Subtarget Support": [[413, "subtarget-support"]], "Subversion and Arcanist (deprecated)": [[382, "subversion-and-arcanist-deprecated"]], "Successors": [[362, "successors"]], "Summary": [[280, "summary"], [316, "summary"], [316, "id1"], [316, "id3"], [316, "id6"], [316, "id8"], [316, "id10"], [340, "summary"]], "Support For Other Targets": [[343, "support-for-other-targets"]], "Support Library": [[399, null]], "Support for alternate stackmap formats": [[398, "support-for-alternate-stackmap-formats"]], "Supported Architectures": [[396, "supported-architectures"], [398, "supported-architectures"]], "Supported C++11 Language and Library Features": [[291, "supported-c-11-language-and-library-features"]], "Supported Constraint Code List": [[357, "supported-constraint-code-list"]], "Supported Instructions": [[283, "supported-instructions"]], "SwitchInst": [[283, "switchinst"]], "Symbol Options": [[316, "symbol-options"]], "Symbol Type Options": [[316, "symbol-type-options"]], "Symbols": [[274, "symbols"], [275, "symbols"]], "Synopsis": [[316, "synopsis"]], "Syntax": [[272, "syntax"], [272, "id1"], [272, "id2"], [274, "syntax"], [357, "id586"], [357, "id591"], [357, "id596"], [357, "id601"], [357, "id606"], [405, "syntax"]], "Syntax of AMDGPU Instruction Modifiers": [[273, null]], "Syntax of AMDGPU Instruction Operands": [[274, null]], "Syntax of GFX9 Instructions": [[2, null]], "Syntax:": [[327, "syntax"], [357, "syntax"], [357, "id26"], [357, "id31"], [357, "id36"], [357, "id42"], [357, "id47"], [357, "id52"], [357, "id57"], [357, "id62"], [357, "id69"], [357, "id72"], [357, "id77"], [357, "id82"], [357, "id87"], [357, "id92"], [357, "id97"], [357, "id102"], [357, "id107"], [357, "id112"], [357, "id117"], [357, "id122"], [357, "id127"], [357, "id132"], [357, "id137"], [357, "id142"], [357, "id147"], [357, "id152"], [357, "id157"], [357, "id162"], [357, "id167"], [357, "id172"], [357, "id177"], [357, "id182"], [357, "id187"], [357, "id192"], [357, "id197"], [357, "id202"], [357, "id207"], [357, "id212"], [357, "id217"], [357, "id222"], [357, "id227"], [357, "id232"], [357, "id237"], [357, "id242"], [357, "id247"], [357, "id252"], [357, "id257"], [357, "id262"], [357, "id267"], [357, "id272"], [357, "id277"], [357, "id282"], [357, "id287"], [357, "id292"], [357, "id297"], [357, "id302"], [357, "id307"], [357, "id312"], [357, "id317"], [357, "id322"], [357, "id328"], [357, "id335"], [357, "id342"], [357, "id346"], [357, "id350"], [357, "id355"], [357, "id359"], [357, "id363"], [357, "id367"], [357, "id371"], [357, "id374"], [357, "id377"], [357, "id381"], [357, "id385"], [357, "id388"], [357, "id391"], [357, "id394"], [357, "id397"], [357, "id401"], [357, "id405"], [357, "id408"], [357, "id411"], [357, "id415"], [357, "id419"], [357, "id423"], [357, "id426"], [357, "id430"], [357, "id434"], [357, "id438"], [357, "id442"], [357, "id446"], [357, "id450"], [357, "id454"], [357, "id458"], [357, "id462"], [357, "id466"], [357, "id470"], [357, "id474"], [357, "id478"], [357, "id482"], [357, "id486"], [357, "id490"], [357, "id494"], [357, "id498"], [357, "id502"], [357, "id506"], [357, "id510"], [357, "id514"], [357, "id518"], [357, "id522"], [357, "id526"], [357, "id530"], [357, "id533"], [357, "id536"], [357, "id540"], [357, "id544"], [357, "id548"], [357, "id552"], [357, "id556"], [357, "id561"], [357, "id566"], [357, "id571"], [357, "id576"], [357, "id581"], [357, "id611"], [357, "id613"], [357, "id618"], [357, "id621"], [357, "id625"], [357, "id628"], [357, "id632"], [357, "id635"], [357, "id638"], [357, "id641"], [357, "id644"], [357, "id647"], [357, "id650"], [357, "id653"], [357, "id656"], [357, "id659"], [357, "id664"], [357, "id669"], [357, "id673"], [357, "id677"], [357, "id681"], [357, "id685"], [357, "id689"], [357, "id693"], [357, "id697"], [357, "id701"], [357, "id705"], [357, "id709"], [357, "id713"], [357, "id717"], [357, "id721"], [357, "id725"], [357, "id729"], [357, "id733"], [357, "id737"], [357, "id741"], [357, "id745"], [357, "id749"], [357, "id753"], [357, "id757"], [357, "id761"], [357, "id765"], [357, "id769"], [357, "id773"], [357, "id777"], [357, "id781"], [357, "id785"], [357, "id789"], [357, "id793"], [357, "id797"], [357, "id801"], [357, "id805"], [357, "id809"], [357, "id813"], [357, "id817"], [357, "id821"], [357, "id825"], [357, "id829"], [357, "id833"], [357, "id835"], [357, "id839"], [357, "id843"], [357, "id847"], [357, "id851"], [357, "id855"], [357, "id859"], [357, "id863"], [357, "id866"], [357, "id869"], [357, "id872"], [357, "id876"], [357, "id880"], [357, "id882"], [357, "id887"], [357, "id889"], [357, "id893"], [357, "id896"], [357, "id901"], [357, "id906"], [357, "id911"], [357, "id913"], [357, "id915"], [357, "id917"], [357, "id919"], [357, "id921"], [357, "id923"], [357, "id925"], [357, "id927"], [357, "id929"], [357, "id931"], [357, "id933"], [357, "id935"], [357, "id937"], [357, "id939"], [357, "id941"], [357, "id943"], [357, "id945"], [367, "syntax"], [367, "id3"], [367, "id6"], [367, "id8"], [396, "syntax"], [396, "id1"], [398, "syntax"], [398, "id1"], [398, "id5"]], "Syntaxe": [[404, "syntax"]], "Syntaxe des instructions GFX7": [[0, null]], "Syntaxe des instructions GFX8": [[1, null]], "System Library": [[400, null]], "System VGPR Work-Item ID Enumeration Values": [[275, "amdgpu-amdhsa-system-vgpr-work-item-id-enumeration-values-table"]], "SystemZ": [[325, "systemz"]], "T": [[358, "t"]], "TARGET OPTIONS": [[298, "target-options"]], "TEST DISCOVERY": [[296, "test-discovery"], [296, "id7"]], "TEST RUN OUTPUT FORMAT": [[296, "test-run-output-format"]], "TEST STATUS RESULTS": [[296, "test-status-results"]], "TEST SUITES": [[296, "test-suites"]], "TSCWrap Records": [[417, "tscwrap-records"]], "TUTORIAL": [[292, "tutorial"]], "TVM": [[386, "tvm"]], "TYPE_BLOCK Contents": [[281, "type-block-contents"]], "TYPE_CODE_ARRAY Record": [[281, "type-code-array-record"]], "TYPE_CODE_DOUBLE Record": [[281, "type-code-double-record"]], "TYPE_CODE_FLOAT Record": [[281, "type-code-float-record"]], "TYPE_CODE_FP128 Record": [[281, "type-code-fp128-record"]], "TYPE_CODE_FUNCTION Record": [[281, "type-code-function-record"]], "TYPE_CODE_FUNCTION_OLD Record": [[281, "type-code-function-old-record"]], "TYPE_CODE_HALF Record": [[281, "type-code-half-record"]], "TYPE_CODE_INTEGER Record": [[281, "type-code-integer-record"]], "TYPE_CODE_LABEL Record": [[281, "type-code-label-record"]], "TYPE_CODE_METADATA Record": [[281, "type-code-metadata-record"]], "TYPE_CODE_NUMENTRY Record": [[281, "type-code-numentry-record"]], "TYPE_CODE_OPAQUE Record": [[281, "type-code-opaque-record"]], "TYPE_CODE_POINTER Record": [[281, "type-code-pointer-record"]], "TYPE_CODE_PPC_FP128 Record": [[281, "type-code-ppc-fp128-record"]], "TYPE_CODE_STRUCT_ANON Record": [[281, "type-code-struct-anon-record"]], "TYPE_CODE_STRUCT_NAME Record": [[281, "type-code-struct-name-record"]], "TYPE_CODE_STRUCT_NAMED Record": [[281, "type-code-struct-named-record"]], "TYPE_CODE_VECTOR Record": [[281, "type-code-vector-record"]], "TYPE_CODE_VOID Record": [[281, "type-code-void-record"]], "TYPE_CODE_X86_FP80 Record": [[281, "type-code-x86-fp80-record"]], "TYPE_CODE_X86_MMX Record": [[281, "type-code-x86-mmx-record"]], "Table of Contents": [[385, "table-of-contents"]], "TableGen": [[405, null]], "TableGen BackEnds": [[401, null]], "TableGen Deficiencies": [[402, null], [405, "tablegen-deficiencies"]], "TableGen Fundamentals": [[406, null]], "TableGen Language Introduction": [[403, null]], "TableGen Language Reference": [[404, null]], "TableGen backends": [[405, "tablegen-backends"]], "TableGen comments": [[403, "tablegen-comments"]], "TableGen primitives": [[403, "tablegen-primitives"]], "TableGen syntax": [[403, "tablegen-syntax"]], "TableGen values and expressions": [[403, "tablegen-values-and-expressions"]], "Tag the LLVM Final Release": [[350, "tag-the-llvm-final-release"]], "Tag:": [[328, "tag"]], "Tagging considerations": [[383, "tagging-considerations"]], "Tagging the LLVM Release Candidates": [[350, "tagging-the-llvm-release-candidates"]], "Tags": [[418, "tags"]], "Tail Calls": [[289, "tail-calls"]], "Tail call optimization": [[289, "tail-call-optimization"]], "Target Feature Matrix": [[289, "target-feature-matrix"]], "Target Features": [[275, "target-features"]], "Target Independence": [[434, "target-independence"], [442, "target-independence"]], "Target Intrinsics": [[367, "target-intrinsics"]], "Target JIT Info": [[413, "target-jit-info"]], "Target Machine": [[413, "target-machine"], [432, "target-machine"]], "Target Registration": [[413, "target-registration"]], "Target Specific Behaviour": [[334, "target-specific-behaviour"]], "Target Triple": [[357, "target-triple"]], "Target Triples": [[275, "target-triples"]], "Target description classes": [[289, "target-description-classes"]], "Target-dependent Index Operands": [[362, "target-dependent-index-operands"]], "Target-independent code generation algorithms": [[289, "target-independent-code-generation-algorithms"]], "Target-specific Implementation Notes": [[289, "target-specific-implementation-notes"]], "Terminator Instructions": [[357, "terminator-instructions"]], "Terminology and Notation": [[341, "terminology-and-notation"]], "Test Cases": [[330, "test-cases"]], "Test Suite": [[389, "test-suite"]], "Test-Suite Extentions": [[386, null]], "Testing": [[397, "testing"]], "Testing Addresses For Type Membership": [[411, "testing-addresses-for-type-membership"]], "Testing Debug Info Preservation in Optimizations": [[393, "testing-debug-info-preservation-in-optimizations"]], "Testing Individual Code Generation Passes": [[362, "testing-individual-code-generation-passes"]], "Testing compiler-rt builtins using qemu-arm": [[348, "testing-compiler-rt-builtins-using-qemu-arm"]], "The -aa-eval pass": [[277, "the-aa-eval-pass"]], "The -adce pass": [[277, "the-adce-pass"]], "The -argpromotion pass": [[277, "the-argpromotion-pass"]], "The -basicaa pass": [[277, "the-basicaa-pass"]], "The -ds-aa pass": [[277, "the-ds-aa-pass"]], "The -globalsmodref-aa pass": [[277, "the-globalsmodref-aa-pass"]], "The -gvn, -memcpyopt, and -dse passes": [[277, "the-gvn-memcpyopt-and-dse-passes"]], "The -licm pass": [[277, "the-licm-pass"]], "The -no-aa pass": [[277, "the-no-aa-pass"]], "The -print-alias-sets pass": [[277, "the-print-alias-sets-pass"]], "The -scev-aa pass": [[277, "the-scev-aa-pass"]], "The -steens-aa pass": [[277, "the-steens-aa-pass"]], "The AMDGPU backend": [[289, "the-amdgpu-backend"]], "The Abstract Syntax Tree (AST)": [[426, "the-abstract-syntax-tree-ast"], [436, "the-abstract-syntax-tree-ast"]], "The AliasSetTracker implementation": [[277, "the-aliassettracker-implementation"]], "The AnalysisUsage::addPreserved<> method": [[414, "the-analysisusage-addpreserved-method"]], "The AnalysisUsage::addRequired<> and AnalysisUsage::addRequiredTransitive<> methods": [[414, "the-analysisusage-addrequired-and-analysisusage-addrequiredtransitive-methods"]], "The Argument class": [[383, "the-argument-class"]], "The Basic Language": [[425, "the-basic-language"], [435, "the-basic-language"]], "The BasicBlock class": [[383, "the-basicblock-class"]], "The BasicBlockPass class": [[414, "the-basicblockpass-class"]], "The Basics": [[337, "the-basics"]], "The C++ Standard Template Library": [[383, "the-c-standard-template-library"]], "The CallGraphSCCPass class": [[414, "the-callgraphsccpass-class"]], "The CodeView Symbol Substream": [[374, "the-codeview-symbol-substream"]], "The Constant class and subclasses": [[383, "the-constant-class-and-subclasses"]], "The Contract of classof": [[351, "the-contract-of-classof"]], "The Core LLVM Class Hierarchy Reference": [[383, "the-core-llvm-class-hierarchy-reference"]], "The CoreCLR GC": [[339, "the-coreclr-gc"]], "The DataLayout class": [[289, "the-datalayout-class"]], "The Driver": [[426, "the-driver"], [436, "the-driver"]], "The Fault Map Section": [[336, "the-fault-map-section"]], "The FileCheck -check-prefix option": [[292, "the-filecheck-check-prefix-option"]], "The Free Block Map": [[375, "the-free-block-map"]], "The Function class": [[383, "the-function-class"]], "The FunctionPass class": [[414, "the-functionpass-class"]], "The GlobalValue class": [[383, "the-globalvalue-class"]], "The GlobalVariable class": [[383, "the-globalvariable-class"]], "The High-Level Issues": [[291, "the-high-level-issues"]], "The ImmutablePass class": [[414, "the-immutablepass-class"]], "The ImplicitNullChecks pass": [[336, "the-implicitnullchecks-pass"]], "The Instruction class": [[383, "the-instruction-class"]], "The Kernel": [[367, "the-kernel"]], "The LLVM Lexicon": [[358, null]], "The LLVM Target-Independent Code Generator": [[289, null]], "The LLVM gold plugin": [[344, null]], "The LLVM_DEBUG() macro and -debug option": [[383, "the-llvm-debug-macro-and-debug-option"]], "The Lexer": [[425, "the-lexer"], [435, "the-lexer"]], "The Location of LLVM Object Files": [[341, "the-location-of-llvm-object-files"]], "The Loop Vectorizer": [[412, "the-loop-vectorizer"]], "The LoopPass class": [[414, "the-looppass-class"]], "The Low-Level Issues": [[291, "the-low-level-issues"]], "The MCContext class": [[289, "the-mccontext-class"]], "The MCInst class": [[289, "the-mcinst-class"]], "The MCSection class": [[289, "the-mcsection-class"]], "The MCStreamer API": [[289, "the-mcstreamer-api"]], "The MCSymbol class": [[289, "the-mcsymbol-class"]], "The MSF Container": [[379, "the-msf-container"]], "The MSF File Format": [[375, null]], "The MachineBasicBlock class": [[289, "the-machinebasicblock-class"]], "The MachineFunction class": [[289, "the-machinefunction-class"]], "The MachineFunctionPass class": [[414, "the-machinefunctionpass-class"]], "The MachineInstr class": [[289, "the-machineinstr-class"]], "The Module Information Stream": [[374, null]], "The Module class": [[383, "the-module-class"]], "The ModulePass class": [[414, "the-modulepass-class"]], "The NVPTX backend": [[289, "the-nvptx-backend"]], "The Often Misunderstood GEP Instruction": [[340, null]], "The PDB DBI (Debug Info) Stream": [[371, null]], "The PDB File Format": [[379, null]], "The PDB Global Symbol Stream": [[372, null]], "The PDB Info Stream (aka the PDB Stream)": [[376, null]], "The PDB Public Symbol Stream": [[377, null]], "The PDB TPI Stream": [[378, null]], "The Planning Process and VPlan Roadmap": [[387, "the-planning-process-and-vplan-roadmap"]], "The PowerPC backend": [[289, "the-powerpc-backend"]], "The RegionPass class": [[414, "the-regionpass-class"]], "The SLP Vectorizer": [[412, "the-slp-vectorizer"]], "The SSA deconstruction phase": [[289, "the-ssa-deconstruction-phase"]], "The SelectionDAG Legalize Phase": [[413, "the-selectiondag-legalize-phase"]], "The Shadow Stack GC": [[339, "the-shadow-stack-gc"]], "The Statepoint Example GC": [[339, "the-statepoint-example-gc"]], "The Statistic class & -stats option": [[383, "the-statistic-class-stats-option"]], "The Stream Directory": [[375, "the-stream-directory"]], "The StringRef class": [[383, "the-stringref-class"]], "The Superblock": [[375, "the-superblock"]], "The TPI & IPI Hash Streams": [[373, null]], "The TableGen program": [[405, "the-tablegen-program"]], "The TableGen type system": [[403, "the-tablegen-type-system"]], "The TargetFrameLowering class": [[289, "the-targetframelowering-class"]], "The TargetInstrInfo class": [[289, "the-targetinstrinfo-class"]], "The TargetJITInfo class": [[289, "the-targetjitinfo-class"]], "The TargetLowering class": [[289, "the-targetlowering-class"]], "The TargetMachine class": [[289, "the-targetmachine-class"]], "The TargetRegisterInfo class": [[289, "the-targetregisterinfo-class"]], "The TargetSubtarget class": [[289, "the-targetsubtarget-class"]], "The Twine class": [[383, "the-twine-class"]], "The Type class and Derived Types": [[383, "the-type-class-and-derived-types"]], "The User and owned Use classes\u201d memory layout": [[383, "the-user-and-owned-use-classes-memory-layout"]], "The User class": [[383, "the-user-class"]], "The Value class": [[383, "the-value-class"]], "The ValueSymbolTable class": [[383, "the-valuesymboltable-class"]], "The X86 backend": [[289, "the-x86-backend"]], "The XRay stack tool": [[416, "the-xray-stack-tool"]], "The addEscapingUse method": [[277, "the-addescapinguse-method"]], "The alias method": [[277, "the-alias-method"]], "The cl::ConsumeAfter modifier": [[323, "the-cl-consumeafter-modifier"]], "The cl::OptionCategory class": [[323, "the-cl-optioncategory-class"]], "The cl::ParseCommandLineOptions function": [[323, "the-cl-parsecommandlineoptions-function"]], "The cl::ParseEnvironmentOptions function": [[323, "the-cl-parseenvironmentoptions-function"]], "The cl::SetVersionPrinter function": [[323, "the-cl-setversionprinter-function"]], "The cl::alias class": [[323, "the-cl-alias-class"]], "The cl::bits class": [[323, "the-cl-bits-class"]], "The cl::extrahelp class": [[323, "the-cl-extrahelp-class"]], "The cl::getRegisteredOptions function": [[323, "the-cl-getregisteredoptions-function"]], "The cl::list class": [[323, "the-cl-list-class"]], "The cl::opt class": [[323, "the-cl-opt-class"]], "The cmake try compile stage fails": [[348, "the-cmake-try-compile-stage-fails"]], "The copyValue method": [[277, "the-copyvalue-method"]], "The debugify utility": [[393, "the-debugify-utility"]], "The deleteValue method": [[277, "the-deletevalue-method"]], "The doFinalization() method": [[414, "the-dofinalization-method"], [414, "id2"]], "The doFinalization(CallGraph &) method": [[414, "the-dofinalization-callgraph-method"]], "The doFinalization(Function &) method": [[414, "the-dofinalization-function-method"]], "The doFinalization(Module &) method": [[414, "the-dofinalization-module-method"]], "The doInitialization(CallGraph &) method": [[414, "the-doinitialization-callgraph-method"]], "The doInitialization(Function &) method": [[414, "the-doinitialization-function-method"]], "The doInitialization(Loop *, LPPassManager &) method": [[414, "the-doinitialization-loop-lppassmanager-method"]], "The doInitialization(Module &) method": [[414, "the-doinitialization-module-method"]], "The doInitialization(Region *, RGPassManager &) method": [[414, "the-doinitialization-region-rgpassmanager-method"]], "The doesNotAccessMemory and  onlyReadsMemory methods": [[277, "the-doesnotaccessmemory-and-onlyreadsmemory-methods"]], "The extended Berkeley Packet Filter (eBPF) backend": [[289, "the-extended-berkeley-packet-filter-ebpf-backend"]], "The function_ref class template": [[383, "the-function-ref-class-template"]], "The getAnalysis<> and getAnalysisIfAvailable<> methods": [[414, "the-getanalysis-and-getanalysisifavailable-methods"]], "The getAnalysisUsage method": [[414, "the-getanalysisusage-method"]], "The getModRefInfo methods": [[277, "the-getmodrefinfo-methods"]], "The high-level design of the code generator": [[289, "the-high-level-design-of-the-code-generator"]], "The isa<>, cast<> and dyn_cast<> templates": [[383, "the-isa-cast-and-dyn-cast-templates"]], "The llvm-xray Tool": [[416, "the-llvm-xray-tool"]], "The pointsToConstantMemory method": [[277, "the-pointstoconstantmemory-method"]], "The print method": [[414, "the-print-method"]], "The releaseMemory method": [[414, "the-releasememory-method"]], "The replaceWithNewValue method": [[277, "the-replacewithnewvalue-method"]], "The runOnBasicBlock method": [[414, "the-runonbasicblock-method"]], "The runOnFunction method": [[414, "the-runonfunction-method"]], "The runOnLoop method": [[414, "the-runonloop-method"]], "The runOnMachineFunction(MachineFunction &MF) method": [[414, "the-runonmachinefunction-machinefunction-mf-method"]], "The runOnModule method": [[414, "the-runonmodule-method"]], "The runOnRegion method": [[414, "the-runonregion-method"]], "The runOnSCC method": [[414, "the-runonscc-method"]], "The walker": [[365, "the-walker"]], "The waymarking algorithm": [[383, "the-waymarking-algorithm"]], "The \u00ab\u00a0CHECK-COUNT:\u00a0\u00bb directive": [[292, "the-check-count-directive"]], "The \u00ab\u00a0CHECK-DAG:\u00a0\u00bb directive": [[292, "the-check-dag-directive"]], "The \u00ab\u00a0CHECK-EMPTY:\u00a0\u00bb directive": [[292, "the-check-empty-directive"]], "The \u00ab\u00a0CHECK-LABEL:\u00a0\u00bb directive": [[292, "the-check-label-directive"]], "The \u00ab\u00a0CHECK-NEXT:\u00a0\u00bb directive": [[292, "the-check-next-directive"]], "The \u00ab\u00a0CHECK-NOT:\u00a0\u00bb directive": [[292, "the-check-not-directive"]], "The \u00ab\u00a0CHECK-SAME:\u00a0\u00bb directive": [[292, "the-check-same-directive"]], "The \u00ab\u00a0MC\u00a0\u00bb Layer": [[289, "the-mc-layer"]], "The \u201cErlang\u201d and \u201cOcaml\u201d GCs": [[339, "the-erlang-and-ocaml-gcs"]], "The \u201cllvm.compiler.used\u201d Global Variable": [[357, "the-llvm-compiler-used-global-variable"]], "The \u201cllvm.global_ctors\u201d Global Variable": [[357, "the-llvm-global-ctors-global-variable"]], "The \u201cllvm.global_dtors\u201d Global Variable": [[357, "the-llvm-global-dtors-global-variable"]], "The \u201cllvm.used\u201d Global Variable": [[357, "the-llvm-used-global-variable"]], "ThinLTO Summary": [[357, "thinlto-summary"]], "Thread Local Storage Models": [[357, "thread-local-storage-models"]], "Threads and LLVM": [[383, "threads-and-llvm"]], "Threads and the JIT": [[383, "threads-and-the-jit"]], "Throw": [[332, "throw"]], "Throw Filters": [[332, "throw-filters"]], "Timeline View": [[313, "timeline-view"]], "Tips and Tricks": [[434, "tips-and-tricks"], [442, "tips-and-tricks"]], "Token Type": [[357, "token-type"]], "Top-Level Classes and Functions": [[323, "top-level-classes-and-functions"]], "Top-Level let": [[404, "top-level-let"]], "Toy example": [[359, "toy-example"]], "Trace Analysis Tools": [[415, "trace-analysis-tools"], [415, "id1"]], "Tracing CMP instructions": [[359, "tracing-cmp-instructions"]], "Trampoline Intrinsics": [[357, "trampoline-intrinsics"]], "Transform Passes": [[381, "transform-passes"]], "Transformation Metadata Structure": [[410, "transformation-metadata-structure"]], "Trap Handler ABI": [[275, "trap-handler-abi"], [275, "id38"]], "Treat Compiler Warnings Like Errors": [[291, "treat-compiler-warnings-like-errors"]], "Treating calls and invokes the same way": [[383, "treating-calls-and-invokes-the-same-way"]], "Triaging bugs": [[284, "triaging-bugs"]], "Triples": [[367, "triples"]], "Trivial Constant Folding": [[428, "trivial-constant-folding"], [438, "trivial-constant-folding"]], "Trophies": [[359, "trophies"]], "Troubleshooting": [[348, "troubleshooting"]], "Try/Catch": [[332, "try-catch"]], "Tuning/Configuration Options": [[297, "tuning-configuration-options"]], "Turn Predicate Loops into Predicate Functions": [[291, "turn-predicate-loops-into-predicate-functions"]], "Turning an iterator into a class pointer (and vice-versa)": [[383, "turning-an-iterator-into-a-class-pointer-and-vice-versa"]], "Tutorial Conclusion": [[434, "tutorial-conclusion"], [442, "tutorial-conclusion"]], "Tutorial Introduction": [[425, "tutorial-introduction"], [435, "tutorial-introduction"]], "Tutorial: A Simple Compute Kernel": [[367, "tutorial-a-simple-compute-kernel"]], "Tutorial: Linking with Libdevice": [[367, "tutorial-linking-with-libdevice"]], "Type ID Summary Entry": [[357, "type-id-summary-entry"]], "Type Metadata": [[411, null]], "Type Offsets for A, B, C, D": [[411, "id2"]], "Type Record Options": [[316, "type-record-options"], [316, "id5"]], "Type Server Substream": [[371, "type-server-substream"]], "Type System": [[357, "type-system"]], "Type and Size Suffices": [[272, "type-and-size-suffices"]], "Type deviation": [[66, null], [160, null], [254, null]], "TypeCheckedLoadConstVCalls": [[357, "typecheckedloadconstvcalls"]], "TypeCheckedLoadVCalls": [[357, "typecheckedloadvcalls"]], "TypeIdInfo": [[357, "typeidinfo"]], "TypeTestAssumeConstVCalls": [[357, "typetestassumeconstvcalls"]], "TypeTestAssumeVCalls": [[357, "typetestassumevcalls"]], "TypeTests": [[357, "typetests"]], "Types": [[328, "types"], [404, "types"]], "UNABBREV_RECORD Encoding": [[281, "unabbrev-record-encoding"]], "USING MARKERS TO ANALYZE SPECIFIC CODE BLOCKS": [[313, "using-markers-to-analyze-specific-code-blocks"]], "Umbrella Repository": [[385, "umbrella-repository"]], "Unary Operations": [[357, "unary-operations"]], "Unary Operators": [[274, "unary-operators"]], "Undefined Values": [[357, "undefined-values"]], "Unique types": [[418, "unique-types"]], "Unordered": [[278, "unordered"]], "Unpacking the LLVM Archives": [[341, "unpacking-the-llvm-archives"]], "Unroll-And-Jam": [[410, "unroll-and-jam"]], "Unspecified OS": [[275, "unspecified-os"]], "Update Documentation": [[350, "update-documentation"]], "Update LLVM Version": [[350, "update-llvm-version"]], "Update the LLVM Demo Page": [[350, "update-the-llvm-demo-page"]], "Update the LLVM Website": [[350, "update-the-llvm-website"]], "Updating Toolchain Requirements": [[330, "updating-toolchain-requirements"]], "Updating analysis results for transformations": [[277, "updating-analysis-results-for-transformations"]], "Usage": [[331, "usage"], [344, "usage"], [391, "usage"], [412, "usage"], [412, "id1"]], "Use Early Exits and continue to Simplify Code": [[291, "use-early-exits-and-continue-to-simplify-code"]], "Use Optimization": [[365, "use-optimization"]], "Use Standard C Headers": [[399, "use-standard-c-headers"]], "Use Standard C++ Headers": [[399, "id1"]], "Use auto Type Deduction to Make Code More Readable": [[291, "use-auto-type-deduction-to-make-code-more-readable"]], "Use of allocas": [[337, "use-of-allocas"]], "Use of class and struct Keywords": [[291, "use-of-class-and-struct-keywords"]], "Use range-based for loops wherever possible": [[291, "use-range-based-for-loops-wherever-possible"]], "Use raw_ostream": [[291, "use-raw-ostream"]], "Use-list Order Directives": [[357, "use-list-order-directives"]], "Useful Built-in Commands": [[288, "useful-built-in-commands"]], "User Context Data": [[418, "user-context-data"]], "User Data": [[275, "user-data"]], "User Guide for AMDGPU Backend": [[275, null]], "User Guide for NVPTX Back-end": [[367, null]], "User Guides": [[419, "user-guides"]], "User-defined Binary Operators": [[430, "user-defined-binary-operators"], [440, "user-defined-binary-operators"]], "User-defined Local Variables": [[431, "user-defined-local-variables"], [441, "user-defined-local-variables"]], "User-defined Operators: the Idea": [[430, "user-defined-operators-the-idea"], [440, "user-defined-operators-the-idea"]], "User-defined Unary Operators": [[430, "user-defined-unary-operators"], [440, "user-defined-unary-operators"]], "User-supplied mutators": [[359, "user-supplied-mutators"]], "Using -opt-bisect-limit to debug optimization errors": [[368, null]], "Using ARM NEON instructions in big endian mode": [[280, null]], "Using ExitOnError to simplify tool code": [[383, "using-exitonerror-to-simplify-tool-code"]], "Using GDB with dynamically loaded passes": [[414, "using-gdb-with-dynamically-loaded-passes"]], "Using RegisterAnalysisGroup": [[414, "using-registeranalysisgroup"]], "Using TableGen for target description": [[289, "using-tablegen-for-target-description"]], "Using XRay": [[415, "using-xray"]], "Using a Different Class on Host/Device": [[324, "using-a-different-class-on-host-device"]], "Using alias analysis results": [[277, "using-alias-analysis-results"]], "Using cantFail to simplify safe callsites": [[383, "using-cantfail-to-simplify-safe-callsites"]], "Using debugify": [[393, "using-debugify"]], "Using existing registries": [[414, "using-existing-registries"]], "Using gc.statepoint": [[339, "using-gc-statepoint"]], "Using llvm.gcwrite": [[339, "using-llvm-gcwrite"]], "Using the AliasAnalysis interface directly": [[277, "using-the-aliasanalysis-interface-directly"]], "Using the AliasSetTracker class": [[277, "using-the-aliassettracker-class"]], "Using the C and C++ Front Ends": [[335, "using-the-c-and-c-front-ends"]], "Using the MachineInstrBuilder.h functions": [[289, "using-the-machineinstrbuilder-h-functions"]], "Using the MemoryDependenceAnalysis Pass": [[277, "using-the-memorydependenceanalysis-pass"]], "Using the script": [[347, "using-the-script"]], "Utilities for Writing Fuzzers": [[338, "utilities-for-writing-fuzzers"]], "Utility Macros": [[418, "utility-macros"]], "Utility Passes": [[381, "utility-passes"]], "Utility Passes for Safepoint Insertion": [[398, "utility-passes-for-safepoint-insertion"]], "VALU": [[275, "valu"]], "VALUE_SYMTAB_BLOCK Contents": [[281, "value-symtab-block-contents"]], "VGPR Register Set Up Order": [[275, "amdgpu-amdhsa-vgpr-register-set-up-order-table"]], "VINTRP": [[0, "vintrp"], [1, "vintrp"], [2, "vintrp"]], "VINTRP Modifiers": [[273, "vintrp-modifiers"]], "VLIW Packetizer": [[289, "vliw-packetizer"]], "VOP1": [[0, "vop1"], [1, "vop1"], [2, "vop1"]], "VOP1/VOP2 DPP Modifiers": [[273, "vop1-vop2-dpp-modifiers"]], "VOP1/VOP2/VOPC SDWA Modifiers": [[273, "vop1-vop2-vopc-sdwa-modifiers"]], "VOP1/VOP2/VOPC SDWA Operand Modifiers": [[273, "vop1-vop2-vopc-sdwa-operand-modifiers"]], "VOP2": [[0, "vop2"], [1, "vop2"], [2, "vop2"]], "VOP3": [[0, "vop3"], [1, "vop3"], [2, "vop3"]], "VOP3 Modifiers": [[273, "vop3-modifiers"]], "VOP3 Operand Modifiers": [[273, "vop3-operand-modifiers"]], "VOP3P": [[2, "vop3p"]], "VOP3P Modifiers": [[273, "vop3p-modifiers"]], "VOP3P V_MAD_MIX Modifiers": [[273, "vop3p-v-mad-mix-modifiers"]], "VOPC": [[0, "vopc"], [1, "vopc"], [2, "vopc"]], "VP": [[357, "vp"]], "Validation": [[418, "validation"]], "Value Profile": [[359, "value-profile"]], "Value definitions": [[403, "value-definitions"]], "Values": [[404, "values"]], "Variable Argument Handling Intrinsics": [[357, "variable-argument-handling-intrinsics"]], "Variable Length Arrays": [[334, "variable-length-arrays"]], "Variable Sized Allocas": [[392, "variable-sized-allocas"]], "Variable Width Integers": [[281, "variable-width-value"]], "Variables": [[433, "variables"]], "Variables for Building Libraries": [[384, "variables-for-building-libraries"]], "Variables for Building Programs": [[384, "variables-for-building-programs"]], "Variables for Building Subdirectories": [[384, "variables-for-building-subdirectories"]], "Variables, Types, and Scope": [[288, "variables-types-and-scope"]], "Vector Operations": [[357, "vector-operations"]], "Vector Type": [[357, "vector-type"]], "Vector of pointers:": [[357, "vector-of-pointers"]], "Vector types": [[343, "vector-types"]], "Vectorization Plan": [[387, null]], "Vectorization Workflow": [[387, "vectorization-workflow"]], "Vectorization of Mixed Types": [[412, "vectorization-of-mixed-types"]], "Vectorization of function calls": [[412, "vectorization-of-function-calls"]], "Versioning LICM": [[410, "versioning-licm"]], "Versions": [[359, "versions"]], "Viewing graphs while debugging code": [[383, "viewing-graphs-while-debugging-code"]], "Virtual Table Layout for A, B, C, D": [[411, "id1"]], "Visibility Styles": [[357, "visibility-styles"]], "Void Type": [[357, "void-type"]], "Volatile Memory Accesses": [[357, "volatile-memory-accesses"]], "WallClockTime Records": [[417, "wallclocktime-records"]], "Ways to Contribute": [[326, "ways-to-contribute"]], "Weighted Input": [[317, "weighted-input"]], "Well-Formedness": [[357, "well-formedness"]], "What API do I use to store a value to one of the virtual registers in LLVM IR\u2019s SSA representation?": [[335, "what-api-do-i-use-to-store-a-value-to-one-of-the-virtual-registers-in-llvm-ir-s-ssa-representation"]], "What About Branches and Merges?": [[385, "what-about-branches-and-merges"]], "What About Commit Emails?": [[385, "what-about-commit-emails"]], "What PassManager does": [[414, "what-passmanager-does"]], "What This Proposal is Not About": [[385, "what-this-proposal-is-not-about"]], "What effect do address spaces have on GEPs?": [[340, "what-effect-do-address-spaces-have-on-geps"]], "What happens after you file a report?": [[390, "what-happens-after-you-file-a-report"]], "What happens if a GEP computation overflows?": [[340, "what-happens-if-a-gep-computation-overflows"]], "What happens if an array index is out of bounds?": [[340, "what-happens-if-an-array-index-is-out-of-bounds"]], "What is Garbage Collection?": [[339, "what-is-garbage-collection"]], "What is dereferenced by GEP?": [[340, "what-is-dereferenced-by-gep"]], "What is the first index of the GEP instruction?": [[340, "what-is-the-first-index-of-the-gep-instruction"]], "What is this llvm.global_ctors and _GLOBAL__I_a... stuff that happens when I #include <iostream>?": [[335, "what-is-this-llvm-global-ctors-and-global-i-a-stuff-that-happens-when-i-include-iostream"]], "What is this \u00ab\u00a0undef\u00a0\u00bb thing that shows up in my code?": [[335, "what-is-this-undef-thing-that-shows-up-in-my-code"]], "What should I know to be able to follow along with this document?": [[366, "what-should-i-know-to-be-able-to-follow-along-with-this-document"]], "What source languages are supported?": [[335, "what-source-languages-are-supported"]], "What support is there for a higher level source language constructs for building a compiler?": [[335, "what-support-is-there-for-a-higher-level-source-language-constructs-for-building-a-compiler"]], "What to do when bugpoint isn\u2019t enough": [[285, "what-to-do-when-bugpoint-isn-t-enough"]], "What we associate in cmpValues?": [[366, "what-we-associate-in-cmpvalues"]], "What\u2019s an uglygep?": [[340, "what-s-an-uglygep"]], "When to specify alignment": [[337, "when-to-specify-alignment"]], "Where did all of my code go??": [[335, "where-did-all-of-my-code-go"]], "Which image should I choose?": [[331, "which-image-should-i-choose"]], "Whitespace": [[291, "whitespace"]], "Why Git, and Why GitHub?": [[385, "why-git-and-why-github"]], "Why Git?": [[385, "why-git"]], "Why GitHub?": [[385, "why-github"]], "Why Move At All?": [[385, "why-move-at-all"]], "Why do GEP x,1,0,0 and GEP x,1 alias?": [[340, "why-do-gep-x-1-0-0-and-gep-x-1-alias"]], "Why do struct member indices always use i32?": [[340, "why-do-struct-member-indices-always-use-i32"]], "Why does instcombine + simplifycfg turn a call to a function with a mismatched calling convention into \u00ab\u00a0unreachable\u00a0\u00bb? Why not make the verifier reject it?": [[335, "why-does-instcombine-simplifycfg-turn-a-call-to-a-function-with-a-mismatched-calling-convention-into-unreachable-why-not-make-the-verifier-reject-it"]], "Why don\u2019t GEP x,0,0,1 and GEP x,1 alias?": [[340, "why-don-t-gep-x-0-0-1-and-gep-x-1-alias"]], "Why is GEP designed this way?": [[340, "why-is-gep-designed-this-way"]], "Why is the extra 0 index required?": [[340, "why-is-the-extra-0-index-required"]], "Why is this a hard problem?": [[431, "why-is-this-a-hard-problem"], [433, "why-is-this-a-hard-problem"], [441, "why-is-this-a-hard-problem"]], "Why?": [[331, "why"]], "Windows": [[325, "windows"]], "Windows Runtime Exception Handling": [[332, "windows-runtime-exception-handling"]], "Windows on ARM": [[334, "windows-on-arm"]], "Windows on ARM64": [[334, "windows-on-arm64"]], "Word Alignment": [[281, "word-alignment"]], "Workflow Before/After": [[385, "workflow-before-after"]], "Workflows": [[385, "workflows"], [385, "id13"]], "Working with CodeView": [[393, "working-with-codeview"]], "Write Portable Code": [[291, "write-portable-code"]], "Write barrier: llvm.gcwrite": [[339, "write-barrier-llvm-gcwrite"]], "Write-Back and Retire Stage": [[313, "write-back-and-retire-stage"]], "Writing Custom Tests for the test-suite": [[408, "writing-custom-tests-for-the-test-suite"]], "Writing LLVM Style Makefiles": [[384, "writing-llvm-style-makefiles"]], "Writing a custom parser": [[323, "writing-a-custom-parser"]], "Writing a new AliasAnalysis Implementation": [[277, "writing-a-new-aliasanalysis-implementation"]], "Writing an LLVM Backend": [[413, null]], "Writing an LLVM Pass": [[414, null]], "Writing new regression tests": [[409, "writing-new-regression-tests"]], "X86": [[325, "x86"], [334, "x86"]], "X86 Calling Conventions supported": [[289, "x86-calling-conventions-supported"]], "X86 Target Triples supported": [[289, "x86-target-triples-supported"]], "X86 address spaces supported": [[289, "x86-address-spaces-supported"]], "X86/COFF-Dependent": [[334, "x86-coff-dependent"]], "X86EVEX2VEX": [[401, "x86evex2vex"]], "X86_mmx Type": [[357, "x86-mmx-type"]], "XCore": [[325, "xcore"]], "XRay Flight Data Recorder Trace Format": [[417, null]], "XRay Instrumentation": [[415, null]], "XRay Runtime Library": [[415, "xray-runtime-library"]], "XRay in LLVM": [[415, "xray-in-llvm"]], "YAML I/O": [[418, null]], "Zext GEP indices to machine register width": [[337, "zext-gep-indices-to-machine-register-width"]], "Zig Programming Language": [[388, "zig-programming-language"]], "a16": [[273, "a16"]], "abs": [[273, "abs"], [273, "amdgpu-synid-abs"], [273, "id20"]], "addr64": [[273, "addr64"]], "attr": [[7, null], [85, null], [179, null]], "bank_mask": [[273, "bank-mask"]], "bound_ctrl": [[273, "bound-ctrl"]], "branch_weights": [[357, "branch-weights"]], "bugpoint - automatic test case reduction tool": [[293, null]], "bytes": [[316, "bytes"]], "clamp": [[273, "clamp"], [273, "amdgpu-synid-clamp"], [273, "id19"], [273, "id22"]], "clang-format-fuzzer": [[338, "clang-format-fuzzer"]], "clang-fuzzer": [[338, "clang-fuzzer"]], "clang-proto-fuzzer": [[338, "clang-proto-fuzzer"]], "classes": [[404, "classes"]], "cmpConstants": [[366, "cmpconstants"]], "cmpGEP": [[366, "cmpgep"]], "cmpOperation": [[366, "cmpoperation"]], "cmpValues(const Value*, const Value*)": [[366, "cmpvalues-const-value-const-value"]], "compare(const BasicBlock*, const BasicBlock*)": [[366, "compare-const-basicblock-const-basicblock"]], "compr": [[273, "compr"]], "compute_pgm_rsrc1 for GFX6-GFX9": [[275, "amdgpu-amdhsa-compute-pgm-rsrc1-gfx6-gfx9-table"]], "compute_pgm_rsrc2 for GFX6-GFX9": [[275, "amdgpu-amdhsa-compute-pgm-rsrc2-gfx6-gfx9-table"]], "constant": [[274, "constant"]], "d16": [[273, "d16"]], "da": [[273, "da"]], "debugify in regression tests": [[393, "debugify-in-regression-tests"]], "def": [[404, "def"]], "defm": [[404, "defm"]], "defset": [[404, "defset"]], "dfmt": [[273, "dfmt"]], "dmask": [[273, "dmask"]], "done": [[273, "done"]], "dpp_ctrl": [[273, "dpp-ctrl"]], "dst": [[35, null], [129, null], [221, null]], "dst_sel": [[273, "dst-sel"]], "dst_unused": [[273, "dst-unused"]], "dsymutil - manipulate archived DWARF debug symbol files": [[294, null]], "dump": [[316, "dump"]], "eBPF maps": [[289, "ebpf-maps"]], "exec": [[274, "exec"]], "execz": [[274, "execz"]], "fconst": [[274, "fconst"]], "findRegressions-nightly.py": [[389, "findregressions-nightly-py"]], "flat_scratch": [[274, "flat-scratch"]], "foreach": [[404, "foreach"]], "formatv Examples": [[383, "formatv-examples"]], "function_entry_count": [[357, "function-entry-count"]], "fx": [[210, null]], "gds": [[273, "gds"]], "glc": [[273, "glc"], [273, "id1"], [273, "amdgpu-synid-glc"], [273, "id9"], [273, "id12"]], "high": [[273, "high"]], "hwreg": [[27, null], [116, null], [207, null]], "iconst": [[274, "iconst"]], "idxen": [[273, "amdgpu-synid-idxen"]], "if statement": [[283, "if-statement"]], "ilist_traits": [[383, "ilist-traits"]], "imm16": [[10, null], [47, null], [67, null], [88, null], [144, null], [161, null], [183, null], [238, null], [255, null]], "imm3": [[128, null], [220, null]], "imm32": [[11, null], [26, null], [89, null], [114, null], [115, null], [184, null], [205, null], [206, null]], "imm4": [[117, null], [208, null]], "iplist": [[383, "iplist"]], "label": [[28, null], [118, null], [209, null]], "lds": [[273, "lds"]], "lds_direct": [[274, "lds-direct"]], "libFuzzer \u2013 a library for coverage-guided fuzz testing.": [[359, null]], "libLTO": [[360, "liblto"]], "lit - LLVM Integrated Tester": [[296, null]], "literal": [[274, "literal"]], "llc - LLVM static compiler": [[297, null]], "lli - directly execute programs from LLVM bitcode": [[298, null]], "llvm-ar - LLVM archiver": [[299, null]], "llvm-as - LLVM assembler": [[300, null]], "llvm-as-fuzzer": [[338, "llvm-as-fuzzer"]], "llvm-bcanalyzer - LLVM bitcode analyzer": [[301, null]], "llvm-build - LLVM Project Build Utility": [[302, null]], "llvm-config - Print LLVM compilation options": [[303, null]], "llvm-cov - emit coverage information": [[304, null]], "llvm-cxxmap - Mangled name remapping tool": [[305, null]], "llvm-demangle-fuzzer": [[338, "llvm-demangle-fuzzer"]], "llvm-diff - LLVM structural \u201cdiff\u201d": [[306, null]], "llvm-dis - LLVM disassembler": [[307, null]], "llvm-dwarfdump - dump and verify DWARF debug information": [[308, null]], "llvm-dwarfdump-fuzzer": [[338, "llvm-dwarfdump-fuzzer"]], "llvm-exegesis - LLVM Machine Instruction Benchmark": [[309, null]], "llvm-extract - extract a function from an LLVM module": [[310, null]], "llvm-isel-fuzzer": [[338, "llvm-isel-fuzzer"]], "llvm-lib - LLVM lib.exe compatible library tool": [[311, null]], "llvm-link - LLVM bitcode linker": [[312, null]], "llvm-mc-assemble-fuzzer": [[338, "llvm-mc-assemble-fuzzer"]], "llvm-mc-disassemble-fuzzer": [[338, "llvm-mc-disassemble-fuzzer"]], "llvm-mca - LLVM Machine Code Analyzer": [[313, null]], "llvm-nm - list LLVM bitcode and object file\u2019s symbol table": [[314, null]], "llvm-objdump - LLVM\u2019s object file dumper": [[315, null]], "llvm-opt-fuzzer": [[338, "llvm-opt-fuzzer"]], "llvm-pdbutil - PDB File forensics and diagnostics": [[316, null]], "llvm-profdata - Profile data tool": [[317, null]], "llvm-readobj - LLVM Object Reader": [[318, null]], "llvm-stress - generate random .ll files": [[319, null]], "llvm-symbolizer - convert addresses into source code locations": [[320, null]], "llvm.dbg.addr": [[393, "llvm-dbg-addr"]], "llvm.dbg.declare": [[393, "llvm-dbg-declare"]], "llvm.dbg.value": [[393, "llvm-dbg-value"]], "llvm.eh.begincatch": [[332, "llvm-eh-begincatch"]], "llvm.eh.endcatch": [[332, "llvm-eh-endcatch"]], "llvm.eh.exceptionpointer": [[332, "llvm-eh-exceptionpointer"]], "llvm.eh.sjlj.callsite": [[332, "llvm-eh-sjlj-callsite"]], "llvm.eh.sjlj.longjmp": [[332, "llvm-eh-sjlj-longjmp"]], "llvm.eh.sjlj.lsda": [[332, "llvm-eh-sjlj-lsda"]], "llvm.eh.sjlj.setjmp": [[332, "llvm-eh-sjlj-setjmp"]], "llvm.eh.typeid.for": [[332, "llvm-eh-typeid-for"]], "llvm/ADT/ArrayRef.h": [[383, "llvm-adt-arrayref-h"]], "llvm/ADT/DenseMap.h": [[383, "llvm-adt-densemap-h"]], "llvm/ADT/DenseSet.h": [[383, "llvm-adt-denseset-h"]], "llvm/ADT/FoldingSet.h": [[383, "llvm-adt-foldingset-h"]], "llvm/ADT/ImmutableMap.h": [[383, "llvm-adt-immutablemap-h"]], "llvm/ADT/ImmutableSet.h": [[383, "llvm-adt-immutableset-h"]], "llvm/ADT/IndexedMap.h": [[383, "llvm-adt-indexedmap-h"]], "llvm/ADT/IntEqClasses.h": [[383, "llvm-adt-inteqclasses-h"]], "llvm/ADT/IntervalMap.h": [[383, "llvm-adt-intervalmap-h"]], "llvm/ADT/MapVector.h": [[383, "llvm-adt-mapvector-h"]], "llvm/ADT/PackedVector.h": [[383, "llvm-adt-packedvector-h"]], "llvm/ADT/SetVector.h": [[383, "llvm-adt-setvector-h"]], "llvm/ADT/SmallPtrSet.h": [[383, "llvm-adt-smallptrset-h"]], "llvm/ADT/SmallSet.h": [[383, "llvm-adt-smallset-h"]], "llvm/ADT/SmallString.h": [[383, "llvm-adt-smallstring-h"]], "llvm/ADT/SmallVector.h": [[383, "llvm-adt-smallvector-h"]], "llvm/ADT/SparseMultiSet.h": [[383, "llvm-adt-sparsemultiset-h"]], "llvm/ADT/SparseSet.h": [[383, "llvm-adt-sparseset-h"]], "llvm/ADT/StringMap.h": [[383, "llvm-adt-stringmap-h"]], "llvm/ADT/StringRef.h": [[383, "llvm-adt-stringref-h"]], "llvm/ADT/StringSet.h": [[383, "llvm-adt-stringset-h"]], "llvm/ADT/TinyPtrVector.h": [[383, "llvm-adt-tinyptrvector-h"]], "llvm/ADT/Twine.h": [[383, "llvm-adt-twine-h"]], "llvm/ADT/UniqueVector.h": [[383, "llvm-adt-uniquevector-h"]], "llvm/ADT/ilist.h": [[383, "llvm-adt-ilist-h"]], "llvm/ADT/ilist_node.h": [[383, "llvm-adt-ilist-node-h"]], "llvm/IR/ValueMap.h": [[383, "llvm-ir-valuemap-h"]], "llvm/examples": [[341, "llvm-examples"]], "llvm/include": [[341, "llvm-include"]], "llvm/lib": [[341, "llvm-lib"]], "llvm/projects": [[341, "llvm-projects"]], "llvm/test": [[341, "llvm-test"]], "llvm/tools": [[341, "llvm-tools"]], "llvm/utils": [[341, "llvm-utils"]], "lto_code_gen_t": [[360, "lto-code-gen-t"]], "lto_module_t": [[360, "lto-module-t"]], "lwe": [[273, "lwe"]], "m": [[29, null], [119, null], [120, null], [121, null], [211, null], [212, null], [213, null]], "m0": [[274, "m0"]], "m_op_sel": [[273, "m-op-sel"]], "m_op_sel_hi": [[273, "m-op-sel-hi"]], "make.implicit metadata": [[336, "make-implicit-metadata"]], "merge": [[316, "merge"]], "msg": [[30, null], [122, null], [214, null]], "multiclass": [[404, "multiclass"]], "neg": [[273, "neg"], [273, "amdgpu-synid-neg"], [273, "id21"]], "neg_hi": [[273, "neg-hi"]], "neg_lo": [[273, "neg-lo"]], "nfmt": [[273, "nfmt"]], "nv": [[273, "nv"], [273, "amdgpu-synid-nv"], [273, "id13"]], "off": [[274, "off"]], "offen": [[273, "offen"]], "offset12": [[273, "offset12"], [273, "amdgpu-synid-buf-offset12"]], "offset13s": [[273, "offset13s"]], "offset16": [[273, "offset16"]], "offset8": [[273, "offset8"]], "omod": [[273, "omod"], [273, "amdgpu-synid-omod"]], "op_sel": [[273, "op-sel"], [273, "amdgpu-synid-op-sel"]], "op_sel_hi": [[273, "op-sel-hi"]], "opt": [[33, null], [126, null], [218, null]], "opt - LLVM optimizer": [[321, null]], "param": [[34, null], [127, null], [219, null]], "pattern": [[273, "pattern"]], "pdb2yaml": [[316, "pdb2yaml"]], "pretty": [[316, "pretty"]], "ptxas complains of undefined function: __nvvm_reflect": [[367, "ptxas-complains-of-undefined-function-nvvm-reflect"]], "r128": [[273, "r128"]], "rawspeed": [[386, "rawspeed"]], "row_mask": [[273, "row-mask"]], "runOnModule": [[366, "runonmodule"]], "s": [[274, "s"]], "saddr": [[224, null], [225, null]], "sbase": [[8, null], [9, null], [86, null], [87, null], [180, null], [181, null], [182, null]], "scc": [[274, "scc"]], "sdata": [[133, null], [134, null], [135, null], [192, null], [193, null], [194, null], [227, null], [228, null], [229, null]], "sdst": [[39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [46, null], [136, null], [137, null], [138, null], [139, null], [140, null], [141, null], [142, null], [143, null], [230, null], [231, null], [232, null], [233, null], [234, null], [235, null], [236, null], [237, null]], "sext": [[273, "sext"]], "simm21": [[274, "simm21"]], "slc": [[273, "slc"], [273, "id2"], [273, "amdgpu-synid-slc"], [273, "id10"]], "soffset": [[31, null], [32, null], [123, null], [124, null], [125, null], [215, null], [216, null], [217, null]], "src": [[48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [145, null], [146, null], [147, null], [148, null], [239, null], [240, null], [241, null], [242, null]], "src0_sel": [[273, "src0-sel"]], "src1_sel": [[273, "src1-sel"]], "srsrc": [[36, null], [37, null], [130, null], [131, null], [222, null], [223, null]], "ssamp": [[38, null], [132, null], [226, null]], "ssrc": [[56, null], [57, null], [58, null], [59, null], [60, null], [61, null], [62, null], [63, null], [64, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [244, null], [245, null], [246, null], [247, null], [248, null], [249, null], [250, null], [251, null], [252, null]], "std::string": [[383, "std-string"]], "switch statement": [[283, "switch-statement"]], "tba": [[274, "tba"]], "tblgen - Target Description To C++ Code Generator": [[322, null]], "test-release.sh": [[389, "test-release-sh"]], "test-suite": [[341, "test-suite"], [409, "test-suite"]], "test-suite Guide": [[407, null]], "test-suite Makefile Guide (deprecated)": [[408, null]], "tfe": [[273, "tfe"], [273, "id3"], [273, "amdgpu-synid-tfe"], [273, "id11"]], "tgt": [[65, null], [159, null], [253, null]], "tma": [[274, "tma"]], "trap": [[274, "trap"]], "ttmp": [[274, "ttmp"]], "uimm20": [[274, "uimm20"]], "uimm21": [[274, "uimm21"]], "uimm32": [[274, "uimm32"]], "uimm8": [[274, "uimm8"]], "unorm": [[273, "unorm"]], "v": [[274, "v"]], "vaddr": [[3, null], [4, null], [5, null], [6, null], [81, null], [82, null], [83, null], [84, null], [175, null], [176, null], [177, null], [178, null], [256, null], [257, null]], "vcc": [[68, null], [162, null], [258, null], [274, "vcc"]], "vccz": [[274, "vccz"]], "vdata": [[12, null], [13, null], [14, null], [15, null], [16, null], [17, null], [69, null], [70, null], [71, null], [72, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [97, null], [98, null], [99, null], [100, null], [163, null], [164, null], [165, null], [166, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [259, null], [260, null], [261, null], [262, null]], "vdst": [[18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [73, null], [74, null], [75, null], [76, null], [101, null], [102, null], [103, null], [104, null], [105, null], [106, null], [107, null], [108, null], [109, null], [110, null], [111, null], [112, null], [113, null], [167, null], [168, null], [169, null], [170, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [263, null], [264, null], [265, null], [266, null]], "vecmathlib tests harness": [[386, "vecmathlib-tests-harness"]], "vm": [[273, "vm"]], "vsrc": [[55, null], [77, null], [78, null], [79, null], [149, null], [171, null], [172, null], [173, null], [243, null], [267, null], [268, null], [269, null]], "waitcnt": [[80, null], [174, null], [270, null]], "xnack": [[274, "xnack"]], "yaml2obj": [[444, null]], "yaml2pdb": [[316, "yaml2pdb"]], "}": [[363, null], [363, "id6"], [363, "id9"], [394, null], [394, "id14"], [394, "id21"], [394, "id28"], [394, "id33"], [394, "id42"]], "\u00c0 faire": [[287, "id3"], [323, "id8"], [323, "id9"], [351, "id1"], [427, "id1"]], "\u201cabsolute_symbol\u201d Metadata": [[357, "absolute-symbol-metadata"]], "\u201caddrspacecast .. to\u201d Instruction": [[357, "addrspacecast-to-instruction"]], "\u201cadd\u201d Instruction": [[357, "add-instruction"]], "\u201calloca\u201d Instruction": [[357, "alloca-instruction"]], "\u201cand\u201d Instruction": [[357, "and-instruction"]], "\u201cashr\u201d Instruction": [[357, "ashr-instruction"]], "\u201cassociated\u201d Metadata": [[357, "associated-metadata"]], "\u201catomicrmw\u201d Instruction": [[357, "atomicrmw-instruction"]], "\u201cbitcast .. to\u201d Instruction": [[357, "bitcast-to-instruction"]], "\u201cbr\u201d Instruction": [[357, "br-instruction"]], "\u201ccallees\u201d Metadata": [[357, "callees-metadata"]], "\u201ccall\u201d Instruction": [[357, "call-instruction"]], "\u201ccatchpad\u201d Instruction": [[357, "catchpad-instruction"]], "\u201ccatchret\u201d Instruction": [[357, "catchret-instruction"]], "\u201ccatchswitch\u201d Instruction": [[357, "catchswitch-instruction"]], "\u201ccleanuppad\u201d Instruction": [[357, "cleanuppad-instruction"]], "\u201ccleanupret\u201d Instruction": [[357, "cleanupret-instruction"]], "\u201ccmpxchg\u201d Instruction": [[357, "cmpxchg-instruction"]], "\u201cextractelement\u201d Instruction": [[357, "extractelement-instruction"]], "\u201cextractvalue\u201d Instruction": [[357, "extractvalue-instruction"]], "\u201cfadd\u201d Instruction": [[357, "fadd-instruction"]], "\u201cfcmp\u201d Instruction": [[357, "fcmp-instruction"]], "\u201cfdiv\u201d Instruction": [[357, "fdiv-instruction"]], "\u201cfence\u201d Instruction": [[357, "fence-instruction"]], "\u201cfmul\u201d Instruction": [[357, "fmul-instruction"]], "\u201cfneg\u201d Instruction": [[357, "fneg-instruction"]], "\u201cfor\u201d Loop Expression": [[429, "for-loop-expression"], [439, "for-loop-expression"]], "\u201cfpext .. to\u201d Instruction": [[357, "fpext-to-instruction"]], "\u201cfpmath\u201d Metadata": [[357, "fpmath-metadata"]], "\u201cfptosi .. to\u201d Instruction": [[357, "fptosi-to-instruction"]], "\u201cfptoui .. to\u201d Instruction": [[357, "fptoui-to-instruction"]], "\u201cfptrunc .. to\u201d Instruction": [[357, "fptrunc-to-instruction"]], "\u201cfrem\u201d Instruction": [[357, "frem-instruction"]], "\u201cfsub\u201d Instruction": [[357, "fsub-instruction"]], "\u201cgetelementptr\u201d Instruction": [[357, "getelementptr-instruction"]], "\u201cicmp\u201d Instruction": [[357, "icmp-instruction"]], "\u201cindirectbr\u201d Instruction": [[357, "indirectbr-instruction"]], "\u201cinsertelement\u201d Instruction": [[357, "insertelement-instruction"]], "\u201cinsertvalue\u201d Instruction": [[357, "insertvalue-instruction"]], "\u201cinttoptr .. to\u201d Instruction": [[357, "inttoptr-to-instruction"]], "\u201cinvariant.group\u201d Metadata": [[357, "invariant-group-metadata"]], "\u201cinvoke\u201d Instruction": [[357, "invoke-instruction"]], "\u201cirr_loop\u201d Metadata": [[357, "irr-loop-metadata"]], "\u201clandingpad\u201d Instruction": [[357, "landingpad-instruction"]], "\u201clet\u201d expressions": [[403, "let-expressions-within-a-record"], [403, "id3"]], "\u201cllvm.access.group\u201d Metadata": [[357, "llvm-access-group-metadata"]], "\u201cllvm.addressofreturnaddress\u201d Intrinsic": [[357, "llvm-addressofreturnaddress-intrinsic"]], "\u201cllvm.adjust.trampoline\u201d Intrinsic": [[357, "llvm-adjust-trampoline-intrinsic"]], "\u201cllvm.annotation.*\u201d Intrinsic": [[357, "llvm-annotation-intrinsic"]], "\u201cllvm.assume\u201d Intrinsic": [[357, "llvm-assume-intrinsic"]], "\u201cllvm.bitreverse.*\u201d Intrinsics": [[357, "llvm-bitreverse-intrinsics"]], "\u201cllvm.bswap.*\u201d Intrinsics": [[357, "llvm-bswap-intrinsics"]], "\u201cllvm.canonicalize.*\u201d Intrinsic": [[357, "llvm-canonicalize-intrinsic"]], "\u201cllvm.ceil.*\u201d Intrinsic": [[357, "llvm-ceil-intrinsic"]], "\u201cllvm.clear_cache\u201d Intrinsic": [[357, "llvm-clear-cache-intrinsic"]], "\u201cllvm.codeview.annotation\u201d Intrinsic": [[357, "llvm-codeview-annotation-intrinsic"]], "\u201cllvm.convert.from.fp16\u201d Intrinsic": [[357, "llvm-convert-from-fp16-intrinsic"]], "\u201cllvm.convert.to.fp16\u201d Intrinsic": [[357, "llvm-convert-to-fp16-intrinsic"]], "\u201cllvm.copysign.*\u201d Intrinsic": [[357, "llvm-copysign-intrinsic"]], "\u201cllvm.coro.alloc\u201d Intrinsic": [[327, "llvm-coro-alloc-intrinsic"]], "\u201cllvm.coro.begin\u201d Intrinsic": [[327, "llvm-coro-begin-intrinsic"]], "\u201cllvm.coro.destroy\u201d Intrinsic": [[327, "llvm-coro-destroy-intrinsic"]], "\u201cllvm.coro.done\u201d Intrinsic": [[327, "llvm-coro-done-intrinsic"]], "\u201cllvm.coro.end\u201d Intrinsic": [[327, "llvm-coro-end-intrinsic"]], "\u201cllvm.coro.frame\u201d Intrinsic": [[327, "llvm-coro-frame-intrinsic"]], "\u201cllvm.coro.free\u201d Intrinsic": [[327, "llvm-coro-free-intrinsic"]], "\u201cllvm.coro.id\u201d Intrinsic": [[327, "llvm-coro-id-intrinsic"]], "\u201cllvm.coro.noop\u201d Intrinsic": [[327, "llvm-coro-noop-intrinsic"]], "\u201cllvm.coro.param\u201d Intrinsic": [[327, "llvm-coro-param-intrinsic"]], "\u201cllvm.coro.promise\u201d Intrinsic": [[327, "llvm-coro-promise-intrinsic"]], "\u201cllvm.coro.resume\u201d Intrinsic": [[327, "llvm-coro-resume-intrinsic"]], "\u201cllvm.coro.save\u201d Intrinsic": [[327, "llvm-coro-save-intrinsic"]], "\u201cllvm.coro.size\u201d Intrinsic": [[327, "llvm-coro-size-intrinsic"]], "\u201cllvm.coro.suspend\u201d Intrinsic": [[327, "llvm-coro-suspend-intrinsic"]], "\u201cllvm.cos.*\u201d Intrinsic": [[357, "llvm-cos-intrinsic"]], "\u201cllvm.ctlz.*\u201d Intrinsic": [[357, "llvm-ctlz-intrinsic"]], "\u201cllvm.ctpop.*\u201d Intrinsic": [[357, "llvm-ctpop-intrinsic"]], "\u201cllvm.cttz.*\u201d Intrinsic": [[357, "llvm-cttz-intrinsic"]], "\u201cllvm.debugtrap\u201d Intrinsic": [[357, "llvm-debugtrap-intrinsic"]], "\u201cllvm.donothing\u201d Intrinsic": [[357, "llvm-donothing-intrinsic"]], "\u201cllvm.exp.*\u201d Intrinsic": [[357, "llvm-exp-intrinsic"]], "\u201cllvm.exp2.*\u201d Intrinsic": [[357, "llvm-exp2-intrinsic"]], "\u201cllvm.expect\u201d Intrinsic": [[357, "llvm-expect-intrinsic"]], "\u201cllvm.experimental.constrained.ceil\u201d Intrinsic": [[357, "llvm-experimental-constrained-ceil-intrinsic"]], "\u201cllvm.experimental.constrained.cos\u201d Intrinsic": [[357, "llvm-experimental-constrained-cos-intrinsic"]], "\u201cllvm.experimental.constrained.exp2\u201d Intrinsic": [[357, "llvm-experimental-constrained-exp2-intrinsic"]], "\u201cllvm.experimental.constrained.exp\u201d Intrinsic": [[357, "llvm-experimental-constrained-exp-intrinsic"]], "\u201cllvm.experimental.constrained.fadd\u201d Intrinsic": [[357, "llvm-experimental-constrained-fadd-intrinsic"]], "\u201cllvm.experimental.constrained.fdiv\u201d Intrinsic": [[357, "llvm-experimental-constrained-fdiv-intrinsic"]], "\u201cllvm.experimental.constrained.floor\u201d Intrinsic": [[357, "llvm-experimental-constrained-floor-intrinsic"]], "\u201cllvm.experimental.constrained.fma\u201d Intrinsic": [[357, "llvm-experimental-constrained-fma-intrinsic"]], "\u201cllvm.experimental.constrained.fmul\u201d Intrinsic": [[357, "llvm-experimental-constrained-fmul-intrinsic"]], "\u201cllvm.experimental.constrained.frem\u201d Intrinsic": [[357, "llvm-experimental-constrained-frem-intrinsic"]], "\u201cllvm.experimental.constrained.fsub\u201d Intrinsic": [[357, "llvm-experimental-constrained-fsub-intrinsic"]], "\u201cllvm.experimental.constrained.log10\u201d Intrinsic": [[357, "llvm-experimental-constrained-log10-intrinsic"]], "\u201cllvm.experimental.constrained.log2\u201d Intrinsic": [[357, "llvm-experimental-constrained-log2-intrinsic"]], "\u201cllvm.experimental.constrained.log\u201d Intrinsic": [[357, "llvm-experimental-constrained-log-intrinsic"]], "\u201cllvm.experimental.constrained.maxnum\u201d Intrinsic": [[357, "llvm-experimental-constrained-maxnum-intrinsic"]], "\u201cllvm.experimental.constrained.minnum\u201d Intrinsic": [[357, "llvm-experimental-constrained-minnum-intrinsic"]], "\u201cllvm.experimental.constrained.nearbyint\u201d Intrinsic": [[357, "llvm-experimental-constrained-nearbyint-intrinsic"]], "\u201cllvm.experimental.constrained.powi\u201d Intrinsic": [[357, "llvm-experimental-constrained-powi-intrinsic"]], "\u201cllvm.experimental.constrained.pow\u201d Intrinsic": [[357, "llvm-experimental-constrained-pow-intrinsic"]], "\u201cllvm.experimental.constrained.rint\u201d Intrinsic": [[357, "llvm-experimental-constrained-rint-intrinsic"]], "\u201cllvm.experimental.constrained.round\u201d Intrinsic": [[357, "llvm-experimental-constrained-round-intrinsic"]], "\u201cllvm.experimental.constrained.sin\u201d Intrinsic": [[357, "llvm-experimental-constrained-sin-intrinsic"]], "\u201cllvm.experimental.constrained.sqrt\u201d Intrinsic": [[357, "llvm-experimental-constrained-sqrt-intrinsic"]], "\u201cllvm.experimental.constrained.trunc\u201d Intrinsic": [[357, "llvm-experimental-constrained-trunc-intrinsic"]], "\u201cllvm.experimental.deoptimize\u201d Intrinsic": [[357, "llvm-experimental-deoptimize-intrinsic"]], "\u201cllvm.experimental.gc.relocate\u201d Intrinsic": [[398, "llvm-experimental-gc-relocate-intrinsic"]], "\u201cllvm.experimental.gc.result\u201d Intrinsic": [[398, "llvm-experimental-gc-result-intrinsic"]], "\u201cllvm.experimental.gc.statepoint\u201d Intrinsic": [[398, "llvm-experimental-gc-statepoint-intrinsic"]], "\u201cllvm.experimental.guard\u201d Intrinsic": [[357, "llvm-experimental-guard-intrinsic"]], "\u201cllvm.experimental.patchpoint.*\u201d Intrinsic": [[396, "llvm-experimental-patchpoint-intrinsic"]], "\u201cllvm.experimental.stackmap\u201d Intrinsic": [[396, "llvm-experimental-stackmap-intrinsic"]], "\u201cllvm.experimental.vector.reduce.add.*\u201d Intrinsic": [[357, "llvm-experimental-vector-reduce-add-intrinsic"]], "\u201cllvm.experimental.vector.reduce.and.*\u201d Intrinsic": [[357, "llvm-experimental-vector-reduce-and-intrinsic"]], "\u201cllvm.experimental.vector.reduce.fadd.*\u201d Intrinsic": [[357, "llvm-experimental-vector-reduce-fadd-intrinsic"]], "\u201cllvm.experimental.vector.reduce.fmax.*\u201d Intrinsic": [[357, "llvm-experimental-vector-reduce-fmax-intrinsic"]], "\u201cllvm.experimental.vector.reduce.fmin.*\u201d Intrinsic": [[357, "llvm-experimental-vector-reduce-fmin-intrinsic"]], "\u201cllvm.experimental.vector.reduce.fmul.*\u201d Intrinsic": [[357, "llvm-experimental-vector-reduce-fmul-intrinsic"]], "\u201cllvm.experimental.vector.reduce.mul.*\u201d Intrinsic": [[357, "llvm-experimental-vector-reduce-mul-intrinsic"]], "\u201cllvm.experimental.vector.reduce.or.*\u201d Intrinsic": [[357, "llvm-experimental-vector-reduce-or-intrinsic"]], "\u201cllvm.experimental.vector.reduce.smax.*\u201d Intrinsic": [[357, "llvm-experimental-vector-reduce-smax-intrinsic"]], "\u201cllvm.experimental.vector.reduce.smin.*\u201d Intrinsic": [[357, "llvm-experimental-vector-reduce-smin-intrinsic"]], "\u201cllvm.experimental.vector.reduce.umax.*\u201d Intrinsic": [[357, "llvm-experimental-vector-reduce-umax-intrinsic"]], "\u201cllvm.experimental.vector.reduce.umin.*\u201d Intrinsic": [[357, "llvm-experimental-vector-reduce-umin-intrinsic"]], "\u201cllvm.experimental.vector.reduce.xor.*\u201d Intrinsic": [[357, "llvm-experimental-vector-reduce-xor-intrinsic"]], "\u201cllvm.experimental.widenable.condition\u201d Intrinsic": [[357, "llvm-experimental-widenable-condition-intrinsic"]], "\u201cllvm.fabs.*\u201d Intrinsic": [[357, "llvm-fabs-intrinsic"]], "\u201cllvm.floor.*\u201d Intrinsic": [[357, "llvm-floor-intrinsic"]], "\u201cllvm.fma.*\u201d Intrinsic": [[357, "llvm-fma-intrinsic"]], "\u201cllvm.fmuladd.*\u201d Intrinsic": [[357, "llvm-fmuladd-intrinsic"]], "\u201cllvm.frameaddress\u201d Intrinsic": [[357, "llvm-frameaddress-intrinsic"]], "\u201cllvm.fshl.*\u201d Intrinsic": [[357, "llvm-fshl-intrinsic"]], "\u201cllvm.fshr.*\u201d Intrinsic": [[357, "llvm-fshr-intrinsic"]], "\u201cllvm.gcread\u201d Intrinsic": [[357, "llvm-gcread-intrinsic"]], "\u201cllvm.gcroot\u201d Intrinsic": [[357, "llvm-gcroot-intrinsic"]], "\u201cllvm.gcwrite\u201d Intrinsic": [[357, "llvm-gcwrite-intrinsic"]], "\u201cllvm.get.dynamic.area.offset\u201d Intrinsic": [[357, "llvm-get-dynamic-area-offset-intrinsic"]], "\u201cllvm.init.trampoline\u201d Intrinsic": [[357, "llvm-init-trampoline-intrinsic"]], "\u201cllvm.instrprof.increment.step\u201d Intrinsic": [[357, "llvm-instrprof-increment-step-intrinsic"]], "\u201cllvm.instrprof.increment\u201d Intrinsic": [[357, "llvm-instrprof-increment-intrinsic"]], "\u201cllvm.instrprof.value.profile\u201d Intrinsic": [[357, "llvm-instrprof-value-profile-intrinsic"]], "\u201cllvm.invariant.end\u201d Intrinsic": [[357, "llvm-invariant-end-intrinsic"]], "\u201cllvm.invariant.start\u201d Intrinsic": [[357, "llvm-invariant-start-intrinsic"]], "\u201cllvm.is.constant.*\u201d Intrinsic": [[357, "llvm-is-constant-intrinsic"]], "\u201cllvm.launder.invariant.group\u201d Intrinsic": [[357, "llvm-launder-invariant-group-intrinsic"]], "\u201cllvm.lifetime.end\u201d Intrinsic": [[357, "llvm-lifetime-end-intrinsic"]], "\u201cllvm.lifetime.start\u201d Intrinsic": [[357, "llvm-lifetime-start-intrinsic"]], "\u201cllvm.load.relative\u201d Intrinsic": [[357, "llvm-load-relative-intrinsic"]], "\u201cllvm.localescape\u201d and \u201cllvm.localrecover\u201d Intrinsics": [[357, "llvm-localescape-and-llvm-localrecover-intrinsics"]], "\u201cllvm.log.*\u201d Intrinsic": [[357, "llvm-log-intrinsic"]], "\u201cllvm.log10.*\u201d Intrinsic": [[357, "llvm-log10-intrinsic"]], "\u201cllvm.log2.*\u201d Intrinsic": [[357, "llvm-log2-intrinsic"]], "\u201cllvm.loop.disable_nonforced\u201d": [[357, "llvm-loop-disable-nonforced"]], "\u201cllvm.loop.distribute.enable\u201d Metadata": [[357, "llvm-loop-distribute-enable-metadata"]], "\u201cllvm.loop.distribute.followup_all\u201d Metadata": [[357, "llvm-loop-distribute-followup-all-metadata"]], "\u201cllvm.loop.distribute.followup_coincident\u201d Metadata": [[357, "llvm-loop-distribute-followup-coincident-metadata"]], "\u201cllvm.loop.distribute.followup_fallback\u201d Metadata": [[357, "llvm-loop-distribute-followup-fallback-metadata"]], "\u201cllvm.loop.distribute.followup_sequential\u201d Metadata": [[357, "llvm-loop-distribute-followup-sequential-metadata"]], "\u201cllvm.loop.interleave.count\u201d Metadata": [[357, "llvm-loop-interleave-count-metadata"]], "\u201cllvm.loop.licm_versioning.disable\u201d Metadata": [[357, "llvm-loop-licm-versioning-disable-metadata"]], "\u201cllvm.loop.parallel_accesses\u201d Metadata": [[357, "llvm-loop-parallel-accesses-metadata"]], "\u201cllvm.loop.unroll.count\u201d Metadata": [[357, "llvm-loop-unroll-count-metadata"]], "\u201cllvm.loop.unroll.disable\u201d Metadata": [[357, "llvm-loop-unroll-disable-metadata"]], "\u201cllvm.loop.unroll.enable\u201d Metadata": [[357, "llvm-loop-unroll-enable-metadata"]], "\u201cllvm.loop.unroll.followup_remainder\u201d Metadata": [[357, "llvm-loop-unroll-followup-remainder-metadata"]], "\u201cllvm.loop.unroll.followup\u201d Metadata": [[357, "llvm-loop-unroll-followup-metadata"]], "\u201cllvm.loop.unroll.full\u201d Metadata": [[357, "llvm-loop-unroll-full-metadata"]], "\u201cllvm.loop.unroll.runtime.disable\u201d Metadata": [[357, "llvm-loop-unroll-runtime-disable-metadata"]], "\u201cllvm.loop.unroll_and_jam.count\u201d Metadata": [[357, "llvm-loop-unroll-and-jam-count-metadata"]], "\u201cllvm.loop.unroll_and_jam.disable\u201d Metadata": [[357, "llvm-loop-unroll-and-jam-disable-metadata"]], "\u201cllvm.loop.unroll_and_jam.enable\u201d Metadata": [[357, "llvm-loop-unroll-and-jam-enable-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_all\u201d Metadata": [[357, "llvm-loop-unroll-and-jam-followup-all-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_inner\u201d Metadata": [[357, "llvm-loop-unroll-and-jam-followup-inner-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_outer\u201d Metadata": [[357, "llvm-loop-unroll-and-jam-followup-outer-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_remainder_inner\u201d Metadata": [[357, "llvm-loop-unroll-and-jam-followup-remainder-inner-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_remainder_outer\u201d Metadata": [[357, "llvm-loop-unroll-and-jam-followup-remainder-outer-metadata"]], "\u201cllvm.loop.unroll_and_jam\u201d": [[357, "llvm-loop-unroll-and-jam"]], "\u201cllvm.loop.unroll\u201d": [[357, "llvm-loop-unroll"]], "\u201cllvm.loop.vectorize.enable\u201d Metadata": [[357, "llvm-loop-vectorize-enable-metadata"]], "\u201cllvm.loop.vectorize.followup_all\u201d Metadata": [[357, "llvm-loop-vectorize-followup-all-metadata"]], "\u201cllvm.loop.vectorize.followup_epilogue\u201d Metadata": [[357, "llvm-loop-vectorize-followup-epilogue-metadata"]], "\u201cllvm.loop.vectorize.followup_vectorized\u201d Metadata": [[357, "llvm-loop-vectorize-followup-vectorized-metadata"]], "\u201cllvm.loop.vectorize.width\u201d Metadata": [[357, "llvm-loop-vectorize-width-metadata"]], "\u201cllvm.loop.vectorize\u201d and \u201cllvm.loop.interleave\u201d": [[357, "llvm-loop-vectorize-and-llvm-loop-interleave"]], "\u201cllvm.loop\u201d": [[357, "llvm-loop"]], "\u201cllvm.masked.compressstore.*\u201d Intrinsics": [[357, "llvm-masked-compressstore-intrinsics"]], "\u201cllvm.masked.expandload.*\u201d Intrinsics": [[357, "llvm-masked-expandload-intrinsics"]], "\u201cllvm.masked.gather.*\u201d Intrinsics": [[357, "llvm-masked-gather-intrinsics"]], "\u201cllvm.masked.load.*\u201d Intrinsics": [[357, "llvm-masked-load-intrinsics"]], "\u201cllvm.masked.scatter.*\u201d Intrinsics": [[357, "llvm-masked-scatter-intrinsics"]], "\u201cllvm.masked.store.*\u201d Intrinsics": [[357, "llvm-masked-store-intrinsics"]], "\u201cllvm.maximum.*\u201d Intrinsic": [[357, "llvm-maximum-intrinsic"]], "\u201cllvm.maxnum.*\u201d Intrinsic": [[357, "llvm-maxnum-intrinsic"]], "\u201cllvm.memcpy.element.unordered.atomic\u201d Intrinsic": [[357, "llvm-memcpy-element-unordered-atomic-intrinsic"]], "\u201cllvm.memcpy\u201d Intrinsic": [[357, "llvm-memcpy-intrinsic"]], "\u201cllvm.memmove.element.unordered.atomic\u201d Intrinsic": [[357, "llvm-memmove-element-unordered-atomic-intrinsic"]], "\u201cllvm.memmove\u201d Intrinsic": [[357, "llvm-memmove-intrinsic"]], "\u201cllvm.memset.*\u201d Intrinsics": [[357, "llvm-memset-intrinsics"]], "\u201cllvm.memset.element.unordered.atomic\u201d Intrinsic": [[357, "llvm-memset-element-unordered-atomic-intrinsic"]], "\u201cllvm.minimum.*\u201d Intrinsic": [[357, "llvm-minimum-intrinsic"]], "\u201cllvm.minnum.*\u201d Intrinsic": [[357, "llvm-minnum-intrinsic"]], "\u201cllvm.nearbyint.*\u201d Intrinsic": [[357, "llvm-nearbyint-intrinsic"]], "\u201cllvm.nvvm.barrier0\u201d": [[367, "llvm-nvvm-barrier0"]], "\u201cllvm.nvvm.ptr.*.to.gen\u201d Intrinsics": [[367, "llvm-nvvm-ptr-to-gen-intrinsics"]], "\u201cllvm.nvvm.ptr.gen.to.*\u201d Intrinsics": [[367, "llvm-nvvm-ptr-gen-to-intrinsics"]], "\u201cllvm.nvvm.read.ptx.sreg.*\u201d": [[367, "llvm-nvvm-read-ptx-sreg"]], "\u201cllvm.objc.autoreleasePoolPop\u201d Intrinsic": [[357, "llvm-objc-autoreleasepoolpop-intrinsic"]], "\u201cllvm.objc.autoreleasePoolPush\u201d Intrinsic": [[357, "llvm-objc-autoreleasepoolpush-intrinsic"]], "\u201cllvm.objc.autoreleaseReturnValue\u201d Intrinsic": [[357, "llvm-objc-autoreleasereturnvalue-intrinsic"]], "\u201cllvm.objc.autorelease\u201d Intrinsic": [[357, "llvm-objc-autorelease-intrinsic"]], "\u201cllvm.objc.copyWeak\u201d Intrinsic": [[357, "llvm-objc-copyweak-intrinsic"]], "\u201cllvm.objc.destroyWeak\u201d Intrinsic": [[357, "llvm-objc-destroyweak-intrinsic"]], "\u201cllvm.objc.initWeak\u201d Intrinsic": [[357, "llvm-objc-initweak-intrinsic"]], "\u201cllvm.objc.loadWeakRetained\u201d Intrinsic": [[357, "llvm-objc-loadweakretained-intrinsic"]], "\u201cllvm.objc.loadWeak\u201d Intrinsic": [[357, "llvm-objc-loadweak-intrinsic"]], "\u201cllvm.objc.moveWeak\u201d Intrinsic": [[357, "llvm-objc-moveweak-intrinsic"]], "\u201cllvm.objc.release\u201d Intrinsic": [[357, "llvm-objc-release-intrinsic"]], "\u201cllvm.objc.retainAutoreleaseReturnValue\u201d Intrinsic": [[357, "llvm-objc-retainautoreleasereturnvalue-intrinsic"]], "\u201cllvm.objc.retainAutoreleasedReturnValue\u201d Intrinsic": [[357, "llvm-objc-retainautoreleasedreturnvalue-intrinsic"]], "\u201cllvm.objc.retainAutorelease\u201d Intrinsic": [[357, "llvm-objc-retainautorelease-intrinsic"]], "\u201cllvm.objc.retainBlock\u201d Intrinsic": [[357, "llvm-objc-retainblock-intrinsic"]], "\u201cllvm.objc.retain\u201d Intrinsic": [[357, "llvm-objc-retain-intrinsic"]], "\u201cllvm.objc.storeStrong\u201d Intrinsic": [[357, "llvm-objc-storestrong-intrinsic"]], "\u201cllvm.objc.storeWeak\u201d Intrinsic": [[357, "llvm-objc-storeweak-intrinsic"]], "\u201cllvm.objectsize\u201d Intrinsic": [[357, "llvm-objectsize-intrinsic"]], "\u201cllvm.pcmarker\u201d Intrinsic": [[357, "llvm-pcmarker-intrinsic"]], "\u201cllvm.pow.*\u201d Intrinsic": [[357, "llvm-pow-intrinsic"]], "\u201cllvm.powi.*\u201d Intrinsic": [[357, "llvm-powi-intrinsic"]], "\u201cllvm.prefetch\u201d Intrinsic": [[357, "llvm-prefetch-intrinsic"]], "\u201cllvm.ptr.annotation.*\u201d Intrinsic": [[357, "llvm-ptr-annotation-intrinsic"]], "\u201cllvm.read_register\u201d and \u201cllvm.write_register\u201d Intrinsics": [[357, "llvm-read-register-and-llvm-write-register-intrinsics"]], "\u201cllvm.readcyclecounter\u201d Intrinsic": [[357, "llvm-readcyclecounter-intrinsic"]], "\u201cllvm.returnaddress\u201d Intrinsic": [[357, "llvm-returnaddress-intrinsic"]], "\u201cllvm.rint.*\u201d Intrinsic": [[357, "llvm-rint-intrinsic"]], "\u201cllvm.round.*\u201d Intrinsic": [[357, "llvm-round-intrinsic"]], "\u201cllvm.sadd.sat.*\u201d Intrinsics": [[357, "llvm-sadd-sat-intrinsics"]], "\u201cllvm.sadd.with.overflow.*\u201d Intrinsics": [[357, "llvm-sadd-with-overflow-intrinsics"]], "\u201cllvm.sideeffect\u201d Intrinsic": [[357, "llvm-sideeffect-intrinsic"]], "\u201cllvm.sin.*\u201d Intrinsic": [[357, "llvm-sin-intrinsic"]], "\u201cllvm.smul.fix.*\u201d Intrinsics": [[357, "llvm-smul-fix-intrinsics"]], "\u201cllvm.smul.with.overflow.*\u201d Intrinsics": [[357, "llvm-smul-with-overflow-intrinsics"]], "\u201cllvm.sponentry\u201d Intrinsic": [[357, "llvm-sponentry-intrinsic"]], "\u201cllvm.sqrt.*\u201d Intrinsic": [[357, "llvm-sqrt-intrinsic"]], "\u201cllvm.ssa_copy\u201d Intrinsic": [[357, "llvm-ssa-copy-intrinsic"]], "\u201cllvm.ssub.sat.*\u201d Intrinsics": [[357, "llvm-ssub-sat-intrinsics"]], "\u201cllvm.ssub.with.overflow.*\u201d Intrinsics": [[357, "llvm-ssub-with-overflow-intrinsics"]], "\u201cllvm.stackguard\u201d Intrinsic": [[357, "llvm-stackguard-intrinsic"]], "\u201cllvm.stackprotector\u201d Intrinsic": [[357, "llvm-stackprotector-intrinsic"]], "\u201cllvm.stackrestore\u201d Intrinsic": [[357, "llvm-stackrestore-intrinsic"]], "\u201cllvm.stacksave\u201d Intrinsic": [[357, "llvm-stacksave-intrinsic"]], "\u201cllvm.strip.invariant.group\u201d Intrinsic": [[357, "llvm-strip-invariant-group-intrinsic"]], "\u201cllvm.thread.pointer\u201d Intrinsic": [[357, "llvm-thread-pointer-intrinsic"]], "\u201cllvm.trap\u201d Intrinsic": [[357, "llvm-trap-intrinsic"]], "\u201cllvm.trunc.*\u201d Intrinsic": [[357, "llvm-trunc-intrinsic"]], "\u201cllvm.type.checked.load\u201d Intrinsic": [[357, "llvm-type-checked-load-intrinsic"]], "\u201cllvm.type.test\u201d Intrinsic": [[357, "llvm-type-test-intrinsic"]], "\u201cllvm.uadd.sat.*\u201d Intrinsics": [[357, "llvm-uadd-sat-intrinsics"]], "\u201cllvm.uadd.with.overflow.*\u201d Intrinsics": [[357, "llvm-uadd-with-overflow-intrinsics"]], "\u201cllvm.umul.with.overflow.*\u201d Intrinsics": [[357, "llvm-umul-with-overflow-intrinsics"]], "\u201cllvm.usub.sat.*\u201d Intrinsics": [[357, "llvm-usub-sat-intrinsics"]], "\u201cllvm.usub.with.overflow.*\u201d Intrinsics": [[357, "llvm-usub-with-overflow-intrinsics"]], "\u201cllvm.va_copy\u201d Intrinsic": [[357, "llvm-va-copy-intrinsic"]], "\u201cllvm.va_end\u201d Intrinsic": [[357, "llvm-va-end-intrinsic"]], "\u201cllvm.va_start\u201d Intrinsic": [[357, "llvm-va-start-intrinsic"]], "\u201cllvm.var.annotation\u201d Intrinsic": [[357, "llvm-var-annotation-intrinsic"]], "\u201cload\u201d Instruction": [[357, "load-instruction"]], "\u201clshr\u201d Instruction": [[357, "lshr-instruction"]], "\u201cmul\u201d Instruction": [[357, "mul-instruction"]], "\u201cnoalias\u201d and \u201calias.scope\u201d Metadata": [[357, "noalias-and-alias-scope-metadata"]], "\u201cor\u201d Instruction": [[357, "or-instruction"]], "\u201cphi\u201d Instruction": [[357, "phi-instruction"]], "\u201cprof\u201d Metadata": [[357, "prof-metadata"]], "\u201cptrtoint .. to\u201d Instruction": [[357, "ptrtoint-to-instruction"]], "\u201crange\u201d Metadata": [[357, "range-metadata"]], "\u201cresume\u201d Instruction": [[357, "resume-instruction"]], "\u201cret\u201d Instruction": [[357, "ret-instruction"]], "\u201csdiv\u201d Instruction": [[357, "sdiv-instruction"]], "\u201cselect\u201d Instruction": [[357, "select-instruction"]], "\u201csext .. to\u201d Instruction": [[357, "sext-to-instruction"]], "\u201cshl\u201d Instruction": [[357, "shl-instruction"]], "\u201cshufflevector\u201d Instruction": [[357, "shufflevector-instruction"]], "\u201csitofp .. to\u201d Instruction": [[357, "sitofp-to-instruction"]], "\u201csrem\u201d Instruction": [[357, "srem-instruction"]], "\u201cstore\u201d Instruction": [[357, "store-instruction"]], "\u201csub\u201d Instruction": [[357, "sub-instruction"]], "\u201cswitch\u201d Instruction": [[357, "switch-instruction"]], "\u201ctbaa.struct\u201d Metadata": [[357, "tbaa-struct-metadata"]], "\u201ctbaa\u201d Metadata": [[357, "tbaa-metadata"]], "\u201ctrunc .. to\u201d Instruction": [[357, "trunc-to-instruction"]], "\u201ctype\u201d Metadata": [[357, "type-metadata"]], "\u201cudiv\u201d Instruction": [[357, "udiv-instruction"]], "\u201cuitofp .. to\u201d Instruction": [[357, "uitofp-to-instruction"]], "\u201cunpredictable\u201d Metadata": [[357, "unpredictable-metadata"]], "\u201cunreachable\u201d Instruction": [[357, "unreachable-instruction"]], "\u201curem\u201d Instruction": [[357, "urem-instruction"]], "\u201cva_arg\u201d Instruction": [[357, "va-arg-instruction"]], "\u201cxor\u201d Instruction": [[357, "xor-instruction"]], "\u201czext .. to\u201d Instruction": [[357, "zext-to-instruction"]]}, "docnames": ["AMDGPU/AMDGPUAsmGFX7", "AMDGPU/AMDGPUAsmGFX8", "AMDGPU/AMDGPUAsmGFX9", "AMDGPU/gfx7_addr_buf", "AMDGPU/gfx7_addr_ds", "AMDGPU/gfx7_addr_flat", "AMDGPU/gfx7_addr_mimg", "AMDGPU/gfx7_attr", "AMDGPU/gfx7_base_smem_addr", "AMDGPU/gfx7_base_smem_buf", "AMDGPU/gfx7_bimm16", "AMDGPU/gfx7_bimm32", "AMDGPU/gfx7_data_buf_atomic128", "AMDGPU/gfx7_data_buf_atomic32", "AMDGPU/gfx7_data_buf_atomic64", "AMDGPU/gfx7_data_mimg_atomic_cmp", "AMDGPU/gfx7_data_mimg_atomic_reg", "AMDGPU/gfx7_data_mimg_store", "AMDGPU/gfx7_dst_buf_128", "AMDGPU/gfx7_dst_buf_64", "AMDGPU/gfx7_dst_buf_96", "AMDGPU/gfx7_dst_buf_lds", "AMDGPU/gfx7_dst_flat_atomic32", "AMDGPU/gfx7_dst_flat_atomic64", "AMDGPU/gfx7_dst_mimg_gather4", "AMDGPU/gfx7_dst_mimg_regular", "AMDGPU/gfx7_fimm32", "AMDGPU/gfx7_hwreg", "AMDGPU/gfx7_label", "AMDGPU/gfx7_mod", "AMDGPU/gfx7_msg", "AMDGPU/gfx7_offset_buf", "AMDGPU/gfx7_offset_smem", "AMDGPU/gfx7_opt", "AMDGPU/gfx7_param", "AMDGPU/gfx7_ret", "AMDGPU/gfx7_rsrc_buf", "AMDGPU/gfx7_rsrc_mimg", "AMDGPU/gfx7_samp_mimg", "AMDGPU/gfx7_sdst128_0", "AMDGPU/gfx7_sdst256_0", "AMDGPU/gfx7_sdst32_0", "AMDGPU/gfx7_sdst32_1", "AMDGPU/gfx7_sdst32_2", "AMDGPU/gfx7_sdst512_0", "AMDGPU/gfx7_sdst64_0", "AMDGPU/gfx7_sdst64_1", "AMDGPU/gfx7_simm16", "AMDGPU/gfx7_src32_0", "AMDGPU/gfx7_src32_1", "AMDGPU/gfx7_src32_2", "AMDGPU/gfx7_src32_3", "AMDGPU/gfx7_src64_0", "AMDGPU/gfx7_src64_1", "AMDGPU/gfx7_src64_2", "AMDGPU/gfx7_src_exp", "AMDGPU/gfx7_ssrc32_0", "AMDGPU/gfx7_ssrc32_1", "AMDGPU/gfx7_ssrc32_2", "AMDGPU/gfx7_ssrc32_3", "AMDGPU/gfx7_ssrc32_4", "AMDGPU/gfx7_ssrc64_0", "AMDGPU/gfx7_ssrc64_1", "AMDGPU/gfx7_ssrc64_2", "AMDGPU/gfx7_ssrc64_3", "AMDGPU/gfx7_tgt", "AMDGPU/gfx7_type_dev", "AMDGPU/gfx7_uimm16", "AMDGPU/gfx7_vcc_64", "AMDGPU/gfx7_vdata128_0", "AMDGPU/gfx7_vdata32_0", "AMDGPU/gfx7_vdata64_0", "AMDGPU/gfx7_vdata96_0", "AMDGPU/gfx7_vdst128_0", "AMDGPU/gfx7_vdst32_0", "AMDGPU/gfx7_vdst64_0", "AMDGPU/gfx7_vdst96_0", "AMDGPU/gfx7_vsrc128_0", "AMDGPU/gfx7_vsrc32_0", "AMDGPU/gfx7_vsrc64_0", "AMDGPU/gfx7_waitcnt", "AMDGPU/gfx8_addr_buf", "AMDGPU/gfx8_addr_ds", "AMDGPU/gfx8_addr_flat", "AMDGPU/gfx8_addr_mimg", "AMDGPU/gfx8_attr", "AMDGPU/gfx8_base_smem_addr", "AMDGPU/gfx8_base_smem_buf", "AMDGPU/gfx8_bimm16", "AMDGPU/gfx8_bimm32", "AMDGPU/gfx8_data_buf_atomic128", "AMDGPU/gfx8_data_buf_atomic32", "AMDGPU/gfx8_data_buf_atomic64", "AMDGPU/gfx8_data_buf_d16_128", "AMDGPU/gfx8_data_buf_d16_32", "AMDGPU/gfx8_data_buf_d16_64", "AMDGPU/gfx8_data_buf_d16_96", "AMDGPU/gfx8_data_mimg_atomic_cmp", "AMDGPU/gfx8_data_mimg_atomic_reg", "AMDGPU/gfx8_data_mimg_store", "AMDGPU/gfx8_data_mimg_store_d16", "AMDGPU/gfx8_dst_buf_128", "AMDGPU/gfx8_dst_buf_64", "AMDGPU/gfx8_dst_buf_96", "AMDGPU/gfx8_dst_buf_d16_128", "AMDGPU/gfx8_dst_buf_d16_32", "AMDGPU/gfx8_dst_buf_d16_64", "AMDGPU/gfx8_dst_buf_d16_96", "AMDGPU/gfx8_dst_buf_lds", "AMDGPU/gfx8_dst_flat_atomic32", "AMDGPU/gfx8_dst_flat_atomic64", "AMDGPU/gfx8_dst_mimg_gather4", "AMDGPU/gfx8_dst_mimg_regular", "AMDGPU/gfx8_dst_mimg_regular_d16", "AMDGPU/gfx8_fimm16", "AMDGPU/gfx8_fimm32", "AMDGPU/gfx8_hwreg", "AMDGPU/gfx8_imm4", "AMDGPU/gfx8_label", "AMDGPU/gfx8_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx8_mod_sdwa_sext", "AMDGPU/gfx8_mod_vop3_abs_neg", "AMDGPU/gfx8_msg", "AMDGPU/gfx8_offset_buf", "AMDGPU/gfx8_offset_smem_load", "AMDGPU/gfx8_offset_smem_store", "AMDGPU/gfx8_opt", "AMDGPU/gfx8_param", "AMDGPU/gfx8_perm_smem", "AMDGPU/gfx8_ret", "AMDGPU/gfx8_rsrc_buf", "AMDGPU/gfx8_rsrc_mimg", "AMDGPU/gfx8_samp_mimg", "AMDGPU/gfx8_sdata128_0", "AMDGPU/gfx8_sdata32_0", "AMDGPU/gfx8_sdata64_0", "AMDGPU/gfx8_sdst128_0", "AMDGPU/gfx8_sdst256_0", "AMDGPU/gfx8_sdst32_0", "AMDGPU/gfx8_sdst32_1", "AMDGPU/gfx8_sdst32_2", "AMDGPU/gfx8_sdst512_0", "AMDGPU/gfx8_sdst64_0", "AMDGPU/gfx8_sdst64_1", "AMDGPU/gfx8_simm16", "AMDGPU/gfx8_src32_0", "AMDGPU/gfx8_src32_1", "AMDGPU/gfx8_src64_0", "AMDGPU/gfx8_src64_1", "AMDGPU/gfx8_src_exp", "AMDGPU/gfx8_ssrc32_0", "AMDGPU/gfx8_ssrc32_1", "AMDGPU/gfx8_ssrc32_2", "AMDGPU/gfx8_ssrc32_3", "AMDGPU/gfx8_ssrc32_4", "AMDGPU/gfx8_ssrc64_0", "AMDGPU/gfx8_ssrc64_1", "AMDGPU/gfx8_ssrc64_2", "AMDGPU/gfx8_ssrc64_3", "AMDGPU/gfx8_tgt", "AMDGPU/gfx8_type_dev", "AMDGPU/gfx8_uimm16", "AMDGPU/gfx8_vcc_64", "AMDGPU/gfx8_vdata128_0", "AMDGPU/gfx8_vdata32_0", "AMDGPU/gfx8_vdata64_0", "AMDGPU/gfx8_vdata96_0", "AMDGPU/gfx8_vdst128_0", "AMDGPU/gfx8_vdst32_0", "AMDGPU/gfx8_vdst64_0", "AMDGPU/gfx8_vdst96_0", "AMDGPU/gfx8_vsrc128_0", "AMDGPU/gfx8_vsrc32_0", "AMDGPU/gfx8_vsrc64_0", "AMDGPU/gfx8_waitcnt", "AMDGPU/gfx9_addr_buf", "AMDGPU/gfx9_addr_ds", "AMDGPU/gfx9_addr_flat", "AMDGPU/gfx9_addr_mimg", "AMDGPU/gfx9_attr", "AMDGPU/gfx9_base_smem_addr", "AMDGPU/gfx9_base_smem_buf", "AMDGPU/gfx9_base_smem_scratch", "AMDGPU/gfx9_bimm16", "AMDGPU/gfx9_bimm32", "AMDGPU/gfx9_data_buf_atomic128", "AMDGPU/gfx9_data_buf_atomic32", "AMDGPU/gfx9_data_buf_atomic64", "AMDGPU/gfx9_data_mimg_atomic_cmp", "AMDGPU/gfx9_data_mimg_atomic_reg", "AMDGPU/gfx9_data_mimg_store", "AMDGPU/gfx9_data_mimg_store_d16", "AMDGPU/gfx9_data_smem_atomic128", "AMDGPU/gfx9_data_smem_atomic32", "AMDGPU/gfx9_data_smem_atomic64", "AMDGPU/gfx9_dst_buf_128", "AMDGPU/gfx9_dst_buf_32", "AMDGPU/gfx9_dst_buf_64", "AMDGPU/gfx9_dst_buf_96", "AMDGPU/gfx9_dst_buf_lds", "AMDGPU/gfx9_dst_flat_atomic32", "AMDGPU/gfx9_dst_flat_atomic64", "AMDGPU/gfx9_dst_mimg_gather4", "AMDGPU/gfx9_dst_mimg_regular", "AMDGPU/gfx9_dst_mimg_regular_d16", "AMDGPU/gfx9_fimm16", "AMDGPU/gfx9_fimm32", "AMDGPU/gfx9_hwreg", "AMDGPU/gfx9_imm4", "AMDGPU/gfx9_label", "AMDGPU/gfx9_mad_type_dev", "AMDGPU/gfx9_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx9_mod_sdwa_sext", "AMDGPU/gfx9_mod_vop3_abs_neg", "AMDGPU/gfx9_msg", "AMDGPU/gfx9_offset_buf", "AMDGPU/gfx9_offset_smem_buf", "AMDGPU/gfx9_offset_smem_plain", "AMDGPU/gfx9_opt", "AMDGPU/gfx9_param", "AMDGPU/gfx9_perm_smem", "AMDGPU/gfx9_ret", "AMDGPU/gfx9_rsrc_buf", "AMDGPU/gfx9_rsrc_mimg", "AMDGPU/gfx9_saddr_flat_global", "AMDGPU/gfx9_saddr_flat_scratch", "AMDGPU/gfx9_samp_mimg", "AMDGPU/gfx9_sdata128_0", "AMDGPU/gfx9_sdata32_0", "AMDGPU/gfx9_sdata64_0", "AMDGPU/gfx9_sdst128_0", "AMDGPU/gfx9_sdst256_0", "AMDGPU/gfx9_sdst32_0", "AMDGPU/gfx9_sdst32_1", "AMDGPU/gfx9_sdst32_2", "AMDGPU/gfx9_sdst512_0", "AMDGPU/gfx9_sdst64_0", "AMDGPU/gfx9_sdst64_1", "AMDGPU/gfx9_simm16", "AMDGPU/gfx9_src32_0", "AMDGPU/gfx9_src32_1", "AMDGPU/gfx9_src64_0", "AMDGPU/gfx9_src64_1", "AMDGPU/gfx9_src_exp", "AMDGPU/gfx9_ssrc32_0", "AMDGPU/gfx9_ssrc32_1", "AMDGPU/gfx9_ssrc32_2", "AMDGPU/gfx9_ssrc32_3", "AMDGPU/gfx9_ssrc32_4", "AMDGPU/gfx9_ssrc64_0", "AMDGPU/gfx9_ssrc64_1", "AMDGPU/gfx9_ssrc64_2", "AMDGPU/gfx9_ssrc64_3", "AMDGPU/gfx9_tgt", "AMDGPU/gfx9_type_dev", "AMDGPU/gfx9_uimm16", "AMDGPU/gfx9_vaddr_flat_global", "AMDGPU/gfx9_vaddr_flat_scratch", "AMDGPU/gfx9_vcc_64", "AMDGPU/gfx9_vdata128_0", "AMDGPU/gfx9_vdata32_0", "AMDGPU/gfx9_vdata64_0", "AMDGPU/gfx9_vdata96_0", "AMDGPU/gfx9_vdst128_0", "AMDGPU/gfx9_vdst32_0", "AMDGPU/gfx9_vdst64_0", "AMDGPU/gfx9_vdst96_0", "AMDGPU/gfx9_vsrc128_0", "AMDGPU/gfx9_vsrc32_0", "AMDGPU/gfx9_vsrc64_0", "AMDGPU/gfx9_waitcnt", "AMDGPUInstructionNotation", "AMDGPUInstructionSyntax", "AMDGPUModifierSyntax", "AMDGPUOperandSyntax", "AMDGPUUsage", "AdvancedBuilds", "AliasAnalysis", "Atomics", "Benchmarking", "BigEndianNEON", "BitCodeFormat", "BlockFrequencyTerminology", "BranchWeightMetadata", "BugLifeCycle", "Bugpoint", "CFIVerify", "CMake", "CMakePrimer", "CodeGenerator", "CodeOfConduct", "CodingStandards", "CommandGuide/FileCheck", "CommandGuide/bugpoint", "CommandGuide/dsymutil", "CommandGuide/index", "CommandGuide/lit", "CommandGuide/llc", "CommandGuide/lli", "CommandGuide/llvm-ar", "CommandGuide/llvm-as", "CommandGuide/llvm-bcanalyzer", "CommandGuide/llvm-build", "CommandGuide/llvm-config", "CommandGuide/llvm-cov", "CommandGuide/llvm-cxxmap", "CommandGuide/llvm-diff", "CommandGuide/llvm-dis", "CommandGuide/llvm-dwarfdump", "CommandGuide/llvm-exegesis", "CommandGuide/llvm-extract", "CommandGuide/llvm-lib", "CommandGuide/llvm-link", "CommandGuide/llvm-mca", "CommandGuide/llvm-nm", "CommandGuide/llvm-objdump", "CommandGuide/llvm-pdbutil", "CommandGuide/llvm-profdata", "CommandGuide/llvm-readobj", "CommandGuide/llvm-stress", "CommandGuide/llvm-symbolizer", "CommandGuide/opt", "CommandGuide/tblgen", "CommandLine", "CompileCudaWithLLVM", "CompilerWriterInfo", "Contributing", "Coroutines", "CoverageMappingFormat", "DebuggingJITedCode", "DeveloperPolicy", "Docker", "ExceptionHandling", "ExtendingLLVM", "Extensions", "FAQ", "FaultMaps", "Frontend/PerformanceTips", "FuzzingLLVM", "GarbageCollection", "GetElementPtr", "GettingStarted", "GettingStartedVS", "GlobalISel", "GoldPlugin", "HowToAddABuilder", "HowToBuildOnARM", "HowToBuildWithPGO", "HowToCrossCompileBuiltinsOnArm", "HowToCrossCompileLLVM", "HowToReleaseLLVM", "HowToSetUpLLVMStyleRTTI", "HowToSubmitABug", "HowToUseAttributes", "HowToUseInstrMappings", "InAlloca", "LLVMBuild", "LangRef", "Lexicon", "LibFuzzer", "LinkTimeOptimization", "MCJITDesignAndImplementation", "MIRLangRef", "MarkdownQuickstartTemplate", "MarkedUpDisassembly", "MemorySSA", "MergeFunctions", "NVPTXUsage", "OptBisect", "PDB/CodeViewSymbols", "PDB/CodeViewTypes", "PDB/DbiStream", "PDB/GlobalStream", "PDB/HashStream", "PDB/ModiStream", "PDB/MsfFile", "PDB/PdbStream", "PDB/PublicStream", "PDB/TpiStream", "PDB/index", "Packaging", "Passes", "Phabricator", "ProgrammersManual", "Projects", "Proposals/GitHubMove", "Proposals/TestSuite", "Proposals/VectorizationPlan", "ReleaseNotes", "ReleaseProcess", "ReportingGuide", "ScudoHardenedAllocator", "SegmentedStacks", "SourceLevelDebugging", "SpeculativeLoadHardening", "SphinxQuickstartTemplate", "StackMaps", "StackSafetyAnalysis", "Statepoints", "SupportLibrary", "SystemLibrary", "TableGen/BackEnds", "TableGen/Deficiencies", "TableGen/LangIntro", "TableGen/LangRef", "TableGen/index", "TableGenFundamentals", "TestSuiteGuide", "TestSuiteMakefileGuide", "TestingGuide", "TransformMetadata", "TypeMetadata", "Vectorizers", "WritingAnLLVMBackend", "WritingAnLLVMPass", "XRay", "XRayExample", "XRayFDRFormat", "YamlIO", "index", "tutorial/BuildingAJIT1", "tutorial/BuildingAJIT2", "tutorial/BuildingAJIT3", "tutorial/BuildingAJIT4", "tutorial/BuildingAJIT5", "tutorial/LangImpl01", "tutorial/LangImpl02", "tutorial/LangImpl03", "tutorial/LangImpl04", "tutorial/LangImpl05", "tutorial/LangImpl06", "tutorial/LangImpl07", "tutorial/LangImpl08", "tutorial/LangImpl09", "tutorial/LangImpl10", "tutorial/OCamlLangImpl1", "tutorial/OCamlLangImpl2", "tutorial/OCamlLangImpl3", "tutorial/OCamlLangImpl4", "tutorial/OCamlLangImpl5", "tutorial/OCamlLangImpl6", "tutorial/OCamlLangImpl7", "tutorial/OCamlLangImpl8", "tutorial/index", "yaml2obj"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["AMDGPU/AMDGPUAsmGFX7.rst", "AMDGPU/AMDGPUAsmGFX8.rst", "AMDGPU/AMDGPUAsmGFX9.rst", "AMDGPU/gfx7_addr_buf.rst", "AMDGPU/gfx7_addr_ds.rst", "AMDGPU/gfx7_addr_flat.rst", "AMDGPU/gfx7_addr_mimg.rst", "AMDGPU/gfx7_attr.rst", "AMDGPU/gfx7_base_smem_addr.rst", "AMDGPU/gfx7_base_smem_buf.rst", "AMDGPU/gfx7_bimm16.rst", "AMDGPU/gfx7_bimm32.rst", "AMDGPU/gfx7_data_buf_atomic128.rst", "AMDGPU/gfx7_data_buf_atomic32.rst", "AMDGPU/gfx7_data_buf_atomic64.rst", "AMDGPU/gfx7_data_mimg_atomic_cmp.rst", "AMDGPU/gfx7_data_mimg_atomic_reg.rst", "AMDGPU/gfx7_data_mimg_store.rst", "AMDGPU/gfx7_dst_buf_128.rst", "AMDGPU/gfx7_dst_buf_64.rst", "AMDGPU/gfx7_dst_buf_96.rst", "AMDGPU/gfx7_dst_buf_lds.rst", "AMDGPU/gfx7_dst_flat_atomic32.rst", "AMDGPU/gfx7_dst_flat_atomic64.rst", "AMDGPU/gfx7_dst_mimg_gather4.rst", "AMDGPU/gfx7_dst_mimg_regular.rst", "AMDGPU/gfx7_fimm32.rst", "AMDGPU/gfx7_hwreg.rst", "AMDGPU/gfx7_label.rst", "AMDGPU/gfx7_mod.rst", "AMDGPU/gfx7_msg.rst", "AMDGPU/gfx7_offset_buf.rst", "AMDGPU/gfx7_offset_smem.rst", "AMDGPU/gfx7_opt.rst", "AMDGPU/gfx7_param.rst", "AMDGPU/gfx7_ret.rst", "AMDGPU/gfx7_rsrc_buf.rst", "AMDGPU/gfx7_rsrc_mimg.rst", "AMDGPU/gfx7_samp_mimg.rst", "AMDGPU/gfx7_sdst128_0.rst", "AMDGPU/gfx7_sdst256_0.rst", "AMDGPU/gfx7_sdst32_0.rst", "AMDGPU/gfx7_sdst32_1.rst", "AMDGPU/gfx7_sdst32_2.rst", "AMDGPU/gfx7_sdst512_0.rst", "AMDGPU/gfx7_sdst64_0.rst", "AMDGPU/gfx7_sdst64_1.rst", "AMDGPU/gfx7_simm16.rst", "AMDGPU/gfx7_src32_0.rst", "AMDGPU/gfx7_src32_1.rst", "AMDGPU/gfx7_src32_2.rst", "AMDGPU/gfx7_src32_3.rst", "AMDGPU/gfx7_src64_0.rst", "AMDGPU/gfx7_src64_1.rst", "AMDGPU/gfx7_src64_2.rst", "AMDGPU/gfx7_src_exp.rst", "AMDGPU/gfx7_ssrc32_0.rst", "AMDGPU/gfx7_ssrc32_1.rst", "AMDGPU/gfx7_ssrc32_2.rst", "AMDGPU/gfx7_ssrc32_3.rst", "AMDGPU/gfx7_ssrc32_4.rst", "AMDGPU/gfx7_ssrc64_0.rst", "AMDGPU/gfx7_ssrc64_1.rst", "AMDGPU/gfx7_ssrc64_2.rst", "AMDGPU/gfx7_ssrc64_3.rst", "AMDGPU/gfx7_tgt.rst", "AMDGPU/gfx7_type_dev.rst", "AMDGPU/gfx7_uimm16.rst", "AMDGPU/gfx7_vcc_64.rst", "AMDGPU/gfx7_vdata128_0.rst", "AMDGPU/gfx7_vdata32_0.rst", "AMDGPU/gfx7_vdata64_0.rst", "AMDGPU/gfx7_vdata96_0.rst", "AMDGPU/gfx7_vdst128_0.rst", "AMDGPU/gfx7_vdst32_0.rst", "AMDGPU/gfx7_vdst64_0.rst", "AMDGPU/gfx7_vdst96_0.rst", "AMDGPU/gfx7_vsrc128_0.rst", "AMDGPU/gfx7_vsrc32_0.rst", "AMDGPU/gfx7_vsrc64_0.rst", "AMDGPU/gfx7_waitcnt.rst", "AMDGPU/gfx8_addr_buf.rst", "AMDGPU/gfx8_addr_ds.rst", "AMDGPU/gfx8_addr_flat.rst", "AMDGPU/gfx8_addr_mimg.rst", "AMDGPU/gfx8_attr.rst", "AMDGPU/gfx8_base_smem_addr.rst", "AMDGPU/gfx8_base_smem_buf.rst", "AMDGPU/gfx8_bimm16.rst", "AMDGPU/gfx8_bimm32.rst", "AMDGPU/gfx8_data_buf_atomic128.rst", "AMDGPU/gfx8_data_buf_atomic32.rst", "AMDGPU/gfx8_data_buf_atomic64.rst", "AMDGPU/gfx8_data_buf_d16_128.rst", "AMDGPU/gfx8_data_buf_d16_32.rst", "AMDGPU/gfx8_data_buf_d16_64.rst", "AMDGPU/gfx8_data_buf_d16_96.rst", "AMDGPU/gfx8_data_mimg_atomic_cmp.rst", "AMDGPU/gfx8_data_mimg_atomic_reg.rst", "AMDGPU/gfx8_data_mimg_store.rst", "AMDGPU/gfx8_data_mimg_store_d16.rst", "AMDGPU/gfx8_dst_buf_128.rst", "AMDGPU/gfx8_dst_buf_64.rst", "AMDGPU/gfx8_dst_buf_96.rst", "AMDGPU/gfx8_dst_buf_d16_128.rst", "AMDGPU/gfx8_dst_buf_d16_32.rst", "AMDGPU/gfx8_dst_buf_d16_64.rst", "AMDGPU/gfx8_dst_buf_d16_96.rst", "AMDGPU/gfx8_dst_buf_lds.rst", "AMDGPU/gfx8_dst_flat_atomic32.rst", "AMDGPU/gfx8_dst_flat_atomic64.rst", "AMDGPU/gfx8_dst_mimg_gather4.rst", "AMDGPU/gfx8_dst_mimg_regular.rst", "AMDGPU/gfx8_dst_mimg_regular_d16.rst", "AMDGPU/gfx8_fimm16.rst", "AMDGPU/gfx8_fimm32.rst", "AMDGPU/gfx8_hwreg.rst", "AMDGPU/gfx8_imm4.rst", "AMDGPU/gfx8_label.rst", "AMDGPU/gfx8_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx8_mod_sdwa_sext.rst", "AMDGPU/gfx8_mod_vop3_abs_neg.rst", "AMDGPU/gfx8_msg.rst", "AMDGPU/gfx8_offset_buf.rst", "AMDGPU/gfx8_offset_smem_load.rst", "AMDGPU/gfx8_offset_smem_store.rst", "AMDGPU/gfx8_opt.rst", "AMDGPU/gfx8_param.rst", "AMDGPU/gfx8_perm_smem.rst", "AMDGPU/gfx8_ret.rst", "AMDGPU/gfx8_rsrc_buf.rst", "AMDGPU/gfx8_rsrc_mimg.rst", "AMDGPU/gfx8_samp_mimg.rst", "AMDGPU/gfx8_sdata128_0.rst", "AMDGPU/gfx8_sdata32_0.rst", "AMDGPU/gfx8_sdata64_0.rst", "AMDGPU/gfx8_sdst128_0.rst", "AMDGPU/gfx8_sdst256_0.rst", "AMDGPU/gfx8_sdst32_0.rst", "AMDGPU/gfx8_sdst32_1.rst", "AMDGPU/gfx8_sdst32_2.rst", "AMDGPU/gfx8_sdst512_0.rst", "AMDGPU/gfx8_sdst64_0.rst", "AMDGPU/gfx8_sdst64_1.rst", "AMDGPU/gfx8_simm16.rst", "AMDGPU/gfx8_src32_0.rst", "AMDGPU/gfx8_src32_1.rst", "AMDGPU/gfx8_src64_0.rst", "AMDGPU/gfx8_src64_1.rst", "AMDGPU/gfx8_src_exp.rst", "AMDGPU/gfx8_ssrc32_0.rst", "AMDGPU/gfx8_ssrc32_1.rst", "AMDGPU/gfx8_ssrc32_2.rst", "AMDGPU/gfx8_ssrc32_3.rst", "AMDGPU/gfx8_ssrc32_4.rst", "AMDGPU/gfx8_ssrc64_0.rst", "AMDGPU/gfx8_ssrc64_1.rst", "AMDGPU/gfx8_ssrc64_2.rst", "AMDGPU/gfx8_ssrc64_3.rst", "AMDGPU/gfx8_tgt.rst", "AMDGPU/gfx8_type_dev.rst", "AMDGPU/gfx8_uimm16.rst", "AMDGPU/gfx8_vcc_64.rst", "AMDGPU/gfx8_vdata128_0.rst", "AMDGPU/gfx8_vdata32_0.rst", "AMDGPU/gfx8_vdata64_0.rst", "AMDGPU/gfx8_vdata96_0.rst", "AMDGPU/gfx8_vdst128_0.rst", "AMDGPU/gfx8_vdst32_0.rst", "AMDGPU/gfx8_vdst64_0.rst", "AMDGPU/gfx8_vdst96_0.rst", "AMDGPU/gfx8_vsrc128_0.rst", "AMDGPU/gfx8_vsrc32_0.rst", "AMDGPU/gfx8_vsrc64_0.rst", "AMDGPU/gfx8_waitcnt.rst", "AMDGPU/gfx9_addr_buf.rst", "AMDGPU/gfx9_addr_ds.rst", "AMDGPU/gfx9_addr_flat.rst", "AMDGPU/gfx9_addr_mimg.rst", "AMDGPU/gfx9_attr.rst", "AMDGPU/gfx9_base_smem_addr.rst", "AMDGPU/gfx9_base_smem_buf.rst", "AMDGPU/gfx9_base_smem_scratch.rst", "AMDGPU/gfx9_bimm16.rst", "AMDGPU/gfx9_bimm32.rst", "AMDGPU/gfx9_data_buf_atomic128.rst", "AMDGPU/gfx9_data_buf_atomic32.rst", "AMDGPU/gfx9_data_buf_atomic64.rst", "AMDGPU/gfx9_data_mimg_atomic_cmp.rst", "AMDGPU/gfx9_data_mimg_atomic_reg.rst", "AMDGPU/gfx9_data_mimg_store.rst", "AMDGPU/gfx9_data_mimg_store_d16.rst", "AMDGPU/gfx9_data_smem_atomic128.rst", "AMDGPU/gfx9_data_smem_atomic32.rst", "AMDGPU/gfx9_data_smem_atomic64.rst", "AMDGPU/gfx9_dst_buf_128.rst", "AMDGPU/gfx9_dst_buf_32.rst", "AMDGPU/gfx9_dst_buf_64.rst", "AMDGPU/gfx9_dst_buf_96.rst", "AMDGPU/gfx9_dst_buf_lds.rst", "AMDGPU/gfx9_dst_flat_atomic32.rst", "AMDGPU/gfx9_dst_flat_atomic64.rst", "AMDGPU/gfx9_dst_mimg_gather4.rst", "AMDGPU/gfx9_dst_mimg_regular.rst", "AMDGPU/gfx9_dst_mimg_regular_d16.rst", "AMDGPU/gfx9_fimm16.rst", "AMDGPU/gfx9_fimm32.rst", "AMDGPU/gfx9_hwreg.rst", "AMDGPU/gfx9_imm4.rst", "AMDGPU/gfx9_label.rst", "AMDGPU/gfx9_mad_type_dev.rst", "AMDGPU/gfx9_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx9_mod_sdwa_sext.rst", "AMDGPU/gfx9_mod_vop3_abs_neg.rst", "AMDGPU/gfx9_msg.rst", "AMDGPU/gfx9_offset_buf.rst", "AMDGPU/gfx9_offset_smem_buf.rst", "AMDGPU/gfx9_offset_smem_plain.rst", "AMDGPU/gfx9_opt.rst", "AMDGPU/gfx9_param.rst", "AMDGPU/gfx9_perm_smem.rst", "AMDGPU/gfx9_ret.rst", "AMDGPU/gfx9_rsrc_buf.rst", "AMDGPU/gfx9_rsrc_mimg.rst", "AMDGPU/gfx9_saddr_flat_global.rst", "AMDGPU/gfx9_saddr_flat_scratch.rst", "AMDGPU/gfx9_samp_mimg.rst", "AMDGPU/gfx9_sdata128_0.rst", "AMDGPU/gfx9_sdata32_0.rst", "AMDGPU/gfx9_sdata64_0.rst", "AMDGPU/gfx9_sdst128_0.rst", "AMDGPU/gfx9_sdst256_0.rst", "AMDGPU/gfx9_sdst32_0.rst", "AMDGPU/gfx9_sdst32_1.rst", "AMDGPU/gfx9_sdst32_2.rst", "AMDGPU/gfx9_sdst512_0.rst", "AMDGPU/gfx9_sdst64_0.rst", "AMDGPU/gfx9_sdst64_1.rst", "AMDGPU/gfx9_simm16.rst", "AMDGPU/gfx9_src32_0.rst", "AMDGPU/gfx9_src32_1.rst", "AMDGPU/gfx9_src64_0.rst", "AMDGPU/gfx9_src64_1.rst", "AMDGPU/gfx9_src_exp.rst", "AMDGPU/gfx9_ssrc32_0.rst", "AMDGPU/gfx9_ssrc32_1.rst", "AMDGPU/gfx9_ssrc32_2.rst", "AMDGPU/gfx9_ssrc32_3.rst", "AMDGPU/gfx9_ssrc32_4.rst", "AMDGPU/gfx9_ssrc64_0.rst", "AMDGPU/gfx9_ssrc64_1.rst", "AMDGPU/gfx9_ssrc64_2.rst", "AMDGPU/gfx9_ssrc64_3.rst", "AMDGPU/gfx9_tgt.rst", "AMDGPU/gfx9_type_dev.rst", "AMDGPU/gfx9_uimm16.rst", "AMDGPU/gfx9_vaddr_flat_global.rst", "AMDGPU/gfx9_vaddr_flat_scratch.rst", "AMDGPU/gfx9_vcc_64.rst", "AMDGPU/gfx9_vdata128_0.rst", "AMDGPU/gfx9_vdata32_0.rst", "AMDGPU/gfx9_vdata64_0.rst", "AMDGPU/gfx9_vdata96_0.rst", "AMDGPU/gfx9_vdst128_0.rst", "AMDGPU/gfx9_vdst32_0.rst", "AMDGPU/gfx9_vdst64_0.rst", "AMDGPU/gfx9_vdst96_0.rst", "AMDGPU/gfx9_vsrc128_0.rst", "AMDGPU/gfx9_vsrc32_0.rst", "AMDGPU/gfx9_vsrc64_0.rst", "AMDGPU/gfx9_waitcnt.rst", "AMDGPUInstructionNotation.rst", "AMDGPUInstructionSyntax.rst", "AMDGPUModifierSyntax.rst", "AMDGPUOperandSyntax.rst", "AMDGPUUsage.rst", "AdvancedBuilds.rst", "AliasAnalysis.rst", "Atomics.rst", "Benchmarking.rst", "BigEndianNEON.rst", "BitCodeFormat.rst", "BlockFrequencyTerminology.rst", "BranchWeightMetadata.rst", "BugLifeCycle.rst", "Bugpoint.rst", "CFIVerify.rst", "CMake.rst", "CMakePrimer.rst", "CodeGenerator.rst", "CodeOfConduct.rst", "CodingStandards.rst", "CommandGuide/FileCheck.rst", "CommandGuide/bugpoint.rst", "CommandGuide/dsymutil.rst", "CommandGuide/index.rst", "CommandGuide/lit.rst", "CommandGuide/llc.rst", "CommandGuide/lli.rst", "CommandGuide/llvm-ar.rst", "CommandGuide/llvm-as.rst", "CommandGuide/llvm-bcanalyzer.rst", "CommandGuide/llvm-build.rst", "CommandGuide/llvm-config.rst", "CommandGuide/llvm-cov.rst", "CommandGuide/llvm-cxxmap.rst", "CommandGuide/llvm-diff.rst", "CommandGuide/llvm-dis.rst", "CommandGuide/llvm-dwarfdump.rst", "CommandGuide/llvm-exegesis.rst", "CommandGuide/llvm-extract.rst", "CommandGuide/llvm-lib.rst", "CommandGuide/llvm-link.rst", "CommandGuide/llvm-mca.rst", "CommandGuide/llvm-nm.rst", "CommandGuide/llvm-objdump.rst", "CommandGuide/llvm-pdbutil.rst", "CommandGuide/llvm-profdata.rst", "CommandGuide/llvm-readobj.rst", "CommandGuide/llvm-stress.rst", "CommandGuide/llvm-symbolizer.rst", "CommandGuide/opt.rst", "CommandGuide/tblgen.rst", "CommandLine.rst", "CompileCudaWithLLVM.rst", "CompilerWriterInfo.rst", "Contributing.rst", "Coroutines.rst", "CoverageMappingFormat.rst", "DebuggingJITedCode.rst", "DeveloperPolicy.rst", "Docker.rst", "ExceptionHandling.rst", "ExtendingLLVM.rst", "Extensions.rst", "FAQ.rst", "FaultMaps.rst", "Frontend/PerformanceTips.rst", "FuzzingLLVM.rst", "GarbageCollection.rst", "GetElementPtr.rst", "GettingStarted.rst", "GettingStartedVS.rst", "GlobalISel.rst", "GoldPlugin.rst", "HowToAddABuilder.rst", "HowToBuildOnARM.rst", "HowToBuildWithPGO.rst", "HowToCrossCompileBuiltinsOnArm.rst", "HowToCrossCompileLLVM.rst", "HowToReleaseLLVM.rst", "HowToSetUpLLVMStyleRTTI.rst", "HowToSubmitABug.rst", "HowToUseAttributes.rst", "HowToUseInstrMappings.rst", "InAlloca.rst", "LLVMBuild.rst", "LangRef.rst", "Lexicon.rst", "LibFuzzer.rst", "LinkTimeOptimization.rst", "MCJITDesignAndImplementation.rst", "MIRLangRef.rst", "MarkdownQuickstartTemplate.md", "MarkedUpDisassembly.rst", "MemorySSA.rst", "MergeFunctions.rst", "NVPTXUsage.rst", "OptBisect.rst", "PDB/CodeViewSymbols.rst", "PDB/CodeViewTypes.rst", "PDB/DbiStream.rst", "PDB/GlobalStream.rst", "PDB/HashStream.rst", "PDB/ModiStream.rst", "PDB/MsfFile.rst", "PDB/PdbStream.rst", "PDB/PublicStream.rst", "PDB/TpiStream.rst", "PDB/index.rst", "Packaging.rst", "Passes.rst", "Phabricator.rst", "ProgrammersManual.rst", "Projects.rst", "Proposals/GitHubMove.rst", "Proposals/TestSuite.rst", "Proposals/VectorizationPlan.rst", "ReleaseNotes.rst", "ReleaseProcess.rst", "ReportingGuide.rst", "ScudoHardenedAllocator.rst", "SegmentedStacks.rst", "SourceLevelDebugging.rst", "SpeculativeLoadHardening.md", "SphinxQuickstartTemplate.rst", "StackMaps.rst", "StackSafetyAnalysis.rst", "Statepoints.rst", "SupportLibrary.rst", "SystemLibrary.rst", "TableGen/BackEnds.rst", "TableGen/Deficiencies.rst", "TableGen/LangIntro.rst", "TableGen/LangRef.rst", "TableGen/index.rst", "TableGenFundamentals.rst", "TestSuiteGuide.md", "TestSuiteMakefileGuide.rst", "TestingGuide.rst", "TransformMetadata.rst", "TypeMetadata.rst", "Vectorizers.rst", "WritingAnLLVMBackend.rst", "WritingAnLLVMPass.rst", "XRay.rst", "XRayExample.rst", "XRayFDRFormat.rst", "YamlIO.rst", "index.rst", "tutorial/BuildingAJIT1.rst", "tutorial/BuildingAJIT2.rst", "tutorial/BuildingAJIT3.rst", "tutorial/BuildingAJIT4.rst", "tutorial/BuildingAJIT5.rst", "tutorial/LangImpl01.rst", "tutorial/LangImpl02.rst", "tutorial/LangImpl03.rst", "tutorial/LangImpl04.rst", "tutorial/LangImpl05.rst", "tutorial/LangImpl06.rst", "tutorial/LangImpl07.rst", "tutorial/LangImpl08.rst", "tutorial/LangImpl09.rst", "tutorial/LangImpl10.rst", "tutorial/OCamlLangImpl1.rst", "tutorial/OCamlLangImpl2.rst", "tutorial/OCamlLangImpl3.rst", "tutorial/OCamlLangImpl4.rst", "tutorial/OCamlLangImpl5.rst", "tutorial/OCamlLangImpl6.rst", "tutorial/OCamlLangImpl7.rst", "tutorial/OCamlLangImpl8.rst", "tutorial/index.rst", "yaml2obj.rst"], "indexentries": {"--all": [[308, "cmdoption-a", false]], "--all-blocks": [[304, "cmdoption-llvm-cov-gcov-a", false]], "--allow-deprecated-dag-overlap": [[292, "cmdoption-allow-deprecated-dag-overlap", false]], "--apple-names": [[308, "cmdoption-debug-abbrev", false]], "--apple-namespaces": [[308, "cmdoption-debug-abbrev", false]], "--apple-objc": [[308, "cmdoption-debug-abbrev", false]], "--apple-types": [[308, "cmdoption-debug-abbrev", false]], "--arch": [[294, "cmdoption-arch", false], [308, "cmdoption-arch", false]], "--branch-counts": [[304, "cmdoption-llvm-cov-gcov-c", false]], "--branch-probabilities": [[304, "cmdoption-llvm-cov-gcov-b", false]], "--check-prefix": [[292, "cmdoption-check-prefix", false]], "--check-prefixes": [[292, "cmdoption-check-prefixes", false]], "--color": [[292, "cmdoption-color", false]], "--config-prefix": [[296, "cmdoption-config-prefix", false]], "--debug": [[296, "cmdoption-debug", false]], "--debug-abbrev": [[308, "cmdoption-debug-abbrev", false]], "--debug-aranges": [[308, "cmdoption-debug-abbrev", false]], "--debug-cu-index": [[308, "cmdoption-debug-abbrev", false]], "--debug-frame": [[308, "cmdoption-debug-abbrev", false]], "--debug-gnu-pubnames": [[308, "cmdoption-debug-abbrev", false]], "--debug-gnu-pubtypes": [[308, "cmdoption-debug-abbrev", false]], "--debug-info": [[308, "cmdoption-debug-abbrev", false]], "--debug-line": [[308, "cmdoption-debug-abbrev", false]], "--debug-loc": [[308, "cmdoption-debug-abbrev", false]], "--debug-macro": [[308, "cmdoption-debug-abbrev", false]], "--debug-pubnames": [[308, "cmdoption-debug-abbrev", false]], "--debug-pubtypes": [[308, "cmdoption-debug-abbrev", false]], "--debug-ranges": [[308, "cmdoption-debug-abbrev", false]], "--debug-str": [[308, "cmdoption-debug-abbrev", false]], "--debug-str-offsets": [[308, "cmdoption-debug-abbrev", false]], "--debug-syms": [[314, "cmdoption-llvm-nm-debug-syms", false]], "--debug-tu-index": [[308, "cmdoption-debug-abbrev", false]], "--debug-types": [[308, "cmdoption-debug-abbrev", false]], "--defined-only": [[314, "cmdoption-llvm-nm-defined-only", false]], "--diff": [[308, "cmdoption-diff", false]], "--disable-excess-fp-precision": [[297, "cmdoption-disable-excess-fp-precision", false]], "--dump-debug-map": [[294, "cmdoption-dump-debug-map", false]], "--dump-input": [[292, "cmdoption-dump-input", false]], "--dump-input-on-failure": [[292, "cmdoption-dump-input-on-failure", false]], "--dynamic": [[314, "cmdoption-llvm-nm-dynamic", false]], "--echo-all-commands": [[296, "cmdoption-vv", false]], "--eh-frame": [[308, "cmdoption-debug-abbrev", false]], "--enable-no-infs-fp-math": [[297, "cmdoption-enable-no-infs-fp-math", false]], "--enable-no-nans-fp-math": [[297, "cmdoption-enable-no-nans-fp-math", false]], "--enable-unsafe-fp-math": [[297, "cmdoption-enable-unsafe-fp-math", false]], "--enable-var-scope": [[292, "cmdoption-enable-var-scope", false]], "--extern-only": [[314, "cmdoption-llvm-nm-extern-only", false]], "--filter": [[296, "cmdoption-filter", false]], "--find": [[308, "cmdoption-f", false]], "--flat": [[294, "cmdoption-f", false]], "--format": [[314, "cmdoption-llvm-nm-format", false]], "--frame-pointer": [[297, "cmdoption-frame-pointer", false]], "--function-summaries": [[304, "cmdoption-llvm-cov-gcov-f", false]], "--gdb-index": [[308, "cmdoption-debug-abbrev", false]], "--help": [[296, "cmdoption-h", false], [304, "cmdoption-llvm-cov-gcov-help", false], [308, "cmdoption-h", false]], "--ignore-case": [[308, "cmdoption-i", false]], "--implicit-check-not": [[292, "cmdoption-implicit-check-not", false]], "--input-file": [[292, "cmdoption-input-file", false]], "--load": [[297, "cmdoption-load", false]], "--long-file-names": [[304, "cmdoption-llvm-cov-gcov-l", false]], "--lookup": [[308, "cmdoption-lookup", false]], "--match-full-lines": [[292, "cmdoption-match-full-lines", false]], "--max-tests": [[296, "cmdoption-max-tests", false]], "--max-time": [[296, "cmdoption-max-time", false]], "--minimize": [[294, "cmdoption-z", false]], "--name": [[308, "cmdoption-n", false]], "--no-odr": [[294, "cmdoption-no-odr", false]], "--no-output": [[294, "cmdoption-no-output", false], [304, "cmdoption-llvm-cov-gcov-n", false]], "--no-progress-bar": [[296, "cmdoption-no-progress-bar", false]], "--no-sort": [[314, "cmdoption-llvm-nm-no-sort", false]], "--no-swiftmodule-timestamp": [[294, "cmdoption-no-swiftmodule-timestamp", false]], "--no-weak": [[314, "cmdoption-llvm-nm-no-weak", false]], "--num-shards": [[296, "cmdoption-num-shards", false]], "--num-threads": [[294, "cmdoption-j", false]], "--numeric-sort": [[314, "cmdoption-llvm-nm-numeric-sort", false]], "--object-directory": [[304, "cmdoption-llvm-cov-gcov-o", false]], "--object-file": [[304, "cmdoption-llvm-cov-gcov-o", false]], "--oso-prepend-path": [[294, "cmdoption-oso-prepend-path", false]], "--out-file": [[308, "cmdoption-o", false]], "--papertrail": [[294, "cmdoption-papertrail", false]], "--param": [[296, "cmdoption-D", false]], "--path": [[296, "cmdoption-path", false]], "--preserve-paths": [[304, "cmdoption-llvm-cov-gcov-p", false]], "--print-file-name": [[314, "cmdoption-llvm-nm-print-file-name", false]], "--print-machineinstrs": [[297, "cmdoption-print-machineinstrs", false]], "--print-size": [[314, "cmdoption-llvm-nm-print-size", false]], "--quiet": [[296, "cmdoption-q", false]], "--radix": [[314, "cmdoption-llvm-nm-radix", false]], "--recurse-depth": [[308, "cmdoption-r", false]], "--regalloc": [[297, "cmdoption-regalloc", false]], "--regex": [[308, "cmdoption-x", false]], "--run-shard": [[296, "cmdoption-run-shard", false]], "--show-all": [[296, "cmdoption-a", false]], "--show-children": [[308, "cmdoption-c", false]], "--show-form": [[308, "cmdoption-F", false]], "--show-parents": [[308, "cmdoption-p", false]], "--show-suites": [[296, "cmdoption-show-suites", false]], "--show-tests": [[296, "cmdoption-show-tests", false]], "--show-unsupported": [[296, "cmdoption-show-unsupported", false]], "--show-xfail": [[296, "cmdoption-show-xfail", false]], "--shuffle": [[296, "cmdoption-shuffle", false]], "--size-sort": [[314, "cmdoption-llvm-nm-size-sort", false]], "--spiller": [[297, "cmdoption-spiller", false]], "--statistics": [[308, "cmdoption-statistics", false]], "--stats": [[297, "cmdoption-stats", false]], "--strict-whitespace": [[292, "cmdoption-strict-whitespace", false]], "--succinct": [[296, "cmdoption-s", false]], "--symtab": [[294, "cmdoption-s", false]], "--threads": [[296, "cmdoption-j", false]], "--time-passes": [[297, "cmdoption-time-passes", false]], "--time-tests": [[296, "cmdoption-time-tests", false]], "--toolchain": [[294, "cmdoption-toolchain", false]], "--unconditional-branches": [[304, "cmdoption-llvm-cov-gcov-u", false]], "--undefined-only": [[314, "cmdoption-llvm-nm-undefined-only", false]], "--update": [[294, "cmdoption-u", false]], "--uuid": [[308, "cmdoption-u", false]], "--verbose": [[294, "cmdoption-v", false], [296, "cmdoption-v", false], [308, "cmdoption-v", false]], "--verify": [[308, "cmdoption-verify", false]], "--version": [[294, "cmdoption-version", false], [308, "cmdoption-version", false]], "--vg": [[296, "cmdoption-vg", false]], "--vg-arg": [[296, "cmdoption-vg-arg", false]], "--vg-leak": [[296, "cmdoption-vg-leak", false]], "--x86-asm-syntax": [[297, "cmdoption-x86-asm-syntax", false]], "-a": [[296, "cmdoption-a", false], [304, "cmdoption-llvm-cov-gcov-a", false], [308, "cmdoption-a", false], [314, "cmdoption-llvm-nm-print-file-name", false], [314, "cmdoption-llvm-nm-debug-syms", false], [320, "cmdoption-print-address", false]], "-addresses": [[320, "cmdoption-print-address", false]], "-all": [[316, "cmdoption-llvm-pdbutil-dump-all", false], [316, "cmdoption-llvm-pdbutil-pretty-all", false]], "-all-functions": [[317, "cmdoption-llvm-profdata-show-all-functions", false]], "-all-stats": [[313, "cmdoption-all-stats", false]], "-all-views": [[313, "cmdoption-all-views", false]], "-analysis-clusters-output-file": [[309, "cmdoption-analysis-clusters-output-file", false]], "-analysis-espilon": [[309, "cmdoption-analysis-espilon", false]], "-analysis-inconsistencies-output-file": [[309, "cmdoption-analysis-inconsistencies-output-file", false]], "-analysis-numpoints": [[309, "cmdoption-analysis-numpoints", false]], "-arch": [[304, "cmdoption-llvm-cov-export-arch", false], [304, "cmdoption-llvm-cov-report-arch", false], [304, "cmdoption-llvm-cov-show-arch", false], [315, "cmdoption-arch", false]], "-asmparsernum": [[322, "cmdoption-tblgen-asmparsernum", false]], "-asmwriternum": [[322, "cmdoption-tblgen-asmwriternum", false]], "-b": [[304, "cmdoption-llvm-cov-gcov-b", false], [314, "cmdoption-llvm-nm-B", false]], "-benchmarks-file": [[309, "cmdoption-benchmarks-file", false]], "-binary": [[317, "cmdoption-llvm-profdata-merge-binary", false]], "-block-range": [[316, "cmdoption-llvm-pdbutil-bytes-block-range", false]], "-byte-range": [[316, "cmdoption-llvm-pdbutil-bytes-byte-range", false]], "-c": [[304, "cmdoption-llvm-cov-gcov-c", false], [308, "cmdoption-c", false], [320, "cmdoption-demangle", false]], "-cfg": [[315, "cmdoption-cfg", false]], "-chunks": [[316, "cmdoption-llvm-pdbutil-bytes-chunks", false]], "-class": [[322, "cmdoption-tblgen-class", false]], "-class-definitions": [[316, "cmdoption-llvm-pdbutil-pretty-class-definitions", false]], "-class-order": [[316, "cmdoption-llvm-pdbutil-pretty-class-order", false]], "-class-recurse-depth": [[316, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false]], "-classes": [[316, "cmdoption-llvm-pdbutil-pretty-classes", false]], "-code-model": [[298, "cmdoption-code-model", false]], "-color-output": [[316, "cmdoption-llvm-pdbutil-pretty-color-output", false]], "-compilands": [[316, "cmdoption-llvm-pdbutil-pretty-compilands", false]], "-counts": [[317, "cmdoption-llvm-profdata-show-counts", false]], "-d": [[296, "cmdoption-D", false], [312, "cmdoption-d", false], [314, "cmdoption-llvm-nm-dynamic", false], [315, "cmdoption-D", false], [315, "cmdoption-d", false]], "-d<var": [[292, "cmdoption-D-VAR", false]], "-debug": [[321, "cmdoption-debug", false]], "-default-arch": [[320, "cmdoption-default-arch", false]], "-demangle": [[320, "cmdoption-demangle", false]], "-dependents": [[316, "cmdoption-llvm-pdbutil-dump-dependents", false]], "-disable-excess-fp-precision": [[298, "cmdoption-disable-excess-fp-precision", false]], "-disable-inlining": [[321, "cmdoption-disable-inlining", false]], "-disable-opt": [[321, "cmdoption-disable-opt", false]], "-disable-post-ra-scheduler": [[298, "cmdoption-disable-post-RA-scheduler", false]], "-disable-spill-fusing": [[298, "cmdoption-disable-spill-fusing", false]], "-disassemble": [[315, "cmdoption-d", false]], "-disassemble-all": [[315, "cmdoption-D", false]], "-dispatch": [[313, "cmdoption-dispatch", false]], "-dispatch-stats": [[313, "cmdoption-dispatch-stats", false]], "-dsym": [[315, "cmdoption-dsym", false]], "-dsym-hint": [[320, "cmdoption-dsym-hint", false]], "-dump": [[301, "cmdoption-llvm-bcanalyzer-dump", false]], "-dump-json": [[322, "cmdoption-tblgen-dump-json", false]], "-dyn-symbols": [[318, "cmdoption-dyn-symbols", false]], "-dynamic-table": [[318, "cmdoption-dynamic-table", false]], "-e": [[320, "cmdoption-obj", false]], "-ec": [[316, "cmdoption-llvm-pdbutil-bytes-ec", false]], "-elf-section-groups": [[318, "cmdoption-elf-section-groups", false]], "-enable-no-infs-fp-math": [[298, "cmdoption-enable-no-infs-fp-math", false]], "-enable-no-nans-fp-math": [[298, "cmdoption-enable-no-nans-fp-math", false]], "-enable-unsafe-fp-math": [[298, "cmdoption-enable-unsafe-fp-math", false]], "-enums": [[316, "cmdoption-llvm-pdbutil-pretty-enums", false]], "-exclude-compilands": [[316, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false]], "-exclude-symbols": [[316, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false]], "-exclude-types": [[316, "cmdoption-llvm-pdbutil-pretty-exclude-types", false]], "-exe": [[320, "cmdoption-obj", false]], "-expand-relocs": [[318, "cmdoption-expand-relocs", false]], "-externals": [[316, "cmdoption-llvm-pdbutil-pretty-externals", false]], "-f": [[294, "cmdoption-f", false], [304, "cmdoption-llvm-cov-gcov-f", false], [308, "cmdoption-F", false], [308, "cmdoption-f", false], [312, "cmdoption-f", false], [314, "cmdoption-llvm-nm-format", false], [317, "cmdoption-llvm-profdata-merge-input-files", false], [321, "cmdoption-f", false]], "-fake-argv0": [[298, "cmdoption-fake-argv0", false]], "-file-headers": [[318, "cmdoption-file-headers", false]], "-files": [[316, "cmdoption-llvm-pdbutil-bytes-files", false], [316, "cmdoption-llvm-pdbutil-dump-files", false]], "-filetype": [[297, "cmdoption-filetype", false]], "-force-interpreter": [[298, "cmdoption-force-interpreter", false]], "-format": [[304, "cmdoption-llvm-cov-export-format", false], [304, "cmdoption-llvm-cov-show-format", false]], "-fpm": [[316, "cmdoption-llvm-pdbutil-bytes-fpm", false]], "-function": [[317, "cmdoption-llvm-profdata-show-function", false]], "-functions": [[320, "cmdoption-functions", false]], "-g": [[314, "cmdoption-llvm-nm-extern-only", false], [315, "cmdoption-g", false], [318, "cmdoption-elf-section-groups", false]], "-gcc": [[317, "cmdoption-llvm-profdata-merge-gcc", false]], "-gen-asm-matcher": [[322, "cmdoption-tblgen-gen-asm-matcher", false]], "-gen-asm-writer": [[322, "cmdoption-tblgen-gen-asm-writer", false]], "-gen-dag-isel": [[322, "cmdoption-tblgen-gen-dag-isel", false]], "-gen-dfa-packetizer": [[322, "cmdoption-tblgen-gen-dfa-packetizer", false]], "-gen-disassembler": [[322, "cmdoption-tblgen-gen-disassembler", false]], "-gen-emitter": [[322, "cmdoption-tblgen-gen-emitter", false]], "-gen-enhanced-disassembly-info": [[322, "cmdoption-tblgen-gen-enhanced-disassembly-info", false]], "-gen-exegesis": [[322, "cmdoption-tblgen-gen-exegesis", false]], "-gen-fast-isel": [[322, "cmdoption-tblgen-gen-fast-isel", false]], "-gen-instr-info": [[322, "cmdoption-tblgen-gen-instr-info", false]], "-gen-intrinsic-enums": [[322, "cmdoption-tblgen-gen-intrinsic-enums", false]], "-gen-intrinsic-impl": [[322, "cmdoption-tblgen-gen-intrinsic-impl", false]], "-gen-pseudo-lowering": [[322, "cmdoption-tblgen-gen-pseudo-lowering", false]], "-gen-register-info": [[322, "cmdoption-tblgen-gen-register-info", false]], "-gen-subtarget": [[322, "cmdoption-tblgen-gen-subtarget", false]], "-gen-tgt-intrinsic": [[322, "cmdoption-tblgen-gen-tgt-intrinsic", false]], "-global-extras": [[316, "cmdoption-llvm-pdbutil-dump-global-extras", false]], "-globals": [[316, "cmdoption-llvm-pdbutil-dump-globals", false], [316, "cmdoption-llvm-pdbutil-pretty-globals", false]], "-h": [[296, "cmdoption-h", false], [308, "cmdoption-h", false], [318, "cmdoption-file-headers", false]], "-help": [[292, "cmdoption-help", false], [297, "cmdoption-help", false], [298, "cmdoption-help", false], [301, "cmdoption-llvm-bcanalyzer-help", false], [309, "cmdoption-help", false], [312, "cmdoption-help", false], [313, "cmdoption-help", false], [314, "cmdoption-llvm-nm-help", false], [315, "cmdoption-help", false], [317, "cmdoption-llvm-profdata-merge-help", false], [317, "cmdoption-llvm-profdata-show-help", false], [318, "cmdoption-help", false], [321, "cmdoption-help", false], [322, "cmdoption-tblgen-help", false]], "-i": [[308, "cmdoption-i", false], [322, "cmdoption-tblgen-I", false]], "-id": [[316, "cmdoption-llvm-pdbutil-bytes-id", false]], "-id-data": [[316, "cmdoption-llvm-pdbutil-dump-id-data", false]], "-id-extras": [[316, "cmdoption-llvm-pdbutil-dump-id-extras", false]], "-id-index": [[316, "cmdoption-llvm-pdbutil-dump-id-index", false]], "-ids": [[316, "cmdoption-llvm-pdbutil-dump-ids", false]], "-ignore-filename-regex": [[304, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [304, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [304, "cmdoption-llvm-cov-show-ignore-filename-regex", false]], "-ignore-invalid-sched-class": [[309, "cmdoption-ignore-invalid-sched-class", false]], "-il": [[316, "cmdoption-llvm-pdbutil-dump-il", false]], "-include-compilands": [[316, "cmdoption-llvm-pdbutil-pretty-include-compilands", false]], "-include-symbols": [[316, "cmdoption-llvm-pdbutil-pretty-include-symbols", false]], "-include-types": [[316, "cmdoption-llvm-pdbutil-pretty-include-types", false]], "-inlining": [[320, "cmdoption-inlining", false]], "-input-files": [[317, "cmdoption-llvm-profdata-merge-input-files", false]], "-instr": [[317, "cmdoption-llvm-profdata-merge-instr", false], [317, "cmdoption-llvm-profdata-show-instr", false]], "-instruction-info": [[313, "cmdoption-instruction-info", false]], "-instruction-tables": [[313, "cmdoption-instruction-tables", false]], "-iterations": [[313, "cmdoption-iterations", false]], "-j": [[294, "cmdoption-j", false], [296, "cmdoption-j", false], [304, "cmdoption-llvm-cov-show-num-threads", false], [317, "cmdoption-llvm-profdata-merge-num-threads", false]], "-jit-enable-eh": [[298, "cmdoption-jit-enable-eh", false]], "-join-liveintervals": [[298, "cmdoption-join-liveintervals", false]], "-l": [[304, "cmdoption-llvm-cov-gcov-l", false], [316, "cmdoption-llvm-pdbutil-dump-l", false]], "-line-coverage-gt": [[304, "cmdoption-llvm-cov-show-line-coverage-gt", false]], "-line-coverage-lt": [[304, "cmdoption-llvm-cov-show-line-coverage-lt", false]], "-lines": [[316, "cmdoption-llvm-pdbutil-pretty-lines", false]], "-list-below-cutoff": [[317, "cmdoption-llvm-profdata-show-list-below-cutoff", false]], "-load": [[298, "cmdoption-load", false], [321, "cmdoption-load", false]], "-load-address": [[316, "cmdoption-llvm-pdbutil-pretty-load-address", false]], "-lqueue": [[313, "cmdoption-lqueue", false]], "-m": [[315, "cmdoption-m", false]], "-macho": [[315, "cmdoption-m", false]], "-march": [[297, "cmdoption-march", false], [298, "cmdoption-march", false], [313, "cmdoption-march", false]], "-mattr": [[297, "cmdoption-mattr", false], [298, "cmdoption-mattr", false], [315, "cmdoption-mattr", false]], "-mc-x86-disable-arith-relaxation": [[315, "cmdoption-mc-x86-disable-arith-relaxation", false]], "-mcpu": [[297, "cmdoption-mcpu", false], [298, "cmdoption-mcpu", false], [309, "cmdoption-mcpu", false], [313, "cmdoption-mcpu", false]], "-meabi": [[297, "cmdoption-meabi", false]], "-memop-sizes": [[317, "cmdoption-llvm-profdata-show-memop-sizes", false]], "-min-class-padding": [[316, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false]], "-min-class-padding-imm": [[316, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false]], "-min-type-size": [[316, "cmdoption-llvm-pdbutil-pretty-min-type-size", false]], "-mod": [[316, "cmdoption-llvm-pdbutil-bytes-mod", false]], "-mode": [[309, "cmdoption-mode", false]], "-modi": [[316, "cmdoption-llvm-pdbutil-bytes-modi", false], [316, "cmdoption-llvm-pdbutil-dump-modi", false]], "-module-syms": [[316, "cmdoption-llvm-pdbutil-pretty-module-syms", false]], "-modules": [[316, "cmdoption-llvm-pdbutil-dump-modules", false]], "-mtriple": [[297, "cmdoption-mtriple", false], [298, "cmdoption-mtriple", false], [313, "cmdoption-mtriple", false]], "-n": [[304, "cmdoption-llvm-cov-gcov-n", false], [308, "cmdoption-n", false], [314, "cmdoption-llvm-nm-numeric-sort", false]], "-name": [[304, "cmdoption-llvm-cov-show-name", false]], "-name-map": [[316, "cmdoption-llvm-pdbutil-bytes-name-map", false]], "-name-regex": [[304, "cmdoption-llvm-cov-show-name-regex", false]], "-name-whitelist": [[304, "cmdoption-llvm-cov-show-name-whitelist", false]], "-needed-libs": [[318, "cmdoption-needed-libs", false]], "-no-compiler-generated": [[316, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false]], "-no-enum-definitions": [[316, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false]], "-no-system-libs": [[316, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false]], "-noalias": [[313, "cmdoption-noalias", false]], "-nodetails": [[301, "cmdoption-llvm-bcanalyzer-nodetails", false]], "-nozero-initialized-in-bss": [[298, "cmdoption-nozero-initialized-in-bss", false]], "-num-repetitions": [[309, "cmdoption-num-repetitions", false]], "-num-threads": [[304, "cmdoption-llvm-cov-show-num-threads", false], [317, "cmdoption-llvm-profdata-merge-num-threads", false]], "-o": [[294, "cmdoption-o", false], [297, "cmdoption-O", false], [304, "cmdoption-llvm-cov-gcov-o", false], [305, "cmdoption-llvm-cxxmap-output", false], [308, "cmdoption-o", false], [312, "cmdoption-o", false], [314, "cmdoption-llvm-nm-print-file-name", false], [317, "cmdoption-llvm-profdata-merge-output", false], [317, "cmdoption-llvm-profdata-show-output", false], [319, "cmdoption-o", false], [321, "cmdoption-o", false], [322, "cmdoption-tblgen-o", false]], "-obj": [[320, "cmdoption-obj", false]], "-opcode-index": [[309, "cmdoption-opcode-index", false]], "-opcode-name": [[309, "cmdoption-opcode-name", false]], "-output": [[305, "cmdoption-llvm-cxxmap-output", false], [317, "cmdoption-llvm-profdata-merge-output", false], [317, "cmdoption-llvm-profdata-show-output", false]], "-output-asm-variant": [[313, "cmdoption-output-asm-variant", false]], "-output-dir": [[304, "cmdoption-llvm-cov-show-output-dir", false]], "-p": [[304, "cmdoption-llvm-cov-gcov-p", false], [308, "cmdoption-p", false], [314, "cmdoption-llvm-nm-P", false], [314, "cmdoption-llvm-nm-no-sort", false], [320, "cmdoption-pretty-print", false], [321, "cmdoption-p", false]], "-path-equivalence": [[304, "cmdoption-llvm-cov-show-path-equivalence", false]], "-pdb": [[316, "cmdoption-llvm-pdbutil-merge-pdb", false], [316, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "-pre-ra-sched": [[298, "cmdoption-pre-RA-sched", false]], "-pretty-print": [[320, "cmdoption-pretty-print", false]], "-print-address": [[320, "cmdoption-print-address", false]], "-print-enums": [[322, "cmdoption-tblgen-print-enums", false]], "-print-records": [[322, "cmdoption-tblgen-print-records", false]], "-print-sets": [[322, "cmdoption-tblgen-print-sets", false]], "-program-headers": [[318, "cmdoption-program-headers", false]], "-public-extras": [[316, "cmdoption-llvm-pdbutil-dump-public-extras", false]], "-publics": [[316, "cmdoption-llvm-pdbutil-dump-publics", false]], "-q": [[296, "cmdoption-q", false]], "-r": [[305, "cmdoption-llvm-cxxmap-remapping-file", false], [308, "cmdoption-r", false], [315, "cmdoption-r", false], [317, "cmdoption-llvm-profdata-merge-remapping-file", false], [318, "cmdoption-relocations", false]], "-regalloc": [[298, "cmdoption-regalloc", false]], "-region-coverage-gt": [[304, "cmdoption-llvm-cov-show-region-coverage-gt", false]], "-region-coverage-lt": [[304, "cmdoption-llvm-cov-show-region-coverage-lt", false]], "-register-file-size": [[313, "cmdoption-register-file-size", false]], "-register-file-stats": [[313, "cmdoption-register-file-stats", false]], "-relocation-model": [[298, "cmdoption-relocation-model", false]], "-relocations": [[318, "cmdoption-relocations", false]], "-remapping-file": [[305, "cmdoption-llvm-cxxmap-remapping-file", false], [317, "cmdoption-llvm-profdata-merge-remapping-file", false]], "-resource-pressure": [[313, "cmdoption-resource-pressure", false]], "-retire-stats": [[313, "cmdoption-retire-stats", false]], "-s": [[294, "cmdoption-s", false], [296, "cmdoption-s", false], [312, "cmdoption-S", false], [314, "cmdoption-llvm-nm-print-size", false], [315, "cmdoption-s", false], [318, "cmdoption-sections", false], [321, "cmdoption-S", false]], "-sample": [[317, "cmdoption-llvm-profdata-merge-sample", false], [317, "cmdoption-llvm-profdata-show-sample", false]], "-sc": [[316, "cmdoption-llvm-pdbutil-bytes-sc", false]], "-scheduler-stats": [[313, "cmdoption-scheduler-stats", false]], "-sd": [[318, "cmdoption-section-data", false]], "-section-contribs": [[316, "cmdoption-llvm-pdbutil-dump-section-contribs", false]], "-section-data": [[318, "cmdoption-section-data", false]], "-section-headers": [[315, "cmdoption-section-headers", false], [316, "cmdoption-llvm-pdbutil-dump-section-headers", false]], "-section-map": [[316, "cmdoption-llvm-pdbutil-dump-section-map", false]], "-section-relocations": [[318, "cmdoption-section-relocations", false]], "-section-symbols": [[318, "cmdoption-section-symbols", false]], "-sections": [[318, "cmdoption-sections", false]], "-seed": [[319, "cmdoption-seed", false]], "-show-expansions": [[304, "cmdoption-llvm-cov-show-show-expansions", false]], "-show-functions": [[304, "cmdoption-llvm-cov-report-show-functions", false]], "-show-instantiation-summary": [[304, "cmdoption-llvm-cov-report-show-instantiation-summary", false]], "-show-instantiations": [[304, "cmdoption-llvm-cov-show-show-instantiations", false]], "-show-line-counts": [[304, "cmdoption-llvm-cov-show-show-line-counts", false]], "-show-line-counts-or-regions": [[304, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false]], "-show-regions": [[304, "cmdoption-llvm-cov-show-show-regions", false]], "-size": [[319, "cmdoption-size", false]], "-sm": [[316, "cmdoption-llvm-pdbutil-bytes-sm", false]], "-snippets-file": [[309, "cmdoption-snippets-file", false]], "-soft-float": [[298, "cmdoption-soft-float", false]], "-sparse": [[317, "cmdoption-llvm-profdata-merge-sparse", false]], "-spiller": [[298, "cmdoption-spiller", false]], "-split-chunks": [[316, "cmdoption-llvm-pdbutil-bytes-split-chunks", false]], "-squeue": [[313, "cmdoption-squeue", false]], "-sr": [[318, "cmdoption-section-relocations", false]], "-st": [[318, "cmdoption-section-symbols", false]], "-stack-size-section": [[297, "cmdoption-stack-size-section", false]], "-stats": [[298, "cmdoption-stats", false], [315, "cmdoption-stats", false], [321, "cmdoption-stats", false]], "-stream-blocks": [[316, "cmdoption-llvm-pdbutil-dump-stream-blocks", false]], "-stream-data": [[316, "cmdoption-llvm-pdbutil-bytes-stream-data", false]], "-streams": [[316, "cmdoption-llvm-pdbutil-dump-streams", false]], "-string-table": [[316, "cmdoption-llvm-pdbutil-dump-string-table", false]], "-strip-debug": [[321, "cmdoption-strip-debug", false]], "-summary": [[316, "cmdoption-llvm-pdbutil-dump-summary", false]], "-summary-only": [[304, "cmdoption-llvm-cov-export-summary-only", false]], "-sym-data": [[316, "cmdoption-llvm-pdbutil-dump-sym-data", false]], "-sym-types": [[316, "cmdoption-llvm-pdbutil-pretty-sym-types", false]], "-symbol-order": [[316, "cmdoption-llvm-pdbutil-pretty-symbol-order", false]], "-symbols": [[316, "cmdoption-llvm-pdbutil-dump-symbols", false], [318, "cmdoption-symbols", false]], "-syms": [[316, "cmdoption-llvm-pdbutil-bytes-syms", false]], "-t": [[314, "cmdoption-llvm-nm-radix", false], [315, "cmdoption-t", false], [318, "cmdoption-symbols", false]], "-tab-size": [[304, "cmdoption-llvm-cov-show-tab-size", false]], "-text": [[317, "cmdoption-llvm-profdata-merge-text", false], [317, "cmdoption-llvm-profdata-show-text", false]], "-time-passes": [[298, "cmdoption-time-passes", false], [321, "cmdoption-time-passes", false]], "-timeline": [[313, "cmdoption-timeline", false]], "-timeline-max-cycles": [[313, "cmdoption-timeline-max-cycles", false]], "-timeline-max-iterations": [[313, "cmdoption-timeline-max-iterations", false]], "-topn": [[317, "cmdoption-llvm-profdata-show-topn", false]], "-triple": [[315, "cmdoption-triple", false]], "-type": [[316, "cmdoption-llvm-pdbutil-bytes-type", false]], "-type-data": [[316, "cmdoption-llvm-pdbutil-dump-type-data", false]], "-type-extras": [[316, "cmdoption-llvm-pdbutil-dump-type-extras", false]], "-type-index": [[316, "cmdoption-llvm-pdbutil-dump-type-index", false]], "-type-server": [[316, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "-typedefs": [[316, "cmdoption-llvm-pdbutil-pretty-typedefs", false]], "-types": [[316, "cmdoption-llvm-pdbutil-dump-types", false], [316, "cmdoption-llvm-pdbutil-pretty-types", false]], "-u": [[294, "cmdoption-u", false], [304, "cmdoption-llvm-cov-gcov-u", false], [308, "cmdoption-u", false], [314, "cmdoption-llvm-nm-undefined-only", false], [318, "cmdoption-unwind", false]], "-unwind": [[318, "cmdoption-unwind", false]], "-use-color": [[304, "cmdoption-llvm-cov-report-use-color", false], [304, "cmdoption-llvm-cov-show-use-color", false]], "-use-symbol-table": [[320, "cmdoption-use-symbol-table", false]], "-v": [[292, "cmdoption-v", false], [294, "cmdoption-v", false], [296, "cmdoption-v", false], [308, "cmdoption-v", false], [312, "cmdoption-v", false], [314, "cmdoption-llvm-nm-numeric-sort", false]], "-value-cutoff": [[317, "cmdoption-llvm-profdata-show-value-cutoff", false]], "-verify": [[301, "cmdoption-llvm-bcanalyzer-verify", false]], "-verify-each": [[321, "cmdoption-verify-each", false]], "-version": [[292, "cmdoption-version", false], [298, "cmdoption-version", false], [304, "cmdoption-llvm-cov-gcov-version", false], [315, "cmdoption-version", false], [318, "cmdoption-version", false], [322, "cmdoption-tblgen-version", false]], "-vv": [[292, "cmdoption-vv", false], [296, "cmdoption-vv", false]], "-w": [[314, "cmdoption-llvm-nm-no-weak", false]], "-wambiguous": [[305, "cmdoption-llvm-cxxmap-Wambiguous", false]], "-weighted-input": [[317, "cmdoption-llvm-profdata-merge-weighted-input", false]], "-wincomplete": [[305, "cmdoption-llvm-cxxmap-Wincomplete", false]], "-x": [[308, "cmdoption-x", false]], "-x86-asm-syntax": [[298, "cmdoption-x86-asm-syntax", false], [315, "cmdoption-x86-asm-syntax", false]], "-xdemangler": [[304, "cmdoption-llvm-cov-show-Xdemangler", false]], "-xme": [[316, "cmdoption-llvm-pdbutil-dump-xme", false]], "-xmi": [[316, "cmdoption-llvm-pdbutil-dump-xmi", false]], "-y": [[294, "cmdoption-y", false]], "-z": [[294, "cmdoption-z", false]], "-{passname}": [[321, "cmdoption-passname", false]], "att": [[315, "cmdoption-arg-att", false]], "intel": [[315, "cmdoption-arg-intel", false]], "option de ligne de commande": [[292, "cmdoption-D-VAR", false], [292, "cmdoption-allow-deprecated-dag-overlap", false], [292, "cmdoption-check-prefix", false], [292, "cmdoption-check-prefixes", false], [292, "cmdoption-color", false], [292, "cmdoption-dump-input", false], [292, "cmdoption-dump-input-on-failure", false], [292, "cmdoption-enable-var-scope", false], [292, "cmdoption-help", false], [292, "cmdoption-implicit-check-not", false], [292, "cmdoption-input-file", false], [292, "cmdoption-match-full-lines", false], [292, "cmdoption-strict-whitespace", false], [292, "cmdoption-v", false], [292, "cmdoption-version", false], [292, "cmdoption-vv", false], [294, "cmdoption-arch", false], [294, "cmdoption-dump-debug-map", false], [294, "cmdoption-f", false], [294, "cmdoption-j", false], [294, "cmdoption-no-odr", false], [294, "cmdoption-no-output", false], [294, "cmdoption-no-swiftmodule-timestamp", false], [294, "cmdoption-o", false], [294, "cmdoption-oso-prepend-path", false], [294, "cmdoption-papertrail", false], [294, "cmdoption-s", false], [294, "cmdoption-toolchain", false], [294, "cmdoption-u", false], [294, "cmdoption-v", false], [294, "cmdoption-version", false], [294, "cmdoption-y", false], [294, "cmdoption-z", false], [296, "cmdoption-D", false], [296, "cmdoption-a", false], [296, "cmdoption-config-prefix", false], [296, "cmdoption-debug", false], [296, "cmdoption-filter", false], [296, "cmdoption-h", false], [296, "cmdoption-j", false], [296, "cmdoption-max-tests", false], [296, "cmdoption-max-time", false], [296, "cmdoption-no-progress-bar", false], [296, "cmdoption-num-shards", false], [296, "cmdoption-path", false], [296, "cmdoption-q", false], [296, "cmdoption-run-shard", false], [296, "cmdoption-s", false], [296, "cmdoption-show-suites", false], [296, "cmdoption-show-tests", false], [296, "cmdoption-show-unsupported", false], [296, "cmdoption-show-xfail", false], [296, "cmdoption-shuffle", false], [296, "cmdoption-time-tests", false], [296, "cmdoption-v", false], [296, "cmdoption-vg", false], [296, "cmdoption-vg-arg", false], [296, "cmdoption-vg-leak", false], [296, "cmdoption-vv", false], [297, "cmdoption-O", false], [297, "cmdoption-disable-excess-fp-precision", false], [297, "cmdoption-enable-no-infs-fp-math", false], [297, "cmdoption-enable-no-nans-fp-math", false], [297, "cmdoption-enable-unsafe-fp-math", false], [297, "cmdoption-filetype", false], [297, "cmdoption-frame-pointer", false], [297, "cmdoption-help", false], [297, "cmdoption-load", false], [297, "cmdoption-march", false], [297, "cmdoption-mattr", false], [297, "cmdoption-mcpu", false], [297, "cmdoption-meabi", false], [297, "cmdoption-mtriple", false], [297, "cmdoption-print-machineinstrs", false], [297, "cmdoption-regalloc", false], [297, "cmdoption-spiller", false], [297, "cmdoption-stack-size-section", false], [297, "cmdoption-stats", false], [297, "cmdoption-time-passes", false], [297, "cmdoption-x86-asm-syntax", false], [298, "cmdoption-code-model", false], [298, "cmdoption-disable-excess-fp-precision", false], [298, "cmdoption-disable-post-RA-scheduler", false], [298, "cmdoption-disable-spill-fusing", false], [298, "cmdoption-enable-no-infs-fp-math", false], [298, "cmdoption-enable-no-nans-fp-math", false], [298, "cmdoption-enable-unsafe-fp-math", false], [298, "cmdoption-fake-argv0", false], [298, "cmdoption-force-interpreter", false], [298, "cmdoption-help", false], [298, "cmdoption-jit-enable-eh", false], [298, "cmdoption-join-liveintervals", false], [298, "cmdoption-load", false], [298, "cmdoption-march", false], [298, "cmdoption-mattr", false], [298, "cmdoption-mcpu", false], [298, "cmdoption-mtriple", false], [298, "cmdoption-nozero-initialized-in-bss", false], [298, "cmdoption-pre-RA-sched", false], [298, "cmdoption-regalloc", false], [298, "cmdoption-relocation-model", false], [298, "cmdoption-soft-float", false], [298, "cmdoption-spiller", false], [298, "cmdoption-stats", false], [298, "cmdoption-time-passes", false], [298, "cmdoption-version", false], [298, "cmdoption-x86-asm-syntax", false], [308, "cmdoption-F", false], [308, "cmdoption-a", false], [308, "cmdoption-arch", false], [308, "cmdoption-c", false], [308, "cmdoption-debug-abbrev", false], [308, "cmdoption-diff", false], [308, "cmdoption-f", false], [308, "cmdoption-h", false], [308, "cmdoption-i", false], [308, "cmdoption-lookup", false], [308, "cmdoption-n", false], [308, "cmdoption-o", false], [308, "cmdoption-p", false], [308, "cmdoption-r", false], [308, "cmdoption-statistics", false], [308, "cmdoption-u", false], [308, "cmdoption-v", false], [308, "cmdoption-verify", false], [308, "cmdoption-version", false], [308, "cmdoption-x", false], [309, "cmdoption-analysis-clusters-output-file", false], [309, "cmdoption-analysis-espilon", false], [309, "cmdoption-analysis-inconsistencies-output-file", false], [309, "cmdoption-analysis-numpoints", false], [309, "cmdoption-benchmarks-file", false], [309, "cmdoption-help", false], [309, "cmdoption-ignore-invalid-sched-class", false], [309, "cmdoption-mcpu", false], [309, "cmdoption-mode", false], [309, "cmdoption-num-repetitions", false], [309, "cmdoption-opcode-index", false], [309, "cmdoption-opcode-name", false], [309, "cmdoption-snippets-file", false], [312, "cmdoption-S", false], [312, "cmdoption-d", false], [312, "cmdoption-f", false], [312, "cmdoption-help", false], [312, "cmdoption-o", false], [312, "cmdoption-v", false], [313, "cmdoption-all-stats", false], [313, "cmdoption-all-views", false], [313, "cmdoption-dispatch", false], [313, "cmdoption-dispatch-stats", false], [313, "cmdoption-help", false], [313, "cmdoption-instruction-info", false], [313, "cmdoption-instruction-tables", false], [313, "cmdoption-iterations", false], [313, "cmdoption-lqueue", false], [313, "cmdoption-march", false], [313, "cmdoption-mcpu", false], [313, "cmdoption-mtriple", false], [313, "cmdoption-noalias", false], [313, "cmdoption-output-asm-variant", false], [313, "cmdoption-register-file-size", false], [313, "cmdoption-register-file-stats", false], [313, "cmdoption-resource-pressure", false], [313, "cmdoption-retire-stats", false], [313, "cmdoption-scheduler-stats", false], [313, "cmdoption-squeue", false], [313, "cmdoption-timeline", false], [313, "cmdoption-timeline-max-cycles", false], [313, "cmdoption-timeline-max-iterations", false], [315, "cmdoption-D", false], [315, "cmdoption-arch", false], [315, "cmdoption-arg-att", false], [315, "cmdoption-arg-intel", false], [315, "cmdoption-cfg", false], [315, "cmdoption-d", false], [315, "cmdoption-dsym", false], [315, "cmdoption-g", false], [315, "cmdoption-help", false], [315, "cmdoption-m", false], [315, "cmdoption-mattr", false], [315, "cmdoption-mc-x86-disable-arith-relaxation", false], [315, "cmdoption-r", false], [315, "cmdoption-s", false], [315, "cmdoption-section-headers", false], [315, "cmdoption-stats", false], [315, "cmdoption-t", false], [315, "cmdoption-triple", false], [315, "cmdoption-version", false], [315, "cmdoption-x86-asm-syntax", false], [318, "cmdoption-dyn-symbols", false], [318, "cmdoption-dynamic-table", false], [318, "cmdoption-elf-section-groups", false], [318, "cmdoption-expand-relocs", false], [318, "cmdoption-file-headers", false], [318, "cmdoption-help", false], [318, "cmdoption-needed-libs", false], [318, "cmdoption-program-headers", false], [318, "cmdoption-relocations", false], [318, "cmdoption-section-data", false], [318, "cmdoption-section-relocations", false], [318, "cmdoption-section-symbols", false], [318, "cmdoption-sections", false], [318, "cmdoption-symbols", false], [318, "cmdoption-unwind", false], [318, "cmdoption-version", false], [319, "cmdoption-o", false], [319, "cmdoption-seed", false], [319, "cmdoption-size", false], [320, "cmdoption-default-arch", false], [320, "cmdoption-demangle", false], [320, "cmdoption-dsym-hint", false], [320, "cmdoption-functions", false], [320, "cmdoption-inlining", false], [320, "cmdoption-obj", false], [320, "cmdoption-pretty-print", false], [320, "cmdoption-print-address", false], [320, "cmdoption-use-symbol-table", false], [321, "cmdoption-S", false], [321, "cmdoption-debug", false], [321, "cmdoption-disable-inlining", false], [321, "cmdoption-disable-opt", false], [321, "cmdoption-f", false], [321, "cmdoption-help", false], [321, "cmdoption-load", false], [321, "cmdoption-o", false], [321, "cmdoption-p", false], [321, "cmdoption-passname", false], [321, "cmdoption-stats", false], [321, "cmdoption-strip-debug", false], [321, "cmdoption-time-passes", false], [321, "cmdoption-verify-each", false]], "option de ligne de commande llvm-bcanalyzer": [[301, "cmdoption-llvm-bcanalyzer-dump", false], [301, "cmdoption-llvm-bcanalyzer-help", false], [301, "cmdoption-llvm-bcanalyzer-nodetails", false], [301, "cmdoption-llvm-bcanalyzer-verify", false]], "option de ligne de commande llvm-cov-export": [[304, "cmdoption-llvm-cov-export-arch", false], [304, "cmdoption-llvm-cov-export-format", false], [304, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [304, "cmdoption-llvm-cov-export-summary-only", false]], "option de ligne de commande llvm-cov-gcov": [[304, "cmdoption-llvm-cov-gcov-a", false], [304, "cmdoption-llvm-cov-gcov-b", false], [304, "cmdoption-llvm-cov-gcov-c", false], [304, "cmdoption-llvm-cov-gcov-f", false], [304, "cmdoption-llvm-cov-gcov-help", false], [304, "cmdoption-llvm-cov-gcov-l", false], [304, "cmdoption-llvm-cov-gcov-n", false], [304, "cmdoption-llvm-cov-gcov-o", false], [304, "cmdoption-llvm-cov-gcov-p", false], [304, "cmdoption-llvm-cov-gcov-u", false], [304, "cmdoption-llvm-cov-gcov-version", false]], "option de ligne de commande llvm-cov-report": [[304, "cmdoption-llvm-cov-report-arch", false], [304, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [304, "cmdoption-llvm-cov-report-show-functions", false], [304, "cmdoption-llvm-cov-report-show-instantiation-summary", false], [304, "cmdoption-llvm-cov-report-use-color", false]], "option de ligne de commande llvm-cov-show": [[304, "cmdoption-llvm-cov-show-Xdemangler", false], [304, "cmdoption-llvm-cov-show-arch", false], [304, "cmdoption-llvm-cov-show-format", false], [304, "cmdoption-llvm-cov-show-ignore-filename-regex", false], [304, "cmdoption-llvm-cov-show-line-coverage-gt", false], [304, "cmdoption-llvm-cov-show-line-coverage-lt", false], [304, "cmdoption-llvm-cov-show-name", false], [304, "cmdoption-llvm-cov-show-name-regex", false], [304, "cmdoption-llvm-cov-show-name-whitelist", false], [304, "cmdoption-llvm-cov-show-num-threads", false], [304, "cmdoption-llvm-cov-show-output-dir", false], [304, "cmdoption-llvm-cov-show-path-equivalence", false], [304, "cmdoption-llvm-cov-show-region-coverage-gt", false], [304, "cmdoption-llvm-cov-show-region-coverage-lt", false], [304, "cmdoption-llvm-cov-show-show-expansions", false], [304, "cmdoption-llvm-cov-show-show-instantiations", false], [304, "cmdoption-llvm-cov-show-show-line-counts", false], [304, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false], [304, "cmdoption-llvm-cov-show-show-regions", false], [304, "cmdoption-llvm-cov-show-tab-size", false], [304, "cmdoption-llvm-cov-show-use-color", false]], "option de ligne de commande llvm-cxxmap": [[305, "cmdoption-llvm-cxxmap-Wambiguous", false], [305, "cmdoption-llvm-cxxmap-Wincomplete", false], [305, "cmdoption-llvm-cxxmap-output", false], [305, "cmdoption-llvm-cxxmap-remapping-file", false]], "option de ligne de commande llvm-nm": [[314, "cmdoption-llvm-nm-B", false], [314, "cmdoption-llvm-nm-P", false], [314, "cmdoption-llvm-nm-debug-syms", false], [314, "cmdoption-llvm-nm-defined-only", false], [314, "cmdoption-llvm-nm-dynamic", false], [314, "cmdoption-llvm-nm-extern-only", false], [314, "cmdoption-llvm-nm-format", false], [314, "cmdoption-llvm-nm-help", false], [314, "cmdoption-llvm-nm-no-sort", false], [314, "cmdoption-llvm-nm-no-weak", false], [314, "cmdoption-llvm-nm-numeric-sort", false], [314, "cmdoption-llvm-nm-print-file-name", false], [314, "cmdoption-llvm-nm-print-size", false], [314, "cmdoption-llvm-nm-radix", false], [314, "cmdoption-llvm-nm-size-sort", false], [314, "cmdoption-llvm-nm-undefined-only", false]], "option de ligne de commande llvm-pdbutil-bytes": [[316, "cmdoption-llvm-pdbutil-bytes-block-range", false], [316, "cmdoption-llvm-pdbutil-bytes-byte-range", false], [316, "cmdoption-llvm-pdbutil-bytes-chunks", false], [316, "cmdoption-llvm-pdbutil-bytes-ec", false], [316, "cmdoption-llvm-pdbutil-bytes-files", false], [316, "cmdoption-llvm-pdbutil-bytes-fpm", false], [316, "cmdoption-llvm-pdbutil-bytes-id", false], [316, "cmdoption-llvm-pdbutil-bytes-mod", false], [316, "cmdoption-llvm-pdbutil-bytes-modi", false], [316, "cmdoption-llvm-pdbutil-bytes-name-map", false], [316, "cmdoption-llvm-pdbutil-bytes-sc", false], [316, "cmdoption-llvm-pdbutil-bytes-sm", false], [316, "cmdoption-llvm-pdbutil-bytes-split-chunks", false], [316, "cmdoption-llvm-pdbutil-bytes-stream-data", false], [316, "cmdoption-llvm-pdbutil-bytes-syms", false], [316, "cmdoption-llvm-pdbutil-bytes-type", false], [316, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "option de ligne de commande llvm-pdbutil-dump": [[316, "cmdoption-llvm-pdbutil-dump-all", false], [316, "cmdoption-llvm-pdbutil-dump-dependents", false], [316, "cmdoption-llvm-pdbutil-dump-files", false], [316, "cmdoption-llvm-pdbutil-dump-global-extras", false], [316, "cmdoption-llvm-pdbutil-dump-globals", false], [316, "cmdoption-llvm-pdbutil-dump-id-data", false], [316, "cmdoption-llvm-pdbutil-dump-id-extras", false], [316, "cmdoption-llvm-pdbutil-dump-id-index", false], [316, "cmdoption-llvm-pdbutil-dump-ids", false], [316, "cmdoption-llvm-pdbutil-dump-il", false], [316, "cmdoption-llvm-pdbutil-dump-l", false], [316, "cmdoption-llvm-pdbutil-dump-modi", false], [316, "cmdoption-llvm-pdbutil-dump-modules", false], [316, "cmdoption-llvm-pdbutil-dump-public-extras", false], [316, "cmdoption-llvm-pdbutil-dump-publics", false], [316, "cmdoption-llvm-pdbutil-dump-section-contribs", false], [316, "cmdoption-llvm-pdbutil-dump-section-headers", false], [316, "cmdoption-llvm-pdbutil-dump-section-map", false], [316, "cmdoption-llvm-pdbutil-dump-stream-blocks", false], [316, "cmdoption-llvm-pdbutil-dump-streams", false], [316, "cmdoption-llvm-pdbutil-dump-string-table", false], [316, "cmdoption-llvm-pdbutil-dump-summary", false], [316, "cmdoption-llvm-pdbutil-dump-sym-data", false], [316, "cmdoption-llvm-pdbutil-dump-symbols", false], [316, "cmdoption-llvm-pdbutil-dump-type-data", false], [316, "cmdoption-llvm-pdbutil-dump-type-extras", false], [316, "cmdoption-llvm-pdbutil-dump-type-index", false], [316, "cmdoption-llvm-pdbutil-dump-types", false], [316, "cmdoption-llvm-pdbutil-dump-xme", false], [316, "cmdoption-llvm-pdbutil-dump-xmi", false]], "option de ligne de commande llvm-pdbutil-merge": [[316, "cmdoption-llvm-pdbutil-merge-pdb", false]], "option de ligne de commande llvm-pdbutil-pretty": [[316, "cmdoption-llvm-pdbutil-pretty-all", false], [316, "cmdoption-llvm-pdbutil-pretty-class-definitions", false], [316, "cmdoption-llvm-pdbutil-pretty-class-order", false], [316, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false], [316, "cmdoption-llvm-pdbutil-pretty-classes", false], [316, "cmdoption-llvm-pdbutil-pretty-color-output", false], [316, "cmdoption-llvm-pdbutil-pretty-compilands", false], [316, "cmdoption-llvm-pdbutil-pretty-enums", false], [316, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false], [316, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false], [316, "cmdoption-llvm-pdbutil-pretty-exclude-types", false], [316, "cmdoption-llvm-pdbutil-pretty-externals", false], [316, "cmdoption-llvm-pdbutil-pretty-globals", false], [316, "cmdoption-llvm-pdbutil-pretty-include-compilands", false], [316, "cmdoption-llvm-pdbutil-pretty-include-symbols", false], [316, "cmdoption-llvm-pdbutil-pretty-include-types", false], [316, "cmdoption-llvm-pdbutil-pretty-lines", false], [316, "cmdoption-llvm-pdbutil-pretty-load-address", false], [316, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false], [316, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false], [316, "cmdoption-llvm-pdbutil-pretty-min-type-size", false], [316, "cmdoption-llvm-pdbutil-pretty-module-syms", false], [316, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false], [316, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false], [316, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false], [316, "cmdoption-llvm-pdbutil-pretty-sym-types", false], [316, "cmdoption-llvm-pdbutil-pretty-symbol-order", false], [316, "cmdoption-llvm-pdbutil-pretty-typedefs", false], [316, "cmdoption-llvm-pdbutil-pretty-types", false]], "option de ligne de commande llvm-pdbutil-yaml2pdb": [[316, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "option de ligne de commande llvm-profdata-merge": [[317, "cmdoption-llvm-profdata-merge-binary", false], [317, "cmdoption-llvm-profdata-merge-gcc", false], [317, "cmdoption-llvm-profdata-merge-help", false], [317, "cmdoption-llvm-profdata-merge-input-files", false], [317, "cmdoption-llvm-profdata-merge-instr", false], [317, "cmdoption-llvm-profdata-merge-num-threads", false], [317, "cmdoption-llvm-profdata-merge-output", false], [317, "cmdoption-llvm-profdata-merge-remapping-file", false], [317, "cmdoption-llvm-profdata-merge-sample", false], [317, "cmdoption-llvm-profdata-merge-sparse", false], [317, "cmdoption-llvm-profdata-merge-text", false], [317, "cmdoption-llvm-profdata-merge-weighted-input", false]], "option de ligne de commande llvm-profdata-show": [[317, "cmdoption-llvm-profdata-show-all-functions", false], [317, "cmdoption-llvm-profdata-show-counts", false], [317, "cmdoption-llvm-profdata-show-function", false], [317, "cmdoption-llvm-profdata-show-help", false], [317, "cmdoption-llvm-profdata-show-instr", false], [317, "cmdoption-llvm-profdata-show-list-below-cutoff", false], [317, "cmdoption-llvm-profdata-show-memop-sizes", false], [317, "cmdoption-llvm-profdata-show-output", false], [317, "cmdoption-llvm-profdata-show-sample", false], [317, "cmdoption-llvm-profdata-show-text", false], [317, "cmdoption-llvm-profdata-show-topn", false], [317, "cmdoption-llvm-profdata-show-value-cutoff", false]], "option de ligne de commande tblgen": [[322, "cmdoption-tblgen-I", false], [322, "cmdoption-tblgen-asmparsernum", false], [322, "cmdoption-tblgen-asmwriternum", false], [322, "cmdoption-tblgen-class", false], [322, "cmdoption-tblgen-dump-json", false], [322, "cmdoption-tblgen-gen-asm-matcher", false], [322, "cmdoption-tblgen-gen-asm-writer", false], [322, "cmdoption-tblgen-gen-dag-isel", false], [322, "cmdoption-tblgen-gen-dfa-packetizer", false], [322, "cmdoption-tblgen-gen-disassembler", false], [322, "cmdoption-tblgen-gen-emitter", false], [322, "cmdoption-tblgen-gen-enhanced-disassembly-info", false], [322, "cmdoption-tblgen-gen-exegesis", false], [322, "cmdoption-tblgen-gen-fast-isel", false], [322, "cmdoption-tblgen-gen-instr-info", false], [322, "cmdoption-tblgen-gen-intrinsic-enums", false], [322, "cmdoption-tblgen-gen-intrinsic-impl", false], [322, "cmdoption-tblgen-gen-pseudo-lowering", false], [322, "cmdoption-tblgen-gen-register-info", false], [322, "cmdoption-tblgen-gen-subtarget", false], [322, "cmdoption-tblgen-gen-tgt-intrinsic", false], [322, "cmdoption-tblgen-help", false], [322, "cmdoption-tblgen-o", false], [322, "cmdoption-tblgen-print-enums", false], [322, "cmdoption-tblgen-print-records", false], [322, "cmdoption-tblgen-print-sets", false], [322, "cmdoption-tblgen-version", false]]}, "objects": {"": [[308, 0, 1, "cmdoption-a", "--all"], [292, 0, 1, "cmdoption-allow-deprecated-dag-overlap", "--allow-deprecated-dag-overlap"], [308, 0, 1, "cmdoption-debug-abbrev", "--apple-names"], [308, 0, 1, "cmdoption-debug-abbrev", "--apple-namespaces"], [308, 0, 1, "cmdoption-debug-abbrev", "--apple-objc"], [308, 0, 1, "cmdoption-debug-abbrev", "--apple-types"], [294, 0, 1, "cmdoption-arch", "--arch"], [292, 0, 1, "cmdoption-check-prefix", "--check-prefix"], [292, 0, 1, "cmdoption-check-prefixes", "--check-prefixes"], [292, 0, 1, "cmdoption-color", "--color"], [296, 0, 1, "cmdoption-config-prefix", "--config-prefix"], [296, 0, 1, "cmdoption-debug", "--debug"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-abbrev"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-aranges"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-cu-index"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-frame"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-gnu-pubnames"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-gnu-pubtypes"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-info"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-line"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-loc"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-macro"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-pubnames"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-pubtypes"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-ranges"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-str"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-str-offsets"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-tu-index"], [308, 0, 1, "cmdoption-debug-abbrev", "--debug-types"], [308, 0, 1, "cmdoption-diff", "--diff"], [297, 0, 1, "cmdoption-disable-excess-fp-precision", "--disable-excess-fp-precision"], [294, 0, 1, "cmdoption-dump-debug-map", "--dump-debug-map"], [292, 0, 1, "cmdoption-dump-input", "--dump-input"], [292, 0, 1, "cmdoption-dump-input-on-failure", "--dump-input-on-failure"], [296, 0, 1, "cmdoption-vv", "--echo-all-commands"], [308, 0, 1, "cmdoption-debug-abbrev", "--eh-frame"], [297, 0, 1, "cmdoption-enable-no-infs-fp-math", "--enable-no-infs-fp-math"], [297, 0, 1, "cmdoption-enable-no-nans-fp-math", "--enable-no-nans-fp-math"], [297, 0, 1, "cmdoption-enable-unsafe-fp-math", "--enable-unsafe-fp-math"], [292, 0, 1, "cmdoption-enable-var-scope", "--enable-var-scope"], [296, 0, 1, "cmdoption-filter", "--filter"], [308, 0, 1, "cmdoption-f", "--find"], [294, 0, 1, "cmdoption-f", "--flat"], [297, 0, 1, "cmdoption-frame-pointer", "--frame-pointer"], [308, 0, 1, "cmdoption-debug-abbrev", "--gdb-index"], [296, 0, 1, "cmdoption-h", "--help"], [308, 0, 1, "cmdoption-i", "--ignore-case"], [292, 0, 1, "cmdoption-implicit-check-not", "--implicit-check-not"], [292, 0, 1, "cmdoption-input-file", "--input-file"], [297, 0, 1, "cmdoption-load", "--load"], [308, 0, 1, "cmdoption-lookup", "--lookup"], [292, 0, 1, "cmdoption-match-full-lines", "--match-full-lines"], [296, 0, 1, "cmdoption-max-tests", "--max-tests"], [296, 0, 1, "cmdoption-max-time", "--max-time"], [294, 0, 1, "cmdoption-z", "--minimize"], [308, 0, 1, "cmdoption-n", "--name"], [294, 0, 1, "cmdoption-no-odr", "--no-odr"], [294, 0, 1, "cmdoption-no-output", "--no-output"], [296, 0, 1, "cmdoption-no-progress-bar", "--no-progress-bar"], [294, 0, 1, "cmdoption-no-swiftmodule-timestamp", "--no-swiftmodule-timestamp"], [296, 0, 1, "cmdoption-num-shards", "--num-shards"], [294, 0, 1, "cmdoption-j", "--num-threads"], [294, 0, 1, "cmdoption-oso-prepend-path", "--oso-prepend-path"], [308, 0, 1, "cmdoption-o", "--out-file"], [294, 0, 1, "cmdoption-papertrail", "--papertrail"], [296, 0, 1, "cmdoption-D", "--param"], [296, 0, 1, "cmdoption-path", "--path"], [297, 0, 1, "cmdoption-print-machineinstrs", "--print-machineinstrs"], [296, 0, 1, "cmdoption-q", "--quiet"], [308, 0, 1, "cmdoption-r", "--recurse-depth"], [297, 0, 1, "cmdoption-regalloc", "--regalloc"], [308, 0, 1, "cmdoption-x", "--regex"], [296, 0, 1, "cmdoption-run-shard", "--run-shard"], [296, 0, 1, "cmdoption-a", "--show-all"], [308, 0, 1, "cmdoption-c", "--show-children"], [308, 0, 1, "cmdoption-F", "--show-form"], [308, 0, 1, "cmdoption-p", "--show-parents"], [296, 0, 1, "cmdoption-show-suites", "--show-suites"], [296, 0, 1, "cmdoption-show-tests", "--show-tests"], [296, 0, 1, "cmdoption-show-unsupported", "--show-unsupported"], [296, 0, 1, "cmdoption-show-xfail", "--show-xfail"], [296, 0, 1, "cmdoption-shuffle", "--shuffle"], [297, 0, 1, "cmdoption-spiller", "--spiller"], [308, 0, 1, "cmdoption-statistics", "--statistics"], [297, 0, 1, "cmdoption-stats", "--stats"], [292, 0, 1, "cmdoption-strict-whitespace", "--strict-whitespace"], [296, 0, 1, "cmdoption-s", "--succinct"], [294, 0, 1, "cmdoption-s", "--symtab"], [296, 0, 1, "cmdoption-j", "--threads"], [297, 0, 1, "cmdoption-time-passes", "--time-passes"], [296, 0, 1, "cmdoption-time-tests", "--time-tests"], [294, 0, 1, "cmdoption-toolchain", "--toolchain"], [294, 0, 1, "cmdoption-u", "--update"], [308, 0, 1, "cmdoption-u", "--uuid"], [294, 0, 1, "cmdoption-v", "--verbose"], [308, 0, 1, "cmdoption-verify", "--verify"], [294, 0, 1, "cmdoption-version", "--version"], [296, 0, 1, "cmdoption-vg", "--vg"], [296, 0, 1, "cmdoption-vg-arg", "--vg-arg"], [296, 0, 1, "cmdoption-vg-leak", "--vg-leak"], [297, 0, 1, "cmdoption-x86-asm-syntax", "--x86-asm-syntax"], [320, 0, 1, "cmdoption-demangle", "-C"], [296, 0, 1, "cmdoption-D", "-D"], [292, 0, 1, "cmdoption-D-VAR", "-D&lt;VAR"], [308, 0, 1, "cmdoption-F", "-F"], [297, 0, 1, "cmdoption-O", "-O"], [312, 0, 1, "cmdoption-S", "-S"], [296, 0, 1, "cmdoption-a", "-a"], [320, 0, 1, "cmdoption-print-address", "-addresses"], [313, 0, 1, "cmdoption-all-stats", "-all-stats"], [313, 0, 1, "cmdoption-all-views", "-all-views"], [309, 0, 1, "cmdoption-analysis-clusters-output-file", "-analysis-clusters-output-file"], [309, 0, 1, "cmdoption-analysis-espilon", "-analysis-espilon"], [309, 0, 1, "cmdoption-analysis-inconsistencies-output-file", "-analysis-inconsistencies-output-file"], [309, 0, 1, "cmdoption-analysis-numpoints", "-analysis-numpoints"], [315, 0, 1, "cmdoption-arch", "-arch"], [309, 0, 1, "cmdoption-benchmarks-file", "-benchmarks-file"], [308, 0, 1, "cmdoption-c", "-c"], [315, 0, 1, "cmdoption-cfg", "-cfg"], [298, 0, 1, "cmdoption-code-model", "-code-model"], [312, 0, 1, "cmdoption-d", "-d"], [321, 0, 1, "cmdoption-debug", "-debug"], [320, 0, 1, "cmdoption-default-arch", "-default-arch"], [320, 0, 1, "cmdoption-demangle", "-demangle"], [298, 0, 1, "cmdoption-disable-excess-fp-precision", "-disable-excess-fp-precision"], [321, 0, 1, "cmdoption-disable-inlining", "-disable-inlining"], [321, 0, 1, "cmdoption-disable-opt", "-disable-opt"], [298, 0, 1, "cmdoption-disable-post-RA-scheduler", "-disable-post-RA-scheduler"], [298, 0, 1, "cmdoption-disable-spill-fusing", "-disable-spill-fusing"], [315, 0, 1, "cmdoption-d", "-disassemble"], [315, 0, 1, "cmdoption-D", "-disassemble-all"], [313, 0, 1, "cmdoption-dispatch", "-dispatch"], [313, 0, 1, "cmdoption-dispatch-stats", "-dispatch-stats"], [315, 0, 1, "cmdoption-dsym", "-dsym"], [320, 0, 1, "cmdoption-dsym-hint", "-dsym-hint"], [318, 0, 1, "cmdoption-dyn-symbols", "-dyn-symbols"], [318, 0, 1, "cmdoption-dynamic-table", "-dynamic-table"], [320, 0, 1, "cmdoption-obj", "-e"], [318, 0, 1, "cmdoption-elf-section-groups", "-elf-section-groups"], [298, 0, 1, "cmdoption-enable-no-infs-fp-math", "-enable-no-infs-fp-math"], [298, 0, 1, "cmdoption-enable-no-nans-fp-math", "-enable-no-nans-fp-math"], [298, 0, 1, "cmdoption-enable-unsafe-fp-math", "-enable-unsafe-fp-math"], [320, 0, 1, "cmdoption-obj", "-exe"], [318, 0, 1, "cmdoption-expand-relocs", "-expand-relocs"], [294, 0, 1, "cmdoption-f", "-f"], [298, 0, 1, "cmdoption-fake-argv0", "-fake-argv0"], [318, 0, 1, "cmdoption-file-headers", "-file-headers"], [297, 0, 1, "cmdoption-filetype", "-filetype"], [298, 0, 1, "cmdoption-force-interpreter", "-force-interpreter"], [320, 0, 1, "cmdoption-functions", "-functions"], [315, 0, 1, "cmdoption-g", "-g"], [296, 0, 1, "cmdoption-h", "-h"], [292, 0, 1, "cmdoption-help", "-help"], [308, 0, 1, "cmdoption-i", "-i"], [309, 0, 1, "cmdoption-ignore-invalid-sched-class", "-ignore-invalid-sched-class"], [320, 0, 1, "cmdoption-inlining", "-inlining"], [313, 0, 1, "cmdoption-instruction-info", "-instruction-info"], [313, 0, 1, "cmdoption-instruction-tables", "-instruction-tables"], [313, 0, 1, "cmdoption-iterations", "-iterations"], [294, 0, 1, "cmdoption-j", "-j"], [298, 0, 1, "cmdoption-jit-enable-eh", "-jit-enable-eh"], [298, 0, 1, "cmdoption-join-liveintervals", "-join-liveintervals"], [298, 0, 1, "cmdoption-load", "-load"], [313, 0, 1, "cmdoption-lqueue", "-lqueue"], [315, 0, 1, "cmdoption-m", "-m"], [315, 0, 1, "cmdoption-m", "-macho"], [297, 0, 1, "cmdoption-march", "-march"], [297, 0, 1, "cmdoption-mattr", "-mattr"], [315, 0, 1, "cmdoption-mc-x86-disable-arith-relaxation", "-mc-x86-disable-arith-relaxation"], [297, 0, 1, "cmdoption-mcpu", "-mcpu"], [297, 0, 1, "cmdoption-meabi", "-meabi"], [309, 0, 1, "cmdoption-mode", "-mode"], [297, 0, 1, "cmdoption-mtriple", "-mtriple"], [308, 0, 1, "cmdoption-n", "-n"], [318, 0, 1, "cmdoption-needed-libs", "-needed-libs"], [313, 0, 1, "cmdoption-noalias", "-noalias"], [298, 0, 1, "cmdoption-nozero-initialized-in-bss", "-nozero-initialized-in-bss"], [309, 0, 1, "cmdoption-num-repetitions", "-num-repetitions"], [294, 0, 1, "cmdoption-o", "-o"], [320, 0, 1, "cmdoption-obj", "-obj"], [309, 0, 1, "cmdoption-opcode-index", "-opcode-index"], [309, 0, 1, "cmdoption-opcode-name", "-opcode-name"], [313, 0, 1, "cmdoption-output-asm-variant", "-output-asm-variant"], [308, 0, 1, "cmdoption-p", "-p"], [298, 0, 1, "cmdoption-pre-RA-sched", "-pre-RA-sched"], [320, 0, 1, "cmdoption-pretty-print", "-pretty-print"], [320, 0, 1, "cmdoption-print-address", "-print-address"], [318, 0, 1, "cmdoption-program-headers", "-program-headers"], [296, 0, 1, "cmdoption-q", "-q"], [308, 0, 1, "cmdoption-r", "-r"], [298, 0, 1, "cmdoption-regalloc", "-regalloc"], [313, 0, 1, "cmdoption-register-file-size", "-register-file-size"], [313, 0, 1, "cmdoption-register-file-stats", "-register-file-stats"], [298, 0, 1, "cmdoption-relocation-model", "-relocation-model"], [318, 0, 1, "cmdoption-relocations", "-relocations"], [313, 0, 1, "cmdoption-resource-pressure", "-resource-pressure"], [313, 0, 1, "cmdoption-retire-stats", "-retire-stats"], [294, 0, 1, "cmdoption-s", "-s"], [313, 0, 1, "cmdoption-scheduler-stats", "-scheduler-stats"], [318, 0, 1, "cmdoption-section-data", "-sd"], [318, 0, 1, "cmdoption-section-data", "-section-data"], [315, 0, 1, "cmdoption-section-headers", "-section-headers"], [318, 0, 1, "cmdoption-section-relocations", "-section-relocations"], [318, 0, 1, "cmdoption-section-symbols", "-section-symbols"], [318, 0, 1, "cmdoption-sections", "-sections"], [319, 0, 1, "cmdoption-seed", "-seed"], [319, 0, 1, "cmdoption-size", "-size"], [309, 0, 1, "cmdoption-snippets-file", "-snippets-file"], [298, 0, 1, "cmdoption-soft-float", "-soft-float"], [298, 0, 1, "cmdoption-spiller", "-spiller"], [313, 0, 1, "cmdoption-squeue", "-squeue"], [318, 0, 1, "cmdoption-section-relocations", "-sr"], [318, 0, 1, "cmdoption-section-symbols", "-st"], [297, 0, 1, "cmdoption-stack-size-section", "-stack-size-section"], [298, 0, 1, "cmdoption-stats", "-stats"], [321, 0, 1, "cmdoption-strip-debug", "-strip-debug"], [318, 0, 1, "cmdoption-symbols", "-symbols"], [315, 0, 1, "cmdoption-t", "-t"], [298, 0, 1, "cmdoption-time-passes", "-time-passes"], [313, 0, 1, "cmdoption-timeline", "-timeline"], [313, 0, 1, "cmdoption-timeline-max-cycles", "-timeline-max-cycles"], [313, 0, 1, "cmdoption-timeline-max-iterations", "-timeline-max-iterations"], [315, 0, 1, "cmdoption-triple", "-triple"], [294, 0, 1, "cmdoption-u", "-u"], [318, 0, 1, "cmdoption-unwind", "-unwind"], [320, 0, 1, "cmdoption-use-symbol-table", "-use-symbol-table"], [292, 0, 1, "cmdoption-v", "-v"], [321, 0, 1, "cmdoption-verify-each", "-verify-each"], [292, 0, 1, "cmdoption-version", "-version"], [292, 0, 1, "cmdoption-vv", "-vv"], [308, 0, 1, "cmdoption-x", "-x"], [298, 0, 1, "cmdoption-x86-asm-syntax", "-x86-asm-syntax"], [294, 0, 1, "cmdoption-y", "-y"], [294, 0, 1, "cmdoption-z", "-z"], [321, 0, 1, "cmdoption-passname", "-{passname}"], [315, 0, 1, "cmdoption-arg-att", "att"], [315, 0, 1, "cmdoption-arg-intel", "intel"]], "llvm-bcanalyzer": [[301, 0, 1, "cmdoption-llvm-bcanalyzer-dump", "-dump"], [301, 0, 1, "cmdoption-llvm-bcanalyzer-help", "-help"], [301, 0, 1, "cmdoption-llvm-bcanalyzer-nodetails", "-nodetails"], [301, 0, 1, "cmdoption-llvm-bcanalyzer-verify", "-verify"]], "llvm-cov-export": [[304, 0, 1, "cmdoption-llvm-cov-export-arch", "-arch"], [304, 0, 1, "cmdoption-llvm-cov-export-format", "-format"], [304, 0, 1, "cmdoption-llvm-cov-export-ignore-filename-regex", "-ignore-filename-regex"], [304, 0, 1, "cmdoption-llvm-cov-export-summary-only", "-summary-only"]], "llvm-cov-gcov": [[304, 0, 1, "cmdoption-llvm-cov-gcov-a", "--all-blocks"], [304, 0, 1, "cmdoption-llvm-cov-gcov-c", "--branch-counts"], [304, 0, 1, "cmdoption-llvm-cov-gcov-b", "--branch-probabilities"], [304, 0, 1, "cmdoption-llvm-cov-gcov-f", "--function-summaries"], [304, 0, 1, "cmdoption-llvm-cov-gcov-help", "--help"], [304, 0, 1, "cmdoption-llvm-cov-gcov-l", "--long-file-names"], [304, 0, 1, "cmdoption-llvm-cov-gcov-n", "--no-output"], [304, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-directory"], [304, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-file"], [304, 0, 1, "cmdoption-llvm-cov-gcov-p", "--preserve-paths"], [304, 0, 1, "cmdoption-llvm-cov-gcov-u", "--unconditional-branches"], [304, 0, 1, "cmdoption-llvm-cov-gcov-a", "-a"], [304, 0, 1, "cmdoption-llvm-cov-gcov-b", "-b"], [304, 0, 1, "cmdoption-llvm-cov-gcov-c", "-c"], [304, 0, 1, "cmdoption-llvm-cov-gcov-f", "-f"], [304, 0, 1, "cmdoption-llvm-cov-gcov-l", "-l"], [304, 0, 1, "cmdoption-llvm-cov-gcov-n", "-n"], [304, 0, 1, "cmdoption-llvm-cov-gcov-o", "-o"], [304, 0, 1, "cmdoption-llvm-cov-gcov-p", "-p"], [304, 0, 1, "cmdoption-llvm-cov-gcov-u", "-u"], [304, 0, 1, "cmdoption-llvm-cov-gcov-version", "-version"]], "llvm-cov-report": [[304, 0, 1, "cmdoption-llvm-cov-report-arch", "-arch"], [304, 0, 1, "cmdoption-llvm-cov-report-ignore-filename-regex", "-ignore-filename-regex"], [304, 0, 1, "cmdoption-llvm-cov-report-show-functions", "-show-functions"], [304, 0, 1, "cmdoption-llvm-cov-report-show-instantiation-summary", "-show-instantiation-summary"], [304, 0, 1, "cmdoption-llvm-cov-report-use-color", "-use-color"]], "llvm-cov-show": [[304, 0, 1, "cmdoption-llvm-cov-show-Xdemangler", "-Xdemangler"], [304, 0, 1, "cmdoption-llvm-cov-show-arch", "-arch"], [304, 0, 1, "cmdoption-llvm-cov-show-format", "-format"], [304, 0, 1, "cmdoption-llvm-cov-show-ignore-filename-regex", "-ignore-filename-regex"], [304, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-j"], [304, 0, 1, "cmdoption-llvm-cov-show-line-coverage-gt", "-line-coverage-gt"], [304, 0, 1, "cmdoption-llvm-cov-show-line-coverage-lt", "-line-coverage-lt"], [304, 0, 1, "cmdoption-llvm-cov-show-name", "-name"], [304, 0, 1, "cmdoption-llvm-cov-show-name-regex", "-name-regex"], [304, 0, 1, "cmdoption-llvm-cov-show-name-whitelist", "-name-whitelist"], [304, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-num-threads"], [304, 0, 1, "cmdoption-llvm-cov-show-output-dir", "-output-dir"], [304, 0, 1, "cmdoption-llvm-cov-show-path-equivalence", "-path-equivalence"], [304, 0, 1, "cmdoption-llvm-cov-show-region-coverage-gt", "-region-coverage-gt"], [304, 0, 1, "cmdoption-llvm-cov-show-region-coverage-lt", "-region-coverage-lt"], [304, 0, 1, "cmdoption-llvm-cov-show-show-expansions", "-show-expansions"], [304, 0, 1, "cmdoption-llvm-cov-show-show-instantiations", "-show-instantiations"], [304, 0, 1, "cmdoption-llvm-cov-show-show-line-counts", "-show-line-counts"], [304, 0, 1, "cmdoption-llvm-cov-show-show-line-counts-or-regions", "-show-line-counts-or-regions"], [304, 0, 1, "cmdoption-llvm-cov-show-show-regions", "-show-regions"], [304, 0, 1, "cmdoption-llvm-cov-show-tab-size", "-tab-size"], [304, 0, 1, "cmdoption-llvm-cov-show-use-color", "-use-color"]], "llvm-cxxmap": [[305, 0, 1, "cmdoption-llvm-cxxmap-Wambiguous", "-Wambiguous"], [305, 0, 1, "cmdoption-llvm-cxxmap-Wincomplete", "-Wincomplete"], [305, 0, 1, "cmdoption-llvm-cxxmap-output", "-o"], [305, 0, 1, "cmdoption-llvm-cxxmap-output", "-output"], [305, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-r"], [305, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-remapping-file"]], "llvm-nm": [[314, 0, 1, "cmdoption-llvm-nm-debug-syms", "--debug-syms"], [314, 0, 1, "cmdoption-llvm-nm-defined-only", "--defined-only"], [314, 0, 1, "cmdoption-llvm-nm-dynamic", "--dynamic"], [314, 0, 1, "cmdoption-llvm-nm-extern-only", "--extern-only"], [314, 0, 1, "cmdoption-llvm-nm-format", "--format"], [314, 0, 1, "cmdoption-llvm-nm-no-sort", "--no-sort"], [314, 0, 1, "cmdoption-llvm-nm-no-weak", "--no-weak"], [314, 0, 1, "cmdoption-llvm-nm-numeric-sort", "--numeric-sort"], [314, 0, 1, "cmdoption-llvm-nm-print-file-name", "--print-file-name"], [314, 0, 1, "cmdoption-llvm-nm-print-size", "--print-size"], [314, 0, 1, "cmdoption-llvm-nm-radix", "--radix"], [314, 0, 1, "cmdoption-llvm-nm-size-sort", "--size-sort"], [314, 0, 1, "cmdoption-llvm-nm-undefined-only", "--undefined-only"], [314, 0, 1, "cmdoption-llvm-nm-print-file-name", "-A"], [314, 0, 1, "cmdoption-llvm-nm-B", "-B"], [314, 0, 1, "cmdoption-llvm-nm-dynamic", "-D"], [314, 0, 1, "cmdoption-llvm-nm-P", "-P"], [314, 0, 1, "cmdoption-llvm-nm-print-size", "-S"], [314, 0, 1, "cmdoption-llvm-nm-no-weak", "-W"], [314, 0, 1, "cmdoption-llvm-nm-debug-syms", "-a"], [314, 0, 1, "cmdoption-llvm-nm-format", "-f"], [314, 0, 1, "cmdoption-llvm-nm-extern-only", "-g"], [314, 0, 1, "cmdoption-llvm-nm-help", "-help"], [314, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-n"], [314, 0, 1, "cmdoption-llvm-nm-print-file-name", "-o"], [314, 0, 1, "cmdoption-llvm-nm-no-sort", "-p"], [314, 0, 1, "cmdoption-llvm-nm-radix", "-t"], [314, 0, 1, "cmdoption-llvm-nm-undefined-only", "-u"], [314, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-v"]], "llvm-pdbutil-bytes": [[316, 0, 1, "cmdoption-llvm-pdbutil-bytes-block-range", "-block-range"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-byte-range", "-byte-range"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-chunks", "-chunks"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-ec", "-ec"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-files", "-files"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-fpm", "-fpm"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-id", "-id"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-mod", "-mod"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-modi", "-modi"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-name-map", "-name-map"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-sc", "-sc"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-sm", "-sm"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-split-chunks", "-split-chunks"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-stream-data", "-stream-data"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-syms", "-syms"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-type", "-type"], [316, 0, 1, "cmdoption-llvm-pdbutil-bytes-type-server", "-type-server"]], "llvm-pdbutil-dump": [[316, 0, 1, "cmdoption-llvm-pdbutil-dump-all", "-all"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-dependents", "-dependents"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-files", "-files"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-global-extras", "-global-extras"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-globals", "-globals"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-id-data", "-id-data"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-id-extras", "-id-extras"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-id-index", "-id-index"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-ids", "-ids"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-il", "-il"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-l", "-l"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-modi", "-modi"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-modules", "-modules"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-public-extras", "-public-extras"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-publics", "-publics"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-section-contribs", "-section-contribs"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-section-headers", "-section-headers"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-section-map", "-section-map"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-stream-blocks", "-stream-blocks"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-streams", "-streams"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-string-table", "-string-table"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-summary", "-summary"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-sym-data", "-sym-data"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-symbols", "-symbols"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-type-data", "-type-data"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-type-extras", "-type-extras"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-type-index", "-type-index"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-types", "-types"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-xme", "-xme"], [316, 0, 1, "cmdoption-llvm-pdbutil-dump-xmi", "-xmi"]], "llvm-pdbutil-merge": [[316, 0, 1, "cmdoption-llvm-pdbutil-merge-pdb", "-pdb"]], "llvm-pdbutil-pretty": [[316, 0, 1, "cmdoption-llvm-pdbutil-pretty-all", "-all"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-definitions", "-class-definitions"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-order", "-class-order"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", "-class-recurse-depth"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-classes", "-classes"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-color-output", "-color-output"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-compilands", "-compilands"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-enums", "-enums"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", "-exclude-compilands"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", "-exclude-symbols"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-types", "-exclude-types"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-externals", "-externals"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-globals", "-globals"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-compilands", "-include-compilands"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-symbols", "-include-symbols"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-types", "-include-types"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-lines", "-lines"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-load-address", "-load-address"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding", "-min-class-padding"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", "-min-class-padding-imm"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-type-size", "-min-type-size"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-module-syms", "-module-syms"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", "-no-compiler-generated"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", "-no-enum-definitions"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-system-libs", "-no-system-libs"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-sym-types", "-sym-types"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-symbol-order", "-symbol-order"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-typedefs", "-typedefs"], [316, 0, 1, "cmdoption-llvm-pdbutil-pretty-types", "-types"]], "llvm-pdbutil-yaml2pdb": [[316, 0, 1, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", "-pdb"]], "llvm-profdata-merge": [[317, 0, 1, "cmdoption-llvm-profdata-merge-binary", "-binary"], [317, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "-f"], [317, 0, 1, "cmdoption-llvm-profdata-merge-gcc", "-gcc"], [317, 0, 1, "cmdoption-llvm-profdata-merge-help", "-help"], [317, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "-input-files"], [317, 0, 1, "cmdoption-llvm-profdata-merge-instr", "-instr"], [317, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "-j"], [317, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "-num-threads"], [317, 0, 1, "cmdoption-llvm-profdata-merge-output", "-o"], [317, 0, 1, "cmdoption-llvm-profdata-merge-output", "-output"], [317, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "-r"], [317, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "-remapping-file"], [317, 0, 1, "cmdoption-llvm-profdata-merge-sample", "-sample"], [317, 0, 1, "cmdoption-llvm-profdata-merge-sparse", "-sparse"], [317, 0, 1, "cmdoption-llvm-profdata-merge-text", "-text"], [317, 0, 1, "cmdoption-llvm-profdata-merge-weighted-input", "-weighted-input"]], "llvm-profdata-show": [[317, 0, 1, "cmdoption-llvm-profdata-show-all-functions", "-all-functions"], [317, 0, 1, "cmdoption-llvm-profdata-show-counts", "-counts"], [317, 0, 1, "cmdoption-llvm-profdata-show-function", "-function"], [317, 0, 1, "cmdoption-llvm-profdata-show-help", "-help"], [317, 0, 1, "cmdoption-llvm-profdata-show-instr", "-instr"], [317, 0, 1, "cmdoption-llvm-profdata-show-list-below-cutoff", "-list-below-cutoff"], [317, 0, 1, "cmdoption-llvm-profdata-show-memop-sizes", "-memop-sizes"], [317, 0, 1, "cmdoption-llvm-profdata-show-output", "-o"], [317, 0, 1, "cmdoption-llvm-profdata-show-output", "-output"], [317, 0, 1, "cmdoption-llvm-profdata-show-sample", "-sample"], [317, 0, 1, "cmdoption-llvm-profdata-show-text", "-text"], [317, 0, 1, "cmdoption-llvm-profdata-show-topn", "-topn"], [317, 0, 1, "cmdoption-llvm-profdata-show-value-cutoff", "-value-cutoff"]], "tblgen": [[322, 0, 1, "cmdoption-tblgen-I", "-I"], [322, 0, 1, "cmdoption-tblgen-asmparsernum", "-asmparsernum"], [322, 0, 1, "cmdoption-tblgen-asmwriternum", "-asmwriternum"], [322, 0, 1, "cmdoption-tblgen-class", "-class"], [322, 0, 1, "cmdoption-tblgen-dump-json", "-dump-json"], [322, 0, 1, "cmdoption-tblgen-gen-asm-matcher", "-gen-asm-matcher"], [322, 0, 1, "cmdoption-tblgen-gen-asm-writer", "-gen-asm-writer"], [322, 0, 1, "cmdoption-tblgen-gen-dag-isel", "-gen-dag-isel"], [322, 0, 1, "cmdoption-tblgen-gen-dfa-packetizer", "-gen-dfa-packetizer"], [322, 0, 1, "cmdoption-tblgen-gen-disassembler", "-gen-disassembler"], [322, 0, 1, "cmdoption-tblgen-gen-emitter", "-gen-emitter"], [322, 0, 1, "cmdoption-tblgen-gen-enhanced-disassembly-info", "-gen-enhanced-disassembly-info"], [322, 0, 1, "cmdoption-tblgen-gen-exegesis", "-gen-exegesis"], [322, 0, 1, "cmdoption-tblgen-gen-fast-isel", "-gen-fast-isel"], [322, 0, 1, "cmdoption-tblgen-gen-instr-info", "-gen-instr-info"], [322, 0, 1, "cmdoption-tblgen-gen-intrinsic-enums", "-gen-intrinsic-enums"], [322, 0, 1, "cmdoption-tblgen-gen-intrinsic-impl", "-gen-intrinsic-impl"], [322, 0, 1, "cmdoption-tblgen-gen-pseudo-lowering", "-gen-pseudo-lowering"], [322, 0, 1, "cmdoption-tblgen-gen-register-info", "-gen-register-info"], [322, 0, 1, "cmdoption-tblgen-gen-subtarget", "-gen-subtarget"], [322, 0, 1, "cmdoption-tblgen-gen-tgt-intrinsic", "-gen-tgt-intrinsic"], [322, 0, 1, "cmdoption-tblgen-help", "-help"], [322, 0, 1, "cmdoption-tblgen-o", "-o"], [322, 0, 1, "cmdoption-tblgen-print-enums", "-print-enums"], [322, 0, 1, "cmdoption-tblgen-print-records", "-print-records"], [322, 0, 1, "cmdoption-tblgen-print-sets", "-print-sets"], [322, 0, 1, "cmdoption-tblgen-version", "-version"]]}, "objnames": {"0": ["std", "cmdoption", "option du programme"]}, "objtypes": {"0": "std:cmdoption"}, "terms": {"0": [3, 7, 27, 30, 65, 80, 81, 85, 93, 95, 96, 100, 104, 106, 107, 111, 113, 116, 117, 122, 128, 159, 174, 175, 179, 207, 208, 214, 220, 253, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 285, 287, 289, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 313, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 330, 331, 332, 334, 336, 339, 341, 342, 343, 344, 345, 346, 350, 351, 353, 355, 356, 357, 358, 359, 360, 362, 363, 365, 366, 367, 371, 374, 375, 376, 379, 380, 381, 383, 385, 386, 391, 392, 393, 394, 395, 396, 398, 401, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "00": [299, 309, 313, 328, 345, 357, 362, 375, 383, 427, 428, 429, 431, 437, 438, 439, 441], "000": 393, "0000": 414, "000000": [407, 413, 416, 428, 430, 438, 440], "00000000041516c6": 416, "000000e": [427, 428, 429, 431, 437, 438, 439, 441], "000001": 416, "000002": 416, "000003": 416, "000006": 416, "000007": 416, "000008": 416, "000010": 416, "000014": 416, "000016": 416, "000017": 416, "000018": 416, "000019": 416, "000023": 416, "00002fc0": 416, "000032": 416, "000035": 416, "000037": 416, "000041": 416, "000046": 416, "000049": 416, "000050": 416, "000063": 416, "000075": 416, "0001": 414, "000102030405060708090a0b0c0d0e0f": 357, "000106": 416, "000120": 416, "000123": 416, "000138": 416, "000155": 416, "000156": 416, "000214": 416, "000215": 416, "0003": 414, "000302": 416, "000310": 416, "000342": 416, "0004": 414, "000471": 416, "0005": 414, "000562": 416, "0007": 414, "000737": 416, "000774": 416, "000799": 416, "001": 281, "0011": 281, "001375": 416, "001596": 416, "003400": 407, "004523": 416, "0058": 309, "01": [274, 309, 328, 332, 345, 357, 383, 394, 407, 428, 429, 431, 438, 439, 441], "010": 274, "011": 281, "011200": 407, "012345": 313, "0123456789": 313, "0170": 329, "01pi0": 273, "02": [309, 328, 394, 430, 440], "03": [325, 430, 440], "03d516c6": 416, "04": [328, 341, 427, 430, 437, 440], "041688": 385, "041721": 385, "041739": 385, "0462": 407, "049886": 385, "04e": 357, "05": [359, 430, 440], "06": 325, "062624": 416, "067200": 407, "07": [385, 417, 430, 440], "08": 415, "0a": 357, "0b": [274, 404], "0b000000": 413, "0b00000000": 357, "0b000011": 413, "0b000100": 413, "0b000111": 413, "0b0011": 273, "0b01101101": 357, "0b01111000": 357, "0b10": 403, "0b100": 403, "0b10000000": 357, "0b1001011": 403, "0b101": 403, "0b1010": [273, 274], "0b10110110": 357, "0b111": 403, "0b11100001": 357, "0b1111": 273, "0b11111110": 357, "0b11111111": 357, "0baz": 383, "0c": 328, "0cleanup": 332, "0dev": 407, "0e": 357, "0f": 367, "0f00000000": 367, "0f3f800000": 367, "0f3fb8aa3b": 367, "0f42d20000": 367, "0f7f800000": 367, "0fb5bfbe8": 367, "0fbf317200": 367, "0fc2d20000": 367, "0ffh": 274, "0th": 340, "0u": 393, "0x": [274, 292, 323, 357, 393, 404], "0x0": [275, 281, 289, 383], "0x00": [275, 299, 328, 396], "0x000": 275, "0x00000000": [275, 393], "0x0000000000000000": 275, "0x0000000000000002": 329, "0x000000000059c583": 329, "0x0000000000d953b3": 329, "0x0000000000dc8872": 329, "0x00000000016677e0": 329, "0x00000000ffefffff": 274, "0x00000002": 393, "0x00000003": 393, "0x00000004": 393, "0x00000009": 393, "0x00000067": 393, "0x0000006e": 393, "0x000000c9": 292, "0x000000ff": 275, "0x00000100": [275, 393], "0x00000110": 393, "0x00000120": 393, "0x00000130": 393, "0x00000140": 393, "0x00000147": 393, "0x00000150": 393, "0x00000200": 275, "0x00000233": 292, "0x000003bd": 393, "0x000003cd": 393, "0x000003f3": 393, "0x000003ff": 289, "0x00001000": 393, "0x00001023": 393, "0x00001203": 393, "0x00001c00": 289, "0x00002000": 393, "0x00002023": 393, "0x00002200": 393, "0x000034f0": 393, "0x00003500": 393, "0x00003550": 393, "0x00007fff": 289, "0x00007ffff7ed40a9": 329, "0x0001023": 393, "0x0002023": 393, "0x001": 275, "0x002": 275, "0x003": 275, "0x004": 275, "0x005": 275, "0x006": 275, "0x007": 275, "0x008": 275, "0x009": 275, "0x00a": 275, "0x00b": 275, "0x00c": 275, "0x00d": 275, "0x00e": 275, "0x00f": 275, "0x00ff0000": 289, "0x01": [275, 328, 393, 405, 417], "0x010": 275, "0x011": 275, "0x01f": 275, "0x02": [275, 328, 393], "0x020": 275, "0x021": 275, "0x022": 275, "0x023": 275, "0x024": 275, "0x025": 275, "0x026": 275, "0x027": 275, "0x028": 275, "0x029": 275, "0x02a": 275, "0x02b": 275, "0x02c": 275, "0x02d": 275, "0x02e": 275, "0x02f": 275, "0x03": [275, 396], "0x030": 275, "0x031": 275, "0x04": [275, 393, 417], "0x05": [275, 396], "0x06": [275, 396], "0x07": [275, 396], "0x08": [275, 393], "0x0a": [299, 396], "0x0abcd": 357, "0x0b": 396, "0x0b17c0de": 281, "0x0c": 328, "0x0d": 396, "0x0e": 396, "0x0f": 396, "0x0fffffff": 417, "0x1": [273, 275, 289, 383, 393, 396], "0x10": [273, 309, 393, 396], "0x100": [393, 394], "0x1000": 393, "0x100000f24": 320, "0x12": [30, 122, 214], "0x1234": 393, "0x12345678": 393, "0x14c": [371, 444], "0x1603020": 329, "0x16151f0": 329, "0x16677e0": 329, "0x1afp": 274, "0x1b": 281, "0x1c2": 334, "0x1f84": 320, "0x1ff00": 274, "0x2": [273, 289, 383, 396], "0x20": 393, "0x200": [393, 394], "0x2000": 393, "0x2001": 275, "0x2413bc": 414, "0x29273623": 393, "0x2a": 280, "0x3": [273, 289, 383, 396], "0x3000": 316, "0x3039": 383, "0x3500000001652748": 329, "0x3c00": 274, "0x3f": 334, "0x3f800000": 274, "0x3fe": 393, "0x3fe9": 393, "0x3feaed548f090ce": 428, "0x3feb": 393, "0x3fed": 393, "0x4": [273, 289, 396], "0x40": 393, "0x400": [393, 394], "0x4000": [316, 393], "0x40000000": 362, "0x4004f4": 320, "0x400528": 320, "0x40054d": 320, "0x401000": 320, "0x4200": 393, "0x432ff973cafa8000": 357, "0x5": [289, 396], "0x5cf8c24cdb18bdac": 328, "0x6": [27, 116, 207, 289], "0x60": 299, "0x60500020": 444, "0x6fff4c02": 334, "0x7": 289, "0x70b298": 414, "0x710": 320, "0x744e60": 359, "0x744ea0": 359, "0x7f": [357, 403], "0x7fefffff00000000": 274, "0x7fefffffffffffff": 274, "0x7fff": 275, "0x7ffff7ed404c": 329, "0x7fffffff": 357, "0x7fffffffe018": 329, "0x7fffffffe040": 329, "0x8": [273, 289, 383], "0x80": [299, 393], "0x800": 393, "0x80000000": 275, "0x82638293": 393, "0x8664": 371, "0x9": [289, 383], "0x90": 398, "0xa": [275, 289, 383], "0xabcdef00": 398, "0xb": 289, "0xc": [281, 289], "0xc3": 403, "0xd": [281, 289], "0xe": 281, "0xe413754a191db537": 328, "0xe8": 403, "0xeffe0000": 371, "0xf": [273, 403], "0xfc": 275, "0xfe": 275, "0xff": [273, 274, 275, 357, 403], "0xff00": 274, "0xffbef174": 414, "0xffefffff": 274, "0xffefffff00000000": 274, "0xfff": 273, "0xffff": [273, 274, 275, 357, 371, 396], "0xffff000000000002": 396, "0xffffffff": [274, 275, 281, 357], "0xffffffffffefffff": 274, "0xffffffffffff00ff": 274, "0xffffffffffffff00": 274, "0xh": 357, "0xk": 357, "0xl": 357, "0xl00000000000000004000900000000000": 357, "0xm": 357, "0xxxxxxxxx": 393, "1": [3, 4, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 30, 31, 32, 41, 42, 43, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 70, 74, 78, 80, 81, 82, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 116, 117, 122, 123, 124, 125, 128, 134, 138, 139, 140, 145, 146, 149, 150, 151, 152, 153, 154, 164, 168, 172, 174, 175, 176, 178, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 203, 204, 207, 208, 214, 215, 216, 217, 220, 225, 228, 232, 233, 234, 239, 240, 243, 244, 245, 246, 247, 248, 256, 257, 260, 264, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 288, 289, 291, 292, 294, 296, 298, 299, 301, 304, 305, 306, 308, 313, 314, 315, 316, 317, 323, 324, 327, 328, 329, 330, 332, 334, 335, 336, 338, 339, 341, 343, 344, 345, 347, 350, 353, 355, 356, 357, 359, 362, 364, 365, 366, 367, 368, 371, 375, 376, 379, 380, 381, 383, 386, 387, 388, 389, 391, 393, 394, 396, 398, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "10": [27, 30, 116, 122, 207, 214, 274, 275, 277, 279, 281, 289, 291, 299, 313, 317, 324, 328, 329, 340, 341, 350, 357, 360, 367, 368, 371, 375, 383, 393, 394, 403, 413, 414, 416, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "100": [80, 174, 270, 275, 278, 291, 313, 339, 357, 383, 393, 412, 414, 429, 430, 431, 432, 433, 439], "1000": [359, 375, 381, 383, 425, 434], "10000": [309, 366], "10010001": 357, "1003": 299, "1011": 281, "102": [274, 313, 416], "1020": [289, 357], "1023": 289, "1024": [289, 323, 357, 375, 391, 412], "1025": 289, "102593": 416, "1026": 289, "102787": 385, "102804": 385, "102kb": 323, "103": [275, 416], "1030": 357, "104": 274, "108055": 416, "1083": 416, "109": 313, "10m": 359, "10x": 324, "11": [27, 116, 174, 207, 270, 275, 278, 281, 287, 289, 313, 320, 324, 329, 357, 367, 368, 371, 375, 383, 385, 391, 393, 394, 403, 412, 413, 415, 416, 418, 423, 424, 430, 431, 432, 433], "110": 416, "1108": 433, "111": [367, 407], "112": [275, 357, 392], "1129": 433, "1183": 433, "1184": 433, "12": [80, 273, 274, 275, 281, 287, 289, 291, 292, 299, 313, 316, 320, 328, 329, 341, 357, 359, 362, 367, 368, 371, 375, 383, 393, 398, 403, 407, 408, 413, 418, 430, 431, 432, 433], "120": [329, 357, 428, 438], "1200": 359, "1210": 433, "1218": 433, "122": 357, "1222": 407, "123": [357, 366, 385, 416, 430, 431, 440, 441], "1234": 274, "12345": [350, 383, 385], "1234567": 357, "123908342": 383, "123kkk": 323, "123mb": 323, "124": 416, "125": [357, 385, 416], "125000e": 357, "126744": 416, "127": [275, 357], "127715": 416, "128": [9, 87, 181, 273, 275, 280, 281, 289, 328, 357, 367, 376, 383, 388, 413], "128974848": 323, "128mib": 334, "1298": 383, "129996": 383, "12x10": 357, "13": [6, 84, 178, 273, 275, 281, 289, 313, 328, 329, 357, 367, 368, 371, 385, 393, 409, 412, 413, 414, 417, 431, 432, 433], "130": 416, "1329373163": 357, "133700e": [427, 437], "134": 383, "138": [383, 416], "139": 416, "139563": 416, "139605": 416, "139607": 416, "139610": 416, "139612": 416, "139617": 416, "14": [270, 275, 281, 289, 324, 329, 367, 368, 393, 413, 416, 426, 436], "14159": 275, "142": 416, "1439": 433, "144": 357, "1444": 383, "1459": 433, "147345": 416, "14740650423002898831": 357, "1491": 416, "15": [27, 30, 116, 122, 207, 214, 270, 273, 275, 281, 282, 291, 299, 328, 329, 341, 357, 362, 366, 367, 368, 375, 383, 393, 394, 396, 403, 417], "15155600": 416, "1523017872": 359, "1530": 416, "1564": 416, "1565878005": 357, "15915494": 274, "159154943091895317852646485335": 274, "1592": 274, "159279": 416, "15mb": 385, "15th": 273, "16": [6, 10, 27, 28, 30, 44, 47, 55, 67, 80, 84, 88, 93, 94, 95, 96, 100, 104, 105, 106, 107, 111, 113, 116, 118, 122, 141, 144, 149, 161, 174, 178, 183, 191, 202, 204, 207, 209, 210, 214, 235, 238, 243, 255, 270, 272, 273, 274, 275, 278, 280, 281, 289, 292, 299, 313, 324, 327, 329, 334, 341, 345, 357, 359, 362, 367, 368, 371, 383, 391, 393, 396, 398, 407, 411, 413, 417, 418, 432], "160": 357, "1600": 357, "16000": 375, "161": 329, "164": 416, "16628590": 416, "16777216": 357, "16777217": 357, "1681": 416, "16b": 280, "16bit": 432, "16gb": 345, "16mib": 334, "17": [275, 281, 313, 323, 328, 329, 340, 341, 357, 368, 393, 403, 433], "1723": 416, "18": [275, 281, 313, 328, 329, 367, 368, 393, 413], "187": 416, "188": 416, "18th": 340, "19": [275, 281, 329, 339, 341, 345, 357, 368, 393, 408, 413], "191": 275, "192": 275, "1967": 416, "1970": 299, "1980": 387, "1984": 416, "1989": 339, "1991": 387, "1994": 339, "19941610": 376, "19950623": 376, "19950814": 376, "19960307": [371, 376], "19970604": 376, "19970605": 371, "19970606": 371, "19990604": 376, "19990903": 371, "1a": 375, "1afp10": 274, "1b": 359, "1cleanup": 332, "1cy": 313, "1g": [323, 346], "1gb": 385, "1mb": 388, "1s100000s11010s10100s1111s1010s110s11s1": 383, "1svn": 350, "1u": 393, "1y": 287, "2": [3, 5, 6, 8, 14, 15, 16, 19, 23, 28, 30, 32, 45, 46, 52, 53, 54, 55, 61, 62, 63, 64, 68, 71, 75, 79, 80, 81, 83, 84, 86, 92, 93, 95, 96, 97, 98, 102, 104, 106, 107, 110, 117, 118, 122, 128, 135, 142, 143, 147, 148, 149, 155, 156, 157, 158, 162, 165, 169, 173, 174, 175, 177, 178, 180, 182, 187, 188, 189, 194, 197, 201, 208, 209, 214, 220, 224, 229, 236, 237, 241, 242, 243, 249, 250, 251, 252, 256, 258, 261, 265, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 287, 288, 289, 291, 292, 296, 299, 304, 305, 306, 313, 314, 316, 320, 324, 325, 327, 328, 329, 331, 332, 334, 336, 339, 340, 341, 342, 344, 345, 347, 350, 357, 359, 362, 365, 366, 367, 368, 371, 375, 379, 380, 381, 383, 387, 389, 391, 393, 394, 398, 401, 403, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 444], "20": [216, 217, 274, 275, 281, 289, 296, 313, 328, 329, 339, 341, 347, 357, 359, 367, 368, 383, 393, 407, 417, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "200": [275, 415], "2000": [275, 383, 414], "20000": [398, 424], "200000e": [429, 439], "20000404": 376, "2002": 289, "20030901": 376, "2004": 289, "2008": [275, 357, 387], "2009": 385, "20091201": [371, 376], "2010": 287, "2011": [385, 387], "2012": [334, 383, 418], "2013": [361, 371, 383], "20140508": 376, "20140516": 371, "2015": [341, 342, 343, 359, 387], "2016": [324, 343, 385, 387, 415], "2017": [334, 338, 341, 343, 359, 387, 388, 417], "2018": [357, 394, 415], "2048": [289, 359, 375, 391], "21": [217, 274, 275, 281, 289, 329, 344, 357, 367, 368, 393, 413, 416], "2100": 275, "212": 285, "213": 285, "213336": 416, "214": 285, "2147483648": [357, 367], "215": 285, "216": 285, "217": 285, "2192": 407, "22": [275, 281, 329, 357, 367, 368, 393, 401, 413, 416], "2200": 275, "2200g": 275, "224": 275, "225": 357, "225708": 416, "23": [273, 275, 281, 289, 357, 393, 413, 425, 435], "231150": 393, "231154": 393, "23333": 337, "234": [274, 427, 437], "234000e": [427, 437], "23406408": 329, "23421e": 357, "234e2": 274, "235": 357, "24": [273, 275, 281, 289, 313, 327, 357, 367, 383, 385, 390, 393, 413, 418, 428, 438], "240": [426, 436], "2400g": 275, "242": [334, 416], "2468601609": 357, "247": 357, "248": 383, "24e8": 383, "24mb": 359, "25": [275, 281, 357, 381, 383, 407, 413, 415], "2500": 275, "250000e": 362, "254": 357, "255": [273, 274, 289, 329, 357, 393, 425, 426, 427, 428, 429, 430, 431, 432, 433, 440], "256": [273, 274, 275, 289, 334, 357, 368, 391, 393], "257": [289, 357], "258": 289, "2590": 283, "25mb": 359, "26": [275, 281, 357, 367], "260": 275, "2601000000": 416, "26096": 416, "260x": 275, "2692": 416, "27": [275, 281, 367, 383, 385], "271": 416, "272": 313, "28": [275, 281, 328, 357, 363, 367, 417], "281474976710654": 396, "2817": 383, "2882400000": 398, "29": [275, 281, 289, 357, 394, 413, 416], "290": 275, "2900": 357, "290x": 275, "2919": 383, "2963": 416, "297": 313, "2acr96qjuqsym": 330, "2ap3": 334, "2b": 359, "2d": 280, "2gb": 394, "2n": 357, "2nd": [357, 359, 383, 403], "2u": 393, "2x": [343, 359, 394], "2x3x4": 357, "3": [6, 20, 30, 65, 72, 76, 80, 84, 96, 103, 107, 117, 122, 128, 159, 166, 170, 174, 178, 198, 208, 214, 220, 253, 262, 266, 270, 272, 273, 274, 275, 280, 281, 283, 287, 288, 289, 291, 292, 296, 299, 313, 316, 320, 323, 324, 327, 328, 329, 330, 332, 335, 339, 340, 341, 342, 343, 346, 347, 348, 350, 354, 357, 359, 362, 365, 366, 367, 368, 371, 375, 379, 381, 383, 386, 387, 388, 389, 393, 394, 396, 403, 405, 407, 408, 410, 411, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 438, 439, 440, 441, 444], "30": [28, 118, 209, 273, 275, 281, 289, 357, 359, 367, 394, 407, 413, 417, 430, 431, 432, 433, 437, 440, 441], "300": [296, 313, 357, 436], "3000": [275, 383], "302": 408, "305064": 331, "306": 313, "3069": 416, "30pm": 418, "31": [27, 65, 116, 159, 207, 253, 273, 275, 281, 289, 357, 394, 413], "31337": [427, 437], "314": 313, "3148790418": 357, "31511": 359, "315994": 416, "32": [7, 11, 15, 16, 22, 27, 28, 32, 47, 67, 85, 89, 97, 98, 100, 109, 111, 113, 116, 118, 144, 161, 179, 184, 188, 189, 191, 200, 202, 204, 207, 209, 225, 238, 255, 256, 257, 272, 273, 274, 275, 278, 280, 281, 283, 287, 289, 292, 299, 301, 313, 324, 325, 327, 332, 333, 334, 341, 342, 345, 355, 357, 359, 362, 367, 371, 376, 388, 389, 391, 393, 394, 396, 401, 403, 405, 411, 413, 416, 417, 430, 432, 434, 440, 442], "32088": 416, "3213": 383, "3221225472": 323, "324": 329, "32768": 375, "32bit": 432, "33": [281, 367, 408, 413], "3340b": 275, "335": 371, "3363": 416, "339450": 407, "34": [281, 328, 413], "345": 383, "35": [275, 281, 313, 357, 383], "350": 386, "350914": 341, "351": 386, "352": 386, "357": 386, "358": 386, "359": 386, "36": [275, 281, 367, 394], "360": [386, 416], "362": 386, "363": 386, "36652": 416, "367": 386, "37": [281, 289, 357, 385, 416], "370": 386, "371": 386, "3714": 416, "372": 386, "376": 386, "38": [281, 285, 357, 416], "380": 275, "3800": 275, "381": 416, "3811": 359, "3827": 359, "383": 275, "384": 275, "385": 275, "387": 357, "39": [275, 281, 357, 367], "392": 383, "39331465": 416, "39337525": 416, "3963": 359, "397": 329, "399": [313, 416], "3cy": 313, "3d": 275, "3dnow": 432, "3g": 323, "3gb": 342, "3rd": [357, 359, 420], "3u": 393, "3x4": 357, "4": [6, 9, 12, 15, 17, 18, 24, 25, 30, 36, 37, 38, 39, 55, 69, 73, 77, 80, 84, 87, 90, 93, 97, 99, 100, 101, 104, 111, 112, 113, 117, 122, 130, 131, 132, 133, 136, 149, 163, 167, 171, 174, 178, 181, 185, 188, 190, 191, 192, 195, 202, 203, 204, 208, 214, 222, 226, 227, 230, 243, 259, 263, 267, 270, 272, 273, 274, 275, 278, 280, 281, 287, 288, 289, 291, 292, 296, 297, 299, 301, 304, 313, 320, 323, 324, 327, 328, 329, 331, 332, 334, 338, 339, 340, 341, 343, 345, 346, 348, 349, 353, 357, 359, 362, 364, 365, 366, 367, 368, 371, 374, 375, 379, 380, 381, 383, 387, 393, 394, 396, 398, 403, 405, 407, 408, 410, 411, 412, 413, 416, 417, 418, 420, 421, 424, 425, 426, 427, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 441], "40": [275, 281, 289, 328, 334, 340, 357, 383, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "400": 426, "4000": [273, 275], "40219": 345, "403": 407, "40535375": 416, "4095": [273, 357, 359, 375], "4096": [273, 357, 375], "4097": 375, "4098": 375, "4099": 375, "40th": [425, 435], "41": [281, 357], "410": 357, "415": 275, "416": 275, "4167": 359, "41m": 323, "42": [280, 281, 289, 291, 309, 313, 327, 328, 334, 357, 360, 362, 367, 383, 425, 429, 430, 434, 435, 439, 440, 442], "421": 357, "423325": 407, "43": [275, 281, 289, 430, 440], "434": 383, "4377547752858689819": 357, "44": [275, 281, 313, 357, 375, 414], "446": 416, "447": 275, "448": 275, "449": 275, "45": [281, 367, 425, 427, 435], "450": 275, "451": 275, "452": 275, "453": 275, "454": 275, "455": 275, "456": [275, 407, 430, 440], "4584": 416, "4591870180066957722": 274, "46": [281, 416, 430, 440], "460": 275, "463331": 416, "463340": 416, "464": 407, "47": [275, 281, 357, 394, 403, 408], "470": 275, "470948": 416, "472618": 416, "474": 407, "48": [275, 281, 289, 313, 411], "480": 275, "49": [281, 383], "4b": 359, "4gib": 334, "4k": 289, "4kib": 375, "4th": [289, 357], "4u": 393, "5": [27, 116, 207, 273, 274, 275, 281, 283, 287, 288, 289, 292, 297, 313, 323, 324, 327, 328, 329, 331, 339, 341, 345, 350, 357, 359, 362, 365, 366, 367, 368, 371, 375, 381, 383, 387, 388, 393, 398, 403, 404, 407, 408, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440], "50": [281, 313, 341, 394, 407, 412], "500": 383, "5000": 275, "503": 386, "5046": 383, "506": [407, 416], "507": 386, "508": [357, 407], "51": [27, 116, 207, 275, 281, 313, 344, 408], "5100": 275, "511": 275, "512": [275, 357, 375, 391], "51440360": 416, "52": [275, 281, 357, 408], "5200": 275, "521": 386, "527": 386, "53": [281, 357, 375], "5312": 359, "532": 383, "5321": 385, "54": [281, 313, 407, 416], "5432": 385, "5434426023268520": 416, "5434426023523052": 416, "5434426029925386": 416, "5434426030031128": 416, "5434426046951388": 416, "5434426047282020": 416, "5434426047857332": 416, "5434426047984152": 416, "5434426048036584": 416, "5434426048042292": 416, "5434426048055056": 416, "5434426048067316": 416, "548": 386, "549": 386, "55": [281, 357, 414], "554": 386, "56": [275, 281], "563098": 407, "57": 281, "58": 281, "58421550": 416, "59": 289, "590": 283, "59620e187c6ac38b36382685ccd2b63b": 407, "5e": 357, "5l": 325, "5rqxku": 416, "5th": 357, "5u": 393, "5x": [343, 394], "6": [27, 30, 80, 116, 122, 174, 207, 214, 270, 275, 288, 289, 292, 299, 313, 323, 324, 327, 328, 329, 339, 341, 348, 349, 350, 357, 359, 365, 366, 367, 368, 371, 375, 380, 383, 387, 388, 393, 403, 405, 408, 411, 413, 414, 416, 417, 425, 426, 427, 429, 431, 432, 433, 435, 436, 441], "60": 375, "6000": 275, "603": 386, "61": 281, "610": 313, "62": [281, 394], "621": 386, "626": 385, "62635": 416, "626455": 416, "627": 386, "628": 386, "63": [27, 116, 207, 275, 281, 394, 398, 403], "638838075": 357, "64": [3, 5, 8, 15, 16, 23, 83, 86, 97, 98, 110, 177, 180, 188, 189, 201, 224, 256, 272, 273, 274, 275, 278, 280, 281, 283, 287, 289, 292, 301, 309, 313, 324, 325, 332, 333, 334, 340, 341, 342, 357, 359, 362, 366, 367, 371, 383, 388, 391, 392, 393, 394, 396, 398, 401, 403, 411, 413, 416, 425, 433, 434, 435, 442], "648": 386, "649": 386, "64bit": [357, 362, 389], "64k": 371, "65": [275, 281, 289, 313], "654": 386, "65500": 274, "65535": [273, 357], "65600": 274, "66": [275, 281], "661346": 385, "66ghz": 345, "67": [281, 425, 435], "672368": 416, "68": 281, "680": 367, "69819": 416, "6b": 359, "6th": 357, "7": [30, 65, 122, 128, 159, 214, 220, 253, 273, 274, 275, 281, 282, 288, 292, 299, 313, 316, 320, 323, 324, 328, 329, 339, 341, 342, 345, 348, 349, 350, 357, 359, 362, 366, 367, 368, 371, 375, 380, 381, 383, 385, 387, 393, 398, 403, 407, 409, 412, 414, 416, 417, 418, 420, 425, 427, 429, 430, 432, 433, 435, 439], "70": [289, 407, 414, 418], "700": [435, 442], "7000": 275, "7004155349499253778": 357, "703": 339, "705": 339, "7050b": 275, "71": 357, "7100": 275, "7150b": 275, "72": 313, "7200p": 275, "725": 383, "7300": 275, "7350b": 275, "74": [357, 394, 408], "7400p": 275, "743265": 394, "744287": 394, "75": [383, 407, 414, 416], "7500": [275, 359], "754": [275, 357], "756": 386, "7600p": 275, "7625886": 394, "7646": 383, "7651369219802541373": 357, "77": [359, 396], "7790": 275, "77x": 394, "78": [396, 416, 430, 440], "789": [430, 440], "79": 341, "7942": 359, "7976922776554302e308": 274, "7976931348623157e308": 274, "7e15": 323, "7th": 357, "7ykb2k5f": 311, "8": [6, 32, 37, 40, 80, 84, 131, 137, 174, 178, 223, 231, 270, 272, 273, 274, 275, 278, 280, 281, 282, 288, 289, 292, 299, 313, 314, 320, 324, 327, 328, 329, 331, 332, 334, 340, 341, 342, 343, 345, 346, 348, 350, 357, 362, 366, 367, 368, 371, 375, 383, 385, 387, 391, 392, 393, 394, 396, 398, 401, 405, 407, 412, 413, 416, 417, 418, 425, 429, 430, 431, 433, 435, 440], "80": [281, 291, 313, 357], "8000": 375, "8011": [345, 419], "8014": 345, "80386": [278, 432], "80f351b51825": 331, "80x86": 345, "80x87": 289, "8180": 385, "8191": 375, "83": 416, "83348": 407, "841471": [428, 438], "85": 416, "8500b": 275, "8500p": 275, "86": [383, 407], "8600b": 275, "8600p": 275, "87": [289, 383], "8700b": 275, "8700p": 275, "8770": 275, "8780p": 275, "88": [275, 416], "8800b": 275, "8800p": 275, "89": 407, "896800": 407, "8gib": 334, "8x": 394, "9": [30, 122, 214, 274, 275, 277, 281, 288, 289, 292, 313, 320, 324, 328, 329, 331, 335, 341, 348, 351, 357, 362, 363, 367, 368, 371, 375, 380, 383, 385, 387, 388, 393, 394, 404, 407, 408, 409, 413, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441], "90": [291, 407, 416], "900": 313, "9000": 375, "9010": 275, "9015": 359, "90p": 416, "91": 339, "92": 291, "9210": 275, "928": 407, "93": 357, "930803": 371, "9410": 275, "9600p": 275, "9630p": 275, "9633790": 416, "97": 357, "9700p": 275, "9730p": 275, "9800p": 275, "9830p": 275, "989": 362, "99": [351, 363, 393, 395], "9990": 345, "9994": 345, "99p": 416, "9_": [274, 292], "9a": [274, 292], "9b": 359, "AI": [291, 383], "AU": [277, 414], "As": [275, 276, 277, 278, 281, 282, 288, 289, 291, 292, 296, 313, 316, 323, 324, 330, 332, 333, 337, 339, 340, 341, 343, 347, 348, 351, 356, 357, 358, 359, 360, 362, 363, 365, 366, 367, 374, 375, 383, 385, 388, 392, 393, 394, 396, 398, 399, 403, 405, 409, 410, 413, 414, 415, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "C": [275, 276, 277, 278, 281, 282, 285, 288, 289, 292, 294, 295, 296, 302, 303, 304, 305, 314, 320, 323, 324, 325, 328, 329, 331, 332, 334, 337, 338, 339, 340, 342, 343, 345, 347, 348, 351, 352, 355, 359, 360, 363, 365, 367, 375, 381, 384, 391, 394, 396, 398, 401, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442], "CS": 275, "D": [287, 291, 292, 296, 313, 314, 315, 323, 324, 334, 341, 357, 382, 393, 403, 404, 407, 426, 427, 430, 432, 433, 436, 437, 440, 444], "DS": 414, "Ds": 324, "Due": [291, 331, 358, 403], "Il": [35, 129, 221], "J": [291, 330, 357, 393, 420], "L": [289, 323, 324, 341, 348, 349, 357, 359, 366, 368, 383, 427, 428, 429, 430, 431, 432, 433], "LE": 339, "LEA": 405, "La": [0, 1, 2], "Lea": 289, "Les": 27, "M": [277, 289, 291, 296, 323, 325, 341, 357, 366, 368, 387, 398, 413, 414, 420, 421, 422, 423, 424], "MESA": 275, "MS": 359, "Me": 358, "Mesa": 275, "Ms": 422, "N": [80, 174, 270, 273, 274, 275, 278, 279, 281, 289, 291, 296, 304, 313, 317, 322, 332, 339, 343, 350, 357, 359, 365, 367, 375, 381, 383, 398, 403, 413, 416, 427, 437], "ON": [279, 287, 331, 338, 348, 359, 388, 407], "On": [273, 275, 276, 278, 279, 280, 287, 289, 291, 299, 313, 324, 326, 332, 336, 337, 338, 339, 341, 343, 348, 355, 357, 360, 366, 382, 383, 388, 389, 394, 396, 399, 401, 417, 418, 419, 420, 422, 427, 428, 430, 437, 438, 440], "PAR": 386, "Pour": 419, "S": [274, 275, 278, 296, 299, 310, 312, 313, 314, 321, 324, 332, 334, 341, 351, 357, 383, 391, 393, 398, 409, 437, 438, 439, 440, 441], "SE": 357, "SESE": 387, "Sea": 275, "See": [224, 273, 275, 278, 279, 281, 282, 284, 287, 289, 293, 296, 297, 298, 299, 305, 309, 311, 321, 323, 324, 330, 333, 335, 338, 340, 341, 342, 343, 345, 348, 349, 351, 356, 357, 358, 365, 366, 367, 371, 375, 383, 384, 386, 387, 388, 393, 394, 398, 401, 405, 407, 409, 412, 413, 414, 415, 416, 420, 421, 422, 423, 424, 426, 430, 436, 440], "T": [275, 291, 296, 297, 298, 313, 314, 315, 316, 334, 335, 341, 351, 357, 383, 393, 401, 405, 409, 418], "TA": 273, "Un": [0, 1, 2, 357], "Y": [275, 280, 289, 324, 330, 350, 357, 381, 383, 393, 403, 405, 412, 431, 441], "_": [281, 357, 362, 383, 395, 404, 436, 437, 438, 439, 440, 441], "_0": [357, 362], "__": 383, "__1": 305, "__________": 383, "______________________": 383, "______________________________________": 383, "__________________________________________________________": 383, "___fixunstft": 388, "__annot": 357, "__anon_expr": [426, 427, 428, 429, 430, 431, 432, 433], "__apple_nam": 393, "__apple_namespac": 393, "__apple_objc": 393, "__apple_typ": 393, "__asm": 313, "__atomic_compare_exchang": 278, "__atomic_compare_exchange_n": 278, "__atomic_exchang": 278, "__atomic_exchange_n": 278, "__atomic_fetch_add_n": 278, "__atomic_fetch_and_n": 278, "__atomic_fetch_nand_n": 278, "__atomic_fetch_or_n": 278, "__atomic_fetch_sub_n": 278, "__atomic_fetch_xor_n": 278, "__atomic_load": 278, "__atomic_load_n": 278, "__atomic_stor": 278, "__atomic_store_n": 278, "__attribute__": [324, 393, 415], "__bitcod": 281, "__bool": 388, "__builtin_eh_return": 332, "__builtin_expect": 283, "__builtin_longjmp": 332, "__builtin_setjmp": 332, "__builtin_trap": 359, "__c_specific_handl": 332, "__chkstk": 334, "__clang__": 324, "__clear_cach": 357, "__cuda__": 324, "__cuda_arch__": 324, "__cuda_ftz": 367, "__cudacc__": 324, "__cxa_allocate_except": 332, "__cxa_begin_catch": 332, "__cxa_call_unexpected": 332, "__cxa_demangl": 338, "__cxa_end_catch": 332, "__cxa_rethrow": 332, "__cxa_throw": 332, "__cxx11": 305, "__cxx_": 416, "__cxx_global_var_in": 416, "__cxxframehandler3": 332, "__cxxthrowexcept": 332, "__dat": 357, "__declspec": [428, 429, 430, 431, 432, 433], "__dwarf": 393, "__eh_fram": 289, "__except": 332, "__fastcall": 357, "__float128": 388, "__gcmap_": 339, "__global__": 324, "__gxx_personality_v0": 332, "__has_attribut": 401, "__i386__": [434, 442], "__image_info": 357, "__imp_": 357, "__internal_accurate_powf": 367, "__jit_debug_register_cod": 329, "__libunwind_config": 332, "__llvm": 281, "__llvm_coverage_mapping": 328, "__llvm_covmap": 328, "__llvm_deoptimiz": 357, "__llvm_faultmap": 336, "__llvm_memcpy_element_unordered_atomic_": 357, "__llvm_memmove_element_unordered_atomic_": 357, "__llvm_memset_element_unordered_atomic_": 357, "__llvm_stackmap": 396, "__main": 414, "__morestack": 392, "__next__": 327, "__nv_isinff": 367, "__nv_isnanf": 367, "__nv_powf": 367, "__nv_truncf": 367, "__nvcc__": 324, "__objc": 357, "__objc_imageinfo": 357, "__profn_foo": 328, "__scudo_default_opt": 391, "__stack_chk_fail": [357, 362], "__stack_chk_guard": 357, "__stdcall": 357, "__sync_fetch_and_add_n": 278, "__sync_fetch_and_and_n": 278, "__sync_fetch_and_max_n": 278, "__sync_fetch_and_min_n": 278, "__sync_fetch_and_nand_n": 278, "__sync_fetch_and_or_n": 278, "__sync_fetch_and_sub_n": 278, "__sync_fetch_and_umax_n": 278, "__sync_fetch_and_umin_n": 278, "__sync_fetch_and_xor_n": 278, "__sync_lock_test_and_set_n": 278, "__sync_synchroniz": 278, "__sync_val_compare_and_swap_n": 278, "__syncthread": 367, "__text": [289, 407], "__try": 332, "__unwind_info": 289, "__vector": 388, "__vectorcall": 357, "__xray_log_finaliz": 415, "__xray_log_flushlog": 415, "__xray_log_init_mod": 415, "__xray_log_process_buffer": 415, "__xray_log_register_mod": 415, "__xray_log_select_mod": 415, "__xray_log_set_buffer_iterator": 415, "__xray_patch": 415, "_address_": 394, "_align": 393, "_args_": 288, "_attack": 394, "_b128": 272, "_b16": 272, "_b256": 272, "_b32": 272, "_b512": 272, "_b64": 272, "_b8": 272, "_bool": [431, 441], "_bootstrap_default_passthrough": 276, "_buff": 275, "_crit_edg": 357, "_cuda_ftz": 367, "_cxxthrowexcept": 332, "_dcleanup": 332, "_division_by_zero": 275, "_dpp": [272, 275], "_e32": [272, 275], "_e64": [272, 275], "_except_handler3": 332, "_except_handler4": 332, "_f16": 272, "_f32": 272, "_f64": 272, "_flag": 288, "_flags_": 288, "_function_nam": 334, "_i16": 272, "_i32": 272, "_i64": 272, "_i8": 272, "_in": 275, "_inexact": 275, "_info": 275, "_invalid_oper": 275, "_is_": 357, "_m4enum": 357, "_main": [320, 444], "_name_": 288, "_overflow": 275, "_p1": 393, "_p3": 393, "_r0h": 332, "_regoffset": 405, "_ri": 403, "_rr": 403, "_runtim": 396, "_sdwa": [272, 275], "_segment_buff": 275, "_segment_ptr": 275, "_segment_wavefront_offset": 275, "_siz": 275, "_sourc": 275, "_source_d": 287, "_tag": [436, 437, 438, 439, 440, 441], "_ty": 333, "_u16": 272, "_u32": 272, "_u64": 272, "_u8": 272, "_underflow": 275, "_unwind_resum": 332, "_valid_": 394, "_var": 288, "_vol": 275, "_wavefront_offset": 275, "_win32": [399, 428, 429, 430, 431, 432, 433], "_without_": 341, "_workgroup_count_x": 275, "_workgroup_count_y": 275, "_workgroup_count_z": 275, "_x": 275, "_y": 275, "_z": 275, "_z3foov": 357, "_z4leak": 394, "_zero": 275, "_zfoov": 357, "_zn1a1nei": 357, "_zst1a": 411, "_ztid": 357, "_ztii": 357, "_zts1a": [357, 411], "_zts1b": 411, "_zts1c": 411, "_zts1d": 411, "_ztv1a": 411, "_ztv1b": 411, "_ztv1c": 411, "_ztv1d": 411, "_ztv3bar": 292, "_ztv3foo": 292, "a": [3, 5, 6, 8, 9, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 32, 80, 83, 84, 86, 87, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 122, 128, 174, 177, 178, 180, 181, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 208, 209, 214, 217, 220, 256, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 325, 327, 328, 329, 332, 334, 336, 337, 338, 342, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 368, 371, 374, 375, 379, 380, 384, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 425, 427, 429, 430, 434, 435, 437, 439, 440, 442, 444], "a1": [289, 297, 298, 315, 403, 411, 412], "a10": 275, "a12": 275, "a15": 346, "a16": [2, 178], "a2": [289, 297, 298, 315, 403, 411, 412], "a3": [289, 297, 298, 315], "a32": 280, "a4": [275, 289], "a6": 275, "a64": 280, "a8": [275, 353], "a9": [275, 349], "a_ctor_bas": 292, "aa": [278, 414], "aad": 289, "aad8i8": 289, "aapc": 357, "aarch32": 325, "aarch64": [280, 286, 338, 341, 343, 346, 357, 362, 391, 396, 401, 413, 415], "aarch64registerinfo": 362, "ab": [29, 119, 121, 211, 213, 367], "abandon": [382, 427], "abandoned": [343, 383], "abbrev": [281, 308], "abbrevi": [291, 358], "abbreviat": 301, "abbreviated": 275, "abbrevid": 281, "abbrevop0": 281, "abbrevop1": 281, "abbrevwidth": 281, "abc": 357, "abcd": 281, "abi": [280, 286, 287, 299, 305, 327, 330, 334, 335, 341, 343, 348, 349, 350, 355, 357, 367, 380, 381, 388, 393, 394, 396, 409, 411, 413, 428, 432, 433, 434, 438, 442], "abilit": 323, "ability": [289, 290, 321, 323, 329, 333, 337, 339, 357, 364, 383, 384, 385, 393, 394, 418, 425, 429, 430, 431, 435, 439, 440, 441], "abis": [275, 335, 394], "able": [275, 277, 279, 285, 289, 292, 299, 313, 323, 324, 328, 330, 335, 337, 339, 340, 341, 343, 349, 352, 355, 356, 357, 358, 360, 363, 379, 383, 385, 387, 390, 393, 394, 395, 396, 398, 403, 410, 412, 413, 414, 415, 418, 419, 421, 428, 429, 430, 433, 434, 438, 439, 440, 442], "abnormal": 399, "abnormally": 337, "abort": [285, 289, 291, 357, 383, 403], "abort_on_error": 391, "aborting": 332, "about": [272, 274, 275, 277, 278, 281, 282, 287, 288, 289, 291, 292, 296, 297, 299, 301, 312, 313, 314, 316, 317, 318, 323, 324, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 374, 375, 379, 380, 381, 382, 383, 388, 389, 390, 391, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 407, 408, 410, 412, 413, 414, 415, 416, 419, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "abov": [272, 273, 274, 275, 277, 278, 280, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 299, 313, 320, 323, 324, 327, 333, 335, 336, 337, 338, 339, 340, 341, 344, 347, 348, 349, 350, 351, 352, 354, 357, 360, 361, 362, 363, 364, 365, 366, 368, 371, 381, 383, 384, 385, 387, 389, 390, 392, 393, 394, 395, 396, 398, 403, 408, 409, 411, 413, 414, 416, 418, 420, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "abs8": 334, "abs_f": 405, "abs_fp32": 405, "abs_fp64": 405, "abs_fp80": 405, "absenc": [285, 289, 313, 334, 394], "absent": [275, 383], "absl": 305, "absolut": [80, 174, 270, 273, 282, 287, 291, 292, 304, 316, 341, 349, 357, 371, 409, 413, 417], "absolute_express": [28, 118, 209], "absolute_tsc": 417, "absolutely": [291, 333, 343, 383, 414], "abstract": [289, 291, 332, 335, 351, 358, 360, 368, 381, 383, 393, 405, 413, 414, 418, 425, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441], "abstracted": [291, 335], "abstractness": 330, "absv16i8": 413, "absv1i64": 413, "abu": 299, "abused": 383, "ac": [350, 359], "acc": [357, 383], "acced": 27, "acceler": [434, 442], "accelerated": 350, "accelerator": [294, 308], "accept": [273, 275, 288, 290, 291, 292, 304, 323, 326, 327, 330, 331, 334, 335, 338, 341, 342, 343, 344, 351, 357, 359, 364, 366, 382, 383, 394, 397, 404, 409, 424], "accepted": [305, 314, 323, 326, 330, 350, 357, 367, 382, 403], "accepting": 323, "access": [273, 274, 275, 277, 278, 280, 299, 302, 323, 326, 327, 331, 333, 337, 339, 340, 341, 342, 345, 359, 361, 365, 367, 375, 381, 382, 383, 388, 393, 394, 396, 397, 398, 403, 410, 412, 413, 414, 415, 418, 421, 431, 434, 441, 442], "accessed": [116, 207, 274, 275, 278, 289, 323, 332, 340, 357, 368, 383, 388, 391, 393, 397, 404], "accessibl": [274, 275, 287, 304, 314, 323, 331, 357, 362, 383, 394, 401, 404, 427], "accessing": [273, 275, 277, 289, 323, 332, 340, 357, 383, 394, 398], "accessor": [289, 393, 414, 426], "accessty": 357, "accessty1": 357, "accessty2": 357, "accidentally": [291, 323, 383, 388, 399, 414], "accommodat": [289, 334, 357, 367], "accommodated": 289, "accommodating": 281, "accomplish": [330, 351, 376, 383, 394], "accomplished": [339, 381, 383, 425, 435], "accord": 398, "according": [275, 281, 282, 313, 323, 339, 343, 351, 357, 362, 383, 387, 389, 396, 398, 413, 418, 427], "accordingly": [332, 339, 354, 357, 375, 383, 385], "account": [290, 326, 330, 345, 351, 357, 366, 382, 385, 390, 394, 415, 416, 420, 421], "accounted": 286, "accounting": [316, 339, 415, 416], "accqual": 275, "accumulat": [359, 394, 412], "accumulateconstantoffset": 366, "accumulated": [394, 412], "accumulating": 394, "accumulator": [357, 381, 436, 437, 438, 439, 440, 441], "accuracy": [357, 381], "accurat": [277, 283, 309, 339, 343, 347, 360, 381, 385, 393, 433, 434, 442], "accurately": [304, 357, 385, 393], "ace": 399, "achiev": [278, 284, 287, 337, 357, 391, 394, 399], "achieved": [338, 354, 360, 383, 385, 387], "acknowledging": 390, "acm": [289, 339], "acme": 386, "acos": 277, "acq_rel": [275, 278, 357], "acquainted": 420, "acquir": [275, 357, 365, 383], "acquired": [275, 359], "acquisit": 383, "acronym": 419, "across": [278, 280, 286, 288, 289, 301, 323, 324, 327, 332, 337, 341, 343, 356, 357, 358, 359, 367, 368, 376, 381, 383, 385, 393, 394, 396, 398, 405, 412, 414, 428, 434, 438, 442], "act": [282, 289, 291, 357, 359, 365, 366, 381, 383, 390, 393, 409], "action": [275, 283, 284, 289, 291, 327, 332, 333, 338, 341, 343, 357, 358, 368, 382, 383, 390, 398, 413, 414, 417, 423, 424], "actionscript": [434, 442], "activ": [277, 291, 330, 331, 332, 339, 355, 357, 359, 375, 383, 396, 414, 419, 421, 422, 423, 424, 443], "activat": 407, "activated": 383, "activehardwar": 275, "actively": [330, 394, 421], "activit": [289, 413], "activity": 327, "actual": [6, 66, 84, 160, 178, 254, 271, 275, 277, 278, 281, 285, 289, 291, 292, 296, 299, 323, 327, 336, 337, 340, 347, 356, 357, 358, 359, 361, 365, 366, 371, 383, 384, 389, 391, 393, 394, 397, 398, 399, 403, 407, 409, 413, 418, 420, 421, 425, 429, 433, 434, 435, 439, 442], "actual_access": 275, "actualaccqual": 275, "actually": [6, 84, 178, 275, 277, 280, 281, 284, 288, 289, 291, 292, 323, 324, 330, 332, 335, 336, 339, 340, 341, 345, 347, 351, 357, 365, 366, 371, 379, 381, 383, 388, 393, 398, 399, 407, 409, 413, 414, 418, 420, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442], "acycl": 322, "acyclic": [289, 358, 393, 413], "ad": [289, 381, 383], "ada": 332, "adapt": [335, 348, 383, 399], "adapted": [324, 330, 381], "adapter": 383, "adc": [275, 388], "adc32mi": 405, "adc32mi8": 405, "adc32mr": 405, "adc32ri": 405, "adc32ri8": 405, "adc32rm": 405, "adc32rr": 405, "adc64mi32": 405, "adc64mi8": 405, "adc64mr": 405, "adc64ri32": 405, "adc64ri8": 405, "adc64rm": 405, "adc64rr": 405, "adce": [358, 383], "adcx": 388, "add": [12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 90, 91, 92, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 185, 186, 187, 188, 189, 195, 196, 197, 198, 199, 202, 203, 204, 272, 275, 277, 278, 281, 284, 285, 287, 288, 289, 291, 292, 293, 296, 299, 304, 313, 316, 321, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 344, 347, 348, 349, 351, 352, 353, 354, 359, 362, 366, 367, 368, 380, 381, 382, 383, 384, 385, 387, 388, 389, 393, 394, 396, 398, 399, 402, 403, 404, 405, 408, 409, 410, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "add16mi": 405, "add16mi8": 405, "add16mr": 405, "add16ri": 405, "add16ri8": 405, "add16rm": 405, "add16rr": 405, "add32mi": 405, "add32mi8": 405, "add32mr": 405, "add32ri": 405, "add32ri8": 405, "add32ri8_db": 309, "add32ri_db": 309, "add32rm": 405, "add32rr": [309, 405], "add32rr_db": 309, "add32rr_rev": 309, "add64i32": 309, "add64mi32": 405, "add64mi8": 405, "add64mr": 405, "add64ri32": [309, 405], "add64ri8": 309, "add64rr": 309, "add8rr": 289, "add_": 288, "add_cfg_simplif": [438, 439, 440, 441], "add_char": [435, 436, 437, 438, 439, 440, 441], "add_custom_command": 288, "add_custom_target": 288, "add_definit": 287, "add_dep": 288, "add_dependenc": 288, "add_execut": [287, 288], "add_gvn": [438, 439, 440, 441], "add_incoming": [439, 440], "add_instruction_combin": [438, 439, 440, 441], "add_instruction_combining": [438, 441], "add_library": 287, "add_llvm_execut": 288, "add_llvm_fuzz": 338, "add_llvm_library": [287, 388, 414], "add_llvm_loadable_modul": 388, "add_llvm_tool": 338, "add_llvm_unittest": 287, "add_memory_to_register_promot": 441, "add_pf": 354, "add_pt": 354, "add_reassoci": [438, 439, 440, 441], "add_ri": 403, "add_rr": 403, "add_subdirectory": [287, 414], "add_to_library_group": 356, "addcomment": 339, "added": [32, 124, 125, 216, 217, 275, 281, 285, 286, 287, 289, 291, 299, 304, 307, 323, 328, 329, 330, 333, 339, 345, 348, 354, 357, 359, 360, 363, 364, 366, 382, 383, 386, 388, 390, 393, 395, 396, 398, 399, 401, 403, 404, 408, 409, 410, 412, 413, 414, 418, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 436, 438, 439, 440], "addedcomplexity": 405, "addend": [275, 325, 357], "addendum": 419, "addfunctionast": [423, 424], "addi": 357, "addimm": 289, "addincoming": [429, 430, 431, 432, 433], "adding": [282, 285, 287, 289, 291, 292, 296, 297, 308, 327, 328, 330, 334, 338, 343, 345, 348, 351, 354, 357, 363, 385, 393, 395, 409, 410, 413, 414, 415, 419, 420, 422, 425, 427, 429, 430, 431, 432, 434, 435, 437, 439, 440, 441, 442, 443], "addinstselector": 413, "addintervalsforspill": 289, "addit": [274, 275, 277, 278, 281, 287, 288, 289, 290, 291, 292, 296, 297, 304, 310, 313, 323, 325, 327, 328, 330, 332, 334, 339, 340, 343, 349, 350, 352, 355, 356, 357, 358, 365, 367, 368, 381, 383, 385, 388, 394, 396, 398, 404, 405, 408, 409, 412, 413, 414, 426, 428, 430, 431, 434, 436, 438, 440, 441, 442], "additional": [276, 278, 281, 285, 287, 289, 291, 292, 293, 301, 316, 321, 323, 324, 325, 327, 328, 330, 334, 337, 339, 340, 341, 342, 343, 347, 348, 350, 356, 357, 358, 359, 364, 366, 368, 371, 379, 381, 383, 384, 386, 387, 391, 393, 394, 396, 397, 398, 399, 401, 410, 413, 414, 415, 419, 427, 432, 437], "additionally": [277, 278, 289, 323, 330, 339, 341, 343, 344, 356, 357, 365, 379, 381, 383, 385, 388, 394, 397, 398], "addl": 394, "addllvm": [287, 288], "addmbb": 289, "addmodul": [420, 421, 422, 423, 424, 428, 429, 430, 431], "addmoduleflag": 433, "addpassestoemitfil": [414, 432], "addpassestoemitmc": 361, "addpdrm": 403, "addpdrr": 403, "addpreemitpass": 413, "addpreserved": 277, "addpsrm": 403, "addpsrr": 403, "addq": [309, 396], "addr": [320, 327, 357, 394, 413, 424], "addr2": 320, "addr64": [0, 3], "addrawvalu": 353, "addreg": 289, "addregbankcoverag": 343, "addregfrm": 413, "addregisterclass": [289, 413], "address": [3, 5, 6, 8, 9, 32, 36, 83, 84, 86, 87, 124, 125, 130, 177, 178, 180, 181, 216, 217, 222, 224, 256, 272, 273, 274, 277, 278, 279, 280, 281, 287, 295, 308, 313, 314, 316, 323, 324, 326, 327, 330, 332, 337, 338, 339, 343, 345, 355, 358, 359, 362, 366, 371, 380, 381, 382, 383, 385, 388, 391, 393, 394, 396, 398, 403, 405, 412, 413, 414, 416, 417, 419, 420, 422, 423, 424, 428, 429, 430, 431, 434, 438, 441, 442], "address_class": 275, "address_siz": 367, "address_spac": 275, "addressed": [280, 326, 330, 339, 398], "addressibl": 275, "addressing": [224, 256, 275, 330, 385, 392, 394], "addressis32b": 371, "addresssanitiz": [357, 359, 397], "addressspac": 343, "addri": 413, "addrr": 413, "addrri": 413, "addrrr": 413, "addrsig": [276, 334], "addrsig_sym": 334, "addrspac": [332, 343, 357, 367, 398], "addrspacequal": 275, "addsdrm": 403, "addsdrr": 403, "addtmp": [427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "addtmp1": [428, 438], "addtmp4": [427, 437], "addtypenam": 383, "addx": 403, "addxri": 362, "addy": 403, "adequat": [287, 394, 413], "adequately": [339, 342], "adher": [290, 291, 330, 383, 399, 402, 405], "adherent": 399, "aditi": 343, "adjacent": [275, 357, 383, 404], "adjust": [317, 332, 337, 341, 355, 366, 394], "adjusted": [287, 357, 394, 409], "adjusting": [355, 413], "adjustment": [355, 357, 394, 413], "adjustpassmanag": 367, "admin": [284, 345], "administrator": 345, "admittedly": 403, "adopt": [291, 330, 394, 399, 419], "adopted": 289, "adopting": 385, "adornment": [357, 395], "adress": 394, "adrian": 326, "adrp": 334, "adt": [341, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "adttest": 287, "advanc": [357, 426, 433, 436], "advanced": [287, 288, 291, 323, 330, 339, 351, 363, 395, 413, 414, 438], "advantag": [278, 280, 289, 291, 323, 327, 330, 339, 340, 343, 353, 357, 359, 360, 383, 385, 394, 430, 431, 434, 440, 441, 442], "adventur": 383, "advertis": 332, "advic": [293, 330, 337, 339, 346, 382, 419], "advis": [350, 429, 439], "advised": [288, 299, 353], "advisory": 290, "advocating": [290, 291], "afed8lhqlzfqjer0": 330, "affect": [100, 111, 113, 202, 273, 275, 280, 286, 287, 290, 313, 323, 324, 330, 349, 350, 357, 366, 367, 383, 389, 399, 403, 404, 407, 414, 429, 439], "affected": [273, 278, 287, 292, 352, 357, 368, 385], "affecting": [278, 343, 358, 428], "affiliated": 288, "afn": 357, "aforementioned": [330, 375, 410], "aform_1": 289, "aform_2": 289, "afre": 355, "aft": 410, "after": [38, 132, 226, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 292, 293, 298, 299, 304, 307, 308, 313, 316, 321, 323, 327, 328, 330, 331, 332, 334, 335, 338, 339, 340, 341, 343, 345, 346, 349, 350, 351, 355, 357, 359, 361, 362, 363, 364, 365, 366, 367, 371, 375, 381, 383, 384, 391, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 407, 408, 409, 410, 411, 413, 414, 417, 418, 420, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "after_bb": [439, 440, 441], "afterbb": [429, 430, 431, 432, 433], "afterloop": [429, 430, 431, 432, 433, 439, 440, 441], "afterward": [330, 337, 381, 394, 398], "again": [276, 280, 288, 292, 323, 327, 332, 337, 350, 352, 357, 363, 365, 366, 383, 385, 392, 394, 395, 408, 410, 414, 427, 428, 429, 431, 434, 438, 439, 441, 442], "against": [276, 283, 284, 287, 290, 292, 299, 303, 316, 330, 332, 334, 335, 337, 338, 343, 351, 355, 357, 359, 367, 380, 381, 383, 391, 394, 408, 409, 411, 415, 418, 427], "age": [290, 371, 376], "agency": 390, "agent": [275, 357], "agg": 357, "agg1": 357, "agg2": 357, "agg3": 357, "aggreg": 416, "aggregat": [291, 316, 332, 355, 358, 383, 413, 416], "aggregated": 416, "aggress": [277, 289, 291, 324, 336, 339, 341, 357, 358, 393, 426, 429, 436, 439], "aggressively": [381, 383], "agnostic": [280, 289, 393, 399], "agre": [290, 330, 381, 393, 418], "agreed": 330, "agrep": 408, "ah": [357, 396, 405], "ahead": [291, 330, 332, 341, 342, 352, 385, 398, 414, 420, 425, 426, 434, 435, 436, 442], "ahmed": 343, "aid": [339, 357], "aided": 394, "aim": [280, 284, 285, 288, 291, 293, 328, 330, 357, 383, 387, 390, 391, 399, 420], "aimed": [328, 330, 338, 399], "ain": 275, "aix": [289, 325], "aka": [276, 277, 289, 357, 359, 379, 383, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "al": [289, 351, 357, 362, 396, 405, 413], "al_aliasset": 413, "al_superregsset": 413, "alac": 407, "alacconvert": 407, "albeit": [431, 441], "alex": 328, "algebraic": 381, "algn": 416, "algo": 414, "algorithm": [277, 291, 306, 313, 323, 332, 339, 357, 365, 366, 371, 381, 387, 394, 401, 413, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 436, 439, 441, 442], "algorithmic": 383, "ali": [278, 281, 292, 313, 314, 355, 358, 362, 365, 366, 410, 413, 414, 419], "alias": [277, 313, 350, 365, 381, 388, 413], "aliasanalys": [357, 414], "aliasanalysisdebugg": 277, "aliase": [281, 357, 366], "aliased": [281, 289, 323, 357, 381], "aliaseety": 357, "aliasesset": 277, "aliasing": [277, 309, 313, 340, 365, 396, 434, 442], "aliasopt": 323, "aliasresult": 277, "aliasset": [277, 413], "align": [275, 281, 292, 327, 328, 332, 337, 339, 353, 357, 362, 367, 383, 387, 393, 396, 398, 413], "align32bit": 281, "align_nod": 357, "aligned": [274, 275, 278, 280, 281, 289, 327, 337, 340, 357, 383, 393, 417, 418], "alignlog2": 357, "alignment": [274, 275, 278, 289, 316, 325, 327, 328, 339, 340, 353, 357, 360, 362, 366, 367, 381, 383, 393, 398, 413, 417], "alignstack": [281, 357], "alignstyl": 383, "aliv": [289, 327, 366, 381, 383, 394, 414], "all": [3, 27, 116, 207, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 303, 304, 305, 306, 308, 309, 310, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 371, 374, 375, 379, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "all_build": 342, "all_ones_mask": 394, "all_zeros_mask": 394, "alleviat": [289, 323, 357, 383], "alloc": [27, 116, 207, 275, 277, 278, 291, 297, 298, 332, 334, 339, 340, 341, 355, 362, 365, 368, 381, 383, 387, 391, 393, 394, 396, 397, 398, 413, 414, 416, 420, 428, 431, 432, 433, 441], "allocainst": [291, 357, 383, 431, 432, 433, 441], "allocat": [275, 277, 289, 291, 332, 339, 355, 357, 359, 383, 392, 413, 418, 434, 442], "allocated": [275, 289, 297, 313, 327, 332, 340, 357, 361, 381, 391, 392, 396, 397, 398, 414, 418, 422, 431, 438, 441], "allocatevmodul": [422, 423, 424], "allocating": [289, 313, 332, 355, 357, 383, 394, 396], "allocationinst": 383, "allocator": [275, 297, 298, 337, 339, 343, 394, 398, 413, 414, 419], "allocator_may_return_null": 391, "allocinst": 441, "allocsiz": [281, 357], "allon": 357, "allow": [275, 277, 278, 281, 283, 287, 288, 289, 290, 291, 292, 293, 296, 297, 299, 304, 313, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 339, 340, 341, 343, 347, 349, 351, 353, 355, 356, 357, 359, 360, 361, 362, 364, 365, 366, 367, 380, 381, 382, 383, 385, 388, 391, 392, 393, 394, 396, 398, 399, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "allowed": [273, 274, 275, 278, 280, 281, 283, 287, 289, 291, 292, 296, 299, 313, 324, 327, 328, 330, 334, 339, 340, 356, 357, 393, 396, 398, 399, 403, 414, 418, 426, 430, 431, 436, 440, 441], "allowing": [277, 289, 291, 292, 296, 323, 327, 330, 332, 337, 339, 357, 364, 368, 371, 380, 381, 382, 383, 385, 391, 393, 394, 396, 398, 403, 414, 418, 419, 427, 431, 437, 441], "allowsanysmallsiz": 383, "allroot": 408, "ally": 357, "almost": [278, 280, 289, 291, 330, 333, 337, 338, 339, 358, 383, 385, 398, 399], "alon": [281, 289, 323, 330, 394, 409, 426, 436], "along": [278, 281, 287, 289, 291, 314, 317, 324, 337, 339, 341, 347, 351, 352, 354, 357, 361, 362, 363, 367, 376, 381, 383, 385, 387, 392, 393, 394, 395, 413, 414, 421, 425, 427, 428, 434, 435, 437, 438, 442], "alongsid": [281, 341, 385], "alpha": [357, 413], "alphacompilationcallback": 413, "alphajitinfo": 413, "already": [277, 283, 284, 286, 287, 288, 289, 291, 313, 323, 324, 330, 333, 339, 341, 342, 343, 344, 351, 352, 355, 357, 363, 366, 368, 383, 384, 385, 386, 388, 390, 392, 393, 394, 395, 396, 398, 405, 409, 410, 413, 414, 418, 420, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441], "also": [271, 272, 274, 275, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 292, 304, 309, 313, 316, 317, 320, 323, 324, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 366, 367, 368, 375, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 396, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "alt_always_instrumented": 415, "alt_never_instrumented": 415, "alter": [323, 357, 383], "altered": 410, "altering": 414, "altern": [274, 275, 287, 289, 332, 337, 340, 343, 357, 387, 388, 394, 407, 413], "alternat": [294, 344, 357, 368, 383, 418, 444], "alternating": 357, "alternatively": [285, 304, 323, 324, 330, 337, 340, 342, 344, 359, 383, 385, 394, 413, 415, 426, 431, 436, 441], "although": [278, 281, 288, 289, 291, 296, 302, 323, 324, 330, 333, 339, 341, 342, 351, 356, 357, 359, 362, 363, 371, 376, 383, 395, 398, 409, 414, 430, 437], "altivec": [289, 357, 358], "altogeth": [347, 387], "alu": [275, 313], "alu32_rr": 354, "alway": [275, 277, 278, 280, 281, 283, 284, 288, 289, 290, 291, 292, 296, 299, 301, 310, 313, 323, 324, 327, 328, 330, 332, 335, 337, 341, 343, 347, 351, 356, 357, 358, 360, 365, 371, 379, 382, 383, 384, 385, 390, 393, 394, 397, 398, 399, 401, 408, 409, 415, 416, 417, 418, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442], "always_inlin": 324, "always_instru": 415, "always_instrumented": 415, "alwaysinlin": [281, 357], "am": [383, 385], "amazing": [430, 440], "amazingly": [429, 439], "ambiguity": [351, 404], "ambiguous": [323, 409, 426, 430, 436, 440], "amd": [273, 275, 289, 313, 325, 349, 388, 394, 401], "amd64": 341, "amd_queue_t": 275, "amdfam10": 432, "amdgpu": [0, 1, 2, 341, 343, 357, 362, 401, 419], "amdgpu_flat_work_group_siz": 275, "amdgpu_num_sgpr": 275, "amdgpu_num_vgpr": 275, "amdgpu_waves_per_eu": 275, "amdhsa_dx10_clamp": 275, "amdhsa_exception_fp_denorm_src": 275, "amdhsa_exception_fp_ieee_div_zero": 275, "amdhsa_exception_fp_ieee_inexact": 275, "amdhsa_exception_fp_ieee_invalid_op": 275, "amdhsa_exception_fp_ieee_overflow": 275, "amdhsa_exception_fp_ieee_underflow": 275, "amdhsa_exception_int_div_zero": 275, "amdhsa_float_denorm_mode_16_64": 275, "amdhsa_float_denorm_mode_32": 275, "amdhsa_float_round_mode_16_64": 275, "amdhsa_float_round_mode_32": 275, "amdhsa_fp16_overflow": 275, "amdhsa_group_segment_fixed_siz": 275, "amdhsa_ieee_mod": 275, "amdhsa_next_free_sgpr": 275, "amdhsa_next_free_spgr": 275, "amdhsa_next_free_vgpr": 275, "amdhsa_next_free_vpgr": 275, "amdhsa_private_segment_fixed_siz": 275, "amdhsa_reserve_": 275, "amdhsa_reserve_flat_scratch": 275, "amdhsa_reserve_vcc": 275, "amdhsa_reserve_xnack_mask": 275, "amdhsa_system_sgpr_private_segment_wavefront_offset": 275, "amdhsa_system_sgpr_workgroup_id_x": 275, "amdhsa_system_sgpr_workgroup_id_y": 275, "amdhsa_system_sgpr_workgroup_id_z": 275, "amdhsa_system_sgpr_workgroup_info": 275, "amdhsa_system_vgpr_workitem_id": 275, "amdhsa_user_sgpr_dispatch_id": 275, "amdhsa_user_sgpr_dispatch_ptr": 275, "amdhsa_user_sgpr_flat_scratch_in": 275, "amdhsa_user_sgpr_kernarg_segment_ptr": 275, "amdhsa_user_sgpr_private_segment_buff": 275, "amdhsa_user_sgpr_private_segment_siz": 275, "amdhsa_user_sgpr_queue_ptr": 275, "amdkernelcodet": 275, "amen": 289, "amend": [341, 382], "aminicher": 385, "among": [289, 291, 292, 324, 334, 337, 341, 357, 359, 360, 366, 367, 381, 383, 385, 401], "amongst": 278, "amortized": 343, "amount": [275, 285, 289, 290, 291, 297, 298, 313, 316, 321, 323, 332, 333, 335, 339, 341, 352, 357, 359, 366, 381, 383, 385, 391, 392, 396, 398, 401, 405, 414, 415, 422, 425, 428, 435, 438], "amper": 346, "ampersand": [80, 174, 270], "an": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 47, 55, 65, 67, 80, 81, 82, 88, 89, 90, 91, 92, 97, 98, 99, 100, 109, 110, 111, 112, 113, 114, 115, 118, 122, 123, 124, 125, 126, 128, 144, 149, 159, 161, 174, 175, 176, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 200, 201, 202, 203, 204, 205, 206, 209, 210, 214, 215, 216, 217, 218, 220, 224, 225, 238, 243, 253, 255, 257, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 343, 344, 345, 346, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 375, 379, 381, 382, 386, 387, 388, 389, 390, 393, 394, 396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444], "anachronistically": 281, "analogous": [332, 339, 357, 383, 394, 403], "analogously": [398, 414], "analys": [278, 282, 283, 286, 301, 313, 321, 328, 333, 335, 337, 339, 341, 354, 357, 358, 360, 362, 365, 368, 383, 387, 393, 394, 401, 408, 416, 419, 428, 431, 433, 438, 441], "analysing": [282, 286, 415, 416], "analysisusag": 277, "analytic": 386, "analyz": [289, 295, 309, 321, 337, 341, 342, 381, 393, 394, 401, 408, 414, 416, 429, 439], "analyzebranch": 413, "analyzed": [313, 327, 366, 414], "analyzing": [301, 343, 383, 415, 416], "ancestor": [275, 351], "anchor": 393, "ancient": 276, "and": [3, 6, 9, 15, 16, 21, 22, 23, 25, 27, 29, 30, 33, 36, 37, 47, 55, 67, 80, 81, 84, 85, 87, 97, 98, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 121, 122, 126, 130, 131, 144, 149, 161, 174, 175, 178, 179, 181, 182, 188, 189, 191, 199, 200, 201, 202, 203, 204, 207, 208, 211, 213, 214, 218, 222, 223, 238, 243, 255, 270, 271, 273, 274, 276, 279, 281, 283, 284, 286, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 315, 317, 318, 320, 321, 322, 326, 328, 329, 331, 332, 334, 342, 344, 345, 346, 350, 352, 353, 354, 356, 358, 359, 362, 363, 364, 367, 368, 371, 374, 376, 379, 380, 384, 386, 388, 389, 390, 391, 392, 394, 397, 399, 401, 402, 404, 405, 406, 408, 409, 411, 412, 415, 416, 418, 419, 420, 421, 422, 423, 429, 430, 431, 432, 433, 439, 440, 441, 443, 444], "andrew": [339, 385], "android": 409, "andw": 292, "anew": 393, "angle": [291, 324, 418], "annoated": 364, "annot": [283, 292, 317, 337, 367, 394], "annotat": [283, 313, 332, 367], "annotated": [324, 357, 358, 364], "annotating": 337, "announc": [389, 419], "announced": [389, 415], "announcing": [350, 385], "annoy": 291, "anonymous": [330, 342, 393, 401, 403, 404, 413, 414, 416, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "anonymously": 390, "anoth": [273, 275, 277, 278, 279, 280, 281, 287, 288, 289, 290, 291, 292, 299, 304, 313, 316, 321, 323, 327, 328, 330, 332, 333, 334, 335, 339, 341, 342, 343, 346, 347, 349, 354, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 379, 381, 385, 393, 394, 395, 396, 397, 398, 399, 401, 403, 405, 409, 410, 413, 414, 415, 416, 417, 418, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 438, 439, 440, 441, 442], "another_op": 362, "anotherbranch": 385, "anothercategory": 323, "answer": [277, 284, 291, 323, 335, 340, 343, 351, 357, 363, 365, 366, 381, 394, 395, 419, 428, 429, 431, 438, 439, 441], "answered": 337, "answering": 330, "anti": 313, "anticipat": 417, "anticipated": 388, "antisymmetric": 366, "antisymmetry": 366, "anxious": 287, "any": [80, 174, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 301, 303, 304, 306, 307, 308, 309, 313, 314, 316, 317, 321, 323, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 346, 349, 350, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 375, 379, 381, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "any_other_cond": 357, "anyhow": 357, "anymor": [284, 383, 410, 414], "anyon": [278, 288, 330, 331, 390, 393, 413], "anyregcc": [281, 357, 396], "anything": [278, 289, 291, 297, 298, 313, 324, 330, 335, 341, 342, 351, 357, 375, 381, 383, 385, 393, 394, 396, 398, 405, 410, 428, 429, 437, 438, 439], "anyway": [291, 349, 357, 365, 381], "anywher": [290, 292, 332, 337, 357, 360, 363, 366, 383, 395, 404, 409, 426, 431, 436, 441], "ao": 334, "ap": [339, 357], "ap2": 357, "apach": [330, 350, 399], "apart": [277, 280, 287, 357, 375, 383], "apertur": [207, 275], "aper\u00e7u": [0, 1, 2], "apfloat": [341, 427, 428, 429, 430, 431, 432, 433, 437], "api": [275, 277, 287, 291, 316, 323, 325, 344, 350, 356, 359, 365, 367, 376, 380, 383, 388, 393, 394, 396, 401, 415, 419, 421, 422, 424, 427, 428, 433, 437], "apint": [362, 383, 416], "apis": [291, 326, 339, 379, 391, 394, 401, 415, 419, 420, 422, 423, 424, 427, 438], "app": [291, 380, 383, 386], "apparently": [431, 441], "appatur": 275, "appdat": 342, "appeal": 390, "appealed": 390, "appealing": 394, "appear": [275, 277, 278, 285, 291, 296, 299, 306, 313, 323, 328, 330, 334, 340, 357, 371, 376, 379, 381, 383, 385, 387, 393, 394, 398, 401, 403, 404, 413], "appearing": [323, 357], "appel": 339, "appel89": 339, "append": [275, 287, 293, 299, 357, 383, 384, 393, 407, 409, 415], "append_block": [437, 438, 439, 440, 441], "appended": [294, 300, 357, 383, 403, 439], "appending": [281, 294, 304, 357, 383], "appendinglinkag": 383, "appendun": 357, "appertain": 357, "appertur": 275, "apple": [288, 289, 292, 308, 329, 330, 332, 341, 357, 388, 393, 419], "apple_nam": [294, 393], "apple_namespac": 393, "apple_objc": 393, "apple_typ": [294, 393], "appli": [278, 288, 289, 290, 291, 299, 304, 323, 341, 347, 357, 387, 393, 399, 404, 421], "applic": [280, 289, 299, 304, 308, 330, 357, 359, 366, 381, 383], "applied": [38, 132, 226, 273, 274, 285, 299, 323, 330, 334, 340, 343, 345, 348, 350, 357, 359, 361, 368, 381, 383, 385, 393, 404, 407, 410, 428, 438], "appliqu": [275, 281, 287, 289, 291, 303, 304, 323, 324, 325, 330, 332, 336, 337, 339, 342, 356, 357, 361, 383, 394, 396, 398, 403, 405, 407, 409, 413, 414, 416, 417, 419, 420, 425, 428, 430, 434, 435, 438, 440, 442], "applu331": 386, "apply": [272, 275, 277, 280, 284, 287, 289, 299, 323, 327, 330, 334, 337, 340, 348, 357, 361, 371, 382, 383, 385, 387, 394, 399, 403, 410, 413, 414, 417, 418, 421, 430, 431, 440, 441], "applying": [321, 347, 357, 360, 385, 389, 410, 417, 434, 442], "appreciat": [326, 330], "appreciated": 347, "approach": [280, 285, 287, 289, 291, 313, 323, 324, 327, 332, 340, 343, 351, 354, 357, 366, 381, 383, 387, 388, 392, 393, 394, 398, 413], "appropriat": [275, 277, 278, 280, 289, 304, 317, 323, 324, 327, 330, 332, 333, 337, 338, 339, 341, 343, 345, 349, 350, 351, 353, 354, 357, 367, 381, 382, 383, 385, 389, 390, 398, 399, 405, 413, 414, 418, 420, 422, 426, 430, 431, 436, 440, 441], "appropriately": [277, 291, 296, 330, 357, 360, 383, 390, 393, 398, 416], "appropriateness": 390, "approv": 330, "approval": [330, 350], "approved": [330, 382], "approving": 350, "approx": [324, 367], "approxim": [283, 358], "approximat": [324, 357, 359], "approximated": 357, "approximately": [296, 342, 410], "apr": 399, "apr1": 330, "aptr": 357, "apu": 275, "aq": 357, "aq2": 357, "aqlwrap": 275, "ar": [287, 295, 314, 341, 344, 348, 383], "arang": 308, "arbitrarily": [351, 357, 393, 429, 439], "arbitrary": [275, 277, 281, 289, 291, 296, 302, 309, 323, 330, 332, 338, 339, 340, 343, 356, 357, 362, 365, 379, 383, 393, 394, 396, 398, 401, 403, 413, 414, 417, 425, 426, 427, 428, 431, 434, 435, 436, 437, 438, 441, 442], "arc": [304, 341, 382], "arcanist": [341, 419], "arch": [294, 297, 298, 299, 304, 308, 313, 315, 320, 324, 341, 389, 415, 432], "arch_extens": 388, "arch_nam": 320, "arche": [346, 347], "architected": 275, "architectur": [278, 280, 286, 287, 289, 294, 296, 297, 298, 304, 308, 309, 313, 315, 320, 324, 326, 332, 337, 338, 341, 342, 346, 347, 349, 350, 357, 362, 367, 387, 388, 389, 391, 394, 401, 405, 409, 411, 413, 415, 419, 424, 432, 443], "architectural": 292, "architecturally": [313, 324], "archiv": [295, 308, 311, 314, 344, 356, 360, 371, 383, 384, 385, 390, 391, 415, 419], "archived": [295, 330], "arcp": 357, "arcpatch": 382, "arctan": 418, "are": [3, 6, 21, 32, 81, 84, 100, 108, 111, 113, 128, 175, 178, 191, 199, 202, 204, 220, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 308, 310, 311, 313, 314, 315, 317, 320, 321, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "aren": [277, 289, 290, 291, 324, 330, 339, 340, 341, 342, 343, 347, 357, 362, 381, 385, 394, 428, 429, 434, 438, 442], "areprivatesymbolsstripped": 371, "arg": [275, 291, 293, 296, 298, 304, 317, 323, 329, 338, 347, 352, 357, 366, 398, 401, 404, 417, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "arg1": [357, 359, 415, 425, 435], "arg2": [357, 359, 425, 435], "arg_begin": 383, "arg_empty": 383, "arg_end": 383, "arg_iterator": 383, "arg_siz": [339, 383, 427, 428, 429, 430, 431, 432, 433], "argc": [323, 328, 329, 357, 359, 367, 383, 393, 416, 424], "argidx": 433, "arglist": 357, "argmemonly": [281, 337, 357], "argn": 288, "argnam": [323, 426, 427, 428, 429, 430, 431, 432, 433], "argstart": 323, "argsv": [427, 428, 429, 430, 431, 432, 433], "argty": 357, "argu": 291, "argument": [277, 280, 281, 286, 287, 289, 291, 292, 293, 295, 296, 298, 301, 303, 304, 314, 317, 322, 324, 328, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 351, 352, 354, 355, 359, 361, 366, 368, 385, 388, 391, 392, 393, 394, 396, 397, 398, 401, 404, 405, 408, 409, 413, 414, 415, 417, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "argumentexpr": [436, 437, 438, 439, 440, 441], "argumentlisttyp": 383, "argv": [285, 288, 298, 323, 328, 329, 359, 367, 383, 393, 416, 424], "argv0": 298, "argvalu": [323, 329], "aris": [330, 340, 357, 383], "arith": 315, "arithmetic": [315, 328, 337, 366, 381, 383, 394, 403, 412, 427, 431, 437, 441], "arithmetical": 328, "arity": 339, "arm": [278, 289, 332, 337, 341, 343, 347, 357, 358, 362, 364, 388, 401, 409, 413, 419], "arm64": [341, 407], "arm7": 415, "arm_aapcs_vfpcc": 281, "arm_aapcscc": 281, "arm_apcscc": 281, "arm_neon": [280, 401], "armgenasmmatch": 401, "armgenregisterinfo": 401, "armhf": [348, 349, 391], "arminstrinfo": 413, "armv5": 278, "armv6": [325, 346], "armv7": [280, 325, 341, 346, 349, 357], "armv7a": 348, "armv8": [325, 405], "around": [275, 277, 278, 286, 288, 291, 323, 330, 332, 339, 340, 341, 353, 355, 356, 357, 359, 366, 368, 381, 383, 385, 393, 394, 398, 399, 413, 414, 415, 426, 429, 433, 434, 439, 442], "arr": [340, 357, 383, 394], "arr1": 394, "arr2": 394, "arrang": [289, 323, 339, 351, 357, 381, 394, 409, 414, 422], "arranged": [357, 394], "arranging": 421, "array": [273, 275, 277, 280, 281, 289, 297, 299, 316, 327, 332, 337, 339, 359, 366, 367, 371, 374, 375, 381, 393, 394, 401, 409, 410, 412, 413, 426, 431, 434, 436, 437, 438, 439, 440, 441, 442], "arrayidx": 357, "arrayidx1": 357, "arrayidx2": 357, "arrayidx3": 357, "arrayidx4": 357, "arraytyp": 383, "arriv": 340, "arstechnic": 394, "art": 339, "artem": 324, "articl": [366, 381, 385, 394, 419, 429, 431, 439, 441], "artifact": [340, 359, 366, 387], "artifact_prefix": 359, "as_float": [438, 439, 440, 441], "asan": [359, 388, 391], "asanstackvariabledescript": 397, "asc": 386, "ascending": [328, 357], "ascii": [281, 299, 357, 359, 393, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "asciz": 334, "asi": 413, "asid": [275, 357, 365, 383, 391], "ask": [277, 284, 290, 324, 326, 330, 333, 335, 339, 341, 350, 351, 366, 385, 389, 393, 398, 403, 404, 414, 422, 426, 434, 436, 442], "asked": [290, 341, 342, 350, 383, 393, 402, 419], "asking": [326, 330, 337, 390, 429, 431, 433, 434, 439, 441, 442], "asm": [281, 297, 298, 309, 313, 315, 322, 367, 388], "asmmatcheremitt": 401, "asmnam": 413, "asmpars": [333, 341, 401], "asmparsernum": 322, "asmprint": [289, 339, 401, 413], "asmstr": [403, 413], "asmstring": [405, 413], "asmwrit": [333, 339], "asmwriternum": 322, "aspect": [287, 289, 330, 339, 343, 357, 375, 376, 383, 385, 387, 391, 393, 404, 426, 427, 429, 433, 434, 436, 437, 439, 442], "aspir": [430, 440], "aspx": [291, 386], "assembl": [6, 84, 178, 216, 217, 256, 271, 272, 273, 274, 295, 297, 315, 324, 332, 334, 341, 342, 348, 385, 388, 401, 408, 413, 443], "assembled": [275, 330, 338, 357, 405], "assembler": [289, 334, 338, 341], "assembling": 275, "assembly": [275, 281, 297, 298, 300, 301, 306, 307, 313, 315, 321, 322, 325, 330, 332, 333, 335, 338, 340, 341, 342, 343, 348, 356, 362, 364, 367, 392, 398, 401, 409, 419, 428, 432, 438], "assert": [287, 289, 323, 326, 341, 346, 350, 352, 357, 358, 359, 367, 380, 381, 383, 389, 409, 413, 414, 418, 421, 423, 424, 427, 428, 429, 430, 431, 432, 433], "assert_valid_funct": [437, 438, 439, 440, 441], "assign": [274, 284, 289, 309, 323, 326, 332, 335, 357, 366, 367, 383, 403, 404, 413, 425, 435], "assigne": 284, "assigned": [274, 275, 281, 282, 283, 289, 317, 323, 330, 332, 334, 343, 354, 357, 367, 368, 381, 383, 391, 393, 403, 404, 410, 413, 418], "assigning": [274, 354], "assignment": [278, 282, 289, 330, 335, 340, 343, 357, 358, 366, 383, 425, 427, 432, 433, 435, 437], "assignvirt2phy": 289, "assignvirt2stackslot": 289, "assist": [291, 352, 368, 430, 440], "assisting": [322, 337], "associ": [297, 334, 357, 358, 366, 381], "associat": [328, 357, 365, 383, 396, 411, 422, 426, 436], "associated": [275, 280, 281, 282, 283, 288, 289, 291, 299, 323, 328, 332, 334, 339, 353, 356, 361, 362, 366, 368, 383, 391, 396, 398, 399, 403, 411, 413, 415, 417, 428], "associating": [281, 323, 339, 357], "associativity": 357, "assorted": 433, "assum": [275, 276, 277, 285, 287, 289, 291, 297, 298, 309, 313, 316, 324, 330, 332, 333, 337, 340, 342, 366, 367, 371, 374, 375, 379, 381, 383, 392, 393, 394, 396, 398, 411, 414, 416, 418, 420, 426, 427, 430, 431, 432, 433, 437, 440], "assumed": [272, 274, 275, 277, 282, 283, 285, 289, 327, 339, 357, 371, 376, 383, 398, 414], "assuming": [276, 281, 296, 309, 335, 341, 357, 383, 385, 389, 394, 398, 401, 408, 410, 413, 427, 434, 437, 442], "assumpt": [289, 291, 292, 297, 313, 330, 332, 357, 393, 394, 420, 433, 434, 442], "assur": 418, "ast": [324, 358, 401, 420, 422, 424, 425, 427, 428, 430, 431, 433, 434, 435, 437, 438, 440, 441, 442, 443], "astcontext": 291, "astdump": 401, "astnod": 401, "astread": 401, "astwrit": 401, "asymmetric": 340, "asymmetry": [336, 366], "asymptomatic": 293, "async": 327, "async_op": 327, "async_op1": 327, "async_op2": 327, "asynchronous": [275, 278, 327, 357], "at": [275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 296, 297, 298, 299, 302, 304, 308, 310, 313, 315, 316, 320, 323, 324, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 371, 375, 376, 379, 380, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "at_apple_property": 393, "at_apple_property_attribut": 393, "at_apple_property_set": 393, "at_apple_runtime_class": 393, "at_artificial": 393, "at_byte_siz": 393, "at_decl_fil": 393, "at_decl_lin": 393, "at_encoding": 393, "at_end": [437, 438, 439, 440, 441], "at_nam": 393, "at_typ": 393, "atan2": [425, 435], "atc": 275, "athlon": 432, "atkinson": 386, "atoi": 357, "atom": 393, "atom_count": 393, "atom_count0": 393, "atomic": [12, 13, 14, 15, 16, 22, 23, 90, 91, 92, 97, 98, 109, 110, 185, 186, 187, 188, 189, 192, 193, 194, 200, 201, 273, 275, 291, 292, 337, 365, 375, 383, 419], "atomic_": 278, "atomic_cmpxchg": 278, "atomic_fent": 278, "atomic_load_": 278, "atomic_swap": 278, "atomically": [357, 391], "atomicexpand": 278, "atomicexpandpass": 278, "atomicity": 278, "atomicrmw": [275, 278], "atomtyp": 393, "atop": 339, "att": [297, 298, 315, 357], "attach": [327, 329, 341, 357, 382, 427], "attached": [291, 345, 357, 367, 383, 393, 410, 417, 428, 429, 430, 431, 441], "attaching": [357, 410, 411, 420], "attachment": [330, 357, 411], "attack": [290, 357, 394], "attacked": 394, "attacker": 394, "attacker_dat": 394, "attacker_offset": 394, "attempt": [277, 281, 285, 291, 293, 313, 315, 321, 330, 332, 337, 341, 348, 357, 359, 361, 381, 383, 390, 394, 396, 398, 399, 413, 414, 416, 417], "attempted": [422, 423, 424], "attempting": [275, 289, 293, 381, 383, 399], "attent": [290, 291, 330, 357, 390, 409, 413, 420], "attorney": 330, "attr": [0, 1, 2, 275, 281, 357, 393, 401, 415, 416], "attr0": [7, 85, 179, 281], "attr1": 281, "attr32": [7, 85, 179], "attract": [330, 339], "attrdump": 401, "attrgrp": 281, "attrgrp0": 281, "attrgrp1": 281, "attribu": 382, "attribut": [7, 85, 179, 281, 297, 298, 306, 308, 315, 332, 334, 339, 343, 354, 360, 366, 367, 368, 383, 388, 392, 398, 401, 405, 410, 413, 414, 419], "attributed": 357, "attributelist": [281, 401], "attributereferent": 401, "attrimpl": 401, "attrinfomap": 401, "attrkind": [353, 401], "attrlist": 401, "attrparsedattrimpl": 401, "attrparsedattrkind": 401, "attrparsedattrlist": 401, "attrparserstringswitch": 401, "attrpchread": 401, "attrpchwrit": 401, "attrspelling": 401, "attrspellinglistindex": 401, "attrtemplateinstantiat": 401, "attrvisitor": 401, "atyp": 340, "audienc": [337, 419], "auditing": 394, "augment": 283, "augmented": [343, 383, 430, 440], "augmenting": 343, "august": 361, "auquel": 27, "authent": 325, "authenticat": 345, "author": [289, 291, 327, 330, 335, 345, 351, 357, 358, 366, 394, 419], "authored": [327, 330], "authorit": 316, "authorized": 330, "auto": [289, 302, 304, 317, 342, 383, 387, 388, 393, 410, 415, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "autoconf": [287, 288, 335, 346, 350, 383], "autocrlf": 341, "autodetected": [292, 297, 298, 304, 313], "autofdo": 388, "autogenerated": 330, "autoinsert": 383, "autom": 405, "automat": [276, 289, 401], "automated": [322, 330, 341, 382, 384, 401], "automatic": [277, 289, 291, 295, 339, 366, 387, 388, 394, 403, 413, 419, 431, 432, 433], "automatically": [272, 275, 277, 284, 287, 289, 291, 296, 297, 309, 323, 326, 335, 339, 341, 344, 345, 349, 350, 351, 355, 356, 357, 362, 363, 382, 383, 384, 385, 392, 393, 394, 395, 401, 404, 407, 410, 413, 414, 415, 418, 419, 427, 429, 437, 438, 439], "automating": 401, "automaton": [289, 401], "autotool": 341, "autovectoriz": 412, "autr": [0, 1, 2], "auxiliary": [275, 401, 413], "auxiliarydat": 444, "av": 365, "avail": [224, 274, 275, 278, 287, 288, 289, 291, 295, 296, 297, 298, 303, 304, 309, 313, 315, 321, 323, 324, 329, 330, 332, 335, 337, 341, 343, 344, 345, 347, 348, 350, 351, 356, 357, 359, 380, 381, 383, 386, 388, 389, 390, 391, 393, 394, 396, 398, 399, 400, 401, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 419, 420, 425, 427, 428, 429, 430, 432, 435, 437, 438, 439], "availability": [274, 278, 313, 357, 385], "available_externally": [281, 357], "available_featur": [296, 409], "avalanch": 383, "avali": 393, "avenu": 390, "averag": [301, 313, 429, 432, 439], "averaging": 359, "avl": 383, "avoid": [275, 277, 279, 280, 281, 285, 287, 288, 289, 327, 330, 334, 338, 339, 340, 343, 347, 351, 355, 357, 360, 366, 381, 383, 385, 387, 389, 391, 393, 394, 396, 397, 398, 399, 403, 409, 410, 413, 414, 424, 431, 433, 441], "avoided": [291, 313, 383, 393, 396], "avoiding": [289, 291, 343, 357, 359, 387, 394, 409, 431, 441], "avx": [357, 409, 412], "avx1": 409, "avx2": 409, "avx512": [357, 388], "avx512f": 388, "avx512vnni": 388, "awakening": 332, "awar": [277, 278, 287, 288, 289, 291, 292, 323, 324, 330, 340, 341, 356, 357, 383, 385, 393, 398], "awareness": 330, "away": [282, 291, 292, 324, 327, 339, 351, 357, 360, 381, 383, 385, 393, 394, 414, 425, 435], "awkward": [291, 323, 340], "ax": [289, 334, 357, 405, 413], "axis": [394, 412], "axpy": 324, "ayal": 387, "b": [275, 281, 282, 288, 289, 291, 292, 296, 299, 304, 313, 314, 320, 323, 327, 329, 332, 334, 337, 340, 341, 343, 344, 354, 355, 357, 365, 366, 367, 381, 383, 385, 386, 387, 393, 398, 403, 405, 409, 410, 412, 413, 414, 426, 427, 431, 436, 437, 441], "b0000": 275, "b1": [403, 411, 412], "b128": [0, 1, 2, 272], "b13e8756b13a00cf168300179061fb4b91fefbed": 359, "b16": [272, 274], "b16x2": [2, 272], "b16x3": 272, "b16x4": 272, "b2": [411, 412], "b256": 272, "b32": [0, 1, 2, 272, 274, 367], "b32x2": [0, 1, 2], "b512": 272, "b64": [0, 1, 2, 272, 274], "b64x2": [0, 1, 2], "b96": 272, "b_ctor_bas": 292, "bach": 399, "back": [278, 285, 287, 289, 291, 299, 304, 327, 330, 332, 337, 339, 340, 341, 346, 349, 350, 357, 359, 380, 383, 385, 388, 392, 393, 394, 396, 398, 402, 405, 409, 418, 419, 421, 427, 428, 429, 430, 431, 432, 433, 438, 439, 441], "backed": [357, 391], "backedg": [282, 381, 398, 429, 430, 439, 440], "backend": [278, 283, 285, 293, 298, 303, 313, 315, 322, 324, 325, 332, 333, 337, 338, 341, 343, 345, 347, 352, 355, 357, 362, 383, 388, 391, 393, 396, 398, 419, 443], "background": [288, 290, 363, 383, 395, 401, 416], "backing": [275, 344, 357, 393], "backport": 349, "backslash": 359, "backtrac": [289, 433], "backup": 344, "backward": [281, 323, 353, 375, 383, 394, 398, 411, 412], "bad": [285, 291, 293, 347, 357, 366, 383, 389, 393, 394, 399, 418, 430, 433, 440], "badfileformat": 383, "badly": [337, 383], "bag": 338, "bai": 386, "bail": [357, 415], "bailing": 421, "baked": 343, "balanc": [276, 278, 330, 391], "bam": 291, "ban": 390, "bandwidth": 357, "bang": 404, "bangoperator": 404, "bank": 273, "bank_mask": [1, 2, 275], "bann": 383, "bar": [287, 288, 289, 291, 292, 296, 303, 317, 323, 324, 327, 328, 334, 335, 348, 355, 357, 367, 383, 393, 396, 398, 404, 409, 411, 412, 413, 418, 420, 427, 429, 437, 439], "bar_in_b_cc": 283, "bar_map": 291, "baremetal": 348, "baremetalarm": 348, "barlist": 291, "barri": [278, 313, 348, 357, 394, 398], "barrier0": 357, "bart": 275, "bas": [8, 9, 32, 86, 87, 124, 125, 180, 181, 216, 217, 274, 275, 277, 281, 286, 289, 291, 296, 301, 304, 316, 323, 326, 330, 331, 334, 339, 340, 341, 343, 354, 355, 357, 361, 365, 368, 383, 384, 385, 387, 389, 391, 393, 394, 403, 404, 405, 408, 413, 414, 415, 418, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "base0": 407, "base1": 407, "base2": [357, 407], "base_offset": 398, "baseclasslist": 404, "baseclasslistn": 404, "based": [272, 274, 275, 276, 277, 281, 283, 285, 287, 288, 290, 296, 297, 299, 301, 302, 304, 305, 313, 316, 317, 318, 323, 327, 328, 330, 331, 332, 338, 341, 343, 346, 348, 349, 350, 352, 357, 358, 359, 361, 362, 365, 366, 367, 382, 385, 386, 387, 390, 391, 393, 394, 398, 399, 401, 404, 405, 409, 412, 413, 414, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 433, 438, 439, 440, 441], "baseinstrinfo": 401, "baselai": 421, "baselin": [289, 350, 394, 407], "basemulticlasslist": 404, "basenam": 393, "baseobject": 394, "baseopcod": [354, 413], "basereg": 289, "baseregisterinfo": 401, "basety": 357, "basety1": 357, "basety2": 357, "basetyp": 357, "bash": [296, 309, 331, 395, 407], "bashful": 399, "basic": [278, 282, 284, 288, 289, 291, 297, 299, 301, 304, 306, 323, 324, 327, 328, 330, 332, 338, 339, 341, 342, 343, 350, 358, 363, 365, 367, 379, 384, 387, 393, 394, 395, 396, 398, 399, 402, 404, 407, 412, 416, 421, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442], "basic_": 403, "basic_block": 437, "basic_p": 403, "basic_r": 403, "basic_ss": 403, "basica": 414, "basicaliasanalys": [381, 414, 433], "basically": [289, 291, 323, 335, 340, 343, 352, 353, 381, 383, 393, 408, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441], "basicblock": [291, 341, 365, 368, 381, 387, 414, 427, 428, 429, 430, 431, 432, 433, 439], "basicblocklisttyp": 383, "basicblockpass": 368, "basicblockutil": 383, "basicirlayermaterializationun": 421, "basictyp": 357, "batch": 342, "battl": 316, "baz": [288, 291, 317, 323, 383, 393, 404, 411, 412, 429, 439], "baz_in_c_cc": 283, "bb": [291, 357, 358, 362, 366, 367, 368, 383, 394, 413, 414, 419, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "bb0_1": 367, "bb0_2": 367, "bb0_26": 367, "bb0_28": 367, "bb0_29": 367, "bb0_30": 367, "bb0_4": 367, "bb0_5": 367, "bb1": [281, 357, 394], "bb10": 394, "bb2": [281, 357], "bb3": 357, "bbreferent": 362, "bc": [277, 281, 285, 289, 293, 297, 300, 307, 321, 330, 335, 341, 342, 344, 352, 367, 368, 383, 409, 414, 419], "bcanalyz": [281, 295], "bcc": 413, "bcpl": 404, "bcplcomment": 404, "bcread": 303, "bdce": 358, "bdver2": 388, "be": [3, 21, 22, 23, 27, 28, 29, 30, 33, 55, 80, 81, 108, 109, 110, 116, 118, 119, 120, 121, 122, 126, 128, 149, 174, 175, 199, 200, 201, 207, 209, 211, 212, 213, 214, 218, 220, 224, 225, 243, 256, 257, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 371, 374, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "beanz": 385, "bear": 292, "beating": 343, "beautiful": [425, 427, 430, 435, 437, 440], "becaus": [274, 276, 277, 278, 280, 281, 283, 285, 288, 289, 291, 292, 296, 299, 313, 314, 316, 323, 324, 328, 330, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 349, 350, 351, 353, 354, 355, 357, 359, 360, 361, 362, 365, 366, 368, 375, 381, 382, 383, 385, 386, 393, 394, 396, 399, 403, 405, 408, 409, 410, 411, 412, 413, 414, 418, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "becom": [275, 280, 288, 289, 291, 308, 313, 323, 324, 337, 343, 346, 351, 357, 381, 383, 388, 394, 396, 398, 405, 409, 412, 413, 414, 415, 421, 426, 429, 431, 436, 439, 441], "becoming": [330, 340, 414], "been": [275, 278, 280, 285, 286, 287, 288, 289, 291, 292, 293, 296, 299, 301, 313, 321, 323, 324, 326, 329, 330, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 350, 357, 359, 361, 363, 366, 367, 368, 371, 374, 376, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 410, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442], "befor": [12, 13, 14, 15, 16, 90, 91, 92, 97, 98, 185, 186, 187, 188, 189, 192, 193, 194, 273, 274, 275, 277, 278, 280, 285, 286, 287, 288, 289, 292, 296, 298, 299, 313, 316, 320, 321, 323, 324, 327, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 355, 357, 361, 362, 365, 366, 367, 368, 381, 383, 387, 388, 389, 393, 394, 396, 397, 398, 401, 403, 404, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "began": 385, "begin": [275, 277, 287, 291, 299, 313, 323, 330, 339, 341, 342, 350, 357, 358, 361, 365, 371, 375, 383, 393, 394, 404, 413, 417, 418, 420, 421, 429, 431, 432, 433, 436, 437, 438, 439, 440, 441], "beginassembly": 339, "beginn": [284, 326], "beginning": [275, 277, 281, 289, 291, 292, 306, 313, 330, 332, 337, 339, 351, 357, 366, 367, 375, 391, 393, 396, 399, 409, 415, 429, 433, 439], "behalf": [326, 330, 382], "behav": [275, 277, 278, 288, 304, 313, 315, 324, 327, 330, 332, 357, 419, 422], "behaved": [291, 336], "behaving": 352, "behavior": [278, 284, 288, 289, 290, 291, 292, 293, 296, 306, 313, 323, 324, 327, 330, 332, 333, 335, 337, 339, 352, 357, 359, 368, 381, 383, 388, 390, 394, 412, 413, 414, 426, 429, 431, 436, 439, 441], "behaviour": [280, 291, 323, 357, 362, 409, 412], "behind": [289, 291, 292, 330, 352, 353, 354, 357, 367, 383, 398, 414, 419, 420], "being": [6, 84, 116, 178, 207, 273, 275, 277, 278, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 299, 301, 306, 307, 313, 323, 324, 326, 330, 332, 333, 336, 338, 340, 341, 343, 346, 348, 350, 351, 352, 353, 355, 356, 357, 359, 361, 365, 366, 367, 368, 371, 375, 379, 381, 382, 383, 385, 390, 391, 393, 394, 396, 398, 399, 401, 402, 403, 404, 405, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 429, 430, 431, 433, 434, 437, 439, 440, 441, 442], "belevich": 324, "belief": 290, "believ": [290, 291, 330, 357, 368, 383, 390, 428, 429, 430, 438, 439, 440], "believed": 394, "belong": [323, 327, 332, 357, 366, 383, 391, 417, 431], "belonging": [327, 383, 411], "below": [27, 30, 116, 122, 207, 214, 271, 273, 274, 276, 277, 278, 281, 283, 287, 288, 289, 291, 292, 297, 299, 310, 313, 317, 323, 324, 326, 328, 330, 337, 341, 342, 346, 347, 349, 350, 351, 355, 356, 357, 362, 365, 366, 367, 368, 371, 376, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 396, 398, 401, 409, 411, 412, 413, 414, 415, 416, 417, 418, 421, 426, 428, 429, 430, 431, 432, 433, 436, 438, 440, 441], "benchmark": [279, 287, 295, 324, 330, 350, 383, 384, 389, 393, 394, 407, 408, 409, 412, 419], "benchmarked": 309, "benchmarking": [341, 389, 409], "benchspec": 408, "bendersky": 324, "benef": [277, 340, 347, 357, 359, 381, 384, 391, 393, 421, 428, 432], "beneficial": [327, 343, 357, 410, 412], "benefit": [291, 337, 339, 422, 423], "benign": 383, "benjamin": 339, "bernstein": 393, "besid": [291, 323, 357, 385, 390, 394, 409, 413, 430, 436, 440], "bespok": 339, "best": [277, 280, 288, 289, 291, 298, 313, 330, 332, 335, 339, 343, 347, 352, 357, 381, 383, 387, 393, 394, 396, 398, 425, 426, 436, 442], "bet": [278, 284, 289, 291, 292, 294, 313, 329, 330, 332, 343, 346, 347, 352, 357, 358, 359, 365, 366, 381, 383, 385, 388, 394, 408, 412, 414, 415, 416, 419, 420, 426, 429, 431, 434, 436, 439, 441, 442], "between": [273, 275, 276, 277, 278, 280, 281, 288, 289, 291, 292, 297, 306, 313, 316, 317, 323, 328, 330, 331, 332, 333, 335, 339, 341, 343, 348, 350, 354, 355, 357, 358, 359, 361, 362, 364, 365, 366, 367, 371, 374, 381, 382, 388, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 407, 409, 410, 413, 415, 417, 418, 419, 425, 428, 429, 435, 438, 439], "bewar": 339, "beyond": [275, 288, 289, 322, 332, 337, 340, 357, 363, 364, 365, 383, 394, 395, 405], "bf": 386, "bfd": [338, 344], "bff": 383, "bfi": 357, "bh": 405, "bi": 279, "bicubic": 386, "bidirectional": 383, "big": [279, 289, 291, 298, 330, 337, 346, 357, 383, 386, 389, 409, 413, 417, 419, 427, 430, 431, 437, 440, 441], "bigblock": 298, "bigg": [291, 327, 418], "biggest": [289, 355], "bigmsf": 375, "bikeshed": 351, "bilinear": 386, "bin": [276, 293, 304, 309, 323, 331, 338, 341, 342, 344, 346, 347, 348, 349, 384, 385, 389, 405, 407, 409, 413, 416], "binar": [286, 287, 303, 304, 324, 326, 330, 331, 334, 341, 344, 347, 348, 349, 350, 359, 367, 389, 391, 393, 415, 417, 434, 442], "binary": [275, 278, 281, 283, 285, 286, 289, 291, 300, 304, 307, 310, 312, 316, 317, 320, 321, 323, 324, 325, 328, 330, 331, 334, 338, 339, 341, 342, 344, 348, 349, 359, 361, 366, 367, 371, 374, 380, 381, 383, 388, 389, 391, 394, 401, 403, 413, 415, 416, 417, 425, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 444], "binary128": 357, "binary16": 357, "binary32": 357, "binary64": 357, "binary_nam": 320, "binary_precedent": [440, 441], "binaryexprast": [426, 427, 428, 429, 430, 431, 432, 433], "binaryoperator": [291, 383], "binaryprecedent": [430, 431, 432, 433], "bind": [291, 303, 357, 403, 413, 418, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "bindex": 413, "binding": [335, 357, 403, 404, 413, 419, 424, 431, 432, 433, 438, 439, 440, 441], "binfmt": 341, "binfmt_misc": 341, "bininteg": 404, "binloc": 433, "binop": [274, 357, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "binop_precedent": [436, 437, 438, 439, 440, 441], "binopprecedent": [426, 427, 428, 429, 430, 431, 432, 433], "binopprototyp": [440, 441], "binoprh": [426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "binpath": 329, "binutil": [287, 325, 331, 341, 344, 345, 349], "bisect": [383, 385, 419], "bisect_script": 385, "bison": 408, "bit": [3, 5, 8, 9, 10, 11, 15, 16, 22, 23, 27, 28, 30, 32, 47, 55, 67, 80, 83, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 100, 104, 105, 106, 107, 109, 110, 111, 113, 116, 117, 118, 122, 128, 144, 149, 161, 174, 177, 180, 181, 183, 184, 188, 189, 191, 200, 201, 202, 204, 207, 208, 209, 210, 214, 216, 217, 220, 224, 225, 238, 243, 255, 256, 257, 270, 272, 273, 274, 275, 276, 278, 280, 283, 287, 288, 289, 292, 299, 301, 309, 324, 325, 327, 328, 330, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 345, 351, 353, 355, 358, 359, 362, 366, 367, 371, 375, 376, 388, 389, 391, 393, 394, 396, 398, 401, 403, 404, 405, 411, 413, 414, 417, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "bitbucket": [385, 386], "bitcast": [277, 280, 292, 327, 332, 339, 343, 366, 381, 388, 411, 413], "bitcastability": 366, "bitcasted": [357, 366], "bitcasting": [340, 357], "bitcod": [285, 289, 293, 295, 297, 299, 300, 303, 306, 307, 310, 311, 321, 330, 333, 341, 342, 344, 352, 357, 366, 367, 381, 383, 388, 407, 414, 419], "bitcoderead": 333, "bitcodewrit": [333, 383], "bitconverted": 280, "bitfield": [278, 371, 375, 417], "bitmap": 281, "bitmask": [273, 357], "bitmask_perm": 273, "bitpacked": 409, "bitpattern": 357, "bitread": 356, "bitset": [359, 411, 413, 418], "bitsetcas": 418, "bitstreamwrit": 333, "bitwidth": [281, 357, 366, 398], "bitwis": [274, 289, 381], "bjark": 324, "bjarn": 383, "bl": [292, 334, 405], "black": 415, "blah": [291, 323, 359], "blam": [382, 385], "blaming": 290, "blank": [291, 292, 299, 305, 317, 330, 363, 382, 395, 425, 426, 434, 435, 436, 442], "blarg": 383, "blatent": [431, 441], "bleed": 288, "bleeding": 419, "blind": 289, "blissfully": [323, 324], "bloat": 291, "bloating": 291, "blob": [281, 357, 389, 394], "block": [275, 277, 283, 284, 288, 289, 292, 298, 301, 302, 304, 306, 308, 316, 317, 327, 330, 332, 337, 339, 343, 350, 355, 358, 359, 363, 365, 366, 367, 374, 379, 387, 389, 392, 393, 394, 395, 396, 401, 403, 411, 412, 413, 414, 419, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "block_begin": [437, 438, 439, 440, 441], "block_parent": [439, 440, 441], "blockaddress": 357, "blockdim": 367, "blocker": 350, "blockfrequencyinfo": [282, 419], "blockid": 281, "blockidx": 367, "blocking": [350, 389], "blocklen": 281, "blocklen_32": 281, "blockmapaddr": 375, "blocknam": 281, "blockscalartrait": 418, "blocksiz": [367, 375], "blocksizex": 367, "blocksizey": 367, "blog": [385, 394], "blogspot": 394, "bloom": 289, "blow": 359, "blr": 334, "blunt": 416, "blx": 334, "bmi2": 394, "bnextind": 357, "bo": 291, "board": [330, 346, 349, 390], "boat": 291, "bob": 418, "bod": [281, 332, 366, 383, 414, 416, 426, 427, 428, 436, 437, 438], "body": [281, 285, 291, 292, 323, 327, 330, 332, 357, 359, 362, 366, 381, 383, 388, 392, 393, 394, 398, 403, 404, 405, 413, 414, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "body_val": 441, "bodyexpr": [429, 430, 431, 432, 433, 441], "bodyitem": 404, "bodylist": 404, "bodysequent": 417, "bodyval": [431, 432, 433], "boehm": 339, "bof": 385, "bogn": 343, "bogus": [414, 432], "boil": [280, 323, 330, 351, 383, 385, 429, 430, 439, 440], "boilerplat": [323, 339, 351, 401, 438], "bold": [363, 395], "bon": [396, 413, 420], "bonair": 275, "bondhugul": 386, "book": [291, 326, 358, 383, 385, 414, 419], "bookkeeping": [381, 383], "bool": [277, 278, 287, 289, 291, 313, 323, 327, 333, 343, 351, 357, 359, 366, 368, 383, 388, 393, 413, 414, 415, 416, 418, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "boolean": [275, 281, 287, 289, 291, 297, 327, 356, 357, 381, 383, 401, 403, 409, 413, 429, 439], "boolean_property_nam": 356, "boolordefault": 323, "booltmp": [427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "boost": 279, "bootstrap": 341, "bootstrap_": [276, 331], "bootstrapping": 276, "borderlin": 291, "boring": [292, 414], "boringssl": 359, "bork": [323, 403], "borrow": 383, "borrowed": 357, "bot": [276, 291, 330, 385, 419], "both": [3, 81, 175, 271, 273, 275, 276, 277, 278, 281, 283, 285, 287, 288, 289, 290, 291, 292, 296, 299, 304, 311, 313, 316, 317, 323, 324, 325, 328, 330, 332, 335, 337, 338, 339, 340, 343, 348, 349, 350, 351, 357, 359, 361, 366, 375, 376, 380, 381, 383, 385, 387, 390, 391, 392, 393, 394, 396, 398, 401, 403, 404, 405, 409, 410, 412, 413, 414, 415, 416, 418, 420, 421, 426, 427, 428, 429, 431, 433, 434, 436, 437, 438, 439, 441, 442], "botsalgn": 386, "botsspar": 386, "bottleneck": 313, "bottom": [282, 298, 323, 343, 357, 358, 381, 382, 399, 412, 413, 414, 421, 439], "bou_fals": 323, "bou_tru": 323, "bou_unset": 323, "bougach": 343, "bound": [274, 330, 355, 357, 362, 367, 383, 394, 397, 398, 403, 413, 418], "bound_ctrl": [1, 2, 275], "boundar": [278, 280, 286, 289, 327, 357, 394, 428], "boundary": [280, 281, 289, 357, 381, 383], "bounded": 313, "bourn": [323, 335, 341], "box": [289, 382, 388, 393, 394, 415], "bp": [396, 405], "bpf": [289, 341, 359], "bpf_add": 289, "bpf_alu": 289, "bpf_alu64": 289, "bpf_and": 289, "bpf_arsh": 289, "bpf_b": 289, "bpf_call": 289, "bpf_class": 289, "bpf_div": 289, "bpf_dw": 289, "bpf_end": 289, "bpf_ex": 289, "bpf_h": 289, "bpf_imm": 289, "bpf_ja": 289, "bpf_jeq": 289, "bpf_jge": 289, "bpf_jgt": 289, "bpf_jmp": 289, "bpf_jne": 289, "bpf_jset": 289, "bpf_jsge": 289, "bpf_jsgt": 289, "bpf_k": 289, "bpf_ld": 289, "bpf_ldx": 289, "bpf_lsh": 289, "bpf_mem": 289, "bpf_mod": 289, "bpf_mov": 289, "bpf_mul": 289, "bpf_neg": 289, "bpf_op": 289, "bpf_or": 289, "bpf_rsh": 289, "bpf_st": 289, "bpf_stx": 289, "bpf_sub": 289, "bpf_w": 289, "bpf_x": 289, "bpf_xadd": 289, "bpf_xor": 289, "bpl": 405, "bptr": 357, "br": [281, 282, 327, 332, 335, 336, 365, 367, 410, 429, 430, 431, 432, 433, 439, 441], "br_cc": 343, "bra": 367, "brac": [291, 292, 332, 357, 383, 403, 404, 409], "bracket": [291, 324, 330, 356, 357, 362, 393, 418], "bracketed": 332, "brain": 291, "branch": [28, 118, 209, 274, 286, 287, 289, 291, 304, 313, 325, 327, 330, 331, 332, 335, 336, 337, 341, 357, 362, 368, 382, 383, 387, 394, 398, 411, 419, 429, 430, 431, 432, 433, 439, 440, 441], "branch_weight": [282, 283], "branched": [286, 330], "branchfold": 413, "branchfolding": 413, "branchfunnel": 357, "branching": [282, 350, 357, 413], "branchless": 394, "brand": 414, "brav": [426, 436], "breadth": [298, 386, 425, 435], "breagen": 386, "break": [280, 283, 291, 323, 330, 332, 333, 339, 345, 350, 353, 357, 380, 383, 393, 394, 398, 412, 413, 414, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 439, 440], "breakag": [330, 385], "breakcriticaledg": 414, "breakdown": 284, "breaking": [287, 289, 330, 334, 364, 433], "breakpoint": [275, 285, 329, 425, 433], "brendan": 416, "brevity": [280, 367], "brewed": 383, "brian": 387, "brick": 366, "bridg": [343, 385], "brief": [277, 287, 288, 291, 316, 323, 341, 352, 366], "briefly": [328, 347, 366, 414], "brig": 275, "bring": [291, 337, 339, 359, 383, 398, 420, 434, 442], "bringing": 385, "broad": [323, 330, 339, 383, 394, 425, 428, 435, 438], "broadcast": [273, 357, 358], "broadcasted": 273, "broadly": 343, "broken": [280, 296, 324, 330, 335, 345, 357, 383, 385, 394, 398, 403, 409, 413, 414, 419], "brought": 366, "brows": [338, 347, 382, 416, 419], "browsabl": 287, "browsing": [287, 385, 427, 437], "brtarget": 413, "brtarget8": 413, "bruc": 383, "bsd": [299, 314, 330, 341], "bsd4": 299, "bss": [275, 298, 334], "bswap": 333, "bswap32r_bswap64r_movsx64rr32": 309, "bt": 329, "bt331": 386, "btver2": 313, "bucket": [316, 383, 391, 393], "bucket_count": 393, "buff": [9, 18, 19, 20, 21, 36, 37, 87, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 130, 131, 181, 195, 196, 197, 198, 199, 222, 223, 275, 286, 309, 313, 332, 357, 360, 371, 383, 393, 401, 417, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "buffer": [55, 149, 243, 357, 383, 415, 417], "buffer_atomic_add": [0, 1, 2], "buffer_atomic_add_x2": [0, 1, 2], "buffer_atomic_and": [0, 1, 2], "buffer_atomic_and_x2": [0, 1, 2], "buffer_atomic_cmpswap": [0, 1, 2], "buffer_atomic_cmpswap_x2": [0, 1, 2], "buffer_atomic_dec": [0, 1, 2], "buffer_atomic_dec_x2": [0, 1, 2], "buffer_atomic_inc": [0, 1, 2, 275], "buffer_atomic_inc_x2": [0, 1, 2], "buffer_atomic_or": [0, 1, 2], "buffer_atomic_or_x2": [0, 1, 2], "buffer_atomic_smax": [0, 1, 2], "buffer_atomic_smax_x2": [0, 1, 2], "buffer_atomic_smin": [0, 1, 2], "buffer_atomic_smin_x2": [0, 1, 2], "buffer_atomic_sub": [0, 1, 2], "buffer_atomic_sub_x2": [0, 1, 2], "buffer_atomic_swap": [0, 1, 2], "buffer_atomic_swap_x2": [0, 1, 2], "buffer_atomic_umax": [0, 1, 2], "buffer_atomic_umax_x2": [0, 1, 2], "buffer_atomic_umin": [0, 1, 2], "buffer_atomic_umin_x2": [0, 1, 2], "buffer_atomic_xor": [0, 1, 2], "buffer_atomic_xor_x2": [0, 1, 2], "buffer_load": 275, "buffer_load_dword": [0, 1, 2, 275], "buffer_load_dwordx2": [0, 1, 2], "buffer_load_dwordx3": [0, 1, 2], "buffer_load_dwordx4": [0, 1, 2], "buffer_load_format_d16_hi_x": 2, "buffer_load_format_d16_x": [1, 2], "buffer_load_format_d16_xy": [1, 2], "buffer_load_format_d16_xyz": [1, 2], "buffer_load_format_d16_xyzw": [1, 2], "buffer_load_format_x": [0, 1, 2], "buffer_load_format_xy": [0, 1, 2], "buffer_load_format_xyz": [0, 1, 2], "buffer_load_format_xyzw": [0, 1, 2], "buffer_load_sbyt": [0, 1, 2], "buffer_load_sbyte_d16": 2, "buffer_load_sbyte_d16_h": 2, "buffer_load_short_d16": 2, "buffer_load_short_d16_h": 2, "buffer_load_sshort": [0, 1, 2], "buffer_load_ubyt": [0, 1, 2], "buffer_load_ubyte_d16": 2, "buffer_load_ubyte_d16_h": 2, "buffer_load_ushort": [0, 1, 2], "buffer_siz": 417, "buffer_store_byt": [0, 1, 2], "buffer_store_byte_d16_h": 2, "buffer_store_dword": [0, 1, 2], "buffer_store_dwordx2": [0, 1, 2], "buffer_store_dwordx3": [0, 1, 2], "buffer_store_dwordx4": [0, 1, 2, 272, 275], "buffer_store_format_d16_hi_x": 2, "buffer_store_format_d16_x": [1, 2], "buffer_store_format_d16_xy": [1, 2], "buffer_store_format_d16_xyz": [1, 2], "buffer_store_format_d16_xyzw": [1, 2], "buffer_store_format_x": [0, 1, 2], "buffer_store_format_xy": [0, 1, 2, 275], "buffer_store_format_xyz": [0, 1, 2], "buffer_store_format_xyzw": [0, 1, 2], "buffer_store_lds_dword": [1, 2], "buffer_store_short": [0, 1, 2], "buffer_store_short_d16_h": 2, "buffer_wbinvl1": [0, 1, 2, 275], "buffer_wbinvl1_vol": [0, 1, 2, 275], "buffered": 313, "bug": [285, 286, 287, 288, 289, 290, 291, 292, 293, 310, 330, 337, 341, 349, 350, 357, 358, 359, 362, 366, 381, 382, 383, 385, 388, 397, 403, 404, 405, 409, 419, 427, 431, 434, 437, 441, 442], "buggy": 352, "bugpoint": [295, 310, 330, 341, 352, 368, 414, 419], "bugzill": [284, 330, 338, 350, 359, 385, 389, 398, 409, 419], "buid": 327, "build": [277, 281, 287, 288, 289, 291, 294, 295, 296, 299, 303, 304, 309, 321, 323, 324, 326, 329, 330, 332, 335, 339, 341, 342, 349, 353, 357, 360, 368, 371, 380, 381, 383, 384, 385, 387, 389, 391, 393, 394, 401, 402, 405, 407, 408, 409, 411, 413, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "build_add": [437, 438, 439, 440, 441], "build_alloc": 441, "build_arch": 384, "build_br": [439, 440, 441], "build_call": [437, 438, 439, 440, 441], "build_cond_br": [439, 440, 441], "build_config": 342, "build_d": 385, "build_docker_imag": 331, "build_fadd": 437, "build_fcmp": [437, 438, 439, 440, 441], "build_fmul": 437, "build_for_websit": 350, "build_fsub": 437, "build_load": 441, "build_mod": 342, "build_mul": [437, 438, 439, 440, 441], "build_ph": [439, 440, 441], "build_ret": [437, 438, 439, 440, 441], "build_shared_lib": 287, "build_stor": 441, "build_sub": [437, 438, 439, 440, 441], "build_uitofp": [437, 438, 439, 440, 441], "buildattribut": 348, "buildbot": [296, 330, 338, 350, 385, 409, 419], "buildd": 345, "builder": 345, "builder_at": 441, "building": [276, 288, 289, 291, 326, 327, 330, 339, 341, 342, 343, 344, 350, 356, 357, 359, 365, 387, 388, 401, 403, 405, 407, 408, 409, 414, 415, 419, 429, 430, 431, 432, 433, 434, 439, 440, 441, 442], "buildm": 289, "buildmast": 345, "buildmod": 409, "buildmodul": 420, "buildnumb": 371, "buildslav": 345, "buildtool": 356, "built": [276, 281, 287, 302, 303, 304, 305, 316, 323, 324, 326, 330, 331, 332, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 356, 357, 358, 359, 365, 371, 379, 381, 383, 384, 385, 387, 388, 391, 393, 394, 401, 405, 408, 409, 413, 416, 417, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "builtin": [278, 281, 296, 302, 357, 367, 383, 385, 388, 414, 419, 430, 431, 432, 433, 436, 440, 441], "bulk": [289, 330, 383, 431, 441], "bulky": 275, "bullet": 351, "bulleted": 335, "bump": [339, 383, 392], "bunch": [276, 288, 335, 383, 408, 425, 428, 430, 435, 438, 440], "bundl": [294, 308, 327, 362], "bundled": 289, "bundling": 289, "bunzip2": 341, "bur": 358, "burden": [330, 357, 365, 394], "burg": 358, "buried": 291, "burk": 386, "burning": 346, "burr": 298, "busiest": 382, "busy": 330, "but": [6, 15, 16, 32, 84, 97, 98, 128, 178, 188, 189, 220, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 298, 299, 301, 303, 304, 305, 308, 309, 311, 313, 314, 316, 321, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 375, 376, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "button": 382, "buy": 346, "bw": 334, "bwav": 386, "bwaves_": 386, "bwaves_r": 386, "bx": 405, "by": [3, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 37, 66, 81, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 116, 118, 122, 131, 160, 175, 182, 185, 186, 187, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 214, 254, 256, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 313, 314, 316, 317, 320, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 375, 376, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "by_valu": 275, "byarg": 357, "byp": 357, "bypass": [275, 394, 423, 424], "bypassed": 394, "bypassing": 324, "byproduct": 343, "byt": [31, 32, 123, 124, 125, 215, 216, 217, 273, 275, 277, 278, 280, 281, 289, 299, 301, 327, 328, 333, 334, 340, 357, 359, 371, 374, 375, 379, 383, 391, 392, 393, 396, 398, 411, 413, 417, 436, 437, 438, 439, 440, 441], "byte_0": [273, 275], "byte_1": [273, 275], "byte_2": [273, 275], "byte_3": 273, "bytearray": 357, "bytecod": [281, 286], "byteswap": 333, "byval": [281, 289, 357], "byvalu": 275, "bz2": 341, "bzip2": 341, "c1": 411, "c11": [278, 324, 371, 374, 393], "c11bytesiz": [371, 374], "c11lineinfo": 374, "c11siz": 374, "c13": [316, 371, 374], "c13bytesiz": [371, 374], "c13lineinfo": 374, "c13siz": 374, "c1x": 357, "c2": [411, 436, 437, 438, 439, 440, 441], "c99": 357, "c_ctor_bas": 292, "c_str": [323, 367, 383, 425, 426, 427, 428, 429, 430, 431, 432, 433], "cach": [273, 275, 276, 278, 288, 289, 313, 346, 357, 361, 383, 388, 391, 393, 394, 396, 407, 414, 433], "cached": [287, 288, 361], "cachefil": 407, "caching": [275, 277, 288, 343, 357, 381], "cactubssn": 386, "cactubssn_r": 386, "caicos": 275, "calcul": [27, 275, 277, 282, 289, 340, 357], "calculat": [275, 277, 289, 332, 357, 381, 383, 409, 413, 429, 439], "calculated": [313, 358, 383, 393, 414], "calculating": [282, 357, 383, 414], "call": [275, 276, 278, 280, 283, 285, 286, 288, 292, 296, 298, 299, 301, 317, 323, 324, 325, 327, 329, 332, 333, 336, 337, 339, 341, 343, 353, 358, 359, 360, 361, 364, 365, 366, 367, 368, 376, 380, 387, 388, 392, 393, 394, 396, 397, 398, 399, 403, 409, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "call2": 292, "call32m": 403, "call32r": 403, "call64pcrel32": 362, "call_branch_weight": 283, "call_site_num": 332, "callabl": [291, 357, 367, 427, 437], "callahan": 387, "callback": [277, 289, 327, 339, 359, 383, 396, 413, 420, 422, 424, 443], "callbackvh": 383, "callcount": 383, "calle": [280, 289, 324, 335, 359, 366, 381, 394, 396, 398, 403, 411, 413, 414, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "called": [275, 276, 277, 278, 280, 282, 283, 285, 288, 289, 304, 323, 324, 327, 328, 331, 332, 335, 339, 341, 343, 347, 355, 356, 357, 359, 361, 365, 366, 367, 381, 382, 383, 384, 385, 388, 392, 393, 394, 398, 399, 403, 404, 408, 413, 414, 418, 420, 421, 422, 425, 426, 428, 432, 433, 435, 436, 438], "calledcount": 285, "calleef": [427, 428, 429, 430, 431, 432, 433], "caller": [357, 366, 383, 394, 414, 430, 440], "caller_pc": 359, "callexprast": [426, 427, 428, 429, 430, 431, 432, 433], "callgraphscc": [368, 414], "callgraphsccpass": 368, "calling": [278, 281, 287, 288, 291, 323, 325, 327, 332, 337, 343, 361, 364, 366, 367, 368, 376, 383, 393, 394, 396, 398, 401, 414, 415, 418, 421, 424, 425, 426, 427, 428, 429, 433, 436, 437, 438, 439], "callingconv": [281, 413], "callinst": 383, "callloweringinfo": 416, "callon": 383, "callpcrel32": 403, "callq": [392, 394, 396, 398], "callseq_end": 398, "callseq_start": 398, "callsit": [283, 357, 394, 396, 398], "calltmp": [427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "calltmp1": [427, 429, 437, 439], "calltmp2": [428, 438], "calltmp6": [431, 441], "calltwo": 383, "callvoidvoid": 424, "calm": [431, 441], "cam": [276, 314, 332, 394, 429, 434, 439, 442], "cam4_": 386, "cam4_r": 386, "camel": 291, "caml": [435, 436], "camlp4": [435, 436], "camlp4of": [436, 437, 438, 439, 440, 441], "can": [272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 311, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "canadian": 341, "canal": 7, "canary": 357, "cancel": 332, "canconstantfoldcallto": 333, "candidat": [284, 330, 331, 336, 357, 362, 387, 389], "canfoldasload": 405, "canlosslesslybitcastto": 366, "cannot": [21, 108, 199, 271, 273, 275, 277, 278, 280, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 304, 313, 317, 323, 324, 327, 330, 332, 334, 339, 340, 342, 343, 348, 355, 357, 361, 375, 376, 381, 382, 383, 390, 394, 399, 407, 410, 412, 413, 414, 420, 427, 434, 442], "canonical": [280, 332, 337, 357, 381, 383, 385, 393, 394, 423, 424], "canonicalised": 280, "canonicaliz": [289, 292, 383, 414], "canonicalized": [289, 292, 381], "canonically": 385, "canreserveresourc": 289, "cantfail": [420, 421, 422, 423, 424, 428, 429, 430, 431], "cantfil": 383, "capabilit": [277, 323, 325, 341, 383, 413, 428, 434, 438, 442], "capability": [289, 324, 333, 357, 360, 367, 388, 414, 427, 430, 437, 440], "capabl": [277, 289, 323, 341, 365, 376, 383, 393, 401, 414, 431, 434, 441, 442], "capacity": 383, "capitaliz": [291, 330], "capston": 359, "captur": [281, 285, 289, 292, 323, 333, 343, 357, 387, 393, 394, 409, 413, 415, 417, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "captured": [292, 323, 357, 396], "capturing": [429, 439], "car": [277, 278, 289, 291, 292, 324, 338, 341, 350, 357, 362, 364, 365, 383, 385, 399, 403, 405, 408, 413, 414, 431, 434, 441, 442], "card": [346, 398], "careful": [290, 359, 365, 383, 394], "carefully": [330, 337, 339, 357, 393, 431, 441], "careless": 291, "caret": [304, 357], "carr": [340, 357, 383], "carried": [313, 357, 410], "carrizo": 275, "carruth": 394, "carry": [299, 357, 364, 385], "carrying": 357, "cas": [271, 274, 275, 277, 278, 280, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 299, 303, 308, 310, 313, 321, 323, 324, 326, 327, 328, 331, 332, 333, 335, 336, 337, 339, 340, 341, 343, 346, 347, 348, 349, 351, 352, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 368, 371, 376, 379, 381, 383, 384, 385, 386, 388, 390, 392, 393, 394, 395, 396, 398, 399, 401, 403, 404, 408, 409, 410, 412, 413, 414, 418, 419, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "cascadelak": 388, "case_branch_weight": 283, "cassert": [291, 367, 423, 424, 428, 429, 430, 431, 432], "cast": [280, 286, 291, 357, 387, 393, 398, 403, 404, 405, 428, 429, 430, 431, 433, 434, 438, 442], "cast210": 357, "cast_or_null": 383, "casted": [340, 366], "casting": [291, 323, 351, 357, 383, 403], "castinst": 383, "casual": 330, "cat": [320, 323, 339, 341, 359, 401, 409], "catagoriz": 381, "catapult": 415, "catastrophic": 394, "catch": [323, 329, 340, 348, 357, 358, 383, 385, 394, 427, 428, 437, 438], "catch3": 332, "catching": 330, "catchpad": 332, "catchret": 332, "catchswitch": 332, "categor": [357, 381, 383, 393, 401, 409, 417], "categoriz": [381, 401, 413], "categorized": 323, "category": [291, 316, 323, 352, 357, 383, 393, 413], "caught": [291, 332, 357], "caus": [275, 277, 278, 280, 284, 285, 289, 291, 292, 294, 296, 298, 299, 301, 304, 306, 311, 321, 323, 330, 333, 334, 335, 339, 341, 343, 344, 347, 348, 352, 357, 359, 361, 368, 381, 383, 384, 385, 394, 397, 398, 399, 409, 411, 412, 414, 418, 426, 427, 429, 430, 431, 433, 436, 441], "caused": [287, 293, 313, 330, 352, 412], "causing": [285, 291, 292, 357, 368, 383], "caution": [278, 398], "caveat": [324, 385, 433], "cayman": 275, "cbe": 352, "cbpf": 289, "cbtw": 289, "cbw": 289, "cc": [275, 289, 320, 326, 341, 344, 349, 350, 357, 359, 382, 389, 391, 401, 416, 437, 438, 439, 440, 441], "cc1": 329, "cc_sparc32": 413, "ccach": 287, "ccache_d": 287, "ccache_maxsiz": 287, "ccaddr": [423, 424], "ccassigntoreg": 413, "ccassigntoregwithshadow": 413, "ccassigntostack": 413, "ccc": [281, 357], "ccdelegateto": 413, "ccif": 413, "ccifcc": 413, "ccifinreg": 413, "ccifnest": 413, "ccifnotvararg": 413, "cciftyp": 413, "cclib": [440, 441], "ccmak": 287, "ccmgrorerr": 424, "cconv": 357, "ccpassbyval": 413, "ccpromotetotyp": 413, "cctyp": [426, 427, 428, 429, 430, 431, 432, 433], "cd": [287, 341, 342, 344, 350, 352, 385, 391, 393, 407, 408, 409, 416], "cdbg_us": 275, "cdecl": 357, "cec": [35, 129, 221], "cedar": 275, "cee": 383, "ceil": [275, 375, 412], "ceiling": 357, "cel": 413, "cent": 383, "centered": 433, "central": [332, 393], "centralizing": 399, "centric": 357, "cerr": [367, 416], "certain": [275, 277, 280, 289, 292, 296, 299, 323, 327, 328, 333, 334, 339, 341, 357, 359, 375, 376, 380, 383, 388, 394, 396, 398, 403, 414, 415, 416, 428, 430, 431, 432, 438, 441], "certainly": [278, 337, 339, 381, 385, 434, 442], "certified": 335, "cfa": 332, "cfd": 386, "cfe": [330, 341, 350, 382, 385, 387], "cfg": [289, 296, 315, 332, 342, 355, 357, 366, 368, 383, 387, 409, 413, 414, 429, 439], "cfgsimplify": 383, "cfi": [286, 332, 358, 362, 394], "cfi_instruct": 362, "cfi_offset": 362, "cflag": [359, 384], "cfrac": 408, "cg": 414, "cg_profil": 334, "cgft_objectfil": 432, "cgo": [324, 387], "cgp_from": 334, "cgp_to": 334, "cgp_weight": 334, "cgroup": 331, "ch": 405, "ch9": 433, "chain": [276, 277, 283, 287, 289, 296, 308, 313, 327, 343, 358, 360, 365, 366, 381, 393, 399, 410, 413, 414], "chained": [277, 357, 383, 401, 431, 441], "challeng": [291, 394, 398], "challenging": [343, 394, 430, 440], "chanc": [283, 327, 330, 337, 357, 361, 405, 415, 418, 425, 435], "chandl": 394, "chandlerc": [382, 394], "chang": [273, 275, 277, 280, 281, 283, 284, 285, 287, 289, 290, 291, 292, 293, 296, 302, 303, 306, 313, 323, 324, 326, 327, 333, 335, 337, 338, 339, 340, 342, 343, 345, 350, 351, 355, 356, 357, 358, 360, 361, 366, 367, 368, 376, 380, 381, 389, 394, 396, 398, 400, 401, 403, 406, 408, 410, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 438, 439, 440, 441], "changeb": 359, "changebyt": 359, "changed": [277, 280, 283, 289, 300, 323, 330, 333, 340, 341, 351, 353, 357, 366, 381, 383, 385, 388, 398, 407, 431, 432, 433], "changelog": 359, "changing": [277, 287, 291, 313, 323, 330, 342, 357, 358, 366, 383, 385, 393, 394], "channel": [85, 179, 273, 275, 290, 326, 394, 419, 424], "chaos": 276, "chapt": [326, 366, 419, 425, 434, 435, 442], "chapter": [420, 421, 425, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441], "chapun": 419, "char": [277, 291, 299, 323, 328, 329, 340, 357, 359, 360, 367, 371, 375, 383, 391, 393, 394, 412, 413, 414, 415, 416, 420, 424, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "char6": 281, "charact": [273, 281, 289, 292, 299, 304, 314, 323, 357, 364, 383, 393, 401, 403, 404, 409, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "character": [273, 296, 299, 304, 313, 314, 328, 357, 362, 383, 403, 404, 409, 425, 429, 430, 435, 439, 440], "characteristic": [36, 130, 222, 289, 309, 333, 357, 371, 383, 387, 413, 422, 444], "characteriz": 394, "characterized": 357, "charg": 289, "charscalarty": 357, "chart": 412, "chased": 352, "chat": 290, "cheap": [278, 291, 330, 336, 343, 357, 383, 394], "cheapest": 343, "cheaply": [365, 394], "cheat": 422, "check": [275, 276, 278, 286, 287, 288, 289, 291, 293, 294, 296, 309, 313, 323, 327, 330, 331, 332, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 359, 360, 362, 363, 366, 368, 382, 385, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 403, 407, 408, 409, 410, 411, 413, 414, 416, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 442], "checkcudaerror": 367, "checked": [278, 287, 291, 331, 336, 338, 341, 347, 348, 359, 366, 381, 383, 385, 394, 407, 408, 409, 428, 438], "checker": 401, "checkformat": 383, "checking": [274, 275, 287, 292, 299, 323, 328, 336, 337, 341, 357, 367, 368, 383, 385, 389, 392, 393, 394, 396, 409, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "checkout": [287, 331, 347, 380, 389, 409], "checkpointing": 332, "checksum": [334, 357, 359, 391], "checksumkind": [334, 357], "checksummed": 391, "chees": 291, "cher": 385, "child": [332, 351, 357, 383, 430, 440], "childorerr": 383, "children": [308, 351, 383, 403], "chip": [275, 289, 297, 298, 346, 349, 367, 409, 413], "chmod": 341, "choic": [291, 297, 307, 333, 341, 343, 346, 357, 359, 382, 383, 396, 398, 425, 429, 434, 439, 442], "choos": [287, 290, 293, 298, 315, 323, 324, 330, 339, 345, 348, 349, 352, 354, 357, 365, 383, 390, 393, 407, 413, 414, 415, 416, 425, 426, 428, 429, 435, 436, 437, 438, 439], "choosing": [280, 289, 357, 382, 383, 414], "chop": 393, "chos": [327, 389, 394, 438], "chosen": [280, 289, 291, 296, 339, 343, 357, 398, 415], "chris": [289, 291, 324, 330, 385, 414, 434, 442], "chriscox": 386, "chrom": 415, "chromium": 350, "chronology": 385, "chunk": [280, 281, 289, 291, 316, 359, 381, 392, 393, 437], "churn": 422, "ci": [275, 330, 358], "cimag": [430, 440], "cin": 335, "cindex": 413, "cint2006": 407, "circl": 351, "circuit": [430, 440], "circular": [291, 415], "circumst": [284, 292, 332, 357, 383, 388, 413, 414, 428, 431, 438, 441], "circumvent": 323, "cis": 279, "cis501": 279, "citizen": 383, "cl": [393, 405, 409, 414, 424], "claim": [278, 417], "clamp": [0, 1, 2, 275, 357], "clamped": [273, 357], "clamping": 273, "clang": [275, 278, 283, 286, 287, 291, 292, 296, 297, 304, 305, 313, 326, 328, 329, 330, 331, 332, 335, 337, 340, 342, 344, 351, 352, 356, 357, 358, 359, 360, 367, 368, 379, 382, 383, 384, 385, 388, 389, 393, 405, 407, 409, 410, 411, 412, 415, 416, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 438, 441, 442], "clang_attr_arg_context_list": 401, "clang_attr_identifier_arg_list": 401, "clang_bootstrap_cmake_arg": 276, "clang_cc1": [292, 409], "clang_cl": 409, "clang_cpp": 409, "clang_enable_bootstrap": 276, "clangxx": 409, "clarif": [291, 325, 330, 417], "clarify": 393, "clarity": [357, 390, 429, 439], "clas": [383, 420], "clasess": 388, "clash": [291, 357, 423, 424], "class": [275, 280, 281, 290, 292, 309, 316, 322, 326, 330, 332, 333, 338, 339, 341, 343, 353, 355, 358, 361, 364, 366, 368, 371, 376, 380, 381, 387, 388, 391, 393, 394, 399, 401, 405, 411, 415, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 441, 442], "classic": [289, 291, 383, 394], "classical": [381, 388], "classid": 404, "classif": [357, 397, 399], "classified": 357, "classifying": 277, "classnam": [322, 371], "classof": 401, "claus": [275, 289, 330, 332, 357, 383], "clean": [289, 291, 293, 323, 330, 341, 343, 347, 350, 352, 360, 367, 381, 382, 383, 394, 414], "cleaned": 289, "cleaning": [289, 332], "cleanly": [291, 330, 357, 414], "cleanup": [327, 330, 357, 358, 381, 388, 393, 428, 429, 438, 439], "cleanuppad": [327, 332], "cleanupret": [327, 332], "clear": [291, 321, 330, 339, 340, 355, 356, 357, 371, 375, 383, 385, 394, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "cleared": [292, 355, 357, 385, 398, 415], "cleargraphattr": 383, "clearing": 427, "clearly": [284, 291, 330, 365, 393, 396], "clearresourc": 289, "clenumval": 323, "clenumvaln": 323, "clev": [351, 434, 442], "cleverly": 280, "click": [342, 382], "clicking": 382, "client": [281, 287, 289, 291, 302, 323, 330, 339, 351, 356, 361, 364, 383, 385, 393, 396, 407, 411, 413, 414, 419, 420, 421, 424, 428, 431, 438, 441], "clientaddr": 424, "clientaddrlen": 424, "clipped": 329, "clobb": [277, 289, 362, 365, 394, 403], "clobber": 357, "clobbered": 365, "clobbering": [357, 394], "clock": [357, 414], "clon": [330, 341, 344, 383, 414, 431, 441], "cloned": [296, 385, 387, 401], "cloning": [296, 341], "clos": [284, 289, 291, 340, 358, 359, 382, 389, 394], "close_fd_mask": 359, "closed": [284, 291, 350, 358, 383, 414, 419], "closely": [289, 302, 327, 340, 341, 357, 383, 385, 394, 426, 436], "closest": [357, 433], "closing": [291, 357, 382], "closur": [356, 434, 442], "clr": [371, 398], "clrb": 289, "clrl": 289, "clrq": 289, "clrw": 289, "cluster": 309, "cluster_id": 309, "clustering": 309, "clutt": [291, 330], "cmak": [276, 279, 302, 330, 331, 338, 341, 342, 344, 345, 346, 347, 356, 363, 383, 385, 386, 388, 391, 395, 407, 413, 416, 419], "cmake_": 288, "cmake_asm_compiler_target": 348, "cmake_asm_flag": 348, "cmake_build_typ": [287, 288, 341, 407], "cmake_c_compil": [341, 407], "cmake_c_compiler_external_toolchain": 348, "cmake_c_compiler_target": 348, "cmake_c_flag": [287, 348, 407], "cmake_c_flags_optimiz": 407, "cmake_cflag": 348, "cmake_cxx_compil": 341, "cmake_cxx_flag": 287, "cmake_cxx_flags_releas": 341, "cmake_cxx_flags_relwithdebinfo": 341, "cmake_install": 287, "cmake_install_prefix": [276, 287, 341, 342, 349], "cmake_lang_compil": 407, "cmake_lang_flag": 407, "cmake_minimum_required": [287, 288], "cmake_module_path": 287, "cmake_parse_argu": 288, "cmake_sysroot": 348, "cmake_toolchain_fil": [287, 341], "cmake_try_compile_target": 348, "cmake_verbose_makefil": 276, "cmakecach": [287, 288, 416], "cmakefil": [341, 407], "cmakelist": [276, 287, 288, 302, 341, 407, 413, 414], "cmakeparseargu": 288, "cmd": [279, 382], "cmov": 394, "cmovcc": 394, "cmoveq": 394, "cmovneq": 394, "cmp": [289, 357, 381, 383, 394], "cmp32ri8": 289, "cmpb": 334, "cmpflag": 366, "cmpinst": [362, 383], "cmpnumber": 366, "cmpq": [334, 392], "cmpswap": 273, "cmptmp": [427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "cmpxchg": 278, "co": [341, 342, 350, 385, 407, 408, 409, 411], "co_aw": 327, "coalesc": [289, 298, 343, 383], "coalesce": 343, "coalescing": [289, 306], "coars": 296, "coco": 357, "cod": [30, 68, 122, 162, 214, 258, 274, 276, 277, 278, 280, 281, 283, 284, 286, 287, 288, 292, 293, 295, 296, 297, 299, 304, 314, 315, 316, 323, 326, 327, 331, 333, 334, 336, 337, 338, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 353, 355, 356, 358, 359, 360, 363, 366, 367, 368, 371, 379, 380, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 401, 404, 405, 407, 408, 409, 411, 412, 415, 416, 418, 419, 425, 434, 435, 442, 443], "code_owner": [326, 330, 382], "codebas": [291, 330, 341, 382], "codeblock": 339, "coded": [289, 394, 409, 433], "codeemittergen": 401, "codegen": [275, 289, 292, 293, 324, 327, 333, 336, 337, 339, 341, 343, 357, 360, 362, 367, 401, 409, 413, 414, 419, 423, 424, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "codegen_expr": [437, 438, 439, 440, 441], "codegen_func": [437, 438, 439, 440, 441], "codegen_proto": [437, 438, 439, 440, 441], "codegenerat": 352, "codegening": [430, 440], "codegenopt": 368, "codegenschedmodel": 413, "codepath": [278, 383], "codeprop": 275, "coder": 385, "codesiz": 405, "codeview": [316, 371, 376], "codeviewdebug": 393, "codgen": 437, "coding": [289, 326, 330, 340, 341, 383, 405, 413, 419], "codlai": 422, "coerc": 366, "coerce_offset0": 292, "coff": [281, 289, 325, 342, 357, 371, 376], "cohen": 399, "coherenent": 275, "coherent": [275, 356, 357], "coincident": 410, "col": 433, "cold": [281, 282, 337, 357], "coldcc": [281, 357, 398], "colfield": 354, "collabor": 385, "collaborat": 385, "collaps": 394, "collapsed": 357, "collapsing": 357, "colleagu": 290, "collect": [287, 291, 304, 308, 313, 326, 337, 353, 358, 359, 360, 381, 383, 385, 386, 387, 397, 403, 404, 407, 408, 412, 419, 425, 434, 435, 442], "collect_and_build_with_pgo": 347, "collected": [277, 282, 283, 313, 339, 347, 357, 360, 361, 394, 396, 398, 404], "collecting": [396, 403, 408, 416], "collectively": [385, 396, 398, 403], "collector": [281, 335, 358, 398, 434, 442], "collis": [291, 357, 383, 385, 393], "colloquial": 357, "colombet": 343, "colomn": 334, "colon": [275, 287, 288, 292, 356, 391, 401, 403, 409, 418], "color": [65, 159, 253, 292, 304, 316, 383, 416], "colored": 289, "coloring": [327, 387], "colour": 290, "column": [291, 292, 313, 328, 334, 341, 354, 357, 393, 408, 412, 418, 433], "columnend": 328, "columnstart": 328, "com": [279, 281, 287, 288, 289, 290, 291, 293, 299, 304, 311, 330, 333, 339, 340, 341, 348, 350, 354, 355, 357, 359, 365, 366, 367, 371, 379, 382, 383, 384, 385, 386, 391, 393, 394, 398, 403, 407, 409, 414, 415, 418, 420, 422, 425, 427, 428, 429, 431, 434, 435, 437, 438, 439, 441, 442, 443], "com_f": 289, "combin": [3, 80, 174, 270, 275, 278, 285, 287, 302, 324, 327, 330, 333, 339, 343, 357, 359, 366, 368, 383, 387, 388, 398, 412, 413, 415, 416, 418, 426, 427, 434, 436, 437, 442], "combine1": 289, "combine2": 289, "combined": [275, 289, 304, 315, 323, 333, 334, 340, 343, 357, 359, 362, 383, 388, 394, 410, 414, 415, 416], "combinedallocator": 391, "combining": [289, 301, 313, 357, 385, 413], "comdat": [281, 334], "comfort": 390, "coming": [288, 289, 291, 327, 357, 362, 393, 394, 428, 429, 431, 438, 439, 441], "comm": [35, 80, 129, 174, 221, 270, 271, 272, 275, 284, 291, 292, 309, 323, 326, 345, 350, 357, 358, 362, 364, 375, 382, 383, 403, 409, 418, 419, 429, 439], "command": [275, 276, 277, 279, 285, 287, 289, 291, 292, 293, 296, 297, 298, 299, 300, 301, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 320, 321, 322, 324, 329, 331, 338, 341, 342, 343, 344, 345, 347, 348, 350, 352, 353, 356, 357, 359, 360, 368, 383, 385, 388, 389, 391, 398, 401, 405, 407, 408, 409, 413, 414, 416, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "commande": 396, "commandlin": [296, 419, 424], "commandlinepars": 416, "commaseparated": 323, "comment": [275, 284, 292, 302, 313, 326, 330, 351, 356, 357, 359, 365, 366, 381, 382, 383, 388, 401, 404, 405, 409, 415, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "commented": [339, 426, 427, 436, 437], "commenting": 289, "commentstring": 413, "commercial": [330, 398], "commit": [291, 326, 330, 337, 341, 350, 363, 382, 385, 395, 398, 419], "committ": 330, "committe": [290, 383], "committed": [313, 326, 330, 341, 345, 350, 382], "committing": [330, 341, 350, 385], "common": [276, 277, 278, 280, 281, 288, 289, 291, 299, 314, 323, 324, 326, 327, 330, 332, 333, 335, 337, 338, 339, 340, 343, 351, 356, 357, 358, 359, 361, 363, 365, 366, 371, 381, 384, 385, 387, 391, 393, 394, 395, 396, 398, 399, 402, 403, 405, 407, 413, 414, 417, 418, 419, 426, 428, 429, 430, 431, 434, 436, 438, 439, 440, 441, 442], "commonality": [289, 403], "commonly": [281, 291, 339, 357, 383, 413], "commonmark": 363, "commun": [290, 291, 361, 390, 399, 419, 424], "communicat": [277, 290, 327, 329, 335, 337, 357, 367, 394, 396, 414], "communicated": 383, "communicating": 290, "community": [324, 326, 330, 337, 358, 383, 385, 390], "commut": [277, 289, 381, 413], "compact": [275, 289, 301, 326, 332, 339, 357, 383, 433, 434, 442], "compacting": 339, "compactly": [327, 403], "compactness": [327, 396], "company": 330, "compar": [273, 274, 276, 277, 278, 282, 306, 316, 332, 343, 357, 359, 381, 383, 384, 387, 389, 393, 394, 403, 407, 408, 412, 418, 426, 429, 436, 439], "compared": [289, 292, 306, 313, 357, 366, 383, 389, 394, 409], "comparefp": 403, "comparing": [283, 306, 308, 343, 354, 357, 366, 383, 389, 429, 430, 431, 432, 433, 439, 440, 441], "comparison": [274, 278, 283, 334, 337, 340, 343, 351, 357, 381, 383, 389, 398, 403, 412, 422, 426, 430, 436, 440], "compatibility": [280, 281, 288, 316, 323, 327, 333, 334, 350, 353, 355, 357, 375, 383, 393, 396, 398, 410, 411, 419, 434, 442], "compatibl": [275, 278, 287, 289, 295, 298, 299, 304, 324, 330, 332, 334, 338, 339, 341, 342, 357, 367, 381, 383, 388, 391, 394, 409, 411], "compatible_class": 289, "competing": 275, "compil": [275, 276, 277, 278, 280, 281, 285, 286, 288, 289, 292, 293, 295, 298, 304, 308, 313, 316, 317, 323, 326, 327, 328, 330, 331, 332, 333, 337, 338, 339, 340, 342, 343, 345, 346, 347, 350, 356, 358, 359, 360, 366, 367, 368, 371, 379, 383, 384, 385, 386, 387, 389, 391, 393, 394, 396, 397, 398, 399, 401, 404, 405, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 420, 421, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443], "compiland": [316, 371, 374, 379], "compile_tim": 407, "compileact": [423, 424], "compilecallback": [423, 424], "compilecallbackmanag": 422, "compilecallbackmanager": 423, "compilecallbackmgr": [423, 424], "compiled": [275, 285, 289, 291, 293, 304, 309, 314, 323, 324, 327, 328, 330, 331, 335, 339, 341, 342, 348, 352, 357, 358, 360, 367, 371, 379, 383, 388, 393, 394, 396, 398, 407, 409, 414, 420, 421, 422, 423, 424, 428, 433, 434, 437, 438, 442], "compilelai": [420, 421, 422, 423, 424], "compilemodul": 416, "compileondemand": [422, 423], "compileondemandlai": 422, "compiler": [276, 285, 287, 289, 291, 293, 325, 330, 331, 335, 339, 340, 341, 356, 357, 365, 367, 383, 387, 393, 398, 412, 419, 425, 435], "compiler_rt": 330, "compiler_rt_test_compile_cflag": 348, "compiler_rt_test_compiler_cflag": 348, "compileutil": [420, 421, 422, 423, 424], "compiling": [293, 304, 342, 346, 347, 348, 357, 358, 367, 381, 383, 388, 391, 393, 394, 396, 398, 407, 408, 409, 414, 416, 419, 420, 421, 424, 425, 428, 431, 433, 434, 438, 442, 443], "compl": [340, 357, 383, 394], "complain": [342, 344], "complaining": 341, "complaint": [434, 442], "complet": [275, 277, 282, 284, 287, 288, 289, 291, 293, 295, 296, 304, 308, 321, 323, 327, 330, 332, 342, 343, 347, 357, 358, 359, 360, 361, 365, 366, 367, 381, 390, 393, 394, 398, 399, 403, 413, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "completed": [275, 277, 348, 350, 359, 361, 388, 431, 441], "completely": [281, 289, 291, 323, 330, 345, 357, 360, 385, 387, 393, 394, 399, 401, 414, 418, 425, 435], "completeness": 339, "completing": [383, 388, 399], "complex": [288, 289, 291, 333, 343, 350, 359, 366, 368, 393, 394, 401, 412, 413, 414, 421, 426, 428, 430, 434, 436, 438, 440, 442], "complexit": [289, 431, 433, 441], "complexity": [289, 339, 359, 366, 381, 383, 398, 399, 402, 405, 413], "complexpattern": [289, 413], "complextyp": 444, "compli": [275, 324], "complicated": [276, 278, 287, 288, 291, 332, 333, 339, 341, 342, 348, 351, 355, 357, 387, 394, 401, 411, 412, 413], "complicating": 385, "component": [273, 287, 288, 302, 304, 305, 319, 329, 330, 331, 338, 339, 341, 342, 348, 350, 352, 357, 358, 361, 367, 375, 381, 383, 384, 394, 396, 408, 413, 415, 417, 419, 420], "component_0": 356, "component_1": 356, "compos": [342, 357, 421], "composed": [274, 299, 328, 357, 362, 417], "composing": [357, 421], "composit": [357, 383], "compositional": 387, "compound": 328, "compr": [0, 1, 2, 55, 149, 243], "comprehens": [341, 381, 394, 409], "compress": [281, 287, 341, 359], "compressed": [55, 149, 243, 273, 287, 301, 341, 357, 383], "compris": [275, 387], "comprised": 275, "compriz": 301, "compromis": 383, "compromising": [357, 394], "compteur": 27, "compuat": 358, "comput": [116, 207, 273, 277, 282, 285, 289, 291, 301, 324, 328, 337, 339, 345, 357, 358, 359, 381, 383, 386, 387, 394, 398, 403, 413, 414, 425, 427, 429, 430, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442], "computationally": 358, "compute_20": 367, "compute_factorial": 329, "compute_pgm_rsrc1_sgpr": 275, "compute_pgm_rsrc1_vgpr": 275, "compute_pgm_rsrc2_user_sgpr": 275, "compute_xx": [324, 367], "computear": 351, "computed": [80, 174, 270, 275, 277, 289, 301, 313, 339, 357, 358, 371, 381, 391, 394, 414, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "computeknownbit": 343, "computing": [275, 335, 340, 357, 387, 391, 394, 396, 428, 438], "con": [280, 403, 404], "concat": 357, "concaten": [281, 341, 383, 403, 404, 409], "concatenat": [343, 383, 403], "concatenated": [357, 383, 404, 409], "concatenating": [280, 403], "concentrat": 348, "concentrated": 313, "concept": [280, 281, 289, 291, 337, 340, 343, 351, 357, 366, 367, 383, 388, 393, 394, 399, 402, 420, 421, 427, 429, 437, 439], "conceptual": [291, 357], "conceptually": [280, 289, 292, 323, 332, 340, 357, 383, 410], "concern": [330, 398], "concerned": [339, 340, 356, 357, 421], "concis": [289, 291, 323, 330, 340], "conclud": [313, 357, 429, 430, 439, 440], "conclus": [313, 366, 422, 425, 433, 435, 441, 443], "concret": [281, 289, 323, 350, 357, 365, 383, 393, 403, 405, 413, 414, 428, 438], "concretely": 398, "concurrency": [357, 388, 419], "concurrent": [275, 278, 287, 339, 388, 420], "concurrentircompil": [420, 421], "concurrently": [339, 383], "cond": [274, 282, 327, 335, 357, 365, 413, 429, 430, 431, 432, 433, 439, 440, 441], "cond_fals": [431, 441], "cond_next": [431, 441], "cond_tru": [431, 441], "cond_val": [439, 440, 441], "condbr": 343, "condbranch": 413, "condit": [68, 162, 258, 274, 283, 288, 289, 291, 323, 332, 335, 337, 340, 343, 360, 366, 381, 383, 394, 398, 399, 409, 410, 413, 414, 426, 429, 430, 431, 432, 433, 436, 439, 440, 441], "conditional": [278, 283, 286, 287, 288, 289, 304, 327, 337, 341, 357, 358, 367, 368, 394, 398, 404, 413, 425, 426, 427, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 441], "conditionally": [288, 296, 339, 394], "condmovfp": 403, "conduct": 419, "conducted": [313, 330], "condv": [429, 430, 431, 432, 433], "conferent": [289, 339], "confident": 330, "confidential": 390, "confidentiality": 330, "config": [276, 287, 295, 296, 302, 309, 330, 338, 341, 342, 345, 348, 356, 383, 384, 385, 409, 413, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 437], "configmaxtest": 383, "configur": [275, 287, 289, 292, 309, 330, 338, 342, 343, 344, 347, 348, 349, 350, 356, 359, 367, 380, 383, 384, 385, 389, 391, 408, 409, 412, 413, 414, 415, 416, 418, 419, 420, 421, 432], "configured": [276, 291, 296, 341, 342, 357, 359, 383, 391, 398, 408, 414, 415, 417, 420], "configuring": [341, 383, 388], "confirm": [291, 359], "confirmed": 284, "conflict": [275, 289, 330, 357, 365, 383, 385, 403, 409], "conflicted": [437, 438, 439, 440, 441], "conflicting": 437, "conform": [275, 286, 296, 297, 326, 330, 335, 339, 350, 357, 383, 421, 422], "conforming": [291, 357, 383, 418], "confronted": [337, 340], "confus": [291, 299, 330, 340, 366, 383, 387, 394, 413], "confused": [332, 357], "confusing": [339, 357], "confusingly": 278, "congrat": 347, "congruenc": 358, "congruency": 358, "conjunct": [287, 292, 294, 302, 316, 317, 357, 389, 399, 403], "connect": [382, 383, 387, 394, 398, 407, 410, 420, 424], "connected": [345, 358, 381], "consecut": [280, 292, 357, 391, 393, 404, 411, 412, 414], "consecutively": [357, 387], "consensus": 330, "consequent": [278, 290, 324, 341, 357, 359, 394], "consequently": [285, 313, 332, 357, 383, 396, 409], "conserv": [277, 339, 350, 357, 360, 394, 398, 414], "conservatism": 410, "conservatively": [275, 277, 278, 291, 313, 339, 357, 396, 410], "conserved": [282, 357], "consid": [277, 280, 281, 282, 289, 291, 293, 323, 324, 327, 328, 329, 335, 339, 340, 343, 346, 347, 351, 354, 355, 357, 358, 365, 366, 383, 390, 393, 394, 396, 398, 399, 403, 409, 411, 412, 414, 421, 425, 426, 429, 431, 435, 436, 439, 441], "consider": [289, 324, 334, 359, 381, 398, 399, 418, 426, 436], "considerably": [341, 402, 405], "considerat": 290, "considered": [275, 277, 289, 290, 292, 293, 305, 314, 327, 330, 332, 334, 336, 343, 357, 366, 381, 383, 388, 389, 390, 391, 393, 394, 396, 397, 399, 404, 405, 407, 414, 429, 433, 434, 439, 442], "considering": [289, 343], "consist": [275, 281, 289, 296, 314, 317, 323, 328, 332, 339, 343, 347, 350, 356, 357, 362, 366, 375, 393, 394, 398, 403, 404, 405, 408, 413, 415, 429, 439], "consisted": 353, "consistency": [357, 359, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "consistent": [275, 277, 278, 288, 291, 292, 301, 330, 337, 338, 340, 357, 368, 385, 414, 427], "consistently": [292, 350], "consisting": [343, 357, 366, 383, 388, 411, 413], "consol": [289, 359, 363, 395, 415, 419, 428, 438], "const": [6, 9, 15, 16, 31, 36, 37, 38, 48, 50, 52, 53, 56, 61, 63, 80, 84, 87, 97, 98, 123, 130, 131, 132, 145, 146, 147, 148, 150, 154, 155, 157, 174, 178, 181, 188, 189, 215, 222, 223, 226, 239, 240, 241, 242, 244, 248, 249, 251, 270, 275, 277, 278, 281, 289, 291, 301, 316, 323, 324, 327, 328, 333, 335, 337, 339, 341, 351, 355, 358, 359, 360, 367, 368, 387, 391, 394, 396, 398, 403, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 429, 430, 431, 432, 433, 437], "const0": 281, "const_arg_iterator": 383, "const_float": [437, 438, 439, 440, 441], "const_global_iterator": 383, "const_iterator": 383, "const_null": [439, 440, 441], "const_op_iterator": 383, "const_use_iterator": 383, "constant_tsc": 417, "constantarray": 383, "constantfoldcall": 333, "constantfolding": 333, "constantfp": [383, 427, 428, 429, 430, 431, 432, 433, 437], "constantindex": 396, "constantint": [291, 357, 362, 383], "constantness": 357, "constantpoolsect": 413, "constantstruct": 383, "constdat": 362, "constexpr": 324, "constindex": 396, "constituent": [332, 429, 439], "constitut": [280, 281, 383, 390, 409, 421], "constituting": 343, "constprop": [323, 383], "constrain": [275, 335, 343, 403], "constrained": [313, 332, 341, 380, 427, 437], "constraining": 343, "constraint": [289, 291, 321, 330, 332, 333, 365, 381, 383, 385, 387, 388, 393, 398, 405, 413, 414], "constrast": 277, "construct": [275, 278, 288, 291, 299, 313, 323, 327, 332, 333, 339, 343, 354, 355, 357, 362, 363, 383, 387, 393, 395, 398, 401, 403, 404, 411, 413, 414, 420, 422, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "constructed": [277, 281, 286, 291, 355, 383, 398, 403, 411, 414, 416, 418, 428, 438], "constructing": [289, 357, 383, 393, 398, 414, 426, 431, 433, 436, 441], "constructively": 290, "constructor": [278, 289, 323, 324, 327, 335, 351, 353, 355, 357, 361, 413, 414, 418, 420, 421, 422, 429], "constucted": 420, "constval": 383, "constvcall": 357, "consult": [287, 341, 342, 358, 371, 414], "consulted": 299, "consulting": [365, 419], "consum": [313, 323, 327, 332, 342, 346, 357, 371, 374, 375, 379, 393, 396, 405, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "consumed": [275, 301, 302, 313, 316, 332, 357, 379, 383, 396, 401], "consumeerror": 383, "consumer": [275, 340, 364, 383], "consuming": [313, 327, 357, 359], "consumpt": [289, 313, 359, 414], "cont": [327, 332, 355, 357], "cont6": 332, "contact": [290, 330, 345, 350, 359, 388, 390, 414], "contain": [275, 277, 278, 280, 281, 283, 284, 285, 287, 288, 289, 291, 292, 294, 296, 297, 299, 304, 305, 309, 311, 313, 314, 317, 320, 322, 323, 326, 327, 328, 329, 330, 331, 332, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 354, 356, 357, 358, 361, 362, 365, 366, 367, 368, 371, 374, 375, 381, 384, 385, 386, 387, 388, 389, 393, 394, 396, 398, 401, 403, 404, 405, 407, 408, 409, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 424, 427, 429, 433, 437, 439], "contained": [275, 276, 281, 292, 294, 296, 299, 323, 328, 332, 341, 343, 356, 357, 358, 361, 371, 374, 379, 383, 393, 398, 403, 409, 414, 428, 436, 438], "container": [287, 291, 331, 418], "containing": [275, 276, 281, 282, 283, 287, 289, 291, 292, 294, 296, 300, 305, 314, 323, 324, 326, 327, 328, 330, 332, 340, 341, 342, 343, 348, 352, 357, 360, 368, 371, 374, 379, 383, 387, 391, 393, 394, 396, 398, 401, 404, 408, 409, 411, 412, 413, 420, 428, 429, 430, 431], "containingtyp": 357, "containment": 383, "containsfoo": 291, "content": [277, 280, 287, 291, 292, 293, 299, 301, 302, 304, 308, 315, 323, 330, 334, 336, 356, 357, 360, 363, 366, 371, 379, 381, 383, 387, 391, 394, 395, 404, 405, 408, 409, 413, 414, 416, 419, 435, 436, 437, 438, 439, 440, 441], "content_disposition_typ": 330, "contentious": [291, 330], "context": [277, 278, 291, 323, 332, 335, 337, 340, 345, 351, 357, 358, 364, 366, 367, 382, 383, 390, 394, 401, 403, 404, 405, 409, 414, 417, 420, 426, 431, 433, 436, 437, 438, 439, 440, 441], "contextualiz": 417, "contiguous": [275, 343, 357, 383, 393, 417], "contiguously": [357, 375, 379], "continu": [275, 277, 281, 289, 316, 326, 327, 330, 332, 350, 357, 359, 360, 382, 383, 385, 388, 392, 394, 409, 417, 423, 424, 426, 434, 436, 442], "continually": 293, "continued": 357, "continuing": [275, 292, 323, 329, 332, 351, 357, 420], "continuity": 383, "continuous": [286, 289, 330, 359, 385, 407], "continuously": [286, 383, 385, 407], "contract": [324, 337, 357, 383, 396, 401], "contradict": 330, "contrary": [289, 357], "contrast": [289, 332, 351, 383, 385, 387, 414, 427, 437], "contrib": [316, 341], "contribu": [316, 326, 330, 348, 379, 385, 415, 419], "contribut": [316, 330, 337, 357, 371, 374, 381, 398, 414, 419, 443], "contributed": [289, 330, 371], "contributing": [330, 371, 383, 385, 419], "contributor": [276, 287, 288, 330, 385], "contrived": [335, 403], "control": [117, 208, 273, 274, 275, 285, 287, 289, 291, 296, 297, 298, 306, 313, 323, 327, 330, 331, 332, 333, 336, 337, 342, 343, 355, 357, 358, 359, 360, 361, 367, 381, 383, 385, 387, 388, 392, 393, 394, 396, 398, 409, 411, 412, 413, 414, 415, 416, 419, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443], "controll": [275, 343], "controlled": [3, 81, 175, 210, 275, 278, 330, 331, 357, 359, 381, 394, 410, 415], "controlled_": 394, "controller": 275, "controlling": [296, 341, 438], "conv": 335, "convenient": [289, 291, 292, 296, 305, 323, 327, 330, 343, 351, 357, 365, 367, 381, 383, 384, 385, 403, 409, 415, 428, 429, 430, 439, 440], "conveniently": [328, 403, 415, 434, 442], "convent": [281, 288, 291, 325, 327, 332, 343, 351, 363, 366, 383, 393, 394, 395, 396, 398, 401, 427, 433, 437], "conventional": 357, "converg": 440, "convergent": [281, 357], "convers": [289, 291, 323, 336, 337, 383, 388, 403, 418], "convert": [273, 274, 275, 278, 289, 295, 296, 307, 323, 336, 337, 340, 341, 347, 353, 366, 367, 381, 383, 388, 403, 404, 413, 414, 415, 416, 418, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444], "converted": [26, 104, 105, 106, 107, 114, 115, 205, 206, 274, 289, 304, 341, 357, 381, 383, 388, 413, 418], "convertibl": [383, 418], "converting": [280, 289, 333, 357, 381, 401, 418], "converttoerrorcod": 383, "convervatively": 275, "convey": [330, 332, 337, 343, 357, 410], "conveyed": 357, "conveying": 339, "cook": [357, 383], "cool": [323, 330, 414, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "cooper": [339, 344], "coordin": [339, 398], "coordinat": [6, 84, 178, 418], "coordinating": [357, 398], "cop": [278, 289, 298, 323, 327, 339, 341, 343, 355, 357, 365, 381, 383, 391, 393, 398, 414], "copied": [275, 277, 289, 323, 327, 330, 361, 363, 392, 395, 410], "copy": [55, 65, 149, 159, 243, 253, 275, 281, 285, 289, 291, 292, 303, 304, 323, 327, 332, 338, 339, 341, 343, 344, 349, 350, 357, 362, 363, 367, 371, 382, 383, 385, 386, 393, 394, 395, 398, 409, 410, 412, 413, 414], "copyabl": 383, "copycost": [343, 413], "copying": [277, 287, 291, 332, 339, 357, 358, 413, 414], "copyleft": 330, "copypart": 359, "copyphysreg": 413, "copyright": [335, 414], "cor": [277, 279, 287, 288, 330, 332, 333, 341, 345, 346, 349, 356, 357, 359, 368, 385, 388, 394, 401, 405, 409, 414, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 433], "core2": 409, "corei7": [409, 412], "corn": 396, "cornerston": 340, "coroaddr": 327, "corollary": 374, "corosp": 327, "coroutin": 419, "corp": 359, "corpor": 359, "corpus": 338, "corpus1": 359, "corpus2": 359, "corpus_d": 359, "correct": [275, 277, 278, 280, 287, 289, 291, 323, 324, 327, 330, 333, 337, 341, 344, 345, 349, 352, 357, 358, 368, 376, 381, 382, 383, 388, 389, 392, 393, 394, 399, 412, 414, 415, 428, 438], "correcting": 330, "correctly": [275, 278, 284, 287, 289, 291, 323, 330, 332, 335, 340, 341, 348, 357, 366, 382, 383, 384, 392, 393, 394, 398, 409, 414, 418, 426, 429, 436, 439], "correctness": [323, 330, 341, 350, 352, 381, 389, 398, 407, 408], "correl": 357, "correlat": [313, 339, 357], "correspond": [273, 275, 278, 285, 287, 289, 292, 297, 303, 304, 313, 323, 327, 328, 332, 334, 335, 340, 342, 351, 357, 362, 365, 367, 371, 374, 375, 383, 393, 401, 404, 405, 411, 412, 413, 417, 426, 427, 429, 433, 436, 437], "corresponding": [273, 275, 278, 280, 281, 287, 289, 291, 292, 306, 309, 320, 327, 328, 330, 332, 333, 339, 340, 341, 342, 351, 352, 354, 357, 358, 362, 366, 371, 374, 376, 381, 382, 383, 393, 398, 401, 409, 411, 413, 414, 417, 418, 427, 429, 439], "corrupt": [332, 359, 391, 434, 442], "corrupted": 299, "cortex": [346, 349, 353], "cortexa53model": 413, "cortexa57model": 413, "cos": [277, 412, 418, 425, 426, 427, 428, 435, 436, 437, 438], "cosin": [357, 413], "cost": [289, 291, 313, 343, 354, 357, 358, 360, 366, 380, 383, 385, 387, 388, 394, 412, 413, 434, 442], "costly": [394, 417], "could": [275, 277, 278, 285, 287, 288, 289, 291, 292, 296, 305, 313, 323, 327, 330, 331, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 349, 351, 353, 354, 355, 357, 358, 363, 365, 368, 375, 381, 382, 383, 385, 386, 391, 393, 394, 395, 396, 398, 399, 402, 403, 409, 410, 413, 417, 418, 421, 422, 426, 427, 428, 429, 431, 432, 434, 436, 438, 439, 441, 442], "couldn": [277, 366, 388, 423, 424, 432], "counsel": 330, "count": [80, 174, 270, 274, 275, 278, 285, 287, 299, 304, 313, 317, 323, 332, 333, 339, 359, 371, 383, 385, 387, 393, 396, 403, 407, 408, 410, 413, 416, 417, 426, 436], "counted": [292, 353, 357], "counter": [116, 207, 275, 276, 309, 313, 317, 328, 357, 359, 368, 393], "counterpart": 357, "counting": [339, 357], "coupl": [278, 330, 337, 341, 357, 360, 382, 398, 403, 414, 415, 429, 430, 433, 434, 439, 440, 442], "coupled": 383, "cour": 27, "cours": [277, 287, 323, 333, 343, 357, 359, 366, 368, 383, 414, 421, 425, 434, 435, 436, 442], "courtesy": [326, 330], "cout": [291, 335, 367, 418, 432], "cov": [289, 291, 292, 295, 328, 341, 343, 347, 350, 357, 359, 363, 383, 388, 395, 396, 425, 435], "cover": [305, 323, 325, 330, 339, 340, 342, 343, 359, 366, 413, 415], "coverag": [286, 287, 295, 330, 338, 343, 347, 393, 416, 419], "coveragemappingdataforfunctionrecord0": 328, "coveragemappingdataforfunctionrecord1": 328, "covered": [292, 304, 328, 337, 343, 345, 357, 359, 393, 397, 413, 414, 430, 440], "covering": 409, "cp": [275, 341, 359, 362], "cpi": 362, "cpp": [287, 288, 289, 291, 292, 303, 323, 329, 333, 335, 339, 341, 366, 367, 385, 391, 393, 398, 399, 401, 409, 412, 413, 414, 416, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "cppflag": 384, "cppperformancebenchmark": 386, "cppreferent": 383, "cptmp0": 413, "cptmp1": 413, "cpu": [275, 278, 279, 281, 294, 297, 298, 308, 309, 313, 324, 343, 346, 349, 353, 357, 359, 366, 388, 394, 407, 413, 414, 416, 417, 418, 423, 424, 432], "cpu0": 443, "cpu1": 418, "cpu2": 418, "cpu2017": 386, "cpu_id": 417, "cpu_nam": 309, "cpu_powerpc": 418, "cpu_x86": 418, "cpu_x86_64": 418, "cpufreq": [279, 346], "cpufrequtil": 346, "cpuinfo": 346, "cpun": 279, "cpunam": [297, 298, 313], "cpus": [278, 279, 289, 296, 297, 298, 324, 341, 346, 349, 394, 413, 417, 418, 432], "cpuset": 279, "cputyp": 281, "cpux": 279, "cr": [289, 357], "cr0": 357, "cr7": 357, "crafted": 383, "crash": [291, 293, 298, 339, 341, 352, 359, 381, 383, 385, 386, 396, 434, 442], "crashed": [293, 341], "crashing": 293, "crawl": 339, "crazi": [429, 439], "crazy": [323, 425, 434, 435, 442], "crc": 359, "crc32": 391, "crd": 386, "creal": [430, 440], "creat": [275, 280, 287, 288, 289, 291, 297, 299, 311, 315, 316, 324, 326, 327, 328, 330, 331, 332, 334, 335, 339, 341, 342, 343, 345, 347, 349, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 381, 382, 383, 385, 389, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 407, 408, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "create_add": 437, "create_argument_alloc": 441, "create_entry_block_alloc": 441, "create_funct": [438, 439, 440, 441], "create_modul": [437, 438, 439, 440, 441], "createalloc": [431, 432, 433], "createasmstream": 289, "createbasicaliasanalysispass": 433, "createbasictyp": 433, "createbr": [429, 430, 431, 432, 433], "createcall": [383, 427, 428, 429, 430, 431, 432, 433], "createcfgsimplificationpass": [421, 422, 423, 424, 428, 429, 430, 431, 433], "createcompileun": 433, "createcondbr": [429, 430, 431, 432, 433], "created": [275, 280, 281, 287, 289, 290, 291, 294, 299, 304, 313, 323, 327, 328, 330, 335, 340, 341, 342, 349, 350, 357, 359, 360, 361, 382, 383, 387, 389, 398, 401, 404, 410, 413, 414, 418, 420, 421, 423, 424, 427, 428, 429, 431, 433, 437, 438, 439, 441], "createdatalayout": [422, 423, 424, 428, 429, 430, 431, 432, 433], "createdefaultmypass": 414, "createentryblockalloc": [431, 432, 433], "createexpress": 433, "createfadd": [427, 428, 429, 430, 431, 432, 433], "createfcmpon": [429, 430, 431, 432, 433], "createfcmpult": [427, 428, 429, 430, 431, 432, 433], "createfil": 433, "createfmul": [427, 428, 429, 430, 431, 432, 433], "createfsub": [427, 428, 429, 430, 431, 432, 433], "createfunct": [388, 433], "createfunctiontyp": 433, "creategvnpass": [421, 422, 423, 424, 428, 429, 430, 431, 433], "createindirectstubsmanag": 424, "createinstructioncombiningpass": [421, 422, 423, 424, 428, 429, 430, 431], "createj": 361, "createlegacylookupresolv": [422, 423, 424], "createload": [431, 432, 433], "createlocalcompilecallbackmanag": [422, 423], "createlocalindirectstubsmanagerbuild": [422, 423], "createmethod": 388, "createmul": 383, "createmyregisterallocator": 414, "createparametervari": 433, "createph": [429, 430, 431, 432, 433], "createpromotememorytoregisterpass": [431, 433], "createreassociatepass": [421, 422, 423, 424, 428, 429, 430, 431], "createremotememorymanag": 424, "createret": [427, 428, 429, 430, 431, 432, 433], "createstor": [431, 432, 433], "createstub": [423, 424], "createsubroutinetyp": 433, "createtargetasminfo": 413, "createtargetmachin": 432, "createtempfunctionfwddecl": 388, "createuitofp": [427, 428, 429, 430, 431, 432, 433], "createvirtualregist": 289, "creating": [294, 296, 303, 309, 311, 313, 321, 326, 332, 334, 335, 341, 344, 345, 350, 357, 360, 361, 381, 387, 393, 396, 409, 413, 418, 419, 428, 429, 430, 433, 438, 439, 440, 443], "creation": [327, 339, 350, 353, 357, 383, 413], "creator": [287, 414], "creatur": [425, 430, 435, 440], "cred": 394, "credit": 330, "crhc": 386, "critedge1": 367, "criterion": 391, "critical": [288, 291, 298, 337, 339, 350, 357, 389, 414, 426, 436], "critically": [277, 394], "cross": [276, 293, 316, 343, 346, 357, 366, 379, 385, 387, 388, 419, 432], "crosscompil": [289, 349], "crucial": [357, 382, 394], "cruel": [363, 395], "crypt": 330, "crypto": 359, "crypto_guidelin": 394, "cryptographic": 394, "cryptographically": 391, "cs": [357, 386], "cs1": [277, 357], "cs2": [277, 357], "csail": 394, "cse": [278, 333, 358, 368, 428, 438], "cset": 279, "csk_md5": 357, "csk_non": 357, "csk_sha1": 357, "csr_64": 362, "cst": 357, "cst_code_integ": 281, "cst_code_wide_integ": 281, "cstdint": [424, 428, 429, 430, 431], "cstdio": [424, 426, 427, 428, 429, 430, 431, 432, 433], "cstdlib": [423, 424, 426, 427, 428, 429, 430, 431, 432], "cstptr": 357, "cstring": 424, "cstylecomment": 404, "csv": [309, 408, 415, 416], "cta": 367, "ctaid": 367, "ctest": 407, "ctfe": 388, "ctmark": 407, "ctor": [291, 335, 355, 357], "ctpop": 413, "ctrl": [427, 432], "ctx": [420, 421], "ctxt": 418, "ctyp": 371, "cu": [275, 308, 324, 357, 393], "cubic": 359, "cucontext": 367, "cuctxcreat": 367, "cuctxdestroy": 367, "cud": [289, 325, 331, 367, 419], "cuda_success": 367, "cudamodul": 367, "cudevic": 367, "cudevicecomputecapability": 367, "cudeviceget": 367, "cudevicegetcount": 367, "cudevicegetnam": 367, "cudeviceptr": 367, "cufunct": 367, "cuin": 367, "culaunchkernel": 367, "culinkstat": 367, "culled": 291, "cultur": 290, "cumbersom": 385, "cumemalloc": 367, "cumemcpydtoh": 367, "cumemcpyhtod": 367, "cumemfre": 367, "cumodul": 367, "cumodulegetfunct": 367, "cumoduleloaddat": 367, "cumoduleloaddataex": 367, "cumoduleunload": 367, "cumul": [289, 416], "cuobjdump": 324, "cur_var": 441, "curesult": 367, "curious": 366, "curloc": 433, "curly": [291, 357, 383, 403, 409], "curop": 413, "curr": 435, "currency": [289, 330, 428, 438], "current": [273, 274, 275, 281, 288, 289, 291, 292, 297, 298, 313, 324, 327, 328, 330, 332, 333, 336, 337, 339, 341, 343, 349, 350, 354, 355, 356, 357, 359, 366, 367, 375, 381, 382, 383, 384, 385, 388, 389, 392, 393, 394, 396, 398, 401, 403, 404, 405, 409, 410, 411, 413, 414, 418, 419, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "current_corpus_d": 359, "current_valu": 327, "currently": [6, 84, 178, 216, 217, 256, 273, 274, 275, 277, 278, 280, 281, 283, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 299, 304, 305, 313, 314, 323, 324, 327, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 356, 357, 359, 361, 362, 367, 371, 380, 381, 383, 384, 386, 390, 391, 393, 394, 396, 398, 399, 401, 410, 413, 414, 415, 416, 418, 420, 421, 422, 426, 428, 429, 430, 431, 433, 434, 436, 438, 439, 440, 441, 442], "curs": [293, 296], "curtok": [426, 427, 428, 429, 430, 431, 432, 433], "curvar": [431, 432, 433, 441], "cus": 275, "custom": [287, 289, 291, 292, 293, 332, 335, 337, 356, 357, 359, 362, 381, 398, 401, 402, 405, 409, 417, 419, 420, 423], "customalloc": 327, "customary": [323, 330, 357], "customevent": 417, "customeventmarker": 417, "customeventunstructuredmemory": 417, "customfre": 327, "customis": 415, "customised": 287, "customiz": [287, 323, 333, 340, 383, 407, 409], "customized": [339, 357], "customizing": 287, "cut": [282, 309, 323, 413, 420, 434, 442], "cutoff": 317, "cv": 385, "cv_cpu_type_": 371, "cv_signature_xx": 374, "cvdebugrecord": 376, "cvdump": 316, "cve": 359, "cvinfo": 374, "cvt": [367, 388], "cx": 405, "cxa_demangl": 393, "cxx": [291, 341, 344, 349, 389], "cxx11": [291, 386], "cxx_fast_tl": 357, "cxx_fast_tlscc": [281, 357], "cxx_flag": 346, "cxx_status": 291, "cxxflag": [303, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "cxxmap": [295, 317], "cy": 313, "cycl": [309, 313, 326, 332, 357, 360, 393, 416, 419], "cycle_frequency": 417, "cyclic": [341, 357], "cyclonemodel": 413, "cygwin": [289, 341, 342], "cypress": 275, "cywritev3": 413, "d0": [292, 357, 413], "d02": 411, "d1": [292, 413], "d10": 413, "d11": 413, "d12": [411, 413], "d13": 413, "d14": 413, "d15": 413, "d16": [1, 2, 100, 111, 113, 191, 202, 204, 357], "d16_x": 272, "d16_xy": 272, "d16_xyz": 272, "d16_xyzw": 272, "d2": 413, "d3": [362, 413], "d31": 357, "d4": [357, 413], "d5": 413, "d6": 413, "d7": [357, 413], "d8": 413, "d9": 413, "d_ctor_bas": 292, "da": [0, 1, 2], "dag": [322, 358, 383, 385, 398, 401, 403, 404, 405, 409, 413], "dagarg": 404, "dagarglist": 404, "dagcombin": 333, "dagtodag": 333, "dagtodagisel": 333, "dan": [0, 1, 2, 418], "dang": [390, 394], "dangerous": [292, 357, 383, 410], "dangling": [383, 439], "daniel": [343, 393], "darktabl": 386, "darwin": [289, 320, 336, 357, 388, 396, 433], "darwin9": 292, "dash": [323, 338, 418], "dat": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 37, 38, 55, 65, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 131, 132, 149, 159, 178, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 223, 226, 243, 253, 272, 273, 276, 277, 278, 279, 280, 285, 286, 288, 291, 295, 299, 302, 304, 313, 314, 316, 318, 323, 327, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 347, 349, 350, 358, 359, 360, 361, 362, 365, 371, 375, 379, 382, 385, 386, 387, 388, 389, 393, 394, 396, 398, 401, 403, 405, 407, 413, 414, 416, 420, 421, 422, 427, 428, 429, 431, 432, 433, 438, 439, 440, 441], "data16bitsdirect": 413, "data32bitsdirect": 413, "data64bitsdirect": 413, "databas": [357, 379, 418, 419, 434, 442], "datacrc": 371, "dataflow": [357, 431, 441], "datalayout": [281, 339, 357, 367, 411, 413, 420, 421, 422, 423, 424, 438, 439, 440, 441], "datalayoutpass": 433, "dataset": [386, 407], "datastructur": [383, 385], "datatyp": [289, 323, 383, 425, 435], "daunting": 287, "david": 387, "day": [287, 330, 341, 350, 383, 419, 434, 442], "dbaremetal_armv6m_sysroot": 348, "dbaremetal_armv7em_sysroot": 348, "dbaremetal_armv7m_sysroot": 348, "dbg": [285, 357, 383, 413, 433], "dbginfo": 393, "dbgopt": 393, "dbgstreamarray": 371, "dbi": [374, 379], "dbi_head": 371, "dbi_mfc_type_server_substream": 371, "dbistreamhead": 371, "dbistreamvers": 371, "dbl": 407, "dblty": 433, "dbootstrap_cmake_build_typ": 331, "dbootstrap_cmake_c_flag": 276, "dbootstrap_cmake_cxx_flag": 276, "dbscan": 309, "dbuild": 433, "dbuild_shared_lib": 341, "dbx": 393, "dc": [359, 364], "dce": [293, 323, 327, 333], "dced": 383, "dclang_bootstrap_passthrough": 276, "dclang_bootstrap_target": 331, "dclang_enable_bootstrap": [276, 331], "dclang_enable_proto_fuzz": 338, "dclang_tablegen": [347, 349], "dcmake_ar": 348, "dcmake_asm_compiler_target": 348, "dcmake_asm_flag": 348, "dcmake_build_typ": [326, 331, 341, 346, 347, 416], "dcmake_c_compil": [347, 348, 407], "dcmake_c_compiler_external_toolchain": 348, "dcmake_c_compiler_target": 348, "dcmake_c_flag": [346, 347, 348], "dcmake_c_flags_releas": 416, "dcmake_crosscompiling": 349, "dcmake_cxx_compil": 347, "dcmake_cxx_flag": [347, 349, 416], "dcmake_cxx_link_flag": 341, "dcmake_exe_linker_flag": 348, "dcmake_install_prefix": [287, 341, 346, 349], "dcmake_nm": 348, "dcmake_osx_architectur": 341, "dcmake_ranlib": 348, "dcmake_sysroot": 348, "dcmake_toolchain_fil": 341, "dcmake_try_compile_target_typ": 348, "dcomm": 385, "dcompiler_rt_baremetal_build": 348, "dcompiler_rt_build_builtin": 348, "dcompiler_rt_build_libfuzz": 348, "dcompiler_rt_build_profil": 348, "dcompiler_rt_build_sanitizer": 348, "dcompiler_rt_build_xray": 348, "dcompiler_rt_default_target_only": 348, "dcompiler_rt_emulator": 348, "dcompiler_rt_include_test": 348, "dcompiler_rt_os_d": 348, "dcompiler_rt_test_compil": 348, "dcompiler_rt_test_compiler_cflag": 348, "ddd": 299, "dead": [277, 289, 323, 335, 337, 341, 343, 357, 358, 360, 362, 367, 368, 383, 393, 398], "deadlin": 330, "deadly": 359, "deadtypeelim": 383, "deal": [278, 281, 291, 330, 336, 343, 351, 381, 383, 393, 401, 415], "dealing": [278, 280, 290, 291, 330, 332, 336, 383, 385, 387, 393, 394, 431, 441], "dealloc": 391, "deallocat": [339, 357, 383], "deallocated": 383, "deallocationtypemismatch": 391, "dealt": 343, "death": [338, 359], "deb": 349, "debat": 291, "debian": [341, 348, 349, 380], "debian8": 331, "debug": [285, 287, 289, 291, 293, 295, 296, 303, 309, 314, 315, 316, 320, 321, 323, 326, 328, 329, 330, 332, 334, 341, 342, 347, 352, 357, 358, 359, 360, 362, 374, 376, 379, 380, 384, 388, 396, 398, 407, 409, 413, 414, 416, 419, 425, 431, 432, 434, 441, 442, 443], "debug_": 275, "debug_count": 383, "debug_info": [308, 393], "debug_inlin": 294, "debug_level": 323, "debug_metadata_vers": 433, "debug_mod": 275, "debug_nam": 393, "debug_pubnam": [294, 393], "debug_pubtyp": [294, 393], "debug_s_crossscopeexport": 316, "debug_s_crossscopeimport": 316, "debug_s_inlineelin": 316, "debug_s_lin": 316, "debug_str": [292, 393], "debug_string": 309, "debug_symbol": 380, "debug_with_typ": 383, "debugcount": 383, "debugflag": [323, 383], "debugg": [275, 291, 314, 316, 361, 376, 388, 409, 414, 419, 425, 429, 433, 439, 442], "debuggability": 332, "debugged": 393, "debugger": [275, 285, 289, 316, 329, 379, 393, 433, 442], "debugging": [275, 285, 287, 289, 291, 293, 296, 297, 304, 306, 310, 323, 339, 341, 342, 350, 352, 357, 366, 368, 381, 388, 405, 413, 414, 419, 425, 433, 435], "debuginfo": [341, 376, 393, 409, 433], "debuginfoforprofiling": 357, "debuglev": 323, "debuglevel": 323, "debugloc": [289, 393, 433], "debugtrap": 275, "decad": 405, "decent": [333, 346, 350, 383, 414, 425, 433], "decid": [287, 323, 324, 330, 332, 333, 352, 357, 382, 383, 385, 393, 394, 398, 412, 414, 426, 430, 436, 438, 440], "decided": [280, 343, 357, 398, 418, 431, 441], "deciding": [280, 343, 383], "decimal": [274, 292, 299, 314, 317, 323, 334, 357, 403, 418], "decimalinteg": 404, "decis": [280, 285, 289, 290, 291, 330, 332, 337, 343, 359, 383, 387, 390, 394, 398, 412, 421, 428, 438], "decl": [351, 405, 427], "declar": [274, 275, 277, 281, 289, 291, 292, 323, 324, 327, 333, 335, 351, 355, 356, 357, 366, 367, 383, 396, 398, 399, 401, 403, 405, 411, 413, 414, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "declarator": 292, "declare_funct": [437, 438, 439, 440, 441], "declared": [274, 291, 323, 356, 357, 381, 383, 393, 399, 401, 404, 405, 413, 414, 426, 427, 428, 429, 430, 431, 432, 433, 441], "declaring": [277, 323, 357, 383], "declcontext": 351, "declet": 357, "decltyp": [291, 357, 422, 423, 424], "decod": [281, 313, 357, 383, 393, 403, 407], "decoded": [281, 313], "decoding": 401, "decompos": 333, "decomposed": 330, "decomposing": 398, "decomposit": 309, "decorat": 393, "decoupl": 403, "decr": 332, "decreas": [298, 347, 391], "decreased": 350, "decreasing": 357, "dedicated": [274, 289, 343, 350, 385, 413], "deduc": [357, 368, 383, 403], "deduced": [404, 410], "deducibl": [275, 337], "dedupl": 371, "dee": 313, "deem": 352, "deemed": [333, 350, 357], "deep": [288, 291, 316, 338, 363, 381, 386, 407, 420], "deepcheck": 383, "def": [289, 309, 314, 327, 333, 343, 354, 358, 362, 365, 387, 393, 394, 401, 403, 405, 413, 420, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "default": [12, 13, 14, 18, 19, 20, 21, 24, 37, 90, 91, 92, 101, 102, 103, 105, 108, 111, 131, 185, 186, 187, 195, 196, 197, 198, 199, 202, 273, 275, 276, 277, 278, 281, 283, 287, 289, 292, 293, 294, 296, 297, 298, 299, 303, 304, 307, 308, 309, 310, 313, 314, 315, 316, 317, 320, 322, 323, 324, 327, 328, 330, 333, 334, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 349, 351, 355, 357, 359, 361, 362, 364, 365, 367, 380, 382, 383, 384, 385, 388, 391, 393, 394, 396, 398, 401, 403, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 420, 421, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440], "default_branch_weight": 283, "defaultconfig": 383, "defaultdest": 357, "defaulted": [291, 357], "defaultlib": 342, "defeating": 394, "defend": 394, "defending": 394, "defens": 330, "deferred": [361, 366, 394], "deferrederr": 383, "deferring": 421, "deficienc": [425, 435], "deficiency": 339, "defin": [36, 37, 130, 131, 222, 223, 275, 277, 280, 281, 282, 283, 287, 288, 289, 291, 292, 293, 296, 302, 323, 324, 326, 327, 328, 330, 331, 332, 335, 339, 340, 341, 348, 349, 354, 355, 356, 357, 359, 362, 363, 365, 366, 367, 371, 374, 379, 381, 383, 384, 391, 393, 394, 395, 398, 399, 401, 403, 404, 405, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "defined": [27, 116, 207, 274, 275, 276, 277, 278, 281, 287, 288, 289, 291, 292, 299, 301, 313, 314, 323, 324, 328, 330, 332, 333, 334, 335, 339, 340, 341, 343, 350, 352, 356, 357, 360, 362, 365, 366, 367, 368, 371, 374, 376, 380, 381, 383, 384, 388, 391, 393, 396, 397, 398, 399, 401, 403, 404, 405, 408, 410, 411, 413, 414, 415, 417, 418, 420, 421, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443], "definied": 354, "defining": [275, 281, 288, 289, 292, 323, 327, 332, 338, 339, 351, 356, 357, 366, 380, 383, 391, 401, 403, 404, 416, 418, 426, 436, 437], "definingaccess": 365, "definit": [274, 275, 278, 280, 281, 283, 288, 289, 292, 294, 306, 309, 314, 316, 322, 323, 327, 333, 339, 343, 350, 354, 356, 357, 360, 362, 365, 366, 381, 383, 391, 393, 398, 401, 404, 405, 411, 413, 414, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "definitely": [326, 352, 357, 383], "defm": [403, 405, 413], "defreg": 309, "defy": 357, "degener": 357, "degenerat": [381, 431, 441], "degrad": 330, "degraded": 339, "degre": [278, 331, 337, 345, 394, 412], "delay": [366, 383, 390, 391], "delayed": 403, "delegat": [278, 313, 332, 357], "delegating": 291, "delet": [277, 285, 289, 292, 299, 335, 341, 343, 344, 347, 357, 365, 366, 367, 383, 391, 393, 414, 427, 428, 429, 430, 431, 437, 438], "delete_funct": [437, 438, 439, 440, 441], "deleteaninstruct": 383, "deleted": [277, 291, 335, 357, 383, 393, 420, 422, 428], "deletesizemismatch": 391, "deleting": [277, 357, 381, 393, 427, 428, 429, 430, 431, 433, 437, 438, 439, 440, 441], "deliberat": 291, "deliberately": [365, 396], "delim": 332, "delimited": [288, 341, 357, 364, 404], "delineator": 296, "delt": [313, 352, 417], "deltalinestart": 328, "delv": [428, 438], "delving": 330, "demand": [275, 281, 289, 385, 420, 431, 441], "demanding": 341, "demangl": [304, 320, 359, 393], "demangled": [320, 393], "demo": [323, 424, 427, 437], "demonstr": [385, 428, 438], "demonstrat": [328, 357, 375, 383, 413, 427, 428, 437, 438], "demonstrated": [313, 330, 351], "demonstrating": [357, 383], "denominator": 291, "denormal": [275, 324, 357], "denormaliz": 418, "denormalizing": 418, "denot": [281, 339, 341, 357, 375], "denoted": [289, 357, 418], "denoting": 357, "dens": [275, 281, 357, 383, 430, 440], "densely": [281, 357], "densemapinfo": 383, "density": [291, 430, 440], "deopt": [357, 398], "deopt_arg": 357, "deoptimiz": 398, "dep": [438, 439, 440, 441], "depart": 299, "department": 386, "departur": 385, "depend": [6, 15, 16, 17, 25, 84, 93, 95, 96, 97, 98, 99, 100, 104, 106, 107, 112, 113, 178, 188, 189, 190, 191, 203, 204, 273, 274, 276, 277, 278, 283, 284, 287, 289, 290, 291, 293, 296, 297, 309, 313, 321, 324, 330, 332, 340, 341, 348, 356, 357, 359, 362, 365, 366, 367, 368, 380, 381, 383, 384, 389, 396, 409, 410, 412, 414, 417, 420, 426, 427, 431, 436, 437, 441], "depended": [291, 414], "dependenc": [277, 287, 289, 291, 303, 313, 323, 331, 332, 338, 341, 345, 348, 349, 356, 357, 359, 381, 385, 407, 410, 414], "dependency": [287, 289, 313, 316, 357, 385, 394], "dependent": [279, 281, 291, 296, 301, 316, 332, 335, 340, 353, 357, 385, 393, 394, 399, 408, 413, 414, 417], "depending": [100, 111, 113, 191, 202, 204, 210, 256, 271, 273, 274, 275, 277, 278, 289, 296, 299, 313, 317, 327, 330, 332, 337, 339, 343, 345, 348, 349, 354, 357, 361, 368, 375, 383, 385, 391, 398, 403, 408, 413, 414, 427, 437], "depicted": 313, "deplib": 281, "deploi": 394, "deploy": 394, "deployed": 331, "deploying": [382, 394], "deployment": 394, "deprec": [330, 415], "deprecat": [383, 393], "deprecated": [281, 287, 292, 296, 346, 388, 409, 413], "deprived": 383, "depth": [65, 159, 253, 289, 292, 308, 316, 323, 344, 357, 366, 381, 386, 397, 405, 421, 429, 439], "deref_bytes_nod": 357, "dereferencability": 337, "dereference": [281, 337, 357], "dereferenceability": 357, "dereferenceable_byt": 357, "dereferenceable_or_null": [281, 357], "dereferenced": [288, 381, 383], "dereferencing": [336, 357, 383], "dereferent": [288, 340, 357, 383, 393, 420], "deregisterehfram": 424, "deregisterehframesinprocess": 424, "deriv": [275, 289, 291, 299, 351, 357, 361, 382, 383, 393, 398, 401, 403, 404, 414], "derived": [275, 330, 339, 351, 354, 356, 357, 358, 381, 382, 393, 403, 405, 410, 421, 425, 435], "derivedtyp": [333, 383, 427, 428, 429, 430, 431, 432], "deriving": [401, 404, 414], "desc": [275, 323, 413, 414, 424], "descend": 332, "descending": 357, "descent": [425, 426, 430, 435, 436, 440], "descreas": 273, "describ": [271, 272, 273, 274, 275, 280, 281, 282, 288, 289, 291, 295, 296, 313, 323, 324, 327, 328, 330, 332, 333, 334, 336, 338, 339, 340, 341, 343, 350, 351, 352, 354, 356, 357, 358, 360, 361, 365, 366, 367, 371, 375, 379, 381, 383, 385, 388, 393, 398, 403, 405, 410, 411, 413, 414, 415, 417, 419, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 436, 437, 438, 439, 440, 442], "described": [26, 27, 30, 114, 115, 116, 122, 205, 206, 207, 214, 271, 272, 274, 275, 278, 281, 289, 291, 292, 296, 297, 299, 316, 323, 324, 326, 327, 328, 332, 336, 338, 343, 344, 350, 354, 356, 357, 360, 361, 362, 366, 368, 371, 374, 375, 376, 384, 390, 393, 394, 396, 398, 401, 410, 413, 414, 415, 417, 420, 422, 428, 429, 438, 439], "describing": [281, 291, 302, 305, 332, 339, 341, 357, 362, 371, 374, 383, 387, 393, 398, 401, 403, 405, 418, 425, 435], "descript": [7, 27, 30, 34, 65, 80, 85, 116, 122, 127, 128, 159, 174, 179, 207, 214, 219, 220, 224, 253, 270, 271, 272, 273, 274, 275, 277, 278, 281, 288, 291, 295, 323, 328, 331, 332, 339, 341, 343, 345, 351, 352, 356, 357, 358, 366, 367, 381, 382, 383, 391, 393, 396, 401, 405, 407, 413, 415, 417, 419, 432, 433, 444], "descriptor": [281, 313, 357, 371, 393, 396, 413, 433], "deserializ": 401, "deserv": [337, 357], "design": [291, 293, 326, 327, 330, 332, 339, 340, 343, 357, 383, 385, 393, 394, 396, 398, 399, 402, 403, 405, 411, 418, 419, 425, 434, 435, 442], "designat": 327, "designated": [289, 327, 345, 358, 393, 396, 414], "designed": [277, 278, 285, 289, 291, 292, 296, 302, 313, 318, 323, 328, 329, 330, 332, 335, 337, 339, 353, 355, 356, 357, 359, 362, 375, 381, 383, 384, 387, 388, 391, 393, 394, 396, 402, 405, 408, 413, 414, 431, 441], "designer": 403, "designing": [291, 296, 385, 414, 419], "desir": [291, 294, 357, 359, 368, 383, 394, 396, 398, 414, 434, 442], "desired": [275, 278, 285, 287, 292, 294, 296, 308, 323, 334, 337, 339, 354, 357, 359, 361, 381, 390, 393, 394, 396, 398, 409, 413, 414], "desktop": [380, 409], "despit": [278, 289, 323, 347, 357, 385, 393, 394, 398, 402, 403, 405, 414, 417], "dest": [357, 432], "dest1": 357, "dest2": 357, "destarglist": 357, "destin": [35, 129, 221, 271, 272, 273, 275, 283, 289, 299, 332, 334, 337, 357, 394, 409, 413, 431, 432, 433, 441], "destreg": 289, "destroy": [332, 335, 355, 357, 362, 413, 418], "destroyed": [289, 327, 343, 383], "destroying": 327, "destruct": [327, 355, 394, 396], "destructed": 383, "destructively": [396, 434, 442], "destructor": [291, 324, 327, 332, 335, 357, 383, 393, 414], "detail": [273, 277, 278, 282, 284, 287, 288, 289, 290, 299, 301, 308, 309, 316, 317, 323, 324, 327, 330, 331, 332, 335, 338, 339, 340, 341, 345, 351, 352, 356, 357, 358, 360, 366, 367, 368, 371, 375, 381, 383, 384, 386, 394, 398, 399, 401, 407, 409, 410, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 430, 431, 434, 435, 437, 440, 441, 442], "detailed": [272, 275, 285, 287, 289, 291, 296, 313, 323, 339, 341, 342, 347, 356, 357, 366, 371, 383, 390, 391, 394, 413, 419], "detailing": 324, "detect": [287, 304, 317, 324, 349, 357, 359, 366, 382, 383, 387, 391, 393, 394, 397, 409, 412, 417, 428, 438], "detect_leak": 359, "detected": [287, 292, 296, 306, 357, 359, 366, 383, 391], "detecthost": [420, 421], "detecting": [275, 386], "detector": 366, "determin": [275, 277, 281, 289, 299, 305, 313, 321, 327, 328, 332, 343, 350, 351, 352, 354, 357, 361, 366, 367, 368, 371, 381, 383, 384, 390, 396, 397, 398, 409, 410, 411, 413, 414, 417, 418, 426, 427, 429, 430, 436, 437, 439, 440], "determined": [275, 281, 287, 296, 297, 327, 328, 343, 350, 357, 367, 368, 383, 387, 390, 393, 394, 399, 408, 418], "determining": [275, 277, 289, 296, 357], "determinism": [287, 359, 391], "deterministic": [276, 277, 285, 289, 359, 383, 401], "determinstic": 291, "detrimental": 291, "dev": [278, 291, 297, 298, 326, 330, 333, 337, 339, 349, 382, 383, 385, 387, 393, 398, 403, 404, 414, 416, 419, 432, 434, 442], "devbuff": 367, "devbufferb": 367, "devbufferc": 367, "devcount": 367, "devel": 389, "develop": [287, 289, 290, 326, 332, 339, 340, 341, 348, 356, 360, 385, 388, 390, 393, 394, 405, 408, 415, 419], "developed": [281, 289, 330, 380, 394, 399, 416], "developer": [284, 287, 288, 291, 326, 330, 337, 345, 350, 352, 356, 380, 384, 385, 387, 393, 399, 415, 419], "developing": [323, 341, 342, 350, 398, 443], "development": [275, 287, 288, 325, 331, 337, 339, 341, 346, 356, 359, 360, 386, 388, 393, 421, 422, 423, 424, 431, 441, 443], "deviat": [289, 291, 334], "devic": [275, 279, 300, 307, 310, 312, 321, 346, 367], "device_enqueue_symbol": 275, "device_fn": 324, "device_only": 324, "devirtualiz": [357, 411], "devirtualized": 357, "devis": 384, "devmajor": 367, "devminor": 367, "devmtg": 385, "devoid": 289, "dexonsmith": 393, "dfa": [289, 322, 401], "dfapacketiz": 289, "dform_1": 289, "dfpreg": 413, "dfpregsclass": 413, "dfpregsregclass": 413, "dfpregsregisterclass": 413, "dgpu": 275, "dh": 405, "di": [275, 287, 308, 316, 393, 405, 422, 433], "diagnos": 412, "diagnosed": [306, 313], "diagnosing": [292, 313, 414], "diagnostic": [292, 295, 296, 306, 359, 383, 401, 405], "diagram": 375, "dialect": [357, 364], "dian": 343, "dibasictyp": 393, "dibuild": [388, 393, 433], "dicing": 383, "dicompileun": [393, 433], "dict": 359, "dictated": [291, 383, 392], "dictionary": [296, 357, 359, 401], "dictionary_fil": 359, "did": [277, 291, 327, 332, 338, 343, 351, 357, 366, 383, 414, 421, 428, 430, 431, 434, 438, 440, 441, 442], "didescriptor": 393, "didn": [289, 291, 324, 337, 338, 357, 366, 383, 393, 394, 414, 427, 431, 436, 437, 441], "die_offset_bas": 393, "diexpres": 357, "diexpress": 393, "diff": [274, 280, 291, 295, 308, 326, 330, 331, 339, 341, 357, 381, 382, 383, 385, 398, 407, 409, 413], "differ": [66, 160, 254, 271, 285, 313, 327, 343, 351, 357, 366, 371, 381, 396, 409, 431, 441], "different": [100, 111, 113, 272, 273, 274, 275, 276, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 297, 298, 301, 304, 306, 308, 313, 316, 319, 323, 325, 327, 328, 330, 331, 332, 333, 334, 335, 337, 339, 341, 342, 343, 347, 350, 351, 353, 354, 357, 359, 360, 361, 362, 366, 367, 368, 371, 381, 382, 383, 385, 389, 390, 391, 393, 394, 396, 399, 401, 403, 404, 405, 407, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421, 424, 428, 429, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442], "differential": 382, "differentiat": [334, 356], "differently": [315, 332, 357, 393, 417, 422, 427], "differing": [277, 290, 357], "difficult": [277, 278, 291, 323, 330, 332, 348, 357, 360, 363, 368, 383, 385, 386, 395, 433, 440], "diffing": 381, "difil": [393, 433], "diflagartificial": 357, "diflagfwddecl": 357, "diflagprototyped": [357, 393], "diflagvector": 357, "difwddecl": 357, "dig": [314, 323, 357, 383, 403, 425, 435], "digit": [357, 383], "diglobalvari": 393, "digress": [430, 440], "dijkstr": 386, "dil": [334, 405], "dilexicalblock": 393, "diloc": [292, 393], "dilocalvari": [393, 433], "dimens": [6, 37, 84, 131, 178, 223, 275, 357], "dimensional": [6, 84, 178, 340, 367, 430, 440], "dindex": 413, "dinkumwar": 383, "dinod": 433, "diplom": 387, "dir": [276, 287, 296, 304, 338, 341, 348, 349, 357, 359, 384, 389, 393, 407], "dir1": 359, "dir2": 359, "dir_to_mount": 279, "direct": [286, 287, 288, 291, 293, 296, 309, 313, 323, 327, 332, 337, 338, 348, 366, 383, 385, 388, 389, 393, 394, 398, 399, 403, 404, 405, 410, 413, 414, 418, 431, 441], "directed": [289, 290, 322, 358, 383, 403, 410, 413], "directing": 394, "directly": [21, 108, 199, 275, 278, 281, 287, 289, 291, 295, 299, 301, 303, 313, 323, 330, 332, 337, 338, 339, 340, 341, 342, 343, 344, 345, 355, 357, 365, 367, 368, 371, 381, 382, 383, 384, 385, 387, 388, 390, 391, 393, 394, 396, 398, 399, 401, 405, 407, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 438, 439, 440, 441], "director": [287, 296, 304, 330, 341, 356, 359, 362, 376, 384, 385, 399, 405, 407, 408, 409], "directory": [275, 276, 286, 287, 288, 289, 291, 296, 303, 304, 322, 324, 330, 337, 342, 344, 345, 347, 348, 349, 350, 356, 357, 359, 371, 376, 379, 382, 383, 384, 385, 388, 389, 393, 399, 405, 406, 407, 408, 409, 413, 414, 415, 419, 433], "dirty": [291, 371], "dis": [295, 300, 301, 314, 341, 342, 409, 431, 441], "disabl": [117, 208, 275, 277, 279, 280, 285, 287, 291, 292, 293, 296, 297, 298, 304, 315, 321, 323, 344, 349, 352, 359, 365, 368, 380, 383, 388, 389, 391, 393, 398, 407, 409, 410, 415, 429, 433, 439], "disable_assert": 380, "disable_nonforced": 410, "disabled": [273, 274, 275, 279, 291, 313, 339, 341, 350, 357, 359, 380, 383, 389, 407, 409, 410, 412, 429, 439], "disableencoding": 405, "disablelazycompil": 383, "disabling": [285, 357, 389, 415], "disadvantag": [323, 353, 360, 383, 385], "disagre": [290, 343, 357], "disallow": [323, 357, 396, 398], "disallowed": [340, 356], "disambiguat": [277, 337, 365], "disambiguated": 365, "disappear": [335, 341], "disappearing": 346, "disassembl": [286, 295, 301, 308, 315, 322, 341, 342, 356, 357, 359, 364], "disassembled": [286, 364], "disassembler": [289, 338, 364], "disassembleremitt": 401, "disassembling": 289, "disassembly": [286, 315, 322, 357, 383, 419], "discard": [334, 387, 398], "discarded": [289, 292, 323, 327, 334, 341, 357], "discarding": [357, 383], "discharge": 337, "discharged": 337, "disclaim": [288, 385], "disclosing": 390, "disclosur": [330, 390], "discontiguous": 375, "discop": 433, "discourag": [383, 390, 399], "discouraged": [291, 323, 383], "discov": [275, 289, 296, 339, 359, 393], "discover": [327, 331, 359], "discovered": [296, 350, 359, 429, 431, 439, 441], "discovering": [296, 394, 399], "discovery": 275, "discrimin": 417, "discriminat": [351, 357, 388], "discriminated": [289, 417], "discriminator": [291, 351, 357, 401], "discriminatory": 290, "discuss": [291, 323, 326, 330, 341, 342, 351, 357, 375, 383, 385, 390, 393, 394, 398, 405, 414, 419, 421, 422, 424, 426, 436], "discussed": [288, 290, 313, 323, 328, 330, 338, 368, 371, 382, 383, 388, 390, 394, 396, 413, 414, 415], "discussing": 394, "disjoint": [275, 277, 357, 365], "disjointed": 412, "disk": [275, 291, 296, 341, 356, 357, 359, 360, 375, 385, 393, 399, 415, 420], "dislik": 330, "disp32": 289, "dispatch": [332, 357, 383, 394, 396, 426, 436], "dispatch1": 357, "dispatch2": [332, 357], "dispatched": [275, 313, 332, 357, 383], "dispatching": 275, "dispel": 340, "displac": [289, 357], "display": [288, 289, 290, 291, 294, 296, 304, 308, 314, 315, 316, 317, 318, 323, 328, 330, 345, 351, 364, 381, 401, 407, 413, 425, 435], "displayed": [301, 304, 313, 316, 317], "displaying": [289, 304, 313, 316, 408], "disponibl": [0, 1, 2], "disposit": 330, "disrupt": [363, 395], "disrupting": 394, "dissect": 367, "dissected": 328, "dist": 383, "distanc": [357, 383, 391, 418, 423, 443], "distilled": 409, "distinct": [277, 281, 289, 292, 305, 308, 332, 340, 343, 356, 357, 381, 383, 385, 387, 391, 393, 409, 410, 413, 427, 437], "distinguish": [280, 328, 343, 357, 383, 398, 399, 434, 442], "distinguished": [327, 343, 357, 383], "distinguishing": 281, "distracting": 330, "distribu": [276, 282, 288, 293, 296, 313, 326, 329, 331, 335, 341, 348, 349, 357, 367, 385, 394, 405, 414, 415, 419], "distribut": [330, 335, 385, 410, 414], "distributed": [282, 291, 313, 330, 331, 341, 342, 357, 407, 410, 415, 420, 421, 422, 423, 424], "distros": [347, 349], "disubprogram": [388, 393, 433], "disubroutinetyp": [393, 433], "dityp": 433, "div": [273, 289, 383, 425, 435], "diverg": [340, 430, 440], "divergent": [357, 368], "divers": 347, "divid": [275, 289, 292, 296, 324, 333, 357, 381, 399], "divided": [282, 289, 292, 357, 379, 407], "dividend": [289, 324, 357], "dividing": [301, 313], "diving": 351, "divis": [274, 275, 289, 357, 430, 440], "divisionbyzero": 357, "divisor": [324, 357], "django": [290, 390], "dl": [289, 386, 405, 420, 421, 422, 423, 424], "dlibfuzzer_en": 359, "dlibfuzzer_enable_test": 359, "dll": [281, 332, 371, 388, 409], "dllc": 409, "dllexport": [281, 357, 428, 429, 430, 431, 432, 433], "dllexported": 357, "dllimport": [281, 357, 388], "dllstorageclass": [281, 357], "dllvm_binutils_incd": 344, "dllvm_build_instrumented": 347, "dllvm_build_runtim": [338, 341, 347], "dllvm_build_static": 279, "dllvm_config_path": 348, "dllvm_default_target_tripl": 349, "dllvm_dir": 287, "dllvm_enable_assert": [326, 341, 346], "dllvm_enable_backtrac": 341, "dllvm_enable_doxygen": 287, "dllvm_enable_doxygen_qt_help": 287, "dllvm_enable_pic": 349, "dllvm_enable_project": [341, 385], "dllvm_enable_sphinx": 341, "dllvm_experimental_targets_to_build": 413, "dllvm_external_bar_source_d": 287, "dllvm_external_foo_source_d": 287, "dllvm_external_project": 287, "dllvm_include_exampl": 341, "dllvm_include_test": 341, "dllvm_libdir_suffix": 287, "dllvm_profdata_fil": 347, "dllvm_tablegen": [347, 349], "dllvm_target_arch": 349, "dllvm_targets_to_build": [287, 330, 331, 346, 349], "dllvm_use_link": 287, "dllvm_use_sanitiz": 338, "dllvm_use_sanitize_coverag": 338, "dloc": 292, "dlsym": [428, 438], "dmask": [0, 1, 2, 15, 16, 17, 25, 97, 98, 99, 100, 112, 113, 188, 189, 190, 191, 203, 204], "dmb": 278, "dmlc": 386, "dmpqrtx": 299, "dnam": 323, "do": [100, 111, 113, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 299, 300, 304, 306, 309, 313, 314, 315, 317, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 355, 356, 357, 358, 360, 361, 363, 364, 365, 367, 368, 371, 374, 375, 376, 382, 383, 384, 385, 386, 389, 390, 392, 393, 394, 395, 396, 398, 399, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "do_on": 327, "do_safepoint": 398, "do_something_with_t": 336, "do_two": 327, "doc": [287, 333, 341, 348, 349, 350, 357, 359, 363, 385, 388, 394, 395, 407, 418, 419, 420, 432], "dockerfil": 419, "dockerized": 331, "doclist": 418, "docu": [0, 1, 2, 272, 273, 274, 275, 277, 278, 280, 281, 282, 287, 288, 289, 290, 291, 295, 309, 323, 324, 328, 330, 332, 333, 334, 339, 340, 341, 342, 343, 345, 346, 348, 349, 350, 351, 352, 354, 356, 357, 358, 360, 361, 362, 363, 365, 367, 375, 380, 381, 383, 385, 388, 389, 390, 393, 395, 396, 398, 399, 401, 403, 404, 405, 409, 411, 413, 415, 416, 417, 419, 428, 438], "document": [273, 278, 287, 288, 325, 326, 330, 331, 333, 338, 339, 341, 342, 345, 351, 356, 357, 359, 363, 367, 383, 385, 386, 388, 393, 395, 398, 400, 401, 403, 404, 406, 407, 409, 414, 427, 428, 433, 438], "documented": [275, 284, 291, 330, 339, 341, 342, 357, 358, 385, 393, 396, 398], "documenting": [291, 326, 401], "documentlist": 418, "documentlisttrait": 418, "doesn": [277, 278, 280, 283, 284, 285, 288, 289, 290, 291, 292, 296, 299, 313, 323, 324, 328, 330, 331, 332, 335, 337, 339, 340, 341, 343, 344, 350, 351, 352, 357, 362, 365, 383, 385, 388, 393, 394, 396, 398, 399, 402, 403, 404, 409, 414, 416, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "dofinaliz": 413, "dog": 323, "doing": [276, 277, 284, 287, 289, 291, 298, 299, 312, 321, 323, 326, 330, 333, 336, 337, 339, 341, 343, 347, 348, 351, 357, 360, 365, 383, 390, 393, 394, 398, 399, 410, 414, 415, 416, 421, 422, 425, 427, 428, 430, 433, 434, 435, 437, 442], "doinitializ": [359, 413, 421, 422, 423, 424, 428, 429, 430, 431, 433], "dollar": 346, "domain": [289, 339, 343, 357, 394, 402, 405, 413, 434, 442], "domin": [365, 431, 441], "dominat": [339, 357, 365], "dominated": [357, 381, 407], "dominating": [291, 365], "dominator": [324, 383, 414], "dominatorset": 414, "dominatortre": 414, "dominatortreebas": 383, "don": [0, 1, 2, 275, 277, 278, 279, 284, 285, 287, 288, 289, 290, 292, 294, 296, 298, 299, 309, 313, 314, 316, 321, 323, 324, 326, 328, 329, 330, 331, 332, 333, 337, 339, 341, 343, 346, 347, 350, 351, 352, 354, 357, 359, 360, 361, 362, 363, 365, 366, 367, 380, 381, 382, 383, 385, 389, 390, 392, 393, 394, 395, 397, 398, 403, 404, 407, 408, 409, 411, 412, 414, 415, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "dooneiter": 285, "door": 351, "doorbel": 275, "dootherthing": 291, "dopartialredundancyelimin": 323, "dor": [387, 412], "dosomething": [291, 394], "dosomethinginterestingwithmyap": 359, "dot": [313, 350, 382, 383, 393, 415, 416], "doubl": [274, 275, 281, 289, 292, 323, 324, 325, 342, 343, 351, 357, 362, 366, 383, 388, 391, 401, 403, 413, 418, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "double_typ": [437, 438, 439, 440, 441], "doublescalarty": 357, "doubletyp": 383, "doubleword": 357, "doubling": [343, 381], "doubly": [288, 383, 392], "doubt": [351, 363, 395], "dovetail": [431, 441], "down": [277, 280, 283, 285, 289, 290, 293, 297, 298, 323, 328, 330, 332, 340, 341, 343, 351, 352, 357, 359, 365, 366, 368, 380, 381, 382, 383, 385, 387, 393, 394, 405, 413, 414, 415, 419, 420, 422, 425, 426, 429, 430, 432, 433, 434, 436, 439, 440, 442], "downcast": 351, "download": [287, 331, 341, 342, 344, 345, 348, 349, 350, 359, 382, 383, 389, 409], "download_link": 386, "download_prerequisit": 341, "downloaded": [341, 388, 413], "downsid": [330, 359, 383, 385], "downstream": [282, 306], "downward": 357, "doxgyen": 287, "doxing": 290, "doxygen": [287, 338, 341, 342, 351, 383, 419], "dozen": [337, 346, 383], "dpp": 272, "dpp_ctrl": [1, 2], "dpython_execut": 346, "dr": 334, "draft": [278, 290, 357, 390, 393], "dragging": 382, "dragonegg": [289, 330, 419], "dramatic": 394, "dramatically": [291, 297, 323, 341, 357, 383, 394, 428, 438], "drastically": 399, "draw": [275, 385], "drawback": [288, 323, 330, 383, 423], "driv": [275, 304, 324, 325, 344, 346, 348, 349, 356, 359, 360, 367, 368, 384, 387, 409, 425, 428, 429, 430, 431, 432, 433, 435, 438, 439, 440, 441], "driven": [289, 292, 323, 327, 381, 388, 409, 413, 428, 431, 434, 435, 438, 441, 442], "driving": [387, 398], "drop": [291, 330, 357, 362, 382], "dropdown": 382, "dropped": [330, 357, 362, 383, 410], "dropping": [330, 357], "drowned": 408, "dry": 347, "ds": 275, "ds_add_f32": [1, 2], "ds_add_rtn_f32": [1, 2], "ds_add_rtn_u32": [0, 1, 2], "ds_add_rtn_u64": [0, 1, 2], "ds_add_src2_f32": [1, 2], "ds_add_src2_u32": [0, 1, 2], "ds_add_src2_u64": [0, 1, 2], "ds_add_u32": [0, 1, 2, 275], "ds_add_u64": [0, 1, 2], "ds_and_b32": [0, 1, 2], "ds_and_b64": [0, 1, 2], "ds_and_rtn_b32": [0, 1, 2], "ds_and_rtn_b64": [0, 1, 2], "ds_and_src2_b32": [0, 1, 2], "ds_and_src2_b64": [0, 1, 2], "ds_append": [0, 1, 2], "ds_atomic": 275, "ds_bpermute_b32": [1, 2], "ds_cmpst_b32": [0, 1, 2], "ds_cmpst_b64": [0, 1, 2], "ds_cmpst_f32": [0, 1, 2, 275], "ds_cmpst_f64": [0, 1, 2], "ds_cmpst_rtn_b32": [0, 1, 2], "ds_cmpst_rtn_b64": [0, 1, 2], "ds_cmpst_rtn_f32": [0, 1, 2], "ds_cmpst_rtn_f64": [0, 1, 2], "ds_condxchg32_rtn_b64": [0, 1, 2], "ds_consum": [0, 1, 2], "ds_dec_rtn_u32": [0, 1, 2], "ds_dec_rtn_u64": [0, 1, 2], "ds_dec_src2_u32": [0, 1, 2], "ds_dec_src2_u64": [0, 1, 2], "ds_dec_u32": [0, 1, 2], "ds_dec_u64": [0, 1, 2], "ds_gws_barri": [0, 1, 2], "ds_gws_in": [0, 1, 2], "ds_gws_sema_br": [0, 1, 2], "ds_gws_sema_p": [0, 1, 2], "ds_gws_sema_release_all": [0, 1, 2], "ds_gws_sema_v": [0, 1, 2], "ds_inc_rtn_u32": [0, 1, 2], "ds_inc_rtn_u64": [0, 1, 2], "ds_inc_src2_u32": [0, 1, 2], "ds_inc_src2_u64": [0, 1, 2], "ds_inc_u32": [0, 1, 2], "ds_inc_u64": [0, 1, 2], "ds_load": 275, "ds_max_f32": [0, 1, 2], "ds_max_f64": [0, 1, 2], "ds_max_i32": [0, 1, 2], "ds_max_i64": [0, 1, 2], "ds_max_rtn_f32": [0, 1, 2], "ds_max_rtn_f64": [0, 1, 2], "ds_max_rtn_i32": [0, 1, 2], "ds_max_rtn_i64": [0, 1, 2], "ds_max_rtn_u32": [0, 1, 2], "ds_max_rtn_u64": [0, 1, 2], "ds_max_src2_f32": [0, 1, 2], "ds_max_src2_f64": [0, 1, 2], "ds_max_src2_i32": [0, 1, 2], "ds_max_src2_i64": [0, 1, 2], "ds_max_src2_u32": [0, 1, 2], "ds_max_src2_u64": [0, 1, 2], "ds_max_u32": [0, 1, 2], "ds_max_u64": [0, 1, 2], "ds_min_f32": [0, 1, 2], "ds_min_f64": [0, 1, 2], "ds_min_i32": [0, 1, 2], "ds_min_i64": [0, 1, 2], "ds_min_rtn_f32": [0, 1, 2], "ds_min_rtn_f64": [0, 1, 2, 275], "ds_min_rtn_i32": [0, 1, 2], "ds_min_rtn_i64": [0, 1, 2], "ds_min_rtn_u32": [0, 1, 2], "ds_min_rtn_u64": [0, 1, 2], "ds_min_src2_f32": [0, 1, 2], "ds_min_src2_f64": [0, 1, 2], "ds_min_src2_i32": [0, 1, 2], "ds_min_src2_i64": [0, 1, 2], "ds_min_src2_u32": [0, 1, 2], "ds_min_src2_u64": [0, 1, 2], "ds_min_u32": [0, 1, 2], "ds_min_u64": [0, 1, 2], "ds_mskor_b32": [0, 1, 2], "ds_mskor_b64": [0, 1, 2], "ds_mskor_rtn_b32": [0, 1, 2], "ds_mskor_rtn_b64": [0, 1, 2], "ds_nop": [0, 1, 2], "ds_or_b32": [0, 1, 2], "ds_or_b64": [0, 1, 2], "ds_or_rtn_b32": [0, 1, 2], "ds_or_rtn_b64": [0, 1, 2], "ds_or_src2_b32": [0, 1, 2], "ds_or_src2_b64": [0, 1, 2], "ds_ordered_count": [0, 1, 2], "ds_permute_b32": [1, 2], "ds_read2_b32": [0, 1, 2], "ds_read2_b64": [0, 1, 2], "ds_read2st64_b32": [0, 1, 2], "ds_read2st64_b64": [0, 1, 2], "ds_read_b128": [0, 1, 2], "ds_read_b32": [0, 1, 2], "ds_read_b64": [0, 1, 2], "ds_read_b96": [0, 1, 2], "ds_read_i16": [0, 1, 2], "ds_read_i8": [0, 1, 2], "ds_read_i8_d16": 2, "ds_read_i8_d16_h": 2, "ds_read_u16": [0, 1, 2], "ds_read_u16_d16": 2, "ds_read_u16_d16_h": 2, "ds_read_u8": [0, 1, 2], "ds_read_u8_d16": 2, "ds_read_u8_d16_h": 2, "ds_rsub_rtn_u32": [0, 1, 2], "ds_rsub_rtn_u64": [0, 1, 2], "ds_rsub_src2_u32": [0, 1, 2], "ds_rsub_src2_u64": [0, 1, 2], "ds_rsub_u32": [0, 1, 2], "ds_rsub_u64": [0, 1, 2], "ds_stor": 275, "ds_sub_rtn_u32": [0, 1, 2], "ds_sub_rtn_u64": [0, 1, 2], "ds_sub_src2_u32": [0, 1, 2], "ds_sub_src2_u64": [0, 1, 2], "ds_sub_u32": [0, 1, 2], "ds_sub_u64": [0, 1, 2], "ds_swizzle_b32": [0, 1, 2, 273], "ds_wrap_rtn_b32": [0, 1, 2], "ds_write2_b32": [0, 1, 2], "ds_write2_b64": [0, 1, 2], "ds_write2st64_b32": [0, 1, 2], "ds_write2st64_b64": [0, 1, 2], "ds_write_b128": [0, 1, 2], "ds_write_b16": [0, 1, 2], "ds_write_b16_d16_h": 2, "ds_write_b32": [0, 1, 2], "ds_write_b64": [0, 1, 2], "ds_write_b8": [0, 1, 2], "ds_write_b8_d16_h": 2, "ds_write_b96": [0, 1, 2], "ds_write_src2_b32": [0, 1, 2], "ds_write_src2_b64": [0, 1, 2, 275], "ds_wrxchg2_rtn_b32": [0, 1, 2], "ds_wrxchg2_rtn_b64": [0, 1, 2], "ds_wrxchg2st64_rtn_b32": [0, 1, 2], "ds_wrxchg2st64_rtn_b64": [0, 1, 2], "ds_wrxchg_rtn_b32": [0, 1, 2], "ds_wrxchg_rtn_b64": [0, 1, 2], "ds_xor_b32": [0, 1, 2], "ds_xor_b64": [0, 1, 2], "ds_xor_rtn_b32": [0, 1, 2], "ds_xor_rtn_b64": [0, 1, 2], "ds_xor_src2_b32": [0, 1, 2], "ds_xor_src2_b64": [0, 1, 2], "dsa": 358, "dsc": 416, "dse": [278, 358], "dsl": [402, 405], "dso": 286, "dso_local": [281, 357], "dso_path": 297, "dso_preempt": [281, 357], "dsolocal": 357, "dsos": 278, "dst": [0, 1, 2, 117, 208, 271, 289, 354, 403, 405, 413], "dst0": [0, 1, 2], "dst1": [0, 1, 2], "dst_sel": [1, 2, 275], "dst_unused": [1, 2, 275], "dstindex": 413, "dsym": [294, 308, 315, 320], "dsymutil": [295, 308], "dt": 414, "dtest_suite_profile_generat": 407, "dtest_suite_profile_us": 407, "dtest_suite_run_typ": 407, "dtest_suite_subdir": 407, "dtor": [335, 357], "dual": 330, "dubious": 299, "duck": 383, "due": [274, 275, 277, 283, 286, 287, 289, 292, 324, 327, 329, 332, 336, 337, 339, 341, 346, 348, 352, 357, 360, 366, 376, 383, 385, 389, 394, 398, 404, 410, 411, 417, 422, 427], "dumb": [434, 442], "dummy": [289, 335, 362, 381, 409, 413], "dummy_main": 338, "dummytargetmachin": 413, "dump": [281, 285, 289, 292, 294, 295, 301, 317, 322, 371, 383, 393, 401, 405, 414, 418, 427, 428, 429, 433, 437, 438, 439], "dump_modul": [437, 438, 439, 440, 441], "dump_valu": [437, 438, 439, 440, 441], "dumpabl": 414, "dumpattr": 401, "dumped": [308, 316, 317], "dumping": [308, 316, 393], "dumpmymapdoc": 418, "duo": 275, "duplicat": [277, 284, 289, 291, 299, 323, 334, 357, 358, 366, 383, 393, 398], "duplicated": [327, 337, 357, 393, 426, 436], "duplicating": [327, 337, 381, 398], "dupliqu": [288, 330, 360, 379, 393, 401, 405], "durat": [277, 289, 414, 415, 417, 420], "during": [275, 276, 282, 283, 287, 288, 289, 309, 313, 317, 323, 324, 326, 327, 330, 331, 332, 333, 336, 337, 341, 343, 347, 350, 354, 357, 359, 360, 366, 368, 371, 383, 385, 386, 387, 389, 393, 394, 396, 398, 408, 409, 413, 418, 419, 427, 437], "dvariabl": 287, "dw_apple_property_assign": 393, "dw_apple_property_atomic": 393, "dw_apple_property_class": 393, "dw_apple_property_copy": 393, "dw_apple_property_get": 393, "dw_apple_property_nonatomic": 393, "dw_apple_property_null_reset": 393, "dw_apple_property_nullability": 393, "dw_apple_property_readonly": 393, "dw_apple_property_readwrit": 393, "dw_apple_property_retain": 393, "dw_apple_property_set": 393, "dw_apple_property_strong": 393, "dw_apple_property_unsafe_unretained": 393, "dw_apple_property_weak": 393, "dw_at_alignment": 393, "dw_at_apple_property": 393, "dw_at_apple_property_attribut": 393, "dw_at_apple_property_get": 393, "dw_at_apple_property_set": 393, "dw_at_artificial": 393, "dw_at_declar": 393, "dw_at_entry_pc": 393, "dw_at_high_pc": 393, "dw_at_loc": 292, "dw_at_low_pc": 393, "dw_at_mips_linkage_nam": 393, "dw_at_nam": [292, 308, 393], "dw_at_rang": 393, "dw_ate_address": 357, "dw_ate_boolean": 357, "dw_ate_float": [357, 433], "dw_ate_signed": [357, 393], "dw_ate_signed_char": 357, "dw_ate_unsigned": [357, 393], "dw_ate_unsigned_char": 357, "dw_form_": 393, "dw_form_data1": 393, "dw_form_data2": 393, "dw_form_data4": 393, "dw_form_line_strp": 275, "dw_form_ref1": 393, "dw_form_ref2": 393, "dw_form_ref4": 393, "dw_form_ref8": 393, "dw_form_ref_udat": 393, "dw_form_sec_offset": 292, "dw_form_strp": [292, 393], "dw_form_xxx": 393, "dw_lang_c": [393, 433], "dw_lang_c99": [357, 393], "dw_lnct_llvm_sourc": 275, "dw_macinfo_defin": 357, "dw_macinfo_start_fil": 357, "dw_macinfo_undef": 357, "dw_op_addr": 393, "dw_op_bit_piec": 357, "dw_op_constu": 357, "dw_op_deref": 357, "dw_op_llvm_fragment": 357, "dw_op_minus": 357, "dw_op_plus": [357, 393], "dw_op_plus_uconst": 357, "dw_op_stack_valu": 357, "dw_op_swap": 357, "dw_op_xderef": 357, "dw_tag": 393, "dw_tag_apple_property": 393, "dw_tag_array_typ": [357, 393], "dw_tag_atomic_typ": [357, 393], "dw_tag_base_typ": [357, 393], "dw_tag_class_typ": [357, 393], "dw_tag_const_typ": [357, 393], "dw_tag_enumeration_typ": [357, 393], "dw_tag_file_typ": 393, "dw_tag_friend": 357, "dw_tag_gnu_template_param_pack": 357, "dw_tag_gnu_template_template_param": 357, "dw_tag_imported_modul": 357, "dw_tag_inherit": 357, "dw_tag_inlined_subroutin": 393, "dw_tag_interface_typ": 393, "dw_tag_label": 393, "dw_tag_memb": [357, 393], "dw_tag_namelist": 393, "dw_tag_namespac": 393, "dw_tag_packed_typ": 393, "dw_tag_pointer_typ": [357, 393], "dw_tag_ptr_to_member_typ": [357, 393], "dw_tag_reference_typ": [357, 393], "dw_tag_restrict_typ": [357, 393], "dw_tag_set_typ": 393, "dw_tag_shared_typ": 393, "dw_tag_string_typ": 393, "dw_tag_structure_typ": [357, 393], "dw_tag_subprogram": 393, "dw_tag_subrange_typ": 393, "dw_tag_subroutine_typ": 393, "dw_tag_template_value_paramet": 357, "dw_tag_typedef": [357, 393], "dw_tag_union_typ": [357, 393], "dw_tag_unspecified_typ": [357, 393], "dw_tag_vari": 393, "dw_tag_volatile_typ": [357, 393], "dw_tag_xxx": 393, "dw_virtuality_pure_virtual": 357, "dwarf": [289, 295, 328, 329, 332, 339, 357, 358, 360, 383, 396, 413, 442], "dwarf2": 433, "dwarfdebug": 393, "dwarfdump": [292, 294, 295, 393], "dwarfencoding": 332, "dwarfnumber": 413, "dwarfregnum": 413, "dwel": 427, "dwoid": 357, "dword": [3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 123, 124, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275], "dx": 405, "dx10": 275, "dx10_clamp": 275, "dyld": 361, "dylib": [380, 409, 420], "dyn": [275, 318, 327], "dyn_cast": [291, 351, 401, 413, 419], "dyn_cast_or_null": 383, "dyn_switch": 291, "dynamic": [275, 279, 293, 297, 298, 313, 314, 318, 321, 327, 334, 337, 339, 340, 351, 359, 361, 381, 383, 384, 388, 391, 393, 394, 398, 410, 418, 428, 430], "dynamic_cast": [291, 351, 383, 431, 432, 433], "dynamic_shared_point": 275, "dynamically": [275, 281, 285, 297, 313, 314, 327, 329, 335, 351, 357, 371, 383, 392, 394, 396, 403, 415, 430, 438, 440], "dynamiclibrary": [422, 423, 424], "dynamiclibrarysearchgenerator": [420, 421], "dynamicsharedpoint": 275, "dynstr": 275, "dynsym": 275, "d\u00e9tail": 419, "e": [274, 275, 277, 278, 279, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 297, 303, 304, 309, 313, 314, 316, 320, 323, 324, 328, 330, 331, 332, 334, 336, 337, 339, 340, 341, 342, 343, 345, 346, 347, 350, 351, 352, 353, 356, 357, 359, 362, 365, 366, 367, 371, 375, 379, 380, 381, 382, 383, 385, 387, 388, 390, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 407, 408, 409, 410, 411, 413, 414, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "e1": 275, "e2": 275, "e_entry": 275, "e_ident": 275, "e_machin": 275, "e_typ": 275, "ea_r": 289, "eabi": [297, 348], "each": [15, 16, 17, 24, 25, 30, 97, 98, 99, 100, 111, 112, 113, 122, 188, 189, 190, 191, 202, 203, 204, 214, 273, 275, 276, 277, 278, 280, 281, 282, 285, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 303, 304, 308, 312, 313, 314, 315, 316, 317, 318, 321, 323, 324, 328, 330, 332, 333, 335, 337, 338, 339, 340, 341, 343, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 371, 374, 375, 379, 380, 383, 384, 385, 387, 388, 389, 390, 393, 394, 396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "eag": [383, 421], "eagerly": 421, "eao": 383, "earli": [275, 278, 281, 291, 327, 328, 337, 344, 356, 357, 375, 388, 394, 403, 413, 420, 427, 428], "early": [324, 327, 343, 348, 357, 359, 362, 367, 368, 371, 394, 413, 414, 431, 441], "earlyclobb": 362, "earlycs": 337, "earn": 385, "eas": [346, 398], "easi": [275, 277, 278, 284, 289, 290, 291, 292, 303, 326, 327, 329, 330, 333, 335, 339, 341, 349, 352, 356, 357, 365, 367, 381, 382, 383, 385, 389, 394, 401, 405, 409, 414, 426, 427, 431, 433, 436, 437, 441], "easiest": [278, 343, 348, 350, 363, 395, 413, 414, 415, 428, 434, 442], "easily": [284, 289, 291, 302, 323, 337, 339, 352, 356, 365, 381, 383, 385, 393, 394, 396, 398, 399, 401, 409, 414, 418, 420, 432], "easy": [281, 285, 287, 289, 291, 296, 330, 339, 341, 344, 349, 351, 356, 357, 359, 363, 366, 383, 385, 389, 393, 394, 395, 401, 408, 409, 414, 418, 421, 422, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442], "eat": [425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "eating": 323, "eatomtypecuoffset": 393, "eatomtypedieoffset": 393, "eatomtypedietag": 393, "eatomtypenameflag": 393, "eatomtypenull": 393, "eatomtypetag": 393, "eatomtypetypeflag": 393, "eax": [289, 292, 334, 357, 362, 394, 403, 405, 413], "ebenders_test": 329, "ebnf": 417, "ebp": [289, 332, 405], "ebx": [289, 334, 405], "ec": [316, 383, 432], "ecc": 275, "echo": [279, 296, 309, 341, 363, 385, 395], "echoed": 296, "eckel": 383, "ecma": 371, "economic": 290, "ecosystem": [356, 379, 383], "ecsubstreamsiz": 371, "ecx": [289, 334, 403, 405], "ed": [278, 284, 324, 383, 394, 419], "edge": [282, 285, 289, 292, 324, 332, 334, 339, 357, 359, 387, 394, 414, 415, 416, 419], "edi": [289, 292, 362, 394, 405], "edit": [275, 316], "edited": 383, "editing": [287, 299, 383], "editor": [291, 330, 341, 363, 395], "edu": [279, 386, 394], "educ": 275, "educational": 290, "edx": [289, 357, 394, 403, 405], "ee": 274, "eee": 313, "ef_amdgpu_mach_amdgcn_gfx600": 275, "ef_amdgpu_mach_amdgcn_gfx601": 275, "ef_amdgpu_mach_amdgcn_gfx700": 275, "ef_amdgpu_mach_amdgcn_gfx701": 275, "ef_amdgpu_mach_amdgcn_gfx702": 275, "ef_amdgpu_mach_amdgcn_gfx703": 275, "ef_amdgpu_mach_amdgcn_gfx704": 275, "ef_amdgpu_mach_amdgcn_gfx801": 275, "ef_amdgpu_mach_amdgcn_gfx802": 275, "ef_amdgpu_mach_amdgcn_gfx803": 275, "ef_amdgpu_mach_amdgcn_gfx810": 275, "ef_amdgpu_mach_amdgcn_gfx900": 275, "ef_amdgpu_mach_amdgcn_gfx902": 275, "ef_amdgpu_mach_amdgcn_gfx904": 275, "ef_amdgpu_mach_amdgcn_gfx906": 275, "ef_amdgpu_mach_amdgcn_gfx909": 275, "ef_amdgpu_mach_non": 275, "ef_amdgpu_mach_r600_bart": 275, "ef_amdgpu_mach_r600_caicos": 275, "ef_amdgpu_mach_r600_cayman": 275, "ef_amdgpu_mach_r600_cedar": 275, "ef_amdgpu_mach_r600_cypress": 275, "ef_amdgpu_mach_r600_junip": 275, "ef_amdgpu_mach_r600_r600": 275, "ef_amdgpu_mach_r600_r630": 275, "ef_amdgpu_mach_r600_redwood": 275, "ef_amdgpu_mach_r600_rs880": 275, "ef_amdgpu_mach_r600_rv670": 275, "ef_amdgpu_mach_r600_rv710": 275, "ef_amdgpu_mach_r600_rv730": 275, "ef_amdgpu_mach_r600_rv770": 275, "ef_amdgpu_mach_r600_sumo": 275, "ef_amdgpu_mach_r600_turk": 275, "ef_amdgpu_mach_xxx": 275, "ef_amdgpu_sram_ecc": 275, "ef_amdgpu_xnack": 275, "effect": [273, 277, 287, 289, 291, 292, 297, 313, 323, 324, 339, 341, 343, 346, 357, 381, 383, 385, 393, 394, 398, 409, 410, 413, 414, 415, 422, 429, 430, 439, 440], "effecting": 289, "effectively": [277, 281, 289, 337, 340, 357, 364, 381, 383, 385, 387, 393, 399, 404, 410, 414, 419], "effectiveness": [337, 391, 414], "efficiency": [383, 388, 409], "efficient": [274, 275, 277, 281, 289, 291, 330, 335, 339, 341, 343, 351, 355, 357, 359, 381, 383, 388, 391, 393, 394, 398, 399, 401, 403, 411, 414, 419, 426, 428, 436, 438], "efficiently": [277, 281, 289, 357, 364, 383, 387, 393, 394, 399, 411, 414], "effort": [291, 330, 333, 335, 337, 343, 357, 361, 381, 393, 394, 396, 399, 415, 427, 437], "eflag": [362, 403, 405], "eg": 391, "egregious": [290, 330], "egrep": 341, "eh": [287, 298, 308, 327, 357, 361, 413], "eh_fram": 332, "eh_label": 362, "eh_return": 332, "ehashfunctiondjb": 393, "ehcleanup": 327, "ehobj": 332, "ehptr": 332, "ehselector": 327, "ei_abivers": 275, "ei_class": 275, "ei_dat": 275, "ei_osab": 275, "eieio": 357, "eight": [289, 299, 357], "eip": 405, "eiplog": 357, "eith": [80, 100, 111, 113, 174, 191, 202, 204, 225, 257, 270, 273, 274, 275, 277, 278, 280, 281, 285, 287, 289, 291, 292, 296, 297, 299, 303, 304, 309, 313, 320, 321, 323, 326, 330, 332, 333, 334, 337, 339, 340, 341, 344, 352, 357, 358, 359, 361, 362, 365, 366, 367, 368, 371, 381, 383, 385, 390, 394, 396, 398, 403, 405, 407, 408, 409, 410, 411, 413, 415, 416, 417, 425, 426, 427, 429, 433, 434, 435, 436, 438, 439, 442], "elabor": 371, "elaborat": [383, 394], "elapsed": 313, "elected": 330, "eleg": [426, 428, 429, 434, 436, 438, 439, 442], "element": [15, 16, 17, 24, 25, 97, 98, 99, 100, 111, 112, 113, 188, 189, 190, 191, 202, 203, 204, 273, 275, 277, 280, 281, 288, 289, 313, 333, 339, 343, 358, 363, 366, 367, 381, 383, 387, 393, 395, 398, 401, 403, 404, 410, 411, 412, 413, 417, 418, 420], "element_siz": 357, "element_typ": [437, 438, 439, 440, 441], "elementtyp": 357, "elf": [281, 289, 318, 324, 325, 357, 361, 393, 396, 409, 415], "elf64": 416, "elf64_rel": 275, "elf_cgprofil": 334, "elf_word": 334, "elf_xword": 334, "elfabiversion_amdgpu_hs": 275, "elfabiversion_amdgpu_mesa3d": 275, "elfabiversion_amdgpu_pal": 275, "elfclass32": 275, "elfclass64": 275, "elfdata2lsb": 275, "elfosabi_amdgpu_hs": 275, "elfosabi_amdgpu_mesa3d": 275, "elfosabi_amdgpu_pal": 275, "elfosabi_non": 275, "elfv2": 388, "eli": 324, "elid": 355, "elided": [327, 339, 403], "eligibl": [313, 327, 381], "elim": 393, "elimin": [277, 289, 297, 323, 335, 337, 341, 343, 358, 362, 367, 368, 383, 393, 398, 428, 438], "eliminat": [275, 277, 285, 289, 291, 323, 330, 335, 337, 339, 344, 367, 381, 383, 394, 413, 426, 428, 429, 430, 431, 436, 438, 439, 440, 441], "eliminatecallframepseudoinstr": 413, "eliminated": [277, 289, 337, 339, 357, 381, 383], "eliminateframeindex": 413, "eliminating": [291, 339, 381, 383, 413, 422], "elis": 327, "else": [289, 290, 292, 298, 308, 309, 323, 324, 327, 328, 330, 333, 342, 344, 347, 357, 359, 362, 365, 366, 367, 381, 383, 385, 394, 398, 399, 404, 409, 410, 412, 413, 418, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442], "else_": [439, 440, 441], "else_bb": [439, 440, 441], "else_val": [439, 440, 441], "elsebb": [429, 430, 431, 432, 433], "elsev": [429, 430, 431, 432, 433], "elsewher": [273, 274, 383, 398, 401, 413], "elt": 357, "eltsizeparam": [281, 357], "eltty": [281, 433], "em": 348, "em_amdgpu": 275, "emac": [291, 341, 405], "email": [278, 290, 326, 330, 341, 345, 350, 358, 382, 390, 419, 434, 442], "emailed": [330, 419], "emailing": [290, 330, 341, 390], "embed": [275, 281, 287, 294, 357, 394, 434, 442], "embedded": [275, 281, 294, 325, 328, 330, 338, 339, 348, 357, 381, 383, 387, 393, 404, 429, 430, 439, 440], "embedding": [275, 357, 371, 383, 394], "embrac": 330, "emergent": 330, "emerging": 329, "emiss": [294, 339, 357, 388, 396, 413, 431, 441], "emissionkind": [357, 393], "emit": [278, 281, 285, 289, 292, 294, 295, 297, 298, 315, 317, 322, 323, 324, 327, 328, 329, 332, 334, 335, 337, 339, 340, 341, 342, 343, 352, 354, 357, 361, 367, 376, 381, 383, 393, 394, 396, 398, 401, 410, 413, 416, 421, 426, 427, 429, 430, 431, 433, 436, 437, 439, 440, 441], "emit_22": 413, "emitalignment": 339, "emitbyt": 413, "emitconst": 413, "emitconstantpool": 413, "emitconstpooladdress": 413, "emitepilogu": 413, "emitexternalsymboladdress": 413, "emitfnstart": 289, "emitfunctionstub": 413, "emitglobaladdress": 413, "emitinstruct": [289, 413], "emitint32": 339, "emitjumptableaddress": 413, "emitjumptableinfo": 413, "emitlabel": 289, "emitlabelplusoffset": 339, "emitleadingfent": 278, "emitloadlinked": 278, "emitloc": 433, "emitmaskedatomiccmpxchgintrinsic": 278, "emitmaskedatomicrmwintrinsic": 278, "emitnam": 291, "emitobject": 361, "emitprologu": [332, 413], "emitpseudoexpansionlowering": 401, "emitstacksizesect": 289, "emitstoreconditional": 278, "emitsymbolattribut": 289, "emitt": [322, 329, 357, 401, 403, 429, 439], "emitted": [275, 278, 280, 281, 289, 294, 334, 337, 343, 354, 357, 358, 361, 362, 367, 388, 393, 396, 398, 401, 410, 413, 414, 421, 427, 429, 433, 434, 437, 439], "emitter": 401, "emitting": [278, 281, 287, 297, 316, 328, 334, 343, 357, 381, 393, 396, 401, 413, 429, 432, 433, 434, 439, 442], "emittrailingfent": 278, "emitvalu": 289, "emmc": 346, "emphasiz": 291, "emphasized": [363, 395], "emploi": 330, "employ": [357, 394], "employed": [383, 387], "emptied": 391, "empty": [275, 287, 288, 291, 296, 309, 320, 323, 327, 330, 332, 339, 341, 357, 359, 362, 366, 383, 393, 394, 398, 403, 404, 409, 410, 413, 418, 426, 427, 429, 433, 436, 437, 439], "empty_subregsset": 413, "emul": 348, "emulat": [289, 291, 333, 337, 357, 383, 385], "emulated": [313, 357], "emulator": [298, 348], "enabl": [117, 208, 273, 275, 287, 289, 291, 292, 293, 296, 297, 298, 300, 304, 307, 310, 312, 313, 315, 321, 323, 327, 328, 335, 336, 338, 339, 341, 342, 343, 344, 348, 360, 364, 365, 368, 380, 383, 385, 388, 393, 398, 405, 409, 410, 412, 413, 415, 416, 418, 420, 421, 422, 428, 432], "enable_": 351, "enable_dx10_clamp": 275, "enable_exception_address_watch": 275, "enable_exception_fp_denormal": 275, "enable_exception_fp_denormal_sourc": 275, "enable_exception_ieee_754_fp": 275, "enable_exception_ieee_754_fp_division_by_zero": 275, "enable_exception_ieee_754_fp_inexact": 275, "enable_exception_ieee_754_fp_invalid_oper": 275, "enable_exception_ieee_754_fp_overflow": 275, "enable_exception_ieee_754_fp_underflow": 275, "enable_exception_int_divide_by": 275, "enable_exception_int_divide_by_zero": 275, "enable_exception_memory": 275, "enable_ieee_mod": 275, "enable_optimized": 380, "enable_sgpr_": 275, "enable_sgpr_dispatch_id": 275, "enable_sgpr_dispatch_ptr": 275, "enable_sgpr_flat_scratch": 275, "enable_sgpr_flat_scratch_in": 275, "enable_sgpr_grid": 275, "enable_sgpr_kernarg": 275, "enable_sgpr_kernarg_segment_ptr": 275, "enable_sgpr_privat": 275, "enable_sgpr_private_segment": 275, "enable_sgpr_private_segment_buff": 275, "enable_sgpr_private_segment_siz": 275, "enable_sgpr_private_segment_wavefront_offset": 275, "enable_sgpr_queue_ptr": 275, "enable_sgpr_workgroup": 275, "enable_sgpr_workgroup_id": 275, "enable_sgpr_workgroup_id_x": 275, "enable_sgpr_workgroup_id_y": 275, "enable_sgpr_workgroup_id_z": 275, "enable_sgpr_workgroup_info": 275, "enable_trap_handl": 275, "enable_vgpr": 275, "enable_vgpr_workitem_id": 275, "enablecompilecallback": 424, "enabled": [273, 275, 276, 280, 287, 289, 291, 292, 294, 296, 297, 298, 304, 313, 323, 324, 326, 329, 330, 337, 338, 339, 341, 357, 359, 360, 380, 383, 388, 392, 393, 404, 405, 407, 409, 410, 412, 414, 415], "enabling": [287, 288, 338, 343, 357, 383, 385, 387, 415, 424], "encapsul": [353, 387], "encapsulat": [383, 387], "encapsulated": 351, "enclos": 291, "enclosed": [292, 403, 409], "enclosing": [281, 320, 327, 383, 396, 433], "encod": [275, 278, 281, 289, 301, 328, 332, 339, 343, 357, 366, 387, 393, 396, 398, 407, 411, 417], "encodability": 332, "encodecompactunwindregisterswithoutfram": 289, "encoded": [6, 84, 178, 272, 274, 275, 280, 281, 289, 297, 298, 299, 301, 327, 332, 334, 357, 379, 393, 396, 398, 401, 413], "encoding": [274, 278, 299, 301, 305, 317, 334, 339, 343, 357, 383, 393, 396, 398, 405, 413, 417, 418, 419, 431, 433, 441], "encomp": 346, "encompass": 353, "encount": [343, 348, 385], "encounter": [327, 332, 357, 413], "encountered": [281, 289, 292, 314, 337, 383, 416, 421], "encountering": 383, "encourag": [284, 291, 330, 341, 383, 385, 434, 442], "encouraged": [330, 352, 381, 383], "encouraging": 290, "encrypted": 330, "end": [274, 276, 277, 280, 281, 284, 285, 287, 289, 290, 292, 294, 299, 300, 306, 309, 313, 316, 323, 324, 328, 330, 332, 334, 336, 337, 339, 341, 342, 343, 346, 349, 350, 351, 359, 360, 363, 365, 366, 368, 371, 375, 381, 382, 383, 384, 385, 388, 389, 394, 395, 396, 399, 402, 403, 404, 405, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "end_": [439, 440, 441], "end_amd_kernel_code_t": 275, "end_amdgpu_metadat": 275, "end_amdhsa_kernel": 275, "end_cond": [439, 440, 441], "endcod": 291, "endcond": [429, 430, 431, 432, 433, 441], "ended": [352, 357, 390, 438], "endexpr": [429, 430, 431, 432, 433, 441], "endforeach": 288, "endfunct": 288, "endian": [275, 281, 289, 357, 379, 393, 413, 417, 419], "endianess": 417, "endianness": [280, 289, 413, 417], "endif": [288, 291, 323, 324, 328, 359, 399, 404, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 442], "ending": [275, 291, 328, 341, 342, 358, 409, 413], "endl": 432, "endloop": [429, 430, 431, 432, 433, 441], "endmacro": 288, "endur": 330, "enforc": [278, 289, 291, 292, 313, 323, 330, 339, 341, 343, 357, 383, 385, 390, 391, 396, 403], "enforced": [291, 357], "enforcing": 383, "engaging": 330, "engin": [275, 303, 358, 359, 394, 419, 429, 438, 439], "engine": [335, 340, 381, 434, 442], "enginebuild": [361, 422, 423, 424], "engineer": 385, "engineering": [340, 366, 425, 427, 434, 435, 442], "english": 291, "enhanc": [330, 414, 434, 442], "enhanced": [322, 427, 428, 429, 430, 431, 433, 437, 438, 439, 440, 441], "enhancing": [291, 419], "enjoy": 345, "enough": [278, 284, 287, 289, 291, 313, 316, 323, 330, 337, 340, 357, 364, 366, 383, 384, 385, 392, 393, 396, 399, 409, 413, 414, 420, 426, 429, 433, 436, 437, 439], "enqueu": 275, "enqueue_kernel": 275, "enqueued": 275, "enqueueing": 275, "enrich": 387, "ensu": 276, "ensuing": 413, "ensur": [275, 277, 278, 281, 283, 286, 289, 290, 291, 292, 301, 303, 316, 321, 323, 330, 332, 334, 335, 336, 337, 339, 341, 343, 350, 357, 381, 382, 383, 385, 393, 394, 396, 398, 409, 412, 413, 414, 430, 431, 433, 437, 441], "ensuring": [286, 287, 289, 357, 416], "enter": [285, 287, 289, 296, 327, 332, 337, 350, 382, 383, 393, 394, 416, 420, 427, 428, 438], "entered": [275, 281, 327, 332, 357, 383, 393, 417, 426, 436], "entering": [332, 341, 365, 394], "entir": [280, 281, 289, 291, 292, 296, 299, 301, 304, 308, 316, 323, 327, 330, 339, 343, 352, 356, 357, 359, 365, 368, 371, 374, 381, 383, 393, 394, 407, 408, 409, 410, 412, 413, 414, 418, 427, 428, 434, 437, 438, 442], "entirely": [277, 278, 291, 324, 337, 339, 340, 357, 365, 367, 368, 375, 379, 391, 398], "entirety": 398, "entit": [281, 291, 357, 383], "entity": [274, 357, 376, 383, 396], "entranc": 357, "entri": [275, 277, 281, 289, 292, 308, 313, 315, 317, 318, 332, 334, 336, 339, 357, 359, 362, 383, 393, 398, 403, 411, 413, 415, 420], "entry": [275, 277, 281, 282, 287, 289, 292, 304, 306, 308, 309, 313, 327, 332, 333, 337, 339, 340, 341, 343, 351, 355, 356, 358, 361, 362, 363, 365, 366, 367, 374, 383, 385, 387, 393, 394, 395, 396, 398, 399, 411, 413, 414, 415, 417, 418, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "entry_arg": 417, "entry_block": 441, "entrypoint": [357, 359], "entrytoken": 289, "entr\u00e9": [35, 129, 221], "enum": [277, 289, 291, 316, 322, 323, 332, 333, 343, 351, 353, 354, 357, 371, 376, 383, 393, 401, 405, 413, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433, 444], "enumcas": 418, "enumer": [322, 357, 366, 371, 383, 393, 401, 403, 413, 417, 418], "enumerat": [272, 281, 289, 339, 366], "enumerated": [274, 323, 357, 417, 418], "enumerating": 394, "enumerator": [281, 316, 357], "env": 389, "environment": [278, 287, 289, 291, 292, 296, 304, 323, 331, 334, 339, 341, 344, 380, 381, 383, 391, 399, 407, 415, 416, 428], "envp": 329, "eof": [292, 359, 404, 417, 425, 426, 427, 428, 429, 430, 431, 432, 433], "eor": 357, "eph": 385, "epilog": 413, "epilogu": [339, 357, 388, 410, 413], "episod": [429, 439], "epoch": [299, 418], "epsilon": 309, "eptr": 357, "eq": [281, 327, 357, 362, 367, 403, 404], "equal": [273, 274, 275, 277, 281, 282, 283, 289, 296, 316, 317, 323, 324, 332, 357, 366, 371, 374, 375, 383, 394, 403, 413, 426, 429, 430, 431, 432, 433, 436, 439, 440, 441], "equal_rang": 383, "equalit": 337, "equality": [274, 335, 351, 357, 366, 383, 429, 439], "equally": 394, "equivalent": [275, 278, 280, 281, 287, 288, 289, 291, 292, 294, 298, 304, 305, 317, 323, 324, 332, 334, 339, 340, 343, 348, 358, 362, 366, 367, 381, 383, 388, 391, 393, 398, 403, 404, 421, 434, 442], "equivalently": 339, "eras": [323, 383, 393, 429, 430, 431, 432, 433], "erased": 278, "erasefromparent": [383, 413, 427, 428, 429, 430, 431, 432, 433], "erasur": 383, "ere": 292, "ericsson": 357, "erlang": 357, "erolling": 407, "err": [290, 367, 383, 414, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433], "err2": 383, "errat": 325, "errc": 383, "erred": 357, "errno": [277, 357, 412], "erroneous": [323, 341], "error": [275, 277, 287, 288, 289, 292, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 307, 309, 310, 312, 313, 320, 321, 322, 323, 324, 330, 332, 334, 338, 339, 341, 344, 348, 349, 350, 352, 357, 358, 359, 360, 367, 381, 384, 386, 388, 389, 391, 401, 403, 404, 405, 409, 413, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "error_cod": 432, "error_exitcod": 359, "errorasoutparamet": 383, "errorcodetoerror": 383, "errorhandling": 420, "errorinfo": 383, "errorlist": 383, "errorortoexpected": 383, "errortoerrorcod": 383, "escap": [277, 292, 339, 357, 360, 404, 430, 440], "escaped": [332, 357, 362, 364], "escaping": [277, 357, 409], "eschnet": 386, "escudo": 391, "esi": [289, 362, 394, 405], "esoteric": 403, "esp": [289, 292, 405], "especially": [278, 283, 287, 290, 291, 296, 313, 317, 323, 324, 330, 331, 337, 346, 357, 358, 366, 381, 383, 384, 385, 387, 388, 393, 394, 399, 413, 420], "espilon": 309, "espresso": 408, "essenc": [330, 394], "essential": [281, 348, 366, 413], "essentially": [278, 313, 321, 339, 343, 383, 394, 404], "establish": [327, 330, 332, 357, 385, 394, 413, 438], "established": [289, 337, 339, 357, 394, 398], "estim": 387, "estimat": [313, 412], "estimated": 366, "estimating": [282, 387], "et_dyn": 275, "et_rel": 275, "etc": [27, 116, 207, 275, 276, 277, 278, 281, 287, 289, 291, 292, 293, 313, 316, 326, 327, 330, 331, 339, 340, 341, 342, 343, 347, 349, 350, 353, 357, 358, 359, 360, 362, 365, 366, 368, 371, 374, 380, 381, 382, 385, 388, 389, 390, 391, 393, 394, 399, 401, 403, 405, 407, 410, 413, 414, 415, 416, 419, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "ethnicity": 290, "eurollvm": 338, "european": 387, "evalu": [288, 355, 357, 367, 388, 394, 413, 428, 429, 434, 439, 442], "evaluat": [288, 357, 359, 366, 387, 394, 413, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "evaluated": [287, 288, 333, 357, 424, 428, 429, 430, 431, 438, 439, 440, 441], "evaluating": [277, 291, 328, 339, 340, 357], "evaluted": 291, "even": [274, 275, 277, 279, 281, 282, 289, 290, 291, 292, 296, 298, 299, 305, 314, 316, 324, 330, 331, 336, 337, 341, 343, 346, 347, 351, 357, 359, 360, 363, 364, 366, 375, 376, 379, 382, 383, 385, 394, 395, 398, 399, 401, 402, 403, 405, 408, 409, 412, 414, 418, 420, 421, 422, 424, 425, 428, 429, 430, 431, 434, 435, 438, 440, 441, 442], "event": [287, 290, 313, 359, 383, 390, 396, 398, 415, 416, 417, 419], "event_siz": 417, "eventual": [343, 394, 398], "eventually": [292, 332, 343, 351, 355, 357, 359, 365, 381, 398, 408, 420, 429, 439], "ever": [277, 291, 330, 356, 357, 374, 383, 401, 421, 422, 434, 442], "evergreen": 275, "every": [275, 277, 278, 280, 281, 282, 283, 285, 288, 289, 292, 296, 304, 313, 315, 317, 321, 323, 327, 328, 330, 332, 335, 337, 339, 343, 345, 346, 350, 351, 356, 357, 358, 359, 365, 366, 367, 375, 381, 383, 385, 389, 391, 392, 393, 394, 396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 409, 414, 417, 419, 421, 426, 428, 429, 431, 433, 434, 438, 439, 441, 442], "everybody": 330, "everyon": [291, 330, 390, 434, 442], "everything": [278, 285, 288, 289, 323, 324, 326, 340, 341, 342, 343, 344, 346, 347, 349, 350, 357, 367, 385, 394, 409, 414, 419, 421, 425, 426, 427, 429, 430, 435, 436, 437, 439, 440], "everywher": [365, 366, 409, 418, 428, 438], "evex": 401, "evidenced": 340, "evident": 394, "evil": [280, 383, 405], "evok": 357, "evolu": 414, "evolutionary": 359, "evolv": [284, 290, 360], "evolved": 328, "evolving": 330, "evt": 343, "ex": [323, 330, 350, 354, 389], "ex2": 367, "exact": [278, 291, 302, 308, 323, 332, 339, 341, 356, 357, 360, 362, 368, 376, 381, 383, 385, 388, 393, 394, 398, 401, 408, 413, 414], "exact_artifact_path": 359, "exactly": [275, 277, 280, 281, 287, 291, 292, 296, 317, 323, 327, 332, 334, 339, 351, 356, 357, 366, 371, 375, 381, 382, 383, 385, 390, 393, 398, 399, 401, 403, 414, 416, 418, 428, 438], "exactmatch": 357, "examin": [289, 304, 316, 323, 327, 361, 394, 409, 413, 420], "examined": [357, 398, 413, 421], "examining": [285, 350, 383], "exampl": [28, 30, 55, 80, 85, 116, 118, 122, 149, 174, 179, 207, 209, 214, 243, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 293, 305, 306, 313, 316, 321, 323, 324, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 358, 362, 363, 364, 365, 366, 367, 371, 375, 380, 381, 382, 384, 385, 387, 388, 389, 391, 393, 394, 396, 398, 399, 401, 403, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "exampletest": 296, "exceed": [80, 174, 270, 273, 275, 291, 357, 393, 394], "exceedingly": 394, "excel": 383, "excellent": [277, 288, 341, 383, 413], "except": [271, 272, 273, 275, 277, 278, 280, 281, 287, 289, 290, 292, 296, 298, 299, 300, 301, 323, 324, 327, 330, 334, 337, 340, 356, 362, 366, 367, 368, 371, 383, 385, 393, 396, 398, 399, 401, 403, 404, 409, 410, 413, 414, 418, 419, 420, 422, 425, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442], "exceptional": 357, "excerpt": 367, "excess": [297, 298, 359], "exchang": [341, 383], "exchange2_": 386, "exchange2_r": 386, "excis": 357, "excised": 357, "excited": [434, 442], "exciting": 350, "exclam": 357, "exclud": [279, 289, 292, 316, 357], "excluded": [293, 316, 330, 354], "excluding": [313, 357, 410], "exclus": [278, 289, 323, 357], "exclusionary": 290, "exclusively": [398, 411], "excp_en": 275, "excp_en_msb": 275, "exctyp": 332, "exctype1": 332, "exctypen": 332, "excus": [284, 290], "exe": [295, 320, 342, 345, 371, 379, 409, 433], "exec": [31, 42, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 64, 123, 139, 143, 145, 146, 147, 148, 150, 152, 154, 155, 157, 158, 215, 224, 225, 233, 237, 239, 240, 241, 242, 244, 246, 248, 249, 251, 252, 279, 293, 359], "exec_h": 274, "exec_lo": 274, "exec_tim": 407, "execpt": 275, "execu": [277, 282, 283, 286, 289, 293, 304, 309, 313, 317, 324, 326, 327, 328, 329, 332, 336, 337, 342, 357, 358, 359, 361, 387, 388, 394, 396, 398, 408, 410, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 428, 429, 438, 439], "execut": [128, 220, 274, 275, 278, 282, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 304, 313, 314, 325, 327, 328, 332, 334, 337, 339, 341, 342, 343, 348, 352, 357, 359, 367, 368, 371, 383, 384, 387, 392, 393, 394, 396, 399, 407, 409, 410, 412, 414, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 433, 434, 436, 437, 439], "executable_format_error": 383, "executed": [275, 291, 296, 304, 309, 313, 321, 323, 327, 328, 331, 332, 337, 339, 341, 357, 361, 367, 381, 383, 387, 394, 398, 401, 408, 409, 410, 412, 414, 421, 431, 441], "executeprogramandw": 399, "executeremoteexpr": 424, "executing": [275, 285, 288, 296, 298, 313, 327, 332, 341, 357, 358, 359, 394, 398, 409, 410, 414, 417, 420, 421, 428, 429, 438, 439], "executionengin": [289, 329, 341, 383, 388, 420, 421, 422, 423, 424, 438, 439, 440, 441], "executionsess": [420, 421, 422, 423, 424], "executionutil": [420, 421], "execv": 399, "exedepsfix": 343, "exeext": 409, "exeges": [295, 322, 388], "exempl": [7, 27], "exempt": 291, "exercis": [338, 409, 420, 434, 442], "exercised": [391, 398], "exhaust": [289, 290, 337, 341, 383], "exhausted": 339, "exhib": [285, 357, 394], "exhibit": 278, "exigent": 383, "exist": [277, 278, 281, 287, 288, 289, 291, 292, 296, 299, 302, 304, 316, 327, 330, 332, 334, 335, 339, 340, 352, 356, 357, 359, 365, 376, 379, 381, 383, 384, 385, 386, 387, 393, 396, 398, 399, 403, 414, 418, 420, 427, 428, 429, 430, 431, 432, 433, 439], "existed": [292, 357, 390], "existent": [289, 355, 357, 396, 418], "existing": [278, 287, 289, 291, 294, 296, 297, 299, 304, 307, 313, 324, 327, 332, 333, 337, 339, 342, 343, 344, 345, 357, 359, 362, 376, 381, 382, 383, 385, 387, 388, 391, 393, 394, 395, 398, 399, 402, 403, 405, 409, 410, 413, 418, 419, 427, 428, 429, 430, 432, 433, 434, 437, 439, 440, 442], "exit": [282, 289, 315, 329, 332, 335, 337, 341, 357, 359, 366, 367, 383, 385, 387, 394, 408, 410, 414, 415, 416, 417, 423, 424, 429, 431, 432, 433, 434, 439, 442], "exit5": 367, "exitcod": 296, "exitcond": [357, 410], "exited": [329, 332, 357, 417], "exiting": [332, 337, 359, 383, 429, 439], "exitonerr": [383, 424], "exitonerror": 424, "exn": [327, 357], "exp": [55, 149, 243, 283, 412], "exp0": 407, "exp1": 407, "exp2": [407, 412], "exp_cnt": [80, 174, 270], "expand": [278, 289, 291, 292, 304, 318, 328, 333, 343, 357, 405, 409, 418], "expandatomicrmwin": 278, "expanded": [278, 289, 301, 318, 322, 328, 335, 357, 366, 403, 415], "expanding": [289, 330, 333, 343, 353, 415], "expandinlineasm": 413, "expandop": 333, "expans": [278, 288, 289, 304, 328, 337, 353, 357, 359, 362, 404, 413], "expansionregiontag": 328, "expcnt": [80, 174, 270, 275], "expcnt_sat": [80, 174, 270], "expect": [256, 277, 279, 280, 281, 284, 288, 289, 291, 292, 296, 302, 304, 323, 330, 340, 343, 353, 359, 366, 374, 381, 383, 385, 394, 396, 397, 398, 399, 404, 409, 417, 418, 425, 426, 429, 435, 436, 439], "expected": [274, 278, 282, 283, 289, 291, 292, 296, 304, 313, 323, 327, 330, 336, 337, 339, 341, 342, 343, 356, 357, 359, 365, 383, 392, 393, 394, 396, 398, 401, 403, 407, 408, 409, 414, 417, 420, 421, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "expected_val": 357, "expectedtoerroror": 383, "expecting": [426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "expens": [278, 287, 291, 323, 324, 332, 336, 343, 357, 359, 366, 381, 383, 394, 413, 414], "expensive_check": 291, "exper": [407, 421, 428, 438], "experiencing": 285, "experient": [287, 290, 346, 363, 365, 366, 393, 395, 420, 428, 438], "experiment": 333, "experimental": [286, 330, 345, 359, 388, 394, 419], "experimenting": 398, "explain": [277, 280, 287, 289, 291, 292, 313, 366, 383, 414, 417, 419, 425, 431, 441], "explained": [273, 274, 299, 335, 383, 392, 415], "explaining": [331, 382, 425, 435], "explan": [287, 331, 335, 351, 357, 366, 390], "explanatory": [330, 371], "explandload": 357, "explic": [275, 278, 289, 290, 291, 309, 317, 323, 330, 334, 335, 336, 339, 340, 341, 343, 351, 356, 357, 358, 366, 367, 383, 387, 390, 394, 414, 420, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442], "explicitly": [275, 276, 277, 287, 289, 291, 292, 323, 324, 327, 330, 335, 337, 339, 340, 343, 355, 357, 359, 361, 362, 381, 382, 383, 393, 394, 398, 403, 408, 410, 412, 427, 434, 437, 442], "expliqu": [0, 1, 2], "exploit": [394, 428], "exploited": 336, "exploiting": [387, 394], "explor": [382, 383], "explored": [327, 398], "exploring": [415, 416], "exponent": 274, "exponential": [323, 357], "exponentially": 381, "export": [55, 65, 80, 149, 159, 174, 243, 253, 270, 273, 277, 287, 316, 341, 344, 350, 357, 385, 388, 428, 430], "exported": [289, 304, 316, 323, 341, 357, 360, 379, 422, 423, 424, 430], "exporting": [304, 357], "expos": [277, 289, 291, 296, 316, 339, 341, 343, 357, 383, 398, 414], "exposed": [277, 278, 285, 289, 291, 323, 357, 401, 431, 441], "exposesreturnstwic": 362, "exposing": [278, 360, 381, 388, 394], "exposit": [425, 435], "expr": [274, 310, 322, 403, 426, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "expr0lh": 328, "expr0rh": 328, "expr1lh": 328, "expr1rh": 328, "expr_prec": [436, 437, 438, 439, 440, 441], "expraddr": 424, "exprast": [423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436], "express": [28, 80, 118, 174, 209, 270, 273, 275, 289, 290, 291, 296, 304, 308, 310, 316, 323, 327, 335, 337, 339, 340, 341, 358, 359, 362, 383, 388, 393, 394, 396, 401, 404, 409, 413, 414, 418, 420, 424, 425, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442], "expressed": [277, 289, 333, 357, 417, 418], "expressing": 383, "exprprec": [426, 427, 428, 429, 430, 431, 432, 433], "exprsymbol": [428, 429, 430, 431], "ext": [280, 357], "extend": [273, 274, 286, 289, 333, 334, 337, 339, 351, 357, 379, 383, 387, 394, 397, 398, 402, 403, 405, 420, 425, 426, 428, 429, 430, 431, 434, 435, 436, 438, 439, 440, 441, 442], "extended": [47, 67, 144, 161, 238, 255, 278, 292, 309, 323, 334, 341, 343, 357, 383, 394, 397, 398, 403, 405, 413, 421, 426, 430, 434, 436, 440, 442], "extending": [289, 291, 296, 323, 357, 387, 394, 398, 402, 405, 413, 419, 420, 425, 428, 434, 435, 438, 442, 443], "extens": [275, 286, 287, 289, 291, 294, 297, 304, 311, 325, 330, 332, 333, 335, 337, 339, 343, 356, 357, 363, 366, 381, 383, 388, 394, 398, 401, 412, 413, 419, 426, 430, 431, 436, 440, 441, 444], "extensibility": [323, 383, 396], "extensibl": [275, 289, 323, 357, 393, 399, 430, 440], "extensioan": 389, "extensively": 383, "extent": [302, 330, 339, 340, 357, 419], "exterior": 398, "extern": [280, 291, 314, 323, 344, 359, 360, 391, 413, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "extern_weak": [281, 357], "external": [275, 281, 286, 287, 289, 298, 314, 316, 324, 330, 337, 346, 348, 357, 359, 360, 361, 366, 367, 380, 383, 386, 389, 411, 412, 413, 414, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "externallinkag": [427, 428, 429, 430, 431, 432, 433, 437], "externally": [299, 346, 357, 360, 394, 398, 404, 411], "externally_initialized": [281, 357], "externallyinitialized": 357, "externalstorag": 323, "extra": [275, 281, 283, 287, 288, 291, 323, 331, 332, 337, 338, 341, 348, 349, 352, 357, 359, 366, 375, 381, 383, 385, 389, 390, 392, 394, 398, 401, 403, 407], "extra_sourc": 288, "extract": [295, 299, 343, 357, 383, 393, 394, 398, 401, 403, 405, 415], "extract_subreg": 362, "extracted": [292, 310, 328, 332, 342, 357, 383, 393, 394, 413], "extractel": 280, "extracting": [299, 310, 383], "extractloop": 381, "extras": [316, 381], "extrem": [357, 359, 414, 422, 443], "extremely": [277, 278, 281, 285, 289, 330, 336, 341, 354, 357, 381, 383, 393, 403, 404, 413, 431, 441], "exynosm1model": 413, "f": [274, 278, 280, 289, 291, 292, 294, 299, 300, 304, 307, 308, 310, 312, 314, 317, 320, 321, 323, 324, 327, 329, 332, 335, 339, 340, 341, 355, 357, 359, 367, 368, 381, 383, 392, 393, 394, 398, 403, 404, 411, 412, 413, 414, 416, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "f0": [357, 413], "f1": [340, 357, 366, 367, 413], "f107": 367, "f108": 367, "f110": 367, "f128": [357, 413], "f16": [114, 205, 210, 271, 273, 274, 275, 357], "f16x2": [1, 2], "f1f2": 366, "f2": [309, 340, 357, 366, 367, 413], "f2_1": 413, "f2_2": 413, "f3": [367, 413], "f31": [357, 413], "f32": [0, 1, 2, 26, 115, 206, 210, 271, 273, 274, 275, 289, 324, 343, 357, 367, 413], "f32x2": 0, "f3_1": 413, "f3_12": 413, "f3_2": 413, "f3_3": 413, "f4": 367, "f4rc": 289, "f5": 367, "f64": [0, 273, 274, 275, 289, 357, 367, 413], "f64x2": 0, "f80": 357, "f88": 367, "f89": 367, "f90": 367, "f91": 367, "f92": 367, "f93": 367, "f934": 413, "f94": 367, "f95": 367, "f96": 367, "f97": 367, "f98": 367, "f99": 367, "f_inlined_into_main": 320, "f_non": 432, "fa": [274, 289], "fab": 412, "fac": [394, 414], "faced": [291, 392, 399], "facilit": [291, 323, 335, 339, 342, 384, 385, 393, 399, 420], "facilitat": [286, 291, 330, 357, 383, 384, 387, 393, 418], "facilitating": 387, "facility": [277, 296, 388], "facing": [337, 401], "fact": [277, 289, 291, 299, 313, 323, 324, 327, 330, 332, 335, 337, 340, 341, 351, 356, 357, 358, 365, 383, 390, 394, 397, 403, 404, 414, 422, 428, 430, 431, 434, 438, 440, 441, 442], "fact0": 366, "fact1": 366, "factor": [275, 289, 291, 357, 383, 387, 403, 405, 410, 412], "factored": [289, 405], "factorial": 381, "factory": [291, 383], "fadd": [289, 333, 343, 367, 413, 427, 428, 429, 431, 437, 438, 439, 441], "fail": [278, 287, 292, 293, 296, 298, 323, 332, 336, 341, 342, 346, 352, 357, 383, 385, 389, 393, 394, 399, 408, 409, 412, 420, 421, 427], "failed": [296, 336, 352, 357, 389, 393, 397, 412, 421, 422, 423, 424], "failing": [291, 296, 330, 336, 383], "failmaterializ": 421, "failtkind": 336, "failur": [285, 292, 293, 296, 326, 330, 341, 342, 343, 345, 346, 350, 352, 357, 359, 368, 383, 385, 389, 393, 394, 408, 409, 412, 414, 418, 419, 435, 436], "failure_ord": 278, "fairly": [277, 278, 335, 337, 356, 383, 413, 425, 426, 429, 430, 435, 436, 439, 440, 442], "faithful": 332, "fak": 298, "falkormodel": 413, "falkorwr_1vxvy_2cyc": 413, "falkorwr_2vxvy_2cyc": 413, "fall": [282, 291, 292, 323, 339, 357, 381, 383, 394, 398, 413, 428, 429, 430, 431, 432, 433, 438, 439, 440, 441], "fallback": [281, 339, 343, 357, 391, 394, 410], "falling": 428, "fallthrough": [286, 394], "fals": [274, 275, 277, 283, 285, 291, 293, 296, 298, 304, 309, 317, 320, 323, 327, 335, 341, 349, 351, 354, 357, 360, 362, 366, 368, 371, 381, 383, 388, 391, 393, 397, 401, 413, 414, 415, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 439], "false_branch_weight": 283, "falsedest": 357, "famil": 275, "familiar": [275, 289, 316, 326, 332, 337, 351, 366, 414, 420, 425, 429, 433, 435, 439], "familiarity": [324, 367], "familiariz": 326, "familiarizing": 341, "family": [275, 290, 357, 383, 393, 398, 434, 442], "fan": 347, "fanci": [363, 395, 414], "fancy": 408, "fancya": 414, "fancyobject": 394, "faq": [357, 394, 419, 434, 442], "far": [277, 288, 323, 333, 356, 357, 371, 375, 383, 393, 394, 414, 416, 421, 422, 426, 427, 430, 431, 434, 436, 437, 440, 441, 442], "farm": 296, "fashion": [333, 334, 357, 394, 413], "fast": [285, 289, 291, 297, 299, 322, 324, 332, 337, 338, 341, 343, 345, 346, 359, 363, 365, 366, 379, 383, 391, 393, 394, 395, 401, 413, 414, 431, 441], "fast_path": 357, "fastcall": 289, "fastcc": [281, 289, 327, 335, 357], "fastem": 401, "fastest": 345, "fastisel": 357, "fastmath": 367, "fat": 324, "fatbin": 324, "fault": [275, 280, 293, 330, 394], "faulted": 332, "faulting": [336, 419], "faultingload": 336, "faultingloadstor": 336, "faultingpcoffset": 336, "faultingstor": 336, "faultkind": 336, "faultmap": [357, 419], "favor": [292, 330, 376], "favorably": 394, "favorit": [358, 429, 439], "favour": [402, 405], "fbb": 413, "fca": 358, "fcc_g": 413, "fcc_u": 413, "fcc_ug": 413, "fcc_val": 413, "fcf": 357, "fcmp": [427, 429, 431, 437, 438, 439, 440, 441], "fcmpinst": 383, "fcom": 289, "fcontext": 433, "fcos": 413, "fcoverag": [304, 328], "fcud": 324, "fcur": 366, "fde": [289, 358], "fdr": 415, "fdrpcchannel": 424, "fe": 339, "feasibl": [357, 393, 394, 416], "featur": [273, 274, 286, 287, 288, 296, 323, 328, 330, 334, 338, 341, 343, 350, 351, 354, 355, 357, 360, 368, 375, 381, 382, 383, 384, 385, 388, 389, 391, 393, 398, 399, 401, 405, 413, 414, 416, 417, 418, 419, 420, 426, 428, 429, 430, 431, 432, 434, 436, 439, 440, 441, 442], "featureb": 418, "featurec": 418, "featured": [289, 366], "featurefparmv8": 405, "featurev": 413, "featurev8deprecated": 413, "featurev9": 413, "fed": [289, 387], "fedor": 331, "feed": [276, 277, 359, 393, 429, 439], "feedback": [326, 330, 345, 350, 390, 414, 421, 422, 423, 424], "feeding": 357, "feel": [285, 290, 291, 326, 330, 337, 357, 388, 390, 416, 425, 427, 434, 435, 437, 442], "femulated": 357, "fenc": [275, 278, 291, 313, 337, 365], "ferm": 289, "fetch": [283, 313, 357, 385, 391], "fetched": [274, 275, 289], "fetching": 385, "few": [275, 276, 278, 281, 285, 287, 288, 289, 290, 291, 299, 313, 321, 324, 330, 331, 332, 338, 339, 347, 348, 350, 356, 357, 367, 381, 383, 384, 385, 393, 394, 398, 399, 409, 412, 413, 414, 416, 417, 422, 426, 427, 428, 430, 433, 434, 436, 437, 438, 440, 442], "fexist": 366, "ffast": [324, 412], "ffi": [287, 335], "ffi_include_d": 287, "ffi_library_d": 287, "ffmpeg": 359, "ffp": 324, "fi": [339, 341, 428, 429, 430, 431, 432, 433], "fib": [381, 425, 429, 431, 433, 435, 439, 441], "fibonacc": [342, 425, 435], "fiddl": 383, "fiddling": [349, 363, 395], "field": [275, 277, 281, 284, 288, 289, 296, 299, 313, 314, 316, 326, 328, 337, 339, 340, 350, 354, 357, 365, 371, 375, 376, 379, 382, 383, 391, 393, 394, 396, 398, 401, 403, 404, 413, 417, 418, 426, 434, 436, 442], "fifth": [357, 367, 413], "figur": [280, 285, 289, 291, 323, 352, 357, 365, 383, 409, 413, 414], "figured": 285, "fij": 275, "fil": [275, 276, 283, 285, 287, 288, 293, 295, 297, 298, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 317, 318, 320, 321, 322, 324, 325, 329, 330, 331, 333, 334, 335, 338, 342, 344, 345, 347, 349, 350, 352, 354, 356, 357, 359, 361, 363, 364, 365, 366, 367, 374, 376, 382, 383, 384, 385, 388, 389, 394, 395, 398, 399, 401, 402, 404, 405, 407, 408, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 438, 441, 444], "file_nam": 275, "file_name_entry_format": 275, "filecheck": [293, 295, 316, 318, 362, 393, 409], "filecheck_opt": 292, "filed": [350, 358, 398], "fileinfosubstream": 371, "fileit": 323, "filemagic": 375, "filenam": [287, 291, 292, 293, 294, 297, 298, 300, 301, 303, 304, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 328, 334, 393, 403, 405, 407, 415, 432, 433], "filename0": 328, "filename1": 328, "filenameindex0": 328, "filenameindex1": 328, "filenameoffset": 371, "filenotfound": 383, "filenumb": 334, "fileorerr": 383, "filepos": 323, "filesiz": 319, "filesizepars": 323, "filesystem": [296, 331, 349, 432], "filetyp": [297, 342, 393, 432], "filing": 398, "fill": [273, 274, 277, 284, 291, 309, 323, 331, 345, 352, 357, 382, 383, 414, 416, 417, 418], "filled": [284, 291, 323, 350, 357, 382, 393, 394, 398, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433], "filling": [275, 324], "filt": [287, 296, 304, 316, 354, 357, 407, 409], "filter": [289, 316, 330, 416], "filterclass": 354, "filtered": [304, 357], "filtering": [38, 132, 226, 416], "fin": [277, 280, 284, 291, 316, 323, 337, 340, 342, 343, 351, 357, 388, 394, 399, 417, 425, 431, 435, 441], "final": [275, 281, 286, 289, 291, 299, 313, 315, 328, 331, 334, 339, 341, 347, 355, 357, 371, 376, 383, 384, 385, 387, 389, 398, 402, 403, 404, 405, 413, 414, 415, 417, 427, 428, 429, 430, 431, 434, 437, 439, 440, 441, 442], "finaliz": [414, 415, 417, 433], "finalize_status": 415, "finalized": [289, 330, 415, 417], "finalizememory": 361, "finalizeobject": [361, 433], "finalizing": 415, "finally": [278, 284, 285, 289, 291, 296, 323, 328, 332, 339, 349, 350, 351, 357, 360, 361, 366, 374, 383, 385, 387, 393, 401, 409, 413, 414, 420, 422, 425, 426, 427, 428, 429, 431, 432, 435, 436, 439, 440, 441], "financial": 385, "find": [276, 277, 285, 287, 289, 291, 292, 293, 296, 304, 306, 308, 316, 322, 323, 328, 330, 331, 332, 333, 338, 340, 341, 342, 346, 348, 349, 350, 352, 356, 357, 359, 360, 363, 365, 366, 382, 383, 384, 385, 389, 390, 393, 394, 395, 396, 398, 399, 403, 404, 405, 407, 408, 413, 414, 418, 419, 420, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "find_": 383, "find_packag": 287, "find_program": 287, "findanalysispass": 416, "finding": [284, 285, 293, 296, 316, 337, 357, 359, 381, 385, 393, 394, 415, 416], "findings_d": 359, "findlead": 383, "findstub": [423, 424], "findsymbol": [422, 423, 424, 428, 429, 430, 431], "finish": [273, 276, 329, 366, 382, 412, 416, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "finishassembly": 339, "finished": [275, 285, 287, 289, 327, 331, 332, 357, 361, 363, 389, 395, 414, 427, 429, 437, 439], "finit": [289, 357, 401], "fir": 291, "firefox": 350, "firepro": 275, "firing": 285, "first": [3, 27, 55, 81, 116, 149, 175, 207, 243, 272, 273, 274, 275, 277, 278, 280, 281, 283, 285, 287, 288, 289, 291, 292, 296, 298, 299, 304, 307, 313, 321, 323, 327, 328, 330, 331, 332, 334, 335, 339, 341, 342, 343, 345, 347, 350, 351, 352, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 375, 381, 382, 383, 384, 385, 386, 387, 390, 391, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "first_wavefront": 275, "firstcondit": 383, "firstlet": 329, "firstly": 357, "fit": [280, 289, 291, 323, 324, 330, 340, 348, 357, 375, 381, 382, 383, 391, 393, 417, 421, 429, 439], "fiv": [278, 289, 323, 332, 359, 383], "fix": [291, 323, 330, 340, 350, 352, 363, 383, 385, 388, 389, 393, 394, 395, 398, 403, 404, 410, 414, 426, 427, 428, 434, 436, 437, 442], "fixabl": 337, "fixed": [256, 271, 272, 275, 278, 282, 284, 291, 292, 296, 330, 350, 352, 371, 379, 385, 388, 389, 391, 392, 394, 396, 401, 403, 405, 410, 413, 415, 418, 426, 431, 434, 436, 441, 442], "fixedt": 393, "fixing": [291, 326, 330, 358, 366, 422, 425, 435], "fixm": [309, 331, 341, 390, 413], "fixup": 371, "fl": 366, "flag": [273, 274, 275, 276, 286, 287, 288, 289, 291, 293, 303, 304, 313, 320, 329, 330, 331, 334, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 354, 359, 366, 367, 371, 375, 383, 385, 388, 389, 391, 393, 394, 396, 398, 407, 409, 413, 415, 416, 418, 437, 438, 439, 440, 441], "flag1": [359, 366], "flag2": [359, 366], "flagflat": 418, "flagged": [286, 292, 357], "flaghollow": 418, "flagpointy": 418, "flagprototyped": 433, "flaground": 418, "flagscpu1": 418, "flagscpu2": 418, "flagscpumask": 418, "flagsfeatur": 418, "flagsfeatureb": 418, "flagsfeaturec": 418, "flagsflat": 418, "flagshollow": 418, "flagspointy": 418, "flagsround": 418, "flam": 415, "flamegraph": 416, "flat": [5, 22, 23, 83, 109, 110, 177, 200, 201, 224, 225, 256, 257, 274, 294, 418], "flat_atomic": 275, "flat_atomic_add": [0, 1, 2], "flat_atomic_add_x2": [0, 1, 2], "flat_atomic_and": [0, 1, 2], "flat_atomic_and_x2": [0, 1, 2], "flat_atomic_cmpswap": [0, 1, 2, 275], "flat_atomic_cmpswap_x2": [0, 1, 2], "flat_atomic_dec": [0, 1, 2], "flat_atomic_dec_x2": [0, 1, 2], "flat_atomic_fcmpswap": 0, "flat_atomic_fcmpswap_x2": 0, "flat_atomic_fmax": 0, "flat_atomic_fmax_x2": [0, 275], "flat_atomic_fmin": 0, "flat_atomic_fmin_x2": 0, "flat_atomic_inc": [0, 1, 2], "flat_atomic_inc_x2": [0, 1, 2], "flat_atomic_or": [0, 1, 2], "flat_atomic_or_x2": [0, 1, 2], "flat_atomic_smax": [0, 1, 2], "flat_atomic_smax_x2": [0, 1, 2], "flat_atomic_smin": [0, 1, 2], "flat_atomic_smin_x2": [0, 1, 2], "flat_atomic_sub": [0, 1, 2], "flat_atomic_sub_x2": [0, 1, 2], "flat_atomic_swap": [0, 1, 2, 275], "flat_atomic_swap_x2": [0, 1, 2], "flat_atomic_umax": [0, 1, 2], "flat_atomic_umax_x2": [0, 1, 2], "flat_atomic_umin": [0, 1, 2], "flat_atomic_umin_x2": [0, 1, 2], "flat_atomic_xor": [0, 1, 2], "flat_atomic_xor_x2": [0, 1, 2], "flat_load": 275, "flat_load_dword": [0, 1, 2, 275], "flat_load_dwordx2": [0, 1, 2], "flat_load_dwordx3": [0, 1, 2], "flat_load_dwordx4": [0, 1, 2, 272], "flat_load_sbyt": [0, 1, 2], "flat_load_sbyte_d16": 2, "flat_load_sbyte_d16_h": 2, "flat_load_short_d16": 2, "flat_load_short_d16_h": 2, "flat_load_sshort": [0, 1, 2], "flat_load_ubyt": [0, 1, 2], "flat_load_ubyte_d16": 2, "flat_load_ubyte_d16_h": 2, "flat_load_ushort": [0, 1, 2], "flat_scratch": [8, 31, 32, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 86, 123, 124, 134, 135, 138, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 180, 182, 193, 194, 215, 216, 217, 224, 225, 228, 229, 232, 233, 234, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 275], "flat_scratch_h": [274, 275], "flat_scratch_lo": [274, 275], "flat_stor": 275, "flat_store_byt": [0, 1, 2], "flat_store_byte_d16_h": 2, "flat_store_dword": [0, 1, 2, 275], "flat_store_dwordx2": [0, 1, 2], "flat_store_dwordx3": [0, 1, 2, 275], "flat_store_dwordx4": [0, 1, 2], "flat_store_short": [0, 1, 2], "flat_store_short_d16_h": 2, "flat_stot": 275, "flatten": 412, "flattened": [289, 357], "flavor": [347, 357, 383, 393, 403], "flaw": [343, 394], "fldcw": 289, "fldcww": 289, "fleet": 331, "flexibility": [289, 323, 357, 383, 403, 414, 430, 440], "flexibl": [275, 289, 295, 296, 308, 339, 351, 365, 405, 409], "flexibly": 356, "flight": [313, 332, 357], "flipped": 357, "flipping": 291, "float": [274, 281, 289, 298, 313, 323, 334, 340, 343, 346, 349, 357, 366, 367, 393, 412, 413, 418, 429, 435, 436, 437, 438, 439, 440, 441], "float_denorm_mode_16_64": 275, "float_denorm_mode_32": 275, "float_denorm_mode_flush_dst": 275, "float_denorm_mode_flush_non": 275, "float_denorm_mode_flush_src": 275, "float_denorm_mode_flush_src_dst": 275, "float_mod": 275, "float_of_string": [435, 436, 437, 438, 439, 440, 441], "float_round_mode_16_64": 275, "float_round_mode_32": 275, "float_round_mode_minus_infinity": 275, "float_round_mode_near_even": 275, "float_round_mode_plus_infinity": 275, "float_round_mode_zero": 275, "floating": [26, 29, 114, 115, 119, 121, 205, 206, 211, 213, 272, 273, 281, 282, 289, 297, 313, 323, 324, 333, 337, 343, 348, 383, 388, 405, 412, 413, 425, 426, 427, 428, 429, 435, 436, 437, 438], "floatscalarty": 357, "floattitf": 388, "floattyp": 383, "floor": 412, "floorf": 412, "flow": [277, 285, 289, 291, 306, 324, 327, 330, 332, 336, 337, 343, 357, 358, 360, 361, 363, 365, 367, 381, 383, 387, 394, 395, 398, 411, 412, 413, 414, 419, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443], "floyd": 386, "flto": [287, 344, 360, 368], "flush": [275, 291, 313, 324, 357, 367, 415, 432, 436, 437, 438, 439, 440, 441], "flush_status": 415, "flushed": [346, 357, 361, 415, 417], "flushing": [357, 415], "flwend": 386, "fly": [289, 420, 426, 428, 436, 438], "fma": [289, 324, 367, 412], "fma3d": 386, "fmadd": 289, "fmag": 299, "fmod": 357, "fmt_align": 383, "fmt_pad": 383, "fmt_repeat": 383, "fmul": [289, 367, 427, 428, 437, 438], "fmuladd": 412, "fn": [329, 357], "fnaddr": 327, "fnast": [423, 424, 427, 428, 429, 430, 431, 432, 433], "fnentry": 281, "fnf": 383, "fnir": [427, 428, 429, 430, 431, 432, 433], "fnloc": 433, "fnnam": [426, 427, 428, 429, 430, 431, 432, 433], "fno": [276, 412], "fnptrval": 357, "fnstart": 289, "fntre": 366, "fnty": 357, "focus": [289, 290, 343, 360, 363, 383, 394, 395, 398, 412, 413, 420], "focused": [339, 394, 409, 421], "focusing": [289, 306], "fold": [287, 331, 333, 343, 357, 381, 394, 396, 403, 428, 438], "foldabl": 343, "folded": [277, 278, 289, 336, 337, 343, 357, 394, 438], "folding": [278, 333, 336, 343, 357, 383, 403, 414, 419, 427], "foldingsetnod": 383, "foldingsetnodeid": 383, "foldl": [403, 404], "foldmemoryoperand": [289, 413], "folk": [359, 382], "follow": [111, 202, 272, 275, 281, 288, 289, 291, 292, 299, 314, 316, 324, 326, 327, 328, 329, 330, 333, 334, 335, 336, 340, 341, 344, 345, 349, 350, 352, 356, 357, 363, 367, 368, 371, 374, 375, 379, 382, 383, 387, 388, 389, 390, 391, 393, 395, 396, 398, 403, 408, 409, 410, 413, 414, 415, 417, 422, 426, 431, 433, 436, 441], "followed": [275, 278, 281, 289, 291, 304, 313, 314, 357, 359, 366, 371, 375, 381, 383, 384, 393, 401, 403, 409, 413, 417, 426, 429, 436, 439], "following": [30, 80, 116, 122, 174, 207, 214, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 284, 285, 287, 288, 289, 291, 292, 293, 295, 296, 299, 300, 301, 305, 309, 311, 313, 315, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 343, 344, 345, 347, 348, 350, 351, 352, 354, 356, 357, 359, 360, 362, 363, 364, 366, 367, 368, 371, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 393, 394, 395, 396, 398, 399, 401, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 425, 430, 435, 440], "followup": 410, "followup_all": 410, "followup_coincident": 410, "followup_epilogu": 410, "followup_fallback": 410, "followup_inn": 410, "followup_out": 410, "followup_remaind": 410, "followup_remainder_inn": 410, "followup_remainder_out": 410, "followup_sequential": 410, "followup_unrolled": 410, "followup_vectorized": 410, "fom": [289, 381], "fonctionnal": [0, 1, 2], "foo": [277, 280, 282, 283, 287, 288, 289, 291, 292, 313, 317, 320, 323, 324, 327, 328, 332, 334, 335, 339, 340, 351, 352, 355, 357, 359, 365, 367, 383, 393, 398, 401, 403, 404, 409, 411, 412, 418, 426, 427, 428, 429, 436, 437, 438, 439], "foo1": [344, 360], "foo2": [344, 360], "foo3": [344, 360], "foo4": [344, 360], "foo_ctor": 355, "foo_dtor": 355, "foo_in_a_cc": 283, "foo_test": 409, "foo_var": 288, "foobar": [291, 362, 418], "foobaz": 291, "foof": 324, "foolproof": 414, "footprint": 343, "for": [8, 9, 12, 13, 14, 15, 16, 28, 80, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 100, 104, 106, 107, 111, 113, 117, 118, 174, 180, 181, 185, 186, 187, 188, 189, 192, 193, 194, 208, 209, 224, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 333, 334, 336, 339, 342, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 368, 371, 374, 375, 376, 379, 380, 382, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 407, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443], "forbidden": [399, 414], "forc": [272, 273, 275, 276, 287, 288, 291, 298, 316, 323, 324, 328, 332, 334, 346, 355, 357, 383, 393, 396, 398, 410, 412, 414, 418], "force_off": 287, "force_on": 287, "forced": [324, 357, 385, 393, 410, 412], "forcefully": 340, "forcibly": 357, "forcing": [313, 341, 349, 394], "foreach": [288, 385, 403, 405], "foreachdeclar": 404, "foreign": [287, 335], "forensic": 295, "foresee": 330, "forexpr": [429, 430, 431, 432, 433, 439, 440, 441], "forexprast": [429, 430, 431, 432, 433], "forget": [290, 291, 339, 351, 382, 383, 433], "forgiv": 366, "forgotten": 432, "fork": [385, 394, 399], "forking": [385, 387], "form": [273, 275, 276, 277, 278, 281, 286, 287, 288, 291, 292, 293, 299, 302, 305, 308, 317, 323, 330, 332, 334, 337, 338, 339, 340, 341, 347, 350, 351, 352, 354, 357, 358, 359, 360, 361, 362, 365, 366, 367, 371, 382, 383, 385, 387, 390, 393, 394, 396, 398, 401, 403, 404, 405, 408, 409, 411, 413, 414, 415, 417, 418, 419, 421, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "formal": [291, 324, 357, 366, 383, 390, 403, 405], "format": [6, 15, 16, 37, 84, 97, 98, 104, 105, 106, 107, 131, 178, 188, 189, 223, 272, 273, 274, 275, 280, 286, 292, 294, 297, 298, 301, 302, 304, 306, 308, 309, 313, 314, 316, 317, 318, 321, 323, 325, 326, 329, 330, 333, 334, 335, 336, 339, 341, 342, 343, 354, 357, 359, 361, 363, 367, 371, 374, 376, 381, 382, 383, 385, 387, 388, 395, 401, 403, 405, 408, 413, 415, 416, 418, 419, 433], "format_int_custom": 383, "format_provid": 383, "formatadapt": 383, "formatstring": 275, "formatt": 357, "formatted": [275, 341, 383, 418, 433], "formattedfil": 383, "formatting": [330, 418], "formbit": 405, "formed": [277, 289, 292, 323, 330, 357, 381, 383, 414], "formerly": 383, "forming": [289, 357, 383, 394, 407], "formmask": 413, "formulated": 399, "forth": [278, 280, 357], "fortran": 386, "fortunately": [291, 383, 428, 429, 431, 432, 434, 438, 439, 441, 442], "forum": [290, 357, 419], "forward": [277, 278, 281, 289, 291, 324, 333, 339, 353, 357, 379, 381, 383, 393, 398, 399, 403, 404, 415, 425, 426, 429, 435, 436, 437], "forwarded": [332, 357], "forwarding": [313, 383], "fosdem17": 343, "fost": 399, "foster": 330, "fostering": 385, "fotonik3d_": 386, "fotonik3d_r": 386, "found": [272, 274, 275, 277, 279, 285, 287, 289, 292, 293, 294, 296, 299, 301, 308, 309, 312, 315, 323, 324, 330, 331, 332, 338, 339, 341, 342, 348, 349, 350, 352, 354, 357, 359, 360, 363, 365, 366, 367, 368, 371, 379, 381, 383, 384, 385, 386, 389, 391, 393, 394, 398, 399, 407, 409, 412, 413, 414, 415, 418, 419, 427, 428, 429, 430, 431, 432, 433, 437, 440, 441], "foundat": [275, 290, 330, 385, 390, 414], "foundfoo": 291, "four": [6, 84, 178, 273, 277, 278, 280, 281, 289, 291, 296, 313, 323, 340, 343, 347, 357, 367, 413, 427, 428, 437], "fourinarow": 408, "fourth": [327, 340, 357, 396, 413, 414, 439], "fp": [275, 289, 297, 298, 323, 335, 357, 362, 392, 393, 405, 413, 428, 429, 430, 431, 433], "fp0": [403, 405], "fp1": [403, 405], "fp128": [281, 357, 366], "fp16": 275, "fp16_ovfl": 275, "fp2": [403, 405], "fp3": [403, 405], "fp4": [403, 405], "fp5": [403, 405], "fp6": [403, 405], "fp_to_sint": 413, "fpexcept": 357, "fpform": 405, "fpformat": [403, 405], "fpformbit": 405, "fpgas": 289, "fpic": [287, 391], "fpimmleaf": 343, "fpinst": 405, "fpm": [316, 375, 421, 422, 423, 424], "fpm1": 375, "fpm2": 375, "fpmad": 393, "fpo": [371, 379], "fppassmanag": 416, "fpreg": 413, "fpregsclass": 413, "fpregsregclass": 413, "fpregsregisterclass": 413, "fprintf": [426, 427, 428, 429, 430, 431, 432, 433], "fprofil": [287, 304, 328], "fptr": 433, "fpu": [349, 357], "fputc": [428, 429, 430, 431, 432, 433], "fr": 366, "fra": 289, "fraction": [274, 282, 351, 354, 359], "fractional": 357, "fragil": [343, 385], "fragility": 292, "fragment": [289, 302, 305, 338, 339, 357, 383, 393, 398, 403, 404, 408], "fragment1": 305, "fragment2": 305, "fragmented": 379, "fragmentkind": 305, "fram": [275, 297, 308, 320, 337, 339, 355, 357, 358, 361, 362, 371, 381, 383, 385, 392, 393, 394, 396, 398, 413, 417], "frameindex": 413, "frameinfo": [362, 413], "frameless": 289, "framemap": 339, "frameptr": 327, "framesiz": 339, "framework": [277, 286, 289, 333, 339, 343, 357, 381, 383, 388, 393, 408, 414, 419, 425, 427, 430, 431, 435, 437, 440, 441], "francesco": 381, "frb": 289, "frc": 289, "fre": [274, 275, 277, 278, 289, 290, 291, 313, 316, 325, 326, 330, 337, 339, 343, 350, 355, 357, 358, 359, 382, 383, 385, 388, 390, 391, 394, 398, 401, 409, 414, 416, 417, 425, 427, 428, 429, 430, 431, 434, 435, 437, 442], "freebench": 408, "freeblockmapblock": 375, "freebsd": [279, 289, 341, 388, 415], "freebsd5": 289, "freed": [275, 277, 327, 383, 392], "freedom": [357, 383], "freeing": [327, 422, 428, 438], "freely": [278, 330, 357], "freestanding": 357, "freetyp": 359, "freez": 350, "frequenc": 282, "frequency": [279, 283, 357, 416, 417, 419], "frequent": [330, 339, 385, 419, 433], "frequently": [272, 291, 323, 340, 341, 342, 357, 381, 383, 398, 399, 402, 419, 421, 422, 423, 424], "fresh": [341, 357, 385], "frexp": 357, "friend": [335, 357], "friendly": [290, 291, 308, 330, 364, 385, 402, 415, 419, 420, 426, 436], "frighten": 359, "from": [4, 6, 17, 18, 19, 20, 21, 25, 55, 66, 82, 84, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 149, 160, 176, 178, 190, 191, 195, 196, 197, 198, 199, 203, 204, 243, 254, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348, 350, 351, 352, 354, 355, 356, 358, 359, 360, 361, 362, 365, 366, 367, 368, 371, 374, 376, 379, 380, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "front": [289, 291, 330, 332, 339, 341, 342, 357, 368, 381, 383, 384, 419, 421, 422, 425, 428, 429, 430, 431, 433, 434, 435, 438, 439, 440, 441, 442], "frontend": [278, 306, 313, 327, 328, 332, 334, 335, 336, 339, 341, 355, 356, 357, 386, 388, 391, 393, 398, 409, 410, 419, 432], "fronti": [275, 431, 441], "frowned": 330, "frozen": 329, "frt": 289, "frustrat": 290, "fsanitiz": [286, 359, 391], "fsav": 412, "fsin": [297, 413], "fstream": 367, "fstrict": 357, "fsub": [431, 441], "ft": [359, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "ftest": 304, "fthinlto": 357, "ftl": [357, 396], "ftoi": 413, "ftp": 341, "ftz": 367, "fucomip": 289, "fucomp": 289, "fudg": 349, "fulfill": [348, 351, 399], "full": [273, 275, 277, 278, 287, 288, 289, 291, 292, 303, 313, 314, 316, 320, 322, 324, 329, 330, 335, 341, 347, 349, 350, 351, 355, 356, 359, 362, 363, 366, 367, 371, 381, 382, 383, 384, 385, 388, 393, 394, 395, 398, 401, 409, 410, 411, 416, 417, 418, 425, 434, 435, 442], "full_corpus_d": 359, "fulldebug": [357, 393], "fullest": 291, "fully": [276, 281, 282, 286, 287, 288, 289, 298, 313, 324, 338, 340, 341, 342, 343, 357, 381, 387, 393, 394, 398, 403, 405, 410, 412, 420, 421, 426, 430, 431, 434, 436, 440, 441, 442], "fun": [334, 415, 416, 425, 434, 435, 437, 438, 439, 440, 441, 442], "func": [310, 316, 328, 357, 362, 383, 414, 416, 436, 437, 438, 439, 440, 441], "func_typ": 398, "funcflag": 357, "funcid": 416, "funclet": 327, "funcresolv": 383, "function": [275, 277, 278, 280, 281, 282, 285, 286, 287, 292, 295, 297, 299, 301, 304, 306, 308, 314, 316, 317, 320, 321, 324, 329, 332, 334, 337, 338, 339, 340, 341, 343, 344, 351, 352, 353, 354, 355, 358, 359, 360, 361, 364, 365, 368, 371, 374, 380, 385, 387, 388, 391, 392, 394, 396, 397, 398, 401, 403, 407, 411, 413, 416, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443], "function_entry_arg": 417, "function_entry_count": 283, "function_id": 417, "function_old": 281, "function_other_typ": 417, "function_typ": [437, 438, 439, 440, 441], "functionaddress": 336, "functional": [287, 313, 330, 331, 339, 357, 358, 383, 388, 393, 401, 429, 430, 431, 439, 440, 441], "functionality": [278, 288, 291, 299, 316, 323, 330, 333, 339, 340, 341, 353, 354, 356, 357, 358, 364, 366, 381, 383, 388, 392, 393, 396, 398, 401, 414, 415, 418, 420, 425, 428, 431, 432, 433, 435, 438, 441], "functionally": [289, 383], "functionast": [423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "functionend": 334, "functionfaultinfo": 336, "functionid": 334, "functionindex": 353, "functioninfo": 336, "functioning": [332, 420], "functionlisttyp": 383, "functionnam": [339, 357], "functionnod": 366, "functionp": [381, 414], "functionpass": [277, 368, 383, 413], "functionpassctor": 414, "functionpassmanag": [421, 422, 423, 424, 428, 429, 430, 431], "functionprotos": [428, 429, 430, 431, 432, 433], "functionstart": 334, "functiontyp": [383, 427, 428, 429, 430, 431, 432, 433], "functor": 291, "fundamental": [288, 289, 291, 323, 332, 337, 340, 353, 366, 383, 394, 398, 413, 414], "fundamentally": 394, "funnel": 357, "funny": [431, 441], "furth": [278, 281, 284, 287, 291, 292, 296, 322, 327, 330, 332, 337, 339, 340, 342, 343, 348, 350, 357, 359, 365, 366, 368, 371, 375, 383, 385, 393, 394, 407, 410, 413, 417, 420, 422, 428], "furthermor": [284, 292, 340, 343, 357, 381, 385, 398], "fury": 275, "furyx": 275, "fuse": [287, 324, 344, 348], "fused": [324, 357, 381], "fuses": 357, "fusing": [298, 324, 357, 381], "fusion": 357, "futur": [275, 281, 286, 287, 291, 329, 330, 338, 339, 340, 341, 353, 355, 357, 359, 362, 383, 385, 388, 389, 393, 394, 396, 397, 398, 410, 412, 417, 425, 427, 428, 429, 435, 437, 439, 441], "fuzz": 419, "fuzz_target": 359, "fuzzed": [338, 359], "fuzzer": [359, 419], "fuzzercl": 338, "fuzzerinterfac": 359, "fuzzing": [357, 419], "fuzzing_build_mode_unsafe_for_product": 359, "fuzzinglibc": 359, "fuzzmutat": 338, "fuzzy": 305, "fx": [2, 271, 275], "fxray": [415, 416], "g": [275, 276, 277, 278, 279, 281, 284, 285, 286, 287, 289, 291, 292, 297, 303, 304, 313, 314, 315, 316, 318, 320, 323, 324, 327, 328, 329, 330, 331, 332, 334, 337, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 355, 357, 359, 362, 365, 366, 367, 368, 371, 379, 380, 381, 383, 385, 387, 388, 390, 393, 394, 395, 396, 397, 398, 399, 401, 403, 407, 408, 409, 410, 411, 414, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "g0": 413, "g1": [357, 413], "g2": [357, 413], "g3": 413, "g4": 413, "g5": 413, "g6": 413, "g7": 413, "g_add": 343, "g_const": 343, "g_extract": 343, "g_fconst": 343, "g_icmp": [343, 362], "g_inlined_into_f": 320, "g_load": 343, "g_merge_valu": 343, "g_stor": 343, "g_unmerge_valu": 343, "ga": 366, "gab": 325, "gadget": 394, "gain": [284, 323, 330, 357, 390], "galin": 345, "gamely": 330, "gap": [291, 313, 328, 343, 357], "gapend": 334, "gapstart": 334, "garbag": [281, 335, 358, 396, 419, 425, 435], "gas": [334, 413], "gath": [323, 330, 366, 384, 388, 401], "gather": [357, 387, 412], "gather4": 273, "gathered": [332, 347, 356, 357, 383, 409], "gathering": [275, 347, 357, 417], "gaug": 385, "gb": 341, "gc": [281, 358, 366, 419], "gc_transit": 398, "gc_transition_end": 398, "gc_transition_start": 398, "gcc": [278, 288, 289, 291, 293, 304, 317, 323, 324, 325, 330, 331, 332, 341, 344, 348, 349, 352, 357, 365, 381, 383, 388, 393, 407, 408, 412, 413, 415, 419], "gcc_version": 341, "gccas": 300, "gcda": 304, "gcfunctioninfo": 339, "gcfunctionmetadat": [339, 396], "gcmetadaprint": 339, "gcmetadat": 339, "gcmetadataprinterregistry": 339, "gcmetataprint": 398, "gcn": 275, "gcn3": 275, "gcnam": 281, "gcno": 304, "gcodeview": 393, "gcolumn": 412, "gcov": 317, "gcov_prefix": 304, "gcov_prefix_strip": 304, "gcregistry": 339, "gcroot": [339, 396, 398], "gcse": [381, 383], "gcstrategy": [339, 398], "gd": [0, 1, 2, 4, 80, 82, 174, 176, 270, 275], "gdb": [289, 308, 344, 383, 393, 413, 419, 442], "gdbin": 383, "ge": [403, 404], "ge_missing_jmp_buf": 291, "ge_missing_sigjmp_buf": 291, "geared": 287, "geforc": 367, "gembed": 275, "gen": [322, 343, 388, 413, 421, 433], "gend": 290, "gendfapacketiz": 289, "gener": [275, 278, 280, 285, 287, 291, 292, 293, 297, 313, 324, 337, 341, 355, 357, 358, 366, 367, 368, 383, 385, 387, 388, 389, 393, 396, 398, 401, 407, 413, 419, 420, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443], "general": [275, 276, 277, 278, 280, 281, 288, 289, 290, 291, 295, 311, 313, 316, 317, 323, 324, 326, 330, 332, 337, 339, 341, 342, 343, 348, 350, 351, 355, 358, 366, 367, 375, 376, 381, 387, 390, 394, 398, 399, 403, 405, 408, 409, 413, 414, 419, 421, 426, 430, 431, 433, 434, 436, 440, 441, 442], "generalcategory": 323, "generalis": [430, 440], "generality": [434, 442], "generaliz": [343, 357, 383, 394], "generalized": [291, 383, 398], "generally": [278, 285, 288, 291, 296, 299, 323, 329, 330, 332, 333, 337, 339, 341, 342, 343, 345, 347, 356, 357, 363, 364, 367, 368, 371, 383, 393, 394, 395, 399, 404, 405, 409, 410, 411, 413, 414, 432, 433], "generat": [275, 276, 278, 280, 281, 285, 287, 288, 289, 291, 293, 295, 296, 297, 298, 299, 304, 309, 313, 316, 317, 321, 322, 324, 328, 329, 332, 333, 334, 335, 337, 339, 340, 341, 342, 347, 348, 350, 352, 355, 356, 357, 359, 360, 361, 362, 365, 366, 367, 376, 379, 382, 383, 384, 388, 392, 393, 396, 398, 401, 403, 404, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419, 420, 426, 427, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442], "generated": [275, 278, 283, 286, 287, 291, 292, 297, 298, 301, 304, 313, 316, 317, 319, 323, 324, 328, 329, 330, 332, 336, 337, 338, 339, 341, 342, 343, 347, 357, 359, 360, 361, 365, 367, 376, 381, 383, 387, 388, 392, 393, 394, 398, 401, 405, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "generating": [275, 276, 278, 280, 288, 289, 291, 304, 324, 328, 335, 337, 341, 342, 350, 357, 362, 367, 387, 388, 393, 394, 396, 401, 410, 413, 415, 418, 419, 420, 427, 428, 429, 431, 433, 434, 437, 438, 439, 441, 442], "generational": [339, 357, 398], "generator": [276, 278, 287, 293, 295, 297, 327, 330, 333, 339, 341, 342, 343, 356, 358, 360, 364, 366, 367, 383, 386, 393, 396, 398, 401, 405, 408, 409, 413, 414, 419, 425, 427, 431, 434, 435, 437, 441, 442], "generic": [275, 278, 280, 281, 287, 289, 298, 323, 324, 330, 332, 341, 357, 358, 362, 367, 383, 388, 393, 398, 399, 401, 402, 404, 405, 413, 415, 432, 434, 442], "genericvalu": [438, 439, 440, 441], "genregisternam": 289, "gensubtargetinfo": 413, "genuin": 383, "geomean": 412, "geometric": [434, 442], "geord": 419, "gep": [335, 358, 366, 381, 398, 419], "get": [12, 13, 14, 15, 16, 32, 90, 91, 92, 97, 98, 124, 125, 185, 186, 187, 188, 189, 192, 193, 194, 216, 217, 273, 275, 277, 278, 280, 282, 285, 288, 289, 290, 291, 292, 295, 313, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 350, 351, 353, 358, 359, 360, 361, 363, 365, 366, 367, 381, 382, 383, 385, 388, 389, 390, 393, 394, 395, 398, 399, 401, 403, 404, 405, 408, 409, 410, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "get_instrinfo_named_op": 413, "get_instrinfo_operand_enum": 413, "get_instrinfo_operand_types_enum": 413, "get_matcher_implement": 401, "get_ptr": 336, "get_reginfo_target_desc": 401, "get_register_match": 401, "get_subtarget_feature_nam": 401, "getaddress": [420, 423, 424, 428, 429, 430, 431], "getaddressingmod": 413, "getadjustedanalysispoint": 277, "getanalysisusag": 277, "getargumentlist": 383, "getattribut": 366, "getattributespellinglistindex": 401, "getbasicblock": 289, "getbasicblocklist": [383, 429, 430, 431, 432, 433], "getbinarycodeforinstr": 413, "getbinaryprecedent": [430, 431, 432, 433], "getbit": 323, "getbitwidth": 383, "getbuff": 418, "getcalledfunct": 383, "getcalleesavedreg": 413, "getchar": [425, 426, 427, 428, 429, 430, 431, 432, 433], "getcol": 433, "getcompilecallback": [423, 424], "getcontext": [420, 421], "getdat": 291, "getdatalayout": [413, 420, 421, 433], "getdatasect": 339, "getdebugloc": 393, "getdefaultdatalayoutfortarget": [420, 421], "getdefaulttargettripl": 432, "getdirectory": [393, 433], "getdoublety": [427, 428, 429, 430, 431, 432, 433], "getehframesect": 361, "getelementptr": [277, 289, 292, 301, 327, 328, 339, 340, 355, 358, 366, 367, 383, 398, 411, 434, 442], "getelementptrinst": 383, "getelementtyp": 383, "getentryblock": [383, 431, 432, 433], "getenv": 399, "getexceptionpointerregist": 332, "getexceptionselectorregist": 332, "getexecutionsess": 421, "getfilenam": [393, 433], "getfoo": 357, "getforcurrentprocess": [420, 421], "getfourdatapointer": 394, "getframeinfo": [289, 413], "getframeinstruct": 362, "getframesiz": 339, "getfunct": [339, 368, 383, 414, 427, 428, 429, 430, 431, 432, 433], "getfunctionlist": 383, "getfunctiontyp": 383, "getglobal": 413, "getgloballist": 383, "getimm": 413, "getindex": 413, "getinitializ": 383, "getinsertblock": [429, 430, 431, 432, 433], "getinstlist": 383, "getinstralternativemapping": 343, "getinstrinfo": [289, 413], "getinstrmapping": 343, "getint32ty": 291, "getjitinfo": [289, 413], "getjmp_buftyp": 291, "getkey": 383, "getkind": [351, 401], "getlazyresolverfunct": 413, "getlin": [393, 433], "getllvmcontext": 291, "getloopanalysisusag": 414, "getloopid": 410, "getloopinfo": 414, "getmainjitdylib": [420, 421], "getmbb": 413, "getmemb": 383, "getmodul": 421, "getmodulematchquality": 413, "getmyobject": 394, "getnam": [335, 383, 414, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "getnamedoperandidx": 413, "getnamewithprefix": [422, 423, 424], "getnexttoken": [426, 427, 428, 429, 430, 431, 432, 433], "getnod": [333, 413], "getnullvalu": [383, 429, 430, 431, 432, 433], "getnumel": 383, "getnumoperand": 383, "getnumparam": 383, "getnumsuccessor": 291, "getnumvirtreg": 289, "getobjfilelowering": 339, "getoffset": 413, "getopcod": [383, 413], "getoperand": [289, 291, 383, 413], "getoperationnam": 333, "getoperatornam": [430, 431, 432, 433], "getopt": 323, "getorcreatefoo": 383, "getorcreatetypearray": 433, "getorinsertfunct": 383, "getparamtyp": 383, "getparent": [383, 429, 430, 431, 432, 433], "getpoint": 357, "getpointersiz": 339, "getpointertofunct": [361, 383, 433], "getpointertonamedfunct": 361, "getpredopcod": 354, "getprocaddress": 428, "getprocesstripl": 433, "getproto": [423, 424], "getrawpoint": 353, "getrawsubclassoptionaldat": 366, "getreg": [289, 413], "getregclass": 289, "getreginfo": 289, "getregisterinfo": [289, 413], "getreservedreg": 413, "getreturntyp": 383, "getschedclass": 413, "getsextvalu": 383, "getsigjmp_buftyp": 291, "getsourc": 341, "getsrc": 341, "getsubtarget": 413, "getsubtargetimpl": [413, 416], "getsymboladdress": [337, 424], "getsymboladdressinprocess": [422, 423, 424], "getsymbolnam": 413, "getsymbolt": 383, "gettargetlowering": 413, "gettargetmachin": [422, 423, 424, 428, 429, 430, 431, 433], "gettargettripl": [422, 423, 424], "getter": 383, "getterminator": 383, "getthesparctarget": 413, "getting": [276, 284, 287, 289, 291, 326, 330, 331, 343, 348, 349, 350, 352, 357, 360, 382, 383, 393, 394, 414, 415, 419, 429, 431, 439, 441], "gettingstarted": 348, "gettok": [425, 426, 427, 428, 429, 430, 431, 432, 433], "gettoknam": 433, "gettokprecedent": [426, 427, 428, 429, 430, 431, 432, 433], "gettyp": [291, 383], "gettypenam": 383, "getunqual": 383, "getvalu": [291, 383], "getvalueid": 366, "getvaluetyp": 413, "getvaluevt": 343, "getx86regnum": 413, "getzextvalu": 383, "gfx": 275, "gfx600": 275, "gfx601": 275, "gfx7": [272, 273, 274, 275], "gfx700": 275, "gfx701": 275, "gfx702": 275, "gfx703": 275, "gfx704": 275, "gfx8": [93, 95, 96, 100, 104, 106, 107, 111, 113, 272, 273, 274, 275], "gfx801": 275, "gfx802": 275, "gfx803": 275, "gfx810": 275, "gfx9": [272, 273, 274], "gfx900": 275, "gfx902": 275, "gfx904": 275, "gfx906": 275, "gfx909": 275, "ghc": [289, 357], "ghostly": 383, "gicomplexoperandmatch": 343, "gicomplexpatternequiv": 343, "gid": 299, "gif": 359, "gigabyt": 394, "gil": 387, "ginodeequiv": 343, "gisel": 338, "gist": 341, "git": [287, 326, 330, 344, 382, 419], "gitattribut": 341, "github": [275, 279, 341, 379, 382, 383, 386, 391, 394, 407, 415, 416, 419, 443], "gitlab": [385, 386], "giv": [276, 277, 281, 285, 289, 313, 323, 324, 328, 330, 337, 341, 345, 347, 349, 357, 363, 364, 365, 366, 367, 371, 381, 383, 393, 394, 395, 401, 403, 410, 413, 414, 415, 416, 418, 421, 422, 425, 427, 428, 430, 432, 433, 434, 435, 437, 440, 442], "given": [275, 277, 278, 281, 282, 284, 287, 288, 289, 291, 296, 299, 301, 302, 304, 306, 309, 313, 316, 317, 320, 321, 323, 324, 327, 332, 333, 334, 335, 337, 339, 341, 342, 343, 350, 351, 356, 357, 361, 365, 375, 381, 383, 385, 387, 393, 394, 396, 398, 399, 401, 403, 404, 407, 411, 413, 414, 416, 418, 420, 421, 422, 423, 424, 426, 427, 428, 430, 436, 437, 440], "giving": [357, 398, 401, 404, 414, 427, 433, 437], "gladly": [341, 342], "glanc": [291, 434, 442], "glasgow": 357, "glc": [0, 1, 2, 12, 13, 14, 15, 16, 22, 23, 33, 35, 90, 91, 92, 97, 98, 109, 110, 126, 129, 185, 186, 187, 188, 189, 192, 193, 194, 200, 201, 218, 221, 271, 275], "glibc": 359, "glibcxx_3": 341, "glin": 412, "glob": 310, "global": [224, 256, 273, 274, 277, 278, 281, 289, 291, 292, 296, 299, 301, 306, 310, 314, 316, 323, 324, 327, 328, 329, 332, 335, 337, 338, 339, 340, 341, 358, 359, 360, 367, 368, 371, 374, 379, 383, 384, 391, 394, 397, 398, 401, 404, 411, 413, 414, 419, 420, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 441, 442], "global_atomic_add": 2, "global_atomic_add_x2": 2, "global_atomic_and": 2, "global_atomic_and_x2": 2, "global_atomic_cmpswap": 2, "global_atomic_cmpswap_x2": 2, "global_atomic_dec": 2, "global_atomic_dec_x2": 2, "global_atomic_inc": 2, "global_atomic_inc_x2": 2, "global_atomic_or": 2, "global_atomic_or_x2": 2, "global_atomic_smax": 2, "global_atomic_smax_x2": 2, "global_atomic_smin": 2, "global_atomic_smin_x2": 2, "global_atomic_sub": 2, "global_atomic_sub_x2": 2, "global_atomic_swap": 2, "global_atomic_swap_x2": 2, "global_atomic_umax": 2, "global_atomic_umax_x2": 2, "global_atomic_umin": 2, "global_atomic_umin_x2": 2, "global_atomic_xor": 2, "global_atomic_xor_x2": 2, "global_begin": [291, 383], "global_buff": 275, "global_context": [437, 438, 439, 440, 441], "global_empty": 383, "global_end": 383, "global_iterator": 383, "global_load": 275, "global_load_dword": 2, "global_load_dwordx2": 2, "global_load_dwordx3": 2, "global_load_dwordx4": 2, "global_load_sbyt": 2, "global_load_sbyte_d16": 2, "global_load_sbyte_d16_h": 2, "global_load_short_d16": 2, "global_load_short_d16_h": 2, "global_load_sshort": 2, "global_load_ubyt": 2, "global_load_ubyte_d16": 2, "global_load_ubyte_d16_h": 2, "global_load_ushort": 2, "global_siz": 383, "global_store_byt": 2, "global_store_byte_d16_h": 2, "global_store_dword": 2, "global_store_dwordx2": 2, "global_store_dwordx3": 2, "global_store_dwordx4": 2, "global_store_short": 2, "global_store_short_d16_h": 2, "globalali": 414, "globalbuff": 275, "globaldc": 383, "globalisel": [388, 419], "globallayoutbuild": 411, "globallisttyp": 383, "globally": [291, 313, 323, 357, 398, 404], "globalref": 374, "globalrefssiz": 374, "globalsa": 365, "globalstreamindex": 371, "globalvalu": 343, "globalvar": 281, "globalvari": [340, 414, 434, 442], "globalvarnam": 357, "globl": [274, 275, 334, 367, 398], "glu": [289, 335], "gmail": 382, "gmak": [408, 414], "gmir": 343, "gninj": [407, 416], "gno": 275, "gnu": [276, 287, 289, 291, 297, 299, 308, 309, 314, 331, 332, 334, 338, 341, 344, 345, 346, 348, 357, 403, 413, 414, 432], "gnu_hash": 393, "gnueab": 348, "gnueabihf": [348, 349], "gnuwin32": [287, 342], "go": [278, 280, 283, 285, 287, 288, 289, 291, 327, 330, 332, 337, 339, 341, 347, 350, 352, 357, 359, 364, 365, 366, 367, 383, 385, 393, 394, 399, 407, 409, 413, 414, 416, 418, 419, 423, 424, 425, 426, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438, 439, 441, 442], "goal": [284, 289, 291, 309, 313, 328, 330, 332, 340, 343, 356, 360, 363, 366, 394, 395, 396, 399, 401, 412, 417, 420, 425, 431, 435, 441], "goat": 291, "gofmt": 291, "going": [273, 277, 288, 289, 291, 316, 335, 339, 347, 357, 365, 379, 383, 385, 388, 389, 394, 397, 414, 415, 424, 425, 428, 429, 430, 431, 433, 435, 438, 439, 440, 441], "goingnat": 383, "gold": [287, 289, 341, 346, 368, 419], "goldberg": 339, "goldberg91": 339, "golden": 291, "gon": 421, "good": [277, 284, 285, 289, 291, 293, 313, 323, 324, 325, 326, 330, 333, 337, 338, 341, 346, 347, 350, 357, 358, 362, 364, 366, 367, 381, 382, 383, 385, 388, 389, 391, 393, 394, 398, 399, 403, 405, 413, 414, 427, 428, 429, 430, 431, 438, 439, 440, 441], "goodby": [363, 395], "goodwill": 330, "googl": [324, 331, 382, 391, 394, 407], "googleblog": 359, "googlegroup": 359, "googleprojectzero": 394, "googletest": 296, "gory": 330, "got": [275, 289, 323, 341, 383, 433, 438], "gotch": 291, "goto": [291, 366, 429, 430, 431, 432, 433, 441], "gotos": 412, "gov": 386, "govern": 357, "governed": 357, "gpg": 341, "gpgpu": 324, "gpl": [330, 335], "gplv3": 344, "gpr": [289, 332, 357, 362, 364, 403], "gpr64": 362, "gprc": 289, "gpu": [93, 95, 96, 104, 106, 107, 272, 274, 275, 289, 324, 331, 367, 401, 419], "gpucc": 324, "gpus": [274, 275, 324, 357, 413], "gpz": 394, "gr": 357, "gr1": 357, "gr16": 289, "gr32": [289, 403, 405], "gr64": [289, 362], "gr8": [289, 413], "grab": [350, 383, 389, 401, 439, 440, 441], "gracefully": [359, 383], "grad": 326, "gradient": 386, "grain": 357, "grained": [343, 388, 394, 417], "grammar": [288, 333, 404, 426, 430, 436, 440], "grammatically": [426, 436], "grant": [330, 347, 366], "granted": [330, 366, 420], "granularity": [275, 343, 376, 394, 399], "granulated_lds_siz": 275, "granulated_wavefront_sgpr_count": 275, "granulated_workitem_vgpr_count": 275, "graph": [282, 285, 286, 287, 289, 308, 316, 322, 332, 341, 357, 358, 387, 393, 394, 403, 408, 413, 414, 415, 427, 428, 429, 430, 431, 433, 437, 438, 439, 440, 441], "graphic": [359, 434, 442], "graphical": [430, 440], "graphing": 415, "graphviz": [315, 381, 383, 416], "gratitud": 379, "grayscal": 386, "great": [274, 276, 280, 281, 283, 289, 291, 301, 304, 316, 317, 330, 337, 339, 340, 347, 357, 359, 366, 367, 371, 381, 383, 413, 414, 424, 425, 430, 435, 440], "greatly": [337, 383, 393, 398], "greedy": [289, 297, 323, 343], "greeting": 403, "gregg": 416, "grep": [287, 289, 292, 309, 323, 341, 346, 385, 391, 408, 409, 432], "grepping": 408, "grey": 389, "grid": 275, "grid_siz": 275, "griddim": 367, "gridsiz": 367, "gridsizex": 367, "gridsizey": 367, "grok": [335, 427, 437], "grokabl": 291, "gross": 387, "ground": 290, "group": [273, 275, 281, 289, 291, 292, 299, 309, 313, 318, 323, 328, 330, 356, 366, 371, 385, 387, 390, 399, 401, 403, 405, 408, 413, 434, 442], "group_segment_alignment": 275, "group_segment_fixed_siz": 275, "grouped": [289, 291, 356, 357, 381], "grouping": [291, 419, 426, 436], "groupsegmentfixedsiz": 275, "grow": [289, 290, 323, 355, 357, 359, 364, 383, 429, 439], "growing": 383, "grown": [383, 430, 434, 440, 442], "growth": [289, 357, 383], "grpc": 359, "grpid": 281, "grunt": 323, "gs_op_cut": [30, 122, 214], "gs_op_em": [30, 122, 214], "gs_op_emit_cut": [30, 122, 214], "gs_op_nop": [30, 122, 214], "gt": [304, 328, 367, 403, 404], "gtcasl": 386, "gte": 357, "gtu": 367, "gtx": 367, "guarante": [278, 289, 313, 330, 332, 334, 335, 337, 340, 357, 365, 381, 383, 390, 393, 396, 398, 401, 411, 414, 431, 441], "guaranteed": [277, 278, 281, 289, 291, 292, 323, 327, 341, 357, 358, 368, 376, 381, 383, 394, 396, 398], "guaranteedtailcallopt": 357, "guard": [291, 334, 337, 359, 383, 394, 414, 420], "guard_cond": 357, "guard_condit": 357, "guarded": [357, 401], "guarding": 394, "guess": [287, 359], "guessed": 428, "gui": [287, 291, 342], "guid": [283, 285, 287, 289, 290, 296, 324, 325, 326, 328, 330, 341, 342, 346, 347, 348, 350, 357, 359, 376, 382, 383, 384, 389, 393, 413, 426, 432, 436, 443], "guidanc": [291, 326, 337, 371], "guided": [276, 328, 340, 419], "guidelin": [291, 330, 349, 363, 383, 394], "gunzip": [341, 342], "gv": [357, 383], "gvn": [278, 337, 358, 414, 421, 422, 423, 424, 428, 429, 430, 431], "gvneedslazyptr": 413, "gvnhoist": 365, "gvreg": 343, "gz": [341, 342, 349, 389, 416], "gzip": [341, 416], "g\u00e9n\u00e9ral": [0, 1, 2], "h": [21, 93, 95, 96, 104, 106, 107, 108, 182, 199, 274, 275, 280, 287, 291, 296, 302, 308, 318, 320, 323, 332, 333, 338, 339, 341, 342, 344, 351, 357, 359, 360, 366, 367, 374, 376, 384, 387, 388, 393, 399, 401, 411, 413, 414, 415, 416, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 438, 439, 440, 441], "h264ref": 407, "h_inlined_into_g": 320, "hab": [291, 381], "hac": 394, "hack": [326, 330, 382, 414, 419, 425, 433, 434, 435, 442], "hackabl": [425, 435], "hacking": [414, 425, 435], "had": [275, 280, 283, 301, 313, 330, 343, 357, 363, 367, 383, 387, 388, 395, 396, 398, 399, 414, 418], "hainan": 275, "half": [273, 275, 281, 289, 291, 304, 316, 359, 363, 383, 395, 413, 421], "halfton": 386, "halt": 275, "halting": 394, "halv": 333, "halving": 343, "han": 350, "hand": [278, 289, 291, 339, 340, 351, 357, 362, 365, 366, 381, 383, 389, 390, 394, 399, 401, 405, 413, 418, 425, 426, 427, 428, 430, 435, 436, 437, 438, 440, 442], "handful": [353, 383], "handily": 291, "handl": [274, 278, 280, 289, 292, 311, 323, 327, 330, 332, 336, 337, 339, 343, 351, 356, 357, 360, 367, 375, 381, 383, 385, 387, 390, 393, 394, 396, 399, 403, 412, 413, 414, 415, 417, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 441], "handleallerror": 383, "handled": [6, 28, 84, 118, 178, 209, 274, 275, 289, 330, 331, 332, 334, 355, 356, 357, 360, 381, 383, 390, 396, 398, 413, 425, 426, 431, 435, 436, 441], "handledefinit": [426, 427, 428, 429, 430, 431, 432, 433], "handleerror": 383, "handleextern": [426, 427, 428, 429, 430, 431, 432, 433], "handleon": 424, "handler": [275, 289, 327, 357, 420], "handler0": 357, "handler1": 357, "handler2": 357, "handlerpcoffset": 336, "handletoplevelexpress": [426, 427, 428, 429, 430, 431, 432, 433], "handling": [287, 298, 323, 327, 338, 353, 362, 368, 390, 393, 394, 398, 399, 404, 413, 419, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 442], "handy": [383, 395, 427, 437], "hao": 387, "happen": [274, 275, 278, 284, 289, 290, 291, 292, 293, 327, 330, 336, 339, 341, 357, 361, 365, 366, 381, 382, 383, 385, 393, 394, 397, 398, 401, 418, 421, 427, 429, 433, 437, 439], "happened": [335, 390, 396, 414, 426, 428, 436, 438], "happening": [289, 361, 383, 393], "happily": 428, "happy": [382, 383, 384, 431, 441], "harassment": 290, "hard": [285, 289, 291, 299, 330, 332, 335, 337, 346, 348, 349, 357, 359, 380, 381, 382, 384, 385, 393, 394, 398, 399, 402, 405, 407, 418, 425, 426, 430, 432, 435, 436, 440], "hardcoded": [354, 413], "hardcodedsmallsiz": 383, "hardcoding": 393, "harddriv": 346, "harden": 394, "hardened": [357, 394, 419], "hardening": [357, 388, 394, 419], "hardwar": [116, 207, 275, 278, 287, 289, 298, 309, 313, 324, 330, 337, 357, 358, 367, 391, 394, 413], "harfbuzz": 359, "harm": 289, "harmless": [347, 381], "harness": 384, "harr": 386, "harvard": 357, "has": [100, 111, 113, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 300, 309, 311, 313, 316, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 375, 376, 379, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "has_asmpars": 356, "has_asmprint": 356, "has_disassembl": 356, "has_j": 356, "hasadsizeprefix": 405, "hasard": 339, "hasconflictingtyp": 371, "hasctrldep": [403, 405], "hasdelayslot": 405, "hasexternallinkag": 383, "hasfp": 413, "hasfparmv8": 405, "hasgc": 366, "hash": [275, 277, 289, 316, 328, 330, 331, 357, 359, 366, 379, 383, 385, 407, 418, 434, 442], "hash_data_count": 393, "hash_funct": 393, "hash_map": 383, "hash_set": 383, "hashdat": 393, "hashed": 294, "hashes_count": 393, "hashfunctiontyp": 393, "hashing": [366, 383], "hashtbl": [436, 437, 438, 439, 440, 441], "hasinitializ": 383, "hasinternallinkag": 383, "hasj": 413, "haskel": [357, 383, 434, 442], "hasn": [340, 383, 414], "hasnam": 383, "hason": 291, "hasopsizeprefix": 405, "hasrex_wprefix": 405, "hassideeffect": [313, 405], "hassse2": 403, "hassse3": 403, "haswel": [309, 394], "hat": 418, "hatsiz": 418, "hav": [30, 80, 116, 122, 174, 207, 214, 256, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 299, 301, 304, 306, 308, 309, 313, 314, 316, 321, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 365, 366, 367, 368, 371, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "haven": [291, 342, 357, 413, 414, 415, 416, 423, 424], "having": [275, 277, 278, 281, 285, 289, 291, 323, 327, 330, 331, 332, 334, 339, 341, 342, 343, 346, 353, 357, 359, 361, 364, 366, 371, 382, 383, 385, 387, 393, 394, 398, 399, 401, 404, 409, 410, 413, 414, 416, 418, 421, 425, 426, 427, 430, 431, 436, 438, 440, 441], "havoq": 386, "hawai": 275, "hazard": 358, "hazardous": 394, "hblcnsviw": 323, "hd": [275, 324], "hd2xxx": 275, "hd6xxx": 275, "hdl": 327, "head": [276, 278, 281, 287, 291, 299, 311, 316, 320, 323, 324, 334, 335, 336, 337, 339, 341, 342, 343, 351, 356, 357, 362, 381, 382, 383, 384, 385, 396, 399, 401, 403, 404, 408, 410, 413, 415, 416, 419, 420, 422, 429, 430, 431, 432, 433, 439, 440, 441, 444], "headach": 389, "headed": [276, 357], "header": [287, 303, 315, 316, 318, 331, 342, 349, 357, 361, 371, 383, 401, 413], "header0": 357, "header_dat": 393, "header_data_len": 393, "headerblock": 379, "headerdat": 393, "heading": [363, 395], "headlight": 291, "heal": 336, "healing": 336, "heap": [277, 357, 358, 365, 391, 392, 394, 396, 398, 418, 431, 434, 441, 442], "heard": [324, 331], "heart": [302, 398], "heartbleed": 359, "heartfelt": 379, "heartwall": 386, "heavi": 385, "heavily": [316, 335, 339, 383, 394, 419, 434, 442], "heavy": [383, 394, 398, 421], "heavyweight": 383, "heffernan": 324, "held": [280, 330, 357, 382], "hello": [288, 328, 341, 342, 357, 401, 403, 425, 435], "hello_world": 275, "helloworld": [288, 348], "help": [274, 275, 277, 278, 284, 285, 287, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 321, 322, 327, 330, 333, 337, 339, 341, 345, 346, 347, 350, 352, 353, 356, 357, 359, 360, 361, 364, 365, 368, 382, 383, 385, 386, 388, 389, 390, 391, 393, 394, 397, 398, 399, 401, 403, 405, 407, 409, 413, 414, 416, 417, 418, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442], "helped": 399, "helper": [80, 174, 270, 338, 366, 383, 409], "helpful": [280, 285, 291, 292, 323, 331, 347, 357, 365, 393, 416, 419, 420], "helping": [290, 352], "henc": [275, 291, 323, 341, 357, 360, 396, 404], "henceforth": [374, 392], "henderson2002": 339, "henrik": 399, "her": [26, 114, 115, 205, 206, 273, 274, 275, 276, 277, 278, 284, 285, 287, 288, 289, 291, 292, 299, 313, 316, 323, 324, 328, 329, 331, 332, 335, 337, 339, 340, 341, 342, 343, 345, 346, 347, 348, 350, 351, 354, 357, 358, 359, 360, 361, 362, 365, 366, 367, 371, 376, 379, 382, 383, 385, 388, 390, 391, 392, 393, 394, 396, 398, 399, 401, 402, 403, 404, 405, 407, 410, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 444], "hereby": 291, "hertz": 417, "heterogeneous": 275, "heuristic": [289, 357, 381, 388, 410, 415, 417, 431, 441], "heuristically": 410, "hex": [316, 357, 359], "hex16": 418, "hex32": 418, "hex64": 418, "hex8": 418, "hex_valu": 309, "hexadecimal": [274, 314, 316, 323, 357, 403, 418], "hexadecomal": 314, "hexagon": [289, 341, 357, 401], "hexinteg": 404, "hfc": 336, "hh": 274, "hh567368": 291, "hi": [274, 339, 359, 360, 383], "hi16": 289, "hid": [323, 327, 385, 398], "hidden": [281, 289, 291, 295, 304, 323, 353, 355, 357, 371, 383, 385, 393, 410, 414], "hidden_completion_act": 275, "hidden_default_queu": 275, "hidden_global_offset_x": 275, "hidden_global_offset_y": 275, "hidden_global_offset_z": 275, "hidden_non": 275, "hidden_printf_buff": 275, "hiddencompletionact": 275, "hiddendefaultqueu": 275, "hiddenglobaloffsetx": 275, "hiddenglobaloffsety": 275, "hiddenglobaloffsetz": 275, "hiddennon": 275, "hiddenprintfbuff": 275, "hideak": 289, "hierarch": [296, 383], "hierarchical": [281, 381, 387], "hierarchy": [296, 313, 333, 341, 352, 357, 387, 411, 419, 427], "high": [1, 2, 100, 111, 113, 274, 275, 276, 277, 279, 281, 283, 299, 309, 313, 316, 324, 326, 327, 329, 330, 331, 332, 333, 337, 338, 339, 340, 342, 343, 347, 350, 361, 365, 366, 367, 368, 375, 381, 383, 384, 388, 393, 394, 396, 398, 403, 409, 410, 411, 412, 413, 415, 417, 419, 420, 422, 426, 431, 434, 436, 441, 442], "highest": [275, 280, 357, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "highlight": [288, 328, 337, 363, 383, 401, 416, 433], "highlighted": [289, 388], "highlighting": [341, 363, 395, 427], "highly": [289, 324, 330, 337, 339, 347, 357, 359, 383, 384, 391, 394, 410, 422, 431, 441], "highproductivity": 386, "hihih": 383, "him": 366, "hint": [285, 291, 320, 337, 340, 357, 388, 410, 427, 437], "hip": [275, 289, 357], "hiraditi": 386, "his": 383, "histogram": [313, 386], "historical": [291, 340, 383, 398, 409], "historically": [276, 288, 291, 357], "history": [330, 379, 382, 385], "hit": [291, 313, 359, 365, 383, 394, 423, 424], "hitherto": 281, "hitting": 282, "hmmer": 407, "hoc": [289, 381, 383], "hoist": [277, 381, 396, 410, 414], "hoisted": [275, 277, 383, 396], "hoisting": [278, 365, 381, 396, 414], "hol": [323, 357, 394, 398], "hold": [274, 275, 276, 289, 290, 323, 332, 334, 339, 341, 356, 357, 359, 361, 366, 381, 383, 384, 387, 391, 393, 394, 403, 405, 413, 417, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "holding": [332, 362, 393, 401, 409, 414, 427, 437], "hollow": 418, "hom": [329, 337, 341, 346, 383, 386, 393, 408, 409], "homeless": 383, "homepag": [341, 342], "honour": 334, "honoured": 334, "hood": [328, 341], "hook": [278, 285, 289, 384, 385, 429], "hooked": 332, "hop": [291, 330, 339, 366, 380], "hopefully": [277, 281, 291, 323, 324, 363, 381, 414, 421, 428, 438], "horizontal": [292, 313, 357], "hork": 403, "horn": 394, "horribl": 427, "horribly": 291, "host": [275, 276, 287, 289, 291, 298, 309, 313, 339, 347, 349, 357, 361, 367, 383, 385, 386, 407, 409, 420, 432], "host_fn": 324, "host_install_d": 348, "host_only": 324, "hostb": 367, "hostc": 367, "hosted": [341, 383, 385, 407, 419], "hosting": [382, 385], "hostnam": 407, "hot": [282, 337, 357, 394, 398], "hotness": 357, "hotspot3d": 386, "hott": 282, "hottest": [317, 357], "hour": [276, 390], "how": [273, 275, 278, 279, 280, 281, 282, 283, 285, 287, 288, 291, 292, 295, 296, 299, 302, 316, 323, 324, 327, 328, 329, 330, 331, 332, 333, 337, 339, 341, 342, 343, 356, 357, 358, 362, 363, 365, 367, 368, 371, 379, 381, 382, 383, 384, 385, 387, 390, 393, 394, 395, 396, 398, 402, 403, 404, 405, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "howev": [274, 275, 277, 278, 280, 281, 285, 288, 289, 291, 299, 313, 323, 324, 327, 330, 332, 334, 335, 336, 339, 340, 341, 343, 344, 349, 350, 351, 354, 355, 356, 357, 359, 361, 362, 363, 380, 382, 383, 385, 387, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 405, 408, 409, 412, 414, 422, 427, 428, 429, 430, 431, 434, 438, 439, 440, 441, 442], "howto": [349, 363, 395, 401, 443], "howtosubmitabug": 341, "howtousej": 303, "hpgmg": 386, "hpp": 332, "hrf": 275, "hsatext": 275, "hsl": 386, "ht206167": 359, "htm": 386, "html": [287, 291, 304, 309, 333, 341, 348, 349, 350, 359, 363, 367, 385, 386, 389, 394, 401, 407, 408, 420], "hton": 424, "htpasswd": 330, "http": [279, 287, 291, 311, 315, 330, 338, 341, 342, 345, 348, 349, 350, 351, 359, 363, 382, 385, 386, 389, 391, 394, 407, 408, 409, 415, 419, 420, 443], "hug": [291, 330, 341, 359, 401, 405, 409], "human": [286, 290, 291, 300, 301, 304, 307, 308, 312, 317, 320, 341, 357, 362, 381, 394, 405, 414, 418], "hundred": 337, "hundt": 324, "hung": [383, 434, 442], "hurdl": 335, "hurt": 291, "hvx": 388, "hw": [275, 357], "hw_reg_gpr_alloc": [27, 116, 207], "hw_reg_hw_id": [27, 116, 207], "hw_reg_ib_st": [27, 116, 207], "hw_reg_lds_alloc": [27, 116, 207], "hw_reg_mod": [27, 116, 207], "hw_reg_sh_mem_bas": 207, "hw_reg_status": [27, 116, 207], "hw_reg_trapst": [27, 116, 207], "hwaddresssanitiz": 357, "hwreg": [0, 1, 2], "hybrid": 394, "hydr": 276, "hydro": 386, "hypersparc": 413, "hyphen": 413, "hypothesized": 374, "hypothetical": [289, 332, 366, 375, 383, 398, 414], "i": [273, 275, 277, 278, 279, 281, 282, 285, 286, 287, 288, 289, 291, 292, 293, 299, 304, 308, 309, 313, 322, 323, 327, 330, 332, 334, 336, 339, 341, 343, 349, 351, 352, 353, 356, 357, 359, 360, 363, 367, 375, 381, 383, 385, 390, 391, 393, 395, 396, 398, 399, 401, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 416, 419, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "i0": 413, "i1": [282, 289, 327, 335, 336, 343, 357, 365, 367, 388, 393, 410, 411, 413, 427, 429, 431, 437, 439, 441], "i16": [1, 2, 274, 275, 289, 357, 367, 413], "i17": 343, "i1942652": 357, "i2": [289, 357, 413], "i20": 357, "i24": 357, "i256": 357, "i29": 357, "i3": [289, 413], "i32": [0, 1, 2, 274, 275, 280, 282, 283, 289, 292, 327, 328, 332, 335, 336, 339, 343, 354, 355, 357, 362, 363, 366, 367, 381, 383, 393, 395, 396, 398, 405, 409, 411, 413, 415, 431, 434, 441, 442], "i32imm": [403, 413], "i32mem": 403, "i386": [289, 320, 357, 391], "i4": [357, 413], "i48": 357, "i5": 413, "i6": 413, "i64": [0, 1, 2, 274, 275, 280, 283, 289, 292, 327, 328, 340, 357, 367, 396, 398, 405, 411, 413], "i64imm": 413, "i65": 357, "i67": 357, "i686": [289, 292, 391, 409], "i7": [345, 357, 413], "i8": [275, 278, 280, 289, 292, 327, 328, 332, 339, 343, 355, 357, 365, 367, 393, 396, 398, 405, 411, 413], "i8086": 432, "i8mem": 289, "ia": 325, "iac": 313, "iaddroff": 289, "ibm": 388, "ic": 285, "icc": [341, 393, 412], "icc_e": 413, "icc_g": 413, "icc_ne": 413, "icc_val": 413, "ice": [341, 358], "iceland": 275, "icmp": [281, 327, 336, 383], "icmp_eq": 362, "icmpinst": 383, "icon": 382, "iconst": [49, 54, 59, 60, 153, 247], "icu": 359, "id": [27, 30, 116, 122, 207, 214, 273, 277, 287, 289, 292, 299, 309, 313, 316, 334, 362, 366, 367, 371, 383, 385, 391, 396, 398, 404, 413, 414, 416, 417, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "ide": [276, 281, 282, 287, 288, 291, 313, 323, 327, 330, 332, 333, 337, 342, 346, 357, 366, 381, 386, 389, 393, 394, 403, 416, 420, 426, 427, 428, 429, 431, 434, 436, 437, 438, 439, 441, 442], "ideal": 383, "ideally": [313, 330, 343, 356, 359, 398, 413], "ident": [393, 409, 435, 436, 437, 438, 439, 440, 441], "identical": [276, 280, 289, 291, 292, 299, 305, 349, 357, 358, 362, 366, 371, 383, 393, 401, 416, 428, 429, 431, 438, 439, 441], "identically": [292, 357, 385], "identif": [281, 296, 313, 332, 334, 340, 341, 349, 357, 358, 371, 385, 388, 393, 411, 412, 413], "identifi": [281, 289, 291, 292, 340, 362, 364, 367, 376, 381, 383, 385, 398, 401, 404, 410, 411, 413, 414, 415, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "identified": [30, 122, 214, 281, 286, 287, 291, 296, 313, 323, 334, 339, 357, 362, 371, 381, 383, 413], "identifierexpr": [426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "identifierstr": [425, 426, 427, 428, 429, 430, 431, 432, 433], "identify": [285, 296, 313, 332, 339, 358, 381, 383, 385, 387, 389, 394, 396, 398, 404, 411, 412, 413, 414], "identifycudapreferent": 324, "identifying": [281, 290, 299, 313, 327, 357, 398], "identit": [289, 290, 381, 390, 411], "identity": [289, 290, 327, 339, 357, 411], "identityprop": 383, "identitytransform": 421, "idiom": [323, 324, 327, 383, 387, 394, 427, 437], "idiomatic": [291, 383, 387, 409], "idiv": 289, "idnam": [426, 427, 428, 429, 430, 431, 432, 433], "idx": [291, 309, 340, 357, 362, 416, 427, 428, 429, 430, 431, 432, 433], "idx0": 357, "idx1": [340, 357], "idx2": 340, "idx3": 340, "idxen": [0, 1, 2, 3, 81, 175, 275], "idxmask": 357, "ie": [323, 357, 365], "iee": [275, 297, 299, 324, 337, 357, 388, 401], "ieee754": 357, "ieee_mod": 275, "if": [3, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 32, 33, 37, 55, 81, 90, 91, 92, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 126, 131, 149, 175, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 217, 218, 224, 225, 243, 257, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 371, 374, 375, 376, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442], "ifcond": [429, 430, 431, 432, 433, 439, 440, 441], "ifcont": [429, 430, 431, 432, 433, 439, 440, 441], "ifconvers": 413, "ifconvert": 413, "ifdef": [323, 324, 328, 343, 359, 399, 404, 428, 429, 430, 431, 432, 433, 434, 442], "ifequal": 357, "ifexpr": [429, 430, 431, 432, 433, 439, 440, 441], "ifexprast": [429, 430, 431, 432, 433, 439], "iff": 357, "iffals": 357, "ifiqu": 323, "ifloc": 433, "ifndef": [324, 420, 421, 422, 423, 424], "ifstream": 367, "iftmp": [429, 430, 431, 432, 433, 439, 440, 441], "iftru": 357, "ifunc": 281, "ifuncty": 357, "ifunequal": 357, "ignor": [274, 289, 292, 301, 304, 308, 309, 311, 323, 330, 341, 357, 364, 393, 419, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "ignore_remaining_arg": 338, "ignored": [21, 32, 108, 182, 199, 275, 277, 281, 282, 292, 305, 306, 313, 327, 336, 356, 357, 359, 366, 371, 376, 383, 410, 412, 413], "ignoring": [282, 292, 316, 357], "ii": 383, "ii32": 403, "ilbdc": 386, "ill": [299, 357], "illegal": [3, 275, 289, 323, 335, 340, 343, 357, 367, 381, 383, 385, 398, 412], "illinois": [291, 330, 386, 420, 421, 422, 423, 424], "illustr": 393, "illustrat": [275, 280, 323, 357, 360, 383, 385, 393, 426, 427, 431, 436, 437, 438, 441], "illustrated": [327, 357, 414, 425, 435], "ilp": [313, 412], "ilp32": [434, 442], "im": 357, "imac": 412, "imag": [6, 15, 16, 17, 24, 25, 37, 38, 84, 97, 98, 99, 100, 111, 112, 113, 131, 132, 178, 188, 189, 190, 191, 202, 203, 204, 223, 226, 273, 289, 314, 315, 316, 334, 357, 361, 376, 401, 430, 440], "image_atomic_add": [0, 1, 2], "image_atomic_and": [0, 1, 2], "image_atomic_cmpswap": [0, 1, 2], "image_atomic_dec": [0, 1, 2], "image_atomic_inc": [0, 1, 2], "image_atomic_or": [0, 1, 2], "image_atomic_smax": [0, 1, 2], "image_atomic_smin": [0, 1, 2], "image_atomic_sub": [0, 1, 2], "image_atomic_swap": [0, 1, 2], "image_atomic_umax": [0, 1, 2], "image_atomic_umin": [0, 1, 2], "image_atomic_xor": [0, 1, 2], "image_comdat_select_associ": 357, "image_comdat_select_largest": 357, "image_debug_directory": 376, "image_debug_type_codeview": 376, "image_debug_type_except": 371, "image_debug_type_fixup": 371, "image_debug_type_fpo": 371, "image_debug_type_omap_from_src": 371, "image_debug_type_omap_to_src": 371, "image_file_32bit_machin": 444, "image_file_aggressive_ws_trim": 444, "image_file_bytes_reversed_h": 444, "image_file_bytes_reversed_lo": 444, "image_file_debug_stripped": 444, "image_file_dll": 444, "image_file_executable_imag": 444, "image_file_large_address_awar": 444, "image_file_line_nums_stripped": 444, "image_file_local_syms_stripped": 444, "image_file_machine_am33": 444, "image_file_machine_amd64": 444, "image_file_machine_arm": 444, "image_file_machine_arm64": 444, "image_file_machine_armnt": 444, "image_file_machine_ebc": 444, "image_file_machine_i386": 444, "image_file_machine_ia64": 444, "image_file_machine_m32r": 444, "image_file_machine_mips16": 444, "image_file_machine_mipsfpu": 444, "image_file_machine_mipsfpu16": 444, "image_file_machine_powerpc": 444, "image_file_machine_powerpcfp": 444, "image_file_machine_r4000": 444, "image_file_machine_sh3": 444, "image_file_machine_sh3dsp": 444, "image_file_machine_sh4": 444, "image_file_machine_sh5": 444, "image_file_machine_thumb": 444, "image_file_machine_unknown": 444, "image_file_machine_wcemipsv2": 444, "image_file_net_run_from_swap": 444, "image_file_relocs_stripped": 444, "image_file_removable_run_from_swap": 444, "image_file_system": 444, "image_file_up_system_only": 444, "image_gather4": [0, 1, 2, 24, 111, 202], "image_gather4_b": [0, 1, 2], "image_gather4_b_cl": [0, 1, 2], "image_gather4_b_cl_o": [0, 1, 2], "image_gather4_b_o": [0, 1, 2], "image_gather4_c": [0, 1, 2], "image_gather4_c_b": [0, 1, 2], "image_gather4_c_b_cl": [0, 1, 2], "image_gather4_c_b_cl_o": [0, 1, 2], "image_gather4_c_b_o": [0, 1, 2], "image_gather4_c_cl": [0, 1, 2], "image_gather4_c_cl_o": [0, 1, 2], "image_gather4_c_l": [0, 1, 2], "image_gather4_c_l_o": [0, 1, 2], "image_gather4_c_lz": [0, 1, 2], "image_gather4_c_lz_o": [0, 1, 2], "image_gather4_c_o": [0, 1, 2], "image_gather4_cl": [0, 1, 2], "image_gather4_cl_o": [0, 1, 2], "image_gather4_l": [0, 1, 2], "image_gather4_l_o": [0, 1, 2], "image_gather4_lz": [0, 1, 2], "image_gather4_lz_o": [0, 1, 2], "image_gather4_o": [0, 1, 2], "image_get_lod": [0, 1, 2], "image_get_resinfo": [0, 1, 2], "image_load": [0, 1, 2], "image_load_mip": [0, 1, 2], "image_load_mip_pck": [0, 1, 2], "image_load_mip_pck_sgn": [0, 1, 2], "image_load_pck": [0, 1, 2], "image_load_pck_sgn": [0, 1, 2], "image_rel_amd64_addr32nb": 334, "image_rel_amd64_secrel": 334, "image_rel_amd64_sect": 334, "image_rel_arm64_secrel_high12": 334, "image_rel_arm64_secrel_low12": 334, "image_rel_arm64_secrel_low12l": 334, "image_rel_i386_dir32nb": 334, "image_rel_i386_secrel": 334, "image_rel_i386_sect": 334, "image_sampl": [0, 1, 2], "image_sample_b": [0, 1, 2], "image_sample_b_cl": [0, 1, 2], "image_sample_b_cl_o": [0, 1, 2], "image_sample_b_o": [0, 1, 2], "image_sample_c": [0, 1, 2], "image_sample_c_b": [0, 1, 2], "image_sample_c_b_cl": [0, 1, 2], "image_sample_c_b_cl_o": [0, 1, 2], "image_sample_c_b_o": [0, 1, 2], "image_sample_c_cd": [0, 1, 2], "image_sample_c_cd_cl": [0, 1, 2], "image_sample_c_cd_cl_o": [0, 1, 2], "image_sample_c_cd_o": [0, 1, 2], "image_sample_c_cl": [0, 1, 2], "image_sample_c_cl_o": [0, 1, 2], "image_sample_c_d": [0, 1, 2], "image_sample_c_d_cl": [0, 1, 2], "image_sample_c_d_cl_o": [0, 1, 2], "image_sample_c_d_o": [0, 1, 2], "image_sample_c_l": [0, 1, 2], "image_sample_c_l_o": [0, 1, 2], "image_sample_c_lz": [0, 1, 2], "image_sample_c_lz_o": [0, 1, 2], "image_sample_c_o": [0, 1, 2], "image_sample_cd": [0, 1, 2], "image_sample_cd_cl": [0, 1, 2], "image_sample_cd_cl_o": [0, 1, 2], "image_sample_cd_o": [0, 1, 2], "image_sample_cl": [0, 1, 2], "image_sample_cl_o": [0, 1, 2], "image_sample_d": [0, 1, 2], "image_sample_d_cl": [0, 1, 2], "image_sample_d_cl_o": [0, 1, 2], "image_sample_d_o": [0, 1, 2], "image_sample_l": [0, 1, 2], "image_sample_l_o": [0, 1, 2], "image_sample_lz": [0, 1, 2], "image_sample_lz_o": [0, 1, 2], "image_sample_o": [0, 1, 2], "image_scn_align_1024byt": 444, "image_scn_align_128byt": 444, "image_scn_align_16byt": 444, "image_scn_align_1byt": 444, "image_scn_align_2048byt": 444, "image_scn_align_256byt": 444, "image_scn_align_2byt": 444, "image_scn_align_32byt": 444, "image_scn_align_4096byt": 444, "image_scn_align_4byt": 444, "image_scn_align_512byt": 444, "image_scn_align_64byt": 444, "image_scn_align_8192byt": 444, "image_scn_align_8byt": 444, "image_scn_cnt_cod": 444, "image_scn_cnt_initialized_dat": [334, 444], "image_scn_cnt_uninitialized_dat": [334, 444], "image_scn_gprel": 444, "image_scn_lnk_comdat": 444, "image_scn_lnk_info": 444, "image_scn_lnk_nreloc_ovfl": 444, "image_scn_lnk_oth": 444, "image_scn_lnk_remov": [334, 444], "image_scn_mem_16b": 444, "image_scn_mem_discard": [334, 444], "image_scn_mem_execut": 444, "image_scn_mem_locked": 444, "image_scn_mem_not_cached": 444, "image_scn_mem_not_paged": 444, "image_scn_mem_preload": 444, "image_scn_mem_purge": 444, "image_scn_mem_read": 444, "image_scn_mem_shared": 444, "image_scn_mem_writ": 444, "image_scn_type_no_pad": 444, "image_section_head": 371, "image_stor": [0, 1, 2, 17, 99, 100, 190, 191], "image_store_mip": [0, 1, 2], "image_store_mip_pck": [0, 1, 2], "image_store_pck": [0, 1, 2], "image_sym_class_argu": 444, "image_sym_class_automatic": 444, "image_sym_class_bit_field": 444, "image_sym_class_block": 444, "image_sym_class_clr_token": 444, "image_sym_class_end_of_funct": 444, "image_sym_class_end_of_struct": 444, "image_sym_class_enum_tag": 444, "image_sym_class_external": 444, "image_sym_class_external_def": 444, "image_sym_class_fil": 444, "image_sym_class_funct": 444, "image_sym_class_label": 444, "image_sym_class_member_of_enum": 444, "image_sym_class_member_of_struct": 444, "image_sym_class_member_of_union": 444, "image_sym_class_null": 444, "image_sym_class_regist": 444, "image_sym_class_register_param": 444, "image_sym_class_sect": 444, "image_sym_class_static": 444, "image_sym_class_struct_tag": 444, "image_sym_class_type_definit": 444, "image_sym_class_undefined_label": 444, "image_sym_class_undefined_static": 444, "image_sym_class_union_tag": 444, "image_sym_class_weak_external": 444, "image_sym_dtype_array": 444, "image_sym_dtype_funct": 444, "image_sym_dtype_null": 444, "image_sym_dtype_point": 444, "image_sym_type_byt": 444, "image_sym_type_char": 444, "image_sym_type_doubl": 444, "image_sym_type_dword": 444, "image_sym_type_enum": 444, "image_sym_type_float": 444, "image_sym_type_int": 444, "image_sym_type_long": 444, "image_sym_type_mo": 444, "image_sym_type_null": 444, "image_sym_type_short": 444, "image_sym_type_struct": 444, "image_sym_type_uint": 444, "image_sym_type_union": 444, "image_sym_type_void": 444, "image_sym_type_word": 444, "imagick": 386, "imagin": [343, 366], "imagmag": [430, 440], "imagstart": [430, 440], "imbued": 415, "imgrel": 334, "imitat": [363, 395, 404], "imlpement": 359, "imm": [289, 316, 364, 403, 413], "imm16": [0, 1, 2], "imm3": [1, 2], "imm32": [0, 1, 2, 289], "imm4": [1, 2], "imm_eq0": 405, "immaterial": 366, "immediat": [217, 273, 277, 281, 289, 291, 316, 327, 332, 334, 343, 357, 364, 365, 381, 383, 385, 390, 394, 398, 413, 428, 431, 434, 441, 442], "immediately": [275, 278, 286, 289, 291, 292, 299, 304, 313, 327, 332, 335, 357, 361, 364, 367, 371, 375, 383, 385, 390, 393, 394, 396, 398, 403, 417, 422, 423, 424, 428, 438], "immediateparent": 357, "immigr": 290, "imminent": 350, "immleaf": 343, "immsext16": 289, "immsubreg": 413, "immt": 405, "immtyp": 405, "immtypebit": 405, "immun": 394, "immut": [353, 357, 383, 410, 414], "immutablepass": 277, "impact": [275, 286, 288, 291, 313, 339, 357, 383, 385, 386, 387, 393, 394], "impacted": 383, "impactful": 337, "impacting": [357, 394], "impeded": 357, "imper": [291, 339, 429, 431, 439, 441], "impl": [322, 383, 414, 423, 424], "implement": [275, 278, 286, 288, 291, 292, 296, 297, 299, 313, 322, 323, 324, 327, 330, 332, 333, 334, 338, 339, 341, 343, 344, 351, 356, 358, 359, 364, 367, 381, 385, 391, 393, 394, 396, 397, 398, 401, 404, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 434, 435, 436, 438, 439, 440, 441, 442, 443], "implemented": [275, 277, 278, 280, 286, 288, 289, 291, 323, 327, 329, 332, 339, 340, 343, 355, 357, 360, 365, 366, 367, 368, 381, 383, 388, 389, 392, 393, 394, 396, 397, 398, 399, 401, 413, 414, 415, 419, 421, 423, 424, 431, 434, 441, 442], "implementer": 324, "implementing": [277, 296, 302, 327, 357, 381, 382, 394, 396, 399, 401, 420, 421, 425, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441], "implementor": [339, 405, 428, 429, 438, 439], "impli": [289, 292, 296, 316, 330, 332, 357, 359, 365, 399, 413], "implic": [289, 291, 292, 332, 357, 362, 383, 394, 401, 403, 404, 413, 416, 419, 429, 439], "implicitarg": 275, "implicitcod": 393, "implicitdef": 289, "implicitdefin": 362, "implicitly": [281, 288, 289, 291, 323, 330, 334, 357, 383, 385, 394, 396, 403, 404, 412, 414, 418, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "implicitus": 289, "implied": [66, 160, 254, 271, 272, 275, 324, 340, 357, 383, 404, 413], "impliqu": [286, 289, 330, 371, 394], "imply": [277, 320, 339, 340, 357, 385, 396], "implying": 357, "import": [277, 278, 280, 281, 283, 285, 286, 287, 288, 289, 290, 291, 296, 306, 313, 316, 317, 323, 326, 330, 337, 339, 341, 342, 346, 347, 349, 350, 352, 354, 357, 359, 366, 371, 374, 375, 381, 385, 388, 389, 391, 393, 394, 396, 412, 413, 414, 415, 418, 419, 421, 426, 427, 428, 429, 430, 433, 434, 436, 437, 438, 439, 440, 442], "importantly": [277, 291, 330, 429, 439], "imported": [283, 291, 343, 357, 388], "impos": [289, 357, 362, 383], "imposed": [390, 396], "imposing": 330, "impossibl": [277, 278, 280, 330, 357, 394, 413, 420, 434, 442], "impractical": [368, 383, 394], "improv": [275, 277, 332, 337, 339, 341, 343, 357, 359, 366, 381, 382, 383, 385, 388, 393, 394, 398, 413, 414, 420, 434, 442], "improved": [296, 359, 381, 382, 388, 413], "improving": [350, 393, 422, 428, 438], "imul": 289, "imul16rm": 289, "imul16rmi8": 289, "in": [3, 6, 15, 16, 27, 30, 36, 37, 80, 81, 84, 97, 98, 100, 111, 113, 116, 122, 130, 131, 174, 175, 178, 188, 189, 191, 202, 204, 207, 214, 222, 223, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 285, 286, 290, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 367, 368, 371, 374, 375, 376, 379, 380, 382, 384, 386, 387, 389, 390, 391, 394, 395, 397, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442], "in0": 357, "in1": [289, 357], "in2": 289, "in32bitmod": 289, "in64bitmod": 289, "inaccessiblemem_or_argmemonly": 357, "inaccessiblememonly": [281, 357], "inaccessiblememonly_or_argmemonly": 281, "inaccuracy": 357, "inaccurat": [288, 313], "inaddr_any": 424, "inadvertent": [399, 410], "inadvertently": 292, "inadvis": 340, "inalloc": [281, 327, 357, 419], "inapplic": [284, 346, 394], "inappropriat": 390, "inbound": [327, 328, 337, 340, 357], "inc": [289, 291, 309, 320, 327, 341, 354, 362, 399, 401, 413, 414], "inc32r": 362, "inc4": 292, "incant": 324, "incap": [281, 434, 442], "incarn": 333, "incident": 390, "includ": [6, 27, 84, 116, 178, 207, 272, 273, 274, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 292, 296, 297, 299, 303, 304, 311, 312, 316, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 337, 338, 339, 340, 342, 344, 346, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 364, 365, 367, 371, 376, 381, 382, 383, 384, 385, 387, 388, 390, 393, 394, 396, 398, 401, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442], "include_director": 287, "included": [275, 277, 278, 288, 289, 291, 297, 301, 303, 304, 322, 323, 324, 330, 331, 342, 343, 350, 356, 357, 362, 368, 386, 388, 393, 399, 401, 403, 404, 405, 408, 413, 417, 419, 425, 426, 427, 429, 435, 436, 439], "including": [274, 275, 277, 278, 283, 285, 287, 289, 290, 291, 293, 303, 316, 321, 323, 324, 330, 332, 338, 339, 341, 343, 350, 357, 359, 361, 367, 368, 375, 379, 381, 382, 383, 385, 387, 388, 390, 391, 393, 394, 396, 397, 398, 401, 403, 409, 410, 412, 413, 414, 416, 419, 420, 425, 426, 429, 430, 434, 435, 436, 439, 440, 442], "inclus": [273, 274, 275, 291, 304, 322, 334, 357, 384, 399, 413, 420], "inclusively": 313, "incoming": [289, 330, 343, 357, 383, 394, 413, 429, 431, 439, 440, 441], "incompatibl": [332, 357, 380, 393, 401], "incomplet": [291, 331, 335, 383, 394, 421, 422, 423, 424], "inconsistenc": 309, "inconsistency": [291, 340], "inconsistent": 393, "inconvenient": [359, 431, 441], "inconvertibleerrorcod": 383, "incorporat": [289, 351, 383], "incorporating": [383, 385], "incorrect": [275, 283, 343, 357, 368, 394, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "incorrectly": [275, 348, 357, 394, 425, 427, 437], "incq": 292, "increas": [275, 291, 298, 327, 330, 337, 343, 352, 359, 360, 381, 391, 401, 402, 405, 410, 412], "increased": [357, 388], "increasing": [291, 385, 393, 394, 427, 437], "incredibl": 291, "incredibly": [330, 347, 385], "increment": [289, 330, 376, 381, 383, 429, 431, 432, 433, 439, 441], "incremental": [288, 289, 339, 357, 359, 375], "incrementally": [376, 392, 429, 439], "incremented": [285, 291, 313, 357], "incrementing": [357, 429, 439], "ind": 433, "ind1": 357, "ind4": 357, "indefinitely": 359, "indent": [363, 383, 395, 433], "indented": 291, "indenting": 418, "independent": [275, 278, 298, 323, 326, 330, 337, 340, 341, 343, 349, 353, 355, 357, 360, 364, 383, 394, 396, 399, 405, 412, 413, 414, 419], "independently": [275, 289, 292, 330, 343, 356, 357, 360, 383, 385, 394, 396, 416, 417], "index": [3, 81, 175, 273, 275, 277, 280, 281, 289, 299, 308, 309, 313, 316, 323, 327, 328, 332, 334, 337, 339, 341, 350, 353, 357, 363, 371, 374, 375, 379, 383, 386, 393, 394, 396, 397, 398, 401, 413, 418, 433], "index2": 394, "index2virtreg": 289, "indexed": [317, 340, 357, 375, 413], "indexedmap": 289, "indexing": [117, 208, 274, 340, 357], "indexloc": 383, "indexreg": 289, "indic": [274, 280, 281, 289, 301, 313, 328, 353, 357, 371, 379, 381, 383, 393, 394, 396, 412, 413], "indicat": [55, 128, 149, 220, 243, 271, 272, 273, 274, 275, 277, 281, 282, 283, 284, 287, 289, 291, 299, 323, 327, 328, 330, 332, 337, 339, 351, 356, 357, 358, 359, 367, 368, 383, 385, 387, 393, 394, 396, 398, 403, 404, 405, 408, 412, 413, 414, 417, 426, 427, 429, 433, 436, 437, 439], "indicated": [15, 16, 27, 97, 98, 116, 188, 189, 207, 256, 273, 275, 281, 299, 327, 334, 357, 381, 413, 414], "indicating": [274, 277, 281, 283, 287, 289, 291, 299, 305, 323, 327, 332, 340, 357, 368, 382, 383, 385, 388, 393, 401, 403, 405, 413], "indicator": [291, 313, 416], "indiqu": [277, 296, 349, 398], "indir": 357, "indirect": [275, 286, 289, 327, 334, 335, 359, 375, 393, 394, 396, 398, 413, 422, 423, 424], "indirectionutil": [423, 424], "indirectly": [275, 278, 291, 296, 357, 403], "indirectstubmanager": [422, 423], "indirectstubsmanag": [423, 424], "indirectstubsmgr": [423, 424], "indirectstubsmgrbuild": 423, "individual": [272, 275, 280, 281, 285, 289, 291, 292, 296, 299, 301, 304, 316, 330, 333, 337, 343, 350, 356, 357, 359, 364, 365, 368, 371, 379, 381, 385, 388, 390, 394, 398, 403, 409, 433], "individually": [342, 348, 383, 419], "indivisibl": 355, "induced": [387, 419], "induct": [277, 337, 341, 393, 414, 427, 429, 431, 437, 439, 441], "industrial": 419, "indvar": [357, 383, 414], "indx": 418, "ineffect": 394, "inefficienc": [289, 431, 441], "inefficient": [281, 337, 359, 383, 397, 412], "ineg": 289, "inequality": [274, 289], "inexact": [275, 357], "inf": [275, 297, 298, 323, 357, 393], "infeasibl": [358, 394], "infectious": 383, "infer": [286, 289, 324, 337, 343, 357, 368, 414], "inferattr": 414, "inferencing": 289, "inferent": [280, 324], "inferior": 329, "inferred": [291, 297, 298, 302, 339, 351, 357, 398, 407, 418], "inferring": 398, "infinit": [277, 289, 357, 359, 381], "infinitely": 357, "infinity": [275, 313, 357], "influenc": [280, 357, 358, 393, 410], "influenced": 414, "info": [275, 281, 287, 289, 296, 308, 309, 313, 315, 316, 320, 322, 329, 330, 332, 339, 341, 343, 347, 349, 357, 358, 359, 360, 362, 368, 374, 379, 385, 388, 390, 401, 412, 414, 417, 418, 425, 430, 431, 433, 434, 435, 438, 439, 440, 441, 442], "inform": [272, 273, 274, 275, 277, 281, 283, 284, 286, 287, 290, 292, 293, 294, 295, 296, 301, 302, 309, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 328, 329, 330, 332, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 371, 375, 376, 379, 382, 384, 385, 387, 389, 390, 391, 394, 395, 396, 397, 398, 399, 401, 403, 405, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 425, 426, 427, 428, 430, 431, 432, 434, 437, 438, 440, 441, 442, 443], "informal": [330, 357, 390], "informational": 323, "informativemailnotifi": 345, "informed": [277, 339, 383], "informing": 381, "infos": 332, "infrastructur": [285, 287, 289, 291, 316, 326, 330, 333, 339, 341, 346, 357, 368, 383, 384, 385, 387, 388, 393, 398, 407, 412, 414, 419, 420, 421, 422, 423, 424], "infrequently": 414, "infring": 330, "ing": [291, 326, 381, 427, 431, 437, 438, 441], "ingredient": 387, "inher": [277, 289, 291, 380, 383, 403, 404, 410, 414, 421], "inherent": 376, "inherently": [288, 335, 357, 383, 394], "inherit": [289, 323, 351, 383, 399, 401, 405, 410, 411], "inherited": [404, 414], "inheriting": [383, 404], "inhib": [317, 357, 398], "inhibited": 403, "ini": 356, "init": [275, 323, 359, 385, 414, 424, 431, 432, 433, 441], "init_val": 441, "inited": 359, "initi": 335, "initial": [282, 287, 316, 323, 327, 339, 341, 343, 357, 359, 361, 366, 381, 382, 383, 387, 388, 390, 391, 394, 401, 403, 404, 413, 420, 429, 431, 432, 433, 439, 441], "initialexec": [281, 357], "initialis": [323, 432], "initialised": [323, 405, 415], "initializ": [275, 281, 289, 313, 323, 327, 333, 335, 339, 357, 366, 367, 381, 385, 392, 394, 401, 403, 404, 413, 414, 415, 418, 420, 421, 422, 424, 428, 431, 432, 433, 438, 439, 440, 441], "initialize_ag_pass": 414, "initialize_native_target": [438, 439, 440, 441], "initialize_pass_dependency": 414, "initializealiasanalys": 277, "initializeallasmparser": 432, "initializeallasmprinter": 432, "initializealltarget": 432, "initializealltargetinfos": 432, "initializealltargetmc": 432, "initialized": [275, 298, 323, 335, 339, 351, 357, 359, 397, 401, 413, 414, 415, 420], "initializemodul": 433, "initializemoduleandpassmanag": [428, 429, 430, 431, 432], "initializenativetarget": [424, 428, 429, 430, 431, 433], "initializenativetargetasmpars": [424, 428, 429, 430, 431, 433], "initializenativetargetasmprint": [424, 428, 429, 430, 431, 433], "initializepass": 277, "initializer": [291, 301, 357, 381], "initializerconst": 357, "initializi": 404, "initializing": [291, 367, 415, 420, 422, 428], "initially": [277, 289, 296, 343, 383, 385, 413, 418, 423, 424, 427, 437], "initialseed": 319, "initiat": [275, 332], "initid": 281, "initsynclibcall": 278, "initval": [431, 432, 433], "inject": [291, 327, 393, 394], "injected": 327, "injecting": 394, "inlin": [275, 278, 304, 313, 323, 324, 330, 332, 334, 335, 362, 367, 382, 383, 388, 396, 398, 414, 418, 425, 428, 438], "inline": [316, 357, 393], "inline_hd1": 324, "inline_hd2": 324, "inlineasm": 366, "inlinebit": 357, "inlined": [283, 286, 289, 320, 327, 332, 334, 337, 357, 393, 394, 414, 429, 439], "inlined_at": 334, "inlinedat": [292, 357], "inlinehint": [281, 357], "inlining": [320, 321, 323, 324, 332, 335, 341, 357, 368, 374, 388, 393, 394, 421, 434, 442], "inlnied": 320, "inner": [288, 291, 293, 332, 355, 357, 359, 381, 383, 387, 403, 410, 418, 419], "inner_": 357, "innerloop": 387, "innermost": [387, 412], "innerstructty": 357, "innocent": [429, 439], "innov": 388, "inoperandlist": [405, 413], "inpredsens": 354, "input": [12, 13, 14, 15, 16, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 77, 78, 79, 90, 91, 92, 97, 98, 133, 134, 135, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 171, 172, 173, 185, 186, 187, 188, 189, 192, 193, 194, 227, 228, 229, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 260, 261, 262, 267, 268, 269, 271, 273, 275, 277, 279, 285, 288, 289, 291, 292, 293, 296, 297, 298, 300, 301, 304, 306, 307, 308, 309, 310, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 335, 341, 343, 350, 354, 358, 359, 360, 362, 367, 381, 383, 387, 394, 398, 401, 403, 405, 407, 409, 412, 413, 414, 416, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 444], "inputcontent": 418, "inputfilenam": 323, "inrang": 357, "inreg": [281, 289, 357, 413], "inresumepart": 327, "insanely": 291, "insensit": 277, "insert": [280, 291, 296, 299, 323, 327, 339, 357, 366, 381, 383, 393, 394, 399, 413, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "insert_subreg": 362, "insertbefor": 383, "insertbranch": 413, "insertbyt": 359, "insertdeclar": 433, "inserted": [275, 277, 278, 289, 339, 343, 357, 383, 393, 394, 398, 414, 415, 427, 429, 430, 431, 432, 433, 437, 439, 440, 441], "insertel": [280, 292], "inserter": 383, "inserting": [285, 289, 292, 299, 357, 381, 394, 398, 429, 430, 431, 432, 433, 439, 440, 441], "insertion_block": [439, 440, 441], "insertvalu": 327, "insid": [281, 287, 288, 289, 291, 296, 302, 328, 329, 331, 332, 339, 341, 343, 349, 351, 357, 359, 365, 366, 371, 381, 383, 387, 389, 393, 394, 397, 398, 401, 403, 404, 408, 409, 410, 411, 414, 418, 419, 423, 424, 428], "insidebundl": 289, "insidious": 291, "insight": [328, 357, 416], "insignific": [306, 357, 396], "inspect": [281, 286, 340, 385, 393, 414], "inspected": [357, 383, 426], "inspecting": [289, 337], "inspir": 416, "inspired": [313, 357, 381, 393], "inst": [357, 381, 383, 403, 413], "inst_begin": 383, "inst_call": 281, "inst_end": 383, "inst_invok": 281, "inst_iterator": 383, "instal": 346, "instali": 289, "instalias": 289, "install": [275, 287, 303, 324, 331, 333, 341, 342, 344, 345, 346, 348, 349, 350, 359, 380, 383, 384, 389, 407, 408, 415, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "install_prefix": 287, "installed": [275, 276, 287, 288, 303, 324, 331, 338, 341, 342, 344, 345, 346, 349, 356, 367, 380, 383, 385, 389, 405, 407, 408, 415, 431, 441], "installedd": 331, "installing": [341, 407, 414, 431, 441], "installment": [426, 436], "instanc": [275, 287, 289, 291, 292, 296, 323, 327, 331, 339, 343, 351, 355, 357, 361, 362, 366, 368, 382, 383, 385, 389, 393, 396, 401, 407, 409, 410, 413, 414, 415, 418, 419, 420, 421, 426, 427, 434, 436, 437, 442], "instanceof": [383, 401], "instanti": [304, 323, 351, 401, 403, 405], "instantiat": [296, 323, 383, 404, 405, 418], "instantiated": [304, 324, 361, 383, 387, 401, 403, 404, 405, 413, 414], "instantiatetemplateattribut": 401, "instantiating": [383, 401, 403, 404], "instantly": 383, "instcombin": [285, 338, 383, 393, 421, 422, 423, 424, 428, 429, 430, 431], "instead": [182, 216, 217, 271, 275, 277, 278, 281, 285, 287, 288, 289, 290, 291, 292, 296, 298, 302, 304, 308, 310, 312, 313, 314, 316, 321, 323, 324, 327, 328, 329, 330, 332, 334, 335, 337, 338, 340, 341, 343, 345, 346, 347, 350, 351, 354, 355, 356, 357, 358, 359, 362, 366, 367, 381, 383, 385, 387, 388, 390, 392, 394, 396, 398, 399, 404, 407, 409, 413, 414, 415, 416, 417, 418, 419, 421, 422, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 438, 440, 441, 442], "instinct": 275, "institerator": 383, "instlisttyp": 383, "instnam": 285, "instprint": 401, "instr": [275, 287, 289, 304, 317, 322, 328, 403], "instr0": 366, "instr1": 366, "instr2": 366, "instr_begin": 441, "instr_iterator": 289, "instr_map": 416, "instraspect": 343, "instrinfo": [289, 362, 413], "instrinsic": [357, 393], "instritinclass": 405, "instrmapping": 413, "instrprofvaluekind": 357, "instrsched": 383, "instrsdrm": 403, "instrssrr": 403, "instruct": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 210, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 277, 281, 285, 286, 287, 291, 292, 295, 297, 298, 299, 301, 315, 316, 317, 319, 322, 324, 325, 326, 327, 330, 331, 334, 336, 337, 338, 339, 341, 344, 348, 350, 352, 355, 358, 365, 366, 367, 368, 382, 385, 387, 388, 392, 393, 394, 396, 398, 401, 403, 405, 409, 410, 411, 412, 414, 415, 419, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 441, 442], "instructed": [332, 357, 390], "instruction_list_end": 309, "instructor": 413, "instrumen": 328, "instrument": [283, 287, 304, 317, 328, 347, 357, 359, 381, 397, 407, 417, 419], "instrumentationmap": 415, "instrumented": [276, 304, 328, 347, 357, 368, 371, 397, 415, 416, 417], "instrumenting": [340, 416], "instsp": 413, "insttoreplac": 383, "instvisitor": [333, 383], "insufficient": [324, 346, 357, 393, 399, 413], "insulat": 394, "insult": 290, "int": [277, 278, 280, 285, 289, 291, 292, 293, 313, 320, 323, 324, 327, 328, 329, 332, 335, 339, 340, 341, 342, 344, 354, 355, 357, 359, 360, 362, 363, 366, 367, 383, 393, 394, 395, 398, 401, 403, 404, 405, 410, 412, 413, 415, 416, 418, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 444], "int128": 388, "int16_t": [413, 418], "int2006": 407, "int32": 396, "int32_t": [339, 371, 418], "int32ty": 383, "int32x4_t": 280, "int64_t": [383, 418], "int8_t": 418, "int_get_dynamic_area_offset": 357, "int_min": 388, "int_of_float": [440, 441], "intd": 292, "integ": [27, 28, 30, 80, 116, 118, 120, 122, 174, 207, 209, 212, 214, 270, 272, 273, 275, 278, 281, 282, 289, 291, 292, 299, 313, 317, 323, 324, 327, 328, 332, 333, 337, 339, 343, 359, 362, 366, 371, 383, 385, 386, 388, 393, 398, 401, 403, 404, 409, 412, 413, 418, 427, 437], "integer": [274, 275, 282, 289, 301, 323, 328, 334, 340, 343, 357, 362, 366, 371, 383, 401, 403, 404, 412, 413, 418], "integer_numb": [10, 11, 26, 27, 28, 30, 47, 67, 80, 88, 89, 114, 115, 116, 117, 118, 122, 128, 144, 161, 174, 183, 184, 205, 206, 207, 208, 209, 214, 220, 238, 255, 270], "integertyp": 383, "integr": [286, 323, 341, 359, 360, 363, 368, 385, 394, 398], "integral": [323, 324, 381, 383, 393, 398], "integrat": [287, 339, 385, 398, 415], "integrated": [295, 302, 343, 356, 357, 360, 443], "integrating": [385, 415], "integrator": 385, "integreated": 386, "integrity": [286, 357, 411, 419], "intel": [278, 287, 298, 313, 315, 325, 349, 357, 387, 394, 409, 412, 432], "intel_pstat": 279, "inteldialect": 357, "intelligent": [357, 394], "intelligently": 383, "intend": [287, 330, 333, 343, 383], "intended": [276, 277, 278, 287, 288, 289, 290, 291, 292, 299, 306, 311, 323, 330, 332, 337, 339, 341, 343, 357, 360, 361, 364, 368, 376, 381, 383, 385, 388, 390, 391, 394, 396, 399, 404, 413, 414, 419], "intendend": 357, "intending": 383, "intens": [337, 383], "intent": [280, 288, 289, 291, 299, 330, 357, 360, 368, 404, 431, 441], "intentionally": [291, 357, 394, 414, 426, 436], "inter": [277, 283, 291, 330, 337, 357, 358, 397, 399], "interact": [273, 278, 285, 287, 289, 323, 339, 341, 347, 357, 361, 365, 382, 385, 388, 390, 393, 398, 413, 420, 426, 433, 434, 436, 442], "interacting": [332, 339, 385], "intercept": 359, "intercepted": 359, "interchangeably": [289, 291], "interchanged": 410, "interest": [275, 277, 278, 301, 326, 330, 337, 339, 361, 383, 398], "interested": [277, 289, 295, 296, 323, 326, 330, 332, 337, 339, 345, 376, 383, 385, 393, 398, 408, 419, 421, 425, 434, 435, 442], "interesting": [278, 280, 289, 291, 292, 293, 313, 326, 335, 338, 341, 342, 343, 351, 357, 359, 362, 381, 383, 393, 394, 414, 416, 418, 421, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "interfac": [275, 287, 289, 291, 296, 323, 325, 326, 329, 330, 331, 332, 338, 339, 341, 344, 353, 354, 356, 357, 359, 360, 366, 367, 381, 393, 396, 401, 403, 413, 414, 419, 421, 422, 425, 426, 427, 434, 435, 436, 437, 438, 442], "interfacing": [335, 356, 383], "interfer": [332, 337, 340, 357], "interim": 286, "interior": [339, 351, 358, 398], "interleav": [387, 412], "interleave_count": 412, "interleaved": [275, 387, 410], "interleaving": [275, 357, 412], "intermediary": 383, "intermediat": [281, 287, 310, 312, 321, 324, 326, 331, 332, 335, 339, 341, 343, 353, 355, 357, 362, 383, 389, 398, 407, 413, 419, 426, 436], "intermingled": 357, "intermittent": 341, "intermodular": [360, 419], "internal": [277, 281, 287, 288, 289, 292, 296, 316, 320, 326, 327, 328, 332, 335, 337, 341, 357, 358, 360, 361, 362, 367, 375, 379, 381, 383, 394, 398, 401, 403, 405, 407, 408, 411, 413, 414, 418, 419, 433], "internaliz": [291, 367], "internallinkag": 383, "internally": [289, 293, 313, 331, 332, 337, 340, 357, 368, 383, 399, 401, 420, 427, 431, 437, 441], "internalread": 362, "international": [289, 324], "internet": 385, "interoperat": [278, 332, 357, 379, 383, 420, 434, 442], "interoperating": 339, "interpol": [7, 34, 85, 127, 179, 219], "interpret": [280, 281, 287, 289, 293, 298, 303, 316, 323, 324, 328, 338, 341, 343, 357, 380, 393, 396, 398, 405, 409, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "interpreted": [274, 296, 306, 317, 323, 328, 341, 357, 383, 393, 398, 404, 405, 409, 410], "interpreter": 356, "interpreting": [323, 357, 393], "interprocedural": [277, 357, 360, 368, 394, 414], "interproceedural": 421, "interrupt": [291, 394], "interrupted": [296, 357, 359, 399], "interrupting": 336, "intersect": 291, "interspersed": 417, "intertwined": 358, "interval": [375, 383], "intervening": [275, 281, 313, 396], "intializ": 383, "intimat": 291, "intimmleaf": 343, "into": [21, 108, 199, 275, 276, 277, 278, 280, 281, 282, 284, 285, 287, 288, 289, 290, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 309, 312, 313, 314, 316, 317, 321, 322, 324, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 379, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 401, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "intpred": 362, "intptr_t": [412, 428, 429, 430, 431, 433], "intptrsiz": 339, "intra": [277, 397], "intraprocedural": [285, 365], "intreg": [354, 413], "intregsclass": 413, "intregsregclass": 413, "intregsregclassid": 413, "intregsregisterclass": 413, "intregssubcl": 413, "intregssubregcl": 413, "intregssupercl": 413, "intregssuperregcl": 413, "intregsvt": 413, "intrepid": [426, 436], "intricat": 331, "intrinsic": [278, 317, 322, 337, 358, 362, 383, 388, 392, 411, 412, 413, 419], "intrinsicsnvvm": 367, "intro": [325, 326, 419, 431, 441], "introduc": [277, 278, 289, 292, 327, 334, 343, 351, 355, 357, 365, 366, 383, 385, 394, 398, 405, 413, 420, 421, 423, 424, 429, 430, 439, 440], "introduced": [277, 279, 289, 291, 313, 328, 343, 350, 357, 375, 381, 383, 385, 387, 388, 396, 398, 403, 421, 431, 441], "introducing": [278, 343, 351, 357, 365, 381, 383, 387, 394, 420], "introduct": [322, 326, 341, 342, 363, 419, 443], "introspect": [353, 357, 360, 364, 398], "intrus": [357, 383], "intscalarty": 357, "inttoptr": [337, 396, 398], "intty": 357, "intuit": [357, 365], "invalid": [273, 274, 275, 278, 291, 296, 309, 317, 321, 323, 332, 340, 341, 357, 359, 361, 381, 383, 388, 393, 394, 396, 398, 413, 414, 418, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "invalidat": [275, 277, 309, 361, 381, 383, 396, 414], "invalidated": [275, 358, 383, 414], "invalidating": [275, 414], "invari": [277, 337, 341, 343, 358, 383, 394, 398, 410, 414], "invas": [330, 418], "invented": [379, 401], "invers": [273, 357, 381], "invert": [357, 409], "inverted": [337, 357], "invest": 333, "investig": 316, "investigat": [394, 420], "investigated": [434, 442], "investigating": 343, "invidual": 390, "invit": [421, 422, 423, 424], "invoc": [275, 276, 285, 287, 289, 292, 293, 317, 327, 331, 338, 341, 344, 347, 348, 357, 359, 368, 407, 414, 415, 416, 417], "invocing": 407, "invok": [275, 277, 287, 289, 291, 324, 332, 337, 339, 341, 343, 344, 355, 359, 360, 361, 362, 366, 396, 398, 409, 413, 414, 417, 421, 426, 436, 438], "invoke": 357, "invoked": [283, 287, 288, 292, 304, 323, 327, 357, 368, 383, 409, 413, 414, 431, 438, 441], "invokeinst": 383, "invoking": [281, 285, 287, 368, 383, 407], "invol": 332, "involv": [275, 282, 287, 337, 340, 350, 357, 383, 387, 390, 394, 398, 399, 413, 418, 429, 433, 439], "involved": [278, 289, 313, 333, 339, 340, 354, 383, 390, 394, 398, 399, 416, 426, 431, 436, 441], "involving": [277, 340, 343, 357, 381, 387, 391, 398, 404], "io": [363, 386, 418], "iommu": 275, "ios": [341, 357, 407], "iostream": [367, 416, 432], "ip": 405, "ipa": 358, "ipc": [313, 399], "iphoneos": 407, "ipi": [316, 379], "ipo": [358, 366], "iptr": [343, 357], "ir": [277, 282, 283, 285, 289, 298, 323, 326, 327, 332, 333, 336, 341, 344, 347, 355, 357, 358, 363, 365, 366, 367, 368, 384, 387, 393, 395, 396, 398, 409, 410, 411, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 431, 432, 433, 435, 436, 438, 441, 443], "irbuild": [383, 393, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439], "irc": [290, 326, 330, 382, 390], "irce": 337, "ircompil": 420, "ircompilelai": [420, 421, 422, 423, 424], "irgen": [337, 423, 424], "irgenandtakeownership": [423, 424], "irlai": 421, "irread": 287, "irreducibl": [357, 381, 413], "irrelev": [277, 340, 357], "irrespect": 287, "irtest": 287, "irtransfomrlai": 421, "irtransformlai": [422, 423, 424], "is": [3, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 26, 28, 30, 32, 33, 37, 38, 47, 55, 67, 80, 81, 88, 89, 90, 91, 92, 97, 98, 100, 108, 109, 110, 111, 113, 114, 115, 117, 118, 122, 126, 128, 131, 132, 144, 149, 161, 174, 175, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 199, 200, 201, 205, 206, 208, 209, 210, 214, 217, 218, 220, 226, 238, 243, 255, 256, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 375, 376, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 442], "is64bitmod": 413, "is_base_of": 351, "is_const": 275, "is_dynamic_callstack": 275, "is_null": 336, "is_open": 367, "is_pip": 275, "is_ptr64": 275, "is_restrict": 275, "is_stmt": 334, "is_volatil": 275, "is_zero_undef": 357, "isa": [275, 278, 289, 291, 325, 330, 339, 351, 388, 403, 404, 413, 419], "isa_impl": 351, "isabsoluteaddress": 371, "isaddresstaken": 362, "isalnum": [425, 426, 427, 428, 429, 430, 431, 432, 433], "isalph": [425, 426, 427, 428, 429, 430, 431, 432, 433], "isas": 337, "isascii": [426, 427, 428, 429, 430, 431, 432, 433], "isatleastorstrongerthan": 278, "isbarri": [403, 405], "isbasewithconstantoffset": 343, "isbinaryop": [430, 431, 432, 433], "isbranch": 405, "iscall": [403, 405], "iscommut": 405, "isconst": [275, 281, 383], "isconstantpoolindex": 413, "isconvertibletothreeaddress": 405, "iscxxclass": 393, "isd": [278, 289, 332, 333, 413], "isdeclar": 383, "isdef": 289, "isdefinit": [357, 388, 393], "isdig": [425, 426, 427, 428, 429, 430, 431, 432, 433], "isdopcod": [289, 333], "isdoubl": 403, "isectcoff": 371, "isel": [289, 322, 343, 358, 403, 413], "iseldagtodag": 401, "isellowering": [278, 401], "isempty": 383, "isexternal": 393, "isexternalsymbol": 413, "isfirstclasstyp": 366, "isfloatingpointty": 383, "isfoo": 291, "isfunct": 393, "isglobaladdress": 413, "isgroup": 371, "ish": [430, 440], "isimmediat": 413, "isimplicitcod": 393, "isimplicitdef": 405, "isindirectbranch": 405, "isinlined": 393, "isintegerty": 383, "isjumptableindex": 413, "island": 275, "islandingpad": 362, "islazy": 413, "isload": 289, "isloadfromstackslot": 413, "islocal": [357, 393], "islocaltoun": 388, "isloopinvari": 383, "islvalu": 291, "ismod": 403, "isn": [276, 278, 288, 289, 290, 291, 317, 320, 324, 330, 335, 340, 343, 348, 357, 362, 365, 381, 383, 385, 390, 393, 399, 414, 425, 426, 427, 428, 429, 432, 433, 435, 436, 437, 438, 439], "isnotduplic": 405, "isnull": 291, "isnullvalu": 366, "isobjcclass": 393, "isobviouslysafetofold": 343, "isol": [282, 313, 331, 385, 420, 423, 443], "isolat": [291, 357, 409], "isolated": [279, 287, 289, 326, 331, 357, 383, 398, 431, 441], "isolating": [285, 403], "isomorphic": 335, "isoperandimmequal": 343, "isoperator": [430, 431, 432, 433], "isopt": 323, "isoptimized": [357, 388, 393], "isosdarwin": 433, "ispacked": 281, "isphysicalregist": 289, "isphysreg": 383, "ispic": 413, "ispip": 275, "ispodlik": 383, "ispoint": 366, "ispointertyp": 291, "ispredic": 405, "isprefix": 323, "isprint": 359, "isproto": 281, "isref": 403, "isregist": 289, "isrematerializ": 405, "isrestrict": 275, "isreturn": [403, 405], "issafetospeculat": 398, "isselector": 371, "isset": 323, "issimpl": 278, "issized": 383, "isspac": [359, 425, 426, 427, 428, 429, 430, 431, 432, 433], "isstor": 289, "isstoretostackslot": 413, "isstrongerthan": 278, "issu": [278, 280, 284, 288, 289, 290, 292, 296, 308, 323, 330, 334, 337, 338, 343, 346, 350, 357, 383, 385, 386, 393, 394, 398, 401, 409, 418, 425, 428, 429, 431, 434, 435, 438, 439, 441, 442], "issued": [296, 313, 357], "issuedset": 313, "issuewidth": 313, "issuing": [341, 414], "istargetspecific": 362, "isterminator": [291, 403, 405], "istreambuf_iterator": 367, "istruncatingstor": 413, "isunaryop": [430, 431, 432, 433], "isunordered": 278, "isunpredicatedterminator": 413, "isus": 289, "isv9": 413, "isvararg": 383, "isvectorized": 410, "isvis": 413, "isvolatil": [275, 357], "it": [22, 23, 27, 30, 32, 33, 37, 38, 109, 110, 116, 117, 122, 126, 131, 132, 200, 201, 207, 208, 214, 217, 218, 223, 226, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 371, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "itanium": [305, 334, 338, 411], "itanium_abi_tripl": 409, "item": [280, 281, 288, 299, 301, 308, 323, 332, 334, 337, 356, 357, 359, 366, 383, 393, 398, 403, 418, 431, 441], "iter": [285, 287, 289, 291, 313, 330, 357, 359, 361, 375, 381, 383, 387, 404, 412, 426, 429, 430, 431, 436, 437, 438, 439, 440, 441], "iterat": [277, 282, 288, 289, 291, 323, 343, 357, 360, 361, 381, 383, 413, 429, 439], "iterated": [287, 404, 431, 441], "iterating": [291, 358], "iteratively": 343, "iterator": [289, 291, 323, 327, 339, 366, 403, 413, 415, 418], "ith": 383, "itinerar": [289, 413], "itinerary": [289, 405, 413], "itself": [276, 277, 280, 281, 287, 289, 291, 293, 296, 302, 304, 323, 327, 330, 332, 333, 335, 337, 338, 339, 340, 341, 342, 347, 349, 351, 352, 355, 356, 357, 359, 360, 366, 375, 383, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 401, 403, 404, 405, 409, 410, 414, 418, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "iuml": 289, "ivar": 393, "j1": 407, "j2": 341, "j4": [347, 389], "jacqu": 324, "jagged": 375, "jaguar": 313, "jalu0": 313, "jalu01": 313, "jalu1": 313, "jam": 357, "jammed": [357, 387], "jamming": [357, 381], "jan": [299, 387], "jann": 394, "jarv": 386, "jav": [278, 336, 339, 357, 381, 383, 398, 434, 442], "javascript": [357, 396, 434, 442], "jazz": 384, "jd": 421, "jdiv": 313, "jeff": 399, "jenkin": 385, "jess": 349, "jfpa": 313, "jfpm": 313, "jfpu0": 313, "jfpu01": 313, "jfpu1": 313, "jfpuprf": 313, "jg": 392, "jingling": 387, "jingyu": 324, "jintegerprf": 313, "jit": [285, 287, 291, 293, 298, 303, 330, 335, 339, 341, 342, 352, 356, 357, 367, 380, 396, 398, 419, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442], "jit_serv": 424, "jitcompilecallbackmanag": [422, 423, 424], "jitcompilerfn": 413, "jitcompilerfunct": 413, "jitdylib": [420, 421], "jited": [329, 419], "jitevaluatedsymbol": [420, 421], "jiting": [420, 422, 423, 443], "jitsymbol": [420, 421, 422, 423, 424], "jitsymbolflag": [422, 423, 424], "jittargetaddress": [422, 423, 424], "jittargetmachinebuild": [420, 421], "jitted": [309, 383], "jlagu": 313, "jlsagu": 313, "jmp": [357, 394], "jmpq": 394, "jmul": 313, "jn": [346, 349], "jne": [289, 394], "job": [287, 351, 359, 365, 385, 399, 414, 421], "joerg": 385, "john": [291, 330], "join": [275, 298, 383, 414, 416], "joined": [359, 383], "joining": 357, "jok": [290, 385], "jon": 387, "jonathan2251": 443, "jour": 419, "journal": 387, "journey": [431, 441], "jp": 419, "jpg": 359, "jsagu": 313, "json": [304, 308, 322, 405, 407], "jsonnrevnum": 385, "jstc": 313, "jtmb": [420, 421], "judg": [330, 394], "juggl": 324, "july": [339, 385, 415], "jump": [281, 286, 323, 327, 332, 334, 352, 357, 384, 388, 394, 411, 413, 422, 429, 439], "jumping": [413, 433], "jumptabl": [281, 357, 362], "junip": 275, "junk": [436, 437, 438, 439, 440, 441], "just": [276, 277, 278, 279, 280, 281, 282, 285, 288, 289, 291, 292, 294, 296, 298, 299, 301, 304, 306, 308, 313, 314, 316, 323, 324, 327, 328, 330, 334, 335, 340, 341, 342, 343, 344, 346, 349, 350, 351, 352, 356, 357, 359, 362, 363, 365, 366, 367, 379, 381, 382, 383, 384, 385, 388, 389, 392, 393, 394, 395, 396, 398, 399, 401, 403, 405, 407, 408, 409, 413, 414, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "justified": 299, "justify": 360, "justin": 343, "jvalu0": 313, "jvalu1": 313, "jvimul": 313, "jvm": [434, 442], "k": [274, 279, 289, 323, 351, 357, 394, 412, 421, 422, 423, 424, 433], "kabin": 275, "kaleidoscop": [366, 383, 420, 421, 422, 423, 424], "kaleidoscopej": [421, 422, 423, 424, 428, 429, 430, 431, 433, 443], "kaver": 275, "kawahito": 289, "kb": 391, "kd": 275, "kdtre": 386, "keep": [277, 289, 292, 323, 324, 327, 330, 331, 335, 339, 343, 351, 357, 360, 365, 366, 381, 383, 385, 391, 393, 399, 405, 409, 414, 415, 419, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442], "keeping": [289, 357, 381, 387, 393, 412, 414, 427, 428, 429, 430, 431, 433], "kept": [275, 277, 291, 327, 330, 358, 390, 414], "kernarg": 275, "kernarg_address": 275, "kernarg_segment_align": 275, "kernarg_segment_alignment": 275, "kernarg_segment_byte_siz": 275, "kernarg_segment_siz": 275, "kernargsegmentalign": 275, "kernargsegmentsiz": 275, "kernel": [278, 279, 289, 298, 313, 324, 331, 346, 357, 359, 386, 394, 412, 413, 419, 434, 442], "kernel_code_entry_byte_offset": 275, "kernel_code_version_major": 275, "kernel_param_0": 367, "kernel_param_1": 367, "kernel_param_2": 367, "kernelparam": 367, "kevin": 289, "key": [275, 281, 289, 291, 309, 330, 343, 351, 354, 357, 362, 366, 383, 385, 394, 398, 401, 405, 414, 422], "keycol": 354, "keyring": 341, "keystrok": 291, "keyt": 383, "keytyp": 393, "keyword": [277, 284, 289, 323, 326, 328, 338, 340, 357, 359, 388, 393, 401, 403, 404, 405, 409, 412, 414, 425, 429, 430, 431, 432, 433, 435, 439, 440, 441], "kib": 323, "kill": [285, 293, 358, 362], "killall": 359, "killed": [289, 359, 362, 414], "kind": [272, 273, 274, 275, 278, 281, 283, 289, 290, 291, 297, 299, 301, 323, 328, 330, 332, 333, 335, 336, 338, 343, 351, 353, 356, 357, 358, 359, 360, 362, 365, 366, 371, 381, 383, 390, 393, 394, 395, 396, 401, 411, 416, 417, 420, 430, 431, 432, 433, 440, 441], "kistanov": 345, "klaus": 385, "klimek": 382, "kmean": 386, "knock": 291, "know": [277, 278, 280, 284, 285, 287, 288, 289, 291, 296, 313, 323, 326, 328, 329, 330, 335, 337, 339, 341, 342, 345, 352, 357, 359, 360, 363, 367, 375, 379, 382, 383, 385, 390, 393, 394, 395, 397, 398, 409, 411, 412, 413, 414, 418, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "knowing": [288, 289, 313, 330, 332, 341, 342, 383, 412, 430, 432, 440], "knowledg": [281, 289, 291, 328, 330, 339, 357, 363, 364, 368, 379, 381, 395, 409, 410, 434, 442], "known": [277, 278, 281, 287, 289, 291, 293, 324, 332, 337, 339, 340, 341, 342, 350, 351, 357, 367, 381, 383, 384, 389, 392, 394, 398, 403, 408, 409, 411, 413, 414, 418, 419, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "knownsafevalu": 383, "koblenz": 387, "koch": 394, "komatsu": 289, "kripk": 386, "kruskal": 386, "kryomodel": 413, "kryowrite_2cyc_xy_norsv_67ln": 413, "kryowrite_2cyc_xy_xy_150ln": 413, "ksdbginfo": 433, "kw1": 359, "kw2": 359, "kw3": 359, "kwalify": 444, "kwd": [435, 436, 437, 438, 439, 440, 441], "l0": 413, "l1": [275, 289, 313, 413], "l10": 416, "l1d": 313, "l2": [275, 413], "l3": 413, "l4": 413, "l5": 413, "l6": 413, "l7": 413, "lab": [345, 419], "label": [0, 1, 2, 274, 275, 281, 282, 289, 327, 332, 335, 336, 339, 343, 355, 365, 366, 367, 381, 383, 388, 393, 410, 413, 416, 429, 431, 439, 441], "label0": 357, "label_branch_weight": 283, "labeled": 326, "labelled": 357, "labeltyp": 383, "labf": 323, "labor": 323, "laborious": 383, "lack": [286, 289, 290, 313, 339, 340, 380, 385, 394, 402, 405, 438], "lacking": [357, 403, 404], "lad": 323, "laden": [434, 442], "laghos": 386, "lah": 407, "lahf": 394, "lai": [277, 338, 362, 375, 388, 420, 421, 422, 423, 434, 442], "laid": [280, 289, 330, 357, 374, 375, 379, 383, 438], "lakos": 291, "lambd": [343, 383, 420, 423, 424], "lambdaresolv": [422, 423, 424], "lammp": 386, "lan": [273, 275, 343, 357], "lanczos": 386, "land": [357, 398], "landed": 330, "landing": [327, 330, 332, 355, 357, 362], "landingpad": [327, 332, 381], "landscap": 385, "lang": 323, "langref": [278, 333, 337, 367], "languag": [278, 287, 288, 289, 290, 292, 297, 300, 307, 310, 312, 321, 323, 324, 325, 326, 327, 330, 331, 332, 334, 336, 338, 339, 340, 341, 348, 358, 359, 362, 367, 381, 383, 386, 387, 396, 398, 401, 402, 405, 409, 412, 413, 417, 418, 419, 420, 421, 426, 427, 428, 432, 433, 436, 437, 438], "language_vers": 275, "languagevers": 275, "larg": [275, 278, 281, 285, 289, 291, 293, 296, 298, 301, 310, 313, 323, 330, 331, 333, 334, 341, 343, 347, 350, 354, 355, 357, 359, 365, 367, 371, 375, 379, 381, 383, 384, 386, 388, 391, 393, 394, 396, 398, 401, 405, 407, 409, 413, 415, 417, 422, 428, 438], "largeconst": 396, "largely": [291, 324, 339, 413], "largest": [80, 174, 270, 273, 289, 334, 337, 357, 371], "last": [273, 278, 281, 289, 291, 292, 296, 299, 313, 323, 327, 330, 332, 341, 342, 350, 351, 357, 363, 365, 368, 375, 382, 383, 385, 395, 398, 403, 404, 409, 410, 412, 413, 414, 417, 420, 425, 428, 430, 433, 437, 440], "lastchar": [425, 426, 427, 428, 429, 430, 431, 432, 433], "lastinst": 413, "lastly": [353, 409, 414, 433], "lastopc": 413, "lat": [275, 276, 278, 283, 286, 287, 288, 291, 292, 304, 327, 328, 330, 332, 337, 341, 342, 343, 357, 359, 361, 362, 363, 366, 375, 381, 382, 383, 384, 385, 387, 391, 393, 395, 396, 398, 403, 409, 410, 413, 414, 415, 420, 426, 427, 428, 429, 430, 431, 433, 436, 437, 438, 439, 440, 441], "latch": 357, "latenc": [289, 313, 416], "latency": [298, 309, 313, 357, 388, 394], "latest": [287, 292, 294, 331, 341, 342, 343, 363, 382, 388, 389, 407], "latt": [274, 278, 289, 327, 343, 357, 366, 383, 393, 398, 403, 410, 413, 426, 436], "lattn": [385, 434, 442], "lattnerrevnum": 385, "launch": [324, 367, 422], "launched": [275, 367], "launching": 367, "lav": 386, "lavamd": 386, "law": [291, 390], "lawyer": 330, "lay": [289, 291, 340, 357, 358, 383, 411, 433, 438, 439, 440, 441], "layer": [338, 422, 443], "layered": 291, "layering": 385, "laying": 411, "layout": [275, 280, 287, 288, 316, 324, 326, 328, 337, 339, 340, 349, 371, 376, 398, 413, 417, 419, 428, 432], "lazi": 421, "lazily": [281, 360, 383, 388, 420, 421, 422, 423, 424, 438], "laziness": [277, 420, 422, 443], "lazy": [277, 357, 420, 421, 423, 424, 428, 443], "lazyresolverfn": 413, "lbar": 289, "lbb0_1": 394, "lbb0_2": [392, 394], "lbb0_3": 394, "lbb0_4": 394, "lbb0_5": 394, "lbb0_n": 394, "lbd": 443, "lbl": 386, "lcov": [304, 388], "lcpi0_0": 409, "lcssa": 358, "lcud": 367, "lcudart": 324, "lcudart_static": 324, "ld": [0, 1, 2, 4, 21, 27, 80, 82, 108, 116, 174, 176, 199, 207, 270, 274, 275, 287, 323, 338, 341, 344, 346, 348, 367, 413], "ld64": 368, "ld_preload": 391, "ldflag": [303, 344, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433], "ldl": 324, "ldm": 357, "ldpxi": 362, "ldpxpost": 362, "ldr": [334, 364, 405], "ldrd": 278, "ldrex": 278, "ldri": 413, "ldrr": 413, "lds_siz": 275, "ldststoreupd": 289, "lea": 394, "lead": [278, 288, 289, 291, 309, 323, 327, 330, 340, 343, 357, 359, 381, 383, 394, 397, 422], "leading": [292, 327, 340, 344, 348, 357, 383, 418, 426, 433, 436], "leaf": [297, 332, 393, 416], "leak": [296, 334, 339, 355, 357, 392, 394, 409, 435], "leaked": 394, "leaking": [339, 394], "leaksanitiz": 359, "leaky": 359, "leap": 382, "leaq": 392, "learn": [291, 341, 357, 359, 366, 382, 383, 421], "learned": [363, 379, 395, 421, 431, 441], "learning": [290, 386, 434, 442], "leary": 324, "least": [275, 277, 278, 279, 280, 281, 289, 291, 296, 299, 313, 315, 316, 323, 330, 332, 338, 343, 346, 347, 349, 357, 359, 365, 381, 383, 385, 389, 394, 396, 398, 401, 403, 404, 413, 415, 417, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "leav": [279, 296, 327, 330, 344, 352, 357, 359, 366, 367, 381, 382, 385, 387, 394, 398, 413, 421], "leaving": [284, 323, 327, 335, 339, 357, 393], "leb": 328, "leb128": [289, 297], "lebarcher": 385, "lectur": 27, "left": [273, 274, 275, 281, 285, 288, 289, 291, 299, 330, 337, 357, 366, 381, 383, 403, 405, 408, 412, 413, 418, 420, 426, 427, 429, 433, 436, 437, 439], "leftr": 366, "legacy": [281, 287, 339, 357, 388, 410, 416, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432], "legacycompileondemandlai": 422, "legacyircompilelai": [388, 422, 423, 424], "legacyirtransformlai": [422, 423, 424], "legacypassmanag": [416, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433], "legacyrtdyldobjectlinkinglai": [422, 423, 424], "legal": [275, 278, 289, 324, 330, 332, 333, 340, 343, 357, 364, 365, 367, 383, 387, 398, 409], "legalact": 413, "legality": 343, "legaliz": 333, "legalizeact": 413, "legalized": [289, 333, 343, 362], "legalizedag": 333, "legalizeop": 333, "legally": [289, 383, 387], "legitimat": 291, "legitimately": 291, "len": 357, "length": [280, 281, 296, 299, 304, 323, 328, 340, 357, 359, 371, 374, 375, 381, 383, 393, 394, 395, 398, 401, 403, 409, 412, 437, 438, 439, 440, 441], "lengthen": 309, "less": [274, 275, 279, 280, 281, 289, 291, 292, 296, 299, 304, 313, 323, 328, 330, 335, 337, 339, 341, 346, 355, 357, 359, 363, 366, 381, 383, 385, 387, 389, 393, 394, 395, 398, 405, 409, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "let": [276, 281, 289, 291, 292, 323, 324, 326, 327, 328, 340, 343, 345, 351, 354, 357, 360, 363, 365, 366, 367, 375, 380, 382, 383, 385, 390, 393, 394, 395, 397, 398, 405, 408, 413, 414, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "letitem": 404, "letlist": 404, "letter": [281, 323, 357], "letting": [292, 340, 352, 434, 442], "leukocyt": 386, "level": [275, 276, 277, 278, 281, 283, 284, 287, 290, 292, 297, 301, 302, 313, 316, 318, 324, 325, 326, 327, 329, 330, 332, 336, 337, 338, 339, 340, 341, 347, 355, 356, 358, 361, 365, 366, 367, 368, 375, 379, 383, 384, 385, 388, 394, 396, 398, 403, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "leverag": [332, 339, 341, 383], "leveraged": 417, "lex": [416, 426, 427, 428, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443], "lex_comment": [435, 436, 437, 438, 439, 440, 441], "lex_ident": [435, 436, 437, 438, 439, 440, 441], "lex_numb": [435, 436, 437, 438, 439, 440, 441], "lexed": 404, "lexer": [338, 363], "lexical": [289, 335, 357, 393, 398, 426, 433, 436], "lexicalblock": 433, "lexically": [291, 404, 428, 438], "lexicographical": 366, "lexicographically": 291, "lexicon": 419, "lexidentifi": [333, 416], "lexloc": 433, "lf_typeserver2": 393, "lfenc": 394, "lfoo": 289, "lfunc_end0": 275, "lgkm_cnt": [80, 174, 270], "lgkmcnt": [80, 174, 270, 275], "lgkmcnt_sat": [80, 174, 270], "lgtm": [326, 358, 382], "lh": [291, 357, 366, 407, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "lhs_val": [437, 438, 439, 440, 441], "lhse": [431, 432, 433], "li": [291, 323, 339, 357, 396, 398, 414], "lib": [275, 287, 289, 291, 295, 301, 303, 309, 316, 318, 323, 324, 329, 331, 333, 334, 339, 342, 344, 349, 362, 366, 383, 384, 391, 393, 399, 401, 413, 414, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433], "lib64": [287, 324, 341], "libc": [291, 305, 324, 330, 332, 341, 348, 357, 359, 383, 434, 442], "libcall": [343, 408], "libclang_rt": [347, 415], "libclc": 330, "libcmt": 342, "libcud": 367, "libcxx": [287, 341, 385, 389], "libcxxab": [287, 341], "libd": 303, "liberal": 330, "libff": [287, 380], "libfil": 303, "libfuzz": [338, 388, 419], "libgcc": [332, 392], "libgcc1": 349, "libllvm": [287, 341, 380, 383], "libllvmcor": 383, "liblto": 344, "liblzm": 349, "libm": [427, 428, 437, 438], "libnam": [303, 414], "libomp": 389, "libopagent": 380, "libpath": [311, 334], "libpfm": 287, "libpos": 323, "librar": [279, 281, 287, 288, 293, 299, 301, 302, 303, 304, 316, 318, 321, 323, 330, 331, 334, 335, 341, 342, 347, 348, 349, 352, 356, 357, 359, 381, 383, 388, 393, 394, 399, 413, 415, 419, 420, 426, 427, 434, 436, 437, 442], "library": [277, 278, 281, 287, 293, 295, 298, 302, 303, 304, 312, 322, 325, 329, 330, 334, 335, 337, 338, 339, 340, 342, 343, 347, 348, 349, 356, 360, 367, 368, 374, 381, 384, 388, 393, 407, 409, 412, 413, 416, 418, 419, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 440, 442], "library_nam": 356, "librarygroup": 356, "librarynam": [339, 384], "libsampl": 384, "libscudo": 391, "libsfgcc1": 349, "libstdc": [291, 305, 324, 331, 332, 341, 349], "libsupport": 385, "libsystem": 291, "libthread_db": 329, "libtinfo": 349, "libunwind": [332, 341], "libxml": 359, "libxml2": [349, 359], "libxxx": 349, "libz": 357, "lic": 381, "licens": [291, 341, 350, 414, 420, 421, 422, 423, 424], "licensed": [330, 344], "licensing": 386, "licm": [278, 337, 357, 358, 383, 414], "lif": [291, 309, 324, 330, 337, 359, 419], "lifelong": 419, "lifetim": [289, 327, 330, 337, 339, 383, 414, 415, 420, 422], "lift": 337, "lifted": 387, "lifting": 421, "light": [291, 357], "lightly": [357, 389, 420], "lightweight": [291, 296, 331, 383], "lik": [276, 277, 278, 281, 287, 289, 292, 298, 299, 306, 309, 313, 316, 323, 324, 327, 328, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 347, 349, 351, 356, 357, 359, 360, 362, 363, 364, 365, 366, 368, 375, 379, 381, 382, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 398, 399, 403, 404, 405, 407, 408, 409, 411, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "likeliness": [283, 357], "likely": [275, 278, 283, 285, 291, 324, 330, 333, 337, 338, 340, 341, 346, 357, 359, 361, 367, 380, 381, 383, 385, 394, 399, 401, 405, 408, 410, 422], "likewis": 357, "lim": [275, 285, 291, 293, 313, 316, 323, 357, 359, 390, 392, 393, 394, 396, 414, 419], "limit": [55, 149, 243, 273, 275, 289, 313, 323, 334, 341, 357, 359, 365, 381, 383, 394, 396, 403, 418, 419, 433], "limited": [6, 84, 178, 274, 275, 277, 278, 289, 290, 302, 313, 330, 337, 339, 340, 353, 357, 371, 383, 385, 393, 394, 428, 430, 438, 440], "limiting": [394, 429, 439], "lin": [276, 278, 285, 287, 288, 289, 291, 292, 293, 296, 297, 298, 299, 300, 301, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 324, 328, 329, 330, 332, 334, 338, 339, 341, 342, 344, 348, 352, 353, 356, 357, 358, 359, 362, 363, 365, 368, 371, 374, 379, 380, 383, 384, 385, 389, 391, 393, 394, 395, 403, 405, 407, 408, 409, 413, 414, 416, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "linaro": [346, 348], "linear": [277, 289, 291, 297, 298, 371, 383, 385, 414], "lineariz": 340, "linearized": [340, 383, 387], "linearscan": [289, 298, 414], "linebegin": 404, "lineend": 404, "lineno": 433, "ling": 398, "link": [28, 118, 209, 271, 272, 275, 279, 285, 286, 287, 289, 291, 293, 294, 295, 297, 303, 304, 311, 314, 321, 323, 338, 339, 348, 349, 350, 352, 356, 358, 359, 363, 366, 367, 368, 371, 376, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 393, 394, 395, 398, 400, 406, 407, 409, 411, 413, 415, 416, 419, 420, 421, 425, 426, 427, 428, 430, 432, 435, 437, 438, 439, 440, 441], "link_component": 384, "linkabl": 275, "linkag": [281, 289, 306, 320, 337, 341, 366, 367, 383, 427, 433, 437], "linkagenam": [357, 393], "linkagetyp": 383, "linkallcodegencomponent": 414, "linked": [275, 277, 278, 287, 289, 291, 294, 299, 304, 312, 314, 315, 321, 328, 330, 334, 338, 339, 341, 348, 349, 352, 356, 357, 358, 359, 365, 366, 367, 371, 383, 384, 391, 392, 393, 409, 414, 416, 422, 428, 438, 442], "linker": [291, 334, 341, 357], "linkinfo": 379, "linking": [285, 287, 291, 294, 299, 303, 304, 323, 324, 338, 349, 356, 357, 359, 360, 376, 383, 391, 392, 407, 413, 414, 415, 430], "linkonc": [281, 341, 357, 367, 383], "linkonce_odr": [281, 337, 357, 367], "linkonceanylinkag": 383, "linkonceodrlinkag": 383, "linpack": [407, 412], "linus": 385, "linux": [278, 287, 289, 291, 309, 324, 329, 331, 332, 338, 341, 344, 346, 347, 348, 349, 357, 359, 388, 394, 396, 407, 409, 415, 419, 427, 428, 432], "liquid": 275, "lis": 289, "lisp": [339, 434, 442], "list": [275, 276, 277, 278, 281, 283, 285, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 316, 317, 321, 322, 326, 329, 330, 331, 332, 333, 335, 337, 338, 339, 341, 343, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 375, 380, 381, 382, 384, 385, 389, 390, 391, 392, 393, 395, 396, 398, 401, 403, 404, 405, 407, 409, 412, 413, 414, 415, 416, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "list_nam": 288, "list_of_list": 288, "list_property_nam": 356, "listconcat": [403, 404], "listed": [275, 278, 287, 289, 291, 304, 314, 320, 323, 326, 335, 339, 341, 354, 356, 357, 383, 384, 390, 398, 412, 414], "listen": 424, "listing": [295, 299, 323, 375, 383, 398, 404, 413, 425, 435], "lit": [276, 287, 295, 342, 347, 384, 385, 393, 397, 407, 409], "lit_arg": 409, "lit_config": 296, "lit_filt": 296, "lit_num_shard": 296, "lit_run_shard": 296, "litconfig": 296, "literal": [48, 52, 56, 59, 61, 145, 147, 150, 155, 239, 241, 244, 249, 281, 288, 291, 299, 323, 336, 357, 362, 364, 383, 401, 403, 404, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "literally": [281, 323, 427, 437], "literat": 383, "literatur": 289, "litloc": 433, "littered": 330, "littl": [275, 280, 281, 289, 323, 331, 335, 339, 340, 343, 346, 357, 363, 366, 368, 379, 381, 383, 393, 395, 399, 411, 413, 414, 417, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442], "litvalu": 281, "liv": [275, 277, 280, 287, 291, 309, 324, 332, 339, 341, 342, 343, 352, 355, 357, 358, 360, 381, 383, 387, 388, 393, 394, 396, 398, 414, 427, 428, 431, 437, 441], "live_begin": 339, "live_end": 339, "live_iterator": 339, "live_siz": 339, "livecount": 339, "lived": 385, "livein": [309, 362], "liveinterval": [289, 298], "liveintervalanalys": 289, "liveliness": 309, "liveness": [381, 398], "liveoffset": 339, "liveonentry": 365, "liveout": [396, 398], "living": 357, "ljti0_0": 394, "ll": [278, 285, 288, 289, 291, 292, 293, 295, 297, 300, 306, 307, 321, 323, 324, 329, 330, 333, 335, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 357, 362, 365, 367, 368, 381, 382, 383, 385, 389, 390, 393, 398, 399, 409, 414, 415, 416, 418, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "llbuild": 441, "llc": [285, 289, 292, 293, 295, 298, 336, 338, 339, 341, 342, 347, 352, 357, 362, 367, 368, 393, 398, 409, 413, 414, 416, 432], "lld": [275, 287, 291, 311, 341, 347, 348, 368, 385, 388], "lldb": [287, 291, 329, 330, 341, 356, 383, 385, 393], "lli": [293, 295, 297, 329, 341, 342, 352, 368, 388, 414], "llibnam": 323, "lljit": 388, "lllex": [333, 416], "llnl": 386, "llpars": [333, 416], "llt": 343, "lltok": 333, "llvalu": [437, 438, 439, 440, 441], "llvm": [276, 286, 292, 293, 294, 322, 323, 324, 329, 336, 337, 343, 348, 353, 355, 356, 361, 362, 363, 365, 366, 368, 371, 375, 376, 379, 382, 386, 389, 390, 391, 394, 395, 403, 404, 405, 407, 408, 410, 411, 418, 420, 421, 422, 423, 424, 425, 426, 430, 432, 433, 435, 436, 440], "llvm_": 288, "llvm_abi_breaking_check": 287, "llvm_all_target": [341, 413], "llvm_analys": [437, 438, 439, 440, 441], "llvm_any": 333, "llvm_append_vc_rev": 287, "llvm_build_32_bit": 287, "llvm_build_benchmark": 287, "llvm_build_d": 341, "llvm_build_doc": 287, "llvm_build_exampl": 287, "llvm_build_instrumented_coverag": 287, "llvm_build_llvm_dylib": [287, 341], "llvm_build_root": 287, "llvm_build_test": 287, "llvm_build_tool": 287, "llvm_ccache_build": 287, "llvm_ccache_d": 287, "llvm_ccache_maxsiz": 287, "llvm_cmake_d": 287, "llvm_compiler_job": 287, "llvm_create_xcode_toolchain": 287, "llvm_debug": [285, 321, 323], "llvm_definit": 287, "llvm_dir": [287, 366], "llvm_doxygen_qch_filenam": 287, "llvm_doxygen_qhelpgenerator_path": 287, "llvm_doxygen_qhp_cust_filter_nam": 287, "llvm_doxygen_qhp_namespac": 287, "llvm_doxygen_svg": 287, "llvm_dylib_component": [287, 341], "llvm_enable_abi_breaking_check": 383, "llvm_enable_assert": [287, 383], "llvm_enable_cxx1y": 287, "llvm_enable_dia_sdk": 287, "llvm_enable_doxygen": [287, 341], "llvm_enable_doxygen_qt_help": 287, "llvm_enable_eh": 287, "llvm_enable_expensive_check": 287, "llvm_enable_ff": 287, "llvm_enable_libpfm": 287, "llvm_enable_lld": 287, "llvm_enable_lto": 287, "llvm_enable_pedantic": 287, "llvm_enable_pic": 287, "llvm_enable_project": [287, 341], "llvm_enable_rtt": 287, "llvm_enable_sphinx": [287, 341], "llvm_enable_thread": 287, "llvm_enable_warning": 287, "llvm_enable_werror": 287, "llvm_enable_zlib": 287, "llvm_executionengin": [438, 439, 440, 441], "llvm_executionengine_orc_kaleidoscopejit_h": [420, 421, 422, 423, 424], "llvm_experimental_targets_to_build": 388, "llvm_external_": 287, "llvm_external_project": 287, "llvm_force_use_old_toolchain": 287, "llvm_gc_root_chain": 339, "llvm_gcc_dir": 408, "llvm_include_benchmark": 287, "llvm_include_dir": 287, "llvm_include_exampl": 287, "llvm_include_test": 287, "llvm_include_tool": 287, "llvm_install_binutils_symlink": 287, "llvm_install_doxygen_html_d": 287, "llvm_install_ocamldoc_html_d": 287, "llvm_install_sphinx_html_d": 287, "llvm_lib": 287, "llvm_libdir_suffix": 287, "llvm_library_visibility": 339, "llvm_link_llvm_dylib": 287, "llvm_linker_opt": 334, "llvm_lit_arg": 287, "llvm_lit_tools_d": [287, 342], "llvm_map_components_to_libnam": 287, "llvm_map_components_to_librar": 287, "llvm_obj_root": [384, 408, 409], "llvm_on_unix": 399, "llvm_on_xyz": 399, "llvm_optimized_tablegen": [287, 341], "llvm_package_vers": 287, "llvm_parallel_compile_job": 287, "llvm_parallel_link_job": 287, "llvm_profdata_fil": [276, 287], "llvm_reverse_iter": 287, "llvm_revis": 287, "llvm_scalar_opt": [438, 439, 440, 441], "llvm_site_config": [342, 409], "llvm_src_dir": 346, "llvm_src_root": [384, 408], "llvm_stackmap": 396, "llvm_svn_rw": 329, "llvm_tablegen": 287, "llvm_target": [438, 439, 440, 441], "llvm_target_arch": 287, "llvm_target_definit": 413, "llvm_targets_to_build": [287, 331, 341, 342], "llvm_temporarily_allow_old_toolchain": [287, 388], "llvm_tools_binary_d": 287, "llvm_tripl": 309, "llvm_unreach": [291, 366, 383], "llvm_use_intel_jitevent": 287, "llvm_use_link": 287, "llvm_use_oprofil": 287, "llvm_use_perf": 287, "llvm_use_sanitiz": 287, "llvm_yaml_is_document_list_vector": 418, "llvm_yaml_is_flow_sequence_vector": 418, "llvm_yaml_is_sequence_vector": 418, "llvm_yaml_strong_typedef": 418, "llvmanalys": 384, "llvmasmpars": 384, "llvmbb": 419, "llvmbc": 281, "llvmbitcod": 333, "llvmbitread": 384, "llvmbuild": [291, 302, 419, 438], "llvmcfiverify": 286, "llvmconfig": 287, "llvmcontext": [357, 368, 416, 420, 421, 427, 428, 429, 430, 431, 432, 433], "llvmcontextimpl": 416, "llvmcor": [350, 384, 389], "llvmcreatedisasm": 364, "llvmcreatesimplemcjitmemorymanag": 396, "llvmdevmeeting": 343, "llvmdisasminstruct": 364, "llvmdisassembler_option_usemarkup": 364, "llvmdummy": 413, "llvmdummyasmprint": 413, "llvmdummycodegen": 413, "llvmfoldingbuild": 438, "llvmfuzzerinitializ": 359, "llvmfuzzertestoneinput": 359, "llvmgccdir": 408, "llvmgettypekind": 333, "llvmgold": 344, "llvmgrep": 341, "llvmhello": 414, "llvminitializesparcasmprint": 413, "llvminitializesparctargetinfo": 413, "llvmlab": 385, "llvmlib": 384, "llvmlibthin": 311, "llvmmemorymanagerallocatedatasectioncallback": 396, "llvmorg": 341, "llvmpassnam": 287, "llvmpush": 385, "llvmrock": 291, "llvmscalaropt": 384, "llvmsetdisasmopt": 364, "llvmsupport": [341, 384], "llvmtarget": 384, "llvmtargetmachin": 413, "llvmtop": 414, "llvmtransformutil": 384, "llvmtypekind": 333, "llvmtyperef": 333, "lma": 416, "lmalloc": 323, "ln": [289, 344, 346, 349], "lnt": [349, 385, 389], "lo": 357, "lo12": 334, "lo16": 289, "load": [24, 25, 111, 112, 113, 202, 203, 204, 273, 275, 277, 278, 280, 281, 285, 287, 291, 292, 293, 296, 297, 298, 302, 306, 316, 321, 327, 329, 332, 336, 339, 340, 341, 343, 352, 356, 358, 362, 364, 365, 366, 367, 381, 383, 385, 387, 388, 393, 394, 396, 397, 398, 409, 411, 413, 414, 416, 419, 428, 431, 432, 433, 441], "loadabl": 339, "loadable_modul": 339, "loaded": [275, 277, 278, 280, 287, 289, 293, 296, 302, 316, 321, 323, 334, 343, 357, 359, 360, 361, 367, 381, 391, 394, 396, 398, 413, 415, 416], "loading": [275, 279, 280, 289, 302, 330, 336, 337, 339, 357, 367, 394, 413, 414, 415, 424], "loadinst": 291, "loadlal": 357, "loadlibrarypermanently": [422, 423, 424], "loadobject": 361, "loadregfromaddr": 413, "loadregfromstackslot": [289, 413], "loadsdnod": 383, "loc": [308, 334, 393, 398, 413, 433], "loc0": 396, "loc1": 396, "local": [275, 277, 281, 282, 289, 291, 292, 297, 298, 304, 306, 314, 323, 324, 332, 335, 346, 348, 358, 361, 362, 366, 367, 381, 387, 391, 393, 394, 397, 398, 401, 404, 409, 414, 418, 419, 425, 427, 428, 435, 437, 438], "local_buff": 394, "local_unnamed_addr": [281, 334, 357], "localaddress": 357, "localdynamic": [281, 357], "localescap": 332, "localexec": [281, 357], "locality": [291, 339, 357, 383], "localized": 330, "locally": [291, 347, 385], "localrecov": 332, "locat": [6, 37, 84, 131, 178, 210, 223, 273, 275, 277, 278, 287, 289, 291, 295, 296, 299, 302, 316, 323, 328, 332, 334, 336, 337, 339, 340, 349, 352, 357, 358, 361, 362, 364, 367, 381, 383, 384, 389, 390, 393, 394, 396, 398, 412, 413, 418, 419, 430, 431, 440, 441], "located": [289, 292, 296, 313, 328, 339, 341, 357, 361, 391, 396, 399, 409, 413, 419], "lock": [278, 357, 383, 385], "locked": [337, 385], "locking": [278, 383, 414], "lod": 273, "log": [277, 285, 292, 296, 330, 359, 381, 382, 383, 385, 394, 408, 412, 415, 416, 421], "log10": 412, "log2": 412, "log_arg1": 415, "logallunhandlederror": [423, 424], "logarithm": [281, 357], "logarithmic": 383, "logcount": 371, "logerror": [426, 427, 428, 429, 430, 431, 432, 433], "logerrorp": [426, 427, 428, 429, 430, 431, 432, 433], "logerrorv": [427, 428, 429, 430, 431, 432, 433], "logfil": 415, "logg": 390, "logged": 417, "logging": [359, 383, 415, 417], "logic": [289, 291, 296, 313, 343, 351, 366, 387, 394, 420, 426, 429, 430, 431, 437, 439, 440, 441], "logical": [274, 289, 292, 330, 356, 357, 371, 381, 383, 430, 440], "logically": [289, 330, 340, 356, 357], "long": [276, 277, 278, 283, 284, 285, 288, 289, 291, 293, 296, 299, 301, 304, 313, 317, 324, 325, 330, 332, 334, 335, 337, 338, 339, 340, 341, 343, 347, 351, 353, 357, 359, 363, 375, 379, 381, 382, 383, 384, 385, 388, 389, 390, 393, 394, 395, 398, 399, 404, 409, 413, 414, 418, 421, 424, 427, 428, 431, 434, 437, 441, 442], "longjmp": [357, 434, 442], "look": [277, 278, 281, 287, 288, 289, 291, 292, 313, 316, 320, 323, 326, 327, 329, 330, 332, 333, 339, 340, 341, 342, 344, 351, 356, 357, 358, 362, 363, 366, 367, 368, 371, 375, 379, 381, 382, 383, 384, 385, 392, 393, 394, 395, 396, 398, 401, 409, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442], "looked": [334, 357, 383, 420], "looking": [277, 287, 291, 292, 296, 308, 313, 323, 324, 328, 333, 334, 350, 360, 365, 366, 379, 381, 382, 383, 385, 393, 394, 398, 401, 403, 404, 415, 418, 426, 427, 428, 429, 430, 431, 432, 433, 438, 441], "lookup": [291, 308, 341, 343, 357, 366, 379, 381, 383, 401, 403, 413, 417, 420, 421, 427, 430, 434, 437, 440, 441, 442], "lookup_funct": [437, 438, 439, 440, 441], "lookupflag": [422, 423, 424], "lookuptarget": 432, "loop": [275, 277, 278, 289, 292, 313, 324, 327, 337, 339, 341, 358, 359, 366, 368, 383, 387, 393, 398, 403, 407, 413, 419, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442], "loop_bb": [439, 440, 441], "loop_end": [28, 118, 209], "loop_end_bb": [439, 440, 441], "loop_header_weight": 357, "loopbb": [429, 430, 431, 432, 433], "loopcond": [429, 430, 431, 432, 433, 439, 440, 441], "loopdistribu": 410, "loopdistribut": 410, "loopend": [429, 430, 431, 432, 433, 441], "loopendbb": [429, 430, 431, 432, 433], "loopfullunroll": 410, "loophead": [357, 429, 430], "loopid": 410, "loopinfo": 414, "loopinfobas": 383, "loopinfowrapperpass": 414, "looping": [277, 289], "loopinterchang": 410, "looppass": 368, "looprerolling": 407, "loopunroll": 410, "loopunrollandjam": 410, "loopunswitch": 381, "loopunswith": 337, "looputil": 414, "loopvectoriz": [387, 393, 410], "loopvectorizationplann": 387, "loosely": 405, "lor": 276, "los": [393, 414, 434, 442], "losing": [343, 385, 394, 401], "loss": [339, 383, 385, 393, 394], "losslessly": 366, "lost": [274, 332, 335, 357, 394, 410, 434, 442], "lot": [276, 285, 288, 289, 291, 323, 330, 333, 335, 339, 340, 341, 346, 351, 353, 357, 362, 380, 381, 383, 385, 393, 394, 405, 408, 413, 414, 415, 418, 422, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442], "loved": 383, "low": [100, 111, 113, 128, 220, 270, 273, 274, 275, 277, 278, 279, 281, 289, 301, 313, 316, 318, 323, 324, 327, 333, 335, 337, 339, 340, 357, 362, 366, 367, 375, 383, 387, 388, 391, 394, 398, 399, 403, 412, 413, 417, 419, 426, 430, 431, 436, 440, 441], "lower": [289, 327, 343, 357, 381, 396, 398], "lower16": 334, "lower_bound": 383, "loweralloc": 414, "lowerbound": 357, "lowercall": 416, "lowercas": [413, 428, 438], "lowered": [280, 289, 327, 339, 340, 343, 357, 396, 398, 434, 442], "lowerfp_to_sint": 413, "lowering": [278, 289, 322, 327, 332, 333, 355, 401, 413, 431, 441], "loweroper": 413, "lowerswitch": 343, "lowertypetest": 411, "lowest": [278, 280, 291, 328, 357, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "lpa": 278, "lpad": [327, 332, 357], "lpc0": 362, "lpechacek": 279, "lpm": 414, "lq": 313, "lqueu": 313, "lr": [289, 357, 362], "lrt": 324, "ls": [323, 391], "lsampl": 384, "lsb": [32, 289, 417], "lsb_extract": 357, "lsbit": 383, "lsda": 358, "lsl": 334, "lst": 403, "lsun": 313, "lt": [304, 330, 341, 367, 403, 404], "ltmp": 334, "ltmp1": [362, 398], "lto": [281, 327, 357, 358, 360, 368, 410, 411], "lto2": 357, "lto_codegen_add_modul": 360, "lto_codegen_add_must_preserve_symbol": 360, "lto_codegen_compil": 360, "lto_codegen_creat": 360, "lto_codegen_set_debug_model": 360, "lto_codegen_set_pic_model": 360, "lto_module_creat": 360, "lto_module_create_from_memory": 360, "lto_module_dispos": 360, "lto_module_get_num_symbol": 360, "lto_module_get_symbol_attribut": 360, "lto_module_get_symbol_nam": 360, "lto_module_is_object_fil": 360, "lto_module_is_object_file_for_target": 360, "lto_module_is_object_file_in_memory": 360, "lto_module_is_object_file_in_memory_for_target": 360, "lu": 339, "luckily": 339, "lud": 386, "lv": 366, "lvalu": 383, "lvl": 416, "lvm": 433, "lwe": [0, 1, 2], "lwn": 394, "lying": 358, "lz": 357, "m0": [31, 42, 48, 49, 50, 51, 56, 57, 59, 60, 123, 124, 125, 139, 145, 146, 150, 152, 153, 154, 215, 216, 217, 233, 239, 240, 244, 246, 247, 248], "m1": 357, "m1writenmisc1": 413, "m2": 357, "m35qpb": 416, "m64": 331, "m7170": 275, "m_func": 383, "m_op_sel": [2, 210], "m_op_sel_h": [2, 210, 271], "mac": [291, 299, 329, 341, 383, 414], "mach": [281, 315, 320, 325, 357], "mach_universal_binary": 320, "machin": [275, 280, 286, 287, 291, 292, 295, 296, 297, 298, 304, 308, 311, 315, 322, 324, 329, 330, 331, 339, 341, 342, 345, 346, 348, 349, 357, 358, 359, 361, 366, 367, 371, 383, 385, 388, 393, 401, 407, 412, 414, 417, 419, 424, 428, 433, 434, 438, 442, 444], "machine_kind": 275, "machine_version_major": 275, "machine_version_minor": 275, "machine_version_stepping": 275, "machinebasicblock": [362, 383, 413], "machineblockfrequencyinfo": 282, "machinecodeemitt": 413, "machinecombin": 343, "machineconstantpool": [289, 362], "machineconstantpoolvalu": 362, "machinecs": 343, "machineframeinfo": 289, "machinefunct": [343, 362, 383], "machinefunctioninfo": [289, 362], "machinefunctionpass": [368, 413, 416], "machinefunctionpropert": 343, "machineinstr": [297, 298, 336, 343, 401, 409, 413], "machineinstrbuild": 343, "machineirbuild": 343, "machinememoperand": 278, "machinemoduleinfo": 362, "machineoperand": [289, 413], "machinepassregistry": 414, "machinepassregistrynod": 414, "machineregisterinfo": [289, 343], "machinery": [351, 408], "macho": [281, 289, 315, 361, 396], "machoobjectfil": 383, "macinfo": 357, "macos": [324, 335, 341, 359, 368, 383, 407], "macosx10": 357, "macport": 380, "macro": [287, 288, 291, 296, 308, 321, 323, 324, 328, 357, 359, 388, 401, 413, 414, 418, 428, 438], "macronam": 404, "macros": [291, 304, 323, 324, 328, 332, 357, 383, 388, 401, 405, 413], "mad": [277, 280, 281, 284, 286, 289, 291, 324, 330, 332, 335, 336, 337, 340, 341, 347, 350, 351, 357, 363, 365, 366, 381, 383, 384, 385, 391, 392, 393, 394, 395, 398, 401, 402, 405, 414, 418, 419, 428, 429, 431, 434, 439, 441, 442], "mag": 357, "magic": [299, 341, 357, 359, 375, 383, 393, 430, 440], "magically": 278, "magnif": [425, 430, 435, 440], "magnitud": 357, "mail": [291, 326, 330, 341, 345, 363, 382, 395], "mailed": [338, 363, 395], "mailing": [290, 291, 326, 330, 338, 350, 359, 382, 384, 388, 389, 390, 398, 415, 416, 434, 442], "mailto": 394, "main": [280, 282, 284, 287, 289, 291, 304, 309, 313, 320, 323, 327, 328, 329, 330, 332, 338, 341, 342, 343, 344, 345, 348, 350, 355, 356, 357, 359, 360, 363, 367, 381, 383, 385, 388, 393, 395, 403, 405, 409, 411, 413, 414, 415, 416, 419, 420, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "main_loop": [436, 437, 438, 439, 440, 441], "mainfun": 424, "mainlin": [330, 350, 385], "mainloop": [426, 427, 428, 429, 430, 431, 432, 433], "mainly": [313, 324, 343, 357, 366, 384, 401], "maintain": [275, 277, 278, 281, 289, 291, 323, 330, 331, 333, 339, 343, 350, 357, 366, 375, 383, 385, 396, 405, 414, 417], "maintainability": [288, 291, 330], "maintained": [281, 284, 287, 289, 326, 330, 357, 385, 393, 399], "maintainer": [324, 330], "maintaining": [277, 339, 383, 385, 391], "mainten": [330, 354, 360], "maj": 389, "major": [277, 289, 291, 332, 335, 337, 341, 342, 343, 350, 357, 366, 371, 380, 381, 383, 385, 387, 388, 405, 409, 413, 431, 441], "majority": [275, 292, 328, 330, 332, 368, 393], "majorvers": 371, "mak": [275, 276, 277, 278, 280, 281, 284, 285, 287, 288, 289, 290, 292, 293, 296, 297, 299, 302, 303, 304, 309, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 363, 365, 366, 367, 368, 371, 380, 381, 382, 383, 384, 385, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 402, 403, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "make_error": 383, "make_error_cod": 383, "make_pair": [366, 431, 432, 433], "make_rang": 383, "make_shared": [422, 423], "make_un": [420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "makefil": [287, 289, 302, 303, 335, 339, 341, 352, 360, 409, 419, 426, 427, 437], "makelight": 291, "maken": 424, "makestruct": 324, "maketir": 291, "makeup": 383, "makevehicl": 291, "making": [286, 289, 291, 324, 332, 336, 339, 340, 357, 360, 381, 382, 385, 387, 388, 393, 394, 398, 402, 405, 407, 409, 416, 418, 419, 420, 421, 428, 434, 442], "malformed": [285, 324, 359, 381, 383], "malicious": 394, "malloc": [327, 339, 359, 383, 391, 414, 419, 434, 442], "malloc_limit_mb": 359, "mallocbench": 408, "man": [287, 323, 409, 419], "manag": [292, 293, 313, 335, 338, 339, 341, 342, 345, 350, 358, 361, 367, 368, 383, 389, 396, 410, 413, 414, 420, 421, 422, 423, 424, 428, 429, 430, 431, 434, 442], "manage": 285, "managed": [275, 290, 335, 336, 340, 357, 358, 398, 420, 421, 431, 441], "manager": [324, 350, 368], "managing": [275, 394], "mandat": [289, 385], "mandatory": [273, 337, 342, 357, 383, 413], "mandel": [430, 440], "mandelbrot": [425, 430, 435, 440], "mandelconverg": [430, 440], "mandelhelp": [430, 440], "mangl": [330, 413, 420, 421, 422, 423, 424], "mangleandintern": [420, 421], "mangled": [295, 357, 393, 420], "manglednam": [422, 423, 424], "manglednamestream": [422, 423, 424], "mangling": [291, 305, 357, 420], "manifest": 357, "manipul": [291, 383, 411], "manipulat": [289, 295, 316, 327, 335, 383, 431, 441], "manipulated": [327, 353], "manipulating": [302, 383, 387], "mann": [273, 275, 278, 289, 328, 330, 332, 340, 357, 368, 383, 394, 398, 413], "manner": 290, "manpag": 288, "mantiss": 357, "manual": [275, 286, 287, 289, 291, 321, 326, 337, 339, 341, 343, 351, 379, 394, 407, 409, 412, 413, 414, 419, 420, 442], "manually": [275, 285, 330, 337, 340, 345, 350, 382, 383, 393, 394, 398, 405, 412, 415], "many": [276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 291, 292, 306, 313, 323, 324, 332, 333, 335, 336, 338, 339, 340, 341, 342, 348, 349, 351, 352, 355, 356, 357, 359, 365, 367, 371, 375, 381, 382, 383, 385, 386, 388, 389, 393, 394, 396, 398, 399, 408, 409, 412, 413, 414, 415, 417, 418, 420, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442], "map": [291, 294, 304, 316, 323, 328, 333, 343, 354, 358, 361, 365, 366, 367, 379, 393, 394, 401, 411, 412, 413, 415, 416, 417, 418, 419, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 444], "mapoptional": 418, "mapped": [275, 281, 289, 296, 304, 323, 334, 343, 357, 361, 365, 383, 393, 396], "mapping": [277, 304, 305, 313, 316, 323, 333, 343, 357, 365, 367, 371, 374, 383, 385, 391, 393, 394, 396, 398, 401, 419, 438, 444], "mappingnormaliz": 418, "mappingnormalizationheap": 418, "mappingtrait": 418, "maprequired": 418, "mapsectionaddress": 361, "maptag": 418, "mapvector": 291, "march": [292, 297, 298, 313, 348, 349, 352, 387, 388, 394, 432], "marching": 393, "marginally": 394, "mark": [275, 281, 289, 291, 296, 309, 313, 323, 324, 327, 328, 332, 334, 336, 337, 339, 350, 357, 363, 366, 367, 381, 383, 394, 398, 409, 415, 417], "markdown": 363, "markdownquickstarttemplat": 363, "marked": [275, 276, 278, 286, 289, 291, 327, 329, 332, 334, 336, 339, 357, 364, 381, 383, 394, 398, 405, 413, 417], "marker": [330, 417], "marking": [339, 341, 357, 381, 394, 396], "markup": [275, 291, 359, 363, 395], "marshaling": 396, "mask": [117, 128, 208, 220, 273, 274, 275, 289, 291, 292, 337, 353, 357, 387, 388, 394, 401, 417, 418], "masked": 413, "maskedbitset": 418, "maskedbitsetcas": 418, "maski64": 357, "masking": [278, 394], "maskipopcnt": 357, "massaging": [291, 347], "massiv": [306, 359, 401, 419], "mast": [330, 341, 345, 382, 384, 385, 386, 394, 419], "match": [273, 274, 275, 278, 281, 283, 285, 288, 289, 291, 292, 293, 296, 304, 306, 308, 313, 316, 322, 324, 327, 328, 332, 333, 338, 340, 341, 343, 351, 356, 357, 359, 362, 371, 376, 379, 381, 383, 385, 393, 398, 401, 403, 404, 409, 413, 414, 416, 417, 418, 425, 427, 428, 435, 436, 437, 438, 439, 440, 441], "matched": [278, 289, 292, 305, 323, 332, 333, 357, 413, 425], "matcher": [359, 401], "matching": [281, 295, 305, 308, 310, 323, 327, 332, 339, 356, 357, 360, 383, 393, 401, 413, 417, 418, 436], "matchinstructionimpl": 289, "material": [290, 366], "materializ": [343, 387], "materializationresponsibility": 421, "materializationun": 421, "materialized": 343, "materializing": 343, "math": [288, 291, 297, 298, 323, 337, 367, 393, 412, 425, 428, 430, 435, 440], "mathematic": [426, 436], "mathematical": [335, 357, 367], "mathematically": 366, "matrix": 339, "matt": [278, 333, 357, 396, 438], "matter": [291, 330, 414], "matthew": 385, "matthewsrevnum": 385, "mattr": [292, 297, 298, 315, 413, 432], "matur": [323, 337, 339, 394], "mat\u00e9riel": 27, "max": [275, 296, 313, 317, 323, 324, 328, 357, 359, 394, 407, 416], "max_dx10": 275, "max_flat_workgroup_siz": 275, "max_fp16": 275, "max_int_bit": 383, "max_len": [338, 359], "max_total_tim": 359, "maxatomicsizeinbitssupported": 278, "maxflatworkgroupsiz": 275, "maximally": [281, 357, 425, 435], "maximiz": [298, 359], "maximum": [275, 277, 278, 282, 287, 289, 294, 301, 308, 313, 323, 343, 359, 366, 383], "maxsiz": 291, "may": [3, 6, 12, 13, 14, 15, 16, 17, 25, 27, 28, 29, 30, 80, 81, 84, 90, 91, 92, 97, 98, 99, 100, 112, 113, 116, 118, 119, 120, 121, 122, 174, 175, 178, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 203, 204, 207, 209, 211, 212, 213, 214, 270, 271, 272, 273, 274, 275, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 304, 308, 310, 313, 314, 315, 317, 323, 324, 326, 327, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 355, 356, 357, 358, 359, 360, 361, 362, 365, 367, 368, 371, 375, 379, 381, 382, 383, 384, 385, 387, 388, 390, 391, 393, 394, 396, 397, 398, 399, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442], "may_throw": 332, "mayali": [277, 357], "mayb": [333, 359, 394, 401, 415, 434, 442], "maybe_instru": 415, "maybeoverridden": 366, "mayfail": 383, "mayfail2": 383, "mayload": [313, 405], "mayreadfrommemory": 278, "maystor": [313, 405], "maytrap": 357, "maywritetomemory": [278, 383], "mb": [359, 386, 418], "mbb": [289, 413], "mbbi": 289, "mc": [275, 315, 329, 334, 341, 358, 361, 362, 409], "mca": 295, "mcasmpars": 289, "mcasmstream": 289, "mccfiinstruct": 362, "mccodeemitt": [289, 401], "mcdesc": 413, "mcdisassembl": 289, "mce": 413, "mcexpr": 289, "mcinst": [313, 401], "mcinstlow": 289, "mcinstrdesc": 343, "mcjit": [337, 388, 419, 420, 428, 429, 430, 431, 433], "mclabel": 289, "mcobjectstream": 289, "mcod": 334, "mcoperand": 289, "mcpu": [275, 297, 298, 309, 313, 346, 349, 367, 409, 413], "mcregaliasiterator": 289, "mcsectioncoff": 289, "mcsectionelf": 289, "mcsectionmacho": 289, "mcstream": 339, "mcsymbol": 339, "mctargetdesc": 401, "mctargetstream": 289, "md": [339, 357, 359, 363, 386, 394], "md5": [328, 330], "md_prof": 283, "mdnod": [283, 357, 410], "mdstring": [283, 357], "mdtupl": 357, "meab": 297, "mean": [273, 275, 277, 279, 280, 281, 284, 287, 288, 289, 290, 291, 292, 299, 313, 317, 323, 330, 332, 337, 339, 340, 341, 344, 349, 350, 355, 357, 359, 360, 362, 365, 366, 368, 375, 381, 382, 383, 384, 385, 390, 393, 394, 398, 399, 401, 403, 407, 410, 413, 414, 418, 421, 425, 427, 428, 429, 431, 433, 434, 435, 437, 438, 439, 441, 442], "meaning": [30, 80, 100, 111, 113, 116, 117, 122, 174, 207, 208, 214, 270, 271, 273, 274, 275, 281, 287, 289, 291, 296, 314, 323, 332, 334, 340, 351, 357, 371, 374, 375, 376, 391, 393, 398, 402, 403, 404, 405, 418, 425, 435], "meaningful": [275, 291, 298, 321, 324, 339, 340, 357, 363, 383, 395, 398, 401, 417], "meaningless": 383, "meant": [291, 321, 328, 341, 342, 347, 357, 363, 365, 383, 389, 390, 393, 395, 403, 404, 419], "measur": [279, 287, 299, 309, 313, 383, 407, 417], "measured": [309, 313, 394], "measuring": 309, "meat": 438, "mechanic": [275, 414, 437], "mechanism": [275, 281, 286, 289, 291, 296, 332, 337, 339, 344, 356, 357, 358, 361, 367, 383, 390, 393, 394, 398, 399, 404, 408, 411, 412, 414, 419], "med": 416, "median": 394, "mediat": 390, "mediated": 277, "medium": [298, 357], "meet": [275, 289, 330, 341, 366, 390, 414], "meeting": [290, 385, 387, 390], "megabyt": 293, "meltdown": 394, "mem": [327, 364, 381, 410, 436, 437, 438, 439, 440, 441], "mem2ref": 398, "mem2reg": [337, 339, 383, 431, 441], "mem_address": 289, "mem_not_null": 327, "memalign": 391, "memarg": 355, "memb": [289, 291, 299, 324, 334, 351, 357, 361, 381, 383, 390, 393, 403, 411, 413, 417, 418, 420, 421, 422], "member": [288, 290, 291, 299, 311, 316, 324, 357, 360, 393, 403, 407, 412, 413, 420, 421, 422], "memberlist": 413, "membership": [332, 383], "memcheck": [296, 409], "memcmp": 388, "memcpy": [277, 278, 394], "memcpyopt": 278, "memdep": 277, "memfenc": 275, "memop": [317, 388], "memoriz": 291, "memory": [4, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 21, 32, 36, 37, 80, 82, 86, 87, 90, 91, 92, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 124, 125, 130, 131, 174, 176, 180, 181, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 207, 216, 217, 222, 223, 270, 273, 274, 278, 280, 287, 289, 291, 293, 294, 296, 306, 309, 317, 324, 327, 329, 332, 333, 335, 336, 339, 340, 343, 346, 352, 355, 358, 359, 360, 361, 362, 364, 365, 367, 368, 388, 391, 392, 393, 394, 396, 397, 398, 401, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 442], "memory_order_acq_rel": [278, 357], "memory_order_acquir": [278, 357], "memory_order_consum": 278, "memory_order_relaxed": [278, 357], "memory_order_releas": [278, 357], "memory_order_seq_cst": [278, 357], "memoryaccess": 365, "memorybuff": 291, "memorydef": 365, "memorydependenceanalys": 365, "memorydependencyanalys": 278, "memoryph": 365, "memorysanitiz": [357, 359], "memoryss": [277, 419], "memoryssawalk": 365, "memoryus": 365, "memorywithorigin": 287, "memr": [289, 413], "memrr": 413, "memset": [278, 381, 424], "mental": [290, 327, 383], "mention": [280, 385], "mentioned": [275, 280, 281, 287, 289, 291, 323, 347, 356, 357, 366, 374, 383, 385, 392, 393, 398, 403], "mentioning": [351, 390, 419], "mer": 291, "merely": [340, 342, 357, 381, 382, 394, 398, 427, 437], "merg": [276, 277, 304, 328, 330, 339, 341, 343, 347, 357, 365, 366, 407, 412, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "mergabl": 381, "merge_bb": [439, 440, 441], "merge_control_fil": 359, "mergebb": [429, 430, 431, 432, 433], "merged": [287, 289, 317, 324, 330, 334, 350, 357, 359, 366, 383, 389, 393, 433], "mergefunct": 419, "merging": [277, 292, 316, 317, 357, 359, 360, 381, 385, 393, 394, 419], "mesa3d": 275, "mess": 381, "messag": [30, 80, 122, 174, 214, 270, 275, 285, 287, 288, 291, 292, 296, 299, 309, 312, 313, 323, 332, 341, 348, 352, 358, 359, 368, 382, 383, 385, 401, 405, 414, 418, 419, 432], "messy": 289, "met": [289, 339, 350, 357, 366, 383, 388, 391, 393, 396, 401, 405], "metadat": [281, 282, 289, 297, 330, 337, 339, 340, 343, 358, 362, 366, 381, 385, 393, 409, 419, 425, 433, 435], "metadatarecord": 417, "metal": [348, 357], "metaprogramming": 388, "metarenam": 285, "metasyntactic": 285, "metatad": 283, "metdat": 357, "method": [285, 286, 288, 289, 292, 323, 333, 339, 340, 343, 348, 350, 351, 352, 353, 355, 357, 358, 361, 366, 382, 388, 393, 394, 396, 398, 401, 408, 413, 418, 420, 421, 422, 426, 427, 428, 429, 431, 437, 438, 439, 441], "methodbod": 413, "methodology": 332, "methodprotos": 413, "metric": [282, 308, 350, 359, 394, 407, 414, 416], "meyer": 291, "mf": [289, 323, 368], "mfctypeserverindex": 371, "mfenc": 278, "mfloat": [348, 349], "mflop": 412, "mfpu": 348, "mft": 379, "mgrid331": 386, "mi": [289, 343, 362, 413], "mi25": 275, "mi50": 275, "mi6": 275, "mi60": 275, "mi8": 275, "mib": 334, "micro": [275, 291, 313, 386, 394], "microbenchmark": [394, 407], "microcod": 275, "microcontroller": 325, "microopbuffersiz": 313, "microprocessor": [289, 357, 413], "microsecond": 417, "microsoft": [289, 291, 311, 316, 323, 325, 334, 345, 355, 357, 371, 375, 379, 393, 394, 419], "microsoftcompilerspectremitig": 394, "mid": [337, 355, 357], "middl": [288, 291, 339, 355, 357, 375, 398], "might": [277, 278, 279, 283, 284, 285, 287, 289, 290, 291, 292, 299, 305, 313, 323, 330, 331, 335, 337, 338, 339, 341, 342, 343, 349, 350, 351, 356, 357, 358, 359, 363, 364, 366, 375, 382, 383, 384, 386, 388, 391, 393, 394, 395, 398, 399, 401, 402, 410, 412, 413, 418, 429, 432, 434, 439, 440, 441, 442], "migrat": [275, 330, 339], "migrated": [292, 341, 385], "migrating": [277, 341], "mileston": 366, "mill": 323, "million": [357, 383], "millisecond": 416, "mim": 342, "mimic": [271, 291, 385], "min": [80, 174, 270, 275, 316, 324, 357, 359, 389, 394, 407, 416], "min_dx10": 275, "min_int_bit": 383, "mind": [291, 330, 383, 391, 426, 431, 436, 441], "minded": [431, 441], "mingw": [287, 289, 342, 388], "mingw32": [289, 345, 409], "mingw32msvc": 289, "mingw64": 341, "miniatur": 379, "minimal": [275, 276, 289, 291, 299, 328, 331, 383, 384, 393, 426, 430, 436, 440], "minimally": [278, 289, 331], "minimiz": [289, 291, 294, 298, 331, 340, 357, 359, 360, 383, 394, 411, 417], "minimize_crash": 359, "minimized": 359, "minimizing": [343, 385, 396], "minimum": [275, 287, 291, 293, 330, 333, 341, 350, 352, 393, 394, 396, 407, 413, 416, 422, 426, 436], "minor": [289, 291, 330, 350, 366, 371, 380, 383, 385, 434, 442], "minor_processing": 394, "minorvers": 371, "minsiz": [281, 357], "minsizerel": [287, 341], "minus": [274, 275, 357, 392], "minut": 341, "mioperandinfo": 413, "mip": [278, 289, 337, 341, 349, 357, 391, 413, 415], "mips16": 278, "mips32": 278, "mips64": [388, 415], "mips64el": 415, "mipsel": 415, "mir": 419, "mirror": [273, 338, 339, 429, 430, 439, 440], "mirroring": 385, "mis": [275, 289, 293, 352, 385, 394], "misbehav": 389, "miscellaneous": [299, 357], "miscommun": 330, "miscompil": [284, 293, 330, 341, 357, 386], "miscompiled": [285, 341, 352, 388], "miscompiling": 352, "misinterpret": [285, 291], "mislead": 291, "mismatch": [275, 317, 348, 357, 364, 391, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "mismatched": [280, 347], "misnamed": 289, "misoptimiz": 283, "mispredict": 394, "mispredicted": 394, "misread": 291, "miss": [285, 313, 337, 357, 397], "missed": [410, 412], "missing": [278, 291, 344, 348, 349, 357, 383, 386, 393, 398, 404, 408, 426, 430, 431, 436, 440, 441], "misspecul": 394, "misspeculated": 394, "misspeculating": 394, "mistak": [290, 291, 337, 385], "mistaken": [428, 438], "mistyped": 291, "misunderstood": [335, 419], "misused": 409, "mit": [330, 394], "mitig": [357, 391, 394, 419], "mitigat": [339, 357, 391, 394], "mitigated": [313, 394], "mitigating": 394, "mix": [288, 289, 291, 393], "mixed": [278, 292, 356, 383, 387, 394], "mixing": [292, 340, 344, 360, 394, 403], "mixtur": [394, 403], "mkdir": [287, 341, 344, 359, 385, 407, 409, 416], "ml": [339, 386, 436, 437, 438, 439, 440, 441], "mli": 438, "mlim": 293, "mllvm": [313, 368, 412], "mm0": [289, 403, 405], "mm1": [403, 405], "mm2": [403, 405], "mm3": [403, 405], "mm4": [403, 405], "mm5": [403, 405], "mm6": [403, 405], "mm7": [403, 405], "mmi": 362, "mmx": [289, 357, 413], "mnemonic": [315, 388, 413, 415], "mnemonicali": 289, "mno": 275, "mo": 393, "mo1": 413, "mo_cimmediat": 362, "mo_registermask": 289, "mobil": 275, "mocked": 383, "mod": [27, 116, 117, 207, 208, 224, 256, 273, 277, 279, 281, 283, 287, 292, 296, 299, 303, 304, 309, 312, 316, 317, 323, 324, 330, 338, 339, 346, 348, 357, 374, 383, 388, 389, 391, 394, 403, 404, 405, 407, 413, 416, 417, 419, 431, 432, 441], "model": [278, 281, 288, 289, 291, 296, 298, 309, 323, 327, 331, 332, 334, 335, 337, 339, 340, 352, 354, 355, 360, 383, 387, 388, 393, 394, 401, 410, 412, 413, 418, 419, 426, 427, 431, 432, 436, 441], "modeled": [284, 313, 339, 357, 383, 387, 398, 413, 437], "modeling": [354, 387, 388, 412], "modelled": [332, 355, 383, 387], "modelling": 387, "moder": [382, 390], "moderat": [291, 383], "moderator": 330, "modern": [288, 291, 324, 325, 329, 335, 346, 374, 376, 383, 394, 412, 425, 434, 435, 442], "modest": 291, "modfilecount": 371, "modfilecountarray": 371, "modif": [275, 277, 285, 286, 299, 317, 323, 331, 341, 357, 366, 381, 383, 387, 393, 394, 413, 414, 424, 433], "modifi": [0, 1, 2, 3, 29, 55, 81, 100, 111, 113, 119, 120, 121, 149, 175, 210, 211, 212, 213, 243, 289, 291, 364, 388], "modified": [277, 285, 289, 291, 299, 323, 354, 357, 375, 382, 383, 386, 393, 398, 414, 420, 424, 428], "modifier0": [272, 275], "modifier1": [272, 275], "modify": [277, 278, 285, 287, 323, 327, 332, 333, 342, 343, 351, 354, 356, 357, 359, 365, 367, 368, 381, 387, 393, 394, 398, 401, 408, 413, 414, 416, 420, 431, 441], "modifying": [287, 288, 291, 359, 368, 382, 383, 407, 414], "modindic": 371, "modinfo": 371, "modinfosiz": 371, "modistream": 374, "modr": 289, "modref": [277, 278, 403], "modrefresult": 277, "modrefval": 403, "modul": [277, 281, 285, 287, 289, 291, 295, 296, 301, 306, 313, 321, 335, 337, 339, 341, 350, 358, 359, 360, 361, 366, 367, 368, 379, 386, 388, 393, 396, 397, 398, 401, 407, 408, 409, 411, 413, 416, 420, 422, 423, 424, 427, 428, 429, 430, 431, 433, 437, 438, 439, 440, 441], "modular": [277, 321, 356, 394, 414], "modularity": 343, "modulehandl": 422, "modulehandlet": 422, "moduleid": [409, 427, 437], "moduleindex": 371, "modulelevelpass": 414, "modulenam": 371, "modulepass": [277, 368], "modulesummaryindex": 357, "modulesymstream": 371, "modulo": [289, 357, 393], "molesting": 357, "moment": [313, 327, 339, 343, 357, 362, 398, 422, 437], "monitor": 385, "monitored": 357, "monitoring": [277, 407], "monolithic": [330, 343, 385, 392], "monospac": [363, 395], "monotonic": [275, 357], "monotonically": [350, 385], "month": [330, 350, 359, 419], "mor": [24, 271, 272, 273, 274, 275, 277, 278, 281, 283, 284, 285, 287, 288, 289, 290, 292, 293, 296, 299, 301, 304, 308, 309, 313, 316, 317, 318, 321, 323, 324, 327, 328, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 371, 375, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "moreov": [289, 343, 357, 381], "most": [272, 275, 276, 277, 278, 280, 284, 287, 288, 289, 291, 292, 296, 301, 303, 316, 321, 322, 323, 324, 327, 329, 330, 332, 333, 335, 337, 338, 339, 340, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 359, 361, 363, 364, 365, 366, 367, 371, 380, 382, 383, 384, 385, 386, 389, 393, 394, 395, 396, 398, 399, 401, 404, 405, 407, 408, 410, 413, 414, 416, 417, 419, 421, 426, 427, 428, 429, 430, 431, 433, 434, 436, 437, 439, 440, 441, 442], "mostly": [278, 289, 313, 323, 324, 341, 343, 358, 365, 366, 381, 393, 398, 407, 413, 417, 429, 433, 434, 439, 442], "motion": [277, 341, 357, 358, 365, 414], "motiv": [354, 421, 429, 439], "motivat": [429, 439], "motivated": [357, 396], "motivating": [431, 441], "motohiro": 289, "mount": [279, 331, 341], "mous": 416, "mov": [275, 277, 278, 279, 287, 289, 291, 292, 299, 327, 330, 334, 338, 339, 341, 343, 350, 357, 367, 381, 383, 387, 394, 396, 398, 402, 405, 414, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 439, 442], "mov32mr": 362, "mov32r": [289, 362], "mov32rm": 362, "mov64r": [362, 413], "mov64rm": 362, "movabsq": [392, 396], "movapd": 292, "moved": [275, 277, 278, 279, 284, 289, 299, 313, 330, 357, 381, 383, 387], "movhpd": 292, "moving": [275, 287, 299, 338, 381, 387, 393, 419], "movl": [292, 357, 394, 396, 398], "movnt": 357, "movq": [394, 396, 398], "movsd": 292, "movslq": 396, "movsq": 289, "movsx": 289, "movsx16rm8w": 289, "movsx16rr8w": 289, "movsx32rm16": 289, "movsx32rr16": 289, "movsx32rr8": 289, "movsx64rr16": 289, "movsx64rr32": [289, 309], "movsx64rr8": 289, "movt": 334, "movw": [334, 357], "movz": [280, 357], "mppassmanag": 416, "mr": 403, "mri": [289, 343], "mrm0m": 413, "mrm0r": 413, "mrm1m": 413, "mrm1r": 413, "mrm2m": [403, 413], "mrm2r": [403, 413], "mrm3m": 413, "mrm3r": 413, "mrm4m": 413, "mrm4r": 413, "mrm5m": 413, "mrm5r": 413, "mrm6m": 413, "mrm6r": 413, "mrm7m": 413, "mrm7r": 413, "mrmdestmem": 413, "mrmdestreg": [405, 413], "mrminitreg": 413, "mrmsrcmem": 413, "mrmsrcreg": 413, "mrt": [65, 159, 253], "mrtz": [55, 65, 149, 159, 243, 253], "ms_abi_tripl": 409, "msa": 357, "msan": 359, "msb": [274, 289, 417], "msb_extract": 357, "msbuild": [287, 342], "msdn": [291, 311, 394], "msec": 412, "msf": 371, "msg": [0, 1, 2, 357], "msg_g": [30, 122, 214], "msg_gs_don": [30, 122, 214], "msg_interrupt": [30, 122, 214, 275], "msg_sysmsg": [30, 122, 214], "msgpack": 275, "msp430": [289, 341, 357], "mspdb": 371, "mspdbsrv": 371, "mspdbxxxx": 371, "msr": 394, "msse4": 391, "msvc": [287, 289, 291, 332, 334, 357, 371, 383, 393, 394], "mthumb": 348, "mtripl": [292, 297, 298, 313, 338, 357, 362], "mtyp": 275, "mu": 385, "much": [275, 277, 278, 279, 285, 289, 291, 299, 301, 311, 316, 323, 324, 330, 331, 333, 335, 337, 341, 343, 344, 345, 347, 349, 351, 352, 355, 357, 360, 363, 365, 367, 368, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 393, 394, 395, 396, 398, 399, 404, 405, 409, 413, 414, 415, 416, 418, 421, 426, 427, 428, 431, 434, 436, 437, 438, 441, 442], "mul": [273, 292, 340, 367, 381, 393, 403, 427, 437], "mul_r": 403, "mul_rr": 403, "mullin": 275, "mult": [275, 291, 318, 323, 331, 343, 359, 379, 383, 388, 403, 419], "multhreading": 383, "multi_val": 323, "multiarch": [348, 349], "multicl": [403, 405], "multiclass": [405, 413], "multiclassid": 404, "multiclassobject": 404, "multicor": 278, "multidef": 403, "multidimensional": 357, "multilib": [331, 349], "multilin": [296, 403, 404], "multimap": 383, "multipl": [274, 275, 277, 278, 279, 281, 282, 288, 289, 291, 292, 294, 299, 304, 305, 308, 310, 313, 314, 320, 323, 324, 326, 328, 330, 334, 337, 340, 341, 343, 345, 351, 355, 356, 357, 359, 361, 362, 365, 366, 371, 379, 381, 382, 384, 387, 388, 393, 394, 396, 398, 399, 401, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 426, 427, 428, 429, 430, 433, 436, 437, 438, 439, 440], "multiplicand": 357, "multiplied": [275, 317], "multiply": [273, 289, 313, 317, 324, 333, 357, 358], "multiplying": [282, 357, 394], "multiprocessor": [339, 414], "multiset": 383, "multisourc": [330, 352, 386, 393, 407, 408], "multithreaded": [339, 383, 416], "multithreading": [383, 388], "multmp": [427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "multmp1": [427, 437], "multmp2": [427, 437], "multmp3": [427, 437], "multmp4": [428, 438], "mummergpu": 386, "mung": [340, 381], "munger_struct": 340, "musl": 359, "must": [3, 22, 23, 27, 28, 30, 33, 55, 80, 81, 109, 110, 116, 118, 122, 126, 128, 149, 174, 175, 200, 201, 207, 209, 214, 218, 220, 224, 225, 243, 257, 270, 273, 274, 275, 276, 278, 280, 281, 287, 289, 291, 292, 296, 299, 304, 309, 313, 324, 327, 330, 332, 333, 334, 335, 338, 339, 340, 341, 343, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 375, 376, 381, 382, 383, 384, 385, 387, 388, 391, 393, 394, 395, 396, 398, 399, 401, 403, 404, 405, 408, 409, 410, 411, 413, 414, 417, 418, 420, 421, 427, 428, 429, 430, 431, 432, 433, 437, 439, 440, 441], "mustali": [277, 357], "mustquot": 418, "musttail": 357, "mutabl": [357, 425, 429, 430, 432, 433, 435, 439, 440, 443], "mutat": [338, 359, 381, 383, 421, 430, 432, 433, 440], "mutated": [291, 421], "mutating": [291, 343, 431, 441], "mutator": [339, 383], "mutex": [278, 420], "mutually": [323, 398, 425, 435, 437], "mv": 341, "mvt": [289, 343, 413], "mxnack": 275, "my": [277, 313, 330, 339, 341, 367, 407, 414, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "my86_64flag": 418, "my86flag": 418, "my_addit": 393, "my_fil": 368, "my_fmad": 367, "my_funct": 367, "my_function_fast": 367, "my_function_precis": 367, "my_fuzz": 359, "my_kernel": 367, "my_key": 291, "my_list": 288, "my_list_of_number": 288, "my_other_fil": 368, "my_string": 288, "my_valu": 291, "myalloc": 327, "myawesomeproject": 357, "mybarflag": 418, "mybison": 408, "myblock": 362, "myboolean": 393, "mybranch": 385, "mybuildd": 287, "mycustomtyp": 418, "mydevic": 407, "mydoclist": 418, "mydoclisttyp": 418, "mydoctyp": 418, "myflag": 418, "myfoobar": 383, "myfooflag": 418, "myfunct": 367, "mygc": 339, "mygcprint": 339, "myglobal": 393, "myinitprng": 359, "mylist": 418, "mylistel": 418, "mymachinefunctionpass": 368, "mymaptyp": 418, "mynewpass": 293, "myobject": 393, "myocamlbuild": [437, 438, 439, 440, 441], "myocyt": 386, "myownp3set": 393, "mypass": [383, 414], "mypassnam": 383, "mypassopt": 414, "mypatch": 382, "myregalloc": 414, "myregisterallocator": 414, "myremot": 424, "myseq": 418, "myseqel": 418, "myservert": 424, "myset": 291, "mystery": 340, "mystical": [434, 442], "mystringtyp": 418, "mystruct": 340, "mytarget": 359, "mytyp": 357, "mytype1": 418, "mytype2": 418, "myvar": 340, "mzvector": 388, "n1": [279, 413], "n16": 367, "n1720": 291, "n1737": 291, "n1757": 291, "n1984": 291, "n1986": 291, "n1987": 291, "n2": [279, 385, 393, 413], "n2118": 291, "n2242": 291, "n2343": 291, "n2346": 291, "n2347": 291, "n2429": 291, "n2431": 291, "n2437": 291, "n2439": 291, "n2541": 291, "n2627": 291, "n2657": 291, "n2756": 291, "n2764": 291, "n2927": 291, "n2928": 291, "n2930": 291, "n32": [357, 388], "n3206": 291, "n3272": 291, "n4absl11string_view": 305, "n8": 357, "n_bucket": 393, "n_hash": 393, "na": 289, "nab": 386, "nabbl": 385, "nadditional": 323, "nail": [429, 439], "naiv": 381, "naively": 394, "nakatan": 289, "naked": [281, 357], "nam": [27, 30, 116, 122, 207, 214, 271, 274, 276, 278, 281, 283, 285, 287, 288, 289, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 320, 322, 323, 324, 328, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 345, 347, 349, 350, 351, 354, 356, 358, 359, 360, 362, 363, 364, 366, 367, 368, 371, 379, 382, 383, 384, 385, 388, 389, 390, 391, 395, 396, 398, 401, 403, 404, 405, 408, 409, 411, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 444], "name1": 403, "name2": 403, "name3": 403, "named": [274, 278, 281, 287, 288, 291, 292, 298, 304, 307, 310, 313, 314, 315, 329, 334, 336, 356, 362, 366, 367, 379, 383, 384, 388, 396, 398, 399, 401, 403, 405, 408, 411, 413, 414, 415, 418, 420, 425, 427, 431, 435, 437, 438, 439, 440, 441], "named_valu": [437, 438, 439, 440, 441], "namedindex": 413, "namedvalu": [427, 428, 429, 430, 431, 432, 433], "namedvar": 433, "nameflag": 393, "namely": [327, 357, 366], "namesbuff": 371, "namespac": [281, 287, 308, 323, 324, 331, 339, 357, 383, 393, 405, 413, 414, 416, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "naming": [276, 291, 304, 351, 383, 413], "nan": [274, 275, 297, 298, 357, 393], "nand": 357, "nandakumar": 343, "nano": 275, "narrow": [277, 278, 285, 291, 293, 333, 340, 343, 352, 359, 383, 394], "narrowaddr": 357, "narrowing": [278, 341, 393], "national": 290, "nativ": [272, 278, 285, 287, 288, 293, 297, 299, 303, 331, 332, 335, 341, 342, 344, 349, 352, 356, 357, 360, 367, 385, 388, 393, 396, 413, 418, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442], "natively": [278, 289, 333, 337, 340, 357, 385, 413, 418, 434, 442], "nativeptrt": 424, "natur": [317, 330, 332, 339, 383, 389, 393, 399], "natural": [291, 292, 337, 340, 341, 351, 357, 360, 363, 394, 395, 403, 414, 418, 427, 437], "naturally": [278, 291, 323, 339, 383, 385, 429, 431, 439, 441], "naveen": 381, "navigat": [323, 356, 382], "navigating": 416, "nbsp": 289, "nc": 275, "nc_nv": 275, "ncsa": 330, "nctaid": 367, "nd": 413, "ndebug": [287, 323, 380], "near": [292, 337, 341, 394, 398, 419, 433], "nearby": 336, "nearbyint": 412, "nearest": [328, 357, 365, 433], "neat": 421, "neatly": 421, "necessarily": [291, 298, 324, 335, 340, 341, 357, 375, 379, 383, 389, 393, 394, 398, 417, 433], "necessary": [275, 277, 278, 280, 282, 287, 289, 291, 292, 299, 304, 323, 327, 328, 329, 330, 332, 333, 337, 339, 341, 343, 347, 348, 349, 350, 352, 353, 357, 358, 359, 360, 361, 362, 363, 376, 379, 382, 383, 391, 394, 395, 396, 398, 399, 401, 407, 409, 411, 413, 414, 416, 427, 432, 433], "need": [275, 277, 278, 280, 281, 282, 283, 284, 285, 287, 289, 291, 292, 299, 302, 304, 322, 323, 324, 327, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 362, 363, 364, 365, 366, 367, 375, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 396, 398, 399, 401, 403, 405, 407, 408, 409, 411, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "needed": [275, 276, 283, 287, 288, 289, 291, 292, 297, 298, 303, 318, 321, 323, 327, 330, 334, 335, 336, 339, 340, 341, 342, 344, 348, 350, 351, 357, 360, 365, 381, 382, 383, 388, 389, 390, 392, 393, 396, 398, 399, 401, 403, 404, 405, 409, 413, 414, 418, 420, 421, 422, 423, 424, 425, 426, 430, 431, 433, 435, 436, 439, 441], "needing": [275, 357, 366, 388, 413, 433], "needstub": 413, "neelakantam": 381, "neg": [29, 119, 121, 211, 213, 357], "neg_h": 2, "neg_lo": 2, "negat": [273, 274, 275, 281, 289, 292, 327, 330, 332, 337, 357, 362, 387, 388, 391, 393, 394, 403, 413, 430, 440], "negated": [281, 357], "negatively": 313, "negeightkind": 357, "neglected": 408, "negligibl": [336, 359], "neighboring": 273, "neith": [277, 280, 281, 291, 332, 337, 342, 357, 359, 366, 371, 381, 385, 396], "nekbon": 386, "neon": [289, 349, 357, 401, 419], "nest": [277, 281, 291, 332, 339, 357, 383, 387, 410, 413, 414], "nestabl": [403, 404], "nested": [275, 281, 287, 288, 289, 291, 296, 332, 357, 363, 368, 383, 387, 394, 395, 403, 414, 426, 429, 436, 439], "nesting": [291, 332, 356, 412], "net": [326, 336, 345, 350, 386, 394, 419], "netbsd": [341, 415], "netinet": 424, "network": [289, 359, 383], "neumann": 357, "neural": 408, "nev": [275, 277, 278, 280, 289, 291, 292, 299, 304, 313, 324, 327, 328, 331, 335, 336, 339, 340, 343, 344, 351, 357, 360, 366, 368, 376, 381, 383, 385, 394, 401, 404, 410, 413, 414, 415, 416, 418, 420, 422, 434, 438, 442], "never_instru": 415, "never_instrumented": 415, "nevertheless": 357, "new": [276, 278, 281, 284, 285, 287, 288, 289, 291, 292, 293, 296, 299, 302, 309, 321, 323, 324, 326, 329, 331, 337, 338, 339, 341, 342, 344, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 375, 382, 385, 386, 387, 388, 391, 392, 394, 395, 396, 398, 399, 401, 403, 404, 407, 410, 413, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 440, 442], "new_cond": 357, "new_corpus_d": 359, "new_else_bb": [439, 440, 441], "new_guard_cond": 357, "new_potentially_interesting_inputs_d": 359, "new_then_bb": [439, 440, 441], "newabbrevlen": 281, "newcomer": [402, 405, 431, 441], "newest": [334, 428], "newinst": 383, "newlin": [281, 291, 296, 299, 304, 317, 430, 440], "newly": [284, 291, 344, 359, 381, 383, 398, 421, 427, 428, 429, 430, 433, 437, 438, 439, 440], "newoffset": 357, "newptr": 357, "newptr2": 357, "newsockfd": 424, "newsroom": 394, "newtoset": 291, "newty": 357, "newversionformat": 371, "next": [273, 275, 276, 281, 284, 285, 291, 313, 323, 330, 332, 339, 340, 341, 342, 343, 347, 350, 351, 354, 357, 360, 361, 366, 368, 375, 383, 385, 387, 388, 389, 393, 394, 409, 411, 413, 414, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "next_prec": [436, 437, 438, 439, 440, 441], "next_var": [439, 440, 441], "nextindvar": 357, "nextprec": [426, 427, 428, 429, 430, 431, 432, 433], "nextvar": [429, 430, 431, 432, 433, 439, 440, 441], "nextvari": [429, 430], "nfc": [330, 358], "ni": 357, "nic": [292, 323, 327, 341, 343, 347, 365, 381, 383, 403, 414, 418, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "nicely": [428, 438], "niceness": 291, "nicknam": 390, "nifty": [414, 429, 434, 439, 442], "nightly": [330, 350, 408, 409, 419], "ninf": 357, "ninj": [276, 287, 341, 343, 346, 347, 348, 349, 359, 382, 385, 386, 407, 416], "nirror": 385, "nm": [295, 315, 344, 348], "nmak": 287, "nn": 386, "nnan": 357, "nnn": [299, 341], "nnnnnn": [284, 289], "no": [93, 95, 96, 100, 104, 106, 107, 111, 113, 272, 273, 274, 275, 278, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 303, 304, 305, 306, 308, 313, 314, 315, 316, 323, 324, 326, 327, 328, 329, 330, 332, 334, 335, 337, 339, 340, 341, 343, 347, 350, 351, 353, 355, 356, 357, 358, 359, 362, 363, 365, 368, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 398, 401, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "no_dead_strip": 357, "no_switch": 412, "no_turbo": 279, "noali": [277, 281, 313, 327, 337, 340, 365], "nobody": [385, 386], "nobuiltin": [281, 357], "nocaptur": [281, 357, 381], "nocf_check": [281, 357], "nod": [277, 282, 283, 289, 301, 332, 336, 343, 351, 358, 365, 366, 367, 383, 387, 393, 398, 401, 403, 410, 411, 412, 413, 414, 418, 419, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "nodebuginfo": 323, "nodetail": 301, "nodetyp": 413, "noduplicat": [281, 357], "noencod": 289, "noexcept": 332, "nohup": 389, "noimm": 405, "noimplicitfloat": [281, 357], "noinlin": [281, 329, 353, 357], "nois": 279, "noisy": [330, 381, 383], "noitin": 298, "noitinerar": [405, 413], "noitinerary": [405, 413], "nolink": 323, "nologo": 311, "nom": [27, 116, 207, 275, 379, 393], "nombr": 27, "nomenclatur": 276, "nomodref": 277, "non": [3, 81, 175, 273, 274, 277, 278, 279, 281, 285, 286, 287, 288, 289, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 309, 310, 312, 313, 316, 320, 321, 322, 323, 324, 327, 328, 330, 332, 333, 336, 337, 340, 341, 344, 346, 347, 348, 351, 352, 354, 355, 359, 360, 361, 362, 366, 367, 368, 371, 376, 383, 385, 389, 393, 394, 396, 399, 403, 404, 409, 410, 413, 414, 417, 418, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "nonatomic": 393, "nondot": 284, "nonempty": 357, "nonetheless": [357, 421, 422, 423, 424], "nongnu": 386, "nonintuit": 419, "nonlazybind": [281, 357], "nonneg": 357, "nonnull": [281, 332, 337, 357], "nonsens": [363, 395, 431, 441], "nonstop": 416, "nonstop_tsc": 417, "nontemplated": 323, "nontemporal": [275, 357], "nonzero": [281, 403], "noop": 357, "nop": [334, 357, 396, 398, 415], "nor": [281, 289, 291, 332, 335, 339, 340, 342, 357, 359, 366, 371, 381, 396, 399], "norecurs": [281, 357], "noredzon": [281, 357], "noreg": 362, "noreturn": [281, 337, 357], "norm": 390, "normal": [278, 280, 281, 287, 289, 291, 292, 299, 314, 323, 324, 330, 332, 336, 337, 339, 341, 350, 357, 360, 364, 383, 385, 392, 394, 396, 398, 399, 403, 414, 430, 440], "normalformatting": 323, "normaliz": 409, "normalized": [273, 418], "normalizedpolar": 418, "normalizing": 418, "normally": [272, 275, 278, 281, 289, 296, 299, 300, 304, 307, 310, 312, 316, 321, 330, 331, 337, 347, 350, 357, 368, 382, 393, 394, 396, 401, 412, 416], "norman": 289, "normat": [403, 404], "northern": 275, "northov": 343, "not": [6, 15, 16, 21, 55, 80, 84, 97, 98, 100, 108, 111, 113, 149, 174, 178, 188, 189, 199, 224, 225, 243, 256, 257, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 313, 314, 315, 316, 317, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 367, 368, 371, 374, 375, 376, 379, 380, 382, 383, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "not_found": [436, 437, 438, 439, 440, 441], "not_inline_hd": 324, "not_null": 336, "notabl": [287, 289], "notably": [324, 333, 340, 347, 357, 383, 394], "notail": 357, "notat": [273, 274, 275, 299, 323, 357, 403, 418], "noted": [286, 398, 420], "noteligibletoimport": 357, "notfp": 403, "nothidden": 323, "nothing": [65, 159, 253, 275, 289, 292, 327, 339, 340, 350, 357, 381, 383, 385, 390, 399, 409, 414, 425, 431, 435, 441], "nothrow": 278, "notic": [287, 288, 289, 330, 335, 351, 366, 385, 427, 431, 437, 441], "notice": 337, "noticed": [367, 383], "noticing": [324, 340], "notif": [277, 345, 382], "notified": [313, 350], "notify": [275, 284, 330, 345, 390, 412], "notifying": 277, "noting": [337, 383], "notion": [289, 330, 357, 393, 414, 428, 429, 438, 439], "notional": 351, "notionally": [291, 343], "notorious": 399, "notw": 292, "noun": 291, "nounwind": [281, 292, 332, 337, 357, 367, 393, 409, 411], "nouveau": 419, "novel": [339, 357, 383], "novic": 287, "now": [285, 287, 289, 290, 291, 292, 296, 299, 323, 324, 330, 331, 332, 333, 347, 349, 350, 351, 355, 357, 359, 362, 365, 366, 367, 375, 382, 383, 385, 386, 388, 391, 393, 394, 396, 398, 406, 408, 411, 414, 416, 418, 420, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "nowaday": [349, 385], "nozero": 298, "npb": 386, "npb3": 386, "nproc": 341, "nsstring": 393, "nsw": [327, 330, 337, 340, 357], "nsz": 357, "nt": [349, 389], "nt_amd_amdgpu_hsa_metadat": 275, "nt_amd_amdgpu_metadat": 275, "nt_amdgpu_metadat": 275, "nta": 388, "nth": [291, 304], "ntid": 367, "ntohl": 289, "nuanceur": 27, "nuisanc": 330, "nul": [383, 430, 440], "null": [65, 159, 253, 275, 277, 281, 289, 291, 297, 298, 327, 332, 334, 336, 337, 357, 362, 366, 367, 368, 371, 381, 383, 393, 396, 398, 401, 413, 414, 418, 421, 426, 427, 428, 429, 430, 431, 432, 433, 439], "nullary": [426, 436], "nullpointerexcept": 336, "nullptr": [291, 357, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "nullunknown": 357, "num": [274, 275, 292, 294, 296, 304, 309, 317, 339, 357, 385, 398, 413], "num_repetit": 309, "numabbrevop": 281, "numarg": [396, 433], "numb": [28, 55, 80, 114, 118, 128, 149, 174, 205, 209, 220, 243, 270, 273, 274, 277, 278, 280, 282, 283, 284, 285, 287, 288, 289, 291, 292, 294, 296, 299, 301, 303, 304, 308, 309, 313, 316, 317, 322, 324, 327, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 343, 346, 349, 350, 353, 356, 357, 359, 360, 362, 365, 366, 371, 375, 376, 379, 381, 382, 383, 384, 385, 387, 388, 392, 393, 394, 396, 398, 403, 404, 405, 408, 409, 410, 412, 413, 415, 417, 418, 419, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "number": [27, 30, 116, 122, 207, 214, 273, 275, 289, 292, 301, 313, 323, 324, 328, 329, 341, 350, 357, 359, 362, 366, 380, 382, 393, 401, 409, 412, 413, 417, 425, 434, 435, 442], "number1": 366, "number2": 366, "numbered": [275, 281, 313, 335, 357, 363, 383, 395], "numberexpr": [426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "numberexprast": [426, 427, 428, 429, 430, 431, 432, 433], "numbering": [289, 357, 358, 365, 368, 414], "numberofauxsymbol": 444, "numberofcpucor": 359, "numbit": 383, "numblock": 375, "numbyt": 396, "numconst": 396, "numdirectorybyt": 375, "numel": 357, "numelt": 281, "numeltsparam": [281, 357], "numentr": 281, "numentry": 281, "numeric": [273, 274, 285, 314, 323, 342, 357, 362, 379, 383, 401, 404, 413, 415, 417, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "numerical": 357, "numerical_limit": 394, "numerous": [337, 383, 388, 402, 405, 413], "numexpress": 328, "numfaultingpc": 336, "numfilenam": 328, "numfunct": [336, 396], "numindic": 328, "numlin": 328, "numliveout": 396, "numloc": 396, "nummember": 383, "nummet": 339, "nummodul": 371, "nummodulevalu": 281, "numop": [281, 413], "numpoint": 309, "numrecord": 396, "numreg": 328, "numregionarray": 328, "numroot": 339, "numsgpr": 275, "numshadowbyt": 396, "numsourcefil": 371, "numspilledsgpr": 275, "numspilledvgpr": 275, "numstr": [425, 426, 427, 428, 429, 430, 431, 432, 433], "numstream": 375, "numval": [425, 426, 427, 428, 429, 430, 431, 432, 433], "numvgpr": 275, "numxform": 383, "nutshel": 383, "nuw": [337, 357], "nuzman": [387, 412], "nval": 357, "nvcall": 286, "nvcc": 289, "nvcl": 367, "nvidi": [289, 324, 331, 367], "nvptx": [341, 357, 419], "nvptx64": 367, "nvt": 413, "nvvm": 357, "nvvmreflect": 367, "nw": 386, "o": [275, 277, 279, 281, 291, 292, 294, 297, 299, 300, 303, 304, 305, 307, 308, 310, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 328, 334, 341, 342, 344, 352, 357, 359, 360, 362, 367, 368, 381, 383, 384, 391, 407, 409, 413, 414, 416, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 438, 439, 440, 441], "o0": [297, 304, 323, 329, 338, 343, 352, 393, 410, 413, 442], "o1": [297, 323, 343, 359, 413], "o2": [277, 278, 297, 313, 323, 337, 338, 341, 357, 367, 368, 380, 391, 393, 413], "o3": [297, 323, 337, 338, 341, 352, 367, 393, 407, 412, 413, 416, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "o4": 413, "o5": 413, "o6": 413, "o7": 413, "obey": 357, "obit": 357, "obj": [297, 303, 320, 332, 339, 342, 357, 389, 393, 398, 407, 408], "obj_root": 341, "objc": [308, 363, 393, 395, 419], "objc_autoreleas": 357, "objc_autoreleasepoolpop": 357, "objc_autoreleasepoolpush": 357, "objc_autoreleasereturnvalu": 357, "objc_copyweak": 357, "objc_destroyweak": 357, "objc_initweak": 357, "objc_loadweak": 357, "objc_loadweakretained": 357, "objc_moveweak": 357, "objc_property": 393, "objc_releas": 357, "objc_retain": 357, "objc_retainautoreleas": 357, "objc_retainautoreleasedreturnvalu": 357, "objc_retainautoreleasereturnvalu": 357, "objc_retainblock": 357, "objc_storestrong": 357, "objc_storeweak": 357, "objdump": [295, 416], "object": [277, 278, 280, 285, 289, 291, 293, 294, 295, 296, 297, 298, 303, 304, 308, 311, 316, 320, 321, 323, 325, 327, 328, 329, 330, 332, 334, 335, 336, 338, 339, 342, 343, 344, 348, 349, 351, 352, 353, 355, 358, 359, 360, 362, 366, 367, 368, 371, 374, 379, 385, 388, 394, 396, 399, 401, 403, 404, 407, 408, 411, 413, 414, 417, 418, 420, 421, 425, 426, 427, 429, 431, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444], "object_addr": 339, "object_error": 383, "objectbody": 404, "objectbuff": 361, "objectbufferstream": 361, "objectcach": 361, "objectfil": 361, "objectimag": 361, "objectivec": 357, "objectlai": [420, 421, 422, 423, 424], "objectlinkinglai": 421, "objfilenam": 371, "objptr": 357, "oblivious": 280, "obscur": [357, 383], "observ": [289, 291, 357, 388, 394, 398, 416, 434, 442], "observably": 398, "observed": [278, 313, 357, 359, 371, 374, 376], "obsolet": 284, "obtain": [275, 289, 324, 327, 328, 343, 357, 383, 399, 413, 416, 417, 428], "obtained": [275, 328, 352, 361, 365, 371, 381, 383, 403, 417], "obtaining": [348, 383], "obtus": 340, "obviat": 384, "obvious": [277, 278, 280, 285, 289, 291, 330, 335, 357, 366, 376, 381, 385, 393, 394, 396, 401, 426, 428, 430, 434, 438, 440, 442], "obviously": [277, 289, 291, 323, 330, 333, 340, 350, 357, 366, 371, 381, 383, 389, 403, 414, 425, 426, 435, 436], "ocaml": [287, 435, 436, 437, 438, 439, 440, 441], "ocaml_lib": [437, 438, 439, 440, 441], "ocamlbuild": [436, 437, 438, 439, 440, 441], "ocamlbuild_plugin": [437, 438, 439, 440, 441], "ocamldoc": 287, "occas": 291, "occasionally": [281, 324, 339], "occup": [15, 16, 17, 24, 25, 97, 98, 99, 100, 111, 112, 113, 188, 189, 190, 191, 202, 203, 204, 273, 316, 375], "occupied": 299, "occupy": 357, "occupying": 275, "occur": [273, 275, 281, 283, 289, 291, 292, 293, 296, 297, 299, 300, 301, 303, 307, 310, 312, 313, 321, 322, 330, 332, 339, 340, 343, 357, 358, 381, 383, 384, 385, 390, 393, 394, 396, 398, 399, 403, 404, 409, 410, 414, 426, 432, 436], "occured": 394, "occuring": 394, "occurred": [275, 352, 357, 390, 393], "occurrent": [281, 292], "occurring": [330, 340], "octal": [274, 299, 314, 323], "octet": 342, "odd": [291, 323, 330, 352, 357], "odr": [294, 357], "oeq": 357, "of": [3, 4, 6, 27, 28, 30, 36, 37, 55, 66, 80, 81, 82, 84, 100, 111, 113, 116, 117, 118, 122, 130, 131, 149, 160, 174, 175, 176, 178, 207, 208, 209, 210, 214, 216, 217, 222, 223, 224, 243, 254, 256, 270, 271, 272, 275, 276, 278, 279, 280, 281, 283, 285, 286, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 327, 329, 331, 332, 333, 334, 336, 342, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 358, 361, 362, 363, 364, 366, 368, 371, 374, 375, 376, 379, 380, 382, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 444], "of_channel": [436, 437, 438, 439, 440, 441], "of_list": [436, 437, 438, 439, 440, 441], "off": [3, 55, 81, 149, 175, 224, 225, 243, 256, 257, 273, 275, 285, 287, 289, 291, 299, 316, 324, 330, 338, 341, 346, 347, 348, 357, 365, 367, 380, 383, 390, 394, 398, 405, 407, 409, 416, 417, 420, 421, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442], "offen": [0, 1, 2, 3, 81, 175, 275], "offer": [278, 339, 383, 385, 388, 418], "offered": 398, "official": [288, 289, 330, 331, 341, 382, 385, 386, 389, 390, 407, 427], "officially": [324, 330, 344, 350, 366, 379, 431, 441], "offlin": [289, 367, 388], "offload": 391, "offset": [3, 4, 27, 28, 31, 32, 81, 82, 116, 118, 123, 124, 125, 175, 176, 207, 209, 215, 216, 217, 225, 256, 257, 272, 273, 274, 275, 281, 289, 292, 299, 308, 316, 327, 332, 339, 340, 343, 362, 366, 371, 375, 376, 383, 388, 391, 392, 393, 394, 396, 398, 405, 409, 413, 434, 442], "offset0": 275, "offset1": [275, 357], "offset12": [0, 1, 2], "offset13": [2, 256], "offset16": [0, 1, 2], "offset2": 357, "offset8": [0, 1, 2], "ofstream": 323, "oftc": [326, 419], "often": [275, 277, 278, 280, 285, 287, 289, 291, 292, 323, 324, 330, 332, 333, 335, 337, 339, 341, 347, 348, 351, 352, 357, 359, 362, 367, 381, 383, 393, 394, 398, 403, 409, 413, 416, 418, 419, 421, 426, 428, 431, 434, 436, 438, 441, 442], "oge": 357, "ogt": 357, "oh": [429, 439], "ok": [285, 291, 324, 330, 343, 346, 357, 359, 366, 383, 427, 429, 437], "okay": [291, 340, 357, 358, 382, 399, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "oland": 275, "old": [277, 278, 284, 292, 304, 329, 330, 339, 341, 353, 357, 371, 379, 383, 385, 388, 393, 407, 410, 431, 432, 433, 434, 441, 442], "old_binding": 441, "old_val": [439, 440, 441], "old_valu": 441, "oldbinding": [431, 432, 433, 441], "older": [275, 278, 313, 323, 330, 337, 339, 341, 346, 359, 364, 413], "oldest": [313, 428], "oldval": [357, 429, 430, 431, 432, 433], "ole": 357, "olt": 357, "omap": 371, "omiss": [330, 357], "omit": [275, 316, 320, 324, 357, 396], "omitted": [271, 272, 275, 289, 297, 300, 301, 305, 307, 310, 313, 314, 317, 318, 321, 357, 359, 426, 429, 436, 439], "omitting": [381, 414], "omod": [0, 1, 2], "omp": [381, 386, 410], "once": [275, 277, 281, 285, 287, 288, 289, 291, 293, 294, 296, 304, 308, 310, 317, 321, 323, 324, 326, 327, 330, 332, 333, 335, 336, 339, 340, 341, 342, 344, 348, 350, 352, 357, 358, 359, 360, 361, 363, 366, 368, 371, 382, 383, 387, 388, 389, 390, 391, 394, 395, 398, 399, 403, 404, 405, 408, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 426, 427, 428, 429, 431, 434, 436, 437, 438, 439, 441, 442], "one": [6, 24, 84, 104, 106, 107, 111, 178, 202, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 299, 304, 305, 306, 308, 309, 313, 314, 315, 316, 317, 318, 323, 324, 327, 328, 330, 331, 332, 333, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 371, 374, 375, 379, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "one_only": 334, "oneargfp": 403, "oneargfprw": 403, "oneormor": 323, "ongoing": [330, 390, 398, 415], "onlin": [275, 279, 287, 288, 431, 441], "only": [3, 22, 23, 33, 81, 109, 110, 116, 126, 128, 175, 200, 201, 207, 216, 217, 218, 220, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 296, 297, 298, 299, 301, 302, 304, 305, 306, 308, 309, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 362, 365, 366, 367, 371, 374, 375, 376, 384, 385, 386, 387, 388, 390, 391, 393, 394, 396, 398, 399, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "only_ascii": 359, "onlyfailsforsomexvalu": 383, "onlyfailsforsomexvalues2": 383, "onon": 357, "ons": 389, "onto": [275, 289, 330, 339, 343, 350, 357, 383, 393, 411], "ontwo": 357, "onward": [275, 287, 347], "onzero": 357, "oom": 359, "oop": 398, "op": [30, 122, 214, 289, 292, 296, 299, 327, 343, 357, 362, 394, 398, 401, 403, 413, 421, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "op0": 281, "op1": [281, 357], "op2": 357, "op3": [357, 413], "op3val": 413, "op_begin": 383, "op_end": 383, "op_iterator": 383, "op_sel": 2, "op_sel_h": 2, "opaqu": [280, 281, 334, 343, 381, 383, 398, 421, 427], "opaqued": 357, "opc": [403, 430, 431, 432, 433], "opcod": [6, 66, 84, 160, 178, 254, 273, 274, 275, 278, 289, 291, 309, 313, 343, 351, 354, 357, 362, 366, 383, 387, 403, 405, 413, 426, 427, 430, 431, 432, 433, 436, 437, 440], "opcode_nam": 309, "opcstr": 413, "open": [275, 284, 287, 289, 291, 293, 324, 326, 330, 342, 343, 348, 351, 357, 363, 366, 382, 383, 385, 395, 396, 398, 399, 416, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "openbsd": 415, "opencl": 367, "opened": [291, 403, 419], "openfil": 291, "openfileforwriting": 399, "openformattedfil": 383, "opengl": [291, 434, 442], "opening": [357, 358, 401], "openmp": [275, 292, 330, 410], "openmp4": 387, "openorcreatefileforwriting": 399, "opensourc": 359, "openssl": 359, "openwork": 398, "oper": [8, 9, 12, 13, 14, 15, 16, 30, 80, 86, 87, 90, 91, 92, 97, 98, 122, 174, 180, 181, 185, 186, 187, 188, 189, 192, 193, 194, 214, 270, 273, 274, 275, 277, 278, 286, 289, 291, 297, 298, 302, 313, 324, 325, 327, 328, 332, 333, 336, 339, 341, 343, 359, 365, 366, 368, 381, 387, 394, 398, 403, 405, 412, 413, 416, 420, 421, 425, 428, 429, 430, 431, 435, 438, 439, 440, 441], "operand": [3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 281, 283, 289, 291, 292, 301, 313, 332, 333, 334, 340, 343, 365, 366, 381, 383, 387, 388, 393, 401, 403, 427, 430, 431, 432, 433, 437, 440, 441], "operand0": [272, 275], "operand1": [272, 275], "operand_type_list_end": 413, "operandlist": 403, "operandmap": 413, "operandty": 289, "operandtyp": 413, "operandv": [430, 431, 432, 433], "operat": [272, 273, 274, 278, 286, 289, 299, 324, 328, 336, 340, 343, 357, 383, 403, 404, 412, 413, 414, 418, 428, 438], "operated": [280, 357], "operating": [273, 280, 287, 289, 299, 325, 335, 343, 357, 359, 367, 391, 394, 399, 414, 415, 432, 434, 442], "operating_system": 357, "operatively": 411, "operator": [281, 283, 289, 291, 299, 340, 357, 366, 381, 383, 401, 403, 404, 413, 418, 420, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443], "opnam": 413, "opnod": 413, "opportunit": [343, 385, 412, 413], "opportunity": [276, 327, 337, 357, 381, 421, 428, 438], "opposed": [314, 323, 334, 341, 343, 350, 357, 358, 374, 384, 404, 439], "opposit": [291, 299, 358, 383, 401, 415, 418], "opreand": 383, "oprofil": [287, 380], "opt": [0, 1, 2, 271, 277, 285, 291, 293, 295, 330, 335, 339, 341, 342, 349, 352, 357, 365, 367, 381, 383, 388, 393, 394, 398, 408, 409, 412, 419, 421, 424, 428, 429, 431, 432, 438, 439, 441], "optbisect": 368, "opted": [278, 339], "optforfuzzing": [281, 357], "optimal": [272, 275, 289, 313, 337, 357, 380, 387, 412], "optimally": 393, "optimis": [381, 438], "optimistic": [313, 343, 357], "optimistically": 313, "optimiz": [276, 277, 280, 281, 283, 285, 287, 291, 293, 294, 295, 297, 298, 304, 317, 323, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 354, 355, 356, 357, 358, 366, 367, 380, 383, 387, 388, 394, 396, 397, 398, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 435, 437, 439, 440, 441, 443], "optimizationbit": 323, "optimizationlevel": 323, "optimizationlist": 323, "optimized": [276, 278, 287, 289, 292, 297, 321, 335, 337, 341, 343, 347, 357, 358, 360, 365, 367, 380, 383, 384, 393, 421, 422, 428, 433, 438], "optimizefunct": [422, 423, 424], "optimizelai": [421, 422, 423, 424], "optimizemodul": [421, 422, 423, 424], "optimizer": [278, 285, 293, 337, 340, 355, 357, 393, 431, 441], "optimizing": [278, 281, 285, 289, 328, 337, 343, 345, 365, 380, 381, 387, 396], "optimz": 338, "optimzed": 410, "opting": 368, "option": [38, 132, 226, 276, 277, 280, 281, 285, 288, 289, 291, 295, 306, 311, 324, 327, 328, 329, 331, 335, 338, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353, 357, 360, 361, 362, 364, 366, 368, 380, 381, 384, 385, 387, 388, 389, 393, 394, 401, 404, 405, 407, 410, 412, 413, 414, 415, 416, 419, 426, 427, 428, 432, 437, 439, 440, 441], "optional": [3, 22, 23, 30, 33, 55, 80, 81, 109, 110, 122, 126, 149, 174, 175, 200, 201, 214, 218, 224, 225, 243, 257, 270, 271, 272, 275, 277, 288, 289, 292, 296, 298, 299, 308, 313, 314, 323, 334, 339, 356, 357, 358, 359, 362, 383, 384, 385, 403, 404, 405, 407, 409, 410, 414, 418, 419, 427, 429, 430, 431, 432, 433, 437, 439, 441], "optional_dir": 384, "optionaldbgheadersiz": 371, "optionally": [12, 13, 14, 15, 16, 90, 91, 92, 97, 98, 185, 186, 187, 188, 189, 192, 193, 194, 281, 289, 304, 313, 323, 324, 330, 334, 341, 344, 352, 357, 364, 383, 396, 398, 403, 413, 416, 418, 427, 431, 437, 441], "optlevel": 323, "optnon": [281, 357, 368], "optnum": 323, "optsiz": [281, 343, 357], "optyp": 413, "optzn": [352, 428, 429, 430, 431, 438, 439, 440, 441], "opval": 413, "op\u00e9rand": [27, 35, 129, 221], "or": [3, 6, 15, 16, 26, 27, 30, 55, 80, 81, 84, 97, 98, 100, 111, 113, 114, 115, 116, 117, 122, 149, 174, 175, 178, 188, 189, 191, 202, 204, 205, 206, 207, 208, 210, 214, 225, 243, 256, 257, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 316, 317, 318, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 375, 376, 379, 381, 382, 383, 384, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "orbit": [430, 440], "orc": [388, 420, 422, 423, 424, 428, 429, 430, 431, 433, 443], "orcabisupport": 424, "orcjit": [420, 421, 422, 423, 424], "orcremotetargetclient": 424, "orcremotetargetserv": 424, "orcx86_64_sysv": 424, "ord": 357, "order": [80, 174, 270, 271, 272, 277, 278, 280, 281, 287, 289, 292, 296, 302, 313, 314, 316, 321, 323, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 351, 354, 356, 359, 360, 362, 365, 366, 368, 371, 375, 376, 379, 381, 383, 384, 385, 387, 388, 391, 393, 394, 396, 398, 399, 401, 403, 408, 409, 413, 414, 422, 425, 426, 427, 428, 429, 431, 435, 436, 437, 438, 439, 441], "ordered": [291, 323, 337, 351, 357, 366, 383, 401, 403, 417, 429, 439], "ordered_append_term": 275, "ordering": [275, 289, 292, 306, 313, 323, 351, 365, 366, 381, 383, 385, 410, 417], "ordinal": 323, "ordinary": [328, 357, 383, 418], "org": [284, 287, 290, 291, 315, 330, 338, 341, 342, 344, 345, 348, 349, 350, 351, 359, 362, 363, 382, 385, 389, 390, 407, 408, 409, 418, 419, 420, 427], "organiz": [291, 332, 366, 384, 393, 419, 428, 438], "organized": [273, 275, 332, 356, 398], "organizer": 390, "organizing": 288, "ori": 289, "orient": [290, 434, 442], "oriented": [291, 351, 383, 386, 388, 393], "orig": 357, "origin": [290, 341, 382, 385], "original": [274, 289, 292, 299, 302, 304, 316, 327, 330, 332, 340, 357, 371, 383, 387, 388, 390, 393, 394, 398, 402, 405, 410, 411, 415, 420, 421, 433], "originally": [289, 332, 357, 399, 404], "originat": 387, "originating": 399, "originput": 323, "orl": 394, "orq": 394, "orr": 357, "orthogonal": 278, "os": [278, 279, 287, 289, 299, 329, 333, 339, 341, 346, 350, 357, 383, 388, 394, 409, 414, 418], "oscillator": 417, "osi": 335, "oso": 294, "oss": [338, 350, 359, 385], "ostream": [291, 383], "osuosl": 345, "osx": 299, "other": [3, 6, 84, 178, 272, 273, 274, 275, 276, 278, 280, 281, 282, 284, 285, 287, 289, 290, 292, 294, 296, 297, 298, 299, 304, 305, 306, 313, 314, 315, 320, 321, 322, 324, 326, 327, 328, 330, 331, 332, 333, 334, 339, 341, 342, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 365, 366, 368, 371, 374, 375, 376, 379, 381, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 443], "other_funct": 394, "otherspecialsquar": 351, "othervt": 413, "otherwis": [275, 276, 278, 281, 282, 284, 285, 287, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 313, 318, 321, 322, 323, 324, 327, 328, 332, 337, 339, 344, 345, 346, 349, 350, 352, 357, 358, 360, 366, 368, 371, 379, 381, 382, 383, 390, 394, 398, 403, 404, 410, 414, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "otp": 357, "ought": 291, "our": [276, 287, 288, 289, 290, 291, 323, 324, 327, 330, 331, 339, 341, 352, 360, 366, 367, 376, 379, 380, 383, 385, 390, 393, 394, 398, 412, 414, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "ourfpm": 433, "ourfunctionpass": 383, "ourselv": [291, 367, 379, 393, 420], "out": [275, 276, 277, 278, 279, 280, 281, 284, 285, 288, 289, 291, 296, 298, 299, 301, 302, 304, 308, 309, 311, 313, 315, 320, 323, 324, 327, 330, 331, 332, 333, 338, 339, 341, 342, 343, 346, 347, 348, 349, 350, 352, 354, 355, 357, 358, 359, 362, 365, 366, 374, 375, 379, 381, 382, 383, 385, 387, 388, 389, 390, 391, 393, 394, 397, 398, 399, 401, 402, 403, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "out_of_bound": 288, "outdated": 349, "outerstructty": 357, "outfil": 319, "outgoing": [282, 357], "outlin": [327, 332, 394, 418], "outlined": [286, 289, 327, 330, 332, 414], "outliv": [357, 359, 381], "outloop": [429, 430, 431, 432, 433, 441], "outlying": 332, "outoperandlist": [405, 413], "output": [12, 13, 14, 15, 16, 18, 19, 20, 21, 39, 40, 41, 42, 43, 44, 45, 46, 73, 74, 75, 76, 90, 91, 92, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 136, 137, 138, 139, 140, 141, 142, 143, 167, 168, 169, 170, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 230, 231, 232, 233, 234, 235, 236, 237, 263, 264, 265, 266, 273, 275, 276, 277, 279, 282, 285, 286, 287, 289, 291, 292, 293, 294, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 333, 339, 341, 342, 347, 352, 354, 362, 363, 365, 367, 381, 383, 387, 389, 391, 393, 395, 401, 405, 407, 409, 410, 413, 414, 415, 416, 417, 419, 421, 426, 428, 429, 430, 431, 432, 433, 436, 438, 439, 440, 441, 444], "output_format": 416, "outputdebuginfo": 323, "outputfilenam": 323, "outputting": 316, "outright": 340, "outsid": [275, 277, 290, 323, 327, 330, 334, 340, 344, 348, 357, 358, 359, 366, 381, 383, 387, 389, 394, 396, 398, 399, 403, 408, 411, 414, 419, 421, 427, 437], "outsider": 291, "outstanding": [80, 116, 174, 207, 270], "outstream": 339, "over": [275, 277, 280, 281, 284, 285, 288, 289, 292, 313, 316, 324, 330, 340, 347, 351, 357, 358, 359, 360, 365, 381, 382, 385, 388, 394, 397, 398, 403, 404, 418, 421, 422, 423, 424, 425, 427, 429, 430, 431, 433, 434, 435, 437, 439, 440, 441, 442], "overall": [284, 289, 330, 332, 339, 340, 347, 357, 379, 382, 394, 401, 429, 439], "overboard": 291, "overestimating": 357, "overflow": [274, 275, 330, 337, 359, 391, 394, 417], "overflowed": 357, "overhaul": 350, "overhead": [335, 339, 343, 354, 357, 383, 385, 387, 394, 417, 422, 428, 438], "overlaid": 365, "overlap": [288, 289, 292, 313, 357, 412, 414], "overlapping": [277, 292, 355, 357, 396], "overlay": [331, 371], "overload": [324, 388, 414], "overloaded": [324, 333, 343, 351, 357, 367, 383, 398, 413], "overloading": [357, 383, 430, 440], "overly": 330, "overrid": [287, 288, 289, 291, 297, 298, 304, 307, 323, 324, 351, 357, 359, 366, 367, 381, 383, 391, 394, 403, 413, 414, 421, 427, 428, 429, 430, 431, 432, 433], "overridden": [277, 341, 357, 359, 413], "overriding": [278, 297, 298, 343, 393, 401, 404, 414, 433], "overrod": 403, "oversimplified": 383, "oversized": 383, "overview": [271, 286, 287, 313, 323, 326, 361, 363, 395, 414, 429, 439], "overwhelming": [425, 435], "overwrit": [323, 384, 396, 415], "overwriting": [384, 394, 396], "overwritten": [289, 332, 357, 396], "ovl": 371, "own": [275, 281, 282, 287, 288, 289, 291, 323, 324, 328, 330, 331, 332, 333, 339, 341, 344, 348, 350, 351, 356, 357, 359, 365, 379, 381, 382, 383, 384, 385, 387, 390, 393, 396, 399, 401, 406, 408, 409, 413, 414, 425, 427, 428, 430, 431, 434, 435, 440, 441, 442], "owned": 361, "owner": [289, 299, 326, 350, 382, 385], "ownership": [330, 383, 423, 424, 428, 429, 430, 431, 432, 433], "owning": 383, "p": [273, 275, 277, 280, 287, 289, 291, 292, 296, 299, 304, 308, 309, 314, 320, 321, 329, 331, 340, 354, 357, 367, 383, 388, 398, 403, 411, 413, 416, 424, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "p0": [34, 127, 219, 343], "p0928": 394, "p0f_isvoidf": 398, "p0i32": 292, "p0i64": 292, "p0i8": [357, 367], "p0v16f32": 357, "p0v2f64": 357, "p0v4p0f_i32f": 357, "p0v8f64": 357, "p0v8i32": 357, "p0v8p0f64": 357, "p0v8p0f_i32f": 357, "p1": [357, 365, 367, 393], "p10": [34, 127, 219], "p15": 367, "p16": 367, "p17": 367, "p18": 367, "p19": 367, "p1i8": [367, 398], "p2": [292, 343, 357, 365, 367, 393], "p20": [34, 127, 219, 367], "p2align": [275, 394], "p3": [292, 365, 367, 393], "p3i8": 367, "p4": 367, "p4i8": 367, "p5": 367, "p5i8": 367, "p9": 388, "p_arch": 324, "p_reg": 289, "pa": 383, "pack": [275, 289, 350, 387, 388, 389, 427, 437], "packag": [287, 324, 331, 341, 345, 346, 348, 349, 350, 384, 389, 407], "package_string": 287, "packaged": [282, 324, 350], "packager": 380, "packaging": 419, "packed": [100, 111, 113, 191, 202, 204, 272, 281, 313, 337, 357], "packet": [275, 401], "packetiz": 322, "packetizing": 289, "packing": [93, 95, 96, 100, 104, 106, 107, 111, 113, 273, 289, 327], "pact": 387, "pad": [273, 327, 328, 332, 355, 357, 362, 417], "padded": [299, 328], "padding": [275, 281, 299, 316, 328, 343, 357, 371, 396], "padding1": 371, "padding2": 371, "padparam": 332, "pag": [275, 276, 287, 291, 295, 316, 323, 325, 326, 330, 334, 336, 339, 341, 342, 361, 375, 379, 382, 383, 388, 393, 394, 400, 406, 409, 412, 419, 427], "paging": [275, 398], "pain": [323, 383], "painful": [324, 329, 330, 382, 383], "painlessly": 323, "pair": [273, 274, 275, 277, 278, 279, 280, 289, 291, 292, 297, 305, 313, 332, 334, 353, 357, 359, 365, 366, 381, 383, 398, 413, 417, 418, 422, 426, 429, 431, 432, 433, 436, 439], "paired": [275, 278, 394], "pairwis": 277, "pamel": 386, "pan": [382, 394], "pand": 407, "pandaboard": 346, "pap": [291, 324, 365, 394], "paper": [279, 289, 325, 383], "papertrail": 294, "paradigm": [340, 383, 388], "paragraph": [291, 363, 366, 393, 395], "parallel": [287, 289, 292, 296, 309, 313, 341, 343, 357, 365, 380, 384, 385, 410], "parallel_dir": 384, "parallel_loop_access": 410, "parallelism": [313, 345, 358, 386, 387, 412], "param": [0, 1, 2, 65, 159, 253, 275, 291, 296, 339, 342, 345, 357, 367, 437, 438, 439, 440, 441], "param1": 383, "param2": 383, "paramattr": 281, "paramet": [34, 65, 127, 159, 219, 253, 273, 281, 283, 287, 289, 291, 296, 309, 323, 324, 327, 332, 334, 339, 353, 361, 366, 367, 381, 383, 388, 398, 401, 413, 414, 417, 418, 427, 437], "parameter": [30, 122, 214, 273, 275, 281, 287, 288, 289, 291, 296, 309, 323, 327, 339, 340, 353, 357, 359, 366, 381, 383, 388, 398, 405, 413, 417, 427, 437], "parameteriz": 343, "parameterized": 403, "parameterless": 362, "parametrized": 404, "paramidx": 281, "paramidx0": 281, "paramidx1": 281, "paramt": 334, "paramty": 281, "parenexpr": [426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "parent": [275, 282, 288, 291, 296, 308, 356, 357, 383, 429, 439], "parent_scop": 288, "parenthandl": 357, "parenthes": [296, 357, 401, 426, 436], "parentty": 357, "paricular": 324, "paritioning": 296, "parlanc": [288, 365, 411, 425, 435], "pars": [281, 296, 308, 315, 322, 324, 333, 335, 338, 341, 354, 356, 357, 359, 360, 361, 362, 393, 396, 398, 401, 405, 413, 418, 425, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443], "parsabl": [317, 398], "parse_arg": [436, 437, 438, 439, 440, 441], "parse_bin_rh": [436, 437, 438, 439, 440, 441], "parse_binary_precedent": [440, 441], "parse_definit": [436, 437, 438, 439, 440, 441], "parse_expr": [436, 437, 438, 439, 440, 441], "parse_extern": [436, 437, 438, 439, 440, 441], "parse_failed": 383, "parse_ident": [436, 437, 438, 439, 440, 441], "parse_operator": [440, 441], "parse_primary": [436, 437, 438, 439, 440, 441], "parse_prototyp": [436, 437, 438, 439, 440, 441], "parse_toplevel": [436, 437, 438, 439, 440, 441], "parse_unary": [440, 441], "parse_var_in": 441, "parse_var_nam": 441, "parseabl": [357, 398], "parsebinoprh": [426, 427, 428, 429, 430, 431, 432, 433], "parsecommandlineopt": [416, 424], "parsed": [281, 289, 292, 308, 313, 323, 324, 333, 357, 391, 398, 401, 404, 417, 418, 426, 428, 430, 431, 436, 437, 438, 439, 440, 441], "parsedattrinfo": 401, "parsedefinit": [426, 427, 428, 429, 430, 431, 432, 433], "parseexpress": [426, 427, 428, 429, 430, 431, 432, 433], "parseextern": [426, 427, 428, 429, 430, 431, 432, 433], "parseforexpr": [429, 430, 431, 432, 433], "parseidentifierexpr": [426, 427, 428, 429, 430, 431, 432, 433], "parseifexpr": [429, 430, 431, 432, 433], "parsenumberexpr": [426, 427, 428, 429, 430, 431, 432, 433], "parseparenexpr": [426, 427, 428, 429, 430, 431, 432, 433], "parsepasspipelin": 338, "parseprimary": [426, 427, 428, 429, 430, 431, 432, 433, 440], "parseprototyp": [426, 427, 428, 429, 430, 431, 432, 433], "parser": [313, 338, 359, 401, 426, 436], "parserclass": 323, "parsesubtargetfeatur": 413, "parsetoplevelexpr": [426, 427, 428, 429, 430, 431, 432, 433], "parsetypetyp": 333, "parseunary": [430, 431, 432, 433, 440], "parsevalid": 416, "parsevarexpr": [431, 432, 433], "parsing": [281, 288, 324, 357, 358, 383, 393, 401, 404, 418, 419, 425, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441], "part": [274, 277, 278, 280, 281, 284, 285, 286, 287, 288, 289, 291, 293, 294, 296, 323, 324, 327, 330, 332, 337, 338, 339, 340, 341, 342, 343, 347, 348, 351, 356, 357, 359, 360, 366, 375, 376, 381, 383, 385, 386, 387, 388, 390, 393, 394, 397, 398, 401, 404, 405, 407, 409, 410, 413, 414, 415, 416, 418, 420, 421, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "partial": [289, 322, 357, 358, 359, 383, 388, 393, 396, 410, 418], "partialali": 277, "partially": [273, 357, 381, 385, 386, 410, 417], "particip": 290, "participat": [275, 290, 330, 357, 382, 383, 409], "participated": 382, "particlefilt": 386, "particular": [273, 277, 278, 279, 281, 284, 285, 287, 289, 291, 296, 304, 316, 323, 327, 328, 330, 332, 337, 339, 340, 341, 343, 347, 351, 352, 355, 356, 357, 359, 361, 365, 366, 367, 371, 375, 376, 381, 383, 386, 387, 388, 390, 393, 394, 396, 398, 401, 403, 404, 405, 409, 411, 413, 414, 415, 417, 426, 428, 431, 436, 438, 441], "particularly": [278, 291, 292, 337, 343, 345, 357, 383, 385, 394, 398, 413, 414, 415, 417], "partit": [285, 346, 358, 365], "partitioned": [289, 297, 365], "partitioning": [365, 422], "partn": 383, "party": [291, 341, 384, 390], "pascal": 357, "pass": [275, 276, 278, 280, 282, 285, 289, 292, 293, 295, 296, 297, 298, 304, 306, 313, 321, 323, 324, 326, 330, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 347, 348, 351, 352, 355, 356, 357, 358, 359, 360, 361, 364, 365, 367, 383, 384, 385, 387, 388, 389, 393, 394, 396, 407, 408, 409, 411, 413, 416, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 430, 431, 432, 433, 434, 436, 441, 442], "passag": 291, "passbuild": 338, "passed": [275, 276, 277, 280, 287, 288, 289, 296, 297, 298, 309, 317, 323, 324, 327, 329, 331, 332, 336, 338, 339, 340, 341, 350, 352, 353, 354, 355, 357, 358, 359, 361, 366, 368, 371, 383, 387, 388, 391, 392, 394, 396, 397, 398, 401, 407, 409, 410, 413, 416, 421, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "passing": [275, 276, 279, 280, 287, 288, 289, 291, 292, 323, 332, 334, 341, 343, 352, 355, 357, 359, 361, 381, 388, 394, 405, 409, 420, 421, 422, 428, 434, 442], "passiv": 368, "passmanag": [323, 361, 383, 416, 421, 428, 432, 438, 439, 440, 441], "passmanagerbas": 413, "passmanagerbuild": 367, "passmanagerimpl": 416, "passnam": [321, 383], "passopt": 414, "passthru": 357, "password": [330, 345, 385], "past": [291, 330, 340, 343, 357, 382, 383, 385, 387, 398, 403, 413, 417, 430, 433, 440], "pat": [289, 405, 413], "patch": [279, 291, 337, 342, 345, 347, 357, 358, 382, 383, 385, 398, 409, 415, 416, 419, 428, 433, 438], "patch_premain": [415, 416], "patch_status": 415, "patchabl": [339, 357, 396, 398], "patched": [339, 396, 419], "patching": [336, 339, 350, 357, 396, 398, 415, 417], "patchpoint": [357, 398], "patfrag": 413, "path": [276, 277, 278, 287, 288, 291, 293, 294, 296, 297, 298, 299, 302, 303, 304, 308, 309, 311, 317, 320, 322, 324, 332, 334, 336, 337, 339, 341, 342, 344, 346, 347, 348, 349, 359, 367, 371, 381, 383, 384, 385, 394, 398, 399, 407, 408, 409, 416, 431, 441], "path_to_clang": 276, "path_to_llvm": 341, "pathnam": [303, 341], "pathsep": [296, 409], "patient": [290, 414], "patleaf": 413, "pattern": [0, 1, 2, 276, 278, 280, 288, 289, 295, 296, 304, 308, 309, 323, 327, 333, 340, 343, 357, 367, 375, 383, 387, 391, 393, 394, 401, 403, 405, 409, 413, 416, 422, 425, 427, 435, 436], "paul": 394, "paulkoch": 394, "paus": [339, 385, 421], "pausing": 277, "pay": [291, 409, 413], "paying": [330, 394], "payload": [289, 357, 417], "pb": 383, "pbqp": [289, 297], "pc": [28, 118, 209, 274, 289, 332, 336, 357, 359, 392, 394, 407, 409, 412, 413], "pch": 393, "pcre": 359, "pcre2": 359, "pct": 316, "pd": 403, "pdat": [334, 371], "pdb": [287, 295, 374, 375, 393, 419], "pdbdllrbld": 371, "pdbdllversion": 371, "pdbfilepathnameindex": 371, "pdbstreamhead": 376, "pdbstreamvers": 376, "pdbutil": 295, "pdf": [279, 394], "pe": [325, 339, 371, 376], "peculiar": 404, "pedantic": 287, "peek": [436, 437, 438, 439, 440, 441], "peephol": [289, 333, 383, 414, 428, 429, 430, 431, 438, 439, 440, 441], "peform": 280, "pen": 386, "penalty": [357, 383], "pending": [329, 341, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "pentium": [341, 413], "penultimat": 413, "peopl": [284, 289, 290, 291, 323, 326, 330, 333, 335, 340, 341, 350, 357, 382, 385, 389, 394, 399, 414, 419, 420, 425, 434, 435, 442], "per": [15, 16, 97, 98, 116, 188, 189, 207, 274, 275, 278, 281, 282, 287, 289, 299, 301, 305, 313, 314, 316, 323, 327, 328, 332, 339, 343, 350, 351, 356, 357, 359, 360, 362, 365, 367, 382, 383, 385, 391, 393, 394, 396, 398, 401, 404, 408, 409, 414, 416, 418, 420, 421, 428, 438, 443], "perceiv": [434, 442], "percent": 277, "percentag": [301, 316, 383], "perf": [276, 279, 287, 407], "perf_test": 386, "perfect": [280, 330, 383], "perfectly": [289, 291, 292, 316, 335, 340, 357, 426, 436], "perform": [275, 276, 277, 278, 279, 280, 285, 286, 287, 288, 289, 291, 296, 297, 299, 305, 309, 317, 321, 323, 327, 330, 332, 333, 336, 338, 339, 340, 341, 343, 346, 347, 350, 355, 356, 357, 358, 359, 360, 361, 366, 367, 368, 381, 383, 384, 385, 387, 389, 391, 393, 394, 397, 398, 399, 403, 407, 409, 410, 411, 413, 414, 415, 419, 420, 422, 431, 432, 441], "performed": [274, 275, 277, 278, 285, 287, 288, 289, 323, 331, 337, 339, 343, 357, 360, 362, 367, 368, 381, 383, 385, 388, 394, 398, 409, 413, 421, 427, 437], "performing": [275, 280, 289, 291, 332, 340, 357, 359, 368, 381, 383, 387, 398, 401, 412, 413, 434, 442], "perfunctionstat": 416, "perhap": [277, 291, 339, 343, 357, 366, 376, 383], "period": [285, 286, 330, 357, 409], "periodic": 359, "periodically": [330, 339, 359, 385, 415], "perl": 339, "perldoc": 341, "perm": [128, 220, 297, 334, 339, 341, 345, 357, 361, 383, 403, 409, 420, 431, 441], "permanent": [390, 422], "permiss": [128, 220, 299, 330, 361, 390], "permit": [289, 357, 383, 403, 431, 432, 433, 441], "permitted": [334, 357], "permitting": 358, "permut": [273, 357], "perpetual": 415, "perpetually": 330, "perserved": 357, "persist": [288, 383], "persisted": 331, "persistent": 359, "persisting": 290, "person": [290, 352, 363, 382, 390, 395, 418, 421], "personal": 290, "personalit": 332, "personality": [281, 332, 358], "personalityfn": 281, "personally": 290, "personlist": 418, "perspect": [277, 290, 327, 332, 351, 357, 390, 398, 414], "pertain": [330, 357], "pertaining": [332, 393], "pervas": 383, "pervasively": 351, "pervert": [402, 405], "pessimiz": [336, 381, 383], "peut": [35, 129, 221], "pf0": 366, "pf1": 366, "pf_inet": 424, "pg0": 366, "pg1": 366, "pgo": [317, 379, 394, 419], "pgr": 419, "ph": [357, 393], "phab": 385, "phabricator": [326, 330, 341, 385, 419], "phas": [293, 297, 332, 339, 343, 350, 357, 368, 383, 389, 421, 426, 430, 436, 440], "phase3": [350, 389], "phi": [281, 289, 301, 327, 332, 343, 381, 393, 412, 429, 430, 431, 432, 433, 439, 440, 441], "phid": 291, "phielimin": 289, "phieliminationid": 289, "philosophy": [356, 419], "phinod": [291, 365, 429, 430, 431, 432, 433], "phis": [291, 365], "phoronix": 386, "php": [382, 386], "phras": 291, "phrasing": 288, "physical": [275, 290, 313, 343, 357, 362, 371, 383, 390, 398, 403, 413], "physically": 390, "physreg": 289, "pi": [274, 339, 383, 391], "pi8": 411, "pic": [289, 298, 349, 352, 362, 388, 393, 413], "pick": [280, 287, 289, 291, 298, 339, 340, 343, 348, 349, 352, 357, 382, 383, 385, 398, 413, 438], "picked": [313, 407], "picking": 291, "pictur": [340, 379, 417, 427, 437], "picus": 343, "piec": [281, 285, 288, 289, 291, 309, 330, 337, 340, 341, 342, 347, 350, 352, 356, 357, 393, 398, 403, 409, 425, 426, 427, 429, 430, 431, 433, 435, 436, 437, 439, 440, 441], "pieg": 27, "pienaar": 324, "pifft": 408, "piledriv": 388, "ping": [326, 330, 366], "pinned": 357, "pinning": 357, "pinsrd": 292, "pinsrd_1": 292, "pinst": 383, "pip": [275, 292, 296, 313, 399, 407, 416], "piped": 292, "pipefail": 296, "pipelin": [275, 281, 296, 301, 313, 337, 338, 357, 367, 393, 398, 409, 410, 413, 414, 421, 438, 439, 440, 441], "pipelined": 381, "pipelining": 414, "pipermail": 385, "pitcairn": 275, "pixel": [15, 16, 65, 97, 98, 159, 188, 189, 253], "pl": [388, 416, 418], "plac": [275, 276, 279, 280, 285, 289, 291, 294, 296, 298, 328, 330, 331, 332, 333, 334, 337, 339, 340, 341, 343, 344, 348, 356, 357, 362, 366, 382, 383, 387, 388, 389, 394, 396, 398, 403, 405, 409, 414, 418, 425, 426, 427, 428, 430, 431, 434, 435, 437, 438, 440, 441, 442], "placed": [275, 294, 296, 299, 313, 323, 327, 334, 341, 345, 348, 357, 362, 393, 407, 409, 410, 413], "placehold": 332, "placeholder": 331, "placesafepoint": 339, "placing": [323, 337, 357, 381, 384, 398, 407, 412], "plain": [292, 362, 363, 383, 385, 395, 414, 420], "plan": [289, 330, 335, 347, 355, 383, 393, 397, 398, 405, 412, 415, 419, 430, 440], "planned": [330, 339, 367, 387], "planted": 414, "plat": [323, 383], "platform": [275, 276, 278, 288, 289, 316, 327, 330, 332, 339, 341, 345, 346, 347, 349, 350, 356, 357, 360, 376, 379, 380, 383, 388, 391, 394, 396, 399, 414, 417, 419, 420, 424, 428, 430, 438], "plausibl": 284, "play": [366, 383, 404, 414, 425, 434, 435, 442], "playground": [425, 435], "pldi": [339, 387], "pleas": [276, 277, 278, 284, 287, 289, 290, 291, 315, 322, 326, 330, 337, 339, 341, 342, 345, 346, 347, 349, 350, 352, 354, 356, 357, 363, 367, 382, 383, 388, 389, 390, 395, 398, 400, 403, 404, 406, 409, 413, 416, 427, 434, 437, 442, 443], "plethor": [335, 341, 383], "pll": 388, "plot": [430, 440], "plott": [430, 440], "plotting": [430, 440], "plu": 388, "plug": [368, 427, 437], "plugin": [293, 298, 321, 347, 357, 368, 419], "plugin_tool": 414, "pluginfilenam": 298, "plus": [274, 275, 280, 281, 330, 332, 339, 357, 371, 383, 393, 413, 419, 421, 426, 429, 436, 439], "plusieur": 419, "pm": [413, 414], "pmbuild": 367, "pmdatamanag": 416, "pmtoplevelmanag": 416, "pn": [291, 343, 429, 430, 431, 432, 433], "png": [287, 359, 394], "pni8": 332, "pod": 291, "point": [29, 119, 121, 211, 213, 272, 273, 277, 278, 281, 282, 285, 286, 287, 289, 291, 297, 304, 309, 313, 316, 323, 324, 331, 332, 333, 336, 337, 341, 343, 345, 348, 349, 350, 351, 355, 358, 360, 361, 362, 365, 366, 367, 375, 381, 385, 388, 389, 391, 393, 394, 398, 399, 405, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "point_numb": [26, 114, 115, 205, 206], "pointcount": 339, "pointe": [275, 281, 357], "pointed": [281, 289, 332, 340, 357, 383, 398, 402, 405, 422], "pointee_align": 275, "pointeealign": 275, "pointer": [278, 289, 324, 327, 332, 335, 339, 340, 343, 355, 358, 361, 366, 367, 381, 383, 393, 394, 396, 401, 411, 414, 418, 420, 425, 428, 429, 431, 434, 435, 439, 441, 442], "pointer1": 394, "pointer2": 394, "pointer_offset": 398, "pointertyp": 383, "pointing": [284, 323, 350, 357, 371, 383, 385, 393, 415, 431, 441], "pointless": [332, 365, 398], "pointstoconstantmemory": 357, "pointtoconstantmemory": 277, "pointy": 418, "poison2": 357, "poison3": 357, "poison4": 357, "poison_yet_again": 357, "poisoned": [357, 394], "pok": 281, "polar": 418, "polaris10": 275, "polaris11": 275, "policy": [273, 277, 281, 291, 326, 341, 383, 385, 419], "polished": 385, "polit": 289, "political": 290, "poll": [339, 398], "polling": 339, "pollut": 291, "polly": [287, 341, 387, 410], "polyhedral": 387, "polymorphic": [286, 396], "polymorphism": 383, "pong": 366, "pool": [281, 289, 301, 396, 413, 414, 420], "poolalloc": 277, "poor": [290, 291, 398, 429, 439], "poorly": [282, 291], "pop": [274, 276, 289, 339, 357, 383, 429, 431, 432, 433, 439, 441], "pop2_": 386, "pop_back": [323, 383, 433], "popcnt": 359, "popf": 394, "popfq": 394, "popped": [281, 417], "popping": 289, "popq": [394, 396, 398], "pops_exiting_wave_id": 274, "popul": 333, "popular": [277, 288, 289, 331, 341, 346, 357], "populat": [296, 341, 367, 394, 401], "populated": [332, 357, 368, 427], "pornin": 394, "porpod": 387, "port": [289, 309, 345, 385, 388, 394, 399, 412, 415, 424, 434, 442], "portability": [291, 339, 383, 399, 434, 442], "portabl": [287, 289, 296, 339, 357, 383, 419, 420], "ported": [335, 399], "porting": 335, "portion": [285, 288, 289, 293, 313, 323, 328, 330, 332, 341, 357, 362, 364, 365, 381, 386, 394, 413, 417, 421, 428, 438], "portugues": 391, "pos": [65, 159, 253, 324, 339, 358, 394], "pos1": 323, "pos2": 323, "posed": 394, "posit": [6, 27, 30, 65, 80, 84, 116, 117, 122, 159, 174, 178, 207, 208, 214, 253, 270, 273, 274, 275, 281, 289, 292, 298, 327, 330, 332, 334, 341, 349, 354, 357, 359, 360, 362, 371, 383, 387, 394, 396, 398, 418, 429, 430, 436, 439, 440], "position_at_end": [437, 438, 439, 440, 441], "positional": 317, "positionaleatsarg": 323, "positioned": 357, "posix": [287, 292, 299, 314, 331], "possbil": 418, "possess": [328, 383], "possibilit": [281, 340, 385, 425, 435], "possibility": [278, 291, 328, 355, 357, 366], "possibl": [274, 275, 277, 278, 279, 280, 281, 285, 286, 287, 289, 296, 309, 313, 316, 323, 324, 327, 328, 330, 333, 334, 337, 339, 340, 341, 343, 344, 345, 348, 351, 355, 357, 359, 360, 361, 362, 363, 364, 365, 367, 371, 375, 381, 382, 383, 385, 387, 389, 390, 392, 393, 394, 395, 398, 399, 401, 403, 407, 409, 410, 414, 417, 418, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 442], "possibly": [275, 278, 281, 289, 327, 335, 339, 340, 343, 349, 352, 357, 381, 383, 385, 387, 389, 393, 414], "post": [289, 290, 298, 326, 330, 343, 357, 362, 382, 384, 390, 391, 394, 398, 419], "poster": 290, "postfix": 291, "postincr": 291, "posting": 290, "postord": 358, "postrapseudos": 362, "postscript": 381, "potential": [284, 285, 289, 313, 330, 332, 357, 359, 365, 381, 385, 387, 391, 394, 398, 411, 425, 435], "potentially": [277, 289, 291, 296, 313, 323, 332, 335, 337, 339, 341, 343, 347, 357, 359, 387, 390, 394, 396, 398, 410, 416, 425, 426, 429, 435, 436, 439], "pound": 418, "povray31": 408, "pow": [275, 277, 325, 346, 367, 381, 382, 388, 402, 403, 405, 412, 417, 425, 427, 429, 430, 435, 437, 439, 440], "power9": 388, "powered": 346, "powerful": [277, 289, 292, 323, 355, 357, 360, 383, 388, 402, 405, 426, 428, 429, 430, 431, 436, 438, 439, 440, 441], "powerpc": [278, 287, 333, 341, 357, 358, 396, 409, 413, 418], "powerpc64": [325, 357], "powerpc64l": 415, "pp": [274, 436, 437, 438, 439, 440, 441], "ppa": 341, "ppas": 341, "ppc": 388, "ppc32": 289, "ppc64": 289, "ppc64le": 388, "ppc_fp128": [281, 357, 366], "ppcf128": 357, "ppcinstrinfo": 333, "ppcisellowering": 333, "pr": [330, 358, 393, 409], "pr26161": 343, "pr26576": 343, "pr34636": 338, "pr40547": 388, "pr40761": 388, "practic": [291, 323, 330, 335, 336, 339, 351, 357, 358, 359, 371, 374, 376, 381, 383, 385, 393, 394, 396, 398, 403, 410, 421, 425, 427, 428, 429, 435, 437, 438, 439], "practical": [278, 291, 340, 383, 398], "practis": 282, "pragm": [324, 381, 410], "pragmatically": 388, "pre": [289, 298, 330, 333, 343, 350, 352, 358, 381, 383, 384, 385, 401, 405, 410, 437], "pre_stor": 289, "preallocated": 383, "prebuilt": 331, "prec": [430, 431, 432, 433, 440, 441], "precaut": 383, "preced": [302, 314, 357, 365, 383, 396, 417], "preceded": [357, 383, 391, 417, 420], "precedent": [398, 404, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "preceding": [275, 277, 281, 291, 292, 296, 327, 357, 381, 383, 393], "preceeded": 357, "preceeding": 343, "precis": [274, 275, 277, 278, 289, 297, 298, 339, 341, 343, 351, 362, 388, 393, 401, 413, 425, 426, 427, 435, 436, 437], "precisely": [357, 365, 396], "preclud": [280, 394, 398], "precompiled": 420, "precompiling": 367, "precomputed": 277, "precondit": 291, "precursor": 330, "pred": [332, 357, 367, 383, 429, 431, 439, 441], "predecessor": [282, 289, 337, 357, 381, 387, 429, 439], "predefin": 407, "predefined": [289, 296, 338, 398, 407, 414, 430, 440], "predels": 404, "predend": 404, "predetermined": 277, "predicat": [278, 280, 357, 394, 401, 403, 405, 413], "predicate_stat": 394, "predicate_stor": 413, "predicated": [343, 354, 357, 383, 387], "predicateinfo": 357, "predict": [283, 291, 313, 337, 394, 414, 419], "predicted": 394, "predictor": 394, "predifdef": 404, "prediqu": 387, "predreg": 354, "predrel": 354, "predsens": 354, "preemptabl": [275, 359], "preemptibl": 381, "preemption": 281, "preemptionspecifi": [281, 357], "preexisting": 381, "pref": [278, 320, 324, 330, 345, 347, 357, 382, 383, 389, 405, 416, 425, 435], "prefaced": 288, "prefer": [288, 399], "preferably": [291, 330, 337, 341], "preferent": [277, 291, 330, 366], "preferred": [278, 291, 330, 332, 337, 346, 357, 362, 383, 388, 393, 413], "prefetch": [325, 388], "prefetched": 357, "prefetching": [325, 388], "prefix": [275, 281, 287, 289, 291, 296, 303, 304, 323, 341, 344, 359, 362, 368, 383, 384, 388, 393, 403, 405, 407, 409, 430, 440, 441], "prefix1": 292, "prefix2": 292, "prefixdat": 281, "prefixed": [275, 292, 320, 332, 357, 393, 398], "preformatted": [363, 395], "preg": 289, "prehead": [381, 429, 439], "preheader_bb": [439, 440], "preheaderbb": [429, 430], "preincrement": 291, "preincrementing": 291, "preinstalled": 331, "preord": 351, "prepar": [327, 349, 381, 385, 389, 398, 428], "prepared": [327, 332, 340, 357, 361, 375, 381, 382, 385, 390], "preparing": [304, 366, 419], "prepass": 289, "prepdefin": 404, "prepels": 404, "prepend": [294, 357, 393, 404, 407], "prepended": [304, 393, 404], "prepending": [357, 383], "prepifdef": 404, "prepregcontentexcept": 404, "prepregion": 404, "preprocessed": 352, "preprocessing": 335, "preprocessor": [287, 304, 323, 324, 328, 335, 383, 404, 413, 428, 434, 438, 442], "prequisit": 348, "prerequisit": [291, 414], "presenc": [278, 289, 292, 313, 332, 351, 357, 368, 376, 383, 393, 413, 417], "present": [275, 281, 286, 289, 292, 296, 298, 313, 316, 320, 323, 324, 327, 332, 334, 336, 339, 340, 341, 343, 348, 357, 368, 371, 374, 375, 383, 385, 393, 394, 398, 404, 410, 419, 429, 430, 431, 432, 433, 439, 440, 441], "presented": [275, 289, 304, 313, 352, 383, 386, 393, 394, 398, 429, 439], "preserv": [273, 277, 280, 289, 299, 302, 304, 323, 340, 341, 357, 385, 394, 396, 414, 417], "preserve_allcc": [281, 357], "preserve_mostcc": [281, 357], "preserveall": 357, "preserved": [273, 289, 291, 327, 357, 385, 393, 394, 410, 414], "preservemost": 357, "preserving": [332, 357, 359, 385, 394, 414, 434, 442], "press": 432, "pressur": [289, 291, 313, 394, 412], "presumably": 357, "pretty": [279, 320, 340, 353, 359, 363, 364, 365, 366, 381, 383, 394, 395, 399, 403, 404, 408, 414, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 438, 439, 440, 441], "prettyprinter": 383, "prev": 383, "prevail": 299, "prevent": [275, 277, 289, 291, 323, 324, 327, 335, 339, 357, 371, 381, 383, 385, 391, 392, 393, 394, 396, 398, 399, 409, 412, 414, 423, 424, 431, 432, 433, 441], "prevented": [275, 381, 385, 394], "preventing": [275, 292, 330, 339, 385, 394, 427, 437], "previous": [275, 278, 280, 281, 289, 291, 292, 299, 313, 317, 327, 328, 330, 333, 347, 350, 356, 357, 363, 366, 367, 379, 383, 388, 389, 392, 394, 395, 398, 413, 414, 417, 418, 420, 422, 427, 428, 429, 430, 431, 432, 433, 436, 437, 439, 440, 441], "previously": [275, 281, 287, 304, 323, 332, 334, 350, 357, 359, 374, 382, 394, 398, 404, 408, 413, 428, 429, 437], "prf": 313, "prim": [287, 386, 395, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "primarily": [289, 296, 302, 306, 310, 318, 339, 341, 346, 355, 356, 359, 362, 381, 383, 394, 403, 430, 440], "primary": [277, 288, 289, 290, 330, 332, 339, 343, 357, 359, 368, 371, 381, 383, 391, 394, 397, 419, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "primaryexpr": [274, 426, 436], "primaryfunctionid": 334, "primit": [278, 291, 323, 340, 357, 362, 366, 383, 391, 394, 417, 430, 434, 440, 442], "princeton": 386, "principl": [291, 325, 348, 366, 399, 425, 435], "print": [288, 289, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 320, 321, 322, 323, 327, 333, 335, 339, 341, 342, 347, 352, 356, 357, 359, 364, 365, 383, 393, 401, 403, 405, 407, 408, 412, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "print_endlin": [436, 437, 438, 439, 440, 441], "print_final_stat": 359, "print_float": [438, 439, 440, 441], "print_list": 288, "print_newlin": [438, 439, 440, 441], "print_pc": 359, "print_string": [436, 437, 438, 439, 440, 441], "printabl": [299, 357, 362, 401, 413], "printccoperand": 413, "printd": [428, 429, 430, 431, 432, 433, 434, 440, 441, 442], "printdatadirect": 413, "printdeclar": 413, "printdensity": [430, 440], "printed": [277, 289, 291, 299, 301, 304, 308, 309, 313, 314, 320, 323, 333, 350, 352, 362, 368, 383, 388, 413, 414, 418], "printer": [356, 364, 383, 432], "printexprresult": 424, "printf": [275, 285, 328, 335, 341, 342, 344, 357, 360, 383, 393, 424, 428, 429, 430, 431, 432, 433, 440, 441], "printformattedfil": 383, "printfunctionpass": 381, "printimplicitdef": 413, "printinformationalmessag": 323, "printing": [288, 291, 299, 339, 362, 383, 413, 414], "printinlineasm": 413, "printinstruct": [401, 413], "printlabel": 413, "printmemoperand": 413, "printmethod": 413, "printnextinstruct": 383, "printoperand": 413, "printout": [321, 383], "printstar": [429, 439], "printsth": 381, "prior": [275, 281, 289, 323, 327, 328, 330, 332, 341, 355, 356, 357, 394, 410, 414], "priorit": 357, "prioritiz": 313, "priority": [274, 275, 316, 324, 340, 350, 357, 390, 393], "priority_queu": 383, "priv": 275, "privat": [274, 275, 281, 327, 337, 345, 351, 356, 357, 366, 367, 383, 390, 393, 394, 401, 413, 420, 421, 422, 423, 424], "private_bas": 274, "private_lim": 274, "private_segment_alignment": 275, "private_segment_fixed_siz": 275, "privately": 330, "privatesegmentfixedsiz": 275, "privileg": [275, 357, 399, 420], "privileged": 394, "prng": 359, "pro": 275, "proactiv": 330, "proactively": 285, "prob": 357, "probabilit": [282, 304], "probability": [330, 362], "probabl": 357, "probably": [289, 291, 301, 323, 324, 331, 335, 339, 340, 343, 346, 357, 383, 384, 385, 386, 397, 398, 426, 429, 434, 436, 439, 442], "probed": 383, "probing": [289, 357, 383], "problem": [277, 284, 285, 289, 291, 292, 293, 323, 330, 335, 337, 338, 339, 340, 343, 346, 348, 349, 350, 352, 355, 357, 358, 368, 371, 376, 380, 381, 383, 385, 393, 394, 398, 399, 409, 419, 427, 429, 430, 434, 437, 439, 440, 442], "problematic": [291, 313, 330], "proc": [279, 341, 346, 413], "proccess": 359, "procedur": [280, 323, 325, 350, 358, 366, 383, 384, 394], "procedural": [283, 337, 357, 358, 397, 425, 435], "proceed": [287, 327, 332, 339, 350, 358, 366, 383, 387, 389, 394], "proceeding": [289, 324, 339], "process": [276, 277, 278, 279, 285, 291, 299, 313, 314, 315, 316, 320, 323, 324, 328, 329, 330, 331, 332, 339, 341, 343, 346, 347, 352, 354, 356, 357, 359, 360, 361, 368, 381, 382, 383, 391, 393, 398, 399, 405, 409, 412, 413, 414, 418, 420, 422, 423, 425, 426, 428, 434, 435, 436, 438, 442, 443], "processed": [282, 287, 288, 289, 292, 313, 317, 334, 359, 360, 381, 405, 414, 418, 425], "processformattedfil": 383, "processing": [291, 322, 323, 332, 341, 357, 394, 398, 405, 413, 415, 425, 435], "processor": [274, 280, 287, 289, 298, 313, 323, 325, 339, 341, 357, 393, 394, 401, 405, 412, 413, 432], "processrelocationref": 361, "procnoitin": 405, "procsym": 334, "produc": [273, 274, 275, 278, 280, 285, 287, 289, 291, 292, 293, 294, 296, 297, 299, 301, 305, 306, 313, 316, 321, 328, 331, 332, 335, 338, 339, 340, 341, 344, 352, 356, 357, 364, 365, 366, 371, 375, 381, 383, 387, 388, 393, 397, 398, 399, 401, 403, 409, 413, 414, 418, 420, 421, 428, 429, 431, 438, 439, 441, 442], "produced": [275, 278, 281, 289, 301, 304, 306, 313, 327, 330, 332, 339, 357, 359, 365, 383, 398, 407, 412, 417, 418, 421, 427, 437], "producer": [332, 340, 364, 393], "producing": [278, 279, 289, 341, 349, 355, 357, 393, 398, 433], "product": [275, 282, 289, 290, 294, 313, 330, 339, 350, 357, 366, 404, 414, 422, 426, 430, 436, 440], "productivity": 388, "prof": [282, 283, 347], "profdat": [276, 287, 295, 304, 328, 347, 357, 407], "professional": [326, 330], "profil": [276, 283, 295, 304, 328, 336, 337, 348, 362, 382, 384, 388, 417, 419], "profiled": [317, 357, 384], "profiledat": 357, "profiler": 275, "profiling": [283, 287, 304, 328, 336, 337, 347, 357, 393], "profit": [289, 324, 336, 337, 357, 381, 394, 410, 412], "profraw": [276, 304, 328, 347], "progbit": [334, 394], "program": [274, 277, 278, 279, 285, 287, 288, 291, 292, 293, 295, 296, 299, 302, 304, 310, 313, 315, 316, 318, 320, 321, 322, 323, 324, 328, 329, 330, 331, 336, 337, 338, 339, 341, 342, 344, 348, 350, 352, 357, 358, 359, 360, 367, 371, 379, 380, 381, 383, 386, 391, 393, 394, 396, 397, 398, 399, 401, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 428, 431, 432, 433, 434, 435, 436, 438, 441, 442], "programm": [275, 278, 285, 289, 291, 321, 323, 325, 326, 339, 351, 388, 404, 410, 414, 419, 420, 430, 433, 440, 442], "programmatic": [317, 339, 415], "programmatically": [289, 367, 403, 415, 418, 430, 440], "programmer": [324, 394, 412], "programmersmanual": 420, "programming": [289, 291, 297, 324, 332, 339, 340, 351, 357, 367, 383, 393, 399, 418, 425, 428, 429, 431, 433, 434, 438, 439, 441, 442], "progress": [278, 287, 289, 296, 313, 325, 327, 330, 339, 350, 357, 358, 362, 383, 388, 415], "progressively": [343, 425, 435], "prohib": 365, "prohibit": [278, 360, 394], "prohibitively": 394, "proj": 350, "proj_install_root": 384, "proj_obj_root": 384, "proj_src_root": 384, "project": [276, 290, 291, 295, 296, 325, 326, 330, 331, 333, 335, 337, 338, 342, 343, 347, 348, 349, 350, 359, 382, 383, 386, 390, 391, 393, 394, 396, 398, 407, 408, 409, 415, 419, 425, 435], "project_nam": 384, "prolang": 408, "prolog": [357, 358, 394, 413], "prologu": [275, 281, 289, 297, 339, 388, 392, 413, 433], "prologue_end": 334, "prologuedat": 281, "prominent": 407, "promis": [330, 415], "promot": [277, 289, 324, 330, 333, 337, 357, 358, 368, 393, 431, 433, 441], "promoted": [289, 330, 357, 383, 413, 431, 441], "promoteop": 333, "promoting": [277, 289, 324, 387, 431, 441], "promptly": 330, "pron": [289, 323, 346, 383, 405], "proof": [283, 362, 394], "prop": [278, 291, 296, 324, 328, 342, 343, 351, 357, 383, 385, 413, 433], "propag": [275, 323, 324, 332, 341, 357, 358, 362, 368, 399], "propagat": [275, 287, 289, 332, 383, 394, 397, 398], "propagated": [383, 398], "propagating": 357, "properly": [274, 277, 278, 284, 285, 286, 289, 294, 323, 324, 326, 334, 341, 356, 357, 419, 428, 431, 441], "propert": [271, 277, 280, 281, 289, 313, 323, 327, 339, 342, 343, 354, 356, 357, 362, 365, 366, 371, 381, 383, 394, 396, 397, 401, 405, 410, 413, 431, 441], "property": [275, 277, 278, 280, 281, 291, 294, 323, 328, 342, 343, 356, 357, 383, 385, 393, 398, 410, 414, 428, 431, 434, 441, 442], "property_nam": 356, "property_valu": 356, "proport": 343, "proportional": [317, 323], "propos": [359, 385, 394, 416], "proposal": [337, 343, 387], "proposed": [282, 330, 385, 394], "proposing": [337, 385, 394], "proprietary": 330, "pros": [280, 291], "protect": [278, 286, 357, 359, 390, 394, 399], "protected": [278, 281, 286, 289, 291, 357, 385, 388, 394, 413], "protecting": 394, "protector": [357, 393], "proto": [423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "protoast": [427, 428, 429, 430, 431, 432, 433], "protobuf": 338, "protocol": [338, 357, 385, 398], "prototyp": [310, 333, 357, 385, 388, 391, 413, 414, 419, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "prototypeast": [423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "prototyped": 291, "prototyping": 337, "prov": [277, 337, 355, 357, 366, 381, 394], "proven": [275, 314, 330, 337, 357, 381, 398, 431, 441], "provid": [9, 87, 181, 271, 274, 275, 276, 277, 278, 281, 283, 286, 287, 288, 289, 296, 299, 301, 302, 308, 309, 313, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 337, 339, 340, 341, 342, 343, 345, 346, 356, 357, 358, 359, 360, 361, 364, 365, 367, 368, 379, 381, 383, 384, 385, 388, 390, 393, 394, 396, 398, 399, 401, 404, 408, 413, 414, 415, 417, 418, 419, 420, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 441, 442], "provided": [275, 277, 278, 286, 287, 288, 289, 292, 293, 296, 299, 304, 308, 309, 313, 320, 323, 327, 332, 334, 337, 339, 340, 341, 343, 348, 357, 358, 359, 360, 367, 383, 384, 385, 388, 393, 394, 396, 398, 399, 403, 412, 413, 414, 415, 418, 419, 427, 437], "providing": [277, 288, 291, 296, 323, 326, 330, 332, 337, 339, 351, 357, 383, 388, 390, 391, 393, 394, 396, 403, 414, 415, 416, 419, 421], "proving": 381, "proviso": 330, "proxy": 289, "proxyapp": 386, "prun": 387, "pruned": [365, 381], "pruning": 415, "pr\u00e9sent": 419, "psab": 325, "pseudo": [280, 282, 289, 322, 327, 343, 356, 357, 362, 383, 393, 394, 401, 413, 414], "pseudocod": 413, "pseudonym": 390, "pseudos": 343, "psubus": 409, "psubusw": 409, "pt": 386, "pthread": [324, 357, 391], "ptr": [275, 278, 291, 327, 336, 383, 396, 411, 413], "ptr0": 357, "ptr1": 357, "ptr2": 357, "ptr3": 357, "ptr64": 275, "ptr7": 357, "ptr_is_null": 336, "ptr_rc": 289, "ptra": 367, "ptrb": 367, "ptrc": 367, "ptrloc": [339, 357], "ptroff": 289, "ptrreg": 289, "ptrtoint": [337, 398], "ptrtoreplacedint": 383, "ptrval": 357, "ptx": [289, 324, 325], "ptx30": 289, "ptx31": 289, "ptxas": 324, "ptxstring": 367, "pty": 357, "pty2": 357, "pu": 388, "pub": 393, "public": [288, 291, 316, 323, 330, 338, 339, 341, 345, 351, 356, 367, 371, 379, 389, 390, 393, 394, 413, 414, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "publicly": [330, 383, 390, 393], "publicstreamindex": 371, "publiqu": [386, 419], "publish": 389, "published": [291, 324, 379, 383], "pubnam": [308, 393], "pubtyp": [308, 393], "pugixml": 359, "pull": [278, 284, 291, 341, 382, 385], "puls": 359, "punctuat": [291, 357, 404], "pur": [358, 381, 387, 398], "purely": [278, 285, 289, 330, 343, 356, 381, 404, 413, 427, 437], "purg": 291, "purify": 352, "purpos": [275, 280, 289, 291, 313, 316, 323, 324, 327, 330, 332, 337, 340, 341, 343, 357, 366, 367, 368, 371, 375, 376, 381, 383, 385, 389, 391, 393, 394, 397, 398, 399, 401, 402, 405, 414, 417, 420, 427, 433], "pursued": 394, "push": [291, 339, 341, 357, 382, 385, 433], "push_back": [291, 383, 413, 418, 426, 427, 428, 429, 430, 431, 432, 433], "pushed": [285, 286, 289, 385], "pushf": [289, 394], "pushfl": 289, "pushfq": [289, 394], "pushing": [341, 357, 385], "pushq": [394, 398], "put": [275, 277, 285, 289, 290, 291, 292, 323, 328, 329, 336, 339, 348, 350, 357, 363, 366, 381, 382, 383, 393, 394, 395, 409, 414, 418, 425, 428, 429, 431, 433, 435, 439, 441], "putchar": [428, 429, 430, 431, 432, 433, 438, 439, 440, 441], "putchard": [428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442], "putting": [278, 279, 291, 331, 332, 341, 343, 357, 383, 385, 394, 409, 428, 434, 442], "puzzl": 352, "pv": 327, "pwd": [341, 349, 391], "py": [296, 326, 345, 347, 383, 407, 413], "pygment": [363, 427], "pynamic": 386, "python": [296, 327, 339, 341, 342, 349, 359, 383, 389, 401, 404, 407, 409, 434, 442], "python2": 346, "q": [296, 299, 323, 344, 357], "q0": [280, 357], "q15": 357, "q3": 357, "q31": 357, "q8": 357, "qch": 287, "qea": 332, "qemu": 359, "qhelpgenerator": 287, "qmcpack": 386, "qnan": 357, "qp": 394, "qpx": 357, "qspectr": 394, "qt": 287, "quad": [273, 274, 357, 394, 398, 413], "quad_perm": [273, 275], "quadratic": [289, 297, 365, 383], "quadratically": 383, "qualifi": [275, 289, 291, 340, 357], "qualified": [275, 350, 357, 393], "qualify": [350, 357], "quality": [289, 308, 337, 346, 350, 357, 409, 414, 420, 422], "qualtyp": 291, "quantity": 357, "quarantin": 391, "quarantinechunksuptosiz": 391, "quarantined": 391, "quarantinesizekb": 391, "quartil": 394, "quentin": 343, "quer": [275, 277, 291, 313, 337, 343, 365, 381, 383, 434, 442], "queried": [289, 365, 383, 412, 413], "query": [277, 278, 316, 323, 353, 354, 357, 365, 368, 383, 393, 413, 414, 416, 421], "query_sampl": 275, "querying": [354, 357, 365, 379, 383], "question": [277, 284, 291, 326, 330, 337, 340, 341, 342, 351, 357, 359, 363, 366, 382, 383, 384, 388, 393, 395, 402, 410, 419, 426, 429, 431, 434, 436, 439, 441, 442], "questional": [434, 442], "queu": [313, 383, 413, 414, 415], "queue_ptr": 275, "queued": 275, "queuing": 275, "quick": [277, 285, 291, 299, 313, 330, 337, 340, 346, 349, 365, 381, 382, 389, 390, 393, 421, 428, 434, 438, 442], "quickcheck": 383, "quickly": [277, 285, 289, 291, 299, 323, 326, 332, 342, 352, 357, 359, 365, 379, 380, 383, 393, 399, 409, 415, 419, 421], "quicksilv": 386, "quickstart": [349, 363, 419], "quiet": [275, 296, 323, 329, 357, 393], "quiet2": 323, "quieted": 357, "quieting": [275, 357], "quirk": [288, 398], "quit": [277, 289, 292, 324, 329, 333, 337, 339, 340, 341, 343, 357, 363, 366, 383, 394, 395, 396, 399, 422, 427, 429, 434, 437, 439, 442], "quot": [287, 323, 357, 359, 393, 409, 418], "quoted": [275, 357, 362, 403, 409], "quotient": 357, "quoting": [323, 356, 409], "quotingtyp": 418, "quux": 291, "qux": 357, "qx": 280, "r": [279, 289, 292, 299, 305, 308, 313, 315, 317, 318, 329, 334, 339, 345, 350, 351, 357, 366, 367, 375, 383, 385, 398, 403, 404, 413, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "r0": [289, 292, 357, 362, 364, 403, 413], "r1": [289, 292, 357, 362, 367, 383, 403, 413], "r10": [289, 309, 367, 392, 405], "r10b": 405, "r10d": 405, "r10w": 405, "r11": [357, 392, 396, 405], "r11b": 405, "r11d": 405, "r11w": 405, "r12": [289, 334, 357, 405], "r1234": 385, "r12345": 350, "r123456": 385, "r128": [37, 131], "r12b": 405, "r12d": 405, "r12w": 405, "r13": [289, 405], "r13b": 405, "r13d": 405, "r13w": 405, "r14": [289, 405], "r14b": 405, "r14d": 405, "r14w": 405, "r15": [289, 357, 362, 405], "r15b": 405, "r15d": 405, "r15w": 405, "r173931": 401, "r2": [289, 292, 357, 362, 383, 403], "r258109": 385, "r285": 275, "r3": [289, 292, 367, 403], "r31": [289, 357], "r341082": 359, "r342924": 324, "r390": 275, "r390x": 275, "r4": [289, 292, 334], "r5": [289, 292], "r6": 289, "r600": 275, "r630": 275, "r6xx": 275, "r7": [275, 289, 357], "r700": 275, "r7xx": 275, "r8": [289, 309, 357, 394, 396, 405], "r8b": 405, "r8d": 405, "r8w": 405, "r9": [275, 289, 367, 396, 405], "r9b": 405, "r9d": 405, "r9w": 405, "r_386_8": 334, "r_amdgpu_abs32": 275, "r_amdgpu_abs32_h": 275, "r_amdgpu_abs32_lo": 275, "r_amdgpu_abs64": 275, "r_amdgpu_gotpcrel": 275, "r_amdgpu_gotpcrel32_h": 275, "r_amdgpu_gotpcrel32_lo": 275, "r_amdgpu_non": 275, "r_amdgpu_rel32": 275, "r_amdgpu_rel32_h": 275, "r_amdgpu_rel32_lo": 275, "r_amdgpu_rel64": 275, "r_amdgpu_relative64": 275, "r_arm_thm_movw_abs_nc": 349, "r_micromips_jalr": 388, "r_mips_jalr": 388, "r_offset": 275, "r_x86_64_8": 334, "ra": 298, "rabfikou": 299, "rac": [275, 278, 290, 327, 357, 383, 391, 409], "racist": 290, "radams": 359, "radare2": 359, "radeon": 275, "radically": [289, 343], "radius": 351, "radix": [289, 291, 314, 357], "rag": 301, "rai": 327, "rais": [284, 285, 332, 339, 357, 383, 394, 398, 435, 436, 437, 438, 439, 440, 441], "raised": [357, 381, 385, 398, 436], "raising": [332, 436], "rajaperf": 386, "ram": [345, 359], "ramif": 340, "ramp": 327, "ramsey": 289, "ran": [304, 394, 414], "rand": 359, "random": [285, 291, 295, 296, 330, 357, 359, 383, 386], "randomiz": [279, 293], "randomize_va_spac": 279, "randomized": [285, 388], "randomly": [291, 319, 415], "rang": [6, 30, 84, 122, 178, 214, 273, 274, 275, 277, 282, 285, 289, 290, 296, 297, 308, 313, 316, 323, 327, 332, 334, 337, 339, 340, 343, 351, 387, 393, 398, 403, 412, 414, 419, 425, 428, 430, 435, 438, 440], "rangeend": 334, "rangelist": 404, "rangepiec": 404, "rangestart": 334, "ranging": 357, "rank": 381, "ranlib": [341, 344, 348], "rapaport": 387, "rapid": [330, 394], "rar": [281, 289, 290, 291, 292, 336, 339, 357, 383, 394, 403], "rarely": [289, 291, 332, 337, 349, 357, 383, 388, 413], "rat": [281, 299, 301, 313, 326, 330, 385], "rath": [277, 281, 282, 289, 290, 291, 294, 296, 304, 324, 330, 331, 335, 337, 339, 340, 342, 343, 346, 357, 359, 368, 371, 381, 383, 387, 388, 389, 393, 394, 398, 404, 409, 413, 420, 421, 422, 426, 427, 433, 436], "ratio": [282, 394], "rational": [289, 330, 343, 419], "rauw": [358, 366, 383, 393], "raven": 275, "raw": [289, 300, 304, 307, 310, 312, 313, 316, 321, 323, 327, 328, 334, 347, 353, 361, 364, 401, 408, 416, 427], "raw_fd_ostream": 432, "raw_ostream": [289, 333, 383, 414, 416, 418, 422, 423, 424, 432, 433], "raw_string_ostream": [422, 423, 424], "rawfrm": [403, 413], "rax": [289, 357, 362, 394, 396, 398, 405, 413], "rbp": [289, 405], "rbx": [289, 405], "rc": [350, 389], "rc1": 389, "rc2": 389, "rcn": [350, 389], "rcp_iflag_f32": 275, "rcu": 313, "rcx": [289, 357, 394, 405], "rd": [334, 413], "rdi": [289, 309, 334, 357, 362, 394, 396, 405], "rdtsc": 357, "rdx": [289, 394, 396, 398, 405], "rdynamic": [428, 430, 440, 441], "re": [277, 280, 284, 287, 288, 289, 290, 291, 292, 293, 323, 324, 326, 330, 332, 335, 337, 338, 339, 341, 343, 344, 346, 347, 349, 350, 352, 357, 359, 361, 365, 366, 376, 380, 382, 383, 385, 387, 389, 393, 394, 398, 399, 401, 402, 405, 408, 409, 414, 415, 416, 420, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442], "reach": [291, 313, 327, 330, 332, 357, 365, 366, 385, 390, 394, 396], "reachability": [339, 358], "reachabl": [287, 339, 357, 394, 398], "reached": [291, 313, 327, 336, 350, 356, 357, 359, 366, 368, 381, 383, 413], "reaching": [327, 365, 387], "react": 284, "reaction": 385, "read": [18, 19, 20, 21, 34, 38, 101, 102, 103, 104, 105, 106, 107, 108, 116, 127, 128, 132, 195, 196, 197, 198, 199, 207, 219, 220, 226, 274, 275, 277, 278, 280, 281, 285, 287, 288, 289, 291, 292, 295, 297, 298, 299, 300, 301, 304, 306, 307, 309, 310, 313, 315, 316, 317, 320, 321, 322, 323, 327, 329, 330, 331, 333, 334, 335, 336, 341, 342, 347, 357, 359, 362, 363, 366, 371, 381, 383, 393, 394, 395, 396, 397, 398, 401, 404, 405, 409, 412, 413, 417, 418, 419, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442], "read_async": 327, "read_only": 275, "read_writ": 275, "readability": [278, 291, 383, 418], "readabl": [274, 278, 286, 289, 300, 301, 304, 307, 308, 312, 317, 320, 334, 341, 357, 362, 363, 371, 381, 383, 393, 395, 414, 418, 427], "readandmaybemodify": 359, "readattribut": 401, "reader": [417, 420, 421], "reading": [277, 281, 289, 291, 301, 316, 323, 325, 329, 330, 341, 342, 352, 357, 366, 371, 379, 382, 383, 393, 394, 415, 417, 418, 425, 427, 428, 429, 430, 431, 432, 433, 435], "readjustment": 289, "readm": [330, 341, 363, 395, 407, 409], "readnon": [281, 337, 357, 367, 381, 393, 398, 411], "readobj": [295, 383, 393], "readonly": [275, 281, 309, 337, 357, 365, 381, 393, 396, 398, 416], "readthedoc": 363, "readtscp": 417, "readwrit": 275, "ready": [313, 323, 326, 327, 330, 344, 350, 361, 366, 393, 414, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "readyset": 313, "real": [271, 277, 279, 292, 309, 323, 334, 343, 357, 359, 367, 371, 383, 385, 390, 393, 405, 413, 425, 430, 440], "realignment": 357, "realistic": [339, 394, 403, 426, 436], "reality": 350, "realiz": [333, 430, 440], "realized": 438, "realloc": [277, 383], "reallocated": 277, "really": [276, 278, 287, 291, 323, 324, 330, 333, 340, 341, 342, 357, 359, 363, 365, 376, 379, 381, 382, 383, 393, 395, 403, 404, 408, 409, 425, 427, 428, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 441, 442], "reallyhidden": 323, "realmag": [430, 440], "realpred": 357, "realstart": [430, 440], "reapply": 330, "rearranging": 358, "reason": [277, 278, 283, 284, 287, 288, 289, 291, 323, 327, 330, 332, 333, 336, 339, 340, 343, 349, 351, 356, 357, 359, 363, 365, 366, 383, 386, 390, 392, 393, 394, 395, 398, 401, 403, 409, 410, 414, 420, 422, 425, 426, 427, 428, 429, 431, 433, 435, 436, 437, 438, 439, 441], "reasonably": [291, 327, 341, 383, 394, 399], "reasoning": [278, 291, 330, 337, 398], "reassoc": 357, "reassoci": [357, 358, 428, 438], "reassociat": [428, 429, 430, 431, 438, 439, 440, 441], "reassur": 359, "rebas": [341, 382, 385], "rebuild": [276, 287, 294, 347, 396, 416], "rec": [435, 436, 437, 438, 439, 440, 441], "recall": [366, 418, 427, 428, 429, 437, 438], "recap": 280, "receipt": 390, "receiv": [281, 288, 289, 332, 338, 345, 357, 359, 383, 390, 394, 410, 422], "received": [274, 326, 337, 361, 436], "receivedterminat": 424, "receiving": 405, "recent": [331, 341, 357, 359, 388, 389, 391, 428], "recently": [287, 330, 332, 339, 341, 357, 382, 389, 394, 418], "recept": 330, "recheck": 381, "rechecked": 366, "recherch": 419, "recip": [348, 387], "reciprocal": [313, 357], "reclaim": 358, "reclaimed": 357, "recognis": 383, "recogniz": [279, 289, 323, 357, 360, 366, 383, 394, 408, 425, 429, 433, 435, 439], "recognized": [323, 357, 404], "recognizing": 381, "recombin": 420, "recommend": [291, 324, 330, 339, 341, 355, 357, 359, 380, 385, 388, 414, 426, 428, 431, 432, 436, 438, 441], "recommended": [287, 288, 289, 296, 337, 339, 340, 341, 344, 347, 348, 355, 357, 359, 367, 382, 394, 398, 409, 410], "recommonmark": 363, "recompil": 336, "recompiled": [280, 396], "recompiling": [277, 422, 429, 439], "recomput": [277, 383], "recomputed": 383, "recomputing": 414, "reconfigured": 345, "reconfiguring": 356, "reconstituted": 357, "reconstruct": [340, 415, 417], "reconstructed": [299, 316], "reconstructing": 393, "record": [284, 297, 298, 314, 317, 321, 322, 330, 357, 371, 374, 375, 376, 379, 382, 385, 387, 390, 393, 396, 398, 401, 403, 404, 405, 412, 416, 427, 428, 429, 430, 431, 432, 433, 434, 442], "record_kind": 417, "recorded": [275, 297, 383, 396, 398, 417], "recordid": 281, "recording": 415, "recouped": 281, "recov": [292, 332, 357, 383, 396], "recover": 291, "recovering": [336, 357], "recovery": [383, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "recreat": 418, "recreated": 357, "recurrent": [381, 387], "recurs": [308, 316, 357, 381, 383, 394, 398, 401, 425, 426, 427, 430, 431, 435, 436, 437, 440, 441, 442], "recursing": [316, 435], "recursively": [296, 339, 385, 426, 427, 429, 436, 437, 439], "recycl": 289, "recycling": 415, "red": [357, 394], "redefin": [427, 430, 437, 440], "redefined": 427, "redefining": [403, 431, 441], "redefinit": [324, 420, 427, 431, 437, 438, 439, 440, 441], "redhat": 380, "redirect": [293, 308, 309, 350, 357, 409, 411, 433], "redirected": [359, 409], "redirecting": 433, "rediscov": [434, 442], "redistribu": 330, "redistribut": 330, "redo": 366, "reduc": [279, 285, 286, 288, 289, 291, 293, 299, 310, 323, 324, 328, 330, 331, 340, 343, 352, 354, 358, 359, 366, 383, 389, 391, 394, 405, 414, 419, 423, 428, 433, 438], "reduce_input": 359, "reduced": [285, 293, 330, 352, 357, 420], "reducing": [327, 367, 381, 385, 387, 389, 391], "reduct": [275, 291, 295, 298], "redund": [294, 323, 337, 343, 368, 398, 422, 428, 438], "redundanc": 289, "redundancy": [324, 358, 383], "redwin": 289, "redwood": 275, "reevaluated": 404, "reextern": [437, 438, 439, 440, 441], "ref": [274, 275, 277, 288, 289, 291, 296, 320, 325, 327, 332, 346, 350, 359, 365, 367, 371, 374, 379, 383, 385, 389, 393, 396, 398, 403, 407, 409, 413, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "refactoring": [291, 330, 358, 385, 431, 441], "refcount": 339, "refer": [276, 280, 288, 292, 327, 350, 357, 358, 368, 371, 375, 383, 387, 393, 398, 413, 431, 432, 433, 441], "referenced": [275, 281, 314, 323, 324, 344, 357, 358, 360, 362, 366, 371, 383, 391, 393, 403, 404, 411, 413, 421, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "referencing": [357, 362, 366, 383, 420, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "referent": [271, 272, 274, 275, 277, 281, 282, 285, 287, 288, 289, 291, 292, 293, 298, 314, 325, 326, 328, 332, 334, 335, 340, 343, 351, 353, 358, 361, 364, 365, 366, 367, 371, 382, 388, 393, 401, 403, 405, 407, 409, 410, 413, 414, 417, 418, 419, 420, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 439, 441], "referential": 381, "referred": [288, 332, 334, 339, 357, 358, 365, 374, 375, 383, 387, 393, 396, 398, 399, 401, 403, 409], "referring": [327, 334, 339, 357, 383, 393, 394, 414], "refill": 366, "refin": [277, 357, 383, 420], "refined": [289, 383], "reflect": [275, 277, 343, 350, 357, 360, 413, 414, 430, 440], "reflected": 330, "reflexivity": 366, "reformat": 364, "reformatting": 291, "reformulated": 277, "refrain": [350, 357, 390], "refresh": 360, "refus": [287, 300, 307, 310, 312, 321, 381, 394], "reg": [289, 292, 309, 362, 364, 367, 383, 396, 403, 413], "reg1": 292, "reg1024": 289, "reg1025": 289, "reg1026": 289, "reg1027": 289, "reg2": 292, "reg_nam": 309, "reg_sequent": 362, "regalloc": [289, 297, 298, 414], "regalloclinearscan": 289, "regallocregistry": 414, "regard": [278, 291, 335, 357], "regarded": [291, 355], "regarding": [350, 401, 419], "regardless": [256, 277, 287, 291, 300, 307, 310, 312, 313, 321, 339, 342, 343, 357, 380, 381, 393, 394, 407, 421, 431, 441], "regbankselected": [343, 362], "regconstraint": 289, "regenerat": [350, 352], "regex": [292, 304, 308, 323, 408], "regexp": 296, "region": [274, 275, 281, 304, 313, 327, 332, 357, 358, 385, 387, 394, 396, 404, 411], "region0": 328, "region1": 328, "regioninfo": [381, 387], "regionsforfile0": 328, "regionsforfile1": 328, "regist": [3, 6, 27, 32, 55, 81, 84, 116, 149, 175, 178, 207, 217, 243, 272, 274, 277, 278, 280, 286, 292, 293, 297, 298, 309, 313, 321, 322, 327, 330, 332, 335, 339, 341, 357, 364, 367, 368, 382, 383, 387, 394, 396, 398, 401, 403, 405, 412, 414, 415, 427, 430, 431, 432, 433, 437, 440, 441], "register": [100, 111, 113, 191, 202, 204, 274, 280, 309, 313, 322, 332, 339, 357, 364, 381, 383, 388, 394, 396, 398, 401, 403, 413, 414, 431, 433, 441], "registeralias": 401, "registeranalysisgroup": 277, "registerasmprint": 413, "registerasmstream": 289, "registerclass": [289, 401, 405, 413], "registerdescriptor": 413, "registered": [382, 414, 415, 418, 427, 437], "registeredarg": 339, "registerehfram": [361, 424], "registerehframesinprocess": 424, "registerinfo": [289, 362, 413], "registering": [329, 345, 361, 413, 437, 438, 439, 440, 441], "registerlist": 413, "registermcobjectstream": 289, "registermyp": 414, "registerpass": 414, "registerpasspars": 414, "registerregalloc": 414, "registerschedul": 414, "registertarget": 413, "registerwithsubreg": 413, "registr": [27, 325, 329, 335, 339, 420], "registry": [339, 414, 432], "reglist": 413, "regmapping_f": 289, "regno": 289, "regnum": 396, "regoffset": 364, "regress": [285, 291, 292, 330, 341, 342, 359, 384, 385, 389, 394], "regressed": 296, "regstat": [289, 362], "regstrict": 275, "regtyp": 413, "regular": [273, 278, 291, 292, 296, 299, 304, 308, 310, 311, 316, 323, 324, 341, 357, 359, 362, 366, 385, 408, 418, 434, 442], "regulating": 414, "reid": 399, "reilly": 383, "reindent": 291, "reinterpret": 280, "reinterpret_cast": 424, "reintroduc": 394, "rej": 438, "reject": [281, 292, 323, 343, 350, 357, 437, 438, 439, 440, 441], "rejecting": [434, 442], "rel": [275, 280, 289, 327, 330, 335, 385, 389, 394, 415, 431, 441], "rel_path_to_fil": 304, "relat": [28, 118, 209, 274, 275, 277, 281, 282, 286, 287, 289, 291, 292, 296, 301, 316, 317, 327, 334, 339, 340, 350, 354, 364, 365, 366, 383, 384, 385, 387, 392, 394, 396, 398], "related": [275, 277, 278, 284, 288, 289, 291, 296, 313, 327, 330, 332, 341, 343, 350, 354, 356, 357, 365, 367, 371, 381, 383, 388, 389, 391, 393, 396, 401, 409, 413, 414, 427, 429, 437, 438], "relational": [418, 430, 440], "relationship": [275, 292, 308, 332, 339, 354, 357, 366, 393, 398, 399, 413, 414, 415], "relatively": [282, 291, 296, 317, 323, 337, 341, 350, 357, 359, 365, 383, 387, 394, 398, 419, 421, 429, 433, 439], "relax": [313, 315, 343, 357], "relaxed": [313, 398], "relbf": 357, "releas": [275, 287, 289, 291, 303, 324, 327, 330, 331, 332, 337, 341, 344, 346, 347, 348, 353, 359, 380, 383, 384, 393, 396, 413, 414, 416, 419, 427], "release_1": 341, "release_11": 341, "release_29": 341, "release_350": 341, "release_38": 385, "release_39": 385, "release_tester": 350, "release_xx": 350, "release_xy": 350, "released": [275, 291, 350, 357, 360], "releasei": 389, "releasing": [350, 389], "reles": 346, "relev": [277, 278, 289, 292, 324, 327, 330, 337, 343, 346, 347, 349, 350, 351, 354, 356, 357, 379, 380, 382, 385, 387, 390, 393, 398, 415, 429, 439], "reliably": [287, 296, 336, 387, 407], "religion": 290, "relink": 285, "relinked": 303, "reload": [343, 359, 394, 431, 432, 433, 441], "reloaded": [289, 327, 339, 358], "reloading": 394, "reloc": [274, 289, 298, 315, 318, 339, 349, 352, 357, 361, 362, 388, 413, 432], "reloc_absolute_dword": 413, "reloc_absolute_word": 413, "reloc_pcrel_word": 413, "reloc_picrel_word": 413, "relocat": [275, 298, 357, 361, 413], "relocated": [275, 398, 413], "relocationtyp": 413, "reloccrc": 371, "relpos": 299, "relwithdebinfo": [287, 341, 347], "rely": [280, 282, 288, 289, 291, 327, 330, 337, 339, 340, 357, 359, 376, 385, 393, 398, 409, 412, 421], "relying": [360, 383, 394], "rem": 289, "remain": [274, 275, 278, 287, 291, 292, 332, 339, 343, 357, 368, 383, 385, 387, 390, 393, 394, 398, 409, 420, 431, 441], "remaind": [274, 289, 328, 333, 341, 356, 357, 381, 394, 409, 410, 413], "remaining": [299, 313, 327, 328, 330, 334, 350, 357, 362, 381, 383, 396, 398, 403, 417, 430, 440], "remainingbuffersizetoskip": 417, "remap": [343, 361], "remapped": 289, "remapping": [275, 289, 295, 317], "remark": 412, "remarkably": 285, "rematerializing": 278, "rememb": [284, 290, 291, 323, 326, 330, 335, 340, 341, 342, 346, 349, 357, 359, 383, 398, 408, 414, 426, 429, 431, 432, 433, 436, 439, 441], "remember": [426, 429, 436, 439], "remembered": 291, "remembering": [323, 429, 439], "remind": 350, "reminding": 330, "remot": [361, 385, 420, 423, 443], "remotej": 424, "remotejitutil": 424, "remov": [277, 285, 289, 291, 304, 310, 321, 323, 327, 332, 335, 337, 341, 353, 357, 358, 359, 360, 362, 366, 367, 368, 383, 388, 398, 399, 409, 410, 413, 414, 427, 428, 429, 430, 431, 432, 433, 434, 439, 442], "removal": [330, 383], "remove_": 383, "removebranch": 413, "removed": [275, 281, 287, 289, 291, 292, 294, 299, 304, 307, 313, 330, 331, 332, 350, 353, 357, 360, 362, 365, 366, 380, 381, 383, 388, 393, 398, 422, 428, 438], "removefromparent": 383, "removemodul": [422, 423, 424, 428, 429, 430, 431], "removing": [285, 297, 343, 351, 357, 360, 381, 383, 398, 410, 414], "renam": [285, 291, 341, 362, 389, 423, 424], "renamed": [357, 388, 393, 400, 431, 441], "renaming": [313, 357, 383], "render": [289, 343, 430, 440], "rendered": [289, 357, 383], "rendering": 416, "reopen": 284, "reord": [278, 313, 357], "reordered": [275, 278, 292, 398], "reordering": [275, 278, 313, 357, 393], "reorganiz": [387, 418], "repeat": [285, 292, 364, 366, 385, 389, 393], "repeated": [275, 332, 334, 343, 348], "repeatedly": [336, 357], "repeating": [357, 381], "repetit": [289, 309], "rephrased": 340, "repl": [388, 420, 421, 424, 428], "replac": [274, 278, 289, 299, 304, 316, 323, 324, 327, 330, 332, 337, 339, 341, 344, 357, 358, 360, 365, 366, 367, 368, 383, 385, 393, 394, 398, 409, 410, 411, 413, 419, 421, 422, 423, 428, 431, 441], "replacealldbguseswith": 393, "replacealluseswith": [358, 366, 383], "replaced": [304, 314, 327, 330, 332, 337, 339, 343, 357, 362, 366, 381, 387, 388, 398, 399, 404, 409], "replaceinstwithinst": 383, "replaceinstwithvalu": 383, "replaceoperandwith": 410, "replaceusesofwith": [358, 383], "replaceusesofwithonconst": 358, "replacing": [287, 299, 327, 343, 357, 385, 387, 398, 403, 409, 420], "replay": 275, "replicat": [352, 360, 368, 385, 387, 403], "replicated": [387, 418], "reply": [330, 350], "repo": [331, 379, 385], "report": [275, 279, 285, 290, 296, 297, 301, 313, 315, 328, 338, 344, 347, 350, 357, 358, 359, 360, 383, 385, 388, 389, 391, 396, 397, 408, 409, 414, 419, 427, 437], "report_fatal_error": [291, 383], "reported": [275, 277, 284, 296, 338, 339, 350, 356, 357, 359, 393, 394, 398, 408, 410, 419], "reporter": [284, 419], "reporterror": 421, "reporting": [285, 290, 313, 357, 383, 393, 409, 410, 420], "repositor": [330, 331], "repository": [330, 331, 332, 341, 349, 350, 352, 382, 386, 393, 409, 419], "represent": [273, 274, 275, 280, 281, 282, 283, 286, 288, 289, 291, 299, 316, 317, 322, 323, 326, 332, 333, 336, 337, 339, 340, 341, 343, 347, 353, 358, 362, 364, 365, 367, 371, 379, 381, 383, 385, 387, 393, 394, 396, 401, 403, 404, 405, 407, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "represented": [275, 277, 278, 280, 281, 283, 288, 313, 323, 327, 332, 333, 334, 335, 343, 353, 357, 362, 365, 367, 381, 383, 385, 387, 393, 398, 401, 403, 404, 418, 427, 437], "representing": [274, 277, 281, 292, 296, 313, 327, 332, 335, 337, 339, 343, 353, 357, 371, 375, 381, 383, 387, 393, 394, 398, 401, 413], "reprimand": 390, "reproduc": [284, 285, 291, 326, 330, 352, 359, 409, 431, 441], "reproduced": [284, 350], "reproducibl": [284, 331], "reproducing": [285, 368], "repurpos": 393, "reput": 385, "reqd_work_group_siz": 275, "reqd_workgroup_siz": 275, "reqdworkgroupsiz": 275, "request": [128, 220, 275, 284, 299, 326, 330, 332, 341, 359, 360, 382, 385, 388, 390, 398, 410, 417, 420, 422], "requested": [275, 281, 331, 334, 357, 359, 361, 396, 403, 421, 432], "requesting": [326, 350, 357, 396], "requir": [275, 276, 277, 278, 280, 281, 285, 286, 288, 289, 291, 292, 296, 304, 313, 323, 327, 328, 332, 333, 335, 336, 337, 340, 343, 344, 346, 347, 349, 350, 351, 355, 357, 359, 360, 361, 365, 368, 381, 383, 384, 385, 388, 389, 390, 391, 393, 394, 396, 398, 399, 401, 403, 407, 410, 413, 418, 420, 425, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442], "required": [272, 275, 276, 278, 279, 280, 281, 287, 288, 291, 292, 296, 299, 302, 305, 315, 325, 327, 328, 330, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 349, 350, 354, 355, 356, 357, 360, 361, 362, 366, 367, 368, 375, 381, 383, 385, 394, 396, 398, 401, 403, 407, 409, 410, 413, 417, 418, 420, 423, 424, 426, 429, 430, 431, 432, 433, 436, 439, 440, 441], "required_librar": 356, "requires_rtt": 380, "requiring": [285, 309, 323, 330, 339, 340, 343, 357, 359, 382, 394, 414], "requried": 288, "rerun": 382, "resbyarg": 357, "rescanned": 366, "research": [333, 386, 394, 408, 419], "researcher": 394, "resembl": [340, 394], "resembling": 394, "reserv": [275, 279, 289, 350, 394, 396], "reserved": [275, 281, 289, 336, 357, 359, 371, 396, 398, 413, 417], "reserveresourc": 289, "reserving": 396, "reset": [281, 287, 332, 359, 383, 394, 403, 423, 424], "resetting": 417, "resid": [275, 280, 281, 286, 327, 339, 357, 359, 367, 375, 391, 393, 394], "resident": [273, 414], "residing": 394, "resign": 330, "resilient": 313, "resizing": 291, "resolu": [279, 284, 291, 324, 357, 390, 428, 430], "resolv": [275, 284, 289, 290, 296, 357, 360, 397, 414, 421, 422, 423, 424, 427, 428, 437, 438], "resolved": [28, 118, 209, 284, 288, 309, 330, 357, 361, 383, 390, 394, 403, 417, 428, 429, 438, 439], "resolver": 422, "resolvereloc": 361, "resolverty": 357, "resolving": [324, 330], "resorting": 332, "resourc": [6, 9, 15, 16, 36, 37, 84, 87, 97, 98, 130, 131, 178, 181, 188, 189, 222, 223, 273, 275, 288, 309, 313, 323, 332, 383, 394, 413, 414, 422, 423, 424], "resp": [309, 357, 383], "respect": [275, 291, 308, 324, 330, 339, 351, 357, 358, 385, 398, 407, 409, 431, 441], "respected": [330, 340, 383], "respectful": 290, "respectively": [275, 277, 285, 287, 289, 291, 293, 305, 313, 320, 324, 327, 332, 339, 340, 341, 357, 364, 383, 384, 405, 411, 413, 420, 422], "respond": [277, 381, 382, 390], "responding": [277, 326], "respons": [357, 390, 396], "responsibilit": 414, "responsibility": [330, 350, 357, 382, 398], "responsibl": [275, 289, 302, 313, 327, 330, 332, 339, 343, 357, 376, 381, 382, 383, 387, 392, 401, 410, 411, 418, 420], "responsibly": 339, "rest": [281, 289, 292, 320, 327, 339, 341, 343, 357, 359, 360, 362, 363, 366, 375, 383, 385, 393, 395, 399, 415, 428, 431, 441], "restart": [278, 345, 359, 383, 414], "restarting": 414, "restat": 291, "restofthecleanup": 327, "restor": [289, 332, 355, 357, 392, 394, 413, 429, 430, 431, 432, 433, 439, 440, 441], "restored": [281, 289, 332, 355], "restoring": [355, 413], "restrict": [275, 278, 291, 313, 323, 330, 333, 334, 335, 340, 355, 357, 362, 365, 383, 385, 393, 394, 396, 398, 402, 412, 414], "restricted": [275, 289, 330, 357, 394, 398, 404], "restricting": 428, "restructuredtext": 395, "restructuring": 410, "result": [273, 274, 275, 278, 280, 281, 285, 286, 287, 288, 289, 291, 292, 293, 294, 298, 299, 300, 304, 308, 309, 313, 316, 321, 323, 324, 327, 328, 329, 330, 332, 333, 335, 337, 339, 340, 341, 342, 343, 347, 350, 353, 357, 359, 361, 365, 366, 367, 368, 375, 376, 381, 383, 385, 388, 389, 393, 394, 399, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "resulted": [285, 352, 357], "resulting": [285, 289, 316, 317, 323, 327, 331, 334, 337, 344, 348, 352, 354, 357, 362, 367, 381, 383, 388, 394, 396, 398, 413, 415, 422], "results_": 407, "results_b": 407, "resultty": 357, "resulttyp": 357, "resultval": 357, "resum": [329, 332, 359, 396], "resume1": 327, "resume2": 327, "resumed": [275, 327], "resuming": 327, "resumpt": 327, "ret": [278, 280, 283, 289, 292, 327, 332, 335, 339, 340, 362, 363, 365, 367, 381, 383, 392, 393, 394, 395, 396, 398, 403, 409, 411, 427, 428, 429, 431, 437, 438, 439, 441], "ret_val": [437, 438, 439, 440, 441], "retain": [280, 330, 335, 383, 414], "retained": [323, 357, 358, 391], "retainednod": 393, "retainedtyp": [357, 393], "retaining": 383, "retarget": 289, "retargetting": 419, "retcc_sparc32": 413, "retcc_x86_32": 413, "retcc_x86_32_c": 413, "retcc_x86_32_fast": 413, "retcc_x86_32_ss": 413, "retcc_x86common": 413, "rethrow": [332, 398], "retired": 313, "retiring": 313, "retpolin": 394, "retq": [362, 394, 398], "retriev": [299, 323, 332, 361, 367, 382, 383, 398, 401, 414, 418], "retrieval": [383, 396], "retrieved": 361, "retrieving": 334, "retry": 415, "retty": 281, "return": [273, 275, 277, 278, 280, 281, 283, 285, 289, 294, 298, 304, 308, 309, 313, 316, 317, 318, 319, 320, 323, 324, 327, 328, 329, 330, 332, 333, 335, 337, 339, 341, 342, 343, 351, 353, 354, 355, 357, 359, 360, 361, 363, 364, 365, 366, 367, 368, 381, 383, 385, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "return_addr": 394, "returnaddress": 362, "returndoesnotali": 357, "returned": [22, 23, 109, 110, 200, 201, 277, 281, 294, 299, 327, 329, 332, 357, 361, 366, 381, 383, 391, 398, 401, 403, 413, 414, 418, 425, 426, 428, 429, 435, 436, 438, 439], "returnindex": 353, "returning": [277, 291, 327, 332, 351, 357, 381, 388, 392, 394, 401, 414, 426, 428, 429, 430, 431, 432, 433, 438, 439, 440, 441], "returns_signed_char": 357, "returns_twic": [281, 357], "returntyp": [339, 357], "retval": [332, 357, 427, 428, 429, 430, 431, 432, 433], "reus": [288, 330, 343, 385, 393, 394, 396], "reusabl": [289, 343], "reused": [292, 357, 385, 393], "reusing": [289, 385], "rev": [280, 350, 385, 436, 437, 438, 439, 440, 441], "rev128": 280, "rev64": 280, "reveal": [340, 394], "revectored": [381, 383], "revers": [273, 280, 287, 292, 340, 357, 358, 381, 383, 394, 403], "reversed": 280, "reversibl": 394, "reversing": 394, "revert": 330, "reverted": 330, "reverting": 330, "review": [284, 286, 291, 326, 337, 341, 342, 350, 358, 359, 363, 366, 385, 387, 390, 395, 398, 399, 419], "reviewe": 330, "reviewed": [326, 330, 382], "reviewer": [284, 326, 330], "reviewing": 326, "revis": [93, 95, 96, 104, 106, 107, 284, 287, 291, 330, 331, 337, 341, 350, 382, 383, 394, 396, 398], "revised": 393, "revisit": 291, "revisited": 387, "revoked": 330, "revolv": 393, "rework": 330, "reworking": 323, "rewound": 332, "rewrit": [291, 351, 381, 385, 394, 398, 413, 431, 441], "rewritestatepointsforgc": 339, "rewriting": [313, 357, 358, 385, 394, 398], "rewritten": [289, 383], "rex": 357, "rf": [363, 395, 409, 413], "rfc": [330, 388], "rfunc": 310, "rgb": 386, "rgba": 273, "rglob": 310, "rgm": 414, "rh": [291, 357, 366, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "rhs_val": [437, 438, 439, 440, 441], "ri": [339, 357, 413], "ri_inst": 403, "rich": [396, 419], "richness": 364, "rid": [366, 371], "ridg": 275, "right": [273, 274, 275, 278, 280, 288, 289, 291, 293, 299, 323, 326, 330, 333, 335, 337, 341, 350, 351, 352, 357, 362, 366, 381, 382, 385, 389, 394, 401, 409, 417, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442], "rightr": 366, "rigorous": 289, "riinst": 403, "ring": 275, "rip": [357, 362, 394, 405, 409], "ris": 291, "risc": [278, 289, 413], "risk": [346, 350, 357, 394], "risking": 383, "risky": 394, "rival": 383, "rl": 367, "rl1": 367, "rl2": 367, "rl247405": 359, "rl247414": 359, "rl247416": 359, "rl247417": 359, "rl247420": 359, "rl247422": 359, "rl3": 367, "rl317337": 391, "rl4": 367, "rl5": 367, "rl6": 367, "rl7": 367, "rm": [341, 357, 359, 363, 395, 403, 405, 409, 413, 416, 432], "rmw": 278, "rn": [334, 367], "rnnnn": 330, "ro_signed_pat": 405, "roaming": 342, "rob": [313, 324], "robert": 324, "robin": 313, "robot": 419, "robust": [324, 343, 364, 393, 409], "rocm": 275, "rodat": [275, 394, 413], "rogu": 394, "rol": [291, 316, 366, 383, 389, 393, 404, 426, 436], "rolled": [291, 351], "roms_": 386, "roms_r": 386, "room": [353, 414, 426, 436], "root": [284, 287, 289, 296, 302, 303, 330, 331, 341, 345, 349, 356, 357, 358, 375, 383, 384, 401, 409, 416, 427, 437], "rootcount": 339, "rooted": 302, "rootmetadat": 339, "rootnum": 339, "roots_begin": 339, "roots_end": 339, "roots_iterator": 339, "roots_siz": 339, "rootstackoffset": 339, "rop": 383, "rot": 330, "rotat": [273, 289, 333, 357], "rotl": 333, "rough": [340, 385, 403, 404], "roughly": [278, 289, 324, 332, 350, 351, 358, 359], "roun": 324, "round": [275, 280, 289, 313, 350, 394, 418, 430, 440], "rounded": [275, 324, 328, 357], "rounding": 357, "roundp": 412, "roundup": 275, "routin": [278, 289, 296, 332, 339, 357, 366, 381, 394, 398, 399, 414, 415, 417, 425, 426, 434, 435, 436, 438, 442], "routinely": 330, "row": [273, 354], "row_bcast": [273, 275], "row_half_mirror": 273, "row_mask": [1, 2, 275], "row_mirror": [273, 275], "row_ror": 273, "row_shl": [273, 275], "row_shr": 273, "rowfield": 354, "rpass": 412, "rpath": 341, "rpc": [417, 424], "rpcc": 357, "rpo": 358, "rppassmanag": 414, "rr": [403, 413], "rrinst": 403, "rs1": 413, "rs2": 413, "rs4gc": 398, "rs880": 275, "rsb": 394, "rsi": [289, 394, 405], "rsp": [289, 362, 392, 394, 396, 398, 405], "rsrc": 273, "rss": 359, "rss_limit_mb": 359, "rst": [289, 395, 401], "rsync": 407, "rt": [276, 287, 288, 338, 341, 346, 347, 350, 357, 385, 388, 389, 391, 413, 415, 419], "rtc": 410, "rtdyldmemorymanag": [422, 423, 424], "rtdyldobjectlinkinglai": [420, 421, 422, 423, 424], "rthroughput": 313, "rtl": 289, "rtrhoughput": 313, "rtti": [287, 332, 380, 383, 411, 419, 431, 432, 433], "ruby": 339, "rud": 332, "rul": [272, 275, 278, 289, 290, 291, 292, 294, 300, 302, 305, 313, 316, 324, 327, 330, 349, 355, 366, 383, 384, 388, 389, 391, 393, 394, 398, 399, 402, 403, 405, 408, 409, 414, 417, 427, 428, 429, 437, 439], "run": [275, 276, 277, 278, 279, 280, 285, 287, 288, 289, 291, 292, 293, 303, 304, 309, 313, 317, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 341, 342, 344, 346, 347, 348, 349, 350, 352, 356, 357, 359, 360, 361, 362, 365, 366, 367, 368, 380, 381, 382, 383, 384, 385, 388, 389, 393, 394, 396, 398, 401, 403, 405, 407, 408, 409, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "run_funct": [438, 439, 440, 441], "run_long_test": 409, "runfunct": [329, 383], "runfunctionasmain": 329, "runhelp": 291, "runn": 407, "runnabl": 341, "running": [275, 276, 285, 287, 288, 289, 293, 294, 296, 304, 326, 328, 331, 335, 339, 341, 342, 343, 344, 345, 346, 347, 348, 356, 357, 365, 368, 380, 381, 382, 383, 385, 388, 389, 393, 398, 403, 409, 412, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "runonfunct": [277, 285, 368, 383, 413, 416], "runonmachinefunct": [289, 368, 413], "runonmodul": 416, "runtest": [349, 389], "runtim": [275, 276, 278, 281, 283, 285, 287, 289, 291, 292, 304, 313, 323, 324, 325, 328, 329, 330, 336, 339, 341, 348, 358, 359, 376, 381, 383, 385, 392, 396, 398, 399, 407, 410, 413, 414, 416, 418, 421, 422, 423, 424, 428, 430, 434, 440, 442], "runtimedyld": [361, 422], "runtimedyldelf": 361, "runtimedyldimpl": 361, "runtimedyldmacho": 361, "runtimehandl": 275, "runtimevers": [357, 393], "rv": 366, "rv670": 275, "rv710": 275, "rv730": 275, "rv770": 275, "rvalu": 291, "rw": 357, "rx": [275, 403], "ryzen": 275, "rzi": 367, "s0": [274, 275, 357], "s1": [275, 343], "s15": 357, "s16": 343, "s17": 343, "s2": [27, 116, 207, 275], "s3": [274, 275], "s31": 357, "s32": [0, 1, 2, 343, 362, 367], "s4": [274, 275], "s5": [274, 275], "s6": [274, 275], "s64": [0, 1, 2, 343, 367], "s7": 274, "s7100": 275, "s7150": 275, "s8": 343, "s9": 357, "s9150": 275, "s9170": 275, "s9300x2": 275, "s_abs_i32": [0, 1, 2], "s_absdiff_i32": [0, 1, 2], "s_add_i32": [0, 1, 2], "s_add_u32": [0, 1, 2, 275, 362], "s_addc_u32": [0, 1, 2], "s_addk_i32": [0, 1, 2], "s_and_b32": [0, 1, 2], "s_and_b64": [0, 1, 2, 275], "s_and_saveexec_b64": [0, 1, 2], "s_andn1_saveexec_b64": 2, "s_andn1_wrexec_b64": 2, "s_andn2_b32": [0, 1, 2, 275], "s_andn2_b64": [0, 1, 2], "s_andn2_saveexec_b64": [0, 1, 2], "s_andn2_wrexec_b64": 2, "s_annot": 357, "s_arch": 324, "s_ashr_i32": [0, 1, 2, 275], "s_ashr_i64": [0, 1, 2], "s_atc_prob": [1, 2], "s_atc_probe_buff": [1, 2], "s_atomic_add": 2, "s_atomic_add_x2": 2, "s_atomic_and": 2, "s_atomic_and_x2": 2, "s_atomic_cmpswap": 2, "s_atomic_cmpswap_x2": 2, "s_atomic_dec": 2, "s_atomic_dec_x2": 2, "s_atomic_inc": 2, "s_atomic_inc_x2": 2, "s_atomic_or": 2, "s_atomic_or_x2": 2, "s_atomic_smax": 2, "s_atomic_smax_x2": 2, "s_atomic_smin": 2, "s_atomic_smin_x2": 2, "s_atomic_sub": 2, "s_atomic_sub_x2": 2, "s_atomic_swap": 2, "s_atomic_swap_x2": 2, "s_atomic_umax": 2, "s_atomic_umax_x2": 2, "s_atomic_umin": 2, "s_atomic_umin_x2": 2, "s_atomic_xor": 2, "s_atomic_xor_x2": 2, "s_barri": [0, 1, 2, 275], "s_bcnt0_i32_b32": [0, 1, 2], "s_bcnt0_i32_b64": [0, 1, 2, 272, 275], "s_bcnt1_i32_b32": [0, 1, 2], "s_bcnt1_i32_b64": [0, 1, 2], "s_bfe_i32": [0, 1, 2], "s_bfe_i64": [0, 1, 2, 274, 275], "s_bfe_u32": [0, 1, 2], "s_bfe_u64": [0, 1, 2, 274], "s_bfm_b32": [0, 1, 2], "s_bfm_b64": [0, 1, 2, 275], "s_bitcmp0_b32": [0, 1, 2], "s_bitcmp0_b64": [0, 1, 2, 275], "s_bitcmp1_b32": [0, 1, 2, 275], "s_bitcmp1_b64": [0, 1, 2], "s_bitreplicate_b64_b32": 2, "s_bitset0_b32": [0, 1, 2], "s_bitset0_b64": [0, 1, 2], "s_bitset1_b32": [0, 1, 2], "s_bitset1_b64": [0, 1, 2], "s_branch": [0, 1, 2, 28, 118, 209], "s_brev_b32": [0, 1, 2], "s_brev_b64": [0, 1, 2], "s_buffer_atomic_add": 2, "s_buffer_atomic_add_x2": 2, "s_buffer_atomic_and": 2, "s_buffer_atomic_and_x2": 2, "s_buffer_atomic_cmpswap": 2, "s_buffer_atomic_cmpswap_x2": 2, "s_buffer_atomic_dec": 2, "s_buffer_atomic_dec_x2": 2, "s_buffer_atomic_inc": 2, "s_buffer_atomic_inc_x2": 2, "s_buffer_atomic_or": 2, "s_buffer_atomic_or_x2": 2, "s_buffer_atomic_smax": 2, "s_buffer_atomic_smax_x2": 2, "s_buffer_atomic_smin": 2, "s_buffer_atomic_smin_x2": 2, "s_buffer_atomic_sub": 2, "s_buffer_atomic_sub_x2": 2, "s_buffer_atomic_swap": 2, "s_buffer_atomic_swap_x2": 2, "s_buffer_atomic_umax": 2, "s_buffer_atomic_umax_x2": 2, "s_buffer_atomic_umin": 2, "s_buffer_atomic_umin_x2": 2, "s_buffer_atomic_xor": 2, "s_buffer_atomic_xor_x2": 2, "s_buffer_load_dword": [0, 1, 2], "s_buffer_load_dwordx16": [0, 1, 2], "s_buffer_load_dwordx2": [0, 1, 2], "s_buffer_load_dwordx4": [0, 1, 2], "s_buffer_load_dwordx8": [0, 1, 2], "s_buffer_store_dword": [1, 2], "s_buffer_store_dwordx2": [1, 2], "s_buffer_store_dwordx4": [1, 2], "s_call_b64": 2, "s_cbranch_cdbgsy": [0, 1, 2], "s_cbranch_cdbgsys_and_us": [0, 1, 2], "s_cbranch_cdbgsys_or_us": [0, 1, 2], "s_cbranch_cdbgus": [0, 1, 2], "s_cbranch_execnz": [0, 1, 2], "s_cbranch_execz": [0, 1, 2], "s_cbranch_g_fork": [0, 1, 2, 275], "s_cbranch_i_fork": [0, 1, 2], "s_cbranch_join": [0, 1, 2, 275], "s_cbranch_scc0": [0, 1, 2], "s_cbranch_scc1": [0, 1, 2], "s_cbranch_vccnz": [0, 1, 2], "s_cbranch_vccz": [0, 1, 2], "s_cmov_b32": [0, 1, 2, 275], "s_cmov_b64": [0, 1, 2], "s_cmovk_i32": [0, 1, 2], "s_cmp_eq_i32": [0, 1, 2, 275], "s_cmp_eq_u32": [0, 1, 2], "s_cmp_eq_u64": [1, 2], "s_cmp_ge_i32": [0, 1, 2], "s_cmp_ge_u32": [0, 1, 2], "s_cmp_gt_i32": [0, 1, 2], "s_cmp_gt_u32": [0, 1, 2], "s_cmp_le_i32": [0, 1, 2], "s_cmp_le_u32": [0, 1, 2], "s_cmp_lg_i32": [0, 1, 2], "s_cmp_lg_u32": [0, 1, 2], "s_cmp_lg_u64": [1, 2], "s_cmp_lt_i32": [0, 1, 2], "s_cmp_lt_u32": [0, 1, 2], "s_cmpk_eq_i32": [0, 1, 2], "s_cmpk_eq_u32": [0, 1, 2], "s_cmpk_ge_i32": [0, 1, 2], "s_cmpk_ge_u32": [0, 1, 2], "s_cmpk_gt_i32": [0, 1, 2], "s_cmpk_gt_u32": [0, 1, 2], "s_cmpk_le_i32": [0, 1, 2], "s_cmpk_le_u32": [0, 1, 2], "s_cmpk_lg_i32": [0, 1, 2], "s_cmpk_lg_u32": [0, 1, 2], "s_cmpk_lt_i32": [0, 1, 2], "s_cmpk_lt_u32": [0, 1, 2], "s_cselect_b32": [0, 1, 2, 275], "s_cselect_b64": [0, 1, 2], "s_dcache_discard": 2, "s_dcache_discard_x2": 2, "s_dcache_inv": [0, 1, 2, 275], "s_dcache_inv_vol": [0, 1, 2, 275], "s_dcache_wb": [1, 2, 275], "s_dcache_wb_vol": [1, 2], "s_decperflevel": [0, 1, 2], "s_endpgm": [0, 1, 2, 275], "s_endpgm_ordered_ps_don": 2, "s_endpgm_saved": [1, 2], "s_ff0_i32_b32": [0, 1, 2], "s_ff0_i32_b64": [0, 1, 2], "s_ff1_i32_b32": [0, 1, 2], "s_ff1_i32_b64": [0, 1, 2], "s_flbit_i32": [0, 1, 2], "s_flbit_i32_b32": [0, 1, 2], "s_flbit_i32_b64": [0, 1, 2], "s_flbit_i32_i64": [0, 1, 2], "s_get_reg": 274, "s_getpc_b64": [0, 1, 2], "s_getreg_b32": [0, 1, 2, 27, 116, 207], "s_icache_inv": [0, 1, 2], "s_incperflevel": [0, 1, 2], "s_load_dword": [0, 1, 2, 275], "s_load_dwordx16": [0, 1, 2, 275], "s_load_dwordx2": [0, 1, 2, 275], "s_load_dwordx4": [0, 1, 2], "s_load_dwordx8": [0, 1, 2, 275], "s_lshl1_add_u32": 2, "s_lshl2_add_u32": 2, "s_lshl3_add_u32": 2, "s_lshl4_add_u32": 2, "s_lshl_b32": [0, 1, 2], "s_lshl_b64": [0, 1, 2], "s_lshr_b32": [0, 1, 2], "s_lshr_b64": [0, 1, 2, 275], "s_max_i32": [0, 1, 2], "s_max_u32": [0, 1, 2], "s_memrealtim": [1, 2], "s_memtim": [0, 1, 2, 275], "s_min_i32": [0, 1, 2], "s_min_u32": [0, 1, 2], "s_mov_b32": [0, 1, 2, 275], "s_mov_b64": [0, 1, 2, 275], "s_mov_fed_b32": [0, 1, 2], "s_movk_i32": [0, 1, 2], "s_movreld_b32": [0, 1, 2], "s_movreld_b64": [0, 1, 2], "s_movrels_b32": [0, 1, 2], "s_movrels_b64": [0, 1, 2], "s_mul_hi_i32": 2, "s_mul_hi_u32": 2, "s_mul_i32": [0, 1, 2], "s_mulk_i32": [0, 1, 2], "s_nand_b32": [0, 1, 2], "s_nand_b64": [0, 1, 2], "s_nand_saveexec_b64": [0, 1, 2], "s_nop": [0, 1, 2, 275], "s_nor_b32": [0, 1, 2], "s_nor_b64": [0, 1, 2], "s_nor_saveexec_b64": [0, 1, 2], "s_not_b32": [0, 1, 2], "s_not_b64": [0, 1, 2], "s_or_b32": [0, 1, 2], "s_or_b64": [0, 1, 2], "s_or_saveexec_b64": [0, 1, 2], "s_orn1_saveexec_b64": 2, "s_orn2_b32": [0, 1, 2], "s_orn2_b64": [0, 1, 2], "s_orn2_saveexec_b64": [0, 1, 2], "s_pack_hh_b32_b16": 2, "s_pack_lh_b32_b16": 2, "s_pack_ll_b32_b16": 2, "s_quadmask_b32": [0, 1, 2], "s_quadmask_b64": [0, 1, 2], "s_rfe_b64": [0, 1, 2], "s_rfe_restore_b64": [1, 2], "s_scratch_load_dword": 2, "s_scratch_load_dwordx2": 2, "s_scratch_load_dwordx4": 2, "s_scratch_store_dword": 2, "s_scratch_store_dwordx2": 2, "s_scratch_store_dwordx4": 2, "s_sendmsg": [0, 1, 2, 30, 122, 214, 275], "s_sendmsghalt": [0, 1, 2], "s_set_gpr_idx_idx": [1, 2], "s_set_gpr_idx_mod": [1, 2], "s_set_gpr_idx_off": [1, 2], "s_set_gpr_idx_on": [1, 2], "s_set_reg": 274, "s_sethalt": [0, 1, 2, 275], "s_setkill": [0, 1, 2], "s_setpc_b64": [0, 1, 2], "s_setprio": [0, 1, 2], "s_setreg_b32": [0, 1, 2], "s_setreg_imm32_b32": [0, 1, 2], "s_setvskip": [0, 1, 2, 275], "s_sext_i32_i16": [0, 1, 2], "s_sext_i32_i8": [0, 1, 2], "s_sleep": [0, 1, 2, 275], "s_store_dword": [1, 2], "s_store_dwordx2": [1, 2], "s_store_dwordx4": [1, 2], "s_sub_i32": [0, 1, 2], "s_sub_u32": [0, 1, 2], "s_subb_u32": [0, 1, 2], "s_swappc_b64": [0, 1, 2, 275], "s_trap": [0, 1, 2, 275], "s_ttracedat": [0, 1, 2], "s_waitcnt": [0, 1, 2, 80, 174, 270, 275], "s_wakeup": [1, 2], "s_wqm_b32": [0, 1, 2], "s_wqm_b64": [0, 1, 2, 275], "s_xnor_b32": [0, 1, 2], "s_xnor_b64": [0, 1, 2], "s_xnor_saveexec_b64": [0, 1, 2], "s_xor_b32": [0, 1, 2], "s_xor_b64": [0, 1, 2], "s_xor_saveexec_b64": [0, 1, 2], "sacrific": [357, 366], "saddr": [2, 256, 257], "sadly": [382, 394], "saf": [277, 278, 281, 285, 293, 323, 330, 337, 340, 352, 357, 358, 381, 390, 394, 396, 397, 398, 410, 420, 434, 441, 442], "safely": [289, 334, 339, 341, 357, 368, 383, 396, 398, 422], "safepoint": [339, 357, 419], "safepoint_poll": 398, "safepointaddress": 339, "safestack": [281, 357, 397], "safety": [336, 337, 357, 388, 390, 419], "sag": [429, 439], "sahf": [289, 394], "said": [291, 313, 330, 332, 347, 357, 365, 383, 388, 391, 393, 434, 442], "sak": [383, 414], "salvagedebuginfo": 393, "salvaging": 393, "sam": [273, 274, 275, 277, 278, 280, 281, 284, 285, 287, 288, 289, 291, 293, 294, 296, 298, 299, 300, 301, 304, 309, 313, 316, 321, 323, 324, 327, 328, 330, 332, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 350, 352, 354, 355, 356, 357, 358, 359, 362, 365, 366, 367, 368, 371, 376, 379, 380, 381, 382, 384, 385, 387, 388, 389, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442], "same_content": 334, "same_siz": 334, "samesiz": 357, "sampl": [38, 132, 226, 275, 276, 317, 323, 329, 339, 342, 359, 367, 384, 393, 398, 407, 414, 416, 426, 427, 433, 436, 437, 444], "samplepgo": 283, "sampling": 283, "sampson": 326, "san": [278, 287, 425, 435], "sancov_": 391, "sandbox": [349, 389], "sander": 343, "sandi": 386, "sandybridg": 412, "sandylak": 432, "sanitiz": [287, 288, 338, 359, 391, 416], "sanitize_address": [281, 357], "sanitize_hwaddress": [281, 357], "sanitize_memory": [281, 357], "sanitize_thread": [281, 357], "sanitizer": [338, 359, 381, 388, 391, 397], "sanitizer_common": 391, "sanitizer_common_nolibc": 391, "sanitizer_symbol": 391, "sanitizer_termin": 391, "sanitizer_unwind": 391, "sanitizercommonflag": 391, "sanitizercoverag": 359, "sanitizercoveragetracedataflow": 359, "sanitizerlist": 416, "sanity": [337, 341, 356, 359], "saptr": 357, "sar": 289, "sarq": 394, "sass": [324, 367], "sat": 346, "satisf": 275, "satisfied": [350, 357, 394], "satisfy": [274, 277, 278, 330, 336, 348, 399, 431, 441], "saturat": 357, "saturating": [430, 440], "sav": [275, 287, 289, 323, 324, 332, 333, 341, 342, 352, 355, 357, 367, 380, 382, 383, 393, 394, 396, 407, 413, 429, 430, 431, 432, 433, 439, 440, 441], "save1": 327, "save2": 327, "saved": [280, 281, 289, 301, 332, 357, 359, 361, 396, 403, 412, 413], "savesomewher": 291, "saveth": 292, "saving": [291, 323, 332, 357, 359, 396, 428, 438, 439], "saw": [313, 360, 414, 429, 439], "say": [289, 290, 292, 296, 323, 330, 340, 343, 351, 354, 357, 363, 365, 375, 376, 383, 385, 393, 395, 399, 408, 425, 427, 434, 435, 437, 442], "saying": [299, 337], "sb": 343, "sbas": [0, 1, 2], "sc": [278, 316, 343, 357, 371], "scaffolding": [426, 436], "scal": [289, 291, 340, 351, 357, 394, 401], "scalability": 277, "scalabl": 277, "scalar": [8, 9, 86, 87, 180, 181, 274, 275, 289, 323, 324, 337, 339, 343, 356, 357, 358, 387, 388, 412, 413, 414, 421, 422, 423, 424, 428, 429, 430, 431, 433, 441], "scalarbitsettrait": 418, "scalarevolu": [277, 340], "scalariz": [343, 381], "scalarized": [343, 357, 387], "scalarizing": [289, 381], "scalaropt": 303, "scalartrait": 418, "scaled": [317, 340, 357], "scaling": 279, "scaling_governor": 279, "scan": [289, 296, 297, 298, 339, 366, 376, 401, 409, 414, 422, 434, 442], "scann": [425, 435], "scanned": [296, 438], "scanning": [291, 366, 407], "scar": 330, "scary": [425, 434, 435, 442], "scatt": 388, "scatter": 387, "scattered": 393, "scc": [358, 368, 414], "sccp": 358, "scen": 383, "scenario": [276, 383, 387], "scenarios": [278, 285, 335, 341], "scev": 330, "sched": [289, 298, 309, 413], "sched_class": 309, "schedcov": 413, "schedq": 313, "schedul": [289, 292, 298, 313, 346, 350, 367, 401, 413, 414], "scheduled": [289, 414], "scheduler": [298, 313, 414], "scheduling": [298, 309, 313, 341, 383, 387, 388, 398, 401, 414], "schem": [276, 286, 291, 296, 301, 302, 305, 338, 339, 353, 357, 383, 393, 398, 413, 418, 422, 423, 431, 441, 444], "scienc": 386, "scm": 385, "scop": [277, 281, 285, 287, 291, 292, 320, 322, 330, 332, 339, 359, 362, 383, 393, 394, 397, 398, 401, 414, 418, 427, 429, 430, 431, 432, 433, 437, 439, 440, 441], "scoped": [337, 357, 393, 403, 431, 441], "scopelin": [357, 393, 433], "scoping": 288, "scott": 291, "scraping": 296, "scratch": [225, 257, 273, 274, 289, 357, 383, 413, 414], "scratch_en": 275, "scratch_load": 275, "scratch_load_dword": 2, "scratch_load_dwordx2": 2, "scratch_load_dwordx3": 2, "scratch_load_dwordx4": 2, "scratch_load_sbyt": 2, "scratch_load_sbyte_d16": 2, "scratch_load_sbyte_d16_h": 2, "scratch_load_short_d16": 2, "scratch_load_short_d16_h": 2, "scratch_load_sshort": 2, "scratch_load_ubyt": 2, "scratch_load_ubyte_d16": 2, "scratch_load_ubyte_d16_h": 2, "scratch_load_ushort": 2, "scratch_segment_siz": 275, "scratch_store_byt": 2, "scratch_store_byte_d16_h": 2, "scratch_store_dword": 2, "scratch_store_dwordx2": 2, "scratch_store_dwordx3": 2, "scratch_store_dwordx4": 2, "scratch_store_short": 2, "scratch_store_short_d16_h": 2, "screen": 389, "script": [276, 287, 288, 293, 296, 302, 323, 331, 335, 341, 346, 350, 383, 384, 385, 401, 405, 407, 408, 409, 414], "scripting": [339, 385, 401], "scroll": 382, "scrub": 394, "scrutiny": 394, "scudo": 419, "scudo_default_opt": 391, "scudo_opt": 391, "sd": [318, 346, 403], "sdat": [1, 2], "sdisel": 358, "sdiv": [289, 343], "sdk": [287, 316, 324, 341, 407], "sdnod": [285, 289, 383, 405, 413, 416], "sdst": [0, 1, 2], "sdtc": 413, "sdvalu": [289, 413, 416], "sdwa": [271, 272], "seamless": 344, "seamlessly": [359, 360], "sean": 383, "search": [285, 287, 291, 292, 296, 308, 316, 323, 330, 334, 339, 341, 343, 354, 356, 358, 359, 383, 384, 393, 397, 398, 412, 413, 420, 428, 429, 430, 431, 439], "searchabl": 401, "searched": 357, "searching": [286, 296, 308, 323, 332, 341, 381, 387, 393, 420, 427], "sec": 357, "secidx": 334, "seciton": 334, "secnam": 334, "second": [3, 55, 81, 149, 175, 243, 272, 273, 275, 281, 283, 286, 287, 288, 289, 291, 292, 296, 299, 313, 323, 327, 328, 331, 332, 334, 339, 340, 341, 342, 343, 350, 354, 357, 359, 363, 365, 366, 371, 375, 376, 381, 382, 383, 391, 392, 393, 394, 395, 396, 398, 399, 404, 407, 408, 413, 414, 417, 418, 422, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 442], "second_end": 357, "second_tru": 357, "secondary": [286, 330, 332, 391, 396], "secondcondit": 383, "secondlastinst": 413, "secondlastopc": 413, "secondly": [385, 433], "secrel32": 334, "secrel_hi12": 334, "secrel_lo12": 334, "secret": [391, 394], "sectalign": 323, "section": [273, 274, 277, 278, 279, 280, 281, 286, 287, 288, 289, 291, 294, 296, 297, 298, 299, 302, 308, 313, 315, 316, 317, 318, 320, 321, 323, 324, 327, 328, 330, 331, 332, 339, 340, 341, 347, 350, 351, 352, 356, 357, 361, 362, 363, 364, 365, 366, 379, 381, 382, 383, 385, 388, 391, 392, 393, 394, 398, 399, 401, 403, 411, 412, 413, 414, 415, 416, 420, 426, 428, 433, 434, 436, 438, 442, 444], "sectioncontr": 371, "sectioncontribentry": 371, "sectioncontribentry2": 371, "sectioncontributionsiz": 371, "sectioncontrsubstreamvers": 371, "sectiondat": 444, "sectionlength": 371, "sectionmapentry": 371, "sectionmapentryflag": 371, "sectionmaphead": 371, "sectionmapsiz": 371, "sectionmemorymanag": [361, 420, 421, 422, 423], "sectionnam": [281, 371], "sectionnumb": 444, "sectnam": 323, "sector": 399, "sectvalu": 323, "secur": 394, "security": [286, 323, 381, 391, 394, 419, 428], "sed": [309, 335, 341], "see": [275, 278, 279, 280, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 296, 302, 304, 310, 313, 315, 320, 321, 322, 323, 324, 326, 330, 331, 332, 333, 335, 337, 338, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 356, 357, 359, 362, 363, 364, 365, 366, 367, 368, 374, 375, 379, 381, 382, 383, 384, 385, 387, 388, 389, 391, 393, 394, 395, 396, 398, 399, 403, 405, 408, 409, 411, 413, 414, 416, 419, 420, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "seed": [319, 359], "seeded": 359, "seeing": [291, 394, 414, 434, 442], "seek": [330, 334, 340, 381, 417, 419], "seekabl": 417, "seem": [277, 280, 285, 287, 289, 306, 323, 324, 339, 340, 351, 365, 366, 371, 385, 386, 394], "seemingly": 413, "seen": [289, 291, 317, 323, 343, 357, 365, 366, 381, 383, 398, 413, 414, 422, 428, 430, 434, 440, 442], "sees": [323, 357, 366], "seg": 357, "segment": [275, 289, 357, 371, 393, 394, 396, 407, 417], "segmented": 419, "segmentreg": 289, "segnam": 323, "seh": 357, "sel": 327, "seldom": [366, 385], "select": [273, 274, 275, 287, 291, 304, 313, 314, 323, 326, 332, 333, 334, 338, 340, 342, 347, 348, 358, 361, 362, 367, 382, 383, 388, 393, 394, 398, 401, 403, 405, 407, 410, 413, 415, 416, 418, 419, 431, 432, 441], "select_isd_stor": 413, "selectaddrrr": 413, "selectcod": 413, "selectcodecommon": 416, "selected": [273, 275, 280, 285, 289, 296, 330, 331, 339, 341, 343, 348, 354, 357, 362, 381, 385, 387, 405, 415], "selectimpl": 343, "selecting": [285, 309, 313, 341, 343, 354, 407, 416], "selectinst": 291, "selectiondag": [278, 381, 383, 401], "selectiondagbuild": 289, "selectiondagisel": [401, 416], "selectiondagnod": 413, "selectionkind": 357, "selectively": [357, 414], "selector": [289, 313, 322, 332, 341, 343, 357, 371, 393, 401], "selecttarget": [422, 423, 424], "self": [281, 289, 309, 328, 357, 366, 371, 381, 382, 383, 390, 414, 428, 430, 436, 438, 440], "selp": 367, "selty": 357, "sem": [288, 339, 356, 401, 415, 434, 442], "semantic": [272, 274, 275, 278, 289, 291, 324, 332, 335, 339, 356, 358, 360, 364, 383, 387, 393, 394, 401, 402, 404, 405, 410, 414, 418, 427, 429, 437, 439], "semantically": [324, 357, 383, 398, 399, 421], "semicolon": [287, 341, 403, 407, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "semispac": 339, "send": [273, 278, 297, 300, 307, 310, 313, 322, 326, 330, 337, 341, 345, 350, 352, 359, 363, 382, 385, 388, 389, 395, 409, 419], "sending": [289, 330, 382, 414, 427], "sendmsg": [30, 122, 214, 275], "sens": [277, 278, 287, 289, 291, 299, 323, 335, 340, 355, 357, 359, 383, 393, 394, 398, 416, 427, 434, 437, 442], "sensibl": 383, "sensit": [277, 287, 306, 362, 385, 394, 414, 418], "sent": [273, 297, 307, 313, 317, 330, 350, 382, 398, 419], "sentenc": 291, "sentinel": 281, "separ": [339, 356, 393], "separat": [274, 275, 278, 282, 288, 289, 291, 292, 296, 304, 316, 323, 324, 326, 327, 330, 339, 340, 341, 343, 348, 349, 355, 356, 357, 359, 360, 363, 365, 367, 375, 383, 385, 390, 395, 396, 398, 403, 409, 410, 413, 414, 424, 428], "separated": [271, 272, 275, 276, 281, 287, 289, 291, 292, 304, 309, 314, 316, 317, 323, 327, 330, 341, 356, 357, 384, 391, 399, 401, 403, 407, 409, 418, 426, 436], "separately": [273, 278, 287, 289, 304, 316, 340, 349, 357, 360, 385, 390, 393], "separating": [338, 394], "separator": [80, 174, 270, 274, 296, 409], "seq": [309, 444], "seq_cst": [275, 278, 357], "sequenc": [6, 84, 178, 273, 274, 278, 280, 289, 291, 292, 313, 327, 328, 332, 334, 337, 339, 340, 343, 357, 359, 366, 368, 381, 383, 385, 387, 393, 394, 396, 398, 401, 403, 404, 412, 413, 414, 417, 426, 436, 444], "sequenced": 357, "sequencetrait": 418, "sequencing": [298, 430, 431, 440, 441], "sequency": 417, "sequential": [275, 281, 289, 292, 357, 385, 410], "sequentially": [275, 281, 313, 332, 357, 393], "sequentialtyp": 383, "ser": [275, 276, 281, 287, 289, 330, 332, 341, 352, 357, 362, 375, 383, 387, 414, 421, 425, 428, 435, 438], "serial": [309, 341, 366], "serializ": [313, 333, 362, 401, 418, 419], "serialized": 362, "serializing": [313, 362, 394], "serially": 384, "serious": [350, 385, 390, 394], "seriously": 342, "serv": [12, 13, 14, 15, 16, 90, 91, 92, 97, 98, 185, 186, 187, 188, 189, 192, 193, 194, 271, 280, 296, 313, 316, 327, 331, 332, 340, 350, 376, 381, 383, 385, 387, 393, 394, 396, 404, 407, 409, 417, 419, 423, 424], "servaddr": 424, "server": [385, 394], "servic": [275, 279, 335, 385, 391, 399], "serviced": 277, "serving": 390, "session": [329, 363, 383, 395, 421], "set": [3, 81, 175, 225, 256, 257, 273, 274, 276, 278, 279, 280, 281, 283, 285, 287, 288, 289, 291, 292, 293, 296, 297, 298, 299, 309, 313, 314, 317, 322, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 359, 360, 361, 366, 367, 368, 371, 374, 375, 379, 380, 382, 384, 385, 388, 389, 391, 393, 394, 396, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "set_value_nam": [437, 438, 439, 440, 441], "setact": 343, "setargstr": 323, "setbann": [383, 424], "setbid": 281, "setbr": 309, "setcategory": 323, "setcc": [289, 343, 383], "setcondcodeact": 413, "setconvertact": 413, "setcurrentdebugloc": [393, 433], "setdat": 291, "setdatalayout": [428, 429, 430, 431, 432, 433], "setdebugloc": 393, "setdescript": 323, "setexitcodemapp": 383, "setfoo": 357, "setgc": 339, "setgenerator": [420, 421], "setgraphattr": 383, "setgraphcolor": 383, "seth": 413, "sethiddenflag": 323, "setindexedloadact": 413, "setindexedstoreact": 413, "setinsertfencesforatomic": 278, "setinsertpoint": [427, 428, 429, 430, 431, 432, 433], "setinternallinkag": 383, "setjmp": [357, 434, 442], "setjmp_buf": 332, "setloadextact": 413, "setloadxact": 413, "setmaxatomicsizeinbitssupported": 278, "setmcjitmemorymanag": 361, "setnam": [383, 427, 428, 429, 430, 431, 432, 433], "seto": 394, "setoperationact": [278, 289, 413], "setp": 367, "setpreservesall": 414, "setpreservescfg": 414, "setrecordnam": 281, "setreg": 289, "setrequiresstructuredcfg": 413, "setscalarinvectoract": 343, "setsockopt": 424, "setsubprogram": 433, "settargettripl": 432, "setter": 383, "setting": [275, 276, 277, 287, 288, 296, 299, 304, 323, 327, 330, 335, 339, 341, 342, 343, 344, 350, 351, 357, 360, 367, 380, 382, 383, 388, 391, 393, 394, 396, 407, 413, 415, 416, 418, 428, 433, 437, 438], "settled": 385, "settransform": 421, "settruncstoreact": 413, "setup": [275, 276, 334, 344, 348, 362, 383, 385, 393, 407, 413, 420, 428, 434, 442], "setupmachinefunct": 413, "setvector": 291, "setxyzzy": 291, "seul": 27, "sevenkind": 357, "seventeen": 362, "sever": 390, "several": [272, 274, 277, 281, 285, 287, 288, 289, 291, 296, 299, 301, 309, 312, 316, 317, 323, 327, 328, 332, 333, 339, 341, 343, 353, 357, 359, 360, 362, 366, 381, 383, 384, 387, 388, 391, 393, 394, 399, 401, 403, 405, 407, 408, 409, 413, 414, 419, 427, 429, 434, 437, 439, 442], "severity": 389, "sex": 290, "sexist": 290, "sext": [120, 212], "sextload": [405, 413], "sexual": 290, "sexually": 290, "sexy": [425, 435], "sf": [346, 349], "sge": 357, "sgi": 383, "sgn": 357, "sgpr": [116, 207, 357], "sgpr0": 275, "sgpr1": 275, "sgpr2": 362, "sgpr_count": 275, "sgpr_spill_count": 275, "sgprn": 275, "sgprs_used": 275, "sgrr": 275, "sgt": 357, "sh": [293, 323, 331, 341, 350, 385], "sh_addralign": 275, "sh_entsiz": 334, "sh_hidden_private_base_vimid": 275, "sh_link": 334, "sha": 357, "sha1": 359, "shad": [27, 116, 207, 273, 289], "shader": [275, 291], "shadow": [396, 398, 413, 429, 430, 431, 432, 433, 439, 440, 441], "shadowbyt": 396, "shadowcallstack": [281, 357], "shadowdescriptort": 275, "shadowed": [429, 439], "shadowing": [429, 439], "shadowlist": 413, "shadowstackgc": 339, "shadowstackgclowering": 339, "shall": [287, 323, 334, 357, 434, 442], "shap": [350, 351, 383], "shaped": [393, 405], "shapekind": 351, "shar": [278, 281, 287, 289, 332, 341, 343, 357, 381, 387, 399, 405, 414, 417, 420], "shard": 296, "shared": [273, 274, 275, 278, 285, 287, 289, 291, 293, 297, 298, 324, 329, 334, 349, 352, 354, 357, 359, 360, 367, 381, 383, 384, 391, 393, 408, 409, 414, 418, 420, 423, 424, 427, 430, 433, 437], "shared_bas": 274, "shared_library": 384, "shared_lim": 274, "shared_ptr": [422, 423, 424], "sharedfnast": [423, 424], "sharing": [273, 289, 341, 359, 360, 383], "she": 345, "shel": [285, 287, 296, 323, 335, 341, 363, 395, 409, 433], "shelf": [420, 421], "shf_alloc": 275, "shf_exclud": 334, "shf_execinstr": 275, "shf_link_ord": 334, "shf_writ": 275, "shield": [279, 289, 391, 399], "shielding": 399, "shift": [273, 274, 289, 323, 333, 337, 357, 358, 366, 381, 394, 403, 405, 417], "shifted": [275, 281, 282, 289, 357], "shifting": [278, 289, 394], "shiftinst": 291, "shim": 381, "shiny": 414, "ship": [276, 329, 339], "shipped": [278, 286, 341, 398], "shipping": [434, 442], "shirt": 290, "shl": [291, 366, 381, 403, 404], "shlib": 341, "shlibext": 409, "shlq": 394, "sho": 418, "shooting": [428, 438], "short": [277, 280, 285, 289, 291, 296, 317, 320, 322, 328, 330, 335, 341, 342, 357, 365, 367, 371, 387, 396, 398, 407, 413, 415, 418, 421, 429, 430, 431, 433, 439, 440, 441], "short_enum": 357, "short_wchar": 357, "shortcut": [425, 435, 436], "shortest": [366, 404], "shorthand": 403, "shortly": 433, "should": [273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 293, 296, 297, 298, 299, 304, 305, 313, 316, 317, 321, 322, 323, 324, 326, 327, 330, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 367, 368, 371, 375, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 422, 425, 426, 427, 428, 429, 431, 433, 435, 436, 437, 438, 439, 441], "shouldexecut": 383, "shouldexpandatomiccmpxchgin": 278, "shouldexpandatomicloadin": 278, "shouldexpandatomicrmwin": 278, "shouldexpandatomicstorein": 278, "shouldinsertfencesforatomic": 278, "shouldn": [277, 291, 323, 349, 357, 361, 365, 409, 425, 435], "show": [283, 289, 292, 296, 308, 313, 314, 316, 322, 323, 328, 329, 334, 340, 341, 344, 357, 358, 362, 363, 367, 382, 383, 385, 389, 393, 394, 395, 396, 401, 403, 407, 411, 412, 413, 414, 416, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442], "showdebug": 329, "showed": [327, 418], "showing": [328, 361, 367, 383, 414, 425, 431, 435, 441], "shown": [274, 280, 296, 304, 308, 309, 317, 318, 323, 327, 328, 342, 351, 357, 362, 363, 365, 367, 383, 393, 394, 395, 396, 405, 408, 411, 413, 418, 430, 440], "shr": 291, "shrink": 289, "shrx": 394, "shrxq": 394, "shstrtab": 275, "sht_dynamic": 275, "sht_hash": 275, "sht_llvm_linker_opt": 334, "sht_nobit": 275, "sht_not": 275, "sht_progbit": 275, "sht_rel": 275, "sht_strtab": 275, "sht_symtab": 275, "shtest": 296, "shuffl": [291, 296, 357, 387], "shufflebyt": 359, "shufflevector": [280, 292], "shut": [291, 359, 413], "shutdown": 359, "si": [35, 129, 221, 275, 291, 405], "sid": [275, 277, 278, 287, 289, 291, 313, 324, 339, 341, 343, 357, 362, 366, 367, 381, 383, 385, 394, 398, 409, 426, 427, 429, 430, 436, 437, 439, 440], "sidebar": 350, "sidelength": 351, "sierr": 386, "sift": 415, "sig": 341, "sig_atomic_t": 357, "sight": [431, 441], "sigil": 362, "sign": [47, 144, 238, 273, 274, 289, 290, 291, 309, 323, 325, 330, 334, 337, 357, 383, 394, 403, 413, 434, 442], "signal": [273, 278, 329, 332, 336, 357, 359], "signaling": [273, 275, 323, 357], "signatur": [278, 280, 289, 299, 301, 324, 341, 357, 374, 376, 383, 398, 414, 427], "signature_invalid": 341, "signed": [28, 118, 209, 217, 272, 273, 274, 289, 291, 337, 340, 343, 357, 359, 360, 362, 403, 413], "signext": [281, 357], "signextimm": 289, "signific": [128, 220, 277, 280, 281, 291, 330, 333, 339, 357, 359, 360, 366, 381, 383, 387, 388, 394, 398, 401, 407, 414, 417, 425, 429, 430, 435, 440], "significand": 357, "significantly": [281, 287, 291, 301, 330, 332, 336, 348, 357, 359, 360, 383, 394, 414, 426, 429, 436, 439], "signifient": 27, "sigplan": [289, 339], "sigr": 388, "sigusr1": 359, "sil": 405, "silenc": 347, "silent": [330, 345], "silently": [357, 403], "silly": [277, 291, 335, 403, 425, 435], "simd": [27, 116, 207, 275, 297, 298, 357, 381, 387, 410, 412], "simd_benchmark": 386, "similar": [278, 281, 288, 289, 291, 292, 299, 303, 316, 323, 324, 327, 330, 332, 334, 339, 340, 341, 343, 346, 347, 348, 357, 359, 362, 366, 367, 371, 381, 383, 384, 385, 387, 391, 393, 399, 401, 403, 409, 412, 413, 414, 415, 416, 418, 425, 428, 429, 430, 433, 435, 438, 439, 440], "similarit": 383, "similarity": [427, 437], "similarly": [277, 278, 280, 281, 285, 291, 309, 313, 323, 324, 330, 332, 338, 343, 351, 352, 357, 383, 394, 408, 411, 413, 415, 417, 419, 432, 433], "simm13": 413, "simm21": 217, "simpl": [275, 276, 277, 278, 280, 281, 282, 285, 287, 288, 289, 291, 292, 296, 297, 298, 314, 323, 328, 330, 331, 333, 334, 339, 340, 341, 342, 343, 348, 351, 356, 359, 364, 365, 366, 385, 388, 393, 394, 398, 399, 403, 404, 408, 409, 412, 413, 414, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "simplecompil": [420, 422, 423, 424], "simpleloopunroll": 410, "simpleproject": 287, "simplest": [276, 289, 323, 342, 359, 394, 413, 418, 421, 426, 427, 436, 438], "simpletyp": 444, "simplevalu": 404, "simplicity": [284, 339, 343, 383, 396, 425, 427, 437], "simplif": [285, 289, 330, 343, 381, 383, 414, 418], "simplified": [362, 381, 383, 394, 398, 418, 420, 444], "simplify": [276, 289, 339, 348, 352, 362, 368, 382, 398, 408, 425, 428, 429, 430, 431, 433, 435, 438, 439, 440, 441], "simplify_typ": 351, "simplifycfg": [293, 431, 441], "simplifydemandedbit": 416, "simplifying": [357, 383, 420], "simply": [275, 277, 285, 286, 289, 291, 292, 299, 316, 321, 323, 330, 332, 335, 338, 340, 341, 344, 347, 349, 357, 362, 364, 365, 371, 381, 383, 384, 385, 393, 394, 396, 398, 399, 408, 409, 413, 414, 426, 427, 428, 436, 437, 438], "simul": [313, 357], "simulat": [280, 289, 313, 343], "simulated": 313, "simulator": [330, 357, 407], "simultaneous": [278, 294, 359], "simultaneously": [280, 383, 409, 412], "sin": [277, 324, 412, 413, 418, 420, 425, 426, 427, 428, 435, 436, 437, 438], "sin_family": 424, "sin_port": 424, "sinc": [275, 277, 281, 282, 289, 291, 294, 299, 313, 316, 317, 323, 324, 327, 328, 330, 332, 335, 339, 340, 342, 343, 346, 347, 349, 350, 351, 352, 354, 357, 359, 361, 363, 365, 366, 367, 371, 375, 379, 383, 385, 389, 392, 393, 395, 396, 398, 399, 404, 405, 413, 414, 417, 418, 425, 426, 427, 428, 429, 430, 431, 433, 436, 437, 438, 439, 440, 441], "sinf": 324, "singl": [274, 276, 278, 280, 281, 285, 287, 288, 289, 291, 292, 296, 299, 304, 308, 309, 312, 313, 316, 317, 323, 324, 328, 330, 331, 332, 333, 339, 340, 341, 343, 347, 353, 355, 358, 359, 362, 365, 366, 367, 368, 371, 374, 375, 383, 384, 387, 388, 389, 393, 394, 397, 398, 403, 407, 409, 410, 412, 413, 414, 415, 416, 418, 425, 427, 428, 431, 433, 434, 437, 438, 441, 442], "singleimpl": 357, "singleimplnam": 357, "singlesour": 407, "singlesourc": [386, 407], "singlethread": [275, 357], "singly": 339, "singular": [291, 357, 383], "sink": [277, 323, 387, 394], "sint": 357, "sit": [277, 288, 296, 332, 334, 339, 342, 355, 357, 365, 381, 386, 388, 394, 396, 398, 409, 411, 421], "sitofp": [427, 437], "situat": [278, 289, 313, 323, 324, 332, 340, 348, 351, 357, 366, 381, 383, 390, 412, 413, 414, 422, 428, 438], "six": [278, 289, 296, 420], "sixkind": 357, "sixth": 413, "siz": [3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 123, 124, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 210, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 277, 278, 279, 280, 281, 285, 287, 290, 291, 293, 297, 299, 301, 304, 313, 314, 316, 317, 319, 323, 328, 333, 334, 337, 339, 340, 343, 357, 358, 359, 360, 366, 367, 371, 375, 380, 381, 386, 388, 391, 392, 393, 394, 396, 398, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 441, 442], "sizabl": 383, "size1": 357, "size2": 357, "size3": 357, "size_t": [278, 339, 359, 360, 383, 418], "sizeclassallocator": 391, "sized": [281, 289, 296, 340, 357, 403, 418], "sizem1": 357, "sizem1bitwidth": 357, "sizeof": [316, 327, 335, 357, 367, 375, 383, 394, 398, 424], "sizeofimm": 413, "sjljehprepar": 332, "sk_buff": 289, "sk_circl": 351, "sk_lastsquar": 351, "sk_otherspecialsquar": 351, "sk_somewhatspecialsquar": 351, "sk_specialsquar": 351, "sk_squar": 351, "sketched": 327, "skimming": 291, "skip": [281, 288, 289, 291, 292, 304, 324, 339, 343, 348, 357, 368, 383, 385, 393, 407, 413, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "skipbasicblock": 368, "skipfunct": 368, "skiploop": 368, "skipmodul": 368, "skipped": [280, 317, 328, 343, 368, 393, 398, 410, 412], "skipping": [327, 383, 393, 394, 425, 435], "skipscc": 368, "skylak": 388, "slash": [299, 357], "slav": 345, "slc": [0, 1, 2, 275], "sle": 357, "sled": 415, "slh": 394, "slic": [403, 404], "slicing": 383, "slid": [290, 324, 383], "slight": [334, 347], "slightly": [276, 291, 324, 357, 394, 398, 414, 428, 430, 431, 438, 440, 441], "sligtly": 280, "sln": 342, "slot": [289, 301, 313, 327, 332, 337, 355, 357, 392, 396, 398, 413, 431, 441], "slow": [289, 291, 297, 308, 324, 332, 335, 337, 339, 341, 357, 359, 366, 380, 383, 394, 414], "slow_path": 357, "slowdown": 359, "slowly": [330, 341], "slp": [358, 387], "slt": 357, "sm": [316, 343, 367], "sm_20": [289, 367], "sm_21": 289, "sm_30": [289, 324], "sm_35": [289, 324], "sm_xx": 324, "small": [274, 278, 281, 285, 286, 288, 289, 291, 293, 298, 301, 304, 309, 311, 313, 317, 323, 326, 327, 328, 330, 337, 339, 340, 343, 350, 351, 356, 357, 359, 366, 367, 368, 381, 382, 383, 386, 388, 391, 393, 394, 396, 399, 409, 414, 419, 422, 425, 433, 435], "smallconst": 396, "smallest": [273, 352, 357], "smallsetvector": 383, "smallvector": [424, 433], "smallvectorhead": 383, "smallvectorimpl": [383, 416], "smart": [291, 323, 357], "smashed": 394, "smashing": 357, "smax": 274, "smel": 383, "smith": 291, "smithw": 386, "smooshlab": 419, "smoothly": 288, "smovq": 289, "smp": [278, 414], "smt": 279, "smul_loh": 289, "sn": [316, 343], "sn_map": 366, "sn_mapl": 366, "sn_mapr": 366, "snan": 357, "snapshot": [277, 331, 359], "sneak": 291, "snippet": [330, 339, 383], "so": [272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 287, 289, 290, 291, 292, 293, 296, 297, 302, 304, 309, 313, 316, 320, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 371, 375, 379, 380, 381, 382, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "so_reuseaddr": 424, "social": [290, 419], "sock_stream": 424, "sockaddr": 424, "sockaddr_in": 424, "socket": 424, "sockfd": 424, "socklen_t": 424, "soffset": [0, 1, 2], "soft": [298, 313, 330, 341, 388, 393], "softfp": 348, "softwar": [288, 291, 298, 330, 331, 339, 347, 348, 350, 358, 388, 394, 409, 413, 414, 425, 427, 434, 435, 442], "sol": [330, 385], "sol_socket": 424, "solar": 341, "solaris2": 414, "solely": [365, 383], "solid": 347, "solut": [278, 280, 287, 289, 323, 331, 341, 342, 357, 383, 385, 393, 414, 419, 421, 431, 434, 441, 442], "solution_1": 357, "solution_2": 357, "solv": [277, 289, 330, 340, 343, 350, 383, 393, 394, 430, 434, 440, 442], "solved": [385, 431, 434, 441, 442], "solving": 289, "som": [273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 290, 291, 292, 296, 297, 299, 304, 308, 309, 313, 314, 315, 316, 323, 324, 326, 327, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 366, 371, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "some_crash_test": 385, "some_op": 362, "somebody": 330, "someclass": 404, "somefancya": 414, "somefunc": [291, 383], "somehow": [371, 383, 414], "somelocalpath": 359, "somemap": 291, "somemulticlass": 404, "someon": [284, 289, 290, 291, 316, 326, 330, 331, 333, 337, 339, 363, 385, 390, 393, 395, 434, 442], "sometest": 408, "something": [276, 277, 289, 291, 292, 314, 323, 327, 330, 333, 341, 342, 343, 347, 351, 352, 354, 357, 359, 363, 365, 366, 376, 381, 382, 383, 385, 394, 395, 398, 399, 401, 403, 404, 413, 416, 418, 426, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "sometim": [281, 285, 289, 291, 292, 313, 323, 324, 330, 340, 341, 351, 357, 359, 366, 375, 381, 383, 385, 394, 401, 413, 418], "somety": 357, "somewhat": [277, 278, 291, 330, 331, 357, 383, 385, 394, 398, 408, 419, 426, 430, 436, 440], "somewhatspecialsquar": 351, "somewher": [292, 332, 351, 357, 408, 409, 414, 427, 430, 437, 440], "sonnenberg": 385, "soon": [330, 345, 359, 360, 388, 389, 414, 421, 426, 429, 436, 439], "sophist": [289, 408], "sophisticated": [339, 357, 363, 395, 414], "sorry": [434, 442], "sort": [278, 287, 291, 314, 316, 323, 324, 330, 335, 343, 352, 357, 383, 385, 386, 416, 426, 428, 429, 431, 434, 436, 438, 439, 441, 442], "sorted": [291, 323, 328, 357, 385, 393], "sorting": [393, 415], "sortord": 416, "sought": 357, "sound": [277, 284, 359], "sourc": [55, 149, 243, 271, 272, 273, 276, 277, 279, 285, 288, 289, 292, 293, 295, 296, 297, 302, 303, 304, 313, 316, 321, 323, 324, 326, 329, 330, 331, 332, 334, 337, 339, 340, 342, 348, 349, 350, 352, 356, 358, 360, 362, 365, 366, 367, 371, 379, 382, 383, 385, 389, 394, 396, 398, 399, 401, 403, 405, 407, 408, 409, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 428, 432, 434, 438, 442], "source_filenam": 357, "source_i386": 320, "source_x86_64": 320, "sourcebas": [326, 419], "sourcefil": 304, "sourcefilecount": 371, "sourcefilenameindex": 371, "sourceforg": 386, "sourceinfosiz": 371, "sourceloc": 433, "sourcewar": [344, 359], "southern": 275, "sp": [289, 334, 357, 362, 364, 392, 405, 413, 433], "spac": [271, 272, 279, 281, 287, 290, 292, 297, 299, 304, 314, 316, 324, 332, 339, 341, 342, 343, 354, 355, 356, 357, 361, 366, 376, 383, 384, 385, 388, 390, 392, 393, 394, 396, 398, 399, 403, 413, 414, 417, 418, 419, 428, 431, 434, 438, 441, 442], "space0": 357, "space1": 357, "space2": 357, "spadin": 381, "spaghet": [425, 435], "span": [291, 405], "spanish": 391, "spanning": 414, "sparc": [278, 289, 341, 357, 403, 413, 414], "sparcasmprint": [289, 413], "sparccallingconv": 413, "sparcgenregisterinfo": 413, "sparcgensubtarget": 413, "sparcinstrformat": 413, "sparcinstrinfo": 413, "sparciseldagtodag": 413, "sparcisellowering": 413, "sparclet": 413, "sparclit": 413, "sparclite86x": 413, "sparcreg": 413, "sparcregisterinfo": 413, "sparcsubtarget": 413, "sparctargetasminfo": 413, "sparctargetlowering": 413, "sparctargetmachin": 413, "sparcv8": [278, 357], "sparcv9": 357, "sparingly": [291, 337], "spars": [317, 333, 341, 358, 368, 383, 385, 417], "sparsecheckout": 385, "sparsely": [289, 417], "spasr": 385, "spcc": 413, "speak": [290, 324, 390], "speaking": [288, 398, 429, 430, 439, 440], "spec": [324, 352, 357, 362, 363, 383, 393, 394, 403, 404, 407, 418], "spec95": 408, "speccpu2000": [407, 408], "speccpu2006": 408, "special": [271, 273, 274, 275, 277, 278, 280, 281, 288, 289, 291, 313, 323, 324, 328, 329, 330, 332, 334, 336, 339, 340, 341, 349, 352, 357, 359, 362, 365, 366, 371, 379, 383, 385, 394, 396, 398, 399, 403, 404, 409, 412, 413, 425, 431, 432, 433, 435, 441], "specialfp": 403, "specializ": [278, 296, 323, 343, 357, 381, 383, 393, 418], "specialized": [278, 289, 331, 365, 383, 393, 413, 419, 434, 442], "specializing": [343, 405, 418], "specially": [289, 356, 357, 383, 396, 403, 414], "specialsquar": 351, "specialty": 383, "specif": [66, 100, 111, 113, 160, 191, 202, 204, 254, 271, 273, 274, 275, 278, 281, 287, 289, 292, 293, 294, 297, 299, 304, 313, 322, 323, 325, 332, 337, 339, 341, 356, 357, 371, 383, 393, 396, 398, 403, 404, 405, 409, 413, 414, 417, 418, 427, 434, 437, 442], "specifed": 275, "specifi": [281, 328, 367, 383, 401], "specific": [6, 30, 84, 122, 178, 214, 272, 275, 276, 278, 279, 281, 284, 291, 292, 296, 298, 304, 308, 315, 318, 328, 330, 332, 333, 335, 338, 339, 340, 341, 342, 343, 347, 349, 350, 356, 357, 358, 359, 361, 362, 363, 364, 367, 368, 379, 381, 383, 385, 388, 389, 390, 394, 396, 398, 399, 401, 402, 404, 405, 412, 413, 414, 415, 417, 418, 419, 421, 425, 426, 430, 432, 435, 436, 440], "specifically": [276, 278, 287, 289, 291, 324, 330, 337, 338, 339, 340, 341, 350, 356, 357, 361, 365, 368, 381, 383, 393, 394, 396, 399, 405, 408, 413, 414, 415, 425, 428, 435], "specificity": 357, "specified": [3, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 32, 33, 37, 55, 80, 81, 90, 91, 92, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 118, 122, 126, 128, 131, 149, 174, 175, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 214, 217, 218, 220, 224, 225, 243, 257, 270, 271, 272, 273, 274, 275, 281, 285, 287, 288, 289, 291, 292, 293, 294, 296, 297, 298, 299, 300, 303, 304, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 331, 332, 334, 335, 338, 339, 341, 343, 352, 356, 357, 359, 362, 368, 371, 375, 379, 383, 384, 388, 396, 398, 399, 401, 403, 405, 408, 409, 410, 412, 413, 414, 418, 427, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "specify": [3, 15, 16, 17, 25, 38, 55, 81, 97, 98, 99, 100, 112, 113, 132, 149, 175, 188, 189, 190, 191, 203, 204, 226, 243, 275, 277, 278, 281, 284, 287, 289, 292, 296, 297, 298, 299, 300, 304, 305, 307, 309, 310, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 331, 332, 338, 339, 340, 341, 342, 343, 356, 357, 359, 362, 363, 367, 371, 381, 383, 387, 396, 398, 403, 407, 408, 409, 413, 414, 416, 418, 419, 427, 430, 432, 434, 437, 442], "specifying": [275, 296, 357, 383, 403, 404, 405, 407, 409, 410, 412, 413, 426, 436], "spectr": [357, 394, 419], "spectre11": 394, "spectreattack": 394, "specul": [278, 313, 324, 332, 357, 388, 394, 398, 419], "speculat": [281, 357, 394, 398], "speculated": [357, 394], "speculative_load_hardening": [357, 388], "speculative_load_hardening_microbenchmark": 394, "speculatively": [277, 337, 357, 368, 394], "speed": [287, 291, 323, 324, 330, 341, 359, 365, 409, 431, 441], "speedup": 394, "spelling": [291, 330, 401], "spenc": 399, "spend": 296, "spending": 416, "spent": [313, 416], "spflag": 388, "spflagdefinit": 433, "spgr": 27, "sphinx": [287, 341, 363, 419], "sphinx_execut": 287, "sphinx_output_html": 287, "sphinx_output_man": 287, "sphinx_warnings_as_error": 287, "sphinxquickstarttemplat": 395, "spi": 275, "spiffygrep": 323, "spiffysh": 323, "spill": [275, 286, 289, 297, 298, 327, 343, 396, 398, 413], "spillalignment": 413, "spilled": [286, 289, 327, 394, 396, 398, 413], "spiller": 297, "spilling": [394, 413], "spillsiz": 413, "spilt": 289, "spir": [290, 383], "spisd": 413, "spl": 405, "splat": 358, "splic": [357, 383], "split": [275, 278, 280, 289, 316, 323, 324, 327, 330, 333, 340, 343, 357, 359, 362, 365, 366, 375, 381, 384, 385, 391, 392, 413], "splitdebugfilenam": 357, "splitting": [285, 289, 327, 357, 385], "sponsor": 385, "spot": [359, 381], "spotty": 357, "spread": [357, 381], "spreadsheet": 416, "spring": 324, "sprinkl": 383, "spurious": [291, 357], "spuriously": [357, 409], "spus": 413, "sp\u00e9cifi": [35, 129, 221], "sq": 313, "sqlit": 359, "sqrt": [412, 418], "squar": [330, 351, 356, 357, 418], "squared": 357, "squash": 385, "squashed": 280, "squeu": 313, "sr": 318, "sra": [403, 404], "sram": 275, "srand": 359, "src": [0, 1, 2, 287, 289, 303, 332, 350, 357, 371, 379, 383, 384, 389, 408, 413, 428], "src0": [0, 1, 2, 55, 117, 149, 208, 243, 273], "src0_sel": [1, 2, 275], "src1": [0, 1, 2, 55, 117, 149, 208, 243, 271, 273, 289, 403, 405], "src1_sel": [1, 2, 275], "src2": [0, 1, 2, 55, 117, 149, 208, 243, 289, 403, 405], "src3": [0, 1, 2, 55, 149, 243], "src_private_bas": 275, "src_reg": 289, "src_root": 341, "src_shared_bas": 275, "srcarglist": 357, "srcloc": 357, "srcvalu": 398, "srd": 275, "srem": 289, "sret": [281, 357], "srgp": 275, "srl": [403, 404], "sro": [278, 324, 337, 358, 368, 431, 441], "srsrc": [0, 1, 2], "ss": [289, 305, 383, 403], "ssa": [332, 337, 339, 357, 358, 365, 383, 393, 398, 413, 414, 425, 427, 429, 430, 431, 434, 435, 437, 439, 440, 441, 442], "ssamp": [0, 1, 2], "ssca2v2": 386, "sscabmk": 386, "sse": [289, 353, 357, 413, 432], "sse2": [357, 409], "sse4": 412, "sse41": 292, "ssecall": 413, "ssh": 407, "ssp": [281, 357, 393], "sspreq": [281, 357], "sspstrong": [281, 357], "ssrc": [0, 1, 2], "ssrc0": [0, 1, 2], "ssrc1": [0, 1, 2], "ssrc2": [0, 1, 2], "sstream": 291, "st": [305, 318, 357, 367, 413], "st0": [403, 405, 413], "st1": [280, 289, 405, 413], "st17basic_string_viewicst11char_traitsice": 305, "st2": 405, "st3": 405, "st3__1": 305, "st4": 405, "st5": 405, "st6": 405, "st7": 405, "st7__cxx11": 305, "st_gid": 299, "st_mod": 299, "st_uid": 299, "stab": 393, "stability": [330, 385], "stabl": [291, 306, 330, 350, 360, 368, 383, 388, 393, 413], "stack": [275, 277, 286, 291, 297, 315, 327, 332, 337, 341, 355, 358, 364, 365, 383, 388, 393, 394, 404, 413, 414, 415, 417, 418, 419, 420, 422, 424, 425, 431, 433, 435, 441], "stack_loc": 289, "stack_siz": 297, "stackarity": 339, "stacked": 339, "stackentr": 339, "stackentry": 339, "stackframesiz": 339, "stackgrowsdown": 413, "stackmap": 339, "stackoffset": 339, "stackprotectorcheck": 357, "stackrestor": 355, "stacksafety": 381, "stacksav": 355, "stacksizessect": 289, "staff": 390, "stag": [275, 278, 287, 289, 293, 304, 323, 324, 331, 343, 350, 359, 360, 366, 367, 389, 397, 413, 416, 419, 426, 436], "stage1": [276, 331, 347], "stage2": [276, 287, 331, 347], "stage3": 276, "staged": 387, "stageselectioncat": 323, "staging": [331, 345], "stal": 275, "stall": [313, 394], "stamp": [299, 376], "stanc": 291, "stand": [289, 291, 324, 330, 357, 383, 409, 414, 421, 422, 423, 424, 426, 436], "standalon": [289, 338, 348, 356, 385, 425, 433, 434], "standard": [275, 276, 277, 278, 280, 287, 289, 292, 293, 296, 297, 298, 300, 301, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 325, 326, 330, 332, 334, 335, 336, 337, 339, 342, 343, 347, 360, 362, 367, 381, 398, 401, 405, 409, 412, 413, 414, 417, 419, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "standardized": [278, 291, 330, 409], "standing": 388, "standpoint": 383, "star": 386, "start": [4, 28, 82, 118, 176, 209, 275, 276, 277, 281, 285, 291, 292, 293, 296, 299, 304, 313, 316, 326, 327, 330, 331, 333, 337, 340, 341, 342, 345, 349, 356, 359, 362, 366, 367, 381, 382, 383, 385, 389, 393, 394, 398, 403, 412, 413, 415, 416, 417, 418, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "start_bb": [439, 440, 441], "start_val": [439, 440, 441], "started": [276, 287, 291, 313, 326, 330, 335, 339, 343, 348, 350, 382, 383, 414, 419, 425, 427, 428, 435, 437, 438], "startexpr": [429, 430, 431, 432, 433, 441], "starting": [100, 111, 113, 275, 276, 277, 281, 287, 293, 305, 313, 316, 317, 328, 329, 331, 333, 334, 337, 339, 341, 357, 359, 363, 366, 381, 382, 394, 395, 398, 403, 404, 409, 414, 417, 427, 428, 429, 430, 433, 437, 438, 439, 440, 443], "startup": [291, 296, 341, 357, 367, 380, 421, 422], "startval": [429, 430, 431, 432, 433], "stash": 351, "stat": [273, 277, 278, 279, 280, 284, 285, 286, 288, 289, 291, 297, 298, 299, 313, 315, 321, 323, 324, 327, 328, 330, 331, 332, 333, 336, 339, 340, 343, 348, 357, 358, 359, 362, 363, 365, 381, 382, 385, 390, 391, 393, 394, 395, 396, 398, 399, 401, 403, 407, 408, 412, 413, 414, 417, 418, 421, 423, 424, 426, 427, 429, 431, 433, 439, 441], "stated": [278, 350], "stateful": 381, "stateless": [278, 414], "statepoint_token": 398, "static": [275, 277, 278, 279, 285, 286, 287, 289, 293, 295, 298, 313, 323, 327, 333, 335, 339, 340, 343, 349, 351, 352, 355, 357, 358, 359, 360, 361, 366, 383, 384, 388, 391, 393, 394, 398, 401, 413, 414, 418, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438], "static_cast": [424, 431, 432, 433], "static_library": 348, "statically": [277, 278, 289, 313, 323, 327, 337, 339, 340, 341, 349, 357, 359, 384, 388, 398, 411, 414, 415, 428, 438], "stating": 330, "statistic": [277, 279, 297, 298, 301, 304, 308, 315, 321, 328, 359, 384, 407, 408, 415], "statistical": [301, 384], "statistically": 407, "status": [116, 207, 273, 284, 287, 290, 291, 330, 343, 345, 357, 385, 388, 396, 419], "statuscheck": 385, "statut": 27, "stay": [327, 366, 375, 385, 418, 419], "staying": 360, "stb_local": 357, "std": [299, 305, 321, 323, 332, 335, 343, 351, 366, 367, 386, 391, 394, 407, 412, 413, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "stdarg": 357, "stdcall": 289, "stddef": 359, "stderr": [292, 293, 359, 368, 383, 426, 427, 428, 429, 430, 431, 432, 433], "stdin": [292, 304, 309, 393, 409, 433, 436, 437, 438, 439, 440, 441], "stdint": 359, "stdio": [341, 342, 344, 360, 399, 438, 439, 440, 441], "stdlib": 341, "stdout": [296, 304, 305, 309, 342, 357, 359, 436, 437, 438, 439, 440, 441, 444], "steady": 336, "steensgaard": 277, "steer": 330, "steinberg": 386, "stellard": 350, "stem": 324, "stemming": 383, "step": [275, 276, 277, 285, 287, 289, 324, 327, 330, 331, 332, 333, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 354, 359, 360, 366, 367, 381, 383, 387, 389, 401, 408, 411, 418, 423, 424, 427, 428, 429, 430, 431, 432, 433, 439, 440, 441, 443], "step_val": [439, 440, 441], "stepexpr": [429, 430, 431, 432, 433, 441], "stepping": [340, 414, 433], "stepval": [429, 430, 431, 432, 433], "stepwithcompactencoding": 332, "stick": [291, 346, 383], "sticking": 385, "sticky": 357, "still": [280, 284, 285, 286, 289, 291, 296, 304, 323, 324, 328, 330, 332, 335, 339, 341, 342, 343, 344, 348, 349, 351, 352, 355, 357, 359, 361, 365, 366, 368, 380, 381, 382, 383, 385, 386, 390, 393, 394, 396, 398, 399, 408, 412, 414, 418, 428, 429, 430, 431, 434, 439, 440, 441, 442], "still_poison": 357, "stingy": 383, "stitched": 375, "stkmaprecord": [396, 398], "stksizerecord": 396, "stl": [291, 335, 341, 359, 381, 383, 418], "stlextr": [422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "stm": 357, "stmt": 410, "stn_undef": 275, "stoney": 275, "stop": [287, 290, 291, 306, 316, 330, 332, 333, 339, 350, 357, 359, 362, 365, 383, 394, 414, 417], "stopgap": 383, "stopiter": 327, "stopped": [327, 415], "stopper": 389, "stopping": [339, 359, 426, 436], "stor": [17, 93, 94, 95, 96, 99, 100, 190, 191, 273, 275, 277, 278, 280, 282, 288, 292, 323, 327, 328, 332, 336, 339, 340, 341, 343, 353, 358, 359, 361, 362, 365, 366, 367, 371, 375, 383, 387, 391, 392, 393, 394, 396, 397, 398, 413, 420, 421, 425, 431, 432, 433, 435, 441], "storag": [275, 279, 281, 289, 327, 339, 367, 393], "storageclass": 444, "stored": [21, 100, 108, 111, 113, 199, 274, 277, 278, 280, 281, 287, 289, 299, 304, 320, 327, 328, 331, 332, 339, 343, 353, 355, 357, 361, 371, 375, 381, 383, 384, 385, 391, 393, 394, 396, 398, 408, 411, 413, 426, 431, 436, 441], "storemerg": 327, "storeregtoaddr": 413, "storeregtostackslot": [289, 413], "storesdnod": 413, "storing": [273, 280, 282, 327, 328, 336, 339, 357, 383, 394], "story": [328, 341, 342], "str": [280, 308, 328, 357, 367, 383, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 444], "str1": 403, "str2": 403, "str_offset": 393, "straight": [277, 289, 324, 353, 366, 383, 398, 399, 403, 425, 426, 435, 436, 437], "straightforward": [280, 289, 335, 351, 383, 385, 393, 413, 414, 421, 427, 428, 429, 430, 431, 437, 438, 439, 440, 441, 442], "strang": [280, 291, 431, 441], "strateg": [278, 327, 357, 383, 394, 398], "strategy": [278, 289, 323, 327, 339, 383, 394, 398, 431, 441], "stray": 409, "strcmp": 388, "strconcat": [403, 404, 413], "stream": [30, 122, 214, 274, 281, 289, 291, 292, 293, 294, 300, 307, 310, 312, 314, 315, 321, 328, 333, 341, 342, 357, 359, 383, 386, 393, 394, 412, 413, 414, 417, 418, 426, 435, 436, 437, 438, 439, 440, 441], "streamblock": 375, "streamclust": 386, "streamdirectory": 375, "streaming": 418, "streamsiz": 375, "strength": [278, 289, 290, 323, 337, 357, 383, 419, 425, 435], "strengthen": 313, "stress": [291, 295, 338], "stressing": 338, "strex": 278, "strict": [278, 280, 292, 330, 337, 356, 357, 359, 366, 383, 393, 402, 405, 427, 437], "strictfp": [281, 357], "strictly": [292, 332, 341, 357, 367, 383, 393, 398, 399, 427, 429, 432, 439], "strid": [9, 87, 181, 386], "strided": 387, "striking": [391, 427, 437], "strikingly": [430, 440], "string": [275, 281, 283, 287, 288, 289, 291, 292, 296, 297, 298, 299, 308, 313, 315, 316, 317, 320, 323, 334, 341, 353, 354, 356, 362, 364, 367, 371, 375, 379, 381, 391, 393, 398, 399, 401, 403, 404, 405, 413, 414, 415, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "string_view": 305, "stringly": 288, "stringmap": 323, "stringmapentry": 383, "stringref": [291, 323, 393, 416, 418, 420, 421, 433], "stringsort": 291, "stringswitch": 401, "stringwithcstring": 393, "stringwithspecialstring": 393, "strip": [285, 321, 323, 383, 393, 409], "stripped": 393, "stripping": [304, 321, 360, 381, 383], "strippointercast": 291, "striv": [290, 291, 343, 409], "strlen": 383, "strong": [275, 278, 292, 330, 335, 337, 357, 366, 383, 391, 398], "strongest": 394, "strongly": [288, 291, 337, 339, 348, 349, 358, 403, 429, 431, 434, 439, 441, 442], "stroustrup": 383, "strr": 413, "strtab": [275, 281], "strtab_blob": 281, "strtod": [323, 425, 426, 427, 428, 429, 430, 431, 432, 433], "strtol": 323, "struct": [275, 281, 289, 292, 323, 324, 327, 332, 334, 337, 339, 355, 365, 371, 374, 375, 376, 383, 388, 393, 394, 411, 412, 413, 414, 418, 431, 433, 434, 441, 442], "struct_anon": 281, "struct_nam": 281, "struct_named": 281, "structtyp": 383, "structur": [275, 277, 278, 281, 289, 291, 292, 299, 302, 306, 308, 316, 328, 332, 337, 339, 340, 341, 342, 343, 353, 356, 358, 360, 361, 363, 371, 375, 376, 379, 381, 385, 387, 393, 395, 401, 405, 413, 414, 417, 418, 420, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "structural": [295, 323, 328, 357, 387, 434, 442], "structurally": [281, 338, 357], "structured": [281, 285, 291, 313, 328, 332, 359, 365, 393], "structuring": [356, 414], "struggled": 341, "stryjewsk": 381, "stt_amdgpu_hsa_kernel": 275, "stt_func": 275, "stt_object": 275, "stub": [289, 325, 366, 383, 388, 413, 422, 423, 424], "stuck": [386, 434, 442], "student": 326, "studio": [276, 287, 291, 334, 341, 388, 393, 419], "study": 359, "studying": [337, 384], "stuff": [288, 289, 323, 363, 383, 395, 403, 408, 414, 418, 428, 429, 431, 432, 433, 438, 439, 441], "stuffing": 292, "stumped": 413, "stupid": 285, "stwu": 289, "stxvd2x": 388, "stxvw4x": 388, "sty": 405, "styl": [275, 276, 278, 285, 292, 296, 298, 299, 304, 313, 315, 323, 330, 339, 342, 356, 371, 383, 388, 394, 401, 403, 404, 415, 419, 426, 431, 434, 436, 441, 442], "styled": 323, "stylistic": 291, "sub": [273, 278, 281, 288, 289, 292, 296, 313, 327, 330, 333, 334, 341, 350, 366, 383, 387, 401, 403, 405, 409, 413, 427, 432, 437], "sub1": 292, "sub_32": 362, "sub_8b": 362, "sub_r": 403, "sub_rr": 403, "subblock": 281, "subcl": [277, 289, 323, 351, 362, 393, 403, 413, 414], "subclass": [277, 289, 291, 323, 339, 351, 383, 387, 403, 405, 414, 418, 426, 436], "subclassed": [289, 383, 413], "subclassoptionaldat": 366, "subclassref": 404, "subcommand": [414, 415, 416], "subcomponent": 330, "subdirector": [287, 288, 296, 341, 356, 385, 407, 408, 413], "subdirectory": [287, 288, 296, 348, 356, 384, 385, 407, 408, 409, 413], "subdivided": 357, "subel": [357, 358], "subexpress": [274, 277, 358, 394, 426, 428, 429, 430, 431, 436, 438, 439, 440, 441], "subfield": 403, "subfold": 331, "subgraph": [381, 387], "subject": [275, 286, 289, 291, 330, 350, 382, 383, 410, 418], "subl": [289, 292], "sublist": 288, "subloop": 410, "subm": [284, 285, 330, 382, 419], "submiss": 330, "submit": 382, "submitted": [326, 330], "submitting": [407, 419], "submodul": 385, "subnormal": [357, 367], "subobject": 411, "subpath": [296, 356], "subprogram": [357, 388, 393, 433], "subproject": [291, 330, 341, 347, 385, 388, 419], "subrang": 357, "subreg": [357, 362, 413], "subreg_to_reg": 362, "subregclasslist": 413, "subregindex": 362, "subregist": 396, "subregister": 413, "subroutin": 357, "subscrib": [330, 382], "subscribed": 382, "subscript": [277, 357, 381], "subscripted": 357, "subsect": [316, 363, 383], "subsequent": [117, 208, 275, 289, 323, 330, 332, 340, 350, 357, 364, 381, 393, 394, 396, 403, 412, 413, 422, 423, 424, 427, 428], "subsequently": [332, 357, 361], "subset": [277, 278, 296, 313, 330, 338, 340, 341, 357, 367, 383, 385, 386, 393, 394, 396, 409, 434, 442], "subsetting": 386, "subsidiary": 401, "subst": [403, 404, 405], "substantial": [428, 438], "substantially": [277, 291, 339, 357, 394], "substit": 357, "substitu": [288, 305, 357, 381], "substitut": [278, 296, 388, 396, 403, 409], "substituted": [289, 292, 403], "substituting": [348, 403], "substream": [316, 379], "substring": [313, 328, 409], "subsubsect": 363, "subsystem": [289, 326, 357], "subtarget": [289, 309, 322, 343, 357], "subtargetemitt": 413, "subtargetfeatur": [405, 413], "subtl": [288, 340, 359, 371, 426, 429, 434, 436, 438, 439, 442], "subtlety": 385, "subtmp": [427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "subtmp5": [431, 441], "subtool": 324, "subtract": [274, 289, 328, 333, 357], "subtracting": [328, 357], "subtyp": [332, 413], "subvers": [330, 341, 342, 350, 352, 385, 388, 409], "subvert": 286, "succ": 291, "succeed": [284, 286, 291, 292, 293, 297, 299, 300, 301, 303, 307, 310, 312, 321, 322, 332, 345, 351, 383, 409, 420, 421, 426, 436, 441], "succeeded": [281, 282, 296, 414], "succeeding": [296, 357], "succeeed": 428, "success": [291, 293, 309, 313, 330, 332, 357, 383, 413, 414, 418, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "success_ord": 278, "successful": [302, 341, 352, 357, 385, 409], "successfully": [277, 291, 294, 308, 332, 343, 345, 348, 349, 350, 352, 394, 398, 412, 430, 440], "successively": 332, "successor": [282, 289, 291, 306, 332, 337, 357, 381, 387, 413], "succinct": 296, "such": [272, 274, 275, 277, 278, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 301, 304, 305, 306, 314, 316, 323, 324, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 347, 348, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 371, 376, 379, 380, 381, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 398, 399, 401, 403, 404, 405, 407, 409, 410, 412, 413, 414, 418, 419, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442], "sudo": [341, 346, 407], "suff": 339, "suffic": [280, 376], "sufficient": [277, 278, 279, 285, 292, 323, 337, 339, 340, 348, 351, 352, 357, 364, 382, 383, 385, 394, 398, 403, 425, 435], "sufficiently": [337, 340, 341, 357, 381], "suffix": [272, 275, 287, 291, 296, 297, 299, 300, 304, 307, 323, 333, 348, 357, 383, 394, 409, 413, 414, 423, 424, 427, 437], "suffixed": 401, "sugar": 357, "suggest": [277, 291, 330, 337, 341, 343, 349, 357, 380, 382, 383, 388, 394, 398, 414], "suggested": [330, 343, 384, 394], "suggesting": [382, 394, 402, 405], "suing": 424, "suit": [276, 288, 289, 324, 330, 333, 342, 343, 346, 349, 350, 366, 383, 385, 393, 394, 415, 419], "suitabl": [281, 286, 288, 289, 304, 322, 323, 326, 327, 328, 338, 339, 343, 357, 359, 361, 367, 381, 383, 393, 398, 409], "suitably": 383, "suited": [289, 332, 420], "sum": [274, 281, 282, 357, 383, 412, 416], "summar": [304, 315, 357, 408], "summaris": 280, "summariz": [289, 327, 339], "summarized": [357, 381], "summarizing": 296, "summary": [281, 291, 292, 293, 296, 297, 298, 300, 303, 304, 307, 309, 310, 312, 313, 314, 317, 318, 321, 322, 323, 379, 381, 382, 394, 397, 398, 431, 433, 441], "summat": 357, "summed": 304, "summing": 371, "sumo": 275, "sun": [289, 414], "sunk": [275, 277, 343], "sunwspro": 341, "sup": [289, 360, 413], "supercl": [383, 401, 403, 404, 405, 414], "superclass": [277, 383, 401, 403, 413, 414], "superfluous": 340, "superpos": 383, "superreg": 413, "superset": [278, 299, 357], "supersparc": 413, "superword": [358, 412], "suppl": [3, 32, 81, 175, 217, 274, 325, 390], "supplied": [182, 281, 317, 348, 357, 360, 383, 414, 418, 434, 442], "supply": [304, 327, 346, 348, 350, 352, 364, 385, 420, 421, 422], "supplying": [332, 383], "support": [6, 30, 84, 93, 95, 96, 104, 106, 107, 122, 178, 214, 216, 217, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 286, 287, 288, 290, 291, 292, 296, 297, 299, 308, 314, 315, 316, 323, 329, 330, 333, 334, 338, 339, 340, 341, 342, 344, 347, 348, 351, 353, 354, 355, 356, 357, 360, 362, 366, 367, 371, 375, 380, 381, 383, 384, 385, 386, 387, 388, 391, 393, 394, 396, 400, 401, 403, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443], "supported": [30, 122, 214, 272, 273, 274, 275, 278, 281, 287, 296, 303, 304, 305, 308, 314, 315, 316, 317, 323, 324, 330, 333, 334, 336, 337, 339, 341, 343, 344, 347, 348, 350, 356, 362, 363, 366, 379, 383, 387, 388, 391, 395, 399, 401, 403, 405, 412, 413, 415, 418, 430, 440], "supporting": [289, 323, 343, 344, 347, 381, 383, 399, 420, 434, 442], "supporttest": 287, "suppos": [332, 351, 366, 375, 399, 418], "supposed": [289, 356, 357, 366, 371, 414], "suppress": [291, 294, 296, 327, 357, 393, 410, 418], "suppressed": 357, "sure": [277, 278, 280, 284, 287, 289, 291, 293, 304, 323, 326, 327, 330, 333, 335, 337, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 380, 382, 383, 385, 389, 393, 397, 399, 402, 405, 407, 409, 412, 414, 415, 426, 427, 428, 429, 430, 431, 432, 433, 437, 441, 442], "surfac": [15, 16, 97, 98, 188, 189, 289, 338, 415], "surgical": 383, "surpris": [383, 434, 442], "surprising": [357, 366], "surprisingly": [337, 341, 426, 428, 436, 438], "surround": 381, "surrounded": [292, 357, 362], "surrounding": [278, 286, 292, 340, 357, 394, 396, 405], "survey": [325, 385], "surviv": [332, 394], "survived": [426, 436], "suspected": 321, "suspend1": 327, "suspend2": 327, "suspended": 327, "suspens": 327, "suspicious": 399, "sv": 287, "svg": [287, 416], "svn": [287, 330, 331, 337, 342, 350, 380, 382, 385, 396, 407, 408, 409, 412, 419, 437], "svptr": 357, "svr4": 299, "sw": [386, 394], "swap": [273, 278, 280, 346, 357, 375], "swapped": [280, 357, 365], "swapping": 280, "sweep": 339, "swiched": 278, "swift": 357, "swiftcc": [281, 357], "swifterror": [281, 357], "swiftmodul": 294, "swiftself": [281, 357], "swim": 386, "switch": [286, 287, 323, 327, 332, 333, 343, 344, 346, 350, 351, 354, 381, 383, 385, 394, 398, 401, 407, 412, 413, 418, 420, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439], "switched": [357, 388, 417], "switching": 357, "switchsect": [289, 339], "switchtosect": 289, "swizzl": [273, 275], "sy": [279, 341, 422, 423, 424, 432, 433], "sym": [314, 316, 334, 389, 422, 423, 424], "symaddr": [422, 423, 424], "symbol": [28, 118, 209, 281, 289, 291, 295, 297, 298, 299, 301, 304, 305, 311, 315, 317, 318, 320, 323, 329, 334, 339, 341, 357, 359, 361, 371, 379, 380, 383, 388, 393, 398, 403, 411, 413, 417, 418, 420, 421, 424, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 440, 441, 442, 444], "symbol1": 334, "symbol2": 334, "symbolic": [80, 174, 270, 273, 274, 277, 289, 339, 344, 349, 358, 383, 398, 407], "symbolically": 281, "symboliz": [295, 416], "symbolized": 320, "symbollookup": 424, "symbolnam": 275, "symbolresolv": [422, 423, 424], "symbolsiz": 374, "symbolt": 383, "symbytesiz": [371, 374], "symlink": [287, 385], "symlinked": 287, "symmetrical": 324, "symmetry": 409, "symobl": 334, "symposium": 324, "symptom": 341, "symrecordstream": 371, "symtab": [275, 294, 383], "sync": [278, 367, 385, 418], "synch_and_fetch": 348, "synchoniz": 275, "synchroniz": [275, 278, 357, 385], "synchronized": 360, "synchronously": 385, "syncscop": 357, "synergistic": 387, "synonym": 299, "synops": 323, "syntactic": [292, 357, 428, 438], "syntactically": 357, "syntax": [7, 27, 30, 34, 65, 80, 85, 116, 122, 127, 159, 174, 179, 207, 214, 219, 253, 270, 271, 275, 288, 289, 291, 297, 298, 313, 315, 316, 323, 335, 340, 341, 348, 358, 359, 362, 363, 364, 368, 383, 388, 391, 393, 395, 401, 409, 418, 419, 425, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441], "synthesiz": [393, 428, 438], "synthesized": [333, 393], "synthesizedcd": 280, "synthetic": [393, 413], "sysadmin": 385, "syscall": 289, "sysmsg_op_ecc_err_interrupt": [30, 122, 214], "sysmsg_op_host_trap_ack": [30, 122, 214], "sysmsg_op_reg_rd": [30, 122, 214], "sysmsg_op_ttrace_pc": [30, 122, 214], "sysroot": [348, 349, 350, 405], "system": [276, 277, 278, 279, 280, 284, 287, 288, 289, 291, 294, 297, 298, 299, 302, 316, 323, 325, 326, 330, 331, 333, 335, 338, 339, 340, 343, 344, 346, 348, 349, 350, 352, 356, 358, 359, 360, 367, 375, 379, 380, 382, 383, 384, 385, 388, 389, 391, 393, 394, 396, 398, 401, 405, 407, 408, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 441, 442], "system_error": 432, "system_vgpr_workitem_id_undefined": 275, "system_vgpr_workitem_id_x": 275, "system_vgpr_workitem_id_x_y": 275, "system_vgpr_workitem_id_x_y_z": 275, "systematic": 394, "systemz": [289, 341, 357, 362], "sysv": [314, 325], "t0": 388, "t1": [289, 357, 366, 409, 416], "t1item": 366, "t2": [289, 292, 357, 366, 367, 409, 416], "t2item": 366, "t3": [289, 357], "t4": 357, "t5": 357, "tab": [291, 292, 304, 388], "tabl": [272, 274, 277, 280, 281, 286, 294, 295, 299, 301, 302, 308, 311, 313, 315, 316, 318, 320, 322, 323, 327, 341, 343, 351, 354, 357, 359, 360, 361, 366, 371, 379, 381, 383, 394, 398, 401, 405, 408, 412, 413, 417, 418, 419, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "tabledef": 309, "tablegen": [287, 322, 333, 341, 343, 349, 350, 354, 356, 413, 419], "tablegen_json_vers": 401, "tabsiz": 304, "tackl": [335, 431, 441], "tackling": [428, 438], "tag": [66, 160, 254, 271, 281, 291, 330, 331, 339, 341, 357, 364, 383, 398, 401], "tag0": [271, 357], "tag1": [271, 357], "tag2": 357, "tag3": 357, "tag_apple_property": 393, "tag_base_typ": 393, "tag_memb": 393, "tag_pointer_typ": 393, "tag_structure_typ": 393, "tagged": [272, 350, 357, 383], "tahit": 275, "tail": [281, 292, 327, 339, 357, 366, 367, 393, 403, 404, 417, 434, 442], "tail_ex": 417, "tailcall": [289, 394], "tailcalle": 289, "tailcallopt": [289, 357], "tailored": [316, 346], "tak": [275, 276, 277, 278, 280, 281, 285, 286, 288, 289, 290, 291, 292, 294, 296, 298, 301, 307, 310, 312, 313, 316, 317, 321, 323, 324, 327, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 347, 351, 353, 354, 357, 359, 360, 361, 363, 366, 367, 381, 382, 383, 385, 387, 388, 389, 390, 393, 394, 395, 396, 398, 401, 403, 404, 411, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "takecallback": 383, "takeerror": [383, 420, 421, 422, 423, 424], "takelast": 383, "taken": [277, 283, 289, 299, 309, 323, 332, 337, 357, 362, 365, 366, 381, 383, 387, 389, 394, 398, 399, 405, 411, 413, 434, 442], "taking": [281, 297, 301, 326, 355, 357, 381, 383, 385, 387, 390, 393, 407, 431, 441, 442], "talk": [291, 324, 333, 357, 383, 414, 425, 426, 427, 428, 429, 431, 434, 435, 436, 437, 438, 439, 441, 442], "talking": [291, 390, 425, 426, 427, 434, 435, 436, 437, 442], "tally": 408, "tap": 341, "tar": [341, 342, 349, 389], "tarball": [341, 349, 350], "target": [28, 65, 118, 159, 209, 253, 273, 274, 276, 278, 279, 280, 281, 286, 287, 288, 291, 295, 297, 303, 305, 309, 313, 315, 327, 331, 333, 337, 338, 339, 341, 342, 347, 349, 350, 352, 353, 354, 356, 361, 364, 366, 368, 391, 393, 394, 396, 398, 401, 405, 407, 408, 409, 411, 412, 414, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 433, 438, 439, 440, 441], "target_compile_definit": 288, "target_dat": [438, 439, 440, 441], "target_link_librar": 287, "targetasminfo": [339, 413], "targetcallingconv": 413, "targetdescript": 413, "targeted": [289, 337, 349, 356, 357, 413, 419], "targetfeatur": 275, "targetframeinfo": 413, "targetframelowering": 332, "targetfunc": 383, "targetgroup": 356, "targetinfo": [330, 413], "targeting": [288, 289, 335, 337, 341, 347, 348, 349, 357, 394, 405, 432], "targetinstrformat": 413, "targetjitinfo": 413, "targetlowering": [285, 332, 333, 343, 413, 416], "targetloweringobjectfil": 289, "targetloweringopt": 416, "targetmachin": [339, 361, 367, 413, 414, 420, 422, 423, 424, 428, 429, 430, 431, 432], "targetnam": 362, "targetopt": [289, 432], "targetpassconfig": 343, "targetregisterclass": [289, 343, 413], "targetregisterdesc": [289, 413], "targetregistry": [289, 413, 432], "targetregsterinfo": 289, "targets_to_build": 349, "targetselect": [424, 428, 429, 430, 431, 432, 433], "targetselectiondag": [289, 333, 413], "targetsubtarget": 413, "targettripl": 432, "tarjan": 414, "task": [291, 292, 327, 332, 333, 347, 357, 366, 393, 398, 399], "task_begin": 292, "task_end": 292, "taught": 289, "tb": 413, "tba": [275, 337, 358, 365], "tba_h": 274, "tba_lo": 274, "tbb": 413, "tbcc": 413, "tbd": [271, 273, 385], "tbepl": 386, "tblgen": [287, 289, 295, 333, 347, 349, 401, 403, 405, 413], "tblgensubtarget": 413, "tbr_jtr": 362, "tcb": 392, "tcp": 424, "tcpchannel": 424, "td": [289, 298, 322, 333, 354, 362, 367, 401, 403, 404, 405, 413], "td6584414": 385, "tdm": 345, "tdrr": 298, "tdtag": 401, "teach": [333, 420, 427, 437], "teaching": [425, 435], "team": [324, 350, 384, 385, 387], "tear": 332, "technical": [288, 290, 330, 359, 385, 416, 419], "technically": 305, "techniqu": [277, 285, 289, 339, 357, 366, 383, 394, 412, 413, 414, 415, 425, 426, 428, 429, 430, 431, 435, 436, 438, 439, 440, 441], "technology": [360, 434, 442], "tedious": 418, "tee": 285, "tel": [277, 285, 287, 289, 291, 293, 323, 328, 330, 333, 339, 341, 348, 357, 360, 366, 380, 383, 384, 393, 403, 408, 409, 419, 426, 427, 431, 433, 434, 436, 437, 441, 442], "telling": 323, "temp": 352, "templat": [277, 291, 304, 323, 351, 363, 366, 381, 388, 399, 401, 404, 405, 413, 414, 418, 419, 424, 427], "templatearglist": 404, "templated": [323, 324, 383], "templateparam": 357, "temporal": 357, "temporar": [291, 335, 357, 383, 394, 409], "temporarily": 285, "temporary": [274, 289, 291, 296, 334, 343, 357, 358, 359, 362, 381, 383, 385, 390, 408, 409, 418], "tempted": 399, "tempting": [291, 341, 394], "ten": [340, 375], "tend": [291, 306, 313, 330, 336, 340, 341, 356, 383, 389, 393], "tension": [431, 441], "tensorflow": 359, "tentat": 357, "term": [277, 278, 280, 289, 290, 291, 313, 330, 332, 335, 339, 343, 357, 358, 362, 365, 366, 381, 382, 387, 393, 396, 398, 399, 403, 404, 409, 419, 421], "termed": 275, "termin": [289, 383, 393, 399, 429, 439], "terminal": [285, 299, 300, 307, 310, 312, 316, 321, 323, 366, 388], "terminat": [296, 332, 337, 357, 383, 387, 393, 409], "terminated": [275, 281, 299, 332, 334, 367, 371, 383, 391, 413, 429, 439], "terminating": [337, 383, 403, 413], "terminator": [283, 291, 306, 332, 337, 366, 381, 383, 387, 413, 414], "terminology": [275, 283, 288, 419, 433], "ternary": 289, "terribly": 276, "territory": 341, "terror": 276, "tessel": 275, "test": [275, 276, 277, 285, 286, 289, 291, 292, 295, 302, 309, 310, 313, 316, 318, 319, 323, 324, 326, 327, 328, 332, 333, 335, 342, 343, 346, 347, 349, 350, 351, 352, 359, 362, 366, 368, 381, 382, 383, 384, 385, 388, 391, 394, 397, 398, 401, 411, 414, 418, 419, 424, 425, 428, 429, 431, 432, 435, 438, 439, 441], "test1": [363, 395, 398, 409], "test5": 292, "test_devic": 324, "test_exec_root": 296, "test_format": 296, "test_fuzz": 359, "test_hd": 324, "test_host": 324, "test_source_root": 296, "test_suite_benchmarking_only": 407, "test_suite_collect_stat": 407, "test_suite_remote_host": 407, "test_suite_run_benchmark": 407, "test_suite_run_typ": 407, "test_suite_run_und": 407, "test_suite_spec2000_root": 407, "test_suite_spec2006_root": 407, "test_suite_spec2017_root": 407, "test_suite_subdir": 407, "test_suite_use_perf": 407, "testabl": 382, "testcas": [293, 330, 357, 383, 427, 437], "testcase_d": 359, "testcaselength": 383, "testcleanup": 357, "tested": [286, 291, 324, 330, 332, 338, 341, 344, 347, 357, 359, 366, 381, 383, 391, 409, 414, 431, 441], "tester": [330, 350], "testfnptr": 357, "testfunc": [428, 438], "testing": [277, 286, 287, 292, 293, 296, 297, 316, 322, 327, 330, 338, 341, 343, 346, 356, 381, 383, 384, 385, 389, 394, 407, 408, 419], "testingconfig": 296, "testl": 394, "testq": 394, "testresult": 419, "testrunn": 296, "testsuit": [292, 296], "testsuitemakefileguid": 407, "tex": 408, "text": [287, 289, 290, 291, 292, 299, 304, 305, 308, 313, 314, 315, 317, 330, 333, 334, 338, 359, 363, 364, 382, 383, 390, 394, 395, 396, 404, 407, 408, 409, 413, 415, 418, 422, 425, 434, 435, 442, 444], "textfileread": 291, "textual": [289, 297, 304, 330, 335, 338, 357, 358, 364, 365, 401, 405, 409, 416, 428, 438], "textually": [335, 403], "textur": 273, "tfe": [12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 90, 91, 92, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 185, 186, 187, 188, 189, 195, 196, 197, 198, 199, 202, 203, 204, 275], "tgid_size_en": 275, "tgid_x_en": 275, "tgid_y_en": 275, "tgid_z_en": 275, "tgt": [0, 1, 2, 322], "th": [275, 280, 301, 332, 357, 366, 413, 418, 425, 435], "than": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 291, 292, 294, 297, 299, 301, 304, 305, 309, 313, 316, 317, 323, 324, 327, 328, 330, 331, 332, 333, 335, 337, 338, 339, 341, 343, 345, 346, 350, 352, 353, 355, 356, 357, 359, 360, 363, 364, 365, 366, 371, 375, 376, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 401, 403, 404, 409, 410, 413, 414, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "thank": [326, 352, 391], "that": [21, 100, 108, 111, 113, 191, 199, 202, 204, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 313, 314, 316, 317, 319, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "the": [3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 26, 27, 28, 30, 32, 36, 37, 38, 47, 55, 65, 66, 67, 80, 81, 82, 84, 88, 89, 90, 91, 92, 97, 98, 114, 115, 116, 117, 118, 122, 124, 125, 128, 130, 131, 132, 144, 149, 159, 160, 161, 174, 175, 176, 178, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 205, 206, 207, 208, 209, 214, 216, 217, 220, 222, 223, 226, 238, 243, 253, 254, 255, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 329, 330, 331, 333, 334, 338, 343, 345, 346, 349, 352, 353, 354, 356, 360, 361, 362, 363, 364, 366, 368, 380, 384, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 404, 406, 409, 410, 411, 415, 417, 418, 419, 420, 422, 423, 424, 427, 428, 433, 437, 438, 443, 444], "the_execution_engin": [438, 439, 440, 441], "the_fpm": [438, 439, 440, 441], "the_funct": [437, 438, 439, 440, 441], "the_modul": [437, 438, 439, 440, 441], "thecontext": [427, 428, 429, 430, 431, 432, 433], "thecu": 433, "thedoc": 418, "thedoclist": 418, "theexecutionengin": 433, "thefpm": [428, 429, 430, 431], "thefunct": [427, 428, 429, 430, 431, 432, 433], "thei": 381, "their": [271, 275, 277, 278, 280, 281, 284, 286, 287, 288, 289, 291, 292, 295, 296, 301, 302, 304, 306, 308, 313, 314, 317, 323, 324, 328, 330, 331, 332, 335, 337, 339, 341, 343, 345, 350, 354, 355, 356, 357, 358, 359, 360, 362, 366, 367, 379, 380, 381, 383, 384, 385, 387, 388, 393, 394, 396, 398, 399, 401, 403, 405, 407, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442], "thej": [428, 429, 430, 431, 433], "them": [275, 277, 278, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 299, 304, 311, 312, 313, 314, 316, 317, 323, 324, 326, 328, 330, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 347, 349, 350, 351, 353, 354, 356, 357, 360, 362, 364, 365, 366, 367, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 396, 398, 399, 401, 402, 403, 405, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "themodul": [427, 428, 429, 430, 431, 432, 433], "themself": 330, "themselv": [278, 281, 289, 296, 323, 330, 338, 356, 357, 366, 383, 385, 393, 394, 403, 405, 410, 416, 417, 426, 436], "then": [47, 67, 144, 161, 238, 255, 273, 274, 275, 276, 277, 278, 280, 281, 282, 285, 287, 288, 289, 290, 291, 292, 296, 297, 298, 299, 300, 301, 304, 306, 307, 310, 312, 313, 316, 317, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 374, 375, 381, 382, 383, 384, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441], "then1": 394, "then2": 394, "then_": [439, 440, 441], "then_bb": [439, 440, 441], "then_val": [439, 440, 441], "thenbb": [429, 430, 431, 432, 433, 439], "thenv": [429, 430, 431, 432, 433], "theoretical": 313, "theoretically": [383, 399], "theory": [343, 348, 366, 371, 418, 434, 442], "ther": [100, 111, 113, 272, 273, 274, 275, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 296, 299, 304, 305, 308, 313, 317, 323, 324, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 359, 362, 363, 364, 365, 366, 367, 371, 374, 379, 381, 382, 383, 384, 385, 386, 389, 390, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 421, 422, 426, 427, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442], "thereaft": 396, "thereby": [323, 357, 396], "therefor": [275, 278, 280, 289, 313, 323, 324, 327, 328, 330, 332, 340, 344, 357, 364, 367, 368, 381, 383, 387, 393, 394, 396, 410, 414, 418], "thereof": 290, "thes": [3, 80, 81, 174, 175, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 304, 311, 313, 323, 324, 326, 327, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 371, 379, 380, 381, 383, 384, 385, 386, 387, 388, 393, 394, 396, 398, 399, 401, 403, 405, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "thetargetmachin": 432, "they": [271, 272, 273, 274, 275, 277, 278, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 296, 298, 299, 301, 305, 306, 313, 314, 317, 321, 323, 324, 327, 328, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 350, 351, 354, 355, 356, 357, 358, 359, 362, 364, 365, 366, 381, 382, 383, 384, 385, 386, 387, 389, 390, 393, 394, 396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 426, 427, 428, 429, 431, 434, 436, 437, 438, 439, 441, 442], "thin": [287, 311, 357, 383], "thing": [277, 280, 281, 285, 288, 289, 290, 291, 292, 296, 323, 324, 328, 330, 332, 338, 340, 341, 342, 343, 347, 349, 350, 352, 356, 357, 359, 363, 364, 365, 366, 380, 381, 383, 384, 385, 393, 394, 395, 399, 401, 403, 408, 409, 414, 416, 418, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "think": [277, 284, 287, 289, 291, 328, 330, 333, 339, 340, 351, 354, 357, 358, 365, 367, 382, 383, 394, 399, 403, 425, 429, 432, 435, 439], "thinking": [340, 383, 434, 442], "thinlto": [283, 394, 397], "third": [276, 281, 289, 291, 313, 316, 323, 327, 328, 330, 332, 334, 339, 340, 341, 350, 357, 362, 366, 368, 383, 384, 393, 394, 396, 398, 408, 413, 414, 417, 418, 427, 434, 437, 442], "this": [3, 21, 22, 23, 27, 28, 29, 30, 33, 55, 66, 80, 81, 93, 95, 96, 100, 104, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 126, 128, 149, 160, 174, 175, 182, 199, 200, 201, 207, 208, 209, 210, 211, 212, 213, 214, 218, 220, 225, 243, 254, 256, 257, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368, 371, 374, 375, 376, 379, 380, 381, 382, 383, 384, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 442], "thischar": [425, 426, 427, 428, 429, 430, 431, 432, 433], "thom": 394, "thorough": 291, "thoroughly": [429, 439], "thos": [275, 277, 278, 285, 288, 289, 290, 291, 292, 296, 299, 301, 304, 306, 313, 316, 317, 323, 328, 330, 332, 338, 339, 340, 341, 343, 346, 348, 349, 351, 356, 357, 358, 359, 365, 366, 379, 381, 383, 385, 390, 391, 393, 394, 396, 398, 399, 409, 411, 413, 414, 415, 418, 419, 431, 432, 433, 441], "thost": 342, "though": [278, 282, 289, 291, 292, 305, 309, 323, 324, 332, 333, 334, 337, 339, 340, 341, 343, 347, 351, 357, 360, 365, 366, 381, 383, 385, 388, 393, 394, 403, 408, 409, 414, 420, 426, 427, 429, 431, 433, 436, 437, 438, 441], "thoughout": 375, "thought": [274, 289, 357, 365, 376, 398, 404], "thousand": [359, 375, 381], "thre": [276, 281, 285, 288, 289, 292, 293, 313, 317, 323, 327, 332, 335, 336, 340, 341, 343, 357, 362, 365, 366, 368, 381, 383, 387, 388, 389, 394, 398, 401, 409, 413, 414, 415, 420, 426, 429, 436], "thread": [273, 274, 277, 278, 279, 281, 287, 289, 292, 294, 296, 304, 317, 326, 327, 329, 331, 332, 339, 358, 359, 367, 381, 385, 386, 391, 392, 394, 398, 407, 415, 416, 417, 420, 421], "thread_id": [292, 417], "thread_local": [289, 357, 398], "thread_siblings_list": 279, "threadbuff": 417, "threaded": [339, 357, 359, 383], "threadgroup_size_in_wavefront": 275, "threadid": 367, "threadidx": 367, "threading": [327, 383], "threadlocal": [281, 357], "threadlocalquarantinesizekb": 391, "threadsaf": 339, "threadsafecontext": [420, 421], "threadsafemodul": [420, 421], "threadsanitiz": 357, "threat": [290, 390], "threatened": 290, "threatening": 290, "threshold": [304, 357, 381, 386, 415], "thriving": 419, "throttling": 387, "through": [275, 277, 278, 281, 282, 285, 287, 288, 289, 297, 313, 323, 324, 325, 330, 332, 335, 336, 337, 338, 339, 340, 341, 343, 345, 347, 350, 351, 353, 355, 357, 359, 360, 361, 364, 366, 368, 379, 381, 382, 383, 385, 387, 391, 393, 394, 396, 397, 398, 399, 401, 412, 413, 414, 415, 418, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 438, 439, 440, 441], "throughout": [273, 274, 275, 280, 281, 288, 292, 328, 330, 341, 357, 361, 383, 399, 417], "throughput": [313, 337], "throw": [324, 327, 337, 355, 357, 381, 414, 422], "throwaway": 276, "throwinfo": 332, "throwing": [289, 332, 357, 383, 399], "thrown": [332, 336, 357], "throwntyp": 357, "thumb": [278, 289, 291, 330, 348, 399, 415], "thumb1": [325, 357], "thumb2": [289, 325, 353, 357], "thunderbird": 330, "thunderx2t99model": 413, "thunderxt8xmodel": 413, "thunk": [289, 316, 357, 366, 381, 411], "thus": [277, 278, 281, 282, 285, 289, 291, 323, 327, 328, 330, 332, 335, 337, 339, 343, 352, 357, 359, 365, 366, 371, 381, 382, 383, 385, 393, 394, 398, 409, 410, 414, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "thusly": 374, "ti": [275, 327, 331, 357], "tian": 387, "tick": [299, 417], "tid": 367, "tidbit": [277, 425, 433, 435, 441, 443], "tidig_cmp_cnt": 275, "tidy": 414, "tiebreak": 324, "tied": [289, 302, 355, 357, 362, 393, 398], "tight": [327, 337, 360], "tightly": [291, 357, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "tii": 289, "til": 387, "tiling": [37, 131, 223, 387], "till": [329, 345, 383], "tim": [275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 287, 288, 289, 290, 292, 294, 296, 297, 298, 299, 302, 304, 308, 309, 310, 313, 314, 316, 317, 320, 321, 323, 324, 326, 327, 330, 331, 332, 333, 334, 337, 339, 341, 342, 343, 345, 347, 348, 349, 350, 355, 356, 357, 358, 359, 361, 362, 363, 366, 367, 368, 371, 375, 376, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 428, 429, 430, 431, 435, 437, 438, 439, 440, 441], "timberwolfmc": 408, "timeit": 407, "timelin": [415, 416], "timely": 398, "timeout": 359, "timeout_exitcod": 359, "timepassesisenabled": 323, "timescal": 417, "timestamp": [294, 376, 385, 417], "timing": [313, 357, 394, 409, 414, 417], "tiny": [298, 351, 366, 388], "tip": [285, 326, 330, 385, 401, 414, 419, 425, 435], "tir": 291, "tirefactory": 291, "tiring": 405, "titl": [284, 330, 382], "tl": [281, 289, 332, 357, 394, 398], "tm": [367, 413, 422, 423, 424], "tma_h": 274, "tma_lo": 274, "tmax": 274, "tmp": [287, 289, 292, 309, 320, 339, 340, 357, 383, 384, 409, 413, 428, 431, 438, 441], "tmp1": [291, 292], "tmp2": [431, 441], "tmp3": 292, "tmp6": 340, "tmp7": [292, 340], "tmp8": 340, "tmp9": [292, 340], "tmpb": [431, 432, 433], "tmpf": 279, "to": [3, 6, 10, 11, 17, 24, 25, 26, 28, 32, 34, 38, 47, 55, 65, 67, 80, 81, 84, 88, 89, 93, 94, 95, 96, 99, 100, 104, 105, 106, 107, 111, 112, 113, 114, 115, 117, 118, 124, 125, 127, 128, 132, 144, 149, 159, 161, 174, 175, 178, 183, 184, 190, 191, 202, 203, 204, 205, 206, 208, 209, 216, 217, 219, 220, 225, 226, 238, 243, 253, 255, 256, 257, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 319, 320, 321, 324, 325, 327, 328, 329, 330, 332, 333, 334, 336, 342, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 371, 374, 375, 379, 380, 382, 384, 386, 387, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444], "tobi": 387, "toc": 289, "today": [278, 291, 338, 340, 379, 385, 396, 398], "todefin": 401, "todo": [289, 323, 333, 343, 349, 381, 389, 401, 402, 414], "togeth": [21, 108, 199, 273, 275, 277, 280, 282, 285, 289, 292, 293, 296, 299, 312, 314, 317, 321, 323, 327, 328, 330, 332, 339, 341, 347, 356, 357, 359, 371, 375, 381, 383, 385, 388, 393, 403, 409, 412, 414, 421, 425, 426, 427, 429, 430, 434, 435, 436, 437, 439, 440, 442], "tok": [327, 357, 433], "tok_binary": [430, 431, 432, 433], "tok_def": [425, 426, 427, 428, 429, 430, 431, 432, 433], "tok_els": [429, 430, 431, 432, 433], "tok_eof": [425, 426, 427, 428, 429, 430, 431, 432, 433], "tok_extern": [425, 426, 427, 428, 429, 430, 431, 432, 433], "tok_for": [429, 430, 431, 432, 433], "tok_identifi": [425, 426, 427, 428, 429, 430, 431, 432, 433], "tok_if": [429, 430, 431, 432, 433], "tok_in": [429, 430, 431, 432, 433], "tok_numb": [425, 426, 427, 428, 429, 430, 431, 432, 433], "tok_then": [429, 430, 431, 432, 433], "tok_unary": [430, 431, 432, 433], "tok_var": [431, 432, 433], "tokcodefragment": 404, "token": [289, 313, 327, 333, 343, 364, 371, 385, 398, 403, 404, 418, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "token_prec": [436, 437, 438, 439, 440, 441], "tokeniz": 435, "tokidentifi": 404, "tokinteg": 404, "tokprec": [426, 427, 428, 429, 430, 431, 432, 433], "tokstring": 404, "tokvarnam": 404, "told": [291, 330], "toler": 339, "tolerat": [350, 357, 359, 397], "tolmach": 339, "tolmach94": 339, "tom": [350, 418], "tonearest": 357, "tong": 275, "tons": [365, 425, 435], "too": [276, 285, 289, 291, 292, 323, 330, 336, 341, 342, 344, 346, 357, 365, 366, 383, 386, 387, 394, 399, 401, 403, 409, 414, 417, 418, 421, 426, 431, 433, 434, 436, 441, 442], "took": [437, 438, 439, 440, 441], "tool": [275, 276, 277, 281, 287, 288, 289, 291, 292, 294, 296, 298, 301, 302, 303, 304, 306, 308, 309, 310, 313, 316, 318, 319, 323, 324, 325, 326, 328, 329, 330, 334, 339, 344, 347, 348, 349, 350, 352, 356, 357, 358, 360, 367, 368, 376, 379, 380, 381, 382, 384, 385, 388, 389, 393, 397, 399, 405, 407, 409, 413, 414, 419, 425, 426, 427, 428, 429, 435, 437, 438, 439], "tool_nam": 341, "toolchain": [286, 287, 289, 291, 294, 342, 348, 371, 376, 379, 385, 388, 407], "tooling": [347, 383, 385, 388], "toolk": [324, 367, 383], "toolnam": 384, "toolset": [287, 342, 415], "toosl": 416, "top": [275, 277, 278, 281, 287, 288, 289, 291, 292, 296, 298, 302, 317, 330, 331, 332, 338, 340, 341, 343, 344, 355, 356, 357, 358, 365, 366, 381, 382, 383, 384, 385, 401, 407, 408, 411, 414, 416, 418, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "top_level_d": 341, "topic": [291, 363, 395, 425, 434, 435, 442], "toplevel": [436, 437, 438, 439, 440, 441], "toplevelexpr": [426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "topn": 317, "topological": 292, "topology": 279, "torec": 383, "torerr": 383, "toreturn": 417, "torvald": 385, "torvaldrevnum": 385, "toshio": 289, "tospflag": 388, "tot": 398, "total": [275, 278, 281, 301, 313, 357, 359, 366, 371, 375, 381, 383, 392, 393, 394, 408, 414, 416], "totally": [385, 427], "touch": [326, 351, 383, 390, 393], "touched": [291, 381], "touching": [279, 357, 385, 393, 394, 414], "tough": [426, 436], "tour": [426, 436], "toward": [275, 282, 287, 330, 338, 357, 383, 394, 419], "towardzero": 357, "toy": [324, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "tpi": [316, 379], "tpoff": 398, "tr1": 383, "trac": [304, 323, 345, 357, 358, 359, 388, 393, 398, 414], "trace_event": 416, "traced": 417, "tracevalu": 381, "tracing": [394, 415, 416, 417], "track": [277, 284, 285, 289, 291, 296, 326, 330, 331, 335, 337, 338, 341, 343, 357, 359, 365, 366, 381, 382, 383, 385, 393, 394, 396, 397, 398, 405, 414, 427, 430, 431, 433, 437, 440, 441], "tracked": [289, 291, 293, 337, 338, 339, 357, 362, 383, 398], "tracker": 290, "tracking": [284, 313, 330, 352, 358, 368, 383, 385, 394, 407], "tracksregliveness": 362, "trad": [285, 365, 383, 394, 421], "tradeoff": [278, 339, 394, 428, 438], "traditional": [276, 289, 314, 381, 383, 393, 414, 420, 425, 435], "traditionally": [277, 289], "traffic": [383, 385, 431, 441], "tragic": 385, "trailing": [288, 291, 292, 296, 323, 328, 340, 357, 383, 418], "train": [27, 407], "training": [276, 317, 407], "trait": [291, 383, 418], "tramp": 357, "tramp1": 357, "transcendental": 324, "transcribed": [427, 437], "transcript": [428, 438], "transf": [324, 327, 355, 357, 428, 429, 430, 431, 432, 433], "transfer": [332, 357, 394], "transferred": [280, 332, 357, 392, 407], "transform": [273, 278, 285, 287, 289, 292, 321, 333, 335, 336, 337, 339, 341, 347, 354, 357, 366, 368, 383, 384, 387, 393, 396, 398, 401, 405, 413, 414, 419, 421, 422, 423, 424, 427, 428, 429, 430, 431, 433, 437, 438, 441], "transformed": [289, 354, 357, 381, 383, 387, 394, 398, 410, 411, 421], "transformedtsm": 421, "transformfunct": 421, "transforming": [291, 341, 381, 387, 393, 398], "transformlai": 421, "transformutil": 356, "transit": [275, 289, 313, 341, 354, 356, 365, 366, 394], "transitioning": [393, 420], "transitively": [414, 438], "transitivity": 366, "translat": [278, 289, 291, 300, 322, 327, 328, 334, 335, 338, 340, 341, 343, 357, 371, 381, 383, 386, 387, 393, 394, 401, 418, 433, 434, 442], "translated": [278, 289, 323, 357, 401, 418], "translating": [277, 289, 337, 340, 401, 413, 418], "transm": 357, "transmitted": 357, "transparency": 360, "transparent": 333, "transparently": [291, 323, 340, 360, 383], "trap": [8, 31, 32, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 86, 116, 123, 124, 134, 135, 138, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 207, 286, 327, 337, 340], "trap_present": 275, "trapping": 357, "travers": [289, 296, 334, 339, 343, 356, 381, 383, 414], "traversal": [289, 351, 366, 381], "traversed": [383, 387], "traversing": [381, 414], "trc": 289, "tre": [275, 276, 287, 289, 291, 296, 302, 316, 330, 332, 335, 337, 338, 339, 340, 341, 342, 349, 350, 351, 356, 357, 358, 366, 367, 383, 385, 387, 388, 391, 393, 408, 409, 414, 416, 419, 425, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441], "treat": [278, 289, 294, 308, 332, 338, 353, 357, 359, 360, 362, 366, 383, 396, 409, 416, 434, 442], "treated": [28, 118, 209, 275, 278, 280, 281, 287, 292, 305, 313, 323, 334, 340, 354, 357, 359, 413], "treating": [280, 338, 357, 366, 398, 427, 437], "treatment": [275, 339, 383, 413], "tri": [285, 287, 289, 316, 338, 357, 359, 363, 366, 381, 395, 410, 413, 414], "triag": 284, "triaged": [284, 419], "triaging": 289, "trick": [326, 330, 349, 351, 357, 383, 385, 394, 401, 419, 425, 431, 435, 441], "trickrevnum": 385, "tricky": [278, 291, 324, 339, 407, 414], "tried": [289, 425, 428, 435], "trig": 413, "trigg": [275, 277, 327, 339, 357, 358, 359, 362, 383, 396, 409, 418, 420, 422], "trigger": [285, 339, 352, 359, 383, 408, 428], "triggered": [287, 291, 359, 361, 396, 418], "triggering": [310, 357], "trinity": 275, "trip": [280, 357, 381, 387, 394, 410], "tripl": [281, 297, 298, 313, 315, 337, 338, 349, 361, 362, 393, 409, 413, 424, 432, 433], "triplet": [323, 357], "tripped": 291, "trivial": [277, 278, 280, 288, 291, 323, 333, 340, 343, 355, 357, 381, 385, 393, 399, 413, 414, 417, 425, 426, 431, 434, 435, 436, 441, 442], "trivially": [275, 289, 335, 357, 381, 382, 383, 385, 393, 394, 431, 434, 441, 442], "troubl": [323, 330, 338, 341, 342], "tru": [274, 275, 277, 278, 283, 288, 289, 291, 293, 298, 304, 313, 317, 320, 323, 327, 339, 340, 344, 346, 349, 351, 354, 357, 362, 366, 367, 371, 379, 381, 383, 385, 388, 391, 393, 401, 404, 405, 409, 410, 411, 413, 414, 415, 416, 418, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441], "true_branch_weight": 283, "truedest": 357, "truly": [383, 394, 422], "trunc": [393, 412], "truncat": [274, 357], "truncated": [10, 11, 28, 47, 67, 88, 89, 117, 118, 128, 144, 161, 183, 184, 208, 209, 220, 238, 255, 274, 357, 403], "truncating": [357, 413], "truncing": 357, "truncinst": 381, "trunk": [286, 289, 331, 341, 342, 350, 359, 382, 385, 388, 393, 407, 408, 409, 419], "trust": [291, 330, 422], "trusted": 330, "truth": [357, 365, 429, 439], "try": [277, 278, 279, 280, 284, 285, 289, 290, 291, 302, 308, 323, 324, 326, 330, 331, 337, 339, 341, 352, 357, 359, 363, 366, 381, 383, 385, 390, 393, 394, 395, 414, 415, 418, 419, 421, 422, 423, 424, 428, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442], "trying": [277, 289, 291, 293, 330, 337, 339, 341, 342, 362, 365, 383, 399, 421, 434, 442], "tsc": [416, 417], "tsc701": 413, "tsc_delt": 417, "tsflag": 413, "tslp": 387, "tsm": [371, 421], "tstri": 362, "tsvg": 416, "tt": 354, "ttmp": [9, 36, 37, 38, 39, 40, 87, 130, 131, 132, 133, 136, 137, 180, 181, 182, 192, 193, 194, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 275], "ttmp0": 274, "ttmp4": 274, "ttmp5": 274, "ttmp6": 274, "ttmp7": 274, "tun": [323, 383], "tunabl": 391, "tuned": [289, 337, 393, 394, 412, 431, 441], "tupl": [334, 343, 357, 385], "turbo": 279, "turing": [426, 428, 436, 438], "turk": 275, "turn": [275, 280, 285, 287, 288, 289, 290, 299, 323, 330, 346, 347, 357, 360, 363, 365, 380, 381, 383, 390, 393, 395, 398, 401, 402, 405, 420, 421, 422, 426, 427, 434, 436, 437, 442], "turned": [291, 330, 333, 357, 383, 413], "turning": [278, 289, 357, 381, 387], "tutorial": [323, 324, 351, 359, 366, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "tweak": [323, 324, 341, 351, 380, 415, 420], "tweaking": 428, "twic": [276, 327, 341, 342, 357, 366, 383, 389, 407, 414, 428, 438], "twiddling": [357, 428, 429, 430, 431, 438, 439, 440, 441], "twist": 420, "two": [274, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 291, 292, 296, 298, 299, 305, 306, 308, 309, 313, 316, 323, 324, 327, 328, 330, 331, 332, 334, 336, 337, 338, 339, 341, 342, 343, 345, 347, 351, 352, 354, 355, 357, 358, 359, 361, 362, 365, 366, 367, 368, 371, 375, 381, 382, 383, 384, 385, 391, 393, 394, 396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 426, 428, 429, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442], "twoaddressinstructionpass": 289, "twoargfp": 403, "txt": [276, 287, 291, 302, 320, 323, 326, 330, 341, 350, 356, 363, 382, 393, 395, 407, 409, 413, 414, 416, 420, 421, 422, 423, 424], "ty": [291, 333, 357, 383, 403], "ty2": 357, "ty64": 393, "tying": 289, "typ": [30, 122, 214, 271, 277, 278, 280, 281, 283, 285, 286, 287, 289, 293, 294, 297, 299, 301, 305, 308, 310, 313, 314, 323, 324, 327, 330, 332, 334, 338, 339, 341, 342, 349, 350, 351, 352, 353, 355, 356, 358, 361, 364, 365, 366, 367, 376, 379, 382, 384, 387, 388, 391, 393, 394, 396, 398, 401, 405, 407, 408, 409, 414, 415, 416, 417, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "type_info": 332, "type_nam": 275, "type_of": [437, 438, 439, 440, 441], "typecod": 333, "typed": [288, 291, 323, 335, 339, 340, 357, 381, 383, 396, 401, 403, 425, 426, 427, 428, 433, 434, 436, 437, 438, 442], "typedef": [291, 316, 334, 383, 418, 421, 424], "typedescriptor2": 332, "typeflag": 393, "typeid": [333, 357, 366, 411], "typeid1": 411, "typeid2": 411, "typeid3": 411, "typeidref": 357, "typeidx": 343, "typeless": 272, "typemap": 333, "typenam": [275, 357, 383, 424], "typeprinting": 333, "typesaf": 357, "typeserversiz": 371, "typetestr": 357, "typical": [278, 289, 291, 332, 356, 357, 358, 360, 362, 368, 381, 383, 393, 407, 413, 417], "typically": [277, 278, 287, 289, 291, 292, 299, 301, 304, 309, 312, 314, 324, 331, 332, 336, 338, 339, 340, 342, 348, 350, 351, 356, 357, 359, 361, 362, 364, 376, 381, 382, 383, 384, 393, 394, 396, 407, 409, 413, 414, 417, 434, 442], "typing": [291, 341, 346, 383, 388, 398, 418], "u": [294, 299, 304, 308, 313, 314, 318, 330, 341, 357, 382, 383, 413, 414], "u16": [1, 2, 274, 275], "u16x2": [0, 1, 2], "u32": [0, 1, 2, 271, 274, 275, 289, 367], "u64": [0, 1, 2, 274, 275, 367], "u8": 275, "u8x4": [0, 1, 2], "u999999": 382, "ualph": 404, "ubsan": [359, 391], "ubuntu": [330, 341, 346, 349], "uc": 275, "ud2": [286, 289], "ud2a": 289, "udiv": 343, "ueq": [357, 431, 441], "uf": 387, "uge": 357, "uglify": [428, 438], "ugly": [292, 335, 430, 440], "ugt": 357, "ui": [288, 382], "uid": [299, 357], "uimm20": [124, 125, 216, 217], "uimm21": 216, "uimm32": 32, "uimm8": 32, "uint": [297, 316], "uint16": [336, 375, 396], "uint16_t": [354, 371, 379, 393, 413, 418], "uint16x4_t": 280, "uint32": [336, 396], "uint32_max": [383, 393], "uint32_t": [357, 371, 374, 376, 393, 418, 424], "uint32x2_t": 280, "uint64": [336, 396], "uint64_max": 282, "uint64_t": [282, 353, 357, 366, 379, 383, 418, 424], "uint8": [336, 396], "uint8_t": [359, 374, 418, 424], "uintptr_t": [394, 424], "uitofp": [427, 429, 431, 437, 439, 441], "uiuc": 330, "ule": 357, "uleb128": 334, "ulim": 359, "ulittle32_t": [375, 376], "ulp": 357, "ult": [357, 429, 431, 437, 438, 439, 440, 441], "ultimat": [291, 357, 428, 438], "ultimately": [296, 330, 365, 389, 394], "ultrasparc": [341, 413], "ultrasparc3": 413, "um": 357, "umbrella_directory": 385, "unabbrev": 281, "unabbreviated": 281, "unabl": [290, 313, 337, 357, 358, 368, 383, 394, 403, 436], "unabridged": [431, 441], "unaccept": 330, "unadorned": 357, "unaffected": 365, "unaligned": [278, 337], "unary": [404, 425, 431, 432, 433, 434, 435, 441, 442], "unaryexprast": [430, 431, 432, 433], "unassign": 284, "unassigned": 274, "unassignedbug": 284, "unattended": 285, "unavail": [278, 313, 413], "unawar": [324, 357], "unbiased": 282, "unbound": [313, 413], "unbounded": [289, 313, 357], "uncached": 275, "uncategorized": 323, "uncertain": [291, 326], "unchanged": [357, 383, 385, 398, 410], "unchanging": [277, 357, 383, 423, 424], "unchecked": 383, "unclear": [274, 371, 376, 431, 441], "unclutter": 399, "uncomfort": 290, "uncommon": [288, 332, 357], "uncompress": [287, 341], "uncompressed": 383, "unconditional": [289, 304, 357, 381, 398, 413, 429, 439, 440, 441], "unconditionally": [277, 289, 334, 345, 357, 422, 433], "unconnected": 340, "uncontroversial": 339, "unconventional": [434, 442], "unconvincing": 359, "uncooper": 339, "uncov": 291, "uncovered": 359, "uncovering": 287, "undeclared": [357, 427, 437], "undef": [278, 292, 327, 332, 343, 355, 357, 362, 365, 383, 401], "undefin": 287, "undefined": [274, 275, 278, 280, 284, 287, 291, 292, 314, 316, 327, 332, 334, 335, 337, 340, 352, 360, 365, 381, 383, 391, 401, 403, 404, 405, 410, 412, 413], "undefinedbehaviorsanitiz": 359, "undefinit": 357, "under": [275, 276, 279, 287, 289, 291, 293, 296, 313, 323, 328, 330, 332, 335, 337, 341, 344, 345, 350, 355, 356, 357, 359, 367, 382, 385, 388, 394, 398, 405, 409, 411, 413, 414, 420, 421, 422, 423, 424, 426, 434, 436, 442, 443], "underestimating": 357, "underflow": [274, 275], "undergo": 357, "undergoing": 381, "underlying": [280, 287, 289, 291, 313, 323, 330, 339, 343, 357, 375, 383, 388, 394, 411, 433], "underneath": [341, 384, 409], "underscor": [291, 362, 393], "understand": [277, 281, 284, 289, 290, 291, 296, 330, 332, 333, 339, 340, 348, 356, 363, 364, 366, 374, 379, 382, 383, 390, 394, 395, 398, 399, 402, 403, 404, 405, 414, 416, 417, 418, 422, 425, 427, 431, 433, 435, 441, 442], "understandability": 291, "understanding": [277, 281, 284, 291, 357, 366, 379, 381, 385, 393], "understood": [281, 289, 291, 371, 374, 442], "underway": 388, "undesir": 357, "undetected": 359, "undisturbed": 291, "undocumented": [291, 332, 371], "undoing": 280, "unequal": 357, "unexpect": 366, "unexpected": [286, 288, 291, 330, 342, 383, 431, 441], "unexpectedly": 409, "unflatten": 416, "unfolding": 394, "unforeseen": 343, "unfortunately": [291, 324, 348, 355, 357, 366, 383, 385, 394, 414, 428, 429, 434, 438, 439, 442], "unfriendly": 359, "unfused": 324, "unglamorous": 330, "unguarded": 357, "unhandled": [332, 383], "unhappy": 324, "unhardened": 394, "unhid": 323, "uni": 367, "unic": 323, "unif": 277, "unified": [281, 337, 348, 357, 383, 434, 442], "uniform": [291, 313, 357, 368, 383], "uniformly": [291, 313], "uniformretval": 357, "unimaginatively": 398, "unimplemented": 414, "unimport": [389, 398], "unindexed": 413, "uninitialized": [339, 340, 357, 397, 403], "uninstrumented": 371, "unintended": 381, "unintentional": 330, "uninterested": [425, 435], "unintrus": 357, "union": [277, 289, 291, 313, 357, 371, 393, 431, 441], "uniprocessor": 278, "uniqu": [275, 281, 289, 292, 296, 332, 334, 345, 354, 356, 357, 360, 366, 368, 371, 376, 383, 385, 393, 398, 404, 405, 412, 416, 427, 428, 437], "unique_ptr": [367, 383, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "uniqued": [289, 353, 357, 383, 410, 427, 437], "uniqueid": 376, "uniquely": [292, 354, 385, 396], "uniqueness": [334, 376, 396], "uniqueretval": 357, "uniquing": [294, 357, 383], "unistd": 399, "unit": [27, 116, 207, 275, 280, 286, 287, 291, 293, 304, 308, 323, 326, 327, 328, 332, 334, 335, 340, 357, 358, 359, 368, 371, 379, 381, 383, 393, 394, 401, 403, 412, 413, 414, 428], "unittest": [286, 287, 407], "univers": 383, "universal": [304, 320, 328, 357], "universally": 288, "university": [291, 330, 420, 421, 422, 423, 424], "unix": [287, 291, 292, 299, 323, 335, 338, 341, 342, 357, 383, 399, 409], "unknown": [275, 289, 299, 309, 313, 323, 331, 344, 348, 357, 371, 374, 375, 379, 383, 394, 410, 418, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "unknownptr": 357, "unknownvalu": 357, "unless": [275, 276, 285, 287, 288, 291, 292, 294, 297, 304, 308, 310, 312, 313, 323, 324, 327, 330, 332, 337, 339, 340, 350, 357, 359, 363, 365, 379, 381, 383, 385, 390, 395, 396, 398, 404, 408, 409, 410, 413, 414, 429, 431, 439, 441], "unlik": [278, 281, 288, 289, 291, 324, 332, 339, 341, 344, 351, 357, 365, 383, 394, 396, 398, 404, 414, 428, 431, 438, 441], "unlikely": [278, 291, 330, 346, 381, 394, 398, 422], "unlimited": 313, "unlink": [341, 383], "unload": 414, "unloaded": 357, "unmaintain": 405, "unmaintained": 330, "unmanaged": [357, 398], "unmask": 357, "unmasked": 357, "unmitigated": 394, "unmodeled": 313, "unmodified": [273, 398, 421], "unnamed": [288, 291, 323, 357, 362, 381, 404], "unnamed_addr": [281, 334, 357], "unnecessarily": [277, 414], "unnecessary": [286, 289, 337, 343, 362, 381, 383, 385, 394, 397, 398, 413, 422], "unneeded": [431, 441], "unnormal": 357, "unnormalized": 273, "uno": 357, "unofficial": [340, 386], "unop": [274, 430, 431, 432, 433, 440, 441], "unoptimized": [297, 341], "unordered": [275, 287, 291, 292, 363, 395, 413], "unordered_set": 383, "unorm": [0, 1, 2], "unpack": [341, 349, 388], "unpacking": [326, 419], "unparsed": [296, 426, 436], "unpatched": 350, "unpatching": 415, "unpleas": 394, "unpoisoning": 357, "unpredictability": 357, "unpredicted": 394, "unprofit": [381, 394, 410], "unprotected": [286, 394], "unqualified": [289, 393], "unreach": [310, 327, 328, 332, 336, 337, 339, 366, 381, 428, 429, 430, 431, 433, 438, 439, 440, 441], "unread": [278, 291, 385, 394], "unrecogniz": 314, "unrecognized": [323, 404], "unrecurs": [431, 432, 433, 441], "unreferenced": [288, 357], "unregist": 414, "unregister": 414, "unrelated": [291, 326, 330, 350, 383, 385, 393, 394, 413], "unreli": [277, 359], "unrelocated": 398, "unresolved": [296, 434, 442], "unrespons": 385, "unreviewed": 330, "unroll": [387, 412], "unroll_and_jam": 410, "unrolled": [357, 387, 410], "unrolling": [324, 357, 381], "unrooling": 324, "unsaf": [278, 297, 298, 357, 393, 396, 397, 410, 434, 442], "unsat": 357, "unseen": 281, "unset": [287, 288, 403, 404, 414, 433], "unshadowed": [429, 430, 431, 432, 433, 439, 440, 441], "unsigned": [31, 32, 123, 124, 125, 215, 216, 217, 272, 273, 274, 277, 281, 283, 289, 291, 297, 323, 328, 339, 340, 343, 357, 360, 362, 366, 367, 383, 388, 393, 394, 401, 412, 413, 416, 417, 418, 427, 428, 429, 430, 431, 432, 433, 437], "unsimm": 289, "unsized": 343, "unsound": 398, "unspecified": [289, 305, 343, 357, 367, 398, 408, 417], "unstabl": [286, 346, 357, 389], "unstructured": 417, "unsuit": [286, 407], "unsupported": [278, 289, 296, 342, 359, 388, 389, 409, 413], "unsur": [341, 390, 404], "unswitched": 381, "unswitching": 381, "untested": 389, "until": [275, 280, 281, 285, 289, 291, 293, 296, 313, 314, 323, 326, 327, 330, 332, 337, 341, 353, 357, 359, 361, 365, 381, 382, 383, 385, 389, 390, 394, 401, 403, 407, 409, 413, 414, 415, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "untrusted": 330, "untrusted_data_from_call": 394, "untrusted_offset_from_call": 394, "untrusted_size_from_call": 394, "untyped": 362, "unused": [30, 100, 111, 113, 122, 214, 273, 274, 275, 289, 291, 310, 327, 356, 357, 358, 367, 368, 371, 375, 383, 391, 393, 398, 410, 417], "unused1": 371, "unused2": 371, "unused_pad": [273, 275], "unused_preserv": [273, 275], "unused_sext": 273, "unusual": [289, 291, 338, 339, 383, 392, 403, 434, 442], "unvectoriz": 412, "unveil": [425, 435], "unversioned": 410, "unwelcom": 290, "unwieldy": 415, "unwind": [289, 318, 327, 332, 334, 337, 355, 357, 358, 413, 422], "unwindcursor": 332, "unwinder": 332, "unwinding": [289, 332, 357, 358, 381], "unwindregistersrestor": 332, "unwindregisterssav": 332, "unwis": [299, 357], "unwound": [357, 394], "unwrap": 420, "unwrapping": 383, "unzip": [341, 389], "uop": [309, 313], "up": [276, 277, 280, 281, 282, 284, 287, 289, 290, 291, 293, 296, 298, 313, 323, 324, 325, 326, 327, 328, 330, 332, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 356, 357, 358, 359, 362, 364, 365, 366, 367, 368, 371, 379, 381, 383, 385, 388, 389, 390, 391, 393, 394, 398, 401, 403, 405, 407, 408, 409, 410, 412, 413, 416, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "upcast": 351, "upcoming": 330, "updat": [275, 277, 286, 289, 294, 299, 323, 327, 330, 332, 333, 339, 341, 342, 351, 357, 360, 361, 365, 366, 375, 381, 382, 383, 390, 393, 394, 396, 398, 414, 415, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442], "updated": [275, 277, 280, 292, 326, 327, 330, 341, 350, 351, 357, 360, 365, 382, 385, 388, 394, 398, 410, 414, 420, 421, 422, 431, 441], "updatepoint": [423, 424], "updating": [350, 357, 383, 414, 423, 424], "upen": 279, "upgrad": [330, 341, 385, 387, 419], "upgraded": 393, "upgrading": [302, 341, 385, 412], "upheld": 398, "uphold": [357, 394], "upload": [341, 350, 382, 394], "uploaded": 350, "uploading": 350, "upon": [321, 330, 339, 357, 361, 383, 384, 393, 413], "upper": [270, 273, 274, 291, 293, 357, 383, 413], "upper16": 334, "upsid": [330, 385], "upstream": [326, 330, 331, 337, 341, 350, 385, 398], "upstreamed": 330, "upstreaming": 385, "upward": [296, 357], "uq": 357, "urem": [289, 333], "urgent": 330, "url": [330, 363, 382, 385, 395], "us": [289, 290, 291, 292, 311, 323, 326, 328, 330, 343, 347, 352, 357, 365, 366, 367, 379, 382, 383, 385, 386, 388, 391, 393, 414, 416, 420, 421, 422, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441], "usabl": [289, 297, 323, 383, 393, 413, 416], "usag": [275, 289, 291, 293, 299, 308, 309, 313, 315, 316, 323, 327, 328, 343, 346, 356, 357, 362, 366, 367, 371, 381, 383, 397, 398, 401, 405, 407, 409, 414, 419, 425, 435], "usb": 346, "use": [55, 149, 216, 217, 243, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 308, 309, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 355, 356, 358, 360, 361, 362, 363, 364, 366, 367, 368, 371, 375, 376, 382, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "use_": 383, "use_back": 383, "use_begin": [291, 383], "use_binding": [438, 439, 440, 441], "use_camlp4": [436, 437, 438, 439, 440, 441], "use_counter": 359, "use_empty": 383, "use_end": 383, "use_iterator": 383, "use_llvm": [437, 438, 439, 440, 441], "use_llvm_analys": [437, 438, 439, 440, 441], "use_llvm_executionengin": [438, 439, 440, 441], "use_llvm_scalar_opt": [438, 439, 440, 441], "use_llvm_target": [438, 439, 440, 441], "use_siz": 383, "use_value_profil": 359, "used": [6, 21, 22, 23, 29, 33, 38, 55, 80, 84, 108, 109, 110, 119, 120, 121, 126, 132, 149, 174, 178, 199, 200, 201, 211, 212, 213, 218, 224, 225, 226, 243, 256, 257, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 288, 290, 291, 292, 293, 294, 296, 297, 299, 301, 303, 304, 305, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 324, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 350, 351, 354, 355, 356, 358, 359, 360, 361, 362, 365, 366, 367, 368, 371, 375, 376, 379, 383, 384, 385, 386, 387, 388, 391, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "usedlib": 384, "useful": [275, 276, 278, 281, 283, 285, 287, 289, 291, 292, 293, 296, 297, 301, 302, 303, 309, 313, 317, 321, 323, 324, 327, 328, 331, 332, 335, 337, 339, 341, 342, 343, 345, 347, 348, 356, 357, 363, 365, 367, 368, 371, 381, 382, 384, 388, 393, 394, 395, 396, 398, 401, 403, 405, 409, 413, 414, 419, 425, 426, 427, 428, 429, 430, 431, 433, 435, 436, 437, 438, 439, 440, 441, 443], "useless": [280, 347, 393, 429, 434, 439, 442], "uselistord": 357, "uselistorder_bb": 357, "usenamedoperandt": 413, "user": [276, 277, 278, 282, 285, 287, 288, 289, 290, 291, 293, 296, 299, 301, 309, 313, 322, 323, 325, 326, 327, 328, 330, 332, 334, 339, 341, 342, 343, 345, 347, 348, 350, 357, 358, 360, 364, 365, 366, 379, 380, 382, 385, 387, 388, 391, 393, 394, 395, 397, 398, 401, 403, 405, 409, 410, 412, 413, 414, 417, 420, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443], "user_sgpr": 275, "user_sgpr_count": 275, "userdefinederror": 383, "usernam": [330, 342, 385], "userspac": 332, "usescustominsert": 405, "usesmetadat": 339, "using": [27, 30, 116, 122, 207, 214, 271, 273, 274, 275, 276, 278, 279, 281, 287, 288, 290, 292, 293, 294, 296, 298, 299, 301, 304, 307, 308, 309, 316, 317, 323, 326, 327, 328, 329, 330, 331, 333, 336, 337, 340, 343, 345, 346, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 362, 365, 366, 367, 376, 381, 382, 384, 385, 387, 389, 390, 391, 394, 396, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 416, 418, 419, 420, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 443], "usr": [287, 323, 324, 331, 341, 344, 346, 348, 349, 367], "usual": [278, 285, 287, 291, 323, 341, 344, 357, 359, 360, 366, 383, 385, 392, 397, 403, 404, 414, 420, 433], "usually": [277, 278, 281, 285, 287, 289, 292, 301, 313, 321, 323, 324, 327, 330, 333, 334, 339, 340, 348, 351, 357, 358, 359, 362, 363, 366, 371, 382, 383, 393, 395, 403, 407, 408, 413, 414, 434, 442], "ut": 357, "utf": [275, 334, 401], "util": [276, 331, 347, 350, 383, 389, 401, 405, 407, 413, 431], "utilis": [0, 1, 2, 35, 129, 221, 419], "utilit": [341, 343, 383, 419, 420, 422], "utility": [277, 295, 299, 301, 314, 315, 317, 323, 330, 339, 341, 342, 343, 356, 357, 383, 385, 419, 420, 422, 431, 432], "utiliz": [276, 298, 313, 412, 413], "utilized": [287, 313, 339], "utilizing": 287, "uuid": 308, "uuidcreat": 376, "uv": 357, "uvari": 287, "uwtabl": [281, 357, 393, 415], "uy": 357, "v": [3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 145, 146, 147, 148, 149, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 239, 240, 241, 242, 243, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 275, 276, 277, 278, 280, 285, 289, 291, 292, 294, 296, 299, 308, 312, 314, 331, 342, 343, 344, 351, 357, 359, 366, 383, 385, 391, 394, 395, 398, 399, 401, 403, 407, 409, 413, 426, 427, 428, 429, 430, 431, 432, 433, 440, 441], "v0": [7, 85, 179, 274, 275, 280, 357], "v1": [7, 85, 179, 274, 275, 277, 291, 357, 394, 396, 409, 419], "v10": 324, "v110": 371, "v128": [357, 367], "v15": 357, "v16": 367, "v16f32": 357, "v16p0f32": 357, "v16p1f32": 357, "v1f64": 343, "v1siz": 277, "v2": [274, 277, 291, 357, 371, 383, 385, 386, 409], "v200": 275, "v252": 274, "v253": 274, "v254": 274, "v255": [273, 274], "v2f64": 357, "v2i32": 357, "v2i64": 357, "v2p1f64": 357, "v2siz": 277, "v3": [55, 149, 243, 409], "v31": 357, "v32": 367, "v36": 273, "v3i32": 343, "v4": [273, 275], "v4f32": [343, 357], "v4f64": 357, "v4i32": 357, "v4p0f64": 357, "v4p0f_i32f": 357, "v4p0p0f64": 357, "v4t": 348, "v5": 275, "v50": 371, "v6": [275, 348], "v60": 371, "v64": [357, 367], "v66": 388, "v7": 348, "v70": 371, "v8": [278, 325, 413], "v8deprecatedinst": 413, "v8f64": 357, "v8i16": 413, "v8i32": 357, "v8p0f32": 357, "v8p0f64": 357, "v8p0f_i32f": 357, "v8p0i32": 357, "v8p0p0f32": 357, "v9": [325, 341, 413], "v_add3_u32": 2, "v_add_co_u32": 2, "v_add_co_u32_dpp": 2, "v_add_co_u32_e64": 2, "v_add_co_u32_sdw": 2, "v_add_f16": [1, 2, 274], "v_add_f16_dpp": [1, 2], "v_add_f16_e64": [1, 2], "v_add_f16_sdw": [1, 2], "v_add_f32": [0, 1, 2, 274, 275], "v_add_f32_dpp": [1, 2], "v_add_f32_e32": 275, "v_add_f32_e64": [0, 1, 2], "v_add_f32_sdw": [1, 2], "v_add_f64": [0, 1, 2], "v_add_i16": 2, "v_add_i32": [0, 2], "v_add_i32_e64": 0, "v_add_lshl_u32": 2, "v_add_u16": [1, 2, 274], "v_add_u16_dpp": [1, 2], "v_add_u16_e64": [1, 2], "v_add_u16_sdw": [1, 2], "v_add_u32": [1, 2, 274], "v_add_u32_dpp": [1, 2], "v_add_u32_e64": [1, 2], "v_add_u32_sdw": [1, 2], "v_addc_co_u32": 2, "v_addc_co_u32_dpp": 2, "v_addc_co_u32_e64": 2, "v_addc_co_u32_sdw": 2, "v_addc_u32": [0, 1, 275], "v_addc_u32_dpp": 1, "v_addc_u32_e64": [0, 1], "v_addc_u32_sdw": 1, "v_alignbit_b32": [0, 1, 2], "v_alignbyte_b32": [0, 1, 2], "v_and_b32": [0, 1, 2], "v_and_b32_dpp": [1, 2], "v_and_b32_e64": [0, 1, 2], "v_and_b32_sdw": [1, 2], "v_and_or_b32": 2, "v_ashr_i32": 0, "v_ashr_i32_e64": 0, "v_ashr_i64": 0, "v_ashrrev_i16": [1, 2], "v_ashrrev_i16_dpp": [1, 2], "v_ashrrev_i16_e64": [1, 2], "v_ashrrev_i16_sdw": [1, 2], "v_ashrrev_i32": [0, 1, 2], "v_ashrrev_i32_dpp": [1, 2], "v_ashrrev_i32_e64": [0, 1, 2], "v_ashrrev_i32_sdw": [1, 2], "v_ashrrev_i64": [1, 2], "v_bcnt_u32_b32": [0, 1, 2], "v_bcnt_u32_b32_e64": 0, "v_bfe_i32": [0, 1, 2], "v_bfe_u32": [0, 1, 2], "v_bfi_b32": [0, 1, 2], "v_bfm_b32": [0, 1, 2], "v_bfm_b32_e64": 0, "v_bfrev_b32": [0, 1, 2], "v_bfrev_b32_dpp": [1, 2], "v_bfrev_b32_e32": 275, "v_bfrev_b32_e64": [0, 1, 2], "v_bfrev_b32_sdw": [1, 2], "v_ceil_f16": [1, 2], "v_ceil_f16_dpp": [1, 2], "v_ceil_f16_e64": [1, 2], "v_ceil_f16_sdw": [1, 2], "v_ceil_f32": [0, 1, 2], "v_ceil_f32_dpp": [1, 2], "v_ceil_f32_e64": [0, 1, 2], "v_ceil_f32_sdw": [1, 2], "v_ceil_f64": [0, 1, 2, 274], "v_ceil_f64_e32": 274, "v_ceil_f64_e64": [0, 1, 2], "v_clrexcp": [0, 1, 2], "v_clrexcp_e64": [0, 1, 2], "v_cmp": 273, "v_cmp_class_f16": [1, 2], "v_cmp_class_f16_e64": [1, 2], "v_cmp_class_f16_sdw": [1, 2], "v_cmp_class_f32": [0, 1, 2], "v_cmp_class_f32_e64": [0, 1, 2], "v_cmp_class_f32_sdw": [1, 2], "v_cmp_class_f64": [0, 1, 2], "v_cmp_class_f64_e64": [0, 1, 2], "v_cmp_eq_f16": [1, 2], "v_cmp_eq_f16_e64": [1, 2], "v_cmp_eq_f16_sdw": [1, 2], "v_cmp_eq_f32": [0, 1, 2], "v_cmp_eq_f32_e64": [0, 1, 2], "v_cmp_eq_f32_sdw": [1, 2], "v_cmp_eq_f64": [0, 1, 2], "v_cmp_eq_f64_e64": [0, 1, 2], "v_cmp_eq_i16": [1, 2], "v_cmp_eq_i16_e64": [1, 2], "v_cmp_eq_i16_sdw": [1, 2], "v_cmp_eq_i32": [0, 1, 2], "v_cmp_eq_i32_e64": [0, 1, 2], "v_cmp_eq_i32_sdw": [1, 2], "v_cmp_eq_i64": [0, 1, 2], "v_cmp_eq_i64_e64": [0, 1, 2], "v_cmp_eq_u16": [1, 2], "v_cmp_eq_u16_e64": [1, 2], "v_cmp_eq_u16_sdw": [1, 2], "v_cmp_eq_u32": [0, 1, 2], "v_cmp_eq_u32_e64": [0, 1, 2], "v_cmp_eq_u32_sdw": [1, 2], "v_cmp_eq_u64": [0, 1, 2], "v_cmp_eq_u64_e64": [0, 1, 2], "v_cmp_f_f16": [1, 2], "v_cmp_f_f16_e64": [1, 2], "v_cmp_f_f16_sdwa": [1, 2], "v_cmp_f_f32": [0, 1, 2], "v_cmp_f_f32_e64": [0, 1, 2], "v_cmp_f_f32_sdwa": [1, 2], "v_cmp_f_f64": [0, 1, 2], "v_cmp_f_f64_e64": [0, 1, 2], "v_cmp_f_i16": [1, 2], "v_cmp_f_i16_e64": [1, 2], "v_cmp_f_i16_sdw": [1, 2], "v_cmp_f_i32": [0, 1, 2], "v_cmp_f_i32_e64": [0, 1, 2], "v_cmp_f_i32_sdw": [1, 2], "v_cmp_f_i64": [0, 1, 2], "v_cmp_f_i64_e64": [0, 1, 2], "v_cmp_f_u16": [1, 2], "v_cmp_f_u16_e64": [1, 2], "v_cmp_f_u16_sdw": [1, 2], "v_cmp_f_u32": [0, 1, 2], "v_cmp_f_u32_e64": [0, 1, 2], "v_cmp_f_u32_sdw": [1, 2], "v_cmp_f_u64": [0, 1, 2], "v_cmp_f_u64_e64": [0, 1, 2], "v_cmp_ge_f16": [1, 2], "v_cmp_ge_f16_e64": [1, 2], "v_cmp_ge_f16_sdw": [1, 2], "v_cmp_ge_f32": [0, 1, 2], "v_cmp_ge_f32_e64": [0, 1, 2], "v_cmp_ge_f32_sdw": [1, 2], "v_cmp_ge_f64": [0, 1, 2], "v_cmp_ge_f64_e64": [0, 1, 2], "v_cmp_ge_i16": [1, 2], "v_cmp_ge_i16_e64": [1, 2], "v_cmp_ge_i16_sdw": [1, 2], "v_cmp_ge_i32": [0, 1, 2], "v_cmp_ge_i32_e64": [0, 1, 2], "v_cmp_ge_i32_sdw": [1, 2], "v_cmp_ge_i64": [0, 1, 2], "v_cmp_ge_i64_e64": [0, 1, 2], "v_cmp_ge_u16": [1, 2], "v_cmp_ge_u16_e64": [1, 2], "v_cmp_ge_u16_sdw": [1, 2], "v_cmp_ge_u32": [0, 1, 2], "v_cmp_ge_u32_e64": [0, 1, 2], "v_cmp_ge_u32_sdw": [1, 2], "v_cmp_ge_u64": [0, 1, 2], "v_cmp_ge_u64_e64": [0, 1, 2], "v_cmp_gt_f16": [1, 2], "v_cmp_gt_f16_e64": [1, 2], "v_cmp_gt_f16_sdwa": [1, 2], "v_cmp_gt_f32": [0, 1, 2], "v_cmp_gt_f32_e64": [0, 1, 2], "v_cmp_gt_f32_sdwa": [1, 2], "v_cmp_gt_f64": [0, 1, 2], "v_cmp_gt_f64_e64": [0, 1, 2], "v_cmp_gt_i16": [1, 2], "v_cmp_gt_i16_e64": [1, 2], "v_cmp_gt_i16_sdw": [1, 2], "v_cmp_gt_i32": [0, 1, 2], "v_cmp_gt_i32_e64": [0, 1, 2], "v_cmp_gt_i32_sdw": [1, 2], "v_cmp_gt_i64": [0, 1, 2], "v_cmp_gt_i64_e64": [0, 1, 2], "v_cmp_gt_u16": [1, 2], "v_cmp_gt_u16_e64": [1, 2], "v_cmp_gt_u16_sdw": [1, 2], "v_cmp_gt_u32": [0, 1, 2], "v_cmp_gt_u32_e64": [0, 1, 2], "v_cmp_gt_u32_sdw": [1, 2], "v_cmp_gt_u64": [0, 1, 2], "v_cmp_gt_u64_e64": [0, 1, 2], "v_cmp_le_f16": [1, 2], "v_cmp_le_f16_e64": [1, 2], "v_cmp_le_f16_sdw": [1, 2], "v_cmp_le_f32": [0, 1, 2], "v_cmp_le_f32_e64": [0, 1, 2], "v_cmp_le_f32_sdw": [1, 2], "v_cmp_le_f64": [0, 1, 2], "v_cmp_le_f64_e64": [0, 1, 2], "v_cmp_le_i16": [1, 2], "v_cmp_le_i16_e64": [1, 2], "v_cmp_le_i16_sdw": [1, 2], "v_cmp_le_i32": [0, 1, 2], "v_cmp_le_i32_e64": [0, 1, 2], "v_cmp_le_i32_sdw": [1, 2], "v_cmp_le_i64": [0, 1, 2], "v_cmp_le_i64_e64": [0, 1, 2], "v_cmp_le_u16": [1, 2], "v_cmp_le_u16_e64": [1, 2], "v_cmp_le_u16_sdw": [1, 2], "v_cmp_le_u32": [0, 1, 2], "v_cmp_le_u32_e64": [0, 1, 2], "v_cmp_le_u32_sdw": [1, 2], "v_cmp_le_u64": [0, 1, 2], "v_cmp_le_u64_e64": [0, 1, 2], "v_cmp_lg_f16": [1, 2], "v_cmp_lg_f16_e64": [1, 2], "v_cmp_lg_f16_sdwa": [1, 2], "v_cmp_lg_f32": [0, 1, 2], "v_cmp_lg_f32_e64": [0, 1, 2], "v_cmp_lg_f32_sdwa": [1, 2], "v_cmp_lg_f64": [0, 1, 2], "v_cmp_lg_f64_e64": [0, 1, 2], "v_cmp_lt_f16": [1, 2], "v_cmp_lt_f16_e64": [1, 2], "v_cmp_lt_f16_sdwa": [1, 2], "v_cmp_lt_f32": [0, 1, 2], "v_cmp_lt_f32_e64": [0, 1, 2], "v_cmp_lt_f32_sdwa": [1, 2], "v_cmp_lt_f64": [0, 1, 2], "v_cmp_lt_f64_e64": [0, 1, 2], "v_cmp_lt_i16": [1, 2], "v_cmp_lt_i16_e64": [1, 2], "v_cmp_lt_i16_sdw": [1, 2], "v_cmp_lt_i32": [0, 1, 2], "v_cmp_lt_i32_e64": [0, 1, 2], "v_cmp_lt_i32_sdw": [1, 2], "v_cmp_lt_i64": [0, 1, 2], "v_cmp_lt_i64_e64": [0, 1, 2], "v_cmp_lt_u16": [1, 2], "v_cmp_lt_u16_e64": [1, 2], "v_cmp_lt_u16_sdw": [1, 2], "v_cmp_lt_u32": [0, 1, 2], "v_cmp_lt_u32_e64": [0, 1, 2], "v_cmp_lt_u32_sdw": [1, 2], "v_cmp_lt_u64": [0, 1, 2], "v_cmp_lt_u64_e64": [0, 1, 2], "v_cmp_ne_i16": [1, 2], "v_cmp_ne_i16_e64": [1, 2], "v_cmp_ne_i16_sdw": [1, 2], "v_cmp_ne_i32": [0, 1, 2], "v_cmp_ne_i32_e64": [0, 1, 2], "v_cmp_ne_i32_sdw": [1, 2], "v_cmp_ne_i64": [0, 1, 2], "v_cmp_ne_i64_e64": [0, 1, 2], "v_cmp_ne_u16": [1, 2], "v_cmp_ne_u16_e64": [1, 2], "v_cmp_ne_u16_sdw": [1, 2], "v_cmp_ne_u32": [0, 1, 2], "v_cmp_ne_u32_e64": [0, 1, 2], "v_cmp_ne_u32_sdw": [1, 2], "v_cmp_ne_u64": [0, 1, 2], "v_cmp_ne_u64_e64": [0, 1, 2], "v_cmp_neq_f16": [1, 2], "v_cmp_neq_f16_e64": [1, 2], "v_cmp_neq_f16_sdw": [1, 2], "v_cmp_neq_f32": [0, 1, 2], "v_cmp_neq_f32_e64": [0, 1, 2], "v_cmp_neq_f32_sdw": [1, 2], "v_cmp_neq_f64": [0, 1, 2], "v_cmp_neq_f64_e64": [0, 1, 2], "v_cmp_nge_f16": [1, 2], "v_cmp_nge_f16_e64": [1, 2], "v_cmp_nge_f16_sdw": [1, 2], "v_cmp_nge_f32": [0, 1, 2], "v_cmp_nge_f32_e64": [0, 1, 2], "v_cmp_nge_f32_sdw": [1, 2], "v_cmp_nge_f64": [0, 1, 2], "v_cmp_nge_f64_e64": [0, 1, 2], "v_cmp_ngt_f16": [1, 2], "v_cmp_ngt_f16_e64": [1, 2], "v_cmp_ngt_f16_sdwa": [1, 2], "v_cmp_ngt_f32": [0, 1, 2], "v_cmp_ngt_f32_e64": [0, 1, 2], "v_cmp_ngt_f32_sdwa": [1, 2], "v_cmp_ngt_f64": [0, 1, 2], "v_cmp_ngt_f64_e64": [0, 1, 2], "v_cmp_nle_f16": [1, 2], "v_cmp_nle_f16_e64": [1, 2], "v_cmp_nle_f16_sdw": [1, 2], "v_cmp_nle_f32": [0, 1, 2], "v_cmp_nle_f32_e64": [0, 1, 2], "v_cmp_nle_f32_sdw": [1, 2], "v_cmp_nle_f64": [0, 1, 2], "v_cmp_nle_f64_e64": [0, 1, 2], "v_cmp_nlg_f16": [1, 2], "v_cmp_nlg_f16_e64": [1, 2], "v_cmp_nlg_f16_sdwa": [1, 2], "v_cmp_nlg_f32": [0, 1, 2], "v_cmp_nlg_f32_e64": [0, 1, 2], "v_cmp_nlg_f32_sdwa": [1, 2], "v_cmp_nlg_f64": [0, 1, 2], "v_cmp_nlg_f64_e64": [0, 1, 2], "v_cmp_nlt_f16": [1, 2], "v_cmp_nlt_f16_e64": [1, 2], "v_cmp_nlt_f16_sdwa": [1, 2], "v_cmp_nlt_f32": [0, 1, 2], "v_cmp_nlt_f32_e64": [0, 1, 2], "v_cmp_nlt_f32_sdwa": [1, 2], "v_cmp_nlt_f64": [0, 1, 2], "v_cmp_nlt_f64_e64": [0, 1, 2], "v_cmp_o_f16": [1, 2], "v_cmp_o_f16_e64": [1, 2], "v_cmp_o_f16_sdw": [1, 2], "v_cmp_o_f32": [0, 1, 2], "v_cmp_o_f32_e64": [0, 1, 2], "v_cmp_o_f32_sdw": [1, 2], "v_cmp_o_f64": [0, 1, 2], "v_cmp_o_f64_e64": [0, 1, 2], "v_cmp_t_i16": [1, 2], "v_cmp_t_i16_e64": [1, 2], "v_cmp_t_i16_sdw": [1, 2], "v_cmp_t_i32": [0, 1, 2], "v_cmp_t_i32_e64": [0, 1, 2], "v_cmp_t_i32_sdw": [1, 2], "v_cmp_t_i64": [0, 1, 2], "v_cmp_t_i64_e64": [0, 1, 2], "v_cmp_t_u16": [1, 2], "v_cmp_t_u16_e64": [1, 2], "v_cmp_t_u16_sdw": [1, 2], "v_cmp_t_u32": [0, 1, 2], "v_cmp_t_u32_e64": [0, 1, 2], "v_cmp_t_u32_sdw": [1, 2], "v_cmp_t_u64": [0, 1, 2], "v_cmp_t_u64_e64": [0, 1, 2], "v_cmp_tru_f16": [1, 2], "v_cmp_tru_f16_e64": [1, 2], "v_cmp_tru_f16_sdw": [1, 2], "v_cmp_tru_f32": [0, 1, 2], "v_cmp_tru_f32_e64": [0, 1, 2], "v_cmp_tru_f32_sdw": [1, 2], "v_cmp_tru_f64": [0, 1, 2], "v_cmp_tru_f64_e64": [0, 1, 2], "v_cmp_u_f16": [1, 2], "v_cmp_u_f16_e64": [1, 2], "v_cmp_u_f16_sdw": [1, 2], "v_cmp_u_f32": [0, 1, 2], "v_cmp_u_f32_e64": [0, 1, 2], "v_cmp_u_f32_sdw": [1, 2], "v_cmp_u_f64": [0, 1, 2], "v_cmp_u_f64_e64": [0, 1, 2], "v_cmps_eq_f32": 0, "v_cmps_eq_f32_e64": 0, "v_cmps_eq_f64": 0, "v_cmps_eq_f64_e64": 0, "v_cmps_f_f32": 0, "v_cmps_f_f32_e64": 0, "v_cmps_f_f64": 0, "v_cmps_f_f64_e64": 0, "v_cmps_ge_f32": 0, "v_cmps_ge_f32_e64": 0, "v_cmps_ge_f64": 0, "v_cmps_ge_f64_e64": 0, "v_cmps_gt_f32": 0, "v_cmps_gt_f32_e64": 0, "v_cmps_gt_f64": 0, "v_cmps_gt_f64_e64": 0, "v_cmps_le_f32": 0, "v_cmps_le_f32_e64": 0, "v_cmps_le_f64": 0, "v_cmps_le_f64_e64": 0, "v_cmps_lg_f32": 0, "v_cmps_lg_f32_e64": 0, "v_cmps_lg_f64": 0, "v_cmps_lg_f64_e64": 0, "v_cmps_lt_f32": 0, "v_cmps_lt_f32_e64": 0, "v_cmps_lt_f64": 0, "v_cmps_lt_f64_e64": 0, "v_cmps_neq_f32": 0, "v_cmps_neq_f32_e64": 0, "v_cmps_neq_f64": 0, "v_cmps_neq_f64_e64": 0, "v_cmps_nge_f32": 0, "v_cmps_nge_f32_e64": 0, "v_cmps_nge_f64": 0, "v_cmps_nge_f64_e64": 0, "v_cmps_ngt_f32": 0, "v_cmps_ngt_f32_e64": 0, "v_cmps_ngt_f64": 0, "v_cmps_ngt_f64_e64": 0, "v_cmps_nle_f32": 0, "v_cmps_nle_f32_e64": 0, "v_cmps_nle_f64": 0, "v_cmps_nle_f64_e64": 0, "v_cmps_nlg_f32": 0, "v_cmps_nlg_f32_e64": 0, "v_cmps_nlg_f64": 0, "v_cmps_nlg_f64_e64": 0, "v_cmps_nlt_f32": 0, "v_cmps_nlt_f32_e64": 0, "v_cmps_nlt_f64": 0, "v_cmps_nlt_f64_e64": 0, "v_cmps_o_f32": 0, "v_cmps_o_f32_e64": 0, "v_cmps_o_f64": 0, "v_cmps_o_f64_e64": 0, "v_cmps_tru_f32": 0, "v_cmps_tru_f32_e64": 0, "v_cmps_tru_f64": 0, "v_cmps_tru_f64_e64": 0, "v_cmps_u_f32": 0, "v_cmps_u_f32_e64": 0, "v_cmps_u_f64": 0, "v_cmps_u_f64_e64": 0, "v_cmpsx_eq_f32": 0, "v_cmpsx_eq_f32_e64": 0, "v_cmpsx_eq_f64": 0, "v_cmpsx_eq_f64_e64": 0, "v_cmpsx_f_f32": 0, "v_cmpsx_f_f32_e64": 0, "v_cmpsx_f_f64": 0, "v_cmpsx_f_f64_e64": 0, "v_cmpsx_ge_f32": 0, "v_cmpsx_ge_f32_e64": 0, "v_cmpsx_ge_f64": 0, "v_cmpsx_ge_f64_e64": 0, "v_cmpsx_gt_f32": 0, "v_cmpsx_gt_f32_e64": 0, "v_cmpsx_gt_f64": 0, "v_cmpsx_gt_f64_e64": 0, "v_cmpsx_le_f32": 0, "v_cmpsx_le_f32_e64": 0, "v_cmpsx_le_f64": 0, "v_cmpsx_le_f64_e64": 0, "v_cmpsx_lg_f32": 0, "v_cmpsx_lg_f32_e64": 0, "v_cmpsx_lg_f64": 0, "v_cmpsx_lg_f64_e64": 0, "v_cmpsx_lt_f32": 0, "v_cmpsx_lt_f32_e64": 0, "v_cmpsx_lt_f64": 0, "v_cmpsx_lt_f64_e64": 0, "v_cmpsx_neq_f32": 0, "v_cmpsx_neq_f32_e64": 0, "v_cmpsx_neq_f64": 0, "v_cmpsx_neq_f64_e64": 0, "v_cmpsx_nge_f32": 0, "v_cmpsx_nge_f32_e64": 0, "v_cmpsx_nge_f64": 0, "v_cmpsx_nge_f64_e64": 0, "v_cmpsx_ngt_f32": 0, "v_cmpsx_ngt_f32_e64": 0, "v_cmpsx_ngt_f64": 0, "v_cmpsx_ngt_f64_e64": 0, "v_cmpsx_nle_f32": 0, "v_cmpsx_nle_f32_e64": 0, "v_cmpsx_nle_f64": 0, "v_cmpsx_nle_f64_e64": 0, "v_cmpsx_nlg_f32": 0, "v_cmpsx_nlg_f32_e64": 0, "v_cmpsx_nlg_f64": 0, "v_cmpsx_nlg_f64_e64": 0, "v_cmpsx_nlt_f32": 0, "v_cmpsx_nlt_f32_e64": 0, "v_cmpsx_nlt_f64": 0, "v_cmpsx_nlt_f64_e64": 0, "v_cmpsx_o_f32": 0, "v_cmpsx_o_f32_e64": 0, "v_cmpsx_o_f64": 0, "v_cmpsx_o_f64_e64": 0, "v_cmpsx_tru_f32": 0, "v_cmpsx_tru_f32_e64": 0, "v_cmpsx_tru_f64": 0, "v_cmpsx_tru_f64_e64": 0, "v_cmpsx_u_f32": 0, "v_cmpsx_u_f32_e64": 0, "v_cmpsx_u_f64": 0, "v_cmpsx_u_f64_e64": 0, "v_cmpx_class_f16": [1, 2], "v_cmpx_class_f16_e64": [1, 2], "v_cmpx_class_f16_sdw": [1, 2], "v_cmpx_class_f32": [0, 1, 2], "v_cmpx_class_f32_e64": [0, 1, 2], "v_cmpx_class_f32_sdw": [1, 2], "v_cmpx_class_f64": [0, 1, 2], "v_cmpx_class_f64_e64": [0, 1, 2], "v_cmpx_eq_f16": [1, 2], "v_cmpx_eq_f16_e64": [1, 2], "v_cmpx_eq_f16_sdw": [1, 2], "v_cmpx_eq_f32": [0, 1, 2], "v_cmpx_eq_f32_e64": [0, 1, 2], "v_cmpx_eq_f32_sdw": [1, 2], "v_cmpx_eq_f64": [0, 1, 2], "v_cmpx_eq_f64_e64": [0, 1, 2], "v_cmpx_eq_i16": [1, 2], "v_cmpx_eq_i16_e64": [1, 2], "v_cmpx_eq_i16_sdw": [1, 2], "v_cmpx_eq_i32": [0, 1, 2], "v_cmpx_eq_i32_e64": [0, 1, 2], "v_cmpx_eq_i32_sdw": [1, 2], "v_cmpx_eq_i64": [0, 1, 2], "v_cmpx_eq_i64_e64": [0, 1, 2], "v_cmpx_eq_u16": [1, 2], "v_cmpx_eq_u16_e64": [1, 2], "v_cmpx_eq_u16_sdw": [1, 2], "v_cmpx_eq_u32": [0, 1, 2], "v_cmpx_eq_u32_e64": [0, 1, 2], "v_cmpx_eq_u32_sdw": [1, 2], "v_cmpx_eq_u64": [0, 1, 2], "v_cmpx_eq_u64_e64": [0, 1, 2], "v_cmpx_f_f16": [1, 2], "v_cmpx_f_f16_e64": [1, 2], "v_cmpx_f_f16_sdwa": [1, 2], "v_cmpx_f_f32": [0, 1, 2], "v_cmpx_f_f32_e64": [0, 1, 2], "v_cmpx_f_f32_sdwa": [1, 2], "v_cmpx_f_f64": [0, 1, 2], "v_cmpx_f_f64_e64": [0, 1, 2], "v_cmpx_f_i16": [1, 2], "v_cmpx_f_i16_e64": [1, 2], "v_cmpx_f_i16_sdw": [1, 2], "v_cmpx_f_i32": [0, 1, 2], "v_cmpx_f_i32_e64": [0, 1, 2], "v_cmpx_f_i32_sdw": [1, 2], "v_cmpx_f_i64": [0, 1, 2], "v_cmpx_f_i64_e64": [0, 1, 2], "v_cmpx_f_u16": [1, 2], "v_cmpx_f_u16_e64": [1, 2], "v_cmpx_f_u16_sdw": [1, 2], "v_cmpx_f_u32": [0, 1, 2], "v_cmpx_f_u32_e64": [0, 1, 2], "v_cmpx_f_u32_sdw": [1, 2], "v_cmpx_f_u64": [0, 1, 2], "v_cmpx_f_u64_e64": [0, 1, 2], "v_cmpx_ge_f16": [1, 2], "v_cmpx_ge_f16_e64": [1, 2], "v_cmpx_ge_f16_sdw": [1, 2], "v_cmpx_ge_f32": [0, 1, 2], "v_cmpx_ge_f32_e64": [0, 1, 2], "v_cmpx_ge_f32_sdw": [1, 2], "v_cmpx_ge_f64": [0, 1, 2], "v_cmpx_ge_f64_e64": [0, 1, 2], "v_cmpx_ge_i16": [1, 2], "v_cmpx_ge_i16_e64": [1, 2], "v_cmpx_ge_i16_sdw": [1, 2], "v_cmpx_ge_i32": [0, 1, 2], "v_cmpx_ge_i32_e64": [0, 1, 2], "v_cmpx_ge_i32_sdw": [1, 2], "v_cmpx_ge_i64": [0, 1, 2], "v_cmpx_ge_i64_e64": [0, 1, 2], "v_cmpx_ge_u16": [1, 2], "v_cmpx_ge_u16_e64": [1, 2], "v_cmpx_ge_u16_sdw": [1, 2], "v_cmpx_ge_u32": [0, 1, 2], "v_cmpx_ge_u32_e64": [0, 1, 2], "v_cmpx_ge_u32_sdw": [1, 2], "v_cmpx_ge_u64": [0, 1, 2], "v_cmpx_ge_u64_e64": [0, 1, 2], "v_cmpx_gt_f16": [1, 2], "v_cmpx_gt_f16_e64": [1, 2], "v_cmpx_gt_f16_sdwa": [1, 2], "v_cmpx_gt_f32": [0, 1, 2], "v_cmpx_gt_f32_e64": [0, 1, 2], "v_cmpx_gt_f32_sdwa": [1, 2], "v_cmpx_gt_f64": [0, 1, 2], "v_cmpx_gt_f64_e64": [0, 1, 2], "v_cmpx_gt_i16": [1, 2], "v_cmpx_gt_i16_e64": [1, 2], "v_cmpx_gt_i16_sdw": [1, 2], "v_cmpx_gt_i32": [0, 1, 2], "v_cmpx_gt_i32_e64": [0, 1, 2], "v_cmpx_gt_i32_sdw": [1, 2], "v_cmpx_gt_i64": [0, 1, 2], "v_cmpx_gt_i64_e64": [0, 1, 2], "v_cmpx_gt_u16": [1, 2], "v_cmpx_gt_u16_e64": [1, 2], "v_cmpx_gt_u16_sdw": [1, 2], "v_cmpx_gt_u32": [0, 1, 2], "v_cmpx_gt_u32_e64": [0, 1, 2], "v_cmpx_gt_u32_sdw": [1, 2], "v_cmpx_gt_u64": [0, 1, 2], "v_cmpx_gt_u64_e64": [0, 1, 2], "v_cmpx_le_f16": [1, 2], "v_cmpx_le_f16_e64": [1, 2], "v_cmpx_le_f16_sdw": [1, 2], "v_cmpx_le_f32": [0, 1, 2], "v_cmpx_le_f32_e64": [0, 1, 2], "v_cmpx_le_f32_sdw": [1, 2], "v_cmpx_le_f64": [0, 1, 2], "v_cmpx_le_f64_e64": [0, 1, 2], "v_cmpx_le_i16": [1, 2], "v_cmpx_le_i16_e64": [1, 2], "v_cmpx_le_i16_sdw": [1, 2], "v_cmpx_le_i32": [0, 1, 2], "v_cmpx_le_i32_e64": [0, 1, 2], "v_cmpx_le_i32_sdw": [1, 2], "v_cmpx_le_i64": [0, 1, 2], "v_cmpx_le_i64_e64": [0, 1, 2], "v_cmpx_le_u16": [1, 2], "v_cmpx_le_u16_e64": [1, 2], "v_cmpx_le_u16_sdw": [1, 2], "v_cmpx_le_u32": [0, 1, 2, 275], "v_cmpx_le_u32_e64": [0, 1, 2], "v_cmpx_le_u32_sdw": [1, 2], "v_cmpx_le_u64": [0, 1, 2], "v_cmpx_le_u64_e64": [0, 1, 2], "v_cmpx_lg_f16": [1, 2], "v_cmpx_lg_f16_e64": [1, 2], "v_cmpx_lg_f16_sdwa": [1, 2], "v_cmpx_lg_f32": [0, 1, 2], "v_cmpx_lg_f32_e64": [0, 1, 2], "v_cmpx_lg_f32_sdwa": [1, 2], "v_cmpx_lg_f64": [0, 1, 2], "v_cmpx_lg_f64_e64": [0, 1, 2], "v_cmpx_lt_f16": [1, 2], "v_cmpx_lt_f16_e64": [1, 2], "v_cmpx_lt_f16_sdwa": [1, 2], "v_cmpx_lt_f32": [0, 1, 2], "v_cmpx_lt_f32_e64": [0, 1, 2], "v_cmpx_lt_f32_sdwa": [1, 2], "v_cmpx_lt_f64": [0, 1, 2], "v_cmpx_lt_f64_e64": [0, 1, 2], "v_cmpx_lt_i16": [1, 2], "v_cmpx_lt_i16_e64": [1, 2], "v_cmpx_lt_i16_sdw": [1, 2], "v_cmpx_lt_i32": [0, 1, 2], "v_cmpx_lt_i32_e64": [0, 1, 2], "v_cmpx_lt_i32_sdw": [1, 2], "v_cmpx_lt_i64": [0, 1, 2], "v_cmpx_lt_i64_e64": [0, 1, 2], "v_cmpx_lt_u16": [1, 2], "v_cmpx_lt_u16_e64": [1, 2], "v_cmpx_lt_u16_sdw": [1, 2], "v_cmpx_lt_u32": [0, 1, 2], "v_cmpx_lt_u32_e64": [0, 1, 2], "v_cmpx_lt_u32_sdw": [1, 2], "v_cmpx_lt_u64": [0, 1, 2], "v_cmpx_lt_u64_e64": [0, 1, 2], "v_cmpx_ne_i16": [1, 2], "v_cmpx_ne_i16_e64": [1, 2], "v_cmpx_ne_i16_sdw": [1, 2], "v_cmpx_ne_i32": [0, 1, 2], "v_cmpx_ne_i32_e64": [0, 1, 2], "v_cmpx_ne_i32_sdw": [1, 2], "v_cmpx_ne_i64": [0, 1, 2], "v_cmpx_ne_i64_e64": [0, 1, 2], "v_cmpx_ne_u16": [1, 2], "v_cmpx_ne_u16_e64": [1, 2], "v_cmpx_ne_u16_sdw": [1, 2], "v_cmpx_ne_u32": [0, 1, 2], "v_cmpx_ne_u32_e64": [0, 1, 2], "v_cmpx_ne_u32_sdw": [1, 2], "v_cmpx_ne_u64": [0, 1, 2], "v_cmpx_ne_u64_e64": [0, 1, 2], "v_cmpx_neq_f16": [1, 2], "v_cmpx_neq_f16_e64": [1, 2], "v_cmpx_neq_f16_sdw": [1, 2], "v_cmpx_neq_f32": [0, 1, 2], "v_cmpx_neq_f32_e64": [0, 1, 2], "v_cmpx_neq_f32_sdw": [1, 2], "v_cmpx_neq_f64": [0, 1, 2], "v_cmpx_neq_f64_e64": [0, 1, 2], "v_cmpx_nge_f16": [1, 2], "v_cmpx_nge_f16_e64": [1, 2], "v_cmpx_nge_f16_sdw": [1, 2], "v_cmpx_nge_f32": [0, 1, 2], "v_cmpx_nge_f32_e64": [0, 1, 2], "v_cmpx_nge_f32_sdw": [1, 2], "v_cmpx_nge_f64": [0, 1, 2], "v_cmpx_nge_f64_e64": [0, 1, 2], "v_cmpx_ngt_f16": [1, 2], "v_cmpx_ngt_f16_e64": [1, 2], "v_cmpx_ngt_f16_sdwa": [1, 2], "v_cmpx_ngt_f32": [0, 1, 2], "v_cmpx_ngt_f32_e64": [0, 1, 2], "v_cmpx_ngt_f32_sdwa": [1, 2], "v_cmpx_ngt_f64": [0, 1, 2], "v_cmpx_ngt_f64_e64": [0, 1, 2], "v_cmpx_nle_f16": [1, 2], "v_cmpx_nle_f16_e64": [1, 2], "v_cmpx_nle_f16_sdw": [1, 2], "v_cmpx_nle_f32": [0, 1, 2], "v_cmpx_nle_f32_e64": [0, 1, 2], "v_cmpx_nle_f32_sdw": [1, 2], "v_cmpx_nle_f64": [0, 1, 2], "v_cmpx_nle_f64_e64": [0, 1, 2], "v_cmpx_nlg_f16": [1, 2], "v_cmpx_nlg_f16_e64": [1, 2], "v_cmpx_nlg_f16_sdwa": [1, 2], "v_cmpx_nlg_f32": [0, 1, 2], "v_cmpx_nlg_f32_e64": [0, 1, 2], "v_cmpx_nlg_f32_sdwa": [1, 2], "v_cmpx_nlg_f64": [0, 1, 2], "v_cmpx_nlg_f64_e64": [0, 1, 2], "v_cmpx_nlt_f16": [1, 2], "v_cmpx_nlt_f16_e64": [1, 2], "v_cmpx_nlt_f16_sdwa": [1, 2], "v_cmpx_nlt_f32": [0, 1, 2], "v_cmpx_nlt_f32_e64": [0, 1, 2], "v_cmpx_nlt_f32_sdwa": [1, 2], "v_cmpx_nlt_f64": [0, 1, 2], "v_cmpx_nlt_f64_e64": [0, 1, 2], "v_cmpx_o_f16": [1, 2], "v_cmpx_o_f16_e64": [1, 2], "v_cmpx_o_f16_sdw": [1, 2], "v_cmpx_o_f32": [0, 1, 2], "v_cmpx_o_f32_e64": [0, 1, 2], "v_cmpx_o_f32_sdw": [1, 2], "v_cmpx_o_f64": [0, 1, 2], "v_cmpx_o_f64_e64": [0, 1, 2], "v_cmpx_t_i16": [1, 2], "v_cmpx_t_i16_e64": [1, 2], "v_cmpx_t_i16_sdw": [1, 2], "v_cmpx_t_i32": [0, 1, 2], "v_cmpx_t_i32_e64": [0, 1, 2], "v_cmpx_t_i32_sdw": [1, 2], "v_cmpx_t_i64": [0, 1, 2], "v_cmpx_t_i64_e64": [0, 1, 2], "v_cmpx_t_u16": [1, 2], "v_cmpx_t_u16_e64": [1, 2], "v_cmpx_t_u16_sdw": [1, 2], "v_cmpx_t_u32": [0, 1, 2], "v_cmpx_t_u32_e64": [0, 1, 2], "v_cmpx_t_u32_sdw": [1, 2], "v_cmpx_t_u64": [0, 1, 2], "v_cmpx_t_u64_e64": [0, 1, 2], "v_cmpx_tru_f16": [1, 2], "v_cmpx_tru_f16_e64": [1, 2], "v_cmpx_tru_f16_sdw": [1, 2], "v_cmpx_tru_f32": [0, 1, 2], "v_cmpx_tru_f32_e64": [0, 1, 2], "v_cmpx_tru_f32_sdw": [1, 2], "v_cmpx_tru_f64": [0, 1, 2], "v_cmpx_tru_f64_e64": [0, 1, 2], "v_cmpx_u_f16": [1, 2], "v_cmpx_u_f16_e64": [1, 2], "v_cmpx_u_f16_sdw": [1, 2], "v_cmpx_u_f32": [0, 1, 2], "v_cmpx_u_f32_e64": [0, 1, 2], "v_cmpx_u_f32_sdw": [1, 2], "v_cmpx_u_f64": [0, 1, 2], "v_cmpx_u_f64_e64": [0, 1, 2], "v_cndmask_b32": [0, 1, 2], "v_cndmask_b32_dpp": [1, 2], "v_cndmask_b32_e64": [0, 1, 2], "v_cndmask_b32_sdw": [1, 2], "v_cos_f16": [1, 2], "v_cos_f16_dpp": [1, 2], "v_cos_f16_e64": [1, 2], "v_cos_f16_sdw": [1, 2], "v_cos_f32": [0, 1, 2], "v_cos_f32_dpp": [1, 2], "v_cos_f32_e64": [0, 1, 2], "v_cos_f32_sdw": [1, 2], "v_cubeid_f32": [0, 1, 2], "v_cubema_f32": [0, 1, 2], "v_cubesc_f32": [0, 1, 2], "v_cubetc_f32": [0, 1, 2], "v_cvt_f16_f32": [0, 1, 2, 273], "v_cvt_f16_f32_dpp": [1, 2], "v_cvt_f16_f32_e64": [0, 1, 2], "v_cvt_f16_f32_sdwa": [1, 2], "v_cvt_f16_i16": [1, 2], "v_cvt_f16_i16_dpp": [1, 2], "v_cvt_f16_i16_e64": [1, 2], "v_cvt_f16_i16_sdw": [1, 2], "v_cvt_f16_u16": [1, 2], "v_cvt_f16_u16_dpp": [1, 2], "v_cvt_f16_u16_e64": [1, 2], "v_cvt_f16_u16_sdw": [1, 2], "v_cvt_f32_f16": [0, 1, 2], "v_cvt_f32_f16_dpp": [1, 2], "v_cvt_f32_f16_e64": [0, 1, 2], "v_cvt_f32_f16_sdwa": [1, 2], "v_cvt_f32_f64": [0, 1, 2], "v_cvt_f32_f64_e64": [0, 1, 2], "v_cvt_f32_i32": [0, 1, 2], "v_cvt_f32_i32_dpp": [1, 2], "v_cvt_f32_i32_e64": [0, 1, 2], "v_cvt_f32_i32_sdw": [1, 2], "v_cvt_f32_u32": [0, 1, 2, 272], "v_cvt_f32_u32_dpp": [1, 2], "v_cvt_f32_u32_e64": [0, 1, 2], "v_cvt_f32_u32_sdw": [1, 2], "v_cvt_f32_ubyte0": [0, 1, 2], "v_cvt_f32_ubyte0_dpp": [1, 2], "v_cvt_f32_ubyte0_e64": [0, 1, 2], "v_cvt_f32_ubyte0_sdw": [1, 2], "v_cvt_f32_ubyte1": [0, 1, 2], "v_cvt_f32_ubyte1_dpp": [1, 2], "v_cvt_f32_ubyte1_e64": [0, 1, 2], "v_cvt_f32_ubyte1_sdw": [1, 2], "v_cvt_f32_ubyte2": [0, 1, 2], "v_cvt_f32_ubyte2_dpp": [1, 2], "v_cvt_f32_ubyte2_e64": [0, 1, 2], "v_cvt_f32_ubyte2_sdw": [1, 2], "v_cvt_f32_ubyte3": [0, 1, 2], "v_cvt_f32_ubyte3_dpp": [1, 2], "v_cvt_f32_ubyte3_e64": [0, 1, 2], "v_cvt_f32_ubyte3_sdw": [1, 2], "v_cvt_f64_f32": [0, 1, 2], "v_cvt_f64_f32_e64": [0, 1, 2], "v_cvt_f64_i32": [0, 1, 2], "v_cvt_f64_i32_e32": 275, "v_cvt_f64_i32_e64": [0, 1, 2], "v_cvt_f64_u32": [0, 1, 2], "v_cvt_f64_u32_e64": [0, 1, 2], "v_cvt_flr_i32_f32": [0, 1, 2], "v_cvt_flr_i32_f32_dpp": [1, 2], "v_cvt_flr_i32_f32_e64": [0, 1, 2], "v_cvt_flr_i32_f32_sdw": [1, 2], "v_cvt_i16_f16": [1, 2], "v_cvt_i16_f16_dpp": [1, 2], "v_cvt_i16_f16_e64": [1, 2], "v_cvt_i16_f16_sdw": [1, 2], "v_cvt_i32_f32": [0, 1, 2], "v_cvt_i32_f32_dpp": [1, 2], "v_cvt_i32_f32_e64": [0, 1, 2], "v_cvt_i32_f32_sdw": [1, 2], "v_cvt_i32_f64": [0, 1, 2], "v_cvt_i32_f64_e64": [0, 1, 2], "v_cvt_norm_i16_f16": 2, "v_cvt_norm_i16_f16_dpp": 2, "v_cvt_norm_i16_f16_e64": 2, "v_cvt_norm_i16_f16_sdw": 2, "v_cvt_norm_u16_f16": 2, "v_cvt_norm_u16_f16_dpp": 2, "v_cvt_norm_u16_f16_e64": 2, "v_cvt_norm_u16_f16_sdw": 2, "v_cvt_off_f32_i4": [0, 1, 2], "v_cvt_off_f32_i4_dpp": [1, 2], "v_cvt_off_f32_i4_e64": [0, 1, 2], "v_cvt_off_f32_i4_sdw": [1, 2], "v_cvt_pk_i16_i32": [0, 1, 2], "v_cvt_pk_i16_i32_e64": 0, "v_cvt_pk_u16_u32": [0, 1, 2], "v_cvt_pk_u16_u32_e64": 0, "v_cvt_pk_u8_f32": [0, 1, 2], "v_cvt_pkaccum_u8_f32": [0, 1, 2], "v_cvt_pkaccum_u8_f32_e64": 0, "v_cvt_pknorm_i16_f16": 2, "v_cvt_pknorm_i16_f32": [0, 1, 2], "v_cvt_pknorm_i16_f32_e64": 0, "v_cvt_pknorm_u16_f16": 2, "v_cvt_pknorm_u16_f32": [0, 1, 2], "v_cvt_pknorm_u16_f32_e64": 0, "v_cvt_pkrtz_f16_f32": [0, 1, 2], "v_cvt_pkrtz_f16_f32_e64": 0, "v_cvt_rpi_i32_f32": [0, 1, 2], "v_cvt_rpi_i32_f32_dpp": [1, 2], "v_cvt_rpi_i32_f32_e64": [0, 1, 2], "v_cvt_rpi_i32_f32_sdw": [1, 2], "v_cvt_u16_f16": [1, 2], "v_cvt_u16_f16_dpp": [1, 2], "v_cvt_u16_f16_e64": [1, 2], "v_cvt_u16_f16_sdw": [1, 2], "v_cvt_u32_f32": [0, 1, 2], "v_cvt_u32_f32_dpp": [1, 2], "v_cvt_u32_f32_e64": [0, 1, 2], "v_cvt_u32_f32_sdw": [1, 2], "v_cvt_u32_f64": [0, 1, 2], "v_cvt_u32_f64_e64": [0, 1, 2], "v_div_fixup_f16": [1, 2], "v_div_fixup_f32": [0, 1, 2], "v_div_fixup_f64": [0, 1, 2], "v_div_fixup_legacy_f16": 2, "v_div_fmas_f32": [0, 1, 2], "v_div_fmas_f64": [0, 1, 2], "v_div_scale_f32": [0, 1, 2], "v_div_scale_f64": [0, 1, 2], "v_exp_f16": [1, 2], "v_exp_f16_dpp": [1, 2], "v_exp_f16_e64": [1, 2], "v_exp_f16_sdw": [1, 2], "v_exp_f32": [0, 1, 2], "v_exp_f32_dpp": [1, 2], "v_exp_f32_e64": [0, 1, 2], "v_exp_f32_sdw": [1, 2], "v_exp_legacy_f32": [0, 1, 2], "v_exp_legacy_f32_dpp": [1, 2], "v_exp_legacy_f32_e64": [0, 1, 2], "v_exp_legacy_f32_sdw": [1, 2], "v_ffbh_i32": [0, 1, 2], "v_ffbh_i32_dpp": [1, 2], "v_ffbh_i32_e64": [0, 1, 2], "v_ffbh_i32_sdw": [1, 2], "v_ffbh_u32": [0, 1, 2], "v_ffbh_u32_dpp": [1, 2], "v_ffbh_u32_e64": [0, 1, 2], "v_ffbh_u32_sdw": [1, 2], "v_ffbl_b32": [0, 1, 2], "v_ffbl_b32_dpp": [1, 2], "v_ffbl_b32_e64": [0, 1, 2], "v_ffbl_b32_sdwa": [1, 2], "v_floor_f16": [1, 2], "v_floor_f16_dpp": [1, 2], "v_floor_f16_e64": [1, 2], "v_floor_f16_sdw": [1, 2], "v_floor_f32": [0, 1, 2], "v_floor_f32_dpp": [1, 2], "v_floor_f32_e32": 275, "v_floor_f32_e64": [0, 1, 2], "v_floor_f32_sdw": [1, 2], "v_floor_f64": [0, 1, 2], "v_floor_f64_e64": [0, 1, 2], "v_fma_f16": [1, 2], "v_fma_f32": [0, 1, 2], "v_fma_f64": [0, 1, 2], "v_fma_legacy_f16": 2, "v_fract_f16": [1, 2], "v_fract_f16_dpp": [1, 2], "v_fract_f16_e64": [1, 2], "v_fract_f16_sdw": [1, 2], "v_fract_f32": [0, 1, 2, 275], "v_fract_f32_dpp": [1, 2], "v_fract_f32_e64": [0, 1, 2], "v_fract_f32_sdw": [1, 2], "v_fract_f64": [0, 1, 2], "v_fract_f64_e64": [0, 1, 2], "v_frexp_exp_i16_f16": [1, 2], "v_frexp_exp_i16_f16_dpp": [1, 2], "v_frexp_exp_i16_f16_e64": [1, 2], "v_frexp_exp_i16_f16_sdw": [1, 2], "v_frexp_exp_i32_f32": [0, 1, 2], "v_frexp_exp_i32_f32_dpp": [1, 2], "v_frexp_exp_i32_f32_e64": [0, 1, 2], "v_frexp_exp_i32_f32_sdw": [1, 2], "v_frexp_exp_i32_f64": [0, 1, 2], "v_frexp_exp_i32_f64_e64": [0, 1, 2], "v_frexp_mant_f16": [1, 2], "v_frexp_mant_f16_dpp": [1, 2], "v_frexp_mant_f16_e64": [1, 2], "v_frexp_mant_f16_sdw": [1, 2], "v_frexp_mant_f32": [0, 1, 2], "v_frexp_mant_f32_dpp": [1, 2], "v_frexp_mant_f32_e64": [0, 1, 2], "v_frexp_mant_f32_sdw": [1, 2], "v_frexp_mant_f64": [0, 1, 2], "v_frexp_mant_f64_e64": [0, 1, 2], "v_interp_mov_f32": [0, 1, 2], "v_interp_mov_f32_e64": [1, 2], "v_interp_p1_f32": [0, 1, 2, 7, 85, 179], "v_interp_p1_f32_e64": [1, 2], "v_interp_p1ll_f16": [1, 2], "v_interp_p1lv_f16": [1, 2], "v_interp_p2_f16": [1, 2], "v_interp_p2_f32": [0, 1, 2], "v_interp_p2_f32_e64": [1, 2], "v_interp_p2_legacy_f16": 2, "v_ldexp_f16": [1, 2], "v_ldexp_f16_dpp": [1, 2], "v_ldexp_f16_e64": [1, 2], "v_ldexp_f16_sdw": [1, 2], "v_ldexp_f32": [0, 1, 2], "v_ldexp_f32_e64": 0, "v_ldexp_f64": [0, 1, 2], "v_lerp_u8": [0, 1, 2], "v_log_clamp_f32": 0, "v_log_clamp_f32_e64": 0, "v_log_f16": [1, 2], "v_log_f16_dpp": [1, 2], "v_log_f16_e64": [1, 2], "v_log_f16_sdw": [1, 2], "v_log_f32": [0, 1, 2], "v_log_f32_dpp": [1, 2], "v_log_f32_e64": [0, 1, 2], "v_log_f32_sdw": [1, 2], "v_log_legacy_f32": [0, 1, 2], "v_log_legacy_f32_dpp": [1, 2], "v_log_legacy_f32_e64": [0, 1, 2], "v_log_legacy_f32_sdw": [1, 2], "v_lshl_add_u32": 2, "v_lshl_b32": 0, "v_lshl_b32_e64": 0, "v_lshl_b64": 0, "v_lshl_or_b32": 2, "v_lshlrev_b16": [1, 2], "v_lshlrev_b16_dpp": [1, 2], "v_lshlrev_b16_e64": [1, 2], "v_lshlrev_b16_sdw": [1, 2], "v_lshlrev_b32": [0, 1, 2], "v_lshlrev_b32_dpp": [1, 2], "v_lshlrev_b32_e64": [0, 1, 2], "v_lshlrev_b32_sdw": [1, 2], "v_lshlrev_b64": [1, 2], "v_lshr_b32": 0, "v_lshr_b32_e64": 0, "v_lshr_b64": 0, "v_lshrrev_b16": [1, 2], "v_lshrrev_b16_dpp": [1, 2], "v_lshrrev_b16_e64": [1, 2], "v_lshrrev_b16_sdw": [1, 2], "v_lshrrev_b32": [0, 1, 2], "v_lshrrev_b32_dpp": [1, 2], "v_lshrrev_b32_e64": [0, 1, 2], "v_lshrrev_b32_sdw": [1, 2], "v_lshrrev_b64": [1, 2], "v_mac_f16": [1, 2], "v_mac_f16_dpp": [1, 2], "v_mac_f16_e64": [1, 2], "v_mac_f16_sdw": 1, "v_mac_f32": [0, 1, 2], "v_mac_f32_dpp": [1, 2], "v_mac_f32_e64": [0, 1, 2], "v_mac_f32_sdw": 1, "v_mac_legacy_f32": 0, "v_mac_legacy_f32_e64": 0, "v_mad_f16": [1, 2], "v_mad_f32": [0, 1, 2], "v_mad_i16": [1, 2], "v_mad_i32_i16": 2, "v_mad_i32_i24": [0, 1, 2], "v_mad_i64_i32": [0, 1, 2], "v_mad_legacy_f16": 2, "v_mad_legacy_f32": [0, 1, 2], "v_mad_legacy_i16": 2, "v_mad_legacy_u16": 2, "v_mad_mix_f32": [2, 273], "v_mad_mixhi_f16": [2, 273], "v_mad_mixlo_f16": [2, 273], "v_mad_u16": [1, 2], "v_mad_u32_u16": 2, "v_mad_u32_u24": [0, 1, 2], "v_mad_u64_u32": [0, 1, 2], "v_madak_f16": [1, 2], "v_madak_f32": [0, 1, 2], "v_madmk_f16": [1, 2], "v_madmk_f32": [0, 1, 2], "v_max3_f16": 2, "v_max3_f32": [0, 1, 2, 272], "v_max3_i16": [2, 272], "v_max3_i32": [0, 1, 2], "v_max3_u16": 2, "v_max3_u32": [0, 1, 2], "v_max_f16": [1, 2, 275], "v_max_f16_dpp": [1, 2], "v_max_f16_e32": 275, "v_max_f16_e64": [1, 2], "v_max_f16_sdw": [1, 2], "v_max_f32": [0, 1, 2], "v_max_f32_dpp": [1, 2], "v_max_f32_e64": [0, 1, 2], "v_max_f32_sdw": [1, 2], "v_max_f64": [0, 1, 2], "v_max_i16": [1, 2], "v_max_i16_dpp": [1, 2], "v_max_i16_e64": [1, 2], "v_max_i16_sdw": [1, 2], "v_max_i32": [0, 1, 2], "v_max_i32_dpp": [1, 2], "v_max_i32_e64": [0, 1, 2], "v_max_i32_sdw": [1, 2], "v_max_legacy_f32": 0, "v_max_legacy_f32_e64": 0, "v_max_u16": [1, 2], "v_max_u16_dpp": [1, 2], "v_max_u16_e64": [1, 2], "v_max_u16_sdw": [1, 2], "v_max_u32": [0, 1, 2], "v_max_u32_dpp": [1, 2], "v_max_u32_e64": [0, 1, 2], "v_max_u32_sdw": [1, 2], "v_mbcnt_hi_u32_b32": [0, 1, 2], "v_mbcnt_hi_u32_b32_e64": 0, "v_mbcnt_lo_u32_b32": [0, 1, 2], "v_mbcnt_lo_u32_b32_e64": 0, "v_med3_f16": 2, "v_med3_f32": [0, 1, 2], "v_med3_i16": 2, "v_med3_i32": [0, 1, 2], "v_med3_u16": 2, "v_med3_u32": [0, 1, 2], "v_min3_f16": 2, "v_min3_f32": [0, 1, 2], "v_min3_i16": 2, "v_min3_i32": [0, 1, 2], "v_min3_u16": 2, "v_min3_u32": [0, 1, 2], "v_min_f16": [1, 2], "v_min_f16_dpp": [1, 2], "v_min_f16_e64": [1, 2], "v_min_f16_sdw": [1, 2], "v_min_f32": [0, 1, 2], "v_min_f32_dpp": [1, 2], "v_min_f32_e64": [0, 1, 2], "v_min_f32_sdw": [1, 2], "v_min_f64": [0, 1, 2], "v_min_i16": [1, 2], "v_min_i16_dpp": [1, 2], "v_min_i16_e64": [1, 2], "v_min_i16_sdw": [1, 2], "v_min_i32": [0, 1, 2], "v_min_i32_dpp": [1, 2], "v_min_i32_e64": [0, 1, 2], "v_min_i32_sdw": [1, 2], "v_min_legacy_f32": 0, "v_min_legacy_f32_e64": 0, "v_min_u16": [1, 2], "v_min_u16_dpp": [1, 2], "v_min_u16_e64": [1, 2], "v_min_u16_sdw": [1, 2], "v_min_u32": [0, 1, 2, 275], "v_min_u32_dpp": [1, 2], "v_min_u32_e64": [0, 1, 2], "v_min_u32_sdw": [1, 2], "v_mov_b32": [0, 1, 2, 275], "v_mov_b32_dpp": [1, 2], "v_mov_b32_e32": 275, "v_mov_b32_e64": [0, 1, 2], "v_mov_b32_sdw": [1, 2], "v_mov_fed_b32": [0, 1, 2], "v_mov_fed_b32_dpp": [1, 2], "v_mov_fed_b32_e64": [0, 1, 2], "v_mov_fed_b32_sdw": [1, 2], "v_movreld_b32": [0, 1], "v_movreld_b32_e64": [0, 1], "v_movrels_b32": [0, 1], "v_movrels_b32_e64": [0, 1], "v_movrelsd_b32": [0, 1], "v_movrelsd_b32_e64": [0, 1], "v_mqsad_pk_u16_u8": [0, 1, 2], "v_mqsad_u32_u8": [0, 1, 2], "v_msad_u8": [0, 1, 2], "v_mul_f16": [1, 2], "v_mul_f16_dpp": [1, 2], "v_mul_f16_e64": [1, 2], "v_mul_f16_sdw": [1, 2], "v_mul_f32": [0, 1, 2], "v_mul_f32_dpp": [1, 2], "v_mul_f32_e64": [0, 1, 2], "v_mul_f32_sdw": [1, 2], "v_mul_f64": [0, 1, 2], "v_mul_hi_i32": [0, 1, 2], "v_mul_hi_i32_i24": [0, 1, 2], "v_mul_hi_i32_i24_dpp": [1, 2], "v_mul_hi_i32_i24_e64": [0, 1, 2], "v_mul_hi_i32_i24_sdw": [1, 2], "v_mul_hi_u32": [0, 1, 2], "v_mul_hi_u32_u24": [0, 1, 2], "v_mul_hi_u32_u24_dpp": [1, 2], "v_mul_hi_u32_u24_e64": [0, 1, 2], "v_mul_hi_u32_u24_sdw": [1, 2], "v_mul_i32_i24": [0, 1, 2], "v_mul_i32_i24_dpp": [1, 2], "v_mul_i32_i24_e32": 275, "v_mul_i32_i24_e64": [0, 1, 2, 275], "v_mul_i32_i24_sdw": [1, 2], "v_mul_legacy_f32": [0, 1, 2], "v_mul_legacy_f32_dpp": [1, 2], "v_mul_legacy_f32_e64": [0, 1, 2], "v_mul_legacy_f32_sdw": [1, 2], "v_mul_lo_i32": 0, "v_mul_lo_u16": [1, 2], "v_mul_lo_u16_dpp": [1, 2], "v_mul_lo_u16_e64": [1, 2], "v_mul_lo_u16_sdw": [1, 2], "v_mul_lo_u32": [0, 1, 2], "v_mul_u32_u24": [0, 1, 2], "v_mul_u32_u24_dpp": [1, 2], "v_mul_u32_u24_e64": [0, 1, 2], "v_mul_u32_u24_sdw": [1, 2], "v_mullit_f32": 0, "v_nop": [0, 1, 2, 275], "v_nop_e64": [0, 1, 2], "v_not_b32": [0, 1, 2], "v_not_b32_dpp": [1, 2], "v_not_b32_e64": [0, 1, 2], "v_not_b32_sdw": [1, 2], "v_or3_b32": 2, "v_or_b32": [0, 1, 2], "v_or_b32_dpp": [1, 2], "v_or_b32_e64": [0, 1, 2], "v_or_b32_sdw": [1, 2], "v_pack_b32_f16": 2, "v_perm_b32": [1, 2], "v_pk_add_f16": [2, 272], "v_pk_add_i16": [2, 272], "v_pk_add_u16": [2, 272], "v_pk_ashrrev_i16": 2, "v_pk_fma_f16": 2, "v_pk_lshlrev_b16": 2, "v_pk_lshrrev_b16": 2, "v_pk_mad_i16": 2, "v_pk_mad_u16": 2, "v_pk_max_f16": 2, "v_pk_max_i16": 2, "v_pk_max_u16": 2, "v_pk_min_f16": 2, "v_pk_min_i16": 2, "v_pk_min_u16": 2, "v_pk_mul_f16": 2, "v_pk_mul_lo_u16": 2, "v_pk_sub_i16": 2, "v_pk_sub_u16": 2, "v_qsad_pk_u16_u8": [0, 1, 2], "v_rcp_clamp_f32": 0, "v_rcp_clamp_f32_e64": 0, "v_rcp_clamp_f64": 0, "v_rcp_clamp_f64_e64": 0, "v_rcp_f16": [1, 2], "v_rcp_f16_dpp": [1, 2], "v_rcp_f16_e64": [1, 2], "v_rcp_f16_sdwa": [1, 2], "v_rcp_f32": [0, 1, 2], "v_rcp_f32_dpp": [1, 2], "v_rcp_f32_e64": [0, 1, 2], "v_rcp_f32_sdwa": [1, 2], "v_rcp_f64": [0, 1, 2], "v_rcp_f64_e64": [0, 1, 2], "v_rcp_iflag_f32": [0, 1, 2], "v_rcp_iflag_f32_dpp": [1, 2], "v_rcp_iflag_f32_e64": [0, 1, 2], "v_rcp_iflag_f32_sdw": [1, 2], "v_rcp_legacy_f32": 0, "v_rcp_legacy_f32_e64": 0, "v_readfirstlane_b32": [0, 1, 2], "v_readlane_b32": [0, 1, 2], "v_reg": 289, "v_rndne_f16": [1, 2], "v_rndne_f16_dpp": [1, 2], "v_rndne_f16_e64": [1, 2], "v_rndne_f16_sdw": [1, 2], "v_rndne_f32": [0, 1, 2], "v_rndne_f32_dpp": [1, 2], "v_rndne_f32_e64": [0, 1, 2], "v_rndne_f32_sdw": [1, 2], "v_rndne_f64": [0, 1, 2], "v_rndne_f64_e64": [0, 1, 2], "v_rsq_clamp_f32": 0, "v_rsq_clamp_f32_e64": 0, "v_rsq_clamp_f64": 0, "v_rsq_clamp_f64_e64": 0, "v_rsq_f16": [1, 2], "v_rsq_f16_dpp": [1, 2], "v_rsq_f16_e64": [1, 2], "v_rsq_f16_sdwa": [1, 2], "v_rsq_f32": [0, 1, 2], "v_rsq_f32_dpp": [1, 2], "v_rsq_f32_e64": [0, 1, 2], "v_rsq_f32_sdwa": [1, 2], "v_rsq_f64": [0, 1, 2], "v_rsq_f64_e64": [0, 1, 2], "v_rsq_legacy_f32": 0, "v_rsq_legacy_f32_e64": 0, "v_sad_hi_u8": [0, 1, 2], "v_sad_u16": [0, 1, 2], "v_sad_u32": [0, 1, 2], "v_sad_u8": [0, 1, 2], "v_sat_pk_u8_i16": 2, "v_sat_pk_u8_i16_dpp": 2, "v_sat_pk_u8_i16_e64": 2, "v_sat_pk_u8_i16_sdw": 2, "v_screen_partition_4se_b32": 2, "v_screen_partition_4se_b32_dpp": 2, "v_screen_partition_4se_b32_e64": 2, "v_screen_partition_4se_b32_sdw": 2, "v_sin_f16": [1, 2], "v_sin_f16_dpp": [1, 2], "v_sin_f16_e64": [1, 2], "v_sin_f16_sdw": [1, 2], "v_sin_f32": [0, 1, 2, 275], "v_sin_f32_dpp": [1, 2], "v_sin_f32_e64": [0, 1, 2], "v_sin_f32_sdw": [1, 2], "v_sqrt_f16": [1, 2], "v_sqrt_f16_dpp": [1, 2], "v_sqrt_f16_e64": [1, 2], "v_sqrt_f16_sdwa": [1, 2], "v_sqrt_f32": [0, 1, 2, 274], "v_sqrt_f32_dpp": [1, 2], "v_sqrt_f32_e64": [0, 1, 2], "v_sqrt_f32_sdwa": [1, 2], "v_sqrt_f64": [0, 1, 2], "v_sqrt_f64_e64": [0, 1, 2], "v_sub_co_u32": 2, "v_sub_co_u32_dpp": 2, "v_sub_co_u32_e64": 2, "v_sub_co_u32_sdw": 2, "v_sub_f16": [1, 2], "v_sub_f16_dpp": [1, 2], "v_sub_f16_e64": [1, 2], "v_sub_f16_sdw": [1, 2], "v_sub_f32": [0, 1, 2], "v_sub_f32_dpp": [1, 2], "v_sub_f32_e64": [0, 1, 2], "v_sub_f32_sdw": [1, 2], "v_sub_i16": 2, "v_sub_i32": [0, 2], "v_sub_i32_e64": 0, "v_sub_u16": [1, 2], "v_sub_u16_dpp": [1, 2], "v_sub_u16_e64": [1, 2], "v_sub_u16_sdw": [1, 2], "v_sub_u32": [1, 2], "v_sub_u32_dpp": [1, 2], "v_sub_u32_e64": [1, 2], "v_sub_u32_sdw": [1, 2], "v_subb_co_u32": 2, "v_subb_co_u32_dpp": 2, "v_subb_co_u32_e64": 2, "v_subb_co_u32_sdw": 2, "v_subb_u32": [0, 1], "v_subb_u32_dpp": 1, "v_subb_u32_e64": [0, 1], "v_subb_u32_sdw": 1, "v_subbrev_co_u32": 2, "v_subbrev_co_u32_dpp": 2, "v_subbrev_co_u32_e64": 2, "v_subbrev_co_u32_sdw": 2, "v_subbrev_u32": [0, 1], "v_subbrev_u32_dpp": 1, "v_subbrev_u32_e64": [0, 1], "v_subbrev_u32_sdw": 1, "v_subrev_co_u32": 2, "v_subrev_co_u32_dpp": 2, "v_subrev_co_u32_e64": 2, "v_subrev_co_u32_sdw": 2, "v_subrev_f16": [1, 2], "v_subrev_f16_dpp": [1, 2], "v_subrev_f16_e64": [1, 2], "v_subrev_f16_sdw": [1, 2], "v_subrev_f32": [0, 1, 2], "v_subrev_f32_dpp": [1, 2], "v_subrev_f32_e64": [0, 1, 2], "v_subrev_f32_sdw": [1, 2], "v_subrev_i32": 0, "v_subrev_i32_e64": 0, "v_subrev_u16": [1, 2], "v_subrev_u16_dpp": [1, 2], "v_subrev_u16_e64": [1, 2], "v_subrev_u16_sdw": [1, 2], "v_subrev_u32": [1, 2], "v_subrev_u32_dpp": [1, 2], "v_subrev_u32_e64": [1, 2], "v_subrev_u32_sdw": [1, 2], "v_swap_b32": 2, "v_trig_preop_f64": [0, 1, 2], "v_trunc_f16": [1, 2], "v_trunc_f16_dpp": [1, 2], "v_trunc_f16_e64": [1, 2], "v_trunc_f16_sdw": [1, 2], "v_trunc_f32": [0, 1, 2], "v_trunc_f32_dpp": [1, 2], "v_trunc_f32_e64": [0, 1, 2], "v_trunc_f32_sdw": [1, 2], "v_trunc_f64": [0, 1, 2], "v_trunc_f64_e64": [0, 1, 2], "v_writelane_b32": [0, 1, 2], "v_xad_u32": 2, "v_xor_b32": [0, 1, 2], "v_xor_b32_dpp": [1, 2], "v_xor_b32_e64": [0, 1, 2], "v_xor_b32_sdw": [1, 2], "va_list": 357, "vacat": 390, "vaddr": [0, 1, 2, 224, 225], "vadv": 408, "vagu": [27, 330], "val": [278, 281, 291, 323, 327, 353, 357, 367, 383, 396, 403, 413, 424, 426, 427, 428, 429, 430, 431, 432, 433], "val0": [327, 357], "val1": [327, 357, 359], "val1l": 357, "val2": [327, 357, 359], "val29": 327, "val3": 357, "val7": 357, "val_": 441, "val_success": 357, "valb": 367, "valc": 367, "valgrind": [293, 296, 352, 409], "valid": [273, 274, 275, 281, 282, 287, 289, 291, 292, 297, 298, 303, 316, 323, 330, 332, 335, 338, 340, 341, 350, 357, 358, 359, 361, 366, 367, 375, 381, 383, 385, 393, 394, 396, 397, 398, 404, 411, 414, 416, 417, 426, 428, 436], "validat": [275, 286, 309, 330, 350, 394, 409, 418, 419, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "validated": [350, 359, 427, 437], "validating": 323, "validator": 359, "validity": 343, "valu": [10, 11, 12, 13, 14, 15, 16, 26, 28, 47, 67, 80, 88, 89, 90, 91, 92, 97, 98, 100, 111, 113, 115, 117, 118, 128, 144, 161, 174, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 202, 204, 206, 208, 209, 220, 238, 255, 270, 273, 274, 277, 278, 280, 281, 283, 287, 288, 289, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 309, 310, 312, 313, 314, 315, 316, 317, 321, 322, 327, 328, 329, 330, 331, 332, 333, 334, 337, 339, 341, 342, 343, 348, 351, 353, 354, 355, 356, 358, 365, 367, 371, 374, 375, 376, 379, 384, 387, 388, 391, 392, 394, 396, 398, 401, 405, 408, 409, 412, 413, 414, 415, 417, 419, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "valuabl": [296, 326, 330, 408], "value2": 394, "value_1": 356, "value_2": 356, "value_alignment": 357, "value_desc": 323, "value_kind": [275, 357], "value_loaded": 357, "value_n": 356, "value_typ": [275, 418], "valuecol": 354, "valued": [323, 357], "valuedisallowed": 323, "valueenumerator": 333, "valuekind": [275, 291], "valuelist": 404, "valuelistn": 404, "valueoptional": 323, "valuerequired": 323, "valuesuffix": 404, "valuet": 383, "valuetracking": 398, "valuetyp": [275, 289, 333, 405, 413], "vanill": 324, "var": [275, 278, 288, 292, 366, 393, 401, 403, 431, 432, 433, 441], "var1": 288, "var_arg_function_typ": 437, "var_nam": [288, 439, 440, 441], "varang": 275, "vararg": [281, 288, 289, 357, 383, 427, 437], "varb": 401, "varexpr": [431, 432, 433, 441], "varexprast": [431, 432, 433], "vari": [272, 278, 292, 313, 323, 332, 334, 343, 356, 357, 375, 381, 383, 394, 396, 399, 404, 409, 413, 414, 435, 436, 437, 438, 439, 440, 441], "variability": 279, "variabl": [275, 276, 277, 278, 296, 299, 301, 304, 310, 316, 323, 328, 332, 335, 337, 339, 340, 341, 342, 344, 352, 358, 361, 362, 365, 366, 367, 368, 371, 374, 375, 383, 388, 391, 394, 396, 397, 398, 401, 403, 404, 407, 408, 409, 411, 413, 414, 415, 416, 418, 419, 420, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443], "variable_nam": 287, "variable_op": 403, "variableexprast": [426, 427, 428, 429, 430, 431, 432, 433], "variadic": [291, 383], "variat": [277, 279, 289, 296, 332, 359, 395, 399, 412, 413, 420], "varied": [290, 359], "variet": 339, "variety": [277, 278, 281, 288, 289, 299, 325, 330, 332, 339, 341, 346, 356, 358, 359, 383, 388, 393, 396, 401, 404, 427, 428, 429, 430, 434, 437, 438, 439, 440, 442], "various": [274, 277, 278, 281, 285, 287, 289, 291, 293, 296, 311, 313, 316, 321, 325, 326, 328, 332, 337, 338, 341, 343, 354, 356, 357, 360, 361, 362, 365, 367, 371, 379, 382, 383, 385, 388, 391, 393, 394, 401, 405, 408, 409, 413, 414, 415, 416, 418, 425, 426, 428, 429, 433, 435, 436, 438, 439], "varnam": [429, 430, 431, 432, 433, 439, 441], "vary": [6, 84, 178, 281, 285, 289, 335, 341, 357, 375, 383, 399, 434, 442], "varying": [289, 343, 383], "vasileios": 387, "vbr": [299, 301], "vbr4": 281, "vbr5": 281, "vbr6": 281, "vbr8": 281, "vc": 359, "vc110": 376, "vc140": 376, "vc2": 376, "vc4": 376, "vc41": [371, 376], "vc50": 376, "vc70": 376, "vc70dep": 376, "vc80": 376, "vc98": 376, "vcall": 286, "vcblog": 394, "vcc": [0, 1, 2, 8, 31, 32, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 86, 123, 124, 134, 135, 138, 139, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 180, 182, 193, 194, 215, 216, 217, 224, 225, 228, 229, 232, 233, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 275], "vcc_hi": 274, "vcc_lo": 274, "vcsrevis": 287, "vdat": [0, 1, 2, 271], "vdata0": [0, 1, 2], "vdata1": [0, 1, 2], "vdst": [0, 1, 2, 271], "ve": [289, 291, 324, 330, 331, 333, 337, 338, 340, 357, 365, 382, 383, 385, 390, 398, 409, 418, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 440, 441, 442], "vea6bbv2": 330, "vec": [357, 383], "vec0": 357, "vec01": 357, "vec012": 357, "vec0123": 357, "vec1": [357, 383], "vec2": [357, 383], "vec_insert_and_zero": 388, "vec_orc": 388, "vec_splat": 358, "vec_step": 388, "vec_type_hint": 275, "vector": [68, 80, 162, 174, 258, 270, 274, 275, 280, 281, 289, 291, 313, 323, 358, 366, 367, 381, 387, 388, 393, 411, 412, 413, 418, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 441, 442], "vectoriz": [358, 388, 393, 407, 419], "vectorize_width": 412, "vectorized": [337, 357, 387, 410, 412], "vectorizer": 412, "vectorizing": [357, 387, 410], "vectortyp": 383, "vectypehint": 275, "veg": 275, "vehicl": [288, 291], "vehiclemak": 291, "vehicletyp": 291, "vely": 289, "vend": 355, "vendor": [291, 357, 394, 432], "venu": 390, "venv": 407, "ver60": 371, "verb": 291, "verbatim": [320, 323, 413], "verbos": [293, 294, 296, 299, 308, 312, 362, 383, 393, 413, 418], "verbosity": [415, 416], "verd": 275, "verif": [275, 292, 323, 357, 381, 407, 411, 419], "verifi": [285, 289, 295, 343, 357, 359, 398, 414, 416, 427, 428, 429, 430, 431, 432, 433, 439], "verified": [292, 350, 357, 396], "verify": [276, 286, 292, 295, 301, 321, 330, 341, 350, 357, 363, 376, 384, 385, 393, 394, 395, 409, 414, 416, 430, 431, 432, 433, 437, 440, 441], "verifyfunct": [427, 428, 429, 430, 431, 432, 433], "verifying": [292, 302, 308, 393], "verifypreservedanalys": 416, "vers": [278, 327, 357, 375, 387, 398, 409], "version": [275, 276, 277, 278, 281, 287, 288, 289, 292, 294, 297, 298, 301, 303, 304, 308, 312, 315, 318, 322, 323, 324, 325, 326, 328, 330, 331, 333, 336, 337, 339, 341, 342, 343, 344, 345, 348, 349, 357, 364, 365, 366, 367, 371, 376, 380, 382, 383, 385, 386, 391, 393, 396, 398, 401, 404, 407, 410, 412, 413, 414, 415, 416, 417, 420, 427, 428, 429, 431, 432, 433, 434, 437, 438, 439, 441, 442], "version_less": 287, "versioned": [357, 410, 417, 431, 441], "versionhead": 371, "versioning": [357, 365, 387, 388], "versioninglicm": 410, "versionsignatur": 371, "vertex": [65, 159, 253, 275, 387], "vertic": 415, "very": [277, 278, 279, 281, 285, 288, 289, 291, 292, 306, 313, 316, 323, 330, 331, 332, 335, 337, 338, 339, 340, 341, 343, 346, 347, 350, 351, 357, 359, 362, 364, 365, 366, 381, 383, 385, 393, 394, 398, 401, 402, 403, 405, 407, 408, 409, 412, 414, 415, 418, 419, 421, 422, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442], "vex": 401, "vf": 387, "vfp": [280, 357], "vfp3": 349, "vfprintf": 357, "vfuncid": 357, "vg": [296, 409], "vg_leak": 296, "vgpr": [27, 116, 207, 273, 357], "vgpr0": 275, "vgpr1": 275, "vgpr_count": 275, "vgpr_spill_count": 275, "vgprs_used": 275, "vhaddp": [309, 313], "vi": [275, 278, 287, 289, 313, 316, 317, 320, 321, 326, 327, 329, 330, 331, 332, 334, 336, 338, 339, 343, 344, 348, 349, 357, 359, 360, 361, 368, 381, 383, 387, 388, 394, 396, 399, 401, 402, 404, 405, 409, 414, 415, 417, 421, 423, 424, 427, 428, 433], "viabl": 394, "vic": [278, 313, 327, 357, 375, 387, 398, 409], "video": 383, "videos": 290, "view": [278, 289, 290, 304, 316, 359, 360, 365, 385, 415, 425, 429, 435, 439], "view_function_cfg": 439, "view_function_cfg_only": 439, "viewcfg": [383, 429], "viewcfgonly": [383, 429], "viewer": 291, "viewgraph": 383, "viewing": [365, 408], "viewpoint": 290, "viewvc": 385, "vim": [341, 395, 405], "violat": [275, 290, 291, 330, 340, 357, 383, 390, 429, 439], "violated": [286, 339, 357], "violating": [290, 390], "violent": 290, "viral": 330, "virgini": 386, "virt": 383, "virtreg": 289, "virtreg2indexfunctor": 289, "virtregmap": 289, "virtual": [275, 277, 286, 292, 296, 303, 316, 327, 339, 351, 357, 362, 365, 381, 383, 387, 388, 394, 401, 407, 413, 414, 426, 427, 428, 429, 430, 431, 432, 433, 437], "virtualconstprop": 357, "virtualenv": 407, "virtualindex": 357, "virtuality": [357, 388], "virtually": [353, 383, 402, 405, 431, 441], "vis": [285, 315, 333, 383, 413, 421], "visibility": [275, 281, 289, 360, 391], "visibl": [275, 278, 281, 291, 299, 323, 357, 358, 360, 367, 383, 393, 398, 414], "visitbasicblock": 383, "visited": 383, "visitfab": 333, "visitfunct": 416, "visitgcroot": 339, "visiticmpinst": 285, "visiting": 339, "visitinstruct": 416, "visitor": [285, 333, 339, 401, 425, 427, 435], "visitsrl": 333, "visitxor": 285, "visual": [276, 291, 332, 334, 341, 388, 393, 413, 419], "visualiz": [289, 357, 359, 375, 381, 383, 394, 415, 429, 439], "visualizing": [413, 416, 429, 439], "visually": 292, "vk_argu": 291, "vk_basicblock": 291, "vla": 357, "vlas": [334, 340], "vliw": [322, 401], "vlk": 394, "vm": [0, 1, 2, 291, 359], "vm_cnt": [80, 174, 270], "vma": 416, "vmcnt": [80, 174, 270, 275], "vmcnt_sat": [80, 174, 270], "vmodulekey": [421, 422, 423, 424], "vmov": 292, "vmulp": [309, 313], "vn": 358, "vocabulary": 357, "void": [277, 278, 280, 281, 282, 289, 291, 292, 323, 324, 327, 328, 332, 333, 335, 336, 339, 340, 344, 355, 359, 360, 362, 365, 367, 381, 383, 391, 393, 394, 396, 398, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433], "voidtyp": 383, "volatil": [273, 275, 277, 278, 289, 313, 335, 339, 365, 381, 413], "volatility": 277, "volcanic": 275, "volum": [383, 419], "voluminous": 383, "voluntary": 385, "volunte": 389, "volunteer": [345, 385, 389], "volunteered": 350, "von": 357, "vop1": [272, 275], "vop2": [272, 275], "vop3": [271, 272, 275], "vop_dpp": 275, "vop_sdw": 275, "vopc": [272, 275], "vpaddbyrr_vpadddyrr_vpaddqyrr_vpaddwyrr_vpsubbyrr_vpsubdyrr_vpsubqyrr_vpsubwyrr": 309, "vpaddqyrr": 309, "vpbasicblock": 387, "vpblock": 387, "vpblockbas": 387, "vpic": 386, "vpinstruct": 387, "vprecip": 387, "vprecipebas": 387, "vpregionblock": 387, "vpsubqyrr": 309, "vpsubusw": 409, "vptr": [357, 383, 394], "vptransformstat": 387, "vpus": 387, "vpvalu": 387, "vreg": [289, 343], "vset_lan": 280, "vsetq_lane_s32": 280, "vsplth": 358, "vsrc": [0, 1, 2], "vsrc0": [0, 1, 2], "vsrc1": [0, 1, 2], "vsrc2": [0, 1, 2], "vsrc3": [0, 1, 2], "vsx": [357, 388], "vtabl": [291, 292, 357, 394, 411], "vulner": 394, "vulnerabilit": [357, 391, 394], "vulnerability": 394, "vv": [292, 296], "vzeroupp": 309, "w": [7, 21, 85, 93, 95, 96, 104, 106, 107, 108, 179, 182, 199, 274, 289, 314, 334, 339, 357, 359, 398], "w0": 357, "w30": [357, 362], "w31": 357, "w64": 287, "w7100": 275, "w8": 280, "w8100": 275, "w9100": 275, "w_": 405, "wa": 357, "wait": [80, 174, 270, 275, 291, 313, 345, 389, 399], "waitcnt": [0, 1, 2, 275], "waiting": [313, 421, 426, 428, 436], "waitset": 313, "wak": 385, "walk": [347, 358, 366, 381, 383, 414, 418], "walkarch": 383, "walker": 365, "walking": [343, 365, 383], "wall": [296, 414, 434, 442], "walltimemark": 417, "wambiguous": 305, "want": [277, 279, 281, 287, 289, 290, 291, 292, 304, 323, 324, 326, 330, 331, 333, 335, 338, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 354, 355, 357, 359, 363, 365, 366, 367, 380, 381, 382, 383, 384, 391, 393, 394, 395, 397, 398, 399, 402, 403, 405, 408, 413, 414, 415, 416, 418, 419, 420, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442], "wanted": [383, 399, 416, 428, 438], "wanting": [383, 399], "warn": [287, 291, 343, 381], "warned": [341, 342], "warning": [273, 275, 287, 292, 294, 299, 305, 324, 330, 334, 341, 347, 357, 393, 398, 401, 405, 407, 410, 420, 421, 422, 433], "warnmissedtransformationspass": 410, "warpsiz": 367, "warr": 371, "warranted": 333, "warranty": [330, 414], "wary": 337, "was": [275, 276, 278, 280, 281, 283, 284, 285, 287, 289, 291, 294, 296, 301, 302, 303, 304, 309, 313, 323, 324, 327, 328, 330, 332, 334, 335, 338, 340, 341, 343, 353, 355, 357, 359, 361, 366, 371, 379, 382, 383, 385, 388, 390, 391, 393, 394, 398, 399, 401, 403, 405, 410, 412, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 433, 434, 436, 437, 438, 439, 440, 441, 442], "wasincrementallylinked": 371, "wasn": [277, 366, 430, 431, 432, 433, 440, 441], "wast": [363, 383, 393, 395], "wasted": [361, 383, 396], "wasteful": [431, 441], "watch": [275, 291], "watching": 330, "waterfall": 345, "wav": [116, 207, 275], "wave_rol": 273, "wave_ror": 273, "wave_shl": [273, 275], "wave_shr": 273, "wavefront": [273, 275], "wavefront_sgpr_count": 275, "wavefront_siz": 275, "wavefrontsiz": 275, "way": [275, 276, 277, 278, 281, 285, 288, 289, 291, 292, 293, 299, 308, 313, 316, 317, 320, 323, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 341, 342, 343, 348, 349, 350, 351, 352, 353, 355, 356, 357, 359, 362, 365, 366, 367, 368, 375, 381, 382, 384, 385, 387, 389, 391, 393, 394, 396, 398, 401, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "waypoint": 285, "wb": 313, "wc": 357, "wchar_t": 357, "wcovered": 291, "wd": 357, "we": [276, 277, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 309, 313, 323, 324, 326, 327, 328, 330, 331, 332, 335, 336, 338, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 365, 367, 371, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 388, 390, 391, 393, 394, 396, 397, 398, 399, 401, 402, 405, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "weak": [278, 281, 314, 334, 357, 360, 366, 383, 431, 441], "weak_odr": [281, 357], "weakanylinkag": 383, "weaken": 313, "weakest": [278, 289], "weakness": 337, "weakodrlinkag": 383, "weakvh": 383, "wealth": 326, "web": [326, 330, 386, 388], "webassembly": 357, "webhook": 385, "webk": [357, 396], "webkit_jscc": [281, 357], "websit": [288, 352, 385], "week": [326, 330, 390], "weight": [317, 334, 357, 362, 419], "weird": 289, "wel": [275, 277, 278, 281, 285, 288, 289, 290, 291, 293, 304, 313, 316, 321, 323, 326, 329, 330, 333, 335, 336, 337, 341, 343, 344, 347, 350, 351, 356, 359, 360, 362, 366, 367, 371, 374, 379, 381, 382, 383, 385, 386, 390, 393, 394, 398, 403, 405, 409, 410, 412, 414, 415, 416, 419, 420, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441], "welcom": [290, 325, 330, 341, 342, 348, 398, 414, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "welcoming": 290, "weng": 324, "wennborg": 350, "went": [428, 429, 439], "wer": [278, 280, 289, 291, 292, 296, 302, 304, 308, 313, 321, 323, 324, 327, 328, 330, 332, 337, 341, 342, 343, 350, 352, 355, 357, 358, 359, 365, 366, 371, 381, 383, 385, 388, 390, 393, 394, 398, 401, 404, 405, 412, 416, 421, 434, 442], "weren": [330, 343], "werror": 344, "wf": 357, "wg21": 394, "wget": 341, "wglobal": 291, "what": [273, 274, 275, 277, 278, 280, 281, 282, 284, 287, 289, 291, 292, 295, 297, 299, 304, 312, 316, 321, 323, 324, 327, 330, 332, 333, 341, 342, 343, 345, 349, 350, 352, 356, 357, 358, 362, 363, 365, 367, 371, 375, 379, 381, 382, 383, 384, 387, 389, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 405, 413, 415, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "whatev": [277, 287, 292, 309, 323, 324, 327, 332, 340, 341, 347, 349, 357, 365, 381, 382, 383, 399, 418], "whatsoev": 357, "when": [256, 272, 273, 274, 275, 276, 277, 278, 280, 281, 284, 287, 288, 289, 290, 292, 293, 294, 296, 299, 303, 304, 308, 309, 313, 314, 315, 316, 317, 318, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 360, 361, 362, 363, 365, 366, 367, 368, 375, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "whenev": [276, 277, 288, 291, 292, 293, 323, 329, 354, 356, 357, 365, 383, 396, 409, 425, 433], "wher": [271, 273, 274, 275, 278, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 296, 299, 304, 305, 308, 309, 313, 316, 317, 321, 322, 323, 324, 327, 328, 330, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 356, 357, 359, 361, 362, 365, 366, 367, 368, 371, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 398, 404, 405, 408, 409, 410, 413, 414, 415, 416, 418, 420, 422, 425, 427, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 441], "whereby": [375, 385], "wherev": [324, 383, 433], "wheth": [273, 275, 277, 281, 282, 285, 286, 287, 289, 291, 297, 298, 299, 305, 321, 324, 327, 332, 333, 334, 339, 340, 341, 343, 344, 348, 351, 352, 356, 357, 359, 360, 366, 368, 375, 381, 382, 383, 384, 385, 387, 390, 391, 394, 396, 398, 401, 403, 410, 411, 413, 415, 417, 421, 426, 428, 429, 430, 431, 432, 433, 434, 436, 439, 440, 441, 442], "which": [3, 6, 9, 17, 28, 36, 37, 81, 84, 87, 99, 117, 118, 128, 130, 131, 175, 178, 181, 190, 208, 209, 220, 222, 223, 271, 272, 273, 274, 275, 278, 279, 280, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 313, 314, 316, 317, 321, 323, 324, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 374, 375, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442], "whichev": [382, 393], "whil": [272, 273, 275, 276, 277, 281, 284, 285, 287, 288, 289, 290, 291, 292, 296, 313, 321, 323, 326, 327, 329, 330, 331, 332, 336, 338, 340, 341, 343, 347, 348, 349, 354, 355, 357, 358, 359, 360, 365, 366, 368, 371, 375, 376, 379, 380, 381, 382, 385, 388, 389, 390, 391, 393, 394, 396, 398, 399, 402, 403, 405, 409, 412, 414, 416, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 441, 442], "whip": [430, 440], "whirlwind": [426, 436], "whisker": 394, "whit": 325, "whitelist": [304, 345, 398], "whitelist_fun": 304, "whitelisted": 385, "whitelisting": 385, "whitepap": 415, "whitespac": [292, 330, 404, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "whitespaceoranycomment": 404, "whitespaceorcstylecomment": 404, "whizbang": 291, "who": [284, 287, 288, 291, 328, 330, 331, 352, 356, 357, 366, 380, 382, 385, 390, 399, 413, 419, 420, 421, 428, 431, 434, 438, 441, 442], "whol": [276, 289, 291, 299, 330, 332, 333, 337, 339, 343, 349, 350, 353, 356, 357, 359, 362, 366, 381, 383, 391, 397, 407, 408, 409, 411, 414, 420, 421, 426, 428, 429, 436, 438, 439], "whom": [366, 379], "whos": [275, 277, 281, 285, 289, 291, 296, 308, 313, 314, 316, 317, 328, 330, 357, 383, 387, 393, 401, 403, 404, 413, 417, 421, 426, 430, 431, 436, 440, 441], "whould": 390, "why": [275, 277, 283, 284, 290, 291, 313, 324, 330, 338, 344, 351, 357, 363, 365, 366, 376, 382, 383, 386, 393, 394, 395, 398, 401, 402, 414, 418, 425, 426, 427, 429, 435, 436, 439], "wi": 388, "wid": [274, 275, 277, 278, 281, 289, 290, 333, 339, 340, 343, 346, 357, 367, 379, 383, 387, 388, 403, 404, 428, 429, 438, 439], "wideaddr": 357, "widely": [278, 288, 339, 341, 383, 393, 434, 442], "widen": [343, 387, 412, 414], "widenable_cond": 357, "widenable_condit": 357, "widened": 387, "widening": [289, 393, 414], "widenscalar": 343, "widest": 330, "width": [278, 280, 309, 313, 324, 339, 371, 381, 383, 410, 412, 434, 442], "wik": [287, 341, 349, 359, 363, 386, 391], "wikipedi": [356, 357, 363, 429, 439], "wild": [323, 430, 440], "wildcard": 304, "will": [272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 375, 376, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "willing": [330, 434, 442], "wily": 340, "win": [277, 291, 383, 394], "win32": [289, 341, 342, 376, 399, 409], "wincomplet": 305, "windbg": 393, "window": [287, 289, 291, 305, 316, 323, 324, 327, 341, 342, 345, 355, 357, 376, 379, 383, 388, 393, 399, 409, 414, 419, 427, 428, 429, 430, 439], "wineh": 327, "winzip": 342, "wip": 275, "wireshark": 359, "wiring": 335, "wis": [334, 358], "wisely": 403, "wish": [287, 296, 323, 324, 333, 337, 340, 341, 348, 352, 357, 379, 383, 390, 394, 398, 403, 413], "wished": 366, "with": [28, 29, 30, 85, 118, 119, 120, 121, 122, 179, 209, 211, 212, 213, 214, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337, 338, 343, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 368, 371, 374, 375, 376, 379, 380, 384, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444], "with_assert": 287, "within": [273, 275, 277, 280, 281, 285, 288, 289, 290, 291, 292, 296, 308, 321, 324, 327, 332, 334, 339, 340, 341, 343, 351, 357, 358, 366, 367, 368, 371, 375, 379, 381, 383, 384, 385, 387, 388, 390, 391, 393, 394, 396, 398, 403, 407, 408, 411, 414, 417, 418, 420, 425, 428, 429, 430, 431, 432, 433, 438, 439, 440, 441], "without": [274, 278, 280, 281, 282, 285, 287, 288, 289, 291, 292, 293, 298, 299, 303, 304, 313, 317, 323, 324, 328, 329, 330, 332, 334, 337, 339, 340, 341, 343, 344, 353, 357, 358, 359, 360, 363, 364, 365, 366, 368, 371, 379, 380, 381, 382, 383, 384, 390, 393, 394, 395, 396, 398, 399, 401, 405, 409, 410, 412, 413, 414, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 438, 439, 440, 441], "witness": 390, "witnessed": 275, "witnessing": 390, "wl": [341, 368, 430], "wlandry": 386, "wno": 347, "woff2": 359, "wojciech": 381, "won": [287, 289, 291, 324, 330, 340, 343, 348, 349, 353, 357, 363, 385, 389, 393, 394, 408, 409, 427, 428, 433, 438], "wond": [335, 340, 351], "wondered": 394, "wonderful": [428, 438], "wondering": [291, 330], "wontfix": 284, "word": [273, 275, 278, 282, 289, 290, 291, 323, 332, 335, 339, 351, 357, 359, 365, 383, 393, 394, 413, 417, 420, 427, 437], "word32": 275, "word64": 275, "word_0": [273, 275], "word_1": [273, 275], "wording": [290, 390], "wordsiz": 339, "work": [276, 277, 278, 282, 284, 285, 288, 289, 290, 291, 292, 296, 297, 298, 304, 309, 323, 324, 325, 327, 328, 330, 331, 332, 333, 335, 338, 339, 341, 342, 344, 345, 348, 349, 350, 351, 355, 357, 358, 359, 360, 362, 365, 376, 381, 383, 384, 385, 388, 392, 393, 394, 398, 399, 401, 405, 407, 408, 409, 413, 414, 416, 418, 419, 421, 422, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "work_group_size_hint": 275, "workabl": 383, "worked": [284, 288, 290, 326, 344, 347], "worker": 359, "workflow": [276, 382, 415], "workgroup": 275, "workgroup_siz": 275, "workgroup_size_hint": 275, "workgroupsiz": 275, "workgroupsizehint": 275, "working": [277, 278, 285, 289, 291, 293, 301, 302, 316, 317, 323, 324, 326, 330, 333, 339, 341, 348, 350, 351, 352, 356, 357, 358, 359, 361, 382, 383, 385, 390, 394, 411, 413, 414, 415, 416, 419, 428, 430, 433, 434, 438, 440, 442], "workitem_vgpr_count": 275, "worklist": [366, 381, 383], "worksform": 284, "workshop": 394, "world": [288, 290, 328, 339, 341, 342, 357, 363, 382, 393, 395, 425, 434, 435, 442], "worry": [323, 357, 382, 426, 433, 436], "wors": [280, 289, 291, 357], "worst": [343, 383, 392, 398, 434, 442], "worth": [285, 291, 337, 343, 346, 351, 365, 383, 394, 415], "worthless": 291, "worthwhil": 383, "would": [276, 277, 278, 280, 281, 282, 284, 286, 287, 288, 289, 291, 292, 297, 301, 316, 323, 324, 327, 328, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 351, 352, 356, 357, 358, 359, 362, 363, 365, 366, 368, 371, 375, 379, 381, 382, 383, 384, 385, 386, 390, 393, 394, 395, 396, 398, 399, 401, 404, 405, 409, 410, 412, 414, 415, 416, 417, 418, 420, 422, 426, 427, 428, 429, 433, 434, 436, 437, 438, 439, 440, 442], "wouldn": [291, 385, 393, 431, 433, 441], "wp": 394, "wpdre": 357, "wpdresolu": 357, "wrap": [291, 323, 330, 337, 340, 341, 343, 357, 361, 383, 399, 418, 420, 421, 425, 426, 427, 435, 436, 437], "wrapcolumn": 418, "wrapp": [288, 291, 324, 361, 366, 368, 381, 383, 399, 413], "wrapped": [281, 383, 393, 420], "wrapper": [399, 413], "wrapping": [288, 291, 330, 340, 355, 357, 383, 394, 418, 421], "wrf_": 386, "wrf_r": 386, "wrinkl": 355, "writ": [128, 220, 275, 277, 278, 281, 289, 292, 299, 300, 302, 304, 305, 307, 309, 310, 312, 315, 316, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 337, 340, 341, 342, 343, 355, 357, 359, 362, 363, 366, 367, 371, 375, 381, 383, 384, 393, 395, 396, 398, 405, 409, 413, 414, 416, 418, 419, 425, 428, 429, 432, 433, 435, 438, 439], "writabl": [274, 331, 334, 371, 393], "write_escaped": 414, "write_only": 275, "writeabl": [27, 116, 207], "writeali": 366, "writealu": 309, "writeattribut": 401, "writeonly": [275, 281, 357], "writer": [278, 306, 339, 419], "writesetcc": 309, "writethunk": 366, "writethunkorali": 366, "writetypet": 333, "writev": 413, "writing": [278, 291, 292, 301, 316, 320, 322, 324, 341, 357, 363, 366, 375, 376, 383, 387, 388, 393, 394, 395, 399, 401, 403, 405, 415, 418, 419, 428, 434, 438, 442, 443], "writt": 323, "written": [275, 276, 277, 288, 289, 291, 301, 302, 304, 305, 307, 309, 310, 313, 317, 326, 330, 331, 334, 336, 341, 352, 356, 357, 359, 366, 367, 371, 375, 376, 381, 383, 386, 393, 394, 398, 399, 401, 403, 407, 409, 412, 413, 417, 418, 425, 429, 430, 433, 434, 435, 439, 440, 442], "wrong": [277, 279, 284, 290, 291, 324, 335, 352, 399, 428, 433], "wrot": [333, 340, 357, 432, 433], "wswitch": 291, "wu": 324, "www": [279, 287, 350, 385, 386, 394], "wzr": 357, "x": [7, 85, 179, 272, 273, 274, 275, 278, 280, 283, 287, 289, 291, 292, 293, 299, 308, 314, 320, 323, 324, 328, 329, 330, 332, 334, 335, 338, 339, 341, 343, 350, 357, 359, 362, 367, 381, 382, 383, 388, 393, 398, 401, 403, 404, 405, 409, 411, 413, 414, 418, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "x0": [334, 362], "x00": 444, "x01": 444, "x03": 444, "x04": 444, "x08": 444, "x0abar": 359, "x0c": 444, "x1": [334, 381, 431, 441], "x11": 383, "x15": 334, "x16": [272, 334], "x2": [272, 381, 431, 441], "x20": 362, "x21": 362, "x24": 444, "x3": [272, 381, 431, 441], "x30": 357, "x32": 292, "x4": [272, 381, 431, 441], "x44": 444, "x64": [292, 341, 342, 345], "x8": 272, "x83": 444, "x86": [276, 278, 286, 287, 292, 297, 298, 309, 313, 315, 327, 332, 333, 337, 341, 343, 346, 356, 357, 358, 362, 371, 392, 394, 398, 401, 403, 405, 409, 411, 412, 413, 416, 418, 432], "x86_64": [286, 289, 292, 309, 313, 320, 331, 337, 338, 346, 347, 348, 357, 362, 388, 389, 391, 393, 396, 398, 409, 415, 418, 432], "x86_fastcall": 289, "x86_fastcallcc": 281, "x86_fp80": [281, 357, 366], "x86_mmx": 281, "x86_ssecall": 413, "x86_stdcall": 289, "x86_stdcallcc": 281, "x86_thiscall": 289, "x86call": 403, "x86callingconv": 413, "x86codeemitt": 413, "x86dagtodagisel": 416, "x86framelowering": 289, "x86geninstrinfo": 309, "x86genregisterinfo": [289, 413], "x86ii": 413, "x86inst": 405, "x86instrinfo": 413, "x86instrmmx": 413, "x86instrss": 413, "x86iseldagtodag": 416, "x86isellowering": 416, "x86registerinfo": [289, 413], "x86reloc": 413, "x86retflag": 403, "x86subtarget": 416, "x86targetasminfo": 413, "x86targetlowering": 416, "x86targetmachin": [289, 416], "x87": [343, 357], "x8b": 444, "x_": 405, "xab": 359, "xadd": 278, "xarch": 341, "xc3": 444, "xc4": 444, "xc7": 444, "xchg": [278, 357], "xcod": [287, 329, 341], "xcodebuild": 287, "xcor": [289, 341, 357], "xctoolchain": 287, "xd": 403, "xdat": 371, "xdemangl": 304, "xderef": 275, "xdref": 275, "xe8": 444, "xec": 444, "xemac": 341, "xf7": 359, "xf8": 359, "xfail": [296, 409], "xinmin": 387, "xlc": 341, "xmax": [430, 440], "xme": 316, "xmi": 316, "xmin": [430, 440], "xml": 281, "xmm": [292, 357, 413], "xmm0": [292, 313, 396, 403, 405, 409], "xmm1": [309, 313, 403, 405], "xmm10": 405, "xmm11": 405, "xmm12": 405, "xmm13": 405, "xmm14": 405, "xmm15": 405, "xmm2": [309, 313, 357, 403, 405], "xmm3": [309, 313, 357, 403, 405], "xmm4": [313, 403, 405], "xmm5": [403, 405], "xmm6": [403, 405], "xmm7": [403, 405], "xmm8": 405, "xmm9": 405, "xmos": 325, "xnack": [86, 123, 124, 134, 135, 138, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 180, 182, 193, 194, 215, 216, 217, 224, 225, 228, 229, 232, 233, 234, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 275], "xnack_mask": [274, 275], "xnack_mask_h": 274, "xnack_mask_lo": 274, "xnor": 413, "xnorrr": 413, "xor": [274, 289, 327, 367, 381, 383, 412, 413], "xor16rr": 289, "xor32rr": [289, 362], "xor64rr": 289, "xor8rr": 289, "xorl": 394, "xorr": 413, "xorrr": 413, "xp": 399, "xpass": 296, "xplus1": 403, "xray": 419, "xray_always_instru": [415, 416], "xray_basic_opt": 415, "xray_fdr_opt": 415, "xray_instr_map": [415, 416], "xray_log_finalized": 415, "xray_log_flushed": 415, "xray_log_interfac": 415, "xray_logfile_bas": 415, "xray_mod": [415, 416], "xray_never_instru": 415, "xray_opt": [415, 416], "xraylogimpl": 415, "xs1": 325, "xstep": [430, 440], "xtemp": 278, "xterm": 291, "xu": 387, "xuetian": 324, "xvf": 342, "xvjf": 341, "xword": 413, "xx": [279, 357], "xxx": [291, 292, 407, 408, 413], "xxxasmprint": 413, "xxxbegin": 383, "xxxbranchselector": 413, "xxxcallingconv": 413, "xxxcodeemitt": 413, "xxxend": 383, "xxxgenasmwrit": 413, "xxxgencallingconv": 413, "xxxgencodeemitt": 413, "xxxgendagisel": 413, "xxxgeninstrinfo": 413, "xxxgenregisterinfo": 413, "xxxinstrdescriptor": 413, "xxxinstrformat": 413, "xxxinstrinfo": [354, 413], "xxxiseldagtodag": 413, "xxxisellowering": 413, "xxxiterator": 383, "xxxjitinfo": 413, "xxxkind": 351, "xxxregisterinfo": 413, "xxxreloc": 413, "xxxschedul": 413, "xxxsubtarget": 413, "xxxtargetasminfo": 413, "xxxtargetlowering": 413, "xxxtargetmachin": 413, "xxxtrait": 418, "xxxxxx": 415, "xy": 272, "xyz": [272, 297, 298, 354], "xyzw": 272, "xyzzy": 291, "xz": 332, "xzr": 357, "yaml": [275, 294, 309, 316, 362, 415, 416, 419, 444], "yaxxz": 332, "ye": [272, 335, 340, 341, 342, 359, 363, 366, 381, 392, 395, 424], "year": [291, 330, 405], "yet": [274, 278, 289, 291, 303, 317, 323, 332, 339, 345, 347, 355, 356, 357, 361, 366, 381, 383, 386, 388, 394, 398, 413, 414, 415, 422, 423, 424, 427, 429, 430, 438, 439, 440], "yield": [281, 323, 327, 340, 357, 381, 383, 398, 408, 416, 421], "yielding": 357, "yin": 418, "ymax": [430, 440], "ymin": [430, 440], "ymm": 357, "ymm0": 396, "ymmv": 291, "you": [276, 277, 278, 279, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 298, 299, 304, 307, 308, 309, 313, 316, 320, 321, 323, 324, 326, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 357, 359, 362, 363, 365, 366, 367, 368, 375, 379, 380, 381, 382, 383, 384, 385, 388, 389, 391, 393, 394, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "young": [313, 383], "your": [276, 277, 278, 279, 285, 289, 290, 291, 292, 294, 299, 304, 309, 316, 323, 324, 326, 328, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 352, 357, 358, 359, 363, 365, 367, 375, 380, 382, 384, 385, 388, 389, 390, 391, 395, 398, 400, 405, 406, 408, 409, 413, 416, 418, 419, 420, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442], "yourregex": 292, "yourself": [284, 287, 326, 330, 333, 341, 357, 382, 383, 403], "yout": 418, "yoyodyn": 330, "yplus1": 403, "ystep": [430, 440], "ysvn": 350, "yy": 367, "yypvr": 395, "z": [7, 65, 85, 159, 179, 253, 274, 275, 281, 289, 292, 294, 325, 338, 350, 357, 362, 367, 381, 393, 403, 404, 405, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "z0": [274, 292, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "z2": 430, "z7": 393, "z8ifx": 330, "z_": [274, 292], "za": [274, 292, 357, 362, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "zak": 387, "zc": 357, "zchf": 349, "zen": 394, "zero": [67, 161, 255, 271, 273, 274, 275, 280, 281, 289, 291, 292, 293, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307, 310, 312, 313, 314, 321, 322, 323, 324, 328, 334, 337, 339, 340, 357, 358, 359, 361, 362, 367, 371, 381, 383, 387, 388, 391, 393, 394, 396, 398, 403, 409, 411, 412, 413, 417, 426, 429, 434, 436, 439, 440, 441, 442], "zeroargfp": 403, "zerocontent": 391, "zerodirect": 413, "zeroed": [274, 391], "zeroext": [281, 357], "zeroing": 394, "zeroinitializ": 357, "zeroormor": 323, "zeros": [273, 274, 357], "zext": [353, 393], "zhou": 387, "zi": [371, 393], "zip": 341, "zlib": [287, 341], "zlib1g": 349, "zon": [357, 394], "zorg": 345, "zork": 403, "zy": 357, "zz": 357, "\u00e9gal": [35, 129, 221], "\u00eatre": [35, 129, 221], "\u03c6": 357}, "titles": ["Syntaxe des instructions GFX7", "Syntaxe des instructions GFX8", "Syntax of GFX9 Instructions", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "hwreg", "label", "m", "msg", "soffset", "soffset", "opt", "param", "dst", "srsrc", "srsrc", "ssamp", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "waitcnt", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "imm4", "label", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "waitcnt", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "sdata", "sdata", "sdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "imm4", "label", "fx", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "saddr", "saddr", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vaddr", "vaddr", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "waitcnt", "AMDGPU Instructions Notation", "AMDGPU Instruction Syntax", "Syntax of AMDGPU Instruction Modifiers", "Syntax of AMDGPU Instruction Operands", "User Guide for AMDGPU Backend", "Advanced Build Configurations", "LLVM Alias Analysis Infrastructure", "LLVM Atomic Instructions and Concurrency Guide", "Benchmarking tips", "Using ARM NEON instructions in big endian mode", "LLVM Bitcode File Format", "LLVM Block Frequency Terminology", "LLVM Branch Weight Metadata", "LLVM Bug Life Cycle", "LLVM bugpoint tool: design and usage", "Control Flow Verification Tool Design Document", "Building LLVM with CMake", "CMake Primer", "The LLVM Target-Independent Code Generator", "LLVM Community Code of Conduct", "LLVM Coding Standards", "FileCheck - Flexible pattern matching file verifier", "bugpoint - automatic test case reduction tool", "dsymutil - manipulate archived DWARF debug symbol files", "LLVM Command Guide", "lit - LLVM Integrated Tester", "llc - LLVM static compiler", "lli - directly execute programs from LLVM bitcode", "llvm-ar - LLVM archiver", "llvm-as - LLVM assembler", "llvm-bcanalyzer - LLVM bitcode analyzer", "llvm-build - LLVM Project Build Utility", "llvm-config - Print LLVM compilation options", "llvm-cov - emit coverage information", "llvm-cxxmap - Mangled name remapping tool", "llvm-diff - LLVM structural \u201cdiff\u201d", "llvm-dis - LLVM disassembler", "llvm-dwarfdump - dump and verify DWARF debug information", "llvm-exegesis - LLVM Machine Instruction Benchmark", "llvm-extract - extract a function from an LLVM module", "llvm-lib - LLVM lib.exe compatible library tool", "llvm-link - LLVM bitcode linker", "llvm-mca - LLVM Machine Code Analyzer", "llvm-nm - list LLVM bitcode and object file\u2019s symbol table", "llvm-objdump - LLVM\u2019s object file dumper", "llvm-pdbutil - PDB File forensics and diagnostics", "llvm-profdata - Profile data tool", "llvm-readobj - LLVM Object Reader", "llvm-stress - generate random .ll files", "llvm-symbolizer - convert addresses into source code locations", "opt - LLVM optimizer", "tblgen - Target Description To C++ Code Generator", "CommandLine 2.0 Library Manual", "Compiling CUDA with clang", "Architecture &amp; Platform Information for Compiler Writers", "Contributing to LLVM", "Coroutines in LLVM", "LLVM Code Coverage Mapping Format", "Debugging JIT-ed Code With GDB", "LLVM Developer Policy", "A guide to Dockerfiles for building LLVM", "Exception Handling in LLVM", "Extending LLVM: Adding instructions, intrinsics, types, etc.", "LLVM Extensions", "Frequently Asked Questions (FAQ)", "FaultMaps and implicit checks", "Performance Tips for Frontend Authors", "Fuzzing LLVM libraries and tools", "Garbage Collection with LLVM", "The Often Misunderstood GEP Instruction", "Getting Started with the LLVM System", "Getting Started with the LLVM System using Microsoft Visual Studio", "Global Instruction Selection", "The LLVM gold plugin", "How To Add Your Build Configuration To LLVM Buildbot Infrastructure", "How To Build On ARM", "How To Build Clang and LLVM with Profile-Guided Optimizations", "How to Cross Compile Compiler-rt Builtins For Arm", "How To Cross-Compile Clang/LLVM using Clang/LLVM", "How To Release LLVM To The Public", "How to set up LLVM-style RTTI for your class hierarchy", "How to submit an LLVM bug report", "How To Use Attributes", "How To Use Instruction Mappings", "Design and Usage of the InAlloca Attribute", "LLVMBuild Guide", "LLVM Language Reference Manual", "The LLVM Lexicon", "libFuzzer \u2013 a library for coverage-guided fuzz testing.", "LLVM Link Time Optimization: Design and Implementation", "MCJIT Design and Implementation", "Machine IR (MIR) Format Reference Manual", "}", "LLVM\u2019s Optional Rich Disassembly Output", "MemorySSA", "MergeFunctions pass, how it works", "User Guide for NVPTX Back-end", "Using -opt-bisect-limit to debug optimization errors", "CodeView Symbol Records", "CodeView Type Records", "The PDB DBI (Debug Info) Stream", "The PDB Global Symbol Stream", "The TPI &amp; IPI Hash Streams", "The Module Information Stream", "The MSF File Format", "The PDB Info Stream (aka the PDB Stream)", "The PDB Public Symbol Stream", "The PDB TPI Stream", "The PDB File Format", "Advice on Packaging LLVM", "LLVM\u2019s Analysis and Transform Passes", "Code Reviews with Phabricator", "LLVM Programmer\u2019s Manual", "Creating an LLVM Project", "Moving LLVM Projects to GitHub", "Test-Suite Extentions", "Vectorization Plan", "LLVM 8.0.0 Release Notes", "How To Validate a New Release", "Reporting Guide", "Scudo Hardened Allocator", "Segmented Stacks in LLVM", "Source Level Debugging with LLVM", "}", "Sphinx Quickstart Template", "Stack maps and patch points in LLVM", "Stack Safety Analysis", "Garbage Collection Safepoints in LLVM", "Support Library", "System Library", "TableGen BackEnds", "TableGen Deficiencies", "TableGen Language Introduction", "TableGen Language Reference", "TableGen", "TableGen Fundamentals", "test-suite Guide", "test-suite Makefile Guide (deprecated)", "LLVM Testing Infrastructure Guide", "Code Transformation Metadata", "Type Metadata", "Auto-Vectorization in LLVM", "Writing an LLVM Backend", "Writing an LLVM Pass", "XRay Instrumentation", "Debugging with XRay", "XRay Flight Data Recorder Trace Format", "YAML I/O", "Overview", "<span class=\"section-number\">1. </span>Building a JIT: Starting out with KaleidoscopeJIT", "<span class=\"section-number\">2. </span>Building a JIT: Adding Optimizations \u2013 An introduction to ORC Layers", "<span class=\"section-number\">3. </span>Building a JIT: Per-function Lazy Compilation", "<span class=\"section-number\">4. </span>Building a JIT: Extreme Laziness - Using Compile Callbacks to JIT from ASTs", "<span class=\"section-number\">5. </span>Building a JIT: Remote-JITing \u2013 Process Isolation and Laziness at a Distance", "<span class=\"section-number\">1. </span>Kaleidoscope: Tutorial Introduction and the Lexer", "<span class=\"section-number\">2. </span>Kaleidoscope: Implementing a Parser and AST", "<span class=\"section-number\">3. </span>Kaleidoscope: Code generation to LLVM IR", "<span class=\"section-number\">4. </span>Kaleidoscope: Adding JIT and Optimizer Support", "<span class=\"section-number\">5. </span>Kaleidoscope: Extending the Language: Control Flow", "<span class=\"section-number\">6. </span>Kaleidoscope: Extending the Language: User-defined Operators", "<span class=\"section-number\">7. </span>Kaleidoscope: Extending the Language: Mutable Variables", "<span class=\"section-number\">8. </span>Kaleidoscope: Compiling to Object Code", "<span class=\"section-number\">9. </span>Kaleidoscope: Adding Debug Information", "<span class=\"section-number\">10. </span>Kaleidoscope: Conclusion and other useful LLVM tidbits", "<span class=\"section-number\">1. </span>Kaleidoscope: Tutorial Introduction and the Lexer", "<span class=\"section-number\">2. </span>Kaleidoscope: Implementing a Parser and AST", "<span class=\"section-number\">3. </span>Kaleidoscope: Code generation to LLVM IR", "<span class=\"section-number\">4. </span>Kaleidoscope: Adding JIT and Optimizer Support", "<span class=\"section-number\">5. </span>Kaleidoscope: Extending the Language: Control Flow", "<span class=\"section-number\">6. </span>Kaleidoscope: Extending the Language: User-defined Operators", "<span class=\"section-number\">7. </span>Kaleidoscope: Extending the Language: Mutable Variables", "<span class=\"section-number\">8. </span>Kaleidoscope: Conclusion and other useful LLVM tidbits", "LLVM Tutorial: Table of Contents", "yaml2obj"], "titleterms": {"0": [281, 323, 340, 388], "000": 288, "1": [309, 340, 360, 385, 420], "10": 288, "11": 291, "2": [309, 323, 343, 360, 385, 386, 421, 426, 436], "2017": 386, "3": [276, 309, 360, 385, 422, 427, 437], "32": 297, "4": [360, 385, 386, 423, 428, 438], "5": [424, 429, 439], "6": [281, 430, 440], "7": [431, 441], "8": [388, 432], "9": 433, "C": [280, 287, 291, 322, 330, 335, 341, 357, 358, 364, 380, 383, 386, 388, 393, 399, 411, 415], "D": [358, 388, 411], "DS": [0, 1, 2, 273, 275], "L": 358, "M": [348, 358], "N": [358, 366], "On": [346, 385, 398], "S": 358, "SEE": [293, 294, 296, 297, 298, 299, 300, 301, 307, 308, 310, 314, 315], "See": 291, "T": 358, "__atomic_": 278, "__device__": 324, "__host__": 324, "__nvvm_reflect": 367, "__sync_": 278, "_global__i_": 335, "a": [276, 277, 282, 289, 291, 309, 310, 323, 324, 326, 330, 331, 333, 335, 339, 340, 341, 343, 348, 351, 358, 359, 367, 376, 381, 382, 383, 385, 386, 389, 390, 401, 411, 413, 414, 420, 421, 422, 423, 424, 426, 428, 431, 432, 433, 436, 438, 441, 443], "a16": 273, "aa": [277, 381], "aapc": 280, "aarch64": [325, 348, 388], "ab": 273, "abandoning": 382, "abbrevi": 281, "abbreviated": 281, "abi": [275, 289, 325, 332, 383], "able": 366, "about": [326, 335, 385], "absolut": [274, 323], "absolute_symbol": 357, "abstract": [281, 337, 339, 357, 386, 387, 398, 399, 426, 436], "accelerator": 393, "access": [289, 330, 357, 366, 385], "accurat": 357, "achieving": [284, 383], "acquir": 278, "acquirereleas": 278, "actively": 284, "adce": [277, 381], "add": [340, 345, 357], "addescapingus": 277, "adding": [323, 333, 337, 368, 383, 421, 428, 433, 438], "additional": [275, 296, 388], "addpreserved": 414, "addr": 393, "addr64": 273, "addrequired": 414, "addrequiredtransit": 414, "address": [275, 289, 320, 334, 340, 357, 361, 367, 411], "addressing": [289, 340, 357], "addressofreturnaddress": 357, "addrspacecast": 357, "adjust": 357, "adjusting": [431, 441], "administr": 350, "adt": 383, "advanced": [276, 328, 359, 383, 443], "advic": [285, 380], "advisory": 390, "afl": 359, "after": [291, 360, 385, 390], "aggregat": [337, 343, 357, 381], "aggress": 381, "ahead": 433, "aid": 383, "aka": 376, "algorithm": [289, 324, 383, 386], "ali": [277, 289, 323, 340, 357, 381, 412], "alias": [289, 323, 357, 366], "aliasanalys": 277, "aliasing": [337, 357], "aliassettrack": 277, "alignment": [280, 281, 337, 375], "all": [335, 381, 385, 432], "alloc": [289, 327, 337, 357, 392], "allocated": 383, "allocating": 392, "allocator": [289, 391], "allowed": 323, "along": [366, 398], "also": [291, 293, 294, 296, 297, 298, 299, 300, 301, 307, 308, 310, 314, 315], "altern": [323, 348, 360], "alternat": 398, "alway": [340, 381], "always_inlin": 381, "ambiguous": 410, "amd_kernel_code_t": 275, "amdgcn": 275, "amdgcn_target": 275, "amdgpu": [271, 272, 273, 274, 275, 289, 325], "amdgpu_hsa_kernel": 275, "amdgpu_metadat": 275, "amdhsa": 275, "amdhsa_kernel": 275, "amdpal": 275, "an": [310, 323, 335, 340, 341, 342, 352, 383, 384, 385, 413, 414, 421], "analys": [277, 289, 309, 340, 381, 397, 404, 412, 414, 415], "analysisusag": 414, "analyz": [301, 313], "analyzing": 407, "anchor": 291, "and": [272, 275, 277, 278, 280, 282, 285, 287, 288, 289, 291, 308, 313, 314, 316, 323, 324, 325, 327, 330, 333, 335, 336, 337, 338, 339, 340, 341, 343, 347, 348, 349, 351, 355, 357, 360, 361, 365, 366, 375, 381, 382, 383, 385, 387, 393, 395, 396, 398, 403, 407, 410, 413, 414, 417, 424, 425, 426, 427, 428, 434, 435, 436, 437, 438, 442], "annot": [357, 364], "announc": 350, "anonymous": [291, 381], "anoth": 383, "any": 359, "aper\u00e7u": [380, 419], "api": [289, 330, 335, 343, 364, 385, 420], "apis": [383, 388], "appealing": 390, "appended": 275, "apple": 276, "appliqu": [386, 415], "approach": 360, "aql": 275, "ar": 299, "arc": 357, "arcanist": 382, "arch": 275, "architectur": [275, 325, 348, 396, 398], "archiv": [299, 341], "archived": 294, "are": [289, 327, 335, 357], "argpromot": [277, 381], "argument": [275, 288, 323, 327, 357, 381, 383, 403], "arithmetic": [289, 340, 357], "arm": [280, 325, 334, 346, 348, 349], "arm64": 334, "armneon": 401, "armneonsem": 401, "armneontest": 401, "armv6": 348, "armv7": 348, "armv7e": 348, "array": [328, 334, 340, 357, 383], "arrayref": 383, "ashr": 357, "asked": 335, "asm": [289, 332, 357], "asmmatch": 401, "asmwrit": 401, "assembl": [275, 289, 300, 338, 357], "assembly": [280, 289, 334, 339, 357, 413], "assert": 291, "assign": 381, "assignment": [431, 441], "associat": 366, "associated": 357, "assum": 357, "ast": [423, 426, 429, 436, 439], "at": [381, 385, 424], "atomic": [278, 357, 381], "atomicrmw": 357, "attent": 327, "attr": [7, 85, 179], "attrbuild": 353, "attrdoc": 401, "attribu": 330, "attribut": [275, 323, 324, 353, 355, 357, 362, 381, 393, 415, 416], "attributelist": 353, "audienc": 413, "author": 337, "auto": [291, 412], "automatic": [285, 293, 357], "autoreleas": 357, "autoreleasepoolpop": 357, "autoreleasepoolpush": 357, "autoreleasereturnvalu": 357, "autotooled": 344, "avail": [277, 338, 339], "avoid": [291, 337], "avoiding": 327, "awar": 351, "b": [358, 411], "back": [313, 335, 367, 401], "backend": [275, 289, 340, 401, 403, 405, 413], "background": [286, 329, 332, 351, 393], "backward": 330, "baked": 398, "bank": 343, "bank_mask": 273, "barri": [339, 367], "barrier0": 367, "bas": [351, 398], "based": [289, 291, 324, 335, 340, 381, 383, 388], "basic": [281, 287, 295, 317, 331, 337, 351, 357, 362, 366, 381, 383, 405, 413, 414, 415, 420, 425, 426, 435, 436], "basica": [277, 381], "basicblock": [366, 383], "basicblockpass": 414, "basiccg": 381, "bb": 381, "bcanalyz": 301, "be": [277, 323, 340, 351, 366, 395], "befor": [291, 385], "begin": 327, "begincatch": 332, "behavior": 277, "behaviour": 334, "behind": 393, "benchmark": [309, 347, 386], "benchmarking": [279, 309, 386], "berkeley": 289, "best": 337, "between": [324, 340, 360, 383, 414], "bewar": 291, "bi": 282, "big": 280, "bigg": 326, "binar": 335, "binary": [274, 350, 357, 426, 430, 436, 440], "bisect": 368, "bisecting": 385, "bit": [281, 323, 357, 383], "bitcast": 357, "bitcod": [281, 298, 301, 312, 314, 335, 360], "bitconvert": 280, "bitrevers": 357, "bitstream": 281, "bitvalu": 418, "bitvector": 383, "bitwis": 357, "blitz": 386, "block": [281, 282, 291, 313, 357, 362, 375, 381, 383, 418], "blockinfo": 281, "bod": [381, 404], "boolean": 323, "bootstrap": 276, "both": 341, "bound": 340, "bound_ctrl": 273, "boundar": 375, "bpf_ab": 289, "bpf_ind": 289, "br": 357, "braced": 291, "branch": [282, 283, 350, 381, 385, 413], "branch_weight": 357, "branching": 385, "branchinst": 283, "break": 381, "breaking": 383, "breakpoint": 414, "bswap": 357, "bug": [284, 306, 314, 315, 326, 338, 351, 352, 389, 398], "bugpoint": [285, 293, 381], "build": [276, 302, 331, 338, 344, 345, 346, 347, 348, 350, 356, 359, 365, 414], "buildbot": 345, "building": [287, 331, 335, 338, 346, 347, 348, 349, 383, 384, 385, 416, 420, 421, 422, 423, 424, 443], "buildmaster": 345, "built": [283, 288, 289, 339, 418], "builtin": [323, 348], "bundl": [289, 357], "bundled": 362, "but": 348, "by": [284, 327, 335, 340, 381], "byt": 316, "c99": 334, "cach": [287, 348], "call": [277, 289, 291, 334, 335, 355, 357, 381, 383, 412], "callabl": 383, "callargu": 417, "callback": 423, "calle": [355, 357], "callgraph": [381, 414], "callgraphsccpass": 414, "calling": [289, 335, 355, 357, 413], "callingconv": 401, "callinst": 283, "calllowering": 343, "callsit": [332, 381, 383], "caml": 443, "can": [335, 337, 340], "candidat": 350, "canonicaliz": [357, 381], "cantfail": 383, "cas": [293, 330, 415], "cast": [340, 383], "catch": 332, "catchpad": 357, "catchret": 357, "catchswitch": 357, "categor": 323, "cc": 284, "ceil": 357, "cfg": [283, 381], "cfiindex": 362, "chain": [341, 342, 383], "chaining": 277, "chang": [330, 341, 382, 383, 385, 388, 393, 427, 437], "chapt": [420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "character": [281, 292], "check": [292, 336, 381, 383, 412], "checked": 357, "checkout": [341, 385], "choos": 331, "choosing": 432, "chrom": 416, "chunk": 391, "cl": 323, "clamp": 273, "clang": [276, 324, 338, 341, 346, 347, 348, 349, 350, 391, 401], "clangattrcl": 401, "clangattrdump": 401, "clangattrimpl": 401, "clangattrlist": 401, "clangattrparsedattrimpl": 401, "clangattrparsedattrkind": 401, "clangattrparsedattrlist": 401, "clangattrparserstringswitch": 401, "clangattrpchread": 401, "clangattrpchwrit": 401, "clangattrspelling": 401, "clangattrspellinglistindex": 401, "clangattrtemplateinstantiat": 401, "clangattrvisitor": 401, "clangcommentcommandinfo": 401, "clangcommentcommandlist": 401, "clangcommenthtmlnamedcharacterreferent": 401, "clangcommenthtmltag": 401, "clangcommenthtmltagspropert": 401, "clangcommentnod": 401, "clangdeclnod": 401, "clangdiaggroup": 401, "clangdiagsdef": 401, "clangdiagsindexnam": 401, "clangsachecker": 401, "clangstmtnod": 401, "class": [277, 289, 291, 323, 324, 351, 354, 357, 383, 403, 404, 413, 414], "classof": 351, "cleanup": [332, 355], "cleanuppad": 357, "cleanupret": 357, "clear_cach": 357, "client": 277, "clobb": 357, "clobber": 365, "clobbered": 289, "clon": 385, "closed": 381, "closing": [284, 427, 437], "cmak": [287, 288, 348, 349], "cmath": 324, "cmp": 359, "cmpconst": 366, "cmpgep": 366, "cmpoper": 366, "cmptyp": 366, "cmpvalu": 366, "cmpxchg": 357, "cod": [275, 285, 289, 290, 291, 298, 309, 313, 320, 322, 324, 328, 329, 330, 332, 335, 339, 341, 352, 357, 361, 362, 381, 382, 383, 384, 390, 399, 403, 410, 413, 414, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "codeemitt": 401, "codegen": 278, "codegenprepar": 381, "codeview": [334, 357, 369, 370, 374, 379, 393], "coding": 291, "coff": [334, 444], "collect": [325, 339, 357, 398], "collected": [434, 442], "collecting": 323, "collector": [339, 357], "color": 386, "combin": [289, 381], "comdat": 357, "comm": [330, 341, 385], "command": [288, 295, 304, 315, 317, 323, 382, 412], "commandlin": 323, "comment": [291, 403], "commenting": 291, "committe": 390, "committing": 382, "common": [341, 342, 367, 383], "commun": 360, "communaut": 419, "community": [290, 350, 419], "compar": [340, 366], "comparison": 366, "compatibility": [330, 359], "compatibl": 311, "compil": [287, 291, 297, 303, 324, 325, 335, 341, 348, 349, 352, 357, 380, 388, 407, 422, 423, 428, 433, 438], "compiling": [287, 324, 341, 349, 432], "complain": 367, "complex": [276, 324, 357, 383], "complexpattern": 343, "component": [284, 289, 303, 356, 387], "compr": 273, "comprehens": 388, "compressing": 357, "compressstor": 357, "comput": [275, 340, 367], "compute_pgm_rsrc1": 275, "compute_pgm_rsrc2": 275, "computed": 340, "computing": 339, "concatenating": 383, "concept": [328, 398, 405, 414, 419], "concern": 385, "conclus": [426, 434, 436, 442], "concret": 351, "concurrency": 278, "concurrent": 357, "condit": 357, "conditional": 381, "conduct": [290, 390], "config": 303, "configur": [276, 296, 297, 341, 345, 407], "configuring": [338, 349, 408, 432], "consid": 337, "consider": [280, 355, 383], "consistency": [284, 313], "consistent": 399, "consistently": 291, "const": [274, 334, 343, 357, 362, 366, 381, 383, 393, 428, 438], "constants_block": 281, "constmerg": 381, "constprop": 381, "constrained": 357, "constraining": 409, "constraint": [275, 357], "construct": [289, 335, 381], "constructor": [291, 383], "consumeaft": 323, "consumer": 393, "consuming": 383, "contain": [316, 379, 383], "contained": 291, "container": 383, "content": [275, 281, 385, 393, 443], "context": 418, "contextual": 364, "continu": 291, "continuously": 338, "contract": 351, "contribu": 371, "contribut": 326, "contributing": 326, "control": [286, 288, 324, 429, 439], "controlling": [323, 416], "convent": [273, 274, 275, 289, 335, 355, 357, 367, 413], "convers": [274, 357, 367, 386, 412, 413], "convert": [320, 357], "cop": 291, "copy": 355, "copyright": 330, "copysign": 357, "copyvalu": 277, "copyweak": 357, "cor": [343, 383, 398], "coral": 386, "coreclr": 339, "coro": 327, "corocleanup": 327, "coroearly": 327, "coroelid": 327, "corospl": 327, "coroutin": 327, "corpus": 359, "cos": 357, "cost": 332, "could": 366, "count": [283, 292, 328, 357, 381, 412], "counter": 383, "cov": 304, "coverag": [304, 328, 359], "covered": 291, "cpu": 386, "crash": 285, "crashing": 352, "creat": 350, "creating": [383, 384, 414], "creation": 361, "crit": 381, "criteri": 350, "critical": 381, "cross": [287, 341, 348, 349, 407], "ctag": 401, "ctlz": 357, "ctpop": 357, "cttz": 357, "cud": 324, "currently": 385, "custom": [309, 323, 327, 339, 340, 343, 383, 407, 408, 413, 418], "customeventmark": 417, "cv_def_rang": 334, "cv_fil": 334, "cv_filechecksum": 334, "cv_filechecksumoffset": 334, "cv_fpo_dat": 334, "cv_func_id": 334, "cv_inline_linet": 334, "cv_inline_site_id": 334, "cv_linet": 334, "cv_loc": 334, "cv_stringtabl": 334, "cxxmap": 305, "cycl": 284, "d16": 273, "da": [273, 381], "dag": [282, 289, 292], "dagisel": 401, "darp": 386, "dat": [274, 275, 281, 289, 317, 328, 357, 367, 381, 383, 399, 415, 417, 418], "datalayout": 289, "dbg": [381, 393], "dbi": [316, 371], "dce": 381, "dead": 381, "deadargelim": 381, "deadarghax0r": 381, "deadtypeelim": 381, "deal": 284, "dealloc": 327, "debug": [275, 294, 308, 368, 371, 381, 383, 393, 433], "debug_typ": 383, "debugg": [285, 357, 381, 393], "debugging": [277, 295, 329, 383, 393, 409, 416], "debugify": 393, "debuginfo": 381, "debugtrap": 357, "declar": [381, 393, 404], "decod": 381, "deconstruct": 289, "deduc": 381, "deduct": 291, "deep": [351, 395], "def": [383, 404], "default": [284, 291, 418], "deficienc": [402, 405], "define_abbrev": 281, "defined": [296, 430, 431, 440, 441], "defining": [291, 413], "definit": [291, 301, 358, 387, 396, 403], "defm": 404, "defset": 404, "delayed": 391, "delet": 381, "deletevalu": 277, "deleting": 383, "demangl": 338, "demo": [335, 350], "demot": 381, "denorm": 275, "densemap": 383, "denseset": 383, "deoptimiz": 357, "dependenc": 380, "dependent": [277, 334, 362, 381], "deprecated": [341, 382, 407, 408], "dequ": 383, "dereferenced": 340, "dereferencing": 288, "derived": [333, 383, 398], "describing": 337, "descript": [285, 289, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 360], "descriptor": 275, "design": [285, 286, 289, 355, 360, 361, 365, 387, 391], "designed": 340, "designing": 383, "destroy": 327, "destroyweak": 357, "detail": [291, 364, 392, 393, 412], "detailed": 301, "detect": [381, 386], "detecting": 324, "determining": 323, "determinism": [276, 291], "deterministic": 291, "develop": [295, 330], "developer": 341, "developing": [287, 359], "development": [330, 385, 412, 419], "deviat": [66, 160, 254], "devic": [324, 407], "dfapacketiz": 401, "dfmt": 273, "di": 381, "diagnos": 313, "diagnostic": [316, 412], "dialect": 324, "dibasictyp": 357, "dicompileun": 357, "dicompositetyp": 357, "dictionar": 359, "did": 335, "diderivedtyp": 357, "dienumerator": 357, "diexpress": 357, "diff": 306, "different": [277, 324, 340, 408], "difil": 357, "diglobalvari": 357, "diimportedentity": 357, "dilexicalblock": 357, "dilexicalblockfil": 357, "diloc": 357, "dilocalvari": 357, "dimacro": 357, "dimacrofil": 357, "dinamespac": 357, "diobjcproperty": 357, "direct": [275, 289, 292, 334, 357, 396, 412], "directly": [277, 298], "directory": [341, 375], "dis": 307, "disabl": 357, "disable_nonforced": 357, "disassembl": [289, 307, 338, 401], "disassembly": 364, "discovery": 296, "dispatch": [275, 313], "displaying": 407, "dissecting": [328, 367], "distanc": [340, 424], "distinct": 327, "distribu": [350, 410], "distribut": 357, "disubprogram": 357, "disubrang": 357, "disubroutinetyp": 357, "ditemplatetypeparamet": 357, "ditemplatevalueparamet": 357, "dith": 386, "dll": 357, "dmask": 273, "do": [285, 291, 335, 340, 359, 366, 381, 414], "doc": 325, "dock": 331, "dockerfil": 331, "docu": [286, 325, 337, 366, 418], "document": [275, 291, 350, 419], "doesn": 359, "doesnotaccessmemory": 277, "dofinaliz": 414, "doinitializ": 414, "dom": 381, "domfronti": 381, "domin": 381, "dominator": 381, "domtre": 381, "don": [273, 291, 327, 335, 340, 399], "donothing": 357, "dot": 381, "downstream": 385, "doxygen": 291, "dpp": 273, "dpp_ctrl": 273, "driv": [426, 427, 436, 437], "driven": 277, "ds": 277, "dse": [277, 381], "dst": [35, 129, 221], "dst_sel": 273, "dst_unused": 273, "dsymutil": 294, "due": 291, "dump": [308, 315, 316], "duplicat": [381, 399], "during": 412, "dwarf": [275, 294, 308, 393, 433], "dwarfdump": [308, 338], "dylan": 388, "dyn_cast": 383, "dynamic": [289, 357], "dynamically": [323, 414], "e_flag": 275, "each": 381, "early": 291, "ebpf": 289, "ec": 371, "ed": 329, "edge": [381, 398], "ef_amdgpu_mach": 275, "effect": [337, 340], "efficiency": [277, 355], "eh": [332, 381], "element": [291, 340, 357], "elf": [275, 334], "elimin": 381, "elis": 355, "else": [288, 291, 429, 439], "elseif": 288, "email": 385, "embedded": 362, "embedding": 287, "emiss": [289, 334, 433], "emit": [304, 432], "emitt": 413, "emitting": [289, 339], "empty": 292, "enabl": 357, "encoded": 328, "encoding": [272, 275, 281, 289, 328], "end": [291, 297, 327, 335, 340, 352, 357, 367, 393, 401], "end_block": 281, "endcatch": 332, "endian": 280, "ending": 383, "endl": 291, "endofbuff": 417, "engin": 361, "enhanc": 398, "enough": 285, "enter_subblock": 281, "entit": 403, "entri": 396, "entry": [283, 357, 381], "enumer": [275, 291], "enumerator": 291, "environment": [275, 357, 414], "epilog": 289, "equal": 291, "equivalent": 357, "erlang": 339, "error": [291, 368, 383, 393, 399, 418], "error_cod": 383, "erroror": 383, "etc": [333, 383], "eval": [277, 381], "evalu": 277, "evaluat": 291, "evaluator": 381, "every": 291, "evolu": 381, "exactly": 359, "exampl": [275, 280, 296, 303, 309, 317, 320, 327, 329, 339, 341, 342, 344, 354, 357, 359, 360, 368, 383, 395, 405, 414], "except": [291, 332, 355, 357, 381], "exceptional": 398, "exceptionpoint": 332, "exe": 311, "exec": 274, "execu": [275, 296, 383, 409], "execut": [298, 376], "executing": [287, 367], "execz": 274, "exeges": 309, "exhaust": 381, "existing": [277, 414, 431, 441], "exit": [291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 313, 314, 317, 318, 319, 320, 321, 322, 381], "exitonerror": 383, "exp": [0, 1, 2, 273, 357], "exp2": 357, "expand": 413, "expanding": 357, "expandload": 357, "expect": [283, 357], "exper": 385, "experimental": [357, 396, 398], "explic": 398, "exploiting": 323, "explor": 416, "export": 304, "expos": 399, "exposed": 399, "express": [274, 292, 328, 332, 357, 381, 403, 426, 427, 429, 436, 437, 439], "extended": [275, 289], "extending": [333, 429, 430, 431, 439, 440, 441], "extens": [323, 334, 393, 414, 429, 439], "extent": 386, "external": [323, 362, 381, 388, 407, 408, 443], "externalfnconst": 381, "extra": [313, 340, 409], "extract": [310, 381], "extractel": 357, "extractvalu": 357, "extrahelp": 323, "extrem": 423, "f": [358, 366], "fab": 357, "fadd": 357, "fail": 348, "fair": [287, 323, 351, 427], "fallibl": 383, "faq": [335, 359], "fast": 357, "fastisel": [343, 401], "fault": 336, "faultmap": 336, "fcmp": 357, "fconst": 274, "fdiv": 357, "featur": [275, 289, 291, 339, 359, 380, 386, 409, 412], "fenc": 357, "ffmpeg": 386, "fidelity": 416, "field": 366, "fil": [281, 289, 291, 292, 294, 296, 299, 305, 314, 315, 316, 319, 323, 328, 341, 348, 360, 362, 371, 375, 379, 381, 390, 393, 403, 409, 415], "filecheck": 292, "filenam": 357, "filing": 390, "filt": [289, 332], "filter": 332, "filtering": 316, "fin": [368, 383], "final": [327, 350, 361], "find": [337, 381], "finding": [338, 382, 383], "findregress": 389, "firehos": 386, "first": [340, 357], "fix": [326, 357, 366], "fixed": [281, 289, 357, 383, 393], "fixing": [284, 393], "flag": [323, 324, 357, 362, 380, 412], "flam": 416, "flat": [0, 1, 2, 273, 275], "flat_scratch": 274, "flexibl": 292, "flight": [415, 417], "float": 348, "floating": [274, 275, 298, 334, 357], "floor": 357, "flow": [286, 288, 313, 418, 429, 439], "fma": 357, "fmax": 357, "fmin": 357, "fmul": 357, "fmuladd": 357, "fn": 381, "fneg": 357, "folding": [289, 413, 428, 438], "foldingset": 383, "follow": 366, "following": 340, "followup": 357, "followup_all": 357, "followup_coincident": 357, "followup_epilogu": 357, "followup_fallback": 357, "followup_inn": 357, "followup_out": 357, "followup_remaind": 357, "followup_remainder_inn": 357, "followup_remainder_out": 357, "followup_sequential": 357, "followup_vectorized": 357, "for": [275, 277, 285, 289, 291, 325, 331, 332, 335, 337, 338, 340, 341, 343, 344, 348, 351, 357, 359, 367, 381, 383, 384, 385, 386, 393, 398, 408, 411, 429, 431, 439, 441], "forbidden": 291, "forced": 381, "foreach": 404, "forensic": 316, "form": [289, 381], "format": [281, 289, 291, 296, 299, 328, 332, 338, 356, 362, 375, 379, 393, 396, 398, 417], "formatting": [291, 323, 383], "formatv": 383, "formedness": 357, "fp16": 357, "fpext": 357, "fpmath": 357, "fptos": 357, "fptou": 357, "fptrunc": 357, "fragil": 409, "fram": [289, 327, 332, 434, 442], "frameaddress": 357, "fre": [327, 375], "freeform": 323, "freelist": 391, "freepoom": 386, "frem": 357, "frequency": 282, "frequently": [287, 335], "friendly": 359, "from": [282, 289, 298, 310, 323, 324, 340, 341, 349, 357, 381, 382, 383, 423], "front": [335, 340, 352, 393], "frontend": 337, "fronti": 381, "fshl": 357, "fshr": 357, "fsub": 357, "ft": 288, "ftensor": 386, "full": [357, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "fully": 291, "funclet": [332, 357], "function": [283, 288, 289, 291, 310, 323, 327, 328, 333, 335, 357, 362, 366, 367, 381, 383, 393, 399, 412, 414, 415, 417, 422, 427, 433, 437], "function_block": 281, "function_entry_count": 357, "function_ref": 383, "functional": 289, "functionality": 399, "functionattr": 381, "functioncomparator": 366, "functionpass": 414, "fundamental": [333, 406], "furth": [313, 384, 416], "futur": [289, 343, 414, 415], "fuzz": [338, 359], "fuzzer": 338, "fuzzing": [338, 359], "fx": 210, "g": 358, "garbag": [339, 357, 398, 434, 442], "gath": [357, 412], "gc": [339, 357, 398], "gcmetadataprint": 339, "gcov": 304, "gcread": [339, 357], "gcroot": 357, "gcwrit": [339, 357], "gd": 273, "gdb": [329, 414], "gen": 367, "gener": [289, 298, 332, 339, 352, 361, 362, 381, 416, 427, 429, 437, 439], "general": [279, 296, 298, 334, 357, 383, 401, 417], "generally": 289, "generat": 319, "generated": [289, 335], "generating": [339, 408], "generator": [285, 289, 322, 335, 338, 352, 357, 381, 403], "generic": [299, 338, 343, 386], "geometric": 386, "gep": [337, 340], "get": 357, "getanalys": 414, "getanalysisifavail": 414, "getanalysisusag": 414, "getelementptr": [335, 357], "getmodrefinfo": 277, "getposit": 323, "getregisteredopt": 323, "getting": [282, 341, 342, 359, 368, 416], "gfx6": 275, "gfx7": 0, "gfx8": 1, "gfx9": [2, 275], "gfx_generation_numb": 275, "git": [341, 385], "github": 385, "given": 348, "glc": 273, "global": [275, 343, 357, 362, 366, 372, 381, 393, 412], "global_ctor": [335, 357], "global_dtor": 357, "globaldc": 381, "globalisel": 343, "globalopt": 381, "globalsmodref": [277, 381], "globalvalu": 383, "globalvari": 383, "gnupg": 386, "go": 335, "goal": [339, 365], "gold": 344, "good": 359, "got": 352, "grained": 383, "grammar": 417, "granularity": 368, "graph": [334, 381, 383, 386, 416], "graph500": 386, "graphic": 275, "group": [357, 414], "grouping": 323, "guarante": [434, 442], "guard": 357, "guid": [275, 278, 295, 323, 331, 356, 362, 367, 390, 407, 408, 409, 419], "guided": [347, 359, 381, 407], "guidelin": [387, 395], "gvn": [277, 381], "h": [289, 324, 358, 383], "hack": 349, "hacking": 381, "half": [357, 398], "handl": 275, "handler": 383, "handling": [288, 289, 332, 357, 381, 383, 418], "happen": [335, 340, 390], "hard": [431, 433, 441], "hardened": 391, "hardwar": [325, 341, 342], "harness": 386, "hasglobalalias": 366, "hash": [373, 393], "hav": 340, "hcc": 275, "head": [275, 328, 348, 371, 376, 391, 393, 417], "header": [291, 399], "heap": [327, 339, 383], "hello": 414, "help": [323, 324, 335, 384], "helpful": [326, 383], "hex": 418, "hexadecimal": 334, "hexagon": [325, 388], "hiding": 323, "hierarch": 351, "hierarchy": [351, 383], "hierchar": 383, "high": [273, 289, 291, 328, 335, 357, 362, 386, 387, 399], "hint": [383, 412], "hopefully": 395, "host": [324, 341, 348], "hosting": 335, "how": [284, 289, 313, 326, 335, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 359, 366, 389, 397, 401], "hpc": 386, "hsa": 275, "hsa_code_object_is": 275, "hsa_code_object_vers": 275, "hwreg": [27, 116, 207], "hybrid": 385, "hydrobench": 386, "hyphen": 323, "i": [331, 335, 337, 340, 358, 366, 418], "i32": 340, "ia": 297, "ia64": 325, "ibm": 325, "icmp": 357, "iconst": 274, "id": [275, 281, 327, 328, 357], "ide": [286, 398, 430, 440], "identif": 275, "identifi": 357, "identifying": 339, "idxen": 273, "if": [283, 288, 340, 366, 412, 413, 429, 439], "ifunc": 357, "ilist": 383, "ilist_nod": 383, "ilist_trait": 383, "illinois": 335, "imag": [275, 331, 386], "imm16": [10, 47, 67, 88, 144, 161, 183, 238, 255], "imm3": [128, 220], "imm32": [11, 26, 89, 114, 115, 184, 205, 206], "imm4": [117, 208], "immediat": 362, "immutablemap": 383, "immutablepass": 414, "immutableset": 383, "impl": 381, "implement": [277, 280, 282, 289, 357, 360, 361, 366, 368, 383, 386, 392, 399, 413, 414], "implementing": [289, 339, 414, 426, 434, 436, 442, 443], "implic": [275, 336], "implicitnullcheck": 336, "import": [343, 383], "in": [280, 283, 284, 287, 288, 289, 291, 327, 332, 335, 339, 362, 366, 381, 383, 385, 388, 392, 393, 396, 398, 412, 414, 415, 418, 431, 441, 443], "inalloc": 355, "includ": [291, 335, 341, 399], "inclus": 403, "incorrect": 352, "increment": 357, "incremental": 330, "indent": 291, "independent": [289, 335, 434, 442], "index": [340, 362, 368, 419], "indexedmap": 383, "indic": [337, 340, 362], "indirect": 357, "indirectbr": 357, "indirectbrinst": 283, "individual": [362, 383], "induct": [381, 412], "indvar": 381, "info": [371, 376, 381, 383, 393, 403, 413], "inform": [289, 291, 304, 308, 325, 326, 374, 381, 383, 388, 393, 409, 411, 433], "informed": 330, "infrastructur": [277, 296, 345, 409], "init": 357, "initial": [275, 289], "initializ": [277, 291, 359, 383], "initializing": 339, "initweak": 357, "inlin": [274, 289, 291, 357, 381], "inlining": 381, "input": [317, 338, 357, 418], "insert": [289, 398], "insertel": 357, "inserting": 383, "insertvalu": 357, "inspect": 383, "installing": 349, "instanc": 403, "instcombin": [335, 381], "instcount": 381, "instnam": 381, "instrinfo": 401, "instrmapping": 354, "instrprof": 357, "instruct": [0, 1, 2, 271, 272, 273, 274, 275, 278, 280, 283, 289, 309, 313, 332, 333, 335, 340, 343, 354, 357, 359, 362, 364, 381, 383, 413, 416], "instructionselect": 343, "instructionselector": 343, "instrument": [415, 416], "instrumenting": 415, "integ": [274, 340, 357], "integer": 281, "integr": [356, 381], "integral": 357, "integrated": 296, "intel": [279, 297], "intended": 355, "inteqcl": 383, "interact": [383, 414], "interchang": 410, "interfac": [277, 335, 382, 383, 399], "interleav": 357, "interleaving": 410, "internal": [275, 291, 323], "internaliz": 381, "interoperability": 383, "interprocedural": 381, "interval": [289, 381], "intervalmap": 383, "into": [291, 320, 323, 335, 340, 381, 383], "intrinsic": [275, 280, 327, 332, 333, 339, 357, 367, 381, 393, 396, 398, 401], "intrinsicid": 362, "introduct": [0, 1, 2, 271, 275, 276, 277, 278, 279, 280, 282, 283, 284, 287, 288, 289, 291, 323, 324, 327, 328, 330, 331, 332, 333, 334, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 359, 361, 362, 364, 365, 366, 367, 368, 371, 374, 379, 381, 383, 385, 388, 389, 391, 392, 393, 395, 397, 401, 402, 403, 404, 405, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441], "inttoptr": [340, 357], "invalid": 365, "invari": [357, 381, 417], "invok": [357, 381, 383], "invoking": 324, "iostream": [291, 335], "ipconstprop": 381, "ipi": 373, "iplist": 383, "ipsccp": 381, "ir": [275, 278, 280, 281, 328, 330, 335, 337, 338, 339, 340, 343, 362, 381, 383, 388, 427, 429, 434, 437, 439, 442], "irc": 419, "irr_loop": 357, "irtransformlai": 421, "irtranslator": 343, "is": [289, 291, 335, 339, 340, 357, 359, 385, 414, 431, 433, 441], "isa": 383, "isel": 338, "isn": 285, "isol": [383, 424], "issu": [277, 291, 313, 367, 388], "it": [335, 340, 344, 366, 376, 397, 432], "itanium": [325, 332], "item": [275, 341], "iter": 343, "iterating": 383, "iterator": [383, 412], "iv": 381, "jam": [381, 410], "jit": [289, 329, 383, 388, 413, 420, 421, 422, 423, 424, 428, 438, 443], "jiting": 424, "joinerror": 383, "json": 401, "jump": [289, 362, 381], "kaleidoscop": [425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], "kaleidoscopej": 420, "keep": 291, "keeping": 399, "kernel": [275, 367], "key": 418, "keyword": 291, "kicking": [430, 440], "know": 366, "known": [388, 402], "kokkos": 386, "label": [28, 118, 209, 291, 292, 357], "lai": 289, "lambd": 291, "lan": [280, 325], "landingpad": 357, "languag": [275, 291, 335, 337, 357, 388, 393, 403, 404, 425, 429, 430, 431, 434, 435, 439, 440, 441, 442, 443], "larg": 337, "lat": 289, "laund": 357, "layer": 421, "layering": 291, "layout": [289, 341, 357, 367, 374, 375, 379, 381, 383, 384, 393, 411], "laziness": [423, 424], "lazy": [381, 383, 422], "lcssa": 381, "ld": 273, "ld1": 280, "ldc": 388, "ldr": 280, "lds_direct": 274, "leak": 359, "leb128": 328, "leftov": 410, "legal": [337, 413], "legaliz": [289, 343, 413], "legalizerinfo": 343, "legalizetyp": 289, "length": 334, "let": [403, 404], "level": [280, 289, 291, 323, 328, 335, 343, 357, 362, 381, 387, 393, 399, 404], "lex": [425, 429, 435, 439], "lexical": 404, "lexicon": 358, "lib": [311, 341], "libcall": [278, 381], "libdevic": 367, "liberally": 291, "libfuzz": 359, "liblto": 360, "libm": 357, "libprotobuf": 338, "librar": [291, 338, 384, 386], "library": [291, 311, 323, 324, 341, 357, 359, 380, 383, 386, 391, 399, 400, 415], "licens": [330, 335], "licensing": 344, "licm": [277, 381, 410], "licm_versioning": 357, "lif": 284, "lifetim": [355, 357, 393], "lik": [291, 335, 383], "lim": 368, "limit": [277, 362, 398, 411], "lin": [275, 323, 382, 412], "link": [312, 334, 341, 342, 344, 357, 360], "linkag": 357, "linking": 367, "linkonc": 334, "lint": 381, "linux": [279, 325], "list": [288, 291, 314, 323, 325, 357, 383, 388, 418, 419], "listing": [420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441], "lit": 296, "literal": 274, "littl": 291, "liv": [289, 362], "living": 385, "ll": 319, "llc": 297, "lldb": 388, "lli": 298, "llvm": [275, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 326, 327, 328, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 357, 358, 359, 360, 364, 367, 380, 381, 383, 384, 385, 387, 388, 392, 393, 396, 398, 399, 401, 409, 412, 413, 414, 415, 416, 419, 427, 428, 429, 431, 434, 437, 438, 439, 441, 442, 443], "llvm_debug": 383, "llvm_shutdown": 383, "llvmbuild": 356, "llvmcontext": 383, "lnt": 407, "load": [289, 313, 337, 357], "loaded": 414, "loading": 361, "loadweak": 357, "loadweakretained": 357, "local": [296, 341, 357, 385, 431, 441], "localescap": 357, "localrecov": 357, "locat": [286, 320, 341, 433], "locating": 365, "log": [357, 366], "log10": 357, "log2": 357, "logarithmical": 366, "longjmp": 332, "looking": 337, "lookup": 393, "loop": [282, 288, 291, 357, 381, 410, 412, 414, 429, 439], "looping": 403, "looppass": 414, "low": [291, 343, 381], "loweratomic": 381, "lowering": [339, 340, 343, 357, 398], "lowerinvok": 381, "lowerswitch": 381, "lppassmanag": 414, "lsda": 332, "lshr": 357, "lto": 344, "lto_code_gen_t": 360, "lto_module_t": 360, "lwe": 273, "m0": [274, 275], "m_op_sel": 273, "m_op_sel_h": 273, "mach": 393, "machin": [289, 309, 313, 334, 337, 343, 362, 398, 413, 432], "machinebasicblock": 289, "machinefunct": [289, 414], "machinefunctionpass": 414, "machineinstr": 289, "machineinstrbuild": 289, "machineverifi": 343, "machsuit": 386, "macro": 383, "macros": [288, 418], "magic": 281, "mailing": 419, "main": 366, "maintainability": 343, "mainten": 284, "major": [275, 330], "mak": [291, 335, 336], "makefil": [384, 407, 408], "making": [330, 383], "man": 385, "managedstatic": 383, "managing": 385, "mangled": 305, "manipul": [327, 357], "manipulat": 294, "manual": [323, 325, 357, 362, 383], "map": [275, 289, 336, 339, 357, 371, 375, 383, 396, 398], "mapping": [275, 289, 328, 354, 413, 418], "mapvector": 383, "marker": [313, 357], "marking": 367, "markup": 364, "masked": 357, "mass": 282, "matching": [289, 292, 376], "math": [324, 357], "matrix": 289, "mattr": 275, "maximum": 357, "maxnum": 357, "may": [277, 366], "mc": [289, 338], "mca": 313, "mccontext": 289, "mcinst": 289, "mcjit": [329, 361], "mcsection": 289, "mcstream": 289, "mcsymbol": [289, 362], "mechanical": 291, "mem2reg": 381, "memb": 340, "member": [383, 390], "membership": 411, "memcpy": [357, 381], "memcpyopt": [277, 381], "memdep": 381, "memmov": 357, "memory": [275, 277, 313, 337, 357, 381, 383, 431, 441], "memorydependenceanalys": 277, "memoryss": 365, "memset": 357, "merg": [316, 317, 350, 359, 381, 385], "mergefunc": 381, "mergefunct": 366, "mergereturn": 381, "mergetwofunct": 366, "merging": [350, 366], "messag": 330, "metadat": [275, 283, 284, 336, 357, 367, 410, 411, 417], "metadata_attachment": 281, "metadata_block": 281, "method": [277, 291, 383, 399, 414], "mf": 414, "microscopic": 291, "microsoft": [287, 342], "middl": 335, "migrat": 385, "mimg": [0, 1, 2, 273], "minimiz": 399, "minimizing": 331, "minimum": [357, 388], "minnum": 357, "minor": 275, "mip": [325, 388], "mir": [343, 362], "mirror": 385, "miscellaneous": [273, 316, 323, 325, 362, 384, 414], "miscompil": [285, 352], "mismatched": 335, "missed": 381, "misunderstood": 340, "mixed": 412, "mixing": 398, "mnemonic": [272, 289], "mod": [275, 280, 289, 343, 359, 381, 415, 433], "model": [275, 313, 324, 357, 398], "modeling": 337, "modern": 341, "modif": [283, 348], "modifi": [271, 272, 273, 275, 299, 323, 357], "modified": 335, "modify": 335, "modul": [288, 310, 316, 357, 362, 371, 374, 381, 383, 414, 421, 432], "module_block": 281, "module_code_ali": 281, "module_code_asm": 281, "module_code_datalayout": 281, "module_code_deplib": 281, "module_code_funct": 281, "module_code_gcnam": 281, "module_code_globalvar": 281, "module_code_sectionnam": 281, "module_code_tripl": 281, "module_code_vers": 281, "modulepass": 414, "mono": 385, "monorepo": 385, "monotonic": 278, "mor": [276, 291, 359, 383, 415], "most": 381, "motion": 381, "motiv": [336, 396], "mov": 385, "moved": [400, 406], "moveweak": 357, "moving": 385, "msf": [316, 375, 379], "msg": [30, 122, 214], "mtbuf": 273, "mubuf": [0, 1, 2, 273, 275], "mul": 357, "mult": [276, 360, 385], "multiclass": [403, 404], "multigrid": 386, "multipl": [327, 383, 385], "multirepo": 385, "multithreaded": 414, "must": [277, 323], "mutabl": [431, 441], "mutat": [431, 441], "mutator": [338, 359], "my": [335, 340, 359], "nam": [275, 291, 305, 357, 381, 393, 413], "named": [323, 357], "namespac": 291, "naming": 289, "narrat": 366, "nas": 386, "nativ": [281, 289], "natural": 381, "nearbyint": 357, "need": [340, 395], "neg": 273, "neg_h": 273, "neg_lo": 273, "negat": 340, "neon": 280, "nested": 355, "new": [277, 330, 332, 333, 343, 381, 383, 389, 393, 409, 414, 431, 441], "newbuff": 417, "newcpuid": 417, "newlin": 292, "next": [292, 416], "next_free_sgpr": 275, "next_free_vgpr": 275, "nfmt": 273, "nightly": 389, "nios2": 388, "nm": 314, "no": [277, 348, 366, 381, 399, 418], "noali": 357, "nod": [333, 357, 381], "non": [275, 276, 291, 339, 343, 357, 365, 381, 388, 398], "nondebug": 381, "noop": 327, "normal": 327, "normaliz": 418, "not": [275, 286, 289, 291, 292, 323, 325, 335, 346, 348, 359, 366, 381, 385, 388], "notat": [0, 1, 2, 271, 341, 404], "notatomic": 278, "null": [339, 340], "numb": [275, 281, 323], "number": [274, 281, 385], "numbering": 381, "numerical": 324, "nv": 273, "nvcc": 324, "nvptx": [289, 325, 367], "nvvm": 367, "nwchem": 386, "o": [289, 358, 366, 393, 418], "objc": 357, "objdump": 315, "object": [275, 281, 286, 314, 315, 318, 340, 341, 357, 361, 383, 384, 393, 398, 415, 432, 443], "objectsiz": 357, "obtaining": [324, 330], "ocaml": 339, "occurrent": 323, "of": [2, 273, 274, 277, 282, 284, 287, 288, 289, 290, 291, 323, 326, 328, 330, 335, 337, 338, 339, 340, 341, 343, 344, 351, 355, 357, 359, 360, 365, 367, 381, 383, 384, 385, 388, 389, 390, 412, 413, 414, 418, 433, 434, 442, 443], "off": 274, "offen": 273, "official": [325, 350], "offset": [357, 411], "offset12": 273, "offset13": 273, "offset16": 273, "offset8": 273, "offsetof": [434, 442], "often": 340, "omod": 273, "omp2012": 386, "one": [335, 340, 381, 385], "ongoing": 412, "only": [381, 383], "onlyreadsmemory": 277, "op_sel": 273, "op_sel_h": 273, "opaqu": 357, "opcod": [271, 272], "open": [335, 388], "openbenchmarking": 386, "opencl": 275, "opencv": 386, "openmp": 386, "oper": [299, 337, 357, 383], "operand": [271, 272, 273, 274, 275, 357, 362, 396, 398, 413], "operating": 275, "operator": [274, 430, 431, 440, 441], "opt": [33, 126, 218, 321, 323, 338, 368, 414], "optimiz": [275, 278, 289, 321, 324, 344, 347, 352, 360, 365, 368, 381, 393, 407, 421, 428, 434, 438, 442], "optimizer": 335, "optimizing": 421, "option": [275, 287, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 334, 359, 383, 391, 409], "optional": [341, 364, 371], "optioncategory": 323, "optparserdef": 401, "or": [291, 323, 335, 357, 385], "orc": 421, "order": [275, 291, 357, 410, 417, 418], "ordering": [278, 280, 291, 337, 357], "org": 386, "organiz": [356, 399, 409], "os": [275, 325], "other": [277, 283, 286, 288, 291, 316, 323, 325, 335, 337, 340, 343, 348, 357, 367, 383, 409, 434, 442], "out": [287, 340, 420], "output": [296, 301, 323, 357, 359, 364, 408, 418], "outsid": 278, "over": [291, 337, 383], "overflow": [340, 357], "overhead": 398, "overloading": 324, "overrid": 277, "overridden": 366, "overview": [277, 281, 288, 291, 327, 328, 331, 332, 339, 341, 342, 354, 356, 357, 362, 367, 384, 389, 396, 398, 408, 409, 410, 419], "owned": 383, "owner": 330, "p": 358, "packaging": 380, "packedvector": 383, "packet": 289, "packetiz": 289, "pag": [335, 350], "pal": 275, "parallel": [359, 386], "parallel_access": 357, "param": [34, 127, 219, 327], "paramattr_block": 281, "paramattr_code_entry": 281, "paramattr_code_entry_old": 281, "paramattr_group_block": 281, "paramattr_grp_code_entry": 281, "paramet": 357, "parameter": 367, "parboil": 386, "parent": 332, "parenthes": 291, "parr": 386, "pars": [289, 323, 426, 429, 436, 439], "parsec": 386, "parsecommandlineopt": 323, "parseenvironmentopt": 323, "parser": 323, "parsing": [289, 323, 426, 436], "partial": [381, 412], "partit": 381, "pass": [277, 287, 327, 336, 337, 362, 366, 368, 381, 398, 410, 414, 428, 438], "passed": [348, 381], "passing": 383, "passmanag": 414, "patch": [326, 330, 341, 350, 396], "patchpoint": 396, "patent": 330, "path": 357, "patleaf": 343, "pattern": [273, 292, 381], "pcmark": 357, "pdb": [316, 371, 372, 376, 377, 378, 379], "pdb2yaml": 316, "pdbutil": 316, "per": 422, "perform": [313, 337, 386, 412], "personality": 357, "pgo": [276, 347], "phabricator": 382, "phas": [289, 360, 413], "phi": [357, 365], "philosophy": [285, 360, 393], "physical": 289, "picking": 383, "piec": 326, "pipelin": 343, "plac": [365, 381, 384], "placesafepoint": 398, "plan": [385, 387], "planned": 414, "planning": 387, "platform": [287, 325, 335, 409, 415], "plugin": [339, 344], "point": [274, 275, 298, 327, 334, 339, 340, 357, 383, 396, 412], "pointer": [277, 291, 357, 398, 412], "pointstoconstantmemory": 277, "poison": 357, "polic": 330, "policy": 330, "polybench": 386, "polymag": 386, "polymorphic": 383, "pool": 362, "portabl": [291, 335, 399, 434, 442], "porting": 343, "posit": 323, "positional": 323, "possibilit": 323, "possibl": [291, 366], "post": [381, 385], "postdom": 381, "postdomfronti": 381, "postdomin": 381, "postdomtre": 381, "potential": 382, "pow": [343, 357], "powerpc": [289, 325, 388], "practic": 337, "pragm": 412, "pre": [296, 389], "preassigned": 289, "precis": [357, 365, 381], "predecessor": 383, "predefined": 275, "predicat": [291, 343, 362], "preemption": 357, "pref": [291, 337], "prefetch": 357, "prefix": [292, 357], "preincr": 291, "preliminar": 413, "prepar": 361, "preprocessing": 404, "prerequisit": [324, 348, 413], "present": 366, "preserv": 393, "pretty": 316, "preview": 385, "prim": 288, "primit": [281, 403], "print": [277, 303, 381, 413, 414], "privat": 291, "prob": 334, "probability": 282, "problem": [280, 341, 342, 359, 402, 414, 431, 433, 441], "process": [289, 350, 366, 387, 389, 419, 424], "processing": [289, 386], "processor": [275, 386], "product": 284, "prof": 357, "profdat": 317, "profil": [317, 334, 347, 357, 359, 381, 407], "program": [275, 289, 298, 384, 405], "programm": 383, "programmatic": 383, "programming": [388, 419], "progress": 343, "project": [287, 288, 302, 341, 344, 356, 384, 385, 388], "prolog": [275, 289], "prologu": 357, "promis": 327, "promot": [381, 413], "propag": 381, "propagating": 383, "properly": 291, "propert": [275, 337, 393, 434, 442], "proposal": [385, 393, 419], "proto": 338, "prototyp": 381, "provid": 291, "prun": 381, "pseudo": 328, "pseudolowering": 401, "ptr": [357, 367], "ptrtoint": [340, 357], "ptx": 367, "ptxas": 367, "public": [350, 377, 383], "publiqu": 324, "putting": 432, "pwm": 386, "py": 389, "q": 359, "qemu": 348, "qualif": 350, "qualify": 335, "quality": [330, 398], "query": 381, "question": [290, 335], "queu": 275, "quick": [287, 323, 328, 339, 409, 414], "quickly": 341, "quickstart": [344, 395, 407], "r": 358, "r128": 273, "raj": 386, "random": [319, 338, 366], "randomness": 391, "rang": [291, 328, 357, 383], "rational": [340, 357], "raw": 398, "raw_ostream": 291, "rawspeed": 386, "read": [318, 339, 360, 367, 385], "read_regist": 357, "readabl": 291, "readcyclecount": 357, "reading": [339, 367, 413], "readobj": 318, "really": 335, "reassociat": 381, "record": [275, 281, 316, 328, 369, 370, 415, 417], "recording": 398, "recover": 383, "redistribut": 335, "redistributing": 335, "reduc": [357, 381], "reduct": [293, 357, 381, 412], "redund": 381, "ref": [357, 381], "referent": [323, 339, 356, 357, 362, 381, 383, 385, 386, 387, 398, 404], "reflect": 367, "reg2mem": 381, "regbankselect": 343, "region": [328, 381, 398, 414], "regionpass": 414, "regist": [275, 289, 337, 343, 362, 381, 413], "register": [275, 289, 335, 343, 362, 367], "registeranalysisgroup": 414, "registerbankinfo": 343, "registerinfo": 401, "registering": 414, "registr": [413, 414], "regress": [350, 393, 409], "reject": 335, "relat": [357, 413], "related": 387, "relationship": 383, "releas": [278, 350, 357, 388, 389], "releasememory": 414, "relev": 325, "reliabl": 289, "reloc": [275, 334, 398], "relocat": [274, 398], "relocating": 398, "remapping": [305, 361], "remot": 424, "remov": 381, "removeuser": 366, "replac": [343, 381], "replacedirectcaller": 366, "replacewithnewvalu": 277, "replacing": 383, "report": [284, 304, 326, 352, 381, 390], "reporting": [284, 350, 389, 390], "repositor": 385, "repository": 385, "represent": [277, 327, 328, 335, 357, 398], "represented": 289, "representing": [289, 411], "request": 350, "requesting": 382, "requir": [330, 339, 341, 342, 409, 414], "required": [277, 289, 323, 340, 384, 388, 414], "requiring": 327, "resampling": 386, "resolu": 360, "resolving": 284, "resourc": [325, 343], "respons": [277, 323, 381], "rest": [426, 436], "restrict": 332, "restricted": 337, "result": [277, 296, 398, 407], "resum": [327, 357], "resuming": 359, "ret": 357, "retain": 357, "retainautoreleas": 357, "retainautoreleasedreturnvalu": 357, "retainautoreleasereturnvalu": 357, "retainblock": 357, "retir": 313, "return": 291, "returnaddress": 357, "returning": 383, "revers": 412, "review": [330, 382], "reviewer": 382, "reviewing": 382, "revis": 385, "rewritestatepointsforgc": 398, "rgpassmanag": 414, "rich": 364, "right": 383, "rint": 357, "risc": 325, "roadmap": 387, "rodini": 386, "root": 339, "rotat": 381, "round": 357, "rounding": 275, "routin": 383, "row_mask": 273, "rt": 348, "rtti": [291, 351], "rul": [340, 343, 350, 351, 357], "run": 296, "running": [338, 349, 359, 367, 405, 407, 408, 414], "runonbasicblock": 414, "runonfunct": 414, "runonloop": 414, "runonmachinefunct": 414, "runonmodul": [366, 414], "runonregion": 414, "runonscc": 414, "runtim": [332, 357, 412, 415], "sadd": 357, "saddr": [224, 225], "saf": [339, 383], "safepoint": 398, "safety": [381, 397, 434, 442], "sam": [292, 383], "sampl": [328, 354], "sampler": 275, "sat": 357, "satur": 357, "sav": 327, "sbas": [8, 9, 86, 87, 180, 181, 182], "scal": 282, "scalar": [381, 418], "scalarenumerationtrait": 418, "scalarevolu": 381, "scatt": [357, 412], "scc": [274, 381], "sccp": 381, "scev": [277, 381], "scheduling": [289, 413], "scop": [275, 288, 357, 403], "scoping": 393, "scratch": 275, "script": [347, 389], "scripting": 288, "scudo": 391, "sdat": [133, 134, 135, 192, 193, 194, 227, 228, 229], "sdiv": 357, "sdnod": 343, "sdst": [39, 40, 41, 42, 43, 44, 45, 46, 136, 137, 138, 139, 140, 141, 142, 143, 230, 231, 232, 233, 234, 235, 236, 237], "sdwa": 273, "search": [366, 386], "searchablet": 401, "section": [275, 334, 336, 371, 395, 396, 417], "segmented": [289, 392], "seh": 332, "select": [285, 289, 296, 343, 357], "selecting": [323, 347], "selectiondag": [289, 333, 343, 413], "selector": 413, "self": [291, 335], "semantic": [327, 337, 357, 367, 396, 398, 399], "sending": 341, "sentinel": 383, "sequenc": [275, 418], "sequential": 383, "sequentiallyconsistent": 278, "ser": 282, "serializ": 343, "serv": 371, "set": [275, 277, 323, 351, 381, 383, 413], "setjmp": 332, "setting": [284, 414], "setup": [351, 427, 433, 437], "setvector": 383, "setversionprint": 323, "sext": [273, 337, 357], "sgpr": 275, "sh": 389, "shad": 275, "shadow": 339, "shared": 380, "shl": 357, "should": [331, 335, 366], "show": [304, 317, 335], "sht_llvm_addrsig": 334, "sht_llvm_call_graph_profil": 334, "shufflevector": 357, "sibling": 289, "sideeffect": 357, "sign": 382, "signal": 275, "signed": 281, "signific": 334, "simd": 386, "simm21": 274, "simpl": [357, 367, 381, 383], "simplif": 398, "simplify": [291, 381, 383], "simplifycfg": [335, 381], "simplifying": 362, "sin": 357, "singl": [275, 357, 381, 385], "sink": 381, "sinking": 381, "sit": 383, "sitofp": 357, "siz": [272, 289, 327, 331, 383], "sized": 392, "sizeof": [434, 442], "sjlj": 332, "skipping": 368, "slambench": 386, "slc": 273, "slightly": 383, "slot": 381, "slp": 412, "smallbitvector": 383, "smallptrset": 383, "smallset": 383, "smallstring": 383, "smallvector": 383, "smax": 357, "smem": [1, 2, 273, 275], "smin": 357, "smrd": [0, 273, 275], "smul": 357, "snippet": 309, "so": 359, "soffset": [31, 32, 123, 124, 125, 215, 216, 217], "soft": [348, 399], "softwar": [341, 342], "solut": [359, 366], "someon": 382, "sommair": 351, "sop1": [0, 1, 2, 275], "sop2": [0, 1, 2, 275], "sopc": [0, 1, 2, 275], "sopk": [0, 1, 2], "sopp": [0, 1, 2, 275], "sorted": 383, "sorting": [291, 316], "sourc": [275, 287, 291, 320, 328, 335, 341, 357, 384, 388, 393, 433], "spac": [275, 289, 291, 340, 367], "spanning": 386, "sparc": 325, "spars": 381, "sparsebitvector": 383, "sparsemultiset": 383, "sparseset": 383, "spec": 386, "special": [367, 415], "specialised": 357, "specialized": 357, "specif": 399, "specifi": 357, "specific": [287, 289, 297, 299, 313, 334, 337, 393, 409, 410, 434, 442], "specified": [277, 323], "specify": 337, "specifying": [323, 339, 414], "sphinx": 395, "sponentry": 357, "sqrt": 357, "src": [48, 49, 50, 51, 52, 53, 54, 145, 146, 147, 148, 239, 240, 241, 242], "src0_sel": 273, "src1_sel": 273, "sreg": 367, "srem": 357, "sro": 381, "srsrc": [36, 37, 130, 131, 222, 223], "ssa": [289, 335, 381], "ssa_copy": 357, "ssamp": [38, 132, 226], "ssca": 386, "ssrc": [56, 57, 58, 59, 60, 61, 62, 63, 64, 150, 151, 152, 153, 154, 155, 156, 157, 158, 244, 245, 246, 247, 248, 249, 250, 251, 252], "ssub": 357, "stabl": 331, "stack": [289, 334, 339, 357, 381, 392, 396, 397, 398, 416, 434, 442], "stackguard": 357, "stacklet": 392, "stackmap": [396, 398], "stackprotector": 357, "stackrestor": 357, "stacksav": 357, "stag": [276, 313, 348], "standard": [281, 291, 299, 324, 327, 341, 357, 383, 386, 393, 399], "start": [287, 289, 323, 328, 339, 357, 409, 414], "started": [341, 342, 359, 368], "starting": 420, "startup": 359, "stashing": 385, "stat": [275, 283, 366, 383], "stateless": 381, "statepoint": [339, 357, 398], "static": [291, 297], "statically": 381, "statistic": [313, 383, 414], "status": [292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 313, 314, 317, 318, 319, 320, 321, 322], "statut": [382, 398], "stay": 330, "std": [291, 324, 383], "stderr": 381, "steen": 277, "step": [345, 357, 385, 413, 416], "stepping": 275, "still": 337, "stor": [289, 313, 335, 337, 357, 381], "storag": [323, 357, 383], "storestrong": 357, "storeweak": 357, "strateg": 339, "strategy": 357, "straw": 385, "stream": [316, 371, 372, 373, 374, 375, 376, 377, 378, 379], "strength": 381, "stress": 319, "string": [328, 357, 383], "stringerror": 383, "stringmap": 383, "stringref": 383, "stringset": 383, "strip": [357, 381], "strtab_block": 281, "struct": [291, 340, 357], "structur": [327, 357, 362, 365, 366, 383, 407, 409, 410, 412], "structural": 306, "structured": 338, "studio": 342, "stuff": 335, "styl": [277, 291, 334, 351, 357, 384], "sub": [328, 357, 385], "subcl": 383, "subclass": 413, "subcommand": 316, "subdirector": 384, "subm": [326, 352], "submitting": 330, "subregist": 362, "subsect": 395, "substitu": [296, 409], "substream": [371, 374], "subsubsect": 395, "subsystem": 419, "subtarget": [401, 413], "subvers": 382, "successor": [362, 383], "suffic": 272, "suit": [296, 341, 386, 389, 407, 408, 409], "summary": [280, 301, 316, 340, 341, 357], "superblock": 375, "supplied": 359, "support": [289, 324, 332, 335, 343, 359, 398, 399, 404, 413, 428, 438], "supported": [283, 289, 291, 335, 357, 396, 398], "suspend": 327, "svn": 341, "switch": [283, 291, 357], "switchinst": [283, 381], "symbol": [274, 275, 294, 314, 316, 360, 362, 369, 372, 374, 377, 381], "symboliz": 320, "sync": 275, "synops": [292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "syntax": [0, 1, 2, 272, 273, 274, 292, 327, 334, 357, 367, 396, 398, 403, 404, 405, 426, 436, 444], "system": [275, 341, 342, 357, 399, 400, 403], "systemz": [325, 388], "tabl": [275, 289, 314, 332, 334, 362, 385, 393, 411, 443], "tableau": 419, "tablegen": [289, 401, 402, 403, 404, 405, 406], "tag": [328, 350, 393, 418], "tagging": [350, 383], "tail": [289, 381], "tailcallelim": 381, "target": [275, 289, 298, 322, 330, 332, 334, 340, 343, 348, 357, 359, 362, 367, 381, 388, 413, 432, 434, 442], "targetdat": 381, "targetframelowering": 289, "targetinstrinfo": [289, 413], "targetjitinfo": 289, "targetlowering": 289, "targetmachin": 289, "targetregisterinfo": [289, 413], "targetsubtarget": 289, "task": [350, 383], "tba": [274, 357], "tblgen": 322, "tel": 340, "templat": [357, 383, 395, 403], "terminator": 357, "terminology": [282, 341], "test": [287, 293, 296, 330, 341, 348, 357, 386, 389, 393, 407, 408, 409], "testing": [348, 350, 359, 362, 393, 397, 409, 411], "text": [275, 323], "tfe": 273, "tgt": [65, 159, 253], "than": 340, "that": [324, 335, 340], "the": [277, 287, 289, 291, 292, 323, 328, 332, 335, 336, 337, 339, 340, 341, 342, 344, 347, 348, 350, 351, 355, 357, 358, 359, 365, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 393, 398, 403, 405, 407, 408, 412, 413, 414, 416, 421, 425, 426, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442], "then": [429, 439], "ther": 335, "thing": [335, 337], "thinlto": 357, "this": [335, 337, 340, 359, 366, 385, 388, 395, 431, 433, 441], "thought": [427, 437], "thread": [275, 357, 383], "threading": 381, "threshold": 416, "through": 291, "throw": [332, 399], "thumb": 351, "tidbit": [434, 442], "tim": [291, 344, 352, 360, 365, 433], "timelin": [313, 350], "tinyptrvector": 383, "tip": [279, 337, 434, 442], "tir": [430, 440], "tma": 274, "to": [277, 282, 285, 289, 291, 313, 322, 323, 326, 331, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 366, 367, 368, 376, 381, 383, 385, 388, 389, 395, 401, 418, 421, 423, 427, 432, 437], "togeth": 432, "token": [332, 357], "tool": [285, 286, 293, 295, 305, 311, 317, 335, 338, 341, 342, 383, 415, 416], "toolchain": [330, 341], "top": [323, 404], "topic": [287, 383, 443], "toy": 359, "tpi": [373, 378], "trac": [415, 416, 417], "tracing": 359, "tradeoff": 365, "trampolin": 357, "transform": [277, 327, 343, 381, 410], "transit": [332, 357, 398], "trap": [274, 275, 357], "traversal": 383, "tre": [381, 384, 386, 426, 436], "treat": 291, "treating": 383, "triaging": 284, "trick": [434, 442], "trip": 412, "tripl": [275, 289, 357, 367], "trivial": [428, 438], "troph": 359, "troubleshooting": 348, "trunc": 357, "try": [332, 348], "tscwrap": 417, "ttmp": 274, "tuning": 297, "turn": [291, 335], "turning": 383, "tutorial": [292, 367, 425, 434, 435, 442, 443], "tvm": 386, "twin": 383, "two": [289, 340], "typ": [66, 160, 254, 272, 274, 275, 288, 291, 316, 328, 333, 337, 340, 343, 357, 370, 371, 381, 383, 403, 404, 411, 412, 413, 418], "type_block": 281, "type_code_array": 281, "type_code_doubl": 281, "type_code_float": 281, "type_code_fp128": 281, "type_code_funct": 281, "type_code_function_old": 281, "type_code_half": 281, "type_code_integ": 281, "type_code_label": 281, "type_code_metadat": 281, "type_code_numentry": 281, "type_code_opaqu": 281, "type_code_point": 281, "type_code_ppc_fp128": 281, "type_code_struct_anon": 281, "type_code_struct_nam": 281, "type_code_struct_named": 281, "type_code_vector": 281, "type_code_void": 281, "type_code_x86_fp80": 281, "type_code_x86_mmx": 281, "typecheckedloadconstvcall": 357, "typecheckedloadvcall": 357, "typeid": 332, "typeidinfo": 357, "typetest": 357, "typetestassumeconstvcall": 357, "typetestassumevcall": 357, "uadd": 357, "udiv": 357, "uglygep": 340, "uimm20": 274, "uimm21": 274, "uimm32": 274, "uimm8": 274, "uitofp": 357, "umax": 357, "umbrel": 385, "umin": 357, "umul": 357, "unabbrev_record": 281, "unary": [274, 357, 430, 440], "undef": 335, "undefined": [357, 367], "underlying": 340, "understand": 335, "unify": 381, "uniqu": 418, "uniquevector": 383, "unit": [289, 313, 433], "university": 335, "unknown": 412, "unnecessary": 291, "unordered": [278, 357], "unorm": 273, "unpacking": 341, "unpredict": 357, "unreach": [335, 357], "unroll": [357, 381, 410], "unroll_and_jam": 357, "unrolling": [410, 412], "unspecified": 275, "unswitch": 381, "unused": [381, 399], "unwindless": 381, "up": [275, 335, 351, 382, 414], "updat": [350, 385], "updating": [277, 330, 365, 385], "urem": 357, "usag": [285, 287, 317, 331, 344, 355, 359, 368, 391, 396, 412], "use": [291, 335, 337, 340, 348, 353, 354, 357, 359, 365, 381, 383, 399], "used": [287, 289, 357, 381], "useful": [277, 288, 383, 434, 442], "user": [275, 297, 359, 367, 381, 383, 418, 419, 430, 431, 440, 441], "using": [277, 280, 285, 289, 291, 313, 324, 332, 335, 338, 339, 341, 342, 344, 347, 348, 349, 368, 383, 388, 393, 411, 414, 415, 421, 423], "usub": 357, "util": 341, "utilit": 338, "utility": [302, 381, 393, 398, 418], "v": [274, 288, 323, 324, 325], "v2": 275, "v3": 275, "v_mad_mix": 273, "va_arg": 357, "va_copy": 357, "va_end": 357, "va_start": 357, "vaddr": [3, 4, 5, 6, 81, 82, 83, 84, 175, 176, 177, 178, 256, 257], "valid": 418, "validat": 389, "valu": [275, 323, 335, 340, 357, 359, 362, 366, 368, 381, 383, 393, 403, 404, 418], "value_symtab_block": 281, "valuemap": 383, "valuesymbolt": 383, "var": 357, "vari": 385, "variabl": [281, 287, 288, 289, 291, 292, 334, 357, 381, 384, 392, 393, 412, 431, 433, 441], "various": 381, "vbr": 281, "vcc": [68, 162, 258, 274], "vccz": 274, "vdat": [12, 13, 14, 15, 16, 17, 69, 70, 71, 72, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 163, 164, 165, 166, 185, 186, 187, 188, 189, 190, 191, 259, 260, 261, 262], "vdst": [18, 19, 20, 21, 22, 23, 24, 25, 73, 74, 75, 76, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 167, 168, 169, 170, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 263, 264, 265, 266], "vecmathlib": 386, "vector": [340, 343, 357, 383], "vectoriz": [357, 381, 387, 410, 412], "vendor": 275, "verif": [286, 398], "verifi": [292, 335, 381], "verify": [308, 381], "vers": 383, "version": [291, 329, 350, 359, 388], "versioning": 410, "vgpr": 275, "vi": [341, 382, 407], "vic": 383, "view": [288, 313, 381, 416], "viewing": 383, "vintrp": [0, 1, 2, 273], "virtual": [289, 291, 335, 343, 399, 411], "visibility": 357, "visual": [287, 342], "visualiz": 416, "vla": 340, "vliw": 289, "vm": 273, "void": [357, 366], "volatil": 357, "vop1": [0, 1, 2, 273], "vop2": [0, 1, 2, 273], "vop3": [0, 1, 2, 273], "vop3p": [2, 273], "vopc": [0, 1, 2, 273], "vp": 357, "vplan": 387, "vsrc": [55, 77, 78, 79, 149, 171, 172, 173, 243, 267, 268, 269], "waitcnt": [80, 174, 270], "walk": 365, "wallclocktim": 417, "warning": [291, 333, 381], "way": [326, 340, 383], "waymarking": 383, "we": [284, 366], "web": 382, "webassembly": 388, "websit": 350, "weight": [282, 283], "weighted": 317, "wel": 357, "what": [285, 335, 337, 339, 340, 359, 366, 385, 390, 414], "when": [285, 291, 335, 337, 359], "wher": 335, "wherev": 291, "wheth": 323, "which": [277, 331, 340], "whil": 383, "whitespac": 291, "why": [331, 335, 340, 359, 385, 431, 433, 441], "wid": 419, "widen": 357, "widening": 357, "width": [281, 291, 337, 357], "window": [325, 332, 334, 359], "wis": 357, "with": [284, 287, 291, 323, 324, 329, 335, 339, 340, 341, 342, 344, 347, 357, 366, 367, 381, 382, 383, 385, 393, 412, 414, 416, 420, 443], "without": [335, 385], "won": 395, "word": 281, "work": [275, 313, 326, 340, 343, 366, 397, 415], "workflow": [385, 387], "working": [284, 393], "world": 414, "wrapp": 281, "wrapper": 288, "writ": [291, 313, 335, 339, 385, 401], "write_regist": 357, "writer": 325, "writing": [277, 289, 323, 338, 339, 340, 384, 408, 409, 413, 414], "written": 335, "x": [325, 340, 386], "x86": [289, 325, 334, 388], "x86_64": 349, "x86_mmx": 357, "x86evex2vex": 401, "xcor": 325, "xnack": 274, "xor": 357, "xray": [415, 416, 417], "yaml": 418, "yaml2obj": 444, "yaml2pdb": 316, "you": [390, 395], "your": [287, 345, 351, 383, 414, 415], "yourself": 365, "zero": 332, "zext": [337, 357], "zig": 388, "\u00c0": [287, 323, 351, 427]}})