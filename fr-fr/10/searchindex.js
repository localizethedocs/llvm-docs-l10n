Search.setIndex({"alltitles": {"!vcall_visibility Metadata": [[611, "vcall-visibility-metadata"]], "#0 - BLOCKINFO Block": [[447, "blockinfo-block"]], "#include <iostream> is Forbidden": [[459, "include-iostream-is-forbidden"]], "#include Style": [[459, "include-style"]], "#include as Little as Possible": [[459, "include-as-little-as-possible"]], "-aa-eval: Exhaustive Alias Analysis Precision Evaluator": [[577, "aa-eval-exhaustive-alias-analysis-precision-evaluator"]], "-adce: Aggressive Dead Code Elimination": [[577, "adce-aggressive-dead-code-elimination"]], "-aggressive-instcombine: Combine expression patterns": [[577, "aggressive-instcombine-combine-expression-patterns"]], "-always-inline: Inliner for always_inline functions": [[577, "always-inline-inliner-for-always-inline-functions"]], "-argpromotion: Promote \u201cby reference\u201d arguments to scalars": [[577, "argpromotion-promote-by-reference-arguments-to-scalars"]], "-basicaa: Basic Alias Analysis (stateless AA impl)": [[577, "basicaa-basic-alias-analysis-stateless-aa-impl"]], "-basiccg: Basic CallGraph Construction": [[577, "basiccg-basic-callgraph-construction"]], "-bb-vectorize: Basic-Block Vectorization": [[577, "bb-vectorize-basic-block-vectorization"]], "-block-placement: Profile Guided Basic Block Placement": [[577, "block-placement-profile-guided-basic-block-placement"]], "-break-crit-edges: Break critical edges in CFG": [[577, "break-crit-edges-break-critical-edges-in-cfg"]], "-codegenprepare: Optimize for code generation": [[577, "codegenprepare-optimize-for-code-generation"]], "-constmerge: Merge Duplicate Global Constants": [[577, "constmerge-merge-duplicate-global-constants"]], "-constprop: Simple constant propagation": [[577, "constprop-simple-constant-propagation"]], "-count-aa: Count Alias Analysis Query Responses": [[577, "count-aa-count-alias-analysis-query-responses"]], "-da: Dependence Analysis": [[577, "da-dependence-analysis"]], "-dce: Dead Code Elimination": [[577, "dce-dead-code-elimination"]], "-deadargelim: Dead Argument Elimination": [[577, "deadargelim-dead-argument-elimination"]], "-deadarghaX0r: Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)": [[577, "deadarghax0r-dead-argument-hacking-bugpoint-use-only-do-not-use"]], "-deadtypeelim: Dead Type Elimination": [[577, "deadtypeelim-dead-type-elimination"]], "-debug-aa: AA use debugger": [[577, "debug-aa-aa-use-debugger"]], "-die: Dead Instruction Elimination": [[577, "die-dead-instruction-elimination"]], "-domfrontier: Dominance Frontier Construction": [[577, "domfrontier-dominance-frontier-construction"]], "-domtree: Dominator Tree Construction": [[577, "domtree-dominator-tree-construction"]], "-dot-callgraph: Print Call Graph to \u00ab\u00a0dot\u00a0\u00bb file": [[577, "dot-callgraph-print-call-graph-to-dot-file"]], "-dot-cfg-only: Print CFG of function to \u00ab\u00a0dot\u00a0\u00bb file (with no function bodies)": [[577, "dot-cfg-only-print-cfg-of-function-to-dot-file-with-no-function-bodies"]], "-dot-cfg: Print CFG of function to \u00ab\u00a0dot\u00a0\u00bb file": [[577, "dot-cfg-print-cfg-of-function-to-dot-file"]], "-dot-dom-only: Print dominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file (with no function bodies)": [[577, "dot-dom-only-print-dominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-dom: Print dominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file": [[577, "dot-dom-print-dominance-tree-of-function-to-dot-file"]], "-dot-postdom-only: Print postdominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file (with no function bodies)": [[577, "dot-postdom-only-print-postdominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-postdom: Print postdominance tree of function to \u00ab\u00a0dot\u00a0\u00bb file": [[577, "dot-postdom-print-postdominance-tree-of-function-to-dot-file"]], "-dse: Dead Store Elimination": [[577, "dse-dead-store-elimination"]], "-extract-blocks: Extract Basic Blocks From Module (for bugpoint use)": [[577, "extract-blocks-extract-basic-blocks-from-module-for-bugpoint-use"]], "-functionattrs: Deduce function attributes": [[577, "functionattrs-deduce-function-attributes"]], "-globaldce: Dead Global Elimination": [[577, "globaldce-dead-global-elimination"]], "-globalopt: Global Variable Optimizer": [[577, "globalopt-global-variable-optimizer"]], "-globalsmodref-aa: Simple mod/ref analysis for globals": [[577, "globalsmodref-aa-simple-mod-ref-analysis-for-globals"]], "-gvn: Global Value Numbering": [[577, "gvn-global-value-numbering"]], "-indvars: Canonicalize Induction Variables": [[577, "indvars-canonicalize-induction-variables"]], "-inline: Function Integration/Inlining": [[577, "inline-function-integration-inlining"]], "-instcombine: Combine redundant instructions": [[577, "instcombine-combine-redundant-instructions"]], "-instcount: Counts the various types of Instructions": [[577, "instcount-counts-the-various-types-of-instructions"]], "-instnamer: Assign names to anonymous instructions": [[577, "instnamer-assign-names-to-anonymous-instructions"]], "-internalize: Internalize Global Symbols": [[577, "internalize-internalize-global-symbols"]], "-intervals: Interval Partition Construction": [[577, "intervals-interval-partition-construction"]], "-ipconstprop: Interprocedural constant propagation": [[577, "ipconstprop-interprocedural-constant-propagation"]], "-ipsccp: Interprocedural Sparse Conditional Constant Propagation": [[577, "ipsccp-interprocedural-sparse-conditional-constant-propagation"]], "-iv-users: Induction Variable Users": [[577, "iv-users-induction-variable-users"]], "-jump-threading: Jump Threading": [[577, "jump-threading-jump-threading"]], "-lazy-value-info: Lazy Value Information Analysis": [[577, "lazy-value-info-lazy-value-information-analysis"]], "-lcssa: Loop-Closed SSA Form Pass": [[577, "lcssa-loop-closed-ssa-form-pass"]], "-libcall-aa: LibCall Alias Analysis": [[577, "libcall-aa-libcall-alias-analysis"]], "-licm: Loop Invariant Code Motion": [[577, "licm-loop-invariant-code-motion"]], "-lint: Statically lint-checks LLVM IR": [[577, "lint-statically-lint-checks-llvm-ir"]], "-loop-deletion: Delete dead loops": [[577, "loop-deletion-delete-dead-loops"]], "-loop-extract-single: Extract at most one loop into a new function": [[577, "loop-extract-single-extract-at-most-one-loop-into-a-new-function"]], "-loop-extract: Extract loops into new functions": [[577, "loop-extract-extract-loops-into-new-functions"]], "-loop-reduce: Loop Strength Reduction": [[577, "loop-reduce-loop-strength-reduction"]], "-loop-rotate: Rotate Loops": [[577, "loop-rotate-rotate-loops"]], "-loop-simplify: Canonicalize natural loops": [[577, "loop-simplify-canonicalize-natural-loops"]], "-loop-unroll-and-jam: Unroll and Jam loops": [[577, "loop-unroll-and-jam-unroll-and-jam-loops"]], "-loop-unroll: Unroll loops": [[577, "loop-unroll-unroll-loops"]], "-loop-unswitch: Unswitch loops": [[577, "loop-unswitch-unswitch-loops"]], "-loops: Natural Loop Information": [[577, "loops-natural-loop-information"]], "-loweratomic: Lower atomic intrinsics to non-atomic form": [[577, "loweratomic-lower-atomic-intrinsics-to-non-atomic-form"]], "-lowerinvoke: Lower invokes to calls, for unwindless code generators": [[577, "lowerinvoke-lower-invokes-to-calls-for-unwindless-code-generators"]], "-lowerswitch: Lower SwitchInsts to branches": [[577, "lowerswitch-lower-switchinsts-to-branches"]], "-mem2reg: Promote Memory to Register": [[577, "mem2reg-promote-memory-to-register"]], "-memcpyopt: MemCpy Optimization": [[577, "memcpyopt-memcpy-optimization"]], "-memdep: Memory Dependence Analysis": [[577, "memdep-memory-dependence-analysis"]], "-mergefunc: Merge Functions": [[577, "mergefunc-merge-functions"]], "-mergereturn: Unify function exit nodes": [[577, "mergereturn-unify-function-exit-nodes"]], "-module-debuginfo: Decodes module-level debug info": [[577, "module-debuginfo-decodes-module-level-debug-info"]], "-partial-inliner: Partial Inliner": [[577, "partial-inliner-partial-inliner"]], "-postdomfrontier: Post-Dominance Frontier Construction": [[577, "postdomfrontier-post-dominance-frontier-construction"]], "-postdomtree: Post-Dominator Tree Construction": [[577, "postdomtree-post-dominator-tree-construction"]], "-print-alias-sets: Alias Set Printer": [[577, "print-alias-sets-alias-set-printer"]], "-print-callgraph-sccs: Print SCCs of the Call Graph": [[577, "print-callgraph-sccs-print-sccs-of-the-call-graph"]], "-print-callgraph: Print a call graph": [[577, "print-callgraph-print-a-call-graph"]], "-print-cfg-sccs: Print SCCs of each function CFG": [[577, "print-cfg-sccs-print-sccs-of-each-function-cfg"]], "-print-dom-info: Dominator Info Printer": [[577, "print-dom-info-dominator-info-printer"]], "-print-externalfnconstants: Print external fn callsites passed constants": [[577, "print-externalfnconstants-print-external-fn-callsites-passed-constants"]], "-print-function: Print function to stderr": [[577, "print-function-print-function-to-stderr"]], "-print-module: Print module to stderr": [[577, "print-module-print-module-to-stderr"]], "-print-used-types: Find Used Types": [[577, "print-used-types-find-used-types"]], "-prune-eh: Remove unused exception handling info": [[577, "prune-eh-remove-unused-exception-handling-info"]], "-reassociate: Reassociate expressions": [[577, "reassociate-reassociate-expressions"]], "-reg2mem: Demote all values to stack slots": [[577, "reg2mem-demote-all-values-to-stack-slots"]], "-regions: Detect single entry single exit regions": [[577, "regions-detect-single-entry-single-exit-regions"]], "-scalar-evolution: Scalar Evolution Analysis": [[577, "scalar-evolution-scalar-evolution-analysis"]], "-sccp: Sparse Conditional Constant Propagation": [[577, "sccp-sparse-conditional-constant-propagation"]], "-scev-aa: ScalarEvolution-based Alias Analysis": [[577, "scev-aa-scalarevolution-based-alias-analysis"]], "-simplifycfg: Simplify the CFG": [[577, "simplifycfg-simplify-the-cfg"]], "-sink: Code sinking": [[577, "sink-code-sinking"]], "-sroa: Scalar Replacement of Aggregates": [[577, "sroa-scalar-replacement-of-aggregates"]], "-stack-safety: Stack Safety Analysis": [[577, "stack-safety-stack-safety-analysis"]], "-strip-dead-debug-info: Strip debug info for unused symbols": [[577, "strip-dead-debug-info-strip-debug-info-for-unused-symbols"]], "-strip-dead-prototypes: Strip Unused Function Prototypes": [[577, "strip-dead-prototypes-strip-unused-function-prototypes"]], "-strip-debug-declare: Strip all llvm.dbg.declare intrinsics": [[577, "strip-debug-declare-strip-all-llvm-dbg-declare-intrinsics"]], "-strip-nondebug: Strip all symbols, except dbg symbols, from a module": [[577, "strip-nondebug-strip-all-symbols-except-dbg-symbols-from-a-module"]], "-strip: Strip all symbols from a module": [[577, "strip-strip-all-symbols-from-a-module"]], "-tailcallelim: Tail Call Elimination": [[577, "tailcallelim-tail-call-elimination"]], "-targetdata: Target Data Layout": [[577, "targetdata-target-data-layout"]], "-transform-warning: Report missed forced transformations": [[577, "transform-warning-report-missed-forced-transformations"]], "-verify: Module Verifier": [[577, "verify-module-verifier"]], "-view-cfg-only: View CFG of function (with no function bodies)": [[577, "view-cfg-only-view-cfg-of-function-with-no-function-bodies"]], "-view-cfg: View CFG of function": [[577, "view-cfg-view-cfg-of-function"]], "-view-dom-only: View dominance tree of function (with no function bodies)": [[577, "view-dom-only-view-dominance-tree-of-function-with-no-function-bodies"]], "-view-dom: View dominance tree of function": [[577, "view-dom-view-dominance-tree-of-function"]], "-view-postdom-only: View postdominance tree of function (with no function bodies)": [[577, "view-postdom-only-view-postdominance-tree-of-function-with-no-function-bodies"]], "-view-postdom: View postdominance tree of function": [[577, "view-postdom-view-postdominance-tree-of-function"]], ".amd_kernel_code_t": [[440, "amd-kernel-code-t"]], ".amdgcn.gfx_generation_minor": [[440, "amdgcn-gfx-generation-minor"]], ".amdgcn.gfx_generation_number": [[440, "amdgcn-gfx-generation-number"]], ".amdgcn.gfx_generation_stepping": [[440, "amdgcn-gfx-generation-stepping"]], ".amdgcn.next_free_sgpr": [[440, "amdgcn-next-free-sgpr"]], ".amdgcn.next_free_vgpr": [[440, "amdgcn-next-free-vgpr"]], ".amdgcn_target <target>": [[440, "amdgcn-target-target"]], ".amdgpu_hsa_kernel (name)": [[440, "amdgpu-hsa-kernel-name"]], ".amdgpu_metadata": [[440, "amdgpu-metadata"]], ".amdhsa_kernel <name>": [[440, "amdhsa-kernel-name"]], ".cv_def_range Directive": [[513, "cv-def-range-directive"]], ".cv_file Directive": [[513, "cv-file-directive"]], ".cv_filechecksumoffset Directive": [[513, "cv-filechecksumoffset-directive"]], ".cv_filechecksums Directive": [[513, "cv-filechecksums-directive"]], ".cv_fpo_data Directive": [[513, "cv-fpo-data-directive"]], ".cv_func_id Directive": [[513, "cv-func-id-directive"]], ".cv_inline_linetable Directive": [[513, "cv-inline-linetable-directive"]], ".cv_inline_site_id Directive": [[513, "cv-inline-site-id-directive"]], ".cv_linetable Directive": [[513, "cv-linetable-directive"]], ".cv_loc Directive": [[513, "cv-loc-directive"]], ".cv_stringtable Directive": [[513, "cv-stringtable-directive"]], ".hsa_code_object_isa [major, minor, stepping, vendor, arch]": [[440, "hsa-code-object-isa-major-minor-stepping-vendor-arch"]], ".hsa_code_object_version major, minor": [[440, "hsa-code-object-version-major-minor"]], ".kernel.sgpr_count": [[440, "kernel-sgpr-count"]], ".kernel.vgpr_count": [[440, "kernel-vgpr-count"]], ".linker-options Section (linker options)": [[513, "linker-options-section-linker-options"]], ".linkonce Directive": [[513, "linkonce-directive"]], ".o File Writing": [[457, "o-file-writing"]], ".option.machine_version_major": [[440, "option-machine-version-major"]], ".option.machine_version_minor": [[440, "option-machine-version-minor"]], ".option.machine_version_stepping": [[440, "option-machine-version-stepping"]], ".section Directive": [[513, "section-directive"], [513, "id2"]], "10,000 ft View": [[456, "ft-view"]], "3-Stage Non-Determinism": [[442, "stage-non-determinism"]], "6-bit characters": [[447, "bit-characters"]], "<algorithm>": [[502, "algorithm"]], "<deque>": [[579, "deque"]], "<list>": [[579, "list"]], "<map>": [[579, "map"]], "<math.h> and <cmath>": [[502, "math-h-and-cmath"]], "<set>": [[579, "set"]], "<std::complex>": [[502, "std-complex"]], "<vector>": [[579, "vector"]], "A": [[550, "a"]], "A Benchmark for the C/C++ Standard Library": [[583, "a-benchmark-for-the-c-c-standard-library"]], "A Bug to be Aware Of": [[543, "a-bug-to-be-aware-of"]], "A guide to Dockerfiles for building LLVM": [[510, null]], "A sorted \u201cvector\u201d": [[579, "a-sorted-vector"], [579, "dss-sortedvectormap"]], "AAPCS": [[446, "aapcs"]], "AArch64 & ARM": [[503, "aarch64-arm"]], "AArch64 Target": [[540, "aarch64-target"]], "ABI": [[503, "abi"]], "ABI Breaking Checks": [[579, "abi-breaking-checks"]], "ABI Compatibility": [[582, "abi-compatibility"]], "ADDITIONAL OPTIONS": [[464, "additional-options"]], "AFL compatibility": [[551, "afl-compatibility"]], "AMDGPU": [[503, "amdgpu"]], "AMDGPU Address Spaces": [[440, "amdgpu-address-spaces-table"]], "AMDGPU Architectures": [[440, "amdgpu-architecture-table"]], "AMDGPU Attributes": [[440, "amdgpu-attributes"]], "AMDGPU Code Object V2 ELF Note Record Enumeration Values": [[440, "amdgpu-elf-note-record-enumeration-values-table-v2"]], "AMDGPU Code Object V2 ELF Note Records": [[440, "amdgpu-elf-note-records-table-v2"]], "AMDGPU Code Object V3 ELF Note Record Enumeration Values": [[440, "amdgpu-elf-note-record-enumeration-values-table-v3"]], "AMDGPU Code Object V3 ELF Note Records": [[440, "amdgpu-elf-note-records-table-v3"]], "AMDGPU DWARF Address Space Mapping": [[440, "amdgpu-dwarf-address-space-mapping-table"]], "AMDGPU DWARF Line Number Program Header Extended Content Types": [[440, "amdgpu-dwarf-extended-content-types"]], "AMDGPU DWARF Line Number Program Header Extended Content Types Encoding": [[440, "amdgpu-dwarf-extended-content-types-encoding"]], "AMDGPU Debug Options": [[440, "amdgpu-debug-options"]], "AMDGPU EF_AMDGPU_MACH Values": [[440, "amdgpu-ef-amdgpu-mach-table"]], "AMDGPU ELF Header": [[440, "amdgpu-elf-header-table"]], "AMDGPU ELF Header Enumeration Values": [[440, "amdgpu-elf-header-enumeration-values-table"]], "AMDGPU ELF Header e_flags": [[440, "amdgpu-elf-header-e-flags-table"]], "AMDGPU ELF Relocation Records": [[440, "amdgpu-elf-relocation-records-table"]], "AMDGPU ELF Sections": [[440, "amdgpu-elf-sections-table"]], "AMDGPU ELF Symbols": [[440, "amdgpu-elf-symbols-table"]], "AMDGPU Environments": [[440, "amdgpu-environment-table"]], "AMDGPU Instruction Syntax": [[437, null]], "AMDGPU Instructions Notation": [[436, null]], "AMDGPU Intrinsics": [[440, "amdgpu-intrinsics"]], "AMDGPU LLVM IR Attributes": [[440, "amdgpu-llvm-ir-attributes-table"]], "AMDGPU Operating Systems": [[440, "amdgpu-os-table"]], "AMDGPU Processors": [[440, "amdgpu-processor-table"]], "AMDGPU Target Features": [[440, "amdgpu-target-feature-table"]], "AMDGPU Trap Handler for AMDHSA OS": [[440, "amdgpu-trap-handler-for-amdhsa-os-table"]], "AMDGPU Trap Handler for Non-AMDHSA OS": [[440, "amdgpu-trap-handler-for-non-amdhsa-os-table"]], "AMDGPU Vendors": [[440, "amdgpu-vendor-table"]], "AMDHSA": [[440, "amdhsa"]], "AMDHSA Code Object V2 Kernel Argument Metadata Map": [[440, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-table-v2"]], "AMDHSA Code Object V2 Kernel Attribute Metadata Map": [[440, "amdgpu-amdhsa-code-object-kernel-attribute-metadata-map-table-v2"]], "AMDHSA Code Object V2 Kernel Code Properties Metadata Map": [[440, "amdgpu-amdhsa-code-object-kernel-code-properties-metadata-map-table-v2"]], "AMDHSA Code Object V2 Kernel Metadata Map": [[440, "amdgpu-amdhsa-code-object-kernel-metadata-map-table-v2"]], "AMDHSA Code Object V2 Metadata Map": [[440, "amdgpu-amdhsa-code-object-metadata-map-table-v2"]], "AMDHSA Code Object V3 Kernel Argument Metadata Map": [[440, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-table-v3"]], "AMDHSA Code Object V3 Kernel Metadata Map": [[440, "amdgpu-amdhsa-code-object-kernel-metadata-map-table-v3"]], "AMDHSA Code Object V3 Metadata Map": [[440, "amdgpu-amdhsa-code-object-metadata-map-table-v3"]], "AMDHSA Kernel Assembler Directives": [[440, "amdhsa-kernel-directives-table"]], "AMDHSA LLVM Sync Scopes": [[440, "amdgpu-amdhsa-llvm-sync-scopes-table"]], "AMDHSA Memory Model Code Sequences GFX6-GFX10": [[440, "amdgpu-amdhsa-memory-model-code-sequences-gfx6-gfx10-table"]], "AMDHSA Memory Model Single Thread Optimization Constraints GFX6-GFX10": [[440, "amdgpu-amdhsa-memory-model-single-thread-optimization-constraints-gfx6-gfx10-table"]], "AMDPAL": [[440, "amdpal"]], "API Reference": [[586, "api-reference"]], "API: InstructionSelector": [[527, "api-instructionselector"]], "API: LegalizerInfo": [[529, "api-legalizerinfo"]], "API: RegisterBankInfo": [[532, "api-registerbankinfo"]], "ARM64/COFF-Dependent": [[513, "arm64-coff-dependent"]], "AST Extensions for If/Then/Else": [[640, "ast-extensions-for-if-then-else"], [651, "ast-extensions-for-if-then-else"]], "AST Extensions for the \u201cfor\u201d Loop": [[640, "ast-extensions-for-the-for-loop"], [651, "ast-extensions-for-the-for-loop"]], "Abandoning a change": [[578, "abandoning-a-change"]], "Abbreviated Record Encoding": [[447, "abbreviated-record-encoding"]], "Abbreviation IDs": [[447, "abbreviation-ids"]], "Abbreviations": [[447, "abbreviations"]], "Absolute Expressions": [[439, "absolute-expressions"]], "Abstract": [[447, "abstract"], [516, "abstract"], [518, "abstract"], [549, "abstract"], [583, "abstract"], [585, "abstract"], [599, "abstract"]], "Abstract Machine Model": [[598, "abstract-machine-model"]], "Accurate Garbage Collection Intrinsics": [[549, "accurate-garbage-collection-intrinsics"]], "Achieving Isolation with LLVMContext": [[579, "achieving-isolation-with-llvmcontext"]], "Acquire": [[444, "acquire"]], "AcquireRelease": [[444, "acquirerelease"]], "Actively working on fixing bugs": [[450, "actively-working-on-fixing-bugs"]], "Add SelectionDAG node types": [[441, "add-selectiondag-node-types"]], "Add documentation and tests": [[441, "add-documentation-and-tests"]], "Add the intrinsic": [[441, "add-the-intrinsic"]], "Adding Finer Granularity": [[564, "adding-finer-granularity"]], "Adding a JIT Compiler": [[639, "adding-a-jit-compiler"], [650, "adding-a-jit-compiler"]], "Adding a derived type": [[512, "adding-a-derived-type"]], "Adding a fundamental type": [[512, "adding-a-fundamental-type"]], "Adding a new SelectionDAG node": [[512, "adding-a-new-selectiondag-node"]], "Adding a new instruction": [[512, "adding-a-new-instruction"]], "Adding a new intrinsic function": [[512, "adding-a-new-intrinsic-function"]], "Adding a new type": [[512, "adding-a-new-type"]], "Adding debug counters to aid in debugging your code": [[579, "adding-debug-counters-to-aid-in-debugging-your-code"]], "Adding freeform text to help output": [[501, "adding-freeform-text-to-help-output"]], "Adding to this document": [[516, "adding-to-this-document"]], "Additional Documentation": [[440, "additional-documentation"]], "Additional Information": [[587, "additional-information"]], "Additional Topics": [[586, "additional-topics"], [612, "additional-topics"]], "Address Computation": [[519, "address-computation"]], "Address Remapping": [[554, "address-remapping"]], "Address Space Conversion": [[562, "address-space-conversion"]], "Address Space Mapping": [[440, "address-space-mapping"]], "Address Spaces": [[440, "address-spaces"], [562, "address-spaces"], [562, "id10"]], "Addresses of Basic Blocks": [[549, "addresses-of-basic-blocks"]], "Adjusting Existing Variables for Mutation": [[642, "adjusting-existing-variables-for-mutation"], [653, "adjusting-existing-variables-for-mutation"]], "Advanced Build Configurations": [[442, null]], "Advanced Concepts": [[506, "advanced-concepts"]], "Advanced Topics": [[579, "advanced-topics"], [655, "advanced-topics"]], "Advanced features": [[551, "advanced-features"]], "Advantages": [[584, "advantages"]], "Advantages:": [[508, "advantages"]], "Advertisement": [[558, "advertisement"]], "Advice for using bugpoint": [[451, "advice-for-using-bugpoint"]], "Advice on Packaging LLVM": [[576, null]], "Aggregate Operations": [[549, "aggregate-operations"]], "Aggregate Types": [[549, "aggregate-types"]], "Aggregates": [[526, "aggregates"]], "Ahead-of-Time Compilation Mode": [[644, "ahead-of-time-compilation-mode"]], "Alias Summary": [[549, "alias-summary"]], "Alias analysis driven transformations": [[443, "alias-analysis-driven-transformations"]], "AliasAnalysis Class Overview": [[443, "aliasanalysis-class-overview"]], "AliasAnalysis chaining behavior": [[443, "aliasanalysis-chaining-behavior"]], "Aliases": [[549, "aliases"]], "Alignment": [[446, "alignment"]], "Alignment and Block Boundaries": [[571, "alignment-and-block-boundaries"]], "Allocating Stacklets": [[592, "allocating-stacklets"]], "Allocator": [[591, "allocator"]], "Allocator Support": [[536, "allocator-support"]], "Alternative Approaches": [[552, "alternative-approaches"]], "Alternative using a cmake cache": [[540, "alternative-using-a-cmake-cache"]], "Ambiguous Transformation Order": [[610, "ambiguous-transformation-order"]], "An Example Using the LLVM Tool Chain": [[521, "an-example-using-the-llvm-tool-chain"], [523, "an-example-using-the-llvm-tool-chain"]], "Analysis Group Concepts": [[615, "analysis-group-concepts"]], "Analysis Passes": [[577, "analysis-passes"]], "Announce the Release": [[542, "announce-the-release"]], "Anonymous Namespaces": [[459, "anonymous-namespaces"]], "Aper\u00e7u": [[576, "overview"]], "Appealing": [[590, "appealing"]], "Apple Clang Builds (A More Complex Bootstrap)": [[442, "apple-clang-builds-a-more-complex-bootstrap"]], "Applications/Libraries": [[583, "applications-libraries"]], "Architecture & Platform Information for Compiler Writers": [[503, null]], "Areas Requiring Attention": [[505, "areas-requiring-attention"]], "Argument Aliases": [[501, "argument-aliases"]], "Argument Handling": [[456, "argument-handling"]], "Arguments": [[549, "id615"], [549, "id620"], [549, "id625"], [549, "id630"], [549, "id635"], [549, "id640"], [549, "id645"], [549, "id650"], [549, "id655"], [549, "id660"]], "Arguments:": [[505, "arguments"], [505, "id4"], [505, "id7"], [505, "id10"], [505, "id13"], [505, "id16"], [505, "id19"], [505, "id21"], [505, "id25"], [505, "id28"], [505, "id31"], [505, "id34"], [505, "id36"], [505, "id38"], [505, "id41"], [505, "id44"], [505, "id48"], [505, "id51"], [549, "arguments"], [549, "id29"], [549, "id34"], [549, "id39"], [549, "id45"], [549, "id50"], [549, "id55"], [549, "id60"], [549, "id65"], [549, "id70"], [549, "id80"], [549, "id85"], [549, "id90"], [549, "id95"], [549, "id100"], [549, "id105"], [549, "id110"], [549, "id115"], [549, "id120"], [549, "id125"], [549, "id130"], [549, "id135"], [549, "id140"], [549, "id145"], [549, "id150"], [549, "id155"], [549, "id160"], [549, "id165"], [549, "id170"], [549, "id175"], [549, "id180"], [549, "id185"], [549, "id190"], [549, "id195"], [549, "id200"], [549, "id205"], [549, "id210"], [549, "id215"], [549, "id220"], [549, "id225"], [549, "id230"], [549, "id235"], [549, "id240"], [549, "id245"], [549, "id250"], [549, "id255"], [549, "id260"], [549, "id265"], [549, "id270"], [549, "id275"], [549, "id280"], [549, "id285"], [549, "id290"], [549, "id295"], [549, "id300"], [549, "id305"], [549, "id310"], [549, "id315"], [549, "id320"], [549, "id325"], [549, "id330"], [549, "id336"], [549, "id342"], [549, "id349"], [549, "id355"], [549, "id359"], [549, "id363"], [549, "id368"], [549, "id372"], [549, "id376"], [549, "id380"], [549, "id390"], [549, "id394"], [549, "id410"], [549, "id414"], [549, "id424"], [549, "id428"], [549, "id432"], [549, "id439"], [549, "id443"], [549, "id447"], [549, "id451"], [549, "id455"], [549, "id459"], [549, "id463"], [549, "id467"], [549, "id471"], [549, "id475"], [549, "id479"], [549, "id483"], [549, "id487"], [549, "id491"], [549, "id495"], [549, "id499"], [549, "id503"], [549, "id507"], [549, "id511"], [549, "id515"], [549, "id519"], [549, "id523"], [549, "id527"], [549, "id531"], [549, "id535"], [549, "id539"], [549, "id543"], [549, "id547"], [549, "id551"], [549, "id555"], [549, "id565"], [549, "id569"], [549, "id573"], [549, "id577"], [549, "id581"], [549, "id585"], [549, "id590"], [549, "id595"], [549, "id600"], [549, "id605"], [549, "id610"], [549, "id667"], [549, "id672"], [549, "id675"], [549, "id679"], [549, "id682"], [549, "id686"], [549, "id689"], [549, "id692"], [549, "id695"], [549, "id698"], [549, "id701"], [549, "id704"], [549, "id707"], [549, "id710"], [549, "id713"], [549, "id716"], [549, "id719"], [549, "id722"], [549, "id725"], [549, "id730"], [549, "id735"], [549, "id739"], [549, "id743"], [549, "id747"], [549, "id751"], [549, "id755"], [549, "id759"], [549, "id763"], [549, "id767"], [549, "id771"], [549, "id775"], [549, "id779"], [549, "id783"], [549, "id787"], [549, "id791"], [549, "id795"], [549, "id799"], [549, "id803"], [549, "id807"], [549, "id811"], [549, "id815"], [549, "id819"], [549, "id823"], [549, "id827"], [549, "id831"], [549, "id835"], [549, "id839"], [549, "id843"], [549, "id847"], [549, "id851"], [549, "id855"], [549, "id859"], [549, "id863"], [549, "id867"], [549, "id871"], [549, "id875"], [549, "id879"], [549, "id883"], [549, "id887"], [549, "id891"], [549, "id895"], [549, "id899"], [549, "id903"], [549, "id907"], [549, "id911"], [549, "id915"], [549, "id919"], [549, "id923"], [549, "id927"], [549, "id931"], [549, "id935"], [549, "id939"], [549, "id943"], [549, "id947"], [549, "id950"], [549, "id953"], [549, "id957"], [549, "id961"], [549, "id965"], [549, "id969"], [549, "id973"], [549, "id977"], [549, "id980"], [549, "id983"], [549, "id986"], [549, "id990"], [549, "id994"], [549, "id1000"], [549, "id1007"], [549, "id1013"], [549, "id1018"], [549, "id1023"], [549, "id1028"], [549, "id1069"], [549, "id1073"], [549, "id1077"]], "Arithmetic with Overflow Intrinsics": [[549, "arithmetic-with-overflow-intrinsics"]], "Arm Soft-Float Target": [[540, "arm-soft-float-target"]], "Arm architecture not given": [[540, "arm-architecture-not-given"]], "ArmNeon": [[601, "armneon"]], "ArmNeonSema": [[601, "armneonsema"]], "ArmNeonTest": [[601, "armneontest"]], "Armv6-m, Armv7-m and Armv7E-M targets": [[540, "armv6-m-armv7-m-and-armv7e-m-targets"]], "Array Type": [[549, "array-type"]], "Asm Table Formats": [[511, "asm-table-formats"]], "Asm template argument modifiers": [[549, "asm-template-argument-modifiers"]], "AsmMatcher": [[601, "asmmatcher"]], "AsmWriter": [[601, "asmwriter"]], "Assembler": [[440, "assembler"]], "Assembly Parser": [[457, "assembly-parser"]], "Assembly Printer": [[614, "assembly-printer"]], "Assert Liberally": [[459, "assert-liberally"]], "Atomic Memory Ordering Constraints": [[549, "atomic-memory-ordering-constraints"]], "Atomic instructions": [[444, "atomic-instructions"]], "Atomic orderings": [[444, "atomic-orderings"]], "Atomics and Codegen": [[444, "atomics-and-codegen"]], "Atomics and IR optimization": [[444, "atomics-and-ir-optimization"]], "AttrBuilder": [[545, "attrbuilder"]], "AttrDocs": [[601, "attrdocs"]], "Attribute": [[545, "attribute"]], "Attribute Groups": [[549, "attribute-groups"]], "AttributeList": [[545, "attributelist"]], "Attribution of Changes": [[509, "attribution-of-changes"]], "Audience": [[614, "audience"]], "Authoring Guidelines": [[595, "authoring-guidelines"]], "Auto-Vectorization in LLVM": [[613, null]], "Automatic Debugger Selection": [[451, "automatic-debugger-selection"]], "Automatic Linker Flags Named Metadata": [[549, "automatic-linker-flags-named-metadata"]], "Available AliasAnalysis implementations": [[443, "available-aliasanalysis-implementations"]], "Available Fuzzers": [[517, "available-fuzzers"]], "Avoid loads and stores of large aggregate type": [[516, "avoid-loads-and-stores-of-large-aggregate-type"]], "Avoid std::endl": [[459, "avoid-std-endl"]], "Avoiding Heap Allocations": [[505, "avoiding-heap-allocations"]], "B": [[550, "b"]], "BINARY INPUT AND OUTPUT": [[487, "binary-input-and-output"]], "BUGS": [[476, "bugs"], [483, "bugs"], [486, "bugs"], [487, "bugs"], [488, "bugs"], [494, "bugs"], [496, "bugs"], [497, "bugs"]], "Background": [[454, "background"], [507, "background"], [543, "background"]], "Background on Windows exceptions": [[511, "background-on-windows-exceptions"]], "Barriers": [[562, "barriers"]], "Base & Derived Pointers": [[598, "base-derived-pointers"]], "Basic CMake usage": [[455, "usage"]], "Basic Commands": [[463, "basic-commands"]], "Basic Expression Parsing": [[637, "basic-expression-parsing"], [648, "basic-expression-parsing"]], "Basic Inspection and Traversal Routines": [[579, "basic-inspection-and-traversal-routines"]], "Basic Mode": [[616, "basic-mode"]], "Basic Setup": [[543, "basic-setup"]], "Basic Steps": [[614, "basic-steps"]], "Basic Usage": [[490, "basic-usage"]], "Basic code required": [[615, "basic-code-required"]], "Basic concepts": [[605, "basic-concepts"]], "Basic migration": [[581, "basic-migration"]], "Basics": [[447, "basics"], [561, "basics"]], "Benchmarking tips": [[445, null]], "Benchmarks": [[583, "benchmarks"]], "Beware of non-determinism due to ordering of pointers": [[459, "beware-of-non-determinism-due-to-ordering-of-pointers"]], "Beware of non-deterministic sorting order of equal elements": [[459, "beware-of-non-deterministic-sorting-order-of-equal-elements"]], "Beware unnecessary copies with auto": [[459, "beware-unnecessary-copies-with-auto"]], "Big bang": [[584, "big-bang"]], "Bigger Pieces of Work": [[504, "bigger-pieces-of-work"]], "Binary Expression Parsing": [[637, "binary-expression-parsing"], [648, "binary-expression-parsing"]], "Binary Operations": [[549, "binary-operations"]], "Binary Operators": [[439, "binary-operators"]], "Bisecting": [[581, "bisecting"]], "Bisection Index Values": [[564, "bisection-index-values"]], "Bit Manipulation Intrinsics": [[549, "bit-manipulation-intrinsics"]], "Bit storage containers (BitVector, SparseBitVector)": [[579, "bit-storage-containers-bitvector-sparsebitvector"]], "BitValue": [[619, "bitvalue"]], "BitVector": [[579, "bitvector"]], "Bitcode Wrapper Format": [[447, "bitcode-wrapper-format"]], "Bitconverts": [[446, "bitconverts"]], "Bitstream Format": [[447, "bitstream-format"]], "Bitwise Binary Operations": [[549, "bitwise-binary-operations"]], "Blitz++": [[583, "blitz"]], "Block Bias": [[448, "block-bias"]], "Block Frequency": [[448, "block-frequency"]], "Block Mass": [[448, "block-mass"]], "Block References": [[555, "block-references"]], "Block Scalars": [[619, "block-scalars"]], "Blocks": [[447, "blocks"]], "Bodies": [[604, "bodies"]], "Boolean Arguments": [[501, "boolean-arguments"]], "Bootstrap Builds": [[442, "bootstrap-builds"]], "Bottleneck Analysis": [[485, "bottleneck-analysis"]], "Braced Initializer Lists": [[459, "braced-initializer-lists"]], "Branch Folding and If Conversion": [[614, "branch-folding-and-if-conversion"]], "Branch Probability": [[448, "branch-probability"]], "Branch Weight": [[448, "branch-weight"]], "BranchInst": [[449, "branchinst"]], "Branching/Stashing/Updating for Local Development or Experiments": [[581, "branching-stashing-updating-for-local-development-or-experiments"]], "Buffer Underflow/Overflow Detection": [[536, "buffer-underflow-overflow-detection"]], "Bug Fixes": [[504, "bug-fixes"]], "Bug Reporting Process": [[588, "bug-reporting-process"]], "Bug Reports": [[504, "bug-reports"]], "Bugs and Enhancements": [[598, "bugs-and-enhancements"]], "Build Bots": [[582, "build-bots"]], "Build Clang Binary Distribution": [[542, "build-clang-binary-distribution"]], "Build Integration": [[548, "build-integration"]], "Build-time use optimization": [[560, "build-time-use-optimization"]], "Building Clang with PGO": [[539, "building-clang-with-pgo"]], "Building LLVM with CMake": [[455, null]], "Building a Distribution of LLVM": [[453, null]], "Building a JIT in LLVM": [[655, "building-a-jit-in-llvm"]], "Building a JIT: Adding Optimizations \u2013 An introduction to ORC Layers": [[622, null]], "Building a JIT: Extreme Laziness - Using Compile Callbacks to JIT from ASTs": [[624, null]], "Building a JIT: Per-function Lazy Compilation": [[623, null]], "Building a JIT: Remote-JITing \u2013 Process Isolation and Laziness at a Distance": [[625, null]], "Building a JIT: Starting out with KaleidoscopeJIT": [[621, null]], "Building a single sub-project": [[581, "building-a-single-sub-project"]], "Building and Running": [[517, "building-and-running"]], "Building compiler-rt builtins for Arm": [[540, "building-compiler-rt-builtins-for-arm"]], "Building fallible iterators and iterator ranges": [[579, "building-fallible-iterators-and-iterator-ranges"]], "Building pass plugins": [[615, "building-pass-plugins"]], "Building the SelectionDAG": [[441, "building-the-selectiondag"]], "Building with XRay": [[617, "building-with-xray"]], "Buildmasters": [[537, "buildmasters"]], "Built In GC Strategies": [[518, "built-in-gc-strategies"]], "Built in register allocators": [[457, "built-in-register-allocators"]], "Built-in expect Instructions": [[449, "built-in-expect-instructions"]], "Built-in types": [[619, "built-in-types"]], "Builtin parsers": [[501, "builtin-parsers"]], "Bundled Instructions": [[555, "bundled-instructions"]], "C": [[550, "c"]], "C API": [[589, "c-api"]], "C API Changes": [[509, "c-api-changes"]], "C API Details": [[557, "c-api-details"]], "C type width Module Flags Metadata": [[549, "c-type-width-module-flags-metadata"]], "C++ Features": [[576, "c-features"]], "C++ Performance Benchmarks": [[583, "c-performance-benchmarks"]], "C++ Standard Library": [[459, "c-standard-library"]], "C++ Standard Versions": [[459, "c-standard-versions"]], "C++ special member functions information": [[593, "c-special-member-functions-information"]], "C++ specific debug information": [[593, "c-specific-debug-information"]], "C/C++ front-end specific debug information": [[593, "c-c-front-end-specific-debug-information"]], "C/C++ function information": [[593, "c-c-function-information"]], "C/C++ global variable information": [[593, "c-c-global-variable-information"]], "C/C++ source file information": [[593, "c-c-source-file-information"]], "C99-style Hexadecimal Floating-point Constants": [[513, "c99-style-hexadecimal-floating-point-constants"]], "CFG Modifications": [[449, "cfg-modifications"]], "CFIIndex Operands": [[555, "cfiindex-operands"]], "CMake Caches": [[455, "cmake-caches"]], "CMake Primer": [[456, null]], "CODE GENERATION OPTIONS": [[466, "code-generation-options"]], "COFF Syntax": [[656, "coff-syntax"]], "COFF-SPECIFIC OPTIONS": [[487, "coff-specific-options"], [497, "coff-specific-options"]], "COMMANDS": [[473, "commands"], [483, "commands"], [488, "commands"], [490, "commands"]], "COMPONENTS": [[472, "components"]], "CONSTANTS_BLOCK Contents": [[447, "constants-block-contents"]], "CORAL-2 Benchmarks": [[583, "coral-2-benchmarks"]], "CTags": [[601, "ctags"]], "Call-clobbered registers": [[457, "call-clobbered-registers"]], "CallArgument Records": [[618, "callargument-records"]], "CallInst": [[449, "callinst"]], "Callee-cleanup Calling Conventions": [[547, "callee-cleanup-calling-conventions"]], "Calling Conventions": [[549, "calling-conventions"], [614, "calling-conventions"]], "CallingConv": [[601, "callingconv"]], "Calls": [[549, "calls"]], "Can GEP index into vector elements?": [[519, "can-gep-index-into-vector-elements"]], "Can I cast an object\u2019s address to integer and add it to null?": [[519, "can-i-cast-an-object-s-address-to-integer-and-add-it-to-null"]], "Can I compare two values computed with GEPs?": [[519, "can-i-compare-two-values-computed-with-geps"]], "Can I compile C or C++ code to platform-independent LLVM bitcode?": [[514, "can-i-compile-c-or-c-code-to-platform-independent-llvm-bitcode"]], "Can I compute the distance between two objects, and add that value to one address to compute the other address?": [[519, "can-i-compute-the-distance-between-two-objects-and-add-that-value-to-one-address-to-compute-the-other-address"]], "Can I do GEP with a different pointer type than the type of the underlying object?": [[519, "can-i-do-gep-with-a-different-pointer-type-than-the-type-of-the-underlying-object"]], "Can I do type-based alias analysis on LLVM IR?": [[519, "can-i-do-type-based-alias-analysis-on-llvm-ir"]], "Can I modify LLVM source code and redistribute the modified source?": [[514, "can-i-modify-llvm-source-code-and-redistribute-the-modified-source"]], "Can I modify the LLVM source code and redistribute binaries or other tools based on it, without redistributing the source?": [[514, "can-i-modify-the-llvm-source-code-and-redistribute-binaries-or-other-tools-based-on-it-without-redistributing-the-source"]], "Can array indices be negative?": [[519, "can-array-indices-be-negative"]], "Changes to LLDB": [[587, "changes-to-lldb"]], "Changes to the AArch64 Backend": [[587, "changes-to-the-aarch64-backend"]], "Changes to the ARM Backend": [[587, "changes-to-the-arm-backend"]], "Changes to the C API": [[587, "changes-to-the-c-api"]], "Changes to the Go bindings": [[587, "changes-to-the-go-bindings"]], "Changes to the LLVM IR": [[587, "changes-to-the-llvm-ir"]], "Changes to the MIPS Target": [[587, "changes-to-the-mips-target"]], "Changes to the PowerPC Target": [[587, "changes-to-the-powerpc-target"]], "Changes to the RISC-V Target": [[587, "changes-to-the-risc-v-target"]], "Changes to the SystemZ Target": [[587, "changes-to-the-systemz-target"]], "Changes to the WebAssembly Target": [[587, "changes-to-the-webassembly-target"]], "Changes to the Windows Target": [[587, "changes-to-the-windows-target"]], "Changes to the X86 Target": [[587, "changes-to-the-x86-target"]], "Chapter 1 Introduction": [[621, "chapter-1-introduction"]], "Chapter 2 Introduction": [[622, "chapter-2-introduction"], [637, "chapter-2-introduction"], [648, "chapter-2-introduction"]], "Chapter 3 Introduction": [[623, "chapter-3-introduction"], [638, "chapter-3-introduction"], [649, "chapter-3-introduction"]], "Chapter 4 Introduction": [[624, "chapter-4-introduction"], [639, "chapter-4-introduction"], [650, "chapter-4-introduction"]], "Chapter 5 Introduction": [[625, "chapter-5-introduction"], [640, "chapter-5-introduction"], [651, "chapter-5-introduction"]], "Chapter 6 Introduction": [[641, "chapter-6-introduction"], [652, "chapter-6-introduction"]], "Chapter 7 Introduction": [[642, "chapter-7-introduction"], [653, "chapter-7-introduction"]], "Chapter 8 Introduction": [[643, "chapter-8-introduction"]], "Chapter 9 Introduction": [[644, "chapter-9-introduction"]], "Checkout LLVM from Git": [[521, "checkout-llvm-from-git"]], "Checkout via SVN (deprecated)": [[521, "checkout-via-svn-deprecated"]], "Checkout/Clone Multiple Projects, with Commit Access": [[581, "checkout-clone-multiple-projects-with-commit-access"]], "Checkout/Clone a Single Project, with Commit Access": [[581, "checkout-clone-a-single-project-with-commit-access"]], "Choosing a target": [[643, "choosing-a-target"]], "Chrome Trace Viewer Visualization": [[617, "chrome-trace-viewer-visualization"]], "Chunk Header": [[591, "chunk-header"]], "Clang": [[591, "clang"], [612, "id1"]], "Clang BackEnds": [[601, "clang-backends"]], "Clang uses the host header files": [[540, "clang-uses-the-host-header-files"]], "ClangAttrClasses": [[601, "clangattrclasses"]], "ClangAttrDump": [[601, "clangattrdump"]], "ClangAttrImpl": [[601, "clangattrimpl"]], "ClangAttrList": [[601, "clangattrlist"]], "ClangAttrPCHRead": [[601, "clangattrpchread"]], "ClangAttrPCHWrite": [[601, "clangattrpchwrite"]], "ClangAttrParsedAttrImpl": [[601, "clangattrparsedattrimpl"]], "ClangAttrParsedAttrKinds": [[601, "clangattrparsedattrkinds"]], "ClangAttrParsedAttrList": [[601, "clangattrparsedattrlist"]], "ClangAttrParserStringSwitches": [[601, "clangattrparserstringswitches"]], "ClangAttrSpellingListIndex": [[601, "clangattrspellinglistindex"]], "ClangAttrSpellings": [[601, "clangattrspellings"]], "ClangAttrTemplateInstantiate": [[601, "clangattrtemplateinstantiate"]], "ClangAttrVisitor": [[601, "clangattrvisitor"]], "ClangCommentCommandInfo": [[601, "clangcommentcommandinfo"]], "ClangCommentCommandList": [[601, "clangcommentcommandlist"]], "ClangCommentHTMLNamedCharacterReferences": [[601, "clangcommenthtmlnamedcharacterreferences"]], "ClangCommentHTMLTags": [[601, "clangcommenthtmltags"]], "ClangCommentHTMLTagsProperties": [[601, "clangcommenthtmltagsproperties"]], "ClangCommentNodes": [[601, "clangcommentnodes"]], "ClangDeclNodes": [[601, "clangdeclnodes"]], "ClangDiagGroups": [[601, "clangdiaggroups"]], "ClangDiagsDefs": [[601, "clangdiagsdefs"]], "ClangDiagsIndexName": [[601, "clangdiagsindexname"]], "ClangSACheckers": [[601, "clangsacheckers"]], "ClangStmtNodes": [[601, "clangstmtnodes"]], "Class overviews": [[459, "class-overviews"]], "Class template arguments": [[603, "class-template-arguments"]], "Classes and definitions": [[603, "classes-and-definitions"]], "Cleanups": [[511, "cleanups"]], "Clients for debugging and evaluation of implementations": [[443, "clients-for-debugging-and-evaluation-of-implementations"]], "Clobber constraints": [[549, "clobber-constraints"]], "Code Blocks": [[595, "code-blocks"]], "Code Conventions": [[440, "code-conventions"]], "Code Emission": [[457, "code-emission"]], "Code Generation": [[554, "code-generation"], [612, "code-generation"]], "Code Generation Setup": [[638, "code-generation-setup"], [649, "code-generation-setup"]], "Code Generation for If/Then/Else": [[640, "code-generation-for-if-then-else"], [651, "code-generation-for-if-then-else"]], "Code Generation for the \u201cfor\u201d Loop": [[640, "code-generation-for-the-for-loop"], [651, "code-generation-for-the-for-loop"]], "Code Generator Intrinsics": [[549, "code-generator-intrinsics"]], "Code Generator backend info": [[603, "code-generator-backend-info"]], "Code Object": [[440, "code-object"]], "Code Object Metadata": [[440, "code-object-metadata"]], "Code Object Target Identification": [[440, "code-object-target-identification"]], "Code Object V2 Directives (-mattr=-code-object-v3)": [[440, "code-object-v2-directives-mattr-code-object-v3"]], "Code Object V2 Example Source Code (-mattr=-code-object-v3)": [[440, "code-object-v2-example-source-code-mattr-code-object-v3"]], "Code Object V2 Metadata (-mattr=-code-object-v3)": [[440, "code-object-v2-metadata-mattr-code-object-v3"]], "Code Object V2 Note Records (-mattr=-code-object-v3)": [[440, "code-object-v2-note-records-mattr-code-object-v3"]], "Code Object V2 Predefined Symbols (-mattr=-code-object-v3)": [[440, "code-object-v2-predefined-symbols-mattr-code-object-v3"]], "Code Object V3 Directives (-mattr=+code-object-v3)": [[440, "code-object-v3-directives-mattr-code-object-v3"]], "Code Object V3 Example Source Code (-mattr=+code-object-v3)": [[440, "code-object-v3-example-source-code-mattr-code-object-v3"]], "Code Object V3 Metadata (-mattr=+code-object-v3)": [[440, "code-object-v3-metadata-mattr-code-object-v3"]], "Code Object V3 Note Records (-mattr=+code-object-v3)": [[440, "code-object-v3-note-records-mattr-code-object-v3"]], "Code Object V3 Predefined Symbols (-mattr=+code-object-v3)": [[440, "code-object-v3-predefined-symbols-mattr-code-object-v3"]], "Code Organization": [[599, "code-organization"]], "Code Owners": [[509, "code-owners"]], "Code Reviews": [[509, "code-reviews"]], "Code Reviews with Phabricator": [[578, null]], "Code Transformation Metadata": [[610, null]], "Code generator bugs": [[544, "code-generator-bugs"]], "Code generator debugger": [[451, "code-generator-debugger"]], "CodeEmitter": [[601, "codeemitter"]], "CodeView": [[575, "codeview"]], "CodeView Debug Info Format": [[593, "codeview-debug-info-format"]], "CodeView Symbol Records": [[565, null]], "CodeView Type Record List": [[574, "codeview-type-record-list"]], "CodeView Type Records": [[566, null]], "CodeView-Dependent": [[513, "codeview-dependent"]], "Collecting options as a set of flags": [[501, "collecting-options-as-a-set-of-flags"]], "Collector Requirements": [[518, "collector-requirements"]], "Color conversion": [[583, "color-conversion"]], "Comdats": [[549, "comdats"]], "Command Line Utilities": [[586, "command-line-utilities"]], "Command line flags": [[613, "command-line-flags"]], "CommandLine 2.0 Library Manual": [[501, null]], "Comment Formatting": [[459, "comment-formatting"]], "Commenting": [[459, "commenting"]], "Commit an API Change in LLVM and Update the Sub-projects": [[581, "commit-an-api-change-in-llvm-and-update-the-sub-projects"]], "Commit messages": [[509, "commit-messages"]], "Committing a change": [[578, "committing-a-change"]], "Committing someone\u2019s change from Phabricator": [[578, "committing-someone-s-change-from-phabricator"]], "Common Issues": [[562, "common-issues"]], "Common Problems": [[521, "common-problems"], [523, "common-problems"]], "Communaut\u00e9": [[620, "community"]], "Community Testing": [[542, "community-testing"]], "Community wide proposals": [[520, "community-wide-proposals"]], "Comparison and logarithmical search": [[561, "comparison-and-logarithmical-search"]], "Compilation Models": [[502, "compilation-models"]], "Compile Flags": [[576, "compile-flags"]], "Compile Unit": [[644, "compile-unit"]], "Compile-time optimization bugs": [[544, "compile-time-optimization-bugs"]], "Compiler-rt builds but the tests fail to build": [[540, "compiler-rt-builds-but-the-tests-fail-to-build"]], "Compiler/Platform-specific topics": [[455, "compiler-platform-specific-topics"]], "Compiling CUDA Code": [[502, "compiling-cuda-code"]], "Compiling CUDA with clang": [[502, null]], "Compiling the LLVM Suite Source Code": [[521, "compiling-the-llvm-suite-source-code"]], "Complex Constants": [[549, "complex-constants"]], "ComplexPatterns": [[527, "complexpatterns"]], "Component Overview": [[548, "component-overview"]], "Composite Rules": [[529, "composite-rules"]], "Compute User Data": [[440, "compute-user-data"]], "Computing stack maps": [[518, "computing-stack-maps"]], "Concatenating Errors with joinErrors": [[579, "concatenating-errors-with-joinerrors"]], "Conception et aper\u00e7u de LLVM": [[620, "llvm-design-overview"]], "Conclusions": [[637, "conclusions"], [648, "conclusions"]], "Concrete Bases and Deeper Hierarchies": [[543, "concrete-bases-and-deeper-hierarchies"]], "Configuration": [[607, "configuration"]], "Configuring CMake": [[541, "configuring-cmake"]], "Configuring External Tests": [[608, "configuring-external-tests"]], "Configuring LLVM to Build Fuzzers": [[517, "configuring-llvm-to-build-fuzzers"]], "Configuring the Module": [[643, "configuring-the-module"]], "Considerations": [[446, "considerations"]], "Consistent Semantics": [[599, "consistent-semantics"]], "Constant Expressions": [[549, "constant-expressions"]], "Constant Pool Indices": [[555, "constant-pool-indices"]], "Constants": [[525, "constants"], [549, "constants"]], "Constrained Floating-Point Intrinsics": [[549, "constrained-floating-point-intrinsics"]], "Constrained libm-equivalent Intrinsics": [[549, "constrained-libm-equivalent-intrinsics"]], "Constraining test execution": [[609, "constraining-test-execution"]], "Constraint Codes": [[549, "constraint-codes"]], "Contents": [[593, "contents"]], "Contextual markups": [[557, "contextual-markups"]], "Continuously Running and Finding Bugs": [[517, "continuously-running-and-finding-bugs"]], "Contributing to LLVM": [[504, null]], "Control Flow": [[456, "control-flow"], [525, "control-flow"]], "Control Flow Verification Tool Design Document": [[454, null]], "Controlling Fidelity": [[617, "controlling-fidelity"]], "Controlling options grouping": [[501, "controlling-options-grouping"]], "Controlling other formatting options": [[501, "controlling-other-formatting-options"]], "Controlling the number of occurrences required and allowed": [[501, "controlling-the-number-of-occurrences-required-and-allowed"]], "Controlling whether or not a value must be specified": [[501, "controlling-whether-or-not-a-value-must-be-specified"]], "Conventions": [[438, "conventions"], [439, "conventions"], [562, "conventions"]], "Conversion Operations": [[549, "conversion-operations"]], "Conversion of Floating-Point Values": [[439, "conversion-of-floating-point-values"]], "Conversion of Integer Values": [[439, "conversion-of-integer-values"]], "Conversion of Relocatable Values": [[439, "conversion-of-relocatable-values"]], "Copyright": [[509, "copyright"]], "Copyright, License, and Patents": [[509, "copyright-license-and-patents"]], "Core Pipeline": [[530, null]], "CoroCleanup": [[505, "corocleanup"]], "CoroEarly": [[505, "coroearly"]], "CoroElide": [[505, "coroelide"]], "CoroSplit": [[505, "corosplit"]], "Coroutine Manipulation Intrinsics": [[505, "coroutine-manipulation-intrinsics"]], "Coroutine Promise": [[505, "coroutine-promise"]], "Coroutine Representation": [[505, "coroutine-representation"]], "Coroutine Structure Intrinsics": [[505, "coroutine-structure-intrinsics"]], "Coroutine Transformation": [[505, "coroutine-transformation"]], "Coroutine Transformation Passes": [[505, "coroutine-transformation-passes"]], "Coroutines by Example": [[505, "coroutines-by-example"]], "Coroutines in LLVM": [[505, null]], "Corpus": [[551, "corpus"]], "Counter": [[506, "id3"]], "Counter Expressions": [[506, "counter-expressions"]], "Counter:": [[506, "counter"], [506, "id8"]], "Coverage Mapping Header:": [[506, "coverage-mapping-header"]], "Crash debugger": [[451, "crash-debugger"]], "Crashing Bugs": [[544, "crashing-bugs"]], "Create Release Branch": [[542, "create-release-branch"]], "Creating New Articles": [[595, "creating-new-articles"]], "Creating an LLVM Project": [[580, null]], "Creating and inserting new Instructions": [[579, "creating-and-inserting-new-instructions"]], "Creating new registries": [[615, "creating-new-registries"]], "Cross Compilation and External Devices": [[607, "cross-compilation-and-external-devices"]], "Cross compiling": [[455, "cross-compiling"]], "Cross-Compiling LLVM": [[521, "cross-compiling-llvm"]], "Cross-Compiling from x86_64 to ARM": [[541, "cross-compiling-from-x86-64-to-arm"]], "Current Contributors - Transfering from SVN": [[509, "current-contributors-transfering-from-svn"]], "Current Status": [[581, "current-status"], [582, "current-status"]], "Currently": [[581, "currently"], [581, "id7"], [581, "id9"], [581, "id11"]], "Custom": [[614, "custom"]], "Custom GC Strategies": [[518, "custom-gc-strategies"]], "Custom SDNodes": [[527, "custom-sdnodes"]], "Custom Scalar": [[619, "custom-scalar"]], "Custom Suites": [[607, "custom-suites"]], "Custom formatting": [[579, "custom-formatting"]], "Custom lowering of intrinsics": [[518, "custom-lowering-of-intrinsics"]], "CustomEventMarker Records": [[618, "customeventmarker-records"]], "D": [[550, "d"]], "DAGISel": [[601, "dagisel"]], "DARPA HPCS SSCA#2 C/OpenMP reference implementation": [[583, "darpa-hpcs-ssca-2-c-openmp-reference-implementation"]], "DBI Stream Options": [[489, "dbi-stream-options"]], "DEFINE_ABBREV Encoding": [[447, "define-abbrev-encoding"]], "DESCRIPTION": [[460, "description"], [461, "description"], [462, "description"], [464, "description"], [465, "description"], [466, "description"], [467, "description"], [468, "description"], [469, "description"], [470, "description"], [471, "description"], [472, "description"], [473, "description"], [473, "id2"], [473, "id4"], [473, "id7"], [473, "id10"], [474, "description"], [475, "description"], [476, "description"], [477, "description"], [478, "description"], [479, "description"], [480, "description"], [481, "description"], [482, "description"], [483, "description"], [484, "description"], [485, "description"], [486, "description"], [487, "description"], [488, "description"], [490, "description"], [490, "id2"], [490, "id4"], [490, "id7"], [491, "description"], [492, "description"], [493, "description"], [494, "description"], [495, "description"], [496, "description"], [497, "description"], [498, "description"], [499, "description"], [500, "description"]], "DETAILED OUTPUT DEFINITIONS": [[470, "detailed-output-definitions"]], "DFAPacketizer": [[601, "dfapacketizer"]], "DIBasicType": [[549, "dibasictype"]], "DICompileUnit": [[549, "dicompileunit"]], "DICompositeType": [[549, "dicompositetype"]], "DIDerivedType": [[549, "diderivedtype"]], "DIEnumerator": [[549, "dienumerator"]], "DIExpression": [[549, "diexpression"]], "DIFFERENCES TO LLVM-READELF": [[493, "differences-to-llvm-readelf"]], "DIFile": [[549, "difile"]], "DIFlags": [[549, "diflags"]], "DIGlobalVariable": [[549, "diglobalvariable"]], "DIGlobalVariableExpression": [[549, "diglobalvariableexpression"]], "DIImportedEntity": [[549, "diimportedentity"]], "DILexicalBlock": [[549, "dilexicalblock"]], "DILexicalBlockFile": [[549, "dilexicalblockfile"]], "DILocalVariable": [[549, "dilocalvariable"]], "DILocation": [[549, "dilocation"]], "DIMacro": [[549, "dimacro"]], "DIMacroFile": [[549, "dimacrofile"]], "DINamespace": [[549, "dinamespace"]], "DIObjCProperty": [[549, "diobjcproperty"]], "DISubprogram": [[549, "disubprogram"]], "DISubrange": [[549, "disubrange"]], "DISubroutineType": [[549, "disubroutinetype"]], "DITemplateTypeParameter": [[549, "ditemplatetypeparameter"]], "DITemplateValueParameter": [[549, "ditemplatevalueparameter"]], "DLL Storage Classes": [[549, "dll-storage-classes"]], "DPP/DPP16 Modifiers": [[438, "dpp-dpp16-modifiers"]], "DPP16": [[0, "dpp16"]], "DPP8": [[0, "dpp8"]], "DPP8 Modifiers": [[438, "dpp8-modifiers"]], "DS": [[0, "ds"], [1, "ds"], [2, "ds"], [3, "ds"], [440, "ds"]], "DS Modifiers": [[438, "ds-modifiers"]], "DWARF": [[440, "dwarf"]], "DWARF Emission Setup": [[644, "dwarf-emission-setup"]], "Data Dependence Graph": [[508, "data-dependence-graph"]], "Data Layout": [[549, "data-layout"], [562, "data-layout"]], "Data Records": [[447, "data-records"]], "Data Section": [[618, "data-section"]], "Data:": [[506, "data"]], "Debug information and optimizations": [[593, "debug-information-and-optimizations"]], "Debug information consumers": [[593, "debug-information-consumers"]], "Debugger Intrinsics": [[549, "debugger-intrinsics"]], "Debugger intrinsic functions": [[593, "debugger-intrinsic-functions"]], "Debugging": [[530, "debugging"], [579, "debugging"]], "Debugging Information Extension for Objective C Properties": [[593, "debugging-information-extension-for-objective-c-properties"]], "Debugging Information tests": [[609, "debugging-information-tests"], [609, "id1"]], "Debugging JIT-ed Code With GDB": [[507, null]], "Debugging MCJIT-ed code": [[507, "debugging-mcjit-ed-code"]], "Debugging Tools": [[463, "debugging-tools"]], "Debugging information format": [[593, "debugging-information-format"], [593, "id4"]], "Debugging with XRay": [[617, null]], "Declarations": [[604, "declarations"]], "Default values": [[619, "default-values"]], "Defining a Register": [[614, "defining-a-register"]], "Defining a Register Class": [[614, "defining-a-register-class"]], "Definitions": [[550, "definitions"], [585, "definitions"], [596, "definitions"]], "Delayed Freelist": [[591, "delayed-freelist"]], "Deleting GlobalVariables": [[579, "deleting-globalvariables"]], "Deleting Instructions": [[579, "deleting-instructions"], [579, "schanges-deleting-sub"]], "Deoptimization Operand Bundles": [[549, "deoptimization-operand-bundles"]], "Dependence Graphs in LLVM": [[508, null]], "Dependencies": [[576, "dependencies"]], "Dependent Libs Named Metadata": [[549, "dependent-libs-named-metadata"]], "Dereferencing": [[456, "dereferencing"]], "Describing Aliasing Properties": [[516, "describing-aliasing-properties"]], "Describing Language Specific Properties": [[516, "describing-language-specific-properties"]], "Description": [[451, "description"], [489, "description"], [552, "description"]], "Design": [[536, "design"], [591, "design"]], "Design Considerations": [[547, "design-considerations"]], "Design Guidelines": [[585, "design-guidelines"]], "Design Ideas": [[454, "design-ideas"]], "Design Overview": [[563, "design-overview"]], "Design Philosophy": [[451, "design-philosophy"], [552, "design-philosophy"]], "Design Trade-offs": [[508, "design-trade-offs"]], "Design and Implementation Reference": [[534, "design-and-implementation-reference"]], "Design and Usage of the InAlloca Attribute": [[547, null]], "Design of MemorySSA": [[560, "design-of-memoryssa"]], "Design tradeoffs": [[560, "design-tradeoffs"]], "Designing Type Hiercharies and Polymorphic Interfaces": [[579, "designing-type-hiercharies-and-polymorphic-interfaces"]], "Details": [[593, "details"], [613, "details"]], "Detecting clang vs NVCC from code": [[502, "detecting-clang-vs-nvcc-from-code"]], "Determining absolute position with getPosition()": [[501, "determining-absolute-position-with-getposition"]], "Developer Policies": [[509, "developer-policies"]], "Developer Tools": [[463, "developer-tools"]], "Developing LLVM passes out of source": [[455, "developing-llvm-passes-out-of-source"]], "Developing libFuzzer": [[551, "developing-libfuzzer"]], "Development Process": [[520, "development-process"]], "Diagnostics": [[613, "diagnostics"]], "Dialect Differences Between clang and nvcc": [[502, "dialect-differences-between-clang-and-nvcc"]], "Dictionaries": [[551, "dictionaries"]], "Difference between install and install-distribution": [[453, "difference-between-install-and-install-distribution"]], "Different Pass styles": [[443, "different-pass-styles"]], "Differentiating variable kinds": [[584, "differentiating-variable-kinds"]], "Direct Stack Map Entries": [[596, "direct-stack-map-entries"]], "Directory Layout": [[521, "directory-layout"]], "Disadvantages": [[584, "disadvantages"]], "Disadvantages:": [[508, "disadvantages"]], "Disassembler": [[457, "disassembler"], [601, "disassembler"]], "Displaying and Analyzing Results": [[607, "displaying-and-analyzing-results"]], "Dissecting the Kernel": [[562, "dissecting-the-kernel"]], "Dissecting the sample:": [[506, "dissecting-the-sample"]], "Distinct Save and Suspend": [[505, "distinct-save-and-suspend"]], "Dither": [[583, "dither"]], "Do Not Use using namespace std": [[459, "do-not-use-using-namespace-std"]], "Do not use Braced Initializer Lists to Call a Constructor": [[459, "do-not-use-braced-initializer-lists-to-call-a-constructor"]], "Do not use RTTI or Exceptions": [[459, "do-not-use-rtti-or-exceptions"]], "Do not use Static Constructors": [[459, "do-not-use-static-constructors"]], "Docker basics": [[510, "docker-basics"]], "Document List": [[619, "document-list"]], "Documentation": [[620, "documentation"]], "Don\u2019t Expose System Headers": [[599, "don-t-expose-system-headers"]], "Don\u2019t Include System Headers": [[599, "don-t-include-system-headers"]], "Don\u2019t evaluate end() every time through a loop": [[459, "don-t-evaluate-end-every-time-through-a-loop"]], "Don\u2019t use default labels in fully covered switches over enumerations": [[459, "don-t-use-default-labels-in-fully-covered-switches-over-enumerations"]], "Don\u2019t use else after a return": [[459, "don-t-use-else-after-a-return"]], "Don\u2019t use inline when defining a function in a class definition": [[459, "don-t-use-inline-when-defining-a-function-in-a-class-definition"]], "Doxygen Use in Documentation Comments": [[459, "doxygen-use-in-documentation-comments"]], "Driver Changes and Closing Thoughts": [[638, "driver-changes-and-closing-thoughts"], [649, "driver-changes-and-closing-thoughts"]], "Dynamic Allocation": [[457, "dynamic-allocation"]], "Dynamically adding command line options": [[501, "dynamically-adding-command-line-options"]], "EC Substream": [[567, "ec-substream"]], "ELF SPECIFIC OPTIONS": [[493, "elf-specific-options"]], "ELF-Dependent": [[513, "elf-dependent"]], "ELF-SPECIFIC OPTIONS": [[487, "elf-specific-options"], [497, "elf-specific-options"]], "END_BLOCK Encoding": [[447, "end-block-encoding"]], "ENTER_SUBBLOCK Encoding": [[447, "enter-subblock-encoding"]], "EXAMPLE": [[474, "example"], [496, "example"]], "EXAMPLE 1": [[484, "example-1"]], "EXAMPLE 1: benchmarking instructions": [[479, "example-1-benchmarking-instructions"]], "EXAMPLE 2": [[484, "example-2"]], "EXAMPLE 2: benchmarking a custom code snippet": [[479, "example-2-benchmarking-a-custom-code-snippet"]], "EXAMPLE 3: analysis": [[479, "example-3-analysis"]], "EXAMPLES": [[472, "examples"], [490, "examples"], [498, "examples"]], "EXECUTION OPTIONS": [[464, "execution-options"]], "EXIT STATUS": [[460, "exit-status"], [461, "exit-status"], [462, "exit-status"], [464, "exit-status"], [465, "exit-status"], [466, "exit-status"], [468, "exit-status"], [469, "exit-status"], [470, "exit-status"], [471, "exit-status"], [472, "exit-status"], [473, "exit-status"], [474, "exit-status"], [476, "exit-status"], [477, "exit-status"], [478, "exit-status"], [479, "exit-status"], [480, "exit-status"], [482, "exit-status"], [484, "exit-status"], [485, "exit-status"], [486, "exit-status"], [487, "exit-status"], [490, "exit-status"], [492, "exit-status"], [493, "exit-status"], [494, "exit-status"], [495, "exit-status"], [496, "exit-status"], [497, "exit-status"], [498, "exit-status"], [499, "exit-status"], [500, "exit-status"]], "EXP": [[0, "exp"], [1, "exp"], [2, "exp"], [3, "exp"]], "EXP Modifiers": [[438, "exp-modifiers"]], "EXPORT COMMAND": [[473, "export-command"]], "Efficiency": [[547, "efficiency"]], "Efficiency Issues": [[443, "efficiency-issues"]], "Element Wise Atomic Memory Intrinsics": [[549, "element-wise-atomic-memory-intrinsics"]], "Embedded Module": [[555, "embedded-module"]], "Embedded PowerPC Processors manuals and docs": [[503, "embedded-powerpc-processors-manuals-and-docs"]], "Embedding LLVM in your project": [[455, "embedding-llvm-in-your-project"]], "Emit Object Code": [[643, "emit-object-code"]], "Emitting assembly code: GCMetadataPrinter": [[518, "emitting-assembly-code-gcmetadataprinter"]], "Emitting function stack size information": [[457, "emitting-function-stack-size-information"]], "Emitting remark diagnostics in the object file": [[589, "emitting-remark-diagnostics-in-the-object-file"]], "Enabling optimization remarks": [[589, "enabling-optimization-remarks"]], "Encoded data:": [[506, "encoded-data"]], "Encoding": [[506, "encoding"]], "Encoding Suffices": [[437, "encoding-suffices"]], "End-user Options": [[465, "end-user-options"]], "EndOfBuffer Records": [[618, "endofbuffer-records"]], "Ending Execution with llvm_shutdown()": [[579, "ending-execution-with-llvm-shutdown"]], "Engine Creation": [[554, "engine-creation"]], "Error Handling": [[619, "error-handling"]], "Error Types": [[591, "error-types"]], "Error handling": [[579, "error-handling"]], "Example": [[507, "example"], [536, "example"], [605, "example"]], "Example (custom deallocation function):": [[505, "example-custom-deallocation-function"]], "Example (final suspend point):": [[505, "example-final-suspend-point"]], "Example (normal suspend point):": [[505, "example-normal-suspend-point"]], "Example (standard deallocation functions):": [[505, "example-standard-deallocation-functions"]], "Example Nested Subsection": [[595, "example-nested-subsection"]], "Example Section": [[595, "example-section"]], "Example Usage": [[564, "example-usage"]], "Example implementations of getAnalysisUsage": [[615, "example-implementations-of-getanalysisusage"]], "Example of link time optimization": [[535, "example-of-link-time-optimization"], [552, "example-of-link-time-optimization"]], "Example with clang": [[521, "example-with-clang"]], "Example:": [[505, "example"], [505, "id23"], [505, "id46"], [505, "id53"], [549, "example"], [549, "id31"], [549, "id36"], [549, "id42"], [549, "id47"], [549, "id52"], [549, "id57"], [549, "id62"], [549, "id67"], [549, "id74"], [549, "id82"], [549, "id87"], [549, "id92"], [549, "id97"], [549, "id102"], [549, "id107"], [549, "id112"], [549, "id117"], [549, "id122"], [549, "id127"], [549, "id132"], [549, "id137"], [549, "id142"], [549, "id147"], [549, "id152"], [549, "id157"], [549, "id162"], [549, "id167"], [549, "id172"], [549, "id177"], [549, "id182"], [549, "id187"], [549, "id192"], [549, "id197"], [549, "id202"], [549, "id212"], [549, "id217"], [549, "id222"], [549, "id227"], [549, "id232"], [549, "id237"], [549, "id242"], [549, "id247"], [549, "id252"], [549, "id257"], [549, "id262"], [549, "id267"], [549, "id272"], [549, "id277"], [549, "id282"], [549, "id287"], [549, "id292"], [549, "id297"], [549, "id302"], [549, "id307"], [549, "id312"], [549, "id317"], [549, "id322"], [549, "id327"], [549, "id332"], [549, "id338"], [549, "id345"], [549, "id352"], [549, "id578"], [549, "id582"]], "Example: C-level intrinsics -> assembly": [[446, "example-c-level-intrinsics-assembly"]], "Examples": [[528, "examples"], [549, "id617"], [549, "id622"], [549, "id627"], [549, "id632"], [549, "id637"], [549, "id642"], [549, "id647"], [549, "id652"], [549, "id657"], [549, "id662"], [551, "examples"]], "Examples:": [[549, "examples"], [549, "id207"], [549, "id587"], [549, "id592"], [549, "id597"], [549, "id602"], [549, "id607"], [549, "id612"], [549, "id669"], [549, "id676"], [549, "id683"], [549, "id727"], [549, "id732"]], "Exception Handling Frame": [[511, "exception-handling-frame"]], "Exception Handling Intrinsics": [[511, "exception-handling-intrinsics"], [549, "exception-handling-intrinsics"]], "Exception Handling in LLVM": [[511, null]], "Exception Handling support on the target": [[511, "exception-handling-support-on-the-target"]], "Exception Handling using the Windows Runtime": [[511, "exception-handling-using-the-windows-runtime"]], "Exception Tables": [[511, "exception-tables"]], "Exceptions": [[547, "exceptions"]], "Executing PTX": [[562, "executing-ptx"]], "Executing the Tests": [[455, "executing-the-tests"]], "Existing alias analysis implementations and clients": [[443, "existing-alias-analysis-implementations-and-clients"]], "Expand": [[614, "expand"]], "Experimental Statepoint Intrinsics": [[549, "experimental-statepoint-intrinsics"]], "Experimental Vector Reduction Intrinsics": [[549, "experimental-vector-reduction-intrinsics"]], "Explicit Representation": [[598, "explicit-representation"]], "Exploiting external storage": [[501, "exploiting-external-storage"]], "Expression Code Generation": [[638, "expression-code-generation"], [649, "expression-code-generation"]], "Expressions": [[439, "expressions"]], "Extending LLVM: Adding instructions, intrinsics, types, etc.": [[512, null]], "Extension Guide": [[501, "extending-the-library"]], "External Open Source Projects Using LLVM 10": [[587, "external-open-source-projects-using-llvm-10"]], "External Suites": [[607, "external-suites"]], "External Symbol Operands": [[555, "external-symbol-operands"]], "External Tutorials": [[655, "external-tutorials"]], "Extra Statistics to Further Diagnose Performance Issues": [[485, "extra-statistics-to-further-diagnose-performance-issues"]], "Extra files": [[609, "extra-files"]], "F": [[550, "f"]], "FAQ": [[551, "faq"]], "FFmpeg": [[583, "ffmpeg"]], "FLAT": [[0, "flat"], [1, "flat"], [2, "flat"], [3, "flat"], [7, "flat"], [440, "flat"]], "FLAT Modifiers": [[438, "flat-modifiers"]], "FLOATING POINT OPTIONS": [[466, "floating-point-options"]], "FTensors": [[583, "ftensors"]], "FUNCTION_BLOCK Contents": [[447, "function-block-contents"]], "Fallible constructors": [[579, "fallible-constructors"]], "Fast-Math Flags": [[549, "fast-math-flags"]], "FastISel": [[601, "fastisel"]], "FastISel Replacement": [[534, "fastisel-replacement"]], "FaultMaps and implicit checks": [[515, null]], "Feature detection": [[583, "feature-detection"]], "Features": [[563, "features"], [582, "features"], [613, "features"]], "File Headers": [[459, "file-headers"]], "File ID Mapping": [[506, "file-id-mapping"]], "File ID:": [[506, "file-id"]], "File Info Substream": [[567, "file-info-substream"]], "File Layout": [[571, "file-layout"], [575, "file-layout"]], "File inclusion": [[603, "file-inclusion"]], "File scope entities": [[603, "file-scope-entities"]], "FileCheck - Flexible pattern matching file verifier": [[460, null]], "FileCheck Numeric Substitution Blocks": [[460, "filecheck-numeric-substitution-blocks"]], "FileCheck Pseudo Numeric Variables": [[460, "filecheck-pseudo-numeric-variables"]], "FileCheck Regex Matching Syntax": [[460, "filecheck-regex-matching-syntax"]], "FileCheck String Substitution Blocks": [[460, "filecheck-string-substitution-blocks"]], "Filing a report": [[590, "filing-a-report"]], "Filtering and Sorting Options": [[489, "filtering-and-sorting-options"]], "Final Preparations": [[554, "final-preparations"]], "Final Suspend": [[505, "final-suspend"]], "Finding call sites: a slightly more complex example": [[579, "finding-call-sites-a-slightly-more-complex-example"]], "Finding potential reviewers": [[578, "finding-potential-reviewers"]], "Fine grained debug info with DEBUG_TYPE and the -debug-only option": [[579, "fine-grained-debug-info-with-debug-type-and-the-debug-only-option"]], "FireHose": [[583, "firehose"]], "First Class Types": [[549, "first-class-types"]], "Fixed (preassigned) registers": [[457, "fixed-preassigned-registers"]], "Fixed Lookup": [[593, "fixed-lookup"]], "Fixed Point Arithmetic Intrinsics": [[549, "fixed-point-arithmetic-intrinsics"]], "Fixed Size Arrays": [[579, "fixed-size-arrays"]], "Fixed Width Integers": [[447, "fixed-width-value"]], "Fixing errors": [[593, "fixing-errors"]], "Flags that control numerical code": [[502, "flags-that-control-numerical-code"]], "Flame Graph Generation": [[617, "flame-graph-generation"]], "Flat Scratch": [[440, "flat-scratch"]], "Flight Data Recorder Mode": [[616, "flight-data-recorder-mode"]], "Floating Point Denorm Mode Enumeration Values": [[440, "amdgpu-amdhsa-floating-point-denorm-mode-enumeration-values-table"]], "Floating Point Operations": [[525, "floating-point-operations"]], "Floating Point Rounding Mode Enumeration Values": [[440, "amdgpu-amdhsa-floating-point-rounding-mode-enumeration-values-table"]], "Floating-Point Environment": [[549, "floating-point-environment"]], "Floating-Point Numbers": [[439, "floating-point-numbers"]], "Floating-Point Types": [[549, "floating-point-types"]], "Flow Mapping": [[619, "flow-mapping"]], "Flow Sequence": [[619, "flow-sequence"]], "For developers to commit changes from Git": [[521, "for-developers-to-commit-changes-from-git"]], "Fork mode": [[551, "fork-mode"]], "Format Background": [[593, "format-background"]], "Format Grammar and Invariants": [[618, "format-grammar-and-invariants"]], "Format Lambdas Like Blocks Of Code": [[459, "format-lambdas-like-blocks-of-code"]], "Formatting strings (the formatv function)": [[579, "formatting-strings-the-formatv-function"]], "Fortran function information": [[593, "fortran-function-information"]], "Fortran specific debug information": [[593, "fortran-specific-debug-information"]], "Fragile tests": [[609, "fragile-tests"]], "Frame Layout": [[457, "frame-layout"]], "FreePOOMA": [[583, "freepooma"]], "Frequently Asked Questions (FAQ)": [[514, null]], "Frequently-used CMake variables": [[455, "frequently-used-cmake-variables"]], "Front-end bugs": [[544, "front-end-bugs"]], "Full Code Listing": [[621, "full-code-listing"], [622, "full-code-listing"], [623, "full-code-listing"], [624, "full-code-listing"], [625, "full-code-listing"], [637, "full-code-listing"], [638, "full-code-listing"], [639, "full-code-listing"], [640, "full-code-listing"], [641, "full-code-listing"], [642, "id1"], [643, "full-code-listing"], [644, "full-code-listing"], [648, "full-code-listing"], [649, "full-code-listing"], [650, "full-code-listing"], [651, "full-code-listing"], [652, "full-code-listing"], [653, "id1"]], "Funclet Operand Bundles": [[549, "funclet-operand-bundles"]], "Funclet parent tokens": [[511, "funclet-parent-tokens"]], "Funclet transitions": [[511, "funclet-transitions"]], "Function Attributes": [[549, "function-attributes"]], "Function Code Generation": [[638, "function-code-generation"], [649, "function-code-generation"]], "Function Entry Counts": [[449, "function-entry-counts"]], "Function Flags": [[549, "function-flags"]], "Function Record Order": [[618, "function-record-order"]], "Function Records": [[618, "function-records"]], "Function Summary": [[549, "function-summary"]], "Function Type": [[549, "function-type"]], "Function calls": [[457, "function-calls"]], "Function record:": [[506, "function-record"]], "Function template": [[579, "function-template"]], "FunctionComparator::cmpType": [[561, "functioncomparator-cmptype"]], "FunctionComparator::compare(void)": [[561, "functioncomparator-compare-void"]], "Functions": [[549, "functions"], [644, "functions"]], "Functions Vs Macros": [[456, "functions-vs-macros"]], "Functions comparison": [[561, "functions-comparison"]], "Further Exploration": [[617, "further-exploration"]], "Further Help": [[580, "further-help"]], "Future Features": [[563, "future-features"]], "Future Work": [[616, "future-work"]], "Future directions for the SelectionDAG": [[457, "future-directions-for-the-selectiondag"]], "Future extensions planned": [[615, "future-extensions-planned"]], "Fuzz Target": [[551, "fuzz-target"]], "Fuzzer Usage": [[551, "fuzzer-usage"]], "Fuzzer-friendly build mode": [[551, "fuzzer-friendly-build-mode"]], "Fuzzing LLVM libraries and tools": [[517, null]], "G": [[550, "g"]], "GC Transition Operand Bundles": [[549, "gc-transition-operand-bundles"]], "GC Transitions": [[598, "gc-transitions"]], "GCOV COMMAND": [[473, "gcov-command"]], "GDB Version": [[507, "gdb-version"]], "GENERAL AND MULTI-FORMAT OPTIONS": [[493, "general-and-multi-format-options"]], "GENERAL OPTIONS": [[464, "general-options"], [466, "general-options"]], "GENERIC AND CROSS-PLATFORM OPTIONS": [[487, "generic-and-cross-platform-options"], [497, "generic-and-cross-platform-options"]], "GNU binutils replacements": [[463, "gnu-binutils-replacements"]], "GWP-ASan": [[536, null]], "GWP-ASan vs. ASan": [[536, "gwp-asan-vs-asan"]], "G_ADD, G_SUB, G_MUL, G_AND, G_OR, G_XOR, G_SDIV, G_UDIV, G_SREM, G_UREM": [[525, "g-add-g-sub-g-mul-g-and-g-or-g-xor-g-sdiv-g-udiv-g-srem-g-urem"]], "G_ADDRSPACE_CAST": [[525, "g-addrspace-cast"]], "G_ANYEXT": [[525, "g-anyext"]], "G_ATOMICRMW_XCHG, G_ATOMICRMW_ADD, G_ATOMICRMW_SUB, G_ATOMICRMW_AND, G_ATOMICRMW_NAND, G_ATOMICRMW_OR, G_ATOMICRMW_XOR, G_ATOMICRMW_MAX, G_ATOMICRMW_MIN, G_ATOMICRMW_UMAX, G_ATOMICRMW_UMIN, G_ATOMICRMW_FADD, G_ATOMICRMW_FSUB": [[525, "g-atomicrmw-xchg-g-atomicrmw-add-g-atomicrmw-sub-g-atomicrmw-and-g-atomicrmw-nand-g-atomicrmw-or-g-atomicrmw-xor-g-atomicrmw-max-g-atomicrmw-min-g-atomicrmw-umax-g-atomicrmw-umin-g-atomicrmw-fadd-g-atomicrmw-fsub"]], "G_ATOMIC_CMPXCHG": [[525, "g-atomic-cmpxchg"]], "G_ATOMIC_CMPXCHG_WITH_SUCCESS": [[525, "g-atomic-cmpxchg-with-success"]], "G_BITCAST": [[525, "g-bitcast"]], "G_BITREVERSE": [[525, "g-bitreverse"]], "G_BLOCK_ADDR": [[525, "g-block-addr"]], "G_BR": [[525, "g-br"]], "G_BRCOND": [[525, "g-brcond"]], "G_BRINDIRECT": [[525, "g-brindirect"]], "G_BRJT": [[525, "g-brjt"]], "G_BSWAP": [[525, "g-bswap"]], "G_BUILD_VECTOR, G_BUILD_VECTOR_TRUNC": [[525, "g-build-vector-g-build-vector-trunc"]], "G_CONCAT_VECTORS": [[525, "g-concat-vectors"]], "G_CONSTANT": [[525, "g-constant"]], "G_CTLZ, G_CTTZ, G_CTPOP": [[525, "g-ctlz-g-cttz-g-ctpop"]], "G_CTLZ_ZERO_UNDEF, G_CTTZ_ZERO_UNDEF": [[525, "g-ctlz-zero-undef-g-cttz-zero-undef"]], "G_DYN_STACKALLOC": [[525, "g-dyn-stackalloc"]], "G_EXTRACT": [[525, "g-extract"]], "G_EXTRACT_VECTOR_ELT": [[525, "g-extract-vector-elt"]], "G_FABS": [[525, "g-fabs"]], "G_FADD, G_FSUB, G_FMUL, G_FDIV, G_FREM": [[525, "g-fadd-g-fsub-g-fmul-g-fdiv-g-frem"]], "G_FCANONICALIZE": [[525, "g-fcanonicalize"]], "G_FCEIL, G_FCOS, G_FSIN, G_FSQRT, G_FFLOOR, G_FRINT, G_FNEARBYINT": [[525, "g-fceil-g-fcos-g-fsin-g-fsqrt-g-ffloor-g-frint-g-fnearbyint"]], "G_FCMP": [[525, "g-fcmp"]], "G_FCONSTANT": [[525, "g-fconstant"]], "G_FCOPYSIGN": [[525, "g-fcopysign"]], "G_FENCE": [[525, "g-fence"]], "G_FEXP, G_FEXP2": [[525, "g-fexp-g-fexp2"]], "G_FLOG, G_FLOG2, G_FLOG10": [[525, "g-flog-g-flog2-g-flog10"]], "G_FMA": [[525, "g-fma"]], "G_FMAD": [[525, "g-fmad"]], "G_FMAXIMUM": [[525, "g-fmaximum"]], "G_FMAXNUM": [[525, "g-fmaxnum"]], "G_FMAXNUM_IEEE": [[525, "g-fmaxnum-ieee"]], "G_FMINIMUM": [[525, "g-fminimum"]], "G_FMINNUM": [[525, "g-fminnum"]], "G_FMINNUM_IEEE": [[525, "g-fminnum-ieee"]], "G_FNEG": [[525, "g-fneg"]], "G_FPEXT": [[525, "g-fpext"]], "G_FPOW": [[525, "g-fpow"]], "G_FPTOSI, G_FPTOUI, G_SITOFP, G_UITOFP": [[525, "g-fptosi-g-fptoui-g-sitofp-g-uitofp"]], "G_FPTRUNC": [[525, "g-fptrunc"]], "G_FRAME_INDEX": [[525, "g-frame-index"]], "G_GLOBAL_VALUE": [[525, "g-global-value"]], "G_ICMP": [[525, "g-icmp"]], "G_IMPLICIT_DEF": [[525, "g-implicit-def"]], "G_INDEXED_LOAD": [[525, "g-indexed-load"]], "G_INDEXED_SEXTLOAD": [[525, "g-indexed-sextload"]], "G_INDEXED_STORE": [[525, "g-indexed-store"]], "G_INDEXED_ZEXTLOAD": [[525, "g-indexed-zextload"]], "G_INSERT": [[525, "g-insert"]], "G_INSERT_VECTOR_ELT": [[525, "g-insert-vector-elt"]], "G_INTRINSIC, G_INTRINSIC_W_SIDE_EFFECTS": [[525, "g-intrinsic-g-intrinsic-w-side-effects"]], "G_INTRINSIC_ROUND": [[525, "g-intrinsic-round"]], "G_INTRINSIC_TRUNC": [[525, "g-intrinsic-trunc"]], "G_INTTOPTR": [[525, "g-inttoptr"]], "G_JUMP_TABLE": [[525, "g-jump-table"]], "G_LOAD, G_SEXTLOAD, G_ZEXTLOAD": [[525, "g-load-g-sextload-g-zextload"]], "G_MERGE_VALUES": [[525, "g-merge-values"]], "G_PHI": [[525, "g-phi"]], "G_PTRTOINT": [[525, "g-ptrtoint"]], "G_PTR_ADD": [[525, "g-ptr-add"]], "G_PTR_MASK": [[525, "g-ptr-mask"]], "G_SELECT": [[525, "g-select"]], "G_SEXT": [[525, "g-sext"]], "G_SEXT_INREG": [[525, "g-sext-inreg"]], "G_SHL, G_LSHR, G_ASHR": [[525, "g-shl-g-lshr-g-ashr"]], "G_SHUFFLE_VECTOR": [[525, "g-shuffle-vector"]], "G_SMIN, G_SMAX, G_UMIN, G_UMAX": [[525, "g-smin-g-smax-g-umin-g-umax"]], "G_STORE": [[525, "g-store"]], "G_TRUNC": [[525, "g-trunc"]], "G_UADDE, G_SADDE, G_USUBE, G_SSUBE": [[525, "g-uadde-g-sadde-g-usube-g-ssube"]], "G_UADDO, G_SADDO, G_USUBO, G_SSUBO, G_SMULO, G_UMULO": [[525, "g-uaddo-g-saddo-g-usubo-g-ssubo-g-smulo-g-umulo"]], "G_UMULH, G_SMULH": [[525, "g-umulh-g-smulh"]], "G_UNMERGE_VALUES": [[525, "g-unmerge-values"]], "G_VAARG": [[525, "g-vaarg"]], "G_VASTART": [[525, "g-vastart"]], "G_ZEXT": [[525, "g-zext"]], "Garbage Collected Stack Frames": [[645, "garbage-collected-stack-frames"], [654, "garbage-collected-stack-frames"]], "Garbage Collection": [[586, "garbage-collection"]], "Garbage Collection Safepoints in LLVM": [[598, null]], "Garbage Collection with LLVM": [[518, null]], "Garbage Collector Strategy Names": [[549, "garbage-collector-strategy-names"]], "General": [[445, "general"], [618, "general"]], "General Assembly Syntax": [[513, "general-assembly-syntax"]], "General BackEnds": [[601, "general-backends"]], "General Distribution Guidance": [[453, "general-distribution-guidance"]], "General Information": [[579, "general-information"]], "General Intrinsics": [[549, "general-intrinsics"]], "General suggestions": [[558, "general-suggestions"]], "Generating Test Output": [[608, "generating-test-output"]], "Generating safe points": [[518, "generating-safe-points"]], "Generic Algorithms": [[583, "generic-algorithms"]], "Generic Machine IR": [[524, null]], "Generic Machine Instructions": [[524, "generic-machine-instructions"]], "Generic Opcode Reference": [[524, "generic-opcode-reference"]], "Generic Opcodes": [[525, null]], "Generic Random Fuzzing": [[517, "generic-random-fuzzing"]], "Generic Virtual Registers": [[524, "generic-virtual-registers"]], "Getting Involved": [[520, null]], "Getting Started": [[523, "getting-started"], [551, "getting-started"], [564, "getting-started"]], "Getting Started with LLVM": [[521, "getting-started-with-llvm"]], "Getting Started with the LLVM System": [[521, null]], "Getting Started with the LLVM System using Microsoft Visual Studio": [[523, null]], "Getting Started/Tutorials": [[522, null]], "Getting Traces": [[617, "getting-traces"]], "Getting a Modern Host C++ Toolchain": [[521, "getting-a-modern-host-c-toolchain"]], "Getting the Source Code and Building LLVM": [[521, "getting-the-source-code-and-building-llvm"]], "Github Repository Description": [[581, "github-repository-description"]], "Global Attributes": [[549, "global-attributes"]], "Global Instruction Selection": [[534, null]], "Global Internal Table": [[440, "global-internal-table"]], "Global Structures Alias Analysis": [[613, "global-structures-alias-analysis"]], "Global Symbols": [[565, "global-symbols"]], "Global Value Operands": [[555, "global-value-operands"]], "Global Value Summary Entry": [[549, "global-value-summary-entry"]], "Global Variable Summary": [[549, "global-variable-summary"]], "Global Variable and Function Addresses": [[549, "global-variable-and-function-addresses"]], "Global Variables": [[549, "global-variables"]], "GnuPG": [[583, "gnupg"]], "Goals and non-goals": [[518, "goals-and-non-goals"]], "Graph": [[583, "graph"]], "Graph Construction": [[508, "graph-construction"]], "Graph500 reference implementations": [[583, "graph500-reference-implementations"]], "Graphics User Data": [[440, "graphics-user-data"]], "Grouping options into categories": [[501, "grouping-options-into-categories"]], "Guard widening:": [[549, "guard-widening"]], "Guarded Allocation Pool": [[536, "guarded-allocation-pool"]], "Guidelines for Go code": [[459, "guidelines-for-go-code"]], "H": [[550, "h"]], "HCC": [[440, "hcc"]], "HOW LLVM-MCA WORKS": [[485, "how-llvm-mca-works"]], "HSA AQL Queue": [[440, "hsa-aql-queue"]], "HSA Signals": [[440, "hsa-signals"]], "Hacks": [[541, "hacks"]], "Half Precision Floating-Point Intrinsics": [[549, "half-precision-floating-point-intrinsics"]], "Handling two address instructions": [[457, "handling-two-address-instructions"]], "Handy utilities": [[563, "handy-utilities"]], "Hardware": [[503, "hardware"], [521, "hardware"], [523, "hardware"]], "HasGlobalAliases, removeUsers": [[561, "hasglobalaliases-removeusers"]], "Hash Tables": [[593, "hash-tables"]], "Header": [[440, "header"], [506, "header"]], "Header Layout": [[593, "header-layout"]], "Header Section": [[618, "header-section"]], "Heap Allocated Arrays": [[579, "heap-allocated-arrays"]], "Heap tagging": [[559, "heap-tagging"]], "Helpful Hints for Common Operations": [[579, "helpful-hints-for-common-operations"]], "Helpful Information About LLVM": [[504, "helpful-information-about-llvm"]], "Hex types": [[619, "hex-types"]], "Hexagon": [[503, "hexagon"]], "Hiding an option from -help output": [[501, "hiding-an-option-from-help-output"]], "High Level Interface": [[599, "high-level-interface"]], "High Level Overview": [[506, "high-level-overview"]], "High Level Structure": [[549, "high-level-structure"], [555, "high-level-structure"]], "High Performance Geometric Multigrid": [[583, "high-performance-geometric-multigrid"]], "High-Level Design": [[508, "high-level-design"]], "High-level Design": [[585, "high-level-design"]], "Historical Note": [[524, null]], "Host C++ Toolchain, both Compiler and Standard Library": [[521, "host-c-toolchain-both-compiler-and-standard-library"]], "How To Add A Constrained Floating-Point Intrinsic": [[441, null]], "How To Add Your Build Configuration To LLVM Buildbot Infrastructure": [[537, null]], "How To Build Clang and LLVM with Profile-Guided Optimizations": [[539, null]], "How To Build On ARM": [[538, null]], "How To Cross-Compile Clang/LLVM using Clang/LLVM": [[541, null]], "How To Release LLVM To The Public": [[542, null]], "How To Use Attributes": [[545, null]], "How To Use Instruction Mappings": [[546, null]], "How To Validate a New Release": [[588, null]], "How can I tell if my front-end is following the rules?": [[519, "how-can-i-tell-if-my-front-end-is-following-the-rules"]], "How does VLA addressing work with GEPs?": [[519, "how-does-vla-addressing-work-with-geps"]], "How good is my fuzzer?": [[551, "how-good-is-my-fuzzer"]], "How is GEP different from ptrtoint, arithmetic, and inttoptr?": [[519, "how-is-gep-different-from-ptrtoint-arithmetic-and-inttoptr"]], "How it works": [[597, "how-it-works"]], "How portable is the LLVM source code?": [[514, "how-portable-is-the-llvm-source-code"]], "How registers are represented in LLVM": [[457, "how-registers-are-represented-in-llvm"]], "How the packetization tables are generated and used": [[457, "how-the-packetization-tables-are-generated-and-used"]], "How to Add Process and Library Symbols to the JITDylibs": [[563, "how-to-add-process-and-library-symbols-to-the-jitdylibs"]], "How to Cross Compile Compiler-rt Builtins For Arm": [[540, null]], "How to Submit a Patch": [[504, "how-to-submit-a-patch"]], "How to build it": [[535, "how-to-build-it"]], "How to create JITDylibs and set up linkage relationships": [[563, "how-to-create-jitdylibs-and-set-up-linkage-relationships"]], "How to do it?": [[561, "how-to-do-it"]], "How to implement cmpValues?": [[561, "how-to-implement-cmpvalues"]], "How to manage symbol strings": [[563, "how-to-manage-symbol-strings"]], "How to pick the date?": [[558, "how-to-pick-the-date"]], "How to set up LLVM-style RTTI for your class hierarchy": [[543, null]], "How to start LLVM Social in your town": [[558, null]], "How to submit an LLVM bug report": [[544, null]], "How to use ThreadSafeModule and ThreadSafeContext": [[563, "how-to-use-threadsafemodule-and-threadsafecontext"]], "How to use this template": [[595, "how-to-use-this-template"]], "How to write a back-end": [[601, "how-to-write-a-back-end"]], "How variable location metadata is transformed during CodeGen": [[593, "how-variable-location-metadata-is-transformed-during-codegen"]], "How-tos": [[563, "how-tos"]], "HydroBench": [[583, "hydrobench"]], "I": [[550, "i"]], "I Still Can\u2019t Find What I\u2019m Looking For": [[516, "i-still-can-t-find-what-i-m-looking-for"]], "I don\u2019t understand the GetElementPtr instruction. Help!": [[514, "i-don-t-understand-the-getelementptr-instruction-help"]], "IBM - Official manuals and docs": [[503, "ibm-official-manuals-and-docs"]], "IFuncs": [[549, "ifuncs"]], "IR Backwards Compatibility": [[509, "ir-backwards-compatibility"]], "IR Best Practices": [[516, "ir-best-practices"]], "IRC": [[520, "irc"]], "IRTranslator": [[526, null]], "Identifiers": [[549, "identifiers"]], "Identifying GC roots on the stack": [[518, "gcroot"]], "If Conversion": [[613, "if-conversion"]], "If \u201cF\u201d could not be overridden, fix it!": [[561, "if-f-could-not-be-overridden-fix-it"]], "If \u201cF\u201d may be overridden": [[561, "if-f-may-be-overridden"]], "If, ElseIf, Else": [[456, "if-elseif-else"]], "If/Then/Else": [[640, "if-then-else"], [651, "if-then-else"]], "Image and Samplers": [[440, "image-and-samplers"]], "Image processing": [[583, "image-processing"]], "Immediate Operands": [[555, "immediate-operands"]], "Implement a subclass of TargetInstrInfo": [[614, "implement-a-subclass-of-targetinstrinfo"]], "Implement a subclass of TargetRegisterInfo": [[614, "implement-a-subclass-of-targetregisterinfo"]], "Implementation": [[446, "implementation"], [559, "implementation"]], "Implementation Details": [[508, "implementation-details"], [592, "implementation-details"]], "Implementation:": [[549, "implementation"], [549, "id41"]], "Implementation: Getting from mass and scale to frequency": [[448, "implementation-getting-from-mass-and-scale-to-frequency"]], "Implementation: a series of DAGs": [[448, "implementation-a-series-of-dags"]], "Implementing Analysis Groups": [[615, "implementing-analysis-groups"]], "Implementing a Native Assembler": [[457, "implementing-a-native-assembler"]], "Implementing a collector plugin": [[518, "implementing-a-collector-plugin"]], "Implementing portable offsetof/sizeof": [[645, "implementing-portable-offsetof-sizeof"], [654, "implementing-portable-offsetof-sizeof"]], "Important Derived Types": [[579, "important-derived-types"]], "Important Public Members of the BasicBlock class": [[579, "important-public-members-of-the-basicblock-class"]], "Important Public Members of the Function": [[579, "important-public-members-of-the-function"]], "Important Public Members of the GlobalValue class": [[579, "important-public-members-of-the-globalvalue-class"]], "Important Public Members of the GlobalVariable class": [[579, "important-public-members-of-the-globalvariable-class"]], "Important Public Members of the Instruction class": [[579, "important-public-members-of-the-instruction-class"]], "Important Public Members of the Module class": [[579, "important-public-members-of-the-module-class"]], "Important Public Members of the User class": [[579, "important-public-members-of-the-user-class"]], "Important Public Members of the Value class": [[579, "important-public-members-of-the-value-class"]], "Important Public Methods": [[579, "important-public-methods"]], "Important Subclasses of Constant": [[579, "important-subclasses-of-constant"]], "Important Subclasses of the Instruction class": [[579, "important-subclasses-of-the-instruction-class"]], "Important and useful LLVM APIs": [[579, "important-and-useful-llvm-apis"]], "Importing local repositories": [[581, "importing-local-repositories"]], "In what language is LLVM written?": [[514, "in-what-language-is-llvm-written"]], "Incorrect code generation": [[544, "incorrect-code-generation"]], "Incremental Development": [[509, "incremental-development"]], "Index et tableaux": [[620, "indices-and-tables"]], "Indirect inputs and outputs": [[549, "indirect-inputs-and-outputs"]], "IndirectBrInst": [[449, "indirectbrinst"]], "Inductions": [[613, "inductions"]], "Initial Kernel Execution State": [[440, "initial-kernel-execution-state"]], "Initial SelectionDAG Construction": [[457, "initial-selectiondag-construction"]], "Initializing roots to null": [[518, "initializing-roots-to-null"]], "Inline Asm": [[457, "inline-asm"]], "Inline Asm Constraint String": [[549, "inline-asm-constraint-string"]], "Inline Asm Metadata": [[549, "inline-asm-metadata"]], "Inline Assembler Expressions": [[549, "inline-assembler-expressions"]], "Input": [[619, "input"]], "Input constraints": [[549, "input-constraints"]], "Installing and Using": [[541, "installing-and-using"]], "InstrInfo": [[601, "instrinfo"]], "InstrMapping Class Overview": [[546, "instrmapping-class-overview"]], "Instruction Alias Processing": [[457, "instruction-alias-processing"]], "Instruction Aliases": [[457, "instruction-aliases"]], "Instruction Annotations": [[557, "instruction-annotations"]], "Instruction Dispatch": [[485, "instruction-dispatch"]], "Instruction Examples": [[440, "instruction-examples"]], "Instruction Flags": [[555, "instruction-flags"]], "Instruction Flow": [[485, "instruction-flow"]], "Instruction Issue": [[485, "instruction-issue"]], "Instruction Matching": [[457, "instruction-matching"]], "Instruction Operand Mapping": [[614, "instruction-operand-mapping"]], "Instruction Operand Name Mapping": [[614, "instruction-operand-name-mapping"]], "Instruction Operand Types": [[614, "instruction-operand-types"]], "Instruction Parsing": [[457, "instruction-parsing"]], "Instruction Reference": [[549, "instruction-reference"]], "Instruction Relation Mapping": [[614, "instruction-relation-mapping"]], "Instruction Scheduling": [[593, "instruction-scheduling"], [614, "instruction-scheduling"]], "Instruction Selection": [[457, "instruction-selection-section"]], "Instruction Selector": [[614, "instruction-selector"]], "Instruction Set": [[614, "instruction-set"]], "Instruction Threshold": [[617, "instruction-threshold"]], "Instruction encoding (arithmetic and jump)": [[457, "instruction-encoding-arithmetic-and-jump"]], "Instruction encoding (load, store)": [[457, "instruction-encoding-load-store"]], "Instruction folding": [[457, "instruction-folding"]], "Instruction naming": [[457, "instruction-naming"]], "InstructionSelect": [[527, null]], "Instructions": [[0, "instructions"], [1, "instructions"], [2, "instructions"], [3, "instructions"], [4, "instructions"], [5, "instructions"], [6, "instructions"], [7, "instructions"], [436, "instructions"], [437, "instructions"], [440, "instructions"]], "Instrumentation Attributes": [[617, "instrumentation-attributes"]], "Instrumenting your C/C++/Objective-C Application": [[616, "instrumenting-your-c-c-objective-c-application"]], "Integer Extension and Truncation": [[525, "integer-extension-and-truncation"]], "Integer Numbers": [[439, "integer-numbers"]], "Integer Operations": [[525, "integer-operations"]], "Integer Type": [[549, "integer-type"]], "Intel IA-32-specific Options": [[465, "intel-ia-32-specific-options"]], "Intended Usage": [[547, "intended-usage"]], "Interaction and relationship between User and Use objects": [[579, "interaction-and-relationship-between-user-and-use-objects"]], "Interfaces which may be specified": [[443, "interfaces-which-may-be-specified"]], "Internal vs External Storage": [[501, "internal-vs-external-storage"]], "Interoperability with std::error_code and ErrorOr": [[579, "interoperability-with-std-error-code-and-erroror"]], "Intrinsic": [[601, "intrinsic"]], "Intrinsic Functions": [[549, "intrinsic-functions"]], "Intrinsic Global Variables": [[549, "intrinsic-global-variables"]], "IntrinsicID Operands": [[555, "intrinsicid-operands"]], "Intrinsics": [[505, "intrinsics"], [596, "intrinsics"], [598, "intrinsics"]], "Introduction": [[0, "introduction"], [1, "introduction"], [2, "introduction"], [3, "introduction"], [4, "introduction"], [5, "introduction"], [6, "introduction"], [7, "introduction"], [436, "introduction"], [440, "introduction"], [442, "introduction"], [443, "introduction"], [444, "introduction"], [445, "introduction"], [446, "introduction"], [448, "introduction"], [449, "introduction"], [453, "introduction"], [455, "introduction"], [456, "introduction"], [457, "introduction"], [459, "introduction"], [501, "introduction"], [502, "introduction"], [505, "introduction"], [506, "introduction"], [508, "introduction"], [509, "introduction"], [510, "introduction"], [511, "introduction"], [513, "introduction"], [517, "introduction"], [518, "introduction"], [519, "introduction"], [534, "introduction"], [535, "introduction"], [536, "introduction"], [537, "introduction"], [538, "introduction"], [539, "introduction"], [540, "introduction"], [541, "introduction"], [542, "introduction"], [545, "introduction"], [546, "introduction"], [547, "introduction"], [548, "introduction"], [549, "introduction"], [551, "introduction"], [553, "introduction"], [554, "introduction"], [555, "introduction"], [557, "introduction"], [559, "introduction"], [560, "introduction"], [561, "introduction"], [562, "introduction"], [563, "introduction"], [564, "introduction"], [565, "introduction"], [566, "introduction"], [567, "introduction"], [569, "introduction"], [570, "introduction"], [574, "introduction"], [575, "introduction"], [577, "introduction"], [579, "introduction"], [581, "introduction"], [582, "introduction"], [584, "introduction"], [587, "introduction"], [588, "introduction"], [591, "introduction"], [592, "introduction"], [593, "introduction"], [593, "id5"], [593, "id6"], [597, "introduction"], [601, "introduction"], [602, "introduction"], [603, "introduction"], [604, "introduction"], [605, "introduction"], [614, "introduction"], [616, "introduction"], [618, "introduction"]], "Introduction - Achieving consistency in how we deal with bug reports": [[450, "introduction-achieving-consistency-in-how-we-deal-with-bug-reports"]], "Introduction - Got bugs?": [[544, "introduction-got-bugs"]], "Introduction and Warning": [[512, "introduction-and-warning"]], "Introduction to SelectionDAGs": [[457, "introduction-to-selectiondags"]], "Introduction to YAML": [[619, "introduction-to-yaml"]], "Introduction to YAML I/O": [[619, "introduction-to-yaml-i-o"]], "Introduction to the LLVM remark diagnostics": [[589, "introduction-to-the-llvm-remark-diagnostics"]], "Introduction \u2014 What is a pass?": [[615, "introduction-what-is-a-pass"]], "Invalidation and updating": [[560, "invalidation-and-updating"]], "Invoking clang": [[502, "invoking-clang"]], "Is Generally Reliable": [[457, "is-generally-reliable"]], "Itanium (ia64)": [[503, "itanium-ia64"]], "Itanium ABI Zero-cost Exception Handling": [[511, "itanium-abi-zero-cost-exception-handling"]], "Iterating over def-use & use-def chains": [[579, "iterating-over-def-use-use-def-chains"]], "Iterating over predecessors & successors of blocks": [[579, "iterating-over-predecessors-successors-of-blocks"]], "Iterating over the BasicBlock in a Function": [[579, "iterating-over-the-basicblock-in-a-function"]], "Iterating over the Instruction in a BasicBlock": [[579, "iterating-over-the-instruction-in-a-basicblock"]], "Iterating over the Instruction in a Function": [[579, "iterating-over-the-instruction-in-a-function"]], "I\u2019d like to write a self-hosting LLVM compiler. How should I interface with the LLVM middle-end optimizers and back-end code generators?": [[514, "i-d-like-to-write-a-self-hosting-llvm-compiler-how-should-i-interface-with-the-llvm-middle-end-optimizers-and-back-end-code-generators"]], "I\u2019m writing a backend for a target which needs custom lowering for GEP. How do I do this?": [[519, "i-m-writing-a-backend-for-a-target-which-needs-custom-lowering-for-gep-how-do-i-do-this"]], "JIT": [[612, "jit"]], "JIT API Basics": [[621, "jit-api-basics"]], "JIT Support": [[457, "jit-support"], [614, "jit-support"]], "JSON": [[601, "json"]], "Jump-table Index Operands": [[555, "jump-table-index-operands"]], "Kaleidoscope Tutorial": [[626, null], [627, null], [628, null], [629, null], [630, null], [631, null], [632, null], [633, null], [634, null], [635, null]], "Kaleidoscope: Adding Debug Information": [[644, null]], "Kaleidoscope: Adding JIT and Optimizer Support": [[639, null], [650, null]], "Kaleidoscope: Code generation to LLVM IR": [[638, null], [649, null]], "Kaleidoscope: Compiling to Object Code": [[643, null]], "Kaleidoscope: Conclusion and other useful LLVM tidbits": [[645, null], [654, null]], "Kaleidoscope: Extending the Language: Control Flow": [[640, null], [651, null]], "Kaleidoscope: Extending the Language: Mutable Variables": [[642, null], [653, null]], "Kaleidoscope: Extending the Language: User-defined Operators": [[641, null], [652, null]], "Kaleidoscope: Implementing a Language with LLVM": [[655, "kaleidoscope-implementing-a-language-with-llvm"]], "Kaleidoscope: Implementing a Language with LLVM in Objective Caml": [[655, "kaleidoscope-implementing-a-language-with-llvm-in-objective-caml"]], "Kaleidoscope: Implementing a Parser and AST": [[637, null], [648, null]], "Kaleidoscope: Kaleidoscope Introduction and the Lexer": [[636, null]], "Kaleidoscope: Tutorial Introduction and the Lexer": [[647, null]], "KaleidoscopeJIT": [[621, "kaleidoscopejit"]], "Keep the current coding standard": [[584, "keep-the-current-coding-standard"]], "Keep \u00ab\u00a0Internal\u00a0\u00bb Headers Private": [[459, "keep-internal-headers-private"]], "Keeping LLVM Portable": [[599, "keeping-llvm-portable"]], "Keeping git blame usable": [[584, "keeping-git-blame-usable"]], "Kernel Descriptor": [[440, "kernel-descriptor"]], "Kernel Descriptor for GFX6-GFX10": [[440, "kernel-descriptor-for-gfx6-gfx10"], [440, "amdgpu-amdhsa-kernel-descriptor-gfx6-gfx10-table"]], "Kernel Dispatch": [[440, "kernel-dispatch"]], "Kernel Metadata": [[562, "kernel-metadata"]], "Kernel Prolog": [[440, "kernel-prolog"]], "Key Terminology": [[553, "key-terminology"]], "Kicking the Tires": [[641, "kicking-the-tires"], [652, "kicking-the-tires"]], "Known Bits Analysis": [[528, null]], "Known Problems": [[602, "known-problems"]], "Kokkos": [[583, "kokkos"]], "L": [[550, "l"]], "LDR and LD1": [[446, "ldr-and-ld1"]], "LEB128": [[506, "leb128"]], "LF_ARGLIST (0x1201)": [[566, "lf-arglist-0x1201"]], "LF_ARRAY (0x1503)": [[566, "lf-array-0x1503"]], "LF_BCLASS (0x1400)": [[566, "lf-bclass-0x1400"]], "LF_BINTERFACE (0x151a)": [[566, "lf-binterface-0x151a"]], "LF_BITFIELD (0x1205)": [[566, "lf-bitfield-0x1205"]], "LF_BUILDINFO (0x1603)": [[566, "lf-buildinfo-0x1603"]], "LF_CLASS (0x1504)": [[566, "lf-class-0x1504"]], "LF_ENDPRECOMP (0x0014)": [[566, "lf-endprecomp-0x0014"]], "LF_ENUM (0x1507)": [[566, "lf-enum-0x1507"]], "LF_ENUMERATE (0x1502)": [[566, "lf-enumerate-0x1502"]], "LF_FIELDLIST (0x1203)": [[566, "lf-fieldlist-0x1203"]], "LF_FUNC_ID (0x1601)": [[566, "lf-func-id-0x1601"]], "LF_INDEX (0x1404)": [[566, "lf-index-0x1404"]], "LF_INTERFACE (0x1519)": [[566, "lf-interface-0x1519"]], "LF_IVBCLASS (0x1402)": [[566, "lf-ivbclass-0x1402"]], "LF_LABEL (0x000e)": [[566, "lf-label-0x000e"]], "LF_MEMBER (0x150d)": [[566, "lf-member-0x150d"]], "LF_METHOD (0x150f)": [[566, "lf-method-0x150f"]], "LF_METHODLIST (0x1206)": [[566, "lf-methodlist-0x1206"]], "LF_MFUNCTION (0x1009)": [[566, "lf-mfunction-0x1009"]], "LF_MFUNC_ID (0x1602)": [[566, "lf-mfunc-id-0x1602"]], "LF_MODIFIER (0x1001)": [[566, "lf-modifier-0x1001"]], "LF_NESTTYPE (0x1510)": [[566, "lf-nesttype-0x1510"]], "LF_ONEMETHOD (0x1511)": [[566, "lf-onemethod-0x1511"]], "LF_PADn (0xf0 + n)": [[566, "lf-padn-0xf0-n"]], "LF_POINTER (0x1002)": [[566, "lf-pointer-0x1002"]], "LF_PRECOMP (0x1509)": [[566, "lf-precomp-0x1509"]], "LF_PROCEDURE (0x1008)": [[566, "lf-procedure-0x1008"]], "LF_STMEMBER (0x150e)": [[566, "lf-stmember-0x150e"]], "LF_STRING_ID (0x1605)": [[566, "lf-string-id-0x1605"]], "LF_STRUCTURE (0x1505)": [[566, "lf-structure-0x1505"]], "LF_SUBSTR_LIST (0x1604)": [[566, "lf-substr-list-0x1604"]], "LF_TYPESERVER2 (0x1515)": [[566, "lf-typeserver2-0x1515"]], "LF_UDT_MOD_SRC_LINE (0x1607)": [[566, "lf-udt-mod-src-line-0x1607"]], "LF_UDT_SRC_LINE (0x1606)": [[566, "lf-udt-src-line-0x1606"]], "LF_UNION (0x1506)": [[566, "lf-union-0x1506"]], "LF_VBCLASS (0x1401)": [[566, "lf-vbclass-0x1401"]], "LF_VFTABLE (0x151d)": [[566, "lf-vftable-0x151d"]], "LF_VFUNCTAB (0x1409)": [[566, "lf-vfunctab-0x1409"]], "LF_VTSHAPE (0x000a)": [[566, "lf-vtshape-0x000a"]], "LIT EXAMPLE TESTS": [[464, "lit-example-tests"]], "LIT INFRASTRUCTURE": [[464, "lit-infrastructure"]], "LLJIT and LLLazyJIT": [[563, "lljit-and-lllazyjit"]], "LLVM": [[440, "llvm"]], "LLVM 10.0.0 Release Notes": [[587, null]], "LLVM Alias Analysis Infrastructure": [[443, null]], "LLVM Atomic Instructions and Concurrency Guide": [[444, null]], "LLVM BackEnds": [[601, "llvm-backends"]], "LLVM Bitcode File Format": [[447, null]], "LLVM Block Frequency Terminology": [[448, null]], "LLVM Branch Weight Metadata": [[449, null]], "LLVM Bug Life Cycle": [[450, null]], "LLVM Builds and Distributions": [[612, "llvm-builds-and-distributions"]], "LLVM Code Coverage Mapping Format": [[506, null]], "LLVM Code Generation": [[511, "llvm-code-generation"]], "LLVM Coding Standards": [[459, null]], "LLVM Command Guide": [[463, null]], "LLVM Community Code of Conduct": [[458, null]], "LLVM Developer Policy": [[509, null]], "LLVM Extensions": [[513, null]], "LLVM Function Attribute": [[616, "llvm-function-attribute"]], "LLVM IR": [[586, "llvm-ir"]], "LLVM IR Blocks": [[447, "llvm-ir-blocks"]], "LLVM IR Encoding": [[447, "llvm-ir-encoding"]], "LLVM IR Features": [[518, "llvm-ir-features"]], "LLVM IR Lane ordering": [[446, "llvm-ir-lane-ordering"]], "LLVM IR Magic Number": [[447, "llvm-ir-magic-number"]], "LLVM IR Representation": [[506, "llvm-ir-representation"]], "LLVM IR for If/Then/Else": [[640, "llvm-ir-for-if-then-else"], [651, "llvm-ir-for-if-then-else"]], "LLVM IR for the \u201cfor\u201d Loop": [[640, "llvm-ir-for-the-for-loop"], [651, "llvm-ir-for-the-for-loop"]], "LLVM Language Reference Manual": [[549, null]], "LLVM Link Time Optimization: Design and Implementation": [[552, null]], "LLVM Loop Terminology (and Canonical Forms)": [[553, null]], "LLVM Optimization Passes": [[639, "llvm-optimization-passes"], [650, "llvm-optimization-passes"]], "LLVM PowerPC ABI": [[457, "llvm-powerpc-abi"]], "LLVM Programmer\u2019s Manual": [[579, null]], "LLVM Project Wrappers": [[456, "llvm-project-wrappers"]], "LLVM Reference": [[586, "llvm-reference"]], "LLVM Testing Infrastructure Guide": [[609, null]], "LLVM Testing Infrastructure Organization": [[609, "llvm-testing-infrastructure-organization"]], "LLVM Tutorial: Table of Contents": [[655, null]], "LLVM bitstream remarks": [[589, "llvm-bitstream-remarks"]], "LLVM bugpoint tool: design and usage": [[451, null]], "LLVM-specific variables": [[455, "llvm-specific-variables"]], "LLVMBuild Format Reference": [[548, "llvmbuild-format-reference"]], "LLVMBuild Guide": [[548, null]], "LLVM\u2019s Analysis and Transform Passes": [[577, null]], "LLVM\u2019s Optional Rich Disassembly Output": [[557, null]], "LOCAL CONFIGURATION FILES": [[464, "local-configuration-files"]], "LTO Post-Link Module Flags Metadata": [[549, "lto-post-link-module-flags-metadata"]], "Label Type": [[549, "label-type"]], "Laissez faire": [[584, "laissez-faire"]], "Lanai": [[503, "lanai"]], "Language Extensions and File Format Changes": [[593, "language-extensions-and-file-format-changes"]], "Language and Compiler Issues": [[459, "language-and-compiler-issues"]], "Language-Specific Optimizations": [[645, "language-specific-optimizations"], [654, "language-specific-optimizations"]], "Languages, Libraries, and Standards": [[459, "languages-libraries-and-standards"]], "Late Machine Code Optimizations": [[457, "late-machine-code-optimizations"]], "Layering Over Another libc": [[582, "layering-over-another-libc"]], "Laziness": [[563, "laziness"]], "Lazy Compilation": [[623, "lazy-compilation"]], "Lazy Initialization with ManagedStatic": [[579, "lazy-initialization-with-managedstatic"]], "Leaf Records": [[566, "leaf-records"]], "Leaks": [[551, "leaks"]], "Leftover Transformations": [[610, "leftover-transformations"]], "Legacy License Structure": [[509, "legacy-license-structure"]], "Legal": [[614, "legal"]], "Legalizer": [[529, null]], "Lexer Extensions for If/Then/Else": [[640, "lexer-extensions-for-if-then-else"], [651, "lexer-extensions-for-if-then-else"]], "Lexer Extensions for the \u201cfor\u201d Loop": [[640, "lexer-extensions-for-the-for-loop"], [651, "lexer-extensions-for-the-for-loop"]], "Lexical Analysis": [[604, "lexical-analysis"]], "LibFuzzer": [[586, "libfuzzer"]], "Libcalls: __atomic_*": [[444, "libcalls-atomic"]], "Libcalls: __sync_*": [[444, "libcalls-sync"]], "Library": [[591, "library"]], "Library Layering": [[459, "library-layering"]], "License": [[514, "license"]], "Licensing": [[535, "licensing"]], "Lifetime": [[547, "lifetime"]], "Limitation": [[611, null]], "Limitations": [[443, "limitations"], [555, "limitations"]], "Limitations and Half Baked Ideas": [[598, "limitations-and-half-baked-ideas"]], "Linkage Types": [[549, "linkage-types"]], "Linking with Libdevice": [[562, "linking-with-libdevice"]], "Links": [[521, "links"], [523, "links"], [595, "links"]], "Linux": [[445, "linux"], [503, "linux"]], "Linux Intel": [[445, "linux-intel"]], "Lists": [[456, "lists"], [595, "lists"]], "Lists of Lists": [[456, "lists-of-lists"]], "Live In Registers": [[555, "live-in-registers"]], "Live Intervals": [[457, "live-intervals"]], "Live Intervals Analysis": [[457, "live-intervals-analysis"]], "Live Variable Analysis": [[457, "live-variable-analysis"]], "LiveDebugValues expansion of variable locations": [[593, "livedebugvalues-expansion-of-variable-locations"]], "Load/Store Unit and Memory Consistency Model": [[485, "load-store-unit-and-memory-consistency-model"]], "Local LLVM Configuration": [[521, "local-llvm-configuration"]], "Locating clobbers yourself": [[560, "locating-clobbers-yourself"]], "Location": [[454, "location"]], "Logarithmical search": [[561, "logarithmical-search"]], "Loop Closed SSA (LCSSA)": [[553, "loop-closed-ssa-lcssa"]], "Loop Distribution": [[610, "loop-distribution"]], "Loop Interchange": [[610, "loop-interchange"]], "Loop Scale": [[448, "loop-scale"]], "Loop Simplify Form": [[553, "loop-simplify-form"]], "Loop Unrolling": [[610, "loop-unrolling"]], "Loop Vectorization and Interleaving": [[610, "loop-vectorization-and-interleaving"]], "LoopInfo": [[553, "loopinfo"]], "Looping": [[603, "looping"]], "Loops": [[456, "loops"]], "Loops with unknown trip count": [[613, "loops-with-unknown-trip-count"]], "Low Level Type": [[524, "low-level-type"]], "Lowering Quality and Representation Overhead": [[598, "lowering-quality-and-representation-overhead"]], "Lowering:": [[549, "lowering"], [549, "id1002"], [549, "id1020"], [549, "id1025"], [549, "id1030"], [549, "id1032"], [549, "id1034"], [549, "id1036"], [549, "id1038"], [549, "id1040"], [549, "id1042"], [549, "id1044"], [549, "id1046"], [549, "id1048"], [549, "id1050"], [549, "id1052"], [549, "id1054"], [549, "id1056"], [549, "id1058"], [549, "id1060"], [549, "id1062"], [549, "id1064"], [549, "id1066"]], "M": [[550, "m"]], "M0": [[440, "m0"]], "MACH-O ONLY OPTIONS AND COMMANDS": [[488, "mach-o-only-options-and-commands"]], "MACH-O SPECIFIC OPTIONS": [[486, "mach-o-specific-options"], [493, "mach-o-specific-options"], [498, "mach-o-specific-options"]], "MCJIT Design and Implementation": [[554, null]], "MCSymbol Operands": [[555, "mcsymbol-operands"]], "MERGE": [[490, "merge"]], "METADATA_ATTACHMENT Contents": [[447, "metadata-attachment-contents"]], "METADATA_BLOCK Contents": [[447, "metadata-block-contents"]], "META_BLOCK": [[589, "meta-block"]], "MIMG": [[0, "mimg"], [1, "mimg"], [2, "mimg"], [3, "mimg"]], "MIMG Modifiers": [[438, "mimg-modifiers"]], "MIPS": [[503, "mips"]], "MIR Testing Guide": [[555, "mir-testing-guide"]], "MODULE_BLOCK Contents": [[447, "module-block-contents"]], "MODULE_CODE_ALIAS Record": [[447, "module-code-alias-record"]], "MODULE_CODE_ASM Record": [[447, "module-code-asm-record"]], "MODULE_CODE_DATALAYOUT Record": [[447, "module-code-datalayout-record"]], "MODULE_CODE_DEPLIB Record": [[447, "module-code-deplib-record"]], "MODULE_CODE_FUNCTION Record": [[447, "module-code-function-record"]], "MODULE_CODE_GCNAME Record": [[447, "module-code-gcname-record"]], "MODULE_CODE_GLOBALVAR Record": [[447, "module-code-globalvar-record"]], "MODULE_CODE_SECTIONNAME Record": [[447, "module-code-sectionname-record"]], "MODULE_CODE_TRIPLE Record": [[447, "module-code-triple-record"]], "MODULE_CODE_VERSION Record": [[447, "module-code-version-record"]], "MRI SCRIPTS": [[468, "mri-scripts"]], "MRI Script Commands": [[468, "mri-script-commands"]], "MSF Container Options": [[489, "msf-container-options"]], "MSF File Options": [[489, "msf-file-options"]], "MUBUF": [[0, "mubuf"], [1, "mubuf"], [2, "mubuf"], [3, "mubuf"], [7, "mubuf"], [440, "mubuf"]], "MUBUF/MTBUF Modifiers": [[438, "mubuf-mtbuf-modifiers"]], "Mach-O Changes": [[593, "mach-o-changes"]], "MachSuite": [[583, "machsuite"]], "Machine Basic Blocks": [[555, "machine-basic-blocks"]], "Machine Code Emitter": [[614, "machine-code-emitter"]], "Machine Functions": [[555, "machine-functions"]], "Machine IR (MIR) Format Reference Manual": [[555, null]], "Machine Instructions": [[555, "machine-instructions"]], "Machine Instructions Format Reference": [[555, "machine-instructions-format-reference"]], "Machine Operands": [[555, "machine-operands"]], "Machine code description classes": [[457, "machine-code-description-classes"]], "Machine code in SSA form": [[457, "machine-code-in-ssa-form"]], "Machine-specific Assembly Syntax": [[513, "machine-specific-assembly-syntax"]], "MachineInstr Bundles": [[457, "machineinstr-bundles"]], "MachineVerifier": [[530, "machineverifier"]], "Magic Numbers": [[447, "magic-numbers"]], "Mailing Lists": [[520, "mailing-lists"]], "Maintenance of cc-by-default settings": [[450, "maintenance-of-cc-by-default-settings"]], "Maintenance of products/components metadata": [[450, "maintenance-of-products-components-metadata"]], "Making a Major Change": [[509, "making-a-major-change"]], "Making and Submitting a Patch": [[509, "making-and-submitting-a-patch"]], "Making simple changes": [[579, "making-simple-changes"]], "Map-Like Containers (std::map, DenseMap, etc)": [[579, "map-like-containers-std-map-densemap-etc"]], "Mapping Region": [[506, "mapping-region"], [506, "id6"]], "Mapping Regions": [[506, "mapping-regions"]], "Mapping from instructions to functional units": [[457, "mapping-from-instructions-to-functional-units"]], "Mapping virtual registers to physical registers": [[457, "mapping-virtual-registers-to-physical-registers"]], "Mappings": [[619, "mappings"]], "Marking Functions as Kernels": [[562, "marking-functions-as-kernels"]], "Masked Vector Expanding Load and Compressing Store Intrinsics": [[549, "masked-vector-expanding-load-and-compressing-store-intrinsics"]], "Masked Vector Gather and Scatter Intrinsics": [[549, "masked-vector-gather-and-scatter-intrinsics"]], "Masked Vector Load and Store Intrinsics": [[549, "masked-vector-load-and-store-intrinsics"]], "Matching Newline Characters": [[460, "matching-newline-characters"]], "Matching a PDB to its executable": [[572, "matching-a-pdb-to-its-executable"]], "Matrix Intrinsics": [[549, "matrix-intrinsics"]], "Mechanical Source Issues": [[459, "mechanical-source-issues"]], "Meetups and social events": [[520, "meetups-and-social-events"]], "MemTagSanitizer": [[559, null]], "Member Records": [[566, "member-records"]], "Members of the Code of Conduct Advisory Committee": [[590, "members-of-the-code-of-conduct-advisory-committee"]], "Memory Access and Addressing Operations": [[549, "memory-access-and-addressing-operations"]], "Memory Dependence Analysis": [[443, "memory-dependence-analysis"]], "Memory Model": [[440, "memory-model"]], "Memory Model for Concurrent Operations": [[549, "memory-model-for-concurrent-operations"]], "Memory Operations": [[525, "memory-operations"]], "Memory Scopes": [[440, "memory-scopes"]], "Memory Use Markers": [[549, "memory-use-markers"]], "Memory in LLVM": [[642, "memory-in-llvm"], [653, "memory-in-llvm"]], "MemorySSA": [[560, null]], "MemorySSA Structure": [[560, "memoryssa-structure"]], "Merge Requests": [[542, "merge-requests"]], "MergeFunctions pass, how it works": [[561, null]], "MergeFunctions, main fields and runOnModule": [[561, "mergefunctions-main-fields-and-runonmodule"]], "Merging Patches": [[542, "merging-patches"]], "Merging process, mergeTwoFunctions": [[561, "merging-process-mergetwofunctions"]], "Metadata": [[549, "metadata"]], "Metadata Nodes and Metadata Strings": [[549, "metadata-nodes-and-metadata-strings"]], "Metadata Records": [[618, "metadata-records"]], "Metadata Type": [[549, "metadata-type"]], "Metadata on Loops": [[610, "metadata-on-loops"]], "Method information": [[459, "method-information"]], "Microscopic Details": [[459, "microscopic-details"]], "Microsoft Visual C++": [[455, "microsoft-visual-c"]], "Minimising cost of downstream merges": [[584, "minimising-cost-of-downstream-merges"]], "Minimize Soft Errors": [[599, "minimize-soft-errors"]], "Minimizing docker image size": [[510, "minimizing-docker-image-size"]], "Minimum Legality For Operations": [[529, "minimum-legality-for-operations"]], "Minimum Legality For Vectors": [[529, "minimum-legality-for-vectors"]], "Minimum Legality for Pointers": [[529, "minimum-legality-for-pointers"]], "Minimum Rule Set": [[529, "minimum-rule-set"]], "Minimum Rules For Scalars": [[529, "minimum-rules-for-scalars"]], "Miscellaneous Attributes": [[555, "miscellaneous-attributes"]], "Miscellaneous Modifiers": [[438, "miscellaneous-modifiers"]], "Miscellaneous Options": [[489, "miscellaneous-options"]], "Miscellaneous Problems": [[615, "miscellaneous-problems"]], "Miscellaneous Resources": [[503, "miscellaneous-resources"]], "Miscellaneous Variables": [[580, "miscellaneous-variables"]], "Miscellaneous option modifiers": [[501, "miscellaneous-option-modifiers"]], "Miscompilation debugger": [[451, "miscompilation-debugger"]], "Miscompilations": [[544, "miscompilations"]], "Mixing References and Raw Pointers": [[598, "mixing-references-and-raw-pointers"]], "Mnemonic Aliases": [[457, "mnemonic-aliases"]], "Modeling Memory Effects": [[516, "modeling-memory-effects"]], "Modifications for other Targets": [[540, "modifications-for-other-targets"]], "Modifiers": [[436, "modifiers"], [437, "modifiers"], [438, "modifiers"], [440, "modifiers"]], "Modifiers (generic)": [[468, "modifiers-generic"]], "Modifiers (operation specific)": [[468, "modifiers-operation-specific"]], "Module & File Options": [[489, "module-file-options"]], "Module Flags Metadata": [[549, "module-flags-metadata"]], "Module Info Substream": [[567, "module-info-substream"]], "Module Options": [[489, "module-options"]], "Module Path Summary Entry": [[549, "module-path-summary-entry"]], "Module Structure": [[549, "module-structure"]], "Module Symbols": [[565, "module-symbols"]], "Module-Level Inline Assembly": [[549, "module-level-inline-assembly"]], "Modules": [[456, "modules"]], "Modules, Functions and Macros": [[456, "modules-functions-and-macros"]], "Monorepo": [[581, "monorepo"]], "Monorepo Drawbacks": [[581, "monorepo-drawbacks"]], "Monorepo Variant": [[581, "monorepo-variant"], [581, "workflow-monocheckout-multicommit"], [581, "workflow-mono-branching"], [581, "workflow-mono-bisecting"]], "Monotonic": [[444, "monotonic"]], "More Platforms": [[616, "more-platforms"]], "More examples": [[551, "more-examples"]], "More information": [[559, "more-information"]], "Motivation": [[515, "motivation"], [596, "motivation"]], "Moved": [[600, "moved"], [606, "moved"]], "Moving LLVM Projects to GitHub": [[581, null]], "Moving Local Branches to the Monorepo": [[581, "moving-local-branches-to-the-monorepo"]], "Multi-phase communication between libLTO and linker": [[552, "multi-phase-communication-between-liblto-and-linker"]], "Multi-stage PGO": [[442, "multi-stage-pgo"]], "Multiclass definitions and instances": [[603, "multiclass-definitions-and-instances"]], "Multiple Suspend Points": [[505, "multiple-suspend-points"]], "Multithreaded LLVM": [[615, "multithreaded-llvm"]], "Must, May, and No Alias Responses": [[443, "must-may-and-no-alias-responses"]], "Mutable Variables in Kaleidoscope": [[642, "mutable-variables-in-kaleidoscope"], [653, "mutable-variables-in-kaleidoscope"]], "Mutators and Input Generators": [[517, "mutators-and-input-generators"]], "My First Language Frontend with LLVM Tutorial": [[646, null]], "N": [[550, "n"]], "NAS Parallel Benchmarks": [[583, "nas-parallel-benchmarks"]], "NVPTX": [[503, "nvptx"]], "NVPTX Intrinsics": [[562, "nvptx-intrinsics"]], "NWChem": [[583, "nwchem"]], "Name Accelerator Tables": [[593, "name-accelerator-tables"]], "Name Hash Tables": [[593, "name-hash-tables"]], "Name Types, Functions, Variables, and Enumerators Properly": [[459, "name-types-functions-variables-and-enumerators-properly"]], "Named Alternatives": [[501, "named-alternatives"]], "Named Metadata": [[549, "named-metadata"]], "Named Stream Map": [[572, "named-stream-map"]], "Namespace Indentation": [[459, "namespace-indentation"]], "Narrative structure": [[561, "narrative-structure"]], "Native Object File Wrapper Format": [[447, "native-object-file-wrapper-format"]], "Nested Calls and Copy Elision": [[547, "nested-calls-and-copy-elision"]], "New Assignment Operator": [[642, "new-assignment-operator"], [653, "new-assignment-operator"]], "New Contributors": [[509, "new-contributors"]], "New DWARF Attributes": [[593, "new-dwarf-attributes"]], "New DWARF Constants": [[593, "new-dwarf-constants"]], "New DWARF Tags": [[593, "new-dwarf-tags"]], "New LLVM Project License Framework": [[509, "new-llvm-project-license-framework"]], "New Targets": [[509, "new-targets"]], "New exception handling instructions": [[511, "new-exception-handling-instructions"]], "NewBuffer Records": [[618, "newbuffer-records"]], "NewCpuId Records": [[618, "newcpuid-records"]], "Next Steps": [[617, "next-steps"]], "No Duplicate Implementations": [[599, "no-duplicate-implementations"]], "No Exposed Data": [[599, "no-exposed-data"]], "No Exposed Functions": [[599, "no-exposed-functions"]], "No Normalization": [[619, "no-normalization"]], "No Unused Functionality": [[599, "no-unused-functionality"]], "No Virtual Methods": [[599, "no-virtual-methods"]], "No global aliases, replaceDirectCallers": [[561, "no-global-aliases-replacedirectcallers"]], "No target passed to clang": [[540, "no-target-passed-to-clang"]], "No throw Specifications": [[599, "no-throw-specifications"]], "Non-Goals": [[560, "non-goals"]], "Non-Integral Pointer Type": [[549, "non-integral-pointer-type"]], "Non-comprehensive list of changes in this release": [[587, "non-comprehensive-list-of-changes-in-this-release"]], "Normalization": [[619, "normalization"]], "NotAtomic": [[444, "notatomic"]], "Notation": [[0, "notation"], [1, "notation"], [2, "notation"], [3, "notation"], [4, "notation"], [5, "notation"], [6, "notation"], [7, "notation"], [436, "notation"], [436, "id1"], [436, "amdgpu-syn-instruction-operand-notation"], [436, "amdgpu-syn-instruction-modifier-notation"], [604, "notation"]], "Note Records": [[440, "note-records"]], "Notes On Building LLVM/Clang on ARM": [[538, "notes-on-building-llvm-clang-on-arm"]], "Numbers": [[439, "numbers"]], "O": [[550, "o"]], "O(log(N))": [[561, "o-log-n"]], "OPTIONS": [[460, "options"], [461, "options"], [462, "options"], [465, "options"], [468, "options"], [469, "options"], [470, "options"], [471, "options"], [472, "options"], [473, "options"], [473, "id5"], [473, "id8"], [473, "id11"], [474, "options"], [475, "options"], [477, "options"], [478, "options"], [479, "options"], [480, "options"], [482, "options"], [484, "options"], [485, "options"], [486, "options"], [488, "options"], [490, "options"], [490, "id5"], [490, "id8"], [492, "options"], [494, "options"], [495, "options"], [496, "options"], [498, "options"], [499, "options"], [500, "options"]], "ORC Design and Implementation": [[563, null]], "OUTPUT OPTIONS": [[464, "output-options"]], "OVERLAP": [[490, "overlap"]], "Object Loading": [[554, "object-loading"]], "Object lifetime in optimized code": [[593, "object-lifetime-in-optimized-code"]], "Object lifetimes and scoping": [[593, "object-lifetimes-and-scoping"]], "Objective": [[454, "objective"]], "Objective-C ARC Runtime Intrinsics": [[549, "objective-c-arc-runtime-intrinsics"]], "Objective-C Extensions": [[593, "objective-c-extensions"]], "Objective-C Garbage Collection Module Flags Metadata": [[549, "objective-c-garbage-collection-module-flags-metadata"]], "Objects on the Stack": [[598, "objects-on-the-stack"]], "Obtaining Commit Access": [[509, "obtaining-commit-access"]], "Obtaining Help": [[502, "obtaining-help"]], "Official Testing": [[542, "official-testing"]], "On Managing Revision Numbers with Git": [[581, "on-managing-revision-numbers-with-git"]], "On-Disk Format": [[569, "on-disk-format"]], "Ongoing Development Directions": [[613, "ongoing-development-directions"]], "Opaque Structure Types": [[549, "opaque-structure-types"]], "Opcode": [[436, "opcode"]], "Opcode Mnemonic": [[437, "opcode-mnemonic"]], "OpenBenchmarking.org CPU / Processor Suite": [[583, "openbenchmarking-org-cpu-processor-suite"]], "OpenCL": [[440, "opencl"]], "OpenCL kernel implicit arguments appended for AMDHSA OS": [[440, "opencl-kernel-implicit-arguments-appended-for-amdhsa-os-table"]], "OpenCV": [[583, "opencv"]], "OpenMP 4.x SIMD Benchmarks": [[583, "openmp-4-x-simd-benchmarks"]], "Operand Bundles": [[549, "operand-bundles"]], "Operands": [[436, "operands"], [437, "operands"], [439, "operands"], [440, "operands"]], "Operands and Operations": [[439, "operands-and-operations"]], "Operands:": [[596, "operands"], [596, "id3"], [598, "operands"], [598, "id3"], [598, "id7"]], "Operations": [[468, "operations"]], "OptParserDefs": [[601, "optparserdefs"]], "Optimization outside atomic": [[444, "optimization-outside-atomic"]], "Optimizations": [[502, "optimizations"], [612, "optimizations"]], "Optimizing Modules using the IRTransformLayer": [[622, "optimizing-modules-using-the-irtransformlayer"]], "Option Attributes": [[501, "option-attributes"]], "Option Modifiers": [[501, "option-modifiers"]], "Optional Configuration Items": [[521, "optional-configuration-items"]], "Optional Debug Header Stream": [[567, "optional-debug-header-stream"]], "Options": [[489, "options"], [489, "id2"], [489, "id4"], [489, "id7"], [489, "id9"], [489, "id11"], [536, "options"], [551, "options"], [591, "options"], [609, "options"]], "Options and variables": [[455, "options-and-variables"]], "Options for Optimizing LLVM": [[453, "options-for-optimizing-llvm"]], "Options for Reducing Size": [[453, "options-for-reducing-size"]], "Order of Keys": [[619, "order-of-keys"]], "Other": [[449, "other"], [468, "other"]], "Other Design Notes": [[454, "other-design-notes"]], "Other Features": [[609, "other-features"]], "Other Intrinsics": [[562, "other-intrinsics"]], "Other Map-Like Container Options": [[579, "other-map-like-container-options"]], "Other Operations": [[525, "other-operations"], [549, "other-operations"]], "Other Options": [[489, "other-options"]], "Other Sequential Container options": [[579, "other-sequential-container-options"]], "Other Set-Like Container Options": [[579, "other-set-like-container-options"]], "Other Things to Consider": [[516, "other-things-to-consider"]], "Other Types": [[456, "other-types"]], "Other Values": [[549, "other-values"]], "Other documents, collections, notes": [[503, "other-documents-collections-notes"]], "Other relevant lists": [[503, "other-relevant-lists"]], "Other useful AliasAnalysis methods": [[443, "other-useful-aliasanalysis-methods"]], "Other useful references": [[579, "other-useful-references"]], "Output": [[551, "output"], [619, "output"]], "Output constraints": [[549, "output-constraints"]], "Outstanding Questions": [[581, "outstanding-questions"]], "Overloading Based on __host__ and __device__ Attributes": [[502, "overloading-based-on-host-and-device-attributes"]], "Overvew": [[0, "overvew"], [1, "overvew"], [2, "overvew"], [3, "overvew"], [4, "overvew"], [5, "overvew"], [6, "overvew"], [7, "overvew"]], "Overview": [[447, "overview"], [510, "overview"], [511, "overview"], [521, "overview"], [523, "overview"], [549, "id614"], [549, "id619"], [549, "id624"], [549, "id629"], [549, "id634"], [549, "id639"], [549, "id644"], [549, "id649"], [549, "id654"], [549, "id659"], [555, "overview"], [580, "overview"], [595, "overview"], [608, "overview"], [609, "overview"], [610, "overview"]], "Overview & Core Concepts": [[598, "overview-core-concepts"]], "Overview of available features": [[518, "overview-of-available-features"]], "Overview of the Release Process": [[588, "overview-of-the-release-process"]], "Overview:": [[505, "overview"], [505, "id3"], [505, "id6"], [505, "id9"], [505, "id12"], [505, "id15"], [505, "id18"], [505, "id20"], [505, "id24"], [505, "id27"], [505, "id30"], [505, "id33"], [505, "id35"], [505, "id37"], [505, "id40"], [505, "id43"], [505, "id47"], [505, "id50"], [549, "overview"], [549, "id28"], [549, "id33"], [549, "id38"], [549, "id44"], [549, "id49"], [549, "id54"], [549, "id59"], [549, "id64"], [549, "id69"], [549, "id76"], [549, "id79"], [549, "id84"], [549, "id89"], [549, "id94"], [549, "id99"], [549, "id104"], [549, "id109"], [549, "id114"], [549, "id119"], [549, "id124"], [549, "id129"], [549, "id134"], [549, "id139"], [549, "id144"], [549, "id149"], [549, "id154"], [549, "id159"], [549, "id164"], [549, "id169"], [549, "id174"], [549, "id179"], [549, "id184"], [549, "id189"], [549, "id194"], [549, "id199"], [549, "id204"], [549, "id209"], [549, "id214"], [549, "id219"], [549, "id224"], [549, "id229"], [549, "id234"], [549, "id239"], [549, "id244"], [549, "id249"], [549, "id254"], [549, "id259"], [549, "id264"], [549, "id269"], [549, "id274"], [549, "id279"], [549, "id284"], [549, "id289"], [549, "id294"], [549, "id299"], [549, "id304"], [549, "id309"], [549, "id314"], [549, "id319"], [549, "id324"], [549, "id329"], [549, "id334"], [549, "id340"], [549, "id347"], [549, "id354"], [549, "id358"], [549, "id362"], [549, "id367"], [549, "id371"], [549, "id375"], [549, "id379"], [549, "id383"], [549, "id386"], [549, "id389"], [549, "id393"], [549, "id397"], [549, "id400"], [549, "id403"], [549, "id406"], [549, "id409"], [549, "id413"], [549, "id417"], [549, "id420"], [549, "id423"], [549, "id427"], [549, "id431"], [549, "id435"], [549, "id438"], [549, "id442"], [549, "id446"], [549, "id450"], [549, "id454"], [549, "id458"], [549, "id462"], [549, "id466"], [549, "id470"], [549, "id474"], [549, "id478"], [549, "id482"], [549, "id486"], [549, "id490"], [549, "id494"], [549, "id498"], [549, "id502"], [549, "id506"], [549, "id510"], [549, "id514"], [549, "id518"], [549, "id522"], [549, "id526"], [549, "id530"], [549, "id534"], [549, "id538"], [549, "id542"], [549, "id546"], [549, "id550"], [549, "id554"], [549, "id558"], [549, "id561"], [549, "id564"], [549, "id568"], [549, "id572"], [549, "id576"], [549, "id580"], [549, "id584"], [549, "id589"], [549, "id594"], [549, "id599"], [549, "id604"], [549, "id609"], [549, "id664"], [549, "id666"], [549, "id671"], [549, "id674"], [549, "id678"], [549, "id681"], [549, "id685"], [549, "id688"], [549, "id691"], [549, "id694"], [549, "id697"], [549, "id700"], [549, "id703"], [549, "id706"], [549, "id709"], [549, "id712"], [549, "id715"], [549, "id718"], [549, "id721"], [549, "id724"], [549, "id729"], [549, "id734"], [549, "id738"], [549, "id742"], [549, "id746"], [549, "id750"], [549, "id754"], [549, "id758"], [549, "id762"], [549, "id766"], [549, "id770"], [549, "id774"], [549, "id778"], [549, "id782"], [549, "id786"], [549, "id790"], [549, "id794"], [549, "id798"], [549, "id802"], [549, "id806"], [549, "id810"], [549, "id814"], [549, "id818"], [549, "id822"], [549, "id826"], [549, "id830"], [549, "id834"], [549, "id838"], [549, "id842"], [549, "id846"], [549, "id850"], [549, "id854"], [549, "id858"], [549, "id862"], [549, "id866"], [549, "id870"], [549, "id874"], [549, "id878"], [549, "id882"], [549, "id886"], [549, "id890"], [549, "id894"], [549, "id898"], [549, "id902"], [549, "id906"], [549, "id910"], [549, "id914"], [549, "id918"], [549, "id922"], [549, "id926"], [549, "id930"], [549, "id934"], [549, "id938"], [549, "id942"], [549, "id946"], [549, "id952"], [549, "id956"], [549, "id960"], [549, "id964"], [549, "id968"], [549, "id972"], [549, "id976"], [549, "id981"], [549, "id984"], [549, "id987"], [549, "id989"], [549, "id993"], [549, "id997"], [549, "id999"], [549, "id1004"], [549, "id1006"], [549, "id1010"], [549, "id1014"], [549, "id1017"], [549, "id1022"], [549, "id1027"], [549, "id1068"], [549, "id1072"], [549, "id1076"], [562, "overview"], [562, "id4"], [562, "id7"], [562, "id9"], [596, "overview"], [596, "id2"], [598, "overview"], [598, "id2"], [598, "id6"]], "P": [[550, "p"]], "PAL Compute Shader User Data Registers": [[440, "pal-compute-user-data-registers"]], "PAL Global Internal Table": [[440, "pal-git-table"]], "PAL Graphics Shader User Data Registers": [[440, "pal-graphics-user-data-registers"]], "PARAMATTR_BLOCK Contents": [[447, "paramattr-block-contents"]], "PARAMATTR_CODE_ENTRY Record": [[447, "paramattr-code-entry-record"]], "PARAMATTR_CODE_ENTRY_OLD Record": [[447, "paramattr-code-entry-old-record"]], "PARAMATTR_GROUP_BLOCK Contents": [[447, "paramattr-group-block-contents"]], "PARAMATTR_GRP_CODE_ENTRY Record": [[447, "paramattr-grp-code-entry-record"]], "PARSEC": [[583, "parsec"]], "PDB Feature Codes": [[572, "pdb-feature-codes"]], "PDB Stream Options": [[489, "pdb-stream-options"]], "PE/COFF SPECIFIC OPTIONS": [[493, "pe-coff-specific-options"]], "PRE-DEFINED SUBSTITUTIONS": [[464, "pre-defined-substitutions"]], "PWM-benchmarking": [[583, "pwm-benchmarking"]], "Packet data access (BPF_ABS, BPF_IND)": [[457, "packet-data-access-bpf-abs-bpf-ind"]], "Padding Records": [[566, "padding-records"]], "ParRes": [[583, "parres"]], "Parallel Fuzzing": [[551, "parallel-fuzzing"]], "Parameter Attributes": [[549, "parameter-attributes"]], "Parboil Benchmarks": [[583, "parboil-benchmarks"]], "Parser Basics": [[637, "parser-basics"], [648, "parser-basics"]], "Parser Extensions for If/Then/Else": [[640, "parser-extensions-for-if-then-else"], [651, "parser-extensions-for-if-then-else"]], "Parser Extensions for the \u201cfor\u201d Loop": [[640, "parser-extensions-for-the-for-loop"], [651, "parser-extensions-for-the-for-loop"]], "Parsing a list of options": [[501, "parsing-a-list-of-options"]], "Parsing the Rest": [[637, "parsing-the-rest"], [648, "parsing-the-rest"]], "Partial unrolling during vectorization": [[613, "partial-unrolling-during-vectorization"]], "Pass Ordering": [[516, "pass-ordering"]], "Pass Skipping Implementation": [[564, "pass-skipping-implementation"]], "Pass Statistics": [[615, "pass-statistics"]], "Pass classes and requirements": [[615, "pass-classes-and-requirements"]], "Pass registration": [[615, "pass-registration"]], "Pass-Specific Transformation Metadata": [[610, "pass-specific-transformation-metadata"]], "Passing functions and other callable objects": [[579, "passing-functions-and-other-callable-objects"]], "Passing strings (the StringRef and Twine classes)": [[579, "passing-strings-the-stringref-and-twine-classes"]], "PatLeaf Predicates": [[527, "patleaf-predicates"]], "Patents": [[509, "patents"]], "Performance": [[613, "performance"]], "Performance Tips for Frontend Authors": [[516, null]], "Personality Function": [[549, "personality-function"]], "Phase 1 : Read LLVM Bitcode Files": [[552, "phase-1-read-llvm-bitcode-files"]], "Phase 2 : Symbol Resolution": [[552, "phase-2-symbol-resolution"]], "Phase 3 : Optimize Bitcode Files": [[552, "phase-3-optimize-bitcode-files"]], "Phase 4 : Symbol Resolution after optimization": [[552, "phase-4-symbol-resolution-after-optimization"]], "Phi placement": [[560, "phi-placement"]], "Philosophy behind LLVM debugging information": [[593, "philosophy-behind-llvm-debugging-information"]], "Picking the Right Data Structure for a Task": [[579, "picking-the-right-data-structure-for-a-task"]], "PlaceSafepoints": [[598, "placesafepoints"]], "Placement of Object Code": [[580, "placement-of-object-code"]], "Platform Support": [[582, "platform-support"]], "Platform-Specific Tests": [[609, "platform-specific-tests"]], "Pointer Aliasing Rules": [[549, "pointer-aliasing-rules"]], "Pointer Induction Variables": [[613, "pointer-induction-variables"]], "Pointer Type": [[549, "pointer-type"]], "Poison Values": [[549, "poison-values"]], "PolyBench": [[583, "polybench"]], "PolyMage": [[583, "polymage"]], "Porting GlobalISel to A New Target": [[531, null]], "Positional Arguments": [[501, "positional-options"]], "Possible solutions": [[561, "possible-solutions"]], "PowerPC": [[503, "powerpc"]], "Pragma loop hint directives": [[613, "pragma-loop-hint-directives"]], "Pre-Release Process": [[588, "pre-release-process"]], "Precision": [[560, "precision"]], "Predicate Operands": [[555, "predicate-operands"]], "Prefer Preincrement": [[459, "prefer-preincrement"]], "Prefer zext over sext when legal": [[516, "prefer-zext-over-sext-when-legal"]], "Prefix Data": [[549, "prefix-data"]], "Preliminaries": [[614, "preliminaries"]], "Preprocessing Support": [[604, "preprocessing-support"]], "Prerequisite Reading": [[614, "prerequisite-reading"]], "Prerequisites": [[502, "prerequisites"], [540, "prerequisites"]], "Present and Deleted Bit Vectors": [[569, "present-and-deleted-bit-vectors"]], "Present state": [[561, "present-state"]], "Preserving Debug Information Intrinsics": [[549, "preserving-debug-information-intrinsics"]], "Primitives": [[447, "primitives"]], "Problem": [[446, "problem"]], "Processors": [[440, "processors"]], "Profile Guided Optimization": [[607, "profile-guided-optimization"]], "Program Dependence Graph": [[508, "program-dependence-graph"]], "Program start": [[457, "program-start"]], "Programmatic Errors": [[579, "programmatic-errors"]], "Progress and Future Work": [[534, "progress-and-future-work"]], "Project Organization": [[548, "project-organization"]], "Prolog/Epilog": [[457, "prolog-epilog"]], "Prolog/Epilog Code Insertion": [[457, "prolog-epilog-code-insertion"]], "Prologue Data": [[549, "prologue-data"]], "Promote": [[614, "promote"]], "Propagating and consuming errors based on types": [[579, "propagating-and-consuming-errors-based-on-types"]], "Properties of the LLVM IR": [[645, "properties-of-the-llvm-ir"], [654, "properties-of-the-llvm-ir"]], "Proposal": [[593, "proposal"]], "Provide a Virtual Method Anchor for Classes in Headers": [[459, "provide-a-virtual-method-anchor-for-classes-in-headers"]], "Provisional Plan": [[584, "provisional-plan"]], "Pseudo-Counter:": [[506, "pseudo-counter"]], "PseudoLowering": [[601, "pseudolowering"]], "Public Symbols": [[565, "public-symbols"]], "Publication": [[502, "publication"]], "Putting It All Together": [[643, "putting-it-all-together"]], "Q. Does libFuzzer Support Windows?": [[551, "q-does-libfuzzer-support-windows"]], "Q. LibFuzzer crashes on my complicated fuzz target (but works fine for me on smaller targets).": [[551, "q-libfuzzer-crashes-on-my-complicated-fuzz-target-but-works-fine-for-me-on-smaller-targets"]], "Q. So, what exactly this Fuzzer is good for?": [[551, "q-so-what-exactly-this-fuzzer-is-good-for"]], "Q. When libFuzzer is not a good solution for a problem?": [[551, "q-when-libfuzzer-is-not-a-good-solution-for-a-problem"]], "Q. Why doesn\u2019t libFuzzer use any of the LLVM support?": [[551, "q-why-doesn-t-libfuzzer-use-any-of-the-llvm-support"]], "Quality": [[509, "quality"]], "Questions about code generated by the demo page": [[514, "questions-about-code-generated-by-the-demo-page"]], "Questions?": [[458, "questions"]], "Quick Start": [[506, "quick-start"], [518, "quick-start"]], "Quick Start Guide": [[501, "quick-start-guide"]], "Quick Start \u2014 Writing hello world": [[615, "quick-start-writing-hello-world"]], "Quick start": [[455, "quick-start"], [609, "quick-start"]], "Quickstart": [[607, "quickstart"]], "Quickstart for using LTO with autotooled projects": [[535, "quickstart-for-using-lto-with-autotooled-projects"]], "R": [[550, "r"]], "RAJA Performance Suite": [[583, "raja-performance-suite"]], "REMAPPING FILE": [[475, "remapping-file"]], "REMARK_BLOCK": [[589, "remark-block"]], "REPORT COMMAND": [[473, "report-command"]], "RISC-V": [[503, "risc-v"]], "Random-access": [[561, "random-access"]], "Randomness": [[591, "randomness"]], "Rarely-used CMake variables": [[455, "rarely-used-cmake-variables"]], "Rationale": [[519, "rationale"], [549, null]], "Read barrier: llvm.gcread": [[518, "read-barrier-llvm-gcread"]], "Read-only sub-project mirrors": [[581, "read-only-sub-project-mirrors"]], "Read/write SVN bridge": [[581, "read-write-svn-bridge"]], "Reading PTX Special Registers": [[562, "reading-ptx-special-registers"]], "Reading and writing references in the heap": [[518, "reading-and-writing-references-in-the-heap"]], "Record Categories": [[565, "record-categories"], [566, "record-categories"]], "Recording On Stack Regions": [[598, "recording-on-stack-regions"]], "Recoverable Errors": [[579, "recoverable-errors"]], "Reducing the number of acronyms": [[584, "reducing-the-number-of-acronyms"]], "Reductions": [[613, "reductions"]], "Reference": [[586, null]], "Reference Guide": [[501, "reference-guide"]], "Reference implementation": [[579, "reference-implementation"]], "References": [[508, "references"], [518, "references"], [581, "references"], [584, "references"], [585, "references"]], "Reflection Parameters": [[562, "reflection-parameters"]], "Refs": [[549, "refs"]], "RegBankSelect": [[532, null]], "RegBankSelect Modes": [[532, "regbankselect-modes"]], "Register Allocation": [[457, "register-allocator"]], "Register Bank": [[524, "register-bank"]], "Register Flags": [[555, "register-flags"]], "Register Mapping": [[440, "register-mapping"]], "Register Operands": [[555, "register-operands"]], "Register Set and Register Classes": [[614, "register-set-and-register-classes"]], "RegisterInfo": [[601, "registerinfo"]], "Registering dynamically loaded passes": [[615, "registering-dynamically-loaded-passes"]], "Registers": [[555, "mir-registers"]], "Regression test structure": [[609, "regression-test-structure"]], "Regression tests": [[609, "regression-tests"]], "Related LLVM components": [[585, "related-llvm-components"]], "Release": [[444, "release"]], "Release Administrative Tasks": [[542, "release-administrative-tasks"]], "Release Final Tasks": [[542, "release-final-tasks"]], "Release Patch Rules": [[542, "release-patch-rules"]], "Release Process": [[542, "release-process"], [588, "release-process"]], "Release Qualification Criteria": [[542, "release-qualification-criteria"]], "Release Timeline": [[542, "release-timeline"]], "Relevant CMake Options": [[453, "relevant-cmake-options"]], "Relicensing": [[509, "relicensing"]], "Relocatable Expressions": [[439, "relocatable-expressions"]], "Relocation Records": [[440, "relocation-records"]], "Relocations": [[513, "relocations"], [513, "id1"], [513, "id3"]], "Relocations Along Exceptional Edges": [[598, "relocations-along-exceptional-edges"]], "Remark diagnostics": [[589, "remark-diagnostics"]], "Remarks": [[589, null]], "Replacing an Instruction with another Value": [[579, "replacing-an-instruction-with-another-value"]], "Replacing individual instructions": [[579, "replacing-individual-instructions"]], "Replacing multiple uses of Users and Values": [[579, "replacing-multiple-uses-of-users-and-values"]], "Reporting Guide": [[590, null]], "Reporting Regressions": [[542, "reporting-regressions"]], "Reporting bugs": [[450, "reporting-bugs"]], "Representation": [[549, "representation"]], "Representation of Pointers": [[443, "representation-of-pointers"]], "Representing Type Information using Type Metadata": [[611, "representing-type-information-using-type-metadata"]], "Representing X86 addressing modes in MachineInstrs": [[457, "representing-x86-addressing-modes-in-machineinstrs"]], "Requesting a review via the command line": [[578, "requesting-a-review-via-the-command-line"]], "Requesting a review via the web interface": [[578, "requesting-a-review-via-the-web-interface"]], "Required Variables": [[580, "required-variables"]], "Required components in the code generator": [[457, "required-components-in-the-code-generator"]], "Required initialization calls": [[443, "required-initialization-calls"]], "Required methods to override": [[443, "required-methods-to-override"]], "Requirements": [[521, "requirements"], [523, "requirements"], [609, "requirements"]], "Resampling": [[583, "resampling"]], "Resolving/Closing bugs": [[450, "resolving-closing-bugs"]], "Resources": [[533, null]], "Response files": [[501, "response-files"]], "Restricted Operation Semantics": [[516, "restricted-operation-semantics"]], "Restrictions": [[511, "restrictions"]], "Resuming merge": [[551, "resuming-merge"]], "Returned-Continuation Lowering": [[505, "returned-continuation-lowering"]], "Returning Errors from error handlers": [[579, "returning-errors-from-error-handlers"]], "Reverse Iterators": [[613, "reverse-iterators"]], "Reverting a change": [[521, "reverting-a-change"]], "Reviewing code with Phabricator": [[578, "reviewing-code-with-phabricator"]], "RewriteStatepointsForGC": [[598, "rewritestatepointsforgc"]], "Rodinia": [[583, "rodinia"]], "Rule Actions": [[529, "rule-actions"]], "Rule Predicates": [[529, "rule-predicates"]], "Rule Processing and Declaring Rules": [[529, "rule-processing-and-declaring-rules"]], "Rules": [[519, "rules"]], "Rules of Thumb": [[543, "rules-of-thumb"]], "Running": [[551, "running"]], "Running CMake and Building": [[541, "running-cmake-and-building"]], "Running Different Tests": [[608, "running-different-tests"]], "Running TableGen": [[605, "running-tablegen"]], "Running a pass with opt": [[615, "running-a-pass-with-opt"]], "Running the Kernel": [[562, "running-the-kernel"]], "Running the test-suite via LNT": [[607, "running-the-test-suite-via-lnt"]], "Running the test-suite via Makefiles (deprecated)": [[607, "running-the-test-suite-via-makefiles-deprecated"]], "Runtime Checks of Pointers": [[613, "runtime-checks-of-pointers"]], "Runtime Preemption Specifiers": [[549, "runtime-preemption-specifiers"]], "S": [[550, "s"]], "SDWA": [[0, "sdwa"]], "SDWA Modifiers": [[438, "sdwa-modifiers"]], "SDWA Operand Modifiers": [[438, "sdwa-operand-modifiers"]], "SEE ALSO": [[461, "see-also"], [462, "see-also"], [464, "see-also"], [465, "see-also"], [466, "see-also"], [467, "see-also"], [469, "see-also"], [470, "see-also"], [474, "see-also"], [477, "see-also"], [478, "see-also"], [480, "see-also"], [484, "see-also"], [486, "see-also"], [487, "see-also"], [488, "see-also"], [491, "see-also"], [492, "see-also"], [493, "see-also"], [497, "see-also"], [498, "see-also"]], "SEH filter expressions": [[511, "seh-filter-expressions"]], "SELECTION OPTIONS": [[464, "selection-options"]], "SGPR Register Set Up Order": [[440, "amdgpu-amdhsa-sgpr-register-set-up-order-table"]], "SHOW": [[490, "show"]], "SHOW COMMAND": [[473, "show-command"]], "SHT_LLVM_ADDRSIG Section (address-significance table)": [[513, "sht-llvm-addrsig-section-address-significance-table"]], "SHT_LLVM_CALL_GRAPH_PROFILE Section (Call Graph Profile)": [[513, "sht-llvm-call-graph-profile-section-call-graph-profile"]], "SHT_LLVM_DEPENDENT_LIBRARIES Section (Dependent Libraries)": [[513, "sht-llvm-dependent-libraries-section-dependent-libraries"]], "SHT_LLVM_SYMPART Section (symbol partition specification)": [[513, "sht-llvm-sympart-section-symbol-partition-specification"]], "SJLJ Intrinsics": [[511, "sjlj-intrinsics"]], "SLAMBench": [[583, "slambench"]], "SMEM": [[0, "smem"], [2, "smem"], [3, "smem"]], "SMRD": [[1, "smrd"]], "SMRD/SMEM": [[440, "smrd-smem"]], "SMRD/SMEM Modifiers": [[438, "smrd-smem-modifiers"]], "SOP1": [[0, "sop1"], [1, "sop1"], [2, "sop1"], [3, "sop1"], [440, "sop1"]], "SOP2": [[0, "sop2"], [1, "sop2"], [2, "sop2"], [3, "sop2"], [440, "sop2"]], "SOPC": [[0, "sopc"], [1, "sopc"], [2, "sopc"], [3, "sopc"], [440, "sopc"]], "SOPK": [[0, "sopk"], [1, "sopk"], [2, "sopk"], [3, "sopk"]], "SOPP": [[0, "sopp"], [1, "sopp"], [2, "sopp"], [3, "sopp"], [440, "sopp"]], "SPARC": [[503, "sparc"]], "SPEC CPU 2017": [[583, "spec-cpu-2017"]], "SPEC OMP2012": [[583, "spec-omp2012"]], "SSA-based Machine Code Optimizations": [[457, "ssa-based-machine-code-optimizations"]], "STRTAB_BLOCK Contents": [[447, "strtab-block-contents"]], "SUMMARY OUTPUT DEFINITIONS": [[470, "summary-output-definitions"]], "SUPPORTED FORMATS": [[487, "supported-formats"]], "SYNOPSIS": [[460, "synopsis"], [461, "synopsis"], [462, "synopsis"], [464, "synopsis"], [465, "synopsis"], [466, "synopsis"], [467, "synopsis"], [468, "synopsis"], [469, "synopsis"], [470, "synopsis"], [471, "synopsis"], [472, "synopsis"], [473, "synopsis"], [473, "id1"], [473, "id3"], [473, "id6"], [473, "id9"], [474, "synopsis"], [475, "synopsis"], [476, "synopsis"], [477, "synopsis"], [478, "synopsis"], [479, "synopsis"], [480, "synopsis"], [481, "synopsis"], [482, "synopsis"], [483, "synopsis"], [484, "synopsis"], [485, "synopsis"], [486, "synopsis"], [487, "synopsis"], [488, "synopsis"], [490, "synopsis"], [490, "id1"], [490, "id3"], [490, "id6"], [491, "synopsis"], [492, "synopsis"], [493, "synopsis"], [494, "synopsis"], [495, "synopsis"], [496, "synopsis"], [497, "synopsis"], [498, "synopsis"], [499, "synopsis"], [500, "synopsis"]], "S_BLOCK32 (0x1103)": [[565, "s-block32-0x1103"]], "S_BPREL32 (0x110b)": [[565, "s-bprel32-0x110b"]], "S_BUILDINFO (0x114c)": [[565, "s-buildinfo-0x114c"]], "S_CALLEES (0x115a)": [[565, "s-callees-0x115a"]], "S_CALLERS (0x115b)": [[565, "s-callers-0x115b"]], "S_CALLSITEINFO (0x1139)": [[565, "s-callsiteinfo-0x1139"]], "S_COFFGROUP (0x1137)": [[565, "s-coffgroup-0x1137"]], "S_COMPILE2 (0x1116)": [[565, "s-compile2-0x1116"]], "S_COMPILE3 (0x113c)": [[565, "s-compile3-0x113c"]], "S_CONSTANT (0x1107)": [[565, "s-constant-0x1107"]], "S_DEFRANGE (0x113f)": [[565, "s-defrange-0x113f"]], "S_DEFRANGE_FRAMEPOINTER_REL (0x1142)": [[565, "s-defrange-framepointer-rel-0x1142"]], "S_DEFRANGE_FRAMEPOINTER_REL_FULL_SCOPE (0x1144)": [[565, "s-defrange-framepointer-rel-full-scope-0x1144"]], "S_DEFRANGE_REGISTER (0x1141)": [[565, "s-defrange-register-0x1141"]], "S_DEFRANGE_REGISTER_REL (0x1145)": [[565, "s-defrange-register-rel-0x1145"]], "S_DEFRANGE_SUBFIELD (0x1140)": [[565, "s-defrange-subfield-0x1140"]], "S_DEFRANGE_SUBFIELD_REGISTER (0x1143)": [[565, "s-defrange-subfield-register-0x1143"]], "S_END (0x0006)": [[565, "s-end-0x0006"]], "S_ENVBLOCK (0x113d)": [[565, "s-envblock-0x113d"]], "S_EXPORT (0x1138)": [[565, "s-export-0x1138"]], "S_FASTLINK (0x1167)": [[565, "s-fastlink-0x1167"]], "S_FILESTATIC (0x1153)": [[565, "s-filestatic-0x1153"]], "S_FRAMECOOKIE (0x113a)": [[565, "s-framecookie-0x113a"]], "S_FRAMEPROC (0x1012)": [[565, "s-frameproc-0x1012"]], "S_GDATA32": [[565, "s-gdata32"]], "S_GMANDATA (0x111d)": [[565, "s-gmandata-0x111d"]], "S_GPROC32 (0x1110)": [[565, "s-gproc32-0x1110"]], "S_GPROC32_ID (0x1147)": [[565, "s-gproc32-id-0x1147"]], "S_GTHREAD32 (0x1113)": [[565, "s-gthread32-0x1113"]], "S_HEAPALLOCSITE (0x115e)": [[565, "s-heapallocsite-0x115e"]], "S_INLINEES (0x1168)": [[565, "s-inlinees-0x1168"]], "S_INLINESITE (0x114d)": [[565, "s-inlinesite-0x114d"]], "S_INLINESITE_END (0x114e)": [[565, "s-inlinesite-end-0x114e"]], "S_LABEL32 (0x1105)": [[565, "s-label32-0x1105"]], "S_LDATA32 (0x110c)": [[565, "s-ldata32-0x110c"]], "S_LMANDATA (0x111c)": [[565, "s-lmandata-0x111c"]], "S_LOCAL (0x113e)": [[565, "s-local-0x113e"]], "S_LPROC32 (0x110f)": [[565, "s-lproc32-0x110f"]], "S_LPROC32_DPC (0x1155)": [[565, "s-lproc32-dpc-0x1155"]], "S_LPROC32_DPC_ID (0x1156)": [[565, "s-lproc32-dpc-id-0x1156"]], "S_LPROC32_ID (0x1146)": [[565, "s-lproc32-id-0x1146"]], "S_LPROCREF (0x1127)": [[565, "s-lprocref-0x1127"]], "S_LTHREAD32 (0x1112)": [[565, "s-lthread32-0x1112"]], "S_MANCONSTANT (0x112d)": [[565, "s-manconstant-0x112d"]], "S_OBJNAME (0x1101)": [[565, "s-objname-0x1101"]], "S_PROCREF (0x1125)": [[565, "s-procref-0x1125"]], "S_PROC_ID_END (0x114f)": [[565, "s-proc-id-end-0x114f"]], "S_PUB32 (0x110e)": [[565, "s-pub32-0x110e"]], "S_REGISTER (0x1106)": [[565, "s-register-0x1106"]], "S_REGREL32 (0x1111)": [[565, "s-regrel32-0x1111"]], "S_SECTION (0x1136)": [[565, "s-section-0x1136"]], "S_THUNK32 (0x1102)": [[565, "s-thunk32-0x1102"]], "S_TRAMPOLINE (0x112c)": [[565, "s-trampoline-0x112c"]], "S_UDT (0x1108)": [[565, "s-udt-0x1108"]], "S_UNAMESPACE (0x1124)": [[565, "s-unamespace-0x1124"]], "Safepoint Semantics & Verification": [[598, "safepoint-semantics-verification"]], "Safety Guarantees": [[645, "safety-guarantees"], [654, "safety-guarantees"]], "Sample Example": [[546, "sample-example"]], "Saturation Arithmetic Intrinsics": [[549, "saturation-arithmetic-intrinsics"]], "Scalar Operations": [[525, "scalar-operations"]], "ScalarEnumerationTraits": [[619, "scalarenumerationtraits"]], "Scalars": [[619, "scalars"]], "Scatter / Gather": [[613, "scatter-gather"]], "Scope": [[456, "scope"]], "Scripting Overview": [[456, "scripting-overview"]], "Scripts": [[588, "scripts"]], "Scrubbing the Local Monorepo": [[581, "scrubbing-the-local-monorepo"]], "Scudo Hardened Allocator": [[591, null]], "Search Algorithms": [[583, "search-algorithms"]], "SearchableTables": [[601, "searchabletables"]], "Section Contribution Substream": [[567, "section-contribution-substream"]], "Section Map Substream": [[567, "section-map-substream"]], "Sections": [[440, "sections"]], "See Also": [[459, "see-also"]], "Segmented Stacks": [[457, "segmented-stacks"]], "Segmented Stacks in LLVM": [[592, null]], "Selecting an alternative from a set of possibilities": [[501, "selecting-an-alternative-from-a-set-of-possibilities"]], "Selecting \u201cbenchmarks\u201d": [[539, "selecting-benchmarks"]], "SelectionDAG Instruction Selection Process": [[457, "selectiondag-instruction-selection-process"]], "SelectionDAG Legalize Phase": [[457, "selectiondag-legalize-phase"]], "SelectionDAG LegalizeTypes Phase": [[457, "selectiondag-legalizetypes-phase"]], "SelectionDAG Optimization Phase: the DAG Combiner": [[457, "selectiondag-optimization-phase-the-dag-combiner"]], "SelectionDAG Rule Imports": [[527, "selectiondag-rule-imports"]], "SelectionDAG Scheduling and Formation Phase": [[457, "selectiondag-scheduling-and-formation-phase"]], "SelectionDAG Select Phase": [[457, "selectiondag-select-phase"]], "Self-contained Headers": [[459, "self-contained-headers"]], "Semantics": [[549, "semantics"]], "Semantics:": [[505, "semantics"], [505, "id5"], [505, "id8"], [505, "id11"], [505, "id14"], [505, "id17"], [505, "id22"], [505, "id26"], [505, "id29"], [505, "id32"], [505, "id39"], [505, "id42"], [505, "id45"], [505, "id49"], [505, "id52"], [549, "id26"], [549, "id30"], [549, "id35"], [549, "id40"], [549, "id46"], [549, "id51"], [549, "id56"], [549, "id61"], [549, "id66"], [549, "id73"], [549, "id77"], [549, "id81"], [549, "id86"], [549, "id91"], [549, "id96"], [549, "id101"], [549, "id106"], [549, "id111"], [549, "id116"], [549, "id121"], [549, "id126"], [549, "id131"], [549, "id136"], [549, "id141"], [549, "id146"], [549, "id151"], [549, "id156"], [549, "id161"], [549, "id166"], [549, "id171"], [549, "id176"], [549, "id181"], [549, "id186"], [549, "id191"], [549, "id196"], [549, "id201"], [549, "id206"], [549, "id211"], [549, "id216"], [549, "id221"], [549, "id226"], [549, "id231"], [549, "id236"], [549, "id241"], [549, "id246"], [549, "id251"], [549, "id256"], [549, "id261"], [549, "id266"], [549, "id271"], [549, "id276"], [549, "id281"], [549, "id286"], [549, "id291"], [549, "id296"], [549, "id301"], [549, "id306"], [549, "id311"], [549, "id316"], [549, "id321"], [549, "id326"], [549, "id331"], [549, "id337"], [549, "id343"], [549, "id350"], [549, "id356"], [549, "id360"], [549, "id364"], [549, "id369"], [549, "id373"], [549, "id377"], [549, "id381"], [549, "id384"], [549, "id387"], [549, "id391"], [549, "id395"], [549, "id398"], [549, "id401"], [549, "id404"], [549, "id407"], [549, "id411"], [549, "id415"], [549, "id418"], [549, "id421"], [549, "id425"], [549, "id429"], [549, "id433"], [549, "id436"], [549, "id440"], [549, "id444"], [549, "id448"], [549, "id452"], [549, "id456"], [549, "id460"], [549, "id464"], [549, "id468"], [549, "id472"], [549, "id476"], [549, "id480"], [549, "id484"], [549, "id488"], [549, "id492"], [549, "id496"], [549, "id500"], [549, "id504"], [549, "id508"], [549, "id512"], [549, "id516"], [549, "id520"], [549, "id524"], [549, "id528"], [549, "id532"], [549, "id536"], [549, "id540"], [549, "id544"], [549, "id548"], [549, "id552"], [549, "id556"], [549, "id559"], [549, "id562"], [549, "id566"], [549, "id570"], [549, "id574"], [549, "id586"], [549, "id591"], [549, "id596"], [549, "id601"], [549, "id606"], [549, "id611"], [549, "id616"], [549, "id621"], [549, "id626"], [549, "id631"], [549, "id636"], [549, "id641"], [549, "id646"], [549, "id651"], [549, "id656"], [549, "id661"], [549, "id668"], [549, "id726"], [549, "id731"], [549, "id736"], [549, "id740"], [549, "id744"], [549, "id748"], [549, "id752"], [549, "id756"], [549, "id760"], [549, "id764"], [549, "id768"], [549, "id772"], [549, "id776"], [549, "id780"], [549, "id784"], [549, "id788"], [549, "id792"], [549, "id796"], [549, "id800"], [549, "id804"], [549, "id808"], [549, "id812"], [549, "id816"], [549, "id820"], [549, "id824"], [549, "id828"], [549, "id832"], [549, "id836"], [549, "id840"], [549, "id844"], [549, "id848"], [549, "id852"], [549, "id856"], [549, "id860"], [549, "id864"], [549, "id868"], [549, "id872"], [549, "id876"], [549, "id880"], [549, "id884"], [549, "id888"], [549, "id892"], [549, "id896"], [549, "id900"], [549, "id904"], [549, "id908"], [549, "id912"], [549, "id916"], [549, "id920"], [549, "id924"], [549, "id928"], [549, "id932"], [549, "id936"], [549, "id940"], [549, "id944"], [549, "id948"], [549, "id954"], [549, "id958"], [549, "id962"], [549, "id966"], [549, "id970"], [549, "id974"], [549, "id978"], [549, "id991"], [549, "id995"], [549, "id1001"], [549, "id1008"], [549, "id1011"], [549, "id1015"], [549, "id1019"], [549, "id1024"], [549, "id1029"], [549, "id1070"], [549, "id1074"], [549, "id1078"], [562, "semantics"], [562, "id5"], [596, "semantics"], [596, "id4"], [598, "semantics"], [598, "id4"], [598, "id8"]], "Sending patches": [[521, "sending-patches"]], "Sentinels": [[579, "sentinels"]], "Sequence": [[619, "sequence"]], "Sequential Containers (std::vector, std::list, etc)": [[579, "sequential-containers-std-vector-std-list-etc"]], "SequentiallyConsistent": [[444, "sequentiallyconsistent"]], "Serialization modes": [[589, "serialization-modes"]], "Serialized remarks": [[589, "serialized-remarks"]], "Set-Like Containers (std::set, SmallSet, SetVector, etc)": [[579, "set-like-containers-std-set-smallset-setvector-etc"]], "Setjmp/Longjmp Exception Handling": [[511, "setjmp-longjmp-exception-handling"]], "Setting a breakpoint in your pass": [[615, "setting-a-breakpoint-in-your-pass"]], "Setting up the build environment": [[615, "setting-up-the-build-environment"]], "Shared Library": [[576, "shared-library"]], "Sibling call optimization": [[457, "sibling-call-optimization"]], "Sign up": [[578, "sign-up"]], "Signed VBRs": [[447, "signed-vbrs"]], "Simple Constants": [[549, "simple-constants"]], "Simple formatting": [[579, "simple-formatting"]], "Simplifications for Non-Relocating GCs": [[598, "simplifications-for-non-relocating-gcs"]], "Simplifying MIR files": [[555, "simplifying-mir-files"]], "Single Value Types": [[549, "single-value-types"]], "SmallBitVector": [[579, "smallbitvector"]], "Software": [[521, "software"], [523, "software"]], "Sommaire": [[543, "sommaire"]], "Source Code": [[514, "source-code"]], "Source Code Formatting": [[459, "source-code-formatting"]], "Source Code Width": [[459, "source-code-width"]], "Source Filename": [[549, "source-filename"]], "Source Languages": [[440, "source-languages"], [514, "source-languages"]], "Source Level Debugging with LLVM": [[593, null]], "Source Locations": [[644, "source-locations"]], "Source Range": [[506, "id9"]], "Source Range:": [[506, "source-range"]], "Source Text": [[440, "source-text"]], "Source Tree Layout": [[580, "source-tree-layout"]], "Spaces Before Parentheses": [[459, "spaces-before-parentheses"]], "Spanning Tree": [[583, "spanning-tree"]], "SparseBitVector": [[579, "sparsebitvector"]], "Special Case File": [[616, "special-case-file"]], "Special Notes for Library-only Distributions": [[453, "special-notes-for-library-only-distributions"]], "Specialised Arithmetic Intrinsics": [[549, "specialised-arithmetic-intrinsics"]], "Specialized Metadata Nodes": [[549, "specialized-metadata-nodes"]], "Specifying GC code generation: gc \"...\"": [[518, "specifying-gc-code-generation-gc"]], "Specifying interactions between passes": [[615, "specifying-interactions-between-passes"]], "Specifying positional options with hyphens": [[501, "specifying-positional-options-with-hyphens"]], "Sphinx Quickstart Template": [[595, null]], "Stable build": [[510, "stable-build"]], "Stack Map Format": [[596, "stack-map-format"], [598, "stack-map-format"]], "Stack Map Intrinsics": [[549, "stack-map-intrinsics"]], "Stack Map Section": [[596, "stack-map-section"]], "Stack Map Usage": [[596, "stack-map-usage"]], "Stack Probe Emission": [[513, "stack-probe-emission"], [513, "id4"]], "Stack Safety Analysis": [[597, null]], "Stack instrumentation": [[559, "stack-instrumentation"]], "Stack maps and patch points in LLVM": [[596, null]], "Standard Blocks": [[447, "standard-block"]], "Standard C Library Intrinsics": [[549, "standard-c-library-intrinsics"]], "Standard Hash Tables": [[593, "standard-hash-tables"]], "Standard library support": [[502, "standard-library-support"]], "Startup initialization": [[551, "startup-initialization"]], "Statut": [[578, "status"], [598, "status"]], "Stay Informed": [[509, "stay-informed"]], "Step #1 : Before The Move": [[581, "step-1-before-the-move"]], "Step #2 : Git Move": [[581, "step-2-git-move"]], "Step #3: Write Access Move": [[581, "step-3-write-access-move"]], "Step #4 : Post Move": [[581, "step-4-post-move"]], "Steps To Add Builder To LLVM Buildbot": [[537, "steps-to-add-builder-to-llvm-buildbot"]], "Straw Man Migration Plan": [[581, "straw-man-migration-plan"]], "Stream Header": [[567, "stream-header"], [572, "stream-header"], [574, "stream-header"]], "Stream Layout": [[570, "stream-layout"]], "Streams": [[575, "streams"]], "String-like containers": [[579, "string-like-containers"]], "StringError": [[579, "stringerror"]], "Strings": [[506, "strings"]], "Structure": [[607, "structure"]], "Structure Type": [[549, "structure-type"]], "Structure Types": [[549, "structure-types"]], "Structured Fuzzing of LLVM IR": [[517, "structured-fuzzing-of-llvm-ir"]], "Structured Fuzzing using libprotobuf-mutator": [[517, "structured-fuzzing-using-libprotobuf-mutator"]], "Style Issues": [[459, "style-issues"]], "Sub-Array of Regions": [[506, "sub-array-of-regions"]], "Subcommands": [[489, "subcommands"]], "Subregister Indices": [[555, "subregister-indices"]], "Substitutions": [[609, "substitutions"]], "Substreams": [[567, "substreams"]], "Subtarget": [[601, "subtarget"]], "Subtarget Support": [[614, "subtarget-support"]], "Successors": [[555, "successors"]], "Summary": [[446, "summary"], [489, "summary"], [489, "id1"], [489, "id3"], [489, "id6"], [489, "id8"], [489, "id10"], [519, "summary"]], "Support Library": [[599, null]], "Support for alternate stackmap formats": [[598, "support-for-alternate-stackmap-formats"]], "Supported Architectures": [[596, "supported-architectures"], [598, "supported-architectures"]], "Supported Constraint Code List": [[549, "supported-constraint-code-list"]], "Supported Instructions": [[449, "supported-instructions"]], "Supporting Custom Compilers": [[563, "supporting-custom-compilers"]], "SwitchInst": [[449, "switchinst"]], "Switched-Resume Lowering": [[505, "switched-resume-lowering"]], "Symbol Options": [[489, "symbol-options"]], "Symbol Type Options": [[489, "symbol-type-options"]], "Symbols": [[439, "symbols"], [440, "symbols"]], "Symbols which can go in either/both of the module info stream & global stream": [[565, "symbols-which-can-go-in-either-both-of-the-module-info-stream-global-stream"]], "Synopsis": [[489, "synopsis"]], "Syntax": [[437, "syntax"], [437, "id1"], [437, "id2"], [549, "id613"], [549, "id618"], [549, "id623"], [549, "id628"], [549, "id633"], [549, "id638"], [549, "id643"], [549, "id648"], [549, "id653"], [549, "id658"], [605, "syntax"]], "Syntax of AMDGPU Instruction Modifiers": [[438, null]], "Syntax of AMDGPU Instruction Operands": [[439, null]], "Syntax of Core GFX10 Instructions": [[0, null]], "Syntax of Core GFX7 Instructions": [[1, null]], "Syntax of Core GFX8 Instructions": [[2, null]], "Syntax of Expressions": [[439, "syntax-of-expressions"]], "Syntax of gfx900, gfx902 and gfx909 Instructions": [[4, null]], "Syntax:": [[505, "syntax"], [549, "syntax"], [549, "id27"], [549, "id32"], [549, "id37"], [549, "id43"], [549, "id48"], [549, "id53"], [549, "id58"], [549, "id63"], [549, "id68"], [549, "id75"], [549, "id78"], [549, "id83"], [549, "id88"], [549, "id93"], [549, "id98"], [549, "id103"], [549, "id108"], [549, "id113"], [549, "id118"], [549, "id123"], [549, "id128"], [549, "id133"], [549, "id138"], [549, "id143"], [549, "id148"], [549, "id153"], [549, "id158"], [549, "id163"], [549, "id168"], [549, "id173"], [549, "id178"], [549, "id183"], [549, "id188"], [549, "id193"], [549, "id198"], [549, "id203"], [549, "id208"], [549, "id213"], [549, "id218"], [549, "id223"], [549, "id228"], [549, "id233"], [549, "id238"], [549, "id243"], [549, "id248"], [549, "id253"], [549, "id258"], [549, "id263"], [549, "id268"], [549, "id273"], [549, "id278"], [549, "id283"], [549, "id288"], [549, "id293"], [549, "id298"], [549, "id303"], [549, "id308"], [549, "id313"], [549, "id318"], [549, "id323"], [549, "id328"], [549, "id333"], [549, "id339"], [549, "id346"], [549, "id353"], [549, "id357"], [549, "id361"], [549, "id366"], [549, "id370"], [549, "id374"], [549, "id378"], [549, "id382"], [549, "id385"], [549, "id388"], [549, "id392"], [549, "id396"], [549, "id399"], [549, "id402"], [549, "id405"], [549, "id408"], [549, "id412"], [549, "id416"], [549, "id419"], [549, "id422"], [549, "id426"], [549, "id430"], [549, "id434"], [549, "id437"], [549, "id441"], [549, "id445"], [549, "id449"], [549, "id453"], [549, "id457"], [549, "id461"], [549, "id465"], [549, "id469"], [549, "id473"], [549, "id477"], [549, "id481"], [549, "id485"], [549, "id489"], [549, "id493"], [549, "id497"], [549, "id501"], [549, "id505"], [549, "id509"], [549, "id513"], [549, "id517"], [549, "id521"], [549, "id525"], [549, "id529"], [549, "id533"], [549, "id537"], [549, "id541"], [549, "id545"], [549, "id549"], [549, "id553"], [549, "id557"], [549, "id560"], [549, "id563"], [549, "id567"], [549, "id571"], [549, "id575"], [549, "id579"], [549, "id583"], [549, "id588"], [549, "id593"], [549, "id598"], [549, "id603"], [549, "id608"], [549, "id663"], [549, "id665"], [549, "id670"], [549, "id673"], [549, "id677"], [549, "id680"], [549, "id684"], [549, "id687"], [549, "id690"], [549, "id693"], [549, "id696"], [549, "id699"], [549, "id702"], [549, "id705"], [549, "id708"], [549, "id711"], [549, "id714"], [549, "id717"], [549, "id720"], [549, "id723"], [549, "id728"], [549, "id733"], [549, "id737"], [549, "id741"], [549, "id745"], [549, "id749"], [549, "id753"], [549, "id757"], [549, "id761"], [549, "id765"], [549, "id769"], [549, "id773"], [549, "id777"], [549, "id781"], [549, "id785"], [549, "id789"], [549, "id793"], [549, "id797"], [549, "id801"], [549, "id805"], [549, "id809"], [549, "id813"], [549, "id817"], [549, "id821"], [549, "id825"], [549, "id829"], [549, "id833"], [549, "id837"], [549, "id841"], [549, "id845"], [549, "id849"], [549, "id853"], [549, "id857"], [549, "id861"], [549, "id865"], [549, "id869"], [549, "id873"], [549, "id877"], [549, "id881"], [549, "id885"], [549, "id889"], [549, "id893"], [549, "id897"], [549, "id901"], [549, "id905"], [549, "id909"], [549, "id913"], [549, "id917"], [549, "id921"], [549, "id925"], [549, "id929"], [549, "id933"], [549, "id937"], [549, "id941"], [549, "id945"], [549, "id949"], [549, "id951"], [549, "id955"], [549, "id959"], [549, "id963"], [549, "id967"], [549, "id971"], [549, "id975"], [549, "id979"], [549, "id982"], [549, "id985"], [549, "id988"], [549, "id992"], [549, "id996"], [549, "id998"], [549, "id1003"], [549, "id1005"], [549, "id1009"], [549, "id1012"], [549, "id1016"], [549, "id1021"], [549, "id1026"], [549, "id1031"], [549, "id1033"], [549, "id1035"], [549, "id1037"], [549, "id1039"], [549, "id1041"], [549, "id1043"], [549, "id1045"], [549, "id1047"], [549, "id1049"], [549, "id1051"], [549, "id1053"], [549, "id1055"], [549, "id1057"], [549, "id1059"], [549, "id1061"], [549, "id1063"], [549, "id1065"], [549, "id1067"], [549, "id1071"], [549, "id1075"], [562, "syntax"], [562, "id3"], [562, "id6"], [562, "id8"], [596, "syntax"], [596, "id1"], [598, "syntax"], [598, "id1"], [598, "id5"]], "Syntaxe": [[604, "syntax"]], "Syntaxe des instructions GFX9": [[3, null]], "Syntaxe des instructions gfx904": [[5, null]], "Syntaxe des instructions gfx906": [[6, null]], "Syntaxe des instructions gfx908": [[7, null]], "System Library": [[600, null]], "System VGPR Work-Item ID Enumeration Values": [[440, "amdgpu-amdhsa-system-vgpr-work-item-id-enumeration-values-table"]], "SystemZ": [[503, "systemz"]], "T": [[550, "t"]], "TARGET OPTIONS": [[466, "target-options"]], "TEST DISCOVERY": [[464, "test-discovery"], [464, "id7"]], "TEST RUN OUTPUT FORMAT": [[464, "test-run-output-format"]], "TEST STATUS RESULTS": [[464, "test-status-results"]], "TEST SUITES": [[464, "test-suites"]], "TPI vs IPI Stream": [[574, "tpi-vs-ipi-stream"]], "TSCWrap Records": [[618, "tscwrap-records"]], "TUTORIAL": [[460, "tutorial"]], "TVM": [[583, "tvm"]], "TYPE_BLOCK Contents": [[447, "type-block-contents"]], "TYPE_CODE_ARRAY Record": [[447, "type-code-array-record"]], "TYPE_CODE_DOUBLE Record": [[447, "type-code-double-record"]], "TYPE_CODE_FLOAT Record": [[447, "type-code-float-record"]], "TYPE_CODE_FP128 Record": [[447, "type-code-fp128-record"]], "TYPE_CODE_FUNCTION Record": [[447, "type-code-function-record"]], "TYPE_CODE_FUNCTION_OLD Record": [[447, "type-code-function-old-record"]], "TYPE_CODE_HALF Record": [[447, "type-code-half-record"]], "TYPE_CODE_INTEGER Record": [[447, "type-code-integer-record"]], "TYPE_CODE_LABEL Record": [[447, "type-code-label-record"]], "TYPE_CODE_METADATA Record": [[447, "type-code-metadata-record"]], "TYPE_CODE_NUMENTRY Record": [[447, "type-code-numentry-record"]], "TYPE_CODE_OPAQUE Record": [[447, "type-code-opaque-record"]], "TYPE_CODE_POINTER Record": [[447, "type-code-pointer-record"]], "TYPE_CODE_PPC_FP128 Record": [[447, "type-code-ppc-fp128-record"]], "TYPE_CODE_STRUCT_ANON Record": [[447, "type-code-struct-anon-record"]], "TYPE_CODE_STRUCT_NAME Record": [[447, "type-code-struct-name-record"]], "TYPE_CODE_STRUCT_NAMED Record": [[447, "type-code-struct-named-record"]], "TYPE_CODE_VECTOR Record": [[447, "type-code-vector-record"]], "TYPE_CODE_VOID Record": [[447, "type-code-void-record"]], "TYPE_CODE_X86_FP80 Record": [[447, "type-code-x86-fp80-record"]], "TYPE_CODE_X86_MMX Record": [[447, "type-code-x86-mmx-record"]], "Table des mati\u00e8res": [[582, "table-of-contents"]], "TableGen": [[605, null]], "TableGen BackEnds": [[601, null]], "TableGen Deficiencies": [[602, null], [605, "tablegen-deficiencies"]], "TableGen Fundamentals": [[606, null]], "TableGen Language Introduction": [[603, null]], "TableGen Language Reference": [[604, null]], "TableGen backends": [[605, "tablegen-backends"]], "TableGen comments": [[603, "tablegen-comments"]], "TableGen primitives": [[603, "tablegen-primitives"]], "TableGen syntax": [[603, "tablegen-syntax"]], "TableGen values and expressions": [[603, "tablegen-values-and-expressions"]], "Tag the LLVM Final Release": [[542, "tag-the-llvm-final-release"]], "Tag:": [[506, "tag"]], "Tagging considerations": [[579, "tagging-considerations"]], "Tagging the LLVM Release Candidates": [[542, "tagging-the-llvm-release-candidates"]], "Tags": [[619, "tags"]], "Tail Calls": [[457, "tail-calls"]], "Tail call optimization": [[457, "tail-call-optimization"]], "Target Feature Matrix": [[457, "target-feature-matrix"]], "Target Features": [[440, "target-features"]], "Target Independence": [[645, "target-independence"], [654, "target-independence"]], "Target Intrinsics": [[526, "target-intrinsics"], [562, "target-intrinsics"]], "Target JIT Info": [[614, "target-jit-info"]], "Target Machine": [[614, "target-machine"], [643, "target-machine"]], "Target Registration": [[614, "target-registration"]], "Target Specific Behaviour": [[513, "target-specific-behaviour"]], "Target Triple": [[549, "target-triple"]], "Target Triples": [[440, "target-triples"]], "Target description classes": [[457, "target-description-classes"]], "Target-dependent Index Operands": [[555, "target-dependent-index-operands"]], "Target-independent code generation algorithms": [[457, "target-independent-code-generation-algorithms"]], "Target-specific Implementation Notes": [[457, "target-specific-implementation-notes"]], "Tech talks": [[558, "tech-talks"]], "Terminator Instructions": [[549, "terminator-instructions"]], "Terminology and Notation": [[521, "terminology-and-notation"]], "Test Cases": [[509, "test-cases"]], "Test Suite": [[588, "test-suite"]], "Test-Suite Extentions": [[583, null]], "Testing": [[530, "testing"], [597, "testing"]], "Testing Addresses For Type Membership": [[611, "testing-addresses-for-type-membership"]], "Testing Debug Info Preservation in Optimizations": [[593, "testing-debug-info-preservation-in-optimizations"]], "Testing Individual Code Generation Passes": [[555, "testing-individual-code-generation-passes"]], "Testing and Debugging": [[586, "testing-and-debugging"]], "Testing compiler-rt builtins using qemu-arm": [[540, "testing-compiler-rt-builtins-using-qemu-arm"]], "Text Formatting": [[595, "text-formatting"]], "The -aa-eval pass": [[443, "the-aa-eval-pass"]], "The -adce pass": [[443, "the-adce-pass"]], "The -argpromotion pass": [[443, "the-argpromotion-pass"]], "The -basicaa pass": [[443, "the-basicaa-pass"]], "The -ds-aa pass": [[443, "the-ds-aa-pass"]], "The -globalsmodref-aa pass": [[443, "the-globalsmodref-aa-pass"]], "The -gvn, -memcpyopt, and -dse passes": [[443, "the-gvn-memcpyopt-and-dse-passes"]], "The -licm pass": [[443, "the-licm-pass"]], "The -no-aa pass": [[443, "the-no-aa-pass"]], "The -print-alias-sets pass": [[443, "the-print-alias-sets-pass"]], "The -scev-aa pass": [[443, "the-scev-aa-pass"]], "The -steens-aa pass": [[443, "the-steens-aa-pass"]], "The AMDGPU backend": [[457, "the-amdgpu-backend"]], "The Abstract Syntax Tree (AST)": [[637, "the-abstract-syntax-tree-ast"], [648, "the-abstract-syntax-tree-ast"]], "The AliasSetTracker implementation": [[443, "the-aliassettracker-implementation"]], "The AnalysisUsage::addPreserved<> method": [[615, "the-analysisusage-addpreserved-method"]], "The AnalysisUsage::addRequired<> and AnalysisUsage::addRequiredTransitive<> methods": [[615, "the-analysisusage-addrequired-and-analysisusage-addrequiredtransitive-methods"]], "The Argument class": [[579, "the-argument-class"]], "The Basic Language": [[647, "the-basic-language"]], "The BasicBlock class": [[579, "the-basicblock-class"]], "The Basics": [[516, "the-basics"]], "The C++ Standard Template Library": [[579, "the-c-standard-template-library"]], "The CallGraphSCCPass class": [[615, "the-callgraphsccpass-class"]], "The CodeView Symbol Substream": [[570, "the-codeview-symbol-substream"]], "The Constant class and subclasses": [[579, "the-constant-class-and-subclasses"]], "The Contract of classof": [[543, "the-contract-of-classof"]], "The Core LLVM Class Hierarchy Reference": [[579, "the-core-llvm-class-hierarchy-reference"]], "The CoreCLR GC": [[518, "the-coreclr-gc"]], "The DataLayout class": [[457, "the-datalayout-class"]], "The Driver": [[637, "the-driver"], [648, "the-driver"]], "The Fault Map Section": [[515, "the-fault-map-section"]], "The FileCheck -check-prefix option": [[460, "the-filecheck-check-prefix-option"]], "The Free Block Map": [[571, "the-free-block-map"]], "The Function class": [[579, "the-function-class"]], "The FunctionPass class": [[615, "the-functionpass-class"]], "The GlobalValue class": [[579, "the-globalvalue-class"]], "The GlobalVariable class": [[579, "the-globalvariable-class"]], "The High-Level Issues": [[459, "the-high-level-issues"]], "The ImmutablePass class": [[615, "the-immutablepass-class"]], "The ImplicitNullChecks pass": [[515, "the-implicitnullchecks-pass"]], "The Instruction class": [[579, "the-instruction-class"]], "The Kaleidoscope Language": [[636, "the-kaleidoscope-language"]], "The Kernel": [[562, "the-kernel"]], "The LLVM Lexicon": [[550, null]], "The LLVM Target-Independent Code Generator": [[457, null]], "The LLVM gold plugin": [[535, null]], "The LLVM_DEBUG() macro and -debug option": [[579, "the-llvm-debug-macro-and-debug-option"]], "The Lexer": [[636, "the-lexer"], [647, "the-lexer"]], "The Location of LLVM Object Files": [[521, "the-location-of-llvm-object-files"]], "The Loop Vectorizer": [[613, "the-loop-vectorizer"]], "The LoopPass class": [[615, "the-looppass-class"]], "The Low-Level Issues": [[459, "the-low-level-issues"]], "The MCContext class": [[457, "the-mccontext-class"]], "The MCInst class": [[457, "the-mcinst-class"]], "The MCSection class": [[457, "the-mcsection-class"]], "The MCStreamer API": [[457, "the-mcstreamer-api"]], "The MCSymbol class": [[457, "the-mcsymbol-class"]], "The MSF Container": [[575, "the-msf-container"]], "The MSF File Format": [[571, null]], "The MachineBasicBlock class": [[457, "the-machinebasicblock-class"]], "The MachineFunction class": [[457, "the-machinefunction-class"]], "The MachineFunctionPass class": [[615, "the-machinefunctionpass-class"]], "The MachineInstr class": [[457, "the-machineinstr-class"]], "The Module Information Stream": [[570, null]], "The Module class": [[579, "the-module-class"]], "The ModulePass class": [[615, "the-modulepass-class"]], "The NVPTX backend": [[457, "the-nvptx-backend"]], "The Often Misunderstood GEP Instruction": [[519, null]], "The PDB DBI (Debug Info) Stream": [[567, null]], "The PDB File Format": [[575, null]], "The PDB Global Symbol Stream": [[568, null]], "The PDB Info Stream (aka the PDB Stream)": [[572, null]], "The PDB Public Symbol Stream": [[573, null]], "The PDB Serialized Hash Table Format": [[569, null]], "The PDB TPI and IPI Streams": [[574, null]], "The Planning Process and VPlan Roadmap": [[585, "the-planning-process-and-vplan-roadmap"]], "The PowerPC backend": [[457, "the-powerpc-backend"]], "The RegionPass class": [[615, "the-regionpass-class"]], "The SLP Vectorizer": [[613, "the-slp-vectorizer"]], "The SSA deconstruction phase": [[457, "the-ssa-deconstruction-phase"]], "The SelectionDAG Legalize Phase": [[614, "the-selectiondag-legalize-phase"]], "The Shadow Stack GC": [[518, "the-shadow-stack-gc"]], "The Statepoint Example GC": [[518, "the-statepoint-example-gc"]], "The Statistic class & -stats option": [[579, "the-statistic-class-stats-option"]], "The Stream Directory": [[571, "the-stream-directory"]], "The StringRef class": [[579, "the-stringref-class"]], "The Superblock": [[571, "the-superblock"]], "The TableGen program": [[605, "the-tablegen-program"]], "The TableGen type system": [[603, "the-tablegen-type-system"]], "The TargetFrameLowering class": [[457, "the-targetframelowering-class"]], "The TargetInstrInfo class": [[457, "the-targetinstrinfo-class"]], "The TargetJITInfo class": [[457, "the-targetjitinfo-class"]], "The TargetLowering class": [[457, "the-targetlowering-class"]], "The TargetMachine class": [[457, "the-targetmachine-class"]], "The TargetRegisterInfo class": [[457, "the-targetregisterinfo-class"]], "The TargetSubtarget class": [[457, "the-targetsubtarget-class"]], "The Twine class": [[579, "the-twine-class"]], "The Type class and Derived Types": [[579, "the-type-class-and-derived-types"]], "The User and owned Use classes\u201d memory layout": [[579, "the-user-and-owned-use-classes-memory-layout"]], "The User class": [[579, "the-user-class"]], "The Value class": [[579, "the-value-class"]], "The ValueSymbolTable class": [[579, "the-valuesymboltable-class"]], "The X86 backend": [[457, "the-x86-backend"]], "The XRay stack tool": [[617, "the-xray-stack-tool"]], "The addEscapingUse method": [[443, "the-addescapinguse-method"]], "The alias method": [[443, "the-alias-method"]], "The cl::ConsumeAfter modifier": [[501, "the-cl-consumeafter-modifier"]], "The cl::OptionCategory class": [[501, "the-cl-optioncategory-class"]], "The cl::ParseCommandLineOptions function": [[501, "the-cl-parsecommandlineoptions-function"]], "The cl::ParseEnvironmentOptions function": [[501, "the-cl-parseenvironmentoptions-function"]], "The cl::SetVersionPrinter function": [[501, "the-cl-setversionprinter-function"]], "The cl::alias class": [[501, "the-cl-alias-class"]], "The cl::bits class": [[501, "the-cl-bits-class"]], "The cl::extrahelp class": [[501, "the-cl-extrahelp-class"]], "The cl::getRegisteredOptions function": [[501, "the-cl-getregisteredoptions-function"]], "The cl::list class": [[501, "the-cl-list-class"]], "The cl::opt class": [[501, "the-cl-opt-class"]], "The cmake try compile stage fails": [[540, "the-cmake-try-compile-stage-fails"]], "The copyValue method": [[443, "the-copyvalue-method"]], "The debugify utility": [[593, "the-debugify-utility"]], "The deleteValue method": [[443, "the-deletevalue-method"]], "The doFinalization() method": [[615, "the-dofinalization-method"], [615, "id2"]], "The doFinalization(CallGraph &) method": [[615, "the-dofinalization-callgraph-method"]], "The doFinalization(Module &) method": [[615, "the-dofinalization-module-method"]], "The doInitialization(CallGraph &) method": [[615, "the-doinitialization-callgraph-method"]], "The doInitialization(Loop *, LPPassManager &) method": [[615, "the-doinitialization-loop-lppassmanager-method"]], "The doInitialization(Module &) method": [[615, "the-doinitialization-module-method"]], "The doInitialization(Region *, RGPassManager &) method": [[615, "the-doinitialization-region-rgpassmanager-method"]], "The doesNotAccessMemory and  onlyReadsMemory methods": [[443, "the-doesnotaccessmemory-and-onlyreadsmemory-methods"]], "The extended Berkeley Packet Filter (eBPF) backend": [[457, "the-extended-berkeley-packet-filter-ebpf-backend"]], "The function_ref class template": [[579, "the-function-ref-class-template"]], "The getAnalysis<> and getAnalysisIfAvailable<> methods": [[615, "the-getanalysis-and-getanalysisifavailable-methods"]], "The getAnalysisUsage method": [[615, "the-getanalysisusage-method"]], "The getModRefInfo methods": [[443, "the-getmodrefinfo-methods"]], "The high-level design of the code generator": [[457, "the-high-level-design-of-the-code-generator"]], "The isa<>, cast<> and dyn_cast<> templates": [[579, "the-isa-cast-and-dyn-cast-templates"]], "The llvm-xray Tool": [[617, "the-llvm-xray-tool"]], "The pointsToConstantMemory method": [[443, "the-pointstoconstantmemory-method"]], "The print method": [[615, "the-print-method"]], "The releaseMemory method": [[615, "the-releasememory-method"]], "The remark container": [[589, "the-remark-container"]], "The replaceWithNewValue method": [[443, "the-replacewithnewvalue-method"]], "The runOnFunction method": [[615, "the-runonfunction-method"]], "The runOnLoop method": [[615, "the-runonloop-method"]], "The runOnMachineFunction(MachineFunction &MF) method": [[615, "the-runonmachinefunction-machinefunction-mf-method"]], "The runOnModule method": [[615, "the-runonmodule-method"]], "The runOnRegion method": [[615, "the-runonregion-method"]], "The runOnSCC method": [[615, "the-runonscc-method"]], "The walker": [[560, "the-walker"]], "The waymarking algorithm": [[579, "the-waymarking-algorithm"]], "The \u00ab\u00a0CHECK-COUNT:\u00a0\u00bb directive": [[460, "the-check-count-directive"]], "The \u00ab\u00a0CHECK-DAG:\u00a0\u00bb directive": [[460, "the-check-dag-directive"]], "The \u00ab\u00a0CHECK-EMPTY:\u00a0\u00bb directive": [[460, "the-check-empty-directive"]], "The \u00ab\u00a0CHECK-LABEL:\u00a0\u00bb directive": [[460, "the-check-label-directive"]], "The \u00ab\u00a0CHECK-NEXT:\u00a0\u00bb directive": [[460, "the-check-next-directive"]], "The \u00ab\u00a0CHECK-NOT:\u00a0\u00bb directive": [[460, "the-check-not-directive"]], "The \u00ab\u00a0CHECK-SAME:\u00a0\u00bb directive": [[460, "the-check-same-directive"]], "The \u00ab\u00a0MC\u00a0\u00bb Layer": [[457, "the-mc-layer"]], "The \u201cErlang\u201d and \u201cOcaml\u201d GCs": [[518, "the-erlang-and-ocaml-gcs"]], "The \u201cllvm.compiler.used\u201d Global Variable": [[549, "the-llvm-compiler-used-global-variable"]], "The \u201cllvm.global_ctors\u201d Global Variable": [[549, "the-llvm-global-ctors-global-variable"]], "The \u201cllvm.global_dtors\u201d Global Variable": [[549, "the-llvm-global-dtors-global-variable"]], "The \u201cllvm.used\u201d Global Variable": [[549, "the-llvm-used-global-variable"]], "ThinLTO Summary": [[549, "thinlto-summary"]], "Thread Local Storage Models": [[549, "thread-local-storage-models"]], "Threads and LLVM": [[579, "threads-and-llvm"]], "Threads and the JIT": [[579, "threads-and-the-jit"]], "Throw": [[511, "throw"]], "Throw Filters": [[511, "throw-filters"]], "Timeline View": [[485, "timeline-view"]], "Tips and Tricks": [[645, "tips-and-tricks"], [654, "tips-and-tricks"]], "Token Type": [[549, "token-type"]], "Too Long; Didn\u2019t Read": [[584, "too-long-didn-t-read"]], "Top Level APIs": [[563, "top-level-apis"]], "Top-Level Classes and Functions": [[501, "top-level-classes-and-functions"]], "Top-Level let": [[604, "top-level-let"]], "Toy example": [[551, "toy-example"]], "Trace Analysis Tools": [[616, "trace-analysis-tools"], [616, "id1"]], "Tracing CMP instructions": [[551, "tracing-cmp-instructions"]], "Trampoline Intrinsics": [[549, "trampoline-intrinsics"]], "Transform Passes": [[577, "transform-passes"]], "Transformation Metadata Structure": [[610, "transformation-metadata-structure"]], "Transition Options": [[584, "transition-options"]], "Transitioning from ORCv1 to ORCv2": [[563, "transitioning-from-orcv1-to-orcv2"]], "Translating Function Calls": [[526, "translating-function-calls"]], "Translation of Constants": [[526, "translation-of-constants"]], "Trap Handler ABI": [[440, "trap-handler-abi"], [440, "id56"]], "Treat Compiler Warnings Like Errors": [[459, "treat-compiler-warnings-like-errors"]], "Treating calls and invokes the same way": [[579, "treating-calls-and-invokes-the-same-way"]], "Triaging bugs": [[450, "triaging-bugs"]], "Triples": [[562, "triples"]], "Trivial Constant Folding": [[639, "trivial-constant-folding"], [650, "trivial-constant-folding"]], "Trophies": [[551, "trophies"]], "Troubleshooting": [[540, "troubleshooting"]], "Try/Catch": [[511, "try-catch"]], "Tuning/Configuration Options": [[465, "tuning-configuration-options"]], "Turn Predicate Loops into Predicate Functions": [[459, "turn-predicate-loops-into-predicate-functions"]], "Turning an iterator into a class pointer (and vice-versa)": [[579, "turning-an-iterator-into-a-class-pointer-and-vice-versa"]], "Tutorial Conclusion": [[645, "tutorial-conclusion"], [654, "tutorial-conclusion"]], "Tutorial Introduction": [[647, "tutorial-introduction"]], "Tutorial: A Simple Compute Kernel": [[562, "tutorial-a-simple-compute-kernel"]], "Tutorial: Linking with Libdevice": [[562, "tutorial-linking-with-libdevice"]], "Tutorials": [[531, "tutorials"]], "Type Conversions": [[525, "type-conversions"]], "Type ID Summary Entry": [[549, "type-id-summary-entry"]], "Type Indices": [[574, "type-indices"]], "Type Metadata": [[611, null]], "Type Offsets for A, B, C, D": [[611, "id2"]], "Type Record Options": [[489, "type-record-options"], [489, "id5"]], "Type Server Map Substream": [[567, "type-server-map-substream"]], "Type System": [[549, "type-system"]], "Type and Size Conversion": [[439, "type-and-size-conversion"]], "Type and Size Suffices": [[437, "type-and-size-suffices"]], "Type deviation": [[86, null], [174, null], [271, null], [304, null], [331, null], [418, null]], "TypeCheckedLoadConstVCalls": [[549, "typecheckedloadconstvcalls"]], "TypeCheckedLoadVCalls": [[549, "typecheckedloadvcalls"]], "TypeIdInfo": [[549, "typeidinfo"]], "TypeTestAssumeConstVCalls": [[549, "typetestassumeconstvcalls"]], "TypeTestAssumeVCalls": [[549, "typetestassumevcalls"]], "TypeTests": [[549, "typetests"]], "Types": [[506, "types"], [604, "types"]], "UNABBREV_RECORD Encoding": [[447, "unabbrev-record-encoding"]], "USING MARKERS TO ANALYZE SPECIFIC CODE BLOCKS": [[485, "using-markers-to-analyze-specific-code-blocks"]], "Unary Operations": [[549, "unary-operations"]], "Unary Operators": [[439, "unary-operators"]], "Undefined Values": [[549, "undefined-values"]], "Unique types": [[619, "unique-types"]], "Unit and Regression tests": [[609, "unit-and-regression-tests"]], "Unit tests": [[609, "unit-tests"]], "Unordered": [[444, "unordered"]], "Unpacking the LLVM Archives": [[521, "unpacking-the-llvm-archives"]], "Unroll-And-Jam": [[610, "unroll-and-jam"]], "Unspecified OS": [[440, "unspecified-os"]], "Update Documentation": [[542, "update-documentation"]], "Update IR components": [[441, "update-ir-components"]], "Update LLVM Version": [[542, "update-llvm-version"]], "Update Selector components": [[441, "update-selector-components"]], "Update mappings": [[441, "update-mappings"]], "Update the LLVM Demo Page": [[542, "update-the-llvm-demo-page"]], "Update the LLVM Website": [[542, "update-the-llvm-website"]], "Updating Toolchain Requirements": [[509, "updating-toolchain-requirements"]], "Updating analysis results for transformations": [[443, "updating-analysis-results-for-transformations"]], "Usage": [[510, "usage"], [528, "usage"], [535, "usage"], [536, "usage"], [559, "usage"], [591, "usage"], [613, "usage"], [613, "id1"]], "Use Early Exits and continue to Simplify Code": [[459, "use-early-exits-and-continue-to-simplify-code"]], "Use Optimization": [[560, "use-optimization"]], "Use Standard C Headers": [[599, "use-standard-c-headers"]], "Use Standard C++ Headers": [[599, "id1"]], "Use after Free Detection": [[536, "use-after-free-detection"]], "Use auto Type Deduction to Make Code More Readable": [[459, "use-auto-type-deduction-to-make-code-more-readable"]], "Use of allocas": [[516, "use-of-allocas"]], "Use of class and struct Keywords": [[459, "use-of-class-and-struct-keywords"]], "Use range-based for loops wherever possible": [[459, "use-range-based-for-loops-wherever-possible"]], "Use raw_ostream": [[459, "use-raw-ostream"]], "Use-cases": [[563, "use-cases"]], "Use-list Order Directives": [[549, "use-list-order-directives"]], "Useful Built-in Commands": [[456, "useful-built-in-commands"]], "User Context Data": [[619, "user-context-data"]], "User Data": [[440, "user-data"]], "User Guide for AMDGPU Backend": [[440, null]], "User Guide for NVPTX Back-end": [[562, null]], "User Guides": [[612, null]], "User-defined Binary Operators": [[641, "user-defined-binary-operators"], [652, "user-defined-binary-operators"]], "User-defined Local Variables": [[642, "user-defined-local-variables"], [653, "user-defined-local-variables"]], "User-defined Operators: the Idea": [[641, "user-defined-operators-the-idea"], [652, "user-defined-operators-the-idea"]], "User-defined Unary Operators": [[641, "user-defined-unary-operators"], [652, "user-defined-unary-operators"]], "User-supplied mutators": [[551, "user-supplied-mutators"]], "Using -opt-bisect-limit to debug optimization errors": [[564, null]], "Using ARM NEON instructions in big endian mode": [[446, null]], "Using ExitOnError to simplify tool code": [[579, "using-exitonerror-to-simplify-tool-code"]], "Using GDB with dynamically loaded passes": [[615, "using-gdb-with-dynamically-loaded-passes"]], "Using RegisterAnalysisGroup": [[615, "using-registeranalysisgroup"]], "Using TableGen for target description": [[457, "using-tablegen-for-target-description"]], "Using XRay": [[616, "using-xray"]], "Using a Different Class on Host/Device": [[502, "using-a-different-class-on-host-device"]], "Using alias analysis results": [[443, "using-alias-analysis-results"]], "Using cantFail to simplify safe callsites": [[579, "using-cantfail-to-simplify-safe-callsites"]], "Using debugify": [[593, "using-debugify"]], "Using existing registries": [[615, "using-existing-registries"]], "Using gc.statepoint": [[518, "using-gc-statepoint"]], "Using llvm.gcwrite": [[518, "using-llvm-gcwrite"]], "Using the AliasAnalysis interface directly": [[443, "using-the-aliasanalysis-interface-directly"]], "Using the AliasSetTracker class": [[443, "using-the-aliassettracker-class"]], "Using the C and C++ Front Ends": [[514, "using-the-c-and-c-front-ends"]], "Using the MachineInstrBuilder.h functions": [[457, "using-the-machineinstrbuilder-h-functions"]], "Using the MemoryDependenceAnalysis Pass": [[443, "using-the-memorydependenceanalysis-pass"]], "Using the script": [[539, "using-the-script"]], "Utilities for Writing Fuzzers": [[517, "utilities-for-writing-fuzzers"]], "Utility Macros": [[619, "utility-macros"]], "Utility Passes": [[577, "utility-passes"]], "Utility Passes for Safepoint Insertion": [[598, "utility-passes-for-safepoint-insertion"]], "VALU": [[440, "valu"]], "VALUE_SYMTAB_BLOCK Contents": [[447, "value-symtab-block-contents"]], "VGPR Register Set Up Order": [[440, "amdgpu-amdhsa-vgpr-register-set-up-order-table"]], "VINTRP": [[0, "vintrp"], [1, "vintrp"], [2, "vintrp"], [3, "vintrp"]], "VINTRP Modifiers": [[438, "vintrp-modifiers"]], "VLIW Packetizer": [[457, "vliw-packetizer"]], "VOP1": [[0, "vop1"], [1, "vop1"], [2, "vop1"], [3, "vop1"]], "VOP2": [[0, "vop2"], [1, "vop2"], [2, "vop2"], [3, "vop2"], [6, "vop2"], [7, "vop2"]], "VOP3": [[0, "vop3"], [1, "vop3"], [2, "vop3"], [3, "vop3"], [6, "vop3"], [7, "vop3"]], "VOP3 Modifiers": [[438, "vop3-modifiers"]], "VOP3 Operand Modifiers": [[438, "vop3-operand-modifiers"]], "VOP3P": [[0, "vop3p"], [3, "vop3p"], [4, "vop3p"], [5, "vop3p"], [6, "vop3p"], [7, "vop3p"]], "VOP3P MFMA Modifiers": [[438, "vop3p-mfma-modifiers"]], "VOP3P Modifiers": [[438, "vop3p-modifiers"]], "VOP3P V_MAD_MIX Modifiers": [[438, "vop3p-v-mad-mix-modifiers"]], "VOPC": [[0, "vopc"], [1, "vopc"], [2, "vopc"], [3, "vopc"]], "VP": [[549, "vp"]], "Validation": [[619, "validation"]], "Value Profile": [[551, "value-profile"]], "Value definitions": [[603, "value-definitions"]], "Values": [[604, "values"]], "Variable Argument Handling Intrinsics": [[549, "variable-argument-handling-intrinsics"]], "Variable Length Arrays": [[513, "variable-length-arrays"]], "Variable Names Coding Standard Options": [[584, "variable-names-coding-standard-options"]], "Variable Names Plan": [[584, null]], "Variable Sized Allocas": [[592, "variable-sized-allocas"]], "Variable Width Integers": [[447, "variable-width-value"]], "Variable locations during Register Allocation": [[593, "variable-locations-during-register-allocation"]], "Variable locations in Instruction Selection and MIR": [[593, "variable-locations-in-instruction-selection-and-mir"]], "Variables": [[644, "variables"]], "Variables for Building Libraries": [[580, "variables-for-building-libraries"]], "Variables for Building Programs": [[580, "variables-for-building-programs"]], "Variables for Building Subdirectories": [[580, "variables-for-building-subdirectories"]], "Variables, Types, and Scope": [[456, "variables-types-and-scope"]], "Variadic Arguments": [[525, "variadic-arguments"]], "Vector Operations": [[549, "vector-operations"]], "Vector Specific Operations": [[525, "vector-specific-operations"]], "Vector Type": [[549, "vector-type"]], "Vector of pointers:": [[549, "vector-of-pointers"]], "Vectorization Plan": [[585, null]], "Vectorization Workflow": [[585, "vectorization-workflow"]], "Vectorization of Mixed Types": [[613, "vectorization-of-mixed-types"]], "Vectorization of function calls": [[613, "vectorization-of-function-calls"]], "Versioning LICM": [[610, "versioning-licm"]], "Versions": [[551, "versions"]], "Viewing graphs while debugging code": [[579, "viewing-graphs-while-debugging-code"]], "Virtual Table Layout for A, B, C, D": [[611, "id1"]], "Visibility Styles": [[549, "visibility-styles"]], "Void Type": [[549, "void-type"]], "Volatile Memory Accesses": [[549, "volatile-memory-accesses"]], "WallClockTime Records": [[618, "wallclocktime-records"]], "Ways to Contribute": [[504, "ways-to-contribute"]], "Weighted Input": [[490, "weighted-input"]], "Well-Formedness": [[549, "well-formedness"]], "What API do I use to store a value to one of the virtual registers in LLVM IR\u2019s SSA representation?": [[514, "what-api-do-i-use-to-store-a-value-to-one-of-the-virtual-registers-in-llvm-ir-s-ssa-representation"]], "What About Branches and Merges?": [[581, "what-about-branches-and-merges"]], "What About Commit Emails?": [[581, "what-about-commit-emails"]], "What PassManager does": [[615, "what-passmanager-does"]], "What This Proposal is Not About": [[581, "what-this-proposal-is-not-about"]], "What effect do address spaces have on GEPs?": [[519, "what-effect-do-address-spaces-have-on-geps"]], "What happens after you file a report?": [[590, "what-happens-after-you-file-a-report"]], "What happens if a GEP computation overflows?": [[519, "what-happens-if-a-gep-computation-overflows"]], "What happens if an array index is out of bounds?": [[519, "what-happens-if-an-array-index-is-out-of-bounds"]], "What is Garbage Collection?": [[518, "what-is-garbage-collection"]], "What is dereferenced by GEP?": [[519, "what-is-dereferenced-by-gep"]], "What is the first index of the GEP instruction?": [[519, "what-is-the-first-index-of-the-gep-instruction"]], "What is this llvm.global_ctors and _GLOBAL__I_a... stuff that happens when I #include <iostream>?": [[514, "what-is-this-llvm-global-ctors-and-global-i-a-stuff-that-happens-when-i-include-iostream"]], "What is this \u00ab\u00a0undef\u00a0\u00bb thing that shows up in my code?": [[514, "what-is-this-undef-thing-that-shows-up-in-my-code"]], "What should I know to be able to follow along with this document?": [[561, "what-should-i-know-to-be-able-to-follow-along-with-this-document"]], "What source languages are supported?": [[514, "what-source-languages-are-supported"]], "What support is there for a higher level source language constructs for building a compiler?": [[514, "what-support-is-there-for-a-higher-level-source-language-constructs-for-building-a-compiler"]], "What to do when bugpoint isn\u2019t enough": [[451, "what-to-do-when-bugpoint-isn-t-enough"]], "What we associate in cmpValues?": [[561, "what-we-associate-in-cmpvalues"]], "What\u2019s an uglygep?": [[519, "what-s-an-uglygep"]], "When to specify alignment": [[516, "when-to-specify-alignment"]], "Where did all of my code go??": [[514, "where-did-all-of-my-code-go"]], "Where to host the meetup?": [[558, "where-to-host-the-meetup"]], "Which image should I choose?": [[510, "which-image-should-i-choose"]], "Whitespace": [[459, "whitespace"]], "Why Git, and Why GitHub?": [[581, "why-git-and-why-github"]], "Why Git?": [[581, "why-git"]], "Why GitHub?": [[581, "why-github"]], "Why Move At All?": [[581, "why-move-at-all"]], "Why a new C Standard Library?": [[582, "why-a-new-c-standard-library"]], "Why do GEP x,1,0,0 and GEP x,1 alias?": [[519, "why-do-gep-x-1-0-0-and-gep-x-1-alias"]], "Why do struct member indices always use i32?": [[519, "why-do-struct-member-indices-always-use-i32"]], "Why does instcombine + simplifycfg turn a call to a function with a mismatched calling convention into \u00ab\u00a0unreachable\u00a0\u00bb? Why not make the verifier reject it?": [[514, "why-does-instcombine-simplifycfg-turn-a-call-to-a-function-with-a-mismatched-calling-convention-into-unreachable-why-not-make-the-verifier-reject-it"]], "Why don\u2019t GEP x,0,0,1 and GEP x,1 alias?": [[519, "why-don-t-gep-x-0-0-1-and-gep-x-1-alias"]], "Why is GEP designed this way?": [[519, "why-is-gep-designed-this-way"]], "Why is the extra 0 index required?": [[519, "why-is-the-extra-0-index-required"]], "Why is this a hard problem?": [[642, "why-is-this-a-hard-problem"], [644, "why-is-this-a-hard-problem"], [653, "why-is-this-a-hard-problem"]], "Why?": [[510, "why"]], "Windows": [[503, "windows"]], "Windows Runtime Exception Handling": [[511, "windows-runtime-exception-handling"]], "Windows on ARM": [[513, "windows-on-arm"]], "Windows on ARM64": [[513, "windows-on-arm64"]], "Word Alignment": [[447, "word-alignment"]], "Workflow Before/After": [[581, "workflow-before-after"]], "Workflows": [[581, "workflows"]], "Working with CodeView": [[593, "working-with-codeview"]], "Write Portable Code": [[459, "write-portable-code"]], "Write barrier: llvm.gcwrite": [[518, "write-barrier-llvm-gcwrite"]], "Write-Back and Retire Stage": [[485, "write-back-and-retire-stage"]], "Writing Custom Tests for the test-suite": [[608, "writing-custom-tests-for-the-test-suite"]], "Writing LLVM Style Makefiles": [[580, "writing-llvm-style-makefiles"]], "Writing a custom parser": [[501, "writing-a-custom-parser"]], "Writing a new AliasAnalysis Implementation": [[443, "writing-a-new-aliasanalysis-implementation"]], "Writing an LLVM Backend": [[614, null]], "Writing an LLVM Pass": [[615, null]], "Writing new regression tests": [[609, "writing-new-regression-tests"]], "X86": [[503, "x86"], [513, "x86"]], "X86 Calling Conventions supported": [[457, "x86-calling-conventions-supported"]], "X86 Target Triples supported": [[457, "x86-target-triples-supported"]], "X86 address spaces supported": [[457, "x86-address-spaces-supported"]], "X86/COFF-Dependent": [[513, "x86-coff-dependent"]], "X86EVEX2VEX": [[601, "x86evex2vex"]], "X86_mmx Type": [[549, "x86-mmx-type"]], "XCore": [[503, "xcore"]], "XRay": [[586, "xray"]], "XRay Flight Data Recorder Trace Format": [[618, null]], "XRay Instrumentation": [[616, null]], "XRay Runtime Library": [[616, "xray-runtime-library"]], "XRay in LLVM": [[616, "xray-in-llvm"]], "YAML I/O": [[619, null]], "YAML metadata": [[589, "yaml-metadata"]], "YAML remarks": [[589, "yaml-remarks"]], "YAML with a string table": [[589, "yaml-with-a-string-table"]], "Zext GEP indices to machine register width": [[516, "zext-gep-indices-to-machine-register-width"]], "Zig Programming Language": [[587, "zig-programming-language"]], "Zipping local history": [[581, "zipping-local-history"]], "a": [[439, "a"]], "a16": [[438, "a16"]], "abid": [[438, "abid"]], "abs": [[438, "abs"], [438, "amdgpu-synid-abs"], [438, "id27"]], "addr64": [[438, "addr64"]], "adst": [[308, null], [309, null], [310, null], [311, null]], "asrc": [[312, null], [313, null], [314, null], [315, null]], "attr": [[12, null], [110, null], [194, null], [342, null]], "bank_mask": [[438, "bank-mask"]], "blgp": [[438, "blgp"]], "bound_ctrl": [[438, "bound-ctrl"]], "branch_weights": [[549, "branch-weights"]], "bugpoint - automatic test case reduction tool": [[461, null]], "bytes": [[489, "bytes"]], "cbsz": [[438, "cbsz"]], "clamp": [[438, "clamp"], [438, "amdgpu-synid-clamp"], [438, "id26"], [438, "id29"]], "clang-format-fuzzer": [[517, "clang-format-fuzzer"]], "clang-fuzzer": [[517, "clang-fuzzer"]], "clang-proto-fuzzer": [[517, "clang-proto-fuzzer"]], "classes": [[604, "classes"]], "cmpConstants": [[561, "cmpconstants"]], "cmpGEP": [[561, "cmpgep"]], "cmpOperation": [[561, "cmpoperation"]], "cmpValues(const Value*, const Value*)": [[561, "cmpvalues-const-value-const-value"]], "compare(const BasicBlock*, const BasicBlock*)": [[561, "compare-const-basicblock-const-basicblock"]], "compr": [[438, "compr"]], "compute_pgm_rsrc1 for GFX6-GFX10": [[440, "amdgpu-amdhsa-compute-pgm-rsrc1-gfx6-gfx10-table"]], "compute_pgm_rsrc2 for GFX6-GFX10": [[440, "amdgpu-amdhsa-compute-pgm-rsrc2-gfx6-gfx10-table"]], "compute_pgm_rsrc3 for GFX10": [[440, "amdgpu-amdhsa-compute-pgm-rsrc3-gfx10-table"]], "d16": [[438, "d16"]], "da": [[438, "da"]], "debugify in regression tests": [[593, "debugify-in-regression-tests"]], "def": [[604, "def"]], "defm": [[604, "defm"]], "defset": [[604, "defset"]], "defvar": [[604, "defvar"]], "dfmt": [[438, "dfmt"]], "dim": [[438, "dim"]], "dlc": [[438, "dlc"], [438, "id4"], [438, "amdgpu-synid-dlc"], [438, "id15"], [438, "id19"]], "dmask": [[438, "dmask"]], "done": [[438, "done"]], "dpp16_ctrl": [[438, "dpp16-ctrl"]], "dpp8_sel": [[438, "dpp8-sel"]], "dpp_ctrl": [[438, "dpp-ctrl"]], "dst": [[53, null], [138, null], [238, null], [324, null], [383, null]], "dst_sel": [[438, "dst-sel"]], "dst_unused": [[438, "dst-unused"]], "dsymutil - manipulate archived DWARF debug symbol files": [[462, null]], "dump": [[489, "dump"]], "eBPF maps": [[457, "ebpf-maps"]], "exec": [[439, "exec"]], "execz": [[439, "execz"]], "fconst": [[439, "fconst"]], "fi": [[438, "fi"], [438, "amdgpu-synid-fi16"]], "findRegressions-nightly.py": [[588, "findregressions-nightly-py"]], "flat_scratch": [[439, "flat-scratch"]], "foreach": [[604, "foreach"]], "formatv Examples": [[579, "formatv-examples"]], "function_entry_count": [[549, "function-entry-count"]], "fx": [[42, null], [287, null], [292, null], [297, null], [318, null]], "gds": [[438, "gds"]], "glc": [[438, "glc"], [438, "id1"], [438, "amdgpu-synid-glc"], [438, "id12"], [438, "id17"]], "high": [[438, "high"]], "hwreg": [[40, null], [130, null], [225, null], [370, null]], "iconst": [[439, "iconst"]], "idxen": [[438, "amdgpu-synid-idxen"]], "if": [[604, "if"]], "if statement": [[449, "if-statement"]], "ilist_traits": [[579, "ilist-traits"]], "imask": [[226, null], [371, null]], "imm16": [[16, null], [70, null], [87, null], [113, null], [150, null], [175, null], [197, null], [253, null], [272, null], [346, null], [400, null], [419, null]], "imm3": [[52, null], [237, null], [382, null]], "imm32": [[17, null], [38, null], [39, null], [114, null], [129, null], [198, null], [223, null], [224, null], [347, null], [368, null], [369, null]], "inline constant": [[439, "inline-constant"]], "iplist": [[579, "iplist"]], "ival": [[439, "ival"]], "label": [[41, null], [131, null], [227, null], [372, null]], "lds": [[438, "lds"], [438, "amdgpu-synid-lds"], [438, "id14"]], "lds_direct": [[439, "lds-direct"]], "libFuzzer \u2013 a library for coverage-guided fuzz testing.": [[551, null]], "libLTO": [[552, "liblto"]], "lit - LLVM Integrated Tester": [[464, null]], "literal": [[439, "literal"]], "llc - LLVM static compiler": [[465, null]], "lli - directly execute programs from LLVM bitcode": [[466, null]], "llvm-addr2line - a drop-in replacement for addr2line": [[467, null]], "llvm-ar - LLVM archiver": [[468, null]], "llvm-as - LLVM assembler": [[469, null]], "llvm-as-fuzzer": [[517, "llvm-as-fuzzer"]], "llvm-bcanalyzer - LLVM bitcode analyzer": [[470, null]], "llvm-build - LLVM Project Build Utility": [[471, null]], "llvm-config - Print LLVM compilation options": [[472, null]], "llvm-cov - emit coverage information": [[473, null]], "llvm-cxxfilt - LLVM symbol name demangler": [[474, null]], "llvm-cxxmap - Mangled name remapping tool": [[475, null]], "llvm-demangle-fuzzer": [[517, "llvm-demangle-fuzzer"]], "llvm-diff - LLVM structural \u201cdiff\u201d": [[476, null]], "llvm-dis - LLVM disassembler": [[477, null]], "llvm-dwarfdump - dump and verify DWARF debug information": [[478, null]], "llvm-dwarfdump-fuzzer": [[517, "llvm-dwarfdump-fuzzer"]], "llvm-exegesis - LLVM Machine Instruction Benchmark": [[479, null]], "llvm-extract - extract a function from an LLVM module": [[480, null]], "llvm-isel-fuzzer": [[517, "llvm-isel-fuzzer"]], "llvm-lib - LLVM lib.exe compatible library tool": [[481, null]], "llvm-link - LLVM bitcode linker": [[482, null]], "llvm-lipo - LLVM tool for manipulating universal binaries": [[483, null]], "llvm-locstats - calculate statistics on DWARF debug location": [[484, null]], "llvm-mc-assemble-fuzzer": [[517, "llvm-mc-assemble-fuzzer"]], "llvm-mc-disassemble-fuzzer": [[517, "llvm-mc-disassemble-fuzzer"]], "llvm-mca - LLVM Machine Code Analyzer": [[485, null]], "llvm-nm - list LLVM bitcode and object file\u2019s symbol table": [[486, null]], "llvm-objcopy - object copying and editing tool": [[487, null]], "llvm-objdump - LLVM\u2019s object file dumper": [[488, null]], "llvm-opt-fuzzer": [[517, "llvm-opt-fuzzer"]], "llvm-pdbutil - PDB File forensics and diagnostics": [[489, null]], "llvm-profdata - Profile data tool": [[490, null]], "llvm-ranlib - generates an archive index": [[491, null]], "llvm-readelf - GNU-style LLVM Object Reader": [[492, null]], "llvm-readobj - LLVM Object Reader": [[493, null]], "llvm-size - print size information": [[494, null]], "llvm-stress - generate random .ll files": [[495, null]], "llvm-strings - print strings": [[496, null]], "llvm-strip - object stripping tool": [[497, null]], "llvm-symbolizer - convert addresses into source code locations": [[498, null]], "llvm.dbg.addr": [[593, "llvm-dbg-addr"]], "llvm.dbg.declare": [[593, "llvm-dbg-declare"]], "llvm.dbg.value": [[593, "llvm-dbg-value"]], "llvm.eh.begincatch": [[511, "llvm-eh-begincatch"]], "llvm.eh.endcatch": [[511, "llvm-eh-endcatch"]], "llvm.eh.exceptionpointer": [[511, "llvm-eh-exceptionpointer"]], "llvm.eh.sjlj.callsite": [[511, "llvm-eh-sjlj-callsite"]], "llvm.eh.sjlj.longjmp": [[511, "llvm-eh-sjlj-longjmp"]], "llvm.eh.sjlj.lsda": [[511, "llvm-eh-sjlj-lsda"]], "llvm.eh.sjlj.setjmp": [[511, "llvm-eh-sjlj-setjmp"]], "llvm.eh.typeid.for": [[511, "llvm-eh-typeid-for"]], "llvm/ADT/ArrayRef.h": [[579, "llvm-adt-arrayref-h"]], "llvm/ADT/DenseMap.h": [[579, "llvm-adt-densemap-h"]], "llvm/ADT/DenseSet.h": [[579, "llvm-adt-denseset-h"]], "llvm/ADT/FoldingSet.h": [[579, "llvm-adt-foldingset-h"]], "llvm/ADT/ImmutableMap.h": [[579, "llvm-adt-immutablemap-h"]], "llvm/ADT/ImmutableSet.h": [[579, "llvm-adt-immutableset-h"]], "llvm/ADT/IndexedMap.h": [[579, "llvm-adt-indexedmap-h"]], "llvm/ADT/IntEqClasses.h": [[579, "llvm-adt-inteqclasses-h"]], "llvm/ADT/IntervalMap.h": [[579, "llvm-adt-intervalmap-h"]], "llvm/ADT/MapVector.h": [[579, "llvm-adt-mapvector-h"]], "llvm/ADT/PackedVector.h": [[579, "llvm-adt-packedvector-h"]], "llvm/ADT/SetVector.h": [[579, "llvm-adt-setvector-h"]], "llvm/ADT/SmallPtrSet.h": [[579, "llvm-adt-smallptrset-h"]], "llvm/ADT/SmallSet.h": [[579, "llvm-adt-smallset-h"]], "llvm/ADT/SmallString.h": [[579, "llvm-adt-smallstring-h"]], "llvm/ADT/SmallVector.h": [[579, "llvm-adt-smallvector-h"]], "llvm/ADT/SparseMultiSet.h": [[579, "llvm-adt-sparsemultiset-h"]], "llvm/ADT/SparseSet.h": [[579, "llvm-adt-sparseset-h"]], "llvm/ADT/StringMap.h": [[579, "llvm-adt-stringmap-h"]], "llvm/ADT/StringRef.h": [[579, "llvm-adt-stringref-h"]], "llvm/ADT/StringSet.h": [[579, "llvm-adt-stringset-h"]], "llvm/ADT/TinyPtrVector.h": [[579, "llvm-adt-tinyptrvector-h"]], "llvm/ADT/Twine.h": [[579, "llvm-adt-twine-h"]], "llvm/ADT/UniqueVector.h": [[579, "llvm-adt-uniquevector-h"]], "llvm/ADT/ilist.h": [[579, "llvm-adt-ilist-h"]], "llvm/ADT/ilist_node.h": [[579, "llvm-adt-ilist-node-h"]], "llvm/IR/ValueMap.h": [[579, "llvm-ir-valuemap-h"]], "llvm/examples": [[521, "llvm-examples"]], "llvm/include": [[521, "llvm-include"]], "llvm/lib": [[521, "llvm-lib"]], "llvm/projects": [[521, "llvm-projects"]], "llvm/test": [[521, "llvm-test"]], "llvm/tools": [[521, "llvm-tools"]], "llvm/utils": [[521, "llvm-utils"]], "lto_code_gen_t": [[552, "lto-code-gen-t"]], "lto_module_t": [[552, "lto-module-t"]], "lwe": [[438, "lwe"]], "m": [[43, null], [44, null], [45, null], [132, null], [228, null], [229, null], [230, null], [288, null], [293, null], [298, null], [299, null], [300, null], [319, null], [320, null], [321, null], [373, null], [374, null], [375, null]], "m0": [[439, "m0"]], "m_op_sel": [[438, "m-op-sel"]], "m_op_sel_hi": [[438, "m-op-sel-hi"]], "macOS": [[503, "macos"]], "make.implicit metadata": [[515, "make-implicit-metadata"]], "merge": [[489, "merge"]], "msg": [[46, null], [133, null], [231, null], [376, null]], "multiclass": [[604, "multiclass"]], "neg": [[438, "neg"], [438, "amdgpu-synid-neg"], [438, "id28"]], "neg_hi": [[438, "neg-hi"]], "neg_lo": [[438, "neg-lo"]], "nfmt": [[438, "nfmt"]], "null": [[439, "null"]], "nv": [[438, "nv"], [438, "amdgpu-synid-nv"], [438, "id18"]], "off": [[439, "off"]], "offen": [[438, "offen"]], "offset11": [[438, "offset11"]], "offset12": [[438, "offset12"], [438, "amdgpu-synid-buf-offset12"]], "offset12s": [[438, "offset12s"]], "offset13s": [[438, "offset13s"]], "offset16": [[438, "offset16"]], "offset8": [[438, "offset8"]], "omod": [[438, "omod"], [438, "amdgpu-synid-omod"]], "op_sel": [[438, "op-sel"], [438, "amdgpu-synid-op-sel"]], "op_sel_hi": [[438, "op-sel-hi"]], "opt": [[50, null], [136, null], [235, null], [323, null], [380, null]], "opt - LLVM optimizer": [[499, null]], "opt-diff.py": [[589, "opt-diff-py"]], "opt-stats.py": [[589, "opt-stats-py"]], "opt-viewer": [[589, "opt-viewer"]], "opt-viewer.py": [[589, "opt-viewer-py"]], "param": [[51, null], [137, null], [236, null], [381, null]], "pdb2yaml": [[489, "pdb2yaml"]], "pretty": [[489, "pretty"]], "ptxas complains of undefined function: __nvvm_reflect": [[562, "ptxas-complains-of-undefined-function-nvvm-reflect"]], "r128": [[438, "r128"]], "rawspeed": [[583, "rawspeed"]], "row_mask": [[438, "row-mask"]], "runOnModule": [[561, "runonmodule"]], "s": [[439, "s"]], "saddr": [[56, null], [57, null], [326, null], [386, null], [387, null]], "sbase": [[13, null], [14, null], [15, null], [111, null], [112, null], [195, null], [196, null], [343, null], [344, null], [345, null]], "scc": [[439, "scc"]], "sdata": [[25, null], [26, null], [27, null], [59, null], [60, null], [61, null], [242, null], [243, null], [244, null], [355, null], [356, null], [357, null], [389, null], [390, null], [391, null]], "sdst": [[62, null], [63, null], [64, null], [65, null], [66, null], [67, null], [68, null], [69, null], [104, null], [142, null], [143, null], [144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [245, null], [246, null], [247, null], [248, null], [249, null], [250, null], [251, null], [252, null], [392, null], [393, null], [394, null], [395, null], [396, null], [397, null], [398, null], [399, null]], "sext": [[438, "sext"]], "simm21": [[439, "simm21"]], "slc": [[438, "slc"], [438, "id2"], [438, "amdgpu-synid-slc"], [438, "id13"]], "soffset": [[47, null], [48, null], [49, null], [134, null], [135, null], [232, null], [233, null], [234, null], [322, null], [377, null], [378, null], [379, null]], "src": [[71, null], [72, null], [73, null], [74, null], [75, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [254, null], [255, null], [256, null], [257, null], [258, null], [259, null], [289, null], [290, null], [294, null], [295, null], [301, null], [302, null], [303, null], [327, null], [328, null], [329, null], [330, null], [401, null], [402, null], [403, null], [404, null], [405, null], [406, null]], "src0_sel": [[438, "src0-sel"]], "src1_sel": [[438, "src1-sel"]], "srsrc": [[54, null], [55, null], [139, null], [140, null], [239, null], [240, null], [325, null], [384, null], [385, null]], "ssamp": [[58, null], [141, null], [241, null], [388, null]], "ssrc": [[77, null], [78, null], [79, null], [80, null], [81, null], [82, null], [83, null], [84, null], [105, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [169, null], [170, null], [171, null], [172, null], [261, null], [262, null], [263, null], [264, null], [265, null], [266, null], [267, null], [268, null], [269, null], [408, null], [409, null], [410, null], [411, null], [412, null], [413, null], [414, null], [415, null], [416, null]], "std::string": [[579, "std-string"]], "switch statement": [[449, "switch-statement"]], "swizzle pattern": [[438, "swizzle-pattern"]], "tba": [[439, "tba"]], "tblgen - Target Description To C++ Code Generator": [[500, null]], "test-release.sh": [[588, "test-release-sh"]], "test-suite": [[521, "test-suite"], [609, "test-suite"]], "test-suite Guide": [[607, null]], "test-suite Makefile Guide (deprecated)": [[608, null]], "tfe": [[438, "tfe"], [438, "id3"], [438, "amdgpu-synid-tfe"], [438, "id16"]], "tgt": [[85, null], [173, null], [270, null], [417, null]], "tma": [[439, "tma"]], "trap": [[439, "trap"]], "ttmp": [[439, "ttmp"]], "uimm20": [[439, "uimm20"]], "uimm21": [[439, "uimm21"]], "uimm32": [[439, "uimm32"]], "uimm8": [[439, "uimm8"]], "unorm": [[438, "unorm"]], "v": [[439, "v"]], "vaddr": [[8, null], [9, null], [10, null], [11, null], [88, null], [89, null], [106, null], [107, null], [108, null], [109, null], [190, null], [191, null], [192, null], [193, null], [307, null], [332, null], [338, null], [339, null], [340, null], [341, null], [420, null], [421, null]], "vasrc": [[333, null], [334, null]], "vcc": [[90, null], [176, null], [273, null], [422, null], [439, "vcc"]], "vccz": [[439, "vccz"]], "vdata": [[18, null], [19, null], [20, null], [21, null], [22, null], [23, null], [24, null], [91, null], [92, null], [93, null], [94, null], [115, null], [116, null], [117, null], [118, null], [119, null], [120, null], [177, null], [178, null], [179, null], [180, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [274, null], [275, null], [276, null], [277, null], [316, null], [335, null], [348, null], [349, null], [350, null], [351, null], [352, null], [353, null], [354, null], [423, null], [424, null], [425, null], [426, null]], "vdst": [[28, null], [29, null], [30, null], [31, null], [32, null], [33, null], [34, null], [35, null], [36, null], [37, null], [95, null], [96, null], [97, null], [98, null], [121, null], [122, null], [123, null], [124, null], [125, null], [126, null], [127, null], [128, null], [181, null], [182, null], [183, null], [184, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null], [222, null], [278, null], [279, null], [280, null], [281, null], [291, null], [296, null], [305, null], [317, null], [336, null], [358, null], [359, null], [360, null], [361, null], [362, null], [363, null], [364, null], [365, null], [366, null], [367, null], [427, null], [428, null], [429, null], [430, null]], "vecmathlib tests harness": [[583, "vecmathlib-tests-harness"]], "vm": [[438, "vm"]], "vsrc": [[76, null], [99, null], [100, null], [101, null], [102, null], [161, null], [185, null], [186, null], [187, null], [188, null], [260, null], [282, null], [283, null], [284, null], [285, null], [306, null], [337, null], [407, null], [431, null], [432, null], [433, null], [434, null]], "waitcnt": [[103, null], [189, null], [286, null], [435, null]], "xnack": [[439, "xnack"]], "yaml2obj": [[656, null]], "yaml2pdb": [[489, "yaml2pdb"]], "}": [[556, null], [556, "id6"], [556, "id9"], [594, null], [594, "id14"], [594, "id21"], [594, "id28"], [594, "id33"], [594, "id42"]], "\u00ab\u00a0More Canonical\u00a0\u00bb Loops": [[553, "more-canonical-loops"]], "\u00ab\u00a0llvm-libc\u00a0\u00bb C Standard Library": [[582, null]], "\u00c0 faire": [[440, "id11"], [440, "id12"], [440, "id14"], [440, "id15"], [440, "id16"], [440, "id20"], [440, "id31"], [440, "id33"], [440, "id37"], [440, "id38"], [440, "id39"], [440, "id40"], [440, "id41"], [440, "id43"], [440, "id44"], [440, "id45"], [440, "id46"], [440, "id62"], [455, "id3"], [501, "id8"], [501, "id9"], [543, "id1"], [638, "id1"]], "\u00c0 propos": [[620, null]], "\u201cabsolute_symbol\u201d Metadata": [[549, "absolute-symbol-metadata"]], "\u201caddrspacecast .. to\u201d Instruction": [[549, "addrspacecast-to-instruction"]], "\u201cadd\u201d Instruction": [[549, "add-instruction"]], "\u201calloca\u201d Instruction": [[549, "alloca-instruction"]], "\u201cand\u201d Instruction": [[549, "and-instruction"]], "\u201cashr\u201d Instruction": [[549, "ashr-instruction"]], "\u201cassociated\u201d Metadata": [[549, "associated-metadata"]], "\u201catomicrmw\u201d Instruction": [[549, "atomicrmw-instruction"]], "\u201cbitcast .. to\u201d Instruction": [[549, "bitcast-to-instruction"]], "\u201cbr\u201d Instruction": [[549, "br-instruction"]], "\u201ccallback\u201d Metadata": [[549, "callback-metadata"]], "\u201ccallbr\u201d Instruction": [[549, "callbr-instruction"]], "\u201ccallees\u201d Metadata": [[549, "callees-metadata"]], "\u201ccall\u201d Instruction": [[549, "call-instruction"]], "\u201ccatchpad\u201d Instruction": [[549, "catchpad-instruction"]], "\u201ccatchret\u201d Instruction": [[549, "catchret-instruction"]], "\u201ccatchswitch\u201d Instruction": [[549, "catchswitch-instruction"]], "\u201ccleanuppad\u201d Instruction": [[549, "cleanuppad-instruction"]], "\u201ccleanupret\u201d Instruction": [[549, "cleanupret-instruction"]], "\u201ccmpxchg\u201d Instruction": [[549, "cmpxchg-instruction"]], "\u201cdereferenceable_or_null\u201d Metadata": [[549, "dereferenceable-or-null-metadata"]], "\u201cdereferenceable\u201d Metadata": [[549, "dereferenceable-metadata"]], "\u201cextractelement\u201d Instruction": [[549, "extractelement-instruction"]], "\u201cextractvalue\u201d Instruction": [[549, "extractvalue-instruction"]], "\u201cfadd\u201d Instruction": [[549, "fadd-instruction"]], "\u201cfcmp\u201d Instruction": [[549, "fcmp-instruction"]], "\u201cfdiv\u201d Instruction": [[549, "fdiv-instruction"]], "\u201cfence\u201d Instruction": [[549, "fence-instruction"]], "\u201cfmul\u201d Instruction": [[549, "fmul-instruction"]], "\u201cfneg\u201d Instruction": [[549, "fneg-instruction"]], "\u201cfor\u201d Loop Expression": [[640, "for-loop-expression"], [651, "for-loop-expression"]], "\u201cfpext .. to\u201d Instruction": [[549, "fpext-to-instruction"]], "\u201cfpmath\u201d Metadata": [[549, "fpmath-metadata"]], "\u201cfptosi .. to\u201d Instruction": [[549, "fptosi-to-instruction"]], "\u201cfptoui .. to\u201d Instruction": [[549, "fptoui-to-instruction"]], "\u201cfptrunc .. to\u201d Instruction": [[549, "fptrunc-to-instruction"]], "\u201cfreeze\u201d Instruction": [[549, "freeze-instruction"]], "\u201cfrem\u201d Instruction": [[549, "frem-instruction"]], "\u201cfsub\u201d Instruction": [[549, "fsub-instruction"]], "\u201cgetelementptr\u201d Instruction": [[549, "getelementptr-instruction"]], "\u201cicmp\u201d Instruction": [[549, "icmp-instruction"]], "\u201cindirectbr\u201d Instruction": [[549, "indirectbr-instruction"]], "\u201cinsertelement\u201d Instruction": [[549, "insertelement-instruction"]], "\u201cinsertvalue\u201d Instruction": [[549, "insertvalue-instruction"]], "\u201cinttoptr .. to\u201d Instruction": [[549, "inttoptr-to-instruction"]], "\u201cinvariant.group\u201d Metadata": [[549, "invariant-group-metadata"]], "\u201cinvoke\u201d Instruction": [[549, "invoke-instruction"]], "\u201cirr_loop\u201d Metadata": [[549, "irr-loop-metadata"]], "\u201clandingpad\u201d Instruction": [[549, "landingpad-instruction"]], "\u201clet\u201d expressions": [[603, "let-expressions-within-a-record"], [603, "id3"]], "\u201cllvm.access.group\u201d Metadata": [[549, "llvm-access-group-metadata"]], "\u201cllvm.addressofreturnaddress\u201d Intrinsic": [[549, "llvm-addressofreturnaddress-intrinsic"]], "\u201cllvm.adjust.trampoline\u201d Intrinsic": [[549, "llvm-adjust-trampoline-intrinsic"]], "\u201cllvm.annotation.*\u201d Intrinsic": [[549, "llvm-annotation-intrinsic"]], "\u201cllvm.assume\u201d Intrinsic": [[549, "llvm-assume-intrinsic"]], "\u201cllvm.bitreverse.*\u201d Intrinsics": [[549, "llvm-bitreverse-intrinsics"]], "\u201cllvm.bswap.*\u201d Intrinsics": [[549, "llvm-bswap-intrinsics"]], "\u201cllvm.canonicalize.*\u201d Intrinsic": [[549, "llvm-canonicalize-intrinsic"]], "\u201cllvm.ceil.*\u201d Intrinsic": [[549, "llvm-ceil-intrinsic"]], "\u201cllvm.clear_cache\u201d Intrinsic": [[549, "llvm-clear-cache-intrinsic"]], "\u201cllvm.codeview.annotation\u201d Intrinsic": [[549, "llvm-codeview-annotation-intrinsic"]], "\u201cllvm.convert.from.fp16\u201d Intrinsic": [[549, "llvm-convert-from-fp16-intrinsic"]], "\u201cllvm.convert.to.fp16\u201d Intrinsic": [[549, "llvm-convert-to-fp16-intrinsic"]], "\u201cllvm.copysign.*\u201d Intrinsic": [[549, "llvm-copysign-intrinsic"]], "\u201cllvm.coro.alloc\u201d Intrinsic": [[505, "llvm-coro-alloc-intrinsic"]], "\u201cllvm.coro.begin\u201d Intrinsic": [[505, "llvm-coro-begin-intrinsic"]], "\u201cllvm.coro.destroy\u201d Intrinsic": [[505, "llvm-coro-destroy-intrinsic"]], "\u201cllvm.coro.done\u201d Intrinsic": [[505, "llvm-coro-done-intrinsic"]], "\u201cllvm.coro.end\u201d Intrinsic": [[505, "llvm-coro-end-intrinsic"]], "\u201cllvm.coro.frame\u201d Intrinsic": [[505, "llvm-coro-frame-intrinsic"]], "\u201cllvm.coro.free\u201d Intrinsic": [[505, "llvm-coro-free-intrinsic"]], "\u201cllvm.coro.id.retcon.once\u201d Intrinsic": [[505, "llvm-coro-id-retcon-once-intrinsic"]], "\u201cllvm.coro.id.retcon\u201d Intrinsic": [[505, "llvm-coro-id-retcon-intrinsic"]], "\u201cllvm.coro.id\u201d Intrinsic": [[505, "llvm-coro-id-intrinsic"]], "\u201cllvm.coro.noop\u201d Intrinsic": [[505, "llvm-coro-noop-intrinsic"]], "\u201cllvm.coro.param\u201d Intrinsic": [[505, "llvm-coro-param-intrinsic"]], "\u201cllvm.coro.promise\u201d Intrinsic": [[505, "llvm-coro-promise-intrinsic"]], "\u201cllvm.coro.resume\u201d Intrinsic": [[505, "llvm-coro-resume-intrinsic"]], "\u201cllvm.coro.save\u201d Intrinsic": [[505, "llvm-coro-save-intrinsic"]], "\u201cllvm.coro.size\u201d Intrinsic": [[505, "llvm-coro-size-intrinsic"]], "\u201cllvm.coro.suspend.retcon\u201d Intrinsic": [[505, "llvm-coro-suspend-retcon-intrinsic"]], "\u201cllvm.coro.suspend\u201d Intrinsic": [[505, "llvm-coro-suspend-intrinsic"]], "\u201cllvm.cos.*\u201d Intrinsic": [[549, "llvm-cos-intrinsic"]], "\u201cllvm.ctlz.*\u201d Intrinsic": [[549, "llvm-ctlz-intrinsic"]], "\u201cllvm.ctpop.*\u201d Intrinsic": [[549, "llvm-ctpop-intrinsic"]], "\u201cllvm.cttz.*\u201d Intrinsic": [[549, "llvm-cttz-intrinsic"]], "\u201cllvm.debugtrap\u201d Intrinsic": [[549, "llvm-debugtrap-intrinsic"]], "\u201cllvm.donothing\u201d Intrinsic": [[549, "llvm-donothing-intrinsic"]], "\u201cllvm.exp.*\u201d Intrinsic": [[549, "llvm-exp-intrinsic"]], "\u201cllvm.exp2.*\u201d Intrinsic": [[549, "llvm-exp2-intrinsic"]], "\u201cllvm.expect\u201d Intrinsic": [[549, "llvm-expect-intrinsic"]], "\u201cllvm.experimental.constrained.ceil\u201d Intrinsic": [[549, "llvm-experimental-constrained-ceil-intrinsic"]], "\u201cllvm.experimental.constrained.cos\u201d Intrinsic": [[549, "llvm-experimental-constrained-cos-intrinsic"]], "\u201cllvm.experimental.constrained.exp2\u201d Intrinsic": [[549, "llvm-experimental-constrained-exp2-intrinsic"]], "\u201cllvm.experimental.constrained.exp\u201d Intrinsic": [[549, "llvm-experimental-constrained-exp-intrinsic"]], "\u201cllvm.experimental.constrained.fadd\u201d Intrinsic": [[549, "llvm-experimental-constrained-fadd-intrinsic"]], "\u201cllvm.experimental.constrained.fcmp\u201d and \u201cllvm.experimental.constrained.fcmps\u201d Intrinsics": [[549, "llvm-experimental-constrained-fcmp-and-llvm-experimental-constrained-fcmps-intrinsics"]], "\u201cllvm.experimental.constrained.fdiv\u201d Intrinsic": [[549, "llvm-experimental-constrained-fdiv-intrinsic"]], "\u201cllvm.experimental.constrained.floor\u201d Intrinsic": [[549, "llvm-experimental-constrained-floor-intrinsic"]], "\u201cllvm.experimental.constrained.fma\u201d Intrinsic": [[549, "llvm-experimental-constrained-fma-intrinsic"]], "\u201cllvm.experimental.constrained.fmul\u201d Intrinsic": [[549, "llvm-experimental-constrained-fmul-intrinsic"]], "\u201cllvm.experimental.constrained.fpext\u201d Intrinsic": [[549, "llvm-experimental-constrained-fpext-intrinsic"]], "\u201cllvm.experimental.constrained.fptosi\u201d Intrinsic": [[549, "llvm-experimental-constrained-fptosi-intrinsic"]], "\u201cllvm.experimental.constrained.fptoui\u201d Intrinsic": [[549, "llvm-experimental-constrained-fptoui-intrinsic"]], "\u201cllvm.experimental.constrained.fptrunc\u201d Intrinsic": [[549, "llvm-experimental-constrained-fptrunc-intrinsic"]], "\u201cllvm.experimental.constrained.frem\u201d Intrinsic": [[549, "llvm-experimental-constrained-frem-intrinsic"]], "\u201cllvm.experimental.constrained.fsub\u201d Intrinsic": [[549, "llvm-experimental-constrained-fsub-intrinsic"]], "\u201cllvm.experimental.constrained.llrint\u201d Intrinsic": [[549, "llvm-experimental-constrained-llrint-intrinsic"]], "\u201cllvm.experimental.constrained.llround\u201d Intrinsic": [[549, "llvm-experimental-constrained-llround-intrinsic"]], "\u201cllvm.experimental.constrained.log10\u201d Intrinsic": [[549, "llvm-experimental-constrained-log10-intrinsic"]], "\u201cllvm.experimental.constrained.log2\u201d Intrinsic": [[549, "llvm-experimental-constrained-log2-intrinsic"]], "\u201cllvm.experimental.constrained.log\u201d Intrinsic": [[549, "llvm-experimental-constrained-log-intrinsic"]], "\u201cllvm.experimental.constrained.lrint\u201d Intrinsic": [[549, "llvm-experimental-constrained-lrint-intrinsic"]], "\u201cllvm.experimental.constrained.lround\u201d Intrinsic": [[549, "llvm-experimental-constrained-lround-intrinsic"]], "\u201cllvm.experimental.constrained.maximum\u201d Intrinsic": [[549, "llvm-experimental-constrained-maximum-intrinsic"]], "\u201cllvm.experimental.constrained.maxnum\u201d Intrinsic": [[549, "llvm-experimental-constrained-maxnum-intrinsic"]], "\u201cllvm.experimental.constrained.minimum\u201d Intrinsic": [[549, "llvm-experimental-constrained-minimum-intrinsic"]], "\u201cllvm.experimental.constrained.minnum\u201d Intrinsic": [[549, "llvm-experimental-constrained-minnum-intrinsic"]], "\u201cllvm.experimental.constrained.nearbyint\u201d Intrinsic": [[549, "llvm-experimental-constrained-nearbyint-intrinsic"]], "\u201cllvm.experimental.constrained.powi\u201d Intrinsic": [[549, "llvm-experimental-constrained-powi-intrinsic"]], "\u201cllvm.experimental.constrained.pow\u201d Intrinsic": [[549, "llvm-experimental-constrained-pow-intrinsic"]], "\u201cllvm.experimental.constrained.rint\u201d Intrinsic": [[549, "llvm-experimental-constrained-rint-intrinsic"]], "\u201cllvm.experimental.constrained.round\u201d Intrinsic": [[549, "llvm-experimental-constrained-round-intrinsic"]], "\u201cllvm.experimental.constrained.sin\u201d Intrinsic": [[549, "llvm-experimental-constrained-sin-intrinsic"]], "\u201cllvm.experimental.constrained.sitofp\u201d Intrinsic": [[549, "llvm-experimental-constrained-sitofp-intrinsic"]], "\u201cllvm.experimental.constrained.sqrt\u201d Intrinsic": [[549, "llvm-experimental-constrained-sqrt-intrinsic"]], "\u201cllvm.experimental.constrained.trunc\u201d Intrinsic": [[549, "llvm-experimental-constrained-trunc-intrinsic"]], "\u201cllvm.experimental.constrained.uitofp\u201d Intrinsic": [[549, "llvm-experimental-constrained-uitofp-intrinsic"]], "\u201cllvm.experimental.deoptimize\u201d Intrinsic": [[549, "llvm-experimental-deoptimize-intrinsic"]], "\u201cllvm.experimental.gc.relocate\u201d Intrinsic": [[598, "llvm-experimental-gc-relocate-intrinsic"]], "\u201cllvm.experimental.gc.result\u201d Intrinsic": [[598, "llvm-experimental-gc-result-intrinsic"]], "\u201cllvm.experimental.gc.statepoint\u201d Intrinsic": [[598, "llvm-experimental-gc-statepoint-intrinsic"]], "\u201cllvm.experimental.guard\u201d Intrinsic": [[549, "llvm-experimental-guard-intrinsic"]], "\u201cllvm.experimental.patchpoint.*\u201d Intrinsic": [[596, "llvm-experimental-patchpoint-intrinsic"]], "\u201cllvm.experimental.stackmap\u201d Intrinsic": [[596, "llvm-experimental-stackmap-intrinsic"]], "\u201cllvm.experimental.vector.reduce.add.*\u201d Intrinsic": [[549, "llvm-experimental-vector-reduce-add-intrinsic"]], "\u201cllvm.experimental.vector.reduce.and.*\u201d Intrinsic": [[549, "llvm-experimental-vector-reduce-and-intrinsic"]], "\u201cllvm.experimental.vector.reduce.fmax.*\u201d Intrinsic": [[549, "llvm-experimental-vector-reduce-fmax-intrinsic"]], "\u201cllvm.experimental.vector.reduce.fmin.*\u201d Intrinsic": [[549, "llvm-experimental-vector-reduce-fmin-intrinsic"]], "\u201cllvm.experimental.vector.reduce.mul.*\u201d Intrinsic": [[549, "llvm-experimental-vector-reduce-mul-intrinsic"]], "\u201cllvm.experimental.vector.reduce.or.*\u201d Intrinsic": [[549, "llvm-experimental-vector-reduce-or-intrinsic"]], "\u201cllvm.experimental.vector.reduce.smax.*\u201d Intrinsic": [[549, "llvm-experimental-vector-reduce-smax-intrinsic"]], "\u201cllvm.experimental.vector.reduce.smin.*\u201d Intrinsic": [[549, "llvm-experimental-vector-reduce-smin-intrinsic"]], "\u201cllvm.experimental.vector.reduce.umax.*\u201d Intrinsic": [[549, "llvm-experimental-vector-reduce-umax-intrinsic"]], "\u201cllvm.experimental.vector.reduce.umin.*\u201d Intrinsic": [[549, "llvm-experimental-vector-reduce-umin-intrinsic"]], "\u201cllvm.experimental.vector.reduce.v2.fadd.*\u201d Intrinsic": [[549, "llvm-experimental-vector-reduce-v2-fadd-intrinsic"]], "\u201cllvm.experimental.vector.reduce.v2.fmul.*\u201d Intrinsic": [[549, "llvm-experimental-vector-reduce-v2-fmul-intrinsic"]], "\u201cllvm.experimental.vector.reduce.xor.*\u201d Intrinsic": [[549, "llvm-experimental-vector-reduce-xor-intrinsic"]], "\u201cllvm.experimental.widenable.condition\u201d Intrinsic": [[549, "llvm-experimental-widenable-condition-intrinsic"]], "\u201cllvm.fabs.*\u201d Intrinsic": [[549, "llvm-fabs-intrinsic"]], "\u201cllvm.floor.*\u201d Intrinsic": [[549, "llvm-floor-intrinsic"]], "\u201cllvm.fma.*\u201d Intrinsic": [[549, "llvm-fma-intrinsic"]], "\u201cllvm.fmuladd.*\u201d Intrinsic": [[549, "llvm-fmuladd-intrinsic"]], "\u201cllvm.frameaddress\u201d Intrinsic": [[549, "llvm-frameaddress-intrinsic"]], "\u201cllvm.fshl.*\u201d Intrinsic": [[549, "llvm-fshl-intrinsic"]], "\u201cllvm.fshr.*\u201d Intrinsic": [[549, "llvm-fshr-intrinsic"]], "\u201cllvm.gcread\u201d Intrinsic": [[549, "llvm-gcread-intrinsic"]], "\u201cllvm.gcroot\u201d Intrinsic": [[549, "llvm-gcroot-intrinsic"]], "\u201cllvm.gcwrite\u201d Intrinsic": [[549, "llvm-gcwrite-intrinsic"]], "\u201cllvm.get.dynamic.area.offset\u201d Intrinsic": [[549, "llvm-get-dynamic-area-offset-intrinsic"]], "\u201cllvm.init.trampoline\u201d Intrinsic": [[549, "llvm-init-trampoline-intrinsic"]], "\u201cllvm.instrprof.increment.step\u201d Intrinsic": [[549, "llvm-instrprof-increment-step-intrinsic"]], "\u201cllvm.instrprof.increment\u201d Intrinsic": [[549, "llvm-instrprof-increment-intrinsic"]], "\u201cllvm.instrprof.value.profile\u201d Intrinsic": [[549, "llvm-instrprof-value-profile-intrinsic"]], "\u201cllvm.invariant.end\u201d Intrinsic": [[549, "llvm-invariant-end-intrinsic"]], "\u201cllvm.invariant.start\u201d Intrinsic": [[549, "llvm-invariant-start-intrinsic"]], "\u201cllvm.is.constant.*\u201d Intrinsic": [[549, "llvm-is-constant-intrinsic"]], "\u201cllvm.launder.invariant.group\u201d Intrinsic": [[549, "llvm-launder-invariant-group-intrinsic"]], "\u201cllvm.licm.disable\u201d Metadata": [[549, "llvm-licm-disable-metadata"]], "\u201cllvm.lifetime.end\u201d Intrinsic": [[549, "llvm-lifetime-end-intrinsic"]], "\u201cllvm.lifetime.start\u201d Intrinsic": [[549, "llvm-lifetime-start-intrinsic"]], "\u201cllvm.llrint.*\u201d Intrinsic": [[549, "llvm-llrint-intrinsic"]], "\u201cllvm.llround.*\u201d Intrinsic": [[549, "llvm-llround-intrinsic"]], "\u201cllvm.load.relative\u201d Intrinsic": [[549, "llvm-load-relative-intrinsic"]], "\u201cllvm.localescape\u201d and \u201cllvm.localrecover\u201d Intrinsics": [[549, "llvm-localescape-and-llvm-localrecover-intrinsics"]], "\u201cllvm.log.*\u201d Intrinsic": [[549, "llvm-log-intrinsic"]], "\u201cllvm.log10.*\u201d Intrinsic": [[549, "llvm-log10-intrinsic"]], "\u201cllvm.log2.*\u201d Intrinsic": [[549, "llvm-log2-intrinsic"]], "\u201cllvm.loop.disable_nonforced\u201d": [[549, "llvm-loop-disable-nonforced"]], "\u201cllvm.loop.distribute.enable\u201d Metadata": [[549, "llvm-loop-distribute-enable-metadata"]], "\u201cllvm.loop.distribute.followup_all\u201d Metadata": [[549, "llvm-loop-distribute-followup-all-metadata"]], "\u201cllvm.loop.distribute.followup_coincident\u201d Metadata": [[549, "llvm-loop-distribute-followup-coincident-metadata"]], "\u201cllvm.loop.distribute.followup_fallback\u201d Metadata": [[549, "llvm-loop-distribute-followup-fallback-metadata"]], "\u201cllvm.loop.distribute.followup_sequential\u201d Metadata": [[549, "llvm-loop-distribute-followup-sequential-metadata"]], "\u201cllvm.loop.interleave.count\u201d Metadata": [[549, "llvm-loop-interleave-count-metadata"]], "\u201cllvm.loop.licm_versioning.disable\u201d Metadata": [[549, "llvm-loop-licm-versioning-disable-metadata"]], "\u201cllvm.loop.parallel_accesses\u201d Metadata": [[549, "llvm-loop-parallel-accesses-metadata"]], "\u201cllvm.loop.unroll.count\u201d Metadata": [[549, "llvm-loop-unroll-count-metadata"]], "\u201cllvm.loop.unroll.disable\u201d Metadata": [[549, "llvm-loop-unroll-disable-metadata"]], "\u201cllvm.loop.unroll.enable\u201d Metadata": [[549, "llvm-loop-unroll-enable-metadata"]], "\u201cllvm.loop.unroll.followup_remainder\u201d Metadata": [[549, "llvm-loop-unroll-followup-remainder-metadata"]], "\u201cllvm.loop.unroll.followup\u201d Metadata": [[549, "llvm-loop-unroll-followup-metadata"]], "\u201cllvm.loop.unroll.full\u201d Metadata": [[549, "llvm-loop-unroll-full-metadata"]], "\u201cllvm.loop.unroll.runtime.disable\u201d Metadata": [[549, "llvm-loop-unroll-runtime-disable-metadata"]], "\u201cllvm.loop.unroll_and_jam.count\u201d Metadata": [[549, "llvm-loop-unroll-and-jam-count-metadata"]], "\u201cllvm.loop.unroll_and_jam.disable\u201d Metadata": [[549, "llvm-loop-unroll-and-jam-disable-metadata"]], "\u201cllvm.loop.unroll_and_jam.enable\u201d Metadata": [[549, "llvm-loop-unroll-and-jam-enable-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_all\u201d Metadata": [[549, "llvm-loop-unroll-and-jam-followup-all-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_inner\u201d Metadata": [[549, "llvm-loop-unroll-and-jam-followup-inner-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_outer\u201d Metadata": [[549, "llvm-loop-unroll-and-jam-followup-outer-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_remainder_inner\u201d Metadata": [[549, "llvm-loop-unroll-and-jam-followup-remainder-inner-metadata"]], "\u201cllvm.loop.unroll_and_jam.followup_remainder_outer\u201d Metadata": [[549, "llvm-loop-unroll-and-jam-followup-remainder-outer-metadata"]], "\u201cllvm.loop.unroll_and_jam\u201d": [[549, "llvm-loop-unroll-and-jam"]], "\u201cllvm.loop.unroll\u201d": [[549, "llvm-loop-unroll"]], "\u201cllvm.loop.vectorize.enable\u201d Metadata": [[549, "llvm-loop-vectorize-enable-metadata"]], "\u201cllvm.loop.vectorize.followup_all\u201d Metadata": [[549, "llvm-loop-vectorize-followup-all-metadata"]], "\u201cllvm.loop.vectorize.followup_epilogue\u201d Metadata": [[549, "llvm-loop-vectorize-followup-epilogue-metadata"]], "\u201cllvm.loop.vectorize.followup_vectorized\u201d Metadata": [[549, "llvm-loop-vectorize-followup-vectorized-metadata"]], "\u201cllvm.loop.vectorize.predicate.enable\u201d Metadata": [[549, "llvm-loop-vectorize-predicate-enable-metadata"]], "\u201cllvm.loop.vectorize.width\u201d Metadata": [[549, "llvm-loop-vectorize-width-metadata"]], "\u201cllvm.loop.vectorize\u201d and \u201cllvm.loop.interleave\u201d": [[549, "llvm-loop-vectorize-and-llvm-loop-interleave"]], "\u201cllvm.loop\u201d": [[549, "llvm-loop"]], "\u201cllvm.lrint.*\u201d Intrinsic": [[549, "llvm-lrint-intrinsic"]], "\u201cllvm.lround.*\u201d Intrinsic": [[549, "llvm-lround-intrinsic"]], "\u201cllvm.masked.compressstore.*\u201d Intrinsics": [[549, "llvm-masked-compressstore-intrinsics"]], "\u201cllvm.masked.expandload.*\u201d Intrinsics": [[549, "llvm-masked-expandload-intrinsics"]], "\u201cllvm.masked.gather.*\u201d Intrinsics": [[549, "llvm-masked-gather-intrinsics"]], "\u201cllvm.masked.load.*\u201d Intrinsics": [[549, "llvm-masked-load-intrinsics"]], "\u201cllvm.masked.scatter.*\u201d Intrinsics": [[549, "llvm-masked-scatter-intrinsics"]], "\u201cllvm.masked.store.*\u201d Intrinsics": [[549, "llvm-masked-store-intrinsics"]], "\u201cllvm.matrix.columnwise.load.*\u201d Intrinsic": [[549, "llvm-matrix-columnwise-load-intrinsic"]], "\u201cllvm.matrix.columnwise.store.*\u201d Intrinsic": [[549, "llvm-matrix-columnwise-store-intrinsic"]], "\u201cllvm.matrix.multiply.*\u201d Intrinsic": [[549, "llvm-matrix-multiply-intrinsic"]], "\u201cllvm.matrix.transpose.*\u201d Intrinsic": [[549, "llvm-matrix-transpose-intrinsic"]], "\u201cllvm.maximum.*\u201d Intrinsic": [[549, "llvm-maximum-intrinsic"]], "\u201cllvm.maxnum.*\u201d Intrinsic": [[549, "llvm-maxnum-intrinsic"]], "\u201cllvm.memcpy.element.unordered.atomic\u201d Intrinsic": [[549, "llvm-memcpy-element-unordered-atomic-intrinsic"]], "\u201cllvm.memcpy\u201d Intrinsic": [[549, "llvm-memcpy-intrinsic"]], "\u201cllvm.memmove.element.unordered.atomic\u201d Intrinsic": [[549, "llvm-memmove-element-unordered-atomic-intrinsic"]], "\u201cllvm.memmove\u201d Intrinsic": [[549, "llvm-memmove-intrinsic"]], "\u201cllvm.memset.*\u201d Intrinsics": [[549, "llvm-memset-intrinsics"]], "\u201cllvm.memset.element.unordered.atomic\u201d Intrinsic": [[549, "llvm-memset-element-unordered-atomic-intrinsic"]], "\u201cllvm.minimum.*\u201d Intrinsic": [[549, "llvm-minimum-intrinsic"]], "\u201cllvm.minnum.*\u201d Intrinsic": [[549, "llvm-minnum-intrinsic"]], "\u201cllvm.nearbyint.*\u201d Intrinsic": [[549, "llvm-nearbyint-intrinsic"]], "\u201cllvm.nvvm.barrier0\u201d": [[562, "llvm-nvvm-barrier0"]], "\u201cllvm.nvvm.ptr.*.to.gen\u201d Intrinsics": [[562, "llvm-nvvm-ptr-to-gen-intrinsics"]], "\u201cllvm.nvvm.ptr.gen.to.*\u201d Intrinsics": [[562, "llvm-nvvm-ptr-gen-to-intrinsics"]], "\u201cllvm.nvvm.read.ptx.sreg.*\u201d": [[562, "llvm-nvvm-read-ptx-sreg"]], "\u201cllvm.objc.autoreleasePoolPop\u201d Intrinsic": [[549, "llvm-objc-autoreleasepoolpop-intrinsic"]], "\u201cllvm.objc.autoreleasePoolPush\u201d Intrinsic": [[549, "llvm-objc-autoreleasepoolpush-intrinsic"]], "\u201cllvm.objc.autoreleaseReturnValue\u201d Intrinsic": [[549, "llvm-objc-autoreleasereturnvalue-intrinsic"]], "\u201cllvm.objc.autorelease\u201d Intrinsic": [[549, "llvm-objc-autorelease-intrinsic"]], "\u201cllvm.objc.copyWeak\u201d Intrinsic": [[549, "llvm-objc-copyweak-intrinsic"]], "\u201cllvm.objc.destroyWeak\u201d Intrinsic": [[549, "llvm-objc-destroyweak-intrinsic"]], "\u201cllvm.objc.initWeak\u201d Intrinsic": [[549, "llvm-objc-initweak-intrinsic"]], "\u201cllvm.objc.loadWeakRetained\u201d Intrinsic": [[549, "llvm-objc-loadweakretained-intrinsic"]], "\u201cllvm.objc.loadWeak\u201d Intrinsic": [[549, "llvm-objc-loadweak-intrinsic"]], "\u201cllvm.objc.moveWeak\u201d Intrinsic": [[549, "llvm-objc-moveweak-intrinsic"]], "\u201cllvm.objc.release\u201d Intrinsic": [[549, "llvm-objc-release-intrinsic"]], "\u201cllvm.objc.retainAutoreleaseReturnValue\u201d Intrinsic": [[549, "llvm-objc-retainautoreleasereturnvalue-intrinsic"]], "\u201cllvm.objc.retainAutoreleasedReturnValue\u201d Intrinsic": [[549, "llvm-objc-retainautoreleasedreturnvalue-intrinsic"]], "\u201cllvm.objc.retainAutorelease\u201d Intrinsic": [[549, "llvm-objc-retainautorelease-intrinsic"]], "\u201cllvm.objc.retainBlock\u201d Intrinsic": [[549, "llvm-objc-retainblock-intrinsic"]], "\u201cllvm.objc.retain\u201d Intrinsic": [[549, "llvm-objc-retain-intrinsic"]], "\u201cllvm.objc.storeStrong\u201d Intrinsic": [[549, "llvm-objc-storestrong-intrinsic"]], "\u201cllvm.objc.storeWeak\u201d Intrinsic": [[549, "llvm-objc-storeweak-intrinsic"]], "\u201cllvm.objectsize\u201d Intrinsic": [[549, "llvm-objectsize-intrinsic"]], "\u201cllvm.pcmarker\u201d Intrinsic": [[549, "llvm-pcmarker-intrinsic"]], "\u201cllvm.pow.*\u201d Intrinsic": [[549, "llvm-pow-intrinsic"]], "\u201cllvm.powi.*\u201d Intrinsic": [[549, "llvm-powi-intrinsic"]], "\u201cllvm.prefetch\u201d Intrinsic": [[549, "llvm-prefetch-intrinsic"]], "\u201cllvm.preserve.array.access.index\u201d Intrinsic": [[549, "llvm-preserve-array-access-index-intrinsic"]], "\u201cllvm.preserve.struct.access.index\u201d Intrinsic": [[549, "llvm-preserve-struct-access-index-intrinsic"]], "\u201cllvm.preserve.union.access.index\u201d Intrinsic": [[549, "llvm-preserve-union-access-index-intrinsic"]], "\u201cllvm.ptr.annotation.*\u201d Intrinsic": [[549, "llvm-ptr-annotation-intrinsic"]], "\u201cllvm.ptrmask\u201d Intrinsic": [[549, "llvm-ptrmask-intrinsic"]], "\u201cllvm.read_register\u201d and \u201cllvm.write_register\u201d Intrinsics": [[549, "llvm-read-register-and-llvm-write-register-intrinsics"]], "\u201cllvm.readcyclecounter\u201d Intrinsic": [[549, "llvm-readcyclecounter-intrinsic"]], "\u201cllvm.returnaddress\u201d Intrinsic": [[549, "llvm-returnaddress-intrinsic"]], "\u201cllvm.rint.*\u201d Intrinsic": [[549, "llvm-rint-intrinsic"]], "\u201cllvm.round.*\u201d Intrinsic": [[549, "llvm-round-intrinsic"]], "\u201cllvm.sadd.sat.*\u201d Intrinsics": [[549, "llvm-sadd-sat-intrinsics"]], "\u201cllvm.sadd.with.overflow.*\u201d Intrinsics": [[549, "llvm-sadd-with-overflow-intrinsics"]], "\u201cllvm.sdiv.fix.*\u201d Intrinsics": [[549, "llvm-sdiv-fix-intrinsics"]], "\u201cllvm.sideeffect\u201d Intrinsic": [[549, "llvm-sideeffect-intrinsic"]], "\u201cllvm.sin.*\u201d Intrinsic": [[549, "llvm-sin-intrinsic"]], "\u201cllvm.smul.fix.*\u201d Intrinsics": [[549, "llvm-smul-fix-intrinsics"]], "\u201cllvm.smul.fix.sat.*\u201d Intrinsics": [[549, "llvm-smul-fix-sat-intrinsics"]], "\u201cllvm.smul.with.overflow.*\u201d Intrinsics": [[549, "llvm-smul-with-overflow-intrinsics"]], "\u201cllvm.sponentry\u201d Intrinsic": [[549, "llvm-sponentry-intrinsic"]], "\u201cllvm.sqrt.*\u201d Intrinsic": [[549, "llvm-sqrt-intrinsic"]], "\u201cllvm.ssa_copy\u201d Intrinsic": [[549, "llvm-ssa-copy-intrinsic"]], "\u201cllvm.ssub.sat.*\u201d Intrinsics": [[549, "llvm-ssub-sat-intrinsics"]], "\u201cllvm.ssub.with.overflow.*\u201d Intrinsics": [[549, "llvm-ssub-with-overflow-intrinsics"]], "\u201cllvm.stackguard\u201d Intrinsic": [[549, "llvm-stackguard-intrinsic"]], "\u201cllvm.stackprotector\u201d Intrinsic": [[549, "llvm-stackprotector-intrinsic"]], "\u201cllvm.stackrestore\u201d Intrinsic": [[549, "llvm-stackrestore-intrinsic"]], "\u201cllvm.stacksave\u201d Intrinsic": [[549, "llvm-stacksave-intrinsic"]], "\u201cllvm.strip.invariant.group\u201d Intrinsic": [[549, "llvm-strip-invariant-group-intrinsic"]], "\u201cllvm.thread.pointer\u201d Intrinsic": [[549, "llvm-thread-pointer-intrinsic"]], "\u201cllvm.trap\u201d Intrinsic": [[549, "llvm-trap-intrinsic"]], "\u201cllvm.trunc.*\u201d Intrinsic": [[549, "llvm-trunc-intrinsic"]], "\u201cllvm.type.checked.load\u201d Intrinsic": [[549, "llvm-type-checked-load-intrinsic"]], "\u201cllvm.type.test\u201d Intrinsic": [[549, "llvm-type-test-intrinsic"]], "\u201cllvm.uadd.sat.*\u201d Intrinsics": [[549, "llvm-uadd-sat-intrinsics"]], "\u201cllvm.uadd.with.overflow.*\u201d Intrinsics": [[549, "llvm-uadd-with-overflow-intrinsics"]], "\u201cllvm.udiv.fix.*\u201d Intrinsics": [[549, "llvm-udiv-fix-intrinsics"]], "\u201cllvm.umul.fix.*\u201d Intrinsics": [[549, "llvm-umul-fix-intrinsics"]], "\u201cllvm.umul.fix.sat.*\u201d Intrinsics": [[549, "llvm-umul-fix-sat-intrinsics"]], "\u201cllvm.umul.with.overflow.*\u201d Intrinsics": [[549, "llvm-umul-with-overflow-intrinsics"]], "\u201cllvm.usub.sat.*\u201d Intrinsics": [[549, "llvm-usub-sat-intrinsics"]], "\u201cllvm.usub.with.overflow.*\u201d Intrinsics": [[549, "llvm-usub-with-overflow-intrinsics"]], "\u201cllvm.va_copy\u201d Intrinsic": [[549, "llvm-va-copy-intrinsic"]], "\u201cllvm.va_end\u201d Intrinsic": [[549, "llvm-va-end-intrinsic"]], "\u201cllvm.va_start\u201d Intrinsic": [[549, "llvm-va-start-intrinsic"]], "\u201cllvm.var.annotation\u201d Intrinsic": [[549, "llvm-var-annotation-intrinsic"]], "\u201cload\u201d Instruction": [[549, "load-instruction"]], "\u201clshr\u201d Instruction": [[549, "lshr-instruction"]], "\u201cmul\u201d Instruction": [[549, "mul-instruction"]], "\u201cnoalias\u201d and \u201calias.scope\u201d Metadata": [[549, "noalias-and-alias-scope-metadata"]], "\u201cor\u201d Instruction": [[549, "or-instruction"]], "\u201cphi\u201d Instruction": [[549, "phi-instruction"]], "\u201cprof\u201d Metadata": [[549, "prof-metadata"]], "\u201cptrtoint .. to\u201d Instruction": [[549, "ptrtoint-to-instruction"]], "\u201crange\u201d Metadata": [[549, "range-metadata"]], "\u201cresume\u201d Instruction": [[549, "resume-instruction"]], "\u201cret\u201d Instruction": [[549, "ret-instruction"]], "\u201csdiv\u201d Instruction": [[549, "sdiv-instruction"]], "\u201cselect\u201d Instruction": [[549, "select-instruction"]], "\u201csext .. to\u201d Instruction": [[549, "sext-to-instruction"]], "\u201cshl\u201d Instruction": [[549, "shl-instruction"]], "\u201cshufflevector\u201d Instruction": [[549, "shufflevector-instruction"]], "\u201csitofp .. to\u201d Instruction": [[549, "sitofp-to-instruction"]], "\u201csrem\u201d Instruction": [[549, "srem-instruction"]], "\u201cstore\u201d Instruction": [[549, "store-instruction"]], "\u201csub\u201d Instruction": [[549, "sub-instruction"]], "\u201cswitch\u201d Instruction": [[549, "switch-instruction"]], "\u201ctbaa.struct\u201d Metadata": [[549, "tbaa-struct-metadata"]], "\u201ctbaa\u201d Metadata": [[549, "tbaa-metadata"]], "\u201ctrunc .. to\u201d Instruction": [[549, "trunc-to-instruction"]], "\u201ctype\u201d Metadata": [[549, "type-metadata"]], "\u201cudiv\u201d Instruction": [[549, "udiv-instruction"]], "\u201cuitofp .. to\u201d Instruction": [[549, "uitofp-to-instruction"]], "\u201cunpredictable\u201d Metadata": [[549, "unpredictable-metadata"]], "\u201cunreachable\u201d Instruction": [[549, "unreachable-instruction"]], "\u201curem\u201d Instruction": [[549, "urem-instruction"]], "\u201cva_arg\u201d Instruction": [[549, "va-arg-instruction"]], "\u201cxor\u201d Instruction": [[549, "xor-instruction"]], "\u201czext .. to\u201d Instruction": [[549, "zext-to-instruction"]]}, "docnames": ["AMDGPU/AMDGPUAsmGFX10", "AMDGPU/AMDGPUAsmGFX7", "AMDGPU/AMDGPUAsmGFX8", "AMDGPU/AMDGPUAsmGFX9", "AMDGPU/AMDGPUAsmGFX900", "AMDGPU/AMDGPUAsmGFX904", "AMDGPU/AMDGPUAsmGFX906", "AMDGPU/AMDGPUAsmGFX908", "AMDGPU/gfx10_addr_buf", "AMDGPU/gfx10_addr_ds", "AMDGPU/gfx10_addr_flat", "AMDGPU/gfx10_addr_mimg", "AMDGPU/gfx10_attr", "AMDGPU/gfx10_base_smem_addr", "AMDGPU/gfx10_base_smem_buf", "AMDGPU/gfx10_base_smem_scratch", "AMDGPU/gfx10_bimm16", "AMDGPU/gfx10_bimm32", "AMDGPU/gfx10_data_buf_atomic128", "AMDGPU/gfx10_data_buf_atomic32", "AMDGPU/gfx10_data_buf_atomic64", "AMDGPU/gfx10_data_mimg_atomic_cmp", "AMDGPU/gfx10_data_mimg_atomic_reg", "AMDGPU/gfx10_data_mimg_store", "AMDGPU/gfx10_data_mimg_store_d16", "AMDGPU/gfx10_data_smem_atomic128", "AMDGPU/gfx10_data_smem_atomic32", "AMDGPU/gfx10_data_smem_atomic64", "AMDGPU/gfx10_dst_buf_128", "AMDGPU/gfx10_dst_buf_32", "AMDGPU/gfx10_dst_buf_64", "AMDGPU/gfx10_dst_buf_96", "AMDGPU/gfx10_dst_buf_lds", "AMDGPU/gfx10_dst_flat_atomic32", "AMDGPU/gfx10_dst_flat_atomic64", "AMDGPU/gfx10_dst_mimg_gather4", "AMDGPU/gfx10_dst_mimg_regular", "AMDGPU/gfx10_dst_mimg_regular_d16", "AMDGPU/gfx10_fimm16", "AMDGPU/gfx10_fimm32", "AMDGPU/gfx10_hwreg", "AMDGPU/gfx10_label", "AMDGPU/gfx10_mad_type_dev", "AMDGPU/gfx10_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx10_mod_sdwa_sext", "AMDGPU/gfx10_mod_vop3_abs_neg", "AMDGPU/gfx10_msg", "AMDGPU/gfx10_offset_buf", "AMDGPU/gfx10_offset_smem_buf", "AMDGPU/gfx10_offset_smem_plain", "AMDGPU/gfx10_opt", "AMDGPU/gfx10_param", "AMDGPU/gfx10_perm_smem", "AMDGPU/gfx10_ret", "AMDGPU/gfx10_rsrc_buf", "AMDGPU/gfx10_rsrc_mimg", "AMDGPU/gfx10_saddr_flat_global", "AMDGPU/gfx10_saddr_flat_scratch", "AMDGPU/gfx10_samp_mimg", "AMDGPU/gfx10_sdata128_0", "AMDGPU/gfx10_sdata32_0", "AMDGPU/gfx10_sdata64_0", "AMDGPU/gfx10_sdst128_0", "AMDGPU/gfx10_sdst256_0", "AMDGPU/gfx10_sdst32_0", "AMDGPU/gfx10_sdst32_1", "AMDGPU/gfx10_sdst32_2", "AMDGPU/gfx10_sdst512_0", "AMDGPU/gfx10_sdst64_0", "AMDGPU/gfx10_sdst64_1", "AMDGPU/gfx10_simm16", "AMDGPU/gfx10_src32_0", "AMDGPU/gfx10_src32_1", "AMDGPU/gfx10_src32_2", "AMDGPU/gfx10_src32_3", "AMDGPU/gfx10_src64_0", "AMDGPU/gfx10_src_exp", "AMDGPU/gfx10_ssrc32_0", "AMDGPU/gfx10_ssrc32_1", "AMDGPU/gfx10_ssrc32_2", "AMDGPU/gfx10_ssrc32_3", "AMDGPU/gfx10_ssrc32_4", "AMDGPU/gfx10_ssrc32_5", "AMDGPU/gfx10_ssrc64_0", "AMDGPU/gfx10_ssrc64_1", "AMDGPU/gfx10_tgt", "AMDGPU/gfx10_type_dev", "AMDGPU/gfx10_uimm16", "AMDGPU/gfx10_vaddr_flat_global", "AMDGPU/gfx10_vaddr_flat_scratch", "AMDGPU/gfx10_vcc_32", "AMDGPU/gfx10_vdata128_0", "AMDGPU/gfx10_vdata32_0", "AMDGPU/gfx10_vdata64_0", "AMDGPU/gfx10_vdata96_0", "AMDGPU/gfx10_vdst128_0", "AMDGPU/gfx10_vdst32_0", "AMDGPU/gfx10_vdst64_0", "AMDGPU/gfx10_vdst96_0", "AMDGPU/gfx10_vsrc128_0", "AMDGPU/gfx10_vsrc32_0", "AMDGPU/gfx10_vsrc32_1", "AMDGPU/gfx10_vsrc64_0", "AMDGPU/gfx10_waitcnt", "AMDGPU/gfx10_wsdst", "AMDGPU/gfx10_wssrc", "AMDGPU/gfx7_addr_buf", "AMDGPU/gfx7_addr_ds", "AMDGPU/gfx7_addr_flat", "AMDGPU/gfx7_addr_mimg", "AMDGPU/gfx7_attr", "AMDGPU/gfx7_base_smem_addr", "AMDGPU/gfx7_base_smem_buf", "AMDGPU/gfx7_bimm16", "AMDGPU/gfx7_bimm32", "AMDGPU/gfx7_data_buf_atomic128", "AMDGPU/gfx7_data_buf_atomic32", "AMDGPU/gfx7_data_buf_atomic64", "AMDGPU/gfx7_data_mimg_atomic_cmp", "AMDGPU/gfx7_data_mimg_atomic_reg", "AMDGPU/gfx7_data_mimg_store", "AMDGPU/gfx7_dst_buf_128", "AMDGPU/gfx7_dst_buf_64", "AMDGPU/gfx7_dst_buf_96", "AMDGPU/gfx7_dst_buf_lds", "AMDGPU/gfx7_dst_flat_atomic32", "AMDGPU/gfx7_dst_flat_atomic64", "AMDGPU/gfx7_dst_mimg_gather4", "AMDGPU/gfx7_dst_mimg_regular", "AMDGPU/gfx7_fimm32", "AMDGPU/gfx7_hwreg", "AMDGPU/gfx7_label", "AMDGPU/gfx7_mod", "AMDGPU/gfx7_msg", "AMDGPU/gfx7_offset_buf", "AMDGPU/gfx7_offset_smem", "AMDGPU/gfx7_opt", "AMDGPU/gfx7_param", "AMDGPU/gfx7_ret", "AMDGPU/gfx7_rsrc_buf", "AMDGPU/gfx7_rsrc_mimg", "AMDGPU/gfx7_samp_mimg", "AMDGPU/gfx7_sdst128_0", "AMDGPU/gfx7_sdst256_0", "AMDGPU/gfx7_sdst32_0", "AMDGPU/gfx7_sdst32_1", "AMDGPU/gfx7_sdst32_2", "AMDGPU/gfx7_sdst512_0", "AMDGPU/gfx7_sdst64_0", "AMDGPU/gfx7_sdst64_1", "AMDGPU/gfx7_simm16", "AMDGPU/gfx7_src32_0", "AMDGPU/gfx7_src32_1", "AMDGPU/gfx7_src32_2", "AMDGPU/gfx7_src32_3", "AMDGPU/gfx7_src32_4", "AMDGPU/gfx7_src32_5", "AMDGPU/gfx7_src32_6", "AMDGPU/gfx7_src64_0", "AMDGPU/gfx7_src64_1", "AMDGPU/gfx7_src64_2", "AMDGPU/gfx7_src_exp", "AMDGPU/gfx7_ssrc32_0", "AMDGPU/gfx7_ssrc32_1", "AMDGPU/gfx7_ssrc32_2", "AMDGPU/gfx7_ssrc32_3", "AMDGPU/gfx7_ssrc32_4", "AMDGPU/gfx7_ssrc32_5", "AMDGPU/gfx7_ssrc32_6", "AMDGPU/gfx7_ssrc64_0", "AMDGPU/gfx7_ssrc64_1", "AMDGPU/gfx7_ssrc64_2", "AMDGPU/gfx7_ssrc64_3", "AMDGPU/gfx7_tgt", "AMDGPU/gfx7_type_dev", "AMDGPU/gfx7_uimm16", "AMDGPU/gfx7_vcc_64", "AMDGPU/gfx7_vdata128_0", "AMDGPU/gfx7_vdata32_0", "AMDGPU/gfx7_vdata64_0", "AMDGPU/gfx7_vdata96_0", "AMDGPU/gfx7_vdst128_0", "AMDGPU/gfx7_vdst32_0", "AMDGPU/gfx7_vdst64_0", "AMDGPU/gfx7_vdst96_0", "AMDGPU/gfx7_vsrc128_0", "AMDGPU/gfx7_vsrc32_0", "AMDGPU/gfx7_vsrc32_1", "AMDGPU/gfx7_vsrc64_0", "AMDGPU/gfx7_waitcnt", "AMDGPU/gfx8_addr_buf", "AMDGPU/gfx8_addr_ds", "AMDGPU/gfx8_addr_flat", "AMDGPU/gfx8_addr_mimg", "AMDGPU/gfx8_attr", "AMDGPU/gfx8_base_smem_addr", "AMDGPU/gfx8_base_smem_buf", "AMDGPU/gfx8_bimm16", "AMDGPU/gfx8_bimm32", "AMDGPU/gfx8_data_buf_atomic128", "AMDGPU/gfx8_data_buf_atomic32", "AMDGPU/gfx8_data_buf_atomic64", "AMDGPU/gfx8_data_buf_d16_128", "AMDGPU/gfx8_data_buf_d16_32", "AMDGPU/gfx8_data_buf_d16_64", "AMDGPU/gfx8_data_buf_d16_96", "AMDGPU/gfx8_data_mimg_atomic_cmp", "AMDGPU/gfx8_data_mimg_atomic_reg", "AMDGPU/gfx8_data_mimg_store", "AMDGPU/gfx8_data_mimg_store_d16", "AMDGPU/gfx8_dst_buf_128", "AMDGPU/gfx8_dst_buf_64", "AMDGPU/gfx8_dst_buf_96", "AMDGPU/gfx8_dst_buf_d16_128", "AMDGPU/gfx8_dst_buf_d16_32", "AMDGPU/gfx8_dst_buf_d16_64", "AMDGPU/gfx8_dst_buf_d16_96", "AMDGPU/gfx8_dst_buf_lds", "AMDGPU/gfx8_dst_flat_atomic32", "AMDGPU/gfx8_dst_flat_atomic64", "AMDGPU/gfx8_dst_mimg_gather4", "AMDGPU/gfx8_dst_mimg_regular", "AMDGPU/gfx8_dst_mimg_regular_d16", "AMDGPU/gfx8_fimm16", "AMDGPU/gfx8_fimm32", "AMDGPU/gfx8_hwreg", "AMDGPU/gfx8_imask", "AMDGPU/gfx8_label", "AMDGPU/gfx8_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx8_mod_sdwa_sext", "AMDGPU/gfx8_mod_vop3_abs_neg", "AMDGPU/gfx8_msg", "AMDGPU/gfx8_offset_buf", "AMDGPU/gfx8_offset_smem_load", "AMDGPU/gfx8_offset_smem_store", "AMDGPU/gfx8_opt", "AMDGPU/gfx8_param", "AMDGPU/gfx8_perm_smem", "AMDGPU/gfx8_ret", "AMDGPU/gfx8_rsrc_buf", "AMDGPU/gfx8_rsrc_mimg", "AMDGPU/gfx8_samp_mimg", "AMDGPU/gfx8_sdata128_0", "AMDGPU/gfx8_sdata32_0", "AMDGPU/gfx8_sdata64_0", "AMDGPU/gfx8_sdst128_0", "AMDGPU/gfx8_sdst256_0", "AMDGPU/gfx8_sdst32_0", "AMDGPU/gfx8_sdst32_1", "AMDGPU/gfx8_sdst32_2", "AMDGPU/gfx8_sdst512_0", "AMDGPU/gfx8_sdst64_0", "AMDGPU/gfx8_sdst64_1", "AMDGPU/gfx8_simm16", "AMDGPU/gfx8_src32_0", "AMDGPU/gfx8_src32_1", "AMDGPU/gfx8_src32_2", "AMDGPU/gfx8_src32_3", "AMDGPU/gfx8_src64_0", "AMDGPU/gfx8_src64_1", "AMDGPU/gfx8_src_exp", "AMDGPU/gfx8_ssrc32_0", "AMDGPU/gfx8_ssrc32_1", "AMDGPU/gfx8_ssrc32_2", "AMDGPU/gfx8_ssrc32_3", "AMDGPU/gfx8_ssrc32_4", "AMDGPU/gfx8_ssrc64_0", "AMDGPU/gfx8_ssrc64_1", "AMDGPU/gfx8_ssrc64_2", "AMDGPU/gfx8_ssrc64_3", "AMDGPU/gfx8_tgt", "AMDGPU/gfx8_type_dev", "AMDGPU/gfx8_uimm16", "AMDGPU/gfx8_vcc_64", "AMDGPU/gfx8_vdata128_0", "AMDGPU/gfx8_vdata32_0", "AMDGPU/gfx8_vdata64_0", "AMDGPU/gfx8_vdata96_0", "AMDGPU/gfx8_vdst128_0", "AMDGPU/gfx8_vdst32_0", "AMDGPU/gfx8_vdst64_0", "AMDGPU/gfx8_vdst96_0", "AMDGPU/gfx8_vsrc128_0", "AMDGPU/gfx8_vsrc32_0", "AMDGPU/gfx8_vsrc32_1", "AMDGPU/gfx8_vsrc64_0", "AMDGPU/gfx8_waitcnt", "AMDGPU/gfx900_mad_type_dev", "AMDGPU/gfx900_mod_vop3_abs_neg", "AMDGPU/gfx900_src32_0", "AMDGPU/gfx900_src32_1", "AMDGPU/gfx900_vdst32_0", "AMDGPU/gfx904_mad_type_dev", "AMDGPU/gfx904_mod_vop3_abs_neg", "AMDGPU/gfx904_src32_0", "AMDGPU/gfx904_src32_1", "AMDGPU/gfx904_vdst32_0", "AMDGPU/gfx906_mad_type_dev", "AMDGPU/gfx906_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx906_mod_sdwa_sext", "AMDGPU/gfx906_mod_vop3_abs_neg", "AMDGPU/gfx906_src32_0", "AMDGPU/gfx906_src32_1", "AMDGPU/gfx906_src32_2", "AMDGPU/gfx906_type_dev", "AMDGPU/gfx906_vdst32_0", "AMDGPU/gfx906_vsrc32_0", "AMDGPU/gfx908_addr_buf", "AMDGPU/gfx908_adst1024_0", "AMDGPU/gfx908_adst128_0", "AMDGPU/gfx908_adst32_0", "AMDGPU/gfx908_adst512_0", "AMDGPU/gfx908_asrc1024_0", "AMDGPU/gfx908_asrc128_0", "AMDGPU/gfx908_asrc32_0", "AMDGPU/gfx908_asrc512_0", "AMDGPU/gfx908_data_buf_atomic32", "AMDGPU/gfx908_dst_flat_atomic32", "AMDGPU/gfx908_mad_type_dev", "AMDGPU/gfx908_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx908_mod_sdwa_sext", "AMDGPU/gfx908_mod_vop3_abs_neg", "AMDGPU/gfx908_offset_buf", "AMDGPU/gfx908_opt", "AMDGPU/gfx908_ret", "AMDGPU/gfx908_rsrc_buf", "AMDGPU/gfx908_saddr_flat_global", "AMDGPU/gfx908_src32_0", "AMDGPU/gfx908_src32_1", "AMDGPU/gfx908_src32_2", "AMDGPU/gfx908_src32_3", "AMDGPU/gfx908_type_dev", "AMDGPU/gfx908_vaddr_flat_global", "AMDGPU/gfx908_vasrc32_0", "AMDGPU/gfx908_vasrc64_0", "AMDGPU/gfx908_vdata32_0", "AMDGPU/gfx908_vdst32_0", "AMDGPU/gfx908_vsrc32_0", "AMDGPU/gfx9_addr_buf", "AMDGPU/gfx9_addr_ds", "AMDGPU/gfx9_addr_flat", "AMDGPU/gfx9_addr_mimg", "AMDGPU/gfx9_attr", "AMDGPU/gfx9_base_smem_addr", "AMDGPU/gfx9_base_smem_buf", "AMDGPU/gfx9_base_smem_scratch", "AMDGPU/gfx9_bimm16", "AMDGPU/gfx9_bimm32", "AMDGPU/gfx9_data_buf_atomic128", "AMDGPU/gfx9_data_buf_atomic32", "AMDGPU/gfx9_data_buf_atomic64", "AMDGPU/gfx9_data_mimg_atomic_cmp", "AMDGPU/gfx9_data_mimg_atomic_reg", "AMDGPU/gfx9_data_mimg_store", "AMDGPU/gfx9_data_mimg_store_d16", "AMDGPU/gfx9_data_smem_atomic128", "AMDGPU/gfx9_data_smem_atomic32", "AMDGPU/gfx9_data_smem_atomic64", "AMDGPU/gfx9_dst_buf_128", "AMDGPU/gfx9_dst_buf_32", "AMDGPU/gfx9_dst_buf_64", "AMDGPU/gfx9_dst_buf_96", "AMDGPU/gfx9_dst_buf_lds", "AMDGPU/gfx9_dst_flat_atomic32", "AMDGPU/gfx9_dst_flat_atomic64", "AMDGPU/gfx9_dst_mimg_gather4", "AMDGPU/gfx9_dst_mimg_regular", "AMDGPU/gfx9_dst_mimg_regular_d16", "AMDGPU/gfx9_fimm16", "AMDGPU/gfx9_fimm32", "AMDGPU/gfx9_hwreg", "AMDGPU/gfx9_imask", "AMDGPU/gfx9_label", "AMDGPU/gfx9_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx9_mod_sdwa_sext", "AMDGPU/gfx9_mod_vop3_abs_neg", "AMDGPU/gfx9_msg", "AMDGPU/gfx9_offset_buf", "AMDGPU/gfx9_offset_smem_buf", "AMDGPU/gfx9_offset_smem_plain", "AMDGPU/gfx9_opt", "AMDGPU/gfx9_param", "AMDGPU/gfx9_perm_smem", "AMDGPU/gfx9_ret", "AMDGPU/gfx9_rsrc_buf", "AMDGPU/gfx9_rsrc_mimg", "AMDGPU/gfx9_saddr_flat_global", "AMDGPU/gfx9_saddr_flat_scratch", "AMDGPU/gfx9_samp_mimg", "AMDGPU/gfx9_sdata128_0", "AMDGPU/gfx9_sdata32_0", "AMDGPU/gfx9_sdata64_0", "AMDGPU/gfx9_sdst128_0", "AMDGPU/gfx9_sdst256_0", "AMDGPU/gfx9_sdst32_0", "AMDGPU/gfx9_sdst32_1", "AMDGPU/gfx9_sdst32_2", "AMDGPU/gfx9_sdst512_0", "AMDGPU/gfx9_sdst64_0", "AMDGPU/gfx9_sdst64_1", "AMDGPU/gfx9_simm16", "AMDGPU/gfx9_src32_0", "AMDGPU/gfx9_src32_1", "AMDGPU/gfx9_src32_2", "AMDGPU/gfx9_src32_3", "AMDGPU/gfx9_src64_0", "AMDGPU/gfx9_src64_1", "AMDGPU/gfx9_src_exp", "AMDGPU/gfx9_ssrc32_0", "AMDGPU/gfx9_ssrc32_1", "AMDGPU/gfx9_ssrc32_2", "AMDGPU/gfx9_ssrc32_3", "AMDGPU/gfx9_ssrc32_4", "AMDGPU/gfx9_ssrc64_0", "AMDGPU/gfx9_ssrc64_1", "AMDGPU/gfx9_ssrc64_2", "AMDGPU/gfx9_ssrc64_3", "AMDGPU/gfx9_tgt", "AMDGPU/gfx9_type_dev", "AMDGPU/gfx9_uimm16", "AMDGPU/gfx9_vaddr_flat_global", "AMDGPU/gfx9_vaddr_flat_scratch", "AMDGPU/gfx9_vcc_64", "AMDGPU/gfx9_vdata128_0", "AMDGPU/gfx9_vdata32_0", "AMDGPU/gfx9_vdata64_0", "AMDGPU/gfx9_vdata96_0", "AMDGPU/gfx9_vdst128_0", "AMDGPU/gfx9_vdst32_0", "AMDGPU/gfx9_vdst64_0", "AMDGPU/gfx9_vdst96_0", "AMDGPU/gfx9_vsrc128_0", "AMDGPU/gfx9_vsrc32_0", "AMDGPU/gfx9_vsrc32_1", "AMDGPU/gfx9_vsrc64_0", "AMDGPU/gfx9_waitcnt", "AMDGPUInstructionNotation", "AMDGPUInstructionSyntax", "AMDGPUModifierSyntax", "AMDGPUOperandSyntax", "AMDGPUUsage", "AddingConstrainedIntrinsics", "AdvancedBuilds", "AliasAnalysis", "Atomics", "Benchmarking", "BigEndianNEON", "BitCodeFormat", "BlockFrequencyTerminology", "BranchWeightMetadata", "BugLifeCycle", "Bugpoint", "BugpointRedesign", "BuildingADistribution", "CFIVerify", "CMake", "CMakePrimer", "CodeGenerator", "CodeOfConduct", "CodingStandards", "CommandGuide/FileCheck", "CommandGuide/bugpoint", "CommandGuide/dsymutil", "CommandGuide/index", "CommandGuide/lit", "CommandGuide/llc", "CommandGuide/lli", "CommandGuide/llvm-addr2line", "CommandGuide/llvm-ar", "CommandGuide/llvm-as", "CommandGuide/llvm-bcanalyzer", "CommandGuide/llvm-build", "CommandGuide/llvm-config", "CommandGuide/llvm-cov", "CommandGuide/llvm-cxxfilt", "CommandGuide/llvm-cxxmap", "CommandGuide/llvm-diff", "CommandGuide/llvm-dis", "CommandGuide/llvm-dwarfdump", "CommandGuide/llvm-exegesis", "CommandGuide/llvm-extract", "CommandGuide/llvm-lib", "CommandGuide/llvm-link", "CommandGuide/llvm-lipo", "CommandGuide/llvm-locstats", "CommandGuide/llvm-mca", "CommandGuide/llvm-nm", "CommandGuide/llvm-objcopy", "CommandGuide/llvm-objdump", "CommandGuide/llvm-pdbutil", "CommandGuide/llvm-profdata", "CommandGuide/llvm-ranlib", "CommandGuide/llvm-readelf", "CommandGuide/llvm-readobj", "CommandGuide/llvm-size", "CommandGuide/llvm-stress", "CommandGuide/llvm-strings", "CommandGuide/llvm-strip", "CommandGuide/llvm-symbolizer", "CommandGuide/opt", "CommandGuide/tblgen", "CommandLine", "CompileCudaWithLLVM", "CompilerWriterInfo", "Contributing", "Coroutines", "CoverageMappingFormat", "DebuggingJITedCode", "DependenceGraphs/index", "DeveloperPolicy", "Docker", "ExceptionHandling", "ExtendingLLVM", "Extensions", "FAQ", "FaultMaps", "Frontend/PerformanceTips", "FuzzingLLVM", "GarbageCollection", "GetElementPtr", "GettingInvolved", "GettingStarted", "GettingStartedTutorials", "GettingStartedVS", "GlobalISel/GMIR", "GlobalISel/GenericOpcode", "GlobalISel/IRTranslator", "GlobalISel/InstructionSelect", "GlobalISel/KnownBits", "GlobalISel/Legalizer", "GlobalISel/Pipeline", "GlobalISel/Porting", "GlobalISel/RegBankSelect", "GlobalISel/Resources", "GlobalISel/index", "GoldPlugin", "GwpAsan", "HowToAddABuilder", "HowToBuildOnARM", "HowToBuildWithPGO", "HowToCrossCompileBuiltinsOnArm", "HowToCrossCompileLLVM", "HowToReleaseLLVM", "HowToSetUpLLVMStyleRTTI", "HowToSubmitABug", "HowToUseAttributes", "HowToUseInstrMappings", "InAlloca", "LLVMBuild", "LangRef", "Lexicon", "LibFuzzer", "LinkTimeOptimization", "LoopTerminology", "MCJITDesignAndImplementation", "MIRLangRef", "MarkdownQuickstartTemplate", "MarkedUpDisassembly", "MeetupGuidelines", "MemTagSanitizer", "MemorySSA", "MergeFunctions", "NVPTXUsage", "ORCv2", "OptBisect", "PDB/CodeViewSymbols", "PDB/CodeViewTypes", "PDB/DbiStream", "PDB/GlobalStream", "PDB/HashTable", "PDB/ModiStream", "PDB/MsfFile", "PDB/PdbStream", "PDB/PublicStream", "PDB/TpiStream", "PDB/index", "Packaging", "Passes", "Phabricator", "ProgrammersManual", "Projects", "Proposals/GitHubMove", "Proposals/LLVMLibC", "Proposals/TestSuite", "Proposals/VariableNames", "Proposals/VectorizationPlan", "Reference", "ReleaseNotes", "ReleaseProcess", "Remarks", "ReportingGuide", "ScudoHardenedAllocator", "SegmentedStacks", "SourceLevelDebugging", "SpeculativeLoadHardening", "SphinxQuickstartTemplate", "StackMaps", "StackSafetyAnalysis", "Statepoints", "SupportLibrary", "SystemLibrary", "TableGen/BackEnds", "TableGen/Deficiencies", "TableGen/LangIntro", "TableGen/LangRef", "TableGen/index", "TableGenFundamentals", "TestSuiteGuide", "TestSuiteMakefileGuide", "TestingGuide", "TransformMetadata", "TypeMetadata", "UserGuides", "Vectorizers", "WritingAnLLVMBackend", "WritingAnLLVMPass", "XRay", "XRayExample", "XRayFDRFormat", "YamlIO", "index", "tutorial/BuildingAJIT1", "tutorial/BuildingAJIT2", "tutorial/BuildingAJIT3", "tutorial/BuildingAJIT4", "tutorial/BuildingAJIT5", "tutorial/LangImpl01", "tutorial/LangImpl02", "tutorial/LangImpl03", "tutorial/LangImpl04", "tutorial/LangImpl05", "tutorial/LangImpl06", "tutorial/LangImpl07", "tutorial/LangImpl08", "tutorial/LangImpl09", "tutorial/LangImpl10", "tutorial/MyFirstLanguageFrontend/LangImpl01", "tutorial/MyFirstLanguageFrontend/LangImpl02", "tutorial/MyFirstLanguageFrontend/LangImpl03", "tutorial/MyFirstLanguageFrontend/LangImpl04", "tutorial/MyFirstLanguageFrontend/LangImpl05", "tutorial/MyFirstLanguageFrontend/LangImpl06", "tutorial/MyFirstLanguageFrontend/LangImpl07", "tutorial/MyFirstLanguageFrontend/LangImpl08", "tutorial/MyFirstLanguageFrontend/LangImpl09", "tutorial/MyFirstLanguageFrontend/LangImpl10", "tutorial/MyFirstLanguageFrontend/index", "tutorial/OCamlLangImpl1", "tutorial/OCamlLangImpl2", "tutorial/OCamlLangImpl3", "tutorial/OCamlLangImpl4", "tutorial/OCamlLangImpl5", "tutorial/OCamlLangImpl6", "tutorial/OCamlLangImpl7", "tutorial/OCamlLangImpl8", "tutorial/index", "yaml2obj"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["AMDGPU/AMDGPUAsmGFX10.rst", "AMDGPU/AMDGPUAsmGFX7.rst", "AMDGPU/AMDGPUAsmGFX8.rst", "AMDGPU/AMDGPUAsmGFX9.rst", "AMDGPU/AMDGPUAsmGFX900.rst", "AMDGPU/AMDGPUAsmGFX904.rst", "AMDGPU/AMDGPUAsmGFX906.rst", "AMDGPU/AMDGPUAsmGFX908.rst", "AMDGPU/gfx10_addr_buf.rst", "AMDGPU/gfx10_addr_ds.rst", "AMDGPU/gfx10_addr_flat.rst", "AMDGPU/gfx10_addr_mimg.rst", "AMDGPU/gfx10_attr.rst", "AMDGPU/gfx10_base_smem_addr.rst", "AMDGPU/gfx10_base_smem_buf.rst", "AMDGPU/gfx10_base_smem_scratch.rst", "AMDGPU/gfx10_bimm16.rst", "AMDGPU/gfx10_bimm32.rst", "AMDGPU/gfx10_data_buf_atomic128.rst", "AMDGPU/gfx10_data_buf_atomic32.rst", "AMDGPU/gfx10_data_buf_atomic64.rst", "AMDGPU/gfx10_data_mimg_atomic_cmp.rst", "AMDGPU/gfx10_data_mimg_atomic_reg.rst", "AMDGPU/gfx10_data_mimg_store.rst", "AMDGPU/gfx10_data_mimg_store_d16.rst", "AMDGPU/gfx10_data_smem_atomic128.rst", "AMDGPU/gfx10_data_smem_atomic32.rst", "AMDGPU/gfx10_data_smem_atomic64.rst", "AMDGPU/gfx10_dst_buf_128.rst", "AMDGPU/gfx10_dst_buf_32.rst", "AMDGPU/gfx10_dst_buf_64.rst", "AMDGPU/gfx10_dst_buf_96.rst", "AMDGPU/gfx10_dst_buf_lds.rst", "AMDGPU/gfx10_dst_flat_atomic32.rst", "AMDGPU/gfx10_dst_flat_atomic64.rst", "AMDGPU/gfx10_dst_mimg_gather4.rst", "AMDGPU/gfx10_dst_mimg_regular.rst", "AMDGPU/gfx10_dst_mimg_regular_d16.rst", "AMDGPU/gfx10_fimm16.rst", "AMDGPU/gfx10_fimm32.rst", "AMDGPU/gfx10_hwreg.rst", "AMDGPU/gfx10_label.rst", "AMDGPU/gfx10_mad_type_dev.rst", "AMDGPU/gfx10_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx10_mod_sdwa_sext.rst", "AMDGPU/gfx10_mod_vop3_abs_neg.rst", "AMDGPU/gfx10_msg.rst", "AMDGPU/gfx10_offset_buf.rst", "AMDGPU/gfx10_offset_smem_buf.rst", "AMDGPU/gfx10_offset_smem_plain.rst", "AMDGPU/gfx10_opt.rst", "AMDGPU/gfx10_param.rst", "AMDGPU/gfx10_perm_smem.rst", "AMDGPU/gfx10_ret.rst", "AMDGPU/gfx10_rsrc_buf.rst", "AMDGPU/gfx10_rsrc_mimg.rst", "AMDGPU/gfx10_saddr_flat_global.rst", "AMDGPU/gfx10_saddr_flat_scratch.rst", "AMDGPU/gfx10_samp_mimg.rst", "AMDGPU/gfx10_sdata128_0.rst", "AMDGPU/gfx10_sdata32_0.rst", "AMDGPU/gfx10_sdata64_0.rst", "AMDGPU/gfx10_sdst128_0.rst", "AMDGPU/gfx10_sdst256_0.rst", "AMDGPU/gfx10_sdst32_0.rst", "AMDGPU/gfx10_sdst32_1.rst", "AMDGPU/gfx10_sdst32_2.rst", "AMDGPU/gfx10_sdst512_0.rst", "AMDGPU/gfx10_sdst64_0.rst", "AMDGPU/gfx10_sdst64_1.rst", "AMDGPU/gfx10_simm16.rst", "AMDGPU/gfx10_src32_0.rst", "AMDGPU/gfx10_src32_1.rst", "AMDGPU/gfx10_src32_2.rst", "AMDGPU/gfx10_src32_3.rst", "AMDGPU/gfx10_src64_0.rst", "AMDGPU/gfx10_src_exp.rst", "AMDGPU/gfx10_ssrc32_0.rst", "AMDGPU/gfx10_ssrc32_1.rst", "AMDGPU/gfx10_ssrc32_2.rst", "AMDGPU/gfx10_ssrc32_3.rst", "AMDGPU/gfx10_ssrc32_4.rst", "AMDGPU/gfx10_ssrc32_5.rst", "AMDGPU/gfx10_ssrc64_0.rst", "AMDGPU/gfx10_ssrc64_1.rst", "AMDGPU/gfx10_tgt.rst", "AMDGPU/gfx10_type_dev.rst", "AMDGPU/gfx10_uimm16.rst", "AMDGPU/gfx10_vaddr_flat_global.rst", "AMDGPU/gfx10_vaddr_flat_scratch.rst", "AMDGPU/gfx10_vcc_32.rst", "AMDGPU/gfx10_vdata128_0.rst", "AMDGPU/gfx10_vdata32_0.rst", "AMDGPU/gfx10_vdata64_0.rst", "AMDGPU/gfx10_vdata96_0.rst", "AMDGPU/gfx10_vdst128_0.rst", "AMDGPU/gfx10_vdst32_0.rst", "AMDGPU/gfx10_vdst64_0.rst", "AMDGPU/gfx10_vdst96_0.rst", "AMDGPU/gfx10_vsrc128_0.rst", "AMDGPU/gfx10_vsrc32_0.rst", "AMDGPU/gfx10_vsrc32_1.rst", "AMDGPU/gfx10_vsrc64_0.rst", "AMDGPU/gfx10_waitcnt.rst", "AMDGPU/gfx10_wsdst.rst", "AMDGPU/gfx10_wssrc.rst", "AMDGPU/gfx7_addr_buf.rst", "AMDGPU/gfx7_addr_ds.rst", "AMDGPU/gfx7_addr_flat.rst", "AMDGPU/gfx7_addr_mimg.rst", "AMDGPU/gfx7_attr.rst", "AMDGPU/gfx7_base_smem_addr.rst", "AMDGPU/gfx7_base_smem_buf.rst", "AMDGPU/gfx7_bimm16.rst", "AMDGPU/gfx7_bimm32.rst", "AMDGPU/gfx7_data_buf_atomic128.rst", "AMDGPU/gfx7_data_buf_atomic32.rst", "AMDGPU/gfx7_data_buf_atomic64.rst", "AMDGPU/gfx7_data_mimg_atomic_cmp.rst", "AMDGPU/gfx7_data_mimg_atomic_reg.rst", "AMDGPU/gfx7_data_mimg_store.rst", "AMDGPU/gfx7_dst_buf_128.rst", "AMDGPU/gfx7_dst_buf_64.rst", "AMDGPU/gfx7_dst_buf_96.rst", "AMDGPU/gfx7_dst_buf_lds.rst", "AMDGPU/gfx7_dst_flat_atomic32.rst", "AMDGPU/gfx7_dst_flat_atomic64.rst", "AMDGPU/gfx7_dst_mimg_gather4.rst", "AMDGPU/gfx7_dst_mimg_regular.rst", "AMDGPU/gfx7_fimm32.rst", "AMDGPU/gfx7_hwreg.rst", "AMDGPU/gfx7_label.rst", "AMDGPU/gfx7_mod.rst", "AMDGPU/gfx7_msg.rst", "AMDGPU/gfx7_offset_buf.rst", "AMDGPU/gfx7_offset_smem.rst", "AMDGPU/gfx7_opt.rst", "AMDGPU/gfx7_param.rst", "AMDGPU/gfx7_ret.rst", "AMDGPU/gfx7_rsrc_buf.rst", "AMDGPU/gfx7_rsrc_mimg.rst", "AMDGPU/gfx7_samp_mimg.rst", "AMDGPU/gfx7_sdst128_0.rst", "AMDGPU/gfx7_sdst256_0.rst", "AMDGPU/gfx7_sdst32_0.rst", "AMDGPU/gfx7_sdst32_1.rst", "AMDGPU/gfx7_sdst32_2.rst", "AMDGPU/gfx7_sdst512_0.rst", "AMDGPU/gfx7_sdst64_0.rst", "AMDGPU/gfx7_sdst64_1.rst", "AMDGPU/gfx7_simm16.rst", "AMDGPU/gfx7_src32_0.rst", "AMDGPU/gfx7_src32_1.rst", "AMDGPU/gfx7_src32_2.rst", "AMDGPU/gfx7_src32_3.rst", "AMDGPU/gfx7_src32_4.rst", "AMDGPU/gfx7_src32_5.rst", "AMDGPU/gfx7_src32_6.rst", "AMDGPU/gfx7_src64_0.rst", "AMDGPU/gfx7_src64_1.rst", "AMDGPU/gfx7_src64_2.rst", "AMDGPU/gfx7_src_exp.rst", "AMDGPU/gfx7_ssrc32_0.rst", "AMDGPU/gfx7_ssrc32_1.rst", "AMDGPU/gfx7_ssrc32_2.rst", "AMDGPU/gfx7_ssrc32_3.rst", "AMDGPU/gfx7_ssrc32_4.rst", "AMDGPU/gfx7_ssrc32_5.rst", "AMDGPU/gfx7_ssrc32_6.rst", "AMDGPU/gfx7_ssrc64_0.rst", "AMDGPU/gfx7_ssrc64_1.rst", "AMDGPU/gfx7_ssrc64_2.rst", "AMDGPU/gfx7_ssrc64_3.rst", "AMDGPU/gfx7_tgt.rst", "AMDGPU/gfx7_type_dev.rst", "AMDGPU/gfx7_uimm16.rst", "AMDGPU/gfx7_vcc_64.rst", "AMDGPU/gfx7_vdata128_0.rst", "AMDGPU/gfx7_vdata32_0.rst", "AMDGPU/gfx7_vdata64_0.rst", "AMDGPU/gfx7_vdata96_0.rst", "AMDGPU/gfx7_vdst128_0.rst", "AMDGPU/gfx7_vdst32_0.rst", "AMDGPU/gfx7_vdst64_0.rst", "AMDGPU/gfx7_vdst96_0.rst", "AMDGPU/gfx7_vsrc128_0.rst", "AMDGPU/gfx7_vsrc32_0.rst", "AMDGPU/gfx7_vsrc32_1.rst", "AMDGPU/gfx7_vsrc64_0.rst", "AMDGPU/gfx7_waitcnt.rst", "AMDGPU/gfx8_addr_buf.rst", "AMDGPU/gfx8_addr_ds.rst", "AMDGPU/gfx8_addr_flat.rst", "AMDGPU/gfx8_addr_mimg.rst", "AMDGPU/gfx8_attr.rst", "AMDGPU/gfx8_base_smem_addr.rst", "AMDGPU/gfx8_base_smem_buf.rst", "AMDGPU/gfx8_bimm16.rst", "AMDGPU/gfx8_bimm32.rst", "AMDGPU/gfx8_data_buf_atomic128.rst", "AMDGPU/gfx8_data_buf_atomic32.rst", "AMDGPU/gfx8_data_buf_atomic64.rst", "AMDGPU/gfx8_data_buf_d16_128.rst", "AMDGPU/gfx8_data_buf_d16_32.rst", "AMDGPU/gfx8_data_buf_d16_64.rst", "AMDGPU/gfx8_data_buf_d16_96.rst", "AMDGPU/gfx8_data_mimg_atomic_cmp.rst", "AMDGPU/gfx8_data_mimg_atomic_reg.rst", "AMDGPU/gfx8_data_mimg_store.rst", "AMDGPU/gfx8_data_mimg_store_d16.rst", "AMDGPU/gfx8_dst_buf_128.rst", "AMDGPU/gfx8_dst_buf_64.rst", "AMDGPU/gfx8_dst_buf_96.rst", "AMDGPU/gfx8_dst_buf_d16_128.rst", "AMDGPU/gfx8_dst_buf_d16_32.rst", "AMDGPU/gfx8_dst_buf_d16_64.rst", "AMDGPU/gfx8_dst_buf_d16_96.rst", "AMDGPU/gfx8_dst_buf_lds.rst", "AMDGPU/gfx8_dst_flat_atomic32.rst", "AMDGPU/gfx8_dst_flat_atomic64.rst", "AMDGPU/gfx8_dst_mimg_gather4.rst", "AMDGPU/gfx8_dst_mimg_regular.rst", "AMDGPU/gfx8_dst_mimg_regular_d16.rst", "AMDGPU/gfx8_fimm16.rst", "AMDGPU/gfx8_fimm32.rst", "AMDGPU/gfx8_hwreg.rst", "AMDGPU/gfx8_imask.rst", "AMDGPU/gfx8_label.rst", "AMDGPU/gfx8_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx8_mod_sdwa_sext.rst", "AMDGPU/gfx8_mod_vop3_abs_neg.rst", "AMDGPU/gfx8_msg.rst", "AMDGPU/gfx8_offset_buf.rst", "AMDGPU/gfx8_offset_smem_load.rst", "AMDGPU/gfx8_offset_smem_store.rst", "AMDGPU/gfx8_opt.rst", "AMDGPU/gfx8_param.rst", "AMDGPU/gfx8_perm_smem.rst", "AMDGPU/gfx8_ret.rst", "AMDGPU/gfx8_rsrc_buf.rst", "AMDGPU/gfx8_rsrc_mimg.rst", "AMDGPU/gfx8_samp_mimg.rst", "AMDGPU/gfx8_sdata128_0.rst", "AMDGPU/gfx8_sdata32_0.rst", "AMDGPU/gfx8_sdata64_0.rst", "AMDGPU/gfx8_sdst128_0.rst", "AMDGPU/gfx8_sdst256_0.rst", "AMDGPU/gfx8_sdst32_0.rst", "AMDGPU/gfx8_sdst32_1.rst", "AMDGPU/gfx8_sdst32_2.rst", "AMDGPU/gfx8_sdst512_0.rst", "AMDGPU/gfx8_sdst64_0.rst", "AMDGPU/gfx8_sdst64_1.rst", "AMDGPU/gfx8_simm16.rst", "AMDGPU/gfx8_src32_0.rst", "AMDGPU/gfx8_src32_1.rst", "AMDGPU/gfx8_src32_2.rst", "AMDGPU/gfx8_src32_3.rst", "AMDGPU/gfx8_src64_0.rst", "AMDGPU/gfx8_src64_1.rst", "AMDGPU/gfx8_src_exp.rst", "AMDGPU/gfx8_ssrc32_0.rst", "AMDGPU/gfx8_ssrc32_1.rst", "AMDGPU/gfx8_ssrc32_2.rst", "AMDGPU/gfx8_ssrc32_3.rst", "AMDGPU/gfx8_ssrc32_4.rst", "AMDGPU/gfx8_ssrc64_0.rst", "AMDGPU/gfx8_ssrc64_1.rst", "AMDGPU/gfx8_ssrc64_2.rst", "AMDGPU/gfx8_ssrc64_3.rst", "AMDGPU/gfx8_tgt.rst", "AMDGPU/gfx8_type_dev.rst", "AMDGPU/gfx8_uimm16.rst", "AMDGPU/gfx8_vcc_64.rst", "AMDGPU/gfx8_vdata128_0.rst", "AMDGPU/gfx8_vdata32_0.rst", "AMDGPU/gfx8_vdata64_0.rst", "AMDGPU/gfx8_vdata96_0.rst", "AMDGPU/gfx8_vdst128_0.rst", "AMDGPU/gfx8_vdst32_0.rst", "AMDGPU/gfx8_vdst64_0.rst", "AMDGPU/gfx8_vdst96_0.rst", "AMDGPU/gfx8_vsrc128_0.rst", "AMDGPU/gfx8_vsrc32_0.rst", "AMDGPU/gfx8_vsrc32_1.rst", "AMDGPU/gfx8_vsrc64_0.rst", "AMDGPU/gfx8_waitcnt.rst", "AMDGPU/gfx900_mad_type_dev.rst", "AMDGPU/gfx900_mod_vop3_abs_neg.rst", "AMDGPU/gfx900_src32_0.rst", "AMDGPU/gfx900_src32_1.rst", "AMDGPU/gfx900_vdst32_0.rst", "AMDGPU/gfx904_mad_type_dev.rst", "AMDGPU/gfx904_mod_vop3_abs_neg.rst", "AMDGPU/gfx904_src32_0.rst", "AMDGPU/gfx904_src32_1.rst", "AMDGPU/gfx904_vdst32_0.rst", "AMDGPU/gfx906_mad_type_dev.rst", "AMDGPU/gfx906_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx906_mod_sdwa_sext.rst", "AMDGPU/gfx906_mod_vop3_abs_neg.rst", "AMDGPU/gfx906_src32_0.rst", "AMDGPU/gfx906_src32_1.rst", "AMDGPU/gfx906_src32_2.rst", "AMDGPU/gfx906_type_dev.rst", "AMDGPU/gfx906_vdst32_0.rst", "AMDGPU/gfx906_vsrc32_0.rst", "AMDGPU/gfx908_addr_buf.rst", "AMDGPU/gfx908_adst1024_0.rst", "AMDGPU/gfx908_adst128_0.rst", "AMDGPU/gfx908_adst32_0.rst", "AMDGPU/gfx908_adst512_0.rst", "AMDGPU/gfx908_asrc1024_0.rst", "AMDGPU/gfx908_asrc128_0.rst", "AMDGPU/gfx908_asrc32_0.rst", "AMDGPU/gfx908_asrc512_0.rst", "AMDGPU/gfx908_data_buf_atomic32.rst", "AMDGPU/gfx908_dst_flat_atomic32.rst", "AMDGPU/gfx908_mad_type_dev.rst", "AMDGPU/gfx908_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx908_mod_sdwa_sext.rst", "AMDGPU/gfx908_mod_vop3_abs_neg.rst", "AMDGPU/gfx908_offset_buf.rst", "AMDGPU/gfx908_opt.rst", "AMDGPU/gfx908_ret.rst", "AMDGPU/gfx908_rsrc_buf.rst", "AMDGPU/gfx908_saddr_flat_global.rst", "AMDGPU/gfx908_src32_0.rst", "AMDGPU/gfx908_src32_1.rst", "AMDGPU/gfx908_src32_2.rst", "AMDGPU/gfx908_src32_3.rst", "AMDGPU/gfx908_type_dev.rst", "AMDGPU/gfx908_vaddr_flat_global.rst", "AMDGPU/gfx908_vasrc32_0.rst", "AMDGPU/gfx908_vasrc64_0.rst", "AMDGPU/gfx908_vdata32_0.rst", "AMDGPU/gfx908_vdst32_0.rst", "AMDGPU/gfx908_vsrc32_0.rst", "AMDGPU/gfx9_addr_buf.rst", "AMDGPU/gfx9_addr_ds.rst", "AMDGPU/gfx9_addr_flat.rst", "AMDGPU/gfx9_addr_mimg.rst", "AMDGPU/gfx9_attr.rst", "AMDGPU/gfx9_base_smem_addr.rst", "AMDGPU/gfx9_base_smem_buf.rst", "AMDGPU/gfx9_base_smem_scratch.rst", "AMDGPU/gfx9_bimm16.rst", "AMDGPU/gfx9_bimm32.rst", "AMDGPU/gfx9_data_buf_atomic128.rst", "AMDGPU/gfx9_data_buf_atomic32.rst", "AMDGPU/gfx9_data_buf_atomic64.rst", "AMDGPU/gfx9_data_mimg_atomic_cmp.rst", "AMDGPU/gfx9_data_mimg_atomic_reg.rst", "AMDGPU/gfx9_data_mimg_store.rst", "AMDGPU/gfx9_data_mimg_store_d16.rst", "AMDGPU/gfx9_data_smem_atomic128.rst", "AMDGPU/gfx9_data_smem_atomic32.rst", "AMDGPU/gfx9_data_smem_atomic64.rst", "AMDGPU/gfx9_dst_buf_128.rst", "AMDGPU/gfx9_dst_buf_32.rst", "AMDGPU/gfx9_dst_buf_64.rst", "AMDGPU/gfx9_dst_buf_96.rst", "AMDGPU/gfx9_dst_buf_lds.rst", "AMDGPU/gfx9_dst_flat_atomic32.rst", "AMDGPU/gfx9_dst_flat_atomic64.rst", "AMDGPU/gfx9_dst_mimg_gather4.rst", "AMDGPU/gfx9_dst_mimg_regular.rst", "AMDGPU/gfx9_dst_mimg_regular_d16.rst", "AMDGPU/gfx9_fimm16.rst", "AMDGPU/gfx9_fimm32.rst", "AMDGPU/gfx9_hwreg.rst", "AMDGPU/gfx9_imask.rst", "AMDGPU/gfx9_label.rst", "AMDGPU/gfx9_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx9_mod_sdwa_sext.rst", "AMDGPU/gfx9_mod_vop3_abs_neg.rst", "AMDGPU/gfx9_msg.rst", "AMDGPU/gfx9_offset_buf.rst", "AMDGPU/gfx9_offset_smem_buf.rst", "AMDGPU/gfx9_offset_smem_plain.rst", "AMDGPU/gfx9_opt.rst", "AMDGPU/gfx9_param.rst", "AMDGPU/gfx9_perm_smem.rst", "AMDGPU/gfx9_ret.rst", "AMDGPU/gfx9_rsrc_buf.rst", "AMDGPU/gfx9_rsrc_mimg.rst", "AMDGPU/gfx9_saddr_flat_global.rst", "AMDGPU/gfx9_saddr_flat_scratch.rst", "AMDGPU/gfx9_samp_mimg.rst", "AMDGPU/gfx9_sdata128_0.rst", "AMDGPU/gfx9_sdata32_0.rst", "AMDGPU/gfx9_sdata64_0.rst", "AMDGPU/gfx9_sdst128_0.rst", "AMDGPU/gfx9_sdst256_0.rst", "AMDGPU/gfx9_sdst32_0.rst", "AMDGPU/gfx9_sdst32_1.rst", "AMDGPU/gfx9_sdst32_2.rst", "AMDGPU/gfx9_sdst512_0.rst", "AMDGPU/gfx9_sdst64_0.rst", "AMDGPU/gfx9_sdst64_1.rst", "AMDGPU/gfx9_simm16.rst", "AMDGPU/gfx9_src32_0.rst", "AMDGPU/gfx9_src32_1.rst", "AMDGPU/gfx9_src32_2.rst", "AMDGPU/gfx9_src32_3.rst", "AMDGPU/gfx9_src64_0.rst", "AMDGPU/gfx9_src64_1.rst", "AMDGPU/gfx9_src_exp.rst", "AMDGPU/gfx9_ssrc32_0.rst", "AMDGPU/gfx9_ssrc32_1.rst", "AMDGPU/gfx9_ssrc32_2.rst", "AMDGPU/gfx9_ssrc32_3.rst", "AMDGPU/gfx9_ssrc32_4.rst", "AMDGPU/gfx9_ssrc64_0.rst", "AMDGPU/gfx9_ssrc64_1.rst", "AMDGPU/gfx9_ssrc64_2.rst", "AMDGPU/gfx9_ssrc64_3.rst", "AMDGPU/gfx9_tgt.rst", "AMDGPU/gfx9_type_dev.rst", "AMDGPU/gfx9_uimm16.rst", "AMDGPU/gfx9_vaddr_flat_global.rst", "AMDGPU/gfx9_vaddr_flat_scratch.rst", "AMDGPU/gfx9_vcc_64.rst", "AMDGPU/gfx9_vdata128_0.rst", "AMDGPU/gfx9_vdata32_0.rst", "AMDGPU/gfx9_vdata64_0.rst", "AMDGPU/gfx9_vdata96_0.rst", "AMDGPU/gfx9_vdst128_0.rst", "AMDGPU/gfx9_vdst32_0.rst", "AMDGPU/gfx9_vdst64_0.rst", "AMDGPU/gfx9_vdst96_0.rst", "AMDGPU/gfx9_vsrc128_0.rst", "AMDGPU/gfx9_vsrc32_0.rst", "AMDGPU/gfx9_vsrc32_1.rst", "AMDGPU/gfx9_vsrc64_0.rst", "AMDGPU/gfx9_waitcnt.rst", "AMDGPUInstructionNotation.rst", "AMDGPUInstructionSyntax.rst", "AMDGPUModifierSyntax.rst", "AMDGPUOperandSyntax.rst", "AMDGPUUsage.rst", "AddingConstrainedIntrinsics.rst", "AdvancedBuilds.rst", "AliasAnalysis.rst", "Atomics.rst", "Benchmarking.rst", "BigEndianNEON.rst", "BitCodeFormat.rst", "BlockFrequencyTerminology.rst", "BranchWeightMetadata.rst", "BugLifeCycle.rst", "Bugpoint.rst", "BugpointRedesign.md", "BuildingADistribution.rst", "CFIVerify.rst", "CMake.rst", "CMakePrimer.rst", "CodeGenerator.rst", "CodeOfConduct.rst", "CodingStandards.rst", "CommandGuide/FileCheck.rst", "CommandGuide/bugpoint.rst", "CommandGuide/dsymutil.rst", "CommandGuide/index.rst", "CommandGuide/lit.rst", "CommandGuide/llc.rst", "CommandGuide/lli.rst", "CommandGuide/llvm-addr2line.rst", "CommandGuide/llvm-ar.rst", "CommandGuide/llvm-as.rst", "CommandGuide/llvm-bcanalyzer.rst", "CommandGuide/llvm-build.rst", "CommandGuide/llvm-config.rst", "CommandGuide/llvm-cov.rst", "CommandGuide/llvm-cxxfilt.rst", "CommandGuide/llvm-cxxmap.rst", "CommandGuide/llvm-diff.rst", "CommandGuide/llvm-dis.rst", "CommandGuide/llvm-dwarfdump.rst", "CommandGuide/llvm-exegesis.rst", "CommandGuide/llvm-extract.rst", "CommandGuide/llvm-lib.rst", "CommandGuide/llvm-link.rst", "CommandGuide/llvm-lipo.rst", "CommandGuide/llvm-locstats.rst", "CommandGuide/llvm-mca.rst", "CommandGuide/llvm-nm.rst", "CommandGuide/llvm-objcopy.rst", "CommandGuide/llvm-objdump.rst", "CommandGuide/llvm-pdbutil.rst", "CommandGuide/llvm-profdata.rst", "CommandGuide/llvm-ranlib.rst", "CommandGuide/llvm-readelf.rst", "CommandGuide/llvm-readobj.rst", "CommandGuide/llvm-size.rst", "CommandGuide/llvm-stress.rst", "CommandGuide/llvm-strings.rst", "CommandGuide/llvm-strip.rst", "CommandGuide/llvm-symbolizer.rst", "CommandGuide/opt.rst", "CommandGuide/tblgen.rst", "CommandLine.rst", "CompileCudaWithLLVM.rst", "CompilerWriterInfo.rst", "Contributing.rst", "Coroutines.rst", "CoverageMappingFormat.rst", "DebuggingJITedCode.rst", "DependenceGraphs/index.rst", "DeveloperPolicy.rst", "Docker.rst", "ExceptionHandling.rst", "ExtendingLLVM.rst", "Extensions.rst", "FAQ.rst", "FaultMaps.rst", "Frontend/PerformanceTips.rst", "FuzzingLLVM.rst", "GarbageCollection.rst", "GetElementPtr.rst", "GettingInvolved.rst", "GettingStarted.rst", "GettingStartedTutorials.rst", "GettingStartedVS.rst", "GlobalISel/GMIR.rst", "GlobalISel/GenericOpcode.rst", "GlobalISel/IRTranslator.rst", "GlobalISel/InstructionSelect.rst", "GlobalISel/KnownBits.rst", "GlobalISel/Legalizer.rst", "GlobalISel/Pipeline.rst", "GlobalISel/Porting.rst", "GlobalISel/RegBankSelect.rst", "GlobalISel/Resources.rst", "GlobalISel/index.rst", "GoldPlugin.rst", "GwpAsan.rst", "HowToAddABuilder.rst", "HowToBuildOnARM.rst", "HowToBuildWithPGO.rst", "HowToCrossCompileBuiltinsOnArm.rst", "HowToCrossCompileLLVM.rst", "HowToReleaseLLVM.rst", "HowToSetUpLLVMStyleRTTI.rst", "HowToSubmitABug.rst", "HowToUseAttributes.rst", "HowToUseInstrMappings.rst", "InAlloca.rst", "LLVMBuild.rst", "LangRef.rst", "Lexicon.rst", "LibFuzzer.rst", "LinkTimeOptimization.rst", "LoopTerminology.rst", "MCJITDesignAndImplementation.rst", "MIRLangRef.rst", "MarkdownQuickstartTemplate.md", "MarkedUpDisassembly.rst", "MeetupGuidelines.rst", "MemTagSanitizer.rst", "MemorySSA.rst", "MergeFunctions.rst", "NVPTXUsage.rst", "ORCv2.rst", "OptBisect.rst", "PDB/CodeViewSymbols.rst", "PDB/CodeViewTypes.rst", "PDB/DbiStream.rst", "PDB/GlobalStream.rst", "PDB/HashTable.rst", "PDB/ModiStream.rst", "PDB/MsfFile.rst", "PDB/PdbStream.rst", "PDB/PublicStream.rst", "PDB/TpiStream.rst", "PDB/index.rst", "Packaging.rst", "Passes.rst", "Phabricator.rst", "ProgrammersManual.rst", "Projects.rst", "Proposals/GitHubMove.rst", "Proposals/LLVMLibC.rst", "Proposals/TestSuite.rst", "Proposals/VariableNames.rst", "Proposals/VectorizationPlan.rst", "Reference.rst", "ReleaseNotes.rst", "ReleaseProcess.rst", "Remarks.rst", "ReportingGuide.rst", "ScudoHardenedAllocator.rst", "SegmentedStacks.rst", "SourceLevelDebugging.rst", "SpeculativeLoadHardening.md", "SphinxQuickstartTemplate.rst", "StackMaps.rst", "StackSafetyAnalysis.rst", "Statepoints.rst", "SupportLibrary.rst", "SystemLibrary.rst", "TableGen/BackEnds.rst", "TableGen/Deficiencies.rst", "TableGen/LangIntro.rst", "TableGen/LangRef.rst", "TableGen/index.rst", "TableGenFundamentals.rst", "TestSuiteGuide.md", "TestSuiteMakefileGuide.rst", "TestingGuide.rst", "TransformMetadata.rst", "TypeMetadata.rst", "UserGuides.rst", "Vectorizers.rst", "WritingAnLLVMBackend.rst", "WritingAnLLVMPass.rst", "XRay.rst", "XRayExample.rst", "XRayFDRFormat.rst", "YamlIO.rst", "index.rst", "tutorial/BuildingAJIT1.rst", "tutorial/BuildingAJIT2.rst", "tutorial/BuildingAJIT3.rst", "tutorial/BuildingAJIT4.rst", "tutorial/BuildingAJIT5.rst", "tutorial/LangImpl01.rst", "tutorial/LangImpl02.rst", "tutorial/LangImpl03.rst", "tutorial/LangImpl04.rst", "tutorial/LangImpl05.rst", "tutorial/LangImpl06.rst", "tutorial/LangImpl07.rst", "tutorial/LangImpl08.rst", "tutorial/LangImpl09.rst", "tutorial/LangImpl10.rst", "tutorial/MyFirstLanguageFrontend/LangImpl01.rst", "tutorial/MyFirstLanguageFrontend/LangImpl02.rst", "tutorial/MyFirstLanguageFrontend/LangImpl03.rst", "tutorial/MyFirstLanguageFrontend/LangImpl04.rst", "tutorial/MyFirstLanguageFrontend/LangImpl05.rst", "tutorial/MyFirstLanguageFrontend/LangImpl06.rst", "tutorial/MyFirstLanguageFrontend/LangImpl07.rst", "tutorial/MyFirstLanguageFrontend/LangImpl08.rst", "tutorial/MyFirstLanguageFrontend/LangImpl09.rst", "tutorial/MyFirstLanguageFrontend/LangImpl10.rst", "tutorial/MyFirstLanguageFrontend/index.rst", "tutorial/OCamlLangImpl1.rst", "tutorial/OCamlLangImpl2.rst", "tutorial/OCamlLangImpl3.rst", "tutorial/OCamlLangImpl4.rst", "tutorial/OCamlLangImpl5.rst", "tutorial/OCamlLangImpl6.rst", "tutorial/OCamlLangImpl7.rst", "tutorial/OCamlLangImpl8.rst", "tutorial/index.rst", "yaml2obj.rst"], "indexentries": {"--add-dyldinfo": [[486, "cmdoption-llvm-nm-add-dyldinfo", false]], "--add-gnu-debuglink": [[487, "cmdoption-llvm-objcopy-add-gnu-debuglink", false]], "--add-section": [[487, "cmdoption-llvm-objcopy-add-section", false]], "--add-symbol": [[487, "cmdoption-llvm-objcopy-add-symbol", false]], "--addresses": [[498, "cmdoption-llvm-symbolizer-print-address", false]], "--addrsig": [[492, "cmdoption-llvm-readelf-addrsig", false], [493, "cmdoption-llvm-readobj-addrsig", false]], "--adjust-start": [[487, "cmdoption-llvm-objcopy-change-start", false]], "--adjust-vma": [[488, "cmdoption-llvm-objdump-adjust-vma", false], [498, "cmdoption-llvm-symbolizer-adjust-vma", false]], "--all": [[478, "cmdoption-llvm-dwarfdump-a", false], [492, "cmdoption-llvm-readelf-all", false], [493, "cmdoption-llvm-readobj-all", false], [496, "cmdoption-llvm-strings-all", false]], "--all-blocks": [[473, "cmdoption-llvm-cov-gcov-a", false]], "--all-headers": [[488, "cmdoption-llvm-objdump-x", false]], "--allow-broken-links": [[487, "cmdoption-llvm-objcopy-allow-broken-links", false], [497, "cmdoption-llvm-strip-allow-broken-links", false]], "--allow-deprecated-dag-overlap": [[460, "cmdoption-FileCheck-allow-deprecated-dag-overlap", false]], "--apple-names": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-namespaces": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-objc": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-types": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--arch": [[462, "cmdoption-dsymutil-arch", false], [478, "cmdoption-llvm-dwarfdump-arch", false], [486, "cmdoption-llvm-nm-arch", false], [488, "cmdoption-llvm-objdump-arch", false], [494, "cmdoption-llvm-size-arch", false]], "--arch-name": [[488, "cmdoption-llvm-objdump-arch-name", false]], "--arch-specific": [[492, "cmdoption-llvm-readelf-arch-specific", false], [493, "cmdoption-llvm-readobj-arch-specific", false]], "--archive-headers": [[488, "cmdoption-llvm-objdump-a", false]], "--archive-member-offsets": [[488, "cmdoption-llvm-objdump-archive-member-offsets", false]], "--basenames": [[498, "cmdoption-llvm-symbolizer-basenames", false]], "--binary-architecture": [[487, "cmdoption-llvm-objcopy-binary-architecture", false]], "--bind": [[488, "cmdoption-llvm-objdump-bind", false]], "--branch-counts": [[473, "cmdoption-llvm-cov-gcov-c", false]], "--branch-probabilities": [[473, "cmdoption-llvm-cov-gcov-b", false]], "--build-id-link-dir": [[487, "cmdoption-llvm-objcopy-build-id-link-dir", false]], "--build-id-link-input": [[487, "cmdoption-llvm-objcopy-build-id-link-input", false]], "--build-id-link-output": [[487, "cmdoption-llvm-objcopy-build-id-link-output", false]], "--bytes": [[496, "cmdoption-llvm-strings-bytes", false]], "--cfg": [[488, "cmdoption-llvm-objdump-cfg", false]], "--change-start": [[487, "cmdoption-llvm-objcopy-change-start", false]], "--check-prefix": [[460, "cmdoption-FileCheck-check-prefix", false]], "--check-prefixes": [[460, "cmdoption-FileCheck-check-prefixes", false]], "--codeview": [[493, "cmdoption-llvm-readobj-codeview", false]], "--codeview-ghash": [[493, "cmdoption-llvm-readobj-codeview-ghash", false]], "--codeview-merged-types": [[493, "cmdoption-llvm-readobj-codeview-merged-types", false]], "--codeview-subsection-bytes": [[493, "cmdoption-llvm-readobj-codeview-subsection-bytes", false]], "--coff-basereloc": [[493, "cmdoption-llvm-readobj-coff-basereloc", false]], "--coff-debug-directory": [[493, "cmdoption-llvm-readobj-coff-debug-directory", false]], "--coff-directives": [[493, "cmdoption-llvm-readobj-coff-directives", false]], "--coff-exports": [[493, "cmdoption-llvm-readobj-coff-exports", false]], "--coff-imports": [[493, "cmdoption-llvm-readobj-coff-imports", false]], "--coff-load-config": [[493, "cmdoption-llvm-readobj-coff-load-config", false]], "--coff-resources": [[493, "cmdoption-llvm-readobj-coff-resources", false]], "--color": [[460, "cmdoption-FileCheck-color", false], [478, "cmdoption-llvm-dwarfdump-color", false], [492, "cmdoption-llvm-readelf-color", false], [493, "cmdoption-llvm-readobj-color", false]], "--common": [[494, "cmdoption-llvm-size-common", false]], "--compress-debug-sections": [[487, "cmdoption-llvm-objcopy-compress-debug-sections", false]], "--config-prefix": [[464, "cmdoption-lit-config-prefix", false]], "--data-in-code": [[488, "cmdoption-llvm-objdump-data-in-code", false]], "--debug": [[464, "cmdoption-lit-debug", false]], "--debug-abbrev": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-addr": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-aranges": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-cu-index": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-frame": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-gnu-pubnames": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-gnu-pubtypes": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-info": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-line": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-line-str": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-loc": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-loclists": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-macro": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-names": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-pubnames": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-pubtypes": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-ranges": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-rnglists": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-str": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-str-offsets": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-syms": [[486, "cmdoption-llvm-nm-debug-syms", false]], "--debug-tu-index": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-types": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--decompress-debug-sections": [[487, "cmdoption-llvm-objcopy-decompress-debug-sections", false]], "--default-arch": [[498, "cmdoption-llvm-symbolizer-default-arch", false]], "--defined-only": [[486, "cmdoption-llvm-nm-defined-only", false]], "--demangle": [[486, "cmdoption-llvm-nm-demangle", false], [488, "cmdoption-llvm-objdump-C", false], [492, "cmdoption-llvm-readelf-demangle", false], [493, "cmdoption-llvm-readobj-demangle", false], [498, "cmdoption-llvm-symbolizer-demangle", false]], "--dependent-libraries": [[493, "cmdoption-llvm-readobj-dependent-libraries", false]], "--diff": [[478, "cmdoption-llvm-dwarfdump-diff", false]], "--dis-symname": [[488, "cmdoption-llvm-objdump-dis-symname", false]], "--disable-deterministic-archives": [[487, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [497, "cmdoption-llvm-strip-disable-deterministic-archives", false]], "--disable-excess-fp-precision": [[465, "cmdoption-llc-disable-excess-fp-precision", false]], "--disassemble": [[488, "cmdoption-llvm-objdump-d", false]], "--disassemble-all": [[488, "cmdoption-llvm-objdump-D", false]], "--disassemble-functions": [[488, "cmdoption-llvm-objdump-disassemble-functions", false]], "--disassemble-zeroes": [[488, "cmdoption-llvm-objdump-z", false]], "--disassembler-options": [[488, "cmdoption-llvm-objdump-M", false]], "--discard-all": [[487, "cmdoption-llvm-objcopy-discard-all", false], [497, "cmdoption-llvm-strip-discard-all", false]], "--discard-locals": [[487, "cmdoption-llvm-objcopy-discard-locals", false], [497, "cmdoption-llvm-strip-discard-locals", false]], "--draw-plot": [[484, "cmdoption-llvm-locstats-draw-plot", false]], "--dsym": [[488, "cmdoption-llvm-objdump-dsym", false]], "--dsym-hint": [[498, "cmdoption-llvm-symbolizer-dsym-hint", false]], "--dt": [[493, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dump-debug-map": [[462, "cmdoption-dsymutil-dump-debug-map", false]], "--dump-input": [[460, "cmdoption-FileCheck-dump-input", false]], "--dump-input-on-failure": [[460, "cmdoption-FileCheck-dump-input-on-failure", false]], "--dump-object-to-disk": [[479, "cmdoption-llvm-exegesis-dump-object-to-disk", false]], "--dump-section": [[487, "cmdoption-llvm-objcopy-dump-section", false]], "--dwarf": [[488, "cmdoption-llvm-objdump-dwarf", false]], "--dwp": [[498, "cmdoption-llvm-symbolizer-dwp", false]], "--dyldinfo-only": [[486, "cmdoption-llvm-nm-dyldinfo-only", false]], "--dylib-id": [[488, "cmdoption-llvm-objdump-dylib-id", false]], "--dylibs-used": [[488, "cmdoption-llvm-objdump-dylibs-used", false]], "--dyn-relocations": [[492, "cmdoption-llvm-readelf-dyn-relocations", false], [493, "cmdoption-llvm-readobj-dyn-relocations", false]], "--dyn-symbols": [[492, "cmdoption-llvm-readelf-dyn-symbols", false], [493, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dyn-syms": [[492, "cmdoption-llvm-readelf-dyn-symbols", false], [493, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dynamic": [[486, "cmdoption-llvm-nm-dynamic", false], [492, "cmdoption-llvm-readelf-dynamic-table", false], [493, "cmdoption-llvm-readobj-dynamic-table", false]], "--dynamic-reloc": [[488, "cmdoption-llvm-objdump-R", false]], "--dynamic-table": [[492, "cmdoption-llvm-readelf-dynamic-table", false], [493, "cmdoption-llvm-readobj-dynamic-table", false]], "--echo-all-commands": [[464, "cmdoption-lit-vv", false]], "--eh-frame": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--elf-cg-profile": [[492, "cmdoption-llvm-readelf-elf-cg-profile", false], [493, "cmdoption-llvm-readobj-elf-cg-profile", false]], "--elf-hash-histogram": [[492, "cmdoption-llvm-readelf-elf-hash-histogram", false], [493, "cmdoption-llvm-readobj-elf-hash-histogram", false]], "--elf-linker-options": [[492, "cmdoption-llvm-readelf-elf-linker-options", false], [493, "cmdoption-llvm-readobj-elf-linker-options", false]], "--elf-output-style": [[492, "cmdoption-llvm-readelf-elf-output-style", false], [493, "cmdoption-llvm-readobj-elf-output-style", false]], "--elf-section-groups": [[492, "cmdoption-llvm-readelf-elf-section-groups", false], [493, "cmdoption-llvm-readobj-elf-section-groups", false]], "--enable-deterministic-archives": [[487, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [497, "cmdoption-llvm-strip-enable-deterministic-archives", false]], "--enable-no-infs-fp-math": [[465, "cmdoption-llc-enable-no-infs-fp-math", false]], "--enable-no-nans-fp-math": [[465, "cmdoption-llc-enable-no-nans-fp-math", false]], "--enable-unsafe-fp-math": [[465, "cmdoption-llc-enable-unsafe-fp-math", false]], "--enable-var-scope": [[460, "cmdoption-FileCheck-enable-var-scope", false]], "--exe": [[498, "cmdoption-llvm-symbolizer-obj", false]], "--expand-relocs": [[492, "cmdoption-llvm-readelf-expand-relocs", false], [493, "cmdoption-llvm-readobj-expand-relocs", false]], "--exports-trie": [[488, "cmdoption-llvm-objdump-exports-trie", false]], "--extern-only": [[486, "cmdoption-llvm-nm-extern-only", false]], "--extract-dwo": [[487, "cmdoption-llvm-objcopy-extract-dwo", false]], "--extract-main-partition": [[487, "cmdoption-llvm-objcopy-extract-main-partition", false]], "--extract-partition": [[487, "cmdoption-llvm-objcopy-extract-partition", false]], "--fallback-debug-path": [[498, "cmdoption-llvm-symbolizer-fallback-debug-path", false]], "--fault-map-section": [[488, "cmdoption-llvm-objdump-fault-map-section", false]], "--file-headers": [[488, "cmdoption-llvm-objdump-f", false], [492, "cmdoption-llvm-readelf-file-headers", false], [493, "cmdoption-llvm-readobj-file-headers", false]], "--filter": [[464, "cmdoption-lit-filter", false]], "--find": [[478, "cmdoption-llvm-dwarfdump-f", false]], "--flat": [[462, "cmdoption-dsymutil-f", false]], "--format": [[468, "cmdoption-llvm-ar-format", false], [474, "cmdoption-llvm-cxxfilt-format", false], [486, "cmdoption-llvm-nm-format", false], [494, "cmdoption-llvm-size-format", false]], "--frame-pointer": [[465, "cmdoption-llc-frame-pointer", false]], "--full-contents": [[488, "cmdoption-llvm-objdump-s", false]], "--full-leading-addr": [[488, "cmdoption-llvm-objdump-full-leading-addr", false]], "--function-summaries": [[473, "cmdoption-llvm-cov-gcov-f", false]], "--functions": [[498, "cmdoption-llvm-symbolizer-functions", false]], "--gdb-index": [[478, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--globalize-symbol": [[487, "cmdoption-llvm-objcopy-globalize-symbol", false]], "--globalize-symbols": [[487, "cmdoption-llvm-objcopy-globalize-symbols", false]], "--gnu-hash-table": [[492, "cmdoption-llvm-readelf-gnu-hash-table", false], [493, "cmdoption-llvm-readobj-gnu-hash-table", false]], "--hash-filenames": [[473, "cmdoption-llvm-cov-gcov-x", false]], "--hash-symbols": [[492, "cmdoption-llvm-readelf-hash-symbols", false], [493, "cmdoption-llvm-readobj-hash-symbols", false]], "--hash-table": [[492, "cmdoption-llvm-readelf-hash-table", false], [493, "cmdoption-llvm-readobj-hash-table", false]], "--headers": [[488, "cmdoption-llvm-objdump-h", false], [492, "cmdoption-llvm-readelf-headers", false], [493, "cmdoption-llvm-readobj-headers", false]], "--help": [[464, "cmdoption-lit-h", false], [468, "cmdoption-llvm-ar-h", false], [473, "cmdoption-llvm-cov-gcov-help", false], [474, "cmdoption-llvm-cxxfilt-help", false], [478, "cmdoption-llvm-dwarfdump-h", false], [486, "cmdoption-llvm-nm-help", false], [487, "cmdoption-llvm-objcopy-help", false], [488, "cmdoption-llvm-objdump-help", false], [492, "cmdoption-llvm-readelf-help", false], [493, "cmdoption-llvm-readobj-help", false], [494, "cmdoption-llvm-size-help", false], [496, "cmdoption-llvm-strings-help", false], [497, "cmdoption-llvm-strip-help", false], [498, "cmdoption-llvm-symbolizer-help", false]], "--help-list": [[474, "cmdoption-llvm-cxxfilt-help-list", false], [478, "cmdoption-llvm-dwarfdump-help-list", false], [486, "cmdoption-llvm-nm-help-list", false], [492, "cmdoption-llvm-readelf-help-list", false], [493, "cmdoption-llvm-readobj-help-list", false], [494, "cmdoption-llvm-size-help-list", false], [496, "cmdoption-llvm-strings-help-list", false], [498, "cmdoption-llvm-symbolizer-help-list", false]], "--hex-dump": [[492, "cmdoption-llvm-readelf-hex-dump", false], [493, "cmdoption-llvm-readobj-hex-dump", false]], "--histogram": [[492, "cmdoption-llvm-readelf-elf-hash-histogram", false], [493, "cmdoption-llvm-readobj-elf-hash-histogram", false]], "--ignore-case": [[460, "cmdoption-FileCheck-ignore-case", false], [478, "cmdoption-llvm-dwarfdump-i", false]], "--ignore-debug-entry-values": [[484, "cmdoption-llvm-locstats-ignore-debug-entry-values", false]], "--implicit-check-not": [[460, "cmdoption-FileCheck-implicit-check-not", false]], "--indirect-symbols": [[488, "cmdoption-llvm-objdump-indirect-symbols", false]], "--info-plist": [[488, "cmdoption-llvm-objdump-info-plist", false]], "--inlines": [[498, "cmdoption-llvm-symbolizer-inlining", false]], "--inlining": [[498, "cmdoption-llvm-symbolizer-inlining", false]], "--input-file": [[460, "cmdoption-FileCheck-input-file", false]], "--input-target": [[487, "cmdoption-llvm-objcopy-input-target", false]], "--just-symbol-name": [[486, "cmdoption-llvm-nm-just-symbol-name", false]], "--keep-file-symbols": [[487, "cmdoption-llvm-objcopy-keep-file-symbols", false], [497, "cmdoption-llvm-strip-keep-file-symbols", false]], "--keep-global-symbol": [[487, "cmdoption-llvm-objcopy-keep-global-symbol", false]], "--keep-global-symbols": [[487, "cmdoption-llvm-objcopy-keep-global-symbols", false]], "--keep-section": [[487, "cmdoption-llvm-objcopy-keep-section", false], [497, "cmdoption-llvm-strip-keep-section", false]], "--keep-symbol": [[487, "cmdoption-llvm-objcopy-keep-symbol", false], [497, "cmdoption-llvm-strip-keep-symbol", false]], "--keep-symbols": [[487, "cmdoption-llvm-objcopy-keep-symbols", false]], "--lazy-bind": [[488, "cmdoption-llvm-objdump-lazy-bind", false]], "--line-numbers": [[488, "cmdoption-llvm-objdump-l", false]], "--link-opt-hints": [[488, "cmdoption-llvm-objdump-link-opt-hints", false]], "--load": [[465, "cmdoption-llc-load", false]], "--localize-hidden": [[487, "cmdoption-llvm-objcopy-localize-hidden", false]], "--localize-symbol": [[487, "cmdoption-llvm-objcopy-localize-symbol", false]], "--localize-symbols": [[487, "cmdoption-llvm-objcopy-localize-symbols", false]], "--long-file-names": [[473, "cmdoption-llvm-cov-gcov-l", false]], "--lookup": [[478, "cmdoption-llvm-dwarfdump-lookup", false]], "--macho": [[488, "cmdoption-llvm-objdump-m", false]], "--macho-data-in-code": [[493, "cmdoption-llvm-readobj-macho-data-in-code", false]], "--macho-dsymtab": [[493, "cmdoption-llvm-readobj-macho-dsymtab", false]], "--macho-indirect-symbols": [[493, "cmdoption-llvm-readobj-macho-indirect-symbols", false]], "--macho-linker-options": [[493, "cmdoption-llvm-readobj-macho-linker-options", false]], "--macho-segment": [[493, "cmdoption-llvm-readobj-macho-segment", false]], "--macho-version-min": [[493, "cmdoption-llvm-readobj-macho-version-min", false]], "--match-full-lines": [[460, "cmdoption-FileCheck-match-full-lines", false]], "--mattr": [[488, "cmdoption-llvm-objdump-mattr", false]], "--max-tests": [[464, "cmdoption-lit-max-tests", false]], "--max-time": [[464, "cmdoption-lit-max-time", false]], "--mcpu": [[488, "cmdoption-llvm-objdump-mcpu", false]], "--minimize": [[462, "cmdoption-dsymutil-z", false]], "--name": [[478, "cmdoption-llvm-dwarfdump-n", false]], "--needed-libs": [[492, "cmdoption-llvm-readelf-needed-libs", false], [493, "cmdoption-llvm-readobj-needed-libs", false]], "--new-symbol-visibility": [[487, "cmdoption-llvm-objcopy-new-symbol-visibility", false]], "--no-demangle": [[486, "cmdoption-llvm-nm-no-demangle", false], [498, "cmdoption-llvm-symbolizer-no-demangle", false]], "--no-dyldinfo": [[486, "cmdoption-llvm-nm-no-dyldinfo", false]], "--no-leading-addr": [[488, "cmdoption-llvm-objdump-no-leading-addr", false]], "--no-leading-headers": [[488, "cmdoption-llvm-objdump-no-leading-headers", false]], "--no-llvm-bc": [[486, "cmdoption-llvm-nm-no-llvm-bc", false]], "--no-odr": [[462, "cmdoption-dsymutil-no-odr", false]], "--no-output": [[462, "cmdoption-dsymutil-no-output", false], [473, "cmdoption-llvm-cov-gcov-n", false]], "--no-progress-bar": [[464, "cmdoption-lit-no-progress-bar", false]], "--no-show-raw-insn": [[488, "cmdoption-llvm-objdump-no-show-raw-insn", false]], "--no-sort": [[486, "cmdoption-llvm-nm-no-sort", false]], "--no-strip-all": [[497, "cmdoption-llvm-strip-no-strip-all", false]], "--no-swiftmodule-timestamp": [[462, "cmdoption-dsymutil-no-swiftmodule-timestamp", false]], "--no-symbolic-operands": [[488, "cmdoption-llvm-objdump-no-symbolic-operands", false]], "--no-weak": [[486, "cmdoption-llvm-nm-no-weak", false]], "--non-verbose": [[488, "cmdoption-llvm-objdump-non-verbose", false]], "--notes": [[492, "cmdoption-llvm-readelf-notes", false], [493, "cmdoption-llvm-readobj-notes", false]], "--num-shards": [[464, "cmdoption-lit-num-shards", false]], "--num-threads": [[462, "cmdoption-dsymutil-j", false]], "--numeric-sort": [[486, "cmdoption-llvm-nm-numeric-sort", false]], "--obj": [[498, "cmdoption-llvm-symbolizer-obj", false]], "--objc-meta-data": [[488, "cmdoption-llvm-objdump-objc-meta-data", false]], "--object-directory": [[473, "cmdoption-llvm-cov-gcov-o", false]], "--object-file": [[473, "cmdoption-llvm-cov-gcov-o", false]], "--only-formal-parameters": [[484, "cmdoption-llvm-locstats-only-formal-parameters", false]], "--only-keep-debug": [[487, "cmdoption-llvm-objcopy-only-keep-debug", false], [497, "cmdoption-llvm-strip-only-keep-debug", false]], "--only-section": [[487, "cmdoption-llvm-objcopy-only-section", false]], "--only-variables": [[484, "cmdoption-llvm-locstats-only-variables", false]], "--oso-prepend-path": [[462, "cmdoption-dsymutil-oso-prepend-path", false]], "--output-style": [[498, "cmdoption-llvm-symbolizer-output-style", false]], "--output-target": [[487, "cmdoption-llvm-objcopy-output-target", false]], "--papertrail": [[462, "cmdoption-dsymutil-papertrail", false]], "--param": [[464, "cmdoption-lit-D", false]], "--parent-recurse-depth": [[478, "cmdoption-llvm-dwarfdump-parent-recurse-depth", false]], "--path": [[464, "cmdoption-lit-path", false]], "--portability": [[486, "cmdoption-llvm-nm-portability", false]], "--prefix-alloc-sections": [[487, "cmdoption-llvm-objcopy-prefix-alloc-sections", false]], "--prefix-symbols": [[487, "cmdoption-llvm-objcopy-prefix-symbols", false]], "--preserve-dates": [[487, "cmdoption-llvm-objcopy-preserve-dates", false], [497, "cmdoption-llvm-strip-preserve-dates", false]], "--preserve-paths": [[473, "cmdoption-llvm-cov-gcov-p", false]], "--pretty-print": [[498, "cmdoption-llvm-symbolizer-pretty-print", false]], "--print-address": [[498, "cmdoption-llvm-symbolizer-print-address", false]], "--print-armap": [[486, "cmdoption-llvm-nm-print-armap", false]], "--print-file-name": [[486, "cmdoption-llvm-nm-print-file-name", false], [496, "cmdoption-llvm-strings-print-file-name", false]], "--print-imm-hex": [[488, "cmdoption-llvm-objdump-print-imm-hex", false]], "--print-machineinstrs": [[465, "cmdoption-llc-print-machineinstrs", false]], "--print-size": [[486, "cmdoption-llvm-nm-print-size", false]], "--print-source-context-lines": [[498, "cmdoption-llvm-symbolizer-print-source-context-lines", false]], "--private-header": [[488, "cmdoption-llvm-objdump-private-header", false]], "--private-headers": [[488, "cmdoption-llvm-objdump-p", false]], "--program-headers": [[492, "cmdoption-llvm-readelf-program-headers", false], [493, "cmdoption-llvm-readobj-program-headers", false]], "--quiet": [[464, "cmdoption-lit-q", false], [478, "cmdoption-llvm-dwarfdump-quiet", false]], "--radix": [[486, "cmdoption-llvm-nm-radix", false], [494, "cmdoption-llvm-size-radix", false], [496, "cmdoption-llvm-strings-radix", false]], "--raw-clang-ast": [[488, "cmdoption-llvm-objdump-raw-clang-ast", false]], "--raw-relr": [[492, "cmdoption-llvm-readelf-raw-relr", false], [493, "cmdoption-llvm-readobj-raw-relr", false]], "--rebase": [[488, "cmdoption-llvm-objdump-rebase", false]], "--recurse-depth": [[478, "cmdoption-llvm-dwarfdump-r", false]], "--redefine-sym": [[487, "cmdoption-llvm-objcopy-redefine-sym", false]], "--redefine-syms": [[487, "cmdoption-llvm-objcopy-redefine-syms", false]], "--regalloc": [[465, "cmdoption-llc-regalloc", false]], "--regex": [[478, "cmdoption-llvm-dwarfdump-x", false], [487, "cmdoption-llvm-objcopy-regex", false], [497, "cmdoption-llvm-strip-regex", false]], "--reloc": [[488, "cmdoption-llvm-objdump-r", false]], "--relocations": [[492, "cmdoption-llvm-readelf-relocations", false], [493, "cmdoption-llvm-readobj-relocations", false]], "--relocs": [[492, "cmdoption-llvm-readelf-relocations", false], [493, "cmdoption-llvm-readobj-relocations", false]], "--remove-section": [[487, "cmdoption-llvm-objcopy-remove-section", false], [497, "cmdoption-llvm-strip-remove-section", false]], "--rename-section": [[487, "cmdoption-llvm-objcopy-rename-section", false]], "--reverse-sort": [[486, "cmdoption-llvm-nm-reverse-sort", false]], "--run-shard": [[464, "cmdoption-lit-run-shard", false]], "--sd": [[493, "cmdoption-llvm-readobj-section-data", false]], "--section": [[488, "cmdoption-llvm-objdump-j", false]], "--section-data": [[492, "cmdoption-llvm-readelf-section-data", false], [493, "cmdoption-llvm-readobj-section-data", false]], "--section-groups": [[492, "cmdoption-llvm-readelf-elf-section-groups", false], [493, "cmdoption-llvm-readobj-elf-section-groups", false]], "--section-headers": [[488, "cmdoption-llvm-objdump-h", false], [492, "cmdoption-llvm-readelf-sections", false], [493, "cmdoption-llvm-readobj-sections", false]], "--section-mapping": [[492, "cmdoption-llvm-readelf-section-mapping", false], [493, "cmdoption-llvm-readobj-section-mapping", false]], "--section-relocations": [[492, "cmdoption-llvm-readelf-section-relocations", false], [493, "cmdoption-llvm-readobj-section-relocations", false]], "--section-symbols": [[492, "cmdoption-llvm-readelf-section-symbols", false], [493, "cmdoption-llvm-readobj-section-symbols", false]], "--sections": [[492, "cmdoption-llvm-readelf-sections", false], [493, "cmdoption-llvm-readobj-sections", false]], "--segments": [[492, "cmdoption-llvm-readelf-program-headers", false], [493, "cmdoption-llvm-readobj-program-headers", false]], "--set-section-alignment": [[487, "cmdoption-llvm-objcopy-set-section-alignment", false]], "--set-section-flags": [[487, "cmdoption-llvm-objcopy-set-section-flags", false]], "--set-start-addr": [[487, "cmdoption-llvm-objcopy-set-start-addr", false]], "--show-all": [[464, "cmdoption-lit-a", false]], "--show-children": [[478, "cmdoption-llvm-dwarfdump-c", false]], "--show-form": [[478, "cmdoption-llvm-dwarfdump-F", false]], "--show-lma": [[488, "cmdoption-llvm-objdump-show-lma", false]], "--show-parents": [[478, "cmdoption-llvm-dwarfdump-p", false]], "--show-suites": [[464, "cmdoption-lit-show-suites", false]], "--show-tests": [[464, "cmdoption-lit-show-tests", false]], "--show-unsupported": [[464, "cmdoption-lit-show-unsupported", false]], "--show-xfail": [[464, "cmdoption-lit-show-xfail", false]], "--shuffle": [[464, "cmdoption-lit-shuffle", false]], "--size-sort": [[486, "cmdoption-llvm-nm-size-sort", false]], "--source": [[488, "cmdoption-llvm-objdump-S", false]], "--special-syms": [[486, "cmdoption-llvm-nm-special-syms", false]], "--spiller": [[465, "cmdoption-llc-spiller", false]], "--split-dwo": [[487, "cmdoption-llvm-objcopy-split-dwo", false]], "--sr": [[493, "cmdoption-llvm-readobj-section-relocations", false]], "--st": [[493, "cmdoption-llvm-readobj-section-symbols", false]], "--stack-sizes": [[492, "cmdoption-llvm-readelf-stack-sizes", false], [493, "cmdoption-llvm-readobj-stack-sizes", false]], "--stackmap": [[492, "cmdoption-llvm-readelf-stackmap", false], [493, "cmdoption-llvm-readobj-stackmap", false]], "--start-address": [[488, "cmdoption-llvm-objdump-start-address", false]], "--statistics": [[478, "cmdoption-llvm-dwarfdump-statistics", false]], "--stats": [[465, "cmdoption-llc-stats", false]], "--stop-address": [[488, "cmdoption-llvm-objdump-stop-address", false]], "--strict-whitespace": [[460, "cmdoption-FileCheck-strict-whitespace", false]], "--string-dump": [[492, "cmdoption-llvm-readelf-string-dump", false], [493, "cmdoption-llvm-readobj-string-dump", false]], "--strip-all": [[487, "cmdoption-llvm-objcopy-strip-all", false], [497, "cmdoption-llvm-strip-strip-all", false]], "--strip-all-gnu": [[487, "cmdoption-llvm-objcopy-strip-all-gnu", false], [497, "cmdoption-llvm-strip-strip-all-gnu", false]], "--strip-debug": [[487, "cmdoption-llvm-objcopy-strip-debug", false], [497, "cmdoption-llvm-strip-strip-debug", false]], "--strip-dwo": [[487, "cmdoption-llvm-objcopy-strip-dwo", false]], "--strip-non-alloc": [[487, "cmdoption-llvm-objcopy-strip-non-alloc", false]], "--strip-sections": [[487, "cmdoption-llvm-objcopy-strip-sections", false], [497, "cmdoption-llvm-strip-strip-sections", false]], "--strip-symbol": [[487, "cmdoption-llvm-objcopy-strip-symbol", false], [497, "cmdoption-llvm-strip-strip-symbol", false]], "--strip-symbols": [[487, "cmdoption-llvm-objcopy-strip-symbols", false]], "--strip-underscore": [[474, "cmdoption-llvm-cxxfilt-strip-underscore", false]], "--strip-unneeded": [[487, "cmdoption-llvm-objcopy-strip-unneeded", false], [497, "cmdoption-llvm-strip-strip-unneeded", false]], "--strip-unneeded-symbol": [[487, "cmdoption-llvm-objcopy-strip-unneeded-symbol", false]], "--strip-unneeded-symbols": [[487, "cmdoption-llvm-objcopy-strip-unneeded-symbols", false]], "--succinct": [[464, "cmdoption-lit-s", false]], "--summarize-types": [[478, "cmdoption-llvm-dwarfdump-summarize-types", false]], "--symbols": [[492, "cmdoption-llvm-readelf-symbols", false], [493, "cmdoption-llvm-readobj-symbols", false]], "--syms": [[488, "cmdoption-llvm-objdump-t", false], [492, "cmdoption-llvm-readelf-symbols", false], [493, "cmdoption-llvm-readobj-symbols", false]], "--symtab": [[462, "cmdoption-dsymutil-s", false]], "--target": [[487, "cmdoption-llvm-objcopy-target", false]], "--time-passes": [[465, "cmdoption-llc-time-passes", false]], "--time-tests": [[464, "cmdoption-lit-time-tests", false]], "--toolchain": [[462, "cmdoption-dsymutil-toolchain", false]], "--totals": [[494, "cmdoption-llvm-size-totals", false]], "--triple": [[488, "cmdoption-llvm-objdump-triple", false]], "--types": [[474, "cmdoption-llvm-cxxfilt-types", false]], "--unconditional-branches": [[473, "cmdoption-llvm-cov-gcov-u", false]], "--undefined-only": [[486, "cmdoption-llvm-nm-undefined-only", false]], "--universal-headers": [[488, "cmdoption-llvm-objdump-universal-headers", false]], "--unwind": [[492, "cmdoption-llvm-readelf-unwind", false], [493, "cmdoption-llvm-readobj-unwind", false]], "--unwind-info": [[488, "cmdoption-llvm-objdump-u", false]], "--update": [[462, "cmdoption-dsymutil-u", false]], "--use-symbol-table": [[498, "cmdoption-llvm-symbolizer-use-symbol-table", false]], "--uuid": [[478, "cmdoption-llvm-dwarfdump-u", false]], "--verbose": [[462, "cmdoption-dsymutil-v", false], [464, "cmdoption-lit-v", false], [478, "cmdoption-llvm-dwarfdump-v", false], [498, "cmdoption-llvm-symbolizer-verbose", false]], "--verify": [[478, "cmdoption-llvm-dwarfdump-verify", false]], "--version": [[462, "cmdoption-dsymutil-version", false], [468, "cmdoption-llvm-ar-version", false], [474, "cmdoption-llvm-cxxfilt-version", false], [478, "cmdoption-llvm-dwarfdump-version", false], [486, "cmdoption-llvm-nm-version", false], [487, "cmdoption-llvm-objcopy-version", false], [488, "cmdoption-llvm-objdump-version", false], [492, "cmdoption-llvm-readelf-version", false], [493, "cmdoption-llvm-readobj-version", false], [494, "cmdoption-llvm-size-version", false], [496, "cmdoption-llvm-strings-version", false], [497, "cmdoption-llvm-strip-version", false], [498, "cmdoption-llvm-symbolizer-version", false]], "--version-info": [[492, "cmdoption-llvm-readelf-version-info", false], [493, "cmdoption-llvm-readobj-version-info", false]], "--vg": [[464, "cmdoption-lit-vg", false]], "--vg-arg": [[464, "cmdoption-lit-vg-arg", false]], "--vg-leak": [[464, "cmdoption-lit-vg-leak", false]], "--weak-bind": [[488, "cmdoption-llvm-objdump-weak-bind", false]], "--weaken": [[487, "cmdoption-llvm-objcopy-weaken", false]], "--weaken-symbol": [[487, "cmdoption-llvm-objcopy-weaken-symbol", false]], "--weaken-symbols": [[487, "cmdoption-llvm-objcopy-weaken-symbols", false]], "--wide": [[488, "cmdoption-llvm-objdump-w", false]], "--wildcard": [[487, "cmdoption-llvm-objcopy-wildcard", false], [497, "cmdoption-llvm-strip-wildcard", false]], "--without-aliases": [[486, "cmdoption-llvm-nm-without-aliases", false]], "--workers": [[464, "cmdoption-lit-j", false]], "--x86-asm-syntax": [[465, "cmdoption-llc-x86-asm-syntax", false], [488, "cmdoption-llvm-objdump-x86-asm-syntax", false]], "-_": [[474, "cmdoption-llvm-cxxfilt-strip-underscore", false]], "-a": [[464, "cmdoption-lit-a", false], [473, "cmdoption-llvm-cov-gcov-a", false], [478, "cmdoption-llvm-dwarfdump-a", false], [486, "cmdoption-llvm-nm-print-file-name", false], [486, "cmdoption-llvm-nm-debug-syms", false], [488, "cmdoption-llvm-objdump-a", false], [492, "cmdoption-llvm-readelf-arch-specific", false], [493, "cmdoption-llvm-readobj-arch-specific", false], [494, "cmdoption-llvm-size-A", false], [496, "cmdoption-llvm-strings-all", false], [498, "cmdoption-llvm-symbolizer-print-address", false]], "-all": [[489, "cmdoption-llvm-pdbutil-dump-all", false], [489, "cmdoption-llvm-pdbutil-pretty-all", false]], "-all-functions": [[490, "cmdoption-llvm-profdata-show-all-functions", false]], "-all-stats": [[485, "cmdoption-llvm-mca-all-stats", false]], "-all-views": [[485, "cmdoption-llvm-mca-all-views", false]], "-analysis-clustering": [[479, "cmdoption-llvm-exegesis-analysis-clustering", false]], "-analysis-clustering-epsilon": [[479, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", false]], "-analysis-clusters-output-file": [[479, "cmdoption-llvm-exegesis-analysis-clusters-output-file", false]], "-analysis-display-unstable-clusters": [[479, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", false]], "-analysis-inconsistencies-output-file": [[479, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", false]], "-analysis-inconsistency-epsilon": [[479, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", false]], "-analysis-numpoints": [[479, "cmdoption-llvm-exegesis-analysis-numpoints", false]], "-arch": [[473, "cmdoption-llvm-cov-export-arch", false], [473, "cmdoption-llvm-cov-report-arch", false], [473, "cmdoption-llvm-cov-show-arch", false]], "-archs": [[483, "cmdoption-llvm-lipo-archs", false]], "-asmparsernum": [[500, "cmdoption-tblgen-asmparsernum", false]], "-asmwriternum": [[500, "cmdoption-tblgen-asmwriternum", false]], "-b": [[473, "cmdoption-llvm-cov-gcov-b", false], [486, "cmdoption-llvm-nm-B", false], [487, "cmdoption-llvm-objcopy-binary-architecture", false], [494, "cmdoption-llvm-size-B", false]], "-benchmarks-file": [[479, "cmdoption-llvm-exegesis-benchmarks-file", false]], "-binary": [[490, "cmdoption-llvm-profdata-merge-binary", false]], "-block-range": [[489, "cmdoption-llvm-pdbutil-bytes-block-range", false]], "-bottleneck-analysis": [[485, "cmdoption-llvm-mca-bottleneck-analysis", false]], "-byte-range": [[489, "cmdoption-llvm-pdbutil-bytes-byte-range", false]], "-c": [[473, "cmdoption-llvm-cov-gcov-c", false], [478, "cmdoption-llvm-dwarfdump-c", false], [486, "cmdoption-llvm-nm-demangle", false], [488, "cmdoption-llvm-objdump-C", false], [492, "cmdoption-llvm-readelf-demangle", false], [493, "cmdoption-llvm-readobj-demangle", false], [498, "cmdoption-llvm-symbolizer-demangle", false]], "-chunks": [[489, "cmdoption-llvm-pdbutil-bytes-chunks", false]], "-class": [[500, "cmdoption-tblgen-class", false]], "-class-definitions": [[489, "cmdoption-llvm-pdbutil-pretty-class-definitions", false]], "-class-order": [[489, "cmdoption-llvm-pdbutil-pretty-class-order", false]], "-class-recurse-depth": [[489, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false]], "-classes": [[489, "cmdoption-llvm-pdbutil-pretty-classes", false]], "-code-model": [[466, "cmdoption-lli-code-model", false]], "-color-output": [[489, "cmdoption-llvm-pdbutil-pretty-color-output", false]], "-compilands": [[489, "cmdoption-llvm-pdbutil-pretty-compilands", false]], "-counts": [[490, "cmdoption-llvm-profdata-show-counts", false]], "-create": [[483, "cmdoption-llvm-lipo-create", false]], "-cs": [[490, "cmdoption-llvm-profdata-overlap-cs", false]], "-d": [[464, "cmdoption-lit-D", false], [482, "cmdoption-llvm-link-d", false], [486, "cmdoption-llvm-nm-dynamic", false], [487, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [488, "cmdoption-llvm-objdump-D", false], [488, "cmdoption-llvm-objdump-d", false], [492, "cmdoption-llvm-readelf-dynamic-table", false], [493, "cmdoption-llvm-readobj-dynamic-table", false], [494, "cmdoption-llvm-size-d", false], [497, "cmdoption-llvm-strip-enable-deterministic-archives", false]], "-d#<numvar>": [[460, "cmdoption-FileCheck-D-NUMVAR", false]], "-d<var": [[460, "cmdoption-FileCheck-D-VAR", false]], "-debug": [[499, "cmdoption-opt-debug", false]], "-dependents": [[489, "cmdoption-llvm-pdbutil-dump-dependents", false]], "-disable-excess-fp-precision": [[466, "cmdoption-lli-disable-excess-fp-precision", false]], "-disable-inlining": [[499, "cmdoption-opt-disable-inlining", false]], "-disable-opt": [[499, "cmdoption-opt-disable-opt", false]], "-disable-post-ra-scheduler": [[466, "cmdoption-lli-disable-post-RA-scheduler", false]], "-disable-spill-fusing": [[466, "cmdoption-lli-disable-spill-fusing", false]], "-dispatch": [[485, "cmdoption-llvm-mca-dispatch", false]], "-dispatch-stats": [[485, "cmdoption-llvm-mca-dispatch-stats", false]], "-dump": [[470, "cmdoption-llvm-bcanalyzer-dump", false]], "-dump-json": [[500, "cmdoption-tblgen-dump-json", false]], "-e": [[492, "cmdoption-llvm-readelf-headers", false], [493, "cmdoption-llvm-readobj-headers", false], [498, "cmdoption-llvm-symbolizer-obj", false]], "-ec": [[489, "cmdoption-llvm-pdbutil-bytes-ec", false]], "-enable-no-infs-fp-math": [[466, "cmdoption-lli-enable-no-infs-fp-math", false]], "-enable-no-nans-fp-math": [[466, "cmdoption-lli-enable-no-nans-fp-math", false]], "-enable-unsafe-fp-math": [[466, "cmdoption-lli-enable-unsafe-fp-math", false]], "-enums": [[489, "cmdoption-llvm-pdbutil-pretty-enums", false]], "-exclude-compilands": [[489, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false]], "-exclude-symbols": [[489, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false]], "-exclude-types": [[489, "cmdoption-llvm-pdbutil-pretty-exclude-types", false]], "-externals": [[489, "cmdoption-llvm-pdbutil-pretty-externals", false]], "-f": [[462, "cmdoption-dsymutil-f", false], [473, "cmdoption-llvm-cov-gcov-f", false], [478, "cmdoption-llvm-dwarfdump-F", false], [478, "cmdoption-llvm-dwarfdump-f", false], [482, "cmdoption-llvm-link-f", false], [486, "cmdoption-llvm-nm-format", false], [487, "cmdoption-llvm-objcopy-target", false], [488, "cmdoption-llvm-objdump-f", false], [490, "cmdoption-llvm-profdata-merge-input-files", false], [496, "cmdoption-llvm-strings-print-file-name", false], [498, "cmdoption-llvm-symbolizer-functions", false], [499, "cmdoption-opt-f", false]], "-failure-mode": [[490, "cmdoption-llvm-profdata-merge-failure-mode", false]], "-fake-argv0": [[466, "cmdoption-lli-fake-argv0", false]], "-files": [[489, "cmdoption-llvm-pdbutil-bytes-files", false], [489, "cmdoption-llvm-pdbutil-dump-files", false]], "-filetype": [[465, "cmdoption-llc-filetype", false]], "-force-interpreter": [[466, "cmdoption-lli-force-interpreter", false]], "-format": [[473, "cmdoption-llvm-cov-export-format", false], [473, "cmdoption-llvm-cov-show-format", false]], "-fpm": [[489, "cmdoption-llvm-pdbutil-bytes-fpm", false]], "-function": [[490, "cmdoption-llvm-profdata-overlap-function", false], [490, "cmdoption-llvm-profdata-show-function", false]], "-g": [[486, "cmdoption-llvm-nm-extern-only", false], [487, "cmdoption-llvm-objcopy-strip-debug", false], [488, "cmdoption-llvm-objdump-g", false], [492, "cmdoption-llvm-readelf-elf-section-groups", false], [493, "cmdoption-llvm-readobj-elf-section-groups", false], [497, "cmdoption-llvm-strip-strip-debug", false]], "-gcc": [[490, "cmdoption-llvm-profdata-merge-gcc", false]], "-gen-asm-matcher": [[500, "cmdoption-tblgen-gen-asm-matcher", false]], "-gen-asm-writer": [[500, "cmdoption-tblgen-gen-asm-writer", false]], "-gen-dag-isel": [[500, "cmdoption-tblgen-gen-dag-isel", false]], "-gen-dfa-packetizer": [[500, "cmdoption-tblgen-gen-dfa-packetizer", false]], "-gen-disassembler": [[500, "cmdoption-tblgen-gen-disassembler", false]], "-gen-emitter": [[500, "cmdoption-tblgen-gen-emitter", false]], "-gen-enhanced-disassembly-info": [[500, "cmdoption-tblgen-gen-enhanced-disassembly-info", false]], "-gen-exegesis": [[500, "cmdoption-tblgen-gen-exegesis", false]], "-gen-fast-isel": [[500, "cmdoption-tblgen-gen-fast-isel", false]], "-gen-instr-info": [[500, "cmdoption-tblgen-gen-instr-info", false]], "-gen-intrinsic-enums": [[500, "cmdoption-tblgen-gen-intrinsic-enums", false]], "-gen-intrinsic-impl": [[500, "cmdoption-tblgen-gen-intrinsic-impl", false]], "-gen-pseudo-lowering": [[500, "cmdoption-tblgen-gen-pseudo-lowering", false]], "-gen-register-info": [[500, "cmdoption-tblgen-gen-register-info", false]], "-gen-subtarget": [[500, "cmdoption-tblgen-gen-subtarget", false]], "-gen-tgt-intrinsic": [[500, "cmdoption-tblgen-gen-tgt-intrinsic", false]], "-global-extras": [[489, "cmdoption-llvm-pdbutil-dump-global-extras", false]], "-globals": [[489, "cmdoption-llvm-pdbutil-dump-globals", false], [489, "cmdoption-llvm-pdbutil-pretty-globals", false]], "-h": [[464, "cmdoption-lit-h", false], [468, "cmdoption-llvm-ar-h", false], [474, "cmdoption-llvm-cxxfilt-help", false], [478, "cmdoption-llvm-dwarfdump-h", false], [483, "cmdoption-llvm-lipo-help", false], [486, "cmdoption-llvm-nm-help", false], [487, "cmdoption-llvm-objcopy-help", false], [488, "cmdoption-llvm-objdump-h", false], [492, "cmdoption-llvm-readelf-file-headers", false], [493, "cmdoption-llvm-readobj-file-headers", false], [494, "cmdoption-llvm-size-help", false], [496, "cmdoption-llvm-strings-help", false], [497, "cmdoption-llvm-strip-help", false], [498, "cmdoption-llvm-symbolizer-help", false]], "-help": [[460, "cmdoption-FileCheck-help", false], [465, "cmdoption-llc-help", false], [466, "cmdoption-lli-help", false], [470, "cmdoption-llvm-bcanalyzer-help", false], [479, "cmdoption-llvm-exegesis-help", false], [482, "cmdoption-llvm-link-help", false], [483, "cmdoption-llvm-lipo-help", false], [485, "cmdoption-llvm-mca-help", false], [490, "cmdoption-llvm-profdata-merge-help", false], [490, "cmdoption-llvm-profdata-overlap-help", false], [490, "cmdoption-llvm-profdata-show-help", false], [499, "cmdoption-opt-help", false], [500, "cmdoption-tblgen-help", false]], "-i": [[478, "cmdoption-llvm-dwarfdump-i", false], [487, "cmdoption-llvm-objcopy-input-target", false], [492, "cmdoption-llvm-readelf-elf-hash-histogram", false], [493, "cmdoption-llvm-readobj-elf-hash-histogram", false], [498, "cmdoption-llvm-symbolizer-inlining", false], [500, "cmdoption-tblgen-I", false]], "-id": [[489, "cmdoption-llvm-pdbutil-bytes-id", false]], "-id-data": [[489, "cmdoption-llvm-pdbutil-dump-id-data", false]], "-id-extras": [[489, "cmdoption-llvm-pdbutil-dump-id-extras", false]], "-id-index": [[489, "cmdoption-llvm-pdbutil-dump-id-index", false]], "-ids": [[489, "cmdoption-llvm-pdbutil-dump-ids", false]], "-ignore-filename-regex": [[473, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [473, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [473, "cmdoption-llvm-cov-show-ignore-filename-regex", false]], "-ignore-invalid-sched-class": [[479, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", false]], "-il": [[489, "cmdoption-llvm-pdbutil-dump-il", false]], "-include-compilands": [[489, "cmdoption-llvm-pdbutil-pretty-include-compilands", false]], "-include-symbols": [[489, "cmdoption-llvm-pdbutil-pretty-include-symbols", false]], "-include-types": [[489, "cmdoption-llvm-pdbutil-pretty-include-types", false]], "-info": [[483, "cmdoption-llvm-lipo-info", false]], "-input-files": [[490, "cmdoption-llvm-profdata-merge-input-files", false]], "-instr": [[490, "cmdoption-llvm-profdata-merge-instr", false], [490, "cmdoption-llvm-profdata-show-instr", false]], "-instruction-info": [[485, "cmdoption-llvm-mca-instruction-info", false]], "-instruction-tables": [[485, "cmdoption-llvm-mca-instruction-tables", false]], "-iterations": [[485, "cmdoption-llvm-mca-iterations", false]], "-j": [[462, "cmdoption-dsymutil-j", false], [464, "cmdoption-lit-j", false], [473, "cmdoption-llvm-cov-export-num-threads", false], [473, "cmdoption-llvm-cov-show-num-threads", false], [486, "cmdoption-llvm-nm-just-symbol-name", false], [487, "cmdoption-llvm-objcopy-only-section", false], [488, "cmdoption-llvm-objdump-j", false], [490, "cmdoption-llvm-profdata-merge-num-threads", false]], "-jit-enable-eh": [[466, "cmdoption-lli-jit-enable-eh", false]], "-join-liveintervals": [[466, "cmdoption-lli-join-liveintervals", false]], "-k": [[487, "cmdoption-llvm-objcopy-keep-symbol", false], [497, "cmdoption-llvm-strip-keep-symbol", false]], "-l": [[473, "cmdoption-llvm-cov-gcov-l", false], [487, "cmdoption-llvm-objcopy-localize-symbol", false], [488, "cmdoption-llvm-objdump-l", false], [489, "cmdoption-llvm-pdbutil-dump-l", false], [492, "cmdoption-llvm-readelf-program-headers", false], [493, "cmdoption-llvm-readobj-program-headers", false], [494, "cmdoption-llvm-size-l", false]], "-line-coverage-gt": [[473, "cmdoption-llvm-cov-show-line-coverage-gt", false]], "-line-coverage-lt": [[473, "cmdoption-llvm-cov-show-line-coverage-lt", false]], "-lines": [[489, "cmdoption-llvm-pdbutil-pretty-lines", false]], "-list-below-cutoff": [[490, "cmdoption-llvm-profdata-show-list-below-cutoff", false]], "-load": [[466, "cmdoption-lli-load", false], [499, "cmdoption-opt-load", false]], "-load-address": [[489, "cmdoption-llvm-pdbutil-pretty-load-address", false]], "-lqueue": [[485, "cmdoption-llvm-mca-lqueue", false]], "-lto-pass-remarks-filter": [[589, "cmdoption-lto-pass-remarks-filter", false]], "-lto-pass-remarks-format": [[589, "cmdoption-lto-pass-remarks-format", false]], "-lto-pass-remarks-hotness-threshold": [[589, "cmdoption-lto-pass-remarks-hotness-threshold", false]], "-lto-pass-remarks-output": [[589, "cmdoption-lto-pass-remarks-output", false]], "-lto-pass-remarks-with-hotness": [[589, "cmdoption-lto-pass-remarks-with-hotness", false]], "-m": [[468, "cmdoption-llvm-ar-M", false], [486, "cmdoption-llvm-nm-print-armap", false], [486, "cmdoption-llvm-nm-m", false], [488, "cmdoption-llvm-objdump-M", false], [488, "cmdoption-llvm-objdump-m", false], [494, "cmdoption-llvm-size-m", false]], "-march": [[465, "cmdoption-llc-march", false], [466, "cmdoption-lli-march", false], [485, "cmdoption-llvm-mca-march", false]], "-mattr": [[465, "cmdoption-llc-mattr", false], [466, "cmdoption-lli-mattr", false]], "-max-configs-per-opcode": [[479, "cmdoption-llvm-exegesis-max-configs-per-opcode", false]], "-mcpu": [[465, "cmdoption-llc-mcpu", false], [466, "cmdoption-lli-mcpu", false], [479, "cmdoption-llvm-exegesis-mcpu", false], [485, "cmdoption-llvm-mca-mcpu", false]], "-meabi": [[465, "cmdoption-llc-meabi", false]], "-memop-sizes": [[490, "cmdoption-llvm-profdata-show-memop-sizes", false]], "-min-class-padding": [[489, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false]], "-min-class-padding-imm": [[489, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false]], "-min-type-size": [[489, "cmdoption-llvm-pdbutil-pretty-min-type-size", false]], "-mod": [[489, "cmdoption-llvm-pdbutil-bytes-mod", false]], "-mode": [[479, "cmdoption-llvm-exegesis-mode", false]], "-modi": [[489, "cmdoption-llvm-pdbutil-bytes-modi", false], [489, "cmdoption-llvm-pdbutil-dump-modi", false]], "-module-syms": [[489, "cmdoption-llvm-pdbutil-pretty-module-syms", false]], "-modules": [[489, "cmdoption-llvm-pdbutil-dump-modules", false]], "-mtriple": [[465, "cmdoption-llc-mtriple", false], [466, "cmdoption-lli-mtriple", false], [485, "cmdoption-llvm-mca-mtriple", false]], "-n": [[473, "cmdoption-llvm-cov-gcov-n", false], [478, "cmdoption-llvm-dwarfdump-n", false], [486, "cmdoption-llvm-nm-numeric-sort", false], [487, "cmdoption-llvm-objcopy-strip-symbol", false], [492, "cmdoption-llvm-readelf-notes", false], [493, "cmdoption-llvm-readobj-notes", false], [496, "cmdoption-llvm-strings-bytes", false], [497, "cmdoption-llvm-strip-strip-symbol", false]], "-name": [[473, "cmdoption-llvm-cov-show-name", false]], "-name-map": [[489, "cmdoption-llvm-pdbutil-bytes-name-map", false]], "-name-regex": [[473, "cmdoption-llvm-cov-show-name-regex", false]], "-name-whitelist": [[473, "cmdoption-llvm-cov-show-name-whitelist", false]], "-no-compiler-generated": [[489, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false]], "-no-enum-definitions": [[489, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false]], "-no-system-libs": [[489, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false]], "-noalias": [[485, "cmdoption-llvm-mca-noalias", false]], "-nodetails": [[470, "cmdoption-llvm-bcanalyzer-nodetails", false]], "-nozero-initialized-in-bss": [[466, "cmdoption-lli-nozero-initialized-in-bss", false]], "-num-repetitions": [[479, "cmdoption-llvm-exegesis-num-repetitions", false]], "-num-threads": [[473, "cmdoption-llvm-cov-export-num-threads", false], [473, "cmdoption-llvm-cov-show-num-threads", false], [490, "cmdoption-llvm-profdata-merge-num-threads", false]], "-o": [[462, "cmdoption-dsymutil-o", false], [465, "cmdoption-llc-O", false], [465, "cmdoption-llc-o", false], [473, "cmdoption-llvm-cov-gcov-o", false], [475, "cmdoption-llvm-cxxmap-output", false], [478, "cmdoption-llvm-dwarfdump-o", false], [482, "cmdoption-llvm-link-o", false], [485, "cmdoption-llvm-mca-o", false], [486, "cmdoption-llvm-nm-print-file-name", false], [487, "cmdoption-llvm-objcopy-output-target", false], [490, "cmdoption-llvm-profdata-merge-output", false], [490, "cmdoption-llvm-profdata-overlap-o", false], [490, "cmdoption-llvm-profdata-show-output", false], [494, "cmdoption-llvm-size-o", false], [495, "cmdoption-llvm-stress-o", false], [497, "cmdoption-llvm-strip-o", false], [499, "cmdoption-opt-o", false], [500, "cmdoption-tblgen-o", false]], "-opcode-index": [[479, "cmdoption-llvm-exegesis-opcode-index", false]], "-opcode-name": [[479, "cmdoption-llvm-exegesis-opcode-name", false]], "-opt-remarks-filename": [[589, "cmdoption-opt-remarks-filename", false]], "-opt-remarks-filter": [[589, "cmdoption-opt-remarks-filter", false]], "-opt-remarks-format": [[589, "cmdoption-opt-remarks-format", false]], "-opt-remarks-with-hotness": [[589, "cmdoption-opt-remarks-with-hotness", false]], "-output": [[475, "cmdoption-llvm-cxxmap-output", false], [490, "cmdoption-llvm-profdata-merge-output", false], [490, "cmdoption-llvm-profdata-show-output", false]], "-output-asm-variant": [[485, "cmdoption-llvm-mca-output-asm-variant", false]], "-output-dir": [[473, "cmdoption-llvm-cov-show-output-dir", false]], "-p": [[473, "cmdoption-llvm-cov-gcov-p", false], [478, "cmdoption-llvm-dwarfdump-p", false], [486, "cmdoption-llvm-nm-portability", false], [486, "cmdoption-llvm-nm-no-sort", false], [487, "cmdoption-llvm-objcopy-preserve-dates", false], [488, "cmdoption-llvm-objdump-p", false], [492, "cmdoption-llvm-readelf-string-dump", false], [493, "cmdoption-llvm-readobj-string-dump", false], [497, "cmdoption-llvm-strip-preserve-dates", false], [498, "cmdoption-llvm-symbolizer-pretty-print", false], [499, "cmdoption-opt-p", false]], "-pass-remarks": [[589, "cmdoption-pass-remarks", false]], "-pass-remarks-analysis": [[589, "cmdoption-pass-remarks-analysis", false]], "-pass-remarks-filter": [[589, "cmdoption-pass-remarks-filter", false]], "-pass-remarks-format": [[589, "cmdoption-pass-remarks-format", false]], "-pass-remarks-hotness-threshold": [[589, "cmdoption-pass-remarks-hotness-threshold", false]], "-pass-remarks-missed": [[589, "cmdoption-pass-remarks-missed", false]], "-pass-remarks-output": [[589, "cmdoption-pass-remarks-output", false]], "-pass-remarks-with-hotness": [[589, "cmdoption-pass-remarks-with-hotness", false]], "-path-equivalence": [[473, "cmdoption-llvm-cov-show-path-equivalence", false]], "-pdb": [[489, "cmdoption-llvm-pdbutil-merge-pdb", false], [489, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "-pre-ra-sched": [[466, "cmdoption-lli-pre-RA-sched", false]], "-print-enums": [[500, "cmdoption-tblgen-print-enums", false]], "-print-imm-hex": [[485, "cmdoption-llvm-mca-print-imm-hex", false]], "-print-records": [[500, "cmdoption-tblgen-print-records", false]], "-print-sets": [[500, "cmdoption-tblgen-print-sets", false]], "-public-extras": [[489, "cmdoption-llvm-pdbutil-dump-public-extras", false]], "-publics": [[489, "cmdoption-llvm-pdbutil-dump-publics", false]], "-q": [[464, "cmdoption-lit-q", false]], "-r": [[475, "cmdoption-llvm-cxxmap-remapping-file", false], [478, "cmdoption-llvm-dwarfdump-r", false], [486, "cmdoption-llvm-nm-reverse-sort", false], [487, "cmdoption-llvm-objcopy-remove-section", false], [488, "cmdoption-llvm-objdump-R", false], [488, "cmdoption-llvm-objdump-r", false], [490, "cmdoption-llvm-profdata-merge-remapping-file", false], [492, "cmdoption-llvm-readelf-relocations", false], [493, "cmdoption-llvm-readobj-relocations", false], [497, "cmdoption-llvm-strip-remove-section", false]], "-regalloc": [[466, "cmdoption-lli-regalloc", false]], "-region-coverage-gt": [[473, "cmdoption-llvm-cov-show-region-coverage-gt", false]], "-region-coverage-lt": [[473, "cmdoption-llvm-cov-show-region-coverage-lt", false]], "-register-file-size": [[485, "cmdoption-llvm-mca-register-file-size", false]], "-register-file-stats": [[485, "cmdoption-llvm-mca-register-file-stats", false]], "-relocation-model": [[466, "cmdoption-lli-relocation-model", false]], "-remapping-file": [[475, "cmdoption-llvm-cxxmap-remapping-file", false], [490, "cmdoption-llvm-profdata-merge-remapping-file", false]], "-remarks-section": [[465, "cmdoption-llc-remarks-section", false]], "-replace": [[483, "cmdoption-llvm-lipo-replace", false]], "-resource-pressure": [[485, "cmdoption-llvm-mca-resource-pressure", false]], "-retire-stats": [[485, "cmdoption-llvm-mca-retire-stats", false]], "-s": [[462, "cmdoption-dsymutil-s", false], [464, "cmdoption-lit-s", false], [474, "cmdoption-llvm-cxxfilt-format", false], [482, "cmdoption-llvm-link-S", false], [486, "cmdoption-llvm-nm-print-size", false], [486, "cmdoption-llvm-nm-s", false], [487, "cmdoption-llvm-objcopy-strip-all", false], [488, "cmdoption-llvm-objdump-S", false], [488, "cmdoption-llvm-objdump-s", false], [492, "cmdoption-llvm-readelf-sections", false], [492, "cmdoption-llvm-readelf-symbols", false], [493, "cmdoption-llvm-readobj-sections", false], [493, "cmdoption-llvm-readobj-sections", false], [497, "cmdoption-llvm-strip-strip-all", false], [498, "cmdoption-llvm-symbolizer-basenames", false], [499, "cmdoption-opt-S", false]], "-sample": [[490, "cmdoption-llvm-profdata-merge-sample", false], [490, "cmdoption-llvm-profdata-show-sample", false]], "-sc": [[489, "cmdoption-llvm-pdbutil-bytes-sc", false]], "-scheduler-stats": [[485, "cmdoption-llvm-mca-scheduler-stats", false]], "-section-contribs": [[489, "cmdoption-llvm-pdbutil-dump-section-contribs", false]], "-section-headers": [[489, "cmdoption-llvm-pdbutil-dump-section-headers", false]], "-section-map": [[489, "cmdoption-llvm-pdbutil-dump-section-map", false]], "-seed": [[495, "cmdoption-llvm-stress-seed", false]], "-segalign": [[483, "cmdoption-llvm-lipo-segalign", false]], "-show-encoding": [[485, "cmdoption-llvm-mca-show-encoding", false]], "-show-expansions": [[473, "cmdoption-llvm-cov-show-show-expansions", false]], "-show-functions": [[473, "cmdoption-llvm-cov-report-show-functions", false]], "-show-instantiation-summary": [[473, "cmdoption-llvm-cov-report-show-instantiation-summary", false]], "-show-instantiations": [[473, "cmdoption-llvm-cov-show-show-instantiations", false]], "-show-line-counts": [[473, "cmdoption-llvm-cov-show-show-line-counts", false]], "-show-line-counts-or-regions": [[473, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false]], "-show-regions": [[473, "cmdoption-llvm-cov-show-show-regions", false]], "-showcs": [[490, "cmdoption-llvm-profdata-show-showcs", false]], "-size": [[495, "cmdoption-llvm-stress-size", false]], "-skip-expansions": [[473, "cmdoption-llvm-cov-export-skip-expansions", false]], "-skip-functions": [[473, "cmdoption-llvm-cov-export-skip-functions", false]], "-sm": [[489, "cmdoption-llvm-pdbutil-bytes-sm", false]], "-snippets-file": [[479, "cmdoption-llvm-exegesis-snippets-file", false]], "-soft-float": [[466, "cmdoption-lli-soft-float", false]], "-sparse": [[490, "cmdoption-llvm-profdata-merge-sparse", false]], "-spiller": [[466, "cmdoption-lli-spiller", false]], "-split-chunks": [[489, "cmdoption-llvm-pdbutil-bytes-split-chunks", false]], "-squeue": [[485, "cmdoption-llvm-mca-squeue", false]], "-stack-size-section": [[465, "cmdoption-llc-stack-size-section", false]], "-stats": [[466, "cmdoption-lli-stats", false], [499, "cmdoption-opt-stats", false]], "-stream-blocks": [[489, "cmdoption-llvm-pdbutil-dump-stream-blocks", false]], "-stream-data": [[489, "cmdoption-llvm-pdbutil-bytes-stream-data", false]], "-streams": [[489, "cmdoption-llvm-pdbutil-dump-streams", false]], "-string-table": [[489, "cmdoption-llvm-pdbutil-dump-string-table", false]], "-strip-debug": [[499, "cmdoption-opt-strip-debug", false]], "-summary": [[489, "cmdoption-llvm-pdbutil-dump-summary", false]], "-summary-only": [[473, "cmdoption-llvm-cov-export-summary-only", false]], "-sym-data": [[489, "cmdoption-llvm-pdbutil-dump-sym-data", false]], "-sym-types": [[489, "cmdoption-llvm-pdbutil-pretty-sym-types", false]], "-symbol-order": [[489, "cmdoption-llvm-pdbutil-pretty-symbol-order", false]], "-symbols": [[489, "cmdoption-llvm-pdbutil-dump-symbols", false]], "-syms": [[489, "cmdoption-llvm-pdbutil-bytes-syms", false]], "-t": [[474, "cmdoption-llvm-cxxfilt-types", false], [486, "cmdoption-llvm-nm-radix", false], [488, "cmdoption-llvm-objdump-t", false], [493, "cmdoption-llvm-readobj-symbols", false], [494, "cmdoption-llvm-size-totals", false], [496, "cmdoption-llvm-strings-radix", false]], "-tab-size": [[473, "cmdoption-llvm-cov-show-tab-size", false]], "-text": [[490, "cmdoption-llvm-profdata-merge-text", false], [490, "cmdoption-llvm-profdata-show-text", false]], "-thin": [[483, "cmdoption-llvm-lipo-thin", false]], "-time-passes": [[466, "cmdoption-lli-time-passes", false], [499, "cmdoption-opt-time-passes", false]], "-timeline": [[485, "cmdoption-llvm-mca-timeline", false]], "-timeline-max-cycles": [[485, "cmdoption-llvm-mca-timeline-max-cycles", false]], "-timeline-max-iterations": [[485, "cmdoption-llvm-mca-timeline-max-iterations", false]], "-topn": [[490, "cmdoption-llvm-profdata-show-topn", false]], "-type": [[489, "cmdoption-llvm-pdbutil-bytes-type", false]], "-type-data": [[489, "cmdoption-llvm-pdbutil-dump-type-data", false]], "-type-extras": [[489, "cmdoption-llvm-pdbutil-dump-type-extras", false]], "-type-index": [[489, "cmdoption-llvm-pdbutil-dump-type-index", false]], "-type-server": [[489, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "-typedefs": [[489, "cmdoption-llvm-pdbutil-pretty-typedefs", false]], "-types": [[489, "cmdoption-llvm-pdbutil-dump-types", false], [489, "cmdoption-llvm-pdbutil-pretty-types", false]], "-u": [[462, "cmdoption-dsymutil-u", false], [473, "cmdoption-llvm-cov-gcov-u", false], [478, "cmdoption-llvm-dwarfdump-u", false], [486, "cmdoption-llvm-nm-defined-only", false], [486, "cmdoption-llvm-nm-undefined-only", false], [487, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [488, "cmdoption-llvm-objdump-u", false], [492, "cmdoption-llvm-readelf-unwind", false], [493, "cmdoption-llvm-readobj-unwind", false], [497, "cmdoption-llvm-strip-disable-deterministic-archives", false]], "-use-color": [[473, "cmdoption-llvm-cov-report-use-color", false], [473, "cmdoption-llvm-cov-show-use-color", false]], "-v": [[460, "cmdoption-FileCheck-v", false], [462, "cmdoption-dsymutil-v", false], [464, "cmdoption-lit-v", false], [478, "cmdoption-llvm-dwarfdump-v", false], [482, "cmdoption-llvm-link-v", false], [486, "cmdoption-llvm-nm-numeric-sort", false], [487, "cmdoption-llvm-objcopy-version", false], [492, "cmdoption-llvm-readelf-version-info", false], [493, "cmdoption-llvm-readobj-version-info", false], [497, "cmdoption-llvm-strip-version", false]], "-value-cutoff": [[490, "cmdoption-llvm-profdata-overlap-value-cutoff", false], [490, "cmdoption-llvm-profdata-show-value-cutoff", false]], "-verify": [[470, "cmdoption-llvm-bcanalyzer-verify", false]], "-verify-each": [[499, "cmdoption-opt-verify-each", false]], "-verify_arch": [[483, "cmdoption-llvm-lipo-verify_arch", false]], "-version": [[460, "cmdoption-FileCheck-version", false], [466, "cmdoption-lli-version", false], [473, "cmdoption-llvm-cov-gcov-version", false], [483, "cmdoption-llvm-lipo-version", false], [500, "cmdoption-tblgen-version", false]], "-vv": [[460, "cmdoption-FileCheck-vv", false], [464, "cmdoption-lit-vv", false]], "-w": [[486, "cmdoption-llvm-nm-no-weak", false], [487, "cmdoption-llvm-objcopy-weaken-symbol", false], [487, "cmdoption-llvm-objcopy-wildcard", false], [488, "cmdoption-llvm-objdump-w", false], [497, "cmdoption-llvm-strip-wildcard", false]], "-wambiguous": [[475, "cmdoption-llvm-cxxmap-Wambiguous", false]], "-weighted-input": [[490, "cmdoption-llvm-profdata-merge-weighted-input", false]], "-wincomplete": [[475, "cmdoption-llvm-cxxmap-Wincomplete", false]], "-x": [[473, "cmdoption-llvm-cov-gcov-x", false], [478, "cmdoption-llvm-dwarfdump-x", false], [486, "cmdoption-llvm-nm-x", false], [487, "cmdoption-llvm-objcopy-discard-locals", false], [487, "cmdoption-llvm-objcopy-discard-all", false], [488, "cmdoption-llvm-objdump-x", false], [492, "cmdoption-llvm-readelf-hex-dump", false], [493, "cmdoption-llvm-readobj-hex-dump", false], [494, "cmdoption-llvm-size-x", false], [497, "cmdoption-llvm-strip-discard-locals", false], [497, "cmdoption-llvm-strip-discard-all", false]], "-x86-asm-syntax": [[466, "cmdoption-lli-x86-asm-syntax", false]], "-xdemangler": [[473, "cmdoption-llvm-cov-show-Xdemangler", false]], "-xme": [[489, "cmdoption-llvm-pdbutil-dump-xme", false]], "-xmi": [[489, "cmdoption-llvm-pdbutil-dump-xmi", false]], "-y": [[462, "cmdoption-dsymutil-y", false]], "-z": [[462, "cmdoption-dsymutil-z", false], [488, "cmdoption-llvm-objdump-z", false]], "-{passname}": [[499, "cmdoption-opt-passname", false]], "@<file>": [[468, "cmdoption-llvm-ar-arg-FILE", false], [474, "cmdoption-llvm-cxxfilt-arg-FILE", false], [478, "cmdoption-llvm-dwarfdump-arg-FILE", false], [486, "cmdoption-llvm-nm-arg-FILE", false], [487, "cmdoption-llvm-objcopy-arg-FILE", false], [488, "cmdoption-llvm-objdump-arg-FILE", false], [492, "cmdoption-llvm-readelf-arg-FILE", false], [493, "cmdoption-llvm-readobj-arg-FILE", false], [494, "cmdoption-llvm-size-arg-FILE", false], [496, "cmdoption-llvm-strings-arg-FILE", false], [497, "cmdoption-llvm-strip-arg-FILE", false], [498, "cmdoption-llvm-symbolizer-arg-FILE", false]], "a": [[468, "cmdoption-llvm-ar-arg-a", false]], "addlib": [[468, "cmdoption-llvm-ar-arg-ADDLIB", false]], "addmod": [[468, "cmdoption-llvm-ar-arg-ADDMOD", false]], "att": [[488, "cmdoption-llvm-objdump-arg-att", false]], "b": [[468, "cmdoption-llvm-ar-arg-b", false]], "c": [[468, "cmdoption-llvm-ar-arg-c", false]], "create": [[468, "cmdoption-llvm-ar-arg-CREATE", false]], "createthin": [[468, "cmdoption-llvm-ar-arg-CREATETHIN", false]], "d": [[468, "cmdoption-llvm-ar-arg-D", false], [468, "cmdoption-llvm-ar-arg-d", false]], "delete": [[468, "cmdoption-llvm-ar-arg-DELETE", false]], "end": [[468, "cmdoption-llvm-ar-arg-END", false]], "i": [[468, "cmdoption-llvm-ar-arg-i", false]], "intel": [[488, "cmdoption-llvm-objdump-arg-intel", false]], "l": [[468, "cmdoption-llvm-ar-arg-L", false]], "m": [[468, "cmdoption-llvm-ar-arg-m", false]], "n": [[468, "cmdoption-llvm-ar-arg-N", false]], "o": [[468, "cmdoption-llvm-ar-arg-O", false], [468, "cmdoption-llvm-ar-arg-o", false]], "option de ligne de commande": [[589, "cmdoption-lto-pass-remarks-filter", false], [589, "cmdoption-lto-pass-remarks-format", false], [589, "cmdoption-lto-pass-remarks-hotness-threshold", false], [589, "cmdoption-lto-pass-remarks-output", false], [589, "cmdoption-lto-pass-remarks-with-hotness", false], [589, "cmdoption-opt-remarks-filename", false], [589, "cmdoption-opt-remarks-filter", false], [589, "cmdoption-opt-remarks-format", false], [589, "cmdoption-opt-remarks-with-hotness", false], [589, "cmdoption-pass-remarks", false], [589, "cmdoption-pass-remarks-analysis", false], [589, "cmdoption-pass-remarks-filter", false], [589, "cmdoption-pass-remarks-format", false], [589, "cmdoption-pass-remarks-hotness-threshold", false], [589, "cmdoption-pass-remarks-missed", false], [589, "cmdoption-pass-remarks-output", false], [589, "cmdoption-pass-remarks-with-hotness", false]], "option de ligne de commande dsymutil": [[462, "cmdoption-dsymutil-arch", false], [462, "cmdoption-dsymutil-dump-debug-map", false], [462, "cmdoption-dsymutil-f", false], [462, "cmdoption-dsymutil-j", false], [462, "cmdoption-dsymutil-no-odr", false], [462, "cmdoption-dsymutil-no-output", false], [462, "cmdoption-dsymutil-no-swiftmodule-timestamp", false], [462, "cmdoption-dsymutil-o", false], [462, "cmdoption-dsymutil-oso-prepend-path", false], [462, "cmdoption-dsymutil-papertrail", false], [462, "cmdoption-dsymutil-s", false], [462, "cmdoption-dsymutil-toolchain", false], [462, "cmdoption-dsymutil-u", false], [462, "cmdoption-dsymutil-v", false], [462, "cmdoption-dsymutil-version", false], [462, "cmdoption-dsymutil-y", false], [462, "cmdoption-dsymutil-z", false]], "option de ligne de commande filecheck": [[460, "cmdoption-FileCheck-D-NUMVAR", false], [460, "cmdoption-FileCheck-D-VAR", false], [460, "cmdoption-FileCheck-allow-deprecated-dag-overlap", false], [460, "cmdoption-FileCheck-check-prefix", false], [460, "cmdoption-FileCheck-check-prefixes", false], [460, "cmdoption-FileCheck-color", false], [460, "cmdoption-FileCheck-dump-input", false], [460, "cmdoption-FileCheck-dump-input-on-failure", false], [460, "cmdoption-FileCheck-enable-var-scope", false], [460, "cmdoption-FileCheck-help", false], [460, "cmdoption-FileCheck-ignore-case", false], [460, "cmdoption-FileCheck-implicit-check-not", false], [460, "cmdoption-FileCheck-input-file", false], [460, "cmdoption-FileCheck-match-full-lines", false], [460, "cmdoption-FileCheck-strict-whitespace", false], [460, "cmdoption-FileCheck-v", false], [460, "cmdoption-FileCheck-version", false], [460, "cmdoption-FileCheck-vv", false]], "option de ligne de commande lit": [[464, "cmdoption-lit-D", false], [464, "cmdoption-lit-a", false], [464, "cmdoption-lit-config-prefix", false], [464, "cmdoption-lit-debug", false], [464, "cmdoption-lit-filter", false], [464, "cmdoption-lit-h", false], [464, "cmdoption-lit-j", false], [464, "cmdoption-lit-max-tests", false], [464, "cmdoption-lit-max-time", false], [464, "cmdoption-lit-no-progress-bar", false], [464, "cmdoption-lit-num-shards", false], [464, "cmdoption-lit-path", false], [464, "cmdoption-lit-q", false], [464, "cmdoption-lit-run-shard", false], [464, "cmdoption-lit-s", false], [464, "cmdoption-lit-show-suites", false], [464, "cmdoption-lit-show-tests", false], [464, "cmdoption-lit-show-unsupported", false], [464, "cmdoption-lit-show-xfail", false], [464, "cmdoption-lit-shuffle", false], [464, "cmdoption-lit-time-tests", false], [464, "cmdoption-lit-v", false], [464, "cmdoption-lit-vg", false], [464, "cmdoption-lit-vg-arg", false], [464, "cmdoption-lit-vg-leak", false], [464, "cmdoption-lit-vv", false]], "option de ligne de commande llc": [[465, "cmdoption-llc-O", false], [465, "cmdoption-llc-disable-excess-fp-precision", false], [465, "cmdoption-llc-enable-no-infs-fp-math", false], [465, "cmdoption-llc-enable-no-nans-fp-math", false], [465, "cmdoption-llc-enable-unsafe-fp-math", false], [465, "cmdoption-llc-filetype", false], [465, "cmdoption-llc-frame-pointer", false], [465, "cmdoption-llc-help", false], [465, "cmdoption-llc-load", false], [465, "cmdoption-llc-march", false], [465, "cmdoption-llc-mattr", false], [465, "cmdoption-llc-mcpu", false], [465, "cmdoption-llc-meabi", false], [465, "cmdoption-llc-mtriple", false], [465, "cmdoption-llc-o", false], [465, "cmdoption-llc-print-machineinstrs", false], [465, "cmdoption-llc-regalloc", false], [465, "cmdoption-llc-remarks-section", false], [465, "cmdoption-llc-spiller", false], [465, "cmdoption-llc-stack-size-section", false], [465, "cmdoption-llc-stats", false], [465, "cmdoption-llc-time-passes", false], [465, "cmdoption-llc-x86-asm-syntax", false]], "option de ligne de commande lli": [[466, "cmdoption-lli-code-model", false], [466, "cmdoption-lli-disable-excess-fp-precision", false], [466, "cmdoption-lli-disable-post-RA-scheduler", false], [466, "cmdoption-lli-disable-spill-fusing", false], [466, "cmdoption-lli-enable-no-infs-fp-math", false], [466, "cmdoption-lli-enable-no-nans-fp-math", false], [466, "cmdoption-lli-enable-unsafe-fp-math", false], [466, "cmdoption-lli-fake-argv0", false], [466, "cmdoption-lli-force-interpreter", false], [466, "cmdoption-lli-help", false], [466, "cmdoption-lli-jit-enable-eh", false], [466, "cmdoption-lli-join-liveintervals", false], [466, "cmdoption-lli-load", false], [466, "cmdoption-lli-march", false], [466, "cmdoption-lli-mattr", false], [466, "cmdoption-lli-mcpu", false], [466, "cmdoption-lli-mtriple", false], [466, "cmdoption-lli-nozero-initialized-in-bss", false], [466, "cmdoption-lli-pre-RA-sched", false], [466, "cmdoption-lli-regalloc", false], [466, "cmdoption-lli-relocation-model", false], [466, "cmdoption-lli-soft-float", false], [466, "cmdoption-lli-spiller", false], [466, "cmdoption-lli-stats", false], [466, "cmdoption-lli-time-passes", false], [466, "cmdoption-lli-version", false], [466, "cmdoption-lli-x86-asm-syntax", false]], "option de ligne de commande llvm-ar": [[468, "cmdoption-llvm-ar-M", false], [468, "cmdoption-llvm-ar-arg-ADDLIB", false], [468, "cmdoption-llvm-ar-arg-ADDMOD", false], [468, "cmdoption-llvm-ar-arg-CREATE", false], [468, "cmdoption-llvm-ar-arg-CREATETHIN", false], [468, "cmdoption-llvm-ar-arg-D", false], [468, "cmdoption-llvm-ar-arg-DELETE", false], [468, "cmdoption-llvm-ar-arg-END", false], [468, "cmdoption-llvm-ar-arg-FILE", false], [468, "cmdoption-llvm-ar-arg-L", false], [468, "cmdoption-llvm-ar-arg-N", false], [468, "cmdoption-llvm-ar-arg-O", false], [468, "cmdoption-llvm-ar-arg-P", false], [468, "cmdoption-llvm-ar-arg-S", false], [468, "cmdoption-llvm-ar-arg-SAVE", false], [468, "cmdoption-llvm-ar-arg-T", false], [468, "cmdoption-llvm-ar-arg-U", false], [468, "cmdoption-llvm-ar-arg-V", false], [468, "cmdoption-llvm-ar-arg-a", false], [468, "cmdoption-llvm-ar-arg-b", false], [468, "cmdoption-llvm-ar-arg-c", false], [468, "cmdoption-llvm-ar-arg-d", false], [468, "cmdoption-llvm-ar-arg-i", false], [468, "cmdoption-llvm-ar-arg-m", false], [468, "cmdoption-llvm-ar-arg-o", false], [468, "cmdoption-llvm-ar-arg-p", false], [468, "cmdoption-llvm-ar-arg-q", false], [468, "cmdoption-llvm-ar-arg-r", false], [468, "cmdoption-llvm-ar-arg-s", false], [468, "cmdoption-llvm-ar-arg-u", false], [468, "cmdoption-llvm-ar-arg-v", false], [468, "cmdoption-llvm-ar-arg-x", false], [468, "cmdoption-llvm-ar-format", false], [468, "cmdoption-llvm-ar-h", false], [468, "cmdoption-llvm-ar-version", false]], "option de ligne de commande llvm-bcanalyzer": [[470, "cmdoption-llvm-bcanalyzer-dump", false], [470, "cmdoption-llvm-bcanalyzer-help", false], [470, "cmdoption-llvm-bcanalyzer-nodetails", false], [470, "cmdoption-llvm-bcanalyzer-verify", false]], "option de ligne de commande llvm-cov-export": [[473, "cmdoption-llvm-cov-export-arch", false], [473, "cmdoption-llvm-cov-export-format", false], [473, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [473, "cmdoption-llvm-cov-export-num-threads", false], [473, "cmdoption-llvm-cov-export-skip-expansions", false], [473, "cmdoption-llvm-cov-export-skip-functions", false], [473, "cmdoption-llvm-cov-export-summary-only", false]], "option de ligne de commande llvm-cov-gcov": [[473, "cmdoption-llvm-cov-gcov-a", false], [473, "cmdoption-llvm-cov-gcov-b", false], [473, "cmdoption-llvm-cov-gcov-c", false], [473, "cmdoption-llvm-cov-gcov-f", false], [473, "cmdoption-llvm-cov-gcov-help", false], [473, "cmdoption-llvm-cov-gcov-l", false], [473, "cmdoption-llvm-cov-gcov-n", false], [473, "cmdoption-llvm-cov-gcov-o", false], [473, "cmdoption-llvm-cov-gcov-p", false], [473, "cmdoption-llvm-cov-gcov-u", false], [473, "cmdoption-llvm-cov-gcov-version", false], [473, "cmdoption-llvm-cov-gcov-x", false]], "option de ligne de commande llvm-cov-report": [[473, "cmdoption-llvm-cov-report-arch", false], [473, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [473, "cmdoption-llvm-cov-report-show-functions", false], [473, "cmdoption-llvm-cov-report-show-instantiation-summary", false], [473, "cmdoption-llvm-cov-report-use-color", false]], "option de ligne de commande llvm-cov-show": [[473, "cmdoption-llvm-cov-show-Xdemangler", false], [473, "cmdoption-llvm-cov-show-arch", false], [473, "cmdoption-llvm-cov-show-format", false], [473, "cmdoption-llvm-cov-show-ignore-filename-regex", false], [473, "cmdoption-llvm-cov-show-line-coverage-gt", false], [473, "cmdoption-llvm-cov-show-line-coverage-lt", false], [473, "cmdoption-llvm-cov-show-name", false], [473, "cmdoption-llvm-cov-show-name-regex", false], [473, "cmdoption-llvm-cov-show-name-whitelist", false], [473, "cmdoption-llvm-cov-show-num-threads", false], [473, "cmdoption-llvm-cov-show-output-dir", false], [473, "cmdoption-llvm-cov-show-path-equivalence", false], [473, "cmdoption-llvm-cov-show-region-coverage-gt", false], [473, "cmdoption-llvm-cov-show-region-coverage-lt", false], [473, "cmdoption-llvm-cov-show-show-expansions", false], [473, "cmdoption-llvm-cov-show-show-instantiations", false], [473, "cmdoption-llvm-cov-show-show-line-counts", false], [473, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false], [473, "cmdoption-llvm-cov-show-show-regions", false], [473, "cmdoption-llvm-cov-show-tab-size", false], [473, "cmdoption-llvm-cov-show-use-color", false]], "option de ligne de commande llvm-cxxfilt": [[474, "cmdoption-llvm-cxxfilt-arg-FILE", false], [474, "cmdoption-llvm-cxxfilt-format", false], [474, "cmdoption-llvm-cxxfilt-help", false], [474, "cmdoption-llvm-cxxfilt-help-list", false], [474, "cmdoption-llvm-cxxfilt-strip-underscore", false], [474, "cmdoption-llvm-cxxfilt-types", false], [474, "cmdoption-llvm-cxxfilt-version", false]], "option de ligne de commande llvm-cxxmap": [[475, "cmdoption-llvm-cxxmap-Wambiguous", false], [475, "cmdoption-llvm-cxxmap-Wincomplete", false], [475, "cmdoption-llvm-cxxmap-output", false], [475, "cmdoption-llvm-cxxmap-remapping-file", false]], "option de ligne de commande llvm-dwarfdump": [[478, "cmdoption-llvm-dwarfdump-F", false], [478, "cmdoption-llvm-dwarfdump-a", false], [478, "cmdoption-llvm-dwarfdump-arch", false], [478, "cmdoption-llvm-dwarfdump-arg-FILE", false], [478, "cmdoption-llvm-dwarfdump-c", false], [478, "cmdoption-llvm-dwarfdump-color", false], [478, "cmdoption-llvm-dwarfdump-debug-abbrev", false], [478, "cmdoption-llvm-dwarfdump-diff", false], [478, "cmdoption-llvm-dwarfdump-f", false], [478, "cmdoption-llvm-dwarfdump-h", false], [478, "cmdoption-llvm-dwarfdump-help-list", false], [478, "cmdoption-llvm-dwarfdump-i", false], [478, "cmdoption-llvm-dwarfdump-lookup", false], [478, "cmdoption-llvm-dwarfdump-n", false], [478, "cmdoption-llvm-dwarfdump-o", false], [478, "cmdoption-llvm-dwarfdump-p", false], [478, "cmdoption-llvm-dwarfdump-parent-recurse-depth", false], [478, "cmdoption-llvm-dwarfdump-quiet", false], [478, "cmdoption-llvm-dwarfdump-r", false], [478, "cmdoption-llvm-dwarfdump-statistics", false], [478, "cmdoption-llvm-dwarfdump-summarize-types", false], [478, "cmdoption-llvm-dwarfdump-u", false], [478, "cmdoption-llvm-dwarfdump-v", false], [478, "cmdoption-llvm-dwarfdump-verify", false], [478, "cmdoption-llvm-dwarfdump-version", false], [478, "cmdoption-llvm-dwarfdump-x", false]], "option de ligne de commande llvm-exegesis": [[479, "cmdoption-llvm-exegesis-analysis-clustering", false], [479, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", false], [479, "cmdoption-llvm-exegesis-analysis-clusters-output-file", false], [479, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", false], [479, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", false], [479, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", false], [479, "cmdoption-llvm-exegesis-analysis-numpoints", false], [479, "cmdoption-llvm-exegesis-benchmarks-file", false], [479, "cmdoption-llvm-exegesis-dump-object-to-disk", false], [479, "cmdoption-llvm-exegesis-help", false], [479, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", false], [479, "cmdoption-llvm-exegesis-max-configs-per-opcode", false], [479, "cmdoption-llvm-exegesis-mcpu", false], [479, "cmdoption-llvm-exegesis-mode", false], [479, "cmdoption-llvm-exegesis-num-repetitions", false], [479, "cmdoption-llvm-exegesis-opcode-index", false], [479, "cmdoption-llvm-exegesis-opcode-name", false], [479, "cmdoption-llvm-exegesis-snippets-file", false]], "option de ligne de commande llvm-link": [[482, "cmdoption-llvm-link-S", false], [482, "cmdoption-llvm-link-d", false], [482, "cmdoption-llvm-link-f", false], [482, "cmdoption-llvm-link-help", false], [482, "cmdoption-llvm-link-o", false], [482, "cmdoption-llvm-link-v", false]], "option de ligne de commande llvm-lipo": [[483, "cmdoption-llvm-lipo-archs", false], [483, "cmdoption-llvm-lipo-create", false], [483, "cmdoption-llvm-lipo-help", false], [483, "cmdoption-llvm-lipo-info", false], [483, "cmdoption-llvm-lipo-replace", false], [483, "cmdoption-llvm-lipo-segalign", false], [483, "cmdoption-llvm-lipo-thin", false], [483, "cmdoption-llvm-lipo-verify_arch", false], [483, "cmdoption-llvm-lipo-version", false]], "option de ligne de commande llvm-locstats": [[484, "cmdoption-llvm-locstats-draw-plot", false], [484, "cmdoption-llvm-locstats-ignore-debug-entry-values", false], [484, "cmdoption-llvm-locstats-only-formal-parameters", false], [484, "cmdoption-llvm-locstats-only-variables", false]], "option de ligne de commande llvm-mca": [[485, "cmdoption-llvm-mca-all-stats", false], [485, "cmdoption-llvm-mca-all-views", false], [485, "cmdoption-llvm-mca-bottleneck-analysis", false], [485, "cmdoption-llvm-mca-dispatch", false], [485, "cmdoption-llvm-mca-dispatch-stats", false], [485, "cmdoption-llvm-mca-help", false], [485, "cmdoption-llvm-mca-instruction-info", false], [485, "cmdoption-llvm-mca-instruction-tables", false], [485, "cmdoption-llvm-mca-iterations", false], [485, "cmdoption-llvm-mca-lqueue", false], [485, "cmdoption-llvm-mca-march", false], [485, "cmdoption-llvm-mca-mcpu", false], [485, "cmdoption-llvm-mca-mtriple", false], [485, "cmdoption-llvm-mca-noalias", false], [485, "cmdoption-llvm-mca-o", false], [485, "cmdoption-llvm-mca-output-asm-variant", false], [485, "cmdoption-llvm-mca-print-imm-hex", false], [485, "cmdoption-llvm-mca-register-file-size", false], [485, "cmdoption-llvm-mca-register-file-stats", false], [485, "cmdoption-llvm-mca-resource-pressure", false], [485, "cmdoption-llvm-mca-retire-stats", false], [485, "cmdoption-llvm-mca-scheduler-stats", false], [485, "cmdoption-llvm-mca-show-encoding", false], [485, "cmdoption-llvm-mca-squeue", false], [485, "cmdoption-llvm-mca-timeline", false], [485, "cmdoption-llvm-mca-timeline-max-cycles", false], [485, "cmdoption-llvm-mca-timeline-max-iterations", false]], "option de ligne de commande llvm-nm": [[486, "cmdoption-llvm-nm-B", false], [486, "cmdoption-llvm-nm-add-dyldinfo", false], [486, "cmdoption-llvm-nm-arch", false], [486, "cmdoption-llvm-nm-arg-FILE", false], [486, "cmdoption-llvm-nm-debug-syms", false], [486, "cmdoption-llvm-nm-defined-only", false], [486, "cmdoption-llvm-nm-demangle", false], [486, "cmdoption-llvm-nm-dyldinfo-only", false], [486, "cmdoption-llvm-nm-dynamic", false], [486, "cmdoption-llvm-nm-extern-only", false], [486, "cmdoption-llvm-nm-format", false], [486, "cmdoption-llvm-nm-help", false], [486, "cmdoption-llvm-nm-help-list", false], [486, "cmdoption-llvm-nm-just-symbol-name", false], [486, "cmdoption-llvm-nm-m", false], [486, "cmdoption-llvm-nm-no-demangle", false], [486, "cmdoption-llvm-nm-no-dyldinfo", false], [486, "cmdoption-llvm-nm-no-llvm-bc", false], [486, "cmdoption-llvm-nm-no-sort", false], [486, "cmdoption-llvm-nm-no-weak", false], [486, "cmdoption-llvm-nm-numeric-sort", false], [486, "cmdoption-llvm-nm-portability", false], [486, "cmdoption-llvm-nm-print-armap", false], [486, "cmdoption-llvm-nm-print-file-name", false], [486, "cmdoption-llvm-nm-print-size", false], [486, "cmdoption-llvm-nm-radix", false], [486, "cmdoption-llvm-nm-reverse-sort", false], [486, "cmdoption-llvm-nm-s", false], [486, "cmdoption-llvm-nm-size-sort", false], [486, "cmdoption-llvm-nm-special-syms", false], [486, "cmdoption-llvm-nm-undefined-only", false], [486, "cmdoption-llvm-nm-version", false], [486, "cmdoption-llvm-nm-without-aliases", false], [486, "cmdoption-llvm-nm-x", false]], "option de ligne de commande llvm-objcopy": [[487, "cmdoption-llvm-objcopy-add-gnu-debuglink", false], [487, "cmdoption-llvm-objcopy-add-section", false], [487, "cmdoption-llvm-objcopy-add-symbol", false], [487, "cmdoption-llvm-objcopy-allow-broken-links", false], [487, "cmdoption-llvm-objcopy-arg-FILE", false], [487, "cmdoption-llvm-objcopy-binary-architecture", false], [487, "cmdoption-llvm-objcopy-build-id-link-dir", false], [487, "cmdoption-llvm-objcopy-build-id-link-input", false], [487, "cmdoption-llvm-objcopy-build-id-link-output", false], [487, "cmdoption-llvm-objcopy-change-start", false], [487, "cmdoption-llvm-objcopy-compress-debug-sections", false], [487, "cmdoption-llvm-objcopy-decompress-debug-sections", false], [487, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [487, "cmdoption-llvm-objcopy-discard-all", false], [487, "cmdoption-llvm-objcopy-discard-locals", false], [487, "cmdoption-llvm-objcopy-dump-section", false], [487, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [487, "cmdoption-llvm-objcopy-extract-dwo", false], [487, "cmdoption-llvm-objcopy-extract-main-partition", false], [487, "cmdoption-llvm-objcopy-extract-partition", false], [487, "cmdoption-llvm-objcopy-globalize-symbol", false], [487, "cmdoption-llvm-objcopy-globalize-symbols", false], [487, "cmdoption-llvm-objcopy-help", false], [487, "cmdoption-llvm-objcopy-input-target", false], [487, "cmdoption-llvm-objcopy-keep-file-symbols", false], [487, "cmdoption-llvm-objcopy-keep-global-symbol", false], [487, "cmdoption-llvm-objcopy-keep-global-symbols", false], [487, "cmdoption-llvm-objcopy-keep-section", false], [487, "cmdoption-llvm-objcopy-keep-symbol", false], [487, "cmdoption-llvm-objcopy-keep-symbols", false], [487, "cmdoption-llvm-objcopy-localize-hidden", false], [487, "cmdoption-llvm-objcopy-localize-symbol", false], [487, "cmdoption-llvm-objcopy-localize-symbols", false], [487, "cmdoption-llvm-objcopy-new-symbol-visibility", false], [487, "cmdoption-llvm-objcopy-only-keep-debug", false], [487, "cmdoption-llvm-objcopy-only-section", false], [487, "cmdoption-llvm-objcopy-output-target", false], [487, "cmdoption-llvm-objcopy-prefix-alloc-sections", false], [487, "cmdoption-llvm-objcopy-prefix-symbols", false], [487, "cmdoption-llvm-objcopy-preserve-dates", false], [487, "cmdoption-llvm-objcopy-redefine-sym", false], [487, "cmdoption-llvm-objcopy-redefine-syms", false], [487, "cmdoption-llvm-objcopy-regex", false], [487, "cmdoption-llvm-objcopy-remove-section", false], [487, "cmdoption-llvm-objcopy-rename-section", false], [487, "cmdoption-llvm-objcopy-set-section-alignment", false], [487, "cmdoption-llvm-objcopy-set-section-flags", false], [487, "cmdoption-llvm-objcopy-set-start-addr", false], [487, "cmdoption-llvm-objcopy-split-dwo", false], [487, "cmdoption-llvm-objcopy-strip-all", false], [487, "cmdoption-llvm-objcopy-strip-all-gnu", false], [487, "cmdoption-llvm-objcopy-strip-debug", false], [487, "cmdoption-llvm-objcopy-strip-dwo", false], [487, "cmdoption-llvm-objcopy-strip-non-alloc", false], [487, "cmdoption-llvm-objcopy-strip-sections", false], [487, "cmdoption-llvm-objcopy-strip-symbol", false], [487, "cmdoption-llvm-objcopy-strip-symbols", false], [487, "cmdoption-llvm-objcopy-strip-unneeded", false], [487, "cmdoption-llvm-objcopy-strip-unneeded-symbol", false], [487, "cmdoption-llvm-objcopy-strip-unneeded-symbols", false], [487, "cmdoption-llvm-objcopy-target", false], [487, "cmdoption-llvm-objcopy-version", false], [487, "cmdoption-llvm-objcopy-weaken", false], [487, "cmdoption-llvm-objcopy-weaken-symbol", false], [487, "cmdoption-llvm-objcopy-weaken-symbols", false], [487, "cmdoption-llvm-objcopy-wildcard", false]], "option de ligne de commande llvm-objdump": [[488, "cmdoption-llvm-objdump-C", false], [488, "cmdoption-llvm-objdump-D", false], [488, "cmdoption-llvm-objdump-M", false], [488, "cmdoption-llvm-objdump-R", false], [488, "cmdoption-llvm-objdump-S", false], [488, "cmdoption-llvm-objdump-a", false], [488, "cmdoption-llvm-objdump-adjust-vma", false], [488, "cmdoption-llvm-objdump-arch", false], [488, "cmdoption-llvm-objdump-arch-name", false], [488, "cmdoption-llvm-objdump-archive-member-offsets", false], [488, "cmdoption-llvm-objdump-arg-FILE", false], [488, "cmdoption-llvm-objdump-arg-att", false], [488, "cmdoption-llvm-objdump-arg-intel", false], [488, "cmdoption-llvm-objdump-bind", false], [488, "cmdoption-llvm-objdump-cfg", false], [488, "cmdoption-llvm-objdump-d", false], [488, "cmdoption-llvm-objdump-data-in-code", false], [488, "cmdoption-llvm-objdump-dis-symname", false], [488, "cmdoption-llvm-objdump-disassemble-functions", false], [488, "cmdoption-llvm-objdump-dsym", false], [488, "cmdoption-llvm-objdump-dwarf", false], [488, "cmdoption-llvm-objdump-dylib-id", false], [488, "cmdoption-llvm-objdump-dylibs-used", false], [488, "cmdoption-llvm-objdump-exports-trie", false], [488, "cmdoption-llvm-objdump-f", false], [488, "cmdoption-llvm-objdump-fault-map-section", false], [488, "cmdoption-llvm-objdump-full-leading-addr", false], [488, "cmdoption-llvm-objdump-g", false], [488, "cmdoption-llvm-objdump-h", false], [488, "cmdoption-llvm-objdump-help", false], [488, "cmdoption-llvm-objdump-indirect-symbols", false], [488, "cmdoption-llvm-objdump-info-plist", false], [488, "cmdoption-llvm-objdump-j", false], [488, "cmdoption-llvm-objdump-l", false], [488, "cmdoption-llvm-objdump-lazy-bind", false], [488, "cmdoption-llvm-objdump-link-opt-hints", false], [488, "cmdoption-llvm-objdump-m", false], [488, "cmdoption-llvm-objdump-mattr", false], [488, "cmdoption-llvm-objdump-mcpu", false], [488, "cmdoption-llvm-objdump-no-leading-addr", false], [488, "cmdoption-llvm-objdump-no-leading-headers", false], [488, "cmdoption-llvm-objdump-no-show-raw-insn", false], [488, "cmdoption-llvm-objdump-no-symbolic-operands", false], [488, "cmdoption-llvm-objdump-non-verbose", false], [488, "cmdoption-llvm-objdump-objc-meta-data", false], [488, "cmdoption-llvm-objdump-p", false], [488, "cmdoption-llvm-objdump-print-imm-hex", false], [488, "cmdoption-llvm-objdump-private-header", false], [488, "cmdoption-llvm-objdump-r", false], [488, "cmdoption-llvm-objdump-raw-clang-ast", false], [488, "cmdoption-llvm-objdump-rebase", false], [488, "cmdoption-llvm-objdump-s", false], [488, "cmdoption-llvm-objdump-show-lma", false], [488, "cmdoption-llvm-objdump-start-address", false], [488, "cmdoption-llvm-objdump-stop-address", false], [488, "cmdoption-llvm-objdump-t", false], [488, "cmdoption-llvm-objdump-triple", false], [488, "cmdoption-llvm-objdump-u", false], [488, "cmdoption-llvm-objdump-universal-headers", false], [488, "cmdoption-llvm-objdump-version", false], [488, "cmdoption-llvm-objdump-w", false], [488, "cmdoption-llvm-objdump-weak-bind", false], [488, "cmdoption-llvm-objdump-x", false], [488, "cmdoption-llvm-objdump-x86-asm-syntax", false], [488, "cmdoption-llvm-objdump-z", false]], "option de ligne de commande llvm-pdbutil-bytes": [[489, "cmdoption-llvm-pdbutil-bytes-block-range", false], [489, "cmdoption-llvm-pdbutil-bytes-byte-range", false], [489, "cmdoption-llvm-pdbutil-bytes-chunks", false], [489, "cmdoption-llvm-pdbutil-bytes-ec", false], [489, "cmdoption-llvm-pdbutil-bytes-files", false], [489, "cmdoption-llvm-pdbutil-bytes-fpm", false], [489, "cmdoption-llvm-pdbutil-bytes-id", false], [489, "cmdoption-llvm-pdbutil-bytes-mod", false], [489, "cmdoption-llvm-pdbutil-bytes-modi", false], [489, "cmdoption-llvm-pdbutil-bytes-name-map", false], [489, "cmdoption-llvm-pdbutil-bytes-sc", false], [489, "cmdoption-llvm-pdbutil-bytes-sm", false], [489, "cmdoption-llvm-pdbutil-bytes-split-chunks", false], [489, "cmdoption-llvm-pdbutil-bytes-stream-data", false], [489, "cmdoption-llvm-pdbutil-bytes-syms", false], [489, "cmdoption-llvm-pdbutil-bytes-type", false], [489, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "option de ligne de commande llvm-pdbutil-dump": [[489, "cmdoption-llvm-pdbutil-dump-all", false], [489, "cmdoption-llvm-pdbutil-dump-dependents", false], [489, "cmdoption-llvm-pdbutil-dump-files", false], [489, "cmdoption-llvm-pdbutil-dump-global-extras", false], [489, "cmdoption-llvm-pdbutil-dump-globals", false], [489, "cmdoption-llvm-pdbutil-dump-id-data", false], [489, "cmdoption-llvm-pdbutil-dump-id-extras", false], [489, "cmdoption-llvm-pdbutil-dump-id-index", false], [489, "cmdoption-llvm-pdbutil-dump-ids", false], [489, "cmdoption-llvm-pdbutil-dump-il", false], [489, "cmdoption-llvm-pdbutil-dump-l", false], [489, "cmdoption-llvm-pdbutil-dump-modi", false], [489, "cmdoption-llvm-pdbutil-dump-modules", false], [489, "cmdoption-llvm-pdbutil-dump-public-extras", false], [489, "cmdoption-llvm-pdbutil-dump-publics", false], [489, "cmdoption-llvm-pdbutil-dump-section-contribs", false], [489, "cmdoption-llvm-pdbutil-dump-section-headers", false], [489, "cmdoption-llvm-pdbutil-dump-section-map", false], [489, "cmdoption-llvm-pdbutil-dump-stream-blocks", false], [489, "cmdoption-llvm-pdbutil-dump-streams", false], [489, "cmdoption-llvm-pdbutil-dump-string-table", false], [489, "cmdoption-llvm-pdbutil-dump-summary", false], [489, "cmdoption-llvm-pdbutil-dump-sym-data", false], [489, "cmdoption-llvm-pdbutil-dump-symbols", false], [489, "cmdoption-llvm-pdbutil-dump-type-data", false], [489, "cmdoption-llvm-pdbutil-dump-type-extras", false], [489, "cmdoption-llvm-pdbutil-dump-type-index", false], [489, "cmdoption-llvm-pdbutil-dump-types", false], [489, "cmdoption-llvm-pdbutil-dump-xme", false], [489, "cmdoption-llvm-pdbutil-dump-xmi", false]], "option de ligne de commande llvm-pdbutil-merge": [[489, "cmdoption-llvm-pdbutil-merge-pdb", false]], "option de ligne de commande llvm-pdbutil-pretty": [[489, "cmdoption-llvm-pdbutil-pretty-all", false], [489, "cmdoption-llvm-pdbutil-pretty-class-definitions", false], [489, "cmdoption-llvm-pdbutil-pretty-class-order", false], [489, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false], [489, "cmdoption-llvm-pdbutil-pretty-classes", false], [489, "cmdoption-llvm-pdbutil-pretty-color-output", false], [489, "cmdoption-llvm-pdbutil-pretty-compilands", false], [489, "cmdoption-llvm-pdbutil-pretty-enums", false], [489, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false], [489, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false], [489, "cmdoption-llvm-pdbutil-pretty-exclude-types", false], [489, "cmdoption-llvm-pdbutil-pretty-externals", false], [489, "cmdoption-llvm-pdbutil-pretty-globals", false], [489, "cmdoption-llvm-pdbutil-pretty-include-compilands", false], [489, "cmdoption-llvm-pdbutil-pretty-include-symbols", false], [489, "cmdoption-llvm-pdbutil-pretty-include-types", false], [489, "cmdoption-llvm-pdbutil-pretty-lines", false], [489, "cmdoption-llvm-pdbutil-pretty-load-address", false], [489, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false], [489, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false], [489, "cmdoption-llvm-pdbutil-pretty-min-type-size", false], [489, "cmdoption-llvm-pdbutil-pretty-module-syms", false], [489, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false], [489, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false], [489, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false], [489, "cmdoption-llvm-pdbutil-pretty-sym-types", false], [489, "cmdoption-llvm-pdbutil-pretty-symbol-order", false], [489, "cmdoption-llvm-pdbutil-pretty-typedefs", false], [489, "cmdoption-llvm-pdbutil-pretty-types", false]], "option de ligne de commande llvm-pdbutil-yaml2pdb": [[489, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "option de ligne de commande llvm-profdata-merge": [[490, "cmdoption-llvm-profdata-merge-binary", false], [490, "cmdoption-llvm-profdata-merge-failure-mode", false], [490, "cmdoption-llvm-profdata-merge-gcc", false], [490, "cmdoption-llvm-profdata-merge-help", false], [490, "cmdoption-llvm-profdata-merge-input-files", false], [490, "cmdoption-llvm-profdata-merge-instr", false], [490, "cmdoption-llvm-profdata-merge-num-threads", false], [490, "cmdoption-llvm-profdata-merge-output", false], [490, "cmdoption-llvm-profdata-merge-remapping-file", false], [490, "cmdoption-llvm-profdata-merge-sample", false], [490, "cmdoption-llvm-profdata-merge-sparse", false], [490, "cmdoption-llvm-profdata-merge-text", false], [490, "cmdoption-llvm-profdata-merge-weighted-input", false]], "option de ligne de commande llvm-profdata-overlap": [[490, "cmdoption-llvm-profdata-overlap-cs", false], [490, "cmdoption-llvm-profdata-overlap-function", false], [490, "cmdoption-llvm-profdata-overlap-help", false], [490, "cmdoption-llvm-profdata-overlap-o", false], [490, "cmdoption-llvm-profdata-overlap-value-cutoff", false]], "option de ligne de commande llvm-profdata-show": [[490, "cmdoption-llvm-profdata-show-all-functions", false], [490, "cmdoption-llvm-profdata-show-counts", false], [490, "cmdoption-llvm-profdata-show-function", false], [490, "cmdoption-llvm-profdata-show-help", false], [490, "cmdoption-llvm-profdata-show-instr", false], [490, "cmdoption-llvm-profdata-show-list-below-cutoff", false], [490, "cmdoption-llvm-profdata-show-memop-sizes", false], [490, "cmdoption-llvm-profdata-show-output", false], [490, "cmdoption-llvm-profdata-show-sample", false], [490, "cmdoption-llvm-profdata-show-showcs", false], [490, "cmdoption-llvm-profdata-show-text", false], [490, "cmdoption-llvm-profdata-show-topn", false], [490, "cmdoption-llvm-profdata-show-value-cutoff", false]], "option de ligne de commande llvm-readelf": [[492, "cmdoption-llvm-readelf-addrsig", false], [492, "cmdoption-llvm-readelf-all", false], [492, "cmdoption-llvm-readelf-arch-specific", false], [492, "cmdoption-llvm-readelf-arg-FILE", false], [492, "cmdoption-llvm-readelf-color", false], [492, "cmdoption-llvm-readelf-demangle", false], [492, "cmdoption-llvm-readelf-dyn-relocations", false], [492, "cmdoption-llvm-readelf-dyn-symbols", false], [492, "cmdoption-llvm-readelf-dynamic-table", false], [492, "cmdoption-llvm-readelf-elf-cg-profile", false], [492, "cmdoption-llvm-readelf-elf-hash-histogram", false], [492, "cmdoption-llvm-readelf-elf-linker-options", false], [492, "cmdoption-llvm-readelf-elf-output-style", false], [492, "cmdoption-llvm-readelf-elf-section-groups", false], [492, "cmdoption-llvm-readelf-expand-relocs", false], [492, "cmdoption-llvm-readelf-file-headers", false], [492, "cmdoption-llvm-readelf-gnu-hash-table", false], [492, "cmdoption-llvm-readelf-hash-symbols", false], [492, "cmdoption-llvm-readelf-hash-table", false], [492, "cmdoption-llvm-readelf-headers", false], [492, "cmdoption-llvm-readelf-help", false], [492, "cmdoption-llvm-readelf-help-list", false], [492, "cmdoption-llvm-readelf-hex-dump", false], [492, "cmdoption-llvm-readelf-needed-libs", false], [492, "cmdoption-llvm-readelf-notes", false], [492, "cmdoption-llvm-readelf-program-headers", false], [492, "cmdoption-llvm-readelf-raw-relr", false], [492, "cmdoption-llvm-readelf-relocations", false], [492, "cmdoption-llvm-readelf-section-data", false], [492, "cmdoption-llvm-readelf-section-mapping", false], [492, "cmdoption-llvm-readelf-section-relocations", false], [492, "cmdoption-llvm-readelf-section-symbols", false], [492, "cmdoption-llvm-readelf-sections", false], [492, "cmdoption-llvm-readelf-stack-sizes", false], [492, "cmdoption-llvm-readelf-stackmap", false], [492, "cmdoption-llvm-readelf-string-dump", false], [492, "cmdoption-llvm-readelf-symbols", false], [492, "cmdoption-llvm-readelf-unwind", false], [492, "cmdoption-llvm-readelf-version", false], [492, "cmdoption-llvm-readelf-version-info", false]], "option de ligne de commande llvm-readobj": [[493, "cmdoption-llvm-readobj-addrsig", false], [493, "cmdoption-llvm-readobj-all", false], [493, "cmdoption-llvm-readobj-arch-specific", false], [493, "cmdoption-llvm-readobj-arg-FILE", false], [493, "cmdoption-llvm-readobj-codeview", false], [493, "cmdoption-llvm-readobj-codeview-ghash", false], [493, "cmdoption-llvm-readobj-codeview-merged-types", false], [493, "cmdoption-llvm-readobj-codeview-subsection-bytes", false], [493, "cmdoption-llvm-readobj-coff-basereloc", false], [493, "cmdoption-llvm-readobj-coff-debug-directory", false], [493, "cmdoption-llvm-readobj-coff-directives", false], [493, "cmdoption-llvm-readobj-coff-exports", false], [493, "cmdoption-llvm-readobj-coff-imports", false], [493, "cmdoption-llvm-readobj-coff-load-config", false], [493, "cmdoption-llvm-readobj-coff-resources", false], [493, "cmdoption-llvm-readobj-color", false], [493, "cmdoption-llvm-readobj-demangle", false], [493, "cmdoption-llvm-readobj-dependent-libraries", false], [493, "cmdoption-llvm-readobj-dyn-relocations", false], [493, "cmdoption-llvm-readobj-dyn-symbols", false], [493, "cmdoption-llvm-readobj-dynamic-table", false], [493, "cmdoption-llvm-readobj-elf-cg-profile", false], [493, "cmdoption-llvm-readobj-elf-hash-histogram", false], [493, "cmdoption-llvm-readobj-elf-linker-options", false], [493, "cmdoption-llvm-readobj-elf-output-style", false], [493, "cmdoption-llvm-readobj-elf-section-groups", false], [493, "cmdoption-llvm-readobj-expand-relocs", false], [493, "cmdoption-llvm-readobj-file-headers", false], [493, "cmdoption-llvm-readobj-gnu-hash-table", false], [493, "cmdoption-llvm-readobj-hash-symbols", false], [493, "cmdoption-llvm-readobj-hash-table", false], [493, "cmdoption-llvm-readobj-headers", false], [493, "cmdoption-llvm-readobj-help", false], [493, "cmdoption-llvm-readobj-help-list", false], [493, "cmdoption-llvm-readobj-hex-dump", false], [493, "cmdoption-llvm-readobj-macho-data-in-code", false], [493, "cmdoption-llvm-readobj-macho-dsymtab", false], [493, "cmdoption-llvm-readobj-macho-indirect-symbols", false], [493, "cmdoption-llvm-readobj-macho-linker-options", false], [493, "cmdoption-llvm-readobj-macho-segment", false], [493, "cmdoption-llvm-readobj-macho-version-min", false], [493, "cmdoption-llvm-readobj-needed-libs", false], [493, "cmdoption-llvm-readobj-notes", false], [493, "cmdoption-llvm-readobj-program-headers", false], [493, "cmdoption-llvm-readobj-raw-relr", false], [493, "cmdoption-llvm-readobj-relocations", false], [493, "cmdoption-llvm-readobj-section-data", false], [493, "cmdoption-llvm-readobj-section-mapping", false], [493, "cmdoption-llvm-readobj-section-relocations", false], [493, "cmdoption-llvm-readobj-section-symbols", false], [493, "cmdoption-llvm-readobj-sections", false], [493, "cmdoption-llvm-readobj-stack-sizes", false], [493, "cmdoption-llvm-readobj-stackmap", false], [493, "cmdoption-llvm-readobj-string-dump", false], [493, "cmdoption-llvm-readobj-symbols", false], [493, "cmdoption-llvm-readobj-unwind", false], [493, "cmdoption-llvm-readobj-version", false], [493, "cmdoption-llvm-readobj-version-info", false]], "option de ligne de commande llvm-size": [[494, "cmdoption-llvm-size-A", false], [494, "cmdoption-llvm-size-B", false], [494, "cmdoption-llvm-size-arch", false], [494, "cmdoption-llvm-size-arg-FILE", false], [494, "cmdoption-llvm-size-common", false], [494, "cmdoption-llvm-size-d", false], [494, "cmdoption-llvm-size-format", false], [494, "cmdoption-llvm-size-help", false], [494, "cmdoption-llvm-size-help-list", false], [494, "cmdoption-llvm-size-l", false], [494, "cmdoption-llvm-size-m", false], [494, "cmdoption-llvm-size-o", false], [494, "cmdoption-llvm-size-radix", false], [494, "cmdoption-llvm-size-totals", false], [494, "cmdoption-llvm-size-version", false], [494, "cmdoption-llvm-size-x", false]], "option de ligne de commande llvm-stress": [[495, "cmdoption-llvm-stress-o", false], [495, "cmdoption-llvm-stress-seed", false], [495, "cmdoption-llvm-stress-size", false]], "option de ligne de commande llvm-strings": [[496, "cmdoption-llvm-strings-all", false], [496, "cmdoption-llvm-strings-arg-FILE", false], [496, "cmdoption-llvm-strings-bytes", false], [496, "cmdoption-llvm-strings-help", false], [496, "cmdoption-llvm-strings-help-list", false], [496, "cmdoption-llvm-strings-print-file-name", false], [496, "cmdoption-llvm-strings-radix", false], [496, "cmdoption-llvm-strings-version", false]], "option de ligne de commande llvm-strip": [[497, "cmdoption-llvm-strip-allow-broken-links", false], [497, "cmdoption-llvm-strip-arg-FILE", false], [497, "cmdoption-llvm-strip-disable-deterministic-archives", false], [497, "cmdoption-llvm-strip-discard-all", false], [497, "cmdoption-llvm-strip-discard-locals", false], [497, "cmdoption-llvm-strip-enable-deterministic-archives", false], [497, "cmdoption-llvm-strip-help", false], [497, "cmdoption-llvm-strip-keep-file-symbols", false], [497, "cmdoption-llvm-strip-keep-section", false], [497, "cmdoption-llvm-strip-keep-symbol", false], [497, "cmdoption-llvm-strip-no-strip-all", false], [497, "cmdoption-llvm-strip-o", false], [497, "cmdoption-llvm-strip-only-keep-debug", false], [497, "cmdoption-llvm-strip-preserve-dates", false], [497, "cmdoption-llvm-strip-regex", false], [497, "cmdoption-llvm-strip-remove-section", false], [497, "cmdoption-llvm-strip-strip-all", false], [497, "cmdoption-llvm-strip-strip-all-gnu", false], [497, "cmdoption-llvm-strip-strip-debug", false], [497, "cmdoption-llvm-strip-strip-sections", false], [497, "cmdoption-llvm-strip-strip-symbol", false], [497, "cmdoption-llvm-strip-strip-unneeded", false], [497, "cmdoption-llvm-strip-version", false], [497, "cmdoption-llvm-strip-wildcard", false]], "option de ligne de commande llvm-symbolizer": [[498, "cmdoption-llvm-symbolizer-adjust-vma", false], [498, "cmdoption-llvm-symbolizer-arg-FILE", false], [498, "cmdoption-llvm-symbolizer-basenames", false], [498, "cmdoption-llvm-symbolizer-default-arch", false], [498, "cmdoption-llvm-symbolizer-demangle", false], [498, "cmdoption-llvm-symbolizer-dsym-hint", false], [498, "cmdoption-llvm-symbolizer-dwp", false], [498, "cmdoption-llvm-symbolizer-fallback-debug-path", false], [498, "cmdoption-llvm-symbolizer-functions", false], [498, "cmdoption-llvm-symbolizer-help", false], [498, "cmdoption-llvm-symbolizer-help-list", false], [498, "cmdoption-llvm-symbolizer-inlining", false], [498, "cmdoption-llvm-symbolizer-no-demangle", false], [498, "cmdoption-llvm-symbolizer-obj", false], [498, "cmdoption-llvm-symbolizer-output-style", false], [498, "cmdoption-llvm-symbolizer-pretty-print", false], [498, "cmdoption-llvm-symbolizer-print-address", false], [498, "cmdoption-llvm-symbolizer-print-source-context-lines", false], [498, "cmdoption-llvm-symbolizer-use-symbol-table", false], [498, "cmdoption-llvm-symbolizer-verbose", false], [498, "cmdoption-llvm-symbolizer-version", false]], "option de ligne de commande opt": [[499, "cmdoption-opt-S", false], [499, "cmdoption-opt-debug", false], [499, "cmdoption-opt-disable-inlining", false], [499, "cmdoption-opt-disable-opt", false], [499, "cmdoption-opt-f", false], [499, "cmdoption-opt-help", false], [499, "cmdoption-opt-load", false], [499, "cmdoption-opt-o", false], [499, "cmdoption-opt-p", false], [499, "cmdoption-opt-passname", false], [499, "cmdoption-opt-stats", false], [499, "cmdoption-opt-strip-debug", false], [499, "cmdoption-opt-time-passes", false], [499, "cmdoption-opt-verify-each", false]], "option de ligne de commande tblgen": [[500, "cmdoption-tblgen-I", false], [500, "cmdoption-tblgen-asmparsernum", false], [500, "cmdoption-tblgen-asmwriternum", false], [500, "cmdoption-tblgen-class", false], [500, "cmdoption-tblgen-dump-json", false], [500, "cmdoption-tblgen-gen-asm-matcher", false], [500, "cmdoption-tblgen-gen-asm-writer", false], [500, "cmdoption-tblgen-gen-dag-isel", false], [500, "cmdoption-tblgen-gen-dfa-packetizer", false], [500, "cmdoption-tblgen-gen-disassembler", false], [500, "cmdoption-tblgen-gen-emitter", false], [500, "cmdoption-tblgen-gen-enhanced-disassembly-info", false], [500, "cmdoption-tblgen-gen-exegesis", false], [500, "cmdoption-tblgen-gen-fast-isel", false], [500, "cmdoption-tblgen-gen-instr-info", false], [500, "cmdoption-tblgen-gen-intrinsic-enums", false], [500, "cmdoption-tblgen-gen-intrinsic-impl", false], [500, "cmdoption-tblgen-gen-pseudo-lowering", false], [500, "cmdoption-tblgen-gen-register-info", false], [500, "cmdoption-tblgen-gen-subtarget", false], [500, "cmdoption-tblgen-gen-tgt-intrinsic", false], [500, "cmdoption-tblgen-help", false], [500, "cmdoption-tblgen-o", false], [500, "cmdoption-tblgen-print-enums", false], [500, "cmdoption-tblgen-print-records", false], [500, "cmdoption-tblgen-print-sets", false], [500, "cmdoption-tblgen-version", false]], "p": [[468, "cmdoption-llvm-ar-arg-P", false], [468, "cmdoption-llvm-ar-arg-p", false]], "q": [[468, "cmdoption-llvm-ar-arg-q", false]], "r": [[468, "cmdoption-llvm-ar-arg-r", false]], "s": [[468, "cmdoption-llvm-ar-arg-S", false], [468, "cmdoption-llvm-ar-arg-s", false]], "save": [[468, "cmdoption-llvm-ar-arg-SAVE", false]], "t": [[468, "cmdoption-llvm-ar-arg-T", false]], "u": [[468, "cmdoption-llvm-ar-arg-U", false], [468, "cmdoption-llvm-ar-arg-u", false]], "v": [[468, "cmdoption-llvm-ar-arg-V", false], [468, "cmdoption-llvm-ar-arg-v", false]], "x": [[468, "cmdoption-llvm-ar-arg-x", false]]}, "objects": {"": [[589, 0, 1, "cmdoption-lto-pass-remarks-filter", "-lto-pass-remarks-filter"], [589, 0, 1, "cmdoption-lto-pass-remarks-format", "-lto-pass-remarks-format"], [589, 0, 1, "cmdoption-lto-pass-remarks-hotness-threshold", "-lto-pass-remarks-hotness-threshold"], [589, 0, 1, "cmdoption-lto-pass-remarks-output", "-lto-pass-remarks-output"], [589, 0, 1, "cmdoption-lto-pass-remarks-with-hotness", "-lto-pass-remarks-with-hotness"], [589, 0, 1, "cmdoption-opt-remarks-filename", "-opt-remarks-filename"], [589, 0, 1, "cmdoption-opt-remarks-filter", "-opt-remarks-filter"], [589, 0, 1, "cmdoption-opt-remarks-format", "-opt-remarks-format"], [589, 0, 1, "cmdoption-opt-remarks-with-hotness", "-opt-remarks-with-hotness"], [589, 0, 1, "cmdoption-pass-remarks", "-pass-remarks"], [589, 0, 1, "cmdoption-pass-remarks-analysis", "-pass-remarks-analysis"], [589, 0, 1, "cmdoption-pass-remarks-filter", "-pass-remarks-filter"], [589, 0, 1, "cmdoption-pass-remarks-format", "-pass-remarks-format"], [589, 0, 1, "cmdoption-pass-remarks-hotness-threshold", "-pass-remarks-hotness-threshold"], [589, 0, 1, "cmdoption-pass-remarks-missed", "-pass-remarks-missed"], [589, 0, 1, "cmdoption-pass-remarks-output", "-pass-remarks-output"], [589, 0, 1, "cmdoption-pass-remarks-with-hotness", "-pass-remarks-with-hotness"]], "FileCheck": [[460, 0, 1, "cmdoption-FileCheck-allow-deprecated-dag-overlap", "--allow-deprecated-dag-overlap"], [460, 0, 1, "cmdoption-FileCheck-check-prefix", "--check-prefix"], [460, 0, 1, "cmdoption-FileCheck-check-prefixes", "--check-prefixes"], [460, 0, 1, "cmdoption-FileCheck-color", "--color"], [460, 0, 1, "cmdoption-FileCheck-dump-input", "--dump-input"], [460, 0, 1, "cmdoption-FileCheck-dump-input-on-failure", "--dump-input-on-failure"], [460, 0, 1, "cmdoption-FileCheck-enable-var-scope", "--enable-var-scope"], [460, 0, 1, "cmdoption-FileCheck-ignore-case", "--ignore-case"], [460, 0, 1, "cmdoption-FileCheck-implicit-check-not", "--implicit-check-not"], [460, 0, 1, "cmdoption-FileCheck-input-file", "--input-file"], [460, 0, 1, "cmdoption-FileCheck-match-full-lines", "--match-full-lines"], [460, 0, 1, "cmdoption-FileCheck-strict-whitespace", "--strict-whitespace"], [460, 0, 1, "cmdoption-FileCheck-D-NUMVAR", "-D#&lt;NUMVAR&gt;"], [460, 0, 1, "cmdoption-FileCheck-D-VAR", "-D&lt;VAR"], [460, 0, 1, "cmdoption-FileCheck-help", "-help"], [460, 0, 1, "cmdoption-FileCheck-v", "-v"], [460, 0, 1, "cmdoption-FileCheck-version", "-version"], [460, 0, 1, "cmdoption-FileCheck-vv", "-vv"]], "dsymutil": [[462, 0, 1, "cmdoption-dsymutil-arch", "--arch"], [462, 0, 1, "cmdoption-dsymutil-dump-debug-map", "--dump-debug-map"], [462, 0, 1, "cmdoption-dsymutil-f", "--flat"], [462, 0, 1, "cmdoption-dsymutil-z", "--minimize"], [462, 0, 1, "cmdoption-dsymutil-no-odr", "--no-odr"], [462, 0, 1, "cmdoption-dsymutil-no-output", "--no-output"], [462, 0, 1, "cmdoption-dsymutil-no-swiftmodule-timestamp", "--no-swiftmodule-timestamp"], [462, 0, 1, "cmdoption-dsymutil-j", "--num-threads"], [462, 0, 1, "cmdoption-dsymutil-oso-prepend-path", "--oso-prepend-path"], [462, 0, 1, "cmdoption-dsymutil-papertrail", "--papertrail"], [462, 0, 1, "cmdoption-dsymutil-s", "--symtab"], [462, 0, 1, "cmdoption-dsymutil-toolchain", "--toolchain"], [462, 0, 1, "cmdoption-dsymutil-u", "--update"], [462, 0, 1, "cmdoption-dsymutil-v", "--verbose"], [462, 0, 1, "cmdoption-dsymutil-version", "--version"], [462, 0, 1, "cmdoption-dsymutil-f", "-f"], [462, 0, 1, "cmdoption-dsymutil-j", "-j"], [462, 0, 1, "cmdoption-dsymutil-o", "-o"], [462, 0, 1, "cmdoption-dsymutil-s", "-s"], [462, 0, 1, "cmdoption-dsymutil-u", "-u"], [462, 0, 1, "cmdoption-dsymutil-v", "-v"], [462, 0, 1, "cmdoption-dsymutil-y", "-y"], [462, 0, 1, "cmdoption-dsymutil-z", "-z"]], "lit": [[464, 0, 1, "cmdoption-lit-config-prefix", "--config-prefix"], [464, 0, 1, "cmdoption-lit-debug", "--debug"], [464, 0, 1, "cmdoption-lit-vv", "--echo-all-commands"], [464, 0, 1, "cmdoption-lit-filter", "--filter"], [464, 0, 1, "cmdoption-lit-h", "--help"], [464, 0, 1, "cmdoption-lit-max-tests", "--max-tests"], [464, 0, 1, "cmdoption-lit-max-time", "--max-time"], [464, 0, 1, "cmdoption-lit-no-progress-bar", "--no-progress-bar"], [464, 0, 1, "cmdoption-lit-num-shards", "--num-shards"], [464, 0, 1, "cmdoption-lit-D", "--param"], [464, 0, 1, "cmdoption-lit-path", "--path"], [464, 0, 1, "cmdoption-lit-q", "--quiet"], [464, 0, 1, "cmdoption-lit-run-shard", "--run-shard"], [464, 0, 1, "cmdoption-lit-a", "--show-all"], [464, 0, 1, "cmdoption-lit-show-suites", "--show-suites"], [464, 0, 1, "cmdoption-lit-show-tests", "--show-tests"], [464, 0, 1, "cmdoption-lit-show-unsupported", "--show-unsupported"], [464, 0, 1, "cmdoption-lit-show-xfail", "--show-xfail"], [464, 0, 1, "cmdoption-lit-shuffle", "--shuffle"], [464, 0, 1, "cmdoption-lit-s", "--succinct"], [464, 0, 1, "cmdoption-lit-time-tests", "--time-tests"], [464, 0, 1, "cmdoption-lit-v", "--verbose"], [464, 0, 1, "cmdoption-lit-vg", "--vg"], [464, 0, 1, "cmdoption-lit-vg-arg", "--vg-arg"], [464, 0, 1, "cmdoption-lit-vg-leak", "--vg-leak"], [464, 0, 1, "cmdoption-lit-j", "--workers"], [464, 0, 1, "cmdoption-lit-D", "-D"], [464, 0, 1, "cmdoption-lit-a", "-a"], [464, 0, 1, "cmdoption-lit-h", "-h"], [464, 0, 1, "cmdoption-lit-j", "-j"], [464, 0, 1, "cmdoption-lit-q", "-q"], [464, 0, 1, "cmdoption-lit-s", "-s"], [464, 0, 1, "cmdoption-lit-v", "-v"], [464, 0, 1, "cmdoption-lit-vv", "-vv"]], "llc": [[465, 0, 1, "cmdoption-llc-disable-excess-fp-precision", "--disable-excess-fp-precision"], [465, 0, 1, "cmdoption-llc-enable-no-infs-fp-math", "--enable-no-infs-fp-math"], [465, 0, 1, "cmdoption-llc-enable-no-nans-fp-math", "--enable-no-nans-fp-math"], [465, 0, 1, "cmdoption-llc-enable-unsafe-fp-math", "--enable-unsafe-fp-math"], [465, 0, 1, "cmdoption-llc-frame-pointer", "--frame-pointer"], [465, 0, 1, "cmdoption-llc-load", "--load"], [465, 0, 1, "cmdoption-llc-print-machineinstrs", "--print-machineinstrs"], [465, 0, 1, "cmdoption-llc-regalloc", "--regalloc"], [465, 0, 1, "cmdoption-llc-spiller", "--spiller"], [465, 0, 1, "cmdoption-llc-stats", "--stats"], [465, 0, 1, "cmdoption-llc-time-passes", "--time-passes"], [465, 0, 1, "cmdoption-llc-x86-asm-syntax", "--x86-asm-syntax"], [465, 0, 1, "cmdoption-llc-O", "-O"], [465, 0, 1, "cmdoption-llc-filetype", "-filetype"], [465, 0, 1, "cmdoption-llc-help", "-help"], [465, 0, 1, "cmdoption-llc-march", "-march"], [465, 0, 1, "cmdoption-llc-mattr", "-mattr"], [465, 0, 1, "cmdoption-llc-mcpu", "-mcpu"], [465, 0, 1, "cmdoption-llc-meabi", "-meabi"], [465, 0, 1, "cmdoption-llc-mtriple", "-mtriple"], [465, 0, 1, "cmdoption-llc-o", "-o"], [465, 0, 1, "cmdoption-llc-remarks-section", "-remarks-section"], [465, 0, 1, "cmdoption-llc-stack-size-section", "-stack-size-section"]], "lli": [[466, 0, 1, "cmdoption-lli-code-model", "-code-model"], [466, 0, 1, "cmdoption-lli-disable-excess-fp-precision", "-disable-excess-fp-precision"], [466, 0, 1, "cmdoption-lli-disable-post-RA-scheduler", "-disable-post-RA-scheduler"], [466, 0, 1, "cmdoption-lli-disable-spill-fusing", "-disable-spill-fusing"], [466, 0, 1, "cmdoption-lli-enable-no-infs-fp-math", "-enable-no-infs-fp-math"], [466, 0, 1, "cmdoption-lli-enable-no-nans-fp-math", "-enable-no-nans-fp-math"], [466, 0, 1, "cmdoption-lli-enable-unsafe-fp-math", "-enable-unsafe-fp-math"], [466, 0, 1, "cmdoption-lli-fake-argv0", "-fake-argv0"], [466, 0, 1, "cmdoption-lli-force-interpreter", "-force-interpreter"], [466, 0, 1, "cmdoption-lli-help", "-help"], [466, 0, 1, "cmdoption-lli-jit-enable-eh", "-jit-enable-eh"], [466, 0, 1, "cmdoption-lli-join-liveintervals", "-join-liveintervals"], [466, 0, 1, "cmdoption-lli-load", "-load"], [466, 0, 1, "cmdoption-lli-march", "-march"], [466, 0, 1, "cmdoption-lli-mattr", "-mattr"], [466, 0, 1, "cmdoption-lli-mcpu", "-mcpu"], [466, 0, 1, "cmdoption-lli-mtriple", "-mtriple"], [466, 0, 1, "cmdoption-lli-nozero-initialized-in-bss", "-nozero-initialized-in-bss"], [466, 0, 1, "cmdoption-lli-pre-RA-sched", "-pre-RA-sched"], [466, 0, 1, "cmdoption-lli-regalloc", "-regalloc"], [466, 0, 1, "cmdoption-lli-relocation-model", "-relocation-model"], [466, 0, 1, "cmdoption-lli-soft-float", "-soft-float"], [466, 0, 1, "cmdoption-lli-spiller", "-spiller"], [466, 0, 1, "cmdoption-lli-stats", "-stats"], [466, 0, 1, "cmdoption-lli-time-passes", "-time-passes"], [466, 0, 1, "cmdoption-lli-version", "-version"], [466, 0, 1, "cmdoption-lli-x86-asm-syntax", "-x86-asm-syntax"]], "llvm-ar": [[468, 0, 1, "cmdoption-llvm-ar-format", "--format"], [468, 0, 1, "cmdoption-llvm-ar-h", "--help"], [468, 0, 1, "cmdoption-llvm-ar-version", "--version"], [468, 0, 1, "cmdoption-llvm-ar-M", "-M"], [468, 0, 1, "cmdoption-llvm-ar-h", "-h"], [468, 0, 1, "cmdoption-llvm-ar-arg-FILE", "@&lt;FILE&gt;"], [468, 0, 1, "cmdoption-llvm-ar-arg-ADDLIB", "ADDLIB"], [468, 0, 1, "cmdoption-llvm-ar-arg-ADDMOD", "ADDMOD"], [468, 0, 1, "cmdoption-llvm-ar-arg-CREATE", "CREATE"], [468, 0, 1, "cmdoption-llvm-ar-arg-CREATETHIN", "CREATETHIN"], [468, 0, 1, "cmdoption-llvm-ar-arg-D", "D"], [468, 0, 1, "cmdoption-llvm-ar-arg-DELETE", "DELETE"], [468, 0, 1, "cmdoption-llvm-ar-arg-END", "END"], [468, 0, 1, "cmdoption-llvm-ar-arg-L", "L"], [468, 0, 1, "cmdoption-llvm-ar-arg-N", "N"], [468, 0, 1, "cmdoption-llvm-ar-arg-O", "O"], [468, 0, 1, "cmdoption-llvm-ar-arg-P", "P"], [468, 0, 1, "cmdoption-llvm-ar-arg-S", "S"], [468, 0, 1, "cmdoption-llvm-ar-arg-SAVE", "SAVE"], [468, 0, 1, "cmdoption-llvm-ar-arg-T", "T"], [468, 0, 1, "cmdoption-llvm-ar-arg-U", "U"], [468, 0, 1, "cmdoption-llvm-ar-arg-V", "V"], [468, 0, 1, "cmdoption-llvm-ar-arg-a", "a"], [468, 0, 1, "cmdoption-llvm-ar-arg-b", "b"], [468, 0, 1, "cmdoption-llvm-ar-arg-c", "c"], [468, 0, 1, "cmdoption-llvm-ar-arg-d", "d"], [468, 0, 1, "cmdoption-llvm-ar-arg-i", "i"], [468, 0, 1, "cmdoption-llvm-ar-arg-m", "m"], [468, 0, 1, "cmdoption-llvm-ar-arg-o", "o"], [468, 0, 1, "cmdoption-llvm-ar-arg-p", "p"], [468, 0, 1, "cmdoption-llvm-ar-arg-q", "q"], [468, 0, 1, "cmdoption-llvm-ar-arg-r", "r"], [468, 0, 1, "cmdoption-llvm-ar-arg-s", "s"], [468, 0, 1, "cmdoption-llvm-ar-arg-u", "u"], [468, 0, 1, "cmdoption-llvm-ar-arg-v", "v"], [468, 0, 1, "cmdoption-llvm-ar-arg-x", "x"]], "llvm-bcanalyzer": [[470, 0, 1, "cmdoption-llvm-bcanalyzer-dump", "-dump"], [470, 0, 1, "cmdoption-llvm-bcanalyzer-help", "-help"], [470, 0, 1, "cmdoption-llvm-bcanalyzer-nodetails", "-nodetails"], [470, 0, 1, "cmdoption-llvm-bcanalyzer-verify", "-verify"]], "llvm-cov-export": [[473, 0, 1, "cmdoption-llvm-cov-export-arch", "-arch"], [473, 0, 1, "cmdoption-llvm-cov-export-format", "-format"], [473, 0, 1, "cmdoption-llvm-cov-export-ignore-filename-regex", "-ignore-filename-regex"], [473, 0, 1, "cmdoption-llvm-cov-export-num-threads", "-j"], [473, 0, 1, "cmdoption-llvm-cov-export-num-threads", "-num-threads"], [473, 0, 1, "cmdoption-llvm-cov-export-skip-expansions", "-skip-expansions"], [473, 0, 1, "cmdoption-llvm-cov-export-skip-functions", "-skip-functions"], [473, 0, 1, "cmdoption-llvm-cov-export-summary-only", "-summary-only"]], "llvm-cov-gcov": [[473, 0, 1, "cmdoption-llvm-cov-gcov-a", "--all-blocks"], [473, 0, 1, "cmdoption-llvm-cov-gcov-c", "--branch-counts"], [473, 0, 1, "cmdoption-llvm-cov-gcov-b", "--branch-probabilities"], [473, 0, 1, "cmdoption-llvm-cov-gcov-f", "--function-summaries"], [473, 0, 1, "cmdoption-llvm-cov-gcov-x", "--hash-filenames"], [473, 0, 1, "cmdoption-llvm-cov-gcov-help", "--help"], [473, 0, 1, "cmdoption-llvm-cov-gcov-l", "--long-file-names"], [473, 0, 1, "cmdoption-llvm-cov-gcov-n", "--no-output"], [473, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-directory"], [473, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-file"], [473, 0, 1, "cmdoption-llvm-cov-gcov-p", "--preserve-paths"], [473, 0, 1, "cmdoption-llvm-cov-gcov-u", "--unconditional-branches"], [473, 0, 1, "cmdoption-llvm-cov-gcov-a", "-a"], [473, 0, 1, "cmdoption-llvm-cov-gcov-b", "-b"], [473, 0, 1, "cmdoption-llvm-cov-gcov-c", "-c"], [473, 0, 1, "cmdoption-llvm-cov-gcov-f", "-f"], [473, 0, 1, "cmdoption-llvm-cov-gcov-l", "-l"], [473, 0, 1, "cmdoption-llvm-cov-gcov-n", "-n"], [473, 0, 1, "cmdoption-llvm-cov-gcov-o", "-o"], [473, 0, 1, "cmdoption-llvm-cov-gcov-p", "-p"], [473, 0, 1, "cmdoption-llvm-cov-gcov-u", "-u"], [473, 0, 1, "cmdoption-llvm-cov-gcov-version", "-version"], [473, 0, 1, "cmdoption-llvm-cov-gcov-x", "-x"]], "llvm-cov-report": [[473, 0, 1, "cmdoption-llvm-cov-report-arch", "-arch"], [473, 0, 1, "cmdoption-llvm-cov-report-ignore-filename-regex", "-ignore-filename-regex"], [473, 0, 1, "cmdoption-llvm-cov-report-show-functions", "-show-functions"], [473, 0, 1, "cmdoption-llvm-cov-report-show-instantiation-summary", "-show-instantiation-summary"], [473, 0, 1, "cmdoption-llvm-cov-report-use-color", "-use-color"]], "llvm-cov-show": [[473, 0, 1, "cmdoption-llvm-cov-show-Xdemangler", "-Xdemangler"], [473, 0, 1, "cmdoption-llvm-cov-show-arch", "-arch"], [473, 0, 1, "cmdoption-llvm-cov-show-format", "-format"], [473, 0, 1, "cmdoption-llvm-cov-show-ignore-filename-regex", "-ignore-filename-regex"], [473, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-j"], [473, 0, 1, "cmdoption-llvm-cov-show-line-coverage-gt", "-line-coverage-gt"], [473, 0, 1, "cmdoption-llvm-cov-show-line-coverage-lt", "-line-coverage-lt"], [473, 0, 1, "cmdoption-llvm-cov-show-name", "-name"], [473, 0, 1, "cmdoption-llvm-cov-show-name-regex", "-name-regex"], [473, 0, 1, "cmdoption-llvm-cov-show-name-whitelist", "-name-whitelist"], [473, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-num-threads"], [473, 0, 1, "cmdoption-llvm-cov-show-output-dir", "-output-dir"], [473, 0, 1, "cmdoption-llvm-cov-show-path-equivalence", "-path-equivalence"], [473, 0, 1, "cmdoption-llvm-cov-show-region-coverage-gt", "-region-coverage-gt"], [473, 0, 1, "cmdoption-llvm-cov-show-region-coverage-lt", "-region-coverage-lt"], [473, 0, 1, "cmdoption-llvm-cov-show-show-expansions", "-show-expansions"], [473, 0, 1, "cmdoption-llvm-cov-show-show-instantiations", "-show-instantiations"], [473, 0, 1, "cmdoption-llvm-cov-show-show-line-counts", "-show-line-counts"], [473, 0, 1, "cmdoption-llvm-cov-show-show-line-counts-or-regions", "-show-line-counts-or-regions"], [473, 0, 1, "cmdoption-llvm-cov-show-show-regions", "-show-regions"], [473, 0, 1, "cmdoption-llvm-cov-show-tab-size", "-tab-size"], [473, 0, 1, "cmdoption-llvm-cov-show-use-color", "-use-color"]], "llvm-cxxfilt": [[474, 0, 1, "cmdoption-llvm-cxxfilt-format", "--format"], [474, 0, 1, "cmdoption-llvm-cxxfilt-help", "--help"], [474, 0, 1, "cmdoption-llvm-cxxfilt-help-list", "--help-list"], [474, 0, 1, "cmdoption-llvm-cxxfilt-strip-underscore", "--strip-underscore"], [474, 0, 1, "cmdoption-llvm-cxxfilt-types", "--types"], [474, 0, 1, "cmdoption-llvm-cxxfilt-version", "--version"], [474, 0, 1, "cmdoption-llvm-cxxfilt-strip-underscore", "-_"], [474, 0, 1, "cmdoption-llvm-cxxfilt-help", "-h"], [474, 0, 1, "cmdoption-llvm-cxxfilt-format", "-s"], [474, 0, 1, "cmdoption-llvm-cxxfilt-types", "-t"], [474, 0, 1, "cmdoption-llvm-cxxfilt-arg-FILE", "@&lt;FILE&gt;"]], "llvm-cxxmap": [[475, 0, 1, "cmdoption-llvm-cxxmap-Wambiguous", "-Wambiguous"], [475, 0, 1, "cmdoption-llvm-cxxmap-Wincomplete", "-Wincomplete"], [475, 0, 1, "cmdoption-llvm-cxxmap-output", "-o"], [475, 0, 1, "cmdoption-llvm-cxxmap-output", "-output"], [475, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-r"], [475, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-remapping-file"]], "llvm-dwarfdump": [[478, 0, 1, "cmdoption-llvm-dwarfdump-a", "--all"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-names"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-namespaces"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-objc"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-types"], [478, 0, 1, "cmdoption-llvm-dwarfdump-arch", "--arch"], [478, 0, 1, "cmdoption-llvm-dwarfdump-color", "--color"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-abbrev"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-addr"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-aranges"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-cu-index"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-frame"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-gnu-pubnames"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-gnu-pubtypes"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-info"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-line"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-line-str"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-loc"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-loclists"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-macro"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-names"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-pubnames"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-pubtypes"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-ranges"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-rnglists"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-str"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-str-offsets"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-tu-index"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-types"], [478, 0, 1, "cmdoption-llvm-dwarfdump-diff", "--diff"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--eh-frame"], [478, 0, 1, "cmdoption-llvm-dwarfdump-f", "--find"], [478, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--gdb-index"], [478, 0, 1, "cmdoption-llvm-dwarfdump-h", "--help"], [478, 0, 1, "cmdoption-llvm-dwarfdump-help-list", "--help-list"], [478, 0, 1, "cmdoption-llvm-dwarfdump-i", "--ignore-case"], [478, 0, 1, "cmdoption-llvm-dwarfdump-lookup", "--lookup"], [478, 0, 1, "cmdoption-llvm-dwarfdump-n", "--name"], [478, 0, 1, "cmdoption-llvm-dwarfdump-parent-recurse-depth", "--parent-recurse-depth"], [478, 0, 1, "cmdoption-llvm-dwarfdump-quiet", "--quiet"], [478, 0, 1, "cmdoption-llvm-dwarfdump-r", "--recurse-depth"], [478, 0, 1, "cmdoption-llvm-dwarfdump-x", "--regex"], [478, 0, 1, "cmdoption-llvm-dwarfdump-c", "--show-children"], [478, 0, 1, "cmdoption-llvm-dwarfdump-F", "--show-form"], [478, 0, 1, "cmdoption-llvm-dwarfdump-p", "--show-parents"], [478, 0, 1, "cmdoption-llvm-dwarfdump-statistics", "--statistics"], [478, 0, 1, "cmdoption-llvm-dwarfdump-summarize-types", "--summarize-types"], [478, 0, 1, "cmdoption-llvm-dwarfdump-u", "--uuid"], [478, 0, 1, "cmdoption-llvm-dwarfdump-v", "--verbose"], [478, 0, 1, "cmdoption-llvm-dwarfdump-verify", "--verify"], [478, 0, 1, "cmdoption-llvm-dwarfdump-version", "--version"], [478, 0, 1, "cmdoption-llvm-dwarfdump-F", "-F"], [478, 0, 1, "cmdoption-llvm-dwarfdump-a", "-a"], [478, 0, 1, "cmdoption-llvm-dwarfdump-c", "-c"], [478, 0, 1, "cmdoption-llvm-dwarfdump-f", "-f"], [478, 0, 1, "cmdoption-llvm-dwarfdump-h", "-h"], [478, 0, 1, "cmdoption-llvm-dwarfdump-i", "-i"], [478, 0, 1, "cmdoption-llvm-dwarfdump-n", "-n"], [478, 0, 1, "cmdoption-llvm-dwarfdump-o", "-o"], [478, 0, 1, "cmdoption-llvm-dwarfdump-p", "-p"], [478, 0, 1, "cmdoption-llvm-dwarfdump-r", "-r"], [478, 0, 1, "cmdoption-llvm-dwarfdump-u", "-u"], [478, 0, 1, "cmdoption-llvm-dwarfdump-v", "-v"], [478, 0, 1, "cmdoption-llvm-dwarfdump-x", "-x"], [478, 0, 1, "cmdoption-llvm-dwarfdump-arg-FILE", "@&lt;FILE&gt;"]], "llvm-exegesis": [[479, 0, 1, "cmdoption-llvm-exegesis-dump-object-to-disk", "--dump-object-to-disk"], [479, 0, 1, "cmdoption-llvm-exegesis-analysis-clustering", "-analysis-clustering"], [479, 0, 1, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", "-analysis-clustering-epsilon"], [479, 0, 1, "cmdoption-llvm-exegesis-analysis-clusters-output-file", "-analysis-clusters-output-file"], [479, 0, 1, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", "-analysis-display-unstable-clusters"], [479, 0, 1, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", "-analysis-inconsistencies-output-file"], [479, 0, 1, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", "-analysis-inconsistency-epsilon"], [479, 0, 1, "cmdoption-llvm-exegesis-analysis-numpoints", "-analysis-numpoints"], [479, 0, 1, "cmdoption-llvm-exegesis-benchmarks-file", "-benchmarks-file"], [479, 0, 1, "cmdoption-llvm-exegesis-help", "-help"], [479, 0, 1, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", "-ignore-invalid-sched-class"], [479, 0, 1, "cmdoption-llvm-exegesis-max-configs-per-opcode", "-max-configs-per-opcode"], [479, 0, 1, "cmdoption-llvm-exegesis-mcpu", "-mcpu"], [479, 0, 1, "cmdoption-llvm-exegesis-mode", "-mode"], [479, 0, 1, "cmdoption-llvm-exegesis-num-repetitions", "-num-repetitions"], [479, 0, 1, "cmdoption-llvm-exegesis-opcode-index", "-opcode-index"], [479, 0, 1, "cmdoption-llvm-exegesis-opcode-name", "-opcode-name"], [479, 0, 1, "cmdoption-llvm-exegesis-snippets-file", "-snippets-file"]], "llvm-link": [[482, 0, 1, "cmdoption-llvm-link-S", "-S"], [482, 0, 1, "cmdoption-llvm-link-d", "-d"], [482, 0, 1, "cmdoption-llvm-link-f", "-f"], [482, 0, 1, "cmdoption-llvm-link-help", "-help"], [482, 0, 1, "cmdoption-llvm-link-o", "-o"], [482, 0, 1, "cmdoption-llvm-link-v", "-v"]], "llvm-lipo": [[483, 0, 1, "cmdoption-llvm-lipo-archs", "-archs"], [483, 0, 1, "cmdoption-llvm-lipo-create", "-create"], [483, 0, 1, "cmdoption-llvm-lipo-help", "-h"], [483, 0, 1, "cmdoption-llvm-lipo-help", "-help"], [483, 0, 1, "cmdoption-llvm-lipo-info", "-info"], [483, 0, 1, "cmdoption-llvm-lipo-replace", "-replace"], [483, 0, 1, "cmdoption-llvm-lipo-segalign", "-segalign"], [483, 0, 1, "cmdoption-llvm-lipo-thin", "-thin"], [483, 0, 1, "cmdoption-llvm-lipo-verify_arch", "-verify_arch"], [483, 0, 1, "cmdoption-llvm-lipo-version", "-version"]], "llvm-locstats": [[484, 0, 1, "cmdoption-llvm-locstats-draw-plot", "--draw-plot"], [484, 0, 1, "cmdoption-llvm-locstats-ignore-debug-entry-values", "--ignore-debug-entry-values"], [484, 0, 1, "cmdoption-llvm-locstats-only-formal-parameters", "--only-formal-parameters"], [484, 0, 1, "cmdoption-llvm-locstats-only-variables", "--only-variables"]], "llvm-mca": [[485, 0, 1, "cmdoption-llvm-mca-all-stats", "-all-stats"], [485, 0, 1, "cmdoption-llvm-mca-all-views", "-all-views"], [485, 0, 1, "cmdoption-llvm-mca-bottleneck-analysis", "-bottleneck-analysis"], [485, 0, 1, "cmdoption-llvm-mca-dispatch", "-dispatch"], [485, 0, 1, "cmdoption-llvm-mca-dispatch-stats", "-dispatch-stats"], [485, 0, 1, "cmdoption-llvm-mca-help", "-help"], [485, 0, 1, "cmdoption-llvm-mca-instruction-info", "-instruction-info"], [485, 0, 1, "cmdoption-llvm-mca-instruction-tables", "-instruction-tables"], [485, 0, 1, "cmdoption-llvm-mca-iterations", "-iterations"], [485, 0, 1, "cmdoption-llvm-mca-lqueue", "-lqueue"], [485, 0, 1, "cmdoption-llvm-mca-march", "-march"], [485, 0, 1, "cmdoption-llvm-mca-mcpu", "-mcpu"], [485, 0, 1, "cmdoption-llvm-mca-mtriple", "-mtriple"], [485, 0, 1, "cmdoption-llvm-mca-noalias", "-noalias"], [485, 0, 1, "cmdoption-llvm-mca-o", "-o"], [485, 0, 1, "cmdoption-llvm-mca-output-asm-variant", "-output-asm-variant"], [485, 0, 1, "cmdoption-llvm-mca-print-imm-hex", "-print-imm-hex"], [485, 0, 1, "cmdoption-llvm-mca-register-file-size", "-register-file-size"], [485, 0, 1, "cmdoption-llvm-mca-register-file-stats", "-register-file-stats"], [485, 0, 1, "cmdoption-llvm-mca-resource-pressure", "-resource-pressure"], [485, 0, 1, "cmdoption-llvm-mca-retire-stats", "-retire-stats"], [485, 0, 1, "cmdoption-llvm-mca-scheduler-stats", "-scheduler-stats"], [485, 0, 1, "cmdoption-llvm-mca-show-encoding", "-show-encoding"], [485, 0, 1, "cmdoption-llvm-mca-squeue", "-squeue"], [485, 0, 1, "cmdoption-llvm-mca-timeline", "-timeline"], [485, 0, 1, "cmdoption-llvm-mca-timeline-max-cycles", "-timeline-max-cycles"], [485, 0, 1, "cmdoption-llvm-mca-timeline-max-iterations", "-timeline-max-iterations"]], "llvm-nm": [[486, 0, 1, "cmdoption-llvm-nm-add-dyldinfo", "--add-dyldinfo"], [486, 0, 1, "cmdoption-llvm-nm-arch", "--arch"], [486, 0, 1, "cmdoption-llvm-nm-debug-syms", "--debug-syms"], [486, 0, 1, "cmdoption-llvm-nm-defined-only", "--defined-only"], [486, 0, 1, "cmdoption-llvm-nm-demangle", "--demangle"], [486, 0, 1, "cmdoption-llvm-nm-dyldinfo-only", "--dyldinfo-only"], [486, 0, 1, "cmdoption-llvm-nm-dynamic", "--dynamic"], [486, 0, 1, "cmdoption-llvm-nm-extern-only", "--extern-only"], [486, 0, 1, "cmdoption-llvm-nm-format", "--format"], [486, 0, 1, "cmdoption-llvm-nm-help", "--help"], [486, 0, 1, "cmdoption-llvm-nm-help-list", "--help-list"], [486, 0, 1, "cmdoption-llvm-nm-just-symbol-name", "--just-symbol-name"], [486, 0, 1, "cmdoption-llvm-nm-no-demangle", "--no-demangle"], [486, 0, 1, "cmdoption-llvm-nm-no-dyldinfo", "--no-dyldinfo"], [486, 0, 1, "cmdoption-llvm-nm-no-llvm-bc", "--no-llvm-bc"], [486, 0, 1, "cmdoption-llvm-nm-no-sort", "--no-sort"], [486, 0, 1, "cmdoption-llvm-nm-no-weak", "--no-weak"], [486, 0, 1, "cmdoption-llvm-nm-numeric-sort", "--numeric-sort"], [486, 0, 1, "cmdoption-llvm-nm-portability", "--portability"], [486, 0, 1, "cmdoption-llvm-nm-print-armap", "--print-armap"], [486, 0, 1, "cmdoption-llvm-nm-print-file-name", "--print-file-name"], [486, 0, 1, "cmdoption-llvm-nm-print-size", "--print-size"], [486, 0, 1, "cmdoption-llvm-nm-radix", "--radix"], [486, 0, 1, "cmdoption-llvm-nm-reverse-sort", "--reverse-sort"], [486, 0, 1, "cmdoption-llvm-nm-size-sort", "--size-sort"], [486, 0, 1, "cmdoption-llvm-nm-special-syms", "--special-syms"], [486, 0, 1, "cmdoption-llvm-nm-undefined-only", "--undefined-only"], [486, 0, 1, "cmdoption-llvm-nm-version", "--version"], [486, 0, 1, "cmdoption-llvm-nm-without-aliases", "--without-aliases"], [486, 0, 1, "cmdoption-llvm-nm-print-file-name", "-A"], [486, 0, 1, "cmdoption-llvm-nm-B", "-B"], [486, 0, 1, "cmdoption-llvm-nm-demangle", "-C"], [486, 0, 1, "cmdoption-llvm-nm-dynamic", "-D"], [486, 0, 1, "cmdoption-llvm-nm-print-armap", "-M"], [486, 0, 1, "cmdoption-llvm-nm-portability", "-P"], [486, 0, 1, "cmdoption-llvm-nm-print-size", "-S"], [486, 0, 1, "cmdoption-llvm-nm-defined-only", "-U"], [486, 0, 1, "cmdoption-llvm-nm-no-weak", "-W"], [486, 0, 1, "cmdoption-llvm-nm-debug-syms", "-a"], [486, 0, 1, "cmdoption-llvm-nm-format", "-f"], [486, 0, 1, "cmdoption-llvm-nm-extern-only", "-g"], [486, 0, 1, "cmdoption-llvm-nm-help", "-h"], [486, 0, 1, "cmdoption-llvm-nm-just-symbol-name", "-j"], [486, 0, 1, "cmdoption-llvm-nm-m", "-m"], [486, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-n"], [486, 0, 1, "cmdoption-llvm-nm-print-file-name", "-o"], [486, 0, 1, "cmdoption-llvm-nm-no-sort", "-p"], [486, 0, 1, "cmdoption-llvm-nm-reverse-sort", "-r"], [486, 0, 1, "cmdoption-llvm-nm-s", "-s"], [486, 0, 1, "cmdoption-llvm-nm-radix", "-t"], [486, 0, 1, "cmdoption-llvm-nm-undefined-only", "-u"], [486, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-v"], [486, 0, 1, "cmdoption-llvm-nm-x", "-x"], [486, 0, 1, "cmdoption-llvm-nm-arg-FILE", "@&lt;FILE&gt;"]], "llvm-objcopy": [[487, 0, 1, "cmdoption-llvm-objcopy-add-gnu-debuglink", "--add-gnu-debuglink"], [487, 0, 1, "cmdoption-llvm-objcopy-add-section", "--add-section"], [487, 0, 1, "cmdoption-llvm-objcopy-add-symbol", "--add-symbol"], [487, 0, 1, "cmdoption-llvm-objcopy-change-start", "--adjust-start"], [487, 0, 1, "cmdoption-llvm-objcopy-allow-broken-links", "--allow-broken-links"], [487, 0, 1, "cmdoption-llvm-objcopy-binary-architecture", "--binary-architecture"], [487, 0, 1, "cmdoption-llvm-objcopy-build-id-link-dir", "--build-id-link-dir"], [487, 0, 1, "cmdoption-llvm-objcopy-build-id-link-input", "--build-id-link-input"], [487, 0, 1, "cmdoption-llvm-objcopy-build-id-link-output", "--build-id-link-output"], [487, 0, 1, "cmdoption-llvm-objcopy-change-start", "--change-start"], [487, 0, 1, "cmdoption-llvm-objcopy-compress-debug-sections", "--compress-debug-sections"], [487, 0, 1, "cmdoption-llvm-objcopy-decompress-debug-sections", "--decompress-debug-sections"], [487, 0, 1, "cmdoption-llvm-objcopy-disable-deterministic-archives", "--disable-deterministic-archives"], [487, 0, 1, "cmdoption-llvm-objcopy-discard-all", "--discard-all"], [487, 0, 1, "cmdoption-llvm-objcopy-discard-locals", "--discard-locals"], [487, 0, 1, "cmdoption-llvm-objcopy-dump-section", "--dump-section"], [487, 0, 1, "cmdoption-llvm-objcopy-enable-deterministic-archives", "--enable-deterministic-archives"], [487, 0, 1, "cmdoption-llvm-objcopy-extract-dwo", "--extract-dwo"], [487, 0, 1, "cmdoption-llvm-objcopy-extract-main-partition", "--extract-main-partition"], [487, 0, 1, "cmdoption-llvm-objcopy-extract-partition", "--extract-partition"], [487, 0, 1, "cmdoption-llvm-objcopy-globalize-symbol", "--globalize-symbol"], [487, 0, 1, "cmdoption-llvm-objcopy-globalize-symbols", "--globalize-symbols"], [487, 0, 1, "cmdoption-llvm-objcopy-help", "--help"], [487, 0, 1, "cmdoption-llvm-objcopy-input-target", "--input-target"], [487, 0, 1, "cmdoption-llvm-objcopy-keep-file-symbols", "--keep-file-symbols"], [487, 0, 1, "cmdoption-llvm-objcopy-keep-global-symbol", "--keep-global-symbol"], [487, 0, 1, "cmdoption-llvm-objcopy-keep-global-symbols", "--keep-global-symbols"], [487, 0, 1, "cmdoption-llvm-objcopy-keep-section", "--keep-section"], [487, 0, 1, "cmdoption-llvm-objcopy-keep-symbol", "--keep-symbol"], [487, 0, 1, "cmdoption-llvm-objcopy-keep-symbols", "--keep-symbols"], [487, 0, 1, "cmdoption-llvm-objcopy-localize-hidden", "--localize-hidden"], [487, 0, 1, "cmdoption-llvm-objcopy-localize-symbol", "--localize-symbol"], [487, 0, 1, "cmdoption-llvm-objcopy-localize-symbols", "--localize-symbols"], [487, 0, 1, "cmdoption-llvm-objcopy-new-symbol-visibility", "--new-symbol-visibility"], [487, 0, 1, "cmdoption-llvm-objcopy-only-keep-debug", "--only-keep-debug"], [487, 0, 1, "cmdoption-llvm-objcopy-only-section", "--only-section"], [487, 0, 1, "cmdoption-llvm-objcopy-output-target", "--output-target"], [487, 0, 1, "cmdoption-llvm-objcopy-prefix-alloc-sections", "--prefix-alloc-sections"], [487, 0, 1, "cmdoption-llvm-objcopy-prefix-symbols", "--prefix-symbols"], [487, 0, 1, "cmdoption-llvm-objcopy-preserve-dates", "--preserve-dates"], [487, 0, 1, "cmdoption-llvm-objcopy-redefine-sym", "--redefine-sym"], [487, 0, 1, "cmdoption-llvm-objcopy-redefine-syms", "--redefine-syms"], [487, 0, 1, "cmdoption-llvm-objcopy-regex", "--regex"], [487, 0, 1, "cmdoption-llvm-objcopy-remove-section", "--remove-section"], [487, 0, 1, "cmdoption-llvm-objcopy-rename-section", "--rename-section"], [487, 0, 1, "cmdoption-llvm-objcopy-set-section-alignment", "--set-section-alignment"], [487, 0, 1, "cmdoption-llvm-objcopy-set-section-flags", "--set-section-flags"], [487, 0, 1, "cmdoption-llvm-objcopy-set-start-addr", "--set-start-addr"], [487, 0, 1, "cmdoption-llvm-objcopy-split-dwo", "--split-dwo"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-all", "--strip-all"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-all-gnu", "--strip-all-gnu"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-debug", "--strip-debug"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-dwo", "--strip-dwo"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-non-alloc", "--strip-non-alloc"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-sections", "--strip-sections"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-symbol", "--strip-symbol"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-symbols", "--strip-symbols"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded", "--strip-unneeded"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded-symbol", "--strip-unneeded-symbol"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded-symbols", "--strip-unneeded-symbols"], [487, 0, 1, "cmdoption-llvm-objcopy-target", "--target"], [487, 0, 1, "cmdoption-llvm-objcopy-version", "--version"], [487, 0, 1, "cmdoption-llvm-objcopy-weaken", "--weaken"], [487, 0, 1, "cmdoption-llvm-objcopy-weaken-symbol", "--weaken-symbol"], [487, 0, 1, "cmdoption-llvm-objcopy-weaken-symbols", "--weaken-symbols"], [487, 0, 1, "cmdoption-llvm-objcopy-wildcard", "--wildcard"], [487, 0, 1, "cmdoption-llvm-objcopy-binary-architecture", "-B"], [487, 0, 1, "cmdoption-llvm-objcopy-enable-deterministic-archives", "-D"], [487, 0, 1, "cmdoption-llvm-objcopy-target", "-F"], [487, 0, 1, "cmdoption-llvm-objcopy-input-target", "-I"], [487, 0, 1, "cmdoption-llvm-objcopy-keep-symbol", "-K"], [487, 0, 1, "cmdoption-llvm-objcopy-localize-symbol", "-L"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-symbol", "-N"], [487, 0, 1, "cmdoption-llvm-objcopy-output-target", "-O"], [487, 0, 1, "cmdoption-llvm-objcopy-remove-section", "-R"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-all", "-S"], [487, 0, 1, "cmdoption-llvm-objcopy-disable-deterministic-archives", "-U"], [487, 0, 1, "cmdoption-llvm-objcopy-version", "-V"], [487, 0, 1, "cmdoption-llvm-objcopy-weaken-symbol", "-W"], [487, 0, 1, "cmdoption-llvm-objcopy-discard-locals", "-X"], [487, 0, 1, "cmdoption-llvm-objcopy-strip-debug", "-g"], [487, 0, 1, "cmdoption-llvm-objcopy-help", "-h"], [487, 0, 1, "cmdoption-llvm-objcopy-only-section", "-j"], [487, 0, 1, "cmdoption-llvm-objcopy-preserve-dates", "-p"], [487, 0, 1, "cmdoption-llvm-objcopy-wildcard", "-w"], [487, 0, 1, "cmdoption-llvm-objcopy-discard-all", "-x"], [487, 0, 1, "cmdoption-llvm-objcopy-arg-FILE", "@&lt;FILE&gt;"]], "llvm-objdump": [[488, 0, 1, "cmdoption-llvm-objdump-adjust-vma", "--adjust-vma"], [488, 0, 1, "cmdoption-llvm-objdump-x", "--all-headers"], [488, 0, 1, "cmdoption-llvm-objdump-arch", "--arch"], [488, 0, 1, "cmdoption-llvm-objdump-arch-name", "--arch-name"], [488, 0, 1, "cmdoption-llvm-objdump-a", "--archive-headers"], [488, 0, 1, "cmdoption-llvm-objdump-archive-member-offsets", "--archive-member-offsets"], [488, 0, 1, "cmdoption-llvm-objdump-bind", "--bind"], [488, 0, 1, "cmdoption-llvm-objdump-cfg", "--cfg"], [488, 0, 1, "cmdoption-llvm-objdump-data-in-code", "--data-in-code"], [488, 0, 1, "cmdoption-llvm-objdump-C", "--demangle"], [488, 0, 1, "cmdoption-llvm-objdump-dis-symname", "--dis-symname"], [488, 0, 1, "cmdoption-llvm-objdump-d", "--disassemble"], [488, 0, 1, "cmdoption-llvm-objdump-D", "--disassemble-all"], [488, 0, 1, "cmdoption-llvm-objdump-disassemble-functions", "--disassemble-functions"], [488, 0, 1, "cmdoption-llvm-objdump-z", "--disassemble-zeroes"], [488, 0, 1, "cmdoption-llvm-objdump-M", "--disassembler-options"], [488, 0, 1, "cmdoption-llvm-objdump-dsym", "--dsym"], [488, 0, 1, "cmdoption-llvm-objdump-dwarf", "--dwarf"], [488, 0, 1, "cmdoption-llvm-objdump-dylib-id", "--dylib-id"], [488, 0, 1, "cmdoption-llvm-objdump-dylibs-used", "--dylibs-used"], [488, 0, 1, "cmdoption-llvm-objdump-R", "--dynamic-reloc"], [488, 0, 1, "cmdoption-llvm-objdump-exports-trie", "--exports-trie"], [488, 0, 1, "cmdoption-llvm-objdump-fault-map-section", "--fault-map-section"], [488, 0, 1, "cmdoption-llvm-objdump-f", "--file-headers"], [488, 0, 1, "cmdoption-llvm-objdump-s", "--full-contents"], [488, 0, 1, "cmdoption-llvm-objdump-full-leading-addr", "--full-leading-addr"], [488, 0, 1, "cmdoption-llvm-objdump-h", "--headers"], [488, 0, 1, "cmdoption-llvm-objdump-help", "--help"], [488, 0, 1, "cmdoption-llvm-objdump-indirect-symbols", "--indirect-symbols"], [488, 0, 1, "cmdoption-llvm-objdump-info-plist", "--info-plist"], [488, 0, 1, "cmdoption-llvm-objdump-lazy-bind", "--lazy-bind"], [488, 0, 1, "cmdoption-llvm-objdump-l", "--line-numbers"], [488, 0, 1, "cmdoption-llvm-objdump-link-opt-hints", "--link-opt-hints"], [488, 0, 1, "cmdoption-llvm-objdump-m", "--macho"], [488, 0, 1, "cmdoption-llvm-objdump-mattr", "--mattr"], [488, 0, 1, "cmdoption-llvm-objdump-mcpu", "--mcpu"], [488, 0, 1, "cmdoption-llvm-objdump-no-leading-addr", "--no-leading-addr"], [488, 0, 1, "cmdoption-llvm-objdump-no-leading-headers", "--no-leading-headers"], [488, 0, 1, "cmdoption-llvm-objdump-no-show-raw-insn", "--no-show-raw-insn"], [488, 0, 1, "cmdoption-llvm-objdump-no-symbolic-operands", "--no-symbolic-operands"], [488, 0, 1, "cmdoption-llvm-objdump-non-verbose", "--non-verbose"], [488, 0, 1, "cmdoption-llvm-objdump-objc-meta-data", "--objc-meta-data"], [488, 0, 1, "cmdoption-llvm-objdump-print-imm-hex", "--print-imm-hex"], [488, 0, 1, "cmdoption-llvm-objdump-private-header", "--private-header"], [488, 0, 1, "cmdoption-llvm-objdump-p", "--private-headers"], [488, 0, 1, "cmdoption-llvm-objdump-raw-clang-ast", "--raw-clang-ast"], [488, 0, 1, "cmdoption-llvm-objdump-rebase", "--rebase"], [488, 0, 1, "cmdoption-llvm-objdump-r", "--reloc"], [488, 0, 1, "cmdoption-llvm-objdump-j", "--section"], [488, 0, 1, "cmdoption-llvm-objdump-h", "--section-headers"], [488, 0, 1, "cmdoption-llvm-objdump-show-lma", "--show-lma"], [488, 0, 1, "cmdoption-llvm-objdump-S", "--source"], [488, 0, 1, "cmdoption-llvm-objdump-start-address", "--start-address"], [488, 0, 1, "cmdoption-llvm-objdump-stop-address", "--stop-address"], [488, 0, 1, "cmdoption-llvm-objdump-t", "--syms"], [488, 0, 1, "cmdoption-llvm-objdump-triple", "--triple"], [488, 0, 1, "cmdoption-llvm-objdump-universal-headers", "--universal-headers"], [488, 0, 1, "cmdoption-llvm-objdump-u", "--unwind-info"], [488, 0, 1, "cmdoption-llvm-objdump-version", "--version"], [488, 0, 1, "cmdoption-llvm-objdump-weak-bind", "--weak-bind"], [488, 0, 1, "cmdoption-llvm-objdump-w", "--wide"], [488, 0, 1, "cmdoption-llvm-objdump-x86-asm-syntax", "--x86-asm-syntax"], [488, 0, 1, "cmdoption-llvm-objdump-C", "-C"], [488, 0, 1, "cmdoption-llvm-objdump-D", "-D"], [488, 0, 1, "cmdoption-llvm-objdump-M", "-M"], [488, 0, 1, "cmdoption-llvm-objdump-R", "-R"], [488, 0, 1, "cmdoption-llvm-objdump-S", "-S"], [488, 0, 1, "cmdoption-llvm-objdump-a", "-a"], [488, 0, 1, "cmdoption-llvm-objdump-d", "-d"], [488, 0, 1, "cmdoption-llvm-objdump-f", "-f"], [488, 0, 1, "cmdoption-llvm-objdump-g", "-g"], [488, 0, 1, "cmdoption-llvm-objdump-h", "-h"], [488, 0, 1, "cmdoption-llvm-objdump-j", "-j"], [488, 0, 1, "cmdoption-llvm-objdump-l", "-l"], [488, 0, 1, "cmdoption-llvm-objdump-m", "-m"], [488, 0, 1, "cmdoption-llvm-objdump-p", "-p"], [488, 0, 1, "cmdoption-llvm-objdump-r", "-r"], [488, 0, 1, "cmdoption-llvm-objdump-s", "-s"], [488, 0, 1, "cmdoption-llvm-objdump-t", "-t"], [488, 0, 1, "cmdoption-llvm-objdump-u", "-u"], [488, 0, 1, "cmdoption-llvm-objdump-w", "-w"], [488, 0, 1, "cmdoption-llvm-objdump-x", "-x"], [488, 0, 1, "cmdoption-llvm-objdump-z", "-z"], [488, 0, 1, "cmdoption-llvm-objdump-arg-FILE", "@&lt;FILE&gt;"], [488, 0, 1, "cmdoption-llvm-objdump-arg-att", "att"], [488, 0, 1, "cmdoption-llvm-objdump-arg-intel", "intel"]], "llvm-pdbutil-bytes": [[489, 0, 1, "cmdoption-llvm-pdbutil-bytes-block-range", "-block-range"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-byte-range", "-byte-range"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-chunks", "-chunks"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-ec", "-ec"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-files", "-files"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-fpm", "-fpm"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-id", "-id"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-mod", "-mod"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-modi", "-modi"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-name-map", "-name-map"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-sc", "-sc"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-sm", "-sm"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-split-chunks", "-split-chunks"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-stream-data", "-stream-data"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-syms", "-syms"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-type", "-type"], [489, 0, 1, "cmdoption-llvm-pdbutil-bytes-type-server", "-type-server"]], "llvm-pdbutil-dump": [[489, 0, 1, "cmdoption-llvm-pdbutil-dump-all", "-all"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-dependents", "-dependents"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-files", "-files"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-global-extras", "-global-extras"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-globals", "-globals"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-id-data", "-id-data"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-id-extras", "-id-extras"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-id-index", "-id-index"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-ids", "-ids"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-il", "-il"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-l", "-l"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-modi", "-modi"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-modules", "-modules"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-public-extras", "-public-extras"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-publics", "-publics"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-section-contribs", "-section-contribs"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-section-headers", "-section-headers"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-section-map", "-section-map"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-stream-blocks", "-stream-blocks"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-streams", "-streams"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-string-table", "-string-table"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-summary", "-summary"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-sym-data", "-sym-data"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-symbols", "-symbols"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-type-data", "-type-data"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-type-extras", "-type-extras"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-type-index", "-type-index"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-types", "-types"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-xme", "-xme"], [489, 0, 1, "cmdoption-llvm-pdbutil-dump-xmi", "-xmi"]], "llvm-pdbutil-merge": [[489, 0, 1, "cmdoption-llvm-pdbutil-merge-pdb", "-pdb"]], "llvm-pdbutil-pretty": [[489, 0, 1, "cmdoption-llvm-pdbutil-pretty-all", "-all"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-definitions", "-class-definitions"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-order", "-class-order"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", "-class-recurse-depth"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-classes", "-classes"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-color-output", "-color-output"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-compilands", "-compilands"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-enums", "-enums"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", "-exclude-compilands"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", "-exclude-symbols"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-types", "-exclude-types"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-externals", "-externals"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-globals", "-globals"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-compilands", "-include-compilands"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-symbols", "-include-symbols"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-types", "-include-types"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-lines", "-lines"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-load-address", "-load-address"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding", "-min-class-padding"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", "-min-class-padding-imm"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-type-size", "-min-type-size"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-module-syms", "-module-syms"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", "-no-compiler-generated"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", "-no-enum-definitions"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-system-libs", "-no-system-libs"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-sym-types", "-sym-types"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-symbol-order", "-symbol-order"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-typedefs", "-typedefs"], [489, 0, 1, "cmdoption-llvm-pdbutil-pretty-types", "-types"]], "llvm-pdbutil-yaml2pdb": [[489, 0, 1, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", "-pdb"]], "llvm-profdata-merge": [[490, 0, 1, "cmdoption-llvm-profdata-merge-binary", "-binary"], [490, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "-f"], [490, 0, 1, "cmdoption-llvm-profdata-merge-failure-mode", "-failure-mode"], [490, 0, 1, "cmdoption-llvm-profdata-merge-gcc", "-gcc"], [490, 0, 1, "cmdoption-llvm-profdata-merge-help", "-help"], [490, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "-input-files"], [490, 0, 1, "cmdoption-llvm-profdata-merge-instr", "-instr"], [490, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "-j"], [490, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "-num-threads"], [490, 0, 1, "cmdoption-llvm-profdata-merge-output", "-o"], [490, 0, 1, "cmdoption-llvm-profdata-merge-output", "-output"], [490, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "-r"], [490, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "-remapping-file"], [490, 0, 1, "cmdoption-llvm-profdata-merge-sample", "-sample"], [490, 0, 1, "cmdoption-llvm-profdata-merge-sparse", "-sparse"], [490, 0, 1, "cmdoption-llvm-profdata-merge-text", "-text"], [490, 0, 1, "cmdoption-llvm-profdata-merge-weighted-input", "-weighted-input"]], "llvm-profdata-overlap": [[490, 0, 1, "cmdoption-llvm-profdata-overlap-cs", "-cs"], [490, 0, 1, "cmdoption-llvm-profdata-overlap-function", "-function"], [490, 0, 1, "cmdoption-llvm-profdata-overlap-help", "-help"], [490, 0, 1, "cmdoption-llvm-profdata-overlap-o", "-o"], [490, 0, 1, "cmdoption-llvm-profdata-overlap-value-cutoff", "-value-cutoff"]], "llvm-profdata-show": [[490, 0, 1, "cmdoption-llvm-profdata-show-all-functions", "-all-functions"], [490, 0, 1, "cmdoption-llvm-profdata-show-counts", "-counts"], [490, 0, 1, "cmdoption-llvm-profdata-show-function", "-function"], [490, 0, 1, "cmdoption-llvm-profdata-show-help", "-help"], [490, 0, 1, "cmdoption-llvm-profdata-show-instr", "-instr"], [490, 0, 1, "cmdoption-llvm-profdata-show-list-below-cutoff", "-list-below-cutoff"], [490, 0, 1, "cmdoption-llvm-profdata-show-memop-sizes", "-memop-sizes"], [490, 0, 1, "cmdoption-llvm-profdata-show-output", "-o"], [490, 0, 1, "cmdoption-llvm-profdata-show-output", "-output"], [490, 0, 1, "cmdoption-llvm-profdata-show-sample", "-sample"], [490, 0, 1, "cmdoption-llvm-profdata-show-showcs", "-showcs"], [490, 0, 1, "cmdoption-llvm-profdata-show-text", "-text"], [490, 0, 1, "cmdoption-llvm-profdata-show-topn", "-topn"], [490, 0, 1, "cmdoption-llvm-profdata-show-value-cutoff", "-value-cutoff"]], "llvm-readelf": [[492, 0, 1, "cmdoption-llvm-readelf-addrsig", "--addrsig"], [492, 0, 1, "cmdoption-llvm-readelf-all", "--all"], [492, 0, 1, "cmdoption-llvm-readelf-arch-specific", "--arch-specific"], [492, 0, 1, "cmdoption-llvm-readelf-color", "--color"], [492, 0, 1, "cmdoption-llvm-readelf-demangle", "--demangle"], [492, 0, 1, "cmdoption-llvm-readelf-dyn-relocations", "--dyn-relocations"], [492, 0, 1, "cmdoption-llvm-readelf-dyn-symbols", "--dyn-symbols"], [492, 0, 1, "cmdoption-llvm-readelf-dyn-symbols", "--dyn-syms"], [492, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "--dynamic"], [492, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "--dynamic-table"], [492, 0, 1, "cmdoption-llvm-readelf-elf-cg-profile", "--elf-cg-profile"], [492, 0, 1, "cmdoption-llvm-readelf-elf-hash-histogram", "--elf-hash-histogram"], [492, 0, 1, "cmdoption-llvm-readelf-elf-linker-options", "--elf-linker-options"], [492, 0, 1, "cmdoption-llvm-readelf-elf-output-style", "--elf-output-style"], [492, 0, 1, "cmdoption-llvm-readelf-elf-section-groups", "--elf-section-groups"], [492, 0, 1, "cmdoption-llvm-readelf-expand-relocs", "--expand-relocs"], [492, 0, 1, "cmdoption-llvm-readelf-file-headers", "--file-headers"], [492, 0, 1, "cmdoption-llvm-readelf-gnu-hash-table", "--gnu-hash-table"], [492, 0, 1, "cmdoption-llvm-readelf-hash-symbols", "--hash-symbols"], [492, 0, 1, "cmdoption-llvm-readelf-hash-table", "--hash-table"], [492, 0, 1, "cmdoption-llvm-readelf-headers", "--headers"], [492, 0, 1, "cmdoption-llvm-readelf-help", "--help"], [492, 0, 1, "cmdoption-llvm-readelf-help-list", "--help-list"], [492, 0, 1, "cmdoption-llvm-readelf-hex-dump", "--hex-dump"], [492, 0, 1, "cmdoption-llvm-readelf-elf-hash-histogram", "--histogram"], [492, 0, 1, "cmdoption-llvm-readelf-needed-libs", "--needed-libs"], [492, 0, 1, "cmdoption-llvm-readelf-notes", "--notes"], [492, 0, 1, "cmdoption-llvm-readelf-program-headers", "--program-headers"], [492, 0, 1, "cmdoption-llvm-readelf-raw-relr", "--raw-relr"], [492, 0, 1, "cmdoption-llvm-readelf-relocations", "--relocations"], [492, 0, 1, "cmdoption-llvm-readelf-relocations", "--relocs"], [492, 0, 1, "cmdoption-llvm-readelf-section-data", "--section-data"], [492, 0, 1, "cmdoption-llvm-readelf-elf-section-groups", "--section-groups"], [492, 0, 1, "cmdoption-llvm-readelf-sections", "--section-headers"], [492, 0, 1, "cmdoption-llvm-readelf-section-mapping", "--section-mapping"], [492, 0, 1, "cmdoption-llvm-readelf-section-relocations", "--section-relocations"], [492, 0, 1, "cmdoption-llvm-readelf-section-symbols", "--section-symbols"], [492, 0, 1, "cmdoption-llvm-readelf-sections", "--sections"], [492, 0, 1, "cmdoption-llvm-readelf-program-headers", "--segments"], [492, 0, 1, "cmdoption-llvm-readelf-stack-sizes", "--stack-sizes"], [492, 0, 1, "cmdoption-llvm-readelf-stackmap", "--stackmap"], [492, 0, 1, "cmdoption-llvm-readelf-string-dump", "--string-dump"], [492, 0, 1, "cmdoption-llvm-readelf-symbols", "--symbols"], [492, 0, 1, "cmdoption-llvm-readelf-symbols", "--syms"], [492, 0, 1, "cmdoption-llvm-readelf-unwind", "--unwind"], [492, 0, 1, "cmdoption-llvm-readelf-version", "--version"], [492, 0, 1, "cmdoption-llvm-readelf-version-info", "--version-info"], [492, 0, 1, "cmdoption-llvm-readelf-arch-specific", "-A"], [492, 0, 1, "cmdoption-llvm-readelf-demangle", "-C"], [492, 0, 1, "cmdoption-llvm-readelf-elf-hash-histogram", "-I"], [492, 0, 1, "cmdoption-llvm-readelf-sections", "-S"], [492, 0, 1, "cmdoption-llvm-readelf-version-info", "-V"], [492, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "-d"], [492, 0, 1, "cmdoption-llvm-readelf-headers", "-e"], [492, 0, 1, "cmdoption-llvm-readelf-elf-section-groups", "-g"], [492, 0, 1, "cmdoption-llvm-readelf-file-headers", "-h"], [492, 0, 1, "cmdoption-llvm-readelf-program-headers", "-l"], [492, 0, 1, "cmdoption-llvm-readelf-notes", "-n"], [492, 0, 1, "cmdoption-llvm-readelf-string-dump", "-p"], [492, 0, 1, "cmdoption-llvm-readelf-relocations", "-r"], [492, 0, 1, "cmdoption-llvm-readelf-symbols", "-s"], [492, 0, 1, "cmdoption-llvm-readelf-unwind", "-u"], [492, 0, 1, "cmdoption-llvm-readelf-hex-dump", "-x"], [492, 0, 1, "cmdoption-llvm-readelf-arg-FILE", "@&lt;FILE&gt;"]], "llvm-readobj": [[493, 0, 1, "cmdoption-llvm-readobj-addrsig", "--addrsig"], [493, 0, 1, "cmdoption-llvm-readobj-all", "--all"], [493, 0, 1, "cmdoption-llvm-readobj-arch-specific", "--arch-specific"], [493, 0, 1, "cmdoption-llvm-readobj-codeview", "--codeview"], [493, 0, 1, "cmdoption-llvm-readobj-codeview-ghash", "--codeview-ghash"], [493, 0, 1, "cmdoption-llvm-readobj-codeview-merged-types", "--codeview-merged-types"], [493, 0, 1, "cmdoption-llvm-readobj-codeview-subsection-bytes", "--codeview-subsection-bytes"], [493, 0, 1, "cmdoption-llvm-readobj-coff-basereloc", "--coff-basereloc"], [493, 0, 1, "cmdoption-llvm-readobj-coff-debug-directory", "--coff-debug-directory"], [493, 0, 1, "cmdoption-llvm-readobj-coff-directives", "--coff-directives"], [493, 0, 1, "cmdoption-llvm-readobj-coff-exports", "--coff-exports"], [493, 0, 1, "cmdoption-llvm-readobj-coff-imports", "--coff-imports"], [493, 0, 1, "cmdoption-llvm-readobj-coff-load-config", "--coff-load-config"], [493, 0, 1, "cmdoption-llvm-readobj-coff-resources", "--coff-resources"], [493, 0, 1, "cmdoption-llvm-readobj-color", "--color"], [493, 0, 1, "cmdoption-llvm-readobj-demangle", "--demangle"], [493, 0, 1, "cmdoption-llvm-readobj-dependent-libraries", "--dependent-libraries"], [493, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dt"], [493, 0, 1, "cmdoption-llvm-readobj-dyn-relocations", "--dyn-relocations"], [493, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dyn-symbols"], [493, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dyn-syms"], [493, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "--dynamic"], [493, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "--dynamic-table"], [493, 0, 1, "cmdoption-llvm-readobj-elf-cg-profile", "--elf-cg-profile"], [493, 0, 1, "cmdoption-llvm-readobj-elf-hash-histogram", "--elf-hash-histogram"], [493, 0, 1, "cmdoption-llvm-readobj-elf-linker-options", "--elf-linker-options"], [493, 0, 1, "cmdoption-llvm-readobj-elf-output-style", "--elf-output-style"], [493, 0, 1, "cmdoption-llvm-readobj-elf-section-groups", "--elf-section-groups"], [493, 0, 1, "cmdoption-llvm-readobj-expand-relocs", "--expand-relocs"], [493, 0, 1, "cmdoption-llvm-readobj-file-headers", "--file-headers"], [493, 0, 1, "cmdoption-llvm-readobj-gnu-hash-table", "--gnu-hash-table"], [493, 0, 1, "cmdoption-llvm-readobj-hash-symbols", "--hash-symbols"], [493, 0, 1, "cmdoption-llvm-readobj-hash-table", "--hash-table"], [493, 0, 1, "cmdoption-llvm-readobj-headers", "--headers"], [493, 0, 1, "cmdoption-llvm-readobj-help", "--help"], [493, 0, 1, "cmdoption-llvm-readobj-help-list", "--help-list"], [493, 0, 1, "cmdoption-llvm-readobj-hex-dump", "--hex-dump"], [493, 0, 1, "cmdoption-llvm-readobj-elf-hash-histogram", "--histogram"], [493, 0, 1, "cmdoption-llvm-readobj-macho-data-in-code", "--macho-data-in-code"], [493, 0, 1, "cmdoption-llvm-readobj-macho-dsymtab", "--macho-dsymtab"], [493, 0, 1, "cmdoption-llvm-readobj-macho-indirect-symbols", "--macho-indirect-symbols"], [493, 0, 1, "cmdoption-llvm-readobj-macho-linker-options", "--macho-linker-options"], [493, 0, 1, "cmdoption-llvm-readobj-macho-segment", "--macho-segment"], [493, 0, 1, "cmdoption-llvm-readobj-macho-version-min", "--macho-version-min"], [493, 0, 1, "cmdoption-llvm-readobj-needed-libs", "--needed-libs"], [493, 0, 1, "cmdoption-llvm-readobj-notes", "--notes"], [493, 0, 1, "cmdoption-llvm-readobj-program-headers", "--program-headers"], [493, 0, 1, "cmdoption-llvm-readobj-raw-relr", "--raw-relr"], [493, 0, 1, "cmdoption-llvm-readobj-relocations", "--relocations"], [493, 0, 1, "cmdoption-llvm-readobj-relocations", "--relocs"], [493, 0, 1, "cmdoption-llvm-readobj-section-data", "--sd"], [493, 0, 1, "cmdoption-llvm-readobj-section-data", "--section-data"], [493, 0, 1, "cmdoption-llvm-readobj-elf-section-groups", "--section-groups"], [493, 0, 1, "cmdoption-llvm-readobj-sections", "--section-headers"], [493, 0, 1, "cmdoption-llvm-readobj-section-mapping", "--section-mapping"], [493, 0, 1, "cmdoption-llvm-readobj-section-relocations", "--section-relocations"], [493, 0, 1, "cmdoption-llvm-readobj-section-symbols", "--section-symbols"], [493, 0, 1, "cmdoption-llvm-readobj-sections", "--sections"], [493, 0, 1, "cmdoption-llvm-readobj-program-headers", "--segments"], [493, 0, 1, "cmdoption-llvm-readobj-section-relocations", "--sr"], [493, 0, 1, "cmdoption-llvm-readobj-section-symbols", "--st"], [493, 0, 1, "cmdoption-llvm-readobj-stack-sizes", "--stack-sizes"], [493, 0, 1, "cmdoption-llvm-readobj-stackmap", "--stackmap"], [493, 0, 1, "cmdoption-llvm-readobj-string-dump", "--string-dump"], [493, 0, 1, "cmdoption-llvm-readobj-symbols", "--symbols"], [493, 0, 1, "cmdoption-llvm-readobj-symbols", "--syms"], [493, 0, 1, "cmdoption-llvm-readobj-unwind", "--unwind"], [493, 0, 1, "cmdoption-llvm-readobj-version", "--version"], [493, 0, 1, "cmdoption-llvm-readobj-version-info", "--version-info"], [493, 0, 1, "cmdoption-llvm-readobj-arch-specific", "-A"], [493, 0, 1, "cmdoption-llvm-readobj-demangle", "-C"], [493, 0, 1, "cmdoption-llvm-readobj-elf-hash-histogram", "-I"], [493, 0, 1, "cmdoption-llvm-readobj-sections", "-S"], [493, 0, 1, "cmdoption-llvm-readobj-version-info", "-V"], [493, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "-d"], [493, 0, 1, "cmdoption-llvm-readobj-headers", "-e"], [493, 0, 1, "cmdoption-llvm-readobj-elf-section-groups", "-g"], [493, 0, 1, "cmdoption-llvm-readobj-file-headers", "-h"], [493, 0, 1, "cmdoption-llvm-readobj-program-headers", "-l"], [493, 0, 1, "cmdoption-llvm-readobj-notes", "-n"], [493, 0, 1, "cmdoption-llvm-readobj-string-dump", "-p"], [493, 0, 1, "cmdoption-llvm-readobj-relocations", "-r"], [493, 0, 1, "cmdoption-llvm-readobj-sections", "-s"], [493, 0, 1, "cmdoption-llvm-readobj-symbols", "-t"], [493, 0, 1, "cmdoption-llvm-readobj-unwind", "-u"], [493, 0, 1, "cmdoption-llvm-readobj-hex-dump", "-x"], [493, 0, 1, "cmdoption-llvm-readobj-arg-FILE", "@&lt;FILE&gt;"]], "llvm-size": [[494, 0, 1, "cmdoption-llvm-size-arch", "--arch"], [494, 0, 1, "cmdoption-llvm-size-common", "--common"], [494, 0, 1, "cmdoption-llvm-size-format", "--format"], [494, 0, 1, "cmdoption-llvm-size-help", "--help"], [494, 0, 1, "cmdoption-llvm-size-help-list", "--help-list"], [494, 0, 1, "cmdoption-llvm-size-radix", "--radix"], [494, 0, 1, "cmdoption-llvm-size-totals", "--totals"], [494, 0, 1, "cmdoption-llvm-size-version", "--version"], [494, 0, 1, "cmdoption-llvm-size-A", "-A"], [494, 0, 1, "cmdoption-llvm-size-B", "-B"], [494, 0, 1, "cmdoption-llvm-size-d", "-d"], [494, 0, 1, "cmdoption-llvm-size-help", "-h"], [494, 0, 1, "cmdoption-llvm-size-l", "-l"], [494, 0, 1, "cmdoption-llvm-size-m", "-m"], [494, 0, 1, "cmdoption-llvm-size-o", "-o"], [494, 0, 1, "cmdoption-llvm-size-totals", "-t"], [494, 0, 1, "cmdoption-llvm-size-x", "-x"], [494, 0, 1, "cmdoption-llvm-size-arg-FILE", "@&lt;FILE&gt;"]], "llvm-stress": [[495, 0, 1, "cmdoption-llvm-stress-o", "-o"], [495, 0, 1, "cmdoption-llvm-stress-seed", "-seed"], [495, 0, 1, "cmdoption-llvm-stress-size", "-size"]], "llvm-strings": [[496, 0, 1, "cmdoption-llvm-strings-all", "--all"], [496, 0, 1, "cmdoption-llvm-strings-bytes", "--bytes"], [496, 0, 1, "cmdoption-llvm-strings-help", "--help"], [496, 0, 1, "cmdoption-llvm-strings-help-list", "--help-list"], [496, 0, 1, "cmdoption-llvm-strings-print-file-name", "--print-file-name"], [496, 0, 1, "cmdoption-llvm-strings-radix", "--radix"], [496, 0, 1, "cmdoption-llvm-strings-version", "--version"], [496, 0, 1, "cmdoption-llvm-strings-all", "-a"], [496, 0, 1, "cmdoption-llvm-strings-print-file-name", "-f"], [496, 0, 1, "cmdoption-llvm-strings-help", "-h"], [496, 0, 1, "cmdoption-llvm-strings-bytes", "-n"], [496, 0, 1, "cmdoption-llvm-strings-radix", "-t"], [496, 0, 1, "cmdoption-llvm-strings-arg-FILE", "@&lt;FILE&gt;"]], "llvm-strip": [[497, 0, 1, "cmdoption-llvm-strip-allow-broken-links", "--allow-broken-links"], [497, 0, 1, "cmdoption-llvm-strip-disable-deterministic-archives", "--disable-deterministic-archives"], [497, 0, 1, "cmdoption-llvm-strip-discard-all", "--discard-all"], [497, 0, 1, "cmdoption-llvm-strip-discard-locals", "--discard-locals"], [497, 0, 1, "cmdoption-llvm-strip-enable-deterministic-archives", "--enable-deterministic-archives"], [497, 0, 1, "cmdoption-llvm-strip-help", "--help"], [497, 0, 1, "cmdoption-llvm-strip-keep-file-symbols", "--keep-file-symbols"], [497, 0, 1, "cmdoption-llvm-strip-keep-section", "--keep-section"], [497, 0, 1, "cmdoption-llvm-strip-keep-symbol", "--keep-symbol"], [497, 0, 1, "cmdoption-llvm-strip-no-strip-all", "--no-strip-all"], [497, 0, 1, "cmdoption-llvm-strip-only-keep-debug", "--only-keep-debug"], [497, 0, 1, "cmdoption-llvm-strip-preserve-dates", "--preserve-dates"], [497, 0, 1, "cmdoption-llvm-strip-regex", "--regex"], [497, 0, 1, "cmdoption-llvm-strip-remove-section", "--remove-section"], [497, 0, 1, "cmdoption-llvm-strip-strip-all", "--strip-all"], [497, 0, 1, "cmdoption-llvm-strip-strip-all-gnu", "--strip-all-gnu"], [497, 0, 1, "cmdoption-llvm-strip-strip-debug", "--strip-debug"], [497, 0, 1, "cmdoption-llvm-strip-strip-sections", "--strip-sections"], [497, 0, 1, "cmdoption-llvm-strip-strip-symbol", "--strip-symbol"], [497, 0, 1, "cmdoption-llvm-strip-strip-unneeded", "--strip-unneeded"], [497, 0, 1, "cmdoption-llvm-strip-version", "--version"], [497, 0, 1, "cmdoption-llvm-strip-wildcard", "--wildcard"], [497, 0, 1, "cmdoption-llvm-strip-enable-deterministic-archives", "-D"], [497, 0, 1, "cmdoption-llvm-strip-keep-symbol", "-K"], [497, 0, 1, "cmdoption-llvm-strip-strip-symbol", "-N"], [497, 0, 1, "cmdoption-llvm-strip-remove-section", "-R"], [497, 0, 1, "cmdoption-llvm-strip-strip-all", "-S"], [497, 0, 1, "cmdoption-llvm-strip-disable-deterministic-archives", "-U"], [497, 0, 1, "cmdoption-llvm-strip-version", "-V"], [497, 0, 1, "cmdoption-llvm-strip-discard-locals", "-X"], [497, 0, 1, "cmdoption-llvm-strip-strip-debug", "-g"], [497, 0, 1, "cmdoption-llvm-strip-help", "-h"], [497, 0, 1, "cmdoption-llvm-strip-o", "-o"], [497, 0, 1, "cmdoption-llvm-strip-preserve-dates", "-p"], [497, 0, 1, "cmdoption-llvm-strip-wildcard", "-w"], [497, 0, 1, "cmdoption-llvm-strip-discard-all", "-x"], [497, 0, 1, "cmdoption-llvm-strip-arg-FILE", "@&lt;FILE&gt;"]], "llvm-symbolizer": [[498, 0, 1, "cmdoption-llvm-symbolizer-print-address", "--addresses"], [498, 0, 1, "cmdoption-llvm-symbolizer-adjust-vma", "--adjust-vma"], [498, 0, 1, "cmdoption-llvm-symbolizer-basenames", "--basenames"], [498, 0, 1, "cmdoption-llvm-symbolizer-default-arch", "--default-arch"], [498, 0, 1, "cmdoption-llvm-symbolizer-demangle", "--demangle"], [498, 0, 1, "cmdoption-llvm-symbolizer-dsym-hint", "--dsym-hint"], [498, 0, 1, "cmdoption-llvm-symbolizer-dwp", "--dwp"], [498, 0, 1, "cmdoption-llvm-symbolizer-obj", "--exe"], [498, 0, 1, "cmdoption-llvm-symbolizer-fallback-debug-path", "--fallback-debug-path"], [498, 0, 1, "cmdoption-llvm-symbolizer-functions", "--functions"], [498, 0, 1, "cmdoption-llvm-symbolizer-help", "--help"], [498, 0, 1, "cmdoption-llvm-symbolizer-help-list", "--help-list"], [498, 0, 1, "cmdoption-llvm-symbolizer-inlining", "--inlines"], [498, 0, 1, "cmdoption-llvm-symbolizer-inlining", "--inlining"], [498, 0, 1, "cmdoption-llvm-symbolizer-no-demangle", "--no-demangle"], [498, 0, 1, "cmdoption-llvm-symbolizer-obj", "--obj"], [498, 0, 1, "cmdoption-llvm-symbolizer-output-style", "--output-style"], [498, 0, 1, "cmdoption-llvm-symbolizer-pretty-print", "--pretty-print"], [498, 0, 1, "cmdoption-llvm-symbolizer-print-address", "--print-address"], [498, 0, 1, "cmdoption-llvm-symbolizer-print-source-context-lines", "--print-source-context-lines"], [498, 0, 1, "cmdoption-llvm-symbolizer-use-symbol-table", "--use-symbol-table"], [498, 0, 1, "cmdoption-llvm-symbolizer-verbose", "--verbose"], [498, 0, 1, "cmdoption-llvm-symbolizer-version", "--version"], [498, 0, 1, "cmdoption-llvm-symbolizer-demangle", "-C"], [498, 0, 1, "cmdoption-llvm-symbolizer-print-address", "-a"], [498, 0, 1, "cmdoption-llvm-symbolizer-obj", "-e"], [498, 0, 1, "cmdoption-llvm-symbolizer-functions", "-f"], [498, 0, 1, "cmdoption-llvm-symbolizer-help", "-h"], [498, 0, 1, "cmdoption-llvm-symbolizer-inlining", "-i"], [498, 0, 1, "cmdoption-llvm-symbolizer-pretty-print", "-p"], [498, 0, 1, "cmdoption-llvm-symbolizer-basenames", "-s"], [498, 0, 1, "cmdoption-llvm-symbolizer-arg-FILE", "@&lt;FILE&gt;"]], "opt": [[499, 0, 1, "cmdoption-opt-S", "-S"], [499, 0, 1, "cmdoption-opt-debug", "-debug"], [499, 0, 1, "cmdoption-opt-disable-inlining", "-disable-inlining"], [499, 0, 1, "cmdoption-opt-disable-opt", "-disable-opt"], [499, 0, 1, "cmdoption-opt-f", "-f"], [499, 0, 1, "cmdoption-opt-help", "-help"], [499, 0, 1, "cmdoption-opt-load", "-load"], [499, 0, 1, "cmdoption-opt-o", "-o"], [499, 0, 1, "cmdoption-opt-p", "-p"], [499, 0, 1, "cmdoption-opt-stats", "-stats"], [499, 0, 1, "cmdoption-opt-strip-debug", "-strip-debug"], [499, 0, 1, "cmdoption-opt-time-passes", "-time-passes"], [499, 0, 1, "cmdoption-opt-verify-each", "-verify-each"], [499, 0, 1, "cmdoption-opt-passname", "-{passname}"]], "tblgen": [[500, 0, 1, "cmdoption-tblgen-I", "-I"], [500, 0, 1, "cmdoption-tblgen-asmparsernum", "-asmparsernum"], [500, 0, 1, "cmdoption-tblgen-asmwriternum", "-asmwriternum"], [500, 0, 1, "cmdoption-tblgen-class", "-class"], [500, 0, 1, "cmdoption-tblgen-dump-json", "-dump-json"], [500, 0, 1, "cmdoption-tblgen-gen-asm-matcher", "-gen-asm-matcher"], [500, 0, 1, "cmdoption-tblgen-gen-asm-writer", "-gen-asm-writer"], [500, 0, 1, "cmdoption-tblgen-gen-dag-isel", "-gen-dag-isel"], [500, 0, 1, "cmdoption-tblgen-gen-dfa-packetizer", "-gen-dfa-packetizer"], [500, 0, 1, "cmdoption-tblgen-gen-disassembler", "-gen-disassembler"], [500, 0, 1, "cmdoption-tblgen-gen-emitter", "-gen-emitter"], [500, 0, 1, "cmdoption-tblgen-gen-enhanced-disassembly-info", "-gen-enhanced-disassembly-info"], [500, 0, 1, "cmdoption-tblgen-gen-exegesis", "-gen-exegesis"], [500, 0, 1, "cmdoption-tblgen-gen-fast-isel", "-gen-fast-isel"], [500, 0, 1, "cmdoption-tblgen-gen-instr-info", "-gen-instr-info"], [500, 0, 1, "cmdoption-tblgen-gen-intrinsic-enums", "-gen-intrinsic-enums"], [500, 0, 1, "cmdoption-tblgen-gen-intrinsic-impl", "-gen-intrinsic-impl"], [500, 0, 1, "cmdoption-tblgen-gen-pseudo-lowering", "-gen-pseudo-lowering"], [500, 0, 1, "cmdoption-tblgen-gen-register-info", "-gen-register-info"], [500, 0, 1, "cmdoption-tblgen-gen-subtarget", "-gen-subtarget"], [500, 0, 1, "cmdoption-tblgen-gen-tgt-intrinsic", "-gen-tgt-intrinsic"], [500, 0, 1, "cmdoption-tblgen-help", "-help"], [500, 0, 1, "cmdoption-tblgen-o", "-o"], [500, 0, 1, "cmdoption-tblgen-print-enums", "-print-enums"], [500, 0, 1, "cmdoption-tblgen-print-records", "-print-records"], [500, 0, 1, "cmdoption-tblgen-print-sets", "-print-sets"], [500, 0, 1, "cmdoption-tblgen-version", "-version"]]}, "objnames": {"0": ["std", "cmdoption", "option du programme"]}, "objtypes": {"0": "std:cmdoption"}, "terms": {"0": [8, 12, 40, 46, 52, 85, 87, 103, 106, 110, 130, 133, 173, 175, 189, 190, 194, 202, 204, 205, 209, 213, 215, 216, 220, 222, 225, 226, 231, 237, 270, 272, 286, 307, 338, 342, 370, 371, 376, 382, 417, 419, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 448, 449, 451, 452, 455, 457, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 505, 506, 507, 509, 510, 511, 513, 515, 518, 521, 523, 525, 526, 528, 529, 535, 536, 537, 538, 542, 543, 545, 547, 548, 549, 550, 551, 552, 555, 556, 560, 561, 562, 563, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 581, 583, 584, 589, 591, 592, 593, 594, 595, 596, 598, 601, 603, 604, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 656], "00": [479, 485, 506, 537, 549, 555, 571, 579, 638, 639, 640, 642, 649, 650, 651, 653], "000": 593, "0000": 615, "000000": [607, 614, 617, 639, 641, 650, 652], "00000000041516c6": 617, "00000006": 593, "000000e": [638, 639, 640, 642, 649, 650, 651, 653], "000001": 617, "000002": 617, "000003": 617, "000006": 617, "000007": 617, "000008": 617, "000010": 617, "000014": 617, "000016": 617, "000017": 617, "000018": 617, "000019": 617, "000023": 617, "00002fc0": 617, "000032": 617, "000035": 617, "000037": 617, "000041": 617, "000046": 617, "000049": 617, "000050": 617, "000063": 617, "000075": 617, "0001": 615, "000102030405060708090a0b0c0d0e0f": 549, "000106": 617, "000120": 617, "000123": 617, "000138": 617, "000155": 617, "000156": 617, "000214": 617, "000215": 617, "0003": 615, "000302": 617, "000310": 617, "000342": 617, "0004": 615, "000471": 617, "0005": 615, "000562": 617, "0007": 615, "000737": 617, "000774": 617, "000799": 617, "0008": 584, "001": 447, "0011": 447, "001375": 617, "001596": 617, "003400": 607, "004523": 617, "0058": 479, "01": [439, 479, 506, 511, 537, 549, 579, 594, 607, 639, 640, 642, 650, 651, 653], "010": 439, "011": 447, "011200": 607, "012345": 485, "0123456789": 485, "0152": 494, "0170": 507, "01pi0": 438, "02": [479, 506, 594, 641, 652], "03": [503, 641, 652], "03d516c6": 617, "04": [494, 506, 521, 638, 641, 649, 652], "041688": 581, "041721": 581, "041739": 581, "0462": 607, "049886": 581, "04e": 549, "05": [452, 551, 641, 652], "06": [452, 503], "0625": 549, "062624": 617, "067200": 607, "07": [485, 618, 641, 652], "07b": 503, "08": 616, "0a": 549, "0b": [439, 503, 604], "0b000000": 614, "0b00000000": 549, "0b000011": 614, "0b000100": 614, "0b000111": 614, "0b0011": 438, "0b01101101": 549, "0b01111000": 549, "0b10": 603, "0b100": 603, "0b10000000": 549, "0b1001011": 603, "0b101": 603, "0b1010": [438, 439], "0b10110110": 549, "0b111": 603, "0b11100001": 549, "0b1111": 438, "0b11111110": 549, "0b11111111": 549, "0baz": 579, "0c": 506, "0cleanup": 511, "0dev": 607, "0e": 549, "0f": 562, "0f00000000": 562, "0f3f800000": 562, "0f3fb8aa3b": 562, "0f42d20000": 562, "0f7f800000": 562, "0fb5bfbe8": 562, "0fbf317200": 562, "0fc2d20000": 562, "0ffh": 439, "0th": 519, "0u": [525, 593], "0x": [439, 460, 501, 528, 549, 593, 604], "0x0": [440, 447, 457, 566, 579], "0x00": [440, 506, 566, 596], "0x000": 440, "0x0000": 574, "0x00000": 528, "0x000000": 528, "0x00000000": [440, 593], "0x0000000000000000": 440, "0x0000000000000002": 507, "0x0000000000000010": 593, "0x000000000059c583": 507, "0x0000000000d953b3": 507, "0x0000000000dc8872": 507, "0x00000000016677e0": 507, "0x00000000ffefffff": 439, "0x00000001": 593, "0x00000002": 593, "0x00000003": 593, "0x00000004": 593, "0x00000009": 593, "0x00000067": 593, "0x0000006e": 593, "0x000000c9": 460, "0x000000ff": [440, 528], "0x00000100": [440, 593], "0x00000110": 593, "0x00000120": 593, "0x00000130": 593, "0x00000140": 593, "0x00000147": 593, "0x00000150": 593, "0x00000200": 440, "0x00000233": 460, "0x000003bd": 593, "0x000003cd": 593, "0x000003f3": 593, "0x000003ff": 457, "0x00000ff0": 528, "0x00001000": 593, "0x00001023": 593, "0x00001203": 593, "0x00001c00": 457, "0x00002000": 593, "0x00002023": 593, "0x00002200": 593, "0x000034f0": 593, "0x00003500": 593, "0x00003550": 593, "0x00007fff": 457, "0x00007ffff7ed40a9": 507, "0x0001023": 593, "0x0002023": 593, "0x0003": 574, "0x0007": 574, "0x0008": 574, "0x001": 440, "0x0010": 574, "0x0011": 574, "0x0012": 574, "0x0013": 574, "0x0014": 574, "0x002": 440, "0x0020": 574, "0x0021": 574, "0x0022": 574, "0x0023": 574, "0x0024": 574, "0x003": 440, "0x0030": 574, "0x0031": 574, "0x0032": 574, "0x0033": 574, "0x0034": 574, "0x004": 440, "0x0040": 574, "0x0041": 574, "0x0042": 574, "0x0043": 574, "0x0044": 574, "0x0045": 574, "0x0046": 574, "0x005": 440, "0x0050": 574, "0x0051": 574, "0x0052": 574, "0x0053": 574, "0x0054": 574, "0x0055": 574, "0x0056": 574, "0x006": 440, "0x0068": 574, "0x0069": 574, "0x007": 440, "0x0070": 574, "0x0071": 574, "0x0072": 574, "0x0073": 574, "0x0074": 574, "0x0075": 574, "0x0076": 574, "0x0077": 574, "0x0078": 574, "0x0079": 574, "0x007a": 574, "0x007b": 574, "0x008": 440, "0x009": 440, "0x00a": 440, "0x00b": 440, "0x00c": 440, "0x00d": 440, "0x00e": 440, "0x00f": 440, "0x00ff0000": 457, "0x01": [440, 506, 566, 593, 605, 618], "0x010": 440, "0x011": 440, "0x01f": 440, "0x02": [440, 506, 566, 593], "0x020": 440, "0x021": 440, "0x022": 440, "0x023": 440, "0x024": 440, "0x025": 440, "0x026": 440, "0x027": 440, "0x028": 440, "0x029": 440, "0x02a": 440, "0x02b": 440, "0x02c": 440, "0x02d": 440, "0x02e": 440, "0x02f": 440, "0x03": [440, 566, 596], "0x030": 440, "0x031": 440, "0x032": 440, "0x033": 440, "0x034": 440, "0x035": 440, "0x04": [440, 566, 593, 618], "0x04000000": 593, "0x05": [440, 566, 596], "0x06": [440, 566, 596], "0x07": [440, 566, 596], "0x08": [440, 566, 593], "0x09": 566, "0x0a": [566, 596], "0x0abcd": 549, "0x0b": [566, 596], "0x0b17c0de": 447, "0x0c": [506, 566], "0x0d": 596, "0x0e": 596, "0x0f": 596, "0x0f0": 528, "0x0ff": 528, "0x0fffff": 439, "0x0fffffff": 618, "0x1": [438, 440, 457, 579, 593, 596], "0x10": [46, 133, 231, 376, 438, 479, 566, 593, 596], "0x100": [566, 593, 594], "0x1000": [574, 593], "0x100000": 439, "0x100000f24": 498, "0x12": [46, 133, 231, 376], "0x1234": 593, "0x12345678": 593, "0x13": 566, "0x14c": [567, 656], "0x16": 566, "0x1603020": 507, "0x16151f0": 507, "0x16677e0": 507, "0x1881": [40, 130, 225, 370], "0x1afp": 439, "0x1b": 447, "0x1c2": 513, "0x1f84": 498, "0x1ff00": 439, "0x1fffff": 439, "0x2": [438, 457, 579, 596], "0x20": 593, "0x200": [593, 594], "0x2000": 593, "0x2001": 440, "0x2413bc": 615, "0x29273623": 593, "0x2a": [446, 536], "0x3": [438, 457, 579, 596], "0x3000": 489, "0x3039": 579, "0x3500000001652748": 507, "0x3c00": 439, "0x3f": 513, "0x3f800000": 439, "0x3fe": 593, "0x3fe9": 593, "0x3feaed548f090ce": 639, "0x3feb": 593, "0x3fed": 593, "0x4": [438, 457, 494, 596], "0x40": 593, "0x400": [593, 594], "0x4000": [489, 593], "0x40000000": 555, "0x400480": 498, "0x400486": 498, "0x400490": 498, "0x4004a0": 498, "0x4004be": 498, "0x4004d0": 498, "0x4200": 593, "0x432ff973cafa8000": 549, "0x45": 536, "0x494e494d": 572, "0x4d544f4e": 572, "0x5": [457, 566, 596], "0x55585c0867ba": 536, "0x55585c0af787": 536, "0x55585c0af7b3": 536, "0x55585c0af7cf": 536, "0x55585c0afa55": 536, "0x57": 536, "0x5cf8c24cdb18bdac": 506, "0x6": 457, "0x601028": 498, "0x60500020": 656, "0x6a": 494, "0x6fff4c02": 513, "0x7": 457, "0x70b298": 615, "0x744e60": 551, "0x744ea0": 551, "0x7c000000": 593, "0x7f": [549, 603], "0x7fecc966952b": 536, "0x7feccab26000": 536, "0x7fefffff00000000": 439, "0x7fefffffffffffff": 439, "0x7fff": 440, "0x7ffff7ed404c": 507, "0x7fffffff": 549, "0x7fffffffe018": 507, "0x7fffffffe040": 507, "0x8": [438, 457, 566, 579], "0x80": 593, "0x800": 593, "0x80000000": [440, 593], "0x82638293": 593, "0x83": 536, "0x8664": 567, "0x9": [457, 579], "0x90": 598, "0x9f": 536, "0xa": [440, 457, 579], "0xabcdef00": 598, "0xb": 457, "0xc": [447, 457], "0xc3": 603, "0xd": [447, 457, 566], "0xe": 447, "0xe413754a191db537": 506, "0xe8": 603, "0xeb": 536, "0xeffe0000": 567, "0xf": [438, 603], "0xfc": 440, "0xfe": 440, "0xff": [438, 439, 440, 549, 603], "0xff0": 528, "0xff00": 439, "0xffbef174": 615, "0xffefffff": 439, "0xffefffff00000000": 439, "0xfff": 438, "0xffff": [40, 46, 103, 130, 133, 189, 225, 231, 286, 370, 376, 435, 438, 439, 440, 549, 567, 596], "0xffff000000000002": 596, "0xfffff": 439, "0xfffffffc": 439, "0xffffffff": [439, 440, 447, 549], "0xffffffffffefffff": 439, "0xffffffffffff00ff": 439, "0xffffffffffffff00": 439, "0xh": 549, "0xk": 549, "0xl": 549, "0xl00000000000000004000900000000000": 549, "0xm": 549, "0xxxxxxxxx": 593, "1": [8, 9, 11, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 36, 37, 40, 46, 47, 48, 49, 52, 57, 60, 64, 65, 66, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 88, 89, 92, 96, 100, 101, 103, 104, 105, 106, 107, 109, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 133, 134, 135, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 178, 182, 186, 187, 189, 190, 191, 193, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 225, 226, 231, 232, 233, 234, 237, 243, 247, 248, 249, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 275, 279, 283, 284, 286, 289, 290, 291, 294, 295, 296, 301, 302, 303, 305, 306, 307, 310, 314, 316, 317, 322, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 341, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 366, 367, 370, 371, 376, 377, 378, 379, 382, 387, 390, 394, 395, 396, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 420, 421, 424, 428, 432, 433, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 477, 478, 480, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 515, 517, 518, 521, 524, 525, 526, 528, 529, 530, 534, 535, 536, 537, 539, 542, 545, 547, 548, 549, 551, 555, 557, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 574, 575, 576, 577, 579, 582, 583, 584, 585, 587, 588, 589, 591, 593, 594, 596, 598, 601, 603, 604, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 622, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656], "10": [40, 46, 130, 133, 225, 231, 370, 376, 439, 440, 443, 445, 447, 457, 459, 484, 485, 490, 494, 498, 502, 506, 507, 519, 521, 525, 536, 542, 549, 552, 562, 563, 564, 567, 571, 579, 588, 589, 593, 594, 603, 614, 615, 617, 619, 637, 638, 639, 640, 641, 642, 643, 644, 646, 648, 649, 650, 651, 652, 653], "100": [103, 189, 286, 435, 440, 444, 459, 484, 485, 490, 518, 526, 536, 549, 551, 579, 593, 613, 615, 640, 641, 642, 643, 644, 651], "1000": [551, 571, 577, 579, 645, 646], "10000": [479, 561], "10010001": 549, "1011": 447, "102": [439, 485, 617], "1020": [457, 549], "1023": 457, "1024": [457, 501, 549, 571, 591, 613], "1025": 457, "102593": 617, "1026": 457, "102kb": 501, "103": [440, 617], "1030": 549, "104": 439, "1054": 496, "106": [439, 494], "1066": 496, "108055": 617, "1083": 617, "109": 485, "10m": 551, "10x": 502, "11": [40, 103, 130, 225, 286, 370, 435, 438, 440, 444, 447, 455, 457, 459, 485, 498, 502, 507, 536, 549, 562, 564, 567, 571, 579, 589, 591, 593, 594, 603, 613, 614, 616, 617, 619, 624, 625, 641, 642, 643, 644], "110": 617, "1101": 496, "1108": 644, "111": [562, 607], "1112": 496, "112": [440, 549, 592], "1123": 496, "1129": 644, "1130": 496, "114": 494, "1141": 496, "1183": 644, "1184": 644, "12": [189, 438, 439, 440, 447, 455, 457, 459, 460, 485, 489, 494, 498, 506, 507, 521, 536, 549, 551, 555, 562, 564, 567, 569, 571, 574, 579, 587, 593, 598, 603, 607, 608, 614, 619, 641, 642, 643, 644], "120": [440, 507, 549, 639, 650], "1200": 551, "1210": 644, "1218": 644, "122": 549, "1222": 607, "123": [549, 561, 593, 617, 641, 642, 652, 653], "1234": [439, 498], "12345": [542, 579, 581], "1234567": 549, "123908342": 579, "123kkk": 501, "123mb": 501, "124": 617, "125": [549, 581, 617], "125000e": 549, "126": 494, "126744": 617, "127": [440, 549], "127715": 617, "128": [14, 112, 196, 344, 438, 440, 446, 447, 457, 506, 549, 562, 572, 574, 579, 587, 614], "128974848": 501, "128mib": 513, "1298": 579, "129894": 584, "129907": 584, "129920": 584, "129923": 584, "129926": 584, "129934": 584, "129941": 584, "129996": 579, "12x10": 549, "13": [11, 109, 193, 341, 438, 440, 447, 457, 485, 506, 507, 536, 549, 562, 564, 567, 589, 593, 609, 613, 614, 615, 618, 642, 643, 644], "130": 617, "130111": 584, "130179": 584, "130181": 584, "130213": 584, "130214": 584, "130228": 584, "130229": 584, "130249": 584, "130266": 584, "130292": 584, "130304": 584, "130306": 584, "130309": 584, "130310": 584, "130312": 584, "130313": 584, "130318": 584, "130320": 584, "130323": 584, "130328": 584, "130329": 584, "130353": 584, "130355": 584, "130388": 584, "130415": 584, "130425": 584, "130430": 584, "130435": 584, "130465": 584, "130629": 584, "130630": 584, "1329373163": 549, "133700e": [638, 649], "134": 579, "138": [579, 617], "139": 617, "139563": 617, "139605": 617, "139607": 617, "139610": 617, "139612": 617, "139617": 617, "14": [103, 435, 440, 447, 455, 457, 459, 498, 502, 507, 536, 562, 564, 591, 593, 614, 617, 637, 648], "1402264": 584, "14159": 440, "142": 617, "1439": 644, "144": 549, "1444": 579, "1459": 644, "147345": 617, "14740650423002898831": 549, "1491": 617, "15": [40, 46, 103, 130, 133, 189, 225, 226, 231, 286, 370, 371, 376, 435, 438, 440, 447, 448, 459, 498, 506, 507, 521, 549, 555, 561, 562, 564, 571, 579, 589, 593, 594, 596, 603, 618], "15155600": 617, "1523017872": 551, "1530": 617, "1564": 617, "1565878005": 549, "15915494": 439, "15915494309189532": 439, "1592": 439, "159279": 617, "15mb": 581, "15th": 438, "16": [11, 16, 24, 35, 37, 41, 42, 46, 67, 76, 109, 113, 131, 133, 147, 161, 193, 197, 202, 203, 204, 205, 209, 213, 214, 215, 216, 220, 222, 227, 231, 250, 260, 287, 292, 297, 311, 315, 318, 341, 346, 354, 365, 367, 372, 376, 397, 407, 437, 438, 439, 440, 444, 446, 447, 457, 460, 484, 485, 494, 502, 505, 507, 513, 521, 525, 536, 537, 549, 551, 555, 559, 562, 564, 566, 567, 574, 579, 589, 591, 593, 596, 598, 607, 611, 614, 618, 619, 643], "160": [440, 549], "1600": 549, "16000": 571, "161": 507, "162": 494, "164": 617, "16628590": 617, "16777216": 549, "16777217": 549, "1681": 617, "16b": 446, "16bit": 643, "16gb": 537, "16mib": 513, "17": [440, 447, 455, 485, 501, 506, 507, 519, 521, 536, 549, 564, 593, 603, 644], "1723": 617, "18": [440, 447, 485, 498, 506, 507, 562, 564, 593, 614], "182": 494, "187": 617, "188": 617, "18th": 519, "19": [440, 447, 507, 518, 521, 537, 549, 564, 587, 593, 608, 614], "191": 440, "1967": 617, "1980": 585, "1981": 508, "1984": 617, "1987": 508, "1989": 518, "199": 494, "1991": 585, "1994": 518, "19941610": 572, "19950410": 574, "19950623": 572, "19950814": 572, "19951122": 574, "19960307": [567, 572], "19961031": 574, "19970604": 572, "19970605": 567, "19970606": 567, "19990604": 572, "19990903": [567, 574], "1a": 571, "1afp10": 439, "1b": 551, "1cleanup": 511, "1cy": 485, "1d": 438, "1d_array": 438, "1g": [501, 538], "1gb": 581, "1s100000s11010s10100s1111s1010s110s11s1": 579, "1svn": 542, "1u": 593, "2": [8, 10, 11, 13, 15, 20, 21, 22, 27, 30, 34, 40, 41, 46, 52, 56, 61, 68, 69, 75, 76, 83, 84, 88, 93, 97, 102, 103, 104, 105, 106, 108, 109, 111, 117, 118, 119, 122, 126, 130, 131, 133, 135, 148, 149, 158, 159, 160, 161, 169, 170, 171, 172, 176, 179, 183, 188, 189, 190, 192, 193, 195, 201, 202, 204, 205, 206, 207, 211, 213, 215, 216, 219, 225, 226, 227, 231, 237, 244, 251, 252, 258, 259, 260, 266, 267, 268, 269, 273, 276, 280, 285, 286, 307, 326, 332, 334, 338, 340, 341, 343, 345, 350, 351, 352, 357, 360, 364, 370, 371, 372, 376, 382, 386, 391, 398, 399, 405, 406, 407, 413, 414, 415, 416, 420, 422, 425, 429, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 449, 453, 455, 456, 457, 459, 460, 464, 473, 475, 476, 483, 485, 486, 489, 490, 494, 498, 502, 503, 505, 506, 507, 508, 509, 510, 511, 513, 515, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 535, 536, 537, 539, 542, 549, 551, 555, 558, 560, 561, 562, 563, 564, 566, 567, 569, 571, 572, 574, 575, 576, 577, 579, 582, 584, 585, 588, 589, 591, 593, 594, 598, 601, 603, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 621, 623, 624, 625, 636, 638, 639, 640, 641, 642, 643, 644, 646, 647, 649, 650, 651, 652, 653, 656], "20": [48, 49, 378, 379, 439, 440, 447, 455, 457, 464, 484, 485, 506, 507, 518, 521, 539, 549, 551, 558, 562, 564, 579, 593, 607, 618, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "200": [440, 536, 616], "2000": [438, 440, 579, 615], "20000": [598, 625], "200000e": [640, 651], "20000404": 572, "2002": 457, "20030901": 572, "2004": 457, "20040203": 574, "2008": [440, 525, 549, 585], "20091201": [567, 572], "2010": 455, "2011": [581, 585], "2012": [513, 579, 619], "2013": [554, 567, 579], "20140508": 572, "20140516": 567, "2015": [533, 551, 585], "2016": [502, 533, 581, 585, 616], "2017": [455, 513, 517, 521, 523, 531, 533, 551, 585, 618], "2018": [525, 549, 559, 594, 616], "2019": [452, 533, 559, 581, 584], "203": 494, "2047": 438, "2048": [438, 457, 551, 571, 591], "209": 494, "2097496": 494, "21": [49, 379, 439, 440, 447, 457, 507, 535, 549, 562, 564, 581, 593, 614, 617], "2100": 440, "2101248": 494, "2105344": 494, "2105360": 494, "212": 451, "213": 451, "213336": 617, "214": 451, "2147483648": [549, 562], "215": 451, "216": 451, "217": 451, "2192": 607, "22": [440, 447, 507, 549, 562, 564, 593, 601, 614, 617], "2200": 440, "2200g": 440, "224": 440, "225": 549, "225708": 617, "22c": 496, "23": [438, 440, 447, 457, 549, 593, 614, 636, 647], "231150": 593, "231154": 593, "23333": 516, "234": [439, 638, 649], "234000e": [638, 649], "23406408": 507, "23421e": 549, "234e2": 439, "235": 549, "236": 496, "24": [438, 440, 447, 457, 485, 494, 505, 549, 562, 579, 581, 590, 593, 614, 619, 639, 650], "240": [637, 648], "2400g": 440, "241": 496, "242": [513, 617], "2468601609": 549, "247": 549, "248": 579, "24a": 496, "24e8": 579, "24mb": 551, "25": [440, 447, 549, 577, 579, 607, 614, 616], "250": 581, "2500": 440, "250000e": 555, "253": 496, "254": 549, "255": [438, 439, 457, 507, 549, 593, 636, 637, 638, 639, 640, 641, 642, 643, 644, 652], "256": [438, 439, 440, 457, 513, 549, 564, 587, 591, 593], "257": [457, 549], "258": [457, 496], "2590": 449, "25mb": 551, "26": [440, 447, 494, 549, 562, 593], "260": 440, "2601000000": 617, "26096": 617, "260x": 440, "261": 496, "264": 494, "2692": 617, "27": [440, 447, 562, 579], "271": 617, "272": [440, 485], "28": [440, 447, 506, 549, 556, 562, 618], "281474976710654": 596, "2817": 579, "2882400000": 598, "29": [440, 447, 457, 549, 594, 614, 617], "290": 440, "2900": 549, "290x": 440, "2919": 579, "294": 494, "2963": 617, "297": 485, "2ap3": 513, "2b": 551, "2d": [438, 446], "2d_array": 438, "2d_msa": 438, "2d_msaa_array": 438, "2gb": 594, "2n": 549, "2nd": [549, 551, 579, 603], "2u": 593, "2x": [534, 536, 551, 594], "2x3x4": 549, "3": [11, 31, 46, 52, 94, 98, 103, 109, 123, 133, 173, 180, 184, 189, 193, 205, 212, 216, 226, 231, 237, 270, 277, 281, 286, 341, 361, 371, 376, 382, 417, 426, 430, 435, 437, 438, 439, 440, 446, 447, 449, 455, 456, 457, 459, 460, 464, 484, 485, 489, 498, 501, 502, 503, 505, 506, 507, 509, 511, 514, 518, 519, 521, 523, 524, 525, 528, 529, 536, 538, 539, 540, 542, 546, 549, 551, 555, 558, 560, 561, 562, 563, 564, 567, 569, 571, 574, 575, 577, 579, 583, 585, 587, 588, 589, 593, 594, 596, 603, 605, 607, 608, 610, 611, 613, 614, 615, 617, 618, 619, 621, 622, 624, 625, 636, 637, 639, 640, 641, 642, 643, 644, 646, 647, 650, 651, 652, 653, 656], "30": [41, 131, 227, 372, 438, 440, 447, 457, 484, 485, 494, 549, 551, 562, 589, 593, 594, 607, 614, 618, 641, 642, 643, 644, 649, 652, 653], "300": [464, 485, 549, 648], "3000": [440, 579], "302": 608, "305064": 510, "306": 485, "3069": 617, "30pm": 619, "31": [40, 85, 130, 173, 189, 225, 270, 370, 417, 438, 440, 447, 457, 536, 549, 594, 614], "31027": 536, "31337": [638, 649], "314": 485, "3148790418": 549, "31511": 551, "315994": 617, "32": [12, 17, 21, 22, 24, 33, 35, 37, 40, 41, 57, 88, 89, 90, 104, 105, 110, 114, 118, 119, 125, 130, 131, 135, 194, 198, 206, 207, 209, 218, 220, 222, 225, 227, 308, 312, 317, 332, 342, 347, 351, 352, 354, 363, 365, 367, 370, 372, 387, 420, 421, 437, 438, 439, 440, 444, 446, 447, 449, 455, 457, 460, 470, 485, 494, 502, 503, 505, 511, 512, 513, 521, 523, 525, 537, 547, 549, 551, 555, 562, 566, 567, 569, 572, 574, 587, 588, 591, 593, 594, 596, 601, 603, 605, 611, 614, 617, 618, 641, 643, 645, 652, 654], "32088": 617, "3213": 579, "3221225472": 501, "324": 507, "32768": [16, 41, 70, 113, 131, 150, 197, 227, 253, 346, 372, 400, 571], "32bit": 643, "33": [447, 562, 589, 608, 614], "3340b": 440, "335": 567, "3363": 617, "339450": 607, "34": [447, 506, 614], "345": 579, "35": [440, 447, 485, 549, 579], "350": 583, "351": [440, 583], "352": [440, 583], "357": 583, "358": 583, "359": 583, "36": [440, 447, 562, 594], "360": [583, 617], "362": 583, "363": 583, "36652": 617, "367": 583, "37": [447, 457, 549, 617], "370": 583, "371": 583, "3714": 617, "372": 583, "376": 583, "38": [447, 451, 549, 617], "380": 440, "3800": 440, "381": 617, "3811": 551, "3827": 551, "383": 440, "384": 440, "385": 440, "387": 549, "39": [440, 447, 549, 562], "392": 579, "39331465": 617, "39337525": 617, "3963": 551, "397": 507, "399": [485, 617], "3cy": 485, "3d": [438, 440], "3dnow": 643, "3g": 501, "3gb": 523, "3rd": [549, 551, 621], "3u": 593, "3x4": 549, "4": [11, 14, 18, 21, 23, 24, 25, 28, 35, 36, 37, 40, 41, 46, 54, 55, 58, 59, 62, 76, 85, 91, 95, 99, 103, 109, 112, 115, 118, 120, 121, 127, 128, 130, 131, 133, 139, 140, 141, 142, 161, 177, 181, 185, 189, 193, 196, 199, 202, 206, 208, 209, 210, 213, 220, 221, 222, 225, 227, 231, 239, 240, 241, 242, 245, 260, 274, 278, 282, 286, 309, 313, 325, 341, 344, 348, 351, 353, 354, 355, 358, 365, 366, 367, 370, 372, 376, 384, 388, 389, 392, 407, 423, 427, 431, 435, 437, 438, 439, 440, 444, 446, 447, 455, 456, 457, 459, 460, 464, 465, 470, 473, 485, 494, 496, 498, 501, 502, 503, 505, 506, 507, 509, 510, 511, 513, 517, 518, 519, 521, 524, 525, 528, 529, 536, 537, 538, 540, 541, 545, 549, 551, 555, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 571, 574, 575, 576, 577, 579, 584, 585, 589, 593, 594, 596, 598, 603, 605, 607, 608, 610, 611, 613, 614, 617, 618, 619, 621, 622, 625, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653], "40": [440, 447, 457, 484, 506, 513, 519, 549, 579, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "400": [490, 637], "4000": [438, 440], "40000": 490, "40219": 537, "403": 607, "40535375": 617, "4095": [438, 549, 551, 571], "4096": [438, 549, 571, 574], "4097": 571, "4098": 571, "4099": 571, "40kib": 536, "40th": [636, 647], "41": [447, 536, 549], "410": 549, "412": 494, "415": 440, "416": 440, "4167": 551, "41m": 501, "42": [446, 447, 457, 459, 460, 479, 485, 498, 505, 506, 513, 549, 552, 555, 562, 579, 636, 640, 641, 645, 647, 651, 652, 654], "421": 549, "423325": 607, "43": [440, 447, 457, 641, 652], "434": 579, "4377547752858689819": 549, "44": [440, 447, 485, 549, 571, 615], "446": 617, "447": 440, "448": 440, "449": 440, "45": [447, 562, 636, 638, 647], "450": 440, "451": 440, "452": 440, "453": 440, "454": 440, "455": 440, "456": [607, 641, 652], "457": 440, "458": 440, "4584": 617, "459": 440, "46": [447, 617, 641, 652], "460": 440, "463": 440, "463331": 617, "463340": 617, "464": [440, 607], "47": [440, 447, 485, 549, 594, 603, 608], "470": 440, "470948": 617, "472618": 617, "474": 607, "48": [440, 447, 457, 485, 494, 574, 611], "480": 440, "49": [447, 579], "4b": 551, "4gib": 513, "4k": 457, "4kib": 571, "4th": [457, 549], "4u": 593, "5": [40, 130, 225, 370, 438, 439, 440, 447, 449, 455, 456, 457, 460, 465, 485, 494, 501, 502, 505, 506, 507, 510, 518, 521, 525, 528, 529, 536, 537, 542, 549, 551, 555, 560, 561, 562, 564, 567, 571, 574, 577, 579, 585, 589, 593, 598, 603, 604, 607, 608, 611, 613, 614, 615, 617, 618, 619, 621, 622, 624, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 650, 652], "50": [447, 484, 485, 521, 594, 607], "500": [485, 579], "5000": [440, 536], "503": 583, "5046": 579, "506": [607, 617], "507": 583, "508": [549, 607], "51": [40, 130, 225, 370, 440, 447, 485, 535, 608], "5100": 440, "511": 440, "512": [440, 549, 571, 587, 591], "51440360": 617, "52": [440, 447, 549, 608], "5200": 440, "521": 583, "527": 583, "53": [447, 549, 571], "5312": 551, "532": 579, "5321": 581, "54": [447, 485, 607, 617], "5434426023268520": 617, "5434426023523052": 617, "5434426029925386": 617, "5434426030031128": 617, "5434426046951388": 617, "5434426047282020": 617, "5434426047857332": 617, "5434426047984152": 617, "5434426048036584": 617, "5434426048042292": 617, "5434426048055056": 617, "5434426048067316": 617, "547": 536, "548": 583, "549": 583, "55": [447, 549, 589, 615], "554": 583, "556": 496, "56": [440, 447, 494], "563098": 607, "566": 496, "57": 447, "577": 496, "58": 447, "58421550": 617, "586": 496, "59": [457, 485], "590": 449, "595": 496, "59620e187c6ac38b36382685ccd2b63b": 607, "5b": 494, "5e": 549, "5l": 503, "5rqxku": 617, "5th": 549, "5u": 593, "5x": [534, 594], "6": [40, 46, 103, 130, 133, 189, 225, 231, 286, 370, 376, 435, 438, 440, 456, 457, 460, 484, 485, 494, 498, 502, 505, 506, 507, 518, 521, 525, 536, 540, 541, 542, 549, 551, 560, 561, 562, 564, 567, 571, 574, 576, 579, 585, 589, 593, 603, 605, 608, 611, 614, 615, 617, 618, 636, 637, 638, 640, 642, 643, 644, 646, 647, 648, 653], "60": [484, 571], "600": [490, 496], "6000": 440, "60000": 490, "603": 583, "609": 496, "61": 447, "610": 485, "62": [447, 594], "621": 583, "626": 581, "62635": 617, "626455": 617, "627": 583, "628": 583, "6295592": 498, "63": [40, 103, 130, 225, 370, 435, 440, 447, 594, 598, 603], "638838075": 549, "64": [10, 13, 21, 22, 34, 56, 88, 90, 106, 108, 111, 118, 119, 126, 192, 195, 206, 207, 219, 326, 332, 340, 343, 351, 352, 364, 386, 420, 437, 438, 439, 440, 444, 446, 447, 449, 455, 457, 460, 470, 479, 485, 487, 502, 503, 511, 512, 513, 519, 521, 523, 549, 551, 555, 561, 562, 566, 567, 569, 574, 579, 587, 591, 592, 593, 594, 596, 598, 601, 603, 611, 614, 617, 636, 644, 645, 647, 654], "648": 583, "649": 583, "64bit": [549, 555, 588], "64k": 567, "64x4": 440, "65": [440, 447, 457, 485], "654": 583, "65500": 439, "65535": [16, 41, 70, 87, 113, 131, 150, 175, 197, 227, 253, 272, 346, 372, 400, 419, 438, 549], "65600": 439, "66": [440, 447, 589], "66ghz": 537, "67": [447, 636, 647], "672368": 617, "68": 447, "680": 562, "69819": 617, "6b": 551, "6th": 549, "7": [46, 52, 85, 103, 133, 173, 189, 231, 237, 270, 286, 376, 382, 417, 435, 438, 439, 440, 447, 448, 456, 460, 485, 489, 502, 503, 506, 507, 518, 521, 523, 525, 536, 537, 540, 541, 542, 549, 551, 555, 561, 562, 563, 564, 567, 571, 574, 576, 577, 579, 581, 585, 587, 589, 593, 598, 603, 607, 609, 613, 615, 617, 618, 619, 621, 638, 640, 641, 643, 644, 646, 647, 651], "70": [457, 484, 607, 615, 619], "700": [647, 654], "7000": 440, "7004155349499253778": 549, "703": 518, "705": 518, "7050b": 440, "71": 549, "7100": 440, "7150b": 440, "72": [485, 494], "7200p": 440, "725": 579, "7300": 440, "7350b": 440, "74": [485, 549, 594, 608], "7400p": 440, "743265": 594, "744287": 594, "75": [549, 579, 607, 615, 617], "7500": [440, 551], "754": [440, 525, 549], "756": 583, "7600p": 440, "7625886": 594, "7646": 579, "7651369219802541373": 549, "77": [485, 551, 596], "7790": 440, "77x": 594, "78": [596, 617, 641, 652], "789": [641, 652], "79": 521, "7942": 551, "7976922776554302e308": 439, "7976931348623157e308": 439, "7c": 485, "7e15": 501, "7foo_bar": 475, "7th": 549, "7ykb2k5f": 481, "8": [11, 46, 55, 63, 103, 109, 133, 135, 140, 143, 189, 193, 231, 240, 246, 286, 341, 376, 385, 393, 435, 437, 438, 439, 440, 444, 446, 447, 448, 456, 457, 460, 485, 486, 494, 498, 502, 505, 506, 507, 510, 511, 513, 519, 521, 523, 525, 536, 537, 538, 540, 542, 549, 555, 558, 561, 562, 563, 564, 566, 567, 569, 571, 574, 579, 581, 585, 589, 591, 592, 593, 594, 596, 598, 601, 605, 607, 613, 614, 617, 618, 619, 640, 641, 642, 644, 646, 647, 652], "80": [447, 459, 484, 485, 490, 549, 574, 587], "8000": 571, "8011": [520, 537], "8014": 537, "80386": [444, 643], "80f351b51825": 510, "80x86": 537, "80x87": 457, "81": 484, "8191": 571, "82": 494, "83": [484, 617], "83348": 607, "841471": [639, 650], "85": 617, "8500b": 440, "8500p": 440, "86": [579, 607], "8600b": 440, "8600p": 440, "87": [457, 579], "8700b": 440, "8700p": 440, "8770": 440, "8780p": 440, "88": [440, 617], "8800b": 440, "8800p": 440, "89": 607, "896800": 607, "8gib": 513, "8x": 594, "9": [46, 133, 231, 376, 439, 440, 443, 447, 456, 457, 460, 485, 498, 502, 506, 507, 509, 510, 521, 536, 540, 543, 549, 551, 555, 556, 562, 563, 564, 567, 571, 576, 579, 581, 585, 588, 589, 593, 594, 604, 607, 608, 609, 614, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 649, 650, 651, 652, 653], "90": [459, 484, 494, 587, 607, 617], "900": 485, "9000": 571, "9010": 440, "9015": 551, "90p": 617, "91": [494, 518], "92": [459, 494], "9210": 440, "928": 607, "93": 549, "930803": 567, "9410": 440, "9600p": 440, "9630p": 440, "9633790": 617, "97": 549, "9700p": 440, "9730p": 440, "9800p": 440, "9830p": 440, "989": 555, "99": [543, 556, 566, 589, 593, 595], "9990": 537, "9994": 537, "999999999": 589, "99p": 617, "9_": [439, 460], "9a": [439, 460], "9b": 551, "AI": [459, 579], "AU": [443, 528, 615], "As": [439, 440, 442, 443, 444, 447, 448, 452, 453, 456, 457, 459, 460, 464, 485, 489, 501, 502, 505, 508, 509, 511, 512, 516, 518, 519, 520, 521, 524, 526, 527, 529, 536, 539, 540, 543, 548, 549, 550, 551, 552, 553, 555, 556, 560, 561, 562, 563, 565, 569, 570, 571, 579, 581, 582, 584, 587, 592, 593, 594, 596, 598, 599, 603, 605, 609, 610, 614, 615, 616, 619, 621, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "C": [440, 442, 443, 444, 447, 448, 451, 453, 456, 457, 460, 462, 463, 464, 467, 471, 472, 473, 475, 485, 486, 488, 492, 493, 498, 501, 502, 503, 506, 507, 510, 511, 513, 516, 517, 518, 519, 520, 523, 525, 527, 536, 537, 539, 540, 543, 544, 547, 551, 552, 556, 558, 560, 562, 563, 565, 566, 571, 577, 580, 581, 584, 591, 594, 596, 598, 601, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 617, 619, 621, 622, 623, 624, 625, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655], "CS": 440, "Ce": [3, 5, 6, 7], "Cet": 130, "D": [455, 459, 460, 464, 468, 485, 486, 487, 488, 497, 501, 502, 508, 513, 521, 549, 578, 581, 593, 603, 604, 607, 637, 638, 641, 643, 644, 648, 649, 652, 656], "DS": 615, "Ds": 502, "Due": [439, 453, 510, 549, 550, 581, 603, 639], "Il": [53, 138, 238, 324, 383], "J": [459, 508, 509, 549, 563, 587, 593, 621], "L": [457, 468, 487, 497, 501, 502, 521, 540, 541, 549, 551, 561, 563, 564, 579, 581, 584, 638, 639, 640, 641, 642, 643, 644], "LE": 518, "LEA": [479, 605], "La": [0, 1, 2, 3, 4, 5, 6, 7], "Lea": 457, "Les": 130, "M": [443, 457, 459, 464, 468, 486, 488, 501, 503, 508, 521, 549, 561, 563, 564, 569, 585, 587, 598, 614, 615, 621, 622, 623, 624, 625], "MESA": 440, "MS": [513, 551], "Me": 550, "Mesa": 440, "Ms": 623, "N": [103, 189, 286, 435, 438, 439, 440, 444, 445, 447, 457, 459, 464, 468, 473, 478, 485, 486, 487, 490, 497, 498, 500, 511, 518, 524, 525, 542, 549, 551, 559, 560, 562, 569, 571, 577, 579, 587, 598, 603, 614, 617, 638, 649], "ON": [445, 455, 510, 517, 540, 551, 607, 615], "On": [438, 440, 442, 444, 445, 446, 453, 455, 457, 459, 464, 485, 487, 497, 502, 504, 511, 515, 516, 517, 518, 521, 532, 540, 547, 549, 552, 561, 563, 566, 578, 579, 588, 594, 596, 599, 601, 609, 612, 618, 619, 621, 623, 638, 639, 641, 649, 650, 652], "PAR": 583, "Pour": [5, 6, 620], "S": [439, 440, 444, 464, 468, 480, 482, 485, 486, 487, 488, 492, 493, 497, 499, 502, 511, 513, 521, 530, 543, 549, 563, 579, 591, 593, 598, 609, 649, 650, 651, 652, 653], "SA": 440, "SE": 549, "SESE": 585, "Sea": 440, "See": [56, 326, 386, 438, 440, 444, 445, 447, 448, 450, 453, 455, 457, 460, 461, 464, 465, 466, 468, 475, 479, 481, 485, 487, 499, 501, 502, 509, 512, 514, 517, 519, 521, 523, 524, 525, 526, 528, 537, 540, 541, 543, 548, 549, 550, 559, 560, 561, 562, 563, 567, 571, 579, 580, 581, 583, 584, 585, 593, 594, 598, 601, 605, 607, 609, 613, 614, 615, 616, 617, 621, 622, 623, 624, 625, 637, 641, 648, 652], "T": [440, 459, 464, 465, 466, 468, 485, 486, 488, 489, 513, 514, 521, 543, 549, 566, 574, 579, 584, 593, 601, 605, 609, 619], "TA": 438, "Te": 549, "Un": [0, 1, 2, 3, 4, 5, 6, 7, 549, 620], "Y": [440, 446, 457, 502, 509, 542, 549, 572, 577, 579, 593, 603, 605, 613, 615, 642, 653], "_": [447, 474, 487, 525, 526, 529, 549, 555, 563, 579, 584, 595, 604, 648, 649, 650, 651, 652, 653], "_0": [549, 555], "__": 579, "__1": 475, "__________": 579, "______________________": 579, "______________________________________": 579, "__________________________________________________________": 579, "__aeabi_": 503, "__annot": 549, "__anon_expr": [637, 638, 639, 640, 641, 642, 643, 644], "__apple_nam": 593, "__apple_namespac": 593, "__apple_objc": 593, "__apple_typ": 593, "__asm": 485, "__atomic_compare_exchang": 444, "__atomic_compare_exchange_n": 444, "__atomic_exchang": 444, "__atomic_exchange_n": 444, "__atomic_fetch_add_n": 444, "__atomic_fetch_and_n": 444, "__atomic_fetch_nand_n": 444, "__atomic_fetch_or_n": 444, "__atomic_fetch_sub_n": 444, "__atomic_fetch_xor_n": 444, "__atomic_load": 444, "__atomic_load_n": 444, "__atomic_stor": 444, "__atomic_store_n": 444, "__attribute__": [502, 587, 593, 611, 616], "__bitcod": 447, "__bss": 486, "__builtin_eh_return": 511, "__builtin_expect": 449, "__builtin_longjmp": 511, "__builtin_setjmp": 511, "__builtin_trap": 551, "__c_specific_handl": 511, "__chkstk": 513, "__clang__": 502, "__clear_cach": 549, "__cuda__": 502, "__cuda_arch__": 502, "__cuda_ftz": 562, "__cudacc__": 502, "__cxa_allocate_except": 511, "__cxa_begin_catch": 511, "__cxa_call_unexpected": 511, "__cxa_demangl": 517, "__cxa_end_catch": 511, "__cxa_rethrow": 511, "__cxa_throw": 511, "__cxx11": 475, "__cxx_": 617, "__cxx_global_var_in": 617, "__cxxframehandler3": 511, "__cxxthrowexcept": 511, "__dat": [486, 494, 549], "__declspec": [639, 640, 641, 642, 643, 644], "__dwarf": 593, "__eh_fram": 457, "__except": 511, "__fastcall": 549, "__gcmap_": 518, "__global__": 502, "__gwp_asan_default_opt": 536, "__gxx_personality_v0": 511, "__has_attribut": 601, "__i386__": [645, 654], "__image_info": 549, "__imp_": 549, "__internal_accurate_powf": 562, "__jit_debug_register_cod": 507, "__kmpc_fork_call": 549, "__libc_start_main": 536, "__libunwind_config": 511, "__llvm": [447, 589], "__llvm_coverage_mapping": 506, "__llvm_covmap": 506, "__llvm_deoptimiz": 549, "__llvm_faultmap": 515, "__llvm_memcpy_element_unordered_atomic_": 549, "__llvm_memmove_element_unordered_atomic_": 549, "__llvm_memset_element_unordered_atomic_": 549, "__llvm_stackmap": 596, "__main": 615, "__morestack": 592, "__next__": 505, "__nv_isinff": 562, "__nv_isnanf": 562, "__nv_powf": 562, "__nv_truncf": 562, "__nvcc__": 502, "__objc": [494, 549], "__objc_imageinfo": 549, "__profn_foo": 506, "__remark": [465, 589], "__scudo_default_opt": 591, "__stack_chk_fail": [549, 555], "__stack_chk_guard": 549, "__stdcall": 549, "__sync_fetch_and_add_n": 444, "__sync_fetch_and_and_n": 444, "__sync_fetch_and_max_n": 444, "__sync_fetch_and_min_n": 444, "__sync_fetch_and_nand_n": 444, "__sync_fetch_and_or_n": 444, "__sync_fetch_and_sub_n": 444, "__sync_fetch_and_umax_n": 444, "__sync_fetch_and_umin_n": 444, "__sync_fetch_and_xor_n": 444, "__sync_lock_test_and_set_n": 444, "__sync_synchroniz": 444, "__sync_val_compare_and_swap_n": 444, "__syncthread": 562, "__text": [457, 486, 494, 607], "__text_exec": 486, "__try": 511, "__unwind_info": 457, "__vectorcall": 549, "__xray_log_finaliz": 616, "__xray_log_flushlog": 616, "__xray_log_init_mod": 616, "__xray_log_process_buffer": 616, "__xray_log_register_mod": 616, "__xray_log_select_mod": 616, "__xray_log_set_buffer_iterator": 616, "__xray_patch": 616, "_address_": 594, "_align": 593, "_args_": 456, "_attack": 594, "_b128": 437, "_b16": 437, "_b256": 437, "_b32": 437, "_b512": 437, "_b64": 437, "_b8": 437, "_binary_": 487, "_bool": [642, 653], "_bootstrap_default_passthrough": 442, "_buff": 440, "_crit_edg": 549, "_cuda_ftz": 562, "_cxxthrowexcept": 511, "_dcleanup": 511, "_division_by_zero": 440, "_dpp": [437, 440], "_e32": [437, 440], "_e64": [437, 440], "_end": 487, "_except_handler3": 511, "_except_handler4": 511, "_f16": 437, "_f32": 437, "_f64": 437, "_flag": 456, "_flags_": 456, "_flags_relwithdebinfo": 453, "_function_nam": 513, "_i": 490, "_i16": 437, "_i32": 437, "_i64": 437, "_i8": 437, "_i_bitcast": 529, "_in": 440, "_inexact": 440, "_info": 440, "_inv": 440, "_invalid_oper": 440, "_invl": 440, "_is_": 549, "_link_into_tool": 615, "_m4enum": 549, "_main": [498, 563, 656], "_mcount": 587, "_name_": 456, "_overflow": 440, "_p1": 593, "_p3": 593, "_padding_record": 566, "_r0h": 511, "_regoffset": 605, "_ri": 603, "_rr": 603, "_runtim": 596, "_sdwa": [437, 440], "_segment_buff": 440, "_segment_ptr": 440, "_segment_wavefront_offset": 440, "_siz": [440, 487], "_sourc": 440, "_source_d": 455, "_start": [487, 536], "_tag": [648, 649, 650, 651, 652, 653], "_trunc": 525, "_ty": 512, "_u16": 437, "_u32": 437, "_u64": 437, "_u8": 437, "_underflow": 440, "_unwind_resum": 511, "_valid_": 594, "_var": 456, "_void": 525, "_vol": 440, "_w_side_effect": 525, "_wavefront_offset": 440, "_win32": [599, 639, 640, 641, 642, 643, 644], "_workgroup_count_x": 440, "_workgroup_count_y": 440, "_workgroup_count_z": 440, "_x": 440, "_y": 440, "_z": 440, "_z3bar": 474, "_z3bazv": 498, "_z3foo3barv": 475, "_z3foov": [474, 549], "_z4leak": 594, "_z5hellov": 496, "_zero": 440, "_zfoov": 549, "_zn1a1nei": 549, "_zst1a": 611, "_zstlsicst11char_traitsiceerst13basic_ostreamit_t0_es6_st17basic_string_viewis3_s4_": 536, "_ztid": 549, "_ztii": 549, "_zts1a": [549, 611], "_zts1b": 611, "_zts1c": 611, "_zts1d": 611, "_ztv1a": 611, "_ztv1b": 611, "_ztv1c": 611, "_ztv1d": 611, "_ztv3bar": 460, "_ztv3foo": 460, "a": [4, 7, 10, 11, 13, 14, 16, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 46, 49, 52, 88, 103, 106, 108, 109, 111, 112, 113, 121, 122, 123, 124, 125, 126, 129, 130, 131, 133, 135, 189, 192, 193, 195, 196, 197, 202, 203, 204, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 231, 237, 286, 308, 309, 310, 311, 312, 313, 314, 315, 317, 332, 333, 334, 340, 341, 343, 344, 346, 358, 359, 360, 361, 362, 363, 364, 368, 369, 370, 371, 372, 376, 379, 382, 420, 435, 436, 437, 438, 440, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 503, 505, 506, 507, 508, 511, 513, 515, 516, 517, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 544, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 569, 570, 571, 574, 575, 576, 580, 584, 585, 586, 587, 591, 592, 593, 594, 595, 596, 597, 598, 599, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 616, 617, 618, 619, 620, 636, 638, 640, 641, 645, 646, 647, 649, 651, 652, 654, 656], "a1": [457, 465, 466, 488, 509, 563, 603, 611, 613], "a10": 440, "a12": 440, "a15": 538, "a16": [3, 11, 341], "a2": [457, 465, 466, 488, 509, 549, 563, 603, 611, 613], "a252": 439, "a253": 439, "a254": 439, "a255": 439, "a3": [457, 465, 466, 488, 509, 549], "a32": 446, "a4": [440, 457], "a57": 503, "a6": 440, "a64": 446, "a65": 587, "a65a": 587, "a8": [440, 545], "a9": [440, 541], "a_ctor_bas": 460, "aa": [444, 615], "aad": 457, "aad8i8": 457, "aapc": 549, "aarch32": 503, "aarch64": [446, 454, 487, 517, 521, 524, 532, 534, 538, 549, 555, 559, 584, 591, 596, 601, 614, 616], "aarch64registerinfo": 555, "ab": [43, 45, 132, 228, 230, 288, 293, 298, 300, 319, 321, 373, 375, 562], "abandon": [578, 638], "abandoned": [534, 579], "abbrev": [447, 478], "abbrevi": [459, 550, 584], "abbreviat": [470, 478], "abbreviated": 440, "abbrevid": [447, 589], "abbrevop0": 447, "abbrevop1": 447, "abbrevwidth": 447, "abc": 549, "abcd": 447, "abcdillnoopsstuuvv": 468, "abi": [446, 454, 455, 468, 475, 505, 509, 513, 514, 521, 524, 526, 531, 540, 541, 542, 547, 549, 562, 576, 577, 587, 593, 594, 596, 609, 611, 614, 639, 643, 644, 645, 650, 654], "abid": 7, "abilit": 501, "ability": [457, 458, 499, 501, 507, 512, 516, 518, 530, 549, 557, 579, 580, 581, 582, 593, 594, 619, 636, 640, 641, 642, 647, 651, 652, 653], "abis": [440, 505, 514, 582, 594], "able": [440, 443, 445, 451, 452, 457, 459, 460, 485, 487, 497, 501, 502, 505, 506, 509, 514, 516, 518, 519, 521, 522, 525, 526, 529, 530, 541, 544, 547, 548, 549, 550, 552, 556, 563, 575, 579, 581, 582, 585, 589, 590, 593, 594, 595, 596, 598, 603, 610, 613, 614, 615, 616, 619, 622, 639, 640, 641, 644, 645, 650, 651, 652, 654], "abnormal": [505, 599], "abnormally": [505, 516], "abort": [451, 457, 459, 549, 579, 603], "abort_on_error": 591, "aborting": 511, "about": [437, 439, 440, 443, 444, 447, 448, 452, 453, 455, 456, 457, 459, 460, 464, 465, 470, 482, 483, 485, 486, 489, 490, 492, 493, 494, 501, 502, 505, 507, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 528, 530, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 567, 569, 570, 571, 574, 575, 576, 577, 578, 579, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 622, 623, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "abov": [40, 46, 103, 130, 133, 189, 225, 226, 231, 286, 370, 371, 376, 435, 437, 438, 439, 440, 443, 444, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 460, 461, 465, 485, 501, 502, 505, 509, 512, 514, 515, 516, 517, 518, 519, 521, 525, 529, 535, 539, 540, 541, 542, 543, 544, 546, 549, 552, 553, 554, 555, 556, 557, 560, 561, 563, 564, 567, 577, 579, 580, 581, 582, 585, 588, 590, 592, 593, 594, 595, 596, 598, 603, 608, 609, 611, 614, 615, 617, 619, 621, 636, 637, 638, 639, 640, 641, 642, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "abs8": 513, "abs_f": 605, "abs_fp32": 605, "abs_fp64": 605, "abs_fp80": 605, "absenc": [451, 457, 485, 513, 594], "absent": [440, 579], "absl": 475, "absolu": 130, "absolut": [40, 46, 103, 133, 189, 225, 231, 286, 370, 376, 435, 438, 448, 455, 459, 460, 473, 486, 487, 489, 521, 525, 541, 549, 563, 567, 589, 609, 614, 618], "absolute_express": [16, 17, 38, 39, 40, 41, 46, 52, 70, 87, 103, 113, 114, 129, 130, 131, 133, 150, 175, 189, 197, 198, 223, 224, 225, 226, 227, 231, 237, 253, 272, 286, 346, 347, 368, 369, 370, 371, 372, 376, 382, 400, 419, 435], "absolute_tsc": 618, "absolutely": [512, 524, 579, 615], "absolutesymbol": 563, "abstract": [457, 459, 508, 511, 514, 543, 550, 552, 564, 577, 579, 587, 593, 605, 614, 615, 619, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 650, 651, 652, 653], "abstracted": [459, 514], "abstractness": 509, "absv16i8": 614, "absv1i64": 614, "abtu": 468, "abused": 579, "ac": [551, 584], "acc": [439, 579], "acc0": 439, "acc2": 439, "acc250": 439, "acc3": 439, "acced": 130, "acceler": [587, 645, 654], "accelerated": [542, 569], "accelerator": [462, 478], "accept": [438, 440, 452, 456, 458, 459, 460, 473, 501, 504, 505, 509, 510, 513, 514, 517, 521, 523, 524, 529, 535, 543, 549, 551, 557, 561, 578, 579, 587, 594, 597, 603, 604, 609, 625], "accepted": [460, 475, 486, 487, 501, 504, 509, 542, 549, 562, 578, 587, 603], "accepting": 501, "access": [438, 439, 440, 443, 444, 446, 471, 487, 497, 501, 504, 505, 508, 510, 512, 516, 518, 519, 521, 523, 524, 529, 530, 536, 537, 551, 554, 559, 560, 562, 563, 565, 569, 571, 574, 577, 578, 579, 587, 593, 594, 596, 597, 598, 603, 610, 613, 614, 615, 616, 619, 622, 642, 645, 653, 654], "accessed": [40, 225, 370, 439, 440, 444, 457, 501, 511, 519, 549, 563, 564, 579, 591, 593, 597, 604, 611], "accessibility": 582, "accessibl": [439, 440, 455, 473, 486, 501, 505, 510, 524, 536, 549, 555, 563, 579, 594, 601, 604, 638], "accessing": [438, 440, 443, 457, 501, 511, 519, 549, 563, 579, 594, 598], "accessor": [457, 593, 615, 637], "accessty": 549, "accessty1": 549, "accessty2": 549, "accidental": 563, "accidentally": [459, 501, 579, 599, 615], "accommodat": [457, 513, 549, 562], "accommodated": 457, "accommodating": 447, "accomodat": 524, "accompanied": 589, "accomplish": [509, 543, 572, 579, 594], "accomplished": [518, 577, 579, 636, 647], "accord": 598, "according": [440, 447, 448, 485, 501, 518, 525, 526, 531, 543, 549, 555, 579, 584, 585, 588, 596, 598, 614, 619, 638], "accordingly": [511, 518, 546, 549, 571, 579], "account": [458, 504, 509, 525, 529, 537, 543, 549, 558, 561, 578, 581, 590, 594, 616, 617, 621, 622], "accounted": 454, "accounting": [489, 518, 616, 617], "accqual": 440, "accumulat": [551, 593, 594, 613], "accumulateconstantoffset": 561, "accumulated": [594, 613], "accumulating": 594, "accumulator": [439, 577, 648, 649, 650, 651, 652, 653], "accuracy": [485, 549, 577], "accurat": [443, 449, 479, 485, 518, 521, 526, 539, 552, 574, 577, 581, 593, 644, 645, 654], "accurately": [440, 473, 549, 581, 593], "ace": 599, "achiev": [444, 450, 452, 455, 509, 516, 524, 549, 559, 591, 593, 594, 599], "achieved": [508, 517, 526, 546, 552, 579, 585], "acknowledgeorcv1deprec": [623, 624, 625], "acknowledging": 590, "acm": [457, 518], "acme": 583, "acos": 443, "acq_rel": [440, 444, 549], "acquainted": 621, "acquir": [440, 509, 549, 560, 579], "acquired": [440, 551], "acquisit": 579, "acronym": 536, "across": [444, 446, 453, 454, 456, 457, 470, 501, 502, 505, 511, 516, 521, 527, 532, 548, 549, 550, 551, 562, 563, 564, 572, 577, 579, 581, 593, 594, 596, 598, 605, 613, 615, 639, 645, 650, 654], "acrosss": 525, "act": [448, 457, 459, 468, 525, 549, 551, 560, 561, 577, 579, 589, 590, 593, 609], "action": [440, 441, 449, 450, 457, 459, 505, 511, 512, 517, 521, 549, 550, 563, 564, 578, 579, 581, 590, 598, 614, 615, 618, 624, 625], "actionscript": [645, 654], "activ": [440, 443, 485, 487, 497, 505, 509, 510, 511, 518, 520, 547, 549, 551, 558, 571, 579, 581, 596, 615, 622, 623, 624, 625, 655], "activat": 607, "activated": [455, 579], "actively": [509, 594, 622], "activit": [457, 614], "activity": 505, "actual": [11, 86, 109, 174, 193, 271, 304, 331, 341, 418, 436, 440, 443, 444, 447, 451, 457, 459, 460, 464, 468, 485, 501, 505, 508, 515, 516, 519, 539, 548, 549, 550, 551, 554, 560, 561, 567, 579, 580, 588, 591, 593, 594, 597, 598, 599, 603, 607, 609, 614, 619, 621, 622, 636, 640, 644, 645, 647, 651, 654], "actual_access": 440, "actualaccqual": 440, "actually": [109, 193, 341, 440, 443, 446, 447, 450, 456, 457, 459, 460, 501, 502, 505, 509, 511, 514, 515, 518, 519, 537, 539, 543, 549, 560, 561, 563, 577, 579, 581, 593, 598, 599, 607, 609, 614, 615, 619, 621, 624, 625, 637, 638, 639, 640, 641, 642, 644, 645, 648, 649, 650, 651, 652, 653, 654], "acycl": 500, "acyclic": [457, 550, 574, 593, 614], "ad": [457, 577, 579], "ada": 511, "adapt": [514, 536, 540, 558, 579, 599], "adapted": [502, 509, 577], "adapter": 579, "adc": 440, "adc32mi": 605, "adc32mi8": 605, "adc32mr": 605, "adc32ri": 605, "adc32ri8": 605, "adc32rm": 605, "adc32rr": 605, "adc64mi32": 605, "adc64mi8": 605, "adc64mr": 605, "adc64ri32": 605, "adc64ri8": 605, "adc64rm": 605, "adc64rr": 605, "adce": [550, 579], "add": [18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 35, 36, 37, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 199, 200, 201, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 316, 348, 349, 350, 351, 352, 358, 359, 360, 361, 362, 365, 366, 367, 437, 440, 443, 444, 447, 450, 451, 455, 456, 457, 459, 460, 461, 464, 468, 473, 485, 486, 487, 489, 498, 499, 501, 502, 504, 505, 507, 509, 510, 511, 512, 513, 514, 515, 516, 518, 520, 521, 523, 524, 525, 526, 530, 535, 536, 539, 540, 541, 543, 544, 545, 546, 551, 555, 558, 559, 561, 562, 564, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 593, 594, 596, 598, 599, 602, 603, 604, 605, 608, 609, 610, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "add16mi": 605, "add16mi8": 605, "add16mr": 605, "add16ri": 605, "add16ri8": 605, "add16rm": 605, "add16rr": 605, "add32mi": 605, "add32mi8": 605, "add32mr": 605, "add32ri": 605, "add32ri8": 605, "add32ri8_db": 479, "add32ri_db": 479, "add32rm": [593, 605], "add32rr": [479, 593, 605], "add32rr_db": 479, "add32rr_rev": 479, "add64i32": 479, "add64mi32": 605, "add64mi8": 605, "add64mr": 605, "add64ri32": [479, 605], "add64ri8": 479, "add64rr": 479, "add8rr": 457, "add_": 456, "add_argument_nam": 587, "add_cfg_simplif": [650, 651, 652, 653], "add_char": [647, 648, 649, 650, 651, 652, 653], "add_custom_command": 456, "add_custom_target": 456, "add_definit": 455, "add_dep": 456, "add_dependenc": 456, "add_execut": [455, 456], "add_gvn": [650, 651, 652, 653], "add_incoming": [651, 652], "add_instruction_combin": [650, 651, 652, 653], "add_instruction_combining": [650, 653], "add_library": 455, "add_llvm_execut": 456, "add_llvm_fuzz": 517, "add_llvm_library": [455, 615], "add_llvm_pass_plugin": 615, "add_llvm_tool": 517, "add_llvm_unittest": 455, "add_memory_to_register_promot": 653, "add_pf": 546, "add_pt": 546, "add_reassoci": [650, 651, 652, 653], "add_ri": 603, "add_rr": 603, "add_subdirectory": [455, 615], "add_to_library_group": 548, "addcomment": 518, "added": [48, 49, 135, 233, 234, 378, 379, 440, 441, 447, 451, 452, 454, 455, 457, 459, 468, 473, 477, 487, 501, 506, 507, 509, 512, 513, 518, 529, 537, 540, 546, 549, 551, 552, 556, 557, 561, 563, 578, 579, 581, 582, 583, 584, 587, 590, 593, 595, 596, 598, 599, 601, 603, 604, 608, 609, 610, 613, 614, 615, 619, 621, 622, 623, 624, 625, 637, 639, 640, 641, 642, 643, 644, 648, 650, 651, 652], "addedcomplexity": 605, "addend": [440, 503, 549], "addendum": [522, 612], "addfunctionast": [624, 625], "addgenerator": [621, 622], "addi": 549, "addimm": 457, "addincoming": [640, 641, 642, 643, 644], "adding": [441, 448, 451, 452, 455, 457, 459, 460, 464, 465, 468, 478, 505, 506, 509, 513, 517, 520, 537, 540, 543, 546, 549, 556, 563, 581, 593, 595, 609, 610, 612, 614, 615, 616, 621, 623, 638, 640, 641, 642, 643, 645, 646, 647, 649, 651, 652, 653, 654, 655], "addinstselector": 614, "addintervalsforspill": 457, "addirmodul": 563, "addit": [439, 440, 443, 444, 447, 453, 455, 456, 457, 458, 459, 460, 464, 465, 473, 480, 485, 486, 494, 501, 503, 505, 506, 509, 511, 513, 518, 519, 524, 525, 528, 529, 530, 541, 542, 544, 547, 548, 549, 550, 558, 560, 562, 564, 577, 579, 581, 593, 594, 596, 598, 604, 605, 608, 609, 611, 613, 614, 615, 637, 639, 641, 642, 645, 648, 650, 652, 653, 654], "additional": [438, 439, 442, 444, 447, 451, 453, 455, 457, 459, 460, 461, 468, 470, 483, 489, 499, 501, 502, 503, 505, 506, 509, 513, 516, 518, 519, 520, 521, 523, 524, 526, 529, 530, 531, 532, 539, 540, 542, 548, 549, 550, 551, 557, 559, 561, 563, 564, 567, 575, 577, 579, 580, 581, 583, 584, 585, 591, 593, 594, 596, 597, 598, 599, 601, 610, 614, 615, 616, 638, 643, 649], "additionally": [443, 444, 453, 457, 487, 497, 501, 509, 518, 521, 524, 529, 531, 535, 548, 549, 560, 565, 575, 577, 579, 594, 597, 598], "addl": 594, "addlazyirmodul": 563, "addlib": 468, "addllvm": [455, 456], "addmbb": 457, "addmod": 468, "addmodul": [563, 621, 622, 623, 624, 625, 639, 640, 641, 642], "addmoduleflag": 644, "addop": 593, "addpassestoemitfil": [615, 643], "addpassestoemitmc": 554, "addpdrm": 603, "addpdrr": 603, "addpreemitpass": 614, "addpreserved": [443, 528], "addpsrm": 603, "addpsrr": 603, "addq": [479, 596], "addr": [478, 487, 488, 494, 498, 505, 549, 594, 614, 625], "addr1": 593, "addr2": [498, 593], "addr2lin": [463, 498, 536], "addr3": 498, "addr64": [1, 106], "addrawvalu": 545, "addreg": 457, "addregbankcoverag": 532, "addregfrm": 614, "addregisterclass": [457, 614], "addrequired": 528, "address": [10, 11, 13, 14, 41, 48, 49, 54, 56, 88, 106, 108, 109, 111, 112, 131, 135, 139, 192, 193, 195, 196, 227, 233, 234, 239, 325, 326, 332, 340, 341, 343, 344, 372, 378, 379, 384, 386, 420, 437, 438, 439, 443, 444, 445, 446, 447, 455, 463, 478, 485, 486, 487, 488, 489, 492, 493, 494, 501, 502, 504, 505, 509, 511, 516, 517, 518, 524, 525, 537, 547, 550, 551, 555, 559, 561, 563, 565, 566, 567, 576, 577, 578, 579, 581, 586, 587, 591, 593, 594, 596, 598, 603, 605, 613, 614, 615, 617, 618, 621, 623, 624, 625, 639, 640, 641, 642, 645, 650, 653, 654], "address_class": 440, "address_siz": 562, "address_spac": 440, "addressed": [446, 504, 509, 518, 598], "addressibl": 525, "addressing": [56, 88, 326, 332, 386, 420, 440, 509, 581, 592, 594], "addressis32b": 567, "addresssanitiz": [536, 549, 551, 559, 597], "addressspac": 524, "addri": 614, "addrr": 614, "addrri": 614, "addrrr": 614, "addrsig": [442, 492, 493, 513], "addrsig_sym": 513, "addrspac": [511, 524, 549, 562, 598], "addrspacecast": 525, "addrspacequal": 440, "addsdrm": 603, "addsdrr": 603, "addtmp": [638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "addtmp1": [639, 650], "addtmp4": [638, 649], "addtypenam": 579, "addx": 603, "addxri": 555, "addy": 603, "adequat": [455, 594, 614], "adequately": [518, 523], "adher": [458, 459, 509, 579, 584, 599, 602, 605], "adherent": [563, 599], "aditi": 533, "adjacent": [440, 549, 579, 604], "adjust": [487, 488, 490, 498, 511, 516, 521, 547, 561, 594], "adjusted": [455, 549, 594, 609], "adjuster": 575, "adjusting": [547, 614], "adjustment": [547, 549, 587, 594, 614], "adjustpassmanag": 562, "admin": [450, 509, 537], "administrator": 537, "admittedly": 603, "adopt": [459, 509, 520, 563, 594, 599], "adopted": 457, "adopting": 563, "adornment": [549, 595], "adrian": 504, "adrp": 513, "adst": 7, "adt": [459, 521, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "adttest": 455, "advanc": [549, 558, 637, 644, 648], "advanced": [453, 455, 456, 501, 509, 518, 543, 556, 563, 587, 593, 595, 614, 615, 650], "advantag": [444, 446, 457, 459, 501, 505, 509, 518, 519, 524, 545, 549, 551, 552, 579, 581, 582, 589, 594, 641, 642, 645, 652, 653, 654], "adventur": 579, "advertis": 511, "advertised": 558, "advic": [461, 509, 516, 518, 520, 538, 578], "advis": [529, 542, 640, 651], "advised": [453, 456, 468, 545], "advisory": 458, "advocating": [458, 459], "affect": [35, 209, 220, 222, 365, 438, 440, 446, 454, 455, 458, 485, 487, 494, 501, 502, 509, 541, 542, 549, 561, 562, 579, 588, 593, 599, 603, 604, 607, 609, 615, 640, 651], "affected": [438, 444, 455, 460, 485, 544, 549, 564, 581, 584], "affecting": [444, 534, 550, 639], "affiliated": 456, "afn": 549, "aforementioned": [509, 571, 574, 610], "aform_1": 457, "aform_2": 457, "afre": 547, "aft": 610, "after": [58, 141, 241, 388, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 454, 455, 456, 457, 458, 460, 461, 464, 466, 468, 473, 477, 478, 485, 489, 498, 499, 501, 505, 506, 509, 510, 511, 513, 514, 517, 518, 519, 521, 525, 526, 527, 529, 530, 534, 537, 538, 541, 542, 543, 547, 549, 551, 554, 555, 556, 557, 558, 560, 561, 562, 563, 567, 571, 577, 579, 580, 584, 587, 589, 591, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 607, 608, 609, 610, 611, 614, 615, 618, 619, 621, 622, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654], "after_bb": [651, 652, 653], "afterbb": [640, 641, 642, 643, 644], "afterloop": [640, 641, 642, 643, 644, 651, 652, 653], "afterward": [509, 516, 549, 577, 594, 598], "again": [442, 446, 456, 460, 501, 505, 511, 516, 529, 542, 544, 549, 556, 560, 561, 565, 579, 584, 591, 592, 594, 595, 608, 610, 615, 638, 639, 640, 642, 645, 650, 651, 653, 654], "against": [442, 449, 450, 453, 455, 458, 460, 472, 485, 489, 509, 511, 513, 514, 516, 517, 534, 536, 543, 547, 549, 551, 562, 563, 576, 577, 579, 581, 582, 584, 591, 594, 608, 609, 611, 616, 619, 638], "age": [458, 567, 572], "agency": 590, "agent": [440, 549], "agg": 549, "agg1": 549, "agg2": 549, "agg3": 549, "aggreg": 617, "aggregat": [459, 489, 511, 547, 550, 579, 614, 617], "aggregated": 617, "aggress": [443, 457, 459, 502, 515, 518, 521, 549, 550, 593, 637, 640, 648, 651], "aggressively": [577, 579], "agnostic": [446, 457, 487, 497, 563, 593, 599], "agre": [458, 509, 569, 577, 584, 593, 619], "agreed": [509, 526, 584], "agrep": 608, "ah": [549, 596, 605], "ahead": [459, 509, 511, 521, 523, 544, 563, 581, 598, 615, 621, 637, 645, 646, 647, 648, 654], "ahmed": 533, "aid": [518, 549], "aided": 594, "aim": [446, 450, 451, 456, 459, 461, 506, 509, 549, 563, 579, 585, 590, 591, 593, 599, 621], "aimed": [506, 509, 517, 599], "aiming": 586, "ain": 440, "air": 549, "aix": [457, 503], "aka": [442, 443, 457, 549, 551, 574, 575, 579, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "akin": 440, "al": [457, 543, 549, 555, 596, 605, 614], "al_aliasset": 614, "al_superregsset": 614, "alac": 607, "alacconvert": 607, "albeit": [642, 653], "alex": [506, 584], "algebraic": 577, "algn": 617, "algo": 615, "algorithm": [443, 459, 476, 479, 485, 501, 508, 511, 518, 530, 549, 553, 560, 561, 567, 577, 585, 594, 601, 614, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 645, 648, 651, 653, 654], "algorithmic": 579, "ali": [444, 447, 460, 467, 485, 486, 491, 493, 547, 550, 555, 560, 561, 610, 612, 614, 615], "alias": [443, 485, 486, 493, 542, 560, 563, 577, 587, 614], "aliasanalys": [549, 615], "aliasanalysisdebugg": 443, "aliase": [447, 549, 561], "aliased": [447, 457, 501, 549, 577], "aliaseety": 549, "aliasesset": 443, "aliasing": [438, 443, 479, 485, 519, 560, 587, 596, 645, 654], "aliasopt": 501, "aliasresult": 443, "aliasset": [443, 614], "aliassettrack": 587, "align": [440, 447, 460, 487, 505, 506, 511, 516, 518, 536, 545, 549, 555, 562, 579, 585, 593, 596, 598, 614], "align32bit": 447, "align_nod": 549, "aligned": [439, 440, 444, 446, 447, 457, 505, 516, 519, 536, 549, 559, 579, 593, 618, 619], "aligninbit": 587, "alignlog2": 549, "alignment": [439, 440, 444, 457, 483, 487, 489, 503, 505, 506, 518, 519, 525, 536, 545, 549, 552, 555, 561, 562, 577, 579, 587, 591, 593, 598, 614, 618], "alignstack": [447, 549], "alignstyl": 579, "aliv": [457, 505, 561, 577, 579, 594, 615], "all": [40, 106, 130, 225, 226, 370, 371, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 470, 472, 473, 475, 476, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 523, 524, 525, 529, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 574, 575, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 601, 603, 604, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "all_build": 523, "all_ones_mask": 594, "all_zeros_mask": 594, "alleviat": [457, 501, 549, 579], "alloc": [40, 130, 225, 370, 440, 443, 444, 459, 465, 466, 486, 487, 497, 511, 513, 518, 519, 521, 547, 555, 559, 560, 564, 577, 579, 585, 591, 594, 596, 597, 598, 614, 615, 617, 621, 639, 642, 643, 644, 653], "allocainst": [459, 549, 579, 642, 643, 644, 653], "allocat": [440, 443, 457, 459, 487, 505, 511, 518, 536, 547, 549, 551, 579, 591, 592, 614, 619, 645, 654], "allocated": [440, 457, 465, 485, 505, 511, 519, 536, 549, 554, 559, 577, 591, 592, 593, 596, 597, 598, 615, 619, 623, 642, 650, 653], "allocatevmodul": [623, 624, 625], "allocating": [457, 485, 505, 511, 547, 549, 559, 579, 591, 594, 596], "allocationinst": 579, "allocator": [440, 465, 466, 516, 518, 524, 527, 559, 586, 593, 594, 598, 614, 615], "allocator_may_return_null": 591, "allocinst": 653, "allocsiz": [447, 549], "allon": 549, "allow": [440, 443, 444, 447, 449, 453, 455, 456, 457, 458, 459, 460, 461, 464, 465, 468, 473, 479, 485, 487, 493, 497, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 525, 526, 529, 536, 539, 541, 543, 545, 547, 548, 549, 551, 552, 554, 555, 557, 559, 560, 561, 562, 563, 565, 576, 577, 578, 579, 581, 584, 587, 589, 591, 592, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 607, 609, 610, 611, 613, 614, 615, 616, 617, 619, 621, 622, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656], "allowed": [438, 439, 440, 444, 446, 447, 449, 455, 457, 460, 464, 485, 502, 505, 506, 509, 513, 518, 519, 521, 548, 549, 553, 574, 589, 593, 596, 598, 599, 603, 615, 619, 637, 641, 642, 648, 652, 653], "allowing": [440, 443, 457, 459, 460, 464, 501, 505, 508, 509, 511, 516, 518, 549, 557, 563, 564, 565, 567, 576, 577, 578, 579, 581, 586, 587, 589, 591, 593, 594, 596, 598, 603, 615, 619, 638, 642, 646, 649, 653], "allowsanysmallsiz": 579, "allroot": 608, "alltargetsasmparser": 453, "alltargetsasmprinter": 453, "alltargetsdesc": 453, "alltargetsdisassembler": 453, "alltargetsinfos": 453, "ally": 549, "almost": [444, 446, 457, 459, 485, 509, 512, 516, 517, 518, 525, 550, 579, 581, 587, 598, 599], "alon": [447, 452, 457, 501, 509, 558, 594, 609, 637, 648], "along": [444, 447, 455, 457, 459, 486, 487, 490, 502, 505, 508, 516, 518, 521, 539, 543, 544, 546, 549, 554, 555, 556, 562, 572, 577, 579, 585, 592, 593, 594, 595, 614, 615, 622, 638, 639, 645, 646, 647, 649, 650, 654], "alongsid": [447, 504, 521, 581, 589, 615], "alpha": [549, 614], "alphacompilationcallback": 614, "alphajitinfo": 614, "alphanumeric": [474, 487], "already": [443, 449, 450, 452, 453, 454, 455, 456, 457, 459, 485, 486, 501, 502, 504, 505, 509, 512, 518, 521, 523, 524, 529, 532, 535, 536, 543, 544, 547, 549, 556, 561, 563, 564, 579, 580, 581, 583, 584, 590, 592, 593, 594, 595, 596, 598, 605, 609, 610, 614, 615, 619, 621, 623, 625, 638, 639, 640, 641, 642, 643, 644, 647, 649, 650, 651, 652, 653], "also": [436, 437, 439, 440, 441, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 468, 473, 479, 485, 489, 490, 501, 502, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 529, 530, 532, 535, 536, 538, 539, 540, 541, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 558, 560, 561, 562, 563, 564, 565, 567, 571, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 590, 591, 593, 594, 595, 596, 598, 599, 601, 603, 604, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "alt_always_instrumented": 616, "alt_never_instrumented": 616, "alter": [501, 549, 579, 593], "altered": 610, "altering": 587, "altern": [438, 439, 440, 455, 457, 511, 516, 519, 524, 529, 530, 532, 549, 563, 585, 587, 594, 607, 614, 615], "alternat": [462, 535, 549, 564, 579, 619, 656], "alternating": 549, "alternatively": [451, 453, 473, 501, 502, 509, 516, 519, 523, 535, 551, 579, 594, 614, 616, 637, 642, 648, 653], "although": [444, 447, 456, 457, 459, 464, 471, 501, 502, 509, 512, 518, 521, 523, 530, 543, 548, 549, 551, 555, 556, 567, 572, 574, 579, 595, 598, 609, 615, 641, 649], "altivec": [457, 549, 550], "altogeth": [539, 585], "alu": [440, 485], "alu32_rr": 546, "alway": [440, 443, 444, 446, 447, 449, 450, 452, 455, 456, 457, 458, 459, 460, 464, 468, 470, 480, 485, 501, 502, 505, 506, 509, 511, 514, 516, 521, 525, 529, 539, 543, 548, 549, 550, 552, 553, 560, 567, 569, 574, 575, 578, 579, 580, 581, 587, 589, 590, 593, 594, 597, 598, 599, 601, 608, 609, 616, 617, 618, 619, 637, 638, 639, 640, 641, 642, 643, 644, 645, 649, 650, 651, 652, 653, 654], "always_inlin": 502, "always_instru": 616, "always_instrumented": 616, "alwaysinlin": [447, 549], "am": [509, 525, 579], "amar": 584, "amazing": [641, 652], "amazingly": [640, 651], "ambiguity": [438, 543, 604], "ambiguous": [501, 609, 637, 641, 648, 652], "amd": [438, 440, 457, 485, 503, 541, 594, 601], "amd64": 521, "amd_code_version_major": 440, "amd_kernel_code_version_minor": 440, "amd_machine_kind": 440, "amd_machine_version_major": 440, "amd_machine_version_stepping": 440, "amd_queue_t": 440, "amdfam10": 643, "amdgpu": [0, 1, 2, 3, 4, 5, 6, 7, 521, 549, 555, 584, 601, 612], "amdgpu_flat_work_group_siz": 440, "amdgpu_num_sgpr": 440, "amdgpu_num_vgpr": 440, "amdgpu_waves_per_eu": 440, "amdhsa_dx10_clamp": 440, "amdhsa_exception_fp_denorm_src": 440, "amdhsa_exception_fp_ieee_div_zero": 440, "amdhsa_exception_fp_ieee_inexact": 440, "amdhsa_exception_fp_ieee_invalid_op": 440, "amdhsa_exception_fp_ieee_overflow": 440, "amdhsa_exception_fp_ieee_underflow": 440, "amdhsa_exception_int_div_zero": 440, "amdhsa_float_denorm_mode_16_64": 440, "amdhsa_float_denorm_mode_32": 440, "amdhsa_float_round_mode_16_64": 440, "amdhsa_float_round_mode_32": 440, "amdhsa_forward_progress": 440, "amdhsa_fp16_overflow": 440, "amdhsa_group_segment_fixed_siz": 440, "amdhsa_ieee_mod": 440, "amdhsa_memory_ordered": 440, "amdhsa_next_free_sgpr": 440, "amdhsa_next_free_spgr": 440, "amdhsa_next_free_vgpr": 440, "amdhsa_next_free_vpgr": 440, "amdhsa_private_segment_fixed_siz": 440, "amdhsa_reserve_": 440, "amdhsa_reserve_flat_scratch": 440, "amdhsa_reserve_vcc": 440, "amdhsa_reserve_xnack_mask": 440, "amdhsa_system_sgpr_private_segment_wavefront_offset": 440, "amdhsa_system_sgpr_workgroup_id_x": 440, "amdhsa_system_sgpr_workgroup_id_y": 440, "amdhsa_system_sgpr_workgroup_id_z": 440, "amdhsa_system_sgpr_workgroup_info": 440, "amdhsa_system_vgpr_workitem_id": 440, "amdhsa_user_sgpr_dispatch_id": 440, "amdhsa_user_sgpr_dispatch_ptr": 440, "amdhsa_user_sgpr_flat_scratch_in": 440, "amdhsa_user_sgpr_kernarg_segment_ptr": 440, "amdhsa_user_sgpr_private_segment_buff": 440, "amdhsa_user_sgpr_private_segment_siz": 440, "amdhsa_user_sgpr_queue_ptr": 440, "amdhsa_wavefront_size32": 440, "amdhsa_workgroup_processor_mod": 440, "amdkernelcodet": 440, "amen": [457, 582], "amend": [504, 509, 521, 578], "amin": 584, "aminiinconsistent": 584, "among": [457, 459, 460, 502, 513, 516, 521, 526, 549, 551, 552, 561, 562, 577, 579, 581, 601], "amongst": 444, "amortized": 534, "amount": [440, 451, 453, 457, 458, 459, 465, 466, 485, 489, 499, 501, 509, 511, 512, 514, 518, 521, 525, 544, 549, 551, 561, 577, 579, 581, 582, 591, 592, 593, 596, 598, 601, 605, 615, 616, 623, 639, 646, 647, 650], "amper": 538, "ampersand": [103, 189, 286, 435], "an": [8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 56, 57, 70, 76, 85, 87, 89, 103, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 150, 161, 173, 175, 189, 190, 191, 197, 198, 199, 200, 201, 206, 207, 208, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 237, 253, 260, 270, 272, 286, 287, 292, 297, 307, 316, 317, 318, 322, 323, 326, 338, 339, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 377, 378, 379, 380, 382, 386, 387, 400, 407, 417, 419, 421, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 522, 524, 525, 526, 527, 529, 530, 531, 532, 535, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 574, 575, 577, 578, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656], "anachronistically": 447, "analogous": [511, 518, 530, 549, 579, 594, 603], "analogously": [598, 615], "analys": [444, 448, 449, 452, 454, 470, 499, 506, 512, 514, 516, 518, 521, 524, 534, 546, 549, 550, 552, 553, 555, 560, 564, 579, 584, 585, 586, 587, 589, 593, 594, 601, 608, 612, 617, 620, 639, 642, 644, 650, 653], "analysing": [448, 454, 616, 617], "analysisaliasing": 589, "analysisfpcommut": 589, "analysisusag": [443, 528], "analytic": 583, "analyz": [455, 457, 463, 479, 499, 516, 521, 523, 577, 593, 594, 601, 608, 615, 617, 640, 651], "analyzebranch": 614, "analyzed": [485, 505, 561, 615], "analyzing": [470, 508, 532, 579, 616, 617], "ancestor": [440, 543], "anchor": 593, "ancient": 442, "and": [8, 11, 12, 14, 15, 21, 22, 24, 32, 33, 34, 35, 36, 37, 40, 43, 45, 46, 50, 54, 55, 76, 103, 106, 109, 112, 118, 119, 124, 125, 126, 128, 130, 132, 133, 136, 139, 140, 161, 189, 190, 193, 194, 196, 206, 207, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 228, 230, 231, 235, 239, 240, 260, 286, 288, 293, 298, 300, 307, 317, 319, 321, 323, 325, 338, 341, 342, 344, 345, 351, 352, 354, 362, 363, 364, 365, 366, 367, 370, 371, 373, 375, 376, 380, 384, 385, 407, 435, 436, 438, 442, 445, 447, 449, 450, 452, 454, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 490, 492, 494, 496, 498, 499, 500, 504, 506, 507, 508, 510, 511, 513, 522, 523, 524, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 542, 544, 545, 546, 548, 550, 551, 555, 556, 557, 558, 559, 562, 564, 565, 566, 567, 570, 572, 575, 576, 578, 580, 582, 583, 584, 587, 588, 589, 590, 591, 592, 594, 595, 597, 599, 601, 602, 604, 605, 606, 608, 611, 613, 616, 617, 619, 620, 621, 622, 623, 624, 640, 641, 642, 643, 644, 646, 651, 652, 653, 655, 656], "andrew": [518, 581], "android": 609, "andw": 460, "anew": 593, "angle": [502, 619], "annoated": 557, "annot": [449, 460, 490, 516, 562, 594], "annotat": [449, 511, 562, 584], "annotated": [485, 502, 549, 550, 557, 581], "annotating": 516, "announc": [520, 558, 584, 588], "announced": [588, 616], "announcing": [542, 581], "anon": 549, "anonymous": [485, 523, 593, 601, 603, 604, 614, 615, 617, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "anonymously": 590, "anoth": [438, 439, 440, 443, 444, 445, 446, 447, 453, 455, 456, 457, 458, 459, 460, 468, 473, 485, 487, 489, 497, 498, 499, 501, 505, 506, 508, 509, 511, 512, 513, 514, 518, 521, 523, 525, 527, 528, 529, 530, 532, 538, 539, 541, 546, 547, 548, 549, 550, 551, 552, 556, 560, 561, 562, 563, 566, 574, 575, 577, 581, 584, 593, 594, 595, 596, 597, 598, 599, 601, 603, 605, 609, 610, 611, 614, 615, 616, 617, 618, 619, 622, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 650, 651, 652, 653, 654], "another_op": 555, "anotherbranch": 581, "anothercategory": 501, "answer": [443, 450, 459, 501, 509, 514, 519, 527, 543, 549, 556, 560, 561, 577, 582, 586, 594, 639, 640, 642, 650, 651, 653], "answered": 516, "answering": 509, "anti": [485, 508], "anticipat": [581, 618], "anticipated": 584, "antisymmetric": 561, "antisymmetry": 561, "anxious": 455, "any": [103, 189, 286, 435, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 468, 470, 472, 473, 476, 477, 478, 479, 485, 486, 487, 488, 489, 490, 492, 493, 496, 497, 498, 499, 501, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 523, 524, 525, 527, 529, 536, 538, 541, 542, 545, 546, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 571, 574, 575, 577, 579, 580, 581, 583, 584, 585, 587, 589, 590, 591, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 608, 609, 610, 611, 613, 614, 615, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "any_other_cond": 549, "anyextload": 525, "anyhow": 549, "anymor": [450, 579, 610, 615], "anyon": [444, 456, 509, 510, 590, 593, 614], "anyregcc": [447, 549, 596], "anything": [444, 453, 457, 459, 465, 466, 485, 487, 502, 505, 509, 514, 521, 523, 536, 543, 549, 563, 565, 571, 577, 579, 581, 593, 594, 596, 598, 605, 610, 639, 640, 649, 650, 651], "anyway": [459, 508, 541, 549, 560, 577, 584, 593], "anywher": [458, 460, 511, 516, 536, 549, 552, 556, 561, 595, 604, 609, 637, 642, 648, 653], "ao": 513, "ap": [518, 549], "ap2": 549, "apach": [459, 509, 542, 599, 621, 622, 623, 624, 625], "apart": [443, 446, 455, 524, 549, 571, 579, 587], "apertur": [40, 370, 440], "aper\u00e7u": [0, 1, 2, 3, 4, 5, 6, 7], "apfloat": [521, 638, 639, 640, 641, 642, 643, 644, 649], "api": [440, 443, 455, 459, 489, 501, 503, 524, 528, 535, 542, 548, 551, 560, 562, 563, 572, 576, 579, 582, 584, 593, 594, 596, 601, 616, 620, 622, 623, 625, 638, 639, 644, 649], "apint": [555, 579, 617], "apis": [459, 504, 518, 522, 575, 586, 591, 594, 601, 616, 621, 623, 624, 625, 638, 650], "app": [576, 579, 583], "apparently": [642, 653], "appdat": 523, "appeal": 590, "appealed": 590, "appealing": 594, "appear": [439, 440, 443, 444, 451, 459, 464, 468, 476, 485, 487, 501, 506, 509, 513, 519, 549, 563, 565, 566, 567, 572, 574, 575, 577, 579, 581, 585, 593, 594, 598, 601, 603, 604, 614], "appearing": [501, 549, 581], "appel": 518, "appel89": 518, "append": [440, 455, 461, 468, 529, 549, 579, 580, 593, 607, 609, 616], "append_block": [649, 650, 651, 652, 653], "appended": [462, 468, 469, 549, 579, 603, 651], "appending": [447, 462, 468, 473, 549, 579], "appendinglinkag": 579, "appendun": 549, "appertain": 549, "apple": [456, 457, 460, 478, 507, 509, 511, 520, 521, 549, 593], "apple_nam": [462, 593], "apple_namespac": 593, "apple_objc": 593, "apple_typ": [462, 593], "appli": [444, 456, 457, 458, 459, 468, 473, 494, 501, 508, 521, 539, 549, 563, 584, 585, 593, 599, 604, 622], "applic": [446, 457, 468, 473, 486, 493, 509, 549, 551, 561, 577, 579], "applied": [58, 141, 241, 388, 438, 439, 451, 468, 487, 497, 501, 505, 509, 513, 519, 524, 532, 537, 540, 542, 549, 551, 554, 564, 577, 579, 593, 604, 607, 610, 639, 650], "appliqu": [440, 447, 455, 457, 459, 472, 473, 501, 502, 503, 509, 511, 515, 516, 518, 523, 524, 548, 549, 554, 579, 586, 594, 596, 598, 603, 605, 607, 609, 614, 615, 617, 618, 620, 621, 636, 639, 641, 645, 647, 650, 652, 654], "applu331": 583, "apply": [437, 440, 443, 446, 450, 455, 457, 468, 487, 497, 501, 505, 509, 513, 516, 519, 536, 540, 549, 554, 563, 567, 574, 579, 581, 584, 585, 594, 599, 603, 610, 614, 615, 618, 619, 622, 641, 642, 652, 653], "applying": [499, 539, 549, 552, 588, 610, 618, 645, 654], "apprec": 620, "appreciat": [504, 509], "appreciated": [509, 539], "approach": [440, 446, 451, 452, 455, 457, 485, 501, 502, 505, 509, 511, 519, 530, 534, 543, 546, 549, 559, 561, 577, 579, 584, 585, 592, 593, 594, 598, 614], "appropriat": [440, 443, 444, 446, 457, 473, 485, 490, 501, 502, 505, 509, 511, 512, 516, 517, 518, 521, 525, 526, 527, 537, 541, 542, 543, 545, 546, 549, 562, 569, 574, 577, 578, 579, 581, 582, 584, 588, 590, 593, 598, 599, 605, 614, 615, 619, 621, 623, 637, 641, 642, 648, 652, 653], "appropriately": [443, 464, 509, 549, 552, 579, 590, 593, 598, 617], "appropriateness": 590, "approv": 509, "approval": [509, 542, 584], "approved": [509, 578], "approving": 542, "approx": [502, 562], "approxim": [449, 550], "approximat": [502, 549, 551], "approximated": 549, "approximately": [464, 523, 536, 610], "apr": 599, "aptr": 549, "apu": 440, "aq": 549, "aq2": 549, "aqlwrap": 440, "ar": [455, 463, 486, 491, 521, 535, 540, 579], "arang": 478, "arbitrarily": [543, 549, 569, 593, 640, 651], "arbitrary": [440, 443, 447, 457, 459, 464, 471, 479, 501, 505, 511, 517, 518, 519, 525, 534, 548, 549, 553, 555, 560, 563, 575, 579, 593, 594, 596, 598, 601, 603, 614, 615, 618, 637, 638, 639, 642, 645, 646, 647, 648, 649, 650, 653, 654], "arc": [473, 521, 578, 584], "arcanist": [520, 521, 578], "arch": [462, 465, 466, 473, 478, 483, 485, 486, 487, 488, 492, 493, 494, 498, 502, 521, 563, 588, 616, 643], "arch1": 486, "arch13": 587, "arch2": 486, "arch_nam": 498, "arche": [538, 539], "architected": 440, "architectur": [444, 446, 454, 455, 457, 462, 464, 465, 466, 473, 478, 479, 483, 485, 486, 487, 488, 492, 493, 494, 498, 502, 504, 511, 516, 517, 521, 522, 523, 536, 538, 539, 541, 542, 549, 555, 562, 563, 566, 585, 587, 588, 591, 594, 601, 605, 609, 611, 612, 614, 616, 620, 625, 643, 655], "architectural": 460, "architecturally": [485, 502], "archiv": [453, 463, 473, 478, 481, 486, 487, 488, 494, 497, 503, 520, 535, 548, 552, 567, 579, 580, 581, 590, 591, 616], "archived": [463, 468, 509], "archiveiterator": 579, "archiver": 468, "arcp": 549, "arcpatch": 578, "arctan": 619, "are": [8, 24, 32, 35, 37, 46, 52, 106, 109, 124, 133, 135, 190, 193, 209, 217, 220, 222, 231, 237, 307, 338, 341, 354, 362, 365, 367, 376, 382, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 486, 487, 488, 490, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "aren": [443, 457, 458, 459, 502, 509, 518, 519, 521, 523, 529, 539, 549, 555, 577, 581, 594, 639, 640, 645, 650, 654], "areprivatesymbolsstripped": 567, "arg": [440, 459, 461, 464, 466, 473, 490, 501, 507, 517, 539, 544, 549, 555, 561, 589, 598, 601, 603, 604, 618, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "arg1": [549, 551, 616, 636, 647], "arg2": [549, 551, 636, 647], "arg_begin": 579, "arg_empty": 579, "arg_end": 579, "arg_iterator": 579, "arg_siz": [518, 579, 638, 639, 640, 641, 642, 643, 644], "argc": [501, 506, 507, 549, 551, 562, 579, 593, 617, 625], "argidx": 644, "arglist": 549, "argmemonly": [447, 516, 549], "argn": 456, "argnam": [501, 637, 638, 639, 640, 641, 642, 643, 644], "argstart": 501, "argsv": [638, 639, 640, 641, 642, 643, 644], "argty": 549, "arguably": 524, "argument": [46, 133, 231, 376, 443, 446, 447, 452, 454, 455, 457, 459, 460, 461, 463, 464, 466, 468, 470, 472, 473, 478, 486, 490, 498, 500, 502, 506, 510, 511, 512, 514, 516, 517, 518, 519, 521, 523, 526, 531, 535, 539, 543, 544, 546, 547, 551, 554, 555, 561, 564, 581, 586, 587, 589, 591, 592, 593, 594, 596, 597, 598, 601, 604, 605, 608, 609, 614, 615, 616, 618, 621, 622, 623, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654], "argumentexpr": [648, 649, 650, 651, 652, 653], "argumentlisttyp": 579, "argv": [451, 456, 466, 501, 506, 507, 551, 562, 579, 593, 617, 625], "argv0": 466, "argvalu": [501, 507], "aris": [509, 519, 549, 579], "arithmetic": [506, 516, 525, 561, 577, 579, 587, 594, 603, 613, 638, 642, 649, 653], "arithmetical": 506, "arity": 518, "arm": [444, 457, 487, 488, 492, 493, 497, 511, 516, 521, 529, 539, 549, 550, 555, 557, 584, 601, 609, 612, 614], "arm32": 503, "arm64": [503, 521, 587, 607], "arm7": 616, "arm_aapcs_vfpcc": 447, "arm_aapcscc": 447, "arm_apcscc": 447, "arm_neon": [446, 601], "armap": 486, "armgenasmmatch": 601, "armgenregisterinfo": 601, "armhf": [540, 541, 591], "arminstrinfo": 614, "armv5": 444, "armv6": [503, 538], "armv7": [446, 503, 521, 538, 541, 549], "armv7a": 540, "armv8": [503, 549, 559, 587, 605], "armv9": [559, 586], "arnaud": 558, "around": [440, 443, 444, 454, 456, 460, 484, 485, 501, 509, 511, 518, 519, 521, 530, 545, 547, 548, 549, 551, 558, 561, 563, 564, 577, 579, 581, 584, 587, 593, 594, 595, 598, 599, 604, 614, 615, 616, 637, 640, 644, 645, 651, 654], "arr": [519, 549, 579, 594], "arr1": 594, "arr2": 594, "arrang": [457, 501, 518, 543, 549, 577, 594, 609, 615, 623], "arranged": [549, 594], "arranging": 622, "array": [438, 440, 443, 446, 447, 457, 465, 489, 505, 511, 516, 518, 551, 561, 562, 566, 567, 570, 571, 574, 577, 593, 594, 601, 609, 610, 613, 614, 637, 642, 645, 648, 649, 650, 651, 652, 653, 654], "arrayidx": 549, "arrayidx1": 549, "arrayidx2": 549, "arrayidx3": 549, "arrayidx4": 549, "arraytyp": 579, "arriv": [519, 563], "arsenault": 584, "arsenaultagre": 584, "arstechnic": 594, "art": 518, "artem": 502, "articl": [561, 577, 581, 594, 620, 640, 642, 651, 653], "artifact": [519, 551, 561, 585], "artifact_prefix": 551, "as_float": [650, 651, 652, 653], "asan": [551, 586, 591], "asanstackvariabledescript": 597, "asc": 583, "ascending": [506, 549], "ascii": [447, 496, 549, 551, 593, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "asciz": 513, "asf": 509, "ashr": 525, "asi": 614, "asid": [530, 549, 560, 579, 591], "ask": [443, 450, 458, 502, 504, 509, 512, 514, 518, 521, 542, 543, 558, 561, 581, 582, 588, 593, 598, 603, 604, 615, 623, 637, 645, 648, 654], "asked": [458, 521, 523, 542, 579, 593, 602], "asking": [504, 509, 516, 590, 640, 642, 644, 645, 651, 653, 654], "asm": [447, 453, 465, 466, 479, 485, 488, 500, 562, 587, 589], "asmmatcheremitt": 601, "asmnam": 614, "asmpars": [512, 521, 601], "asmparsernum": 500, "asmprint": [457, 518, 549, 601, 614], "asmstr": [603, 614], "asmstring": [605, 614], "asmwrit": [512, 518], "asmwriternum": 500, "aspect": [455, 457, 505, 508, 518, 530, 532, 536, 549, 571, 572, 579, 581, 585, 591, 593, 604, 637, 638, 640, 644, 645, 648, 649, 651, 654], "aspir": [641, 652], "aspx": [459, 583], "asrc": 7, "asrc2": 7, "assembl": [11, 48, 49, 88, 109, 193, 332, 341, 378, 379, 420, 436, 437, 438, 439, 463, 465, 502, 511, 513, 521, 523, 540, 563, 581, 587, 601, 608, 614, 655], "assembled": [440, 509, 517, 549, 605], "assembler": [457, 513, 517, 521], "assembling": [440, 587], "assembly": [439, 440, 447, 465, 466, 469, 470, 476, 477, 485, 488, 499, 500, 503, 509, 511, 512, 514, 517, 519, 521, 523, 540, 548, 555, 557, 562, 582, 586, 587, 592, 598, 601, 609, 639, 643, 650], "assert": [455, 457, 501, 504, 521, 538, 542, 544, 549, 550, 551, 562, 576, 577, 579, 588, 593, 609, 614, 615, 619, 622, 624, 625, 638, 639, 640, 641, 642, 643, 644], "assert_valid_funct": [649, 650, 651, 652, 653], "assign": [439, 450, 457, 479, 501, 504, 511, 514, 524, 549, 561, 562, 579, 593, 603, 604, 614, 646, 647], "assigne": 450, "assigned": [439, 440, 447, 448, 449, 457, 460, 479, 490, 501, 509, 511, 513, 524, 530, 536, 546, 549, 559, 562, 564, 577, 579, 591, 593, 603, 604, 610, 614, 619], "assigning": [439, 546], "assignment": [444, 448, 457, 459, 479, 508, 509, 514, 519, 524, 532, 549, 550, 561, 579, 581, 593, 638, 643, 644, 646, 647, 649], "assignvirt2phy": 457, "assignvirt2stackslot": 457, "assist": [459, 536, 544, 564, 641, 652], "assisting": [500, 516], "associ": [465, 508, 513, 549, 550, 561, 577, 593], "associat": [506, 549, 560, 579, 596, 611, 623, 637, 648], "associated": [440, 446, 447, 448, 449, 456, 457, 459, 501, 506, 511, 513, 518, 545, 548, 553, 554, 555, 561, 563, 564, 579, 584, 589, 591, 593, 596, 598, 599, 603, 611, 612, 614, 616, 618, 639], "associating": [447, 501, 518, 549], "associativity": 549, "assorted": 644, "assum": [440, 442, 443, 451, 455, 457, 459, 465, 466, 474, 479, 485, 489, 502, 509, 511, 512, 516, 519, 523, 524, 561, 562, 567, 570, 571, 575, 577, 579, 581, 582, 584, 592, 593, 594, 596, 598, 611, 615, 617, 619, 621, 637, 638, 641, 642, 643, 644, 646, 649, 652], "assumed": [437, 439, 440, 443, 448, 449, 451, 457, 487, 498, 505, 518, 524, 549, 567, 569, 572, 574, 579, 598, 615], "assuming": [442, 447, 464, 479, 514, 521, 549, 563, 579, 581, 588, 593, 594, 598, 601, 608, 610, 614, 638, 645, 649, 654], "assumpt": [457, 459, 460, 465, 485, 509, 511, 549, 593, 594, 621, 644, 645, 654], "assur": 619, "ast": [488, 502, 550, 601, 621, 623, 625, 636, 638, 639, 641, 642, 644, 645, 646, 647, 649, 650, 652, 653, 654, 655], "astcontext": 459, "astdump": 601, "astnod": 601, "astread": 601, "astwrit": 601, "asymmetric": 519, "asymmetry": [515, 561], "asymptomatic": 461, "async": [505, 563], "async_op": 505, "async_op1": 505, "async_op2": 505, "asynchronous": [440, 444, 505, 549], "at": [439, 440, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 464, 465, 466, 468, 471, 473, 478, 479, 480, 483, 485, 487, 488, 489, 498, 501, 502, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 523, 524, 525, 526, 529, 530, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 571, 572, 574, 575, 576, 578, 579, 580, 584, 585, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655], "at_apple_property": 593, "at_apple_property_attribut": 593, "at_apple_property_set": 593, "at_apple_runtime_class": 593, "at_artificial": 593, "at_byte_siz": 593, "at_decl_fil": 593, "at_decl_lin": 593, "at_encoding": 593, "at_end": [649, 650, 651, 652, 653], "at_nam": 593, "at_typ": 593, "atan2": [636, 647], "atc": 440, "athlon": 643, "atkinson": 583, "atoi": 549, "atom": 593, "atom_count": 593, "atom_count0": 593, "atomic": [18, 19, 20, 21, 22, 25, 26, 27, 33, 34, 115, 116, 117, 118, 119, 125, 126, 199, 200, 201, 206, 207, 218, 219, 316, 317, 348, 349, 350, 351, 352, 355, 356, 357, 363, 364, 438, 440, 460, 508, 516, 525, 529, 560, 571, 579, 586, 587], "atomic_": 444, "atomic_cmpxchg": 444, "atomic_fent": 444, "atomic_load_": 444, "atomic_swap": 444, "atomically": [549, 591], "atomicexpand": 444, "atomicexpandpass": 444, "atomicity": 444, "atomicrmw": [440, 444, 525], "atomtyp": 593, "atop": 518, "att": [465, 466, 488, 549], "attach": [505, 507, 521, 549, 578, 638], "attached": [537, 549, 562, 563, 579, 593, 610, 611, 618, 639, 640, 641, 642, 653], "attaching": [549, 610, 611, 621], "attachment": [509, 549, 611], "attack": [458, 549, 594], "attacked": 594, "attacker": 594, "attacker_dat": 594, "attacker_offset": 594, "attempt": [443, 447, 451, 461, 474, 485, 487, 488, 499, 509, 511, 516, 521, 536, 540, 549, 551, 554, 563, 577, 579, 589, 590, 594, 596, 598, 599, 614, 615, 617, 618], "attempted": [623, 624, 625], "attempting": [440, 457, 461, 505, 577, 579, 591, 599], "attend": 558, "attende": 558, "attended": 558, "attent": [458, 459, 509, 526, 549, 590, 609, 614, 621], "attibut": 593, "attorney": 509, "attr": [0, 1, 2, 3, 440, 447, 549, 593, 601, 616, 617], "attr0": [12, 110, 194, 342, 447], "attr1": 447, "attr32": [12, 110, 194, 342], "attract": [509, 518, 558], "attrdump": 601, "attrgrp": 447, "attrgrp0": 447, "attrgrp1": 447, "attribu": 578, "attribut": [12, 110, 194, 342, 447, 457, 465, 466, 476, 478, 487, 488, 492, 493, 497, 505, 509, 511, 513, 518, 524, 527, 530, 546, 552, 561, 562, 564, 566, 579, 586, 587, 589, 592, 598, 601, 605, 610, 614, 615], "attributed": 549, "attributelist": [447, 601], "attributereferent": 601, "attributor": 587, "attrimpl": 601, "attrinfomap": 601, "attrkind": [545, 601], "attrlist": 601, "attrparsedattrimpl": 601, "attrparsedattrkind": 601, "attrparsedattrlist": 601, "attrparserstringswitch": 601, "attrpchread": 601, "attrpchwrit": 601, "attrspelling": 601, "attrspellinglistindex": 601, "attrtemplateinstantiat": 601, "attrvisitor": 601, "atyp": 519, "audienc": [516, 620], "auditing": 594, "augment": 449, "augmented": [532, 579, 641, 652], "augmenting": 526, "august": 554, "auquel": 130, "authenticat": 537, "author": [452, 457, 459, 505, 509, 514, 522, 537, 543, 549, 550, 561, 563, 584, 594], "authored": [505, 509], "authorit": 489, "authorized": 509, "auto": [438, 457, 471, 473, 474, 490, 523, 563, 579, 585, 587, 593, 610, 612, 616, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "autoconf": [456, 509, 538], "autocrlf": 521, "autodetected": [455, 460, 465, 466, 473, 485], "autogenerated": 509, "autoinsert": 579, "autom": 605, "automat": [442, 457, 601], "automated": [500, 509, 521, 578, 580, 584, 601], "automatic": [443, 457, 459, 463, 518, 561, 585, 586, 587, 594, 603, 614, 642, 643, 644], "automatically": [437, 440, 443, 450, 455, 457, 459, 464, 465, 479, 487, 501, 504, 509, 514, 518, 520, 521, 535, 537, 541, 542, 543, 547, 548, 549, 555, 556, 578, 579, 580, 581, 587, 592, 593, 594, 595, 601, 604, 607, 610, 614, 615, 616, 619, 638, 640, 649, 650, 651], "automating": 601, "automaton": [457, 601], "autotool": 521, "autovectoriz": 613, "autr": [0, 1, 2, 3, 4, 5, 6, 7], "auxiliary": [440, 601, 614], "auxiliarydat": 656, "av": 560, "avail": [56, 326, 386, 439, 440, 444, 453, 455, 456, 457, 459, 463, 464, 465, 466, 472, 473, 479, 485, 488, 494, 499, 501, 502, 507, 509, 511, 514, 516, 521, 524, 528, 529, 530, 532, 535, 536, 537, 539, 540, 542, 543, 548, 549, 551, 563, 576, 577, 579, 583, 586, 587, 588, 589, 590, 591, 593, 594, 596, 598, 599, 600, 601, 603, 605, 606, 607, 608, 609, 611, 613, 614, 615, 616, 617, 621, 636, 638, 639, 640, 641, 643, 647, 649, 650, 651], "availability": [439, 444, 484, 485, 549, 581], "available_externally": [447, 549], "available_featur": [464, 609], "avalanch": 579, "avali": 593, "avenu": 590, "averag": [470, 485, 536, 640, 643, 651], "averaging": 551, "avial": 521, "avl": 579, "avoid": [438, 440, 443, 445, 446, 447, 451, 455, 456, 457, 460, 493, 505, 509, 513, 517, 518, 519, 527, 529, 534, 539, 543, 547, 549, 552, 561, 577, 579, 581, 584, 585, 588, 591, 593, 594, 596, 597, 598, 599, 603, 609, 610, 614, 615, 625, 642, 644, 653], "avoided": [485, 579, 593, 596], "avoiding": [457, 526, 534, 549, 551, 584, 585, 594, 609, 642, 653], "avr": 584, "avx": [549, 609, 613], "avx1": 609, "avx2": 609, "avx512": [524, 549, 587], "avx512bw": 587, "avx512f": 587, "awakening": 511, "awar": [443, 444, 455, 456, 457, 459, 460, 501, 502, 509, 519, 521, 548, 549, 551, 563, 579, 581, 593, 598], "awareness": 509, "away": [448, 453, 459, 460, 502, 505, 509, 518, 543, 549, 552, 558, 577, 579, 581, 593, 594, 615, 647], "awkward": [501, 519], "ax": [457, 513, 549, 605, 614], "axis": [594, 613], "axpy": 502, "ayal": 585, "b": [440, 447, 448, 452, 456, 457, 459, 460, 464, 468, 473, 485, 486, 487, 494, 501, 505, 507, 508, 509, 511, 513, 516, 519, 521, 524, 530, 534, 535, 546, 547, 549, 560, 561, 562, 563, 574, 577, 579, 581, 583, 585, 593, 598, 603, 605, 609, 610, 613, 614, 615, 637, 638, 642, 648, 649, 653], "b0000": 440, "b1": [563, 603, 611, 613], "b128": [0, 1, 2, 3, 437], "b13e8756b13a00cf168300179061fb4b91fefbed": 551, "b16": [437, 439], "b16x2": [0, 3, 437], "b16x3": 437, "b16x4": 437, "b2": [549, 563, 611, 613], "b256": 437, "b32": [0, 1, 2, 3, 437, 439, 562], "b32x2": [0, 1, 2, 3], "b512": 437, "b64": [0, 1, 2, 3, 437, 439], "b64x2": [0, 1, 2, 3], "b96": 437, "b_ctor_bas": 460, "bach": 599, "back": [444, 451, 455, 457, 459, 468, 473, 494, 505, 509, 511, 516, 518, 519, 524, 529, 536, 538, 541, 542, 549, 551, 563, 576, 579, 581, 592, 593, 594, 596, 598, 602, 605, 609, 612, 619, 622, 638, 639, 640, 641, 642, 643, 644, 650, 651, 653], "backed": [536, 549, 591], "backedg": [448, 553, 577, 598, 640, 641, 651, 652], "backend": [444, 449, 451, 461, 466, 472, 485, 488, 500, 502, 503, 511, 512, 516, 517, 521, 529, 530, 531, 532, 537, 539, 544, 547, 549, 555, 579, 584, 591, 593, 596, 598, 612, 655], "background": [452, 456, 458, 556, 579, 581, 601, 617], "backing": [440, 535, 549, 563, 593], "backport": 541, "backslash": 551, "backtrac": [457, 644], "backtrace_symbol": 536, "backup": [535, 581], "backward": [447, 501, 545, 571, 579, 594, 598, 611, 613], "bad": [451, 461, 539, 549, 561, 579, 588, 593, 594, 599, 619, 641, 644, 652], "badarchivememb": 579, "badfileformat": 579, "badly": [516, 579], "bag": 517, "bai": 583, "bail": [549, 616], "bailing": 622, "bailouton": 579, "baked": [527, 563], "balanc": [442, 444, 509, 591], "ball": 558, "bam": 459, "ban": 590, "bandwidth": 549, "bang": 604, "bangoperator": 604, "bank": [438, 525, 530, 531, 532], "bank_mask": [0, 2, 3, 6, 7, 440], "bann": 579, "bar": [455, 456, 457, 459, 460, 464, 472, 474, 475, 485, 490, 496, 498, 501, 502, 505, 506, 513, 514, 540, 547, 549, 558, 562, 579, 581, 589, 593, 596, 598, 603, 604, 609, 611, 613, 614, 619, 621, 638, 640, 649, 651], "bar_in_b_cc": 449, "bar_map": 459, "baremetal": 540, "baremetalarm": 540, "barlist": 459, "barri": [444, 485, 540, 549, 594, 598], "barrier0": 549, "bart": 440, "bas": [13, 14, 48, 49, 111, 112, 135, 195, 196, 233, 234, 343, 344, 378, 379, 439, 440, 443, 447, 454, 457, 459, 464, 470, 473, 489, 490, 498, 501, 504, 509, 510, 513, 518, 519, 521, 525, 527, 546, 547, 549, 554, 559, 560, 564, 566, 579, 580, 581, 585, 587, 588, 591, 593, 594, 603, 604, 605, 608, 611, 614, 615, 616, 619, 622, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "base0": 607, "base1": 607, "base2": [549, 607], "base_offset": 598, "baseclass": 603, "baseclasslist": 604, "baseclasslistn": 604, "based": [437, 439, 440, 442, 443, 447, 449, 451, 453, 455, 456, 458, 460, 464, 465, 470, 471, 473, 475, 485, 487, 489, 490, 501, 505, 506, 509, 510, 511, 517, 521, 524, 527, 529, 534, 536, 538, 540, 541, 542, 544, 549, 550, 551, 554, 555, 559, 560, 561, 562, 563, 566, 578, 581, 582, 583, 585, 586, 587, 590, 591, 593, 594, 595, 598, 599, 601, 604, 605, 609, 612, 613, 614, 615, 619, 621, 622, 623, 624, 625, 639, 640, 641, 642, 644, 650, 651, 652, 653], "basedonaddress": 566, "basedonsegment": 566, "basedonsegmentaddress": 566, "basedonsegmentvalu": 566, "basedonself": 566, "basedontyp": 566, "basedonvalu": 566, "baseinstrinfo": 601, "baselai": 622, "baselin": [457, 542, 594, 607], "basemulticlasslist": 604, "basenam": [498, 565, 593], "basename_t": 464, "baseobject": 594, "baseopcod": [546, 614], "basereg": 457, "baseregisterinfo": 601, "basereloc": 493, "basety": 549, "basety1": 549, "basety2": 549, "basetyp": 549, "bash": [464, 479, 510, 595, 607], "bashful": 599, "basic": [444, 448, 450, 456, 457, 459, 465, 468, 470, 473, 476, 487, 501, 502, 505, 506, 508, 509, 511, 517, 518, 521, 523, 525, 527, 530, 534, 542, 550, 553, 556, 560, 562, 563, 566, 575, 580, 585, 589, 591, 593, 594, 595, 596, 598, 599, 602, 604, 607, 613, 617, 622, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654], "basic_": 603, "basic_block": 649, "basic_p": 603, "basic_r": 603, "basic_ss": 603, "basica": 615, "basicaliasanalys": [577, 615, 644], "basically": [457, 459, 501, 514, 519, 534, 544, 545, 577, 579, 593, 608, 637, 638, 639, 640, 641, 642, 648, 649, 650, 651, 652, 653], "basicblock": [459, 521, 560, 577, 584, 585, 615, 638, 639, 640, 641, 642, 643, 644, 651], "basicblocklisttyp": 579, "basicblockpass": 587, "basicblockutil": 579, "basicirlayermaterializationun": 622, "basictyp": 549, "batch": 523, "battl": [489, 582], "baz": [456, 459, 490, 498, 501, 579, 593, 604, 611, 613, 640, 651], "baz_in_c_cc": 449, "bb": [459, 525, 549, 550, 555, 561, 562, 579, 593, 594, 614, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "bb0_1": 562, "bb0_2": 562, "bb0_26": 562, "bb0_28": 562, "bb0_29": 562, "bb0_30": 562, "bb0_4": 562, "bb0_5": 562, "bb1": [447, 530, 549, 593, 594], "bb10": 594, "bb2": [447, 530, 549, 593], "bb3": 549, "bb4": 530, "bbpassmanag": 587, "bbreferent": 555, "bc": [443, 447, 451, 452, 457, 461, 465, 469, 477, 486, 499, 509, 514, 521, 523, 535, 544, 562, 564, 579, 586, 609, 615], "bcanalyz": [447, 463, 589], "bcc": 614, "bcpl": 604, "bcplcomment": 604, "bcread": 472, "bdce": 550, "be": [8, 11, 16, 32, 33, 34, 40, 41, 43, 44, 45, 46, 50, 52, 56, 57, 70, 76, 87, 88, 89, 90, 103, 106, 113, 124, 125, 126, 130, 131, 132, 133, 136, 150, 161, 175, 189, 190, 197, 217, 218, 219, 225, 226, 227, 228, 229, 230, 231, 235, 237, 253, 260, 272, 286, 288, 293, 298, 299, 300, 307, 317, 319, 320, 321, 323, 326, 332, 338, 346, 362, 363, 364, 370, 371, 372, 373, 374, 375, 376, 380, 382, 386, 387, 400, 407, 419, 420, 421, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "bear": 460, "beating": 534, "beautiful": [636, 638, 641, 647, 649, 652], "becaus": [438, 442, 443, 444, 446, 447, 449, 451, 453, 456, 457, 459, 460, 464, 468, 485, 486, 489, 501, 502, 505, 506, 508, 509, 511, 514, 515, 516, 517, 518, 519, 521, 523, 527, 529, 532, 536, 539, 541, 542, 543, 545, 546, 547, 549, 551, 552, 554, 555, 559, 560, 561, 564, 566, 569, 571, 577, 578, 579, 581, 583, 584, 589, 593, 594, 596, 599, 603, 604, 605, 608, 609, 610, 611, 613, 614, 615, 619, 622, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "becom": [440, 446, 456, 457, 459, 478, 485, 498, 501, 502, 505, 509, 516, 524, 526, 528, 530, 538, 543, 549, 553, 577, 579, 581, 584, 593, 594, 596, 598, 605, 609, 613, 614, 615, 616, 622, 637, 640, 642, 648, 651, 653], "becoming": [509, 519, 615], "been": [440, 441, 444, 446, 451, 452, 454, 455, 456, 457, 459, 460, 461, 464, 470, 485, 499, 501, 502, 504, 505, 507, 509, 511, 512, 513, 514, 516, 518, 519, 523, 525, 526, 527, 529, 530, 542, 549, 551, 554, 556, 561, 562, 563, 564, 566, 567, 570, 572, 574, 575, 577, 578, 579, 580, 581, 583, 584, 585, 587, 588, 589, 590, 591, 593, 594, 596, 598, 599, 600, 602, 603, 604, 605, 610, 611, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 654], "befor": [18, 19, 20, 21, 22, 25, 26, 27, 115, 116, 117, 118, 119, 199, 200, 201, 206, 207, 316, 348, 349, 350, 351, 352, 355, 356, 357, 438, 439, 440, 443, 444, 446, 451, 454, 455, 456, 457, 460, 464, 466, 468, 474, 485, 487, 489, 496, 498, 499, 501, 502, 504, 505, 509, 510, 511, 512, 514, 515, 516, 518, 519, 521, 523, 527, 528, 529, 530, 540, 541, 542, 543, 544, 547, 549, 553, 554, 555, 558, 560, 561, 562, 563, 564, 567, 577, 578, 579, 584, 585, 588, 589, 593, 594, 595, 596, 597, 598, 601, 603, 604, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 621, 622, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "began": [563, 581], "begin": [440, 443, 455, 459, 468, 485, 501, 509, 518, 521, 523, 530, 542, 549, 550, 554, 560, 565, 566, 567, 571, 579, 584, 593, 594, 604, 614, 618, 619, 621, 622, 640, 642, 643, 644, 648, 649, 650, 651, 652, 653], "beginassembly": 518, "beginn": [450, 504], "beginning": [440, 443, 447, 457, 459, 460, 476, 485, 509, 511, 516, 518, 543, 549, 561, 562, 571, 589, 591, 593, 596, 599, 609, 616, 640, 644, 651], "behalf": [504, 509, 578], "behav": [440, 443, 444, 452, 456, 473, 485, 488, 502, 505, 509, 511, 520, 549, 623], "behaved": [459, 515], "behaving": 544, "behavior": [440, 444, 450, 452, 456, 457, 458, 459, 460, 461, 464, 468, 476, 485, 501, 502, 505, 509, 511, 512, 514, 516, 518, 544, 549, 551, 563, 564, 577, 579, 587, 590, 591, 594, 611, 613, 614, 615, 637, 640, 642, 648, 651, 653], "behaviour": [446, 452, 501, 525, 530, 549, 555, 587, 609, 613], "behind": [457, 459, 460, 508, 509, 544, 545, 546, 549, 562, 579, 598, 612, 615, 621], "being": [40, 109, 193, 225, 341, 370, 438, 439, 440, 443, 444, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 468, 470, 476, 477, 479, 485, 494, 501, 502, 504, 505, 509, 511, 512, 515, 517, 519, 521, 528, 529, 538, 540, 542, 543, 544, 545, 547, 548, 549, 551, 553, 554, 560, 561, 562, 564, 567, 569, 571, 575, 577, 578, 579, 581, 584, 587, 590, 591, 593, 594, 596, 598, 599, 601, 602, 603, 604, 605, 609, 610, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 637, 638, 640, 641, 642, 644, 645, 649, 651, 652, 653, 654], "belevich": 502, "belief": 458, "believ": [458, 509, 549, 564, 579, 590, 639, 640, 641, 650, 651, 652], "believed": 594, "bellow": 508, "belong": [501, 505, 508, 511, 513, 549, 561, 579, 591, 618, 642], "belonging": [440, 505, 579, 611], "below": [40, 46, 103, 130, 133, 189, 225, 226, 231, 286, 370, 371, 376, 435, 436, 438, 439, 442, 443, 444, 447, 449, 455, 456, 457, 459, 460, 465, 468, 480, 485, 490, 494, 498, 501, 502, 504, 505, 506, 509, 516, 521, 523, 528, 530, 536, 538, 539, 541, 542, 543, 547, 548, 549, 555, 560, 561, 562, 564, 567, 572, 577, 578, 579, 580, 581, 583, 585, 588, 591, 592, 593, 594, 596, 598, 601, 609, 611, 613, 614, 615, 616, 617, 618, 619, 622, 637, 639, 640, 641, 642, 643, 644, 648, 650, 652, 653], "benchmark": [445, 455, 463, 502, 509, 520, 542, 579, 580, 586, 588, 593, 594, 607, 608, 609, 613], "benchmarked": 479, "benchmarking": [521, 588, 609], "benchspec": 608, "bendersky": 502, "beneath": 595, "benef": [443, 453, 519, 524, 539, 549, 551, 577, 580, 584, 591, 593, 622, 639, 643], "beneficial": [453, 505, 526, 532, 549, 610, 613], "benefit": [453, 459, 516, 518, 529, 587, 623, 624], "benign": 579, "benjamin": 518, "berkeley": 494, "bernstein": 593, "besid": [501, 520, 549, 581, 590, 594, 609, 614, 641, 648, 652], "bespok": 518, "best": [443, 446, 453, 456, 457, 459, 466, 485, 509, 511, 514, 518, 532, 539, 544, 549, 558, 577, 579, 585, 591, 593, 594, 595, 596, 598, 612, 636, 637, 646, 648, 654], "bet": [444, 450, 457, 459, 460, 462, 479, 485, 507, 509, 511, 520, 524, 525, 530, 534, 536, 538, 539, 544, 549, 550, 551, 558, 559, 560, 561, 563, 577, 579, 581, 587, 593, 594, 608, 613, 615, 616, 617, 621, 637, 640, 642, 645, 648, 651, 653, 654], "bettor": 563, "between": [438, 440, 442, 443, 444, 446, 447, 456, 457, 459, 460, 465, 474, 476, 484, 485, 489, 490, 493, 501, 505, 506, 508, 509, 510, 511, 512, 514, 518, 521, 524, 525, 530, 540, 542, 546, 547, 549, 550, 551, 554, 555, 557, 560, 561, 562, 563, 565, 567, 570, 574, 577, 578, 581, 584, 587, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 607, 609, 610, 612, 614, 616, 618, 619, 636, 639, 640, 647, 650, 651], "bewar": [518, 558], "beyl": 584, "beylsdistinguish": 584, "beyond": [440, 456, 457, 500, 511, 516, 519, 528, 530, 549, 556, 557, 560, 563, 579, 594, 595, 605], "bf": 583, "bfd": [517, 535], "bfdnam": 487, "bff": 579, "bfi": 549, "bh": 605, "bi": 445, "bicubic": 583, "bidirectional": 579, "big": [445, 453, 457, 459, 466, 509, 516, 529, 538, 549, 579, 583, 588, 609, 612, 614, 618, 638, 641, 642, 649, 652, 653], "bigblock": 466, "bigg": [459, 505, 619], "biggest": [457, 547], "bigmip": 487, "bigmsf": 571, "bikeshed": 543, "bilinear": 583, "bin": [442, 461, 473, 479, 501, 510, 517, 521, 523, 530, 535, 538, 539, 540, 541, 580, 581, 588, 605, 607, 609, 614, 617], "binar": [453, 454, 455, 463, 472, 473, 494, 502, 504, 509, 510, 513, 521, 535, 539, 540, 541, 542, 551, 559, 562, 587, 588, 591, 593, 616, 618, 645, 654], "binary": [440, 444, 447, 449, 451, 453, 454, 455, 457, 468, 469, 473, 477, 480, 482, 483, 488, 489, 490, 494, 498, 499, 501, 502, 503, 504, 506, 509, 510, 513, 517, 518, 521, 523, 535, 536, 540, 541, 551, 554, 561, 562, 567, 570, 574, 576, 577, 579, 588, 591, 593, 594, 601, 603, 614, 616, 617, 618, 638, 639, 640, 642, 643, 644, 645, 646, 647, 649, 650, 651, 653, 654, 656], "binary128": 549, "binary16": 549, "binary32": 549, "binary64": 549, "binary_nam": 498, "binary_precedent": [652, 653], "binaryexprast": [637, 638, 639, 640, 641, 642, 643, 644], "binaryoperator": [459, 579], "binaryprecedent": [641, 642, 643, 644], "bind": [459, 472, 488, 530, 549, 563, 603, 604, 614, 619, 625, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "bindex": 614, "binding": [455, 487, 488, 514, 549, 586, 603, 604, 614, 625, 642, 643, 644, 650, 651, 652, 653], "binfmt": 521, "binfmt_misc": 521, "bininteg": 604, "binloc": 644, "binop": [439, 549, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "binop_precedent": [648, 649, 650, 651, 652, 653], "binopprecedent": [637, 638, 639, 640, 641, 642, 643, 644], "binopprototyp": [652, 653], "binoprh": [637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "binpath": 507, "binutil": [455, 503, 510, 521, 535, 537, 541], "bisect": [579, 581, 586], "bisect_script": 581, "bison": 608, "bit": [10, 13, 14, 16, 17, 21, 22, 24, 33, 34, 35, 37, 40, 41, 42, 46, 48, 49, 52, 56, 57, 76, 88, 89, 103, 106, 108, 111, 112, 113, 114, 118, 119, 125, 126, 130, 131, 133, 135, 161, 189, 192, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 209, 213, 214, 215, 216, 218, 219, 220, 222, 225, 226, 227, 231, 237, 260, 286, 287, 292, 297, 317, 318, 326, 332, 340, 343, 344, 346, 347, 351, 352, 354, 363, 364, 365, 367, 370, 371, 372, 376, 378, 379, 382, 386, 387, 407, 420, 421, 435, 437, 438, 439, 440, 442, 444, 446, 449, 455, 456, 457, 460, 470, 479, 502, 503, 505, 506, 509, 511, 512, 513, 514, 517, 518, 519, 521, 523, 524, 525, 526, 529, 534, 537, 543, 545, 547, 550, 551, 555, 559, 561, 562, 563, 566, 567, 571, 572, 574, 587, 588, 591, 593, 594, 596, 598, 601, 603, 604, 605, 611, 614, 615, 618, 619, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "bitbucket": [581, 583], "bitcast": [443, 446, 460, 505, 511, 518, 524, 525, 561, 577, 611, 614], "bitcastability": 561, "bitcasted": [549, 561], "bitcasting": [519, 549], "bitcod": [451, 453, 457, 461, 463, 465, 468, 469, 472, 476, 477, 480, 481, 499, 509, 512, 521, 523, 535, 544, 549, 561, 562, 577, 579, 586, 607, 615], "bitcoderead": 512, "bitcodewrit": [512, 579], "bitconverted": 446, "bitfield": [444, 566, 567, 571, 618], "bitless": 574, "bitmap": 447, "bitmask": [438, 549, 566, 574], "bitmask_perm": 438, "bitness": 574, "bitpacked": 609, "bitpattern": 549, "bitread": 548, "bits_0_7": 525, "bits_16_23": 525, "bits_24_31": 525, "bits_8_15": 525, "bitset": [551, 611, 614, 619], "bitsetcas": 619, "bitstreamwrit": 512, "bitwidth": [447, 525, 549, 561, 598], "bitwis": [439, 457, 577], "bjark": 502, "bjarn": 579, "bl": [460, 513, 605], "black": [530, 616], "blah": [459, 501, 551], "blam": [578, 581], "blaming": 458, "blank": [459, 460, 468, 475, 490, 509, 556, 578, 595, 637, 645, 646, 647, 648, 654], "blanket": 563, "blarg": 579, "blat": 642, "blatent": 653, "bleed": 456, "bleeding": 520, "blend": 457, "blgp": 7, "blind": 457, "blissfully": [501, 502], "bloat": 536, "bloating": 459, "blob": [447, 496, 549, 581, 588, 589, 594], "block": [440, 443, 449, 450, 452, 456, 457, 466, 470, 471, 473, 476, 478, 488, 489, 490, 505, 508, 509, 511, 516, 518, 525, 526, 527, 530, 534, 542, 547, 550, 551, 553, 556, 560, 561, 562, 569, 570, 575, 584, 585, 586, 587, 588, 589, 592, 593, 594, 596, 601, 603, 611, 613, 614, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "block_begin": [649, 650, 651, 652, 653], "block_parent": [651, 652, 653], "blockaddress": [525, 549], "blockcodesiz": 589, "blockdim": 562, "blocked": 563, "blocker": 542, "blockextractor": 530, "blockfrequencyinfo": [448, 586], "blockid": [447, 589], "blockidx": 562, "blockinfo_block": 589, "blocking": [542, 588], "blocklen": 447, "blocklen_32": 447, "blockmapaddr": 571, "blocknam": 447, "blockscalartrait": 619, "blocksiz": [562, 571], "blocksizex": 562, "blocksizey": 562, "blog": [581, 594], "blogspot": 594, "bloom": 457, "blow": 551, "blr": 513, "blunt": 617, "blx": 513, "bmi2": 594, "bnextind": 549, "bo": 459, "board": [538, 541, 590], "boat": [459, 584], "bob": 619, "bod": [447, 508, 511, 561, 563, 579, 615, 617, 637, 638, 639, 648, 649, 650], "body": [447, 451, 459, 460, 501, 505, 509, 511, 549, 551, 555, 561, 563, 577, 579, 584, 592, 593, 594, 598, 603, 604, 605, 614, 615, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "body_val": 653, "bodyexpr": [640, 641, 642, 643, 644, 653], "bodyitem": 604, "bodylist": 604, "bodysequent": 618, "bodyval": [642, 643, 644], "boehm": 518, "bogn": 533, "bogus": [615, 643], "boil": [446, 501, 509, 543, 579, 581, 640, 641, 651, 652], "boilerplat": [501, 518, 543, 601, 650], "bold": [556, 595], "bon": [596, 614, 621], "bonair": 440, "bondhugul": 583, "book": [459, 503, 504, 550, 579, 615], "bookkeeping": [577, 579], "bool": [443, 444, 453, 455, 457, 459, 485, 501, 505, 512, 527, 528, 543, 549, 551, 561, 564, 579, 589, 593, 614, 615, 616, 617, 619, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "boolean": [440, 447, 455, 457, 459, 465, 505, 548, 549, 574, 577, 579, 601, 603, 609, 614, 640, 651], "boolean128": 574, "boolean16": 574, "boolean32": 574, "boolean64": 574, "boolean8": 574, "boolean_property_nam": 548, "boolordefault": 501, "booltmp": [638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "boost": 445, "bootstrap": [453, 521], "bootstrap_": [442, 453, 510], "bootstrapping": 442, "boring": [460, 615], "boringssl": 551, "bork": [501, 603], "borrow": 579, "borrowed": 549, "bot": [442, 509, 520, 521, 581], "both": [8, 106, 190, 307, 338, 436, 438, 439, 440, 441, 442, 443, 444, 447, 449, 451, 453, 455, 456, 457, 458, 459, 460, 464, 468, 473, 481, 483, 485, 486, 489, 490, 501, 502, 503, 506, 508, 509, 511, 514, 516, 517, 518, 519, 524, 525, 529, 532, 534, 536, 540, 541, 542, 543, 549, 551, 553, 554, 559, 561, 563, 567, 571, 572, 576, 577, 579, 584, 585, 587, 590, 591, 592, 593, 594, 596, 598, 601, 603, 604, 605, 609, 610, 613, 614, 615, 616, 617, 619, 621, 622, 637, 638, 639, 640, 642, 644, 645, 646, 648, 649, 650, 651, 653, 654], "botsalgn": 583, "botsspar": 583, "bottom": [448, 466, 501, 527, 529, 549, 550, 577, 578, 599, 613, 614, 615, 622, 651], "bou_fals": 501, "bou_tru": 501, "bou_unset": 501, "bougach": 533, "bound": [439, 509, 529, 547, 549, 555, 562, 579, 594, 597, 598, 603, 614, 619], "bound_ctrl": [0, 2, 3, 6, 7, 440], "boundar": [444, 446, 454, 457, 505, 549, 594, 639], "boundary": [446, 447, 457, 536, 549, 577, 579], "bounded": 485, "bourn": [501, 521], "box": [457, 509, 530, 578, 587, 593, 594, 616], "bp": [596, 605], "bpf": [457, 521, 551, 584], "bpf_add": 457, "bpf_alu": 457, "bpf_alu64": 457, "bpf_and": 457, "bpf_arsh": 457, "bpf_b": 457, "bpf_call": 457, "bpf_class": 457, "bpf_div": 457, "bpf_dw": 457, "bpf_end": 457, "bpf_ex": 457, "bpf_h": 457, "bpf_imm": 457, "bpf_ja": 457, "bpf_jeq": 457, "bpf_jge": 457, "bpf_jgt": 457, "bpf_jmp": 457, "bpf_jne": 457, "bpf_jset": 457, "bpf_jsge": 457, "bpf_jsgt": 457, "bpf_k": 457, "bpf_ld": 457, "bpf_ldx": 457, "bpf_lsh": 457, "bpf_mem": 457, "bpf_mod": 457, "bpf_mov": 457, "bpf_mul": 457, "bpf_neg": 457, "bpf_op": 457, "bpf_or": 457, "bpf_rsh": 457, "bpf_st": 457, "bpf_stx": 457, "bpf_sub": 457, "bpf_w": 457, "bpf_x": 457, "bpf_xadd": 457, "bpf_xor": 457, "bpl": 605, "bptr": 549, "br": [447, 448, 505, 511, 514, 515, 530, 560, 562, 593, 610, 640, 641, 642, 643, 644, 651, 653], "bra": 562, "brac": [459, 460, 511, 549, 579, 603, 604, 609], "brach": 581, "bracket": [460, 502, 509, 548, 549, 555, 593, 619], "bracketed": 511, "bradbury": 584, "bradburyconcern": 584, "bradburytransit": 584, "brain": 459, "branch": [41, 131, 227, 372, 439, 454, 455, 457, 459, 473, 485, 503, 505, 509, 510, 511, 514, 515, 516, 521, 525, 549, 553, 555, 564, 578, 579, 584, 585, 586, 587, 594, 598, 611, 640, 641, 642, 643, 644, 651, 652, 653], "branch_weight": [448, 449], "branched": [454, 509, 553, 581], "branchfold": 614, "branchfolding": 614, "branchfunnel": 549, "branching": [448, 542, 549, 614], "branchless": 594, "brand": 615, "brav": [637, 648], "breadth": [466, 583, 646, 647], "breagen": 583, "break": [446, 449, 459, 501, 509, 511, 512, 518, 537, 542, 545, 549, 553, 576, 579, 582, 593, 594, 598, 613, 614, 615, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 651, 652], "breakag": [509, 581], "breakcriticaledg": 615, "breakdown": 450, "breaking": [455, 457, 509, 513, 557, 644], "breakpoint": [440, 451, 507, 549, 644, 646], "brendan": 617, "brevity": [446, 562, 563], "brewed": 579, "brian": 585, "brick": 561, "brief": [443, 455, 456, 459, 489, 501, 521, 544, 561], "briefly": [506, 539, 561, 615], "brig": 440, "bring": [516, 518, 531, 551, 579, 589, 598, 621, 645, 654], "broad": [501, 509, 518, 579, 582, 594, 639, 647, 650], "broadcast": [438, 457, 549, 550], "broadcasted": 438, "broadly": 529, "brok": 549, "broken": [446, 464, 487, 497, 502, 509, 514, 537, 549, 579, 581, 584, 594, 598, 603, 609, 614, 615, 620], "brought": [561, 581], "brows": [517, 539, 578, 617], "browsabl": 455, "browsing": [455, 581, 638, 649], "brtarget": 614, "brtarget8": 614, "bruc": 579, "bruno": 584, "bsd": [468, 486, 509, 521], "bss": [440, 466, 486, 494, 496, 513], "bswap": 512, "bswap32r_bswap64r_movsx64rr32": 479, "bt": 507, "bt331": 583, "btver2": 485, "bucket": [484, 489, 492, 493, 569, 572, 574, 579, 591, 593], "bucket_count": 593, "buf": 589, "buff": [14, 28, 29, 30, 31, 32, 54, 55, 112, 121, 122, 123, 124, 139, 140, 196, 202, 203, 204, 205, 210, 211, 212, 213, 214, 215, 216, 217, 239, 240, 325, 344, 358, 359, 360, 361, 362, 384, 385, 440, 454, 479, 485, 505, 511, 549, 552, 567, 572, 574, 579, 593, 601, 618, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "buffer": [76, 161, 260, 407, 549, 579, 616, 618], "buffer_atomic_add": [0, 1, 2, 3], "buffer_atomic_add_f32": 7, "buffer_atomic_add_x2": [0, 1, 2, 3], "buffer_atomic_and": [0, 1, 2, 3], "buffer_atomic_and_x2": [0, 1, 2, 3], "buffer_atomic_cmpswap": [0, 1, 2, 3], "buffer_atomic_cmpswap_x2": [0, 1, 2, 3], "buffer_atomic_dec": [0, 1, 2, 3], "buffer_atomic_dec_x2": [0, 1, 2, 3], "buffer_atomic_inc": [0, 1, 2, 3, 440], "buffer_atomic_inc_x2": [0, 1, 2, 3], "buffer_atomic_or": [0, 1, 2, 3], "buffer_atomic_or_x2": [0, 1, 2, 3], "buffer_atomic_pk_add_f16": 7, "buffer_atomic_smax": [0, 1, 2, 3], "buffer_atomic_smax_x2": [0, 1, 2, 3], "buffer_atomic_smin": [0, 1, 2, 3], "buffer_atomic_smin_x2": [0, 1, 2, 3], "buffer_atomic_sub": [0, 1, 2, 3], "buffer_atomic_sub_x2": [0, 1, 2, 3], "buffer_atomic_swap": [0, 1, 2, 3], "buffer_atomic_swap_x2": [0, 1, 2, 3], "buffer_atomic_umax": [0, 1, 2, 3], "buffer_atomic_umax_x2": [0, 1, 2, 3], "buffer_atomic_umin": [0, 1, 2, 3], "buffer_atomic_umin_x2": [0, 1, 2, 3], "buffer_atomic_xor": [0, 1, 2, 3], "buffer_atomic_xor_x2": [0, 1, 2, 3], "buffer_gl": 440, "buffer_gl0_inv": [0, 440], "buffer_gl1_inv": [0, 440], "buffer_load": 440, "buffer_load_dword": [0, 1, 2, 3, 440], "buffer_load_dwordx2": [0, 1, 2, 3], "buffer_load_dwordx3": [0, 1, 2, 3], "buffer_load_dwordx4": [0, 1, 2, 3], "buffer_load_format_d16_hi_x": 3, "buffer_load_format_d16_x": [0, 2, 3], "buffer_load_format_d16_xy": [0, 2, 3], "buffer_load_format_d16_xyz": [0, 2, 3], "buffer_load_format_d16_xyzw": [0, 2, 3], "buffer_load_format_x": [0, 1, 2, 3], "buffer_load_format_xy": [0, 1, 2, 3], "buffer_load_format_xyz": [0, 1, 2, 3], "buffer_load_format_xyzw": [0, 1, 2, 3], "buffer_load_sbyt": [0, 1, 2, 3], "buffer_load_sbyte_d16": [0, 3], "buffer_load_sbyte_d16_h": [0, 3], "buffer_load_short_d16": [0, 3], "buffer_load_short_d16_h": [0, 3], "buffer_load_sshort": [0, 1, 2, 3], "buffer_load_ubyt": [0, 1, 2, 3], "buffer_load_ubyte_d16": [0, 3], "buffer_load_ubyte_d16_h": [0, 3], "buffer_load_ushort": [0, 1, 2, 3], "buffer_siz": 618, "buffer_store_byt": [0, 1, 2, 3], "buffer_store_byte_d16_h": [0, 3], "buffer_store_dword": [0, 1, 2, 3], "buffer_store_dwordx2": [0, 1, 2, 3], "buffer_store_dwordx3": [0, 1, 2, 3], "buffer_store_dwordx4": [0, 1, 2, 3, 437, 440], "buffer_store_format_d16_hi_x": 3, "buffer_store_format_d16_x": [0, 2, 3], "buffer_store_format_d16_xy": [0, 2, 3], "buffer_store_format_d16_xyz": [0, 2, 3], "buffer_store_format_d16_xyzw": [0, 2, 3], "buffer_store_format_x": [0, 1, 2, 3], "buffer_store_format_xy": [0, 1, 2, 3, 440], "buffer_store_format_xyz": [0, 1, 2, 3], "buffer_store_format_xyzw": [0, 1, 2, 3], "buffer_store_lds_dword": [2, 3], "buffer_store_short": [0, 1, 2, 3], "buffer_store_short_d16_h": [0, 3], "buffer_wbinvl1": [1, 2, 3, 440], "buffer_wbinvl1_vol": [1, 2, 3, 440], "buffered": 485, "bug": [439, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 480, 485, 509, 516, 520, 521, 530, 536, 541, 542, 549, 550, 551, 555, 559, 561, 577, 578, 579, 581, 582, 584, 586, 587, 597, 603, 604, 605, 609, 638, 642, 645, 649, 653, 654], "buggy": 544, "buggy_cod": 536, "bugpoint": [452, 463, 480, 509, 520, 521, 544, 564, 586, 615], "bugzill": [450, 509, 517, 520, 542, 551, 581, 588, 598, 609], "buid": 505, "build": [441, 443, 447, 453, 455, 456, 457, 459, 462, 463, 464, 468, 472, 473, 479, 487, 499, 501, 502, 504, 507, 508, 509, 511, 514, 518, 520, 521, 523, 530, 536, 541, 545, 549, 552, 563, 564, 567, 576, 577, 579, 580, 581, 585, 588, 591, 593, 594, 601, 602, 603, 605, 607, 608, 609, 611, 614, 617, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "build_add": [649, 650, 651, 652, 653], "build_alloc": 653, "build_arch": 580, "build_br": [651, 652, 653], "build_call": [649, 650, 651, 652, 653], "build_cond_br": [651, 652, 653], "build_config": 523, "build_d": 581, "build_docker_imag": 510, "build_fadd": 649, "build_fcmp": [649, 650, 651, 652, 653], "build_fmul": 649, "build_for_websit": 542, "build_fsub": 649, "build_load": 653, "build_mod": 523, "build_mul": [649, 650, 651, 652, 653], "build_ph": [651, 652, 653], "build_ret": [649, 650, 651, 652, 653], "build_shared_lib": [453, 455], "build_stor": 653, "build_sub": [649, 650, 651, 652, 653], "build_uitofp": [649, 650, 651, 652, 653], "buildattribut": 540, "buildbot": [464, 509, 517, 520, 542, 581, 582, 609], "buildd": 537, "builder": [537, 582], "builder_at": 653, "building": [442, 456, 457, 459, 504, 505, 508, 509, 518, 523, 535, 536, 542, 548, 549, 551, 560, 563, 585, 587, 601, 603, 605, 607, 608, 609, 612, 616, 640, 641, 642, 643, 644, 645, 646, 651, 652, 653, 654], "buildm": 457, "buildmast": 537, "buildmod": 609, "buildmodul": 621, "buildnumb": 567, "buildslav": 537, "buildtool": 548, "built": [442, 447, 453, 455, 471, 472, 473, 475, 489, 498, 501, 502, 504, 509, 510, 511, 516, 517, 519, 521, 523, 529, 534, 535, 537, 539, 540, 541, 542, 543, 548, 549, 550, 551, 560, 567, 574, 575, 577, 579, 580, 581, 582, 585, 587, 591, 593, 594, 601, 605, 608, 609, 614, 617, 618, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "builtin": [444, 447, 464, 471, 549, 562, 579, 581, 612, 615, 641, 642, 643, 644, 648, 652, 653], "bulk": [457, 509, 559, 579, 642, 653], "bulky": 440, "bullet": 543, "bump": [518, 579, 592], "bunch": [442, 456, 514, 579, 608, 639, 641, 647, 650, 652], "bundl": [462, 478, 505, 555], "bundled": 457, "bundling": 457, "bunzip2": 521, "bur": 550, "burden": [509, 549, 560, 594], "burg": 550, "burk": 583, "burning": 538, "burr": 466, "busiest": 578, "busy": 509, "but": [21, 22, 52, 109, 118, 119, 135, 193, 206, 207, 237, 341, 351, 352, 382, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464, 466, 470, 472, 473, 475, 478, 479, 481, 484, 485, 487, 488, 489, 497, 498, 499, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 523, 524, 525, 526, 527, 528, 529, 530, 534, 535, 538, 539, 541, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 571, 572, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 590, 591, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "button": 578, "buy": 538, "bw": 513, "bwav": 583, "bwaves_": 583, "bwaves_r": 583, "bx": 605, "by": [8, 15, 18, 19, 20, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 46, 55, 86, 88, 106, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 140, 174, 190, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 221, 222, 225, 227, 231, 240, 271, 287, 292, 297, 304, 307, 316, 317, 318, 331, 332, 338, 345, 348, 349, 350, 353, 354, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 372, 376, 418, 420, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 493, 496, 497, 498, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 574, 575, 576, 578, 579, 580, 581, 582, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655], "by_valu": 440, "byarg": 549, "byp": 549, "bypass": [438, 440, 594, 624, 625], "bypassed": 594, "bypassing": 502, "byproduct": 529, "byt": [47, 48, 49, 134, 135, 232, 233, 234, 322, 377, 378, 379, 438, 439, 440, 443, 444, 446, 447, 457, 470, 484, 485, 488, 492, 493, 496, 505, 506, 512, 513, 519, 525, 529, 536, 549, 551, 555, 559, 565, 566, 567, 569, 570, 571, 572, 574, 575, 579, 589, 591, 592, 593, 596, 598, 611, 614, 618, 648, 649, 650, 651, 652, 653], "byte_0": [438, 440], "byte_1": [438, 440], "byte_2": [438, 440], "byte_3": 438, "bytearray": 549, "bytecod": [447, 454], "byteswap": 512, "byval": [447, 457, 549], "byvalu": 440, "bz2": 521, "bzip2": 521, "c1": 611, "c11": [444, 502, 567, 570, 593], "c11bytesiz": [567, 570], "c11lineinfo": 570, "c11siz": 570, "c13": [489, 567, 570], "c13bytesiz": [567, 570], "c13lineinfo": 570, "c13siz": 570, "c17": 582, "c1_1": 490, "c1_2": 490, "c1_n": 490, "c1_u_": 490, "c1_u_1": 490, "c1x": 549, "c2": [611, 648, 649, 650, 651, 652, 653], "c2_1": 490, "c2_2": 490, "c2_n": 490, "c2_u_": 490, "c2_u_2": 490, "c2_v_1": 490, "c2_v_2": 490, "c2_v_i": 490, "c2_v_t": 490, "c5": 485, "c89": 459, "c99": 549, "c_ctor_bas": 460, "c_str": [501, 562, 579, 636, 637, 638, 639, 640, 641, 642, 643, 644], "cach": [438, 440, 442, 444, 453, 456, 457, 485, 538, 549, 554, 563, 579, 591, 593, 594, 596, 607, 615, 644], "cached": [455, 456, 554, 563], "cachefil": 607, "caching": [440, 443, 456, 526, 549, 577], "cactubssn": 583, "cactubssn_r": 583, "caf": 558, "caicos": 440, "calcul": [130, 440, 443, 448, 457, 519, 549, 593], "calculat": [440, 443, 457, 463, 511, 525, 549, 577, 579, 609, 614, 640, 651], "calculated": [473, 485, 550, 579, 593, 615], "calculating": [448, 549, 579, 615], "call": [440, 442, 444, 446, 449, 451, 454, 456, 460, 464, 466, 470, 490, 498, 501, 502, 503, 505, 507, 511, 512, 515, 516, 518, 521, 525, 529, 531, 545, 550, 551, 552, 553, 554, 555, 557, 560, 561, 562, 563, 564, 572, 576, 582, 585, 587, 592, 593, 594, 596, 597, 598, 599, 603, 609, 611, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "call2": 460, "call32m": 603, "call32r": 603, "call64pcrel32": 555, "call_branch_weight": 449, "call_convent": 440, "call_site_num": 511, "callabl": [459, 549, 562, 638, 649], "callahan": 585, "callback": [443, 457, 501, 505, 518, 551, 579, 587, 596, 614, 621, 623, 625, 655], "callbackvh": 579, "callcount": 579, "calle": [446, 457, 502, 514, 551, 561, 577, 587, 594, 596, 598, 603, 611, 614, 615, 637, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "called": [440, 442, 443, 444, 446, 448, 449, 451, 453, 456, 457, 473, 487, 501, 502, 505, 506, 508, 510, 511, 514, 518, 520, 521, 530, 539, 547, 548, 549, 551, 554, 559, 560, 561, 562, 563, 566, 572, 577, 578, 579, 580, 581, 591, 592, 593, 594, 598, 599, 603, 604, 608, 614, 615, 619, 621, 622, 623, 636, 637, 639, 643, 644, 647, 648, 650], "calledcount": 451, "calleef": [638, 639, 640, 641, 642, 643, 644], "caller": [549, 561, 579, 594, 615, 641, 652], "caller_pc": 551, "callexprast": [637, 638, 639, 640, 641, 642, 643, 644], "callgraph": [492, 493], "callgraphscc": [564, 615], "callgraphsccpass": 564, "calling": [440, 444, 447, 455, 456, 459, 501, 503, 505, 511, 516, 526, 554, 557, 561, 562, 563, 564, 572, 579, 587, 593, 594, 596, 598, 601, 615, 616, 619, 622, 625, 636, 637, 638, 639, 640, 644, 648, 649, 650, 651], "callingconv": [447, 614], "callinst": 579, "calllowering": [526, 531], "callloweringinfo": 617, "callon": 579, "callpcrel32": 603, "callq": [592, 594, 596, 598], "callseq_end": 598, "callseq_start": 598, "callsit": [449, 549, 555, 594, 596, 598], "calltmp": [638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "calltmp1": [638, 640, 649, 651], "calltmp2": [639, 650], "calltmp6": [642, 653], "calltwo": 579, "callvoidvoid": 625, "calm": [642, 653], "cam": [442, 486, 511, 558, 594, 640, 645, 651, 654], "cam4_": 583, "cam4_r": 583, "camel": [459, 584], "camelback": 584, "camelcas": 584, "caml": [647, 648], "camlp4": [647, 648], "camlp4of": [648, 649, 650, 651, 652, 653], "can": [437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 487, 488, 489, 490, 491, 495, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 571, 572, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "canadian": 521, "canal": 110, "canar": 536, "canary": 549, "cancel": 511, "canconstantfoldcallto": 512, "candidat": [450, 509, 510, 515, 549, 555, 585, 588], "canfoldasload": 605, "canlosslesslybitcastto": 561, "cannot": [32, 124, 217, 362, 436, 438, 439, 440, 443, 444, 446, 449, 450, 451, 455, 456, 457, 458, 459, 460, 461, 468, 473, 474, 485, 490, 497, 498, 501, 502, 505, 509, 511, 513, 518, 519, 523, 525, 527, 540, 547, 549, 554, 571, 572, 577, 578, 579, 581, 582, 584, 590, 593, 594, 599, 607, 610, 613, 614, 615, 621, 638, 645, 654], "canonical": [446, 511, 516, 549, 577, 579, 581, 593, 594, 612, 624, 625], "canonicalised": 446, "canonicaliz": [457, 460, 525, 579, 615], "canonicalized": [457, 460, 577], "canonically": 581, "canreserveresourc": 457, "cantfail": [621, 622, 623, 624, 625, 639, 640, 641, 642], "capabilit": [443, 501, 503, 521, 536, 559, 579, 587, 614, 639, 645, 650, 654], "capability": [457, 502, 512, 549, 552, 562, 615, 638, 641, 649, 652], "capabl": [443, 457, 501, 508, 521, 536, 559, 560, 572, 579, 593, 601, 615, 642, 645, 653, 654], "capacity": [569, 579], "capital": 584, "capitaliz": [459, 509], "capston": 551, "captur": [447, 451, 457, 460, 501, 512, 527, 549, 584, 585, 593, 594, 609, 614, 616, 618, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654], "captured": [453, 460, 501, 549, 596], "capturing": [549, 584, 640, 651], "car": [443, 444, 457, 459, 460, 502, 517, 521, 536, 542, 549, 555, 557, 560, 579, 581, 593, 599, 603, 605, 608, 614, 615, 642, 645, 653, 654], "card": [538, 598], "careful": [440, 441, 458, 549, 551, 560, 579, 594], "carefully": [509, 516, 518, 549, 593, 642, 653], "careless": 459, "caret": [473, 549], "carr": [519, 549, 579], "carried": [485, 508, 549, 610], "carrizo": 440, "carruth": [584, 594], "carruthacronym": 584, "carruthcamelback": 584, "carruthdistinguish": 584, "carruthfunct": 584, "carruthinconsistent": 584, "carruthlow": 584, "carry": [525, 528, 549, 557], "carrying": 549, "cas": [436, 438, 439, 440, 441, 443, 444, 446, 447, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 463, 464, 468, 472, 474, 478, 480, 485, 486, 487, 499, 501, 502, 504, 505, 506, 510, 511, 512, 514, 515, 516, 518, 519, 521, 525, 534, 538, 539, 540, 541, 543, 544, 546, 547, 549, 551, 552, 554, 555, 556, 557, 559, 560, 561, 564, 566, 567, 572, 574, 577, 579, 580, 581, 583, 584, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 601, 603, 604, 608, 609, 610, 611, 613, 614, 615, 619, 621, 622, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "case_branch_weight": 449, "cassert": [459, 562, 624, 625, 639, 640, 641, 642, 643], "cast": [446, 454, 459, 525, 549, 563, 585, 593, 598, 603, 604, 605, 611, 639, 640, 641, 642, 644, 645, 650, 654], "cast210": [526, 549], "cast_or_null": 579, "casted": [519, 561], "casting": [501, 543, 549, 579, 603], "castinst": 579, "casual": 509, "cat": [474, 496, 498, 501, 518, 521, 536, 551, 601, 609], "catagoriz": 577, "catapult": 616, "catastrophic": 594, "catch": [501, 507, 519, 536, 540, 549, 550, 579, 587, 594, 638, 639, 649, 650], "catch3": 511, "catching": 509, "catchpad": 511, "catchret": 511, "catchswitch": 511, "categor": [478, 498, 549, 577, 579, 593, 601, 609, 618], "categoriz": [577, 601, 614], "categorized": 501, "category": [459, 489, 501, 544, 549, 566, 579, 593, 614], "caught": [459, 511, 536, 549], "caus": [440, 443, 444, 446, 450, 451, 452, 457, 459, 460, 462, 464, 466, 470, 473, 476, 481, 490, 499, 501, 509, 512, 513, 514, 518, 521, 527, 528, 529, 530, 535, 536, 539, 540, 544, 549, 551, 554, 564, 577, 579, 580, 581, 587, 591, 593, 594, 597, 598, 599, 609, 611, 613, 615, 619, 637, 638, 640, 641, 642, 644, 648, 653], "caused": [455, 461, 485, 509, 544, 613], "causing": [451, 460, 487, 536, 549, 564, 579], "caution": [444, 598], "cautious": 553, "caveat": [452, 502, 644], "cayman": 440, "cb": 494, "cbe": 544, "cbpf": 457, "cbsz": 7, "cbtw": 457, "cbw": 457, "cc": [440, 457, 498, 504, 521, 535, 541, 542, 549, 551, 578, 588, 591, 601, 617, 649, 650, 651, 652, 653], "cc1": 507, "cc_sparc32": 614, "ccach": 455, "ccache_d": 455, "ccache_maxsiz": 455, "ccaddr": [624, 625], "ccassigntoreg": 614, "ccassigntoregwithshadow": 614, "ccassigntostack": 614, "ccc": [447, 549], "ccdelegateto": 614, "ccif": 614, "ccifcc": 614, "ccifinreg": 614, "ccifnest": 614, "ccifnotvararg": 614, "cciftyp": 614, "cclib": [652, 653], "ccmak": 455, "ccmgrorerr": 625, "cconv": 549, "ccpassbyval": 614, "ccpromotetotyp": 614, "ccr": 524, "cctool": 455, "cctyp": [637, 638, 639, 640, 641, 642, 643, 644], "cd": [455, 521, 523, 535, 542, 544, 581, 591, 593, 607, 608, 617], "cdbg_us": 440, "cdecl": 549, "cec": [53, 138, 238, 324, 383], "cedar": 440, "cee": 579, "ceil": [440, 571, 613], "ceiling": 549, "cel": 614, "cent": 579, "centered": 644, "central": [511, 593], "centralizing": 599, "centric": 549, "cerr": [562, 617], "certain": [440, 443, 446, 455, 457, 460, 464, 468, 496, 501, 505, 506, 512, 513, 518, 521, 530, 549, 551, 565, 571, 572, 576, 579, 582, 594, 596, 598, 603, 615, 616, 617, 639, 641, 642, 643, 650, 653], "certainly": [444, 516, 518, 525, 577, 581, 587, 645, 654], "cfa": 511, "cfd": 583, "cfe": [509, 521, 542, 558, 578, 581, 585], "cfg": [457, 464, 488, 511, 523, 547, 549, 553, 561, 564, 579, 585, 587, 609, 614, 615, 640, 651], "cfgsimplify": 579, "cfguard": 587, "cfguard_checkcc": 549, "cfi": [454, 511, 550, 555, 587, 594], "cfi_instruct": 555, "cfi_offset": 555, "cflag": [551, 580], "cfrac": 608, "cg": [492, 493, 615], "cg_profil": 513, "cgft_objectfil": 643, "cgo": [502, 585], "cgp_from": 513, "cgp_to": 513, "cgp_weight": 513, "cgroup": 510, "ch": 605, "ch9": 644, "chain": [441, 442, 443, 449, 455, 457, 464, 478, 485, 505, 524, 527, 550, 552, 560, 561, 577, 593, 599, 610, 614, 615], "chained": [443, 549, 579, 601, 642, 653], "challeng": [594, 598], "challenging": [509, 534, 594, 641, 652], "chanc": [449, 505, 509, 516, 549, 554, 605, 616, 619, 646, 647], "chandl": [584, 594], "chandlerc": [578, 594], "chang": [438, 439, 440, 443, 446, 447, 449, 450, 451, 455, 457, 458, 459, 460, 461, 464, 471, 472, 476, 485, 487, 501, 502, 504, 505, 508, 512, 514, 516, 517, 518, 519, 520, 523, 529, 536, 537, 542, 543, 547, 548, 549, 550, 552, 554, 559, 561, 562, 564, 567, 572, 576, 577, 582, 584, 588, 589, 594, 596, 598, 600, 601, 603, 606, 608, 610, 613, 614, 615, 618, 619, 621, 622, 623, 624, 625, 639, 640, 641, 642, 643, 644, 650, 651, 652, 653], "changeb": 551, "changebyt": 551, "changed": [443, 446, 449, 453, 457, 469, 501, 504, 509, 512, 519, 521, 526, 543, 545, 549, 561, 577, 579, 581, 584, 587, 598, 607, 642, 643, 644], "changelog": 551, "changing": [443, 455, 485, 501, 509, 523, 525, 549, 550, 561, 563, 579, 581, 584, 593, 594], "channel": [12, 194, 342, 438, 440, 458, 504, 520, 594, 625], "chaos": 442, "chapitr": 620, "chapt": [504, 561, 636, 645, 646, 647, 654], "chapter": [621, 622, 638, 639, 640, 641, 642, 643, 644, 646, 647, 649, 650, 651, 652, 653], "char": [443, 459, 501, 506, 507, 519, 536, 549, 551, 552, 562, 563, 567, 571, 574, 579, 591, 593, 594, 613, 614, 615, 616, 617, 621, 625, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "char16_t": 574, "char32_t": 574, "char6": 447, "charact": [438, 447, 457, 460, 464, 468, 473, 486, 487, 497, 501, 549, 557, 579, 593, 601, 603, 604, 609, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "character": [438, 440, 464, 473, 474, 485, 486, 487, 496, 497, 506, 549, 555, 579, 603, 604, 609, 636, 640, 641, 647, 651, 652], "character16": 574, "character32": 574, "characteristic": [54, 139, 239, 325, 384, 457, 479, 512, 549, 567, 579, 585, 614, 623, 656], "characteriz": [479, 594], "characterized": 549, "charg": [457, 558], "charscalarty": 549, "chart": 613, "chased": 544, "chat": 458, "cheap": [444, 459, 509, 515, 525, 549, 579, 594], "cheapest": 532, "cheaply": [560, 594], "cheat": 623, "check": [439, 440, 442, 444, 451, 454, 455, 456, 457, 459, 461, 462, 464, 479, 485, 501, 505, 509, 510, 511, 516, 518, 519, 521, 523, 525, 527, 530, 535, 537, 538, 539, 540, 541, 542, 543, 544, 549, 551, 552, 555, 556, 561, 563, 564, 578, 581, 584, 585, 586, 587, 588, 591, 592, 593, 594, 596, 597, 598, 603, 607, 608, 609, 610, 611, 614, 615, 617, 619, 621, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 654], "checkcudaerror": 562, "checked": [444, 455, 460, 510, 515, 517, 521, 539, 540, 551, 561, 577, 579, 594, 607, 608, 609, 611, 639, 650], "checker": 601, "checkformat": 579, "checking": [439, 440, 455, 460, 501, 506, 515, 516, 521, 549, 562, 563, 564, 579, 581, 588, 591, 592, 593, 594, 596, 609, 619, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "checkout": [455, 510, 539, 576, 588], "checkpointing": 511, "checksum": [513, 549, 551, 591], "checksumkind": [513, 549], "checksummed": 591, "chees": 459, "child": [511, 543, 549, 551, 579, 641, 652], "child_begin": 579, "child_end": 579, "child_iterator": 579, "childidx": 579, "childorerr": 579, "children": [478, 543, 565, 579, 603], "childvalid": 579, "chip": [440, 457, 465, 466, 524, 538, 541, 562, 609, 614], "chmod": 521, "choic": [459, 465, 477, 512, 521, 524, 527, 538, 549, 551, 578, 579, 587, 596, 598, 636, 640, 645, 651, 654], "choos": [440, 455, 458, 461, 466, 488, 501, 502, 509, 518, 536, 537, 540, 541, 544, 546, 549, 558, 560, 563, 579, 582, 590, 593, 607, 614, 615, 616, 617, 637, 639, 640, 647, 648, 649, 650, 651], "choosing": [446, 457, 549, 578, 579, 582, 584, 615], "chop": 593, "chos": [588, 594, 650], "chosen": [446, 457, 459, 464, 518, 536, 549, 587, 598, 616], "chris": [457, 502, 509, 581, 584, 615, 654], "chriscox": 583, "chrom": 616, "chromium": [536, 542, 587], "chronological": 584, "chronology": 581, "chunk": [446, 447, 457, 459, 489, 551, 577, 592, 593, 649], "churn": 623, "ci": [440, 509, 550], "cimag": [641, 652], "cin": 514, "cindex": 614, "cint2006": 607, "circl": 543, "circuit": [641, 652], "circular": [459, 616], "circumst": [450, 460, 511, 549, 579, 593, 614, 615, 639, 642, 650, 653], "circumvent": 501, "cis": 445, "cis501": 445, "cited": 584, "citizen": 579, "city": [520, 558], "cl": [567, 587, 593, 605, 609, 615, 625], "claim": [444, 509, 618], "clamp": [0, 1, 2, 3, 4, 5, 6, 7, 440, 549], "clamped": [438, 549], "clamping": 438, "clampnumel": 529, "clampscalar": 529, "clang": [440, 444, 449, 452, 453, 454, 455, 459, 460, 464, 465, 473, 475, 485, 488, 498, 504, 506, 507, 509, 510, 511, 514, 516, 519, 520, 523, 535, 536, 543, 544, 548, 549, 550, 551, 552, 562, 563, 564, 575, 578, 579, 580, 581, 584, 587, 588, 593, 605, 607, 609, 610, 611, 613, 615, 616, 617, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 650, 653, 654], "clang_attr_arg_context_list": 601, "clang_attr_identifier_arg_list": 601, "clang_bootstrap_cmake_arg": 442, "clang_cc1": [460, 609], "clang_cl": 609, "clang_cpp": 609, "clang_enable_bootstrap": 442, "clangxx": 609, "clarif": [459, 503, 509, 618], "clarify": 593, "clarity": [549, 590, 640, 651], "clas": [579, 621], "clasess": 563, "clash": [459, 549, 558, 624, 625], "class": [440, 446, 447, 458, 460, 479, 487, 489, 497, 500, 504, 508, 509, 511, 512, 517, 518, 521, 522, 524, 527, 529, 530, 531, 532, 545, 547, 550, 554, 557, 559, 561, 563, 564, 566, 567, 572, 574, 576, 577, 584, 585, 586, 587, 591, 593, 594, 599, 601, 605, 611, 616, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 653, 654], "classic": [452, 457, 459, 536, 579, 594], "classical": 577, "classid": 604, "classif": [549, 597, 599], "classified": 549, "classify": 452, "classifying": 443, "classnam": [500, 567], "classof": 601, "claus": [440, 457, 509, 511, 549, 579, 604], "clean": [457, 459, 461, 501, 509, 521, 527, 539, 542, 544, 552, 562, 577, 578, 579, 581, 594, 615], "cleaned": 457, "cleaning": [457, 511], "cleanly": [459, 509, 549, 615], "cleanup": [505, 509, 549, 550, 577, 593, 639, 640, 650, 651], "cleanuppad": [505, 511], "cleanupret": [505, 511], "clear": [459, 499, 509, 518, 519, 547, 548, 549, 567, 571, 579, 581, 584, 587, 594, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "cleared": [460, 547, 549, 574, 581, 598, 616], "cleargraphattr": 579, "clearing": 638, "clearly": [450, 509, 560, 566, 581, 593, 596], "clearresourc": 457, "clenumval": 501, "clenumvaln": 501, "clev": [543, 645, 654], "cleverly": 446, "click": [509, 523, 578, 595], "clicking": 578, "client": [447, 455, 457, 459, 471, 501, 509, 518, 543, 548, 554, 557, 563, 579, 581, 586, 589, 593, 596, 607, 611, 614, 615, 621, 622, 625, 639, 642, 650, 653], "clientaddr": 625, "clientaddrlen": 625, "cling": 563, "clipped": 507, "clobb": [443, 457, 555, 560, 594, 603], "clobber": 549, "clobbered": 560, "clobbering": [549, 594], "clock": [485, 549, 615], "clon": [509, 521, 535, 579, 607, 608, 615, 642, 653], "cloned": [464, 585, 601], "cloning": [464, 521], "clos": [450, 453, 457, 459, 519, 529, 550, 551, 578, 588, 594], "close_fd_mask": 551, "closed": [450, 459, 520, 542, 550, 579, 615], "closely": [457, 471, 505, 519, 521, 549, 579, 594, 637, 648], "closest": [549, 644], "closing": [459, 460, 549, 578], "closur": [548, 645, 654], "clr": [567, 598], "clrb": 457, "clrl": 457, "clrq": 457, "clrw": 457, "clust": 479, "cluster": 479, "cluster_id": 479, "clustered": 479, "clustering": [479, 524, 530], "clutt": [459, 509], "cluttered": 452, "cm": 584, "cmak": [442, 445, 471, 509, 510, 517, 521, 523, 535, 536, 537, 538, 539, 548, 556, 579, 581, 583, 587, 591, 595, 607, 609, 612, 614, 617], "cmake_": [453, 456], "cmake_asm_compiler_target": 540, "cmake_asm_flag": 540, "cmake_build_typ": [453, 455, 456, 521, 607], "cmake_c_compil": [521, 607], "cmake_c_compiler_external_toolchain": 540, "cmake_c_compiler_target": 540, "cmake_c_flag": [455, 540, 607], "cmake_c_flags_optimiz": 607, "cmake_cflag": 540, "cmake_cxx_compil": 521, "cmake_cxx_flag": 455, "cmake_cxx_flags_releas": 521, "cmake_cxx_flags_relwithdebinfo": 521, "cmake_cxx_standard": 455, "cmake_install": 455, "cmake_install_prefix": [442, 455, 521, 523, 541], "cmake_lang_compil": 607, "cmake_lang_flag": 607, "cmake_minimum_required": [455, 456], "cmake_module_path": 455, "cmake_parse_argu": 456, "cmake_sysroot": 540, "cmake_toolchain_fil": [455, 521], "cmake_try_compile_target": 540, "cmake_verbose_makefil": 442, "cmakecach": [455, 456, 617], "cmakefil": [521, 607], "cmakelist": [442, 455, 456, 471, 521, 542, 607, 614, 615], "cmakeparseargu": 456, "cmd": 445, "cmov": 594, "cmovcc": 594, "cmoveq": 594, "cmovneq": 594, "cmp": [457, 549, 577, 579, 594], "cmp32ri8": 457, "cmpb": 513, "cmpflag": 561, "cmpinst": [555, 579], "cmpnumber": 561, "cmpq": [513, 592], "cmpswap": 438, "cmptmp": [638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "cmpxchg": [444, 525], "cnt": [103, 189, 286, 435], "co": [521, 523, 542, 558, 581, 611], "co_aw": 505, "coalesc": [457, 466, 579], "coalescing": [457, 476], "coars": 464, "coco": 549, "cod": [46, 90, 133, 176, 231, 273, 376, 422, 439, 441, 442, 443, 444, 446, 447, 449, 450, 452, 453, 454, 455, 456, 460, 461, 463, 464, 465, 467, 473, 474, 484, 486, 487, 488, 489, 492, 493, 494, 496, 497, 501, 504, 505, 508, 510, 512, 513, 515, 516, 517, 519, 520, 523, 524, 527, 529, 530, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 545, 547, 548, 550, 551, 552, 553, 556, 558, 559, 561, 562, 563, 564, 565, 566, 567, 575, 576, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 597, 598, 601, 604, 605, 607, 608, 609, 611, 613, 616, 617, 619, 636, 645, 646, 647, 654, 655], "code_owner": [504, 509, 578], "codebas": [459, 509, 526, 578], "codeblock": 518, "coded": [457, 594, 609, 644], "codeemittergen": 601, "codegen": [440, 441, 457, 460, 461, 502, 505, 512, 515, 516, 518, 521, 528, 530, 549, 552, 555, 562, 587, 601, 609, 612, 614, 615, 624, 625, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "codegen_expr": [649, 650, 651, 652, 653], "codegen_func": [649, 650, 651, 652, 653], "codegen_proto": [649, 650, 651, 652, 653], "codegenerat": 544, "codegening": [641, 652], "codegenopt": 564, "codegenschedmodel": 614, "codeid": 589, "codepath": [444, 579], "codeprop": 440, "coder": 581, "codesiz": 605, "codeview": [489, 493, 567, 572], "codeviewdebug": 593, "codgen": 649, "coding": [457, 504, 509, 519, 520, 521, 579, 605, 614], "coding_style_cpp": 584, "codlai": 623, "coerc": 561, "coerce_offset0": 460, "coerced": 505, "coff": [447, 457, 486, 503, 523, 549, 563, 567, 572], "cohen": 599, "coherent": [438, 440, 548, 549], "coincident": 610, "col": [549, 644], "cold": [447, 448, 516, 549], "coldcc": [447, 549, 598], "colfield": 546, "collabor": 581, "collaborat": 581, "collaps": 594, "collapsed": 549, "collapsing": 549, "colleagu": 458, "collect": [455, 473, 478, 485, 509, 516, 522, 524, 536, 545, 550, 551, 552, 563, 574, 577, 579, 581, 583, 585, 589, 597, 603, 604, 607, 608, 613, 645, 646, 647, 654], "collect_and_build_with_pgo": 539, "collected": [443, 448, 449, 485, 518, 539, 549, 552, 554, 563, 594, 596, 598, 604], "collecting": [596, 603, 608, 617], "collectively": [509, 563, 596, 598, 603], "collector": [447, 514, 550, 598, 645, 654], "collis": [459, 549, 579, 581, 593], "colloquial": 549, "colombet": 533, "colomn": 513, "colon": [440, 453, 455, 456, 460, 536, 548, 591, 601, 603, 609, 619], "color": [85, 173, 270, 417, 460, 473, 478, 489, 492, 493, 579, 617], "colored": 457, "coloring": [505, 585], "colour": 458, "column": [459, 460, 485, 488, 498, 506, 513, 521, 546, 549, 589, 593, 608, 613, 619, 644], "columnend": 506, "columnstart": 506, "com": [445, 447, 452, 453, 455, 456, 457, 458, 459, 461, 473, 481, 509, 512, 518, 519, 521, 540, 542, 546, 547, 549, 551, 558, 560, 561, 562, 563, 567, 574, 575, 578, 579, 580, 581, 583, 584, 589, 591, 593, 594, 598, 603, 607, 608, 609, 615, 616, 619, 621, 623, 636, 638, 639, 640, 642, 645, 647, 649, 650, 651, 653, 654, 655], "com_f": 457, "combin": [103, 106, 189, 286, 435, 440, 444, 451, 453, 455, 471, 497, 501, 502, 505, 508, 509, 512, 518, 525, 529, 530, 532, 549, 551, 561, 564, 565, 579, 585, 593, 598, 613, 614, 616, 617, 619, 637, 638, 645, 648, 649, 654], "combine1": 457, "combine2": 457, "combined": [440, 457, 473, 488, 501, 509, 512, 513, 519, 529, 549, 551, 555, 575, 579, 587, 593, 594, 610, 615, 616, 617], "combinedallocator": 591, "combiner": 530, "combining": [457, 470, 483, 485, 549, 614], "comdat": [447, 513], "comfort": 590, "coming": [456, 457, 459, 505, 508, 549, 555, 582, 589, 593, 594, 639, 640, 642, 650, 651, 653], "comm": [53, 103, 138, 189, 226, 238, 286, 324, 371, 383, 435, 436, 437, 440, 450, 459, 460, 479, 501, 504, 520, 537, 542, 549, 550, 555, 557, 567, 571, 578, 579, 584, 587, 603, 609, 619, 640, 651], "command": [440, 442, 443, 445, 451, 452, 453, 455, 457, 459, 460, 461, 464, 465, 466, 469, 470, 474, 477, 478, 479, 480, 481, 482, 485, 486, 487, 489, 492, 493, 494, 496, 497, 498, 499, 500, 502, 504, 507, 509, 510, 517, 520, 521, 523, 527, 530, 535, 537, 539, 540, 542, 544, 545, 548, 549, 551, 552, 563, 564, 579, 581, 587, 588, 591, 598, 601, 605, 607, 608, 609, 612, 614, 615, 617, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "commande": 596, "commandlin": [464, 587, 612, 625], "commandlinepars": 617, "commaseparated": 501, "comment": [440, 450, 460, 468, 471, 485, 494, 496, 504, 509, 543, 548, 549, 551, 560, 561, 577, 578, 579, 581, 584, 587, 601, 604, 605, 609, 616, 619, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "commented": [518, 637, 638, 648, 649], "commenting": 457, "commentstring": 614, "commercial": [509, 598], "commit": [459, 504, 509, 516, 520, 521, 542, 556, 578, 581, 584, 595, 598], "committ": 509, "committe": [458, 579], "committed": [485, 504, 509, 537, 542, 578], "committing": [509, 521, 542, 581], "common": [440, 442, 443, 444, 446, 447, 453, 456, 457, 459, 468, 486, 487, 494, 501, 502, 504, 505, 508, 509, 511, 512, 514, 516, 517, 518, 519, 524, 527, 529, 543, 548, 549, 550, 551, 553, 554, 556, 560, 561, 563, 567, 577, 580, 581, 585, 591, 593, 594, 595, 596, 598, 599, 602, 603, 605, 607, 614, 615, 618, 619, 637, 639, 640, 641, 642, 645, 648, 650, 651, 652, 653, 654], "commonality": [457, 603], "commonly": [447, 459, 468, 518, 549, 553, 579, 584, 614], "commonmark": 556, "commun": [3, 5, 458, 459, 549, 554, 590, 599, 625], "communicat": [443, 458, 505, 507, 514, 516, 549, 562, 563, 594, 596, 615], "communicated": 579, "communicating": 458, "community": [452, 502, 504, 509, 516, 550, 579, 581, 582, 584, 590, 620], "commut": [443, 457, 577, 614], "compact": [440, 457, 470, 504, 511, 518, 549, 579, 644, 645, 654], "compacting": 518, "compactly": [505, 603], "compactness": [505, 596], "compan": 558, "company": 509, "compar": [438, 439, 442, 443, 444, 448, 476, 489, 511, 549, 551, 577, 579, 580, 585, 588, 593, 594, 603, 607, 608, 613, 619, 637, 640, 648, 651], "compared": [457, 460, 476, 485, 508, 549, 561, 579, 588, 593, 594, 604, 609], "comparefp": 603, "comparing": [449, 476, 478, 546, 549, 561, 579, 588, 640, 641, 642, 643, 644, 651, 652, 653], "comparison": [439, 444, 449, 513, 516, 519, 525, 530, 543, 549, 577, 579, 587, 588, 593, 598, 603, 613, 623, 637, 641, 648, 652], "compatibility": [438, 446, 447, 456, 468, 486, 487, 488, 489, 493, 496, 501, 505, 512, 513, 542, 545, 547, 549, 571, 574, 579, 586, 593, 596, 598, 610, 611, 645, 654], "compatibl": [440, 444, 455, 457, 459, 463, 466, 468, 473, 493, 502, 509, 511, 513, 517, 518, 521, 523, 549, 562, 577, 579, 591, 594, 609, 611], "compatible_class": 457, "competent": 509, "competing": 440, "compil": [41, 131, 227, 372, 440, 442, 443, 444, 446, 447, 451, 452, 453, 454, 456, 457, 460, 461, 463, 466, 473, 478, 485, 489, 490, 501, 504, 505, 506, 508, 509, 510, 511, 512, 516, 517, 518, 519, 522, 523, 524, 526, 529, 534, 536, 537, 538, 539, 542, 548, 550, 551, 552, 559, 561, 562, 563, 564, 565, 567, 575, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 593, 594, 596, 597, 598, 599, 601, 604, 605, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 625, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655], "compiland": [489, 567, 570, 575], "compile_tim": 607, "compileact": [624, 625], "compilecallback": [624, 625], "compilecallbackmanag": 623, "compilecallbackmanager": 624, "compilecallbackmgr": [624, 625], "compiled": [440, 451, 457, 459, 461, 473, 479, 486, 501, 502, 505, 506, 509, 510, 514, 518, 521, 523, 530, 536, 540, 544, 549, 550, 552, 562, 563, 567, 574, 575, 579, 593, 594, 596, 598, 607, 609, 615, 621, 622, 623, 624, 625, 639, 644, 645, 649, 650, 654], "compilelai": [563, 621, 622, 623, 624, 625], "compilemodul": 617, "compileondemand": [623, 624], "compileondemandlai": [563, 623], "compiler": [442, 451, 455, 457, 459, 461, 503, 508, 509, 510, 514, 518, 519, 521, 548, 549, 560, 562, 579, 585, 586, 593, 598, 613, 620, 647], "compiler_rt": 509, "compiler_rt_test_compile_cflag": 540, "compiler_rt_test_compiler_cflag": 540, "compileutil": [621, 622, 623, 624, 625], "compiling": [440, 461, 473, 509, 523, 536, 538, 539, 540, 549, 550, 562, 563, 577, 579, 586, 587, 591, 593, 594, 596, 598, 607, 608, 609, 612, 615, 617, 621, 622, 625, 639, 642, 644, 645, 646, 650, 654], "compl": [519, 549, 579, 594], "complain": [523, 535], "complaining": 521, "complaint": [645, 654], "complet": [440, 443, 448, 450, 455, 456, 457, 459, 461, 463, 464, 473, 478, 499, 501, 505, 509, 511, 520, 523, 526, 530, 534, 539, 549, 550, 551, 552, 553, 554, 560, 561, 562, 563, 577, 581, 587, 589, 590, 593, 594, 598, 599, 603, 614, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "completed": [440, 443, 505, 530, 540, 542, 551, 554, 642, 653], "completely": [447, 457, 459, 501, 508, 509, 537, 549, 552, 585, 593, 594, 599, 601, 615, 619, 647], "completeness": 518, "completing": [579, 599], "complex": [456, 457, 459, 505, 512, 542, 551, 561, 564, 574, 587, 593, 594, 601, 613, 614, 615, 622, 637, 639, 641, 645, 648, 650, 652, 654], "complex128": 574, "complex16": 574, "complex32": 574, "complex32partialprecis": 574, "complex48": 574, "complex64": 574, "complex80": 574, "complexit": [457, 642, 644, 653], "complexity": [457, 518, 551, 561, 577, 579, 598, 599, 602, 605, 614], "complexpattern": [457, 614], "complextyp": 656, "compli": [440, 502, 582], "complicated": [442, 444, 455, 456, 511, 512, 518, 521, 523, 540, 543, 547, 549, 585, 594, 601, 611, 613, 614], "complying": 509, "component": [438, 440, 453, 455, 456, 464, 468, 471, 473, 475, 495, 507, 508, 509, 510, 517, 518, 520, 521, 523, 540, 542, 544, 549, 550, 553, 554, 562, 563, 571, 572, 577, 579, 580, 581, 594, 596, 608, 612, 614, 616, 618, 621, 655], "component_0": 548, "component_1": 548, "compos": [453, 523, 549, 622], "composability": 563, "composed": [439, 506, 549, 555, 589, 618], "composing": [549, 622], "composit": [549, 579], "compositional": 585, "compound": 506, "compr": [0, 1, 2, 3, 76, 161, 260, 407], "comprehens": [521, 577, 594, 609], "compress": [447, 455, 487, 521, 551], "compressed": [76, 161, 260, 407, 438, 455, 470, 487, 521, 549, 579], "compris": [440, 585], "comprised": 440, "compriz": 470, "compromis": 579, "compromising": [549, 594], "compteur": 130, "comput": [40, 225, 370, 438, 443, 448, 451, 457, 459, 470, 485, 502, 506, 516, 518, 537, 549, 550, 551, 553, 577, 579, 583, 585, 587, 594, 598, 603, 614, 615, 636, 638, 640, 641, 642, 643, 644, 645, 647, 649, 651, 652, 653, 654], "computationally": 550, "compute_20": 562, "compute_factorial": 507, "compute_pgm_rsrc1_fwd_progress": 440, "compute_pgm_rsrc1_mem_ordered": 440, "compute_pgm_rsrc1_sgpr": 440, "compute_pgm_rsrc1_vgpr": 440, "compute_pgm_rsrc1_wgp_mod": 440, "compute_pgm_rsrc2_user_sgpr": 440, "compute_xx": [502, 562], "computear": 543, "computed": [103, 189, 286, 435, 440, 443, 457, 470, 485, 518, 528, 549, 550, 567, 574, 577, 591, 594, 615, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "computeknownbit": 526, "computing": [440, 508, 514, 519, 549, 574, 585, 591, 594, 596, 639, 650], "con": [446, 603, 604], "concat": 549, "concat_vector": 457, "concaten": [441, 447, 521, 579, 603, 604, 609], "concatenat": [525, 529, 579, 603], "concatenated": [549, 579, 604, 609], "concatenating": [446, 603], "concentrat": 540, "concentrated": 485, "concept": [446, 447, 457, 516, 519, 524, 543, 549, 553, 561, 562, 563, 579, 589, 593, 594, 599, 602, 611, 621, 622, 638, 640, 649, 651], "conceptual": [459, 549, 595], "conceptually": [446, 457, 460, 501, 511, 519, 549, 579, 610], "concern": [509, 581, 584, 598], "concerned": [518, 519, 548, 549, 622], "concis": [457, 459, 501, 509, 519], "conclud": [485, 549, 640, 641, 651, 652], "conclus": [485, 561, 623, 644, 646, 647, 653, 655], "concret": [447, 457, 501, 508, 524, 529, 530, 542, 549, 560, 579, 593, 603, 605, 614, 615, 639, 646, 650], "concretely": 598, "concurrency": [549, 563, 586], "concurrent": [440, 444, 455, 518, 551, 563, 621], "concurrentircompil": [563, 621, 622], "concurrently": [518, 563, 579], "cond": [448, 505, 514, 549, 560, 593, 603, 604, 614, 640, 641, 642, 643, 644, 651, 652, 653], "cond_fals": [642, 653], "cond_next": [642, 653], "cond_tru": [642, 653], "cond_val": [651, 652, 653], "condbranch": 614, "condit": [90, 176, 273, 422, 439, 449, 456, 457, 459, 501, 509, 511, 514, 516, 519, 524, 552, 561, 574, 577, 579, 587, 591, 594, 598, 599, 603, 609, 610, 614, 615, 637, 640, 641, 642, 643, 644, 648, 651, 652, 653], "condition1": 603, "condition2": 603, "condition_1": 603, "condition_2": 603, "condition_n": 603, "conditional": [444, 449, 452, 454, 455, 456, 457, 473, 505, 516, 521, 525, 549, 550, 553, 562, 564, 587, 593, 594, 598, 604, 614, 636, 637, 638, 640, 641, 642, 643, 644, 647, 648, 649, 651, 652, 653], "conditionally": [456, 464, 518, 594], "condmovfp": 603, "condoperator": 604, "conduct": [520, 558], "conducted": [485, 509], "condv": [640, 641, 642, 643, 644], "condval": 604, "conferent": [457, 518, 520, 558], "confident": 509, "confidential": 590, "confidentiality": 509, "config": [442, 455, 463, 464, 471, 479, 493, 509, 517, 521, 523, 537, 540, 548, 579, 580, 581, 609, 614, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 649], "configmaxtest": 579, "configur": [440, 453, 455, 457, 460, 479, 509, 517, 520, 523, 534, 535, 536, 539, 540, 541, 548, 551, 562, 563, 576, 579, 580, 581, 588, 589, 591, 608, 609, 613, 614, 615, 616, 617, 619, 621, 622, 643], "configured": [442, 453, 455, 459, 464, 521, 523, 536, 549, 551, 579, 591, 598, 608, 615, 616, 618, 621], "configuring": [521, 579], "confirm": [459, 551], "confirmed": 450, "conflict": [440, 457, 509, 549, 560, 579, 581, 584, 603, 609], "conflicted": [649, 650, 651, 652, 653], "conflicting": [493, 524, 649], "conform": [440, 454, 455, 464, 465, 504, 509, 514, 518, 542, 549, 579, 582, 622, 623], "conforming": [459, 549, 579, 619], "confronted": [516, 519], "confus": [452, 459, 460, 468, 509, 519, 561, 579, 584, 585, 591, 594, 614], "confused": [511, 549], "confusing": [452, 518, 526, 549], "confusingly": 444, "congrat": 539, "congruenc": 550, "congruency": 550, "congruent": 591, "conjuct": 455, "conjunct": [440, 453, 455, 460, 462, 471, 489, 490, 549, 567, 588, 599, 603], "connect": [508, 529, 578, 579, 585, 594, 598, 607, 610, 621, 625], "connected": [440, 508, 537, 550, 553, 577], "connectivity": 85, "consecut": [439, 446, 460, 549, 591, 593, 604, 611, 613, 615], "consecutively": [549, 585], "consensus": [509, 584], "consequent": [444, 458, 502, 521, 549, 551, 553, 565, 594], "consequently": [451, 485, 511, 549, 579, 596, 609], "conserv": [443, 518, 542, 549, 552, 594, 598, 615], "conservatism": 610, "conservatively": [440, 443, 444, 459, 485, 518, 549, 596, 610], "conserved": [448, 549], "consid": [443, 446, 447, 448, 457, 459, 461, 468, 501, 502, 505, 506, 507, 508, 514, 518, 519, 526, 529, 538, 539, 543, 546, 547, 549, 550, 560, 561, 574, 579, 584, 590, 591, 593, 594, 595, 596, 598, 599, 603, 609, 611, 613, 615, 622, 637, 640, 642, 647, 648, 651, 653], "consider": [457, 502, 508, 513, 551, 577, 581, 593, 598, 599, 619, 637, 648], "considerably": [521, 602, 605], "considerat": 458, "considered": [440, 443, 457, 458, 460, 461, 475, 486, 496, 505, 509, 511, 513, 515, 524, 525, 529, 534, 549, 553, 561, 574, 577, 579, 584, 588, 590, 591, 593, 594, 596, 597, 599, 604, 605, 607, 615, 640, 644, 645, 651, 654], "considering": [452, 457, 532], "consist": [440, 447, 457, 464, 486, 490, 501, 506, 511, 513, 518, 527, 530, 536, 539, 542, 548, 549, 555, 561, 571, 572, 593, 594, 598, 603, 604, 605, 608, 614, 616, 640, 651], "consisted": 545, "consistency": [440, 549, 551, 587, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "consistent": [440, 443, 444, 456, 459, 460, 470, 509, 516, 517, 519, 549, 564, 581, 584, 615, 638], "consistently": [459, 460, 542], "consisting": [549, 561, 579, 611, 614], "consol": [457, 520, 551, 556, 595, 616, 639, 650], "const": [14, 21, 22, 47, 54, 55, 58, 71, 72, 73, 74, 75, 77, 80, 82, 83, 103, 109, 112, 118, 119, 134, 139, 140, 141, 151, 153, 154, 155, 158, 159, 162, 168, 169, 171, 189, 193, 196, 206, 207, 232, 239, 240, 241, 254, 255, 256, 257, 258, 259, 261, 265, 266, 268, 286, 289, 290, 294, 295, 301, 302, 303, 322, 325, 327, 328, 329, 330, 341, 344, 351, 352, 377, 384, 385, 388, 401, 402, 403, 404, 405, 406, 408, 412, 413, 415, 435, 440, 443, 444, 447, 457, 459, 470, 489, 501, 502, 505, 506, 512, 514, 516, 518, 521, 524, 527, 528, 536, 543, 547, 550, 551, 552, 562, 563, 564, 566, 585, 591, 594, 596, 598, 603, 610, 611, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 637, 638, 640, 641, 642, 643, 644, 649], "const0": 447, "const_arg_iterator": 579, "const_float": [649, 650, 651, 652, 653], "const_global_iterator": 579, "const_iterator": 579, "const_null": [651, 652, 653], "const_op_iterator": 579, "const_use_iterator": 579, "constant_tsc": 618, "constantarray": 579, "constantexpr": 584, "constantfoldcall": 512, "constantfolding": 512, "constantfp": [579, 638, 639, 640, 641, 642, 643, 644, 649], "constantindex": 596, "constantint": [459, 549, 555, 579], "constantness": 549, "constantpoolsect": 614, "constantstruct": 579, "constdat": 555, "constexpr": 502, "constindex": 596, "constituent": [511, 525, 640, 651], "constitut": [446, 447, 579, 590, 609, 622], "constituting": 531, "constprop": [501, 579], "constrain": [440, 514, 524, 532, 603], "constrained": [485, 511, 521, 524, 530, 576, 612, 638, 649], "constrainedop": 441, "constraining": [527, 530], "constraint": [455, 457, 459, 460, 499, 509, 511, 512, 524, 530, 560, 577, 579, 581, 585, 587, 593, 598, 605, 614, 615], "constrast": 443, "construct": [440, 444, 453, 456, 459, 485, 501, 505, 511, 512, 518, 546, 547, 549, 555, 556, 563, 579, 585, 593, 595, 598, 601, 603, 604, 611, 614, 615, 621, 623, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "constructed": [443, 447, 454, 459, 508, 513, 547, 549, 563, 574, 579, 598, 603, 611, 615, 617, 619, 639, 650], "constructing": [457, 549, 579, 593, 598, 615, 637, 642, 644, 648, 653], "constructively": 458, "constructor": [444, 457, 487, 501, 502, 505, 514, 543, 545, 547, 549, 554, 563, 593, 614, 615, 619, 621, 622, 623, 640], "constucted": 621, "constval": 579, "constvcall": 549, "consult": [455, 521, 523, 550, 567, 615], "consulted": [468, 565], "consulting": [520, 560, 572], "consum": [485, 501, 505, 511, 523, 524, 525, 529, 538, 549, 567, 569, 570, 571, 572, 574, 575, 593, 596, 605, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "consumed": [440, 468, 470, 471, 485, 489, 511, 513, 529, 549, 575, 579, 589, 596, 601], "consumeerror": 579, "consumer": [440, 519, 557, 579], "consuming": [485, 505, 513, 549, 551, 572], "consumpt": [457, 485, 551, 589, 615], "cont": [505, 511, 547, 549], "cont6": 511, "contact": [458, 509, 537, 542, 551, 558, 587, 590, 615], "contain": [440, 443, 444, 446, 447, 449, 450, 451, 455, 456, 457, 459, 460, 462, 464, 465, 468, 473, 475, 479, 481, 485, 486, 490, 498, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 513, 516, 518, 519, 520, 521, 523, 529, 535, 537, 538, 540, 541, 542, 543, 544, 546, 548, 549, 550, 553, 554, 555, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 574, 577, 580, 581, 583, 585, 587, 588, 593, 594, 595, 596, 598, 601, 603, 604, 605, 607, 608, 609, 611, 613, 614, 615, 616, 618, 619, 621, 622, 623, 624, 625, 638, 640, 644, 649, 651], "contained": [440, 442, 447, 460, 462, 464, 488, 501, 506, 511, 521, 529, 548, 549, 550, 553, 554, 563, 565, 567, 569, 570, 572, 575, 579, 593, 598, 603, 609, 615, 639, 648, 650], "container": [455, 459, 510, 619], "containing": [440, 442, 447, 448, 449, 455, 457, 460, 462, 464, 469, 475, 484, 487, 496, 501, 502, 504, 505, 506, 511, 519, 521, 523, 526, 527, 530, 536, 540, 544, 549, 552, 553, 564, 567, 570, 575, 579, 585, 589, 591, 593, 594, 596, 598, 601, 604, 608, 609, 611, 613, 614, 621, 639, 640, 641, 642], "containingtyp": 549, "containment": 579, "containsfoo": 459, "content": [443, 446, 455, 459, 460, 461, 468, 470, 471, 473, 478, 483, 485, 487, 488, 492, 493, 497, 501, 509, 513, 515, 522, 548, 549, 552, 556, 561, 567, 574, 575, 577, 579, 581, 585, 587, 589, 591, 594, 595, 604, 605, 608, 609, 614, 615, 617, 647, 648, 649, 650, 651, 652, 653], "content_disposition_typ": 509, "contentious": 509, "context": [443, 444, 459, 490, 498, 501, 511, 514, 516, 519, 524, 529, 537, 543, 549, 550, 557, 561, 562, 563, 578, 579, 590, 594, 601, 603, 604, 605, 609, 615, 618, 621, 637, 642, 644, 648, 649, 650, 651, 652, 653], "contextualiz": 618, "contiguous": [440, 529, 549, 569, 579, 593, 618], "contiguously": [549, 571, 575], "continu": [440, 443, 447, 451, 457, 489, 504, 509, 511, 542, 549, 551, 552, 567, 578, 579, 581, 592, 594, 609, 618, 624, 625, 637, 645, 648, 654], "continually": 461, "continued": 549, "continuing": [440, 460, 501, 507, 511, 543, 549, 621], "continuity": 579, "continuous": [454, 457, 509, 526, 551, 581, 607], "continuously": [454, 579, 607], "contract": [502, 516, 549, 579, 596, 601], "contradict": 549, "contrary": [457, 549], "contrast": [439, 457, 459, 511, 543, 579, 581, 584, 585, 615, 638, 649], "contrib": [489, 521], "contribu": [489, 504, 509, 520, 540, 575, 581, 616, 620], "contribut": [489, 509, 516, 520, 549, 567, 570, 577, 598, 615, 655], "contributed": [457, 509, 567], "contributing": [509, 520, 567, 579, 581], "contributor": [442, 455, 456, 581, 582], "contrived": [514, 603], "control": [226, 371, 438, 439, 440, 451, 455, 457, 459, 464, 465, 466, 476, 485, 501, 505, 508, 509, 510, 511, 512, 515, 516, 523, 547, 549, 550, 551, 552, 553, 554, 562, 577, 579, 581, 585, 586, 587, 592, 593, 594, 596, 598, 609, 611, 612, 613, 614, 616, 617, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655], "controll": 440, "controlled": [8, 42, 106, 190, 287, 292, 297, 307, 318, 338, 438, 440, 444, 509, 510, 549, 551, 577, 594, 610, 616], "controlled_": 594, "controller": 440, "controlling": [464, 521, 650], "conv": 514, "convenient": [453, 455, 457, 459, 460, 464, 475, 501, 505, 509, 524, 530, 543, 549, 560, 562, 563, 577, 579, 580, 603, 609, 616, 639, 640, 641, 651, 652], "conveniently": [506, 603, 616, 645, 654], "convent": [447, 456, 459, 503, 505, 511, 526, 543, 556, 561, 574, 579, 584, 587, 593, 594, 595, 596, 598, 601, 638, 644, 649], "conventional": 549, "converg": 652, "convergent": [447, 549], "convers": [440, 441, 457, 501, 515, 516, 529, 530, 579, 587, 603, 619], "convert": [438, 439, 440, 444, 457, 463, 464, 477, 501, 515, 516, 519, 521, 525, 530, 536, 539, 545, 561, 562, 577, 579, 581, 603, 604, 614, 615, 616, 617, 619, 636, 638, 639, 640, 641, 642, 643, 644, 645, 647, 649, 650, 651, 652, 653, 654, 656], "converted": [38, 39, 129, 213, 214, 215, 216, 223, 224, 368, 369, 439, 441, 457, 468, 473, 487, 509, 529, 549, 577, 579, 587, 593, 614, 619], "convertibl": [579, 619], "converting": [446, 457, 512, 549, 553, 577, 601, 619], "converttoerrorcod": 579, "convey": [509, 511, 516, 524, 549, 610], "conveyed": 549, "conveying": 518, "cook": [549, 579], "cool": [501, 509, 615, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "cooper": [518, 535], "coordin": [518, 598], "coordinat": [11, 109, 193, 341, 619], "coordinating": [549, 598], "cop": [444, 457, 466, 501, 505, 518, 521, 530, 532, 547, 549, 560, 577, 579, 591, 593, 598, 615], "copied": [440, 443, 457, 474, 501, 505, 509, 554, 556, 592, 595, 610], "coprocessor": 524, "copy": [76, 85, 161, 173, 260, 270, 407, 417, 440, 447, 451, 457, 459, 460, 472, 473, 487, 501, 505, 511, 517, 518, 521, 524, 525, 527, 529, 531, 532, 535, 541, 542, 549, 555, 556, 562, 567, 579, 583, 593, 594, 595, 598, 609, 610, 613, 614, 615, 646], "copyabl": 579, "copycost": [532, 614], "copying": [443, 455, 459, 463, 511, 518, 524, 525, 549, 550, 614, 615], "copyleft": 509, "copypart": 551, "copyphysreg": 614, "copyright": [514, 615], "cor": [4, 7, 440, 443, 445, 455, 456, 505, 509, 511, 512, 521, 529, 531, 534, 536, 537, 538, 541, 548, 549, 551, 553, 564, 581, 582, 587, 594, 601, 605, 609, 615, 621, 622, 623, 624, 625, 638, 639, 640, 641, 642, 644], "core2": 609, "corei7": [609, 613], "corn": 596, "cornerston": 519, "coroaddr": 505, "corollary": [570, 572], "corosp": 505, "coroutin": 586, "corp": 551, "corpor": 551, "corpus": 517, "corpus1": 551, "corpus2": 551, "corpus_d": 551, "correct": [440, 443, 444, 446, 455, 457, 459, 501, 502, 505, 509, 512, 516, 521, 535, 537, 541, 544, 549, 550, 564, 572, 577, 578, 579, 587, 588, 592, 593, 594, 599, 608, 613, 615, 616, 639, 650], "corrected": 587, "correcting": 509, "correctly": [440, 444, 450, 455, 457, 459, 501, 509, 511, 514, 519, 521, 540, 549, 561, 563, 572, 578, 579, 580, 581, 587, 589, 592, 593, 594, 598, 609, 615, 619, 637, 640, 648, 651], "correctness": [501, 509, 521, 530, 542, 544, 553, 577, 588, 598, 607, 608], "correl": 549, "correlat": [485, 518, 549], "correlated": 611, "correspond": [438, 440, 444, 451, 455, 457, 460, 465, 472, 473, 485, 501, 505, 506, 511, 513, 514, 519, 523, 525, 543, 549, 555, 560, 562, 565, 567, 570, 571, 579, 581, 593, 601, 604, 605, 611, 613, 614, 618, 637, 638, 640, 644, 648, 649], "corresponding": [46, 133, 231, 376, 438, 440, 441, 444, 446, 447, 455, 457, 459, 460, 476, 479, 498, 505, 506, 508, 509, 511, 512, 518, 519, 521, 523, 525, 543, 544, 546, 549, 550, 555, 561, 565, 567, 569, 570, 572, 577, 578, 579, 581, 589, 593, 598, 601, 609, 611, 614, 615, 618, 619, 638, 640, 651], "corrupt": [511, 551, 591, 645, 654], "corrupted": 591, "cortex": [503, 538, 541, 545, 587], "cortexa53model": 614, "cortexa57model": 614, "cos": [443, 613, 619, 636, 637, 638, 639, 647, 648, 649, 650], "cosin": [549, 614], "cost": [453, 457, 459, 485, 524, 531, 532, 534, 536, 546, 549, 550, 552, 558, 561, 576, 579, 581, 585, 587, 589, 594, 613, 614, 645, 654], "costly": [584, 594, 618], "could": [440, 443, 444, 451, 452, 455, 456, 457, 459, 460, 464, 475, 485, 501, 505, 509, 510, 514, 515, 516, 517, 518, 519, 521, 524, 525, 529, 532, 535, 537, 541, 543, 545, 546, 547, 549, 550, 556, 560, 563, 564, 566, 571, 577, 578, 579, 581, 583, 584, 589, 591, 593, 594, 595, 596, 598, 599, 602, 603, 609, 610, 611, 614, 618, 619, 622, 623, 637, 638, 639, 640, 642, 643, 645, 648, 650, 651, 653, 654], "couldn": [443, 525, 561, 624, 625, 643], "counsel": 509, "count": [103, 189, 286, 435, 439, 440, 444, 451, 455, 468, 473, 485, 490, 501, 511, 512, 518, 525, 551, 553, 563, 567, 569, 579, 581, 585, 589, 593, 596, 603, 607, 608, 610, 614, 617, 618, 637, 648], "counted": [439, 460, 545, 549], "counter": [40, 225, 370, 440, 442, 479, 485, 490, 506, 549, 551, 564, 593], "counterpart": [441, 549, 563], "counting": [518, 549], "coupl": [444, 509, 516, 549, 552, 558, 578, 598, 603, 615, 616, 640, 641, 644, 645, 651, 652, 654], "coupled": [530, 579, 581], "cour": 130, "cours": [443, 455, 501, 512, 530, 549, 551, 561, 564, 579, 615, 622, 636, 645, 646, 647, 648, 654], "court": 509, "courtesy": [504, 509], "cout": [459, 514, 536, 562, 619, 643], "cov": [457, 459, 460, 463, 484, 506, 521, 539, 542, 549, 551, 556, 566, 579, 595, 596, 646, 647], "cover": [453, 475, 501, 503, 509, 518, 519, 523, 532, 551, 561, 614, 616], "coverag": [454, 455, 463, 484, 509, 517, 531, 539, 586, 593, 612, 617], "coveragemappingdataforfunctionrecord0": 506, "coveragemappingdataforfunctionrecord1": 506, "covered": [453, 460, 473, 484, 506, 516, 537, 549, 551, 574, 593, 597, 614, 615, 641, 652], "covering": [558, 587, 609, 646], "cp": [440, 521, 551, 555], "cp0": 524, "cp1": 524, "cp2": 524, "cp3": 524, "cpi": 555, "cpp": [441, 455, 456, 457, 459, 460, 472, 496, 498, 501, 507, 512, 514, 518, 521, 530, 536, 561, 562, 563, 581, 591, 593, 598, 599, 601, 609, 613, 614, 615, 617, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "cppflag": 580, "cppguid": 584, "cppperformancebenchmark": 583, "cppreferent": 579, "cptmp0": 614, "cptmp1": 614, "cpu": [440, 444, 445, 447, 462, 465, 466, 478, 479, 485, 488, 502, 538, 541, 545, 549, 551, 559, 561, 587, 594, 607, 614, 615, 617, 618, 619, 624, 625, 643], "cpu0": 655, "cpu1": 619, "cpu2": 619, "cpu2017": 583, "cpu_id": 618, "cpu_nam": 479, "cpu_powerpc": 619, "cpu_x86": 619, "cpu_x86_64": 619, "cpufreq": [445, 538], "cpufrequtil": 538, "cpuinfo": 538, "cpun": 445, "cpunam": [465, 466, 485], "cpus": [444, 445, 457, 464, 465, 466, 488, 502, 521, 538, 541, 587, 594, 614, 618, 619, 643], "cpuset": 445, "cpusubtyp": 483, "cputyp": [447, 483], "cpux": 445, "cr": [457, 549], "cr0": 549, "cr7": 549, "crafted": 579, "crash": [452, 461, 466, 518, 521, 536, 544, 577, 579, 581, 583, 596, 645, 654], "crashed": [461, 521], "crashing": 461, "crawl": 518, "crazi": [640, 651], "crazy": [501, 645, 647, 654], "crc": 551, "crc32": 591, "crd": 583, "creal": [641, 652], "creat": [440, 446, 453, 455, 456, 457, 459, 465, 468, 479, 481, 483, 488, 489, 502, 504, 505, 506, 508, 509, 510, 511, 513, 514, 518, 521, 523, 524, 525, 527, 529, 530, 531, 537, 539, 541, 545, 547, 549, 550, 551, 552, 554, 555, 556, 557, 560, 561, 562, 577, 578, 579, 581, 588, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "create_add": 649, "create_argument_alloc": 653, "create_entry_block_alloc": 653, "create_funct": [650, 651, 652, 653], "create_modul": [649, 650, 651, 652, 653], "createalloc": [642, 643, 644], "createasmstream": 457, "createbasicaliasanalysispass": 644, "createbasictyp": 644, "createbr": [640, 641, 642, 643, 644], "createcall": [579, 638, 639, 640, 641, 642, 643, 644], "createcfgsimplificationpass": [622, 623, 624, 625, 639, 640, 641, 642, 644], "createcompileun": 644, "createcondbr": [640, 641, 642, 643, 644], "created": [440, 446, 447, 455, 457, 458, 459, 462, 468, 473, 485, 487, 501, 505, 506, 508, 509, 514, 519, 521, 523, 525, 536, 541, 542, 549, 551, 552, 554, 563, 574, 578, 579, 585, 588, 593, 598, 601, 604, 610, 614, 615, 619, 621, 622, 624, 625, 638, 639, 640, 642, 644, 649, 650, 651, 653], "createdatalayout": [623, 624, 625, 639, 640, 641, 642, 643, 644], "createdefaultmypass": 615, "createentryblockalloc": [642, 643, 644], "createexpress": 644, "createfadd": [638, 639, 640, 641, 642, 643, 644], "createfcmpon": [640, 641, 642, 643, 644], "createfcmpult": [638, 639, 640, 641, 642, 643, 644], "createfil": 644, "createfmul": [638, 639, 640, 641, 642, 643, 644], "createfsub": [638, 639, 640, 641, 642, 643, 644], "createfunct": 644, "createfunctiontyp": 644, "creategvnpass": [622, 623, 624, 625, 639, 640, 641, 642, 644], "createindirectstubsmanag": 625, "createinstructioncombiningpass": [622, 623, 624, 625, 639, 640, 641, 642], "createj": 554, "createjitdylib": [563, 621, 622], "createlegacylookupresolv": [623, 624, 625], "createload": [642, 643, 644], "createlocalcompilecallbackmanag": [623, 624], "createlocalindirectstubsmanagerbuild": [623, 624], "createmul": 579, "createmyregisterallocator": 615, "createparametervari": 644, "createph": [640, 641, 642, 643, 644], "createpromotememorytoregisterpass": [642, 644], "createreassociatepass": [622, 623, 624, 625, 639, 640, 641, 642], "createremotememorymanag": 625, "createret": [638, 639, 640, 641, 642, 643, 644], "createstor": [642, 643, 644], "createstringerror": 579, "createstub": [624, 625], "createsubroutinetyp": 644, "createtargetasminfo": 614, "createtargetmachin": 643, "createthin": 468, "createtypedef": 587, "createuitofp": [638, 639, 640, 641, 642, 643, 644], "createvirtualregist": 457, "creating": [459, 462, 464, 468, 472, 479, 481, 485, 499, 504, 508, 511, 513, 514, 520, 521, 535, 537, 542, 549, 552, 554, 563, 577, 581, 585, 587, 593, 596, 609, 614, 619, 639, 640, 641, 644, 650, 651, 652, 655], "creation": [455, 468, 505, 508, 518, 542, 545, 549, 579, 581, 587, 614], "creator": [455, 615], "creatur": [641, 647, 652], "cred": 594, "credit": 509, "creduc": 452, "crhc": 583, "critedge1": 562, "criteri": 581, "criterion": [581, 591], "critical": [456, 466, 485, 516, 518, 530, 542, 549, 588, 615, 637, 648], "critically": [443, 594], "cross": [442, 459, 461, 489, 530, 531, 532, 538, 549, 561, 563, 575, 581, 585, 587, 612, 643], "crosscompil": [457, 541], "crtbegin": 587, "crtend": 587, "crucial": [549, 578, 594], "cruel": [556, 595], "cruft": 581, "crypto": 551, "crypto_guidelin": 594, "cryptographic": 594, "cryptographically": 591, "cs": [490, 549, 583], "cs1": [443, 549], "cs2": [443, 549], "csail": 594, "cse": [444, 512, 526, 550, 564, 639, 650], "csemirbuild": 526, "cset": 445, "csk_md5": 549, "csk_non": 549, "csk_sha1": 549, "csr_64": 555, "cst": 549, "cst_code_integ": 447, "cst_code_wide_integ": 447, "cstdint": [625, 639, 640, 641, 642], "cstdio": [625, 637, 638, 639, 640, 641, 642, 643, 644], "cstdlib": [624, 625, 637, 638, 639, 640, 641, 642, 643], "cstptr": 549, "cstring": 625, "cstylecomment": 604, "csv": [479, 608, 616, 617], "cta": 562, "ctaid": 562, "ctest": 607, "ctmark": 607, "ctor": [459, 514, 547, 549, 593], "ctpop": 614, "ctrl": [638, 643], "ctx": [563, 621, 622], "ctxt": 619, "ctyp": 567, "cu": [440, 478, 502, 549, 593], "cub": 438, "cubemap": 438, "cubic": 551, "cucontext": 562, "cuctxcreat": 562, "cuctxdestroy": 562, "cud": [457, 503, 510, 562, 612], "cuda_success": 562, "cudamodul": 562, "cudevic": 562, "cudevicecomputecapability": 562, "cudeviceget": 562, "cudevicegetcount": 562, "cudevicegetnam": 562, "cudeviceptr": 562, "cufunct": 562, "cuin": 562, "culaunchkernel": 562, "culinkstat": 562, "culled": 459, "cultur": 458, "cultural": 558, "cumbersom": [563, 581, 603], "cumemalloc": 562, "cumemcpydtoh": 562, "cumemcpyhtod": 562, "cumemfre": 562, "cumod": 440, "cumodul": 562, "cumodulegetfunct": 562, "cumoduleloaddat": 562, "cumoduleloaddataex": 562, "cumoduleunload": 562, "cumul": [457, 617], "cumulatively": 487, "cuobjdump": 502, "cur_var": 653, "curesult": 562, "curious": 561, "curloc": 644, "curly": [459, 549, 579, 603, 609], "curop": 614, "curr": 647, "currency": [457, 509, 639, 650], "current": [438, 439, 440, 447, 452, 453, 456, 457, 459, 460, 465, 466, 468, 485, 496, 502, 505, 506, 508, 511, 512, 515, 516, 518, 520, 521, 530, 534, 541, 542, 546, 547, 548, 549, 551, 561, 562, 563, 571, 577, 578, 579, 580, 587, 588, 591, 592, 593, 594, 596, 598, 601, 603, 604, 605, 609, 610, 611, 612, 614, 615, 619, 622, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "current_corpus_d": 551, "current_valu": 505, "currently": [11, 48, 49, 88, 109, 193, 332, 341, 378, 379, 420, 438, 439, 440, 443, 444, 446, 447, 449, 452, 454, 455, 457, 458, 460, 461, 462, 464, 465, 473, 475, 485, 487, 488, 492, 493, 501, 502, 505, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 521, 523, 524, 525, 526, 529, 530, 532, 534, 535, 536, 537, 548, 549, 551, 554, 555, 562, 563, 567, 576, 577, 579, 580, 583, 587, 589, 590, 591, 593, 594, 596, 598, 599, 601, 610, 614, 615, 616, 617, 619, 621, 622, 623, 637, 639, 640, 641, 642, 644, 645, 648, 650, 651, 652, 653, 654], "curs": [461, 464], "curtok": [637, 638, 639, 640, 641, 642, 643, 644], "curvar": [642, 643, 644, 653], "cus": [440, 498], "custom": [452, 455, 457, 460, 461, 511, 514, 516, 522, 529, 548, 549, 551, 555, 577, 598, 601, 602, 605, 609, 618, 621, 624], "customalloc": 505, "customary": [501, 509, 549], "customevent": 618, "customeventmarker": 618, "customeventunstructuredmemory": 618, "customfor": 529, "customfre": 505, "customis": 616, "customised": 455, "customiz": [455, 501, 512, 519, 526, 530, 579, 607, 609], "customized": [518, 530, 549], "customizing": 455, "cut": [448, 479, 501, 614, 621, 645, 654], "cutoff": 490, "cv": 581, "cv_cpu_type_": 567, "cv_signature_xx": 570, "cvdebugrecord": 572, "cvdump": 489, "cve": 551, "cvinfo": 570, "cvpack": 574, "cvt": 562, "cx": 605, "cxa_demangl": 593, "cxx": [453, 459, 521, 535, 541, 563, 588], "cxx11": 583, "cxx14": 459, "cxx_fast_tl": 549, "cxx_fast_tlscc": [447, 549], "cxx_flag": 538, "cxx_status": 459, "cxxcompilelai": 563, "cxxcompilinglai": 563, "cxxfilt": 463, "cxxflag": [472, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "cxxlai": 563, "cxxmap": [463, 490], "cy": 485, "cycl": [479, 485, 504, 508, 511, 520, 549, 552, 553, 593, 617], "cycle_frequency": 618, "cyclic": [521, 549], "cyclonemodel": 614, "cygwin": [457, 521, 523], "cypress": 440, "cywritev3": 614, "d0": [460, 485, 549, 614], "d02": 611, "d1": [460, 614], "d10": 614, "d11": 614, "d12": [611, 614], "d13": 614, "d14": 614, "d15": [549, 614], "d16": [0, 2, 3, 24, 35, 37, 209, 220, 222, 354, 365, 367], "d16_x": 437, "d16_xy": 437, "d16_xyz": 437, "d16_xyzw": 437, "d2": 614, "d3": [555, 614], "d31": 549, "d4": [549, 614], "d5": 614, "d57896": 584, "d58311": 587, "d59918": 587, "d6": 614, "d66608": 587, "d7": [549, 614], "d8": 614, "d9": 614, "d_ctor_bas": 460, "da": [1, 2, 3, 485], "dag": [441, 500, 550, 574, 579, 581, 598, 601, 603, 604, 605, 609, 614], "dagarg": 604, "dagarglist": 604, "dagcombin": 512, "dagtodag": 512, "dagtodagisel": 512, "damaging": 593, "dan": [0, 1, 2, 3, 4, 5, 6, 7, 619], "dang": [590, 594], "dangerous": [460, 549, 579, 610], "dangling": [549, 579, 604, 651], "daniel": [533, 593], "danil": 584, "darktabl": 583, "darwin": [453, 457, 468, 486, 494, 515, 549, 563, 596, 644], "darwin9": 460, "das": 584, "dash": [501, 517, 619], "dasinconsistent": 584, "dat": [11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 55, 58, 76, 85, 109, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 140, 141, 161, 173, 193, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 241, 260, 270, 316, 317, 341, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 385, 388, 407, 417, 437, 438, 439, 442, 443, 444, 445, 446, 451, 452, 453, 454, 456, 459, 463, 468, 471, 473, 485, 486, 487, 488, 489, 492, 493, 494, 497, 498, 501, 505, 511, 512, 513, 515, 516, 517, 518, 519, 521, 523, 524, 529, 530, 539, 541, 542, 550, 551, 552, 554, 555, 560, 566, 567, 571, 572, 574, 575, 578, 581, 582, 583, 584, 585, 586, 587, 588, 589, 593, 594, 596, 598, 601, 603, 605, 607, 614, 615, 617, 621, 622, 623, 638, 639, 640, 642, 643, 644, 650, 651, 652, 653], "data16bitsdirect": 614, "data32bitsdirect": 614, "data64bitsdirect": 614, "databas": [549, 575, 586, 619, 645, 654], "datacrc": 567, "dataflow": [549, 593, 642, 653], "datalayout": [447, 518, 549, 562, 563, 611, 614, 621, 622, 623, 624, 625, 650, 651, 652, 653], "datalayoutpass": 644, "dataset": [583, 607], "datastructur": [579, 581], "datatyp": [457, 501, 579, 636, 647], "daunting": 455, "david": [584, 585], "day": [455, 509, 520, 521, 542, 579, 654], "dbaremetal_armv6m_sysroot": 540, "dbaremetal_armv7em_sysroot": 540, "dbaremetal_armv7m_sysroot": 540, "dbg": [451, 549, 579, 614, 644], "dbg_valu": 593, "dbgentityhistorycalculator": 593, "dbginfo": 593, "dbgopt": 593, "dbgstreamarray": 567, "dbi": [565, 570, 575], "dbi_head": 567, "dbistreamhead": 567, "dbistreamvers": 567, "dbl": 607, "dblty": 644, "dbootstrap_cmake_build_typ": 510, "dbootstrap_cmake_c_flag": 442, "dbootstrap_cmake_cxx_flag": 442, "dbscan": 479, "dbuild": 644, "dbuild_shared_lib": 521, "dbx": 593, "dc": [551, 557], "dce": [461, 501, 505, 512], "dced": 579, "dclang_bootstrap_passthrough": 442, "dclang_bootstrap_target": 510, "dclang_enable_bootstrap": [442, 510], "dclang_enable_proto_fuzz": 517, "dclang_tablegen": [539, 541], "dcmake_ar": 540, "dcmake_asm_compiler_target": 540, "dcmake_asm_flag": 540, "dcmake_build_typ": [504, 510, 521, 538, 539, 609, 617], "dcmake_c_compil": [539, 540, 607], "dcmake_c_compiler_external_toolchain": 540, "dcmake_c_compiler_target": 540, "dcmake_c_flag": [538, 539, 540], "dcmake_c_flags_releas": 617, "dcmake_crosscompiling": 541, "dcmake_cxx_compil": 539, "dcmake_cxx_flag": [539, 541, 617], "dcmake_cxx_link_flag": 521, "dcmake_exe_linker_flag": 540, "dcmake_install_prefix": [455, 521, 538, 541], "dcmake_nm": 540, "dcmake_osx_architectur": 521, "dcmake_ranlib": 540, "dcmake_sysroot": 540, "dcmake_toolchain_fil": 521, "dcmake_try_compile_target_typ": 540, "dcomm": 581, "dcompiler_rt_baremetal_build": 540, "dcompiler_rt_build_builtin": 540, "dcompiler_rt_build_libfuzz": 540, "dcompiler_rt_build_profil": 540, "dcompiler_rt_build_sanitizer": 540, "dcompiler_rt_build_xray": 540, "dcompiler_rt_default_target_only": 540, "dcompiler_rt_emulator": 540, "dcompiler_rt_include_test": 540, "dcompiler_rt_os_d": 540, "dcompiler_rt_test_compil": 540, "dcompiler_rt_test_compiler_cflag": 540, "ddg": [508, 586], "ddgbuild": 508, "dead": [443, 457, 501, 514, 516, 521, 527, 549, 550, 552, 555, 562, 564, 579, 593, 598], "deadlin": 509, "deadly": 551, "deadtypeelim": 579, "deal": [444, 447, 455, 459, 505, 509, 515, 524, 529, 530, 543, 577, 579, 593, 601, 616], "dealing": [444, 446, 458, 459, 509, 511, 515, 553, 566, 574, 579, 581, 585, 593, 594, 642, 653], "dealloc": [536, 549, 591], "deallocat": [505, 518, 549, 579], "deallocated": [536, 579, 591], "deallocating": [505, 591], "deallocationtypemismatch": 591, "death": [517, 551], "deb": 541, "debat": 526, "debian": [521, 540, 541, 576], "debian8": 510, "debug": [441, 451, 452, 453, 455, 457, 459, 461, 463, 464, 472, 479, 486, 487, 488, 489, 493, 497, 498, 499, 501, 504, 506, 507, 509, 511, 513, 521, 523, 526, 539, 544, 550, 551, 552, 555, 559, 563, 565, 566, 569, 570, 572, 574, 575, 576, 580, 584, 586, 587, 589, 596, 598, 607, 609, 612, 614, 615, 617, 636, 642, 643, 645, 646, 653, 654], "debug_": 440, "debug_count": 579, "debug_fram": [488, 587], "debug_info": [478, 593], "debug_inlin": 462, "debug_level": 501, "debug_metadata_vers": 644, "debug_mod": 440, "debug_nam": 593, "debug_pubnam": [462, 565, 593], "debug_pubtyp": [462, 593], "debug_s_crossscopeexport": 489, "debug_s_crossscopeimport": 489, "debug_s_inlineelin": 489, "debug_s_lin": 489, "debug_str": [460, 593], "debug_string": 479, "debug_symbol": 576, "debug_with_typ": 579, "debugcount": 579, "debugflag": [501, 579], "debugg": [440, 459, 489, 536, 554, 563, 572, 609, 612, 615, 640, 644, 651, 654], "debuggability": 511, "debugged": 593, "debugger": [440, 451, 457, 489, 507, 526, 575, 584, 593, 644, 646, 654], "debugging": [440, 451, 452, 455, 457, 459, 461, 464, 465, 473, 476, 480, 487, 501, 518, 521, 523, 542, 544, 549, 561, 563, 564, 577, 587, 605, 612, 614, 615, 644, 646, 647], "debuginfo": [455, 521, 549, 572, 581, 587, 593, 609, 644], "debuginfoforprofiling": 549, "debuginfometadat": 593, "debuglev": 501, "debuglevel": 501, "debuglink": 487, "debugloc": [457, 589, 593, 644], "debugstreamarray": 567, "debugtrap": [440, 587], "dec": [494, 579], "decad": 605, "decent": [512, 538, 542, 579, 615, 644], "decid": [455, 501, 502, 509, 511, 512, 529, 544, 549, 567, 578, 579, 593, 594, 598, 613, 615, 637, 641, 648, 650, 652], "decided": [446, 549, 565, 598, 619, 642, 653], "deciding": [446, 453, 529, 534, 579], "decimal": [439, 460, 486, 490, 494, 496, 501, 513, 549, 603, 619], "decimalinteg": 604, "decis": [446, 451, 453, 457, 458, 459, 509, 511, 516, 525, 529, 534, 551, 579, 585, 590, 594, 598, 613, 622, 639, 650], "decl": [543, 605, 638], "declar": [439, 440, 443, 447, 457, 459, 460, 501, 502, 505, 512, 514, 529, 543, 547, 548, 549, 561, 562, 579, 596, 598, 599, 601, 603, 605, 611, 614, 615, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "declarator": 460, "declare_funct": [649, 650, 651, 652, 653], "declared": [439, 459, 501, 548, 549, 577, 579, 593, 599, 601, 604, 605, 614, 615, 637, 638, 639, 640, 641, 642, 643, 644, 653], "declaring": [443, 501, 549, 579], "declaring_vari": 584, "declcontext": 543, "declet": 549, "decltyp": [549, 623, 624, 625], "decod": [447, 485, 492, 493, 549, 579, 593, 603, 607], "decoded": [447, 485], "decoding": 601, "decompos": 512, "decomposed": [509, 574], "decomposing": [529, 598], "decomposit": 479, "decompress": 487, "decorat": 593, "decoupl": 603, "decr": [3, 5, 6, 7, 511, 579], "decreas": [466, 539, 587, 591], "decreased": 542, "decreasing": [453, 549, 566], "dedicated": [439, 457, 534, 536, 542, 553, 581, 614], "deduc": [549, 564, 579, 603], "deduced": [604, 610], "deducibl": [440, 516], "dedupl": 567, "dee": 485, "deem": [509, 544], "deemed": [512, 542, 549], "deep": [456, 459, 489, 508, 517, 556, 577, 583, 595, 607, 621], "deepcheck": 579, "def": [441, 457, 479, 505, 508, 512, 524, 527, 546, 550, 555, 560, 585, 593, 594, 601, 603, 605, 614, 615, 621, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "default": [18, 19, 20, 28, 29, 30, 31, 32, 35, 55, 115, 116, 117, 121, 122, 123, 124, 127, 140, 199, 200, 201, 210, 211, 212, 214, 217, 220, 240, 316, 348, 349, 350, 358, 359, 360, 361, 362, 365, 438, 440, 441, 442, 443, 444, 447, 449, 453, 455, 457, 460, 461, 462, 464, 465, 466, 467, 468, 472, 473, 474, 477, 478, 479, 480, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 500, 501, 502, 505, 506, 509, 512, 513, 516, 517, 518, 521, 523, 532, 535, 536, 537, 539, 540, 541, 543, 547, 549, 551, 554, 555, 557, 560, 562, 563, 576, 578, 579, 580, 581, 587, 589, 591, 593, 594, 596, 598, 601, 603, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 621, 622, 637, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652], "default_branch_weight": 449, "defaultconfig": 579, "defaultdest": 549, "defaulted": 549, "defaultlib": 523, "defaultopt": 501, "defeating": 594, "defend": 594, "defending": 594, "defens": 509, "deferred": [554, 561, 584, 594], "deferrederr": 579, "deferring": [563, 622], "deficienc": 647, "deficiency": 518, "defin": [54, 55, 139, 140, 239, 240, 325, 384, 385, 438, 440, 443, 446, 447, 448, 449, 455, 456, 457, 459, 460, 461, 464, 471, 485, 501, 502, 504, 505, 506, 508, 509, 510, 511, 514, 518, 519, 521, 524, 529, 536, 540, 541, 546, 547, 548, 549, 551, 555, 556, 560, 561, 562, 563, 567, 570, 575, 577, 579, 580, 582, 586, 591, 593, 594, 595, 598, 599, 601, 603, 604, 605, 607, 609, 610, 611, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "defined": [40, 130, 225, 370, 439, 440, 442, 443, 444, 447, 452, 455, 456, 457, 459, 460, 468, 470, 485, 486, 487, 490, 501, 502, 505, 506, 508, 509, 511, 512, 513, 514, 518, 519, 521, 524, 526, 527, 528, 529, 536, 542, 544, 548, 549, 552, 555, 560, 561, 562, 564, 566, 567, 570, 572, 576, 577, 579, 580, 584, 591, 593, 596, 597, 598, 599, 601, 603, 604, 605, 608, 610, 611, 614, 615, 616, 618, 619, 621, 622, 636, 637, 638, 639, 640, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655], "definied": 546, "defining": [440, 447, 456, 457, 460, 501, 505, 511, 517, 518, 536, 543, 548, 549, 561, 576, 579, 591, 593, 601, 603, 604, 617, 619, 637, 648, 649], "definingaccess": 560, "definit": [439, 440, 444, 446, 447, 449, 456, 457, 460, 462, 476, 479, 486, 489, 500, 501, 505, 508, 512, 518, 524, 525, 527, 528, 529, 536, 542, 546, 548, 549, 552, 553, 555, 560, 561, 563, 577, 579, 587, 591, 593, 598, 601, 604, 605, 611, 614, 615, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "definitely": [504, 544, 549, 579, 591], "defm": [603, 605, 614], "defreg": 479, "defy": 549, "degener": 549, "degenerat": [577, 642, 653], "degrad": 509, "degraded": 518, "degrandmaison": 558, "degre": [444, 510, 516, 537, 594, 613], "delay": [561, 579, 584, 590, 591, 593], "delayed": [593, 603], "deleg": 582, "delegat": [444, 485, 511, 549, 582], "delet": [443, 451, 457, 460, 468, 514, 521, 535, 539, 549, 560, 561, 562, 579, 581, 591, 593, 615, 638, 639, 640, 641, 642, 649, 650], "delete_funct": [649, 650, 651, 652, 653], "deleteaninstruct": 579, "deleted": [443, 514, 549, 579, 587, 593, 621, 623, 639], "deletesizemismatch": 591, "deleting": [443, 468, 549, 577, 593, 638, 639, 640, 641, 642, 644, 649, 650, 651, 652, 653], "deliberately": [560, 596], "delim": 511, "delimited": [456, 521, 549, 557, 604], "delineator": 464, "delt": [452, 485, 544, 618], "deltalinestart": 506, "delv": [639, 650], "delving": 509, "demand": [440, 447, 457, 563, 581, 621, 642, 653], "demanding": 521, "demangl": [453, 463, 467, 473, 486, 488, 492, 493, 498, 551, 593], "demangled": [474, 488, 492, 493, 498, 593], "demangling": [467, 474], "demo": [501, 625, 638, 649], "demonstr": [639, 650], "demonstrat": [506, 521, 549, 571, 579, 593, 614, 638, 639, 649, 650], "demonstrated": [485, 509, 543, 587], "demonstrating": [549, 579], "denisov": 584, "denisovcamelback": 584, "denormal": [440, 502, 549], "denormaliz": 619, "denormalizing": 619, "denot": [447, 518, 521, 549, 571], "denoted": [457, 549, 619], "denoting": 549, "dens": [440, 447, 549, 579, 641, 652], "densely": [447, 549], "densemapinfo": 579, "denseset": 563, "density": [459, 641, 652], "deopt": [549, 598], "deopt_arg": 549, "deoptimiz": 598, "dep": [650, 651, 652, 653], "depart": 468, "department": [558, 583], "departur": 581, "depend": [11, 21, 22, 23, 24, 36, 37, 90, 109, 118, 119, 120, 128, 193, 202, 204, 205, 206, 207, 208, 209, 213, 215, 216, 221, 222, 341, 351, 352, 353, 354, 366, 367, 438, 439, 440, 441, 442, 443, 444, 449, 450, 455, 457, 458, 459, 461, 464, 465, 468, 479, 485, 499, 502, 509, 511, 519, 521, 524, 529, 540, 548, 549, 551, 555, 560, 561, 562, 563, 564, 576, 577, 579, 580, 588, 589, 593, 596, 609, 610, 613, 615, 618, 621, 637, 638, 642, 648, 649, 653], "depended": [459, 615], "dependenc": [443, 455, 457, 459, 472, 485, 501, 508, 510, 511, 517, 521, 537, 540, 541, 548, 549, 551, 563, 577, 581, 589, 607, 610, 615], "dependencegraphbuild": 508, "dependency": [455, 457, 485, 489, 508, 528, 549, 581, 587, 594], "dependent": [445, 447, 459, 464, 470, 485, 489, 493, 511, 514, 519, 524, 545, 581, 582, 586, 593, 594, 599, 608, 614, 615, 618], "depending": [24, 35, 37, 42, 46, 88, 133, 209, 220, 222, 231, 287, 292, 297, 318, 332, 354, 365, 367, 376, 420, 436, 438, 439, 440, 443, 444, 457, 464, 468, 485, 490, 505, 509, 511, 516, 518, 524, 525, 536, 537, 540, 541, 546, 549, 554, 564, 566, 571, 579, 581, 591, 598, 603, 604, 608, 614, 615, 638, 649], "depict": 508, "depicted": [485, 508], "deplib": [447, 513], "deploi": 594, "deploy": 594, "deployed": 510, "deploying": [578, 594], "deployment": 594, "deprec": [509, 563, 616], "deprecat": [579, 593], "deprecated": [440, 447, 455, 460, 464, 538, 566, 587, 609, 614], "deprived": 579, "depth": [85, 173, 270, 417, 452, 457, 460, 478, 489, 501, 535, 549, 561, 577, 581, 583, 597, 605, 622, 640, 651], "deref_bytes_nod": 549, "dereferencability": 516, "dereference": [447, 516], "dereferenceability": 549, "dereferenceable_byt": 549, "dereferenceable_or_null": 447, "dereferenced": [456, 536, 577, 579], "dereferencing": [515, 549, 579], "dereferent": [456, 519, 549, 579, 593, 621], "deregisterehfram": 625, "deregisterehframesinprocess": 625, "deriv": [440, 457, 459, 543, 549, 554, 578, 579, 593, 598, 601, 603, 604, 615], "derived": [440, 487, 509, 518, 543, 546, 548, 549, 550, 577, 578, 593, 603, 605, 610, 622, 636, 647], "derivedtyp": [512, 579, 638, 639, 640, 641, 642, 643], "deriving": [601, 604, 615], "desc": [440, 501, 614, 615, 625], "descend": 511, "descending": 549, "descent": [637, 641, 646, 647, 648, 652], "descreas": 438, "describ": [0, 1, 2, 4, 436, 437, 438, 439, 440, 446, 447, 448, 453, 456, 457, 459, 463, 464, 485, 501, 502, 505, 506, 508, 509, 511, 512, 513, 515, 517, 518, 519, 520, 521, 524, 529, 531, 532, 542, 543, 544, 546, 548, 549, 550, 552, 553, 554, 559, 560, 561, 562, 565, 566, 567, 571, 575, 577, 579, 581, 586, 587, 589, 593, 598, 603, 605, 610, 611, 612, 614, 615, 616, 618, 624, 625, 637, 638, 639, 640, 641, 643, 644, 646, 647, 648, 649, 650, 651, 652, 654], "described": [38, 39, 40, 46, 103, 129, 130, 133, 189, 223, 224, 225, 226, 231, 286, 368, 369, 370, 371, 376, 435, 436, 437, 439, 440, 444, 447, 453, 457, 459, 460, 464, 465, 487, 489, 501, 502, 504, 505, 506, 508, 509, 511, 515, 517, 524, 530, 535, 542, 546, 548, 549, 552, 554, 555, 561, 564, 567, 570, 571, 572, 574, 578, 580, 584, 590, 593, 594, 596, 598, 601, 610, 614, 615, 616, 618, 621, 623, 639, 640, 650, 651], "describing": [447, 459, 471, 475, 511, 518, 521, 549, 555, 563, 567, 570, 574, 579, 585, 589, 593, 598, 601, 603, 605, 612, 619, 647], "descript": [4, 5, 6, 7, 12, 40, 46, 51, 52, 56, 85, 103, 110, 130, 133, 137, 173, 189, 194, 225, 226, 231, 236, 237, 270, 286, 326, 342, 370, 371, 376, 381, 382, 386, 417, 435, 436, 437, 438, 439, 440, 443, 444, 447, 453, 456, 459, 463, 501, 506, 510, 511, 518, 520, 521, 525, 529, 532, 536, 537, 543, 544, 548, 549, 550, 561, 562, 565, 577, 578, 579, 586, 587, 591, 593, 596, 601, 605, 607, 612, 614, 616, 618, 643, 644, 656], "descriptor": [447, 485, 549, 567, 593, 596, 614, 644], "deserializ": 601, "deserv": [516, 549], "design": [452, 453, 459, 461, 485, 504, 505, 509, 511, 518, 519, 520, 549, 565, 569, 579, 582, 584, 586, 593, 594, 596, 598, 599, 602, 603, 605, 611, 612, 619, 645, 646, 647, 654], "designat": 505, "designated": [457, 505, 537, 550, 593, 596, 615], "designed": [443, 444, 451, 452, 457, 459, 460, 464, 471, 485, 501, 506, 507, 509, 511, 514, 516, 518, 545, 547, 548, 549, 551, 555, 571, 577, 579, 580, 582, 585, 586, 589, 591, 593, 594, 596, 602, 605, 608, 614, 615, 642, 653], "designer": [603, 646], "designing": [459, 464, 558, 581, 612, 615], "desir": [455, 462, 549, 551, 564, 579, 584, 594, 596, 598, 615, 645, 654], "desired": [440, 444, 451, 455, 460, 462, 464, 478, 501, 513, 516, 518, 546, 549, 551, 554, 577, 582, 589, 590, 593, 594, 596, 598, 609, 614, 615], "desktop": [576, 609], "despit": [444, 457, 501, 539, 549, 581, 584, 593, 594, 598, 602, 603, 605, 615, 618], "dest": [549, 643], "dest1": 549, "dest2": 549, "destarglist": 549, "destin": [53, 138, 238, 324, 383, 436, 437, 438, 439, 440, 449, 457, 468, 511, 513, 516, 525, 549, 594, 609, 614, 642, 643, 644, 653], "destreg": 457, "destroy": [511, 514, 547, 549, 555, 614, 619], "destroyed": [457, 505, 534, 563, 579], "destroying": 505, "destruct": [505, 547, 593, 594, 596], "destructed": 579, "destructively": [596, 645, 654], "destructor": [459, 502, 505, 511, 514, 549, 579, 584, 593, 615], "detail": [438, 443, 444, 448, 450, 455, 456, 457, 458, 460, 465, 470, 478, 479, 485, 489, 490, 501, 502, 505, 509, 510, 511, 514, 517, 518, 519, 520, 521, 536, 537, 543, 544, 548, 549, 550, 551, 552, 558, 559, 561, 562, 563, 564, 567, 571, 574, 577, 579, 580, 581, 583, 584, 594, 598, 599, 601, 607, 609, 610, 614, 615, 616, 617, 619, 622, 623, 624, 625, 638, 641, 642, 645, 646, 647, 649, 652, 653, 654], "detailed": [46, 133, 231, 376, 437, 440, 451, 455, 457, 459, 464, 485, 501, 518, 521, 523, 536, 539, 548, 549, 561, 567, 579, 586, 590, 591, 594, 614], "detailing": 502, "detect": [455, 473, 474, 479, 490, 502, 541, 549, 551, 553, 559, 561, 563, 578, 579, 585, 586, 591, 593, 594, 597, 609, 613, 618, 639, 650], "detect_leak": 551, "detected": [455, 460, 464, 476, 536, 551, 559, 561, 579, 591], "detecthost": [621, 622], "detecting": [440, 485, 536, 583], "detector": [549, 559, 561], "determin": [440, 443, 447, 452, 457, 468, 475, 485, 487, 499, 505, 506, 509, 511, 527, 528, 529, 542, 543, 544, 546, 549, 554, 561, 562, 563, 564, 565, 567, 574, 577, 579, 580, 590, 593, 596, 597, 598, 609, 610, 611, 614, 615, 618, 619, 637, 638, 640, 641, 648, 649, 651, 652], "determined": [440, 447, 455, 464, 465, 505, 506, 509, 532, 542, 549, 562, 563, 564, 569, 574, 579, 585, 590, 593, 594, 599, 608, 619], "determining": [440, 443, 457, 464, 549, 593], "determinism": [455, 551, 591], "deterministic": [442, 443, 451, 453, 457, 468, 487, 497, 549, 551, 579, 601], "deterministicfiniteautomaton": 584, "determinstic": 459, "detr": 584, "detrimental": 459, "dev": [444, 465, 466, 504, 509, 512, 516, 518, 520, 536, 541, 558, 578, 579, 581, 584, 585, 587, 593, 598, 603, 604, 615, 617, 643, 645, 654], "devbuff": 562, "devbufferb": 562, "devbufferc": 562, "devcount": 562, "devel": 588, "develop": [453, 455, 457, 458, 504, 511, 518, 519, 520, 521, 529, 540, 548, 552, 559, 581, 587, 590, 593, 594, 605, 608, 616], "developed": [447, 457, 509, 576, 581, 582, 594, 599, 617], "developer": [450, 455, 456, 459, 504, 509, 516, 520, 537, 542, 544, 548, 549, 558, 576, 580, 581, 584, 585, 593, 599, 616], "developing": [501, 521, 523, 542, 581, 598, 655], "development": [440, 453, 455, 456, 487, 497, 503, 510, 516, 518, 521, 538, 548, 551, 552, 559, 563, 582, 583, 587, 589, 593, 620, 622, 623, 624, 625, 642, 653, 655], "deviat": [457, 459, 513], "devic": [438, 440, 445, 469, 477, 480, 482, 499, 538, 562, 563], "device_enqueue_symbol": 440, "device_fn": 502, "device_only": 502, "devirtualiz": [549, 611], "devirtualized": 549, "devis": 580, "devmajor": 562, "devmeeting": 531, "devminor": 562, "devoid": 457, "dexonsmith": 593, "dfa": [457, 500, 584, 601], "dfapacketiz": 457, "dform_1": 457, "dfpreg": 614, "dfpregsclass": 614, "dfpregsregclass": 614, "dfpregsregisterclass": 614, "dgpu": 440, "dgwp_asan_default_opt": 536, "dh": 605, "di": [440, 455, 478, 484, 489, 593, 605, 623, 644], "di_index": 549, "diagnos": 613, "diagnosed": [476, 485], "diagnosing": [460, 485, 615], "diagnostic": [460, 463, 464, 465, 476, 551, 559, 579, 601, 605], "diagram": [508, 530, 571], "dialect": [549, 557], "dian": [533, 584], "dibasictyp": 593, "dibuild": [593, 644], "dicing": 579, "dicompileun": [593, 644], "dict": 551, "dictated": [459, 579, 592], "dictionary": [464, 549, 551, 601], "dictionary_fil": 551, "did": [443, 459, 505, 509, 511, 517, 543, 549, 561, 579, 581, 587, 589, 615, 622, 639, 641, 642, 645, 650, 652, 653, 654], "didn": [457, 502, 516, 517, 549, 561, 579, 593, 594, 615, 638, 642, 648, 649, 653], "die_offset_bas": 593, "diego": 452, "diegotf": 452, "diexpres": 549, "diexpress": 593, "diff": [439, 446, 459, 463, 478, 504, 509, 510, 518, 521, 549, 577, 578, 579, 581, 582, 598, 607, 609, 614], "differ": [86, 174, 271, 304, 331, 418, 436, 451, 452, 485, 505, 508, 525, 526, 529, 543, 549, 561, 565, 577, 596, 609, 642, 653], "different": [209, 220, 222, 437, 438, 439, 440, 441, 442, 446, 447, 448, 449, 451, 455, 456, 457, 458, 459, 460, 461, 465, 466, 467, 470, 473, 476, 478, 479, 485, 487, 488, 489, 494, 495, 497, 498, 501, 503, 505, 506, 508, 509, 510, 511, 512, 513, 514, 516, 518, 521, 523, 524, 529, 530, 534, 539, 542, 543, 545, 546, 549, 551, 552, 553, 554, 555, 558, 561, 562, 563, 564, 565, 567, 574, 577, 578, 579, 581, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 599, 601, 603, 604, 605, 607, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 622, 625, 639, 640, 642, 643, 644, 645, 649, 650, 651, 652, 653, 654], "differential": [578, 582], "differentiat": [513, 548], "differently": [488, 498, 511, 549, 593, 618, 623, 638], "differing": [443, 458, 549, 593], "difficult": [443, 444, 459, 501, 509, 511, 529, 530, 540, 549, 552, 556, 563, 564, 579, 581, 583, 584, 593, 595, 644, 652], "diffing": 577, "difil": [593, 644], "diflagartificial": 549, "diflagfwddecl": 549, "diflagprototyped": [549, 593], "diflagpublic": 593, "diflagvector": 549, "difwddecl": 549, "dig": [486, 501, 549, 579, 603, 647], "digit": [460, 549, 559, 579], "diglobalvari": 593, "digress": [641, 652], "dijkstr": 583, "dil": [513, 605], "dilexicalblock": 593, "diloc": [460, 593], "dilocalvari": [593, 644], "dim": [0, 11, 549], "dimens": [55, 109, 140, 193, 240, 341, 385, 438, 440, 549], "dimensional": [11, 109, 193, 341, 438, 519, 562, 641, 652], "diminish": 593, "dindex": 614, "dinkumwar": 579, "dinod": [549, 593, 644], "dinstall_gwp_asan_stub": 536, "diplom": 585, "dir": [442, 455, 464, 473, 487, 517, 521, 540, 541, 549, 551, 580, 588, 593, 607], "dir1": 551, "dir2": 551, "dir_to_mount": 445, "direct": [454, 455, 456, 459, 461, 464, 479, 485, 493, 501, 505, 511, 516, 517, 526, 530, 540, 561, 574, 579, 581, 587, 588, 593, 594, 598, 599, 603, 604, 605, 608, 610, 614, 615, 619, 642, 653], "directed": [457, 458, 500, 508, 550, 574, 579, 603, 610, 614], "directedgraph": 508, "directing": 594, "directly": [32, 124, 217, 362, 440, 444, 447, 455, 457, 459, 463, 470, 472, 485, 498, 501, 505, 509, 511, 516, 517, 518, 519, 521, 523, 530, 532, 534, 535, 537, 547, 549, 560, 562, 563, 564, 565, 567, 569, 577, 578, 579, 580, 581, 585, 589, 590, 591, 593, 594, 596, 598, 599, 601, 603, 605, 607, 614, 615, 616, 617, 618, 621, 622, 623, 624, 625, 638, 639, 640, 641, 642, 650, 651, 652, 653], "director": [455, 464, 473, 498, 521, 548, 551, 555, 572, 580, 581, 599, 605, 607, 608, 609], "directory": [440, 442, 454, 455, 456, 457, 459, 464, 468, 472, 473, 487, 493, 500, 502, 509, 516, 520, 523, 535, 537, 539, 540, 541, 542, 548, 549, 551, 567, 572, 575, 579, 580, 581, 584, 587, 588, 589, 593, 599, 605, 606, 607, 608, 609, 614, 615, 616, 644], "dirty": 567, "dis": [463, 469, 470, 488, 521, 523, 609, 642, 653], "disabl": [226, 371, 440, 443, 445, 446, 451, 455, 459, 460, 461, 464, 465, 466, 473, 479, 486, 487, 488, 497, 499, 501, 530, 535, 541, 544, 551, 560, 564, 576, 579, 587, 588, 591, 593, 598, 607, 609, 610, 616, 640, 644, 651], "disable_assert": 576, "disable_nonforced": 610, "disabled": [438, 439, 440, 445, 455, 459, 485, 518, 521, 542, 549, 551, 576, 579, 587, 588, 607, 609, 610, 613, 640, 651], "disableencoding": 605, "disablelazycompil": 579, "disabling": [451, 455, 549, 587, 588, 616], "disadvantag": [501, 545, 552, 579], "disagre": [458, 509, 549, 593], "disallow": [501, 549, 596, 598], "disallowed": [519, 548], "disambiguat": [443, 516, 560], "disambiguated": 560, "disambiguating": 524, "disappear": [514, 521, 593], "disappearing": 538, "disassembl": [454, 463, 488, 500, 521, 523, 548, 549, 551, 557], "disassembled": [454, 557], "disassembler": [457, 517, 557], "disassembleremitt": 601, "disassembling": [457, 488, 587], "disassembly": [454, 488, 500, 549, 579, 586], "discard": [452, 474, 487, 497, 513, 549, 585, 598], "discarded": [439, 457, 460, 487, 497, 501, 505, 513, 521, 549, 581], "discarding": [529, 549, 579], "discharge": 516, "discharged": 516, "disclaim": 456, "disclosing": 590, "disclosur": [509, 590], "discontiguous": 571, "discop": 644, "discourag": [579, 590, 599], "discouraged": [459, 501, 579], "discov": [440, 457, 464, 479, 518, 551, 572, 593], "discover": [505, 510, 551], "discovered": [464, 542, 551, 640, 642, 651, 653], "discovering": [464, 594, 599], "discovery": 440, "discrimin": 618, "discriminat": [543, 549], "discriminated": [457, 618], "discriminator": [459, 543, 549, 601], "discriminatory": 458, "discuss": [459, 501, 504, 509, 520, 521, 522, 523, 543, 549, 558, 563, 571, 574, 579, 581, 590, 593, 594, 598, 605, 615, 622, 623, 625, 637, 648], "discussed": [456, 458, 485, 501, 505, 506, 509, 517, 526, 564, 567, 569, 578, 579, 590, 593, 594, 596, 614, 615, 616], "discussing": [529, 594, 646], "disjoint": [440, 443, 508, 525, 549, 553, 560], "disjointed": 613, "disk": [440, 459, 464, 479, 521, 548, 549, 551, 552, 567, 571, 572, 574, 581, 593, 599, 616, 621], "dislik": 509, "disp32": 457, "dispatch": [511, 549, 563, 579, 594, 596, 637, 648], "dispatch1": 549, "dispatch2": [511, 549], "dispatched": [440, 485, 511, 549, 563, 579], "dispatching": 440, "dispatchwidth": 485, "dispel": 519, "dispflagdefinit": 593, "dispflagdeleted": 593, "dispflagelemental": 593, "dispflagpur": 593, "dispflagrecurs": 593, "displac": [457, 549], "display": [456, 457, 458, 459, 462, 464, 468, 473, 474, 478, 479, 483, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 501, 506, 509, 537, 543, 557, 577, 593, 601, 607, 614, 636, 647], "displayed": [470, 473, 483, 485, 488, 489, 490, 494, 589], "displaying": [457, 473, 478, 485, 489, 492, 493, 587, 608], "disponibl": [0, 1, 2, 3, 4, 5, 6, 7], "disposit": 509, "disproportionat": 593, "disrupt": 556, "disrupting": 594, "dissassembler": 453, "dissect": 562, "dissected": 506, "dist": 579, "distanc": [549, 579, 591, 619, 624, 655], "distiguish": 451, "distilled": 609, "distinct": [443, 447, 457, 460, 475, 478, 508, 509, 511, 519, 524, 530, 536, 548, 549, 577, 579, 585, 591, 593, 609, 610, 614, 638, 649], "distinctly": 524, "distinguish": [446, 506, 509, 524, 532, 549, 579, 584, 598, 599, 645, 654], "distinguished": [505, 524, 549, 579], "distinguishing": 447, "distracting": 509, "distribu": [442, 448, 456, 461, 464, 485, 490, 504, 507, 509, 510, 514, 520, 521, 522, 540, 541, 549, 562, 589, 594, 605, 615, 616], "distribut": [453, 509, 514, 581, 610, 612, 615], "distributed": [448, 453, 459, 485, 509, 510, 521, 523, 549, 607, 610, 616], "distributionexampl": 453, "distros": [539, 541], "disubprogram": [593, 644], "disubroutinetyp": [593, 644], "dityp": 644, "div": [438, 457, 549, 579, 636, 646, 647], "diverg": [519, 641, 652], "divergent": [549, 564], "divers": 539, "divid": [440, 457, 460, 464, 502, 512, 549, 577, 599], "divided": [448, 457, 460, 505, 549, 575, 607], "dividend": [457, 502, 549], "dividing": [470, 485], "diving": 543, "divis": [439, 440, 457, 549, 641, 652], "divisionbyzero": 549, "divisor": [502, 549], "django": [458, 590], "dl": [457, 563, 583, 605, 621, 622, 623, 624, 625], "dlc": [0, 440], "dlclos": 551, "dlibfuzzer_en": 551, "dlibfuzzer_enable_test": 551, "dll": [447, 511, 563, 567, 609], "dllc": 609, "dllexport": [447, 549, 639, 640, 641, 642, 643, 644], "dllexported": 549, "dllimport": [447, 549], "dllstorageclass": [447, 549], "dllvm_binutils_incd": 535, "dllvm_build_instrumented": 539, "dllvm_build_runtim": [517, 521, 539], "dllvm_build_static": 445, "dllvm_config_path": 540, "dllvm_default_target_tripl": 541, "dllvm_dir": 455, "dllvm_enable_assert": [504, 521, 538, 609], "dllvm_enable_backtrac": 521, "dllvm_enable_doxygen": 455, "dllvm_enable_doxygen_qt_help": 455, "dllvm_enable_pic": 541, "dllvm_enable_project": [521, 581], "dllvm_enable_sphinx": 521, "dllvm_experimental_targets_to_build": 614, "dllvm_external_bar_source_d": 455, "dllvm_external_foo_source_d": 455, "dllvm_external_project": 455, "dllvm_include_exampl": 521, "dllvm_include_test": 521, "dllvm_libdir_suffix": 455, "dllvm_profdata_fil": 539, "dllvm_tablegen": [539, 541], "dllvm_target_arch": 541, "dllvm_targets_to_build": [455, 509, 510, 538, 541], "dllvm_use_link": 455, "dllvm_use_sanitiz": 517, "dllvm_use_sanitize_coverag": 517, "dloc": 460, "dlsym": [639, 650], "dmask": [0, 1, 2, 3, 21, 22, 23, 24, 36, 37, 118, 119, 120, 128, 206, 207, 208, 209, 221, 222, 351, 352, 353, 354, 366, 367], "dmb": 444, "dmlc": 583, "dmpqrstx": 468, "dnam": 501, "do": [209, 220, 222, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 468, 469, 473, 476, 479, 485, 486, 487, 488, 490, 492, 493, 497, 498, 501, 502, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 521, 523, 524, 525, 526, 528, 529, 530, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 570, 571, 572, 574, 578, 579, 580, 581, 582, 583, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 602, 603, 604, 605, 607, 608, 609, 610, 613, 614, 616, 617, 618, 619, 621, 622, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "do_on": 505, "do_safepoint": 598, "do_something_with_t": 515, "do_two": 505, "doc": [441, 455, 512, 520, 521, 540, 541, 542, 549, 551, 556, 581, 584, 587, 594, 595, 607, 619, 621, 643], "dockerfil": 612, "dockerized": 510, "doclist": 619, "docu": [0, 1, 2, 3, 4, 5, 6, 7, 437, 438, 439, 440, 443, 444, 446, 447, 448, 452, 453, 455, 456, 457, 458, 459, 463, 479, 501, 502, 506, 509, 511, 512, 513, 518, 519, 521, 523, 524, 534, 537, 538, 540, 541, 542, 543, 544, 546, 548, 549, 550, 552, 554, 555, 556, 559, 560, 562, 563, 565, 566, 569, 571, 574, 576, 577, 579, 586, 587, 588, 590, 593, 595, 596, 598, 599, 601, 603, 604, 605, 609, 611, 612, 614, 616, 617, 618, 639, 650], "document": [438, 444, 453, 455, 456, 503, 504, 509, 510, 512, 517, 518, 520, 521, 523, 525, 526, 537, 543, 548, 549, 551, 556, 562, 579, 581, 583, 584, 586, 587, 593, 595, 598, 600, 601, 603, 604, 606, 607, 609, 612, 615, 638, 639, 644, 650], "documented": [440, 450, 452, 453, 459, 508, 509, 518, 521, 523, 549, 550, 581, 593, 596, 598], "documenting": [459, 595, 601], "documentlist": 619, "documentlisttrait": 619, "doesn": [443, 444, 446, 449, 450, 451, 452, 456, 457, 458, 459, 460, 464, 468, 485, 501, 502, 504, 506, 509, 510, 511, 514, 516, 518, 519, 521, 525, 528, 529, 532, 535, 542, 543, 544, 549, 555, 560, 569, 579, 581, 584, 593, 594, 596, 598, 599, 602, 603, 604, 609, 615, 617, 619, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "dofinaliz": 614, "dog": [501, 584], "doing": [442, 443, 450, 455, 457, 459, 466, 479, 482, 499, 501, 504, 509, 512, 515, 516, 518, 521, 527, 539, 540, 543, 549, 552, 560, 579, 590, 593, 594, 598, 599, 610, 615, 616, 617, 622, 623, 636, 638, 639, 641, 644, 645, 647, 649, 654], "doinitializ": [551, 614, 622, 623, 624, 625, 639, 640, 641, 642, 644], "dollar": 538, "domain": [457, 518, 524, 549, 553, 594, 602, 605, 614, 645, 654], "domin": [553, 560, 642, 653], "dominat": [518, 549, 553, 560], "dominated": [549, 577, 607], "dominating": 560, "dominator": [502, 579, 615], "dominatorset": 615, "dominatortre": [584, 615], "dominatortreebas": 579, "dondooneiter": 451, "door": 543, "doorbel": 440, "dootherthing": 459, "dopartialredundancyelimin": 501, "dor": [585, 613], "dosomething": [459, 594], "dosomethinginterestingwithmyap": 551, "dot": [485, 542, 578, 579, 593, 616, 617], "doubl": [439, 440, 447, 457, 460, 501, 502, 503, 523, 524, 543, 549, 555, 561, 579, 587, 591, 601, 603, 614, 619, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "double_typ": [649, 650, 651, 652, 653], "doublescalarty": 549, "doubletyp": 579, "doubleword": 549, "doubling": 577, "doubly": [456, 579, 592], "doubt": [543, 556, 595], "dovetail": [642, 653], "down": [443, 444, 446, 449, 451, 457, 458, 461, 465, 466, 501, 506, 509, 511, 519, 521, 530, 532, 543, 544, 549, 551, 560, 561, 564, 576, 577, 578, 579, 581, 585, 593, 594, 605, 608, 614, 615, 616, 620, 621, 623, 637, 640, 641, 643, 644, 645, 646, 648, 651, 652, 654], "downcast": 543, "download": [455, 509, 510, 521, 523, 535, 537, 540, 541, 542, 551, 579, 588, 609], "download_link": 583, "download_prerequisit": 521, "downloaded": [587, 614], "downsid": [509, 551, 579], "downstream": [448, 476, 581], "downward": 549, "doxgyen": 455, "doxing": 458, "doxygen": [455, 517, 521, 523, 543, 579, 586], "dozen": [516, 538, 579], "dpp": 437, "dpp16_ctrl": 0, "dpp8_sel": 0, "dpp_ctrl": [2, 3, 6, 7], "dpython_execut": 538, "dr": 513, "draft": [444, 452, 458, 525, 549, 590, 593], "dragging": 578, "dragonegg": [457, 509], "dramatic": 594, "dramatically": [459, 465, 501, 521, 549, 579, 594, 639, 650], "drastically": 599, "draw": [440, 484], "drawback": [456, 501, 509, 579, 624], "drectv": 493, "driv": [440, 453, 473, 502, 503, 535, 538, 540, 541, 548, 551, 552, 562, 564, 580, 585, 609, 636, 639, 640, 641, 642, 643, 644, 647, 650, 651, 652, 653], "driven": [457, 460, 501, 505, 577, 609, 614, 639, 642, 645, 647, 650, 653, 654], "driving": [582, 585, 598], "drop": [459, 463, 487, 494, 496, 497, 509, 549, 555, 578], "dropdown": 578, "dropped": [509, 549, 555, 579, 593, 610], "dropping": [509, 549], "drowned": 608, "dry": [539, 584], "ds": 440, "ds_add_f32": [0, 2, 3], "ds_add_rtn_f32": [0, 2, 3], "ds_add_rtn_u32": [0, 1, 2, 3], "ds_add_rtn_u64": [0, 1, 2, 3], "ds_add_src2_f32": [0, 2, 3], "ds_add_src2_u32": [0, 1, 2, 3], "ds_add_src2_u64": [0, 1, 2, 3], "ds_add_u32": [0, 1, 2, 3, 440], "ds_add_u64": [0, 1, 2, 3], "ds_and_b32": [0, 1, 2, 3], "ds_and_b64": [0, 1, 2, 3], "ds_and_rtn_b32": [0, 1, 2, 3], "ds_and_rtn_b64": [0, 1, 2, 3], "ds_and_src2_b32": [0, 1, 2, 3], "ds_and_src2_b64": [0, 1, 2, 3], "ds_append": [0, 1, 2, 3], "ds_atomic": 440, "ds_bpermute_b32": [0, 2, 3], "ds_cmpst_b32": [0, 1, 2, 3], "ds_cmpst_b64": [0, 1, 2, 3], "ds_cmpst_f32": [0, 1, 2, 3, 440], "ds_cmpst_f64": [0, 1, 2, 3], "ds_cmpst_rtn_b32": [0, 1, 2, 3], "ds_cmpst_rtn_b64": [0, 1, 2, 3], "ds_cmpst_rtn_f32": [0, 1, 2, 3], "ds_cmpst_rtn_f64": [0, 1, 2, 3], "ds_condxchg32_rtn_b64": [0, 1, 2, 3], "ds_consum": [0, 1, 2, 3], "ds_dec_rtn_u32": [0, 1, 2, 3], "ds_dec_rtn_u64": [0, 1, 2, 3], "ds_dec_src2_u32": [0, 1, 2, 3], "ds_dec_src2_u64": [0, 1, 2, 3], "ds_dec_u32": [0, 1, 2, 3], "ds_dec_u64": [0, 1, 2, 3], "ds_gws_barri": [0, 1, 2, 3], "ds_gws_in": [0, 1, 2, 3], "ds_gws_sema_br": [0, 1, 2, 3], "ds_gws_sema_p": [0, 1, 2, 3], "ds_gws_sema_release_all": [0, 1, 2, 3], "ds_gws_sema_v": [0, 1, 2, 3], "ds_inc_rtn_u32": [0, 1, 2, 3], "ds_inc_rtn_u64": [0, 1, 2, 3], "ds_inc_src2_u32": [0, 1, 2, 3], "ds_inc_src2_u64": [0, 1, 2, 3], "ds_inc_u32": [0, 1, 2, 3], "ds_inc_u64": [0, 1, 2, 3], "ds_load": 440, "ds_max_f32": [0, 1, 2, 3], "ds_max_f64": [0, 1, 2, 3], "ds_max_i32": [0, 1, 2, 3], "ds_max_i64": [0, 1, 2, 3], "ds_max_rtn_f32": [0, 1, 2, 3], "ds_max_rtn_f64": [0, 1, 2, 3], "ds_max_rtn_i32": [0, 1, 2, 3], "ds_max_rtn_i64": [0, 1, 2, 3], "ds_max_rtn_u32": [0, 1, 2, 3], "ds_max_rtn_u64": [0, 1, 2, 3], "ds_max_src2_f32": [0, 1, 2, 3], "ds_max_src2_f64": [0, 1, 2, 3], "ds_max_src2_i32": [0, 1, 2, 3], "ds_max_src2_i64": [0, 1, 2, 3], "ds_max_src2_u32": [0, 1, 2, 3], "ds_max_src2_u64": [0, 1, 2, 3], "ds_max_u32": [0, 1, 2, 3], "ds_max_u64": [0, 1, 2, 3], "ds_min_f32": [0, 1, 2, 3], "ds_min_f64": [0, 1, 2, 3], "ds_min_i32": [0, 1, 2, 3], "ds_min_i64": [0, 1, 2, 3], "ds_min_rtn_f32": [0, 1, 2, 3], "ds_min_rtn_f64": [0, 1, 2, 3, 440], "ds_min_rtn_i32": [0, 1, 2, 3], "ds_min_rtn_i64": [0, 1, 2, 3], "ds_min_rtn_u32": [0, 1, 2, 3], "ds_min_rtn_u64": [0, 1, 2, 3], "ds_min_src2_f32": [0, 1, 2, 3], "ds_min_src2_f64": [0, 1, 2, 3], "ds_min_src2_i32": [0, 1, 2, 3], "ds_min_src2_i64": [0, 1, 2, 3], "ds_min_src2_u32": [0, 1, 2, 3], "ds_min_src2_u64": [0, 1, 2, 3], "ds_min_u32": [0, 1, 2, 3], "ds_min_u64": [0, 1, 2, 3], "ds_mskor_b32": [0, 1, 2, 3], "ds_mskor_b64": [0, 1, 2, 3], "ds_mskor_rtn_b32": [0, 1, 2, 3], "ds_mskor_rtn_b64": [0, 1, 2, 3], "ds_nop": [0, 1, 2, 3], "ds_or_b32": [0, 1, 2, 3], "ds_or_b64": [0, 1, 2, 3], "ds_or_rtn_b32": [0, 1, 2, 3], "ds_or_rtn_b64": [0, 1, 2, 3], "ds_or_src2_b32": [0, 1, 2, 3], "ds_or_src2_b64": [0, 1, 2, 3], "ds_ordered_count": [0, 1, 2, 3], "ds_permute_b32": [0, 2, 3], "ds_read2_b32": [0, 1, 2, 3], "ds_read2_b64": [0, 1, 2, 3], "ds_read2st64_b32": [0, 1, 2, 3], "ds_read2st64_b64": [0, 1, 2, 3], "ds_read_b128": [0, 1, 2, 3], "ds_read_b32": [0, 1, 2, 3], "ds_read_b64": [0, 1, 2, 3], "ds_read_b96": [0, 1, 2, 3], "ds_read_i16": [0, 1, 2, 3], "ds_read_i8": [0, 1, 2, 3], "ds_read_i8_d16": [0, 3], "ds_read_i8_d16_h": [0, 3], "ds_read_u16": [0, 1, 2, 3], "ds_read_u16_d16": [0, 3], "ds_read_u16_d16_h": [0, 3], "ds_read_u8": [0, 1, 2, 3], "ds_read_u8_d16": [0, 3], "ds_read_u8_d16_h": [0, 3], "ds_rsub_rtn_u32": [0, 1, 2, 3], "ds_rsub_rtn_u64": [0, 1, 2, 3], "ds_rsub_src2_u32": [0, 1, 2, 3], "ds_rsub_src2_u64": [0, 1, 2, 3], "ds_rsub_u32": [0, 1, 2, 3], "ds_rsub_u64": [0, 1, 2, 3], "ds_stor": 440, "ds_sub_rtn_u32": [0, 1, 2, 3], "ds_sub_rtn_u64": [0, 1, 2, 3], "ds_sub_src2_u32": [0, 1, 2, 3], "ds_sub_src2_u64": [0, 1, 2, 3], "ds_sub_u32": [0, 1, 2, 3], "ds_sub_u64": [0, 1, 2, 3], "ds_swizzle_b32": [0, 1, 2, 3, 438], "ds_wrap_rtn_b32": [0, 1, 2, 3], "ds_write2_b32": [0, 1, 2, 3], "ds_write2_b64": [0, 1, 2, 3], "ds_write2st64_b32": [0, 1, 2, 3], "ds_write2st64_b64": [0, 1, 2, 3], "ds_write_b128": [0, 1, 2, 3], "ds_write_b16": [0, 1, 2, 3], "ds_write_b16_d16_h": [0, 3], "ds_write_b32": [0, 1, 2, 3], "ds_write_b64": [0, 1, 2, 3], "ds_write_b8": [0, 1, 2, 3], "ds_write_b8_d16_h": [0, 3], "ds_write_b96": [0, 1, 2, 3], "ds_write_src2_b32": [0, 1, 2, 3], "ds_write_src2_b64": [0, 1, 2, 3, 440], "ds_wrxchg2_rtn_b32": [0, 1, 2, 3], "ds_wrxchg2_rtn_b64": [0, 1, 2, 3], "ds_wrxchg2st64_rtn_b32": [0, 1, 2, 3], "ds_wrxchg2st64_rtn_b64": [0, 1, 2, 3], "ds_wrxchg_rtn_b32": [0, 1, 2, 3], "ds_wrxchg_rtn_b64": [0, 1, 2, 3], "ds_xor_b32": [0, 1, 2, 3], "ds_xor_b64": [0, 1, 2, 3], "ds_xor_rtn_b32": [0, 1, 2, 3], "ds_xor_rtn_b64": [0, 1, 2, 3], "ds_xor_src2_b32": [0, 1, 2, 3], "ds_xor_src2_b64": [0, 1, 2, 3], "dsa": 550, "dsc": 617, "dse": [444, 550], "dsl": [602, 605], "dso": 454, "dso_local": [447, 549, 593], "dso_path": 465, "dso_preempt": [447, 549], "dsolocal": 549, "dsos": 444, "dst": [0, 1, 2, 3, 4, 5, 6, 7, 226, 371, 436, 457, 546, 603, 605, 614], "dst0": [0, 1, 2, 3], "dst1": [0, 1, 2, 3], "dst_sel": [0, 2, 3, 6, 7, 440], "dst_unused": [0, 2, 3, 6, 7, 440], "dstindex": 614, "dsym": [462, 478, 488, 498], "dsymtab": 493, "dsymutil": [463, 478], "dt": [493, 584, 615], "dtest_suite_profile_generat": 607, "dtest_suite_profile_us": 607, "dtest_suite_run_typ": 607, "dtest_suite_subdir": 607, "dtor": [514, 549, 593], "dtrac": 453, "duck": 579, "due": [439, 440, 443, 449, 452, 454, 455, 457, 460, 502, 505, 507, 509, 511, 515, 516, 518, 521, 525, 538, 540, 544, 549, 552, 561, 572, 579, 581, 588, 591, 594, 598, 604, 610, 611, 618, 623, 638], "dumb": [645, 654], "dummy": [457, 514, 555, 577, 609, 614], "dummy_main": 517, "dummytargetmachin": 614, "dump": [447, 451, 457, 460, 462, 463, 470, 479, 486, 487, 490, 492, 493, 500, 563, 567, 579, 593, 601, 605, 615, 619, 638, 639, 640, 644, 649, 650, 651], "dump_modul": [649, 650, 651, 652, 653], "dump_valu": [649, 650, 651, 652, 653], "dumpabl": 615, "dumpattr": 601, "dumped": [478, 489, 490, 587], "dumping": [478, 487, 488, 489, 536, 593], "dumpmymapdoc": 619, "duo": 440, "duplicat": [443, 450, 457, 459, 468, 501, 513, 549, 550, 561, 563, 572, 579, 593, 598], "duplicated": [453, 505, 516, 549, 593, 637, 648], "duplicating": [505, 516, 577, 598], "dupliqu": [453, 456, 493, 509, 552, 575, 593, 601, 605], "durat": [443, 457, 593, 615, 616, 618, 621], "during": [440, 442, 448, 449, 451, 455, 456, 457, 479, 485, 490, 501, 502, 504, 505, 509, 510, 511, 512, 515, 516, 520, 521, 526, 536, 539, 542, 546, 549, 551, 552, 553, 561, 564, 567, 579, 581, 583, 585, 588, 589, 594, 596, 598, 608, 609, 614, 619, 638, 649], "dvariabl": 455, "dw_apple_property_assign": 593, "dw_apple_property_atomic": 593, "dw_apple_property_class": 593, "dw_apple_property_copy": 593, "dw_apple_property_get": 593, "dw_apple_property_nonatomic": 593, "dw_apple_property_null_reset": 593, "dw_apple_property_nullability": 593, "dw_apple_property_readonly": 593, "dw_apple_property_readwrit": 593, "dw_apple_property_retain": 593, "dw_apple_property_set": 593, "dw_apple_property_strong": 593, "dw_apple_property_unsafe_unretained": 593, "dw_apple_property_weak": 593, "dw_at_alignment": 593, "dw_at_apple_property": 593, "dw_at_apple_property_attribut": 593, "dw_at_apple_property_get": 593, "dw_at_apple_property_set": 593, "dw_at_artificial": 593, "dw_at_call_site_parameter_valu": 549, "dw_at_decl_lin": 593, "dw_at_declar": 593, "dw_at_deleted": 593, "dw_at_elemental": 593, "dw_at_entry_pc": 593, "dw_at_export_symbol": 549, "dw_at_high_pc": 593, "dw_at_loc": 460, "dw_at_low_pc": 593, "dw_at_mips_linkage_nam": 593, "dw_at_nam": [460, 478, 593], "dw_at_rang": 593, "dw_ate_address": 549, "dw_ate_boolean": 549, "dw_ate_float": [549, 644], "dw_ate_signed": [549, 593], "dw_ate_signed_char": 549, "dw_ate_unsigned": [549, 593], "dw_ate_unsigned_char": 549, "dw_form_": 593, "dw_form_addr": 593, "dw_form_data1": 593, "dw_form_data2": 593, "dw_form_data4": 593, "dw_form_flag_present": 593, "dw_form_line_strp": 440, "dw_form_ref1": 593, "dw_form_ref2": 593, "dw_form_ref4": 593, "dw_form_ref8": 593, "dw_form_ref_udat": 593, "dw_form_sec_offset": 460, "dw_form_strp": [460, 593], "dw_form_strx1": 593, "dw_form_xxx": 593, "dw_lang_c": [593, 644], "dw_lang_c99": [549, 593], "dw_lnct_llvm_sourc": 440, "dw_macinfo_defin": 549, "dw_macinfo_start_fil": 549, "dw_macinfo_undef": 549, "dw_op_addr": 593, "dw_op_bit_piec": 549, "dw_op_breg": 549, "dw_op_bregx": 549, "dw_op_constu": 549, "dw_op_convert": 549, "dw_op_deref": 549, "dw_op_lan": 440, "dw_op_llvm_convert": 549, "dw_op_llvm_entry_valu": 549, "dw_op_llvm_fragment": 549, "dw_op_llvm_tag_offset": 549, "dw_op_minus": 549, "dw_op_piec": 440, "dw_op_plus": [549, 593], "dw_op_plus_uconst": [549, 593], "dw_op_stack_valu": [549, 593], "dw_op_swap": 549, "dw_op_xderef": [440, 549], "dw_tag": 593, "dw_tag_apple_property": 593, "dw_tag_array_typ": [549, 593], "dw_tag_atomic_typ": [549, 593], "dw_tag_base_typ": [549, 593], "dw_tag_class_typ": [549, 593], "dw_tag_const_typ": [549, 593], "dw_tag_enumeration_typ": [549, 593], "dw_tag_file_typ": 593, "dw_tag_friend": 549, "dw_tag_gnu_template_param_pack": 549, "dw_tag_gnu_template_template_param": 549, "dw_tag_imported_modul": 549, "dw_tag_inherit": 549, "dw_tag_inlined_subroutin": 593, "dw_tag_interface_typ": 593, "dw_tag_label": 593, "dw_tag_memb": [549, 593], "dw_tag_namelist": 593, "dw_tag_namespac": 593, "dw_tag_packed_typ": 593, "dw_tag_pointer_typ": [549, 593], "dw_tag_ptr_to_member_typ": [549, 593], "dw_tag_reference_typ": [549, 593], "dw_tag_restrict_typ": [549, 593], "dw_tag_set_typ": 593, "dw_tag_shared_typ": 593, "dw_tag_string_typ": 593, "dw_tag_structure_typ": [549, 593], "dw_tag_subprogram": 593, "dw_tag_subrange_typ": 593, "dw_tag_subroutine_typ": 593, "dw_tag_template_value_paramet": 549, "dw_tag_typedef": [549, 593], "dw_tag_union_typ": [549, 593], "dw_tag_unspecified_typ": [549, 593], "dw_tag_vari": 593, "dw_tag_volatile_typ": [549, 593], "dw_tag_xxx": 593, "dw_virtuality_pure_virtual": 549, "dwarf": [457, 463, 487, 488, 498, 506, 507, 511, 518, 549, 550, 552, 565, 579, 587, 596, 614, 654], "dwarf2": 644, "dwarfdebug": 593, "dwarfdump": [460, 462, 463, 484, 593], "dwarfencoding": 511, "dwarfnumber": 614, "dwarfregnum": 614, "dwel": 638, "dwo": 487, "dwoid": 549, "dword": [8, 9, 10, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 227, 232, 233, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 294, 295, 296, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 377, 378, 379, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440], "dwp": 498, "dx": 605, "dx10": 440, "dx10_clamp": 440, "dyld": 554, "dyldinfo": 486, "dylib": [488, 563, 576, 609, 621], "dyn": [440, 492, 493, 505], "dyn_cast": [459, 543, 586, 601, 614], "dyn_cast_or_null": 579, "dyn_switch": 459, "dynamic": [440, 445, 453, 461, 465, 466, 473, 485, 486, 488, 492, 493, 499, 505, 513, 516, 518, 519, 536, 543, 551, 554, 563, 577, 579, 580, 591, 593, 594, 598, 610, 611, 619, 639, 641], "dynamic_cast": [459, 543, 579, 642, 643, 644], "dynamic_shared_point": 440, "dynamically": [440, 447, 451, 453, 465, 485, 486, 505, 507, 514, 525, 543, 549, 567, 579, 592, 594, 596, 603, 616, 641, 650, 652], "dynamiclibrary": [623, 624, 625], "dynamiclibrarysearchgenerator": [563, 621, 622], "dynamicsharedpoint": 440, "dynstr": 440, "dynsym": 440, "d\u00e9calag": 130, "d\u00e9cis": 620, "d\u00e9criv": 620, "d\u00e9tail": 620, "d\u00e9velopp": 620, "e": [439, 440, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 465, 472, 473, 474, 479, 485, 486, 487, 489, 492, 493, 497, 498, 501, 502, 503, 506, 509, 510, 511, 513, 515, 516, 518, 519, 520, 521, 523, 524, 525, 527, 529, 536, 537, 538, 539, 542, 543, 544, 545, 548, 549, 551, 553, 555, 558, 560, 561, 562, 563, 565, 566, 567, 571, 572, 574, 575, 576, 577, 578, 579, 581, 584, 585, 587, 590, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 607, 608, 609, 610, 611, 614, 615, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "e1": [440, 587], "e2": 440, "e3": 485, "e_entry": 440, "e_ident": 440, "e_machin": 440, "e_typ": 440, "ea_r": 457, "eabi": [465, 540], "each": [21, 22, 23, 24, 35, 36, 37, 46, 118, 119, 120, 127, 128, 133, 206, 207, 208, 209, 220, 221, 222, 226, 231, 351, 352, 353, 354, 365, 366, 367, 371, 376, 438, 439, 440, 442, 443, 444, 446, 447, 448, 451, 453, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 468, 472, 473, 474, 478, 479, 482, 483, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 501, 502, 505, 506, 508, 509, 511, 512, 514, 516, 517, 518, 519, 520, 521, 524, 525, 529, 530, 531, 532, 536, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 554, 555, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 571, 574, 575, 576, 579, 580, 581, 584, 585, 587, 588, 589, 590, 593, 594, 596, 597, 598, 599, 601, 603, 604, 605, 607, 608, 609, 610, 611, 614, 615, 616, 617, 618, 619, 621, 622, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "eag": [563, 579, 622], "eagerly": [563, 622], "eao": 579, "earli": [440, 444, 447, 459, 460, 505, 506, 516, 530, 535, 548, 563, 571, 581, 593, 594, 603, 614, 621, 638, 639], "early": [502, 505, 534, 540, 549, 551, 555, 562, 564, 567, 579, 587, 594, 614, 615, 642, 653], "earlyclobb": 555, "earlycs": 516, "earn": 581, "eas": [538, 549, 598], "easi": [440, 441, 443, 444, 450, 452, 457, 458, 459, 460, 472, 504, 505, 507, 509, 512, 514, 518, 521, 541, 544, 548, 549, 560, 562, 563, 577, 578, 579, 581, 584, 588, 594, 601, 605, 609, 615, 637, 638, 642, 644, 648, 649, 653], "easiest": [444, 527, 536, 540, 542, 556, 595, 614, 615, 616, 639, 645, 654], "easily": [450, 457, 471, 501, 508, 516, 518, 544, 548, 558, 560, 577, 579, 589, 593, 594, 596, 598, 599, 601, 609, 615, 619, 621, 643], "easy": [447, 451, 453, 455, 457, 459, 464, 509, 518, 521, 535, 541, 543, 548, 549, 551, 556, 561, 563, 579, 581, 582, 584, 588, 593, 594, 595, 601, 603, 608, 609, 615, 619, 622, 623, 636, 637, 638, 639, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 653, 654], "eat": [636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "eating": 501, "eatomtypecuoffset": 593, "eatomtypedieoffset": 593, "eatomtypedietag": 593, "eatomtypenameflag": 593, "eatomtypenull": 593, "eatomtypetag": 593, "eatomtypetypeflag": 593, "eax": [457, 460, 485, 513, 549, 555, 593, 594, 603, 605, 614], "eb": 485, "ebenders_test": 507, "ebnf": 618, "ebp": [457, 511, 605], "ebx": [457, 513, 605], "ec": [489, 579, 643], "ecc": 440, "echo": [445, 464, 479, 521, 556, 581, 595], "echoed": [464, 498], "eckel": 579, "ecma": 567, "economic": 458, "ecosystem": [548, 575, 579, 581], "ecsubstreamsiz": 567, "ecx": [457, 513, 549, 603, 605], "ed": [444, 450, 502, 579, 594, 612], "edge": [448, 451, 457, 459, 460, 502, 508, 511, 513, 518, 520, 549, 551, 553, 581, 585, 594, 615, 616, 617], "edi": [457, 460, 555, 594, 605], "edit": [440, 489, 567, 584], "edited": 579, "editing": [455, 463, 579], "editor": [459, 509, 521, 556, 595], "edu": [445, 583, 594], "educ": 440, "educational": 458, "edx": [457, 485, 549, 594, 603, 605], "ee": 439, "eee": 485, "ef_amdgpu_mach_amdgcn_gfx1010": 440, "ef_amdgpu_mach_amdgcn_gfx1011": 440, "ef_amdgpu_mach_amdgcn_gfx1012": 440, "ef_amdgpu_mach_amdgcn_gfx600": 440, "ef_amdgpu_mach_amdgcn_gfx601": 440, "ef_amdgpu_mach_amdgcn_gfx700": 440, "ef_amdgpu_mach_amdgcn_gfx701": 440, "ef_amdgpu_mach_amdgcn_gfx702": 440, "ef_amdgpu_mach_amdgcn_gfx703": 440, "ef_amdgpu_mach_amdgcn_gfx704": 440, "ef_amdgpu_mach_amdgcn_gfx801": 440, "ef_amdgpu_mach_amdgcn_gfx802": 440, "ef_amdgpu_mach_amdgcn_gfx803": 440, "ef_amdgpu_mach_amdgcn_gfx810": 440, "ef_amdgpu_mach_amdgcn_gfx900": 440, "ef_amdgpu_mach_amdgcn_gfx902": 440, "ef_amdgpu_mach_amdgcn_gfx904": 440, "ef_amdgpu_mach_amdgcn_gfx906": 440, "ef_amdgpu_mach_amdgcn_gfx908": 440, "ef_amdgpu_mach_amdgcn_gfx909": 440, "ef_amdgpu_mach_non": 440, "ef_amdgpu_mach_r600_bart": 440, "ef_amdgpu_mach_r600_caicos": 440, "ef_amdgpu_mach_r600_cayman": 440, "ef_amdgpu_mach_r600_cedar": 440, "ef_amdgpu_mach_r600_cypress": 440, "ef_amdgpu_mach_r600_junip": 440, "ef_amdgpu_mach_r600_r600": 440, "ef_amdgpu_mach_r600_r630": 440, "ef_amdgpu_mach_r600_redwood": 440, "ef_amdgpu_mach_r600_rs880": 440, "ef_amdgpu_mach_r600_rv670": 440, "ef_amdgpu_mach_r600_rv710": 440, "ef_amdgpu_mach_r600_rv730": 440, "ef_amdgpu_mach_r600_rv770": 440, "ef_amdgpu_mach_r600_sumo": 440, "ef_amdgpu_mach_r600_turk": 440, "ef_amdgpu_mach_xxx": 440, "ef_amdgpu_sram_ecc": 440, "ef_amdgpu_xnack": 440, "effect": [438, 443, 455, 457, 459, 460, 465, 485, 487, 492, 493, 501, 502, 518, 521, 525, 526, 538, 549, 577, 579, 581, 587, 593, 594, 598, 609, 610, 614, 615, 616, 623, 640, 641, 651, 652], "effecting": [457, 525], "effectively": [443, 447, 457, 516, 519, 522, 549, 557, 577, 579, 585, 593, 599, 604, 610, 615], "effectiveness": [516, 591, 615], "efficiency": [579, 609], "efficient": [439, 440, 443, 447, 457, 459, 509, 514, 518, 520, 521, 543, 547, 549, 551, 563, 577, 579, 587, 591, 593, 594, 598, 599, 601, 603, 611, 615, 637, 639, 648, 650], "efficiently": [443, 447, 457, 549, 557, 579, 585, 593, 594, 599, 611, 615], "effort": [440, 459, 509, 512, 516, 549, 554, 577, 593, 594, 596, 599, 616, 638, 649], "eflag": [555, 593, 603, 605], "eg": 591, "egregious": [458, 509], "egrep": 521, "eh": [455, 466, 478, 505, 549, 554, 614], "eh_fram": [494, 511, 587], "eh_label": 555, "eh_return": 511, "ehashfunctiondjb": 593, "ehcleanup": 505, "ehobj": 511, "ehptr": 511, "ehselector": 505, "ei_abivers": 440, "ei_class": 440, "ei_dat": 440, "ei_osab": 440, "eieio": 549, "eight": [457, 549], "eip": 605, "eiplog": 549, "eith": [11, 24, 35, 37, 57, 89, 103, 189, 209, 220, 222, 286, 354, 365, 367, 387, 421, 435, 438, 439, 440, 443, 444, 446, 447, 451, 453, 455, 457, 459, 460, 464, 465, 468, 472, 473, 479, 485, 487, 497, 498, 499, 501, 504, 505, 509, 511, 512, 513, 516, 518, 519, 521, 524, 525, 528, 529, 535, 536, 544, 549, 550, 551, 553, 554, 555, 560, 561, 562, 563, 564, 566, 567, 569, 574, 577, 579, 581, 584, 590, 593, 594, 596, 598, 603, 605, 607, 608, 609, 610, 611, 614, 615, 616, 617, 618, 636, 637, 638, 640, 644, 645, 647, 648, 650, 651, 654], "elaborat": [579, 594], "elapsed": 485, "elected": 509, "electric": 536, "electron": 587, "eleg": [637, 639, 640, 645, 648, 650, 651, 654], "elem_func": 593, "element": [21, 22, 23, 24, 35, 36, 37, 118, 119, 120, 127, 128, 206, 207, 208, 209, 220, 221, 222, 351, 352, 353, 354, 365, 366, 367, 438, 440, 443, 446, 447, 456, 457, 460, 485, 505, 508, 512, 518, 524, 525, 529, 550, 556, 561, 562, 577, 579, 585, 587, 593, 595, 598, 601, 603, 604, 610, 611, 613, 614, 618, 619, 621], "element_siz": 549, "element_typ": [649, 650, 651, 652, 653], "elemental": 593, "elementtyp": 549, "elementwis": 525, "elf": [447, 457, 486, 488, 492, 494, 496, 498, 502, 503, 549, 554, 563, 593, 596, 609, 616], "elf32": 487, "elf64": [487, 617], "elf64_rel": 440, "elf_cgprofil": 513, "elf_word": 513, "elf_xword": 513, "elfabiversion_amdgpu_hs": 440, "elfabiversion_amdgpu_mesa3d": 440, "elfabiversion_amdgpu_pal": 440, "elfclass32": 440, "elfclass64": 440, "elfdata2lsb": 440, "elfosabi_amdgpu_hs": 440, "elfosabi_amdgpu_mesa3d": 440, "elfosabi_amdgpu_pal": 440, "elfosabi_non": 440, "elfv2": 503, "eli": 502, "elid": 547, "elided": [505, 518, 603], "eligibl": [485, 505, 577], "elim": 587, "elimin": [443, 457, 465, 501, 514, 516, 521, 527, 550, 555, 562, 564, 579, 593, 598, 639, 650], "eliminat": [440, 443, 451, 452, 457, 459, 501, 509, 514, 516, 518, 535, 562, 577, 579, 594, 614, 637, 639, 640, 641, 642, 648, 650, 651, 652, 653], "eliminatecallframepseudoinstr": 614, "eliminated": [443, 457, 516, 518, 549, 577, 579], "eliminateframeindex": 614, "eliminating": [459, 505, 518, 577, 579, 614, 623], "elis": 505, "else": [457, 458, 460, 466, 478, 479, 483, 501, 502, 505, 506, 509, 512, 523, 535, 536, 539, 549, 551, 555, 560, 561, 562, 577, 579, 581, 594, 595, 598, 599, 604, 609, 610, 613, 614, 619, 622, 623, 624, 625, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654], "else_": [651, 652, 653], "else_bb": [651, 652, 653], "else_val": [651, 652, 653], "elsebb": [640, 641, 642, 643, 644], "elsev": [640, 641, 642, 643, 644], "elsewher": [438, 439, 501, 509, 579, 598, 601, 614], "elt": [525, 549], "eltsizeparam": [447, 549], "eltty": [447, 644], "em": 540, "em_amdgpu": 440, "emac": [459, 521, 605], "email": [444, 458, 504, 509, 520, 521, 537, 542, 550, 578, 590, 645, 654], "emailed": [509, 520], "emailing": [458, 509, 521, 590], "embed": [440, 447, 455, 462, 549, 593, 594, 645, 654], "embedded": [440, 447, 462, 487, 506, 509, 517, 518, 530, 540, 549, 566, 569, 575, 577, 579, 585, 593, 604, 640, 641, 651, 652], "embedding": [440, 549, 567, 579, 594, 603], "embrac": 509, "emergent": 509, "emerging": 507, "emerson": 584, "emersonconcern": 584, "emiss": [462, 518, 549, 593, 596, 614, 642, 653], "emissionkind": [549, 593], "emit": [444, 447, 451, 457, 460, 462, 463, 465, 466, 478, 485, 487, 488, 490, 497, 500, 501, 502, 505, 506, 507, 511, 513, 514, 516, 518, 519, 521, 523, 544, 546, 549, 554, 562, 565, 572, 574, 577, 579, 587, 589, 593, 594, 596, 598, 601, 610, 614, 617, 622, 637, 638, 640, 641, 642, 644, 648, 649, 651, 652, 653], "emit_22": 614, "emitalignment": 518, "emitbyt": 614, "emitcall": 579, "emitconst": 614, "emitconstantpool": 614, "emitconstpooladdress": 614, "emitepilogu": 614, "emitexternalsymboladdress": 614, "emitfnstart": 457, "emitfunctionstub": 614, "emitglobaladdress": 614, "emitinstruct": [457, 614], "emitint32": 518, "emitjumptableaddress": 614, "emitjumptableinfo": 614, "emitlabel": 457, "emitlabelplusoffset": 518, "emitleadingfent": 444, "emitloadlinked": 444, "emitloc": 644, "emitmaskedatomiccmpxchgintrinsic": 444, "emitmaskedatomicrmwintrinsic": 444, "emitnam": 459, "emitobject": 554, "emitprologu": [511, 614], "emitpseudoexpansionlowering": 601, "emitstacksizesect": 457, "emitstoreconditional": 444, "emitsymbolattribut": 457, "emitt": [500, 507, 549, 601, 603, 640, 651], "emitted": [440, 444, 446, 447, 457, 462, 513, 516, 546, 549, 550, 554, 555, 562, 567, 589, 593, 596, 598, 601, 610, 614, 615, 622, 638, 640, 644, 645, 649, 651], "emitter": 601, "emitting": [444, 447, 455, 465, 489, 506, 513, 549, 577, 593, 596, 601, 614, 640, 643, 644, 645, 651, 654], "emittrailingfent": 444, "emitvalu": 457, "emmc": 538, "emphasiz": 459, "emphasized": [556, 595], "employ": [549, 582, 594], "employed": [579, 585], "emptied": 591, "empty": [226, 371, 440, 455, 456, 459, 464, 479, 498, 501, 505, 509, 511, 518, 521, 549, 551, 555, 561, 569, 579, 581, 593, 594, 598, 603, 604, 609, 610, 614, 619, 637, 638, 640, 644, 648, 649, 651], "empty_subregsset": 614, "emul": 540, "emulat": [457, 512, 516, 549, 563, 579, 581], "emulated": [485, 549], "emulator": [466, 540], "enabl": [226, 371, 438, 440, 453, 455, 457, 460, 461, 464, 465, 466, 467, 469, 473, 477, 479, 480, 482, 485, 487, 488, 493, 497, 499, 501, 505, 506, 514, 515, 517, 518, 521, 523, 527, 528, 534, 535, 540, 551, 552, 557, 560, 563, 564, 576, 579, 581, 584, 587, 589, 593, 598, 605, 609, 610, 613, 614, 616, 617, 619, 621, 622, 623, 639, 643], "enable_": 543, "enable_dx10_clamp": 440, "enable_exception_address_watch": 440, "enable_exception_fp_denormal": 440, "enable_exception_fp_denormal_sourc": 440, "enable_exception_ieee_754_fp": 440, "enable_exception_ieee_754_fp_division_by_zero": 440, "enable_exception_ieee_754_fp_inexact": 440, "enable_exception_ieee_754_fp_invalid_oper": 440, "enable_exception_ieee_754_fp_overflow": 440, "enable_exception_ieee_754_fp_underflow": 440, "enable_exception_int_divide_by": 440, "enable_exception_int_divide_by_zero": 440, "enable_exception_memory": 440, "enable_ieee_mod": 440, "enable_mem_ordered": 440, "enable_optimized": 576, "enable_sgpr_": 440, "enable_sgpr_dispatch_id": 440, "enable_sgpr_dispatch_ptr": 440, "enable_sgpr_flat_scratch": 440, "enable_sgpr_flat_scratch_in": 440, "enable_sgpr_grid": 440, "enable_sgpr_kernarg": 440, "enable_sgpr_kernarg_segment_ptr": 440, "enable_sgpr_privat": 440, "enable_sgpr_private_segment": 440, "enable_sgpr_private_segment_buff": 440, "enable_sgpr_private_segment_siz": 440, "enable_sgpr_private_segment_wavefront_offset": 440, "enable_sgpr_queue_ptr": 440, "enable_sgpr_workgroup": 440, "enable_sgpr_workgroup_id": 440, "enable_sgpr_workgroup_id_x": 440, "enable_sgpr_workgroup_id_y": 440, "enable_sgpr_workgroup_id_z": 440, "enable_sgpr_workgroup_info": 440, "enable_trap_handl": 440, "enable_vgpr": 440, "enable_vgpr_workitem_id": 440, "enable_wavefront_size32": 440, "enable_wgp_mod": 440, "enablecompilecallback": 625, "enabled": [438, 439, 440, 442, 446, 455, 457, 459, 460, 462, 464, 465, 466, 468, 473, 485, 497, 501, 502, 504, 507, 516, 517, 518, 521, 536, 549, 551, 552, 576, 579, 584, 587, 591, 592, 593, 604, 605, 607, 609, 610, 613, 615, 616], "enabling": [455, 456, 517, 527, 549, 579, 581, 585, 587, 616, 625], "encapsul": [545, 585], "encapsulat": [579, 585], "encapsulated": 543, "encapsulating": 440, "enclosed": [438, 460, 603, 609], "enclosing": [447, 498, 505, 579, 596, 644], "encod": [440, 444, 447, 457, 470, 506, 511, 518, 524, 549, 561, 585, 593, 596, 598, 607, 611, 618], "encodability": 511, "encodecompactunwindregisterswithoutfram": 457, "encoded": [109, 193, 341, 437, 439, 440, 446, 447, 457, 465, 466, 470, 505, 511, 513, 549, 575, 593, 596, 598, 601, 614], "encoding": [439, 444, 470, 475, 485, 490, 503, 513, 518, 524, 549, 579, 586, 593, 596, 598, 605, 612, 614, 618, 619, 642, 644, 653], "encomp": 538, "encompass": 545, "encount": [540, 566, 581], "encounter": [474, 511, 549, 614], "encountered": [440, 447, 457, 460, 486, 516, 579, 604, 617, 622], "encountering": 579, "encourag": [450, 459, 509, 520, 521, 579, 581, 645, 646, 654], "encouraged": [509, 544, 577, 579, 582, 584], "encouraging": 458, "end": [439, 442, 443, 446, 447, 450, 451, 452, 453, 455, 457, 458, 460, 462, 468, 469, 476, 479, 485, 487, 489, 496, 501, 502, 506, 509, 511, 513, 515, 516, 518, 521, 523, 529, 536, 538, 541, 542, 543, 551, 552, 553, 556, 559, 560, 561, 563, 564, 567, 571, 577, 578, 579, 580, 581, 587, 588, 589, 594, 595, 596, 599, 602, 603, 604, 605, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "end_": [651, 652, 653], "end_amd_kernel_code_t": 440, "end_amdgpu_metadat": 440, "end_amdhsa_kernel": 440, "end_cond": [651, 652, 653], "endcod": 459, "endcond": [640, 641, 642, 643, 644, 653], "ended": [544, 549, 590, 650], "endexpr": [640, 641, 642, 643, 644, 653], "endforeach": 456, "endfunct": 456, "endian": [440, 447, 457, 529, 549, 575, 589, 593, 612, 614, 618], "endianess": 618, "endianness": [446, 457, 614, 618], "endif": [456, 459, 501, 502, 506, 536, 551, 599, 604, 621, 622, 623, 624, 625, 639, 640, 641, 642, 643, 644, 645, 654], "ending": [440, 459, 506, 521, 523, 550, 609, 614], "endl": 643, "endloop": [640, 641, 642, 643, 644, 653], "endmacro": 456, "endur": 509, "enforc": [444, 457, 459, 460, 485, 501, 509, 518, 521, 530, 549, 579, 581, 590, 591, 596, 603], "enforced": [459, 549], "enforcing": 579, "engaging": 509, "engin": [440, 472, 503, 550, 551, 584, 594, 612, 640, 650, 651], "engine": [514, 519, 577, 645, 654], "enginebuild": [554, 623, 624, 625], "engineer": 581, "engineering": [508, 519, 561, 638, 645, 646, 647, 654], "english": 459, "enhanc": [509, 587, 593, 615, 645, 654], "enhanced": [500, 503, 638, 639, 640, 641, 642, 644, 649, 650, 651, 652, 653], "enhancing": [459, 612], "enjoy": 537, "enough": [444, 450, 455, 457, 459, 479, 485, 489, 501, 509, 516, 519, 530, 536, 549, 557, 561, 579, 580, 592, 593, 596, 599, 609, 614, 615, 621, 637, 640, 644, 648, 649, 651], "enqueu": 440, "enqueue_kernel": 440, "enqueued": 440, "enqueueing": 440, "enrich": 585, "ensu": 442, "ensuing": 614, "ensur": [440, 443, 444, 447, 449, 454, 457, 458, 459, 460, 470, 472, 489, 499, 501, 504, 509, 511, 513, 514, 515, 516, 518, 521, 527, 536, 542, 549, 563, 574, 577, 578, 579, 581, 593, 594, 596, 598, 609, 613, 614, 615, 641, 642, 644, 649, 653], "ensuring": [454, 455, 457, 549, 593, 617], "enter": [451, 455, 457, 464, 505, 511, 516, 542, 553, 563, 578, 579, 593, 594, 617, 621, 638, 639, 650], "entered": [440, 447, 505, 511, 549, 579, 593, 618, 637, 648], "entering": [511, 521, 560, 563, 594], "entier": 130, "entir": [446, 447, 457, 459, 460, 464, 468, 470, 473, 478, 489, 496, 501, 505, 509, 518, 544, 548, 549, 551, 560, 564, 567, 570, 572, 574, 577, 579, 593, 594, 607, 608, 609, 610, 613, 614, 615, 619, 638, 639, 645, 649, 650, 654], "entirely": [443, 444, 459, 502, 516, 518, 519, 529, 530, 549, 560, 562, 563, 564, 571, 575, 591, 598], "entirety": [509, 572, 598], "entit": [447, 459, 549, 579], "entity": [439, 549, 572, 579, 596], "entranc": 549, "entri": [440, 443, 447, 457, 460, 478, 485, 488, 490, 492, 493, 511, 513, 515, 518, 549, 551, 555, 569, 579, 581, 587, 589, 593, 598, 603, 611, 614, 616, 621], "entry": [440, 443, 447, 448, 455, 457, 460, 473, 476, 478, 479, 484, 485, 486, 494, 505, 511, 512, 516, 518, 519, 521, 525, 526, 543, 547, 548, 550, 553, 554, 555, 556, 560, 561, 562, 563, 569, 570, 574, 579, 585, 587, 589, 593, 594, 595, 596, 598, 599, 611, 614, 615, 616, 618, 619, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "entry_arg": 618, "entry_block": 653, "entrypoint": [505, 549, 551], "entrysym": 563, "entrytoken": 457, "entr\u00e9": [53, 138, 238, 324, 383], "enum": [441, 443, 457, 459, 489, 500, 501, 511, 512, 529, 543, 545, 546, 549, 566, 567, 572, 574, 579, 593, 601, 605, 614, 619, 636, 637, 638, 639, 640, 641, 642, 643, 644, 656], "enumcas": 619, "enumer": [500, 549, 561, 567, 572, 574, 579, 593, 601, 603, 614, 618, 619], "enumerat": [437, 447, 457, 518, 561], "enumerated": [439, 501, 549, 572, 618, 619], "enumerating": [553, 594], "enumerator": [447, 489, 549], "env": 588, "environment": [444, 455, 457, 459, 460, 464, 467, 473, 498, 501, 503, 510, 513, 518, 521, 535, 536, 576, 577, 579, 591, 599, 607, 616, 617, 639], "envis": 582, "envp": 507, "eof": [460, 551, 604, 618, 636, 637, 638, 639, 640, 641, 642, 643, 644], "eor": 549, "ep_earlyaspossibl": 615, "ep_fulllinktimeoptimizationlast": 615, "epilog": 614, "epilogu": [518, 549, 587, 593, 610, 614], "episod": [640, 651], "epoch": 619, "epsilon": 479, "eptr": 549, "eq": [447, 505, 549, 555, 562, 587, 603, 604], "equal": [438, 439, 440, 443, 447, 448, 449, 457, 464, 489, 490, 501, 502, 511, 524, 525, 536, 549, 561, 567, 570, 571, 574, 579, 594, 603, 614, 637, 640, 641, 642, 643, 644, 648, 651, 652, 653], "equal_rang": 579, "equalit": 516, "equality": [439, 514, 543, 549, 561, 579, 640, 651], "equally": [574, 594], "equivalent": [440, 444, 446, 447, 455, 456, 457, 459, 460, 462, 466, 468, 473, 475, 485, 487, 488, 490, 491, 492, 493, 494, 497, 501, 502, 511, 513, 518, 519, 524, 525, 527, 529, 540, 550, 555, 561, 562, 563, 565, 577, 579, 587, 591, 593, 598, 603, 604, 622, 645, 654], "equivalently": [518, 524], "eras": [579, 593, 640, 641, 642, 643, 644], "erased": 444, "erasefromparent": [579, 614, 638, 639, 640, 641, 642, 643, 644], "erasur": 579, "ere": 460, "eref": 503, "erefrm": 503, "ericsson": 549, "erlang": 549, "erolling": 607, "err": [458, 562, 563, 579, 615, 623, 624, 625, 638, 639, 640, 641, 642, 643, 644], "err2": 579, "errat": 503, "errc": 579, "erred": 549, "errno": [443, 549, 613], "erroneous": [501, 521], "error": [439, 440, 443, 451, 455, 456, 457, 460, 461, 462, 464, 465, 466, 468, 469, 470, 472, 473, 474, 477, 479, 480, 482, 485, 487, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 509, 511, 513, 517, 518, 521, 535, 536, 540, 541, 542, 544, 549, 550, 551, 552, 559, 562, 563, 577, 580, 583, 586, 587, 588, 589, 601, 603, 604, 605, 609, 614, 615, 616, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "error_cod": 643, "error_exitcod": 551, "errorasoutparamet": 579, "errorcodetoerror": 579, "errorhandling": 621, "errorinfo": 579, "errorlist": 579, "errorortoexpected": 579, "errortoerrorcod": 579, "escap": [443, 460, 487, 497, 518, 549, 552, 604, 641, 652], "escaped": [464, 511, 549, 555, 557], "escaping": [443, 549, 609], "eschnet": 583, "escudo": 591, "esi": [457, 555, 594, 605], "esoteric": 603, "esp": [457, 460, 605], "especially": [444, 449, 455, 458, 459, 464, 485, 490, 501, 502, 509, 510, 516, 538, 549, 550, 561, 577, 579, 580, 585, 593, 594, 595, 599, 614, 621], "espresso": 608, "essenc": [509, 594], "essential": [447, 540, 558, 561, 614], "essentially": [444, 485, 499, 518, 579, 581, 582, 593, 594, 604], "essentiel": 6, "establish": [505, 509, 511, 549, 581, 594, 614, 650], "established": [457, 516, 518, 549, 594, 598], "estim": 585, "estimat": [485, 587, 613], "estimated": 561, "estimating": [448, 585], "et_dyn": 440, "et_rel": 440, "etc": [40, 130, 225, 370, 440, 442, 443, 444, 447, 452, 455, 457, 459, 460, 461, 485, 489, 504, 505, 509, 510, 518, 519, 520, 521, 523, 529, 539, 541, 542, 545, 549, 550, 551, 552, 553, 555, 560, 561, 563, 564, 567, 570, 576, 577, 578, 581, 586, 588, 590, 591, 593, 594, 599, 601, 603, 605, 607, 610, 612, 614, 615, 616, 617, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "ethnicity": 458, "eurollvm": 517, "european": 585, "evalu": [456, 547, 549, 562, 563, 587, 594, 614, 639, 640, 645, 651, 654], "evaluat": [453, 456, 460, 549, 551, 561, 585, 594, 604, 614, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "evaluated": [439, 455, 456, 512, 549, 604, 625, 639, 640, 641, 642, 650, 651, 652, 653], "evaluating": [443, 459, 460, 506, 518, 519, 549, 587], "evaluator": 587, "evaluted": 459, "even": [439, 440, 443, 445, 447, 448, 452, 453, 457, 458, 459, 460, 464, 466, 475, 486, 487, 489, 497, 502, 505, 509, 510, 515, 516, 521, 524, 532, 538, 539, 543, 549, 551, 552, 553, 556, 557, 561, 563, 565, 571, 572, 575, 578, 579, 581, 584, 587, 594, 598, 599, 601, 602, 603, 605, 608, 609, 613, 615, 619, 621, 622, 623, 625, 639, 640, 641, 642, 645, 647, 650, 652, 653, 654], "event": [455, 458, 485, 551, 553, 558, 579, 590, 596, 598, 616, 617, 618, 620], "event_siz": 618, "eventual": [594, 598], "eventually": [441, 460, 511, 524, 532, 543, 547, 549, 551, 560, 577, 593, 598, 608, 621, 640, 651], "ever": [440, 443, 459, 509, 548, 549, 570, 579, 601, 622, 623, 645, 654], "evergreen": 440, "every": [440, 443, 444, 446, 447, 448, 449, 451, 453, 456, 457, 460, 464, 473, 485, 487, 488, 490, 499, 501, 505, 506, 509, 511, 514, 516, 518, 520, 524, 537, 538, 542, 543, 548, 549, 550, 551, 553, 558, 559, 560, 561, 562, 563, 565, 566, 571, 574, 577, 579, 581, 588, 591, 592, 593, 594, 596, 597, 598, 599, 601, 603, 604, 605, 607, 608, 609, 611, 615, 618, 622, 637, 639, 640, 642, 644, 645, 650, 651, 653, 654], "everybody": 509, "everyon": [509, 590, 645, 654], "everything": [444, 451, 453, 456, 457, 501, 502, 504, 519, 521, 522, 523, 535, 538, 539, 541, 542, 549, 562, 581, 594, 609, 615, 622, 637, 638, 640, 641, 647, 648, 649, 651, 652], "everywher": [560, 561, 609, 619, 639, 650], "evex": 601, "evidenced": 519, "evident": [584, 594], "evil": [446, 579, 605], "evolu": 615, "evolutionary": 551, "evolv": [450, 458, 552], "evolved": 506, "evolving": 509, "evt": 524, "ex": [501, 509, 542, 546, 588], "ex2": 562, "exact": [444, 459, 471, 478, 501, 511, 518, 521, 536, 548, 549, 552, 555, 564, 565, 572, 577, 579, 593, 594, 598, 601, 608, 614, 615], "exact_artifact_path": 551, "exactly": [438, 440, 443, 446, 447, 455, 459, 460, 464, 490, 501, 505, 511, 513, 518, 525, 530, 543, 548, 549, 561, 567, 571, 577, 578, 579, 582, 589, 590, 593, 598, 599, 601, 603, 615, 617, 619, 639, 650], "exactmatch": 549, "examin": [457, 473, 489, 501, 505, 554, 594, 609, 614, 621], "examined": [549, 598, 614, 622], "examining": [451, 542, 569, 579, 593], "exampl": [12, 40, 41, 46, 76, 103, 131, 133, 161, 189, 194, 225, 226, 227, 231, 260, 286, 342, 370, 371, 372, 376, 407, 435, 436, 437, 438, 439, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 455, 456, 457, 459, 460, 461, 475, 476, 485, 487, 489, 494, 497, 499, 501, 502, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 524, 526, 529, 530, 537, 538, 540, 541, 542, 543, 544, 545, 547, 548, 550, 553, 555, 556, 557, 560, 561, 562, 563, 565, 566, 567, 571, 572, 576, 577, 578, 580, 581, 582, 584, 585, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 607, 608, 609, 610, 611, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "exampletest": 464, "exceed": [46, 103, 133, 189, 231, 286, 376, 435, 438, 440, 459, 549, 593, 594], "exceeded": 591, "exceedingly": 594, "excel": 579, "excellent": [443, 456, 514, 521, 558, 579, 614], "except": [436, 437, 438, 440, 443, 444, 446, 447, 453, 455, 457, 458, 460, 464, 466, 469, 470, 487, 497, 501, 502, 503, 505, 509, 513, 516, 519, 524, 525, 528, 536, 548, 555, 559, 561, 562, 563, 564, 567, 579, 581, 586, 593, 596, 598, 599, 601, 603, 604, 609, 610, 614, 615, 619, 621, 622, 623, 624, 625, 638, 639, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "exceptional": 549, "excerpt": 562, "excess": [459, 465, 466, 551], "exchang": [521, 579], "exchange2_": 583, "exchange2_r": 583, "excis": 549, "excised": 549, "excited": [645, 654], "exciting": 542, "exclam": 549, "exclud": [445, 457, 460, 486, 489, 509, 549, 584], "excluded": [461, 489, 490, 509, 546, 549, 589], "excluding": [452, 468, 485, 549, 610], "exclus": [444, 457, 483, 501, 549, 563], "exclusionary": 458, "exclusively": [598, 611], "excp_en": 440, "excp_en_msb": 440, "exctyp": 511, "exctype1": 511, "exctypen": 511, "excus": [450, 458], "exe": [463, 498, 523, 537, 567, 575, 609, 644], "exec": [65, 69, 71, 72, 73, 74, 75, 77, 79, 80, 82, 83, 134, 145, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 168, 169, 171, 172, 232, 248, 252, 254, 255, 256, 257, 258, 259, 261, 263, 265, 266, 268, 269, 289, 290, 294, 295, 301, 302, 303, 322, 326, 327, 328, 329, 377, 386, 387, 395, 399, 401, 402, 403, 404, 405, 406, 408, 410, 412, 413, 415, 416, 438, 445, 461, 551, 587], "exec_h": 439, "exec_lo": 439, "exec_tim": 607, "execinfo": 536, "execu": [443, 448, 449, 454, 457, 461, 473, 479, 485, 490, 502, 504, 505, 506, 507, 511, 515, 516, 522, 523, 536, 549, 550, 551, 553, 554, 585, 587, 593, 594, 596, 598, 608, 610, 612, 613, 614, 615, 616, 617, 618, 621, 622, 623, 624, 625, 639, 640, 650, 651], "execut": [52, 237, 382, 439, 440, 444, 448, 451, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 468, 473, 474, 485, 486, 487, 488, 492, 493, 494, 496, 497, 498, 503, 505, 506, 511, 513, 516, 518, 521, 523, 527, 540, 544, 549, 551, 553, 562, 563, 564, 567, 579, 580, 585, 592, 593, 594, 596, 599, 607, 609, 610, 613, 615, 621, 622, 623, 624, 625, 637, 638, 640, 641, 644, 645, 648, 649, 651], "executable_format_error": 579, "executed": [440, 459, 464, 468, 473, 479, 485, 499, 501, 505, 506, 510, 511, 516, 518, 521, 529, 549, 553, 554, 562, 563, 577, 579, 585, 594, 598, 601, 604, 608, 609, 610, 613, 615, 622, 642, 653], "executeprogramandw": 599, "executeremoteexpr": 625, "executing": [440, 451, 456, 464, 466, 485, 505, 511, 521, 549, 550, 551, 594, 598, 609, 610, 615, 618, 621, 622, 639, 640, 650, 651], "executionengin": [457, 507, 521, 563, 579, 584, 621, 622, 623, 624, 625, 650, 651, 652, 653], "executionsess": [563, 621, 622, 623, 624, 625], "executionutil": [621, 622], "execv": 599, "execz": [47, 71, 72, 73, 74, 75, 77, 80, 82, 83, 134, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 168, 169, 171, 232, 254, 255, 256, 257, 258, 259, 261, 265, 266, 268, 289, 290, 294, 295, 301, 302, 303, 322, 327, 328, 329, 330, 377, 401, 402, 403, 404, 405, 406, 408, 412, 413, 415], "exedepsfix": 532, "exeext": 609, "exeges": [463, 500, 587], "exempl": [110, 130], "exempt": 459, "exercis": [517, 609, 621, 645, 654], "exercised": [591, 598], "exhaust": [453, 457, 458, 516, 521, 579], "exhausted": [518, 529, 591], "exhib": [451, 549, 594], "exhibit": 444, "exigent": 579, "exist": [438, 443, 444, 447, 452, 453, 455, 456, 457, 459, 460, 464, 468, 471, 473, 486, 489, 505, 509, 511, 513, 518, 519, 544, 548, 549, 551, 553, 559, 560, 572, 575, 577, 579, 580, 581, 583, 585, 593, 596, 598, 599, 603, 615, 619, 621, 638, 639, 640, 641, 642, 643, 644, 651], "existed": [460, 509, 549, 590, 593], "existent": [457, 547, 549, 572, 596, 619], "existing": [444, 455, 457, 459, 462, 464, 465, 468, 473, 477, 485, 490, 502, 505, 511, 512, 516, 518, 523, 529, 530, 532, 535, 537, 549, 551, 555, 563, 567, 572, 577, 578, 579, 581, 584, 585, 587, 591, 593, 594, 595, 598, 599, 602, 603, 605, 609, 610, 612, 614, 619, 638, 639, 640, 641, 643, 644, 645, 649, 651, 652, 654], "exit": [448, 452, 457, 483, 488, 507, 511, 514, 516, 521, 549, 551, 553, 561, 562, 563, 579, 581, 585, 593, 594, 608, 610, 615, 616, 617, 618, 624, 625, 640, 642, 643, 644, 645, 651, 654], "exit5": 562, "exitcod": 464, "exitcond": [549, 610], "exited": [507, 511, 549, 618], "exiting": [511, 516, 551, 553, 579, 640, 651], "exitonerr": [563, 579, 625], "exitonerror": 625, "exn": [505, 549], "exp": [76, 161, 260, 407, 449, 613], "exp0": 607, "exp1": 607, "exp2": [607, 613], "exp_cnt": [103, 189, 286, 435], "expand": [441, 444, 452, 457, 459, 473, 492, 493, 506, 512, 524, 549, 584, 587, 593, 605, 609, 619], "expandatomicrmwin": 444, "expanded": [444, 457, 470, 492, 493, 500, 506, 514, 549, 561, 581, 584, 587, 603, 616], "expanding": [457, 509, 512, 545, 584, 587, 616], "expandinlineasm": 614, "expandop": 512, "expans": [444, 456, 457, 473, 506, 516, 545, 549, 551, 555, 604, 614], "expansionregiontag": 506, "expcnt": [103, 189, 286, 435, 440], "expcnt_sat": [103, 189, 286, 435], "expect": [88, 332, 420, 440, 443, 445, 446, 447, 450, 456, 457, 460, 464, 471, 473, 501, 505, 509, 519, 525, 529, 545, 551, 561, 566, 570, 574, 577, 579, 589, 594, 596, 597, 598, 599, 604, 609, 618, 619, 637, 640, 647, 648, 651], "expected": [439, 444, 448, 449, 453, 457, 459, 460, 464, 473, 485, 501, 505, 509, 515, 516, 518, 521, 523, 529, 548, 549, 551, 559, 560, 579, 584, 589, 591, 592, 593, 594, 596, 598, 601, 603, 607, 608, 609, 615, 618, 621, 622, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "expected_val": 549, "expectedtoerroror": 579, "expecting": [444, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "expens": [444, 453, 455, 459, 485, 501, 502, 511, 515, 526, 529, 532, 549, 551, 561, 577, 579, 594, 614, 615], "expensive_check": 459, "exper": [584, 607, 622, 639, 646, 650], "experiencing": 451, "experient": [455, 458, 538, 556, 560, 561, 593, 621, 639, 646, 650], "experiment": [512, 584], "experimental": [440, 454, 455, 509, 537, 551, 586, 587, 594], "experimenting": 598, "expertis": 582, "expir": 581, "explain": [443, 446, 455, 457, 459, 460, 485, 509, 561, 579, 584, 612, 615, 618, 642, 646, 653], "explained": [438, 439, 468, 514, 579, 592, 616], "explaining": [510, 578, 646, 647], "explan": [453, 455, 510, 514, 521, 543, 549, 561, 590], "explanatory": [509, 567], "explandload": 549, "explic": [440, 444, 457, 458, 459, 479, 490, 501, 508, 509, 513, 514, 515, 518, 519, 521, 525, 529, 543, 548, 549, 550, 553, 561, 562, 579, 585, 590, 594, 615, 621, 640, 641, 642, 643, 644, 645, 650, 651, 652, 653, 654], "explicitly": [440, 442, 443, 455, 457, 459, 460, 501, 502, 505, 509, 514, 516, 518, 519, 547, 549, 551, 554, 555, 563, 577, 578, 579, 593, 594, 598, 603, 608, 610, 613, 638, 645, 649, 654], "expliqu": [0, 1, 2, 3, 4, 5, 6, 7], "exploit": [594, 639], "exploited": 515, "exploiting": [585, 594], "explor": [479, 578, 579], "explored": [505, 598], "exploring": [616, 617], "exponent": 439, "exponential": [501, 525, 549], "exponentially": 577, "export": [76, 85, 103, 161, 173, 189, 260, 270, 286, 407, 417, 435, 438, 443, 455, 488, 489, 493, 535, 542, 549, 581, 588, 639, 641], "exported": [457, 473, 488, 489, 501, 521, 549, 552, 563, 575, 587, 623, 624, 625, 641], "exporting": [473, 549], "exportsymbol": 549, "expos": [440, 443, 457, 459, 464, 489, 518, 521, 549, 563, 579, 598, 615], "exposed": [443, 444, 451, 457, 501, 549, 601, 642, 653], "exposesreturnstwic": 555, "exposing": [444, 552, 577, 587, 594], "exposit": [549, 647], "expr": [439, 460, 480, 500, 549, 584, 603, 637, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "expr0lh": 506, "expr0rh": 506, "expr1lh": 506, "expr1rh": 506, "expr_prec": [648, 649, 650, 651, 652, 653], "expraddr": 625, "exprast": [624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 648], "express": [40, 46, 103, 130, 133, 189, 225, 231, 286, 370, 376, 435, 438, 440, 457, 458, 459, 460, 464, 473, 478, 480, 487, 489, 497, 501, 505, 514, 516, 518, 519, 521, 528, 550, 551, 555, 563, 579, 587, 589, 593, 594, 596, 601, 604, 609, 614, 615, 619, 621, 625, 636, 639, 641, 642, 643, 644, 645, 647, 650, 652, 653, 654], "expressed": [440, 443, 457, 475, 512, 549, 584, 618, 619], "expressing": 579, "exprprec": [637, 638, 639, 640, 641, 642, 643, 644], "exprsymbol": [639, 640, 641, 642], "ext": [446, 549, 615], "extend": [438, 439, 454, 457, 508, 512, 513, 516, 518, 525, 543, 549, 563, 575, 579, 585, 594, 597, 598, 602, 603, 605, 621, 636, 637, 639, 640, 641, 642, 645, 646, 647, 648, 650, 651, 652, 653, 654], "extended": [444, 460, 479, 487, 497, 501, 513, 521, 525, 549, 579, 594, 597, 598, 603, 605, 614, 622, 637, 641, 645, 648, 652, 654], "extending": [457, 459, 464, 501, 525, 549, 581, 585, 594, 598, 602, 605, 612, 614, 621, 639, 645, 646, 647, 650, 654, 655], "extens": [440, 454, 455, 457, 459, 462, 464, 465, 473, 481, 503, 509, 511, 512, 514, 516, 518, 524, 534, 548, 549, 556, 559, 561, 577, 579, 582, 586, 587, 594, 598, 601, 613, 614, 637, 641, 642, 648, 652, 653, 656], "extensibility": [501, 579, 596], "extensibl": [440, 457, 501, 549, 593, 599, 641, 652], "extensioan": 588, "extensively": [579, 584], "extent": [471, 509, 518, 519, 520, 549, 584], "exterior": 598, "extern": [446, 486, 498, 501, 535, 536, 551, 552, 591, 614, 615, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "extern_weak": [447, 549], "external": [440, 447, 454, 455, 457, 466, 486, 489, 502, 509, 516, 538, 540, 549, 551, 552, 554, 558, 561, 562, 563, 565, 576, 579, 583, 588, 589, 611, 613, 614, 615, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654], "externallinkag": [638, 639, 640, 641, 642, 643, 644, 649], "externally": [468, 538, 549, 552, 584, 594, 598, 604, 611], "externally_initialized": [447, 549], "externallyinitialized": 549, "externalstorag": 501, "extra": [440, 447, 449, 455, 456, 459, 501, 510, 511, 516, 517, 521, 540, 541, 544, 549, 551, 559, 561, 571, 577, 579, 581, 584, 587, 588, 590, 592, 594, 598, 601, 603, 607], "extra_sourc": 456, "extract": [457, 463, 468, 483, 487, 525, 529, 530, 549, 579, 593, 594, 598, 601, 603, 605, 616], "extract_subreg": 555, "extract_subvector": 457, "extracted": [460, 468, 480, 506, 511, 523, 530, 549, 579, 593, 594, 614], "extractel": 446, "extracting": [468, 480, 579], "extractloop": 577, "extras": [489, 577], "extrem": [549, 551, 615, 623, 655], "extremely": [443, 444, 447, 451, 457, 509, 515, 521, 536, 546, 549, 577, 579, 593, 603, 604, 614, 642, 653], "exynosm3model": 614, "f": [439, 444, 446, 457, 459, 460, 462, 467, 468, 469, 473, 477, 478, 480, 482, 486, 487, 488, 490, 496, 498, 499, 501, 502, 505, 507, 511, 514, 518, 519, 521, 547, 549, 551, 562, 564, 567, 577, 579, 581, 592, 593, 594, 598, 603, 604, 611, 613, 614, 615, 617, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "f0": [485, 549, 614], "f1": [519, 549, 561, 562, 614], "f107": 562, "f108": 562, "f110": 562, "f128": [549, 614], "f16": [38, 42, 223, 287, 292, 297, 318, 368, 436, 438, 439, 440, 549], "f16x2": [0, 2, 3, 6, 7], "f16x4": 7, "f1f2": 561, "f2": [479, 519, 549, 561, 562, 614], "f2_1": 614, "f2_2": 614, "f3": [562, 614], "f31": [549, 614], "f32": [0, 1, 2, 3, 6, 7, 39, 42, 129, 224, 287, 292, 297, 318, 369, 436, 438, 439, 440, 457, 502, 524, 549, 562, 614], "f32x16": 7, "f32x2": [0, 1], "f32x32": 7, "f32x4": 7, "f3_1": 614, "f3_12": 614, "f3_2": 614, "f3_3": 614, "f4": 562, "f4rc": 457, "f5": 562, "f64": [0, 1, 438, 439, 440, 457, 549, 562, 614], "f64x2": [0, 1], "f80": 549, "f88": 562, "f89": 562, "f90": 562, "f91": 562, "f92": 562, "f93": 562, "f934": 614, "f94": 562, "f95": 562, "f96": 562, "f97": 562, "f98": 562, "f99": 562, "fa": [439, 457], "fab": 613, "fac": [594, 615], "faced": [459, 592, 599], "facilit": [459, 501, 514, 518, 523, 529, 558, 580, 581, 582, 593, 599, 621], "facilitat": [454, 459, 509, 549, 579, 580, 585, 587, 593, 619], "facilitating": 585, "facility": [443, 464], "facing": [516, 601], "fact": [443, 452, 457, 459, 485, 501, 502, 505, 509, 511, 514, 516, 519, 521, 543, 548, 549, 550, 560, 563, 579, 587, 590, 594, 597, 603, 604, 615, 623, 639, 641, 642, 645, 650, 652, 653, 654], "fact0": 561, "fact1": 561, "factor": [440, 457, 459, 529, 549, 569, 579, 585, 603, 605, 610, 613], "factored": [457, 605], "factorial": 577, "factory": [459, 579], "fadd": [441, 457, 512, 524, 562, 614, 638, 639, 640, 642, 649, 650, 651, 653], "fail": [444, 452, 455, 460, 461, 464, 466, 468, 490, 501, 505, 511, 515, 521, 523, 529, 536, 538, 544, 549, 563, 579, 581, 588, 593, 594, 599, 608, 609, 613, 621, 622, 638], "failed": [464, 515, 524, 544, 549, 588, 591, 593, 597, 613, 622, 623, 624, 625], "failedisel": 530, "failing": [459, 464, 509, 515, 579], "failmaterializ": 622, "failtkind": 515, "failur": [451, 452, 460, 461, 464, 486, 490, 504, 509, 521, 523, 534, 537, 538, 542, 544, 549, 551, 563, 564, 579, 581, 586, 588, 589, 593, 594, 608, 609, 613, 615, 619, 647, 648], "failure_ord": 444, "fairly": [443, 444, 508, 514, 516, 524, 536, 548, 579, 591, 614, 637, 640, 641, 647, 648, 651, 652, 654], "faithful": 511, "fak": 466, "falkormodel": 614, "falkorwr_1vxvy_2cyc": 614, "falkorwr_2vxvy_2cyc": 614, "fall": [448, 459, 460, 494, 501, 505, 518, 529, 549, 563, 577, 579, 594, 598, 614, 639, 640, 641, 642, 643, 644, 650, 651, 652, 653], "fallback": [447, 498, 518, 529, 534, 549, 591, 594, 610], "fallible_iterator": 579, "falliblechilditerator": 579, "falling": [536, 639], "fallthrough": [454, 594], "fals": [440, 443, 449, 451, 459, 461, 464, 466, 473, 479, 490, 498, 501, 505, 514, 521, 525, 536, 541, 543, 546, 549, 551, 552, 555, 561, 563, 564, 567, 577, 579, 587, 591, 593, 597, 601, 614, 615, 616, 623, 624, 625, 638, 639, 640, 641, 642, 643, 644, 651], "false_branch_weight": 449, "falsebr": 593, "falsedest": 549, "famil": 440, "familiar": [440, 457, 489, 504, 511, 516, 524, 543, 561, 615, 621, 640, 644, 647, 651], "familiarity": [502, 562], "familiariz": 504, "familiarizing": 521, "family": [440, 458, 549, 579, 587, 593, 598, 645, 654], "fan": 539, "fanci": [556, 615], "fancy": 608, "fancya": 615, "fancyobject": 594, "faq": [509, 549, 594, 645, 654], "far": [443, 456, 501, 512, 548, 549, 558, 566, 567, 571, 574, 579, 582, 593, 594, 615, 617, 622, 623, 637, 638, 641, 642, 645, 648, 649, 652, 653, 654], "far16": 566, "far32": 566, "faraway": 459, "farm": 464, "farpoint": 574, "farpointer32": 574, "fashion": [512, 513, 549, 582, 594, 614], "fast": [451, 453, 457, 459, 465, 468, 500, 502, 511, 516, 517, 521, 530, 532, 534, 537, 538, 551, 556, 559, 560, 561, 575, 579, 581, 587, 591, 593, 594, 595, 601, 614, 615, 642, 646, 653], "fast_filter_branch": 581, "fast_path": 549, "fastcall": 457, "fastcc": [447, 457, 505, 514, 549, 587], "fastem": 601, "fastest": 537, "fastisel": 549, "fastlink": 572, "fastmath": 562, "fat": [440, 483, 502], "fatbin": 502, "fault": [440, 446, 461, 488, 509, 536, 594], "faulted": 511, "faulting": [515, 586], "faultingload": 515, "faultingloadstor": 515, "faultingpcoffset": 515, "faultingstor": 515, "faultkind": 515, "faultmap": [549, 586], "favor": [460, 509, 572], "favorably": 594, "favorit": [550, 582, 640, 651], "favour": [602, 605], "fa\u00e7on": 620, "fbb": 614, "fca": 550, "fcc_g": 614, "fcc_u": 614, "fcc_ug": 614, "fcc_val": 614, "fcf": 549, "fcmp": [638, 640, 642, 649, 650, 651, 652, 653], "fcmpinst": 579, "fcom": 457, "fcontext": 644, "fcos": 614, "fcoverag": [473, 506], "fcud": 502, "fcur": 561, "fde": [457, 550], "fdr": 616, "fdrpcchannel": 625, "fe": [518, 558], "fear": 509, "feasibl": [549, 593, 594, 617], "featur": [438, 439, 452, 453, 454, 455, 456, 459, 464, 468, 501, 505, 506, 509, 513, 517, 520, 521, 526, 527, 536, 542, 543, 546, 547, 549, 552, 558, 564, 571, 577, 578, 579, 580, 581, 587, 588, 591, 593, 598, 599, 601, 605, 614, 615, 617, 618, 619, 621, 637, 639, 640, 641, 642, 643, 645, 648, 651, 652, 653, 654], "featureb": 619, "featurec": 619, "featured": [457, 536, 561], "featurefparmv8": 605, "featurev": 614, "featurev8deprecated": 614, "featurev9": 614, "february": 584, "fed": [457, 585], "fedor": 510, "feed": [442, 443, 551, 593, 640, 651], "feedback": [504, 509, 537, 542, 584, 589, 590, 615, 622, 623, 624, 625], "feeding": [549, 581], "feel": [451, 452, 458, 459, 504, 509, 516, 549, 558, 587, 590, 617, 636, 638, 645, 647, 649, 654], "femulated": 549, "fenc": [440, 444, 485, 516, 536, 560, 587], "ferm": 457, "ferr": 508, "fetch": [438, 449, 485, 549, 581, 591, 615], "fetched": [439, 440, 457], "fetching": [528, 581], "few": [440, 442, 444, 447, 451, 453, 455, 456, 457, 458, 459, 468, 485, 499, 502, 509, 510, 511, 517, 518, 524, 529, 539, 540, 542, 548, 549, 553, 562, 577, 579, 580, 581, 582, 584, 587, 593, 594, 598, 599, 609, 613, 614, 615, 617, 618, 623, 637, 638, 639, 641, 644, 645, 648, 649, 650, 652, 654], "fewerelements": 529, "fewerelementsfor": 529, "fexist": 561, "ffast": [502, 613], "ffi": [455, 514], "ffi_include_d": 455, "ffi_library_d": 455, "ffmpeg": 551, "ffp": 502, "fgr": 524, "fi": [0, 518, 521, 581, 639, 640, 641, 642, 643, 644], "fib": [577, 636, 640, 642, 644, 647, 651, 653], "fibonacc": [523, 636, 647], "fiddl": 579, "fiddling": [541, 556, 595], "fidelity": 593, "field": [440, 443, 447, 450, 456, 457, 464, 485, 486, 487, 489, 494, 497, 504, 506, 516, 518, 519, 542, 546, 549, 560, 566, 567, 571, 572, 575, 578, 579, 587, 589, 591, 593, 594, 596, 598, 601, 603, 604, 614, 618, 619, 637, 645, 648, 654], "fifth": [505, 549, 562, 614], "figur": [446, 451, 457, 501, 508, 544, 549, 560, 579, 608, 609, 614, 615], "figured": 451, "fij": 440, "fil": [440, 441, 442, 449, 451, 452, 453, 455, 456, 461, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 490, 492, 493, 494, 496, 497, 498, 499, 500, 502, 503, 504, 507, 509, 510, 512, 513, 514, 517, 520, 523, 524, 535, 537, 539, 541, 542, 544, 546, 548, 549, 551, 554, 556, 557, 560, 561, 562, 563, 565, 566, 569, 570, 572, 574, 578, 579, 580, 581, 582, 584, 586, 587, 588, 594, 595, 598, 599, 601, 602, 604, 605, 607, 608, 611, 613, 614, 615, 617, 618, 619, 621, 622, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 650, 653, 656], "file1": 484, "file_nam": [440, 487], "file_name_entry_format": 440, "filecheck": [461, 463, 489, 530, 555, 593, 609], "filecheck_opt": 460, "filed": [542, 550, 598], "fileinfosubstream": 567, "fileit": 501, "filemagic": 571, "filenam": [455, 459, 460, 461, 462, 465, 466, 468, 469, 470, 472, 473, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 490, 492, 493, 494, 495, 498, 499, 500, 501, 502, 506, 513, 579, 589, 593, 595, 603, 605, 607, 616, 643, 644], "filename0": 506, "filename1": 506, "filenameindex0": 506, "filenameindex1": 506, "filenameoffset": 567, "filenotfound": 579, "filenumb": 513, "fileorerr": 579, "filepos": 501, "filesiz": 495, "filesizepars": 501, "filesystem": [464, 510, 541, 643], "filetyp": [465, 523, 593, 643], "filing": 598, "fill": [438, 439, 443, 450, 459, 479, 501, 510, 537, 544, 549, 578, 579, 615, 617, 618, 619], "filled": [450, 459, 501, 542, 549, 578, 593, 594, 598, 619, 636, 637, 638, 639, 640, 641, 642, 643, 644], "filling": [440, 502], "filt": [455, 464, 473, 474, 489, 490, 546, 549, 589, 607, 609], "filter": [457, 489, 509, 617], "filterclass": 546, "filtered": [473, 479, 549], "filtering": [58, 141, 241, 388, 617], "fin": [443, 446, 450, 459, 489, 501, 516, 519, 523, 543, 549, 563, 581, 594, 599, 618, 642, 647, 653], "final": [440, 447, 453, 454, 457, 485, 488, 490, 506, 510, 513, 518, 521, 539, 547, 549, 566, 567, 572, 579, 580, 581, 585, 588, 589, 593, 598, 602, 603, 604, 605, 614, 615, 616, 618, 638, 639, 640, 641, 642, 645, 649, 651, 652, 653, 654], "finaliz": [616, 618, 644], "finalize_status": 616, "finalized": [457, 509, 616, 618], "finalizememory": 554, "finalizeobject": [554, 644], "finalizing": 616, "finally": [444, 450, 451, 457, 459, 464, 501, 506, 511, 518, 541, 542, 543, 549, 552, 554, 561, 565, 570, 579, 581, 585, 593, 601, 609, 614, 615, 621, 623, 636, 637, 638, 639, 640, 642, 643, 647, 648, 651, 652, 653], "financial": 581, "find": [442, 443, 451, 452, 453, 455, 457, 459, 460, 461, 464, 473, 476, 478, 489, 500, 501, 506, 509, 510, 511, 512, 517, 519, 520, 521, 523, 524, 525, 530, 536, 538, 540, 541, 542, 544, 548, 549, 551, 552, 556, 560, 561, 563, 572, 578, 579, 580, 581, 586, 588, 590, 593, 594, 596, 598, 599, 603, 604, 605, 607, 608, 614, 615, 619, 621, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "find_": 579, "find_packag": 455, "find_program": 455, "findanalysispass": 617, "finding": [450, 451, 461, 464, 489, 516, 536, 549, 551, 577, 581, 593, 594, 616, 617], "findings_d": 551, "findlead": 579, "findstub": [624, 625], "findsymbol": [623, 624, 625, 639, 640, 641, 642], "finish": [438, 442, 507, 509, 561, 578, 613, 617, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "finishassembly": 518, "finished": [440, 451, 455, 457, 505, 510, 511, 549, 554, 556, 588, 595, 615, 638, 640, 649, 651], "finit": [457, 549, 601], "fir": [459, 501, 549], "firefox": [542, 584], "firepro": 440, "firing": 451, "first": [8, 40, 46, 76, 106, 130, 133, 161, 190, 225, 231, 260, 307, 338, 370, 376, 407, 437, 438, 439, 440, 443, 444, 446, 447, 449, 451, 452, 453, 455, 456, 457, 459, 460, 464, 466, 468, 473, 477, 483, 485, 487, 488, 499, 501, 505, 506, 508, 509, 510, 511, 513, 514, 518, 521, 523, 524, 525, 528, 529, 533, 537, 539, 542, 543, 544, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 569, 571, 572, 574, 577, 578, 579, 580, 581, 583, 584, 585, 587, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 603, 604, 605, 607, 608, 609, 610, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655], "first_wavefront": 440, "firstcondit": 579, "firstlet": 507, "firstly": 549, "fished": 563, "fit": [446, 457, 459, 501, 502, 509, 519, 525, 540, 549, 571, 577, 578, 579, 591, 593, 618, 622, 640, 651], "fiv": [444, 457, 501, 508, 511, 524, 551, 579], "fix": [453, 459, 501, 509, 519, 542, 544, 556, 579, 581, 582, 584, 587, 588, 593, 594, 595, 598, 603, 604, 610, 615, 637, 638, 639, 645, 648, 649, 654], "fixabl": 516, "fixed": [88, 332, 420, 436, 437, 440, 444, 448, 450, 459, 460, 464, 505, 509, 536, 542, 544, 551, 553, 559, 563, 566, 567, 572, 575, 581, 584, 587, 588, 589, 591, 592, 594, 596, 601, 603, 605, 610, 614, 616, 619, 637, 642, 645, 648, 653, 654], "fixedt": 593, "fixing": [459, 504, 509, 550, 561, 584, 623, 647], "fixm": [479, 510, 521, 590, 608, 614], "fixup": [567, 587], "fl": 561, "flag": [438, 439, 440, 442, 452, 454, 455, 456, 457, 461, 472, 473, 479, 483, 485, 487, 493, 497, 498, 505, 507, 509, 510, 513, 516, 517, 518, 521, 523, 535, 538, 539, 540, 541, 546, 551, 559, 561, 562, 565, 566, 567, 571, 572, 579, 587, 588, 589, 591, 593, 594, 596, 598, 607, 609, 614, 616, 617, 619, 649, 650, 651, 652, 653], "flag1": [551, 561], "flag2": [551, 561], "flagflat": 619, "flagged": [454, 460, 549], "flaghollow": 619, "flagpointy": 619, "flagprototyped": 644, "flaground": 619, "flagscpu1": 619, "flagscpu2": 619, "flagscpumask": 619, "flagsfeatur": 619, "flagsfeatureb": 619, "flagsfeaturec": 619, "flagsflat": 619, "flagshollow": 619, "flagspointy": 619, "flagsround": 619, "flam": 616, "flamegraph": 617, "flat": [10, 33, 34, 56, 57, 88, 89, 108, 125, 126, 192, 218, 219, 317, 326, 332, 340, 363, 364, 386, 387, 420, 421, 439, 462, 549, 566, 619], "flat32": 566, "flat_atomic": 440, "flat_atomic_add": [0, 1, 2, 3], "flat_atomic_add_x2": [0, 1, 2, 3], "flat_atomic_and": [0, 1, 2, 3], "flat_atomic_and_x2": [0, 1, 2, 3], "flat_atomic_cmpswap": [0, 1, 2, 3, 440], "flat_atomic_cmpswap_x2": [0, 1, 2, 3], "flat_atomic_dec": [0, 1, 2, 3], "flat_atomic_dec_x2": [0, 1, 2, 3], "flat_atomic_fcmpswap": [0, 1], "flat_atomic_fcmpswap_x2": [0, 1], "flat_atomic_fmax": [0, 1], "flat_atomic_fmax_x2": [0, 1, 440], "flat_atomic_fmin": [0, 1], "flat_atomic_fmin_x2": [0, 1], "flat_atomic_inc": [0, 1, 2, 3], "flat_atomic_inc_x2": [0, 1, 2, 3], "flat_atomic_or": [0, 1, 2, 3], "flat_atomic_or_x2": [0, 1, 2, 3], "flat_atomic_smax": [0, 1, 2, 3], "flat_atomic_smax_x2": [0, 1, 2, 3], "flat_atomic_smin": [0, 1, 2, 3], "flat_atomic_smin_x2": [0, 1, 2, 3], "flat_atomic_sub": [0, 1, 2, 3], "flat_atomic_sub_x2": [0, 1, 2, 3], "flat_atomic_swap": [0, 1, 2, 3, 440], "flat_atomic_swap_x2": [0, 1, 2, 3], "flat_atomic_umax": [0, 1, 2, 3], "flat_atomic_umax_x2": [0, 1, 2, 3], "flat_atomic_umin": [0, 1, 2, 3], "flat_atomic_umin_x2": [0, 1, 2, 3], "flat_atomic_xor": [0, 1, 2, 3], "flat_atomic_xor_x2": [0, 1, 2, 3], "flat_load": 440, "flat_load_dword": [0, 1, 2, 3, 440], "flat_load_dwordx2": [0, 1, 2, 3], "flat_load_dwordx3": [0, 1, 2, 3], "flat_load_dwordx4": [0, 1, 2, 3, 437], "flat_load_sbyt": [0, 1, 2, 3], "flat_load_sbyte_d16": [0, 3], "flat_load_sbyte_d16_h": [0, 3], "flat_load_short_d16": [0, 3], "flat_load_short_d16_h": [0, 3], "flat_load_sshort": [0, 1, 2, 3], "flat_load_ubyt": [0, 1, 2, 3], "flat_load_ubyte_d16": [0, 3], "flat_load_ubyte_d16_h": [0, 3], "flat_load_ushort": [0, 1, 2, 3], "flat_scratch": [15, 111, 134, 135, 144, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 195, 232, 233, 243, 244, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 289, 290, 294, 295, 301, 302, 303, 322, 327, 328, 329, 343, 345, 356, 357, 377, 378, 379, 386, 387, 390, 391, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 440], "flat_scratch_h": [40, 439, 440], "flat_scratch_lo": [40, 439, 440], "flat_stor": 440, "flat_store_byt": [0, 1, 2, 3], "flat_store_byte_d16_h": [0, 3], "flat_store_dword": [0, 1, 2, 3, 440], "flat_store_dwordx2": [0, 1, 2, 3], "flat_store_dwordx3": [0, 1, 2, 3, 440], "flat_store_dwordx4": [0, 1, 2, 3], "flat_store_short": [0, 1, 2, 3], "flat_store_short_d16_h": [0, 3], "flatten": 613, "flattened": [457, 549], "flavor": [539, 549, 579, 593, 603], "flavour": 530, "flaw": [524, 594], "flawed": 584, "fldcw": 457, "fldcww": 457, "fleet": 510, "flexibility": [457, 501, 529, 530, 549, 579, 603, 615, 641, 652], "flexibl": [440, 457, 463, 464, 518, 543, 560, 605, 609], "flexibly": 548, "flight": [485, 511, 549], "flipped": 549, "float": [447, 457, 466, 485, 501, 513, 519, 524, 525, 538, 541, 549, 561, 562, 587, 593, 613, 614, 619, 640, 647, 648, 649, 650, 651, 652, 653], "float128": 574, "float16": 574, "float32": 574, "float32partialprecis": 574, "float48": 574, "float64": 574, "float80": 574, "float_denorm_mode_16_64": 440, "float_denorm_mode_32": 440, "float_denorm_mode_flush_dst": 440, "float_denorm_mode_flush_non": 440, "float_denorm_mode_flush_src": 440, "float_denorm_mode_flush_src_dst": 440, "float_mod": 440, "float_of_string": [647, 648, 649, 650, 651, 652, 653], "float_round_mode_16_64": 440, "float_round_mode_32": 440, "float_round_mode_minus_infinity": 440, "float_round_mode_near_even": 440, "float_round_mode_plus_infinity": 440, "float_round_mode_zero": 440, "floating": [38, 39, 43, 45, 129, 132, 223, 224, 228, 230, 288, 293, 298, 300, 319, 321, 368, 369, 373, 375, 437, 438, 447, 448, 457, 465, 485, 501, 502, 512, 516, 524, 532, 540, 579, 587, 605, 612, 613, 614, 636, 637, 638, 639, 640, 647, 648, 649, 650], "floatscalarty": 549, "floattyp": 579, "floor": 613, "floorf": 613, "flow": [443, 451, 457, 459, 476, 502, 505, 508, 509, 511, 515, 516, 520, 549, 550, 552, 553, 554, 556, 560, 562, 577, 579, 585, 586, 587, 593, 594, 598, 611, 612, 613, 614, 615, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655], "floyd": 583, "flto": [455, 535, 552, 564], "flush": [440, 459, 485, 502, 549, 562, 616, 643, 648, 649, 650, 651, 652, 653], "flush_status": 616, "flushed": [538, 549, 554, 616, 618], "flushing": [549, 616], "flux": 536, "flwend": 583, "fly": [457, 569, 621, 637, 639, 648, 650], "fma": [457, 502, 562, 613], "fma3d": 583, "fmadd": 457, "fmaximum": 525, "fmaxnum": 525, "fmaxnum_iee": 525, "fminimum": 525, "fminnum": 525, "fminnum_iee": 525, "fmod": 549, "fmt_align": 579, "fmt_pad": 579, "fmt_repeat": 579, "fmul": [457, 562, 638, 639, 649, 650], "fmuladd": 613, "fn": [507, 549], "fnaddr": 505, "fnast": [624, 625, 638, 639, 640, 641, 642, 643, 644], "fnentry": 447, "fnf": 579, "fnir": [638, 639, 640, 641, 642, 643, 644], "fnloc": 644, "fnnam": [637, 638, 639, 640, 641, 642, 643, 644], "fno": [442, 613], "fnptrval": 549, "fnstart": 457, "fntre": 561, "fnty": 549, "focus": [452, 457, 458, 527, 530, 552, 556, 579, 594, 595, 598, 613, 614, 621, 646], "focused": [518, 563, 582, 594, 609, 622], "focusing": [457, 476], "fold": [455, 510, 512, 526, 527, 549, 577, 594, 596, 603, 639, 650], "foldabl": 526, "folded": [443, 444, 457, 515, 516, 527, 549, 593, 594, 650], "folding": [444, 512, 515, 527, 549, 579, 586, 593, 603, 615, 638], "foldingsetnod": 579, "foldingsetnodeid": 579, "foldl": [603, 604], "foldmemoryoperand": [457, 614], "folk": [551, 578], "follow": [35, 220, 365, 437, 438, 440, 441, 447, 456, 457, 459, 460, 486, 489, 490, 498, 502, 504, 505, 506, 507, 509, 512, 513, 514, 515, 519, 521, 525, 535, 536, 537, 541, 542, 544, 548, 549, 556, 558, 559, 562, 564, 567, 569, 570, 571, 574, 575, 578, 579, 581, 582, 585, 588, 590, 591, 593, 595, 596, 598, 603, 608, 609, 610, 614, 615, 616, 618, 623, 637, 642, 644, 648, 653], "followed": [440, 444, 447, 457, 459, 460, 473, 483, 485, 486, 513, 529, 549, 551, 561, 567, 571, 574, 577, 579, 580, 591, 593, 601, 603, 609, 614, 618, 637, 640, 648, 651], "following": [40, 41, 46, 103, 131, 133, 189, 225, 226, 227, 231, 286, 370, 371, 372, 376, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 450, 451, 452, 453, 455, 456, 457, 460, 461, 463, 464, 468, 469, 470, 475, 479, 481, 483, 485, 487, 488, 490, 493, 497, 498, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 520, 521, 525, 527, 529, 530, 534, 535, 536, 537, 539, 540, 542, 543, 544, 546, 548, 549, 551, 552, 555, 556, 557, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 589, 591, 593, 594, 595, 596, 598, 599, 601, 603, 604, 605, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 621, 623, 636, 641, 647, 652], "followup": 610, "followup_all": 610, "followup_coincident": 610, "followup_epilogu": 610, "followup_fallback": 610, "followup_inn": 610, "followup_out": 610, "followup_remaind": 610, "followup_remainder_inn": 610, "followup_remainder_out": 610, "followup_sequential": 610, "followup_unrolled": 610, "followup_vectorized": 610, "follwing": 593, "fom": [457, 577], "fonctionnal": [0, 1, 2, 3, 4, 5, 6, 7], "foo": [443, 446, 448, 449, 455, 456, 457, 459, 460, 474, 475, 485, 490, 496, 498, 501, 502, 505, 506, 511, 513, 514, 518, 519, 530, 543, 544, 547, 549, 551, 555, 560, 562, 563, 566, 579, 589, 593, 598, 601, 603, 604, 609, 611, 613, 619, 637, 638, 639, 640, 648, 649, 650, 651], "foo1": [535, 552], "foo2": [535, 552], "foo3": [535, 552], "foo4": [535, 552], "foo_bar": 475, "foo_ctor": 547, "foo_dtor": 547, "foo_in_a_cc": 449, "foo_test": 609, "foo_var": 456, "foobar": [459, 555, 619], "fooding": 584, "foof": 502, "foolproof": 615, "footnot": [524, 529], "footprint": 524, "fopen": 582, "for": [4, 7, 13, 14, 18, 19, 20, 21, 22, 25, 26, 27, 41, 56, 103, 111, 112, 115, 116, 117, 118, 119, 131, 189, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 209, 213, 215, 216, 220, 222, 226, 227, 286, 316, 326, 343, 344, 348, 349, 350, 351, 352, 355, 356, 357, 371, 372, 386, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 454, 455, 456, 458, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 512, 513, 515, 518, 520, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 534, 536, 537, 538, 539, 541, 542, 544, 545, 546, 547, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 578, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 599, 601, 602, 603, 604, 605, 607, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 636, 637, 638, 639, 641, 643, 644, 645, 646, 647, 648, 649, 650, 652, 654, 655], "forbidden": 599, "forc": [437, 438, 440, 442, 455, 456, 459, 466, 489, 501, 502, 506, 511, 513, 521, 538, 547, 549, 579, 587, 593, 596, 598, 610, 613, 615, 619], "force_off": 455, "force_on": 455, "forced": [502, 549, 593, 610, 613], "forcefully": 519, "forcibly": 549, "forcing": [485, 521, 541, 574, 594], "foreach": [456, 603, 605], "foreachdeclar": 604, "foreign": [455, 514], "forensic": 463, "foresee": 509, "forev": 558, "forexpr": [640, 641, 642, 643, 644, 651, 652, 653], "forexprast": [640, 641, 642, 643, 644], "forget": [458, 459, 518, 543, 578, 579, 644], "forgiv": 561, "forgotten": 643, "fork": [581, 584, 594, 599], "forking": [581, 585], "form": [130, 438, 440, 442, 443, 444, 447, 454, 455, 456, 459, 460, 461, 471, 474, 475, 478, 488, 490, 501, 508, 509, 511, 513, 516, 517, 518, 519, 520, 521, 525, 529, 536, 539, 542, 543, 544, 546, 549, 550, 551, 552, 554, 555, 558, 560, 561, 562, 567, 574, 578, 579, 584, 585, 586, 587, 590, 593, 594, 596, 598, 601, 603, 604, 605, 608, 609, 611, 612, 614, 615, 616, 618, 619, 622, 636, 637, 638, 639, 640, 642, 643, 645, 646, 647, 648, 649, 650, 651, 653, 654], "formal": [484, 502, 549, 561, 579, 590, 603, 605], "format": [21, 22, 55, 109, 118, 119, 140, 193, 206, 207, 213, 214, 215, 216, 240, 341, 351, 352, 385, 437, 438, 439, 440, 446, 454, 460, 462, 465, 466, 468, 470, 471, 473, 474, 476, 478, 479, 485, 486, 488, 489, 490, 492, 494, 496, 497, 499, 501, 503, 504, 507, 509, 512, 513, 514, 515, 518, 521, 523, 546, 549, 551, 554, 556, 558, 562, 563, 565, 566, 567, 570, 572, 574, 577, 578, 579, 581, 584, 585, 586, 587, 589, 595, 601, 603, 605, 608, 612, 614, 616, 617, 619, 644], "format_int_custom": 579, "format_provid": 579, "formatadapt": 579, "formatstring": 440, "formatt": 549, "formatted": [440, 487, 504, 521, 578, 579, 619, 644], "formattedfil": 579, "formatting": [509, 619], "formbit": 605, "formed": [443, 457, 460, 501, 509, 549, 553, 577, 579, 589, 615], "formerly": 579, "forming": [457, 549, 579, 584, 594, 607], "formmask": 614, "formul": 549, "formulated": 599, "forth": [444, 446, 524], "fortran": 583, "fortunately": [579, 639, 640, 642, 643, 645, 650, 651, 653, 654], "forum": [458, 520, 549], "forward": [440, 443, 444, 447, 457, 459, 502, 512, 518, 536, 545, 549, 575, 577, 579, 581, 593, 598, 599, 603, 604, 616, 637, 640, 647, 648, 649], "forwarded": [511, 549], "forwarding": [485, 579], "fosdem17": 533, "fost": 599, "foster": 509, "fostering": 581, "fotonik3d_": 583, "fotonik3d_r": 583, "found": [437, 439, 440, 443, 445, 451, 455, 457, 460, 461, 462, 464, 468, 470, 478, 479, 482, 488, 498, 501, 502, 509, 510, 511, 517, 518, 520, 521, 523, 524, 525, 534, 540, 541, 542, 544, 546, 549, 551, 552, 556, 558, 560, 561, 562, 563, 564, 567, 575, 577, 579, 580, 583, 588, 591, 593, 594, 598, 599, 607, 609, 613, 614, 615, 616, 619, 638, 639, 640, 641, 642, 643, 644, 649, 652, 653], "foundat": [440, 458, 509, 581, 590, 615], "foundfoo": 459, "four": [11, 109, 193, 341, 438, 443, 444, 446, 447, 453, 457, 464, 485, 496, 501, 519, 530, 531, 539, 549, 562, 563, 614, 638, 639, 649], "fourinarow": 608, "fourth": [505, 519, 549, 593, 596, 614, 615, 651], "foz": 498, "fp": [439, 440, 457, 465, 466, 485, 501, 514, 549, 555, 592, 593, 605, 614, 639, 640, 641, 642, 644], "fp0": [603, 605], "fp1": [603, 605], "fp128": [447, 549, 561], "fp16": 440, "fp16_ovfl": 440, "fp2": [603, 605], "fp3": [603, 605], "fp4": [603, 605], "fp5": [603, 605], "fp6": [603, 605], "fp_round_inreg": 587, "fp_to_sint": 614, "fpatchabl": 587, "fpexcept": 549, "fpform": 605, "fpformat": [603, 605], "fpformbit": 605, "fpgas": 457, "fpic": [455, 591], "fpimmleaf": 527, "fpinst": 605, "fpm": [489, 571, 622, 623, 624, 625], "fpm1": 571, "fpm2": 571, "fpmad": 593, "fpo": [567, 575], "fpo_dat": 567, "fppassmanag": 617, "fpr": 524, "fpreg": 614, "fpregsclass": 614, "fpregsregclass": 614, "fpregsregisterclass": 614, "fprintf": [637, 638, 639, 640, 641, 642, 643, 644], "fprofil": [455, 473, 506], "fptr": 644, "fptyp": 549, "fpu": [541, 549], "fputc": [639, 640, 641, 642, 643, 644], "fqa": 459, "fr": [549, 561], "fra": 457, "fraction": [439, 448, 543, 546, 551], "fractional": 549, "fragil": 581, "fragility": 460, "fragment": [457, 471, 475, 517, 518, 549, 579, 593, 598, 603, 604, 608], "fragment1": 475, "fragment2": 475, "fragmentkind": 475, "fram": [440, 465, 467, 478, 488, 492, 493, 498, 516, 518, 525, 547, 549, 550, 554, 555, 567, 577, 579, 587, 592, 593, 594, 596, 598, 614, 618], "frameindex": 614, "frameinfo": [555, 614], "frameless": 457, "framemap": 518, "frameptr": 505, "framesiz": 518, "framework": [443, 454, 457, 512, 518, 533, 534, 536, 549, 577, 579, 587, 593, 608, 615, 620, 638, 641, 642, 647, 649, 652, 653], "francesco": 577, "frb": 457, "frc": 457, "frcsr": 587, "fre": [440, 443, 444, 457, 458, 459, 485, 489, 503, 504, 509, 516, 518, 527, 532, 542, 547, 549, 550, 551, 558, 563, 578, 579, 581, 587, 590, 591, 594, 598, 601, 609, 615, 617, 618, 636, 638, 639, 640, 641, 642, 645, 647, 649, 654], "freebench": 608, "freeblockmapblock": 571, "freebsd": [445, 457, 487, 521, 616], "freebsd5": 457, "freed": [440, 443, 505, 559, 563, 579, 592], "freedom": [452, 524, 549, 579], "freeing": [505, 623, 639, 650], "freely": [444, 509, 549], "freescal": 503, "freestanding": 549, "freetyp": 551, "freez": [542, 581, 587], "frequenc": 448, "frequency": [445, 449, 549, 586, 587, 617, 618], "frequent": [509, 518, 581, 586, 644], "frequently": [437, 459, 501, 519, 521, 523, 549, 577, 579, 586, 598, 599, 602, 622, 623, 624, 625], "fresh": [549, 581], "frexp": 549, "friend": [514, 549, 579], "friendly": [458, 478, 509, 557, 581, 602, 616, 621, 637, 648], "frighten": 551, "from": [9, 11, 23, 24, 28, 29, 30, 31, 32, 36, 37, 41, 76, 86, 107, 109, 120, 121, 122, 123, 124, 128, 131, 161, 174, 191, 193, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 227, 260, 271, 304, 331, 339, 341, 353, 354, 358, 359, 360, 361, 362, 366, 367, 372, 407, 418, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 542, 543, 544, 546, 547, 548, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 564, 565, 567, 570, 572, 574, 575, 576, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 601, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655], "front": [457, 459, 487, 509, 511, 518, 521, 523, 549, 564, 577, 579, 580, 587, 589, 612, 622, 623, 639, 640, 641, 642, 644, 645, 646, 647, 650, 651, 652, 653, 654], "frontend": [444, 476, 485, 505, 506, 511, 513, 514, 515, 518, 521, 522, 547, 548, 549, 583, 587, 591, 593, 598, 609, 610, 643, 655], "fronti": [440, 642, 653], "frowned": 509, "frozen": [507, 549], "frsr": 587, "frt": 457, "frustrat": 458, "fsanitiz": [454, 536, 551, 559, 587, 591], "fsav": 613, "fscsr": 587, "fsin": [465, 614], "fssr": 587, "fstream": 562, "fstrict": 549, "fsub": [642, 653], "ft": [551, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "ftest": 473, "fthinlto": 549, "ftl": [549, 596], "ftoi": 614, "ftp": 521, "ftz": 562, "fucomip": 457, "fucomp": 457, "fudg": 541, "fulfill": [540, 543, 599], "full": [438, 440, 443, 444, 453, 455, 456, 457, 459, 460, 468, 472, 485, 486, 488, 489, 498, 500, 502, 507, 509, 514, 521, 539, 541, 542, 543, 547, 548, 551, 555, 556, 561, 562, 565, 567, 577, 578, 579, 580, 581, 584, 593, 594, 595, 598, 601, 609, 610, 611, 617, 618, 619, 636, 645, 647, 654], "full_corpus_d": 551, "fulldebug": [549, 593], "fullest": 459, "fully": [442, 447, 448, 454, 455, 456, 457, 466, 485, 502, 505, 517, 519, 521, 523, 525, 527, 549, 553, 563, 565, 577, 585, 593, 594, 598, 603, 605, 610, 613, 621, 622, 637, 641, 642, 645, 648, 652, 653, 654], "fun": [513, 616, 617, 645, 646, 647, 649, 650, 651, 652, 653, 654], "func": [480, 489, 506, 549, 555, 579, 615, 617, 648, 649, 650, 651, 652, 653], "func1": 440, "func_typ": 598, "funcflag": 549, "funcid": 617, "funclet": 505, "funcresolv": 579, "function": [440, 441, 443, 444, 446, 447, 448, 451, 452, 453, 454, 455, 460, 463, 465, 467, 468, 470, 473, 474, 475, 476, 478, 487, 488, 489, 490, 492, 493, 498, 499, 502, 503, 507, 511, 513, 516, 517, 518, 519, 521, 525, 527, 529, 530, 534, 535, 536, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 557, 559, 560, 563, 564, 565, 566, 567, 569, 570, 572, 576, 582, 584, 585, 587, 589, 591, 592, 594, 596, 597, 598, 601, 603, 607, 611, 612, 614, 615, 617, 621, 622, 624, 625, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655], "function1": 440, "function_entry_arg": 618, "function_entry_count": 449, "function_id": 618, "function_old": 447, "function_other_typ": 618, "function_typ": [649, 650, 651, 652, 653], "functionaddress": 515, "functional": [455, 485, 509, 510, 518, 549, 550, 579, 593, 601, 640, 641, 642, 651, 652, 653], "functionality": [444, 452, 456, 459, 489, 501, 509, 512, 518, 519, 521, 545, 546, 548, 549, 550, 557, 559, 561, 563, 577, 579, 582, 584, 592, 593, 596, 598, 601, 615, 616, 619, 621, 639, 642, 643, 644, 646, 647, 650, 653], "functionally": [457, 579], "functionast": [624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "functioncalle": 579, "functionend": 513, "functionfaultinfo": 515, "functionid": 513, "functionindex": 545, "functioninfo": 515, "functioning": [511, 621], "functionlisttyp": 579, "functionnam": [518, 549], "functionnod": 561, "functionp": [577, 615], "functionpass": [443, 564, 579, 614], "functionpassctor": 615, "functionpassmanag": [622, 623, 624, 625, 639, 640, 641, 642], "functionprotos": [639, 640, 641, 642, 643, 644], "functionptr": 579, "functionstart": 513, "functiontyp": [579, 638, 639, 640, 641, 642, 643, 644], "fundamental": [456, 457, 459, 501, 511, 516, 519, 545, 561, 579, 594, 598, 614, 615], "fundamentally": 594, "funnel": 549, "funny": [642, 653], "furth": [444, 447, 450, 452, 453, 455, 459, 460, 464, 479, 500, 505, 509, 511, 516, 518, 519, 523, 524, 529, 530, 536, 540, 542, 549, 551, 560, 561, 564, 567, 569, 571, 579, 584, 593, 594, 607, 610, 614, 618, 621, 623, 639], "furthermor": [450, 452, 460, 519, 524, 536, 549, 577, 598], "fury": 440, "furyx": 440, "fuse": [455, 502, 535, 540], "fused": [502, 525, 549, 577], "fusing": [466, 502, 549, 577], "fusion": 549, "futur": [440, 447, 454, 455, 459, 507, 509, 517, 518, 519, 521, 532, 533, 536, 545, 547, 549, 551, 555, 579, 581, 587, 588, 593, 594, 596, 597, 598, 610, 613, 618, 638, 639, 640, 647, 649, 651, 653], "fuzz": [582, 586], "fuzz_target": 551, "fuzzed": [517, 551], "fuzzer": [551, 586], "fuzzercl": 517, "fuzzing": [549, 586], "fuzzing_build_mode_unsafe_for_product": 551, "fuzzinglibc": 551, "fuzzmutat": 517, "fuzzy": 475, "fval": 593, "fwd_progress": 440, "fwdargreg": 555, "fx": [0, 4, 5, 6, 7, 436, 440], "fxray": [616, 617], "g": [440, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 457, 459, 460, 465, 472, 473, 485, 486, 487, 488, 489, 492, 493, 497, 498, 501, 502, 505, 506, 507, 509, 510, 511, 513, 516, 518, 519, 521, 523, 524, 527, 529, 536, 537, 538, 539, 540, 541, 542, 544, 545, 547, 549, 551, 553, 555, 558, 560, 561, 562, 563, 564, 565, 566, 567, 572, 574, 575, 576, 577, 579, 581, 584, 585, 587, 590, 593, 594, 595, 596, 597, 598, 599, 601, 603, 607, 608, 609, 610, 611, 615, 617, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "g0": 614, "g1": [549, 593, 614], "g2": [549, 593, 614], "g3": 614, "g4": 614, "g5": 614, "g6": 614, "g7": 614, "g_": 584, "g_add": [524, 526, 529], "g_and": [528, 529], "g_anyext": 529, "g_ashr": 529, "g_bitcast": 529, "g_block_addr": 529, "g_build_vector": 529, "g_build_vector_trunc": 529, "g_concat_vector": 529, "g_const": [524, 526, 528, 529], "g_extract": 529, "g_fconst": [524, 526], "g_fmul": 524, "g_fneg": 524, "g_foo": 529, "g_fpext": 529, "g_frame_index": 529, "g_icmp": 555, "g_implicit_def": 529, "g_inttoptr": 529, "g_load": [524, 529], "g_merge_valu": 529, "g_mul": 529, "g_or": 529, "g_phi": 529, "g_ptrtoint": 529, "g_sext": 529, "g_sext_inreg": 524, "g_shl": 529, "g_stor": 529, "g_sub": 529, "g_trunc": 529, "g_unmerge_valu": 529, "g_xor": [524, 529], "ga": 561, "gab": 503, "gadget": 594, "gain": [450, 501, 509, 536, 549, 590], "galin": 537, "gamely": 509, "gap": [485, 506, 549], "gapend": 513, "gapstart": 513, "garbag": [447, 514, 550, 574, 596, 646, 647], "gas": [513, 614], "gath": [501, 509, 561, 580, 584, 601], "gather": [549, 585, 613], "gather4": 438, "gathered": [511, 539, 548, 549, 579, 609], "gathering": [440, 539, 549, 584, 618], "gav": 531, "gazonk": 593, "gb": 521, "gc": [447, 550, 561, 581, 586], "gc_transit": 598, "gc_transition_end": 598, "gc_transition_start": 598, "gcc": [444, 456, 457, 459, 461, 473, 490, 501, 502, 503, 509, 510, 511, 520, 521, 535, 536, 540, 541, 544, 549, 560, 577, 579, 593, 607, 608, 613, 614, 616], "gcc_version": 521, "gcda": 473, "gcfunctioninfo": 518, "gcfunctionmetadat": [518, 596], "gcmetadaprint": 518, "gcmetadat": 518, "gcmetadataprinterregistry": 518, "gcmetataprint": 598, "gcn": 440, "gcn3": 440, "gcnam": 447, "gcno": 473, "gcodeview": 593, "gcolumn": 613, "gcov": 490, "gcov_prefix": 473, "gcov_prefix_strip": 473, "gcregistry": 518, "gcroot": [518, 596, 598], "gcse": [577, 579], "gcstrategy": [518, 598], "gd": [0, 1, 2, 3, 9, 103, 107, 189, 191, 286, 339, 435, 440], "gdb": [457, 478, 535, 579, 593, 612, 614, 654], "gdbin": 579, "ge": [603, 604], "ge_missing_jmp_buf": 459, "ge_missing_sigjmp_buf": 459, "geared": [453, 455], "geforc": 562, "gembed": 440, "gen": [500, 527, 614, 622, 644], "gend": 458, "gendfapacketiz": 457, "gener": [439, 440, 444, 446, 451, 453, 455, 459, 460, 461, 465, 485, 502, 505, 516, 521, 547, 549, 550, 562, 564, 585, 586, 587, 588, 593, 596, 598, 601, 607, 614, 621, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 650, 652, 653, 654, 655], "general": [440, 442, 443, 444, 446, 447, 452, 456, 457, 458, 459, 463, 481, 485, 489, 490, 501, 502, 504, 505, 509, 511, 516, 518, 521, 522, 523, 524, 527, 529, 536, 540, 542, 543, 547, 550, 559, 561, 562, 565, 571, 572, 574, 577, 581, 584, 585, 590, 591, 593, 594, 598, 599, 603, 604, 605, 608, 609, 614, 615, 622, 637, 641, 642, 644, 645, 648, 652, 653, 654], "generalcategory": 501, "generalis": [641, 652], "generality": [645, 654], "generaliz": [529, 549, 579, 594], "generalized": [459, 579, 598], "generally": [444, 451, 453, 456, 459, 464, 468, 501, 507, 509, 511, 512, 516, 518, 521, 523, 526, 527, 529, 530, 536, 537, 539, 548, 549, 556, 557, 562, 564, 567, 579, 584, 593, 594, 595, 599, 604, 605, 609, 610, 611, 614, 615, 643, 644], "generat": [440, 442, 444, 446, 447, 451, 453, 455, 456, 457, 461, 463, 464, 465, 466, 468, 473, 479, 484, 485, 489, 490, 499, 500, 502, 505, 506, 507, 511, 512, 513, 514, 516, 518, 519, 521, 522, 523, 529, 539, 540, 542, 544, 547, 548, 549, 551, 552, 554, 555, 559, 560, 561, 562, 563, 572, 574, 575, 578, 579, 580, 581, 587, 592, 593, 596, 598, 601, 603, 604, 607, 608, 609, 611, 613, 614, 616, 617, 619, 621, 637, 638, 639, 640, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654], "generated": [440, 444, 449, 453, 454, 455, 459, 460, 465, 466, 468, 470, 473, 479, 484, 485, 489, 490, 495, 501, 502, 506, 507, 509, 511, 515, 516, 517, 518, 521, 523, 532, 539, 549, 551, 552, 554, 560, 562, 563, 565, 566, 567, 572, 577, 579, 585, 586, 587, 589, 592, 593, 594, 598, 601, 605, 609, 610, 613, 614, 615, 616, 617, 619, 621, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654], "generating": [440, 442, 444, 446, 453, 456, 457, 459, 473, 502, 506, 514, 516, 521, 523, 533, 542, 549, 551, 555, 562, 581, 585, 587, 593, 594, 596, 601, 610, 612, 614, 616, 619, 621, 638, 639, 640, 642, 644, 645, 649, 650, 651, 653, 654], "generational": [518, 549, 598], "generator": [442, 444, 455, 461, 463, 465, 505, 512, 518, 521, 523, 530, 534, 548, 550, 552, 557, 561, 562, 563, 579, 583, 593, 595, 596, 598, 601, 605, 608, 609, 612, 614, 615, 638, 642, 645, 647, 649, 653, 654], "generic": [440, 444, 446, 447, 455, 457, 459, 466, 501, 502, 509, 511, 521, 527, 529, 530, 531, 532, 534, 536, 549, 550, 555, 562, 579, 587, 593, 598, 599, 601, 602, 604, 605, 614, 616, 643, 645, 654], "genericvalu": [650, 651, 652, 653], "genregisternam": 457, "gensubtargetinfo": 614, "genuin": 579, "geomean": 613, "geometric": [645, 654], "geord": 520, "gep": [514, 525, 550, 561, 577, 586, 587, 593, 598], "gep_index": 549, "get": [18, 19, 20, 21, 22, 25, 26, 27, 48, 49, 115, 116, 117, 118, 119, 135, 199, 200, 201, 206, 207, 233, 234, 316, 348, 349, 350, 351, 352, 355, 356, 357, 378, 379, 438, 440, 441, 443, 444, 446, 448, 451, 456, 457, 458, 459, 460, 463, 485, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 516, 518, 519, 520, 521, 522, 523, 526, 528, 534, 535, 537, 539, 540, 542, 543, 545, 550, 551, 552, 554, 556, 558, 560, 561, 562, 563, 572, 574, 577, 578, 579, 581, 587, 588, 590, 593, 594, 595, 598, 599, 601, 603, 604, 605, 608, 609, 610, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "get_instrinfo_named_op": 614, "get_instrinfo_operand_enum": 614, "get_instrinfo_operand_types_enum": 614, "get_matcher_implement": 601, "get_ptr": 515, "get_reginfo_target_desc": 601, "get_register_match": 601, "get_subtarget_feature_nam": 601, "getactiondefinitionsbuild": 529, "getaddress": [563, 621, 624, 625, 639, 640, 641, 642], "getaddressingmod": 614, "getadjustedanalysispoint": 443, "getanalys": 528, "getanalysisusag": [443, 528], "getargumentlist": 579, "getattribut": 561, "getattributespellinglistindex": 601, "getbasicblock": 457, "getbasicblocklist": [579, 640, 641, 642, 643, 644], "getbinarycodeforinstr": 614, "getbinaryprecedent": [641, 642, 643, 644], "getbit": 501, "getbitwidth": 579, "getbuff": 619, "getcalledfunct": 579, "getcalleesavedreg": 614, "getchar": [636, 637, 638, 639, 640, 641, 642, 643, 644], "getcol": 644, "getcompilecallback": [624, 625], "getcontext": [563, 621, 622], "getdat": 459, "getdatalayout": [563, 614, 621, 622, 644], "getdatasect": 518, "getdebugloc": 593, "getdefaultdatalayoutfortarget": [621, 622], "getdefaulttargettripl": 643, "getdirectory": [593, 644], "getdoublety": [638, 639, 640, 641, 642, 643, 644], "getehframesect": 554, "getelementptr": [443, 457, 460, 470, 505, 506, 518, 519, 547, 550, 561, 562, 579, 587, 593, 598, 611, 645, 654], "getelementptrinst": 579, "getelementtyp": 579, "getentryblock": [579, 642, 643, 644], "getenv": 599, "getexceptionpointerregist": 511, "getexceptionselectorregist": 511, "getexecutionsess": 622, "getfil": 563, "getfilenam": [593, 644], "getfoo": 549, "getforcurrentprocess": [563, 621, 622], "getfourdatapointer": 594, "getframeinfo": [457, 614], "getframeinstruct": 555, "getframesiz": 518, "getfunct": [518, 564, 579, 615, 638, 639, 640, 641, 642, 643, 644], "getfunctionlist": 579, "getfunctiontyp": 579, "getglobal": 614, "getgloballist": 579, "getglobalprefix": [563, 621, 622], "gethostcpufeatur": 587, "getimm": 614, "getindex": 614, "getinitializ": 579, "getinsertblock": [640, 641, 642, 643, 644], "getinstlist": 579, "getinstralternativemapping": 532, "getinstrinfo": [457, 614], "getinstrmapping": 532, "getint32ty": 459, "getjitinfo": [457, 614], "getjmp_buftyp": 459, "getkey": 579, "getkind": [543, 601], "getknownbit": 528, "getlazyresolverfunct": 614, "getlin": [593, 644], "getllvmcontext": 459, "getlock": 563, "getloopanalysisusag": 615, "getloopid": 610, "getloopinfo": 615, "getmainjitdylib": [563, 621, 622], "getmbb": 614, "getmemb": 579, "getmodul": [563, 622], "getmodulematchquality": 614, "getmyobject": 594, "getnam": [514, 579, 615, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "getnamedoperandidx": 614, "getnamewithprefix": [623, 624, 625], "getnexttoken": [637, 638, 639, 640, 641, 642, 643, 644], "getnod": [512, 614], "getnullvalu": [579, 640, 641, 642, 643, 644], "getnumel": 579, "getnumoperand": 579, "getnumparam": 579, "getnumsuccessor": 459, "getnumvirtreg": 457, "getobjfilelowering": 518, "getoffset": 614, "getop": [603, 604], "getopcod": [579, 614], "getoperand": [457, 459, 528, 579, 614], "getoperationnam": 512, "getoperatornam": [641, 642, 643, 644], "getopt": 501, "getorcreatefoo": 579, "getorcreatetypearray": 644, "getorinsertfunct": 579, "getparamtyp": 579, "getparent": [579, 640, 641, 642, 643, 644], "getpoint": 549, "getpointersiz": 518, "getpointertofunct": [554, 579, 644], "getpointertonamedfunct": 554, "getpredopcod": 546, "getprocaddress": 639, "getprocesstripl": 644, "getproto": [624, 625], "getrawpoint": 545, "getrawsubclassoptionaldat": 561, "getreg": [457, 528, 614], "getregclass": 457, "getreginfo": 457, "getregisterinfo": [457, 614], "getreservedreg": 614, "getreturntyp": 579, "getschedclass": 614, "getsextvalu": 579, "getsigjmp_buftyp": 459, "getsourc": 521, "getsrc": 521, "getsubtarget": 614, "getsubtargetimpl": [614, 617], "getsymboladdress": [516, 625], "getsymboladdressinprocess": [623, 624, 625], "getsymbolnam": 614, "getsymbolt": 579, "gettargetlowering": 614, "gettargetmachin": [623, 624, 625, 639, 640, 641, 642, 644], "gettargettripl": [623, 624, 625], "getter": 579, "getterminator": 579, "getthesparctarget": 614, "getting": [442, 450, 455, 457, 459, 504, 509, 510, 524, 540, 541, 542, 544, 549, 552, 578, 579, 581, 593, 594, 612, 615, 616, 620, 640, 642, 651, 653], "gettingstarted": 540, "gettok": [636, 637, 638, 639, 640, 641, 642, 643, 644], "gettoknam": 644, "gettokprecedent": [637, 638, 639, 640, 641, 642, 643, 644], "gettyp": [459, 579], "gettypenam": 579, "getunqual": 579, "getvalu": [459, 579], "getvalueid": 561, "getvaluetyp": 614, "getvaluevt": 526, "getx86regnum": 614, "getzextvalu": 579, "gfx": 440, "gfx10": [437, 438, 439], "gfx1010": 440, "gfx1011": 440, "gfx1012": 440, "gfx600": 440, "gfx601": 440, "gfx7": [437, 438, 439, 440], "gfx700": 440, "gfx701": 440, "gfx702": 440, "gfx703": 440, "gfx704": 440, "gfx8": [202, 204, 205, 209, 213, 215, 216, 220, 222, 437, 438, 439, 440], "gfx801": 440, "gfx802": 440, "gfx803": 440, "gfx810": 440, "gfx9": [4, 5, 6, 7, 437, 438, 439, 440], "gfx900": 440, "gfx902": 440, "gfx904": 440, "gfx906": 440, "gfx908": 440, "gfx909": 440, "ghash": 493, "ghc": [457, 549, 587], "ghostly": 579, "gi": 581, "gicomplexoperandmatch": 527, "gicomplexpatternequiv": 527, "gid": [468, 487, 497], "gif": 551, "gigabyt": 594, "gil": 585, "ginodeequiv": 527, "gird": 440, "gisel": 517, "giselknownbit": 528, "giselknownbitsanalys": 528, "gist": 521, "git": [455, 504, 509, 520, 535, 578, 607, 608], "gitattribut": 521, "github": [440, 445, 509, 520, 521, 575, 578, 579, 583, 584, 591, 594, 607, 608, 616, 617, 655], "gitlab": [581, 583], "giv": [442, 443, 447, 451, 457, 485, 501, 502, 506, 509, 516, 521, 524, 537, 539, 541, 549, 556, 557, 560, 561, 562, 567, 577, 579, 584, 589, 593, 594, 595, 601, 603, 610, 612, 614, 615, 616, 617, 619, 622, 623, 636, 638, 639, 641, 643, 644, 645, 646, 647, 649, 652, 654], "given": [440, 443, 444, 447, 448, 450, 452, 455, 456, 457, 459, 464, 468, 470, 471, 473, 476, 479, 485, 489, 490, 498, 499, 501, 502, 505, 508, 511, 512, 513, 514, 516, 518, 521, 523, 524, 525, 529, 532, 534, 542, 543, 548, 549, 553, 554, 560, 563, 565, 571, 574, 577, 579, 581, 584, 585, 587, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 607, 611, 614, 615, 617, 619, 621, 622, 623, 624, 625, 637, 638, 639, 641, 648, 649, 652], "giving": [549, 563, 595, 598, 601, 604, 615, 638, 644, 649], "gladly": [521, 523], "glanc": [459, 645, 654], "glasgow": 549, "glc": [0, 1, 2, 3, 18, 19, 20, 21, 22, 25, 26, 27, 33, 34, 50, 53, 115, 116, 117, 118, 119, 125, 126, 136, 138, 199, 200, 201, 206, 207, 218, 219, 235, 238, 316, 317, 323, 324, 348, 349, 350, 351, 352, 355, 356, 357, 363, 364, 380, 383, 436, 440], "glibc": 551, "glibcxx_3": 521, "glin": 613, "glob": 480, "global": [56, 88, 326, 332, 386, 420, 438, 439, 443, 444, 447, 452, 453, 457, 459, 460, 464, 468, 470, 476, 480, 485, 486, 487, 489, 493, 501, 502, 505, 506, 507, 511, 514, 516, 517, 518, 519, 521, 525, 527, 532, 533, 550, 551, 552, 562, 564, 567, 570, 572, 575, 579, 580, 584, 586, 591, 594, 597, 598, 601, 604, 611, 614, 615, 621, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 653, 654], "global_atomic": 440, "global_atomic_add": [0, 3], "global_atomic_add_f32": 7, "global_atomic_add_x2": [0, 3], "global_atomic_and": [0, 3], "global_atomic_and_x2": [0, 3], "global_atomic_cmpswap": [0, 3], "global_atomic_cmpswap_x2": [0, 3], "global_atomic_dec": [0, 3], "global_atomic_dec_x2": [0, 3], "global_atomic_fmax": 0, "global_atomic_fmax_x2": 0, "global_atomic_fmin": 0, "global_atomic_fmin_x2": 0, "global_atomic_inc": [0, 3], "global_atomic_inc_x2": [0, 3], "global_atomic_or": [0, 3], "global_atomic_or_x2": [0, 3], "global_atomic_pk_add_f16": 7, "global_atomic_smax": [0, 3], "global_atomic_smax_x2": [0, 3], "global_atomic_smin": [0, 3], "global_atomic_smin_x2": [0, 3], "global_atomic_sub": [0, 3], "global_atomic_sub_x2": [0, 3], "global_atomic_swap": [0, 3], "global_atomic_swap_x2": [0, 3], "global_atomic_umax": [0, 3], "global_atomic_umax_x2": [0, 3], "global_atomic_umin": [0, 3], "global_atomic_umin_x2": [0, 3], "global_atomic_xor": [0, 3], "global_atomic_xor_x2": [0, 3], "global_begin": [459, 579], "global_buff": 440, "global_context": [649, 650, 651, 652, 653], "global_empty": 579, "global_end": 579, "global_iterator": 579, "global_load": 440, "global_load_dword": [0, 3], "global_load_dwordx2": [0, 3], "global_load_dwordx3": [0, 3], "global_load_dwordx4": [0, 3], "global_load_sbyt": [0, 3], "global_load_sbyte_d16": [0, 3], "global_load_sbyte_d16_h": [0, 3], "global_load_short_d16": [0, 3], "global_load_short_d16_h": [0, 3], "global_load_sshort": [0, 3], "global_load_ubyt": [0, 3], "global_load_ubyte_d16": [0, 3], "global_load_ubyte_d16_h": [0, 3], "global_load_ushort": [0, 3], "global_siz": 579, "global_stor": 440, "global_store_byt": [0, 3], "global_store_byte_d16_h": [0, 3], "global_store_dword": [0, 3], "global_store_dwordx2": [0, 3], "global_store_dwordx3": [0, 3], "global_store_dwordx4": [0, 3], "global_store_short": [0, 3], "global_store_short_d16_h": [0, 3], "globalali": 615, "globalbuff": 440, "globaldc": 579, "globalisel": [524, 526, 527, 528, 529, 530, 533, 534, 586, 587], "globaliz": 487, "globallayoutbuild": 611, "globallisttyp": 579, "globally": [485, 501, 549, 598, 604], "globalref": 570, "globalrefssiz": 570, "globalsa": 560, "globalstreamindex": 567, "globalvar": 447, "globalvari": [519, 615, 645, 654], "globalvarnam": 549, "globl": [439, 440, 513, 562, 598], "glu": [457, 514], "gmail": 578, "gmak": [608, 615], "gmir": [524, 526, 529, 530], "gninj": [607, 617], "gno": 440, "gnu": [442, 455, 457, 459, 465, 467, 468, 474, 478, 479, 486, 487, 488, 491, 493, 494, 496, 497, 498, 510, 511, 513, 517, 521, 535, 536, 537, 538, 540, 549, 587, 603, 614, 615, 643], "gnu_debuglink": 487, "gnu_hash": 593, "gnueab": 540, "gnueabihf": [540, 541], "gnuwin32": [455, 523], "go": [444, 446, 449, 451, 455, 456, 457, 505, 509, 511, 516, 518, 521, 530, 539, 542, 544, 549, 551, 557, 558, 560, 561, 562, 579, 581, 584, 586, 593, 594, 599, 604, 607, 609, 614, 615, 617, 619, 624, 625, 637, 638, 639, 640, 642, 644, 645, 647, 648, 649, 650, 651, 653, 654], "goal": [450, 457, 459, 467, 479, 485, 506, 508, 509, 511, 519, 534, 536, 548, 552, 556, 561, 569, 594, 596, 599, 601, 613, 618, 621, 642, 647, 653], "goat": 459, "gofmt": 459, "going": [438, 443, 452, 456, 457, 459, 489, 508, 514, 518, 524, 530, 539, 549, 560, 563, 575, 579, 581, 587, 588, 594, 597, 615, 616, 625, 639, 640, 641, 642, 644, 646, 647, 650, 651, 652, 653], "goingnat": 579, "gold": [455, 457, 521, 538, 564, 589, 612], "goldberg": 518, "goldberg91": 518, "golden": 459, "gon": 622, "good": [443, 450, 451, 457, 459, 460, 461, 485, 501, 502, 503, 504, 509, 512, 516, 517, 521, 530, 538, 539, 542, 549, 550, 555, 557, 558, 561, 562, 577, 578, 579, 582, 584, 587, 588, 591, 593, 594, 598, 599, 603, 605, 614, 615, 638, 639, 640, 641, 642, 650, 651, 652, 653], "goodby": [556, 595], "goodwill": 509, "googl": [452, 502, 509, 510, 578, 584, 591, 594, 607, 609], "googleblog": 551, "googlegroup": 551, "googleprojectzero": 594, "googletest": 464, "gory": 509, "got": [440, 457, 501, 521, 549, 579, 644, 650], "goto": [459, 549, 561, 640, 641, 642, 643, 644, 653], "gotos": 613, "gov": 583, "govern": 549, "governed": 549, "gpg": 521, "gpgpu": 502, "gpl": [509, 514], "gplv2": 509, "gplv3": [509, 535], "gpr": [440, 457, 511, 524, 549, 555, 557, 587, 603], "gpr64": 555, "gpr_idx": [226, 371], "gprc": 457, "gpu": [202, 204, 205, 213, 215, 216, 437, 439, 440, 457, 502, 510, 562, 601, 612], "gpucc": 502, "gpus": [439, 440, 502, 549, 614], "gpz": 594, "gr": 549, "gr1": 549, "gr16": 457, "gr32": [457, 593, 603, 605], "gr64": [457, 555, 593], "gr64_nosp": 593, "gr8": [457, 614], "grab": [542, 579, 588, 601, 651, 652, 653], "gracefully": [551, 579], "grad": 504, "gradient": 583, "gradually": [524, 530], "grain": 549, "grained": [594, 618], "grammar": [456, 512, 604, 637, 641, 648, 652], "grammatically": [637, 648], "grant": [509, 539, 561], "granted": [452, 509, 561, 621], "granularity": [440, 534, 572, 594, 599], "granulated_lds_siz": 440, "granulated_wavefront_sgpr_count": 440, "granulated_workitem_vgpr_count": 440, "graph": [448, 451, 454, 455, 457, 478, 489, 500, 511, 521, 525, 549, 550, 553, 574, 585, 586, 593, 594, 603, 608, 614, 615, 616, 638, 639, 640, 641, 642, 644, 649, 650, 651, 652, 653], "graphic": [551, 645, 654], "graphical": [641, 652], "graphing": 616, "graphviz": [488, 577, 579, 617], "gratitud": 575, "grayscal": 583, "great": [439, 442, 446, 447, 449, 457, 459, 470, 473, 489, 490, 505, 509, 516, 518, 519, 529, 539, 549, 551, 553, 558, 561, 562, 567, 569, 574, 577, 579, 587, 614, 615, 625, 641, 646, 647, 652], "greatly": [516, 520, 579, 587, 593, 598], "greedy": [457, 465, 501, 532], "green": 584, "greened": 581, "greenedistinguish": 584, "greenegitblam": 584, "greeting": 603, "gregg": 617, "grep": [455, 457, 460, 479, 501, 521, 538, 581, 591, 608, 609, 643], "grepping": 608, "grey": [530, 588], "grid": 440, "grid_siz": 440, "griddim": 562, "gridsiz": 562, "gridsizex": 562, "gridsizey": 562, "grok": [514, 638, 649], "grokabl": 459, "gross": 585, "ground": 458, "groundwork": 587, "group": [438, 440, 447, 457, 460, 468, 479, 485, 492, 493, 501, 506, 508, 509, 520, 530, 548, 558, 561, 567, 581, 585, 590, 599, 601, 603, 605, 608, 614, 645, 654], "group_segment_alignment": 440, "group_segment_fixed_siz": 440, "grouped": [457, 459, 483, 493, 548, 549, 565, 577], "grouping": [453, 478, 493, 498, 620, 637, 648], "groupsegmentfixedsiz": 440, "grow": [457, 458, 501, 547, 549, 551, 557, 579, 640, 651], "growing": 579, "grown": [452, 579, 641, 645, 652, 654], "growth": [457, 549, 579], "grpc": 551, "grpid": 447, "grunt": 501, "gs_op_cut": [46, 133, 231, 376], "gs_op_em": [46, 133, 231, 376], "gs_op_emit_cut": [46, 133, 231, 376], "gs_op_nop": [46, 133, 231, 376], "gt": [473, 506, 562, 603, 604], "gtcasl": 583, "gte": 549, "gtu": 562, "gtx": 562, "guarante": [444, 457, 485, 505, 509, 511, 513, 514, 516, 519, 529, 549, 560, 563, 577, 579, 590, 593, 596, 598, 601, 611, 615, 642, 653], "guaranteed": [443, 444, 447, 457, 459, 460, 501, 505, 521, 536, 549, 550, 564, 572, 577, 579, 594, 596, 598], "guaranteedtailcallopt": 549, "guard": [459, 513, 516, 536, 551, 579, 587, 594, 615, 621], "guard_cond": 549, "guard_condit": 549, "guarded": [549, 601], "guardedpoolallocator": 536, "guarding": 594, "guess": [455, 487, 551, 584], "guessed": 639, "gui": [455, 523], "guid": [449, 451, 455, 457, 458, 464, 502, 503, 504, 506, 508, 509, 520, 521, 522, 523, 538, 539, 540, 542, 549, 551, 572, 578, 579, 580, 584, 586, 588, 593, 614, 620, 637, 643, 648, 655], "guidanc": [452, 459, 504, 509, 516, 567], "guided": [442, 453, 506, 519, 586, 612], "guidelin": [509, 541, 556, 579, 584, 594], "gunzip": [521, 523], "gv": [549, 579], "gvn": [444, 516, 550, 615, 622, 623, 624, 625, 639, 640, 641, 642], "gvneedslazyptr": 614, "gvnhoist": 560, "gvreg": [527, 529], "gwp": 586, "gwp_asan": 536, "gwp_asan_opt": 536, "gwpasanallocator": 536, "gz": [521, 523, 541, 588, 617], "gzip": [521, 617], "g\u00e9n\u00e9ral": [0, 1, 2, 3, 4, 5, 6, 7], "h": [15, 32, 124, 202, 204, 205, 213, 215, 216, 217, 345, 362, 439, 440, 441, 446, 455, 459, 464, 468, 471, 474, 478, 483, 486, 487, 488, 492, 493, 494, 496, 497, 498, 501, 508, 511, 512, 517, 518, 521, 523, 528, 535, 536, 543, 549, 551, 552, 561, 562, 570, 572, 580, 585, 587, 593, 599, 601, 611, 614, 615, 616, 617, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 650, 651, 652, 653], "h264ref": 607, "hab": [459, 577], "hac": 594, "hack": [504, 509, 574, 578, 615, 644, 645, 646, 647, 654], "hackabl": 647, "hackathon": 558, "hacking": [581, 615, 647], "had": [440, 446, 449, 470, 485, 509, 524, 549, 556, 558, 562, 579, 581, 585, 593, 595, 596, 598, 599, 615, 619], "hainan": 440, "half": [438, 440, 447, 457, 459, 473, 489, 525, 551, 556, 579, 587, 595, 614, 622], "halfton": 583, "halt": 440, "halting": 594, "halv": 512, "han": 542, "hand": [444, 457, 459, 508, 518, 519, 543, 549, 555, 560, 561, 563, 566, 577, 579, 588, 590, 594, 599, 601, 605, 614, 619, 637, 638, 639, 641, 646, 647, 648, 649, 650, 652, 654], "handful": [545, 579], "handily": 459, "handl": [439, 444, 446, 457, 460, 481, 501, 505, 511, 515, 516, 518, 527, 529, 536, 543, 548, 549, 552, 562, 563, 571, 574, 577, 579, 581, 585, 587, 590, 593, 594, 596, 599, 603, 613, 614, 615, 616, 618, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 651, 652, 653], "handle_extens": 615, "handleallerror": 579, "handled": [41, 109, 131, 193, 227, 341, 372, 438, 439, 440, 441, 457, 505, 509, 510, 511, 513, 529, 536, 547, 548, 549, 552, 563, 577, 579, 590, 596, 598, 614, 636, 637, 642, 647, 648, 653], "handledefinit": [637, 638, 639, 640, 641, 642, 643, 644], "handleerror": 579, "handleextern": [637, 638, 639, 640, 641, 642, 643, 644], "handlelazycompilefailur": 563, "handleon": 625, "handler": [440, 457, 505, 536, 549, 587, 621], "handler0": 549, "handler1": 549, "handler2": 549, "handlerpcoffset": 515, "handletoplevelexpress": [637, 638, 639, 640, 641, 642, 643, 644], "handling": [455, 466, 501, 503, 505, 517, 525, 545, 555, 564, 586, 587, 590, 593, 594, 598, 599, 604, 614, 621, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 651, 654], "handy": [579, 595, 638, 649], "hang": 525, "hao": 585, "happen": [439, 440, 441, 444, 450, 451, 457, 458, 459, 460, 461, 505, 509, 515, 518, 524, 525, 529, 530, 549, 551, 553, 554, 558, 560, 561, 563, 567, 572, 577, 578, 579, 581, 582, 584, 593, 594, 597, 598, 601, 619, 622, 638, 640, 644, 649, 651], "happened": [514, 526, 581, 590, 596, 615, 637, 639, 648, 650], "happening": [457, 554, 579, 593], "happily": 639, "happy": [578, 579, 580, 581, 642, 653], "harassment": 458, "hard": [451, 457, 459, 487, 509, 511, 514, 516, 538, 540, 541, 549, 551, 574, 576, 577, 578, 580, 584, 593, 594, 598, 599, 602, 605, 607, 619, 637, 641, 643, 647, 648, 652], "hardcoded": [546, 614], "hardcodedsmallsiz": 579, "hardcoding": 593, "harddriv": 538, "harden": 594, "hardened": [536, 549, 559, 586, 594], "hardening": [549, 559, 586, 594], "hardwar": [40, 225, 370, 440, 444, 455, 457, 466, 479, 485, 502, 509, 516, 549, 550, 559, 562, 591, 594, 614], "hardwareassistedaddresssanitiz": 559, "harfbuzz": 551, "harm": 457, "harmless": [539, 577], "harness": 580, "harr": 583, "harvard": 549, "has": [209, 220, 222, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 468, 469, 479, 481, 483, 485, 487, 488, 489, 490, 492, 493, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 528, 529, 530, 532, 534, 536, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 567, 569, 570, 571, 572, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "has_asmpars": 548, "has_asmprint": 548, "has_disassembl": 548, "has_j": 548, "hasadsizeprefix": 605, "hasard": 518, "hasconflictingtyp": 567, "hasctrldep": [603, 605], "hasdelayslot": 605, "haserror": 589, "hasexternallinkag": 579, "hasfp": 614, "hasfparmv8": 605, "hasgc": 561, "hash": [440, 443, 457, 473, 489, 492, 493, 506, 510, 549, 551, 561, 565, 572, 574, 575, 579, 581, 607, 619, 645, 654], "hash_data_count": 593, "hash_funct": 593, "hash_map": 579, "hash_set": 579, "hashadjbufferlength": 574, "hashadjbufferoffset": 574, "hashauxstreamindex": 574, "hashbufferlength": 574, "hashdat": 593, "hashed": 462, "hashes_count": 593, "hashfunctiontyp": 593, "hashing": [493, 561, 579], "hashkeysiz": 574, "hashstreamindex": 574, "hashtbl": [648, 649, 650, 651, 652, 653], "hashvaluebufferlength": 574, "hashvaluebufferoffset": 574, "hasinitializ": 579, "hasinternallinkag": 579, "hasj": 614, "haskel": [549, 579, 645, 654], "hasn": [519, 579, 615], "hasnam": 579, "hason": 459, "hasopsizeprefix": 605, "hasrex_wprefix": 605, "hassideeffect": [485, 605], "hassse2": 603, "hassse3": 603, "haswel": [479, 594], "hat": 619, "hatsiz": 619, "haut": 620, "hav": [40, 46, 88, 103, 133, 189, 225, 231, 286, 332, 370, 376, 420, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 464, 468, 470, 473, 476, 479, 485, 486, 487, 489, 498, 499, 501, 502, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 523, 524, 525, 526, 527, 529, 530, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 572, 574, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 608, 609, 610, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "haven": [459, 523, 526, 549, 614, 615, 616, 617, 624, 625], "having": [440, 443, 444, 447, 451, 457, 459, 485, 501, 505, 509, 510, 511, 513, 518, 521, 523, 524, 529, 534, 538, 545, 549, 551, 554, 557, 561, 563, 567, 574, 578, 579, 581, 582, 585, 587, 589, 593, 594, 598, 599, 601, 604, 609, 610, 614, 615, 617, 619, 622, 637, 638, 641, 642, 648, 650, 652, 653], "havoq": 583, "hawai": 440, "hazard": 550, "hazardous": 594, "hblcnsviw": 501, "hd": [440, 502], "hd2xxx": 440, "hd6xxx": 440, "hdl": 505, "head": [442, 444, 447, 455, 459, 481, 487, 488, 489, 497, 501, 502, 504, 508, 513, 514, 515, 516, 518, 520, 521, 523, 528, 533, 543, 548, 549, 553, 555, 566, 577, 578, 579, 580, 581, 587, 589, 596, 599, 601, 603, 604, 608, 610, 614, 616, 617, 621, 623, 640, 641, 642, 643, 644, 651, 652, 653, 656], "headach": 588, "headed": [442, 549], "header": [455, 472, 487, 488, 489, 492, 493, 497, 508, 509, 510, 523, 541, 549, 554, 567, 579, 587, 601, 614], "header0": 549, "header_dat": 593, "header_data_len": 593, "headerblock": 575, "headerdat": 593, "headersiz": 574, "heading": [556, 595], "headlight": 459, "heal": 515, "healing": 515, "heap": [443, 536, 549, 550, 560, 586, 591, 592, 594, 596, 598, 619, 642, 645, 653, 654], "heard": [502, 510, 582], "heart": [471, 598], "heartbleed": 551, "heartfelt": 575, "heartwall": 583, "heavily": [440, 489, 518, 579, 593, 594, 612, 645, 654], "heavy": [579, 587, 594, 598, 622], "heavyweight": 579, "heffernan": 502, "held": [446, 509, 549, 578], "hello": [456, 506, 521, 523, 549, 601, 603, 647], "hello_world": 440, "hellooooooooooooooo": 536, "helloworld": [456, 540], "help": [439, 440, 443, 444, 450, 451, 452, 453, 455, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 482, 483, 485, 486, 487, 488, 490, 492, 493, 494, 496, 497, 498, 499, 500, 503, 505, 508, 509, 512, 516, 518, 521, 529, 530, 536, 537, 538, 539, 542, 544, 545, 548, 549, 551, 552, 554, 557, 560, 564, 578, 579, 581, 582, 583, 584, 588, 590, 591, 593, 594, 595, 597, 598, 599, 601, 603, 605, 607, 609, 614, 615, 617, 618, 619, 621, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 652, 653, 654], "helped": 599, "helper": [517, 561, 579, 609], "helpful": [441, 446, 451, 459, 460, 501, 510, 522, 539, 549, 560, 593, 617, 621], "helping": [458, 544], "henc": [440, 459, 501, 505, 521, 549, 552, 596, 604], "henceforth": [570, 574, 592], "henderson": 584, "henderson2002": 518, "hendersonprefix": 584, "henrik": 599, "her": [38, 39, 129, 223, 224, 368, 369, 438, 439, 440, 442, 443, 444, 450, 451, 455, 456, 457, 459, 460, 467, 468, 485, 489, 490, 501, 502, 506, 507, 509, 510, 511, 514, 516, 518, 519, 520, 521, 523, 524, 528, 530, 536, 537, 538, 539, 540, 542, 543, 546, 549, 550, 551, 552, 554, 555, 558, 560, 561, 562, 563, 566, 567, 572, 575, 578, 579, 581, 584, 587, 590, 591, 592, 593, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 610, 612, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 656], "hereby": 459, "hertz": 618, "heterogeneous": 440, "heuristic": [457, 549, 577, 610, 616, 618, 642, 653], "heuristically": 610, "hex": [460, 485, 486, 487, 488, 489, 492, 493, 494, 549, 551], "hex16": 619, "hex32": 619, "hex64": 619, "hex8": 619, "hex_valu": 479, "hexadecimal": [439, 483, 486, 489, 492, 493, 494, 496, 501, 549, 603, 619], "hexagon": [457, 521, 549, 584, 601], "hexinteg": 604, "hfc": 515, "hh": 439, "hh567368": 459, "hi": [439, 518, 524, 551, 552, 579], "hi16": 457, "hid": [501, 505, 581, 598], "hidden": [440, 447, 457, 459, 463, 473, 487, 501, 545, 547, 549, 567, 579, 581, 593, 610, 611, 615], "hidden_completion_act": 440, "hidden_default_queu": 440, "hidden_global_offset_x": 440, "hidden_global_offset_y": 440, "hidden_global_offset_z": 440, "hidden_hostcall_buff": 440, "hidden_multigrid_sync_arg": 440, "hidden_non": 440, "hidden_printf_buff": 440, "hiddencompletionact": 440, "hiddendefaultqueu": 440, "hiddenglobaloffsetx": 440, "hiddenglobaloffsety": 440, "hiddenglobaloffsetz": 440, "hiddenhostcallbuff": 440, "hiddenmultigridsyncarg": 440, "hiddennon": 440, "hiddenprintfbuff": 440, "hideak": 457, "hierarch": [464, 579], "hierarchical": [447, 508, 577, 585], "hierarchy": [464, 485, 512, 521, 544, 549, 585, 586, 611, 638], "high": [0, 2, 3, 103, 209, 220, 222, 435, 439, 440, 442, 443, 445, 447, 449, 452, 455, 479, 485, 489, 502, 504, 505, 507, 509, 510, 511, 512, 516, 517, 518, 519, 520, 523, 525, 530, 536, 539, 542, 554, 558, 559, 560, 561, 562, 563, 564, 571, 574, 577, 579, 580, 586, 587, 593, 594, 596, 598, 603, 609, 610, 611, 613, 614, 616, 618, 620, 621, 623, 637, 642, 645, 646, 648, 653, 654], "highest": [440, 446, 525, 549, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "highlight": [456, 506, 516, 524, 556, 579, 601, 617, 644], "highlighted": [457, 485], "highlighting": [521, 556, 595, 638], "highly": [457, 502, 509, 516, 518, 539, 549, 551, 558, 579, 580, 591, 594, 610, 623, 642, 653], "highproductivity": 583, "hihih": 579, "him": 561, "hint": [451, 459, 488, 498, 516, 519, 549, 587, 610, 638, 649], "hip": [440, 457, 549], "hiraditi": 583, "his": 579, "histogram": [484, 485, 492, 493, 583], "histor": 581, "historical": [452, 459, 519, 579, 598, 609], "historically": [442, 456, 459, 549], "history": [509, 521, 575, 578], "hit": [485, 551, 560, 579, 594, 624, 625], "hitherto": 447, "hitting": 448, "hmmer": 607, "hoc": [457, 577, 579], "hoist": [443, 577, 596, 610, 615], "hoisted": [440, 443, 549, 579, 596], "hoisting": [444, 560, 577, 587, 596, 615], "hol": [501, 549, 582, 594, 598], "hold": [439, 440, 442, 457, 458, 501, 509, 511, 513, 518, 521, 548, 549, 551, 554, 561, 574, 577, 579, 580, 585, 591, 593, 594, 603, 605, 614, 618, 636, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "holder": 509, "holding": [511, 555, 593, 601, 609, 615, 638, 649], "hollow": 619, "hom": [507, 516, 521, 538, 579, 583, 593, 608, 609], "homeless": 579, "homepag": [521, 523], "honour": 513, "honoured": 513, "hood": 506, "hook": [444, 451, 457, 526, 549, 580, 581, 640], "hooked": 511, "hop": [509, 518, 561, 576], "hopefully": [443, 447, 459, 501, 502, 556, 577, 615, 622, 639, 650], "horizontal": [460, 485, 549], "hork": 603, "horn": 594, "horribl": 638, "host": [440, 442, 453, 455, 457, 459, 466, 468, 479, 485, 518, 539, 541, 549, 554, 562, 563, 579, 581, 583, 607, 609, 621, 643], "host_fn": 502, "host_install_d": 540, "host_only": 502, "hostb": 562, "hostc": 562, "hostcall": 440, "hosted": [520, 521, 579, 581, 607], "hosting": [578, 581], "hostnam": 607, "hot": [448, 516, 549, 594, 598], "hotfix": 581, "hotness": [549, 587, 589], "hotspot3d": 583, "hott": [448, 587], "hottest": [490, 549], "hour": [442, 590], "how": [46, 133, 231, 376, 438, 440, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 459, 460, 463, 464, 471, 489, 498, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 516, 518, 520, 521, 522, 523, 529, 531, 548, 549, 550, 555, 556, 560, 562, 564, 567, 575, 577, 578, 579, 580, 581, 582, 584, 585, 586, 590, 594, 596, 598, 602, 603, 604, 605, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655], "howev": [440, 441, 443, 444, 446, 447, 451, 456, 457, 459, 460, 468, 485, 501, 502, 505, 508, 509, 511, 513, 514, 515, 518, 519, 521, 524, 526, 529, 535, 541, 542, 543, 546, 547, 548, 549, 551, 554, 555, 556, 563, 566, 574, 576, 578, 579, 581, 582, 584, 585, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 605, 608, 609, 611, 613, 615, 623, 638, 639, 640, 641, 642, 645, 650, 651, 652, 653, 654], "howto": [541, 556, 595, 601, 655], "howtosubmitabug": 521, "howtousej": 472, "howtousellj": 563, "hpgmg": 583, "hpp": 511, "hresult": 574, "hrf": 440, "hsatext": 440, "hsl": 583, "ht206167": 551, "htm": 583, "html": [455, 459, 473, 479, 512, 521, 540, 541, 542, 551, 556, 562, 581, 583, 584, 588, 589, 594, 601, 607, 608, 621], "hton": 625, "http": [445, 455, 459, 481, 483, 487, 488, 494, 496, 497, 517, 520, 521, 523, 537, 540, 541, 542, 543, 551, 556, 578, 581, 583, 584, 588, 591, 594, 607, 608, 616, 621, 622, 623, 624, 625, 655], "hug": [459, 509, 521, 551, 566, 574, 601, 605, 609], "huge16": 566, "hugepoint": 574, "human": [454, 458, 459, 469, 470, 473, 477, 478, 482, 484, 490, 498, 521, 536, 549, 555, 577, 594, 605, 615, 619], "hundred": 516, "hundt": 502, "hung": [579, 654], "hurdl": 514, "hurt": 459, "hw": [440, 549], "hw_reg_flat_scr_h": 40, "hw_reg_flat_scr_lo": 40, "hw_reg_gpr_alloc": [40, 130, 225, 370], "hw_reg_hw_id": [40, 130, 225, 370], "hw_reg_ib_st": [40, 130, 225, 370], "hw_reg_lds_alloc": [40, 130, 225, 370], "hw_reg_mod": [40, 130, 225, 370], "hw_reg_pops_pack": 40, "hw_reg_sh_mem_bas": [40, 370], "hw_reg_status": [40, 130, 225, 370], "hw_reg_tba_h": 40, "hw_reg_tba_lo": 40, "hw_reg_tma_h": 40, "hw_reg_tma_lo": 40, "hw_reg_trapst": [40, 130, 225, 370], "hw_reg_xnack_mask": 40, "hwaddresssanitiz": 549, "hwreg": [0, 1, 2, 3], "hwreg_enc": [40, 130, 225, 370], "hybrid": 594, "hydr": 442, "hydro": 583, "hyp": 584, "hypersparc": 614, "hyphen": 614, "hypothesized": 570, "hypothetical": [457, 511, 561, 563, 571, 579, 598, 615], "hypothetically": 524, "h\u00e4hnle": 584, "h\u00e4hnledistinguish": 584, "i": [438, 440, 443, 444, 445, 447, 448, 451, 453, 454, 455, 456, 457, 459, 460, 461, 467, 468, 473, 474, 478, 479, 485, 486, 487, 490, 492, 493, 497, 498, 500, 501, 505, 508, 509, 511, 513, 515, 518, 520, 521, 524, 525, 526, 536, 541, 543, 544, 545, 548, 549, 551, 552, 556, 558, 562, 563, 571, 577, 579, 581, 584, 586, 590, 591, 593, 595, 596, 598, 599, 601, 603, 604, 605, 607, 609, 610, 611, 613, 614, 615, 617, 622, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "i0": 614, "i1": [448, 457, 505, 514, 515, 524, 549, 560, 562, 593, 610, 611, 614, 638, 640, 642, 649, 651, 653], "i16": [0, 2, 3, 439, 440, 457, 549, 562, 614], "i16x2": [6, 7], "i17": 524, "i1942652": 549, "i2": [457, 549, 614], "i20": 549, "i24": 549, "i256": 549, "i29": 549, "i3": [457, 614], "i32": [0, 1, 2, 3, 6, 7, 439, 440, 446, 448, 449, 457, 460, 505, 506, 511, 514, 515, 518, 524, 525, 526, 528, 529, 546, 547, 549, 555, 556, 561, 562, 577, 579, 587, 593, 595, 596, 598, 605, 609, 611, 614, 616, 642, 645, 653, 654], "i32imm": [603, 614], "i32mem": 603, "i32x16": 7, "i32x32": 7, "i32x4": 7, "i386": [457, 487, 498, 549, 591], "i4": [549, 614], "i48": 549, "i4x2": [6, 7], "i4x8": 7, "i5": 614, "i6": 614, "i64": [0, 1, 2, 3, 439, 440, 446, 449, 457, 460, 505, 506, 519, 549, 562, 596, 598, 605, 611, 614], "i64imm": 614, "i65": 549, "i67": 549, "i686": [457, 460, 591, 609], "i7": [537, 549, 614], "i8": [440, 444, 446, 457, 460, 505, 506, 511, 518, 524, 526, 547, 549, 560, 562, 593, 596, 598, 605, 611, 614], "i8086": 643, "i8mem": 457, "i8x2": [6, 7], "i8x4": 7, "ia": 503, "iac": 485, "iaddroff": 457, "iamcu": 487, "ibm": [508, 587], "ic": [451, 584], "icc": [521, 593, 613], "icc_e": 614, "icc_g": 614, "icc_ne": 614, "icc_val": 614, "ice": [521, 550], "iceland": 440, "icmp": [447, 505, 515, 579, 587, 593], "icmp_eq": 555, "icmpinst": 579, "icon": 578, "iconst": [81, 152, 157, 160, 165, 167, 264, 411], "icu": 551, "id": [40, 46, 130, 133, 225, 231, 370, 376, 438, 443, 455, 457, 460, 479, 485, 487, 488, 489, 513, 555, 561, 562, 567, 579, 581, 591, 596, 598, 604, 614, 615, 617, 618, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "idat": 486, "ide": [442, 447, 448, 455, 456, 459, 485, 501, 505, 508, 509, 511, 512, 516, 523, 538, 549, 558, 561, 577, 583, 584, 588, 593, 594, 603, 617, 621, 637, 638, 639, 640, 642, 645, 646, 648, 649, 650, 651, 653, 654], "ideal": 579, "ideally": [485, 509, 548, 551, 558, 598, 614], "ident": [593, 609, 647, 648, 649, 650, 651, 652, 653], "ident_t": 549, "identical": [442, 446, 457, 459, 460, 468, 475, 529, 541, 549, 550, 555, 561, 567, 574, 579, 593, 601, 617, 639, 640, 642, 650, 651, 653], "identically": [460, 549], "identif": [447, 464, 485, 511, 513, 519, 521, 541, 549, 550, 567, 574, 581, 593, 611, 613, 614], "identifi": [447, 457, 459, 460, 519, 555, 557, 562, 572, 577, 579, 581, 584, 598, 601, 604, 610, 611, 614, 615, 616, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "identified": [46, 133, 231, 376, 447, 452, 454, 455, 459, 464, 485, 501, 508, 513, 518, 530, 549, 555, 567, 577, 579, 589, 593, 614], "identifierexpr": [637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "identifierstr": [636, 637, 638, 639, 640, 641, 642, 643, 644], "identify": [440, 451, 464, 485, 511, 518, 536, 550, 577, 579, 581, 584, 585, 588, 593, 594, 596, 598, 604, 611, 613, 614, 615], "identifycudapreferent": 502, "identifying": [447, 458, 485, 505, 549, 584, 598], "identit": [457, 458, 577, 590, 611], "identity": [457, 458, 505, 518, 549, 611], "identityprop": 579, "identitytransform": 622, "idiom": [501, 502, 505, 579, 585, 594, 638, 649], "idiomatic": [459, 579, 585, 609], "idiv": 457, "idnam": [637, 638, 639, 640, 641, 642, 643, 644], "idx": [459, 479, 519, 549, 555, 587, 617, 638, 639, 640, 641, 642, 643, 644], "idx0": 549, "idx1": [519, 549], "idx2": 519, "idx3": 519, "idxen": [0, 1, 2, 3, 7, 8, 106, 190, 307, 338, 440], "idxmask": 549, "ie": [501, 549, 560], "iee": [440, 465, 502, 516, 525, 549, 601], "ieee754": 549, "ieee_mod": 440, "if": [8, 11, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 49, 50, 55, 56, 57, 76, 89, 90, 104, 105, 106, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 133, 135, 136, 140, 161, 190, 199, 200, 201, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 231, 235, 240, 260, 307, 316, 317, 323, 326, 338, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 376, 379, 380, 386, 387, 407, 421, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 523, 524, 525, 528, 529, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 566, 567, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 581, 582, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 605, 607, 608, 609, 610, 611, 612, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654], "ifbody": 604, "ifcond": [640, 641, 642, 643, 644, 651, 652, 653], "ifcont": [640, 641, 642, 643, 644, 651, 652, 653], "ifconvers": 614, "ifconvert": 614, "ifdef": [501, 502, 506, 536, 551, 599, 604, 639, 640, 641, 642, 643, 644, 645, 654], "ifequal": 549, "ifexpr": [640, 641, 642, 643, 644, 651, 652, 653], "ifexprast": [640, 641, 642, 643, 644, 651], "iff": [529, 549], "iffals": 549, "ifiqu": 501, "ifloc": 644, "ifndef": [502, 621, 622, 623, 624, 625], "ifstream": 562, "iftmp": [640, 641, 642, 643, 644, 651, 652, 653], "iftru": 549, "ifunc": 447, "ifuncty": 549, "ifunequal": 549, "ignor": [439, 457, 460, 470, 473, 478, 479, 481, 484, 487, 497, 501, 509, 520, 521, 549, 557, 584, 593, 622, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "ignore_crash": 551, "ignore_oom": 551, "ignore_remaining_arg": 517, "ignore_timeout": 551, "ignored": [15, 32, 124, 135, 217, 345, 362, 440, 443, 447, 448, 460, 468, 475, 476, 485, 486, 487, 488, 494, 496, 505, 508, 515, 548, 549, 551, 561, 567, 572, 579, 593, 610, 613, 614], "ignoring": [448, 460, 489, 549], "ihex": 487, "ii": 579, "ii32": 603, "ilbdc": 583, "ill": [468, 536, 549], "illegal": [106, 440, 457, 501, 514, 519, 529, 530, 549, 562, 577, 579, 581, 598, 613], "illinois": [509, 583], "illustr": [508, 593], "illustrat": [440, 446, 498, 501, 508, 549, 552, 579, 581, 593, 637, 638, 642, 648, 649, 650, 653], "illustrated": [505, 549, 615, 636, 647], "ilp": [485, 613], "ilp32": [645, 654], "im": 549, "imac": 613, "imag": [11, 21, 22, 23, 24, 35, 36, 37, 55, 58, 109, 118, 119, 120, 127, 128, 140, 141, 193, 206, 207, 208, 209, 220, 221, 222, 240, 241, 341, 351, 352, 353, 354, 365, 366, 367, 385, 388, 438, 439, 457, 484, 486, 487, 488, 489, 513, 549, 554, 572, 601, 641, 652], "image_atomic_add": [0, 1, 2, 3], "image_atomic_and": [0, 1, 2, 3], "image_atomic_cmpswap": [0, 1, 2, 3], "image_atomic_dec": [0, 1, 2, 3], "image_atomic_inc": [0, 1, 2, 3], "image_atomic_or": [0, 1, 2, 3], "image_atomic_smax": [0, 1, 2, 3], "image_atomic_smin": [0, 1, 2, 3], "image_atomic_sub": [0, 1, 2, 3], "image_atomic_swap": [0, 1, 2, 3], "image_atomic_umax": [0, 1, 2, 3], "image_atomic_umin": [0, 1, 2, 3], "image_atomic_xor": [0, 1, 2, 3], "image_comdat_select_associ": 549, "image_comdat_select_largest": 549, "image_debug_directory": 572, "image_debug_type_codeview": 572, "image_debug_type_except": 567, "image_debug_type_fixup": 567, "image_debug_type_fpo": 567, "image_debug_type_omap_from_src": 567, "image_debug_type_omap_to_src": 567, "image_file_32bit_machin": 656, "image_file_aggressive_ws_trim": 656, "image_file_bytes_reversed_h": 656, "image_file_bytes_reversed_lo": 656, "image_file_debug_stripped": 656, "image_file_dll": 656, "image_file_executable_imag": 656, "image_file_large_address_awar": 656, "image_file_line_nums_stripped": 656, "image_file_local_syms_stripped": 656, "image_file_machine_am33": 656, "image_file_machine_amd64": 656, "image_file_machine_arm": 656, "image_file_machine_arm64": 656, "image_file_machine_armnt": 656, "image_file_machine_ebc": 656, "image_file_machine_i386": 656, "image_file_machine_ia64": 656, "image_file_machine_m32r": 656, "image_file_machine_mips16": 656, "image_file_machine_mipsfpu": 656, "image_file_machine_mipsfpu16": 656, "image_file_machine_powerpc": 656, "image_file_machine_powerpcfp": 656, "image_file_machine_r4000": 656, "image_file_machine_sh3": 656, "image_file_machine_sh3dsp": 656, "image_file_machine_sh4": 656, "image_file_machine_sh5": 656, "image_file_machine_thumb": 656, "image_file_machine_unknown": 656, "image_file_machine_wcemipsv2": 656, "image_file_net_run_from_swap": 656, "image_file_relocs_stripped": 656, "image_file_removable_run_from_swap": 656, "image_file_system": 656, "image_file_up_system_only": 656, "image_gather4": [0, 1, 2, 3, 35, 127, 220, 365], "image_gather4_b": [0, 1, 2, 3], "image_gather4_b_cl": [0, 1, 2, 3], "image_gather4_b_cl_o": [0, 1, 2, 3], "image_gather4_b_o": [0, 1, 2, 3], "image_gather4_c": [0, 1, 2, 3], "image_gather4_c_b": [0, 1, 2, 3], "image_gather4_c_b_cl": [0, 1, 2, 3], "image_gather4_c_b_cl_o": [0, 1, 2, 3], "image_gather4_c_b_o": [0, 1, 2, 3], "image_gather4_c_cl": [0, 1, 2, 3], "image_gather4_c_cl_o": [0, 1, 2, 3], "image_gather4_c_l": [0, 1, 2, 3], "image_gather4_c_l_o": [0, 1, 2, 3], "image_gather4_c_lz": [0, 1, 2, 3], "image_gather4_c_lz_o": [0, 1, 2, 3], "image_gather4_c_o": [0, 1, 2, 3], "image_gather4_cl": [0, 1, 2, 3], "image_gather4_cl_o": [0, 1, 2, 3], "image_gather4_l": [0, 1, 2, 3], "image_gather4_l_o": [0, 1, 2, 3], "image_gather4_lz": [0, 1, 2, 3], "image_gather4_lz_o": [0, 1, 2, 3], "image_gather4_o": [0, 1, 2, 3], "image_get_lod": [0, 1, 2, 3], "image_get_resinfo": [0, 1, 2, 3], "image_load": [0, 1, 2, 3], "image_load_mip": [0, 1, 2, 3], "image_load_mip_pck": [0, 1, 2, 3], "image_load_mip_pck_sgn": [0, 1, 2, 3], "image_load_pck": [0, 1, 2, 3], "image_load_pck_sgn": [0, 1, 2, 3], "image_rel_amd64_addr32nb": 513, "image_rel_amd64_secrel": 513, "image_rel_amd64_sect": 513, "image_rel_arm64_secrel_high12": 513, "image_rel_arm64_secrel_low12": 513, "image_rel_arm64_secrel_low12l": 513, "image_rel_i386_dir32nb": 513, "image_rel_i386_secrel": 513, "image_rel_i386_sect": 513, "image_sampl": [0, 1, 2, 3], "image_sample_b": [0, 1, 2, 3], "image_sample_b_cl": [0, 1, 2, 3], "image_sample_b_cl_o": [0, 1, 2, 3], "image_sample_b_o": [0, 1, 2, 3], "image_sample_c": [0, 1, 2, 3], "image_sample_c_b": [0, 1, 2, 3], "image_sample_c_b_cl": [0, 1, 2, 3], "image_sample_c_b_cl_o": [0, 1, 2, 3], "image_sample_c_b_o": [0, 1, 2, 3], "image_sample_c_cd": [0, 1, 2, 3], "image_sample_c_cd_cl": [0, 1, 2, 3], "image_sample_c_cd_cl_o": [0, 1, 2, 3], "image_sample_c_cd_o": [0, 1, 2, 3], "image_sample_c_cl": [0, 1, 2, 3], "image_sample_c_cl_o": [0, 1, 2, 3], "image_sample_c_d": [0, 1, 2, 3], "image_sample_c_d_cl": [0, 1, 2, 3], "image_sample_c_d_cl_o": [0, 1, 2, 3], "image_sample_c_d_o": [0, 1, 2, 3], "image_sample_c_l": [0, 1, 2, 3], "image_sample_c_l_o": [0, 1, 2, 3], "image_sample_c_lz": [0, 1, 2, 3], "image_sample_c_lz_o": [0, 1, 2, 3], "image_sample_c_o": [0, 1, 2, 3], "image_sample_cd": [0, 1, 2, 3], "image_sample_cd_cl": [0, 1, 2, 3], "image_sample_cd_cl_o": [0, 1, 2, 3], "image_sample_cd_o": [0, 1, 2, 3], "image_sample_cl": [0, 1, 2, 3], "image_sample_cl_o": [0, 1, 2, 3], "image_sample_d": [0, 1, 2, 3], "image_sample_d_cl": [0, 1, 2, 3], "image_sample_d_cl_o": [0, 1, 2, 3], "image_sample_d_o": [0, 1, 2, 3], "image_sample_l": [0, 1, 2, 3], "image_sample_l_o": [0, 1, 2, 3], "image_sample_lz": [0, 1, 2, 3], "image_sample_lz_o": [0, 1, 2, 3], "image_sample_o": [0, 1, 2, 3], "image_scn_align_1024byt": 656, "image_scn_align_128byt": 656, "image_scn_align_16byt": 656, "image_scn_align_1byt": 656, "image_scn_align_2048byt": 656, "image_scn_align_256byt": 656, "image_scn_align_2byt": 656, "image_scn_align_32byt": 656, "image_scn_align_4096byt": 656, "image_scn_align_4byt": 656, "image_scn_align_512byt": 656, "image_scn_align_64byt": 656, "image_scn_align_8192byt": 656, "image_scn_align_8byt": 656, "image_scn_cnt_cod": 656, "image_scn_cnt_initialized_dat": [513, 656], "image_scn_cnt_uninitialized_dat": [513, 656], "image_scn_gprel": 656, "image_scn_lnk_comdat": 656, "image_scn_lnk_info": [486, 656], "image_scn_lnk_nreloc_ovfl": 656, "image_scn_lnk_oth": 656, "image_scn_lnk_remov": [513, 656], "image_scn_mem_16b": 656, "image_scn_mem_discard": [513, 656], "image_scn_mem_execut": 656, "image_scn_mem_locked": 656, "image_scn_mem_not_cached": 656, "image_scn_mem_not_paged": 656, "image_scn_mem_preload": 656, "image_scn_mem_purge": 656, "image_scn_mem_read": 656, "image_scn_mem_shared": 656, "image_scn_mem_writ": 656, "image_scn_type_no_pad": 656, "image_section_head": 567, "image_stor": [0, 1, 2, 3, 23, 24, 120, 208, 209, 353, 354], "image_store_mip": [0, 1, 2, 3], "image_store_mip_pck": [0, 1, 2, 3], "image_store_pck": [0, 1, 2, 3], "image_sym_class_argu": 656, "image_sym_class_automatic": 656, "image_sym_class_bit_field": 656, "image_sym_class_block": 656, "image_sym_class_clr_token": 656, "image_sym_class_end_of_funct": 656, "image_sym_class_end_of_struct": 656, "image_sym_class_enum_tag": 656, "image_sym_class_external": 656, "image_sym_class_external_def": 656, "image_sym_class_fil": 656, "image_sym_class_funct": 656, "image_sym_class_label": 656, "image_sym_class_member_of_enum": 656, "image_sym_class_member_of_struct": 656, "image_sym_class_member_of_union": 656, "image_sym_class_null": 656, "image_sym_class_regist": 656, "image_sym_class_register_param": 656, "image_sym_class_sect": 656, "image_sym_class_static": 656, "image_sym_class_struct_tag": 656, "image_sym_class_type_definit": 656, "image_sym_class_undefined_label": 656, "image_sym_class_undefined_static": 656, "image_sym_class_union_tag": 656, "image_sym_class_weak_external": 656, "image_sym_dtype_array": 656, "image_sym_dtype_funct": 656, "image_sym_dtype_null": 656, "image_sym_dtype_point": 656, "image_sym_type_byt": 656, "image_sym_type_char": 656, "image_sym_type_doubl": 656, "image_sym_type_dword": 656, "image_sym_type_enum": 656, "image_sym_type_float": 656, "image_sym_type_int": 656, "image_sym_type_long": 656, "image_sym_type_mo": 656, "image_sym_type_null": 656, "image_sym_type_short": 656, "image_sym_type_struct": 656, "image_sym_type_uint": 656, "image_sym_type_union": 656, "image_sym_type_void": 656, "image_sym_type_word": 656, "imagick": 583, "imagin": [561, 563, 593], "imaginary": 530, "imagmag": [641, 652], "imagstart": [641, 652], "imask": [2, 3], "imbued": 616, "imgrel": 513, "imitat": [556, 595, 604], "imlpement": 551, "imm": [457, 485, 488, 489, 557, 603, 614], "imm16": [0, 1, 2, 3], "imm3": [0, 2, 3], "imm32": [0, 1, 2, 3, 457], "imm_eq0": 605, "immarg": [512, 549], "immaterial": 561, "immediat": [49, 379, 438, 443, 447, 457, 459, 479, 488, 489, 505, 511, 512, 513, 524, 525, 526, 527, 529, 549, 557, 560, 577, 579, 581, 587, 590, 593, 594, 598, 614, 639, 642, 645, 653, 654], "immediately": [440, 444, 454, 457, 459, 460, 473, 485, 505, 511, 514, 549, 551, 554, 557, 562, 563, 567, 571, 579, 581, 584, 590, 593, 594, 596, 598, 603, 618, 623, 624, 625, 639, 650], "immediateparent": 549, "immigr": 458, "imminent": 542, "immleaf": 527, "immsext16": 457, "immsubreg": 614, "immt": 605, "immtyp": 605, "immtypebit": 605, "immun": 594, "immut": [545, 549, 579, 604, 610, 615], "immutablepass": 443, "impact": [440, 453, 454, 456, 459, 485, 518, 536, 549, 579, 583, 584, 585, 593, 594], "impacted": 579, "impactful": [453, 516], "impacting": [549, 594], "impeded": 549, "impelment": 508, "imper": [459, 518, 593, 640, 642, 651, 653], "impl": [500, 579, 615, 624, 625], "implement": [440, 444, 452, 453, 454, 456, 459, 460, 464, 465, 468, 485, 500, 501, 502, 505, 509, 511, 512, 513, 517, 518, 520, 521, 525, 526, 527, 529, 531, 535, 536, 543, 548, 550, 551, 557, 562, 566, 574, 577, 581, 582, 584, 586, 587, 591, 593, 594, 596, 597, 598, 601, 604, 611, 612, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 639, 640, 641, 642, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655], "implementaion": 536, "implemented": [440, 441, 443, 444, 446, 452, 454, 456, 457, 459, 487, 492, 493, 497, 501, 505, 507, 511, 518, 519, 526, 527, 536, 547, 549, 552, 559, 560, 561, 562, 564, 566, 577, 579, 582, 588, 592, 593, 594, 596, 597, 598, 599, 601, 612, 614, 615, 616, 622, 624, 625, 642, 645, 653, 654], "implementer": 502, "implementing": [443, 464, 471, 505, 549, 577, 578, 582, 594, 596, 599, 601, 621, 622, 636, 638, 639, 640, 641, 642, 643, 644, 646, 647, 649, 650, 651, 652, 653], "implementor": [518, 605, 639, 640, 650, 651], "impli": [457, 460, 464, 488, 489, 501, 511, 549, 551, 553, 560, 567, 587, 599, 614], "implic": [457, 459, 460, 511, 525, 549, 553, 555, 579, 586, 593, 594, 601, 603, 604, 614, 617, 640, 651], "implicitarg": 440, "implicitcod": 593, "implicitdef": 457, "implicitdefin": 555, "implicitly": [440, 447, 456, 457, 459, 501, 509, 513, 549, 563, 579, 581, 594, 596, 603, 604, 613, 619, 621, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "implicitus": 457, "implied": [86, 174, 271, 304, 331, 418, 436, 437, 440, 502, 519, 549, 579, 581, 584, 604, 614], "impliqu": [454, 457, 553, 567, 581, 591, 594], "imply": [443, 498, 518, 519, 549, 581, 596], "implying": [509, 549], "import": [443, 444, 446, 447, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 464, 476, 485, 489, 490, 493, 501, 504, 509, 516, 518, 520, 521, 522, 523, 538, 539, 541, 542, 544, 546, 549, 551, 553, 561, 563, 565, 567, 570, 571, 572, 577, 581, 587, 588, 591, 593, 594, 596, 613, 614, 615, 616, 619, 622, 637, 638, 639, 640, 641, 644, 645, 648, 649, 650, 651, 652, 654], "importantly": [443, 459, 509, 640, 651], "imported": [449, 459, 509, 527, 549, 581], "impos": [457, 509, 549, 555, 579], "imposed": [590, 596], "imposing": 509, "impossibl": [443, 444, 446, 529, 549, 594, 614, 621, 645, 654], "impractical": [509, 536, 564, 565, 579, 594], "improv": [440, 443, 452, 453, 459, 511, 516, 518, 521, 530, 534, 549, 551, 561, 563, 577, 578, 579, 581, 584, 587, 593, 594, 598, 614, 615, 621, 645, 654], "improved": [464, 530, 551, 577, 578, 587, 614], "improving": [526, 530, 542, 584, 593, 623, 639, 650], "impur": 593, "imul": 457, "imul16rm": 457, "imul16rmi8": 457, "in": [8, 11, 16, 21, 22, 24, 35, 37, 40, 41, 46, 54, 55, 70, 87, 103, 106, 109, 113, 118, 119, 130, 131, 133, 139, 140, 150, 175, 189, 190, 193, 197, 206, 207, 209, 220, 222, 225, 226, 227, 231, 239, 240, 253, 272, 286, 307, 325, 338, 341, 346, 351, 352, 354, 365, 367, 370, 371, 372, 376, 384, 385, 400, 419, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 451, 452, 453, 454, 458, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 510, 512, 513, 515, 516, 517, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 559, 560, 562, 563, 564, 566, 567, 569, 570, 571, 572, 574, 575, 576, 578, 580, 582, 583, 584, 585, 586, 588, 590, 591, 594, 595, 597, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 614, 617, 618, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654], "in0": 549, "in1": [457, 549], "in2": 457, "in32bitmod": 457, "in64bitmod": 457, "inaccessibl": 536, "inaccessiblemem_or_argmemonly": 549, "inaccessiblememonly": [447, 549], "inaccessiblememonly_or_argmemonly": 447, "inaccuracy": 549, "inaccurat": [456, 485], "inact": 438, "inaddr_any": 625, "inadvertent": [599, 610], "inadvertently": 460, "inadvis": 519, "inalloc": [447, 505, 549, 586], "inapplic": [450, 538, 594], "inappropriat": 590, "inbound": [505, 506, 516, 519, 549, 587], "inc": [457, 459, 479, 505, 521, 546, 555, 579, 599, 601, 614, 615], "inc32r": [555, 593], "inc4": 460, "incant": 502, "incap": [447, 645, 654], "incarn": 512, "incident": 590, "includ": [11, 40, 109, 130, 193, 225, 226, 341, 370, 371, 437, 438, 439, 440, 441, 442, 443, 444, 446, 453, 454, 455, 456, 457, 458, 460, 464, 465, 468, 472, 473, 481, 482, 483, 489, 494, 498, 501, 502, 503, 504, 505, 506, 509, 511, 512, 513, 516, 517, 518, 519, 522, 523, 528, 535, 536, 538, 540, 541, 542, 543, 546, 547, 548, 549, 550, 551, 552, 553, 557, 560, 562, 567, 572, 577, 578, 579, 580, 581, 585, 587, 589, 590, 593, 594, 596, 598, 601, 603, 604, 605, 607, 608, 609, 613, 614, 615, 616, 617, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654], "include_director": 455, "included": [440, 443, 444, 453, 456, 457, 459, 465, 470, 472, 473, 500, 501, 502, 509, 510, 520, 523, 531, 542, 548, 549, 555, 564, 583, 593, 599, 601, 603, 604, 605, 608, 614, 618, 636, 637, 638, 640, 647, 648, 651], "including": [439, 440, 443, 444, 449, 451, 453, 455, 457, 458, 459, 461, 472, 488, 489, 499, 501, 502, 509, 511, 517, 518, 520, 521, 531, 542, 549, 551, 554, 562, 563, 564, 565, 566, 571, 575, 577, 579, 584, 585, 586, 587, 590, 591, 593, 594, 596, 597, 598, 601, 603, 604, 609, 610, 613, 614, 615, 617, 621, 637, 640, 641, 645, 646, 647, 648, 651, 652, 654], "inclus": [438, 439, 440, 459, 473, 500, 513, 549, 580, 599, 614, 621], "inclusively": 485, "incoming": [457, 509, 525, 534, 549, 579, 594, 614, 640, 642, 651, 652, 653], "incompatibl": [487, 497, 511, 536, 549, 576, 593, 601], "incomplet": [510, 514, 579, 594, 622, 623, 624, 625], "inconsistenc": 479, "inconsistency": [459, 479, 519, 584], "inconsistent": 593, "inconvenient": [551, 642, 653], "inconvertibleerrorcod": 579, "incorporat": [457, 543, 646], "incorporating": 579, "incorrect": [440, 449, 509, 549, 564, 587, 593, 594, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "incorrectly": [440, 540, 549, 584, 594, 636, 638, 649], "incq": 460, "incr": 487, "increas": [440, 453, 459, 466, 485, 488, 505, 509, 516, 524, 530, 544, 551, 552, 577, 591, 593, 601, 602, 605, 610, 613], "increased": [549, 551], "increasing": [459, 529, 581, 589, 593, 594, 638, 649], "incredibly": [509, 539, 581], "increment": [457, 509, 572, 577, 579, 640, 642, 643, 644, 651, 653], "incremental": [456, 457, 518, 549, 551, 567, 571, 574], "incrementally": [572, 592, 640, 651], "incremented": [451, 459, 485, 549], "incrementing": [549, 640, 651], "incur": 559, "ind": 644, "ind1": 549, "ind4": 549, "indefinitely": 551, "indemnity": 509, "indent": [556, 579, 595, 644], "indented": 459, "indenting": 619, "independent": [440, 444, 466, 501, 504, 508, 509, 516, 519, 521, 524, 529, 541, 545, 547, 549, 552, 557, 559, 579, 582, 594, 596, 599, 605, 612, 613, 614, 615], "independently": [440, 457, 460, 508, 509, 548, 549, 552, 563, 579, 589, 594, 596, 617, 618], "index": [8, 106, 190, 307, 338, 438, 440, 443, 446, 447, 457, 463, 468, 478, 479, 485, 489, 492, 493, 501, 505, 506, 511, 513, 516, 518, 521, 525, 529, 542, 545, 556, 567, 570, 571, 572, 574, 575, 579, 583, 589, 593, 594, 596, 597, 598, 601, 614, 619, 644], "index2": 594, "index2virtreg": 457, "indexed": [490, 519, 525, 549, 571, 593, 614], "indexedmap": 457, "indexing": [226, 371, 439, 519, 525, 549], "indexloc": 579, "indexoffsetbufferlength": 574, "indexoffsetbufferoffset": 574, "indexreg": 457, "indic": [439, 446, 447, 457, 470, 485, 506, 529, 545, 549, 565, 567, 572, 575, 577, 579, 593, 594, 596, 613, 614], "indicat": [52, 76, 161, 237, 260, 382, 407, 436, 437, 438, 439, 440, 443, 447, 448, 449, 450, 455, 457, 459, 498, 501, 505, 506, 509, 511, 516, 518, 528, 529, 530, 543, 548, 549, 550, 551, 562, 564, 566, 579, 581, 585, 591, 593, 594, 596, 598, 603, 604, 605, 608, 613, 614, 615, 618, 637, 638, 640, 644, 648, 649, 651], "indicated": [21, 22, 40, 88, 118, 119, 130, 206, 207, 225, 332, 351, 352, 370, 420, 438, 440, 447, 468, 505, 512, 513, 549, 566, 577, 614, 615], "indicating": [439, 443, 447, 449, 455, 457, 459, 468, 475, 501, 505, 511, 519, 549, 564, 565, 566, 569, 574, 578, 579, 581, 593, 601, 603, 605, 614], "indicator": [459, 485, 617], "indiqu": [443, 464, 541, 598], "indir": 549, "indirect": [440, 454, 457, 487, 488, 493, 505, 513, 514, 525, 551, 571, 587, 593, 594, 596, 598, 614, 623, 624, 625], "indirectionutil": [624, 625], "indirectly": [444, 459, 464, 549, 603], "indirectstubmanager": [623, 624], "indirectstubsmanag": [624, 625], "indirectstubsmgr": [624, 625], "indirectstubsmgrbuild": 624, "individual": [437, 440, 446, 447, 451, 457, 459, 460, 464, 468, 470, 473, 489, 494, 508, 512, 516, 525, 534, 542, 548, 549, 551, 557, 560, 564, 567, 575, 577, 581, 582, 590, 594, 598, 603, 609, 644, 646], "individually": [487, 497, 523, 540, 579, 584], "indivisibl": 547, "induc": 536, "induced": [585, 586], "induct": [443, 516, 521, 593, 615, 638, 640, 642, 649, 651, 653], "industrial": 620, "indvar": [549, 579, 615], "indx": 619, "ineffect": [505, 594], "inefficienc": [457, 642, 653], "inefficient": [447, 516, 551, 579, 597, 613], "ineg": 457, "inequal": 579, "inequality": [439, 457], "inevitably": [485, 584], "inexact": [440, 549], "inf": [440, 465, 466, 501, 549, 593], "infeasibl": [550, 594], "infectious": 579, "infer": [454, 457, 502, 516, 549, 564, 615], "inferattr": 615, "inferencing": 457, "inferent": [446, 502], "inferior": 507, "inferred": [459, 465, 466, 471, 518, 543, 549, 587, 598, 604, 607, 619], "inferring": 598, "infinit": [443, 457, 529, 549, 551, 553, 577], "infinitely": 549, "infinity": [440, 485, 549], "influenc": [446, 452, 549, 550, 593, 610], "influenced": 615, "info": [440, 447, 453, 455, 457, 464, 478, 479, 483, 485, 488, 489, 492, 493, 498, 500, 503, 507, 509, 511, 518, 521, 532, 539, 541, 549, 550, 551, 552, 555, 564, 566, 570, 575, 581, 587, 589, 590, 601, 613, 615, 618, 619, 636, 641, 642, 644, 645, 646, 647, 650, 651, 652, 653, 654], "inform": [437, 438, 439, 440, 441, 443, 447, 449, 450, 453, 454, 455, 458, 460, 461, 462, 463, 464, 468, 470, 471, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 498, 499, 500, 501, 502, 505, 506, 507, 509, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 548, 550, 551, 552, 553, 554, 555, 556, 557, 561, 562, 565, 567, 569, 571, 572, 574, 575, 578, 580, 581, 584, 585, 586, 588, 589, 590, 591, 594, 595, 596, 597, 598, 599, 601, 603, 605, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 637, 638, 639, 641, 642, 643, 645, 646, 649, 650, 652, 653, 654], "informal": [509, 549, 590], "informally": 536, "informational": 501, "informativemailnotifi": 537, "informed": [443, 518, 579], "informing": 577, "infos": 511, "infrastructur": [451, 455, 457, 489, 504, 509, 512, 518, 520, 521, 522, 538, 549, 563, 564, 579, 580, 581, 585, 586, 587, 593, 598, 607, 612, 613, 615, 620, 639], "infrastructural": 587, "infrequently": 615, "infringed": 509, "ing": [459, 504, 577, 638, 642, 649, 650, 653], "ingredient": 585, "inher": [443, 457, 459, 576, 579, 603, 604, 610, 615, 622], "inherent": 572, "inherently": [456, 514, 549, 579, 594], "inherit": [457, 501, 508, 543, 579, 599, 601, 605, 610, 611], "inherited": [604, 611, 615], "inheriting": [579, 604], "inhib": [490, 549, 598], "inhibited": 603, "ini": 548, "init": [440, 501, 551, 581, 615, 625, 642, 643, 644, 653], "init_val": 653, "initact": 441, "inited": 551, "initial": [448, 455, 489, 501, 505, 518, 521, 534, 549, 551, 554, 561, 577, 578, 579, 582, 585, 587, 590, 591, 594, 601, 603, 604, 614, 621, 640, 642, 643, 644, 651, 653], "initialexec": [447, 549], "initialis": [501, 643], "initialised": [501, 605, 616], "initializ": [440, 447, 457, 485, 501, 505, 512, 514, 518, 549, 561, 562, 577, 592, 594, 601, 603, 604, 614, 615, 616, 619, 621, 622, 623, 625, 639, 642, 643, 644, 650, 651, 652, 653], "initialize_ag_pass": 615, "initialize_native_target": [650, 651, 652, 653], "initialize_pass_begin": 528, "initialize_pass_dependency": [528, 615], "initialize_pass_end": 528, "initializealiasanalys": 443, "initializeallasmparser": 643, "initializeallasmprinter": 643, "initializealltarget": 643, "initializealltargetinfos": 643, "initializealltargetmc": 643, "initialized": [440, 459, 466, 501, 514, 518, 543, 549, 551, 597, 601, 614, 615, 616, 621], "initializemodul": 644, "initializemoduleandpassmanag": [639, 640, 641, 642, 643], "initializenativetarget": [625, 639, 640, 641, 642, 644], "initializenativetargetasmpars": [625, 639, 640, 641, 642, 644], "initializenativetargetasmprint": [625, 639, 640, 641, 642, 644], "initializepass": 443, "initializer": [459, 470, 549, 577], "initializerconst": 549, "initializi": 604, "initializing": [459, 562, 616, 621, 623, 639], "initially": [443, 457, 464, 505, 579, 581, 584, 614, 619, 624, 625, 638, 649], "initialseed": 495, "initiat": [440, 511], "initid": 447, "initsynclibcall": 444, "initval": [642, 643, 644], "inject": [459, 505, 593, 594], "injected": 505, "injecting": 594, "inlin": [440, 444, 473, 485, 498, 501, 502, 509, 511, 513, 514, 555, 562, 578, 579, 587, 589, 596, 598, 615, 619, 636, 639, 650], "inline": [489, 549, 593], "inline_hd1": 502, "inline_hd2": 502, "inlineasm": 561, "inlinebit": 549, "inlined": [449, 454, 457, 467, 498, 505, 511, 513, 516, 549, 581, 589, 593, 594, 615, 640, 651], "inlined_at": 513, "inlinedat": [460, 549], "inlinehint": [447, 549], "inlining": [498, 499, 501, 502, 505, 511, 514, 521, 549, 564, 570, 593, 594, 622, 645, 654], "inner": [453, 456, 461, 511, 547, 549, 551, 553, 577, 579, 585, 603, 604, 610, 612, 619], "inner_": 549, "innerloop": 585, "innerloopvectoriz": 584, "innermost": [585, 613], "innerstructty": 549, "innocent": [640, 651], "inoperandlist": [605, 614], "inpredsens": 546, "input": [18, 19, 20, 21, 22, 25, 26, 27, 59, 60, 61, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 91, 92, 93, 94, 99, 100, 101, 102, 105, 115, 116, 117, 118, 119, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 185, 186, 187, 188, 199, 200, 201, 206, 207, 242, 243, 244, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 277, 282, 283, 284, 285, 289, 290, 294, 295, 301, 302, 303, 306, 312, 313, 314, 315, 316, 327, 328, 329, 330, 333, 334, 335, 337, 348, 349, 350, 351, 352, 355, 356, 357, 389, 390, 391, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 431, 432, 433, 434, 436, 438, 439, 440, 441, 443, 445, 451, 452, 456, 457, 459, 460, 461, 464, 465, 466, 468, 469, 470, 473, 474, 476, 477, 478, 479, 480, 483, 484, 485, 486, 488, 489, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 508, 514, 521, 525, 526, 529, 530, 534, 542, 546, 550, 551, 552, 555, 562, 567, 577, 579, 585, 589, 593, 594, 598, 601, 603, 605, 607, 609, 613, 614, 615, 617, 621, 622, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 649, 650, 651, 653, 654, 656], "inputcontent": 619, "inputfilenam": 501, "inrang": 549, "inreg": [447, 457, 549, 614], "inresumepart": 505, "insanely": 459, "insensit": [443, 460, 478], "insert": [446, 459, 464, 468, 501, 505, 518, 525, 549, 561, 577, 579, 587, 593, 594, 595, 599, 614, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "insert_subreg": 555, "insert_subvector": 457, "insertbefor": 579, "insertbranch": 614, "insertbyt": 551, "insertdeclar": 644, "inserted": [440, 443, 444, 457, 468, 518, 530, 549, 579, 593, 594, 598, 615, 616, 638, 640, 641, 642, 643, 644, 649, 651, 652, 653], "insertel": [446, 460], "inserter": 579, "inserting": [451, 457, 460, 468, 525, 536, 549, 566, 577, 593, 594, 598, 640, 641, 642, 643, 644, 651, 652, 653], "insertion_block": [651, 652, 653], "insertvalu": 505, "insid": [447, 453, 455, 456, 457, 459, 460, 464, 468, 471, 506, 507, 508, 510, 511, 518, 520, 521, 530, 541, 543, 549, 551, 553, 560, 561, 567, 574, 577, 579, 585, 588, 593, 594, 597, 598, 601, 603, 604, 608, 609, 610, 611, 615, 619, 624, 625, 639], "insidebundl": 457, "insight": [506, 549, 589, 617], "insignific": [476, 549, 596], "insn": 488, "inspect": [447, 454, 479, 519, 549, 581, 593, 615], "inspected": [549, 579, 637], "inspecting": [457, 516, 549], "inspir": 617, "inspired": [485, 549, 577, 593], "inst": [549, 577, 579, 603, 614], "inst_begin": 579, "inst_call": 447, "inst_end": 579, "inst_invok": 447, "inst_iterator": 579, "instal": 538, "instali": 457, "instalias": 457, "install": [440, 455, 472, 502, 504, 510, 512, 521, 523, 535, 536, 537, 538, 540, 541, 542, 551, 576, 579, 580, 588, 607, 608, 616, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "install_gwp_asan_stub": 536, "install_prefix": 455, "installed": [440, 442, 455, 456, 472, 502, 504, 510, 517, 521, 523, 535, 536, 537, 538, 541, 548, 562, 576, 579, 581, 588, 605, 607, 608, 616, 642, 653], "installedd": 510, "installing": [521, 607, 615, 642, 653], "installment": [637, 648], "installsignalhandler": 536, "instanc": [440, 441, 455, 457, 459, 460, 464, 468, 501, 505, 510, 518, 520, 524, 527, 534, 543, 547, 549, 554, 555, 561, 563, 564, 569, 578, 579, 581, 588, 593, 596, 601, 604, 607, 609, 610, 614, 615, 616, 619, 621, 622, 637, 638, 645, 648, 649, 654], "instanceof": [579, 601], "instanti": [473, 501, 543, 601, 603, 605], "instantiat": [464, 501, 579, 604, 605, 619], "instantiated": [473, 502, 554, 579, 585, 601, 603, 604, 605, 614, 615], "instantiatetemplateattribut": 601, "instantiating": [579, 601, 603, 604], "instantly": 579, "instcombin": [451, 517, 579, 587, 593, 622, 623, 624, 625, 639, 640, 641, 642], "instead": [15, 48, 49, 345, 378, 379, 436, 440, 443, 444, 447, 451, 455, 456, 457, 458, 459, 460, 464, 466, 468, 471, 473, 478, 479, 480, 482, 485, 486, 489, 499, 501, 502, 505, 506, 507, 511, 513, 514, 516, 517, 519, 520, 521, 524, 529, 530, 534, 536, 537, 538, 539, 542, 543, 546, 547, 548, 549, 550, 551, 555, 561, 562, 563, 567, 577, 579, 581, 585, 590, 592, 593, 594, 596, 598, 599, 603, 604, 607, 609, 612, 614, 615, 616, 617, 618, 619, 622, 623, 637, 638, 639, 641, 642, 645, 646, 647, 648, 649, 650, 652, 653, 654], "instinct": 440, "institerator": 579, "instlisttyp": 579, "instnam": 451, "instprint": 601, "instr": [440, 455, 457, 473, 490, 500, 506, 603], "instr0": 561, "instr1": 561, "instr2": 561, "instr_begin": 653, "instr_iterator": 457, "instr_map": 617, "instrinfo": [457, 555, 614], "instrinsic": 593, "instritinclass": 605, "instrmapping": 614, "instrprofvaluekind": 549, "instrsched": 579, "instrsdrm": 603, "instrssrr": 603, "instruct": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 301, 302, 303, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 327, 328, 329, 330, 333, 334, 335, 336, 337, 341, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 441, 443, 447, 451, 452, 454, 455, 459, 460, 463, 465, 466, 468, 470, 488, 489, 490, 495, 500, 502, 503, 504, 505, 508, 509, 510, 513, 515, 516, 517, 518, 520, 521, 525, 526, 527, 529, 530, 531, 532, 533, 535, 540, 542, 544, 547, 550, 559, 560, 561, 562, 564, 578, 581, 585, 586, 587, 589, 592, 594, 596, 598, 601, 603, 605, 609, 610, 611, 612, 613, 615, 616, 638, 639, 640, 641, 642, 643, 644, 645, 649, 650, 651, 653, 654], "instructed": [511, 549, 590], "instruction_list_end": 479, "instructioncount": 589, "instructionselect": [526, 529, 534], "instructionselector": 531, "instructor": 614, "instrumen": 506, "instrument": [449, 455, 473, 490, 506, 539, 549, 551, 577, 586, 597, 607, 618], "instrumentationmap": 616, "instrumented": [442, 473, 506, 539, 549, 564, 567, 597, 616, 617, 618], "instrumenting": [519, 617], "instsp": 614, "insttoreplac": 579, "instvisitor": [512, 579], "insufficient": [502, 505, 538, 549, 593, 599, 614], "insufficiently": 593, "insulat": 594, "insult": 458, "int": [443, 444, 446, 451, 457, 459, 460, 461, 474, 485, 498, 501, 502, 505, 506, 507, 508, 511, 514, 518, 519, 521, 523, 535, 536, 546, 547, 549, 551, 552, 555, 556, 561, 562, 563, 574, 579, 593, 594, 595, 598, 601, 603, 604, 605, 610, 613, 614, 616, 617, 619, 621, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654, 656], "int128": 574, "int128oct": 574, "int16": 574, "int16_t": [614, 619], "int16short": 574, "int2006": 607, "int32": [574, 596], "int32_t": [518, 567, 574, 619], "int32long": 574, "int32ty": 579, "int32x4_t": 446, "int64": 574, "int64_t": [579, 619], "int64quad": 574, "int8_t": 619, "int_get_dynamic_area_offset": 549, "int_of_float": [652, 653], "intd": 460, "integ": [40, 41, 44, 46, 103, 131, 133, 189, 225, 227, 229, 231, 286, 299, 320, 370, 372, 374, 376, 435, 437, 438, 440, 444, 447, 448, 457, 459, 460, 485, 490, 501, 502, 505, 506, 511, 512, 516, 518, 524, 532, 551, 553, 555, 561, 563, 567, 572, 574, 579, 581, 583, 593, 598, 601, 603, 604, 609, 613, 614, 619, 638, 649], "integer": [439, 440, 448, 457, 470, 501, 506, 513, 519, 549, 553, 555, 561, 567, 579, 587, 589, 601, 603, 604, 613, 614, 619], "integer_numb": [16, 17, 38, 39, 40, 41, 46, 52, 70, 87, 103, 113, 114, 129, 130, 131, 133, 150, 175, 189, 197, 198, 223, 224, 225, 226, 227, 231, 237, 253, 272, 286, 346, 347, 368, 369, 370, 371, 372, 376, 382, 400, 419, 435], "integertyp": 579, "integr": [454, 455, 501, 504, 521, 551, 552, 556, 564, 581, 594, 598], "integral": [440, 501, 502, 577, 579, 593, 598], "integrat": [455, 518, 581, 598, 616], "integrated": [463, 471, 548, 549, 552, 655], "integrating": [581, 616], "integrator": 581, "integreated": 583, "integrity": [454, 549, 611, 612], "intel": [444, 455, 466, 485, 488, 503, 541, 549, 585, 587, 591, 594, 609, 613, 643], "intel_pstat": 445, "inteldialect": 549, "intelligent": [549, 594], "intelligently": 579, "intend": [455, 509, 512, 532, 534, 579], "intended": [440, 442, 443, 444, 453, 455, 456, 457, 458, 459, 460, 476, 481, 494, 496, 501, 509, 511, 516, 518, 521, 524, 530, 534, 549, 552, 554, 557, 564, 572, 577, 579, 581, 587, 590, 591, 594, 595, 596, 599, 604, 612, 614, 615], "intendend": 549, "intending": 579, "intens": [453, 516, 579], "intent": [446, 456, 457, 459, 509, 549, 552, 564, 584, 604, 642, 653], "intentionally": [459, 549, 594, 615, 637, 648], "inter": [443, 449, 459, 509, 516, 549, 550, 563, 587, 597, 599], "interact": [438, 444, 451, 455, 457, 501, 518, 539, 549, 554, 560, 578, 581, 589, 590, 593, 598, 614, 621, 637, 644, 645, 648, 654], "interacting": [505, 511, 518], "interactively": 474, "intercept": 551, "intercepted": 551, "interchangeably": [457, 459], "interchanged": 610, "interest": [440, 443, 444, 453, 470, 504, 509, 516, 518, 553, 554, 579, 598], "interested": [443, 457, 463, 464, 501, 504, 509, 511, 516, 518, 537, 558, 572, 579, 582, 593, 598, 608, 612, 622, 645, 647, 654], "interesting": [444, 446, 452, 457, 459, 460, 461, 485, 504, 514, 517, 521, 523, 543, 549, 551, 553, 555, 558, 577, 579, 584, 593, 594, 615, 617, 619, 622, 636, 637, 638, 639, 640, 641, 642, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "interfac": [440, 452, 455, 457, 459, 464, 468, 493, 501, 503, 504, 507, 509, 510, 511, 517, 518, 520, 521, 535, 545, 546, 548, 549, 551, 552, 553, 561, 562, 563, 577, 586, 593, 596, 601, 603, 612, 614, 615, 622, 623, 636, 637, 638, 645, 647, 648, 649, 650, 654], "interfacing": [514, 548, 579], "interfer": [485, 511, 516, 519, 549], "interferent": 485, "interfering": 593, "interim": [454, 509], "interior": [518, 543, 550, 598], "interleav": [585, 613], "interleave_count": 613, "interleaved": [440, 488, 581, 585, 610], "interleaving": [440, 549, 613], "intermediary": 579, "intermediat": [447, 455, 480, 482, 499, 502, 504, 510, 511, 514, 518, 521, 524, 525, 529, 534, 545, 547, 549, 555, 579, 586, 588, 589, 593, 598, 607, 612, 614, 637, 648], "intermingled": 549, "intermittent": 521, "intermodular": [552, 612], "intern": 563, "internal": [443, 447, 455, 456, 457, 460, 464, 487, 489, 498, 504, 505, 506, 509, 511, 514, 516, 520, 521, 525, 536, 549, 550, 552, 554, 555, 562, 565, 571, 575, 577, 579, 582, 594, 598, 601, 603, 605, 607, 608, 611, 614, 615, 619, 644], "internaliz": 562, "internallinkag": 579, "internally": [457, 461, 485, 510, 511, 516, 519, 549, 564, 575, 579, 599, 601, 621, 638, 642, 649, 653], "internalread": 555, "international": [457, 502], "internet": [503, 581], "interning": 563, "interoperat": [444, 511, 549, 575, 579, 621, 645, 654], "interoperating": 518, "interpol": [12, 51, 110, 137, 194, 236, 342, 381], "interpret": [446, 447, 455, 457, 461, 466, 472, 489, 501, 502, 506, 513, 517, 521, 524, 549, 563, 576, 593, 596, 598, 605, 609, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654], "interpreted": [464, 476, 490, 501, 506, 521, 549, 579, 593, 598, 604, 605, 609, 610], "interpreter": [548, 563], "interpreting": [501, 549, 593], "interprocedural": [443, 549, 552, 564, 594, 615], "interproceedural": 622, "interrupt": [459, 587, 594], "interrupted": [464, 549, 551, 599], "interrupting": 515, "intersecting": 553, "interspersed": 618, "intertwined": 550, "interval": [571, 579], "intervening": [440, 447, 485, 581, 596], "intializ": 579, "intimat": 459, "intimmleaf": 527, "into": [32, 124, 217, 362, 438, 440, 442, 443, 444, 446, 447, 448, 450, 451, 453, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 477, 478, 479, 482, 485, 486, 487, 489, 490, 499, 500, 502, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 533, 536, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 567, 575, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 601, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "intpred": 555, "intptr_t": [613, 639, 640, 641, 642, 644], "intptrsiz": 518, "intra": [443, 597], "intraprocedural": [451, 560], "intreg": [546, 614], "intregsclass": 614, "intregsregclass": 614, "intregsregclassid": 614, "intregsregisterclass": 614, "intregssubcl": 614, "intregssubregcl": 614, "intregssupercl": 614, "intregssuperregcl": 614, "intregsvt": 614, "intrepid": [637, 648], "intricat": 510, "intrinsic": [444, 490, 500, 503, 516, 525, 530, 550, 555, 579, 587, 592, 611, 612, 613, 614], "intrinsicsnvvm": 562, "intro": [503, 504, 620, 642, 653], "introduc": [443, 444, 457, 460, 505, 513, 532, 534, 543, 547, 549, 560, 561, 579, 581, 589, 593, 594, 598, 605, 611, 614, 621, 622, 624, 625, 640, 641, 646, 651, 652], "introduced": [443, 445, 457, 459, 485, 506, 527, 529, 530, 542, 549, 571, 577, 579, 585, 596, 598, 603, 622, 642, 653], "introducing": [444, 524, 532, 543, 549, 560, 577, 579, 585, 594, 621], "introduct": [452, 500, 504, 521, 522, 523, 556, 620, 655], "introspect": [545, 549, 552, 557, 598], "intrus": [549, 579], "intscalarty": 549, "inttoptr": [516, 596, 598], "intty": 549, "inttyp": 549, "intuit": [549, 560], "invalid": [438, 439, 440, 444, 459, 464, 479, 487, 490, 497, 499, 501, 511, 519, 521, 525, 549, 551, 554, 567, 577, 579, 591, 593, 594, 596, 598, 614, 615, 619, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "invalidat": [440, 443, 479, 554, 577, 579, 596, 615], "invalidated": [440, 550, 579, 615], "invalidating": [440, 505, 615], "invari": [443, 516, 521, 530, 550, 579, 594, 598, 610, 615], "invas": [509, 619], "invented": [575, 601], "invers": [438, 479, 549, 577], "inverse_throughput": 479, "invert": [524, 549, 609], "inverted": [516, 549], "invest": 512, "investig": 489, "investigat": [584, 594, 621], "investigated": [584, 645, 654], "investigating": 529, "invidual": 590, "invisibl": 582, "invit": [622, 623, 624, 625], "invoc": [440, 442, 451, 455, 457, 460, 461, 490, 505, 510, 517, 521, 535, 539, 540, 549, 551, 564, 584, 587, 607, 615, 616, 617, 618], "invocing": 607, "invok": [440, 443, 455, 457, 459, 502, 511, 516, 518, 521, 535, 547, 551, 552, 554, 555, 561, 596, 598, 609, 614, 615, 618, 622, 637, 648, 650], "invoke": 549, "invoked": [449, 455, 456, 460, 473, 498, 501, 505, 549, 563, 564, 579, 609, 614, 615, 642, 650, 653], "invokeinst": 579, "invoking": [447, 451, 455, 564, 579, 607], "invol": 511, "involv": [440, 448, 455, 508, 516, 519, 542, 549, 563, 579, 581, 585, 590, 594, 598, 599, 614, 619, 640, 644, 651], "involved": [444, 457, 485, 512, 518, 519, 526, 530, 546, 579, 590, 591, 594, 598, 599, 617, 620, 637, 642, 648, 653], "involving": [443, 519, 549, 577, 585, 591, 598, 604], "io": [556, 583, 584, 619], "iommu": 440, "ios": [521, 549, 607], "iostream": [536, 562, 617, 643], "ip": 605, "ipa": 550, "ipc": [485, 599], "iphoneos": 607, "ipi": [489, 565, 566, 572, 575], "ipo": [550, 561, 615], "iptr": [524, 549], "ir": [443, 448, 449, 451, 452, 457, 466, 501, 504, 505, 508, 511, 512, 515, 521, 522, 525, 526, 529, 530, 534, 535, 539, 547, 549, 550, 556, 560, 561, 562, 563, 564, 580, 585, 593, 595, 596, 598, 609, 610, 611, 614, 615, 616, 617, 621, 622, 623, 624, 625, 637, 639, 641, 642, 643, 644, 646, 647, 648, 650, 653, 655], "irbuild": [579, 593, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651], "irc": [458, 504, 509, 578, 590], "irce": 516, "ircompil": 621, "ircompilelai": [563, 621, 622, 623, 624, 625], "irgen": [516, 624, 625], "irgenandtakeownership": [624, 625], "irlai": 622, "irpath": 563, "irread": 455, "irreducibl": [549, 577, 614], "irrelev": [443, 519, 549], "irrespect": 455, "irtest": 455, "irtransfomrlai": 622, "irtransformlai": [623, 624, 625], "irtranslator": [530, 534], "is": [8, 11, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 32, 33, 34, 38, 39, 41, 42, 46, 49, 50, 52, 55, 58, 76, 88, 90, 103, 104, 105, 106, 114, 115, 116, 117, 118, 119, 124, 125, 126, 129, 131, 133, 135, 136, 140, 141, 161, 189, 190, 198, 199, 200, 201, 206, 207, 209, 217, 218, 219, 220, 222, 223, 224, 226, 227, 231, 235, 237, 240, 241, 260, 286, 287, 292, 297, 307, 316, 317, 318, 323, 332, 338, 345, 347, 348, 349, 350, 351, 352, 355, 356, 357, 362, 363, 364, 368, 369, 371, 372, 376, 379, 380, 382, 388, 407, 420, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "is64bitmod": 614, "is_base_of": 543, "is_const": 440, "is_dynamic_callstack": 440, "is_null": 515, "is_open": 562, "is_pip": 440, "is_ptr64": 440, "is_restrict": 440, "is_stmt": 513, "is_trivially_copi": 579, "is_volatil": 440, "is_zero_undef": 549, "isa": [440, 444, 457, 459, 503, 509, 518, 543, 586, 603, 604, 614], "isa_and_nonnull": 579, "isa_impl": 543, "isabsoluteaddress": 567, "isaddresstaken": 555, "isalnum": [636, 637, 638, 639, 640, 641, 642, 643, 644], "isalph": [636, 637, 638, 639, 640, 641, 642, 643, 644], "isas": 516, "isascii": [637, 638, 639, 640, 641, 642, 643, 644], "isatleastorstrongerthan": 444, "isbarri": [603, 605], "isbasewithconstantoffset": 527, "isbinaryop": [641, 642, 643, 644], "isbranch": 605, "iscall": [603, 605], "iscommut": 605, "isconst": [440, 447, 579], "isconstantpoolindex": 614, "isconvertibletothreeaddress": 605, "iscxxclass": 593, "isd": [441, 444, 457, 511, 512, 587, 614], "isdeclar": 579, "isdef": 457, "isdefinit": [549, 593], "isdig": [636, 637, 638, 639, 640, 641, 642, 643, 644], "isdopcod": [441, 457, 512], "isdoubl": 603, "isectcoff": 567, "isel": [457, 500, 534, 550, 593, 603, 614], "iseldagtodag": 601, "isellowering": [444, 601], "isempty": 579, "isexternal": 593, "isexternalsymbol": 614, "isfirstclasstyp": 561, "isfloatingpointty": 579, "isfoo": 459, "isfunct": 593, "isglobaladdress": 614, "isgroup": 567, "isgrouping": 501, "ish": [641, 652], "isimm": 525, "isimmediat": 614, "isimplicitcod": 593, "isimplicitdef": 605, "isindirectbranch": 605, "isinlined": 593, "isintegerty": 579, "isjumptableindex": 614, "island": 440, "islandingpad": 555, "islazy": 614, "isload": 457, "isloadfromstackslot": 614, "islocal": [549, 593], "isloopinvari": 579, "islvalu": 459, "ismod": 603, "isn": [442, 444, 452, 456, 457, 458, 459, 490, 498, 502, 509, 514, 519, 530, 531, 540, 549, 555, 560, 577, 579, 590, 593, 595, 599, 615, 636, 637, 638, 639, 640, 643, 644, 647, 648, 649, 650, 651], "isnotduplic": 605, "isnull": 459, "isnullvalu": 561, "isobjcclass": 593, "isobviouslysafetofold": 527, "isol": [448, 485, 510, 621, 624, 655], "isolat": [508, 549, 609], "isolated": [445, 455, 457, 504, 510, 549, 579, 598, 642, 653], "isolating": [451, 603], "isomorphic": 514, "isoperandimmequal": 527, "isoperator": [641, 642, 643, 644], "isopt": 501, "isoptimized": [549, 593], "isosdarwin": 644, "ispacked": 447, "isphysicalregist": 457, "isphysreg": 579, "ispic": 614, "ispip": 440, "ispoint": 561, "ispointertyp": 459, "ispredic": 605, "isprefix": 501, "isprint": 551, "isproto": 447, "isref": 603, "isregist": 457, "isrematerializ": 605, "isrestrict": 440, "isreturn": [603, 605], "issafetospeculat": 598, "isselector": 567, "isset": 501, "issimpl": 444, "issized": 579, "isspac": [551, 636, 637, 638, 639, 640, 641, 642, 643, 644], "isstor": 457, "isstoretostackslot": 614, "isstrongerthan": 444, "issu": [444, 446, 450, 452, 456, 457, 458, 460, 464, 478, 487, 501, 509, 513, 516, 517, 530, 534, 536, 538, 542, 549, 579, 581, 583, 587, 591, 593, 594, 598, 601, 609, 619, 639, 640, 642, 645, 647, 650, 651, 653, 654], "issued": [464, 485, 549], "issuedset": 485, "issuewidth": 485, "issuing": [521, 615], "istargetspecific": 555, "isterminator": [459, 603, 605], "istreambuf_iterator": 562, "istruncatingstor": 614, "isunaryop": [641, 642, 643, 644], "isunordered": 444, "isunpredicatedterminator": 614, "isus": 457, "isv9": 614, "isvararg": 579, "isvectorized": 610, "isvis": 614, "isvolatil": [440, 549], "it": [33, 34, 40, 41, 46, 49, 50, 55, 58, 125, 126, 130, 131, 133, 135, 136, 140, 141, 218, 219, 225, 226, 227, 231, 235, 240, 241, 317, 323, 363, 364, 370, 371, 372, 376, 379, 380, 385, 388, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656], "itanium": [474, 475, 513, 517, 611], "itanium_abi_tripl": 609, "item": [446, 447, 456, 470, 501, 511, 513, 516, 548, 549, 551, 561, 579, 581, 584, 587, 593, 598, 603, 619, 642, 653], "iter": [451, 455, 457, 459, 485, 509, 529, 534, 549, 551, 553, 554, 571, 577, 579, 585, 604, 613, 637, 640, 641, 642, 648, 649, 650, 651, 652, 653], "iterat": [443, 448, 456, 457, 459, 501, 534, 549, 552, 554, 577, 579, 614, 640, 651], "iterated": [455, 604, 642, 653], "iterating": [459, 550], "iteratively": [532, 646], "iterator": [457, 459, 501, 505, 518, 561, 603, 614, 616, 619], "iterator_rang": 579, "ith": 579, "itinerar": [457, 614], "itinerary": [457, 605, 614], "itself": [442, 443, 446, 447, 455, 457, 459, 460, 461, 464, 471, 473, 501, 505, 508, 509, 511, 512, 514, 516, 517, 518, 519, 521, 523, 529, 539, 541, 543, 544, 547, 548, 549, 551, 552, 553, 561, 571, 579, 581, 583, 584, 585, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 601, 603, 604, 605, 609, 610, 615, 619, 621, 622, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654], "ity": 536, "iuml": 457, "ivanovic": 584, "ivanovicdistinguish": 584, "ivar": 593, "j1": 607, "j2": 521, "j4": [539, 588], "jacqu": 502, "jagged": 571, "jaguar": 485, "jal": 587, "jalu0": 485, "jalu01": 485, "jalu1": 485, "jam": [549, 584], "jammed": [549, 585], "jamming": [549, 577], "jan": 585, "jann": 594, "jarv": 583, "jav": [444, 515, 518, 549, 577, 579, 598, 645, 654], "javascript": [549, 596, 645, 654], "jazz": 580, "jb_1": 593, "jd": [563, 584, 622], "jd1": 563, "jd2": 563, "jdiv": 485, "jdo": 509, "jeff": 599, "jess": 541, "jfpa": 485, "jfpm": 485, "jfpu0": 485, "jfpu01": 485, "jfpu1": 485, "jfpuprf": 485, "jg": 592, "jingling": 585, "jingyu": 502, "jintegerprf": 485, "jit": [451, 455, 461, 466, 472, 509, 514, 518, 521, 523, 544, 548, 549, 562, 563, 576, 596, 598, 620, 636, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654], "jit_serv": 625, "jitcompilecallbackmanag": [623, 624, 625], "jitcompilerfn": 614, "jitcompilerfunct": 614, "jitdylib": [621, 622], "jited": [507, 612], "jitevaluatedsymbol": [621, 622], "jiteventlistener": 563, "jitfailed": 563, "jiting": [621, 623, 624, 655], "jitstack": 563, "jitsymbol": [621, 622, 623, 624, 625], "jitsymbolflag": [623, 624, 625], "jittargetaddress": [623, 624, 625], "jittargetmachinebuild": [621, 622], "jitted": [479, 579], "jlagu": 485, "jlsagu": 485, "jmp": [549, 594], "jmp_1": 593, "jmpq": 594, "jmul": 485, "jn": [538, 541], "jne": [457, 594], "jo": 508, "job": [455, 521, 543, 551, 560, 563, 599, 615, 622], "joerg": 581, "john": [459, 509], "join": [440, 466, 520, 558, 579, 615, 617], "joined": [551, 579], "joining": 549, "jok": 458, "jon": [584, 585], "jonathan2251": 655, "jonesdistinguish": 584, "jour": 620, "journal": 585, "journey": [642, 653], "jpg": 551, "jsagu": 485, "json": [473, 478, 500, 605, 607], "jsonnrevnum": 581, "jstc": 485, "jtmb": [621, 622], "judg": [509, 594], "juggl": 502, "juli": 563, "july": [518, 581, 616], "jump": [439, 447, 454, 501, 505, 511, 513, 525, 544, 549, 563, 580, 594, 611, 614, 623, 640, 651], "jumping": [579, 614, 644], "jumptabl": [447, 549, 555], "junip": 440, "junk": [648, 649, 650, 651, 652, 653], "jurisdict": 509, "just": [442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 456, 457, 459, 460, 462, 464, 466, 468, 470, 473, 476, 485, 486, 488, 489, 501, 502, 505, 506, 509, 513, 514, 519, 521, 523, 524, 528, 529, 535, 538, 541, 542, 543, 544, 548, 549, 551, 555, 556, 558, 560, 561, 562, 563, 577, 578, 579, 580, 581, 582, 587, 588, 592, 593, 594, 596, 598, 599, 601, 603, 605, 607, 608, 609, 614, 615, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "justify": 552, "justin": 533, "jvalu0": 485, "jvalu1": 485, "jvimul": 485, "jvm": [563, 645, 654], "jyknight": 581, "k": [439, 445, 457, 487, 497, 498, 501, 508, 543, 549, 569, 594, 613, 622, 623, 624, 625, 644], "kabin": 440, "kaleidoscop": [561, 563, 579, 621, 622, 623, 624, 625, 646], "kaleidoscopej": [622, 623, 624, 625, 639, 640, 641, 642, 644, 655], "kaver": 440, "kawahito": 457, "kb": [528, 591], "kd": 440, "kdtre": 583, "keep": [443, 457, 460, 487, 497, 501, 502, 505, 509, 510, 514, 518, 536, 543, 549, 552, 555, 558, 559, 560, 561, 577, 579, 589, 591, 593, 599, 605, 609, 612, 615, 616, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 653, 654], "keeping": [457, 549, 577, 585, 593, 613, 615, 638, 639, 640, 641, 642, 644], "kel": 533, "kept": [440, 443, 505, 509, 550, 589, 590, 593, 615], "kern0": 440, "kern1": 440, "kernarg": 440, "kernarg_address": 440, "kernarg_segment_align": 440, "kernarg_segment_alignment": 440, "kernarg_segment_siz": 440, "kernargsegmentalign": 440, "kernargsegmentsiz": 440, "kernel": [444, 445, 457, 466, 485, 502, 510, 538, 549, 551, 583, 594, 612, 613, 614, 645, 654], "kernel1": 440, "kernel_code_entry_byte_offset": 440, "kernel_param_0": 562, "kernel_param_1": 562, "kernel_param_2": 562, "kernelparam": 562, "kevin": 457, "key": [440, 447, 453, 457, 459, 479, 509, 536, 543, 546, 549, 555, 561, 563, 569, 572, 574, 579, 589, 594, 598, 601, 605, 615, 623], "keycol": 546, "keyring": 521, "keystrok": 459, "keyt": 579, "keytyp": 593, "keyword": [443, 450, 457, 501, 504, 506, 517, 519, 549, 551, 584, 593, 601, 603, 604, 605, 609, 613, 615, 636, 640, 641, 642, 643, 644, 647, 651, 652, 653], "kib": 501, "kill": [451, 461, 550, 555], "killall": 551, "killed": [457, 551, 555, 593, 615], "kind": [437, 438, 439, 440, 444, 447, 449, 457, 458, 459, 465, 468, 470, 501, 506, 507, 509, 511, 512, 514, 515, 517, 520, 543, 545, 548, 549, 550, 551, 552, 555, 560, 561, 565, 566, 567, 574, 577, 579, 581, 590, 593, 594, 595, 596, 601, 611, 617, 618, 621, 641, 642, 643, 644, 652, 653], "kistanov": 537, "klaus": 581, "klimek": 578, "kmean": 583, "knl": 587, "knock": 459, "know": [443, 444, 446, 450, 451, 455, 456, 457, 459, 464, 485, 501, 504, 506, 507, 509, 514, 516, 518, 523, 537, 544, 549, 551, 552, 556, 562, 571, 575, 578, 579, 581, 584, 590, 593, 594, 595, 597, 598, 609, 611, 613, 614, 615, 619, 622, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654], "knowing": [456, 457, 485, 505, 509, 511, 521, 523, 579, 613, 641, 643, 652], "knowledg": [447, 457, 459, 506, 518, 549, 556, 557, 564, 575, 577, 595, 609, 610, 645, 654], "knowledge": 526, "known": [443, 444, 447, 455, 457, 459, 461, 468, 487, 502, 505, 508, 511, 516, 518, 519, 520, 521, 523, 534, 542, 543, 549, 562, 577, 579, 580, 584, 588, 592, 594, 598, 603, 608, 609, 611, 614, 615, 619, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "knownbit": [528, 549], "knownsafevalu": 579, "koblenz": 585, "koch": 594, "komatsu": 457, "kripk": 583, "kristof": 584, "kruskal": 583, "kryomodel": 614, "kryowrite_2cyc_xy_norsv_67ln": 614, "kryowrite_2cyc_xy_xy_150ln": 614, "krzysztof": 584, "ksdbginfo": 644, "kuck": 508, "kuhn": 508, "kw1": 551, "kw2": 551, "kw3": 551, "kwalify": 656, "kwd": [647, 648, 649, 650, 651, 652, 653], "l0": [440, 614], "l1": [440, 457, 485, 614], "l10": 617, "l1d": 485, "l2": [440, 614], "l3": 614, "l4": 614, "l5": 614, "l6": 614, "l7": 614, "lA": 563, "lab": [520, 537], "label": [0, 1, 2, 3, 439, 440, 447, 448, 457, 505, 511, 514, 515, 518, 547, 560, 561, 562, 577, 579, 593, 610, 614, 617, 640, 642, 651, 653], "label0": 549, "label_1": [41, 131, 227, 372], "label_2": [41, 131, 227, 372], "label_3": [41, 131, 227, 372], "label_4": [41, 131, 227, 372], "label_branch_weight": 449, "labeled": 504, "labelled": 549, "labeltyp": 579, "labf": 501, "labor": 501, "laborious": 579, "lack": [454, 457, 458, 485, 518, 519, 529, 549, 576, 591, 594, 602, 605, 650], "lacking": [549, 603, 604], "lad": 501, "laden": [645, 654], "laghos": 583, "lah": 607, "lahf": 594, "lai": [443, 517, 555, 563, 571, 582, 621, 622, 623, 624, 645, 654], "laid": [446, 457, 509, 549, 570, 571, 575, 579, 650], "lakos": 459, "lambd": [527, 563, 579, 584, 621, 624, 625], "lambdaresolv": [623, 624, 625], "lammp": 583, "lan": [438, 440, 524, 549, 584], "lanczos": 583, "land": [549, 578, 598], "landed": 509, "landing": [505, 509, 511, 547, 549, 555], "landingpad": [505, 511, 577], "landscap": 581, "lang": [453, 501, 584], "langref": [441, 444, 512, 516, 562], "languag": [444, 455, 456, 457, 458, 460, 465, 469, 477, 480, 482, 499, 501, 502, 503, 504, 505, 509, 510, 511, 513, 515, 517, 518, 519, 521, 522, 524, 526, 540, 550, 551, 555, 562, 563, 577, 579, 582, 583, 585, 586, 596, 598, 601, 602, 605, 609, 613, 614, 618, 619, 621, 622, 637, 638, 639, 643, 644, 648, 649, 650], "language_vers": 440, "languagevers": 440, "larg": [440, 444, 447, 451, 453, 455, 457, 459, 461, 464, 466, 470, 479, 480, 485, 501, 508, 509, 510, 512, 513, 521, 525, 529, 539, 542, 546, 547, 549, 551, 559, 560, 562, 563, 567, 569, 571, 575, 577, 579, 580, 582, 583, 584, 591, 593, 594, 596, 598, 601, 605, 607, 609, 614, 616, 618, 623, 639, 650], "largeconst": 596, "largely": [502, 518, 524, 530, 536, 565, 614], "largest": [103, 189, 286, 435, 438, 457, 513, 516, 529, 549, 567], "last": [438, 444, 447, 457, 459, 460, 464, 468, 485, 501, 504, 505, 509, 511, 521, 523, 542, 543, 549, 556, 560, 564, 571, 574, 578, 579, 581, 595, 598, 603, 604, 609, 610, 613, 614, 615, 618, 621, 636, 639, 641, 644, 649, 652], "lastchar": [636, 637, 638, 639, 640, 641, 642, 643, 644], "lastinst": 614, "lastly": [545, 609, 615, 644], "lastopc": 614, "lat": [439, 440, 442, 444, 449, 454, 455, 456, 459, 460, 473, 505, 506, 509, 511, 516, 521, 523, 529, 530, 549, 551, 554, 555, 556, 561, 571, 577, 578, 579, 580, 581, 585, 587, 589, 591, 593, 595, 596, 598, 603, 609, 610, 614, 615, 616, 621, 637, 638, 639, 640, 641, 642, 644, 646, 648, 649, 650, 651, 652, 653], "latch": [549, 553], "latenc": [457, 485, 617], "latency": [466, 479, 485, 549, 594], "latest": [455, 460, 462, 510, 521, 523, 533, 556, 581, 587, 588, 607], "latt": [439, 444, 457, 505, 529, 532, 549, 553, 561, 579, 584, 593, 598, 603, 610, 614, 637, 648], "lattn": [581, 584, 654], "lattneracronym": 584, "lattneragre": 584, "lattnerfunct": 584, "lattnerlow": 584, "lattnerrevnum": 581, "lattnertransit": 584, "launch": [453, 459, 502, 562, 623], "launched": [440, 562], "launching": 562, "lav": 583, "lavamd": 583, "law": [459, 590], "lawi": 509, "lawsuit": 509, "lawyer": 509, "lay": [457, 459, 519, 549, 550, 579, 587, 611, 644, 650, 651, 652, 653], "layer": [517, 563, 623, 655], "layered": 459, "layering": [530, 581], "laying": 611, "layout": [440, 446, 453, 455, 456, 489, 502, 504, 506, 516, 518, 519, 522, 541, 563, 566, 567, 569, 572, 574, 581, 598, 614, 615, 618, 639, 643], "lazi": 622, "lazily": [447, 528, 552, 563, 579, 587, 621, 622, 623, 624, 625, 650], "laziness": [443, 621, 623, 655], "lazy": [443, 488, 549, 563, 621, 622, 624, 625, 639, 655], "lazyemittinglai": 563, "lazyresolverfn": 614, "lb": [563, 584], "lbar": 457, "lbb0_1": 594, "lbb0_2": [592, 594], "lbb0_3": 594, "lbb0_4": 594, "lbb0_5": 594, "lbb0_n": 594, "lbd": 655, "lbl": 583, "lclang1": 581, "lclang2": 581, "lcov": 473, "lcpi0_0": 609, "lcssa": 550, "lcud": 562, "lcudart": 502, "lcudart_static": 502, "ld": [0, 1, 2, 3, 9, 32, 40, 103, 107, 124, 130, 189, 191, 217, 225, 286, 339, 362, 370, 435, 439, 440, 455, 501, 517, 521, 535, 538, 540, 562, 614], "ld64": 564, "ld_preload": 591, "ldflag": [472, 535, 621, 622, 623, 624, 625, 638, 639, 640, 641, 642, 643, 644], "ldl": 502, "ldm": 549, "ldpxi": 555, "ldpxpost": 555, "ldr": [513, 557, 605], "ldrd": 444, "ldrex": 444, "ldri": 614, "ldrr": 614, "lds_direct": [72, 74, 82, 101, 151, 152, 154, 156, 168, 187, 254, 256, 284, 289, 294, 301, 302, 327, 328, 401, 403, 433], "lds_siz": 440, "ldststoreupd": 457, "lea": 594, "lead": [444, 456, 457, 459, 479, 501, 505, 509, 519, 526, 549, 551, 577, 579, 584, 593, 594, 597, 623], "leading": [460, 464, 474, 487, 488, 505, 519, 525, 535, 540, 549, 579, 584, 619, 637, 644, 648], "leaf": [465, 511, 565, 587, 617], "leak": [464, 513, 518, 547, 549, 592, 594, 609, 647], "leaked": 594, "leaking": [518, 594], "leaksanitiz": 551, "leaky": 551, "leap": 578, "leaq": 592, "learn": [459, 521, 549, 551, 561, 578, 579, 622], "learned": [556, 575, 595, 622, 642, 653], "learning": [458, 583, 584, 645, 654], "leary": 502, "least": [440, 443, 444, 445, 446, 447, 453, 457, 459, 464, 468, 479, 483, 485, 488, 489, 501, 505, 509, 511, 517, 524, 525, 529, 538, 539, 541, 549, 551, 553, 558, 560, 565, 577, 579, 581, 584, 588, 594, 596, 598, 601, 603, 604, 614, 616, 618, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "leasur": 508, "leav": [445, 464, 487, 497, 505, 509, 521, 535, 544, 549, 551, 561, 562, 577, 578, 581, 585, 593, 594, 598, 614, 622], "leaving": [450, 452, 501, 505, 514, 518, 525, 549, 553, 563, 593], "leb": 506, "leb128": [457, 465], "lectur": 130, "left": [438, 439, 440, 447, 451, 456, 457, 459, 509, 516, 525, 536, 549, 561, 577, 579, 603, 604, 605, 608, 613, 614, 619, 621, 637, 638, 640, 644, 648, 649, 651], "leftr": 561, "legacy": [447, 452, 455, 460, 518, 549, 563, 587, 610, 615, 617, 621, 622, 623, 624, 625, 639, 640, 641, 642, 643], "legacycompileondemandlai": 623, "legacyircompilelai": [623, 624, 625], "legacyirtransformlai": [623, 624, 625], "legacypassmanag": [615, 617, 622, 623, 624, 625, 639, 640, 641, 642, 643, 644], "legacyrtdyldobjectlinkinglai": [623, 624, 625], "legal": [440, 444, 457, 502, 509, 511, 512, 519, 525, 529, 531, 549, 557, 560, 562, 565, 579, 585, 598, 604, 609], "legalact": 614, "legalfor": 529, "legalforcartesianproduct": 529, "legalfortypeswithmemsiz": 529, "legalitypredicat": 529, "legalityquery": 529, "legaliz": [441, 512, 527, 530, 531, 534, 549], "legalizeact": 614, "legalized": [441, 457, 512, 529, 530, 555], "legalizedag": [441, 512], "legalizeop": [441, 512], "legalizerhelpertest": 530, "legalizerinfo": 531, "legally": [457, 579, 585], "len": 549, "len_control": 551, "length": [446, 447, 457, 464, 473, 475, 496, 501, 503, 506, 519, 549, 551, 565, 566, 567, 570, 571, 572, 574, 577, 579, 593, 594, 595, 598, 601, 603, 609, 613, 649, 650, 651, 652, 653], "lengthen": 479, "less": [439, 440, 445, 446, 447, 452, 457, 459, 460, 464, 473, 485, 501, 506, 509, 514, 516, 518, 521, 524, 525, 538, 547, 549, 551, 556, 561, 574, 577, 579, 581, 584, 585, 587, 588, 593, 594, 598, 605, 609, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "let": [442, 447, 452, 457, 459, 460, 490, 493, 501, 502, 504, 505, 506, 519, 524, 530, 537, 543, 546, 549, 552, 553, 556, 560, 561, 562, 563, 571, 576, 578, 579, 581, 584, 590, 593, 594, 595, 597, 598, 605, 608, 614, 615, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "letitem": 604, "letlist": 604, "letter": [447, 501, 549], "letting": [460, 519, 544, 645, 654], "leukocyt": 583, "level": [438, 440, 442, 443, 444, 447, 449, 450, 453, 455, 458, 460, 465, 470, 471, 485, 489, 492, 493, 502, 503, 504, 505, 507, 509, 511, 515, 516, 517, 518, 519, 521, 530, 532, 539, 547, 548, 550, 553, 554, 560, 561, 562, 564, 571, 575, 579, 580, 581, 586, 587, 594, 596, 598, 603, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "leverag": [511, 518, 521, 530, 579], "leveraged": 618, "lex": [617, 637, 638, 639, 641, 642, 643, 644, 645, 646, 648, 649, 650, 652, 653, 654, 655], "lex_comment": [647, 648, 649, 650, 651, 652, 653], "lex_ident": [647, 648, 649, 650, 651, 652, 653], "lex_numb": [647, 648, 649, 650, 651, 652, 653], "lexed": 604, "lexer": [517, 556], "lexical": [457, 514, 549, 593, 598, 637, 644, 648], "lexicalblock": 644, "lexically": [459, 604, 639, 650], "lexicographical": 561, "lexicographically": 459, "lexidentifi": [512, 617], "lexloc": 644, "lf_arglist": 574, "lf_array": 574, "lf_bitfield": 574, "lf_buildinfo": 574, "lf_class": 574, "lf_endprecomp": 574, "lf_enum": 574, "lf_fieldlist": 574, "lf_func_id": 574, "lf_interfac": 574, "lf_label": 574, "lf_methodlist": 574, "lf_mfunc_id": 574, "lf_mfunction": 574, "lf_modifi": 574, "lf_pad0": 566, "lf_point": 574, "lf_precomp": 574, "lf_procedur": 574, "lf_string_id": 574, "lf_structur": 574, "lf_substr_list": 574, "lf_typeserver2": [574, 593], "lf_udt_mod_src_lin": 574, "lf_udt_src_lin": 574, "lf_union": 574, "lf_vftabl": 574, "lf_vtshap": 574, "lfenc": 594, "lfoo": 457, "lfunc1_end": 440, "lfunc_end0": 440, "lgkm_cnt": [103, 189, 286, 435], "lgkmcnt": [103, 189, 286, 435, 440], "lgkmcnt_sat": [103, 189, 286, 435], "lgtm": [504, 550, 578], "lh": [459, 549, 561, 579, 607, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "lhs_val": [649, 650, 651, 652, 653], "lhse": [642, 643, 644], "li": [459, 501, 518, 549, 584, 596, 598, 615], "lib": [440, 441, 455, 457, 459, 463, 470, 472, 479, 489, 492, 493, 501, 502, 507, 510, 512, 513, 518, 523, 535, 536, 541, 555, 561, 563, 579, 580, 581, 584, 591, 593, 599, 601, 612, 614, 615, 621, 622, 623, 624, 625, 638, 639, 640, 641, 642, 643, 644], "lib64": [455, 502, 521], "libb": 563, "libc": [455, 459, 475, 502, 509, 511, 520, 521, 536, 540, 549, 551, 579, 591, 645, 654], "libcall": [529, 587, 608], "libcallfor": 529, "libclang_rt": [539, 616], "libclc": [455, 509, 581], "libcmt": 523, "libcud": 562, "libcxx": [453, 455, 521, 581, 584, 588], "libcxxab": [453, 455, 521, 581], "libd": 472, "libff": [455, 576], "libfil": 472, "libfoo": 563, "libfuzz": 517, "libgcc": [511, 592], "libgcc1": 541, "libllvm": [453, 455, 521, 576, 579], "libllvmcor": 579, "liblto": [535, 584], "liblzm": 541, "libm": [638, 639, 649, 650], "libnam": [472, 615], "libomp": 588, "libopagent": 576, "libpartit": 513, "libpath": [481, 513], "libpfm": 455, "libpos": 501, "librar": [445, 447, 453, 455, 456, 461, 470, 471, 472, 473, 488, 489, 492, 493, 499, 501, 509, 510, 514, 520, 521, 523, 539, 540, 541, 544, 548, 549, 551, 563, 577, 579, 582, 586, 593, 594, 599, 614, 616, 621, 637, 638, 645, 648, 649, 654], "library": [443, 444, 447, 455, 461, 463, 466, 468, 471, 472, 473, 482, 488, 500, 503, 507, 509, 513, 514, 516, 517, 518, 519, 520, 523, 530, 536, 539, 540, 541, 548, 552, 562, 564, 570, 577, 580, 586, 587, 589, 593, 607, 609, 612, 613, 614, 617, 619, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 652, 654], "library_nam": 548, "librarygroup": 548, "librarynam": [518, 580], "libremark": 589, "librt": 582, "libsampl": 580, "libscudo": 591, "libsfgcc1": 541, "libstdc": [455, 475, 502, 510, 511, 521, 541], "libsupport": 581, "libthread_db": 507, "libtinfo": 541, "libunwind": [453, 455, 511, 521, 581, 584], "libxml": 551, "libxml2": [541, 551], "libxxx": 541, "libz": 549, "lic": 577, "licens": [459, 521, 542, 582, 615, 621, 622, 623, 624, 625], "license": 509, "licensed": [509, 535], "licensing": [509, 583], "licm": [444, 516, 550, 579, 587, 615], "lif": [479, 502, 509, 516, 520, 551, 559, 563], "lifelong": 620, "lifetim": [457, 505, 509, 516, 518, 536, 559, 563, 579, 615, 616, 621, 623], "lift": 516, "lifted": 585, "lifting": 622, "light": [459, 549], "lightly": [549, 582, 588, 621], "lightweight": [459, 464, 510, 579], "lik": [442, 443, 444, 447, 451, 453, 455, 457, 460, 466, 476, 479, 484, 485, 489, 501, 502, 505, 506, 509, 510, 511, 512, 515, 516, 517, 518, 519, 521, 523, 524, 527, 528, 529, 530, 539, 541, 543, 548, 549, 551, 552, 555, 556, 557, 560, 561, 563, 564, 565, 566, 571, 575, 577, 578, 581, 582, 583, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 598, 599, 603, 604, 605, 607, 608, 609, 611, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "likeliness": [449, 549], "likely": [440, 444, 449, 451, 502, 504, 509, 512, 516, 517, 519, 521, 530, 538, 549, 551, 554, 562, 567, 572, 576, 577, 579, 581, 584, 591, 594, 599, 601, 605, 608, 610, 623], "likewis": [549, 587], "lim": [440, 451, 459, 461, 485, 487, 489, 497, 501, 524, 529, 549, 551, 586, 587, 590, 591, 592, 593, 594, 596], "limit": [46, 76, 133, 161, 231, 260, 376, 407, 438, 440, 457, 468, 485, 501, 509, 513, 520, 521, 549, 551, 560, 565, 577, 579, 581, 594, 596, 603, 619, 644], "limited": [11, 109, 193, 341, 438, 439, 440, 443, 444, 453, 457, 458, 471, 485, 508, 509, 516, 518, 519, 545, 549, 567, 579, 581, 584, 593, 594, 639, 641, 650, 652], "limiting": [594, 640, 651], "lin": [442, 444, 451, 452, 455, 456, 457, 459, 460, 461, 464, 465, 466, 468, 469, 470, 473, 474, 475, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 502, 506, 507, 509, 511, 513, 517, 518, 520, 521, 523, 535, 536, 540, 544, 545, 548, 549, 550, 551, 555, 556, 560, 563, 564, 567, 570, 575, 576, 579, 580, 581, 584, 587, 588, 589, 591, 593, 594, 595, 603, 605, 607, 608, 609, 612, 614, 615, 617, 619, 621, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "linaro": [538, 540], "linear": [443, 457, 459, 465, 466, 521, 567, 574, 579, 581, 615], "lineariz": 519, "linearized": [519, 579, 585], "linearscan": [457, 466, 615], "linebegin": 604, "lineend": 604, "lineno": 644, "ling": 598, "link": [41, 131, 227, 372, 436, 437, 439, 440, 445, 451, 453, 454, 455, 457, 459, 461, 462, 463, 465, 472, 473, 481, 486, 487, 488, 492, 493, 497, 498, 499, 501, 509, 517, 518, 520, 522, 536, 540, 541, 542, 544, 548, 550, 551, 556, 559, 561, 562, 563, 564, 565, 567, 572, 574, 576, 577, 578, 579, 580, 581, 587, 588, 590, 591, 593, 594, 598, 600, 606, 607, 609, 611, 612, 614, 615, 616, 617, 621, 622, 637, 638, 639, 641, 643, 647, 649, 650, 651, 652, 653], "link_component": 580, "linkabl": 440, "linkag": [447, 457, 476, 498, 516, 521, 536, 561, 562, 565, 579, 611, 638, 644, 649], "linkagenam": [549, 593], "linkagetyp": 579, "linkallcodegencomponent": 615, "linked": [440, 443, 444, 455, 457, 462, 468, 473, 482, 486, 488, 499, 506, 509, 513, 517, 518, 521, 540, 541, 544, 548, 549, 550, 551, 560, 561, 562, 567, 572, 579, 580, 591, 592, 593, 609, 615, 617, 623, 639, 650, 654], "linker": [459, 513, 521, 549, 563, 589], "linkinfo": 575, "linking": [451, 453, 455, 459, 462, 468, 472, 473, 501, 502, 517, 541, 548, 549, 551, 552, 563, 567, 572, 574, 579, 591, 592, 595, 607, 611, 614, 615, 616, 641], "linkonc": [447, 521, 549, 562, 579], "linkonce_odr": [447, 516, 549, 562], "linkonceanylinkag": 579, "linkonceodrlinkag": 579, "linpack": [607, 613], "lint": 584, "linux": [444, 455, 457, 479, 502, 507, 510, 511, 517, 521, 535, 536, 538, 539, 540, 541, 549, 551, 559, 563, 582, 587, 594, 596, 607, 609, 612, 616, 638, 639, 643], "lipo": [455, 463], "liquid": 440, "lis": 457, "lisp": [518, 645, 654], "list": [226, 371, 439, 440, 442, 443, 444, 447, 449, 451, 452, 453, 455, 457, 458, 460, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 487, 488, 489, 490, 492, 493, 494, 496, 498, 499, 500, 504, 505, 507, 509, 510, 511, 512, 514, 516, 517, 518, 521, 522, 524, 526, 541, 542, 543, 544, 545, 546, 548, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 569, 571, 572, 576, 577, 578, 580, 581, 584, 588, 589, 590, 591, 592, 593, 596, 598, 601, 603, 604, 605, 607, 609, 612, 613, 614, 615, 616, 617, 620, 621, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654], "list_nam": 456, "list_of_list": 456, "list_property_nam": 548, "listconcat": [603, 604], "listed": [440, 444, 455, 457, 459, 473, 486, 494, 501, 504, 514, 518, 529, 546, 548, 549, 579, 580, 581, 590, 598, 613, 615], "listen": 625, "listing": [463, 468, 494, 501, 571, 579, 598, 604, 614, 636, 647], "listsplat": [603, 604], "lit": [442, 455, 463, 523, 530, 539, 580, 581, 593, 597, 607, 609], "lit_arg": 609, "lit_config": 464, "lit_filt": 464, "lit_num_shard": 464, "lit_opt": 464, "lit_run_shard": 464, "litconfig": 464, "literal": [72, 73, 75, 77, 82, 83, 151, 153, 158, 162, 165, 168, 169, 254, 255, 258, 261, 266, 301, 327, 401, 402, 405, 408, 413, 447, 456, 459, 460, 485, 501, 515, 549, 555, 557, 579, 601, 603, 604, 619, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "literally": [447, 501, 638, 649], "literat": 579, "literatur": 457, "lithium": 452, "litloc": 644, "littered": 509, "littl": [440, 446, 447, 457, 501, 508, 510, 514, 518, 519, 529, 530, 534, 538, 549, 556, 561, 564, 575, 577, 579, 589, 593, 595, 599, 611, 614, 615, 618, 622, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 653, 654], "littleaarch64": 487, "littlearm": 487, "littleriscv": 487, "litvalu": 447, "liv": [440, 443, 446, 455, 459, 479, 502, 511, 518, 521, 523, 526, 544, 547, 549, 550, 552, 558, 559, 577, 579, 585, 587, 593, 594, 596, 598, 615, 638, 639, 642, 649, 653], "live_begin": 518, "live_end": 518, "live_iterator": 518, "live_siz": 518, "livecount": 518, "livedebugvalu": 549, "livedebugvari": 593, "livein": [479, 555, 593], "liveinterval": [457, 466], "liveintervalanalys": 457, "liveliness": 479, "liveness": [577, 587, 598], "liveoffset": 518, "liveonentry": 560, "liveout": [596, 598], "living": 549, "livr": 620, "ljti0_0": 594, "lkern0_end": 440, "lkern1_end": 440, "lkkmcnt": 440, "ll": [444, 451, 452, 456, 457, 459, 460, 461, 463, 465, 469, 476, 477, 499, 501, 502, 504, 507, 509, 512, 514, 516, 517, 518, 519, 521, 523, 524, 529, 530, 537, 538, 539, 540, 541, 542, 543, 549, 555, 560, 562, 564, 577, 578, 579, 581, 587, 588, 590, 593, 598, 599, 609, 615, 616, 617, 619, 621, 622, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654], "llazyjitbuild": 563, "llbuild": 653, "llc": [451, 457, 460, 461, 463, 466, 515, 517, 518, 521, 523, 539, 544, 549, 555, 562, 564, 587, 589, 593, 598, 609, 614, 615, 617, 643], "lld": [440, 455, 459, 481, 521, 539, 540, 564, 581, 584, 587, 589], "lldb": [455, 459, 507, 509, 521, 548, 558, 563, 579, 581, 584, 593], "llgo": [455, 581], "lli": [461, 463, 465, 507, 521, 523, 544, 564, 615], "llibnam": 501, "lljitbuild": 563, "lllazyjitbuild": 563, "llld1": 581, "llld2": 581, "lllex": [512, 617], "lllvm1": 581, "lllvm2": 581, "llnl": 583, "llocat": 536, "llpars": [512, 617], "llt": 524, "lltok": 512, "llvalu": [649, 650, 651, 652, 653], "llvm": [441, 442, 454, 460, 461, 462, 500, 501, 502, 507, 515, 516, 520, 522, 525, 526, 528, 529, 530, 531, 533, 534, 536, 540, 545, 547, 548, 554, 555, 556, 559, 560, 561, 563, 564, 565, 566, 567, 571, 572, 574, 575, 578, 583, 584, 588, 590, 591, 594, 595, 603, 604, 605, 607, 608, 610, 611, 619, 621, 622, 623, 624, 625, 636, 637, 641, 643, 644, 647, 648, 652], "llvm1": 581, "llvm2": 581, "llvm_": [456, 615], "llvm_abi_breaking_check": 455, "llvm_addr2line_opt": 467, "llvm_addrsig": 494, "llvm_all_target": [521, 614], "llvm_analys": [649, 650, 651, 652, 653], "llvm_any": 512, "llvm_append_vc_rev": 455, "llvm_attribute_weak": 615, "llvm_build_32_bit": 455, "llvm_build_benchmark": 455, "llvm_build_d": 521, "llvm_build_doc": 455, "llvm_build_exampl": 455, "llvm_build_instrumented_coverag": 455, "llvm_build_llvm_dylib": [453, 455, 521, 587], "llvm_build_root": 455, "llvm_build_test": 455, "llvm_build_tool": 455, "llvm_ccache_build": 455, "llvm_ccache_d": 455, "llvm_ccache_maxsiz": 455, "llvm_cmake_d": 455, "llvm_compiler_job": 455, "llvm_create_xcode_toolchain": 455, "llvm_debug": [451, 499, 501], "llvm_definit": 455, "llvm_dependent_librar": 513, "llvm_dir": [455, 561], "llvm_distribution_component": 453, "llvm_doxygen_qch_filenam": 455, "llvm_doxygen_qhelpgenerator_path": 455, "llvm_doxygen_qhp_cust_filter_nam": 455, "llvm_doxygen_qhp_namespac": 455, "llvm_doxygen_svg": 455, "llvm_dylib_component": [453, 455, 521], "llvm_enable_abi_breaking_check": 579, "llvm_enable_assert": [455, 579], "llvm_enable_binding": 455, "llvm_enable_dia_sdk": 455, "llvm_enable_doxygen": [455, 521], "llvm_enable_doxygen_qt_help": 455, "llvm_enable_eh": 455, "llvm_enable_expensive_check": 455, "llvm_enable_ff": 455, "llvm_enable_id": 455, "llvm_enable_libcxx": 455, "llvm_enable_libpfm": 455, "llvm_enable_lld": 455, "llvm_enable_lto": [453, 455], "llvm_enable_pedantic": 455, "llvm_enable_pic": 455, "llvm_enable_project": [453, 455, 521, 609], "llvm_enable_rtt": 455, "llvm_enable_runtim": 453, "llvm_enable_sphinx": [455, 521], "llvm_enable_thread": 455, "llvm_enable_unwind_t": 455, "llvm_enable_warning": 455, "llvm_enable_werror": 455, "llvm_enable_z3_solv": 455, "llvm_enable_zlib": 455, "llvm_executionengin": [650, 651, 652, 653], "llvm_executionengine_orc_kaleidoscopejit_h": [621, 622, 623, 624, 625], "llvm_external_": 455, "llvm_external_project": 455, "llvm_force_use_old_toolchain": 455, "llvm_gc_root_chain": 518, "llvm_gcc_dir": 608, "llvm_include_benchmark": 455, "llvm_include_dir": 455, "llvm_include_exampl": 455, "llvm_include_test": 455, "llvm_include_tool": 455, "llvm_install_binutils_symlink": 455, "llvm_install_cctools_symlink": 455, "llvm_install_doxygen_html_d": 455, "llvm_install_ocamldoc_html_d": 455, "llvm_install_sphinx_html_d": 455, "llvm_install_toolchain_only": 453, "llvm_lib": 455, "llvm_libdir_suffix": 455, "llvm_library_visibility": 518, "llvm_link_llvm_dylib": [453, 455, 587], "llvm_linker_opt": 513, "llvm_lit_arg": 455, "llvm_lit_tools_d": [455, 523], "llvm_map_components_to_libnam": 455, "llvm_map_components_to_librar": 455, "llvm_obj_root": [580, 608, 609], "llvm_on_unix": 599, "llvm_on_xyz": 599, "llvm_optimized_tablegen": [455, 521], "llvm_package_vers": 455, "llvm_parallel_compile_job": 455, "llvm_parallel_link_job": 455, "llvm_profdata_fil": [442, 455], "llvm_reverse_iter": 455, "llvm_revis": 455, "llvm_runtime_distribution_component": 453, "llvm_scalar_opt": [650, 651, 652, 653], "llvm_site_config": [523, 609], "llvm_src_dir": 538, "llvm_src_root": [580, 608], "llvm_stackmap": 596, "llvm_static_link_cxx_stdlib": 455, "llvm_svn_rw": 507, "llvm_symbolizer_opt": 498, "llvm_sympart": 513, "llvm_tablegen": 455, "llvm_target": [650, 651, 652, 653], "llvm_target_arch": 455, "llvm_target_definit": 614, "llvm_targets_to_build": [453, 455, 510, 521, 523], "llvm_temporarily_allow_old_toolchain": 455, "llvm_tools_binary_d": 455, "llvm_tripl": 479, "llvm_unreach": [459, 561, 579], "llvm_use_intel_jitevent": 455, "llvm_use_link": 455, "llvm_use_newpm": 455, "llvm_use_oprofil": 455, "llvm_use_perf": 455, "llvm_use_sanitiz": 455, "llvm_yaml_is_document_list_vector": 619, "llvm_yaml_is_flow_sequence_vector": 619, "llvm_yaml_is_sequence_vector": 619, "llvm_yaml_strong_typedef": 619, "llvmanalys": 580, "llvmasmpars": 580, "llvmbb": 520, "llvmbc": 447, "llvmbitcod": 512, "llvmbitread": 580, "llvmbuild": [459, 471, 520, 650], "llvmcfiverify": 454, "llvmconfig": 455, "llvmcontext": [549, 563, 564, 617, 621, 622, 638, 639, 640, 641, 642, 643, 644], "llvmcontextimpl": 617, "llvmcor": [542, 580, 588], "llvmcreatedisasm": 557, "llvmcreatesimplemcjitmemorymanag": 596, "llvmdevmeeting": 533, "llvmdibuildercreatetypedef": 587, "llvmdisasminstruct": 557, "llvmdisassembler_option_usemarkup": 557, "llvmdummy": 614, "llvmdummyasmprint": 614, "llvmdummycodegen": 614, "llvmfoldingbuild": 650, "llvmfuzzerinitializ": 551, "llvmfuzzertestoneinput": 551, "llvmgccdir": 608, "llvmgetpassplugininfo": 615, "llvmgettypekind": 512, "llvmgold": 535, "llvmgrep": 521, "llvmhello": 615, "llvminitializesparcasmprint": 614, "llvminitializesparctargetinfo": 614, "llvmlab": 581, "llvmlib": 580, "llvmlibthin": 481, "llvmmemorymanagerallocatedatasectioncallback": 596, "llvmorg": [521, 558, 581], "llvmpassnam": 455, "llvmpush": 581, "llvmremarkentrydispos": 589, "llvmremarkentryref": 589, "llvmremarkparsercreateyaml": 589, "llvmremarkparserdispos": 589, "llvmremarkparsergetnext": 589, "llvmremarkparserhaserror": 589, "llvmremarkparserref": 589, "llvmrock": 459, "llvmscalaropt": 580, "llvmsetdisasmopt": 557, "llvmsupport": [521, 580], "llvmtarget": 580, "llvmtargetmachin": 614, "llvmtop": 615, "llvmtransformutil": 580, "llvmtypekind": 512, "llvmtyperef": 512, "llvmweekly": 558, "lma": [488, 617], "lmalloc": 501, "lmas": 488, "lmerg": 581, "lmyproj1": 581, "ln": [457, 535, 538, 541], "lnt": [541, 581, 588], "lo": [440, 524, 549], "lo12": 513, "lo16": 457, "load": [35, 36, 37, 127, 128, 220, 221, 222, 365, 366, 367, 438, 440, 443, 444, 446, 447, 451, 455, 459, 460, 461, 464, 465, 466, 468, 471, 476, 487, 489, 493, 499, 505, 507, 511, 515, 518, 519, 521, 525, 529, 532, 544, 548, 550, 555, 557, 560, 561, 562, 563, 569, 577, 579, 581, 585, 586, 587, 593, 594, 596, 597, 598, 609, 611, 614, 615, 617, 639, 642, 643, 644, 653], "loadabl": [487, 518], "loadable_modul": 518, "loaded": [440, 443, 444, 446, 455, 457, 461, 464, 471, 489, 499, 501, 513, 524, 525, 529, 530, 549, 551, 552, 554, 562, 563, 577, 591, 594, 596, 598, 614, 616, 617], "loaded1": 593, "loaded2": 593, "loading": [440, 445, 446, 457, 471, 509, 515, 516, 518, 536, 549, 562, 563, 594, 614, 615, 616, 625], "loadinst": 459, "loadlal": 549, "loadlibrarypermanently": [623, 624, 625], "loadmodul": 563, "loadmoduleoncontext": 563, "loadobject": 554, "loadregfromaddr": 614, "loadregfromstackslot": [457, 614], "loadsdnod": 579, "loc": [478, 513, 593, 598, 614, 644], "loc0": 596, "loc1": 596, "local": [440, 443, 447, 448, 457, 459, 460, 465, 466, 473, 476, 484, 486, 487, 497, 501, 502, 511, 514, 538, 540, 550, 554, 555, 559, 561, 562, 565, 577, 584, 585, 587, 591, 593, 594, 597, 598, 601, 604, 609, 612, 615, 619, 638, 639, 646, 647, 649, 650], "local_buff": 594, "local_release_x": 581, "local_unnamed_addr": [447, 513, 549], "localaddress": 549, "localdynamic": [447, 549], "localescap": 511, "localexec": [447, 549], "locality": [459, 518, 549, 579], "localiz": [487, 526], "localized": [509, 593], "locally": [459, 505, 521, 539, 581], "localrecov": 511, "localrepo": 581, "locat": [11, 42, 55, 109, 140, 193, 240, 287, 292, 297, 318, 341, 385, 438, 440, 443, 444, 455, 457, 459, 463, 464, 467, 468, 471, 489, 501, 506, 511, 513, 515, 516, 518, 519, 526, 541, 544, 549, 550, 554, 555, 557, 562, 565, 577, 579, 580, 586, 588, 589, 590, 594, 596, 598, 613, 614, 619, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 641, 642, 652, 653], "located": [453, 457, 464, 485, 506, 518, 520, 521, 549, 554, 572, 591, 595, 596, 599, 609, 614], "locating": 498, "lock": [444, 549, 563, 579, 581], "locked": [516, 563], "locking": [444, 563, 579, 591, 615], "lockstep": 581, "loclist": 478, "locstat": 463, "lod": 438, "lodg": 563, "log": [441, 443, 451, 460, 464, 509, 551, 574, 577, 578, 579, 581, 594, 608, 613, 616, 617, 622], "log10": 613, "log2": 613, "log_arg1": 616, "logallunhandlederror": [624, 625], "logarithm": [447, 549], "logarithmic": 579, "logcount": 567, "logerror": [637, 638, 639, 640, 641, 642, 643, 644], "logerrorp": [637, 638, 639, 640, 641, 642, 643, 644], "logerrorv": [638, 639, 640, 641, 642, 643, 644], "logfil": 616, "logg": [441, 590], "logged": 618, "logging": [551, 579, 616, 618], "logic": [457, 459, 464, 485, 505, 527, 543, 561, 585, 594, 621, 637, 640, 641, 642, 649, 651, 652, 653], "logical": [439, 457, 460, 509, 548, 549, 567, 577, 579, 641, 652], "logically": [457, 509, 519, 548, 549], "long": [442, 443, 444, 449, 450, 451, 452, 453, 456, 457, 459, 461, 464, 470, 473, 485, 490, 502, 503, 509, 511, 513, 514, 516, 517, 518, 519, 521, 525, 526, 530, 536, 539, 543, 545, 549, 551, 556, 559, 563, 571, 575, 577, 578, 579, 580, 581, 587, 588, 590, 593, 594, 595, 598, 599, 604, 609, 614, 615, 619, 622, 625, 638, 639, 642, 645, 649, 653, 654], "longjmp": [549, 645, 654], "look": [441, 443, 444, 447, 455, 456, 457, 459, 460, 478, 485, 489, 496, 498, 501, 504, 505, 507, 509, 511, 512, 518, 519, 521, 523, 524, 529, 535, 543, 548, 549, 550, 555, 556, 558, 561, 562, 563, 564, 567, 571, 572, 577, 578, 579, 580, 581, 584, 589, 592, 593, 594, 595, 596, 598, 601, 609, 611, 612, 614, 615, 617, 618, 619, 621, 622, 623, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653, 654], "looked": [513, 549, 563, 579, 621], "looking": [443, 455, 459, 460, 464, 478, 485, 501, 502, 506, 512, 513, 542, 552, 558, 560, 561, 575, 577, 578, 579, 581, 582, 593, 594, 598, 601, 603, 604, 616, 619, 637, 638, 639, 640, 641, 642, 643, 644, 650, 653], "lookup": [459, 478, 498, 521, 549, 561, 563, 565, 574, 575, 577, 579, 601, 603, 614, 618, 621, 622, 638, 641, 645, 649, 652, 653, 654], "lookup_funct": [649, 650, 651, 652, 653], "lookupflag": [623, 624, 625], "lookuptarget": 643, "loooong": 581, "loop": [440, 443, 444, 457, 460, 485, 502, 505, 508, 516, 518, 520, 521, 529, 550, 551, 561, 564, 579, 585, 587, 593, 598, 603, 604, 607, 612, 614, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654], "loop_bb": [651, 652, 653], "loop_end_bb": [651, 652, 653], "loop_header_weight": 549, "loopanalys": 508, "loopbb": [640, 641, 642, 643, 644], "loopcond": [640, 641, 642, 643, 644, 651, 652, 653], "loopdistribu": 610, "loopdistribut": 610, "loopend": [640, 641, 642, 643, 644, 653], "loopendbb": [640, 641, 642, 643, 644], "loopfullunroll": 610, "loophead": [549, 640, 641], "loopid": 610, "loopinfo": [584, 615], "loopinfobas": 579, "loopinfowrapperpass": 615, "looping": [443, 457], "loopinterchang": 610, "looppass": 564, "looppassmanag": 587, "looprerolling": 607, "loopunroll": 610, "loopunrollandjam": 610, "loopunswitch": 577, "loopunswith": 516, "looputil": 615, "loopvectoriz": [585, 593, 610], "loopvectorizationplann": 585, "loos": 524, "loosely": 605, "lor": 442, "los": [593, 615, 645, 654], "losing": [534, 581, 594, 601], "loss": [439, 518, 579, 581, 593, 594], "losslessly": 561, "lost": [439, 511, 514, 549, 593, 594, 610, 645, 654], "lot": [442, 451, 452, 456, 457, 459, 501, 509, 512, 514, 518, 519, 521, 524, 530, 538, 543, 545, 549, 555, 576, 577, 579, 581, 593, 594, 605, 608, 614, 615, 616, 619, 623, 637, 638, 639, 641, 642, 644, 645, 647, 648, 649, 650, 652, 653, 654], "loved": 579, "low": [52, 103, 209, 220, 222, 237, 382, 435, 438, 439, 440, 443, 444, 445, 447, 457, 470, 485, 486, 489, 492, 493, 501, 502, 505, 512, 514, 516, 518, 519, 520, 525, 526, 529, 531, 532, 536, 549, 555, 559, 561, 562, 563, 571, 574, 579, 584, 585, 587, 591, 594, 598, 599, 603, 613, 614, 618, 637, 641, 642, 648, 652, 653], "lower": [457, 505, 529, 549, 577, 587, 596, 598], "lower16": 513, "lower_bound": 579, "lower_cas": 584, "loweralloc": 615, "lowerbound": 549, "lowercall": 617, "lowercas": [614, 639, 650], "lowered": [446, 457, 505, 518, 519, 525, 526, 529, 549, 596, 598, 645, 654], "lowerfor": 529, "lowerfp_to_sint": 614, "lowering": [444, 457, 500, 511, 512, 526, 529, 547, 584, 587, 601, 614, 642, 653], "lowermatrixintrinsic": 587, "loweroper": 614, "lowertypetest": 611, "lowest": [444, 446, 506, 525, 549, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "lp64": 587, "lpa": 444, "lpad": [505, 511, 549], "lpc0": 555, "lpechacek": 445, "lpm": 615, "lq": 485, "lqueu": 485, "lr": [457, 549, 555], "lrt": 502, "ls": [501, 591], "lsampl": 580, "lsb": [135, 457, 618], "lsb_extract": 549, "lsbit": 579, "lsda": 550, "lsl": 513, "lst": 603, "lsun": 485, "lt": [468, 473, 509, 521, 562, 603, 604], "ltmp": 513, "ltmp1": [555, 598], "lto": [447, 453, 505, 550, 552, 564, 587, 589, 610, 611], "lto2": 549, "lto_codegen_add_modul": 552, "lto_codegen_add_must_preserve_symbol": 552, "lto_codegen_compil": 552, "lto_codegen_creat": 552, "lto_codegen_set_debug_model": 552, "lto_codegen_set_pic_model": 552, "lto_module_creat": 552, "lto_module_create_from_memory": 552, "lto_module_dispos": 552, "lto_module_get_num_symbol": 552, "lto_module_get_symbol_attribut": 552, "lto_module_get_symbol_nam": 552, "lto_module_is_object_fil": 552, "lto_module_is_object_file_for_target": 552, "lto_module_is_object_file_in_memory": 552, "lto_module_is_object_file_in_memory_for_target": 552, "ltopostlink": 549, "lu": 518, "luckily": 518, "lud": 583, "lv": 561, "lvalu": 579, "lvaluereferent": 566, "lvaluerefthispoint": 566, "lvl": [584, 617], "lvm": 644, "lw": 587, "lwe": [0, 1, 2, 3], "lwn": 594, "lying": 550, "lz": 549, "m0": [47, 48, 49, 65, 71, 72, 73, 74, 77, 79, 80, 81, 82, 134, 145, 151, 152, 153, 154, 155, 156, 157, 162, 163, 165, 166, 167, 168, 232, 233, 234, 248, 254, 255, 256, 257, 261, 263, 264, 265, 289, 290, 294, 295, 301, 302, 303, 322, 327, 328, 329, 377, 378, 379, 395, 401, 402, 403, 404, 408, 410, 411, 412], "m1": [549, 563, 581], "m2": [549, 563], "m35qpb": 617, "m3writenmisc1": 614, "m64": 510, "m7170": 440, "m_": 584, "m_func": 579, "m_op_sel": [0, 4, 5, 6, 7, 42, 287, 292, 297, 318], "m_op_sel_h": [0, 4, 5, 6, 7, 42, 287, 292, 297, 318, 436], "mac": 459, "mach": [447, 483, 487, 494, 503, 549], "mach_universal_binary": 498, "machin": [440, 446, 454, 455, 460, 463, 464, 465, 466, 468, 473, 478, 481, 500, 502, 507, 509, 510, 518, 521, 523, 527, 529, 534, 537, 538, 540, 541, 549, 550, 551, 554, 561, 562, 563, 567, 579, 581, 584, 586, 587, 593, 601, 607, 612, 613, 615, 618, 625, 639, 644, 645, 650, 654, 656], "machinebasicblock": [555, 579, 614], "machineblockfrequencyinfo": 448, "machinecodeemitt": 614, "machineconstantpool": [457, 555], "machineconstantpoolvalu": 555, "machineframeinfo": 457, "machinefunct": [526, 527, 528, 532, 555, 579, 584, 593], "machinefunctioninfo": [457, 555], "machinefunctionpass": [564, 614, 617], "machineinstr": [465, 466, 515, 524, 526, 527, 528, 584, 601, 609, 614], "machineinstrbuild": 524, "machineir": 524, "machineirbuild": 524, "machinememoperand": [444, 525, 529], "machinemoduleinfo": 555, "machineoperand": [457, 525, 584, 614], "machinepassregistry": 615, "machinepassregistrynod": 615, "machineregisterinfo": [457, 524, 534, 584], "machinery": [543, 608], "macho": [447, 457, 465, 487, 488, 493, 494, 554, 563, 589, 596], "macho2": 494, "machoobjectfil": 579, "macinfo": 549, "macos": [455, 502, 507, 521, 551, 564, 579, 588, 607, 609, 615], "macosx10": 549, "macosx_deployment_target": 588, "macport": 576, "macro": [455, 456, 459, 464, 473, 478, 499, 501, 502, 506, 549, 551, 601, 614, 615, 619, 639, 650], "macronam": 604, "macros": [459, 473, 501, 502, 506, 511, 549, 579, 587, 601, 605, 614], "mad": [443, 446, 447, 450, 454, 457, 459, 502, 508, 509, 511, 514, 515, 516, 519, 520, 536, 539, 542, 543, 549, 556, 560, 561, 566, 577, 579, 580, 581, 584, 589, 591, 592, 593, 594, 598, 601, 602, 605, 611, 615, 619, 639, 640, 642, 645, 651, 653, 654], "mag": 549, "magic": [521, 549, 551, 571, 579, 589, 593, 641, 652], "magically": 444, "magnif": [636, 641, 647, 652], "magnitud": [525, 549], "mail": [504, 509, 521, 537, 556, 578], "mailed": [517, 556], "mailing": [458, 504, 509, 517, 542, 551, 558, 578, 580, 587, 588, 590, 598, 616, 617, 620, 645, 654], "mailto": 594, "main": [446, 448, 450, 452, 453, 455, 457, 459, 473, 479, 485, 487, 492, 493, 496, 498, 501, 505, 506, 507, 508, 509, 511, 517, 520, 521, 522, 523, 524, 528, 530, 535, 536, 537, 540, 542, 547, 548, 549, 551, 552, 556, 562, 563, 577, 579, 581, 584, 587, 589, 593, 595, 603, 605, 609, 611, 612, 614, 615, 616, 617, 620, 621, 622, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654], "main_loop": [648, 649, 650, 651, 652, 653], "mainfun": 625, "mainjd": [563, 621, 622], "mainlin": [509, 542, 581], "mainloop": [637, 638, 639, 640, 641, 642, 643, 644], "mainly": [452, 485, 502, 508, 524, 549, 561, 580, 601], "mainsym": 563, "mainsymbolnam": 563, "maintain": [440, 443, 444, 447, 452, 457, 459, 468, 501, 509, 510, 512, 518, 529, 542, 549, 561, 563, 569, 571, 579, 581, 584, 596, 605, 615, 618], "maintainability": [456, 459, 509], "maintained": [447, 450, 455, 457, 504, 505, 509, 549, 581, 593, 599], "maintainer": [502, 509, 549, 584], "maintaining": [443, 518, 579, 581, 591], "mainten": [459, 509, 546, 552], "maj": 588, "major": [443, 457, 459, 511, 514, 516, 521, 523, 531, 534, 542, 549, 561, 565, 567, 576, 577, 579, 581, 582, 585, 587, 593, 605, 609, 614, 642, 653], "majority": [440, 460, 506, 509, 511, 530, 536, 563, 564, 593], "majorvers": 567, "mak": [440, 441, 442, 443, 444, 446, 447, 450, 451, 452, 455, 456, 457, 458, 460, 461, 464, 465, 467, 468, 471, 472, 473, 479, 484, 485, 487, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 516, 517, 518, 519, 521, 523, 525, 528, 529, 530, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 556, 558, 560, 561, 562, 563, 564, 567, 574, 576, 577, 578, 579, 580, 581, 582, 584, 586, 588, 590, 591, 593, 594, 595, 596, 597, 598, 599, 602, 603, 605, 607, 608, 609, 610, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "make_error": 579, "make_error_cod": 579, "make_fallible_end": 579, "make_fallible_itr": 579, "make_pair": [561, 642, 643, 644], "make_rang": 579, "make_shared": [623, 624], "make_un": [563, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "makefil": [455, 457, 471, 472, 518, 520, 521, 544, 552, 609, 637, 638, 649], "makelight": 459, "maken": 625, "makestruct": 502, "maketir": 459, "makeup": 579, "makevehicl": 459, "making": [438, 452, 454, 457, 459, 487, 502, 511, 515, 518, 519, 520, 522, 529, 549, 552, 577, 578, 581, 585, 593, 594, 598, 602, 605, 607, 609, 617, 619, 621, 622, 639, 645, 654], "malformed": [451, 502, 551, 574, 577, 579], "malicious": 594, "malloc": [505, 518, 536, 551, 559, 579, 586, 591, 615, 645, 654], "malloc_limit_mb": 551, "mallocbench": 608, "malyutin": 584, "malyutindistinguish": 584, "man": [455, 501, 586, 609], "manag": [440, 455, 460, 461, 485, 504, 514, 517, 518, 521, 523, 536, 537, 542, 550, 554, 562, 564, 579, 588, 596, 610, 614, 615, 621, 622, 623, 624, 625, 639, 640, 641, 642, 645, 654], "manage": 451, "managed": [440, 458, 514, 515, 519, 536, 549, 550, 598, 621, 622, 642, 653], "manager": [502, 542, 564], "managing": [440, 594], "mandat": [457, 581], "mandatory": [438, 516, 523, 524, 529, 549, 579, 589, 614], "mandel": [641, 652], "mandelbrot": [636, 641, 647, 652], "mandelconverg": [641, 652], "mandelhelp": [641, 652], "mangl": [509, 563, 614, 621, 622, 623, 624, 625], "mangleandintern": [563, 621, 622], "mangled": [463, 474, 488, 498, 549, 565, 589, 593, 621], "manglednam": [623, 624, 625], "manglednamestream": [623, 624, 625], "mangling": [474, 475, 549, 563, 565, 621], "manifest": 549, "manipul": [459, 559, 579, 611], "manipulat": [457, 463, 487, 489, 505, 514, 579, 591, 642, 653], "manipulated": [505, 545], "manipulating": [463, 468, 471, 579, 585], "mann": [438, 440, 444, 457, 468, 506, 509, 511, 519, 549, 564, 579, 582, 594, 598, 614], "manner": 458, "manpag": 456, "mantained": 581, "mantiss": 549, "manual": [440, 454, 455, 457, 459, 499, 504, 516, 518, 521, 522, 526, 543, 575, 586, 587, 594, 607, 609, 612, 613, 614, 615, 621, 654], "manually": [440, 451, 455, 509, 516, 519, 537, 542, 563, 578, 579, 581, 593, 594, 598, 605, 613, 616], "many": [442, 443, 444, 445, 446, 447, 448, 449, 451, 453, 456, 457, 459, 460, 476, 485, 487, 497, 501, 502, 511, 512, 514, 515, 517, 518, 519, 521, 523, 524, 525, 526, 528, 529, 530, 540, 541, 543, 544, 547, 548, 549, 551, 560, 562, 563, 567, 571, 577, 578, 579, 581, 583, 584, 588, 593, 594, 596, 598, 599, 608, 609, 613, 614, 615, 616, 618, 619, 621, 637, 638, 639, 640, 641, 642, 645, 647, 648, 649, 650, 651, 652, 653, 654], "map": [459, 462, 473, 488, 489, 501, 506, 512, 532, 536, 546, 550, 554, 560, 561, 562, 563, 565, 575, 581, 586, 593, 594, 601, 611, 613, 614, 616, 617, 618, 619, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653, 656], "mapoptional": 619, "mapped": [440, 447, 457, 464, 473, 501, 513, 525, 527, 532, 536, 549, 554, 560, 579, 581, 593, 596], "mapping": [443, 473, 475, 485, 489, 492, 493, 501, 512, 524, 531, 532, 549, 560, 562, 565, 567, 570, 572, 574, 579, 586, 591, 593, 594, 596, 598, 601, 612, 650, 656], "mappingnormaliz": 619, "mappingnormalizationheap": 619, "mappingtrait": 619, "maprequired": 619, "mapsectionaddress": 554, "maptag": 619, "mapvector": 459, "march": [460, 465, 466, 485, 540, 541, 544, 559, 585, 587, 594, 643], "marching": 593, "marginally": 594, "mark": [440, 447, 457, 459, 464, 479, 485, 487, 501, 502, 505, 506, 511, 513, 515, 516, 518, 542, 549, 556, 561, 562, 577, 579, 594, 598, 609, 616, 618], "markdown": [556, 595], "markdownquickstarttemplat": 556, "marked": [440, 442, 444, 454, 457, 459, 505, 507, 511, 513, 515, 518, 549, 557, 566, 577, 579, 587, 594, 598, 605, 611, 614, 618], "marker": [509, 618], "marking": [485, 518, 521, 549, 577, 579, 594, 596], "markup": [440, 459, 551, 556, 595], "marshaling": 596, "mask": [52, 226, 237, 371, 382, 438, 439, 440, 457, 459, 460, 516, 524, 525, 545, 549, 585, 594, 601, 618, 619], "masked": 614, "maskedbitset": 619, "maskedbitsetcas": 619, "maski64": 549, "masking": [444, 594], "maskipopcnt": 549, "masm": [567, 574], "massaging": 539, "massiv": [476, 520, 551, 601], "massv": 587, "mast": [509, 520, 521, 537, 575, 578, 580, 581, 583, 594], "match": [438, 439, 440, 444, 447, 449, 451, 453, 456, 457, 459, 460, 461, 464, 468, 473, 476, 485, 487, 489, 497, 500, 502, 505, 506, 511, 512, 517, 519, 521, 524, 525, 529, 543, 548, 549, 551, 555, 559, 567, 572, 575, 577, 579, 581, 587, 589, 591, 593, 598, 601, 603, 604, 609, 614, 615, 617, 618, 619, 636, 638, 639, 647, 648, 649, 650, 651, 652, 653], "matched": [444, 457, 460, 475, 490, 501, 511, 512, 549, 614, 636], "matcher": [551, 601], "matching": [441, 447, 463, 468, 475, 478, 480, 505, 511, 518, 548, 549, 552, 559, 565, 579, 593, 601, 614, 618, 619, 648], "matchinstructionimpl": 457, "material": [458, 561], "materializ": [524, 526, 563, 585, 593], "materializationresponsibility": [563, 622], "materializationun": [563, 622], "materializationunit": 563, "materialized": 563, "materializer": 563, "math": [456, 459, 465, 466, 501, 516, 562, 587, 593, 612, 613, 636, 639, 641, 647, 652], "mathematic": [637, 648], "mathematical": [514, 549, 562, 587], "mathematically": 561, "matplotlib": 484, "matrix": [518, 587], "matt": [444, 460, 487, 497, 512, 528, 549, 584, 596, 650], "matter": [509, 615], "matthew": 581, "matthewsrevnum": 581, "mattr": [460, 465, 466, 488, 587, 614, 643], "matur": [501, 516, 518, 594], "mat\u00e9riel": 130, "max": [440, 464, 479, 485, 490, 501, 502, 506, 549, 551, 587, 594, 607, 617], "max_dx10": 440, "max_flat_workgroup_siz": 440, "max_fp16": 440, "max_int_bit": 579, "max_len": [517, 551], "max_total_tim": 551, "max_vgpr": 440, "maxatomicsizeinbitssupported": 444, "maxflatworkgroupsiz": 440, "maximal": [508, 553], "maximally": [447, 549, 647], "maximiz": [466, 551, 563], "maximizing": 453, "maximum": [440, 443, 444, 448, 455, 457, 462, 470, 478, 479, 485, 501, 525, 529, 536, 551, 561, 579, 591], "maxscalar": 529, "maxsimultaneousalloc": 536, "maxsiz": 459, "may": [8, 11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 36, 37, 40, 41, 43, 44, 45, 46, 103, 106, 109, 115, 116, 117, 118, 119, 120, 128, 131, 132, 133, 189, 190, 193, 199, 200, 201, 206, 207, 208, 209, 221, 222, 225, 226, 227, 228, 229, 230, 231, 286, 288, 293, 298, 299, 300, 307, 316, 319, 320, 321, 338, 341, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 366, 367, 370, 371, 372, 373, 374, 375, 376, 435, 436, 437, 438, 439, 440, 441, 444, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 473, 478, 479, 480, 485, 486, 487, 488, 490, 492, 493, 497, 501, 502, 504, 505, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 521, 523, 524, 525, 526, 529, 530, 535, 536, 537, 538, 539, 540, 542, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 562, 563, 564, 565, 567, 571, 572, 574, 575, 577, 578, 579, 580, 581, 582, 584, 585, 587, 590, 591, 593, 594, 596, 597, 598, 599, 603, 604, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 622, 623, 624, 625, 638, 639, 640, 641, 642, 643, 644, 645, 647, 649, 651, 652, 653, 654], "may_throw": 511, "mayali": [443, 549], "mayb": [512, 551, 594, 601, 616, 645, 654], "maybe_instru": 616, "maybeoverridden": 561, "maybevalu": 501, "mayfail": 579, "mayfail2": 579, "mayload": [485, 605], "mayreadfrommemory": 444, "maystor": [485, 605], "maytrap": 549, "maywritetomemory": [444, 579], "mb": [551, 583, 587, 619], "mbb": [457, 614], "mbbi": 457, "mc": [440, 507, 513, 521, 550, 554, 555, 609], "mca": 463, "mcasmpars": 457, "mcasmstream": 457, "mccfiinstruct": 555, "mccodeemitt": [457, 601], "mcdesc": 614, "mcdisassembl": 457, "mce": 614, "mcexpr": 457, "mcinst": [485, 601], "mcinstlow": 457, "mcinstrdesc": 524, "mcjit": [516, 563, 612, 621, 639, 640, 641, 642, 644], "mclabel": 457, "mcobjectstream": 457, "mcod": 513, "mcoperand": 457, "mcount": 587, "mcpu": [440, 465, 466, 479, 485, 488, 538, 541, 562, 609, 614], "mcregaliasiterator": 457, "mcsectioncoff": 457, "mcsectionelf": 457, "mcsectionmacho": 457, "mcstream": 518, "mcsymbol": 518, "mctargetdesc": 601, "mctargetstream": 457, "md": [518, 549, 551, 556, 583, 594], "md5": [473, 506], "md_prof": 449, "mdnod": [449, 549, 610], "mdstring": [449, 549], "mdtupl": 549, "meab": 465, "mean": [438, 440, 443, 445, 446, 447, 450, 453, 455, 456, 457, 458, 459, 460, 468, 485, 490, 501, 505, 509, 511, 516, 518, 519, 521, 524, 525, 529, 530, 535, 541, 542, 547, 549, 551, 552, 555, 559, 560, 561, 563, 564, 567, 571, 572, 574, 577, 578, 579, 580, 581, 582, 584, 587, 590, 593, 594, 598, 599, 601, 603, 607, 610, 611, 614, 615, 619, 622, 636, 638, 639, 640, 642, 644, 645, 647, 649, 650, 651, 653, 654], "meaning": [40, 46, 103, 133, 189, 209, 220, 222, 225, 226, 231, 286, 370, 371, 376, 435, 436, 438, 439, 440, 447, 455, 457, 459, 464, 468, 479, 486, 487, 497, 501, 511, 513, 519, 543, 549, 563, 567, 570, 571, 572, 584, 587, 591, 593, 598, 602, 603, 604, 605, 611, 619, 636, 647], "meaningful": [440, 452, 459, 466, 499, 502, 518, 519, 549, 556, 579, 582, 595, 598, 601, 618], "meaningless": 579, "meant": [459, 499, 506, 520, 521, 523, 539, 549, 556, 560, 579, 588, 590, 591, 593, 595, 603, 604], "measur": [445, 455, 479, 485, 579, 607, 618], "measurably": 453, "measured": [479, 485, 594], "measuring": 479, "meat": 650, "mechanic": [440, 615, 649], "mechanism": [440, 447, 454, 457, 459, 464, 509, 511, 516, 518, 535, 536, 548, 549, 550, 554, 562, 563, 579, 582, 590, 593, 594, 598, 599, 604, 608, 611, 613, 615], "med": 617, "median": 594, "mediat": 590, "mediated": 443, "medium": [466, 549], "meet": [440, 457, 509, 521, 529, 553, 561, 590, 615], "meeting": [458, 520, 559, 585, 590], "meetup": 620, "megabyt": 461, "mehd": 584, "meltdown": 594, "mem": [505, 557, 577, 610, 648, 649, 650, 651, 652, 653], "mem2ref": 598, "mem2reg": [516, 518, 579, 593, 642, 653], "mem_address": 457, "mem_not_null": 505, "mem_ordered": 440, "memalign": 591, "memarg": 547, "memb": [457, 459, 468, 487, 488, 497, 502, 513, 543, 549, 554, 563, 565, 574, 577, 579, 584, 590, 603, 611, 614, 618, 619, 621, 622, 623], "member": [456, 458, 459, 468, 481, 489, 494, 502, 549, 552, 587, 593, 603, 607, 613, 614, 621, 622, 623], "memberlist": 614, "membership": [511, 579], "memcheck": [464, 609], "memcpy": [443, 444, 594], "memcpyopt": 444, "memdep": 443, "memfenc": 440, "memop": 490, "memoriz": 459, "memory": [9, 13, 14, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 40, 48, 49, 54, 55, 103, 107, 111, 112, 115, 116, 117, 118, 119, 121, 122, 123, 124, 135, 139, 140, 189, 191, 195, 196, 199, 200, 201, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 233, 234, 239, 240, 286, 316, 325, 339, 343, 344, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 370, 378, 379, 384, 385, 435, 438, 439, 444, 446, 455, 457, 461, 462, 464, 476, 479, 487, 490, 502, 505, 507, 508, 511, 512, 514, 515, 518, 519, 524, 536, 538, 544, 547, 550, 551, 552, 554, 555, 557, 559, 560, 562, 563, 564, 586, 587, 589, 591, 592, 593, 594, 596, 597, 598, 601, 611, 613, 614, 615, 616, 618, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 643, 644, 645, 647, 654], "memory_order_acq_rel": [444, 549], "memory_order_acquir": [444, 549], "memory_order_consum": 444, "memory_order_relaxed": [444, 549], "memory_order_releas": [444, 549], "memory_order_seq_cst": [444, 549], "memoryaccess": 560, "memorybuff": [459, 563], "memorydef": 560, "memorydependenceanalys": 560, "memorydependencyanalys": 444, "memoryph": 560, "memorysanitiz": [549, 551], "memoryss": [443, 587, 612], "memoryssawalk": 560, "memoryus": 560, "memorywithorigin": 455, "memr": [457, 614], "memrr": 614, "memset": [444, 577, 625], "memtag": 559, "memtagsanitiz": [549, 586], "mental": [458, 579], "mentality": 453, "mention": [446, 525, 558, 581], "mentioned": [440, 446, 447, 455, 457, 459, 501, 508, 539, 548, 549, 561, 565, 570, 579, 592, 593, 598, 603], "mentioning": [543, 590], "merely": [519, 523, 549, 577, 578, 594, 598, 638, 649], "merg": [442, 443, 473, 487, 506, 509, 518, 521, 532, 539, 549, 560, 561, 589, 593, 607, 613, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "mergabl": 577, "merge_bb": [651, 652, 653], "merge_control_fil": 551, "mergebb": [640, 641, 642, 643, 644], "merged": [455, 457, 490, 493, 502, 509, 513, 542, 549, 551, 561, 579, 581, 588, 593, 644], "mergefunct": 612, "merging": [443, 460, 489, 490, 549, 551, 552, 577, 584, 593, 594, 612], "mesa3d": 440, "mess": 577, "messag": [46, 103, 133, 189, 231, 286, 376, 435, 440, 451, 455, 456, 459, 460, 464, 468, 479, 482, 485, 501, 511, 520, 521, 540, 544, 550, 551, 564, 578, 579, 581, 587, 591, 601, 605, 615, 619, 643], "messy": 457, "met": [457, 488, 518, 542, 549, 561, 579, 589, 591, 593, 596, 601, 605], "metadat": [447, 448, 452, 457, 465, 509, 516, 518, 519, 526, 536, 550, 555, 561, 577, 586, 587, 609, 636, 644, 647], "metadatarecord": 618, "metal": [540, 549], "metarenam": 451, "metasyntactic": 451, "metatad": 449, "method": [451, 453, 454, 456, 457, 460, 501, 508, 509, 512, 518, 519, 527, 532, 536, 540, 542, 543, 544, 545, 547, 549, 550, 554, 561, 563, 578, 593, 594, 596, 598, 601, 608, 614, 619, 621, 622, 623, 637, 638, 639, 640, 642, 649, 650, 651, 653], "methodbod": 614, "methodology": 511, "methodprotos": 614, "metric": [448, 478, 530, 542, 551, 594, 607, 615, 617], "meyer": 459, "mf": [457, 501, 528, 564, 584], "mfc": 567, "mfctypeserverindex": 567, "mfenc": 444, "mfentry": 587, "mfloat": [540, 541], "mflop": 613, "mfpu": 540, "mft": 575, "mgrid331": 583, "mi": [457, 527, 528, 555, 584, 614], "mi25": 440, "mi50": 440, "mi6": 440, "mi60": 440, "mi8": 440, "mib": 513, "michigan": 508, "micro": [440, 459, 485, 583, 587, 594], "microbenchmark": [594, 607], "microcod": 440, "microcontroller": 503, "microopbuffersiz": 485, "microphon": 558, "microprocessor": [457, 549, 614], "microsecond": 618, "microsoft": [457, 459, 481, 489, 501, 503, 513, 522, 537, 547, 549, 567, 571, 574, 575, 586, 593, 594], "microsoftcompilerspectremitig": 594, "mid": [516, 547, 549, 593], "middl": [456, 459, 509, 518, 547, 549, 571, 598], "might": [443, 444, 445, 449, 450, 451, 455, 457, 458, 459, 460, 468, 475, 479, 485, 501, 509, 510, 514, 516, 517, 518, 521, 523, 527, 541, 542, 543, 548, 549, 550, 551, 556, 557, 561, 563, 571, 572, 574, 578, 579, 580, 581, 583, 591, 593, 594, 595, 598, 599, 601, 602, 610, 611, 613, 614, 619, 640, 643, 645, 651, 652, 653, 654], "migit": 581, "migrat": [440, 509, 518], "migrated": [460, 509, 581], "migrating": [443, 521, 581], "mileag": 558, "mileston": 561, "mill": 501, "million": [549, 579], "millisecond": 617, "mim": 523, "mimic": [436, 459, 492, 493, 581], "min": [103, 189, 286, 435, 440, 489, 490, 493, 502, 549, 551, 558, 587, 588, 594, 607, 617], "min_dx10": 440, "min_int_bit": 579, "mind": [459, 509, 579, 591, 637, 642, 648, 653], "minded": [642, 653], "mindful": 582, "mingw": [455, 457, 523, 587], "mingw32": [457, 537, 609], "mingw32msvc": 457, "mingw64": 521, "minimal": [440, 442, 457, 459, 468, 506, 510, 563, 579, 580, 593, 615, 637, 641, 648, 652], "minimaldebuginfo": 572, "minimally": [444, 457, 510], "minimis": 584, "minimiz": [452, 457, 462, 466, 510, 519, 524, 530, 549, 551, 552, 579, 594, 611, 618], "minimize_crash": 551, "minimized": 551, "minimizing": [453, 596], "minimum": [440, 455, 461, 496, 509, 512, 521, 525, 542, 544, 582, 589, 593, 594, 596, 607, 614, 617, 623, 637, 648], "minor": [457, 459, 509, 542, 561, 567, 576, 579, 645, 654], "minor_processing": 594, "minorvers": 567, "minscalar": 529, "minscalarsam": 529, "minsiz": [447, 549], "minsizerel": [453, 455, 521], "minus": [439, 440, 549, 592], "minut": 521, "mioperandinfo": 614, "mip": [444, 457, 516, 521, 524, 529, 541, 549, 584, 591, 614, 616], "mips16": 444, "mips32": 444, "mips64": 616, "mips64el": 616, "mipsel": 616, "mir": [524, 527, 530, 531, 534, 549, 586, 587], "mirror": [438, 517, 518, 640, 641, 651, 652], "mirroring": 581, "mis": [440, 457, 461, 544, 594], "misaligned": 591, "misbehav": 588, "miscellaneous": [549, 587], "miscommun": 509, "miscompil": [450, 461, 509, 521, 549, 583], "miscompiled": [451, 521, 544, 587], "miscompiling": 544, "misinterpret": 451, "misinterpreted": 438, "mislead": 459, "misleading": 593, "mismatch": [440, 490, 540, 549, 557, 591, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "mismatched": [446, 539], "misnamed": 457, "misoptimiz": 449, "mispredict": 594, "mispredicted": 594, "misrepresenting": 593, "miss": [451, 485, 516, 549, 584, 597], "missed": [485, 589, 610, 613], "missing": [444, 459, 535, 540, 541, 549, 563, 579, 583, 587, 593, 598, 604, 608, 637, 641, 642, 648, 652, 653], "misspecul": 594, "misspeculated": 594, "misspeculating": 594, "mistak": [458, 459, 516], "mistaken": [639, 650], "misunderstood": [514, 586], "misused": 609, "mit": [509, 594], "mitig": [549, 559, 584, 586, 591, 594], "mitigat": [518, 549, 586, 591, 594], "mitigated": [485, 526, 594], "mitigating": 594, "mix": [456, 457, 459, 524, 549, 582, 593], "mixed": [444, 460, 548, 579, 585, 594], "mixing": [460, 519, 535, 549, 552, 594, 603], "mixtur": [498, 530, 594, 603], "mkdir": [455, 521, 535, 551, 581, 607, 609, 617], "ml": [518, 583, 648, 649, 650, 651, 652, 653], "mli": 650, "mlim": 461, "mllvm": [485, 564, 587, 613], "mm0": [457, 603, 605], "mm1": [603, 605], "mm2": [603, 605], "mm3": [603, 605], "mm4": [603, 605], "mm5": [603, 605], "mm6": [603, 605], "mm7": [603, 605], "mmi": 555, "mmio": 549, "mmx": [457, 549, 614], "mnemonic": [587, 614, 616], "mnemonicali": 457, "mno": 440, "mnop": 587, "mo": 593, "mo1": 614, "mo_cimmediat": 555, "mo_registermask": 457, "mobil": 440, "mock": 609, "mocked": 579, "mod": [40, 56, 88, 130, 225, 226, 326, 332, 370, 371, 386, 420, 438, 439, 443, 445, 447, 449, 455, 460, 464, 468, 472, 473, 479, 482, 487, 489, 490, 497, 501, 502, 509, 517, 518, 530, 538, 540, 549, 559, 566, 570, 574, 579, 588, 591, 594, 603, 604, 605, 607, 609, 612, 614, 617, 618, 642, 643, 653], "model": [444, 447, 456, 457, 464, 466, 479, 501, 505, 509, 510, 511, 513, 514, 516, 518, 519, 520, 524, 544, 546, 547, 552, 563, 579, 585, 586, 587, 593, 594, 601, 610, 613, 614, 619, 637, 638, 642, 643, 648, 653], "modeled": [450, 485, 518, 549, 579, 585, 598, 614, 649], "modeling": [546, 585, 613], "modelled": [511, 547, 579, 585], "modelling": [440, 585], "moder": [578, 590], "moderat": [459, 579], "moderator": 509, "modern": [456, 459, 502, 503, 507, 514, 538, 558, 565, 566, 567, 570, 572, 579, 594, 613, 645, 647, 654], "modest": 459, "modfilecount": 567, "modfilecountarray": 567, "modif": [440, 443, 451, 454, 468, 487, 490, 497, 501, 504, 510, 521, 549, 561, 577, 579, 585, 593, 594, 614, 615, 625, 644], "modifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 42, 43, 44, 45, 76, 106, 132, 161, 190, 209, 220, 222, 228, 229, 230, 260, 287, 288, 292, 293, 297, 298, 299, 300, 307, 318, 319, 320, 321, 338, 373, 374, 375, 407, 457, 459, 557, 566], "modified": [441, 443, 451, 457, 459, 468, 487, 497, 501, 530, 546, 549, 571, 574, 578, 579, 583, 593, 598, 615, 621, 625, 639], "modifier0": [437, 440], "modifier1": [437, 440], "modify": [443, 444, 451, 455, 501, 505, 511, 512, 523, 527, 543, 546, 548, 549, 551, 560, 562, 564, 577, 585, 593, 594, 598, 601, 608, 614, 615, 617, 621, 642, 653], "modifying": [455, 456, 459, 468, 549, 551, 564, 578, 579, 581, 607, 615], "modindic": 567, "modinfo": 567, "modinfosiz": 567, "modistream": 570, "modr": 457, "modref": [443, 444, 603], "modrefresult": 443, "modrefval": 603, "modul": [443, 447, 451, 455, 457, 459, 463, 464, 470, 476, 485, 499, 514, 516, 518, 521, 542, 550, 551, 552, 554, 561, 562, 563, 564, 575, 583, 587, 593, 596, 597, 598, 601, 607, 608, 609, 611, 614, 617, 621, 623, 624, 625, 638, 639, 640, 641, 642, 644, 649, 650, 651, 652, 653], "modular": [443, 499, 548, 563, 582, 594, 615], "modularity": [534, 582], "modulariz": 452, "modulehandl": 623, "modulehandlet": 623, "moduleid": [609, 638, 649], "moduleindex": 567, "modulelevelpass": 615, "modulenam": 567, "modulepass": [443, 564], "modulepath": 563, "modulesummaryindex": 549, "modulesymstream": 567, "modulo": [457, 549, 593], "molesting": 549, "moment": [485, 505, 518, 549, 555, 598, 623, 649], "monitor": 581, "monitored": 549, "monitoring": [443, 607], "monolithic": [509, 581, 582, 592], "monorepo": 615, "monospac": [556, 595], "monotonic": [440, 549], "monotonically": [542, 581], "month": [509, 520, 542, 551], "mor": [127, 436, 437, 438, 439, 440, 443, 444, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 464, 465, 468, 470, 473, 478, 479, 484, 485, 489, 490, 492, 493, 496, 499, 501, 502, 505, 506, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 521, 523, 524, 526, 528, 529, 530, 532, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 552, 555, 556, 557, 558, 560, 561, 562, 563, 567, 571, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 607, 609, 610, 611, 613, 614, 615, 617, 618, 619, 621, 622, 623, 636, 637, 638, 639, 640, 641, 642, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "moreelements": 529, "moreelementsfor": 529, "moreelementstonextmultipl": 529, "moreelementstonextpow2": 529, "moreov": [439, 457, 549, 577, 582], "most": [437, 440, 441, 442, 443, 444, 446, 450, 452, 453, 455, 456, 457, 459, 460, 464, 470, 472, 485, 487, 489, 494, 497, 499, 500, 501, 502, 504, 505, 507, 508, 509, 511, 512, 514, 516, 517, 518, 519, 520, 521, 524, 527, 529, 532, 536, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 551, 554, 556, 557, 558, 559, 560, 561, 562, 563, 567, 574, 576, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 591, 593, 594, 595, 596, 598, 599, 601, 604, 605, 607, 608, 610, 614, 615, 617, 618, 622, 637, 638, 639, 640, 641, 642, 644, 645, 648, 649, 651, 652, 653, 654], "mostly": [444, 457, 485, 501, 502, 521, 532, 550, 560, 561, 577, 593, 598, 607, 614, 618, 640, 644, 645, 651, 654], "motion": [443, 521, 549, 550, 560, 615], "motiv": [546, 622, 640, 651], "motivat": [640, 651], "motivated": [549, 587, 596], "motivating": [558, 642, 653], "motohiro": 457, "mount": [445, 510, 521], "mous": 617, "mov": [440, 443, 444, 445, 455, 457, 459, 460, 468, 505, 509, 513, 517, 518, 520, 521, 532, 542, 549, 562, 563, 577, 579, 585, 587, 593, 594, 596, 598, 602, 605, 615, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 651, 654], "mov32mr": 555, "mov32r": [457, 555], "mov32r0": 593, "mov32rm": [555, 593], "mov64r": [555, 614], "mov64rm": 555, "movabsq": [592, 596], "movapd": 460, "moved": [440, 443, 444, 445, 450, 457, 460, 468, 485, 509, 549, 577, 579, 581, 585, 593, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635], "movhpd": 460, "moving": [440, 455, 468, 517, 520, 577, 585, 593], "movl": [460, 549, 594, 596, 598], "movnt": 549, "movq": [594, 596, 598], "movsd": 460, "movslq": 596, "movsq": 457, "movsx": 457, "movsx16rm8w": 457, "movsx16rr8w": 457, "movsx32rm16": 457, "movsx32rr16": 457, "movsx32rr8": 457, "movsx64rr16": 457, "movsx64rr32": [457, 479, 593], "movsx64rr8": 457, "movt": 513, "movw": [513, 549], "movz": [446, 549], "mozill": 584, "mppassmanag": 617, "mpref": 587, "mpx": 587, "mr": 603, "mrecord": 587, "mri": [457, 524, 584], "mrm0m": 614, "mrm0r": 614, "mrm1m": 614, "mrm1r": 614, "mrm2m": [603, 614], "mrm2r": [603, 614], "mrm3m": 614, "mrm3r": 614, "mrm4m": 614, "mrm4r": 614, "mrm5m": 614, "mrm5r": 614, "mrm6m": 614, "mrm6r": 614, "mrm7m": 614, "mrm7r": 614, "mrmdestmem": 614, "mrmdestreg": [605, 614], "mrminitreg": 614, "mrmsrcmem": 614, "mrmsrcreg": 614, "mrt": [85, 173, 270, 417], "mrtz": [76, 85, 161, 173, 260, 270, 407, 417], "ms_abi_tripl": 609, "msa": [524, 529, 549], "msan": 551, "msb": [439, 457, 618], "msb_extract": 549, "msbuild": [455, 523], "msdn": [459, 481, 594], "msec": 613, "msf": [567, 572], "msg": [0, 1, 2, 3, 549], "msg_g": [46, 133, 231, 376], "msg_get_doorbel": [46, 376], "msg_gs_alloc_req": [46, 376], "msg_gs_don": [46, 133, 231, 376], "msg_interrupt": [46, 133, 231, 376, 440], "msg_sysmsg": [46, 133, 231, 376], "msgpack": 440, "msp430": [457, 521, 549], "mspdb": 567, "mspdbsrv": 567, "mspdbxxxx": 567, "msr": 594, "msse4": 591, "msvc": [455, 457, 459, 511, 513, 549, 567, 579, 593, 594], "mte": [549, 559], "mthumb": 540, "mtripl": [460, 465, 466, 485, 517, 549, 555, 593], "mtun": 587, "mtyp": 440, "mu": 581, "much": [440, 443, 444, 445, 451, 452, 453, 457, 459, 470, 481, 489, 501, 502, 509, 510, 512, 514, 516, 521, 526, 529, 535, 537, 539, 541, 543, 544, 547, 549, 552, 556, 559, 560, 562, 563, 564, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 588, 590, 593, 594, 595, 596, 598, 599, 604, 605, 609, 614, 615, 616, 617, 619, 622, 637, 638, 639, 642, 645, 648, 649, 650, 653, 654], "mul": [438, 460, 519, 562, 577, 593, 603, 604, 638, 649], "mul_r": 603, "mul_rr": 603, "mullin": 440, "mult": [438, 440, 459, 492, 501, 510, 534, 551, 575, 579, 603, 620], "multhreading": 579, "multi_val": 501, "multiarch": [540, 541], "multicl": [603, 604, 605], "multiclass": [605, 614], "multiclassid": 604, "multiclassobject": 604, "multicor": 444, "multidef": 603, "multidimensional": 549, "multilib": [510, 541], "multilin": [464, 603, 604], "multimap": 579, "multipl": [439, 440, 441, 443, 444, 445, 447, 448, 452, 456, 457, 459, 460, 462, 473, 475, 478, 480, 485, 486, 487, 497, 498, 501, 502, 504, 506, 508, 509, 513, 516, 519, 521, 525, 526, 529, 532, 537, 543, 547, 548, 549, 551, 553, 554, 555, 560, 561, 563, 567, 575, 577, 578, 580, 585, 587, 589, 593, 594, 596, 598, 599, 601, 603, 604, 605, 607, 609, 610, 611, 613, 614, 615, 616, 617, 619, 637, 638, 639, 640, 641, 644, 648, 649, 650, 651, 652], "multipli": 485, "multiplicand": 549, "multiplied": [440, 490], "multiply": [438, 457, 485, 490, 502, 512, 525, 550, 593], "multiplying": [448, 549, 594], "multiprocessor": [518, 615], "multirepo": 581, "multiset": 579, "multisourc": [509, 544, 583, 593, 607, 608], "multithreaded": [518, 579, 617], "multithreading": 579, "multivalu": 587, "multmp": [638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "multmp1": [638, 649], "multmp2": [638, 649], "multmp3": [638, 649], "multmp4": [639, 650], "mummergpu": 583, "mung": [519, 577], "munger_struct": 519, "musl": 551, "must": [8, 16, 33, 34, 40, 41, 46, 50, 52, 56, 57, 70, 76, 87, 89, 103, 106, 113, 125, 126, 130, 131, 133, 136, 150, 161, 175, 189, 190, 197, 218, 219, 225, 226, 227, 231, 235, 237, 253, 260, 272, 286, 307, 317, 323, 326, 338, 346, 363, 364, 370, 371, 372, 376, 380, 382, 386, 387, 400, 407, 419, 421, 435, 438, 439, 440, 441, 442, 444, 446, 447, 455, 457, 459, 460, 464, 468, 473, 479, 485, 487, 502, 505, 509, 511, 512, 513, 514, 517, 518, 519, 521, 524, 525, 529, 530, 536, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 571, 572, 577, 578, 579, 580, 581, 584, 585, 588, 591, 593, 594, 595, 596, 598, 599, 601, 603, 604, 605, 608, 609, 610, 611, 614, 615, 618, 619, 621, 622, 638, 639, 640, 641, 642, 643, 644, 649, 651, 652, 653], "mustali": [443, 549], "mustquot": 619, "musttail": 549, "mutabl": [549, 640, 641, 643, 644, 646, 647, 651, 652, 655], "mutat": [441, 517, 551, 577, 579, 622, 641, 643, 644, 652], "mutated": [459, 622], "mutatestrictfptofp": 441, "mutating": [459, 527, 642, 653], "mutator": [518, 579], "mutex": [444, 621], "mutually": [483, 501, 598, 636, 647, 649], "mv": 521, "mve": 587, "mvt": [457, 524, 614], "mxnack": 440, "my": [443, 509, 518, 521, 562, 581, 607, 615, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653, 655], "my86_64flag": 619, "my86flag": 619, "my_addit": 593, "my_build_d": 589, "my_fil": 564, "my_fmad": 562, "my_funct": 562, "my_function_fast": 562, "my_function_precis": 562, "my_fuzz": 551, "my_gwp_asan_error": 536, "my_kernel": 562, "my_key": 459, "my_list": 456, "my_list_of_number": 456, "my_local_branch": 581, "my_local_tag": 581, "my_opt_diff": 589, "my_opt_yaml1": 589, "my_opt_yaml2": 589, "my_other_fil": 564, "my_project": 581, "my_string": 456, "my_valu": 459, "my_yaml_fil": 589, "myalloc": 505, "myapp": 563, "myawesomeproject": 549, "mybarflag": 619, "mybison": 608, "myblock": 555, "myboolean": 593, "mybranch": 581, "mybuildd": 455, "mycustomtyp": 619, "mydevic": 607, "mydoclist": 619, "mydoclisttyp": 619, "mydoctyp": 619, "myflag": 619, "myfoobar": 579, "myfooflag": 619, "myfunct": 562, "mygc": 518, "mygcprint": 518, "myglobal": 593, "myinitprng": 551, "mylist": 619, "mylistel": 619, "mymachinefunctionpass": 564, "mymaptyp": 619, "mynewpass": 461, "myobject": 593, "myocamlbuild": [649, 650, 651, 652, 653], "myocyt": 583, "myownp3set": 593, "mypass": [528, 579, 615], "mypassnam": 579, "mypassopt": 615, "mypatch": 578, "myproj": 581, "myregalloc": 615, "myregisterallocator": 615, "myremot": 625, "myrepo": 581, "myseq": 619, "myseqel": 619, "myservert": 625, "myset": 459, "mystery": 519, "mystical": [645, 654], "mystringtyp": 619, "mystruct": 519, "mytarget": 551, "mytyp": 549, "mytype1": 619, "mytype2": 619, "myvar": 519, "n1": [445, 581, 587, 614], "n16": 562, "n2": [445, 593, 614], "n32": 549, "n4absl11string_view": 475, "n8": 549, "n_bucket": 593, "n_hash": 593, "n_stab": 486, "na": 457, "nab": 583, "nadditional": 501, "nail": [640, 651], "naiv": [479, 577], "naively": 594, "nakatan": 457, "naked": [447, 549], "nam": [40, 46, 130, 133, 225, 231, 370, 376, 436, 439, 441, 442, 444, 447, 449, 451, 452, 453, 455, 456, 457, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 482, 485, 486, 487, 488, 489, 490, 492, 493, 496, 497, 498, 500, 501, 502, 505, 506, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 523, 525, 537, 539, 541, 542, 543, 546, 548, 550, 551, 552, 555, 556, 557, 561, 562, 563, 564, 565, 567, 572, 575, 578, 579, 580, 581, 587, 588, 589, 590, 591, 596, 598, 601, 603, 604, 605, 608, 609, 611, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654, 656], "name1": 603, "name2": 603, "name3": 603, "named": [439, 444, 447, 455, 456, 459, 466, 473, 477, 480, 485, 486, 487, 488, 497, 507, 513, 515, 530, 548, 555, 561, 562, 575, 579, 580, 589, 596, 598, 599, 601, 603, 605, 608, 611, 614, 615, 616, 619, 621, 636, 638, 642, 647, 649, 650, 651, 652, 653], "named_valu": [649, 650, 651, 652, 653], "namedindex": 614, "namedvalu": [638, 639, 640, 641, 642, 643, 644], "namedvar": 644, "nameflag": 593, "namely": [505, 508, 509, 549, 561], "namesbuff": 567, "namespac": [447, 455, 478, 501, 502, 510, 518, 549, 579, 593, 605, 614, 615, 617, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "naming": [442, 459, 473, 543, 579, 584, 614], "nan": [439, 440, 465, 466, 525, 549, 593], "nand": 549, "nandakumar": 533, "nano": 440, "narrow": [443, 444, 451, 452, 461, 512, 519, 525, 544, 551, 579, 594], "narrowaddr": 549, "narrowcharact": 574, "narrowing": [444, 521, 529, 593], "narrowscalar": 529, "narrowscalarfor": 529, "narrowscalarforcartesianproduct": 529, "narrowscalarfortypeswithmemsiz": 529, "national": 458, "nativ": [437, 440, 444, 451, 453, 455, 456, 461, 465, 468, 472, 510, 511, 514, 521, 523, 535, 541, 544, 548, 549, 552, 562, 581, 587, 593, 596, 614, 619, 621, 622, 623, 624, 625, 638, 639, 640, 641, 642, 643, 644, 645, 649, 650, 651, 652, 653, 654], "natively": [444, 457, 512, 516, 519, 549, 581, 614, 619, 645, 654], "nativeptrt": 625, "natur": [490, 509, 511, 518, 574, 579, 588, 593, 599], "natural": [459, 460, 516, 519, 521, 543, 549, 552, 556, 579, 582, 584, 594, 595, 603, 615, 619, 638, 649], "naturally": [444, 459, 501, 508, 518, 579, 581, 640, 642, 651, 653], "natv": 575, "naveen": 577, "navigat": [501, 548, 578], "navigating": 617, "na\u00efv": 584, "nbsp": 457, "nc": 440, "nc_nv": 440, "ncsa": 509, "nctaid": 562, "nd": 614, "ndebug": [455, 501, 576], "near": [460, 516, 520, 574, 594, 598, 644], "near16": 566, "near32": 566, "near64": 566, "nearby": [515, 558], "nearbyint": 613, "nearest": [506, 525, 536, 549, 560, 644], "nearpoint": 574, "nearpointer128": 574, "nearpointer32": 574, "nearpointer64": 574, "neat": 622, "neatly": 622, "necessarily": [459, 466, 502, 514, 519, 521, 529, 549, 565, 571, 575, 579, 588, 591, 593, 594, 598, 618, 644], "necessary": [440, 443, 444, 446, 448, 455, 457, 459, 460, 473, 501, 505, 506, 507, 509, 511, 512, 516, 518, 521, 524, 527, 529, 532, 539, 540, 541, 542, 544, 545, 549, 550, 551, 552, 554, 555, 556, 572, 574, 575, 578, 579, 582, 584, 591, 593, 594, 595, 596, 598, 599, 601, 603, 607, 609, 611, 612, 614, 615, 617, 638, 643, 644, 646], "need": [440, 441, 443, 444, 446, 447, 448, 449, 450, 451, 453, 455, 457, 459, 460, 468, 471, 473, 479, 500, 501, 502, 505, 507, 509, 510, 511, 512, 514, 515, 516, 517, 518, 520, 521, 523, 524, 526, 527, 529, 530, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 555, 556, 557, 559, 560, 561, 562, 563, 565, 567, 571, 572, 579, 580, 581, 582, 585, 587, 588, 590, 592, 593, 594, 595, 596, 598, 599, 601, 603, 604, 605, 607, 608, 609, 611, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "needed": [439, 440, 441, 442, 449, 455, 456, 457, 459, 460, 465, 466, 472, 492, 493, 499, 501, 505, 509, 513, 514, 515, 518, 519, 521, 523, 535, 540, 542, 543, 549, 552, 560, 563, 577, 578, 579, 587, 588, 590, 592, 593, 596, 598, 599, 601, 603, 604, 605, 609, 614, 615, 619, 621, 622, 623, 624, 625, 636, 637, 641, 642, 644, 647, 648, 651, 653], "needing": [440, 453, 524, 549, 561, 614, 644], "needstub": 614, "neelakantam": 577, "neg": [43, 45, 132, 228, 230, 288, 293, 298, 300, 319, 321, 373, 375, 549], "neg_h": [0, 3, 6, 7], "neg_lo": [0, 3, 6, 7], "negat": [438, 439, 440, 447, 457, 459, 460, 505, 509, 511, 516, 524, 525, 549, 555, 585, 591, 593, 594, 603, 614, 641, 652], "negated": [447, 487, 497, 549], "negatively": 485, "negeightkind": 549, "neglected": 608, "negligibl": [515, 551], "neighboring": 438, "neighbour": 479, "neith": [443, 446, 447, 459, 498, 511, 516, 523, 549, 551, 561, 567, 577, 596], "nekbon": 583, "nemanj": 584, "neon": [457, 503, 524, 529, 541, 549, 601, 612], "neovers": 587, "ness": 452, "nest": [443, 447, 459, 511, 518, 549, 579, 585, 610, 614, 615], "nestabl": [603, 604], "nested": [440, 447, 455, 456, 457, 459, 464, 508, 511, 549, 553, 556, 564, 567, 579, 581, 585, 594, 603, 615, 637, 640, 648, 651], "nesting": [459, 485, 511, 548, 613], "net": [504, 515, 520, 537, 542, 583, 594], "netbsd": [521, 616], "netinet": 625, "network": [457, 551, 579], "neumann": 549, "neural": 608, "nev": [440, 443, 444, 446, 453, 457, 459, 460, 468, 473, 485, 502, 505, 506, 510, 514, 515, 518, 519, 524, 534, 535, 543, 549, 552, 561, 563, 564, 565, 566, 572, 577, 579, 581, 589, 593, 594, 601, 604, 610, 614, 615, 616, 617, 619, 621, 623, 645, 650, 654], "never_instru": 616, "never_instrumented": 616, "nevertheless": 459, "new": [440, 441, 442, 444, 447, 450, 451, 452, 453, 455, 456, 457, 459, 460, 461, 464, 468, 471, 479, 487, 499, 501, 502, 504, 507, 510, 516, 517, 518, 520, 521, 522, 523, 525, 530, 534, 535, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 571, 574, 578, 581, 583, 584, 585, 586, 587, 589, 591, 592, 594, 596, 598, 599, 601, 603, 604, 607, 610, 612, 614, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 643, 644, 645, 648, 649, 650, 651, 652, 654], "new_cond": 549, "new_corpus_d": 551, "new_else_bb": [651, 652, 653], "new_guard_cond": 549, "new_potentially_interesting_inputs_d": 551, "new_then_bb": [651, 652, 653], "newabbrevlen": 447, "newaddr": 525, "newcomer": [602, 605, 642, 653], "newest": [513, 639], "newinst": 579, "newlin": [447, 459, 464, 473, 490, 641, 652], "newly": [450, 459, 525, 535, 551, 563, 577, 579, 584, 598, 622, 638, 639, 640, 641, 644, 649, 650, 651, 652], "newoffset": 549, "newptr": 549, "newptr2": 549, "newsockfd": 625, "newsroom": 594, "newtoset": 459, "newty": 549, "newversionformat": 567, "next": [438, 440, 442, 447, 450, 451, 459, 485, 487, 497, 501, 505, 509, 511, 518, 519, 521, 523, 529, 534, 539, 542, 543, 546, 549, 552, 554, 558, 561, 564, 565, 571, 579, 585, 588, 593, 594, 604, 609, 611, 614, 615, 621, 622, 623, 624, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "next_prec": [648, 649, 650, 651, 652, 653], "next_var": [651, 652, 653], "nextindvar": 549, "nextprec": [637, 638, 639, 640, 641, 642, 643, 644], "nextvar": [640, 641, 642, 643, 644, 651, 652, 653], "nextvari": [640, 641], "nfc": [509, 550], "ni": 549, "nic": [460, 501, 521, 524, 539, 560, 577, 579, 603, 615, 619, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "nicely": [639, 650], "nicknam": 590, "nicol": 584, "nifty": [615, 640, 645, 651, 654], "nightly": [509, 520, 542, 608, 609], "ninf": 549, "ninj": [442, 453, 455, 521, 527, 538, 539, 540, 541, 551, 578, 581, 583, 607, 617], "niveau": 620, "nm": [463, 474, 488, 492, 493, 535, 540], "nmak": 455, "nn": 583, "nnan": 549, "nnn": 521, "nnnnnn": [450, 457], "no": [202, 204, 205, 209, 213, 215, 216, 220, 222, 437, 438, 440, 444, 446, 447, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 468, 472, 473, 474, 475, 476, 478, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 501, 502, 504, 505, 506, 507, 508, 509, 511, 513, 514, 516, 518, 519, 520, 521, 524, 525, 526, 527, 529, 530, 539, 542, 543, 545, 547, 548, 549, 550, 551, 553, 555, 556, 559, 560, 563, 564, 565, 567, 569, 572, 574, 579, 580, 581, 582, 583, 585, 587, 588, 590, 593, 594, 596, 598, 601, 603, 604, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 618, 622, 623, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "no_dead_strip": 549, "no_switch": 613, "no_turbo": 445, "noali": [443, 447, 485, 505, 516, 519, 560], "nobody": 583, "nobuiltin": [447, 549], "nocaptur": [447, 549, 577], "nocf_check": [447, 549], "nocheck": 587, "nod": [443, 448, 449, 457, 470, 508, 511, 515, 525, 543, 550, 560, 561, 562, 579, 585, 586, 593, 598, 601, 603, 610, 611, 613, 614, 615, 619, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "nodebuginfo": 501, "nodefinit": 589, "nodetail": 470, "nodetyp": [441, 614], "noduplicat": [447, 549], "noencod": 457, "noexcept": 511, "nofre": 549, "nohup": 588, "noimm": 605, "noimplicitfloat": [447, 549], "noinlin": [447, 507, 545, 549, 589], "nois": 445, "noisy": [509, 577, 579], "noitin": 466, "noitinerar": [605, 614], "noitinerary": [605, 614], "nolink": 501, "noload": 487, "nologo": 481, "nom": [40, 130, 225, 370, 440, 575, 593], "nombr": 130, "nomenclatur": 442, "nomodref": 443, "non": [8, 106, 190, 307, 338, 438, 439, 441, 443, 444, 445, 447, 451, 453, 454, 455, 456, 457, 460, 461, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 480, 482, 483, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 509, 511, 512, 515, 516, 519, 520, 521, 524, 525, 526, 529, 535, 538, 539, 540, 543, 544, 546, 547, 551, 552, 553, 554, 555, 558, 559, 561, 562, 563, 564, 566, 567, 572, 574, 579, 581, 582, 584, 588, 589, 593, 594, 596, 599, 603, 604, 609, 610, 611, 614, 615, 618, 619, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "non_recurs": 593, "nonatomic": 593, "nondot": 450, "nonempty": 549, "nonetheless": [549, 622, 623, 624, 625], "nongnu": 583, "nonintuit": 612, "nonlazybind": [447, 549], "nonneg": 549, "nonnull": [447, 511, 516, 549], "nonsens": [556, 595, 642, 653], "nonstop": 617, "nonstop_tsc": 618, "nontemplated": 501, "nontemporal": [440, 549], "nonzero": [447, 452, 603], "noop": 549, "nop": [513, 549, 596, 598, 616], "nor": [447, 457, 511, 514, 518, 519, 523, 549, 551, 561, 567, 577, 596, 599], "norecurs": [447, 549], "noredzon": [447, 549], "noreg": [555, 593], "noreturn": [447, 516, 549], "norm": 590, "normal": [440, 444, 446, 447, 455, 457, 459, 460, 486, 487, 492, 493, 501, 502, 509, 511, 515, 516, 518, 521, 524, 525, 536, 542, 549, 552, 557, 563, 566, 579, 582, 592, 594, 596, 598, 599, 603, 611, 615, 641, 652], "normalformatting": 501, "normaliz": 609, "normalized": [438, 619], "normalizedpolar": 619, "normalizing": 619, "normally": [437, 444, 447, 457, 464, 468, 469, 473, 477, 480, 482, 489, 499, 505, 509, 510, 516, 539, 542, 549, 564, 578, 593, 594, 596, 601, 613, 617], "norman": 457, "normat": [603, 604], "northern": 440, "northov": 533, "nosync": 549, "not": [11, 21, 22, 32, 46, 56, 57, 76, 88, 89, 103, 109, 118, 119, 124, 133, 161, 189, 193, 206, 207, 209, 217, 220, 222, 231, 260, 286, 326, 332, 341, 351, 352, 362, 376, 386, 387, 407, 420, 421, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481, 485, 486, 487, 488, 489, 490, 492, 493, 494, 497, 498, 499, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "not_found": [648, 649, 650, 651, 652, 653], "not_inline_hd": 502, "not_mangled": 474, "not_null": 515, "notabl": [455, 457, 529, 558], "notably": [502, 512, 519, 536, 539, 549, 579, 593, 594], "notail": 549, "notat": [438, 439, 440, 501, 549, 603, 619], "noted": [454, 529, 530, 598, 621], "noteligibletoimport": 549, "notext": 587, "notfp": 603, "nothidden": 501, "nothing": [85, 173, 270, 417, 440, 457, 460, 505, 509, 518, 519, 529, 542, 549, 563, 577, 579, 581, 590, 599, 609, 615, 642, 647, 653], "nothrow": 444, "notic": [455, 456, 457, 508, 509, 514, 543, 561, 638, 642, 649, 653], "notice": 516, "noticed": [562, 579], "noticing": [502, 519], "notif": [443, 537, 563, 578], "notified": [485, 542], "notify": [440, 450, 537, 563, 590, 613], "notifying": 443, "noting": [452, 453, 516, 579], "notion": [457, 509, 549, 565, 593, 615, 639, 640, 650, 651], "notional": 543, "notionally": 459, "notorious": 599, "nottranslated": 574, "notw": 460, "notwithstanding": 509, "notypemerg": 572, "noun": [459, 584], "nounwind": [447, 460, 511, 516, 549, 562, 593, 609, 611], "nouveau": 620, "novel": [518, 549, 579], "novic": 455, "now": [451, 455, 457, 458, 459, 460, 464, 501, 502, 509, 510, 511, 512, 521, 524, 539, 541, 542, 543, 547, 549, 551, 555, 560, 561, 562, 563, 571, 574, 578, 579, 581, 583, 587, 591, 593, 594, 596, 598, 606, 608, 611, 615, 617, 619, 621, 622, 623, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654], "nowaday": [541, 581], "nozero": 466, "npb": 583, "npb3": 583, "nproc": 521, "nsa": [11, 439], "nsstring": 593, "nsw": [505, 509, 516, 519, 549], "nsz": 549, "nt": [468, 541, 588], "nt_amd_amdgpu_hsa_metadat": 440, "nt_amd_amdgpu_metadat": 440, "nt_amdgpu_metadat": 440, "nth": [459, 473], "ntid": 562, "ntohl": 457, "ntradbigmip": 487, "ntradlittlemip": 487, "nuanceur": 130, "nuisanc": 509, "nul": [579, 641, 652], "null": [26, 47, 48, 49, 56, 57, 60, 64, 65, 77, 78, 79, 85, 173, 270, 417, 440, 443, 447, 457, 459, 465, 466, 505, 511, 513, 515, 516, 536, 549, 555, 561, 562, 563, 564, 567, 572, 577, 579, 587, 589, 593, 596, 598, 601, 614, 615, 619, 622, 637, 638, 639, 640, 641, 642, 643, 644, 651], "nullary": [637, 648], "nullpointerexcept": 515, "nullptr": [459, 549, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "nullptr_t": 574, "nullunknown": 549, "num": [439, 440, 460, 462, 464, 473, 479, 490, 518, 549, 581, 598, 614], "num_repetit": 479, "numabbrevop": 447, "numarg": [596, 644], "numb": [46, 52, 76, 103, 133, 161, 189, 231, 237, 260, 286, 376, 382, 407, 435, 438, 439, 443, 444, 446, 448, 449, 450, 451, 455, 456, 457, 459, 460, 462, 464, 468, 470, 472, 473, 478, 479, 483, 484, 485, 487, 489, 490, 496, 497, 498, 500, 502, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 524, 525, 529, 536, 538, 541, 542, 545, 548, 549, 551, 552, 553, 555, 560, 561, 563, 566, 567, 569, 571, 572, 574, 575, 577, 578, 579, 580, 581, 585, 587, 589, 592, 593, 594, 596, 598, 603, 604, 605, 608, 609, 610, 613, 614, 616, 618, 619, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "number": [40, 46, 133, 225, 231, 370, 376, 438, 440, 457, 460, 470, 485, 488, 501, 502, 506, 507, 525, 542, 549, 551, 555, 561, 576, 578, 593, 601, 609, 613, 614, 618, 636, 645, 647, 654], "number1": 561, "number2": 561, "numbered": [440, 447, 485, 514, 549, 556, 579, 595], "numberexpr": [637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "numberexprast": [637, 638, 639, 640, 641, 642, 643, 644], "numbering": [457, 549, 550, 560, 564, 615], "numberofauxsymbol": 656, "numberofcpucor": 551, "numbit": 579, "numblock": 571, "numbyt": 596, "numconst": 596, "numdirectorybyt": 571, "numel": 549, "numelt": 447, "numeltsparam": [447, 549], "numentr": 447, "numentry": 447, "numer": 130, "numeric": [40, 46, 133, 225, 231, 370, 376, 438, 451, 485, 486, 488, 501, 523, 549, 555, 574, 575, 579, 587, 601, 604, 614, 616, 618, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "numerical": 549, "numerical_limit": 594, "numerous": [452, 516, 579, 602, 605, 614], "numexpress": 506, "numfaultingpc": 515, "numfilenam": 506, "numfunct": [515, 596], "numfunctionsinmodul": 563, "numhashbucket": 574, "numindic": 506, "numlin": 506, "numliveout": 596, "numloc": 596, "nummember": 579, "nummet": 518, "nummodul": 567, "nummodulevalu": 447, "numop": [447, 614], "numpoint": 479, "numrecord": 596, "numreg": 506, "numregionarray": 506, "numroot": 518, "numsgpr": 440, "numshadowbyt": 596, "numsourcefil": 567, "numspilledsgpr": 440, "numspilledvgpr": 440, "numstr": [636, 637, 638, 639, 640, 641, 642, 643, 644], "numstream": 571, "numthread": 563, "numval": [636, 637, 638, 639, 640, 641, 642, 643, 644], "numvar": 460, "numvgpr": 440, "numword": 589, "numxform": 579, "nutshel": 579, "nuw": [516, 549], "nuzman": [585, 613], "nval": 549, "nvcall": 454, "nvcc": 457, "nvcl": 562, "nvidi": [457, 502, 510, 562], "nvptx": [521, 549, 584, 612], "nvptx64": 562, "nvt": 614, "nvvm": 549, "nvvmreflect": 562, "nw": 583, "o": [440, 443, 445, 447, 459, 460, 462, 465, 468, 469, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 490, 494, 495, 496, 497, 499, 500, 501, 502, 503, 506, 513, 521, 523, 530, 535, 544, 549, 551, 552, 555, 562, 563, 564, 565, 574, 577, 579, 580, 586, 587, 589, 591, 607, 609, 614, 615, 617, 621, 622, 623, 624, 625, 638, 639, 640, 641, 642, 643, 644, 646, 650, 651, 652, 653], "o0": [465, 473, 501, 507, 517, 526, 532, 544, 593, 610, 614, 654], "o1": [465, 501, 532, 544, 551, 614], "o2": [443, 444, 453, 465, 485, 498, 501, 516, 517, 521, 549, 562, 564, 576, 591, 593, 614], "o3": [453, 465, 501, 516, 517, 521, 544, 562, 593, 607, 613, 614, 617, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "o4": 614, "o5": 614, "o6": 614, "o7": 614, "obey": 549, "obit": 549, "obj": [465, 472, 494, 498, 511, 518, 523, 549, 588, 593, 598, 607, 608], "obj_root": 521, "objc": [478, 488, 556, 593, 595, 612], "objc_autoreleas": 549, "objc_autoreleasepoolpop": 549, "objc_autoreleasepoolpush": 549, "objc_autoreleasereturnvalu": 549, "objc_copyweak": 549, "objc_destroyweak": 549, "objc_initweak": 549, "objc_loadweak": 549, "objc_loadweakretained": 549, "objc_moveweak": 549, "objc_property": 593, "objc_releas": 549, "objc_retain": 549, "objc_retainautoreleas": 549, "objc_retainautoreleasedreturnvalu": 549, "objc_retainautoreleasereturnvalu": 549, "objc_retainblock": 549, "objc_storestrong": 549, "objc_storeweak": 549, "objcopy": [463, 497], "objdump": [463, 486, 492, 493, 587, 617], "object": [443, 444, 446, 451, 453, 457, 459, 461, 462, 463, 464, 465, 466, 468, 472, 473, 478, 479, 481, 483, 489, 496, 498, 499, 501, 503, 505, 506, 507, 509, 511, 513, 514, 515, 517, 518, 523, 524, 525, 527, 535, 540, 541, 543, 544, 545, 547, 550, 551, 552, 555, 561, 562, 563, 564, 566, 567, 570, 572, 574, 575, 581, 587, 591, 594, 596, 599, 601, 603, 604, 607, 608, 611, 614, 615, 618, 619, 621, 622, 637, 638, 640, 642, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 656], "object_addr": 518, "object_error": 579, "objectbody": 604, "objectbuff": 554, "objectbufferstream": 554, "objectcach": 554, "objectfil": 554, "objectimag": 554, "objectivec": 549, "objectlai": [621, 622, 623, 624, 625], "objectlinkinglai": 622, "objfilenam": 567, "objlinkinglai": 563, "objptr": 549, "oblivious": 446, "obscur": [549, 579], "observ": [457, 459, 549, 593, 594, 598, 617, 645, 654], "observably": 598, "observed": [444, 485, 549, 551, 566, 567, 570, 572, 574], "obsolet": [450, 566, 587], "obstacl": 584, "obtain": [440, 452, 457, 502, 505, 506, 527, 549, 579, 599, 614, 617, 618, 639], "obtained": [440, 506, 544, 554, 559, 560, 563, 567, 577, 579, 603, 618], "obtaining": [521, 540, 553, 579], "obtus": 519, "obviat": 580, "obvious": [443, 444, 446, 451, 457, 459, 508, 509, 514, 549, 561, 572, 577, 581, 591, 593, 594, 596, 601, 637, 639, 641, 645, 650, 652, 654], "obviously": [443, 457, 501, 509, 512, 519, 542, 549, 561, 567, 577, 579, 588, 603, 615, 637, 647, 648], "ocaml": [455, 647, 648, 649, 650, 651, 652, 653], "ocaml_lib": [649, 650, 651, 652, 653], "ocamlbuild": [648, 649, 650, 651, 652, 653], "ocamlbuild_plugin": [649, 650, 651, 652, 653], "ocamldoc": 455, "occas": [459, 569], "occasionally": [447, 502, 518, 526, 574], "occup": [21, 22, 23, 24, 35, 36, 37, 118, 119, 120, 127, 128, 206, 207, 208, 209, 220, 221, 222, 351, 352, 353, 354, 365, 366, 367, 438, 489, 571], "occupy": 549, "occupying": 440, "occur": [438, 440, 447, 449, 457, 459, 460, 461, 464, 465, 468, 469, 470, 472, 477, 480, 482, 485, 499, 500, 509, 511, 518, 519, 527, 530, 536, 549, 550, 563, 577, 579, 580, 581, 590, 591, 593, 594, 596, 598, 599, 603, 604, 609, 610, 615, 637, 643, 648], "occurred": [440, 544, 549, 590, 591, 593, 594], "occurrent": [447, 460, 524], "occurring": [509, 519, 594], "oct": [494, 559, 581], "octal": [439, 486, 494, 496, 501], "octeon": 587, "octet": 523, "octopus": 581, "odd": [501, 509, 544, 549], "odr": [462, 549], "oeq": 549, "of": [7, 8, 9, 11, 40, 41, 42, 46, 48, 49, 54, 55, 56, 76, 86, 88, 103, 106, 107, 109, 130, 131, 133, 139, 140, 161, 174, 189, 190, 191, 193, 209, 220, 222, 225, 226, 227, 231, 239, 240, 260, 271, 286, 287, 292, 297, 304, 307, 318, 325, 326, 331, 332, 338, 339, 341, 370, 371, 372, 376, 378, 379, 384, 385, 386, 407, 418, 420, 435, 436, 437, 440, 441, 442, 444, 445, 446, 447, 449, 451, 452, 454, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 505, 507, 508, 510, 511, 512, 513, 515, 520, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 534, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 548, 550, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 566, 567, 569, 570, 571, 572, 574, 575, 576, 578, 581, 582, 583, 585, 586, 589, 591, 592, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 616, 617, 618, 620, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 649, 650, 651, 652, 653, 656], "of_channel": [648, 649, 650, 651, 652, 653], "of_list": [648, 649, 650, 651, 652, 653], "of_non": 643, "off": [8, 56, 57, 76, 88, 89, 106, 161, 190, 260, 307, 326, 332, 338, 386, 387, 407, 420, 421, 438, 440, 451, 453, 455, 457, 459, 468, 488, 489, 502, 509, 517, 521, 526, 538, 539, 540, 549, 560, 562, 563, 576, 579, 587, 590, 594, 598, 605, 607, 609, 617, 618, 621, 622, 638, 639, 640, 641, 642, 643, 644, 645, 647, 649, 650, 651, 652, 653, 654], "offen": [0, 1, 2, 3, 7, 8, 106, 190, 307, 338, 440], "offer": [444, 518, 579, 581, 582, 619], "offered": 598, "official": [456, 457, 509, 510, 521, 558, 578, 583, 588, 590, 607, 638], "officially": [502, 535, 542, 561, 575, 642, 653], "offlin": [457, 562], "offload": 591, "offset": [8, 9, 40, 41, 47, 48, 49, 57, 88, 89, 106, 107, 130, 131, 134, 135, 190, 191, 225, 227, 232, 233, 234, 307, 322, 332, 338, 339, 370, 372, 377, 378, 379, 387, 420, 421, 437, 438, 439, 440, 447, 457, 460, 468, 478, 488, 489, 494, 496, 498, 505, 511, 518, 519, 525, 527, 536, 555, 559, 561, 565, 567, 571, 572, 574, 579, 587, 591, 592, 593, 594, 596, 598, 605, 609, 614, 645, 654], "offset0": 440, "offset1": [440, 549], "offset11": 0, "offset12": [0, 1, 2, 3, 7, 88], "offset13": [3, 7, 332, 420], "offset16": [0, 1, 2, 3], "offset2": 549, "offset8": [0, 1, 2, 3], "ofstream": 501, "oftc": [504, 520], "often": [440, 441, 443, 444, 446, 451, 455, 457, 459, 460, 501, 502, 509, 511, 512, 514, 516, 518, 521, 529, 536, 539, 540, 543, 544, 549, 551, 555, 562, 577, 579, 581, 586, 589, 593, 594, 598, 603, 609, 614, 617, 619, 622, 637, 639, 642, 645, 648, 650, 653, 654], "oge": 549, "ogt": 549, "oh": [640, 651], "ok": [438, 439, 451, 459, 502, 509, 530, 538, 549, 551, 561, 579, 638, 640, 649], "okay": [459, 519, 549, 550, 578, 599, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "oland": 440, "old": [443, 444, 450, 460, 473, 487, 507, 509, 518, 521, 545, 549, 566, 574, 575, 579, 581, 584, 587, 589, 593, 607, 610, 642, 643, 644, 645, 653, 654], "old_binding": 653, "old_val": [651, 652, 653], "old_valu": 653, "oldbinding": [642, 643, 644, 653], "older": [440, 444, 485, 501, 503, 509, 516, 518, 521, 529, 538, 551, 557, 614], "oldest": [440, 485, 639], "oldval": [549, 640, 641, 642, 643, 644], "ole": [549, 574], "olt": 549, "omap": 567, "omiss": [509, 549], "omit": [440, 489, 498, 502, 549, 593, 596], "omitted": [436, 437, 440, 457, 465, 469, 470, 475, 477, 480, 485, 486, 490, 492, 493, 499, 549, 551, 563, 589, 611, 637, 640, 648, 651], "omitting": [577, 615], "omod": [0, 1, 2, 3, 6, 7], "omp": [577, 583, 610], "once": [226, 371, 439, 440, 443, 447, 451, 452, 455, 456, 457, 459, 461, 462, 464, 473, 478, 480, 490, 499, 501, 502, 504, 509, 511, 512, 514, 515, 518, 519, 520, 521, 523, 529, 530, 535, 540, 542, 544, 549, 550, 551, 552, 553, 554, 556, 561, 563, 564, 567, 574, 578, 579, 581, 582, 585, 588, 590, 591, 593, 594, 595, 598, 599, 603, 604, 605, 608, 611, 614, 615, 616, 617, 619, 621, 623, 624, 625, 637, 638, 639, 640, 642, 645, 648, 649, 650, 651, 653, 654], "one": [11, 35, 40, 41, 46, 103, 109, 127, 131, 133, 189, 193, 213, 215, 216, 220, 225, 226, 227, 231, 286, 341, 365, 370, 371, 372, 376, 435, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 468, 473, 475, 476, 478, 479, 483, 485, 486, 488, 489, 490, 492, 493, 501, 502, 505, 506, 508, 509, 510, 511, 512, 516, 517, 518, 520, 521, 523, 524, 525, 528, 529, 530, 532, 535, 536, 537, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 574, 575, 578, 579, 580, 581, 582, 583, 584, 585, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 601, 603, 604, 605, 607, 608, 609, 610, 611, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "one_only": 513, "oneargfp": 603, "oneargfprw": 603, "oneormor": 501, "ongoing": [509, 563, 590, 598, 616], "onlin": [440, 445, 455, 456, 642, 653], "only": [8, 33, 34, 40, 46, 48, 49, 50, 52, 106, 125, 126, 133, 136, 190, 218, 219, 225, 226, 231, 235, 237, 307, 317, 323, 338, 363, 364, 370, 371, 376, 378, 379, 380, 382, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 462, 464, 465, 466, 468, 470, 471, 473, 475, 476, 478, 479, 481, 484, 485, 486, 487, 489, 490, 492, 493, 494, 497, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 521, 523, 524, 525, 527, 528, 529, 536, 538, 539, 540, 541, 542, 543, 546, 547, 548, 549, 550, 551, 552, 553, 555, 558, 559, 560, 561, 562, 563, 565, 566, 567, 569, 570, 571, 572, 574, 580, 582, 583, 584, 585, 587, 589, 590, 591, 593, 594, 596, 598, 599, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 623, 636, 637, 638, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "only_ascii": 551, "onlyfailsforsomexvalu": 579, "onlyfailsforsomexvalues2": 579, "onon": 549, "ons": 588, "onto": [440, 457, 509, 518, 531, 542, 549, 579, 593, 611], "ontwo": 549, "onward": [440, 455, 539], "onzero": 549, "oom": 551, "oop": 598, "op": [46, 133, 231, 376, 440, 457, 460, 464, 468, 505, 549, 555, 563, 594, 598, 601, 603, 614, 622, 637, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "op0": [447, 589], "op1": [447, 549, 589], "op2": [549, 589], "op3": [549, 589, 614], "op3val": 614, "op4": 589, "op_begin": 579, "op_end": 579, "op_iterator": 579, "op_sel": [0, 3], "op_sel_h": [0, 3], "opaqu": [446, 447, 513, 524, 563, 577, 579, 598, 622, 638], "opaqued": 549, "opc": [603, 641, 642, 643, 644], "opcod": [11, 86, 109, 174, 193, 271, 304, 331, 341, 418, 438, 440, 444, 457, 459, 479, 485, 529, 534, 543, 546, 549, 555, 561, 579, 585, 587, 603, 605, 614, 637, 638, 641, 642, 643, 644, 648, 649, 652], "opcode_nam": 479, "opcstr": 614, "open": [440, 450, 455, 457, 459, 461, 502, 504, 509, 523, 534, 540, 543, 549, 556, 561, 578, 579, 581, 595, 596, 598, 599, 617, 620, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "openbsd": 616, "opencl": 562, "opened": [459, 520, 603], "openfil": 459, "openfileforwriting": 599, "openformattedfil": 579, "opengl": [645, 654], "opening": [549, 550, 589, 601], "openmp": [440, 455, 460, 509, 581, 584, 610], "openmp4": 585, "openorcreatefileforwriting": 599, "openpow": 503, "opensourc": 551, "openssl": 551, "openwork": 598, "oper": [13, 14, 18, 19, 20, 21, 22, 25, 26, 27, 46, 103, 111, 112, 115, 116, 117, 118, 119, 133, 189, 195, 196, 199, 200, 201, 206, 207, 231, 286, 316, 343, 344, 348, 349, 350, 351, 352, 355, 356, 357, 376, 435, 438, 440, 443, 444, 454, 457, 465, 466, 471, 484, 485, 487, 492, 493, 497, 502, 503, 505, 506, 511, 512, 515, 518, 521, 524, 530, 532, 551, 560, 561, 563, 564, 577, 581, 585, 587, 591, 593, 594, 598, 603, 605, 613, 614, 617, 621, 622, 639, 640, 641, 642, 646, 647, 650, 651, 652, 653], "operand": [8, 9, 10, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 441, 447, 449, 457, 459, 460, 470, 485, 488, 511, 512, 513, 519, 524, 525, 526, 527, 529, 531, 532, 560, 561, 577, 579, 584, 585, 587, 593, 601, 603, 638, 641, 642, 643, 644, 649, 652, 653], "operand0": [437, 440], "operand1": [437, 440], "operand_type_list_end": 614, "operandlist": 603, "operandmap": 614, "operandty": 457, "operandtyp": 614, "operandv": [641, 642, 643, 644], "operat": [437, 438, 439, 444, 452, 454, 457, 502, 506, 515, 519, 534, 549, 579, 603, 604, 613, 614, 615, 619, 639, 650], "operated": [446, 549], "operating": [438, 446, 455, 457, 468, 503, 514, 529, 549, 551, 562, 591, 594, 599, 615, 616, 643, 645, 654], "operating_system": 549, "operatively": 611, "operator": [447, 449, 457, 459, 460, 468, 519, 536, 549, 561, 577, 579, 591, 593, 601, 603, 604, 614, 619, 621, 636, 637, 638, 639, 640, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655], "opnam": 614, "opnod": 614, "opportunit": [534, 563, 581, 587, 613, 614], "opportunity": [442, 453, 505, 508, 516, 530, 549, 563, 577, 582, 584, 622, 639, 650], "oppos": 584, "opposed": [501, 513, 521, 524, 529, 542, 549, 550, 570, 580, 584, 604, 651], "opposing": 584, "opposit": [459, 468, 550, 579, 584, 587, 593, 601, 616, 619], "opreand": 579, "oprofil": [455, 576], "opt": [0, 1, 2, 3, 7, 436, 443, 451, 459, 461, 463, 488, 509, 514, 518, 521, 523, 541, 544, 549, 560, 562, 577, 579, 586, 593, 594, 598, 608, 609, 613, 622, 625, 639, 640, 642, 643, 650, 651, 653], "opt1": 488, "opt2": 488, "opta": 501, "optb": 501, "optbisect": 564, "opted": [444, 518], "optforfuzzing": [447, 549], "optimal": [437, 440, 452, 457, 485, 516, 549, 576, 585, 613], "optimally": 593, "optimis": [549, 577, 611, 650], "optimised": 587, "optimistic": [485, 534, 549], "optimistically": 485, "optimiz": [442, 443, 446, 447, 449, 451, 452, 453, 455, 459, 461, 462, 463, 465, 466, 473, 485, 488, 490, 501, 503, 505, 506, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 525, 530, 534, 543, 546, 547, 548, 549, 550, 553, 561, 562, 563, 576, 579, 584, 585, 586, 587, 594, 596, 597, 598, 608, 609, 610, 611, 613, 614, 615, 618, 620, 621, 623, 624, 625, 638, 640, 641, 642, 643, 644, 646, 647, 649, 651, 652, 653, 655], "optimizationbit": 501, "optimizationlevel": 501, "optimizationlist": 501, "optimizationremarkemitt": 584, "optimized": [442, 444, 455, 457, 460, 465, 499, 514, 516, 521, 533, 534, 539, 549, 550, 552, 560, 562, 576, 579, 580, 587, 622, 623, 639, 644, 650], "optimizefunct": [623, 624, 625], "optimizelai": [622, 623, 624, 625], "optimizemodul": [622, 623, 624, 625], "optimizer": [444, 451, 461, 516, 519, 547, 549, 593, 642, 653], "optimizing": [444, 447, 451, 457, 506, 516, 532, 537, 560, 576, 577, 585, 596], "optimz": 517, "optimzed": 610, "opting": 564, "option": [58, 141, 241, 388, 442, 443, 446, 447, 451, 452, 456, 457, 459, 463, 467, 476, 481, 483, 491, 502, 505, 506, 507, 510, 514, 517, 521, 523, 527, 535, 538, 539, 540, 541, 544, 545, 549, 552, 554, 555, 557, 561, 563, 564, 576, 577, 580, 581, 582, 585, 586, 587, 588, 589, 593, 594, 601, 604, 605, 607, 610, 613, 614, 615, 616, 617, 637, 638, 639, 643, 649, 651, 652, 653], "optional": [8, 33, 34, 46, 50, 56, 57, 76, 89, 103, 106, 125, 126, 133, 136, 161, 189, 190, 218, 219, 231, 235, 260, 286, 307, 317, 323, 326, 338, 363, 364, 376, 380, 386, 387, 407, 421, 435, 436, 437, 438, 440, 443, 456, 457, 464, 466, 468, 478, 485, 486, 501, 513, 518, 528, 530, 536, 548, 549, 550, 551, 555, 579, 580, 586, 589, 591, 603, 604, 605, 607, 609, 610, 615, 619, 638, 640, 641, 642, 643, 644, 649, 651, 653], "optional_dir": 580, "optionaldbgheadersiz": 567, "optionally": [18, 19, 20, 21, 22, 25, 26, 27, 115, 116, 117, 118, 119, 199, 200, 201, 206, 207, 316, 348, 349, 350, 351, 352, 355, 356, 357, 447, 457, 473, 485, 501, 502, 509, 513, 521, 535, 544, 549, 557, 579, 581, 582, 591, 596, 598, 603, 614, 617, 619, 638, 642, 649, 653], "options_pars": 536, "optiz": 584, "optlevel": 501, "optnon": [447, 549, 564], "optnum": 501, "optsiz": [447, 527, 549], "optyp": 614, "optzn": [544, 639, 640, 641, 642, 650, 651, 652, 653], "opval": 614, "op\u00e9rand": [53, 130, 138, 238, 324, 383], "or": [8, 11, 16, 17, 21, 22, 24, 35, 37, 38, 39, 40, 41, 42, 46, 52, 57, 70, 76, 87, 88, 89, 103, 106, 109, 113, 114, 118, 119, 129, 130, 131, 133, 150, 161, 175, 189, 190, 193, 197, 198, 206, 207, 209, 220, 222, 223, 224, 225, 226, 227, 231, 237, 253, 260, 272, 286, 287, 292, 297, 307, 318, 332, 338, 341, 346, 347, 351, 352, 354, 365, 367, 368, 369, 370, 371, 372, 376, 382, 387, 400, 407, 419, 420, 421, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 574, 575, 577, 578, 579, 580, 584, 585, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "orbit": [641, 652], "orc": [586, 621, 623, 624, 625, 639, 640, 641, 642, 644, 655], "orcabisupport": 625, "orcjit": [621, 622, 623, 624, 625], "orcremotetargetclient": 625, "orcremotetargetserv": 625, "orcv1": 586, "orcv2": 586, "orcx86_64_sysv": 625, "ord": 549, "order": [103, 189, 286, 435, 436, 437, 443, 444, 446, 447, 452, 453, 455, 457, 460, 464, 471, 485, 486, 487, 489, 497, 499, 501, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 523, 525, 536, 543, 546, 548, 551, 552, 555, 560, 561, 563, 564, 567, 571, 572, 575, 577, 579, 580, 581, 584, 585, 589, 591, 593, 594, 596, 598, 599, 601, 603, 608, 609, 611, 614, 615, 623, 637, 638, 639, 640, 642, 646, 647, 648, 649, 650, 651, 653], "ordered": [440, 459, 501, 516, 525, 543, 549, 561, 579, 595, 601, 603, 618, 640, 651], "ordered_append_term": 440, "ordering": [440, 453, 457, 460, 476, 485, 501, 529, 543, 560, 561, 577, 579, 581, 593, 610, 618], "ordinal": 501, "ordinary": [505, 506, 549, 563, 619], "ore": 584, "org": [450, 455, 458, 459, 483, 487, 488, 494, 496, 497, 509, 517, 520, 521, 523, 535, 537, 540, 541, 542, 543, 551, 555, 556, 558, 578, 581, 584, 588, 590, 607, 619, 621, 622, 623, 624, 625, 638], "organiz": [440, 511, 520, 558, 561, 580, 593, 639, 650], "organized": [438, 440, 511, 548, 574, 598], "organizer": [558, 590], "organizing": 456, "ori": 457, "orient": [458, 645, 654], "oriented": [459, 543, 579, 583, 593, 595], "orig": 549, "origin": [458, 521, 578, 581], "original": [439, 452, 457, 460, 471, 473, 489, 505, 509, 511, 519, 549, 563, 567, 572, 579, 581, 584, 585, 587, 590, 593, 594, 598, 602, 605, 610, 611, 616, 621, 622, 644], "originally": [457, 509, 511, 549, 595, 599, 604], "originat": 585, "originating": 599, "originput": 501, "orl": 594, "orq": 594, "orr": 549, "orthogonal": 444, "orthogonality": 563, "os": [444, 445, 453, 457, 512, 518, 521, 538, 542, 549, 579, 594, 619], "oscillator": 618, "oso": 462, "oss": [517, 542, 551, 581], "ostream": [459, 579], "osuosl": 537, "other": [4, 7, 11, 103, 106, 109, 189, 193, 286, 341, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 450, 451, 452, 453, 455, 457, 458, 459, 460, 462, 464, 465, 466, 473, 475, 476, 485, 486, 487, 488, 494, 496, 497, 498, 499, 500, 502, 504, 505, 506, 508, 509, 510, 511, 512, 513, 518, 520, 521, 523, 524, 527, 528, 529, 530, 532, 534, 535, 536, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 570, 571, 572, 574, 575, 577, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 594, 595, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 610, 611, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 655], "other_funct": 594, "otherspecialsquar": 543, "othervt": 614, "otherwis": [104, 105, 440, 442, 444, 447, 448, 450, 451, 452, 455, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 482, 484, 485, 487, 488, 492, 493, 494, 496, 497, 499, 500, 501, 502, 505, 506, 509, 511, 516, 518, 535, 537, 538, 541, 542, 544, 549, 550, 552, 561, 563, 564, 567, 569, 575, 577, 578, 579, 581, 590, 593, 594, 598, 603, 604, 610, 615, 619, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "otp": 549, "ottenstein": 508, "ought": 459, "our": [442, 453, 455, 456, 457, 458, 459, 501, 502, 505, 509, 510, 518, 521, 544, 552, 561, 562, 572, 575, 576, 579, 581, 590, 591, 593, 594, 598, 613, 615, 617, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "ourfpm": 644, "ourfunctionpass": 579, "ourselv": [459, 562, 575, 593, 621], "out": [440, 442, 443, 444, 445, 446, 447, 450, 451, 456, 457, 459, 464, 466, 468, 470, 471, 473, 478, 479, 481, 484, 485, 486, 488, 494, 501, 502, 505, 508, 509, 510, 511, 512, 517, 518, 521, 523, 529, 536, 538, 539, 540, 541, 542, 544, 546, 547, 549, 550, 551, 553, 555, 560, 561, 563, 566, 570, 571, 575, 577, 578, 579, 581, 585, 587, 588, 590, 591, 593, 594, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 614, 615, 616, 617, 618, 619, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655], "out_of_bound": 456, "outdated": [541, 608], "outermost": 549, "outerstructty": 549, "outfil": 495, "outgoing": [448, 549], "outlin": [505, 511, 587, 594, 619], "outlined": [454, 457, 505, 509, 511, 615], "outliv": [549, 551, 577], "outloop": [640, 641, 642, 643, 644, 653], "outlying": 511, "outoperandlist": [605, 614], "output": [18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 62, 63, 64, 65, 66, 67, 68, 69, 95, 96, 97, 98, 104, 115, 116, 117, 118, 119, 121, 122, 123, 124, 142, 143, 144, 145, 146, 147, 148, 149, 181, 182, 183, 184, 199, 200, 201, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 245, 246, 247, 248, 249, 250, 251, 252, 278, 279, 280, 281, 291, 296, 305, 308, 309, 310, 311, 316, 336, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 392, 393, 394, 395, 396, 397, 398, 399, 427, 428, 429, 430, 438, 440, 442, 443, 445, 448, 451, 454, 455, 457, 459, 460, 461, 462, 465, 466, 467, 468, 469, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 508, 512, 513, 518, 521, 523, 525, 529, 536, 539, 544, 546, 555, 556, 560, 562, 577, 579, 585, 586, 588, 589, 591, 593, 595, 601, 605, 607, 609, 610, 614, 615, 616, 617, 618, 622, 637, 639, 640, 641, 642, 643, 644, 648, 650, 651, 652, 653, 656], "outputdebuginfo": 501, "outputfilenam": 501, "outputting": 489, "outright": 519, "outsid": [440, 443, 458, 501, 505, 509, 513, 519, 520, 535, 536, 540, 549, 550, 551, 553, 561, 577, 579, 581, 585, 588, 593, 594, 596, 598, 599, 603, 608, 611, 622, 638, 649], "outsider": 459, "outstanding": [40, 103, 189, 225, 286, 370, 435], "outstream": 518, "outweigh": 584, "over": [440, 443, 446, 447, 450, 451, 452, 456, 457, 460, 485, 489, 502, 505, 508, 509, 519, 529, 530, 536, 539, 543, 549, 550, 551, 552, 558, 560, 577, 578, 581, 587, 593, 594, 597, 598, 603, 604, 619, 622, 623, 624, 625, 636, 638, 640, 641, 642, 644, 645, 646, 647, 649, 651, 652, 653, 654], "overall": [450, 453, 457, 488, 508, 509, 511, 518, 519, 539, 549, 575, 578, 587, 594, 601, 640, 651], "overboard": 459, "overestimating": 549, "overflow": [439, 440, 509, 516, 551, 553, 587, 591, 594, 618], "overflowed": 549, "overhaul": 542, "overhead": [514, 518, 536, 546, 549, 559, 563, 579, 581, 585, 587, 594, 618, 623, 639, 650], "overlaid": 560, "overlap": [456, 457, 460, 485, 549, 613, 615], "overlapping": [443, 460, 485, 547, 549, 593, 596], "overlay": [510, 567], "overload": [502, 549, 615], "overloaded": [502, 512, 543, 549, 562, 579, 598, 614], "overloading": [549, 579, 641, 652], "overly": [509, 584], "overrid": [440, 453, 455, 456, 457, 465, 466, 473, 477, 487, 501, 502, 536, 543, 549, 551, 561, 562, 577, 579, 591, 594, 603, 614, 615, 622, 638, 639, 640, 641, 642, 643, 644], "overridden": [443, 501, 521, 549, 551, 589, 614], "overriding": [444, 464, 465, 466, 508, 527, 593, 601, 604, 615, 644], "overrod": 603, "overrun": 536, "oversimplified": 579, "oversized": 579, "overview": [436, 454, 455, 485, 501, 503, 504, 520, 531, 554, 556, 559, 615, 640, 651], "overwhelm": 452, "overwhelming": [646, 647], "overwrit": [501, 580, 596, 616], "overwriting": [580, 594, 596], "overwritten": [457, 511, 549, 591, 596], "ovl": 567, "own": [440, 447, 448, 455, 456, 457, 459, 468, 501, 502, 506, 508, 509, 510, 511, 512, 518, 521, 535, 536, 540, 542, 543, 548, 549, 551, 560, 563, 565, 566, 575, 577, 578, 579, 580, 581, 584, 585, 590, 593, 596, 599, 601, 606, 608, 609, 614, 615, 638, 639, 641, 642, 645, 647, 652, 653, 654], "owned": [554, 563], "owner": [457, 468, 504, 542, 578, 581], "ownership": [509, 563, 579, 624, 625, 639, 640, 641, 642, 643, 644], "owning": 579, "p": [438, 440, 443, 446, 455, 457, 459, 460, 464, 468, 473, 478, 479, 486, 487, 488, 492, 493, 497, 498, 499, 507, 510, 519, 536, 546, 549, 562, 579, 581, 587, 598, 603, 611, 614, 617, 625, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "p0": [51, 137, 236, 381, 524, 525, 529, 549], "p0928": 594, "p0a10s_union": 549, "p0f_isvoidf": 598, "p0i32": 460, "p0i64": 460, "p0i8": [549, 562], "p0s_struct": 549, "p0s_union": 549, "p0v16f32": 549, "p0v2f64": 549, "p0v4p0f_i32f": 549, "p0v8f64": 549, "p0v8i32": 549, "p0v8p0f64": 549, "p0v8p0f_i32f": 549, "p1": [525, 529, 549, 560, 562, 593], "p10": [51, 137, 236, 381], "p15": [549, 562], "p16": 562, "p17": 562, "p18": 562, "p19": 562, "p1i8": [562, 598], "p2": [460, 524, 549, 560, 562, 593], "p20": [51, 137, 236, 381, 562], "p2align": [440, 594], "p3": [460, 560, 562, 593], "p3i8": 562, "p4": 562, "p4i8": 562, "p5": 562, "p5i8": 562, "p7": 549, "p_arch": 502, "p_reg": 457, "pa": 579, "pack": [440, 457, 542, 585, 588, 638, 649], "packag": [453, 455, 502, 504, 509, 510, 521, 537, 538, 540, 541, 542, 580, 588, 607, 612], "package_string": 455, "packaged": [448, 502, 542, 582], "packager": 576, "packaging": [453, 520], "packed": [24, 35, 37, 209, 220, 222, 354, 365, 367, 437, 447, 485, 516, 549, 581], "packet": [440, 601], "packetiz": 500, "packetizing": 457, "packing": [202, 204, 205, 209, 213, 215, 216, 220, 222, 438, 457, 505], "pact": 585, "pad": [438, 505, 506, 511, 547, 549, 555, 618], "padded": [506, 566], "padding": [440, 447, 489, 506, 524, 526, 549, 567, 596], "padding1": 567, "padding2": 567, "padparam": 511, "padu": 508, "pag": [440, 442, 453, 455, 459, 463, 489, 501, 503, 504, 509, 513, 515, 518, 521, 523, 536, 553, 554, 559, 571, 575, 578, 579, 581, 584, 586, 587, 589, 593, 594, 600, 606, 609, 613, 620, 638], "paging": [440, 598], "pain": [501, 579], "painful": [502, 507, 509, 578, 579], "painlessly": 501, "pair": [438, 439, 440, 443, 444, 445, 446, 457, 459, 460, 465, 475, 485, 492, 493, 494, 511, 513, 525, 545, 549, 551, 560, 561, 563, 574, 577, 579, 581, 593, 598, 614, 618, 619, 623, 637, 640, 642, 643, 644, 648, 651], "paired": [440, 444, 594], "pairwis": 443, "pamel": 583, "pan": [578, 594], "pand": 607, "pandaboard": 538, "pap": [459, 502, 508, 560, 594], "paper": [445, 457, 503, 508, 579], "papertrail": 462, "paradigm": [519, 579], "paragraph": [459, 509, 556, 561, 593, 595], "parallel": [455, 457, 460, 464, 479, 485, 521, 549, 560, 576, 580, 581, 584, 610], "parallel_dir": 580, "parallel_loop_access": 610, "parallelism": [485, 537, 550, 583, 585, 613], "param": [0, 1, 2, 3, 85, 173, 270, 417, 440, 459, 464, 518, 523, 537, 549, 562, 649, 650, 651, 652, 653], "param1": 579, "param2": 579, "paramattr": 447, "paramet": [51, 85, 137, 173, 236, 270, 381, 417, 438, 447, 449, 452, 455, 457, 459, 464, 468, 479, 484, 501, 502, 505, 511, 513, 518, 545, 554, 561, 562, 577, 579, 591, 593, 598, 601, 614, 615, 618, 619, 638, 649], "parameter": [440, 447, 452, 455, 456, 457, 459, 464, 479, 484, 501, 505, 518, 519, 545, 549, 551, 561, 577, 579, 598, 604, 605, 614, 618, 638, 649], "parameteriz": 527, "parameterized": 603, "parameterless": 555, "parametrized": 604, "paramidx": 447, "paramidx0": 447, "paramidx1": 447, "paramt": 513, "paramty": 447, "parenexpr": [637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "parent": [440, 448, 456, 459, 464, 478, 548, 549, 579, 581, 640, 651], "parent_scop": 456, "parenthandl": 549, "parenthes": [438, 460, 464, 549, 601, 637, 648], "parentty": 549, "paricular": 502, "paritioning": 464, "parity": 536, "parlanc": [456, 560, 611, 636, 647], "pars": [447, 464, 467, 478, 484, 488, 498, 500, 502, 512, 514, 517, 521, 546, 548, 549, 551, 552, 554, 555, 589, 593, 596, 598, 601, 605, 614, 619, 636, 638, 639, 641, 642, 643, 644, 645, 646, 647, 649, 650, 652, 653, 654, 655], "parsabl": [490, 598], "parse_arg": [648, 649, 650, 651, 652, 653], "parse_bin_rh": [648, 649, 650, 651, 652, 653], "parse_binary_precedent": [652, 653], "parse_definit": [648, 649, 650, 651, 652, 653], "parse_expr": [648, 649, 650, 651, 652, 653], "parse_extern": [648, 649, 650, 651, 652, 653], "parse_failed": 579, "parse_ident": [648, 649, 650, 651, 652, 653], "parse_operator": [652, 653], "parse_primary": [648, 649, 650, 651, 652, 653], "parse_prototyp": [648, 649, 650, 651, 652, 653], "parse_toplevel": [648, 649, 650, 651, 652, 653], "parse_unary": [652, 653], "parse_var_in": 653, "parse_var_nam": 653, "parseabl": [549, 598], "parsebinoprh": [637, 638, 639, 640, 641, 642, 643, 644], "parsecommandlineopt": [617, 625], "parsed": [447, 457, 460, 478, 484, 485, 501, 502, 512, 536, 549, 589, 591, 598, 601, 604, 618, 619, 637, 639, 641, 642, 648, 649, 650, 651, 652, 653], "parsedattrinfo": 601, "parsedefinit": [637, 638, 639, 640, 641, 642, 643, 644], "parseexpress": [637, 638, 639, 640, 641, 642, 643, 644], "parseextern": [637, 638, 639, 640, 641, 642, 643, 644], "parseforexpr": [640, 641, 642, 643, 644], "parseidentifierexpr": [637, 638, 639, 640, 641, 642, 643, 644], "parseifexpr": [640, 641, 642, 643, 644], "parsenumberexpr": [637, 638, 639, 640, 641, 642, 643, 644], "parseparenexpr": [637, 638, 639, 640, 641, 642, 643, 644], "parsepasspipelin": 517, "parsepath": 563, "parseprimary": [637, 638, 639, 640, 641, 642, 643, 644, 652], "parseprototyp": [637, 638, 639, 640, 641, 642, 643, 644], "parser": [453, 485, 517, 551, 601, 637, 648], "parserclass": 501, "parsesubtargetfeatur": 614, "parsetoplevelexpr": [637, 638, 639, 640, 641, 642, 643, 644], "parsetypetyp": 512, "parseunary": [641, 642, 643, 644, 652], "parsevalid": 617, "parsevarexpr": [642, 643, 644], "parsing": [447, 456, 464, 498, 502, 549, 550, 579, 589, 593, 601, 604, 612, 619, 638, 639, 640, 641, 642, 643, 644, 646, 647, 649, 650, 651, 652, 653], "part": [438, 439, 440, 441, 443, 444, 446, 447, 450, 451, 453, 454, 455, 456, 457, 459, 461, 462, 464, 474, 485, 501, 502, 505, 508, 509, 511, 516, 517, 518, 519, 521, 523, 526, 527, 536, 539, 540, 543, 548, 549, 551, 552, 553, 558, 559, 561, 563, 566, 571, 572, 577, 579, 581, 582, 583, 585, 590, 593, 594, 597, 598, 601, 604, 605, 607, 609, 610, 611, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "partial": [457, 500, 549, 550, 551, 579, 587, 593, 596, 610, 619], "partialali": 443, "partially": [438, 549, 577, 583, 591, 610, 618], "particip": 458, "participat": [440, 458, 509, 549, 578, 579, 581, 582, 609], "participated": [578, 581], "participating": [508, 581], "particlefilt": 583, "particular": [438, 443, 444, 445, 447, 450, 451, 455, 457, 459, 464, 473, 489, 501, 505, 506, 509, 511, 516, 518, 519, 521, 524, 527, 529, 530, 539, 543, 544, 547, 548, 549, 551, 554, 560, 561, 562, 563, 566, 567, 569, 571, 572, 577, 579, 581, 583, 585, 587, 589, 590, 593, 594, 596, 598, 601, 603, 604, 605, 609, 611, 614, 615, 616, 618, 637, 639, 642, 648, 650, 653], "particularly": [444, 459, 460, 516, 525, 527, 530, 537, 549, 574, 579, 581, 587, 594, 598, 614, 615, 616, 618], "partit": [451, 487, 538, 550, 560], "partitioned": [457, 465, 560], "partitioning": [560, 623], "partn": 579, "party": [459, 521, 580, 590], "parzyszek": 584, "parzyszekacronym": 584, "parzyszekacronym2": 584, "parzyszekdistinguish": 584, "pascal": 549, "pass": [440, 442, 444, 446, 448, 451, 452, 457, 460, 461, 463, 464, 465, 466, 468, 473, 476, 485, 488, 499, 501, 502, 504, 509, 511, 512, 513, 514, 517, 518, 519, 521, 523, 526, 527, 528, 529, 530, 531, 532, 534, 535, 539, 540, 543, 544, 547, 548, 549, 550, 551, 552, 554, 557, 560, 562, 574, 579, 580, 581, 584, 585, 586, 587, 588, 589, 593, 594, 596, 607, 608, 609, 611, 612, 614, 617, 619, 621, 622, 623, 624, 625, 637, 638, 640, 641, 642, 643, 644, 645, 648, 653, 654], "passag": 459, "passbuild": [517, 615], "passcon": 505, "passed": [440, 442, 443, 446, 452, 455, 456, 457, 464, 465, 466, 468, 479, 490, 501, 502, 505, 507, 510, 511, 515, 517, 518, 519, 521, 542, 544, 545, 546, 547, 549, 550, 551, 554, 561, 563, 564, 567, 579, 585, 587, 589, 591, 592, 594, 596, 597, 598, 601, 607, 609, 610, 611, 614, 617, 622, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "passing": [440, 442, 445, 446, 455, 456, 457, 459, 460, 501, 511, 513, 521, 527, 544, 547, 549, 551, 554, 563, 577, 587, 594, 605, 609, 621, 622, 623, 639, 645, 654], "passiv": 564, "passmanag": [501, 554, 579, 617, 622, 639, 643, 650, 651, 652, 653], "passmanagerbas": [614, 615], "passmanagerbuild": [562, 615], "passmanagerimpl": 617, "passnam": [499, 579], "passopt": 615, "passpluginlibraryinfo": 615, "passthru": 549, "password": [537, 581], "past": [459, 519, 533, 549, 578, 579, 581, 585, 593, 598, 603, 614, 618, 641, 644, 652], "pat": [457, 605, 614], "patch": [445, 459, 516, 520, 523, 537, 539, 549, 550, 563, 578, 579, 586, 598, 609, 616, 617, 639, 644, 650], "patch_premain": [616, 617], "patch_status": 616, "patchabl": [518, 549, 596, 598], "patched": [518, 586, 596], "patching": [488, 515, 518, 542, 549, 596, 598, 616, 618], "patchpoint": [549, 598], "patfrag": 614, "path": [441, 442, 443, 444, 452, 453, 455, 456, 459, 461, 462, 464, 465, 466, 468, 471, 472, 473, 478, 479, 481, 487, 490, 498, 500, 502, 511, 513, 515, 516, 518, 521, 523, 535, 538, 539, 540, 541, 551, 562, 563, 567, 577, 579, 580, 581, 589, 593, 594, 598, 599, 607, 608, 609, 617, 642, 653], "path_to_clang": 442, "path_to_llvm": 521, "pathnam": [472, 521], "pathsep": [464, 609], "patient": [458, 615], "patleaf": 614, "pattern": [0, 1, 2, 3, 442, 444, 446, 456, 457, 463, 464, 473, 479, 487, 497, 501, 505, 508, 512, 519, 524, 527, 529, 530, 536, 549, 562, 571, 579, 585, 591, 593, 594, 601, 603, 605, 609, 614, 617, 623, 638, 647, 648], "paul": [584, 594], "paulkoch": 594, "paus": [518, 581, 622], "pausing": 443, "pay": [459, 528, 609, 614], "paying": [509, 594], "payload": [457, 549, 618], "pb": [579, 615], "pbqp": [457, 465], "pc": [41, 131, 227, 372, 439, 457, 484, 511, 515, 549, 551, 587, 592, 594, 607, 609, 613, 614], "pch": 593, "pcre": 551, "pcre2": 551, "pct": 489, "pd": 603, "pdat": [513, 567], "pdb": [455, 463, 565, 566, 570, 571, 586, 593], "pdbdllrbld": 567, "pdbdllversion": 567, "pdbfilepathnameindex": 567, "pdbraw_featuresig": 572, "pdbstreamhead": 572, "pdbstreamvers": 572, "pdbutil": 463, "pdf": [445, 594], "pdg": 508, "pdgbuild": 508, "pe": [503, 518, 567, 572], "peculiar": 604, "pedantic": 455, "peek": [648, 649, 650, 651, 652, 653], "peephol": [457, 512, 579, 639, 640, 641, 642, 650, 651, 652, 653], "peform": 446, "pen": 583, "penalt": 587, "penalty": [453, 549, 579], "pending": [504, 507, 521, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "pentium": [521, 614], "penultimat": 614, "peopl": [450, 453, 457, 458, 459, 501, 504, 509, 512, 514, 519, 520, 521, 542, 549, 558, 578, 581, 588, 594, 599, 615, 621, 645, 647, 654], "pep": 584, "per": [21, 22, 40, 118, 119, 206, 207, 225, 351, 352, 370, 439, 440, 444, 447, 448, 455, 457, 470, 473, 475, 479, 485, 486, 489, 501, 505, 506, 511, 518, 524, 525, 532, 536, 542, 543, 548, 549, 551, 552, 555, 559, 560, 562, 578, 579, 581, 587, 589, 591, 593, 594, 596, 598, 601, 604, 608, 609, 617, 619, 621, 622, 639, 650, 655], "perceiv": [645, 654], "perceived": 508, "percent": 443, "percentag": [470, 484, 489, 490, 536, 579], "perf": [442, 445, 455, 607], "perf_test": 583, "perfect": [446, 490, 509, 579], "perfectly": [457, 459, 460, 489, 514, 519, 536, 549, 593, 637, 648], "perfectlyrightalign": 536, "perform": [440, 442, 443, 444, 445, 446, 451, 453, 454, 455, 456, 457, 459, 464, 465, 468, 475, 479, 488, 490, 498, 499, 501, 505, 509, 511, 512, 515, 517, 518, 519, 521, 522, 524, 525, 529, 530, 534, 536, 538, 539, 542, 547, 548, 549, 550, 551, 552, 554, 561, 562, 563, 564, 577, 579, 580, 581, 582, 584, 585, 587, 588, 589, 591, 593, 594, 597, 598, 599, 603, 607, 609, 610, 611, 614, 615, 616, 621, 623, 642, 643, 646, 653], "performed": [439, 440, 443, 444, 451, 455, 456, 457, 487, 501, 510, 516, 518, 525, 549, 552, 555, 562, 563, 564, 567, 577, 579, 581, 589, 593, 594, 598, 609, 611, 614, 622, 638, 649], "performing": [440, 446, 452, 453, 457, 459, 498, 511, 519, 549, 551, 564, 577, 579, 585, 591, 598, 601, 613, 614, 645, 654], "perfunctionstat": 617, "perhap": [443, 518, 532, 549, 561, 572, 579, 581, 593], "period": [451, 454, 509, 549, 609], "periodic": 551, "periodically": [509, 518, 551, 616], "perl": 518, "perldoc": 521, "perm": [52, 237, 382, 465, 513, 518, 521, 537, 549, 554, 579, 603, 609, 621, 642, 653], "permanent": [590, 623], "permanently": 529, "permiss": [52, 237, 382, 468, 509, 554, 590], "permissively": 509, "permit": [457, 549, 579, 584, 603, 642, 643, 644, 653], "permitted": [494, 513, 525, 529, 549], "permitting": 550, "permut": [438, 549], "perpetual": 616, "perpetually": 509, "persist": [456, 505, 579], "persisted": 510, "persistent": 551, "persisting": 458, "person": [458, 544, 556, 578, 590, 595, 619, 622], "personal": [458, 509], "personalit": 511, "personality": [447, 511, 550], "personalityfn": 447, "personally": 458, "personlist": 619, "perspect": [443, 458, 505, 511, 543, 549, 590, 598, 615], "pertain": [509, 549], "pertaining": [511, 587, 593], "pervas": 579, "pervasively": [543, 646], "pervert": [602, 605], "pessimiz": [515, 577, 579], "peut": [53, 130, 138, 238, 324, 383], "peuvent": 130, "pf0": 561, "pf1": 561, "pf_inet": 625, "pg0": 561, "pg1": 561, "pgo": [453, 490, 575, 589, 594, 612], "ph": [549, 593], "phab": 581, "phabricator": [504, 509, 520, 521, 581, 584], "phas": [461, 465, 511, 518, 529, 542, 549, 564, 579, 582, 588, 622, 637, 641, 648, 652], "phase3": [542, 588], "phi": [447, 457, 470, 505, 511, 524, 577, 593, 613, 640, 641, 642, 643, 644, 651, 652, 653], "phid": 459, "phielimin": 457, "phieliminationid": 457, "philip": 584, "philosophy": [548, 582, 612], "phinod": [459, 560, 640, 641, 642, 643, 644], "phis": [459, 549, 553, 560], "phoronix": 583, "php": [578, 583], "phras": 459, "phrasing": 456, "physical": [458, 485, 524, 526, 549, 555, 567, 579, 587, 590, 593, 598, 603, 614], "physically": [453, 524, 590], "physreg": 457, "pi": [439, 508, 518, 579, 591], "pi8": 611, "pic": [457, 466, 541, 544, 555, 587, 593, 614], "pick": [446, 455, 457, 459, 466, 479, 518, 519, 532, 540, 541, 544, 549, 578, 579, 581, 582, 598, 614, 650], "picked": [485, 607], "picking": [459, 582], "pictur": [519, 575, 618, 638, 649], "picus": [533, 584], "picusacronym": 584, "piec": [447, 451, 453, 456, 457, 459, 479, 509, 516, 519, 523, 539, 542, 544, 548, 549, 582, 587, 593, 598, 603, 609, 637, 638, 640, 641, 642, 644, 646, 647, 648, 649, 651, 652, 653], "pieg": 130, "pienaar": 502, "pifft": 608, "ping": [504, 509, 561], "pinned": 549, "pinning": 549, "pinpont": 581, "pinsrd": 460, "pinsrd_1": 460, "pinst": 579, "pip": [440, 460, 464, 485, 599, 607, 617], "piped": 460, "pipefail": 464, "pipelin": [440, 447, 464, 470, 485, 505, 516, 517, 524, 526, 531, 534, 549, 558, 562, 589, 593, 598, 609, 610, 614, 615, 622, 650, 651, 652, 653], "pipelined": 577, "pipelining": 615, "pipermail": [581, 584], "piping": 609, "pitcairn": 440, "pixel": [21, 22, 85, 118, 119, 173, 206, 207, 270, 351, 352, 417], "pl": [617, 619], "plac": [440, 441, 442, 445, 446, 451, 457, 459, 462, 464, 466, 487, 497, 506, 509, 510, 511, 512, 513, 516, 518, 519, 529, 530, 535, 540, 548, 549, 555, 561, 563, 578, 579, 581, 585, 587, 588, 593, 594, 595, 596, 598, 603, 605, 609, 615, 619, 637, 638, 639, 641, 642, 645, 646, 647, 649, 650, 652, 653, 654], "placed": [440, 457, 462, 464, 468, 485, 501, 505, 513, 521, 526, 537, 540, 549, 555, 581, 589, 593, 607, 609, 610, 614], "placehold": [468, 511], "placeholder": 510, "placesafepoint": 518, "placing": [501, 516, 549, 577, 580, 598, 603, 607, 613], "plag": 130, "plain": [460, 555, 556, 566, 579, 595, 615, 621], "plan": [457, 509, 520, 539, 547, 551, 559, 563, 579, 593, 597, 598, 605, 613, 616, 641, 652], "planned": [509, 518, 559, 562, 585], "planning": [581, 582], "planted": 615, "plat": [501, 579], "platform": [440, 442, 444, 456, 457, 489, 505, 509, 511, 518, 521, 522, 537, 538, 539, 541, 542, 548, 549, 552, 563, 572, 575, 576, 579, 591, 594, 596, 599, 615, 618, 621, 625, 639, 641, 650], "plausibl": 450, "play": [553, 561, 579, 604, 615, 645, 647, 654], "playground": 647, "pldi": [518, 585], "pleas": [442, 443, 444, 450, 455, 457, 458, 459, 483, 485, 487, 488, 494, 496, 497, 500, 504, 509, 516, 518, 520, 521, 523, 536, 537, 538, 539, 541, 542, 544, 546, 548, 549, 556, 558, 559, 562, 563, 578, 579, 587, 588, 590, 591, 595, 598, 600, 603, 604, 606, 609, 614, 617, 638, 645, 649, 654, 655], "plethor": [452, 514, 521, 579], "plist": 488, "plot": [484, 641, 652], "plott": [641, 652], "plotting": [641, 652], "plug": [564, 638, 649], "plugged": 582, "plugin": [461, 466, 468, 499, 539, 549, 564, 589, 612], "plugin_tool": 615, "pluginfilenam": 466, "plugininfo": 615, "plus": [439, 440, 446, 447, 509, 511, 518, 549, 567, 579, 587, 593, 614, 620, 622, 637, 640, 648, 651], "plusieur": [130, 620], "plusten": 593, "pm": [614, 615], "pmbuild": 562, "pmdatamanag": 617, "pmtoplevelmanag": 617, "pn": [459, 524, 640, 641, 642, 643, 644], "png": [455, 551, 594], "pni8": 511, "point": [43, 45, 132, 228, 230, 288, 293, 298, 300, 319, 321, 373, 375, 437, 438, 443, 444, 447, 448, 451, 454, 455, 457, 459, 465, 473, 479, 485, 489, 501, 502, 510, 511, 512, 515, 516, 524, 527, 530, 532, 537, 540, 541, 542, 543, 547, 550, 552, 554, 555, 559, 560, 561, 562, 563, 566, 571, 574, 577, 581, 582, 586, 587, 588, 589, 591, 593, 594, 598, 599, 605, 611, 612, 614, 615, 616, 617, 618, 619, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "point_numb": [38, 39, 129, 223, 224, 368, 369], "pointcount": 518, "pointe": [440, 447, 549], "pointed": [447, 457, 511, 519, 549, 579, 598, 602, 605, 623], "pointee_align": 440, "pointeealign": 440, "pointer": [444, 457, 502, 505, 511, 514, 518, 519, 524, 547, 550, 554, 561, 562, 566, 574, 577, 579, 587, 593, 594, 596, 601, 611, 615, 619, 621, 639, 640, 642, 645, 646, 647, 651, 653, 654], "pointer1": 594, "pointer2": 594, "pointer_offset": 598, "pointerflag": 566, "pointerkind": 566, "pointermod": 566, "pointermodifi": 566, "pointertodatamemb": 566, "pointertojittargetaddress": 563, "pointertomemberfunct": 566, "pointertyp": 579, "pointing": [450, 501, 542, 549, 563, 567, 579, 581, 593, 616, 642, 653], "pointless": [511, 560, 598], "pointstoconstantmemory": 549, "pointtoconstantmemory": 443, "pointy": 619, "poison": 587, "poison2": 549, "poison3": 549, "poison4": 549, "poison_yet_again": 549, "poisoned": [549, 594], "pok": 447, "polar": 619, "polaris10": 440, "polaris11": 440, "polarity": 587, "policy": [438, 440, 443, 447, 459, 504, 520, 521, 579, 581, 584], "polit": 457, "political": 458, "poll": [518, 558, 598], "polling": 518, "pollut": 459, "polly": [455, 509, 521, 581, 584, 585, 610], "polyhedral": 585, "polymorphic": [454, 596], "polymorphism": 579, "pong": 561, "pool": [440, 447, 457, 470, 563, 596, 614, 615, 621], "poolalloc": 443, "poor": [458, 459, 598, 640, 651], "poorly": [448, 459], "pop": [439, 442, 457, 518, 549, 579, 640, 642, 643, 644, 651, 653], "pop2_": 583, "pop_back": [501, 579, 644], "popcnt": 551, "popf": 594, "popfq": 594, "popped": [447, 618], "popping": 457, "popq": [594, 596, 598], "pops_exiting_wave_id": 439, "pops_pack": 40, "popul": 512, "popular": [443, 456, 457, 510, 521, 538, 549, 646], "populat": [464, 521, 562, 594, 601], "populated": [511, 549, 564, 638], "pornin": 594, "porpod": 585, "port": [457, 479, 537, 594, 599, 613, 616, 625, 645, 654], "portability": [459, 486, 518, 579, 599, 645, 654], "portabl": [453, 455, 457, 464, 518, 549, 563, 579, 612, 621], "ported": [514, 599], "porting": [527, 529, 534, 582], "portion": [451, 453, 456, 457, 461, 485, 501, 506, 509, 511, 521, 526, 530, 549, 555, 557, 560, 577, 583, 593, 594, 614, 618, 622, 639, 650], "portugues": 591, "pos": [85, 173, 270, 417, 502, 518, 550, 594], "pos1": 501, "pos2": 501, "posed": 594, "posit": [11, 40, 46, 85, 109, 130, 133, 173, 193, 225, 231, 270, 341, 370, 376, 417, 438, 439, 440, 447, 457, 460, 466, 468, 505, 509, 511, 513, 521, 525, 541, 546, 549, 551, 552, 555, 567, 579, 585, 593, 594, 596, 598, 603, 619, 640, 641, 648, 651, 652], "position_at_end": [649, 650, 651, 652, 653], "positional": [490, 498], "positionaleatsarg": 501, "positioned": 549, "posix": [455, 460, 486, 487, 497, 510, 582, 589], "possbil": 619, "possess": [506, 579], "possibilit": [447, 519, 563, 636, 647], "possibility": [444, 459, 506, 547, 549, 561, 584], "possibl": [439, 440, 443, 444, 445, 446, 447, 451, 454, 455, 457, 464, 479, 485, 487, 489, 501, 502, 505, 506, 508, 509, 512, 513, 516, 518, 519, 521, 529, 530, 532, 535, 536, 537, 540, 543, 547, 549, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 565, 567, 571, 577, 578, 579, 581, 582, 585, 587, 588, 590, 592, 593, 594, 595, 598, 599, 601, 603, 607, 609, 610, 615, 618, 619, 637, 639, 640, 642, 644, 645, 648, 650, 651, 653, 654], "possibly": [440, 444, 447, 457, 505, 514, 518, 519, 524, 527, 532, 541, 544, 549, 563, 577, 579, 581, 585, 588, 593, 615], "post": [457, 458, 466, 504, 509, 520, 525, 534, 555, 558, 578, 580, 589, 590, 591, 593, 594, 598], "poster": 458, "postincr": 459, "posting": 458, "postord": 550, "postrapseudos": 555, "postscript": 577, "potential": [438, 450, 451, 457, 485, 511, 524, 549, 551, 558, 560, 577, 584, 585, 591, 593, 594, 598, 611, 647], "potentially": [443, 457, 459, 464, 485, 501, 509, 511, 514, 516, 518, 521, 539, 549, 551, 579, 585, 590, 591, 593, 594, 596, 598, 610, 617, 636, 637, 640, 647, 648, 651], "pound": 619, "povray31": 608, "pow": [440, 443, 483, 503, 525, 529, 536, 538, 555, 562, 577, 578, 602, 603, 605, 613, 618, 638, 640, 641, 647, 649, 651, 652], "power": 529, "power8": 503, "power9": 503, "powered": 538, "powerful": [443, 453, 457, 460, 501, 529, 547, 549, 552, 579, 595, 602, 605, 637, 639, 640, 641, 642, 648, 650, 651, 652, 653], "powerpc": [444, 455, 487, 512, 521, 549, 550, 584, 596, 609, 614, 619], "powerpc64": [503, 549], "powerpc64l": 616, "powerpcl": 487, "pp": [439, 574, 648, 649, 650, 651, 652, 653], "ppa": 521, "ppas": 521, "ppc32": 457, "ppc64": 457, "ppc_fp128": [447, 549, 561], "ppcf128": 549, "ppcinstrinfo": 512, "ppcisellowering": 512, "pr": [509, 550, 593, 609], "pr26161": 526, "pr26576": 524, "pr34636": 517, "practic": [453, 501, 509, 514, 515, 518, 524, 543, 549, 550, 551, 566, 570, 572, 574, 577, 579, 581, 593, 594, 595, 596, 598, 603, 610, 612, 622, 638, 639, 640, 646, 647, 649, 650, 651], "practical": [444, 459, 519, 579, 598], "practically": 582, "practis": 448, "pragm": [502, 577, 610], "pre": [438, 457, 466, 509, 512, 525, 542, 544, 550, 563, 577, 579, 580, 581, 593, 601, 605, 610, 649], "pre_stor": 457, "preallocated": 579, "prebuilt": 510, "prec": [641, 642, 643, 644, 652, 653], "precaut": 579, "preced": [471, 486, 549, 560, 579, 596, 609, 618], "preceded": [498, 549, 579, 591, 618, 621], "precedent": [598, 604, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653], "preceding": [440, 443, 447, 459, 460, 464, 505, 527, 549, 553, 577, 579, 593], "precis": [439, 440, 443, 444, 457, 465, 466, 518, 521, 524, 543, 555, 587, 593, 601, 614, 636, 637, 638, 647, 648, 649], "precisely": [549, 560, 596], "preclud": [446, 594, 598], "precompiled": 621, "precompiling": 562, "precomputed": 443, "precondit": 459, "precursor": 509, "pred": [511, 549, 562, 579, 593, 640, 642, 651, 653], "predecessor": [448, 457, 516, 549, 553, 577, 585, 593, 640, 651], "predefin": 607, "predefined": [457, 464, 517, 598, 607, 615, 641, 652], "predetermined": 443, "predicat": [444, 446, 563, 594, 601, 603, 605, 614], "predicate_stat": 594, "predicate_stor": 614, "predicated": [546, 549, 579, 585], "predicateinfo": 549, "predict": [449, 459, 485, 516, 586, 594, 615], "predicted": 594, "predictor": 594, "prediqu": [524, 585], "predreg": 546, "predrel": 546, "predsens": 546, "preemptabl": 551, "preemptibl": 577, "preemption": 447, "preemptionspecifi": [447, 549], "preexisting": 577, "pref": [444, 485, 498, 502, 509, 537, 539, 549, 558, 578, 579, 587, 588, 605, 617, 647], "prefaced": 456, "prefer": [456, 599], "preferably": [509, 516, 521, 584], "preferent": [443, 459, 509, 561, 584], "preferred": [444, 459, 498, 509, 511, 516, 538, 549, 555, 579, 593, 614], "prefetch": 503, "prefetched": 549, "prefetching": 503, "prefix": [440, 441, 447, 453, 455, 457, 459, 464, 472, 473, 487, 498, 501, 521, 535, 551, 555, 563, 564, 565, 566, 579, 580, 581, 584, 593, 603, 605, 607, 609, 641, 652, 653], "prefix1": 460, "prefix2": 460, "prefixdat": 447, "prefixed": [440, 460, 475, 498, 511, 549, 572, 584, 593, 598], "prefixing": 453, "preformatted": [556, 595], "preg": 457, "prehead": [553, 577, 640, 651], "preheader_bb": [651, 652], "preheaderbb": [640, 641], "preincrement": 459, "preincrementing": 459, "preinstalled": 510, "preliminary": 587, "premi": 130, "prendr": 130, "preord": 543, "prepar": [505, 541, 558, 577, 581, 588, 593, 598, 639], "prepared": [505, 511, 519, 549, 554, 571, 574, 577, 578, 590], "preparing": [473, 520, 561], "prepass": 457, "prepdefin": 604, "prepels": 604, "prepend": [462, 549, 593, 604, 607], "prepended": [473, 593, 604], "prepending": [549, 579, 584], "prepifdef": 604, "prepregcontentexcept": 604, "prepregion": 604, "preprocessed": 544, "preprocessing": 514, "preprocessor": [455, 473, 501, 502, 506, 514, 579, 604, 614, 639, 645, 650, 654], "prequisit": 540, "prerequisit": [459, 615], "prescrib": 524, "presenc": [444, 457, 460, 485, 511, 543, 549, 564, 572, 579, 593, 614, 618], "present": [440, 447, 452, 454, 457, 460, 464, 466, 474, 483, 485, 489, 496, 498, 501, 502, 505, 511, 513, 515, 518, 519, 521, 524, 533, 540, 549, 564, 566, 567, 570, 571, 572, 574, 579, 581, 587, 589, 593, 594, 598, 604, 610, 620, 640, 641, 642, 643, 644, 651, 652, 653], "presented": [440, 457, 473, 485, 544, 579, 583, 593, 594, 598, 640, 651], "presenting": 593, "presently": 452, "preserv": [438, 443, 446, 457, 471, 473, 487, 497, 501, 519, 521, 528, 553, 581, 587, 594, 596, 615, 618], "preserve_allcc": [447, 549], "preserve_mostcc": [447, 549], "preserveall": 549, "preserved": [438, 457, 459, 505, 528, 530, 549, 581, 587, 593, 594, 610, 615], "preservedanalys": 584, "preservedanalysescheck": 584, "preservemost": 549, "preserving": [511, 551, 593, 594, 615, 645, 654], "press": 643, "pressur": [457, 485, 587, 594, 613], "presumably": [549, 572, 574, 581], "presumed": [567, 574], "pretty": [445, 484, 498, 519, 545, 551, 556, 557, 560, 561, 577, 579, 594, 595, 599, 603, 604, 608, 615, 636, 637, 638, 639, 640, 641, 642, 647, 648, 649, 650, 651, 652, 653], "prettyprinter": 579, "prev": 579, "prevail": 468, "prevent": [440, 443, 457, 487, 497, 501, 502, 505, 508, 514, 518, 526, 530, 549, 563, 567, 577, 579, 581, 587, 591, 592, 593, 594, 596, 598, 599, 609, 613, 615, 624, 625, 642, 643, 644, 653], "prevented": [440, 577, 581, 594], "preventing": [440, 460, 509, 518, 594, 638, 649], "previous": [440, 444, 446, 447, 457, 459, 460, 468, 485, 490, 505, 506, 509, 512, 536, 539, 542, 548, 549, 556, 561, 562, 565, 575, 579, 587, 588, 592, 594, 598, 604, 614, 615, 618, 619, 621, 623, 638, 639, 640, 641, 642, 643, 644, 646, 648, 649, 651, 652, 653], "previously": [440, 447, 455, 460, 473, 487, 501, 509, 511, 513, 536, 542, 549, 551, 570, 574, 578, 581, 587, 594, 598, 604, 608, 614, 639, 640, 649], "prf": 485, "prim": [85, 453, 455, 583, 595, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "primarily": [457, 464, 471, 476, 480, 498, 505, 518, 521, 538, 547, 548, 551, 555, 577, 579, 594, 603, 641, 652], "primary": [443, 456, 457, 458, 509, 511, 518, 549, 551, 559, 564, 567, 577, 579, 591, 594, 597, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "primaryexpr": [439, 637, 648], "primaryfunctionid": 513, "primit": [85, 444, 459, 501, 519, 549, 555, 561, 566, 579, 591, 594, 618, 641, 645, 652, 654], "princeton": 583, "principl": [503, 540, 561, 584, 593, 599, 646, 647], "print": [456, 457, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 490, 497, 498, 499, 500, 501, 505, 512, 514, 518, 521, 523, 539, 544, 548, 549, 551, 557, 560, 579, 587, 589, 593, 601, 603, 605, 607, 608, 613, 619, 637, 638, 639, 640, 641, 642, 643, 644, 646, 648, 649, 650, 651, 652, 653], "print_endlin": [648, 649, 650, 651, 652, 653], "print_final_stat": 551, "print_float": [650, 651, 652, 653], "print_list": 456, "print_newlin": [650, 651, 652, 653], "print_pc": 551, "print_string": [648, 649, 650, 651, 652, 653], "printabl": [496, 549, 555, 601, 614], "printccoperand": 614, "printd": [639, 640, 641, 642, 643, 644, 645, 652, 653, 654], "printdatadirect": 614, "printdeclar": 614, "printdensity": [641, 652], "printed": [443, 457, 459, 468, 470, 473, 474, 478, 479, 485, 486, 498, 501, 512, 542, 544, 555, 564, 579, 587, 614, 615, 619], "printer": [453, 548, 557, 579, 643], "printexprresult": 625, "printf": [440, 451, 506, 514, 521, 523, 535, 549, 552, 579, 593, 625, 639, 640, 641, 642, 643, 644, 652, 653], "printformattedfil": 579, "printfunctionpass": 577, "printimplicitdef": 614, "printinformationalmessag": 501, "printing": [456, 459, 468, 478, 484, 485, 488, 498, 518, 555, 579, 587, 614, 615], "printinlineasm": 614, "printinstruct": [601, 614], "printlabel": 614, "printmemoperand": 614, "printmethod": 614, "printnextinstruct": 579, "printoperand": 614, "printout": [499, 579], "printstar": [640, 651], "printsth": 577, "prior": [440, 447, 457, 487, 501, 505, 506, 509, 511, 521, 547, 548, 549, 584, 594, 610, 615], "priorit": 549, "prioritiz": 485, "priority": [439, 440, 489, 502, 519, 542, 549, 590, 593], "priority_queu": 579, "pris": 620, "priv": 440, "privat": [439, 440, 447, 488, 505, 516, 537, 543, 548, 549, 561, 562, 567, 579, 587, 590, 593, 594, 601, 614, 621, 622, 623, 624, 625], "private_bas": 439, "private_lim": 439, "private_segment_alignment": 440, "private_segment_fixed_siz": 440, "privately": 509, "privatesegmentfixedsiz": 440, "privileg": [440, 549, 599, 621], "privileged": 594, "prng": 551, "pro": 440, "proactiv": 509, "proactively": 451, "prob": 549, "probabilistic": 536, "probabilistically": 536, "probabilit": [448, 473], "probability": [485, 509, 536, 555], "probabl": 549, "probably": [440, 457, 459, 470, 501, 502, 509, 510, 514, 518, 519, 538, 549, 579, 580, 581, 583, 597, 598, 637, 640, 645, 648, 651, 654], "probed": 579, "probing": [457, 549, 579], "problem": [443, 450, 451, 452, 457, 459, 460, 461, 501, 509, 514, 516, 517, 518, 519, 530, 534, 538, 540, 541, 542, 544, 547, 549, 550, 564, 567, 572, 576, 577, 579, 581, 582, 584, 587, 591, 593, 594, 598, 599, 609, 638, 640, 641, 645, 649, 651, 652, 654], "problematic": [459, 485, 509, 581], "proc": [445, 521, 538, 614], "proccess": 551, "procedur": [446, 501, 503, 542, 550, 561, 579, 580, 594], "procedural": [449, 516, 549, 550, 587, 597, 636, 647], "proceed": [455, 505, 511, 518, 524, 542, 550, 561, 563, 579, 585, 588, 594], "proceeding": [457, 502, 518], "process": [440, 442, 443, 444, 445, 451, 452, 453, 459, 485, 488, 489, 501, 502, 506, 507, 509, 510, 511, 518, 521, 529, 530, 536, 538, 539, 544, 546, 548, 549, 551, 552, 554, 564, 565, 577, 578, 579, 581, 584, 586, 591, 593, 598, 599, 605, 609, 613, 614, 615, 619, 620, 621, 623, 624, 636, 637, 639, 645, 647, 648, 650, 654, 655], "processed": [448, 455, 456, 457, 460, 484, 485, 490, 513, 551, 552, 565, 577, 605, 615, 619, 636], "processformattedfil": 579, "processing": [459, 500, 501, 503, 511, 521, 549, 589, 594, 598, 605, 614, 616, 636, 647], "processor": [446, 455, 457, 466, 485, 501, 518, 521, 524, 549, 593, 594, 601, 605, 613, 614, 643], "processrelocationref": 554, "procnoitin": 605, "procsym": 513, "produc": [438, 439, 440, 444, 446, 451, 452, 455, 457, 459, 460, 461, 462, 464, 465, 470, 475, 476, 485, 487, 489, 499, 506, 510, 511, 514, 517, 518, 519, 521, 525, 529, 535, 544, 548, 549, 557, 560, 561, 567, 569, 571, 572, 574, 577, 579, 585, 587, 589, 593, 597, 598, 599, 601, 603, 609, 614, 615, 619, 621, 622, 639, 640, 642, 650, 651, 653, 654], "produced": [440, 444, 447, 457, 470, 473, 476, 485, 505, 509, 511, 518, 529, 549, 551, 560, 563, 579, 589, 593, 598, 607, 613, 618, 619, 622, 638, 649], "producer": [511, 519, 557, 569, 593], "producing": [444, 445, 457, 494, 521, 525, 541, 547, 549, 593, 598, 644], "product": [440, 448, 457, 458, 462, 485, 490, 509, 518, 536, 542, 549, 559, 561, 586, 589, 604, 615, 623, 637, 641, 648, 652], "prof": [448, 449, 539, 558], "profdat": [442, 455, 463, 473, 506, 539, 549, 607], "professional": [504, 509], "profil": [442, 449, 453, 463, 473, 479, 492, 493, 506, 515, 516, 540, 555, 578, 580, 587, 589, 612, 618], "profiled": [490, 549, 580], "profiledat": 549, "profiler": 440, "profiling": [449, 453, 455, 473, 506, 515, 516, 539, 549, 593], "profit": [457, 502, 515, 516, 549, 577, 594, 610, 613], "profraw": [442, 473, 506, 539], "progbit": [513, 594], "program": [439, 443, 444, 445, 451, 452, 455, 456, 459, 460, 461, 463, 464, 468, 471, 473, 480, 483, 485, 487, 489, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 506, 507, 509, 510, 515, 516, 517, 518, 520, 521, 523, 524, 535, 536, 540, 542, 544, 549, 550, 551, 552, 559, 562, 563, 565, 567, 572, 574, 575, 576, 577, 579, 583, 586, 589, 591, 593, 594, 596, 597, 598, 599, 601, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 625, 637, 639, 642, 643, 644, 645, 647, 648, 650, 653, 654], "programm": [440, 444, 451, 457, 459, 499, 501, 503, 504, 518, 522, 543, 604, 610, 615, 621, 641, 644, 652, 654], "programmatic": [490, 518, 616], "programmatically": [457, 562, 603, 616, 619, 641, 652], "programmer": [502, 594, 613], "programmersmanual": 621, "programming": [457, 459, 465, 502, 503, 511, 518, 519, 543, 549, 562, 579, 593, 599, 619, 639, 640, 642, 644, 645, 650, 651, 653, 654], "progress": [440, 441, 444, 455, 457, 464, 485, 503, 505, 509, 518, 542, 549, 550, 555, 579, 584, 616], "progressively": 647, "prohib": 560, "prohibit": [444, 552, 594], "prohibitively": 594, "proj": 542, "proj_install_root": 580, "proj_obj_root": 580, "proj_src_root": 580, "project": [442, 453, 458, 459, 463, 464, 503, 504, 510, 512, 514, 516, 517, 520, 523, 539, 540, 541, 542, 551, 563, 578, 579, 582, 583, 584, 589, 590, 591, 593, 594, 596, 598, 607, 608, 609, 615, 616, 620, 621, 622, 623, 624, 625, 646, 647], "project_nam": 580, "projected": 505, "projector": 558, "prolang": 608, "prolifer": 584, "prolog": [549, 550, 594, 614], "prologepilog": 589, "prologu": [440, 447, 457, 465, 518, 587, 592, 593, 614, 644], "prologue_end": 513, "prologuedat": 447, "prominent": 607, "promis": [509, 616], "promot": [443, 457, 502, 509, 512, 516, 549, 550, 564, 593, 642, 644, 653], "promoted": [457, 509, 549, 579, 593, 614, 642, 653], "promoteop": 512, "promoting": [443, 457, 502, 585, 587, 642, 653], "promptly": 509, "pron": [457, 501, 538, 579, 605], "proof": [449, 555, 594], "prop": [444, 459, 464, 502, 506, 523, 527, 543, 549, 579, 587, 614, 644], "propag": [440, 501, 502, 511, 521, 549, 550, 555, 564, 587, 593, 599], "propagat": [440, 455, 457, 511, 549, 579, 587, 593, 594, 597, 598], "propagated": [579, 589, 593, 598], "propagating": [525, 549, 593], "properly": [439, 441, 443, 444, 450, 451, 454, 457, 462, 501, 502, 504, 513, 520, 521, 548, 549, 578, 639, 642, 653], "propert": [436, 443, 446, 447, 457, 485, 487, 501, 505, 518, 523, 546, 548, 549, 555, 560, 561, 567, 577, 579, 594, 596, 597, 601, 605, 610, 614, 642, 653], "property": [440, 441, 443, 444, 446, 447, 452, 459, 462, 501, 506, 509, 512, 523, 528, 530, 548, 549, 574, 579, 581, 593, 598, 610, 639, 642, 645, 653, 654], "property_nam": 548, "property_valu": 548, "proponent": 584, "proport": 527, "proportional": [490, 501], "propos": [452, 551, 581, 594, 617], "proposal": [452, 516, 533, 582, 584, 585, 620], "proposed": [448, 452, 509, 581, 594], "proposing": [452, 516, 581, 594], "pros": [446, 459], "prospectively": 509, "protect": [444, 454, 509, 549, 551, 590, 594, 599], "protected": [444, 447, 454, 457, 459, 487, 549, 581, 594, 614], "protectfilecheckoutput": 609, "protecting": [509, 594], "protector": [549, 593], "proto": [624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "protoast": [638, 639, 640, 641, 642, 643, 644], "protobuf": 517, "protocol": [505, 517, 549, 581, 598], "prototyp": [480, 505, 512, 536, 549, 586, 591, 614, 615, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "prototypeast": [624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "prototyped": 459, "prototyping": 516, "prov": [443, 516, 536, 547, 549, 561, 577, 594], "proven": [440, 486, 509, 516, 530, 549, 559, 577, 598, 642, 653], "provid": [14, 112, 196, 344, 436, 439, 440, 442, 443, 444, 447, 449, 453, 454, 455, 456, 457, 464, 470, 471, 478, 479, 485, 493, 499, 501, 502, 504, 505, 506, 507, 509, 510, 511, 513, 516, 518, 519, 520, 521, 523, 524, 527, 534, 536, 537, 538, 548, 549, 550, 551, 552, 553, 554, 557, 558, 560, 562, 563, 564, 569, 575, 577, 579, 580, 581, 582, 586, 587, 589, 590, 593, 594, 596, 598, 599, 601, 604, 608, 612, 614, 615, 616, 618, 619, 621, 622, 623, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 653, 654], "provided": [440, 441, 443, 444, 453, 454, 455, 456, 457, 460, 461, 464, 473, 478, 479, 485, 487, 498, 501, 505, 508, 509, 511, 513, 516, 518, 519, 521, 524, 527, 532, 540, 549, 550, 551, 552, 559, 562, 563, 574, 579, 580, 587, 589, 593, 594, 596, 598, 599, 603, 612, 613, 614, 615, 616, 619, 638, 649], "providing": [443, 452, 456, 464, 501, 504, 509, 511, 516, 518, 536, 543, 549, 551, 563, 579, 589, 590, 591, 593, 594, 596, 603, 615, 616, 617, 620, 622], "proving": 577, "provis": 509, "proviso": 509, "proxy": 457, "proxyapp": 583, "prun": [581, 585], "pruned": [560, 577], "pruneexpir": 581, "pruning": [452, 616], "pr\u00e9sent": 620, "psab": [503, 587], "pse": 584, "pseudo": [446, 448, 457, 500, 505, 527, 548, 549, 555, 563, 579, 593, 594, 601, 614, 615], "pseudocod": [536, 614], "pseudonym": 590, "pseudos": [527, 593], "pstl": [455, 581], "psubus": 609, "psubusw": 609, "pt": 583, "pthread": [502, 549, 582, 591], "pthread_attr_t": 549, "pthread_creat": 549, "ptr": [440, 444, 459, 505, 515, 566, 579, 596, 611, 614], "ptr0": [525, 549], "ptr1": 549, "ptr2": 549, "ptr3": 549, "ptr64": 440, "ptr7": 549, "ptr_is_null": 515, "ptr_rc": 457, "ptra": 562, "ptrb": 562, "ptrc": 562, "ptrloc": [518, 549], "ptroff": 457, "ptrreg": 457, "ptrtoint": [516, 598], "ptrtoreplacedint": 579, "ptrty": 549, "ptrval": 549, "ptx": [457, 502, 503], "ptx30": 457, "ptx31": 457, "ptxas": 502, "ptxstring": 562, "pty": 549, "pty2": 549, "pub": 593, "public": [453, 456, 459, 489, 501, 509, 517, 518, 520, 521, 537, 543, 548, 562, 567, 575, 588, 590, 593, 594, 611, 614, 615, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "publicly": [509, 579, 590, 593], "publicstreamindex": 567, "publiqu": 583, "publish": 588, "published": [502, 575, 579, 584], "pubnam": [478, 593], "pubtyp": [478, 593], "pugixml": 551, "pull": [438, 444, 450, 521, 578, 581], "pulled": [457, 581], "puls": 551, "punctuat": [459, 549, 604], "pur": [550, 577, 585, 593, 598], "purely": [444, 451, 457, 509, 548, 577, 604, 614, 638, 649], "purify": 544, "purpos": [440, 446, 453, 457, 459, 485, 487, 489, 501, 502, 505, 508, 509, 511, 516, 519, 521, 524, 527, 549, 561, 562, 563, 564, 567, 571, 572, 577, 579, 584, 588, 591, 593, 594, 597, 598, 599, 601, 602, 605, 615, 618, 621, 638, 639, 644], "pursued": 594, "push": [459, 518, 521, 549, 578, 581, 644], "push_back": [459, 579, 614, 619, 637, 638, 639, 640, 641, 642, 643, 644], "pushed": [451, 454, 457, 549, 581], "pushf": [457, 594], "pushfl": 457, "pushfq": [457, 594], "pushing": [549, 581], "pushq": [594, 598], "put": [440, 443, 451, 457, 458, 459, 460, 501, 506, 507, 515, 518, 526, 540, 542, 549, 556, 561, 563, 577, 578, 579, 581, 593, 594, 609, 615, 619, 639, 640, 642, 644, 647, 651, 653], "putchar": [639, 640, 641, 642, 643, 644, 650, 651, 652, 653], "putchard": [639, 640, 641, 642, 643, 644, 645, 650, 651, 652, 653, 654], "putting": [444, 445, 459, 510, 511, 521, 524, 525, 549, 563, 579, 581, 594, 609, 639, 645, 654], "puzzl": 544, "pv": 505, "pwd": [521, 541, 591], "py": [464, 504, 537, 539, 579, 581, 587, 607, 614], "pygment": [556, 638], "pynamic": 583, "python": [464, 505, 518, 521, 523, 541, 551, 579, 581, 584, 588, 595, 601, 604, 607, 609, 645, 654], "python2": 538, "python_execut": 521, "q": [464, 468, 501, 535, 549], "q0": [446, 549], "q1": 509, "q15": 549, "q2": 509, "q3": [509, 549], "q31": 549, "q7": 549, "qch": 455, "qea": 511, "qemu": 551, "qhelpgenerator": 455, "qmcpack": 583, "qnan": 549, "qp": 594, "qpx": 549, "qspectr": 594, "qt": [455, 584], "qt_coding_styl": 584, "quad": [438, 439, 549, 594, 598, 614], "quad_perm": [438, 440], "quadr": 440, "quadratic": [457, 465, 560, 579], "quadratically": 579, "qualif": 553, "qualifi": [440, 457, 519, 549, 566], "qualified": [440, 542, 549, 565, 593], "qualify": [542, 549], "quality": [452, 457, 478, 485, 516, 530, 538, 542, 549, 609, 615, 621, 623], "qualtyp": 459, "quantity": [485, 549], "quarantin": 591, "quarantinechunksuptosiz": 591, "quarantined": 591, "quarantinesizekb": 591, "quartil": 594, "quentin": 533, "quer": [440, 443, 459, 485, 516, 534, 560, 577, 579, 645, 654], "queried": [457, 505, 560, 579, 613, 614], "query": [443, 444, 489, 501, 545, 546, 549, 560, 563, 564, 579, 593, 614, 615, 617, 622], "query_sampl": 440, "querying": [546, 549, 560, 575, 579], "question": [443, 450, 504, 509, 516, 519, 520, 521, 523, 524, 543, 549, 551, 556, 561, 578, 579, 580, 582, 584, 586, 587, 593, 595, 602, 610, 637, 640, 642, 645, 648, 651, 653, 654], "questional": [645, 654], "queu": [485, 563, 579, 614, 615, 616], "queue_ptr": 440, "queued": 440, "queuing": 440, "quick": [443, 451, 459, 468, 485, 509, 516, 519, 538, 541, 559, 560, 577, 578, 588, 590, 593, 622, 639, 645, 650, 654], "quickcheck": 579, "quickest": 536, "quickly": [443, 451, 457, 459, 468, 501, 504, 511, 521, 522, 523, 544, 549, 551, 560, 565, 576, 579, 584, 593, 599, 609, 616, 622], "quicksilv": 583, "quickstart": [520, 541, 556], "quiet": [440, 464, 478, 501, 507, 525, 549, 593], "quiet2": 501, "quieted": 549, "quieting": [440, 549], "quirk": [456, 598], "quirky": 452, "quit": [443, 457, 460, 502, 507, 512, 516, 518, 519, 521, 549, 556, 561, 579, 594, 595, 596, 599, 623, 638, 640, 645, 649, 651, 654], "quot": [455, 501, 549, 551, 593, 609, 619], "quoted": [440, 549, 555, 603, 609], "quotient": 549, "quoting": [501, 548, 609], "quotingtyp": 619, "quux": 459, "qux": 549, "qx": 446, "r": [445, 457, 460, 468, 475, 478, 485, 486, 487, 488, 490, 492, 493, 497, 507, 508, 513, 518, 537, 542, 543, 549, 561, 562, 566, 571, 579, 581, 598, 603, 604, 614, 622, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "r0": [457, 460, 549, 555, 557, 603, 614], "r1": [457, 460, 549, 555, 562, 579, 581, 603, 614], "r10": [457, 479, 562, 592, 605], "r10b": 605, "r10d": 605, "r10w": 605, "r11": [549, 592, 596, 605], "r11b": 605, "r11d": 605, "r11w": 605, "r12": [457, 513, 549, 605], "r1234": 581, "r12345": 542, "r123456": 581, "r128": [55, 140, 240], "r12b": 605, "r12d": 605, "r12w": 605, "r13": [457, 605], "r13b": 605, "r13d": 605, "r13w": 605, "r14": [457, 549, 605], "r14b": 605, "r14d": 605, "r14w": 605, "r15": [457, 549, 555, 605], "r15b": 605, "r15d": 605, "r15w": 605, "r173931": 601, "r2": [457, 460, 549, 555, 579, 581, 603], "r258109": 581, "r285": 440, "r3": [457, 460, 549, 562, 581, 603], "r31": [457, 549], "r341082": 551, "r342924": 502, "r369789": 587, "r370957": 587, "r390": 440, "r390x": 440, "r4": [457, 460, 513], "r5": [457, 460], "r6": [457, 460], "r600": 440, "r630": 440, "r6xx": 440, "r7": [440, 457, 460, 549], "r700": 440, "r7xx": 440, "r8": [457, 479, 549, 594, 596, 605], "r8b": 605, "r8d": 605, "r8w": 605, "r9": [440, 457, 562, 596, 605], "r9b": 605, "r9d": 605, "r9w": 605, "r_386_8": 513, "r_amdgpu_abs32": 440, "r_amdgpu_abs32_h": 440, "r_amdgpu_abs32_lo": 440, "r_amdgpu_abs64": 440, "r_amdgpu_gotpcrel": 440, "r_amdgpu_gotpcrel32_h": 440, "r_amdgpu_gotpcrel32_lo": 440, "r_amdgpu_non": 440, "r_amdgpu_rel32": 440, "r_amdgpu_rel32_h": 440, "r_amdgpu_rel32_lo": 440, "r_amdgpu_rel64": 440, "r_amdgpu_relative64": 440, "r_arm_thm_movw_abs_nc": 541, "r_offset": 440, "r_x86_64_8": 513, "ra": [466, 587, 593], "rac": [440, 444, 458, 505, 549, 579, 591, 609], "racist": 458, "radams": 551, "radare2": 551, "radeon": 440, "radically": [457, 534], "radius": 543, "radix": [457, 459, 486, 494, 496, 549], "rag": 470, "rai": 505, "rais": [450, 451, 511, 518, 525, 549, 579, 594, 598, 647, 648, 649, 650, 651, 652, 653], "raised": [549, 577, 581, 598, 648], "raising": [511, 648], "rajaperf": 583, "ram": [537, 551], "ramif": 519, "ramp": 505, "ramsey": 457, "ran": [473, 594, 615], "rand": 551, "random": [451, 459, 463, 464, 509, 549, 551, 559, 579, 583], "randomiz": [445, 461], "randomize_va_spac": 445, "randomized": 451, "randomly": [459, 495, 536, 616], "rang": [11, 16, 40, 41, 46, 70, 87, 103, 109, 113, 130, 131, 133, 150, 175, 189, 193, 197, 225, 226, 227, 231, 253, 272, 286, 341, 346, 370, 371, 372, 376, 400, 419, 435, 438, 439, 440, 443, 448, 451, 457, 458, 464, 465, 478, 484, 485, 489, 501, 505, 508, 511, 513, 516, 518, 519, 526, 543, 563, 585, 593, 598, 603, 613, 615, 620, 639, 641, 646, 647, 650, 652], "rangeend": 513, "rangelist": 604, "rangepiec": 604, "rangestart": 513, "ranging": [490, 549], "rank": 577, "ranlib": [463, 468, 521, 535, 540], "rapaport": 585, "rapid": [509, 594], "rar": [447, 457, 458, 459, 460, 515, 518, 526, 549, 574, 579, 594, 603], "rarely": [457, 459, 511, 516, 524, 541, 549, 579, 614], "rat": [447, 470, 485, 504, 509, 536, 551, 581], "rath": [440, 443, 447, 448, 452, 457, 458, 459, 460, 462, 464, 468, 473, 496, 498, 502, 509, 510, 514, 516, 518, 519, 521, 523, 524, 529, 536, 538, 549, 551, 563, 564, 567, 569, 577, 579, 581, 582, 585, 587, 588, 593, 594, 598, 604, 609, 614, 621, 622, 623, 637, 638, 644, 648], "ratio": [448, 594], "rational": [457, 509, 524, 612], "rauw": [550, 561, 579, 593], "raven": 440, "raw": [457, 469, 473, 477, 480, 482, 485, 487, 488, 489, 492, 493, 499, 501, 505, 506, 513, 539, 545, 554, 557, 601, 608, 617, 638], "raw_fd_ostream": 643, "raw_ostream": [457, 512, 579, 615, 617, 619, 623, 624, 625, 643, 644], "raw_string_ostream": [623, 624, 625], "rawfrm": [603, 614], "rax": [457, 549, 555, 594, 596, 598, 605, 614], "rbp": [457, 605], "rbx": [457, 605], "rc": [542, 588], "rc1": 588, "rc2": 588, "rcn": [542, 588], "rcp_iflag_f32": 440, "rcu": 485, "rcx": [457, 549, 594, 605], "rd": [513, 614], "rdi": [457, 479, 513, 549, 555, 593, 594, 596, 605], "rdna": 440, "rdtsc": 549, "rdx": [457, 594, 596, 598, 605], "rdynamic": [639, 641, 652, 653], "re": [443, 446, 450, 455, 456, 457, 458, 459, 460, 461, 501, 502, 504, 509, 511, 514, 516, 517, 518, 521, 524, 528, 534, 535, 536, 538, 539, 541, 542, 544, 549, 551, 553, 554, 560, 561, 563, 572, 576, 578, 579, 581, 585, 587, 588, 593, 594, 595, 598, 599, 601, 602, 604, 605, 608, 609, 615, 616, 617, 621, 623, 624, 625, 638, 639, 640, 642, 643, 644, 645, 647, 649, 650, 651, 653, 654], "reach": [459, 485, 509, 511, 549, 553, 558, 560, 561, 563, 590, 594, 596], "reachability": [518, 550, 553], "reachabl": [455, 518, 549, 553, 594, 598], "reached": [459, 485, 505, 515, 542, 548, 549, 551, 561, 564, 577, 579, 614], "reaching": [505, 560, 585], "react": 450, "read": [28, 29, 30, 31, 32, 40, 51, 52, 58, 121, 122, 123, 124, 137, 141, 210, 211, 212, 213, 214, 215, 216, 217, 225, 236, 237, 241, 358, 359, 360, 361, 362, 370, 381, 382, 388, 438, 439, 440, 443, 444, 446, 447, 451, 455, 456, 457, 459, 460, 463, 465, 466, 468, 469, 470, 473, 474, 476, 477, 478, 479, 480, 485, 486, 487, 488, 489, 490, 494, 496, 497, 498, 499, 500, 501, 505, 507, 509, 510, 512, 513, 514, 515, 520, 521, 523, 539, 549, 551, 555, 556, 561, 567, 569, 577, 579, 593, 594, 595, 596, 597, 598, 601, 604, 605, 609, 613, 614, 618, 619, 621, 622, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 652, 653, 654], "read_async": 505, "read_only": 440, "read_writ": 440, "readability": [444, 459, 579, 584, 619], "readabl": [439, 441, 444, 454, 457, 469, 470, 473, 477, 478, 482, 484, 490, 498, 513, 521, 536, 549, 555, 556, 567, 577, 579, 584, 593, 615, 619, 638], "readandmaybemodify": 551, "readattribut": 601, "readelf": [463, 486, 488], "reader": [618, 621, 622], "readily": 530, "reading": [443, 447, 457, 459, 470, 474, 489, 501, 503, 507, 509, 521, 523, 544, 549, 561, 567, 575, 578, 579, 584, 593, 594, 616, 618, 619, 636, 638, 639, 640, 641, 642, 643, 644, 647], "readjustment": 457, "readm": [509, 521, 556, 581, 584, 595, 607, 609], "readnon": [447, 516, 549, 562, 577, 593, 598, 611], "readobj": [463, 486, 488, 492, 579, 587, 593], "readonly": [440, 447, 479, 487, 516, 549, 560, 577, 593, 596, 598, 617], "readthedoc": 556, "readtscp": 618, "readwrit": 440, "ready": [485, 501, 504, 505, 509, 535, 542, 554, 558, 561, 593, 615, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653], "readyset": 485, "real": [436, 443, 445, 460, 479, 485, 487, 497, 501, 513, 524, 549, 551, 562, 567, 574, 579, 590, 593, 605, 614, 636, 641, 646, 652], "realign": 525, "realigned": 587, "realignment": 549, "realistic": [518, 594, 603, 637, 648], "reality": 542, "realiz": [509, 512, 641, 652], "realized": 650, "realloc": [443, 536, 579], "reallocated": 443, "really": [442, 444, 455, 459, 501, 502, 509, 512, 514, 519, 521, 523, 524, 549, 551, 556, 560, 572, 574, 577, 578, 579, 593, 595, 603, 604, 608, 609, 636, 638, 639, 640, 641, 642, 644, 645, 647, 649, 650, 651, 652, 653, 654], "reallyhidden": 501, "realmag": [641, 652], "realpred": 549, "realstart": [641, 652], "ream": 584, "reamesconcern": 584, "reapply": 509, "rearranging": 550, "reason": [441, 443, 444, 449, 450, 453, 455, 456, 457, 459, 501, 505, 509, 511, 512, 515, 518, 519, 521, 527, 530, 534, 536, 541, 543, 548, 549, 551, 553, 556, 559, 560, 561, 563, 566, 569, 579, 582, 583, 589, 590, 591, 592, 593, 594, 595, 598, 601, 603, 609, 610, 615, 621, 623, 637, 638, 639, 640, 642, 644, 647, 648, 649, 650, 651, 653], "reasonably": [521, 579, 594, 599], "reasoning": [444, 459, 509, 516, 529, 598], "reassoc": 549, "reassoci": [549, 550, 639, 650], "reassociat": [639, 640, 641, 642, 650, 651, 652, 653], "reassur": 551, "rebas": [488, 521, 578, 581], "rebasing": 488, "rebuild": [442, 455, 462, 539, 596, 617], "rec": [647, 648, 649, 650, 651, 652, 653], "recall": [561, 619, 638, 639, 640, 649, 650], "recap": 446, "receipt": 590, "receiv": [447, 456, 457, 511, 517, 537, 549, 551, 579, 590, 594, 610, 623], "received": [439, 504, 516, 554, 648], "receivedterminat": 625, "receiving": 605, "recent": [455, 468, 504, 510, 521, 549, 551, 558, 574, 588, 591, 639], "recently": [455, 509, 511, 518, 521, 549, 578, 588, 594, 619], "recept": 509, "recheck": 577, "rechecked": 561, "recherch": 620, "recip": [540, 581, 585], "recipient": 509, "reciprocal": [485, 549], "reclaim": 550, "reclaimed": [549, 563], "recognis": 579, "recogniz": [445, 457, 501, 549, 552, 561, 579, 594, 608, 636, 640, 644, 647, 651], "recognized": [498, 501, 549, 604], "recognizing": 577, "recombin": 621, "recommend": [459, 485, 502, 509, 518, 521, 531, 536, 547, 549, 551, 558, 576, 615, 637, 639, 642, 643, 648, 650, 653], "recommended": [453, 455, 456, 457, 464, 516, 518, 519, 521, 529, 535, 539, 540, 547, 549, 551, 558, 562, 578, 594, 598, 609, 610], "recommonmark": 556, "recompil": 515, "recompiled": [446, 596], "recompiling": [443, 623, 640, 651], "recomput": [443, 579], "recomputed": 579, "recomputing": 615, "reconfigured": 537, "reconfiguring": 548, "reconstituted": 549, "reconstituting": 529, "reconstruct": [519, 569, 616, 618], "reconstructed": [468, 489], "reconstructing": 593, "record": [441, 450, 465, 466, 486, 490, 493, 499, 500, 509, 549, 558, 567, 570, 571, 572, 575, 578, 585, 589, 590, 593, 596, 598, 601, 603, 604, 605, 613, 617, 638, 639, 640, 641, 642, 643, 644, 645, 654], "record_kind": 618, "record_meta_container_info": 589, "record_meta_external_fil": 589, "record_meta_remark_vers": 589, "record_meta_strtab": 589, "record_remark_arg_with_debugloc": 589, "record_remark_arg_without_debugloc": 589, "record_remark_debug_loc": 589, "record_remark_head": 589, "record_remark_hotness": 589, "recorded": [440, 465, 536, 593, 596, 598, 618], "recordhead": 566, "recordid": 447, "recording": [593, 616], "recordkind": 566, "recordlen": 566, "recouped": 447, "recov": [460, 511, 536, 549, 579, 593, 596], "recover": 459, "recovered": 593, "recovering": [515, 549], "recovery": [579, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "recreat": 619, "recreated": 549, "recurrent": [508, 577, 585], "recurs": [478, 489, 536, 549, 577, 579, 593, 594, 598, 601, 636, 637, 638, 641, 642, 646, 647, 648, 649, 652, 653, 654], "recursing": [489, 647], "recursively": [460, 464, 518, 637, 638, 640, 648, 649, 651], "recycl": [457, 591], "recycling": 616, "red": [549, 594], "redefin": [487, 638, 641, 649, 652], "redefined": 638, "redefining": [603, 642, 653], "redefinit": [502, 621, 638, 642, 649, 650, 651, 652, 653], "redesign": [452, 520], "redhat": 576, "redirect": [461, 478, 479, 536, 542, 549, 609, 611, 644], "redirected": [551, 609], "redirecting": 644, "rediscov": [645, 654], "redistribu": 509, "redistribut": 509, "redo": 561, "reduc": [445, 451, 452, 453, 454, 455, 456, 457, 459, 461, 480, 501, 502, 506, 509, 510, 519, 544, 546, 550, 551, 561, 563, 579, 586, 587, 588, 591, 594, 605, 615, 624, 639, 644, 646, 650], "reduce_input": 551, "reduced": [451, 461, 509, 544, 549, 587, 621], "reducing": [452, 505, 509, 529, 562, 563, 577, 581, 585, 588, 591], "reduct": [440, 451, 452, 459, 463, 466], "redund": [462, 501, 516, 524, 526, 564, 579, 581, 593, 598, 623, 639, 650], "redundanc": 457, "redundancy": [502, 550, 579], "redwin": 457, "redwood": 440, "reevaluated": 604, "reexport": 563, "reextern": [649, 650, 651, 652, 653], "ref": [439, 440, 443, 456, 457, 459, 464, 503, 505, 511, 538, 542, 551, 553, 559, 560, 562, 565, 566, 567, 570, 574, 575, 579, 581, 584, 588, 589, 593, 596, 598, 603, 607, 609, 614, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "refactor": 584, "refactoring": [459, 509, 550, 581, 584, 587, 642, 653], "refcount": 518, "refer": [439, 442, 446, 456, 505, 542, 549, 550, 563, 564, 567, 571, 579, 585, 593, 598, 614, 642, 643, 644, 653], "refered": 581, "referenced": [439, 440, 447, 498, 501, 502, 535, 549, 550, 552, 555, 561, 565, 567, 574, 579, 589, 591, 593, 603, 604, 611, 614, 622, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "referencing": [549, 555, 561, 579, 621, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "referent": [436, 437, 439, 440, 443, 447, 448, 451, 455, 456, 457, 459, 460, 461, 466, 487, 497, 503, 504, 505, 506, 509, 511, 513, 514, 519, 526, 528, 530, 536, 543, 545, 550, 554, 557, 560, 561, 562, 563, 565, 566, 567, 574, 575, 578, 587, 593, 601, 603, 605, 607, 609, 610, 612, 614, 615, 618, 619, 620, 621, 622, 623, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 651, 653], "referential": 577, "referred": [41, 131, 227, 372, 456, 508, 511, 513, 518, 549, 550, 560, 563, 570, 571, 574, 579, 585, 593, 596, 598, 599, 601, 603, 609], "referring": [505, 513, 518, 549, 563, 579, 593, 594, 615], "refill": 561, "refin": [443, 549, 579, 584, 621], "refined": [457, 579], "reflect": [439, 440, 443, 534, 542, 549, 552, 563, 584, 593, 614, 615, 641, 652], "reflected": [509, 593], "reflexivity": 561, "reflog": 581, "reflogexpir": 581, "reflogexpireunreach": 581, "refnam": 581, "reformat": [557, 584], "reformatting": [459, 584], "reformulated": 443, "refrain": [542, 549, 590], "refresh": 552, "refreshed": 526, "refs_to_clean": 581, "refspec": 581, "refus": [455, 469, 477, 480, 482, 499, 577, 594], "reg": [40, 130, 225, 370, 457, 460, 479, 488, 555, 557, 562, 579, 596, 603, 614], "reg1": 460, "reg1024": 457, "reg1025": 457, "reg1026": 457, "reg1027": 457, "reg2": 460, "reg_nam": 479, "reg_sequent": [524, 555], "regalloc": [457, 465, 466, 615], "regalloclinearscan": 457, "regallocregistry": 615, "regard": [444, 459, 514, 549], "regarded": [459, 547], "regarding": [468, 484, 520, 542, 589, 601], "regardless": [88, 332, 420, 443, 455, 459, 469, 477, 480, 482, 485, 496, 499, 518, 523, 549, 563, 576, 577, 593, 594, 607, 622, 642, 653], "regbankselect": 534, "regbankselected": [530, 555], "regconstraint": 457, "regenerat": 544, "regex": [473, 478, 487, 497, 501, 589, 608], "regex_replac": 464, "regexp": 464, "region": [439, 440, 447, 473, 485, 505, 511, 549, 550, 558, 581, 585, 587, 594, 596, 604, 611], "region0": 506, "region1": 506, "regioninfo": [577, 585], "regionsforfile0": 506, "regionsforfile1": 506, "regist": [8, 11, 40, 49, 76, 106, 109, 130, 135, 161, 190, 193, 225, 260, 307, 338, 341, 370, 379, 407, 437, 438, 439, 443, 444, 446, 454, 460, 461, 465, 466, 479, 485, 499, 500, 505, 509, 511, 514, 518, 521, 525, 526, 527, 528, 529, 530, 531, 532, 549, 557, 562, 564, 578, 579, 585, 587, 594, 596, 598, 601, 603, 605, 613, 615, 616, 638, 641, 642, 643, 644, 649, 652, 653], "register": [24, 35, 37, 209, 220, 222, 354, 365, 367, 439, 446, 460, 479, 485, 500, 511, 518, 525, 526, 529, 530, 532, 534, 549, 557, 577, 579, 587, 593, 594, 596, 598, 601, 603, 614, 615, 642, 644, 653], "registeralias": 601, "registeranalysisgroup": 443, "registerasmprint": 614, "registerasmstream": 457, "registerbankinfo": [524, 531], "registerclass": [457, 601, 605, 614], "registerdescriptor": 614, "registered": [441, 501, 578, 615, 616, 619, 638, 649], "registeredarg": 518, "registerehfram": [554, 625], "registerehframesinprocess": 625, "registerinfo": [457, 555, 614], "registering": [507, 537, 554, 563, 614, 649, 650, 651, 652, 653], "registerlist": 614, "registermcobjectstream": 457, "registermyp": 615, "registerpass": 615, "registerpassbuildercallback": 615, "registerpasspars": 615, "registerregalloc": 615, "registerschedul": 615, "registerstandardp": 615, "registertarget": 614, "registerwithsubreg": 614, "registr": [130, 503, 507, 514, 518, 621], "registry": [518, 615, 643], "reglist": 614, "regmapping_f": 457, "regmask": 555, "regno": 457, "regnum": 596, "regoffset": 557, "regress": [451, 460, 509, 521, 523, 530, 551, 580, 581, 588, 594], "regressed": 464, "regstat": [457, 555], "regtyp": 614, "regular": [438, 444, 452, 460, 464, 468, 473, 478, 480, 481, 483, 486, 487, 489, 497, 501, 502, 521, 549, 551, 555, 561, 581, 587, 589, 608, 619, 645, 654], "regulating": 615, "reid": 599, "reilly": 579, "reinterpret": [446, 525], "reinterpret_cast": 625, "reinterpreting": 529, "reintroduc": 594, "rej": 650, "reject": [447, 460, 501, 521, 527, 542, 549, 649, 650, 651, 652, 653], "rejecting": [645, 654], "rel": [440, 446, 453, 457, 496, 505, 509, 581, 587, 588, 594, 616, 642, 653], "rel32": 440, "rel_path_to_fil": 473, "relat": [41, 131, 227, 372, 439, 440, 443, 447, 448, 454, 455, 457, 459, 460, 464, 470, 489, 490, 498, 505, 508, 513, 518, 519, 542, 546, 557, 560, 561, 579, 580, 581, 584, 585, 587, 591, 592, 594, 596, 598], "related": [440, 443, 444, 450, 456, 457, 459, 464, 485, 487, 497, 505, 509, 511, 521, 524, 542, 546, 548, 549, 551, 558, 560, 562, 567, 577, 579, 581, 582, 586, 587, 588, 591, 593, 596, 601, 609, 614, 615, 638, 640, 649, 650], "relational": [619, 641, 652], "relationship": [440, 460, 478, 508, 511, 518, 546, 549, 561, 593, 598, 599, 614, 615, 616], "relationsip": 563, "relatively": [448, 459, 464, 490, 501, 516, 520, 521, 542, 549, 551, 560, 579, 585, 593, 594, 598, 622, 640, 644, 651], "relax": [485, 549], "relaxed": [485, 524, 530, 549, 598], "relay": 549, "relbf": 549, "releas": [440, 453, 455, 457, 459, 472, 502, 505, 509, 510, 511, 516, 520, 521, 535, 538, 539, 540, 545, 551, 576, 579, 580, 581, 589, 593, 596, 609, 614, 615, 617, 638], "release_1": 521, "release_11": 521, "release_29": 521, "release_350": 521, "release_39": 584, "release_tester": 542, "release_xx": 542, "release_xy": 542, "released": [440, 459, 509, 542, 549, 552], "releasei": 588, "releasing": [542, 588], "reles": 538, "relev": [443, 444, 457, 460, 493, 502, 505, 509, 516, 538, 539, 541, 542, 543, 546, 548, 549, 575, 576, 578, 581, 582, 585, 590, 593, 598, 616, 640, 651], "reliability": 593, "reliably": [455, 464, 515, 530, 585, 607], "relicens": 509, "relied": 549, "religion": 458, "relink": 451, "relinked": 472, "reload": [526, 551, 594, 642, 643, 644, 653], "reloaded": [457, 505, 518, 550], "reloading": 594, "reloc": [439, 457, 466, 487, 488, 492, 493, 497, 518, 541, 544, 549, 554, 555, 587, 614, 643], "reloc_absolute_dword": 614, "reloc_absolute_word": 614, "reloc_pcrel_word": 614, "reloc_picrel_word": 614, "relocat": [41, 131, 227, 372, 440, 466, 487, 549, 554, 563, 614], "relocated": [440, 498, 567, 598, 614], "relocationtyp": 614, "reloccrc": 567, "relpos": 468, "relr": [492, 493], "relwithdebinfo": [453, 455, 521, 539], "rely": [446, 448, 456, 457, 459, 505, 509, 516, 518, 519, 529, 549, 551, 563, 572, 581, 593, 598, 609, 613, 622], "relying": [552, 579, 594], "rem": 457, "remain": [440, 444, 455, 459, 460, 508, 509, 511, 518, 529, 530, 549, 564, 579, 585, 590, 593, 594, 598, 609, 621, 642, 653], "remaind": [439, 457, 505, 506, 512, 521, 548, 549, 577, 584, 594, 609, 610, 614], "remaining": [485, 505, 506, 509, 513, 542, 549, 555, 572, 577, 579, 593, 596, 598, 603, 618, 641, 652], "remainingbuffersizetoskip": 618, "remap": [532, 554], "remapped": [457, 475], "remapping": [440, 457, 463, 490], "remark": [465, 584, 612, 613], "remarkably": 451, "remarkemitt": 584, "rematerializ": 559, "rematerializing": 444, "rememb": [450, 458, 459, 501, 504, 509, 514, 519, 523, 538, 541, 549, 551, 579, 598, 608, 615, 637, 640, 642, 643, 644, 648, 651, 653], "remember": [637, 640, 648, 651], "remembered": 459, "remembering": [501, 640, 651], "remind": [542, 558, 581], "reminding": 509, "remot": [554, 581, 621, 624, 655], "remotej": 625, "remotejitutil": 625, "remoteobjectclientlai": 563, "remoteobjectserverlai": 563, "remov": [440, 443, 451, 452, 453, 457, 459, 473, 480, 487, 497, 499, 501, 505, 509, 511, 514, 516, 521, 545, 549, 550, 551, 552, 555, 561, 562, 564, 579, 581, 584, 598, 599, 609, 610, 611, 614, 615, 638, 639, 640, 641, 642, 643, 644, 645, 651, 654], "removal": [509, 563, 579], "remove_": 579, "removebranch": 614, "removed": [440, 447, 453, 455, 457, 459, 460, 462, 464, 468, 473, 477, 485, 509, 510, 511, 524, 526, 529, 542, 545, 549, 552, 553, 555, 560, 561, 563, 576, 577, 579, 587, 593, 598, 623, 639, 650], "removefromparent": 579, "removemodul": [563, 623, 624, 625, 639, 640, 641, 642], "removeobject": 563, "removing": [451, 452, 465, 468, 487, 497, 543, 549, 552, 577, 579, 598, 610, 611, 615], "renam": [451, 452, 459, 487, 521, 524, 555, 581, 584, 588, 624, 625], "renamed": [549, 563, 581, 584, 593, 600, 642, 653], "renaming": [485, 549, 579, 584], "render": [457, 527, 641, 652], "rendered": [457, 549, 579], "rendering": 617, "renseign": 130, "reopen": 450, "reord": [444, 485, 549, 593], "reordered": [440, 444, 460, 525, 598], "reordering": [440, 444, 485, 508, 549, 593], "reorganiz": [585, 619], "repack": 581, "repeat": [451, 460, 557, 561, 581, 584, 588, 593], "repeated": [440, 485, 511, 513, 530, 540], "repeatedly": [515, 549], "repeating": [530, 549, 577], "repetit": [457, 460, 479], "rephrased": [519, 549], "repl": [563, 621, 622, 625, 639], "replac": [439, 444, 457, 464, 468, 473, 474, 483, 487, 489, 491, 494, 496, 497, 498, 501, 502, 505, 509, 511, 516, 518, 521, 524, 530, 532, 535, 536, 549, 550, 551, 552, 560, 561, 562, 563, 564, 579, 581, 586, 589, 593, 594, 598, 609, 610, 611, 614, 622, 623, 624, 639, 642, 653], "replacealldbguseswith": 593, "replaceallus": 529, "replacealluseswith": [550, 561, 579], "replaced": [464, 473, 483, 486, 505, 509, 511, 516, 518, 527, 530, 549, 555, 561, 577, 579, 585, 587, 593, 598, 599, 603, 604, 609], "replaceinstwithinst": 579, "replaceinstwithvalu": 579, "replaceoperandwith": 610, "replaceusesofwith": [550, 579], "replaceusesofwithonconst": 550, "replacing": [452, 455, 505, 525, 527, 529, 530, 549, 581, 585, 587, 598, 603, 609, 621], "replay": 440, "replicat": [544, 552, 564, 585, 603], "replicated": [585, 619], "reply": [509, 542, 584], "repo": [510, 521, 575, 581, 615], "report": [440, 445, 451, 458, 464, 465, 470, 483, 485, 487, 488, 494, 496, 497, 498, 506, 517, 520, 535, 536, 539, 542, 549, 550, 551, 552, 579, 581, 588, 591, 596, 597, 603, 608, 609, 615, 638, 649], "report_fatal_error": [459, 579], "reported": [440, 443, 450, 464, 517, 518, 520, 542, 548, 549, 551, 593, 594, 598, 608, 610], "reporter": [450, 520], "reporterror": 622, "reporting": [440, 451, 458, 485, 536, 549, 563, 579, 593, 609, 610, 621], "repositor": [509, 510], "repository": [509, 510, 511, 520, 521, 541, 542, 544, 578, 583, 584, 593, 609], "represent": [438, 440, 446, 447, 448, 449, 454, 456, 457, 459, 486, 487, 489, 490, 500, 501, 504, 508, 511, 512, 515, 516, 518, 519, 521, 524, 526, 529, 530, 534, 539, 545, 550, 555, 557, 560, 562, 563, 567, 569, 574, 575, 577, 579, 581, 584, 585, 586, 587, 593, 594, 596, 601, 603, 604, 605, 607, 611, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654], "represented": [440, 443, 444, 446, 447, 449, 456, 485, 501, 505, 508, 511, 512, 513, 514, 524, 545, 549, 555, 560, 562, 566, 574, 577, 579, 581, 585, 593, 598, 601, 603, 604, 611, 619, 638, 649], "representing": [41, 131, 227, 372, 439, 443, 447, 460, 464, 485, 487, 505, 508, 511, 514, 516, 518, 524, 525, 545, 549, 563, 567, 571, 574, 577, 579, 585, 589, 593, 594, 598, 601, 614], "reprimand": 590, "reproduc": [450, 451, 459, 504, 509, 544, 551, 609, 642, 653], "reproduced": [450, 542], "reproducibl": [450, 510], "reproducing": [451, 564], "repurpos": 593, "reqd_work_group_siz": 440, "reqd_workgroup_siz": 440, "reqdworkgroupsiz": 440, "request": [52, 237, 382, 440, 450, 468, 504, 509, 511, 521, 529, 551, 552, 563, 578, 581, 584, 590, 598, 610, 618, 621, 623], "requested": [440, 447, 487, 497, 510, 513, 525, 549, 551, 554, 563, 579, 584, 591, 596, 603, 622, 643], "requesting": [504, 542, 549, 596], "requir": [440, 442, 443, 444, 446, 447, 451, 453, 454, 455, 456, 457, 459, 460, 464, 468, 473, 483, 484, 485, 488, 501, 505, 506, 511, 512, 514, 515, 516, 519, 524, 528, 529, 530, 534, 535, 536, 538, 539, 541, 542, 543, 547, 549, 551, 552, 553, 554, 560, 563, 564, 569, 577, 579, 580, 581, 584, 587, 588, 590, 591, 593, 594, 596, 598, 599, 601, 603, 607, 610, 614, 619, 621, 636, 638, 639, 640, 642, 643, 644, 645, 646, 647, 649, 650, 651, 653, 654], "required": [437, 438, 439, 440, 442, 444, 445, 446, 447, 455, 456, 459, 460, 464, 471, 475, 487, 488, 496, 497, 503, 505, 506, 509, 511, 512, 514, 515, 516, 517, 518, 521, 523, 524, 530, 541, 542, 546, 547, 548, 549, 552, 553, 554, 555, 561, 562, 563, 564, 571, 577, 579, 581, 589, 593, 594, 596, 598, 601, 603, 607, 609, 610, 614, 618, 619, 621, 624, 625, 637, 640, 641, 642, 643, 644, 648, 651, 652, 653], "required_librar": 548, "requires_rtt": 576, "requiring": [451, 479, 501, 509, 518, 519, 549, 551, 569, 578, 584, 594, 615], "requried": 456, "rerereresolved": 581, "rerereunresolved": 581, "rerun": 578, "resbyarg": 549, "rescanned": 561, "reschedul": 593, "research": [512, 583, 594, 608, 620], "researcher": 594, "resembl": [519, 594], "resembling": 594, "reserv": [440, 445, 457, 542, 594, 596], "reserved": [440, 447, 457, 515, 549, 551, 566, 567, 574, 596, 598, 614, 618], "reserveresourc": 457, "reserving": 596, "reset": [440, 447, 455, 511, 551, 579, 594, 603, 624, 625], "resetting": [559, 618], "resid": [440, 446, 447, 454, 505, 518, 549, 551, 562, 563, 571, 591, 593, 594], "resident": [438, 615], "residing": 594, "resign": 509, "resilient": [485, 558], "resist": 551, "resolu": [445, 450, 459, 502, 530, 549, 563, 590, 639, 641], "resolv": [440, 450, 457, 458, 464, 549, 552, 597, 615, 622, 623, 624, 625, 638, 639, 649, 650], "resolved": [41, 131, 227, 372, 439, 450, 456, 479, 509, 549, 554, 563, 579, 590, 594, 603, 604, 618, 639, 640, 650, 651], "resolver": [563, 623], "resolvereloc": 554, "resolverty": 549, "resolving": [453, 502, 509, 584], "resorting": 511, "resourc": [14, 21, 22, 54, 55, 109, 112, 118, 119, 139, 140, 193, 196, 206, 207, 239, 240, 325, 341, 344, 351, 352, 384, 385, 438, 440, 456, 479, 485, 493, 501, 510, 511, 534, 563, 579, 594, 614, 615, 623, 624, 625], "resp": [479, 549, 579], "respect": [440, 478, 502, 509, 518, 525, 543, 549, 550, 563, 581, 587, 598, 607, 609, 642, 653], "respected": [509, 519, 579], "respectful": 458, "respecting": [581, 589], "respectively": [440, 443, 451, 455, 457, 459, 461, 475, 485, 490, 493, 494, 496, 498, 502, 505, 511, 518, 519, 521, 525, 549, 557, 563, 579, 580, 581, 587, 605, 609, 611, 614, 621, 623], "respond": [443, 558, 577, 578, 590], "responding": [443, 504], "respons": [468, 474, 486, 487, 488, 492, 493, 494, 496, 497, 498, 549, 590, 596], "responsibilit": 615, "responsibility": [509, 542, 549, 578, 598], "responsibl": [440, 457, 471, 485, 505, 509, 511, 518, 527, 549, 563, 572, 577, 578, 579, 585, 589, 592, 601, 610, 611, 619, 621], "responsibly": 518, "rest": [226, 371, 447, 457, 460, 505, 509, 518, 521, 524, 529, 534, 536, 549, 551, 552, 555, 556, 561, 571, 579, 589, 593, 595, 599, 616, 639, 642, 653], "restart": [444, 529, 537, 551, 579, 615], "restarting": 615, "restating": 459, "restofthecleanup": 505, "restor": [457, 511, 547, 549, 592, 594, 614, 640, 641, 642, 643, 644, 651, 652, 653], "restored": [447, 457, 511, 547], "restoring": [547, 614], "restrict": [440, 444, 459, 485, 501, 509, 512, 513, 514, 519, 524, 547, 549, 555, 560, 566, 579, 581, 593, 594, 596, 598, 602, 613, 615], "restricted": [440, 457, 509, 549, 594, 598, 604], "restricting": [496, 639], "restructuredtext": 595, "restructuring": 610, "result": [438, 439, 440, 444, 446, 447, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 466, 469, 473, 478, 479, 485, 489, 490, 499, 501, 502, 505, 506, 507, 509, 511, 512, 514, 516, 518, 519, 520, 521, 523, 524, 525, 529, 530, 536, 539, 542, 545, 549, 551, 553, 554, 560, 561, 562, 563, 564, 565, 571, 572, 577, 579, 581, 584, 587, 588, 589, 593, 594, 599, 603, 604, 605, 608, 609, 610, 613, 614, 615, 616, 617, 619, 621, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "resulted": [451, 544, 549], "resulting": [451, 453, 457, 489, 490, 501, 505, 508, 510, 513, 516, 529, 535, 540, 544, 546, 549, 555, 562, 577, 579, 581, 594, 596, 598, 614, 616, 623], "results_": 607, "results_b": 607, "resultty": 549, "resulttyp": 549, "resultval": 549, "resum": [507, 511, 551, 596], "resume1": 505, "resume2": 505, "resumed": [440, 505], "resuming": 505, "resumpt": 505, "ret": [444, 446, 449, 457, 460, 505, 511, 514, 518, 519, 555, 556, 560, 562, 577, 579, 592, 593, 594, 595, 596, 598, 603, 609, 611, 638, 639, 640, 642, 649, 650, 651, 653], "ret_typ": 549, "ret_val": [649, 650, 651, 652, 653], "retain": [446, 509, 514, 579, 587, 615], "retained": [501, 549, 550, 591], "retainednod": 593, "retainedtyp": [549, 593], "retaining": 579, "retarget": 457, "retargetting": 612, "retcc_sparc32": 614, "retcc_x86_32": 614, "retcc_x86_32_c": 614, "retcc_x86_32_fast": 614, "retcc_x86_32_ss": 614, "retcc_x86common": 614, "rethrow": [511, 598], "retired": 485, "retiring": 485, "retpolin": 594, "retq": [555, 594, 598], "retriev": [468, 501, 511, 554, 562, 578, 579, 589, 598, 601, 615, 619], "retrieval": [579, 596], "retrieved": 554, "retrieving": 513, "retroactively": 509, "retry": 616, "retty": 447, "return": [438, 440, 441, 443, 444, 446, 447, 449, 451, 452, 457, 462, 466, 473, 474, 478, 479, 484, 485, 489, 490, 492, 493, 495, 498, 501, 502, 505, 506, 507, 509, 511, 512, 514, 516, 518, 521, 523, 525, 526, 527, 529, 531, 536, 543, 545, 546, 547, 549, 551, 552, 554, 556, 557, 560, 561, 562, 563, 564, 577, 579, 587, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 611, 613, 614, 615, 616, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "return_addr": 594, "returnaddress": 555, "returndoesnotali": 549, "returned": [33, 34, 125, 126, 218, 219, 317, 363, 364, 443, 447, 462, 474, 507, 511, 525, 549, 554, 559, 561, 563, 577, 579, 587, 591, 598, 601, 603, 614, 615, 619, 636, 637, 639, 640, 647, 648, 650, 651], "returnindex": 545, "returning": [443, 459, 505, 511, 543, 549, 577, 587, 592, 594, 601, 615, 637, 639, 640, 641, 642, 643, 644, 650, 651, 652, 653], "returns_signed_char": 549, "returns_twic": [447, 549], "returntyp": [518, 549], "retval": [511, 549, 638, 639, 640, 641, 642, 643, 644], "reus": [456, 508, 534, 581, 587, 593, 594, 596], "reusabl": [457, 534], "reused": [460, 508, 536, 549, 584, 593], "reusing": [457, 581, 603], "rev": [446, 542, 581, 584, 648, 649, 650, 651, 652, 653], "rev128": 446, "rev64": 446, "reveal": [519, 594], "revectored": [577, 579], "revers": [438, 446, 455, 460, 486, 519, 525, 549, 550, 577, 579, 594, 603], "reversed": [446, 593], "reversibl": 594, "reversing": 594, "revert": [509, 521], "reverted": [509, 521], "reverting": 509, "review": [450, 454, 459, 504, 516, 520, 521, 523, 542, 550, 551, 556, 561, 581, 584, 585, 590, 595, 598, 599], "reviewe": 509, "reviewed": [504, 509, 521, 578], "reviewer": [450, 504, 509], "reviewing": 504, "revis": [202, 204, 205, 213, 215, 216, 450, 455, 459, 509, 510, 516, 521, 542, 578, 579, 587, 594, 596, 598], "revised": 593, "revisit": 459, "revisited": 585, "revlist": 581, "revmap": 581, "revoked": 509, "revolv": 593, "rework": 509, "reworking": 501, "rewound": 511, "rewrit": [509, 543, 577, 581, 594, 598, 614, 642, 653], "rewritestatepointsforgc": 518, "rewriting": [485, 549, 550, 581, 594, 598], "rewritten": [457, 505, 579, 581], "rex": 549, "rf": [556, 595, 609, 614], "rfc": 509, "rfunc": 480, "rgb": 583, "rgba": 438, "rglob": 480, "rgm": 615, "rh": [459, 549, 561, 579, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "rhs_val": [649, 650, 651, 652, 653], "ri": [518, 549, 614], "ri_inst": 603, "ric": 508, "ricc": 584, "ricciacronym": 584, "rich": [524, 586, 596], "richness": 557, "rid": [561, 567], "ridg": 440, "right": [438, 439, 440, 444, 446, 456, 457, 459, 461, 501, 504, 508, 509, 512, 514, 516, 521, 525, 536, 542, 543, 544, 549, 555, 561, 572, 577, 578, 581, 588, 594, 595, 601, 604, 609, 618, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654], "rightr": 561, "rigorous": 457, "riinst": 603, "ring": 440, "rip": [549, 555, 594, 605, 609], "ris": 459, "risc": [444, 457, 549, 584, 614], "risk": [538, 542, 549, 593, 594], "risking": 579, "risky": 594, "rival": 579, "rl": 562, "rl1": 562, "rl2": 562, "rl247405": 551, "rl247414": 551, "rl247416": 551, "rl247417": 551, "rl247420": 551, "rl247422": 551, "rl3": 562, "rl317337": 591, "rl4": 562, "rl5": 562, "rl6": 562, "rl7": 562, "rm": [521, 549, 551, 556, 595, 603, 605, 609, 614, 617, 643], "rmrk": 589, "rmw": 444, "rn": [513, 562], "rnglist": 478, "rnnnn": 509, "ro_signed_pat": 605, "roaming": 523, "rob": [485, 502], "robert": 502, "robin": 485, "robinson": 584, "robinsonagre": 584, "robinsondistinguish": 584, "robinsondistinguish2": 584, "robinsontransit": 584, "robot": 520, "robust": [502, 534, 549, 557, 582, 593, 609], "rocket": 587, "rocm": 440, "rodat": [440, 594, 614], "rogu": 594, "rol": [459, 489, 553, 561, 579, 588, 593, 604, 637, 648], "rolled": [459, 543], "rolling": 558, "rom": 487, "roms_": 583, "roms_r": 583, "room": [545, 615, 637, 648], "root": [450, 452, 455, 457, 464, 471, 472, 509, 510, 521, 536, 537, 541, 548, 549, 550, 571, 579, 580, 581, 584, 591, 601, 609, 615, 617, 638, 649], "rootcount": 518, "rooted": [471, 553], "rootmetadat": 518, "rootnum": 518, "roots_begin": 518, "roots_end": 518, "roots_iterator": 518, "roots_siz": 518, "rootstackoffset": 518, "rop": 579, "rot": 509, "rotat": [438, 457, 512, 549], "rotl": 512, "rough": [519, 603, 604], "roughly": [444, 457, 502, 511, 542, 543, 550, 551, 584, 593], "roun": 502, "round": [440, 446, 457, 485, 536, 542, 594, 604, 619, 641, 652], "rounded": [440, 502, 506, 525, 549], "rounding": [525, 549], "roundp": 613, "roundup": 440, "routin": [444, 457, 464, 511, 518, 549, 561, 577, 587, 594, 598, 599, 615, 616, 618, 637, 645, 646, 647, 648, 650, 654], "routinely": 509, "rovid": 536, "row": [438, 485, 546, 549], "row_bcast": [438, 440], "row_half_mirror": 438, "row_mask": [0, 2, 3, 6, 7, 440], "row_mirror": [438, 440], "row_ror": 438, "row_shar": 438, "row_shl": [438, 440], "row_shr": 438, "row_xmask": 438, "rowfield": 546, "rpass": 613, "rpath": 521, "rpc": [563, 618, 625], "rpcc": 549, "rpo": 550, "rppassmanag": 615, "rr": [603, 614], "rrinst": 603, "rs1": 614, "rs2": 614, "rs4gc": 598, "rs880": 440, "rsb": 594, "rsi": [457, 594, 605], "rsp": [457, 555, 592, 594, 596, 598, 605], "rsrc": [438, 493], "rss": [551, 591], "rss_limit_mb": 551, "rst": [441, 457, 595, 601], "rsync": 607, "rt": [442, 453, 455, 456, 517, 521, 536, 538, 539, 542, 549, 581, 584, 587, 588, 591, 612, 614, 616], "rtc": 610, "rtdyldmemorymanag": [623, 624, 625], "rtdyldobjectlinkinglai": [563, 621, 622, 623, 624, 625], "rthroughput": 485, "rtl": 457, "rtti": [455, 511, 576, 579, 586, 611, 642, 643, 644], "ruby": 518, "rud": 511, "rui": 584, "rul": [437, 440, 444, 457, 458, 459, 460, 462, 469, 471, 475, 485, 489, 502, 505, 509, 524, 526, 541, 547, 561, 563, 579, 580, 584, 588, 589, 591, 593, 594, 598, 599, 602, 603, 604, 605, 608, 609, 615, 618, 638, 639, 640, 649, 651], "ruleset": 529, "run": [440, 442, 443, 444, 445, 446, 451, 452, 455, 456, 457, 460, 461, 472, 473, 479, 485, 490, 499, 501, 502, 503, 504, 505, 506, 507, 510, 511, 514, 515, 516, 517, 518, 520, 521, 523, 530, 535, 538, 539, 540, 541, 542, 544, 548, 549, 551, 552, 554, 555, 560, 561, 562, 563, 564, 576, 577, 578, 579, 580, 581, 584, 586, 587, 588, 593, 594, 596, 598, 601, 603, 605, 607, 608, 609, 613, 614, 615, 616, 617, 618, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "run_funct": [650, 651, 652, 653], "run_long_test": 609, "runfunct": [507, 579], "runfunctionasmain": 507, "runhelp": 459, "runn": 607, "runnabl": 521, "running": [440, 442, 451, 452, 455, 456, 457, 461, 462, 464, 473, 487, 491, 504, 505, 506, 510, 514, 518, 520, 521, 522, 523, 526, 535, 537, 538, 539, 540, 548, 549, 559, 560, 563, 564, 576, 577, 578, 579, 581, 588, 593, 598, 603, 609, 613, 616, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653], "runonfunct": [443, 451, 564, 579, 614, 617], "runonmachinefunct": [457, 528, 564, 614], "runonmodul": 617, "runtest": [541, 588], "runtim": [440, 442, 444, 447, 449, 451, 453, 455, 457, 459, 460, 473, 485, 488, 498, 501, 502, 503, 506, 507, 509, 515, 518, 521, 540, 550, 551, 563, 572, 577, 579, 581, 592, 593, 596, 598, 599, 607, 610, 614, 615, 617, 619, 622, 623, 624, 625, 639, 641, 645, 652, 654], "runtimedyld": [554, 623], "runtimedyldelf": 554, "runtimedyldimpl": 554, "runtimedyldmacho": 554, "runtimehandl": 440, "runtimevers": [549, 593], "rust": 584, "rv": 561, "rv64": 587, "rv670": 440, "rv710": 440, "rv730": 440, "rv770": 440, "rvaluereferent": 566, "rvaluerefthispoint": 566, "rvc": 587, "rw": 549, "rx": [440, 603], "ryzen": 440, "rzi": 562, "r\u00e9f\u00e9rent": 620, "s0": [439, 440, 549], "s1": [440, 524, 525], "s15": 549, "s16": [524, 525, 529], "s17": 524, "s2": [40, 130, 225, 370, 440], "s3": [439, 440], "s31": 549, "s32": [0, 1, 2, 3, 524, 525, 526, 528, 529, 555, 562], "s33": 525, "s4": [439, 440], "s5": [439, 440], "s6": [439, 440], "s64": [0, 1, 2, 3, 524, 525, 529, 562], "s7": [439, 529], "s7100": 440, "s7150": 440, "s8": [524, 525], "s9": 549, "s9150": 440, "s9170": 440, "s9300x2": 440, "s_abs_i32": [0, 1, 2, 3], "s_absdiff_i32": [0, 1, 2, 3], "s_add_i32": [0, 1, 2, 3], "s_add_u32": [0, 1, 2, 3, 440, 555], "s_addc_u32": [0, 1, 2, 3, 440], "s_addk_i32": [0, 1, 2, 3], "s_and_b32": [0, 1, 2, 3], "s_and_b64": [0, 1, 2, 3, 440], "s_and_saveexec_b32": 0, "s_and_saveexec_b64": [0, 1, 2, 3], "s_andn1_saveexec_b32": 0, "s_andn1_saveexec_b64": [0, 3], "s_andn1_wrexec_b32": 0, "s_andn1_wrexec_b64": [0, 3], "s_andn2_b32": [0, 1, 2, 3, 440], "s_andn2_b64": [0, 1, 2, 3], "s_andn2_saveexec_b32": 0, "s_andn2_saveexec_b64": [0, 1, 2, 3], "s_andn2_wrexec_b32": 0, "s_andn2_wrexec_b64": [0, 3], "s_annot": 549, "s_arch": 502, "s_ashr_i32": [0, 1, 2, 3, 440], "s_ashr_i64": [0, 1, 2, 3], "s_atc_prob": [0, 2, 3], "s_atc_probe_buff": [0, 2, 3], "s_atomic_add": [0, 3], "s_atomic_add_x2": [0, 3], "s_atomic_and": [0, 3], "s_atomic_and_x2": [0, 3], "s_atomic_cmpswap": [0, 3], "s_atomic_cmpswap_x2": [0, 3], "s_atomic_dec": [0, 3], "s_atomic_dec_x2": [0, 3], "s_atomic_inc": [0, 3], "s_atomic_inc_x2": [0, 3], "s_atomic_or": [0, 3], "s_atomic_or_x2": [0, 3], "s_atomic_smax": [0, 3], "s_atomic_smax_x2": [0, 3], "s_atomic_smin": [0, 3], "s_atomic_smin_x2": [0, 3], "s_atomic_sub": [0, 3], "s_atomic_sub_x2": [0, 3], "s_atomic_swap": [0, 3], "s_atomic_swap_x2": [0, 3], "s_atomic_umax": [0, 3], "s_atomic_umax_x2": [0, 3], "s_atomic_umin": [0, 3], "s_atomic_umin_x2": [0, 3], "s_atomic_xor": [0, 3], "s_atomic_xor_x2": [0, 3], "s_barri": [0, 1, 2, 3, 440], "s_bcnt0_i32_b32": [0, 1, 2, 3], "s_bcnt0_i32_b64": [0, 1, 2, 3, 437, 440], "s_bcnt1_i32_b32": [0, 1, 2, 3], "s_bcnt1_i32_b64": [0, 1, 2, 3], "s_bfe_i32": [0, 1, 2, 3], "s_bfe_i64": [0, 1, 2, 3, 439, 440], "s_bfe_u32": [0, 1, 2, 3], "s_bfe_u64": [0, 1, 2, 3, 439], "s_bfm_b32": [0, 1, 2, 3], "s_bfm_b64": [0, 1, 2, 3, 440], "s_bitcmp0_b32": [0, 1, 2, 3], "s_bitcmp0_b64": [0, 1, 2, 3, 440], "s_bitcmp1_b32": [0, 1, 2, 3, 440], "s_bitcmp1_b64": [0, 1, 2, 3], "s_bitreplicate_b64_b32": [0, 3], "s_bitset0_b32": [0, 1, 2, 3], "s_bitset0_b64": [0, 1, 2, 3], "s_bitset1_b32": [0, 1, 2, 3], "s_bitset1_b64": [0, 1, 2, 3], "s_branch": [0, 1, 2, 3, 41, 131, 227, 372, 439], "s_brev_b32": [0, 1, 2, 3], "s_brev_b64": [0, 1, 2, 3], "s_buffer_atomic_add": [0, 3], "s_buffer_atomic_add_x2": [0, 3], "s_buffer_atomic_and": [0, 3], "s_buffer_atomic_and_x2": [0, 3], "s_buffer_atomic_cmpswap": [0, 3], "s_buffer_atomic_cmpswap_x2": [0, 3], "s_buffer_atomic_dec": [0, 3], "s_buffer_atomic_dec_x2": [0, 3], "s_buffer_atomic_inc": [0, 3], "s_buffer_atomic_inc_x2": [0, 3], "s_buffer_atomic_or": [0, 3], "s_buffer_atomic_or_x2": [0, 3], "s_buffer_atomic_smax": [0, 3], "s_buffer_atomic_smax_x2": [0, 3], "s_buffer_atomic_smin": [0, 3], "s_buffer_atomic_smin_x2": [0, 3], "s_buffer_atomic_sub": [0, 3], "s_buffer_atomic_sub_x2": [0, 3], "s_buffer_atomic_swap": [0, 3], "s_buffer_atomic_swap_x2": [0, 3], "s_buffer_atomic_umax": [0, 3], "s_buffer_atomic_umax_x2": [0, 3], "s_buffer_atomic_umin": [0, 3], "s_buffer_atomic_umin_x2": [0, 3], "s_buffer_atomic_xor": [0, 3], "s_buffer_atomic_xor_x2": [0, 3], "s_buffer_load_dword": [0, 1, 2, 3], "s_buffer_load_dwordx16": [0, 1, 2, 3], "s_buffer_load_dwordx2": [0, 1, 2, 3], "s_buffer_load_dwordx4": [0, 1, 2, 3], "s_buffer_load_dwordx8": [0, 1, 2, 3], "s_buffer_store_dword": [0, 2, 3], "s_buffer_store_dwordx2": [0, 2, 3], "s_buffer_store_dwordx4": [0, 2, 3], "s_call_b64": [0, 3], "s_cbranch_cdbgsy": [0, 1, 2, 3], "s_cbranch_cdbgsys_and_us": [0, 1, 2, 3], "s_cbranch_cdbgsys_or_us": [0, 1, 2, 3], "s_cbranch_cdbgus": [0, 1, 2, 3], "s_cbranch_execnz": [0, 1, 2, 3], "s_cbranch_execz": [0, 1, 2, 3], "s_cbranch_g_fork": [1, 2, 3, 440], "s_cbranch_i_fork": [1, 2, 3], "s_cbranch_join": [1, 2, 3, 440], "s_cbranch_scc0": [0, 1, 2, 3], "s_cbranch_scc1": [0, 1, 2, 3], "s_cbranch_vccnz": [0, 1, 2, 3], "s_cbranch_vccz": [0, 1, 2, 3], "s_claus": 0, "s_cmov_b32": [0, 1, 2, 3, 440], "s_cmov_b64": [0, 1, 2, 3], "s_cmovk_i32": [0, 1, 2, 3], "s_cmp_eq_i32": [0, 1, 2, 3, 440], "s_cmp_eq_u32": [0, 1, 2, 3], "s_cmp_eq_u64": [0, 2, 3], "s_cmp_ge_i32": [0, 1, 2, 3], "s_cmp_ge_u32": [0, 1, 2, 3], "s_cmp_gt_i32": [0, 1, 2, 3], "s_cmp_gt_u32": [0, 1, 2, 3], "s_cmp_le_i32": [0, 1, 2, 3], "s_cmp_le_u32": [0, 1, 2, 3], "s_cmp_lg_i32": [0, 1, 2, 3], "s_cmp_lg_u32": [0, 1, 2, 3], "s_cmp_lg_u64": [0, 2, 3], "s_cmp_lt_i32": [0, 1, 2, 3], "s_cmp_lt_u32": [0, 1, 2, 3], "s_cmpk_eq_i32": [0, 1, 2, 3], "s_cmpk_eq_u32": [0, 1, 2, 3], "s_cmpk_ge_i32": [0, 1, 2, 3], "s_cmpk_ge_u32": [0, 1, 2, 3], "s_cmpk_gt_i32": [0, 1, 2, 3], "s_cmpk_gt_u32": [0, 1, 2, 3], "s_cmpk_le_i32": [0, 1, 2, 3], "s_cmpk_le_u32": [0, 1, 2, 3], "s_cmpk_lg_i32": [0, 1, 2, 3], "s_cmpk_lg_u32": [0, 1, 2, 3], "s_cmpk_lt_i32": [0, 1, 2, 3], "s_cmpk_lt_u32": [0, 1, 2, 3], "s_code_end": 0, "s_cselect_b32": [0, 1, 2, 3, 440], "s_cselect_b64": [0, 1, 2, 3], "s_dcache_discard": [0, 3], "s_dcache_discard_x2": [0, 3], "s_dcache_inv": [0, 1, 2, 3, 440], "s_dcache_inv_vol": [1, 2, 3, 440], "s_dcache_wb": [0, 2, 3, 440], "s_dcache_wb_vol": [2, 3], "s_decperflevel": [0, 1, 2, 3], "s_denorm_mod": 0, "s_endpgm": [0, 1, 2, 3, 440], "s_endpgm_ordered_ps_don": [0, 3], "s_endpgm_saved": [0, 2, 3], "s_ff0_i32_b32": [0, 1, 2, 3], "s_ff0_i32_b64": [0, 1, 2, 3], "s_ff1_i32_b32": [0, 1, 2, 3], "s_ff1_i32_b64": [0, 1, 2, 3], "s_flbit_i32": [0, 1, 2, 3], "s_flbit_i32_b32": [0, 1, 2, 3], "s_flbit_i32_b64": [0, 1, 2, 3], "s_flbit_i32_i64": [0, 1, 2, 3], "s_get_reg": 439, "s_get_waveid_in_workgroup": 0, "s_getpc_b64": [0, 1, 2, 3, 440], "s_getreg_b32": [0, 1, 2, 3, 40, 130, 225, 370], "s_gl1_inv": 0, "s_icache_inv": [0, 1, 2, 3], "s_incperflevel": [0, 1, 2, 3], "s_inst_prefetch": 0, "s_load_dword": [0, 1, 2, 3, 440], "s_load_dwordx16": [0, 1, 2, 3, 440], "s_load_dwordx2": [0, 1, 2, 3, 440], "s_load_dwordx4": [0, 1, 2, 3], "s_load_dwordx8": [0, 1, 2, 3, 440], "s_lshl1_add_u32": [0, 3], "s_lshl2_add_u32": [0, 3], "s_lshl3_add_u32": [0, 3], "s_lshl4_add_u32": [0, 3], "s_lshl_b32": [0, 1, 2, 3], "s_lshl_b64": [0, 1, 2, 3], "s_lshr_b32": [0, 1, 2, 3], "s_lshr_b64": [0, 1, 2, 3, 440], "s_max_i32": [0, 1, 2, 3], "s_max_u32": [0, 1, 2, 3], "s_memrealtim": [0, 2, 3], "s_memtim": [0, 1, 2, 3, 440], "s_min_i32": [0, 1, 2, 3], "s_min_u32": [0, 1, 2, 3], "s_mov_b32": [0, 1, 2, 3, 440], "s_mov_b64": [0, 1, 2, 3, 440], "s_mov_fed_b32": [1, 2, 3], "s_movk_i32": [0, 1, 2, 3], "s_movreld_b32": [0, 1, 2, 3], "s_movreld_b64": [0, 1, 2, 3], "s_movrels_b32": [0, 1, 2, 3], "s_movrels_b64": [0, 1, 2, 3], "s_movrelsd_2_b32": 0, "s_mul_hi_i32": [0, 3], "s_mul_hi_u32": [0, 3], "s_mul_i32": [0, 1, 2, 3], "s_mulk_i32": [0, 1, 2, 3], "s_nand_b32": [0, 1, 2, 3], "s_nand_b64": [0, 1, 2, 3], "s_nand_saveexec_b32": 0, "s_nand_saveexec_b64": [0, 1, 2, 3], "s_nop": [0, 1, 2, 3, 440], "s_nor_b32": [0, 1, 2, 3], "s_nor_b64": [0, 1, 2, 3], "s_nor_saveexec_b32": 0, "s_nor_saveexec_b64": [0, 1, 2, 3], "s_not_b32": [0, 1, 2, 3], "s_not_b64": [0, 1, 2, 3], "s_or_b32": [0, 1, 2, 3], "s_or_b64": [0, 1, 2, 3], "s_or_saveexec_b32": 0, "s_or_saveexec_b64": [0, 1, 2, 3], "s_orn1_saveexec_b32": 0, "s_orn1_saveexec_b64": [0, 3], "s_orn2_b32": [0, 1, 2, 3], "s_orn2_b64": [0, 1, 2, 3], "s_orn2_saveexec_b32": 0, "s_orn2_saveexec_b64": [0, 1, 2, 3], "s_pack_hh_b32_b16": [0, 3], "s_pack_lh_b32_b16": [0, 3], "s_pack_ll_b32_b16": [0, 3], "s_quadmask_b32": [0, 1, 2, 3], "s_quadmask_b64": [0, 1, 2, 3], "s_rfe_b64": [0, 1, 2, 3], "s_rfe_restore_b64": [2, 3], "s_round_mod": 0, "s_scratch_load_dword": [0, 3], "s_scratch_load_dwordx2": [0, 3], "s_scratch_load_dwordx4": [0, 3], "s_scratch_store_dword": [0, 3], "s_scratch_store_dwordx2": [0, 3], "s_scratch_store_dwordx4": [0, 3], "s_sendmsg": [0, 1, 2, 3, 46, 133, 231, 376, 440], "s_sendmsghalt": [0, 1, 2, 3], "s_set_gpr_idx_idx": [2, 3], "s_set_gpr_idx_mod": [2, 3, 226, 371], "s_set_gpr_idx_off": [2, 3], "s_set_gpr_idx_on": [2, 3], "s_set_reg": 439, "s_sethalt": [0, 1, 2, 3, 440], "s_setkill": [0, 1, 2, 3], "s_setpc_b64": [0, 1, 2, 3, 440], "s_setprio": [0, 1, 2, 3], "s_setreg_b32": [0, 1, 2, 3], "s_setreg_imm32_b32": [0, 1, 2, 3], "s_setvskip": [1, 2, 3, 440], "s_sext_i32_i16": [0, 1, 2, 3], "s_sext_i32_i8": [0, 1, 2, 3], "s_sleep": [0, 1, 2, 3, 440], "s_store_dword": [0, 2, 3], "s_store_dwordx2": [0, 2, 3], "s_store_dwordx4": [0, 2, 3], "s_sub_i32": [0, 1, 2, 3], "s_sub_u32": [0, 1, 2, 3], "s_subb_u32": [0, 1, 2, 3], "s_subvector_loop_begin": 0, "s_subvector_loop_end": 0, "s_swappc_b64": [0, 1, 2, 3, 440], "s_trap": [0, 1, 2, 3, 440], "s_ttracedat": [0, 1, 2, 3], "s_ttracedata_imm": 0, "s_version": 0, "s_waitcnt": [0, 1, 2, 3, 103, 189, 286, 435, 440], "s_waitcnt_expcnt": 0, "s_waitcnt_lgkmcnt": 0, "s_waitcnt_vmcnt": 0, "s_waitcnt_vscnt": 0, "s_wakeup": [0, 2, 3], "s_wqm_b32": [0, 1, 2, 3], "s_wqm_b64": [0, 1, 2, 3, 440], "s_xnor_b32": [0, 1, 2, 3], "s_xnor_b64": [0, 1, 2, 3], "s_xnor_saveexec_b32": 0, "s_xnor_saveexec_b64": [0, 1, 2, 3], "s_xor_b32": [0, 1, 2, 3], "s_xor_b64": [0, 1, 2, 3], "s_xor_saveexec_b32": 0, "s_xor_saveexec_b64": [0, 1, 2, 3], "sacrific": [549, 561], "sacrificing": 582, "saddr": [0, 3, 7, 88, 89, 332, 420, 421], "sadly": [578, 594], "saf": [443, 444, 447, 451, 453, 461, 501, 509, 516, 519, 529, 544, 549, 550, 563, 577, 581, 590, 594, 596, 597, 598, 610, 621, 645, 653, 654], "safely": [457, 513, 518, 521, 549, 563, 564, 579, 596, 598, 623], "safepoint": [518, 549, 586], "safepoint_poll": 598, "safepointaddress": 518, "safestack": [447, 549, 597], "safety": [515, 516, 549, 559, 590, 612], "sag": [640, 651], "sahf": [457, 594], "said": [452, 459, 479, 485, 509, 511, 536, 539, 549, 560, 572, 579, 591, 593, 645, 654], "sak": [579, 615], "salvaged": 593, "salvagedebuginfo": 593, "salvaging": 593, "sam": [40, 41, 103, 130, 131, 189, 225, 226, 227, 286, 370, 371, 372, 435, 438, 439, 440, 441, 443, 444, 446, 447, 450, 451, 452, 455, 456, 457, 459, 461, 462, 464, 466, 468, 469, 470, 473, 479, 485, 486, 487, 489, 493, 497, 499, 501, 502, 505, 506, 509, 511, 512, 513, 515, 516, 517, 518, 519, 521, 524, 525, 528, 529, 530, 535, 536, 538, 539, 540, 542, 544, 546, 547, 548, 549, 550, 551, 553, 555, 558, 560, 561, 562, 563, 564, 565, 567, 572, 574, 575, 576, 577, 578, 580, 581, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 610, 611, 613, 614, 615, 617, 618, 619, 621, 622, 625, 636, 637, 638, 639, 640, 641, 642, 645, 648, 649, 650, 651, 652, 653, 654], "same_content": 513, "same_siz": 513, "samesiz": 549, "sampl": [58, 141, 241, 388, 438, 440, 442, 484, 490, 501, 507, 509, 518, 523, 536, 551, 562, 580, 593, 598, 607, 615, 617, 637, 638, 644, 648, 649, 656], "sampled": [536, 586], "samplepgo": 449, "samplerat": 536, "sampling": [449, 536], "sampson": 504, "san": [444, 455, 536, 647], "sancov_": 591, "sandbox": [541, 588], "sander": 533, "sandi": 583, "sandybridg": 613, "sandylak": 643, "sanitiz": [455, 456, 517, 551, 582, 587, 591, 617], "sanitize_address": [447, 549], "sanitize_hwaddress": [447, 549], "sanitize_memory": [447, 549], "sanitize_memtag": [447, 549], "sanitize_thread": [447, 549], "sanitizer": [517, 551, 577, 587, 591, 597], "sanitizer_common": 591, "sanitizer_common_nolibc": 591, "sanitizer_symbol": 591, "sanitizer_termin": 591, "sanitizer_unwind": 591, "sanitizercommonflag": 591, "sanitizercoverag": 551, "sanitizercoveragetracedataflow": 551, "sanitizerlist": 617, "sanity": [516, 521, 548, 551], "sanjoy": 584, "saptr": 549, "sar": 457, "sarq": 594, "sas": 440, "sass": [502, 562], "sat": 538, "satisf": 440, "satisfied": [529, 542, 549, 594], "satisfy": [46, 133, 231, 376, 439, 443, 444, 460, 509, 515, 524, 529, 540, 599, 642, 653], "satisfying": 529, "saturat": 549, "saturating": [641, 652], "sav": [440, 455, 457, 468, 479, 501, 502, 511, 512, 521, 523, 544, 547, 549, 562, 563, 576, 578, 579, 593, 594, 596, 607, 614, 640, 641, 642, 643, 644, 651, 652, 653], "save1": 505, "save2": 505, "saved": [446, 447, 457, 470, 511, 549, 551, 554, 587, 596, 603, 613, 614], "savesomewher": 459, "saveth": 460, "saving": [459, 501, 511, 549, 551, 596, 639, 650, 651], "savoir": 620, "saw": [485, 552, 615, 640, 651], "say": [457, 458, 460, 464, 501, 509, 519, 521, 529, 543, 546, 549, 556, 560, 571, 572, 579, 581, 584, 593, 595, 599, 608, 636, 638, 645, 647, 649, 654], "saying": 516, "sbas": [0, 1, 2, 3], "sbyt": 574, "sc": [444, 489, 549, 567, 587], "scaffolding": [637, 648], "scal": [457, 459, 519, 543, 549, 584, 594, 601], "scalability": 443, "scalabl": [443, 549], "scalar": [13, 14, 111, 112, 195, 196, 343, 344, 439, 440, 457, 501, 502, 516, 518, 524, 526, 532, 548, 549, 550, 585, 587, 613, 614, 615, 622, 623, 624, 625, 639, 640, 641, 642, 644, 653], "scalarbitsettrait": 619, "scalarevolu": [443, 519, 584], "scalariz": 577, "scalarized": [549, 585], "scalarizing": [457, 529, 577], "scalaropt": 472, "scalartrait": 619, "scale2": 549, "scaled": [490, 519, 549], "scaling": 445, "scaling_governor": 445, "scan": [457, 464, 465, 466, 518, 561, 563, 572, 601, 609, 615, 623, 645, 654], "scann": [636, 647], "scanned": [464, 650], "scanning": [459, 561, 607], "scar": 509, "scary": [645, 647, 654], "scatter": 585, "scattered": 593, "scc": [47, 71, 72, 73, 74, 75, 77, 80, 82, 83, 134, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 168, 169, 171, 232, 254, 255, 256, 257, 258, 259, 261, 265, 266, 268, 289, 290, 294, 295, 301, 302, 303, 322, 327, 328, 329, 330, 377, 401, 402, 403, 404, 405, 406, 408, 412, 413, 415, 508, 550, 553, 564, 615], "sccp": 550, "scen": 579, "scenario": [442, 455, 579, 585], "scenarios": [444, 451, 487, 497, 514, 521, 574], "scev": [509, 553], "sched": [457, 466, 479, 614], "sched_class": 479, "schedcov": 614, "schedq": 485, "schedul": [457, 460, 466, 479, 485, 538, 542, 562, 587, 601, 614, 615], "scheduled": [457, 529, 558, 615], "scheduler": [466, 485, 593, 615], "scheduling": [466, 479, 485, 521, 579, 585, 598, 601, 615], "schem": [442, 454, 459, 464, 470, 471, 474, 475, 509, 517, 518, 545, 549, 563, 579, 582, 593, 598, 614, 619, 623, 624, 642, 653, 656], "scienc": 583, "scop": [443, 447, 451, 455, 459, 460, 484, 498, 500, 509, 511, 518, 551, 555, 565, 579, 584, 593, 594, 597, 598, 601, 604, 615, 619, 638, 640, 641, 642, 643, 644, 649, 651, 652, 653], "scoped": [516, 549, 593, 603, 604, 642, 653], "scopelin": [549, 593, 644], "scoping": 456, "scott": 459, "scraping": 464, "scratch": [57, 89, 387, 421, 438, 439, 457, 549, 579, 614, 615], "scratch_en": 440, "scratch_load": 440, "scratch_load_dword": [0, 3], "scratch_load_dwordx2": [0, 3], "scratch_load_dwordx3": [0, 3], "scratch_load_dwordx4": [0, 3], "scratch_load_sbyt": [0, 3], "scratch_load_sbyte_d16": [0, 3], "scratch_load_sbyte_d16_h": [0, 3], "scratch_load_short_d16": [0, 3], "scratch_load_short_d16_h": [0, 3], "scratch_load_sshort": [0, 3], "scratch_load_ubyt": [0, 3], "scratch_load_ubyte_d16": [0, 3], "scratch_load_ubyte_d16_h": [0, 3], "scratch_load_ushort": [0, 3], "scratch_segment_siz": 440, "scratch_store_byt": [0, 3], "scratch_store_byte_d16_h": [0, 3], "scratch_store_dword": [0, 3], "scratch_store_dwordx2": [0, 3], "scratch_store_dwordx3": [0, 3], "scratch_store_dwordx4": [0, 3], "scratch_store_short": [0, 3], "scratch_store_short_d16_h": [0, 3], "screen": [452, 588], "script": [442, 451, 452, 455, 456, 461, 464, 471, 501, 504, 510, 514, 521, 536, 538, 542, 579, 580, 581, 584, 587, 601, 605, 607, 608, 609, 615], "scripting": [468, 518, 581, 601], "scroll": 578, "scrub": 594, "scrutiny": 594, "scudo": [536, 559, 586], "scudo_default_opt": 591, "scudo_opt": 591, "sd": [493, 538, 603], "sdat": [0, 2, 3], "sdisel": 550, "sdiv": [457, 524], "sdk": [455, 489, 502, 521, 607], "sdnod": [451, 457, 579, 593, 605, 614, 617], "sdst": [0, 1, 2, 3], "sdtc": 614, "sdvalu": [457, 614, 617], "sdwa": [436, 437], "seamless": 535, "seamlessly": [551, 552], "sean": 579, "search": [451, 455, 459, 460, 464, 478, 489, 496, 501, 509, 513, 518, 521, 546, 548, 550, 551, 563, 574, 579, 580, 593, 597, 598, 613, 614, 621, 639, 640, 641, 642, 651], "searchabl": 601, "searched": [549, 563], "searching": [454, 464, 478, 501, 511, 521, 577, 585, 593, 621, 638], "sec": 549, "secidx": 513, "seciton": 513, "secnam": 513, "second": [8, 76, 106, 161, 190, 260, 307, 338, 407, 437, 438, 440, 447, 449, 454, 455, 456, 457, 459, 460, 464, 485, 501, 505, 506, 510, 511, 513, 518, 519, 521, 523, 525, 542, 546, 549, 551, 556, 560, 561, 567, 569, 571, 572, 574, 577, 579, 581, 591, 592, 593, 594, 595, 596, 598, 599, 604, 607, 608, 614, 615, 618, 619, 623, 638, 639, 640, 641, 642, 643, 644, 645, 649, 651, 654], "secondary": [454, 509, 511, 591, 596], "secondcondit": 579, "secondlastinst": 614, "secondlastopc": 614, "secondly": 644, "secrel32": 513, "secrel_hi12": 513, "secrel_lo12": 513, "secret": [591, 594], "secrib": 581, "sectalign": 501, "section": [438, 439, 443, 444, 445, 446, 447, 453, 454, 455, 456, 457, 459, 460, 462, 464, 465, 466, 468, 471, 478, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 501, 502, 505, 506, 509, 510, 511, 518, 519, 521, 524, 534, 539, 542, 543, 544, 548, 549, 554, 555, 556, 557, 560, 561, 563, 565, 566, 574, 575, 577, 578, 579, 581, 587, 589, 591, 592, 593, 594, 598, 599, 601, 603, 611, 613, 614, 615, 616, 617, 621, 637, 639, 644, 645, 648, 650, 654, 656], "section1": 488, "section2": 488, "sectioncontr": 567, "sectioncontribentry": 567, "sectioncontribentry2": 567, "sectioncontributionsiz": 567, "sectioncontrsubstreamvers": 567, "sectiondat": 656, "sectionlength": 567, "sectionmapentry": 567, "sectionmapentryflag": 567, "sectionmaphead": 567, "sectionmapsiz": 567, "sectionmemorymanag": [554, 563, 621, 622, 623, 624], "sectionnam": [447, 567], "sectionnumb": 656, "sectnam": 501, "sector": 599, "sectvalu": 501, "secur": 594, "security": [454, 501, 577, 586, 591, 594, 639], "sed": [464, 479, 521], "see": [4, 7, 46, 133, 231, 376, 439, 440, 441, 444, 445, 446, 447, 449, 451, 455, 456, 457, 458, 459, 460, 461, 464, 471, 473, 480, 485, 488, 498, 499, 500, 501, 502, 504, 505, 509, 510, 511, 512, 514, 516, 517, 521, 523, 524, 529, 530, 535, 537, 539, 540, 541, 543, 544, 548, 549, 551, 555, 556, 557, 560, 561, 562, 563, 564, 570, 571, 574, 575, 577, 578, 579, 580, 581, 585, 587, 588, 591, 593, 594, 595, 596, 598, 599, 603, 605, 608, 609, 611, 612, 614, 615, 617, 621, 622, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654], "seed": [495, 551], "seeded": 551, "seeing": [459, 594, 615, 645, 654], "seek": [509, 513, 519, 577, 586, 618], "seekabl": 618, "seeking": [509, 526], "seem": [440, 443, 446, 451, 455, 457, 476, 501, 502, 518, 519, 543, 560, 561, 567, 581, 583, 584, 594], "seemingly": [524, 614], "seen": [457, 459, 485, 490, 501, 524, 549, 560, 561, 577, 579, 598, 614, 615, 623, 639, 641, 645, 652, 654], "sees": [501, 549, 561], "seg": 549, "segalign": 483, "segment": [440, 457, 486, 487, 488, 492, 493, 494, 497, 536, 549, 566, 567, 593, 594, 596, 607, 618], "segmented": 586, "segmentreg": 457, "segnam": 501, "seh": 549, "sel": 505, "seldag": 587, "seldom": 561, "select": [438, 439, 440, 455, 459, 468, 473, 485, 486, 501, 504, 511, 512, 513, 517, 519, 523, 525, 527, 529, 530, 531, 532, 533, 539, 540, 550, 554, 555, 562, 578, 579, 586, 587, 594, 598, 601, 603, 605, 607, 610, 614, 616, 617, 619, 642, 643, 653], "select_isd_stor": 614, "selectaddrrr": 614, "selectcod": 614, "selectcodecommon": 617, "selected": [438, 440, 446, 451, 457, 464, 468, 509, 510, 518, 521, 525, 527, 529, 536, 540, 546, 549, 555, 577, 581, 585, 605, 616], "selectimpl": 527, "selecting": [451, 479, 485, 521, 527, 546, 607, 617], "selectinst": 459, "selectiondag": [444, 524, 525, 526, 529, 530, 534, 577, 579, 587, 593, 601], "selectiondagbuild": [441, 457, 530], "selectiondagdump": 441, "selectiondagisel": [601, 617], "selectiondaglegaliz": 441, "selectiondagnod": 614, "selectionkind": 549, "selectively": [478, 501, 549, 587, 615], "selector": [457, 485, 500, 511, 521, 524, 527, 530, 534, 549, 567, 593, 601], "selecttarget": [623, 624, 625], "self": [447, 457, 479, 506, 549, 561, 566, 567, 577, 578, 579, 590, 615, 639, 641, 648, 650, 652], "selp": 562, "selty": 549, "sem": [453, 456, 518, 548, 601, 616, 645, 654], "semantic": [437, 440, 444, 457, 459, 487, 502, 511, 514, 518, 525, 548, 550, 552, 557, 579, 585, 593, 594, 601, 602, 604, 605, 610, 615, 619, 638, 640, 649, 651], "semantically": [502, 549, 579, 598, 599, 622], "semicolon": [455, 521, 603, 607, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "semispac": 518, "send": [438, 444, 465, 469, 477, 480, 485, 500, 504, 509, 516, 520, 521, 537, 542, 544, 551, 556, 563, 578, 581, 587, 588, 595, 609], "sending": [457, 504, 509, 578, 615, 638], "sendmsg": [46, 133, 231, 376, 440], "sens": [443, 444, 455, 457, 459, 501, 514, 519, 547, 549, 551, 579, 581, 584, 593, 594, 598, 604, 617, 638, 645, 649, 654], "sensibl": 579, "sensit": [443, 455, 460, 468, 476, 490, 555, 594, 615, 619], "sent": [438, 465, 477, 485, 490, 509, 520, 542, 563, 578, 598], "sentenc": 459, "sentinel": 447, "separ": [518, 548, 593], "separat": [439, 440, 444, 448, 456, 457, 459, 460, 464, 473, 489, 494, 498, 501, 502, 504, 505, 508, 509, 518, 519, 521, 529, 530, 532, 534, 540, 541, 547, 548, 549, 551, 552, 553, 556, 560, 562, 563, 571, 574, 579, 584, 589, 590, 596, 598, 603, 609, 610, 614, 615, 625, 639], "separated": [226, 371, 436, 437, 440, 442, 447, 453, 455, 457, 459, 460, 468, 473, 479, 483, 486, 487, 489, 490, 501, 505, 509, 521, 536, 548, 549, 580, 589, 591, 593, 599, 601, 603, 607, 609, 619, 637, 648], "separately": [438, 444, 455, 457, 459, 473, 489, 494, 501, 505, 519, 541, 549, 552, 581, 589, 590, 593], "separateremarksfil": 589, "separateremarksmet": 589, "separating": [517, 594], "separator": [103, 189, 286, 435, 439, 464, 474, 609], "seq": [479, 536, 656], "seq_cst": [440, 444, 549], "sequenc": [11, 109, 193, 341, 438, 439, 444, 446, 457, 459, 460, 468, 485, 496, 505, 506, 511, 513, 516, 518, 519, 526, 529, 549, 551, 561, 564, 565, 566, 574, 577, 579, 581, 584, 585, 589, 593, 594, 596, 598, 601, 603, 604, 613, 614, 615, 618, 637, 648, 656], "sequenced": 549, "sequencetrait": 619, "sequencing": [466, 641, 642, 652, 653], "sequency": 618, "sequential": [439, 440, 447, 457, 460, 549, 581, 610], "sequentially": [440, 447, 485, 511, 549, 593], "sequentialtyp": 579, "ser": [440, 442, 447, 455, 457, 474, 509, 511, 521, 544, 549, 555, 566, 571, 579, 584, 585, 587, 615, 622, 639, 646, 647, 650], "serial": [479, 521, 561], "serializ": [485, 512, 530, 555, 565, 566, 569, 572, 586, 601, 619], "serialized": [530, 555, 572, 574, 575], "serializing": [485, 555, 589, 594], "serially": 580, "serious": [542, 590, 594], "seriously": 523, "serv": [18, 19, 20, 21, 22, 25, 26, 27, 115, 116, 117, 118, 119, 199, 200, 201, 206, 207, 316, 348, 349, 350, 351, 352, 355, 356, 357, 436, 446, 464, 485, 489, 505, 510, 511, 519, 520, 542, 563, 572, 577, 579, 581, 585, 593, 594, 596, 604, 607, 609, 618, 624, 625], "servaddr": 625, "server": [581, 594], "servic": [440, 445, 514, 581, 591, 599], "serviced": 443, "serving": 590, "session": [507, 556, 563, 579, 595, 622], "set": [8, 57, 88, 89, 106, 190, 307, 332, 338, 387, 420, 421, 438, 439, 442, 444, 445, 446, 447, 449, 451, 453, 455, 456, 457, 459, 460, 461, 464, 465, 466, 468, 479, 485, 486, 487, 490, 494, 496, 497, 498, 500, 502, 503, 505, 506, 508, 509, 510, 511, 512, 513, 514, 517, 518, 521, 523, 524, 525, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 546, 547, 548, 549, 551, 552, 553, 554, 561, 562, 564, 567, 569, 570, 571, 574, 575, 576, 578, 580, 581, 582, 584, 586, 587, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 605, 607, 608, 609, 610, 611, 615, 616, 617, 618, 619, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "set_value_nam": [649, 650, 651, 652, 653], "setargstr": 501, "setbann": [579, 625], "setbid": 447, "setbr": 479, "setcategory": 501, "setcc": [457, 579], "setcondcodeact": 614, "setconvertact": 614, "setcurrentdebugloc": [593, 644], "setdat": 459, "setdatalayout": [639, 640, 641, 642, 643, 644], "setdebugloc": 593, "setdescript": 501, "setexitcodemapp": 579, "setfoo": 549, "setgc": 518, "setgenerator": [563, 621, 622], "setgraphattr": 579, "setgraphcolor": 579, "seth": 614, "sethiddenflag": 501, "setindexedloadact": 614, "setindexedstoreact": 614, "setinsertfencesforatomic": 444, "setinsertpoint": [638, 639, 640, 641, 642, 643, 644], "setinternallinkag": 579, "setjmp": [549, 645, 654], "setjmp_buf": 511, "setlazycompilefailureaddr": 563, "setloadextact": 614, "setloadxact": 614, "setmaxatomicsizeinbitssupported": 444, "setmcjitmemorymanag": 554, "setnam": [579, 638, 639, 640, 641, 642, 643, 644], "setnumcompilethread": 563, "seto": 594, "setop": [603, 604], "setoperationact": [444, 457, 614], "setp": 562, "setpreservesall": 615, "setpreservescfg": 615, "setrecordnam": 447, "setreg": 457, "setrequiresstructuredcfg": 614, "setsearchord": 563, "setsockopt": 625, "setsubprogram": 644, "settargettripl": 643, "setter": 579, "setting": [440, 442, 443, 453, 455, 456, 464, 468, 473, 479, 492, 493, 501, 505, 509, 514, 518, 521, 523, 535, 536, 542, 543, 549, 552, 562, 576, 578, 579, 591, 593, 594, 596, 607, 614, 616, 617, 619, 639, 644, 646, 649, 650], "settled": 581, "settransform": 622, "settruncstoreact": 614, "setup": [440, 442, 513, 535, 540, 555, 579, 581, 593, 607, 614, 621, 639, 645, 654], "setupmachinefunct": 614, "setvector": 459, "setxyzzy": 459, "seul": 130, "sevenkind": 549, "seventeen": 555, "sever": 590, "several": [437, 439, 443, 447, 451, 452, 455, 456, 457, 459, 464, 468, 470, 479, 482, 489, 490, 501, 506, 509, 511, 512, 518, 520, 521, 532, 536, 545, 549, 551, 552, 555, 558, 561, 563, 565, 569, 572, 577, 579, 580, 585, 591, 593, 594, 599, 601, 603, 605, 607, 608, 609, 614, 615, 620, 638, 640, 645, 646, 649, 651, 654], "severity": 588, "sex": 458, "sexist": 458, "sext": [44, 229, 299, 320, 374], "sextload": [605, 614], "sexual": 458, "sexually": 458, "sexy": 647, "sf": [538, 541], "sge": 549, "sgi": 579, "sgn": 549, "sgpr": [40, 225, 370, 549], "sgpr0": 440, "sgpr1": 440, "sgpr2": 555, "sgpr_spill_count": 440, "sgprn": 440, "sgprs_used": 440, "sgrr": 440, "sgt": 549, "sh": [461, 501, 510, 521, 536, 542, 581], "sh_addralign": 440, "sh_entsiz": 513, "sh_hidden_private_base_vimid": 440, "sh_link": [487, 497, 513], "sha": 549, "sha1": 551, "shad": [40, 130, 225, 370, 438, 457], "shader": 440, "shadow": [559, 584, 596, 598, 604, 614, 640, 641, 642, 643, 644, 651, 652, 653], "shadowbyt": 596, "shadowcallstack": [447, 549], "shadowdescriptort": 440, "shadowed": [640, 651], "shadowing": [640, 651], "shadowlist": 614, "shadowstackgc": 518, "shadowstackgclowering": 518, "shall": [455, 501, 513, 549, 558, 645, 654], "shap": [529, 530, 542, 543, 549, 579], "shaped": [593, 605], "shapekind": 543, "shar": [438, 444, 447, 455, 457, 468, 487, 511, 521, 524, 528, 534, 549, 565, 577, 585, 599, 605, 615, 618, 621], "shard": 464, "shared": [438, 439, 440, 444, 451, 453, 455, 457, 459, 461, 465, 466, 488, 502, 505, 507, 513, 541, 544, 546, 549, 551, 552, 562, 563, 577, 579, 580, 589, 591, 593, 608, 609, 615, 619, 621, 624, 625, 638, 641, 644, 649], "shared_bas": 439, "shared_library": 580, "shared_lim": 439, "shared_ptr": [623, 624, 625], "shared_vgpr_cnt": 440, "shared_vgpr_count": 440, "sharedfnast": [624, 625], "sharing": [438, 441, 457, 521, 551, 552, 579], "she": 537, "shel": [451, 455, 464, 501, 521, 556, 595, 609, 644], "shelf": [563, 621, 622], "shf_alloc": [440, 487], "shf_exclud": 513, "shf_execinstr": [440, 487], "shf_link_ord": 513, "shf_merg": 487, "shf_string": 487, "shf_writ": [440, 487], "shield": [445, 457, 591, 599], "shielding": 599, "shift": [438, 439, 457, 501, 512, 516, 525, 549, 550, 561, 577, 594, 603, 605, 618], "shifted": [440, 447, 448, 457, 549], "shifting": [444, 457, 594], "shiftinst": 459, "shim": 577, "shiny": 615, "ship": [442, 507, 518, 536], "shipped": [444, 454, 521, 598], "shipping": [645, 654], "shirt": 458, "shl": [459, 525, 561, 577, 603, 604], "shlib": 521, "shlibext": 609, "shlq": 594, "shn_amdgpu_ld": 440, "sho": 619, "shooting": [639, 650], "short": [443, 446, 451, 457, 459, 464, 490, 498, 500, 506, 509, 514, 523, 549, 560, 562, 567, 584, 585, 591, 596, 598, 607, 614, 616, 619, 622, 640, 641, 642, 644, 651, 652, 653], "short_enum": 549, "short_wchar": 549, "shortcut": [647, 648], "shortest": [561, 604], "shorthand": [553, 603], "shortly": [593, 644], "should": [90, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 461, 464, 465, 466, 468, 473, 475, 485, 489, 490, 498, 499, 500, 501, 502, 504, 505, 509, 511, 512, 513, 516, 517, 518, 519, 521, 523, 525, 526, 527, 528, 529, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 556, 557, 558, 560, 562, 563, 564, 566, 567, 569, 571, 574, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 612, 614, 615, 616, 617, 618, 619, 623, 637, 638, 639, 640, 642, 644, 647, 648, 649, 650, 651, 653], "shouldexecut": 579, "shouldexpandatomiccmpxchgin": 444, "shouldexpandatomicloadin": 444, "shouldexpandatomicrmwin": 444, "shouldexpandatomicstorein": 444, "shouldinsertfencesforatomic": 444, "shouldn": [443, 459, 501, 541, 549, 554, 560, 609, 647], "shouldsampl": 536, "show": [449, 457, 460, 464, 467, 478, 479, 484, 485, 486, 488, 489, 498, 500, 501, 506, 507, 513, 519, 521, 535, 549, 550, 555, 556, 562, 578, 579, 581, 584, 588, 593, 594, 595, 596, 601, 603, 607, 611, 613, 614, 615, 617, 621, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "showc": 490, "showdebug": 507, "showed": [505, 619], "showing": [506, 554, 562, 579, 587, 615, 642, 646, 647, 653, 655], "shown": [438, 439, 446, 464, 473, 478, 479, 490, 492, 493, 494, 498, 501, 505, 506, 508, 523, 530, 543, 549, 555, 556, 560, 562, 579, 593, 594, 596, 605, 608, 611, 614, 619, 641, 652], "shr": 459, "shrink": [457, 581, 587], "shrinking": 487, "shrx": 594, "shrxq": 594, "shstrtab": 440, "sht_dynamic": 440, "sht_hash": 440, "sht_llvm_linker_opt": 513, "sht_nobit": [440, 487], "sht_not": [440, 487], "sht_progbit": [440, 487], "sht_rel": 440, "sht_strtab": 440, "sht_symtab": 440, "shtest": 464, "shuffl": [457, 459, 464, 525, 549, 563, 585], "shuffle_vector": 457, "shufflebyt": 551, "shufflevector": [446, 457, 460, 525], "shut": [551, 614], "shutdown": 551, "si": [53, 138, 238, 324, 383, 440, 459, 605], "sibling": 553, "sid": [440, 443, 444, 455, 457, 459, 485, 502, 508, 518, 521, 525, 549, 555, 561, 562, 577, 579, 581, 589, 594, 598, 609, 637, 638, 640, 641, 648, 649, 651, 652], "sidebar": [542, 595], "sidelength": 543, "sierr": 583, "sift": 616, "sig": 521, "sig_atomic_t": 549, "sig_ign": 536, "sight": [642, 653], "sigil": 555, "sign": [438, 439, 457, 458, 479, 501, 503, 513, 516, 524, 525, 549, 579, 587, 594, 603, 614, 645, 654], "signal": [438, 444, 503, 507, 511, 515, 536, 549, 551], "signaled": 505, "signaling": [438, 440, 501, 525, 549], "signatur": [444, 446, 457, 470, 502, 521, 549, 570, 572, 579, 587, 598, 615, 638], "signature_invalid": 521, "signed": [41, 49, 131, 227, 372, 379, 437, 438, 439, 457, 459, 516, 519, 524, 525, 549, 551, 552, 555, 574, 603, 614], "signedcharact": 574, "signext": [447, 549], "signextimm": 457, "signif": 593, "signific": [52, 237, 382, 443, 446, 447, 453, 459, 492, 493, 509, 512, 518, 525, 536, 549, 551, 552, 559, 561, 577, 579, 585, 587, 594, 598, 601, 607, 615, 618, 640, 641, 646, 647, 652], "significand": 549, "significantly": [447, 453, 455, 459, 470, 485, 511, 515, 530, 540, 549, 551, 552, 579, 587, 593, 594, 615, 637, 640, 648, 651], "signifient": 130, "sigplan": [457, 518], "sigsegv": 536, "sigusr1": 551, "sil": 605, "silenc": 539, "silent": [509, 537], "silently": [487, 496, 497, 549, 603], "silly": [443, 459, 514, 603, 647], "simd": [40, 130, 225, 370, 440, 465, 466, 549, 577, 585, 587, 610, 613], "simd_benchmark": 583, "similar": [444, 447, 452, 456, 457, 459, 460, 468, 472, 489, 501, 502, 505, 508, 509, 511, 513, 518, 519, 521, 529, 536, 538, 539, 540, 549, 551, 555, 558, 559, 561, 562, 563, 567, 574, 577, 579, 580, 581, 584, 585, 591, 593, 595, 599, 601, 603, 609, 613, 614, 615, 616, 617, 619, 636, 639, 640, 641, 644, 647, 650, 651, 652], "similarit": [508, 579], "similarity": [530, 565, 638, 649], "similarly": [443, 444, 446, 447, 451, 459, 479, 485, 501, 502, 509, 511, 517, 524, 527, 529, 530, 543, 544, 549, 565, 579, 594, 608, 611, 614, 616, 618, 620, 643, 644], "simm13": 614, "simm21": [49, 379], "simpl": [440, 442, 443, 444, 446, 447, 448, 451, 455, 456, 457, 459, 460, 464, 465, 466, 485, 486, 501, 506, 508, 509, 510, 512, 513, 518, 519, 521, 523, 527, 528, 529, 540, 543, 548, 551, 557, 560, 561, 563, 581, 587, 593, 594, 598, 599, 603, 604, 608, 609, 613, 614, 615, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655], "simplecompil": [563, 621, 623, 624, 625], "simpleloopunroll": 610, "simpleproject": 455, "simplest": [442, 453, 457, 501, 508, 523, 551, 581, 594, 614, 619, 622, 637, 638, 648, 650], "simpletyp": 656, "simpletypekind": 574, "simpletypemod": 574, "simplevalu": 604, "simplicity": [450, 518, 524, 579, 582, 596, 636, 638, 649], "simplif": [451, 457, 509, 524, 577, 579, 615, 619], "simplified": [555, 577, 579, 594, 598, 619, 621, 656], "simplify": [442, 457, 518, 528, 540, 544, 555, 564, 578, 598, 608, 639, 640, 641, 642, 644, 647, 650, 651, 652, 653], "simplify_typ": 543, "simplifycfg": [461, 642, 653], "simplifydemandedbit": 617, "simplifying": [452, 549, 579, 621], "simply": [440, 443, 451, 454, 457, 459, 460, 474, 489, 498, 499, 501, 504, 505, 509, 511, 514, 517, 519, 521, 525, 535, 536, 539, 541, 549, 555, 557, 560, 563, 565, 567, 577, 579, 580, 581, 593, 594, 595, 596, 598, 599, 608, 609, 614, 615, 637, 638, 639, 648, 649, 650], "simul": [485, 549], "simulat": [446, 457, 485, 534], "simulated": 485, "simulator": [509, 549, 607], "simultaneous": [444, 462, 551], "simultaneously": [446, 487, 497, 536, 563, 579, 609, 613], "sin": [443, 502, 613, 614, 619, 621, 636, 637, 638, 639, 647, 648, 649, 650], "sin_family": 625, "sin_port": 625, "sinc": [440, 441, 443, 447, 448, 455, 457, 459, 462, 468, 485, 489, 490, 501, 502, 505, 506, 508, 509, 511, 514, 518, 519, 523, 526, 529, 538, 539, 541, 542, 543, 544, 546, 549, 551, 554, 556, 560, 561, 562, 563, 565, 567, 571, 575, 579, 581, 587, 588, 592, 593, 596, 598, 599, 604, 605, 614, 615, 618, 619, 636, 637, 638, 639, 640, 641, 642, 644, 648, 649, 650, 651, 652, 653], "sinf": 502, "singl": [439, 442, 444, 446, 447, 451, 455, 456, 457, 459, 460, 464, 468, 473, 474, 478, 479, 482, 483, 485, 487, 489, 490, 493, 497, 501, 502, 506, 508, 509, 510, 511, 512, 518, 519, 521, 524, 525, 526, 529, 530, 536, 539, 545, 547, 550, 551, 553, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 574, 575, 579, 580, 582, 585, 588, 593, 594, 597, 598, 603, 607, 609, 610, 613, 614, 615, 616, 617, 619, 636, 638, 639, 642, 644, 645, 649, 650, 653, 654], "singleimpl": 549, "singleimplnam": 549, "singlesour": 607, "singlesourc": [583, 607], "singlethread": [440, 549], "singly": 518, "singular": [459, 549, 553, 579], "sink": [443, 501, 585, 594], "sinking": 587, "sint": 549, "sit": [443, 456, 464, 511, 513, 518, 523, 547, 549, 555, 560, 577, 583, 587, 594, 595, 596, 598, 609, 611, 622], "sitofp": [638, 649], "situat": [444, 453, 457, 485, 501, 502, 511, 519, 529, 540, 543, 549, 558, 561, 577, 579, 590, 613, 614, 615, 623, 639, 650], "situational": 591, "six": [444, 457, 464, 621], "sixkind": 549, "sixth": [505, 524, 614], "siz": [8, 9, 10, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 232, 233, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 294, 295, 296, 297, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 377, 378, 379, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 440, 443, 444, 445, 446, 447, 451, 455, 458, 459, 461, 463, 465, 468, 470, 473, 485, 486, 487, 489, 490, 492, 493, 495, 498, 501, 506, 512, 513, 516, 518, 519, 524, 525, 529, 530, 536, 549, 550, 551, 552, 559, 561, 562, 563, 566, 567, 569, 571, 574, 576, 577, 583, 589, 591, 592, 593, 594, 596, 598, 602, 603, 604, 605, 607, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 622, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 653, 654], "sizabl": 579, "size1": 549, "size2": 549, "size3": 549, "size_t": [444, 518, 551, 552, 563, 579, 619], "sizeclassallocator": 591, "sized": [447, 457, 464, 505, 519, 549, 587, 591, 603, 619], "sizem1": 549, "sizem1bitwidth": 549, "sizeof": [489, 505, 514, 549, 562, 569, 571, 574, 579, 594, 598, 625], "sizeofimm": 614, "sjljehprepar": 511, "sk_buff": 457, "sk_circl": 543, "sk_lastsquar": 543, "sk_otherspecialsquar": 543, "sk_somewhatspecialsquar": 543, "sk_specialsquar": 543, "sk_squar": 543, "sketched": 505, "skip": [447, 456, 457, 459, 460, 473, 488, 502, 518, 540, 549, 559, 564, 579, 581, 593, 607, 614, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653], "skipbasicblock": 564, "skipfunct": 564, "skiploop": 564, "skipmodul": 564, "skipped": [446, 490, 506, 527, 564, 593, 598, 610, 613], "skipping": [505, 579, 593, 594, 636, 647], "skipscc": 564, "skylak": 587, "slash": 549, "slav": 537, "slc": [0, 1, 2, 3, 7, 440], "sle": 549, "sled": 616, "slh": 594, "slic": [483, 603, 604], "slicing": 579, "slid": [458, 502, 579], "slight": [513, 539], "slightly": [442, 493, 494, 502, 508, 549, 559, 594, 598, 604, 615, 639, 641, 642, 650, 652, 653], "sligtly": 446, "sln": 523, "slot": [457, 470, 485, 505, 511, 516, 536, 547, 549, 592, 596, 598, 614, 642, 653], "slow": [452, 453, 457, 459, 465, 478, 502, 511, 514, 516, 518, 521, 530, 549, 551, 561, 576, 579, 594, 615], "slow_path": 549, "slowdown": [536, 551], "slowly": [509, 521, 549], "slp": [550, 585], "slt": 549, "sm": [489, 524, 562], "sm_20": [457, 562], "sm_21": 457, "sm_30": [457, 502], "sm_35": [457, 502], "sm_xx": 502, "small": [439, 444, 447, 451, 452, 454, 456, 457, 459, 461, 466, 470, 473, 479, 481, 485, 490, 501, 504, 505, 506, 509, 516, 518, 519, 524, 525, 529, 530, 536, 542, 543, 548, 549, 561, 562, 564, 572, 577, 578, 579, 582, 583, 587, 591, 593, 594, 596, 599, 609, 615, 620, 623, 644, 646, 647], "smallconst": 596, "smallest": [438, 544, 549], "smallsetvector": 579, "smallvector": [625, 644], "smallvectorhead": 579, "smallvectorimpl": [579, 617], "smart": [459, 501, 549, 566], "smartphon": 558, "smashed": 594, "smashing": 549, "smax": 439, "smel": 579, "smith": 459, "smithw": 583, "smooshlab": 520, "smoothly": 456, "smovq": 457, "smp": [444, 615], "smt": 445, "smul_loh": 457, "sn": [489, 524], "sn_map": 561, "sn_mapl": 561, "sn_mapr": 561, "snan": 549, "snapshot": [443, 510, 551], "sneak": 459, "snippet": [509, 518, 579, 615], "so": [437, 438, 440, 442, 443, 444, 445, 446, 450, 451, 453, 455, 457, 458, 459, 460, 461, 464, 465, 471, 473, 479, 483, 485, 489, 499, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 524, 527, 528, 529, 530, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 567, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 590, 591, 592, 593, 594, 595, 596, 598, 599, 601, 603, 604, 605, 607, 608, 609, 610, 611, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "so_reuseaddr": 625, "social": [458, 620], "sock_stream": 625, "sockaddr": 625, "sockaddr_in": 625, "socket": 625, "sockfd": 625, "socklen_t": 625, "soffset": [0, 1, 2, 3, 7], "soft": [466, 485, 509, 593], "softfp": 540, "softwar": [456, 459, 466, 503, 509, 510, 518, 539, 540, 542, 550, 566, 584, 587, 594, 609, 614, 615, 638, 645, 646, 647, 654], "sol": [509, 530, 549], "sol_socket": 625, "solar": 521, "solaris2": 615, "solely": [509, 549, 560, 579], "solid": 539, "solut": [444, 446, 455, 457, 501, 510, 521, 523, 549, 563, 579, 581, 593, 615, 622, 642, 645, 653, 654], "solution_1": 549, "solution_2": 549, "solv": [443, 455, 457, 509, 519, 530, 534, 542, 579, 593, 594, 641, 645, 652, 654], "solved": [581, 642, 645, 653, 654], "solving": 457, "som": [438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 464, 465, 467, 468, 473, 478, 479, 485, 486, 488, 489, 501, 502, 503, 504, 505, 508, 509, 511, 512, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 529, 530, 532, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 558, 560, 561, 563, 566, 567, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "some_bss": 496, "some_crash_test": 581, "some_op": 555, "somebody": 509, "someclass": 604, "somedag": 603, "somefancya": 615, "somefunc": [459, 579], "somehow": [505, 567, 579, 615], "somelocalpath": 551, "somemap": 459, "somemulticlass": 604, "someon": [450, 457, 458, 489, 504, 509, 510, 512, 516, 518, 526, 556, 581, 590, 593, 595, 654], "sometest": 608, "something": [442, 443, 457, 459, 460, 486, 501, 505, 509, 512, 521, 523, 529, 530, 539, 543, 544, 546, 549, 551, 556, 560, 561, 563, 572, 577, 578, 579, 581, 591, 594, 595, 598, 599, 601, 603, 604, 614, 617, 619, 637, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654], "sometim": [447, 451, 452, 457, 459, 460, 485, 501, 502, 509, 519, 521, 529, 543, 549, 551, 561, 571, 577, 579, 581, 587, 593, 594, 601, 614, 619], "somety": 549, "somewhat": [443, 444, 459, 505, 509, 510, 530, 549, 579, 581, 584, 594, 598, 608, 612, 637, 641, 648, 652], "somewhatspecialsquar": 543, "somewher": [460, 511, 543, 549, 581, 608, 609, 615, 638, 641, 649, 652], "sonnenberg": 581, "soon": [509, 537, 551, 552, 563, 588, 615, 622, 637, 640, 648, 651], "sophist": [457, 608], "sophisticated": [518, 549, 556, 595, 615], "sorry": 654, "sort": [444, 455, 459, 486, 489, 501, 502, 509, 514, 544, 549, 579, 581, 583, 617, 620, 637, 639, 640, 642, 645, 648, 650, 651, 653, 654], "sorted": [459, 501, 506, 549, 574, 581, 593], "sorting": [593, 616], "sortord": 617, "sought": 549, "sound": [443, 450, 551, 558], "sourc": [76, 161, 260, 407, 436, 437, 438, 439, 442, 443, 445, 451, 452, 453, 456, 457, 460, 461, 463, 464, 465, 467, 471, 472, 473, 475, 485, 488, 489, 499, 501, 502, 504, 507, 509, 510, 511, 513, 516, 518, 519, 520, 523, 525, 536, 540, 541, 542, 544, 548, 550, 552, 553, 555, 560, 561, 562, 563, 567, 575, 578, 579, 581, 582, 584, 586, 588, 589, 594, 595, 596, 598, 599, 601, 603, 605, 607, 608, 609, 612, 614, 615, 616, 617, 619, 620, 623, 639, 643, 645, 650, 654], "source0": 615, "source_filenam": 549, "source_i386": 498, "source_x86_64": 498, "sourcebas": [504, 522], "sourcefil": 473, "sourcefilecount": 567, "sourcefilenameindex": 567, "sourceforg": 583, "sourceinfosiz": 567, "sourceloc": 644, "sourcewar": [535, 551], "sous": 130, "southern": 440, "sp": [457, 513, 549, 555, 557, 559, 592, 605, 614, 644], "sp3": [438, 439], "spac": [103, 189, 286, 435, 436, 437, 445, 447, 455, 458, 460, 465, 473, 479, 486, 489, 502, 511, 518, 520, 521, 523, 524, 525, 546, 547, 548, 549, 554, 558, 559, 561, 572, 579, 580, 581, 582, 590, 592, 593, 594, 596, 598, 599, 603, 614, 615, 618, 619, 639, 642, 645, 650, 653, 654], "space0": 549, "space1": 549, "space2": 549, "spadin": 577, "spaghet": [646, 647], "span": 605, "spanish": 591, "spanning": 615, "sparc": [444, 457, 487, 521, 549, 584, 603, 614, 615], "sparcasmprint": [457, 614], "sparccallingconv": 614, "sparcel": 487, "sparcgenregisterinfo": 614, "sparcgensubtarget": 614, "sparcinstrformat": 614, "sparcinstrinfo": 614, "sparciseldagtodag": 614, "sparcisellowering": 614, "sparclet": 614, "sparclit": 614, "sparclite86x": 614, "sparcreg": 614, "sparcregisterinfo": 614, "sparcsubtarget": 614, "sparctargetasminfo": 614, "sparctargetlowering": 614, "sparctargetmachin": 614, "sparcv8": [444, 549], "sparcv9": 549, "sparingly": [459, 516], "spars": [490, 512, 521, 550, 564, 579, 581, 618], "sparsecheckout": 581, "sparsely": [457, 618], "spasr": 581, "spawn": [551, 563], "spcc": 614, "spdx": [459, 621, 622, 623, 624, 625], "spe": 503, "speak": [458, 502, 590], "speaker": 558, "speaking": [456, 598, 640, 641, 651, 652], "spec": [502, 544, 549, 555, 556, 579, 593, 594, 603, 604, 607, 619], "spec95": 608, "speccpu2000": [607, 608], "speccpu2006": 608, "specfi": 549, "special": [11, 436, 438, 439, 440, 443, 444, 446, 447, 456, 457, 459, 460, 485, 486, 487, 497, 501, 502, 506, 507, 508, 509, 511, 513, 515, 518, 519, 521, 541, 544, 549, 551, 553, 555, 559, 560, 561, 565, 566, 567, 579, 581, 594, 596, 598, 599, 603, 604, 609, 613, 614, 642, 643, 644, 646, 647, 653], "specialfp": 603, "specializ": [444, 464, 501, 527, 549, 577, 579, 593, 619], "specialized": [444, 457, 510, 530, 560, 579, 582, 593, 614, 620, 645, 654], "specializing": [605, 619], "specially": [457, 548, 549, 563, 579, 596, 603, 615], "specialsquar": 543, "specialty": 579, "specif": [24, 35, 37, 86, 174, 209, 220, 222, 271, 304, 331, 354, 365, 367, 418, 436, 438, 440, 444, 447, 455, 457, 460, 461, 462, 465, 468, 473, 485, 500, 501, 503, 511, 516, 518, 521, 548, 549, 551, 567, 579, 589, 593, 596, 598, 603, 604, 605, 609, 614, 615, 618, 619, 638, 645, 649, 654], "specifi": [447, 506, 513, 562, 579, 601], "specific": [4, 46, 109, 133, 193, 231, 341, 376, 437, 440, 442, 444, 445, 447, 450, 452, 453, 459, 460, 464, 466, 473, 478, 488, 492, 501, 506, 509, 511, 512, 514, 517, 518, 519, 521, 523, 524, 527, 529, 530, 531, 532, 534, 539, 541, 542, 548, 549, 550, 551, 554, 555, 556, 557, 558, 562, 563, 564, 575, 577, 579, 582, 586, 587, 588, 590, 594, 596, 598, 599, 601, 602, 604, 605, 613, 614, 615, 616, 618, 619, 622, 636, 637, 641, 643, 646, 647, 648, 652], "specifically": [442, 444, 455, 457, 459, 502, 509, 516, 517, 518, 519, 521, 542, 548, 549, 554, 560, 564, 577, 579, 593, 594, 596, 599, 605, 608, 614, 615, 616, 639, 646, 647], "specificity": 549, "specified": [8, 11, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 46, 49, 50, 52, 55, 56, 57, 76, 89, 103, 106, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 131, 133, 135, 136, 140, 161, 189, 190, 199, 200, 201, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 231, 235, 237, 240, 260, 286, 307, 316, 317, 323, 326, 338, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 376, 379, 380, 382, 386, 387, 407, 421, 435, 436, 437, 438, 439, 440, 441, 447, 451, 453, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 468, 469, 472, 473, 474, 477, 478, 479, 480, 482, 483, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 510, 511, 513, 514, 517, 518, 521, 525, 544, 548, 549, 551, 555, 563, 564, 567, 571, 575, 579, 580, 582, 587, 589, 591, 593, 596, 598, 599, 601, 603, 605, 608, 609, 610, 613, 614, 615, 619, 638, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "specify": [8, 21, 22, 23, 24, 36, 37, 58, 76, 106, 118, 119, 120, 128, 141, 161, 190, 206, 207, 208, 209, 221, 222, 241, 260, 307, 338, 351, 352, 353, 354, 366, 367, 388, 407, 438, 440, 443, 444, 447, 450, 453, 455, 457, 460, 464, 465, 466, 468, 469, 473, 475, 477, 479, 480, 482, 485, 486, 487, 488, 489, 490, 495, 498, 499, 500, 501, 502, 510, 511, 517, 518, 519, 520, 521, 523, 536, 548, 549, 551, 555, 556, 562, 563, 567, 577, 579, 585, 596, 598, 603, 607, 608, 609, 614, 615, 617, 619, 638, 641, 643, 645, 649, 654], "specifying": [440, 464, 488, 492, 493, 513, 549, 572, 579, 603, 604, 605, 607, 609, 610, 613, 614, 637, 648], "spectr": [549, 586, 594], "spectre11": 594, "spectreattack": 594, "specul": [444, 485, 502, 511, 549, 563, 586, 594, 598], "speculat": [447, 549, 594, 598], "speculated": [549, 594], "speculative_load_hardening": 549, "speculative_load_hardening_microbenchmark": 594, "speculatively": [443, 516, 549, 564, 594], "speed": [453, 455, 459, 479, 501, 502, 509, 521, 551, 560, 609, 642, 653], "speedup": 594, "spel": 553, "spelling": [459, 509, 587, 601], "spenc": 599, "spend": 464, "spending": 617, "spent": [485, 617], "spflag": 593, "spflagdefinit": 644, "spgr": 130, "sphinx": [455, 520, 521, 556], "sphinx_execut": 455, "sphinx_output_html": 455, "sphinx_output_man": 455, "sphinx_warnings_as_error": 455, "sphinxquickstarttemplat": 595, "spi": 440, "spiffygrep": 501, "spiffysh": 501, "spill": [440, 454, 457, 465, 466, 505, 526, 593, 596, 598, 614], "spillalignment": 614, "spilled": [454, 457, 505, 594, 596, 598, 614], "spiller": 465, "spilling": [440, 594, 614], "spillsiz": 614, "spilt": 457, "spir": [458, 579], "spisd": 614, "spl": 605, "splat": [457, 550], "splatting": 563, "splic": [549, 579], "split": [440, 444, 446, 457, 474, 487, 489, 498, 501, 502, 505, 509, 512, 519, 524, 549, 551, 555, 560, 561, 563, 571, 577, 580, 581, 591, 592, 614], "split64": 549, "splitdebugfilenam": 549, "splitting": [451, 457, 530, 549], "sponsor": 581, "sponsorship": 509, "spot": [551, 577], "spotty": 549, "spread": [549, 577, 587], "spreadsheet": 617, "spring": 502, "sprinkl": 579, "spurious": 549, "spuriously": [549, 609], "spus": 614, "sp\u00e9cif": [5, 6, 7], "sp\u00e9cifi": [53, 138, 238, 324, 383], "sq": 485, "sq_rsrc_img_1d": 438, "sq_rsrc_img_1d_array": 438, "sq_rsrc_img_2d": 438, "sq_rsrc_img_2d_array": 438, "sq_rsrc_img_2d_msa": 438, "sq_rsrc_img_2d_msaa_array": 438, "sq_rsrc_img_3d": 438, "sq_rsrc_img_cub": 438, "sqlit": 551, "sqrt": [613, 619], "squar": [509, 543, 548, 549, 619], "squared": 549, "squash": 581, "squashed": 446, "squeu": 485, "sr": 493, "sra": [603, 604], "sram": 440, "srand": 551, "src": [0, 1, 2, 3, 7, 455, 457, 472, 511, 542, 549, 567, 575, 579, 580, 588, 608, 614, 639], "src0": [0, 1, 2, 3, 4, 5, 6, 7, 76, 161, 226, 260, 371, 407, 438, 439], "src0_sel": [0, 2, 3, 6, 7, 440], "src1": [0, 1, 2, 3, 4, 5, 6, 7, 76, 161, 226, 260, 371, 407, 436, 438, 457, 603, 605], "src1_sel": [0, 2, 3, 6, 7, 440], "src2": [0, 1, 2, 3, 4, 5, 6, 7, 76, 161, 226, 260, 371, 407, 457, 603, 605], "src3": [0, 1, 2, 3, 7, 76, 161, 260, 407], "src_private_bas": 440, "src_reg": 457, "src_root": 521, "src_shared_bas": 440, "srcarglist": 549, "srcloc": 549, "srcvalu": 598, "srd": 440, "srem": 457, "sret": [447, 549], "srgp": 440, "srl": [603, 604], "sro": [444, 502, 516, 550, 564, 642, 653], "srsrc": [0, 1, 2, 3, 7], "ss": [457, 475, 579, 603], "ssa": [511, 516, 518, 525, 549, 550, 560, 579, 593, 598, 614, 615, 638, 640, 641, 642, 645, 646, 647, 649, 651, 652, 653, 654], "ssamp": [0, 1, 2, 3], "ssca2v2": 583, "sscabmk": 583, "sse": [457, 545, 549, 614, 643], "sse2": [549, 609], "sse4": 613, "sse41": 460, "ssecall": 614, "ssh": 607, "ssp": [447, 549, 593], "sspreq": [447, 549], "sspstrong": [447, 549], "ssrc": [0, 1, 2, 3], "ssrc0": [0, 1, 2, 3], "ssrc1": [0, 1, 2, 3], "ssrc2": [0, 1, 2, 3], "sstream": 459, "st": [475, 493, 549, 562, 614], "st0": [603, 605, 614], "st1": [446, 457, 605, 614], "st17basic_string_viewicst11char_traitsice": 475, "st2": 605, "st3": 605, "st3__1": 475, "st4": 605, "st5": 605, "st6": 605, "st7": 605, "st7__cxx11": 475, "st_valu": 440, "stab": 593, "stability": [509, 581, 582], "stabl": [459, 476, 479, 509, 542, 552, 564, 579, 593, 614], "stack": [440, 443, 454, 459, 465, 486, 488, 492, 493, 494, 505, 511, 516, 521, 525, 536, 547, 550, 557, 560, 563, 579, 586, 587, 589, 593, 594, 604, 612, 614, 615, 616, 618, 619, 621, 623, 625, 642, 644, 646, 647, 653], "stack_loc": 457, "stack_siz": 465, "stackarity": 518, "stacked": 518, "stackentr": 518, "stackentry": 518, "stackframesiz": 518, "stackgrowsdown": 614, "stackmap": [492, 493, 518], "stackoffset": 518, "stackprotectorcheck": 549, "stackrestor": 547, "stacksafety": 577, "stacksav": 547, "stacksiz": 589, "stacksizessect": 457, "staff": 590, "stag": [440, 444, 453, 455, 457, 461, 473, 501, 502, 510, 542, 551, 552, 561, 562, 582, 588, 597, 614, 617, 620, 637, 648], "stage1": [442, 510, 539], "stage2": [442, 453, 455, 510, 539], "stage3": 442, "staged": 585, "stageselectioncat": 501, "staging": [510, 537], "stal": [440, 593], "stall": [485, 594], "stamp": 572, "stanc": 459, "stand": [457, 459, 502, 509, 549, 567, 579, 609, 615, 622, 623, 624, 625, 637, 648], "standalon": [457, 517, 540, 548, 581, 589, 644, 645], "standard": [11, 439, 440, 442, 443, 444, 446, 455, 457, 460, 461, 464, 465, 466, 468, 469, 470, 474, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 501, 503, 504, 509, 511, 513, 514, 515, 516, 518, 520, 523, 525, 527, 539, 552, 555, 562, 577, 595, 598, 601, 605, 609, 613, 614, 615, 618, 622, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "standardized": [444, 459, 509, 609], "standpoint": 579, "star": 583, "start": [9, 107, 191, 339, 440, 442, 443, 447, 451, 459, 460, 461, 464, 473, 485, 487, 488, 489, 498, 504, 505, 509, 510, 512, 516, 519, 520, 523, 529, 530, 537, 541, 548, 551, 553, 555, 559, 561, 562, 565, 577, 578, 579, 581, 582, 584, 588, 591, 593, 594, 595, 598, 603, 613, 614, 616, 617, 618, 619, 622, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "start_bb": [651, 652, 653], "start_val": [651, 652, 653], "start_valu": 549, "started": [442, 455, 459, 485, 504, 509, 514, 518, 520, 524, 540, 542, 563, 578, 579, 612, 615, 620, 638, 639, 647, 649, 650], "startexpr": [640, 641, 642, 643, 644, 653], "starting": [209, 220, 222, 440, 442, 443, 447, 455, 457, 459, 461, 475, 485, 487, 489, 490, 497, 506, 507, 510, 512, 513, 516, 518, 521, 524, 525, 549, 551, 556, 561, 577, 578, 594, 595, 598, 603, 604, 609, 615, 618, 638, 639, 640, 641, 644, 649, 650, 651, 652, 655], "startup": [464, 521, 549, 562, 576, 622, 623], "startval": [640, 641, 642, 643, 644], "stash": 543, "stat": [438, 439, 443, 444, 445, 446, 450, 451, 454, 456, 457, 459, 465, 466, 485, 499, 501, 502, 505, 506, 508, 509, 510, 511, 512, 515, 518, 519, 527, 529, 530, 534, 540, 549, 550, 551, 553, 555, 556, 560, 569, 577, 578, 581, 584, 587, 590, 591, 593, 594, 595, 596, 598, 599, 601, 603, 604, 607, 608, 613, 614, 615, 618, 619, 622, 624, 625, 637, 638, 640, 642, 644, 646, 651, 653], "stated": [444, 542, 563], "stateful": 577, "stateless": [444, 615], "statepoint_token": 598, "static": [440, 443, 444, 445, 451, 453, 454, 455, 457, 461, 463, 466, 485, 501, 505, 512, 514, 518, 519, 532, 536, 541, 543, 544, 547, 549, 550, 551, 552, 553, 554, 561, 563, 579, 580, 591, 593, 594, 598, 601, 614, 615, 619, 621, 622, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 649, 650], "static_cast": [625, 642, 643, 644], "static_library": 540, "statically": [443, 444, 453, 455, 457, 485, 501, 505, 516, 518, 519, 521, 541, 549, 551, 553, 559, 580, 587, 598, 611, 615, 616, 639, 650], "stating": [509, 584], "statistic": [443, 445, 463, 465, 466, 470, 473, 478, 499, 506, 551, 580, 589, 607, 608, 616], "statistical": [470, 580], "statistically": 607, "status": [40, 225, 370, 438, 450, 452, 455, 458, 459, 483, 509, 533, 537, 549, 569, 587, 596, 612], "statuscheck": 581, "statut": 130, "stay": [505, 520, 561, 571, 619], "staying": 552, "stb_local": 549, "std": [475, 488, 499, 501, 511, 514, 529, 536, 543, 561, 562, 563, 574, 583, 591, 594, 607, 613, 614, 617, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644], "stdarg": 549, "stdcall": 457, "stddef": 551, "stderr": [460, 461, 551, 564, 579, 609, 637, 638, 639, 640, 641, 642, 643, 644], "stdin": [460, 473, 479, 593, 609, 644, 648, 649, 650, 651, 652, 653], "stdint": 551, "stdio": [521, 523, 535, 552, 599, 650, 651, 652, 653], "stdlib": [455, 521], "stdlibc": 455, "stdout": [464, 473, 475, 478, 479, 523, 549, 551, 609, 648, 649, 650, 651, 652, 653, 656], "steady": 515, "steensgaard": 443, "steer": 509, "steinberg": 583, "stellard": 542, "stem": 502, "stemming": 579, "step": [439, 440, 442, 443, 451, 453, 455, 457, 502, 505, 508, 509, 510, 511, 512, 518, 519, 521, 523, 525, 530, 534, 539, 540, 541, 542, 543, 546, 551, 552, 561, 562, 577, 579, 584, 585, 587, 588, 601, 608, 611, 612, 615, 619, 624, 625, 638, 639, 640, 641, 642, 643, 644, 651, 652, 653, 655], "step_val": [651, 652, 653], "stepexpr": [640, 641, 642, 643, 644, 653], "stepped": 593, "stepping": [519, 615, 644], "stepval": [640, 641, 642, 643, 644], "stepwithcompactencoding": 511, "stick": [451, 538, 558, 579], "sticking": 581, "sticky": 549, "still": [446, 450, 451, 452, 454, 457, 459, 464, 473, 487, 497, 501, 502, 506, 509, 511, 514, 518, 521, 523, 524, 526, 528, 529, 530, 534, 535, 536, 540, 541, 543, 544, 547, 549, 551, 554, 560, 561, 563, 564, 576, 577, 578, 579, 581, 582, 583, 587, 590, 593, 594, 596, 598, 599, 608, 611, 613, 615, 619, 639, 640, 641, 642, 645, 651, 652, 653, 654], "still_poison": 549, "stingy": 579, "stitched": 571, "stkmaprecord": [596, 598], "stksizerecord": 596, "stl": [459, 514, 521, 551, 577, 579, 619], "stlextr": [623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "stm": 549, "stmt": 610, "stn_undef": 440, "stoney": 440, "stop": [455, 458, 459, 476, 488, 489, 509, 511, 512, 518, 530, 542, 549, 551, 555, 560, 579, 587, 593, 594, 615, 618], "stopgap": 579, "stopiter": 505, "stopped": [505, 549, 616], "stopper": 588, "stopping": [518, 551, 637, 648], "stor": [23, 24, 120, 202, 203, 204, 205, 208, 209, 353, 354, 438, 440, 443, 444, 446, 448, 456, 460, 501, 505, 506, 508, 511, 515, 518, 519, 521, 524, 525, 529, 532, 545, 550, 551, 554, 555, 560, 561, 562, 567, 571, 579, 585, 587, 591, 592, 593, 594, 596, 597, 598, 614, 621, 622, 636, 642, 643, 644, 647, 653], "storag": [440, 445, 447, 457, 505, 518, 559, 562, 587, 593], "storageclass": 656, "stored": [32, 124, 209, 217, 220, 222, 362, 443, 444, 446, 447, 455, 457, 473, 498, 505, 506, 510, 511, 518, 524, 529, 534, 545, 547, 549, 554, 563, 567, 571, 577, 579, 580, 581, 587, 589, 591, 593, 594, 596, 598, 608, 611, 614, 637, 642, 648, 653], "storemerg": 505, "storeregtoaddr": 614, "storeregtostackslot": [457, 614], "storesdnod": 614, "storing": [438, 446, 448, 505, 506, 515, 518, 549, 579, 594], "story": [506, 523, 593], "str": [446, 478, 501, 506, 549, 562, 579, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 656], "str1": 603, "str2": 603, "str_offset": 593, "straight": [443, 457, 502, 545, 561, 579, 598, 599, 603, 637, 647, 648, 649], "straightforward": [446, 457, 514, 543, 579, 581, 582, 591, 593, 614, 615, 622, 636, 638, 639, 640, 641, 642, 649, 650, 651, 652, 653, 654], "strang": [446, 642, 653], "strateg": [444, 452, 505, 549, 579, 594, 598], "strategy": [444, 452, 457, 501, 505, 518, 559, 579, 581, 594, 598, 642, 653], "stray": 609, "strconcat": [603, 604, 614], "stream": [46, 133, 231, 376, 439, 447, 457, 459, 460, 461, 462, 468, 469, 474, 477, 478, 480, 482, 486, 487, 488, 493, 494, 496, 497, 498, 499, 506, 512, 521, 523, 549, 551, 566, 579, 583, 589, 593, 594, 613, 614, 615, 618, 619, 637, 647, 648, 649, 650, 651, 652, 653], "streamblock": 571, "streamclust": 583, "streamdirectory": 571, "streaming": 619, "streamlining": 452, "streamsiz": 571, "strength": [444, 457, 458, 501, 516, 549, 579, 620, 646, 647], "strengthen": 485, "stress": [459, 463, 517], "stressing": 517, "strex": 444, "strict": [46, 133, 231, 376, 441, 444, 446, 460, 509, 516, 524, 548, 549, 551, 561, 563, 579, 593, 602, 605, 638, 649], "strict_": 441, "strict_fadd": 441, "strict_fp_round": 441, "strictfp": [447, 549], "strictly": [460, 511, 521, 549, 562, 579, 593, 598, 599, 638, 640, 643, 651], "strid": [14, 112, 196, 344, 549, 583], "strided": 585, "striking": [591, 638, 649], "strikingly": [641, 652], "string": [440, 447, 449, 453, 455, 456, 457, 459, 463, 464, 465, 466, 468, 478, 485, 487, 488, 489, 490, 492, 493, 498, 501, 513, 521, 530, 536, 545, 546, 548, 555, 557, 562, 567, 571, 572, 575, 577, 591, 593, 598, 599, 601, 603, 604, 605, 614, 615, 616, 619, 621, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "string_view": [475, 536], "stringly": 456, "stringmap": 501, "stringmapentry": 579, "stringref": [459, 501, 593, 617, 619, 621, 622, 644], "stringsort": 459, "stringswitch": 601, "stringwithcstring": 593, "stringwithspecialstring": 593, "strip": [451, 463, 474, 487, 498, 499, 501, 509, 567, 579, 593, 609], "stripped": [487, 497, 593], "stripping": [463, 473, 499, 549, 552, 577, 579], "strippointercast": 459, "striv": [458, 459, 534, 609], "strlen": 579, "strong": [440, 444, 460, 509, 514, 516, 549, 559, 561, 579, 582, 591, 598], "strongest": 594, "strongly": [456, 459, 485, 508, 516, 518, 536, 540, 541, 550, 553, 591, 603, 640, 642, 645, 646, 651, 653, 654], "stroustrup": 579, "strr": 614, "strtab": [440, 447, 589], "strtab_blob": 447, "strtod": [501, 636, 637, 638, 639, 640, 641, 642, 643, 644], "strtol": 501, "struct": [440, 447, 457, 460, 501, 502, 505, 511, 513, 516, 518, 547, 560, 566, 567, 570, 571, 572, 574, 579, 587, 593, 594, 611, 613, 614, 615, 619, 642, 644, 645, 653, 654], "struct_anon": 447, "struct_nam": 447, "struct_named": 447, "structtyp": 579, "structur": [440, 443, 444, 447, 457, 459, 460, 471, 476, 478, 489, 506, 508, 511, 516, 518, 519, 521, 523, 524, 527, 530, 545, 548, 550, 551, 552, 553, 554, 556, 567, 571, 572, 575, 577, 582, 585, 593, 595, 601, 605, 614, 615, 618, 619, 621, 637, 638, 640, 641, 642, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "structural": [463, 501, 506, 549, 585, 645, 654], "structurally": [447, 517, 549], "structured": [447, 451, 485, 492, 493, 506, 511, 549, 551, 560, 593, 646], "structuring": [548, 615], "struggled": 521, "stryjewsk": 577, "stt_amdgpu_hsa_kernel": 440, "stt_fil": [487, 497], "stt_func": [440, 487], "stt_gnu_ifunc": 487, "stt_notyp": 440, "stt_object": [440, 487], "stt_section": 487, "stub": [457, 503, 536, 561, 563, 579, 614, 623, 624, 625], "stuck": [583, 645, 654], "student": 504, "studio": [442, 455, 513, 521, 522, 593], "study": 551, "studying": [516, 580], "stuff": [456, 457, 501, 556, 579, 595, 603, 608, 615, 619, 639, 640, 642, 643, 644, 650, 651, 653], "stuffing": 460, "stumped": 614, "stupid": 451, "stwu": 457, "sty": 605, "styl": [440, 442, 444, 451, 460, 463, 464, 466, 467, 468, 473, 474, 485, 487, 488, 493, 498, 501, 505, 509, 518, 523, 548, 567, 579, 584, 586, 594, 601, 603, 604, 616, 637, 642, 645, 648, 653, 654], "styled": 501, "styleguid": 584, "stylistic": 459, "sub": [438, 444, 447, 452, 453, 456, 457, 460, 464, 485, 505, 509, 512, 513, 521, 525, 542, 553, 561, 579, 585, 601, 603, 605, 609, 614, 638, 643, 649], "sub1": 460, "sub32rr": 593, "sub_32": 555, "sub_8b": 555, "sub_r": 603, "sub_rr": 603, "subblock": 447, "subcl": [443, 457, 501, 543, 555, 593, 603, 614, 615], "subclass": [443, 457, 459, 501, 518, 543, 579, 585, 603, 605, 615, 619, 637, 648], "subclassed": [457, 579, 614], "subclassoptionaldat": 561, "subclassref": 604, "subcommand": [615, 616, 617], "subcomponent": 509, "subd": 581, "subdirector": [455, 456, 464, 521, 548, 607, 608, 614], "subdirectory": [455, 456, 464, 540, 548, 580, 607, 608, 609, 614], "subdivided": 549, "subel": [549, 550], "subexpress": [443, 550, 594, 637, 639, 640, 641, 642, 648, 650, 651, 652, 653], "subfield": 603, "subfold": 510, "subgraph": [508, 577, 585], "subject": [440, 454, 457, 459, 509, 526, 529, 536, 542, 549, 578, 579, 610, 619], "subl": [457, 460], "sublety": 525, "sublist": 456, "subloop": 610, "subm": [450, 451, 509, 520, 578], "submiss": 509, "submit": 578, "submitted": [504, 509], "submitting": [520, 607], "submodul": 581, "subnormal": [549, 562], "subobject": 611, "suboptimal": 581, "subpath": [464, 548], "subprogram": [549, 593, 644], "subproject": [459, 509, 520, 521, 539, 581, 587, 609], "subproject_branch": 581, "subrang": 549, "subreg": [549, 555, 614], "subreg_to_reg": 555, "subregclasslist": 614, "subregindex": 555, "subregist": 596, "subregister": 614, "subroutin": 549, "subroutine2": 593, "subscrib": [509, 578], "subscribed": 578, "subscript": [443, 549, 577], "subscripted": 549, "subsect": [489, 493, 556, 563, 579], "subsequent": [226, 371, 440, 441, 457, 468, 501, 509, 511, 519, 542, 549, 557, 574, 577, 593, 594, 596, 603, 613, 614, 623, 624, 625, 638, 639], "subsequently": [511, 549, 554, 584], "subset": [443, 444, 464, 468, 485, 487, 497, 509, 517, 519, 521, 536, 549, 551, 562, 563, 579, 583, 593, 594, 596, 609, 645, 654], "subsetting": 583, "subsidiary": 601, "subst": [603, 604, 605], "substantial": [453, 639, 650], "substantially": [443, 505, 518, 549, 587, 594], "substitu": [456, 475, 549, 577], "substitut": [444, 464, 596, 603, 609], "substituted": [457, 460, 563, 603], "substituting": [540, 603], "substr": 501, "substream": [489, 565, 575], "substring": [485, 506, 609], "subsubsect": 556, "subsystem": [457, 549, 587], "subtarget": [457, 479, 500, 527, 549], "subtargetemitt": 614, "subtargetfeatur": [605, 614], "subtl": [453, 456, 519, 551, 567, 637, 640, 645, 648, 650, 651, 654], "subtmp": [638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "subtmp5": [642, 653], "subtool": 502, "subtract": [439, 457, 506, 512, 549], "subtracting": [506, 549], "subtyp": [511, 614], "subvector": 457, "subvers": [509, 521, 523, 542, 544, 581, 587, 609], "subvert": 454, "succ": 459, "succeed": [450, 454, 459, 460, 461, 465, 468, 469, 470, 472, 477, 480, 482, 499, 500, 511, 537, 543, 579, 609, 621, 622, 637, 639, 648, 653], "succeeded": [447, 448, 464, 615], "succeeding": [464, 549], "success": [459, 461, 479, 485, 509, 511, 525, 549, 579, 614, 615, 619, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "success_ord": 444, "successful": [471, 521, 544, 549, 581, 589, 609], "successfully": [443, 459, 462, 478, 484, 509, 511, 527, 537, 540, 541, 542, 544, 553, 563, 594, 598, 613, 641, 652], "successively": 511, "successor": [448, 457, 459, 476, 511, 516, 549, 553, 577, 585, 593, 614], "succinct": 464, "such": [437, 438, 439, 440, 443, 444, 446, 447, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 468, 470, 473, 475, 476, 478, 479, 486, 487, 489, 501, 502, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 529, 530, 535, 536, 539, 540, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 560, 561, 562, 563, 564, 566, 567, 569, 572, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 596, 598, 599, 601, 603, 604, 605, 607, 609, 610, 613, 614, 615, 619, 621, 622, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "sudo": [521, 538, 607], "suff": 518, "suffic": [446, 572], "sufficient": [440, 441, 443, 444, 445, 451, 460, 501, 516, 518, 519, 521, 526, 540, 543, 544, 549, 557, 574, 578, 579, 581, 582, 594, 598, 603, 636, 647], "sufficiently": [516, 519, 521, 549, 577, 584], "suffix": [437, 440, 455, 459, 464, 465, 469, 473, 477, 487, 501, 512, 540, 549, 579, 594, 609, 614, 615, 624, 625, 638, 649], "suffixed": [473, 584, 601], "sugar": 549, "suggest": [443, 459, 509, 516, 521, 541, 549, 563, 576, 578, 579, 587, 594, 598, 615], "suggested": [453, 509, 580, 584, 594], "suggesting": [578, 594, 602, 605], "suing": 625, "suit": [442, 456, 457, 502, 509, 512, 520, 523, 530, 534, 538, 541, 542, 561, 579, 581, 586, 593, 594, 616], "suitabl": [447, 454, 456, 457, 473, 500, 501, 504, 505, 506, 517, 518, 527, 549, 551, 553, 554, 562, 563, 577, 579, 584, 593, 598, 609], "suitably": 579, "suited": [457, 511, 589, 621], "suiv": 620, "sum": [447, 448, 549, 579, 613, 617], "sum_1": 490, "sum_2": 490, "summar": [473, 488, 549, 608], "summaris": [446, 494], "summariz": [457, 478, 505, 518, 589], "summarized": [549, 572, 574, 577], "summarizing": 464, "summary": [447, 460, 461, 464, 465, 466, 468, 469, 472, 473, 474, 477, 479, 480, 482, 485, 486, 487, 490, 492, 493, 494, 496, 497, 499, 500, 501, 524, 575, 577, 578, 591, 594, 597, 598, 642, 644, 653], "summat": 549, "summed": 473, "summing": 567, "sumo": 440, "sun": [457, 615], "sunk": [440, 443, 527, 593], "sunwspro": 521, "sup": [457, 552, 614], "supercl": [579, 601, 603, 604, 605, 615], "superclass": [443, 579, 601, 603, 614, 615], "superfluous": 519, "superiorly": 485, "superpos": 579, "superreg": 614, "superset": [444, 549], "supersparc": 614, "superword": [550, 613], "suppl": [8, 49, 106, 135, 190, 307, 338, 379, 439, 503, 590], "supplementing": [464, 498], "supplied": [15, 345, 447, 464, 468, 490, 529, 540, 549, 552, 563, 579, 615, 619, 645, 654], "supply": [438, 468, 473, 505, 529, 538, 540, 542, 544, 557, 563, 581, 621, 622, 623], "supplying": [511, 579], "support": [11, 46, 48, 49, 109, 133, 193, 202, 204, 205, 213, 215, 216, 231, 341, 376, 378, 379, 438, 439, 440, 442, 443, 444, 445, 446, 447, 449, 453, 454, 455, 456, 458, 459, 460, 464, 465, 468, 478, 483, 485, 486, 488, 489, 501, 505, 507, 509, 512, 513, 517, 518, 519, 521, 523, 524, 529, 530, 534, 535, 539, 540, 543, 545, 546, 547, 548, 549, 552, 555, 561, 562, 563, 567, 569, 571, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 589, 591, 593, 594, 596, 600, 601, 603, 607, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655], "supported": [46, 133, 231, 376, 437, 438, 439, 440, 444, 447, 453, 455, 459, 460, 464, 468, 472, 473, 475, 478, 486, 488, 489, 490, 501, 502, 503, 505, 509, 512, 513, 515, 516, 518, 521, 524, 530, 534, 535, 536, 539, 540, 542, 548, 555, 556, 561, 563, 569, 575, 579, 581, 582, 585, 587, 589, 591, 595, 599, 601, 603, 605, 613, 614, 616, 619, 641, 652], "supporting": [457, 501, 534, 535, 536, 539, 577, 579, 593, 599, 621, 645, 654], "supporttest": 455, "suppos": [490, 511, 524, 543, 561, 571, 581, 599, 619], "supposed": [457, 548, 549, 561, 567, 615], "suppress": [459, 462, 464, 505, 549, 593, 610, 619], "suppressed": [459, 486, 549], "sure": [443, 444, 446, 450, 455, 457, 459, 461, 473, 501, 504, 505, 509, 512, 514, 516, 521, 523, 535, 536, 537, 538, 540, 541, 542, 543, 544, 558, 576, 578, 579, 588, 593, 597, 599, 602, 605, 607, 609, 613, 615, 616, 637, 638, 639, 640, 641, 642, 643, 644, 649, 653, 654], "surfac": [21, 22, 118, 119, 206, 207, 351, 352, 438, 457, 517, 616], "surgical": 579, "surpris": [579, 645, 654], "surprising": [549, 561], "surprisingly": [516, 521, 637, 639, 648, 650], "surround": 577, "surrounded": [460, 536, 549, 555], "surrounding": [444, 454, 460, 519, 549, 584, 594, 596, 605], "survey": 503, "surviv": [511, 594], "survived": [637, 648], "suspected": 499, "suspend1": 505, "suspend2": 505, "suspended": 505, "suspens": 505, "suspicious": 599, "sv": [455, 536], "sve": [549, 584], "svg": [455, 617], "svn": [510, 516, 520, 523, 542, 576, 584, 596, 607, 613, 649], "svptr": 549, "svr4": 468, "sw": [493, 583, 587, 594], "swap": [438, 444, 446, 538, 549, 571], "swapped": [446, 549, 560], "swapping": 446, "sweep": 518, "swiched": 444, "swift": [549, 563, 584], "swiftcc": [447, 549], "swifterror": [447, 549], "swiftmodul": 462, "swiftself": [447, 549], "swim": 583, "switch": [440, 441, 454, 455, 467, 487, 497, 501, 505, 511, 512, 535, 538, 542, 543, 546, 577, 579, 581, 594, 598, 601, 607, 613, 614, 619, 621, 637, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651], "switched": [549, 618], "switching": [549, 584], "switchsect": [457, 518], "switchtosect": 457, "swizzl": 440, "sy": [445, 521, 623, 624, 625, 643, 644], "sym": [486, 487, 488, 489, 492, 493, 513, 563, 588, 623, 624, 625], "symaddr": [623, 624, 625], "symbol": [41, 131, 227, 372, 447, 453, 457, 459, 463, 465, 466, 468, 470, 473, 475, 481, 487, 488, 490, 492, 493, 494, 497, 498, 501, 507, 518, 521, 549, 551, 554, 567, 575, 576, 579, 582, 587, 593, 598, 603, 611, 614, 618, 619, 621, 622, 625, 638, 639, 640, 641, 642, 643, 644, 645, 649, 651, 652, 653, 654, 656], "symbol1": [488, 513], "symbol2": [488, 513], "symbol_in_partit": 513, "symbolic": [438, 439, 443, 457, 488, 518, 535, 541, 550, 563, 579, 598, 607], "symbolically": 447, "symboliz": [463, 467, 536, 617], "symbolized": 498, "symbollookup": 625, "symbolmap": 563, "symbolnam": 440, "symbolresolv": [623, 624, 625], "symbolsiz": 570, "symbolstringptr": 563, "symbolt": 579, "symbytesiz": [567, 570], "symlik": 455, "symlink": 455, "symlinked": 455, "symmetrical": 502, "symmetry": 609, "symnam": 488, "symobl": 513, "symposium": 502, "symptom": 521, "symptomatic": 591, "symrecordstream": 567, "symtab": [440, 462, 579], "sync": [444, 562, 619], "synch_and_fetch": 540, "synchroniz": [438, 440, 444, 549, 563, 581], "synchronized": 552, "synchronously": 581, "syncscop": 549, "synergistic": 585, "synonym": 468, "synops": 501, "syntactic": [460, 549, 639, 650], "syntactically": 549, "syntax": [11, 12, 40, 46, 51, 85, 103, 110, 130, 133, 137, 173, 189, 194, 225, 226, 231, 236, 270, 286, 342, 370, 371, 376, 381, 417, 435, 436, 440, 456, 457, 459, 465, 466, 485, 487, 488, 489, 497, 501, 514, 519, 521, 536, 540, 550, 551, 555, 556, 557, 564, 579, 586, 591, 593, 595, 601, 609, 619, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 650, 651, 652, 653], "synthesiz": [593, 639, 650], "synthesized": [460, 512, 593], "synthesizedcd": 446, "synthetic": [487, 593, 614], "sysadmin": 581, "syscall": 457, "sysmsg_op_ecc_err_interrupt": [46, 133, 231, 376], "sysmsg_op_host_trap_ack": [46, 133, 231, 376], "sysmsg_op_reg_rd": [46, 133, 231, 376], "sysmsg_op_ttrace_pc": [46, 133, 231, 376], "sysroot": [540, 541, 542, 605], "system": [442, 443, 444, 445, 446, 450, 453, 455, 456, 457, 459, 462, 464, 465, 466, 468, 471, 489, 501, 503, 504, 509, 510, 512, 514, 517, 518, 519, 520, 522, 524, 535, 538, 540, 541, 542, 544, 548, 550, 551, 552, 559, 562, 563, 571, 575, 576, 578, 579, 580, 581, 582, 587, 588, 591, 593, 594, 596, 598, 601, 605, 607, 608, 612, 615, 616, 617, 621, 622, 623, 624, 625, 638, 639, 640, 641, 642, 643, 644, 645, 647, 650, 653, 654], "system_error": 643, "system_vgpr_workitem_id_undefined": 440, "system_vgpr_workitem_id_x": 440, "system_vgpr_workitem_id_x_y": 440, "system_vgpr_workitem_id_x_y_z": 440, "systematic": 594, "systemz": [457, 521, 549, 555, 584], "sysv": [486, 494, 503], "sz": 525, "t1": [457, 549, 561, 609, 617], "t1item": 561, "t2": [457, 460, 549, 561, 562, 609, 617], "t2item": 561, "t3": [457, 549], "t4": 549, "t5": 549, "tab": [459, 460, 473, 587], "tabl": [46, 133, 231, 376, 437, 438, 439, 441, 443, 446, 447, 454, 455, 462, 463, 468, 470, 471, 478, 481, 485, 487, 488, 489, 492, 493, 497, 498, 500, 501, 505, 521, 522, 525, 534, 543, 546, 549, 551, 552, 554, 561, 563, 565, 567, 572, 574, 575, 577, 579, 587, 594, 598, 601, 605, 608, 613, 614, 618, 619, 621, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654], "tabledef": 479, "tablegen": [455, 500, 512, 521, 527, 532, 541, 542, 546, 548, 584, 612, 614], "tablegen_json_vers": 601, "tablet": 558, "tabsiz": 473, "tackl": [514, 642, 653], "tackling": [639, 650], "tag": [86, 174, 271, 304, 331, 418, 436, 447, 459, 509, 510, 518, 521, 549, 557, 559, 579, 581, 598, 601], "tag0": [436, 549], "tag1": [436, 549], "tag2": 549, "tag3": 549, "tag_apple_property": 593, "tag_base_typ": 593, "tag_memb": 593, "tag_offset": 549, "tag_pointer_typ": 593, "tag_structure_typ": 593, "tagged": [437, 542, 549, 579], "tagging": 586, "tahit": 440, "tail": [447, 460, 505, 518, 549, 561, 562, 587, 593, 603, 604, 618, 645, 654], "tail_ex": 618, "tailcall": [457, 594], "tailcalle": 457, "tailcallopt": [457, 549], "tailcc": [447, 457, 549], "taill": 130, "tailored": [489, 538], "tak": [440, 442, 443, 444, 446, 447, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 466, 470, 474, 477, 480, 482, 483, 485, 488, 489, 490, 499, 501, 502, 505, 509, 510, 511, 512, 513, 517, 518, 519, 521, 523, 525, 529, 539, 543, 545, 546, 549, 551, 552, 554, 556, 558, 561, 562, 563, 577, 579, 581, 582, 585, 588, 589, 590, 593, 594, 595, 596, 598, 601, 603, 604, 611, 614, 615, 616, 618, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656], "takecallback": 579, "takeerror": [563, 579, 621, 622, 623, 624, 625], "takelast": 579, "taken": [443, 449, 453, 457, 479, 501, 505, 511, 516, 529, 536, 549, 553, 555, 560, 561, 577, 579, 581, 582, 585, 588, 593, 594, 598, 599, 605, 611, 614, 645, 654], "taking": [447, 452, 465, 470, 504, 547, 549, 577, 579, 585, 590, 593, 607, 642, 653, 654], "talk": [459, 502, 512, 524, 530, 549, 559, 579, 587, 615, 637, 638, 639, 640, 642, 645, 646, 647, 648, 649, 650, 651, 653, 654], "talking": [459, 590, 637, 638, 645, 647, 648, 649, 654], "tally": 608, "tap": 521, "tar": [521, 523, 541, 588], "tarball": [521, 541, 542], "target": [41, 85, 131, 173, 227, 270, 372, 417, 438, 439, 442, 444, 445, 446, 447, 453, 454, 455, 456, 459, 463, 464, 465, 472, 475, 479, 485, 487, 488, 503, 505, 510, 512, 516, 517, 518, 521, 523, 524, 525, 527, 529, 530, 532, 534, 539, 541, 542, 544, 545, 546, 548, 554, 557, 559, 561, 563, 564, 566, 591, 593, 594, 596, 598, 601, 605, 607, 608, 609, 611, 612, 613, 615, 621, 622, 623, 624, 625, 639, 640, 641, 642, 644, 646, 650, 651, 652, 653], "target_compile_definit": 456, "target_dat": [650, 651, 652, 653], "target_link_librar": 455, "targetasminfo": [518, 614], "targetcallingconv": 614, "targetdescript": 614, "targeted": [457, 516, 541, 548, 549, 614, 620], "targetfeatur": 440, "targetframeinfo": 614, "targetframelowering": 511, "targetfunc": 579, "targetgroup": 548, "targetinfo": [509, 614], "targeting": [440, 456, 457, 514, 516, 521, 539, 540, 541, 549, 559, 582, 594, 605, 643], "targetinstrformat": 614, "targetinstrinfo": 584, "targetjitinfo": 614, "targetlibraryinfo": 584, "targetlowering": [451, 511, 512, 529, 584, 614, 617], "targetloweringbas": 441, "targetloweringobjectfil": 457, "targetloweringopt": 617, "targetmachin": [518, 554, 562, 584, 614, 615, 621, 623, 624, 625, 639, 640, 641, 642, 643], "targetnam": 555, "targetopt": [457, 643], "targetpassconfig": 531, "targetregisterclass": [457, 614], "targetregisterdesc": [457, 614], "targetregisterinfo": 584, "targetregistry": [457, 614, 643], "targetregsterinfo": 457, "targets_to_build": 541, "targetselect": [625, 639, 640, 641, 642, 643, 644], "targetselectiondag": [457, 512, 614], "targetsubtarget": 614, "targettripl": 643, "tarjan": 615, "task": [459, 460, 505, 511, 512, 530, 539, 549, 561, 582, 593, 595, 598, 599], "task_begin": 460, "task_end": 460, "taught": 457, "tb": 614, "tba": [440, 516, 550, 560], "tba_h": [40, 439], "tba_lo": [40, 439], "tbb": 614, "tbcc": 614, "tbd": [436, 438, 553, 563], "tbepl": 583, "tblgen": [455, 457, 463, 512, 539, 541, 601, 603, 605, 614], "tblgensubtarget": 614, "tbr_jtr": 555, "tcb": 592, "tcp": 625, "tcpchannel": 625, "td": [441, 457, 466, 500, 512, 546, 555, 562, 601, 603, 604, 605, 614], "tdm": 537, "tdrr": 466, "tdtag": 601, "teach": [512, 621, 638, 649], "teaching": [646, 647], "team": [502, 542, 580, 581, 585], "tear": 511, "technical": [456, 458, 509, 520, 551, 581, 617], "technically": 475, "techniqu": [443, 451, 457, 518, 530, 549, 561, 579, 594, 613, 614, 615, 616, 637, 639, 640, 641, 642, 646, 647, 648, 650, 651, 652, 653], "technological": 508, "technology": [552, 645, 654], "tedious": 619, "tee": 451, "tel": [443, 451, 455, 457, 459, 461, 501, 506, 509, 512, 518, 521, 540, 549, 552, 561, 563, 576, 579, 580, 581, 593, 603, 608, 609, 620, 637, 638, 642, 644, 645, 648, 649, 653, 654], "telling": 501, "temp": 544, "templat": [443, 459, 473, 501, 520, 543, 556, 561, 577, 599, 601, 604, 605, 614, 615, 619, 625, 638], "templatearglist": 604, "templated": [501, 502, 579, 604], "templateparam": 549, "temporal": 549, "temporally": 453, "temporar": [459, 514, 549, 579, 594, 609], "temporarily": [451, 604], "temporary": [439, 457, 459, 464, 479, 513, 529, 536, 549, 550, 551, 555, 577, 579, 581, 590, 608, 609, 619], "tempted": 599, "tempting": [459, 521, 594], "ten": [519, 571], "tend": [476, 485, 509, 515, 519, 521, 530, 548, 563, 579, 584, 588, 593], "tension": [642, 653], "tensorflow": 551, "tentat": 549, "term": [443, 444, 446, 457, 458, 459, 485, 509, 511, 514, 518, 527, 536, 549, 550, 555, 560, 561, 563, 577, 578, 585, 593, 596, 598, 599, 603, 604, 609, 612, 622], "termed": 440, "termin": [457, 579, 593, 599, 640, 651], "terminal": [451, 468, 469, 477, 480, 482, 489, 499, 501, 561], "terminat": [440, 464, 496, 511, 516, 536, 549, 566, 579, 585, 591, 593, 609], "terminated": [440, 447, 511, 513, 562, 567, 572, 579, 589, 591, 614, 640, 651], "terminating": [516, 579, 603, 614], "terminator": [449, 459, 476, 511, 516, 561, 577, 579, 585, 614, 615], "terminology": [440, 449, 456, 529, 549, 584, 586, 612, 644], "ternary": 457, "terribly": 442, "territory": 521, "terror": 442, "tessel": 440, "test": [440, 442, 443, 451, 452, 453, 454, 457, 460, 463, 471, 479, 480, 485, 489, 490, 494, 495, 496, 498, 501, 502, 504, 505, 506, 511, 512, 514, 520, 523, 525, 530, 538, 539, 541, 542, 543, 544, 551, 555, 561, 564, 577, 578, 579, 580, 581, 582, 586, 587, 591, 594, 597, 598, 601, 611, 615, 619, 625, 639, 640, 642, 643, 646, 647, 650, 651, 653], "test1": [556, 595, 598, 609], "test2": [494, 496], "test5": 460, "test_arg": 452, "test_argu": 452, "test_blockaddress": 525, "test_devic": 502, "test_exec_root": 464, "test_format": 464, "test_fuzz": 551, "test_hd": 502, "test_host": 502, "test_nam": 452, "test_source_root": 464, "test_suite_benchmarking_only": 607, "test_suite_collect_stat": 607, "test_suite_remote_host": 607, "test_suite_run_benchmark": 607, "test_suite_run_typ": 607, "test_suite_run_und": 607, "test_suite_spec2000_root": 607, "test_suite_spec2006_root": 607, "test_suite_spec2017_root": 607, "test_suite_subdir": 607, "test_suite_use_perf": 607, "testabl": [530, 578], "testcas": [461, 509, 549, 579, 638, 649], "testcase_d": 551, "testcaselength": 579, "testcleanup": 549, "tested": [454, 502, 509, 511, 517, 521, 535, 539, 549, 551, 561, 577, 579, 582, 584, 591, 609, 615, 642, 653], "tester": [509, 542], "testfnptr": 549, "testfunc": [639, 650], "testing": [443, 453, 454, 455, 460, 461, 464, 465, 489, 500, 505, 509, 517, 521, 529, 536, 538, 548, 577, 579, 580, 581, 582, 588, 594, 607, 608, 612], "testingconfig": 464, "testl": 594, "testq": 594, "testresult": 520, "testrunn": 464, "testsuit": [460, 464, 582], "testsuitemakefileguid": 607, "tex": 608, "text": [455, 457, 458, 460, 468, 473, 475, 478, 486, 488, 490, 494, 496, 509, 512, 513, 517, 551, 556, 557, 578, 579, 590, 593, 594, 596, 604, 607, 608, 609, 614, 616, 619, 623, 636, 645, 647, 654, 656], "textfileread": 459, "textual": [457, 465, 473, 509, 514, 517, 549, 550, 557, 560, 601, 605, 609, 617, 639, 650], "textually": [514, 565, 603], "textur": 438, "tfe": [18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 35, 36, 37, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 199, 200, 201, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 316, 348, 349, 350, 351, 352, 358, 359, 360, 361, 362, 365, 366, 367, 440], "tgid_size_en": 440, "tgid_x_en": 440, "tgid_y_en": 440, "tgid_z_en": 440, "tgt": [0, 1, 2, 3, 500], "th": [440, 446, 470, 511, 549, 561, 569, 614, 619, 636, 647], "than": [439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 453, 455, 457, 459, 460, 462, 465, 468, 470, 473, 475, 479, 485, 486, 489, 490, 493, 496, 498, 501, 502, 505, 506, 508, 509, 510, 511, 512, 514, 516, 517, 518, 520, 521, 525, 529, 530, 534, 536, 537, 538, 542, 544, 545, 547, 548, 549, 551, 552, 553, 556, 557, 558, 560, 561, 563, 565, 567, 569, 571, 572, 574, 577, 579, 580, 581, 582, 583, 585, 587, 588, 590, 592, 593, 594, 596, 598, 601, 603, 604, 609, 610, 614, 615, 618, 619, 621, 622, 623, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "thank": [504, 544, 591], "that": [11, 24, 32, 35, 37, 124, 209, 217, 220, 222, 354, 362, 365, 367, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 483, 485, 486, 487, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "the": [0, 1, 2, 4, 8, 9, 11, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 38, 39, 40, 41, 46, 48, 49, 52, 54, 55, 58, 70, 76, 85, 86, 87, 103, 106, 107, 109, 113, 114, 115, 116, 117, 118, 119, 129, 130, 131, 133, 135, 139, 140, 141, 150, 161, 173, 174, 175, 189, 190, 191, 193, 197, 198, 199, 200, 201, 206, 207, 223, 224, 225, 226, 227, 231, 233, 234, 237, 239, 240, 241, 253, 260, 270, 271, 272, 286, 304, 307, 316, 325, 331, 338, 339, 341, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 368, 369, 370, 371, 372, 376, 378, 379, 382, 384, 385, 388, 400, 407, 417, 418, 419, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 517, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 536, 537, 538, 541, 544, 545, 546, 548, 552, 553, 554, 555, 556, 557, 559, 561, 564, 566, 576, 580, 582, 586, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 606, 609, 610, 611, 612, 616, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 639, 644, 646, 649, 650, 655, 656], "the_execution_engin": [650, 651, 652, 653], "the_fpm": [650, 651, 652, 653], "the_funct": [649, 650, 651, 652, 653], "the_modul": [649, 650, 651, 652, 653], "theadsafemodul": 563, "thecontext": [638, 639, 640, 641, 642, 643, 644], "thecu": 644, "thedoc": 619, "thedoclist": 619, "theexecutionengin": 644, "thefpm": [639, 640, 641, 642], "thefunct": [638, 639, 640, 641, 642, 643, 644], "thei": 577, "their": [436, 440, 441, 443, 444, 446, 447, 450, 454, 455, 456, 457, 459, 463, 464, 468, 470, 471, 473, 474, 476, 478, 485, 486, 487, 490, 492, 493, 501, 502, 506, 508, 509, 510, 511, 514, 516, 518, 520, 521, 524, 525, 526, 527, 530, 534, 537, 542, 546, 547, 548, 549, 550, 551, 552, 553, 555, 558, 561, 562, 563, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 605, 607, 609, 610, 611, 614, 615, 616, 618, 619, 621, 622, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654], "thej": [639, 640, 641, 642, 644], "them": [440, 443, 444, 446, 447, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 464, 468, 473, 478, 481, 482, 485, 487, 489, 490, 492, 493, 496, 497, 501, 502, 504, 506, 508, 509, 510, 511, 514, 516, 517, 518, 519, 521, 523, 524, 526, 527, 529, 530, 532, 536, 539, 541, 542, 543, 545, 546, 548, 549, 551, 552, 555, 557, 558, 560, 561, 562, 563, 574, 576, 577, 578, 579, 580, 581, 584, 585, 587, 588, 590, 592, 593, 594, 595, 596, 598, 599, 601, 602, 603, 605, 607, 608, 609, 610, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 636, 637, 638, 639, 640, 641, 642, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "themodul": [638, 639, 640, 641, 642, 643, 644], "themself": 509, "themselv": [444, 447, 457, 464, 501, 509, 517, 548, 549, 561, 579, 581, 593, 594, 603, 605, 610, 617, 618, 637, 648], "then": [438, 439, 440, 442, 443, 444, 446, 447, 448, 451, 453, 455, 456, 457, 458, 459, 460, 464, 465, 466, 469, 470, 473, 476, 477, 480, 482, 483, 485, 487, 489, 490, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 521, 523, 524, 525, 528, 529, 530, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 563, 565, 566, 567, 570, 571, 572, 577, 578, 579, 580, 581, 584, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 603, 604, 605, 607, 608, 609, 610, 611, 613, 614, 615, 617, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 641, 642, 643, 644, 647, 648, 649, 650, 652, 653], "then1": 594, "then2": 594, "then_": [651, 652, 653], "then_bb": [651, 652, 653], "then_val": [651, 652, 653], "thenbb": [640, 641, 642, 643, 644, 651], "thenv": [640, 641, 642, 643, 644], "theoretical": 485, "theoretically": [579, 599], "theory": [540, 561, 567, 619, 654], "ther": [209, 220, 222, 437, 438, 439, 440, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 464, 468, 473, 475, 478, 479, 484, 485, 487, 490, 492, 493, 494, 496, 497, 501, 502, 504, 505, 506, 507, 508, 509, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 551, 553, 555, 556, 557, 559, 560, 561, 562, 563, 565, 567, 569, 570, 572, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 614, 615, 616, 618, 619, 622, 623, 637, 638, 639, 640, 641, 642, 644, 645, 648, 649, 650, 651, 652, 653, 654], "thereaft": 596, "thereby": [501, 549, 596], "therefor": [440, 444, 446, 457, 485, 501, 502, 505, 506, 509, 511, 519, 535, 549, 557, 558, 562, 564, 577, 579, 584, 585, 593, 594, 596, 610, 615, 619], "thereof": 458, "thes": [8, 103, 106, 189, 190, 226, 286, 307, 338, 371, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 469, 473, 481, 485, 493, 494, 498, 501, 502, 504, 505, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 524, 525, 526, 529, 530, 536, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 560, 561, 562, 563, 564, 565, 567, 572, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 587, 589, 593, 594, 596, 598, 599, 601, 603, 605, 607, 608, 609, 611, 613, 614, 615, 616, 617, 618, 619, 621, 622, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "thetargetmachin": 643, "thetripl": 584, "they": [436, 437, 438, 439, 440, 443, 444, 446, 447, 450, 451, 452, 455, 456, 457, 458, 459, 460, 461, 464, 466, 468, 470, 475, 476, 485, 486, 487, 490, 497, 498, 499, 501, 502, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 527, 529, 530, 536, 537, 538, 542, 543, 546, 547, 548, 549, 550, 551, 553, 555, 557, 560, 561, 563, 565, 566, 574, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 593, 594, 596, 597, 598, 599, 601, 603, 604, 605, 607, 608, 609, 610, 611, 613, 614, 615, 617, 618, 619, 621, 622, 624, 637, 638, 639, 640, 642, 645, 648, 649, 650, 651, 653, 654], "thin": [453, 455, 468, 473, 481, 483, 549, 579], "thing": [443, 446, 447, 451, 453, 456, 457, 458, 459, 460, 464, 501, 502, 506, 509, 511, 517, 519, 521, 523, 527, 530, 539, 541, 542, 544, 548, 549, 551, 556, 557, 560, 561, 575, 576, 577, 579, 580, 581, 591, 593, 594, 599, 601, 603, 608, 609, 615, 617, 619, 621, 622, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "think": [443, 450, 455, 457, 459, 506, 509, 512, 518, 519, 524, 543, 546, 549, 550, 560, 562, 566, 578, 579, 581, 582, 594, 599, 603, 640, 643, 647, 651], "thinking": [519, 579, 645, 654], "thinlto": [449, 594, 597], "third": [442, 447, 457, 459, 485, 489, 501, 505, 506, 511, 513, 518, 519, 521, 524, 542, 549, 555, 561, 564, 579, 580, 593, 594, 596, 598, 608, 614, 615, 618, 619, 638, 645, 649, 654], "this": [0, 1, 2, 4, 8, 11, 15, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 50, 52, 57, 76, 86, 88, 89, 90, 103, 106, 124, 125, 126, 131, 132, 133, 136, 161, 174, 189, 190, 202, 204, 205, 209, 213, 215, 216, 217, 218, 219, 220, 222, 225, 226, 227, 228, 229, 230, 231, 235, 237, 260, 271, 286, 287, 288, 292, 293, 297, 298, 299, 300, 304, 307, 317, 318, 319, 320, 321, 323, 331, 332, 338, 345, 362, 363, 364, 370, 371, 372, 373, 374, 375, 376, 380, 382, 387, 407, 418, 420, 421, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 482, 483, 485, 486, 487, 489, 490, 492, 493, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 601, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "thischar": [636, 637, 638, 639, 640, 641, 642, 643, 644], "thom": 594, "thoroughly": [640, 651], "thos": [438, 440, 443, 444, 451, 453, 455, 456, 457, 458, 459, 460, 464, 467, 468, 470, 473, 476, 485, 486, 487, 489, 490, 501, 506, 508, 509, 511, 517, 518, 519, 520, 521, 522, 526, 528, 529, 538, 540, 541, 543, 548, 549, 550, 551, 553, 560, 561, 563, 575, 577, 579, 581, 582, 587, 590, 591, 593, 594, 596, 598, 599, 609, 611, 612, 614, 615, 616, 619, 642, 643, 644, 653], "thost": 523, "though": [444, 448, 457, 460, 475, 479, 501, 502, 509, 511, 512, 513, 516, 518, 519, 524, 529, 539, 543, 549, 552, 558, 560, 561, 565, 577, 579, 581, 587, 593, 594, 603, 608, 609, 615, 621, 637, 638, 640, 642, 644, 648, 649, 650, 653], "thought": [457, 524, 549, 560, 572, 584, 598, 604], "thousand": [551, 571, 577], "thre": [438, 442, 447, 451, 456, 457, 460, 461, 485, 490, 501, 505, 508, 511, 515, 519, 521, 524, 529, 534, 549, 555, 560, 561, 564, 565, 577, 579, 584, 585, 588, 589, 594, 598, 601, 609, 614, 615, 616, 621, 637, 640, 648], "thread": [438, 439, 443, 444, 445, 447, 455, 457, 460, 462, 473, 490, 504, 505, 507, 510, 511, 518, 536, 550, 551, 562, 563, 577, 581, 583, 584, 587, 591, 592, 594, 598, 607, 616, 617, 618, 621, 622], "thread_id": [460, 618], "thread_local": [457, 549, 598], "thread_siblings_list": 445, "threadbuff": 618, "threaded": [518, 549, 551, 563, 579], "threadgroup_size_in_wavefront": 440, "threadid": 562, "threadidx": 562, "threading": [505, 579], "threadlocal": [447, 549], "threadlocalquarantinesizekb": 591, "threadpool": 563, "threadsaf": 518, "threadsafecontext": [621, 622], "threadsafemodul": [621, 622], "threadsanitiz": 549, "threat": [458, 590], "threatened": 458, "threatening": 458, "threshold": [473, 549, 577, 583, 589, 616], "throttling": 585, "through": [440, 443, 444, 447, 448, 451, 452, 455, 456, 457, 465, 468, 485, 501, 502, 503, 504, 505, 508, 509, 511, 514, 515, 516, 517, 518, 519, 521, 527, 529, 536, 537, 539, 542, 543, 545, 547, 549, 551, 552, 553, 554, 557, 558, 559, 561, 564, 575, 577, 578, 579, 581, 584, 585, 589, 591, 593, 594, 596, 597, 598, 599, 601, 611, 613, 614, 615, 616, 619, 621, 622, 623, 624, 637, 639, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653], "throughout": [438, 439, 446, 447, 456, 460, 506, 509, 521, 549, 554, 571, 574, 579, 593, 599, 618], "throughput": [479, 485, 516], "throuhgput": 485, "throw": [502, 505, 516, 547, 549, 563, 577, 615, 623], "throwaway": 442, "throwinfo": 511, "throwing": [457, 505, 511, 549, 553, 579, 599], "thrown": [453, 511, 515, 549], "throwntyp": 549, "thumb": [444, 457, 509, 540, 599, 616], "thumb1": [503, 549], "thumb2": [457, 503, 545, 549], "thunderbird": 509, "thunderx2t99model": 614, "thunderxt8xmodel": 614, "thunk": [457, 489, 549, 561, 577, 611], "thursday": 558, "thus": [443, 444, 447, 448, 451, 452, 457, 459, 460, 501, 505, 506, 509, 511, 514, 516, 518, 536, 544, 549, 551, 553, 559, 560, 561, 565, 567, 574, 577, 578, 579, 581, 593, 594, 598, 609, 610, 615, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "thusly": 570, "ti": [440, 505, 510, 549, 563], "tian": 585, "tick": 618, "tid": 562, "tidbit": [443, 644, 646, 647, 653, 655], "tidig_cmp_cnt": 440, "tidy": [584, 615], "tiebreak": 502, "tied": [457, 471, 547, 549, 555, 593, 598], "tight": [505, 516, 552], "tightened": 524, "tightly": [549, 581, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "tii": [457, 584], "til": 585, "tiling": [55, 140, 240, 385, 585], "till": [507, 537, 579], "tim": [439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 462, 464, 465, 466, 468, 471, 473, 478, 479, 480, 485, 486, 487, 489, 490, 497, 498, 499, 501, 502, 503, 504, 505, 509, 510, 511, 512, 513, 516, 518, 520, 521, 523, 525, 526, 529, 530, 533, 534, 536, 537, 539, 540, 541, 542, 547, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 561, 562, 563, 564, 567, 571, 572, 575, 576, 577, 579, 580, 581, 583, 585, 587, 588, 591, 593, 594, 595, 596, 598, 601, 602, 603, 604, 605, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 636, 638, 639, 640, 641, 642, 646, 647, 649, 650, 651, 652, 653], "timberwolfmc": 608, "timeit": 607, "timelin": [616, 617], "timely": 598, "timeout": 551, "timeout_exitcod": 551, "timepassesisenabled": 501, "timescal": 618, "timestamp": [462, 468, 487, 497, 572, 581, 618], "timing": [485, 549, 594, 609, 615, 618], "tiny": [466, 543, 561], "tip": [451, 504, 509, 522, 581, 601, 615, 647], "tir": 459, "tirefactory": 459, "tiring": 605, "titl": [450, 509, 520, 578], "tl": [447, 457, 511, 549, 587, 594, 598], "tli": 584, "tm": [562, 614, 623, 624, 625], "tma_h": [40, 439], "tma_lo": [40, 439], "tmax": 439, "tmp": [455, 457, 460, 464, 479, 498, 518, 519, 536, 549, 579, 580, 609, 614, 639, 642, 650, 653], "tmp1": [459, 460, 519], "tmp2": [519, 642, 653], "tmp3": [460, 519], "tmp4": 519, "tmp5": 519, "tmp7": 460, "tmp9": 460, "tmpb": [642, 643, 644], "tmpf": 445, "to": [4, 8, 11, 17, 23, 24, 35, 36, 37, 38, 39, 41, 48, 49, 51, 52, 57, 58, 76, 85, 88, 89, 103, 106, 109, 114, 120, 127, 128, 129, 131, 135, 137, 141, 161, 173, 189, 190, 193, 198, 202, 203, 204, 205, 208, 209, 213, 214, 215, 216, 220, 221, 222, 223, 224, 227, 233, 234, 236, 237, 241, 260, 270, 286, 307, 332, 338, 341, 347, 353, 354, 365, 366, 367, 368, 369, 372, 378, 379, 381, 382, 387, 388, 407, 417, 420, 421, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 502, 503, 505, 506, 507, 508, 509, 511, 512, 513, 515, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 534, 536, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 565, 566, 567, 569, 570, 571, 574, 575, 576, 578, 580, 582, 583, 584, 585, 586, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656], "tobi": 585, "toc": 457, "today": [444, 459, 517, 519, 549, 575, 581, 584, 596, 598], "todefin": 601, "todo": [440, 457, 501, 509, 512, 526, 532, 541, 577, 588, 601, 602, 615], "togeth": [32, 124, 217, 362, 438, 440, 443, 446, 448, 451, 457, 460, 461, 464, 482, 483, 486, 490, 498, 499, 501, 505, 506, 509, 511, 518, 521, 524, 529, 530, 539, 548, 549, 551, 558, 563, 567, 571, 577, 579, 581, 587, 589, 593, 603, 609, 613, 615, 622, 636, 637, 638, 640, 641, 645, 647, 648, 649, 651, 652, 654], "tojittargetaddress": 563, "tok": [505, 549, 644], "tok_binary": [641, 642, 643, 644], "tok_def": [636, 637, 638, 639, 640, 641, 642, 643, 644], "tok_els": [640, 641, 642, 643, 644], "tok_eof": [636, 637, 638, 639, 640, 641, 642, 643, 644], "tok_extern": [636, 637, 638, 639, 640, 641, 642, 643, 644], "tok_for": [640, 641, 642, 643, 644], "tok_identifi": [636, 637, 638, 639, 640, 641, 642, 643, 644], "tok_if": [640, 641, 642, 643, 644], "tok_in": [640, 641, 642, 643, 644], "tok_numb": [636, 637, 638, 639, 640, 641, 642, 643, 644], "tok_then": [640, 641, 642, 643, 644], "tok_unary": [641, 642, 643, 644], "tok_var": [642, 643, 644], "tokcodefragment": 604, "token": [457, 485, 505, 512, 529, 557, 567, 581, 598, 603, 604, 619, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "token_prec": [648, 649, 650, 651, 652, 653], "tokeniz": 647, "tokidentifi": 604, "tokinteg": 604, "tokprec": [637, 638, 639, 640, 641, 642, 643, 644], "tokstring": 604, "tokvarnam": 604, "told": 509, "toler": [508, 518], "tolerat": [542, 549, 551, 597], "tolmach": 518, "tolmach94": 518, "tom": [542, 619], "tombston": 569, "tonearest": 549, "tong": 440, "tons": [560, 647], "too": [442, 451, 457, 459, 460, 501, 509, 515, 521, 523, 529, 530, 535, 536, 538, 549, 560, 561, 579, 583, 585, 594, 599, 601, 603, 609, 615, 618, 619, 622, 637, 642, 644, 645, 648, 653, 654], "took": [649, 650, 651, 652, 653], "tool": [440, 442, 443, 447, 452, 453, 455, 456, 457, 459, 460, 462, 464, 466, 467, 470, 471, 472, 473, 474, 476, 478, 479, 480, 485, 489, 491, 492, 493, 494, 495, 496, 498, 501, 502, 503, 504, 506, 507, 508, 509, 513, 518, 520, 522, 535, 536, 539, 540, 541, 542, 544, 548, 549, 550, 552, 559, 562, 564, 572, 574, 575, 576, 577, 578, 580, 581, 584, 586, 587, 588, 589, 591, 593, 597, 599, 605, 607, 609, 612, 614, 615, 637, 638, 639, 640, 647, 649, 650, 651], "tool_nam": 521, "toolchain": [453, 454, 455, 457, 459, 462, 523, 540, 565, 566, 567, 572, 575, 581, 582, 607], "tooling": [453, 539, 579, 581, 582], "toolk": [502, 562, 579, 586], "toolnam": 580, "toolset": [455, 523, 616], "toosl": 617, "top": [440, 443, 444, 447, 455, 456, 457, 459, 460, 464, 466, 471, 490, 509, 510, 511, 517, 519, 521, 529, 532, 535, 547, 548, 549, 550, 551, 553, 560, 561, 577, 578, 579, 580, 581, 589, 593, 601, 607, 608, 611, 615, 617, 619, 621, 622, 623, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654], "topic": [509, 520, 556, 558, 595, 645, 646, 647, 654], "toplevel": [648, 649, 650, 651, 652, 653], "toplevelexpr": [637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "topmost": 498, "topn": 490, "topological": 460, "topologically": 574, "topology": 445, "torec": 579, "torerr": 579, "toret": 593, "toreturn": 618, "toshio": 457, "tot": 598, "total": [440, 444, 447, 470, 484, 485, 494, 549, 551, 561, 567, 571, 574, 577, 579, 589, 592, 593, 594, 608, 615, 617], "totally": [591, 638], "touch": [504, 536, 543, 579, 590, 593], "touched": 577, "touching": [445, 549, 581, 593, 594, 615], "tough": [637, 648], "tour": [637, 648], "tout": 620, "toward": [440, 448, 452, 453, 455, 509, 517, 520, 549, 579, 594], "towardzero": 549, "town": 520, "toy": [502, 563, 617, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "tp": 563, "tpi": [489, 565, 566, 572, 575], "tpistreamhead": 574, "tpistreamvers": 574, "tpoff": 598, "tr1": 579, "trac": [473, 501, 536, 537, 549, 550, 551, 593, 598, 615], "trace_event": 617, "traced": 618, "tracevalu": 577, "tracing": [594, 616, 617, 618], "track": [440, 443, 450, 451, 457, 459, 464, 504, 509, 510, 514, 516, 517, 521, 524, 530, 549, 551, 555, 560, 561, 563, 577, 578, 579, 581, 593, 594, 596, 597, 598, 605, 615, 638, 641, 642, 644, 649, 652, 653], "tracked": [457, 461, 516, 517, 518, 549, 555, 579, 598], "tracker": 458, "tracking": [440, 450, 485, 509, 530, 544, 550, 563, 564, 579, 581, 594, 607], "tracksregliveness": 555, "trad": [451, 453, 560, 579, 594, 622], "tradbigmip": 487, "tradeoff": [444, 518, 594, 639, 650], "tradit": 468, "traditional": [442, 457, 486, 536, 577, 579, 593, 621, 636, 647], "traditionally": [443, 457, 563], "tradlittlemip": 487, "traffic": [558, 579, 581, 642, 653], "tragic": 581, "trailing": [438, 456, 459, 460, 464, 487, 501, 506, 519, 525, 549, 579, 619], "train": [130, 607], "training": [442, 490, 607], "trait": [579, 619], "tramp": 549, "tramp1": 549, "transcendental": 502, "transcribed": [638, 649], "transcript": [639, 650], "transf": [502, 505, 547, 549, 553, 555, 639, 640, 641, 642, 643, 644], "transfer": [511, 549, 594], "transferred": [446, 511, 549, 592, 607], "transform": [438, 444, 451, 455, 457, 460, 499, 508, 512, 514, 515, 516, 518, 521, 527, 528, 529, 539, 546, 549, 561, 564, 579, 580, 585, 587, 593, 596, 598, 601, 605, 612, 614, 615, 620, 622, 623, 624, 625, 638, 639, 640, 641, 642, 644, 649, 650, 653], "transformed": [457, 485, 546, 549, 577, 579, 585, 594, 598, 610, 611, 622], "transformedtsm": 622, "transformfunct": 622, "transforming": [459, 521, 528, 549, 577, 585, 593, 598], "transformlai": 622, "transformutil": 548, "transient": 536, "transit": [440, 457, 485, 509, 530, 546, 548, 560, 561, 581, 594, 639], "transitioning": [584, 586, 593, 621], "transitively": [615, 650], "transitivity": 561, "translat": [444, 457, 459, 469, 500, 505, 506, 513, 514, 517, 519, 521, 524, 530, 534, 549, 563, 567, 577, 579, 582, 583, 585, 593, 594, 601, 611, 619, 644, 645, 654], "translated": [444, 457, 501, 526, 549, 574, 601, 619], "translating": [443, 457, 516, 519, 593, 601, 614, 619], "translator": 526, "transm": 549, "transmitted": 549, "transparency": 552, "transparent": 512, "transparently": [459, 501, 519, 552, 579], "transposed": 549, "trap": [40, 111, 134, 135, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 195, 225, 232, 233, 243, 244, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 370, 454, 505, 516, 519, 587], "trap_present": 440, "trapping": 549, "travers": [457, 464, 513, 518, 527, 532, 548, 577, 579, 615], "traversal": [457, 543, 561, 577], "traversed": [579, 585], "traversing": [577, 615], "trc": 457, "tre": [440, 442, 453, 455, 457, 459, 464, 471, 489, 509, 511, 514, 516, 517, 518, 519, 520, 521, 523, 525, 541, 542, 543, 548, 549, 550, 553, 561, 562, 579, 581, 585, 587, 591, 593, 608, 609, 615, 617, 636, 638, 639, 640, 641, 642, 643, 644, 647, 649, 650, 651, 652, 653], "treat": [444, 457, 462, 468, 478, 511, 517, 525, 545, 549, 551, 552, 555, 561, 567, 579, 596, 609, 617, 645, 654], "treated": [41, 131, 227, 372, 440, 444, 446, 447, 455, 460, 468, 475, 485, 487, 497, 501, 513, 519, 546, 549, 551, 563, 593, 614], "treating": [446, 517, 549, 561, 598, 638, 649], "treatment": [440, 518, 579, 614], "trevi\u00f1o": 452, "tri": [451, 452, 455, 457, 488, 489, 517, 549, 551, 556, 561, 577, 584, 587, 589, 595, 610, 614, 615], "triag": 450, "triaged": [450, 520], "triaging": 457, "trick": [504, 509, 522, 541, 543, 549, 579, 581, 594, 601, 642, 647, 653], "trickrevnum": 581, "tricky": [444, 502, 518, 607, 615], "tried": [457, 639, 647], "trig": 614, "trigg": [440, 443, 505, 518, 536, 549, 550, 551, 555, 579, 596, 609, 619, 621, 623], "trigger": [439, 451, 518, 544, 551, 563, 579, 608, 639], "triggered": [455, 459, 551, 554, 596, 619], "triggering": [480, 549], "trim": 581, "trinity": 440, "trip": [446, 549, 577, 585, 594, 610], "tripl": [447, 465, 466, 485, 488, 516, 517, 541, 554, 555, 584, 593, 609, 614, 625, 643, 644], "triplet": [501, 549], "tripped": 459, "trivial": [443, 444, 446, 456, 459, 501, 512, 519, 527, 529, 536, 547, 549, 577, 581, 582, 593, 599, 614, 615, 618, 637, 642, 645, 646, 647, 648, 653, 654], "trivially": [440, 457, 514, 549, 577, 578, 579, 581, 593, 594, 642, 645, 653, 654], "troubl": [501, 517, 521, 523], "tru": [440, 443, 444, 449, 456, 457, 459, 461, 466, 473, 479, 485, 490, 498, 501, 505, 518, 519, 524, 525, 529, 535, 536, 538, 541, 543, 546, 549, 551, 553, 555, 561, 562, 567, 575, 577, 579, 581, 591, 593, 601, 604, 605, 609, 610, 611, 614, 615, 616, 617, 619, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 649, 650, 651, 652, 653], "true_branch_weight": 449, "truebr": 593, "truedest": 549, "truly": [559, 579, 594, 623], "trunc": [593, 613], "truncat": [439, 468, 549], "truncated": [17, 52, 114, 198, 237, 347, 382, 439, 549, 603], "truncating": [549, 614], "truncinst": 577, "trunk": [454, 457, 510, 520, 521, 523, 542, 551, 578, 581, 593, 607], "trust": [459, 509, 593, 623], "trusted": 509, "truth": [549, 560, 640, 651], "truthful": 509, "try": [443, 444, 445, 446, 450, 451, 452, 455, 457, 458, 459, 471, 478, 501, 502, 504, 509, 510, 516, 518, 520, 521, 536, 544, 549, 551, 556, 558, 561, 563, 574, 577, 579, 581, 582, 590, 593, 594, 615, 616, 619, 622, 623, 624, 625, 639, 641, 642, 643, 645, 648, 649, 650, 651, 652, 653, 654], "trying": [443, 457, 459, 461, 509, 516, 518, 521, 523, 555, 560, 579, 591, 599, 622, 645, 654], "tsc": [617, 618], "tsc701": 614, "tsc_delt": 618, "tsctx": 563, "tsflag": 614, "tslp": 585, "tsm": [563, 567, 622], "tsm1": 563, "tsm2": 563, "tstri": 555, "tsvg": 617, "tt": 546, "tti": 584, "ttmp": [13, 14, 15, 25, 26, 27, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 104, 105, 112, 139, 140, 141, 142, 143, 196, 239, 240, 241, 242, 245, 246, 289, 290, 294, 295, 301, 302, 303, 322, 325, 327, 328, 329, 343, 344, 345, 355, 356, 357, 377, 378, 379, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 440], "ttmp0": 439, "ttmp4": 439, "ttmp5": 439, "ttmp6": 439, "ttmp7": 439, "tun": [501, 579], "tunabl": [536, 582, 591], "tuned": [457, 516, 593, 594, 613, 642, 653], "tupl": [513, 529, 549, 581], "turbo": 445, "turing": [637, 639, 648, 650], "turk": 440, "turn": [440, 446, 451, 452, 455, 456, 457, 458, 468, 501, 509, 538, 539, 549, 552, 556, 560, 563, 576, 577, 579, 584, 590, 593, 598, 601, 602, 605, 615, 621, 622, 623, 637, 638, 645, 648, 649, 654], "turned": [459, 505, 509, 512, 549, 579, 614], "turnercamelback": 584, "turnerlldb": 584, "turning": [444, 457, 549, 563, 577, 585], "tutorial": [501, 502, 520, 534, 543, 551, 561, 563, 579, 620, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "tutoriel": 620, "tval": 593, "tweak": [501, 502, 521, 543, 576, 616, 621], "tweaking": 639, "twic": [442, 505, 523, 525, 549, 561, 579, 588, 604, 607, 615, 639, 650], "twiddling": [549, 639, 640, 641, 642, 650, 651, 652, 653], "twist": 621, "twitt": 558, "two": [438, 439, 440, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 459, 460, 464, 466, 475, 476, 478, 479, 485, 489, 490, 498, 501, 502, 505, 506, 508, 509, 510, 511, 513, 515, 516, 517, 518, 521, 523, 524, 525, 529, 530, 532, 534, 536, 537, 539, 543, 544, 546, 547, 549, 550, 551, 553, 554, 555, 560, 561, 562, 563, 564, 567, 571, 574, 577, 578, 579, 580, 581, 584, 587, 589, 591, 593, 594, 596, 597, 598, 599, 601, 603, 604, 605, 607, 608, 609, 611, 613, 614, 615, 617, 619, 621, 622, 623, 637, 639, 640, 641, 642, 645, 648, 649, 650, 651, 652, 653, 654], "twoaddressinstructionpass": 457, "twoargfp": 603, "txt": [442, 455, 459, 471, 474, 496, 498, 501, 504, 509, 521, 536, 542, 548, 556, 578, 581, 593, 595, 607, 609, 614, 615, 617, 621, 622, 623, 624, 625], "ty": [459, 512, 549, 579, 603], "ty2": 549, "ty64": 593, "tying": 457, "typ": [46, 133, 231, 376, 436, 443, 444, 446, 447, 449, 451, 452, 454, 455, 457, 461, 462, 465, 468, 470, 474, 475, 478, 480, 483, 485, 486, 487, 488, 493, 497, 501, 502, 505, 508, 509, 511, 513, 517, 518, 521, 523, 526, 529, 530, 532, 534, 541, 542, 543, 544, 545, 547, 548, 550, 554, 557, 560, 561, 562, 565, 569, 572, 575, 578, 580, 584, 585, 587, 589, 593, 594, 596, 598, 601, 605, 607, 608, 609, 612, 615, 616, 617, 618, 621, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 656], "type0": 529, "type1": 529, "type_info": 511, "type_nam": 440, "type_of": [649, 650, 651, 652, 653], "typecod": 512, "typed": [456, 501, 514, 518, 519, 549, 577, 579, 596, 601, 603, 636, 637, 638, 639, 644, 645, 648, 649, 650, 654], "typedef": [459, 489, 513, 579, 587, 619, 622, 625], "typedescriptor2": 511, "typeendbegin": 574, "typeflag": 593, "typeid": [512, 549, 561, 611], "typeid1": 611, "typeid2": 611, "typeid3": 611, "typeidref": 549, "typeindex": [566, 574], "typeindexbegin": 574, "typeindexend": 574, "typeless": 437, "typemap": 512, "typenam": [440, 549, 579, 625], "typeprinting": 512, "typerecordbyt": 574, "typesaf": 549, "typeservermapsiz": 567, "typeset": 529, "typetestr": 549, "typical": [444, 457, 459, 494, 511, 548, 549, 550, 552, 555, 564, 577, 579, 582, 589, 591, 593, 607, 614, 618], "typically": [443, 444, 455, 457, 459, 460, 468, 470, 473, 479, 482, 486, 502, 508, 510, 511, 515, 517, 518, 519, 523, 524, 525, 526, 530, 540, 542, 543, 548, 549, 551, 554, 555, 557, 563, 572, 577, 578, 579, 580, 589, 593, 594, 596, 603, 607, 609, 614, 615, 618, 645, 654], "typing": [521, 538, 579, 598, 619], "typo": 459, "u": [462, 468, 473, 478, 485, 486, 487, 488, 492, 493, 497, 509, 521, 549, 578, 579, 581, 614, 615], "u1": 581, "u16": [0, 2, 3, 439, 440], "u16x2": [0, 1, 2, 3, 6, 7], "u2": [581, 589], "u3": [581, 589], "u32": [0, 1, 2, 3, 6, 7, 436, 439, 440, 457, 562, 589], "u4x2": [6, 7], "u64": [0, 1, 2, 3, 439, 440, 562], "u8": 440, "u8x2": [6, 7], "u8x4": [0, 1, 2, 3], "u999999": 578, "ualph": 604, "ubsan": [551, 591], "ubuntu": [509, 521, 538, 541], "uc": 440, "ud2": [454, 457], "ud2a": 457, "udiv": 524, "ueq": [549, 642, 653], "ueyam": 584, "uf": 585, "uge": 549, "uglify": [639, 650], "ugly": [460, 514, 641, 652], "ugt": 549, "ui": [456, 578], "uid": [468, 487, 497, 549], "uimm20": [48, 49, 233, 234, 378, 379], "uimm21": [48, 378], "uimm32": 135, "uimm8": 135, "uint": [465, 489], "uint128": 574, "uint128oct": 574, "uint16": [515, 571, 574, 596], "uint16_t": [546, 566, 567, 574, 575, 593, 614, 619], "uint16short": 574, "uint16x4_t": 446, "uint32": [515, 569, 574, 596], "uint32_max": [579, 593], "uint32_t": [549, 567, 570, 572, 574, 593, 619, 625], "uint32long": 574, "uint32x2_t": 446, "uint64": [515, 574, 596], "uint64_max": 448, "uint64_t": [448, 545, 549, 561, 575, 579, 589, 619, 625], "uint64quad": 574, "uint8": [515, 596], "uint8_t": [551, 566, 570, 619, 625], "uintptr_t": [594, 625], "uitofp": [638, 640, 642, 649, 651, 653], "uiuc": 509, "ule": 549, "uleb128": 513, "ulim": 551, "ulittle32_t": [571, 572], "ulp": 549, "ult": [549, 593, 640, 642, 649, 650, 651, 652, 653], "ultimat": [459, 549, 639, 650], "ultimately": [464, 509, 560, 588, 593, 594], "ultrasparc": [521, 614], "ultrasparc3": 614, "um": [549, 581], "um1": 581, "um2": 581, "um3": 581, "um4": 581, "um5": 581, "um6": 581, "um7": 581, "um8": 581, "umax": 587, "umbrel": 581, "umin": 587, "uml": 508, "umrel": 581, "unabbrev": 447, "unabbreviated": 447, "unabl": [458, 485, 516, 529, 549, 550, 564, 579, 594, 603, 648], "unabridged": [642, 653], "unaccept": 509, "unadorned": 549, "unaffected": 560, "unaligned": [444, 516, 566], "unallocated": 559, "unannotated": 581, "unary": [604, 642, 643, 644, 645, 646, 647, 653, 654], "unaryexprast": [641, 642, 643, 644], "unassign": 450, "unassigned": 439, "unassignedbug": 450, "unattended": 451, "unavail": [444, 485, 593, 614], "unawar": [502, 549], "unbiased": 448, "unbound": [485, 614], "unbounded": [457, 485, 549], "unbuild": 581, "uncached": 440, "uncaptured": 549, "uncategorized": [474, 486, 492, 493, 494, 496, 501], "uncertain": 504, "uncertainty": 452, "unchanged": [549, 579, 581, 598, 610], "unchanging": [443, 549, 579, 593, 624, 625], "uncharacterized": 574, "unchecked": 579, "unclear": [567, 572, 574, 642, 653], "unclutter": 599, "uncomfort": 458, "uncommon": [456, 511, 529, 549], "uncompiled": 563, "uncompress": [455, 521], "uncompressed": 579, "unconditional": [457, 473, 525, 549, 553, 577, 598, 614, 640, 651, 652, 653], "unconditionally": [443, 457, 513, 537, 549, 623, 644], "unconnected": 519, "uncontroversial": 518, "unconventional": [645, 654], "unconvincing": 551, "uncooper": 518, "uncov": 459, "uncovered": 551, "uncovering": 455, "undecided": 581, "undeclared": [549, 638, 649], "undef": [444, 460, 505, 511, 526, 547, 549, 555, 560, 579, 587, 593, 601], "undefin": 455, "undefined": [440, 444, 446, 450, 455, 459, 460, 486, 487, 489, 497, 505, 511, 513, 514, 516, 519, 525, 528, 544, 552, 560, 577, 579, 587, 591, 593, 601, 603, 604, 605, 610, 613, 614], "undefinedbehaviorsanitiz": 551, "undefinit": 549, "under": [440, 442, 445, 455, 457, 459, 461, 464, 485, 492, 493, 501, 505, 506, 509, 511, 514, 516, 520, 521, 535, 537, 542, 547, 548, 549, 551, 559, 562, 578, 581, 587, 594, 598, 605, 609, 611, 614, 615, 621, 622, 623, 624, 625, 637, 645, 648, 654, 655], "underestimating": 549, "underflow": [439, 440], "undergo": 549, "undergoing": 577, "underlying": [446, 455, 457, 459, 485, 501, 509, 518, 524, 525, 549, 563, 571, 572, 579, 594, 611, 644], "undermin": 459, "undermining": 593, "underneath": [521, 580, 581, 609], "underscor": [459, 474, 555, 593], "understand": [443, 447, 450, 457, 458, 459, 460, 464, 468, 485, 509, 511, 512, 518, 519, 540, 548, 556, 557, 561, 565, 566, 570, 575, 578, 579, 582, 590, 591, 594, 595, 598, 599, 602, 603, 604, 605, 615, 617, 618, 619, 623, 638, 642, 644, 646, 647, 653, 654], "understandability": 459, "understanding": [443, 447, 450, 459, 549, 561, 575, 577, 593], "understood": [447, 457, 459, 567, 570, 654], "undesir": 549, "undetected": 551, "undisturbed": 459, "undocumented": [511, 567], "undoing": 446, "unequal": [460, 549], "unexpect": 561, "unexpected": [452, 454, 456, 459, 509, 523, 579, 591, 642, 653], "unexpectedly": 609, "unfamiliar": 595, "unflatten": 617, "unfolding": 594, "unforeseen": 534, "unfortunately": [502, 540, 547, 549, 561, 579, 581, 593, 594, 615, 639, 640, 645, 650, 651, 654], "unfriendly": 551, "unfused": 502, "unglamorous": 509, "unguarded": 549, "unhandled": [511, 579], "unhappy": 502, "unhardened": 594, "unhid": 501, "uni": 562, "unic": 501, "unif": 443, "unified": [447, 460, 516, 540, 549, 579, 581, 654], "uniform": [459, 485, 549, 564, 579], "uniformly": [459, 485], "uniformretval": 549, "unify": 581, "unimaginatively": 598, "unimplemented": 615, "unimport": [588, 598], "unindexed": 614, "uninitialized": [486, 518, 519, 549, 597, 603], "uninstrumented": 567, "unintended": 577, "unintentional": 509, "uninterested": 647, "uninteresting": 509, "unintrus": 549, "union": [443, 457, 459, 485, 529, 553, 567, 593, 642, 653], "uniprocessor": 444, "uniqu": [440, 447, 457, 460, 464, 486, 487, 505, 509, 511, 513, 537, 546, 548, 549, 552, 553, 561, 563, 564, 567, 572, 579, 581, 593, 598, 604, 605, 613, 617, 638, 639, 649], "unique_ptr": [562, 563, 579, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "uniqued": [457, 545, 549, 563, 579, 610, 638, 649], "uniqueid": 572, "uniquely": [460, 546, 553, 574, 581, 593, 596], "uniqueness": [513, 572, 596], "uniqueretval": 549, "uniquing": [462, 549, 579], "unistd": 599, "unit": [40, 41, 130, 131, 225, 227, 370, 372, 440, 446, 454, 455, 459, 461, 473, 478, 501, 504, 505, 506, 511, 513, 514, 519, 525, 530, 549, 550, 551, 563, 564, 567, 575, 577, 579, 582, 589, 593, 594, 601, 603, 611, 613, 614, 615, 639], "unittest": [454, 455, 607, 609], "univers": 579, "universal": [463, 473, 488, 494, 498, 506, 549], "universally": 456, "universit": 558, "university": [508, 509, 558], "unix": [455, 459, 460, 468, 501, 514, 517, 521, 523, 549, 579, 599, 609], "unknown": [439, 440, 457, 479, 483, 485, 501, 510, 525, 528, 535, 540, 549, 567, 570, 571, 575, 579, 587, 594, 610, 619, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "unknownptr": 549, "unknownvalu": 549, "unless": [440, 442, 451, 455, 456, 457, 459, 460, 462, 465, 473, 474, 478, 480, 482, 485, 488, 501, 502, 505, 509, 511, 516, 518, 519, 542, 549, 551, 556, 560, 563, 575, 577, 579, 581, 584, 590, 595, 596, 598, 604, 608, 609, 610, 614, 615, 640, 642, 651, 653], "unlik": [444, 447, 456, 457, 459, 496, 502, 511, 518, 521, 525, 535, 536, 543, 549, 560, 579, 584, 594, 596, 598, 604, 615, 639, 642, 650, 653], "unlikely": [444, 538, 577, 593, 594, 598, 623], "unlimited": 485, "unlink": [521, 579], "unload": 615, "unloaded": 549, "unlock": 563, "unlocked": 563, "unmaintain": 605, "unmaintained": 509, "unmanaged": [549, 598], "unmangled": 475, "unmask": 549, "unmasked": 549, "unmatched": 490, "unmitigated": 594, "unmodeled": 485, "unmodified": [438, 549, 598, 622], "unnamed": [456, 501, 549, 555, 577, 587, 604], "unnamed_addr": [447, 513, 549], "unnecessarily": [443, 615], "unnecessary": [454, 457, 516, 526, 555, 577, 579, 594, 597, 598, 614, 623], "unneeded": [487, 497, 642, 653], "unnormal": 549, "unnormalized": 438, "uno": 549, "unofficial": [519, 583], "unop": [439, 641, 642, 643, 644, 652, 653], "unoptimized": [465, 521, 593], "unord": 549, "unordered": [440, 455, 459, 460, 556, 595, 614], "unordered_set": 579, "unorm": [0, 1, 2, 3], "unpack": [521, 541], "unpacking": [504, 522], "unparsed": [464, 637, 648], "unpatched": 542, "unpatching": 616, "unpleas": 594, "unpoisoning": 549, "unpredictability": 549, "unpredicted": 594, "unprofit": [577, 594, 610], "unprotected": [454, 594], "unprototyped": 549, "unqualified": [457, 593], "unreach": [452, 480, 505, 506, 511, 515, 516, 518, 553, 561, 577, 639, 640, 641, 642, 644, 650, 651, 652, 653], "unread": [444, 459, 581, 594], "unrecogniz": 486, "unrecognized": [501, 604], "unrecurs": [642, 643, 644, 653], "unreferenced": [456, 549], "unregist": 615, "unregister": 615, "unrelated": [459, 487, 493, 504, 509, 542, 579, 593, 594, 614], "unreli": [443, 551], "unrelocated": 598, "unresolved": [464, 645, 654], "unrespons": 581, "unreviewed": 509, "unroll": [585, 613], "unroll_and_jam": 610, "unrolled": [549, 585, 610], "unrolling": [502, 549, 577], "unrooling": 502, "unsaf": [444, 465, 466, 549, 593, 596, 597, 610, 645, 654], "unsat": 549, "unseen": 447, "unset": [455, 456, 569, 603, 604, 615, 644], "unshadowed": [640, 641, 642, 643, 644, 651, 652, 653], "unsigned": [47, 48, 49, 134, 135, 232, 233, 234, 322, 377, 378, 379, 437, 438, 439, 443, 447, 449, 457, 459, 465, 490, 501, 506, 518, 519, 524, 549, 552, 555, 561, 562, 574, 579, 593, 594, 601, 613, 614, 617, 618, 619, 638, 639, 640, 641, 642, 643, 644, 649], "unsignedcharact": 574, "unsimm": 457, "unsound": 598, "unspecified": [452, 457, 475, 487, 525, 549, 562, 598, 608, 618], "unstabl": [454, 479, 538, 549, 588], "unstandardised": 587, "unstructured": 618, "unsuccessful": 563, "unsuit": [454, 607], "unsupported": [440, 444, 457, 464, 523, 529, 530, 551, 587, 588, 609, 614], "unsupportedfor": 529, "unsur": [590, 604], "unswitched": 577, "unswitching": 577, "untested": 588, "until": [440, 446, 447, 451, 457, 461, 464, 485, 486, 501, 504, 505, 509, 511, 516, 521, 524, 530, 545, 549, 551, 554, 560, 563, 565, 577, 578, 579, 581, 588, 590, 593, 594, 601, 603, 607, 609, 614, 615, 616, 621, 622, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "untrusted_data_from_call": 594, "untrusted_offset_from_call": 594, "untrusted_size_from_call": 594, "untyped": 555, "unused": [46, 133, 209, 220, 222, 231, 376, 438, 439, 440, 452, 457, 459, 480, 505, 548, 550, 562, 564, 566, 567, 571, 574, 579, 591, 593, 598, 610, 611, 618], "unused1": 567, "unused2": 567, "unused_pad": [438, 440], "unused_preserv": [438, 440], "unused_sext": 438, "unusual": [457, 459, 517, 518, 530, 579, 592, 603, 645, 654], "unvectoriz": 613, "unveil": 647, "unversioned": 610, "unvisited": 452, "unwelcom": 458, "unwieldy": 616, "unwind": [455, 457, 488, 492, 493, 505, 511, 513, 516, 536, 547, 549, 550, 614, 623], "unwindcursor": 511, "unwinder": 511, "unwinding": [457, 505, 511, 549, 550, 577], "unwindregistersrestor": 511, "unwindregisterssav": 511, "unwis": 549, "unwound": [549, 594], "unwrap": 621, "unwrapping": [563, 579], "unzip": [521, 588], "uop": [479, 485], "up": [442, 443, 446, 447, 448, 450, 452, 453, 455, 457, 458, 459, 461, 464, 466, 478, 479, 485, 488, 501, 502, 503, 504, 505, 506, 509, 511, 513, 515, 516, 517, 518, 521, 522, 523, 527, 531, 535, 536, 537, 538, 540, 541, 542, 544, 548, 549, 550, 551, 555, 557, 560, 561, 562, 564, 565, 567, 572, 574, 575, 577, 579, 581, 586, 587, 588, 590, 591, 593, 594, 598, 601, 603, 605, 607, 608, 609, 610, 613, 614, 617, 621, 622, 623, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "upa": 549, "upcast": 543, "upcoming": [509, 558], "updat": [440, 443, 454, 457, 462, 468, 487, 501, 504, 505, 509, 511, 512, 518, 521, 523, 543, 549, 552, 554, 559, 560, 561, 571, 574, 577, 578, 579, 584, 587, 590, 593, 594, 596, 598, 615, 616, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 650, 651, 652, 653, 654], "updated": [440, 441, 443, 446, 460, 504, 505, 509, 521, 542, 543, 549, 552, 560, 578, 581, 587, 594, 598, 610, 615, 621, 622, 623, 642, 653], "updatepoint": [624, 625], "updating": [441, 487, 497, 542, 549, 559, 563, 579, 615, 624, 625], "upen": 445, "upgrad": [509, 520, 521, 585], "upgraded": 593, "upgrading": [471, 521, 581, 613], "upheld": 598, "uphold": [549, 594], "upl": 549, "upload": [521, 542, 578, 581, 594], "uploaded": 542, "uploading": [542, 578], "upon": [468, 499, 509, 518, 549, 554, 563, 579, 580, 584, 593, 614], "upper": [438, 459, 461, 486, 549, 579, 584, 587, 614], "upper16": 513, "upsid": 509, "upstream": [504, 509, 510, 516, 521, 542, 581, 598], "upstream_branch": 581, "upstreamed": 509, "upstreaming": 581, "upward": [464, 549, 582, 593], "uq": 549, "urem": [457, 512], "urgent": 509, "url": [556, 578, 581, 595], "us": [457, 458, 459, 460, 481, 501, 504, 506, 508, 509, 524, 526, 530, 536, 539, 544, 549, 560, 561, 562, 563, 575, 578, 579, 581, 582, 583, 587, 591, 593, 611, 615, 617, 621, 622, 623, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 650, 652, 653], "usabl": [457, 465, 501, 579, 593, 614, 617], "usag": [440, 457, 459, 461, 474, 478, 479, 483, 485, 487, 488, 489, 498, 501, 505, 506, 524, 526, 538, 548, 549, 555, 561, 562, 563, 565, 566, 567, 574, 577, 579, 586, 587, 589, 597, 598, 601, 605, 607, 609, 615, 647], "usb": 538, "use": [48, 49, 76, 161, 260, 378, 379, 407, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 478, 479, 485, 486, 487, 488, 489, 490, 492, 493, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 518, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 535, 537, 538, 539, 541, 542, 543, 544, 547, 548, 550, 552, 553, 554, 555, 556, 557, 559, 561, 562, 564, 567, 571, 572, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "use_": 579, "use_back": 579, "use_begin": [459, 579], "use_binding": [650, 651, 652, 653], "use_camlp4": [648, 649, 650, 651, 652, 653], "use_counter": 551, "use_empty": 579, "use_end": 579, "use_iterator": 579, "use_llvm": [649, 650, 651, 652, 653], "use_llvm_analys": [649, 650, 651, 652, 653], "use_llvm_executionengin": [650, 651, 652, 653], "use_llvm_scalar_opt": [650, 651, 652, 653], "use_llvm_target": [650, 651, 652, 653], "use_siz": 579, "use_value_profil": 551, "used": [11, 32, 33, 34, 43, 44, 45, 50, 56, 57, 58, 76, 88, 89, 103, 109, 124, 125, 126, 132, 136, 141, 161, 189, 193, 217, 218, 219, 228, 229, 230, 235, 241, 260, 286, 288, 293, 298, 299, 300, 317, 319, 320, 321, 323, 326, 332, 341, 362, 363, 364, 373, 374, 375, 380, 386, 387, 388, 407, 420, 421, 435, 436, 437, 438, 439, 440, 442, 443, 444, 447, 448, 449, 451, 453, 454, 456, 458, 459, 460, 461, 462, 464, 465, 468, 470, 472, 473, 474, 475, 478, 479, 480, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 498, 501, 502, 503, 505, 506, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 523, 524, 527, 529, 530, 534, 535, 536, 539, 540, 542, 543, 546, 547, 548, 550, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 567, 569, 571, 572, 574, 575, 579, 580, 581, 583, 584, 585, 586, 587, 589, 591, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "usedlib": 580, "useful": [440, 442, 444, 447, 449, 451, 452, 453, 455, 457, 459, 460, 461, 464, 465, 468, 470, 471, 472, 479, 485, 487, 490, 498, 499, 501, 502, 503, 505, 506, 508, 510, 511, 514, 516, 518, 520, 521, 523, 525, 527, 536, 537, 539, 540, 548, 549, 556, 560, 562, 563, 564, 567, 574, 577, 578, 580, 584, 589, 591, 593, 594, 595, 596, 598, 601, 603, 605, 609, 612, 614, 615, 636, 637, 638, 639, 640, 641, 642, 644, 647, 648, 649, 650, 651, 652, 653, 655], "useless": [446, 539, 593, 640, 645, 651, 654], "uselistord": 549, "uselistorder_bb": 549, "usenamedoperandt": 614, "user": [442, 443, 444, 448, 451, 452, 455, 456, 457, 458, 459, 461, 464, 470, 479, 485, 500, 501, 503, 504, 505, 506, 509, 511, 513, 518, 520, 521, 523, 526, 529, 536, 537, 539, 540, 542, 549, 550, 552, 557, 558, 560, 561, 563, 575, 576, 578, 581, 582, 585, 586, 587, 589, 591, 593, 594, 595, 597, 598, 601, 603, 605, 609, 610, 613, 614, 615, 618, 620, 621, 636, 637, 638, 639, 640, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655], "user_sgpr": 440, "user_sgpr_count": 440, "userdefinederror": 579, "usernam": [509, 523, 581], "userspac": 511, "usescustominsert": 605, "usesmetadat": 518, "using": [11, 46, 133, 231, 376, 436, 438, 439, 440, 441, 442, 444, 445, 447, 452, 453, 455, 456, 458, 460, 461, 462, 464, 466, 468, 470, 473, 477, 478, 479, 487, 489, 490, 496, 501, 504, 505, 506, 507, 508, 509, 510, 512, 515, 516, 519, 520, 522, 526, 527, 528, 529, 530, 532, 536, 537, 538, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 555, 558, 560, 561, 562, 563, 572, 574, 577, 578, 580, 581, 582, 584, 585, 586, 588, 589, 590, 591, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 617, 619, 621, 623, 625, 638, 639, 640, 641, 642, 643, 644, 647, 649, 650, 651, 652, 653, 655], "usr": [455, 501, 502, 510, 521, 535, 536, 538, 540, 541, 562], "usual": [444, 451, 455, 459, 501, 521, 535, 549, 551, 552, 561, 563, 579, 581, 592, 597, 603, 604, 615, 621, 644], "usually": [439, 443, 444, 447, 451, 455, 457, 459, 460, 470, 485, 486, 499, 501, 502, 505, 509, 512, 513, 518, 519, 524, 525, 529, 540, 543, 549, 550, 551, 555, 556, 561, 563, 567, 572, 574, 578, 579, 591, 593, 595, 603, 607, 608, 609, 614, 615, 645, 654], "ut": 549, "utf": [440, 513, 601], "util": [442, 510, 539, 542, 579, 587, 588, 601, 605, 607, 614, 642], "utilis": [0, 1, 2, 3, 4, 5, 6, 7, 53, 138, 238, 324, 383, 620], "utilit": [521, 534, 579, 621, 623], "utility": [443, 463, 468, 470, 486, 488, 490, 501, 518, 521, 523, 548, 549, 563, 579, 612, 621, 623, 642, 643], "utiliz": [442, 466, 485, 613, 614], "utilized": [455, 485, 518], "utilizing": 455, "uuid": 478, "uuidcreat": 572, "uv": 549, "uvari": 455, "uwtabl": [447, 549, 593, 616], "uy": 549, "v": [8, 9, 10, 11, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 71, 72, 73, 74, 75, 76, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 254, 255, 256, 257, 258, 259, 260, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 294, 295, 296, 301, 302, 303, 305, 306, 307, 316, 317, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 401, 402, 403, 404, 405, 406, 407, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 440, 442, 443, 444, 446, 451, 457, 459, 460, 462, 464, 468, 478, 482, 486, 487, 490, 492, 493, 497, 510, 523, 524, 527, 535, 543, 549, 551, 561, 563, 579, 581, 584, 589, 591, 594, 595, 598, 599, 601, 603, 607, 609, 614, 637, 638, 639, 640, 641, 642, 643, 644, 652, 653], "v0": [12, 110, 194, 342, 438, 439, 440, 446, 549], "v1": [12, 110, 194, 342, 439, 440, 443, 459, 549, 586, 594, 596, 604, 609], "v10": 502, "v110": 567, "v128": [549, 562], "v16": 562, "v16f32": 549, "v16p0f32": 549, "v16p1f32": 549, "v1f64": 524, "v1siz": 443, "v2": [439, 443, 459, 503, 567, 579, 583, 604, 609, 621, 622, 623, 624, 625], "v200": 440, "v252": 439, "v253": 439, "v254": 439, "v255": [438, 439], "v2f64": 549, "v2i16": 587, "v2i32": [549, 587], "v2i64": 549, "v2i8": 587, "v2p1f64": 549, "v2s32": 529, "v2s64": 529, "v2siz": 443, "v3": [76, 161, 260, 407, 609], "v31": 549, "v32": [439, 562], "v32i8": 587, "v36": 438, "v3i32": 524, "v4": [438, 439, 440], "v40": 574, "v41": 574, "v4f32": [524, 549], "v4f64": 549, "v4i16": 587, "v4i32": 549, "v4i8": 587, "v4p0f64": 549, "v4p0f_i32f": 549, "v4p0p0f64": 549, "v4s32": 529, "v4t": 540, "v5": [438, 440, 587, 593], "v50": [567, 574], "v6": [440, 540], "v60": 567, "v64": [549, 562], "v64i8": 587, "v7": 540, "v70": [567, 574], "v8": [444, 503, 614], "v80": 574, "v8deprecatedinst": 614, "v8f64": 549, "v8i16": 614, "v8i32": 549, "v8i8": 587, "v8p0f32": 549, "v8p0f64": 549, "v8p0f_i32f": 549, "v8p0i32": 549, "v8p0p0f32": 549, "v9": [503, 521, 614], "v_accvgpr_read_b32": 7, "v_accvgpr_write_b32": 7, "v_add3_u32": [0, 3], "v_add_co_ci_u32": 0, "v_add_co_ci_u32_dpp": 0, "v_add_co_ci_u32_e64": 0, "v_add_co_ci_u32_sdw": 0, "v_add_co_u32": [0, 3], "v_add_co_u32_dpp": 3, "v_add_co_u32_e32": 439, "v_add_co_u32_e64": 3, "v_add_co_u32_sdw": 3, "v_add_f16": [0, 2, 3, 439], "v_add_f16_dpp": [0, 2, 3], "v_add_f16_e64": [0, 2, 3], "v_add_f16_sdw": [0, 2, 3], "v_add_f32": [0, 1, 2, 3, 439, 440], "v_add_f32_dpp": [0, 2, 3], "v_add_f32_e32": 440, "v_add_f32_e64": [0, 1, 2, 3], "v_add_f32_sdw": [0, 2, 3], "v_add_f64": [0, 1, 2, 3], "v_add_i16": 3, "v_add_i32": [1, 3], "v_add_i32_e64": 1, "v_add_lshl_u32": [0, 3], "v_add_nc_i16": 0, "v_add_nc_i32": 0, "v_add_nc_u16": 0, "v_add_nc_u32": 0, "v_add_nc_u32_dpp": 0, "v_add_nc_u32_e64": 0, "v_add_nc_u32_sdw": 0, "v_add_u16": [2, 3, 439], "v_add_u16_dpp": [2, 3], "v_add_u16_e64": [2, 3], "v_add_u16_sdw": [2, 3], "v_add_u32": [2, 3, 439], "v_add_u32_dpp": [2, 3], "v_add_u32_e64": [2, 3], "v_add_u32_sdw": [2, 3], "v_addc_co_u32": 3, "v_addc_co_u32_dpp": 3, "v_addc_co_u32_e64": 3, "v_addc_co_u32_sdw": 3, "v_addc_u32": [1, 2, 440], "v_addc_u32_dpp": 2, "v_addc_u32_e64": [1, 2], "v_addc_u32_sdw": 2, "v_alignbit_b32": [0, 1, 2, 3], "v_alignbyte_b32": [0, 1, 2, 3], "v_and_b32": [0, 1, 2, 3], "v_and_b32_dpp": [0, 2, 3], "v_and_b32_e64": [0, 1, 2, 3], "v_and_b32_sdw": [0, 2, 3], "v_and_or_b32": [0, 3], "v_ashr_i32": 1, "v_ashr_i32_e64": 1, "v_ashr_i64": 1, "v_ashrrev_i16": [0, 2, 3], "v_ashrrev_i16_dpp": [2, 3], "v_ashrrev_i16_e64": [2, 3], "v_ashrrev_i16_sdw": [2, 3], "v_ashrrev_i32": [0, 1, 2, 3], "v_ashrrev_i32_dpp": [0, 2, 3], "v_ashrrev_i32_e64": [0, 1, 2, 3], "v_ashrrev_i32_sdw": [0, 2, 3], "v_ashrrev_i64": [0, 2, 3], "v_bcnt_u32_b32": [0, 1, 2, 3], "v_bcnt_u32_b32_e64": 1, "v_bfe_i32": [0, 1, 2, 3], "v_bfe_u32": [0, 1, 2, 3], "v_bfi_b32": [0, 1, 2, 3], "v_bfm_b32": [0, 1, 2, 3], "v_bfm_b32_e64": 1, "v_bfrev_b32": [0, 1, 2, 3], "v_bfrev_b32_dpp": [0, 2, 3], "v_bfrev_b32_e32": 440, "v_bfrev_b32_e64": [0, 1, 2, 3], "v_bfrev_b32_sdw": [0, 2, 3], "v_ceil_f16": [0, 2, 3], "v_ceil_f16_dpp": [0, 2, 3], "v_ceil_f16_e64": [0, 2, 3], "v_ceil_f16_sdw": [0, 2, 3], "v_ceil_f32": [0, 1, 2, 3], "v_ceil_f32_dpp": [0, 2, 3], "v_ceil_f32_e64": [0, 1, 2, 3], "v_ceil_f32_sdw": [0, 2, 3], "v_ceil_f64": [0, 1, 2, 3, 439], "v_ceil_f64_e32": 439, "v_ceil_f64_e64": [0, 1, 2, 3], "v_clrexcp": [0, 1, 2, 3], "v_clrexcp_e64": [0, 1, 2, 3], "v_cmp": 438, "v_cmp_class_f16": [0, 2, 3], "v_cmp_class_f16_e64": [0, 2, 3], "v_cmp_class_f16_sdw": [0, 2, 3], "v_cmp_class_f32": [0, 1, 2, 3], "v_cmp_class_f32_e64": [0, 1, 2, 3], "v_cmp_class_f32_sdw": [0, 2, 3], "v_cmp_class_f64": [0, 1, 2, 3], "v_cmp_class_f64_e64": [0, 1, 2, 3], "v_cmp_eq_f16": [0, 2, 3], "v_cmp_eq_f16_e64": [0, 2, 3], "v_cmp_eq_f16_sdw": [0, 2, 3], "v_cmp_eq_f32": [0, 1, 2, 3], "v_cmp_eq_f32_e64": [0, 1, 2, 3], "v_cmp_eq_f32_sdw": [0, 2, 3], "v_cmp_eq_f64": [0, 1, 2, 3], "v_cmp_eq_f64_e64": [0, 1, 2, 3], "v_cmp_eq_i16": [0, 2, 3], "v_cmp_eq_i16_e64": [0, 2, 3], "v_cmp_eq_i16_sdw": [0, 2, 3], "v_cmp_eq_i32": [0, 1, 2, 3], "v_cmp_eq_i32_e64": [0, 1, 2, 3], "v_cmp_eq_i32_sdw": [0, 2, 3], "v_cmp_eq_i64": [0, 1, 2, 3], "v_cmp_eq_i64_e64": [0, 1, 2, 3], "v_cmp_eq_u16": [0, 2, 3], "v_cmp_eq_u16_e64": [0, 2, 3], "v_cmp_eq_u16_sdw": [0, 2, 3], "v_cmp_eq_u32": [0, 1, 2, 3], "v_cmp_eq_u32_e64": [0, 1, 2, 3], "v_cmp_eq_u32_sdw": [0, 2, 3], "v_cmp_eq_u64": [0, 1, 2, 3], "v_cmp_eq_u64_e64": [0, 1, 2, 3], "v_cmp_f_f16": [0, 2, 3], "v_cmp_f_f16_e64": [0, 2, 3], "v_cmp_f_f16_sdwa": [0, 2, 3], "v_cmp_f_f32": [0, 1, 2, 3], "v_cmp_f_f32_e64": [0, 1, 2, 3], "v_cmp_f_f32_sdwa": [0, 2, 3], "v_cmp_f_f64": [0, 1, 2, 3], "v_cmp_f_f64_e64": [0, 1, 2, 3], "v_cmp_f_i16": [2, 3], "v_cmp_f_i16_e64": [2, 3], "v_cmp_f_i16_sdw": [2, 3], "v_cmp_f_i32": [0, 1, 2, 3], "v_cmp_f_i32_e64": [0, 1, 2, 3], "v_cmp_f_i32_sdw": [0, 2, 3], "v_cmp_f_i64": [0, 1, 2, 3], "v_cmp_f_i64_e64": [0, 1, 2, 3], "v_cmp_f_u16": [2, 3], "v_cmp_f_u16_e64": [2, 3], "v_cmp_f_u16_sdw": [2, 3], "v_cmp_f_u32": [0, 1, 2, 3], "v_cmp_f_u32_e64": [0, 1, 2, 3], "v_cmp_f_u32_sdw": [0, 2, 3], "v_cmp_f_u64": [0, 1, 2, 3], "v_cmp_f_u64_e64": [0, 1, 2, 3], "v_cmp_ge_f16": [0, 2, 3], "v_cmp_ge_f16_e64": [0, 2, 3], "v_cmp_ge_f16_sdw": [0, 2, 3], "v_cmp_ge_f32": [0, 1, 2, 3], "v_cmp_ge_f32_e64": [0, 1, 2, 3], "v_cmp_ge_f32_sdw": [0, 2, 3], "v_cmp_ge_f64": [0, 1, 2, 3], "v_cmp_ge_f64_e64": [0, 1, 2, 3], "v_cmp_ge_i16": [0, 2, 3], "v_cmp_ge_i16_e64": [0, 2, 3], "v_cmp_ge_i16_sdw": [0, 2, 3], "v_cmp_ge_i32": [0, 1, 2, 3], "v_cmp_ge_i32_e64": [0, 1, 2, 3], "v_cmp_ge_i32_sdw": [0, 2, 3], "v_cmp_ge_i64": [0, 1, 2, 3], "v_cmp_ge_i64_e64": [0, 1, 2, 3], "v_cmp_ge_u16": [0, 2, 3], "v_cmp_ge_u16_e64": [0, 2, 3], "v_cmp_ge_u16_sdw": [0, 2, 3], "v_cmp_ge_u32": [0, 1, 2, 3], "v_cmp_ge_u32_e64": [0, 1, 2, 3], "v_cmp_ge_u32_sdw": [0, 2, 3], "v_cmp_ge_u64": [0, 1, 2, 3], "v_cmp_ge_u64_e64": [0, 1, 2, 3], "v_cmp_gt_f16": [0, 2, 3], "v_cmp_gt_f16_e64": [0, 2, 3], "v_cmp_gt_f16_sdwa": [0, 2, 3], "v_cmp_gt_f32": [0, 1, 2, 3], "v_cmp_gt_f32_e64": [0, 1, 2, 3], "v_cmp_gt_f32_sdwa": [0, 2, 3], "v_cmp_gt_f64": [0, 1, 2, 3], "v_cmp_gt_f64_e64": [0, 1, 2, 3], "v_cmp_gt_i16": [0, 2, 3], "v_cmp_gt_i16_e64": [0, 2, 3], "v_cmp_gt_i16_sdw": [0, 2, 3], "v_cmp_gt_i32": [0, 1, 2, 3], "v_cmp_gt_i32_e64": [0, 1, 2, 3], "v_cmp_gt_i32_sdw": [0, 2, 3], "v_cmp_gt_i64": [0, 1, 2, 3], "v_cmp_gt_i64_e64": [0, 1, 2, 3], "v_cmp_gt_u16": [0, 2, 3], "v_cmp_gt_u16_e64": [0, 2, 3], "v_cmp_gt_u16_sdw": [0, 2, 3], "v_cmp_gt_u32": [0, 1, 2, 3], "v_cmp_gt_u32_e64": [0, 1, 2, 3], "v_cmp_gt_u32_sdw": [0, 2, 3], "v_cmp_gt_u64": [0, 1, 2, 3], "v_cmp_gt_u64_e64": [0, 1, 2, 3], "v_cmp_le_f16": [0, 2, 3], "v_cmp_le_f16_e64": [0, 2, 3], "v_cmp_le_f16_sdw": [0, 2, 3], "v_cmp_le_f32": [0, 1, 2, 3], "v_cmp_le_f32_e64": [0, 1, 2, 3], "v_cmp_le_f32_sdw": [0, 2, 3], "v_cmp_le_f64": [0, 1, 2, 3], "v_cmp_le_f64_e64": [0, 1, 2, 3], "v_cmp_le_i16": [0, 2, 3], "v_cmp_le_i16_e64": [0, 2, 3], "v_cmp_le_i16_sdw": [0, 2, 3], "v_cmp_le_i32": [0, 1, 2, 3], "v_cmp_le_i32_e64": [0, 1, 2, 3], "v_cmp_le_i32_sdw": [0, 2, 3], "v_cmp_le_i64": [0, 1, 2, 3], "v_cmp_le_i64_e64": [0, 1, 2, 3], "v_cmp_le_u16": [0, 2, 3], "v_cmp_le_u16_e64": [0, 2, 3], "v_cmp_le_u16_sdw": [0, 2, 3], "v_cmp_le_u32": [0, 1, 2, 3], "v_cmp_le_u32_e64": [0, 1, 2, 3], "v_cmp_le_u32_sdw": [0, 2, 3], "v_cmp_le_u64": [0, 1, 2, 3], "v_cmp_le_u64_e64": [0, 1, 2, 3], "v_cmp_lg_f16": [0, 2, 3], "v_cmp_lg_f16_e64": [0, 2, 3], "v_cmp_lg_f16_sdwa": [0, 2, 3], "v_cmp_lg_f32": [0, 1, 2, 3], "v_cmp_lg_f32_e64": [0, 1, 2, 3], "v_cmp_lg_f32_sdwa": [0, 2, 3], "v_cmp_lg_f64": [0, 1, 2, 3], "v_cmp_lg_f64_e64": [0, 1, 2, 3], "v_cmp_lt_f16": [0, 2, 3], "v_cmp_lt_f16_e64": [0, 2, 3], "v_cmp_lt_f16_sdwa": [0, 2, 3], "v_cmp_lt_f32": [0, 1, 2, 3], "v_cmp_lt_f32_e64": [0, 1, 2, 3], "v_cmp_lt_f32_sdwa": [0, 2, 3], "v_cmp_lt_f64": [0, 1, 2, 3], "v_cmp_lt_f64_e64": [0, 1, 2, 3], "v_cmp_lt_i16": [0, 2, 3], "v_cmp_lt_i16_e64": [0, 2, 3], "v_cmp_lt_i16_sdw": [0, 2, 3], "v_cmp_lt_i32": [0, 1, 2, 3], "v_cmp_lt_i32_e64": [0, 1, 2, 3], "v_cmp_lt_i32_sdw": [0, 2, 3], "v_cmp_lt_i64": [0, 1, 2, 3], "v_cmp_lt_i64_e64": [0, 1, 2, 3], "v_cmp_lt_u16": [0, 2, 3], "v_cmp_lt_u16_e64": [0, 2, 3], "v_cmp_lt_u16_sdw": [0, 2, 3], "v_cmp_lt_u32": [0, 1, 2, 3], "v_cmp_lt_u32_e64": [0, 1, 2, 3], "v_cmp_lt_u32_sdw": [0, 2, 3], "v_cmp_lt_u64": [0, 1, 2, 3], "v_cmp_lt_u64_e64": [0, 1, 2, 3], "v_cmp_ne_i16": [0, 2, 3], "v_cmp_ne_i16_e64": [0, 2, 3], "v_cmp_ne_i16_sdw": [0, 2, 3], "v_cmp_ne_i32": [0, 1, 2, 3], "v_cmp_ne_i32_e64": [0, 1, 2, 3], "v_cmp_ne_i32_sdw": [0, 2, 3], "v_cmp_ne_i64": [0, 1, 2, 3], "v_cmp_ne_i64_e64": [0, 1, 2, 3], "v_cmp_ne_u16": [0, 2, 3], "v_cmp_ne_u16_e64": [0, 2, 3], "v_cmp_ne_u16_sdw": [0, 2, 3], "v_cmp_ne_u32": [0, 1, 2, 3], "v_cmp_ne_u32_e64": [0, 1, 2, 3], "v_cmp_ne_u32_sdw": [0, 2, 3], "v_cmp_ne_u64": [0, 1, 2, 3], "v_cmp_ne_u64_e64": [0, 1, 2, 3], "v_cmp_neq_f16": [0, 2, 3], "v_cmp_neq_f16_e64": [0, 2, 3], "v_cmp_neq_f16_sdw": [0, 2, 3], "v_cmp_neq_f32": [0, 1, 2, 3], "v_cmp_neq_f32_e64": [0, 1, 2, 3], "v_cmp_neq_f32_sdw": [0, 2, 3], "v_cmp_neq_f64": [0, 1, 2, 3], "v_cmp_neq_f64_e64": [0, 1, 2, 3], "v_cmp_nge_f16": [0, 2, 3], "v_cmp_nge_f16_e64": [0, 2, 3], "v_cmp_nge_f16_sdw": [0, 2, 3], "v_cmp_nge_f32": [0, 1, 2, 3], "v_cmp_nge_f32_e64": [0, 1, 2, 3], "v_cmp_nge_f32_sdw": [0, 2, 3], "v_cmp_nge_f64": [0, 1, 2, 3], "v_cmp_nge_f64_e64": [0, 1, 2, 3], "v_cmp_ngt_f16": [0, 2, 3], "v_cmp_ngt_f16_e64": [0, 2, 3], "v_cmp_ngt_f16_sdwa": [0, 2, 3], "v_cmp_ngt_f32": [0, 1, 2, 3], "v_cmp_ngt_f32_e64": [0, 1, 2, 3], "v_cmp_ngt_f32_sdwa": [0, 2, 3], "v_cmp_ngt_f64": [0, 1, 2, 3], "v_cmp_ngt_f64_e64": [0, 1, 2, 3], "v_cmp_nle_f16": [0, 2, 3], "v_cmp_nle_f16_e64": [0, 2, 3], "v_cmp_nle_f16_sdw": [0, 2, 3], "v_cmp_nle_f32": [0, 1, 2, 3], "v_cmp_nle_f32_e64": [0, 1, 2, 3], "v_cmp_nle_f32_sdw": [0, 2, 3], "v_cmp_nle_f64": [0, 1, 2, 3], "v_cmp_nle_f64_e64": [0, 1, 2, 3], "v_cmp_nlg_f16": [0, 2, 3], "v_cmp_nlg_f16_e64": [0, 2, 3], "v_cmp_nlg_f16_sdwa": [0, 2, 3], "v_cmp_nlg_f32": [0, 1, 2, 3], "v_cmp_nlg_f32_e64": [0, 1, 2, 3], "v_cmp_nlg_f32_sdwa": [0, 2, 3], "v_cmp_nlg_f64": [0, 1, 2, 3], "v_cmp_nlg_f64_e64": [0, 1, 2, 3], "v_cmp_nlt_f16": [0, 2, 3], "v_cmp_nlt_f16_e64": [0, 2, 3], "v_cmp_nlt_f16_sdwa": [0, 2, 3], "v_cmp_nlt_f32": [0, 1, 2, 3], "v_cmp_nlt_f32_e64": [0, 1, 2, 3], "v_cmp_nlt_f32_sdwa": [0, 2, 3], "v_cmp_nlt_f64": [0, 1, 2, 3], "v_cmp_nlt_f64_e64": [0, 1, 2, 3], "v_cmp_o_f16": [0, 2, 3], "v_cmp_o_f16_e64": [0, 2, 3], "v_cmp_o_f16_sdw": [0, 2, 3], "v_cmp_o_f32": [0, 1, 2, 3], "v_cmp_o_f32_e64": [0, 1, 2, 3], "v_cmp_o_f32_sdw": [0, 2, 3], "v_cmp_o_f64": [0, 1, 2, 3], "v_cmp_o_f64_e64": [0, 1, 2, 3], "v_cmp_t_i16": [2, 3], "v_cmp_t_i16_e64": [2, 3], "v_cmp_t_i16_sdw": [2, 3], "v_cmp_t_i32": [0, 1, 2, 3], "v_cmp_t_i32_e64": [0, 1, 2, 3], "v_cmp_t_i32_sdw": [0, 2, 3], "v_cmp_t_i64": [0, 1, 2, 3], "v_cmp_t_i64_e64": [0, 1, 2, 3], "v_cmp_t_u16": [2, 3], "v_cmp_t_u16_e64": [2, 3], "v_cmp_t_u16_sdw": [2, 3], "v_cmp_t_u32": [0, 1, 2, 3], "v_cmp_t_u32_e64": [0, 1, 2, 3], "v_cmp_t_u32_sdw": [0, 2, 3], "v_cmp_t_u64": [0, 1, 2, 3], "v_cmp_t_u64_e64": [0, 1, 2, 3], "v_cmp_tru_f16": [0, 2, 3], "v_cmp_tru_f16_e64": [0, 2, 3], "v_cmp_tru_f16_sdw": [0, 2, 3], "v_cmp_tru_f32": [0, 1, 2, 3], "v_cmp_tru_f32_e64": [0, 1, 2, 3], "v_cmp_tru_f32_sdw": [0, 2, 3], "v_cmp_tru_f64": [0, 1, 2, 3], "v_cmp_tru_f64_e64": [0, 1, 2, 3], "v_cmp_u_f16": [0, 2, 3], "v_cmp_u_f16_e64": [0, 2, 3], "v_cmp_u_f16_sdw": [0, 2, 3], "v_cmp_u_f32": [0, 1, 2, 3], "v_cmp_u_f32_e64": [0, 1, 2, 3], "v_cmp_u_f32_sdw": [0, 2, 3], "v_cmp_u_f64": [0, 1, 2, 3], "v_cmp_u_f64_e64": [0, 1, 2, 3], "v_cmps_eq_f32": 1, "v_cmps_eq_f32_e64": 1, "v_cmps_eq_f64": 1, "v_cmps_eq_f64_e64": 1, "v_cmps_f_f32": 1, "v_cmps_f_f32_e64": 1, "v_cmps_f_f64": 1, "v_cmps_f_f64_e64": 1, "v_cmps_ge_f32": 1, "v_cmps_ge_f32_e64": 1, "v_cmps_ge_f64": 1, "v_cmps_ge_f64_e64": 1, "v_cmps_gt_f32": 1, "v_cmps_gt_f32_e64": 1, "v_cmps_gt_f64": 1, "v_cmps_gt_f64_e64": 1, "v_cmps_le_f32": 1, "v_cmps_le_f32_e64": 1, "v_cmps_le_f64": 1, "v_cmps_le_f64_e64": 1, "v_cmps_lg_f32": 1, "v_cmps_lg_f32_e64": 1, "v_cmps_lg_f64": 1, "v_cmps_lg_f64_e64": 1, "v_cmps_lt_f32": 1, "v_cmps_lt_f32_e64": 1, "v_cmps_lt_f64": 1, "v_cmps_lt_f64_e64": 1, "v_cmps_neq_f32": 1, "v_cmps_neq_f32_e64": 1, "v_cmps_neq_f64": 1, "v_cmps_neq_f64_e64": 1, "v_cmps_nge_f32": 1, "v_cmps_nge_f32_e64": 1, "v_cmps_nge_f64": 1, "v_cmps_nge_f64_e64": 1, "v_cmps_ngt_f32": 1, "v_cmps_ngt_f32_e64": 1, "v_cmps_ngt_f64": 1, "v_cmps_ngt_f64_e64": 1, "v_cmps_nle_f32": 1, "v_cmps_nle_f32_e64": 1, "v_cmps_nle_f64": 1, "v_cmps_nle_f64_e64": 1, "v_cmps_nlg_f32": 1, "v_cmps_nlg_f32_e64": 1, "v_cmps_nlg_f64": 1, "v_cmps_nlg_f64_e64": 1, "v_cmps_nlt_f32": 1, "v_cmps_nlt_f32_e64": 1, "v_cmps_nlt_f64": 1, "v_cmps_nlt_f64_e64": 1, "v_cmps_o_f32": 1, "v_cmps_o_f32_e64": 1, "v_cmps_o_f64": 1, "v_cmps_o_f64_e64": 1, "v_cmps_tru_f32": 1, "v_cmps_tru_f32_e64": 1, "v_cmps_tru_f64": 1, "v_cmps_tru_f64_e64": 1, "v_cmps_u_f32": 1, "v_cmps_u_f32_e64": 1, "v_cmps_u_f64": 1, "v_cmps_u_f64_e64": 1, "v_cmpsx_eq_f32": 1, "v_cmpsx_eq_f32_e64": 1, "v_cmpsx_eq_f64": 1, "v_cmpsx_eq_f64_e64": 1, "v_cmpsx_f_f32": 1, "v_cmpsx_f_f32_e64": 1, "v_cmpsx_f_f64": 1, "v_cmpsx_f_f64_e64": 1, "v_cmpsx_ge_f32": 1, "v_cmpsx_ge_f32_e64": 1, "v_cmpsx_ge_f64": 1, "v_cmpsx_ge_f64_e64": 1, "v_cmpsx_gt_f32": 1, "v_cmpsx_gt_f32_e64": 1, "v_cmpsx_gt_f64": 1, "v_cmpsx_gt_f64_e64": 1, "v_cmpsx_le_f32": 1, "v_cmpsx_le_f32_e64": 1, "v_cmpsx_le_f64": 1, "v_cmpsx_le_f64_e64": 1, "v_cmpsx_lg_f32": 1, "v_cmpsx_lg_f32_e64": 1, "v_cmpsx_lg_f64": 1, "v_cmpsx_lg_f64_e64": 1, "v_cmpsx_lt_f32": 1, "v_cmpsx_lt_f32_e64": 1, "v_cmpsx_lt_f64": 1, "v_cmpsx_lt_f64_e64": 1, "v_cmpsx_neq_f32": 1, "v_cmpsx_neq_f32_e64": 1, "v_cmpsx_neq_f64": 1, "v_cmpsx_neq_f64_e64": 1, "v_cmpsx_nge_f32": 1, "v_cmpsx_nge_f32_e64": 1, "v_cmpsx_nge_f64": 1, "v_cmpsx_nge_f64_e64": 1, "v_cmpsx_ngt_f32": 1, "v_cmpsx_ngt_f32_e64": 1, "v_cmpsx_ngt_f64": 1, "v_cmpsx_ngt_f64_e64": 1, "v_cmpsx_nle_f32": 1, "v_cmpsx_nle_f32_e64": 1, "v_cmpsx_nle_f64": 1, "v_cmpsx_nle_f64_e64": 1, "v_cmpsx_nlg_f32": 1, "v_cmpsx_nlg_f32_e64": 1, "v_cmpsx_nlg_f64": 1, "v_cmpsx_nlg_f64_e64": 1, "v_cmpsx_nlt_f32": 1, "v_cmpsx_nlt_f32_e64": 1, "v_cmpsx_nlt_f64": 1, "v_cmpsx_nlt_f64_e64": 1, "v_cmpsx_o_f32": 1, "v_cmpsx_o_f32_e64": 1, "v_cmpsx_o_f64": 1, "v_cmpsx_o_f64_e64": 1, "v_cmpsx_tru_f32": 1, "v_cmpsx_tru_f32_e64": 1, "v_cmpsx_tru_f64": 1, "v_cmpsx_tru_f64_e64": 1, "v_cmpsx_u_f32": 1, "v_cmpsx_u_f32_e64": 1, "v_cmpsx_u_f64": 1, "v_cmpsx_u_f64_e64": 1, "v_cmpx_class_f16": [0, 2, 3], "v_cmpx_class_f16_e64": [0, 2, 3], "v_cmpx_class_f16_sdw": [0, 2, 3], "v_cmpx_class_f32": [0, 1, 2, 3], "v_cmpx_class_f32_e64": [0, 1, 2, 3], "v_cmpx_class_f32_sdw": [0, 2, 3], "v_cmpx_class_f64": [0, 1, 2, 3], "v_cmpx_class_f64_e64": [0, 1, 2, 3], "v_cmpx_eq_f16": [0, 2, 3], "v_cmpx_eq_f16_e64": [0, 2, 3], "v_cmpx_eq_f16_sdw": [0, 2, 3], "v_cmpx_eq_f32": [0, 1, 2, 3], "v_cmpx_eq_f32_e64": [0, 1, 2, 3], "v_cmpx_eq_f32_sdw": [0, 2, 3], "v_cmpx_eq_f64": [0, 1, 2, 3], "v_cmpx_eq_f64_e64": [0, 1, 2, 3], "v_cmpx_eq_i16": [0, 2, 3], "v_cmpx_eq_i16_e64": [0, 2, 3], "v_cmpx_eq_i16_sdw": [0, 2, 3], "v_cmpx_eq_i32": [0, 1, 2, 3], "v_cmpx_eq_i32_e64": [0, 1, 2, 3], "v_cmpx_eq_i32_sdw": [0, 2, 3], "v_cmpx_eq_i64": [0, 1, 2, 3], "v_cmpx_eq_i64_e64": [0, 1, 2, 3], "v_cmpx_eq_u16": [0, 2, 3], "v_cmpx_eq_u16_e64": [0, 2, 3], "v_cmpx_eq_u16_sdw": [0, 2, 3], "v_cmpx_eq_u32": [0, 1, 2, 3], "v_cmpx_eq_u32_e64": [0, 1, 2, 3], "v_cmpx_eq_u32_sdw": [0, 2, 3], "v_cmpx_eq_u64": [0, 1, 2, 3], "v_cmpx_eq_u64_e64": [0, 1, 2, 3], "v_cmpx_f_f16": [0, 2, 3], "v_cmpx_f_f16_e64": [0, 2, 3], "v_cmpx_f_f16_sdwa": [0, 2, 3], "v_cmpx_f_f32": [0, 1, 2, 3], "v_cmpx_f_f32_e64": [0, 1, 2, 3], "v_cmpx_f_f32_sdwa": [0, 2, 3], "v_cmpx_f_f64": [0, 1, 2, 3], "v_cmpx_f_f64_e64": [0, 1, 2, 3], "v_cmpx_f_i16": [2, 3], "v_cmpx_f_i16_e64": [2, 3], "v_cmpx_f_i16_sdw": [2, 3], "v_cmpx_f_i32": [0, 1, 2, 3], "v_cmpx_f_i32_e64": [0, 1, 2, 3], "v_cmpx_f_i32_sdw": [0, 2, 3], "v_cmpx_f_i64": [0, 1, 2, 3], "v_cmpx_f_i64_e64": [0, 1, 2, 3], "v_cmpx_f_u16": [2, 3], "v_cmpx_f_u16_e64": [2, 3], "v_cmpx_f_u16_sdw": [2, 3], "v_cmpx_f_u32": [0, 1, 2, 3], "v_cmpx_f_u32_e64": [0, 1, 2, 3], "v_cmpx_f_u32_sdw": [0, 2, 3], "v_cmpx_f_u64": [0, 1, 2, 3], "v_cmpx_f_u64_e64": [0, 1, 2, 3], "v_cmpx_ge_f16": [0, 2, 3], "v_cmpx_ge_f16_e64": [0, 2, 3], "v_cmpx_ge_f16_sdw": [0, 2, 3], "v_cmpx_ge_f32": [0, 1, 2, 3], "v_cmpx_ge_f32_e64": [0, 1, 2, 3], "v_cmpx_ge_f32_sdw": [0, 2, 3], "v_cmpx_ge_f64": [0, 1, 2, 3], "v_cmpx_ge_f64_e64": [0, 1, 2, 3], "v_cmpx_ge_i16": [0, 2, 3], "v_cmpx_ge_i16_e64": [0, 2, 3], "v_cmpx_ge_i16_sdw": [0, 2, 3], "v_cmpx_ge_i32": [0, 1, 2, 3], "v_cmpx_ge_i32_e64": [0, 1, 2, 3], "v_cmpx_ge_i32_sdw": [0, 2, 3], "v_cmpx_ge_i64": [0, 1, 2, 3], "v_cmpx_ge_i64_e64": [0, 1, 2, 3], "v_cmpx_ge_u16": [0, 2, 3], "v_cmpx_ge_u16_e64": [0, 2, 3], "v_cmpx_ge_u16_sdw": [0, 2, 3], "v_cmpx_ge_u32": [0, 1, 2, 3], "v_cmpx_ge_u32_e64": [0, 1, 2, 3], "v_cmpx_ge_u32_sdw": [0, 2, 3], "v_cmpx_ge_u64": [0, 1, 2, 3], "v_cmpx_ge_u64_e64": [0, 1, 2, 3], "v_cmpx_gt_f16": [0, 2, 3], "v_cmpx_gt_f16_e64": [0, 2, 3], "v_cmpx_gt_f16_sdwa": [0, 2, 3], "v_cmpx_gt_f32": [0, 1, 2, 3], "v_cmpx_gt_f32_e64": [0, 1, 2, 3], "v_cmpx_gt_f32_sdwa": [0, 2, 3], "v_cmpx_gt_f64": [0, 1, 2, 3], "v_cmpx_gt_f64_e64": [0, 1, 2, 3], "v_cmpx_gt_i16": [0, 2, 3], "v_cmpx_gt_i16_e64": [0, 2, 3], "v_cmpx_gt_i16_sdw": [0, 2, 3], "v_cmpx_gt_i32": [0, 1, 2, 3], "v_cmpx_gt_i32_e64": [0, 1, 2, 3], "v_cmpx_gt_i32_sdw": [0, 2, 3], "v_cmpx_gt_i64": [0, 1, 2, 3], "v_cmpx_gt_i64_e64": [0, 1, 2, 3], "v_cmpx_gt_u16": [0, 2, 3], "v_cmpx_gt_u16_e64": [0, 2, 3], "v_cmpx_gt_u16_sdw": [0, 2, 3], "v_cmpx_gt_u32": [0, 1, 2, 3], "v_cmpx_gt_u32_e64": [0, 1, 2, 3], "v_cmpx_gt_u32_sdw": [0, 2, 3], "v_cmpx_gt_u64": [0, 1, 2, 3], "v_cmpx_gt_u64_e64": [0, 1, 2, 3], "v_cmpx_le_f16": [0, 2, 3], "v_cmpx_le_f16_e64": [0, 2, 3], "v_cmpx_le_f16_sdw": [0, 2, 3], "v_cmpx_le_f32": [0, 1, 2, 3], "v_cmpx_le_f32_e64": [0, 1, 2, 3], "v_cmpx_le_f32_sdw": [0, 2, 3], "v_cmpx_le_f64": [0, 1, 2, 3], "v_cmpx_le_f64_e64": [0, 1, 2, 3], "v_cmpx_le_i16": [0, 2, 3], "v_cmpx_le_i16_e64": [0, 2, 3], "v_cmpx_le_i16_sdw": [0, 2, 3], "v_cmpx_le_i32": [0, 1, 2, 3], "v_cmpx_le_i32_e64": [0, 1, 2, 3], "v_cmpx_le_i32_sdw": [0, 2, 3], "v_cmpx_le_i64": [0, 1, 2, 3], "v_cmpx_le_i64_e64": [0, 1, 2, 3], "v_cmpx_le_u16": [0, 2, 3], "v_cmpx_le_u16_e64": [0, 2, 3], "v_cmpx_le_u16_sdw": [0, 2, 3], "v_cmpx_le_u32": [0, 1, 2, 3, 440], "v_cmpx_le_u32_e64": [0, 1, 2, 3], "v_cmpx_le_u32_sdw": [0, 2, 3], "v_cmpx_le_u64": [0, 1, 2, 3], "v_cmpx_le_u64_e64": [0, 1, 2, 3], "v_cmpx_lg_f16": [0, 2, 3], "v_cmpx_lg_f16_e64": [0, 2, 3], "v_cmpx_lg_f16_sdwa": [0, 2, 3], "v_cmpx_lg_f32": [0, 1, 2, 3], "v_cmpx_lg_f32_e64": [0, 1, 2, 3], "v_cmpx_lg_f32_sdwa": [0, 2, 3], "v_cmpx_lg_f64": [0, 1, 2, 3], "v_cmpx_lg_f64_e64": [0, 1, 2, 3], "v_cmpx_lt_f16": [0, 2, 3], "v_cmpx_lt_f16_e64": [0, 2, 3], "v_cmpx_lt_f16_sdwa": [0, 2, 3], "v_cmpx_lt_f32": [0, 1, 2, 3], "v_cmpx_lt_f32_e64": [0, 1, 2, 3], "v_cmpx_lt_f32_sdwa": [0, 2, 3], "v_cmpx_lt_f64": [0, 1, 2, 3], "v_cmpx_lt_f64_e64": [0, 1, 2, 3], "v_cmpx_lt_i16": [0, 2, 3], "v_cmpx_lt_i16_e64": [0, 2, 3], "v_cmpx_lt_i16_sdw": [0, 2, 3], "v_cmpx_lt_i32": [0, 1, 2, 3], "v_cmpx_lt_i32_e64": [0, 1, 2, 3], "v_cmpx_lt_i32_sdw": [0, 2, 3], "v_cmpx_lt_i64": [0, 1, 2, 3], "v_cmpx_lt_i64_e64": [0, 1, 2, 3], "v_cmpx_lt_u16": [0, 2, 3], "v_cmpx_lt_u16_e64": [0, 2, 3], "v_cmpx_lt_u16_sdw": [0, 2, 3], "v_cmpx_lt_u32": [0, 1, 2, 3], "v_cmpx_lt_u32_e64": [0, 1, 2, 3], "v_cmpx_lt_u32_sdw": [0, 2, 3], "v_cmpx_lt_u64": [0, 1, 2, 3], "v_cmpx_lt_u64_e64": [0, 1, 2, 3], "v_cmpx_ne_i16": [0, 2, 3], "v_cmpx_ne_i16_e64": [0, 2, 3], "v_cmpx_ne_i16_sdw": [0, 2, 3], "v_cmpx_ne_i32": [0, 1, 2, 3], "v_cmpx_ne_i32_e64": [0, 1, 2, 3], "v_cmpx_ne_i32_sdw": [0, 2, 3], "v_cmpx_ne_i64": [0, 1, 2, 3], "v_cmpx_ne_i64_e64": [0, 1, 2, 3], "v_cmpx_ne_u16": [0, 2, 3], "v_cmpx_ne_u16_e64": [0, 2, 3], "v_cmpx_ne_u16_sdw": [0, 2, 3], "v_cmpx_ne_u32": [0, 1, 2, 3], "v_cmpx_ne_u32_e64": [0, 1, 2, 3], "v_cmpx_ne_u32_sdw": [0, 2, 3], "v_cmpx_ne_u64": [0, 1, 2, 3], "v_cmpx_ne_u64_e64": [0, 1, 2, 3], "v_cmpx_neq_f16": [0, 2, 3], "v_cmpx_neq_f16_e64": [0, 2, 3], "v_cmpx_neq_f16_sdw": [0, 2, 3], "v_cmpx_neq_f32": [0, 1, 2, 3], "v_cmpx_neq_f32_e64": [0, 1, 2, 3], "v_cmpx_neq_f32_sdw": [0, 2, 3], "v_cmpx_neq_f64": [0, 1, 2, 3], "v_cmpx_neq_f64_e64": [0, 1, 2, 3], "v_cmpx_nge_f16": [0, 2, 3], "v_cmpx_nge_f16_e64": [0, 2, 3], "v_cmpx_nge_f16_sdw": [0, 2, 3], "v_cmpx_nge_f32": [0, 1, 2, 3], "v_cmpx_nge_f32_e64": [0, 1, 2, 3], "v_cmpx_nge_f32_sdw": [0, 2, 3], "v_cmpx_nge_f64": [0, 1, 2, 3], "v_cmpx_nge_f64_e64": [0, 1, 2, 3], "v_cmpx_ngt_f16": [0, 2, 3], "v_cmpx_ngt_f16_e64": [0, 2, 3], "v_cmpx_ngt_f16_sdwa": [0, 2, 3], "v_cmpx_ngt_f32": [0, 1, 2, 3], "v_cmpx_ngt_f32_e64": [0, 1, 2, 3], "v_cmpx_ngt_f32_sdwa": [0, 2, 3], "v_cmpx_ngt_f64": [0, 1, 2, 3], "v_cmpx_ngt_f64_e64": [0, 1, 2, 3], "v_cmpx_nle_f16": [0, 2, 3], "v_cmpx_nle_f16_e64": [0, 2, 3], "v_cmpx_nle_f16_sdw": [0, 2, 3], "v_cmpx_nle_f32": [0, 1, 2, 3], "v_cmpx_nle_f32_e64": [0, 1, 2, 3], "v_cmpx_nle_f32_sdw": [0, 2, 3], "v_cmpx_nle_f64": [0, 1, 2, 3], "v_cmpx_nle_f64_e64": [0, 1, 2, 3], "v_cmpx_nlg_f16": [0, 2, 3], "v_cmpx_nlg_f16_e64": [0, 2, 3], "v_cmpx_nlg_f16_sdwa": [0, 2, 3], "v_cmpx_nlg_f32": [0, 1, 2, 3], "v_cmpx_nlg_f32_e64": [0, 1, 2, 3], "v_cmpx_nlg_f32_sdwa": [0, 2, 3], "v_cmpx_nlg_f64": [0, 1, 2, 3], "v_cmpx_nlg_f64_e64": [0, 1, 2, 3], "v_cmpx_nlt_f16": [0, 2, 3], "v_cmpx_nlt_f16_e64": [0, 2, 3], "v_cmpx_nlt_f16_sdwa": [0, 2, 3], "v_cmpx_nlt_f32": [0, 1, 2, 3], "v_cmpx_nlt_f32_e64": [0, 1, 2, 3], "v_cmpx_nlt_f32_sdwa": [0, 2, 3], "v_cmpx_nlt_f64": [0, 1, 2, 3], "v_cmpx_nlt_f64_e64": [0, 1, 2, 3], "v_cmpx_o_f16": [0, 2, 3], "v_cmpx_o_f16_e64": [0, 2, 3], "v_cmpx_o_f16_sdw": [0, 2, 3], "v_cmpx_o_f32": [0, 1, 2, 3], "v_cmpx_o_f32_e64": [0, 1, 2, 3], "v_cmpx_o_f32_sdw": [0, 2, 3], "v_cmpx_o_f64": [0, 1, 2, 3], "v_cmpx_o_f64_e64": [0, 1, 2, 3], "v_cmpx_t_i16": [2, 3], "v_cmpx_t_i16_e64": [2, 3], "v_cmpx_t_i16_sdw": [2, 3], "v_cmpx_t_i32": [0, 1, 2, 3], "v_cmpx_t_i32_e64": [0, 1, 2, 3], "v_cmpx_t_i32_sdw": [0, 2, 3], "v_cmpx_t_i64": [0, 1, 2, 3], "v_cmpx_t_i64_e64": [0, 1, 2, 3], "v_cmpx_t_u16": [2, 3], "v_cmpx_t_u16_e64": [2, 3], "v_cmpx_t_u16_sdw": [2, 3], "v_cmpx_t_u32": [0, 1, 2, 3], "v_cmpx_t_u32_e64": [0, 1, 2, 3], "v_cmpx_t_u32_sdw": [0, 2, 3], "v_cmpx_t_u64": [0, 1, 2, 3], "v_cmpx_t_u64_e64": [0, 1, 2, 3], "v_cmpx_tru_f16": [0, 2, 3], "v_cmpx_tru_f16_e64": [0, 2, 3], "v_cmpx_tru_f16_sdw": [0, 2, 3], "v_cmpx_tru_f32": [0, 1, 2, 3], "v_cmpx_tru_f32_e64": [0, 1, 2, 3], "v_cmpx_tru_f32_sdw": [0, 2, 3], "v_cmpx_tru_f64": [0, 1, 2, 3], "v_cmpx_tru_f64_e64": [0, 1, 2, 3], "v_cmpx_u_f16": [0, 2, 3], "v_cmpx_u_f16_e64": [0, 2, 3], "v_cmpx_u_f16_sdw": [0, 2, 3], "v_cmpx_u_f32": [0, 1, 2, 3], "v_cmpx_u_f32_e64": [0, 1, 2, 3], "v_cmpx_u_f32_sdw": [0, 2, 3], "v_cmpx_u_f64": [0, 1, 2, 3], "v_cmpx_u_f64_e64": [0, 1, 2, 3], "v_cndmask_b32": [0, 1, 2, 3], "v_cndmask_b32_dpp": [2, 3], "v_cndmask_b32_e64": [0, 1, 2, 3], "v_cndmask_b32_sdw": [2, 3], "v_cos_f16": [0, 2, 3], "v_cos_f16_dpp": [0, 2, 3], "v_cos_f16_e64": [0, 2, 3], "v_cos_f16_sdw": [0, 2, 3], "v_cos_f32": [0, 1, 2, 3], "v_cos_f32_dpp": [0, 2, 3], "v_cos_f32_e64": [0, 1, 2, 3], "v_cos_f32_sdw": [0, 2, 3], "v_cubeid_f32": [0, 1, 2, 3], "v_cubema_f32": [0, 1, 2, 3], "v_cubesc_f32": [0, 1, 2, 3], "v_cubetc_f32": [0, 1, 2, 3], "v_cvt_f16_f32": [0, 1, 2, 3, 438], "v_cvt_f16_f32_dpp": [0, 2, 3], "v_cvt_f16_f32_e64": [0, 1, 2, 3], "v_cvt_f16_f32_sdwa": [0, 2, 3], "v_cvt_f16_i16": [0, 2, 3], "v_cvt_f16_i16_dpp": [0, 2, 3], "v_cvt_f16_i16_e64": [0, 2, 3], "v_cvt_f16_i16_sdw": [0, 2, 3], "v_cvt_f16_u16": [0, 2, 3], "v_cvt_f16_u16_dpp": [0, 2, 3], "v_cvt_f16_u16_e64": [0, 2, 3], "v_cvt_f16_u16_sdw": [0, 2, 3], "v_cvt_f32_f16": [0, 1, 2, 3], "v_cvt_f32_f16_dpp": [0, 2, 3], "v_cvt_f32_f16_e64": [0, 1, 2, 3], "v_cvt_f32_f16_sdwa": [0, 2, 3], "v_cvt_f32_f64": [0, 1, 2, 3], "v_cvt_f32_f64_e64": [0, 1, 2, 3], "v_cvt_f32_i32": [0, 1, 2, 3], "v_cvt_f32_i32_dpp": [0, 2, 3], "v_cvt_f32_i32_e64": [0, 1, 2, 3], "v_cvt_f32_i32_sdw": [0, 2, 3], "v_cvt_f32_u32": [0, 1, 2, 3, 437], "v_cvt_f32_u32_dpp": [0, 2, 3], "v_cvt_f32_u32_e64": [0, 1, 2, 3], "v_cvt_f32_u32_sdw": [0, 2, 3], "v_cvt_f32_ubyte0": [0, 1, 2, 3], "v_cvt_f32_ubyte0_dpp": [0, 2, 3], "v_cvt_f32_ubyte0_e64": [0, 1, 2, 3], "v_cvt_f32_ubyte0_sdw": [0, 2, 3], "v_cvt_f32_ubyte1": [0, 1, 2, 3], "v_cvt_f32_ubyte1_dpp": [0, 2, 3], "v_cvt_f32_ubyte1_e64": [0, 1, 2, 3], "v_cvt_f32_ubyte1_sdw": [0, 2, 3], "v_cvt_f32_ubyte2": [0, 1, 2, 3], "v_cvt_f32_ubyte2_dpp": [0, 2, 3], "v_cvt_f32_ubyte2_e64": [0, 1, 2, 3], "v_cvt_f32_ubyte2_sdw": [0, 2, 3], "v_cvt_f32_ubyte3": [0, 1, 2, 3], "v_cvt_f32_ubyte3_dpp": [0, 2, 3], "v_cvt_f32_ubyte3_e64": [0, 1, 2, 3], "v_cvt_f32_ubyte3_sdw": [0, 2, 3], "v_cvt_f64_f32": [0, 1, 2, 3], "v_cvt_f64_f32_e64": [0, 1, 2, 3], "v_cvt_f64_i32": [0, 1, 2, 3], "v_cvt_f64_i32_e32": 440, "v_cvt_f64_i32_e64": [0, 1, 2, 3], "v_cvt_f64_u32": [0, 1, 2, 3], "v_cvt_f64_u32_e64": [0, 1, 2, 3], "v_cvt_flr_i32_f32": [0, 1, 2, 3], "v_cvt_flr_i32_f32_dpp": [0, 2, 3], "v_cvt_flr_i32_f32_e64": [0, 1, 2, 3], "v_cvt_flr_i32_f32_sdw": [0, 2, 3], "v_cvt_i16_f16": [0, 2, 3], "v_cvt_i16_f16_dpp": [0, 2, 3], "v_cvt_i16_f16_e64": [0, 2, 3], "v_cvt_i16_f16_sdw": [0, 2, 3], "v_cvt_i32_f32": [0, 1, 2, 3], "v_cvt_i32_f32_dpp": [0, 2, 3], "v_cvt_i32_f32_e64": [0, 1, 2, 3], "v_cvt_i32_f32_sdw": [0, 2, 3], "v_cvt_i32_f64": [0, 1, 2, 3], "v_cvt_i32_f64_e64": [0, 1, 2, 3], "v_cvt_norm_i16_f16": [0, 3], "v_cvt_norm_i16_f16_dpp": [0, 3], "v_cvt_norm_i16_f16_e64": [0, 3], "v_cvt_norm_i16_f16_sdw": [0, 3], "v_cvt_norm_u16_f16": [0, 3], "v_cvt_norm_u16_f16_dpp": [0, 3], "v_cvt_norm_u16_f16_e64": [0, 3], "v_cvt_norm_u16_f16_sdw": [0, 3], "v_cvt_off_f32_i4": [0, 1, 2, 3], "v_cvt_off_f32_i4_dpp": [0, 2, 3], "v_cvt_off_f32_i4_e64": [0, 1, 2, 3], "v_cvt_off_f32_i4_sdw": [0, 2, 3], "v_cvt_pk_i16_i32": [0, 1, 2, 3], "v_cvt_pk_i16_i32_e64": 1, "v_cvt_pk_u16_u32": [0, 1, 2, 3], "v_cvt_pk_u16_u32_e64": 1, "v_cvt_pk_u8_f32": [0, 1, 2, 3], "v_cvt_pkaccum_u8_f32": [1, 2, 3], "v_cvt_pkaccum_u8_f32_e64": 1, "v_cvt_pknorm_i16_f16": [0, 3], "v_cvt_pknorm_i16_f32": [0, 1, 2, 3], "v_cvt_pknorm_i16_f32_e64": 1, "v_cvt_pknorm_u16_f16": [0, 3], "v_cvt_pknorm_u16_f32": [0, 1, 2, 3], "v_cvt_pknorm_u16_f32_e64": 1, "v_cvt_pkrtz_f16_f32": [0, 1, 2, 3], "v_cvt_pkrtz_f16_f32_e64": [0, 1], "v_cvt_rpi_i32_f32": [0, 1, 2, 3], "v_cvt_rpi_i32_f32_dpp": [0, 2, 3], "v_cvt_rpi_i32_f32_e64": [0, 1, 2, 3], "v_cvt_rpi_i32_f32_sdw": [0, 2, 3], "v_cvt_u16_f16": [0, 2, 3], "v_cvt_u16_f16_dpp": [0, 2, 3], "v_cvt_u16_f16_e64": [0, 2, 3], "v_cvt_u16_f16_sdw": [0, 2, 3], "v_cvt_u32_f32": [0, 1, 2, 3], "v_cvt_u32_f32_dpp": [0, 2, 3], "v_cvt_u32_f32_e64": [0, 1, 2, 3], "v_cvt_u32_f32_sdw": [0, 2, 3], "v_cvt_u32_f64": [0, 1, 2, 3], "v_cvt_u32_f64_e64": [0, 1, 2, 3], "v_div_fixup_f16": [0, 2, 3], "v_div_fixup_f32": [0, 1, 2, 3], "v_div_fixup_f64": [0, 1, 2, 3], "v_div_fixup_legacy_f16": 3, "v_div_fmas_f32": [0, 1, 2, 3], "v_div_fmas_f64": [0, 1, 2, 3], "v_div_scale_f32": [0, 1, 2, 3], "v_div_scale_f64": [0, 1, 2, 3], "v_dot2_f32_f16": [6, 7], "v_dot2_i32_i16": [6, 7], "v_dot2_u32_u16": [6, 7], "v_dot2c_f32_f16": 7, "v_dot2c_f32_f16_dpp": 7, "v_dot2c_i32_i16": 7, "v_dot2c_i32_i16_dpp": 7, "v_dot4_i32_i8": [6, 7], "v_dot4_u32_u8": [6, 7], "v_dot4c_i32_i8": 7, "v_dot4c_i32_i8_dpp": 7, "v_dot8_i32_i4": [6, 7], "v_dot8_u32_u4": [6, 7], "v_dot8c_i32_i4": 7, "v_dot8c_i32_i4_dpp": 7, "v_exp_f16": [0, 2, 3], "v_exp_f16_dpp": [0, 2, 3], "v_exp_f16_e64": [0, 2, 3], "v_exp_f16_sdw": [0, 2, 3], "v_exp_f32": [0, 1, 2, 3], "v_exp_f32_dpp": [0, 2, 3], "v_exp_f32_e64": [0, 1, 2, 3], "v_exp_f32_sdw": [0, 2, 3], "v_exp_legacy_f32": [1, 2, 3], "v_exp_legacy_f32_dpp": [2, 3], "v_exp_legacy_f32_e64": [1, 2, 3], "v_exp_legacy_f32_sdw": [2, 3], "v_ffbh_i32": [0, 1, 2, 3], "v_ffbh_i32_dpp": [0, 2, 3], "v_ffbh_i32_e64": [0, 1, 2, 3], "v_ffbh_i32_sdw": [0, 2, 3], "v_ffbh_u32": [0, 1, 2, 3], "v_ffbh_u32_dpp": [0, 2, 3], "v_ffbh_u32_e64": [0, 1, 2, 3], "v_ffbh_u32_sdw": [0, 2, 3], "v_ffbl_b32": [0, 1, 2, 3], "v_ffbl_b32_dpp": [0, 2, 3], "v_ffbl_b32_e64": [0, 1, 2, 3], "v_ffbl_b32_sdwa": [0, 2, 3], "v_floor_f16": [0, 2, 3], "v_floor_f16_dpp": [0, 2, 3], "v_floor_f16_e64": [0, 2, 3], "v_floor_f16_sdw": [0, 2, 3], "v_floor_f32": [0, 1, 2, 3], "v_floor_f32_dpp": [0, 2, 3], "v_floor_f32_e32": 440, "v_floor_f32_e64": [0, 1, 2, 3], "v_floor_f32_sdw": [0, 2, 3], "v_floor_f64": [0, 1, 2, 3], "v_floor_f64_e64": [0, 1, 2, 3], "v_fma_f16": [0, 2, 3], "v_fma_f32": [0, 1, 2, 3], "v_fma_f64": [0, 1, 2, 3], "v_fma_legacy_f16": 3, "v_fma_mix": 438, "v_fma_mix_f32": [0, 5, 6, 7], "v_fma_mixhi_f16": [0, 5, 6, 7], "v_fma_mixlo_f16": [0, 5, 6, 7], "v_fmaak_f16": 0, "v_fmaak_f32": 0, "v_fmac_f16": 0, "v_fmac_f16_dpp": 0, "v_fmac_f16_e64": 0, "v_fmac_f32": [0, 6, 7], "v_fmac_f32_dpp": [0, 6, 7], "v_fmac_f32_e64": [0, 6, 7], "v_fmamk_f16": 0, "v_fmamk_f32": 0, "v_fract_f16": [0, 2, 3], "v_fract_f16_dpp": [0, 2, 3], "v_fract_f16_e64": [0, 2, 3], "v_fract_f16_sdw": [0, 2, 3], "v_fract_f32": [0, 1, 2, 3, 440], "v_fract_f32_dpp": [0, 2, 3], "v_fract_f32_e64": [0, 1, 2, 3], "v_fract_f32_sdw": [0, 2, 3], "v_fract_f64": [0, 1, 2, 3], "v_fract_f64_e64": [0, 1, 2, 3], "v_frexp_exp_i16_f16": [0, 2, 3], "v_frexp_exp_i16_f16_dpp": [0, 2, 3], "v_frexp_exp_i16_f16_e64": [0, 2, 3], "v_frexp_exp_i16_f16_sdw": [0, 2, 3], "v_frexp_exp_i32_f32": [0, 1, 2, 3], "v_frexp_exp_i32_f32_dpp": [0, 2, 3], "v_frexp_exp_i32_f32_e64": [0, 1, 2, 3], "v_frexp_exp_i32_f32_sdw": [0, 2, 3], "v_frexp_exp_i32_f64": [0, 1, 2, 3], "v_frexp_exp_i32_f64_e64": [0, 1, 2, 3], "v_frexp_mant_f16": [0, 2, 3], "v_frexp_mant_f16_dpp": [0, 2, 3], "v_frexp_mant_f16_e64": [0, 2, 3], "v_frexp_mant_f16_sdw": [0, 2, 3], "v_frexp_mant_f32": [0, 1, 2, 3], "v_frexp_mant_f32_dpp": [0, 2, 3], "v_frexp_mant_f32_e64": [0, 1, 2, 3], "v_frexp_mant_f32_sdw": [0, 2, 3], "v_frexp_mant_f64": [0, 1, 2, 3], "v_frexp_mant_f64_e64": [0, 1, 2, 3], "v_interp_mov_f32": [0, 1, 2, 3], "v_interp_mov_f32_e64": [2, 3], "v_interp_p1_f32": [0, 1, 2, 3, 12, 110, 194, 342], "v_interp_p1_f32_e64": [2, 3], "v_interp_p1ll_f16": [0, 2, 3], "v_interp_p1lv_f16": [0, 2, 3], "v_interp_p2_f16": [0, 2, 3], "v_interp_p2_f32": [0, 1, 2, 3], "v_interp_p2_f32_e64": [2, 3], "v_interp_p2_legacy_f16": 3, "v_ldexp_f16": [0, 2, 3], "v_ldexp_f16_dpp": [0, 2, 3], "v_ldexp_f16_e64": [0, 2, 3], "v_ldexp_f16_sdw": [0, 2, 3], "v_ldexp_f32": [0, 1, 2, 3], "v_ldexp_f32_e64": 1, "v_ldexp_f64": [0, 1, 2, 3], "v_lerp_u8": [0, 1, 2, 3], "v_log_clamp_f32": 1, "v_log_clamp_f32_e64": 1, "v_log_f16": [0, 2, 3], "v_log_f16_dpp": [0, 2, 3], "v_log_f16_e64": [0, 2, 3], "v_log_f16_sdw": [0, 2, 3], "v_log_f32": [0, 1, 2, 3], "v_log_f32_dpp": [0, 2, 3], "v_log_f32_e64": [0, 1, 2, 3], "v_log_f32_sdw": [0, 2, 3], "v_log_legacy_f32": [1, 2, 3], "v_log_legacy_f32_dpp": [2, 3], "v_log_legacy_f32_e64": [1, 2, 3], "v_log_legacy_f32_sdw": [2, 3], "v_lshl_add_u32": [0, 3], "v_lshl_b32": 1, "v_lshl_b32_e64": 1, "v_lshl_b64": 1, "v_lshl_or_b32": [0, 3], "v_lshlrev_b16": [0, 2, 3], "v_lshlrev_b16_dpp": [2, 3], "v_lshlrev_b16_e64": [2, 3], "v_lshlrev_b16_sdw": [2, 3], "v_lshlrev_b32": [0, 1, 2, 3], "v_lshlrev_b32_dpp": [0, 2, 3], "v_lshlrev_b32_e64": [0, 1, 2, 3], "v_lshlrev_b32_sdw": [0, 2, 3], "v_lshlrev_b64": [0, 2, 3], "v_lshr_b32": 1, "v_lshr_b32_e64": 1, "v_lshr_b64": 1, "v_lshrrev_b16": [0, 2, 3], "v_lshrrev_b16_dpp": [2, 3], "v_lshrrev_b16_e64": [2, 3], "v_lshrrev_b16_sdw": [2, 3], "v_lshrrev_b32": [0, 1, 2, 3], "v_lshrrev_b32_dpp": [0, 2, 3], "v_lshrrev_b32_e64": [0, 1, 2, 3], "v_lshrrev_b32_sdw": [0, 2, 3], "v_lshrrev_b64": [0, 2, 3], "v_mac_f16": [2, 3], "v_mac_f16_dpp": [2, 3], "v_mac_f16_e64": [2, 3], "v_mac_f16_sdw": 2, "v_mac_f32": [0, 1, 2, 3], "v_mac_f32_dpp": [0, 2, 3], "v_mac_f32_e64": [0, 1, 2, 3], "v_mac_f32_sdw": 2, "v_mac_legacy_f32": [0, 1], "v_mac_legacy_f32_e64": [0, 1], "v_mad_f16": [2, 3], "v_mad_f32": [0, 1, 2, 3], "v_mad_i16": [0, 2, 3], "v_mad_i32_i16": [0, 3], "v_mad_i32_i24": [0, 1, 2, 3], "v_mad_i64_i32": [0, 1, 2, 3], "v_mad_legacy_f16": 3, "v_mad_legacy_f32": [0, 1, 2, 3], "v_mad_legacy_i16": 3, "v_mad_legacy_u16": 3, "v_mad_mix_f32": 4, "v_mad_mixhi_f16": 4, "v_mad_mixlo_f16": 4, "v_mad_u16": [0, 2, 3], "v_mad_u32_u16": [0, 3], "v_mad_u32_u24": [0, 1, 2, 3], "v_mad_u64_u32": [0, 1, 2, 3], "v_madak_f16": [2, 3], "v_madak_f32": [0, 1, 2, 3], "v_madmk_f16": [2, 3], "v_madmk_f32": [0, 1, 2, 3], "v_max3_f16": [0, 3], "v_max3_f32": [0, 1, 2, 3, 437], "v_max3_i16": [0, 3, 437], "v_max3_i32": [0, 1, 2, 3], "v_max3_u16": [0, 3], "v_max3_u32": [0, 1, 2, 3], "v_max_f16": [0, 2, 3, 440], "v_max_f16_dpp": [0, 2, 3], "v_max_f16_e32": 440, "v_max_f16_e64": [0, 2, 3], "v_max_f16_sdw": [0, 2, 3], "v_max_f32": [0, 1, 2, 3], "v_max_f32_dpp": [0, 2, 3], "v_max_f32_e64": [0, 1, 2, 3], "v_max_f32_sdw": [0, 2, 3], "v_max_f64": [0, 1, 2, 3], "v_max_i16": [0, 2, 3], "v_max_i16_dpp": [2, 3], "v_max_i16_e64": [2, 3], "v_max_i16_sdw": [2, 3], "v_max_i32": [0, 1, 2, 3], "v_max_i32_dpp": [0, 2, 3], "v_max_i32_e64": [0, 1, 2, 3], "v_max_i32_sdw": [0, 2, 3], "v_max_legacy_f32": 1, "v_max_legacy_f32_e64": 1, "v_max_u16": [0, 2, 3], "v_max_u16_dpp": [2, 3], "v_max_u16_e64": [2, 3], "v_max_u16_sdw": [2, 3], "v_max_u32": [0, 1, 2, 3], "v_max_u32_dpp": [0, 2, 3], "v_max_u32_e64": [0, 1, 2, 3], "v_max_u32_sdw": [0, 2, 3], "v_mbcnt_hi_u32_b32": [0, 1, 2, 3], "v_mbcnt_hi_u32_b32_e64": 1, "v_mbcnt_lo_u32_b32": [0, 1, 2, 3], "v_mbcnt_lo_u32_b32_e64": 1, "v_med3_f16": [0, 3], "v_med3_f32": [0, 1, 2, 3], "v_med3_i16": [0, 3], "v_med3_i32": [0, 1, 2, 3], "v_med3_u16": [0, 3], "v_med3_u32": [0, 1, 2, 3], "v_mfma_f32_16x16x16f16": 7, "v_mfma_f32_16x16x1f32": 7, "v_mfma_f32_16x16x2bf16": 7, "v_mfma_f32_16x16x4f16": 7, "v_mfma_f32_16x16x4f32": 7, "v_mfma_f32_16x16x8bf16": 7, "v_mfma_f32_32x32x1f32": 7, "v_mfma_f32_32x32x2bf16": 7, "v_mfma_f32_32x32x2f32": 7, "v_mfma_f32_32x32x4bf16": 7, "v_mfma_f32_32x32x4f16": 7, "v_mfma_f32_32x32x8f16": 7, "v_mfma_f32_4x4x1f32": 7, "v_mfma_f32_4x4x2bf16": 7, "v_mfma_f32_4x4x4f16": 7, "v_mfma_i32_16x16x16i8": 7, "v_mfma_i32_16x16x4i8": 7, "v_mfma_i32_32x32x4i8": 7, "v_mfma_i32_32x32x8i8": 7, "v_mfma_i32_4x4x4i8": 7, "v_min3_f16": [0, 3], "v_min3_f32": [0, 1, 2, 3], "v_min3_i16": [0, 3], "v_min3_i32": [0, 1, 2, 3], "v_min3_u16": [0, 3], "v_min3_u32": [0, 1, 2, 3], "v_min_f16": [0, 2, 3], "v_min_f16_dpp": [0, 2, 3], "v_min_f16_e64": [0, 2, 3], "v_min_f16_sdw": [0, 2, 3], "v_min_f32": [0, 1, 2, 3], "v_min_f32_dpp": [0, 2, 3], "v_min_f32_e64": [0, 1, 2, 3], "v_min_f32_sdw": [0, 2, 3], "v_min_f64": [0, 1, 2, 3], "v_min_i16": [0, 2, 3], "v_min_i16_dpp": [2, 3], "v_min_i16_e64": [2, 3], "v_min_i16_sdw": [2, 3], "v_min_i32": [0, 1, 2, 3], "v_min_i32_dpp": [0, 2, 3], "v_min_i32_e64": [0, 1, 2, 3], "v_min_i32_sdw": [0, 2, 3], "v_min_legacy_f32": 1, "v_min_legacy_f32_e64": 1, "v_min_u16": [0, 2, 3], "v_min_u16_dpp": [2, 3], "v_min_u16_e64": [2, 3], "v_min_u16_sdw": [2, 3], "v_min_u32": [0, 1, 2, 3, 440], "v_min_u32_dpp": [0, 2, 3], "v_min_u32_e64": [0, 1, 2, 3], "v_min_u32_sdw": [0, 2, 3], "v_mov_b32": [0, 1, 2, 3, 440], "v_mov_b32_dpp": [0, 2, 3], "v_mov_b32_e32": 440, "v_mov_b32_e64": [0, 1, 2, 3], "v_mov_b32_sdw": [0, 2, 3], "v_mov_fed_b32": [1, 2, 3], "v_mov_fed_b32_dpp": [2, 3], "v_mov_fed_b32_e64": [1, 2, 3], "v_mov_fed_b32_sdw": [2, 3], "v_movreld_b32": [0, 1, 2], "v_movreld_b32_e64": [0, 1, 2], "v_movrels_b32": [0, 1, 2], "v_movrels_b32_e64": [0, 1, 2], "v_movrelsd_2_b32": 0, "v_movrelsd_2_b32_e64": 0, "v_movrelsd_b32": [0, 1, 2], "v_movrelsd_b32_e64": [0, 1, 2], "v_mqsad_pk_u16_u8": [0, 1, 2, 3], "v_mqsad_u32_u8": [0, 1, 2, 3], "v_msad_u8": [0, 1, 2, 3], "v_mul_f16": [0, 2, 3], "v_mul_f16_dpp": [0, 2, 3], "v_mul_f16_e64": [0, 2, 3], "v_mul_f16_sdw": [0, 2, 3], "v_mul_f32": [0, 1, 2, 3], "v_mul_f32_dpp": [0, 2, 3], "v_mul_f32_e64": [0, 1, 2, 3], "v_mul_f32_sdw": [0, 2, 3], "v_mul_f64": [0, 1, 2, 3], "v_mul_hi_i32": [0, 1, 2, 3], "v_mul_hi_i32_i24": [0, 1, 2, 3], "v_mul_hi_i32_i24_dpp": [0, 2, 3], "v_mul_hi_i32_i24_e64": [0, 1, 2, 3], "v_mul_hi_i32_i24_sdw": [0, 2, 3], "v_mul_hi_u32": [0, 1, 2, 3], "v_mul_hi_u32_u24": [0, 1, 2, 3], "v_mul_hi_u32_u24_dpp": [0, 2, 3], "v_mul_hi_u32_u24_e64": [0, 1, 2, 3], "v_mul_hi_u32_u24_sdw": [0, 2, 3], "v_mul_i32_i24": [0, 1, 2, 3], "v_mul_i32_i24_dpp": [0, 2, 3], "v_mul_i32_i24_e32": 440, "v_mul_i32_i24_e64": [0, 1, 2, 3, 440], "v_mul_i32_i24_sdw": [0, 2, 3], "v_mul_legacy_f32": [0, 1, 2, 3], "v_mul_legacy_f32_dpp": [0, 2, 3], "v_mul_legacy_f32_e64": [0, 1, 2, 3], "v_mul_legacy_f32_sdw": [0, 2, 3], "v_mul_lo_i32": 1, "v_mul_lo_u16": [0, 2, 3], "v_mul_lo_u16_dpp": [2, 3], "v_mul_lo_u16_e64": [2, 3], "v_mul_lo_u16_sdw": [2, 3], "v_mul_lo_u32": [0, 1, 2, 3], "v_mul_u32_u24": [0, 1, 2, 3], "v_mul_u32_u24_dpp": [0, 2, 3], "v_mul_u32_u24_e64": [0, 1, 2, 3], "v_mul_u32_u24_sdw": [0, 2, 3], "v_mullit_f32": [0, 1], "v_nop": [0, 1, 2, 3, 440], "v_nop_e64": [0, 1, 2, 3], "v_not_b32": [0, 1, 2, 3], "v_not_b32_dpp": [0, 2, 3], "v_not_b32_e64": [0, 1, 2, 3], "v_not_b32_sdw": [0, 2, 3], "v_or3_b32": [0, 3], "v_or_b32": [0, 1, 2, 3], "v_or_b32_dpp": [0, 2, 3], "v_or_b32_e64": [0, 1, 2, 3], "v_or_b32_sdw": [0, 2, 3], "v_pack_b32_f16": [0, 3], "v_perm_b32": [0, 2, 3], "v_permlane16_b32": 0, "v_permlanex16_b32": 0, "v_pipeflush": 0, "v_pipeflush_e64": 0, "v_pk_add_f16": [0, 3, 437], "v_pk_add_i16": [0, 3, 437], "v_pk_add_u16": [0, 3, 437], "v_pk_ashrrev_i16": [0, 3], "v_pk_fma_f16": [0, 3], "v_pk_fmac_f16": [0, 7], "v_pk_lshlrev_b16": [0, 3], "v_pk_lshrrev_b16": [0, 3], "v_pk_mad_i16": [0, 3], "v_pk_mad_u16": [0, 3], "v_pk_max_f16": [0, 3], "v_pk_max_i16": [0, 3], "v_pk_max_u16": [0, 3], "v_pk_min_f16": [0, 3], "v_pk_min_i16": [0, 3], "v_pk_min_u16": [0, 3], "v_pk_mul_f16": [0, 3], "v_pk_mul_lo_u16": [0, 3], "v_pk_sub_i16": [0, 3], "v_pk_sub_u16": [0, 3], "v_qsad_pk_u16_u8": [0, 1, 2, 3], "v_rcp_clamp_f32": 1, "v_rcp_clamp_f32_e64": 1, "v_rcp_clamp_f64": 1, "v_rcp_clamp_f64_e64": 1, "v_rcp_f16": [0, 2, 3], "v_rcp_f16_dpp": [0, 2, 3], "v_rcp_f16_e64": [0, 2, 3], "v_rcp_f16_sdwa": [0, 2, 3], "v_rcp_f32": [0, 1, 2, 3], "v_rcp_f32_dpp": [0, 2, 3], "v_rcp_f32_e64": [0, 1, 2, 3], "v_rcp_f32_sdwa": [0, 2, 3], "v_rcp_f64": [0, 1, 2, 3], "v_rcp_f64_e64": [0, 1, 2, 3], "v_rcp_iflag_f32": [0, 1, 2, 3], "v_rcp_iflag_f32_dpp": [0, 2, 3], "v_rcp_iflag_f32_e64": [0, 1, 2, 3], "v_rcp_iflag_f32_sdw": [0, 2, 3], "v_rcp_legacy_f32": 1, "v_rcp_legacy_f32_e64": 1, "v_readfirstlane_b32": [0, 1, 2, 3], "v_readlane_b32": [0, 1, 2, 3], "v_reg": 457, "v_rndne_f16": [0, 2, 3], "v_rndne_f16_dpp": [0, 2, 3], "v_rndne_f16_e64": [0, 2, 3], "v_rndne_f16_sdw": [0, 2, 3], "v_rndne_f32": [0, 1, 2, 3], "v_rndne_f32_dpp": [0, 2, 3], "v_rndne_f32_e64": [0, 1, 2, 3], "v_rndne_f32_sdw": [0, 2, 3], "v_rndne_f64": [0, 1, 2, 3], "v_rndne_f64_e64": [0, 1, 2, 3], "v_rsq_clamp_f32": 1, "v_rsq_clamp_f32_e64": 1, "v_rsq_clamp_f64": 1, "v_rsq_clamp_f64_e64": 1, "v_rsq_f16": [0, 2, 3], "v_rsq_f16_dpp": [0, 2, 3], "v_rsq_f16_e64": [0, 2, 3], "v_rsq_f16_sdwa": [0, 2, 3], "v_rsq_f32": [0, 1, 2, 3], "v_rsq_f32_dpp": [0, 2, 3], "v_rsq_f32_e64": [0, 1, 2, 3], "v_rsq_f32_sdwa": [0, 2, 3], "v_rsq_f64": [0, 1, 2, 3], "v_rsq_f64_e64": [0, 1, 2, 3], "v_rsq_legacy_f32": 1, "v_rsq_legacy_f32_e64": 1, "v_sad_hi_u8": [0, 1, 2, 3], "v_sad_u16": [0, 1, 2, 3], "v_sad_u32": [0, 1, 2, 3], "v_sad_u8": [0, 1, 2, 3], "v_sat_pk_u8_i16": [0, 3], "v_sat_pk_u8_i16_dpp": [0, 3], "v_sat_pk_u8_i16_e64": [0, 3], "v_sat_pk_u8_i16_sdw": [0, 3], "v_screen_partition_4se_b32": 3, "v_screen_partition_4se_b32_dpp": 3, "v_screen_partition_4se_b32_e64": 3, "v_screen_partition_4se_b32_sdw": 3, "v_sin_f16": [0, 2, 3], "v_sin_f16_dpp": [0, 2, 3], "v_sin_f16_e64": [0, 2, 3], "v_sin_f16_sdw": [0, 2, 3], "v_sin_f32": [0, 1, 2, 3, 440], "v_sin_f32_dpp": [0, 2, 3], "v_sin_f32_e64": [0, 1, 2, 3], "v_sin_f32_sdw": [0, 2, 3], "v_sqrt_f16": [0, 2, 3], "v_sqrt_f16_dpp": [0, 2, 3], "v_sqrt_f16_e64": [0, 2, 3], "v_sqrt_f16_sdwa": [0, 2, 3], "v_sqrt_f32": [0, 1, 2, 3], "v_sqrt_f32_dpp": [0, 2, 3], "v_sqrt_f32_e64": [0, 1, 2, 3], "v_sqrt_f32_sdwa": [0, 2, 3], "v_sqrt_f64": [0, 1, 2, 3], "v_sqrt_f64_e64": [0, 1, 2, 3], "v_sub_co_ci_u32": 0, "v_sub_co_ci_u32_dpp": 0, "v_sub_co_ci_u32_e64": 0, "v_sub_co_ci_u32_sdw": 0, "v_sub_co_u32": [0, 3], "v_sub_co_u32_dpp": 3, "v_sub_co_u32_e64": 3, "v_sub_co_u32_sdw": 3, "v_sub_f16": [0, 2, 3], "v_sub_f16_dpp": [0, 2, 3], "v_sub_f16_e64": [0, 2, 3], "v_sub_f16_sdw": [0, 2, 3], "v_sub_f32": [0, 1, 2, 3], "v_sub_f32_dpp": [0, 2, 3], "v_sub_f32_e64": [0, 1, 2, 3], "v_sub_f32_sdw": [0, 2, 3], "v_sub_i16": 3, "v_sub_i32": [1, 3], "v_sub_i32_e64": 1, "v_sub_nc_i16": 0, "v_sub_nc_i32": 0, "v_sub_nc_u16": 0, "v_sub_nc_u32": 0, "v_sub_nc_u32_dpp": 0, "v_sub_nc_u32_e64": 0, "v_sub_nc_u32_sdw": 0, "v_sub_u16": [2, 3], "v_sub_u16_dpp": [2, 3], "v_sub_u16_e64": [2, 3], "v_sub_u16_sdw": [2, 3], "v_sub_u32": [2, 3], "v_sub_u32_dpp": [2, 3], "v_sub_u32_e64": [2, 3], "v_sub_u32_sdw": [2, 3], "v_subb_co_u32": 3, "v_subb_co_u32_dpp": 3, "v_subb_co_u32_e64": 3, "v_subb_co_u32_sdw": 3, "v_subb_u32": [1, 2], "v_subb_u32_dpp": 2, "v_subb_u32_e64": [1, 2], "v_subb_u32_sdw": 2, "v_subbrev_co_u32": 3, "v_subbrev_co_u32_dpp": 3, "v_subbrev_co_u32_e64": 3, "v_subbrev_co_u32_sdw": 3, "v_subbrev_u32": [1, 2], "v_subbrev_u32_dpp": 2, "v_subbrev_u32_e64": [1, 2], "v_subbrev_u32_sdw": 2, "v_subrev_co_ci_u32": 0, "v_subrev_co_ci_u32_dpp": 0, "v_subrev_co_ci_u32_e64": 0, "v_subrev_co_ci_u32_sdw": 0, "v_subrev_co_u32": [0, 3], "v_subrev_co_u32_dpp": 3, "v_subrev_co_u32_e64": 3, "v_subrev_co_u32_sdw": 3, "v_subrev_f16": [0, 2, 3], "v_subrev_f16_dpp": [0, 2, 3], "v_subrev_f16_e64": [0, 2, 3], "v_subrev_f16_sdw": [0, 2, 3], "v_subrev_f32": [0, 1, 2, 3], "v_subrev_f32_dpp": [0, 2, 3], "v_subrev_f32_e64": [0, 1, 2, 3], "v_subrev_f32_sdw": [0, 2, 3], "v_subrev_i32": 1, "v_subrev_i32_e64": 1, "v_subrev_nc_u32": 0, "v_subrev_nc_u32_dpp": 0, "v_subrev_nc_u32_e64": 0, "v_subrev_nc_u32_sdw": 0, "v_subrev_u16": [2, 3], "v_subrev_u16_dpp": [2, 3], "v_subrev_u16_e64": [2, 3], "v_subrev_u16_sdw": [2, 3], "v_subrev_u32": [2, 3], "v_subrev_u32_dpp": [2, 3], "v_subrev_u32_e64": [2, 3], "v_subrev_u32_sdw": [2, 3], "v_swap_b32": [0, 3], "v_swaprel_b32": 0, "v_trig_preop_f64": [0, 1, 2, 3], "v_trunc_f16": [0, 2, 3], "v_trunc_f16_dpp": [0, 2, 3], "v_trunc_f16_e64": [0, 2, 3], "v_trunc_f16_sdw": [0, 2, 3], "v_trunc_f32": [0, 1, 2, 3], "v_trunc_f32_dpp": [0, 2, 3], "v_trunc_f32_e64": [0, 1, 2, 3], "v_trunc_f32_sdw": [0, 2, 3], "v_trunc_f64": [0, 1, 2, 3], "v_trunc_f64_e64": [0, 1, 2, 3], "v_writelane_b32": [0, 1, 2, 3], "v_xad_u32": [0, 3], "v_xnor_b32": [0, 6, 7], "v_xnor_b32_dpp": [0, 6, 7], "v_xnor_b32_e64": [0, 6, 7], "v_xnor_b32_sdw": [0, 6, 7], "v_xor3_b32": 0, "v_xor_b32": [0, 1, 2, 3], "v_xor_b32_dpp": [0, 2, 3], "v_xor_b32_e64": [0, 1, 2, 3], "v_xor_b32_sdw": [0, 2, 3], "va_list": 549, "vacat": 590, "vaddr": [0, 1, 2, 3, 7, 56, 57, 326, 386, 387], "vadv": 608, "vagu": [130, 509], "val": [444, 447, 459, 501, 505, 545, 549, 562, 579, 596, 603, 614, 625, 637, 638, 639, 640, 641, 642, 643, 644], "val0": [505, 549], "val1": [505, 549, 551, 603], "val1l": 549, "val2": [505, 549, 551, 603], "val29": 505, "val3": 549, "val7": 549, "val_": 653, "val_success": 549, "valb": 562, "valc": 562, "valeur": 130, "valgrind": [461, 464, 544, 609], "valid": [46, 133, 231, 376, 438, 439, 440, 447, 448, 455, 457, 459, 460, 465, 466, 472, 474, 487, 489, 492, 493, 496, 501, 509, 511, 514, 517, 519, 521, 525, 528, 542, 549, 550, 551, 554, 561, 562, 569, 571, 574, 577, 579, 581, 593, 594, 596, 597, 598, 604, 611, 615, 617, 618, 637, 639, 648], "validat": [440, 451, 454, 479, 501, 509, 520, 542, 587, 594, 609, 619, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "validated": [46, 133, 231, 376, 542, 551, 638, 649], "validating": [501, 589], "validator": 551, "validity": 529, "valn": 603, "valu": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 35, 37, 38, 39, 40, 41, 46, 52, 70, 87, 103, 113, 114, 115, 116, 117, 118, 119, 129, 130, 131, 133, 150, 175, 189, 197, 198, 199, 200, 201, 206, 207, 209, 220, 222, 223, 224, 225, 226, 227, 231, 237, 253, 272, 286, 316, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 365, 367, 368, 369, 370, 371, 372, 376, 382, 400, 419, 435, 438, 441, 443, 444, 446, 447, 449, 452, 453, 455, 456, 457, 459, 460, 461, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 505, 506, 507, 509, 510, 511, 512, 513, 516, 518, 521, 523, 524, 525, 526, 527, 528, 529, 540, 543, 545, 546, 547, 548, 550, 553, 559, 560, 562, 563, 566, 567, 569, 570, 571, 572, 574, 575, 580, 585, 586, 587, 589, 591, 592, 594, 596, 598, 601, 605, 608, 609, 611, 613, 614, 615, 616, 618, 621, 622, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 656], "valuabl": [464, 504, 509, 530, 536, 584, 608], "value1": 593, "value2": [593, 594], "value_1": 548, "value_2": 548, "value_alignment": 549, "value_desc": 501, "value_kind": [440, 549], "value_loaded": 549, "value_n": 548, "value_typ": [440, 619], "valuecol": 546, "valued": [501, 549], "valuedisallowed": 501, "valueenumerator": 512, "valuekind": [440, 459], "valuelist": 604, "valuelistn": 604, "valueoptional": 501, "valuerequired": 501, "valuesuffix": 604, "valuet": 579, "valuetracking": [549, 598], "valuetyp": [440, 457, 512, 605, 614], "vanill": 502, "var": [440, 444, 456, 460, 561, 593, 601, 603, 642, 643, 644, 653], "var1": 456, "var_arg_function_typ": 649, "var_local": 525, "var_nam": [456, 651, 652, 653], "varang": 440, "vararg": [447, 456, 457, 549, 579, 638, 649], "varb": 601, "varexpr": [642, 643, 644, 653], "varexprast": [642, 643, 644], "vari": [437, 444, 460, 485, 501, 511, 513, 524, 525, 527, 532, 548, 549, 571, 577, 579, 587, 594, 596, 599, 604, 609, 614, 615, 647, 648, 649, 650, 651, 652, 653], "variability": 445, "variabl": [440, 442, 443, 444, 452, 453, 464, 467, 468, 470, 473, 480, 484, 489, 498, 501, 503, 506, 511, 514, 516, 518, 519, 520, 521, 523, 535, 536, 544, 550, 554, 555, 559, 560, 561, 562, 564, 565, 566, 567, 570, 571, 574, 579, 587, 591, 594, 596, 597, 598, 601, 603, 604, 607, 608, 609, 611, 612, 614, 615, 616, 617, 619, 621, 636, 637, 638, 639, 640, 641, 643, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655], "variable_nam": [455, 584], "variable_op": 603, "variableexprast": [637, 638, 639, 640, 641, 642, 643, 644], "variadic": [549, 579, 587], "variat": [443, 445, 457, 464, 511, 551, 584, 595, 599, 613, 614, 621], "varied": [458, 551], "variet": 518, "variety": [443, 444, 447, 453, 456, 457, 468, 503, 509, 511, 518, 521, 538, 548, 550, 551, 579, 582, 587, 593, 596, 601, 604, 638, 639, 640, 641, 645, 649, 650, 651, 652, 654], "various": [439, 443, 444, 447, 451, 452, 455, 457, 459, 461, 464, 481, 485, 489, 499, 503, 504, 506, 508, 511, 516, 517, 521, 529, 546, 548, 549, 552, 554, 555, 560, 562, 565, 566, 567, 574, 575, 579, 581, 584, 586, 587, 591, 593, 594, 601, 605, 608, 609, 614, 615, 616, 617, 619, 636, 637, 639, 640, 644, 647, 648, 650, 651], "varnam": [640, 641, 642, 643, 644, 651, 653], "vary": [109, 193, 341, 447, 451, 457, 505, 514, 521, 525, 549, 558, 563, 571, 579, 599, 645, 654], "varying": [457, 579], "vasileios": 585, "vasrc0": 7, "vasrc1": 7, "vbr": 470, "vbr4": 447, "vbr5": 447, "vbr6": [447, 589], "vbr7": 589, "vbr8": [447, 589], "vc": 551, "vc110": 572, "vc140": 572, "vc2": 572, "vc4": 572, "vc41": [567, 572], "vc50": 572, "vc70": 572, "vc70dep": 572, "vc80": 572, "vc98": 572, "vcall": 454, "vcblog": 594, "vcc": [0, 1, 2, 3, 13, 15, 26, 27, 47, 48, 49, 56, 57, 60, 61, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 104, 105, 111, 134, 135, 144, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 195, 232, 233, 243, 244, 247, 248, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 289, 290, 294, 295, 301, 302, 303, 322, 327, 328, 329, 343, 345, 356, 357, 377, 378, 379, 386, 387, 390, 391, 394, 395, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 440], "vcc_hi": 439, "vcc_lo": [90, 439], "vccz": [47, 71, 72, 73, 74, 75, 77, 80, 82, 83, 134, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 168, 169, 171, 232, 254, 255, 256, 257, 258, 259, 261, 265, 266, 268, 289, 290, 294, 295, 301, 302, 303, 322, 327, 328, 329, 330, 377, 401, 402, 403, 404, 405, 406, 408, 412, 413, 415], "vcsrevis": 455, "vdat": [0, 1, 2, 3, 7, 436], "vdata0": [0, 1, 2, 3], "vdata1": [0, 1, 2, 3], "vdst": [0, 1, 2, 3, 4, 5, 6, 7, 436], "ve": [457, 459, 502, 509, 510, 512, 516, 517, 519, 524, 549, 560, 578, 579, 581, 582, 590, 598, 609, 619, 637, 639, 641, 642, 643, 644, 645, 647, 648, 652, 653, 654], "vec": [549, 579], "vec0": 549, "vec01": 549, "vec012": 549, "vec0123": 549, "vec1": [549, 579], "vec2": [549, 579], "vec_splat": 550, "vec_type_hint": 440, "vector": [90, 103, 176, 189, 273, 286, 422, 435, 439, 440, 446, 447, 457, 459, 485, 501, 524, 527, 550, 561, 562, 577, 585, 587, 593, 611, 613, 614, 619, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 649, 653, 654], "vectoriz": [485, 520, 550, 587, 593, 607, 612], "vectorize_width": 613, "vectorized": [516, 549, 585, 610, 613], "vectorizer": 613, "vectorizing": [549, 585, 610], "vectorty": 549, "vectortyp": 579, "vectypehint": 440, "veg": 440, "vehicl": [456, 459], "vehiclemak": 459, "vehicletyp": 459, "vely": 457, "vend": 547, "vendor": [459, 549, 582, 594, 643], "venu": 590, "venv": 607, "ver60": 567, "verb": 459, "verbatim": [501, 614], "verbos": [461, 462, 464, 478, 482, 488, 494, 498, 555, 579, 584, 593, 614, 619], "verbosity": [616, 617], "verd": 440, "verif": [440, 460, 501, 530, 549, 577, 591, 607, 611, 612], "verifi": [441, 451, 457, 463, 530, 549, 551, 598, 615, 617, 638, 639, 640, 641, 642, 643, 644, 651], "verified": [460, 542, 549, 596], "verify": [442, 454, 460, 463, 470, 483, 485, 499, 509, 521, 542, 549, 556, 572, 580, 581, 593, 594, 595, 609, 615, 617, 641, 642, 643, 644, 649, 652, 653], "verify_arch": 483, "verifyfunct": [638, 639, 640, 641, 642, 643, 644], "verifying": [460, 471, 478, 593], "verifypreservedanalys": 617, "vers": [444, 505, 549, 571, 585, 598, 609], "version": [440, 441, 442, 443, 444, 447, 452, 455, 456, 457, 460, 462, 465, 466, 468, 470, 472, 473, 474, 478, 482, 483, 486, 487, 488, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504, 506, 509, 510, 512, 515, 516, 518, 521, 523, 525, 527, 529, 535, 537, 540, 541, 549, 557, 560, 561, 562, 563, 567, 572, 574, 576, 578, 579, 581, 583, 584, 587, 589, 591, 593, 596, 598, 601, 604, 607, 610, 613, 614, 615, 616, 617, 618, 621, 638, 639, 640, 642, 643, 644, 649, 650, 651, 653, 654], "version_less": 455, "versioned": [549, 610, 618, 642, 653], "versionhead": 567, "versioning": [549, 560, 585], "versioninglicm": 610, "versionsignatur": 567, "vertex": [85, 173, 270, 417, 440, 585], "vertic": 616, "vertical": 581, "very": [443, 444, 445, 447, 451, 453, 456, 457, 459, 460, 476, 485, 489, 501, 508, 509, 510, 511, 514, 516, 517, 518, 519, 520, 521, 530, 534, 536, 538, 539, 542, 543, 549, 551, 555, 557, 558, 560, 561, 563, 566, 574, 577, 579, 581, 584, 586, 589, 593, 594, 598, 601, 602, 603, 605, 607, 608, 609, 613, 615, 616, 619, 622, 623, 636, 637, 638, 639, 640, 641, 642, 645, 647, 648, 649, 650, 651, 652, 653, 654], "vex": 601, "vf": [584, 585], "vfp": [446, 549], "vfp3": 541, "vfprintf": 549, "vfuncid": 549, "vg": [464, 609], "vg_leak": 464, "vgpr": [11, 40, 130, 225, 370, 438, 549], "vgpr0": 440, "vgpr1": 440, "vgpr_spill_count": 440, "vgprs_used": 440, "vhaddp": [479, 485], "vi": [440, 444, 452, 455, 457, 460, 485, 489, 490, 498, 499, 504, 505, 507, 508, 509, 510, 511, 513, 515, 517, 518, 526, 534, 535, 540, 541, 549, 551, 552, 553, 554, 558, 563, 564, 565, 577, 579, 585, 587, 594, 596, 599, 601, 602, 604, 605, 609, 615, 616, 618, 622, 624, 625, 638, 639, 644], "viabl": [536, 594], "vic": [444, 485, 505, 549, 571, 585, 598, 609], "video": 579, "videos": 458, "view": [440, 444, 457, 458, 473, 489, 551, 552, 560, 581, 582, 584, 595, 616, 636, 640, 647, 651], "view_function_cfg": 651, "view_function_cfg_only": 651, "viewcfg": [579, 640], "viewcfgonly": [579, 640], "viewed": 569, "viewer": 459, "viewgraph": 579, "viewing": [560, 608], "viewpoint": 458, "viewvc": 581, "vim": [521, 595, 605], "violat": [440, 458, 509, 519, 549, 579, 587, 590, 640, 651], "violated": [454, 518, 549], "violating": [458, 590], "violent": 458, "virgini": 583, "virt": 579, "virtreg": 457, "virtreg2indexfunctor": 457, "virtregmap": 457, "virtregrewrit": 593, "virtual": [440, 443, 454, 460, 464, 472, 489, 505, 508, 518, 526, 527, 530, 532, 534, 543, 549, 555, 560, 563, 577, 579, 585, 593, 594, 601, 607, 614, 615, 637, 638, 639, 640, 641, 642, 643, 644, 649], "virtualconstprop": 549, "virtualenv": 607, "virtualindex": 549, "virtuality": 549, "virtually": [545, 579, 602, 605, 642, 653], "vis": [451, 483, 487, 488, 494, 496, 497, 512, 579, 614, 622], "visibility": [440, 447, 457, 487, 536, 552, 558, 563, 591, 611], "visibl": [440, 444, 447, 459, 468, 501, 549, 550, 552, 562, 563, 579, 593, 598, 611, 615], "visitbasicblock": 579, "visitconstrainedfpintrinsic": 441, "visited": 579, "visitfab": 512, "visitfunct": 617, "visitgcroot": 518, "visiticmpinst": 451, "visiting": 518, "visitinstruct": 617, "visitor": [451, 512, 518, 601, 638, 646, 647], "visitsrl": 512, "visitxor": 451, "visual": [442, 459, 511, 513, 521, 522, 566, 581, 589, 593, 614], "visualiz": [457, 549, 551, 571, 577, 579, 589, 594, 616, 640, 651], "visualizing": [614, 617, 640, 651], "visually": 460, "vk": 439, "vk_argu": 459, "vk_basicblock": 459, "vla": 549, "vlas": [513, 519], "vle": 503, "vliw": [500, 601], "vlk": 594, "vm": [0, 1, 2, 3, 439, 440, 459, 551], "vm_cnt": [103, 189, 286, 435], "vma": [488, 498, 617], "vmcnt": [103, 189, 286, 435, 440], "vmcnt_sat": [103, 189, 286, 435], "vmodulekey": [622, 623, 624, 625], "vmov": 460, "vmulp": [479, 485], "vn": [439, 550], "vo": 468, "vocabulary": 549, "void": [443, 444, 446, 447, 448, 457, 459, 460, 475, 501, 502, 505, 506, 511, 512, 514, 515, 518, 519, 528, 535, 536, 547, 551, 552, 555, 560, 562, 563, 566, 574, 577, 579, 591, 593, 594, 596, 598, 611, 613, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644], "voidtyp": 579, "voir": [5, 6, 620], "volatil": [438, 440, 443, 444, 457, 485, 498, 514, 518, 560, 566, 577, 614], "volatility": 443, "volcanic": 440, "volkan": 533, "volum": [520, 579], "voluminous": 579, "voluntary": 581, "volunte": 588, "volunteer": [537, 581, 588], "volunteered": 542, "von": 549, "vop1": [437, 440], "vop2": [437, 440], "vop3": [436, 437, 440], "vop_dpp": 440, "vop_sdw": 440, "vopc": [437, 440], "vot": 558, "vpaddbyrr_vpadddyrr_vpaddqyrr_vpaddwyrr_vpsubbyrr_vpsubdyrr_vpsubqyrr_vpsubwyrr": 479, "vpaddqyrr": 479, "vpbasicblock": 585, "vpblock": 585, "vpblockbas": 585, "vpgr": 440, "vpic": 583, "vpinstruct": 585, "vprecip": 585, "vprecipebas": 585, "vpregionblock": 585, "vpsubqyrr": 479, "vpsubusw": 609, "vptr": [549, 579, 594], "vptransformstat": 585, "vpus": 585, "vpvalu": 585, "vreg": [457, 526, 527, 529], "vscal": 549, "vscnt": 440, "vset_lan": 446, "vsetq_lane_s32": 446, "vsplth": 550, "vsrc": [0, 1, 2, 3], "vsrc0": [0, 1, 2, 3, 6, 7], "vsrc1": [0, 1, 2, 3, 6, 7], "vsrc2": [0, 1, 2, 3], "vsrc3": [0, 1, 2, 3], "vsx": 549, "vtabl": [459, 460, 549, 594, 611], "vulner": 594, "vulnerabilit": [549, 586, 591, 594], "vulnerability": 594, "vv": [460, 464], "vzeroupp": [479, 587], "w": [12, 15, 32, 110, 124, 194, 202, 204, 205, 213, 215, 216, 217, 342, 345, 362, 439, 457, 486, 487, 488, 493, 497, 513, 518, 536, 549, 551, 598], "w0": 549, "w30": [549, 555], "w31": 549, "w64": 455, "w7100": 440, "w8": 446, "w8100": 440, "w9100": 440, "w_": 605, "wa": 549, "wait": [103, 189, 286, 435, 440, 459, 485, 537, 563, 588, 599], "waitcnt": [0, 1, 2, 3, 440], "waiting": [485, 563, 622, 637, 639, 648], "waitset": 485, "waived": 509, "wak": 581, "walk": [539, 550, 553, 561, 577, 579, 615, 619], "walkarch": 579, "walker": 560, "walking": [527, 560, 579, 581], "wall": [464, 615, 645, 654], "walltimemark": 618, "wambiguous": 475, "want": [440, 443, 445, 447, 453, 455, 457, 458, 459, 460, 473, 485, 501, 502, 504, 509, 510, 512, 514, 517, 519, 520, 521, 523, 524, 527, 536, 537, 539, 540, 541, 542, 543, 544, 546, 547, 549, 551, 556, 560, 561, 562, 563, 576, 577, 578, 579, 580, 581, 582, 591, 593, 594, 595, 597, 598, 599, 602, 603, 605, 608, 614, 615, 616, 617, 619, 621, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654], "wanted": [579, 581, 599, 617, 639, 650], "wanting": [563, 579, 599], "warn": [455, 459, 527, 577], "warned": 523, "warning": [438, 440, 453, 455, 460, 462, 468, 475, 487, 492, 493, 497, 502, 509, 513, 521, 539, 549, 553, 563, 593, 598, 601, 605, 607, 610, 621, 622, 623, 644, 646], "warnmissedtransformationspass": 610, "warpsiz": 562, "warranted": 512, "warranty": [509, 615], "warren": 508, "wary": 516, "was": [440, 442, 444, 446, 447, 449, 450, 451, 455, 457, 459, 462, 464, 470, 471, 472, 473, 479, 485, 501, 502, 505, 506, 509, 511, 513, 514, 517, 519, 521, 524, 526, 536, 545, 547, 549, 551, 554, 561, 563, 567, 572, 575, 578, 579, 581, 584, 587, 590, 591, 593, 594, 598, 599, 601, 603, 605, 610, 613, 615, 618, 619, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 644, 645, 648, 649, 650, 651, 652, 653, 654], "wasincrementallylinked": 567, "wasn": [443, 561, 641, 642, 643, 644, 652, 653], "wast": [556, 579, 593, 595], "wasted": [554, 579, 596], "wasteful": [642, 653], "watch": 440, "watching": [509, 531], "waterfall": 537, "wav": [40, 225, 370, 440], "wave32": [438, 439], "wave_rol": 438, "wave_ror": 438, "wave_shl": [438, 440], "wave_shr": 438, "wavefront": [90, 104, 105, 438, 440], "wavefront_siz": 440, "wavefrontsiz": 440, "wavefrontsize64": 440, "way": [440, 442, 443, 444, 447, 451, 452, 453, 456, 457, 459, 460, 461, 478, 484, 485, 487, 489, 490, 498, 501, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 521, 523, 524, 526, 527, 529, 530, 534, 536, 540, 541, 542, 543, 544, 545, 547, 548, 549, 551, 555, 559, 560, 561, 562, 563, 564, 571, 572, 574, 577, 578, 580, 581, 582, 584, 585, 588, 589, 591, 593, 594, 596, 598, 601, 603, 604, 605, 607, 608, 609, 611, 613, 614, 615, 616, 617, 619, 621, 622, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "waypoint": 451, "wb": 485, "wc": 549, "wchar_t": 549, "wcovered": 459, "wd": 549, "we": [440, 442, 443, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 479, 485, 501, 502, 504, 505, 506, 509, 510, 511, 514, 515, 517, 518, 519, 520, 521, 523, 524, 526, 527, 528, 529, 530, 531, 532, 534, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 554, 555, 558, 560, 562, 563, 565, 566, 567, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 587, 590, 591, 593, 594, 596, 597, 598, 599, 601, 602, 605, 609, 610, 611, 613, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "weak": [444, 447, 486, 487, 488, 513, 549, 552, 561, 563, 579, 642, 653], "weak_odr": [447, 549], "weakanylinkag": 579, "weaken": [485, 487], "weakest": [444, 457], "weakness": 516, "weakodrlinkag": 579, "weakvh": 579, "wealth": 504, "web": [504, 509, 583, 587], "webassembly": [457, 549, 584], "webk": [549, 584, 596], "webkit_jscc": [447, 549], "websit": [456, 544, 581], "wednesday": 558, "week": [504, 509, 558, 584, 590], "weekend": 558, "weekly": 558, "weight": [490, 513, 549, 555, 586], "weird": 457, "wel": [440, 441, 443, 444, 447, 451, 452, 453, 455, 456, 457, 458, 459, 461, 473, 474, 485, 486, 489, 499, 501, 504, 505, 507, 508, 509, 512, 514, 515, 516, 521, 524, 527, 534, 535, 536, 539, 542, 543, 548, 551, 552, 555, 558, 561, 562, 566, 567, 569, 570, 575, 577, 578, 579, 581, 583, 584, 587, 589, 590, 591, 593, 594, 595, 598, 603, 605, 609, 610, 612, 613, 615, 616, 617, 621, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 650, 652, 653], "welcom": [458, 503, 509, 520, 521, 523, 540, 563, 598, 615, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "welcoming": [458, 558], "weng": 502, "wennborg": 542, "went": [639, 640, 651], "wer": [444, 446, 457, 459, 460, 464, 471, 473, 478, 484, 485, 492, 493, 498, 499, 501, 502, 505, 506, 509, 511, 516, 523, 527, 542, 544, 547, 549, 550, 551, 560, 561, 563, 567, 577, 579, 581, 587, 590, 593, 594, 598, 601, 604, 605, 613, 617, 622, 645, 654], "weren": [509, 527], "werror": 535, "wf": 549, "wg21": 594, "wget": 521, "wgp": 440, "wgp_mod": 440, "what": [438, 439, 440, 443, 444, 446, 447, 448, 450, 452, 455, 457, 459, 460, 463, 465, 473, 482, 485, 489, 499, 501, 502, 503, 505, 508, 509, 511, 512, 520, 521, 523, 524, 525, 527, 528, 530, 531, 536, 537, 541, 542, 544, 548, 549, 550, 555, 556, 558, 560, 562, 563, 565, 567, 571, 574, 575, 577, 578, 579, 580, 582, 584, 585, 587, 588, 589, 593, 594, 595, 597, 598, 599, 601, 602, 603, 604, 605, 608, 614, 616, 618, 619, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "whatev": [443, 455, 460, 479, 501, 502, 505, 511, 519, 521, 539, 541, 549, 558, 560, 565, 577, 578, 579, 599, 619], "whatsoev": [509, 549], "when": [88, 332, 420, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 452, 453, 455, 456, 457, 458, 460, 461, 462, 464, 468, 472, 473, 474, 478, 479, 485, 486, 487, 488, 489, 490, 492, 493, 494, 497, 498, 499, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 517, 518, 519, 520, 521, 523, 524, 528, 529, 530, 532, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 571, 574, 576, 577, 578, 579, 581, 582, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "whenev": [442, 443, 456, 459, 460, 461, 501, 507, 536, 546, 548, 549, 560, 579, 593, 596, 609, 636, 644], "wher": [41, 131, 227, 372, 436, 438, 439, 440, 441, 444, 446, 447, 448, 449, 451, 454, 455, 457, 458, 459, 460, 464, 468, 473, 475, 478, 479, 484, 485, 486, 487, 489, 490, 493, 499, 500, 501, 502, 505, 506, 509, 511, 512, 515, 516, 517, 518, 519, 521, 523, 524, 525, 526, 529, 530, 535, 536, 541, 542, 543, 544, 545, 548, 549, 551, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 574, 575, 577, 578, 579, 580, 581, 585, 587, 588, 589, 590, 591, 593, 594, 598, 603, 604, 605, 608, 609, 610, 614, 615, 616, 617, 619, 621, 623, 636, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 653], "whereby": [571, 581], "wherev": [502, 579, 644], "wheth": [438, 440, 441, 443, 447, 448, 451, 454, 455, 457, 459, 465, 466, 468, 475, 499, 502, 505, 511, 512, 513, 518, 519, 521, 525, 526, 534, 535, 540, 543, 544, 548, 549, 551, 552, 561, 564, 571, 574, 577, 578, 579, 580, 581, 584, 585, 589, 590, 591, 593, 594, 596, 598, 601, 603, 610, 611, 614, 616, 618, 622, 637, 639, 640, 641, 642, 643, 644, 645, 648, 651, 652, 653, 654], "which": [8, 11, 14, 23, 41, 52, 54, 55, 106, 109, 112, 120, 131, 139, 140, 190, 193, 196, 208, 226, 227, 237, 239, 240, 307, 325, 338, 341, 344, 353, 371, 372, 382, 384, 385, 436, 437, 438, 439, 440, 444, 445, 446, 447, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 479, 483, 485, 486, 487, 489, 490, 496, 499, 501, 502, 504, 505, 506, 507, 509, 511, 512, 513, 514, 516, 517, 518, 521, 522, 523, 524, 525, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 567, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654], "whichev": [578, 593], "whil": [226, 371, 437, 438, 440, 442, 443, 447, 450, 451, 455, 456, 457, 458, 459, 460, 464, 485, 499, 501, 504, 505, 507, 508, 509, 510, 511, 515, 517, 519, 520, 521, 525, 526, 529, 530, 534, 536, 539, 540, 541, 546, 547, 549, 550, 551, 552, 553, 558, 560, 561, 563, 564, 565, 566, 567, 571, 572, 574, 575, 576, 577, 578, 581, 584, 587, 588, 589, 590, 591, 593, 594, 596, 598, 599, 602, 603, 605, 609, 613, 615, 617, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 651, 653, 654], "whilst": [486, 492, 493, 498], "whip": [641, 652], "whirlwind": [637, 648], "whisker": 594, "whit": 503, "whitelist": [473, 537, 563, 598], "whitelist_fun": 473, "whitelisted": [563, 581], "whitelisting": 581, "whitepap": [559, 616], "whitespac": [460, 468, 483, 487, 509, 604, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "whitespaceoranycomment": 604, "whitespaceorcstylecomment": 604, "whizbang": 459, "who": [450, 453, 455, 456, 506, 509, 510, 520, 524, 526, 544, 548, 549, 558, 561, 563, 576, 578, 581, 590, 599, 612, 614, 621, 622, 639, 642, 645, 646, 650, 653, 654], "whol": [442, 457, 468, 490, 509, 511, 512, 516, 518, 534, 541, 542, 545, 548, 549, 551, 555, 561, 563, 577, 579, 589, 591, 597, 607, 608, 609, 611, 615, 621, 622, 637, 639, 640, 648, 650, 651], "whom": [561, 575], "whos": [438, 440, 443, 447, 451, 457, 459, 464, 468, 478, 485, 486, 487, 489, 490, 506, 508, 549, 553, 572, 574, 579, 585, 589, 593, 601, 603, 604, 614, 618, 622, 637, 641, 642, 648, 652, 653], "whould": 590, "why": [440, 443, 449, 450, 458, 459, 485, 502, 509, 517, 521, 535, 543, 549, 556, 560, 561, 572, 578, 579, 583, 593, 594, 595, 598, 601, 602, 615, 619, 637, 638, 640, 646, 647, 648, 651], "wibbl": 496, "wid": [439, 440, 443, 444, 447, 453, 457, 458, 488, 512, 518, 519, 525, 529, 538, 549, 562, 565, 574, 575, 579, 585, 587, 603, 604, 620, 639, 640, 650, 651], "wideaddr": 549, "widecharact": 574, "widely": [444, 456, 509, 518, 521, 579, 593, 611, 645, 654], "widen": [585, 613, 615], "widenable_cond": 549, "widenable_condit": 549, "widened": 585, "widening": [457, 529, 593, 615], "widenscalar": 529, "widenscalarfor": 529, "widenscalartonextpow2": 529, "widest": 509, "width": [439, 444, 446, 479, 485, 502, 518, 525, 553, 567, 577, 579, 584, 587, 610, 613, 645, 654], "wik": [455, 521, 541, 551, 556, 583, 584, 591], "wikipedi": [548, 549, 556, 640, 651], "wild": [501, 641, 652], "wildcard": [473, 487, 497], "will": [437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 482, 485, 486, 487, 488, 489, 490, 492, 493, 494, 497, 498, 499, 500, 501, 502, 504, 505, 506, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 521, 523, 524, 525, 527, 529, 530, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 569, 571, 572, 574, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 601, 603, 604, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "willing": [509, 645, 654], "willreturn": 549, "wily": 519, "win": [443, 459, 579, 594], "win32": [457, 521, 523, 572, 599, 609], "wincomplet": 475, "windbg": 593, "window": [453, 455, 457, 459, 464, 468, 475, 489, 501, 502, 505, 514, 521, 522, 523, 537, 547, 549, 563, 572, 575, 579, 581, 593, 599, 609, 615, 638, 639, 640, 641, 651], "wineh": 505, "winrt": 566, "winrtsmartpoint": 566, "winzip": 523, "wip": 440, "wireshark": 551, "wiring": 514, "wis": [513, 550], "wisely": 603, "wish": [455, 464, 468, 501, 502, 512, 516, 519, 521, 530, 540, 544, 549, 563, 575, 579, 590, 594, 598, 603, 614, 646], "wished": 561, "wishing": 563, "with": [12, 43, 44, 45, 46, 132, 133, 194, 228, 229, 230, 231, 288, 293, 298, 299, 300, 319, 320, 321, 342, 373, 374, 375, 376, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 520, 522, 524, 525, 526, 527, 528, 529, 530, 533, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 580, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 614, 616, 618, 619, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 656], "with_assert": 455, "withholding": 593, "within": [438, 440, 443, 446, 447, 451, 456, 457, 458, 459, 460, 464, 478, 485, 487, 488, 496, 497, 499, 502, 505, 511, 513, 518, 519, 521, 529, 534, 543, 549, 550, 553, 561, 562, 563, 564, 565, 567, 571, 574, 575, 577, 579, 580, 581, 584, 585, 589, 590, 591, 593, 594, 596, 598, 603, 607, 608, 611, 615, 618, 619, 621, 639, 640, 641, 642, 643, 644, 650, 651, 652, 653], "withmoduledo": [563, 622], "without": [438, 439, 440, 444, 446, 447, 448, 451, 453, 455, 456, 457, 459, 460, 461, 464, 466, 468, 472, 473, 478, 485, 486, 487, 490, 497, 498, 501, 502, 505, 506, 507, 509, 511, 513, 516, 518, 519, 521, 524, 525, 529, 530, 535, 545, 549, 550, 551, 552, 553, 556, 557, 560, 561, 564, 567, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 587, 589, 590, 593, 594, 595, 596, 598, 599, 601, 605, 609, 610, 613, 614, 615, 637, 639, 640, 641, 642, 643, 644, 647, 648, 650, 651, 652, 653], "witness": 590, "witnessed": 440, "witnessing": 590, "wl": [521, 564, 587, 641], "wlandry": 583, "wno": 539, "woff2": 551, "wojciech": 577, "wolf": 508, "won": [455, 457, 459, 502, 509, 519, 527, 540, 541, 545, 549, 556, 581, 588, 593, 594, 604, 608, 609, 638, 639, 644, 650], "wond": [514, 519, 543], "wondered": 594, "wonderful": [639, 650], "wondering": [459, 509], "wontfix": 450, "word": [438, 440, 444, 448, 457, 458, 459, 501, 508, 511, 513, 514, 518, 528, 530, 543, 549, 551, 560, 569, 579, 584, 593, 594, 614, 618, 621, 638, 649], "word32": 440, "word64": 440, "word_0": [438, 440, 569], "word_1": [438, 440, 569], "word_n": 569, "wording": [458, 590], "wordsiz": 518, "work": [441, 442, 443, 444, 448, 450, 451, 452, 456, 457, 458, 459, 460, 464, 465, 466, 473, 479, 484, 487, 497, 501, 502, 503, 505, 506, 509, 510, 511, 512, 514, 517, 518, 520, 521, 523, 526, 530, 535, 536, 537, 540, 541, 542, 543, 547, 549, 550, 552, 555, 558, 559, 560, 563, 572, 577, 579, 580, 581, 582, 584, 587, 592, 593, 594, 598, 599, 601, 604, 605, 607, 608, 609, 612, 614, 615, 617, 619, 622, 623, 636, 637, 638, 639, 640, 642, 643, 645, 646, 647, 648, 649, 650, 651, 653, 654], "work_group_size_hint": 440, "workabl": 579, "workaround": [485, 582], "worked": [450, 456, 458, 504, 526, 535, 539], "worker": [464, 551], "workflow": [442, 453, 521, 578, 616], "workgroup": 440, "workgroup_siz": 440, "workgroup_size_hint": 440, "workgroupsiz": 440, "workgroupsizehint": 440, "working": [443, 444, 451, 453, 457, 459, 461, 470, 471, 489, 490, 501, 502, 504, 509, 512, 518, 521, 540, 542, 543, 544, 548, 549, 550, 551, 553, 554, 558, 563, 578, 579, 581, 590, 594, 611, 612, 614, 615, 616, 617, 639, 641, 644, 645, 650, 652, 654], "worklist": [561, 577, 579], "workload": 440, "worksform": 450, "workshop": [558, 594], "workspac": 521, "world": [456, 458, 506, 518, 521, 523, 536, 549, 556, 558, 578, 593, 595, 645, 647, 654], "worry": [501, 549, 578, 637, 644, 648], "wors": [446, 457, 549], "worst": [534, 579, 592, 593, 598, 645, 654], "worth": [451, 452, 453, 459, 516, 529, 538, 543, 560, 579, 594, 616], "worthwhil": 579, "would": [439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 454, 455, 456, 457, 459, 460, 465, 470, 487, 489, 497, 501, 502, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 523, 524, 529, 534, 537, 539, 543, 544, 548, 549, 550, 551, 555, 556, 560, 561, 563, 564, 565, 566, 567, 571, 574, 575, 577, 578, 579, 580, 581, 583, 584, 590, 591, 593, 594, 595, 596, 598, 599, 601, 604, 605, 609, 610, 611, 613, 615, 616, 617, 618, 619, 621, 623, 637, 638, 639, 640, 644, 645, 648, 649, 650, 651, 652, 654], "wouldn": [459, 593, 642, 644, 653], "wp": [536, 594], "wpdre": 549, "wpdresolu": 549, "wrap": [459, 501, 509, 516, 519, 521, 524, 549, 554, 563, 579, 599, 619, 621, 622, 637, 638, 646, 647, 648, 649], "wrapcolumn": 619, "wrapp": [456, 459, 484, 502, 554, 561, 563, 564, 577, 579, 599, 614], "wrapped": [447, 579, 593, 621], "wrapper": [563, 599, 614], "wrapping": [456, 459, 509, 519, 547, 549, 579, 587, 594, 619, 622], "wrf_": 583, "wrf_r": 583, "wrinkl": 547, "writ": [52, 237, 382, 440, 443, 444, 447, 451, 457, 460, 468, 469, 471, 473, 475, 477, 479, 480, 482, 487, 488, 489, 496, 497, 499, 500, 501, 502, 503, 504, 509, 510, 511, 512, 516, 519, 521, 523, 530, 547, 549, 551, 555, 556, 561, 562, 563, 567, 571, 577, 579, 580, 584, 587, 593, 595, 596, 598, 603, 605, 608, 609, 612, 614, 615, 617, 619, 636, 639, 640, 643, 644, 647, 650, 651], "writabl": [439, 486, 510, 513, 567, 593], "write_escaped": 615, "write_only": 440, "writeabl": [40, 130, 225, 370], "writeali": 561, "writealu": 479, "writeattribut": 601, "writeonly": [440, 447, 549], "writer": [444, 476, 518, 522], "writesetcc": 479, "writethunk": 561, "writethunkorali": 561, "writetypet": 512, "writev": 614, "writing": [444, 459, 460, 470, 489, 498, 500, 502, 520, 521, 525, 526, 549, 556, 561, 563, 571, 572, 579, 585, 586, 593, 594, 595, 599, 601, 603, 605, 612, 616, 619, 639, 645, 650, 654, 655], "written": [440, 442, 443, 456, 457, 459, 470, 471, 473, 475, 477, 479, 480, 485, 487, 490, 504, 509, 510, 513, 515, 521, 526, 544, 548, 549, 551, 561, 562, 567, 571, 572, 577, 579, 581, 582, 583, 584, 593, 594, 595, 598, 599, 601, 603, 607, 609, 613, 614, 618, 619, 640, 641, 644, 645, 646, 647, 651, 652, 654], "wrong": [443, 445, 450, 458, 502, 514, 544, 591, 599, 639, 644], "wrot": [512, 519, 549, 643, 644], "wswitch": 459, "wu": 502, "www": [445, 455, 542, 581, 583, 584, 594], "wzr": 549, "x": [12, 110, 194, 342, 437, 438, 439, 440, 444, 446, 449, 457, 459, 460, 461, 468, 473, 478, 486, 487, 488, 492, 493, 494, 496, 497, 501, 502, 506, 509, 511, 513, 514, 517, 518, 521, 524, 525, 529, 542, 549, 551, 555, 562, 566, 572, 577, 579, 581, 587, 593, 598, 601, 603, 604, 605, 611, 614, 615, 619, 621, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654], "x0": [513, 555], "x00": [589, 656], "x00argpath": 589, "x00function": 589, "x00key": 589, "x00path": 589, "x00remark": 589, "x00valu": 589, "x01": 656, "x03": 656, "x04": 656, "x08": 656, "x0abar": 551, "x0c": 656, "x1": [513, 577, 587, 642, 653], "x11": 579, "x15": [513, 549], "x16": [437, 513], "x2": [437, 549, 577, 642, 653], "x20": 555, "x21": 555, "x24": 656, "x3": [437, 577, 642, 653], "x30": 549, "x32": 460, "x4": [437, 577, 642, 653], "x44": 656, "x64": [460, 521, 523, 537], "x8": 437, "x83": 656, "x86": [442, 444, 454, 455, 460, 465, 466, 479, 485, 487, 488, 505, 511, 512, 516, 521, 524, 538, 548, 549, 550, 555, 567, 584, 592, 594, 598, 601, 603, 605, 609, 611, 613, 614, 617, 619, 643], "x86_64": [454, 457, 460, 479, 485, 498, 510, 516, 517, 536, 538, 539, 540, 549, 555, 588, 591, 593, 596, 598, 609, 616, 619, 643], "x86_fastcall": 457, "x86_fastcallcc": 447, "x86_fp80": [447, 549, 561], "x86_mmx": 447, "x86_ssecall": 614, "x86_stdcall": 457, "x86_stdcallcc": 447, "x86_thiscall": 457, "x86call": 603, "x86callingconv": 614, "x86codeemitt": 614, "x86dagtodagisel": 617, "x86framelowering": 457, "x86geninstrinfo": 479, "x86genregisterinfo": [457, 614], "x86ii": 614, "x86inst": 605, "x86instrinfo": 614, "x86instrmmx": 614, "x86instrss": 614, "x86iseldagtodag": 617, "x86isellowering": 617, "x86registerinfo": [457, 614], "x86reloc": 614, "x86retflag": 603, "x86subtarget": 617, "x86targetasminfo": 614, "x86targetlowering": 617, "x86targetmachin": [457, 617], "x87": [524, 549], "x8b": 656, "x_": 605, "xab": 551, "xadd": 444, "xarch": 521, "xarg": 581, "xc3": 656, "xc4": 656, "xc7": 656, "xchg": [444, 549], "xclang": 544, "xcod": [455, 507, 521], "xcodebuild": 455, "xcoff": 587, "xcor": [457, 521, 549, 584], "xctoolchain": 455, "xd": 603, "xdat": 567, "xdemangl": 473, "xdig": 460, "xe8": 656, "xec": 656, "xemac": 521, "xf7": 551, "xf8": 551, "xfail": [464, 609], "xgot": 587, "xinmin": 585, "xlc": 521, "xlen": 549, "xmax": [641, 652], "xme": 489, "xmi": 489, "xmin": [641, 652], "xml": 447, "xmm": [460, 549, 587, 614], "xmm0": [460, 485, 596, 603, 605, 609], "xmm1": [479, 485, 603, 605], "xmm10": 605, "xmm11": 605, "xmm12": 605, "xmm13": 605, "xmm14": 605, "xmm15": 605, "xmm2": [479, 485, 549, 603, 605], "xmm3": [479, 485, 549, 603, 605], "xmm4": [485, 603, 605], "xmm5": [603, 605], "xmm6": [603, 605], "xmm7": [603, 605], "xmm8": 605, "xmm9": 605, "xmos": 503, "xnack": [195, 232, 233, 243, 244, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 343, 345, 356, 357, 377, 378, 379, 386, 387, 390, 391, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 440], "xnack_mask": [40, 439, 440], "xnack_mask_h": 439, "xnack_mask_lo": 439, "xnor": 614, "xnorrr": 614, "xor": [438, 439, 457, 505, 562, 577, 579, 613, 614], "xor16rr": 457, "xor32rr": [457, 555], "xor64rr": 457, "xor8rr": 457, "xorl": 594, "xorr": 614, "xorrr": 614, "xp": 599, "xpass": 464, "xplus1": 603, "xray_always_instru": [616, 617], "xray_basic_opt": 616, "xray_fdr_opt": 616, "xray_instr_map": [616, 617], "xray_log_finalized": 616, "xray_log_flushed": 616, "xray_log_interfac": 616, "xray_logfile_bas": 616, "xray_mod": [616, 617], "xray_never_instru": 616, "xray_opt": [616, 617], "xraylogimpl": 616, "xs1": 503, "xstep": [641, 652], "xtemp": 444, "xu": 585, "xuetian": 502, "xvf": 523, "xvjf": 521, "xword": 614, "xx": [445, 487, 549], "xxx": [459, 460, 487, 607, 608, 614], "xxxasmprint": 614, "xxxbegin": 579, "xxxbranchselector": 614, "xxxcallingconv": 614, "xxxcodeemitt": 614, "xxxend": 579, "xxxgenasmwrit": 614, "xxxgencallingconv": 614, "xxxgencodeemitt": 614, "xxxgendagisel": 614, "xxxgeninstrinfo": 614, "xxxgenregisterinfo": 614, "xxxinstrdescriptor": 614, "xxxinstrformat": 614, "xxxinstrinfo": [546, 614], "xxxiseldagtodag": 614, "xxxisellowering": 614, "xxxiterator": 579, "xxxjitinfo": 614, "xxxkind": 543, "xxxlai": 563, "xxxregisterinfo": 614, "xxxreloc": 614, "xxxschedul": 614, "xxxsubtarget": 614, "xxxtargetasminfo": 614, "xxxtargetlowering": 614, "xxxtargetmachin": 614, "xxxtrait": 619, "xxxxxx": 616, "xy": 437, "xyz": [437, 465, 466, 521, 546], "xyzw": 437, "xyzzy": 459, "xz": 511, "xzr": 549, "yaml": [440, 462, 479, 489, 555, 586, 616, 617, 656], "yaxxz": 511, "ye": [437, 509, 514, 519, 521, 523, 551, 556, 561, 577, 592, 595, 625], "year": [452, 509, 582, 605], "yet": [444, 457, 459, 472, 490, 501, 505, 511, 518, 525, 537, 539, 547, 548, 549, 554, 561, 563, 577, 579, 583, 594, 598, 614, 615, 616, 623, 624, 625, 638, 640, 641, 650, 651, 652], "yield": [447, 501, 505, 519, 549, 577, 579, 598, 608, 617, 622], "yielded": 505, "yielding": 549, "yin": 619, "ymax": [641, 652], "ymin": [641, 652], "ymm": [549, 587], "ymm0": 596, "yosefk": 459, "you": [442, 443, 444, 445, 447, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 463, 464, 466, 468, 473, 477, 478, 479, 485, 489, 498, 499, 501, 502, 504, 506, 507, 509, 510, 511, 512, 514, 516, 517, 518, 519, 520, 521, 523, 524, 527, 528, 529, 530, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 549, 551, 553, 555, 556, 558, 560, 561, 562, 563, 564, 567, 571, 575, 576, 577, 578, 579, 580, 581, 584, 587, 588, 591, 593, 594, 595, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 612, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "young": [485, 579], "your": [442, 443, 444, 445, 451, 453, 457, 458, 459, 460, 462, 468, 473, 479, 489, 501, 502, 504, 506, 509, 510, 511, 512, 514, 516, 517, 518, 519, 520, 521, 523, 528, 535, 536, 538, 539, 540, 541, 542, 544, 549, 550, 551, 556, 559, 560, 562, 571, 576, 578, 580, 581, 586, 588, 589, 590, 591, 595, 598, 600, 605, 606, 608, 609, 612, 614, 617, 619, 621, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 650, 651, 652, 653, 654], "yourallocator": 536, "yourregex": 460, "yourself": [450, 455, 504, 509, 512, 521, 549, 578, 579, 603], "yout": 619, "yplus1": 603, "ystep": [641, 652], "ysvn": 542, "yy": 562, "yypvr": 595, "z": [12, 85, 110, 173, 194, 270, 342, 417, 438, 440, 447, 457, 460, 462, 487, 488, 497, 503, 517, 542, 549, 555, 562, 577, 587, 593, 603, 604, 605, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "z0": [439, 460, 549, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "z15": 587, "z2": 641, "z3": 455, "z7": [549, 567, 593], "z_": [439, 460], "za": [439, 460, 549, 555, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "zachary": 584, "zak": 585, "zc": 549, "zchf": 541, "zen": 594, "zero": [436, 438, 439, 440, 446, 447, 457, 459, 460, 461, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 480, 482, 485, 486, 487, 488, 492, 493, 494, 496, 497, 499, 500, 501, 502, 505, 506, 513, 516, 518, 519, 525, 528, 530, 549, 550, 551, 553, 554, 555, 562, 563, 567, 577, 579, 585, 591, 593, 594, 596, 598, 603, 609, 611, 613, 614, 618, 637, 640, 645, 648, 651, 652, 653, 654], "zeroargfp": 603, "zerocontent": 591, "zerodirect": 614, "zeroed": [439, 591], "zeroext": [447, 549], "zeroing": 594, "zeroinitializ": 549, "zeroormor": 501, "zeros": [438, 439, 525, 528, 549], "zext": [545, 593], "zhou": 585, "zi": [567, 593], "zip": [521, 581], "zipped": 581, "zippped": 581, "zlib": [455, 487, 521], "zlib1g": 541, "zmm": 587, "zon": [549, 594], "zorg": 537, "zork": 603, "zy": 549, "zz": 549, "\u00e9gal": [53, 138, 238, 324, 383], "\u00eatre": [53, 130, 138, 238, 324, 383], "\u03c6": [525, 549]}, "titles": ["Syntax of Core GFX10 Instructions", "Syntax of Core GFX7 Instructions", "Syntax of Core GFX8 Instructions", "Syntaxe des instructions GFX9", "Syntax of gfx900, gfx902 and gfx909 Instructions", "Syntaxe des instructions gfx904", "Syntaxe des instructions gfx906", "Syntaxe des instructions gfx908", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "sdata", "sdata", "sdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "label", "fx", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "saddr", "saddr", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vaddr", "vaddr", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "sdst", "ssrc", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "hwreg", "label", "m", "msg", "soffset", "soffset", "opt", "param", "dst", "srsrc", "srsrc", "ssamp", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "imask", "label", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "fx", "m", "src", "src", "vdst", "fx", "m", "src", "src", "vdst", "fx", "m", "m", "m", "src", "src", "src", "Type deviation", "vdst", "vsrc", "vaddr", "adst", "adst", "adst", "adst", "asrc", "asrc", "asrc", "asrc", "vdata", "vdst", "fx", "m", "m", "m", "soffset", "opt", "dst", "srsrc", "saddr", "src", "src", "src", "src", "Type deviation", "vaddr", "vasrc", "vasrc", "vdata", "vdst", "vsrc", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "sdata", "sdata", "sdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "imask", "label", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "saddr", "saddr", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vaddr", "vaddr", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "AMDGPU Instructions Notation", "AMDGPU Instruction Syntax", "Syntax of AMDGPU Instruction Modifiers", "Syntax of AMDGPU Instruction Operands", "User Guide for AMDGPU Backend", "How To Add A Constrained Floating-Point Intrinsic", "Advanced Build Configurations", "LLVM Alias Analysis Infrastructure", "LLVM Atomic Instructions and Concurrency Guide", "Benchmarking tips", "Using ARM NEON instructions in big endian mode", "LLVM Bitcode File Format", "LLVM Block Frequency Terminology", "LLVM Branch Weight Metadata", "LLVM Bug Life Cycle", "LLVM bugpoint tool: design and usage", "&lt;no title&gt;", "Building a Distribution of LLVM", "Control Flow Verification Tool Design Document", "Building LLVM with CMake", "CMake Primer", "The LLVM Target-Independent Code Generator", "LLVM Community Code of Conduct", "LLVM Coding Standards", "FileCheck - Flexible pattern matching file verifier", "bugpoint - automatic test case reduction tool", "dsymutil - manipulate archived DWARF debug symbol files", "LLVM Command Guide", "lit - LLVM Integrated Tester", "llc - LLVM static compiler", "lli - directly execute programs from LLVM bitcode", "llvm-addr2line - a drop-in replacement for addr2line", "llvm-ar - LLVM archiver", "llvm-as - LLVM assembler", "llvm-bcanalyzer - LLVM bitcode analyzer", "llvm-build - LLVM Project Build Utility", "llvm-config - Print LLVM compilation options", "llvm-cov - emit coverage information", "llvm-cxxfilt - LLVM symbol name demangler", "llvm-cxxmap - Mangled name remapping tool", "llvm-diff - LLVM structural \u201cdiff\u201d", "llvm-dis - LLVM disassembler", "llvm-dwarfdump - dump and verify DWARF debug information", "llvm-exegesis - LLVM Machine Instruction Benchmark", "llvm-extract - extract a function from an LLVM module", "llvm-lib - LLVM lib.exe compatible library tool", "llvm-link - LLVM bitcode linker", "llvm-lipo - LLVM tool for manipulating universal binaries", "llvm-locstats - calculate statistics on DWARF debug location", "llvm-mca - LLVM Machine Code Analyzer", "llvm-nm - list LLVM bitcode and object file\u2019s symbol table", "llvm-objcopy - object copying and editing tool", "llvm-objdump - LLVM\u2019s object file dumper", "llvm-pdbutil - PDB File forensics and diagnostics", "llvm-profdata - Profile data tool", "llvm-ranlib - generates an archive index", "llvm-readelf - GNU-style LLVM Object Reader", "llvm-readobj - LLVM Object Reader", "llvm-size - print size information", "llvm-stress - generate random .ll files", "llvm-strings - print strings", "llvm-strip - object stripping tool", "llvm-symbolizer - convert addresses into source code locations", "opt - LLVM optimizer", "tblgen - Target Description To C++ Code Generator", "CommandLine 2.0 Library Manual", "Compiling CUDA with clang", "Architecture &amp; Platform Information for Compiler Writers", "Contributing to LLVM", "Coroutines in LLVM", "LLVM Code Coverage Mapping Format", "Debugging JIT-ed Code With GDB", "Dependence Graphs in LLVM", "LLVM Developer Policy", "A guide to Dockerfiles for building LLVM", "Exception Handling in LLVM", "Extending LLVM: Adding instructions, intrinsics, types, etc.", "LLVM Extensions", "Frequently Asked Questions (FAQ)", "FaultMaps and implicit checks", "Performance Tips for Frontend Authors", "Fuzzing LLVM libraries and tools", "Garbage Collection with LLVM", "The Often Misunderstood GEP Instruction", "Getting Involved", "Getting Started with the LLVM System", "Getting Started/Tutorials", "Getting Started with the LLVM System using Microsoft Visual Studio", "Generic Machine IR", "Generic Opcodes", "IRTranslator", "InstructionSelect", "Known Bits Analysis", "Legalizer", "Core Pipeline", "Porting GlobalISel to A New Target", "RegBankSelect", "Resources", "Global Instruction Selection", "The LLVM gold plugin", "GWP-ASan", "How To Add Your Build Configuration To LLVM Buildbot Infrastructure", "How To Build On ARM", "How To Build Clang and LLVM with Profile-Guided Optimizations", "How to Cross Compile Compiler-rt Builtins For Arm", "How To Cross-Compile Clang/LLVM using Clang/LLVM", "How To Release LLVM To The Public", "How to set up LLVM-style RTTI for your class hierarchy", "How to submit an LLVM bug report", "How To Use Attributes", "How To Use Instruction Mappings", "Design and Usage of the InAlloca Attribute", "LLVMBuild Guide", "LLVM Language Reference Manual", "The LLVM Lexicon", "libFuzzer \u2013 a library for coverage-guided fuzz testing.", "LLVM Link Time Optimization: Design and Implementation", "LLVM Loop Terminology (and Canonical Forms)", "MCJIT Design and Implementation", "Machine IR (MIR) Format Reference Manual", "}", "LLVM\u2019s Optional Rich Disassembly Output", "How to start LLVM Social in your town", "MemTagSanitizer", "MemorySSA", "MergeFunctions pass, how it works", "User Guide for NVPTX Back-end", "ORC Design and Implementation", "Using -opt-bisect-limit to debug optimization errors", "CodeView Symbol Records", "CodeView Type Records", "The PDB DBI (Debug Info) Stream", "The PDB Global Symbol Stream", "The PDB Serialized Hash Table Format", "The Module Information Stream", "The MSF File Format", "The PDB Info Stream (aka the PDB Stream)", "The PDB Public Symbol Stream", "The PDB TPI and IPI Streams", "The PDB File Format", "Advice on Packaging LLVM", "LLVM\u2019s Analysis and Transform Passes", "Code Reviews with Phabricator", "LLVM Programmer\u2019s Manual", "Creating an LLVM Project", "Moving LLVM Projects to GitHub", "\u00ab\u00a0llvm-libc\u00a0\u00bb C Standard Library", "Test-Suite Extentions", "Variable Names Plan", "Vectorization Plan", "Reference", "LLVM 10.0.0 Release Notes", "How To Validate a New Release", "Remarks", "Reporting Guide", "Scudo Hardened Allocator", "Segmented Stacks in LLVM", "Source Level Debugging with LLVM", "}", "Sphinx Quickstart Template", "Stack maps and patch points in LLVM", "Stack Safety Analysis", "Garbage Collection Safepoints in LLVM", "Support Library", "System Library", "TableGen BackEnds", "TableGen Deficiencies", "TableGen Language Introduction", "TableGen Language Reference", "TableGen", "TableGen Fundamentals", "test-suite Guide", "test-suite Makefile Guide (deprecated)", "LLVM Testing Infrastructure Guide", "Code Transformation Metadata", "Type Metadata", "User Guides", "Auto-Vectorization in LLVM", "Writing an LLVM Backend", "Writing an LLVM Pass", "XRay Instrumentation", "Debugging with XRay", "XRay Flight Data Recorder Trace Format", "YAML I/O", "\u00c0 propos", "<span class=\"section-number\">1. </span>Building a JIT: Starting out with KaleidoscopeJIT", "<span class=\"section-number\">2. </span>Building a JIT: Adding Optimizations \u2013 An introduction to ORC Layers", "<span class=\"section-number\">3. </span>Building a JIT: Per-function Lazy Compilation", "<span class=\"section-number\">4. </span>Building a JIT: Extreme Laziness - Using Compile Callbacks to JIT from ASTs", "<span class=\"section-number\">5. </span>Building a JIT: Remote-JITing \u2013 Process Isolation and Laziness at a Distance", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope: Kaleidoscope Introduction and the Lexer", "Kaleidoscope: Implementing a Parser and AST", "Kaleidoscope: Code generation to LLVM IR", "Kaleidoscope: Adding JIT and Optimizer Support", "Kaleidoscope: Extending the Language: Control Flow", "Kaleidoscope: Extending the Language: User-defined Operators", "Kaleidoscope: Extending the Language: Mutable Variables", "Kaleidoscope: Compiling to Object Code", "Kaleidoscope: Adding Debug Information", "Kaleidoscope: Conclusion and other useful LLVM tidbits", "My First Language Frontend with LLVM Tutorial", "<span class=\"section-number\">1. </span>Kaleidoscope: Tutorial Introduction and the Lexer", "<span class=\"section-number\">2. </span>Kaleidoscope: Implementing a Parser and AST", "<span class=\"section-number\">3. </span>Kaleidoscope: Code generation to LLVM IR", "<span class=\"section-number\">4. </span>Kaleidoscope: Adding JIT and Optimizer Support", "<span class=\"section-number\">5. </span>Kaleidoscope: Extending the Language: Control Flow", "<span class=\"section-number\">6. </span>Kaleidoscope: Extending the Language: User-defined Operators", "<span class=\"section-number\">7. </span>Kaleidoscope: Extending the Language: Mutable Variables", "<span class=\"section-number\">8. </span>Kaleidoscope: Conclusion and other useful LLVM tidbits", "LLVM Tutorial: Table of Contents", "yaml2obj"], "titleterms": {"0": [447, 501, 519, 587], "000": 456, "0x0006": 565, "0x000a": 566, "0x000e": 566, "0x0014": 566, "0x1001": 566, "0x1002": 566, "0x1008": 566, "0x1009": 566, "0x1012": 565, "0x1101": 565, "0x1102": 565, "0x1103": 565, "0x1105": 565, "0x1106": 565, "0x1107": 565, "0x1108": 565, "0x110b": 565, "0x110c": 565, "0x110e": 565, "0x110f": 565, "0x1110": 565, "0x1111": 565, "0x1112": 565, "0x1113": 565, "0x1116": 565, "0x111c": 565, "0x111d": 565, "0x1124": 565, "0x1125": 565, "0x1127": 565, "0x112c": 565, "0x112d": 565, "0x1136": 565, "0x1137": 565, "0x1138": 565, "0x1139": 565, "0x113a": 565, "0x113c": 565, "0x113d": 565, "0x113e": 565, "0x113f": 565, "0x1140": 565, "0x1141": 565, "0x1142": 565, "0x1143": 565, "0x1144": 565, "0x1145": 565, "0x1146": 565, "0x1147": 565, "0x114c": 565, "0x114d": 565, "0x114e": 565, "0x114f": 565, "0x1153": 565, "0x1155": 565, "0x1156": 565, "0x115a": 565, "0x115b": 565, "0x115e": 565, "0x1167": 565, "0x1168": 565, "0x1201": 566, "0x1203": 566, "0x1205": 566, "0x1206": 566, "0x1400": 566, "0x1401": 566, "0x1402": 566, "0x1404": 566, "0x1409": 566, "0x1502": 566, "0x1503": 566, "0x1504": 566, "0x1505": 566, "0x1506": 566, "0x1507": 566, "0x1509": 566, "0x150d": 566, "0x150e": 566, "0x150f": 566, "0x1510": 566, "0x1511": 566, "0x1515": 566, "0x1519": 566, "0x151a": 566, "0x151d": 566, "0x1601": 566, "0x1602": 566, "0x1603": 566, "0x1604": 566, "0x1605": 566, "0x1606": 566, "0x1607": 566, "0xf0": 566, "1": [479, 484, 519, 552, 581, 621], "10": [456, 587], "2": [479, 484, 501, 552, 581, 583, 622, 637, 648], "2017": 583, "3": [442, 479, 552, 581, 623, 638, 649], "32": 465, "4": [552, 581, 583, 624, 639, 650], "5": [625, 640, 651], "6": [447, 641, 652], "7": [642, 653], "8": 643, "9": 644, "C": [446, 455, 459, 500, 509, 514, 521, 549, 550, 557, 576, 579, 582, 583, 587, 589, 593, 599, 611, 616], "D": [550, 611], "DS": [0, 1, 2, 3, 438, 440], "L": 550, "M": [540, 550], "N": [550, 561], "On": [538, 569, 581, 598], "S": 550, "SEE": [461, 462, 464, 465, 466, 467, 469, 470, 474, 477, 478, 480, 484, 486, 487, 488, 491, 492, 493, 497, 498], "See": 459, "T": 550, "__atomic_": 444, "__device__": 502, "__host__": 502, "__nvvm_reflect": 562, "__sync_": 444, "_global__i_": 514, "a": [439, 441, 442, 443, 448, 453, 457, 459, 467, 479, 480, 501, 502, 504, 509, 510, 512, 514, 518, 519, 521, 531, 540, 543, 550, 551, 562, 572, 577, 578, 579, 581, 582, 583, 588, 589, 590, 601, 611, 614, 615, 621, 622, 623, 624, 625, 637, 639, 642, 643, 644, 648, 650, 653, 655], "a16": 438, "aa": [443, 577], "aapc": 446, "aarch64": [503, 540, 587], "ab": 438, "abandoning": 578, "abbrevi": 447, "abbreviated": 447, "abi": [440, 457, 503, 511, 579, 582], "abid": 438, "able": 561, "about": [504, 514, 581], "absolut": [439, 501], "absolute_symbol": 549, "abstract": [447, 516, 518, 549, 583, 585, 598, 599, 637, 648], "accelerator": 593, "access": [457, 509, 549, 561, 581], "accurat": 549, "achieving": [450, 579], "acquir": 444, "acquirereleas": 444, "acronym": 584, "action": 529, "actively": 450, "adce": [443, 577], "add": [441, 519, 537, 549, 563], "addescapingus": 443, "adding": [501, 512, 516, 564, 579, 622, 639, 644, 650], "additional": [440, 464, 586, 587, 612], "addpreserved": 615, "addr": 593, "addr2lin": 467, "addr64": 438, "addrequired": 615, "addrequiredtransit": 615, "address": [440, 457, 498, 513, 519, 549, 554, 562, 611], "addressing": [457, 519, 549], "addressofreturnaddress": 549, "addrspacecast": 549, "adjust": 549, "adjusting": [642, 653], "administr": 542, "adst": [308, 309, 310, 311], "adt": 579, "advanced": [442, 506, 551, 579, 655], "advantag": [508, 584], "advertis": 558, "advic": [451, 576], "advisory": 590, "afl": 551, "after": [459, 536, 552, 581, 590], "aggregat": [516, 526, 549, 577], "aggress": 577, "ahead": 644, "aid": 579, "aka": 572, "algorithm": [457, 502, 579, 583], "ali": [443, 457, 501, 519, 549, 577, 613], "alias": [457, 501, 549, 561], "aliasanalys": 443, "aliasing": [516, 549], "aliassettrack": 443, "alignment": [446, 447, 516, 571], "all": [514, 577, 581, 643], "alloc": [457, 505, 516, 536, 549, 592, 593], "allocated": 579, "allocating": 592, "allocator": [457, 536, 591], "allowed": 501, "along": [561, 598], "also": [459, 461, 462, 464, 465, 466, 467, 469, 470, 474, 477, 478, 480, 484, 486, 487, 488, 491, 492, 493, 497, 498], "altern": [501, 540, 552], "alternat": 598, "alway": [519, 577], "always_inlin": 577, "ambiguous": 610, "amd_kernel_code_t": 440, "amdgcn": 440, "amdgcn_target": 440, "amdgpu": [436, 437, 438, 439, 440, 457, 503], "amdgpu_hsa_kernel": 440, "amdgpu_metadat": 440, "amdhsa": 440, "amdhsa_kernel": 440, "amdpal": 440, "an": [480, 491, 501, 519, 521, 523, 544, 579, 580, 581, 614, 615, 622], "analys": [443, 457, 479, 485, 519, 528, 577, 597, 604, 613, 615, 616], "analysisusag": 615, "analyz": [470, 485], "analyzing": 607, "anchor": 459, "and": [4, 437, 439, 440, 441, 443, 444, 446, 448, 451, 453, 455, 456, 457, 459, 478, 485, 486, 487, 488, 489, 493, 497, 501, 502, 503, 505, 509, 512, 514, 515, 516, 517, 518, 519, 520, 521, 525, 529, 534, 539, 540, 541, 543, 547, 549, 552, 553, 554, 560, 561, 563, 569, 571, 574, 577, 579, 581, 585, 586, 593, 596, 598, 603, 607, 609, 610, 612, 614, 615, 618, 625, 636, 637, 638, 639, 645, 647, 648, 649, 650, 654], "annot": [549, 557], "announc": 542, "anonymous": [459, 577], "anoth": [579, 582], "any": 551, "aper\u00e7u": [576, 620], "api": [457, 509, 514, 527, 529, 532, 557, 581, 586, 587, 589, 621], "apis": [563, 579], "appealing": 590, "appended": 440, "apple": 442, "appliqu": [583, 616], "approach": 552, "aql": 440, "ar": 468, "arc": 549, "arch": 440, "architectur": [440, 503, 540, 596, 598], "archiv": [468, 491, 521], "archived": 462, "are": [457, 505, 514, 549], "argpromot": [443, 577], "argument": [440, 456, 501, 505, 525, 549, 577, 579, 603], "arithmetic": [457, 519, 549], "arm": [446, 503, 513, 538, 540, 541, 587], "arm64": 513, "armneon": 601, "armneonsem": 601, "armneontest": 601, "armv6": 540, "armv7": 540, "armv7e": 540, "array": [506, 513, 519, 549, 579], "arrayref": 579, "articl": 595, "asan": 536, "ashr": 549, "asked": 514, "asm": [457, 511, 549], "asmmatch": 601, "asmwrit": 601, "asrc": [312, 313, 314, 315], "assembl": [440, 457, 469, 517, 549], "assembly": [446, 457, 513, 518, 549, 614], "assert": 459, "assign": 577, "assignment": [642, 653], "associat": 561, "associated": 549, "assum": 549, "ast": [624, 637, 640, 648, 651], "at": [577, 581, 625], "atomic": [444, 549, 577], "atomicrmw": 549, "attent": 505, "attr": [12, 110, 194, 342], "attrbuild": 545, "attrdoc": 601, "attribu": 509, "attribut": [440, 501, 502, 545, 547, 549, 555, 577, 593, 616, 617], "attributelist": 545, "audienc": 614, "author": 516, "authoring": 595, "auto": [459, 613], "automatic": [451, 461, 549], "autoreleas": 549, "autoreleasepoolpop": 549, "autoreleasepoolpush": 549, "autoreleasereturnvalu": 549, "autotooled": 535, "avail": [443, 517, 518], "avoid": [459, 516], "avoiding": 505, "awar": 543, "b": [550, 611], "back": [485, 514, 562, 601], "backend": [440, 457, 519, 587, 601, 603, 605, 614], "background": [454, 507, 511, 543, 593], "backward": 509, "baked": 598, "bang": 584, "bank": 524, "bank_mask": 438, "barri": [518, 562], "barrier0": 562, "bas": [543, 598], "based": [457, 459, 502, 514, 519, 577, 579], "basic": [447, 455, 463, 490, 510, 516, 543, 549, 555, 561, 577, 579, 581, 605, 614, 615, 616, 621, 637, 647, 648], "basica": [443, 577], "basicblock": [561, 579], "basiccg": 577, "bb": 577, "bcanalyz": 470, "be": [443, 501, 519, 543, 561], "befor": [459, 581], "begin": 505, "begincatch": 511, "behavior": 443, "behaviour": 513, "behind": 593, "benchmark": [479, 539, 583], "benchmarking": [445, 479, 583], "berkeley": 457, "best": 516, "between": [453, 502, 519, 552, 579, 615], "bewar": 459, "bi": 448, "big": [446, 584], "bigg": 504, "binar": [483, 514], "binary": [439, 487, 542, 549, 637, 641, 648, 652], "binding": 587, "binutil": 463, "bisect": 564, "bisecting": 581, "bit": [447, 501, 528, 549, 569, 579], "bitcast": 549, "bitcod": [447, 466, 470, 482, 486, 514, 552], "bitconvert": 446, "bitrevers": 549, "bitstream": [447, 589], "bitvalu": 619, "bitvector": 579, "bitwis": 549, "blam": 584, "blgp": 438, "blitz": 583, "block": [447, 448, 459, 460, 485, 549, 555, 571, 577, 579, 595, 619], "blockinfo": 447, "bod": [577, 604], "boolean": 501, "bootstrap": 442, "bot": 582, "both": [521, 565], "bottleneck": 485, "bound": 519, "bound_ctrl": 438, "boundar": 571, "bpf_ab": 457, "bpf_ind": 457, "br": 549, "braced": 459, "branch": [448, 449, 542, 577, 581, 614], "branch_weight": 549, "branching": 581, "branchinst": 449, "break": 577, "breaking": 579, "breakpoint": 615, "bridg": 581, "bswap": 549, "buff": 536, "bug": [450, 476, 483, 486, 487, 488, 494, 496, 497, 504, 517, 543, 544, 588, 598], "bugpoint": [451, 461, 577], "build": [442, 471, 510, 517, 535, 537, 538, 539, 540, 542, 548, 551, 560, 582, 612, 615], "buildbot": 537, "building": [441, 453, 455, 510, 514, 517, 521, 538, 539, 540, 541, 579, 580, 581, 615, 617, 621, 622, 623, 624, 625, 655], "buildmaster": 537, "built": [449, 456, 457, 518, 619], "builtin": [501, 540], "bundl": [457, 549], "bundled": 555, "but": [540, 551], "by": [450, 505, 514, 519, 577], "byt": 489, "c99": 513, "cach": [455, 540], "calculat": 484, "call": [443, 457, 459, 513, 514, 526, 547, 549, 577, 579, 613], "callabl": 579, "callargu": 618, "callback": [549, 624], "callbr": 549, "calle": [547, 549], "callgraph": [577, 615], "callgraphsccpass": 615, "calling": [457, 514, 547, 549, 614], "callingconv": 601, "callinst": 449, "callsit": [511, 577, 579], "caml": 655, "can": [514, 516, 519, 565], "candidat": 542, "canonical": 553, "canonicaliz": [549, 577], "cantfail": 579, "cas": [461, 509, 563, 616], "cast": [519, 579], "catch": 511, "catchpad": 549, "catchret": 549, "catchswitch": 549, "categor": [501, 565, 566], "cbsz": 438, "cc": 450, "ceil": 549, "cfg": [449, 577], "cfiindex": 555, "chain": [521, 523, 579], "chaining": 443, "chang": [509, 521, 578, 579, 581, 587, 593, 638, 649], "chapt": [621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "character": [447, 460], "check": [460, 515, 577, 579, 613], "checked": 549, "checkout": [521, 581], "choos": 510, "choosing": 643, "chrom": 617, "chunk": 591, "cl": 501, "clamp": 438, "clang": [442, 502, 517, 521, 538, 539, 540, 541, 542, 591, 601, 612], "clangattrcl": 601, "clangattrdump": 601, "clangattrimpl": 601, "clangattrlist": 601, "clangattrparsedattrimpl": 601, "clangattrparsedattrkind": 601, "clangattrparsedattrlist": 601, "clangattrparserstringswitch": 601, "clangattrpchread": 601, "clangattrpchwrit": 601, "clangattrspelling": 601, "clangattrspellinglistindex": 601, "clangattrtemplateinstantiat": 601, "clangattrvisitor": 601, "clangcommentcommandinfo": 601, "clangcommentcommandlist": 601, "clangcommenthtmlnamedcharacterreferent": 601, "clangcommenthtmltag": 601, "clangcommenthtmltagspropert": 601, "clangcommentnod": 601, "clangdeclnod": 601, "clangdiaggroup": 601, "clangdiagsdef": 601, "clangdiagsindexnam": 601, "clangsachecker": 601, "clangstmtnod": 601, "class": [443, 457, 459, 501, 502, 543, 546, 549, 579, 603, 604, 614, 615], "classof": 543, "cleanup": [511, 547], "cleanuppad": 549, "cleanupret": 549, "clear_cach": 549, "client": 443, "clobb": 549, "clobber": 560, "clobbered": 457, "clon": 581, "closed": [553, 577], "closing": [450, 638, 649], "cmak": [453, 455, 456, 540, 541], "cmath": 502, "cmp": 551, "cmpconst": 561, "cmpgep": 561, "cmpoper": 561, "cmptyp": 561, "cmpvalu": 561, "cmpxchg": 549, "cod": [440, 451, 457, 458, 459, 466, 479, 485, 498, 500, 502, 506, 507, 509, 511, 514, 518, 521, 544, 549, 554, 555, 572, 577, 578, 579, 580, 590, 593, 595, 599, 603, 610, 612, 614, 615, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "codeemitt": 601, "codegen": [444, 593], "codegenprepar": 577, "codeview": [513, 549, 565, 566, 570, 574, 575, 593], "coding": [459, 584], "coff": [487, 493, 497, 513, 656], "collect": [503, 518, 549, 586, 598], "collected": [645, 654], "collecting": 501, "collector": [518, 549], "color": 583, "columnwis": 549, "combin": [457, 577], "comdat": 549, "comm": [509, 521, 581], "command": [456, 463, 468, 473, 483, 488, 490, 501, 578, 586, 613], "commandlin": 501, "comment": [459, 603], "commenting": 459, "committe": 590, "committing": 578, "common": [521, 523, 562, 579], "commun": 552, "communaut": 620, "community": [458, 520, 542], "compar": [519, 561], "comparison": 561, "compatibility": [509, 551, 582], "compatibl": 481, "compil": [455, 459, 465, 472, 502, 503, 514, 521, 540, 541, 544, 549, 576, 607, 623, 624, 639, 644, 650], "compiler": 563, "compiling": [455, 502, 521, 541, 643], "complain": 562, "complex": [442, 502, 549, 579], "complexpattern": 527, "complicated": 551, "component": [441, 450, 457, 472, 548, 585], "composit": 529, "compr": 438, "comprehens": 587, "compressing": 549, "compressstor": 549, "comput": [440, 519, 562], "compute_pgm_rsrc1": 440, "compute_pgm_rsrc2": 440, "compute_pgm_rsrc3": 440, "computed": 519, "computing": 518, "concatenating": 579, "concept": [506, 598, 605, 615, 620], "conclus": [637, 645, 648, 654], "concret": 543, "concurrency": 444, "concurrent": 549, "condit": 549, "conditional": 577, "conduct": [458, 590], "config": 472, "configur": [442, 464, 465, 521, 537, 607], "configuring": [517, 541, 608, 643], "consid": 516, "consider": [446, 547, 579], "consistency": [450, 485], "consistent": 599, "const": [439, 513, 525, 526, 549, 555, 561, 577, 579, 593, 639, 650], "constants_block": 447, "constmerg": 577, "constprop": 577, "constrained": [441, 549], "constraining": 609, "constraint": [440, 549], "construct": [457, 508, 514, 577], "constructor": [459, 579], "consumeaft": 501, "consumer": 593, "consuming": 579, "contain": [489, 575, 579, 589], "contained": 459, "container": 579, "content": [440, 447, 593, 655], "context": 619, "contextual": 557, "continu": [459, 505], "continuously": 517, "contract": 543, "contribu": 567, "contribut": 504, "contributing": 504, "contributor": 509, "control": [454, 456, 502, 525, 640, 651], "controlling": [501, 617], "convent": [438, 439, 440, 457, 514, 547, 549, 562, 614], "convers": [439, 525, 549, 562, 583, 613, 614], "convert": [498, 549], "cop": 459, "copy": 547, "copying": 487, "copyright": 509, "copysign": 549, "copyvalu": 443, "copyweak": 549, "cor": [0, 1, 2, 530, 579, 598], "coral": 583, "coreclr": 518, "coro": 505, "corocleanup": 505, "coroearly": 505, "coroelid": 505, "corospl": 505, "coroutin": 505, "corpus": 551, "cos": 549, "cost": [511, 584], "could": 561, "count": [449, 460, 506, 549, 577, 613], "counter": 579, "cov": 473, "coverag": [473, 506, 551], "covered": 459, "cpu": 583, "crash": [451, 551], "crashing": 544, "creat": [542, 563], "creating": [579, 580, 595, 615], "creation": 554, "crit": 577, "criteri": 542, "critical": 577, "cross": [455, 487, 497, 521, 540, 541, 607], "ctag": 601, "ctlz": 549, "ctpop": 549, "cttz": 549, "cud": 502, "current": [509, 581, 582, 584], "currently": 581, "custom": [479, 501, 505, 518, 519, 527, 563, 579, 607, 608, 614, 619], "customeventmark": 618, "cv_def_rang": 513, "cv_fil": 513, "cv_filechecksum": 513, "cv_filechecksumoffset": 513, "cv_fpo_dat": 513, "cv_func_id": 513, "cv_inline_linet": 513, "cv_inline_site_id": 513, "cv_linet": 513, "cv_loc": 513, "cv_stringtabl": 513, "cxxfilt": 474, "cxxmap": 475, "cycl": 450, "d16": 438, "da": [438, 577], "dag": [448, 457, 460], "dagisel": 601, "darp": 583, "dat": [440, 447, 457, 490, 506, 508, 549, 558, 562, 577, 579, 599, 616, 618, 619], "datalayout": 457, "dbg": [577, 593], "dbi": [489, 567], "dce": 577, "dead": 577, "deadargelim": 577, "deadarghax0r": 577, "deadtypeelim": 577, "deal": 450, "dealloc": 505, "debug": [440, 462, 478, 484, 549, 564, 567, 577, 579, 593, 644], "debug_typ": 579, "debugg": [451, 549, 577, 593], "debugging": [443, 463, 507, 530, 579, 586, 593, 609, 617], "debugify": 593, "debuginfo": 577, "debugtrap": 549, "declar": [577, 593, 604], "declaring": 529, "decod": 577, "deconstruct": 457, "deduc": 577, "deduct": 459, "deep": 543, "def": [579, 604], "default": [450, 459, 619], "deficienc": [602, 605], "define_abbrev": 447, "defined": [464, 641, 642, 652, 653], "defining": [459, 614], "definit": [459, 470, 550, 585, 596, 603], "defm": 604, "defset": 604, "defvar": 604, "delayed": 591, "delet": 577, "deleted": 569, "deletevalu": 443, "deleting": 579, "demangl": [474, 517], "demo": [514, 542], "demot": 577, "denorm": 440, "densemap": 579, "denseset": 579, "deoptimiz": 549, "dependenc": 576, "dependent": [443, 508, 513, 549, 555, 577], "deprecated": [521, 607, 608], "dequ": 579, "dereference": 549, "dereferenceable_or_null": 549, "dereferenced": 519, "dereferencing": 456, "derived": [512, 579, 598], "describing": 516, "descript": [451, 457, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 552, 581], "descriptor": 440, "design": [451, 454, 457, 508, 534, 536, 547, 552, 554, 560, 563, 585, 591], "designed": 519, "designing": 579, "destroy": 505, "destroyweak": 549, "detail": [459, 508, 557, 592, 593, 613], "detailed": 470, "detect": [536, 577, 583], "detecting": 502, "determining": 501, "determinism": [442, 459], "deterministic": 459, "develop": [463, 509], "developer": 521, "developing": [455, 551], "development": [509, 520, 581, 613], "deviat": [86, 174, 271, 304, 331, 418], "devic": [502, 607], "dfapacketiz": 601, "dfmt": 438, "di": 577, "diagnos": 485, "diagnostic": [489, 589, 613], "dialect": 502, "dibasictyp": 549, "dicompileun": 549, "dicompositetyp": 549, "dictionar": 551, "did": 514, "diderivedtyp": 549, "didn": 584, "dienumerator": 549, "diexpress": 549, "diff": [476, 589], "different": [443, 453, 493, 502, 519, 608], "differentiating": 584, "difil": 549, "diflag": 549, "diglobalvari": 549, "diglobalvariableexpress": 549, "diimportedentity": 549, "dilexicalblock": 549, "dilexicalblockfil": 549, "diloc": 549, "dilocalvari": 549, "dim": 438, "dimacro": 549, "dimacrofil": 549, "dinamespac": 549, "diobjcproperty": 549, "direct": [440, 457, 460, 513, 549, 596, 613], "directly": [443, 466], "directory": [521, 571], "dis": 477, "disabl": 549, "disable_nonforced": 549, "disadvantag": [508, 584], "disassembl": [457, 477, 517, 601], "disassembly": 557, "discovery": 464, "disk": 569, "dispatch": [440, 485], "displaying": 607, "dissecting": [506, 562], "distanc": [519, 625], "distinct": 505, "distribu": [453, 542, 610, 612], "distribut": 549, "disubprogram": 549, "disubrang": 549, "disubroutinetyp": 549, "ditemplatetypeparamet": 549, "ditemplatevalueparamet": 549, "dith": 583, "dlc": 438, "dll": 549, "dmask": 438, "do": [451, 459, 514, 519, 551, 561, 577, 615], "doc": 503, "dock": 510, "dockerfil": 510, "docu": [454, 503, 516, 561, 619], "document": [440, 441, 459, 542, 620], "doesn": 551, "doesnotaccessmemory": 443, "dofinaliz": 615, "doinitializ": 615, "dom": 577, "domfronti": 577, "domin": 577, "dominator": 577, "domtre": 577, "don": [438, 459, 505, 514, 519, 599], "donothing": 549, "dot": 577, "downstream": 584, "doxygen": 459, "dpp": 438, "dpp16": [0, 438], "dpp16_ctrl": 438, "dpp8": [0, 438], "dpp8_sel": 438, "dpp_ctrl": 438, "drawback": 581, "driv": [637, 638, 648, 649], "driven": 443, "drop": 467, "ds": 443, "dse": [443, 577], "dst": [53, 138, 238, 324, 383], "dst_sel": 438, "dst_unused": 438, "dsymutil": 462, "due": 459, "dump": [478, 488, 489], "duplicat": [577, 599], "during": [593, 613], "dwarf": [440, 462, 478, 484, 593, 644], "dwarfdump": [478, 517], "dyn_cast": 579, "dynamic": [457, 549], "dynamically": [501, 615], "e_flag": 440, "each": 577, "early": 459, "ebpf": 457, "ec": 567, "ed": 507, "edge": [577, 598], "editing": 487, "ef_amdgpu_mach": 440, "effect": [516, 519], "efficiency": [443, 547], "eh": [511, 577], "eith": 565, "element": [459, 519, 549], "elf": [440, 487, 493, 497, 513], "elimin": 577, "elis": 547, "else": [456, 459, 640, 651], "elseif": 456, "email": 581, "embedded": [503, 555], "embedding": 455, "emiss": [457, 513, 644], "emit": [473, 643], "emitt": 614, "emitting": [457, 518, 589], "empty": 460, "enabl": 549, "enabling": 589, "encoded": 506, "encoding": [437, 440, 447, 457, 506], "end": [459, 465, 505, 514, 519, 544, 549, 562, 593, 601], "end_block": 447, "endcatch": 511, "endian": 446, "ending": 579, "endl": 459, "endofbuff": 618, "engin": 554, "enhanc": 598, "enough": 451, "enter_subblock": 447, "entit": 603, "entri": 596, "entry": [449, 549, 577], "enumer": [440, 459], "enumerator": 459, "environment": [440, 549, 615], "epilog": 457, "equal": 459, "equivalent": 549, "erlang": 518, "error": [459, 564, 579, 591, 593, 599, 619], "error_cod": 579, "erroror": 579, "etc": [512, 579], "eval": [443, 577], "evalu": 443, "evaluat": 459, "evaluator": 577, "event": 520, "every": 459, "evolu": 577, "exactly": 551, "exampl": [440, 446, 464, 472, 474, 479, 484, 490, 496, 498, 505, 507, 518, 521, 523, 528, 535, 536, 546, 549, 551, 552, 564, 579, 595, 605, 615], "except": [459, 511, 547, 549, 577], "exceptional": 598, "exceptionpoint": 511, "exe": 481, "exec": 439, "execu": [440, 464, 579, 609], "execut": [466, 572], "executing": [455, 562], "execz": 439, "exeges": 479, "exhaust": 577, "existing": [443, 615, 642, 653], "exit": [459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 577], "exitonerror": 579, "exp": [0, 1, 2, 3, 438, 549], "exp2": 549, "expand": 614, "expanding": 549, "expandload": 549, "expans": 593, "expect": [449, 549], "exper": 581, "experimental": [549, 596, 598], "explic": 598, "exploiting": 501, "explor": 617, "export": 473, "expos": 599, "exposed": 599, "express": [439, 506, 511, 549, 577, 603, 637, 638, 640, 648, 649, 651], "extended": [440, 457], "extending": [512, 640, 641, 642, 651, 652, 653], "extens": [501, 513, 525, 593, 615, 640, 651], "extent": 583, "external": [501, 555, 577, 587, 607, 608, 655], "externalfnconst": 577, "extra": [485, 519, 609], "extract": [480, 577], "extractel": 549, "extractvalu": 549, "extrahelp": 501, "extrem": 624, "f": [550, 561], "fab": 549, "fadd": 549, "fail": 540, "fair": [440, 455, 501, 543, 584, 638], "fallibl": 579, "faq": [514, 551], "fast": 549, "fastisel": [534, 601], "fault": 515, "faultmap": 515, "fcmp": 549, "fconst": 439, "fdiv": 549, "featur": [440, 457, 518, 551, 563, 572, 576, 582, 583, 609, 613], "fenc": 549, "ffmpeg": 583, "fi": 438, "fidelity": 617, "field": 561, "fil": [447, 457, 459, 460, 462, 464, 475, 486, 488, 489, 495, 501, 506, 521, 540, 552, 555, 567, 571, 575, 577, 589, 590, 593, 603, 609, 616], "filecheck": 460, "filenam": 549, "filing": 590, "filt": [457, 511], "filter": 511, "filtering": 489, "fin": [551, 564, 579], "final": [505, 542, 554], "find": [516, 577], "finding": [517, 578, 579], "findregress": 588, "firehos": 583, "first": [519, 549, 646], "fix": [504, 549, 561], "fixed": [447, 457, 549, 579, 593], "fixing": [450, 593], "flag": [501, 502, 549, 555, 576, 613], "flam": 617, "flat": [0, 1, 2, 3, 7, 438, 440], "flat_scratch": 439, "flexibl": 460, "flight": [616, 618], "float": 540, "floating": [439, 440, 441, 466, 513, 525, 549], "floor": 549, "flow": [454, 456, 485, 525, 619, 640, 651], "fma": 549, "fmax": 549, "fmin": 549, "fmul": 549, "fmuladd": 549, "fn": 577, "fneg": 549, "folding": [457, 614, 639, 650], "foldingset": 579, "follow": 561, "following": 519, "followup": 549, "followup_all": 549, "followup_coincident": 549, "followup_epilogu": 549, "followup_fallback": 549, "followup_inn": 549, "followup_out": 549, "followup_remaind": 549, "followup_remainder_inn": 549, "followup_remainder_out": 549, "followup_sequential": 549, "followup_vectorized": 549, "for": [440, 443, 451, 453, 457, 459, 467, 483, 503, 510, 511, 514, 516, 517, 519, 521, 529, 535, 540, 543, 549, 551, 562, 577, 579, 580, 581, 583, 593, 598, 608, 611, 640, 642, 651, 653], "forbidden": 459, "forced": 577, "foreach": 604, "forensic": 489, "fork": 551, "form": [457, 553, 577], "format": [447, 457, 459, 464, 487, 493, 506, 511, 517, 548, 555, 569, 571, 575, 593, 596, 598, 618], "formatting": [459, 501, 579, 595], "formatv": 579, "formedness": 549, "fortran": 593, "fp16": 549, "fpext": 549, "fpmath": 549, "fptos": 549, "fptou": 549, "fptrunc": 549, "fragil": 609, "fram": [457, 505, 511, 645, 654], "frameaddress": 549, "framework": 509, "fre": [505, 536, 571], "freeform": 501, "freelist": 591, "freepoom": 583, "freez": 549, "frem": 549, "frequency": 448, "frequently": [455, 514], "friendly": 551, "from": [448, 457, 466, 480, 501, 502, 509, 519, 521, 541, 549, 563, 577, 578, 579, 624], "front": [514, 519, 544, 593], "frontend": [516, 646], "fronti": 577, "fshl": 549, "fshr": 549, "fsub": 549, "ft": 456, "ftensor": 583, "full": [549, 621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "fully": 459, "funclet": [511, 549], "function": [449, 456, 457, 459, 480, 501, 505, 506, 512, 514, 526, 549, 555, 561, 562, 577, 579, 593, 599, 613, 616, 618, 623, 638, 644, 649], "function_block": 447, "function_entry_count": 549, "function_ref": 579, "functional": 457, "functionality": 599, "functionattr": 577, "functioncomparator": 561, "functionpass": 615, "fundamental": [512, 606], "furth": [485, 580, 617], "futur": [457, 534, 563, 615, 616], "fuzz": [517, 551], "fuzzer": 517, "fuzzing": [517, 551], "fx": [42, 287, 292, 297, 318], "g": 550, "g_add": 525, "g_addrspace_cast": 525, "g_and": 525, "g_anyext": 525, "g_ashr": 525, "g_atomic_cmpxchg": 525, "g_atomic_cmpxchg_with_success": 525, "g_atomicrmw_add": 525, "g_atomicrmw_and": 525, "g_atomicrmw_fadd": 525, "g_atomicrmw_fsub": 525, "g_atomicrmw_max": 525, "g_atomicrmw_min": 525, "g_atomicrmw_nand": 525, "g_atomicrmw_or": 525, "g_atomicrmw_sub": 525, "g_atomicrmw_umax": 525, "g_atomicrmw_umin": 525, "g_atomicrmw_xchg": 525, "g_atomicrmw_xor": 525, "g_bitcast": 525, "g_bitrevers": 525, "g_block_addr": 525, "g_br": 525, "g_brcond": 525, "g_brindirect": 525, "g_brjt": 525, "g_bswap": 525, "g_build_vector": 525, "g_build_vector_trunc": 525, "g_concat_vector": 525, "g_const": 525, "g_ctlz": 525, "g_ctlz_zero_undef": 525, "g_ctpop": 525, "g_cttz": 525, "g_cttz_zero_undef": 525, "g_dyn_stackalloc": 525, "g_extract": 525, "g_extract_vector_elt": 525, "g_fab": 525, "g_fadd": 525, "g_fcanonicaliz": 525, "g_fceil": 525, "g_fcmp": 525, "g_fconst": 525, "g_fcopysign": 525, "g_fcos": 525, "g_fdiv": 525, "g_fenc": 525, "g_fexp": 525, "g_fexp2": 525, "g_ffloor": 525, "g_flog": 525, "g_flog10": 525, "g_flog2": 525, "g_fma": 525, "g_fmad": 525, "g_fmaximum": 525, "g_fmaxnum": 525, "g_fmaxnum_iee": 525, "g_fminimum": 525, "g_fminnum": 525, "g_fminnum_iee": 525, "g_fmul": 525, "g_fnearbyint": 525, "g_fneg": 525, "g_fpext": 525, "g_fpow": 525, "g_fptos": 525, "g_fptou": 525, "g_fptrunc": 525, "g_frame_index": 525, "g_frem": 525, "g_frint": 525, "g_fsin": 525, "g_fsqrt": 525, "g_fsub": 525, "g_global_valu": 525, "g_icmp": 525, "g_implicit_def": 525, "g_indexed_load": 525, "g_indexed_sextload": 525, "g_indexed_stor": 525, "g_indexed_zextload": 525, "g_insert": 525, "g_insert_vector_elt": 525, "g_intrinsic": 525, "g_intrinsic_round": 525, "g_intrinsic_trunc": 525, "g_intrinsic_w_side_effect": 525, "g_inttoptr": 525, "g_jump_tabl": 525, "g_load": 525, "g_lshr": 525, "g_merge_valu": 525, "g_mul": 525, "g_or": 525, "g_phi": 525, "g_ptr_add": 525, "g_ptr_mask": 525, "g_ptrtoint": 525, "g_sadd": 525, "g_saddo": 525, "g_sdiv": 525, "g_select": 525, "g_sext": 525, "g_sext_inreg": 525, "g_sextload": 525, "g_shl": 525, "g_shuffle_vector": 525, "g_sitofp": 525, "g_smax": 525, "g_smin": 525, "g_smulh": 525, "g_smulo": 525, "g_srem": 525, "g_ssub": 525, "g_ssubo": 525, "g_stor": 525, "g_sub": 525, "g_trunc": 525, "g_uadd": 525, "g_uaddo": 525, "g_udiv": 525, "g_uitofp": 525, "g_umax": 525, "g_umin": 525, "g_umulh": 525, "g_umulo": 525, "g_unmerge_valu": 525, "g_urem": 525, "g_usub": 525, "g_usubo": 525, "g_vaarg": 525, "g_vastart": 525, "g_xor": 525, "g_zext": 525, "g_zextload": 525, "garbag": [518, 549, 586, 598, 645, 654], "gath": [549, 613], "gc": [518, 549, 598], "gcmetadataprint": 518, "gcov": 473, "gcread": [518, 549], "gcroot": 549, "gcwrit": [518, 549], "gd": 438, "gdb": [507, 615], "gen": 562, "gener": [457, 466, 511, 518, 544, 554, 555, 577, 612, 617, 638, 640, 649, 651], "general": [445, 453, 464, 466, 493, 513, 549, 558, 579, 601, 618], "generally": 457, "generat": [491, 495], "generated": [457, 514], "generating": [518, 608], "generator": [451, 457, 500, 514, 517, 544, 549, 577, 603], "generic": [468, 487, 497, 517, 524, 525, 583], "geometric": 583, "gep": [516, 519], "get": 549, "getanalys": 615, "getanalysisifavail": 615, "getanalysisusag": 615, "getelementptr": [514, 549], "getmodrefinfo": 443, "getposit": 501, "getregisteredopt": 501, "getting": [448, 520, 521, 522, 523, 551, 564, 617], "gfx10": [0, 440], "gfx6": 440, "gfx7": 1, "gfx8": 2, "gfx9": 3, "gfx900": 4, "gfx902": 4, "gfx904": 5, "gfx906": 6, "gfx908": 7, "gfx909": 4, "gfx_generation_minor": 440, "gfx_generation_numb": 440, "gfx_generation_stepping": 440, "git": [521, 581, 584], "github": 581, "given": 540, "glc": 438, "global": [440, 534, 549, 555, 561, 565, 568, 577, 593, 613], "global_ctor": [514, 549], "global_dtor": 549, "globaldc": 577, "globalisel": 531, "globalopt": 577, "globalsmodref": [443, 577], "globalvalu": 579, "globalvari": 579, "gnu": [463, 492], "gnupg": 583, "go": [459, 514, 565, 587], "goal": [518, 560], "gold": 535, "good": 551, "got": 544, "grained": 579, "grammar": 618, "granularity": 564, "graph": [508, 513, 577, 579, 583, 617], "graph500": 583, "graphic": 440, "group": [549, 615], "grouping": 501, "guarante": [645, 654], "guard": 549, "guarded": 536, "guid": [440, 444, 463, 501, 510, 548, 555, 562, 590, 607, 608, 609, 612], "guidanc": 453, "guided": [539, 551, 577, 607], "guidelin": [459, 585, 595], "gvn": [443, 577], "gwp": 536, "h": [457, 502, 550, 579], "hack": 541, "hacking": 577, "half": [549, 598], "handl": 440, "handler": 579, "handling": [456, 457, 511, 549, 577, 579, 619], "handy": 563, "happen": [514, 519, 590], "hard": [642, 644, 653], "hardened": 591, "hardwar": [503, 521, 523], "harness": 583, "hasglobalalias": 561, "hash": [569, 593], "hav": 519, "hcc": 440, "head": [440, 506, 540, 567, 572, 574, 591, 593, 618], "header": [459, 599], "heap": [505, 518, 559, 579], "hello": 615, "help": [501, 502, 514, 580], "helpful": [504, 579], "hex": 619, "hexadecimal": 513, "hexagon": 503, "hiding": 501, "hierarch": 543, "hierarchy": [543, 579], "hierchar": 579, "high": [438, 457, 459, 506, 508, 514, 549, 555, 583, 585, 599], "hint": [579, 613], "historical": 524, "history": 581, "host": [502, 521, 540, 558], "hosting": 514, "how": [441, 450, 457, 485, 504, 514, 519, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 551, 558, 561, 563, 588, 593, 595, 597, 601], "hpc": 583, "hsa": 440, "hsa_code_object_is": 440, "hsa_code_object_vers": 440, "hwreg": [40, 130, 225, 370], "hydrobench": 583, "hyphen": 501, "i": [510, 514, 516, 519, 550, 561, 619], "i32": 519, "ia": 465, "ia64": 503, "ibm": 503, "icmp": 549, "iconst": 439, "id": [440, 447, 505, 506, 549], "ide": [454, 598, 641, 652], "identif": 440, "identifi": 549, "identifying": 518, "idxen": 438, "if": [449, 456, 519, 561, 604, 613, 614, 640, 651], "ifunc": 549, "ilist": 579, "ilist_nod": 579, "ilist_trait": 579, "imag": [440, 510, 583], "imask": [226, 371], "imm16": [16, 70, 87, 113, 150, 175, 197, 253, 272, 346, 400, 419], "imm3": [52, 237, 382], "imm32": [17, 38, 39, 114, 129, 198, 223, 224, 347, 368, 369], "immediat": 555, "immutablemap": 579, "immutablepass": 615, "immutableset": 579, "impl": 577, "implement": [443, 446, 448, 457, 508, 534, 549, 552, 554, 559, 561, 563, 564, 579, 583, 592, 599, 614, 615], "implementing": [457, 518, 615, 637, 645, 648, 654, 655], "implic": [440, 515], "implicitnullcheck": 515, "import": [527, 579], "importing": 581, "in": [446, 449, 450, 455, 456, 457, 459, 467, 505, 508, 511, 514, 518, 555, 558, 561, 565, 577, 579, 581, 587, 589, 592, 593, 596, 598, 613, 615, 616, 619, 642, 653, 655], "inalloc": 547, "includ": [459, 514, 521, 599], "inclus": 603, "incorrect": 544, "increment": 549, "incremental": 509, "indent": 459, "independent": [457, 514, 645, 654], "index": [491, 519, 549, 555, 564, 620], "indexedmap": 579, "indic": [516, 519, 555, 574], "indirect": 549, "indirectbr": 549, "indirectbrinst": 449, "individual": [555, 579], "induct": [577, 613], "indvar": 577, "info": [565, 567, 572, 577, 579, 593, 603, 614], "inform": [457, 459, 473, 478, 494, 503, 504, 549, 559, 570, 577, 579, 587, 593, 609, 611, 644], "informed": 509, "infrastructur": [443, 464, 537, 609], "init": 549, "initial": [440, 457], "initializ": [443, 459, 551, 579], "initializing": 518, "initweak": 549, "inlin": [439, 457, 459, 549, 577], "inlining": 577, "input": [487, 490, 517, 549, 619], "insert": [457, 598], "insertel": 549, "inserting": 579, "insertvalu": 549, "inspect": 579, "install": 453, "installing": 541, "instanc": 603, "instcombin": [514, 577], "instcount": 577, "instnam": 577, "instrinfo": 601, "instrmapping": 546, "instrprof": 549, "instruct": [0, 1, 2, 3, 4, 5, 6, 7, 436, 437, 438, 439, 440, 444, 446, 449, 457, 479, 485, 511, 512, 514, 519, 524, 534, 546, 549, 551, 555, 557, 577, 579, 593, 614, 617], "instructionselect": 527, "instructionselector": 527, "instrument": [559, 616, 617], "instrumenting": 616, "integ": [439, 519, 525, 549], "integer": 447, "integr": [548, 577], "integral": 549, "integrated": 464, "intel": [445, 465], "intended": 547, "inteqcl": 579, "interact": [579, 615], "interchang": 610, "interfac": [443, 514, 578, 579, 599], "interleav": 549, "interleaving": 610, "internal": [440, 459, 501], "internaliz": 577, "interoperability": 579, "interprocedural": 577, "interval": [457, 577], "intervalmap": 579, "into": [459, 498, 501, 514, 519, 577, 579], "intrinsic": [440, 441, 446, 505, 511, 512, 518, 526, 549, 562, 577, 593, 596, 598, 601], "intrinsicid": 555, "introduct": [0, 1, 2, 3, 4, 5, 6, 7, 436, 440, 442, 443, 444, 445, 446, 448, 449, 450, 453, 455, 456, 457, 459, 501, 502, 505, 506, 508, 509, 510, 511, 512, 513, 517, 518, 519, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 551, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 574, 575, 577, 579, 581, 582, 584, 587, 588, 589, 591, 592, 593, 597, 601, 602, 603, 604, 605, 614, 615, 616, 618, 619, 621, 622, 623, 624, 625, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653], "inttoptr": [519, 549], "invalid": 560, "invari": [549, 577, 618], "invok": [549, 577, 579], "invoking": 502, "involved": 520, "iostream": [459, 514], "ipconstprop": 577, "ipi": 574, "iplist": 579, "ipsccp": 577, "ir": [440, 441, 444, 446, 447, 506, 509, 514, 516, 517, 518, 519, 524, 555, 577, 579, 586, 587, 638, 640, 645, 649, 651, 654], "irc": 520, "irr_loop": 549, "irtransformlai": 622, "irtranslator": 526, "is": [457, 459, 514, 518, 519, 549, 551, 581, 593, 615, 642, 644, 653], "isa": 579, "isel": 517, "isn": 451, "isol": [579, 625], "issu": [443, 459, 485, 562], "it": [514, 519, 535, 561, 572, 597, 643], "itanium": [503, 511], "item": [440, 521], "iterating": 579, "iterator": [579, 613], "iv": 577, "ival": 439, "jam": [577, 610], "jit": [457, 507, 579, 612, 614, 621, 622, 623, 624, 625, 639, 650, 655], "jitdylib": 563, "jiting": 625, "joinerror": 579, "json": 601, "jump": [457, 555, 577], "kaleidoscop": [626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655], "kaleidoscopej": 621, "keep": [459, 584], "keeping": [584, 599], "kernel": [440, 562], "key": [553, 619], "keyword": 459, "kicking": [641, 652], "kind": 584, "know": 561, "known": [528, 602], "kokkos": 583, "label": [41, 131, 227, 372, 459, 460, 549], "lai": 457, "laiss": 584, "lambd": 459, "lan": [446, 503], "landingpad": 549, "languag": [440, 459, 514, 516, 549, 587, 593, 603, 604, 636, 640, 641, 642, 645, 646, 647, 651, 652, 653, 654, 655], "larg": 516, "lat": 457, "laund": 549, "layer": 622, "layering": [459, 582], "layout": [457, 521, 549, 562, 570, 571, 575, 577, 579, 580, 593, 611], "laziness": [563, 624, 625], "lazy": [577, 579, 623], "lcssa": [553, 577], "ld": 438, "ld1": 446, "ldr": 446, "lds_direct": 439, "leaf": 566, "leak": 551, "leb128": 506, "leftov": 610, "legacy": 509, "legal": [516, 614], "legality": 529, "legaliz": [457, 529, 614], "legalizerinfo": 529, "legalizetyp": 457, "length": 513, "let": [603, 604], "level": [446, 457, 459, 501, 506, 508, 514, 524, 549, 555, 563, 577, 585, 593, 599, 604], "lex": [636, 640, 647, 651], "lexical": 604, "lexicon": 550, "lf_arglist": 566, "lf_array": 566, "lf_bclass": 566, "lf_binterfac": 566, "lf_bitfield": 566, "lf_buildinfo": 566, "lf_class": 566, "lf_endprecomp": 566, "lf_enum": 566, "lf_enumerat": 566, "lf_fieldlist": 566, "lf_func_id": 566, "lf_index": 566, "lf_interfac": 566, "lf_ivbclass": 566, "lf_label": 566, "lf_memb": 566, "lf_method": 566, "lf_methodlist": 566, "lf_mfunc_id": 566, "lf_mfunction": 566, "lf_modifi": 566, "lf_nesttyp": 566, "lf_onemethod": 566, "lf_padn": 566, "lf_point": 566, "lf_precomp": 566, "lf_procedur": 566, "lf_stmemb": 566, "lf_string_id": 566, "lf_structur": 566, "lf_substr_list": 566, "lf_typeserver2": 566, "lf_udt_mod_src_lin": 566, "lf_udt_src_lin": 566, "lf_union": 566, "lf_vbclass": 566, "lf_vftabl": 566, "lf_vfunctab": 566, "lf_vtshap": 566, "lib": [481, 521, 549], "libc": 582, "libcall": [444, 577], "libdevic": 562, "liberally": 459, "libfuzz": [551, 586], "liblto": 552, "libm": 549, "libprotobuf": 517, "librar": [459, 513, 517, 580, 583], "library": [453, 459, 481, 501, 502, 521, 549, 551, 563, 576, 579, 582, 583, 591, 599, 600, 616], "licens": [509, 514], "licensing": 535, "licm": [443, 549, 577, 610], "licm_versioning": 549, "lif": 450, "lifetim": [547, 549, 593], "lik": [459, 514, 579], "lim": 564, "limit": [443, 555, 598, 611], "lin": [440, 501, 578, 586, 613], "link": [482, 513, 521, 523, 535, 549, 552, 595], "linkag": [549, 563], "linking": 562, "linkonc": 513, "lint": 577, "linux": [445, 503], "lipo": 483, "list": [456, 459, 486, 501, 503, 520, 549, 574, 579, 587, 595, 619], "listing": [621, 622, 623, 624, 625, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 650, 651, 652, 653], "lit": 464, "literal": 439, "littl": 459, "liv": [457, 555], "livedebugvalu": 593, "ll": 495, "llc": 465, "lldb": 587, "lli": 466, "lljit": 563, "lllazyj": 563, "llrint": 549, "llround": 549, "llvm": [440, 443, 444, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 521, 523, 535, 537, 538, 539, 541, 542, 543, 544, 549, 550, 551, 552, 553, 557, 558, 562, 576, 577, 579, 580, 581, 582, 585, 586, 587, 589, 592, 593, 596, 598, 599, 601, 609, 612, 613, 614, 615, 616, 617, 620, 638, 639, 640, 642, 645, 646, 649, 650, 651, 653, 654, 655], "llvm_debug": 579, "llvm_shutdown": 579, "llvmbuild": 548, "llvmcontext": 579, "lnt": 607, "load": [457, 485, 516, 549], "loaded": 615, "loading": 554, "loadweak": 549, "loadweakretained": 549, "local": [464, 521, 549, 581, 642, 653], "localescap": 549, "localrecov": 549, "locat": [454, 484, 498, 521, 593, 644], "locating": 560, "locstat": 484, "log": [549, 561], "log10": 549, "log2": 549, "logarithmical": 561, "long": 584, "longjmp": 511, "looking": 516, "lookup": 593, "loop": [448, 456, 459, 549, 553, 577, 610, 613, 615, 640, 651], "loopinfo": 553, "looping": 603, "looppass": 615, "low": [459, 524, 577], "loweratomic": 577, "lowering": [505, 518, 519, 549, 598], "lowerinvok": 577, "lowerswitch": 577, "lppassmanag": 615, "lrint": 549, "lround": 549, "lsda": 511, "lshr": 549, "lto": [535, 549], "lto_code_gen_t": 552, "lto_module_t": 552, "lwe": 438, "m0": [439, 440], "m_op_sel": 438, "m_op_sel_h": 438, "mach": [486, 488, 493, 498, 593], "machin": [457, 479, 485, 513, 516, 524, 555, 598, 614, 643], "machine_version_major": 440, "machine_version_minor": 440, "machine_version_stepping": 440, "machinebasicblock": 457, "machinefunct": [457, 615], "machinefunctionpass": 615, "machineinstr": 457, "machineinstrbuild": 457, "machineverifi": 530, "machsuit": 583, "macos": 503, "macro": 579, "macros": [456, 619], "magic": 447, "mailing": 520, "main": 561, "mainten": 450, "major": [440, 509], "mak": [459, 514, 515], "makefil": [580, 607, 608], "making": [509, 579], "man": 581, "manag": 563, "managedstatic": 579, "managing": 581, "mangled": 475, "manipul": [505, 549], "manipulat": 462, "manipulating": 483, "manual": [501, 503, 549, 555, 579], "map": [440, 457, 515, 518, 549, 567, 571, 572, 579, 596, 598], "mapping": [440, 441, 457, 506, 546, 614, 619], "mapvector": 579, "marker": [485, 549], "marking": 562, "markup": 557, "masked": 549, "mass": 448, "matching": [457, 460, 572], "math": [502, 549], "mati": 582, "matrix": [457, 549], "mattr": 440, "maximum": 549, "maxnum": 549, "may": [443, 561], "mc": [457, 517], "mca": 485, "mccontext": 457, "mcinst": 457, "mcjit": [507, 554], "mcsection": 457, "mcstream": 457, "mcsymbol": [457, 555], "mechanical": 459, "meetup": [520, 558], "mem2reg": 577, "memb": [519, 566, 593], "member": [579, 590], "membership": 611, "memcpy": [549, 577], "memcpyopt": [443, 577], "memdep": 577, "memmov": 549, "memory": [440, 443, 485, 516, 525, 549, 577, 579, 642, 653], "memorydependenceanalys": 443, "memoryss": 560, "memset": 549, "memtagsanitiz": 559, "merg": [489, 490, 542, 551, 577, 581, 584], "mergefunc": 577, "mergefunct": 561, "mergereturn": 577, "mergetwofunct": 561, "merging": [542, 561], "messag": 509, "meta_block": 589, "metadat": [440, 449, 450, 515, 549, 562, 589, 593, 610, 611, 618], "metadata_attachment": 447, "metadata_block": 447, "method": [443, 459, 579, 599, 615], "mf": 615, "mfma": 438, "microscopic": 459, "microsoft": [455, 523], "middl": 514, "migrat": 581, "mimg": [0, 1, 2, 3, 438], "minimising": 584, "minimiz": 599, "minimizing": 510, "minimum": [529, 549], "minnum": 549, "minor": 440, "mip": [503, 587], "mir": [555, 593], "mirror": 581, "miscellaneous": [438, 489, 501, 503, 555, 580, 615], "miscompil": [451, 544], "mismatched": 514, "missed": 577, "misunderstood": 519, "mixed": 613, "mixing": 598, "mnemonic": [437, 457], "mod": [440, 446, 457, 532, 551, 577, 589, 616, 644], "model": [440, 485, 502, 549, 598], "modeling": 516, "modern": 521, "modif": [449, 540], "modifi": [436, 437, 438, 440, 468, 501, 549], "modified": 514, "modify": 514, "modul": [456, 480, 489, 549, 555, 565, 567, 570, 577, 579, 615, 622, 643], "module_block": 447, "module_code_ali": 447, "module_code_asm": 447, "module_code_datalayout": 447, "module_code_deplib": 447, "module_code_funct": 447, "module_code_gcnam": 447, "module_code_globalvar": 447, "module_code_sectionnam": 447, "module_code_tripl": 447, "module_code_vers": 447, "modulepass": 615, "monorepo": 581, "monotonic": 444, "mor": [442, 459, 551, 553, 559, 579, 616], "most": 577, "motion": 577, "motiv": [515, 596], "mov": 581, "moved": [600, 606], "moveweak": 549, "moving": 581, "mri": 468, "msf": [489, 571, 575], "msg": [46, 133, 231, 376], "mtbuf": 438, "mubuf": [0, 1, 2, 3, 7, 438, 440], "mul": 549, "mult": [442, 493, 552], "multiclass": [603, 604], "multigrid": 583, "multipl": [505, 579, 581], "multiply": 549, "multithreaded": 615, "must": [443, 501], "mutabl": [642, 653], "mutat": [642, 653], "mutator": [517, 551], "my": [514, 519, 551, 646], "nam": [440, 459, 474, 475, 549, 577, 584, 593, 614], "named": [501, 549, 572], "namespac": 459, "naming": 457, "narrat": 561, "nas": 583, "nativ": [447, 457], "natural": 577, "nearbyint": 549, "need": 519, "neg": 438, "neg_h": 438, "neg_lo": 438, "negat": 519, "neon": 446, "nested": [547, 595], "new": [443, 509, 511, 512, 531, 577, 579, 582, 588, 593, 595, 609, 615, 642, 653], "newbuff": 618, "newcpuid": 618, "newlin": 460, "next": [460, 617], "next_free_sgpr": 440, "next_free_vgpr": 440, "nfmt": 438, "nightly": 588, "nm": 486, "no": [443, 540, 561, 577, 599, 619], "noali": 549, "nod": [441, 512, 549, 577], "non": [440, 442, 459, 518, 549, 560, 577, 587, 598], "nondebug": 577, "noop": 505, "normal": 505, "normaliz": 619, "not": [440, 453, 454, 457, 459, 460, 501, 503, 514, 524, 538, 540, 551, 561, 577, 581, 587], "notat": [0, 1, 2, 3, 4, 5, 6, 7, 436, 521, 604], "notatomic": 444, "null": [439, 518, 519], "numb": [440, 447, 501, 584], "number": [439, 447, 581], "numbering": 577, "numeric": 460, "numerical": 502, "nv": 438, "nvcc": 502, "nvptx": [457, 503, 562], "nvvm": 562, "nwchem": 583, "o": [457, 486, 488, 493, 498, 550, 561, 593, 619], "objc": 549, "objcopy": 487, "objdump": 488, "object": [440, 447, 454, 486, 487, 488, 492, 493, 497, 519, 521, 549, 554, 579, 580, 589, 593, 598, 616, 643, 655], "objectsiz": 549, "obtaining": [502, 509], "ocaml": 518, "occurrent": 501, "of": [0, 1, 2, 4, 438, 439, 443, 448, 450, 453, 455, 456, 457, 458, 459, 501, 504, 506, 509, 514, 516, 517, 518, 519, 521, 526, 535, 543, 547, 549, 551, 552, 560, 562, 565, 577, 579, 580, 584, 587, 588, 590, 593, 613, 614, 615, 619, 644, 645, 654, 655], "off": [439, 508], "offen": 438, "official": [503, 542], "offset": [549, 611], "offset11": 438, "offset12": 438, "offset13": 438, "offset16": 438, "offset8": 438, "offsetof": [645, 654], "often": 519, "omod": 438, "omp2012": 583, "once": 505, "one": [514, 519, 577], "ongoing": 613, "only": [453, 488, 577, 579, 581], "onlyreadsmemory": 443, "op_sel": 438, "op_sel_h": 438, "opaqu": 549, "opcod": [436, 437, 524, 525], "open": 587, "openbenchmarking": 583, "opencl": 440, "opencv": 583, "openmp": 583, "oper": [439, 468, 516, 525, 529, 549, 579], "operand": [436, 437, 438, 439, 440, 549, 555, 596, 598, 614], "operating": 440, "operator": [439, 641, 642, 652, 653], "opt": [50, 136, 235, 323, 380, 499, 501, 517, 564, 589, 615], "optimiz": [440, 444, 457, 499, 502, 535, 539, 544, 552, 560, 564, 577, 589, 593, 607, 612, 622, 639, 645, 650, 654], "optimized": 593, "optimizer": 514, "optimizing": [453, 622], "option": [440, 453, 455, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 513, 536, 551, 579, 584, 591, 609], "optional": [521, 557, 567], "optioncategory": 501, "optparserdef": 601, "or": [459, 501, 514, 549, 581], "orc": [563, 622], "orcv1": 563, "orcv2": 563, "order": [440, 459, 549, 610, 618, 619], "ordering": [444, 446, 459, 516, 549], "org": 583, "organiz": [548, 599, 609], "os": 440, "other": [443, 449, 454, 456, 468, 489, 501, 503, 514, 516, 519, 525, 540, 549, 562, 579, 609, 645, 654], "out": [455, 519, 621], "output": [464, 470, 487, 501, 549, 551, 557, 608, 619], "outsid": 444, "outstanding": 581, "over": [459, 516, 579, 582], "overflow": [519, 536, 549], "overhead": 598, "overlap": 490, "overloading": 502, "overrid": 443, "overridden": 561, "overvew": [0, 1, 2, 3, 4, 5, 6, 7], "overview": [443, 447, 456, 459, 505, 506, 510, 511, 518, 521, 523, 546, 548, 549, 555, 562, 563, 580, 588, 595, 596, 598, 608, 609, 610], "owned": 579, "owner": 509, "p": 550, "packaging": 576, "packedvector": 579, "packet": 457, "packetiz": 457, "padding": 566, "pag": [514, 542], "pal": 440, "parallel": [551, 583], "parallel_access": 549, "param": [51, 137, 236, 381, 505], "paramattr_block": 447, "paramattr_code_entry": 447, "paramattr_code_entry_old": 447, "paramattr_group_block": 447, "paramattr_grp_code_entry": 447, "paramet": 549, "parameter": 562, "parboil": 583, "parent": 511, "parenthes": 459, "parr": 583, "pars": [457, 501, 637, 640, 648, 651], "parsec": 583, "parsecommandlineopt": 501, "parseenvironmentopt": 501, "parser": 501, "parsing": [457, 501, 637, 648], "partial": [577, 613], "partit": [513, 577], "pass": [443, 455, 505, 515, 516, 555, 561, 564, 577, 598, 610, 615, 639, 650], "passed": [540, 577], "passing": 579, "passmanag": 615, "patch": [504, 509, 521, 542, 596], "patchpoint": 596, "patent": 509, "path": 549, "patleaf": 527, "pattern": [438, 460, 577], "pcmark": 549, "pdb": [489, 567, 568, 569, 572, 573, 574, 575], "pdb2yaml": 489, "pdbutil": 489, "pe": 493, "per": 623, "perform": [485, 516, 583, 613], "personality": 549, "pgo": [442, 539], "phabricator": 578, "phas": [457, 552, 614], "phi": [549, 560], "philosophy": [451, 552, 593], "physical": 457, "pick": 558, "picking": 579, "piec": 504, "pipelin": 530, "plac": [560, 577, 580], "placesafepoint": 598, "plan": [581, 584, 585], "planned": 615, "planning": 585, "platform": [455, 487, 497, 503, 514, 582, 609, 616], "plugin": [518, 535, 615], "point": [439, 440, 441, 466, 505, 513, 518, 519, 525, 549, 579, 596, 613], "pointer": [443, 459, 529, 549, 598, 613], "pointstoconstantmemory": 443, "poison": 549, "polic": 509, "policy": 509, "polybench": 583, "polymag": 583, "polymorphic": 579, "pool": [536, 555], "portabl": [459, 514, 599, 645, 654], "porting": 531, "posit": 501, "positional": 501, "possibilit": 501, "possibl": [459, 561], "post": [549, 577, 581], "postdom": 577, "postdomfronti": 577, "postdomin": 577, "postdomtre": 577, "potential": 578, "pow": 549, "powerpc": [457, 503, 587], "practic": 516, "pragm": 613, "pre": [464, 588], "preassigned": 457, "precis": [549, 560, 577], "predecessor": 579, "predefined": 440, "predicat": [459, 527, 529, 549, 555], "preemption": 549, "pref": [459, 516], "prefetch": 549, "prefix": [460, 549], "preincr": 459, "preliminar": 614, "prepar": 554, "preprocessing": 604, "prerequisit": [502, 540, 614], "present": [561, 569], "preserv": [549, 593], "preserving": 549, "pretty": 489, "prim": 456, "primit": [447, 603], "print": [443, 472, 494, 496, 577, 614, 615], "privat": 459, "prob": 513, "probability": 448, "problem": [446, 521, 523, 551, 602, 615, 642, 644, 653], "process": [457, 520, 542, 561, 563, 585, 588, 625], "processing": [457, 529, 583], "processor": [440, 503, 583], "product": 450, "prof": 549, "profdat": 490, "profil": [490, 513, 539, 549, 551, 577, 607], "program": [440, 457, 466, 508, 580, 605], "programm": 579, "programmatic": 579, "programming": 587, "progress": 534, "project": [455, 456, 471, 509, 521, 535, 548, 580, 581, 587], "prolog": [440, 457], "prologu": 549, "promis": 505, "promot": [577, 614], "propag": 577, "propagating": 579, "properly": 459, "propert": [440, 516, 593, 645, 654], "propos": 620, "proposal": [520, 581, 593], "proto": 517, "prototyp": 577, "provid": 459, "provisional": 584, "prun": 577, "pseudo": [460, 506], "pseudolowering": 601, "ptr": [549, 562], "ptrmask": 549, "ptrtoint": [519, 549], "ptx": 562, "ptxas": 562, "public": [542, 565, 573, 579], "publiqu": 502, "putting": 643, "pwm": 583, "py": [588, 589], "q": 551, "qemu": 540, "qualif": 542, "quality": [509, 598], "query": 577, "question": [458, 514, 581], "queu": 440, "quick": [455, 501, 506, 518, 609, 615], "quickstart": [535, 595, 607], "r": 550, "r128": 438, "raj": 583, "random": [495, 517, 561], "randomness": 591, "rang": [459, 506, 549, 579], "ranlib": 491, "rarely": 455, "rational": [519, 549], "raw": 598, "raw_ostream": 459, "rawspeed": 583, "read": [492, 493, 518, 552, 562, 581, 584], "read_regist": 549, "readabl": 459, "readcyclecount": 549, "readelf": [492, 493], "reading": [518, 562, 614], "readobj": 493, "reassociat": 577, "record": [440, 447, 489, 506, 565, 566, 574, 616, 618], "recording": 598, "recover": 579, "redistribut": 514, "redistributing": 514, "reduc": [549, 577], "reducing": [453, 584], "reduct": [461, 549, 577, 613], "redund": 577, "ref": [549, 577], "referent": [501, 508, 518, 524, 534, 548, 549, 555, 577, 579, 581, 583, 584, 585, 586, 598, 604], "reflect": 562, "reg2mem": 577, "regbankselect": 532, "regex": 460, "region": [506, 577, 598, 615], "regionpass": 615, "regist": [440, 457, 516, 524, 555, 577, 593, 614], "register": [440, 457, 514, 524, 555, 562], "registeranalysisgroup": 615, "registerbankinfo": 532, "registerinfo": 601, "registering": 615, "registr": [614, 615], "regress": [542, 593, 609], "reject": 514, "relat": [549, 614], "related": 585, "relationship": [563, 579], "releas": [444, 542, 549, 587, 588], "releasememory": 615, "relev": [453, 503], "reliabl": 457, "relicensing": 509, "reloc": [440, 513, 598], "relocat": [439, 598], "relocating": 598, "remapping": [475, 554], "remark": 589, "remark_block": 589, "remot": 625, "remov": 577, "removeuser": 561, "replac": [463, 467, 534, 577], "replacedirectcaller": 561, "replacewithnewvalu": 443, "replacing": 579, "report": [450, 473, 504, 544, 577, 590], "reporting": [450, 542, 588, 590], "repositor": 581, "repository": 581, "represent": [443, 505, 506, 514, 549, 598], "represented": 457, "representing": [457, 611], "request": 542, "requesting": 578, "requir": [509, 518, 521, 523, 609, 615], "required": [443, 457, 501, 519, 580, 615], "requiring": 505, "resampling": 583, "resolu": 552, "resolving": 450, "resourc": [503, 533], "respons": [443, 501, 577], "rest": [637, 648], "restrict": 511, "restricted": 516, "result": [443, 464, 598, 607], "resum": [505, 549], "resuming": 551, "ret": 549, "retain": 549, "retainautoreleas": 549, "retainautoreleasedreturnvalu": 549, "retainautoreleasereturnvalu": 549, "retainblock": 549, "retcon": 505, "retir": 485, "return": 459, "returnaddress": 549, "returned": 505, "returning": 579, "revers": 613, "reverting": 521, "review": [509, 578], "reviewer": 578, "reviewing": 578, "revis": 581, "rewritestatepointsforgc": 598, "rgpassmanag": 615, "rich": 557, "right": 579, "rint": 549, "risc": [503, 587], "roadmap": 585, "rodini": 583, "root": 518, "rotat": 577, "round": 549, "rounding": 440, "routin": 579, "row_mask": 438, "rt": 540, "rtti": [459, 543], "rul": [519, 527, 529, 542, 543, 549], "run": 464, "running": [517, 541, 551, 562, 605, 607, 608, 615], "runonfunct": 615, "runonloop": 615, "runonmachinefunct": 615, "runonmodul": [561, 615], "runonregion": 615, "runonscc": 615, "runtim": [511, 549, 613, 616], "s_block32": 565, "s_bprel32": 565, "s_buildinfo": 565, "s_calle": 565, "s_caller": 565, "s_callsiteinfo": 565, "s_coffgroup": 565, "s_compile2": 565, "s_compile3": 565, "s_const": 565, "s_defrang": 565, "s_defrange_framepointer_rel": 565, "s_defrange_framepointer_rel_full_scop": 565, "s_defrange_regist": 565, "s_defrange_register_rel": 565, "s_defrange_subfield": 565, "s_defrange_subfield_regist": 565, "s_end": 565, "s_envblock": 565, "s_export": 565, "s_fastlink": 565, "s_filestatic": 565, "s_framecook": 565, "s_frameproc": 565, "s_gdata32": 565, "s_gmandat": 565, "s_gproc32": 565, "s_gproc32_id": 565, "s_gthread32": 565, "s_heapallocsit": 565, "s_inline": 565, "s_inlinesit": 565, "s_inlinesite_end": 565, "s_label32": 565, "s_ldata32": 565, "s_lmandat": 565, "s_local": 565, "s_lproc32": 565, "s_lproc32_dpc": 565, "s_lproc32_dpc_id": 565, "s_lproc32_id": 565, "s_lprocref": 565, "s_lthread32": 565, "s_manconst": 565, "s_objnam": 565, "s_proc_id_end": 565, "s_procref": 565, "s_pub32": 565, "s_regist": 565, "s_regrel32": 565, "s_section": 565, "s_thunk32": 565, "s_trampolin": 565, "s_udt": 565, "s_unamespac": 565, "sadd": 549, "saddr": [56, 57, 326, 386, 387], "saf": [518, 579], "safepoint": 598, "safety": [577, 597, 645, 654], "sam": [460, 579], "sampl": [506, 546], "sampler": 440, "sat": 549, "satur": 549, "sav": 505, "sbas": [13, 14, 15, 111, 112, 195, 196, 343, 344, 345], "scal": 448, "scalar": [525, 529, 577, 619], "scalarenumerationtrait": 619, "scalarevolu": 577, "scatt": [549, 613], "scc": [439, 577], "sccp": 577, "scev": [443, 577], "scheduling": [457, 593, 614], "scop": [440, 456, 549, 603], "scoping": 593, "scratch": 440, "script": [468, 539, 588], "scripting": 456, "scrubbing": 581, "scudo": 591, "sdat": [25, 26, 27, 59, 60, 61, 242, 243, 244, 355, 356, 357, 389, 390, 391], "sdiv": 549, "sdnod": 527, "sdst": [62, 63, 64, 65, 66, 67, 68, 69, 104, 142, 143, 144, 145, 146, 147, 148, 149, 245, 246, 247, 248, 249, 250, 251, 252, 392, 393, 394, 395, 396, 397, 398, 399], "sdwa": [0, 438], "search": [561, 583], "searchablet": 601, "section": [440, 513, 515, 567, 595, 596, 618], "segmented": [457, 592], "seh": 511, "select": [451, 457, 464, 534, 549, 593], "selecting": [501, 539], "selectiondag": [441, 457, 512, 527, 614], "selector": [441, 614], "self": [459, 514], "semantic": [505, 516, 549, 562, 596, 598, 599], "sending": 521, "sentinel": 579, "sequenc": [440, 619], "sequential": 579, "sequentiallyconsistent": 444, "ser": 448, "serializ": 589, "serialized": [569, 589], "serv": 567, "set": [440, 443, 501, 529, 543, 563, 577, 579, 614], "setjmp": 511, "setting": [450, 615], "setup": [543, 638, 644, 649], "setvector": 579, "setversionprint": 501, "sext": [438, 516, 549], "sgpr": 440, "sgpr_count": 440, "sh": 588, "shad": 440, "shadow": 518, "shared": 576, "shl": 549, "should": [510, 514, 561], "show": [473, 490, 514], "sht_llvm_addrsig": 513, "sht_llvm_call_graph_profil": 513, "sht_llvm_dependent_librar": 513, "sht_llvm_sympart": 513, "shufflevector": 549, "sibling": 457, "sideeffect": 549, "sign": 578, "signal": 440, "signed": 447, "signific": 513, "simd": 583, "simm21": 439, "simpl": [549, 562, 577, 579], "simplif": 598, "simplify": [459, 553, 577, 579], "simplifycfg": [514, 577], "simplifying": 555, "sin": 549, "singl": [440, 549, 577, 581], "sink": 577, "sinking": 577, "sit": 579, "sitofp": 549, "siz": [437, 439, 453, 457, 494, 505, 510, 579], "sized": 592, "sizeof": [645, 654], "sjlj": 511, "skipping": 564, "slambench": 583, "slc": 438, "slightly": 579, "slot": 577, "slp": 613, "small": 551, "smallbitvector": 579, "smallptrset": 579, "smallset": 579, "smallstring": 579, "smallvector": 579, "smax": 549, "smem": [0, 2, 3, 438, 440], "smin": 549, "smrd": [1, 438, 440], "smul": 549, "snippet": 479, "so": 551, "social": [520, 558], "soffset": [47, 48, 49, 134, 135, 232, 233, 234, 322, 377, 378, 379], "soft": [540, 599], "softwar": [521, 523], "solut": [551, 561], "someon": 578, "sommair": 543, "sop1": [0, 1, 2, 3, 440], "sop2": [0, 1, 2, 3, 440], "sopc": [0, 1, 2, 3, 440], "sopk": [0, 1, 2, 3], "sopp": [0, 1, 2, 3, 440], "sorted": 579, "sorting": [459, 489], "sourc": [440, 455, 459, 498, 506, 514, 521, 549, 580, 587, 593, 644], "spac": [440, 457, 459, 519, 562], "spanning": 583, "sparc": 503, "spars": 577, "sparsebitvector": 579, "sparsemultiset": 579, "sparseset": 579, "spec": 583, "special": [453, 562, 593, 616], "specialised": 549, "specialized": 549, "specif": [513, 599], "specifi": 549, "specific": [455, 457, 465, 468, 485, 486, 487, 493, 497, 498, 513, 516, 525, 593, 609, 610, 645, 654], "specified": [443, 501], "specify": 516, "specifying": [501, 518, 615], "sphinx": 595, "sponentry": 549, "sqrt": 549, "src": [71, 72, 73, 74, 75, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 254, 255, 256, 257, 258, 259, 289, 290, 294, 295, 301, 302, 303, 327, 328, 329, 330, 401, 402, 403, 404, 405, 406], "src0_sel": 438, "src1_sel": 438, "sreg": 562, "srem": 549, "sro": 577, "srsrc": [54, 55, 139, 140, 239, 240, 325, 384, 385], "ssa": [457, 514, 553, 577], "ssa_copy": 549, "ssamp": [58, 141, 241, 388], "ssca": 583, "ssrc": [77, 78, 79, 80, 81, 82, 83, 84, 105, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 261, 262, 263, 264, 265, 266, 267, 268, 269, 408, 409, 410, 411, 412, 413, 414, 415, 416], "ssub": 549, "stabl": 510, "stack": [457, 513, 518, 549, 559, 577, 592, 596, 597, 598, 617, 645, 654], "stackguard": 549, "stacklet": 592, "stackmap": [596, 598], "stackprotector": 549, "stackrestor": 549, "stacksav": 549, "stag": [442, 485, 540], "standard": [447, 459, 502, 505, 521, 549, 579, 582, 583, 584, 593, 599], "start": [455, 457, 501, 506, 518, 549, 558, 609, 615], "started": [521, 522, 523, 551, 564], "starting": 621, "startup": 551, "stashing": 581, "stat": [440, 449, 561, 579, 589], "stateless": 577, "statepoint": [518, 549, 598], "static": [459, 465], "statically": 577, "statistic": [484, 485, 579, 615], "status": [460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 581, 582], "statut": [578, 598], "stay": 509, "std": [459, 502, 579], "stderr": 577, "steen": 443, "step": [537, 549, 581, 614, 617], "stepping": 440, "still": 516, "stor": [457, 485, 514, 516, 549, 577], "storag": [501, 549, 579], "storestrong": 549, "storeweak": 549, "strateg": 518, "strategy": 549, "straw": 581, "stream": [489, 565, 567, 568, 570, 571, 572, 573, 574, 575], "strength": 577, "stress": 495, "string": [460, 496, 506, 549, 563, 579, 589], "stringerror": 579, "stringmap": 579, "stringref": 579, "stringset": 579, "strip": [497, 549, 577], "stripping": 497, "strtab_block": 447, "struct": [459, 519, 549], "structur": [505, 509, 549, 555, 560, 561, 579, 607, 609, 610, 613], "structural": 476, "structured": 517, "studio": 523, "stuff": 514, "styl": [443, 459, 492, 513, 543, 549, 580], "sub": [506, 549, 581], "subcl": 579, "subclass": 614, "subcommand": 489, "subdirector": 580, "subm": [504, 544], "submitting": 509, "subregist": 555, "subsect": 595, "substitu": [460, 464, 609], "substream": [567, 570], "subtarget": [601, 614], "successor": [555, 579], "suffic": 437, "suggest": 558, "suit": [464, 521, 583, 588, 607, 608, 609], "summary": [446, 470, 489, 519, 549], "superblock": 571, "supplied": 551, "support": [457, 502, 511, 514, 536, 551, 582, 598, 599, 604, 614, 639, 650], "supported": [449, 457, 487, 514, 549, 596, 598], "supporting": 563, "suspend": 505, "svn": [509, 521, 581], "switch": [449, 459, 549], "switched": 505, "switchinst": [449, 577], "swizzl": 438, "symbol": [439, 440, 462, 474, 486, 489, 513, 552, 555, 563, 565, 568, 570, 573, 577], "symboliz": 498, "sync": 440, "synops": [460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "syntax": [0, 1, 2, 3, 4, 5, 6, 7, 437, 438, 439, 460, 505, 513, 549, 562, 596, 598, 603, 604, 605, 637, 648, 656], "system": [440, 521, 523, 549, 599, 600, 603], "systemz": [503, 587], "tabl": [440, 457, 486, 511, 513, 555, 569, 582, 589, 593, 611, 655], "tableau": 620, "tablegen": [457, 601, 602, 603, 604, 605, 606], "tag": [506, 542, 593, 619], "tagging": [542, 559, 579], "tail": [457, 577], "tailcallelim": 577, "talk": 558, "target": [440, 457, 466, 500, 509, 511, 513, 519, 526, 531, 540, 549, 551, 555, 562, 577, 587, 614, 643, 645, 654], "targetdat": 577, "targetframelowering": 457, "targetinstrinfo": [457, 614], "targetjitinfo": 457, "targetlowering": 457, "targetmachin": 457, "targetregisterinfo": [457, 614], "targetsubtarget": 457, "task": [542, 579], "tba": [439, 549], "tblgen": 500, "tech": 558, "tel": 519, "templat": [549, 579, 595, 603], "terminator": 549, "terminology": [448, 521, 553], "test": [441, 455, 461, 464, 509, 521, 540, 549, 583, 588, 593, 607, 608, 609], "testing": [530, 540, 542, 551, 555, 586, 593, 597, 609, 611], "text": [440, 501, 595], "tfe": 438, "tgt": [85, 173, 270, 417], "than": 519, "that": [502, 514, 519], "the": [441, 443, 455, 457, 459, 460, 501, 506, 511, 514, 515, 516, 518, 519, 521, 523, 535, 539, 540, 542, 543, 547, 549, 550, 551, 558, 560, 562, 563, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 583, 584, 585, 587, 588, 589, 590, 593, 598, 603, 605, 607, 608, 613, 614, 615, 617, 622, 636, 637, 640, 641, 642, 643, 645, 647, 648, 651, 652, 653, 654], "then": [640, 651], "ther": 514, "thing": [514, 516], "thinlto": 549, "this": [514, 516, 519, 551, 561, 581, 587, 595, 642, 644, 653], "thought": [638, 649], "thread": [440, 549, 579], "threading": 577, "threadsafecontext": 563, "threadsafemodul": 563, "threshold": 617, "through": 459, "throw": [511, 599], "thumb": 543, "tidbit": [645, 654], "tim": [459, 535, 544, 552, 560, 644], "timelin": [485, 542], "tinyptrvector": 579, "tip": [445, 516, 645, 654], "tir": [641, 652], "tma": 439, "to": [441, 443, 448, 451, 457, 459, 485, 493, 500, 501, 504, 510, 514, 516, 517, 518, 519, 521, 531, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 549, 558, 561, 562, 563, 564, 572, 577, 579, 581, 587, 588, 589, 595, 601, 619, 622, 624, 638, 643, 649], "togeth": 643, "token": [511, 549], "too": 584, "tool": [451, 454, 461, 463, 475, 481, 483, 487, 490, 497, 514, 517, 521, 523, 579, 616, 617], "toolchain": [509, 521], "top": [501, 563, 604], "topic": [455, 579, 586, 612, 655], "tos": 563, "town": 558, "toy": 551, "tpi": 574, "trac": [616, 617, 618], "tracing": 551, "trad": 508, "tradeoff": 560, "trampolin": 549, "transfering": 509, "transform": [443, 505, 577, 610], "transformed": 593, "transit": [511, 549, 584, 598], "transitioning": 563, "translat": 526, "translating": 526, "transpos": 549, "trap": [439, 440, 549], "traversal": 579, "tre": [577, 580, 583, 637, 648], "treat": 459, "treating": 579, "triaging": 450, "trick": [645, 654], "trip": 613, "tripl": [440, 457, 549, 562], "trivial": [639, 650], "troph": 551, "troubleshooting": 540, "trunc": 549, "truncat": 525, "try": [511, 540], "tscwrap": 618, "ttmp": 439, "tuning": 465, "turn": [459, 514], "turning": 579, "tutorial": [460, 522, 531, 562, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 645, 646, 647, 654, 655], "tvm": 583, "twin": 579, "two": [457, 519], "typ": [86, 174, 271, 304, 331, 418, 437, 439, 440, 441, 456, 459, 489, 506, 512, 516, 519, 524, 525, 549, 566, 567, 574, 577, 579, 591, 603, 604, 611, 613, 614, 619], "type_block": 447, "type_code_array": 447, "type_code_doubl": 447, "type_code_float": 447, "type_code_fp128": 447, "type_code_funct": 447, "type_code_function_old": 447, "type_code_half": 447, "type_code_integ": 447, "type_code_label": 447, "type_code_metadat": 447, "type_code_numentry": 447, "type_code_opaqu": 447, "type_code_point": 447, "type_code_ppc_fp128": 447, "type_code_struct_anon": 447, "type_code_struct_nam": 447, "type_code_struct_named": 447, "type_code_vector": 447, "type_code_void": 447, "type_code_x86_fp80": 447, "type_code_x86_mmx": 447, "typecheckedloadconstvcall": 549, "typecheckedloadvcall": 549, "typeid": 511, "typeidinfo": 549, "typetest": 549, "typetestassumeconstvcall": 549, "typetestassumevcall": 549, "uadd": 549, "udiv": 549, "uglygep": 519, "uimm20": 439, "uimm21": 439, "uimm32": 439, "uimm8": 439, "uitofp": 549, "umax": 549, "umin": 549, "umul": 549, "unabbrev_record": 447, "unary": [439, 549, 641, 652], "undef": 514, "undefined": [549, 562], "underflow": 536, "underlying": 519, "understand": 514, "unify": 577, "union": 549, "uniqu": 619, "uniquevector": 579, "unit": [457, 485, 609, 644], "universal": 483, "unknown": 613, "unnecessary": 459, "unordered": [444, 549], "unorm": 438, "unpacking": 521, "unpredict": 549, "unreach": [514, 549], "unroll": [549, 577, 610], "unroll_and_jam": 549, "unrolling": [610, 613], "unspecified": 440, "unswitch": 577, "unused": [577, 599], "unwindless": 577, "up": [440, 514, 543, 563, 578, 615], "updat": [441, 542, 581], "updating": [443, 509, 560, 581], "urem": 549, "usabl": 584, "usag": [451, 455, 490, 510, 528, 535, 536, 547, 551, 559, 564, 591, 596, 613], "use": [459, 514, 516, 519, 536, 540, 545, 546, 549, 551, 560, 563, 577, 579, 595, 599], "used": [455, 457, 549, 577], "useful": [443, 456, 579, 645, 654], "user": [440, 465, 551, 562, 577, 579, 612, 619, 641, 642, 652, 653], "using": [443, 446, 451, 457, 459, 485, 502, 511, 514, 517, 518, 521, 523, 535, 539, 540, 541, 564, 579, 587, 593, 611, 615, 616, 622, 624], "usub": 549, "util": 521, "utilit": [517, 563, 586], "utility": [471, 577, 593, 598, 619], "v": [439, 456, 501, 502, 503, 536, 574, 587], "v2": [440, 549], "v3": 440, "v_mad_mix": 438, "va_arg": 549, "va_copy": 549, "va_end": 549, "va_start": 549, "vaddr": [8, 9, 10, 11, 88, 89, 106, 107, 108, 109, 190, 191, 192, 193, 307, 332, 338, 339, 340, 341, 420, 421], "valid": 619, "validat": 588, "valu": [439, 440, 501, 514, 519, 549, 551, 555, 561, 564, 577, 579, 593, 603, 604, 619], "value_symtab_block": 447, "valuemap": 579, "valuesymbolt": 579, "var": 549, "vari": 581, "variabl": [447, 455, 456, 457, 459, 460, 513, 549, 577, 580, 584, 592, 593, 613, 642, 644, 653], "variadic": 525, "various": 577, "vasrc": [333, 334], "vbr": 447, "vcall_visibility": 611, "vcc": [90, 176, 273, 422, 439], "vccz": 439, "vdat": [18, 19, 20, 21, 22, 23, 24, 91, 92, 93, 94, 115, 116, 117, 118, 119, 120, 177, 178, 179, 180, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 274, 275, 276, 277, 316, 335, 348, 349, 350, 351, 352, 353, 354, 423, 424, 425, 426], "vdst": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 95, 96, 97, 98, 121, 122, 123, 124, 125, 126, 127, 128, 181, 182, 183, 184, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 278, 279, 280, 281, 291, 296, 305, 317, 336, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 427, 428, 429, 430], "vecmathlib": 583, "vector": [519, 525, 529, 549, 569, 579], "vectoriz": [549, 577, 585, 610, 613], "vendor": 440, "verif": [454, 598], "verifi": [460, 514, 577], "verify": [478, 577], "vers": 579, "version": [459, 507, 542, 551], "versioning": 610, "vgpr": 440, "vgpr_count": 440, "vi": [521, 578, 607], "vic": 579, "view": [456, 485, 577, 589, 617], "viewing": 579, "vintrp": [0, 1, 2, 3, 438], "virtual": [457, 459, 514, 524, 599, 611], "visibility": 549, "visual": [455, 523], "visualiz": 617, "vla": 519, "vliw": 457, "vm": 438, "void": [549, 561], "volatil": 549, "vop1": [0, 1, 2, 3], "vop2": [0, 1, 2, 3, 6, 7], "vop3": [0, 1, 2, 3, 6, 7, 438], "vop3p": [0, 3, 4, 5, 6, 7, 438], "vopc": [0, 1, 2, 3], "vp": 549, "vplan": 585, "vsrc": [76, 99, 100, 101, 102, 161, 185, 186, 187, 188, 260, 282, 283, 284, 285, 306, 337, 407, 431, 432, 433, 434], "waitcnt": [103, 189, 286, 435], "walk": 560, "wallclocktim": 618, "warning": [459, 512, 577], "way": [504, 519, 579], "waymarking": 579, "we": [450, 561], "web": 578, "webassembly": 587, "websit": 542, "weight": [448, 449], "weighted": 490, "wel": 549, "what": [451, 514, 516, 518, 519, 551, 561, 581, 590, 615], "when": [451, 459, 514, 516, 551], "wher": [514, 558], "wherev": 459, "wheth": 501, "which": [443, 510, 519, 565], "whil": 579, "whitespac": 459, "why": [510, 514, 519, 551, 581, 582, 642, 644, 653], "wid": 520, "widen": 549, "widening": 549, "width": [447, 459, 516, 549], "window": [503, 511, 513, 551, 587], "wis": 549, "with": [450, 455, 459, 501, 502, 507, 514, 518, 519, 521, 523, 535, 539, 549, 561, 562, 577, 578, 579, 581, 589, 593, 613, 615, 617, 621, 646, 655], "without": 514, "word": 447, "work": [440, 485, 504, 519, 534, 551, 561, 597, 616], "workflow": [581, 585], "working": [450, 593], "world": 615, "wrapp": 447, "wrapper": 456, "writ": [459, 485, 514, 518, 581, 601], "write_regist": 549, "writer": 503, "writing": [443, 457, 501, 517, 518, 519, 580, 608, 609, 614, 615], "written": 514, "x": [519, 583], "x86": [457, 503, 513, 587], "x86_64": 541, "x86_mmx": 549, "x86evex2vex": 601, "xcor": 503, "xnack": 439, "xor": 549, "xray": [586, 616, 617, 618], "yaml": [589, 619], "yaml2obj": 656, "yaml2pdb": 489, "you": 590, "your": [455, 537, 543, 558, 579, 615, 616], "yourself": 560, "zero": 511, "zext": [516, 549], "zig": 587, "zipping": 581, "\u00c0": [440, 455, 501, 543, 620, 638]}})