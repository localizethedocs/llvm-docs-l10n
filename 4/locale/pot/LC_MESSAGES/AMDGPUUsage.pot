# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../AMDGPUUsage.rst:3
msgid "User Guide for AMDGPU Back-end"
msgstr ""

#: ../../../AMDGPUUsage.rst:6
msgid "Introduction"
msgstr ""

#: ../../../AMDGPUUsage.rst:8
msgid ""
"The AMDGPU back-end provides ISA code generation for AMD GPUs, starting with "
"the R600 family up until the current Volcanic Islands (GCN Gen 3)."
msgstr ""

#: ../../../AMDGPUUsage.rst:11
msgid ""
"Refer to `AMDGPU section in Architecture & Platform Information for Compiler "
"Writers <CompilerWriterInfo.html#amdgpu>`_ for additional documentation."
msgstr ""

#: ../../../AMDGPUUsage.rst:15
msgid "Conventions"
msgstr ""

#: ../../../AMDGPUUsage.rst:18
msgid "Address Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:20
msgid "The AMDGPU back-end uses the following address space mapping:"
msgstr ""

#: ../../../AMDGPUUsage.rst:23
msgid "Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:23
msgid "Memory Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:25
msgid "0"
msgstr ""

#: ../../../AMDGPUUsage.rst:25
msgid "Private"
msgstr ""

#: ../../../AMDGPUUsage.rst:26
msgid "1"
msgstr ""

#: ../../../AMDGPUUsage.rst:26
msgid "Global"
msgstr ""

#: ../../../AMDGPUUsage.rst:27
msgid "2"
msgstr ""

#: ../../../AMDGPUUsage.rst:27
msgid "Constant"
msgstr ""

#: ../../../AMDGPUUsage.rst:28
msgid "3"
msgstr ""

#: ../../../AMDGPUUsage.rst:28
msgid "Local"
msgstr ""

#: ../../../AMDGPUUsage.rst:29
msgid "4"
msgstr ""

#: ../../../AMDGPUUsage.rst:29
msgid "Generic (Flat)"
msgstr ""

#: ../../../AMDGPUUsage.rst:30
msgid "5"
msgstr ""

#: ../../../AMDGPUUsage.rst:30
msgid "Region"
msgstr ""

#: ../../../AMDGPUUsage.rst:33
msgid ""
"The terminology in the table, aside from the region memory space, is from "
"the OpenCL standard."
msgstr ""

#: ../../../AMDGPUUsage.rst:38
msgid "Assembler"
msgstr ""

#: ../../../AMDGPUUsage.rst:40
msgid ""
"AMDGPU backend has LLVM-MC based assembler which is currently in "
"development. It supports Southern Islands ISA, Sea Islands and Volcanic "
"Islands."
msgstr ""

#: ../../../AMDGPUUsage.rst:43
msgid ""
"This document describes general syntax for instructions and operands. For "
"more information about instructions, their semantics and supported "
"combinations of operands, refer to one of Instruction Set Architecture "
"manuals."
msgstr ""

#: ../../../AMDGPUUsage.rst:47
msgid ""
"An instruction has the following syntax (register operands are normally "
"comma-separated while extra operands are space-separated):"
msgstr ""

#: ../../../AMDGPUUsage.rst:50
msgid "*<opcode> <register_operand0>, ... <extra_operand0> ...*"
msgstr ""

#: ../../../AMDGPUUsage.rst:54
msgid "Operands"
msgstr ""

#: ../../../AMDGPUUsage.rst:56
msgid "The following syntax for register operands is supported:"
msgstr ""

#: ../../../AMDGPUUsage.rst:58
msgid "SGPR registers: s0, ... or s[0], ..."
msgstr ""

#: ../../../AMDGPUUsage.rst:59
msgid "VGPR registers: v0, ... or v[0], ..."
msgstr ""

#: ../../../AMDGPUUsage.rst:60
msgid "TTMP registers: ttmp0, ... or ttmp[0], ..."
msgstr ""

#: ../../../AMDGPUUsage.rst:61
msgid ""
"Special registers: exec (exec_lo, exec_hi), vcc (vcc_lo, vcc_hi), "
"flat_scratch (flat_scratch_lo, flat_scratch_hi)"
msgstr ""

#: ../../../AMDGPUUsage.rst:62
msgid "Special trap registers: tba (tba_lo, tba_hi), tma (tma_lo, tma_hi)"
msgstr ""

#: ../../../AMDGPUUsage.rst:63
msgid ""
"Register pairs, quads, etc: s[2:3], v[10:11], ttmp[5:6], s[4:7], v[12:15], "
"ttmp[4:7], s[8:15], ..."
msgstr ""

#: ../../../AMDGPUUsage.rst:64
msgid "Register lists: [s0, s1], [ttmp0, ttmp1, ttmp2, ttmp3]"
msgstr ""

#: ../../../AMDGPUUsage.rst:65
msgid "Register index expressions: v[2*2], s[1-1:2-1]"
msgstr ""

#: ../../../AMDGPUUsage.rst:66
msgid "'off' indicates that an operand is not enabled"
msgstr ""

#: ../../../AMDGPUUsage.rst:68
msgid "The following extra operands are supported:"
msgstr ""

#: ../../../AMDGPUUsage.rst:70
msgid "offset, offset0, offset1"
msgstr ""

#: ../../../AMDGPUUsage.rst:71
msgid "idxen, offen bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:72
msgid "glc, slc, tfe bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:73
msgid "waitcnt: integer or combination of counter values"
msgstr ""

#: ../../../AMDGPUUsage.rst:74
msgid "VOP3 modifiers:"
msgstr ""

#: ../../../AMDGPUUsage.rst:76
msgid "abs (\\| \\|), neg (\\-)"
msgstr ""

#: ../../../AMDGPUUsage.rst:78
msgid "DPP modifiers:"
msgstr ""

#: ../../../AMDGPUUsage.rst:80
msgid "row_shl, row_shr, row_ror, row_rol"
msgstr ""

#: ../../../AMDGPUUsage.rst:81
msgid "row_mirror, row_half_mirror, row_bcast"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "wave_shl, wave_shr, wave_ror, wave_rol, quad_perm"
msgstr ""

#: ../../../AMDGPUUsage.rst:83
msgid "row_mask, bank_mask, bound_ctrl"
msgstr ""

#: ../../../AMDGPUUsage.rst:85
msgid "SDWA modifiers:"
msgstr ""

#: ../../../AMDGPUUsage.rst:87
msgid "dst_sel, src0_sel, src1_sel (BYTE_N, WORD_M, DWORD)"
msgstr ""

#: ../../../AMDGPUUsage.rst:88
msgid "dst_unused (UNUSED_PAD, UNUSED_SEXT, UNUSED_PRESERVE)"
msgstr ""

#: ../../../AMDGPUUsage.rst:89
msgid "abs, neg, sext"
msgstr ""

#: ../../../AMDGPUUsage.rst:92
msgid "DS Instructions Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:102
msgid ""
"For full list of supported instructions, refer to \"LDS/GDS instructions\" "
"in ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:105
msgid "FLAT Instruction Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:115
msgid ""
"For full list of supported instructions, refer to \"FLAT instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:118
msgid "MUBUF Instruction Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:128
msgid ""
"For full list of supported instructions, refer to \"MUBUF Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:131
msgid "SMRD/SMEM Instruction Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:141
msgid ""
"For full list of supported instructions, refer to \"Scalar Memory "
"Operations\" in ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:144
msgid "SOP1 Instruction Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:156
msgid ""
"For full list of supported instructions, refer to \"SOP1 Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:159
msgid "SOP2 Instruction Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:173
msgid ""
"For full list of supported instructions, refer to \"SOP2 Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:176
msgid "SOPC Instruction Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:185
msgid ""
"For full list of supported instructions, refer to \"SOPC Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:188
msgid "SOPP Instruction Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:204
msgid ""
"For full list of supported instructions, refer to \"SOPP Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:206
msgid ""
"Unless otherwise mentioned, little verification is performed on the operands "
"of SOPP Instrucitons, so it is up to the programmer to be familiar with the "
"range or acceptable values."
msgstr ""

#: ../../../AMDGPUUsage.rst:211
msgid "Vector ALU Instruction Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:213
msgid ""
"For vector ALU instruction opcodes (VOP1, VOP2, VOP3, VOPC, VOP_DPP, "
"VOP_SDWA), the assembler will automatically use optimal encoding based on "
"its operands. To force specific encoding, one can add a suffix to the opcode "
"of the instruction:"
msgstr ""

#: ../../../AMDGPUUsage.rst:217
msgid "_e32 for 32-bit VOP1/VOP2/VOPC"
msgstr ""

#: ../../../AMDGPUUsage.rst:218
msgid "_e64 for 64-bit VOP3"
msgstr ""

#: ../../../AMDGPUUsage.rst:219
msgid "_dpp for VOP_DPP"
msgstr ""

#: ../../../AMDGPUUsage.rst:220
msgid "_sdwa for VOP_SDWA"
msgstr ""

#: ../../../AMDGPUUsage.rst:222
msgid "VOP1/VOP2/VOP3/VOPC examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:239
msgid "VOP_DPP examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:252
msgid "VOP_SDWA examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:262
msgid ""
"For full list of supported instructions, refer to \"Vector ALU "
"instructions\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:265
msgid "HSA Code Object Directives"
msgstr ""

#: ../../../AMDGPUUsage.rst:267
msgid ""
"AMDGPU ABI defines auxiliary data in output code object. In assembly source, "
"one can specify them with assembler directives."
msgstr ""

#: ../../../AMDGPUUsage.rst:271
msgid ".hsa_code_object_version major, minor"
msgstr ""

#: ../../../AMDGPUUsage.rst:273
msgid ""
"*major* and *minor* are integers that specify the version of the HSA code "
"object that will be generated by the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:277
msgid ".hsa_code_object_isa [major, minor, stepping, vendor, arch]"
msgstr ""

#: ../../../AMDGPUUsage.rst:279
msgid ""
"*major*, *minor*, and *stepping* are all integers that describe the "
"instruction set architecture (ISA) version of the assembly program."
msgstr ""

#: ../../../AMDGPUUsage.rst:282
msgid ""
"*vendor* and *arch* are quoted strings.  *vendor* should always be equal to "
"\"AMD\" and *arch* should always be equal to \"AMDGPU\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:285
msgid ""
"By default, the assembler will derive the ISA version, *vendor*, and *arch* "
"from the value of the -mcpu option that is passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:289
msgid ".amdgpu_hsa_kernel (name)"
msgstr ""

#: ../../../AMDGPUUsage.rst:291
msgid ""
"This directives specifies that the symbol with given name is a kernel entry "
"point (label) and the object should contain corresponding symbol of type "
"STT_AMDGPU_HSA_KERNEL."
msgstr ""

#: ../../../AMDGPUUsage.rst:295
msgid ".amd_kernel_code_t"
msgstr ""

#: ../../../AMDGPUUsage.rst:297
msgid ""
"This directive marks the beginning of a list of key / value pairs that are "
"used to specify the amd_kernel_code_t object that will be emitted by the "
"assembler. The list must be terminated by the *.end_amd_kernel_code_t* "
"directive.  For any amd_kernel_code_t values that are unspecified a default "
"value will be used.  The default value for all keys is 0, with the following "
"exceptions:"
msgstr ""

#: ../../../AMDGPUUsage.rst:303
msgid "*kernel_code_version_major* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:304
msgid "*machine_kind* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:305
msgid ""
"*machine_version_major*, *machine_version_minor*, and "
"*machine_version_stepping* are derived from the value of the -mcpu option "
"that is passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:308
msgid "*kernel_code_entry_byte_offset* defaults to 256."
msgstr ""

#: ../../../AMDGPUUsage.rst:309
msgid "*wavefront_size* defaults to 6."
msgstr ""

#: ../../../AMDGPUUsage.rst:310
msgid ""
"*kernarg_segment_alignment*, *group_segment_alignment*, and "
"*private_segment_alignment* default to 4.  Note that alignments are "
"specified as a power of two, so a value of **n** means an alignment of 2^ "
"**n**."
msgstr ""

#: ../../../AMDGPUUsage.rst:314
msgid ""
"The *.amd_kernel_code_t* directive must be placed immediately after the "
"function label and before any instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:317
msgid ""
"For a full list of amd_kernel_code_t keys, refer to AMDGPU ABI document, "
"comments in lib/Target/AMDGPU/AmdKernelCodeT.h and test/CodeGen/AMDGPU/hsa.s."
msgstr ""

#: ../../../AMDGPUUsage.rst:320
msgid "Here is an example of a minimal amd_kernel_code_t specification:"
msgstr ""
