# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM main\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-13 08:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../CommandGuide/llvm-cov.rst:2
msgid "llvm-cov - emit coverage information"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:7 ../../../CommandGuide/llvm-cov.rst:39
#: ../../../CommandGuide/llvm-cov.rst:189
#: ../../../CommandGuide/llvm-cov.rst:396
#: ../../../CommandGuide/llvm-cov.rst:491
#: ../../../CommandGuide/llvm-cov.rst:587
msgid "SYNOPSIS"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:9
msgid ":program:`llvm-cov` *command* [*args...*]"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:12 ../../../CommandGuide/llvm-cov.rst:44
#: ../../../CommandGuide/llvm-cov.rst:194
#: ../../../CommandGuide/llvm-cov.rst:401
#: ../../../CommandGuide/llvm-cov.rst:496
#: ../../../CommandGuide/llvm-cov.rst:592
msgid "DESCRIPTION"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:14
msgid ""
"The :program:`llvm-cov` tool shows code coverage information for programs "
"that are instrumented to emit profile data. It can be used to work with "
"``gcov``\\-style coverage or with ``clang``\\'s instrumentation based "
"profiling."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:19
msgid ""
"If the program is invoked with a base name of ``gcov``, it will behave as if "
"the :program:`llvm-cov gcov` command were called. Otherwise, a command "
"should be provided."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:24
msgid "COMMANDS"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:26
msgid ":ref:`gcov <llvm-cov-gcov>`"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:27
msgid ":ref:`show <llvm-cov-show>`"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:28
msgid ":ref:`report <llvm-cov-report>`"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:29
msgid ":ref:`export <llvm-cov-export>`"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:36
msgid "GCOV COMMAND"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:41
msgid ":program:`llvm-cov gcov` [*options*] *SOURCEFILE*"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:46
msgid ""
"The :program:`llvm-cov gcov` tool reads code coverage data files and "
"displays the coverage information for a specified source file. It is "
"compatible with the ``gcov`` tool from version 4.2 of ``GCC`` and may also "
"be compatible with some later versions of ``gcov``."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:51
msgid ""
"To use :program:`llvm-cov gcov`, you must first build an instrumented "
"version of your application that collects coverage data as it runs. Compile "
"with the ``-fprofile-arcs`` and ``-ftest-coverage`` options to add the "
"instrumentation. (Alternatively, you can use the ``--coverage`` option, "
"which includes both of those other options.)"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:57
msgid ""
"At the time you compile the instrumented code, a ``.gcno`` data file will be "
"generated for each object file. These ``.gcno`` files contain half of the "
"coverage data. The other half of the data comes from ``.gcda`` files that "
"are generated when you run the instrumented program, with a separate ``."
"gcda`` file for each object file. Each time you run the program, the "
"execution counts are summed into any existing ``.gcda`` files, so be sure to "
"remove any old files if you do not want their contents to be included."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:65
msgid ""
"By default, the ``.gcda`` files are written into the same directory as the "
"object files, but you can override that by setting the ``GCOV_PREFIX`` and "
"``GCOV_PREFIX_STRIP`` environment variables. The ``GCOV_PREFIX_STRIP`` "
"variable specifies a number of directory components to be removed from the "
"start of the absolute path to the object file directory. After stripping "
"those directories, the prefix from the ``GCOV_PREFIX`` variable is added. "
"These environment variables allow you to run the instrumented program on a "
"machine where the original object file directories are not accessible, but "
"you will then need to copy the ``.gcda`` files back to the object file "
"directories where :program:`llvm-cov gcov` expects to find them."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:76
msgid ""
"Once you have generated the coverage data files, run :program:`llvm-cov "
"gcov` for each main source file where you want to examine the coverage "
"results. This should be run from the same directory where you previously ran "
"the compiler. The results for the specified source file are written to a "
"file named by appending a ``.gcov`` suffix. A separate output file is also "
"created for each file included by the main source file, also with a ``."
"gcov`` suffix added."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:83
msgid ""
"The basic content of an ``.gcov`` output file is a copy of the source file "
"with an execution count and line number prepended to every line. The "
"execution count is shown as ``-`` if a line does not contain any executable "
"code. If a line contains code but that code was never executed, the count is "
"displayed as ``#####``."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:90 ../../../CommandGuide/llvm-cov.rst:218
#: ../../../CommandGuide/llvm-cov.rst:418
#: ../../../CommandGuide/llvm-cov.rst:513
msgid "OPTIONS"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:94
msgid ""
"Display all basic blocks. If there are multiple blocks for a single line of "
"source code, this option causes llvm-cov to show the count for each block "
"instead of just one count for the entire line."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:100
msgid ""
"Display conditional branch probabilities and a summary of branch information."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:104
msgid "Display branch counts instead of probabilities (requires -b)."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:108
msgid "Demangle function names."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:112
msgid ""
"Show a summary of coverage for each function instead of just one summary for "
"an entire source file."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:117
msgid "Display available options (--help-hidden for more)."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:121
msgid ""
"For coverage output of files included from the main source file, add the "
"main file name followed by ``##`` as a prefix to the output file names. This "
"can be combined with the --preserve-paths option to use complete paths for "
"both the main file and the included file."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:128
msgid ""
"Do not output any ``.gcov`` files. Summary information is still displayed."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:133
msgid ""
"Find objects in DIR or based on FILE's path. If you specify a particular "
"object file, the coverage data files are expected to have the same base name "
"with ``.gcno`` and ``.gcda`` extensions. If you specify a directory, the "
"files are expected in that directory with the same base name as the source "
"file."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:141
msgid ""
"Preserve path components when naming the coverage output files. In addition "
"to the source file name, include the directories from the path to that file. "
"The directories are separate by ``#`` characters, with ``.`` directories "
"removed and ``..`` directories replaced by ``^`` characters. When used with "
"the --long-file-names option, this applies to both the main file name and "
"the included file name."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:150
msgid ""
"Only dump files with relative paths or absolute paths with the prefix "
"specified by ``-s``."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:155
msgid "Source prefix to elide."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:159
msgid "Print to stdout instead of producing ``.gcov`` files."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:163
msgid ""
"Include unconditional branches in the output for the --branch-probabilities "
"option."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:168
msgid "Display the version of llvm-cov."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:172
msgid ""
"Use md5 hash of file name when naming the coverage output files. The source "
"file name will be suffixed by ``##`` followed by MD5 hash calculated for it."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:176
msgid "EXIT STATUS"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:178
msgid ""
":program:`llvm-cov gcov` returns 1 if it cannot read input files.  "
"Otherwise, it exits with zero."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:186
msgid "SHOW COMMAND"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:191
msgid ""
":program:`llvm-cov show` [*options*] -instr-profile *PROFILE* [*BIN*] [*-"
"object BIN*]... [*-sources*] [*SOURCE*]..."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:196
msgid ""
"The :program:`llvm-cov show` command shows line by line coverage of the "
"binaries *BIN*...  using the profile data *PROFILE*. It can optionally be "
"filtered to only show the coverage for the files listed in *SOURCE*...."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:200
#: ../../../CommandGuide/llvm-cov.rst:407
msgid ""
"*BIN* may be an executable, object file, dynamic library, or archive (thin "
"or otherwise)."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:203
msgid ""
"To use :program:`llvm-cov show`, you need a program that is compiled with "
"instrumentation to emit profile and coverage data. To build such a program "
"with ``clang`` use the ``-fprofile-instr-generate`` and ``-fcoverage-"
"mapping`` flags. If linking with the ``clang`` driver, pass ``-fprofile-"
"instr-generate`` to the link stage to make sure the necessary runtime "
"libraries are linked in."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:209
msgid ""
"The coverage information is stored in the built executable or library "
"itself, and this is what you should pass to :program:`llvm-cov show` as a "
"*BIN* argument. The profile data is generated by running this instrumented "
"program normally. When the program exits it will write out a raw profile "
"file, typically called ``default.profraw``, which can be converted to a "
"format that is suitable for the *PROFILE* argument using the :program:`llvm-"
"profdata merge` tool."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:222
msgid ""
"Show coverage for branch conditions in terms of either count or percentage. "
"The supported views are: \"count\", \"percent\"."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:227
msgid ""
"Show modified condition/decision coverage (MC/DC) for each applicable "
"boolean expression."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:232
msgid ""
"Show the execution counts for each line. Defaults to true, unless another ``-"
"show`` option is used."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:237
msgid ""
"Expand inclusions, such as preprocessor macros or textual inclusions, inline "
"in the display of the source file. Defaults to false."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:242
msgid ""
"For source regions that are instantiated multiple times, such as templates "
"in ``C++``, show each instantiation separately as well as the combined "
"summary. Defaults to true."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:248
msgid ""
"Show the execution counts for each region by displaying a caret that points "
"to the character where the region starts. Defaults to false."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:253
msgid ""
"Show the execution counts for each line if there is only one region on the "
"line, but show the individual regions if there are multiple on the line. "
"Defaults to false."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:259
msgid ""
"Generate an index file in each directory that contains at least one source "
"file with a top level index showing aggregates. Defaults to false."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:264
#: ../../../CommandGuide/llvm-cov.rst:422
msgid "Enable or disable color output. By default this is autodetected."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:268
msgid ""
"Specify a list of architectures such that the Nth entry in the list "
"corresponds to the Nth specified binary. If the covered object is a "
"universal binary, this specifies the architecture to use. It is an error to "
"specify an architecture that is not included in the universal binary or to "
"use an architecture that does not match a non-universal binary."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:276
msgid "Show code coverage only for functions with the given name."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:280
msgid ""
"Show code coverage only for functions listed in the given file. Each line in "
"the file should start with `allowlist_fun:`, immediately followed by the "
"name of the function to accept. This name can be a wildcard expression."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:286
msgid ""
"Show code coverage only for functions that match the given regular "
"expression."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:290
#: ../../../CommandGuide/llvm-cov.rst:453
#: ../../../CommandGuide/llvm-cov.rst:537
msgid ""
"Skip source code files with file paths that match the given regular "
"expression."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:294
msgid ""
"Use the specified output format. The supported formats are: \"text\", "
"\"html\"."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:298
msgid ""
"Replace tabs with <TABSIZE> spaces when preparing reports. Currently, this "
"is only supported for the html format."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:303
msgid ""
"Specify a directory to write coverage reports into. If the directory does "
"not exist, it is created. When used in function view mode (i.e when -name or "
"-name-regex are used to select specific functions), the report is written to "
"PATH/functions.EXTENSION. When used in file view mode, a report for each "
"file is written to PATH/REL_PATH_TO_FILE.EXTENSION."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:311
msgid ""
"Specify a symbol demangler. This can be used to make reports more human-"
"readable. This option can be specified multiple times to supply arguments to "
"the demangler (e.g `-Xdemangler c++filt -Xdemangler -n` for C++). The "
"demangler is expected to read a newline-separated list of symbols from stdin "
"and write a newline-separated list of the same length to stdout."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:319
msgid ""
"Use N threads to write file reports (only applicable when -output-dir is "
"specified). When N=0, llvm-cov auto-detects an appropriate number of threads "
"to use. This is the default."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:325
#: ../../../CommandGuide/llvm-cov.rst:457
#: ../../../CommandGuide/llvm-cov.rst:554
msgid ""
"Directory used as a base for relative coverage mapping paths. Only "
"applicable when binaries have been compiled with one of `-fcoverage-prefix-"
"map` `-fcoverage-compilation-dir`, or `-ffile-compilation-dir`."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:331
msgid ""
"Show code coverage only for functions with line coverage greater than the "
"given threshold."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:336
msgid ""
"Show code coverage only for functions with line coverage less than the given "
"threshold."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:341
msgid ""
"Show code coverage only for functions with region coverage greater than the "
"given threshold."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:346
msgid ""
"Show code coverage only for functions with region coverage less than the "
"given threshold."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:351
msgid ""
"Map the paths in the coverage data to local source file paths. This allows "
"you to generate the coverage data on one machine, and then use llvm-cov on a "
"different machine where you have the same files on a different path. "
"Multiple `-path-equivalence` arguments can be passed to specify different "
"mappings. Each argument consists of a source path `<from>` and its "
"corresponding local path `<to>`. The mappings are applied in the order they "
"are specified. If multiple mappings can be applied to a single path, the "
"first mapping encountered is used."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:361
msgid ""
"Set high and low watermarks for coverage in html format output. This allows "
"you to set the high and low watermark of coverage as desired, green when "
"coverage >= high, red when coverage < low, and yellow otherwise. Both high "
"and low should be between 0-100 and high > low."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:368
msgid ""
"Use debuginfod to look up coverage mapping for binary IDs present in the "
"profile but not in any object given on the command line. Defaults to true if "
"debuginfod is compiled in and configured via the DEBUGINFOD_URLS environment "
"variable."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:375
msgid ""
"Provides local directories to search for objects corresponding to binary IDs "
"in the profile (as with debuginfod). Defaults to system build ID directories."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:380
#: ../../../CommandGuide/llvm-cov.rst:475
#: ../../../CommandGuide/llvm-cov.rst:572
msgid ""
"Fail if an object file cannot be found for a binary ID present in the "
"profile, neither on the command line nor via binary ID lookup."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:385
#: ../../../CommandGuide/llvm-cov.rst:480
msgid ""
"Display the baseline coverage of the binaries with all zero execution "
"counts. Mutually exclusive with -instr-profile."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:393
msgid "REPORT COMMAND"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:398
msgid ""
":program:`llvm-cov report` [*options*] -instr-profile *PROFILE* [*BIN*] [*-"
"object BIN*]... [*-sources*] [*SOURCE*]..."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:403
msgid ""
"The :program:`llvm-cov report` command displays a summary of the coverage of "
"the binaries *BIN*... using the profile data *PROFILE*. It can optionally be "
"filtered to only show the coverage for the files listed in *SOURCE*...."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:410
msgid ""
"If no source files are provided, a summary line is printed for each file in "
"the coverage data. If any files are provided, summaries can be shown for "
"each function in the listed files if the ``-show-functions`` option is "
"enabled."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:414
#: ../../../CommandGuide/llvm-cov.rst:509
msgid ""
"For information on compiling programs for coverage and generating profile "
"data, see :ref:`llvm-cov-show`."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:426
#: ../../../CommandGuide/llvm-cov.rst:517
msgid ""
"If the covered binary is a universal binary, select the architecture to use. "
"It is an error to specify an architecture that is not included in the "
"universal binary or to use an architecture that does not match a non-"
"universal binary."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:433
msgid "Show statistics for all regions. Defaults to true."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:437
msgid "Show statistics for all branch conditions. Defaults to true."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:441
msgid "Show MC/DC statistics. Defaults to false."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:445
msgid "Show coverage summaries for each function. Defaults to false."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:449
msgid "Show statistics for all function instantiations. Defaults to false."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:463
#: ../../../CommandGuide/llvm-cov.rst:560
msgid ""
"Attempt to look up coverage mapping from objects using debuginfod. This is "
"attempted by default for binary IDs present in the profile but not provided "
"on the command line, so long as debuginfod is compiled in and configured via "
"DEBUGINFOD_URLS."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:470
#: ../../../CommandGuide/llvm-cov.rst:567
msgid ""
"Provides a directory to search for objects corresponding to binary IDs in "
"the profile."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:488
msgid "EXPORT COMMAND"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:493
msgid ""
":program:`llvm-cov export` [*options*] -instr-profile *PROFILE* [*BIN*] [*-"
"object BIN*]... [*-sources*] [*SOURCE*]..."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:498
msgid ""
"The :program:`llvm-cov export` command exports coverage data of the binaries "
"*BIN*... using the profile data *PROFILE* in either JSON or lcov trace file "
"format."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:502
msgid ""
"When exporting JSON, the regions, functions, branches, expansions, and "
"summaries of the coverage data will be exported. When exporting an lcov "
"trace file, the line-based coverage, branch coverage, and summaries will be "
"exported."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:506
msgid ""
"The exported data can optionally be filtered to only export the coverage for "
"the files listed in *SOURCE*...."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:524
msgid ""
"Use the specified output format. The supported formats are: \"text\" (JSON), "
"\"lcov\"."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:529
msgid ""
"Export only summary information for each file in the coverage data. This "
"mode will not export coverage information for smaller units such as "
"individual functions or regions. The result will contain the same "
"information as produced by the :program:`llvm-cov report` command, but "
"presented in JSON or lcov format rather than text."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:541
msgid "Skip exporting macro expansion coverage data."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:545
msgid "Skip exporting per-function coverage data."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:549
msgid ""
"Use N threads to export coverage data. When N=0, llvm-cov auto-detects an "
"appropriate number of threads to use. This is the default."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:577
msgid ""
"Export the baseline coverage of the binaries with all zero execution counts. "
"Mutually exclusive with -instr-profile."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:581
msgid "CONVERT-FOR-TESTING COMMAND"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:584
msgid ""
"This command is for the LLVM developers who are working on ``llvm-cov`` only."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:589
msgid ":program:`llvm-cov convert-for-testing` *BIN* -o *OUT*"
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:594
msgid ""
"The :program:`llvm-cov convert-for-testing` command serves the purpose of "
"testing `llvm-cov` itself. It can extract all code coverage data from the "
"binary *BIN* to the file *OUT*, thereby reducing the size of test files. The "
"output file typically bears the :program:`.covmapping` extension."
msgstr ""

#: ../../../CommandGuide/llvm-cov.rst:599
msgid ""
"The :program:`.covmapping` files can be read back by ``llvm-cov`` just as "
"ordinary binary files."
msgstr ""
