Search.setIndex({"alltitles": {"!vcall_visibility Metadata": [[768, "vcall-visibility-metadata"]], "\"More Canonical\" Loops": [[706, "more-canonical-loops"]], "\"Quirky\" Interface": [[594, "quirky-interface"]], "\"llvm-libc\" C Standard Library": [[737, null]], "#0 - BLOCKINFO Block": [[589, "blockinfo-block"]], "#include <iostream> is Forbidden": [[602, "include-iostream-is-forbidden"]], "#include Style": [[602, "include-style"]], "#include as Little as Possible": [[602, "include-as-little-as-possible"]], "'absolute_symbol' Metadata": [[702, "absolute-symbol-metadata"]], "'add' Instruction": [[702, "add-instruction"]], "'addrspacecast .. to' Instruction": [[702, "addrspacecast-to-instruction"]], "'alloca' Instruction": [[702, "alloca-instruction"]], "'and' Instruction": [[702, "and-instruction"]], "'annotation' Metadata": [[702, "annotation-metadata"]], "'ashr' Instruction": [[702, "ashr-instruction"]], "'associated' Metadata": [[702, "associated-metadata"]], "'atomicrmw' Instruction": [[702, "atomicrmw-instruction"]], "'bitcast .. to' Instruction": [[702, "bitcast-to-instruction"]], "'br' Instruction": [[702, "br-instruction"]], "'call' Instruction": [[702, "call-instruction"]], "'callback' Metadata": [[702, "callback-metadata"]], "'callbr' Instruction": [[702, "callbr-instruction"]], "'callees' Metadata": [[702, "callees-metadata"]], "'catchpad' Instruction": [[702, "catchpad-instruction"]], "'catchret' Instruction": [[702, "catchret-instruction"]], "'catchswitch' Instruction": [[702, "catchswitch-instruction"]], "'cleanuppad' Instruction": [[702, "cleanuppad-instruction"]], "'cleanupret' Instruction": [[702, "cleanupret-instruction"]], "'cmpxchg' Instruction": [[702, "cmpxchg-instruction"]], "'dereferenceable' Metadata": [[702, "dereferenceable-metadata"]], "'dereferenceable_or_null' Metadata": [[702, "dereferenceable-or-null-metadata"]], "'extractelement' Instruction": [[702, "extractelement-instruction"]], "'extractvalue' Instruction": [[702, "extractvalue-instruction"]], "'fadd' Instruction": [[702, "fadd-instruction"]], "'fcmp' Instruction": [[702, "fcmp-instruction"]], "'fdiv' Instruction": [[702, "fdiv-instruction"]], "'fence' Instruction": [[702, "fence-instruction"]], "'fmul' Instruction": [[702, "fmul-instruction"]], "'fneg' Instruction": [[702, "fneg-instruction"]], "'for' Loop Expression": [[797, "for-loop-expression"]], "'fpext .. to' Instruction": [[702, "fpext-to-instruction"]], "'fpmath' Metadata": [[702, "fpmath-metadata"]], "'fptosi .. to' Instruction": [[702, "fptosi-to-instruction"]], "'fptoui .. to' Instruction": [[702, "fptoui-to-instruction"]], "'fptrunc .. to' Instruction": [[702, "fptrunc-to-instruction"]], "'freeze' Instruction": [[702, "freeze-instruction"]], "'frem' Instruction": [[702, "frem-instruction"]], "'fsub' Instruction": [[702, "fsub-instruction"]], "'getelementptr' Instruction": [[702, "getelementptr-instruction"]], "'icmp' Instruction": [[702, "icmp-instruction"]], "'indirectbr' Instruction": [[702, "indirectbr-instruction"]], "'insertelement' Instruction": [[702, "insertelement-instruction"]], "'insertvalue' Instruction": [[702, "insertvalue-instruction"]], "'inttoptr .. to' Instruction": [[702, "inttoptr-to-instruction"]], "'invariant.group' Metadata": [[702, "invariant-group-metadata"]], "'invoke' Instruction": [[702, "invoke-instruction"]], "'irr_loop' Metadata": [[702, "irr-loop-metadata"]], "'landingpad' Instruction": [[702, "landingpad-instruction"]], "'llvm.abs.*' Intrinsic": [[702, "llvm-abs-intrinsic"]], "'llvm.access.group' Metadata": [[702, "llvm-access-group-metadata"]], "'llvm.addressofreturnaddress' Intrinsic": [[702, "llvm-addressofreturnaddress-intrinsic"]], "'llvm.adjust.trampoline' Intrinsic": [[702, "llvm-adjust-trampoline-intrinsic"]], "'llvm.annotation.*' Intrinsic": [[702, "llvm-annotation-intrinsic"]], "'llvm.arithmetic.fence' Intrinsic": [[702, "llvm-arithmetic-fence-intrinsic"]], "'llvm.assume' Intrinsic": [[702, "llvm-assume-intrinsic"]], "'llvm.bitreverse.*' Intrinsics": [[702, "llvm-bitreverse-intrinsics"]], "'llvm.bswap.*' Intrinsics": [[702, "llvm-bswap-intrinsics"]], "'llvm.call.preallocated.arg' Intrinsic": [[702, "llvm-call-preallocated-arg-intrinsic"]], "'llvm.call.preallocated.setup' Intrinsic": [[702, "llvm-call-preallocated-setup-intrinsic"]], "'llvm.call.preallocated.teardown' Intrinsic": [[702, "llvm-call-preallocated-teardown-intrinsic"]], "'llvm.canonicalize.*' Intrinsic": [[702, "llvm-canonicalize-intrinsic"]], "'llvm.ceil.*' Intrinsic": [[702, "llvm-ceil-intrinsic"]], "'llvm.clear_cache' Intrinsic": [[702, "llvm-clear-cache-intrinsic"]], "'llvm.codeview.annotation' Intrinsic": [[702, "llvm-codeview-annotation-intrinsic"]], "'llvm.convert.from.fp16' Intrinsic": [[702, "llvm-convert-from-fp16-intrinsic"]], "'llvm.convert.to.fp16' Intrinsic": [[702, "llvm-convert-to-fp16-intrinsic"]], "'llvm.copysign.*' Intrinsic": [[702, "llvm-copysign-intrinsic"]], "'llvm.coro.alloc' Intrinsic": [[655, "llvm-coro-alloc-intrinsic"]], "'llvm.coro.begin' Intrinsic": [[655, "llvm-coro-begin-intrinsic"]], "'llvm.coro.destroy' Intrinsic": [[655, "llvm-coro-destroy-intrinsic"]], "'llvm.coro.done' Intrinsic": [[655, "llvm-coro-done-intrinsic"]], "'llvm.coro.end' Intrinsic": [[655, "llvm-coro-end-intrinsic"]], "'llvm.coro.end.async' Intrinsic": [[655, "llvm-coro-end-async-intrinsic"]], "'llvm.coro.frame' Intrinsic": [[655, "llvm-coro-frame-intrinsic"]], "'llvm.coro.free' Intrinsic": [[655, "llvm-coro-free-intrinsic"]], "'llvm.coro.id' Intrinsic": [[655, "llvm-coro-id-intrinsic"]], "'llvm.coro.id.async' Intrinsic": [[655, "llvm-coro-id-async-intrinsic"]], "'llvm.coro.id.retcon' Intrinsic": [[655, "llvm-coro-id-retcon-intrinsic"]], "'llvm.coro.id.retcon.once' Intrinsic": [[655, "llvm-coro-id-retcon-once-intrinsic"]], "'llvm.coro.noop' Intrinsic": [[655, "llvm-coro-noop-intrinsic"]], "'llvm.coro.param' Intrinsic": [[655, "llvm-coro-param-intrinsic"]], "'llvm.coro.prepare.async' Intrinsic": [[655, "llvm-coro-prepare-async-intrinsic"]], "'llvm.coro.promise' Intrinsic": [[655, "llvm-coro-promise-intrinsic"]], "'llvm.coro.resume' Intrinsic": [[655, "llvm-coro-resume-intrinsic"]], "'llvm.coro.save' Intrinsic": [[655, "llvm-coro-save-intrinsic"]], "'llvm.coro.size' Intrinsic": [[655, "llvm-coro-size-intrinsic"]], "'llvm.coro.suspend' Intrinsic": [[655, "llvm-coro-suspend-intrinsic"]], "'llvm.coro.suspend.async' Intrinsic": [[655, "llvm-coro-suspend-async-intrinsic"]], "'llvm.coro.suspend.retcon' Intrinsic": [[655, "llvm-coro-suspend-retcon-intrinsic"]], "'llvm.cos.*' Intrinsic": [[702, "llvm-cos-intrinsic"]], "'llvm.ctlz.*' Intrinsic": [[702, "llvm-ctlz-intrinsic"]], "'llvm.ctpop.*' Intrinsic": [[702, "llvm-ctpop-intrinsic"]], "'llvm.cttz.*' Intrinsic": [[702, "llvm-cttz-intrinsic"]], "'llvm.debugtrap' Intrinsic": [[702, "llvm-debugtrap-intrinsic"]], "'llvm.donothing' Intrinsic": [[702, "llvm-donothing-intrinsic"]], "'llvm.exp.*' Intrinsic": [[702, "llvm-exp-intrinsic"]], "'llvm.exp2.*' Intrinsic": [[702, "llvm-exp2-intrinsic"]], "'llvm.expect' Intrinsic": [[702, "llvm-expect-intrinsic"]], "'llvm.expect.with.probability' Intrinsic": [[702, "llvm-expect-with-probability-intrinsic"]], "'llvm.experimental.constrained.ceil' Intrinsic": [[702, "llvm-experimental-constrained-ceil-intrinsic"]], "'llvm.experimental.constrained.cos' Intrinsic": [[702, "llvm-experimental-constrained-cos-intrinsic"]], "'llvm.experimental.constrained.exp' Intrinsic": [[702, "llvm-experimental-constrained-exp-intrinsic"]], "'llvm.experimental.constrained.exp2' Intrinsic": [[702, "llvm-experimental-constrained-exp2-intrinsic"]], "'llvm.experimental.constrained.fadd' Intrinsic": [[702, "llvm-experimental-constrained-fadd-intrinsic"]], "'llvm.experimental.constrained.fcmp' and 'llvm.experimental.constrained.fcmps' Intrinsics": [[702, "llvm-experimental-constrained-fcmp-and-llvm-experimental-constrained-fcmps-intrinsics"]], "'llvm.experimental.constrained.fdiv' Intrinsic": [[702, "llvm-experimental-constrained-fdiv-intrinsic"]], "'llvm.experimental.constrained.floor' Intrinsic": [[702, "llvm-experimental-constrained-floor-intrinsic"]], "'llvm.experimental.constrained.fma' Intrinsic": [[702, "llvm-experimental-constrained-fma-intrinsic"]], "'llvm.experimental.constrained.fmul' Intrinsic": [[702, "llvm-experimental-constrained-fmul-intrinsic"]], "'llvm.experimental.constrained.fmuladd' Intrinsic": [[702, "llvm-experimental-constrained-fmuladd-intrinsic"]], "'llvm.experimental.constrained.fpext' Intrinsic": [[702, "llvm-experimental-constrained-fpext-intrinsic"]], "'llvm.experimental.constrained.fptosi' Intrinsic": [[702, "llvm-experimental-constrained-fptosi-intrinsic"]], "'llvm.experimental.constrained.fptoui' Intrinsic": [[702, "llvm-experimental-constrained-fptoui-intrinsic"]], "'llvm.experimental.constrained.fptrunc' Intrinsic": [[702, "llvm-experimental-constrained-fptrunc-intrinsic"]], "'llvm.experimental.constrained.frem' Intrinsic": [[702, "llvm-experimental-constrained-frem-intrinsic"]], "'llvm.experimental.constrained.fsub' Intrinsic": [[702, "llvm-experimental-constrained-fsub-intrinsic"]], "'llvm.experimental.constrained.llrint' Intrinsic": [[702, "llvm-experimental-constrained-llrint-intrinsic"]], "'llvm.experimental.constrained.llround' Intrinsic": [[702, "llvm-experimental-constrained-llround-intrinsic"]], "'llvm.experimental.constrained.log' Intrinsic": [[702, "llvm-experimental-constrained-log-intrinsic"]], "'llvm.experimental.constrained.log10' Intrinsic": [[702, "llvm-experimental-constrained-log10-intrinsic"]], "'llvm.experimental.constrained.log2' Intrinsic": [[702, "llvm-experimental-constrained-log2-intrinsic"]], "'llvm.experimental.constrained.lrint' Intrinsic": [[702, "llvm-experimental-constrained-lrint-intrinsic"]], "'llvm.experimental.constrained.lround' Intrinsic": [[702, "llvm-experimental-constrained-lround-intrinsic"]], "'llvm.experimental.constrained.maximum' Intrinsic": [[702, "llvm-experimental-constrained-maximum-intrinsic"]], "'llvm.experimental.constrained.maxnum' Intrinsic": [[702, "llvm-experimental-constrained-maxnum-intrinsic"]], "'llvm.experimental.constrained.minimum' Intrinsic": [[702, "llvm-experimental-constrained-minimum-intrinsic"]], "'llvm.experimental.constrained.minnum' Intrinsic": [[702, "llvm-experimental-constrained-minnum-intrinsic"]], "'llvm.experimental.constrained.nearbyint' Intrinsic": [[702, "llvm-experimental-constrained-nearbyint-intrinsic"]], "'llvm.experimental.constrained.pow' Intrinsic": [[702, "llvm-experimental-constrained-pow-intrinsic"]], "'llvm.experimental.constrained.powi' Intrinsic": [[702, "llvm-experimental-constrained-powi-intrinsic"]], "'llvm.experimental.constrained.rint' Intrinsic": [[702, "llvm-experimental-constrained-rint-intrinsic"]], "'llvm.experimental.constrained.round' Intrinsic": [[702, "llvm-experimental-constrained-round-intrinsic"]], "'llvm.experimental.constrained.roundeven' Intrinsic": [[702, "llvm-experimental-constrained-roundeven-intrinsic"]], "'llvm.experimental.constrained.sin' Intrinsic": [[702, "llvm-experimental-constrained-sin-intrinsic"]], "'llvm.experimental.constrained.sitofp' Intrinsic": [[702, "llvm-experimental-constrained-sitofp-intrinsic"]], "'llvm.experimental.constrained.sqrt' Intrinsic": [[702, "llvm-experimental-constrained-sqrt-intrinsic"]], "'llvm.experimental.constrained.trunc' Intrinsic": [[702, "llvm-experimental-constrained-trunc-intrinsic"]], "'llvm.experimental.constrained.uitofp' Intrinsic": [[702, "llvm-experimental-constrained-uitofp-intrinsic"]], "'llvm.experimental.deoptimize' Intrinsic": [[702, "llvm-experimental-deoptimize-intrinsic"]], "'llvm.experimental.gc.get.pointer.base' Intrinsic": [[702, "llvm-experimental-gc-get-pointer-base-intrinsic"]], "'llvm.experimental.gc.get.pointer.offset' Intrinsic": [[702, "llvm-experimental-gc-get-pointer-offset-intrinsic"]], "'llvm.experimental.gc.relocate' Intrinsic": [[702, "llvm-experimental-gc-relocate-intrinsic"]], "'llvm.experimental.gc.result' Intrinsic": [[702, "llvm-experimental-gc-result-intrinsic"]], "'llvm.experimental.gc.statepoint' Intrinsic": [[702, "llvm-experimental-gc-statepoint-intrinsic"]], "'llvm.experimental.guard' Intrinsic": [[702, "llvm-experimental-guard-intrinsic"]], "'llvm.experimental.noalias.scope.decl' Intrinsic": [[702, "llvm-experimental-noalias-scope-decl-intrinsic"]], "'llvm.experimental.patchpoint.*' Intrinsic": [[753, "llvm-experimental-patchpoint-intrinsic"]], "'llvm.experimental.stackmap' Intrinsic": [[753, "llvm-experimental-stackmap-intrinsic"]], "'llvm.experimental.stepvector' Intrinsic": [[702, "llvm-experimental-stepvector-intrinsic"]], "'llvm.experimental.vector.extract' Intrinsic": [[702, "llvm-experimental-vector-extract-intrinsic"]], "'llvm.experimental.vector.insert' Intrinsic": [[702, "llvm-experimental-vector-insert-intrinsic"]], "'llvm.experimental.vector.reverse' Intrinsic": [[702, "llvm-experimental-vector-reverse-intrinsic"]], "'llvm.experimental.vector.splice' Intrinsic": [[702, "llvm-experimental-vector-splice-intrinsic"]], "'llvm.experimental.widenable.condition' Intrinsic": [[702, "llvm-experimental-widenable-condition-intrinsic"]], "'llvm.fabs.*' Intrinsic": [[702, "llvm-fabs-intrinsic"]], "'llvm.floor.*' Intrinsic": [[702, "llvm-floor-intrinsic"]], "'llvm.flt.rounds' Intrinsic": [[702, "llvm-flt-rounds-intrinsic"]], "'llvm.fma.*' Intrinsic": [[702, "llvm-fma-intrinsic"]], "'llvm.fmuladd.*' Intrinsic": [[702, "llvm-fmuladd-intrinsic"]], "'llvm.fptosi.sat.*' Intrinsic": [[702, "llvm-fptosi-sat-intrinsic"]], "'llvm.fptoui.sat.*' Intrinsic": [[702, "llvm-fptoui-sat-intrinsic"]], "'llvm.frameaddress' Intrinsic": [[702, "llvm-frameaddress-intrinsic"]], "'llvm.fshl.*' Intrinsic": [[702, "llvm-fshl-intrinsic"]], "'llvm.fshr.*' Intrinsic": [[702, "llvm-fshr-intrinsic"]], "'llvm.gcread' Intrinsic": [[702, "llvm-gcread-intrinsic"]], "'llvm.gcroot' Intrinsic": [[702, "llvm-gcroot-intrinsic"]], "'llvm.gcwrite' Intrinsic": [[702, "llvm-gcwrite-intrinsic"]], "'llvm.get.active.lane.mask.*' Intrinsics": [[702, "llvm-get-active-lane-mask-intrinsics"]], "'llvm.get.dynamic.area.offset' Intrinsic": [[702, "llvm-get-dynamic-area-offset-intrinsic"]], "'llvm.init.trampoline' Intrinsic": [[702, "llvm-init-trampoline-intrinsic"]], "'llvm.instrprof.increment' Intrinsic": [[702, "llvm-instrprof-increment-intrinsic"]], "'llvm.instrprof.increment.step' Intrinsic": [[702, "llvm-instrprof-increment-step-intrinsic"]], "'llvm.instrprof.value.profile' Intrinsic": [[702, "llvm-instrprof-value-profile-intrinsic"]], "'llvm.invariant.end' Intrinsic": [[702, "llvm-invariant-end-intrinsic"]], "'llvm.invariant.start' Intrinsic": [[702, "llvm-invariant-start-intrinsic"]], "'llvm.is.constant.*' Intrinsic": [[702, "llvm-is-constant-intrinsic"]], "'llvm.launder.invariant.group' Intrinsic": [[702, "llvm-launder-invariant-group-intrinsic"]], "'llvm.licm.disable' Metadata": [[702, "llvm-licm-disable-metadata"]], "'llvm.lifetime.end' Intrinsic": [[702, "llvm-lifetime-end-intrinsic"]], "'llvm.lifetime.start' Intrinsic": [[702, "llvm-lifetime-start-intrinsic"]], "'llvm.llrint.*' Intrinsic": [[702, "llvm-llrint-intrinsic"]], "'llvm.llround.*' Intrinsic": [[702, "llvm-llround-intrinsic"]], "'llvm.load.relative' Intrinsic": [[702, "llvm-load-relative-intrinsic"]], "'llvm.localescape' and 'llvm.localrecover' Intrinsics": [[702, "llvm-localescape-and-llvm-localrecover-intrinsics"]], "'llvm.log.*' Intrinsic": [[702, "llvm-log-intrinsic"]], "'llvm.log10.*' Intrinsic": [[702, "llvm-log10-intrinsic"]], "'llvm.log2.*' Intrinsic": [[702, "llvm-log2-intrinsic"]], "'llvm.loop'": [[702, "llvm-loop"]], "'llvm.loop.decrement.*' Intrinsic": [[702, "llvm-loop-decrement-intrinsic"]], "'llvm.loop.decrement.reg.*' Intrinsic": [[702, "llvm-loop-decrement-reg-intrinsic"]], "'llvm.loop.disable_nonforced'": [[702, "llvm-loop-disable-nonforced"]], "'llvm.loop.distribute.enable' Metadata": [[702, "llvm-loop-distribute-enable-metadata"]], "'llvm.loop.distribute.followup_all' Metadata": [[702, "llvm-loop-distribute-followup-all-metadata"]], "'llvm.loop.distribute.followup_coincident' Metadata": [[702, "llvm-loop-distribute-followup-coincident-metadata"]], "'llvm.loop.distribute.followup_fallback' Metadata": [[702, "llvm-loop-distribute-followup-fallback-metadata"]], "'llvm.loop.distribute.followup_sequential' Metadata": [[702, "llvm-loop-distribute-followup-sequential-metadata"]], "'llvm.loop.interleave.count' Metadata": [[702, "llvm-loop-interleave-count-metadata"]], "'llvm.loop.licm_versioning.disable' Metadata": [[702, "llvm-loop-licm-versioning-disable-metadata"]], "'llvm.loop.mustprogress' Metadata": [[702, "llvm-loop-mustprogress-metadata"]], "'llvm.loop.parallel_accesses' Metadata": [[702, "llvm-loop-parallel-accesses-metadata"]], "'llvm.loop.unroll'": [[702, "llvm-loop-unroll"]], "'llvm.loop.unroll.count' Metadata": [[702, "llvm-loop-unroll-count-metadata"]], "'llvm.loop.unroll.disable' Metadata": [[702, "llvm-loop-unroll-disable-metadata"]], "'llvm.loop.unroll.enable' Metadata": [[702, "llvm-loop-unroll-enable-metadata"]], "'llvm.loop.unroll.followup' Metadata": [[702, "llvm-loop-unroll-followup-metadata"]], "'llvm.loop.unroll.followup_remainder' Metadata": [[702, "llvm-loop-unroll-followup-remainder-metadata"]], "'llvm.loop.unroll.full' Metadata": [[702, "llvm-loop-unroll-full-metadata"]], "'llvm.loop.unroll.runtime.disable' Metadata": [[702, "llvm-loop-unroll-runtime-disable-metadata"]], "'llvm.loop.unroll_and_jam'": [[702, "llvm-loop-unroll-and-jam"]], "'llvm.loop.unroll_and_jam.count' Metadata": [[702, "llvm-loop-unroll-and-jam-count-metadata"]], "'llvm.loop.unroll_and_jam.disable' Metadata": [[702, "llvm-loop-unroll-and-jam-disable-metadata"]], "'llvm.loop.unroll_and_jam.enable' Metadata": [[702, "llvm-loop-unroll-and-jam-enable-metadata"]], "'llvm.loop.unroll_and_jam.followup_all' Metadata": [[702, "llvm-loop-unroll-and-jam-followup-all-metadata"]], "'llvm.loop.unroll_and_jam.followup_inner' Metadata": [[702, "llvm-loop-unroll-and-jam-followup-inner-metadata"]], "'llvm.loop.unroll_and_jam.followup_outer' Metadata": [[702, "llvm-loop-unroll-and-jam-followup-outer-metadata"]], "'llvm.loop.unroll_and_jam.followup_remainder_inner' Metadata": [[702, "llvm-loop-unroll-and-jam-followup-remainder-inner-metadata"]], "'llvm.loop.unroll_and_jam.followup_remainder_outer' Metadata": [[702, "llvm-loop-unroll-and-jam-followup-remainder-outer-metadata"]], "'llvm.loop.vectorize' and 'llvm.loop.interleave'": [[702, "llvm-loop-vectorize-and-llvm-loop-interleave"]], "'llvm.loop.vectorize.enable' Metadata": [[702, "llvm-loop-vectorize-enable-metadata"]], "'llvm.loop.vectorize.followup_all' Metadata": [[702, "llvm-loop-vectorize-followup-all-metadata"]], "'llvm.loop.vectorize.followup_epilogue' Metadata": [[702, "llvm-loop-vectorize-followup-epilogue-metadata"]], "'llvm.loop.vectorize.followup_vectorized' Metadata": [[702, "llvm-loop-vectorize-followup-vectorized-metadata"]], "'llvm.loop.vectorize.predicate.enable' Metadata": [[702, "llvm-loop-vectorize-predicate-enable-metadata"]], "'llvm.loop.vectorize.scalable.enable' Metadata": [[702, "llvm-loop-vectorize-scalable-enable-metadata"]], "'llvm.loop.vectorize.width' Metadata": [[702, "llvm-loop-vectorize-width-metadata"]], "'llvm.lrint.*' Intrinsic": [[702, "llvm-lrint-intrinsic"]], "'llvm.lround.*' Intrinsic": [[702, "llvm-lround-intrinsic"]], "'llvm.masked.compressstore.*' Intrinsics": [[702, "llvm-masked-compressstore-intrinsics"]], "'llvm.masked.expandload.*' Intrinsics": [[702, "llvm-masked-expandload-intrinsics"]], "'llvm.masked.gather.*' Intrinsics": [[702, "llvm-masked-gather-intrinsics"]], "'llvm.masked.load.*' Intrinsics": [[702, "llvm-masked-load-intrinsics"]], "'llvm.masked.scatter.*' Intrinsics": [[702, "llvm-masked-scatter-intrinsics"]], "'llvm.masked.store.*' Intrinsics": [[702, "llvm-masked-store-intrinsics"]], "'llvm.matrix.column.major.load.*' Intrinsic": [[702, "llvm-matrix-column-major-load-intrinsic"]], "'llvm.matrix.column.major.store.*' Intrinsic": [[702, "llvm-matrix-column-major-store-intrinsic"]], "'llvm.matrix.multiply.*' Intrinsic": [[702, "llvm-matrix-multiply-intrinsic"]], "'llvm.matrix.transpose.*' Intrinsic": [[702, "llvm-matrix-transpose-intrinsic"]], "'llvm.maximum.*' Intrinsic": [[702, "llvm-maximum-intrinsic"]], "'llvm.maxnum.*' Intrinsic": [[702, "llvm-maxnum-intrinsic"]], "'llvm.memcpy' Intrinsic": [[702, "llvm-memcpy-intrinsic"]], "'llvm.memcpy.element.unordered.atomic' Intrinsic": [[702, "llvm-memcpy-element-unordered-atomic-intrinsic"]], "'llvm.memcpy.inline' Intrinsic": [[702, "llvm-memcpy-inline-intrinsic"]], "'llvm.memmove' Intrinsic": [[702, "llvm-memmove-intrinsic"]], "'llvm.memmove.element.unordered.atomic' Intrinsic": [[702, "llvm-memmove-element-unordered-atomic-intrinsic"]], "'llvm.memset.*' Intrinsics": [[702, "llvm-memset-intrinsics"]], "'llvm.memset.element.unordered.atomic' Intrinsic": [[702, "llvm-memset-element-unordered-atomic-intrinsic"]], "'llvm.minimum.*' Intrinsic": [[702, "llvm-minimum-intrinsic"]], "'llvm.minnum.*' Intrinsic": [[702, "llvm-minnum-intrinsic"]], "'llvm.nearbyint.*' Intrinsic": [[702, "llvm-nearbyint-intrinsic"]], "'llvm.nvvm.barrier0'": [[715, "llvm-nvvm-barrier0"]], "'llvm.nvvm.ptr.*.to.gen' Intrinsics": [[715, "llvm-nvvm-ptr-to-gen-intrinsics"]], "'llvm.nvvm.ptr.gen.to.*' Intrinsics": [[715, "llvm-nvvm-ptr-gen-to-intrinsics"]], "'llvm.nvvm.read.ptx.sreg.*'": [[715, "llvm-nvvm-read-ptx-sreg"]], "'llvm.objc.autorelease' Intrinsic": [[702, "llvm-objc-autorelease-intrinsic"]], "'llvm.objc.autoreleasePoolPop' Intrinsic": [[702, "llvm-objc-autoreleasepoolpop-intrinsic"]], "'llvm.objc.autoreleasePoolPush' Intrinsic": [[702, "llvm-objc-autoreleasepoolpush-intrinsic"]], "'llvm.objc.autoreleaseReturnValue' Intrinsic": [[702, "llvm-objc-autoreleasereturnvalue-intrinsic"]], "'llvm.objc.copyWeak' Intrinsic": [[702, "llvm-objc-copyweak-intrinsic"]], "'llvm.objc.destroyWeak' Intrinsic": [[702, "llvm-objc-destroyweak-intrinsic"]], "'llvm.objc.initWeak' Intrinsic": [[702, "llvm-objc-initweak-intrinsic"]], "'llvm.objc.loadWeak' Intrinsic": [[702, "llvm-objc-loadweak-intrinsic"]], "'llvm.objc.loadWeakRetained' Intrinsic": [[702, "llvm-objc-loadweakretained-intrinsic"]], "'llvm.objc.moveWeak' Intrinsic": [[702, "llvm-objc-moveweak-intrinsic"]], "'llvm.objc.release' Intrinsic": [[702, "llvm-objc-release-intrinsic"]], "'llvm.objc.retain' Intrinsic": [[702, "llvm-objc-retain-intrinsic"]], "'llvm.objc.retainAutorelease' Intrinsic": [[702, "llvm-objc-retainautorelease-intrinsic"]], "'llvm.objc.retainAutoreleaseReturnValue' Intrinsic": [[702, "llvm-objc-retainautoreleasereturnvalue-intrinsic"]], "'llvm.objc.retainAutoreleasedReturnValue' Intrinsic": [[702, "llvm-objc-retainautoreleasedreturnvalue-intrinsic"]], "'llvm.objc.retainBlock' Intrinsic": [[702, "llvm-objc-retainblock-intrinsic"]], "'llvm.objc.storeStrong' Intrinsic": [[702, "llvm-objc-storestrong-intrinsic"]], "'llvm.objc.storeWeak' Intrinsic": [[702, "llvm-objc-storeweak-intrinsic"]], "'llvm.objectsize' Intrinsic": [[702, "llvm-objectsize-intrinsic"]], "'llvm.pcmarker' Intrinsic": [[702, "llvm-pcmarker-intrinsic"]], "'llvm.pow.*' Intrinsic": [[702, "llvm-pow-intrinsic"]], "'llvm.powi.*' Intrinsic": [[702, "llvm-powi-intrinsic"]], "'llvm.prefetch' Intrinsic": [[702, "llvm-prefetch-intrinsic"]], "'llvm.preserve.array.access.index' Intrinsic": [[702, "llvm-preserve-array-access-index-intrinsic"]], "'llvm.preserve.struct.access.index' Intrinsic": [[702, "llvm-preserve-struct-access-index-intrinsic"]], "'llvm.preserve.union.access.index' Intrinsic": [[702, "llvm-preserve-union-access-index-intrinsic"]], "'llvm.ptr.annotation.*' Intrinsic": [[702, "llvm-ptr-annotation-intrinsic"]], "'llvm.ptrmask' Intrinsic": [[702, "llvm-ptrmask-intrinsic"]], "'llvm.read_register', 'llvm.read_volatile_register', and 'llvm.write_register' Intrinsics": [[702, "llvm-read-register-llvm-read-volatile-register-and-llvm-write-register-intrinsics"]], "'llvm.readcyclecounter' Intrinsic": [[702, "llvm-readcyclecounter-intrinsic"]], "'llvm.returnaddress' Intrinsic": [[702, "llvm-returnaddress-intrinsic"]], "'llvm.rint.*' Intrinsic": [[702, "llvm-rint-intrinsic"]], "'llvm.round.*' Intrinsic": [[702, "llvm-round-intrinsic"]], "'llvm.roundeven.*' Intrinsic": [[702, "llvm-roundeven-intrinsic"]], "'llvm.sadd.sat.*' Intrinsics": [[702, "llvm-sadd-sat-intrinsics"]], "'llvm.sadd.with.overflow.*' Intrinsics": [[702, "llvm-sadd-with-overflow-intrinsics"]], "'llvm.sdiv.fix.*' Intrinsics": [[702, "llvm-sdiv-fix-intrinsics"]], "'llvm.sdiv.fix.sat.*' Intrinsics": [[702, "llvm-sdiv-fix-sat-intrinsics"]], "'llvm.seh.scope.begin' and 'llvm.seh.scope.end' Intrinsics": [[702, "llvm-seh-scope-begin-and-llvm-seh-scope-end-intrinsics"]], "'llvm.seh.try.begin' and 'llvm.seh.try.end' Intrinsics": [[702, "llvm-seh-try-begin-and-llvm-seh-try-end-intrinsics"]], "'llvm.set.loop.iterations.*' Intrinsic": [[702, "llvm-set-loop-iterations-intrinsic"]], "'llvm.set.rounding' Intrinsic": [[702, "llvm-set-rounding-intrinsic"]], "'llvm.sideeffect' Intrinsic": [[702, "llvm-sideeffect-intrinsic"]], "'llvm.sin.*' Intrinsic": [[702, "llvm-sin-intrinsic"]], "'llvm.smax.*' Intrinsic": [[702, "llvm-smax-intrinsic"]], "'llvm.smin.*' Intrinsic": [[702, "llvm-smin-intrinsic"]], "'llvm.smul.fix.*' Intrinsics": [[702, "llvm-smul-fix-intrinsics"]], "'llvm.smul.fix.sat.*' Intrinsics": [[702, "llvm-smul-fix-sat-intrinsics"]], "'llvm.smul.with.overflow.*' Intrinsics": [[702, "llvm-smul-with-overflow-intrinsics"]], "'llvm.sponentry' Intrinsic": [[702, "llvm-sponentry-intrinsic"]], "'llvm.sqrt.*' Intrinsic": [[702, "llvm-sqrt-intrinsic"]], "'llvm.ssa.copy' Intrinsic": [[702, "llvm-ssa-copy-intrinsic"]], "'llvm.sshl.sat.*' Intrinsics": [[702, "llvm-sshl-sat-intrinsics"]], "'llvm.ssub.sat.*' Intrinsics": [[702, "llvm-ssub-sat-intrinsics"]], "'llvm.ssub.with.overflow.*' Intrinsics": [[702, "llvm-ssub-with-overflow-intrinsics"]], "'llvm.stackguard' Intrinsic": [[702, "llvm-stackguard-intrinsic"]], "'llvm.stackprotector' Intrinsic": [[702, "llvm-stackprotector-intrinsic"]], "'llvm.stackrestore' Intrinsic": [[702, "llvm-stackrestore-intrinsic"]], "'llvm.stacksave' Intrinsic": [[702, "llvm-stacksave-intrinsic"]], "'llvm.start.loop.iterations.*' Intrinsic": [[702, "llvm-start-loop-iterations-intrinsic"]], "'llvm.strip.invariant.group' Intrinsic": [[702, "llvm-strip-invariant-group-intrinsic"]], "'llvm.swift.async.context.addr' Intrinsic": [[702, "llvm-swift-async-context-addr-intrinsic"]], "'llvm.test.set.loop.iterations.*' Intrinsic": [[702, "llvm-test-set-loop-iterations-intrinsic"]], "'llvm.test.start.loop.iterations.*' Intrinsic": [[702, "llvm-test-start-loop-iterations-intrinsic"]], "'llvm.thread.pointer' Intrinsic": [[702, "llvm-thread-pointer-intrinsic"]], "'llvm.trap' Intrinsic": [[702, "llvm-trap-intrinsic"]], "'llvm.trunc.*' Intrinsic": [[702, "llvm-trunc-intrinsic"]], "'llvm.type.checked.load' Intrinsic": [[702, "llvm-type-checked-load-intrinsic"]], "'llvm.type.test' Intrinsic": [[702, "llvm-type-test-intrinsic"]], "'llvm.uadd.sat.*' Intrinsics": [[702, "llvm-uadd-sat-intrinsics"]], "'llvm.uadd.with.overflow.*' Intrinsics": [[702, "llvm-uadd-with-overflow-intrinsics"]], "'llvm.ubsantrap' Intrinsic": [[702, "llvm-ubsantrap-intrinsic"]], "'llvm.udiv.fix.*' Intrinsics": [[702, "llvm-udiv-fix-intrinsics"]], "'llvm.udiv.fix.sat.*' Intrinsics": [[702, "llvm-udiv-fix-sat-intrinsics"]], "'llvm.umax.*' Intrinsic": [[702, "llvm-umax-intrinsic"]], "'llvm.umin.*' Intrinsic": [[702, "llvm-umin-intrinsic"]], "'llvm.umul.fix.*' Intrinsics": [[702, "llvm-umul-fix-intrinsics"]], "'llvm.umul.fix.sat.*' Intrinsics": [[702, "llvm-umul-fix-sat-intrinsics"]], "'llvm.umul.with.overflow.*' Intrinsics": [[702, "llvm-umul-with-overflow-intrinsics"]], "'llvm.ushl.sat.*' Intrinsics": [[702, "llvm-ushl-sat-intrinsics"]], "'llvm.usub.sat.*' Intrinsics": [[702, "llvm-usub-sat-intrinsics"]], "'llvm.usub.with.overflow.*' Intrinsics": [[702, "llvm-usub-with-overflow-intrinsics"]], "'llvm.va_copy' Intrinsic": [[702, "llvm-va-copy-intrinsic"]], "'llvm.va_end' Intrinsic": [[702, "llvm-va-end-intrinsic"]], "'llvm.va_start' Intrinsic": [[702, "llvm-va-start-intrinsic"]], "'llvm.var.annotation' Intrinsic": [[702, "llvm-var-annotation-intrinsic"]], "'llvm.vector.reduce.add.*' Intrinsic": [[702, "llvm-vector-reduce-add-intrinsic"]], "'llvm.vector.reduce.and.*' Intrinsic": [[702, "llvm-vector-reduce-and-intrinsic"]], "'llvm.vector.reduce.fadd.*' Intrinsic": [[702, "llvm-vector-reduce-fadd-intrinsic"]], "'llvm.vector.reduce.fmax.*' Intrinsic": [[702, "llvm-vector-reduce-fmax-intrinsic"]], "'llvm.vector.reduce.fmin.*' Intrinsic": [[702, "llvm-vector-reduce-fmin-intrinsic"]], "'llvm.vector.reduce.fmul.*' Intrinsic": [[702, "llvm-vector-reduce-fmul-intrinsic"]], "'llvm.vector.reduce.mul.*' Intrinsic": [[702, "llvm-vector-reduce-mul-intrinsic"]], "'llvm.vector.reduce.or.*' Intrinsic": [[702, "llvm-vector-reduce-or-intrinsic"]], "'llvm.vector.reduce.smax.*' Intrinsic": [[702, "llvm-vector-reduce-smax-intrinsic"]], "'llvm.vector.reduce.smin.*' Intrinsic": [[702, "llvm-vector-reduce-smin-intrinsic"]], "'llvm.vector.reduce.umax.*' Intrinsic": [[702, "llvm-vector-reduce-umax-intrinsic"]], "'llvm.vector.reduce.umin.*' Intrinsic": [[702, "llvm-vector-reduce-umin-intrinsic"]], "'llvm.vector.reduce.xor.*' Intrinsic": [[702, "llvm-vector-reduce-xor-intrinsic"]], "'llvm.vp.add.*' Intrinsics": [[702, "llvm-vp-add-intrinsics"]], "'llvm.vp.and.*' Intrinsics": [[702, "llvm-vp-and-intrinsics"]], "'llvm.vp.ashr.*' Intrinsics": [[702, "llvm-vp-ashr-intrinsics"]], "'llvm.vp.fadd.*' Intrinsics": [[702, "llvm-vp-fadd-intrinsics"]], "'llvm.vp.fdiv.*' Intrinsics": [[702, "llvm-vp-fdiv-intrinsics"]], "'llvm.vp.fmul.*' Intrinsics": [[702, "llvm-vp-fmul-intrinsics"]], "'llvm.vp.frem.*' Intrinsics": [[702, "llvm-vp-frem-intrinsics"]], "'llvm.vp.fsub.*' Intrinsics": [[702, "llvm-vp-fsub-intrinsics"]], "'llvm.vp.lshr.*' Intrinsics": [[702, "llvm-vp-lshr-intrinsics"]], "'llvm.vp.mul.*' Intrinsics": [[702, "llvm-vp-mul-intrinsics"]], "'llvm.vp.or.*' Intrinsics": [[702, "llvm-vp-or-intrinsics"]], "'llvm.vp.sdiv.*' Intrinsics": [[702, "llvm-vp-sdiv-intrinsics"]], "'llvm.vp.shl.*' Intrinsics": [[702, "llvm-vp-shl-intrinsics"]], "'llvm.vp.srem.*' Intrinsics": [[702, "llvm-vp-srem-intrinsics"]], "'llvm.vp.sub.*' Intrinsics": [[702, "llvm-vp-sub-intrinsics"]], "'llvm.vp.udiv.*' Intrinsics": [[702, "llvm-vp-udiv-intrinsics"]], "'llvm.vp.urem.*' Intrinsics": [[702, "llvm-vp-urem-intrinsics"]], "'llvm.vp.xor.*' Intrinsics": [[702, "llvm-vp-xor-intrinsics"]], "'llvm.vscale' Intrinsic": [[702, "llvm-vscale-intrinsic"]], "'load' Instruction": [[702, "load-instruction"]], "'lshr' Instruction": [[702, "lshr-instruction"]], "'mul' Instruction": [[702, "mul-instruction"]], "'noalias' and 'alias.scope' Metadata": [[702, "noalias-and-alias-scope-metadata"]], "'or' Instruction": [[702, "or-instruction"]], "'phi' Instruction": [[702, "phi-instruction"]], "'prof' Metadata": [[702, "prof-metadata"]], "'ptrtoint .. to' Instruction": [[702, "ptrtoint-to-instruction"]], "'range' Metadata": [[702, "range-metadata"]], "'resume' Instruction": [[702, "resume-instruction"]], "'ret' Instruction": [[702, "ret-instruction"]], "'sdiv' Instruction": [[702, "sdiv-instruction"]], "'select' Instruction": [[702, "select-instruction"]], "'sext .. to' Instruction": [[702, "sext-to-instruction"]], "'shl' Instruction": [[702, "shl-instruction"]], "'shufflevector' Instruction": [[702, "shufflevector-instruction"]], "'sitofp .. to' Instruction": [[702, "sitofp-to-instruction"]], "'srem' Instruction": [[702, "srem-instruction"]], "'store' Instruction": [[702, "store-instruction"]], "'sub' Instruction": [[702, "sub-instruction"]], "'switch' Instruction": [[702, "switch-instruction"]], "'tbaa' Metadata": [[702, "tbaa-metadata"]], "'tbaa.struct' Metadata": [[702, "tbaa-struct-metadata"]], "'trunc .. to' Instruction": [[702, "trunc-to-instruction"]], "'type' Metadata": [[702, "type-metadata"]], "'udiv' Instruction": [[702, "udiv-instruction"]], "'uitofp .. to' Instruction": [[702, "uitofp-to-instruction"]], "'unpredictable' Metadata": [[702, "unpredictable-metadata"]], "'unreachable' Instruction": [[702, "unreachable-instruction"]], "'urem' Instruction": [[702, "urem-instruction"]], "'va_arg' Instruction": [[702, "va-arg-instruction"]], "'xor' Instruction": [[702, "xor-instruction"]], "'zext .. to' Instruction": [[702, "zext-to-instruction"]], "-aa-eval: Exhaustive Alias Analysis Precision Evaluator": [[732, "aa-eval-exhaustive-alias-analysis-precision-evaluator"]], "-adce: Aggressive Dead Code Elimination": [[732, "adce-aggressive-dead-code-elimination"]], "-aggressive-instcombine: Combine expression patterns": [[732, "aggressive-instcombine-combine-expression-patterns"]], "-always-inline: Inliner for always_inline functions": [[732, "always-inline-inliner-for-always-inline-functions"]], "-argpromotion: Promote 'by reference' arguments to scalars": [[732, "argpromotion-promote-by-reference-arguments-to-scalars"]], "-basic-aa: Basic Alias Analysis (stateless AA impl)": [[732, "basic-aa-basic-alias-analysis-stateless-aa-impl"]], "-basiccg: Basic CallGraph Construction": [[732, "basiccg-basic-callgraph-construction"]], "-bb-vectorize: Basic-Block Vectorization": [[732, "bb-vectorize-basic-block-vectorization"]], "-block-placement: Profile Guided Basic Block Placement": [[732, "block-placement-profile-guided-basic-block-placement"]], "-break-crit-edges: Break critical edges in CFG": [[732, "break-crit-edges-break-critical-edges-in-cfg"]], "-codegenprepare: Optimize for code generation": [[732, "codegenprepare-optimize-for-code-generation"]], "-constmerge: Merge Duplicate Global Constants": [[732, "constmerge-merge-duplicate-global-constants"]], "-count-aa: Count Alias Analysis Query Responses": [[732, "count-aa-count-alias-analysis-query-responses"]], "-da: Dependence Analysis": [[732, "da-dependence-analysis"]], "-dce: Dead Code Elimination": [[732, "dce-dead-code-elimination"]], "-deadargelim: Dead Argument Elimination": [[732, "deadargelim-dead-argument-elimination"]], "-deadarghaX0r: Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)": [[732, "deadarghax0r-dead-argument-hacking-bugpoint-use-only-do-not-use"]], "-deadtypeelim: Dead Type Elimination": [[732, "deadtypeelim-dead-type-elimination"]], "-debug-aa: AA use debugger": [[732, "debug-aa-aa-use-debugger"]], "-die: Dead Instruction Elimination": [[732, "die-dead-instruction-elimination"]], "-domfrontier: Dominance Frontier Construction": [[732, "domfrontier-dominance-frontier-construction"]], "-domtree: Dominator Tree Construction": [[732, "domtree-dominator-tree-construction"]], "-dot-callgraph: Print Call Graph to \"dot\" file": [[732, "dot-callgraph-print-call-graph-to-dot-file"]], "-dot-cfg-only: Print CFG of function to \"dot\" file (with no function bodies)": [[732, "dot-cfg-only-print-cfg-of-function-to-dot-file-with-no-function-bodies"]], "-dot-cfg: Print CFG of function to \"dot\" file": [[732, "dot-cfg-print-cfg-of-function-to-dot-file"]], "-dot-dom-only: Print dominance tree of function to \"dot\" file (with no function bodies)": [[732, "dot-dom-only-print-dominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-dom: Print dominance tree of function to \"dot\" file": [[732, "dot-dom-print-dominance-tree-of-function-to-dot-file"]], "-dot-postdom-only: Print postdominance tree of function to \"dot\" file (with no function bodies)": [[732, "dot-postdom-only-print-postdominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-postdom: Print postdominance tree of function to \"dot\" file": [[732, "dot-postdom-print-postdominance-tree-of-function-to-dot-file"]], "-dse: Dead Store Elimination": [[732, "dse-dead-store-elimination"]], "-extract-blocks: Extract Basic Blocks From Module (for bugpoint use)": [[732, "extract-blocks-extract-basic-blocks-from-module-for-bugpoint-use"]], "-function-attrs: Deduce function attributes": [[732, "function-attrs-deduce-function-attributes"]], "-globaldce: Dead Global Elimination": [[732, "globaldce-dead-global-elimination"]], "-globalopt: Global Variable Optimizer": [[732, "globalopt-global-variable-optimizer"]], "-globalsmodref-aa: Simple mod/ref analysis for globals": [[732, "globalsmodref-aa-simple-mod-ref-analysis-for-globals"]], "-gvn: Global Value Numbering": [[732, "gvn-global-value-numbering"]], "-indvars: Canonicalize Induction Variables": [[732, "indvars-canonicalize-induction-variables"]], "-inline: Function Integration/Inlining": [[732, "inline-function-integration-inlining"]], "-instcombine: Combine redundant instructions": [[732, "instcombine-combine-redundant-instructions"]], "-instcount: Counts the various types of Instructions": [[732, "instcount-counts-the-various-types-of-instructions"]], "-instnamer: Assign names to anonymous instructions": [[732, "instnamer-assign-names-to-anonymous-instructions"]], "-internalize: Internalize Global Symbols": [[732, "internalize-internalize-global-symbols"]], "-intervals: Interval Partition Construction": [[732, "intervals-interval-partition-construction"]], "-ipsccp: Interprocedural Sparse Conditional Constant Propagation": [[732, "ipsccp-interprocedural-sparse-conditional-constant-propagation"]], "-iv-users: Induction Variable Users": [[732, "iv-users-induction-variable-users"]], "-jump-threading: Jump Threading": [[732, "jump-threading-jump-threading"]], "-lazy-value-info: Lazy Value Information Analysis": [[732, "lazy-value-info-lazy-value-information-analysis"]], "-lcssa: Loop-Closed SSA Form Pass": [[732, "lcssa-loop-closed-ssa-form-pass"]], "-libcall-aa: LibCall Alias Analysis": [[732, "libcall-aa-libcall-alias-analysis"]], "-licm: Loop Invariant Code Motion": [[732, "licm-loop-invariant-code-motion"]], "-lint: Statically lint-checks LLVM IR": [[732, "lint-statically-lint-checks-llvm-ir"]], "-loop-deletion: Delete dead loops": [[732, "loop-deletion-delete-dead-loops"]], "-loop-extract-single: Extract at most one loop into a new function": [[732, "loop-extract-single-extract-at-most-one-loop-into-a-new-function"]], "-loop-extract: Extract loops into new functions": [[732, "loop-extract-extract-loops-into-new-functions"]], "-loop-reduce: Loop Strength Reduction": [[732, "loop-reduce-loop-strength-reduction"]], "-loop-rotate: Rotate Loops": [[732, "loop-rotate-rotate-loops"]], "-loop-simplify: Canonicalize natural loops": [[732, "loop-simplify-canonicalize-natural-loops"]], "-loop-unroll-and-jam: Unroll and Jam loops": [[732, "loop-unroll-and-jam-unroll-and-jam-loops"]], "-loop-unroll: Unroll loops": [[732, "loop-unroll-unroll-loops"]], "-loop-unswitch: Unswitch loops": [[732, "loop-unswitch-unswitch-loops"]], "-loops: Natural Loop Information": [[732, "loops-natural-loop-information"]], "-loweratomic: Lower atomic intrinsics to non-atomic form": [[732, "loweratomic-lower-atomic-intrinsics-to-non-atomic-form"]], "-lowerinvoke: Lower invokes to calls, for unwindless code generators": [[732, "lowerinvoke-lower-invokes-to-calls-for-unwindless-code-generators"]], "-lowerswitch: Lower SwitchInsts to branches": [[732, "lowerswitch-lower-switchinsts-to-branches"]], "-mem2reg: Promote Memory to Register": [[732, "mem2reg-promote-memory-to-register"]], "-memcpyopt: MemCpy Optimization": [[732, "memcpyopt-memcpy-optimization"]], "-memdep: Memory Dependence Analysis": [[732, "memdep-memory-dependence-analysis"]], "-mergefunc: Merge Functions": [[732, "mergefunc-merge-functions"]], "-mergereturn: Unify function exit nodes": [[732, "mergereturn-unify-function-exit-nodes"]], "-module-debuginfo: Decodes module-level debug info": [[732, "module-debuginfo-decodes-module-level-debug-info"]], "-partial-inliner: Partial Inliner": [[732, "partial-inliner-partial-inliner"]], "-postdomfrontier: Post-Dominance Frontier Construction": [[732, "postdomfrontier-post-dominance-frontier-construction"]], "-postdomtree: Post-Dominator Tree Construction": [[732, "postdomtree-post-dominator-tree-construction"]], "-print-alias-sets: Alias Set Printer": [[732, "print-alias-sets-alias-set-printer"]], "-print-callgraph-sccs: Print SCCs of the Call Graph": [[732, "print-callgraph-sccs-print-sccs-of-the-call-graph"]], "-print-callgraph: Print a call graph": [[732, "print-callgraph-print-a-call-graph"]], "-print-cfg-sccs: Print SCCs of each function CFG": [[732, "print-cfg-sccs-print-sccs-of-each-function-cfg"]], "-print-dom-info: Dominator Info Printer": [[732, "print-dom-info-dominator-info-printer"]], "-print-externalfnconstants: Print external fn callsites passed constants": [[732, "print-externalfnconstants-print-external-fn-callsites-passed-constants"]], "-print-function: Print function to stderr": [[732, "print-function-print-function-to-stderr"]], "-print-module: Print module to stderr": [[732, "print-module-print-module-to-stderr"]], "-print-used-types: Find Used Types": [[732, "print-used-types-find-used-types"]], "-prune-eh: Remove unused exception handling info": [[732, "prune-eh-remove-unused-exception-handling-info"]], "-reassociate: Reassociate expressions": [[732, "reassociate-reassociate-expressions"]], "-reg2mem: Demote all values to stack slots": [[732, "reg2mem-demote-all-values-to-stack-slots"]], "-regions: Detect single entry single exit regions": [[732, "regions-detect-single-entry-single-exit-regions"]], "-rel-lookup-table-converter: Relative lookup table converter": [[732, "rel-lookup-table-converter-relative-lookup-table-converter"]], "-scalar-evolution: Scalar Evolution Analysis": [[732, "scalar-evolution-scalar-evolution-analysis"]], "-sccp: Sparse Conditional Constant Propagation": [[732, "sccp-sparse-conditional-constant-propagation"]], "-scev-aa: ScalarEvolution-based Alias Analysis": [[732, "scev-aa-scalarevolution-based-alias-analysis"]], "-simplifycfg: Simplify the CFG": [[732, "simplifycfg-simplify-the-cfg"]], "-sink: Code sinking": [[732, "sink-code-sinking"]], "-sroa: Scalar Replacement of Aggregates": [[732, "sroa-scalar-replacement-of-aggregates"]], "-stack-safety: Stack Safety Analysis": [[732, "stack-safety-stack-safety-analysis"]], "-strip-dead-debug-info: Strip debug info for unused symbols": [[732, "strip-dead-debug-info-strip-debug-info-for-unused-symbols"]], "-strip-dead-prototypes: Strip Unused Function Prototypes": [[732, "strip-dead-prototypes-strip-unused-function-prototypes"]], "-strip-debug-declare: Strip all llvm.dbg.declare intrinsics": [[732, "strip-debug-declare-strip-all-llvm-dbg-declare-intrinsics"]], "-strip-nondebug: Strip all symbols, except dbg symbols, from a module": [[732, "strip-nondebug-strip-all-symbols-except-dbg-symbols-from-a-module"]], "-strip: Strip all symbols from a module": [[732, "strip-strip-all-symbols-from-a-module"]], "-tailcallelim: Tail Call Elimination": [[732, "tailcallelim-tail-call-elimination"]], "-targetdata: Target Data Layout": [[732, "targetdata-target-data-layout"]], "-transform-warning: Report missed forced transformations": [[732, "transform-warning-report-missed-forced-transformations"]], "-verify: Module Verifier": [[732, "verify-module-verifier"]], "-view-cfg-only: View CFG of function (with no function bodies)": [[732, "view-cfg-only-view-cfg-of-function-with-no-function-bodies"]], "-view-cfg: View CFG of function": [[732, "view-cfg-view-cfg-of-function"]], "-view-dom-only: View dominance tree of function (with no function bodies)": [[732, "view-dom-only-view-dominance-tree-of-function-with-no-function-bodies"]], "-view-dom: View dominance tree of function": [[732, "view-dom-view-dominance-tree-of-function"]], "-view-postdom-only: View postdominance tree of function (with no function bodies)": [[732, "view-postdom-only-view-postdominance-tree-of-function-with-no-function-bodies"]], "-view-postdom: View postdominance tree of function": [[732, "view-postdom-view-postdominance-tree-of-function"]], ".amd_kernel_code_t": [[582, "amd-kernel-code-t"]], ".amdgcn.gfx_generation_minor": [[582, "amdgcn-gfx-generation-minor"]], ".amdgcn.gfx_generation_number": [[582, "amdgcn-gfx-generation-number"]], ".amdgcn.gfx_generation_stepping": [[582, "amdgcn-gfx-generation-stepping"]], ".amdgcn.next_free_sgpr": [[582, "amdgcn-next-free-sgpr"]], ".amdgcn.next_free_vgpr": [[582, "amdgcn-next-free-vgpr"]], ".amdgcn_target <target-triple> \"-\" <target-id>": [[582, "amdgcn-target-target-triple-target-id"]], ".amdgpu_hsa_kernel (name)": [[582, "amdgpu-hsa-kernel-name"]], ".amdgpu_metadata": [[582, "amdgpu-metadata"]], ".amdhsa_kernel <name>": [[582, "amdhsa-kernel-name"]], ".cv_def_range Directive": [[663, "cv-def-range-directive"]], ".cv_file Directive": [[663, "cv-file-directive"]], ".cv_filechecksumoffset Directive": [[663, "cv-filechecksumoffset-directive"]], ".cv_filechecksums Directive": [[663, "cv-filechecksums-directive"]], ".cv_fpo_data Directive": [[663, "cv-fpo-data-directive"]], ".cv_func_id Directive": [[663, "cv-func-id-directive"]], ".cv_inline_linetable Directive": [[663, "cv-inline-linetable-directive"]], ".cv_inline_site_id Directive": [[663, "cv-inline-site-id-directive"]], ".cv_linetable Directive": [[663, "cv-linetable-directive"]], ".cv_loc Directive": [[663, "cv-loc-directive"]], ".cv_stringtable Directive": [[663, "cv-stringtable-directive"]], ".debug_info section attribute form roles": [[577, "amdgpu-dwarf-debug-info-section-attribute-form-roles-table"]], ".hsa_code_object_isa [major, minor, stepping, vendor, arch]": [[582, "hsa-code-object-isa-major-minor-stepping-vendor-arch"]], ".hsa_code_object_version major, minor": [[582, "hsa-code-object-version-major-minor"]], ".kernel.sgpr_count": [[582, "kernel-sgpr-count"]], ".kernel.vgpr_count": [[582, "kernel-vgpr-count"]], ".linker-options Section (linker options)": [[663, "linker-options-section-linker-options"]], ".linkonce Directive": [[663, "linkonce-directive"]], ".o File Writing": [[599, "o-file-writing"]], ".option.machine_version_major": [[582, "option-machine-version-major"]], ".option.machine_version_minor": [[582, "option-machine-version-minor"]], ".option.machine_version_stepping": [[582, "option-machine-version-stepping"]], ".section Directive": [[663, "section-directive"], [663, "id3"]], "1. IR-level VP intrinsics": [[740, "ir-level-vp-intrinsics"]], "1.1.1\u00a0\u00a0\u00a0Concepts": [[761, "concepts"]], "1.10\u00a0\u00a0\u00a0Appendix A: Bang Operators": [[761, "appendix-a-bang-operators"]], "1.10\u00a0\u00a0\u00a0Printing Error Messages": [[760, "printing-error-messages"]], "1.11.1\u00a0\u00a0\u00a0The PrintRecords Backend": [[760, "the-printrecords-backend"]], "1.11.2\u00a0\u00a0\u00a0The PrintDetailedRecords Backend": [[760, "the-printdetailedrecords-backend"]], "1.11.3\u00a0\u00a0\u00a0Timing TableGen Phases": [[760, "timing-tablegen-phases"]], "1.11\u00a0\u00a0\u00a0Appendix B: Paste Operator Examples": [[761, "appendix-b-paste-operator-examples"]], "1.11\u00a0\u00a0\u00a0Debugging Tools": [[760, "debugging-tools"]], "1.12\u00a0\u00a0\u00a0Appendix C: Sample Record": [[761, "appendix-c-sample-record"]], "1.1\u00a0\u00a0\u00a0\u7c21\u4ecb": [[760, "introduction"], [761, "introduction"]], "1.2.1\u00a0\u00a0\u00a0RecordKeeper": [[760, "recordkeeper"]], "1.2.2\u00a0\u00a0\u00a0Record": [[760, "record"]], "1.2.3\u00a0\u00a0\u00a0RecordVal": [[760, "recordval"]], "1.2.4.1\u00a0\u00a0\u00a0BitsRecTy": [[760, "bitsrecty"]], "1.2.4.2\u00a0\u00a0\u00a0ListRecTy": [[760, "listrecty"]], "1.2.4.3\u00a0\u00a0\u00a0RecordRecTy": [[760, "recordrecty"]], "1.2.4\u00a0\u00a0\u00a0RecTy": [[760, "recty"]], "1.2.5.1\u00a0\u00a0\u00a0UnsetInit": [[760, "unsetinit"]], "1.2.5.2\u00a0\u00a0\u00a0TypedInit": [[760, "typedinit"]], "1.2.5.3\u00a0\u00a0\u00a0BitInit": [[760, "bitinit"]], "1.2.5.4\u00a0\u00a0\u00a0BitsInit": [[760, "bitsinit"]], "1.2.5.5\u00a0\u00a0\u00a0DagInit": [[760, "daginit"]], "1.2.5.6\u00a0\u00a0\u00a0DefInit": [[760, "definit"]], "1.2.5.7\u00a0\u00a0\u00a0IntInit": [[760, "intinit"]], "1.2.5.8\u00a0\u00a0\u00a0ListInit": [[760, "listinit"]], "1.2.5.9\u00a0\u00a0\u00a0StringInit": [[760, "stringinit"]], "1.2.5\u00a0\u00a0\u00a0Init": [[760, "init"]], "1.2\u00a0\u00a0\u00a0Data Structures": [[760, "data-structures"]], "1.2\u00a0\u00a0\u00a0Source Files": [[761, "source-files"]], "1.3.1\u00a0\u00a0\u00a0Literals": [[761, "literals"]], "1.3.2\u00a0\u00a0\u00a0Identifiers": [[761, "identifiers"]], "1.3.3\u00a0\u00a0\u00a0Bang operators": [[761, "bang-operators"]], "1.3.4\u00a0\u00a0\u00a0Include files": [[761, "include-files"]], "1.3\u00a0\u00a0\u00a0Creating a New Backend": [[760, "creating-a-new-backend"]], "1.3\u00a0\u00a0\u00a0Lexical Analysis": [[761, "lexical-analysis"]], "1.4\u00a0\u00a0\u00a0The Backend Skeleton": [[760, "the-backend-skeleton"]], "1.4\u00a0\u00a0\u00a0Types": [[761, "types"]], "1.5.1\u00a0\u00a0\u00a0Simple values": [[761, "simple-values"]], "1.5.2\u00a0\u00a0\u00a0Suffixed values": [[761, "suffixed-values"]], "1.5.3\u00a0\u00a0\u00a0The paste operator": [[761, "the-paste-operator"]], "1.5\u00a0\u00a0\u00a0Getting Classes": [[760, "getting-classes"]], "1.5\u00a0\u00a0\u00a0Values and Expressions": [[761, "values-and-expressions"]], "1.6.1.1\u00a0\u00a0\u00a0Record Bodies": [[761, "record-bodies"]], "1.6.10\u00a0\u00a0\u00a0foreach --- iterate over a sequence of statements": [[761, "foreach-iterate-over-a-sequence-of-statements"]], "1.6.11\u00a0\u00a0\u00a0if --- select statements based on a test": [[761, "if-select-statements-based-on-a-test"]], "1.6.12\u00a0\u00a0\u00a0assert --- check that a condition is true": [[761, "assert-check-that-a-condition-is-true"]], "1.6.1\u00a0\u00a0\u00a0class --- define an abstract record class": [[761, "class-define-an-abstract-record-class"]], "1.6.2\u00a0\u00a0\u00a0def --- define a concrete record": [[761, "def-define-a-concrete-record"]], "1.6.3\u00a0\u00a0\u00a0Examples: classes and records": [[761, "examples-classes-and-records"]], "1.6.4\u00a0\u00a0\u00a0let --- override fields in classes or records": [[761, "let-override-fields-in-classes-or-records"]], "1.6.5\u00a0\u00a0\u00a0multiclass --- define multiple records": [[761, "multiclass-define-multiple-records"]], "1.6.6\u00a0\u00a0\u00a0defm --- invoke multiclasses to define multiple records": [[761, "defm-invoke-multiclasses-to-define-multiple-records"]], "1.6.7\u00a0\u00a0\u00a0Examples: multiclasses and defms": [[761, "examples-multiclasses-and-defms"]], "1.6.8\u00a0\u00a0\u00a0defset --- create a definition set": [[761, "defset-create-a-definition-set"]], "1.6.9\u00a0\u00a0\u00a0defvar --- define a variable": [[761, "defvar-define-a-variable"]], "1.6\u00a0\u00a0\u00a0Getting Records": [[760, "getting-records"]], "1.6\u00a0\u00a0\u00a0Statements": [[761, "statements"]], "1.7.1\u00a0\u00a0\u00a0Directed acyclic graphs (DAGs)": [[761, "directed-acyclic-graphs-dags"]], "1.7.2\u00a0\u00a0\u00a0Defvar in a record body": [[761, "defvar-in-a-record-body"]], "1.7.3\u00a0\u00a0\u00a0How records are built": [[761, "how-records-are-built"]], "1.7\u00a0\u00a0\u00a0Additional Details": [[761, "additional-details"]], "1.7\u00a0\u00a0\u00a0Getting Record Names and Fields": [[760, "getting-record-names-and-fields"]], "1.8\u00a0\u00a0\u00a0Getting Record Superclasses": [[760, "getting-record-superclasses"]], "1.8\u00a0\u00a0\u00a0Using Classes as Subroutines": [[761, "using-classes-as-subroutines"]], "1.9\u00a0\u00a0\u00a0Emitting Text to the Output Stream": [[760, "emitting-text-to-the-output-stream"]], "1.9\u00a0\u00a0\u00a0Preprocessing Facilities": [[761, "preprocessing-facilities"]], "10,000 ft View": [[598, "ft-view"]], "1\u00a0\u00a0\u00a0TableGen Backend Developer's Guide": [[760, null]], "1\u00a0\u00a0\u00a0TableGen Programmer's Reference": [[761, null]], "2. CodeGen support": [[740, "codegen-support"]], "3-Stage Non-Determinism": [[584, "stage-non-determinism"]], "3. Lift InstSimplify/InstCombine/DAGCombiner to VP": [[740, "lift-instsimplify-instcombine-dagcombiner-to-vp"]], "32-Bit and 64-Bit DWARF Formats": [[577, "bit-and-64-bit-dwarf-formats"], [582, "bit-and-64-bit-dwarf-formats"]], "4. Deprecate llvm.masked.* / llvm.experimental.reduce.*": [[740, "deprecate-llvm-masked-llvm-experimental-reduce"]], "5. Predicated IR Instructions": [[740, "predicated-ir-instructions"]], "6-bit characters": [[589, "bit-characters"]], "64-bit load checking instructions": [[751, "bit-load-checking-instructions"]], "<algorithm>": [[652, "algorithm"]], "<deque>": [[734, "deque"]], "<list>": [[734, "list"]], "<map>": [[734, "map"]], "<math.h> and <cmath>": [[652, "math-h-and-cmath"]], "<set>": [[734, "set"]], "<std::complex>": [[652, "std-complex"]], "<vector>": [[734, "vector"]], "A": [[703, "a"]], "A Benchmark for the C/C++ Standard Library": [[738, "a-benchmark-for-the-c-c-standard-library"]], "A Bug to be Aware Of": [[695, "a-bug-to-be-aware-of"]], "A Spectre Variant #1 Mitigation Technique": [[751, "a-spectre-variant-1-mitigation-technique"]], "A flag-less alternative on Haswell, Zen and newer processors": [[751, "a-flag-less-alternative-on-haswell-zen-and-newer-processors"]], "A guide to Dockerfiles for building LLVM": [[660, null]], "A sorted 'vector'": [[734, "a-sorted-vector"], [734, "dss-sortedvectormap"]], "AAPCS": [[588, "aapcs"]], "AArch64 & ARM": [[653, "aarch64-arm"]], "AArch64 Target": [[692, "aarch64-target"]], "ABI": [[653, "abi"]], "ABI Breaking Checks": [[734, "abi-breaking-checks"]], "ABI Compatibility": [[737, "abi-compatibility"]], "ADDITIONAL OPTIONS": [[608, "additional-options"]], "AFL compatibility": [[704, "afl-compatibility"]], "AMDGPU": [[653, "amdgpu"]], "AMDGPU Address Spaces": [[582, "amdgpu-address-spaces-table"]], "AMDGPU Architectures": [[582, "amdgpu-architecture-table"]], "AMDGPU Clang Debug Options": [[582, "amdgpu-clang-debug-options-table"]], "AMDGPU Code Object V2 ELF Note Record Enumeration Values": [[582, "amdgpu-elf-note-record-enumeration-values-v2-table"]], "AMDGPU Code Object V2 ELF Note Records": [[582, "amdgpu-elf-note-records-v2-table"]], "AMDGPU Code Object V2 Supported Processors and Fixed Target Feature Settings": [[582, "amdgpu-elf-note-record-supported-processors-v2-table"]], "AMDGPU Code Object V3 to V4 ELF Note Record Enumeration Values": [[582, "amdgpu-elf-note-record-enumeration-values-table-v3-v4"]], "AMDGPU Code Object V3 to V4 ELF Note Records": [[582, "amdgpu-elf-note-records-table-v3-v4"]], "AMDGPU DWARF Address Class Mapping": [[582, "amdgpu-dwarf-address-class-mapping-table"]], "AMDGPU DWARF Address Space Mapping": [[582, "amdgpu-dwarf-address-space-mapping-table"]], "AMDGPU DWARF Register Mapping": [[582, "amdgpu-dwarf-register-mapping-table"]], "AMDGPU EF_AMDGPU_MACH Values": [[582, "amdgpu-ef-amdgpu-mach-table"]], "AMDGPU ELF Header": [[582, "amdgpu-elf-header-table"]], "AMDGPU ELF Header Enumeration Values": [[582, "amdgpu-elf-header-enumeration-values-table"]], "AMDGPU ELF Header e_flags for Code Object V2": [[582, "amdgpu-elf-header-e-flags-v2-table"]], "AMDGPU ELF Header e_flags for Code Object V3": [[582, "amdgpu-elf-header-e-flags-table-v3"]], "AMDGPU ELF Header e_flags for Code Object V4": [[582, "amdgpu-elf-header-e-flags-table-v4"]], "AMDGPU ELF Relocation Records": [[582, "amdgpu-elf-relocation-records-table"]], "AMDGPU ELF Sections": [[582, "amdgpu-elf-sections-table"]], "AMDGPU ELF Symbols": [[582, "amdgpu-elf-symbols-table"]], "AMDGPU Environments": [[582, "amdgpu-environment-table"]], "AMDGPU Instruction Syntax": [[579, null]], "AMDGPU Instructions Notation": [[578, null]], "AMDGPU LLVM IR Attributes": [[582, "amdgpu-llvm-ir-attributes-table"]], "AMDGPU Operating Systems": [[582, "amdgpu-os"]], "AMDGPU Processors": [[582, "amdgpu-processor-table"]], "AMDGPU Target Features": [[582, "amdgpu-target-features-table"]], "AMDGPU Trap Handler for AMDHSA OS Code Object V2": [[582, "amdgpu-trap-handler-for-amdhsa-os-v2-table"]], "AMDGPU Trap Handler for AMDHSA OS Code Object V3": [[582, "amdgpu-trap-handler-for-amdhsa-os-v3-table"]], "AMDGPU Trap Handler for AMDHSA OS Code Object V4": [[582, "amdgpu-trap-handler-for-amdhsa-os-v4-table"]], "AMDGPU Trap Handler for Non-AMDHSA OS": [[582, "amdgpu-trap-handler-for-non-amdhsa-os-table"]], "AMDGPU Vendors": [[582, "amdgpu-vendor-table"]], "AMDHSA": [[582, "amdhsa"]], "AMDHSA Code Object V2 Kernel Argument Metadata Map": [[582, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-v2-table"]], "AMDHSA Code Object V2 Kernel Attribute Metadata Map": [[582, "amdgpu-amdhsa-code-object-kernel-attribute-metadata-map-v2-table"]], "AMDHSA Code Object V2 Kernel Code Properties Metadata Map": [[582, "amdgpu-amdhsa-code-object-kernel-code-properties-metadata-map-v2-table"]], "AMDHSA Code Object V2 Kernel Metadata Map": [[582, "amdgpu-amdhsa-code-object-kernel-metadata-map-v2-table"]], "AMDHSA Code Object V2 Metadata Map": [[582, "amdgpu-amdhsa-code-object-metadata-map-v2-table"]], "AMDHSA Code Object V3 Kernel Argument Metadata Map": [[582, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-table-v3"]], "AMDHSA Code Object V3 Kernel Metadata Map": [[582, "amdgpu-amdhsa-code-object-kernel-metadata-map-table-v3"]], "AMDHSA Code Object V3 Metadata Map": [[582, "amdgpu-amdhsa-code-object-metadata-map-table-v3"]], "AMDHSA Code Object V4 Metadata Map Changes from Code Object V3 Metadata": [[582, "amdgpu-amdhsa-code-object-metadata-map-table-v4"]], "AMDHSA Kernel Assembler Directives": [[582, "amdhsa-kernel-directives-table"]], "AMDHSA LLVM Sync Scopes": [[582, "amdgpu-amdhsa-llvm-sync-scopes-table"]], "AMDHSA Memory Model Code Sequences GFX10": [[582, "amdgpu-amdhsa-memory-model-code-sequences-gfx10-table"]], "AMDHSA Memory Model Code Sequences GFX6-GFX9": [[582, "amdgpu-amdhsa-memory-model-code-sequences-gfx6-gfx9-table"]], "AMDHSA Memory Model Code Sequences GFX90A": [[582, "amdgpu-amdhsa-memory-model-code-sequences-gfx90a-table"]], "AMDHSA Memory Model Single Thread Optimization Constraints": [[582, "amdgpu-amdhsa-memory-model-single-thread-optimization-constraints-table"]], "AMDHSA Memory Spaces": [[582, "amdgpu-amdhsa-memory-spaces-table"]], "AMDPAL": [[582, "amdpal"]], "AMDPAL Code Object API Shader Metadata Map": [[582, "amdgpu-amdpal-code-object-api-shader-metadata-map-table"]], "AMDPAL Code Object Hardware Stage Map": [[582, "amdgpu-amdpal-code-object-hardware-stage-map-table"]], "AMDPAL Code Object Hardware Stage Metadata Map": [[582, "amdgpu-amdpal-code-object-hardware-stage-metadata-map-table"]], "AMDPAL Code Object Metadata Map": [[582, "amdgpu-amdpal-code-object-metadata-map-table"]], "AMDPAL Code Object Pipeline Metadata Map": [[582, "amdgpu-amdpal-code-object-pipeline-metadata-map-table"]], "AMDPAL Code Object Register Map": [[582, "amdgpu-amdpal-code-object-register-map-table"]], "AMDPAL Code Object Shader Function Map": [[582, "amdgpu-amdpal-code-object-shader-function-map-table"]], "AMDPAL Code Object Shader Function Metadata Map": [[582, "amdgpu-amdpal-code-object-shader-function-metadata-map-table"]], "AMDPAL Code Object Shader Map": [[582, "amdgpu-amdpal-code-object-shader-map-table"]], "AMDPAL User Data Mapping": [[582, "amdgpu-amdpal-code-object-metadata-user-data-mapping-table"]], "API Reference": [[742, "api-reference"]], "API: InstructionSelector": [[678, "api-instructionselector"]], "API: LegalizerInfo": [[680, "api-legalizerinfo"]], "API: RegisterBankInfo": [[683, "api-registerbankinfo"]], "ARM64/COFF-Dependent": [[663, "arm64-coff-dependent"]], "AST Extensions for If/Then/Else": [[797, "ast-extensions-for-if-then-else"]], "AST Extensions for the 'for' Loop": [[797, "ast-extensions-for-the-for-loop"]], "Abandoning a change": [[733, "abandoning-a-change"]], "Abbreviated Record Encoding": [[589, "abbreviated-record-encoding"]], "Abbreviation IDs": [[589, "abbreviation-ids"]], "Abbreviations": [[589, "abbreviations"]], "Absolute Expressions": [[581, "absolute-expressions"]], "Absolute Symbols": [[717, "absolute-symbols"]], "Absolute Symbols, Aliases, and Reexports": [[717, "absolute-symbols-aliases-and-reexports"]], "Abstract": [[589, "abstract"], [666, "abstract"], [668, "abstract"], [702, "abstract"], [738, "abstract"], [741, "abstract"], [756, "abstract"]], "Abstract Machine Model": [[755, "abstract-machine-model"]], "Accelerated Access": [[577, "accelerated-access"], [582, "accelerated-access"]], "Accepting membership": [[748, "accepting-membership"]], "Access": [[748, "access"]], "Accessing build results": [[733, "accessing-build-results"]], "Accumulating Predicate State": [[751, "accumulating-predicate-state"]], "Accurate Garbage Collection Intrinsics": [[702, "accurate-garbage-collection-intrinsics"]], "Achieving Isolation with LLVMContext": [[734, "achieving-isolation-with-llvmcontext"]], "Acknowledge All Reviewer Feedback": [[601, "acknowledge-all-reviewer-feedback"]], "Acquire": [[586, "acquire"]], "AcquireRelease": [[586, "acquirerelease"]], "Actively working on fixing bugs": [[592, "actively-working-on-fixing-bugs"]], "Add SelectionDAG node types": [[583, "add-selectiondag-node-types"]], "Add documentation and tests": [[583, "add-documentation-and-tests"]], "Add the intrinsic": [[583, "add-the-intrinsic"]], "Adding Finer Granularity": [[719, "adding-finer-granularity"]], "Adding Passes to a Pass Manager": [[716, "adding-passes-to-a-pass-manager"]], "Adding a JIT Compiler": [[796, "adding-a-jit-compiler"]], "Adding a New Target": [[659, "adding-a-new-target"]], "Adding a derived type": [[662, "adding-a-derived-type"]], "Adding a fundamental type": [[662, "adding-a-fundamental-type"]], "Adding a new SelectionDAG node": [[662, "adding-a-new-selectiondag-node"]], "Adding a new instruction": [[662, "adding-a-new-instruction"]], "Adding a new intrinsic function": [[662, "adding-a-new-intrinsic-function"]], "Adding a new type": [[662, "adding-a-new-type"]], "Adding an Established Project To the LLVM Monorepo": [[659, "adding-an-established-project-to-the-llvm-monorepo"]], "Adding debug counters to aid in debugging your code": [[734, "adding-debug-counters-to-aid-in-debugging-your-code"]], "Adding freeform text to help output": [[651, "adding-freeform-text-to-help-output"]], "Adding to this document": [[666, "adding-to-this-document"]], "Additional Documentation": [[582, "additional-documentation"]], "Additional Information": [[743, "additional-information"]], "Additional Topics": [[742, "additional-topics"], [769, "additional-topics"]], "Address Class Identifier": [[582, "address-class-identifier"]], "Address Class and Address Space Encodings": [[577, "address-class-and-address-space-encodings"]], "Address Computation": [[669, "address-computation"]], "Address Remapping": [[707, "address-remapping"]], "Address Space Conversion": [[715, "address-space-conversion"]], "Address Space Identifier": [[582, "address-space-identifier"]], "Address Spaces": [[582, "address-spaces"], [715, "address-spaces"], [715, "id11"]], "Address class": [[577, "amdgpu-dwarf-address-class-table"]], "Address class encodings": [[577, "amdgpu-dwarf-address-class-encodings-table"]], "Addresses of Basic Blocks": [[702, "addresses-of-basic-blocks"]], "Adjusting Existing Variables for Mutation": [[799, "adjusting-existing-variables-for-mutation"]], "Advanced Concepts": [[656, "advanced-concepts"]], "Advanced Topics": [[734, "advanced-topics"], [804, "advanced-topics"]], "Advanced features": [[704, "advanced-features"]], "Advantages": [[739, "advantages"]], "Advantages:": [[658, "advantages"]], "Advertisement": [[711, "advertisement"]], "Advice for using bugpoint": [[593, "advice-for-using-bugpoint"]], "Advice on Packaging LLVM": [[731, null]], "Aggregate Operations": [[702, "aggregate-operations"]], "Aggregate Types": [[702, "aggregate-types"]], "Aggregates": [[677, "aggregates"]], "Ahead-of-Time Compilation Mode": [[801, "ahead-of-time-compilation-mode"]], "Aim to Make Efficient Use of Everyone's Time": [[601, "aim-to-make-efficient-use-of-everyone-s-time"]], "Alias Summary": [[702, "alias-summary"]], "Alias analysis driven transformations": [[585, "alias-analysis-driven-transformations"]], "AliasAnalysis Class Overview": [[585, "aliasanalysis-class-overview"]], "AliasAnalysis chaining behavior": [[585, "aliasanalysis-chaining-behavior"]], "Aliases": [[702, "aliases"]], "Aliases and Reexports": [[717, "aliases-and-reexports"]], "Alignment": [[588, "alignment"]], "Alignment and Block Boundaries": [[726, "alignment-and-block-boundaries"]], "Allocating Stacklets": [[749, "allocating-stacklets"]], "Allocations Header": [[747, "allocations-header"]], "Allocator": [[747, "allocator"]], "Allocator Support": [[687, "allocator-support"]], "Alternative Approaches": [[705, "alternative-approaches"]], "Alternative using a cmake cache": [[692, "alternative-using-a-cmake-cache"]], "Ambiguous Transformation Order": [[767, "ambiguous-transformation-order"]], "An Example Using the LLVM Tool Chain": [[671, "an-example-using-the-llvm-tool-chain"], [673, "an-example-using-the-llvm-tool-chain"]], "Analysis Group Concepts": [[773, "analysis-group-concepts"]], "Analysis Passes": [[732, "analysis-passes"]], "Announce the Release": [[694, "announce-the-release"]], "Anonymous Namespaces": [[602, "anonymous-namespaces"]], "Appealing": [[746, "appealing"]], "Apple Clang Builds (A More Complex Bootstrap)": [[584, "apple-clang-builds-a-more-complex-bootstrap"]], "Applications/Libraries": [[738, "applications-libraries"]], "Architecture & Platform Information for Compiler Writers": [[653, null]], "Areas Requiring Attention": [[655, "areas-requiring-attention"]], "Argument Aliases": [[651, "argument-aliases"]], "Argument Handling": [[598, "argument-handling"]], "Arguments": [[702, "id680"], [702, "id685"], [702, "id690"], [702, "id695"], [702, "id700"], [702, "id705"], [702, "id710"], [702, "id715"], [702, "id720"], [702, "id725"], [702, "id730"], [702, "id735"], [702, "id740"], [702, "id745"]], "Arguments:": [[655, "arguments"], [655, "id5"], [655, "id8"], [655, "id11"], [655, "id14"], [655, "id17"], [655, "id20"], [655, "id22"], [655, "id26"], [655, "id29"], [655, "id32"], [655, "id35"], [655, "id38"], [655, "id40"], [655, "id42"], [655, "id45"], [655, "id47"], [655, "id50"], [655, "id54"], [655, "id57"], [655, "id59"], [655, "id62"], [702, "arguments"], [702, "id32"], [702, "id37"], [702, "id42"], [702, "id48"], [702, "id53"], [702, "id58"], [702, "id63"], [702, "id68"], [702, "id73"], [702, "id83"], [702, "id88"], [702, "id93"], [702, "id98"], [702, "id103"], [702, "id108"], [702, "id113"], [702, "id118"], [702, "id123"], [702, "id128"], [702, "id133"], [702, "id138"], [702, "id143"], [702, "id148"], [702, "id153"], [702, "id158"], [702, "id163"], [702, "id168"], [702, "id173"], [702, "id178"], [702, "id183"], [702, "id188"], [702, "id193"], [702, "id198"], [702, "id203"], [702, "id208"], [702, "id213"], [702, "id218"], [702, "id223"], [702, "id228"], [702, "id233"], [702, "id238"], [702, "id243"], [702, "id248"], [702, "id253"], [702, "id258"], [702, "id263"], [702, "id268"], [702, "id273"], [702, "id278"], [702, "id283"], [702, "id288"], [702, "id293"], [702, "id298"], [702, "id303"], [702, "id308"], [702, "id313"], [702, "id318"], [702, "id323"], [702, "id328"], [702, "id333"], [702, "id339"], [702, "id345"], [702, "id352"], [702, "id358"], [702, "id362"], [702, "id366"], [702, "id371"], [702, "id375"], [702, "id379"], [702, "id402"], [702, "id412"], [702, "id419"], [702, "id441"], [702, "id445"], [702, "id455"], [702, "id459"], [702, "id463"], [702, "id480"], [702, "id484"], [702, "id487"], [702, "id490"], [702, "id493"], [702, "id496"], [702, "id500"], [702, "id504"], [702, "id508"], [702, "id512"], [702, "id516"], [702, "id520"], [702, "id524"], [702, "id528"], [702, "id532"], [702, "id536"], [702, "id540"], [702, "id544"], [702, "id548"], [702, "id552"], [702, "id556"], [702, "id560"], [702, "id564"], [702, "id568"], [702, "id572"], [702, "id576"], [702, "id580"], [702, "id584"], [702, "id588"], [702, "id592"], [702, "id596"], [702, "id600"], [702, "id604"], [702, "id608"], [702, "id612"], [702, "id616"], [702, "id620"], [702, "id630"], [702, "id634"], [702, "id638"], [702, "id642"], [702, "id646"], [702, "id650"], [702, "id655"], [702, "id660"], [702, "id665"], [702, "id670"], [702, "id675"], [702, "id752"], [702, "id757"], [702, "id761"], [702, "id765"], [702, "id769"], [702, "id773"], [702, "id777"], [702, "id781"], [702, "id784"], [702, "id788"], [702, "id791"], [702, "id795"], [702, "id798"], [702, "id801"], [702, "id804"], [702, "id807"], [702, "id810"], [702, "id813"], [702, "id816"], [702, "id819"], [702, "id822"], [702, "id825"], [702, "id828"], [702, "id831"], [702, "id832"], [702, "id835"], [702, "id838"], [702, "id841"], [702, "id844"], [702, "id847"], [702, "id852"], [702, "id857"], [702, "id862"], [702, "id867"], [702, "id871"], [702, "id875"], [702, "id880"], [702, "id885"], [702, "id890"], [702, "id895"], [702, "id900"], [702, "id905"], [702, "id910"], [702, "id915"], [702, "id920"], [702, "id925"], [702, "id930"], [702, "id935"], [702, "id940"], [702, "id945"], [702, "id950"], [702, "id955"], [702, "id960"], [702, "id965"], [702, "id970"], [702, "id974"], [702, "id978"], [702, "id982"], [702, "id986"], [702, "id990"], [702, "id994"], [702, "id998"], [702, "id1002"], [702, "id1006"], [702, "id1010"], [702, "id1014"], [702, "id1018"], [702, "id1022"], [702, "id1026"], [702, "id1030"], [702, "id1034"], [702, "id1038"], [702, "id1042"], [702, "id1046"], [702, "id1050"], [702, "id1054"], [702, "id1058"], [702, "id1062"], [702, "id1066"], [702, "id1070"], [702, "id1074"], [702, "id1078"], [702, "id1082"], [702, "id1086"], [702, "id1090"], [702, "id1094"], [702, "id1098"], [702, "id1102"], [702, "id1106"], [702, "id1110"], [702, "id1114"], [702, "id1118"], [702, "id1122"], [702, "id1126"], [702, "id1130"], [702, "id1134"], [702, "id1138"], [702, "id1142"], [702, "id1146"], [702, "id1150"], [702, "id1154"], [702, "id1158"], [702, "id1162"], [702, "id1166"], [702, "id1170"], [702, "id1174"], [702, "id1181"], [702, "id1185"], [702, "id1189"], [702, "id1193"], [702, "id1196"], [702, "id1199"], [702, "id1203"], [702, "id1207"], [702, "id1211"], [702, "id1215"], [702, "id1219"], [702, "id1223"], [702, "id1227"], [702, "id1231"], [702, "id1234"], [702, "id1237"], [702, "id1240"], [702, "id1244"], [702, "id1248"], [702, "id1252"], [702, "id1258"], [702, "id1265"], [702, "id1271"], [702, "id1279"], [702, "id1284"], [702, "id1289"], [702, "id1330"], [702, "id1334"], [702, "id1338"]], "Arithmetic and Logical Operations": [[577, "arithmetic-and-logical-operations"]], "Arithmetic with Overflow Intrinsics": [[702, "arithmetic-with-overflow-intrinsics"]], "Arm Soft-Float Target": [[692, "arm-soft-float-target"]], "Arm architecture not given": [[692, "arm-architecture-not-given"]], "ArmNeon": [[759, "armneon"]], "ArmNeonSema": [[759, "armneonsema"]], "ArmNeonTest": [[759, "armneontest"]], "Armv6-m, Armv7-m and Armv7E-M targets": [[692, "armv6-m-armv7-m-and-armv7e-m-targets"]], "Array Type": [[702, "array-type"]], "Asm Table Formats": [[661, "asm-table-formats"]], "Asm template argument modifiers": [[702, "asm-template-argument-modifiers"]], "AsmMatcher": [[759, "asmmatcher"]], "AsmWriter": [[759, "asmwriter"]], "Assembler": [[582, "assembler"]], "Assembling a Toolchain:": [[690, "assembling-a-toolchain"]], "Assembly Parser": [[599, "assembly-parser"]], "Assembly Printer": [[771, "assembly-printer"]], "Assert Liberally": [[602, "assert-liberally"]], "Assume Operand Bundles": [[702, "assume-operand-bundles"]], "Async Lowering": [[655, "async-lowering"]], "Atomic Memory Ordering Constraints": [[702, "atomic-memory-ordering-constraints"]], "Atomic instructions": [[586, "atomic-instructions"]], "Atomic orderings": [[586, "atomic-orderings"]], "Atomics and Codegen": [[586, "atomics-and-codegen"]], "Atomics and IR optimization": [[586, "atomics-and-ir-optimization"]], "AttrBuilder": [[698, "attrbuilder"]], "AttrDocs": [[759, "attrdocs"]], "Attribute": [[698, "attribute"]], "Attribute Encodings": [[577, "attribute-encodings"]], "Attribute Groups": [[702, "attribute-groups"]], "Attribute Types": [[577, "attribute-types"]], "Attribute encodings": [[577, "amdgpu-dwarf-attribute-encodings-table"]], "Attribute names": [[577, "amdgpu-dwarf-attribute-names-table"]], "AttributeList": [[698, "attributelist"]], "Attributes by Tag Value (Informative)": [[577, "attributes-by-tag-value-informative"]], "Attributes by tag value": [[577, "amdgpu-dwarf-attributes-by-tag-value-table"]], "Attribution of Changes": [[659, "attribution-of-changes"]], "Audience": [[771, "audience"]], "Authoring Guidelines": [[752, "authoring-guidelines"]], "Auto-Vectorization in LLVM": [[770, null]], "Automatic Debugger Selection": [[593, "automatic-debugger-selection"]], "Automatic Linker Flags Named Metadata": [[702, "automatic-linker-flags-named-metadata"]], "Automatic lfence on Conditional Edges": [[751, "automatic-lfence-on-conditional-edges"]], "Availability and Status": [[701, "id10"]], "Available AliasAnalysis implementations": [[585, "available-aliasanalysis-implementations"]], "Available Fuzzers": [[667, "available-fuzzers"]], "Avoid loads and stores of large aggregate type": [[666, "avoid-loads-and-stores-of-large-aggregate-type"]], "Avoid std::endl": [[602, "avoid-std-endl"]], "Avoiding Heap Allocations": [[655, "avoiding-heap-allocations"]], "B": [[703, "b"]], "BINARY INPUT AND OUTPUT": [[633, "binary-input-and-output"]], "BUGS": [[620, "bugs"], [625, "bugs"], [627, "bugs"], [629, "bugs"], [632, "bugs"], [633, "bugs"], [634, "bugs"], [635, "bugs"], [642, "bugs"], [644, "bugs"], [645, "bugs"]], "Backend code generator bugs": [[696, "backend-code-generator-bugs"]], "Background": [[596, "background"], [657, "background"], [695, "background"]], "Background on Windows exceptions": [[661, "background-on-windows-exceptions"]], "Background on historical bugpoint issues": [[594, "background-on-historical-bugpoint-issues"]], "Barriers": [[715, "barriers"]], "Base & Derived Pointers": [[755, "base-derived-pointers"]], "Basic CMake usage": [[597, "usage"]], "Basic Commands": [[607, "basic-commands"]], "Basic Expression Parsing": [[794, "basic-expression-parsing"]], "Basic Inspection and Traversal Routines": [[734, "basic-inspection-and-traversal-routines"]], "Basic Mode": [[774, "basic-mode"]], "Basic Setup": [[695, "basic-setup"]], "Basic Steps": [[771, "basic-steps"]], "Basic Usage": [[637, "basic-usage"]], "Basic code required": [[772, "basic-code-required"], [773, "basic-code-required"]], "Basic migration": [[736, "basic-migration"]], "Basic operation": [[674, "basic-operation"]], "Basic usage": [[701, "basic-usage"]], "Basics": [[589, "basics"], [714, "basics"]], "Benchmarking tips": [[587, null]], "Benchmarks": [[738, "benchmarks"], [764, "benchmarks"]], "Beware of non-determinism due to ordering of pointers": [[602, "beware-of-non-determinism-due-to-ordering-of-pointers"]], "Beware of non-deterministic sorting order of equal elements": [[602, "beware-of-non-deterministic-sorting-order-of-equal-elements"]], "Beware unnecessary copies with auto": [[602, "beware-unnecessary-copies-with-auto"]], "Big bang": [[739, "big-bang"]], "Bigger Pieces of Work": [[654, "bigger-pieces-of-work"]], "Binary Expression Parsing": [[794, "binary-expression-parsing"]], "Binary Operations": [[702, "binary-operations"]], "Binary Operators": [[581, "binary-operators"]], "Bisecting": [[736, "bisecting"]], "Bisecting LLVM code": [[674, null]], "Bisecting across multiple roots": [[674, "bisecting-across-multiple-roots"]], "Bisecting commits": [[671, "bisecting-commits"]], "Bisection Index Values": [[719, "bisection-index-values"]], "Bit Manipulation Intrinsics": [[702, "bit-manipulation-intrinsics"]], "Bit storage containers (BitVector, SparseBitVector, CoalescingBitVector)": [[734, "bit-storage-containers-bitvector-sparsebitvector-coalescingbitvector"]], "BitValue": [[777, "bitvalue"]], "BitVector": [[734, "bitvector"]], "Bitcode Wrapper Format": [[589, "bitcode-wrapper-format"]], "Bitconverts": [[588, "bitconverts"]], "Bitstream Format": [[589, "bitstream-format"]], "Bitwise Binary Operations": [[702, "bitwise-binary-operations"]], "Blitz++": [[738, "blitz"]], "Block Bias": [[590, "block-bias"]], "Block Frequency": [[590, "block-frequency"]], "Block Mass": [[590, "block-mass"]], "Block References": [[708, "block-references"]], "Block Scalars": [[777, "block-scalars"]], "Blocks": [[589, "blocks"]], "Boolean Arguments": [[651, "boolean-arguments"]], "Bootstrap Builds": [[584, "bootstrap-builds"]], "Bottleneck Analysis": [[631, "bottleneck-analysis"]], "Braced Initializer Lists": [[602, "braced-initializer-lists"]], "Branch Folding and If Conversion": [[771, "branch-folding-and-if-conversion"]], "Branch Probability": [[590, "branch-probability"]], "Branch Weight": [[590, "branch-weight"]], "BranchInst": [[591, "branchinst"]], "Branching/Stashing/Updating for Local Development or Experiments": [[736, "branching-stashing-updating-for-local-development-or-experiments"]], "Buffer Underflow/Overflow Detection": [[687, "buffer-underflow-overflow-detection"]], "Bug Fixes": [[654, "bug-fixes"]], "Bug Reporting Process": [[744, "bug-reporting-process"]], "Bug Reports": [[654, "bug-reports"]], "Bugpoint Redesign": [[594, null]], "Bugs and Enhancements": [[755, "bugs-and-enhancements"]], "Build Bots": [[737, "build-bots"]], "Build The Binary Distribution": [[694, "build-the-binary-distribution"]], "Build-time use optimization": [[713, "build-time-use-optimization"]], "Building Clang with PGO": [[691, "building-clang-with-pgo"]], "Building a Distribution of LLVM": [[595, null]], "Building a JIT in LLVM": [[804, "building-a-jit-in-llvm"]], "Building a JIT: Adding Optimizations -- An introduction to ORC Layers": [[780, null]], "Building a JIT: Extreme Laziness - Using LazyReexports to JIT from ASTs": [[782, null]], "Building a JIT: Per-function Lazy Compilation": [[781, null]], "Building a JIT: Starting out with KaleidoscopeJIT": [[779, null]], "Building a single sub-project": [[736, "building-a-single-sub-project"]], "Building and Running": [[667, "building-and-running"]], "Building compiler-rt builtins for Arm": [[692, "building-compiler-rt-builtins-for-arm"]], "Building fallible iterators and iterator ranges": [[734, "building-fallible-iterators-and-iterator-ranges"]], "Building libc++:": [[690, "building-libc"]], "Building libc++abi:": [[690, "building-libc-abi"]], "Building libunwind:": [[690, "building-libunwind"]], "Building pass plugins": [[773, "building-pass-plugins"]], "Building the SelectionDAG": [[583, "building-the-selectiondag"]], "Building with XRay": [[775, "building-with-xray"]], "Buildmasters": [[688, "buildmasters"]], "Built In GC Strategies": [[668, "built-in-gc-strategies"]], "Built in register allocators": [[599, "built-in-register-allocators"]], "Built-in expect Instructions": [[591, "built-in-expect-instructions"]], "Built-in expect.with.probability Instruction": [[591, "built-in-expect-with-probability-instruction"]], "Built-in types": [[777, "built-in-types"]], "Builtin parsers": [[651, "builtin-parsers"]], "Bundled Instructions": [[708, "bundled-instructions"]], "C": [[703, "c"]], "C API": [[745, "c-api"]], "C API Changes": [[659, "c-api-changes"]], "C API Details": [[710, "c-api-details"]], "C type width Module Flags Metadata": [[702, "c-type-width-module-flags-metadata"]], "C++ Features": [[731, "c-features"]], "C++ Performance Benchmarks": [[738, "c-performance-benchmarks"]], "C++ Standard Library": [[602, "c-standard-library"]], "C++ Standard Versions": [[602, "c-standard-versions"]], "C++ special member functions information": [[750, "c-special-member-functions-information"]], "C++ specific debug information": [[750, "c-specific-debug-information"]], "C-SKY": [[653, "c-sky"]], "C/C++ front-end specific debug information": [[750, "c-c-front-end-specific-debug-information"]], "C/C++ function information": [[750, "c-c-function-information"]], "C/C++ global variable information": [[750, "c-c-global-variable-information"]], "C/C++ source file information": [[750, "c-c-source-file-information"]], "C99-style Hexadecimal Floating-point Constants": [[663, "c99-style-hexadecimal-floating-point-constants"]], "CFA Definition Instructions": [[577, "cfa-definition-instructions"]], "CFG Modifications": [[591, "cfg-modifications"]], "CFI": [[582, "cfi"]], "CFIIndex Operands": [[708, "cfiindex-operands"]], "CMake Caches": [[597, "cmake-caches"]], "CMake Primer": [[598, null]], "CODE GENERATION OPTIONS": [[611, "code-generation-options"]], "COFF Syntax": [[805, "coff-syntax"]], "COFF-SPECIFIC OPTIONS": [[645, "coff-specific-options"]], "COMMANDS": [[617, "commands"], [629, "commands"], [634, "commands"], [637, "commands"], [638, "commands"]], "COMPONENTS": [[616, "components"]], "CONSTANTS_BLOCK Contents": [[589, "constants-block-contents"]], "CORAL-2 Benchmarks": [[738, "coral-2-benchmarks"]], "CTags": [[759, "ctags"]], "Call Convention": [[582, "call-convention"]], "Call Frame Calling Address": [[577, "call-frame-calling-address"]], "Call Frame Information": [[577, "call-frame-information"], [577, "id4"], [582, "call-frame-information"]], "Call Frame Instruction Usage": [[577, "call-frame-instruction-usage"]], "Call Frame Instructions": [[577, "call-frame-instructions"]], "Call Site Attributes": [[702, "call-site-attributes"]], "Call frame instruction encodings": [[577, "amdgpu-dwarf-call-frame-instruction-encodings-table"]], "Call-clobbered registers": [[599, "call-clobbered-registers"]], "CallArgument Records": [[776, "callargument-records"]], "CallInst": [[591, "callinst"]], "Callee-cleanup Calling Conventions": [[700, "callee-cleanup-calling-conventions"]], "Calling Conventions": [[702, "calling-conventions"], [771, "calling-conventions"]], "CallingConv": [[759, "callingconv"]], "Calls": [[702, "calls"]], "Can Code Be Reviewed After It Is Committed?": [[601, "can-code-be-reviewed-after-it-is-committed"]], "Can GEP index into vector elements?": [[669, "can-gep-index-into-vector-elements"]], "Can I cast an object's address to integer and add it to null?": [[669, "can-i-cast-an-object-s-address-to-integer-and-add-it-to-null"]], "Can I compare two values computed with GEPs?": [[669, "can-i-compare-two-values-computed-with-geps"]], "Can I compile C or C++ code to platform-independent LLVM bitcode?": [[664, "can-i-compile-c-or-c-code-to-platform-independent-llvm-bitcode"]], "Can I compute the distance between two objects, and add that value to one address to compute the other address?": [[669, "can-i-compute-the-distance-between-two-objects-and-add-that-value-to-one-address-to-compute-the-other-address"]], "Can I do GEP with a different pointer type than the type of the underlying object?": [[669, "can-i-do-gep-with-a-different-pointer-type-than-the-type-of-the-underlying-object"]], "Can I do type-based alias analysis on LLVM IR?": [[669, "can-i-do-type-based-alias-analysis-on-llvm-ir"]], "Can I modify LLVM source code and redistribute the modified source?": [[664, "can-i-modify-llvm-source-code-and-redistribute-the-modified-source"]], "Can I modify the LLVM source code and redistribute binaries or other tools based on it, without redistributing the source?": [[664, "can-i-modify-the-llvm-source-code-and-redistribute-binaries-or-other-tools-based-on-it-without-redistributing-the-source"]], "Can array indices be negative?": [[669, "can-array-indices-be-negative"]], "Changes Relative to DWARF Version 5": [[577, "changes-relative-to-dwarf-version-5"]], "Changes to LLDB": [[743, "changes-to-lldb"]], "Changes to Sanitizers": [[743, "changes-to-sanitizers"]], "Changes to TableGen": [[743, "changes-to-tablegen"]], "Changes to building LLVM": [[743, "changes-to-building-llvm"]], "Changes to the AArch64 Backend": [[743, "changes-to-the-aarch64-backend"]], "Changes to the AMDGPU Target": [[743, "changes-to-the-amdgpu-target"]], "Changes to the ARM Backend": [[743, "changes-to-the-arm-backend"]], "Changes to the AVR Target": [[743, "changes-to-the-avr-target"]], "Changes to the C API": [[743, "changes-to-the-c-api"]], "Changes to the DAG infrastructure": [[743, "changes-to-the-dag-infrastructure"]], "Changes to the Debug Info": [[743, "changes-to-the-debug-info"]], "Changes to the FastISel infrastructure": [[743, "changes-to-the-fastisel-infrastructure"]], "Changes to the Go bindings": [[743, "changes-to-the-go-bindings"]], "Changes to the Hexagon Target": [[743, "changes-to-the-hexagon-target"]], "Changes to the LLVM IR": [[743, "changes-to-the-llvm-ir"]], "Changes to the LLVM tools": [[743, "changes-to-the-llvm-tools"]], "Changes to the MIPS Target": [[743, "changes-to-the-mips-target"]], "Changes to the OCaml bindings": [[743, "changes-to-the-ocaml-bindings"]], "Changes to the Policy": [[748, "changes-to-the-policy"]], "Changes to the PowerPC Target": [[743, "changes-to-the-powerpc-target"]], "Changes to the WebAssembly Target": [[743, "changes-to-the-webassembly-target"]], "Changes to the X86 Target": [[743, "changes-to-the-x86-target"]], "Chapter 1 Introduction": [[779, "chapter-1-introduction"]], "Chapter 2 Introduction": [[780, "chapter-2-introduction"], [794, "chapter-2-introduction"]], "Chapter 3 Introduction": [[781, "chapter-3-introduction"], [795, "chapter-3-introduction"]], "Chapter 4 Introduction": [[782, "chapter-4-introduction"], [796, "chapter-4-introduction"]], "Chapter 5 Introduction": [[797, "chapter-5-introduction"]], "Chapter 6 Introduction": [[798, "chapter-6-introduction"]], "Chapter 7 Introduction": [[799, "chapter-7-introduction"]], "Chapter 8 Introduction": [[800, "chapter-8-introduction"]], "Chapter 9 Introduction": [[801, "chapter-9-introduction"]], "Checkout LLVM from Git": [[671, "checkout-llvm-from-git"]], "Checkout/Clone Multiple Projects, with Commit Access": [[736, "checkout-clone-multiple-projects-with-commit-access"]], "Checkout/Clone a Single Project, with Commit Access": [[736, "checkout-clone-a-single-project-with-commit-access"]], "Choosing a target": [[800, "choosing-a-target"]], "Choosing new members": [[748, "choosing-new-members"]], "Chrome Trace Viewer Visualization": [[775, "chrome-trace-viewer-visualization"]], "Clang": [[747, "clang"], [769, "id2"]], "Clang BackEnds": [[759, "clang-backends"]], "Clang uses the host header files": [[692, "clang-uses-the-host-header-files"]], "ClangAttrClasses": [[759, "clangattrclasses"]], "ClangAttrDump": [[759, "clangattrdump"]], "ClangAttrImpl": [[759, "clangattrimpl"]], "ClangAttrList": [[759, "clangattrlist"]], "ClangAttrPCHRead": [[759, "clangattrpchread"]], "ClangAttrPCHWrite": [[759, "clangattrpchwrite"]], "ClangAttrParsedAttrImpl": [[759, "clangattrparsedattrimpl"]], "ClangAttrParsedAttrKinds": [[759, "clangattrparsedattrkinds"]], "ClangAttrParsedAttrList": [[759, "clangattrparsedattrlist"]], "ClangAttrParserStringSwitches": [[759, "clangattrparserstringswitches"]], "ClangAttrSpellingListIndex": [[759, "clangattrspellinglistindex"]], "ClangAttrSpellings": [[759, "clangattrspellings"]], "ClangAttrTemplateInstantiate": [[759, "clangattrtemplateinstantiate"]], "ClangAttrVisitor": [[759, "clangattrvisitor"]], "ClangCommentCommandInfo": [[759, "clangcommentcommandinfo"]], "ClangCommentCommandList": [[759, "clangcommentcommandlist"]], "ClangCommentHTMLNamedCharacterReferences": [[759, "clangcommenthtmlnamedcharacterreferences"]], "ClangCommentHTMLTags": [[759, "clangcommenthtmltags"]], "ClangCommentHTMLTagsProperties": [[759, "clangcommenthtmltagsproperties"]], "ClangCommentNodes": [[759, "clangcommentnodes"]], "ClangDeclNodes": [[759, "clangdeclnodes"]], "ClangDiagGroups": [[759, "clangdiaggroups"]], "ClangDiagsDefs": [[759, "clangdiagsdefs"]], "ClangDiagsIndexName": [[759, "clangdiagsindexname"]], "ClangSACheckers": [[759, "clangsacheckers"]], "ClangStmtNodes": [[759, "clangstmtnodes"]], "Class overviews": [[602, "class-overviews"]], "Cleanups": [[661, "cleanups"]], "Clients for debugging and evaluation of implementations": [[585, "clients-for-debugging-and-evaluation-of-implementations"]], "Clobber constraints": [[702, "clobber-constraints"]], "CoalescingBitVector": [[734, "coalescingbitvector"]], "Code Blocks": [[752, "code-blocks"]], "Code Conventions": [[582, "code-conventions"]], "Code Emission": [[599, "code-emission"]], "Code Generation": [[707, "code-generation"], [769, "code-generation"]], "Code Generation Setup": [[795, "code-generation-setup"]], "Code Generation for If/Then/Else": [[797, "code-generation-for-if-then-else"]], "Code Generation for the 'for' Loop": [[797, "code-generation-for-the-for-loop"]], "Code Generator Intrinsics": [[702, "code-generator-intrinsics"]], "Code Object Metadata": [[582, "code-object-metadata"], [582, "amdgpu-amdpal-code-object-metadata-section"]], "Code Object V2 Directives": [[582, "code-object-v2-directives"]], "Code Object V2 Example Source Code": [[582, "code-object-v2-example-source-code"]], "Code Object V2 Metadata": [[582, "code-object-v2-metadata"]], "Code Object V2 Note Records": [[582, "code-object-v2-note-records"]], "Code Object V2 Predefined Symbols": [[582, "code-object-v2-predefined-symbols"]], "Code Object V2 to V3 Target ID": [[582, "code-object-v2-to-v3-target-id"]], "Code Object V3 Kernel Descriptor": [[582, "code-object-v3-kernel-descriptor"], [582, "amdgpu-amdhsa-kernel-descriptor-v3-table"]], "Code Object V3 Metadata": [[582, "code-object-v3-metadata"]], "Code Object V3 to V4 Directives": [[582, "code-object-v3-to-v4-directives"]], "Code Object V3 to V4 Example Source Code": [[582, "code-object-v3-to-v4-example-source-code"]], "Code Object V3 to V4 Note Records": [[582, "code-object-v3-to-v4-note-records"]], "Code Object V3 to V4 Predefined Symbols": [[582, "code-object-v3-to-v4-predefined-symbols"]], "Code Object V4 Metadata": [[582, "code-object-v4-metadata"]], "Code Organization": [[756, "code-organization"]], "Code Owners": [[659, "code-owners"]], "Code Reviews": [[659, "code-reviews"]], "Code Reviews with Phabricator": [[733, null]], "Code Reviews, Speed, and Reciprocity": [[601, "code-reviews-speed-and-reciprocity"]], "Code Transformation Metadata": [[767, null]], "Code generator debugger": [[593, "code-generator-debugger"]], "Code-Review Workflow": [[601, "code-review-workflow"]], "CodeEmitter": [[759, "codeemitter"]], "CodeView": [[730, "codeview"]], "CodeView Debug Info Format": [[750, "codeview-debug-info-format"]], "CodeView Symbol Records": [[720, null]], "CodeView Type Record List": [[729, "codeview-type-record-list"]], "CodeView Type Records": [[721, null]], "CodeView-Dependent": [[663, "codeview-dependent"]], "Collaboration": [[748, "collaboration"]], "Collecting options as a set of flags": [[651, "collecting-options-as-a-set-of-flags"]], "Collector Requirements": [[668, "collector-requirements"]], "Color conversion": [[738, "color-conversion"]], "Comdats": [[702, "comdats"]], "Command Line Utilities": [[742, "command-line-utilities"]], "Command line flags": [[770, "command-line-flags"]], "Command-Line Options": [[594, "command-line-options"]], "CommandLine 2.0 Library Manual": [[651, null]], "Comment Formatting": [[602, "comment-formatting"]], "Commenting": [[602, "commenting"]], "Comments": [[708, "comments"]], "Commit an API Change in LLVM and Update the Sub-projects": [[736, "commit-an-api-change-in-llvm-and-update-the-sub-projects"]], "Commit messages": [[659, "commit-messages"]], "Committing a change": [[733, "committing-a-change"]], "Committing someone's change from Phabricator": [[733, "committing-someone-s-change-from-phabricator"]], "Common CMake Flags": [[764, "common-cmake-flags"]], "Common CMake configuration options:": [[690, "common-cmake-configuration-options"]], "Common Configuration Options": [[764, "common-configuration-options"]], "Common Issues": [[715, "common-issues"]], "Common Problems": [[671, "common-problems"], [673, "common-problems"]], "Community Testing": [[694, "community-testing"]], "Community wide proposals": [[670, "community-wide-proposals"]], "Comparison and logarithmical search": [[714, "comparison-and-logarithmical-search"]], "Compilation": [[764, "compilation"]], "Compilation Models": [[652, "compilation-models"]], "Compile Flags": [[731, "compile-flags"]], "Compile Unit": [[801, "compile-unit"]], "Compiler-rt builds but the tests fail to build": [[692, "compiler-rt-builds-but-the-tests-fail-to-build"]], "Compiler/Platform-specific topics": [[597, "compiler-platform-specific-topics"]], "Compiling CUDA Code": [[652, "compiling-cuda-code"]], "Compiling CUDA with clang": [[652, null]], "Compiling the LLVM Suite Source Code": [[671, "compiling-the-llvm-suite-source-code"]], "Complex Constants": [[702, "complex-constants"]], "ComplexPatterns": [[678, "complexpatterns"]], "Composite Location Description Operations": [[577, "composite-location-description-operations"]], "Composite Rules": [[680, "composite-rules"]], "Computing stack maps": [[668, "computing-stack-maps"]], "Concatenating Errors with joinErrors": [[734, "concatenating-errors-with-joinerrors"]], "Conclusions": [[794, "conclusions"]], "Concrete Bases and Deeper Hierarchies": [[695, "concrete-bases-and-deeper-hierarchies"]], "Confidentiality": [[748, "confidentiality"]], "Configuration": [[764, "configuration"]], "Configuring CMake": [[693, "configuring-cmake"]], "Configuring External Tests": [[765, "configuring-external-tests"]], "Configuring LLVM to Build Fuzzers": [[667, "configuring-llvm-to-build-fuzzers"]], "Configuring the Module": [[800, "configuring-the-module"]], "Connection to the ORC Runtime": [[701, "connection-to-the-orc-runtime"]], "Considerations": [[588, "considerations"]], "Consistent Semantics": [[756, "consistent-semantics"]], "Constant Expressions": [[702, "constant-expressions"]], "Constant Pool Indices": [[708, "constant-pool-indices"]], "Constants": [[676, "constants"], [702, "constants"]], "Constrained Floating-Point Intrinsics": [[702, "constrained-floating-point-intrinsics"]], "Constrained libm-equivalent Intrinsics": [[702, "constrained-libm-equivalent-intrinsics"]], "Constraining test execution": [[766, "constraining-test-execution"]], "Constraint Codes": [[702, "constraint-codes"]], "Constructing LinkGraphs": [[701, "constructing-linkgraphs"]], "Contents": [[750, "contents"]], "Contents of the Name Index": [[577, "contents-of-the-name-index"]], "Contextual markups": [[710, "contextual-markups"]], "Continuous Tracking with LNT": [[764, "continuous-tracking-with-lnt"]], "Continuously Running and Finding Bugs": [[667, "continuously-running-and-finding-bugs"]], "Contributing to LLVM": [[654, null]], "Control Flow": [[598, "control-flow"], [676, "control-flow"]], "Control Flow Operations": [[577, "control-flow-operations"]], "Control Flow Verification Tool Design Document": [[596, null]], "Controlling Fidelity": [[775, "controlling-fidelity"]], "Controlling options grouping": [[651, "controlling-options-grouping"]], "Controlling other formatting options": [[651, "controlling-other-formatting-options"]], "Controlling the number of occurrences required and allowed": [[651, "controlling-the-number-of-occurrences-required-and-allowed"]], "Controlling whether or not a value must be specified": [[651, "controlling-whether-or-not-a-value-must-be-specified"]], "Conventions": [[580, "conventions"], [581, "conventions"], [715, "conventions"]], "Conversion Operations": [[702, "conversion-operations"]], "Conversion of Floating-Point Values": [[581, "conversion-of-floating-point-values"]], "Conversion of Integer Values": [[581, "conversion-of-integer-values"]], "Conversion of Relocatable Values": [[581, "conversion-of-relocatable-values"]], "Copyright": [[659, "copyright"]], "Copyright, License, and Patents": [[659, "copyright-license-and-patents"]], "Core Pipeline": [[681, null]], "Core Tier": [[757, "core-tier"]], "CoroCleanup": [[655, "corocleanup"]], "CoroEarly": [[655, "coroearly"]], "CoroElide": [[655, "coroelide"]], "CoroSplit": [[655, "corosplit"]], "Coroutine Manipulation Intrinsics": [[655, "coroutine-manipulation-intrinsics"]], "Coroutine Promise": [[655, "coroutine-promise"]], "Coroutine Representation": [[655, "coroutine-representation"]], "Coroutine Structure Intrinsics": [[655, "coroutine-structure-intrinsics"]], "Coroutine Transformation": [[655, "coroutine-transformation"]], "Coroutine Transformation Passes": [[655, "coroutine-transformation-passes"]], "Coroutines by Example": [[655, "coroutines-by-example"]], "Coroutines in LLVM": [[655, null]], "Corpus": [[704, "corpus"]], "Counter": [[656, "id4"]], "Counter Expressions": [[656, "counter-expressions"]], "Counter:": [[656, "counter"], [656, "id9"]], "Coverage Mapping Header:": [[656, "coverage-mapping-header"]], "Crash debugger": [[593, "crash-debugger"]], "Crashing Bugs": [[696, "crashing-bugs"]], "Create Release Branch": [[694, "create-release-branch"]], "Creating New Articles": [[752, "creating-new-articles"]], "Creating an LLVM Project": [[735, null]], "Creating and inserting new Instructions": [[734, "creating-and-inserting-new-instructions"]], "Creating new registries": [[773, "creating-new-registries"]], "Criteria": [[748, "criteria"]], "Cross Compilation and External Devices": [[764, "cross-compilation-and-external-devices"]], "Cross compiling": [[597, "cross-compiling"]], "Cross-Compiling LLVM": [[671, "cross-compiling-llvm"]], "Cross-Compiling from x86_64 to ARM": [[693, "cross-compiling-from-x86-64-to-arm"]], "Current Status": [[736, "current-status"], [737, "current-status"]], "Current Work": [[717, "current-work"]], "Currently": [[736, "currently"], [736, "id7"], [736, "id9"], [736, "id11"]], "Custom": [[771, "custom"]], "Custom Behaviour": [[631, "custom-behaviour"]], "Custom GC Strategies": [[668, "custom-gc-strategies"]], "Custom SDNodes": [[678, "custom-sdnodes"]], "Custom Scalar": [[777, "custom-scalar"]], "Custom Suites": [[764, "custom-suites"]], "Custom formatting": [[734, "custom-formatting"]], "Custom lowering of intrinsics": [[668, "custom-lowering-of-intrinsics"]], "CustomEventMarker Records": [[776, "customeventmarker-records"]], "D": [[703, "d"]], "DAGISel": [[759, "dagisel"]], "DARPA HPCS SSCA#2 C/OpenMP reference implementation": [[738, "darpa-hpcs-ssca-2-c-openmp-reference-implementation"]], "DBI Stream Options": [[636, "dbi-stream-options"]], "DEFINE_ABBREV Encoding": [[589, "define-abbrev-encoding"]], "DESCRIPTION": [[603, "description"], [604, "description"], [605, "description"], [606, "description"], [608, "description"], [609, "description"], [610, "description"], [611, "description"], [612, "description"], [613, "description"], [614, "description"], [615, "description"], [616, "description"], [617, "description"], [617, "id2"], [617, "id4"], [617, "id7"], [617, "id10"], [618, "description"], [619, "description"], [620, "description"], [621, "description"], [622, "description"], [623, "description"], [624, "description"], [625, "description"], [626, "description"], [627, "description"], [628, "description"], [629, "description"], [630, "description"], [631, "description"], [632, "description"], [633, "description"], [634, "description"], [635, "description"], [637, "description"], [637, "id2"], [637, "id4"], [637, "id7"], [638, "description"], [639, "description"], [640, "description"], [641, "description"], [642, "description"], [643, "description"], [644, "description"], [645, "description"], [646, "description"], [647, "description"], [648, "description"], [649, "description"], [650, "description"]], "DETAILED OUTPUT DEFINITIONS": [[615, "detailed-output-definitions"]], "DFAPacketizer": [[759, "dfapacketizer"]], "DIArgList": [[702, "diarglist"]], "DIBasicType": [[702, "dibasictype"]], "DICompileUnit": [[702, "dicompileunit"]], "DICompositeType": [[702, "dicompositetype"]], "DIDerivedType": [[702, "diderivedtype"]], "DIEnumerator": [[702, "dienumerator"]], "DIExpression": [[702, "diexpression"]], "DIFFERENCES TO LLVM-READELF": [[641, "differences-to-llvm-readelf"]], "DIFile": [[702, "difile"]], "DIFlags": [[702, "diflags"]], "DIGlobalVariable": [[702, "diglobalvariable"]], "DIGlobalVariableExpression": [[702, "diglobalvariableexpression"]], "DIImportedEntity": [[702, "diimportedentity"]], "DILabel": [[702, "dilabel"]], "DILexicalBlock": [[702, "dilexicalblock"]], "DILexicalBlockFile": [[702, "dilexicalblockfile"]], "DILocalVariable": [[702, "dilocalvariable"]], "DILocation": [[702, "dilocation"]], "DIMacro": [[702, "dimacro"]], "DIMacroFile": [[702, "dimacrofile"]], "DINamespace": [[702, "dinamespace"]], "DIObjCProperty": [[702, "diobjcproperty"]], "DISubprogram": [[702, "disubprogram"]], "DISubrange": [[702, "disubrange"]], "DISubroutineType": [[702, "disubroutinetype"]], "DITemplateTypeParameter": [[702, "ditemplatetypeparameter"]], "DITemplateValueParameter": [[702, "ditemplatevalueparameter"]], "DLL Storage Classes": [[702, "dll-storage-classes"]], "DPP Modifiers": [[580, "dpp-modifiers"]], "DPP16": [[0, "dpp16"], [1, "dpp16"]], "DPP8": [[0, "dpp8"], [1, "dpp8"]], "DPP8 Modifiers": [[580, "dpp8-modifiers"]], "DS": [[0, "ds"], [2, "ds"], [3, "ds"], [4, "ds"], [9, "ds"], [582, "ds"]], "DS Modifiers": [[580, "ds-modifiers"]], "DSO Local Equivalent": [[702, "dso-local-equivalent"]], "DWARF Debug Information": [[582, "dwarf-debug-information"]], "DWARF Emission Setup": [[801, "dwarf-emission-setup"]], "DWARF Expression Evaluation Context": [[577, "dwarf-expression-evaluation-context"]], "DWARF Expression Value": [[577, "dwarf-expression-value"]], "DWARF Expressions": [[577, "dwarf-expressions"], [577, "id2"]], "DWARF Extensions For Heterogeneous Debugging": [[577, null]], "DWARF Location Description": [[577, "dwarf-location-description"]], "DWARF Location List Expressions": [[577, "dwarf-location-list-expressions"]], "DWARF Operation Encodings": [[577, "amdgpu-dwarf-operation-encodings-table"]], "DWARF Operation Expressions": [[577, "dwarf-operation-expressions"]], "DW_AT_LLVM_active_lane": [[582, "dw-at-llvm-active-lane"]], "DW_AT_LLVM_augmentation": [[582, "dw-at-llvm-augmentation"]], "DW_AT_LLVM_lane_pc": [[582, "dw-at-llvm-lane-pc"]], "Data Dependence Graph": [[658, "data-dependence-graph"]], "Data Layout": [[702, "data-layout"], [715, "data-layout"]], "Data Records": [[589, "data-records"]], "Data Representation": [[577, "data-representation"]], "Data Representation of the Name Index": [[577, "data-representation-of-the-name-index"]], "Data Section": [[776, "data-section"]], "Data:": [[656, "data"]], "Debug information and optimizations": [[750, "debug-information-and-optimizations"]], "Debug information consumers": [[750, "debug-information-consumers"]], "Debug-Info constructs": [[708, "debug-info-constructs"]], "Debugger Information Entry Attributes": [[582, "debugger-information-entry-attributes"]], "Debugger Intrinsics": [[702, "debugger-intrinsics"]], "Debugger intrinsic functions": [[750, "debugger-intrinsic-functions"]], "Debugging": [[681, "debugging"], [734, "debugging"]], "Debugging Information Entry Attributes": [[577, "debugging-information-entry-attributes"]], "Debugging Information Extension for Objective C Properties": [[750, "debugging-information-extension-for-objective-c-properties"]], "Debugging Information tests": [[766, "debugging-information-tests"], [766, "id2"]], "Debugging JIT-ed Code": [[657, null]], "Debugging MCJIT-ed code": [[657, "debugging-mcjit-ed-code"]], "Debugging Tools": [[607, "debugging-tools"]], "Debugging information format": [[750, "debugging-information-format"], [750, "id5"]], "Debugging with XRay": [[775, null]], "Default values": [[777, "default-values"]], "Default walker APIs": [[713, "default-walker-apis"]], "Define a new ABI and/or calling convention": [[751, "define-a-new-abi-and-or-calling-convention"]], "Defining a Register": [[771, "defining-a-register"]], "Defining a Register Class": [[771, "defining-a-register-class"]], "Definitions": [[703, "definitions"], [741, "definitions"], [753, "definitions"]], "Deleting GlobalVariables": [[734, "deleting-globalvariables"]], "Deleting Instructions": [[734, "deleting-instructions"], [734, "schanges-deleting-sub"]], "Deleting a MIR-level MachineInstr": [[697, "deleting-a-mir-level-machineinstr"]], "Deleting an IR-level Instruction": [[697, "deleting-an-ir-level-instruction"]], "Deoptimization Operand Bundles": [[702, "deoptimization-operand-bundles"]], "Dependence Graphs in LLVM": [[658, null]], "Dependencies": [[731, "dependencies"]], "Dependent Libs Named Metadata": [[702, "dependent-libs-named-metadata"]], "Deprecation Policy": [[757, "deprecation-policy"]], "Dereferencing": [[598, "dereferencing"]], "Describing Aliasing Properties": [[666, "describing-aliasing-properties"]], "Describing Language Specific Properties": [[666, "describing-language-specific-properties"]], "Description": [[593, "description"], [636, "description"], [705, "description"]], "Design": [[687, "design"], [747, "design"]], "Design Considerations": [[700, "design-considerations"]], "Design Guidelines": [[741, "design-guidelines"]], "Design Ideas": [[596, "design-ideas"]], "Design Overview": [[717, "design-overview"]], "Design Philosophy": [[593, "design-philosophy"], [705, "design-philosophy"]], "Design Trade-offs": [[658, "design-trade-offs"]], "Design and Implementation Reference": [[685, "design-and-implementation-reference"]], "Design and Usage of the InAlloca Attribute": [[700, null]], "Design of MemorySSA": [[713, "design-of-memoryssa"]], "Design tradeoffs": [[713, "design-tradeoffs"]], "Designing Type Hierarchies and Polymorphic Interfaces": [[734, "designing-type-hierarchies-and-polymorphic-interfaces"]], "Details": [[750, "details"], [770, "details"]], "Detecting clang vs NVCC from code": [[652, "detecting-clang-vs-nvcc-from-code"]], "Determining absolute position with getPosition()": [[651, "determining-absolute-position-with-getposition"]], "Developer Policies": [[659, "developer-policies"]], "Developer Tools": [[607, "developer-tools"]], "Developing LLVM passes out of source": [[597, "developing-llvm-passes-out-of-source"]], "Developing libFuzzer": [[704, "developing-libfuzzer"]], "Development Process": [[670, "development-process"]], "Diagnostics": [[770, "diagnostics"]], "Dialect Differences Between clang and nvcc": [[652, "dialect-differences-between-clang-and-nvcc"]], "Dictionaries": [[704, "dictionaries"]], "Difference between install and install-distribution": [[595, "difference-between-install-and-install-distribution"]], "Different Pass styles": [[585, "different-pass-styles"]], "Differentiating variable kinds": [[739, "differentiating-variable-kinds"]], "Direct Stack Map Entries": [[753, "direct-stack-map-entries"]], "Directive modifiers": [[603, "directive-modifiers"]], "Directory Layout": [[671, "directory-layout"]], "Disadvantages": [[739, "disadvantages"]], "Disadvantages:": [[658, "disadvantages"]], "Disassembler": [[599, "disassembler"], [759, "disassembler"]], "Disclosure": [[748, "disclosure"]], "Discussion Medium": [[748, "discussion-medium"]], "Displaying and Analyzing Results": [[764, "displaying-and-analyzing-results"]], "Dissecting the Kernel": [[715, "dissecting-the-kernel"]], "Dissecting the sample:": [[656, "dissecting-the-sample"]], "Distinct Save and Suspend": [[655, "distinct-save-and-suspend"]], "Dither": [[738, "dither"]], "Do Not Use using namespace std": [[602, "do-not-use-using-namespace-std"]], "Do not use Braced Initializer Lists to Call a Constructor": [[602, "do-not-use-braced-initializer-lists-to-call-a-constructor"]], "Do not use RTTI or Exceptions": [[602, "do-not-use-rtti-or-exceptions"]], "Do not use Static Constructors": [[602, "do-not-use-static-constructors"]], "Docker basics": [[660, "docker-basics"]], "Document List": [[777, "document-list"]], "Don't Expose System Headers": [[756, "don-t-expose-system-headers"]], "Don't Include System Headers": [[756, "don-t-include-system-headers"]], "Don't Unintentionally Block a Review": [[601, "don-t-unintentionally-block-a-review"]], "Don't Use Braces on Simple Single-Statement Bodies of if/else/loop Statements": [[602, "don-t-use-braces-on-simple-single-statement-bodies-of-if-else-loop-statements"]], "Don't check dependent loads": [[751, "don-t-check-dependent-loads"]], "Don't check loads from compile-time constant stack offsets": [[751, "don-t-check-loads-from-compile-time-constant-stack-offsets"]], "Don't evaluate end() every time through a loop": [[602, "don-t-evaluate-end-every-time-through-a-loop"]], "Don't use default labels in fully covered switches over enumerations": [[602, "don-t-use-default-labels-in-fully-covered-switches-over-enumerations"]], "Don't use else after a return": [[602, "don-t-use-else-after-a-return"]], "Don't use inline when defining a function in a class definition": [[602, "don-t-use-inline-when-defining-a-function-in-a-class-definition"]], "Doxygen Use in Documentation Comments": [[602, "doxygen-use-in-documentation-comments"]], "Driver Changes and Closing Thoughts": [[795, "driver-changes-and-closing-thoughts"]], "Dynamic Allocation": [[599, "dynamic-allocation"]], "Dynamically adding command line options": [[651, "dynamically-adding-command-line-options"]], "E": [[703, "e"]], "EC Substream": [[722, "ec-substream"]], "ELF Code Object": [[582, "elf-code-object"]], "ELF SPECIFIC OPTIONS": [[641, "elf-specific-options"]], "ELF-Dependent": [[663, "elf-dependent"]], "ELF-SPECIFIC OPTIONS": [[633, "elf-specific-options"], [645, "elf-specific-options"]], "END_BLOCK Encoding": [[589, "end-block-encoding"]], "ENTER_SUBBLOCK Encoding": [[589, "enter-subblock-encoding"]], "EXAMPLE": [[618, "example"], [644, "example"]], "EXAMPLE 1": [[630, "example-1"]], "EXAMPLE 1: benchmarking instructions": [[623, "example-1-benchmarking-instructions"]], "EXAMPLE 2": [[630, "example-2"]], "EXAMPLE 2: benchmarking a custom code snippet": [[623, "example-2-benchmarking-a-custom-code-snippet"]], "EXAMPLE 3": [[630, "example-3"]], "EXAMPLE 3: analysis": [[623, "example-3-analysis"]], "EXAMPLES": [[616, "examples"], [637, "examples"], [646, "examples"]], "EXECUTION OPTIONS": [[608, "execution-options"]], "EXIT STATUS": [[603, "exit-status"], [604, "exit-status"], [606, "exit-status"], [608, "exit-status"], [609, "exit-status"], [611, "exit-status"], [613, "exit-status"], [614, "exit-status"], [615, "exit-status"], [616, "exit-status"], [617, "exit-status"], [618, "exit-status"], [620, "exit-status"], [621, "exit-status"], [622, "exit-status"], [623, "exit-status"], [624, "exit-status"], [625, "exit-status"], [627, "exit-status"], [628, "exit-status"], [630, "exit-status"], [631, "exit-status"], [632, "exit-status"], [633, "exit-status"], [635, "exit-status"], [637, "exit-status"], [640, "exit-status"], [641, "exit-status"], [642, "exit-status"], [643, "exit-status"], [644, "exit-status"], [645, "exit-status"], [646, "exit-status"], [649, "exit-status"], [650, "exit-status"]], "EXP": [[0, "exp"], [2, "exp"], [3, "exp"], [4, "exp"]], "EXP Modifiers": [[580, "exp-modifiers"]], "EXPORT COMMAND": [[617, "export-command"]], "Efficiency": [[700, "efficiency"]], "Efficiency Issues": [[585, "efficiency-issues"]], "Element Wise Atomic Memory Intrinsics": [[702, "element-wise-atomic-memory-intrinsics"]], "Embed the predicate state into the high bit(s) of the stack pointer": [[751, "embed-the-predicate-state-into-the-high-bit-s-of-the-stack-pointer"]], "Embedded Module": [[708, "embedded-module"]], "Embedded PowerPC Processors manuals and docs": [[653, "embedded-powerpc-processors-manuals-and-docs"]], "Embedding Bundled Code Objects": [[582, "embedding-bundled-code-objects"]], "Embedding LLVM in your project": [[597, "embedding-llvm-in-your-project"]], "Emit Object Code": [[800, "emit-object-code"]], "Emitting assembly code: GCMetadataPrinter": [[668, "emitting-assembly-code-gcmetadataprinter"]], "Emitting function stack size information": [[599, "emitting-function-stack-size-information"]], "Emitting remark diagnostics in the object file": [[745, "emitting-remark-diagnostics-in-the-object-file"]], "Enabling optimization remarks": [[745, "enabling-optimization-remarks"]], "Encoding": [[656, "encoding"]], "Encoding Suffices": [[579, "encoding-suffices"]], "End-user Options": [[609, "end-user-options"]], "EndOfBuffer Records": [[776, "endofbuffer-records"]], "Ending Execution with llvm_shutdown()": [[734, "ending-execution-with-llvm-shutdown"]], "Engine Creation": [[707, "engine-creation"]], "Epilogue Vectorization": [[770, "epilogue-vectorization"]], "Error Handling": [[701, "error-handling"], [777, "error-handling"]], "Error Types": [[747, "error-types"]], "Error and Warning Messages": [[602, "error-and-warning-messages"]], "Error handling": [[734, "error-handling"]], "Example": [[657, "example"], [687, "example"]], "Example (custom deallocation function):": [[655, "example-custom-deallocation-function"]], "Example (final suspend point):": [[655, "example-final-suspend-point"]], "Example (normal suspend point):": [[655, "example-normal-suspend-point"]], "Example (standard deallocation functions):": [[655, "example-standard-deallocation-functions"]], "Example Nested Subsection": [[752, "example-nested-subsection"]], "Example Section": [[709, "example-section"], [752, "example-section"]], "Example Subsection": [[709, "example-subsection"]], "Example Subsubsection": [[709, "example-subsubsection"]], "Example Usage": [[719, "example-usage"]], "Example implementations of getAnalysisUsage": [[773, "example-implementations-of-getanalysisusage"]], "Example of link time optimization": [[686, "example-of-link-time-optimization"], [705, "example-of-link-time-optimization"]], "Example with clang": [[671, "example-with-clang"]], "Example:": [[655, "example"], [655, "id24"], [655, "id52"], [655, "id64"], [702, "example"], [702, "id34"], [702, "id39"], [702, "id45"], [702, "id50"], [702, "id55"], [702, "id60"], [702, "id65"], [702, "id70"], [702, "id77"], [702, "id85"], [702, "id90"], [702, "id95"], [702, "id100"], [702, "id105"], [702, "id110"], [702, "id115"], [702, "id120"], [702, "id125"], [702, "id130"], [702, "id135"], [702, "id140"], [702, "id145"], [702, "id150"], [702, "id155"], [702, "id160"], [702, "id165"], [702, "id170"], [702, "id175"], [702, "id180"], [702, "id185"], [702, "id190"], [702, "id195"], [702, "id200"], [702, "id205"], [702, "id215"], [702, "id220"], [702, "id225"], [702, "id230"], [702, "id235"], [702, "id240"], [702, "id245"], [702, "id250"], [702, "id255"], [702, "id260"], [702, "id265"], [702, "id270"], [702, "id275"], [702, "id280"], [702, "id285"], [702, "id290"], [702, "id295"], [702, "id300"], [702, "id305"], [702, "id310"], [702, "id315"], [702, "id320"], [702, "id325"], [702, "id330"], [702, "id335"], [702, "id341"], [702, "id348"], [702, "id355"], [702, "id477"], [702, "id643"], [702, "id647"], [702, "id859"], [702, "id864"]], "Example: C-level intrinsics -> assembly": [[588, "example-c-level-intrinsics-assembly"]], "Examples": [[577, "examples"], [679, "examples"], [702, "id682"], [702, "id687"], [702, "id692"], [702, "id697"], [702, "id702"], [702, "id707"], [702, "id712"], [702, "id717"], [702, "id722"], [702, "id727"], [702, "id732"], [702, "id737"], [702, "id742"], [702, "id747"], [704, "examples"]], "Exception Handling Frame": [[661, "exception-handling-frame"]], "Exception Handling Intrinsics": [[661, "exception-handling-intrinsics"], [702, "exception-handling-intrinsics"]], "Exception Handling in LLVM": [[661, null]], "Exception Handling support on the target": [[661, "exception-handling-support-on-the-target"]], "Exception Handling using the Windows Runtime": [[661, "exception-handling-using-the-windows-runtime"]], "Exception Tables": [[661, "exception-tables"]], "Exceptions": [[700, "exceptions"]], "Executing PTX": [[715, "executing-ptx"]], "Executing the Tests": [[597, "executing-the-tests"]], "Existing alias analysis implementations and clients": [[585, "existing-alias-analysis-implementations-and-clients"]], "Expand": [[771, "expand"]], "Experts Should Review Code": [[601, "experts-should-review-code"]], "Explicit Representation": [[755, "explicit-representation"]], "Exploiting external storage": [[651, "exploiting-external-storage"]], "Expression Code Generation": [[795, "expression-code-generation"]], "Expressions": [[581, "expressions"]], "Extending LLVM: Adding instructions, intrinsics, types, etc.": [[662, null]], "Extension Guide": [[651, "extending-the-library"]], "External Open Source Projects Using LLVM 13": [[743, "external-open-source-projects-using-llvm-13"]], "External Suites": [[764, "external-suites"]], "External Symbol Operands": [[708, "external-symbol-operands"]], "External Tutorials": [[804, "external-tutorials"]], "Extra Statistics to Further Diagnose Performance Issues": [[631, "extra-statistics-to-further-diagnose-performance-issues"]], "Extra files": [[766, "extra-files"]], "F": [[703, "f"]], "FAQ": [[704, "faq"]], "FAQs": [[772, "faqs"]], "FFmpeg": [[738, "ffmpeg"]], "FLAT": [[0, "flat"], [2, "flat"], [3, "flat"], [4, "flat"], [8, "flat"], [9, "flat"], [582, "flat"]], "FLAT Modifiers": [[580, "flat-modifiers"]], "FLOATING POINT OPTIONS": [[611, "floating-point-options"]], "FORMAT OF STATISTICS OUTPUT": [[622, "format-of-statistics-output"]], "FTensors": [[738, "ftensors"]], "FUNCTION_BLOCK Contents": [[589, "function-block-contents"]], "FX Operand": [[361, null]], "Fallible constructors": [[734, "fallible-constructors"]], "Fast-Math Flags": [[702, "fast-math-flags"]], "FastISel": [[759, "fastisel"]], "FastISel Replacement": [[685, "fastisel-replacement"]], "FaultMaps and implicit checks": [[665, null]], "Feature detection": [[738, "feature-detection"]], "Features": [[717, "features"], [737, "features"], [770, "features"]], "File Headers": [[602, "file-headers"]], "File ID Mapping": [[656, "file-id-mapping"]], "File ID:": [[656, "file-id"]], "File Info Substream": [[722, "file-info-substream"]], "File Layout": [[726, "file-layout"], [730, "file-layout"]], "FileCheck - Flexible pattern matching file verifier": [[603, null]], "FileCheck Numeric Substitution Blocks": [[603, "filecheck-numeric-substitution-blocks"]], "FileCheck Pseudo Numeric Variables": [[603, "filecheck-pseudo-numeric-variables"]], "FileCheck Regex Matching Syntax": [[603, "filecheck-regex-matching-syntax"]], "FileCheck String Substitution Blocks": [[603, "filecheck-string-substitution-blocks"]], "Filing a report": [[746, "filing-a-report"]], "Filtering and Sorting Options": [[636, "filtering-and-sorting-options"]], "Final Preparations": [[707, "final-preparations"]], "Final Suspend": [[655, "final-suspend"]], "Finding call sites: a slightly more complex example": [[734, "finding-call-sites-a-slightly-more-complex-example"]], "Finding potential reviewers": [[733, "finding-potential-reviewers"]], "Fine grained debug info with DEBUG_TYPE and the -debug-only option": [[734, "fine-grained-debug-info-with-debug-type-and-the-debug-only-option"]], "FireHose": [[738, "firehose"]], "First Class Types": [[702, "first-class-types"]], "Fixed (preassigned) registers": [[599, "fixed-preassigned-registers"]], "Fixed Lookup": [[750, "fixed-lookup"]], "Fixed Point Arithmetic Intrinsics": [[702, "fixed-point-arithmetic-intrinsics"]], "Fixed Size Arrays": [[734, "fixed-size-arrays"]], "Fixed Width Integers": [[589, "fixed-width-value"]], "Fixed variable locations": [[708, "fixed-variable-locations"]], "Flags that control numerical code": [[652, "flags-that-control-numerical-code"]], "Flame Graph Generation": [[775, "flame-graph-generation"]], "Flat Scratch": [[582, "flat-scratch"]], "Flight Data Recorder Mode": [[774, "flight-data-recorder-mode"]], "Floating Point Denorm Mode Enumeration Values": [[582, "amdgpu-amdhsa-floating-point-denorm-mode-enumeration-values-table"]], "Floating Point Environment Manipulation intrinsics": [[702, "floating-point-environment-manipulation-intrinsics"]], "Floating Point Operations": [[676, "floating-point-operations"]], "Floating Point Rounding Mode Enumeration Values": [[582, "amdgpu-amdhsa-floating-point-rounding-mode-enumeration-values-table"]], "Floating-Point Environment": [[702, "floating-point-environment"]], "Floating-Point Numbers": [[581, "floating-point-numbers"]], "Floating-Point Types": [[702, "floating-point-types"]], "Flow Mapping": [[777, "flow-mapping"]], "Flow Sequence": [[777, "flow-sequence"]], "For developers to commit changes from Git": [[671, "for-developers-to-commit-changes-from-git"]], "Fork mode": [[704, "fork-mode"]], "Format Background": [[750, "format-background"]], "Format Grammar and Invariants": [[776, "format-grammar-and-invariants"]], "Format Lambdas Like Blocks Of Code": [[602, "format-lambdas-like-blocks-of-code"]], "Format of Debugging Information": [[577, "format-of-debugging-information"]], "Formatting strings (the formatv function)": [[734, "formatting-strings-the-formatv-function"]], "Fortran function information": [[750, "fortran-function-information"]], "Fortran specific debug information": [[750, "fortran-specific-debug-information"]], "Fragile tests": [[766, "fragile-tests"]], "Frame Layout": [[599, "frame-layout"]], "Frame Pointer": [[582, "frame-pointer"]], "FreePOOMA": [[738, "freepooma"]], "Frequently Used LLVM-related variables": [[597, "frequently-used-llvm-related-variables"]], "Frequently-used CMake variables": [[597, "frequently-used-cmake-variables"]], "Front-end bugs": [[696, "front-end-bugs"]], "Frontend Migration Steps": [[718, "frontend-migration-steps"]], "Full Code Listing": [[779, "full-code-listing"], [780, "full-code-listing"], [781, "full-code-listing"], [782, "full-code-listing"], [794, "full-code-listing"], [795, "full-code-listing"], [796, "full-code-listing"], [797, "full-code-listing"], [798, "full-code-listing"], [799, "id2"], [800, "full-code-listing"], [801, "full-code-listing"]], "Funclet Operand Bundles": [[702, "funclet-operand-bundles"]], "Funclet parent tokens": [[661, "funclet-parent-tokens"]], "Funclet transitions": [[661, "funclet-transitions"]], "Function Attributes": [[702, "function-attributes"]], "Function Code Generation": [[795, "function-code-generation"]], "Function Entry Counts": [[591, "function-entry-counts"]], "Function Flags": [[702, "function-flags"]], "Function Record Order": [[776, "function-record-order"]], "Function Records": [[776, "function-records"]], "Function Summary": [[702, "function-summary"]], "Function Type": [[702, "function-type"]], "Function calls": [[599, "function-calls"]], "Function record:": [[656, "function-record"]], "Function template": [[734, "function-template"]], "FunctionComparator::cmpType": [[714, "functioncomparator-cmptype"]], "FunctionComparator::compare(void)": [[714, "functioncomparator-compare-void"]], "Functions": [[702, "functions"], [801, "functions"]], "Functions Vs Macros": [[598, "functions-vs-macros"]], "Functions comparison": [[714, "functions-comparison"]], "Further Exploration": [[775, "further-exploration"]], "Further Future Work": [[717, "further-future-work"]], "Further Help": [[735, "further-help"]], "Future Work": [[774, "future-work"]], "Future Work: Fine Grained Control and API-Integration": [[751, "future-work-fine-grained-control-and-api-integration"]], "Future directions for the SelectionDAG": [[599, "future-directions-for-the-selectiondag"]], "Future extensions planned": [[773, "future-extensions-planned"]], "Fuzz Target": [[704, "fuzz-target"]], "Fuzzer Usage": [[704, "fuzzer-usage"]], "Fuzzer-friendly build mode": [[704, "fuzzer-friendly-build-mode"]], "Fuzzing LLVM libraries and tools": [[667, null]], "G": [[703, "g"]], "GC Live Operand Bundles": [[702, "gc-live-operand-bundles"]], "GC Transition Operand Bundles": [[702, "gc-transition-operand-bundles"]], "GC Transitions": [[755, "gc-transitions"]], "GCOV COMMAND": [[617, "gcov-command"]], "GDB Version": [[657, "gdb-version"]], "GENERAL AND MULTI-FORMAT OPTIONS": [[641, "general-and-multi-format-options"]], "GENERAL OPTIONS": [[608, "general-options"], [611, "general-options"]], "GENERIC AND CROSS-PLATFORM OPTIONS": [[633, "generic-and-cross-platform-options"], [645, "generic-and-cross-platform-options"]], "GNU binutils replacements": [[607, "gnu-binutils-replacements"]], "GWP-ASan": [[687, null]], "GWP-ASan vs. ASan": [[687, "gwp-asan-vs-asan"]], "G_ABS": [[676, "g-abs"]], "G_ADD, G_SUB, G_MUL, G_AND, G_OR, G_XOR, G_SDIV, G_UDIV, G_SREM, G_UREM": [[676, "g-add-g-sub-g-mul-g-and-g-or-g-xor-g-sdiv-g-udiv-g-srem-g-urem"]], "G_ADDRSPACE_CAST": [[676, "g-addrspace-cast"]], "G_ANYEXT": [[676, "g-anyext"]], "G_ASSERT_SEXT, G_ASSERT_ZEXT": [[676, "g-assert-sext-g-assert-zext"]], "G_ATOMICRMW_XCHG, G_ATOMICRMW_ADD, G_ATOMICRMW_SUB, G_ATOMICRMW_AND, G_ATOMICRMW_NAND, G_ATOMICRMW_OR, G_ATOMICRMW_XOR, G_ATOMICRMW_MAX, G_ATOMICRMW_MIN, G_ATOMICRMW_UMAX, G_ATOMICRMW_UMIN, G_ATOMICRMW_FADD, G_ATOMICRMW_FSUB": [[676, "g-atomicrmw-xchg-g-atomicrmw-add-g-atomicrmw-sub-g-atomicrmw-and-g-atomicrmw-nand-g-atomicrmw-or-g-atomicrmw-xor-g-atomicrmw-max-g-atomicrmw-min-g-atomicrmw-umax-g-atomicrmw-umin-g-atomicrmw-fadd-g-atomicrmw-fsub"]], "G_ATOMIC_CMPXCHG": [[676, "g-atomic-cmpxchg"]], "G_ATOMIC_CMPXCHG_WITH_SUCCESS": [[676, "g-atomic-cmpxchg-with-success"]], "G_BITCAST": [[676, "g-bitcast"]], "G_BITREVERSE": [[676, "g-bitreverse"]], "G_BLOCK_ADDR": [[676, "g-block-addr"]], "G_BR": [[676, "g-br"]], "G_BRCOND": [[676, "g-brcond"]], "G_BRINDIRECT": [[676, "g-brindirect"]], "G_BRJT": [[676, "g-brjt"]], "G_BSWAP": [[676, "g-bswap"]], "G_BUILD_VECTOR, G_BUILD_VECTOR_TRUNC": [[676, "g-build-vector-g-build-vector-trunc"]], "G_BZERO": [[676, "g-bzero"]], "G_CONCAT_VECTORS": [[676, "g-concat-vectors"]], "G_CONSTANT": [[676, "g-constant"]], "G_CTLZ, G_CTTZ, G_CTPOP": [[676, "g-ctlz-g-cttz-g-ctpop"]], "G_CTLZ_ZERO_UNDEF, G_CTTZ_ZERO_UNDEF": [[676, "g-ctlz-zero-undef-g-cttz-zero-undef"]], "G_DYN_STACKALLOC": [[676, "g-dyn-stackalloc"]], "G_EXTRACT": [[676, "g-extract"]], "G_EXTRACT_VECTOR_ELT": [[676, "g-extract-vector-elt"]], "G_FABS": [[676, "g-fabs"]], "G_FADD, G_FSUB, G_FMUL, G_FDIV, G_FREM": [[676, "g-fadd-g-fsub-g-fmul-g-fdiv-g-frem"]], "G_FCANONICALIZE": [[676, "g-fcanonicalize"]], "G_FCEIL, G_FCOS, G_FSIN, G_FSQRT, G_FFLOOR, G_FRINT, G_FNEARBYINT": [[676, "g-fceil-g-fcos-g-fsin-g-fsqrt-g-ffloor-g-frint-g-fnearbyint"]], "G_FCMP": [[676, "g-fcmp"]], "G_FCONSTANT": [[676, "g-fconstant"]], "G_FCOPYSIGN": [[676, "g-fcopysign"]], "G_FENCE": [[676, "g-fence"]], "G_FEXP, G_FEXP2": [[676, "g-fexp-g-fexp2"]], "G_FLOG, G_FLOG2, G_FLOG10": [[676, "g-flog-g-flog2-g-flog10"]], "G_FMA": [[676, "g-fma"]], "G_FMAD": [[676, "g-fmad"]], "G_FMAXIMUM": [[676, "g-fmaximum"]], "G_FMAXNUM": [[676, "g-fmaxnum"]], "G_FMAXNUM_IEEE": [[676, "g-fmaxnum-ieee"]], "G_FMINIMUM": [[676, "g-fminimum"]], "G_FMINNUM": [[676, "g-fminnum"]], "G_FMINNUM_IEEE": [[676, "g-fminnum-ieee"]], "G_FNEG": [[676, "g-fneg"]], "G_FPEXT": [[676, "g-fpext"]], "G_FPOW": [[676, "g-fpow"]], "G_FPTOSI, G_FPTOUI, G_SITOFP, G_UITOFP": [[676, "g-fptosi-g-fptoui-g-sitofp-g-uitofp"]], "G_FPTRUNC": [[676, "g-fptrunc"]], "G_FRAME_INDEX": [[676, "g-frame-index"]], "G_GLOBAL_VALUE": [[676, "g-global-value"]], "G_ICMP": [[676, "g-icmp"]], "G_IMPLICIT_DEF": [[676, "g-implicit-def"]], "G_INDEXED_LOAD": [[676, "g-indexed-load"]], "G_INDEXED_SEXTLOAD": [[676, "g-indexed-sextload"]], "G_INDEXED_STORE": [[676, "g-indexed-store"]], "G_INDEXED_ZEXTLOAD": [[676, "g-indexed-zextload"]], "G_INSERT": [[676, "g-insert"]], "G_INSERT_VECTOR_ELT": [[676, "g-insert-vector-elt"]], "G_INTRINSIC, G_INTRINSIC_W_SIDE_EFFECTS": [[676, "g-intrinsic-g-intrinsic-w-side-effects"]], "G_INTRINSIC_ROUND": [[676, "g-intrinsic-round"]], "G_INTRINSIC_TRUNC": [[676, "g-intrinsic-trunc"]], "G_INTTOPTR": [[676, "g-inttoptr"]], "G_JUMP_TABLE": [[676, "g-jump-table"]], "G_LOAD, G_SEXTLOAD, G_ZEXTLOAD": [[676, "g-load-g-sextload-g-zextload"]], "G_MEMCPY": [[676, "g-memcpy"]], "G_MEMCPY_INLINE": [[676, "g-memcpy-inline"]], "G_MEMMOVE": [[676, "g-memmove"]], "G_MEMSET": [[676, "g-memset"]], "G_MERGE_VALUES": [[676, "g-merge-values"]], "G_PHI": [[676, "g-phi"]], "G_PTRMASK": [[676, "g-ptrmask"]], "G_PTRTOINT": [[676, "g-ptrtoint"]], "G_PTR_ADD": [[676, "g-ptr-add"]], "G_ROTR, G_ROTL": [[676, "g-rotr-g-rotl"]], "G_SADDSAT, G_UADDSAT, G_SSUBSAT, G_USUBSAT, G_SSHLSAT, G_USHLSAT": [[676, "g-saddsat-g-uaddsat-g-ssubsat-g-usubsat-g-sshlsat-g-ushlsat"]], "G_SBFX, G_UBFX": [[676, "g-sbfx-g-ubfx"]], "G_SDIVREM, G_UDIVREM": [[676, "g-sdivrem-g-udivrem"]], "G_SELECT": [[676, "g-select"]], "G_SEXT": [[676, "g-sext"]], "G_SEXT_INREG": [[676, "g-sext-inreg"]], "G_SHL, G_LSHR, G_ASHR": [[676, "g-shl-g-lshr-g-ashr"]], "G_SHUFFLE_VECTOR": [[676, "g-shuffle-vector"]], "G_SMIN, G_SMAX, G_UMIN, G_UMAX": [[676, "g-smin-g-smax-g-umin-g-umax"]], "G_STORE": [[676, "g-store"]], "G_TRUNC": [[676, "g-trunc"]], "G_UADDE, G_SADDE, G_USUBE, G_SSUBE": [[676, "g-uadde-g-sadde-g-usube-g-ssube"]], "G_UADDO, G_SADDO, G_USUBO, G_SSUBO, G_SMULO, G_UMULO": [[676, "g-uaddo-g-saddo-g-usubo-g-ssubo-g-smulo-g-umulo"]], "G_UMULH, G_SMULH": [[676, "g-umulh-g-smulh"]], "G_UNMERGE_VALUES": [[676, "g-unmerge-values"]], "G_VAARG": [[676, "g-vaarg"]], "G_VASTART": [[676, "g-vastart"]], "G_VECREDUCE_FADD, G_VECREDUCE_FMUL": [[676, "g-vecreduce-fadd-g-vecreduce-fmul"]], "G_VECREDUCE_FMAX, G_VECREDUCE_FMIN": [[676, "g-vecreduce-fmax-g-vecreduce-fmin"]], "G_VECREDUCE_SEQ_FADD, G_VECREDUCE_SEQ_FMUL": [[676, "g-vecreduce-seq-fadd-g-vecreduce-seq-fmul"]], "G_ZEXT": [[676, "g-zext"]], "Garbage Collected Stack Frames": [[802, "garbage-collected-stack-frames"]], "Garbage Collection": [[742, "garbage-collection"]], "Garbage Collection Safepoints in LLVM": [[755, null]], "Garbage Collection with LLVM": [[668, null]], "Garbage Collector Strategy Names": [[702, "garbage-collector-strategy-names"]], "General": [[587, "general"], [776, "general"]], "General Assembly Syntax": [[663, "general-assembly-syntax"]], "General BackEnds": [[759, "general-backends"]], "General Description": [[577, "general-description"]], "General Distribution Guidance": [[595, "general-distribution-guidance"]], "General Information": [[734, "general-information"]], "General Intrinsics": [[702, "general-intrinsics"]], "General Location Description Operations": [[577, "general-location-description-operations"]], "General Options": [[650, "general-options"]], "General Policies": [[601, "general-policies"]], "General suggestions": [[711, "general-suggestions"]], "Generating Test Output": [[765, "generating-test-output"]], "Generating safe points": [[668, "generating-safe-points"]], "Generic Algorithms": [[738, "generic-algorithms"]], "Generic Enumerated Types": [[759, "generic-enumerated-types"]], "Generic Link Algorithm": [[701, "generic-link-algorithm"]], "Generic Machine IR": [[675, null]], "Generic Machine Instructions": [[675, "generic-machine-instructions"]], "Generic Opcode Reference": [[675, "generic-opcode-reference"]], "Generic Opcodes": [[676, null]], "Generic Random Fuzzing": [[667, "generic-random-fuzzing"]], "Generic Tables": [[759, "generic-tables"]], "Generic Virtual Registers": [[675, "generic-virtual-registers"]], "Getting Involved": [[670, null]], "Getting Started": [[673, "getting-started"], [704, "getting-started"], [719, "getting-started"]], "Getting Started with LLVM": [[671, "getting-started-with-llvm"]], "Getting Started with the LLVM System": [[671, null]], "Getting Started with the LLVM System using Microsoft Visual Studio": [[673, null]], "Getting Started/Tutorials": [[672, null]], "Getting Traces": [[775, "getting-traces"]], "Getting a Modern Host C++ Toolchain": [[671, "getting-a-modern-host-c-toolchain"]], "Getting the Source Code and Building LLVM": [[671, "getting-the-source-code-and-building-llvm"]], "Git pre-push hook": [[671, "git-pre-push-hook"]], "GitHub Repository Description": [[736, "github-repository-description"]], "Global Attributes": [[702, "global-attributes"]], "Global Instruction Selection": [[685, null]], "Global Structures Alias Analysis": [[770, "global-structures-alias-analysis"]], "Global Symbols": [[720, "global-symbols"]], "Global Value Operands": [[708, "global-value-operands"]], "Global Value Summary Entry": [[702, "global-value-summary-entry"]], "Global Variable Summary": [[702, "global-variable-summary"]], "Global Variable and Function Addresses": [[702, "global-variable-and-function-addresses"]], "Global Variables": [[702, "global-variables"]], "GnuPG": [[738, "gnupg"]], "Goals and non-goals": [[668, "goals-and-non-goals"]], "Graph": [[738, "graph"]], "Graph Construction": [[658, "graph-construction"]], "Graph500 reference implementations": [[738, "graph500-reference-implementations"]], "Group Composition": [[748, "group-composition"]], "Grouping options into categories": [[651, "grouping-options-into-categories"]], "Guard widening:": [[702, "guard-widening"]], "Guarded Allocation Pool": [[687, "guarded-allocation-pool"]], "Guidelines": [[709, "guidelines"]], "Guidelines for Go code": [[602, "guidelines-for-go-code"]], "H": [[703, "h"]], "HCC": [[582, "hcc"]], "HOW LLVM-MCA WORKS": [[631, "how-llvm-mca-works"]], "HSA AQL Queue": [[582, "hsa-aql-queue"]], "HSA Signals": [[582, "hsa-signals"]], "Hacks": [[693, "hacks"]], "Half Precision Floating-Point Intrinsics": [[702, "half-precision-floating-point-intrinsics"]], "Handling two address instructions": [[599, "handling-two-address-instructions"]], "Hardening Loads": [[751, "hardening-loads"]], "Hardening loaded values": [[751, "hardening-loaded-values"]], "Hardening of loaded values deferred down the data-invariant expression graph": [[751, "hardening-of-loaded-values-deferred-down-the-data-invariant-expression-graph"]], "Hardening the address of the load": [[751, "hardening-the-address-of-the-load"]], "Hardware": [[653, "hardware"], [671, "hardware"], [673, "hardware"]], "Hardware-Loop Intrinsics": [[702, "hardware-loop-intrinsics"]], "Harness mode": [[701, "harness-mode"]], "HasGlobalAliases, removeUsers": [[714, "hasglobalaliases-removeusers"]], "Hash Tables": [[750, "hash-tables"]], "Header": [[582, "header"], [656, "header"]], "Header Guard": [[602, "header-guard"]], "Header Layout": [[750, "header-layout"]], "Header Section": [[776, "header-section"]], "Heap Allocated Arrays": [[734, "heap-allocated-arrays"]], "Heap tagging": [[712, "heap-tagging"]], "Helpful Hints for Common Operations": [[734, "helpful-hints-for-common-operations"]], "Helpful Information About LLVM": [[654, "helpful-information-about-llvm"]], "Hex types": [[777, "hex-types"]], "Hexagon": [[653, "hexagon"]], "Hiding an option from -help output": [[651, "hiding-an-option-from-help-output"]], "High Level Interface": [[756, "high-level-interface"]], "High Level Mitigation Approach": [[751, "high-level-mitigation-approach"]], "High Level Overview": [[656, "high-level-overview"]], "High Level Structure": [[702, "high-level-structure"], [708, "high-level-structure"]], "High Performance Geometric Multigrid": [[738, "high-performance-geometric-multigrid"]], "High-Level Alternative Mitigation Strategies": [[751, "high-level-alternative-mitigation-strategies"]], "High-Level Design": [[658, "high-level-design"]], "High-level Design": [[741, "high-level-design"]], "Historical Note": [[675, null]], "Hopefully you won't need to be this deep": [[709, "hopefully-you-won-t-need-to-be-this-deep"]], "Host C++ Toolchain, both Compiler and Standard Library": [[671, "host-c-toolchain-both-compiler-and-standard-library"]], "How To Add A Constrained Floating-Point Intrinsic": [[583, null]], "How To Add Your Build Configuration To LLVM Buildbot Infrastructure": [[688, null]], "How To Build Clang and LLVM with Profile-Guided Optimizations": [[691, null]], "How To Build On ARM": [[689, null]], "How To Cross-Compile Clang/LLVM using Clang/LLVM": [[693, null]], "How To Release LLVM To The Public": [[694, null]], "How To Use Attributes": [[698, null]], "How To Use Instruction Mappings": [[699, null]], "How To Validate a New Release": [[744, null]], "How can I tell if my front-end is following the rules?": [[669, "how-can-i-tell-if-my-front-end-is-following-the-rules"]], "How does VLA addressing work with GEPs?": [[669, "how-does-vla-addressing-work-with-geps"]], "How good is my fuzzer?": [[704, "how-good-is-my-fuzzer"]], "How is GEP different from ptrtoint, arithmetic, and inttoptr?": [[669, "how-is-gep-different-from-ptrtoint-arithmetic-and-inttoptr"]], "How it works": [[754, "how-it-works"]], "How portable is the LLVM source code?": [[664, "how-portable-is-the-llvm-source-code"]], "How registers are represented in LLVM": [[599, "how-registers-are-represented-in-llvm"]], "How the packetization tables are generated and used": [[599, "how-the-packetization-tables-are-generated-and-used"]], "How to Add Process and Library Symbols to the JITDylibs": [[717, "how-to-add-process-and-library-symbols-to-the-jitdylibs"]], "How to Cross Compile Compiler-rt Builtins For Arm": [[692, null]], "How to Submit a Patch": [[654, "how-to-submit-a-patch"]], "How to Update Debug Info: A Guide for LLVM Pass Authors": [[697, null]], "How to automatically convert tests into debug info tests": [[697, "how-to-automatically-convert-tests-into-debug-info-tests"]], "How to build Windows Itanium applications.": [[690, null]], "How to build it": [[686, "how-to-build-it"]], "How to create JITDylibs and set up linkage relationships": [[717, "how-to-create-jitdylibs-and-set-up-linkage-relationships"]], "How to do it?": [[714, "how-to-do-it"]], "How to implement cmpValues?": [[714, "how-to-implement-cmpvalues"]], "How to manage symbol strings": [[717, "how-to-manage-symbol-strings"]], "How to pick the date?": [[711, "how-to-pick-the-date"]], "How to report a security issue?": [[748, "how-to-report-a-security-issue"]], "How to set up LLVM-style RTTI for your class hierarchy": [[695, null]], "How to start LLVM Social in your town": [[711, null]], "How to submit an LLVM bug report": [[696, null]], "How to use ThreadSafeModule and ThreadSafeContext": [[717, "how-to-use-threadsafemodule-and-threadsafecontext"]], "How to use this template": [[752, "how-to-use-this-template"]], "How variable location metadata is transformed during CodeGen": [[750, "how-variable-location-metadata-is-transformed-during-codegen"]], "How-tos": [[717, "how-tos"]], "HydroBench": [[738, "hydrobench"]], "I": [[703, "i"]], "I Still Can't Find What I'm Looking For": [[666, "i-still-can-t-find-what-i-m-looking-for"]], "I Still Need Pointee Types!": [[718, "i-still-need-pointee-types"]], "I don't understand the GetElementPtr instruction. Help!": [[664, "i-don-t-understand-the-getelementptr-instruction-help"]], "I'd like to write a self-hosting LLVM compiler. How should I interface with the LLVM middle-end optimizers and back-end code generators?": [[664, "i-d-like-to-write-a-self-hosting-llvm-compiler-how-should-i-interface-with-the-llvm-middle-end-optimizers-and-back-end-code-generators"]], "I'm writing a backend for a target which needs custom lowering for GEP. How do I do this?": [[669, "i-m-writing-a-backend-for-a-target-which-needs-custom-lowering-for-gep-how-do-i-do-this"]], "IBM - Official manuals and docs": [[653, "ibm-official-manuals-and-docs"]], "IFuncs": [[702, "ifuncs"]], "IR Backwards Compatibility": [[659, "ir-backwards-compatibility"]], "IR Best Practices": [[666, "ir-best-practices"]], "IRC": [[670, "irc"]], "IRTranslator": [[677, null]], "Identifiers": [[702, "identifiers"]], "Identifying GC roots on the stack": [[668, "gcroot"]], "If Conversion": [[770, "if-conversion"]], "If \u201cF\u201d could not be overridden, fix it!": [[714, "if-f-could-not-be-overridden-fix-it"]], "If \u201cF\u201d may be overridden": [[714, "if-f-may-be-overridden"]], "If, ElseIf, Else": [[598, "if-elseif-else"]], "If/Then/Else": [[797, "if-then-else"]], "Image and Samplers": [[582, "image-and-samplers"]], "Image processing": [[738, "image-processing"]], "Immediate Operands": [[708, "immediate-operands"]], "Implement a subclass of TargetInstrInfo": [[771, "implement-a-subclass-of-targetinstrinfo"]], "Implement a subclass of TargetRegisterInfo": [[771, "implement-a-subclass-of-targetregisterinfo"]], "Implementation": [[588, "implementation"], [594, "implementation"], [712, "implementation"]], "Implementation Details": [[658, "implementation-details"], [749, "implementation-details"], [751, "implementation-details"]], "Implementation:": [[702, "implementation"], [702, "id44"]], "Implementation: Getting from mass and scale to frequency": [[590, "implementation-getting-from-mass-and-scale-to-frequency"]], "Implementation: a series of DAGs": [[590, "implementation-a-series-of-dags"]], "Implementing Analysis Groups": [[773, "implementing-analysis-groups"]], "Implementing Analysis Invalidation": [[716, "implementing-analysis-invalidation"]], "Implementing a Native Assembler": [[599, "implementing-a-native-assembler"]], "Implementing a collector plugin": [[668, "implementing-a-collector-plugin"]], "Implementing portable offsetof/sizeof": [[802, "implementing-portable-offsetof-sizeof"]], "Implicit Location Description Operations": [[577, "implicit-location-description-operations"]], "Important Derived Types": [[734, "important-derived-types"]], "Important Notes": [[706, "important-notes"]], "Important Public Members of the BasicBlock class": [[734, "important-public-members-of-the-basicblock-class"]], "Important Public Members of the Function": [[734, "important-public-members-of-the-function"]], "Important Public Members of the GlobalValue class": [[734, "important-public-members-of-the-globalvalue-class"]], "Important Public Members of the GlobalVariable class": [[734, "important-public-members-of-the-globalvariable-class"]], "Important Public Members of the Instruction class": [[734, "important-public-members-of-the-instruction-class"]], "Important Public Members of the Module class": [[734, "important-public-members-of-the-module-class"]], "Important Public Members of the User class": [[734, "important-public-members-of-the-user-class"]], "Important Public Members of the Value class": [[734, "important-public-members-of-the-value-class"]], "Important Public Methods": [[734, "important-public-methods"]], "Important Subclasses of Constant": [[734, "important-subclasses-of-constant"]], "Important Subclasses of the Instruction class": [[734, "important-subclasses-of-the-instruction-class"]], "Important and useful LLVM APIs": [[734, "important-and-useful-llvm-apis"]], "Importing local repositories": [[736, "importing-local-repositories"]], "In what language is LLVM written?": [[664, "in-what-language-is-llvm-written"]], "In-order Issue and Execute": [[631, "in-order-issue-and-execute"]], "Inclusion Policy": [[757, "inclusion-policy"]], "Incorrect code generation": [[696, "incorrect-code-generation"]], "Incremental Development": [[659, "incremental-development"]], "Incubating New Projects": [[659, "incubating-new-projects"]], "Indices and tables": [[778, "indices-and-tables"]], "Indirect Branches, Calls, and Returns": [[751, "indirect-branches-calls-and-returns"]], "Indirect Call, Branch, and Return Predicates": [[751, "indirect-call-branch-and-return-predicates"]], "Indirect inputs and outputs": [[702, "indirect-inputs-and-outputs"]], "IndirectBrInst": [[591, "indirectbrinst"]], "Inductions": [[770, "inductions"]], "Initial Kernel Execution State": [[582, "initial-kernel-execution-state"]], "Initial SelectionDAG Construction": [[599, "initial-selectiondag-construction"]], "Initializing roots to null": [[668, "initializing-roots-to-null"]], "Inline Asm": [[599, "inline-asm"]], "Inline Asm Constraint String": [[702, "inline-asm-constraint-string"]], "Inline Asm Metadata": [[702, "inline-asm-metadata"]], "Inline Assembler Expressions": [[702, "inline-assembler-expressions"]], "Input": [[777, "input"]], "Input constraints": [[702, "input-constraints"]], "Inserting Passes into Default Pipelines": [[716, "inserting-passes-into-default-pipelines"]], "Installing and Using": [[693, "installing-and-using"]], "InstrInfo": [[759, "instrinfo"]], "InstrMapping Class Overview": [[699, "instrmapping-class-overview"]], "Instruction Alias Processing": [[599, "instruction-alias-processing"]], "Instruction Aliases": [[599, "instruction-aliases"]], "Instruction Annotations": [[710, "instruction-annotations"]], "Instruction Dispatch": [[631, "instruction-dispatch"]], "Instruction Examples": [[582, "instruction-examples"]], "Instruction Flags": [[708, "instruction-flags"]], "Instruction Flow": [[631, "instruction-flow"]], "Instruction Issue": [[631, "instruction-issue"]], "Instruction Matching": [[599, "instruction-matching"]], "Instruction Operand Mapping": [[771, "instruction-operand-mapping"]], "Instruction Operand Name Mapping": [[771, "instruction-operand-name-mapping"]], "Instruction Operand Types": [[771, "instruction-operand-types"]], "Instruction Parsing": [[599, "instruction-parsing"]], "Instruction Reference": [[702, "instruction-reference"]], "Instruction Relation Mapping": [[771, "instruction-relation-mapping"]], "Instruction Scheduling": [[750, "instruction-scheduling"], [771, "instruction-scheduling"]], "Instruction Selection": [[599, "instruction-selection-section"]], "Instruction Selector": [[771, "instruction-selector"]], "Instruction Set": [[771, "instruction-set"]], "Instruction Threshold": [[775, "instruction-threshold"]], "Instruction encoding (arithmetic and jump)": [[599, "instruction-encoding-arithmetic-and-jump"]], "Instruction encoding (load, store)": [[599, "instruction-encoding-load-store"]], "Instruction folding": [[599, "instruction-folding"]], "Instruction naming": [[599, "instruction-naming"]], "Instruction referencing locations": [[708, "instruction-referencing-locations"]], "InstructionSelect": [[678, null]], "Instructions": [[0, "instructions"], [1, "instructions"], [2, "instructions"], [3, "instructions"], [4, "instructions"], [5, "instructions"], [6, "instructions"], [7, "instructions"], [8, "instructions"], [9, "instructions"], [578, "instructions"], [579, "instructions"], [582, "instructions"]], "Instrumentation Attributes": [[775, "instrumentation-attributes"]], "Instrumenting your C/C++/Objective-C Application": [[774, "instrumenting-your-c-c-objective-c-application"]], "Integer Extension and Truncation": [[676, "integer-extension-and-truncation"]], "Integer Numbers": [[581, "integer-numbers"]], "Integer Operations": [[676, "integer-operations"]], "Integer Type": [[702, "integer-type"]], "Integer/bitwise reductions": [[676, "integer-bitwise-reductions"]], "Intel IA-32-specific Options": [[609, "intel-ia-32-specific-options"]], "Intended Usage": [[700, "intended-usage"]], "Interaction and relationship between User and Use objects": [[734, "interaction-and-relationship-between-user-and-use-objects"]], "Interfaces which may be specified": [[585, "interfaces-which-may-be-specified"]], "Internal vs External Storage": [[651, "internal-vs-external-storage"]], "Interoperability with std::error_code and ErrorOr": [[734, "interoperability-with-std-error-code-and-erroror"]], "Interprocedural Checking": [[751, "interprocedural-checking"]], "Intrinsic": [[759, "intrinsic"]], "Intrinsic Functions": [[702, "intrinsic-functions"]], "Intrinsic Global Variables": [[702, "intrinsic-global-variables"]], "IntrinsicID Operands": [[708, "intrinsicid-operands"]], "Intrinsics": [[655, "intrinsics"], [753, "intrinsics"]], "Introducing New Components into LLVM": [[659, "introducing-new-components-into-llvm"]], "Introduction": [[577, "introduction"]], "Introduction - Achieving consistency in how we deal with bug reports": [[592, "introduction-achieving-consistency-in-how-we-deal-with-bug-reports"]], "Introduction - Got bugs?": [[696, "introduction-got-bugs"]], "Introduction --- What is a pass?": [[772, "introduction-what-is-a-pass"], [773, "introduction-what-is-a-pass"]], "Introduction and Quickstart": [[709, "introduction-and-quickstart"]], "Introduction and Warning": [[662, "introduction-and-warning"]], "Introduction to SelectionDAGs": [[599, "introduction-to-selectiondags"]], "Introduction to YAML": [[777, "introduction-to-yaml"]], "Introduction to YAML I/O": [[777, "introduction-to-yaml-i-o"]], "Introduction to the LLVM remark diagnostics": [[745, "introduction-to-the-llvm-remark-diagnostics"]], "Invalidation and updating": [[713, "invalidation-and-updating"]], "InvokeInst": [[591, "invokeinst"]], "Invoking clang": [[652, "invoking-clang"]], "Invoking opt": [[716, "invoking-opt"]], "Is Generally Reliable": [[599, "is-generally-reliable"]], "Issues with explicit pointee types": [[718, "issues-with-explicit-pointee-types"]], "Itanium (ia64)": [[653, "itanium-ia64"]], "Itanium ABI Zero-cost Exception Handling": [[661, "itanium-abi-zero-cost-exception-handling"]], "Iterating over def-use & use-def chains": [[734, "iterating-over-def-use-use-def-chains"]], "Iterating over predecessors & successors of blocks": [[734, "iterating-over-predecessors-successors-of-blocks"]], "Iterating over the BasicBlock in a Function": [[734, "iterating-over-the-basicblock-in-a-function"]], "Iterating over the Instruction in a BasicBlock": [[734, "iterating-over-the-instruction-in-a-basicblock"]], "Iterating over the Instruction in a Function": [[734, "iterating-over-the-instruction-in-a-function"]], "JIT": [[769, "jit"]], "JIT API Basics": [[779, "jit-api-basics"]], "JIT Linking": [[701, "jit-linking"]], "JIT Support": [[599, "jit-support"], [771, "jit-support"]], "JITLink Availability and Feature Status": [[701, "jitlink-availability-and-feature-status"]], "JITLink and ORC's ObjectLinkingLayer": [[701, null]], "JITLink and ObjectLinkingLayer": [[701, "jitlink-and-objectlinkinglayer"]], "JITLinkMemoryManager and Security": [[701, "jitlinkmemorymanager-and-security"]], "JSON Reference": [[759, "json-reference"]], "Jump-table Index Operands": [[708, "jump-table-index-operands"]], "Kaleidoscope Tutorial": [[783, null], [784, null], [785, null], [786, null], [787, null], [788, null], [789, null], [790, null], [791, null], [792, null]], "Kaleidoscope: Adding Debug Information": [[801, null]], "Kaleidoscope: Adding JIT and Optimizer Support": [[796, null]], "Kaleidoscope: Code generation to LLVM IR": [[795, null]], "Kaleidoscope: Compiling to Object Code": [[800, null]], "Kaleidoscope: Conclusion and other useful LLVM tidbits": [[802, null]], "Kaleidoscope: Extending the Language: Control Flow": [[797, null]], "Kaleidoscope: Extending the Language: Mutable Variables": [[799, null]], "Kaleidoscope: Extending the Language: User-defined Operators": [[798, null]], "Kaleidoscope: Implementing a Language with LLVM": [[804, "kaleidoscope-implementing-a-language-with-llvm"]], "Kaleidoscope: Implementing a Parser and AST": [[794, null]], "Kaleidoscope: Kaleidoscope Introduction and the Lexer": [[793, null]], "KaleidoscopeJIT": [[779, "kaleidoscopejit"]], "Keep \"Internal\" Headers Private": [[602, "keep-internal-headers-private"]], "Keep the current coding standard": [[739, "keep-the-current-coding-standard"]], "Keeping LLVM Portable": [[756, "keeping-llvm-portable"]], "Keeping Membership Current": [[748, "keeping-membership-current"]], "Keeping git blame usable": [[739, "keeping-git-blame-usable"]], "Kernel Descriptor": [[582, "kernel-descriptor"]], "Kernel Dispatch": [[582, "kernel-dispatch"]], "Kernel Functions": [[582, "kernel-functions"]], "Kernel Metadata": [[715, "kernel-metadata"]], "Kernel Prolog": [[582, "kernel-prolog"]], "Kicking the Tires": [[798, "kicking-the-tires"]], "Known Bits Analysis": [[679, null]], "Known issues:": [[690, "known-issues"]], "Kokkos": [[738, "kokkos"]], "L": [[703, "l"]], "LDR and LD1": [[588, "ldr-and-ld1"]], "LEB128": [[656, "leb128"]], "LF_ARGLIST (0x1201)": [[721, "lf-arglist-0x1201"]], "LF_ARRAY (0x1503)": [[721, "lf-array-0x1503"]], "LF_BCLASS (0x1400)": [[721, "lf-bclass-0x1400"]], "LF_BINTERFACE (0x151a)": [[721, "lf-binterface-0x151a"]], "LF_BITFIELD (0x1205)": [[721, "lf-bitfield-0x1205"]], "LF_BUILDINFO (0x1603)": [[721, "lf-buildinfo-0x1603"]], "LF_CLASS (0x1504)": [[721, "lf-class-0x1504"]], "LF_ENDPRECOMP (0x0014)": [[721, "lf-endprecomp-0x0014"]], "LF_ENUM (0x1507)": [[721, "lf-enum-0x1507"]], "LF_ENUMERATE (0x1502)": [[721, "lf-enumerate-0x1502"]], "LF_FIELDLIST (0x1203)": [[721, "lf-fieldlist-0x1203"]], "LF_FUNC_ID (0x1601)": [[721, "lf-func-id-0x1601"]], "LF_INDEX (0x1404)": [[721, "lf-index-0x1404"]], "LF_INTERFACE (0x1519)": [[721, "lf-interface-0x1519"]], "LF_IVBCLASS (0x1402)": [[721, "lf-ivbclass-0x1402"]], "LF_LABEL (0x000e)": [[721, "lf-label-0x000e"]], "LF_MEMBER (0x150d)": [[721, "lf-member-0x150d"]], "LF_METHOD (0x150f)": [[721, "lf-method-0x150f"]], "LF_METHODLIST (0x1206)": [[721, "lf-methodlist-0x1206"]], "LF_MFUNCTION (0x1009)": [[721, "lf-mfunction-0x1009"]], "LF_MFUNC_ID (0x1602)": [[721, "lf-mfunc-id-0x1602"]], "LF_MODIFIER (0x1001)": [[721, "lf-modifier-0x1001"]], "LF_NESTTYPE (0x1510)": [[721, "lf-nesttype-0x1510"]], "LF_ONEMETHOD (0x1511)": [[721, "lf-onemethod-0x1511"]], "LF_PADn (0xf0 + n)": [[721, "lf-padn-0xf0-n"]], "LF_POINTER (0x1002)": [[721, "lf-pointer-0x1002"]], "LF_PRECOMP (0x1509)": [[721, "lf-precomp-0x1509"]], "LF_PROCEDURE (0x1008)": [[721, "lf-procedure-0x1008"]], "LF_STMEMBER (0x150e)": [[721, "lf-stmember-0x150e"]], "LF_STRING_ID (0x1605)": [[721, "lf-string-id-0x1605"]], "LF_STRUCTURE (0x1505)": [[721, "lf-structure-0x1505"]], "LF_SUBSTR_LIST (0x1604)": [[721, "lf-substr-list-0x1604"]], "LF_TYPESERVER2 (0x1515)": [[721, "lf-typeserver2-0x1515"]], "LF_UDT_MOD_SRC_LINE (0x1607)": [[721, "lf-udt-mod-src-line-0x1607"]], "LF_UDT_SRC_LINE (0x1606)": [[721, "lf-udt-src-line-0x1606"]], "LF_UNION (0x1506)": [[721, "lf-union-0x1506"]], "LF_VBCLASS (0x1401)": [[721, "lf-vbclass-0x1401"]], "LF_VFTABLE (0x151d)": [[721, "lf-vftable-0x151d"]], "LF_VFUNCTAB (0x1409)": [[721, "lf-vfunctab-0x1409"]], "LF_VTSHAPE (0x000a)": [[721, "lf-vtshape-0x000a"]], "LGTM - How a Patch Is Accepted": [[601, "lgtm-how-a-patch-is-accepted"]], "LIT EXAMPLE TESTS": [[608, "lit-example-tests"]], "LIT INFRASTRUCTURE": [[608, "lit-infrastructure"]], "LLDB Version": [[657, "lldb-version"]], "LLJIT and LLLazyJIT": [[717, "lljit-and-lllazyjit"]], "LLVM": [[582, "llvm"]], "LLVM 13.0.0 Release Notes": [[743, null]], "LLVM Alias Analysis Infrastructure": [[585, null]], "LLVM Atomic Instructions and Concurrency Guide": [[586, null]], "LLVM BackEnds": [[759, "llvm-backends"]], "LLVM Bitcode File Format": [[589, null]], "LLVM Block Frequency Terminology": [[590, null]], "LLVM Branch Weight Metadata": [[591, null]], "LLVM Bug Life Cycle": [[592, null]], "LLVM Builds and Distributions": [[769, "llvm-builds-and-distributions"]], "LLVM Code Coverage Mapping Format": [[656, null]], "LLVM Code Generation": [[661, "llvm-code-generation"]], "LLVM Code-Review Policy and Practices": [[601, null]], "LLVM Coding Standards": [[602, null]], "LLVM Command Guide": [[607, null]], "LLVM Community Code of Conduct": [[600, null]], "LLVM Community Support Policy": [[757, null]], "LLVM Developers Meeting presentations": [[713, "llvm-developers-meeting-presentations"]], "LLVM Extensions": [[663, null]], "LLVM Function Attribute": [[774, "llvm-function-attribute"]], "LLVM IR": [[742, "llvm-ir"]], "LLVM IR Attributes": [[582, "llvm-ir-attributes"]], "LLVM IR Blocks": [[589, "llvm-ir-blocks"]], "LLVM IR Encoding": [[589, "llvm-ir-encoding"]], "LLVM IR Features": [[668, "llvm-ir-features"]], "LLVM IR Intrinsics": [[582, "llvm-ir-intrinsics"]], "LLVM IR Lane ordering": [[588, "llvm-ir-lane-ordering"]], "LLVM IR Magic Number": [[589, "llvm-ir-magic-number"]], "LLVM IR Representation": [[656, "llvm-ir-representation"]], "LLVM IR for If/Then/Else": [[797, "llvm-ir-for-if-then-else"]], "LLVM IR for the 'for' Loop": [[797, "llvm-ir-for-the-for-loop"]], "LLVM Language Reference Manual": [[702, null]], "LLVM Link Time Optimization: Design and Implementation": [[705, null]], "LLVM Loop Terminology (and Canonical Forms)": [[706, null]], "LLVM Optimization Passes": [[796, "llvm-optimization-passes"]], "LLVM PowerPC ABI": [[599, "llvm-powerpc-abi"]], "LLVM Programmer's Manual": [[734, null]], "LLVM Project Wrappers": [[598, "llvm-project-wrappers"]], "LLVM Reference": [[742, "llvm-reference"]], "LLVM Security Group": [[748, null]], "LLVM Testing Infrastructure Organization": [[766, "llvm-testing-infrastructure-organization"]], "LLVM Tutorial: Table of Contents": [[804, null]], "LLVM bitstream remarks": [[745, "llvm-bitstream-remarks"]], "LLVM bugpoint tool: design and usage": [[593, null]], "LLVM regular sync-up calls": [[670, "id10"]], "LLVM \u6e2c\u8a66\u57fa\u790e\u8a2d\u65bd\u6307\u5357": [[766, null]], "LLVM \u76f8\u95dc\u7684\u8b8a\u6578": [[597, "llvm-related-variables"]], "LLVM \u8a2d\u8a08\uff06\u6982\u89bd": [[778, "llvm-design-overview"]], "LLVM \u958b\u767c\u8005\u65b9\u91dd": [[659, null]], "LLVM's Analysis and Transform Passes": [[732, null]], "LLVM's Optional Rich Disassembly Output": [[710, null]], "LOCAL CONFIGURATION FILES": [[608, "local-configuration-files"]], "LTO Post-Link Module Flags Metadata": [[702, "lto-post-link-module-flags-metadata"]], "Label Type": [[702, "label-type"]], "Laissez faire": [[739, "laissez-faire"]], "Lanai": [[653, "lanai"]], "Lane identifier": [[582, "lane-identifier"]], "Language Extensions and File Format Changes": [[750, "language-extensions-and-file-format-changes"]], "Language Names": [[577, "amdgpu-dwarf-language-names-table"]], "Language and Compiler Issues": [[602, "language-and-compiler-issues"]], "Language encodings": [[577, "amdgpu-dwarf-language-encodings-table"]], "Language-Specific Optimizations": [[802, "language-specific-optimizations"]], "Languages, Libraries, and Standards": [[602, "languages-libraries-and-standards"]], "Late Machine Code Optimizations": [[599, "late-machine-code-optimizations"]], "Layering Over Another libc": [[737, "layering-over-another-libc"]], "Laziness": [[717, "laziness"]], "Lazy Compilation": [[781, "lazy-compilation"]], "Lazy Initialization with ManagedStatic": [[734, "lazy-initialization-with-managedstatic"]], "Leaf Records": [[721, "leaf-records"]], "Leaks": [[704, "leaks"]], "Leftover Transformations": [[767, "leftover-transformations"]], "Legacy License Structure": [[659, "legacy-license-structure"]], "Legal": [[771, "legal"]], "Legalizer": [[680, null]], "Lexer Extensions for If/Then/Else": [[797, "lexer-extensions-for-if-then-else"]], "Lexer Extensions for the 'for' Loop": [[797, "lexer-extensions-for-the-for-loop"]], "LibFuzzer": [[742, "libfuzzer"]], "Libcalls: __atomic_*": [[586, "libcalls-atomic"]], "Libcalls: __sync_*": [[586, "libcalls-sync"]], "Library": [[747, "library"]], "Library Layering": [[602, "library-layering"]], "License": [[664, "license"]], "Licensing": [[686, "licensing"]], "Lifetime": [[700, "lifetime"]], "Limitation": [[768, null]], "Limitations": [[585, "limitations"], [708, "limitations"]], "Limitations and Half Baked Ideas": [[755, "limitations-and-half-baked-ideas"]], "Line Number Information": [[577, "line-number-information"], [577, "id3"], [582, "line-number-information"]], "Line number header entry format encodings": [[577, "amdgpu-dwarf-line-number-header-entry-format-encodings-table"]], "LinkGraph": [[701, "linkgraph"]], "Linkage Types": [[702, "linkage-types"]], "Linking with Libdevice": [[715, "linking-with-libdevice"]], "Links": [[671, "links"], [673, "links"], [752, "links"]], "Linux": [[587, "linux"], [653, "linux"]], "Linux Intel": [[587, "linux-intel"]], "Lists": [[598, "lists"], [752, "lists"]], "Lists of Lists": [[598, "lists-of-lists"]], "Literal Operations": [[577, "literal-operations"]], "Live In Registers": [[708, "live-in-registers"]], "Live Intervals": [[599, "live-intervals"]], "Live Intervals Analysis": [[599, "live-intervals-analysis"]], "Live Variable Analysis": [[599, "live-variable-analysis"]], "LiveDebugValues expansion of variable locations": [[750, "livedebugvalues-expansion-of-variable-locations"]], "Load/Store Unit and Memory Consistency Model": [[631, "load-store-unit-and-memory-consistency-model"]], "Loaded Code Object Path Uniform Resource Identifier (URI)": [[582, "loaded-code-object-path-uniform-resource-identifier-uri"]], "Loads folded into data-invariant operations can be hardened after the operation": [[751, "loads-folded-into-data-invariant-operations-can-be-hardened-after-the-operation"]], "Local LLVM Configuration": [[671, "local-llvm-configuration"]], "Locating clobbers yourself": [[713, "locating-clobbers-yourself"]], "Location": [[596, "location"]], "Location Description Operations": [[577, "location-description-operations"]], "Location List Expressions": [[577, "location-list-expressions"]], "Logarithmical search": [[714, "logarithmical-search"]], "Lookup By Address Section Header": [[582, "lookup-by-address-section-header"]], "Lookup By Name": [[577, "lookup-by-name"]], "Lookup By Name Section Header": [[582, "lookup-by-name-section-header"]], "Loop Closed SSA (LCSSA)": [[706, "loop-closed-ssa-lcssa"]], "Loop Definition": [[706, "loop-definition"]], "Loop Distribution": [[767, "loop-distribution"]], "Loop Interchange": [[767, "loop-interchange"]], "Loop Scale": [[590, "loop-scale"]], "Loop Simplify Form": [[706, "loop-simplify-form"]], "Loop Unrolling": [[767, "loop-unrolling"]], "Loop Vectorization and Interleaving": [[767, "loop-vectorization-and-interleaving"]], "LoopInfo": [[706, "loopinfo"]], "Loops": [[598, "loops"]], "Loops with unknown trip count": [[770, "loops-with-unknown-trip-count"]], "Low Level Type": [[675, "low-level-type"]], "Lowering Quality and Representation Overhead": [[755, "lowering-quality-and-representation-overhead"]], "Lowering:": [[702, "lowering"], [702, "id1260"], [702, "id1281"], [702, "id1286"], [702, "id1291"], [702, "id1293"], [702, "id1295"], [702, "id1297"], [702, "id1299"], [702, "id1301"], [702, "id1303"], [702, "id1305"], [702, "id1307"], [702, "id1309"], [702, "id1311"], [702, "id1313"], [702, "id1315"], [702, "id1317"], [702, "id1319"], [702, "id1321"], [702, "id1323"], [702, "id1325"], [702, "id1327"]], "M": [[703, "m"]], "M0": [[582, "m0"]], "MACH-O ONLY OPTIONS AND COMMANDS": [[634, "mach-o-only-options-and-commands"]], "MACH-O SPECIFIC OPTIONS": [[632, "mach-o-specific-options"], [641, "mach-o-specific-options"], [646, "mach-o-specific-options"]], "MACH-O-SPECIFIC OPTIONS": [[633, "mach-o-specific-options"]], "MCJIT Design and Implementation": [[707, null]], "MCSymbol Operands": [[708, "mcsymbol-operands"]], "MERGE": [[637, "merge"]], "METADATA_ATTACHMENT Contents": [[589, "metadata-attachment-contents"]], "METADATA_BLOCK Contents": [[589, "metadata-block-contents"]], "META_BLOCK": [[745, "meta-block"]], "MIMG": [[0, "mimg"], [2, "mimg"], [3, "mimg"], [4, "mimg"], [9, "mimg"]], "MIMG Modifiers": [[580, "mimg-modifiers"]], "MIPS": [[653, "mips"]], "MIR Testing Guide": [[708, "mir-testing-guide"]], "MODULE_BLOCK Contents": [[589, "module-block-contents"]], "MODULE_CODE_ALIAS Record": [[589, "module-code-alias-record"]], "MODULE_CODE_ASM Record": [[589, "module-code-asm-record"]], "MODULE_CODE_DATALAYOUT Record": [[589, "module-code-datalayout-record"]], "MODULE_CODE_DEPLIB Record": [[589, "module-code-deplib-record"]], "MODULE_CODE_FUNCTION Record": [[589, "module-code-function-record"]], "MODULE_CODE_GCNAME Record": [[589, "module-code-gcname-record"]], "MODULE_CODE_GLOBALVAR Record": [[589, "module-code-globalvar-record"]], "MODULE_CODE_SECTIONNAME Record": [[589, "module-code-sectionname-record"]], "MODULE_CODE_TRIPLE Record": [[589, "module-code-triple-record"]], "MODULE_CODE_VERSION Record": [[589, "module-code-version-record"]], "MRI SCRIPTS": [[613, "mri-scripts"]], "MRI Script Commands": [[613, "mri-script-commands"]], "MSF Container Options": [[636, "msf-container-options"]], "MSF File Options": [[636, "msf-file-options"]], "MTBUF": [[0, "mtbuf"], [2, "mtbuf"], [3, "mtbuf"], [4, "mtbuf"], [9, "mtbuf"]], "MUBUF": [[0, "mubuf"], [2, "mubuf"], [3, "mubuf"], [4, "mubuf"], [8, "mubuf"], [9, "mubuf"], [582, "mubuf"]], "MUBUF/MTBUF Modifiers": [[580, "mubuf-mtbuf-modifiers"]], "Mach-O Changes": [[750, "mach-o-changes"]], "MachSuite": [[738, "machsuite"]], "Machine Basic Blocks": [[708, "machine-basic-blocks"]], "Machine Code Emitter": [[771, "machine-code-emitter"]], "Machine Functions": [[708, "machine-functions"]], "Machine IR (MIR) Format Reference Manual": [[708, null]], "Machine Instructions": [[708, "machine-instructions"]], "Machine Instructions Format Reference": [[708, "machine-instructions-format-reference"]], "Machine Operands": [[708, "machine-operands"]], "Machine code description classes": [[599, "machine-code-description-classes"]], "Machine code in SSA form": [[599, "machine-code-in-ssa-form"]], "Machine-specific Assembly Syntax": [[663, "machine-specific-assembly-syntax"]], "MachineInstr Bundles": [[599, "machineinstr-bundles"]], "MachineVerifier": [[681, "machineverifier"]], "Magic Numbers": [[589, "magic-numbers"]], "Mailing Lists": [[670, "mailing-lists"]], "Maintenance of cc-by-default settings": [[592, "maintenance-of-cc-by-default-settings"]], "Maintenance of products/components metadata": [[592, "maintenance-of-products-components-metadata"]], "Making a Major Change": [[659, "making-a-major-change"]], "Making and Submitting a Patch": [[659, "making-and-submitting-a-patch"]], "Making simple changes": [[734, "making-simple-changes"]], "Map-Like Containers (std::map, DenseMap, etc)": [[734, "map-like-containers-std-map-densemap-etc"]], "Mapping Region": [[656, "mapping-region"], [656, "id7"]], "Mapping Regions": [[656, "mapping-regions"]], "Mapping from instructions to functional units": [[599, "mapping-from-instructions-to-functional-units"]], "Mapping virtual registers to physical registers": [[599, "mapping-virtual-registers-to-physical-registers"]], "Mappings": [[777, "mappings"]], "Markdown Quickstart Template": [[709, null]], "Marking Functions as Kernels": [[715, "marking-functions-as-kernels"]], "Masked Vector Expanding Load and Compressing Store Intrinsics": [[702, "masked-vector-expanding-load-and-compressing-store-intrinsics"]], "Masked Vector Gather and Scatter Intrinsics": [[702, "masked-vector-gather-and-scatter-intrinsics"]], "Masked Vector Load and Store Intrinsics": [[702, "masked-vector-load-and-store-intrinsics"]], "Matching Newline Characters": [[603, "matching-newline-characters"]], "Matching a PDB to its executable": [[727, "matching-a-pdb-to-its-executable"]], "Matrix Intrinsics": [[702, "matrix-intrinsics"]], "Mechanical Source Issues": [[602, "mechanical-source-issues"]], "Meetups and social events": [[670, "meetups-and-social-events"]], "MemTagSanitizer": [[712, null]], "Member Records": [[721, "member-records"]], "Members of the Code of Conduct Advisory Committee": [[746, "members-of-the-code-of-conduct-advisory-committee"]], "Memory Access and Addressing Operations": [[702, "memory-access-and-addressing-operations"]], "Memory Dependence Analysis": [[585, "memory-dependence-analysis"]], "Memory Location Description Operations": [[577, "memory-location-description-operations"]], "Memory Management with JITLinkMemoryManager": [[701, "memory-management-with-jitlinkmemorymanager"]], "Memory Model": [[582, "memory-model"]], "Memory Model GFX10": [[582, "memory-model-gfx10"]], "Memory Model GFX6-GFX9": [[582, "memory-model-gfx6-gfx9"]], "Memory Model GFX90A": [[582, "memory-model-gfx90a"]], "Memory Model for Concurrent Operations": [[702, "memory-model-for-concurrent-operations"]], "Memory Operations": [[676, "memory-operations"]], "Memory Scopes": [[582, "memory-scopes"]], "Memory Spaces": [[582, "memory-spaces"]], "Memory Use Markers": [[702, "memory-use-markers"]], "Memory in LLVM": [[799, "memory-in-llvm"]], "Memory reclaiming": [[747, "memory-reclaiming"]], "MemorySSA": [[713, null]], "MemorySSA Structure": [[713, "memoryssa-structure"]], "Merge Requests": [[694, "merge-requests"]], "MergeFunctions pass, how it works": [[714, null]], "MergeFunctions, main fields and runOnModule": [[714, "mergefunctions-main-fields-and-runonmodule"]], "Merging Patches": [[694, "merging-patches"]], "Merging process, mergeTwoFunctions": [[714, "merging-process-mergetwofunctions"]], "Metadata": [[702, "metadata"]], "Metadata Nodes and Metadata Strings": [[702, "metadata-nodes-and-metadata-strings"]], "Metadata Records": [[776, "metadata-records"]], "Metadata Type": [[702, "metadata-type"]], "Metadata on Loops": [[767, "metadata-on-loops"]], "Method information": [[602, "method-information"]], "Microscopic Details": [[602, "microscopic-details"]], "Microsoft Visual C++": [[597, "microsoft-visual-c"]], "Middle-end optimization bugs": [[696, "middle-end-optimization-bugs"]], "Minimising cost of downstream merges": [[739, "minimising-cost-of-downstream-merges"]], "Minimize Soft Errors": [[756, "minimize-soft-errors"]], "Minimizing Binary Size": [[774, "minimizing-binary-size"]], "Minimizing docker image size": [[660, "minimizing-docker-image-size"]], "Minimum Legality For Operations": [[680, "minimum-legality-for-operations"]], "Minimum Legality For Vectors": [[680, "minimum-legality-for-vectors"]], "Minimum Legality for Pointers": [[680, "minimum-legality-for-pointers"]], "Minimum Rule Set": [[680, "minimum-rule-set"]], "Minimum Rules For Scalars": [[680, "minimum-rules-for-scalars"]], "Miscellaneous Attributes": [[708, "miscellaneous-attributes"]], "Miscellaneous Modifiers": [[580, "miscellaneous-modifiers"]], "Miscellaneous Options": [[636, "miscellaneous-options"]], "Miscellaneous Problems": [[773, "miscellaneous-problems"]], "Miscellaneous Resources": [[653, "miscellaneous-resources"]], "Miscellaneous Variables": [[735, "miscellaneous-variables"]], "Miscellaneous option modifiers": [[651, "miscellaneous-option-modifiers"]], "Miscompilation debugger": [[593, "miscompilation-debugger"]], "Miscompilations": [[696, "miscompilations"]], "Mixing References and Raw Pointers": [[755, "mixing-references-and-raw-pointers"]], "Mnemonic Aliases": [[599, "mnemonic-aliases"]], "Modeling Memory Effects": [[666, "modeling-memory-effects"]], "Modifications for other Targets": [[692, "modifications-for-other-targets"]], "Modifiers": [[578, "modifiers"], [579, "modifiers"], [580, "modifiers"], [582, "modifiers"]], "Modifiers (generic)": [[613, "modifiers-generic"]], "Modifiers (operation specific)": [[613, "modifiers-operation-specific"]], "Module & File Options": [[636, "module-file-options"]], "Module Flags Metadata": [[702, "module-flags-metadata"]], "Module Info Substream": [[722, "module-info-substream"]], "Module Options": [[636, "module-options"]], "Module Path Summary Entry": [[702, "module-path-summary-entry"]], "Module Structure": [[702, "module-structure"]], "Module Symbols": [[720, "module-symbols"]], "Module \u985e\u5225": [[734, "the-module-class"]], "Module-Level Inline Assembly": [[702, "module-level-inline-assembly"]], "Modules": [[598, "modules"]], "Modules, Functions and Macros": [[598, "modules-functions-and-macros"]], "Monorepo": [[736, "monorepo"]], "Monorepo Drawbacks": [[736, "monorepo-drawbacks"]], "Monorepo Variant": [[736, "monorepo-variant"], [736, "workflow-monocheckout-multicommit"], [736, "workflow-mono-branching"], [736, "workflow-mono-bisecting"]], "Monotonic": [[586, "monotonic"]], "More Platforms": [[774, "more-platforms"]], "More Resources": [[674, "more-resources"]], "More examples": [[704, "more-examples"]], "More information": [[712, "more-information"]], "Motivation": [[577, "motivation"], [665, "motivation"], [740, "motivation"], [753, "motivation"]], "Moved": [[758, "moved"], [763, "moved"]], "Moving LLVM Projects to GitHub": [[736, null]], "Moving Local Branches to the Monorepo": [[736, "moving-local-branches-to-the-monorepo"]], "Multi-distribution configurations": [[595, "multi-distribution-configurations"]], "Multi-phase communication between libLTO and linker": [[705, "multi-phase-communication-between-liblto-and-linker"]], "Multi-stage PGO": [[584, "multi-stage-pgo"]], "Multiple Suspend Points": [[655, "multiple-suspend-points"]], "Multithreaded LLVM": [[773, "multithreaded-llvm"]], "Must Code Be Reviewed Prior to Being Committed?": [[601, "must-code-be-reviewed-prior-to-being-committed"]], "Must, May, and No Alias Responses": [[585, "must-may-and-no-alias-responses"]], "Mutable Variables in Kaleidoscope": [[799, "mutable-variables-in-kaleidoscope"]], "Mutation testing for IR-level transformations": [[697, "mutation-testing-for-ir-level-transformations"]], "Mutation testing for MIR-level transformations": [[697, "mutation-testing-for-mir-level-transformations"]], "Mutators and Input Generators": [[667, "mutators-and-input-generators"]], "My First Language Frontend with LLVM Tutorial": [[803, null]], "N": [[703, "n"]], "NAS Parallel Benchmarks": [[738, "nas-parallel-benchmarks"]], "NVPTX": [[653, "nvptx"]], "NVPTX Intrinsics": [[715, "nvptx-intrinsics"]], "NWChem": [[738, "nwchem"]], "Name Accelerator Tables": [[750, "name-accelerator-tables"]], "Name Hash Tables": [[750, "name-hash-tables"]], "Name Types, Functions, Variables, and Enumerators Properly": [[602, "name-types-functions-variables-and-enumerators-properly"]], "Named Alternatives": [[651, "named-alternatives"]], "Named Metadata": [[702, "named-metadata"]], "Named Stream Map": [[727, "named-stream-map"]], "Namespace Indentation": [[602, "namespace-indentation"]], "Narrative structure": [[714, "narrative-structure"]], "Narrow focus: test-case reduction": [[594, "narrow-focus-test-case-reduction"]], "Native Object File Wrapper Format": [[589, "native-object-file-wrapper-format"]], "Near Future Work": [[717, "near-future-work"]], "Nested Calls and Copy Elision": [[700, "nested-calls-and-copy-elision"]], "New Assignment Operator": [[799, "new-assignment-operator"]], "New DWARF Attributes": [[750, "new-dwarf-attributes"]], "New DWARF Constants": [[750, "new-dwarf-constants"]], "New DWARF Tags": [[750, "new-dwarf-tags"]], "New LLVM Project License Framework": [[659, "new-llvm-project-license-framework"]], "New exception handling instructions": [[661, "new-exception-handling-instructions"]], "NewBuffer Records": [[776, "newbuffer-records"]], "NewCpuId Records": [[776, "newcpuid-records"]], "Next Steps": [[775, "next-steps"]], "No Duplicate Implementations": [[756, "no-duplicate-implementations"]], "No Exposed Data": [[756, "no-exposed-data"]], "No Exposed Functions": [[756, "no-exposed-functions"]], "No Normalization": [[777, "no-normalization"]], "No Unused Functionality": [[756, "no-unused-functionality"]], "No Virtual Methods": [[756, "no-virtual-methods"]], "No global aliases, replaceDirectCallers": [[714, "no-global-aliases-replacedirectcallers"]], "No target passed to clang": [[692, "no-target-passed-to-clang"]], "No throw Specifications": [[756, "no-throw-specifications"]], "Nomination process": [[748, "nomination-process"]], "Non-Experts Should Review Code": [[601, "non-experts-should-review-code"]], "Non-Goals": [[713, "non-goals"]], "Non-Integral Pointer Type": [[702, "non-integral-pointer-type"]], "Non-Kernel Functions": [[582, "non-kernel-functions"]], "Non-comprehensive list of changes in this release": [[743, "non-comprehensive-list-of-changes-in-this-release"]], "Normalization": [[777, "normalization"]], "NotAtomic": [[586, "notatomic"]], "Notation": [[0, "notation"], [1, "notation"], [2, "notation"], [3, "notation"], [4, "notation"], [5, "notation"], [6, "notation"], [7, "notation"], [8, "notation"], [9, "notation"], [578, "notation"], [578, "id2"], [578, "amdgpu-syn-instruction-operand-notation"], [578, "amdgpu-syn-instruction-modifier-notation"]], "Note Records": [[582, "note-records"]], "Notes On Building LLVM/Clang on ARM": [[689, "notes-on-building-llvm-clang-on-arm"]], "Notes:": [[690, "notes"]], "Numbers": [[581, "numbers"]], "O": [[703, "o"]], "O(log(N))": [[714, "o-log-n"]], "OPTIONS": [[603, "options"], [604, "options"], [606, "options"], [609, "options"], [613, "options"], [614, "options"], [615, "options"], [616, "options"], [617, "options"], [617, "id5"], [617, "id8"], [617, "id11"], [618, "options"], [619, "options"], [621, "options"], [622, "options"], [623, "options"], [624, "options"], [625, "options"], [627, "options"], [628, "options"], [630, "options"], [631, "options"], [632, "options"], [634, "options"], [635, "options"], [637, "options"], [637, "id5"], [637, "id8"], [638, "options"], [640, "options"], [642, "options"], [643, "options"], [644, "options"], [646, "options"], [649, "options"], [650, "options"]], "ORC Design and Implementation": [[717, null]], "OUTPUT OPTIONS": [[608, "output-options"]], "OVERLAP": [[637, "overlap"]], "ObjC ARC Attached Call Operand Bundles": [[702, "objc-arc-attached-call-operand-bundles"]], "Object Lifetime": [[702, "object-lifetime"]], "Object Loading": [[707, "object-loading"]], "Object lifetime in optimized code": [[750, "object-lifetime-in-optimized-code"]], "Object lifetimes and scoping": [[750, "object-lifetimes-and-scoping"]], "ObjectLinkingLayer Plugins": [[701, "objectlinkinglayer-plugins"]], "Objective": [[596, "objective"]], "Objective-C ARC Runtime Intrinsics": [[702, "objective-c-arc-runtime-intrinsics"]], "Objective-C Extensions": [[750, "objective-c-extensions"]], "Objective-C Garbage Collection Module Flags Metadata": [[702, "objective-c-garbage-collection-module-flags-metadata"]], "Objects on the Stack": [[755, "objects-on-the-stack"]], "Obtaining Commit Access": [[659, "obtaining-commit-access"]], "Obtaining Help": [[652, "obtaining-help"]], "Official Testing": [[694, "official-testing"]], "On Managing Revision Numbers with Git": [[736, "on-managing-revision-numbers-with-git"]], "On-Disk Format": [[724, "on-disk-format"]], "Ongoing Development Directions": [[770, "ongoing-development-directions"]], "Online Sync-Ups": [[670, "online-sync-ups"]], "Opaque Pointers": [[718, null]], "Opaque Structure Types": [[702, "opaque-structure-types"]], "Opcode": [[578, "opcode"]], "Opcode Mnemonic": [[579, "opcode-mnemonic"]], "OpenBenchmarking.org CPU / Processor Suite": [[738, "openbenchmarking-org-cpu-processor-suite"]], "OpenCL": [[582, "opencl"]], "OpenCL kernel implicit arguments appended for AMDHSA OS": [[582, "opencl-kernel-implicit-arguments-appended-for-amdhsa-os-table"]], "OpenCV": [[738, "opencv"]], "OpenMP 4.x SIMD Benchmarks": [[738, "openmp-4-x-simd-benchmarks"]], "Operand Bundles": [[702, "operand-bundles"]], "Operands": [[578, "operands"], [579, "operands"], [581, "operands"], [582, "operands"]], "Operands and Operations": [[581, "operands-and-operations"]], "Operands:": [[702, "operands"], [702, "id386"], [702, "id390"], [702, "id394"], [702, "id398"], [753, "operands"], [753, "id4"]], "Operation Expressions": [[577, "operation-expressions"], [582, "operation-expressions"]], "Operations": [[613, "operations"]], "OptParserDefs": [[759, "optparserdefs"]], "Optimization Hint": [[702, "optimization-hint"]], "Optimization Hints": [[676, "optimization-hints"]], "Optimization outside atomic": [[586, "optimization-outside-atomic"]], "Optimizations": [[652, "optimizations"], [751, "optimizations"], [769, "optimizations"]], "Optimizations, Alternatives, and Tradeoffs": [[751, "optimizations-alternatives-and-tradeoffs"]], "Optimizing Modules using the IRTransformLayer": [[780, "optimizing-modules-using-the-irtransformlayer"]], "Option Attributes": [[651, "option-attributes"]], "Option Modifiers": [[651, "option-modifiers"]], "Optional Configuration Items": [[671, "optional-configuration-items"]], "Optional Debug Header Stream": [[722, "optional-debug-header-stream"]], "Options": [[636, "options"], [636, "id3"], [636, "id5"], [636, "id8"], [636, "id10"], [636, "id12"], [687, "options"], [704, "options"], [747, "options"], [766, "options"]], "Options for Optimizing LLVM": [[595, "options-for-optimizing-llvm"]], "Options for Reducing Size": [[595, "options-for-reducing-size"]], "Order of Keys": [[777, "order-of-keys"]], "Other": [[591, "other"], [613, "other"]], "Other Debugger Information": [[577, "other-debugger-information"]], "Other Design Notes": [[596, "other-design-notes"]], "Other Features": [[766, "other-features"]], "Other Intrinsics": [[715, "other-intrinsics"]], "Other Map-Like Container Options": [[734, "other-map-like-container-options"]], "Other Operations": [[676, "other-operations"], [702, "other-operations"]], "Other Options": [[636, "other-options"]], "Other Sequential Container options": [[734, "other-sequential-container-options"]], "Other Set-Like Container Options": [[734, "other-set-like-container-options"]], "Other Things to Consider": [[666, "other-things-to-consider"]], "Other Types": [[598, "other-types"]], "Other Values": [[702, "other-values"]], "Other documents, collections, notes": [[653, "other-documents-collections-notes"]], "Other relevant lists": [[653, "other-relevant-lists"]], "Other useful AliasAnalysis methods": [[585, "other-useful-aliasanalysis-methods"]], "Other useful references": [[734, "other-useful-references"]], "Output": [[704, "output"], [777, "output"]], "Output constraints": [[702, "output-constraints"]], "Outstanding Questions": [[736, "outstanding-questions"]], "Overloading Based on __host__ and __device__ Attributes": [[652, "overloading-based-on-host-and-device-attributes"]], "Overview & Core Concepts": [[755, "overview-core-concepts"]], "Overview of available features": [[668, "overview-of-available-features"]], "Overview of the Release Process": [[744, "overview-of-the-release-process"]], "Overview:": [[655, "overview"], [655, "id4"], [655, "id7"], [655, "id10"], [655, "id13"], [655, "id16"], [655, "id19"], [655, "id21"], [655, "id25"], [655, "id28"], [655, "id31"], [655, "id34"], [655, "id37"], [655, "id39"], [655, "id41"], [655, "id44"], [655, "id46"], [655, "id49"], [655, "id53"], [655, "id56"], [655, "id58"], [655, "id61"], [702, "overview"], [702, "id31"], [702, "id36"], [702, "id41"], [702, "id47"], [702, "id52"], [702, "id57"], [702, "id62"], [702, "id67"], [702, "id72"], [702, "id79"], [702, "id82"], [702, "id87"], [702, "id92"], [702, "id97"], [702, "id102"], [702, "id107"], [702, "id112"], [702, "id117"], [702, "id122"], [702, "id127"], [702, "id132"], [702, "id137"], [702, "id142"], [702, "id147"], [702, "id152"], [702, "id157"], [702, "id162"], [702, "id167"], [702, "id172"], [702, "id177"], [702, "id182"], [702, "id187"], [702, "id192"], [702, "id197"], [702, "id202"], [702, "id207"], [702, "id212"], [702, "id217"], [702, "id222"], [702, "id227"], [702, "id232"], [702, "id237"], [702, "id242"], [702, "id247"], [702, "id252"], [702, "id257"], [702, "id262"], [702, "id267"], [702, "id272"], [702, "id277"], [702, "id282"], [702, "id287"], [702, "id292"], [702, "id297"], [702, "id302"], [702, "id307"], [702, "id312"], [702, "id317"], [702, "id322"], [702, "id327"], [702, "id332"], [702, "id337"], [702, "id343"], [702, "id350"], [702, "id357"], [702, "id361"], [702, "id365"], [702, "id370"], [702, "id374"], [702, "id378"], [702, "id382"], [702, "id385"], [702, "id389"], [702, "id393"], [702, "id397"], [702, "id401"], [702, "id405"], [702, "id408"], [702, "id411"], [702, "id415"], [702, "id418"], [702, "id422"], [702, "id425"], [702, "id428"], [702, "id431"], [702, "id434"], [702, "id437"], [702, "id440"], [702, "id444"], [702, "id448"], [702, "id451"], [702, "id454"], [702, "id458"], [702, "id462"], [702, "id466"], [702, "id469"], [702, "id472"], [702, "id475"], [702, "id479"], [702, "id483"], [702, "id486"], [702, "id489"], [702, "id492"], [702, "id495"], [702, "id499"], [702, "id503"], [702, "id507"], [702, "id511"], [702, "id515"], [702, "id519"], [702, "id523"], [702, "id527"], [702, "id531"], [702, "id535"], [702, "id539"], [702, "id543"], [702, "id547"], [702, "id551"], [702, "id555"], [702, "id559"], [702, "id563"], [702, "id567"], [702, "id571"], [702, "id575"], [702, "id579"], [702, "id583"], [702, "id587"], [702, "id591"], [702, "id595"], [702, "id599"], [702, "id603"], [702, "id607"], [702, "id611"], [702, "id615"], [702, "id619"], [702, "id623"], [702, "id626"], [702, "id629"], [702, "id633"], [702, "id637"], [702, "id641"], [702, "id645"], [702, "id649"], [702, "id654"], [702, "id659"], [702, "id664"], [702, "id669"], [702, "id674"], [702, "id749"], [702, "id751"], [702, "id756"], [702, "id760"], [702, "id764"], [702, "id768"], [702, "id772"], [702, "id776"], [702, "id780"], [702, "id783"], [702, "id787"], [702, "id790"], [702, "id794"], [702, "id797"], [702, "id800"], [702, "id803"], [702, "id806"], [702, "id809"], [702, "id812"], [702, "id815"], [702, "id818"], [702, "id821"], [702, "id824"], [702, "id827"], [702, "id830"], [702, "id834"], [702, "id837"], [702, "id840"], [702, "id843"], [702, "id846"], [702, "id851"], [702, "id856"], [702, "id861"], [702, "id866"], [702, "id870"], [702, "id874"], [702, "id879"], [702, "id884"], [702, "id889"], [702, "id894"], [702, "id899"], [702, "id904"], [702, "id909"], [702, "id914"], [702, "id919"], [702, "id924"], [702, "id929"], [702, "id934"], [702, "id939"], [702, "id944"], [702, "id949"], [702, "id954"], [702, "id959"], [702, "id964"], [702, "id969"], [702, "id973"], [702, "id977"], [702, "id981"], [702, "id985"], [702, "id989"], [702, "id993"], [702, "id997"], [702, "id1001"], [702, "id1005"], [702, "id1009"], [702, "id1013"], [702, "id1017"], [702, "id1021"], [702, "id1025"], [702, "id1029"], [702, "id1033"], [702, "id1037"], [702, "id1041"], [702, "id1045"], [702, "id1049"], [702, "id1053"], [702, "id1057"], [702, "id1061"], [702, "id1065"], [702, "id1069"], [702, "id1073"], [702, "id1077"], [702, "id1081"], [702, "id1085"], [702, "id1089"], [702, "id1093"], [702, "id1097"], [702, "id1101"], [702, "id1105"], [702, "id1109"], [702, "id1113"], [702, "id1117"], [702, "id1121"], [702, "id1125"], [702, "id1129"], [702, "id1133"], [702, "id1137"], [702, "id1141"], [702, "id1145"], [702, "id1149"], [702, "id1153"], [702, "id1157"], [702, "id1161"], [702, "id1165"], [702, "id1169"], [702, "id1173"], [702, "id1177"], [702, "id1180"], [702, "id1184"], [702, "id1188"], [702, "id1192"], [702, "id1198"], [702, "id1202"], [702, "id1206"], [702, "id1210"], [702, "id1214"], [702, "id1218"], [702, "id1222"], [702, "id1226"], [702, "id1230"], [702, "id1235"], [702, "id1238"], [702, "id1241"], [702, "id1243"], [702, "id1247"], [702, "id1251"], [702, "id1255"], [702, "id1257"], [702, "id1262"], [702, "id1264"], [702, "id1268"], [702, "id1272"], [702, "id1275"], [702, "id1278"], [702, "id1283"], [702, "id1288"], [702, "id1329"], [702, "id1333"], [702, "id1337"], [715, "overview"], [715, "id5"], [715, "id8"], [715, "id10"], [753, "overview"], [753, "id3"]], "P": [[703, "p"]], "PARAMATTR_BLOCK Contents": [[589, "paramattr-block-contents"]], "PARAMATTR_CODE_ENTRY Record": [[589, "paramattr-code-entry-record"]], "PARAMATTR_CODE_ENTRY_OLD Record": [[589, "paramattr-code-entry-old-record"]], "PARAMATTR_GROUP_BLOCK Contents": [[589, "paramattr-group-block-contents"]], "PARAMATTR_GRP_CODE_ENTRY Record": [[589, "paramattr-grp-code-entry-record"]], "PARSEC": [[738, "parsec"]], "PDB Feature Codes": [[727, "pdb-feature-codes"]], "PDB Stream Options": [[636, "pdb-stream-options"]], "PE/COFF SPECIFIC OPTIONS": [[641, "pe-coff-specific-options"]], "PWM-benchmarking": [[738, "pwm-benchmarking"]], "Packet data access (BPF_ABS, BPF_IND)": [[599, "packet-data-access-bpf-abs-bpf-ind"]], "Padding Instruction": [[577, "padding-instruction"]], "Padding Records": [[721, "padding-records"]], "ParRes": [[738, "parres"]], "Parallel Fuzzing": [[704, "parallel-fuzzing"]], "Parameter Attributes": [[702, "parameter-attributes"]], "Params": [[702, "params"]], "Parboil Benchmarks": [[738, "parboil-benchmarks"]], "Parser Basics": [[794, "parser-basics"]], "Parser Extensions for If/Then/Else": [[797, "parser-extensions-for-if-then-else"]], "Parser Extensions for the 'for' Loop": [[797, "parser-extensions-for-the-for-loop"]], "Parsing a list of options": [[651, "parsing-a-list-of-options"]], "Parsing the Rest": [[794, "parsing-the-rest"]], "Partial unrolling during vectorization": [[770, "partial-unrolling-during-vectorization"]], "Pass Ordering": [[666, "pass-ordering"]], "Pass Skipping Implementation": [[719, "pass-skipping-implementation"]], "Pass Statistics": [[773, "pass-statistics"]], "Pass classes and requirements": [[773, "pass-classes-and-requirements"]], "Pass registration": [[773, "pass-registration"]], "Pass-Specific Transformation Metadata": [[767, "pass-specific-transformation-metadata"]], "Passes": [[701, "passes"]], "Passing functions and other callable objects": [[734, "passing-functions-and-other-callable-objects"]], "Passing strings (the StringRef and Twine classes)": [[734, "passing-strings-the-stringref-and-twine-classes"]], "PatLeaf Predicates": [[678, "patleaf-predicates"]], "Patch reversion policy": [[659, "patch-reversion-policy"]], "Patents": [[659, "patents"]], "Per-Shader Table": [[582, "per-shader-table"]], "Performance": [[770, "performance"]], "Performance Overhead": [[751, "performance-overhead"]], "Performance Tips for Frontend Authors": [[666, null]], "Peripheral Tier": [[757, "peripheral-tier"]], "Personality Function": [[702, "personality-function"]], "Phase 1 : Read LLVM Bitcode Files": [[705, "phase-1-read-llvm-bitcode-files"]], "Phase 2 : Symbol Resolution": [[705, "phase-2-symbol-resolution"]], "Phase 3 : Optimize Bitcode Files": [[705, "phase-3-optimize-bitcode-files"]], "Phase 4 : Symbol Resolution after optimization": [[705, "phase-4-symbol-resolution-after-optimization"]], "Phi placement": [[713, "phi-placement"]], "Philosophy behind LLVM debugging information": [[750, "philosophy-behind-llvm-debugging-information"]], "Picking the Right Data Structure for a Task": [[734, "picking-the-right-data-structure-for-a-task"]], "PlaceSafepoints": [[755, "placesafepoints"]], "Placement of Object Code": [[735, "placement-of-object-code"]], "Platform": [[747, "platform"]], "Platform Support": [[737, "platform-support"]], "Platform-Specific Tests": [[766, "platform-specific-tests"]], "Pointer Aliasing Rules": [[702, "pointer-aliasing-rules"]], "Pointer Capture": [[702, "pointer-capture"]], "Pointer Induction Variables": [[770, "pointer-induction-variables"]], "Pointer Type": [[702, "pointer-type"]], "Poison Values": [[702, "poison-values"]], "PolyBench": [[738, "polybench"]], "PolyMage": [[738, "polymage"]], "Porting GlobalISel to A New Target": [[682, null]], "Positional Arguments": [[651, "positional-options"]], "Possible solutions": [[714, "possible-solutions"]], "PowerPC": [[653, "powerpc"]], "Pragma loop hint directives": [[770, "pragma-loop-hint-directives"]], "Pre-Release Process": [[744, "pre-release-process"]], "Pre-merge testing": [[733, "pre-merge-testing"]], "Preallocated Operand Bundles": [[702, "preallocated-operand-bundles"]], "Precision": [[713, "precision"]], "Predicate Operands": [[708, "predicate-operands"]], "Prefer Preincrement": [[602, "prefer-preincrement"]], "Prefer zext over sext when legal": [[666, "prefer-zext-over-sext-when-legal"]], "Prefix Data": [[702, "prefix-data"]], "Preliminaries": [[771, "preliminaries"]], "Prerequisite Reading": [[771, "prerequisite-reading"]], "Prerequisites": [[652, "prerequisites"], [690, "prerequisites"], [692, "prerequisites"]], "Present and Deleted Bit Vectors": [[724, "present-and-deleted-bit-vectors"]], "Present state": [[714, "present-state"]], "Preserving Debug Information Intrinsics": [[702, "preserving-debug-information-intrinsics"]], "Preserving the flags while hardening loaded values on Haswell, Zen, and newer processors": [[751, "preserving-the-flags-while-hardening-loaded-values-on-haswell-zen-and-newer-processors"]], "Primitives": [[589, "primitives"]], "Print Detailed Records": [[759, "print-detailed-records"]], "Print Records": [[759, "print-records"]], "Private Segment Buffer": [[582, "private-segment-buffer"]], "Privileges and Responsibilities of LLVM Security Group Members": [[748, "privileges-and-responsibilities-of-llvm-security-group-members"]], "Problem": [[588, "problem"]], "Problem Statement": [[751, "problem-statement"]], "Process": [[748, "process"]], "Processors": [[582, "processors"]], "Profile Guided Optimization": [[764, "profile-guided-optimization"]], "Program Dependence Graph": [[658, "program-dependence-graph"]], "Program Scope Entities": [[577, "program-scope-entities"]], "Program start": [[599, "program-start"]], "Programmatic Errors": [[734, "programmatic-errors"]], "Progress and Future Work": [[685, "progress-and-future-work"]], "Prolog/Epilog": [[599, "prolog-epilog"]], "Prolog/Epilog Code Insertion": [[599, "prolog-epilog-code-insertion"]], "Prologue Data": [[702, "prologue-data"]], "Promote": [[771, "promote"]], "Propagating and consuming errors based on types": [[734, "propagating-and-consuming-errors-based-on-types"]], "Properties of the LLVM IR": [[802, "properties-of-the-llvm-ir"]], "Proposal": [[750, "proposal"]], "Proposed New Design": [[594, "proposed-new-design"]], "Protect large, load-heavy blocks with a single lfence": [[751, "protect-large-load-heavy-blocks-with-a-single-lfence"]], "Provide a Virtual Method Anchor for Classes in Headers": [[602, "provide-a-virtual-method-anchor-for-classes-in-headers"]], "Provisional Plan": [[739, "provisional-plan"]], "Pseudo-Counter:": [[656, "pseudo-counter"]], "PseudoLowering": [[759, "pseudolowering"]], "Public Symbols": [[720, "public-symbols"]], "Publication": [[652, "publication"]], "Putting It All Together": [[800, "putting-it-all-together"]], "Q. Does libFuzzer Support Windows?": [[704, "q-does-libfuzzer-support-windows"]], "Q. LibFuzzer crashes on my complicated fuzz target (but works fine for me on smaller targets).": [[704, "q-libfuzzer-crashes-on-my-complicated-fuzz-target-but-works-fine-for-me-on-smaller-targets"]], "Q. So, what exactly this Fuzzer is good for?": [[704, "q-so-what-exactly-this-fuzzer-is-good-for"]], "Q. When libFuzzer is not a good solution for a problem?": [[704, "q-when-libfuzzer-is-not-a-good-solution-for-a-problem"]], "Q. Why doesn't libFuzzer use any of the LLVM support?": [[704, "q-why-doesn-t-libfuzzer-use-any-of-the-llvm-support"]], "Quality": [[659, "quality"]], "Questions about code generated by the demo page": [[664, "questions-about-code-generated-by-the-demo-page"]], "Questions?": [[600, "questions"]], "Quick Start": [[668, "quick-start"]], "Quick Start --- Writing hello world": [[772, "quick-start-writing-hello-world"], [773, "quick-start-writing-hello-world"]], "Quick Start Guide": [[651, "quick-start-guide"]], "Quick start": [[597, "quick-start"], [766, "quick-start"]], "Quickstart": [[764, "quickstart"]], "Quickstart for using LTO with autotooled projects": [[686, "quickstart-for-using-lto-with-autotooled-projects"]], "R": [[703, "r"]], "RAJA Performance Suite": [[738, "raja-performance-suite"]], "REMAPPING FILE": [[619, "remapping-file"]], "REMARK_BLOCK": [[745, "remark-block"]], "REPORT COMMAND": [[617, "report-command"]], "RIP-relative addressing is even easier to break": [[751, "rip-relative-addressing-is-even-easier-to-break"]], "RISC-V": [[653, "risc-v"]], "RTTI for Open Class Hierarchies": [[695, "rtti-for-open-class-hierarchies"]], "Random-access": [[714, "random-access"]], "Randomness": [[747, "randomness"]], "Rarely-used CMake variables": [[597, "rarely-used-cmake-variables"]], "Rationale": [[669, "rationale"], [702, null]], "Read barrier: llvm.gcread": [[668, "read-barrier-llvm-gcread"]], "Read-only sub-project mirrors": [[736, "read-only-sub-project-mirrors"]], "Read/write SVN bridge": [[736, "read-write-svn-bridge"]], "Reading PTX Special Registers": [[715, "reading-ptx-special-registers"]], "Reading and writing references in the heap": [[668, "reading-and-writing-references-in-the-heap"]], "Record Categories": [[720, "record-categories"], [721, "record-categories"]], "Recording On Stack Regions": [[755, "recording-on-stack-regions"]], "Recoverable Errors": [[734, "recoverable-errors"]], "Reducing the number of acronyms": [[739, "reducing-the-number-of-acronyms"]], "Reductions": [[770, "reductions"]], "Reference": [[742, null]], "Reference Guide": [[651, "reference-guide"]], "References": [[577, "references"], [658, "references"], [668, "references"], [736, "references"], [739, "references"], [740, "references"], [741, "references"]], "Reflection Parameters": [[715, "reflection-parameters"]], "Refs": [[702, "refs"]], "RegBankSelect": [[683, null]], "RegBankSelect Modes": [[683, "regbankselect-modes"]], "Register Allocation": [[599, "register-allocator"]], "Register Bank": [[675, "register-bank"]], "Register Flags": [[708, "register-flags"]], "Register Identifier": [[582, "register-identifier"]], "Register Layout for Packed Work-Item ID Method": [[582, "amdgpu-amdhsa-register-layout-for-packed-work-item-id-method-table"]], "Register Location Description Operations": [[577, "register-location-description-operations"]], "Register Operands": [[708, "register-operands"]], "Register Rule Instructions": [[577, "register-rule-instructions"]], "Register Set and Register Classes": [[771, "register-set-and-register-classes"]], "RegisterInfo": [[759, "registerinfo"]], "Registering dynamically loaded passes": [[773, "registering-dynamically-loaded-passes"]], "Registers": [[708, "mir-registers"]], "Regression test structure": [[766, "regression-test-structure"]], "Regression tests": [[766, "regression-tests"]], "Reinstatement": [[757, "reinstatement"]], "Related LLVM components": [[741, "related-llvm-components"]], "Release": [[586, "release"]], "Release Administrative Tasks": [[694, "release-administrative-tasks"]], "Release Final Tasks": [[694, "release-final-tasks"]], "Release Patch Rules": [[694, "release-patch-rules"]], "Release Process": [[694, "release-process"], [744, "release-process"]], "Release Qualification Criteria": [[694, "release-qualification-criteria"]], "Release Timeline": [[694, "release-timeline"]], "Relevant CMake Options": [[595, "relevant-cmake-options"]], "Relicensing": [[659, "relicensing"]], "Relocatable Expressions": [[581, "relocatable-expressions"]], "Relocation Records": [[582, "relocation-records"]], "Relocations": [[663, "relocations"], [663, "id2"], [663, "id4"]], "Relocations Along Exceptional Edges": [[755, "relocations-along-exceptional-edges"]], "Remark diagnostics": [[745, "remark-diagnostics"]], "Remark streamers": [[745, "remark-streamers"]], "Remarks": [[745, null]], "Remote execution via llvm-jitlink-executor": [[701, "remote-execution-via-llvm-jitlink-executor"]], "Replacing an Instruction with another Value": [[734, "replacing-an-instruction-with-another-value"]], "Replacing individual instructions": [[734, "replacing-individual-instructions"]], "Replacing multiple uses of Users and Values": [[734, "replacing-multiple-uses-of-users-and-values"]], "Reporting Guide": [[746, null]], "Reporting Regressions": [[694, "reporting-regressions"]], "Reporting a Security Issue": [[654, "reporting-a-security-issue"]], "Reporting bugs": [[592, "reporting-bugs"]], "Representation": [[702, "representation"]], "Representation of Pointers": [[585, "representation-of-pointers"]], "Representing Type Information using Type Metadata": [[768, "representing-type-information-using-type-metadata"]], "Representing X86 addressing modes in MachineInstrs": [[599, "representing-x86-addressing-modes-in-machineinstrs"]], "Requesting a review via the command line": [[733, "requesting-a-review-via-the-command-line"]], "Requesting a review via the web interface": [[733, "requesting-a-review-via-the-web-interface"]], "Required Variables": [[735, "required-variables"]], "Required components in the code generator": [[599, "required-components-in-the-code-generator"]], "Required initialization calls": [[585, "required-initialization-calls"]], "Required methods to override": [[585, "required-methods-to-override"]], "Required passes": [[772, "required-passes"]], "Requirements": [[671, "requirements"], [673, "requirements"], [733, "requirements"], [757, "requirements"], [757, "id2"], [766, "requirements"]], "Resampling": [[738, "resampling"]], "Resolving/Closing bugs": [[592, "resolving-closing-bugs"]], "Resources": [[684, null]], "Response files": [[651, "response-files"]], "Restricted Operation Semantics": [[666, "restricted-operation-semantics"]], "Restrictions": [[661, "restrictions"]], "Resuming merge": [[704, "resuming-merge"]], "Returned-Continuation Lowering": [[655, "returned-continuation-lowering"]], "Returning Errors from error handlers": [[734, "returning-errors-from-error-handlers"]], "Reverse Iterators": [[770, "reverse-iterators"]], "Reverting a change": [[671, "reverting-a-change"]], "Reviewing code with Phabricator": [[733, "reviewing-code-with-phabricator"]], "Rewrite API of internal functions to directly propagate predicate state": [[751, "rewrite-api-of-internal-functions-to-directly-propagate-predicate-state"]], "RewriteStatepointsForGC": [[755, "rewritestatepointsforgc"]], "RewriteStatepointsForGC intrinsic lowering": [[755, "rewritestatepointsforgc-intrinsic-lowering"]], "Roadmap": [[701, "roadmap"], [717, "roadmap"], [740, "roadmap"]], "Rodinia": [[738, "rodinia"]], "Root Cause Analysis": [[594, "root-cause-analysis"]], "Rotated Loops": [[706, "rotated-loops"]], "Row Creation Instructions": [[577, "row-creation-instructions"]], "Row State Instructions": [[577, "row-state-instructions"]], "Rule Actions": [[680, "rule-actions"]], "Rule Predicates": [[680, "rule-predicates"]], "Rule Processing and Declaring Rules": [[680, "rule-processing-and-declaring-rules"]], "Rules": [[669, "rules"]], "Rules for updating debug locations": [[697, "rules-for-updating-debug-locations"]], "Rules for updating debug values": [[697, "rules-for-updating-debug-values"]], "Rules of Thumb": [[695, "rules-of-thumb"]], "Running": [[704, "running"], [764, "running"]], "Running CMake and Building": [[693, "running-cmake-and-building"]], "Running Different Tests": [[765, "running-different-tests"]], "Running a pass with opt": [[772, "running-a-pass-with-opt"], [773, "running-a-pass-with-opt"]], "Running the Kernel": [[715, "running-the-kernel"]], "Running the test-suite via LNT": [[764, "running-the-test-suite-via-lnt"]], "Running the test-suite via Makefiles (deprecated)": [[764, "running-the-test-suite-via-makefiles-deprecated"]], "Runtime Checks of Pointers": [[770, "runtime-checks-of-pointers"]], "Runtime Preemption Specifiers": [[702, "runtime-preemption-specifiers"]], "RuntimeDyld": [[701, "runtimedyld"]], "S": [[703, "s"]], "SDWA": [[0, "sdwa"]], "SDWA Modifiers": [[580, "sdwa-modifiers"]], "SDWA Operand Modifiers": [[580, "sdwa-operand-modifiers"]], "SEE ALSO": [[604, "see-also"], [606, "see-also"], [608, "see-also"], [609, "see-also"], [611, "see-also"], [612, "see-also"], [614, "see-also"], [615, "see-also"], [618, "see-also"], [621, "see-also"], [622, "see-also"], [624, "see-also"], [625, "see-also"], [627, "see-also"], [630, "see-also"], [632, "see-also"], [633, "see-also"], [634, "see-also"], [635, "see-also"], [639, "see-also"], [640, "see-also"], [641, "see-also"], [645, "see-also"], [646, "see-also"]], "SEH filter expressions": [[661, "seh-filter-expressions"]], "SELECTION OPTIONS": [[608, "selection-options"]], "SGPR Register Set Up Order": [[582, "amdgpu-amdhsa-sgpr-register-set-up-order-table"]], "SHOW": [[637, "show"]], "SHOW COMMAND": [[617, "show-command"]], "SHT_LLVM_ADDRSIG Section (address-significance table)": [[663, "sht-llvm-addrsig-section-address-significance-table"]], "SHT_LLVM_BB_ADDR_MAP Section (basic block address map)": [[663, "sht-llvm-bb-addr-map-section-basic-block-address-map"]], "SHT_LLVM_CALL_GRAPH_PROFILE Section (Call Graph Profile)": [[663, "sht-llvm-call-graph-profile-section-call-graph-profile"]], "SHT_LLVM_DEPENDENT_LIBRARIES Section (Dependent Libraries)": [[663, "sht-llvm-dependent-libraries-section-dependent-libraries"]], "SHT_LLVM_SYMPART Section (symbol partition specification)": [[663, "sht-llvm-sympart-section-symbol-partition-specification"]], "SJLJ Intrinsics": [[661, "sjlj-intrinsics"]], "SLAMBench": [[738, "slambench"]], "SMEM": [[0, "smem"], [3, "smem"], [4, "smem"], [9, "smem"]], "SMRD": [[2, "smrd"]], "SMRD/SMEM": [[582, "smrd-smem"]], "SMRD/SMEM Modifiers": [[580, "smrd-smem-modifiers"]], "SOP1": [[0, "sop1"], [2, "sop1"], [3, "sop1"], [4, "sop1"], [9, "sop1"], [582, "sop1"]], "SOP2": [[0, "sop2"], [2, "sop2"], [3, "sop2"], [4, "sop2"], [9, "sop2"], [582, "sop2"]], "SOPC": [[0, "sopc"], [2, "sopc"], [3, "sopc"], [4, "sopc"], [9, "sopc"], [582, "sopc"]], "SOPK": [[0, "sopk"], [2, "sopk"], [3, "sopk"], [4, "sopk"], [9, "sopk"]], "SOPP": [[0, "sopp"], [2, "sopp"], [3, "sopp"], [4, "sopp"], [9, "sopp"], [582, "sopp"]], "SPARC": [[653, "sparc"]], "SPEC CPU 2017": [[738, "spec-cpu-2017"]], "SPEC OMP2012": [[738, "spec-omp2012"]], "SSA-based Machine Code Optimizations": [[599, "ssa-based-machine-code-optimizations"]], "STRTAB_BLOCK Contents": [[589, "strtab-block-contents"]], "SUBSTITUTIONS": [[608, "substitutions"]], "SUMMARY OUTPUT DEFINITIONS": [[615, "summary-output-definitions"]], "SUPPORTED FORMATS": [[633, "supported-formats"]], "SYNOPSIS": [[603, "synopsis"], [604, "synopsis"], [605, "synopsis"], [606, "synopsis"], [608, "synopsis"], [609, "synopsis"], [610, "synopsis"], [611, "synopsis"], [612, "synopsis"], [613, "synopsis"], [614, "synopsis"], [615, "synopsis"], [616, "synopsis"], [617, "synopsis"], [617, "id1"], [617, "id3"], [617, "id6"], [617, "id9"], [618, "synopsis"], [619, "synopsis"], [620, "synopsis"], [621, "synopsis"], [622, "synopsis"], [623, "synopsis"], [624, "synopsis"], [625, "synopsis"], [626, "synopsis"], [627, "synopsis"], [628, "synopsis"], [629, "synopsis"], [630, "synopsis"], [631, "synopsis"], [632, "synopsis"], [633, "synopsis"], [634, "synopsis"], [635, "synopsis"], [637, "synopsis"], [637, "id1"], [637, "id3"], [637, "id6"], [638, "synopsis"], [639, "synopsis"], [640, "synopsis"], [641, "synopsis"], [642, "synopsis"], [643, "synopsis"], [644, "synopsis"], [645, "synopsis"], [646, "synopsis"], [647, "synopsis"], [648, "synopsis"], [649, "synopsis"], [650, "synopsis"]], "S_BLOCK32 (0x1103)": [[720, "s-block32-0x1103"]], "S_BPREL32 (0x110b)": [[720, "s-bprel32-0x110b"]], "S_BUILDINFO (0x114c)": [[720, "s-buildinfo-0x114c"]], "S_CALLEES (0x115a)": [[720, "s-callees-0x115a"]], "S_CALLERS (0x115b)": [[720, "s-callers-0x115b"]], "S_CALLSITEINFO (0x1139)": [[720, "s-callsiteinfo-0x1139"]], "S_COFFGROUP (0x1137)": [[720, "s-coffgroup-0x1137"]], "S_COMPILE2 (0x1116)": [[720, "s-compile2-0x1116"]], "S_COMPILE3 (0x113c)": [[720, "s-compile3-0x113c"]], "S_CONSTANT (0x1107)": [[720, "s-constant-0x1107"]], "S_DEFRANGE (0x113f)": [[720, "s-defrange-0x113f"]], "S_DEFRANGE_FRAMEPOINTER_REL (0x1142)": [[720, "s-defrange-framepointer-rel-0x1142"]], "S_DEFRANGE_FRAMEPOINTER_REL_FULL_SCOPE (0x1144)": [[720, "s-defrange-framepointer-rel-full-scope-0x1144"]], "S_DEFRANGE_REGISTER (0x1141)": [[720, "s-defrange-register-0x1141"]], "S_DEFRANGE_REGISTER_REL (0x1145)": [[720, "s-defrange-register-rel-0x1145"]], "S_DEFRANGE_SUBFIELD (0x1140)": [[720, "s-defrange-subfield-0x1140"]], "S_DEFRANGE_SUBFIELD_REGISTER (0x1143)": [[720, "s-defrange-subfield-register-0x1143"]], "S_END (0x0006)": [[720, "s-end-0x0006"]], "S_ENVBLOCK (0x113d)": [[720, "s-envblock-0x113d"]], "S_EXPORT (0x1138)": [[720, "s-export-0x1138"]], "S_FASTLINK (0x1167)": [[720, "s-fastlink-0x1167"]], "S_FILESTATIC (0x1153)": [[720, "s-filestatic-0x1153"]], "S_FRAMECOOKIE (0x113a)": [[720, "s-framecookie-0x113a"]], "S_FRAMEPROC (0x1012)": [[720, "s-frameproc-0x1012"]], "S_GDATA32": [[720, "s-gdata32"]], "S_GMANDATA (0x111d)": [[720, "s-gmandata-0x111d"]], "S_GPROC32 (0x1110)": [[720, "s-gproc32-0x1110"]], "S_GPROC32_ID (0x1147)": [[720, "s-gproc32-id-0x1147"]], "S_GTHREAD32 (0x1113)": [[720, "s-gthread32-0x1113"]], "S_HEAPALLOCSITE (0x115e)": [[720, "s-heapallocsite-0x115e"]], "S_INLINEES (0x1168)": [[720, "s-inlinees-0x1168"]], "S_INLINESITE (0x114d)": [[720, "s-inlinesite-0x114d"]], "S_INLINESITE_END (0x114e)": [[720, "s-inlinesite-end-0x114e"]], "S_LABEL32 (0x1105)": [[720, "s-label32-0x1105"]], "S_LDATA32 (0x110c)": [[720, "s-ldata32-0x110c"]], "S_LMANDATA (0x111c)": [[720, "s-lmandata-0x111c"]], "S_LOCAL (0x113e)": [[720, "s-local-0x113e"]], "S_LPROC32 (0x110f)": [[720, "s-lproc32-0x110f"]], "S_LPROC32_DPC (0x1155)": [[720, "s-lproc32-dpc-0x1155"]], "S_LPROC32_DPC_ID (0x1156)": [[720, "s-lproc32-dpc-id-0x1156"]], "S_LPROC32_ID (0x1146)": [[720, "s-lproc32-id-0x1146"]], "S_LPROCREF (0x1127)": [[720, "s-lprocref-0x1127"]], "S_LTHREAD32 (0x1112)": [[720, "s-lthread32-0x1112"]], "S_MANCONSTANT (0x112d)": [[720, "s-manconstant-0x112d"]], "S_OBJNAME (0x1101)": [[720, "s-objname-0x1101"]], "S_PROCREF (0x1125)": [[720, "s-procref-0x1125"]], "S_PROC_ID_END (0x114f)": [[720, "s-proc-id-end-0x114f"]], "S_PUB32 (0x110e)": [[720, "s-pub32-0x110e"]], "S_REGISTER (0x1106)": [[720, "s-register-0x1106"]], "S_REGREL32 (0x1111)": [[720, "s-regrel32-0x1111"]], "S_SECTION (0x1136)": [[720, "s-section-0x1136"]], "S_THUNK32 (0x1102)": [[720, "s-thunk32-0x1102"]], "S_TRAMPOLINE (0x112c)": [[720, "s-trampoline-0x112c"]], "S_UDT (0x1108)": [[720, "s-udt-0x1108"]], "S_UNAMESPACE (0x1124)": [[720, "s-unamespace-0x1124"]], "Safepoint Semantics & Verification": [[755, "safepoint-semantics-verification"]], "Safety Guarantees": [[802, "safety-guarantees"]], "Sample Example": [[699, "sample-example"]], "Saturating floating-point to integer conversions": [[702, "saturating-floating-point-to-integer-conversions"]], "Saturation Arithmetic Intrinsics": [[702, "saturation-arithmetic-intrinsics"]], "Scalar Operations": [[676, "scalar-operations"]], "ScalarEnumerationTraits": [[777, "scalarenumerationtraits"]], "Scalars": [[777, "scalars"]], "Scatter / Gather": [[770, "scatter-gather"]], "Scope": [[598, "scope"]], "Scripting Overview": [[598, "scripting-overview"]], "Scripts": [[744, "scripts"]], "Scrubbing the Local Monorepo": [[736, "scrubbing-the-local-monorepo"]], "Scudo Hardened Allocator": [[747, null]], "Search Algorithms": [[738, "search-algorithms"]], "Search Indexes": [[759, "search-indexes"]], "SearchableTables": [[759, "searchabletables"]], "SearchableTables Reference": [[759, "searchabletables-reference"]], "Section Contribution Substream": [[722, "section-contribution-substream"]], "Section Header": [[577, "section-header"]], "Section Map Substream": [[722, "section-map-substream"]], "Sections": [[582, "sections"]], "Security Group Members": [[748, "security-group-members"]], "See Also": [[602, "see-also"]], "Segmented Addresses": [[577, "segmented-addresses"]], "Segmented Stacks": [[599, "segmented-stacks"]], "Segmented Stacks in LLVM": [[749, null]], "Selecting 'benchmarks'": [[691, "selecting-benchmarks"]], "Selecting an alternative from a set of possibilities": [[651, "selecting-an-alternative-from-a-set-of-possibilities"]], "SelectionDAG Instruction Selection Process": [[599, "selectiondag-instruction-selection-process"]], "SelectionDAG Legalize Phase": [[599, "selectiondag-legalize-phase"]], "SelectionDAG LegalizeTypes Phase": [[599, "selectiondag-legalizetypes-phase"]], "SelectionDAG Optimization Phase: the DAG Combiner": [[599, "selectiondag-optimization-phase-the-dag-combiner"]], "SelectionDAG Rule Imports": [[678, "selectiondag-rule-imports"]], "SelectionDAG Scheduling and Formation Phase": [[599, "selectiondag-scheduling-and-formation-phase"]], "SelectionDAG Select Phase": [[599, "selectiondag-select-phase"]], "Self-contained Headers": [[602, "self-contained-headers"]], "Semantics": [[702, "semantics"]], "Semantics:": [[655, "semantics"], [655, "id6"], [655, "id9"], [655, "id12"], [655, "id15"], [655, "id18"], [655, "id23"], [655, "id27"], [655, "id30"], [655, "id33"], [655, "id36"], [655, "id43"], [655, "id48"], [655, "id51"], [655, "id55"], [655, "id60"], [655, "id63"], [702, "id29"], [702, "id33"], [702, "id38"], [702, "id43"], [702, "id49"], [702, "id54"], [702, "id59"], [702, "id64"], [702, "id69"], [702, "id76"], [702, "id80"], [702, "id84"], [702, "id89"], [702, "id94"], [702, "id99"], [702, "id104"], [702, "id109"], [702, "id114"], [702, "id119"], [702, "id124"], [702, "id129"], [702, "id134"], [702, "id139"], [702, "id144"], [702, "id149"], [702, "id154"], [702, "id159"], [702, "id164"], [702, "id169"], [702, "id174"], [702, "id179"], [702, "id184"], [702, "id189"], [702, "id194"], [702, "id199"], [702, "id204"], [702, "id209"], [702, "id214"], [702, "id219"], [702, "id224"], [702, "id229"], [702, "id234"], [702, "id239"], [702, "id244"], [702, "id249"], [702, "id254"], [702, "id259"], [702, "id264"], [702, "id269"], [702, "id274"], [702, "id279"], [702, "id284"], [702, "id289"], [702, "id294"], [702, "id299"], [702, "id304"], [702, "id309"], [702, "id314"], [702, "id319"], [702, "id324"], [702, "id329"], [702, "id334"], [702, "id340"], [702, "id346"], [702, "id353"], [702, "id359"], [702, "id363"], [702, "id367"], [702, "id372"], [702, "id376"], [702, "id380"], [702, "id383"], [702, "id387"], [702, "id391"], [702, "id395"], [702, "id399"], [702, "id403"], [702, "id406"], [702, "id409"], [702, "id413"], [702, "id416"], [702, "id420"], [702, "id423"], [702, "id426"], [702, "id429"], [702, "id432"], [702, "id435"], [702, "id438"], [702, "id442"], [702, "id446"], [702, "id449"], [702, "id452"], [702, "id456"], [702, "id460"], [702, "id464"], [702, "id467"], [702, "id470"], [702, "id473"], [702, "id476"], [702, "id481"], [702, "id497"], [702, "id501"], [702, "id505"], [702, "id509"], [702, "id513"], [702, "id517"], [702, "id521"], [702, "id525"], [702, "id529"], [702, "id533"], [702, "id537"], [702, "id541"], [702, "id545"], [702, "id549"], [702, "id553"], [702, "id557"], [702, "id561"], [702, "id565"], [702, "id569"], [702, "id573"], [702, "id577"], [702, "id581"], [702, "id585"], [702, "id589"], [702, "id593"], [702, "id597"], [702, "id601"], [702, "id605"], [702, "id609"], [702, "id613"], [702, "id617"], [702, "id621"], [702, "id624"], [702, "id627"], [702, "id631"], [702, "id635"], [702, "id639"], [702, "id651"], [702, "id656"], [702, "id661"], [702, "id666"], [702, "id671"], [702, "id676"], [702, "id681"], [702, "id686"], [702, "id691"], [702, "id696"], [702, "id701"], [702, "id706"], [702, "id711"], [702, "id716"], [702, "id721"], [702, "id726"], [702, "id731"], [702, "id736"], [702, "id741"], [702, "id746"], [702, "id753"], [702, "id758"], [702, "id762"], [702, "id766"], [702, "id770"], [702, "id774"], [702, "id778"], [702, "id848"], [702, "id853"], [702, "id858"], [702, "id863"], [702, "id868"], [702, "id872"], [702, "id876"], [702, "id881"], [702, "id886"], [702, "id891"], [702, "id896"], [702, "id901"], [702, "id906"], [702, "id911"], [702, "id916"], [702, "id921"], [702, "id926"], [702, "id931"], [702, "id936"], [702, "id941"], [702, "id946"], [702, "id951"], [702, "id956"], [702, "id961"], [702, "id966"], [702, "id971"], [702, "id975"], [702, "id979"], [702, "id983"], [702, "id987"], [702, "id991"], [702, "id995"], [702, "id999"], [702, "id1003"], [702, "id1007"], [702, "id1011"], [702, "id1015"], [702, "id1019"], [702, "id1023"], [702, "id1027"], [702, "id1031"], [702, "id1035"], [702, "id1039"], [702, "id1043"], [702, "id1047"], [702, "id1051"], [702, "id1055"], [702, "id1059"], [702, "id1063"], [702, "id1067"], [702, "id1071"], [702, "id1075"], [702, "id1079"], [702, "id1083"], [702, "id1087"], [702, "id1091"], [702, "id1095"], [702, "id1099"], [702, "id1103"], [702, "id1107"], [702, "id1111"], [702, "id1115"], [702, "id1119"], [702, "id1123"], [702, "id1127"], [702, "id1131"], [702, "id1135"], [702, "id1139"], [702, "id1143"], [702, "id1147"], [702, "id1151"], [702, "id1155"], [702, "id1159"], [702, "id1163"], [702, "id1167"], [702, "id1171"], [702, "id1175"], [702, "id1178"], [702, "id1182"], [702, "id1186"], [702, "id1190"], [702, "id1194"], [702, "id1200"], [702, "id1204"], [702, "id1208"], [702, "id1212"], [702, "id1216"], [702, "id1220"], [702, "id1224"], [702, "id1228"], [702, "id1232"], [702, "id1245"], [702, "id1249"], [702, "id1253"], [702, "id1259"], [702, "id1266"], [702, "id1269"], [702, "id1273"], [702, "id1276"], [702, "id1280"], [702, "id1285"], [702, "id1290"], [702, "id1331"], [702, "id1335"], [702, "id1339"], [715, "semantics"], [715, "id6"], [753, "semantics"], [753, "id5"]], "Sending patches": [[671, "sending-patches"]], "Sentinels": [[734, "sentinels"]], "Sequence": [[777, "sequence"]], "Sequential Containers (std::vector, std::list, etc)": [[734, "sequential-containers-std-vector-std-list-etc"]], "SequentiallyConsistent": [[586, "sequentiallyconsistent"]], "Serialization modes": [[745, "serialization-modes"]], "Serialized remarks": [[745, "serialized-remarks"]], "Set-Like Containers (std::set, SmallSet, SetVector, etc)": [[734, "set-like-containers-std-set-smallset-setvector-etc"]], "Setjmp/Longjmp Exception Handling": [[661, "setjmp-longjmp-exception-handling"]], "Setting a breakpoint in your pass": [[773, "setting-a-breakpoint-in-your-pass"]], "Setting up the build": [[772, "setting-up-the-build"]], "Setting up the build environment": [[773, "setting-up-the-build-environment"]], "Shared Library": [[731, "shared-library"]], "Sibling call optimization": [[599, "sibling-call-optimization"]], "Sign up": [[733, "sign-up"]], "Signed VBRs": [[589, "signed-vbrs"]], "Simple Constants": [[702, "simple-constants"]], "Simple formatting": [[734, "simple-formatting"]], "Simplifications for Non-Relocating GCs": [[755, "simplifications-for-non-relocating-gcs"]], "Simplifying MIR files": [[708, "simplifying-mir-files"]], "Single Value Types": [[702, "single-value-types"]], "SmallBitVector": [[734, "smallbitvector"]], "Software": [[671, "software"], [673, "software"]], "Source Code Formatting": [[602, "source-code-formatting"]], "Source Code Width": [[602, "source-code-width"]], "Source Filename": [[702, "source-filename"]], "Source Languages": [[577, "source-languages"]], "Source Level Debugging with LLVM": [[750, null]], "Source Locations": [[801, "source-locations"]], "Source Range": [[656, "id10"]], "Source Range:": [[656, "source-range"]], "Source Tree Layout": [[735, "source-tree-layout"]], "Source locations": [[708, "source-locations"]], "Spaces Before Parentheses": [[602, "spaces-before-parentheses"]], "Spanning Tree": [[738, "spanning-tree"]], "SparseBitVector": [[734, "sparsebitvector"]], "Special Case File": [[774, "special-case-file"]], "Special Notes for Library-only Distributions": [[595, "special-notes-for-library-only-distributions"]], "Special Value Operations": [[577, "special-value-operations"]], "Specialised Arithmetic Intrinsics": [[702, "specialised-arithmetic-intrinsics"]], "Specialized Metadata Nodes": [[702, "specialized-metadata-nodes"]], "Specifying GC code generation: gc \"...\"": [[668, "specifying-gc-code-generation-gc"]], "Specifying interactions between passes": [[773, "specifying-interactions-between-passes"]], "Specifying positional options with hyphens": [[651, "specifying-positional-options-with-hyphens"]], "Speculative Load Hardening": [[751, null]], "Sphinx Quickstart Template": [[752, null]], "Spill Table": [[582, "spill-table"]], "Splitting Requests and Conditional Acceptance": [[601, "splitting-requests-and-conditional-acceptance"]], "Stable build": [[660, "stable-build"]], "Stack Map Format": [[753, "stack-map-format"], [755, "stack-map-format"]], "Stack Map Intrinsics": [[702, "stack-map-intrinsics"]], "Stack Map Section": [[753, "stack-map-section"]], "Stack Map Usage": [[753, "stack-map-usage"]], "Stack Operations": [[577, "stack-operations"]], "Stack Pointer": [[582, "stack-pointer"]], "Stack Probe Emission": [[663, "stack-probe-emission"], [663, "id5"]], "Stack Safety Analysis": [[754, null]], "Stack instrumentation": [[712, "stack-instrumentation"]], "Stack maps and patch points in LLVM": [[753, null]], "Standard Blocks": [[589, "standard-block"]], "Standard C/C++ Library Intrinsics": [[702, "standard-c-c-library-intrinsics"]], "Standard Content Descriptions": [[577, "standard-content-descriptions"]], "Standard Hash Tables": [[750, "standard-hash-tables"]], "Standard library support": [[652, "standard-library-support"]], "Startup initialization": [[704, "startup-initialization"]], "Status": [[733, "status"], [755, "status"]], "Status of the New and Legacy Pass Managers": [[716, "status-of-the-new-and-legacy-pass-managers"]], "Stay Informed": [[659, "stay-informed"]], "Step #1 : Before The Move": [[736, "step-1-before-the-move"]], "Step #2 : Git Move": [[736, "step-2-git-move"]], "Step #3: Write Access Move": [[736, "step-3-write-access-move"]], "Step #4 : Post Move": [[736, "step-4-post-move"]], "Steps To Add Builder To LLVM Buildbot": [[688, "steps-to-add-builder-to-llvm-buildbot"]], "Steps for removal": [[757, "steps-for-removal"]], "Straw Man Migration Plan": [[736, "straw-man-migration-plan"]], "Stream Header": [[722, "stream-header"], [727, "stream-header"], [729, "stream-header"]], "Stream Layout": [[725, "stream-layout"]], "Streams": [[730, "streams"]], "String-like containers": [[734, "string-like-containers"]], "StringError": [[734, "stringerror"]], "Strings": [[656, "strings"]], "Structure": [[764, "structure"]], "Structure Type": [[702, "structure-type"]], "Structure Types": [[702, "structure-types"]], "Structure of Call Frame Information": [[577, "structure-of-call-frame-information"]], "Structured Fuzzing of LLVM IR": [[667, "structured-fuzzing-of-llvm-ir"]], "Structured Fuzzing using libprotobuf-mutator": [[667, "structured-fuzzing-using-libprotobuf-mutator"]], "Style Issues": [[602, "style-issues"]], "Sub-Array of Regions": [[656, "sub-array-of-regions"]], "Subcommands": [[636, "subcommands"]], "Subregister Indices": [[708, "subregister-indices"]], "Substitutions": [[766, "substitutions"]], "Substreams": [[722, "substreams"]], "Subtarget": [[759, "subtarget"]], "Subtarget Support": [[771, "subtarget-support"]], "Successors": [[708, "successors"]], "Summary": [[588, "summary"], [636, "summary"], [636, "id2"], [636, "id4"], [636, "id7"], [636, "id9"], [636, "id11"], [669, "summary"]], "Support Library": [[756, null]], "Support for alternate stackmap formats": [[755, "support-for-alternate-stackmap-formats"]], "Supported Architectures": [[753, "supported-architectures"], [755, "supported-architectures"]], "Supported Constraint Code List": [[702, "supported-constraint-code-list"]], "Supported Instructions": [[591, "supported-instructions"]], "Supporting Custom Compilers": [[717, "supporting-custom-compilers"]], "SwitchInst": [[591, "switchinst"]], "Switched-Resume Lowering": [[655, "switched-resume-lowering"]], "Symbol Options": [[636, "symbol-options"]], "Symbol Type Options": [[636, "symbol-type-options"]], "Symbols": [[581, "symbols"], [582, "symbols"]], "Symbols which can go in either/both of the module info stream & global stream": [[720, "symbols-which-can-go-in-either-both-of-the-module-info-stream-global-stream"]], "Synopsis": [[636, "synopsis"]], "Syntax": [[579, "syntax"], [579, "id2"], [579, "id3"], [702, "id678"], [702, "id683"], [702, "id688"], [702, "id693"], [702, "id698"], [702, "id703"], [702, "id708"], [702, "id713"], [702, "id718"], [702, "id723"], [702, "id728"], [702, "id733"], [702, "id738"], [702, "id743"]], "Syntax of AMDGPU Instruction Modifiers": [[580, null]], "Syntax of AMDGPU Instruction Operands": [[581, null]], "Syntax of Core GFX10 Instructions": [[0, null]], "Syntax of Core GFX7 Instructions": [[2, null]], "Syntax of Core GFX8 Instructions": [[3, null]], "Syntax of Core GFX9 Instructions": [[4, null]], "Syntax of Expressions": [[581, "syntax-of-expressions"]], "Syntax of gfx1011 and gfx1012 Instructions": [[1, null]], "Syntax of gfx900, gfx902 and gfx909 Instructions": [[5, null]], "Syntax of gfx904 Instructions": [[6, null]], "Syntax of gfx906 Instructions": [[7, null]], "Syntax of gfx908 Instructions": [[8, null]], "Syntax of gfx90a Instructions": [[9, null]], "Syntax:": [[655, "syntax"], [702, "syntax"], [702, "id30"], [702, "id35"], [702, "id40"], [702, "id46"], [702, "id51"], [702, "id56"], [702, "id61"], [702, "id66"], [702, "id71"], [702, "id78"], [702, "id81"], [702, "id86"], [702, "id91"], [702, "id96"], [702, "id101"], [702, "id106"], [702, "id111"], [702, "id116"], [702, "id121"], [702, "id126"], [702, "id131"], [702, "id136"], [702, "id141"], [702, "id146"], [702, "id151"], [702, "id156"], [702, "id161"], [702, "id166"], [702, "id171"], [702, "id176"], [702, "id181"], [702, "id186"], [702, "id191"], [702, "id196"], [702, "id201"], [702, "id206"], [702, "id211"], [702, "id216"], [702, "id221"], [702, "id226"], [702, "id231"], [702, "id236"], [702, "id241"], [702, "id246"], [702, "id251"], [702, "id256"], [702, "id261"], [702, "id266"], [702, "id271"], [702, "id276"], [702, "id281"], [702, "id286"], [702, "id291"], [702, "id296"], [702, "id301"], [702, "id306"], [702, "id311"], [702, "id316"], [702, "id321"], [702, "id326"], [702, "id331"], [702, "id336"], [702, "id342"], [702, "id349"], [702, "id356"], [702, "id360"], [702, "id364"], [702, "id369"], [702, "id373"], [702, "id377"], [702, "id381"], [702, "id384"], [702, "id388"], [702, "id392"], [702, "id396"], [702, "id400"], [702, "id404"], [702, "id407"], [702, "id410"], [702, "id414"], [702, "id417"], [702, "id421"], [702, "id424"], [702, "id427"], [702, "id430"], [702, "id433"], [702, "id436"], [702, "id439"], [702, "id443"], [702, "id447"], [702, "id450"], [702, "id453"], [702, "id457"], [702, "id461"], [702, "id465"], [702, "id468"], [702, "id471"], [702, "id474"], [702, "id478"], [702, "id482"], [702, "id485"], [702, "id488"], [702, "id491"], [702, "id494"], [702, "id498"], [702, "id502"], [702, "id506"], [702, "id510"], [702, "id514"], [702, "id518"], [702, "id522"], [702, "id526"], [702, "id530"], [702, "id534"], [702, "id538"], [702, "id542"], [702, "id546"], [702, "id550"], [702, "id554"], [702, "id558"], [702, "id562"], [702, "id566"], [702, "id570"], [702, "id574"], [702, "id578"], [702, "id582"], [702, "id586"], [702, "id590"], [702, "id594"], [702, "id598"], [702, "id602"], [702, "id606"], [702, "id610"], [702, "id614"], [702, "id618"], [702, "id622"], [702, "id625"], [702, "id628"], [702, "id632"], [702, "id636"], [702, "id640"], [702, "id644"], [702, "id648"], [702, "id653"], [702, "id658"], [702, "id663"], [702, "id668"], [702, "id673"], [702, "id748"], [702, "id750"], [702, "id755"], [702, "id759"], [702, "id763"], [702, "id767"], [702, "id771"], [702, "id775"], [702, "id779"], [702, "id782"], [702, "id786"], [702, "id789"], [702, "id793"], [702, "id796"], [702, "id799"], [702, "id802"], [702, "id805"], [702, "id808"], [702, "id811"], [702, "id814"], [702, "id817"], [702, "id820"], [702, "id823"], [702, "id826"], [702, "id829"], [702, "id833"], [702, "id836"], [702, "id839"], [702, "id842"], [702, "id845"], [702, "id850"], [702, "id855"], [702, "id860"], [702, "id865"], [702, "id869"], [702, "id873"], [702, "id878"], [702, "id883"], [702, "id888"], [702, "id893"], [702, "id898"], [702, "id903"], [702, "id908"], [702, "id913"], [702, "id918"], [702, "id923"], [702, "id928"], [702, "id933"], [702, "id938"], [702, "id943"], [702, "id948"], [702, "id953"], [702, "id958"], [702, "id963"], [702, "id968"], [702, "id972"], [702, "id976"], [702, "id980"], [702, "id984"], [702, "id988"], [702, "id992"], [702, "id996"], [702, "id1000"], [702, "id1004"], [702, "id1008"], [702, "id1012"], [702, "id1016"], [702, "id1020"], [702, "id1024"], [702, "id1028"], [702, "id1032"], [702, "id1036"], [702, "id1040"], [702, "id1044"], [702, "id1048"], [702, "id1052"], [702, "id1056"], [702, "id1060"], [702, "id1064"], [702, "id1068"], [702, "id1072"], [702, "id1076"], [702, "id1080"], [702, "id1084"], [702, "id1088"], [702, "id1092"], [702, "id1096"], [702, "id1100"], [702, "id1104"], [702, "id1108"], [702, "id1112"], [702, "id1116"], [702, "id1120"], [702, "id1124"], [702, "id1128"], [702, "id1132"], [702, "id1136"], [702, "id1140"], [702, "id1144"], [702, "id1148"], [702, "id1152"], [702, "id1156"], [702, "id1160"], [702, "id1164"], [702, "id1168"], [702, "id1172"], [702, "id1176"], [702, "id1179"], [702, "id1183"], [702, "id1187"], [702, "id1191"], [702, "id1195"], [702, "id1197"], [702, "id1201"], [702, "id1205"], [702, "id1209"], [702, "id1213"], [702, "id1217"], [702, "id1221"], [702, "id1225"], [702, "id1229"], [702, "id1233"], [702, "id1236"], [702, "id1239"], [702, "id1242"], [702, "id1246"], [702, "id1250"], [702, "id1254"], [702, "id1256"], [702, "id1261"], [702, "id1263"], [702, "id1267"], [702, "id1270"], [702, "id1274"], [702, "id1277"], [702, "id1282"], [702, "id1287"], [702, "id1292"], [702, "id1294"], [702, "id1296"], [702, "id1298"], [702, "id1300"], [702, "id1302"], [702, "id1304"], [702, "id1306"], [702, "id1308"], [702, "id1310"], [702, "id1312"], [702, "id1314"], [702, "id1316"], [702, "id1318"], [702, "id1320"], [702, "id1322"], [702, "id1324"], [702, "id1326"], [702, "id1328"], [702, "id1332"], [702, "id1336"], [715, "syntax"], [715, "id4"], [715, "id7"], [715, "id9"], [753, "syntax"], [753, "id2"]], "Synthesized Functions Module Flags Metadata": [[702, "synthesized-functions-module-flags-metadata"]], "System Library": [[758, null]], "System VGPR Work-Item ID Enumeration Values": [[582, "amdgpu-amdhsa-system-vgpr-work-item-id-enumeration-values-table"]], "SystemZ": [[653, "systemz"]], "T": [[703, "t"]], "TARGET OPTIONS": [[611, "target-options"]], "TEST DISCOVERY": [[608, "test-discovery"], [608, "id7"]], "TEST RUN OUTPUT FORMAT": [[608, "test-run-output-format"]], "TEST STATUS RESULTS": [[608, "test-status-results"]], "TEST SUITES": [[608, "test-suites"]], "TPI vs IPI Stream": [[729, "tpi-vs-ipi-stream"]], "TSCWrap Records": [[776, "tscwrap-records"]], "TUTORIAL": [[603, "tutorial"]], "TVM": [[738, "tvm"]], "TYPE_BLOCK Contents": [[589, "type-block-contents"]], "TYPE_CODE_ARRAY Record": [[589, "type-code-array-record"]], "TYPE_CODE_BFLOAT Record": [[589, "type-code-bfloat-record"]], "TYPE_CODE_DOUBLE Record": [[589, "type-code-double-record"]], "TYPE_CODE_FLOAT Record": [[589, "type-code-float-record"]], "TYPE_CODE_FP128 Record": [[589, "type-code-fp128-record"]], "TYPE_CODE_FUNCTION Record": [[589, "type-code-function-record"]], "TYPE_CODE_FUNCTION_OLD Record": [[589, "type-code-function-old-record"]], "TYPE_CODE_HALF Record": [[589, "type-code-half-record"]], "TYPE_CODE_INTEGER Record": [[589, "type-code-integer-record"]], "TYPE_CODE_LABEL Record": [[589, "type-code-label-record"]], "TYPE_CODE_METADATA Record": [[589, "type-code-metadata-record"]], "TYPE_CODE_NUMENTRY Record": [[589, "type-code-numentry-record"]], "TYPE_CODE_OPAQUE Record": [[589, "type-code-opaque-record"]], "TYPE_CODE_POINTER Record": [[589, "type-code-pointer-record"]], "TYPE_CODE_PPC_FP128 Record": [[589, "type-code-ppc-fp128-record"]], "TYPE_CODE_STRUCT_ANON Record": [[589, "type-code-struct-anon-record"]], "TYPE_CODE_STRUCT_NAME Record": [[589, "type-code-struct-name-record"]], "TYPE_CODE_STRUCT_NAMED Record": [[589, "type-code-struct-named-record"]], "TYPE_CODE_VECTOR Record": [[589, "type-code-vector-record"]], "TYPE_CODE_VOID Record": [[589, "type-code-void-record"]], "TYPE_CODE_X86_AMX Record": [[589, "type-code-x86-amx-record"]], "TYPE_CODE_X86_FP80 Record": [[589, "type-code-x86-fp80-record"]], "TYPE_CODE_X86_MMX Record": [[589, "type-code-x86-mmx-record"]], "TableGen BackEnds": [[759, null]], "TableGen Deficiencies": [[762, "tablegen-deficiencies"]], "TableGen Fundamentals": [[763, null]], "TableGen \u5f8c\u7aef": [[762, "tablegen-backends"]], "TableGen \u6982\u89bd": [[762, null]], "TableGen \u7a0b\u5f0f": [[762, "the-tablegen-program"]], "Tag the LLVM Final Release": [[694, "tag-the-llvm-final-release"]], "Tag:": [[656, "tag"]], "Tagging the LLVM Release Candidates": [[694, "tagging-the-llvm-release-candidates"]], "Tags": [[777, "tags"]], "Tail Calls": [[599, "tail-calls"]], "Tail call optimization": [[599, "tail-call-optimization"]], "Target Feature Matrix": [[599, "target-feature-matrix"]], "Target Features": [[582, "target-features"]], "Target ID": [[582, "target-id"]], "Target Independence": [[802, "target-independence"]], "Target Intrinsics": [[677, "target-intrinsics"], [715, "target-intrinsics"]], "Target JIT Info": [[771, "target-jit-info"]], "Target Machine": [[771, "target-machine"], [800, "target-machine"]], "Target Registration": [[771, "target-registration"]], "Target Specific Behaviour": [[663, "target-specific-behaviour"]], "Target Triple": [[702, "target-triple"]], "Target Triples": [[582, "target-triples"]], "Target description classes": [[599, "target-description-classes"]], "Target-dependent Index Operands": [[708, "target-dependent-index-operands"]], "Target-independent code generation algorithms": [[599, "target-independent-code-generation-algorithms"]], "Target-specific Implementation Notes": [[599, "target-specific-implementation-notes"]], "Tech talks": [[711, "tech-talks"]], "Tempting optimizations that break the security model": [[751, "tempting-optimizations-that-break-the-security-model"]], "Terminator Instructions": [[702, "terminator-instructions"]], "Terminology": [[706, "terminology"]], "Terminology and Notation": [[671, "terminology-and-notation"]], "Test Cases": [[659, "test-cases"]], "Test Suite": [[744, "test-suite"]], "Test original debug info preservation in optimizations": [[697, "test-original-debug-info-preservation-in-optimizations"]], "Test-Suite Extensions": [[738, null]], "Testing": [[681, "testing"], [754, "testing"]], "Testing Addresses For Type Membership": [[768, "testing-addresses-for-type-membership"]], "Testing Analysis": [[766, "testing-analysis"]], "Testing Individual Code Generation Passes": [[708, "testing-individual-code-generation-passes"]], "Testing a pass": [[772, "testing-a-pass"]], "Testing and Debugging": [[742, "testing-and-debugging"]], "Testing compiler-rt builtins using qemu-arm": [[692, "testing-compiler-rt-builtins-using-qemu-arm"]], "Text Formatting": [[752, "text-formatting"]], "The \"CHECK-COUNT:\" directive": [[603, "the-check-count-directive"]], "The \"CHECK-DAG:\" directive": [[603, "the-check-dag-directive"]], "The \"CHECK-EMPTY:\" directive": [[603, "the-check-empty-directive"]], "The \"CHECK-LABEL:\" directive": [[603, "the-check-label-directive"]], "The \"CHECK-NEXT:\" directive": [[603, "the-check-next-directive"]], "The \"CHECK-NOT:\" directive": [[603, "the-check-not-directive"]], "The \"CHECK-SAME:\" directive": [[603, "the-check-same-directive"]], "The \"COM:\" directive": [[603, "the-com-directive"]], "The \"MC\" Layer": [[599, "the-mc-layer"]], "The 'Erlang' and 'Ocaml' GCs": [[668, "the-erlang-and-ocaml-gcs"]], "The 'llvm.compiler.used' Global Variable": [[702, "the-llvm-compiler-used-global-variable"]], "The 'llvm.global_ctors' Global Variable": [[702, "the-llvm-global-ctors-global-variable"]], "The 'llvm.global_dtors' Global Variable": [[702, "the-llvm-global-dtors-global-variable"]], "The 'llvm.used' Global Variable": [[702, "the-llvm-used-global-variable"]], "The -aa-eval pass": [[585, "the-aa-eval-pass"]], "The -adce pass": [[585, "the-adce-pass"]], "The -argpromotion pass": [[585, "the-argpromotion-pass"]], "The -basic-aa pass": [[585, "the-basic-aa-pass"]], "The -ds-aa pass": [[585, "the-ds-aa-pass"]], "The -globalsmodref-aa pass": [[585, "the-globalsmodref-aa-pass"]], "The -gvn, -memcpyopt, and -dse passes": [[585, "the-gvn-memcpyopt-and-dse-passes"]], "The -licm pass": [[585, "the-licm-pass"]], "The -print-alias-sets pass": [[585, "the-print-alias-sets-pass"]], "The -scev-aa pass": [[585, "the-scev-aa-pass"]], "The -steens-aa pass": [[585, "the-steens-aa-pass"]], "The AMDGPU backend": [[599, "the-amdgpu-backend"]], "The Abstract Syntax Tree (AST)": [[794, "the-abstract-syntax-tree-ast"]], "The AliasSetTracker implementation": [[585, "the-aliassettracker-implementation"]], "The AnalysisUsage::addPreserved<> method": [[773, "the-analysisusage-addpreserved-method"]], "The AnalysisUsage::addRequired<> and AnalysisUsage::addRequiredTransitive<> methods": [[773, "the-analysisusage-addrequired-and-analysisusage-addrequiredtransitive-methods"]], "The Argument class": [[734, "the-argument-class"]], "The BasicBlock class": [[734, "the-basicblock-class"]], "The Basics": [[666, "the-basics"]], "The C++ Standard Template Library": [[734, "the-c-standard-template-library"]], "The CallGraphSCCPass class": [[773, "the-callgraphsccpass-class"]], "The CodeView Symbol Substream": [[725, "the-codeview-symbol-substream"]], "The Constant class and subclasses": [[734, "the-constant-class-and-subclasses"]], "The Contract of classof": [[695, "the-contract-of-classof"]], "The Core LLVM Class Hierarchy Reference": [[734, "the-core-llvm-class-hierarchy-reference"]], "The CoreCLR GC": [[668, "the-coreclr-gc"]], "The DataLayout class": [[599, "the-datalayout-class"]], "The Driver": [[794, "the-driver"]], "The Fault Map Section": [[665, "the-fault-map-section"]], "The FileCheck -check-prefix option": [[603, "the-filecheck-check-prefix-option"]], "The Free Block Map": [[726, "the-free-block-map"]], "The Function class": [[734, "the-function-class"]], "The FunctionPass class": [[773, "the-functionpass-class"]], "The GlobalValue class": [[734, "the-globalvalue-class"]], "The GlobalVariable class": [[734, "the-globalvariable-class"]], "The High-Level Issues": [[602, "the-high-level-issues"]], "The ImmutablePass class": [[773, "the-immutablepass-class"]], "The ImplicitNullChecks pass": [[665, "the-implicitnullchecks-pass"]], "The Instruction class": [[734, "the-instruction-class"]], "The Kaleidoscope Language": [[793, "the-kaleidoscope-language"]], "The Kernel": [[715, "the-kernel"]], "The LLVM Lexicon": [[703, null]], "The LLVM Target-Independent Code Generator": [[599, null]], "The LLVM gold plugin": [[686, null]], "The LLVM_DEBUG() macro and -debug option": [[734, "the-llvm-debug-macro-and-debug-option"]], "The Lexer": [[793, "the-lexer"]], "The Line Number Program Header": [[577, "the-line-number-program-header"]], "The Location of LLVM Object Files": [[671, "the-location-of-llvm-object-files"]], "The Loop Vectorizer": [[770, "the-loop-vectorizer"]], "The LoopPass class": [[773, "the-looppass-class"]], "The Low-Level Issues": [[602, "the-low-level-issues"]], "The MCContext class": [[599, "the-mccontext-class"]], "The MCInst class": [[599, "the-mcinst-class"]], "The MCSection class": [[599, "the-mcsection-class"]], "The MCStreamer API": [[599, "the-mcstreamer-api"]], "The MCSymbol class": [[599, "the-mcsymbol-class"]], "The MSF Container": [[730, "the-msf-container"]], "The MSF File Format": [[726, null]], "The MachineBasicBlock class": [[599, "the-machinebasicblock-class"]], "The MachineFunction class": [[599, "the-machinefunction-class"]], "The MachineFunctionPass class": [[773, "the-machinefunctionpass-class"]], "The MachineInstr class": [[599, "the-machineinstr-class"]], "The Module Information Stream": [[725, null]], "The ModulePass class": [[773, "the-modulepass-class"]], "The NVPTX backend": [[599, "the-nvptx-backend"]], "The Often Misunderstood GEP Instruction": [[669, null]], "The Opaque Pointer Type": [[718, "the-opaque-pointer-type"]], "The PDB DBI (Debug Info) Stream": [[722, null]], "The PDB File Format": [[730, null]], "The PDB Global Symbol Stream": [[723, null]], "The PDB Info Stream (aka the PDB Stream)": [[727, null]], "The PDB Public Symbol Stream": [[728, null]], "The PDB Serialized Hash Table Format": [[724, null]], "The PDB TPI and IPI Streams": [[729, null]], "The Planning Process and VPlan Roadmap": [[741, "the-planning-process-and-vplan-roadmap"]], "The PowerPC backend": [[599, "the-powerpc-backend"]], "The RegionPass class": [[773, "the-regionpass-class"]], "The SLP Vectorizer": [[770, "the-slp-vectorizer"]], "The SSA deconstruction phase": [[599, "the-ssa-deconstruction-phase"]], "The SelectionDAG Legalize Phase": [[771, "the-selectiondag-legalize-phase"]], "The Shadow Stack GC": [[668, "the-shadow-stack-gc"]], "The Statepoint Example GC": [[668, "the-statepoint-example-gc"]], "The Statistic class & -stats option": [[734, "the-statistic-class-stats-option"]], "The Stream Directory": [[726, "the-stream-directory"]], "The StringRef class": [[734, "the-stringref-class"]], "The Superblock": [[726, "the-superblock"]], "The TargetFrameLowering class": [[599, "the-targetframelowering-class"]], "The TargetInstrInfo class": [[599, "the-targetinstrinfo-class"]], "The TargetJITInfo class": [[599, "the-targetjitinfo-class"]], "The TargetLowering class": [[599, "the-targetlowering-class"]], "The TargetMachine class": [[599, "the-targetmachine-class"]], "The TargetRegisterInfo class": [[599, "the-targetregisterinfo-class"]], "The TargetSubtarget class": [[599, "the-targetsubtarget-class"]], "The Twine class": [[734, "the-twine-class"]], "The Type class and Derived Types": [[734, "the-type-class-and-derived-types"]], "The User and owned Use classes' memory layout": [[734, "the-user-and-owned-use-classes-memory-layout"]], "The User class": [[734, "the-user-class"]], "The Value class": [[734, "the-value-class"]], "The ValueSymbolTable class": [[734, "the-valuesymboltable-class"]], "The X86 backend": [[599, "the-x86-backend"]], "The XRay stack tool": [[775, "the-xray-stack-tool"]], "The addEscapingUse method": [[585, "the-addescapinguse-method"]], "The alias method": [[585, "the-alias-method"]], "The cl::ConsumeAfter modifier": [[651, "the-cl-consumeafter-modifier"]], "The cl::OptionCategory class": [[651, "the-cl-optioncategory-class"]], "The cl::ParseCommandLineOptions function": [[651, "the-cl-parsecommandlineoptions-function"]], "The cl::SetVersionPrinter function": [[651, "the-cl-setversionprinter-function"]], "The cl::alias class": [[651, "the-cl-alias-class"]], "The cl::bits class": [[651, "the-cl-bits-class"]], "The cl::extrahelp class": [[651, "the-cl-extrahelp-class"]], "The cl::getRegisteredOptions function": [[651, "the-cl-getregisteredoptions-function"]], "The cl::list class": [[651, "the-cl-list-class"]], "The cl::opt class": [[651, "the-cl-opt-class"]], "The cmake try compile stage fails": [[692, "the-cmake-try-compile-stage-fails"]], "The copyValue method": [[585, "the-copyvalue-method"]], "The debugify utility pass": [[697, "the-debugify-utility-pass"]], "The deleteValue method": [[585, "the-deletevalue-method"]], "The doFinalization() method": [[773, "the-dofinalization-method"], [773, "id3"]], "The doFinalization(CallGraph &) method": [[773, "the-dofinalization-callgraph-method"]], "The doFinalization(Module &) method": [[773, "the-dofinalization-module-method"]], "The doInitialization(CallGraph &) method": [[773, "the-doinitialization-callgraph-method"]], "The doInitialization(Loop *, LPPassManager &) method": [[773, "the-doinitialization-loop-lppassmanager-method"]], "The doInitialization(Module &) method": [[773, "the-doinitialization-module-method"]], "The doInitialization(Region *, RGPassManager &) method": [[773, "the-doinitialization-region-rgpassmanager-method"]], "The doesNotAccessMemory and  onlyReadsMemory methods": [[585, "the-doesnotaccessmemory-and-onlyreadsmemory-methods"]], "The extended Berkeley Packet Filter (eBPF) backend": [[599, "the-extended-berkeley-packet-filter-ebpf-backend"]], "The flag registers again make everything hard": [[751, "the-flag-registers-again-make-everything-hard"]], "The function_ref class template": [[734, "the-function-ref-class-template"]], "The getAnalysis<> and getAnalysisIfAvailable<> methods": [[773, "the-getanalysis-and-getanalysisifavailable-methods"]], "The getAnalysisUsage method": [[773, "the-getanalysisusage-method"]], "The getModRefInfo methods": [[585, "the-getmodrefinfo-methods"]], "The high-level design of the code generator": [[599, "the-high-level-design-of-the-code-generator"]], "The isa<>, cast<> and dyn_cast<> templates": [[734, "the-isa-cast-and-dyn-cast-templates"]], "The llvm-jitlink tool": [[701, "the-llvm-jitlink-tool"]], "The llvm-xray Tool": [[775, "the-llvm-xray-tool"]], "The pointsToConstantMemory method": [[585, "the-pointstoconstantmemory-method"]], "The print method": [[773, "the-print-method"]], "The releaseMemory method": [[773, "the-releasememory-method"]], "The remark container": [[745, "the-remark-container"]], "The replaceWithNewValue method": [[585, "the-replacewithnewvalue-method"]], "The runOnFunction method": [[773, "the-runonfunction-method"]], "The runOnLoop method": [[773, "the-runonloop-method"]], "The runOnMachineFunction(MachineFunction &MF) method": [[773, "the-runonmachinefunction-machinefunction-mf-method"]], "The runOnModule method": [[773, "the-runonmodule-method"]], "The runOnRegion method": [[773, "the-runonregion-method"]], "The runOnSCC method": [[773, "the-runonscc-method"]], "The walker": [[713, "the-walker"]], "ThinLTO Summary": [[702, "thinlto-summary"]], "Thread Local Storage Models": [[702, "thread-local-storage-models"]], "Threads and LLVM": [[734, "threads-and-llvm"]], "Threads and the JIT": [[734, "threads-and-the-jit"]], "Throw": [[661, "throw"]], "Throw Filters": [[661, "throw-filters"]], "Timeline View": [[631, "timeline-view"]], "Tips and Tricks": [[802, "tips-and-tricks"]], "Tips for JITLink backend developers": [[701, "tips-for-jitlink-backend-developers"]], "Todo": [[582, "id11"], [582, "id13"], [582, "id17"], [582, "id18"], [582, "id19"], [582, "id21"], [582, "id23"], [582, "id24"], [582, "id25"], [582, "id26"], [582, "id32"], [582, "id43"], [582, "id48"], [582, "id49"], [582, "id51"], [582, "id54"], [582, "id55"], [582, "id56"], [582, "id57"], [582, "id59"], [582, "id60"], [582, "id61"], [582, "id71"], [582, "id72"], [582, "id73"], [582, "id74"], [582, "id75"], [582, "id76"], [582, "id77"], [582, "id78"], [582, "id79"], [582, "id80"], [597, "id4"], [651, "id9"], [651, "id10"], [695, "id2"], [795, "id2"]], "Token Type": [[702, "token-type"]], "Too Long; Didn't Read": [[739, "too-long-didn-t-read"]], "Top Level APIs": [[717, "top-level-apis"]], "Top-Level Classes and Functions": [[651, "top-level-classes-and-functions"]], "Toy example": [[704, "toy-example"]], "Trace Analysis Tools": [[774, "trace-analysis-tools"], [774, "id2"]], "Tracing CMP instructions": [[704, "tracing-cmp-instructions"]], "Trampoline Intrinsics": [[702, "trampoline-intrinsics"]], "Transform Passes": [[732, "transform-passes"]], "Transformation Metadata Structure": [[767, "transformation-metadata-structure"]], "Transition Options": [[739, "transition-options"]], "Transition Plan": [[718, "transition-plan"]], "Transitioning from ORCv1 to ORCv2": [[717, "transitioning-from-orcv1-to-orcv2"]], "Translating Function Calls": [[677, "translating-function-calls"]], "Translation of Constants": [[677, "translation-of-constants"]], "Transparency Report": [[748, "transparency-report"]], "Trap Handler ABI": [[582, "trap-handler-abi"], [582, "id83"]], "Treat Compiler Warnings Like Errors": [[602, "treat-compiler-warnings-like-errors"]], "Triaging bugs": [[592, "triaging-bugs"]], "Triples": [[715, "triples"]], "Trivial Constant Folding": [[796, "trivial-constant-folding"]], "Trophies": [[704, "trophies"]], "Troubleshooting": [[692, "troubleshooting"]], "Try/Catch": [[661, "try-catch"]], "Tuning/Configuration Options": [[609, "tuning-configuration-options"]], "Turn Predicate Loops into Predicate Functions": [[602, "turn-predicate-loops-into-predicate-functions"]], "Turning an iterator into a class pointer (and vice-versa)": [[734, "turning-an-iterator-into-a-class-pointer-and-vice-versa"]], "Tutorial Conclusion": [[802, "tutorial-conclusion"]], "Tutorial: A Simple Compute Kernel": [[715, "tutorial-a-simple-compute-kernel"]], "Tutorial: Linking with Libdevice": [[715, "tutorial-linking-with-libdevice"]], "Tutorials": [[682, "tutorials"]], "Type Conversion Operations": [[577, "type-conversion-operations"]], "Type Conversions": [[676, "type-conversions"]], "Type Deviation": [[422, null], [535, null]], "Type ID Summary Entry": [[702, "type-id-summary-entry"]], "Type Indices": [[729, "type-indices"]], "Type Metadata": [[768, null]], "Type Offsets for A, B, C, D": [[768, "id2"]], "Type Record Options": [[636, "type-record-options"], [636, "id6"]], "Type Server Map Substream": [[722, "type-server-map-substream"]], "Type System": [[702, "type-system"]], "Type and Size Conversion": [[581, "type-and-size-conversion"]], "Type and Size Suffices": [[579, "type-and-size-suffices"]], "Type deviation": [[14, null], [98, null], [187, null], [289, null], [324, null], [353, null]], "TypeCheckedLoadConstVCalls": [[702, "typecheckedloadconstvcalls"]], "TypeCheckedLoadVCalls": [[702, "typecheckedloadvcalls"]], "TypeIdInfo": [[702, "typeidinfo"]], "TypeTestAssumeConstVCalls": [[702, "typetestassumeconstvcalls"]], "TypeTestAssumeVCalls": [[702, "typetestassumevcalls"]], "TypeTests": [[702, "typetests"]], "Types": [[656, "types"]], "UNABBREV_RECORD Encoding": [[589, "unabbrev-record-encoding"]], "USING MARKERS TO ANALYZE SPECIFIC CODE BLOCKS": [[631, "using-markers-to-analyze-specific-code-blocks"]], "Unary Operations": [[702, "unary-operations"]], "Unary Operators": [[581, "unary-operators"]], "Undefined Location Description Operations": [[577, "undefined-location-description-operations"]], "Undefined Values": [[702, "undefined-values"]], "Unique types": [[777, "unique-types"]], "Unit Entities": [[577, "unit-entities"]], "Unit Headers": [[582, "unit-headers"]], "Unit and Regression tests": [[766, "unit-and-regression-tests"]], "Unit tests": [[766, "unit-tests"]], "Unordered": [[586, "unordered"]], "Unpacking the LLVM Archives": [[671, "unpacking-the-llvm-archives"]], "Unroll-And-Jam": [[767, "unroll-and-jam"]], "Unspecified OS": [[582, "unspecified-os"]], "Update Documentation": [[694, "update-documentation"]], "Update IR components": [[583, "update-ir-components"]], "Update LLVM Version": [[694, "update-llvm-version"]], "Update Selector components": [[583, "update-selector-components"]], "Update mappings": [[583, "update-mappings"]], "Update the LLVM Website": [[694, "update-the-llvm-website"]], "Updating Toolchain Requirements": [[659, "updating-toolchain-requirements"]], "Updating analysis results for transformations": [[585, "updating-analysis-results-for-transformations"]], "Usage": [[660, "usage"], [679, "usage"], [686, "usage"], [687, "usage"], [712, "usage"], [747, "usage"], [770, "usage"], [770, "id2"]], "Use Early Exits and continue to Simplify Code": [[602, "use-early-exits-and-continue-to-simplify-code"]], "Use Namespace Qualifiers to Implement Previously Declared Functions": [[602, "use-namespace-qualifiers-to-implement-previously-declared-functions"]], "Use Optimization": [[713, "use-optimization"]], "Use Standard C Headers": [[756, "use-standard-c-headers"]], "Use Standard C++ Headers": [[756, "id1"]], "Use after Free Detection": [[687, "use-after-free-detection"]], "Use an internal TLS location to pass predicate state": [[751, "use-an-internal-tls-location-to-pass-predicate-state"]], "Use auto Type Deduction to Make Code More Readable": [[602, "use-auto-type-deduction-to-make-code-more-readable"]], "Use lfence to guard function transitions": [[751, "use-lfence-to-guard-function-transitions"]], "Use of allocas": [[666, "use-of-allocas"]], "Use of class and struct Keywords": [[602, "use-of-class-and-struct-keywords"]], "Use range-based for loops wherever possible": [[602, "use-range-based-for-loops-wherever-possible"]], "Use raw_ostream": [[602, "use-raw-ostream"]], "Use-cases": [[717, "use-cases"]], "Use-list Order Directives": [[702, "use-list-order-directives"]], "Useful Built-in Commands": [[598, "useful-built-in-commands"]], "User Context Data": [[777, "user-context-data"]], "User Data": [[582, "user-data"]], "User Guide for AMDGPU Backend": [[582, null]], "User Guide for NVPTX Back-end": [[715, null]], "User-defined Binary Operators": [[798, "user-defined-binary-operators"]], "User-defined Local Variables": [[799, "user-defined-local-variables"]], "User-defined Operators: the Idea": [[798, "user-defined-operators-the-idea"]], "User-defined Unary Operators": [[798, "user-defined-unary-operators"]], "User-supplied mutators": [[704, "user-supplied-mutators"]], "Using -opt-bisect-limit to debug optimization errors": [[719, null]], "Using ARM NEON instructions in big endian mode": [[588, null]], "Using Analyses": [[716, "using-analyses"]], "Using ExitOnError to simplify tool code": [[734, "using-exitonerror-to-simplify-tool-code"]], "Using GDB with dynamically loaded passes": [[773, "using-gdb-with-dynamically-loaded-passes"]], "Using LostDebugLocObserver": [[697, "using-lostdebuglocobserver"]], "Using RegisterAnalysisGroup": [[773, "using-registeranalysisgroup"]], "Using TableGen for target description": [[599, "using-tablegen-for-target-description"]], "Using XRay": [[774, "using-xray"]], "Using a Different Class on Host/Device": [[652, "using-a-different-class-on-host-device"]], "Using alias analysis results": [[585, "using-alias-analysis-results"]], "Using cantFail to simplify safe callsites": [[734, "using-cantfail-to-simplify-safe-callsites"]], "Using debugify": [[697, "using-debugify"]], "Using existing registries": [[773, "using-existing-registries"]], "Using libFuzzer as a library": [[704, "using-libfuzzer-as-a-library"]], "Using preconfigured CMake caches": [[691, "using-preconfigured-cmake-caches"]], "Using the AliasAnalysis interface directly": [[585, "using-the-aliasanalysis-interface-directly"]], "Using the AliasSetTracker class": [[585, "using-the-aliassettracker-class"]], "Using the MachineInstrBuilder.h functions": [[599, "using-the-machineinstrbuilder-h-functions"]], "Using the MemoryDependenceAnalysis Pass": [[585, "using-the-memorydependenceanalysis-pass"]], "Using the New Pass Manager": [[716, null]], "Using the script": [[691, "using-the-script"]], "Utilities for Writing Fuzzers": [[667, "utilities-for-writing-fuzzers"]], "Utility Macros": [[777, "utility-macros"]], "Utility Passes": [[732, "utility-passes"]], "Utility Passes for Safepoint Insertion": [[755, "utility-passes-for-safepoint-insertion"]], "VALU": [[582, "valu"]], "VALUE_SYMTAB_BLOCK Contents": [[589, "value-symtab-block-contents"]], "VGPR Register Set Up Order for Unpacked Work-Item ID Method": [[582, "amdgpu-amdhsa-vgpr-register-set-up-order-for-unpacked-work-item-id-method-table"]], "VINTRP": [[0, "vintrp"], [2, "vintrp"], [3, "vintrp"], [4, "vintrp"]], "VINTRP Modifiers": [[580, "vintrp-modifiers"]], "VLIW Packetizer": [[599, "vliw-packetizer"]], "VOP1": [[0, "vop1"], [2, "vop1"], [3, "vop1"], [4, "vop1"], [9, "vop1"]], "VOP2": [[0, "vop2"], [1, "vop2"], [2, "vop2"], [3, "vop2"], [4, "vop2"], [7, "vop2"], [8, "vop2"], [9, "vop2"]], "VOP3": [[0, "vop3"], [2, "vop3"], [3, "vop3"], [4, "vop3"], [7, "vop3"], [8, "vop3"], [9, "vop3"]], "VOP3 Modifiers": [[580, "vop3-modifiers"]], "VOP3 Operand Modifiers": [[580, "vop3-operand-modifiers"]], "VOP3P": [[0, "vop3p"], [1, "vop3p"], [4, "vop3p"], [5, "vop3p"], [6, "vop3p"], [7, "vop3p"], [8, "vop3p"], [9, "vop3p"]], "VOP3P MAD_MIX/FMA_MIX Modifiers": [[580, "vop3p-mad-mix-fma-mix-modifiers"]], "VOP3P MFMA Modifiers": [[580, "vop3p-mfma-modifiers"]], "VOP3P Modifiers": [[580, "vop3p-modifiers"]], "VOPC": [[0, "vopc"], [2, "vopc"], [3, "vopc"], [4, "vopc"], [9, "vopc"]], "VP": [[702, "vp"]], "Validation": [[777, "validation"]], "Value Operations": [[577, "value-operations"]], "Value Profile": [[704, "value-profile"]], "Variable Argument Handling Intrinsics": [[702, "variable-argument-handling-intrinsics"]], "Variable Length Arrays": [[663, "variable-length-arrays"]], "Variable Names Coding Standard Options": [[739, "variable-names-coding-standard-options"]], "Variable Names Plan": [[739, null]], "Variable Sized Allocas": [[749, "variable-sized-allocas"]], "Variable Width Integers": [[589, "variable-width-value"]], "Variable locations during Register Allocation": [[750, "variable-locations-during-register-allocation"]], "Variable locations in Instruction Selection and MIR": [[750, "variable-locations-in-instruction-selection-and-mir"]], "Variables": [[801, "variables"]], "Variables for Building Libraries": [[735, "variables-for-building-libraries"]], "Variables for Building Programs": [[735, "variables-for-building-programs"]], "Variables for Building Subdirectories": [[735, "variables-for-building-subdirectories"]], "Variables, Types, and Scope": [[598, "variables-types-and-scope"]], "Variadic Arguments": [[676, "variadic-arguments"]], "Variant #1.1 and #1.2 attacks: \"Bounds Check Bypass Store\"": [[751, "variant-1-1-and-1-2-attacks-bounds-check-bypass-store"]], "Varying variable locations": [[708, "varying-variable-locations"]], "Vector Operations": [[702, "vector-operations"]], "Vector Predication Intrinsics": [[702, "vector-predication-intrinsics"]], "Vector Predication Roadmap": [[740, null]], "Vector Reduction Intrinsics": [[702, "vector-reduction-intrinsics"]], "Vector Reduction Operations": [[676, "vector-reduction-operations"]], "Vector Specific Operations": [[676, "vector-specific-operations"]], "Vector Type": [[702, "vector-type"]], "Vector of pointers:": [[702, "vector-of-pointers"]], "Vectorization Plan": [[741, null]], "Vectorization Workflow": [[741, "vectorization-workflow"]], "Vectorization of Mixed Types": [[770, "vectorization-of-mixed-types"]], "Vectorization of function calls": [[770, "vectorization-of-function-calls"]], "Versioning LICM": [[767, "versioning-licm"]], "Versions": [[704, "versions"]], "Viewing graphs while debugging code": [[734, "viewing-graphs-while-debugging-code"]], "Virtual Table Layout for A, B, C, D": [[768, "id1"]], "Visibility Styles": [[702, "visibility-styles"]], "Void Type": [[702, "void-type"]], "Volatile Memory Accesses": [[702, "volatile-memory-accesses"]], "WINDOWS/PDB SPECIFIC OPTIONS": [[646, "windows-pdb-specific-options"]], "WallClockTime Records": [[776, "wallclocktime-records"]], "Warnings": [[757, "warnings"]], "Ways to Contribute": [[654, "ways-to-contribute"]], "Weighted Input": [[637, "weighted-input"]], "Well-Defined Values": [[702, "well-defined-values"]], "Well-Formedness": [[702, "well-formedness"]], "What API do I use to store a value to one of the virtual registers in LLVM IR's SSA representation?": [[664, "what-api-do-i-use-to-store-a-value-to-one-of-the-virtual-registers-in-llvm-ir-s-ssa-representation"]], "What About Branches and Merges?": [[736, "what-about-branches-and-merges"]], "What About Commit Emails?": [[736, "what-about-commit-emails"]], "What Code Should Be Reviewed?": [[601, "what-code-should-be-reviewed"]], "What PassManager does": [[773, "what-passmanager-does"]], "What This Proposal is Not About": [[736, "what-this-proposal-is-not-about"]], "What Tools Are Used for Code Review?": [[601, "what-tools-are-used-for-code-review"]], "What effect do address spaces have on GEPs?": [[669, "what-effect-do-address-spaces-have-on-geps"]], "What happens after you file a report?": [[746, "what-happens-after-you-file-a-report"]], "What happens if a GEP computation overflows?": [[669, "what-happens-if-a-gep-computation-overflows"]], "What happens if an array index is out of bounds?": [[669, "what-happens-if-an-array-index-is-out-of-bounds"]], "What is Garbage Collection?": [[668, "what-is-garbage-collection"]], "What is considered a security issue?": [[748, "what-is-considered-a-security-issue"]], "What is covered": [[757, "what-is-covered"], [757, "id1"]], "What is dereferenced by GEP?": [[669, "what-is-dereferenced-by-gep"]], "What is the first index of the GEP instruction?": [[669, "what-is-the-first-index-of-the-gep-instruction"]], "What is this \"undef\" thing that shows up in my code?": [[664, "what-is-this-undef-thing-that-shows-up-in-my-code"]], "What is this llvm.global_ctors and _GLOBAL__I_a... stuff that happens when I #include <iostream>?": [[664, "what-is-this-llvm-global-ctors-and-global-i-a-stuff-that-happens-when-i-include-iostream"]], "What should I know to be able to follow along with this document?": [[714, "what-should-i-know-to-be-able-to-follow-along-with-this-document"]], "What source languages are supported?": [[664, "what-source-languages-are-supported"]], "What support is there for a higher level source language constructs for building a compiler?": [[664, "what-support-is-there-for-a-higher-level-source-language-constructs-for-building-a-compiler"]], "What to do when bugpoint isn't enough": [[593, "what-to-do-when-bugpoint-isn-t-enough"]], "What we associate in cmpValues?": [[714, "what-we-associate-in-cmpvalues"]], "What's an uglygep?": [[669, "what-s-an-uglygep"]], "When Is an RFC Required?": [[601, "when-is-an-rfc-required"]], "When to drop an instruction location": [[697, "when-to-drop-an-instruction-location"]], "When to merge instruction locations": [[697, "when-to-merge-instruction-locations"]], "When to preserve an instruction location": [[697, "when-to-preserve-an-instruction-location"]], "When to specify alignment": [[666, "when-to-specify-alignment"]], "Where did all of my code go??": [[664, "where-did-all-of-my-code-go"]], "Where to host the meetup?": [[711, "where-to-host-the-meetup"]], "Which image should I choose?": [[660, "which-image-should-i-choose"]], "Whitespace": [[602, "whitespace"]], "Who Can/Should Review Code?": [[601, "who-can-should-review-code"]], "Why Git, and Why GitHub?": [[736, "why-git-and-why-github"]], "Why Git?": [[736, "why-git"]], "Why GitHub?": [[736, "why-github"]], "Why Move At All?": [[736, "why-move-at-all"]], "Why a new C Standard Library?": [[737, "why-a-new-c-standard-library"]], "Why do GEP x,1,0,0 and GEP x,1 alias?": [[669, "why-do-gep-x-1-0-0-and-gep-x-1-alias"]], "Why do struct member indices always use i32?": [[669, "why-do-struct-member-indices-always-use-i32"]], "Why does instcombine + simplifycfg turn a call to a function with a mismatched calling convention into \"unreachable\"? Why not make the verifier reject it?": [[664, "why-does-instcombine-simplifycfg-turn-a-call-to-a-function-with-a-mismatched-calling-convention-into-unreachable-why-not-make-the-verifier-reject-it"]], "Why don't GEP x,0,0,1 and GEP x,1 alias?": [[669, "why-don-t-gep-x-0-0-1-and-gep-x-1-alias"]], "Why is GEP designed this way?": [[669, "why-is-gep-designed-this-way"]], "Why is the extra 0 index required?": [[669, "why-is-the-extra-0-index-required"]], "Why is this a hard problem?": [[799, "why-is-this-a-hard-problem"], [801, "why-is-this-a-hard-problem"]], "Why?": [[660, "why"]], "Windows": [[653, "windows"]], "Windows Runtime Exception Handling": [[661, "windows-runtime-exception-handling"]], "Windows on ARM": [[663, "windows-on-arm"]], "Windows on ARM64": [[663, "windows-on-arm64"]], "Word Alignment": [[589, "word-alignment"]], "Work-item implicit argument layout": [[582, "amdgpu-amdhsa-workitem-implicit-argument-layout-table"]], "Workflow Before/After": [[736, "workflow-before-after"]], "Workflows": [[736, "workflows"]], "Working with CodeView": [[750, "working-with-codeview"]], "Working with the CI system": [[659, "working-with-the-ci-system"]], "Write Portable Code": [[602, "write-portable-code"]], "Write barrier: llvm.gcwrite": [[668, "write-barrier-llvm-gcwrite"]], "Write-Back and Retire Stage": [[631, "write-back-and-retire-stage"]], "Writing Custom Tests for the test-suite": [[765, "writing-custom-tests-for-the-test-suite"]], "Writing LLVM Style Makefiles": [[735, "writing-llvm-style-makefiles"]], "Writing a custom parser": [[651, "writing-a-custom-parser"]], "Writing a new AliasAnalysis Implementation": [[585, "writing-a-new-aliasanalysis-implementation"]], "Writing an LLVM Backend": [[771, null]], "Writing an LLVM Pass": [[772, null], [773, null]], "Writing new regression tests": [[766, "writing-new-regression-tests"]], "X86": [[653, "x86"], [663, "x86"]], "X86 Calling Conventions supported": [[599, "x86-calling-conventions-supported"]], "X86 Target Triples supported": [[599, "x86-target-triples-supported"]], "X86 address spaces supported": [[599, "x86-address-spaces-supported"]], "X86/COFF-Dependent": [[663, "x86-coff-dependent"]], "X86EVEX2VEX": [[759, "x86evex2vex"]], "X86_amx Type": [[702, "x86-amx-type"]], "X86_mmx Type": [[702, "x86-mmx-type"]], "XCOFF ONLY OPTIONS AND COMMANDS": [[634, "xcoff-only-options-and-commands"]], "XCore": [[653, "xcore"]], "XRay": [[742, "xray"]], "XRay Flight Data Recorder Trace Format": [[776, null]], "XRay Instrumentation": [[774, null]], "XRay Runtime Library": [[774, "xray-runtime-library"]], "XRay in LLVM": [[774, "xray-in-llvm"]], "YAML I/O": [[777, null]], "YAML metadata": [[745, "yaml-metadata"]], "YAML remarks": [[745, "yaml-remarks"]], "YAML with a string table": [[745, "yaml-with-a-string-table"]], "Zext GEP indices to machine register width": [[666, "zext-gep-indices-to-machine-register-width"]], "Zipping local history": [[736, "zipping-local-history"]], "a": [[581, "a"]], "a16": [[580, "a16"]], "abid": [[580, "abid"]], "abs": [[580, "abs"], [580, "amdgpu-synid-abs"], [580, "id28"]], "addr64": [[580, "addr64"]], "adst": [[328, null], [329, null], [330, null], [331, null]], "asrc": [[332, null], [333, null], [334, null], [335, null]], "attr": [[21, null], [122, null], [207, null], [472, null]], "bank_mask": [[580, "bank-mask"]], "blgp": [[580, "blgp"]], "bound_ctrl": [[580, "bound-ctrl"]], "branch_weights": [[702, "branch-weights"]], "bugpoint - automatic test case reduction tool": [[604, null]], "bytes": [[636, "bytes"]], "cbsz": [[580, "cbsz"]], "clamp": [[580, "clamp"], [580, "amdgpu-synid-clamp"], [580, "id27"], [580, "id30"]], "clang-format-fuzzer": [[667, "clang-format-fuzzer"]], "clang-fuzzer": [[667, "clang-fuzzer"]], "clang-proto-fuzzer": [[667, "clang-proto-fuzzer"]], "clang-tblgen - Description to C++ Code for Clang": [[605, null]], "clang-tblgen Options": [[650, "clang-tblgen-options"]], "cmpConstants": [[714, "cmpconstants"]], "cmpGEP": [[714, "cmpgep"]], "cmpOperation": [[714, "cmpoperation"]], "cmpValues(const Value*, const Value*)": [[714, "cmpvalues-const-value-const-value"]], "compare(const BasicBlock*, const BasicBlock*)": [[714, "compare-const-basicblock-const-basicblock"]], "compr": [[580, "compr"]], "compute_pgm_rsrc1 for GFX6-GFX10": [[582, "amdgpu-amdhsa-compute-pgm-rsrc1-gfx6-gfx10-table"]], "compute_pgm_rsrc2 for GFX6-GFX10": [[582, "amdgpu-amdhsa-compute-pgm-rsrc2-gfx6-gfx10-table"]], "compute_pgm_rsrc3 for GFX10": [[582, "amdgpu-amdhsa-compute-pgm-rsrc3-gfx10-table"]], "compute_pgm_rsrc3 for GFX90A": [[582, "amdgpu-amdhsa-compute-pgm-rsrc3-gfx90a-table"]], "d16": [[580, "d16"]], "da": [[580, "da"]], "debugify in regression tests": [[697, "debugify-in-regression-tests"]], "dim": [[580, "dim"]], "dlc": [[580, "dlc"], [580, "id5"], [580, "amdgpu-synid-dlc"], [580, "id16"], [580, "id20"]], "dmask": [[580, "dmask"]], "done": [[580, "done"]], "dpp16_ctrl": [[580, "dpp16-ctrl"]], "dpp32_ctrl": [[580, "dpp32-ctrl"]], "dpp64_ctrl": [[580, "dpp64-ctrl"]], "dpp8_sel": [[580, "dpp8-sel"]], "dpp_ctrl": [[580, "dpp-ctrl"]], "dst": [[62, null], [151, null], [252, null], [344, null], [360, null], [473, null]], "dst_sel": [[580, "dst-sel"]], "dst_unused": [[580, "dst-unused"]], "dsymutil - manipulate archived DWARF debug symbol files": [[606, null]], "dump": [[636, "dump"]], "eBPF maps": [[599, "ebpf-maps"]], "exec": [[581, "exec"]], "execz": [[581, "execz"]], "fconst": [[581, "fconst"]], "fi": [[580, "fi"], [580, "amdgpu-synid-fi16"]], "findRegressions-nightly.py": [[744, "findregressions-nightly-py"]], "flat_scratch": [[581, "flat-scratch"]], "fmt": [[580, "fmt"]], "formatv Examples": [[734, "formatv-examples"]], "function_entry_count": [[702, "function-entry-count"]], "fx": [[51, null], [305, null], [310, null], [315, null], [338, null]], "gds": [[580, "gds"]], "git bisect run": [[674, "git-bisect-run"]], "glc": [[580, "glc"], [580, "id2"], [580, "amdgpu-synid-glc"], [580, "id13"], [580, "id18"]], "high": [[580, "high"]], "hwreg": [[49, null], [143, null], [239, null], [362, null], [474, null]], "iconst": [[581, "iconst"]], "idxen": [[580, "amdgpu-synid-idxen"]], "if statement": [[591, "if-statement"], [591, "id2"]], "ilist_traits": [[734, "ilist-traits"]], "imask": [[240, null], [363, null], [475, null]], "imm16": [[25, null], [79, null], [99, null], [125, null], [163, null], [188, null], [210, null], [267, null], [290, null], [364, null], [365, null], [366, null], [476, null], [477, null], [478, null]], "imm3": [[61, null], [251, null]], "imm32": [[26, null], [47, null], [48, null], [126, null], [142, null], [211, null], [237, null], [238, null]], "inline constant": [[581, "inline-constant"]], "iplist": [[734, "iplist"]], "ival": [[581, "ival"]], "label": [[50, null], [144, null], [241, null], [367, null], [479, null]], "lds": [[580, "lds"], [580, "amdgpu-synid-lds"], [580, "id15"]], "lds_direct": [[581, "lds-direct"]], "libFuzzer \u2013 a library for coverage-guided fuzz testing.": [[704, null]], "libLTO": [[705, "liblto"]], "lit - LLVM Integrated Tester": [[608, null]], "literal": [[581, "literal"]], "llc - LLVM static compiler": [[609, null]], "lldb-tblgen - Description to C++ Code for LLDB": [[610, null]], "lldb-tblgen Options": [[650, "lldb-tblgen-options"]], "lli - directly execute programs from LLVM bitcode": [[611, null]], "llvm-addr2line - a drop-in replacement for addr2line": [[612, null]], "llvm-ar - LLVM archiver": [[613, null]], "llvm-as - LLVM assembler": [[614, null]], "llvm-as-fuzzer": [[667, "llvm-as-fuzzer"]], "llvm-bcanalyzer - LLVM bitcode analyzer": [[615, null]], "llvm-config - Print LLVM compilation options": [[616, null]], "llvm-cov - emit coverage information": [[617, null]], "llvm-cxxfilt - LLVM symbol name demangler": [[618, null]], "llvm-cxxmap - Mangled name remapping tool": [[619, null]], "llvm-demangle-fuzzer": [[667, "llvm-demangle-fuzzer"]], "llvm-diff - LLVM structural 'diff'": [[620, null]], "llvm-dis - LLVM disassembler": [[621, null]], "llvm-dwarfdump - dump and verify DWARF debug information": [[622, null]], "llvm-dwarfdump-fuzzer": [[667, "llvm-dwarfdump-fuzzer"]], "llvm-exegesis - LLVM Machine Instruction Benchmark": [[623, null]], "llvm-extract - extract a function from an LLVM module": [[624, null]], "llvm-install-name-tool - LLVM tool for manipulating install-names and rpaths": [[625, null]], "llvm-isel-fuzzer": [[667, "llvm-isel-fuzzer"]], "llvm-jitlink as a regression testing utility": [[701, "llvm-jitlink-as-a-regression-testing-utility"]], "llvm-lib - LLVM lib.exe compatible library tool": [[626, null]], "llvm-libtool-darwin - LLVM tool for creating libraries for Darwin": [[627, null]], "llvm-link - LLVM bitcode linker": [[628, null]], "llvm-lipo - LLVM tool for manipulating universal binaries": [[629, null]], "llvm-locstats - calculate statistics on DWARF debug location": [[630, null]], "llvm-mc-assemble-fuzzer": [[667, "llvm-mc-assemble-fuzzer"]], "llvm-mc-disassemble-fuzzer": [[667, "llvm-mc-disassemble-fuzzer"]], "llvm-mca - LLVM Machine Code Analyzer": [[631, null]], "llvm-nm - list LLVM bitcode and object file's symbol table": [[632, null]], "llvm-objcopy - object copying and editing tool": [[633, null]], "llvm-objdump - LLVM's object file dumper": [[634, null]], "llvm-opt-fuzzer": [[667, "llvm-opt-fuzzer"]], "llvm-otool - Mach-O dumping tool": [[635, null]], "llvm-pdbutil - PDB File forensics and diagnostics": [[636, null]], "llvm-profdata - Profile data tool": [[637, null]], "llvm-profgen - LLVM SPGO profile generation tool": [[638, null]], "llvm-ranlib - generates an archive index": [[639, null]], "llvm-readelf - GNU-style LLVM Object Reader": [[640, null]], "llvm-readobj - LLVM Object Reader": [[641, null]], "llvm-size - print size information": [[642, null]], "llvm-stress - generate random .ll files": [[643, null]], "llvm-strings - print strings": [[644, null]], "llvm-strip - object stripping tool": [[645, null]], "llvm-symbolizer - convert addresses into source code locations": [[646, null]], "llvm-tblgen - Target Description to C++ Code for LLVM": [[647, null]], "llvm-tblgen Options": [[650, "llvm-tblgen-options"]], "llvm.dbg.addr": [[750, "llvm-dbg-addr"]], "llvm.dbg.declare": [[750, "llvm-dbg-declare"]], "llvm.dbg.value": [[750, "llvm-dbg-value"]], "llvm.eh.begincatch": [[661, "llvm-eh-begincatch"]], "llvm.eh.endcatch": [[661, "llvm-eh-endcatch"]], "llvm.eh.exceptionpointer": [[661, "llvm-eh-exceptionpointer"]], "llvm.eh.sjlj.callsite": [[661, "llvm-eh-sjlj-callsite"]], "llvm.eh.sjlj.longjmp": [[661, "llvm-eh-sjlj-longjmp"]], "llvm.eh.sjlj.lsda": [[661, "llvm-eh-sjlj-lsda"]], "llvm.eh.sjlj.setjmp": [[661, "llvm-eh-sjlj-setjmp"]], "llvm.eh.typeid.for": [[661, "llvm-eh-typeid-for"]], "llvm/ADT/ArrayRef.h": [[734, "llvm-adt-arrayref-h"]], "llvm/ADT/DenseMap.h": [[734, "llvm-adt-densemap-h"]], "llvm/ADT/DenseSet.h": [[734, "llvm-adt-denseset-h"]], "llvm/ADT/FoldingSet.h": [[734, "llvm-adt-foldingset-h"]], "llvm/ADT/ImmutableMap.h": [[734, "llvm-adt-immutablemap-h"]], "llvm/ADT/ImmutableSet.h": [[734, "llvm-adt-immutableset-h"]], "llvm/ADT/IndexedMap.h": [[734, "llvm-adt-indexedmap-h"]], "llvm/ADT/IntEqClasses.h": [[734, "llvm-adt-inteqclasses-h"]], "llvm/ADT/IntervalMap.h": [[734, "llvm-adt-intervalmap-h"]], "llvm/ADT/MapVector.h": [[734, "llvm-adt-mapvector-h"]], "llvm/ADT/PackedVector.h": [[734, "llvm-adt-packedvector-h"]], "llvm/ADT/SetVector.h": [[734, "llvm-adt-setvector-h"]], "llvm/ADT/SmallPtrSet.h": [[734, "llvm-adt-smallptrset-h"]], "llvm/ADT/SmallSet.h": [[734, "llvm-adt-smallset-h"]], "llvm/ADT/SmallString.h": [[734, "llvm-adt-smallstring-h"]], "llvm/ADT/SmallVector.h": [[734, "llvm-adt-smallvector-h"]], "llvm/ADT/SparseMultiSet.h": [[734, "llvm-adt-sparsemultiset-h"]], "llvm/ADT/SparseSet.h": [[734, "llvm-adt-sparseset-h"]], "llvm/ADT/StringMap.h": [[734, "llvm-adt-stringmap-h"]], "llvm/ADT/StringRef.h": [[734, "llvm-adt-stringref-h"]], "llvm/ADT/StringSet.h": [[734, "llvm-adt-stringset-h"]], "llvm/ADT/TinyPtrVector.h": [[734, "llvm-adt-tinyptrvector-h"]], "llvm/ADT/Twine.h": [[734, "llvm-adt-twine-h"]], "llvm/ADT/UniqueVector.h": [[734, "llvm-adt-uniquevector-h"]], "llvm/ADT/ilist.h": [[734, "llvm-adt-ilist-h"]], "llvm/ADT/ilist_node.h": [[734, "llvm-adt-ilist-node-h"]], "llvm/IR/ValueMap.h": [[734, "llvm-ir-valuemap-h"]], "llvm/bindings": [[671, "llvm-bindings"]], "llvm/cmake": [[671, "llvm-cmake"]], "llvm/examples": [[671, "llvm-examples"]], "llvm/include": [[671, "llvm-include"]], "llvm/lib": [[671, "llvm-lib"]], "llvm/projects": [[671, "llvm-projects"]], "llvm/test": [[671, "llvm-test"]], "llvm/tools": [[671, "llvm-tools"]], "llvm/utils": [[671, "llvm-utils"]], "lto_code_gen_t": [[705, "lto-code-gen-t"]], "lto_module_t": [[705, "lto-module-t"]], "lwe": [[580, "lwe"]], "m": [[52, null], [53, null], [54, null], [145, null], [242, null], [243, null], [244, null], [306, null], [311, null], [316, null], [317, null], [318, null], [339, null], [340, null], [341, null], [368, null], [369, null], [480, null], [481, null]], "m0": [[581, "m0"]], "m_op_sel": [[580, "m-op-sel"]], "m_op_sel_hi": [[580, "m-op-sel-hi"]], "macOS": [[653, "macos"]], "make.implicit metadata": [[665, "make-implicit-metadata"]], "merge": [[636, "merge"]], "mlir-tblgen - Description to C++ Code for MLIR": [[648, null]], "mlir-tblgen Options": [[650, "mlir-tblgen-options"]], "msg": [[55, null], [146, null], [245, null], [370, null], [482, null]], "neg": [[580, "neg"], [580, "amdgpu-synid-neg"], [580, "id29"]], "neg_hi": [[580, "neg-hi"]], "neg_lo": [[580, "neg-lo"]], "null": [[581, "null"]], "nv": [[580, "nv"], [580, "amdgpu-synid-nv"], [580, "id19"]], "off": [[581, "off"]], "offen": [[580, "offen"]], "offset11": [[580, "offset11"]], "offset12": [[580, "offset12"], [580, "amdgpu-synid-buf-offset12"]], "offset12s": [[580, "offset12s"]], "offset13s": [[580, "offset13s"]], "offset16": [[580, "offset16"]], "offset8": [[580, "offset8"]], "omod": [[580, "omod"], [580, "amdgpu-synid-omod"]], "op_sel": [[580, "op-sel"], [580, "amdgpu-synid-op-sel"]], "op_sel_hi": [[580, "op-sel-hi"]], "opt": [[59, null], [149, null], [249, null], [343, null], [371, null], [483, null]], "opt - LLVM optimizer": [[649, null]], "opt-diff.py": [[745, "opt-diff-py"]], "opt-stats.py": [[745, "opt-stats-py"]], "opt-viewer": [[745, "opt-viewer"]], "opt-viewer.py": [[745, "opt-viewer-py"]], "param": [[60, null], [150, null], [250, null], [484, null]], "pdb2yaml": [[636, "pdb2yaml"]], "pretty": [[636, "pretty"]], "probe": [[372, null], [485, null]], "ptxas complains of undefined function: __nvvm_reflect": [[715, "ptxas-complains-of-undefined-function-nvvm-reflect"]], "r128": [[580, "r128"]], "rawspeed": [[738, "rawspeed"]], "row_mask": [[580, "row-mask"]], "runOnModule": [[714, "runonmodule"]], "s": [[581, "s"]], "saddr": [[65, null], [66, null], [346, null], [373, null], [374, null], [486, null], [487, null]], "sbase": [[22, null], [23, null], [24, null], [123, null], [124, null], [208, null], [209, null], [375, null], [376, null], [377, null], [488, null], [489, null], [490, null]], "scc": [[581, "scc"]], "sdata": [[34, null], [35, null], [36, null], [68, null], [69, null], [70, null], [256, null], [257, null], [258, null], [378, null], [379, null], [380, null], [381, null], [382, null], [383, null], [491, null], [492, null], [493, null], [494, null], [495, null], [496, null]], "sdst": [[71, null], [72, null], [73, null], [74, null], [75, null], [76, null], [77, null], [78, null], [116, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [161, null], [162, null], [259, null], [260, null], [261, null], [262, null], [263, null], [264, null], [265, null], [266, null], [384, null], [385, null], [386, null], [387, null], [388, null], [389, null], [390, null], [391, null], [497, null], [498, null], [499, null], [500, null], [501, null], [502, null], [503, null], [504, null]], "sext": [[580, "sext"]], "simm21": [[581, "simm21"]], "simm32": [[392, null], [393, null], [394, null], [505, null], [506, null], [507, null]], "slc": [[580, "slc"], [580, "id3"], [580, "amdgpu-synid-slc"], [580, "id14"]], "soffset": [[56, null], [57, null], [58, null], [147, null], [148, null], [246, null], [247, null], [248, null], [342, null], [395, null], [396, null], [397, null], [508, null], [509, null], [510, null]], "src": [[10, null], [11, null], [12, null], [13, null], [80, null], [81, null], [82, null], [83, null], [84, null], [85, null], [86, null], [87, null], [164, null], [165, null], [166, null], [167, null], [168, null], [169, null], [170, null], [171, null], [172, null], [173, null], [268, null], [269, null], [270, null], [271, null], [272, null], [273, null], [274, null], [275, null], [276, null], [277, null], [307, null], [308, null], [312, null], [313, null], [319, null], [320, null], [321, null], [322, null], [323, null], [347, null], [348, null], [349, null], [350, null], [351, null], [352, null], [398, null], [399, null], [400, null], [401, null], [402, null], [403, null], [404, null], [405, null], [406, null], [407, null], [408, null], [409, null], [511, null], [512, null], [513, null], [514, null], [515, null], [516, null], [517, null], [518, null], [519, null], [520, null], [521, null]], "src0_sel": [[580, "src0-sel"]], "src1_sel": [[580, "src1-sel"]], "srsrc": [[63, null], [64, null], [152, null], [153, null], [253, null], [254, null], [345, null], [410, null], [411, null], [522, null], [523, null]], "ssamp": [[67, null], [154, null], [255, null], [412, null], [524, null]], "ssrc": [[89, null], [90, null], [91, null], [92, null], [93, null], [94, null], [95, null], [96, null], [117, null], [175, null], [176, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [184, null], [185, null], [279, null], [280, null], [281, null], [282, null], [283, null], [284, null], [285, null], [286, null], [287, null], [413, null], [414, null], [415, null], [416, null], [417, null], [418, null], [419, null], [420, null], [421, null], [525, null], [526, null], [527, null], [528, null], [529, null], [530, null], [531, null], [532, null], [533, null]], "std::string": [[734, "std-string"]], "switch statement": [[591, "switch-statement"], [591, "id3"]], "swizzle pattern": [[580, "swizzle-pattern"]], "tba": [[581, "tba"]], "tblgen - Description to C++ Code": [[650, null]], "test-release.sh": [[744, "test-release-sh"]], "test-suite": [[671, "test-suite"], [766, "test-suite"]], "test-suite Guide": [[764, null]], "test-suite Makefile Guide (deprecated)": [[765, null]], "tfe": [[580, "tfe"], [580, "id4"], [580, "amdgpu-synid-tfe"], [580, "id17"]], "tgt": [[97, null], [186, null], [288, null], [534, null]], "tma": [[581, "tma"]], "trap": [[581, "trap"]], "ttmp": [[581, "ttmp"]], "ufmt": [[580, "ufmt"]], "uimm20": [[581, "uimm20"]], "uimm32": [[581, "uimm32"]], "uimm8": [[581, "uimm8"]], "unorm": [[580, "unorm"]], "v": [[581, "v"]], "vaddr": [[17, null], [18, null], [19, null], [20, null], [100, null], [101, null], [118, null], [119, null], [120, null], [121, null], [203, null], [204, null], [205, null], [206, null], [327, null], [354, null], [423, null], [424, null], [425, null], [426, null], [427, null], [428, null], [536, null], [537, null], [538, null], [539, null], [540, null], [541, null]], "vasrc": [[355, null], [356, null]], "vcc": [[102, null], [189, null], [291, null], [429, null], [542, null], [581, "vcc"]], "vccz": [[581, "vccz"]], "vdata": [[27, null], [28, null], [29, null], [30, null], [31, null], [32, null], [33, null], [103, null], [104, null], [105, null], [106, null], [127, null], [128, null], [129, null], [130, null], [131, null], [132, null], [190, null], [191, null], [192, null], [193, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null], [222, null], [292, null], [293, null], [294, null], [295, null], [336, null], [357, null], [430, null], [435, null], [436, null], [437, null], [438, null], [439, null], [440, null], [441, null], [442, null], [443, null], [444, null], [543, null], [548, null], [549, null], [550, null], [551, null], [552, null], [553, null], [554, null], [555, null], [556, null], [557, null]], "vdata0": [[431, null], [432, null], [544, null], [545, null]], "vdata1": [[433, null], [434, null], [546, null], [547, null]], "vdst": [[15, null], [37, null], [38, null], [39, null], [40, null], [41, null], [42, null], [43, null], [44, null], [45, null], [46, null], [107, null], [108, null], [109, null], [110, null], [133, null], [134, null], [135, null], [136, null], [137, null], [138, null], [139, null], [140, null], [141, null], [194, null], [195, null], [196, null], [197, null], [223, null], [224, null], [225, null], [226, null], [227, null], [228, null], [229, null], [230, null], [231, null], [232, null], [233, null], [234, null], [235, null], [236, null], [296, null], [297, null], [298, null], [299, null], [309, null], [314, null], [325, null], [337, null], [358, null], [445, null], [446, null], [447, null], [448, null], [449, null], [450, null], [451, null], [452, null], [453, null], [454, null], [455, null], [456, null], [457, null], [458, null], [459, null], [460, null], [461, null], [462, null], [463, null], [464, null], [558, null], [559, null], [560, null], [561, null], [562, null], [563, null], [564, null], [565, null], [566, null], [567, null], [568, null], [569, null], [570, null], [571, null]], "vecmathlib tests harness": [[738, "vecmathlib-tests-harness"]], "vm": [[580, "vm"]], "vsrc": [[16, null], [88, null], [111, null], [112, null], [113, null], [114, null], [174, null], [198, null], [199, null], [200, null], [201, null], [278, null], [300, null], [301, null], [302, null], [303, null], [326, null], [359, null], [465, null], [466, null], [467, null], [468, null], [469, null], [470, null], [572, null], [573, null], [574, null], [575, null]], "waitcnt": [[115, null], [202, null], [304, null], [471, null], [576, null]], "x86 Implementation Details": [[751, "x86-implementation-details"]], "xnack_mask": [[581, "xnack-mask"]], "yaml2obj": [[805, null]], "yaml2pdb": [[636, "yaml2pdb"]], "\u4f7f\u7528 C \u548c C++ \u524d\u7aef": [[664, "using-the-c-and-c-front-ends"]], "\u4f7f\u7528 CMake \u5efa\u7f6e LLVM": [[597, null]], "\u4f7f\u7528 gc.statepoint": [[668, "using-gc-statepoint"]], "\u4f7f\u7528 llvm.gcwrite": [[668, "using-llvm-gcwrite"]], "\u4f7f\u7528\u8005\u6307\u5357": [[769, null]], "\u4f86\u6e90\u78bc": [[664, "source-code"]], "\u4f86\u6e90\u8a9e\u8a00": [[582, "source-languages"], [664, "source-languages"]], "\u57f7\u884c TableGen": [[762, "running-tablegen"]], "\u57fa\u672c\u6982\u5ff5": [[762, "basic-concepts"]], "\u5e38\u898b\u554f\u984c\u96c6\uff08FAQ\uff09": [[664, null]], "\u6587\u4ef6": [[778, "documentation"]], "\u6982\u89bd": [[0, "overview"], [1, "overview"], [2, "overview"], [3, "overview"], [4, "overview"], [5, "overview"], [6, "overview"], [7, "overview"], [8, "overview"], [9, "overview"], [589, "overview"], [660, "overview"], [661, "overview"], [671, "overview"], [673, "overview"], [702, "id679"], [702, "id684"], [702, "id689"], [702, "id694"], [702, "id699"], [702, "id704"], [702, "id709"], [702, "id714"], [702, "id719"], [702, "id724"], [702, "id729"], [702, "id734"], [702, "id739"], [702, "id744"], [708, "overview"], [716, "overview"], [731, "overview"], [735, "overview"], [752, "overview"], [765, "overview"], [766, "overview"], [767, "overview"]], "\u76ee\u6b21\u8868": [[737, "table-of-contents"], [740, "table-of-contents"]], "\u76ee\u9304": [[695, "id1"]], "\u793e\u7fa4": [[778, "community"]], "\u7bc4\u4f8b": [[762, "example"]], "\u7bc4\u4f8b\uff1a": [[702, "examples"], [702, "id210"], [702, "id652"], [702, "id657"], [702, "id662"], [702, "id667"], [702, "id672"], [702, "id677"], [702, "id754"], [702, "id785"], [702, "id792"], [702, "id849"], [702, "id854"], [702, "id877"], [702, "id882"], [702, "id887"], [702, "id892"], [702, "id897"], [702, "id902"], [702, "id907"], [702, "id912"], [702, "id917"], [702, "id922"], [702, "id927"], [702, "id932"], [702, "id937"], [702, "id942"], [702, "id947"], [702, "id952"], [702, "id957"], [702, "id962"], [702, "id967"]], "\u7c21\u4ecb": [[0, "introduction"], [1, "introduction"], [2, "introduction"], [3, "introduction"], [4, "introduction"], [5, "introduction"], [6, "introduction"], [7, "introduction"], [8, "introduction"], [9, "introduction"], [578, "introduction"], [582, "introduction"], [584, "introduction"], [585, "introduction"], [586, "introduction"], [587, "introduction"], [588, "introduction"], [590, "introduction"], [591, "introduction"], [594, "introduction"], [595, "introduction"], [597, "introduction"], [598, "introduction"], [599, "introduction"], [602, "introduction"], [651, "introduction"], [652, "introduction"], [655, "introduction"], [656, "introduction"], [658, "introduction"], [659, "introduction"], [660, "introduction"], [661, "introduction"], [663, "introduction"], [667, "introduction"], [668, "introduction"], [669, "introduction"], [674, "introduction"], [685, "introduction"], [686, "introduction"], [687, "introduction"], [688, "introduction"], [689, "introduction"], [690, "introduction"], [691, "introduction"], [692, "introduction"], [693, "introduction"], [694, "introduction"], [697, "introduction"], [698, "introduction"], [699, "introduction"], [700, "introduction"], [701, "introduction"], [702, "introduction"], [704, "introduction"], [707, "introduction"], [708, "introduction"], [710, "introduction"], [712, "introduction"], [713, "introduction"], [714, "introduction"], [715, "introduction"], [717, "introduction"], [719, "introduction"], [720, "introduction"], [721, "introduction"], [722, "introduction"], [724, "introduction"], [725, "introduction"], [729, "introduction"], [730, "introduction"], [732, "introduction"], [734, "introduction"], [736, "introduction"], [737, "introduction"], [739, "introduction"], [743, "introduction"], [744, "introduction"], [747, "introduction"], [749, "introduction"], [750, "introduction"], [750, "id6"], [750, "id7"], [754, "introduction"], [759, "introduction"], [762, "introduction"], [771, "introduction"], [774, "introduction"], [776, "introduction"]], "\u8a9e\u6cd5": [[762, "syntax"]], "\u9032\u968e\u5efa\u7f6e\u7d44\u614b": [[584, null]], "\u9078\u9805\u548c\u8b8a\u6578": [[597, "options-and-variables"]], "\u95dc\u65bc": [[778, null]]}, "docnames": ["AMDGPU/AMDGPUAsmGFX10", "AMDGPU/AMDGPUAsmGFX1011", "AMDGPU/AMDGPUAsmGFX7", "AMDGPU/AMDGPUAsmGFX8", "AMDGPU/AMDGPUAsmGFX9", "AMDGPU/AMDGPUAsmGFX900", "AMDGPU/AMDGPUAsmGFX904", "AMDGPU/AMDGPUAsmGFX906", "AMDGPU/AMDGPUAsmGFX908", "AMDGPU/AMDGPUAsmGFX90a", "AMDGPU/gfx1011_src32_0", "AMDGPU/gfx1011_src32_1", "AMDGPU/gfx1011_src32_2", "AMDGPU/gfx1011_src32_3", "AMDGPU/gfx1011_type_dev", "AMDGPU/gfx1011_vdst32_0", "AMDGPU/gfx1011_vsrc32_0", "AMDGPU/gfx10_addr_buf", "AMDGPU/gfx10_addr_ds", "AMDGPU/gfx10_addr_flat", "AMDGPU/gfx10_addr_mimg", "AMDGPU/gfx10_attr", "AMDGPU/gfx10_base_smem_addr", "AMDGPU/gfx10_base_smem_buf", "AMDGPU/gfx10_base_smem_scratch", "AMDGPU/gfx10_bimm16", "AMDGPU/gfx10_bimm32", "AMDGPU/gfx10_data_buf_atomic128", "AMDGPU/gfx10_data_buf_atomic32", "AMDGPU/gfx10_data_buf_atomic64", "AMDGPU/gfx10_data_mimg_atomic_cmp", "AMDGPU/gfx10_data_mimg_atomic_reg", "AMDGPU/gfx10_data_mimg_store", "AMDGPU/gfx10_data_mimg_store_d16", "AMDGPU/gfx10_data_smem_atomic128", "AMDGPU/gfx10_data_smem_atomic32", "AMDGPU/gfx10_data_smem_atomic64", "AMDGPU/gfx10_dst_buf_128", "AMDGPU/gfx10_dst_buf_32", "AMDGPU/gfx10_dst_buf_64", "AMDGPU/gfx10_dst_buf_96", "AMDGPU/gfx10_dst_buf_lds", "AMDGPU/gfx10_dst_flat_atomic32", "AMDGPU/gfx10_dst_flat_atomic64", "AMDGPU/gfx10_dst_mimg_gather4", "AMDGPU/gfx10_dst_mimg_regular", "AMDGPU/gfx10_dst_mimg_regular_d16", "AMDGPU/gfx10_fimm16", "AMDGPU/gfx10_fimm32", "AMDGPU/gfx10_hwreg", "AMDGPU/gfx10_label", "AMDGPU/gfx10_mad_type_dev", "AMDGPU/gfx10_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx10_mod_sdwa_sext", "AMDGPU/gfx10_mod_vop3_abs_neg", "AMDGPU/gfx10_msg", "AMDGPU/gfx10_offset_buf", "AMDGPU/gfx10_offset_smem_buf", "AMDGPU/gfx10_offset_smem_plain", "AMDGPU/gfx10_opt", "AMDGPU/gfx10_param", "AMDGPU/gfx10_perm_smem", "AMDGPU/gfx10_ret", "AMDGPU/gfx10_rsrc_buf", "AMDGPU/gfx10_rsrc_mimg", "AMDGPU/gfx10_saddr_flat_global", "AMDGPU/gfx10_saddr_flat_scratch", "AMDGPU/gfx10_samp_mimg", "AMDGPU/gfx10_sdata128_0", "AMDGPU/gfx10_sdata32_0", "AMDGPU/gfx10_sdata64_0", "AMDGPU/gfx10_sdst128_0", "AMDGPU/gfx10_sdst256_0", "AMDGPU/gfx10_sdst32_0", "AMDGPU/gfx10_sdst32_1", "AMDGPU/gfx10_sdst32_2", "AMDGPU/gfx10_sdst512_0", "AMDGPU/gfx10_sdst64_0", "AMDGPU/gfx10_sdst64_1", "AMDGPU/gfx10_simm16", "AMDGPU/gfx10_src32_0", "AMDGPU/gfx10_src32_1", "AMDGPU/gfx10_src32_2", "AMDGPU/gfx10_src32_3", "AMDGPU/gfx10_src32_4", "AMDGPU/gfx10_src32_5", "AMDGPU/gfx10_src32_6", "AMDGPU/gfx10_src64_0", "AMDGPU/gfx10_src_exp", "AMDGPU/gfx10_ssrc32_0", "AMDGPU/gfx10_ssrc32_1", "AMDGPU/gfx10_ssrc32_2", "AMDGPU/gfx10_ssrc32_3", "AMDGPU/gfx10_ssrc32_4", "AMDGPU/gfx10_ssrc32_5", "AMDGPU/gfx10_ssrc64_0", "AMDGPU/gfx10_ssrc64_1", "AMDGPU/gfx10_tgt", "AMDGPU/gfx10_type_dev", "AMDGPU/gfx10_uimm16", "AMDGPU/gfx10_vaddr_flat_global", "AMDGPU/gfx10_vaddr_flat_scratch", "AMDGPU/gfx10_vcc_32", "AMDGPU/gfx10_vdata128_0", "AMDGPU/gfx10_vdata32_0", "AMDGPU/gfx10_vdata64_0", "AMDGPU/gfx10_vdata96_0", "AMDGPU/gfx10_vdst128_0", "AMDGPU/gfx10_vdst32_0", "AMDGPU/gfx10_vdst64_0", "AMDGPU/gfx10_vdst96_0", "AMDGPU/gfx10_vsrc128_0", "AMDGPU/gfx10_vsrc32_0", "AMDGPU/gfx10_vsrc32_1", "AMDGPU/gfx10_vsrc64_0", "AMDGPU/gfx10_waitcnt", "AMDGPU/gfx10_wsdst", "AMDGPU/gfx10_wssrc", "AMDGPU/gfx7_addr_buf", "AMDGPU/gfx7_addr_ds", "AMDGPU/gfx7_addr_flat", "AMDGPU/gfx7_addr_mimg", "AMDGPU/gfx7_attr", "AMDGPU/gfx7_base_smem_addr", "AMDGPU/gfx7_base_smem_buf", "AMDGPU/gfx7_bimm16", "AMDGPU/gfx7_bimm32", "AMDGPU/gfx7_data_buf_atomic128", "AMDGPU/gfx7_data_buf_atomic32", "AMDGPU/gfx7_data_buf_atomic64", "AMDGPU/gfx7_data_mimg_atomic_cmp", "AMDGPU/gfx7_data_mimg_atomic_reg", "AMDGPU/gfx7_data_mimg_store", "AMDGPU/gfx7_dst_buf_128", "AMDGPU/gfx7_dst_buf_32", "AMDGPU/gfx7_dst_buf_64", "AMDGPU/gfx7_dst_buf_96", "AMDGPU/gfx7_dst_buf_lds", "AMDGPU/gfx7_dst_flat_atomic32", "AMDGPU/gfx7_dst_flat_atomic64", "AMDGPU/gfx7_dst_mimg_gather4", "AMDGPU/gfx7_dst_mimg_regular", "AMDGPU/gfx7_fimm32", "AMDGPU/gfx7_hwreg", "AMDGPU/gfx7_label", "AMDGPU/gfx7_mod", "AMDGPU/gfx7_msg", "AMDGPU/gfx7_offset_buf", "AMDGPU/gfx7_offset_smem", "AMDGPU/gfx7_opt", "AMDGPU/gfx7_param", "AMDGPU/gfx7_ret", "AMDGPU/gfx7_rsrc_buf", "AMDGPU/gfx7_rsrc_mimg", "AMDGPU/gfx7_samp_mimg", "AMDGPU/gfx7_sdst128_0", "AMDGPU/gfx7_sdst256_0", "AMDGPU/gfx7_sdst32_0", "AMDGPU/gfx7_sdst32_1", "AMDGPU/gfx7_sdst32_2", "AMDGPU/gfx7_sdst512_0", "AMDGPU/gfx7_sdst64_0", "AMDGPU/gfx7_sdst64_1", "AMDGPU/gfx7_simm16", "AMDGPU/gfx7_src32_0", "AMDGPU/gfx7_src32_1", "AMDGPU/gfx7_src32_2", "AMDGPU/gfx7_src32_3", "AMDGPU/gfx7_src32_4", "AMDGPU/gfx7_src32_5", "AMDGPU/gfx7_src32_6", "AMDGPU/gfx7_src64_0", "AMDGPU/gfx7_src64_1", "AMDGPU/gfx7_src64_2", "AMDGPU/gfx7_src_exp", "AMDGPU/gfx7_ssrc32_0", "AMDGPU/gfx7_ssrc32_1", "AMDGPU/gfx7_ssrc32_2", "AMDGPU/gfx7_ssrc32_3", "AMDGPU/gfx7_ssrc32_4", "AMDGPU/gfx7_ssrc32_5", "AMDGPU/gfx7_ssrc32_6", "AMDGPU/gfx7_ssrc64_0", "AMDGPU/gfx7_ssrc64_1", "AMDGPU/gfx7_ssrc64_2", "AMDGPU/gfx7_ssrc64_3", "AMDGPU/gfx7_tgt", "AMDGPU/gfx7_type_dev", "AMDGPU/gfx7_uimm16", "AMDGPU/gfx7_vcc_64", "AMDGPU/gfx7_vdata128_0", "AMDGPU/gfx7_vdata32_0", "AMDGPU/gfx7_vdata64_0", "AMDGPU/gfx7_vdata96_0", "AMDGPU/gfx7_vdst128_0", "AMDGPU/gfx7_vdst32_0", "AMDGPU/gfx7_vdst64_0", "AMDGPU/gfx7_vdst96_0", "AMDGPU/gfx7_vsrc128_0", "AMDGPU/gfx7_vsrc32_0", "AMDGPU/gfx7_vsrc32_1", "AMDGPU/gfx7_vsrc64_0", "AMDGPU/gfx7_waitcnt", "AMDGPU/gfx8_addr_buf", "AMDGPU/gfx8_addr_ds", "AMDGPU/gfx8_addr_flat", "AMDGPU/gfx8_addr_mimg", "AMDGPU/gfx8_attr", "AMDGPU/gfx8_base_smem_addr", "AMDGPU/gfx8_base_smem_buf", "AMDGPU/gfx8_bimm16", "AMDGPU/gfx8_bimm32", "AMDGPU/gfx8_data_buf_atomic128", "AMDGPU/gfx8_data_buf_atomic32", "AMDGPU/gfx8_data_buf_atomic64", "AMDGPU/gfx8_data_buf_d16_128", "AMDGPU/gfx8_data_buf_d16_32", "AMDGPU/gfx8_data_buf_d16_64", "AMDGPU/gfx8_data_buf_d16_96", "AMDGPU/gfx8_data_mimg_atomic_cmp", "AMDGPU/gfx8_data_mimg_atomic_reg", "AMDGPU/gfx8_data_mimg_store", "AMDGPU/gfx8_data_mimg_store_d16", "AMDGPU/gfx8_dst_buf_128", "AMDGPU/gfx8_dst_buf_32", "AMDGPU/gfx8_dst_buf_64", "AMDGPU/gfx8_dst_buf_96", "AMDGPU/gfx8_dst_buf_d16_128", "AMDGPU/gfx8_dst_buf_d16_32", "AMDGPU/gfx8_dst_buf_d16_64", "AMDGPU/gfx8_dst_buf_d16_96", "AMDGPU/gfx8_dst_buf_lds", "AMDGPU/gfx8_dst_flat_atomic32", "AMDGPU/gfx8_dst_flat_atomic64", "AMDGPU/gfx8_dst_mimg_gather4", "AMDGPU/gfx8_dst_mimg_regular", "AMDGPU/gfx8_dst_mimg_regular_d16", "AMDGPU/gfx8_fimm16", "AMDGPU/gfx8_fimm32", "AMDGPU/gfx8_hwreg", "AMDGPU/gfx8_imask", "AMDGPU/gfx8_label", "AMDGPU/gfx8_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx8_mod_sdwa_sext", "AMDGPU/gfx8_mod_vop3_abs_neg", "AMDGPU/gfx8_msg", "AMDGPU/gfx8_offset_buf", "AMDGPU/gfx8_offset_smem_load", "AMDGPU/gfx8_offset_smem_store", "AMDGPU/gfx8_opt", "AMDGPU/gfx8_param", "AMDGPU/gfx8_perm_smem", "AMDGPU/gfx8_ret", "AMDGPU/gfx8_rsrc_buf", "AMDGPU/gfx8_rsrc_mimg", "AMDGPU/gfx8_samp_mimg", "AMDGPU/gfx8_sdata128_0", "AMDGPU/gfx8_sdata32_0", "AMDGPU/gfx8_sdata64_0", "AMDGPU/gfx8_sdst128_0", "AMDGPU/gfx8_sdst256_0", "AMDGPU/gfx8_sdst32_0", "AMDGPU/gfx8_sdst32_1", "AMDGPU/gfx8_sdst32_2", "AMDGPU/gfx8_sdst512_0", "AMDGPU/gfx8_sdst64_0", "AMDGPU/gfx8_sdst64_1", "AMDGPU/gfx8_simm16", "AMDGPU/gfx8_src32_0", "AMDGPU/gfx8_src32_1", "AMDGPU/gfx8_src32_2", "AMDGPU/gfx8_src32_3", "AMDGPU/gfx8_src32_4", "AMDGPU/gfx8_src32_5", "AMDGPU/gfx8_src32_6", "AMDGPU/gfx8_src32_7", "AMDGPU/gfx8_src64_0", "AMDGPU/gfx8_src64_1", "AMDGPU/gfx8_src_exp", "AMDGPU/gfx8_ssrc32_0", "AMDGPU/gfx8_ssrc32_1", "AMDGPU/gfx8_ssrc32_2", "AMDGPU/gfx8_ssrc32_3", "AMDGPU/gfx8_ssrc32_4", "AMDGPU/gfx8_ssrc64_0", "AMDGPU/gfx8_ssrc64_1", "AMDGPU/gfx8_ssrc64_2", "AMDGPU/gfx8_ssrc64_3", "AMDGPU/gfx8_tgt", "AMDGPU/gfx8_type_dev", "AMDGPU/gfx8_uimm16", "AMDGPU/gfx8_vcc_64", "AMDGPU/gfx8_vdata128_0", "AMDGPU/gfx8_vdata32_0", "AMDGPU/gfx8_vdata64_0", "AMDGPU/gfx8_vdata96_0", "AMDGPU/gfx8_vdst128_0", "AMDGPU/gfx8_vdst32_0", "AMDGPU/gfx8_vdst64_0", "AMDGPU/gfx8_vdst96_0", "AMDGPU/gfx8_vsrc128_0", "AMDGPU/gfx8_vsrc32_0", "AMDGPU/gfx8_vsrc32_1", "AMDGPU/gfx8_vsrc64_0", "AMDGPU/gfx8_waitcnt", "AMDGPU/gfx900_mad_type_dev", "AMDGPU/gfx900_mod_vop3_abs_neg", "AMDGPU/gfx900_src32_0", "AMDGPU/gfx900_src32_1", "AMDGPU/gfx900_vdst32_0", "AMDGPU/gfx904_mad_type_dev", "AMDGPU/gfx904_mod_vop3_abs_neg", "AMDGPU/gfx904_src32_0", "AMDGPU/gfx904_src32_1", "AMDGPU/gfx904_vdst32_0", "AMDGPU/gfx906_mad_type_dev", "AMDGPU/gfx906_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx906_mod_sdwa_sext", "AMDGPU/gfx906_mod_vop3_abs_neg", "AMDGPU/gfx906_src32_0", "AMDGPU/gfx906_src32_1", "AMDGPU/gfx906_src32_2", "AMDGPU/gfx906_src32_3", "AMDGPU/gfx906_src32_4", "AMDGPU/gfx906_type_dev", "AMDGPU/gfx906_vdst32_0", "AMDGPU/gfx906_vsrc32_0", "AMDGPU/gfx908_addr_buf", "AMDGPU/gfx908_adst1024_0", "AMDGPU/gfx908_adst128_0", "AMDGPU/gfx908_adst32_0", "AMDGPU/gfx908_adst512_0", "AMDGPU/gfx908_asrc1024_0", "AMDGPU/gfx908_asrc128_0", "AMDGPU/gfx908_asrc32_0", "AMDGPU/gfx908_asrc512_0", "AMDGPU/gfx908_data_buf_atomic32", "AMDGPU/gfx908_dst_flat_atomic32", "AMDGPU/gfx908_mad_type_dev", "AMDGPU/gfx908_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx908_mod_sdwa_sext", "AMDGPU/gfx908_mod_vop3_abs_neg", "AMDGPU/gfx908_offset_buf", "AMDGPU/gfx908_opt", "AMDGPU/gfx908_ret", "AMDGPU/gfx908_rsrc_buf", "AMDGPU/gfx908_saddr_flat_global", "AMDGPU/gfx908_src32_0", "AMDGPU/gfx908_src32_1", "AMDGPU/gfx908_src32_2", "AMDGPU/gfx908_src32_3", "AMDGPU/gfx908_src32_4", "AMDGPU/gfx908_src32_5", "AMDGPU/gfx908_type_dev", "AMDGPU/gfx908_vaddr_flat_global", "AMDGPU/gfx908_vasrc32_0", "AMDGPU/gfx908_vasrc64_0", "AMDGPU/gfx908_vdata32_0", "AMDGPU/gfx908_vdst32_0", "AMDGPU/gfx908_vsrc32_0", "AMDGPU/gfx90a_dst", "AMDGPU/gfx90a_fx_operand", "AMDGPU/gfx90a_hwreg", "AMDGPU/gfx90a_imask", "AMDGPU/gfx90a_imm16", "AMDGPU/gfx90a_imm16_1", "AMDGPU/gfx90a_imm16_2", "AMDGPU/gfx90a_label", "AMDGPU/gfx90a_m", "AMDGPU/gfx90a_m_1", "AMDGPU/gfx90a_msg", "AMDGPU/gfx90a_opt", "AMDGPU/gfx90a_probe", "AMDGPU/gfx90a_saddr", "AMDGPU/gfx90a_saddr_1", "AMDGPU/gfx90a_sbase", "AMDGPU/gfx90a_sbase_1", "AMDGPU/gfx90a_sbase_2", "AMDGPU/gfx90a_sdata", "AMDGPU/gfx90a_sdata_1", "AMDGPU/gfx90a_sdata_2", "AMDGPU/gfx90a_sdata_3", "AMDGPU/gfx90a_sdata_4", "AMDGPU/gfx90a_sdata_5", "AMDGPU/gfx90a_sdst", "AMDGPU/gfx90a_sdst_1", "AMDGPU/gfx90a_sdst_2", "AMDGPU/gfx90a_sdst_3", "AMDGPU/gfx90a_sdst_4", "AMDGPU/gfx90a_sdst_5", "AMDGPU/gfx90a_sdst_6", "AMDGPU/gfx90a_sdst_7", "AMDGPU/gfx90a_simm32", "AMDGPU/gfx90a_simm32_1", "AMDGPU/gfx90a_simm32_2", "AMDGPU/gfx90a_soffset", "AMDGPU/gfx90a_soffset_1", "AMDGPU/gfx90a_soffset_2", "AMDGPU/gfx90a_src", "AMDGPU/gfx90a_src_1", "AMDGPU/gfx90a_src_10", "AMDGPU/gfx90a_src_11", "AMDGPU/gfx90a_src_2", "AMDGPU/gfx90a_src_3", "AMDGPU/gfx90a_src_4", "AMDGPU/gfx90a_src_5", "AMDGPU/gfx90a_src_6", "AMDGPU/gfx90a_src_7", "AMDGPU/gfx90a_src_8", "AMDGPU/gfx90a_src_9", "AMDGPU/gfx90a_srsrc", "AMDGPU/gfx90a_srsrc_1", "AMDGPU/gfx90a_ssamp", "AMDGPU/gfx90a_ssrc", "AMDGPU/gfx90a_ssrc_1", "AMDGPU/gfx90a_ssrc_2", "AMDGPU/gfx90a_ssrc_3", "AMDGPU/gfx90a_ssrc_4", "AMDGPU/gfx90a_ssrc_5", "AMDGPU/gfx90a_ssrc_6", "AMDGPU/gfx90a_ssrc_7", "AMDGPU/gfx90a_ssrc_8", "AMDGPU/gfx90a_type_deviation", "AMDGPU/gfx90a_vaddr", "AMDGPU/gfx90a_vaddr_1", "AMDGPU/gfx90a_vaddr_2", "AMDGPU/gfx90a_vaddr_3", "AMDGPU/gfx90a_vaddr_4", "AMDGPU/gfx90a_vaddr_5", "AMDGPU/gfx90a_vcc", "AMDGPU/gfx90a_vdata", "AMDGPU/gfx90a_vdata0", "AMDGPU/gfx90a_vdata0_1", "AMDGPU/gfx90a_vdata1", "AMDGPU/gfx90a_vdata1_1", "AMDGPU/gfx90a_vdata_1", "AMDGPU/gfx90a_vdata_10", "AMDGPU/gfx90a_vdata_2", "AMDGPU/gfx90a_vdata_3", "AMDGPU/gfx90a_vdata_4", "AMDGPU/gfx90a_vdata_5", "AMDGPU/gfx90a_vdata_6", "AMDGPU/gfx90a_vdata_7", "AMDGPU/gfx90a_vdata_8", "AMDGPU/gfx90a_vdata_9", "AMDGPU/gfx90a_vdst", "AMDGPU/gfx90a_vdst_1", "AMDGPU/gfx90a_vdst_10", "AMDGPU/gfx90a_vdst_11", "AMDGPU/gfx90a_vdst_12", "AMDGPU/gfx90a_vdst_13", "AMDGPU/gfx90a_vdst_14", "AMDGPU/gfx90a_vdst_15", "AMDGPU/gfx90a_vdst_16", "AMDGPU/gfx90a_vdst_17", "AMDGPU/gfx90a_vdst_18", "AMDGPU/gfx90a_vdst_19", "AMDGPU/gfx90a_vdst_2", "AMDGPU/gfx90a_vdst_3", "AMDGPU/gfx90a_vdst_4", "AMDGPU/gfx90a_vdst_5", "AMDGPU/gfx90a_vdst_6", "AMDGPU/gfx90a_vdst_7", "AMDGPU/gfx90a_vdst_8", "AMDGPU/gfx90a_vdst_9", "AMDGPU/gfx90a_vsrc", "AMDGPU/gfx90a_vsrc_1", "AMDGPU/gfx90a_vsrc_2", "AMDGPU/gfx90a_vsrc_3", "AMDGPU/gfx90a_vsrc_4", "AMDGPU/gfx90a_vsrc_5", "AMDGPU/gfx90a_waitcnt", "AMDGPU/gfx9_attr", "AMDGPU/gfx9_dst", "AMDGPU/gfx9_hwreg", "AMDGPU/gfx9_imask", "AMDGPU/gfx9_imm16", "AMDGPU/gfx9_imm16_1", "AMDGPU/gfx9_imm16_2", "AMDGPU/gfx9_label", "AMDGPU/gfx9_m", "AMDGPU/gfx9_m_1", "AMDGPU/gfx9_msg", "AMDGPU/gfx9_opt", "AMDGPU/gfx9_param", "AMDGPU/gfx9_probe", "AMDGPU/gfx9_saddr", "AMDGPU/gfx9_saddr_1", "AMDGPU/gfx9_sbase", "AMDGPU/gfx9_sbase_1", "AMDGPU/gfx9_sbase_2", "AMDGPU/gfx9_sdata", "AMDGPU/gfx9_sdata_1", "AMDGPU/gfx9_sdata_2", "AMDGPU/gfx9_sdata_3", "AMDGPU/gfx9_sdata_4", "AMDGPU/gfx9_sdata_5", "AMDGPU/gfx9_sdst", "AMDGPU/gfx9_sdst_1", "AMDGPU/gfx9_sdst_2", "AMDGPU/gfx9_sdst_3", "AMDGPU/gfx9_sdst_4", "AMDGPU/gfx9_sdst_5", "AMDGPU/gfx9_sdst_6", "AMDGPU/gfx9_sdst_7", "AMDGPU/gfx9_simm32", "AMDGPU/gfx9_simm32_1", "AMDGPU/gfx9_simm32_2", "AMDGPU/gfx9_soffset", "AMDGPU/gfx9_soffset_1", "AMDGPU/gfx9_soffset_2", "AMDGPU/gfx9_src", "AMDGPU/gfx9_src_1", "AMDGPU/gfx9_src_10", "AMDGPU/gfx9_src_2", "AMDGPU/gfx9_src_3", "AMDGPU/gfx9_src_4", "AMDGPU/gfx9_src_5", "AMDGPU/gfx9_src_6", "AMDGPU/gfx9_src_7", "AMDGPU/gfx9_src_8", "AMDGPU/gfx9_src_9", "AMDGPU/gfx9_srsrc", "AMDGPU/gfx9_srsrc_1", "AMDGPU/gfx9_ssamp", "AMDGPU/gfx9_ssrc", "AMDGPU/gfx9_ssrc_1", "AMDGPU/gfx9_ssrc_2", "AMDGPU/gfx9_ssrc_3", "AMDGPU/gfx9_ssrc_4", "AMDGPU/gfx9_ssrc_5", "AMDGPU/gfx9_ssrc_6", "AMDGPU/gfx9_ssrc_7", "AMDGPU/gfx9_ssrc_8", "AMDGPU/gfx9_tgt", "AMDGPU/gfx9_type_deviation", "AMDGPU/gfx9_vaddr", "AMDGPU/gfx9_vaddr_1", "AMDGPU/gfx9_vaddr_2", "AMDGPU/gfx9_vaddr_3", "AMDGPU/gfx9_vaddr_4", "AMDGPU/gfx9_vaddr_5", "AMDGPU/gfx9_vcc", "AMDGPU/gfx9_vdata", "AMDGPU/gfx9_vdata0", "AMDGPU/gfx9_vdata0_1", "AMDGPU/gfx9_vdata1", "AMDGPU/gfx9_vdata1_1", "AMDGPU/gfx9_vdata_1", "AMDGPU/gfx9_vdata_10", "AMDGPU/gfx9_vdata_2", "AMDGPU/gfx9_vdata_3", "AMDGPU/gfx9_vdata_4", "AMDGPU/gfx9_vdata_5", "AMDGPU/gfx9_vdata_6", "AMDGPU/gfx9_vdata_7", "AMDGPU/gfx9_vdata_8", "AMDGPU/gfx9_vdata_9", "AMDGPU/gfx9_vdst", "AMDGPU/gfx9_vdst_1", "AMDGPU/gfx9_vdst_10", "AMDGPU/gfx9_vdst_11", "AMDGPU/gfx9_vdst_12", "AMDGPU/gfx9_vdst_13", "AMDGPU/gfx9_vdst_2", "AMDGPU/gfx9_vdst_3", "AMDGPU/gfx9_vdst_4", "AMDGPU/gfx9_vdst_5", "AMDGPU/gfx9_vdst_6", "AMDGPU/gfx9_vdst_7", "AMDGPU/gfx9_vdst_8", "AMDGPU/gfx9_vdst_9", "AMDGPU/gfx9_vsrc", "AMDGPU/gfx9_vsrc_1", "AMDGPU/gfx9_vsrc_2", "AMDGPU/gfx9_vsrc_3", "AMDGPU/gfx9_waitcnt", "AMDGPUDwarfExtensionsForHeterogeneousDebugging", "AMDGPUInstructionNotation", "AMDGPUInstructionSyntax", "AMDGPUModifierSyntax", "AMDGPUOperandSyntax", "AMDGPUUsage", "AddingConstrainedIntrinsics", "AdvancedBuilds", "AliasAnalysis", "Atomics", "Benchmarking", "BigEndianNEON", "BitCodeFormat", "BlockFrequencyTerminology", "BranchWeightMetadata", "BugLifeCycle", "Bugpoint", "BugpointRedesign", "BuildingADistribution", "CFIVerify", "CMake", "CMakePrimer", "CodeGenerator", "CodeOfConduct", "CodeReview", "CodingStandards", "CommandGuide/FileCheck", "CommandGuide/bugpoint", "CommandGuide/clang-tblgen", "CommandGuide/dsymutil", "CommandGuide/index", "CommandGuide/lit", "CommandGuide/llc", "CommandGuide/lldb-tblgen", "CommandGuide/lli", "CommandGuide/llvm-addr2line", "CommandGuide/llvm-ar", "CommandGuide/llvm-as", "CommandGuide/llvm-bcanalyzer", "CommandGuide/llvm-config", "CommandGuide/llvm-cov", "CommandGuide/llvm-cxxfilt", "CommandGuide/llvm-cxxmap", "CommandGuide/llvm-diff", "CommandGuide/llvm-dis", "CommandGuide/llvm-dwarfdump", "CommandGuide/llvm-exegesis", "CommandGuide/llvm-extract", "CommandGuide/llvm-install-name-tool", "CommandGuide/llvm-lib", "CommandGuide/llvm-libtool-darwin", "CommandGuide/llvm-link", "CommandGuide/llvm-lipo", "CommandGuide/llvm-locstats", "CommandGuide/llvm-mca", "CommandGuide/llvm-nm", "CommandGuide/llvm-objcopy", "CommandGuide/llvm-objdump", "CommandGuide/llvm-otool", "CommandGuide/llvm-pdbutil", "CommandGuide/llvm-profdata", "CommandGuide/llvm-profgen", "CommandGuide/llvm-ranlib", "CommandGuide/llvm-readelf", "CommandGuide/llvm-readobj", "CommandGuide/llvm-size", "CommandGuide/llvm-stress", "CommandGuide/llvm-strings", "CommandGuide/llvm-strip", "CommandGuide/llvm-symbolizer", "CommandGuide/llvm-tblgen", "CommandGuide/mlir-tblgen", "CommandGuide/opt", "CommandGuide/tblgen", "CommandLine", "CompileCudaWithLLVM", "CompilerWriterInfo", "Contributing", "Coroutines", "CoverageMappingFormat", "DebuggingJITedCode", "DependenceGraphs/index", "DeveloperPolicy", "Docker", "ExceptionHandling", "ExtendingLLVM", "Extensions", "FAQ", "FaultMaps", "Frontend/PerformanceTips", "FuzzingLLVM", "GarbageCollection", "GetElementPtr", "GettingInvolved", "GettingStarted", "GettingStartedTutorials", "GettingStartedVS", "GitBisecting", "GlobalISel/GMIR", "GlobalISel/GenericOpcode", "GlobalISel/IRTranslator", "GlobalISel/InstructionSelect", "GlobalISel/KnownBits", "GlobalISel/Legalizer", "GlobalISel/Pipeline", "GlobalISel/Porting", "GlobalISel/RegBankSelect", "GlobalISel/Resources", "GlobalISel/index", "GoldPlugin", "GwpAsan", "HowToAddABuilder", "HowToBuildOnARM", "HowToBuildWindowsItaniumPrograms", "HowToBuildWithPGO", "HowToCrossCompileBuiltinsOnArm", "HowToCrossCompileLLVM", "HowToReleaseLLVM", "HowToSetUpLLVMStyleRTTI", "HowToSubmitABug", "HowToUpdateDebugInfo", "HowToUseAttributes", "HowToUseInstrMappings", "InAlloca", "JITLink", "LangRef", "Lexicon", "LibFuzzer", "LinkTimeOptimization", "LoopTerminology", "MCJITDesignAndImplementation", "MIRLangRef", "MarkdownQuickstartTemplate", "MarkedUpDisassembly", "MeetupGuidelines", "MemTagSanitizer", "MemorySSA", "MergeFunctions", "NVPTXUsage", "NewPassManager", "ORCv2", "OpaquePointers", "OptBisect", "PDB/CodeViewSymbols", "PDB/CodeViewTypes", "PDB/DbiStream", "PDB/GlobalStream", "PDB/HashTable", "PDB/ModiStream", "PDB/MsfFile", "PDB/PdbStream", "PDB/PublicStream", "PDB/TpiStream", "PDB/index", "Packaging", "Passes", "Phabricator", "ProgrammersManual", "Projects", "Proposals/GitHubMove", "Proposals/LLVMLibC", "Proposals/TestSuite", "Proposals/VariableNames", "Proposals/VectorPredication", "Proposals/VectorizationPlan", "Reference", "ReleaseNotes", "ReleaseProcess", "Remarks", "ReportingGuide", "ScudoHardenedAllocator", "Security", "SegmentedStacks", "SourceLevelDebugging", "SpeculativeLoadHardening", "SphinxQuickstartTemplate", "StackMaps", "StackSafetyAnalysis", "Statepoints", "SupportLibrary", "SupportPolicy", "SystemLibrary", "TableGen/BackEnds", "TableGen/BackGuide", "TableGen/ProgRef", "TableGen/index", "TableGenFundamentals", "TestSuiteGuide", "TestSuiteMakefileGuide", "TestingGuide", "TransformMetadata", "TypeMetadata", "UserGuides", "Vectorizers", "WritingAnLLVMBackend", "WritingAnLLVMNewPMPass", "WritingAnLLVMPass", "XRay", "XRayExample", "XRayFDRFormat", "YamlIO", "index", "tutorial/BuildingAJIT1", "tutorial/BuildingAJIT2", "tutorial/BuildingAJIT3", "tutorial/BuildingAJIT4", "tutorial/LangImpl01", "tutorial/LangImpl02", "tutorial/LangImpl03", "tutorial/LangImpl04", "tutorial/LangImpl05", "tutorial/LangImpl06", "tutorial/LangImpl07", "tutorial/LangImpl08", "tutorial/LangImpl09", "tutorial/LangImpl10", "tutorial/MyFirstLanguageFrontend/LangImpl01", "tutorial/MyFirstLanguageFrontend/LangImpl02", "tutorial/MyFirstLanguageFrontend/LangImpl03", "tutorial/MyFirstLanguageFrontend/LangImpl04", "tutorial/MyFirstLanguageFrontend/LangImpl05", "tutorial/MyFirstLanguageFrontend/LangImpl06", "tutorial/MyFirstLanguageFrontend/LangImpl07", "tutorial/MyFirstLanguageFrontend/LangImpl08", "tutorial/MyFirstLanguageFrontend/LangImpl09", "tutorial/MyFirstLanguageFrontend/LangImpl10", "tutorial/MyFirstLanguageFrontend/index", "tutorial/index", "yaml2obj"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["AMDGPU/AMDGPUAsmGFX10.rst", "AMDGPU/AMDGPUAsmGFX1011.rst", "AMDGPU/AMDGPUAsmGFX7.rst", "AMDGPU/AMDGPUAsmGFX8.rst", "AMDGPU/AMDGPUAsmGFX9.rst", "AMDGPU/AMDGPUAsmGFX900.rst", "AMDGPU/AMDGPUAsmGFX904.rst", "AMDGPU/AMDGPUAsmGFX906.rst", "AMDGPU/AMDGPUAsmGFX908.rst", "AMDGPU/AMDGPUAsmGFX90a.rst", "AMDGPU/gfx1011_src32_0.rst", "AMDGPU/gfx1011_src32_1.rst", "AMDGPU/gfx1011_src32_2.rst", "AMDGPU/gfx1011_src32_3.rst", "AMDGPU/gfx1011_type_dev.rst", "AMDGPU/gfx1011_vdst32_0.rst", "AMDGPU/gfx1011_vsrc32_0.rst", "AMDGPU/gfx10_addr_buf.rst", "AMDGPU/gfx10_addr_ds.rst", "AMDGPU/gfx10_addr_flat.rst", "AMDGPU/gfx10_addr_mimg.rst", "AMDGPU/gfx10_attr.rst", "AMDGPU/gfx10_base_smem_addr.rst", "AMDGPU/gfx10_base_smem_buf.rst", "AMDGPU/gfx10_base_smem_scratch.rst", "AMDGPU/gfx10_bimm16.rst", "AMDGPU/gfx10_bimm32.rst", "AMDGPU/gfx10_data_buf_atomic128.rst", "AMDGPU/gfx10_data_buf_atomic32.rst", "AMDGPU/gfx10_data_buf_atomic64.rst", "AMDGPU/gfx10_data_mimg_atomic_cmp.rst", "AMDGPU/gfx10_data_mimg_atomic_reg.rst", "AMDGPU/gfx10_data_mimg_store.rst", "AMDGPU/gfx10_data_mimg_store_d16.rst", "AMDGPU/gfx10_data_smem_atomic128.rst", "AMDGPU/gfx10_data_smem_atomic32.rst", "AMDGPU/gfx10_data_smem_atomic64.rst", "AMDGPU/gfx10_dst_buf_128.rst", "AMDGPU/gfx10_dst_buf_32.rst", "AMDGPU/gfx10_dst_buf_64.rst", "AMDGPU/gfx10_dst_buf_96.rst", "AMDGPU/gfx10_dst_buf_lds.rst", "AMDGPU/gfx10_dst_flat_atomic32.rst", "AMDGPU/gfx10_dst_flat_atomic64.rst", "AMDGPU/gfx10_dst_mimg_gather4.rst", "AMDGPU/gfx10_dst_mimg_regular.rst", "AMDGPU/gfx10_dst_mimg_regular_d16.rst", "AMDGPU/gfx10_fimm16.rst", "AMDGPU/gfx10_fimm32.rst", "AMDGPU/gfx10_hwreg.rst", "AMDGPU/gfx10_label.rst", "AMDGPU/gfx10_mad_type_dev.rst", "AMDGPU/gfx10_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx10_mod_sdwa_sext.rst", "AMDGPU/gfx10_mod_vop3_abs_neg.rst", "AMDGPU/gfx10_msg.rst", "AMDGPU/gfx10_offset_buf.rst", "AMDGPU/gfx10_offset_smem_buf.rst", "AMDGPU/gfx10_offset_smem_plain.rst", "AMDGPU/gfx10_opt.rst", "AMDGPU/gfx10_param.rst", "AMDGPU/gfx10_perm_smem.rst", "AMDGPU/gfx10_ret.rst", "AMDGPU/gfx10_rsrc_buf.rst", "AMDGPU/gfx10_rsrc_mimg.rst", "AMDGPU/gfx10_saddr_flat_global.rst", "AMDGPU/gfx10_saddr_flat_scratch.rst", "AMDGPU/gfx10_samp_mimg.rst", "AMDGPU/gfx10_sdata128_0.rst", "AMDGPU/gfx10_sdata32_0.rst", "AMDGPU/gfx10_sdata64_0.rst", "AMDGPU/gfx10_sdst128_0.rst", "AMDGPU/gfx10_sdst256_0.rst", "AMDGPU/gfx10_sdst32_0.rst", "AMDGPU/gfx10_sdst32_1.rst", "AMDGPU/gfx10_sdst32_2.rst", "AMDGPU/gfx10_sdst512_0.rst", "AMDGPU/gfx10_sdst64_0.rst", "AMDGPU/gfx10_sdst64_1.rst", "AMDGPU/gfx10_simm16.rst", "AMDGPU/gfx10_src32_0.rst", "AMDGPU/gfx10_src32_1.rst", "AMDGPU/gfx10_src32_2.rst", "AMDGPU/gfx10_src32_3.rst", "AMDGPU/gfx10_src32_4.rst", "AMDGPU/gfx10_src32_5.rst", "AMDGPU/gfx10_src32_6.rst", "AMDGPU/gfx10_src64_0.rst", "AMDGPU/gfx10_src_exp.rst", "AMDGPU/gfx10_ssrc32_0.rst", "AMDGPU/gfx10_ssrc32_1.rst", "AMDGPU/gfx10_ssrc32_2.rst", "AMDGPU/gfx10_ssrc32_3.rst", "AMDGPU/gfx10_ssrc32_4.rst", "AMDGPU/gfx10_ssrc32_5.rst", "AMDGPU/gfx10_ssrc64_0.rst", "AMDGPU/gfx10_ssrc64_1.rst", "AMDGPU/gfx10_tgt.rst", "AMDGPU/gfx10_type_dev.rst", "AMDGPU/gfx10_uimm16.rst", "AMDGPU/gfx10_vaddr_flat_global.rst", "AMDGPU/gfx10_vaddr_flat_scratch.rst", "AMDGPU/gfx10_vcc_32.rst", "AMDGPU/gfx10_vdata128_0.rst", "AMDGPU/gfx10_vdata32_0.rst", "AMDGPU/gfx10_vdata64_0.rst", "AMDGPU/gfx10_vdata96_0.rst", "AMDGPU/gfx10_vdst128_0.rst", "AMDGPU/gfx10_vdst32_0.rst", "AMDGPU/gfx10_vdst64_0.rst", "AMDGPU/gfx10_vdst96_0.rst", "AMDGPU/gfx10_vsrc128_0.rst", "AMDGPU/gfx10_vsrc32_0.rst", "AMDGPU/gfx10_vsrc32_1.rst", "AMDGPU/gfx10_vsrc64_0.rst", "AMDGPU/gfx10_waitcnt.rst", "AMDGPU/gfx10_wsdst.rst", "AMDGPU/gfx10_wssrc.rst", "AMDGPU/gfx7_addr_buf.rst", "AMDGPU/gfx7_addr_ds.rst", "AMDGPU/gfx7_addr_flat.rst", "AMDGPU/gfx7_addr_mimg.rst", "AMDGPU/gfx7_attr.rst", "AMDGPU/gfx7_base_smem_addr.rst", "AMDGPU/gfx7_base_smem_buf.rst", "AMDGPU/gfx7_bimm16.rst", "AMDGPU/gfx7_bimm32.rst", "AMDGPU/gfx7_data_buf_atomic128.rst", "AMDGPU/gfx7_data_buf_atomic32.rst", "AMDGPU/gfx7_data_buf_atomic64.rst", "AMDGPU/gfx7_data_mimg_atomic_cmp.rst", "AMDGPU/gfx7_data_mimg_atomic_reg.rst", "AMDGPU/gfx7_data_mimg_store.rst", "AMDGPU/gfx7_dst_buf_128.rst", "AMDGPU/gfx7_dst_buf_32.rst", "AMDGPU/gfx7_dst_buf_64.rst", "AMDGPU/gfx7_dst_buf_96.rst", "AMDGPU/gfx7_dst_buf_lds.rst", "AMDGPU/gfx7_dst_flat_atomic32.rst", "AMDGPU/gfx7_dst_flat_atomic64.rst", "AMDGPU/gfx7_dst_mimg_gather4.rst", "AMDGPU/gfx7_dst_mimg_regular.rst", "AMDGPU/gfx7_fimm32.rst", "AMDGPU/gfx7_hwreg.rst", "AMDGPU/gfx7_label.rst", "AMDGPU/gfx7_mod.rst", "AMDGPU/gfx7_msg.rst", "AMDGPU/gfx7_offset_buf.rst", "AMDGPU/gfx7_offset_smem.rst", "AMDGPU/gfx7_opt.rst", "AMDGPU/gfx7_param.rst", "AMDGPU/gfx7_ret.rst", "AMDGPU/gfx7_rsrc_buf.rst", "AMDGPU/gfx7_rsrc_mimg.rst", "AMDGPU/gfx7_samp_mimg.rst", "AMDGPU/gfx7_sdst128_0.rst", "AMDGPU/gfx7_sdst256_0.rst", "AMDGPU/gfx7_sdst32_0.rst", "AMDGPU/gfx7_sdst32_1.rst", "AMDGPU/gfx7_sdst32_2.rst", "AMDGPU/gfx7_sdst512_0.rst", "AMDGPU/gfx7_sdst64_0.rst", "AMDGPU/gfx7_sdst64_1.rst", "AMDGPU/gfx7_simm16.rst", "AMDGPU/gfx7_src32_0.rst", "AMDGPU/gfx7_src32_1.rst", "AMDGPU/gfx7_src32_2.rst", "AMDGPU/gfx7_src32_3.rst", "AMDGPU/gfx7_src32_4.rst", "AMDGPU/gfx7_src32_5.rst", "AMDGPU/gfx7_src32_6.rst", "AMDGPU/gfx7_src64_0.rst", "AMDGPU/gfx7_src64_1.rst", "AMDGPU/gfx7_src64_2.rst", "AMDGPU/gfx7_src_exp.rst", "AMDGPU/gfx7_ssrc32_0.rst", "AMDGPU/gfx7_ssrc32_1.rst", "AMDGPU/gfx7_ssrc32_2.rst", "AMDGPU/gfx7_ssrc32_3.rst", "AMDGPU/gfx7_ssrc32_4.rst", "AMDGPU/gfx7_ssrc32_5.rst", "AMDGPU/gfx7_ssrc32_6.rst", "AMDGPU/gfx7_ssrc64_0.rst", "AMDGPU/gfx7_ssrc64_1.rst", "AMDGPU/gfx7_ssrc64_2.rst", "AMDGPU/gfx7_ssrc64_3.rst", "AMDGPU/gfx7_tgt.rst", "AMDGPU/gfx7_type_dev.rst", "AMDGPU/gfx7_uimm16.rst", "AMDGPU/gfx7_vcc_64.rst", "AMDGPU/gfx7_vdata128_0.rst", "AMDGPU/gfx7_vdata32_0.rst", "AMDGPU/gfx7_vdata64_0.rst", "AMDGPU/gfx7_vdata96_0.rst", "AMDGPU/gfx7_vdst128_0.rst", "AMDGPU/gfx7_vdst32_0.rst", "AMDGPU/gfx7_vdst64_0.rst", "AMDGPU/gfx7_vdst96_0.rst", "AMDGPU/gfx7_vsrc128_0.rst", "AMDGPU/gfx7_vsrc32_0.rst", "AMDGPU/gfx7_vsrc32_1.rst", "AMDGPU/gfx7_vsrc64_0.rst", "AMDGPU/gfx7_waitcnt.rst", "AMDGPU/gfx8_addr_buf.rst", "AMDGPU/gfx8_addr_ds.rst", "AMDGPU/gfx8_addr_flat.rst", "AMDGPU/gfx8_addr_mimg.rst", "AMDGPU/gfx8_attr.rst", "AMDGPU/gfx8_base_smem_addr.rst", "AMDGPU/gfx8_base_smem_buf.rst", "AMDGPU/gfx8_bimm16.rst", "AMDGPU/gfx8_bimm32.rst", "AMDGPU/gfx8_data_buf_atomic128.rst", "AMDGPU/gfx8_data_buf_atomic32.rst", "AMDGPU/gfx8_data_buf_atomic64.rst", "AMDGPU/gfx8_data_buf_d16_128.rst", "AMDGPU/gfx8_data_buf_d16_32.rst", "AMDGPU/gfx8_data_buf_d16_64.rst", "AMDGPU/gfx8_data_buf_d16_96.rst", "AMDGPU/gfx8_data_mimg_atomic_cmp.rst", "AMDGPU/gfx8_data_mimg_atomic_reg.rst", "AMDGPU/gfx8_data_mimg_store.rst", "AMDGPU/gfx8_data_mimg_store_d16.rst", "AMDGPU/gfx8_dst_buf_128.rst", "AMDGPU/gfx8_dst_buf_32.rst", "AMDGPU/gfx8_dst_buf_64.rst", "AMDGPU/gfx8_dst_buf_96.rst", "AMDGPU/gfx8_dst_buf_d16_128.rst", "AMDGPU/gfx8_dst_buf_d16_32.rst", "AMDGPU/gfx8_dst_buf_d16_64.rst", "AMDGPU/gfx8_dst_buf_d16_96.rst", "AMDGPU/gfx8_dst_buf_lds.rst", "AMDGPU/gfx8_dst_flat_atomic32.rst", "AMDGPU/gfx8_dst_flat_atomic64.rst", "AMDGPU/gfx8_dst_mimg_gather4.rst", "AMDGPU/gfx8_dst_mimg_regular.rst", "AMDGPU/gfx8_dst_mimg_regular_d16.rst", "AMDGPU/gfx8_fimm16.rst", "AMDGPU/gfx8_fimm32.rst", "AMDGPU/gfx8_hwreg.rst", "AMDGPU/gfx8_imask.rst", "AMDGPU/gfx8_label.rst", "AMDGPU/gfx8_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx8_mod_sdwa_sext.rst", "AMDGPU/gfx8_mod_vop3_abs_neg.rst", "AMDGPU/gfx8_msg.rst", "AMDGPU/gfx8_offset_buf.rst", "AMDGPU/gfx8_offset_smem_load.rst", "AMDGPU/gfx8_offset_smem_store.rst", "AMDGPU/gfx8_opt.rst", "AMDGPU/gfx8_param.rst", "AMDGPU/gfx8_perm_smem.rst", "AMDGPU/gfx8_ret.rst", "AMDGPU/gfx8_rsrc_buf.rst", "AMDGPU/gfx8_rsrc_mimg.rst", "AMDGPU/gfx8_samp_mimg.rst", "AMDGPU/gfx8_sdata128_0.rst", "AMDGPU/gfx8_sdata32_0.rst", "AMDGPU/gfx8_sdata64_0.rst", "AMDGPU/gfx8_sdst128_0.rst", "AMDGPU/gfx8_sdst256_0.rst", "AMDGPU/gfx8_sdst32_0.rst", "AMDGPU/gfx8_sdst32_1.rst", "AMDGPU/gfx8_sdst32_2.rst", "AMDGPU/gfx8_sdst512_0.rst", "AMDGPU/gfx8_sdst64_0.rst", "AMDGPU/gfx8_sdst64_1.rst", "AMDGPU/gfx8_simm16.rst", "AMDGPU/gfx8_src32_0.rst", "AMDGPU/gfx8_src32_1.rst", "AMDGPU/gfx8_src32_2.rst", "AMDGPU/gfx8_src32_3.rst", "AMDGPU/gfx8_src32_4.rst", "AMDGPU/gfx8_src32_5.rst", "AMDGPU/gfx8_src32_6.rst", "AMDGPU/gfx8_src32_7.rst", "AMDGPU/gfx8_src64_0.rst", "AMDGPU/gfx8_src64_1.rst", "AMDGPU/gfx8_src_exp.rst", "AMDGPU/gfx8_ssrc32_0.rst", "AMDGPU/gfx8_ssrc32_1.rst", "AMDGPU/gfx8_ssrc32_2.rst", "AMDGPU/gfx8_ssrc32_3.rst", "AMDGPU/gfx8_ssrc32_4.rst", "AMDGPU/gfx8_ssrc64_0.rst", "AMDGPU/gfx8_ssrc64_1.rst", "AMDGPU/gfx8_ssrc64_2.rst", "AMDGPU/gfx8_ssrc64_3.rst", "AMDGPU/gfx8_tgt.rst", "AMDGPU/gfx8_type_dev.rst", "AMDGPU/gfx8_uimm16.rst", "AMDGPU/gfx8_vcc_64.rst", "AMDGPU/gfx8_vdata128_0.rst", "AMDGPU/gfx8_vdata32_0.rst", "AMDGPU/gfx8_vdata64_0.rst", "AMDGPU/gfx8_vdata96_0.rst", "AMDGPU/gfx8_vdst128_0.rst", "AMDGPU/gfx8_vdst32_0.rst", "AMDGPU/gfx8_vdst64_0.rst", "AMDGPU/gfx8_vdst96_0.rst", "AMDGPU/gfx8_vsrc128_0.rst", "AMDGPU/gfx8_vsrc32_0.rst", "AMDGPU/gfx8_vsrc32_1.rst", "AMDGPU/gfx8_vsrc64_0.rst", "AMDGPU/gfx8_waitcnt.rst", "AMDGPU/gfx900_mad_type_dev.rst", "AMDGPU/gfx900_mod_vop3_abs_neg.rst", "AMDGPU/gfx900_src32_0.rst", "AMDGPU/gfx900_src32_1.rst", "AMDGPU/gfx900_vdst32_0.rst", "AMDGPU/gfx904_mad_type_dev.rst", "AMDGPU/gfx904_mod_vop3_abs_neg.rst", "AMDGPU/gfx904_src32_0.rst", "AMDGPU/gfx904_src32_1.rst", "AMDGPU/gfx904_vdst32_0.rst", "AMDGPU/gfx906_mad_type_dev.rst", "AMDGPU/gfx906_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx906_mod_sdwa_sext.rst", "AMDGPU/gfx906_mod_vop3_abs_neg.rst", "AMDGPU/gfx906_src32_0.rst", "AMDGPU/gfx906_src32_1.rst", "AMDGPU/gfx906_src32_2.rst", "AMDGPU/gfx906_src32_3.rst", "AMDGPU/gfx906_src32_4.rst", "AMDGPU/gfx906_type_dev.rst", "AMDGPU/gfx906_vdst32_0.rst", "AMDGPU/gfx906_vsrc32_0.rst", "AMDGPU/gfx908_addr_buf.rst", "AMDGPU/gfx908_adst1024_0.rst", "AMDGPU/gfx908_adst128_0.rst", "AMDGPU/gfx908_adst32_0.rst", "AMDGPU/gfx908_adst512_0.rst", "AMDGPU/gfx908_asrc1024_0.rst", "AMDGPU/gfx908_asrc128_0.rst", "AMDGPU/gfx908_asrc32_0.rst", "AMDGPU/gfx908_asrc512_0.rst", "AMDGPU/gfx908_data_buf_atomic32.rst", "AMDGPU/gfx908_dst_flat_atomic32.rst", "AMDGPU/gfx908_mad_type_dev.rst", "AMDGPU/gfx908_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx908_mod_sdwa_sext.rst", "AMDGPU/gfx908_mod_vop3_abs_neg.rst", "AMDGPU/gfx908_offset_buf.rst", "AMDGPU/gfx908_opt.rst", "AMDGPU/gfx908_ret.rst", "AMDGPU/gfx908_rsrc_buf.rst", "AMDGPU/gfx908_saddr_flat_global.rst", "AMDGPU/gfx908_src32_0.rst", "AMDGPU/gfx908_src32_1.rst", "AMDGPU/gfx908_src32_2.rst", "AMDGPU/gfx908_src32_3.rst", "AMDGPU/gfx908_src32_4.rst", "AMDGPU/gfx908_src32_5.rst", "AMDGPU/gfx908_type_dev.rst", "AMDGPU/gfx908_vaddr_flat_global.rst", "AMDGPU/gfx908_vasrc32_0.rst", "AMDGPU/gfx908_vasrc64_0.rst", "AMDGPU/gfx908_vdata32_0.rst", "AMDGPU/gfx908_vdst32_0.rst", "AMDGPU/gfx908_vsrc32_0.rst", "AMDGPU/gfx90a_dst.rst", "AMDGPU/gfx90a_fx_operand.rst", "AMDGPU/gfx90a_hwreg.rst", "AMDGPU/gfx90a_imask.rst", "AMDGPU/gfx90a_imm16.rst", "AMDGPU/gfx90a_imm16_1.rst", "AMDGPU/gfx90a_imm16_2.rst", "AMDGPU/gfx90a_label.rst", "AMDGPU/gfx90a_m.rst", "AMDGPU/gfx90a_m_1.rst", "AMDGPU/gfx90a_msg.rst", "AMDGPU/gfx90a_opt.rst", "AMDGPU/gfx90a_probe.rst", "AMDGPU/gfx90a_saddr.rst", "AMDGPU/gfx90a_saddr_1.rst", "AMDGPU/gfx90a_sbase.rst", "AMDGPU/gfx90a_sbase_1.rst", "AMDGPU/gfx90a_sbase_2.rst", "AMDGPU/gfx90a_sdata.rst", "AMDGPU/gfx90a_sdata_1.rst", "AMDGPU/gfx90a_sdata_2.rst", "AMDGPU/gfx90a_sdata_3.rst", "AMDGPU/gfx90a_sdata_4.rst", "AMDGPU/gfx90a_sdata_5.rst", "AMDGPU/gfx90a_sdst.rst", "AMDGPU/gfx90a_sdst_1.rst", "AMDGPU/gfx90a_sdst_2.rst", "AMDGPU/gfx90a_sdst_3.rst", "AMDGPU/gfx90a_sdst_4.rst", "AMDGPU/gfx90a_sdst_5.rst", "AMDGPU/gfx90a_sdst_6.rst", "AMDGPU/gfx90a_sdst_7.rst", "AMDGPU/gfx90a_simm32.rst", "AMDGPU/gfx90a_simm32_1.rst", "AMDGPU/gfx90a_simm32_2.rst", "AMDGPU/gfx90a_soffset.rst", "AMDGPU/gfx90a_soffset_1.rst", "AMDGPU/gfx90a_soffset_2.rst", "AMDGPU/gfx90a_src.rst", "AMDGPU/gfx90a_src_1.rst", "AMDGPU/gfx90a_src_10.rst", "AMDGPU/gfx90a_src_11.rst", "AMDGPU/gfx90a_src_2.rst", "AMDGPU/gfx90a_src_3.rst", "AMDGPU/gfx90a_src_4.rst", "AMDGPU/gfx90a_src_5.rst", "AMDGPU/gfx90a_src_6.rst", "AMDGPU/gfx90a_src_7.rst", "AMDGPU/gfx90a_src_8.rst", "AMDGPU/gfx90a_src_9.rst", "AMDGPU/gfx90a_srsrc.rst", "AMDGPU/gfx90a_srsrc_1.rst", "AMDGPU/gfx90a_ssamp.rst", "AMDGPU/gfx90a_ssrc.rst", "AMDGPU/gfx90a_ssrc_1.rst", "AMDGPU/gfx90a_ssrc_2.rst", "AMDGPU/gfx90a_ssrc_3.rst", "AMDGPU/gfx90a_ssrc_4.rst", "AMDGPU/gfx90a_ssrc_5.rst", "AMDGPU/gfx90a_ssrc_6.rst", "AMDGPU/gfx90a_ssrc_7.rst", "AMDGPU/gfx90a_ssrc_8.rst", "AMDGPU/gfx90a_type_deviation.rst", "AMDGPU/gfx90a_vaddr.rst", "AMDGPU/gfx90a_vaddr_1.rst", "AMDGPU/gfx90a_vaddr_2.rst", "AMDGPU/gfx90a_vaddr_3.rst", "AMDGPU/gfx90a_vaddr_4.rst", "AMDGPU/gfx90a_vaddr_5.rst", "AMDGPU/gfx90a_vcc.rst", "AMDGPU/gfx90a_vdata.rst", "AMDGPU/gfx90a_vdata0.rst", "AMDGPU/gfx90a_vdata0_1.rst", "AMDGPU/gfx90a_vdata1.rst", "AMDGPU/gfx90a_vdata1_1.rst", "AMDGPU/gfx90a_vdata_1.rst", "AMDGPU/gfx90a_vdata_10.rst", "AMDGPU/gfx90a_vdata_2.rst", "AMDGPU/gfx90a_vdata_3.rst", "AMDGPU/gfx90a_vdata_4.rst", "AMDGPU/gfx90a_vdata_5.rst", "AMDGPU/gfx90a_vdata_6.rst", "AMDGPU/gfx90a_vdata_7.rst", "AMDGPU/gfx90a_vdata_8.rst", "AMDGPU/gfx90a_vdata_9.rst", "AMDGPU/gfx90a_vdst.rst", "AMDGPU/gfx90a_vdst_1.rst", "AMDGPU/gfx90a_vdst_10.rst", "AMDGPU/gfx90a_vdst_11.rst", "AMDGPU/gfx90a_vdst_12.rst", "AMDGPU/gfx90a_vdst_13.rst", "AMDGPU/gfx90a_vdst_14.rst", "AMDGPU/gfx90a_vdst_15.rst", "AMDGPU/gfx90a_vdst_16.rst", "AMDGPU/gfx90a_vdst_17.rst", "AMDGPU/gfx90a_vdst_18.rst", "AMDGPU/gfx90a_vdst_19.rst", "AMDGPU/gfx90a_vdst_2.rst", "AMDGPU/gfx90a_vdst_3.rst", "AMDGPU/gfx90a_vdst_4.rst", "AMDGPU/gfx90a_vdst_5.rst", "AMDGPU/gfx90a_vdst_6.rst", "AMDGPU/gfx90a_vdst_7.rst", "AMDGPU/gfx90a_vdst_8.rst", "AMDGPU/gfx90a_vdst_9.rst", "AMDGPU/gfx90a_vsrc.rst", "AMDGPU/gfx90a_vsrc_1.rst", "AMDGPU/gfx90a_vsrc_2.rst", "AMDGPU/gfx90a_vsrc_3.rst", "AMDGPU/gfx90a_vsrc_4.rst", "AMDGPU/gfx90a_vsrc_5.rst", "AMDGPU/gfx90a_waitcnt.rst", "AMDGPU/gfx9_attr.rst", "AMDGPU/gfx9_dst.rst", "AMDGPU/gfx9_hwreg.rst", "AMDGPU/gfx9_imask.rst", "AMDGPU/gfx9_imm16.rst", "AMDGPU/gfx9_imm16_1.rst", "AMDGPU/gfx9_imm16_2.rst", "AMDGPU/gfx9_label.rst", "AMDGPU/gfx9_m.rst", "AMDGPU/gfx9_m_1.rst", "AMDGPU/gfx9_msg.rst", "AMDGPU/gfx9_opt.rst", "AMDGPU/gfx9_param.rst", "AMDGPU/gfx9_probe.rst", "AMDGPU/gfx9_saddr.rst", "AMDGPU/gfx9_saddr_1.rst", "AMDGPU/gfx9_sbase.rst", "AMDGPU/gfx9_sbase_1.rst", "AMDGPU/gfx9_sbase_2.rst", "AMDGPU/gfx9_sdata.rst", "AMDGPU/gfx9_sdata_1.rst", "AMDGPU/gfx9_sdata_2.rst", "AMDGPU/gfx9_sdata_3.rst", "AMDGPU/gfx9_sdata_4.rst", "AMDGPU/gfx9_sdata_5.rst", "AMDGPU/gfx9_sdst.rst", "AMDGPU/gfx9_sdst_1.rst", "AMDGPU/gfx9_sdst_2.rst", "AMDGPU/gfx9_sdst_3.rst", "AMDGPU/gfx9_sdst_4.rst", "AMDGPU/gfx9_sdst_5.rst", "AMDGPU/gfx9_sdst_6.rst", "AMDGPU/gfx9_sdst_7.rst", "AMDGPU/gfx9_simm32.rst", "AMDGPU/gfx9_simm32_1.rst", "AMDGPU/gfx9_simm32_2.rst", "AMDGPU/gfx9_soffset.rst", "AMDGPU/gfx9_soffset_1.rst", "AMDGPU/gfx9_soffset_2.rst", "AMDGPU/gfx9_src.rst", "AMDGPU/gfx9_src_1.rst", "AMDGPU/gfx9_src_10.rst", "AMDGPU/gfx9_src_2.rst", "AMDGPU/gfx9_src_3.rst", "AMDGPU/gfx9_src_4.rst", "AMDGPU/gfx9_src_5.rst", "AMDGPU/gfx9_src_6.rst", "AMDGPU/gfx9_src_7.rst", "AMDGPU/gfx9_src_8.rst", "AMDGPU/gfx9_src_9.rst", "AMDGPU/gfx9_srsrc.rst", "AMDGPU/gfx9_srsrc_1.rst", "AMDGPU/gfx9_ssamp.rst", "AMDGPU/gfx9_ssrc.rst", "AMDGPU/gfx9_ssrc_1.rst", "AMDGPU/gfx9_ssrc_2.rst", "AMDGPU/gfx9_ssrc_3.rst", "AMDGPU/gfx9_ssrc_4.rst", "AMDGPU/gfx9_ssrc_5.rst", "AMDGPU/gfx9_ssrc_6.rst", "AMDGPU/gfx9_ssrc_7.rst", "AMDGPU/gfx9_ssrc_8.rst", "AMDGPU/gfx9_tgt.rst", "AMDGPU/gfx9_type_deviation.rst", "AMDGPU/gfx9_vaddr.rst", "AMDGPU/gfx9_vaddr_1.rst", "AMDGPU/gfx9_vaddr_2.rst", "AMDGPU/gfx9_vaddr_3.rst", "AMDGPU/gfx9_vaddr_4.rst", "AMDGPU/gfx9_vaddr_5.rst", "AMDGPU/gfx9_vcc.rst", "AMDGPU/gfx9_vdata.rst", "AMDGPU/gfx9_vdata0.rst", "AMDGPU/gfx9_vdata0_1.rst", "AMDGPU/gfx9_vdata1.rst", "AMDGPU/gfx9_vdata1_1.rst", "AMDGPU/gfx9_vdata_1.rst", "AMDGPU/gfx9_vdata_10.rst", "AMDGPU/gfx9_vdata_2.rst", "AMDGPU/gfx9_vdata_3.rst", "AMDGPU/gfx9_vdata_4.rst", "AMDGPU/gfx9_vdata_5.rst", "AMDGPU/gfx9_vdata_6.rst", "AMDGPU/gfx9_vdata_7.rst", "AMDGPU/gfx9_vdata_8.rst", "AMDGPU/gfx9_vdata_9.rst", "AMDGPU/gfx9_vdst.rst", "AMDGPU/gfx9_vdst_1.rst", "AMDGPU/gfx9_vdst_10.rst", "AMDGPU/gfx9_vdst_11.rst", "AMDGPU/gfx9_vdst_12.rst", "AMDGPU/gfx9_vdst_13.rst", "AMDGPU/gfx9_vdst_2.rst", "AMDGPU/gfx9_vdst_3.rst", "AMDGPU/gfx9_vdst_4.rst", "AMDGPU/gfx9_vdst_5.rst", "AMDGPU/gfx9_vdst_6.rst", "AMDGPU/gfx9_vdst_7.rst", "AMDGPU/gfx9_vdst_8.rst", "AMDGPU/gfx9_vdst_9.rst", "AMDGPU/gfx9_vsrc.rst", "AMDGPU/gfx9_vsrc_1.rst", "AMDGPU/gfx9_vsrc_2.rst", "AMDGPU/gfx9_vsrc_3.rst", "AMDGPU/gfx9_waitcnt.rst", "AMDGPUDwarfExtensionsForHeterogeneousDebugging.rst", "AMDGPUInstructionNotation.rst", "AMDGPUInstructionSyntax.rst", "AMDGPUModifierSyntax.rst", "AMDGPUOperandSyntax.rst", "AMDGPUUsage.rst", "AddingConstrainedIntrinsics.rst", "AdvancedBuilds.rst", "AliasAnalysis.rst", "Atomics.rst", "Benchmarking.rst", "BigEndianNEON.rst", "BitCodeFormat.rst", "BlockFrequencyTerminology.rst", "BranchWeightMetadata.rst", "BugLifeCycle.rst", "Bugpoint.rst", "BugpointRedesign.md", "BuildingADistribution.rst", "CFIVerify.rst", "CMake.rst", "CMakePrimer.rst", "CodeGenerator.rst", "CodeOfConduct.rst", "CodeReview.rst", "CodingStandards.rst", "CommandGuide/FileCheck.rst", "CommandGuide/bugpoint.rst", "CommandGuide/clang-tblgen.rst", "CommandGuide/dsymutil.rst", "CommandGuide/index.rst", "CommandGuide/lit.rst", "CommandGuide/llc.rst", "CommandGuide/lldb-tblgen.rst", "CommandGuide/lli.rst", "CommandGuide/llvm-addr2line.rst", "CommandGuide/llvm-ar.rst", "CommandGuide/llvm-as.rst", "CommandGuide/llvm-bcanalyzer.rst", "CommandGuide/llvm-config.rst", "CommandGuide/llvm-cov.rst", "CommandGuide/llvm-cxxfilt.rst", "CommandGuide/llvm-cxxmap.rst", "CommandGuide/llvm-diff.rst", "CommandGuide/llvm-dis.rst", "CommandGuide/llvm-dwarfdump.rst", "CommandGuide/llvm-exegesis.rst", "CommandGuide/llvm-extract.rst", "CommandGuide/llvm-install-name-tool.rst", "CommandGuide/llvm-lib.rst", "CommandGuide/llvm-libtool-darwin.rst", "CommandGuide/llvm-link.rst", "CommandGuide/llvm-lipo.rst", "CommandGuide/llvm-locstats.rst", "CommandGuide/llvm-mca.rst", "CommandGuide/llvm-nm.rst", "CommandGuide/llvm-objcopy.rst", "CommandGuide/llvm-objdump.rst", "CommandGuide/llvm-otool.rst", "CommandGuide/llvm-pdbutil.rst", "CommandGuide/llvm-profdata.rst", "CommandGuide/llvm-profgen.rst", "CommandGuide/llvm-ranlib.rst", "CommandGuide/llvm-readelf.rst", "CommandGuide/llvm-readobj.rst", "CommandGuide/llvm-size.rst", "CommandGuide/llvm-stress.rst", "CommandGuide/llvm-strings.rst", "CommandGuide/llvm-strip.rst", "CommandGuide/llvm-symbolizer.rst", "CommandGuide/llvm-tblgen.rst", "CommandGuide/mlir-tblgen.rst", "CommandGuide/opt.rst", "CommandGuide/tblgen.rst", "CommandLine.rst", "CompileCudaWithLLVM.rst", "CompilerWriterInfo.rst", "Contributing.rst", "Coroutines.rst", "CoverageMappingFormat.rst", "DebuggingJITedCode.rst", "DependenceGraphs/index.rst", "DeveloperPolicy.rst", "Docker.rst", "ExceptionHandling.rst", "ExtendingLLVM.rst", "Extensions.rst", "FAQ.rst", "FaultMaps.rst", "Frontend/PerformanceTips.rst", "FuzzingLLVM.rst", "GarbageCollection.rst", "GetElementPtr.rst", "GettingInvolved.rst", "GettingStarted.rst", "GettingStartedTutorials.rst", "GettingStartedVS.rst", "GitBisecting.rst", "GlobalISel/GMIR.rst", "GlobalISel/GenericOpcode.rst", "GlobalISel/IRTranslator.rst", "GlobalISel/InstructionSelect.rst", "GlobalISel/KnownBits.rst", "GlobalISel/Legalizer.rst", "GlobalISel/Pipeline.rst", "GlobalISel/Porting.rst", "GlobalISel/RegBankSelect.rst", "GlobalISel/Resources.rst", "GlobalISel/index.rst", "GoldPlugin.rst", "GwpAsan.rst", "HowToAddABuilder.rst", "HowToBuildOnARM.rst", "HowToBuildWindowsItaniumPrograms.rst", "HowToBuildWithPGO.rst", "HowToCrossCompileBuiltinsOnArm.rst", "HowToCrossCompileLLVM.rst", "HowToReleaseLLVM.rst", "HowToSetUpLLVMStyleRTTI.rst", "HowToSubmitABug.rst", "HowToUpdateDebugInfo.rst", "HowToUseAttributes.rst", "HowToUseInstrMappings.rst", "InAlloca.rst", "JITLink.rst", "LangRef.rst", "Lexicon.rst", "LibFuzzer.rst", "LinkTimeOptimization.rst", "LoopTerminology.rst", "MCJITDesignAndImplementation.rst", "MIRLangRef.rst", "MarkdownQuickstartTemplate.md", "MarkedUpDisassembly.rst", "MeetupGuidelines.rst", "MemTagSanitizer.rst", "MemorySSA.rst", "MergeFunctions.rst", "NVPTXUsage.rst", "NewPassManager.rst", "ORCv2.rst", "OpaquePointers.rst", "OptBisect.rst", "PDB/CodeViewSymbols.rst", "PDB/CodeViewTypes.rst", "PDB/DbiStream.rst", "PDB/GlobalStream.rst", "PDB/HashTable.rst", "PDB/ModiStream.rst", "PDB/MsfFile.rst", "PDB/PdbStream.rst", "PDB/PublicStream.rst", "PDB/TpiStream.rst", "PDB/index.rst", "Packaging.rst", "Passes.rst", "Phabricator.rst", "ProgrammersManual.rst", "Projects.rst", "Proposals/GitHubMove.rst", "Proposals/LLVMLibC.rst", "Proposals/TestSuite.rst", "Proposals/VariableNames.rst", "Proposals/VectorPredication.rst", "Proposals/VectorizationPlan.rst", "Reference.rst", "ReleaseNotes.rst", "ReleaseProcess.rst", "Remarks.rst", "ReportingGuide.rst", "ScudoHardenedAllocator.rst", "Security.rst", "SegmentedStacks.rst", "SourceLevelDebugging.rst", "SpeculativeLoadHardening.md", "SphinxQuickstartTemplate.rst", "StackMaps.rst", "StackSafetyAnalysis.rst", "Statepoints.rst", "SupportLibrary.rst", "SupportPolicy.rst", "SystemLibrary.rst", "TableGen/BackEnds.rst", "TableGen/BackGuide.rst", "TableGen/ProgRef.rst", "TableGen/index.rst", "TableGenFundamentals.rst", "TestSuiteGuide.md", "TestSuiteMakefileGuide.rst", "TestingGuide.rst", "TransformMetadata.rst", "TypeMetadata.rst", "UserGuides.rst", "Vectorizers.rst", "WritingAnLLVMBackend.rst", "WritingAnLLVMNewPMPass.rst", "WritingAnLLVMPass.rst", "XRay.rst", "XRayExample.rst", "XRayFDRFormat.rst", "YamlIO.rst", "index.rst", "tutorial/BuildingAJIT1.rst", "tutorial/BuildingAJIT2.rst", "tutorial/BuildingAJIT3.rst", "tutorial/BuildingAJIT4.rst", "tutorial/LangImpl01.rst", "tutorial/LangImpl02.rst", "tutorial/LangImpl03.rst", "tutorial/LangImpl04.rst", "tutorial/LangImpl05.rst", "tutorial/LangImpl06.rst", "tutorial/LangImpl07.rst", "tutorial/LangImpl08.rst", "tutorial/LangImpl09.rst", "tutorial/LangImpl10.rst", "tutorial/MyFirstLanguageFrontend/LangImpl01.rst", "tutorial/MyFirstLanguageFrontend/LangImpl02.rst", "tutorial/MyFirstLanguageFrontend/LangImpl03.rst", "tutorial/MyFirstLanguageFrontend/LangImpl04.rst", "tutorial/MyFirstLanguageFrontend/LangImpl05.rst", "tutorial/MyFirstLanguageFrontend/LangImpl06.rst", "tutorial/MyFirstLanguageFrontend/LangImpl07.rst", "tutorial/MyFirstLanguageFrontend/LangImpl08.rst", "tutorial/MyFirstLanguageFrontend/LangImpl09.rst", "tutorial/MyFirstLanguageFrontend/LangImpl10.rst", "tutorial/MyFirstLanguageFrontend/index.rst", "tutorial/index.rst", "yaml2obj.rst"], "indexentries": {"--accelerator": [[606, "cmdoption-dsymutil-accelerator", false]], "--add-dyldinfo": [[632, "cmdoption-llvm-nm-add-dyldinfo", false]], "--add-gnu-debuglink": [[633, "cmdoption-llvm-objcopy-add-gnu-debuglink", false]], "--add-inlinedinfo": [[632, "cmdoption-llvm-nm-add-inlinedinfo", false]], "--add-section": [[633, "cmdoption-llvm-objcopy-add-section", false]], "--add-symbol": [[633, "cmdoption-llvm-objcopy-add-symbol", false]], "--addresses": [[646, "cmdoption-llvm-symbolizer-print-address", false]], "--addrsig": [[640, "cmdoption-llvm-readelf-addrsig", false], [641, "cmdoption-llvm-readobj-addrsig", false]], "--adjust-start": [[633, "cmdoption-llvm-objcopy-change-start", false]], "--adjust-vma": [[634, "cmdoption-llvm-objdump-adjust-vma", false], [646, "cmdoption-llvm-symbolizer-adjust-vma", false]], "--all": [[622, "cmdoption-llvm-dwarfdump-a", false], [640, "cmdoption-llvm-readelf-all", false], [641, "cmdoption-llvm-readobj-all", false], [644, "cmdoption-llvm-strings-all", false]], "--all-blocks": [[617, "cmdoption-llvm-cov-gcov-a", false]], "--all-headers": [[634, "cmdoption-llvm-objdump-x", false]], "--allow-broken-links": [[633, "cmdoption-llvm-objcopy-allow-broken-links", false], [645, "cmdoption-llvm-strip-allow-broken-links", false]], "--allow-deprecated-dag-overlap": [[603, "cmdoption-FileCheck-allow-deprecated-dag-overlap", false]], "--allow-empty": [[603, "cmdoption-FileCheck-allow-empty", false]], "--allow-unused-prefixes": [[603, "cmdoption-FileCheck-allow-unused-prefixes", false]], "--apple-names": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-namespaces": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-objc": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-types": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--arch": [[606, "cmdoption-dsymutil-arch", false], [622, "cmdoption-llvm-dwarfdump-arch", false], [632, "cmdoption-llvm-nm-arch", false], [634, "cmdoption-llvm-objdump-arch", false], [642, "cmdoption-llvm-size-arch", false]], "--arch-name": [[634, "cmdoption-llvm-objdump-arch-name", false]], "--arch-specific": [[640, "cmdoption-llvm-readelf-arch-specific", false], [641, "cmdoption-llvm-readobj-arch-specific", false]], "--archive-headers": [[634, "cmdoption-llvm-objdump-a", false]], "--archive-member-offsets": [[634, "cmdoption-llvm-objdump-archive-member-offsets", false]], "--basenames": [[646, "cmdoption-llvm-symbolizer-basenames", false]], "--bb-addr-map": [[640, "cmdoption-llvm-readelf-bb-addr-map", false], [641, "cmdoption-llvm-readobj-bb-addr-map", false]], "--binary": [[638, "cmdoption-llvm-profgen-binary", false]], "--binary-architecture": [[633, "cmdoption-llvm-objcopy-binary-architecture", false]], "--bind": [[634, "cmdoption-llvm-objdump-bind", false]], "--branch-counts": [[617, "cmdoption-llvm-cov-gcov-c", false]], "--branch-probabilities": [[617, "cmdoption-llvm-cov-gcov-b", false]], "--bytes": [[644, "cmdoption-llvm-strings-bytes", false]], "--cg-profile": [[640, "cmdoption-llvm-readelf-cg-profile", false], [641, "cmdoption-llvm-readobj-cg-profile", false]], "--change-start": [[633, "cmdoption-llvm-objcopy-change-start", false]], "--check-prefix": [[603, "cmdoption-FileCheck-check-prefix", false]], "--check-prefixes": [[603, "cmdoption-FileCheck-check-prefixes", false]], "--codeview": [[641, "cmdoption-llvm-readobj-codeview", false]], "--codeview-ghash": [[641, "cmdoption-llvm-readobj-codeview-ghash", false]], "--codeview-merged-types": [[641, "cmdoption-llvm-readobj-codeview-merged-types", false]], "--codeview-subsection-bytes": [[641, "cmdoption-llvm-readobj-codeview-subsection-bytes", false]], "--coff-basereloc": [[641, "cmdoption-llvm-readobj-coff-basereloc", false]], "--coff-debug-directory": [[641, "cmdoption-llvm-readobj-coff-debug-directory", false]], "--coff-directives": [[641, "cmdoption-llvm-readobj-coff-directives", false]], "--coff-exports": [[641, "cmdoption-llvm-readobj-coff-exports", false]], "--coff-imports": [[641, "cmdoption-llvm-readobj-coff-imports", false]], "--coff-load-config": [[641, "cmdoption-llvm-readobj-coff-load-config", false]], "--coff-resources": [[641, "cmdoption-llvm-readobj-coff-resources", false]], "--coff-tls-directory": [[641, "cmdoption-llvm-readobj-coff-tls-directory", false]], "--color": [[603, "cmdoption-FileCheck-color", false], [622, "cmdoption-llvm-dwarfdump-color", false]], "--comment-prefixes": [[603, "cmdoption-FileCheck-comment-prefixes", false]], "--common": [[642, "cmdoption-llvm-size-common", false]], "--compare": [[630, "cmdoption-llvm-locstats-compare", false]], "--compress-debug-sections": [[633, "cmdoption-llvm-objcopy-compress-debug-sections", false]], "--config-prefix": [[608, "cmdoption-lit-config-prefix", false]], "--data-in-code": [[634, "cmdoption-llvm-objdump-data-in-code", false]], "--debug": [[608, "cmdoption-lit-debug", false]], "--debug-abbrev": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-addr": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-aranges": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-cu-index": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-frame": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-gnu-pubnames": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-gnu-pubtypes": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-info": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-line": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-line-str": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-loc": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-loclists": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-macro": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-names": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-pubnames": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-pubtypes": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-ranges": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-rnglists": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-str": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-str-offsets": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-syms": [[632, "cmdoption-llvm-nm-debug-syms", false]], "--debug-tu-index": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-types": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-vars": [[634, "cmdoption-llvm-objdump-debug-vars", false]], "--debug-vars-indent": [[634, "cmdoption-llvm-objdump-debug-vars-indent", false]], "--decompress-debug-sections": [[633, "cmdoption-llvm-objcopy-decompress-debug-sections", false]], "--default-arch": [[646, "cmdoption-llvm-symbolizer-default-arch", false]], "--defined-only": [[632, "cmdoption-llvm-nm-defined-only", false]], "--demangle": [[632, "cmdoption-llvm-nm-demangle", false], [634, "cmdoption-llvm-objdump-C", false], [640, "cmdoption-llvm-readelf-demangle", false], [641, "cmdoption-llvm-readobj-demangle", false], [646, "cmdoption-llvm-symbolizer-demangle", false]], "--demangled-names": [[617, "cmdoption-llvm-cov-gcov-m", false]], "--dependent-libraries": [[641, "cmdoption-llvm-readobj-dependent-libraries", false]], "--dia": [[646, "cmdoption-llvm-symbolizer-dia", false]], "--diff": [[622, "cmdoption-llvm-dwarfdump-diff", false]], "--dis-symname": [[634, "cmdoption-llvm-objdump-dis-symname", false]], "--disable-deterministic-archives": [[633, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [645, "cmdoption-llvm-strip-disable-deterministic-archives", false]], "--disable-excess-fp-precision": [[609, "cmdoption-llc-disable-excess-fp-precision", false]], "--disassemble": [[634, "cmdoption-llvm-objdump-d", false]], "--disassemble-all": [[634, "cmdoption-llvm-objdump-D", false]], "--disassemble-symbols": [[634, "cmdoption-llvm-objdump-disassemble-symbols", false]], "--disassemble-zeroes": [[634, "cmdoption-llvm-objdump-z", false]], "--disassembler-options": [[634, "cmdoption-llvm-objdump-M", false]], "--discard-all": [[633, "cmdoption-llvm-objcopy-discard-all", false], [645, "cmdoption-llvm-strip-discard-all", false]], "--discard-locals": [[633, "cmdoption-llvm-objcopy-discard-locals", false], [645, "cmdoption-llvm-strip-discard-locals", false]], "--draw-plot": [[630, "cmdoption-llvm-locstats-draw-plot", false]], "--dsym": [[634, "cmdoption-llvm-objdump-dsym", false]], "--dsym-hint": [[646, "cmdoption-llvm-symbolizer-dsym-hint", false]], "--dt": [[641, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dump-debug-map": [[606, "cmdoption-dsymutil-dump-debug-map", false]], "--dump-input": [[603, "cmdoption-FileCheck-dump-input", false]], "--dump-input-context": [[603, "cmdoption-FileCheck-dump-input-context", false]], "--dump-input-filter": [[603, "cmdoption-FileCheck-dump-input-filter", false]], "--dump-object-to-disk": [[623, "cmdoption-llvm-exegesis-dump-object-to-disk", false]], "--dump-section": [[633, "cmdoption-llvm-objcopy-dump-section", false]], "--dwarf": [[634, "cmdoption-llvm-objdump-dwarf", false]], "--dwp": [[646, "cmdoption-llvm-symbolizer-dwp", false]], "--dyldinfo-only": [[632, "cmdoption-llvm-nm-dyldinfo-only", false]], "--dylib-id": [[634, "cmdoption-llvm-objdump-dylib-id", false]], "--dylibs-used": [[634, "cmdoption-llvm-objdump-dylibs-used", false]], "--dyn-relocations": [[640, "cmdoption-llvm-readelf-dyn-relocations", false], [641, "cmdoption-llvm-readobj-dyn-relocations", false]], "--dyn-symbols": [[640, "cmdoption-llvm-readelf-dyn-symbols", false], [641, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dyn-syms": [[640, "cmdoption-llvm-readelf-dyn-symbols", false], [641, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dynamic": [[632, "cmdoption-llvm-nm-dynamic", false], [640, "cmdoption-llvm-readelf-dynamic-table", false], [641, "cmdoption-llvm-readobj-dynamic-table", false]], "--dynamic-reloc": [[634, "cmdoption-llvm-objdump-R", false]], "--dynamic-syms": [[634, "cmdoption-llvm-objdump-T", false]], "--dynamic-table": [[640, "cmdoption-llvm-readelf-dynamic-table", false], [641, "cmdoption-llvm-readobj-dynamic-table", false]], "--echo-all-commands": [[608, "cmdoption-lit-vv", false]], "--eh-frame": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--elf-linker-options": [[640, "cmdoption-llvm-readelf-elf-linker-options", false], [641, "cmdoption-llvm-readobj-elf-linker-options", false]], "--elf-output-style": [[640, "cmdoption-llvm-readelf-elf-output-style", false], [641, "cmdoption-llvm-readobj-elf-output-style", false]], "--enable-deterministic-archives": [[633, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [645, "cmdoption-llvm-strip-enable-deterministic-archives", false]], "--enable-no-infs-fp-math": [[609, "cmdoption-llc-enable-no-infs-fp-math", false]], "--enable-no-nans-fp-math": [[609, "cmdoption-llc-enable-no-nans-fp-math", false]], "--enable-no-signed-zeros-fp-math": [[609, "cmdoption-llc-enable-no-signed-zeros-fp-math", false]], "--enable-no-trapping-fp-math": [[609, "cmdoption-llc-enable-no-trapping-fp-math", false]], "--enable-unsafe-fp-math": [[609, "cmdoption-llc-enable-unsafe-fp-math", false]], "--enable-var-scope": [[603, "cmdoption-FileCheck-enable-var-scope", false]], "--exe": [[646, "cmdoption-llvm-symbolizer-obj", false]], "--expand-relocs": [[640, "cmdoption-llvm-readelf-expand-relocs", false], [641, "cmdoption-llvm-readobj-expand-relocs", false]], "--exports-trie": [[634, "cmdoption-llvm-objdump-exports-trie", false]], "--extern-only": [[632, "cmdoption-llvm-nm-extern-only", false]], "--extract-dwo": [[633, "cmdoption-llvm-objcopy-extract-dwo", false]], "--extract-main-partition": [[633, "cmdoption-llvm-objcopy-extract-main-partition", false]], "--extract-partition": [[633, "cmdoption-llvm-objcopy-extract-partition", false]], "--fallback-debug-path": [[646, "cmdoption-llvm-symbolizer-fallback-debug-path", false]], "--fault-map-section": [[634, "cmdoption-llvm-objdump-fault-map-section", false]], "--file-header": [[640, "cmdoption-llvm-readelf-file-header", false], [641, "cmdoption-llvm-readobj-file-header", false]], "--file-headers": [[634, "cmdoption-llvm-objdump-f", false]], "--filter": [[608, "cmdoption-lit-filter", false]], "--filter-out": [[608, "cmdoption-lit-filter-out", false]], "--find": [[622, "cmdoption-llvm-dwarfdump-f", false]], "--flat": [[606, "cmdoption-dsymutil-flat", false]], "--format": [[613, "cmdoption-llvm-ar-format", false], [618, "cmdoption-llvm-cxxfilt-format", false], [632, "cmdoption-llvm-nm-format", false], [638, "cmdoption-llvm-profgen-format", false], [642, "cmdoption-llvm-size-format", false]], "--frame-pointer": [[609, "cmdoption-llc-frame-pointer", false]], "--full-contents": [[634, "cmdoption-llvm-objdump-s", false]], "--full-leading-addr": [[634, "cmdoption-llvm-objdump-full-leading-addr", false]], "--function-starts": [[634, "cmdoption-llvm-objdump-function-starts", false]], "--function-summaries": [[617, "cmdoption-llvm-cov-gcov-f", false]], "--functions": [[646, "cmdoption-llvm-symbolizer-functions", false]], "--gdb-index": [[622, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--gen-reproducer": [[606, "cmdoption-dsymutil-gen-reproducer", false]], "--globalize-symbol": [[633, "cmdoption-llvm-objcopy-globalize-symbol", false]], "--globalize-symbols": [[633, "cmdoption-llvm-objcopy-globalize-symbols", false]], "--gnu-hash-table": [[640, "cmdoption-llvm-readelf-gnu-hash-table", false], [641, "cmdoption-llvm-readobj-gnu-hash-table", false]], "--hash-filenames": [[617, "cmdoption-llvm-cov-gcov-x", false]], "--hash-symbols": [[640, "cmdoption-llvm-readelf-hash-symbols", false], [641, "cmdoption-llvm-readobj-hash-symbols", false]], "--hash-table": [[640, "cmdoption-llvm-readelf-hash-table", false], [641, "cmdoption-llvm-readobj-hash-table", false]], "--headers": [[634, "cmdoption-llvm-objdump-h", false], [640, "cmdoption-llvm-readelf-headers", false], [641, "cmdoption-llvm-readobj-headers", false]], "--help": [[606, "cmdoption-dsymutil-help", false], [608, "cmdoption-lit-h", false], [613, "cmdoption-llvm-ar-h", false], [617, "cmdoption-llvm-cov-gcov-help", false], [618, "cmdoption-llvm-cxxfilt-help", false], [622, "cmdoption-llvm-dwarfdump-h", false], [625, "cmdoption-llvm-install-name-tool-help", false], [632, "cmdoption-llvm-nm-help", false], [633, "cmdoption-llvm-objcopy-help", false], [634, "cmdoption-llvm-objdump-help", false], [635, "cmdoption-llvm-otool-help", false], [640, "cmdoption-llvm-readelf-help", false], [641, "cmdoption-llvm-readobj-help", false], [642, "cmdoption-llvm-size-help", false], [644, "cmdoption-llvm-strings-help", false], [645, "cmdoption-llvm-strip-help", false], [646, "cmdoption-llvm-symbolizer-help", false]], "--help-hidden": [[635, "cmdoption-llvm-otool-help-hidden", false]], "--help-list": [[622, "cmdoption-llvm-dwarfdump-help-list", false]], "--hex-dump": [[640, "cmdoption-llvm-readelf-hex-dump", false], [641, "cmdoption-llvm-readobj-hex-dump", false]], "--histogram": [[640, "cmdoption-llvm-readelf-histogram", false], [641, "cmdoption-llvm-readobj-histogram", false]], "--ignore-case": [[603, "cmdoption-FileCheck-ignore-case", false], [622, "cmdoption-llvm-dwarfdump-i", false]], "--ignore-debug-entry-values": [[630, "cmdoption-llvm-locstats-ignore-debug-entry-values", false]], "--ignore-fail": [[608, "cmdoption-lit-ignore-fail", false]], "--implicit-check-not": [[603, "cmdoption-FileCheck-implicit-check-not", false]], "--indirect-symbols": [[634, "cmdoption-llvm-objdump-indirect-symbols", false]], "--info-plist": [[634, "cmdoption-llvm-objdump-info-plist", false]], "--inlines": [[646, "cmdoption-llvm-symbolizer-inlining", false]], "--inlining": [[646, "cmdoption-llvm-symbolizer-inlining", false]], "--input-file": [[603, "cmdoption-FileCheck-input-file", false]], "--input-target": [[633, "cmdoption-llvm-objcopy-input-target", false]], "--keep-file-symbols": [[633, "cmdoption-llvm-objcopy-keep-file-symbols", false], [645, "cmdoption-llvm-strip-keep-file-symbols", false]], "--keep-function-for-static": [[606, "cmdoption-dsymutil-keep-function-for-static", false]], "--keep-global-symbol": [[633, "cmdoption-llvm-objcopy-keep-global-symbol", false]], "--keep-global-symbols": [[633, "cmdoption-llvm-objcopy-keep-global-symbols", false]], "--keep-section": [[633, "cmdoption-llvm-objcopy-keep-section", false], [645, "cmdoption-llvm-strip-keep-section", false]], "--keep-symbol": [[633, "cmdoption-llvm-objcopy-keep-symbol", false], [645, "cmdoption-llvm-strip-keep-symbol", false]], "--keep-symbols": [[633, "cmdoption-llvm-objcopy-keep-symbols", false]], "--keep-undefined": [[633, "cmdoption-llvm-objcopy-keep-undefined", false]], "--lazy-bind": [[634, "cmdoption-llvm-objdump-lazy-bind", false]], "--line-numbers": [[634, "cmdoption-llvm-objdump-l", false]], "--link-opt-hints": [[634, "cmdoption-llvm-objdump-link-opt-hints", false]], "--load": [[609, "cmdoption-llc-load", false]], "--localize-hidden": [[633, "cmdoption-llvm-objcopy-localize-hidden", false]], "--localize-symbol": [[633, "cmdoption-llvm-objcopy-localize-symbol", false]], "--localize-symbols": [[633, "cmdoption-llvm-objcopy-localize-symbols", false]], "--long-file-names": [[617, "cmdoption-llvm-cov-gcov-l", false]], "--lookup": [[622, "cmdoption-llvm-dwarfdump-lookup", false]], "--macho": [[634, "cmdoption-llvm-objdump-m", false]], "--macho-data-in-code": [[641, "cmdoption-llvm-readobj-macho-data-in-code", false]], "--macho-dsymtab": [[641, "cmdoption-llvm-readobj-macho-dsymtab", false]], "--macho-indirect-symbols": [[641, "cmdoption-llvm-readobj-macho-indirect-symbols", false]], "--macho-linker-options": [[641, "cmdoption-llvm-readobj-macho-linker-options", false]], "--macho-segment": [[641, "cmdoption-llvm-readobj-macho-segment", false]], "--macho-version-min": [[641, "cmdoption-llvm-readobj-macho-version-min", false]], "--match-full-lines": [[603, "cmdoption-FileCheck-match-full-lines", false]], "--mattr": [[634, "cmdoption-llvm-objdump-mattr", false]], "--max-failures": [[608, "cmdoption-lit-max-failures", false]], "--max-tests": [[608, "cmdoption-lit-max-tests", false]], "--max-time": [[608, "cmdoption-lit-max-time", false]], "--mcpu": [[634, "cmdoption-llvm-objdump-mcpu", false]], "--minimize": [[606, "cmdoption-dsymutil-minimize", false]], "--name": [[622, "cmdoption-llvm-dwarfdump-n", false]], "--needed-libs": [[640, "cmdoption-llvm-readelf-needed-libs", false], [641, "cmdoption-llvm-readobj-needed-libs", false]], "--new-symbol-visibility": [[633, "cmdoption-llvm-objcopy-new-symbol-visibility", false]], "--no-demangle": [[632, "cmdoption-llvm-nm-no-demangle", false], [646, "cmdoption-llvm-symbolizer-no-demangle", false]], "--no-dyldinfo": [[632, "cmdoption-llvm-nm-no-dyldinfo", false]], "--no-indirectly-run-check": [[608, "cmdoption-lit-no-indirectly-run-check", false]], "--no-inlines": [[646, "cmdoption-llvm-symbolizer-no-inlines", false]], "--no-leading-addr": [[634, "cmdoption-llvm-objdump-no-leading-addr", false]], "--no-leading-headers": [[634, "cmdoption-llvm-objdump-no-leading-headers", false]], "--no-llvm-bc": [[632, "cmdoption-llvm-nm-no-llvm-bc", false]], "--no-odr": [[606, "cmdoption-dsymutil-no-odr", false]], "--no-output": [[606, "cmdoption-dsymutil-no-output", false], [617, "cmdoption-llvm-cov-gcov-n", false]], "--no-print-imm-hex": [[634, "cmdoption-llvm-objdump-no-print-imm-hex", false]], "--no-progress-bar": [[608, "cmdoption-lit-no-progress-bar", false]], "--no-show-raw-insn": [[634, "cmdoption-llvm-objdump-no-show-raw-insn", false]], "--no-sort": [[632, "cmdoption-llvm-nm-no-sort", false]], "--no-strip-all": [[645, "cmdoption-llvm-strip-no-strip-all", false]], "--no-strip-underscore": [[618, "cmdoption-llvm-cxxfilt-no-strip-underscore", false]], "--no-swiftmodule-timestamp": [[606, "cmdoption-dsymutil-no-swiftmodule-timestamp", false]], "--no-symbolic-operands": [[634, "cmdoption-llvm-objdump-no-symbolic-operands", false]], "--no-weak": [[632, "cmdoption-llvm-nm-no-weak", false]], "--non-verbose": [[634, "cmdoption-llvm-objdump-non-verbose", false]], "--notes": [[640, "cmdoption-llvm-readelf-notes", false], [641, "cmdoption-llvm-readobj-notes", false]], "--num-shards": [[608, "cmdoption-lit-num-shards", false]], "--num-threads": [[606, "cmdoption-dsymutil-num-threads", false]], "--numeric-sort": [[632, "cmdoption-llvm-nm-numeric-sort", false]], "--obj": [[646, "cmdoption-llvm-symbolizer-obj", false]], "--objc-meta-data": [[634, "cmdoption-llvm-objdump-objc-meta-data", false]], "--object-directory": [[617, "cmdoption-llvm-cov-gcov-o", false]], "--object-file": [[617, "cmdoption-llvm-cov-gcov-o", false]], "--object-prefix-map": [[606, "cmdoption-dsymutil-object-prefix-map", false]], "--only-formal-parameters": [[630, "cmdoption-llvm-locstats-only-formal-parameters", false]], "--only-keep-debug": [[633, "cmdoption-llvm-objcopy-only-keep-debug", false], [645, "cmdoption-llvm-strip-only-keep-debug", false]], "--only-section": [[633, "cmdoption-llvm-objcopy-only-section", false]], "--only-variables": [[630, "cmdoption-llvm-locstats-only-variables", false]], "--oso-prepend-path": [[606, "cmdoption-dsymutil-oso-prepend-path", false]], "--out": [[606, "cmdoption-dsymutil-out", false]], "--output": [[638, "cmdoption-llvm-profgen-output", false]], "--output-style": [[646, "cmdoption-llvm-symbolizer-output-style", false]], "--output-target": [[633, "cmdoption-llvm-objcopy-output-target", false]], "--papertrail": [[606, "cmdoption-dsymutil-papertrail", false]], "--param": [[608, "cmdoption-lit-D", false]], "--parent-recurse-depth": [[622, "cmdoption-llvm-dwarfdump-parent-recurse-depth", false]], "--path": [[608, "cmdoption-lit-path", false]], "--perfscript": [[638, "cmdoption-llvm-profgen-perfscript", false]], "--portability": [[632, "cmdoption-llvm-nm-portability", false]], "--prefix": [[634, "cmdoption-llvm-objdump-prefix", false]], "--prefix-alloc-sections": [[633, "cmdoption-llvm-objcopy-prefix-alloc-sections", false]], "--prefix-strip": [[634, "cmdoption-llvm-objdump-prefix-strip", false]], "--prefix-symbols": [[633, "cmdoption-llvm-objcopy-prefix-symbols", false]], "--preserve-dates": [[633, "cmdoption-llvm-objcopy-preserve-dates", false], [645, "cmdoption-llvm-strip-preserve-dates", false]], "--preserve-paths": [[617, "cmdoption-llvm-cov-gcov-p", false]], "--pretty-print": [[646, "cmdoption-llvm-symbolizer-pretty-print", false]], "--print-address": [[646, "cmdoption-llvm-symbolizer-print-address", false]], "--print-after-isel": [[609, "cmdoption-llc-print-after-isel", false]], "--print-armap": [[632, "cmdoption-llvm-nm-print-armap", false]], "--print-file-name": [[632, "cmdoption-llvm-nm-print-file-name", false], [644, "cmdoption-llvm-strings-print-file-name", false]], "--print-imm-hex": [[634, "cmdoption-llvm-objdump-print-imm-hex", false]], "--print-size": [[632, "cmdoption-llvm-nm-print-size", false]], "--print-source-context-lines": [[646, "cmdoption-llvm-symbolizer-print-source-context-lines", false]], "--private-header": [[634, "cmdoption-llvm-objdump-private-header", false]], "--private-headers": [[634, "cmdoption-llvm-objdump-p", false]], "--program-headers": [[640, "cmdoption-llvm-readelf-program-headers", false], [641, "cmdoption-llvm-readobj-program-headers", false]], "--quiet": [[608, "cmdoption-lit-q", false], [622, "cmdoption-llvm-dwarfdump-quiet", false], [632, "cmdoption-llvm-nm-quiet", false]], "--radix": [[632, "cmdoption-llvm-nm-radix", false], [642, "cmdoption-llvm-size-radix", false], [644, "cmdoption-llvm-strings-radix", false]], "--raw-clang-ast": [[634, "cmdoption-llvm-objdump-raw-clang-ast", false]], "--raw-relr": [[640, "cmdoption-llvm-readelf-raw-relr", false], [641, "cmdoption-llvm-readobj-raw-relr", false]], "--rebase": [[634, "cmdoption-llvm-objdump-rebase", false]], "--recurse-depth": [[622, "cmdoption-llvm-dwarfdump-r", false]], "--redefine-sym": [[633, "cmdoption-llvm-objcopy-redefine-sym", false]], "--redefine-syms": [[633, "cmdoption-llvm-objcopy-redefine-syms", false]], "--regalloc": [[609, "cmdoption-llc-regalloc", false]], "--regex": [[622, "cmdoption-llvm-dwarfdump-x", false], [633, "cmdoption-llvm-objcopy-regex", false], [645, "cmdoption-llvm-strip-regex", false]], "--relativenames": [[646, "cmdoption-llvm-symbolizer-relativenames", false]], "--reloc": [[634, "cmdoption-llvm-objdump-r", false]], "--relocations": [[640, "cmdoption-llvm-readelf-relocations", false], [641, "cmdoption-llvm-readobj-relocations", false]], "--relocs": [[640, "cmdoption-llvm-readelf-relocations", false], [641, "cmdoption-llvm-readobj-relocations", false]], "--remarks-output-format": [[606, "cmdoption-dsymutil-remarks-output-format", false]], "--remarks-prepend-path": [[606, "cmdoption-dsymutil-remarks-prepend-path", false]], "--remove-section": [[633, "cmdoption-llvm-objcopy-remove-section", false], [645, "cmdoption-llvm-strip-remove-section", false]], "--rename-section": [[633, "cmdoption-llvm-objcopy-rename-section", false]], "--reverse-sort": [[632, "cmdoption-llvm-nm-reverse-sort", false]], "--rpaths": [[634, "cmdoption-llvm-objdump-rpaths", false]], "--rsp-quoting": [[613, "cmdoption-llvm-ar-rsp-quoting", false]], "--run-shard": [[608, "cmdoption-lit-run-shard", false]], "--sd": [[641, "cmdoption-llvm-readobj-section-data", false]], "--section": [[634, "cmdoption-llvm-objdump-j", false]], "--section-data": [[640, "cmdoption-llvm-readelf-section-data", false], [641, "cmdoption-llvm-readobj-section-data", false]], "--section-details": [[640, "cmdoption-llvm-readelf-section-details", false]], "--section-groups": [[640, "cmdoption-llvm-readelf-section-groups", false], [641, "cmdoption-llvm-readobj-section-groups", false]], "--section-headers": [[634, "cmdoption-llvm-objdump-h", false], [640, "cmdoption-llvm-readelf-sections", false], [641, "cmdoption-llvm-readobj-sections", false]], "--section-mapping": [[640, "cmdoption-llvm-readelf-section-mapping", false], [641, "cmdoption-llvm-readobj-section-mapping", false]], "--section-relocations": [[640, "cmdoption-llvm-readelf-section-relocations", false], [641, "cmdoption-llvm-readobj-section-relocations", false]], "--section-symbols": [[640, "cmdoption-llvm-readelf-section-symbols", false], [641, "cmdoption-llvm-readobj-section-symbols", false]], "--sections": [[640, "cmdoption-llvm-readelf-sections", false], [641, "cmdoption-llvm-readobj-sections", false]], "--segments": [[640, "cmdoption-llvm-readelf-program-headers", false], [641, "cmdoption-llvm-readobj-program-headers", false]], "--set-section-alignment": [[633, "cmdoption-llvm-objcopy-set-section-alignment", false]], "--set-section-flags": [[633, "cmdoption-llvm-objcopy-set-section-flags", false]], "--set-start-addr": [[633, "cmdoption-llvm-objcopy-set-start-addr", false]], "--show-all": [[608, "cmdoption-lit-a", false]], "--show-children": [[622, "cmdoption-llvm-dwarfdump-c", false]], "--show-disassembly": [[638, "cmdoption-llvm-profgen-show-disassembly", false]], "--show-form": [[622, "cmdoption-llvm-dwarfdump-F", false]], "--show-lma": [[634, "cmdoption-llvm-objdump-show-lma", false]], "--show-mmap-events": [[638, "cmdoption-llvm-profgen-show-mmap-events", false]], "--show-parents": [[622, "cmdoption-llvm-dwarfdump-p", false]], "--show-section-sizes": [[622, "cmdoption-llvm-dwarfdump-show-section-sizes", false]], "--show-suites": [[608, "cmdoption-lit-show-suites", false]], "--show-tests": [[608, "cmdoption-lit-show-tests", false]], "--show-unsupported": [[608, "cmdoption-lit-show-unsupported", false]], "--show-xfail": [[608, "cmdoption-lit-show-xfail", false]], "--shuffle": [[608, "cmdoption-lit-shuffle", false]], "--size-sort": [[632, "cmdoption-llvm-nm-size-sort", false]], "--source": [[634, "cmdoption-llvm-objdump-S", false]], "--special-syms": [[632, "cmdoption-llvm-nm-special-syms", false]], "--spiller": [[609, "cmdoption-llc-spiller", false]], "--split-dwo": [[633, "cmdoption-llvm-objcopy-split-dwo", false]], "--sr": [[641, "cmdoption-llvm-readobj-section-relocations", false]], "--st": [[641, "cmdoption-llvm-readobj-section-symbols", false]], "--stack-sizes": [[640, "cmdoption-llvm-readelf-stack-sizes", false], [641, "cmdoption-llvm-readobj-stack-sizes", false]], "--stackmap": [[640, "cmdoption-llvm-readelf-stackmap", false], [641, "cmdoption-llvm-readobj-stackmap", false]], "--start-address": [[634, "cmdoption-llvm-objdump-start-address", false]], "--statistics": [[606, "cmdoption-dsymutil-statistics", false], [622, "cmdoption-llvm-dwarfdump-statistics", false]], "--stats": [[609, "cmdoption-llc-stats", false]], "--stdout": [[617, "cmdoption-llvm-cov-gcov-t", false]], "--stop-address": [[634, "cmdoption-llvm-objdump-stop-address", false]], "--strict-whitespace": [[603, "cmdoption-FileCheck-strict-whitespace", false]], "--string-dump": [[640, "cmdoption-llvm-readelf-string-dump", false], [641, "cmdoption-llvm-readobj-string-dump", false]], "--string-table": [[641, "cmdoption-llvm-readobj-string-table", false]], "--strip-all": [[633, "cmdoption-llvm-objcopy-strip-all", false], [645, "cmdoption-llvm-strip-strip-all", false]], "--strip-all-gnu": [[633, "cmdoption-llvm-objcopy-strip-all-gnu", false], [645, "cmdoption-llvm-strip-strip-all-gnu", false]], "--strip-debug": [[633, "cmdoption-llvm-objcopy-strip-debug", false], [645, "cmdoption-llvm-strip-strip-debug", false]], "--strip-dwo": [[633, "cmdoption-llvm-objcopy-strip-dwo", false]], "--strip-non-alloc": [[633, "cmdoption-llvm-objcopy-strip-non-alloc", false]], "--strip-sections": [[633, "cmdoption-llvm-objcopy-strip-sections", false], [645, "cmdoption-llvm-strip-strip-sections", false]], "--strip-symbol": [[633, "cmdoption-llvm-objcopy-strip-symbol", false], [645, "cmdoption-llvm-strip-strip-symbol", false]], "--strip-symbols": [[633, "cmdoption-llvm-objcopy-strip-symbols", false]], "--strip-underscore": [[618, "cmdoption-llvm-cxxfilt-strip-underscore", false]], "--strip-unneeded": [[633, "cmdoption-llvm-objcopy-strip-unneeded", false], [645, "cmdoption-llvm-strip-strip-unneeded", false]], "--strip-unneeded-symbol": [[633, "cmdoption-llvm-objcopy-strip-unneeded-symbol", false]], "--strip-unneeded-symbols": [[633, "cmdoption-llvm-objcopy-strip-unneeded-symbols", false]], "--succinct": [[608, "cmdoption-lit-s", false]], "--summarize-types": [[622, "cmdoption-llvm-dwarfdump-summarize-types", false]], "--symbol-description": [[634, "cmdoption-llvm-objdump-symbol-description", false]], "--symbol-map": [[606, "cmdoption-dsymutil-symbol-map", false]], "--symbolize-operands": [[634, "cmdoption-llvm-objdump-symbolize-operands", false]], "--symbols": [[640, "cmdoption-llvm-readelf-symbols", false], [641, "cmdoption-llvm-readobj-symbols", false]], "--syms": [[634, "cmdoption-llvm-objdump-t", false], [640, "cmdoption-llvm-readelf-symbols", false], [641, "cmdoption-llvm-readobj-symbols", false]], "--symtab": [[606, "cmdoption-dsymutil-s", false]], "--target": [[633, "cmdoption-llvm-objcopy-target", false]], "--time-passes": [[609, "cmdoption-llc-time-passes", false]], "--time-tests": [[608, "cmdoption-lit-time-tests", false]], "--timeout": [[608, "cmdoption-lit-timeout", false]], "--toolchain": [[606, "cmdoption-dsymutil-toolchain", false]], "--totals": [[642, "cmdoption-llvm-size-totals", false]], "--triple": [[634, "cmdoption-llvm-objdump-triple", false]], "--types": [[618, "cmdoption-llvm-cxxfilt-types", false]], "--unconditional-branches": [[617, "cmdoption-llvm-cov-gcov-u", false]], "--undefined-only": [[632, "cmdoption-llvm-nm-undefined-only", false]], "--universal-headers": [[634, "cmdoption-llvm-objdump-universal-headers", false]], "--unwind": [[640, "cmdoption-llvm-readelf-unwind", false], [641, "cmdoption-llvm-readobj-unwind", false]], "--unwind-info": [[634, "cmdoption-llvm-objdump-u", false]], "--update": [[606, "cmdoption-dsymutil-u", false]], "--use-reproducer": [[606, "cmdoption-dsymutil-use-reproducer", false]], "--uuid": [[622, "cmdoption-llvm-dwarfdump-u", false]], "--verbose": [[606, "cmdoption-dsymutil-verbose", false], [608, "cmdoption-lit-v", false], [622, "cmdoption-llvm-dwarfdump-v", false], [646, "cmdoption-llvm-symbolizer-verbose", false]], "--verify": [[606, "cmdoption-dsymutil-verify", false], [622, "cmdoption-llvm-dwarfdump-verify", false]], "--version": [[606, "cmdoption-dsymutil-v", false], [613, "cmdoption-llvm-ar-version", false], [618, "cmdoption-llvm-cxxfilt-version", false], [622, "cmdoption-llvm-dwarfdump-version", false], [625, "cmdoption-llvm-install-name-tool-version", false], [632, "cmdoption-llvm-nm-version", false], [633, "cmdoption-llvm-objcopy-version", false], [634, "cmdoption-llvm-objdump-v", false], [635, "cmdoption-llvm-otool-version", false], [640, "cmdoption-llvm-readelf-version", false], [641, "cmdoption-llvm-readobj-version", false], [642, "cmdoption-llvm-size-version", false], [644, "cmdoption-llvm-strings-version", false], [645, "cmdoption-llvm-strip-version", false], [646, "cmdoption-llvm-symbolizer-version", false]], "--version-info": [[640, "cmdoption-llvm-readelf-version-info", false], [641, "cmdoption-llvm-readobj-version-info", false]], "--vg": [[608, "cmdoption-lit-vg", false]], "--vg-arg": [[608, "cmdoption-lit-vg-arg", false]], "--vg-leak": [[608, "cmdoption-lit-vg-leak", false]], "--weak-bind": [[634, "cmdoption-llvm-objdump-weak-bind", false]], "--weaken": [[633, "cmdoption-llvm-objcopy-weaken", false]], "--weaken-symbol": [[633, "cmdoption-llvm-objcopy-weaken-symbol", false]], "--weaken-symbols": [[633, "cmdoption-llvm-objcopy-weaken-symbols", false]], "--wide": [[634, "cmdoption-llvm-objdump-w", false]], "--wildcard": [[633, "cmdoption-llvm-objcopy-wildcard", false], [645, "cmdoption-llvm-strip-wildcard", false]], "--workers": [[608, "cmdoption-lit-j", false]], "--x86-asm-syntax": [[609, "cmdoption-llc-x86-asm-syntax", false], [634, "cmdoption-llvm-objdump-x86-asm-syntax", false], [638, "cmdoption-llvm-profgen-x86-asm-syntax", false]], "--xfail": [[608, "cmdoption-lit-xfail", false]], "--xfail-not": [[608, "cmdoption-lit-xfail-not", false]], "-_": [[618, "cmdoption-llvm-cxxfilt-strip-underscore", false]], "-a": [[608, "cmdoption-lit-a", false], [617, "cmdoption-llvm-cov-gcov-a", false], [622, "cmdoption-llvm-dwarfdump-a", false], [632, "cmdoption-llvm-nm-print-file-name", false], [632, "cmdoption-llvm-nm-debug-syms", false], [634, "cmdoption-llvm-objdump-a", false], [640, "cmdoption-llvm-readelf-arch-specific", false], [641, "cmdoption-llvm-readobj-arch-specific", false], [642, "cmdoption-llvm-size-A", false], [644, "cmdoption-llvm-strings-all", false], [646, "cmdoption-llvm-symbolizer-print-address", false]], "-add_rpath": [[625, "cmdoption-llvm-install-name-tool-add_rpath", false]], "-all": [[636, "cmdoption-llvm-pdbutil-dump-all", false], [636, "cmdoption-llvm-pdbutil-pretty-all", false]], "-all-functions": [[637, "cmdoption-llvm-profdata-show-all-functions", false]], "-all-stats": [[631, "cmdoption-llvm-mca-all-stats", false]], "-all-views": [[631, "cmdoption-llvm-mca-all-views", false]], "-analysis-clustering": [[623, "cmdoption-llvm-exegesis-analysis-clustering", false]], "-analysis-clustering-epsilon": [[623, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", false]], "-analysis-clusters-output-file": [[623, "cmdoption-llvm-exegesis-analysis-clusters-output-file", false]], "-analysis-display-unstable-clusters": [[623, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", false]], "-analysis-inconsistencies-output-file": [[623, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", false]], "-analysis-inconsistency-epsilon": [[623, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", false]], "-analysis-numpoints": [[623, "cmdoption-llvm-exegesis-analysis-numpoints", false]], "-arch": [[617, "cmdoption-llvm-cov-export-arch", false], [617, "cmdoption-llvm-cov-report-arch", false], [617, "cmdoption-llvm-cov-show-arch", false], [635, "cmdoption-llvm-otool-arch", false]], "-arch_only": [[627, "cmdoption-llvm-libtool-darwin-arch_only", false]], "-archs": [[629, "cmdoption-llvm-lipo-archs", false]], "-asmformat-error-is-fatal": [[650, "cmdoption-tblgen-asmformat-error-is-fatal", false]], "-asmparsernum": [[650, "cmdoption-tblgen-asmparsernum", false]], "-asmwriternum": [[650, "cmdoption-tblgen-asmwriternum", false]], "-b": [[617, "cmdoption-llvm-cov-gcov-b", false], [632, "cmdoption-llvm-nm-B", false], [633, "cmdoption-llvm-objcopy-binary-architecture", false], [642, "cmdoption-llvm-size-B", false]], "-benchmarks-file": [[623, "cmdoption-llvm-exegesis-benchmarks-file", false]], "-binary": [[637, "cmdoption-llvm-profdata-merge-binary", false]], "-block-range": [[636, "cmdoption-llvm-pdbutil-bytes-block-range", false]], "-bottleneck-analysis": [[631, "cmdoption-llvm-mca-bottleneck-analysis", false]], "-byte-range": [[636, "cmdoption-llvm-pdbutil-bytes-byte-range", false]], "-c": [[617, "cmdoption-llvm-cov-gcov-c", false], [622, "cmdoption-llvm-dwarfdump-c", false], [632, "cmdoption-llvm-nm-demangle", false], [634, "cmdoption-llvm-objdump-C", false], [635, "cmdoption-llvm-otool-C", false], [640, "cmdoption-llvm-readelf-demangle", false], [641, "cmdoption-llvm-readobj-demangle", false], [646, "cmdoption-llvm-symbolizer-demangle", false]], "-change": [[625, "cmdoption-llvm-install-name-tool-change", false]], "-chunks": [[636, "cmdoption-llvm-pdbutil-bytes-chunks", false]], "-clang-component": [[650, "cmdoption-tblgen-clang-component", false]], "-class": [[650, "cmdoption-tblgen-class", false]], "-class-definitions": [[636, "cmdoption-llvm-pdbutil-pretty-class-definitions", false]], "-class-order": [[636, "cmdoption-llvm-pdbutil-pretty-class-order", false]], "-class-recurse-depth": [[636, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false]], "-classes": [[636, "cmdoption-llvm-pdbutil-pretty-classes", false]], "-code-model": [[611, "cmdoption-lli-code-model", false]], "-color": [[627, "cmdoption-llvm-libtool-darwin-color", false]], "-color-output": [[636, "cmdoption-llvm-pdbutil-pretty-color-output", false]], "-combiners": [[650, "cmdoption-tblgen-combiners", false]], "-compilands": [[636, "cmdoption-llvm-pdbutil-pretty-compilands", false]], "-compilation-dir": [[617, "cmdoption-llvm-cov-export-compilation-dir", false], [617, "cmdoption-llvm-cov-report-compilation-dir", false], [617, "cmdoption-llvm-cov-show-compilation-dir", false]], "-compress-all-sections": [[637, "cmdoption-llvm-profdata-merge-compress-all-sections", false]], "-counts": [[637, "cmdoption-llvm-profdata-show-counts", false]], "-create": [[629, "cmdoption-llvm-lipo-create", false]], "-cs": [[637, "cmdoption-llvm-profdata-overlap-cs", false]], "-d": [[608, "cmdoption-lit-D", false], [627, "cmdoption-llvm-libtool-darwin-D", false], [628, "cmdoption-llvm-link-d", false], [632, "cmdoption-llvm-nm-dynamic", false], [633, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [634, "cmdoption-llvm-objdump-D", false], [634, "cmdoption-llvm-objdump-d", false], [635, "cmdoption-llvm-otool-D", false], [635, "cmdoption-llvm-otool-d", false], [640, "cmdoption-llvm-readelf-dynamic-table", false], [641, "cmdoption-llvm-readobj-dynamic-table", false], [642, "cmdoption-llvm-size-d", false], [645, "cmdoption-llvm-strip-enable-deterministic-archives", false], [645, "cmdoption-llvm-strip-strip-debug", false], [650, "cmdoption-tblgen-D", false], [650, "cmdoption-tblgen-d", false]], "-d#<fmt>,<numvar>": [[603, "cmdoption-FileCheck-D-FMT-NUMVAR", false]], "-d<var": [[603, "cmdoption-FileCheck-D-VAR", false]], "-debug": [[649, "cmdoption-opt-debug", false], [650, "cmdoption-tblgen-debug", false]], "-delete_all_rpaths": [[625, "cmdoption-llvm-install-name-tool-delete_all_rpaths", false]], "-delete_rpath": [[625, "cmdoption-llvm-install-name-tool-delete_rpath", false]], "-dependents": [[636, "cmdoption-llvm-pdbutil-dump-dependents", false]], "-dialect": [[650, "cmdoption-tblgen-dialect", false]], "-dialect-opclass-base": [[650, "cmdoption-tblgen-dialect-opclass-base", false]], "-disable-cb": [[631, "cmdoption-llvm-mca-disable-cb", false]], "-disable-excess-fp-precision": [[611, "cmdoption-lli-disable-excess-fp-precision", false]], "-disable-inlining": [[649, "cmdoption-opt-disable-inlining", false]], "-disable-opt": [[649, "cmdoption-opt-disable-opt", false]], "-disable-post-ra-scheduler": [[611, "cmdoption-lli-disable-post-RA-scheduler", false]], "-disable-spill-fusing": [[611, "cmdoption-lli-disable-spill-fusing", false]], "-dispatch": [[631, "cmdoption-llvm-mca-dispatch", false]], "-dispatch-stats": [[631, "cmdoption-llvm-mca-dispatch-stats", false]], "-dump": [[615, "cmdoption-llvm-bcanalyzer-dump", false]], "-dump-json": [[650, "cmdoption-tblgen-dump-json", false]], "-e": [[640, "cmdoption-llvm-readelf-headers", false], [641, "cmdoption-llvm-readobj-headers", false], [646, "cmdoption-llvm-symbolizer-obj", false]], "-ec": [[636, "cmdoption-llvm-pdbutil-bytes-ec", false]], "-enable-no-infs-fp-math": [[611, "cmdoption-lli-enable-no-infs-fp-math", false]], "-enable-no-nans-fp-math": [[611, "cmdoption-lli-enable-no-nans-fp-math", false]], "-enable-unsafe-fp-math": [[611, "cmdoption-lli-enable-unsafe-fp-math", false]], "-enums": [[636, "cmdoption-llvm-pdbutil-pretty-enums", false]], "-exclude-compilands": [[636, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false]], "-exclude-symbols": [[636, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false]], "-exclude-types": [[636, "cmdoption-llvm-pdbutil-pretty-exclude-types", false]], "-extbinary": [[637, "cmdoption-llvm-profdata-merge-extbinary", false]], "-externals": [[636, "cmdoption-llvm-pdbutil-pretty-externals", false]], "-f": [[606, "cmdoption-dsymutil-flat", false], [617, "cmdoption-llvm-cov-gcov-f", false], [622, "cmdoption-llvm-dwarfdump-F", false], [622, "cmdoption-llvm-dwarfdump-f", false], [628, "cmdoption-llvm-link-f", false], [632, "cmdoption-llvm-nm-format", false], [633, "cmdoption-llvm-objcopy-target", false], [634, "cmdoption-llvm-objdump-f", false], [635, "cmdoption-llvm-otool-f", false], [637, "cmdoption-llvm-profdata-merge-input-files", false], [644, "cmdoption-llvm-strings-print-file-name", false], [646, "cmdoption-llvm-symbolizer-functions", false], [649, "cmdoption-opt-f", false]], "-failure-mode": [[637, "cmdoption-llvm-profdata-merge-failure-mode", false]], "-fake-argv0": [[611, "cmdoption-lli-fake-argv0", false]], "-filelist": [[627, "cmdoption-llvm-libtool-darwin-filelist", false]], "-files": [[636, "cmdoption-llvm-pdbutil-bytes-files", false], [636, "cmdoption-llvm-pdbutil-dump-files", false]], "-filetype": [[609, "cmdoption-llc-filetype", false]], "-force-interpreter": [[611, "cmdoption-lli-force-interpreter", false]], "-format": [[617, "cmdoption-llvm-cov-export-format", false], [617, "cmdoption-llvm-cov-show-format", false]], "-fpm": [[636, "cmdoption-llvm-pdbutil-bytes-fpm", false]], "-function": [[637, "cmdoption-llvm-profdata-overlap-function", false], [637, "cmdoption-llvm-profdata-show-function", false]], "-g": [[632, "cmdoption-llvm-nm-extern-only", false], [633, "cmdoption-llvm-objcopy-strip-debug", false], [634, "cmdoption-llvm-objdump-g", false], [635, "cmdoption-llvm-otool-G", false], [640, "cmdoption-llvm-readelf-section-groups", false], [641, "cmdoption-llvm-readobj-section-groups", false], [645, "cmdoption-llvm-strip-strip-debug", false]], "-gcc": [[637, "cmdoption-llvm-profdata-merge-gcc", false]], "-gen-arm-bf16": [[650, "cmdoption-tblgen-gen-arm-bf16", false]], "-gen-arm-cde-builtin-aliases": [[650, "cmdoption-tblgen-gen-arm-cde-builtin-aliases", false]], "-gen-arm-cde-builtin-codegen": [[650, "cmdoption-tblgen-gen-arm-cde-builtin-codegen", false]], "-gen-arm-cde-builtin-def": [[650, "cmdoption-tblgen-gen-arm-cde-builtin-def", false]], "-gen-arm-cde-builtin-sema": [[650, "cmdoption-tblgen-gen-arm-cde-builtin-sema", false]], "-gen-arm-cde-header": [[650, "cmdoption-tblgen-gen-arm-cde-header", false]], "-gen-arm-fp16": [[650, "cmdoption-tblgen-gen-arm-fp16", false]], "-gen-arm-mve-builtin-aliases": [[650, "cmdoption-tblgen-gen-arm-mve-builtin-aliases", false]], "-gen-arm-mve-builtin-codegen": [[650, "cmdoption-tblgen-gen-arm-mve-builtin-codegen", false]], "-gen-arm-mve-builtin-def": [[650, "cmdoption-tblgen-gen-arm-mve-builtin-def", false]], "-gen-arm-mve-builtin-sema": [[650, "cmdoption-tblgen-gen-arm-mve-builtin-sema", false]], "-gen-arm-mve-header": [[650, "cmdoption-tblgen-gen-arm-mve-header", false]], "-gen-arm-neon": [[650, "cmdoption-tblgen-gen-arm-neon", false]], "-gen-arm-neon-sema": [[650, "cmdoption-tblgen-gen-arm-neon-sema", false]], "-gen-arm-neon-test": [[650, "cmdoption-tblgen-gen-arm-neon-test", false]], "-gen-arm-sve-builtin-codegen": [[650, "cmdoption-tblgen-gen-arm-sve-builtin-codegen", false]], "-gen-arm-sve-builtins": [[650, "cmdoption-tblgen-gen-arm-sve-builtins", false]], "-gen-arm-sve-header": [[650, "cmdoption-tblgen-gen-arm-sve-header", false]], "-gen-arm-sve-sema-rangechecks": [[650, "cmdoption-tblgen-gen-arm-sve-sema-rangechecks", false]], "-gen-arm-sve-typeflags": [[650, "cmdoption-tblgen-gen-arm-sve-typeflags", false]], "-gen-asm-matcher": [[650, "cmdoption-tblgen-gen-asm-matcher", false]], "-gen-asm-parser": [[650, "cmdoption-tblgen-gen-asm-parser", false]], "-gen-asm-writer": [[650, "cmdoption-tblgen-gen-asm-writer", false]], "-gen-attr-docs": [[650, "cmdoption-tblgen-gen-attr-docs", false]], "-gen-attrs": [[650, "cmdoption-tblgen-gen-attrs", false]], "-gen-automata": [[650, "cmdoption-tblgen-gen-automata", false]], "-gen-avail-interface-decls": [[650, "cmdoption-tblgen-gen-avail-interface-decls", false]], "-gen-avail-interface-defs": [[650, "cmdoption-tblgen-gen-avail-interface-defs", false]], "-gen-callingconv": [[650, "cmdoption-tblgen-gen-callingconv", false]], "-gen-clang-attr-ast-visitor": [[650, "cmdoption-tblgen-gen-clang-attr-ast-visitor", false]], "-gen-clang-attr-classes": [[650, "cmdoption-tblgen-gen-clang-attr-classes", false]], "-gen-clang-attr-has-attribute-impl": [[650, "cmdoption-tblgen-gen-clang-attr-has-attribute-impl", false]], "-gen-clang-attr-impl": [[650, "cmdoption-tblgen-gen-clang-attr-impl", false]], "-gen-clang-attr-list\"": [[650, "cmdoption-tblgen-gen-clang-attr-list", false]], "-gen-clang-attr-node-traverse": [[650, "cmdoption-tblgen-gen-clang-attr-node-traverse", false]], "-gen-clang-attr-parsed-attr-impl": [[650, "cmdoption-tblgen-gen-clang-attr-parsed-attr-impl", false]], "-gen-clang-attr-parsed-attr-kinds": [[650, "cmdoption-tblgen-gen-clang-attr-parsed-attr-kinds", false]], "-gen-clang-attr-parsed-attr-list": [[650, "cmdoption-tblgen-gen-clang-attr-parsed-attr-list", false]], "-gen-clang-attr-parser-string-switches": [[650, "cmdoption-tblgen-gen-clang-attr-parser-string-switches", false]], "-gen-clang-attr-pch-read": [[650, "cmdoption-tblgen-gen-clang-attr-pch-read", false]], "-gen-clang-attr-pch-write": [[650, "cmdoption-tblgen-gen-clang-attr-pch-write", false]], "-gen-clang-attr-spelling-index": [[650, "cmdoption-tblgen-gen-clang-attr-spelling-index", false]], "-gen-clang-attr-subject-match-rule-list": [[650, "cmdoption-tblgen-gen-clang-attr-subject-match-rule-list", false]], "-gen-clang-attr-subject-match-rules-parser-string-switches": [[650, "cmdoption-tblgen-gen-clang-attr-subject-match-rules-parser-string-switches", false]], "-gen-clang-attr-template-instantiate": [[650, "cmdoption-tblgen-gen-clang-attr-template-instantiate", false]], "-gen-clang-attr-text-node-dump": [[650, "cmdoption-tblgen-gen-clang-attr-text-node-dump", false]], "-gen-clang-basic-reader": [[650, "cmdoption-tblgen-gen-clang-basic-reader", false]], "-gen-clang-basic-writer": [[650, "cmdoption-tblgen-gen-clang-basic-writer", false]], "-gen-clang-comment-command-info": [[650, "cmdoption-tblgen-gen-clang-comment-command-info", false]], "-gen-clang-comment-command-list": [[650, "cmdoption-tblgen-gen-clang-comment-command-list", false]], "-gen-clang-comment-html-named-character-references": [[650, "cmdoption-tblgen-gen-clang-comment-html-named-character-references", false]], "-gen-clang-comment-html-tags": [[650, "cmdoption-tblgen-gen-clang-comment-html-tags", false]], "-gen-clang-comment-html-tags-properties": [[650, "cmdoption-tblgen-gen-clang-comment-html-tags-properties", false]], "-gen-clang-comment-nodes": [[650, "cmdoption-tblgen-gen-clang-comment-nodes", false]], "-gen-clang-data-collectors": [[650, "cmdoption-tblgen-gen-clang-data-collectors", false]], "-gen-clang-decl-nodes": [[650, "cmdoption-tblgen-gen-clang-decl-nodes", false]], "-gen-clang-diag-groups": [[650, "cmdoption-tblgen-gen-clang-diag-groups", false]], "-gen-clang-diags-defs": [[650, "cmdoption-tblgen-gen-clang-diags-defs", false]], "-gen-clang-diags-index-name": [[650, "cmdoption-tblgen-gen-clang-diags-index-name", false]], "-gen-clang-opcodes": [[650, "cmdoption-tblgen-gen-clang-opcodes", false]], "-gen-clang-opencl-builtins": [[650, "cmdoption-tblgen-gen-clang-opencl-builtins", false]], "-gen-clang-sa-checkers": [[650, "cmdoption-tblgen-gen-clang-sa-checkers", false]], "-gen-clang-stmt-nodes": [[650, "cmdoption-tblgen-gen-clang-stmt-nodes", false]], "-gen-clang-test-pragma-attribute-supported-attributes": [[650, "cmdoption-tblgen-gen-clang-test-pragma-attribute-supported-attributes", false]], "-gen-clang-type-nodes": [[650, "cmdoption-tblgen-gen-clang-type-nodes", false]], "-gen-clang-type-reader": [[650, "cmdoption-tblgen-gen-clang-type-reader", false]], "-gen-clang-type-writer": [[650, "cmdoption-tblgen-gen-clang-type-writer", false]], "-gen-compress-inst-emitter": [[650, "cmdoption-tblgen-gen-compress-inst-emitter", false]], "-gen-ctags": [[650, "cmdoption-tblgen-gen-ctags", false]], "-gen-dag-isel": [[650, "cmdoption-tblgen-gen-dag-isel", false]], "-gen-dfa-packetizer": [[650, "cmdoption-tblgen-gen-dfa-packetizer", false]], "-gen-diag-docs": [[650, "cmdoption-tblgen-gen-diag-docs", false]], "-gen-dialect-doc": [[650, "cmdoption-tblgen-gen-dialect-doc", false]], "-gen-directive-decl": [[650, "cmdoption-tblgen-0", false], [650, "cmdoption-tblgen-gen-directive-decl", false]], "-gen-directive-gen": [[650, "cmdoption-tblgen-gen-directive-gen", false]], "-gen-directive-impl": [[650, "cmdoption-tblgen-gen-directive-impl", false]], "-gen-disassembler": [[650, "cmdoption-tblgen-gen-disassembler", false]], "-gen-emitter": [[650, "cmdoption-tblgen-gen-emitter", false]], "-gen-enum-decls": [[650, "cmdoption-tblgen-gen-enum-decls", false]], "-gen-enum-defs": [[650, "cmdoption-tblgen-gen-enum-defs", false]], "-gen-enum-from-llvmir-conversions": [[650, "cmdoption-tblgen-gen-enum-from-llvmir-conversions", false]], "-gen-enum-to-llvmir-conversions": [[650, "cmdoption-tblgen-gen-enum-to-llvmir-conversions", false]], "-gen-exegesis": [[650, "cmdoption-tblgen-gen-exegesis", false]], "-gen-fast-isel": [[650, "cmdoption-tblgen-gen-fast-isel", false]], "-gen-global-isel": [[650, "cmdoption-tblgen-gen-global-isel", false]], "-gen-global-isel-combiner": [[650, "cmdoption-tblgen-gen-global-isel-combiner", false]], "-gen-instr-docs": [[650, "cmdoption-tblgen-gen-instr-docs", false]], "-gen-instr-info": [[650, "cmdoption-tblgen-gen-instr-info", false]], "-gen-intrinsic-enums": [[650, "cmdoption-tblgen-gen-intrinsic-enums", false]], "-gen-intrinsic-impl": [[650, "cmdoption-tblgen-gen-intrinsic-impl", false]], "-gen-llvmir-conversions": [[650, "cmdoption-tblgen-gen-llvmir-conversions", false]], "-gen-llvmir-intrinsics": [[650, "cmdoption-tblgen-gen-llvmir-intrinsics", false]], "-gen-op-decls": [[650, "cmdoption-tblgen-gen-op-decls", false]], "-gen-op-defs": [[650, "cmdoption-tblgen-gen-op-defs", false]], "-gen-op-doc": [[650, "cmdoption-tblgen-gen-op-doc", false]], "-gen-opt-docs": [[650, "cmdoption-tblgen-gen-opt-docs", false]], "-gen-opt-parser-defs": [[650, "cmdoption-tblgen-gen-opt-parser-defs", false]], "-gen-opt-rst": [[650, "cmdoption-tblgen-gen-opt-rst", false]], "-gen-partial-profile": [[637, "cmdoption-llvm-profdata-merge-gen-partial-profile", false]], "-gen-pass-decls": [[650, "cmdoption-tblgen-gen-pass-decls", false]], "-gen-pass-doc": [[650, "cmdoption-tblgen-gen-pass-doc", false]], "-gen-pseudo-lowering": [[650, "cmdoption-tblgen-gen-pseudo-lowering", false]], "-gen-register-bank": [[650, "cmdoption-tblgen-gen-register-bank", false]], "-gen-register-info": [[650, "cmdoption-tblgen-gen-register-info", false]], "-gen-rewriters": [[650, "cmdoption-tblgen-gen-rewriters", false]], "-gen-riscv-vector-builtin-codegen": [[650, "cmdoption-tblgen-gen-riscv-vector-builtin-codegen", false]], "-gen-riscv-vector-builtins": [[650, "cmdoption-tblgen-gen-riscv-vector-builtins", false]], "-gen-riscv-vector-header": [[650, "cmdoption-tblgen-gen-riscv-vector-header", false]], "-gen-searchable-tables": [[650, "cmdoption-tblgen-gen-searchable-tables", false]], "-gen-spirv-avail-impls": [[650, "cmdoption-tblgen-gen-spirv-avail-impls", false]], "-gen-spirv-capability-implication": [[650, "cmdoption-tblgen-gen-spirv-capability-implication", false]], "-gen-spirv-enum-avail-decls": [[650, "cmdoption-tblgen-gen-spirv-enum-avail-decls", false]], "-gen-spirv-enum-avail-defs": [[650, "cmdoption-tblgen-gen-spirv-enum-avail-defs", false]], "-gen-spirv-op-utils": [[650, "cmdoption-tblgen-gen-spirv-op-utils", false]], "-gen-spirv-serialization": [[650, "cmdoption-tblgen-gen-spirv-serialization", false]], "-gen-struct-attr-decls": [[650, "cmdoption-tblgen-gen-struct-attr-decls", false]], "-gen-struct-attr-defs": [[650, "cmdoption-tblgen-gen-struct-attr-defs", false]], "-gen-subtarget": [[650, "cmdoption-tblgen-gen-subtarget", false]], "-gen-typedef-decls": [[650, "cmdoption-tblgen-gen-typedef-decls", false]], "-gen-typedef-defs": [[650, "cmdoption-tblgen-gen-typedef-defs", false]], "-gen-x86-evex2vex-tables": [[650, "cmdoption-tblgen-gen-x86-EVEX2VEX-tables", false]], "-gen-x86-fold-tables": [[650, "cmdoption-tblgen-gen-x86-fold-tables", false]], "-gicombiner-show-expansions": [[650, "cmdoption-tblgen-gicombiner-show-expansions", false]], "-gicombiner-stop-after-build": [[650, "cmdoption-tblgen-gicombiner-stop-after-build", false]], "-gicombiner-stop-after-parse": [[650, "cmdoption-tblgen-gicombiner-stop-after-parse", false]], "-gisel-coverage-file": [[650, "cmdoption-tblgen-gisel-coverage-file", false]], "-global-extras": [[636, "cmdoption-llvm-pdbutil-dump-global-extras", false]], "-globals": [[636, "cmdoption-llvm-pdbutil-dump-globals", false], [636, "cmdoption-llvm-pdbutil-pretty-globals", false]], "-h": [[606, "cmdoption-dsymutil-help", false], [608, "cmdoption-lit-h", false], [613, "cmdoption-llvm-ar-h", false], [618, "cmdoption-llvm-cxxfilt-help", false], [622, "cmdoption-llvm-dwarfdump-h", false], [625, "cmdoption-llvm-install-name-tool-help", false], [627, "cmdoption-llvm-libtool-darwin-h", false], [629, "cmdoption-llvm-lipo-help", false], [632, "cmdoption-llvm-nm-help", false], [633, "cmdoption-llvm-objcopy-help", false], [634, "cmdoption-llvm-objdump-h", false], [635, "cmdoption-llvm-otool-h", false], [640, "cmdoption-llvm-readelf-file-header", false], [641, "cmdoption-llvm-readobj-file-header", false], [642, "cmdoption-llvm-size-help", false], [644, "cmdoption-llvm-strings-help", false], [645, "cmdoption-llvm-strip-help", false], [646, "cmdoption-llvm-symbolizer-help", false]], "-help": [[603, "cmdoption-FileCheck-help", false], [609, "cmdoption-llc-help", false], [611, "cmdoption-lli-help", false], [615, "cmdoption-llvm-bcanalyzer-help", false], [623, "cmdoption-llvm-exegesis-help", false], [627, "cmdoption-llvm-libtool-darwin-h", false], [628, "cmdoption-llvm-link-help", false], [629, "cmdoption-llvm-lipo-help", false], [631, "cmdoption-llvm-mca-help", false], [637, "cmdoption-llvm-profdata-merge-help", false], [637, "cmdoption-llvm-profdata-overlap-help", false], [637, "cmdoption-llvm-profdata-show-help", false], [649, "cmdoption-opt-help", false], [650, "cmdoption-tblgen-help", false]], "-help-list": [[627, "cmdoption-llvm-libtool-darwin-help-list", false], [650, "cmdoption-tblgen-help-list", false]], "-i": [[622, "cmdoption-llvm-dwarfdump-i", false], [633, "cmdoption-llvm-objcopy-input-target", false], [635, "cmdoption-llvm-otool-I", false], [640, "cmdoption-llvm-readelf-histogram", false], [641, "cmdoption-llvm-readobj-histogram", false], [646, "cmdoption-llvm-symbolizer-inlining", false], [650, "cmdoption-tblgen-I", false]], "-id": [[625, "cmdoption-llvm-install-name-tool-id", false], [636, "cmdoption-llvm-pdbutil-bytes-id", false]], "-id-data": [[636, "cmdoption-llvm-pdbutil-dump-id-data", false]], "-id-extras": [[636, "cmdoption-llvm-pdbutil-dump-id-extras", false]], "-id-index": [[636, "cmdoption-llvm-pdbutil-dump-id-index", false]], "-ids": [[636, "cmdoption-llvm-pdbutil-dump-ids", false]], "-ignore-filename-regex": [[617, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [617, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [617, "cmdoption-llvm-cov-show-ignore-filename-regex", false]], "-ignore-invalid-sched-class": [[623, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", false]], "-il": [[636, "cmdoption-llvm-pdbutil-dump-il", false]], "-include-compilands": [[636, "cmdoption-llvm-pdbutil-pretty-include-compilands", false]], "-include-symbols": [[636, "cmdoption-llvm-pdbutil-pretty-include-symbols", false]], "-include-types": [[636, "cmdoption-llvm-pdbutil-pretty-include-types", false]], "-info": [[629, "cmdoption-llvm-lipo-info", false]], "-input-files": [[637, "cmdoption-llvm-profdata-merge-input-files", false]], "-instr": [[637, "cmdoption-llvm-profdata-merge-instr", false], [637, "cmdoption-llvm-profdata-show-instr", false]], "-instr-prof-cold-threshold": [[637, "cmdoption-llvm-profdata-merge-instr-prof-cold-threshold", false]], "-instruction-info": [[631, "cmdoption-llvm-mca-instruction-info", false]], "-instruction-tables": [[631, "cmdoption-llvm-mca-instruction-tables", false]], "-instrument-coverage": [[650, "cmdoption-tblgen-instrument-coverage", false]], "-instrument-gisel-coverage": [[650, "cmdoption-tblgen-instrument-gisel-coverage", false]], "-intrinsic-prefix": [[650, "cmdoption-tblgen-intrinsic-prefix", false]], "-iterations": [[631, "cmdoption-llvm-mca-iterations", false]], "-j": [[606, "cmdoption-dsymutil-num-threads", false], [608, "cmdoption-lit-j", false], [617, "cmdoption-llvm-cov-export-num-threads", false], [617, "cmdoption-llvm-cov-show-num-threads", false], [632, "cmdoption-llvm-nm-j", false], [633, "cmdoption-llvm-objcopy-only-section", false], [634, "cmdoption-llvm-objdump-j", false], [635, "cmdoption-llvm-otool-j", false], [637, "cmdoption-llvm-profdata-merge-num-threads", false]], "-jit-enable-eh": [[611, "cmdoption-lli-jit-enable-eh", false]], "-join-liveintervals": [[611, "cmdoption-lli-join-liveintervals", false]], "-json": [[631, "cmdoption-llvm-mca-json", false]], "-k": [[633, "cmdoption-llvm-objcopy-keep-symbol", false], [645, "cmdoption-llvm-strip-keep-symbol", false]], "-l": [[617, "cmdoption-llvm-cov-gcov-l", false], [627, "cmdoption-llvm-libtool-darwin-L", false], [627, "cmdoption-llvm-libtool-darwin-l", false], [633, "cmdoption-llvm-objcopy-localize-symbol", false], [634, "cmdoption-llvm-objdump-l", false], [635, "cmdoption-llvm-otool-L", false], [635, "cmdoption-llvm-otool-l", false], [636, "cmdoption-llvm-pdbutil-dump-l", false], [640, "cmdoption-llvm-readelf-program-headers", false], [641, "cmdoption-llvm-readobj-program-headers", false], [642, "cmdoption-llvm-size-l", false]], "-line-coverage-gt": [[617, "cmdoption-llvm-cov-show-line-coverage-gt", false]], "-line-coverage-lt": [[617, "cmdoption-llvm-cov-show-line-coverage-lt", false]], "-lines": [[636, "cmdoption-llvm-pdbutil-pretty-lines", false]], "-list-below-cutoff": [[637, "cmdoption-llvm-profdata-show-list-below-cutoff", false]], "-llvmir-intrinsics-filter": [[650, "cmdoption-tblgen-llvmir-intrinsics-filter", false]], "-load": [[611, "cmdoption-lli-load", false], [649, "cmdoption-opt-load", false]], "-load-address": [[636, "cmdoption-llvm-pdbutil-pretty-load-address", false]], "-long-string-literals": [[650, "cmdoption-tblgen-long-string-literals", false]], "-loop-body-size": [[623, "cmdoption-llvm-exegesis-loop-body-size", false]], "-lqueue": [[631, "cmdoption-llvm-mca-lqueue", false]], "-lto-pass-remarks-filter": [[745, "cmdoption-lto-pass-remarks-filter", false]], "-lto-pass-remarks-format": [[745, "cmdoption-lto-pass-remarks-format", false]], "-lto-pass-remarks-hotness-threshold": [[745, "cmdoption-lto-pass-remarks-hotness-threshold", false]], "-lto-pass-remarks-output": [[745, "cmdoption-lto-pass-remarks-output", false]], "-lto-pass-remarks-with-hotness": [[745, "cmdoption-lto-pass-remarks-with-hotness", false]], "-m": [[613, "cmdoption-llvm-ar-M", false], [617, "cmdoption-llvm-cov-gcov-m", false], [632, "cmdoption-llvm-nm-m", false], [634, "cmdoption-llvm-objdump-M", false], [634, "cmdoption-llvm-objdump-m", false], [642, "cmdoption-llvm-size-m", false]], "-march": [[609, "cmdoption-llc-march", false], [611, "cmdoption-lli-march", false], [631, "cmdoption-llvm-mca-march", false]], "-match-prefix": [[650, "cmdoption-tblgen-match-prefix", false]], "-mattr": [[609, "cmdoption-llc-mattr", false], [611, "cmdoption-lli-mattr", false]], "-max-configs-per-opcode": [[623, "cmdoption-llvm-exegesis-max-configs-per-opcode", false]], "-mcpu": [[609, "cmdoption-llc-mcpu", false], [611, "cmdoption-lli-mcpu", false], [623, "cmdoption-llvm-exegesis-mcpu", false], [631, "cmdoption-llvm-mca-mcpu", false], [635, "cmdoption-llvm-otool-mcpu", false]], "-meabi": [[609, "cmdoption-llc-meabi", false]], "-memop-sizes": [[637, "cmdoption-llvm-profdata-show-memop-sizes", false]], "-min-class-padding": [[636, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false]], "-min-class-padding-imm": [[636, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false]], "-min-type-size": [[636, "cmdoption-llvm-pdbutil-pretty-min-type-size", false]], "-mod": [[636, "cmdoption-llvm-pdbutil-bytes-mod", false]], "-mode": [[623, "cmdoption-llvm-exegesis-mode", false]], "-modi": [[636, "cmdoption-llvm-pdbutil-bytes-modi", false], [636, "cmdoption-llvm-pdbutil-dump-modi", false]], "-module-syms": [[636, "cmdoption-llvm-pdbutil-pretty-module-syms", false]], "-modules": [[636, "cmdoption-llvm-pdbutil-dump-modules", false]], "-mtriple": [[609, "cmdoption-llc-mtriple", false], [611, "cmdoption-lli-mtriple", false], [631, "cmdoption-llvm-mca-mtriple", false]], "-n": [[617, "cmdoption-llvm-cov-gcov-n", false], [618, "cmdoption-llvm-cxxfilt-no-strip-underscore", false], [622, "cmdoption-llvm-dwarfdump-n", false], [632, "cmdoption-llvm-nm-numeric-sort", false], [633, "cmdoption-llvm-objcopy-strip-symbol", false], [640, "cmdoption-llvm-readelf-notes", false], [641, "cmdoption-llvm-readobj-notes", false], [644, "cmdoption-llvm-strings-bytes", false], [645, "cmdoption-llvm-strip-strip-symbol", false]], "-name": [[617, "cmdoption-llvm-cov-show-name", false], [650, "cmdoption-tblgen-name", false]], "-name-map": [[636, "cmdoption-llvm-pdbutil-bytes-name-map", false]], "-name-regex": [[617, "cmdoption-llvm-cov-show-name-regex", false]], "-name-whitelist": [[617, "cmdoption-llvm-cov-show-name-whitelist", false]], "-no-compiler-generated": [[636, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false]], "-no-enum-definitions": [[636, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false]], "-no-system-libs": [[636, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false]], "-no_warning_for_no_symbols": [[627, "cmdoption-llvm-libtool-darwin-no_warning_for_no_symbols", false]], "-noalias": [[631, "cmdoption-llvm-mca-noalias", false]], "-nodetails": [[615, "cmdoption-llvm-bcanalyzer-nodetails", false]], "-nozero-initialized-in-bss": [[611, "cmdoption-lli-nozero-initialized-in-bss", false]], "-null-backend": [[650, "cmdoption-tblgen-null-backend", false]], "-num-repetitions": [[623, "cmdoption-llvm-exegesis-num-repetitions", false]], "-num-threads": [[617, "cmdoption-llvm-cov-export-num-threads", false], [617, "cmdoption-llvm-cov-show-num-threads", false], [637, "cmdoption-llvm-profdata-merge-num-threads", false]], "-o": [[606, "cmdoption-dsymutil-out", false], [609, "cmdoption-llc-O", false], [609, "cmdoption-llc-o", false], [617, "cmdoption-llvm-cov-gcov-o", false], [619, "cmdoption-llvm-cxxmap-output", false], [622, "cmdoption-llvm-dwarfdump-o", false], [627, "cmdoption-llvm-libtool-darwin-o", false], [628, "cmdoption-llvm-link-o", false], [631, "cmdoption-llvm-mca-o", false], [632, "cmdoption-llvm-nm-print-file-name", false], [633, "cmdoption-llvm-objcopy-output-target", false], [635, "cmdoption-llvm-otool-o", false], [637, "cmdoption-llvm-profdata-merge-output", false], [637, "cmdoption-llvm-profdata-overlap-o", false], [637, "cmdoption-llvm-profdata-show-output", false], [642, "cmdoption-llvm-size-o", false], [643, "cmdoption-llvm-stress-o", false], [645, "cmdoption-llvm-strip-o", false], [649, "cmdoption-opt-o", false], [650, "cmdoption-tblgen-o", false]], "-omit-comments": [[650, "cmdoption-tblgen-omit-comments", false]], "-op-exclude-regex": [[650, "cmdoption-tblgen-op-exclude-regex", false]], "-op-include-regex": [[650, "cmdoption-tblgen-op-include-regex", false]], "-opcode-index": [[623, "cmdoption-llvm-exegesis-opcode-index", false]], "-opcode-name": [[623, "cmdoption-llvm-exegesis-opcode-name", false]], "-opt-remarks-filename": [[745, "cmdoption-opt-remarks-filename", false]], "-opt-remarks-filter": [[745, "cmdoption-opt-remarks-filter", false]], "-opt-remarks-format": [[745, "cmdoption-opt-remarks-format", false]], "-opt-remarks-with-hotness": [[745, "cmdoption-opt-remarks-with-hotness", false]], "-optimize-match-table": [[650, "cmdoption-tblgen-optimize-match-table", false]], "-output": [[619, "cmdoption-llvm-cxxmap-output", false], [637, "cmdoption-llvm-profdata-merge-output", false], [637, "cmdoption-llvm-profdata-show-output", false]], "-output-asm-variant": [[631, "cmdoption-llvm-mca-output-asm-variant", false]], "-output-dir": [[617, "cmdoption-llvm-cov-show-output-dir", false]], "-p": [[617, "cmdoption-llvm-cov-gcov-p", false], [622, "cmdoption-llvm-dwarfdump-p", false], [632, "cmdoption-llvm-nm-portability", false], [632, "cmdoption-llvm-nm-no-sort", false], [633, "cmdoption-llvm-objcopy-preserve-dates", false], [634, "cmdoption-llvm-objdump-p", false], [635, "cmdoption-llvm-otool-P", false], [635, "cmdoption-llvm-otool-p", false], [640, "cmdoption-llvm-readelf-string-dump", false], [641, "cmdoption-llvm-readobj-string-dump", false], [645, "cmdoption-llvm-strip-preserve-dates", false], [646, "cmdoption-llvm-symbolizer-pretty-print", false], [649, "cmdoption-opt-p", false]], "-pass-remarks": [[745, "cmdoption-pass-remarks", false]], "-pass-remarks-analysis": [[745, "cmdoption-pass-remarks-analysis", false]], "-pass-remarks-filter": [[745, "cmdoption-pass-remarks-filter", false]], "-pass-remarks-format": [[745, "cmdoption-pass-remarks-format", false]], "-pass-remarks-hotness-threshold": [[745, "cmdoption-pass-remarks-hotness-threshold", false]], "-pass-remarks-missed": [[745, "cmdoption-pass-remarks-missed", false]], "-pass-remarks-output": [[745, "cmdoption-pass-remarks-output", false]], "-pass-remarks-with-hotness": [[745, "cmdoption-pass-remarks-with-hotness", false]], "-path-equivalence": [[617, "cmdoption-llvm-cov-show-path-equivalence", false]], "-pdb": [[636, "cmdoption-llvm-pdbutil-merge-pdb", false], [636, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "-pre-ra-sched": [[611, "cmdoption-lli-pre-RA-sched", false]], "-print-detailed-records": [[650, "cmdoption-tblgen-print-detailed-records", false]], "-print-enums": [[650, "cmdoption-tblgen-print-enums", false]], "-print-imm-hex": [[631, "cmdoption-llvm-mca-print-imm-hex", false]], "-print-records": [[650, "cmdoption-tblgen-print-records", false]], "-print-sets": [[650, "cmdoption-tblgen-print-sets", false]], "-prof-sym-list": [[637, "cmdoption-llvm-profdata-merge-prof-sym-list", false]], "-public-extras": [[636, "cmdoption-llvm-pdbutil-dump-public-extras", false]], "-publics": [[636, "cmdoption-llvm-pdbutil-dump-publics", false]], "-q": [[608, "cmdoption-lit-q", false]], "-r": [[617, "cmdoption-llvm-cov-gcov-r", false], [619, "cmdoption-llvm-cxxmap-remapping-file", false], [622, "cmdoption-llvm-dwarfdump-r", false], [632, "cmdoption-llvm-nm-reverse-sort", false], [633, "cmdoption-llvm-objcopy-remove-section", false], [634, "cmdoption-llvm-objdump-R", false], [634, "cmdoption-llvm-objdump-r", false], [635, "cmdoption-llvm-otool-r", false], [637, "cmdoption-llvm-profdata-merge-remapping-file", false], [640, "cmdoption-llvm-readelf-relocations", false], [641, "cmdoption-llvm-readobj-relocations", false], [645, "cmdoption-llvm-strip-remove-section", false]], "-regalloc": [[611, "cmdoption-lli-regalloc", false]], "-region-coverage-gt": [[617, "cmdoption-llvm-cov-show-region-coverage-gt", false]], "-region-coverage-lt": [[617, "cmdoption-llvm-cov-show-region-coverage-lt", false]], "-register-file-size": [[631, "cmdoption-llvm-mca-register-file-size", false]], "-register-file-stats": [[631, "cmdoption-llvm-mca-register-file-stats", false]], "-register-info-debug": [[650, "cmdoption-tblgen-register-info-debug", false]], "-relocation-model": [[611, "cmdoption-lli-relocation-model", false]], "-remapping-file": [[619, "cmdoption-llvm-cxxmap-remapping-file", false], [637, "cmdoption-llvm-profdata-merge-remapping-file", false]], "-remarks-section": [[609, "cmdoption-llc-remarks-section", false]], "-repetition-mode": [[623, "cmdoption-llvm-exegesis-repetition-mode", false]], "-replace": [[629, "cmdoption-llvm-lipo-replace", false]], "-resource-pressure": [[631, "cmdoption-llvm-mca-resource-pressure", false]], "-retire-stats": [[631, "cmdoption-llvm-mca-retire-stats", false]], "-rpath": [[625, "cmdoption-llvm-install-name-tool-rpath", false]], "-s": [[606, "cmdoption-dsymutil-S", false], [606, "cmdoption-dsymutil-s", false], [608, "cmdoption-lit-s", false], [617, "cmdoption-llvm-cov-gcov-s", false], [618, "cmdoption-llvm-cxxfilt-format", false], [628, "cmdoption-llvm-link-S", false], [632, "cmdoption-llvm-nm-print-size", false], [632, "cmdoption-llvm-nm-s", false], [633, "cmdoption-llvm-objcopy-strip-all", false], [634, "cmdoption-llvm-objdump-S", false], [634, "cmdoption-llvm-objdump-s", false], [635, "cmdoption-llvm-otool-s", false], [640, "cmdoption-llvm-readelf-sections", false], [640, "cmdoption-llvm-readelf-symbols", false], [641, "cmdoption-llvm-readobj-sections", false], [641, "cmdoption-llvm-readobj-symbols", false], [645, "cmdoption-llvm-strip-strip-debug", false], [645, "cmdoption-llvm-strip-strip-all", false], [646, "cmdoption-llvm-symbolizer-basenames", false], [649, "cmdoption-opt-S", false]], "-sample": [[637, "cmdoption-llvm-profdata-merge-sample", false], [637, "cmdoption-llvm-profdata-show-sample", false]], "-sc": [[636, "cmdoption-llvm-pdbutil-bytes-sc", false]], "-scheduler-stats": [[631, "cmdoption-llvm-mca-scheduler-stats", false]], "-section-contribs": [[636, "cmdoption-llvm-pdbutil-dump-section-contribs", false]], "-section-headers": [[636, "cmdoption-llvm-pdbutil-dump-section-headers", false]], "-section-map": [[636, "cmdoption-llvm-pdbutil-dump-section-map", false]], "-seed": [[643, "cmdoption-llvm-stress-seed", false]], "-segalign": [[629, "cmdoption-llvm-lipo-segalign", false]], "-show-branch-summary": [[617, "cmdoption-llvm-cov-report-show-branch-summary", false]], "-show-branches": [[617, "cmdoption-llvm-cov-show-show-branches", false]], "-show-encoding": [[631, "cmdoption-llvm-mca-show-encoding", false]], "-show-expansions": [[617, "cmdoption-llvm-cov-show-show-expansions", false]], "-show-functions": [[617, "cmdoption-llvm-cov-report-show-functions", false]], "-show-instantiation-summary": [[617, "cmdoption-llvm-cov-report-show-instantiation-summary", false]], "-show-instantiations": [[617, "cmdoption-llvm-cov-show-show-instantiations", false]], "-show-line-counts": [[617, "cmdoption-llvm-cov-show-show-line-counts", false]], "-show-line-counts-or-regions": [[617, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false]], "-show-prof-sym-list": [[637, "cmdoption-llvm-profdata-show-show-prof-sym-list", false]], "-show-region-summary": [[617, "cmdoption-llvm-cov-report-show-region-summary", false]], "-show-regions": [[617, "cmdoption-llvm-cov-show-show-regions", false]], "-show-sec-info-only": [[637, "cmdoption-llvm-profdata-show-show-sec-info-only", false]], "-showcs": [[637, "cmdoption-llvm-profdata-show-showcs", false]], "-size": [[643, "cmdoption-llvm-stress-size", false]], "-skip-expansions": [[617, "cmdoption-llvm-cov-export-skip-expansions", false]], "-skip-functions": [[617, "cmdoption-llvm-cov-export-skip-functions", false]], "-sm": [[636, "cmdoption-llvm-pdbutil-bytes-sm", false]], "-snippets-file": [[623, "cmdoption-llvm-exegesis-snippets-file", false]], "-soft-float": [[611, "cmdoption-lli-soft-float", false]], "-sparse": [[637, "cmdoption-llvm-profdata-merge-sparse", false]], "-spiller": [[611, "cmdoption-lli-spiller", false]], "-split-chunks": [[636, "cmdoption-llvm-pdbutil-bytes-split-chunks", false]], "-squeue": [[631, "cmdoption-llvm-mca-squeue", false]], "-stack-size-section": [[609, "cmdoption-llc-stack-size-section", false]], "-static": [[627, "cmdoption-llvm-libtool-darwin-static", false]], "-stats": [[611, "cmdoption-lli-stats", false], [649, "cmdoption-opt-stats", false], [650, "cmdoption-tblgen-stats", false]], "-stream-blocks": [[636, "cmdoption-llvm-pdbutil-dump-stream-blocks", false]], "-stream-data": [[636, "cmdoption-llvm-pdbutil-bytes-stream-data", false]], "-streams": [[636, "cmdoption-llvm-pdbutil-dump-streams", false]], "-string-table": [[636, "cmdoption-llvm-pdbutil-dump-string-table", false]], "-strip-debug": [[649, "cmdoption-opt-strip-debug", false]], "-summary": [[636, "cmdoption-llvm-pdbutil-dump-summary", false]], "-summary-only": [[617, "cmdoption-llvm-cov-export-summary-only", false]], "-suppl-min-size-threshold": [[637, "cmdoption-llvm-profdata-merge-suppl-min-size-threshold", false]], "-supplement-instr-with-sample": [[637, "cmdoption-llvm-profdata-merge-supplement-instr-with-sample", false]], "-sym-data": [[636, "cmdoption-llvm-pdbutil-dump-sym-data", false]], "-sym-types": [[636, "cmdoption-llvm-pdbutil-pretty-sym-types", false]], "-symbol-order": [[636, "cmdoption-llvm-pdbutil-pretty-symbol-order", false]], "-symbols": [[636, "cmdoption-llvm-pdbutil-dump-symbols", false]], "-syms": [[636, "cmdoption-llvm-pdbutil-bytes-syms", false]], "-t": [[617, "cmdoption-llvm-cov-gcov-t", false], [618, "cmdoption-llvm-cxxfilt-types", false], [632, "cmdoption-llvm-nm-radix", false], [634, "cmdoption-llvm-objdump-T", false], [634, "cmdoption-llvm-objdump-t", false], [635, "cmdoption-llvm-otool-t", false], [640, "cmdoption-llvm-readelf-section-details", false], [642, "cmdoption-llvm-size-totals", false], [644, "cmdoption-llvm-strings-radix", false], [645, "cmdoption-llvm-strip-T", false]], "-tab-size": [[617, "cmdoption-llvm-cov-show-tab-size", false]], "-text": [[637, "cmdoption-llvm-profdata-merge-text", false], [637, "cmdoption-llvm-profdata-show-text", false]], "-thin": [[629, "cmdoption-llvm-lipo-thin", false]], "-time-passes": [[611, "cmdoption-lli-time-passes", false], [649, "cmdoption-opt-time-passes", false]], "-time-phases": [[650, "cmdoption-tblgen-time-phases", false]], "-timeline": [[631, "cmdoption-llvm-mca-timeline", false]], "-timeline-max-cycles": [[631, "cmdoption-llvm-mca-timeline-max-cycles", false]], "-timeline-max-iterations": [[631, "cmdoption-llvm-mca-timeline-max-iterations", false]], "-topn": [[637, "cmdoption-llvm-profdata-show-topn", false]], "-type": [[636, "cmdoption-llvm-pdbutil-bytes-type", false]], "-type-data": [[636, "cmdoption-llvm-pdbutil-dump-type-data", false]], "-type-extras": [[636, "cmdoption-llvm-pdbutil-dump-type-extras", false]], "-type-index": [[636, "cmdoption-llvm-pdbutil-dump-type-index", false]], "-type-server": [[636, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "-typedefs": [[636, "cmdoption-llvm-pdbutil-pretty-typedefs", false]], "-typedefs-dialect": [[650, "cmdoption-tblgen-typedefs-dialect", false]], "-types": [[636, "cmdoption-llvm-pdbutil-dump-types", false], [636, "cmdoption-llvm-pdbutil-pretty-types", false]], "-u": [[606, "cmdoption-dsymutil-u", false], [617, "cmdoption-llvm-cov-gcov-u", false], [622, "cmdoption-llvm-dwarfdump-u", false], [627, "cmdoption-llvm-libtool-darwin-U", false], [632, "cmdoption-llvm-nm-undefined-only", false], [633, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [634, "cmdoption-llvm-objdump-u", false], [640, "cmdoption-llvm-readelf-unwind", false], [641, "cmdoption-llvm-readobj-unwind", false], [645, "cmdoption-llvm-strip-disable-deterministic-archives", false]], "-use-color": [[617, "cmdoption-llvm-cov-report-use-color", false], [617, "cmdoption-llvm-cov-show-use-color", false]], "-use-md5": [[637, "cmdoption-llvm-profdata-merge-use-md5", false]], "-v": [[603, "cmdoption-FileCheck-v", false], [606, "cmdoption-dsymutil-v", false], [608, "cmdoption-lit-v", false], [622, "cmdoption-llvm-dwarfdump-v", false], [625, "cmdoption-llvm-install-name-tool-version", false], [627, "cmdoption-llvm-libtool-darwin-V", false], [628, "cmdoption-llvm-link-v", false], [632, "cmdoption-llvm-nm-version", false], [632, "cmdoption-llvm-nm-numeric-sort", false], [633, "cmdoption-llvm-objcopy-version", false], [634, "cmdoption-llvm-objdump-v", false], [635, "cmdoption-llvm-otool-V", false], [635, "cmdoption-llvm-otool-v", false], [640, "cmdoption-llvm-readelf-version-info", false], [641, "cmdoption-llvm-readobj-version-info", false], [645, "cmdoption-llvm-strip-version", false], [646, "cmdoption-llvm-symbolizer-version", false]], "-value-cutoff": [[637, "cmdoption-llvm-profdata-overlap-value-cutoff", false], [637, "cmdoption-llvm-profdata-show-value-cutoff", false]], "-verify": [[615, "cmdoption-llvm-bcanalyzer-verify", false]], "-verify-each": [[649, "cmdoption-opt-verify-each", false]], "-verify_arch": [[629, "cmdoption-llvm-lipo-verify_arch", false]], "-version": [[603, "cmdoption-FileCheck-version", false], [611, "cmdoption-lli-version", false], [617, "cmdoption-llvm-cov-gcov-version", false], [627, "cmdoption-llvm-libtool-darwin-version", false], [629, "cmdoption-llvm-lipo-version", false], [650, "cmdoption-tblgen-version", false]], "-vv": [[603, "cmdoption-FileCheck-vv", false], [608, "cmdoption-lit-vv", false]], "-w": [[633, "cmdoption-llvm-objcopy-weaken-symbol", false], [633, "cmdoption-llvm-objcopy-wildcard", false], [634, "cmdoption-llvm-objdump-w", false], [645, "cmdoption-llvm-strip-wildcard", false]], "-wambiguous": [[619, "cmdoption-llvm-cxxmap-Wambiguous", false]], "-warn-on-skipped-patterns": [[650, "cmdoption-tblgen-warn-on-skipped-patterns", false]], "-weighted-input": [[637, "cmdoption-llvm-profdata-merge-weighted-input", false]], "-wincomplete": [[619, "cmdoption-llvm-cxxmap-Wincomplete", false]], "-write-if-changed": [[650, "cmdoption-tblgen-write-if-changed", false]], "-x": [[617, "cmdoption-llvm-cov-gcov-x", false], [622, "cmdoption-llvm-dwarfdump-x", false], [632, "cmdoption-llvm-nm-x", false], [633, "cmdoption-llvm-objcopy-discard-locals", false], [633, "cmdoption-llvm-objcopy-discard-all", false], [634, "cmdoption-llvm-objdump-x", false], [635, "cmdoption-llvm-otool-X", false], [635, "cmdoption-llvm-otool-x", false], [640, "cmdoption-llvm-readelf-hex-dump", false], [641, "cmdoption-llvm-readobj-hex-dump", false], [642, "cmdoption-llvm-size-x", false], [645, "cmdoption-llvm-strip-discard-locals", false], [645, "cmdoption-llvm-strip-discard-all", false]], "-x86-asm-syntax": [[611, "cmdoption-lli-x86-asm-syntax", false]], "-x86-lbr-sample-period": [[623, "cmdoption-llvm-exegesis-x86-lbr-sample-period", false]], "-xdemangler": [[617, "cmdoption-llvm-cov-show-Xdemangler", false]], "-xme": [[636, "cmdoption-llvm-pdbutil-dump-xme", false]], "-xmi": [[636, "cmdoption-llvm-pdbutil-dump-xmi", false]], "-y": [[606, "cmdoption-dsymutil-y", false]], "-z": [[606, "cmdoption-dsymutil-minimize", false], [634, "cmdoption-llvm-objdump-z", false]], "-zero-counter-threshold": [[637, "cmdoption-llvm-profdata-merge-zero-counter-threshold", false]], "-{passname}": [[649, "cmdoption-opt-passname", false]], "@<file>": [[613, "cmdoption-llvm-ar-arg-FILE", false], [618, "cmdoption-llvm-cxxfilt-arg-FILE", false], [622, "cmdoption-llvm-dwarfdump-arg-FILE", false], [632, "cmdoption-llvm-nm-arg-FILE", false], [633, "cmdoption-llvm-objcopy-arg-FILE", false], [634, "cmdoption-llvm-objdump-arg-FILE", false], [635, "cmdoption-llvm-otool-arg-FILE", false], [640, "cmdoption-llvm-readelf-arg-FILE", false], [641, "cmdoption-llvm-readobj-arg-FILE", false], [642, "cmdoption-llvm-size-arg-FILE", false], [644, "cmdoption-llvm-strings-arg-FILE", false], [645, "cmdoption-llvm-strip-arg-FILE", false], [646, "cmdoption-llvm-symbolizer-arg-FILE", false]], "``posix``": [[613, "cmdoption-llvm-ar-arg-posix", false]], "a": [[613, "cmdoption-llvm-ar-arg-a", false]], "addlib": [[613, "cmdoption-llvm-ar-arg-ADDLIB", false]], "addmod": [[613, "cmdoption-llvm-ar-arg-ADDMOD", false]], "att": [[634, "cmdoption-llvm-objdump-arg-att", false]], "b": [[613, "cmdoption-llvm-ar-arg-b", false]], "c": [[613, "cmdoption-llvm-ar-arg-c", false]], "create": [[613, "cmdoption-llvm-ar-arg-CREATE", false]], "createthin": [[613, "cmdoption-llvm-ar-arg-CREATETHIN", false]], "d": [[613, "cmdoption-llvm-ar-arg-D", false], [613, "cmdoption-llvm-ar-arg-d", false]], "default": [[613, "cmdoption-llvm-ar-arg-default", false]], "delete": [[613, "cmdoption-llvm-ar-arg-DELETE", false]], "dsymutil \u547d\u4ee4\u5217\u9078\u9805": [[606, "cmdoption-dsymutil-S", false], [606, "cmdoption-dsymutil-accelerator", false], [606, "cmdoption-dsymutil-arch", false], [606, "cmdoption-dsymutil-dump-debug-map", false], [606, "cmdoption-dsymutil-flat", false], [606, "cmdoption-dsymutil-gen-reproducer", false], [606, "cmdoption-dsymutil-help", false], [606, "cmdoption-dsymutil-keep-function-for-static", false], [606, "cmdoption-dsymutil-minimize", false], [606, "cmdoption-dsymutil-no-odr", false], [606, "cmdoption-dsymutil-no-output", false], [606, "cmdoption-dsymutil-no-swiftmodule-timestamp", false], [606, "cmdoption-dsymutil-num-threads", false], [606, "cmdoption-dsymutil-object-prefix-map", false], [606, "cmdoption-dsymutil-oso-prepend-path", false], [606, "cmdoption-dsymutil-out", false], [606, "cmdoption-dsymutil-papertrail", false], [606, "cmdoption-dsymutil-remarks-output-format", false], [606, "cmdoption-dsymutil-remarks-prepend-path", false], [606, "cmdoption-dsymutil-s", false], [606, "cmdoption-dsymutil-statistics", false], [606, "cmdoption-dsymutil-symbol-map", false], [606, "cmdoption-dsymutil-toolchain", false], [606, "cmdoption-dsymutil-u", false], [606, "cmdoption-dsymutil-use-reproducer", false], [606, "cmdoption-dsymutil-v", false], [606, "cmdoption-dsymutil-verbose", false], [606, "cmdoption-dsymutil-verify", false], [606, "cmdoption-dsymutil-y", false]], "either": [[613, "cmdoption-llvm-ar-arg-This", false]], "end": [[613, "cmdoption-llvm-ar-arg-END", false]], "filecheck \u547d\u4ee4\u5217\u9078\u9805": [[603, "cmdoption-FileCheck-D-FMT-NUMVAR", false], [603, "cmdoption-FileCheck-D-VAR", false], [603, "cmdoption-FileCheck-allow-deprecated-dag-overlap", false], [603, "cmdoption-FileCheck-allow-empty", false], [603, "cmdoption-FileCheck-allow-unused-prefixes", false], [603, "cmdoption-FileCheck-check-prefix", false], [603, "cmdoption-FileCheck-check-prefixes", false], [603, "cmdoption-FileCheck-color", false], [603, "cmdoption-FileCheck-comment-prefixes", false], [603, "cmdoption-FileCheck-dump-input", false], [603, "cmdoption-FileCheck-dump-input-context", false], [603, "cmdoption-FileCheck-dump-input-filter", false], [603, "cmdoption-FileCheck-enable-var-scope", false], [603, "cmdoption-FileCheck-help", false], [603, "cmdoption-FileCheck-ignore-case", false], [603, "cmdoption-FileCheck-implicit-check-not", false], [603, "cmdoption-FileCheck-input-file", false], [603, "cmdoption-FileCheck-match-full-lines", false], [603, "cmdoption-FileCheck-strict-whitespace", false], [603, "cmdoption-FileCheck-v", false], [603, "cmdoption-FileCheck-version", false], [603, "cmdoption-FileCheck-vv", false]], "gen-lldb-option-defs": [[650, "cmdoption-tblgen-arg-gen-lldb-option-defs", false]], "gen-lldb-property-defs": [[650, "cmdoption-tblgen-arg-gen-lldb-property-defs", false]], "gen-lldb-property-enum-defs": [[650, "cmdoption-tblgen-arg-gen-lldb-property-enum-defs", false]], "i": [[613, "cmdoption-llvm-ar-arg-i", false]], "intel": [[634, "cmdoption-llvm-objdump-arg-intel", false]], "l": [[613, "cmdoption-llvm-ar-arg-L", false]], "lit \u547d\u4ee4\u5217\u9078\u9805": [[608, "cmdoption-lit-D", false], [608, "cmdoption-lit-a", false], [608, "cmdoption-lit-config-prefix", false], [608, "cmdoption-lit-debug", false], [608, "cmdoption-lit-filter", false], [608, "cmdoption-lit-filter-out", false], [608, "cmdoption-lit-h", false], [608, "cmdoption-lit-ignore-fail", false], [608, "cmdoption-lit-j", false], [608, "cmdoption-lit-max-failures", false], [608, "cmdoption-lit-max-tests", false], [608, "cmdoption-lit-max-time", false], [608, "cmdoption-lit-no-indirectly-run-check", false], [608, "cmdoption-lit-no-progress-bar", false], [608, "cmdoption-lit-num-shards", false], [608, "cmdoption-lit-path", false], [608, "cmdoption-lit-q", false], [608, "cmdoption-lit-run-shard", false], [608, "cmdoption-lit-s", false], [608, "cmdoption-lit-show-suites", false], [608, "cmdoption-lit-show-tests", false], [608, "cmdoption-lit-show-unsupported", false], [608, "cmdoption-lit-show-xfail", false], [608, "cmdoption-lit-shuffle", false], [608, "cmdoption-lit-time-tests", false], [608, "cmdoption-lit-timeout", false], [608, "cmdoption-lit-v", false], [608, "cmdoption-lit-vg", false], [608, "cmdoption-lit-vg-arg", false], [608, "cmdoption-lit-vg-leak", false], [608, "cmdoption-lit-vv", false], [608, "cmdoption-lit-xfail", false], [608, "cmdoption-lit-xfail-not", false]], "llc \u547d\u4ee4\u5217\u9078\u9805": [[609, "cmdoption-llc-O", false], [609, "cmdoption-llc-disable-excess-fp-precision", false], [609, "cmdoption-llc-enable-no-infs-fp-math", false], [609, "cmdoption-llc-enable-no-nans-fp-math", false], [609, "cmdoption-llc-enable-no-signed-zeros-fp-math", false], [609, "cmdoption-llc-enable-no-trapping-fp-math", false], [609, "cmdoption-llc-enable-unsafe-fp-math", false], [609, "cmdoption-llc-filetype", false], [609, "cmdoption-llc-frame-pointer", false], [609, "cmdoption-llc-help", false], [609, "cmdoption-llc-load", false], [609, "cmdoption-llc-march", false], [609, "cmdoption-llc-mattr", false], [609, "cmdoption-llc-mcpu", false], [609, "cmdoption-llc-meabi", false], [609, "cmdoption-llc-mtriple", false], [609, "cmdoption-llc-o", false], [609, "cmdoption-llc-print-after-isel", false], [609, "cmdoption-llc-regalloc", false], [609, "cmdoption-llc-remarks-section", false], [609, "cmdoption-llc-spiller", false], [609, "cmdoption-llc-stack-size-section", false], [609, "cmdoption-llc-stats", false], [609, "cmdoption-llc-time-passes", false], [609, "cmdoption-llc-x86-asm-syntax", false]], "lli \u547d\u4ee4\u5217\u9078\u9805": [[611, "cmdoption-lli-code-model", false], [611, "cmdoption-lli-disable-excess-fp-precision", false], [611, "cmdoption-lli-disable-post-RA-scheduler", false], [611, "cmdoption-lli-disable-spill-fusing", false], [611, "cmdoption-lli-enable-no-infs-fp-math", false], [611, "cmdoption-lli-enable-no-nans-fp-math", false], [611, "cmdoption-lli-enable-unsafe-fp-math", false], [611, "cmdoption-lli-fake-argv0", false], [611, "cmdoption-lli-force-interpreter", false], [611, "cmdoption-lli-help", false], [611, "cmdoption-lli-jit-enable-eh", false], [611, "cmdoption-lli-join-liveintervals", false], [611, "cmdoption-lli-load", false], [611, "cmdoption-lli-march", false], [611, "cmdoption-lli-mattr", false], [611, "cmdoption-lli-mcpu", false], [611, "cmdoption-lli-mtriple", false], [611, "cmdoption-lli-nozero-initialized-in-bss", false], [611, "cmdoption-lli-pre-RA-sched", false], [611, "cmdoption-lli-regalloc", false], [611, "cmdoption-lli-relocation-model", false], [611, "cmdoption-lli-soft-float", false], [611, "cmdoption-lli-spiller", false], [611, "cmdoption-lli-stats", false], [611, "cmdoption-lli-time-passes", false], [611, "cmdoption-lli-version", false], [611, "cmdoption-lli-x86-asm-syntax", false]], "llvm-ar \u547d\u4ee4\u5217\u9078\u9805": [[613, "cmdoption-llvm-ar-M", false], [613, "cmdoption-llvm-ar-arg-ADDLIB", false], [613, "cmdoption-llvm-ar-arg-ADDMOD", false], [613, "cmdoption-llvm-ar-arg-CREATE", false], [613, "cmdoption-llvm-ar-arg-CREATETHIN", false], [613, "cmdoption-llvm-ar-arg-D", false], [613, "cmdoption-llvm-ar-arg-DELETE", false], [613, "cmdoption-llvm-ar-arg-END", false], [613, "cmdoption-llvm-ar-arg-FILE", false], [613, "cmdoption-llvm-ar-arg-L", false], [613, "cmdoption-llvm-ar-arg-N", false], [613, "cmdoption-llvm-ar-arg-O", false], [613, "cmdoption-llvm-ar-arg-P", false], [613, "cmdoption-llvm-ar-arg-S", false], [613, "cmdoption-llvm-ar-arg-SAVE", false], [613, "cmdoption-llvm-ar-arg-T", false], [613, "cmdoption-llvm-ar-arg-This", false], [613, "cmdoption-llvm-ar-arg-U", false], [613, "cmdoption-llvm-ar-arg-V", false], [613, "cmdoption-llvm-ar-arg-a", false], [613, "cmdoption-llvm-ar-arg-b", false], [613, "cmdoption-llvm-ar-arg-c", false], [613, "cmdoption-llvm-ar-arg-d", false], [613, "cmdoption-llvm-ar-arg-default", false], [613, "cmdoption-llvm-ar-arg-i", false], [613, "cmdoption-llvm-ar-arg-m", false], [613, "cmdoption-llvm-ar-arg-o", false], [613, "cmdoption-llvm-ar-arg-p", false], [613, "cmdoption-llvm-ar-arg-posix", false], [613, "cmdoption-llvm-ar-arg-q", false], [613, "cmdoption-llvm-ar-arg-r", false], [613, "cmdoption-llvm-ar-arg-s", false], [613, "cmdoption-llvm-ar-arg-u", false], [613, "cmdoption-llvm-ar-arg-v", false], [613, "cmdoption-llvm-ar-arg-x", false], [613, "cmdoption-llvm-ar-format", false], [613, "cmdoption-llvm-ar-h", false], [613, "cmdoption-llvm-ar-rsp-quoting", false], [613, "cmdoption-llvm-ar-version", false]], "llvm-bcanalyzer \u547d\u4ee4\u5217\u9078\u9805": [[615, "cmdoption-llvm-bcanalyzer-dump", false], [615, "cmdoption-llvm-bcanalyzer-help", false], [615, "cmdoption-llvm-bcanalyzer-nodetails", false], [615, "cmdoption-llvm-bcanalyzer-verify", false]], "llvm-cov-export \u547d\u4ee4\u5217\u9078\u9805": [[617, "cmdoption-llvm-cov-export-arch", false], [617, "cmdoption-llvm-cov-export-compilation-dir", false], [617, "cmdoption-llvm-cov-export-format", false], [617, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [617, "cmdoption-llvm-cov-export-num-threads", false], [617, "cmdoption-llvm-cov-export-skip-expansions", false], [617, "cmdoption-llvm-cov-export-skip-functions", false], [617, "cmdoption-llvm-cov-export-summary-only", false]], "llvm-cov-gcov \u547d\u4ee4\u5217\u9078\u9805": [[617, "cmdoption-llvm-cov-gcov-a", false], [617, "cmdoption-llvm-cov-gcov-b", false], [617, "cmdoption-llvm-cov-gcov-c", false], [617, "cmdoption-llvm-cov-gcov-f", false], [617, "cmdoption-llvm-cov-gcov-help", false], [617, "cmdoption-llvm-cov-gcov-l", false], [617, "cmdoption-llvm-cov-gcov-m", false], [617, "cmdoption-llvm-cov-gcov-n", false], [617, "cmdoption-llvm-cov-gcov-o", false], [617, "cmdoption-llvm-cov-gcov-p", false], [617, "cmdoption-llvm-cov-gcov-r", false], [617, "cmdoption-llvm-cov-gcov-s", false], [617, "cmdoption-llvm-cov-gcov-t", false], [617, "cmdoption-llvm-cov-gcov-u", false], [617, "cmdoption-llvm-cov-gcov-version", false], [617, "cmdoption-llvm-cov-gcov-x", false]], "llvm-cov-report \u547d\u4ee4\u5217\u9078\u9805": [[617, "cmdoption-llvm-cov-report-arch", false], [617, "cmdoption-llvm-cov-report-compilation-dir", false], [617, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [617, "cmdoption-llvm-cov-report-show-branch-summary", false], [617, "cmdoption-llvm-cov-report-show-functions", false], [617, "cmdoption-llvm-cov-report-show-instantiation-summary", false], [617, "cmdoption-llvm-cov-report-show-region-summary", false], [617, "cmdoption-llvm-cov-report-use-color", false]], "llvm-cov-show \u547d\u4ee4\u5217\u9078\u9805": [[617, "cmdoption-llvm-cov-show-Xdemangler", false], [617, "cmdoption-llvm-cov-show-arch", false], [617, "cmdoption-llvm-cov-show-compilation-dir", false], [617, "cmdoption-llvm-cov-show-format", false], [617, "cmdoption-llvm-cov-show-ignore-filename-regex", false], [617, "cmdoption-llvm-cov-show-line-coverage-gt", false], [617, "cmdoption-llvm-cov-show-line-coverage-lt", false], [617, "cmdoption-llvm-cov-show-name", false], [617, "cmdoption-llvm-cov-show-name-regex", false], [617, "cmdoption-llvm-cov-show-name-whitelist", false], [617, "cmdoption-llvm-cov-show-num-threads", false], [617, "cmdoption-llvm-cov-show-output-dir", false], [617, "cmdoption-llvm-cov-show-path-equivalence", false], [617, "cmdoption-llvm-cov-show-region-coverage-gt", false], [617, "cmdoption-llvm-cov-show-region-coverage-lt", false], [617, "cmdoption-llvm-cov-show-show-branches", false], [617, "cmdoption-llvm-cov-show-show-expansions", false], [617, "cmdoption-llvm-cov-show-show-instantiations", false], [617, "cmdoption-llvm-cov-show-show-line-counts", false], [617, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false], [617, "cmdoption-llvm-cov-show-show-regions", false], [617, "cmdoption-llvm-cov-show-tab-size", false], [617, "cmdoption-llvm-cov-show-use-color", false]], "llvm-cxxfilt \u547d\u4ee4\u5217\u9078\u9805": [[618, "cmdoption-llvm-cxxfilt-arg-FILE", false], [618, "cmdoption-llvm-cxxfilt-format", false], [618, "cmdoption-llvm-cxxfilt-help", false], [618, "cmdoption-llvm-cxxfilt-no-strip-underscore", false], [618, "cmdoption-llvm-cxxfilt-strip-underscore", false], [618, "cmdoption-llvm-cxxfilt-types", false], [618, "cmdoption-llvm-cxxfilt-version", false]], "llvm-cxxmap \u547d\u4ee4\u5217\u9078\u9805": [[619, "cmdoption-llvm-cxxmap-Wambiguous", false], [619, "cmdoption-llvm-cxxmap-Wincomplete", false], [619, "cmdoption-llvm-cxxmap-output", false], [619, "cmdoption-llvm-cxxmap-remapping-file", false]], "llvm-dwarfdump \u547d\u4ee4\u5217\u9078\u9805": [[622, "cmdoption-llvm-dwarfdump-F", false], [622, "cmdoption-llvm-dwarfdump-a", false], [622, "cmdoption-llvm-dwarfdump-arch", false], [622, "cmdoption-llvm-dwarfdump-arg-FILE", false], [622, "cmdoption-llvm-dwarfdump-c", false], [622, "cmdoption-llvm-dwarfdump-color", false], [622, "cmdoption-llvm-dwarfdump-debug-abbrev", false], [622, "cmdoption-llvm-dwarfdump-diff", false], [622, "cmdoption-llvm-dwarfdump-f", false], [622, "cmdoption-llvm-dwarfdump-h", false], [622, "cmdoption-llvm-dwarfdump-help-list", false], [622, "cmdoption-llvm-dwarfdump-i", false], [622, "cmdoption-llvm-dwarfdump-lookup", false], [622, "cmdoption-llvm-dwarfdump-n", false], [622, "cmdoption-llvm-dwarfdump-o", false], [622, "cmdoption-llvm-dwarfdump-p", false], [622, "cmdoption-llvm-dwarfdump-parent-recurse-depth", false], [622, "cmdoption-llvm-dwarfdump-quiet", false], [622, "cmdoption-llvm-dwarfdump-r", false], [622, "cmdoption-llvm-dwarfdump-show-section-sizes", false], [622, "cmdoption-llvm-dwarfdump-statistics", false], [622, "cmdoption-llvm-dwarfdump-summarize-types", false], [622, "cmdoption-llvm-dwarfdump-u", false], [622, "cmdoption-llvm-dwarfdump-v", false], [622, "cmdoption-llvm-dwarfdump-verify", false], [622, "cmdoption-llvm-dwarfdump-version", false], [622, "cmdoption-llvm-dwarfdump-x", false]], "llvm-exegesis \u547d\u4ee4\u5217\u9078\u9805": [[623, "cmdoption-llvm-exegesis-analysis-clustering", false], [623, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", false], [623, "cmdoption-llvm-exegesis-analysis-clusters-output-file", false], [623, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", false], [623, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", false], [623, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", false], [623, "cmdoption-llvm-exegesis-analysis-numpoints", false], [623, "cmdoption-llvm-exegesis-benchmarks-file", false], [623, "cmdoption-llvm-exegesis-dump-object-to-disk", false], [623, "cmdoption-llvm-exegesis-help", false], [623, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", false], [623, "cmdoption-llvm-exegesis-loop-body-size", false], [623, "cmdoption-llvm-exegesis-max-configs-per-opcode", false], [623, "cmdoption-llvm-exegesis-mcpu", false], [623, "cmdoption-llvm-exegesis-mode", false], [623, "cmdoption-llvm-exegesis-num-repetitions", false], [623, "cmdoption-llvm-exegesis-opcode-index", false], [623, "cmdoption-llvm-exegesis-opcode-name", false], [623, "cmdoption-llvm-exegesis-repetition-mode", false], [623, "cmdoption-llvm-exegesis-snippets-file", false], [623, "cmdoption-llvm-exegesis-x86-lbr-sample-period", false]], "llvm-install-name-tool \u547d\u4ee4\u5217\u9078\u9805": [[625, "cmdoption-llvm-install-name-tool-add_rpath", false], [625, "cmdoption-llvm-install-name-tool-change", false], [625, "cmdoption-llvm-install-name-tool-delete_all_rpaths", false], [625, "cmdoption-llvm-install-name-tool-delete_rpath", false], [625, "cmdoption-llvm-install-name-tool-help", false], [625, "cmdoption-llvm-install-name-tool-id", false], [625, "cmdoption-llvm-install-name-tool-rpath", false], [625, "cmdoption-llvm-install-name-tool-version", false]], "llvm-libtool-darwin \u547d\u4ee4\u5217\u9078\u9805": [[627, "cmdoption-llvm-libtool-darwin-D", false], [627, "cmdoption-llvm-libtool-darwin-L", false], [627, "cmdoption-llvm-libtool-darwin-U", false], [627, "cmdoption-llvm-libtool-darwin-V", false], [627, "cmdoption-llvm-libtool-darwin-arch_only", false], [627, "cmdoption-llvm-libtool-darwin-color", false], [627, "cmdoption-llvm-libtool-darwin-filelist", false], [627, "cmdoption-llvm-libtool-darwin-h", false], [627, "cmdoption-llvm-libtool-darwin-help-list", false], [627, "cmdoption-llvm-libtool-darwin-l", false], [627, "cmdoption-llvm-libtool-darwin-no_warning_for_no_symbols", false], [627, "cmdoption-llvm-libtool-darwin-o", false], [627, "cmdoption-llvm-libtool-darwin-static", false], [627, "cmdoption-llvm-libtool-darwin-version", false]], "llvm-link \u547d\u4ee4\u5217\u9078\u9805": [[628, "cmdoption-llvm-link-S", false], [628, "cmdoption-llvm-link-d", false], [628, "cmdoption-llvm-link-f", false], [628, "cmdoption-llvm-link-help", false], [628, "cmdoption-llvm-link-o", false], [628, "cmdoption-llvm-link-v", false]], "llvm-lipo \u547d\u4ee4\u5217\u9078\u9805": [[629, "cmdoption-llvm-lipo-archs", false], [629, "cmdoption-llvm-lipo-create", false], [629, "cmdoption-llvm-lipo-help", false], [629, "cmdoption-llvm-lipo-info", false], [629, "cmdoption-llvm-lipo-replace", false], [629, "cmdoption-llvm-lipo-segalign", false], [629, "cmdoption-llvm-lipo-thin", false], [629, "cmdoption-llvm-lipo-verify_arch", false], [629, "cmdoption-llvm-lipo-version", false]], "llvm-locstats \u547d\u4ee4\u5217\u9078\u9805": [[630, "cmdoption-llvm-locstats-compare", false], [630, "cmdoption-llvm-locstats-draw-plot", false], [630, "cmdoption-llvm-locstats-ignore-debug-entry-values", false], [630, "cmdoption-llvm-locstats-only-formal-parameters", false], [630, "cmdoption-llvm-locstats-only-variables", false]], "llvm-mca \u547d\u4ee4\u5217\u9078\u9805": [[631, "cmdoption-llvm-mca-all-stats", false], [631, "cmdoption-llvm-mca-all-views", false], [631, "cmdoption-llvm-mca-bottleneck-analysis", false], [631, "cmdoption-llvm-mca-disable-cb", false], [631, "cmdoption-llvm-mca-dispatch", false], [631, "cmdoption-llvm-mca-dispatch-stats", false], [631, "cmdoption-llvm-mca-help", false], [631, "cmdoption-llvm-mca-instruction-info", false], [631, "cmdoption-llvm-mca-instruction-tables", false], [631, "cmdoption-llvm-mca-iterations", false], [631, "cmdoption-llvm-mca-json", false], [631, "cmdoption-llvm-mca-lqueue", false], [631, "cmdoption-llvm-mca-march", false], [631, "cmdoption-llvm-mca-mcpu", false], [631, "cmdoption-llvm-mca-mtriple", false], [631, "cmdoption-llvm-mca-noalias", false], [631, "cmdoption-llvm-mca-o", false], [631, "cmdoption-llvm-mca-output-asm-variant", false], [631, "cmdoption-llvm-mca-print-imm-hex", false], [631, "cmdoption-llvm-mca-register-file-size", false], [631, "cmdoption-llvm-mca-register-file-stats", false], [631, "cmdoption-llvm-mca-resource-pressure", false], [631, "cmdoption-llvm-mca-retire-stats", false], [631, "cmdoption-llvm-mca-scheduler-stats", false], [631, "cmdoption-llvm-mca-show-encoding", false], [631, "cmdoption-llvm-mca-squeue", false], [631, "cmdoption-llvm-mca-timeline", false], [631, "cmdoption-llvm-mca-timeline-max-cycles", false], [631, "cmdoption-llvm-mca-timeline-max-iterations", false]], "llvm-nm \u547d\u4ee4\u5217\u9078\u9805": [[632, "cmdoption-llvm-nm-B", false], [632, "cmdoption-llvm-nm-add-dyldinfo", false], [632, "cmdoption-llvm-nm-add-inlinedinfo", false], [632, "cmdoption-llvm-nm-arch", false], [632, "cmdoption-llvm-nm-arg-FILE", false], [632, "cmdoption-llvm-nm-debug-syms", false], [632, "cmdoption-llvm-nm-defined-only", false], [632, "cmdoption-llvm-nm-demangle", false], [632, "cmdoption-llvm-nm-dyldinfo-only", false], [632, "cmdoption-llvm-nm-dynamic", false], [632, "cmdoption-llvm-nm-extern-only", false], [632, "cmdoption-llvm-nm-format", false], [632, "cmdoption-llvm-nm-help", false], [632, "cmdoption-llvm-nm-j", false], [632, "cmdoption-llvm-nm-m", false], [632, "cmdoption-llvm-nm-no-demangle", false], [632, "cmdoption-llvm-nm-no-dyldinfo", false], [632, "cmdoption-llvm-nm-no-llvm-bc", false], [632, "cmdoption-llvm-nm-no-sort", false], [632, "cmdoption-llvm-nm-no-weak", false], [632, "cmdoption-llvm-nm-numeric-sort", false], [632, "cmdoption-llvm-nm-portability", false], [632, "cmdoption-llvm-nm-print-armap", false], [632, "cmdoption-llvm-nm-print-file-name", false], [632, "cmdoption-llvm-nm-print-size", false], [632, "cmdoption-llvm-nm-quiet", false], [632, "cmdoption-llvm-nm-radix", false], [632, "cmdoption-llvm-nm-reverse-sort", false], [632, "cmdoption-llvm-nm-s", false], [632, "cmdoption-llvm-nm-size-sort", false], [632, "cmdoption-llvm-nm-special-syms", false], [632, "cmdoption-llvm-nm-undefined-only", false], [632, "cmdoption-llvm-nm-version", false], [632, "cmdoption-llvm-nm-x", false]], "llvm-objcopy \u547d\u4ee4\u5217\u9078\u9805": [[633, "cmdoption-llvm-objcopy-add-gnu-debuglink", false], [633, "cmdoption-llvm-objcopy-add-section", false], [633, "cmdoption-llvm-objcopy-add-symbol", false], [633, "cmdoption-llvm-objcopy-allow-broken-links", false], [633, "cmdoption-llvm-objcopy-arg-FILE", false], [633, "cmdoption-llvm-objcopy-binary-architecture", false], [633, "cmdoption-llvm-objcopy-change-start", false], [633, "cmdoption-llvm-objcopy-compress-debug-sections", false], [633, "cmdoption-llvm-objcopy-decompress-debug-sections", false], [633, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [633, "cmdoption-llvm-objcopy-discard-all", false], [633, "cmdoption-llvm-objcopy-discard-locals", false], [633, "cmdoption-llvm-objcopy-dump-section", false], [633, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [633, "cmdoption-llvm-objcopy-extract-dwo", false], [633, "cmdoption-llvm-objcopy-extract-main-partition", false], [633, "cmdoption-llvm-objcopy-extract-partition", false], [633, "cmdoption-llvm-objcopy-globalize-symbol", false], [633, "cmdoption-llvm-objcopy-globalize-symbols", false], [633, "cmdoption-llvm-objcopy-help", false], [633, "cmdoption-llvm-objcopy-input-target", false], [633, "cmdoption-llvm-objcopy-keep-file-symbols", false], [633, "cmdoption-llvm-objcopy-keep-global-symbol", false], [633, "cmdoption-llvm-objcopy-keep-global-symbols", false], [633, "cmdoption-llvm-objcopy-keep-section", false], [633, "cmdoption-llvm-objcopy-keep-symbol", false], [633, "cmdoption-llvm-objcopy-keep-symbols", false], [633, "cmdoption-llvm-objcopy-keep-undefined", false], [633, "cmdoption-llvm-objcopy-localize-hidden", false], [633, "cmdoption-llvm-objcopy-localize-symbol", false], [633, "cmdoption-llvm-objcopy-localize-symbols", false], [633, "cmdoption-llvm-objcopy-new-symbol-visibility", false], [633, "cmdoption-llvm-objcopy-only-keep-debug", false], [633, "cmdoption-llvm-objcopy-only-section", false], [633, "cmdoption-llvm-objcopy-output-target", false], [633, "cmdoption-llvm-objcopy-prefix-alloc-sections", false], [633, "cmdoption-llvm-objcopy-prefix-symbols", false], [633, "cmdoption-llvm-objcopy-preserve-dates", false], [633, "cmdoption-llvm-objcopy-redefine-sym", false], [633, "cmdoption-llvm-objcopy-redefine-syms", false], [633, "cmdoption-llvm-objcopy-regex", false], [633, "cmdoption-llvm-objcopy-remove-section", false], [633, "cmdoption-llvm-objcopy-rename-section", false], [633, "cmdoption-llvm-objcopy-set-section-alignment", false], [633, "cmdoption-llvm-objcopy-set-section-flags", false], [633, "cmdoption-llvm-objcopy-set-start-addr", false], [633, "cmdoption-llvm-objcopy-split-dwo", false], [633, "cmdoption-llvm-objcopy-strip-all", false], [633, "cmdoption-llvm-objcopy-strip-all-gnu", false], [633, "cmdoption-llvm-objcopy-strip-debug", false], [633, "cmdoption-llvm-objcopy-strip-dwo", false], [633, "cmdoption-llvm-objcopy-strip-non-alloc", false], [633, "cmdoption-llvm-objcopy-strip-sections", false], [633, "cmdoption-llvm-objcopy-strip-symbol", false], [633, "cmdoption-llvm-objcopy-strip-symbols", false], [633, "cmdoption-llvm-objcopy-strip-unneeded", false], [633, "cmdoption-llvm-objcopy-strip-unneeded-symbol", false], [633, "cmdoption-llvm-objcopy-strip-unneeded-symbols", false], [633, "cmdoption-llvm-objcopy-target", false], [633, "cmdoption-llvm-objcopy-version", false], [633, "cmdoption-llvm-objcopy-weaken", false], [633, "cmdoption-llvm-objcopy-weaken-symbol", false], [633, "cmdoption-llvm-objcopy-weaken-symbols", false], [633, "cmdoption-llvm-objcopy-wildcard", false]], "llvm-objdump \u547d\u4ee4\u5217\u9078\u9805": [[634, "cmdoption-llvm-objdump-C", false], [634, "cmdoption-llvm-objdump-D", false], [634, "cmdoption-llvm-objdump-M", false], [634, "cmdoption-llvm-objdump-R", false], [634, "cmdoption-llvm-objdump-S", false], [634, "cmdoption-llvm-objdump-T", false], [634, "cmdoption-llvm-objdump-a", false], [634, "cmdoption-llvm-objdump-adjust-vma", false], [634, "cmdoption-llvm-objdump-arch", false], [634, "cmdoption-llvm-objdump-arch-name", false], [634, "cmdoption-llvm-objdump-archive-member-offsets", false], [634, "cmdoption-llvm-objdump-arg-FILE", false], [634, "cmdoption-llvm-objdump-arg-att", false], [634, "cmdoption-llvm-objdump-arg-intel", false], [634, "cmdoption-llvm-objdump-bind", false], [634, "cmdoption-llvm-objdump-d", false], [634, "cmdoption-llvm-objdump-data-in-code", false], [634, "cmdoption-llvm-objdump-debug-vars", false], [634, "cmdoption-llvm-objdump-debug-vars-indent", false], [634, "cmdoption-llvm-objdump-dis-symname", false], [634, "cmdoption-llvm-objdump-disassemble-symbols", false], [634, "cmdoption-llvm-objdump-dsym", false], [634, "cmdoption-llvm-objdump-dwarf", false], [634, "cmdoption-llvm-objdump-dylib-id", false], [634, "cmdoption-llvm-objdump-dylibs-used", false], [634, "cmdoption-llvm-objdump-exports-trie", false], [634, "cmdoption-llvm-objdump-f", false], [634, "cmdoption-llvm-objdump-fault-map-section", false], [634, "cmdoption-llvm-objdump-full-leading-addr", false], [634, "cmdoption-llvm-objdump-function-starts", false], [634, "cmdoption-llvm-objdump-g", false], [634, "cmdoption-llvm-objdump-h", false], [634, "cmdoption-llvm-objdump-help", false], [634, "cmdoption-llvm-objdump-indirect-symbols", false], [634, "cmdoption-llvm-objdump-info-plist", false], [634, "cmdoption-llvm-objdump-j", false], [634, "cmdoption-llvm-objdump-l", false], [634, "cmdoption-llvm-objdump-lazy-bind", false], [634, "cmdoption-llvm-objdump-link-opt-hints", false], [634, "cmdoption-llvm-objdump-m", false], [634, "cmdoption-llvm-objdump-mattr", false], [634, "cmdoption-llvm-objdump-mcpu", false], [634, "cmdoption-llvm-objdump-no-leading-addr", false], [634, "cmdoption-llvm-objdump-no-leading-headers", false], [634, "cmdoption-llvm-objdump-no-print-imm-hex", false], [634, "cmdoption-llvm-objdump-no-show-raw-insn", false], [634, "cmdoption-llvm-objdump-no-symbolic-operands", false], [634, "cmdoption-llvm-objdump-non-verbose", false], [634, "cmdoption-llvm-objdump-objc-meta-data", false], [634, "cmdoption-llvm-objdump-p", false], [634, "cmdoption-llvm-objdump-prefix", false], [634, "cmdoption-llvm-objdump-prefix-strip", false], [634, "cmdoption-llvm-objdump-print-imm-hex", false], [634, "cmdoption-llvm-objdump-private-header", false], [634, "cmdoption-llvm-objdump-r", false], [634, "cmdoption-llvm-objdump-raw-clang-ast", false], [634, "cmdoption-llvm-objdump-rebase", false], [634, "cmdoption-llvm-objdump-rpaths", false], [634, "cmdoption-llvm-objdump-s", false], [634, "cmdoption-llvm-objdump-show-lma", false], [634, "cmdoption-llvm-objdump-start-address", false], [634, "cmdoption-llvm-objdump-stop-address", false], [634, "cmdoption-llvm-objdump-symbol-description", false], [634, "cmdoption-llvm-objdump-symbolize-operands", false], [634, "cmdoption-llvm-objdump-t", false], [634, "cmdoption-llvm-objdump-triple", false], [634, "cmdoption-llvm-objdump-u", false], [634, "cmdoption-llvm-objdump-universal-headers", false], [634, "cmdoption-llvm-objdump-v", false], [634, "cmdoption-llvm-objdump-w", false], [634, "cmdoption-llvm-objdump-weak-bind", false], [634, "cmdoption-llvm-objdump-x", false], [634, "cmdoption-llvm-objdump-x86-asm-syntax", false], [634, "cmdoption-llvm-objdump-z", false]], "llvm-otool \u547d\u4ee4\u5217\u9078\u9805": [[635, "cmdoption-llvm-otool-C", false], [635, "cmdoption-llvm-otool-D", false], [635, "cmdoption-llvm-otool-G", false], [635, "cmdoption-llvm-otool-I", false], [635, "cmdoption-llvm-otool-L", false], [635, "cmdoption-llvm-otool-P", false], [635, "cmdoption-llvm-otool-V", false], [635, "cmdoption-llvm-otool-X", false], [635, "cmdoption-llvm-otool-arch", false], [635, "cmdoption-llvm-otool-arg-FILE", false], [635, "cmdoption-llvm-otool-d", false], [635, "cmdoption-llvm-otool-f", false], [635, "cmdoption-llvm-otool-h", false], [635, "cmdoption-llvm-otool-help", false], [635, "cmdoption-llvm-otool-help-hidden", false], [635, "cmdoption-llvm-otool-j", false], [635, "cmdoption-llvm-otool-l", false], [635, "cmdoption-llvm-otool-mcpu", false], [635, "cmdoption-llvm-otool-o", false], [635, "cmdoption-llvm-otool-p", false], [635, "cmdoption-llvm-otool-r", false], [635, "cmdoption-llvm-otool-s", false], [635, "cmdoption-llvm-otool-t", false], [635, "cmdoption-llvm-otool-v", false], [635, "cmdoption-llvm-otool-version", false], [635, "cmdoption-llvm-otool-x", false]], "llvm-pdbutil-bytes \u547d\u4ee4\u5217\u9078\u9805": [[636, "cmdoption-llvm-pdbutil-bytes-block-range", false], [636, "cmdoption-llvm-pdbutil-bytes-byte-range", false], [636, "cmdoption-llvm-pdbutil-bytes-chunks", false], [636, "cmdoption-llvm-pdbutil-bytes-ec", false], [636, "cmdoption-llvm-pdbutil-bytes-files", false], [636, "cmdoption-llvm-pdbutil-bytes-fpm", false], [636, "cmdoption-llvm-pdbutil-bytes-id", false], [636, "cmdoption-llvm-pdbutil-bytes-mod", false], [636, "cmdoption-llvm-pdbutil-bytes-modi", false], [636, "cmdoption-llvm-pdbutil-bytes-name-map", false], [636, "cmdoption-llvm-pdbutil-bytes-sc", false], [636, "cmdoption-llvm-pdbutil-bytes-sm", false], [636, "cmdoption-llvm-pdbutil-bytes-split-chunks", false], [636, "cmdoption-llvm-pdbutil-bytes-stream-data", false], [636, "cmdoption-llvm-pdbutil-bytes-syms", false], [636, "cmdoption-llvm-pdbutil-bytes-type", false], [636, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "llvm-pdbutil-dump \u547d\u4ee4\u5217\u9078\u9805": [[636, "cmdoption-llvm-pdbutil-dump-all", false], [636, "cmdoption-llvm-pdbutil-dump-dependents", false], [636, "cmdoption-llvm-pdbutil-dump-files", false], [636, "cmdoption-llvm-pdbutil-dump-global-extras", false], [636, "cmdoption-llvm-pdbutil-dump-globals", false], [636, "cmdoption-llvm-pdbutil-dump-id-data", false], [636, "cmdoption-llvm-pdbutil-dump-id-extras", false], [636, "cmdoption-llvm-pdbutil-dump-id-index", false], [636, "cmdoption-llvm-pdbutil-dump-ids", false], [636, "cmdoption-llvm-pdbutil-dump-il", false], [636, "cmdoption-llvm-pdbutil-dump-l", false], [636, "cmdoption-llvm-pdbutil-dump-modi", false], [636, "cmdoption-llvm-pdbutil-dump-modules", false], [636, "cmdoption-llvm-pdbutil-dump-public-extras", false], [636, "cmdoption-llvm-pdbutil-dump-publics", false], [636, "cmdoption-llvm-pdbutil-dump-section-contribs", false], [636, "cmdoption-llvm-pdbutil-dump-section-headers", false], [636, "cmdoption-llvm-pdbutil-dump-section-map", false], [636, "cmdoption-llvm-pdbutil-dump-stream-blocks", false], [636, "cmdoption-llvm-pdbutil-dump-streams", false], [636, "cmdoption-llvm-pdbutil-dump-string-table", false], [636, "cmdoption-llvm-pdbutil-dump-summary", false], [636, "cmdoption-llvm-pdbutil-dump-sym-data", false], [636, "cmdoption-llvm-pdbutil-dump-symbols", false], [636, "cmdoption-llvm-pdbutil-dump-type-data", false], [636, "cmdoption-llvm-pdbutil-dump-type-extras", false], [636, "cmdoption-llvm-pdbutil-dump-type-index", false], [636, "cmdoption-llvm-pdbutil-dump-types", false], [636, "cmdoption-llvm-pdbutil-dump-xme", false], [636, "cmdoption-llvm-pdbutil-dump-xmi", false]], "llvm-pdbutil-merge \u547d\u4ee4\u5217\u9078\u9805": [[636, "cmdoption-llvm-pdbutil-merge-pdb", false]], "llvm-pdbutil-pretty \u547d\u4ee4\u5217\u9078\u9805": [[636, "cmdoption-llvm-pdbutil-pretty-all", false], [636, "cmdoption-llvm-pdbutil-pretty-class-definitions", false], [636, "cmdoption-llvm-pdbutil-pretty-class-order", false], [636, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false], [636, "cmdoption-llvm-pdbutil-pretty-classes", false], [636, "cmdoption-llvm-pdbutil-pretty-color-output", false], [636, "cmdoption-llvm-pdbutil-pretty-compilands", false], [636, "cmdoption-llvm-pdbutil-pretty-enums", false], [636, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false], [636, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false], [636, "cmdoption-llvm-pdbutil-pretty-exclude-types", false], [636, "cmdoption-llvm-pdbutil-pretty-externals", false], [636, "cmdoption-llvm-pdbutil-pretty-globals", false], [636, "cmdoption-llvm-pdbutil-pretty-include-compilands", false], [636, "cmdoption-llvm-pdbutil-pretty-include-symbols", false], [636, "cmdoption-llvm-pdbutil-pretty-include-types", false], [636, "cmdoption-llvm-pdbutil-pretty-lines", false], [636, "cmdoption-llvm-pdbutil-pretty-load-address", false], [636, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false], [636, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false], [636, "cmdoption-llvm-pdbutil-pretty-min-type-size", false], [636, "cmdoption-llvm-pdbutil-pretty-module-syms", false], [636, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false], [636, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false], [636, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false], [636, "cmdoption-llvm-pdbutil-pretty-sym-types", false], [636, "cmdoption-llvm-pdbutil-pretty-symbol-order", false], [636, "cmdoption-llvm-pdbutil-pretty-typedefs", false], [636, "cmdoption-llvm-pdbutil-pretty-types", false]], "llvm-pdbutil-yaml2pdb \u547d\u4ee4\u5217\u9078\u9805": [[636, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "llvm-profdata-merge \u547d\u4ee4\u5217\u9078\u9805": [[637, "cmdoption-llvm-profdata-merge-binary", false], [637, "cmdoption-llvm-profdata-merge-compress-all-sections", false], [637, "cmdoption-llvm-profdata-merge-extbinary", false], [637, "cmdoption-llvm-profdata-merge-failure-mode", false], [637, "cmdoption-llvm-profdata-merge-gcc", false], [637, "cmdoption-llvm-profdata-merge-gen-partial-profile", false], [637, "cmdoption-llvm-profdata-merge-help", false], [637, "cmdoption-llvm-profdata-merge-input-files", false], [637, "cmdoption-llvm-profdata-merge-instr", false], [637, "cmdoption-llvm-profdata-merge-instr-prof-cold-threshold", false], [637, "cmdoption-llvm-profdata-merge-num-threads", false], [637, "cmdoption-llvm-profdata-merge-output", false], [637, "cmdoption-llvm-profdata-merge-prof-sym-list", false], [637, "cmdoption-llvm-profdata-merge-remapping-file", false], [637, "cmdoption-llvm-profdata-merge-sample", false], [637, "cmdoption-llvm-profdata-merge-sparse", false], [637, "cmdoption-llvm-profdata-merge-suppl-min-size-threshold", false], [637, "cmdoption-llvm-profdata-merge-supplement-instr-with-sample", false], [637, "cmdoption-llvm-profdata-merge-text", false], [637, "cmdoption-llvm-profdata-merge-use-md5", false], [637, "cmdoption-llvm-profdata-merge-weighted-input", false], [637, "cmdoption-llvm-profdata-merge-zero-counter-threshold", false]], "llvm-profdata-overlap \u547d\u4ee4\u5217\u9078\u9805": [[637, "cmdoption-llvm-profdata-overlap-cs", false], [637, "cmdoption-llvm-profdata-overlap-function", false], [637, "cmdoption-llvm-profdata-overlap-help", false], [637, "cmdoption-llvm-profdata-overlap-o", false], [637, "cmdoption-llvm-profdata-overlap-value-cutoff", false]], "llvm-profdata-show \u547d\u4ee4\u5217\u9078\u9805": [[637, "cmdoption-llvm-profdata-show-all-functions", false], [637, "cmdoption-llvm-profdata-show-counts", false], [637, "cmdoption-llvm-profdata-show-function", false], [637, "cmdoption-llvm-profdata-show-help", false], [637, "cmdoption-llvm-profdata-show-instr", false], [637, "cmdoption-llvm-profdata-show-list-below-cutoff", false], [637, "cmdoption-llvm-profdata-show-memop-sizes", false], [637, "cmdoption-llvm-profdata-show-output", false], [637, "cmdoption-llvm-profdata-show-sample", false], [637, "cmdoption-llvm-profdata-show-show-prof-sym-list", false], [637, "cmdoption-llvm-profdata-show-show-sec-info-only", false], [637, "cmdoption-llvm-profdata-show-showcs", false], [637, "cmdoption-llvm-profdata-show-text", false], [637, "cmdoption-llvm-profdata-show-topn", false], [637, "cmdoption-llvm-profdata-show-value-cutoff", false]], "llvm-profgen \u547d\u4ee4\u5217\u9078\u9805": [[638, "cmdoption-llvm-profgen-binary", false], [638, "cmdoption-llvm-profgen-format", false], [638, "cmdoption-llvm-profgen-output", false], [638, "cmdoption-llvm-profgen-perfscript", false], [638, "cmdoption-llvm-profgen-show-disassembly", false], [638, "cmdoption-llvm-profgen-show-mmap-events", false], [638, "cmdoption-llvm-profgen-x86-asm-syntax", false]], "llvm-readelf \u547d\u4ee4\u5217\u9078\u9805": [[640, "cmdoption-llvm-readelf-addrsig", false], [640, "cmdoption-llvm-readelf-all", false], [640, "cmdoption-llvm-readelf-arch-specific", false], [640, "cmdoption-llvm-readelf-arg-FILE", false], [640, "cmdoption-llvm-readelf-bb-addr-map", false], [640, "cmdoption-llvm-readelf-cg-profile", false], [640, "cmdoption-llvm-readelf-demangle", false], [640, "cmdoption-llvm-readelf-dyn-relocations", false], [640, "cmdoption-llvm-readelf-dyn-symbols", false], [640, "cmdoption-llvm-readelf-dynamic-table", false], [640, "cmdoption-llvm-readelf-elf-linker-options", false], [640, "cmdoption-llvm-readelf-elf-output-style", false], [640, "cmdoption-llvm-readelf-expand-relocs", false], [640, "cmdoption-llvm-readelf-file-header", false], [640, "cmdoption-llvm-readelf-gnu-hash-table", false], [640, "cmdoption-llvm-readelf-hash-symbols", false], [640, "cmdoption-llvm-readelf-hash-table", false], [640, "cmdoption-llvm-readelf-headers", false], [640, "cmdoption-llvm-readelf-help", false], [640, "cmdoption-llvm-readelf-hex-dump", false], [640, "cmdoption-llvm-readelf-histogram", false], [640, "cmdoption-llvm-readelf-needed-libs", false], [640, "cmdoption-llvm-readelf-notes", false], [640, "cmdoption-llvm-readelf-program-headers", false], [640, "cmdoption-llvm-readelf-raw-relr", false], [640, "cmdoption-llvm-readelf-relocations", false], [640, "cmdoption-llvm-readelf-section-data", false], [640, "cmdoption-llvm-readelf-section-details", false], [640, "cmdoption-llvm-readelf-section-groups", false], [640, "cmdoption-llvm-readelf-section-mapping", false], [640, "cmdoption-llvm-readelf-section-relocations", false], [640, "cmdoption-llvm-readelf-section-symbols", false], [640, "cmdoption-llvm-readelf-sections", false], [640, "cmdoption-llvm-readelf-stack-sizes", false], [640, "cmdoption-llvm-readelf-stackmap", false], [640, "cmdoption-llvm-readelf-string-dump", false], [640, "cmdoption-llvm-readelf-symbols", false], [640, "cmdoption-llvm-readelf-unwind", false], [640, "cmdoption-llvm-readelf-version", false], [640, "cmdoption-llvm-readelf-version-info", false]], "llvm-readobj \u547d\u4ee4\u5217\u9078\u9805": [[641, "cmdoption-llvm-readobj-addrsig", false], [641, "cmdoption-llvm-readobj-all", false], [641, "cmdoption-llvm-readobj-arch-specific", false], [641, "cmdoption-llvm-readobj-arg-FILE", false], [641, "cmdoption-llvm-readobj-bb-addr-map", false], [641, "cmdoption-llvm-readobj-cg-profile", false], [641, "cmdoption-llvm-readobj-codeview", false], [641, "cmdoption-llvm-readobj-codeview-ghash", false], [641, "cmdoption-llvm-readobj-codeview-merged-types", false], [641, "cmdoption-llvm-readobj-codeview-subsection-bytes", false], [641, "cmdoption-llvm-readobj-coff-basereloc", false], [641, "cmdoption-llvm-readobj-coff-debug-directory", false], [641, "cmdoption-llvm-readobj-coff-directives", false], [641, "cmdoption-llvm-readobj-coff-exports", false], [641, "cmdoption-llvm-readobj-coff-imports", false], [641, "cmdoption-llvm-readobj-coff-load-config", false], [641, "cmdoption-llvm-readobj-coff-resources", false], [641, "cmdoption-llvm-readobj-coff-tls-directory", false], [641, "cmdoption-llvm-readobj-demangle", false], [641, "cmdoption-llvm-readobj-dependent-libraries", false], [641, "cmdoption-llvm-readobj-dyn-relocations", false], [641, "cmdoption-llvm-readobj-dyn-symbols", false], [641, "cmdoption-llvm-readobj-dynamic-table", false], [641, "cmdoption-llvm-readobj-elf-linker-options", false], [641, "cmdoption-llvm-readobj-elf-output-style", false], [641, "cmdoption-llvm-readobj-expand-relocs", false], [641, "cmdoption-llvm-readobj-file-header", false], [641, "cmdoption-llvm-readobj-gnu-hash-table", false], [641, "cmdoption-llvm-readobj-hash-symbols", false], [641, "cmdoption-llvm-readobj-hash-table", false], [641, "cmdoption-llvm-readobj-headers", false], [641, "cmdoption-llvm-readobj-help", false], [641, "cmdoption-llvm-readobj-hex-dump", false], [641, "cmdoption-llvm-readobj-histogram", false], [641, "cmdoption-llvm-readobj-macho-data-in-code", false], [641, "cmdoption-llvm-readobj-macho-dsymtab", false], [641, "cmdoption-llvm-readobj-macho-indirect-symbols", false], [641, "cmdoption-llvm-readobj-macho-linker-options", false], [641, "cmdoption-llvm-readobj-macho-segment", false], [641, "cmdoption-llvm-readobj-macho-version-min", false], [641, "cmdoption-llvm-readobj-needed-libs", false], [641, "cmdoption-llvm-readobj-notes", false], [641, "cmdoption-llvm-readobj-program-headers", false], [641, "cmdoption-llvm-readobj-raw-relr", false], [641, "cmdoption-llvm-readobj-relocations", false], [641, "cmdoption-llvm-readobj-section-data", false], [641, "cmdoption-llvm-readobj-section-groups", false], [641, "cmdoption-llvm-readobj-section-mapping", false], [641, "cmdoption-llvm-readobj-section-relocations", false], [641, "cmdoption-llvm-readobj-section-symbols", false], [641, "cmdoption-llvm-readobj-sections", false], [641, "cmdoption-llvm-readobj-stack-sizes", false], [641, "cmdoption-llvm-readobj-stackmap", false], [641, "cmdoption-llvm-readobj-string-dump", false], [641, "cmdoption-llvm-readobj-string-table", false], [641, "cmdoption-llvm-readobj-symbols", false], [641, "cmdoption-llvm-readobj-unwind", false], [641, "cmdoption-llvm-readobj-version", false], [641, "cmdoption-llvm-readobj-version-info", false]], "llvm-size \u547d\u4ee4\u5217\u9078\u9805": [[642, "cmdoption-llvm-size-A", false], [642, "cmdoption-llvm-size-B", false], [642, "cmdoption-llvm-size-arch", false], [642, "cmdoption-llvm-size-arg-FILE", false], [642, "cmdoption-llvm-size-common", false], [642, "cmdoption-llvm-size-d", false], [642, "cmdoption-llvm-size-format", false], [642, "cmdoption-llvm-size-help", false], [642, "cmdoption-llvm-size-l", false], [642, "cmdoption-llvm-size-m", false], [642, "cmdoption-llvm-size-o", false], [642, "cmdoption-llvm-size-radix", false], [642, "cmdoption-llvm-size-totals", false], [642, "cmdoption-llvm-size-version", false], [642, "cmdoption-llvm-size-x", false]], "llvm-stress \u547d\u4ee4\u5217\u9078\u9805": [[643, "cmdoption-llvm-stress-o", false], [643, "cmdoption-llvm-stress-seed", false], [643, "cmdoption-llvm-stress-size", false]], "llvm-strings \u547d\u4ee4\u5217\u9078\u9805": [[644, "cmdoption-llvm-strings-all", false], [644, "cmdoption-llvm-strings-arg-FILE", false], [644, "cmdoption-llvm-strings-bytes", false], [644, "cmdoption-llvm-strings-help", false], [644, "cmdoption-llvm-strings-print-file-name", false], [644, "cmdoption-llvm-strings-radix", false], [644, "cmdoption-llvm-strings-version", false]], "llvm-strip \u547d\u4ee4\u5217\u9078\u9805": [[645, "cmdoption-llvm-strip-T", false], [645, "cmdoption-llvm-strip-allow-broken-links", false], [645, "cmdoption-llvm-strip-arg-FILE", false], [645, "cmdoption-llvm-strip-disable-deterministic-archives", false], [645, "cmdoption-llvm-strip-discard-all", false], [645, "cmdoption-llvm-strip-discard-locals", false], [645, "cmdoption-llvm-strip-enable-deterministic-archives", false], [645, "cmdoption-llvm-strip-help", false], [645, "cmdoption-llvm-strip-keep-file-symbols", false], [645, "cmdoption-llvm-strip-keep-section", false], [645, "cmdoption-llvm-strip-keep-symbol", false], [645, "cmdoption-llvm-strip-no-strip-all", false], [645, "cmdoption-llvm-strip-o", false], [645, "cmdoption-llvm-strip-only-keep-debug", false], [645, "cmdoption-llvm-strip-preserve-dates", false], [645, "cmdoption-llvm-strip-regex", false], [645, "cmdoption-llvm-strip-remove-section", false], [645, "cmdoption-llvm-strip-strip-all", false], [645, "cmdoption-llvm-strip-strip-all-gnu", false], [645, "cmdoption-llvm-strip-strip-debug", false], [645, "cmdoption-llvm-strip-strip-sections", false], [645, "cmdoption-llvm-strip-strip-symbol", false], [645, "cmdoption-llvm-strip-strip-unneeded", false], [645, "cmdoption-llvm-strip-version", false], [645, "cmdoption-llvm-strip-wildcard", false]], "llvm-symbolizer \u547d\u4ee4\u5217\u9078\u9805": [[646, "cmdoption-llvm-symbolizer-adjust-vma", false], [646, "cmdoption-llvm-symbolizer-arg-FILE", false], [646, "cmdoption-llvm-symbolizer-basenames", false], [646, "cmdoption-llvm-symbolizer-default-arch", false], [646, "cmdoption-llvm-symbolizer-demangle", false], [646, "cmdoption-llvm-symbolizer-dia", false], [646, "cmdoption-llvm-symbolizer-dsym-hint", false], [646, "cmdoption-llvm-symbolizer-dwp", false], [646, "cmdoption-llvm-symbolizer-fallback-debug-path", false], [646, "cmdoption-llvm-symbolizer-functions", false], [646, "cmdoption-llvm-symbolizer-help", false], [646, "cmdoption-llvm-symbolizer-inlining", false], [646, "cmdoption-llvm-symbolizer-no-demangle", false], [646, "cmdoption-llvm-symbolizer-no-inlines", false], [646, "cmdoption-llvm-symbolizer-obj", false], [646, "cmdoption-llvm-symbolizer-output-style", false], [646, "cmdoption-llvm-symbolizer-pretty-print", false], [646, "cmdoption-llvm-symbolizer-print-address", false], [646, "cmdoption-llvm-symbolizer-print-source-context-lines", false], [646, "cmdoption-llvm-symbolizer-relativenames", false], [646, "cmdoption-llvm-symbolizer-verbose", false], [646, "cmdoption-llvm-symbolizer-version", false]], "m": [[613, "cmdoption-llvm-ar-arg-m", false]], "n": [[613, "cmdoption-llvm-ar-arg-N", false]], "o": [[613, "cmdoption-llvm-ar-arg-O", false], [613, "cmdoption-llvm-ar-arg-o", false]], "opt \u547d\u4ee4\u5217\u9078\u9805": [[649, "cmdoption-opt-S", false], [649, "cmdoption-opt-debug", false], [649, "cmdoption-opt-disable-inlining", false], [649, "cmdoption-opt-disable-opt", false], [649, "cmdoption-opt-f", false], [649, "cmdoption-opt-help", false], [649, "cmdoption-opt-load", false], [649, "cmdoption-opt-o", false], [649, "cmdoption-opt-p", false], [649, "cmdoption-opt-passname", false], [649, "cmdoption-opt-stats", false], [649, "cmdoption-opt-strip-debug", false], [649, "cmdoption-opt-time-passes", false], [649, "cmdoption-opt-verify-each", false]], "otherwise": [[613, "cmdoption-llvm-ar-arg-posix", false]], "p": [[613, "cmdoption-llvm-ar-arg-P", false], [613, "cmdoption-llvm-ar-arg-p", false]], "q": [[613, "cmdoption-llvm-ar-arg-q", false]], "r": [[613, "cmdoption-llvm-ar-arg-r", false]], "s": [[613, "cmdoption-llvm-ar-arg-S", false], [613, "cmdoption-llvm-ar-arg-s", false]], "save": [[613, "cmdoption-llvm-ar-arg-SAVE", false]], "t": [[613, "cmdoption-llvm-ar-arg-T", false]], "tblgen \u547d\u4ee4\u5217\u9078\u9805": [[650, "cmdoption-tblgen-0", false], [650, "cmdoption-tblgen-D", false], [650, "cmdoption-tblgen-I", false], [650, "cmdoption-tblgen-arg-gen-lldb-option-defs", false], [650, "cmdoption-tblgen-arg-gen-lldb-property-defs", false], [650, "cmdoption-tblgen-arg-gen-lldb-property-enum-defs", false], [650, "cmdoption-tblgen-asmformat-error-is-fatal", false], [650, "cmdoption-tblgen-asmparsernum", false], [650, "cmdoption-tblgen-asmwriternum", false], [650, "cmdoption-tblgen-clang-component", false], [650, "cmdoption-tblgen-class", false], [650, "cmdoption-tblgen-combiners", false], [650, "cmdoption-tblgen-d", false], [650, "cmdoption-tblgen-debug", false], [650, "cmdoption-tblgen-dialect", false], [650, "cmdoption-tblgen-dialect-opclass-base", false], [650, "cmdoption-tblgen-dump-json", false], [650, "cmdoption-tblgen-gen-arm-bf16", false], [650, "cmdoption-tblgen-gen-arm-cde-builtin-aliases", false], [650, "cmdoption-tblgen-gen-arm-cde-builtin-codegen", false], [650, "cmdoption-tblgen-gen-arm-cde-builtin-def", false], [650, "cmdoption-tblgen-gen-arm-cde-builtin-sema", false], [650, "cmdoption-tblgen-gen-arm-cde-header", false], [650, "cmdoption-tblgen-gen-arm-fp16", false], [650, "cmdoption-tblgen-gen-arm-mve-builtin-aliases", false], [650, "cmdoption-tblgen-gen-arm-mve-builtin-codegen", false], [650, "cmdoption-tblgen-gen-arm-mve-builtin-def", false], [650, "cmdoption-tblgen-gen-arm-mve-builtin-sema", false], [650, "cmdoption-tblgen-gen-arm-mve-header", false], [650, "cmdoption-tblgen-gen-arm-neon", false], [650, "cmdoption-tblgen-gen-arm-neon-sema", false], [650, "cmdoption-tblgen-gen-arm-neon-test", false], [650, "cmdoption-tblgen-gen-arm-sve-builtin-codegen", false], [650, "cmdoption-tblgen-gen-arm-sve-builtins", false], [650, "cmdoption-tblgen-gen-arm-sve-header", false], [650, "cmdoption-tblgen-gen-arm-sve-sema-rangechecks", false], [650, "cmdoption-tblgen-gen-arm-sve-typeflags", false], [650, "cmdoption-tblgen-gen-asm-matcher", false], [650, "cmdoption-tblgen-gen-asm-parser", false], [650, "cmdoption-tblgen-gen-asm-writer", false], [650, "cmdoption-tblgen-gen-attr-docs", false], [650, "cmdoption-tblgen-gen-attrs", false], [650, "cmdoption-tblgen-gen-automata", false], [650, "cmdoption-tblgen-gen-avail-interface-decls", false], [650, "cmdoption-tblgen-gen-avail-interface-defs", false], [650, "cmdoption-tblgen-gen-callingconv", false], [650, "cmdoption-tblgen-gen-clang-attr-ast-visitor", false], [650, "cmdoption-tblgen-gen-clang-attr-classes", false], [650, "cmdoption-tblgen-gen-clang-attr-has-attribute-impl", false], [650, "cmdoption-tblgen-gen-clang-attr-impl", false], [650, "cmdoption-tblgen-gen-clang-attr-list", false], [650, "cmdoption-tblgen-gen-clang-attr-node-traverse", false], [650, "cmdoption-tblgen-gen-clang-attr-parsed-attr-impl", false], [650, "cmdoption-tblgen-gen-clang-attr-parsed-attr-kinds", false], [650, "cmdoption-tblgen-gen-clang-attr-parsed-attr-list", false], [650, "cmdoption-tblgen-gen-clang-attr-parser-string-switches", false], [650, "cmdoption-tblgen-gen-clang-attr-pch-read", false], [650, "cmdoption-tblgen-gen-clang-attr-pch-write", false], [650, "cmdoption-tblgen-gen-clang-attr-spelling-index", false], [650, "cmdoption-tblgen-gen-clang-attr-subject-match-rule-list", false], [650, "cmdoption-tblgen-gen-clang-attr-subject-match-rules-parser-string-switches", false], [650, "cmdoption-tblgen-gen-clang-attr-template-instantiate", false], [650, "cmdoption-tblgen-gen-clang-attr-text-node-dump", false], [650, "cmdoption-tblgen-gen-clang-basic-reader", false], [650, "cmdoption-tblgen-gen-clang-basic-writer", false], [650, "cmdoption-tblgen-gen-clang-comment-command-info", false], [650, "cmdoption-tblgen-gen-clang-comment-command-list", false], [650, "cmdoption-tblgen-gen-clang-comment-html-named-character-references", false], [650, "cmdoption-tblgen-gen-clang-comment-html-tags", false], [650, "cmdoption-tblgen-gen-clang-comment-html-tags-properties", false], [650, "cmdoption-tblgen-gen-clang-comment-nodes", false], [650, "cmdoption-tblgen-gen-clang-data-collectors", false], [650, "cmdoption-tblgen-gen-clang-decl-nodes", false], [650, "cmdoption-tblgen-gen-clang-diag-groups", false], [650, "cmdoption-tblgen-gen-clang-diags-defs", false], [650, "cmdoption-tblgen-gen-clang-diags-index-name", false], [650, "cmdoption-tblgen-gen-clang-opcodes", false], [650, "cmdoption-tblgen-gen-clang-opencl-builtins", false], [650, "cmdoption-tblgen-gen-clang-sa-checkers", false], [650, "cmdoption-tblgen-gen-clang-stmt-nodes", false], [650, "cmdoption-tblgen-gen-clang-test-pragma-attribute-supported-attributes", false], [650, "cmdoption-tblgen-gen-clang-type-nodes", false], [650, "cmdoption-tblgen-gen-clang-type-reader", false], [650, "cmdoption-tblgen-gen-clang-type-writer", false], [650, "cmdoption-tblgen-gen-compress-inst-emitter", false], [650, "cmdoption-tblgen-gen-ctags", false], [650, "cmdoption-tblgen-gen-dag-isel", false], [650, "cmdoption-tblgen-gen-dfa-packetizer", false], [650, "cmdoption-tblgen-gen-diag-docs", false], [650, "cmdoption-tblgen-gen-dialect-doc", false], [650, "cmdoption-tblgen-gen-directive-decl", false], [650, "cmdoption-tblgen-gen-directive-gen", false], [650, "cmdoption-tblgen-gen-directive-impl", false], [650, "cmdoption-tblgen-gen-disassembler", false], [650, "cmdoption-tblgen-gen-emitter", false], [650, "cmdoption-tblgen-gen-enum-decls", false], [650, "cmdoption-tblgen-gen-enum-defs", false], [650, "cmdoption-tblgen-gen-enum-from-llvmir-conversions", false], [650, "cmdoption-tblgen-gen-enum-to-llvmir-conversions", false], [650, "cmdoption-tblgen-gen-exegesis", false], [650, "cmdoption-tblgen-gen-fast-isel", false], [650, "cmdoption-tblgen-gen-global-isel", false], [650, "cmdoption-tblgen-gen-global-isel-combiner", false], [650, "cmdoption-tblgen-gen-instr-docs", false], [650, "cmdoption-tblgen-gen-instr-info", false], [650, "cmdoption-tblgen-gen-intrinsic-enums", false], [650, "cmdoption-tblgen-gen-intrinsic-impl", false], [650, "cmdoption-tblgen-gen-llvmir-conversions", false], [650, "cmdoption-tblgen-gen-llvmir-intrinsics", false], [650, "cmdoption-tblgen-gen-op-decls", false], [650, "cmdoption-tblgen-gen-op-defs", false], [650, "cmdoption-tblgen-gen-op-doc", false], [650, "cmdoption-tblgen-gen-opt-docs", false], [650, "cmdoption-tblgen-gen-opt-parser-defs", false], [650, "cmdoption-tblgen-gen-opt-rst", false], [650, "cmdoption-tblgen-gen-pass-decls", false], [650, "cmdoption-tblgen-gen-pass-doc", false], [650, "cmdoption-tblgen-gen-pseudo-lowering", false], [650, "cmdoption-tblgen-gen-register-bank", false], [650, "cmdoption-tblgen-gen-register-info", false], [650, "cmdoption-tblgen-gen-rewriters", false], [650, "cmdoption-tblgen-gen-riscv-vector-builtin-codegen", false], [650, "cmdoption-tblgen-gen-riscv-vector-builtins", false], [650, "cmdoption-tblgen-gen-riscv-vector-header", false], [650, "cmdoption-tblgen-gen-searchable-tables", false], [650, "cmdoption-tblgen-gen-spirv-avail-impls", false], [650, "cmdoption-tblgen-gen-spirv-capability-implication", false], [650, "cmdoption-tblgen-gen-spirv-enum-avail-decls", false], [650, "cmdoption-tblgen-gen-spirv-enum-avail-defs", false], [650, "cmdoption-tblgen-gen-spirv-op-utils", false], [650, "cmdoption-tblgen-gen-spirv-serialization", false], [650, "cmdoption-tblgen-gen-struct-attr-decls", false], [650, "cmdoption-tblgen-gen-struct-attr-defs", false], [650, "cmdoption-tblgen-gen-subtarget", false], [650, "cmdoption-tblgen-gen-typedef-decls", false], [650, "cmdoption-tblgen-gen-typedef-defs", false], [650, "cmdoption-tblgen-gen-x86-EVEX2VEX-tables", false], [650, "cmdoption-tblgen-gen-x86-fold-tables", false], [650, "cmdoption-tblgen-gicombiner-show-expansions", false], [650, "cmdoption-tblgen-gicombiner-stop-after-build", false], [650, "cmdoption-tblgen-gicombiner-stop-after-parse", false], [650, "cmdoption-tblgen-gisel-coverage-file", false], [650, "cmdoption-tblgen-help", false], [650, "cmdoption-tblgen-help-list", false], [650, "cmdoption-tblgen-instrument-coverage", false], [650, "cmdoption-tblgen-instrument-gisel-coverage", false], [650, "cmdoption-tblgen-intrinsic-prefix", false], [650, "cmdoption-tblgen-llvmir-intrinsics-filter", false], [650, "cmdoption-tblgen-long-string-literals", false], [650, "cmdoption-tblgen-match-prefix", false], [650, "cmdoption-tblgen-name", false], [650, "cmdoption-tblgen-null-backend", false], [650, "cmdoption-tblgen-o", false], [650, "cmdoption-tblgen-omit-comments", false], [650, "cmdoption-tblgen-op-exclude-regex", false], [650, "cmdoption-tblgen-op-include-regex", false], [650, "cmdoption-tblgen-optimize-match-table", false], [650, "cmdoption-tblgen-print-detailed-records", false], [650, "cmdoption-tblgen-print-enums", false], [650, "cmdoption-tblgen-print-records", false], [650, "cmdoption-tblgen-print-sets", false], [650, "cmdoption-tblgen-register-info-debug", false], [650, "cmdoption-tblgen-stats", false], [650, "cmdoption-tblgen-time-phases", false], [650, "cmdoption-tblgen-typedefs-dialect", false], [650, "cmdoption-tblgen-version", false], [650, "cmdoption-tblgen-warn-on-skipped-patterns", false], [650, "cmdoption-tblgen-write-if-changed", false]], "this": [[613, "cmdoption-llvm-ar-arg-This", false]], "u": [[613, "cmdoption-llvm-ar-arg-U", false], [613, "cmdoption-llvm-ar-arg-u", false]], "v": [[613, "cmdoption-llvm-ar-arg-V", false], [613, "cmdoption-llvm-ar-arg-v", false]], "x": [[613, "cmdoption-llvm-ar-arg-x", false]], "\u547d\u4ee4\u5217\u9078\u9805": [[745, "cmdoption-lto-pass-remarks-filter", false], [745, "cmdoption-lto-pass-remarks-format", false], [745, "cmdoption-lto-pass-remarks-hotness-threshold", false], [745, "cmdoption-lto-pass-remarks-output", false], [745, "cmdoption-lto-pass-remarks-with-hotness", false], [745, "cmdoption-opt-remarks-filename", false], [745, "cmdoption-opt-remarks-filter", false], [745, "cmdoption-opt-remarks-format", false], [745, "cmdoption-opt-remarks-with-hotness", false], [745, "cmdoption-pass-remarks", false], [745, "cmdoption-pass-remarks-analysis", false], [745, "cmdoption-pass-remarks-filter", false], [745, "cmdoption-pass-remarks-format", false], [745, "cmdoption-pass-remarks-hotness-threshold", false], [745, "cmdoption-pass-remarks-missed", false], [745, "cmdoption-pass-remarks-output", false], [745, "cmdoption-pass-remarks-with-hotness", false]]}, "objects": {"": [[745, 0, 1, "cmdoption-lto-pass-remarks-filter", "-lto-pass-remarks-filter"], [745, 0, 1, "cmdoption-lto-pass-remarks-format", "-lto-pass-remarks-format"], [745, 0, 1, "cmdoption-lto-pass-remarks-hotness-threshold", "-lto-pass-remarks-hotness-threshold"], [745, 0, 1, "cmdoption-lto-pass-remarks-output", "-lto-pass-remarks-output"], [745, 0, 1, "cmdoption-lto-pass-remarks-with-hotness", "-lto-pass-remarks-with-hotness"], [745, 0, 1, "cmdoption-opt-remarks-filename", "-opt-remarks-filename"], [745, 0, 1, "cmdoption-opt-remarks-filter", "-opt-remarks-filter"], [745, 0, 1, "cmdoption-opt-remarks-format", "-opt-remarks-format"], [745, 0, 1, "cmdoption-opt-remarks-with-hotness", "-opt-remarks-with-hotness"], [745, 0, 1, "cmdoption-pass-remarks", "-pass-remarks"], [745, 0, 1, "cmdoption-pass-remarks-analysis", "-pass-remarks-analysis"], [745, 0, 1, "cmdoption-pass-remarks-filter", "-pass-remarks-filter"], [745, 0, 1, "cmdoption-pass-remarks-format", "-pass-remarks-format"], [745, 0, 1, "cmdoption-pass-remarks-hotness-threshold", "-pass-remarks-hotness-threshold"], [745, 0, 1, "cmdoption-pass-remarks-missed", "-pass-remarks-missed"], [745, 0, 1, "cmdoption-pass-remarks-output", "-pass-remarks-output"], [745, 0, 1, "cmdoption-pass-remarks-with-hotness", "-pass-remarks-with-hotness"]], "FileCheck": [[603, 0, 1, "cmdoption-FileCheck-allow-deprecated-dag-overlap", "--allow-deprecated-dag-overlap"], [603, 0, 1, "cmdoption-FileCheck-allow-empty", "--allow-empty"], [603, 0, 1, "cmdoption-FileCheck-allow-unused-prefixes", "--allow-unused-prefixes"], [603, 0, 1, "cmdoption-FileCheck-check-prefix", "--check-prefix"], [603, 0, 1, "cmdoption-FileCheck-check-prefixes", "--check-prefixes"], [603, 0, 1, "cmdoption-FileCheck-color", "--color"], [603, 0, 1, "cmdoption-FileCheck-comment-prefixes", "--comment-prefixes"], [603, 0, 1, "cmdoption-FileCheck-dump-input", "--dump-input"], [603, 0, 1, "cmdoption-FileCheck-dump-input-context", "--dump-input-context"], [603, 0, 1, "cmdoption-FileCheck-dump-input-filter", "--dump-input-filter"], [603, 0, 1, "cmdoption-FileCheck-enable-var-scope", "--enable-var-scope"], [603, 0, 1, "cmdoption-FileCheck-ignore-case", "--ignore-case"], [603, 0, 1, "cmdoption-FileCheck-implicit-check-not", "--implicit-check-not"], [603, 0, 1, "cmdoption-FileCheck-input-file", "--input-file"], [603, 0, 1, "cmdoption-FileCheck-match-full-lines", "--match-full-lines"], [603, 0, 1, "cmdoption-FileCheck-strict-whitespace", "--strict-whitespace"], [603, 0, 1, "cmdoption-FileCheck-D-FMT-NUMVAR", "-D#&lt;FMT&gt;,&lt;NUMVAR&gt;"], [603, 0, 1, "cmdoption-FileCheck-D-VAR", "-D&lt;VAR"], [603, 0, 1, "cmdoption-FileCheck-help", "-help"], [603, 0, 1, "cmdoption-FileCheck-v", "-v"], [603, 0, 1, "cmdoption-FileCheck-version", "-version"], [603, 0, 1, "cmdoption-FileCheck-vv", "-vv"]], "dsymutil": [[606, 0, 1, "cmdoption-dsymutil-accelerator", "--accelerator"], [606, 0, 1, "cmdoption-dsymutil-arch", "--arch"], [606, 0, 1, "cmdoption-dsymutil-dump-debug-map", "--dump-debug-map"], [606, 0, 1, "cmdoption-dsymutil-flat", "--flat"], [606, 0, 1, "cmdoption-dsymutil-gen-reproducer", "--gen-reproducer"], [606, 0, 1, "cmdoption-dsymutil-help", "--help"], [606, 0, 1, "cmdoption-dsymutil-keep-function-for-static", "--keep-function-for-static"], [606, 0, 1, "cmdoption-dsymutil-minimize", "--minimize"], [606, 0, 1, "cmdoption-dsymutil-no-odr", "--no-odr"], [606, 0, 1, "cmdoption-dsymutil-no-output", "--no-output"], [606, 0, 1, "cmdoption-dsymutil-no-swiftmodule-timestamp", "--no-swiftmodule-timestamp"], [606, 0, 1, "cmdoption-dsymutil-num-threads", "--num-threads"], [606, 0, 1, "cmdoption-dsymutil-object-prefix-map", "--object-prefix-map"], [606, 0, 1, "cmdoption-dsymutil-oso-prepend-path", "--oso-prepend-path"], [606, 0, 1, "cmdoption-dsymutil-out", "--out"], [606, 0, 1, "cmdoption-dsymutil-papertrail", "--papertrail"], [606, 0, 1, "cmdoption-dsymutil-remarks-output-format", "--remarks-output-format"], [606, 0, 1, "cmdoption-dsymutil-remarks-prepend-path", "--remarks-prepend-path"], [606, 0, 1, "cmdoption-dsymutil-statistics", "--statistics"], [606, 0, 1, "cmdoption-dsymutil-symbol-map", "--symbol-map"], [606, 0, 1, "cmdoption-dsymutil-s", "--symtab"], [606, 0, 1, "cmdoption-dsymutil-toolchain", "--toolchain"], [606, 0, 1, "cmdoption-dsymutil-u", "--update"], [606, 0, 1, "cmdoption-dsymutil-use-reproducer", "--use-reproducer"], [606, 0, 1, "cmdoption-dsymutil-verbose", "--verbose"], [606, 0, 1, "cmdoption-dsymutil-verify", "--verify"], [606, 0, 1, "cmdoption-dsymutil-v", "--version"], [606, 0, 1, "cmdoption-dsymutil-S", "-S"], [606, 0, 1, "cmdoption-dsymutil-flat", "-f"], [606, 0, 1, "cmdoption-dsymutil-help", "-h"], [606, 0, 1, "cmdoption-dsymutil-num-threads", "-j"], [606, 0, 1, "cmdoption-dsymutil-out", "-o"], [606, 0, 1, "cmdoption-dsymutil-s", "-s"], [606, 0, 1, "cmdoption-dsymutil-u", "-u"], [606, 0, 1, "cmdoption-dsymutil-v", "-v"], [606, 0, 1, "cmdoption-dsymutil-y", "-y"], [606, 0, 1, "cmdoption-dsymutil-minimize", "-z"]], "lit": [[608, 0, 1, "cmdoption-lit-config-prefix", "--config-prefix"], [608, 0, 1, "cmdoption-lit-debug", "--debug"], [608, 0, 1, "cmdoption-lit-vv", "--echo-all-commands"], [608, 0, 1, "cmdoption-lit-filter", "--filter"], [608, 0, 1, "cmdoption-lit-filter-out", "--filter-out"], [608, 0, 1, "cmdoption-lit-h", "--help"], [608, 0, 1, "cmdoption-lit-ignore-fail", "--ignore-fail"], [608, 0, 1, "cmdoption-lit-max-failures", "--max-failures"], [608, 0, 1, "cmdoption-lit-max-tests", "--max-tests"], [608, 0, 1, "cmdoption-lit-max-time", "--max-time"], [608, 0, 1, "cmdoption-lit-no-indirectly-run-check", "--no-indirectly-run-check"], [608, 0, 1, "cmdoption-lit-no-progress-bar", "--no-progress-bar"], [608, 0, 1, "cmdoption-lit-num-shards", "--num-shards"], [608, 0, 1, "cmdoption-lit-D", "--param"], [608, 0, 1, "cmdoption-lit-path", "--path"], [608, 0, 1, "cmdoption-lit-q", "--quiet"], [608, 0, 1, "cmdoption-lit-run-shard", "--run-shard"], [608, 0, 1, "cmdoption-lit-a", "--show-all"], [608, 0, 1, "cmdoption-lit-show-suites", "--show-suites"], [608, 0, 1, "cmdoption-lit-show-tests", "--show-tests"], [608, 0, 1, "cmdoption-lit-show-unsupported", "--show-unsupported"], [608, 0, 1, "cmdoption-lit-show-xfail", "--show-xfail"], [608, 0, 1, "cmdoption-lit-shuffle", "--shuffle"], [608, 0, 1, "cmdoption-lit-s", "--succinct"], [608, 0, 1, "cmdoption-lit-time-tests", "--time-tests"], [608, 0, 1, "cmdoption-lit-timeout", "--timeout"], [608, 0, 1, "cmdoption-lit-v", "--verbose"], [608, 0, 1, "cmdoption-lit-vg", "--vg"], [608, 0, 1, "cmdoption-lit-vg-arg", "--vg-arg"], [608, 0, 1, "cmdoption-lit-vg-leak", "--vg-leak"], [608, 0, 1, "cmdoption-lit-j", "--workers"], [608, 0, 1, "cmdoption-lit-xfail", "--xfail"], [608, 0, 1, "cmdoption-lit-xfail-not", "--xfail-not"], [608, 0, 1, "cmdoption-lit-D", "-D"], [608, 0, 1, "cmdoption-lit-a", "-a"], [608, 0, 1, "cmdoption-lit-h", "-h"], [608, 0, 1, "cmdoption-lit-j", "-j"], [608, 0, 1, "cmdoption-lit-q", "-q"], [608, 0, 1, "cmdoption-lit-s", "-s"], [608, 0, 1, "cmdoption-lit-v", "-v"], [608, 0, 1, "cmdoption-lit-vv", "-vv"]], "llc": [[609, 0, 1, "cmdoption-llc-disable-excess-fp-precision", "--disable-excess-fp-precision"], [609, 0, 1, "cmdoption-llc-enable-no-infs-fp-math", "--enable-no-infs-fp-math"], [609, 0, 1, "cmdoption-llc-enable-no-nans-fp-math", "--enable-no-nans-fp-math"], [609, 0, 1, "cmdoption-llc-enable-no-signed-zeros-fp-math", "--enable-no-signed-zeros-fp-math"], [609, 0, 1, "cmdoption-llc-enable-no-trapping-fp-math", "--enable-no-trapping-fp-math"], [609, 0, 1, "cmdoption-llc-enable-unsafe-fp-math", "--enable-unsafe-fp-math"], [609, 0, 1, "cmdoption-llc-frame-pointer", "--frame-pointer"], [609, 0, 1, "cmdoption-llc-load", "--load"], [609, 0, 1, "cmdoption-llc-print-after-isel", "--print-after-isel"], [609, 0, 1, "cmdoption-llc-regalloc", "--regalloc"], [609, 0, 1, "cmdoption-llc-spiller", "--spiller"], [609, 0, 1, "cmdoption-llc-stats", "--stats"], [609, 0, 1, "cmdoption-llc-time-passes", "--time-passes"], [609, 0, 1, "cmdoption-llc-x86-asm-syntax", "--x86-asm-syntax"], [609, 0, 1, "cmdoption-llc-O", "-O"], [609, 0, 1, "cmdoption-llc-filetype", "-filetype"], [609, 0, 1, "cmdoption-llc-help", "-help"], [609, 0, 1, "cmdoption-llc-march", "-march"], [609, 0, 1, "cmdoption-llc-mattr", "-mattr"], [609, 0, 1, "cmdoption-llc-mcpu", "-mcpu"], [609, 0, 1, "cmdoption-llc-meabi", "-meabi"], [609, 0, 1, "cmdoption-llc-mtriple", "-mtriple"], [609, 0, 1, "cmdoption-llc-o", "-o"], [609, 0, 1, "cmdoption-llc-remarks-section", "-remarks-section"], [609, 0, 1, "cmdoption-llc-stack-size-section", "-stack-size-section"]], "lli": [[611, 0, 1, "cmdoption-lli-code-model", "-code-model"], [611, 0, 1, "cmdoption-lli-disable-excess-fp-precision", "-disable-excess-fp-precision"], [611, 0, 1, "cmdoption-lli-disable-post-RA-scheduler", "-disable-post-RA-scheduler"], [611, 0, 1, "cmdoption-lli-disable-spill-fusing", "-disable-spill-fusing"], [611, 0, 1, "cmdoption-lli-enable-no-infs-fp-math", "-enable-no-infs-fp-math"], [611, 0, 1, "cmdoption-lli-enable-no-nans-fp-math", "-enable-no-nans-fp-math"], [611, 0, 1, "cmdoption-lli-enable-unsafe-fp-math", "-enable-unsafe-fp-math"], [611, 0, 1, "cmdoption-lli-fake-argv0", "-fake-argv0"], [611, 0, 1, "cmdoption-lli-force-interpreter", "-force-interpreter"], [611, 0, 1, "cmdoption-lli-help", "-help"], [611, 0, 1, "cmdoption-lli-jit-enable-eh", "-jit-enable-eh"], [611, 0, 1, "cmdoption-lli-join-liveintervals", "-join-liveintervals"], [611, 0, 1, "cmdoption-lli-load", "-load"], [611, 0, 1, "cmdoption-lli-march", "-march"], [611, 0, 1, "cmdoption-lli-mattr", "-mattr"], [611, 0, 1, "cmdoption-lli-mcpu", "-mcpu"], [611, 0, 1, "cmdoption-lli-mtriple", "-mtriple"], [611, 0, 1, "cmdoption-lli-nozero-initialized-in-bss", "-nozero-initialized-in-bss"], [611, 0, 1, "cmdoption-lli-pre-RA-sched", "-pre-RA-sched"], [611, 0, 1, "cmdoption-lli-regalloc", "-regalloc"], [611, 0, 1, "cmdoption-lli-relocation-model", "-relocation-model"], [611, 0, 1, "cmdoption-lli-soft-float", "-soft-float"], [611, 0, 1, "cmdoption-lli-spiller", "-spiller"], [611, 0, 1, "cmdoption-lli-stats", "-stats"], [611, 0, 1, "cmdoption-lli-time-passes", "-time-passes"], [611, 0, 1, "cmdoption-lli-version", "-version"], [611, 0, 1, "cmdoption-lli-x86-asm-syntax", "-x86-asm-syntax"]], "llvm-ar": [[613, 0, 1, "cmdoption-llvm-ar-format", "--format"], [613, 0, 1, "cmdoption-llvm-ar-h", "--help"], [613, 0, 1, "cmdoption-llvm-ar-rsp-quoting", "--rsp-quoting"], [613, 0, 1, "cmdoption-llvm-ar-version", "--version"], [613, 0, 1, "cmdoption-llvm-ar-M", "-M"], [613, 0, 1, "cmdoption-llvm-ar-h", "-h"], [613, 0, 1, "cmdoption-llvm-ar-arg-FILE", "@&lt;FILE&gt;"], [613, 0, 1, "cmdoption-llvm-ar-arg-ADDLIB", "ADDLIB"], [613, 0, 1, "cmdoption-llvm-ar-arg-ADDMOD", "ADDMOD"], [613, 0, 1, "cmdoption-llvm-ar-arg-CREATE", "CREATE"], [613, 0, 1, "cmdoption-llvm-ar-arg-CREATETHIN", "CREATETHIN"], [613, 0, 1, "cmdoption-llvm-ar-arg-D", "D"], [613, 0, 1, "cmdoption-llvm-ar-arg-DELETE", "DELETE"], [613, 0, 1, "cmdoption-llvm-ar-arg-END", "END"], [613, 0, 1, "cmdoption-llvm-ar-arg-L", "L"], [613, 0, 1, "cmdoption-llvm-ar-arg-N", "N"], [613, 0, 1, "cmdoption-llvm-ar-arg-O", "O"], [613, 0, 1, "cmdoption-llvm-ar-arg-P", "P"], [613, 0, 1, "cmdoption-llvm-ar-arg-S", "S"], [613, 0, 1, "cmdoption-llvm-ar-arg-SAVE", "SAVE"], [613, 0, 1, "cmdoption-llvm-ar-arg-T", "T"], [613, 0, 1, "cmdoption-llvm-ar-arg-This", "This"], [613, 0, 1, "cmdoption-llvm-ar-arg-U", "U"], [613, 0, 1, "cmdoption-llvm-ar-arg-V", "V"], [613, 0, 1, "cmdoption-llvm-ar-arg-posix", "``posix``"], [613, 0, 1, "cmdoption-llvm-ar-arg-a", "a"], [613, 0, 1, "cmdoption-llvm-ar-arg-b", "b"], [613, 0, 1, "cmdoption-llvm-ar-arg-c", "c"], [613, 0, 1, "cmdoption-llvm-ar-arg-d", "d"], [613, 0, 1, "cmdoption-llvm-ar-arg-default", "default"], [613, 0, 1, "cmdoption-llvm-ar-arg-This", "either"], [613, 0, 1, "cmdoption-llvm-ar-arg-i", "i"], [613, 0, 1, "cmdoption-llvm-ar-arg-m", "m"], [613, 0, 1, "cmdoption-llvm-ar-arg-o", "o"], [613, 0, 1, "cmdoption-llvm-ar-arg-posix", "otherwise"], [613, 0, 1, "cmdoption-llvm-ar-arg-p", "p"], [613, 0, 1, "cmdoption-llvm-ar-arg-q", "q"], [613, 0, 1, "cmdoption-llvm-ar-arg-r", "r"], [613, 0, 1, "cmdoption-llvm-ar-arg-s", "s"], [613, 0, 1, "cmdoption-llvm-ar-arg-u", "u"], [613, 0, 1, "cmdoption-llvm-ar-arg-v", "v"], [613, 0, 1, "cmdoption-llvm-ar-arg-x", "x"]], "llvm-bcanalyzer": [[615, 0, 1, "cmdoption-llvm-bcanalyzer-dump", "-dump"], [615, 0, 1, "cmdoption-llvm-bcanalyzer-help", "-help"], [615, 0, 1, "cmdoption-llvm-bcanalyzer-nodetails", "-nodetails"], [615, 0, 1, "cmdoption-llvm-bcanalyzer-verify", "-verify"]], "llvm-cov-export": [[617, 0, 1, "cmdoption-llvm-cov-export-arch", "-arch"], [617, 0, 1, "cmdoption-llvm-cov-export-compilation-dir", "-compilation-dir"], [617, 0, 1, "cmdoption-llvm-cov-export-format", "-format"], [617, 0, 1, "cmdoption-llvm-cov-export-ignore-filename-regex", "-ignore-filename-regex"], [617, 0, 1, "cmdoption-llvm-cov-export-num-threads", "-j"], [617, 0, 1, "cmdoption-llvm-cov-export-num-threads", "-num-threads"], [617, 0, 1, "cmdoption-llvm-cov-export-skip-expansions", "-skip-expansions"], [617, 0, 1, "cmdoption-llvm-cov-export-skip-functions", "-skip-functions"], [617, 0, 1, "cmdoption-llvm-cov-export-summary-only", "-summary-only"]], "llvm-cov-gcov": [[617, 0, 1, "cmdoption-llvm-cov-gcov-a", "--all-blocks"], [617, 0, 1, "cmdoption-llvm-cov-gcov-c", "--branch-counts"], [617, 0, 1, "cmdoption-llvm-cov-gcov-b", "--branch-probabilities"], [617, 0, 1, "cmdoption-llvm-cov-gcov-m", "--demangled-names"], [617, 0, 1, "cmdoption-llvm-cov-gcov-f", "--function-summaries"], [617, 0, 1, "cmdoption-llvm-cov-gcov-x", "--hash-filenames"], [617, 0, 1, "cmdoption-llvm-cov-gcov-help", "--help"], [617, 0, 1, "cmdoption-llvm-cov-gcov-l", "--long-file-names"], [617, 0, 1, "cmdoption-llvm-cov-gcov-n", "--no-output"], [617, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-directory"], [617, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-file"], [617, 0, 1, "cmdoption-llvm-cov-gcov-p", "--preserve-paths"], [617, 0, 1, "cmdoption-llvm-cov-gcov-t", "--stdout"], [617, 0, 1, "cmdoption-llvm-cov-gcov-u", "--unconditional-branches"], [617, 0, 1, "cmdoption-llvm-cov-gcov-a", "-a"], [617, 0, 1, "cmdoption-llvm-cov-gcov-b", "-b"], [617, 0, 1, "cmdoption-llvm-cov-gcov-c", "-c"], [617, 0, 1, "cmdoption-llvm-cov-gcov-f", "-f"], [617, 0, 1, "cmdoption-llvm-cov-gcov-l", "-l"], [617, 0, 1, "cmdoption-llvm-cov-gcov-m", "-m"], [617, 0, 1, "cmdoption-llvm-cov-gcov-n", "-n"], [617, 0, 1, "cmdoption-llvm-cov-gcov-o", "-o"], [617, 0, 1, "cmdoption-llvm-cov-gcov-p", "-p"], [617, 0, 1, "cmdoption-llvm-cov-gcov-r", "-r"], [617, 0, 1, "cmdoption-llvm-cov-gcov-s", "-s"], [617, 0, 1, "cmdoption-llvm-cov-gcov-t", "-t"], [617, 0, 1, "cmdoption-llvm-cov-gcov-u", "-u"], [617, 0, 1, "cmdoption-llvm-cov-gcov-version", "-version"], [617, 0, 1, "cmdoption-llvm-cov-gcov-x", "-x"]], "llvm-cov-report": [[617, 0, 1, "cmdoption-llvm-cov-report-arch", "-arch"], [617, 0, 1, "cmdoption-llvm-cov-report-compilation-dir", "-compilation-dir"], [617, 0, 1, "cmdoption-llvm-cov-report-ignore-filename-regex", "-ignore-filename-regex"], [617, 0, 1, "cmdoption-llvm-cov-report-show-branch-summary", "-show-branch-summary"], [617, 0, 1, "cmdoption-llvm-cov-report-show-functions", "-show-functions"], [617, 0, 1, "cmdoption-llvm-cov-report-show-instantiation-summary", "-show-instantiation-summary"], [617, 0, 1, "cmdoption-llvm-cov-report-show-region-summary", "-show-region-summary"], [617, 0, 1, "cmdoption-llvm-cov-report-use-color", "-use-color"]], "llvm-cov-show": [[617, 0, 1, "cmdoption-llvm-cov-show-Xdemangler", "-Xdemangler"], [617, 0, 1, "cmdoption-llvm-cov-show-arch", "-arch"], [617, 0, 1, "cmdoption-llvm-cov-show-compilation-dir", "-compilation-dir"], [617, 0, 1, "cmdoption-llvm-cov-show-format", "-format"], [617, 0, 1, "cmdoption-llvm-cov-show-ignore-filename-regex", "-ignore-filename-regex"], [617, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-j"], [617, 0, 1, "cmdoption-llvm-cov-show-line-coverage-gt", "-line-coverage-gt"], [617, 0, 1, "cmdoption-llvm-cov-show-line-coverage-lt", "-line-coverage-lt"], [617, 0, 1, "cmdoption-llvm-cov-show-name", "-name"], [617, 0, 1, "cmdoption-llvm-cov-show-name-regex", "-name-regex"], [617, 0, 1, "cmdoption-llvm-cov-show-name-whitelist", "-name-whitelist"], [617, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-num-threads"], [617, 0, 1, "cmdoption-llvm-cov-show-output-dir", "-output-dir"], [617, 0, 1, "cmdoption-llvm-cov-show-path-equivalence", "-path-equivalence"], [617, 0, 1, "cmdoption-llvm-cov-show-region-coverage-gt", "-region-coverage-gt"], [617, 0, 1, "cmdoption-llvm-cov-show-region-coverage-lt", "-region-coverage-lt"], [617, 0, 1, "cmdoption-llvm-cov-show-show-branches", "-show-branches"], [617, 0, 1, "cmdoption-llvm-cov-show-show-expansions", "-show-expansions"], [617, 0, 1, "cmdoption-llvm-cov-show-show-instantiations", "-show-instantiations"], [617, 0, 1, "cmdoption-llvm-cov-show-show-line-counts", "-show-line-counts"], [617, 0, 1, "cmdoption-llvm-cov-show-show-line-counts-or-regions", "-show-line-counts-or-regions"], [617, 0, 1, "cmdoption-llvm-cov-show-show-regions", "-show-regions"], [617, 0, 1, "cmdoption-llvm-cov-show-tab-size", "-tab-size"], [617, 0, 1, "cmdoption-llvm-cov-show-use-color", "-use-color"]], "llvm-cxxfilt": [[618, 0, 1, "cmdoption-llvm-cxxfilt-format", "--format"], [618, 0, 1, "cmdoption-llvm-cxxfilt-help", "--help"], [618, 0, 1, "cmdoption-llvm-cxxfilt-no-strip-underscore", "--no-strip-underscore"], [618, 0, 1, "cmdoption-llvm-cxxfilt-strip-underscore", "--strip-underscore"], [618, 0, 1, "cmdoption-llvm-cxxfilt-types", "--types"], [618, 0, 1, "cmdoption-llvm-cxxfilt-version", "--version"], [618, 0, 1, "cmdoption-llvm-cxxfilt-strip-underscore", "-_"], [618, 0, 1, "cmdoption-llvm-cxxfilt-help", "-h"], [618, 0, 1, "cmdoption-llvm-cxxfilt-no-strip-underscore", "-n"], [618, 0, 1, "cmdoption-llvm-cxxfilt-format", "-s"], [618, 0, 1, "cmdoption-llvm-cxxfilt-types", "-t"], [618, 0, 1, "cmdoption-llvm-cxxfilt-arg-FILE", "@&lt;FILE&gt;"]], "llvm-cxxmap": [[619, 0, 1, "cmdoption-llvm-cxxmap-Wambiguous", "-Wambiguous"], [619, 0, 1, "cmdoption-llvm-cxxmap-Wincomplete", "-Wincomplete"], [619, 0, 1, "cmdoption-llvm-cxxmap-output", "-o"], [619, 0, 1, "cmdoption-llvm-cxxmap-output", "-output"], [619, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-r"], [619, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-remapping-file"]], "llvm-dwarfdump": [[622, 0, 1, "cmdoption-llvm-dwarfdump-a", "--all"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-names"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-namespaces"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-objc"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-types"], [622, 0, 1, "cmdoption-llvm-dwarfdump-arch", "--arch"], [622, 0, 1, "cmdoption-llvm-dwarfdump-color", "--color"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-abbrev"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-addr"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-aranges"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-cu-index"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-frame"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-gnu-pubnames"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-gnu-pubtypes"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-info"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-line"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-line-str"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-loc"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-loclists"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-macro"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-names"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-pubnames"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-pubtypes"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-ranges"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-rnglists"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-str"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-str-offsets"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-tu-index"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-types"], [622, 0, 1, "cmdoption-llvm-dwarfdump-diff", "--diff"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--eh-frame"], [622, 0, 1, "cmdoption-llvm-dwarfdump-f", "--find"], [622, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--gdb-index"], [622, 0, 1, "cmdoption-llvm-dwarfdump-h", "--help"], [622, 0, 1, "cmdoption-llvm-dwarfdump-help-list", "--help-list"], [622, 0, 1, "cmdoption-llvm-dwarfdump-i", "--ignore-case"], [622, 0, 1, "cmdoption-llvm-dwarfdump-lookup", "--lookup"], [622, 0, 1, "cmdoption-llvm-dwarfdump-n", "--name"], [622, 0, 1, "cmdoption-llvm-dwarfdump-parent-recurse-depth", "--parent-recurse-depth"], [622, 0, 1, "cmdoption-llvm-dwarfdump-quiet", "--quiet"], [622, 0, 1, "cmdoption-llvm-dwarfdump-r", "--recurse-depth"], [622, 0, 1, "cmdoption-llvm-dwarfdump-x", "--regex"], [622, 0, 1, "cmdoption-llvm-dwarfdump-c", "--show-children"], [622, 0, 1, "cmdoption-llvm-dwarfdump-F", "--show-form"], [622, 0, 1, "cmdoption-llvm-dwarfdump-p", "--show-parents"], [622, 0, 1, "cmdoption-llvm-dwarfdump-show-section-sizes", "--show-section-sizes"], [622, 0, 1, "cmdoption-llvm-dwarfdump-statistics", "--statistics"], [622, 0, 1, "cmdoption-llvm-dwarfdump-summarize-types", "--summarize-types"], [622, 0, 1, "cmdoption-llvm-dwarfdump-u", "--uuid"], [622, 0, 1, "cmdoption-llvm-dwarfdump-v", "--verbose"], [622, 0, 1, "cmdoption-llvm-dwarfdump-verify", "--verify"], [622, 0, 1, "cmdoption-llvm-dwarfdump-version", "--version"], [622, 0, 1, "cmdoption-llvm-dwarfdump-F", "-F"], [622, 0, 1, "cmdoption-llvm-dwarfdump-a", "-a"], [622, 0, 1, "cmdoption-llvm-dwarfdump-c", "-c"], [622, 0, 1, "cmdoption-llvm-dwarfdump-f", "-f"], [622, 0, 1, "cmdoption-llvm-dwarfdump-h", "-h"], [622, 0, 1, "cmdoption-llvm-dwarfdump-i", "-i"], [622, 0, 1, "cmdoption-llvm-dwarfdump-n", "-n"], [622, 0, 1, "cmdoption-llvm-dwarfdump-o", "-o"], [622, 0, 1, "cmdoption-llvm-dwarfdump-p", "-p"], [622, 0, 1, "cmdoption-llvm-dwarfdump-r", "-r"], [622, 0, 1, "cmdoption-llvm-dwarfdump-u", "-u"], [622, 0, 1, "cmdoption-llvm-dwarfdump-v", "-v"], [622, 0, 1, "cmdoption-llvm-dwarfdump-x", "-x"], [622, 0, 1, "cmdoption-llvm-dwarfdump-arg-FILE", "@&lt;FILE&gt;"]], "llvm-exegesis": [[623, 0, 1, "cmdoption-llvm-exegesis-dump-object-to-disk", "--dump-object-to-disk"], [623, 0, 1, "cmdoption-llvm-exegesis-analysis-clustering", "-analysis-clustering"], [623, 0, 1, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", "-analysis-clustering-epsilon"], [623, 0, 1, "cmdoption-llvm-exegesis-analysis-clusters-output-file", "-analysis-clusters-output-file"], [623, 0, 1, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", "-analysis-display-unstable-clusters"], [623, 0, 1, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", "-analysis-inconsistencies-output-file"], [623, 0, 1, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", "-analysis-inconsistency-epsilon"], [623, 0, 1, "cmdoption-llvm-exegesis-analysis-numpoints", "-analysis-numpoints"], [623, 0, 1, "cmdoption-llvm-exegesis-benchmarks-file", "-benchmarks-file"], [623, 0, 1, "cmdoption-llvm-exegesis-help", "-help"], [623, 0, 1, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", "-ignore-invalid-sched-class"], [623, 0, 1, "cmdoption-llvm-exegesis-loop-body-size", "-loop-body-size"], [623, 0, 1, "cmdoption-llvm-exegesis-max-configs-per-opcode", "-max-configs-per-opcode"], [623, 0, 1, "cmdoption-llvm-exegesis-mcpu", "-mcpu"], [623, 0, 1, "cmdoption-llvm-exegesis-mode", "-mode"], [623, 0, 1, "cmdoption-llvm-exegesis-num-repetitions", "-num-repetitions"], [623, 0, 1, "cmdoption-llvm-exegesis-opcode-index", "-opcode-index"], [623, 0, 1, "cmdoption-llvm-exegesis-opcode-name", "-opcode-name"], [623, 0, 1, "cmdoption-llvm-exegesis-repetition-mode", "-repetition-mode"], [623, 0, 1, "cmdoption-llvm-exegesis-snippets-file", "-snippets-file"], [623, 0, 1, "cmdoption-llvm-exegesis-x86-lbr-sample-period", "-x86-lbr-sample-period"]], "llvm-install-name-tool": [[625, 0, 1, "cmdoption-llvm-install-name-tool-help", "--help"], [625, 0, 1, "cmdoption-llvm-install-name-tool-version", "--version"], [625, 0, 1, "cmdoption-llvm-install-name-tool-version", "-V"], [625, 0, 1, "cmdoption-llvm-install-name-tool-add_rpath", "-add_rpath"], [625, 0, 1, "cmdoption-llvm-install-name-tool-change", "-change"], [625, 0, 1, "cmdoption-llvm-install-name-tool-delete_all_rpaths", "-delete_all_rpaths"], [625, 0, 1, "cmdoption-llvm-install-name-tool-delete_rpath", "-delete_rpath"], [625, 0, 1, "cmdoption-llvm-install-name-tool-help", "-h"], [625, 0, 1, "cmdoption-llvm-install-name-tool-id", "-id"], [625, 0, 1, "cmdoption-llvm-install-name-tool-rpath", "-rpath"]], "llvm-libtool-darwin": [[627, 0, 1, "cmdoption-llvm-libtool-darwin-D", "-D"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-L", "-L"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-U", "-U"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-V", "-V"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-arch_only", "-arch_only"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-color", "-color"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-filelist", "-filelist"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-h", "-h"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-h", "-help"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-help-list", "-help-list"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-l", "-l"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-no_warning_for_no_symbols", "-no_warning_for_no_symbols"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-o", "-o"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-static", "-static"], [627, 0, 1, "cmdoption-llvm-libtool-darwin-version", "-version"]], "llvm-link": [[628, 0, 1, "cmdoption-llvm-link-S", "-S"], [628, 0, 1, "cmdoption-llvm-link-d", "-d"], [628, 0, 1, "cmdoption-llvm-link-f", "-f"], [628, 0, 1, "cmdoption-llvm-link-help", "-help"], [628, 0, 1, "cmdoption-llvm-link-o", "-o"], [628, 0, 1, "cmdoption-llvm-link-v", "-v"]], "llvm-lipo": [[629, 0, 1, "cmdoption-llvm-lipo-archs", "-archs"], [629, 0, 1, "cmdoption-llvm-lipo-create", "-create"], [629, 0, 1, "cmdoption-llvm-lipo-help", "-h"], [629, 0, 1, "cmdoption-llvm-lipo-help", "-help"], [629, 0, 1, "cmdoption-llvm-lipo-info", "-info"], [629, 0, 1, "cmdoption-llvm-lipo-replace", "-replace"], [629, 0, 1, "cmdoption-llvm-lipo-segalign", "-segalign"], [629, 0, 1, "cmdoption-llvm-lipo-thin", "-thin"], [629, 0, 1, "cmdoption-llvm-lipo-verify_arch", "-verify_arch"], [629, 0, 1, "cmdoption-llvm-lipo-version", "-version"]], "llvm-locstats": [[630, 0, 1, "cmdoption-llvm-locstats-compare", "--compare"], [630, 0, 1, "cmdoption-llvm-locstats-draw-plot", "--draw-plot"], [630, 0, 1, "cmdoption-llvm-locstats-ignore-debug-entry-values", "--ignore-debug-entry-values"], [630, 0, 1, "cmdoption-llvm-locstats-only-formal-parameters", "--only-formal-parameters"], [630, 0, 1, "cmdoption-llvm-locstats-only-variables", "--only-variables"]], "llvm-mca": [[631, 0, 1, "cmdoption-llvm-mca-all-stats", "-all-stats"], [631, 0, 1, "cmdoption-llvm-mca-all-views", "-all-views"], [631, 0, 1, "cmdoption-llvm-mca-bottleneck-analysis", "-bottleneck-analysis"], [631, 0, 1, "cmdoption-llvm-mca-disable-cb", "-disable-cb"], [631, 0, 1, "cmdoption-llvm-mca-dispatch", "-dispatch"], [631, 0, 1, "cmdoption-llvm-mca-dispatch-stats", "-dispatch-stats"], [631, 0, 1, "cmdoption-llvm-mca-help", "-help"], [631, 0, 1, "cmdoption-llvm-mca-instruction-info", "-instruction-info"], [631, 0, 1, "cmdoption-llvm-mca-instruction-tables", "-instruction-tables"], [631, 0, 1, "cmdoption-llvm-mca-iterations", "-iterations"], [631, 0, 1, "cmdoption-llvm-mca-json", "-json"], [631, 0, 1, "cmdoption-llvm-mca-lqueue", "-lqueue"], [631, 0, 1, "cmdoption-llvm-mca-march", "-march"], [631, 0, 1, "cmdoption-llvm-mca-mcpu", "-mcpu"], [631, 0, 1, "cmdoption-llvm-mca-mtriple", "-mtriple"], [631, 0, 1, "cmdoption-llvm-mca-noalias", "-noalias"], [631, 0, 1, "cmdoption-llvm-mca-o", "-o"], [631, 0, 1, "cmdoption-llvm-mca-output-asm-variant", "-output-asm-variant"], [631, 0, 1, "cmdoption-llvm-mca-print-imm-hex", "-print-imm-hex"], [631, 0, 1, "cmdoption-llvm-mca-register-file-size", "-register-file-size"], [631, 0, 1, "cmdoption-llvm-mca-register-file-stats", "-register-file-stats"], [631, 0, 1, "cmdoption-llvm-mca-resource-pressure", "-resource-pressure"], [631, 0, 1, "cmdoption-llvm-mca-retire-stats", "-retire-stats"], [631, 0, 1, "cmdoption-llvm-mca-scheduler-stats", "-scheduler-stats"], [631, 0, 1, "cmdoption-llvm-mca-show-encoding", "-show-encoding"], [631, 0, 1, "cmdoption-llvm-mca-squeue", "-squeue"], [631, 0, 1, "cmdoption-llvm-mca-timeline", "-timeline"], [631, 0, 1, "cmdoption-llvm-mca-timeline-max-cycles", "-timeline-max-cycles"], [631, 0, 1, "cmdoption-llvm-mca-timeline-max-iterations", "-timeline-max-iterations"]], "llvm-nm": [[632, 0, 1, "cmdoption-llvm-nm-add-dyldinfo", "--add-dyldinfo"], [632, 0, 1, "cmdoption-llvm-nm-add-inlinedinfo", "--add-inlinedinfo"], [632, 0, 1, "cmdoption-llvm-nm-arch", "--arch"], [632, 0, 1, "cmdoption-llvm-nm-debug-syms", "--debug-syms"], [632, 0, 1, "cmdoption-llvm-nm-defined-only", "--defined-only"], [632, 0, 1, "cmdoption-llvm-nm-demangle", "--demangle"], [632, 0, 1, "cmdoption-llvm-nm-dyldinfo-only", "--dyldinfo-only"], [632, 0, 1, "cmdoption-llvm-nm-dynamic", "--dynamic"], [632, 0, 1, "cmdoption-llvm-nm-extern-only", "--extern-only"], [632, 0, 1, "cmdoption-llvm-nm-format", "--format"], [632, 0, 1, "cmdoption-llvm-nm-help", "--help"], [632, 0, 1, "cmdoption-llvm-nm-no-demangle", "--no-demangle"], [632, 0, 1, "cmdoption-llvm-nm-no-dyldinfo", "--no-dyldinfo"], [632, 0, 1, "cmdoption-llvm-nm-no-llvm-bc", "--no-llvm-bc"], [632, 0, 1, "cmdoption-llvm-nm-no-sort", "--no-sort"], [632, 0, 1, "cmdoption-llvm-nm-no-weak", "--no-weak"], [632, 0, 1, "cmdoption-llvm-nm-numeric-sort", "--numeric-sort"], [632, 0, 1, "cmdoption-llvm-nm-portability", "--portability"], [632, 0, 1, "cmdoption-llvm-nm-print-armap", "--print-armap"], [632, 0, 1, "cmdoption-llvm-nm-print-file-name", "--print-file-name"], [632, 0, 1, "cmdoption-llvm-nm-print-size", "--print-size"], [632, 0, 1, "cmdoption-llvm-nm-quiet", "--quiet"], [632, 0, 1, "cmdoption-llvm-nm-radix", "--radix"], [632, 0, 1, "cmdoption-llvm-nm-reverse-sort", "--reverse-sort"], [632, 0, 1, "cmdoption-llvm-nm-size-sort", "--size-sort"], [632, 0, 1, "cmdoption-llvm-nm-special-syms", "--special-syms"], [632, 0, 1, "cmdoption-llvm-nm-undefined-only", "--undefined-only"], [632, 0, 1, "cmdoption-llvm-nm-version", "--version"], [632, 0, 1, "cmdoption-llvm-nm-print-file-name", "-A"], [632, 0, 1, "cmdoption-llvm-nm-B", "-B"], [632, 0, 1, "cmdoption-llvm-nm-demangle", "-C"], [632, 0, 1, "cmdoption-llvm-nm-dynamic", "-D"], [632, 0, 1, "cmdoption-llvm-nm-portability", "-P"], [632, 0, 1, "cmdoption-llvm-nm-print-size", "-S"], [632, 0, 1, "cmdoption-llvm-nm-version", "-V"], [632, 0, 1, "cmdoption-llvm-nm-debug-syms", "-a"], [632, 0, 1, "cmdoption-llvm-nm-format", "-f"], [632, 0, 1, "cmdoption-llvm-nm-extern-only", "-g"], [632, 0, 1, "cmdoption-llvm-nm-help", "-h"], [632, 0, 1, "cmdoption-llvm-nm-j", "-j"], [632, 0, 1, "cmdoption-llvm-nm-m", "-m"], [632, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-n"], [632, 0, 1, "cmdoption-llvm-nm-print-file-name", "-o"], [632, 0, 1, "cmdoption-llvm-nm-no-sort", "-p"], [632, 0, 1, "cmdoption-llvm-nm-reverse-sort", "-r"], [632, 0, 1, "cmdoption-llvm-nm-s", "-s"], [632, 0, 1, "cmdoption-llvm-nm-radix", "-t"], [632, 0, 1, "cmdoption-llvm-nm-undefined-only", "-u"], [632, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-v"], [632, 0, 1, "cmdoption-llvm-nm-x", "-x"], [632, 0, 1, "cmdoption-llvm-nm-arg-FILE", "@&lt;FILE&gt;"]], "llvm-objcopy": [[633, 0, 1, "cmdoption-llvm-objcopy-add-gnu-debuglink", "--add-gnu-debuglink"], [633, 0, 1, "cmdoption-llvm-objcopy-add-section", "--add-section"], [633, 0, 1, "cmdoption-llvm-objcopy-add-symbol", "--add-symbol"], [633, 0, 1, "cmdoption-llvm-objcopy-change-start", "--adjust-start"], [633, 0, 1, "cmdoption-llvm-objcopy-allow-broken-links", "--allow-broken-links"], [633, 0, 1, "cmdoption-llvm-objcopy-binary-architecture", "--binary-architecture"], [633, 0, 1, "cmdoption-llvm-objcopy-change-start", "--change-start"], [633, 0, 1, "cmdoption-llvm-objcopy-compress-debug-sections", "--compress-debug-sections"], [633, 0, 1, "cmdoption-llvm-objcopy-decompress-debug-sections", "--decompress-debug-sections"], [633, 0, 1, "cmdoption-llvm-objcopy-disable-deterministic-archives", "--disable-deterministic-archives"], [633, 0, 1, "cmdoption-llvm-objcopy-discard-all", "--discard-all"], [633, 0, 1, "cmdoption-llvm-objcopy-discard-locals", "--discard-locals"], [633, 0, 1, "cmdoption-llvm-objcopy-dump-section", "--dump-section"], [633, 0, 1, "cmdoption-llvm-objcopy-enable-deterministic-archives", "--enable-deterministic-archives"], [633, 0, 1, "cmdoption-llvm-objcopy-extract-dwo", "--extract-dwo"], [633, 0, 1, "cmdoption-llvm-objcopy-extract-main-partition", "--extract-main-partition"], [633, 0, 1, "cmdoption-llvm-objcopy-extract-partition", "--extract-partition"], [633, 0, 1, "cmdoption-llvm-objcopy-globalize-symbol", "--globalize-symbol"], [633, 0, 1, "cmdoption-llvm-objcopy-globalize-symbols", "--globalize-symbols"], [633, 0, 1, "cmdoption-llvm-objcopy-help", "--help"], [633, 0, 1, "cmdoption-llvm-objcopy-input-target", "--input-target"], [633, 0, 1, "cmdoption-llvm-objcopy-keep-file-symbols", "--keep-file-symbols"], [633, 0, 1, "cmdoption-llvm-objcopy-keep-global-symbol", "--keep-global-symbol"], [633, 0, 1, "cmdoption-llvm-objcopy-keep-global-symbols", "--keep-global-symbols"], [633, 0, 1, "cmdoption-llvm-objcopy-keep-section", "--keep-section"], [633, 0, 1, "cmdoption-llvm-objcopy-keep-symbol", "--keep-symbol"], [633, 0, 1, "cmdoption-llvm-objcopy-keep-symbols", "--keep-symbols"], [633, 0, 1, "cmdoption-llvm-objcopy-keep-undefined", "--keep-undefined"], [633, 0, 1, "cmdoption-llvm-objcopy-localize-hidden", "--localize-hidden"], [633, 0, 1, "cmdoption-llvm-objcopy-localize-symbol", "--localize-symbol"], [633, 0, 1, "cmdoption-llvm-objcopy-localize-symbols", "--localize-symbols"], [633, 0, 1, "cmdoption-llvm-objcopy-new-symbol-visibility", "--new-symbol-visibility"], [633, 0, 1, "cmdoption-llvm-objcopy-only-keep-debug", "--only-keep-debug"], [633, 0, 1, "cmdoption-llvm-objcopy-only-section", "--only-section"], [633, 0, 1, "cmdoption-llvm-objcopy-output-target", "--output-target"], [633, 0, 1, "cmdoption-llvm-objcopy-prefix-alloc-sections", "--prefix-alloc-sections"], [633, 0, 1, "cmdoption-llvm-objcopy-prefix-symbols", "--prefix-symbols"], [633, 0, 1, "cmdoption-llvm-objcopy-preserve-dates", "--preserve-dates"], [633, 0, 1, "cmdoption-llvm-objcopy-redefine-sym", "--redefine-sym"], [633, 0, 1, "cmdoption-llvm-objcopy-redefine-syms", "--redefine-syms"], [633, 0, 1, "cmdoption-llvm-objcopy-regex", "--regex"], [633, 0, 1, "cmdoption-llvm-objcopy-remove-section", "--remove-section"], [633, 0, 1, "cmdoption-llvm-objcopy-rename-section", "--rename-section"], [633, 0, 1, "cmdoption-llvm-objcopy-set-section-alignment", "--set-section-alignment"], [633, 0, 1, "cmdoption-llvm-objcopy-set-section-flags", "--set-section-flags"], [633, 0, 1, "cmdoption-llvm-objcopy-set-start-addr", "--set-start-addr"], [633, 0, 1, "cmdoption-llvm-objcopy-split-dwo", "--split-dwo"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-all", "--strip-all"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-all-gnu", "--strip-all-gnu"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-debug", "--strip-debug"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-dwo", "--strip-dwo"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-non-alloc", "--strip-non-alloc"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-sections", "--strip-sections"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-symbol", "--strip-symbol"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-symbols", "--strip-symbols"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded", "--strip-unneeded"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded-symbol", "--strip-unneeded-symbol"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded-symbols", "--strip-unneeded-symbols"], [633, 0, 1, "cmdoption-llvm-objcopy-target", "--target"], [633, 0, 1, "cmdoption-llvm-objcopy-version", "--version"], [633, 0, 1, "cmdoption-llvm-objcopy-weaken", "--weaken"], [633, 0, 1, "cmdoption-llvm-objcopy-weaken-symbol", "--weaken-symbol"], [633, 0, 1, "cmdoption-llvm-objcopy-weaken-symbols", "--weaken-symbols"], [633, 0, 1, "cmdoption-llvm-objcopy-wildcard", "--wildcard"], [633, 0, 1, "cmdoption-llvm-objcopy-binary-architecture", "-B"], [633, 0, 1, "cmdoption-llvm-objcopy-enable-deterministic-archives", "-D"], [633, 0, 1, "cmdoption-llvm-objcopy-target", "-F"], [633, 0, 1, "cmdoption-llvm-objcopy-input-target", "-I"], [633, 0, 1, "cmdoption-llvm-objcopy-keep-symbol", "-K"], [633, 0, 1, "cmdoption-llvm-objcopy-localize-symbol", "-L"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-symbol", "-N"], [633, 0, 1, "cmdoption-llvm-objcopy-output-target", "-O"], [633, 0, 1, "cmdoption-llvm-objcopy-remove-section", "-R"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-all", "-S"], [633, 0, 1, "cmdoption-llvm-objcopy-disable-deterministic-archives", "-U"], [633, 0, 1, "cmdoption-llvm-objcopy-version", "-V"], [633, 0, 1, "cmdoption-llvm-objcopy-weaken-symbol", "-W"], [633, 0, 1, "cmdoption-llvm-objcopy-discard-locals", "-X"], [633, 0, 1, "cmdoption-llvm-objcopy-strip-debug", "-g"], [633, 0, 1, "cmdoption-llvm-objcopy-help", "-h"], [633, 0, 1, "cmdoption-llvm-objcopy-only-section", "-j"], [633, 0, 1, "cmdoption-llvm-objcopy-preserve-dates", "-p"], [633, 0, 1, "cmdoption-llvm-objcopy-wildcard", "-w"], [633, 0, 1, "cmdoption-llvm-objcopy-discard-all", "-x"], [633, 0, 1, "cmdoption-llvm-objcopy-arg-FILE", "@&lt;FILE&gt;"]], "llvm-objdump": [[634, 0, 1, "cmdoption-llvm-objdump-adjust-vma", "--adjust-vma"], [634, 0, 1, "cmdoption-llvm-objdump-x", "--all-headers"], [634, 0, 1, "cmdoption-llvm-objdump-arch", "--arch"], [634, 0, 1, "cmdoption-llvm-objdump-arch-name", "--arch-name"], [634, 0, 1, "cmdoption-llvm-objdump-a", "--archive-headers"], [634, 0, 1, "cmdoption-llvm-objdump-archive-member-offsets", "--archive-member-offsets"], [634, 0, 1, "cmdoption-llvm-objdump-bind", "--bind"], [634, 0, 1, "cmdoption-llvm-objdump-data-in-code", "--data-in-code"], [634, 0, 1, "cmdoption-llvm-objdump-debug-vars", "--debug-vars"], [634, 0, 1, "cmdoption-llvm-objdump-debug-vars-indent", "--debug-vars-indent"], [634, 0, 1, "cmdoption-llvm-objdump-C", "--demangle"], [634, 0, 1, "cmdoption-llvm-objdump-dis-symname", "--dis-symname"], [634, 0, 1, "cmdoption-llvm-objdump-d", "--disassemble"], [634, 0, 1, "cmdoption-llvm-objdump-D", "--disassemble-all"], [634, 0, 1, "cmdoption-llvm-objdump-disassemble-symbols", "--disassemble-symbols"], [634, 0, 1, "cmdoption-llvm-objdump-z", "--disassemble-zeroes"], [634, 0, 1, "cmdoption-llvm-objdump-M", "--disassembler-options"], [634, 0, 1, "cmdoption-llvm-objdump-dsym", "--dsym"], [634, 0, 1, "cmdoption-llvm-objdump-dwarf", "--dwarf"], [634, 0, 1, "cmdoption-llvm-objdump-dylib-id", "--dylib-id"], [634, 0, 1, "cmdoption-llvm-objdump-dylibs-used", "--dylibs-used"], [634, 0, 1, "cmdoption-llvm-objdump-R", "--dynamic-reloc"], [634, 0, 1, "cmdoption-llvm-objdump-T", "--dynamic-syms"], [634, 0, 1, "cmdoption-llvm-objdump-exports-trie", "--exports-trie"], [634, 0, 1, "cmdoption-llvm-objdump-fault-map-section", "--fault-map-section"], [634, 0, 1, "cmdoption-llvm-objdump-f", "--file-headers"], [634, 0, 1, "cmdoption-llvm-objdump-s", "--full-contents"], [634, 0, 1, "cmdoption-llvm-objdump-full-leading-addr", "--full-leading-addr"], [634, 0, 1, "cmdoption-llvm-objdump-function-starts", "--function-starts"], [634, 0, 1, "cmdoption-llvm-objdump-h", "--headers"], [634, 0, 1, "cmdoption-llvm-objdump-help", "--help"], [634, 0, 1, "cmdoption-llvm-objdump-indirect-symbols", "--indirect-symbols"], [634, 0, 1, "cmdoption-llvm-objdump-info-plist", "--info-plist"], [634, 0, 1, "cmdoption-llvm-objdump-lazy-bind", "--lazy-bind"], [634, 0, 1, "cmdoption-llvm-objdump-l", "--line-numbers"], [634, 0, 1, "cmdoption-llvm-objdump-link-opt-hints", "--link-opt-hints"], [634, 0, 1, "cmdoption-llvm-objdump-m", "--macho"], [634, 0, 1, "cmdoption-llvm-objdump-mattr", "--mattr"], [634, 0, 1, "cmdoption-llvm-objdump-mcpu", "--mcpu"], [634, 0, 1, "cmdoption-llvm-objdump-no-leading-addr", "--no-leading-addr"], [634, 0, 1, "cmdoption-llvm-objdump-no-leading-headers", "--no-leading-headers"], [634, 0, 1, "cmdoption-llvm-objdump-no-print-imm-hex", "--no-print-imm-hex"], [634, 0, 1, "cmdoption-llvm-objdump-no-show-raw-insn", "--no-show-raw-insn"], [634, 0, 1, "cmdoption-llvm-objdump-no-symbolic-operands", "--no-symbolic-operands"], [634, 0, 1, "cmdoption-llvm-objdump-non-verbose", "--non-verbose"], [634, 0, 1, "cmdoption-llvm-objdump-objc-meta-data", "--objc-meta-data"], [634, 0, 1, "cmdoption-llvm-objdump-prefix", "--prefix"], [634, 0, 1, "cmdoption-llvm-objdump-prefix-strip", "--prefix-strip"], [634, 0, 1, "cmdoption-llvm-objdump-print-imm-hex", "--print-imm-hex"], [634, 0, 1, "cmdoption-llvm-objdump-private-header", "--private-header"], [634, 0, 1, "cmdoption-llvm-objdump-p", "--private-headers"], [634, 0, 1, "cmdoption-llvm-objdump-raw-clang-ast", "--raw-clang-ast"], [634, 0, 1, "cmdoption-llvm-objdump-rebase", "--rebase"], [634, 0, 1, "cmdoption-llvm-objdump-r", "--reloc"], [634, 0, 1, "cmdoption-llvm-objdump-rpaths", "--rpaths"], [634, 0, 1, "cmdoption-llvm-objdump-j", "--section"], [634, 0, 1, "cmdoption-llvm-objdump-h", "--section-headers"], [634, 0, 1, "cmdoption-llvm-objdump-show-lma", "--show-lma"], [634, 0, 1, "cmdoption-llvm-objdump-S", "--source"], [634, 0, 1, "cmdoption-llvm-objdump-start-address", "--start-address"], [634, 0, 1, "cmdoption-llvm-objdump-stop-address", "--stop-address"], [634, 0, 1, "cmdoption-llvm-objdump-symbol-description", "--symbol-description"], [634, 0, 1, "cmdoption-llvm-objdump-symbolize-operands", "--symbolize-operands"], [634, 0, 1, "cmdoption-llvm-objdump-t", "--syms"], [634, 0, 1, "cmdoption-llvm-objdump-triple", "--triple"], [634, 0, 1, "cmdoption-llvm-objdump-universal-headers", "--universal-headers"], [634, 0, 1, "cmdoption-llvm-objdump-u", "--unwind-info"], [634, 0, 1, "cmdoption-llvm-objdump-v", "--version"], [634, 0, 1, "cmdoption-llvm-objdump-weak-bind", "--weak-bind"], [634, 0, 1, "cmdoption-llvm-objdump-w", "--wide"], [634, 0, 1, "cmdoption-llvm-objdump-x86-asm-syntax", "--x86-asm-syntax"], [634, 0, 1, "cmdoption-llvm-objdump-C", "-C"], [634, 0, 1, "cmdoption-llvm-objdump-D", "-D"], [634, 0, 1, "cmdoption-llvm-objdump-M", "-M"], [634, 0, 1, "cmdoption-llvm-objdump-R", "-R"], [634, 0, 1, "cmdoption-llvm-objdump-S", "-S"], [634, 0, 1, "cmdoption-llvm-objdump-T", "-T"], [634, 0, 1, "cmdoption-llvm-objdump-a", "-a"], [634, 0, 1, "cmdoption-llvm-objdump-d", "-d"], [634, 0, 1, "cmdoption-llvm-objdump-f", "-f"], [634, 0, 1, "cmdoption-llvm-objdump-g", "-g"], [634, 0, 1, "cmdoption-llvm-objdump-h", "-h"], [634, 0, 1, "cmdoption-llvm-objdump-j", "-j"], [634, 0, 1, "cmdoption-llvm-objdump-l", "-l"], [634, 0, 1, "cmdoption-llvm-objdump-m", "-m"], [634, 0, 1, "cmdoption-llvm-objdump-p", "-p"], [634, 0, 1, "cmdoption-llvm-objdump-r", "-r"], [634, 0, 1, "cmdoption-llvm-objdump-s", "-s"], [634, 0, 1, "cmdoption-llvm-objdump-t", "-t"], [634, 0, 1, "cmdoption-llvm-objdump-u", "-u"], [634, 0, 1, "cmdoption-llvm-objdump-v", "-v"], [634, 0, 1, "cmdoption-llvm-objdump-w", "-w"], [634, 0, 1, "cmdoption-llvm-objdump-x", "-x"], [634, 0, 1, "cmdoption-llvm-objdump-z", "-z"], [634, 0, 1, "cmdoption-llvm-objdump-arg-FILE", "@&lt;FILE&gt;"], [634, 0, 1, "cmdoption-llvm-objdump-arg-att", "att"], [634, 0, 1, "cmdoption-llvm-objdump-arg-intel", "intel"]], "llvm-otool": [[635, 0, 1, "cmdoption-llvm-otool-help", "--help"], [635, 0, 1, "cmdoption-llvm-otool-help-hidden", "--help-hidden"], [635, 0, 1, "cmdoption-llvm-otool-version", "--version"], [635, 0, 1, "cmdoption-llvm-otool-C", "-C"], [635, 0, 1, "cmdoption-llvm-otool-D", "-D"], [635, 0, 1, "cmdoption-llvm-otool-G", "-G"], [635, 0, 1, "cmdoption-llvm-otool-I", "-I"], [635, 0, 1, "cmdoption-llvm-otool-L", "-L"], [635, 0, 1, "cmdoption-llvm-otool-P", "-P"], [635, 0, 1, "cmdoption-llvm-otool-V", "-V"], [635, 0, 1, "cmdoption-llvm-otool-X", "-X"], [635, 0, 1, "cmdoption-llvm-otool-arch", "-arch"], [635, 0, 1, "cmdoption-llvm-otool-d", "-d"], [635, 0, 1, "cmdoption-llvm-otool-f", "-f"], [635, 0, 1, "cmdoption-llvm-otool-h", "-h"], [635, 0, 1, "cmdoption-llvm-otool-j", "-j"], [635, 0, 1, "cmdoption-llvm-otool-l", "-l"], [635, 0, 1, "cmdoption-llvm-otool-mcpu", "-mcpu"], [635, 0, 1, "cmdoption-llvm-otool-o", "-o"], [635, 0, 1, "cmdoption-llvm-otool-p", "-p"], [635, 0, 1, "cmdoption-llvm-otool-r", "-r"], [635, 0, 1, "cmdoption-llvm-otool-s", "-s"], [635, 0, 1, "cmdoption-llvm-otool-t", "-t"], [635, 0, 1, "cmdoption-llvm-otool-v", "-v"], [635, 0, 1, "cmdoption-llvm-otool-x", "-x"], [635, 0, 1, "cmdoption-llvm-otool-arg-FILE", "@&lt;FILE&gt;"]], "llvm-pdbutil-bytes": [[636, 0, 1, "cmdoption-llvm-pdbutil-bytes-block-range", "-block-range"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-byte-range", "-byte-range"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-chunks", "-chunks"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-ec", "-ec"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-files", "-files"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-fpm", "-fpm"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-id", "-id"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-mod", "-mod"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-modi", "-modi"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-name-map", "-name-map"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-sc", "-sc"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-sm", "-sm"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-split-chunks", "-split-chunks"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-stream-data", "-stream-data"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-syms", "-syms"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-type", "-type"], [636, 0, 1, "cmdoption-llvm-pdbutil-bytes-type-server", "-type-server"]], "llvm-pdbutil-dump": [[636, 0, 1, "cmdoption-llvm-pdbutil-dump-all", "-all"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-dependents", "-dependents"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-files", "-files"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-global-extras", "-global-extras"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-globals", "-globals"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-id-data", "-id-data"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-id-extras", "-id-extras"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-id-index", "-id-index"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-ids", "-ids"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-il", "-il"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-l", "-l"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-modi", "-modi"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-modules", "-modules"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-public-extras", "-public-extras"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-publics", "-publics"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-section-contribs", "-section-contribs"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-section-headers", "-section-headers"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-section-map", "-section-map"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-stream-blocks", "-stream-blocks"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-streams", "-streams"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-string-table", "-string-table"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-summary", "-summary"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-sym-data", "-sym-data"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-symbols", "-symbols"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-type-data", "-type-data"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-type-extras", "-type-extras"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-type-index", "-type-index"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-types", "-types"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-xme", "-xme"], [636, 0, 1, "cmdoption-llvm-pdbutil-dump-xmi", "-xmi"]], "llvm-pdbutil-merge": [[636, 0, 1, "cmdoption-llvm-pdbutil-merge-pdb", "-pdb"]], "llvm-pdbutil-pretty": [[636, 0, 1, "cmdoption-llvm-pdbutil-pretty-all", "-all"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-definitions", "-class-definitions"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-order", "-class-order"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", "-class-recurse-depth"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-classes", "-classes"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-color-output", "-color-output"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-compilands", "-compilands"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-enums", "-enums"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", "-exclude-compilands"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", "-exclude-symbols"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-types", "-exclude-types"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-externals", "-externals"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-globals", "-globals"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-compilands", "-include-compilands"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-symbols", "-include-symbols"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-types", "-include-types"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-lines", "-lines"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-load-address", "-load-address"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding", "-min-class-padding"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", "-min-class-padding-imm"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-type-size", "-min-type-size"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-module-syms", "-module-syms"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", "-no-compiler-generated"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", "-no-enum-definitions"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-system-libs", "-no-system-libs"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-sym-types", "-sym-types"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-symbol-order", "-symbol-order"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-typedefs", "-typedefs"], [636, 0, 1, "cmdoption-llvm-pdbutil-pretty-types", "-types"]], "llvm-pdbutil-yaml2pdb": [[636, 0, 1, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", "-pdb"]], "llvm-profdata-merge": [[637, 0, 1, "cmdoption-llvm-profdata-merge-binary", "-binary"], [637, 0, 1, "cmdoption-llvm-profdata-merge-compress-all-sections", "-compress-all-sections"], [637, 0, 1, "cmdoption-llvm-profdata-merge-extbinary", "-extbinary"], [637, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "-f"], [637, 0, 1, "cmdoption-llvm-profdata-merge-failure-mode", "-failure-mode"], [637, 0, 1, "cmdoption-llvm-profdata-merge-gcc", "-gcc"], [637, 0, 1, "cmdoption-llvm-profdata-merge-gen-partial-profile", "-gen-partial-profile"], [637, 0, 1, "cmdoption-llvm-profdata-merge-help", "-help"], [637, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "-input-files"], [637, 0, 1, "cmdoption-llvm-profdata-merge-instr", "-instr"], [637, 0, 1, "cmdoption-llvm-profdata-merge-instr-prof-cold-threshold", "-instr-prof-cold-threshold"], [637, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "-j"], [637, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "-num-threads"], [637, 0, 1, "cmdoption-llvm-profdata-merge-output", "-o"], [637, 0, 1, "cmdoption-llvm-profdata-merge-output", "-output"], [637, 0, 1, "cmdoption-llvm-profdata-merge-prof-sym-list", "-prof-sym-list"], [637, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "-r"], [637, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "-remapping-file"], [637, 0, 1, "cmdoption-llvm-profdata-merge-sample", "-sample"], [637, 0, 1, "cmdoption-llvm-profdata-merge-sparse", "-sparse"], [637, 0, 1, "cmdoption-llvm-profdata-merge-suppl-min-size-threshold", "-suppl-min-size-threshold"], [637, 0, 1, "cmdoption-llvm-profdata-merge-supplement-instr-with-sample", "-supplement-instr-with-sample"], [637, 0, 1, "cmdoption-llvm-profdata-merge-text", "-text"], [637, 0, 1, "cmdoption-llvm-profdata-merge-use-md5", "-use-md5"], [637, 0, 1, "cmdoption-llvm-profdata-merge-weighted-input", "-weighted-input"], [637, 0, 1, "cmdoption-llvm-profdata-merge-zero-counter-threshold", "-zero-counter-threshold"]], "llvm-profdata-overlap": [[637, 0, 1, "cmdoption-llvm-profdata-overlap-cs", "-cs"], [637, 0, 1, "cmdoption-llvm-profdata-overlap-function", "-function"], [637, 0, 1, "cmdoption-llvm-profdata-overlap-help", "-help"], [637, 0, 1, "cmdoption-llvm-profdata-overlap-o", "-o"], [637, 0, 1, "cmdoption-llvm-profdata-overlap-value-cutoff", "-value-cutoff"]], "llvm-profdata-show": [[637, 0, 1, "cmdoption-llvm-profdata-show-all-functions", "-all-functions"], [637, 0, 1, "cmdoption-llvm-profdata-show-counts", "-counts"], [637, 0, 1, "cmdoption-llvm-profdata-show-function", "-function"], [637, 0, 1, "cmdoption-llvm-profdata-show-help", "-help"], [637, 0, 1, "cmdoption-llvm-profdata-show-instr", "-instr"], [637, 0, 1, "cmdoption-llvm-profdata-show-list-below-cutoff", "-list-below-cutoff"], [637, 0, 1, "cmdoption-llvm-profdata-show-memop-sizes", "-memop-sizes"], [637, 0, 1, "cmdoption-llvm-profdata-show-output", "-o"], [637, 0, 1, "cmdoption-llvm-profdata-show-output", "-output"], [637, 0, 1, "cmdoption-llvm-profdata-show-sample", "-sample"], [637, 0, 1, "cmdoption-llvm-profdata-show-show-prof-sym-list", "-show-prof-sym-list"], [637, 0, 1, "cmdoption-llvm-profdata-show-show-sec-info-only", "-show-sec-info-only"], [637, 0, 1, "cmdoption-llvm-profdata-show-showcs", "-showcs"], [637, 0, 1, "cmdoption-llvm-profdata-show-text", "-text"], [637, 0, 1, "cmdoption-llvm-profdata-show-topn", "-topn"], [637, 0, 1, "cmdoption-llvm-profdata-show-value-cutoff", "-value-cutoff"]], "llvm-profgen": [[638, 0, 1, "cmdoption-llvm-profgen-binary", "--binary"], [638, 0, 1, "cmdoption-llvm-profgen-format", "--format"], [638, 0, 1, "cmdoption-llvm-profgen-output", "--output"], [638, 0, 1, "cmdoption-llvm-profgen-perfscript", "--perfscript"], [638, 0, 1, "cmdoption-llvm-profgen-show-disassembly", "--show-disassembly"], [638, 0, 1, "cmdoption-llvm-profgen-show-mmap-events", "--show-mmap-events"], [638, 0, 1, "cmdoption-llvm-profgen-x86-asm-syntax", "--x86-asm-syntax"]], "llvm-readelf": [[640, 0, 1, "cmdoption-llvm-readelf-addrsig", "--addrsig"], [640, 0, 1, "cmdoption-llvm-readelf-all", "--all"], [640, 0, 1, "cmdoption-llvm-readelf-arch-specific", "--arch-specific"], [640, 0, 1, "cmdoption-llvm-readelf-bb-addr-map", "--bb-addr-map"], [640, 0, 1, "cmdoption-llvm-readelf-cg-profile", "--cg-profile"], [640, 0, 1, "cmdoption-llvm-readelf-demangle", "--demangle"], [640, 0, 1, "cmdoption-llvm-readelf-dyn-relocations", "--dyn-relocations"], [640, 0, 1, "cmdoption-llvm-readelf-dyn-symbols", "--dyn-symbols"], [640, 0, 1, "cmdoption-llvm-readelf-dyn-symbols", "--dyn-syms"], [640, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "--dynamic"], [640, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "--dynamic-table"], [640, 0, 1, "cmdoption-llvm-readelf-elf-linker-options", "--elf-linker-options"], [640, 0, 1, "cmdoption-llvm-readelf-elf-output-style", "--elf-output-style"], [640, 0, 1, "cmdoption-llvm-readelf-expand-relocs", "--expand-relocs"], [640, 0, 1, "cmdoption-llvm-readelf-file-header", "--file-header"], [640, 0, 1, "cmdoption-llvm-readelf-gnu-hash-table", "--gnu-hash-table"], [640, 0, 1, "cmdoption-llvm-readelf-hash-symbols", "--hash-symbols"], [640, 0, 1, "cmdoption-llvm-readelf-hash-table", "--hash-table"], [640, 0, 1, "cmdoption-llvm-readelf-headers", "--headers"], [640, 0, 1, "cmdoption-llvm-readelf-help", "--help"], [640, 0, 1, "cmdoption-llvm-readelf-hex-dump", "--hex-dump"], [640, 0, 1, "cmdoption-llvm-readelf-histogram", "--histogram"], [640, 0, 1, "cmdoption-llvm-readelf-needed-libs", "--needed-libs"], [640, 0, 1, "cmdoption-llvm-readelf-notes", "--notes"], [640, 0, 1, "cmdoption-llvm-readelf-program-headers", "--program-headers"], [640, 0, 1, "cmdoption-llvm-readelf-raw-relr", "--raw-relr"], [640, 0, 1, "cmdoption-llvm-readelf-relocations", "--relocations"], [640, 0, 1, "cmdoption-llvm-readelf-relocations", "--relocs"], [640, 0, 1, "cmdoption-llvm-readelf-section-data", "--section-data"], [640, 0, 1, "cmdoption-llvm-readelf-section-details", "--section-details"], [640, 0, 1, "cmdoption-llvm-readelf-section-groups", "--section-groups"], [640, 0, 1, "cmdoption-llvm-readelf-sections", "--section-headers"], [640, 0, 1, "cmdoption-llvm-readelf-section-mapping", "--section-mapping"], [640, 0, 1, "cmdoption-llvm-readelf-section-relocations", "--section-relocations"], [640, 0, 1, "cmdoption-llvm-readelf-section-symbols", "--section-symbols"], [640, 0, 1, "cmdoption-llvm-readelf-sections", "--sections"], [640, 0, 1, "cmdoption-llvm-readelf-program-headers", "--segments"], [640, 0, 1, "cmdoption-llvm-readelf-stack-sizes", "--stack-sizes"], [640, 0, 1, "cmdoption-llvm-readelf-stackmap", "--stackmap"], [640, 0, 1, "cmdoption-llvm-readelf-string-dump", "--string-dump"], [640, 0, 1, "cmdoption-llvm-readelf-symbols", "--symbols"], [640, 0, 1, "cmdoption-llvm-readelf-symbols", "--syms"], [640, 0, 1, "cmdoption-llvm-readelf-unwind", "--unwind"], [640, 0, 1, "cmdoption-llvm-readelf-version", "--version"], [640, 0, 1, "cmdoption-llvm-readelf-version-info", "--version-info"], [640, 0, 1, "cmdoption-llvm-readelf-arch-specific", "-A"], [640, 0, 1, "cmdoption-llvm-readelf-demangle", "-C"], [640, 0, 1, "cmdoption-llvm-readelf-histogram", "-I"], [640, 0, 1, "cmdoption-llvm-readelf-sections", "-S"], [640, 0, 1, "cmdoption-llvm-readelf-version-info", "-V"], [640, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "-d"], [640, 0, 1, "cmdoption-llvm-readelf-headers", "-e"], [640, 0, 1, "cmdoption-llvm-readelf-section-groups", "-g"], [640, 0, 1, "cmdoption-llvm-readelf-file-header", "-h"], [640, 0, 1, "cmdoption-llvm-readelf-program-headers", "-l"], [640, 0, 1, "cmdoption-llvm-readelf-notes", "-n"], [640, 0, 1, "cmdoption-llvm-readelf-string-dump", "-p"], [640, 0, 1, "cmdoption-llvm-readelf-relocations", "-r"], [640, 0, 1, "cmdoption-llvm-readelf-symbols", "-s"], [640, 0, 1, "cmdoption-llvm-readelf-section-details", "-t"], [640, 0, 1, "cmdoption-llvm-readelf-unwind", "-u"], [640, 0, 1, "cmdoption-llvm-readelf-hex-dump", "-x"], [640, 0, 1, "cmdoption-llvm-readelf-arg-FILE", "@&lt;FILE&gt;"]], "llvm-readobj": [[641, 0, 1, "cmdoption-llvm-readobj-addrsig", "--addrsig"], [641, 0, 1, "cmdoption-llvm-readobj-all", "--all"], [641, 0, 1, "cmdoption-llvm-readobj-arch-specific", "--arch-specific"], [641, 0, 1, "cmdoption-llvm-readobj-bb-addr-map", "--bb-addr-map"], [641, 0, 1, "cmdoption-llvm-readobj-cg-profile", "--cg-profile"], [641, 0, 1, "cmdoption-llvm-readobj-codeview", "--codeview"], [641, 0, 1, "cmdoption-llvm-readobj-codeview-ghash", "--codeview-ghash"], [641, 0, 1, "cmdoption-llvm-readobj-codeview-merged-types", "--codeview-merged-types"], [641, 0, 1, "cmdoption-llvm-readobj-codeview-subsection-bytes", "--codeview-subsection-bytes"], [641, 0, 1, "cmdoption-llvm-readobj-coff-basereloc", "--coff-basereloc"], [641, 0, 1, "cmdoption-llvm-readobj-coff-debug-directory", "--coff-debug-directory"], [641, 0, 1, "cmdoption-llvm-readobj-coff-directives", "--coff-directives"], [641, 0, 1, "cmdoption-llvm-readobj-coff-exports", "--coff-exports"], [641, 0, 1, "cmdoption-llvm-readobj-coff-imports", "--coff-imports"], [641, 0, 1, "cmdoption-llvm-readobj-coff-load-config", "--coff-load-config"], [641, 0, 1, "cmdoption-llvm-readobj-coff-resources", "--coff-resources"], [641, 0, 1, "cmdoption-llvm-readobj-coff-tls-directory", "--coff-tls-directory"], [641, 0, 1, "cmdoption-llvm-readobj-demangle", "--demangle"], [641, 0, 1, "cmdoption-llvm-readobj-dependent-libraries", "--dependent-libraries"], [641, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dt"], [641, 0, 1, "cmdoption-llvm-readobj-dyn-relocations", "--dyn-relocations"], [641, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dyn-symbols"], [641, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dyn-syms"], [641, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "--dynamic"], [641, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "--dynamic-table"], [641, 0, 1, "cmdoption-llvm-readobj-elf-linker-options", "--elf-linker-options"], [641, 0, 1, "cmdoption-llvm-readobj-elf-output-style", "--elf-output-style"], [641, 0, 1, "cmdoption-llvm-readobj-expand-relocs", "--expand-relocs"], [641, 0, 1, "cmdoption-llvm-readobj-file-header", "--file-header"], [641, 0, 1, "cmdoption-llvm-readobj-gnu-hash-table", "--gnu-hash-table"], [641, 0, 1, "cmdoption-llvm-readobj-hash-symbols", "--hash-symbols"], [641, 0, 1, "cmdoption-llvm-readobj-hash-table", "--hash-table"], [641, 0, 1, "cmdoption-llvm-readobj-headers", "--headers"], [641, 0, 1, "cmdoption-llvm-readobj-help", "--help"], [641, 0, 1, "cmdoption-llvm-readobj-hex-dump", "--hex-dump"], [641, 0, 1, "cmdoption-llvm-readobj-histogram", "--histogram"], [641, 0, 1, "cmdoption-llvm-readobj-macho-data-in-code", "--macho-data-in-code"], [641, 0, 1, "cmdoption-llvm-readobj-macho-dsymtab", "--macho-dsymtab"], [641, 0, 1, "cmdoption-llvm-readobj-macho-indirect-symbols", "--macho-indirect-symbols"], [641, 0, 1, "cmdoption-llvm-readobj-macho-linker-options", "--macho-linker-options"], [641, 0, 1, "cmdoption-llvm-readobj-macho-segment", "--macho-segment"], [641, 0, 1, "cmdoption-llvm-readobj-macho-version-min", "--macho-version-min"], [641, 0, 1, "cmdoption-llvm-readobj-needed-libs", "--needed-libs"], [641, 0, 1, "cmdoption-llvm-readobj-notes", "--notes"], [641, 0, 1, "cmdoption-llvm-readobj-program-headers", "--program-headers"], [641, 0, 1, "cmdoption-llvm-readobj-raw-relr", "--raw-relr"], [641, 0, 1, "cmdoption-llvm-readobj-relocations", "--relocations"], [641, 0, 1, "cmdoption-llvm-readobj-relocations", "--relocs"], [641, 0, 1, "cmdoption-llvm-readobj-section-data", "--sd"], [641, 0, 1, "cmdoption-llvm-readobj-section-data", "--section-data"], [641, 0, 1, "cmdoption-llvm-readobj-section-groups", "--section-groups"], [641, 0, 1, "cmdoption-llvm-readobj-sections", "--section-headers"], [641, 0, 1, "cmdoption-llvm-readobj-section-mapping", "--section-mapping"], [641, 0, 1, "cmdoption-llvm-readobj-section-relocations", "--section-relocations"], [641, 0, 1, "cmdoption-llvm-readobj-section-symbols", "--section-symbols"], [641, 0, 1, "cmdoption-llvm-readobj-sections", "--sections"], [641, 0, 1, "cmdoption-llvm-readobj-program-headers", "--segments"], [641, 0, 1, "cmdoption-llvm-readobj-section-relocations", "--sr"], [641, 0, 1, "cmdoption-llvm-readobj-section-symbols", "--st"], [641, 0, 1, "cmdoption-llvm-readobj-stack-sizes", "--stack-sizes"], [641, 0, 1, "cmdoption-llvm-readobj-stackmap", "--stackmap"], [641, 0, 1, "cmdoption-llvm-readobj-string-dump", "--string-dump"], [641, 0, 1, "cmdoption-llvm-readobj-string-table", "--string-table"], [641, 0, 1, "cmdoption-llvm-readobj-symbols", "--symbols"], [641, 0, 1, "cmdoption-llvm-readobj-symbols", "--syms"], [641, 0, 1, "cmdoption-llvm-readobj-unwind", "--unwind"], [641, 0, 1, "cmdoption-llvm-readobj-version", "--version"], [641, 0, 1, "cmdoption-llvm-readobj-version-info", "--version-info"], [641, 0, 1, "cmdoption-llvm-readobj-arch-specific", "-A"], [641, 0, 1, "cmdoption-llvm-readobj-demangle", "-C"], [641, 0, 1, "cmdoption-llvm-readobj-histogram", "-I"], [641, 0, 1, "cmdoption-llvm-readobj-sections", "-S"], [641, 0, 1, "cmdoption-llvm-readobj-version-info", "-V"], [641, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "-d"], [641, 0, 1, "cmdoption-llvm-readobj-headers", "-e"], [641, 0, 1, "cmdoption-llvm-readobj-section-groups", "-g"], [641, 0, 1, "cmdoption-llvm-readobj-file-header", "-h"], [641, 0, 1, "cmdoption-llvm-readobj-program-headers", "-l"], [641, 0, 1, "cmdoption-llvm-readobj-notes", "-n"], [641, 0, 1, "cmdoption-llvm-readobj-string-dump", "-p"], [641, 0, 1, "cmdoption-llvm-readobj-relocations", "-r"], [641, 0, 1, "cmdoption-llvm-readobj-symbols", "-s"], [641, 0, 1, "cmdoption-llvm-readobj-unwind", "-u"], [641, 0, 1, "cmdoption-llvm-readobj-hex-dump", "-x"], [641, 0, 1, "cmdoption-llvm-readobj-arg-FILE", "@&lt;FILE&gt;"]], "llvm-size": [[642, 0, 1, "cmdoption-llvm-size-arch", "--arch"], [642, 0, 1, "cmdoption-llvm-size-common", "--common"], [642, 0, 1, "cmdoption-llvm-size-format", "--format"], [642, 0, 1, "cmdoption-llvm-size-help", "--help"], [642, 0, 1, "cmdoption-llvm-size-radix", "--radix"], [642, 0, 1, "cmdoption-llvm-size-totals", "--totals"], [642, 0, 1, "cmdoption-llvm-size-version", "--version"], [642, 0, 1, "cmdoption-llvm-size-A", "-A"], [642, 0, 1, "cmdoption-llvm-size-B", "-B"], [642, 0, 1, "cmdoption-llvm-size-d", "-d"], [642, 0, 1, "cmdoption-llvm-size-help", "-h"], [642, 0, 1, "cmdoption-llvm-size-l", "-l"], [642, 0, 1, "cmdoption-llvm-size-m", "-m"], [642, 0, 1, "cmdoption-llvm-size-o", "-o"], [642, 0, 1, "cmdoption-llvm-size-totals", "-t"], [642, 0, 1, "cmdoption-llvm-size-x", "-x"], [642, 0, 1, "cmdoption-llvm-size-arg-FILE", "@&lt;FILE&gt;"]], "llvm-stress": [[643, 0, 1, "cmdoption-llvm-stress-o", "-o"], [643, 0, 1, "cmdoption-llvm-stress-seed", "-seed"], [643, 0, 1, "cmdoption-llvm-stress-size", "-size"]], "llvm-strings": [[644, 0, 1, "cmdoption-llvm-strings-all", "--all"], [644, 0, 1, "cmdoption-llvm-strings-bytes", "--bytes"], [644, 0, 1, "cmdoption-llvm-strings-help", "--help"], [644, 0, 1, "cmdoption-llvm-strings-print-file-name", "--print-file-name"], [644, 0, 1, "cmdoption-llvm-strings-radix", "--radix"], [644, 0, 1, "cmdoption-llvm-strings-version", "--version"], [644, 0, 1, "cmdoption-llvm-strings-all", "-a"], [644, 0, 1, "cmdoption-llvm-strings-print-file-name", "-f"], [644, 0, 1, "cmdoption-llvm-strings-help", "-h"], [644, 0, 1, "cmdoption-llvm-strings-bytes", "-n"], [644, 0, 1, "cmdoption-llvm-strings-radix", "-t"], [644, 0, 1, "cmdoption-llvm-strings-arg-FILE", "@&lt;FILE&gt;"]], "llvm-strip": [[645, 0, 1, "cmdoption-llvm-strip-allow-broken-links", "--allow-broken-links"], [645, 0, 1, "cmdoption-llvm-strip-disable-deterministic-archives", "--disable-deterministic-archives"], [645, 0, 1, "cmdoption-llvm-strip-discard-all", "--discard-all"], [645, 0, 1, "cmdoption-llvm-strip-discard-locals", "--discard-locals"], [645, 0, 1, "cmdoption-llvm-strip-enable-deterministic-archives", "--enable-deterministic-archives"], [645, 0, 1, "cmdoption-llvm-strip-help", "--help"], [645, 0, 1, "cmdoption-llvm-strip-keep-file-symbols", "--keep-file-symbols"], [645, 0, 1, "cmdoption-llvm-strip-keep-section", "--keep-section"], [645, 0, 1, "cmdoption-llvm-strip-keep-symbol", "--keep-symbol"], [645, 0, 1, "cmdoption-llvm-strip-no-strip-all", "--no-strip-all"], [645, 0, 1, "cmdoption-llvm-strip-only-keep-debug", "--only-keep-debug"], [645, 0, 1, "cmdoption-llvm-strip-preserve-dates", "--preserve-dates"], [645, 0, 1, "cmdoption-llvm-strip-regex", "--regex"], [645, 0, 1, "cmdoption-llvm-strip-remove-section", "--remove-section"], [645, 0, 1, "cmdoption-llvm-strip-strip-all", "--strip-all"], [645, 0, 1, "cmdoption-llvm-strip-strip-all-gnu", "--strip-all-gnu"], [645, 0, 1, "cmdoption-llvm-strip-strip-debug", "--strip-debug"], [645, 0, 1, "cmdoption-llvm-strip-strip-sections", "--strip-sections"], [645, 0, 1, "cmdoption-llvm-strip-strip-symbol", "--strip-symbol"], [645, 0, 1, "cmdoption-llvm-strip-strip-unneeded", "--strip-unneeded"], [645, 0, 1, "cmdoption-llvm-strip-version", "--version"], [645, 0, 1, "cmdoption-llvm-strip-wildcard", "--wildcard"], [645, 0, 1, "cmdoption-llvm-strip-enable-deterministic-archives", "-D"], [645, 0, 1, "cmdoption-llvm-strip-keep-symbol", "-K"], [645, 0, 1, "cmdoption-llvm-strip-strip-symbol", "-N"], [645, 0, 1, "cmdoption-llvm-strip-remove-section", "-R"], [645, 0, 1, "cmdoption-llvm-strip-strip-debug", "-S"], [645, 0, 1, "cmdoption-llvm-strip-T", "-T"], [645, 0, 1, "cmdoption-llvm-strip-disable-deterministic-archives", "-U"], [645, 0, 1, "cmdoption-llvm-strip-version", "-V"], [645, 0, 1, "cmdoption-llvm-strip-discard-locals", "-X"], [645, 0, 1, "cmdoption-llvm-strip-strip-debug", "-d"], [645, 0, 1, "cmdoption-llvm-strip-strip-debug", "-g"], [645, 0, 1, "cmdoption-llvm-strip-help", "-h"], [645, 0, 1, "cmdoption-llvm-strip-o", "-o"], [645, 0, 1, "cmdoption-llvm-strip-preserve-dates", "-p"], [645, 0, 1, "cmdoption-llvm-strip-strip-all", "-s"], [645, 0, 1, "cmdoption-llvm-strip-wildcard", "-w"], [645, 0, 1, "cmdoption-llvm-strip-discard-all", "-x"], [645, 0, 1, "cmdoption-llvm-strip-arg-FILE", "@&lt;FILE&gt;"]], "llvm-symbolizer": [[646, 0, 1, "cmdoption-llvm-symbolizer-print-address", "--addresses"], [646, 0, 1, "cmdoption-llvm-symbolizer-adjust-vma", "--adjust-vma"], [646, 0, 1, "cmdoption-llvm-symbolizer-basenames", "--basenames"], [646, 0, 1, "cmdoption-llvm-symbolizer-default-arch", "--default-arch"], [646, 0, 1, "cmdoption-llvm-symbolizer-demangle", "--demangle"], [646, 0, 1, "cmdoption-llvm-symbolizer-dia", "--dia"], [646, 0, 1, "cmdoption-llvm-symbolizer-dsym-hint", "--dsym-hint"], [646, 0, 1, "cmdoption-llvm-symbolizer-dwp", "--dwp"], [646, 0, 1, "cmdoption-llvm-symbolizer-obj", "--exe"], [646, 0, 1, "cmdoption-llvm-symbolizer-fallback-debug-path", "--fallback-debug-path"], [646, 0, 1, "cmdoption-llvm-symbolizer-functions", "--functions"], [646, 0, 1, "cmdoption-llvm-symbolizer-help", "--help"], [646, 0, 1, "cmdoption-llvm-symbolizer-inlining", "--inlines"], [646, 0, 1, "cmdoption-llvm-symbolizer-inlining", "--inlining"], [646, 0, 1, "cmdoption-llvm-symbolizer-no-demangle", "--no-demangle"], [646, 0, 1, "cmdoption-llvm-symbolizer-no-inlines", "--no-inlines"], [646, 0, 1, "cmdoption-llvm-symbolizer-obj", "--obj"], [646, 0, 1, "cmdoption-llvm-symbolizer-output-style", "--output-style"], [646, 0, 1, "cmdoption-llvm-symbolizer-pretty-print", "--pretty-print"], [646, 0, 1, "cmdoption-llvm-symbolizer-print-address", "--print-address"], [646, 0, 1, "cmdoption-llvm-symbolizer-print-source-context-lines", "--print-source-context-lines"], [646, 0, 1, "cmdoption-llvm-symbolizer-relativenames", "--relativenames"], [646, 0, 1, "cmdoption-llvm-symbolizer-verbose", "--verbose"], [646, 0, 1, "cmdoption-llvm-symbolizer-version", "--version"], [646, 0, 1, "cmdoption-llvm-symbolizer-demangle", "-C"], [646, 0, 1, "cmdoption-llvm-symbolizer-print-address", "-a"], [646, 0, 1, "cmdoption-llvm-symbolizer-obj", "-e"], [646, 0, 1, "cmdoption-llvm-symbolizer-functions", "-f"], [646, 0, 1, "cmdoption-llvm-symbolizer-help", "-h"], [646, 0, 1, "cmdoption-llvm-symbolizer-inlining", "-i"], [646, 0, 1, "cmdoption-llvm-symbolizer-pretty-print", "-p"], [646, 0, 1, "cmdoption-llvm-symbolizer-basenames", "-s"], [646, 0, 1, "cmdoption-llvm-symbolizer-version", "-v"], [646, 0, 1, "cmdoption-llvm-symbolizer-arg-FILE", "@&lt;FILE&gt;"]], "opt": [[649, 0, 1, "cmdoption-opt-S", "-S"], [649, 0, 1, "cmdoption-opt-debug", "-debug"], [649, 0, 1, "cmdoption-opt-disable-inlining", "-disable-inlining"], [649, 0, 1, "cmdoption-opt-disable-opt", "-disable-opt"], [649, 0, 1, "cmdoption-opt-f", "-f"], [649, 0, 1, "cmdoption-opt-help", "-help"], [649, 0, 1, "cmdoption-opt-load", "-load"], [649, 0, 1, "cmdoption-opt-o", "-o"], [649, 0, 1, "cmdoption-opt-p", "-p"], [649, 0, 1, "cmdoption-opt-stats", "-stats"], [649, 0, 1, "cmdoption-opt-strip-debug", "-strip-debug"], [649, 0, 1, "cmdoption-opt-time-passes", "-time-passes"], [649, 0, 1, "cmdoption-opt-verify-each", "-verify-each"], [649, 0, 1, "cmdoption-opt-passname", "-{passname}"]], "tblgen": [[650, 0, 1, "cmdoption-tblgen-D", "-D"], [650, 0, 1, "cmdoption-tblgen-I", "-I"], [650, 0, 1, "cmdoption-tblgen-asmformat-error-is-fatal", "-asmformat-error-is-fatal"], [650, 0, 1, "cmdoption-tblgen-asmparsernum", "-asmparsernum"], [650, 0, 1, "cmdoption-tblgen-asmwriternum", "-asmwriternum"], [650, 0, 1, "cmdoption-tblgen-clang-component", "-clang-component"], [650, 0, 1, "cmdoption-tblgen-class", "-class"], [650, 0, 1, "cmdoption-tblgen-combiners", "-combiners"], [650, 0, 1, "cmdoption-tblgen-d", "-d"], [650, 0, 1, "cmdoption-tblgen-debug", "-debug"], [650, 0, 1, "cmdoption-tblgen-dialect", "-dialect"], [650, 0, 1, "cmdoption-tblgen-dialect-opclass-base", "-dialect-opclass-base"], [650, 0, 1, "cmdoption-tblgen-dump-json", "-dump-json"], [650, 0, 1, "cmdoption-tblgen-gen-arm-bf16", "-gen-arm-bf16"], [650, 0, 1, "cmdoption-tblgen-gen-arm-cde-builtin-aliases", "-gen-arm-cde-builtin-aliases"], [650, 0, 1, "cmdoption-tblgen-gen-arm-cde-builtin-codegen", "-gen-arm-cde-builtin-codegen"], [650, 0, 1, "cmdoption-tblgen-gen-arm-cde-builtin-def", "-gen-arm-cde-builtin-def"], [650, 0, 1, "cmdoption-tblgen-gen-arm-cde-builtin-sema", "-gen-arm-cde-builtin-sema"], [650, 0, 1, "cmdoption-tblgen-gen-arm-cde-header", "-gen-arm-cde-header"], [650, 0, 1, "cmdoption-tblgen-gen-arm-fp16", "-gen-arm-fp16"], [650, 0, 1, "cmdoption-tblgen-gen-arm-mve-builtin-aliases", "-gen-arm-mve-builtin-aliases"], [650, 0, 1, "cmdoption-tblgen-gen-arm-mve-builtin-codegen", "-gen-arm-mve-builtin-codegen"], [650, 0, 1, "cmdoption-tblgen-gen-arm-mve-builtin-def", "-gen-arm-mve-builtin-def"], [650, 0, 1, "cmdoption-tblgen-gen-arm-mve-builtin-sema", "-gen-arm-mve-builtin-sema"], [650, 0, 1, "cmdoption-tblgen-gen-arm-mve-header", "-gen-arm-mve-header"], [650, 0, 1, "cmdoption-tblgen-gen-arm-neon", "-gen-arm-neon"], [650, 0, 1, "cmdoption-tblgen-gen-arm-neon-sema", "-gen-arm-neon-sema"], [650, 0, 1, "cmdoption-tblgen-gen-arm-neon-test", "-gen-arm-neon-test"], [650, 0, 1, "cmdoption-tblgen-gen-arm-sve-builtin-codegen", "-gen-arm-sve-builtin-codegen"], [650, 0, 1, "cmdoption-tblgen-gen-arm-sve-builtins", "-gen-arm-sve-builtins"], [650, 0, 1, "cmdoption-tblgen-gen-arm-sve-header", "-gen-arm-sve-header"], [650, 0, 1, "cmdoption-tblgen-gen-arm-sve-sema-rangechecks", "-gen-arm-sve-sema-rangechecks"], [650, 0, 1, "cmdoption-tblgen-gen-arm-sve-typeflags", "-gen-arm-sve-typeflags"], [650, 0, 1, "cmdoption-tblgen-gen-asm-matcher", "-gen-asm-matcher"], [650, 0, 1, "cmdoption-tblgen-gen-asm-parser", "-gen-asm-parser"], [650, 0, 1, "cmdoption-tblgen-gen-asm-writer", "-gen-asm-writer"], [650, 0, 1, "cmdoption-tblgen-gen-attr-docs", "-gen-attr-docs"], [650, 0, 1, "cmdoption-tblgen-gen-attrs", "-gen-attrs"], [650, 0, 1, "cmdoption-tblgen-gen-automata", "-gen-automata"], [650, 0, 1, "cmdoption-tblgen-gen-avail-interface-decls", "-gen-avail-interface-decls"], [650, 0, 1, "cmdoption-tblgen-gen-avail-interface-defs", "-gen-avail-interface-defs"], [650, 0, 1, "cmdoption-tblgen-gen-callingconv", "-gen-callingconv"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-ast-visitor", "-gen-clang-attr-ast-visitor"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-classes", "-gen-clang-attr-classes"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-has-attribute-impl", "-gen-clang-attr-has-attribute-impl"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-impl", "-gen-clang-attr-impl"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-list", "-gen-clang-attr-list&quot;"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-node-traverse", "-gen-clang-attr-node-traverse"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-parsed-attr-impl", "-gen-clang-attr-parsed-attr-impl"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-parsed-attr-kinds", "-gen-clang-attr-parsed-attr-kinds"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-parsed-attr-list", "-gen-clang-attr-parsed-attr-list"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-parser-string-switches", "-gen-clang-attr-parser-string-switches"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-pch-read", "-gen-clang-attr-pch-read"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-pch-write", "-gen-clang-attr-pch-write"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-spelling-index", "-gen-clang-attr-spelling-index"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-subject-match-rule-list", "-gen-clang-attr-subject-match-rule-list"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-subject-match-rules-parser-string-switches", "-gen-clang-attr-subject-match-rules-parser-string-switches"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-template-instantiate", "-gen-clang-attr-template-instantiate"], [650, 0, 1, "cmdoption-tblgen-gen-clang-attr-text-node-dump", "-gen-clang-attr-text-node-dump"], [650, 0, 1, "cmdoption-tblgen-gen-clang-basic-reader", "-gen-clang-basic-reader"], [650, 0, 1, "cmdoption-tblgen-gen-clang-basic-writer", "-gen-clang-basic-writer"], [650, 0, 1, "cmdoption-tblgen-gen-clang-comment-command-info", "-gen-clang-comment-command-info"], [650, 0, 1, "cmdoption-tblgen-gen-clang-comment-command-list", "-gen-clang-comment-command-list"], [650, 0, 1, "cmdoption-tblgen-gen-clang-comment-html-named-character-references", "-gen-clang-comment-html-named-character-references"], [650, 0, 1, "cmdoption-tblgen-gen-clang-comment-html-tags", "-gen-clang-comment-html-tags"], [650, 0, 1, "cmdoption-tblgen-gen-clang-comment-html-tags-properties", "-gen-clang-comment-html-tags-properties"], [650, 0, 1, "cmdoption-tblgen-gen-clang-comment-nodes", "-gen-clang-comment-nodes"], [650, 0, 1, "cmdoption-tblgen-gen-clang-data-collectors", "-gen-clang-data-collectors"], [650, 0, 1, "cmdoption-tblgen-gen-clang-decl-nodes", "-gen-clang-decl-nodes"], [650, 0, 1, "cmdoption-tblgen-gen-clang-diag-groups", "-gen-clang-diag-groups"], [650, 0, 1, "cmdoption-tblgen-gen-clang-diags-defs", "-gen-clang-diags-defs"], [650, 0, 1, "cmdoption-tblgen-gen-clang-diags-index-name", "-gen-clang-diags-index-name"], [650, 0, 1, "cmdoption-tblgen-gen-clang-opcodes", "-gen-clang-opcodes"], [650, 0, 1, "cmdoption-tblgen-gen-clang-opencl-builtins", "-gen-clang-opencl-builtins"], [650, 0, 1, "cmdoption-tblgen-gen-clang-sa-checkers", "-gen-clang-sa-checkers"], [650, 0, 1, "cmdoption-tblgen-gen-clang-stmt-nodes", "-gen-clang-stmt-nodes"], [650, 0, 1, "cmdoption-tblgen-gen-clang-test-pragma-attribute-supported-attributes", "-gen-clang-test-pragma-attribute-supported-attributes"], [650, 0, 1, "cmdoption-tblgen-gen-clang-type-nodes", "-gen-clang-type-nodes"], [650, 0, 1, "cmdoption-tblgen-gen-clang-type-reader", "-gen-clang-type-reader"], [650, 0, 1, "cmdoption-tblgen-gen-clang-type-writer", "-gen-clang-type-writer"], [650, 0, 1, "cmdoption-tblgen-gen-compress-inst-emitter", "-gen-compress-inst-emitter"], [650, 0, 1, "cmdoption-tblgen-gen-ctags", "-gen-ctags"], [650, 0, 1, "cmdoption-tblgen-gen-dag-isel", "-gen-dag-isel"], [650, 0, 1, "cmdoption-tblgen-gen-dfa-packetizer", "-gen-dfa-packetizer"], [650, 0, 1, "cmdoption-tblgen-gen-diag-docs", "-gen-diag-docs"], [650, 0, 1, "cmdoption-tblgen-gen-dialect-doc", "-gen-dialect-doc"], [650, 0, 1, "cmdoption-tblgen-gen-directive-decl", "-gen-directive-decl"], [650, 0, 1, "cmdoption-tblgen-gen-directive-gen", "-gen-directive-gen"], [650, 0, 1, "cmdoption-tblgen-gen-directive-impl", "-gen-directive-impl"], [650, 0, 1, "cmdoption-tblgen-gen-disassembler", "-gen-disassembler"], [650, 0, 1, "cmdoption-tblgen-gen-emitter", "-gen-emitter"], [650, 0, 1, "cmdoption-tblgen-gen-enum-decls", "-gen-enum-decls"], [650, 0, 1, "cmdoption-tblgen-gen-enum-defs", "-gen-enum-defs"], [650, 0, 1, "cmdoption-tblgen-gen-enum-from-llvmir-conversions", "-gen-enum-from-llvmir-conversions"], [650, 0, 1, "cmdoption-tblgen-gen-enum-to-llvmir-conversions", "-gen-enum-to-llvmir-conversions"], [650, 0, 1, "cmdoption-tblgen-gen-exegesis", "-gen-exegesis"], [650, 0, 1, "cmdoption-tblgen-gen-fast-isel", "-gen-fast-isel"], [650, 0, 1, "cmdoption-tblgen-gen-global-isel", "-gen-global-isel"], [650, 0, 1, "cmdoption-tblgen-gen-global-isel-combiner", "-gen-global-isel-combiner"], [650, 0, 1, "cmdoption-tblgen-gen-instr-docs", "-gen-instr-docs"], [650, 0, 1, "cmdoption-tblgen-gen-instr-info", "-gen-instr-info"], [650, 0, 1, "cmdoption-tblgen-gen-intrinsic-enums", "-gen-intrinsic-enums"], [650, 0, 1, "cmdoption-tblgen-gen-intrinsic-impl", "-gen-intrinsic-impl"], [650, 0, 1, "cmdoption-tblgen-gen-llvmir-conversions", "-gen-llvmir-conversions"], [650, 0, 1, "cmdoption-tblgen-gen-llvmir-intrinsics", "-gen-llvmir-intrinsics"], [650, 0, 1, "cmdoption-tblgen-gen-op-decls", "-gen-op-decls"], [650, 0, 1, "cmdoption-tblgen-gen-op-defs", "-gen-op-defs"], [650, 0, 1, "cmdoption-tblgen-gen-op-doc", "-gen-op-doc"], [650, 0, 1, "cmdoption-tblgen-gen-opt-docs", "-gen-opt-docs"], [650, 0, 1, "cmdoption-tblgen-gen-opt-parser-defs", "-gen-opt-parser-defs"], [650, 0, 1, "cmdoption-tblgen-gen-opt-rst", "-gen-opt-rst"], [650, 0, 1, "cmdoption-tblgen-gen-pass-decls", "-gen-pass-decls"], [650, 0, 1, "cmdoption-tblgen-gen-pass-doc", "-gen-pass-doc"], [650, 0, 1, "cmdoption-tblgen-gen-pseudo-lowering", "-gen-pseudo-lowering"], [650, 0, 1, "cmdoption-tblgen-gen-register-bank", "-gen-register-bank"], [650, 0, 1, "cmdoption-tblgen-gen-register-info", "-gen-register-info"], [650, 0, 1, "cmdoption-tblgen-gen-rewriters", "-gen-rewriters"], [650, 0, 1, "cmdoption-tblgen-gen-riscv-vector-builtin-codegen", "-gen-riscv-vector-builtin-codegen"], [650, 0, 1, "cmdoption-tblgen-gen-riscv-vector-builtins", "-gen-riscv-vector-builtins"], [650, 0, 1, "cmdoption-tblgen-gen-riscv-vector-header", "-gen-riscv-vector-header"], [650, 0, 1, "cmdoption-tblgen-gen-searchable-tables", "-gen-searchable-tables"], [650, 0, 1, "cmdoption-tblgen-gen-spirv-avail-impls", "-gen-spirv-avail-impls"], [650, 0, 1, "cmdoption-tblgen-gen-spirv-capability-implication", "-gen-spirv-capability-implication"], [650, 0, 1, "cmdoption-tblgen-gen-spirv-enum-avail-decls", "-gen-spirv-enum-avail-decls"], [650, 0, 1, "cmdoption-tblgen-gen-spirv-enum-avail-defs", "-gen-spirv-enum-avail-defs"], [650, 0, 1, "cmdoption-tblgen-gen-spirv-op-utils", "-gen-spirv-op-utils"], [650, 0, 1, "cmdoption-tblgen-gen-spirv-serialization", "-gen-spirv-serialization"], [650, 0, 1, "cmdoption-tblgen-gen-struct-attr-decls", "-gen-struct-attr-decls"], [650, 0, 1, "cmdoption-tblgen-gen-struct-attr-defs", "-gen-struct-attr-defs"], [650, 0, 1, "cmdoption-tblgen-gen-subtarget", "-gen-subtarget"], [650, 0, 1, "cmdoption-tblgen-gen-typedef-decls", "-gen-typedef-decls"], [650, 0, 1, "cmdoption-tblgen-gen-typedef-defs", "-gen-typedef-defs"], [650, 0, 1, "cmdoption-tblgen-gen-x86-EVEX2VEX-tables", "-gen-x86-EVEX2VEX-tables"], [650, 0, 1, "cmdoption-tblgen-gen-x86-fold-tables", "-gen-x86-fold-tables"], [650, 0, 1, "cmdoption-tblgen-gicombiner-show-expansions", "-gicombiner-show-expansions"], [650, 0, 1, "cmdoption-tblgen-gicombiner-stop-after-build", "-gicombiner-stop-after-build"], [650, 0, 1, "cmdoption-tblgen-gicombiner-stop-after-parse", "-gicombiner-stop-after-parse"], [650, 0, 1, "cmdoption-tblgen-gisel-coverage-file", "-gisel-coverage-file"], [650, 0, 1, "cmdoption-tblgen-help", "-help"], [650, 0, 1, "cmdoption-tblgen-help-list", "-help-list"], [650, 0, 1, "cmdoption-tblgen-instrument-coverage", "-instrument-coverage"], [650, 0, 1, "cmdoption-tblgen-instrument-gisel-coverage", "-instrument-gisel-coverage"], [650, 0, 1, "cmdoption-tblgen-intrinsic-prefix", "-intrinsic-prefix"], [650, 0, 1, "cmdoption-tblgen-llvmir-intrinsics-filter", "-llvmir-intrinsics-filter"], [650, 0, 1, "cmdoption-tblgen-long-string-literals", "-long-string-literals"], [650, 0, 1, "cmdoption-tblgen-match-prefix", "-match-prefix"], [650, 0, 1, "cmdoption-tblgen-name", "-name"], [650, 0, 1, "cmdoption-tblgen-null-backend", "-null-backend"], [650, 0, 1, "cmdoption-tblgen-o", "-o"], [650, 0, 1, "cmdoption-tblgen-omit-comments", "-omit-comments"], [650, 0, 1, "cmdoption-tblgen-op-exclude-regex", "-op-exclude-regex"], [650, 0, 1, "cmdoption-tblgen-op-include-regex", "-op-include-regex"], [650, 0, 1, "cmdoption-tblgen-optimize-match-table", "-optimize-match-table"], [650, 0, 1, "cmdoption-tblgen-print-detailed-records", "-print-detailed-records"], [650, 0, 1, "cmdoption-tblgen-print-enums", "-print-enums"], [650, 0, 1, "cmdoption-tblgen-print-records", "-print-records"], [650, 0, 1, "cmdoption-tblgen-print-sets", "-print-sets"], [650, 0, 1, "cmdoption-tblgen-register-info-debug", "-register-info-debug"], [650, 0, 1, "cmdoption-tblgen-stats", "-stats"], [650, 0, 1, "cmdoption-tblgen-time-phases", "-time-phases"], [650, 0, 1, "cmdoption-tblgen-typedefs-dialect", "-typedefs-dialect"], [650, 0, 1, "cmdoption-tblgen-version", "-version"], [650, 0, 1, "cmdoption-tblgen-warn-on-skipped-patterns", "-warn-on-skipped-patterns"], [650, 0, 1, "cmdoption-tblgen-write-if-changed", "-write-if-changed"], [650, 0, 1, "cmdoption-tblgen-arg-gen-lldb-option-defs", "gen-lldb-option-defs"], [650, 0, 1, "cmdoption-tblgen-arg-gen-lldb-property-defs", "gen-lldb-property-defs"], [650, 0, 1, "cmdoption-tblgen-arg-gen-lldb-property-enum-defs", "gen-lldb-property-enum-defs"]]}, "objnames": {"0": ["std", "cmdoption", "\u7a0b\u5f0f\u9078\u9805"]}, "objtypes": {"0": "std:cmdoption"}, "terms": {"00": [623, 631, 656, 688, 702, 708, 726, 734, 795, 796, 797, 799], "000": 750, "0000": [676, 760, 773], "00000": 676, "000000": [764, 771, 775, 796, 798], "00000000041516c6": 775, "00000006": 750, "000000e": [795, 796, 797, 799], "000001": 775, "000002": 775, "000003": 775, "000006": 775, "000007": 775, "000008": 775, "000010": 775, "000014": 775, "000016": 775, "000017": 775, "000018": 775, "000019": 775, "000023": 775, "00002fc0": 775, "000032": 775, "000035": 775, "000037": 775, "000041": 775, "000046": 775, "000049": 775, "000050": 775, "000063": 775, "000075": 775, "0001": 773, "00010010": 702, "000102030405060708090a0b0c0d0e0f": 702, "000106": 775, "000120": 775, "000123": 775, "000138": 775, "000155": 775, "000156": 775, "000214": 775, "000215": 775, "0003": 773, "000302": 775, "000310": 775, "000342": 775, "0004": 773, "000471": 775, "0005": 773, "000562": 775, "0007": 773, "000737": 775, "000774": 775, "000799": 775, "0008": 739, "001": 589, "00100001": 702, "0011": 589, "00110101": 702, "001375": 775, "001596": 775, "003400": 764, "004523": 775, "0050": 760, "0058": 623, "00n": 656, "01": [581, 623, 656, 688, 702, 751, 764, 796, 797, 799], "010": 581, "01010011": 702, "0106": 760, "011": 589, "011200": 764, "012345": 631, "0123456789": 631, "0152": 642, "0156": 760, "01pi0": 580, "02": [623, 656, 798], "03": [653, 798], "03d516c6": 775, "04": [642, 671, 795, 798], "041688": 736, "041721": 736, "041739": 736, "0462": 764, "049886": 736, "04e": 702, "05": [594, 704, 798], "06": [594, 653, 656], "0625": 702, "062624": 775, "067200": 764, "07": [631, 656, 776, 798], "07b": 653, "08": 774, "0a": 702, "0b": [581, 653, 761], "0b000000": 771, "0b00000000": 702, "0b000011": 771, "0b000100": 771, "0b000111": 771, "0b0011": 580, "0b01101101": 702, "0b01111000": 702, "0b100": 761, "0b10000000": 702, "0b101": 761, "0b1010": [580, 581], "0b10110110": 702, "0b111": 761, "0b11100001": 702, "0b1111": 580, "0b11111110": 702, "0b11111111": 702, "0baz": 734, "0c": 656, "0cleanup": 661, "0dev": 764, "0e": 702, "0f": [656, 715], "0f00000000": 715, "0f0d0ed1c78f": 674, "0f3f800000": 715, "0f3fb8aa3b": 715, "0f42d20000": 715, "0f7f800000": 715, "0fb5bfbe8e": 715, "0fbf317200": 715, "0fc2d20000": 715, "0ffh": 581, "0git": 694, "0s": 702, "0th": 669, "0u": [676, 750], "0x": [581, 582, 603, 612, 651, 679, 702, 750, 760, 761], "0x0": [582, 589, 599, 721, 734], "0x00": [582, 656, 721, 753, 761], "0x000": 582, "0x0000": [577, 582, 729], "0x00000": 679, "0x000000": 679, "0x00000000": [582, 750], "0x0000000000000000": 582, "0x0000000000000010": 750, "0x0000000001f2dc7a": 657, "0x0000000001f2fc2f": 657, "0x00000000029bdb45": 657, "0x0000000002a8306": 657, "0x0000000004589ff8": 657, "0x000000000458ed10": 657, "0x00000000046122f0": 657, "0x00000000ffefffff": 581, "0x00000001": 750, "0x00000002": 750, "0x00000003": 750, "0x00000004": 750, "0x00000009": 750, "0x0000002a": 657, "0x00000064": 750, "0x00000067": 750, "0x0000006e": 750, "0x00000083": 750, "0x000000c9": 603, "0x000000ff": 679, "0x00000100": 750, "0x00000110": 750, "0x00000120": 750, "0x00000130": 750, "0x00000140": 750, "0x00000147": 750, "0x00000150": 750, "0x00000233": 603, "0x000003bd": 750, "0x000003cd": 750, "0x000003f3": 750, "0x000003ff": 599, "0x00000ff0": 679, "0x00001000": 750, "0x00001023": 750, "0x00001203": 750, "0x00001c00": 599, "0x00002000": 750, "0x00002023": 750, "0x00002200": 750, "0x000034f0": 750, "0x00003500": 750, "0x00003550": 750, "0x00007fff": 599, "0x00007ffff788c09b": 657, "0x00007ffff7fd0007": 657, "0x00007ffff7fd003c": 657, "0x00007ffff7fd0095": 657, "0x00007ffff7fd0098": 657, "0x00007fffffffc798": 657, "0x00007fffffffe108": 657, "0x00007fffffffe118": 657, "0x00007fffffffe140": 657, "0x0000fefe": 603, "0x0001": [577, 582], "0x0001023": 750, "0x0002": [577, 582], "0x0002023": 750, "0x0003": [577, 582, 729], "0x0004": [577, 582], "0x0007": 729, "0x0008": 729, "0x001": 582, "0x0010": 729, "0x0011": 729, "0x0012": 729, "0x0013": 729, "0x0014": 729, "0x002": 582, "0x0020": 729, "0x0021": 729, "0x0022": 729, "0x0023": 729, "0x0024": 729, "0x003": 582, "0x0030": 729, "0x0031": 729, "0x0032": 729, "0x0033": 729, "0x0034": 729, "0x004": 582, "0x0040": 729, "0x0041": 729, "0x0042": 729, "0x0043": 729, "0x0044": 729, "0x0045": 729, "0x0046": 729, "0x005": 582, "0x0050": 729, "0x0051": 729, "0x0052": 729, "0x0053": 729, "0x0054": 729, "0x0055": 729, "0x0056": 729, "0x006": 582, "0x0068": 729, "0x0069": 729, "0x007": 582, "0x0070": 729, "0x0071": 729, "0x0072": 729, "0x0073": 729, "0x0074": 729, "0x0075": 729, "0x0076": 729, "0x0077": 729, "0x0078": 729, "0x0079": 729, "0x007a": 729, "0x007b": 729, "0x008": 582, "0x009": 582, "0x00a": 582, "0x00b": 582, "0x00c": 582, "0x00d": 582, "0x00e": 582, "0x00f": 582, "0x00ff0000": 599, "0x01": [582, 656, 721, 750, 762, 776], "0x010": 582, "0x011": 582, "0x01f": 582, "0x02": [582, 656, 721, 750, 761], "0x020": 582, "0x021": 582, "0x022": 582, "0x023": 582, "0x024": 582, "0x025": 582, "0x026": 582, "0x027": 582, "0x028": 582, "0x029": 582, "0x02a": 582, "0x02b": 582, "0x02c": 582, "0x02d": 582, "0x02e": 582, "0x02f": 582, "0x03": [582, 721, 753], "0x030": 582, "0x031": 582, "0x032": 582, "0x033": 582, "0x034": 582, "0x035": 582, "0x036": 582, "0x037": 582, "0x038": 582, "0x039": 582, "0x03a": 582, "0x03b": 582, "0x03c": 582, "0x03d": 582, "0x03e": 582, "0x03f": 582, "0x04": [582, 721, 750, 761, 776], "0x040": 582, "0x04000000": 750, "0x041": 582, "0x042": 582, "0x043": 582, "0x044": 582, "0x045": 582, "0x05": [582, 721, 753], "0x06": [582, 721, 753], "0x07": [582, 721, 753], "0x08": [582, 721, 750], "0x09": 721, "0x0a": [721, 753], "0x0abcd": 702, "0x0b": [721, 753], "0x0b17c0de": 589, "0x0c": [656, 721], "0x0d": 753, "0x0e": 753, "0x0f": 753, "0x0f0": 679, "0x0ff": [582, 679], "0x0fffff": 581, "0x0fffffff": 776, "0x1": [580, 582, 599, 734, 750, 753, 759], "0x10": [55, 146, 245, 370, 482, 580, 623, 721, 750, 753], "0x100": [582, 721, 750, 751], "0x1000": [729, 750], "0x100000": 581, "0x10000000": 582, "0x10000001": 582, "0x10000002": 582, "0x10000003": 582, "0x10000004": 582, "0x10000005": 582, "0x10000006": 582, "0x1000000a": 582, "0x1000000b": 582, "0x1000000c": 582, "0x1000000d": 582, "0x1000000f": 582, "0x10000010": 582, "0x10000011": 582, "0x10000015": 582, "0x100000f24": 646, "0x12": [55, 146, 245, 370, 482, 702], "0x1234": [717, 750], "0x12345678": 750, "0x1235": 702, "0x13": 721, "0x14": 759, "0x14c": [722, 805], "0x16": 721, "0x1881": [49, 143, 239, 362, 474], "0x1afp": 581, "0x1b": 589, "0x1c2": 663, "0x1f84": 646, "0x1ff00": 581, "0x2": [580, 599, 734, 753, 759], "0x20": 750, "0x200": [582, 750, 751], "0x2000": [582, 750], "0x20000": 582, "0x2001": 577, "0x2002": 577, "0x20117e": 634, "0x21": 702, "0x2413bc": 773, "0x25": 634, "0x29273623": 750, "0x2a": [588, 687], "0x3": [580, 599, 734, 753, 759], "0x30": 577, "0x300": 582, "0x3000": 636, "0x3039": 734, "0x31": 577, "0x35": 702, "0x3c00": 581, "0x3e08": 577, "0x3e09": 577, "0x3e0a": 577, "0x3e0b": 577, "0x3e0c": 577, "0x3f": 663, "0x3f800000": 581, "0x3fe9": 750, "0x3fea": 750, "0x3feaed548f090ce": 796, "0x3feb": 750, "0x3fed": 750, "0x4": [580, 599, 642, 753, 759], "0x40": 750, "0x400": [582, 750, 751], "0x4000": [636, 750], "0x40000000": 708, "0x400480": 646, "0x400486": 646, "0x400490": 646, "0x4004a0": 646, "0x4004b0": 646, "0x4004b6": 646, "0x4004be": 646, "0x4004d0": 646, "0x401167": 646, "0x4200": 750, "0x432ff973cafa8000": 702, "0x45": 687, "0x45c2cb0": 657, "0x494e494d": 727, "0x4c": 759, "0x4d544f4e": 727, "0x5": [599, 721, 753, 759], "0x53": 702, "0x5321": 702, "0x55585c0867ba": 687, "0x55585c0af787": 687, "0x55585c0af7b3": 687, "0x55585c0af7cf": 687, "0x55585c0afa55": 687, "0x57": 687, "0x5cf8c24cdb18bdac": 656, "0x6": [599, 759], "0x601028": 646, "0x60500020": 805, "0x6a": 642, "0x6fff4c02": 663, "0x7": 599, "0x70b298": 773, "0x744e60": 704, "0x744ea0": 704, "0x7c000000": 750, "0x7f": 702, "0x7fecc966952b": 687, "0x7feccab26000": 687, "0x7fefffff00000000": 581, "0x7fefffffffffffff": 581, "0x7fff": 582, "0x7fffffff": 702, "0x8": [580, 599, 721, 734], "0x80": [676, 750, 759], "0x800": [582, 750], "0x8000": [577, 582], "0x80000000": [582, 750], "0x8100": 577, "0x82638293": 750, "0x83": 687, "0x8664": 722, "0x9": [599, 734], "0x90": 755, "0x9f": 687, "0xa": [582, 599, 734, 759], "0xa0463440": 603, "0xa0463443": 603, "0xa0463447": 603, "0xabcdef00": 755, "0xac": 759, "0xb": 599, "0xc": [589, 599, 603], "0xc00": 582, "0xc3": 761, "0xd": [589, 599, 721, 759], "0xe": 589, "0xe1": 577, "0xe2": 577, "0xe3": 577, "0xe4": 577, "0xe5": 577, "0xe6": 577, "0xe7": 577, "0xe8": [577, 761], "0xe9": 577, "0xea": 577, "0xeb": [577, 687], "0xec": 577, "0xeffe0000": 722, "0xf": [580, 759, 761], "0xfc": 582, "0xfe": 582, "0xfefe": 603, "0xff": [580, 581, 582, 702, 761], "0xff0": 679, "0xff00": 581, "0xffbef174": 773, "0xffefffff": 581, "0xffefffff00000000": 581, "0xfff": 580, "0xfff8000000000000": 702, "0xffff": [49, 55, 115, 143, 146, 202, 239, 245, 304, 362, 370, 471, 474, 482, 576, 577, 580, 581, 582, 702, 722, 753], "0xffff000000000002": 753, "0xfffff": 581, "0xfffffffc": 581, "0xffffffff": [577, 581, 582, 589, 702], "0xffffffffffefffff": 581, "0xffffffffffff00ff": 581, "0xffffffffffffff00": 581, "0xffffffffffffffff": 577, "0xh": 702, "0xk": 702, "0xl": 702, "0xl00000000000000004000900000000000": 702, "0xm": 702, "0xr": 702, "0xxxxxxxxx": 750, "10": [49, 55, 143, 146, 239, 245, 362, 370, 474, 482, 581, 582, 585, 587, 589, 591, 597, 599, 602, 603, 630, 631, 637, 642, 646, 652, 656, 657, 669, 670, 671, 674, 676, 687, 694, 697, 702, 705, 715, 719, 722, 726, 734, 744, 745, 750, 751, 759, 771, 773, 775, 777, 794, 795, 796, 797, 798, 799, 800, 801, 803], "100": [115, 202, 304, 471, 576, 582, 586, 602, 630, 631, 637, 668, 676, 677, 687, 702, 704, 706, 750, 760, 770, 773, 797, 798, 799, 800, 801], "1000": [704, 726, 732, 802, 803], "10000": [623, 714], "10010001": 702, "101": 760, "1011": 589, "10110": 676, "102": [581, 631, 760, 775], "1020": [599, 702], "1023": [582, 599], "1024": [582, 599, 651, 702, 726, 770], "1025": 599, "102593": 775, "1026": 599, "102kb": 651, "103": [582, 775], "1030": 702, "104": 581, "1054": 644, "106": [581, 642], "1066": 644, "108055": 775, "1083": 775, "1087": 582, "1088": 582, "109": [631, 761], "10ms": 704, "10x": 652, "11": [49, 115, 143, 239, 304, 362, 471, 474, 576, 580, 582, 586, 589, 597, 599, 602, 631, 646, 652, 657, 676, 687, 697, 702, 715, 719, 722, 726, 745, 747, 750, 770, 771, 774, 775, 777, 798, 799, 800, 801], "110": 775, "1101": 644, "1108": 801, "111": [582, 715, 764], "11111": 676, "111111": 676, "1112": 644, "112": [582, 749], "1123": 644, "1129": [582, 801], "113": 702, "1130": [582, 644], "114": 642, "1141": 644, "1183": 801, "1184": 801, "12": [202, 577, 580, 581, 582, 589, 597, 599, 602, 603, 631, 636, 642, 646, 656, 657, 671, 687, 697, 701, 702, 704, 708, 715, 717, 719, 722, 724, 726, 729, 734, 750, 755, 764, 765, 771, 777, 798, 799, 800, 801], "120": [582, 657, 702, 761, 796], "1200": 704, "1210": 801, "1218": 801, "122": 702, "1222": 764, "123": [702, 708, 714, 750, 775, 798, 799], "12303": 760, "1234": [581, 582, 646], "12345": [694, 734, 736], "1234567": 702, "123908342": 734, "123kkk": 651, "123mb": 651, "124": 775, "125": [674, 702, 736, 775], "125000e": 702, "126": 642, "126744": 775, "127": [580, 582, 702], "127715": 775, "128": [23, 124, 209, 376, 489, 580, 582, 588, 589, 599, 656, 702, 706, 715, 727, 729, 734, 759, 771], "128974848": 651, "128mib": 663, "129": 582, "1298": 734, "129894": 739, "129907": 739, "129920": 739, "129923": 739, "129926": 739, "129934": 739, "129941": 739, "129996": 734, "12x10": 702, "13": [20, 121, 206, 427, 540, 577, 580, 582, 589, 597, 599, 631, 656, 657, 671, 687, 697, 702, 715, 719, 722, 745, 750, 759, 766, 770, 771, 773, 776, 799, 800, 801], "130": [702, 775], "130111": 739, "130179": 739, "130181": 739, "130213": 739, "130214": 739, "130228": 739, "130229": 739, "130249": 739, "130266": 739, "130292": 739, "130304": 739, "130306": 739, "130309": 739, "130310": 739, "130312": 739, "130313": 739, "130318": 739, "130320": 739, "130323": 739, "130328": 739, "130329": 739, "130353": 739, "130355": 739, "130388": 739, "130415": 739, "130425": 739, "130430": 739, "130435": 739, "130465": 739, "130629": 739, "130630": 739, "1329373163": 702, "133700e": 795, "134": 734, "138": [734, 775], "1388": 760, "139": 775, "139563": 775, "139605": 775, "139607": 775, "139610": 775, "139612": 775, "139617": 775, "14": [115, 471, 576, 577, 582, 589, 597, 599, 602, 646, 652, 657, 687, 697, 708, 715, 719, 743, 747, 750, 760, 771, 775, 794], "1401": 760, "1402264": 739, "1404": 760, "14159": 582, "14159f": 582, "142": 775, "143": 582, "1439": 801, "144": 702, "1444": 734, "1447": 760, "1459": 801, "147345": 775, "14740650423002898831": 702, "1491": 775, "15": [49, 55, 115, 143, 146, 202, 239, 240, 245, 304, 362, 363, 370, 471, 474, 475, 482, 576, 580, 582, 589, 590, 598, 602, 646, 656, 657, 671, 697, 702, 708, 714, 715, 719, 726, 745, 750, 753, 759, 760, 761, 776], "15155600": 775, "1523017872": 704, "1530": 775, "1535": 582, "1536": 582, "1560": 760, "1564": 775, "1565878005": 702, "159": 582, "15915494": 581, "15915494309189532": 581, "1592": 581, "159279": 775, "15gb": 597, "15mb": 736, "15th": 580, "16": [20, 25, 33, 44, 46, 50, 51, 55, 76, 88, 121, 125, 144, 146, 160, 174, 206, 210, 215, 216, 217, 218, 222, 227, 228, 229, 230, 234, 236, 241, 245, 264, 278, 305, 310, 315, 331, 335, 338, 361, 366, 367, 370, 385, 408, 427, 441, 454, 462, 478, 479, 482, 498, 540, 554, 568, 570, 572, 579, 580, 581, 582, 586, 588, 589, 599, 603, 630, 631, 642, 652, 655, 657, 663, 671, 676, 687, 688, 697, 702, 704, 708, 712, 715, 719, 721, 722, 729, 734, 745, 747, 750, 753, 755, 759, 761, 764, 768, 771, 776, 777, 800], "160": [582, 702], "1600": 702, "16000": 726, "162": 642, "164": 775, "16628590": 775, "16777216": 702, "16777217": 702, "1681": 775, "16b": 588, "16bit": 800, "16gb": 688, "16mib": 663, "17": [577, 582, 589, 597, 631, 651, 656, 657, 669, 671, 687, 702, 719, 747, 750, 761, 801], "172": 759, "1723": 775, "175": 582, "1789": 760, "1791": [582, 760], "1792": 582, "18": [582, 589, 631, 646, 657, 702, 715, 719, 750, 771], "182": 642, "1829": 760, "1840": 760, "187": 775, "188": 775, "18th": 669, "19": [582, 589, 657, 668, 671, 688, 702, 719, 750, 765, 771], "191": 582, "1967": 775, "1980": 741, "1981": 658, "1984": 775, "1987": 658, "1989": 668, "199": 642, "1991": 741, "1994": 668, "19941610": 727, "19950410": 729, "19950623": 727, "19950814": 727, "19951122": 729, "19960307": [722, 727], "19961031": 729, "19970604": 727, "19970605": 722, "19970606": 722, "19990604": 727, "19990903": [722, 729], "1a": 726, "1afp10": 581, "1b": 704, "1ci": 631, "1cleanup": 661, "1d": 580, "1d_array": 580, "1dx": 656, "1g": [651, 689], "1gb": 736, "1st": 659, "1u": 750, "20": [57, 397, 510, 581, 582, 589, 591, 597, 599, 602, 603, 608, 630, 631, 657, 668, 671, 674, 691, 702, 704, 711, 715, 719, 750, 759, 764, 776, 794, 795, 796, 797, 798, 799, 800, 801], "200": [582, 687, 774], "2000": [580, 582, 773], "20000": 755, "200000e": 797, "20000404": 727, "2002": 599, "20030901": 727, "2004": 599, "20040203": 729, "2008": [582, 676, 702, 741], "20091201": [722, 727], "2010": 597, "2011": [736, 741], "2012": [663, 734, 777], "2013": [707, 722, 734], "20140508": 727, "20140516": 722, "2015": [684, 704, 741], "2016": [652, 684, 713, 736, 741, 774], "2017": [597, 663, 667, 671, 673, 682, 684, 704, 741, 776], "2018": [676, 702, 712, 751, 774], "2019": [594, 601, 684, 712, 736, 739], "2020": [674, 713], "203": 642, "2047": [580, 582], "2048": [580, 582, 599, 704, 726], "207": 582, "209": 642, "2097496": 642, "21": [58, 396, 509, 581, 582, 589, 599, 656, 657, 686, 702, 715, 719, 736, 750, 771, 775], "2100": 582, "2101248": 642, "2105344": 642, "2105360": 642, "212": 593, "213": 593, "213336": 775, "21340": 657, "214": 593, "2147483648": [702, 715], "215": 593, "216": 593, "217": 593, "2192": 764, "22": [577, 582, 589, 657, 702, 715, 719, 750, 759, 771, 775], "2200": 582, "2200g": 582, "223": 582, "224": 582, "225": 702, "225708": 775, "22c": 644, "23": [580, 582, 589, 599, 656, 702, 750, 771, 793], "2303": 582, "2304": 582, "2308": 760, "231150": 750, "231154": 750, "2317": 760, "23333": 666, "234": [581, 795], "234000e": 795, "23421e": 702, "234e2": 581, "235": 702, "236": 644, "239": 582, "24": [577, 580, 582, 589, 599, 601, 631, 642, 655, 702, 708, 715, 734, 736, 746, 750, 771, 777, 796], "240": 794, "2400g": 582, "241": 644, "242": [663, 775], "2468601609": 702, "247": 702, "248": 734, "24a": 644, "24e8": 734, "24mb": 704, "25": [582, 589, 702, 732, 734, 764, 771, 774], "250": 736, "2500": 582, "250000e": 708, "253": 644, "254": 702, "255": [580, 581, 582, 599, 657, 702, 750, 793, 794, 795, 796, 797, 798, 799, 800, 801], "2559": 582, "256": [580, 581, 582, 599, 663, 702, 719, 750], "2560": 582, "257": [599, 702], "258": [599, 644], "2590": 591, "25mb": 704, "26": [582, 589, 642, 702, 715, 750], "260": 582, "2601000000": 775, "26096": 775, "260x": 582, "261": 644, "264": 642, "2692": 775, "27": [577, 582, 589, 715, 734], "2700": 760, "271": 775, "272": [582, 631], "28": [582, 589, 656, 702, 715, 743, 776], "281474976710654": 753, "2815": 582, "2816": 582, "2817": 734, "285": 582, "2882400000": 755, "29": [577, 582, 589, 599, 656, 702, 751, 771, 775], "290": 582, "2900": 702, "290x": 582, "2919": 734, "294": 642, "2963": 775, "297": 631, "2ap3": 663, "2b": 704, "2d": [580, 588], "2d_array": 580, "2d_msaa": 580, "2d_msaa_array": 580, "2gb": 751, "2n": 702, "2nd": [659, 702, 704, 734], "2u": 750, "2x": [685, 687, 704, 751], "2x3x4": 702, "30": [50, 144, 241, 367, 479, 580, 582, 589, 599, 603, 630, 631, 642, 702, 704, 715, 745, 750, 751, 764, 771, 776, 798, 799, 800, 801], "300": [608, 631, 702], "3000": [582, 734], "302": 765, "305064": 660, "306": 631, "3069": 775, "3071": 582, "3072": 582, "308": 657, "30ampt": 670, "30pm": 777, "30pmet": 670, "30pmutc": 670, "31": [49, 97, 143, 186, 202, 239, 288, 362, 474, 534, 577, 580, 582, 589, 599, 657, 687, 702, 751, 771], "31027": 687, "3120": 760, "31337": 795, "314": 631, "3148790418": 702, "31511": 704, "315994": 775, "32": [21, 26, 30, 31, 33, 42, 44, 46, 49, 50, 66, 100, 101, 102, 116, 117, 122, 126, 130, 131, 138, 143, 144, 148, 207, 211, 219, 220, 222, 232, 234, 236, 239, 241, 328, 332, 337, 354, 362, 367, 374, 392, 409, 425, 426, 439, 440, 441, 455, 459, 462, 472, 474, 479, 487, 505, 538, 539, 552, 553, 554, 566, 568, 570, 579, 580, 581, 586, 588, 589, 591, 597, 599, 603, 615, 631, 642, 652, 653, 655, 656, 661, 662, 663, 671, 673, 676, 688, 700, 702, 704, 708, 715, 721, 722, 724, 727, 729, 744, 747, 750, 751, 753, 759, 761, 762, 768, 771, 775, 776, 798, 800, 802], "32088": 775, "3213": 734, "3221225472": 651, "32768": [25, 50, 79, 125, 144, 163, 210, 241, 267, 364, 366, 367, 476, 478, 479, 726], "32bit": 800, "32gb": 597, "33": [589, 715, 745, 765, 771], "3327": 582, "3328": 582, "3340b": 582, "335": 722, "3363": 775, "339450": 764, "34": [589, 656, 771], "343": 760, "345": 734, "348": 760, "35": [589, 631, 702, 734], "350": 738, "351": [582, 738], "352": [582, 738], "357": 738, "358": 738, "3583": 582, "359": 738, "36": [589, 715, 751], "360": [738, 775], "362": 738, "363": 738, "36652": 775, "367": 738, "37": [589, 599, 702, 775], "370": 738, "371": 738, "3714": 775, "372": 738, "376": 738, "377": 702, "38": [589, 593, 702, 775], "380": 582, "3800": 582, "381": 775, "3811": 704, "3827": 704, "383": 582, "384": 582, "385": 582, "3868": 760, "387": [657, 702], "39": [589, 702, 715], "392": 734, "39331465": 775, "39337525": 775, "3963": 704, "399": [631, 775], "3ci": 631, "3d": [580, 582], "3dnow": 800, "3dnowa": 800, "3g": 651, "3gb": 673, "3pm": 670, "3rd": [659, 670, 702, 704, 750, 779], "3u": 750, "3x4": 702, "40": [589, 599, 603, 630, 656, 663, 669, 702, 793, 794, 795, 796, 797, 798, 799, 800, 801], "400": [637, 794], "4000": [580, 582], "40000": 637, "4000g": 582, "40219": 688, "403": 764, "40535375": 775, "4095": [580, 702, 704, 726], "4096": [580, 702, 726, 729], "4097": 726, "4098": 726, "4099": 726, "40kib": 687, "40th": 793, "41": [589, 687, 702], "410": 702, "4112": 634, "412": 642, "415": 582, "416": 582, "4167": 704, "41m": 651, "42": [588, 589, 599, 602, 623, 631, 646, 655, 656, 657, 663, 701, 702, 705, 708, 715, 734, 761, 793, 797, 798, 802], "421": 702, "423325": 764, "429": 702, "43": [589, 599, 798], "4300g": 582, "4300ge": 582, "434": 734, "4350g": 582, "4350ge": 582, "4377547752858689819": 702, "44": [589, 631, 702, 726, 773], "446": 775, "447": 582, "448": 582, "449": 582, "45": [589, 715, 793, 795], "450": 582, "451": 582, "452": 582, "453": 582, "454": 582, "455": 582, "456": [708, 764, 798], "457": 582, "458": 582, "4584": 775, "459": 582, "46": [589, 775, 798], "460": 582, "4600g": 582, "4600ge": 582, "463": 582, "463331": 775, "463340": 775, "464": [582, 764], "465": 582, "4650g": 582, "4650ge": 582, "467": [582, 657], "468": 582, "469": 582, "47": [582, 589, 631, 702, 751, 765], "470": 582, "4700g": 582, "4700ge": 582, "470948": 775, "471": 582, "472": 582, "472618": 775, "474": 764, "4750ge": 582, "48": [582, 589, 599, 631, 642, 729, 768], "480": 582, "4819": 760, "49": [589, 734], "4b": 704, "4gb": 701, "4gib": 663, "4k": 599, "4kib": 726, "4s": 588, "4th": [599, 702], "4u": 750, "50": [589, 630, 631, 671, 751, 760, 764], "500": 631, "5000": [582, 687, 747], "503": 738, "5046": 734, "506": [764, 775], "507": 738, "508": [702, 764], "51": [49, 143, 239, 362, 474, 589, 631, 686, 765], "5100": 582, "511": 582, "512": [582, 702, 726], "513": 582, "51440360": 775, "5197": 760, "52": [589, 634, 702, 765], "5200": 582, "521": 738, "527": 738, "53": [589, 702, 726], "5312": 704, "532": 734, "5321": 736, "54": [589, 631, 764, 775], "542": 760, "543": 760, "5434426023268520": 775, "5434426023523052": 775, "5434426029925386": 775, "5434426030031128": 775, "5434426046951388": 775, "5434426047282020": 775, "5434426047857332": 775, "5434426047984152": 775, "5434426048036584": 775, "5434426048042292": 775, "5434426048055056": 775, "5434426048067316": 775, "547": 687, "548": 738, "549": 738, "55": [589, 702, 745, 773], "5500": 582, "554": [657, 738], "556": 644, "56": [582, 589, 642], "560": 760, "5600": 582, "5600m": 582, "563098": 764, "566": [644, 760], "57": 589, "5700": 582, "577": 644, "58": 589, "584": 760, "58421550": 775, "586": 644, "59": [589, 599, 631], "590": 591, "595": 644, "59620e187c6ac38b36382685ccd2b63b": 764, "5981": 760, "5b": 642, "5e": 702, "5l": 653, "5rqxku": 775, "5th": 702, "5u": 750, "5x": [685, 751], "60": [589, 630, 657, 726, 761], "600": [637, 644], "6000": 582, "60000": 637, "603": 738, "609": 644, "61": 589, "610": 631, "62": [589, 751], "621": 738, "626": 736, "62635": 775, "626455": 775, "627": 738, "628": 738, "6295592": 646, "63": [49, 115, 143, 239, 362, 471, 474, 576, 582, 589, 702, 751, 761], "638838075": 702, "64": [19, 22, 30, 31, 43, 65, 100, 102, 118, 120, 123, 130, 131, 139, 205, 208, 219, 220, 233, 346, 354, 373, 375, 424, 425, 439, 440, 460, 486, 488, 537, 538, 552, 553, 567, 579, 580, 581, 586, 588, 589, 591, 597, 599, 603, 615, 623, 631, 633, 652, 653, 661, 662, 663, 669, 671, 673, 697, 701, 702, 704, 708, 714, 715, 721, 722, 724, 729, 734, 747, 749, 750, 753, 755, 759, 760, 761, 768, 771, 775, 793, 801, 802], "643": 657, "648": 738, "649": 738, "6497": 760, "64bit": [702, 708, 744], "64k": 722, "65": [582, 589, 599, 631], "654": 738, "65500": 581, "65535": [25, 50, 79, 99, 125, 144, 163, 188, 210, 241, 267, 290, 364, 365, 366, 367, 476, 477, 478, 479, 580, 702], "65600": 581, "657": 760, "658": 760, "66": [582, 589, 745], "66ghz": 688, "67": [589, 793], "6700": 582, "672368": 775, "6757": 760, "68": 589, "680": 715, "6800": 582, "69": 589, "6900": 582, "69819": 775, "6986": 760, "6b": 704, "6th": 702, "70": [589, 591, 599, 630, 760, 764, 773, 777], "7000": 582, "7004155349499253778": 702, "7009": 760, "703": 668, "705": 668, "7050b": 582, "71": 702, "7100": 582, "7150b": 582, "72": [631, 642], "7200p": 582, "725": 734, "7300": 582, "7350b": 582, "73670648": 657, "74": [589, 631, 702, 751, 765], "7400p": 582, "746": 760, "747": 760, "75": [589, 702, 734, 764, 773, 775], "7500": [582, 704], "754": [582, 676, 702], "756": 738, "758": 760, "76": [589, 759], "7600p": 582, "7646": 734, "7651369219802541373": 702, "768": 582, "769": 582, "77": [631, 704, 753], "7790": 582, "77x": 751, "78": [753, 775, 798], "789": 798, "79": [582, 671], "7938": 760, "7942": 704, "7976922776554302e308": 581, "7976931348623157e308": 581, "7c": 631, "7e15": 651, "7foo_bar": 619, "7nm": 582, "7th": 702, "7ykb2k5f": 626, "80": [589, 591, 602, 630, 631, 637, 702, 729], "8000": 726, "8011": [670, 688], "8014": 688, "80386": [586, 800], "80f351b51825": 660, "80x86": 688, "80x87": 599, "81": 630, "8191": 726, "82": 642, "83": [630, 760, 775], "83348": 764, "84": 760, "841471": 796, "85": [760, 775], "8500b": 582, "8500p": 582, "86": [734, 764], "8600b": 582, "8600p": 582, "87": [599, 734], "8700b": 582, "8700p": 582, "8770": 582, "8780p": 582, "879": 760, "88": [582, 760, 775], "8800b": 582, "8800p": 582, "8825": 760, "89": 764, "896800": 764, "8981": 760, "8gib": 663, "8x": [603, 751], "90": [602, 630, 642, 760, 764, 775], "900": 631, "9000": 726, "9009": 760, "9010": 582, "9015": 704, "90p": 775, "91": [642, 668], "92": [602, 642], "9210": 582, "928": 764, "93": 702, "930803": 722, "9342": 760, "9410": 582, "95": 582, "96": 582, "9600p": 582, "9630p": 582, "9633790": 775, "97": 702, "9700p": 582, "9730p": 582, "97724f18c79c": 674, "9800p": 582, "9830p": 582, "989": 708, "99": [695, 709, 721, 745, 750, 752], "999": 702, "9990": 688, "9994": 688, "999999999": 745, "99p": 775, "9_": [581, 603], "9a": [581, 603], "9b": 704, "_0": [702, 708], "__1": 619, "__aarch64_casm_ord": 586, "__aarch64_ldaddn_ord": 586, "__aarch64_ldclrn_ord": 586, "__aarch64_ldeorn_ord": 586, "__aarch64_ldsetn_ord": 586, "__aarch64_swpn_ord": 586, "__active_lane_pc": 582, "__aeabi_": 653, "__annot": 702, "__anon_expr": [794, 795, 796, 797, 798, 799, 800, 801], "__apple_nam": 750, "__apple_namespac": 750, "__apple_objc": 750, "__apple_typ": 750, "__asm": 631, "__atomic_compare_exchang": 586, "__atomic_compare_exchange_n": 586, "__atomic_exchang": 586, "__atomic_exchange_n": 586, "__atomic_fetch_add_n": 586, "__atomic_fetch_and_n": 586, "__atomic_fetch_nand_n": 586, "__atomic_fetch_or_n": 586, "__atomic_fetch_sub_n": 586, "__atomic_fetch_xor_n": 586, "__atomic_load": 586, "__atomic_load_n": 586, "__atomic_stor": 586, "__atomic_store_n": 586, "__attribute__": [652, 750, 768, 774], "__bitcod": 589, "__bss": 632, "__builtin_eh_return": 661, "__builtin_expect": 591, "__builtin_expect_with_prob": 591, "__builtin_longjmp": 661, "__builtin_setjmp": 661, "__builtin_trap": 704, "__builtin_unreach": 706, "__c_specific_handl": 661, "__chkstk": 663, "__clang__": 652, "__class_type_info": 690, "__clear_cach": 702, "__cuda__": 652, "__cuda_arch__": 652, "__cuda_ftz": 715, "__cudacc__": 652, "__cxa_allocate_except": 661, "__cxa_begin_catch": 661, "__cxa_call_unexpect": 661, "__cxa_demangl": 667, "__cxa_end_catch": 661, "__cxa_rethrow": 661, "__cxa_throw": 661, "__cxx11": 619, "__cxx_": 775, "__cxx_global_var_init": 775, "__cxxabiv1": 690, "__cxxframehandler3": 661, "__cxxthrowexcept": 661, "__data": [632, 642, 702], "__declspec": [796, 797, 798, 799, 800, 801], "__divergent_lane_pc": 582, "__divergent_lane_pc_1_1_els": 582, "__divergent_lane_pc_1_1_then": 582, "__divergent_lane_pc_1_els": 582, "__divergent_lane_pc_1_then": 582, "__dso_handl": 701, "__dwarf": 750, "__eh_fram": [599, 701], "__except": 661, "__fastcal": 702, "__gcmap_": 668, "__global__": [582, 652], "__gwp_asan_default_opt": 687, "__gxx_personality_v0": 661, "__has_attribut": 759, "__i386__": 802, "__image_info": 702, "__imp_": 702, "__info_plist": 635, "__internal_accurate_powf": 715, "__jit_debug_register_cod": 657, "__kmpc_fork_cal": 702, "__lex_1_1_save_exec": 582, "__lex_1_save_exec": 582, "__libc_start_main": [657, 687], "__libunwind_config": 661, "__llvm": [589, 745], "__llvm__": 702, "__llvm_coverage_map": 656, "__llvm_covmap": 656, "__llvm_deoptim": 702, "__llvm_faultmap": 665, "__llvm_memcpy_element_unordered_atomic_": [702, 755], "__llvm_memcpy_element_unordered_atomic_safepoint_": 755, "__llvm_memcpy_element_unordered_atomic_safepoint_1": 755, "__llvm_memmove_element_unordered_atomic_": [702, 755], "__llvm_memmove_element_unordered_atomic_safepoint_": 755, "__llvm_memset_element_unordered_atomic_": 702, "__llvm_stackmap": 753, "__main": 773, "__mod_init": 701, "__morestack": 749, "__next__": 655, "__nv_isinff": 715, "__nv_isnanf": 715, "__nv_powf": 715, "__nv_truncf": 715, "__nvcc__": 652, "__objc": [642, 702], "__objc_imageinfo": 702, "__profn_foo": 656, "__remark": [609, 745], "__scudo_default_opt": 747, "__stack_chk_fail": [702, 708], "__stack_chk_guard": 702, "__start_": 702, "__stdcall": 702, "__stop_": 702, "__sync_fetch_and_add_n": 586, "__sync_fetch_and_and_n": 586, "__sync_fetch_and_max_n": 586, "__sync_fetch_and_min_n": 586, "__sync_fetch_and_nand_n": 586, "__sync_fetch_and_or_n": 586, "__sync_fetch_and_sub_n": 586, "__sync_fetch_and_umax_n": 586, "__sync_fetch_and_umin_n": 586, "__sync_fetch_and_xor_n": 586, "__sync_lock_test_and_set_n": 586, "__sync_synchron": 586, "__sync_val_compare_and_swap_n": 586, "__syncthread": 715, "__text": [599, 632, 635, 642, 764], "__text_exec": 632, "__tri": 661, "__uint64": 582, "__uint_64": 582, "__unwind_info": 599, "__vectorcal": 702, "__xray_log_fin": 774, "__xray_log_flushlog": 774, "__xray_log_init_mod": 774, "__xray_log_process_buff": 774, "__xray_log_register_mod": 774, "__xray_log_select_mod": 774, "__xray_log_set_buffer_iter": 774, "__xray_patch": 774, "__xray_patch_funct": 774, "_aligna": 750, "_amdgpu_": 582, "_amdgpu_cs_shdr_intrl_data": 582, "_args_": 598, "_b128": 579, "_b16": 579, "_b256": 579, "_b32": 579, "_b512": 579, "_b64": 579, "_b8": 579, "_binary_": 633, "_bool": 799, "_bootstrap_default_passthrough": 584, "_buffer": 582, "_compil": 597, "_crit_edg": 702, "_cuda_ftz": 715, "_cxxthrowexcept": 661, "_dcleanup": 661, "_distribution_compon": 595, "_division_by_zero": 582, "_dpp": [579, 582], "_e32": [579, 582], "_e64": [579, 582], "_end": 633, "_except_handler3": 661, "_except_handler4": 661, "_f16": 579, "_f32": 579, "_f64": 579, "_flag": [597, 598], "_flags_": 598, "_flags_relwithdebinfo": 595, "_function_nam": 663, "_how": 601, "_i": 637, "_i16": 579, "_i32": 579, "_i64": 579, "_i8": 579, "_i_bitcast": 680, "_index": 759, "_inexact": 582, "_info": 582, "_init": 582, "_inv": 582, "_invalid_oper": 582, "_invl": 582, "_is_": 702, "_job": 597, "_link_into_tool": 773, "_lz_o": 760, "_m4enum": 702, "_main": [646, 717, 805], "_name_": 598, "_overflow": 582, "_p1": 750, "_p3": 750, "_padding_record": 721, "_pei386_runtime_reloc": 690, "_r0h": 661, "_regoffset": 762, "_ri": 761, "_rr": 761, "_runtim": 753, "_s64": 676, "_sdwa": [579, 582], "_segment_buff": 582, "_segment_ptr": 582, "_segment_s": 582, "_segment_wavefront_offset": 582, "_shdr_intrl_data": 582, "_size": [582, 633], "_sourc": 582, "_source_dir": 597, "_start": [633, 634, 657, 687], "_suffstr": 761, "_suffstringsuffix": 761, "_ti": 662, "_tri": 702, "_trunc": 676, "_u16": 579, "_u32": 579, "_u64": 579, "_u8": 579, "_underflow": 582, "_unwind_resum": 661, "_v4": 582, "_var": 598, "_void": 676, "_vol": 582, "_w_side_effect": 676, "_win32": [756, 796, 797, 798, 799, 800, 801], "_x": 582, "_y": 582, "_z": 582, "_z3bari": 618, "_z3bazv": 646, "_z3foo3barv": 619, "_z3foov": [618, 702], "_z4leaki": 751, "_z5hellov": 644, "_zero": 582, "_zfoov": 702, "_zgv": 702, "_zn1a1nei": 702, "_zst1a": 768, "_zstlsicst11char_traitsiceerst13basic_ostreamit_t0_es6_st17basic_string_viewis3_s4_": 687, "_ztid": 702, "_ztii": 702, "_zts1a": [702, 768], "_zts1b": 768, "_zts1c": 768, "_zts1d": 768, "_ztv1a": 768, "_ztv1b": 768, "_ztv1c": 768, "_ztv1d": 768, "_ztv3bar": 603, "_ztv3foo": 603, "a0463440": 603, "a0463443": 603, "a1": [599, 609, 611, 634, 659, 717, 761, 768, 770], "a10": 582, "a12": 582, "a15": 689, "a16": [0, 4, 9, 20, 427, 540], "a2": [599, 609, 611, 634, 659, 702, 717, 761, 768, 770], "a252": 581, "a253": 581, "a254": 581, "a255": 581, "a3": [599, 609, 611, 634, 659, 702], "a32": 588, "a4": [582, 599], "a57": 653, "a6": 582, "a64": 588, "a8": [582, 698], "a9": [582, 693], "a_ctor_bas": 603, "aa": [586, 702, 773], "aad": 599, "aad8i8": 599, "aapc": 702, "aarch32": 653, "aarch64": [586, 588, 596, 599, 633, 634, 667, 671, 675, 683, 685, 689, 697, 702, 708, 712, 739, 753, 759, 771, 774], "aarch64registerinfo": 708, "abandon": [685, 734, 795], "abbrev": [589, 622], "abbrevi": [582, 602, 615, 622, 703, 739, 760], "abbrevid": [589, 745], "abbrevop0": 589, "abbrevop1": 589, "abbrevwidth": 589, "abc": [577, 702], "abcd": 589, "abcdef0": 694, "abcdillnoopsstuuvv": 613, "abi": [577, 588, 596, 597, 613, 619, 634, 655, 659, 663, 664, 671, 675, 677, 682, 692, 693, 694, 700, 702, 715, 718, 731, 732, 743, 750, 753, 766, 768, 771, 796, 800, 801, 802], "abid": [8, 9, 748], "abil": [577, 599, 600, 649, 651, 657, 662, 666, 668, 681, 697, 701, 702, 706, 710, 734, 735, 736, 737, 750, 751, 777, 793, 797, 798, 799], "abl": [577, 582, 585, 587, 593, 594, 599, 601, 602, 603, 608, 631, 633, 645, 651, 652, 655, 656, 659, 664, 666, 668, 669, 671, 672, 674, 676, 677, 680, 681, 693, 696, 700, 701, 702, 703, 705, 709, 716, 717, 730, 733, 734, 736, 737, 741, 745, 746, 747, 748, 750, 751, 752, 753, 755, 767, 770, 771, 773, 774, 777, 780, 796, 797, 798, 801, 802], "abnorm": [655, 666, 756], "abort": [593, 599, 602, 661, 674, 702, 706, 734], "about": [577, 579, 581, 582, 585, 586, 589, 590, 594, 595, 597, 598, 599, 601, 602, 603, 606, 608, 609, 615, 627, 628, 629, 631, 632, 636, 637, 640, 641, 642, 651, 652, 655, 657, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 679, 681, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 722, 724, 725, 726, 729, 730, 731, 732, 733, 734, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 759, 760, 764, 765, 767, 768, 769, 770, 771, 773, 774, 775, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "abov": [49, 55, 115, 143, 146, 202, 239, 240, 245, 304, 362, 363, 370, 471, 474, 475, 482, 576, 577, 579, 580, 581, 582, 585, 586, 588, 589, 590, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 609, 631, 637, 646, 651, 652, 655, 659, 662, 664, 665, 666, 667, 668, 669, 671, 676, 680, 686, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 705, 706, 707, 708, 709, 710, 713, 714, 716, 717, 719, 722, 732, 734, 735, 736, 737, 741, 744, 746, 748, 749, 750, 751, 752, 753, 755, 757, 759, 760, 761, 765, 766, 768, 771, 772, 773, 775, 777, 779, 793, 794, 795, 796, 797, 798, 799, 801, 802], "abs": [52, 54, 145, 242, 244, 306, 311, 316, 318, 339, 341, 369, 481, 701, 715], "abs8": 663, "abs_f": 762, "abs_fp32": 762, "abs_fp64": 762, "abs_fp80": 762, "absenc": [593, 599, 631, 663, 708, 734, 751], "absent": [577, 603, 734], "absl": 619, "absolut": [49, 55, 115, 143, 146, 202, 239, 245, 304, 362, 370, 471, 474, 482, 576, 580, 582, 590, 597, 602, 603, 617, 632, 633, 634, 636, 646, 656, 662, 671, 675, 676, 693, 701, 702, 722, 734, 745, 766, 771, 773, 776], "absolute_express": [25, 26, 47, 48, 49, 50, 55, 61, 79, 99, 115, 125, 126, 142, 143, 144, 146, 163, 188, 202, 210, 211, 237, 238, 239, 240, 241, 245, 251, 267, 290, 304, 362, 363, 364, 365, 366, 367, 370, 372, 392, 393, 394, 471, 474, 475, 476, 477, 478, 479, 482, 485, 505, 506, 507, 576], "absolute_symbol": 701, "absolute_tsc": 776, "absolutesymbol": 717, "abstract": [577, 582, 599, 602, 658, 659, 661, 664, 695, 703, 705, 719, 732, 734, 745, 750, 760, 762, 771, 773, 777, 793, 795, 796, 797, 798, 799, 800, 801], "abstracttyperead": 650, "abstracttypewrit": 650, "absv16i8": 771, "absv1i64": 771, "abtu": 613, "abus": 734, "ac": [704, 739], "academia": 659, "acc": [581, 582, 761], "acc0": 581, "acc2": 581, "acc250": 581, "acc3": 581, "acc_vgpr": 582, "acceler": [606, 608, 622, 724, 802], "accept": [577, 580, 582, 594, 598, 600, 602, 603, 617, 619, 632, 633, 651, 654, 655, 659, 660, 663, 664, 667, 671, 673, 675, 680, 686, 695, 702, 704, 710, 714, 715, 733, 734, 751, 754, 757, 760, 761, 766], "access": [49, 143, 239, 362, 474, 580, 581, 585, 586, 588, 597, 601, 617, 632, 633, 634, 645, 651, 654, 655, 658, 660, 661, 662, 666, 668, 669, 671, 673, 675, 680, 681, 687, 688, 697, 701, 704, 707, 708, 712, 713, 715, 716, 717, 719, 720, 724, 726, 729, 732, 734, 737, 743, 747, 750, 751, 753, 754, 755, 759, 761, 767, 768, 770, 771, 773, 774, 777, 780, 795, 799, 802], "accessor": [599, 750, 773, 794], "accessti": 702, "accessty1": 702, "accessty2": 702, "accident": [602, 651, 717, 734, 756, 757, 773], "accommod": [589, 599, 663, 675, 702, 715], "accompani": [602, 745], "accomplish": [601, 659, 668, 695, 701, 727, 732, 734, 751, 761, 793], "accord": [582, 589, 590, 631, 651, 661, 668, 676, 677, 682, 695, 699, 702, 706, 708, 726, 734, 739, 741, 744, 748, 753, 760, 761, 771, 777, 795], "account": [582, 596, 600, 636, 654, 659, 668, 676, 680, 688, 695, 702, 711, 714, 733, 736, 746, 751, 774, 775, 779, 780], "accqual": 582, "accum": 582, "accum_offset": 582, "accumul": [581, 582, 676, 704, 732, 750, 761, 770], "accumulateconstantoffset": 714, "accur": [582, 585, 591, 623, 631, 668, 671, 677, 691, 697, 705, 729, 732, 736, 750, 760, 801, 802], "accuraci": [631, 697, 702, 732], "accvgpr": 582, "ace": 756, "achiev": [586, 594, 597, 601, 658, 659, 666, 667, 675, 677, 699, 702, 705, 706, 712, 740, 741, 750, 751, 756], "acknowledg": [746, 748], "acm": [599, 668, 738], "aco": 585, "acq": 586, "acq_rel": [582, 586, 702], "acquaint": 779, "acquir": [582, 659, 702, 704, 713, 734, 761], "acquisit": 734, "acronym": 687, "across": [586, 588, 595, 596, 598, 599, 601, 615, 651, 652, 655, 659, 661, 666, 671, 676, 678, 683, 701, 702, 703, 704, 706, 715, 717, 719, 727, 732, 734, 736, 745, 750, 751, 753, 755, 761, 770, 773, 796, 802], "act": [577, 590, 599, 602, 603, 613, 676, 702, 704, 713, 714, 732, 734, 745, 746, 748, 750, 760, 761, 766], "action": [577, 582, 583, 591, 592, 599, 602, 655, 661, 662, 667, 671, 701, 702, 703, 717, 719, 733, 734, 736, 746, 748, 755, 757, 771, 773, 776], "actionscript": 802, "actiontyp": 760, "activ": [577, 582, 585, 597, 599, 601, 631, 633, 645, 655, 659, 660, 661, 668, 670, 694, 700, 701, 704, 711, 717, 726, 734, 736, 748, 751, 753, 757, 764, 771, 773, 780, 781, 782, 804], "actor": 655, "actual": [14, 20, 98, 121, 187, 206, 289, 324, 353, 422, 427, 535, 540, 577, 578, 582, 585, 586, 588, 589, 592, 593, 598, 599, 602, 603, 608, 613, 623, 627, 631, 651, 652, 655, 657, 658, 659, 661, 664, 665, 666, 668, 669, 688, 690, 691, 695, 702, 703, 704, 706, 707, 713, 714, 716, 717, 718, 722, 732, 734, 735, 736, 744, 747, 750, 751, 754, 755, 756, 764, 766, 771, 772, 773, 777, 779, 780, 793, 794, 795, 796, 797, 798, 799, 801, 802], "actual_access": 582, "actualaccqu": 582, "acycl": [599, 650, 703, 729, 750, 760, 771], "ad": [577, 599, 732, 734], "ada": 661, "adapt": [652, 659, 664, 687, 692, 711, 732, 734, 756], "adaptor": 716, "adc": [582, 703, 734], "adc32mi": 762, "adc32mi8": 762, "adc32mr": 762, "adc32ri": 762, "adc32ri8": 762, "adc32rm": 762, "adc32rr": 762, "adc64mi32": 762, "adc64mi8": 762, "adc64mr": 762, "adc64ri32": 762, "adc64ri8": 762, "adc64rm": 762, "adc64rr": 762, "add": [27, 28, 29, 30, 31, 37, 38, 39, 40, 41, 44, 45, 46, 57, 58, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 148, 212, 213, 214, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 247, 248, 336, 396, 397, 439, 440, 447, 448, 449, 461, 462, 463, 464, 509, 510, 549, 552, 553, 556, 557, 560, 561, 562, 563, 568, 569, 570, 571, 577, 579, 582, 585, 586, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 608, 609, 613, 617, 621, 622, 625, 627, 631, 632, 633, 634, 636, 646, 649, 652, 654, 655, 656, 657, 660, 661, 663, 664, 665, 667, 668, 670, 671, 674, 675, 676, 677, 680, 681, 686, 687, 690, 691, 692, 693, 695, 696, 697, 698, 699, 701, 704, 705, 706, 708, 709, 710, 711, 712, 714, 715, 718, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 743, 744, 746, 748, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 777, 779, 781, 782, 794, 795, 797, 798, 799, 800, 802, 803, 804], "add16mi": 762, "add16mi8": 762, "add16mr": 762, "add16ri": 762, "add16ri8": 762, "add16rm": 762, "add16rr": 762, "add32mi": 762, "add32mi8": 762, "add32mr": 762, "add32ri": 762, "add32ri8": 762, "add32ri8_db": 623, "add32ri_db": 623, "add32rm": [750, 762], "add32rr": [623, 750, 761, 762], "add32rr_db": 623, "add32rr_rev": 623, "add64i32": 623, "add64mi32": 762, "add64mi8": 762, "add64mr": 762, "add64ri32": [623, 762], "add64ri8": 623, "add64rr": 623, "add8rr": 599, "add_": 598, "add_custom_command": 598, "add_custom_target": 598, "add_definit": 597, "add_dep": 598, "add_depend": 598, "add_execut": [597, 598], "add_librari": 597, "add_llvm_execut": 598, "add_llvm_fuzz": 667, "add_llvm_librari": [597, 773], "add_llvm_pass_plugin": 773, "add_llvm_tool": 667, "add_llvm_unittest": 597, "add_pf": 699, "add_pt": 699, "add_ri": 761, "add_rpath": 625, "add_rr": 761, "add_subdirectori": [597, 773], "addabsolutesymbol": 701, "addanonymoussymbol": 701, "addast": 782, "addcodegenprepar": 716, "addcom": 668, "addcommonsymbol": 701, "adddefinedsymbol": 701, "addedcomplex": [761, 762], "addend": [582, 701, 702], "addenda": 653, "addendum": [672, 769], "addexternalsymbol": 701, "addfunctionast": 782, "addgener": [717, 779, 780, 781, 782], "addi": [702, 761], "addimm": 599, "addincom": [797, 798, 799, 800, 801], "addinstselector": 771, "addintervalsforspil": 599, "addirmodul": 717, "addit": [577, 580, 581, 584, 585, 586, 589, 593, 595, 597, 598, 599, 600, 602, 603, 604, 609, 613, 615, 617, 623, 624, 629, 631, 632, 633, 636, 642, 645, 649, 650, 651, 652, 653, 655, 656, 659, 661, 663, 666, 668, 669, 670, 671, 673, 675, 676, 677, 679, 680, 681, 682, 683, 686, 690, 691, 692, 693, 694, 696, 697, 700, 702, 703, 704, 706, 708, 710, 711, 712, 713, 714, 715, 719, 720, 722, 730, 732, 734, 735, 736, 738, 739, 741, 747, 748, 750, 751, 753, 754, 755, 756, 757, 759, 760, 762, 765, 766, 767, 768, 770, 771, 773, 774, 794, 795, 796, 798, 799, 800, 802], "addl": 751, "addlazyirmodul": 717, "addlib": 613, "addllvm": [597, 598], "addmbb": 599, "addmod": 613, "addmodul": [717, 779, 780, 781, 782, 796, 797, 798, 799], "addmoduleflag": 801, "addobject": 701, "addop": 750, "addpass": 716, "addpassestoemitfil": [773, 800], "addpassestoemitmc": 707, "addpdrm": 761, "addpdrr": 761, "addplugin": 701, "addpreemitpass": 771, "addpreserv": [585, 679], "addpsrm": 761, "addpsrr": 761, "addq": [623, 753], "addr": [603, 622, 633, 634, 640, 641, 642, 646, 655, 697, 708, 751, 771], "addr1": 750, "addr2": [646, 750], "addr2lin": [607, 646, 687], "addr3": 646, "addr64": [2, 118], "addrawvalu": 698, "addreg": 599, "addregbankcoverag": 683, "addregfrm": 771, "addregisterclass": [599, 771], "addrequir": 679, "address": [19, 20, 22, 23, 50, 57, 58, 63, 65, 100, 118, 120, 121, 123, 124, 144, 148, 152, 205, 206, 208, 209, 241, 247, 248, 253, 345, 346, 354, 367, 373, 375, 376, 396, 397, 411, 424, 425, 427, 479, 486, 488, 489, 509, 510, 523, 537, 538, 540, 579, 580, 581, 585, 586, 587, 588, 589, 597, 601, 602, 607, 612, 622, 631, 632, 633, 634, 635, 636, 640, 641, 642, 651, 652, 654, 655, 657, 659, 661, 666, 667, 668, 675, 676, 688, 690, 695, 696, 697, 700, 701, 703, 704, 708, 712, 714, 716, 717, 718, 720, 721, 722, 731, 732, 733, 734, 736, 742, 743, 748, 749, 750, 753, 755, 757, 761, 762, 770, 771, 773, 775, 776, 779, 781, 796, 797, 798, 799, 802], "address_rang": 577, "address_s": [577, 582, 715], "address_spac": 582, "addressis32bit": 722, "addressmodesemitt": 760, "addresss": 761, "addresssanit": [687, 702, 704, 712, 754], "addressspac": 675, "addri": 771, "addrr": 771, "addrri": 771, "addrrr": 771, "addrsig": [584, 640, 641, 663], "addrsig_sym": 663, "addrspac": [661, 675, 702, 715, 755], "addrspacecast": 676, "addrspacequ": 582, "addsdrm": 761, "addsdrr": 761, "addssrm": 761, "addssrr": 761, "addtmp": [795, 796, 797, 798, 799, 800, 801], "addtmp1": 796, "addtmp4": 795, "addtolinkord": 717, "addtypenam": 734, "addx": 761, "addxri": 708, "adequ": [597, 668, 673, 751, 771], "adher": [600, 602, 659, 717, 734, 739, 756, 762], "aditya": 684, "adjac": [582, 702, 734, 761], "adjust": [577, 582, 597, 608, 633, 634, 637, 646, 661, 666, 671, 700, 714, 730, 751, 755, 766, 771], "adjustpassmanag": [715, 716], "admin": [592, 659, 673, 688, 748], "administr": [688, 701], "adopt": [599, 602, 659, 670, 701, 717, 748, 751, 756], "adorn": [702, 752], "adrian": 654, "adrp": 663, "adsiz": 761, "adsizebit": 761, "adsizex": 761, "adst": 8, "adt": [602, 671, 779, 780, 781, 782, 795, 796, 797, 798, 799, 800, 801], "adttest": 597, "advanc": [577, 584, 597, 598, 651, 659, 668, 695, 701, 702, 709, 711, 717, 750, 752, 769, 771, 773, 794, 801], "advancedbuild": 691, "advantag": [586, 588, 599, 602, 651, 655, 659, 668, 669, 671, 675, 698, 702, 704, 705, 706, 734, 736, 737, 745, 751, 798, 799, 802], "advent": 702, "adventur": 734, "advertis": 661, "advic": [604, 659, 666, 668, 670, 689, 733], "advis": [595, 598, 613, 680, 698, 757, 797], "advisori": [600, 748], "advoc": [600, 602], "aed0d21a6": 674, "aed0d21a62db": 674, "aentri": [759, 760], "affect": [44, 222, 234, 236, 568, 580, 582, 586, 588, 596, 597, 600, 601, 603, 631, 633, 642, 651, 652, 659, 685, 693, 694, 696, 702, 703, 714, 715, 716, 719, 734, 736, 739, 744, 748, 750, 756, 757, 764, 766, 773, 796, 797], "affili": [598, 659], "affin": 608, "affix": 656, "afn": 702, "aforement": [659, 726, 729, 767], "aform_1": 599, "aform_2": 599, "afre": 700, "aft": 767, "after": [67, 154, 255, 412, 524, 577, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 593, 596, 597, 598, 599, 600, 603, 604, 606, 608, 609, 611, 613, 617, 621, 622, 631, 636, 646, 649, 650, 651, 655, 656, 659, 660, 661, 663, 664, 667, 668, 669, 671, 673, 674, 676, 677, 678, 680, 681, 685, 688, 689, 690, 693, 694, 695, 697, 700, 701, 702, 704, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 722, 726, 732, 734, 735, 739, 743, 745, 747, 748, 750, 752, 753, 754, 755, 756, 757, 759, 760, 761, 764, 765, 766, 767, 768, 771, 772, 773, 776, 777, 779, 780, 794, 795, 796, 797, 798, 799, 800, 801, 802], "afterbb": [797, 798, 799, 800, 801], "afterloop": [797, 798, 799, 800, 801], "afterward": [659, 666, 702, 706, 732, 751, 755], "again": [584, 588, 598, 601, 603, 608, 623, 651, 655, 657, 661, 666, 674, 680, 702, 709, 713, 714, 720, 734, 739, 747, 749, 752, 757, 765, 767, 773, 795, 796, 797, 799, 802], "against": [584, 591, 592, 595, 597, 600, 603, 616, 631, 636, 659, 661, 663, 664, 666, 667, 685, 687, 690, 695, 700, 701, 702, 704, 715, 717, 731, 732, 734, 736, 737, 739, 747, 748, 751, 765, 766, 768, 774, 777, 795], "age": [600, 722, 727, 761], "agenc": 746, "agent": [582, 702], "agg": 702, "agg1": 702, "agg2": 702, "agg3": 702, "aggreg": [602, 622, 636, 661, 700, 703, 734, 771, 775], "aggress": [585, 599, 602, 652, 665, 668, 671, 702, 703, 734, 750, 794, 797], "agnost": [588, 599, 633, 645, 702, 717, 750, 756], "ago": 659, "agpr": 702, "agpr0": 582, "agpr255": 582, "agre": [600, 601, 659, 677, 724, 732, 739, 748, 750, 777], "agreement": [577, 739], "agrep": 765, "ah": [702, 753, 762], "ahead": [602, 659, 661, 671, 673, 695, 696, 701, 717, 736, 755, 773, 779, 794, 802, 803], "ahm": [684, 748], "ai": [602, 734], "aid": [668, 701, 702, 751, 760], "aim": [588, 592, 593, 598, 602, 604, 656, 659, 667, 701, 702, 708, 717, 718, 734, 741, 742, 746, 747, 748, 750, 756, 779], "ain": 582, "air": 702, "aix": [599, 653], "aka": [584, 585, 599, 659, 702, 703, 704, 716, 729, 730, 734, 793, 794, 795, 796, 797, 798, 799, 800, 801], "al": [599, 695, 702, 708, 753, 762, 771], "al_aliasset": 771, "al_superregsset": 771, "alac": 764, "alacconvert": 764, "albeit": [676, 799], "albini": 748, "alex": [656, 739], "algebra": 732, "algn": 775, "algo": 773, "algorithm": [585, 602, 620, 623, 631, 651, 658, 661, 668, 681, 702, 706, 713, 714, 722, 732, 734, 741, 751, 759, 761, 771, 794, 795, 796, 797, 798, 799, 800, 802], "alia": [577, 586, 589, 603, 608, 612, 624, 631, 632, 639, 641, 670, 700, 703, 708, 713, 714, 716, 717, 718, 743, 767, 769, 771, 773], "alias": [577, 580, 585, 589, 623, 631, 634, 641, 650, 669, 694, 713, 732, 743, 753, 771, 802], "aliasanalysi": [702, 773], "aliasanalysisdebugg": 585, "aliase": [589, 702, 714], "aliaseeti": 702, "aliasesset": 585, "aliasopt": 651, "aliasresult": 585, "aliasset": [585, 771], "alic": 759, "align": [577, 581, 582, 586, 599, 603, 629, 633, 636, 653, 655, 656, 659, 661, 668, 669, 676, 687, 697, 698, 701, 702, 705, 708, 712, 714, 715, 732, 734, 741, 743, 747, 750, 753, 755, 771, 776, 777], "align32bit": 589, "align_nod": 702, "aligna": 750, "alignlog2": 702, "alignmentoffset": 701, "alignstack": [589, 702], "alignstyl": 734, "aliv": [599, 655, 702, 714, 732, 734, 751, 773], "all": [49, 118, 143, 239, 240, 362, 363, 474, 475, 577, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 627, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 680, 681, 683, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 725, 726, 727, 729, 730, 733, 734, 735, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 750, 751, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803], "all_build": 673, "all_ones_mask": 751, "all_zeros_mask": 751, "allanalyseson": 716, "allevi": [599, 651, 702, 734], "alli": 702, "alloc": [49, 143, 239, 362, 474, 577, 582, 585, 586, 597, 602, 609, 611, 631, 632, 633, 645, 661, 663, 666, 668, 669, 671, 675, 678, 700, 701, 702, 704, 707, 708, 712, 717, 719, 732, 741, 742, 743, 751, 753, 754, 755, 771, 773, 775, 777, 779, 781, 796, 797, 798, 799, 802], "alloca": [582, 599, 602, 655, 661, 668, 669, 697, 700, 713, 732, 734, 750, 753, 754, 755, 799, 800, 801], "allocainst": [602, 702, 734, 799, 800, 801], "allocat": [599, 633, 702, 771], "allocatestr": 701, "allocationinst": 734, "allocs": [589, 702], "allon": 702, "allow": [577, 580, 581, 582, 585, 586, 588, 589, 591, 595, 597, 598, 599, 600, 601, 602, 603, 604, 608, 609, 613, 617, 623, 631, 633, 641, 645, 652, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 668, 669, 670, 671, 676, 677, 680, 687, 688, 690, 691, 693, 695, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 729, 731, 732, 733, 734, 736, 739, 742, 743, 745, 747, 748, 749, 750, 751, 752, 753, 755, 756, 759, 761, 762, 764, 766, 767, 768, 770, 771, 773, 774, 775, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805], "allow_retri": 608, "allowlist": 717, "allowsanycontiguousstorag": 734, "allowsanysmalls": 734, "allroot": 765, "alltargetsasmpars": 595, "alltargetsdesc": 595, "alltargetsdisassembl": 595, "alltargetsinfo": 595, "almost": [577, 586, 588, 599, 601, 602, 631, 659, 662, 666, 667, 668, 674, 676, 703, 734, 736, 755, 756], "alon": [589, 594, 599, 651, 659, 690, 711, 713, 751, 766, 794], "along": [586, 589, 597, 599, 602, 632, 633, 637, 640, 641, 652, 655, 656, 658, 659, 663, 666, 668, 671, 691, 695, 699, 701, 702, 707, 708, 709, 713, 715, 727, 732, 734, 741, 749, 750, 751, 752, 760, 761, 771, 772, 773, 780, 795, 796, 802, 803], "alongsid": [589, 634, 654, 671, 716, 736, 745, 772, 773], "alpha": [702, 771], "alphabet": [582, 759, 761], "alphacompilationcallback": 771, "alphajitinfo": 771, "alphanumer": [618, 633], "alreadi": [577, 582, 585, 591, 592, 594, 595, 596, 597, 598, 599, 602, 625, 631, 632, 651, 652, 654, 655, 659, 662, 668, 671, 673, 675, 680, 683, 686, 687, 695, 696, 697, 700, 701, 702, 709, 714, 716, 717, 718, 719, 734, 735, 736, 738, 739, 746, 747, 748, 749, 750, 751, 752, 753, 755, 762, 766, 767, 771, 772, 773, 777, 779, 781, 795, 796, 797, 798, 799, 800, 801], "also": [577, 578, 579, 581, 582, 583, 585, 586, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 613, 617, 623, 631, 636, 637, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 673, 675, 676, 677, 678, 680, 681, 683, 686, 687, 689, 690, 691, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 711, 713, 714, 715, 716, 717, 719, 720, 722, 726, 731, 732, 733, 734, 735, 736, 737, 739, 741, 743, 744, 746, 747, 748, 750, 751, 752, 753, 755, 756, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "alt_always_instru": 774, "alt_never_instru": 774, "alter": [651, 702, 734, 750, 767], "altern": [577, 580, 581, 582, 593, 595, 597, 599, 601, 606, 608, 617, 640, 652, 659, 661, 666, 669, 671, 673, 674, 675, 680, 681, 683, 686, 696, 701, 702, 704, 706, 717, 719, 734, 741, 757, 764, 771, 773, 774, 777, 794, 799, 805], "although": [577, 586, 589, 598, 599, 601, 602, 608, 651, 652, 659, 662, 668, 671, 673, 681, 690, 695, 702, 704, 706, 708, 709, 722, 727, 729, 734, 752, 755, 760, 761, 766, 773, 798], "altivec": [599, 702, 703], "altogeth": [691, 741], "alu": [582, 631], "alu32_rr": 699, "alway": [577, 582, 585, 586, 588, 589, 591, 592, 594, 597, 598, 599, 600, 601, 602, 603, 608, 613, 615, 624, 631, 651, 652, 655, 656, 659, 661, 663, 664, 666, 671, 674, 676, 680, 691, 695, 702, 703, 705, 706, 708, 713, 722, 724, 729, 730, 733, 734, 735, 736, 745, 746, 748, 750, 751, 754, 755, 756, 757, 759, 761, 765, 766, 772, 774, 775, 776, 777, 794, 795, 796, 797, 798, 799, 800, 801, 802], "always_inlin": 652, "always_instru": 774, "alwaysinlin": [589, 702, 772], "alwaysinlinerpass": 772, "am": [659, 676, 716, 734, 772], "amara": 739, "amaz": [797, 798], "ambigu": [580, 651, 695, 761, 766, 794, 798], "amd": [577, 580, 582, 599, 631, 653, 693, 751, 759], "amd64": 671, "amd_code_version_major": 582, "amd_kernel_code_version_minor": 582, "amd_machine_kind": 582, "amd_machine_version_major": 582, "amd_machine_version_step": 582, "amd_queue_t": 582, "amdfam10": 800, "amdgpu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 577, 671, 702, 708, 739, 759, 760, 769], "amdgpu_flat_work_group_s": 582, "amdgpu_hsa_note_code_object_version_": 582, "amdgpu_hsa_note_hsail_": 582, "amdgpu_hsa_note_isa_": 582, "amdgpu_num_sgpr": 582, "amdgpu_num_vgpr": 582, "amdgpu_waves_per_eu": 582, "amdgpubufferintrins": 760, "amdgpubufferload": 760, "amdgpuimagedimatomicintrins": 760, "amdgpursrcintrins": 760, "amdgpusample_lz_o": 760, "amdgpusamplevari": 760, "amdgputargetmachin": 716, "amdhsa_accum_offset": 582, "amdhsa_dx10_clamp": 582, "amdhsa_exception_fp_denorm_src": 582, "amdhsa_exception_fp_ieee_div_zero": 582, "amdhsa_exception_fp_ieee_inexact": 582, "amdhsa_exception_fp_ieee_invalid_op": 582, "amdhsa_exception_fp_ieee_overflow": 582, "amdhsa_exception_fp_ieee_underflow": 582, "amdhsa_exception_int_div_zero": 582, "amdhsa_float_denorm_mode_16_64": 582, "amdhsa_float_denorm_mode_32": 582, "amdhsa_float_round_mode_16_64": 582, "amdhsa_float_round_mode_32": 582, "amdhsa_forward_progress": 582, "amdhsa_fp16_overflow": 582, "amdhsa_group_segment_fixed_s": 582, "amdhsa_ieee_mod": 582, "amdhsa_kernarg_s": 582, "amdhsa_memory_ord": 582, "amdhsa_next_free_sgpr": 582, "amdhsa_next_free_spgr": 582, "amdhsa_next_free_vgpr": 582, "amdhsa_private_segment_fixed_s": 582, "amdhsa_reserve_": 582, "amdhsa_reserve_flat_scratch": 582, "amdhsa_reserve_vcc": 582, "amdhsa_reserve_xnack_mask": 582, "amdhsa_system_sgpr_private_segment_wavefront_offset": 582, "amdhsa_system_sgpr_workgroup_id_i": 582, "amdhsa_system_sgpr_workgroup_id_x": 582, "amdhsa_system_sgpr_workgroup_id_z": 582, "amdhsa_system_sgpr_workgroup_info": 582, "amdhsa_system_vgpr_workitem_id": 582, "amdhsa_tg_split": 582, "amdhsa_user_sgpr_dispatch_id": 582, "amdhsa_user_sgpr_dispatch_ptr": 582, "amdhsa_user_sgpr_flat_scratch_init": 582, "amdhsa_user_sgpr_kernarg_segment_ptr": 582, "amdhsa_user_sgpr_private_segment_buff": 582, "amdhsa_user_sgpr_private_segment_s": 582, "amdhsa_user_sgpr_queue_ptr": 582, "amdhsa_wavefront_size32": 582, "amdhsa_workgroup_processor_mod": 582, "amdkernelcodet": 582, "amen": [599, 737], "amend": [654, 659, 671, 733], "amini": 739, "aminiinconsist": 739, "among": [577, 599, 602, 603, 652, 663, 666, 671, 677, 702, 704, 705, 714, 715, 732, 734, 736, 759], "amongst": [577, 586], "amort": 685, "amount": [582, 593, 595, 599, 600, 602, 609, 611, 631, 636, 649, 651, 659, 661, 662, 664, 668, 671, 676, 696, 702, 704, 714, 732, 734, 736, 737, 747, 748, 749, 750, 753, 755, 759, 762, 773, 774, 781, 796, 803], "amper": 689, "ampersand": [115, 202, 304, 471, 576], "ampl": 757, "amx": 702, "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 61, 62, 65, 66, 79, 88, 97, 99, 101, 115, 118, 119, 125, 126, 127, 128, 129, 130, 131, 132, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 163, 174, 186, 188, 202, 203, 204, 210, 211, 212, 213, 214, 219, 220, 221, 222, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 247, 248, 249, 251, 252, 267, 278, 288, 290, 304, 305, 310, 315, 327, 336, 337, 338, 342, 343, 344, 346, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 378, 379, 380, 392, 393, 394, 395, 396, 397, 423, 426, 428, 436, 439, 440, 441, 442, 443, 444, 459, 460, 461, 462, 471, 473, 474, 475, 476, 477, 478, 479, 482, 483, 485, 486, 487, 491, 492, 493, 505, 506, 507, 508, 509, 510, 534, 536, 539, 541, 549, 552, 553, 554, 555, 556, 557, 566, 567, 568, 569, 570, 572, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 644, 645, 646, 649, 650, 652, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 672, 674, 675, 676, 677, 678, 680, 681, 682, 683, 686, 688, 689, 690, 692, 693, 694, 695, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 725, 726, 727, 729, 730, 732, 733, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 752, 753, 754, 755, 756, 757, 759, 760, 762, 764, 765, 766, 767, 768, 769, 770, 774, 775, 776, 777, 778, 779, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805], "anachronist": 589, "analog": [577, 661, 668, 681, 702, 706, 718, 734, 751, 755, 773], "analys": [585, 590, 596, 599, 649, 662, 671, 702, 706, 732, 734, 739, 741, 750, 769, 772, 773, 774, 775], "analysi": [586, 590, 591, 596, 602, 615, 649, 656, 662, 664, 666, 668, 670, 671, 675, 685, 699, 702, 703, 705, 706, 708, 713, 718, 719, 741, 742, 745, 750, 751, 759, 765, 769, 772, 775, 778, 796, 799, 801], "analysisalias": 745, "analysisfpcommut": 745, "analysisresultmodel": 716, "analysisusag": [585, 679], "analyt": 738, "analyz": [597, 599, 602, 607, 623, 649, 650, 655, 658, 659, 666, 671, 673, 683, 703, 706, 714, 732, 734, 750, 751, 759, 765, 773, 774, 775, 797], "analyzebranch": 771, "ancestor": [582, 695, 761], "anchor": 750, "ancient": 584, "and": [0, 2, 3, 4, 6, 7, 8, 9, 17, 20, 21, 23, 24, 30, 31, 33, 41, 42, 43, 44, 45, 46, 49, 52, 54, 55, 59, 63, 64, 88, 115, 118, 121, 122, 124, 130, 131, 137, 138, 139, 141, 143, 145, 146, 149, 152, 153, 174, 202, 203, 206, 207, 209, 219, 220, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 242, 244, 245, 249, 253, 254, 278, 304, 306, 311, 316, 318, 327, 337, 339, 341, 343, 345, 362, 363, 369, 370, 371, 376, 377, 410, 411, 427, 428, 439, 440, 441, 449, 459, 460, 461, 462, 471, 472, 474, 475, 481, 482, 483, 489, 490, 522, 523, 540, 541, 552, 553, 554, 563, 566, 567, 568, 569, 570, 572, 576, 578, 580, 584, 587, 589, 591, 592, 594, 596, 597, 600, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 626, 627, 628, 629, 630, 635, 637, 640, 642, 644, 646, 647, 648, 649, 650, 654, 656, 657, 658, 660, 661, 663, 672, 673, 674, 675, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 690, 694, 696, 697, 698, 699, 703, 704, 708, 710, 711, 712, 715, 718, 719, 720, 721, 722, 725, 727, 730, 731, 733, 735, 737, 738, 739, 740, 743, 744, 745, 746, 747, 749, 752, 754, 756, 757, 759, 762, 763, 765, 768, 770, 772, 774, 775, 777, 779, 780, 781, 782, 797, 798, 799, 800, 801, 803, 804, 805], "andrew": [668, 736], "andric": 748, "android": [671, 747, 766], "andw": 603, "anew": 750, "angl": [652, 761, 777], "ani": [115, 202, 304, 471, 576, 577, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 608, 609, 613, 615, 616, 617, 620, 621, 622, 623, 627, 631, 632, 633, 634, 636, 637, 640, 641, 644, 645, 646, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 673, 675, 676, 678, 680, 687, 689, 690, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 726, 729, 730, 732, 734, 735, 736, 738, 739, 741, 743, 745, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 765, 766, 767, 768, 770, 771, 772, 773, 774, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "annot": [582, 591, 603, 608, 631, 637, 652, 661, 666, 701, 703, 708, 715, 736, 739, 743, 751], "announc": [670, 711, 736, 739, 744, 757, 774], "anon": 702, "anonym": [631, 701, 746, 750, 759, 760, 761, 771, 773, 775, 794, 795, 796, 797, 798, 799, 800, 801], "anonymous_0": 760, "anonymous_1": 760, "anoth": [577, 580, 581, 582, 585, 586, 587, 588, 589, 595, 597, 598, 599, 600, 602, 603, 608, 613, 617, 631, 633, 636, 645, 646, 649, 651, 655, 656, 658, 659, 661, 662, 663, 664, 668, 671, 673, 676, 678, 679, 680, 681, 683, 689, 690, 691, 693, 699, 700, 701, 702, 703, 704, 705, 706, 709, 713, 714, 715, 716, 717, 718, 721, 729, 730, 732, 736, 739, 743, 750, 751, 752, 753, 754, 755, 756, 759, 760, 761, 762, 766, 767, 768, 771, 773, 774, 775, 776, 777, 780, 794, 795, 796, 797, 798, 799, 800, 801, 802], "another_op": 708, "anotherbranch": 736, "anothercategori": 651, "answer": [585, 592, 602, 651, 659, 664, 666, 669, 678, 695, 702, 709, 713, 714, 732, 737, 742, 796, 797, 799], "anti": [631, 658], "anticip": [577, 736, 739, 776], "antisymmetr": 714, "antisymmetri": 714, "anxious": 597, "any_other_cond": 702, "anyextload": 676, "anyhow": 702, "anymor": [592, 767, 773], "anyon": [586, 598, 601, 659, 660, 713, 746, 748, 750, 771], "anyregcc": [589, 702, 753], "anyth": [577, 582, 586, 595, 599, 602, 609, 611, 631, 633, 652, 655, 659, 664, 671, 673, 687, 690, 695, 702, 706, 716, 717, 718, 720, 726, 732, 734, 736, 750, 751, 753, 755, 761, 762, 767, 796, 797], "anyway": [602, 658, 693, 702, 713, 732, 739, 750], "anywher": [600, 603, 661, 666, 687, 702, 705, 709, 714, 752, 761, 766, 794, 799], "ao": 663, "ap": [668, 702], "ap2": 702, "apach": [602, 659, 664, 694, 756, 779, 780, 781, 782], "apart": [585, 588, 597, 675, 702, 726, 734], "apertur": [49, 362, 474, 582], "apfloat": [671, 795, 796, 797, 798, 799, 800, 801], "api": [585, 597, 602, 636, 651, 653, 654, 668, 671, 672, 675, 679, 686, 694, 697, 701, 704, 715, 727, 730, 731, 737, 739, 740, 747, 753, 757, 759, 769, 774, 778, 780, 781, 782, 795, 796, 801], "api_create_info": 582, "api_shader_hash": 582, "apint": [708, 734, 775], "app": [731, 734, 738], "appar": [582, 799], "appeal": 751, "appear": [577, 581, 582, 585, 586, 593, 602, 603, 608, 613, 620, 631, 633, 651, 656, 659, 663, 669, 697, 702, 708, 717, 720, 721, 722, 727, 729, 730, 732, 734, 736, 741, 750, 751, 755, 759, 761, 766, 771], "appel": 668, "appel89": 668, "append": [577, 589, 597, 603, 604, 606, 613, 614, 617, 627, 680, 697, 702, 734, 735, 760, 764, 766, 774], "appendinglinkag": 734, "appendix": 577, "appenduniqu": 702, "appertain": 702, "appl": [598, 599, 603, 606, 622, 625, 657, 659, 661, 670, 671, 702, 748, 750, 759], "apple_nam": [606, 750], "apple_namespac": 750, "apple_objc": 750, "apple_typ": [606, 750], "appli": [67, 154, 255, 412, 524, 577, 579, 580, 581, 582, 585, 586, 588, 592, 593, 597, 598, 599, 600, 601, 602, 608, 613, 617, 622, 633, 642, 645, 649, 651, 655, 658, 659, 663, 666, 669, 671, 675, 683, 687, 688, 691, 692, 694, 697, 701, 702, 704, 705, 706, 707, 716, 717, 719, 722, 729, 732, 733, 734, 736, 739, 741, 743, 744, 748, 750, 751, 756, 757, 761, 764, 767, 771, 773, 776, 777, 780, 796, 798, 799, 802], "applic": [577, 582, 588, 589, 597, 599, 601, 602, 613, 616, 617, 632, 641, 651, 652, 653, 659, 661, 665, 666, 668, 675, 701, 702, 704, 707, 714, 732, 734, 742, 747, 751, 753, 755, 757, 761, 762, 764, 766, 769, 771, 773, 775, 776, 778, 779, 793, 796, 798, 802], "applu331": 738, "applymergedloc": 697, "appreci": [577, 654, 659, 691], "approach": [577, 582, 588, 593, 594, 597, 599, 631, 651, 652, 655, 659, 661, 669, 671, 681, 685, 695, 699, 701, 702, 712, 714, 732, 734, 739, 741, 749, 750, 755, 757, 771], "appropri": [577, 582, 585, 586, 588, 599, 601, 602, 603, 608, 617, 631, 637, 651, 655, 659, 661, 662, 666, 667, 668, 671, 676, 677, 678, 688, 693, 694, 695, 698, 699, 702, 705, 715, 717, 724, 729, 732, 733, 734, 736, 737, 739, 744, 746, 750, 755, 756, 757, 760, 761, 762, 771, 773, 775, 777, 779, 781, 794, 798, 799], "approv": [601, 659, 694, 733, 739, 748, 757], "approx": [652, 715], "approxim": [591, 608, 652, 673, 687, 702, 703, 704, 748, 767], "apr": 756, "aptr": 702, "apu": 582, "aq": 702, "aq2": 702, "aqlwrap": 582, "ar": [597, 607, 627, 632, 639, 671, 686, 692, 716, 734], "arang": 622, "arbitrari": [577, 582, 585, 589, 599, 602, 608, 623, 651, 655, 661, 667, 668, 669, 676, 685, 697, 702, 708, 713, 717, 730, 734, 748, 750, 751, 753, 755, 759, 760, 761, 771, 773, 776, 794, 795, 796, 799, 802, 803], "arbitrarili": [577, 695, 702, 724, 750, 774, 797], "arc": [617, 671, 733, 739, 760], "arcanist": [670, 671, 733], "arch": [606, 609, 611, 617, 622, 629, 631, 632, 633, 634, 635, 640, 641, 642, 646, 652, 671, 689, 691, 717, 744, 774, 800], "arch1": 632, "arch2": 632, "arch_nam": 646, "arch_on": 627, "arch_vgpr": 582, "architect": 582, "architectur": [577, 586, 588, 596, 597, 599, 603, 606, 608, 609, 611, 617, 622, 623, 627, 629, 631, 632, 633, 634, 640, 641, 642, 646, 652, 654, 661, 666, 667, 671, 672, 673, 687, 689, 691, 693, 694, 701, 702, 704, 708, 715, 717, 718, 721, 741, 744, 747, 751, 757, 759, 761, 762, 766, 768, 769, 771, 774, 778, 800, 804], "architecture_name_s": 582, "archiv": [595, 607, 617, 622, 626, 632, 633, 634, 642, 645, 653, 659, 670, 686, 705, 722, 734, 735, 736, 746, 747, 774], "archiveiter": 734, "arcp": 702, "arcpatch": 733, "arctan": 777, "are": [17, 33, 41, 44, 46, 55, 61, 118, 121, 137, 146, 148, 203, 206, 222, 231, 234, 236, 245, 251, 327, 370, 372, 427, 428, 441, 449, 462, 482, 485, 540, 541, 554, 563, 568, 570, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 629, 631, 632, 633, 634, 637, 638, 640, 641, 642, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "area": [577, 582, 588, 592, 594, 599, 601, 654, 656, 659, 661, 668, 694, 701, 703, 704, 711, 733, 734, 744, 748, 751, 756, 757, 766, 799], "aren": [585, 599, 600, 602, 652, 659, 668, 669, 671, 673, 680, 691, 702, 708, 732, 736, 751, 757, 796, 797, 802], "areprivatesymbolsstrip": 722, "arg": [582, 602, 604, 608, 611, 617, 637, 651, 655, 667, 691, 696, 697, 701, 708, 714, 745, 750, 759, 760, 761, 776, 793, 794, 795, 796, 797, 798, 799, 800, 801], "arg1": [655, 702, 704, 774, 793], "arg2": [655, 702, 704, 793], "arg3": 655, "arg_begin": 734, "arg_empti": 734, "arg_end": 734, "arg_index": 702, "arg_iter": 734, "arg_siz": [668, 734, 795, 796, 797, 798, 799, 800, 801], "argc": [651, 656, 657, 701, 702, 704, 715, 734, 750, 775], "argidx": 801, "arglist": 702, "argmemon": [589, 666, 702], "argn": 598, "argnam": [651, 794, 795, 796, 797, 798, 799, 800, 801], "argstart": 651, "argsv": [795, 796, 797, 798, 799, 800, 801], "argti": 702, "arguabl": 675, "argument": [55, 146, 245, 370, 482, 577, 585, 588, 589, 591, 594, 596, 597, 599, 602, 603, 604, 605, 607, 608, 610, 611, 613, 615, 616, 617, 622, 632, 637, 646, 647, 648, 650, 652, 656, 660, 661, 662, 664, 666, 667, 668, 669, 671, 673, 677, 682, 686, 691, 695, 696, 699, 700, 701, 704, 707, 708, 714, 718, 719, 736, 742, 743, 745, 747, 749, 750, 751, 753, 754, 755, 759, 760, 761, 762, 765, 766, 771, 773, 774, 776, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "argument1": 761, "argument2": 761, "argumentlisttyp": 734, "argv": [593, 598, 611, 651, 656, 657, 701, 704, 715, 734, 750, 775], "argv0": 611, "argvalu": [651, 657], "aris": [659, 669, 702, 734, 761], "arithbinop_rf": 761, "arithmet": [656, 666, 676, 732, 734, 751, 761, 770, 795, 799], "ariti": 668, "arm": [586, 599, 633, 634, 640, 641, 645, 650, 661, 666, 670, 671, 680, 691, 702, 703, 708, 710, 739, 740, 748, 759, 761, 766, 769, 771], "arm32": 653, "arm64": [653, 671, 701, 764], "arm7": 774, "arm_aapcs_vfpcc": 589, "arm_aapcscc": 589, "arm_apcscc": 589, "arm_bf16": 650, "arm_cd": 650, "arm_fp16": 650, "arm_mv": 650, "arm_neon": [588, 650, 759], "arm_sv": 650, "arm_sve_builtin": 650, "arm_sve_builtin_cg_map": 650, "arm_sve_sema_rangecheck": 650, "arm_sve_typeflag": 650, "armap": [632, 743], "armgenasmmatch": 759, "armgenregisterinfo": 759, "armhf": [692, 693], "arminstrinfo": 771, "armv5": 586, "armv6": [653, 689], "armv7": [588, 653, 671, 689, 693, 702], "armv7a": 692, "armv8": [653, 702, 712, 742, 762], "armv9": 743, "arnaud": 711, "around": [577, 585, 586, 596, 598, 601, 603, 630, 631, 651, 659, 661, 668, 669, 671, 681, 690, 698, 700, 702, 704, 711, 713, 714, 716, 717, 718, 719, 732, 734, 736, 739, 750, 751, 752, 755, 756, 761, 771, 772, 773, 774, 794, 797, 801, 802], "arr": [669, 702, 751], "arr1": 751, "arr2": 751, "arrang": [599, 601, 651, 668, 695, 702, 732, 751, 757, 766, 773, 780, 781], "array": [577, 580, 582, 585, 588, 589, 599, 609, 636, 646, 655, 661, 666, 668, 704, 714, 715, 721, 722, 725, 726, 729, 732, 750, 751, 759, 760, 766, 767, 770, 771, 794, 799, 802], "arrayidx": 702, "arrayidx1": 702, "arrayidx2": 702, "arrayidx3": 702, "arrayidx4": 702, "arrayref": [657, 760], "arraytyp": 734, "arriv": 669, "arsenault": 739, "arsenaultagre": 739, "art": 668, "artem": 652, "articl": [714, 732, 736, 778, 797, 799], "articul": 601, "artifact": [669, 694, 704, 714, 741], "artifact_prefix": 704, "artifici": 582, "artur": 748, "as": [27, 28, 29, 30, 31, 34, 35, 36, 44, 47, 48, 49, 50, 55, 58, 61, 62, 65, 66, 88, 101, 115, 127, 128, 129, 130, 131, 142, 143, 144, 146, 148, 151, 174, 202, 212, 213, 214, 219, 220, 234, 237, 238, 239, 240, 241, 245, 251, 252, 278, 304, 336, 344, 346, 360, 362, 363, 367, 370, 372, 373, 374, 378, 379, 380, 393, 394, 396, 426, 436, 439, 440, 443, 444, 471, 473, 474, 475, 479, 482, 485, 486, 487, 491, 492, 493, 506, 507, 509, 539, 549, 552, 553, 556, 557, 568, 572, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 606, 607, 608, 609, 611, 612, 613, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 649, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "asan": [704, 742, 747], "asanstackvariabledescript": 754, "asc": 738, "ascend": [577, 656, 702], "ascii": [589, 634, 644, 702, 704, 750, 761, 793, 794, 795, 796, 797, 798, 799, 800, 801], "asciz": 663, "asf": 659, "ashr": 676, "asi": 771, "asid": [681, 702, 713, 734], "ask": [577, 585, 592, 600, 601, 652, 654, 659, 662, 664, 666, 668, 671, 673, 694, 695, 701, 711, 714, 716, 734, 736, 737, 744, 746, 748, 750, 755, 757, 773, 781, 794, 797, 799, 801, 802], "aslr": 747, "asm": [589, 595, 609, 611, 631, 634, 638, 650, 715, 743, 745], "asmformat": 650, "asmmatchconvert": 761, "asmmatcheremitt": 759, "asmnam": 771, "asmpars": [662, 671, 759], "asmparsernum": 650, "asmprint": [599, 668, 702, 759, 771], "asmstr": [761, 762, 771], "asmvariantnam": 761, "asmwrit": [662, 668], "asmwriternum": 650, "aspect": [577, 597, 599, 601, 655, 658, 668, 681, 683, 687, 702, 726, 727, 734, 736, 741, 747, 750, 794, 795, 797, 801, 802], "aspir": 798, "aspx": [602, 738], "asrc": 8, "asrc2": 8, "assembl": [20, 121, 206, 427, 540, 577, 578, 579, 580, 581, 589, 606, 607, 609, 611, 615, 620, 621, 631, 634, 638, 649, 650, 652, 653, 659, 661, 662, 664, 669, 671, 673, 692, 708, 710, 715, 717, 736, 737, 742, 743, 749, 755, 759, 762, 765, 766, 769, 796, 800, 804], "assert": [597, 599, 651, 654, 671, 689, 694, 696, 701, 702, 703, 704, 715, 731, 732, 734, 744, 750, 766, 771, 773, 777, 780, 795, 796, 798, 799, 800, 801], "assign": [577, 581, 582, 586, 589, 590, 591, 592, 599, 602, 603, 623, 637, 651, 654, 658, 659, 661, 663, 664, 669, 675, 681, 683, 687, 697, 699, 701, 702, 703, 712, 714, 715, 719, 734, 736, 747, 750, 759, 761, 767, 771, 777, 795, 800, 801, 803], "assigne": 592, "assignvirt2phi": 599, "assignvirt2stackslot": 599, "assist": [602, 659, 666, 687, 696, 697, 719, 798], "associ": [577, 582, 588, 589, 590, 591, 598, 599, 601, 602, 609, 651, 655, 656, 657, 658, 661, 663, 668, 696, 698, 701, 703, 707, 708, 713, 717, 719, 732, 734, 739, 745, 747, 750, 753, 755, 756, 757, 760, 761, 768, 769, 771, 774, 776, 794, 796], "assort": 801, "assum": [577, 579, 581, 582, 584, 585, 589, 590, 591, 593, 597, 599, 601, 602, 608, 609, 611, 618, 623, 627, 631, 633, 636, 637, 646, 652, 655, 659, 661, 662, 664, 666, 668, 669, 671, 673, 674, 675, 690, 701, 706, 714, 715, 717, 722, 724, 725, 726, 727, 729, 730, 732, 734, 736, 737, 739, 744, 748, 749, 750, 751, 753, 755, 759, 760, 761, 765, 767, 768, 771, 772, 773, 775, 777, 779, 794, 795, 798, 799, 800, 801, 802, 803], "assumpt": [599, 602, 603, 609, 631, 656, 659, 661, 702, 706, 747, 750, 751, 757, 779, 801, 802], "assur": [659, 777], "ast": [634, 650, 652, 671, 703, 759, 761, 779, 781, 793, 795, 796, 798, 799, 801, 802, 803, 804], "astcontext": 602, "astdump": 759, "astlay": 782, "astnod": 759, "astread": 759, "astwrit": 759, "asymmetr": 669, "asymmetri": [665, 714], "asymptomat": 604, "async": 717, "async_context": 655, "async_coroutin": 655, "async_function_point": 655, "async_op": 655, "async_op1": 655, "async_op2": 655, "asynchr": 702, "asynchron": [582, 586, 655, 701, 702, 717, 743], "at": [577, 581, 582, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 608, 609, 611, 613, 617, 622, 623, 624, 625, 629, 631, 633, 634, 635, 636, 638, 646, 651, 652, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 680, 681, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 726, 727, 729, 730, 731, 733, 734, 735, 739, 741, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804], "at_apple_properti": 750, "at_apple_property_attribut": 750, "at_apple_property_sett": 750, "at_apple_runtime_class": 750, "at_artifici": 750, "at_byte_s": 750, "at_decl_fil": 750, "at_decl_lin": 750, "at_encod": 750, "at_nam": 750, "at_typ": 750, "atabl": [759, 760], "atan2": 793, "atc": 582, "athlon": 800, "atkinson": 738, "atoi": 702, "atom": [27, 28, 29, 30, 31, 34, 35, 36, 42, 43, 127, 128, 129, 130, 131, 138, 139, 212, 213, 214, 219, 220, 232, 233, 336, 337, 378, 379, 380, 436, 439, 440, 443, 444, 459, 460, 491, 492, 493, 549, 552, 553, 556, 557, 566, 567, 580, 582, 603, 658, 659, 666, 676, 680, 713, 726, 734, 742, 747, 750, 755, 757], "atom_count": 750, "atom_count0": 750, "atomic_": 586, "atomic_cmpxchg": 586, "atomic_f": 586, "atomic_load_": 586, "atomic_swap": 586, "atomicexpand": 586, "atomicexpandpass": 586, "atomicrmw": [582, 586, 676, 743], "atomtyp": 750, "atop": 668, "att": [609, 611, 634, 638, 702, 743], "attach": [655, 657, 659, 671, 688, 696, 697, 708, 715, 717, 733, 734, 750, 767, 768, 776, 779, 795, 796, 797, 798, 799], "attachedcal": 702, "attack": [600, 702], "attacker_data": 751, "attacker_offset": 751, "attempt": [577, 581, 585, 589, 593, 599, 604, 612, 618, 631, 633, 634, 635, 649, 652, 655, 659, 661, 666, 671, 680, 687, 692, 697, 701, 702, 704, 707, 717, 732, 734, 745, 746, 747, 751, 753, 755, 756, 757, 759, 771, 773, 775, 776, 781], "attend": 711, "attende": 711, "attent": [600, 602, 659, 677, 694, 702, 746, 766, 771, 779], "attorney": 659, "attr": [0, 2, 3, 4, 582, 589, 602, 650, 702, 750, 759, 774, 775], "attr0": [21, 122, 207, 472, 589], "attr1": 589, "attr32": [21, 122, 207, 472], "attract": [577, 659, 668, 711], "attrdump": 759, "attrgrp": 589, "attrgrp0": 589, "attrgrp1": 589, "attribut": [21, 122, 207, 472, 589, 599, 609, 611, 620, 622, 633, 634, 640, 641, 645, 650, 655, 661, 663, 668, 675, 678, 681, 696, 699, 705, 714, 715, 718, 719, 721, 733, 734, 740, 742, 743, 745, 749, 755, 759, 760, 761, 762, 767, 771, 772, 773], "attributelist": [589, 759], "attributerefer": 759, "attrimpl": 759, "attrinfomap": 759, "attrkind": [698, 759], "attrlist": 759, "attrparsedattrimpl": 759, "attrparsedattrkind": 759, "attrparsedattrlist": 759, "attrparserstringswitch": 759, "attrpchread": 759, "attrpchwrit": 759, "attrrec": 760, "attrrecord": 760, "attrspel": 759, "attrspellinglistindex": 759, "attrtemplateinstanti": 759, "attrvisitor": 759, "atyp": 669, "au": [585, 679, 773], "audienc": [666, 778], "audit": 751, "augment": [577, 582, 591, 677, 683, 734, 798], "augmentation_str": [577, 582], "augmentation_string_s": 582, "august": 707, "aurora": 740, "authent": [670, 688, 743], "author": [577, 594, 599, 601, 602, 603, 655, 659, 664, 672, 688, 695, 701, 702, 703, 708, 714, 717, 733, 739, 750, 751], "authorit": 636, "auto": [580, 599, 617, 618, 637, 690, 701, 702, 706, 716, 717, 718, 734, 741, 750, 759, 760, 767, 769, 774, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "autoconf": [598, 659, 689], "autocrlf": 671, "autodetect": [597, 603, 609, 611, 617, 631], "autogener": 659, "autoimport": 690, "autoinsert": 734, "autom": [584, 599, 650, 659, 671, 696, 701, 733, 735, 739, 759, 762], "automat": [577, 579, 582, 585, 592, 595, 597, 599, 602, 607, 608, 609, 623, 633, 651, 654, 659, 664, 668, 670, 671, 674, 686, 688, 693, 694, 695, 700, 701, 706, 708, 709, 714, 717, 733, 734, 735, 736, 741, 742, 747, 749, 750, 752, 759, 761, 764, 767, 771, 773, 774, 777, 795, 797, 799, 800, 801], "automata": 650, "automaton": [599, 759], "autotool": 671, "autovector": 770, "aux": 734, "auxiliari": [582, 759, 771], "auxiliarydata": 805, "av": 713, "avail": [65, 346, 373, 486, 577, 581, 582, 586, 595, 597, 598, 599, 602, 603, 607, 608, 609, 611, 616, 617, 623, 630, 631, 634, 642, 649, 650, 651, 652, 655, 657, 659, 661, 664, 666, 671, 675, 679, 680, 681, 683, 686, 687, 688, 690, 691, 692, 694, 695, 697, 702, 704, 716, 717, 731, 732, 733, 734, 736, 738, 740, 742, 743, 744, 745, 746, 747, 750, 751, 753, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 770, 771, 773, 774, 775, 779, 793, 795, 796, 797, 798, 800], "available_extern": [589, 702], "available_featur": [608, 766], "avalanch": 734, "avenu": 746, "averag": [591, 615, 631, 687, 704, 797, 800], "avl": 734, "avoid": [577, 580, 582, 585, 587, 588, 589, 593, 597, 598, 599, 603, 623, 631, 641, 659, 663, 667, 668, 669, 677, 678, 680, 685, 691, 695, 697, 700, 702, 704, 705, 706, 714, 732, 734, 736, 739, 741, 744, 747, 748, 750, 751, 753, 754, 755, 756, 757, 766, 767, 770, 771, 773, 799, 801], "avr": [671, 739], "avx": [702, 766, 770], "avx1": 766, "avx2": [702, 766], "avx512": [675, 702, 740], "awaken": 661, "awar": [585, 586, 597, 598, 599, 602, 603, 651, 652, 659, 669, 671, 702, 704, 717, 734, 736, 740, 748, 750, 755], "away": [590, 595, 602, 603, 652, 655, 659, 668, 695, 702, 705, 711, 718, 732, 734, 736, 750, 751, 757, 773], "awkward": [651, 669], "ax": [599, 663, 702, 762, 771], "axi": [751, 770], "axpi": 652, "ayal": 741, "azul": 748, "b0000": 582, "b1": [697, 717, 761, 768, 770], "b128": [0, 2, 3, 4, 9, 579], "b13e8756b13a00cf168300179061fb4b91fefb": 704, "b16": [4, 579, 581], "b16x2": [0, 579], "b16x3": 579, "b16x4": 579, "b2": [697, 702, 717, 768, 770], "b256": 579, "b3": 697, "b32": [0, 2, 3, 4, 9, 579, 581, 715], "b32x2": [0, 2, 3, 4, 9], "b512": 579, "b64": [0, 2, 3, 4, 9, 579, 581], "b64x2": [0, 2, 3, 4, 9], "b96": 579, "b_ctor_bas": 603, "bach": 756, "back": [577, 582, 586, 593, 597, 599, 602, 613, 617, 642, 646, 655, 656, 659, 661, 666, 668, 669, 675, 680, 686, 687, 689, 693, 694, 701, 702, 704, 706, 717, 718, 731, 732, 734, 736, 747, 748, 749, 750, 751, 753, 755, 757, 759, 761, 766, 769, 777, 780, 795, 796, 797, 798, 799, 800, 801], "backedg": [590, 706, 732, 755, 797, 798], "backend": [577, 586, 591, 593, 604, 611, 616, 631, 634, 650, 652, 653, 661, 662, 666, 667, 671, 680, 681, 682, 683, 688, 691, 694, 697, 700, 702, 708, 716, 718, 734, 739, 740, 747, 750, 753, 755, 761, 762, 769, 804], "backendutil": 716, "background": [598, 600, 709, 734, 736, 759, 775], "backport": [693, 748], "backslash": 704, "backtrac": [599, 801], "backtrace_symbol": 687, "backup": [686, 736], "backward": [577, 582, 589, 651, 656, 698, 726, 734, 751, 755, 768, 770], "bad": [593, 602, 603, 604, 666, 674, 691, 697, 702, 714, 734, 744, 750, 751, 756, 777, 798, 801], "badarchivememb": 734, "badfileformat": 734, "bag": 667, "bail": [702, 774, 780], "bailouton": 734, "bake": [656, 678, 717], "balanc": [584, 586, 659, 747], "ball": 711, "bam": 602, "ban": [697, 746], "bandwidth": 702, "bangoper": 761, "bank": [580, 650, 676, 681, 682, 683], "bank_mask": [0, 1, 3, 4, 7, 8, 9, 582], "banner": 734, "bar": [597, 598, 599, 601, 602, 603, 608, 618, 619, 631, 637, 644, 646, 651, 652, 655, 656, 659, 663, 664, 700, 702, 711, 715, 717, 734, 736, 745, 750, 755, 757, 761, 766, 768, 770, 772, 777, 795, 797], "bar_bodi": 717, "bar_in_b_cc": 591, "bar_map": 602, "baranalysi": 716, "bare": [616, 692, 702, 753, 771, 779], "baremet": 692, "baremetalarm": 692, "barlist": 602, "barrier": [586, 631, 692, 702, 751, 755], "barrier0": 702, "bart": 582, "base": [22, 23, 57, 58, 123, 124, 148, 208, 209, 247, 248, 375, 376, 396, 397, 488, 489, 509, 510, 577, 579, 581, 582, 584, 585, 589, 591, 593, 595, 596, 597, 598, 600, 601, 603, 608, 609, 612, 615, 617, 618, 619, 631, 633, 636, 637, 638, 650, 651, 654, 655, 656, 659, 660, 661, 663, 667, 668, 671, 674, 675, 676, 678, 680, 685, 687, 689, 692, 693, 694, 696, 699, 700, 701, 703, 704, 706, 707, 708, 712, 713, 714, 715, 717, 718, 719, 721, 733, 735, 736, 737, 738, 740, 741, 742, 744, 746, 747, 748, 750, 751, 752, 756, 757, 759, 760, 762, 765, 766, 768, 769, 770, 771, 772, 773, 774, 777, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "base0": 764, "base1": 764, "base2": [702, 764], "base_offset": 702, "baseclass": 761, "basedonaddress": 721, "basedonseg": 721, "basedonsegmentaddress": 721, "basedonsegmentvalu": 721, "basedonself": 721, "basedontyp": 721, "basedonvalu": 721, "basefieldnam": 760, "baseinst": 582, "baseinstrinfo": 759, "baselay": [780, 782], "baselin": [599, 751, 764], "basenam": [646, 720, 750], "basename_t": 608, "baseobject": 751, "baseopcod": [699, 771], "baserec": 760, "basereg": 599, "baseregisterinfo": 759, "basereloc": 641, "baseti": 702, "basety1": 702, "basety2": 702, "basetyp": 702, "basevertex": 582, "bash": [608, 660, 752, 756], "basi": [577, 582, 615, 646, 651, 659, 660, 668, 701, 702, 713, 719, 734, 736, 741, 747, 748, 751, 755, 798], "basic": [582, 586, 590, 591, 592, 598, 599, 602, 609, 613, 615, 617, 620, 623, 624, 633, 640, 641, 650, 651, 652, 655, 656, 658, 659, 661, 664, 667, 668, 669, 671, 673, 676, 678, 681, 685, 694, 696, 697, 698, 703, 706, 709, 713, 715, 717, 721, 730, 733, 735, 741, 745, 747, 750, 751, 752, 753, 755, 756, 761, 762, 764, 765, 770, 775, 780, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803], "basic_": 761, "basic_p": 761, "basic_r": 761, "basic_ss": 761, "basicaa": 773, "basicaliasanalysi": [732, 773, 801], "basicblock": [602, 671, 713, 732, 739, 741, 773, 795, 796, 797, 798, 799, 800, 801], "basicblocklisttyp": 734, "basicblockutil": 734, "basicirlayermaterializationunit": 780, "basicread": 650, "basictyp": 702, "basicwrit": 650, "batch": 673, "battl": [636, 737], "bayer": 738, "baz": [598, 602, 603, 637, 646, 651, 734, 750, 761, 768, 770, 797], "baz_in_c_cc": 591, "bazanalysi": 716, "bazel": 757, "bazioti": 713, "bb": [602, 624, 640, 641, 663, 676, 697, 702, 703, 708, 714, 715, 734, 750, 751, 771, 795, 796, 797, 798, 799, 800, 801], "bb0_1": 715, "bb0_2": 715, "bb0_26": 715, "bb0_28": 715, "bb0_29": 715, "bb0_30": 715, "bb0_4": 715, "bb0_5": 715, "bb1": [589, 681, 697, 702, 713, 750, 751], "bb10": 751, "bb2": [589, 681, 697, 702, 713, 750], "bb3": 702, "bb4": 681, "bb_0": 663, "bb_1": 663, "bb_continu": 702, "bb_exit": 702, "bbar": 759, "bbrefer": 708, "bbs": [602, 714], "bc": [585, 589, 593, 594, 599, 604, 609, 614, 621, 632, 649, 659, 664, 671, 673, 686, 696, 715, 719, 734, 742, 766, 773], "bcanalyz": [589, 607, 745], "bcc": [708, 771], "bcpl": 761, "bcplcomment": 761, "bcreader": 616, "bcsymbolmap": 606, "bdce": 703, "be": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 20, 25, 41, 42, 43, 49, 50, 52, 53, 54, 55, 59, 61, 65, 66, 79, 88, 99, 101, 102, 115, 118, 125, 137, 138, 139, 143, 144, 145, 146, 149, 163, 174, 188, 202, 203, 210, 231, 232, 233, 239, 240, 241, 242, 243, 244, 245, 249, 251, 267, 278, 290, 304, 306, 311, 316, 317, 318, 327, 337, 339, 340, 341, 343, 346, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 426, 428, 449, 459, 460, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 539, 541, 563, 566, 567, 572, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 606, 608, 609, 611, 613, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "bear": 603, "beat": 685, "beauti": [793, 795, 798], "becam": 577, "becaus": [577, 580, 582, 584, 585, 586, 588, 589, 591, 593, 595, 598, 599, 602, 603, 608, 613, 631, 632, 636, 651, 652, 655, 656, 658, 659, 661, 664, 665, 666, 667, 668, 669, 671, 673, 674, 678, 680, 683, 687, 691, 693, 695, 696, 697, 698, 699, 700, 702, 704, 705, 706, 707, 708, 712, 713, 714, 719, 721, 724, 726, 732, 733, 734, 736, 738, 739, 743, 745, 748, 750, 751, 753, 756, 760, 761, 762, 765, 766, 767, 768, 770, 771, 772, 773, 777, 780, 794, 795, 796, 797, 798, 799, 800, 801, 802], "becom": [577, 582, 588, 598, 599, 602, 603, 622, 631, 634, 646, 651, 652, 655, 659, 666, 669, 675, 677, 679, 681, 689, 695, 697, 701, 702, 706, 716, 718, 732, 734, 736, 739, 748, 750, 751, 753, 755, 757, 761, 762, 766, 770, 771, 773, 774, 780, 794, 797, 799], "been": [577, 582, 583, 586, 588, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 606, 608, 615, 617, 631, 649, 651, 652, 654, 655, 656, 657, 659, 661, 662, 663, 664, 666, 668, 669, 673, 676, 677, 678, 680, 681, 690, 694, 697, 701, 702, 704, 707, 708, 709, 714, 715, 716, 717, 719, 721, 722, 725, 727, 729, 730, 732, 733, 734, 735, 736, 738, 739, 741, 743, 744, 745, 746, 747, 748, 750, 751, 753, 755, 756, 757, 758, 760, 761, 762, 767, 768, 771, 772, 773, 774, 775, 777, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801, 802], "befor": [27, 28, 29, 30, 31, 34, 35, 36, 127, 128, 129, 130, 131, 212, 213, 214, 219, 220, 336, 378, 379, 380, 436, 439, 440, 443, 444, 491, 492, 493, 549, 552, 553, 556, 557, 577, 580, 581, 582, 585, 586, 588, 593, 596, 597, 598, 599, 601, 603, 606, 608, 611, 613, 618, 623, 627, 631, 633, 636, 644, 646, 649, 651, 652, 654, 655, 659, 660, 661, 662, 664, 665, 666, 668, 669, 671, 673, 674, 678, 679, 680, 681, 690, 692, 693, 694, 695, 696, 697, 700, 701, 702, 706, 707, 708, 711, 713, 714, 715, 716, 717, 719, 722, 732, 733, 734, 739, 741, 744, 745, 748, 750, 751, 752, 753, 754, 755, 759, 761, 765, 766, 767, 770, 771, 773, 774, 775, 776, 777, 779, 780, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "beforehand": 706, "began": [602, 717, 736], "begin": [577, 582, 585, 589, 597, 599, 602, 603, 613, 620, 631, 651, 659, 661, 666, 668, 671, 673, 681, 694, 695, 701, 703, 707, 713, 714, 715, 716, 720, 721, 722, 726, 734, 739, 745, 747, 750, 751, 753, 756, 759, 760, 761, 766, 771, 774, 776, 777, 779, 780, 797, 799, 800, 801], "beginassembl": 668, "beginn": [592, 654, 671], "behalf": [654, 659, 702, 733], "behav": [577, 582, 585, 586, 594, 598, 602, 617, 631, 634, 652, 655, 659, 661, 665, 670, 696, 701, 702, 706, 781], "behavior": [577, 582, 586, 592, 594, 598, 599, 600, 602, 603, 604, 608, 613, 620, 631, 651, 652, 655, 659, 661, 662, 664, 666, 668, 696, 697, 701, 702, 704, 706, 717, 719, 732, 734, 746, 747, 748, 751, 761, 768, 770, 771, 773, 794, 797, 799], "behaviour": [588, 594, 651, 676, 681, 702, 708, 766, 770], "behind": [599, 602, 603, 658, 659, 697, 698, 699, 702, 715, 734, 755, 769, 773, 779], "being": [49, 121, 143, 206, 239, 362, 427, 474, 540, 577, 580, 581, 582, 585, 586, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 606, 608, 613, 615, 620, 621, 623, 631, 637, 642, 651, 652, 654, 655, 656, 659, 661, 662, 665, 667, 669, 671, 674, 679, 680, 689, 690, 692, 694, 695, 696, 698, 700, 701, 702, 704, 706, 707, 713, 714, 715, 716, 717, 719, 722, 724, 726, 730, 732, 733, 734, 736, 739, 743, 746, 747, 748, 750, 751, 753, 755, 756, 757, 759, 761, 762, 766, 767, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 794, 795, 797, 798, 799, 801, 802], "belevich": 652, "belief": 600, "believ": [577, 600, 659, 696, 702, 717, 719, 734, 746, 751, 796, 797, 798], "bellow": 658, "belong": [582, 651, 655, 658, 661, 663, 676, 702, 714, 734, 747, 768, 776, 799], "below": [49, 55, 115, 143, 146, 202, 239, 240, 245, 304, 362, 363, 370, 471, 474, 475, 482, 576, 577, 578, 580, 581, 582, 584, 585, 586, 589, 591, 597, 598, 599, 601, 602, 603, 609, 613, 622, 624, 631, 637, 642, 646, 651, 652, 654, 655, 656, 659, 666, 671, 673, 679, 681, 687, 689, 691, 693, 694, 695, 700, 701, 702, 706, 708, 713, 714, 715, 717, 718, 719, 722, 727, 732, 733, 734, 735, 736, 738, 741, 744, 748, 749, 750, 751, 753, 755, 757, 759, 761, 766, 768, 770, 771, 772, 773, 774, 775, 776, 777, 780, 794, 796, 797, 798, 799, 800, 801], "benchmark": [597, 607, 652, 659, 670, 671, 694, 734, 735, 742, 744, 750, 751, 765, 766, 770], "benchspec": 765, "benderski": 652, "beneath": 752, "benefici": [595, 655, 677, 683, 702, 757, 767, 770], "benefit": [577, 585, 595, 602, 666, 668, 669, 675, 680, 691, 701, 702, 704, 706, 732, 735, 739, 750, 757, 780, 781, 782, 796, 800], "benign": 734, "benjamin": 668, "bentri": 759, "berkeley": 642, "bernstein": 750, "besid": [651, 670, 702, 736, 746, 751, 766, 771, 798], "bespok": 668, "best": [585, 588, 595, 598, 599, 601, 602, 611, 623, 631, 659, 661, 664, 668, 674, 683, 691, 697, 702, 706, 711, 732, 734, 741, 747, 750, 751, 752, 753, 755, 757, 769, 793, 794, 803], "better": [577, 586, 592, 599, 601, 602, 603, 606, 623, 631, 659, 661, 670, 675, 676, 681, 685, 687, 689, 691, 696, 697, 702, 703, 704, 706, 711, 712, 713, 714, 716, 717, 718, 732, 734, 736, 750, 751, 760, 765, 770, 773, 774, 775, 779, 794, 797, 799, 802], "bettor": 717, "between": [577, 580, 582, 584, 585, 586, 588, 589, 598, 599, 602, 603, 618, 620, 622, 630, 631, 636, 637, 641, 651, 655, 656, 658, 659, 660, 661, 662, 664, 668, 671, 674, 675, 676, 681, 690, 692, 694, 697, 699, 700, 701, 702, 703, 704, 706, 707, 708, 710, 713, 714, 715, 717, 718, 720, 722, 725, 729, 732, 733, 736, 739, 744, 745, 747, 750, 751, 753, 755, 756, 757, 759, 761, 764, 766, 767, 769, 771, 774, 776, 777, 793, 796, 797], "bewar": [668, 711], "beyl": [739, 748], "beylsdistinguish": 739, "beyond": [582, 598, 599, 650, 661, 666, 669, 679, 681, 702, 709, 710, 713, 717, 734, 748, 751, 752, 762], "bf16": [650, 702], "bf16x2": [8, 9], "bf16x4": 9, "bfd": [667, 686], "bfdname": 633, "bff": 734, "bfi": 702, "bfloat": [589, 702], "bfoo": 759, "bfs": 738, "bh": 762, "bias": 587, "bicub": 738, "bidirect": 734, "big": [587, 595, 599, 602, 611, 659, 666, 680, 689, 702, 734, 738, 744, 766, 769, 771, 776, 795, 798, 799], "bigblock": 611, "bigger": [577, 602, 655, 706, 777], "biggest": [599, 700], "bigmip": 633, "bigmsf": 726, "bikesh": 695, "bilinear": 738, "bin": [584, 604, 617, 651, 657, 660, 667, 671, 673, 674, 681, 686, 689, 691, 692, 693, 735, 736, 744, 762, 764, 766, 771, 772, 775], "binari": [582, 586, 589, 591, 593, 595, 596, 597, 599, 606, 607, 613, 614, 616, 617, 621, 624, 625, 628, 634, 636, 637, 638, 642, 646, 649, 651, 652, 653, 654, 656, 659, 660, 663, 667, 668, 671, 673, 686, 687, 691, 692, 693, 701, 704, 707, 712, 714, 715, 722, 725, 729, 731, 732, 734, 743, 744, 747, 750, 751, 759, 771, 775, 776, 795, 796, 797, 799, 800, 801, 802, 803, 805], "binary128": 702, "binary16": 702, "binary32": 702, "binary64": 702, "binary_nam": 646, "binaryexprast": [794, 795, 796, 797, 798, 799, 800, 801], "binaryoper": [602, 734], "binarypreced": [798, 799, 800, 801], "bind": [597, 602, 633, 634, 664, 681, 702, 717, 742, 757, 761, 771, 777, 794, 795, 796, 797, 798, 799, 800, 801], "bindex": 771, "bindir": 616, "binfmt": 671, "binfmt_misc": 671, "bininteg": 761, "binloc": 801, "binop": [581, 702, 794, 795, 796, 797, 798, 799, 800, 801], "binoppreced": [794, 795, 796, 797, 798, 799, 800, 801], "binoprh": [794, 795, 796, 797, 798, 799, 800, 801], "binoprr": 761, "binoprr_rf": 761, "binpath": 657, "binutil": [597, 653, 660, 671, 686, 688, 693], "bipartit": 701, "bisect": [670, 734, 742], "bisect_script": 736, "bison": 765, "bit": [19, 22, 23, 25, 26, 30, 31, 33, 42, 43, 44, 46, 49, 50, 51, 55, 57, 58, 61, 65, 66, 88, 100, 101, 115, 118, 120, 123, 124, 125, 126, 130, 131, 138, 139, 143, 144, 146, 148, 174, 202, 205, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 222, 227, 228, 229, 230, 232, 233, 234, 236, 239, 240, 241, 245, 251, 278, 304, 305, 310, 315, 337, 338, 346, 354, 361, 362, 363, 366, 367, 370, 372, 373, 374, 375, 376, 392, 396, 397, 424, 425, 426, 439, 440, 441, 459, 460, 462, 471, 474, 475, 478, 479, 482, 485, 486, 487, 488, 489, 505, 509, 510, 537, 538, 539, 552, 553, 554, 566, 567, 568, 570, 572, 576, 579, 580, 581, 584, 586, 588, 591, 597, 598, 599, 603, 615, 623, 652, 653, 655, 656, 659, 661, 662, 663, 667, 668, 669, 671, 673, 675, 676, 677, 680, 685, 688, 695, 698, 700, 703, 704, 706, 708, 712, 714, 715, 717, 721, 722, 726, 727, 729, 744, 747, 750, 753, 755, 757, 759, 760, 761, 762, 768, 771, 773, 776, 777, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "bitbucket": [736, 738], "bitcast": [585, 588, 603, 655, 661, 668, 669, 675, 676, 714, 718, 732, 768, 771], "bitcod": [593, 595, 599, 604, 607, 609, 613, 614, 616, 620, 621, 624, 626, 649, 659, 662, 671, 673, 686, 696, 702, 714, 715, 718, 732, 734, 742, 764, 773], "bitcoderead": 662, "bitcodewrit": [662, 734], "bite": 664, "bitfield": [586, 721, 722, 726, 776], "bitless": 729, "bitmap": 589, "bitmask": [580, 702, 721, 729], "bitmask_perm": 580, "bitpack": 766, "bitpattern": 702, "bitrecti": 760, "bits_0_7": 676, "bits_16_23": 676, "bits_24_31": 676, "bits_8_15": 676, "bitset": [704, 768, 771, 777], "bitsetcas": 777, "bitwidth": [589, 676, 702, 714, 755], "bitwis": [581, 599, 732, 761], "bjark": 652, "bjarn": 734, "bl": [603, 663, 762], "black": [681, 774], "blah": [602, 651, 704], "blame": [600, 733, 736], "blank": [602, 603, 613, 619, 637, 659, 709, 733, 752, 761, 794, 802, 803], "blanket": 717, "blarg": 734, "blatant": [748, 799], "bleed": [598, 670], "blend": 599, "blgp": [8, 9], "blind": 599, "bliss": [651, 652], "bloat": [602, 656, 687], "blob": [582, 589, 644, 702, 736, 744, 745], "block": [577, 582, 585, 591, 592, 594, 598, 599, 611, 615, 617, 620, 622, 623, 624, 634, 636, 637, 640, 641, 655, 658, 659, 661, 666, 668, 676, 677, 678, 681, 685, 694, 697, 700, 701, 703, 704, 706, 709, 713, 714, 715, 724, 725, 730, 739, 741, 742, 744, 745, 747, 748, 749, 750, 753, 759, 768, 770, 771, 794, 795, 796, 797, 798, 799, 800, 801], "blockaddress": [676, 702], "blockcodes": 745, "blockdim": 715, "blocker": [694, 744], "blockextractor": 681, "blockfrequencyinfo": [590, 742], "blockid": [589, 745], "blockidx": 715, "blockinfo_block": 745, "blocklen": 589, "blocklen_32": 589, "blockmapaddr": 726, "blocknam": 589, "blockscalartrait": 777, "blocksiz": 726, "blocksizex": 715, "blocksizey": 715, "blocksizez": 715, "blog": [716, 736, 751], "blogspot": 751, "bloom": 599, "blow": 704, "blr": 663, "blunt": 775, "blx": 663, "bmi2": 751, "bnextind": 702, "bnf": 582, "bo": 602, "board": [689, 693, 746, 748], "boat": [602, 739], "bob": [759, 760, 777], "bodi": [577, 582, 589, 593, 603, 623, 651, 655, 658, 659, 661, 697, 702, 704, 706, 708, 714, 717, 734, 739, 749, 751, 755, 762, 771, 773, 775, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "bodyexpr": [797, 798, 799, 800, 801], "bodyitem": 761, "bodysequ": 776, "bodyv": [799, 800, 801], "boehm": 668, "bogner": 684, "bogus": [773, 800], "boil": [588, 659, 695, 736, 797, 798], "boiler": [651, 734], "boilerpl": [651, 668, 695, 772], "bold": [709, 752], "bonair": 582, "bondhugula": 738, "bone": [753, 771, 779], "book": [602, 653, 654, 674, 703, 734, 773, 778], "bookkeep": [732, 734], "bool": [585, 586, 595, 597, 599, 602, 631, 651, 655, 678, 679, 695, 702, 704, 714, 716, 719, 734, 745, 750, 760, 771, 772, 773, 774, 775, 777, 795, 796, 797, 798, 799, 800, 801], "boolean": [582, 589, 597, 599, 602, 609, 655, 656, 701, 702, 729, 732, 734, 759, 760, 761, 766, 771, 797], "boolean128": 729, "boolean16": 729, "boolean32": 729, "boolean64": 729, "boolean8": 729, "boolordefault": 651, "booltmp": [795, 796, 797, 798, 799, 800, 801], "boost": 587, "bootstrap": [595, 671], "bootstrap_": [584, 595, 660], "bore": [603, 773], "boringssl": 704, "bork": 651, "borrow": [702, 734], "bot": [659, 670, 671, 736], "both": [17, 118, 203, 327, 428, 541, 577, 578, 580, 581, 582, 583, 584, 585, 586, 589, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 608, 613, 617, 626, 629, 631, 632, 636, 637, 651, 652, 653, 656, 658, 659, 661, 664, 666, 667, 668, 669, 675, 676, 680, 683, 685, 687, 692, 693, 694, 695, 697, 701, 702, 704, 706, 707, 712, 713, 714, 716, 717, 722, 726, 727, 731, 732, 734, 739, 741, 746, 747, 748, 749, 750, 751, 753, 755, 757, 759, 760, 761, 762, 766, 767, 770, 771, 773, 774, 775, 777, 779, 780, 794, 795, 796, 797, 799, 801, 802, 803], "bother": [716, 780, 799], "botsalgn": 738, "botsspar": 738, "bottom": [590, 611, 651, 678, 680, 702, 703, 706, 732, 733, 756, 761, 770, 771, 773, 780], "bou_fals": 651, "bou_tru": 651, "bou_unset": 651, "bougacha": [684, 748], "bound": [577, 581, 631, 659, 680, 700, 702, 708, 715, 734, 754, 755, 761, 771, 777], "bound_ctrl": [0, 1, 3, 4, 7, 8, 9, 582], "boundari": [586, 588, 589, 596, 599, 655, 687, 702, 706, 717, 732, 734, 751, 796], "bourn": [651, 671], "box": [599, 659, 681, 733, 750, 751, 774], "bp": [582, 753, 762], "bpf": [599, 671, 704, 739], "bpf_add": 599, "bpf_alu": 599, "bpf_alu64": 599, "bpf_and": 599, "bpf_arsh": 599, "bpf_b": 599, "bpf_call": 599, "bpf_class": 599, "bpf_div": 599, "bpf_dw": 599, "bpf_end": 599, "bpf_exit": 599, "bpf_h": 599, "bpf_imm": 599, "bpf_ja": 599, "bpf_jeq": 599, "bpf_jge": 599, "bpf_jgt": 599, "bpf_jmp": 599, "bpf_jne": 599, "bpf_jset": 599, "bpf_jsge": 599, "bpf_jsgt": 599, "bpf_k": 599, "bpf_ld": 599, "bpf_ldx": 599, "bpf_lsh": 599, "bpf_mem": 599, "bpf_mod": 599, "bpf_mov": 599, "bpf_mul": 599, "bpf_neg": 599, "bpf_op": 599, "bpf_or": 599, "bpf_rsh": 599, "bpf_st": 599, "bpf_stx": 599, "bpf_sub": 599, "bpf_w": 599, "bpf_x": 599, "bpf_xadd": 599, "bpf_xor": 599, "bpl": 762, "bptr": 702, "br": [589, 590, 655, 661, 664, 665, 681, 706, 713, 715, 750, 767, 797, 798, 799, 800, 801], "bra": 715, "brace": [603, 661, 702, 734, 761, 766], "bracket": [603, 652, 659, 661, 702, 708, 750, 761, 777], "bradburi": 739, "bradburyconcern": 739, "bradburytransit": 739, "brain": [589, 602, 702], "branch": [50, 144, 241, 367, 479, 577, 581, 596, 597, 599, 602, 617, 623, 631, 634, 653, 655, 656, 659, 660, 661, 664, 665, 666, 671, 674, 676, 697, 702, 706, 708, 719, 733, 734, 739, 741, 742, 755, 757, 768, 797, 798, 799, 800, 801], "branch_weight": [590, 591], "branchfold": [697, 771], "branchfunnel": 702, "branchless": 751, "branchprob": 591, "branchprobabilityinfo": 766, "brand": [772, 773], "brave": 794, "breadth": [611, 738, 803], "breagen": 738, "break": [577, 588, 591, 597, 599, 602, 651, 659, 661, 662, 663, 668, 688, 690, 694, 697, 698, 701, 702, 706, 710, 718, 731, 737, 743, 750, 755, 757, 761, 770, 771, 773, 793, 794, 795, 796, 797, 798, 799, 800, 801], "breakag": [659, 736, 757], "breakcriticaledg": 773, "breakdown": 592, "breakpoint": [582, 593, 657, 697, 702, 801, 803], "breg": 577, "brendan": 775, "breviti": [588, 715, 717], "brew": 734, "brian": 741, "brick": 714, "brief": [585, 597, 598, 602, 636, 651, 671, 714], "briefli": [656, 691, 714, 773], "brig": 582, "bring": [666, 668, 682, 701, 704, 745, 755, 779, 802], "broad": [651, 659, 668, 680, 734, 737, 796], "broadcast": [580, 599, 702, 703], "broader": 751, "broke": 659, "broken": [582, 588, 601, 608, 633, 645, 659, 664, 674, 688, 702, 734, 736, 739, 751, 755, 757, 761, 766, 771, 773, 778], "broker": 702, "brought": [714, 736, 748], "brows": [597, 667, 733, 736, 795], "browsabl": 597, "browser": [691, 733, 775], "brtarget": 771, "brtarget8": 771, "bruce": 734, "bruno": 739, "bsd": [613, 632, 659], "bsds": 671, "bsnork": 759, "bss": [582, 611, 632, 642, 644, 663], "bswap": 662, "bswap32r_bswap64r_movsx64rr32": 623, "bt": 657, "bt331": 738, "btver2": 631, "bucket": [630, 636, 640, 641, 724, 727, 729, 734, 750], "bucket_count": 750, "budget": 582, "buf": 745, "buf_data_format_10_10_10_2": 580, "buf_data_format_10_11_11": 580, "buf_data_format_11_11_10": 580, "buf_data_format_16": 580, "buf_data_format_16_16": 580, "buf_data_format_16_16_16_16": 580, "buf_data_format_2_10_10_10": 580, "buf_data_format_32": 580, "buf_data_format_32_32": 580, "buf_data_format_32_32_32": 580, "buf_data_format_32_32_32_32": 580, "buf_data_format_8": 580, "buf_data_format_8_8": 580, "buf_data_format_8_8_8_8": 580, "buf_data_format_invalid": 580, "buf_data_format_reserved_15": 580, "buf_fmt_10_10_10_2_sint": 580, "buf_fmt_10_10_10_2_snorm": 580, "buf_fmt_10_10_10_2_sscal": 580, "buf_fmt_10_10_10_2_uint": 580, "buf_fmt_10_10_10_2_unorm": 580, "buf_fmt_10_10_10_2_usc": 580, "buf_fmt_10_11_11_float": 580, "buf_fmt_10_11_11_sint": 580, "buf_fmt_10_11_11_snorm": 580, "buf_fmt_10_11_11_sscal": 580, "buf_fmt_10_11_11_uint": 580, "buf_fmt_10_11_11_unorm": 580, "buf_fmt_10_11_11_usc": 580, "buf_fmt_11_11_10_float": 580, "buf_fmt_11_11_10_sint": 580, "buf_fmt_11_11_10_snorm": 580, "buf_fmt_11_11_10_sscal": 580, "buf_fmt_11_11_10_uint": 580, "buf_fmt_11_11_10_unorm": 580, "buf_fmt_11_11_10_usc": 580, "buf_fmt_16_16_16_16_float": 580, "buf_fmt_16_16_16_16_sint": 580, "buf_fmt_16_16_16_16_snorm": 580, "buf_fmt_16_16_16_16_sscal": 580, "buf_fmt_16_16_16_16_uint": 580, "buf_fmt_16_16_16_16_unorm": 580, "buf_fmt_16_16_16_16_usc": 580, "buf_fmt_16_16_float": 580, "buf_fmt_16_16_sint": 580, "buf_fmt_16_16_snorm": 580, "buf_fmt_16_16_sscal": 580, "buf_fmt_16_16_uint": 580, "buf_fmt_16_16_unorm": 580, "buf_fmt_16_16_usc": 580, "buf_fmt_16_float": 580, "buf_fmt_16_sint": 580, "buf_fmt_16_snorm": 580, "buf_fmt_16_sscal": 580, "buf_fmt_16_uint": 580, "buf_fmt_16_unorm": 580, "buf_fmt_16_usc": 580, "buf_fmt_2_10_10_10_sint": 580, "buf_fmt_2_10_10_10_snorm": 580, "buf_fmt_2_10_10_10_sscal": 580, "buf_fmt_2_10_10_10_uint": 580, "buf_fmt_2_10_10_10_unorm": 580, "buf_fmt_2_10_10_10_usc": 580, "buf_fmt_32_32_32_32_float": 580, "buf_fmt_32_32_32_32_sint": 580, "buf_fmt_32_32_32_32_uint": 580, "buf_fmt_32_32_32_float": 580, "buf_fmt_32_32_32_sint": 580, "buf_fmt_32_32_32_uint": 580, "buf_fmt_32_32_float": 580, "buf_fmt_32_32_sint": 580, "buf_fmt_32_32_uint": 580, "buf_fmt_32_float": 580, "buf_fmt_32_sint": 580, "buf_fmt_32_uint": 580, "buf_fmt_8_8_8_8_sint": 580, "buf_fmt_8_8_8_8_snorm": 580, "buf_fmt_8_8_8_8_sscal": 580, "buf_fmt_8_8_8_8_uint": 580, "buf_fmt_8_8_8_8_unorm": 580, "buf_fmt_8_8_8_8_usc": 580, "buf_fmt_8_8_sint": 580, "buf_fmt_8_8_snorm": 580, "buf_fmt_8_8_sscal": 580, "buf_fmt_8_8_uint": 580, "buf_fmt_8_8_unorm": 580, "buf_fmt_8_8_usc": 580, "buf_fmt_8_sint": 580, "buf_fmt_8_snorm": 580, "buf_fmt_8_sscal": 580, "buf_fmt_8_uint": 580, "buf_fmt_8_unorm": 580, "buf_fmt_8_usc": 580, "buf_fmt_invalid": 580, "buf_num_format_float": 580, "buf_num_format_reserved_6": 580, "buf_num_format_sint": 580, "buf_num_format_snorm": 580, "buf_num_format_snorm_ogl": 580, "buf_num_format_ssc": 580, "buf_num_format_uint": 580, "buf_num_format_unorm": 580, "buf_num_format_usc": 580, "buffer": [23, 37, 38, 39, 40, 41, 63, 64, 88, 124, 133, 134, 135, 136, 137, 152, 153, 174, 209, 215, 216, 217, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 253, 254, 278, 345, 376, 410, 411, 447, 448, 449, 463, 464, 489, 522, 523, 560, 561, 562, 563, 571, 572, 596, 623, 631, 655, 661, 701, 702, 705, 722, 727, 729, 734, 743, 750, 759, 774, 776, 794, 795, 796, 797, 798, 799, 800, 801, 802], "buffer_atomic_add": [0, 2, 3, 4, 9], "buffer_atomic_add_f32": [8, 9], "buffer_atomic_add_f64": 9, "buffer_atomic_add_x2": [0, 2, 3, 4, 9], "buffer_atomic_and": [0, 2, 3, 4, 9], "buffer_atomic_and_x2": [0, 2, 3, 4, 9], "buffer_atomic_cmpswap": [0, 2, 3, 4, 9], "buffer_atomic_cmpswap_x2": [0, 2, 3, 4, 9], "buffer_atomic_dec": [0, 2, 3, 4, 9], "buffer_atomic_dec_x2": [0, 2, 3, 4, 9], "buffer_atomic_fcmpswap": [0, 2], "buffer_atomic_fcmpswap_x2": [0, 2], "buffer_atomic_fmax": [0, 2], "buffer_atomic_fmax_x2": [0, 2], "buffer_atomic_fmin": [0, 2], "buffer_atomic_fmin_x2": [0, 2], "buffer_atomic_inc": [0, 2, 3, 4, 9, 582], "buffer_atomic_inc_x2": [0, 2, 3, 4, 9], "buffer_atomic_max_f64": 9, "buffer_atomic_min_f64": 9, "buffer_atomic_or": [0, 2, 3, 4, 9], "buffer_atomic_or_x2": [0, 2, 3, 4, 9], "buffer_atomic_pk_add_f16": [8, 9], "buffer_atomic_smax": [0, 2, 3, 4, 9], "buffer_atomic_smax_x2": [0, 2, 3, 4, 9], "buffer_atomic_smin": [0, 2, 3, 4, 9], "buffer_atomic_smin_x2": [0, 2, 3, 4, 9], "buffer_atomic_sub": [0, 2, 3, 4, 9], "buffer_atomic_sub_x2": [0, 2, 3, 4, 9], "buffer_atomic_swap": [0, 2, 3, 4, 9], "buffer_atomic_swap_x2": [0, 2, 3, 4, 9], "buffer_atomic_umax": [0, 2, 3, 4, 9], "buffer_atomic_umax_x2": [0, 2, 3, 4, 9], "buffer_atomic_umin": [0, 2, 3, 4, 9], "buffer_atomic_umin_x2": [0, 2, 3, 4, 9], "buffer_atomic_xor": [0, 2, 3, 4, 9], "buffer_atomic_xor_x2": [0, 2, 3, 4, 9], "buffer_gl": 582, "buffer_gl0_inv": [0, 582], "buffer_gl1_inv": [0, 582], "buffer_invl2": [9, 582], "buffer_load": 582, "buffer_load_dword": [0, 2, 3, 4, 9, 582], "buffer_load_dwordx2": [0, 2, 3, 4, 9], "buffer_load_dwordx3": [0, 2, 3, 4, 9], "buffer_load_dwordx4": [0, 2, 3, 4, 9], "buffer_load_format_d16_hi_x": [4, 9], "buffer_load_format_d16_x": [0, 3, 4, 9], "buffer_load_format_d16_xi": [0, 3, 4, 9], "buffer_load_format_d16_xyz": [0, 3, 4, 9], "buffer_load_format_d16_xyzw": [0, 3, 4, 9], "buffer_load_format_x": [0, 2, 3, 4, 9], "buffer_load_format_xi": [0, 2, 3, 4, 9], "buffer_load_format_xyz": [0, 2, 3, 4, 9], "buffer_load_format_xyzw": [0, 2, 3, 4, 9], "buffer_load_sbyt": [0, 2, 3, 4, 9], "buffer_load_sbyte_d16": [0, 4, 9], "buffer_load_sbyte_d16_hi": [0, 4, 9], "buffer_load_short_d16": [0, 4, 9], "buffer_load_short_d16_hi": [0, 4, 9], "buffer_load_sshort": [0, 2, 3, 4, 9], "buffer_load_ubyt": [0, 2, 3, 4, 9], "buffer_load_ubyte_d16": [0, 4, 9], "buffer_load_ubyte_d16_hi": [0, 4, 9], "buffer_load_ushort": [0, 2, 3, 4, 9], "buffer_s": 776, "buffer_store_byt": [0, 2, 3, 4, 9], "buffer_store_byte_d16_hi": [0, 4, 9], "buffer_store_dword": [0, 2, 3, 4, 9], "buffer_store_dwordx2": [0, 2, 3, 4, 9], "buffer_store_dwordx3": [0, 2, 3, 4, 9], "buffer_store_dwordx4": [0, 2, 3, 4, 9, 579, 582], "buffer_store_format_d16_hi_x": [4, 9], "buffer_store_format_d16_x": [0, 3, 4, 9], "buffer_store_format_d16_xi": [0, 3, 4, 9], "buffer_store_format_d16_xyz": [0, 3, 4, 9], "buffer_store_format_d16_xyzw": [0, 3, 4, 9], "buffer_store_format_x": [0, 2, 3, 4, 9], "buffer_store_format_xi": [0, 2, 3, 4, 9, 582], "buffer_store_format_xyz": [0, 2, 3, 4, 9], "buffer_store_format_xyzw": [0, 2, 3, 4, 9], "buffer_store_lds_dword": [3, 4, 9], "buffer_store_short": [0, 2, 3, 4, 9], "buffer_store_short_d16_hi": [0, 4, 9], "buffer_wbinvl1": [2, 3, 4, 9, 582], "buffer_wbinvl1_vol": [2, 3, 4, 9, 582], "buffer_wbl2": [9, 582], "bug": [581, 582, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 624, 631, 657, 659, 666, 670, 671, 674, 681, 687, 693, 694, 701, 702, 703, 704, 708, 712, 714, 732, 733, 734, 736, 737, 739, 742, 748, 754, 762, 766, 795, 799, 802], "buggi": 696, "buggy_cod": 687, "bugpoint": [607, 624, 659, 670, 671, 696, 719, 742, 773], "bugzilla": [592, 659, 667, 670, 694, 704, 736, 744, 748, 755, 766], "buid": 655, "build": [582, 585, 589, 597, 598, 599, 601, 602, 606, 608, 609, 613, 616, 617, 627, 649, 650, 651, 652, 654, 655, 657, 658, 659, 661, 668, 670, 673, 674, 681, 687, 701, 702, 705, 716, 717, 719, 722, 731, 732, 741, 744, 747, 750, 751, 757, 759, 760, 761, 762, 764, 765, 766, 768, 771, 774, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "build_arch": 735, "build_config": 673, "build_dir": 736, "build_docker_imag": 660, "build_mod": 673, "build_shared_lib": [595, 597], "buildattribut": 692, "buildbot": [601, 608, 659, 667, 670, 694, 736, 737, 757, 766], "builddir": 688, "builder": [658, 659, 670, 671, 698, 717, 718, 734, 737, 740, 773, 781, 794, 795, 796, 797, 798, 799, 800, 801], "buildingajit": 671, "buildmi": 599, "buildmod": 766, "buildmodul": 779, "buildnumb": 722, "buildpermoduledefaultpipelin": 716, "built": [584, 589, 595, 597, 616, 617, 619, 636, 646, 651, 654, 659, 660, 661, 666, 667, 669, 671, 673, 674, 680, 685, 686, 688, 690, 691, 692, 693, 695, 701, 702, 703, 704, 713, 717, 722, 729, 730, 732, 734, 735, 736, 737, 741, 743, 747, 750, 751, 759, 760, 762, 764, 765, 766, 771, 775, 776, 794, 795, 796, 797, 798, 799, 801, 802, 803], "builtin": [586, 589, 608, 650, 702, 715, 734, 736, 740, 769, 773, 798, 799, 800, 801], "bulk": [599, 659, 701, 712, 734, 799], "bulki": 582, "bullet": 695, "bump": [668, 694, 734, 743, 749], "bunch": [584, 598, 664, 734, 765, 796, 798], "bundl": [606, 622, 655, 701, 755, 774], "bundler": 582, "bunzip2": 671, "bur": 703, "burden": [659, 702, 713, 751, 757], "burg": 703, "burgess": [713, 748], "burk": 738, "burn": 689, "burr": 611, "busi": [659, 748], "busiest": 733, "but": [30, 31, 61, 121, 130, 131, 148, 206, 219, 220, 251, 372, 427, 439, 440, 485, 540, 552, 553, 577, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 608, 611, 615, 616, 617, 619, 622, 623, 626, 630, 631, 633, 634, 636, 637, 645, 646, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 726, 727, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 744, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 770, 771, 773, 774, 775, 776, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "button": [706, 733], "buy": [689, 748], "bvalu": 759, "bw": 663, "bwave": 738, "bwaves_": 738, "bwaves_r": 738, "bx": 762, "by": [14, 17, 24, 27, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 55, 64, 98, 100, 118, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 153, 187, 203, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 239, 241, 245, 254, 289, 305, 310, 315, 324, 327, 336, 337, 338, 353, 354, 361, 362, 367, 370, 377, 422, 425, 428, 441, 442, 447, 448, 449, 459, 460, 461, 462, 463, 464, 474, 479, 482, 490, 535, 538, 541, 549, 554, 555, 556, 557, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 641, 644, 645, 646, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 726, 727, 729, 730, 731, 733, 734, 735, 736, 737, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804], "by_valu": 582, "byarg": 702, "bypass": [580, 582, 631, 652, 701, 702], "byproduct": 680, "byref": [589, 702], "byte": [56, 58, 147, 148, 246, 247, 248, 342, 395, 396, 508, 509, 577, 580, 581, 582, 585, 586, 588, 589, 599, 606, 615, 622, 630, 631, 634, 635, 640, 641, 644, 655, 656, 662, 663, 669, 676, 680, 687, 701, 702, 704, 708, 712, 718, 720, 721, 722, 724, 725, 726, 727, 729, 730, 734, 745, 747, 749, 750, 753, 755, 761, 768, 771, 776], "byte_0": [580, 582], "byte_1": [580, 582], "byte_2": [580, 582], "byte_3": 580, "bytearray": 702, "bytecod": [589, 596], "byteswap": 662, "byval": [589, 599, 702, 718, 743], "byvalu": 582, "bz2": 671, "bzero": 676, "bzip2": 671, "bzoo": 759, "c1": [582, 706, 761, 768], "c11": [586, 652, 722, 725, 750], "c11bytes": [722, 725], "c11lineinfo": 725, "c11size": 725, "c13": [636, 722, 725], "c13bytes": [722, 725], "c13lineinfo": 725, "c13size": 725, "c17": 737, "c1_1": 637, "c1_2": 637, "c1_n": 637, "c1_u_1": 637, "c1_u_i": 637, "c1x": 702, "c2": [582, 706, 761, 768], "c2_1": 637, "c2_2": 637, "c2_n": 637, "c2_u_": 637, "c2_u_2": 637, "c2_v_1": 637, "c2_v_2": 637, "c2_v_i": 637, "c2_v_t": 637, "c3": 706, "c4": 706, "c5": 631, "c5y977rlqpw": 601, "c89": 602, "c9": 656, "c99": 702, "c_ctor_bas": 603, "c_str": [651, 715, 734, 793, 794, 795, 796, 797, 798, 799, 800, 801], "cach": [580, 582, 584, 585, 586, 595, 598, 599, 606, 623, 631, 677, 689, 702, 707, 713, 716, 717, 732, 734, 747, 750, 751, 753, 764, 773, 801], "cachefil": 764, "cactubssn": 738, "cactubssn_r": 738, "caf": 711, "caico": 582, "calcul": [577, 582, 585, 590, 591, 599, 607, 617, 631, 661, 669, 676, 701, 702, 703, 716, 732, 734, 750, 761, 766, 771, 773, 797], "calcvalu": 761, "calendar": 670, "call": [584, 586, 588, 589, 590, 591, 593, 595, 596, 597, 598, 603, 608, 611, 615, 617, 624, 633, 637, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 665, 666, 668, 671, 676, 680, 681, 682, 691, 697, 698, 701, 703, 704, 705, 706, 707, 708, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 727, 731, 733, 735, 736, 737, 741, 743, 747, 748, 749, 750, 753, 754, 755, 756, 759, 760, 761, 765, 766, 768, 773, 774, 775, 776, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "call2": 603, "call32m": 761, "call32r": 761, "call64pcrel32": 708, "call_branch_weight": 591, "call_convent": 582, "call_site_num": 661, "callabl": [602, 701, 702, 715, 717, 782, 795], "callahan": 741, "callback": [585, 599, 651, 655, 668, 704, 716, 734, 753, 771, 779, 781], "callbackvh": 734, "callbas": 734, "callbr": 734, "callcount": 734, "calle": [577, 588, 599, 652, 655, 664, 701, 704, 714, 732, 751, 753, 761, 768, 771, 773, 794, 795, 796, 797, 798, 799, 800, 801], "calledcount": 593, "calledgekind": 701, "callee_ctxt": 655, "calleef": [795, 796, 797, 798, 799, 800, 801], "caller": [577, 582, 588, 591, 593, 599, 646, 652, 655, 661, 663, 664, 668, 702, 704, 714, 732, 734, 749, 751, 771, 773, 797, 798], "caller_context": 655, "caller_pc": 704, "callexprast": [794, 795, 796, 797, 798, 799, 800, 801], "callgraph": [640, 641], "callgraphscc": [719, 773], "callgraphsccpass": 719, "callingconv": [589, 650, 771], "callinst": 734, "calllow": [677, 682], "callloweringinfo": 775, "callon": 734, "callpcrel32": 761, "callq": [749, 751, 753, 755], "callseq_end": 755, "callseq_start": 755, "callsit": [591, 702, 708, 751, 753, 755], "callsitesforfunct": 701, "callthroughmgr": 717, "calltmp": [795, 796, 797, 798, 799, 800, 801], "calltmp1": [795, 797], "calltmp2": 796, "calltmp6": 799, "calltwo": 734, "calm": 799, "cam4_": 738, "cam4_r": 738, "came": [584, 632, 661, 751, 797, 802], "camel": [602, 739], "camelback": 739, "camelcas": 739, "camera": 711, "can": [577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 597, 598, 599, 600, 602, 603, 604, 606, 608, 609, 611, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 629, 631, 633, 634, 636, 637, 639, 643, 645, 646, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 667, 668, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 724, 726, 727, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 750, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "canadian": 671, "canari": [687, 702], "cancel": 661, "canconstantfoldcallto": 662, "candid": [592, 659, 660, 665, 702, 708, 741, 744, 757], "canfoldasload": [761, 762], "canlosslesslybitcastto": 714, "cannot": [41, 137, 231, 449, 563, 577, 578, 580, 581, 582, 585, 586, 588, 591, 592, 593, 597, 598, 599, 600, 602, 603, 604, 613, 617, 618, 631, 637, 645, 646, 651, 652, 655, 656, 659, 661, 663, 668, 669, 673, 676, 678, 692, 697, 700, 702, 707, 713, 716, 726, 727, 732, 733, 734, 736, 737, 739, 746, 748, 750, 751, 756, 757, 759, 761, 764, 767, 770, 771, 773, 779, 795, 802], "canon": [577, 582, 588, 661, 666, 702, 717, 732, 734, 736, 750, 751, 769], "canonic": [599, 603, 676, 734, 773], "canonicalis": 588, "canreserveresourc": 599, "cantfail": [779, 780, 781, 782], "canthrow": 743, "cap": 602, "capabl": [585, 599, 650, 651, 652, 653, 658, 662, 671, 687, 702, 705, 712, 713, 715, 727, 734, 740, 745, 759, 771, 773, 795, 796, 798, 799, 802], "capac": [724, 734], "capit": [602, 659, 739], "capston": 704, "captur": [577, 589, 593, 595, 599, 603, 651, 662, 678, 739, 741, 750, 751, 753, 766, 771, 774, 776, 794, 795, 796, 797, 798, 799, 800, 801, 802], "card": [689, 755], "care": [577, 582, 583, 585, 586, 599, 600, 602, 603, 652, 659, 666, 667, 668, 671, 687, 697, 701, 702, 704, 708, 710, 713, 716, 717, 718, 734, 736, 745, 750, 751, 756, 757, 762, 765, 771, 773, 799, 802], "careless": 602, "caret": [617, 702], "carol": 759, "carri": [631, 658, 669, 676, 679, 702, 710, 734, 748, 761, 767], "carrizo": 582, "carruth": [739, 751], "carruthacronym": 739, "carruthcamelback": 739, "carruthdistinguish": 739, "carruthfunct": 739, "carruthinconsist": 739, "carruthlow": 739, "carv": 747, "cascad": 697, "case": [577, 578, 580, 581, 582, 583, 585, 586, 588, 589, 591, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 607, 608, 613, 616, 618, 622, 624, 631, 632, 633, 646, 649, 651, 652, 654, 655, 656, 660, 661, 662, 664, 665, 666, 668, 669, 671, 676, 685, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 716, 718, 719, 721, 722, 727, 729, 732, 734, 735, 736, 738, 739, 742, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 765, 766, 767, 768, 770, 771, 773, 777, 779, 780, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "case_branch_weight": 591, "cassert": [602, 715, 796, 797, 798, 799, 800], "cast": [577, 588, 596, 602, 651, 676, 695, 702, 714, 717, 718, 741, 755, 760, 761, 762, 768, 796, 797, 798, 799, 801, 802], "cast210": [677, 702], "cast_or_nul": 734, "castinst": 734, "casual": 659, "casus": 690, "cat": [618, 644, 646, 651, 668, 671, 687, 701, 704, 766, 772], "catapult": 774, "catastroph": 751, "catch": [651, 657, 659, 669, 687, 692, 702, 703, 734, 751, 795, 796], "catch3": 661, "catchpad": 661, "catchret": 661, "catchswitch": 661, "categor": [651, 706, 732, 759, 771], "categori": [602, 622, 627, 636, 696, 702, 732, 734, 750, 757, 759, 766, 771, 776], "cater": [757, 759], "caught": [602, 661, 687, 702], "caus": [577, 582, 585, 586, 588, 592, 593, 597, 599, 601, 602, 603, 604, 606, 608, 611, 615, 617, 620, 626, 631, 633, 637, 646, 649, 651, 659, 662, 663, 664, 668, 671, 674, 678, 679, 680, 681, 686, 687, 691, 692, 696, 701, 702, 704, 707, 716, 718, 719, 732, 734, 735, 736, 747, 748, 750, 751, 754, 755, 756, 757, 759, 761, 766, 768, 770, 773, 777, 794, 795, 797, 798, 799, 801], "caution": [586, 755], "caveat": [594, 652, 702, 801], "cayman": 582, "cb": [631, 642, 656, 734], "cbar": 759, "cbaz": 759, "cbe": 696, "cbpf": 599, "cbsz": [8, 9], "cbtw": 599, "cbw": 599, "cc": [582, 599, 646, 654, 671, 686, 693, 694, 702, 704, 708, 733, 744, 759, 775], "cc_sparc32": 771, "ccach": 597, "ccache_dir": 597, "ccache_maxs": 597, "ccassigntoreg": 771, "ccassigntoregwithshadow": 771, "ccassigntostack": 771, "ccc": [589, 702], "ccdelegateto": 771, "ccif": 771, "ccifcc": 771, "ccifinreg": 771, "ccifnest": 771, "ccifnotvararg": 771, "cciftyp": 771, "ccmake": 597, "ccomment": 761, "cconv": 702, "ccpassbyv": 771, "ccpromotetotyp": 771, "ccr": 675, "cctool": [597, 627], "cctype": [794, 795, 796, 797, 798, 799, 800, 801], "cd": [597, 671, 673, 686, 690, 696, 736, 747, 750, 764, 765, 775], "cd8_eltsiz": 761, "cd8_form": 761, "cd8_scale": 761, "cdbg_user": 582, "cde": 650, "cdecl": 702, "cdna1": 582, "ce": 656, "cedar": 582, "cee": 734, "ceil": [582, 726, 770], "cell": 771, "center": [734, 801], "centerpoint": 659, "central": [661, 750, 756], "centri": 759, "centric": 702, "cenum": 759, "cerr": [715, 775], "certain": [577, 582, 585, 586, 588, 597, 599, 601, 603, 608, 613, 623, 631, 644, 651, 655, 656, 662, 663, 666, 668, 671, 676, 681, 697, 701, 702, 704, 706, 716, 720, 726, 727, 731, 734, 736, 737, 747, 751, 753, 759, 761, 773, 774, 775, 796, 798, 799, 800, 802], "cf": 656, "cfa": [582, 661], "cfd": 738, "cfe": [659, 671, 711, 733, 736, 741, 757], "cfg": [599, 608, 661, 673, 697, 700, 702, 706, 714, 716, 719, 734, 741, 766, 770, 771, 773, 797], "cfganalys": 716, "cfgs": 734, "cfgsimplifi": 734, "cfguard_checkcc": [589, 702], "cfi": [577, 596, 661, 701, 703, 708, 751], "cfi_instruct": 708, "cfi_offset": 708, "cflag": [704, 735], "cfoo": 759, "cfrac": 765, "cg": [640, 641, 716, 773], "cg_profil": 663, "cgft_objectfil": 800, "cgo": [652, 741], "cgp_from": 663, "cgp_to": 663, "cgp_weight": 663, "cgpm": 716, "cgroup": 660, "cgscc": 716, "cgsccanalysismanag": 716, "cgsccpassmanag": 716, "ch": 762, "ch9": 801, "chain": [577, 583, 584, 591, 597, 599, 602, 608, 622, 631, 655, 675, 678, 702, 703, 705, 706, 713, 714, 732, 750, 756, 759, 767, 771, 773, 799], "challeng": [659, 685, 702, 751, 755, 798], "champion": 748, "chanc": [591, 655, 659, 666, 701, 702, 707, 718, 762, 774, 777, 803], "chandler": [739, 751], "chandlerc": [733, 751], "chang": [580, 581, 585, 588, 589, 591, 592, 593, 595, 597, 599, 600, 601, 602, 603, 604, 608, 614, 616, 620, 622, 625, 631, 633, 650, 651, 652, 654, 655, 656, 658, 662, 664, 666, 667, 668, 669, 670, 673, 674, 676, 677, 680, 687, 688, 694, 695, 697, 698, 700, 701, 702, 703, 705, 706, 707, 708, 712, 714, 715, 716, 717, 718, 719, 722, 727, 731, 732, 737, 739, 744, 745, 751, 753, 755, 757, 758, 759, 763, 764, 765, 767, 770, 771, 773, 776, 777, 779, 780, 781, 782, 796, 797, 798, 799, 800, 801], "changebit": 704, "changebyt": 704, "changelog": 704, "channel": [21, 122, 207, 472, 580, 582, 600, 654, 670, 701, 751], "chao": 584, "chapter": [577, 654, 714, 778, 793, 802, 803], "char": [582, 585, 602, 650, 651, 655, 656, 657, 669, 687, 695, 701, 702, 704, 705, 715, 717, 722, 726, 729, 734, 747, 750, 751, 759, 770, 771, 773, 774, 775, 779, 794, 795, 796, 797, 798, 799, 800, 801], "char16_t": 729, "char32_t": 729, "char6": 589, "charact": [577, 580, 582, 599, 608, 613, 617, 618, 631, 632, 633, 634, 644, 645, 650, 651, 656, 702, 708, 710, 734, 750, 759, 761, 766, 793, 794, 795, 796, 797, 798, 799, 800, 801], "character": [623, 702, 751], "character16": 729, "character32": 729, "characterist": [63, 152, 253, 345, 411, 523, 577, 599, 623, 662, 702, 722, 734, 741, 771, 781, 805], "charg": [599, 711, 748], "charscalarti": 702, "chart": 770, "charter": 659, "chase": 696, "chat": [600, 659], "cheap": [586, 602, 659, 702, 734], "cheaper": [665, 676, 734, 751], "cheapest": 683, "cheapli": [713, 751], "cheat": 781, "check": [577, 581, 582, 584, 586, 593, 596, 597, 598, 599, 602, 604, 606, 608, 623, 631, 650, 651, 655, 656, 659, 660, 661, 666, 667, 668, 669, 671, 673, 674, 676, 678, 681, 686, 688, 689, 691, 692, 693, 694, 695, 696, 697, 701, 704, 705, 706, 708, 709, 714, 715, 716, 717, 719, 733, 736, 741, 742, 743, 744, 747, 749, 750, 753, 754, 755, 757, 760, 764, 765, 766, 767, 768, 771, 772, 773, 775, 777, 779, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "checkcudaerror": 715, "checkcustomhazard": 631, "checker": [650, 669, 739, 759], "checkformat": 734, "checkout": [597, 660, 674, 690, 691, 694, 731, 743, 744], "checkpoint": 661, "checksum": [577, 663, 702, 704, 747], "checksumkind": [663, 702], "chees": 602, "cherri": 694, "child": [661, 695, 702, 704, 734, 798], "child_begin": 734, "child_end": 734, "child_iter": 734, "childidx": 734, "childorerr": 734, "children": [622, 695, 720, 734], "childvalid": 734, "chill": 659, "chip": [582, 599, 609, 611, 675, 689, 693, 715, 766, 771], "chmod": 671, "choco": 673, "chocolatey": 673, "choic": [577, 601, 602, 609, 621, 662, 675, 678, 689, 702, 704, 733, 734, 747, 753, 755, 793, 797, 802], "choos": [577, 582, 588, 597, 599, 600, 604, 611, 623, 634, 651, 652, 659, 668, 687, 688, 692, 693, 696, 699, 702, 706, 711, 713, 717, 733, 734, 737, 739, 746, 750, 764, 771, 773, 774, 775, 794, 796, 797], "chop": 750, "chose": [744, 751], "chosen": [588, 599, 602, 608, 668, 687, 702, 755, 761, 774], "chris": [599, 652, 659, 736, 739, 773], "chriscox": 738, "chrome": 774, "chromium": [687, 694, 748], "chronolog": [736, 739], "chunk": [588, 589, 599, 602, 636, 701, 704, 732, 747, 749, 750], "churn": 781, "ci": [582, 733], "cie": [577, 582, 703], "cie_id": 577, "cie_point": 577, "cimag": 798, "cin": 664, "cindex": 771, "cint2006": 764, "circl": 695, "circt": 670, "circuit": 798, "circular": [577, 602, 774], "circumst": [592, 603, 661, 701, 702, 706, 734, 748, 750, 771, 773, 796, 799], "circumv": 651, "cis": 587, "cis501": 587, "cite": 739, "citi": [670, 711], "citizen": 734, "cl": [722, 750, 762, 766, 773], "claim": [586, 659, 776], "clamp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 582, 702], "clampnumel": 680, "clampscalar": 680, "clang": [577, 586, 591, 594, 595, 596, 597, 601, 602, 603, 606, 607, 608, 609, 617, 619, 631, 634, 646, 654, 656, 657, 659, 660, 661, 664, 666, 669, 670, 673, 674, 686, 687, 690, 694, 695, 696, 697, 701, 702, 703, 704, 705, 715, 716, 717, 718, 719, 730, 733, 734, 735, 736, 739, 740, 743, 744, 745, 748, 750, 760, 761, 762, 764, 766, 767, 768, 770, 773, 774, 775, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "clang_attr_arg_context_list": 759, "clang_attr_identifier_arg_list": 759, "clang_bootstrap_cmake_arg": 584, "clang_cc1": [603, 766], "clang_cl": 766, "clang_cpp": 766, "clang_enable_bootstrap": 584, "clangxx": 766, "clarif": [602, 653, 659, 776], "clarifi": [577, 750], "clariti": [702, 746, 797], "clase": 650, "clash": [602, 702, 711, 782], "class": [588, 589, 600, 603, 623, 631, 633, 636, 645, 650, 654, 658, 659, 661, 662, 667, 668, 671, 672, 675, 676, 678, 680, 681, 682, 683, 690, 698, 700, 701, 703, 707, 710, 712, 714, 717, 719, 721, 722, 727, 729, 731, 732, 739, 740, 741, 742, 743, 747, 750, 751, 756, 759, 762, 768, 772, 774, 777, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801, 802], "classic": [594, 599, 602, 687, 732, 734, 751], "classid": 761, "classif": [702, 754, 756], "classifi": [585, 594, 702], "classnam": [650, 722, 760], "classof": 759, "classpair": 760, "classrec": 760, "classref": 761, "claus": [599, 659, 661, 702, 734, 761], "clean": [599, 602, 604, 608, 659, 661, 671, 678, 691, 696, 702, 705, 715, 718, 732, 733, 734, 736, 751, 773], "cleaner": [602, 651, 734], "cleanest": 577, "cleanup": [655, 659, 702, 703, 717, 732, 750, 781, 782, 796, 797], "cleanuppad": [655, 661], "cleanupret": [655, 661], "clear": [577, 592, 601, 602, 603, 649, 659, 668, 669, 694, 697, 700, 702, 706, 713, 716, 721, 722, 726, 729, 734, 736, 739, 748, 750, 751, 753, 757, 760, 761, 774, 794, 795, 796, 797, 798, 799, 800, 801], "clearer": 602, "cleargraphattr": 734, "clearresourc": 599, "clenumv": 651, "clenumvaln": [651, 760], "clever": [588, 695, 802], "click": [659, 673, 733, 752], "client": [582, 589, 597, 599, 602, 651, 659, 668, 695, 701, 707, 710, 717, 734, 736, 742, 745, 750, 753, 764, 768, 771, 773, 779, 780, 796, 799], "cling": 717, "clip": 657, "clobber": [577, 582, 585, 708, 751, 761], "clock": [631, 702, 760, 773], "clone": [597, 608, 659, 671, 673, 686, 734, 741, 759, 764, 765, 773, 799], "close": [595, 599, 602, 603, 655, 669, 670, 671, 680, 694, 701, 702, 703, 704, 733, 734, 744, 751, 757, 773, 794], "close_fd_mask": 704, "closer": [669, 703], "closest": [577, 702, 801], "closur": 802, "clr": [722, 755], "clrb": 599, "clrl": 599, "clrq": 599, "clrw": 599, "cluster": [623, 675, 681], "cluster_id": 623, "clutter": [594, 602, 659], "cm": 739, "cmake": [584, 587, 659, 660, 667, 673, 674, 686, 687, 688, 689, 709, 716, 734, 736, 738, 747, 752, 757, 766, 769, 771, 772, 775], "cmake_": [595, 597, 598], "cmake_asm_compiler_target": 692, "cmake_asm_flag": 692, "cmake_build_typ": [595, 597, 598, 671, 764], "cmake_c_compil": [671, 764], "cmake_c_compiler_external_toolchain": 692, "cmake_c_compiler_target": 692, "cmake_c_flag": [692, 764], "cmake_c_flags_optim": 764, "cmake_cflag": 692, "cmake_cxx_compil": 671, "cmake_cxx_flags_releas": 671, "cmake_cxx_flags_relwithdebinfo": 671, "cmake_cxx_standard": 597, "cmake_fortran_compil": 764, "cmake_instal": 597, "cmake_install_prefix": [584, 597, 671, 673, 693], "cmake_minimum_requir": [597, 598], "cmake_module_path": 597, "cmake_parse_argu": 598, "cmake_sysroot": 692, "cmake_toolchain_fil": [597, 671], "cmake_try_compile_target": 692, "cmake_verbose_makefil": 584, "cmakecach": [597, 598, 775], "cmakefil": [671, 764], "cmakelist": [584, 597, 598, 631, 671, 694, 760, 764, 771, 772, 773], "cmakeparseargu": 598, "cmd": 587, "cmdsetuserdata": 582, "cmov": 751, "cmovcc": 751, "cmoveq": 751, "cmovneq": 751, "cmp": [599, 634, 702, 732, 734, 751], "cmp32ri8": 599, "cmpb": 663, "cmpflag": 714, "cmpinst": [708, 734], "cmpname": 759, "cmpnumber": 714, "cmpq": [663, 749], "cmpswap": 580, "cmptmp": [795, 796, 797, 798, 799, 800, 801], "cmpxchg": [586, 676, 743], "cnt": [115, 202, 304, 471, 576], "co": [711, 736, 768], "co_await": 655, "coalesc": [599, 611, 620, 734], "coars": [582, 608], "cocoa": 702, "code": [55, 102, 146, 189, 245, 291, 370, 429, 482, 542, 577, 581, 583, 584, 585, 586, 588, 589, 591, 592, 594, 595, 596, 597, 598, 603, 604, 607, 608, 609, 612, 617, 618, 625, 627, 630, 632, 633, 634, 635, 636, 638, 640, 641, 642, 644, 645, 651, 654, 655, 658, 660, 662, 663, 665, 666, 667, 669, 670, 673, 675, 678, 680, 681, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 697, 698, 700, 701, 703, 704, 705, 706, 709, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 730, 731, 736, 737, 738, 741, 742, 743, 744, 745, 748, 749, 751, 753, 754, 755, 757, 759, 760, 761, 762, 764, 765, 766, 768, 770, 774, 775, 777, 793, 802, 803, 804], "code_alignment_factor": [577, 582], "code_object_uri": 582, "code_own": [654, 659, 733], "codebas": [602, 659, 677, 718, 733, 748], "codeblock": 668, "codeemittergen": 759, "codegen": [582, 583, 599, 603, 604, 650, 652, 655, 662, 665, 666, 668, 671, 679, 681, 697, 702, 705, 708, 715, 716, 718, 759, 766, 769, 771, 772, 773, 782, 795, 796, 797, 798, 799, 800, 801], "codegener": 696, "codegenopt": 719, "codegenschedmodel": 771, "codeid": 745, "codepath": [586, 734], "codeprop": 582, "coder": 736, "coderecti": 760, "codes": [761, 762], "codeview": [636, 641, 722, 727], "codeviewdebug": 750, "coding_style_cpp": 739, "codlay": 781, "coerc": [655, 714], "coerce_offset0": 603, "coexist": 757, "coff": [589, 599, 632, 633, 653, 670, 673, 690, 701, 702, 717, 722, 727, 743], "cofflinkgraphbuild": 701, "cohen": 756, "coher": [580, 582, 702], "coincid": 767, "col": [702, 801], "cold": [589, 590, 637, 666, 702], "coldcc": [589, 702, 755], "colder": 590, "colfield": 699, "collabor": [577, 659, 736], "collaps": [702, 706, 751], "collat": 701, "colleagu": 600, "collect": [577, 585, 590, 591, 597, 617, 622, 631, 650, 659, 666, 672, 675, 687, 691, 698, 701, 703, 704, 705, 707, 717, 729, 732, 734, 736, 738, 741, 745, 751, 753, 754, 759, 760, 761, 764, 765, 770, 775, 803], "collect_and_build_with_pgo": 691, "collector": [589, 650, 664, 703, 755, 802], "collis": [602, 702, 734, 736, 750], "colloqui": 702, "colombet": 684, "colon": [582, 595, 597, 598, 603, 687, 747, 759, 761, 766, 777], "color": [97, 186, 288, 534, 582, 599, 603, 617, 622, 627, 636, 702, 734, 741, 775], "colour": 600, "column": [577, 582, 602, 603, 631, 634, 646, 656, 663, 671, 697, 699, 745, 750, 765, 770, 777, 801], "columnend": 656, "columnstart": 656, "com": [587, 594, 597, 602, 626, 671, 673, 674, 692, 694, 702, 704, 711, 729, 733, 734, 736, 738, 739, 751, 764, 765, 774, 804], "com_fir": 599, "combin": [115, 118, 202, 304, 471, 576, 577, 580, 582, 586, 593, 595, 597, 603, 615, 617, 625, 629, 631, 634, 645, 650, 651, 652, 655, 656, 658, 659, 662, 663, 668, 669, 671, 676, 680, 681, 683, 697, 701, 702, 704, 708, 714, 716, 719, 720, 730, 734, 741, 747, 750, 751, 755, 757, 761, 767, 770, 771, 773, 774, 775, 777, 794, 795, 802], "combine1": 599, "combine2": 599, "combinedalloc": 747, "comdat": [589, 663, 743], "come": [577, 582, 589, 595, 597, 598, 599, 600, 602, 604, 617, 631, 655, 658, 659, 662, 668, 669, 671, 697, 699, 700, 701, 702, 706, 708, 713, 714, 715, 716, 717, 722, 729, 730, 734, 735, 737, 745, 747, 748, 750, 751, 755, 761, 764, 766, 773, 774, 777, 779, 781, 793, 795, 796, 797, 799, 802], "comfort": 746, "comma": [115, 202, 240, 304, 363, 471, 475, 576, 578, 579, 582, 603, 623, 650, 651, 702, 708, 710, 734, 761, 766, 777, 797], "command": [582, 584, 585, 587, 593, 595, 597, 599, 602, 603, 604, 608, 609, 611, 614, 615, 618, 621, 622, 623, 624, 625, 626, 627, 628, 631, 632, 633, 635, 636, 640, 641, 642, 644, 645, 646, 649, 650, 652, 654, 657, 659, 660, 667, 670, 671, 673, 678, 681, 686, 688, 691, 692, 694, 696, 698, 701, 702, 704, 705, 717, 719, 734, 736, 743, 744, 747, 753, 755, 759, 760, 761, 762, 764, 765, 766, 769, 771, 773, 775, 793, 794, 795, 796, 797, 798, 799, 800, 801], "commandlin": [608, 769], "commandlinepars": 775, "commasepar": 651, "comment": [582, 592, 599, 601, 603, 613, 631, 642, 644, 650, 654, 659, 668, 690, 695, 702, 703, 704, 713, 714, 732, 733, 734, 736, 739, 743, 759, 760, 761, 762, 766, 772, 774, 777, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "commentstr": 771, "commerci": [577, 659, 755], "commit": [592, 602, 631, 654, 666, 670, 674, 688, 694, 703, 709, 718, 722, 726, 739, 752, 755, 757, 766], "committ": 659, "committe": [600, 734], "commnad": 635, "common": [577, 582, 584, 585, 586, 588, 589, 595, 597, 598, 599, 601, 602, 605, 610, 613, 632, 633, 642, 647, 648, 651, 652, 654, 655, 658, 659, 661, 662, 664, 666, 667, 668, 669, 675, 678, 680, 695, 697, 701, 702, 703, 704, 707, 709, 713, 714, 716, 717, 722, 732, 735, 736, 739, 741, 750, 751, 752, 753, 755, 756, 761, 762, 771, 773, 776, 777, 794, 796, 797, 798, 799, 802], "communic": [585, 600, 601, 602, 655, 664, 666, 701, 702, 707, 715, 717, 734, 746, 748, 751, 753, 756, 773], "communiti": [594, 601, 652, 654, 659, 666, 703, 734, 736, 737, 739, 746, 748, 778], "commut": [585, 599, 732, 771], "compact": [577, 599, 615, 637, 646, 654, 655, 661, 668, 702, 734, 753, 761, 801, 802], "compani": [659, 711, 748], "companion": 606, "compar": [580, 581, 584, 585, 586, 590, 591, 599, 603, 620, 622, 630, 631, 636, 658, 661, 699, 702, 704, 732, 734, 735, 741, 744, 747, 750, 751, 759, 760, 761, 764, 765, 766, 770, 777, 794, 797, 798, 799, 800, 801], "comparefp": 761, "comparison": [581, 586, 591, 663, 666, 669, 676, 681, 695, 702, 732, 734, 744, 750, 755, 766, 770, 781, 794, 798], "compat": [577, 580, 582, 586, 588, 589, 597, 598, 599, 602, 607, 611, 613, 617, 633, 634, 635, 636, 641, 644, 650, 651, 652, 655, 656, 661, 662, 663, 667, 668, 671, 673, 690, 694, 698, 700, 702, 715, 726, 729, 732, 734, 742, 743, 747, 750, 751, 753, 755, 766, 767, 768, 802], "compatible_class": 599, "compbinari": 638, "compet": 659, "compil": [50, 144, 241, 367, 479, 577, 582, 584, 585, 586, 588, 589, 593, 594, 595, 596, 598, 599, 601, 603, 604, 605, 607, 610, 611, 617, 622, 623, 631, 632, 636, 637, 646, 647, 648, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 666, 667, 668, 669, 670, 672, 673, 674, 675, 677, 680, 681, 685, 687, 688, 689, 690, 691, 694, 696, 701, 703, 704, 705, 706, 712, 713, 714, 715, 716, 719, 720, 722, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 747, 748, 750, 753, 754, 755, 756, 757, 759, 761, 762, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 780, 782, 793, 794, 795, 797, 798, 799, 802, 803, 804], "compiland": [636, 722, 725, 730], "compile_tim": 764, "compilecallbackmanag": [781, 782], "compilelay": [717, 779, 780, 781, 782], "compilemodul": 775, "compileondemand": 781, "compileondemandlay": [717, 781, 782], "compiler_rt": 659, "compiler_rt_test_compile_cflag": 692, "compiler_rt_test_compiler_cflag": 692, "compileutil": [779, 780, 781, 782], "complain": [603, 671, 673, 674, 686], "complaint": 802, "complement": [577, 669, 702, 734, 751], "complet": [577, 582, 585, 589, 590, 592, 597, 598, 599, 602, 604, 607, 608, 617, 622, 649, 651, 655, 658, 659, 661, 668, 670, 671, 673, 674, 677, 681, 685, 688, 691, 692, 694, 701, 702, 703, 704, 705, 706, 707, 713, 714, 715, 716, 717, 732, 734, 736, 741, 745, 746, 750, 751, 755, 756, 759, 760, 761, 771, 773, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801], "complex": [577, 598, 599, 602, 631, 655, 662, 668, 704, 714, 716, 719, 729, 732, 750, 751, 755, 756, 757, 759, 760, 761, 762, 770, 771, 773, 780, 794, 796, 798, 799, 801, 802], "complex128": 729, "complex16": 729, "complex32": 729, "complex32partialprecis": 729, "complex48": 729, "complex64": 729, "complex80": 729, "complexpattern": [599, 771], "complextyp": 805, "compli": 659, "compliant": [582, 652, 737], "complic": [584, 586, 597, 598, 661, 662, 668, 671, 673, 692, 695, 700, 701, 702, 706, 741, 751, 759, 768, 770, 771], "compliment": 577, "compon": [577, 580, 582, 595, 597, 598, 601, 603, 608, 613, 617, 619, 643, 650, 657, 658, 660, 667, 668, 670, 671, 673, 690, 692, 694, 696, 701, 702, 703, 707, 715, 717, 726, 727, 732, 734, 735, 736, 743, 745, 747, 751, 753, 757, 761, 765, 769, 771, 774, 776, 779, 804], "compos": [577, 581, 595, 656, 673, 702, 708, 717, 745, 748, 757, 776, 780], "composit": [702, 734, 741, 745], "compound": 656, "compr": [0, 2, 3, 4, 88, 174, 278, 572], "comprehens": [671, 732, 751, 766], "compress": [88, 174, 278, 572, 580, 589, 597, 615, 633, 637, 650, 656, 671, 704, 734], "compris": [577, 582, 656, 702, 741], "compriz": 615, "compromis": [702, 734, 751], "comput": [49, 115, 143, 202, 239, 304, 362, 471, 474, 576, 577, 580, 582, 585, 590, 593, 599, 602, 615, 631, 652, 656, 658, 664, 666, 679, 688, 701, 702, 703, 704, 706, 713, 716, 722, 729, 732, 734, 738, 741, 747, 748, 751, 753, 755, 761, 771, 773, 793, 795, 796, 797, 798, 799, 800, 801, 802], "compute_20": 715, "compute_factori": 657, "compute_pgm_rsrc1_fwd_progress": 582, "compute_pgm_rsrc1_mem_ord": 582, "compute_pgm_rsrc1_sgpr": 582, "compute_pgm_rsrc1_vgpr": 582, "compute_pgm_rsrc1_wgp_mod": 582, "compute_pgm_rsrc2_user_sgpr": 582, "compute_user_data_0": 582, "compute_xx": [652, 715], "computearea": 695, "computeknownbit": 677, "con": [588, 761], "concat": 702, "concat_vector": 599, "concaten": [577, 582, 583, 588, 589, 671, 676, 680, 702, 761, 766], "concentr": [631, 692], "concept": [577, 582, 588, 589, 599, 666, 669, 675, 695, 701, 702, 706, 714, 715, 717, 734, 745, 750, 751, 756, 762, 768, 772, 779, 780, 795, 797], "conceptu": [577, 582, 588, 599, 602, 603, 651, 661, 669, 702, 734, 752, 767], "concern": [577, 601, 659, 668, 669, 702, 716, 736, 739, 755, 757, 780], "concis": [599, 602, 651, 659, 669], "conclud": [631, 702, 797, 798], "conclus": [631, 714, 781, 801, 803, 804], "concret": [589, 599, 651, 658, 675, 680, 681, 702, 713, 734, 740, 750, 755, 760, 762, 771, 773, 796, 803], "concurr": [582, 597, 608, 668, 701, 704, 716, 717, 734, 742, 779], "concurrentircompil": [717, 779, 780, 781, 782], "cond": [590, 655, 664, 702, 706, 713, 750, 761, 771, 797, 798, 799, 800, 801], "cond1": 761, "cond2": 761, "cond_fals": 799, "cond_next": 799, "cond_tru": 799, "condbranch": 771, "condclaus": 761, "condit": [102, 189, 291, 429, 542, 577, 581, 582, 586, 591, 594, 596, 597, 598, 599, 602, 608, 617, 651, 655, 656, 659, 661, 664, 666, 668, 669, 671, 675, 676, 697, 703, 705, 706, 708, 714, 715, 719, 729, 734, 747, 750, 755, 756, 766, 767, 771, 773, 793, 794, 795, 797, 798, 799, 800, 801], "condition": 761, "condmovfp": 761, "condn": 761, "condoper": 761, "conduct": [601, 631, 659, 670, 711], "condv": [797, 798, 799, 800, 801], "confer": [599, 668, 670, 711], "confid": [577, 659, 702, 718], "confidenti": [659, 746], "config": [584, 597, 607, 608, 623, 641, 659, 667, 671, 688, 692, 701, 734, 735, 736, 766, 771, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "configur": [582, 584, 597, 599, 602, 603, 623, 659, 670, 673, 674, 685, 686, 687, 691, 692, 701, 702, 704, 715, 717, 731, 734, 735, 736, 743, 744, 745, 747, 755, 757, 766, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780], "confin": 702, "confirm": [592, 602, 671, 704], "conflict": [582, 599, 603, 641, 659, 675, 702, 713, 734, 736, 739, 766], "conform": [577, 582, 596, 597, 602, 608, 609, 654, 659, 664, 668, 694, 701, 702, 734, 737, 777, 780, 781], "confront": [666, 669], "confus": [586, 594, 602, 603, 613, 659, 661, 668, 669, 677, 697, 702, 714, 734, 739, 741, 747, 751, 760, 771], "congrat": 691, "congruenc": 703, "congruent": 747, "conjunct": [577, 595, 597, 603, 606, 636, 637, 701, 702, 722, 744, 756, 761], "connect": [97, 582, 658, 680, 688, 703, 706, 713, 732, 733, 734, 741, 751, 755, 764, 767, 779], "consecut": [577, 581, 582, 588, 603, 702, 741, 747, 750, 761, 768, 770, 773], "consensus": [601, 659, 739, 740, 748, 757], "consequ": [577, 586, 593, 600, 631, 652, 661, 671, 674, 702, 704, 706, 720, 734, 751, 753, 757, 766], "conserv": [582, 585, 586, 590, 602, 631, 668, 701, 702, 705, 716, 751, 753, 755, 767, 773], "conservat": 767, "consid": [577, 582, 585, 588, 589, 590, 594, 599, 600, 601, 602, 603, 604, 608, 613, 619, 632, 644, 651, 652, 655, 656, 657, 658, 659, 661, 663, 664, 665, 668, 669, 671, 675, 676, 677, 680, 683, 685, 689, 691, 695, 697, 699, 700, 702, 703, 706, 708, 713, 714, 716, 729, 732, 734, 736, 739, 744, 746, 747, 750, 751, 752, 753, 754, 755, 756, 761, 762, 764, 766, 768, 770, 773, 780, 794, 797, 799, 801, 802], "consider": [577, 599, 600, 663, 671, 704, 734, 748, 750, 755, 756, 762, 777], "consist": [577, 582, 585, 586, 589, 598, 599, 601, 602, 603, 606, 608, 615, 623, 632, 637, 651, 656, 659, 661, 663, 666, 667, 668, 669, 678, 681, 687, 691, 694, 698, 701, 702, 704, 706, 708, 714, 719, 726, 727, 734, 736, 739, 743, 747, 750, 751, 755, 757, 760, 761, 762, 765, 768, 771, 773, 774, 795, 796, 797, 798, 799, 800, 801], "consol": [599, 670, 704, 709, 752, 774, 796], "const": [582, 585, 599, 602, 624, 651, 656, 668, 679, 687, 695, 700, 701, 704, 705, 708, 713, 716, 717, 719, 721, 734, 747, 750, 759, 760, 771, 773, 774, 775, 777, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "const0": 589, "const_arg_iter": [734, 760], "const_global_iter": 734, "const_iter": [734, 760], "const_name_iter": 760, "const_op_iter": 734, "const_record_iter": 760, "const_use_iter": 734, "constant": [10, 11, 23, 30, 31, 56, 63, 64, 67, 80, 82, 84, 86, 87, 89, 92, 94, 95, 115, 121, 124, 130, 131, 147, 152, 153, 154, 164, 166, 167, 168, 171, 172, 175, 181, 182, 184, 202, 206, 209, 219, 220, 246, 253, 254, 255, 268, 271, 272, 273, 276, 277, 279, 283, 284, 286, 304, 307, 308, 312, 313, 319, 320, 321, 342, 345, 347, 348, 349, 350, 376, 395, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 421, 427, 439, 440, 471, 489, 508, 511, 512, 514, 519, 520, 521, 522, 523, 524, 525, 526, 529, 533, 540, 552, 553, 576, 577, 582, 585, 586, 589, 591, 599, 602, 615, 624, 636, 652, 655, 656, 662, 664, 666, 668, 671, 675, 678, 679, 697, 701, 703, 714, 715, 717, 719, 741, 753, 755, 760, 767, 768, 771, 773, 775, 776, 795, 797, 798, 799, 800, 801], "constant_tsc": 776, "constantarray": 734, "constantexpr": 739, "constantfold": 662, "constantfoldcal": 662, "constantfp": [734, 795, 796, 797, 798, 799, 800, 801], "constantindex": 753, "constantint": [602, 702, 708, 734], "constantpoolsect": 771, "constantstruct": 734, "constdata": 708, "constexpr": [650, 652, 759], "constindex": 753, "constitu": [661, 676, 797], "constitut": [588, 589, 682, 734, 746, 766, 780], "constprop": 734, "constrain": [631, 661, 664, 671, 675, 678, 681, 683, 701, 713, 731, 761, 769, 795], "constrainedop": 583, "constraint": [597, 599, 602, 603, 649, 659, 661, 662, 675, 681, 701, 713, 732, 734, 736, 741, 748, 750, 755, 761, 762, 771, 773], "construct": [582, 585, 586, 589, 595, 596, 598, 600, 602, 631, 651, 655, 661, 662, 663, 668, 699, 700, 702, 709, 716, 717, 729, 734, 741, 750, 752, 755, 759, 761, 768, 771, 772, 773, 775, 777, 779, 781, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803], "constructor": [586, 599, 633, 651, 652, 655, 664, 695, 698, 700, 701, 702, 707, 717, 750, 760, 771, 773, 777, 779, 780, 781, 797], "constval": 734, "constvcal": 702, "consult": [597, 602, 613, 670, 671, 673, 703, 713, 720, 722, 727, 748, 773], "consum": [577, 582, 613, 615, 623, 631, 636, 651, 655, 661, 663, 669, 671, 673, 675, 676, 680, 689, 702, 704, 710, 722, 724, 725, 726, 727, 729, 730, 745, 747, 753, 759, 762, 766, 794, 795, 796, 797, 798, 799, 800, 801], "consumeerror": 734, "consumpt": [599, 631, 704, 745, 773], "cont": [655, 661, 700, 702], "cont6": 661, "conta": 702, "contact": [600, 659, 688, 694, 704, 711, 743, 746, 748, 773], "contain": [577, 582, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 597, 598, 599, 601, 603, 606, 608, 609, 613, 614, 617, 619, 622, 623, 626, 630, 631, 632, 633, 634, 637, 640, 641, 644, 646, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 666, 668, 669, 670, 671, 673, 677, 678, 680, 681, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 701, 702, 703, 705, 706, 707, 708, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 729, 732, 733, 735, 736, 738, 741, 743, 744, 747, 748, 750, 751, 752, 753, 755, 757, 759, 760, 761, 762, 764, 765, 766, 768, 770, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 795, 796, 797, 801], "containingtyp": 702, "containsfoo": 602, "contb": 702, "content": [582, 585, 588, 597, 602, 603, 604, 613, 615, 617, 622, 629, 631, 633, 634, 635, 640, 641, 645, 651, 659, 663, 665, 672, 676, 701, 702, 705, 709, 714, 722, 729, 730, 732, 734, 736, 741, 745, 747, 752, 761, 762, 765, 766, 771, 773, 775], "content_disposition_typ": 659, "contenti": 659, "context": [585, 586, 602, 603, 637, 646, 651, 655, 659, 661, 664, 666, 669, 675, 680, 688, 695, 701, 703, 706, 710, 714, 715, 717, 733, 734, 740, 743, 746, 751, 759, 761, 762, 766, 773, 776, 779, 794, 795, 796, 799, 801], "context_projection_funct": 655, "context_s": 655, "contextu": [702, 776], "contigu": [577, 582, 680, 701, 702, 724, 726, 730, 734, 747, 750, 776], "continu": [577, 582, 585, 589, 593, 596, 599, 601, 603, 604, 636, 651, 654, 659, 661, 677, 694, 695, 701, 702, 704, 705, 706, 718, 722, 733, 734, 736, 749, 751, 760, 766, 776, 779, 794, 802], "contract": [652, 666, 701, 702, 734, 753, 759], "contradict": 702, "contrari": [599, 702], "contrast": [581, 585, 599, 602, 661, 695, 716, 734, 736, 739, 741, 773, 795], "contrib": [636, 671], "contribut": [577, 582, 599, 601, 606, 636, 659, 666, 670, 692, 701, 702, 725, 730, 732, 734, 736, 747, 748, 755, 761, 773, 774, 778, 804], "contributor": [584, 597, 598, 601, 659, 736, 737, 748], "contriv": [664, 761], "control": [17, 51, 118, 203, 240, 305, 310, 315, 327, 338, 361, 363, 428, 475, 541, 580, 581, 582, 586, 593, 597, 599, 602, 603, 608, 609, 611, 620, 631, 655, 658, 659, 660, 661, 662, 665, 666, 671, 673, 700, 702, 703, 704, 705, 706, 707, 715, 716, 732, 734, 736, 741, 742, 743, 747, 749, 750, 753, 755, 766, 767, 768, 769, 770, 771, 774, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804], "conv": 664, "conveni": [595, 597, 599, 602, 603, 608, 619, 651, 655, 656, 659, 675, 681, 695, 701, 702, 713, 715, 717, 732, 734, 735, 761, 766, 774, 796, 797, 798, 802], "convent": [577, 589, 595, 598, 602, 650, 653, 655, 661, 677, 695, 706, 709, 714, 729, 734, 739, 743, 750, 752, 753, 755, 759, 760, 795, 801], "converg": [589, 702], "convers": [582, 583, 599, 601, 603, 650, 651, 665, 666, 680, 681, 697, 734, 761, 777], "convert": [47, 48, 142, 227, 228, 229, 230, 237, 238, 393, 394, 506, 507, 577, 580, 581, 582, 583, 586, 588, 599, 607, 608, 613, 617, 621, 633, 651, 659, 662, 665, 666, 669, 671, 676, 680, 681, 687, 691, 698, 706, 714, 715, 734, 736, 745, 750, 759, 760, 761, 771, 773, 774, 775, 777, 793, 795, 796, 797, 798, 799, 800, 801, 802, 805], "converttoerrorcod": 734, "convey": [659, 661, 666, 668, 675, 702, 767], "cooki": [702, 734], "cool": [651, 659, 773, 795, 796, 797, 798, 799, 800, 801], "cooper": [668, 686, 701], "coordin": [20, 121, 206, 427, 540, 668, 702, 755, 777], "cope": [651, 734], "copi": [88, 97, 174, 186, 278, 288, 534, 572, 577, 582, 585, 586, 589, 593, 597, 599, 603, 607, 611, 616, 617, 618, 651, 655, 659, 661, 667, 668, 671, 675, 676, 678, 680, 681, 682, 683, 686, 693, 694, 701, 703, 706, 707, 708, 709, 713, 715, 722, 732, 734, 738, 747, 748, 749, 750, 751, 752, 755, 760, 766, 767, 770, 771, 773, 803], "coprocessor": 675, "copyabl": 702, "copycost": [683, 771], "copyleft": 659, "copypart": 704, "copyphysreg": 771, "copyright": [664, 773], "core": [1, 5, 6, 7, 8, 582, 585, 587, 597, 598, 655, 659, 661, 662, 670, 671, 680, 682, 685, 687, 688, 689, 693, 702, 704, 706, 717, 719, 736, 737, 751, 759, 766, 773, 779, 780, 781, 782, 795, 796, 797, 798, 799, 801], "core2": 766, "corei7": [766, 770], "corner": 753, "cornerston": 669, "coroaddr": 655, "corollari": [702, 725, 727], "corospit": 655, "coroutin": 742, "corp": 704, "corpora": 704, "corpus": 667, "corpus1": 704, "corpus2": 704, "corpus_dir": 704, "correct": [577, 582, 585, 586, 588, 592, 597, 599, 602, 603, 651, 652, 655, 659, 661, 662, 664, 666, 669, 671, 681, 686, 688, 690, 692, 693, 696, 697, 702, 703, 706, 714, 717, 719, 727, 732, 733, 734, 735, 736, 744, 745, 749, 750, 751, 755, 756, 764, 765, 766, 770, 773, 774, 777, 794, 796, 797], "correl": [582, 631, 668, 702, 768], "correspond": [55, 146, 245, 370, 482, 577, 580, 582, 583, 586, 588, 589, 591, 593, 597, 599, 602, 603, 609, 616, 617, 620, 623, 631, 646, 651, 655, 656, 658, 659, 661, 662, 663, 664, 668, 669, 671, 673, 676, 695, 696, 697, 699, 702, 703, 706, 708, 713, 714, 715, 716, 720, 722, 724, 725, 726, 727, 732, 733, 734, 736, 745, 750, 755, 757, 759, 760, 761, 762, 766, 768, 770, 771, 773, 776, 777, 794, 795, 797, 801], "corrupt": [602, 661, 704, 747, 802], "cortex": [653, 689, 693, 698], "cortexa53model": 771, "cortexa57model": 771, "cos": [585, 770, 777, 793, 794, 795, 796], "cosin": [702, 771], "cost": [577, 595, 599, 602, 631, 659, 675, 682, 683, 685, 687, 699, 701, 702, 703, 705, 711, 714, 731, 734, 736, 741, 745, 747, 751, 757, 770, 771, 776, 802], "costa": 759, "could": [577, 582, 585, 586, 593, 594, 597, 598, 599, 602, 603, 608, 619, 623, 631, 651, 655, 659, 660, 664, 665, 666, 667, 668, 669, 671, 675, 676, 680, 683, 686, 688, 693, 695, 697, 698, 699, 700, 701, 702, 703, 706, 709, 713, 716, 717, 719, 721, 726, 732, 733, 734, 736, 738, 739, 745, 747, 748, 750, 751, 752, 753, 755, 756, 757, 761, 766, 767, 768, 771, 774, 776, 777, 780, 781, 782, 794, 795, 796, 797, 799, 800, 802], "couldn": [585, 676, 714, 800], "counsel": 659, "count": [115, 202, 304, 471, 576, 577, 581, 582, 593, 602, 613, 617, 623, 631, 637, 651, 656, 661, 662, 668, 676, 698, 704, 706, 717, 722, 724, 734, 736, 741, 745, 747, 750, 753, 760, 761, 764, 765, 767, 771, 775, 776, 794], "counter": [49, 143, 239, 362, 474, 577, 581, 582, 584, 586, 591, 593, 597, 623, 631, 637, 702, 704, 719, 750, 760, 776], "counteracti": 747, "counterpart": [577, 583, 702, 717], "coupl": [586, 601, 666, 681, 702, 705, 711, 716, 718, 733, 734, 736, 755, 772, 773, 774, 797, 798, 801, 802], "couroutin": 743, "cours": [585, 597, 651, 662, 681, 697, 702, 704, 708, 714, 719, 734, 757, 773, 780, 793, 802, 803], "court": 659, "courtesi": [601, 654, 659], "cout": [602, 664, 687, 715, 777, 800], "cov": [607, 630, 656, 704], "cover": [577, 595, 599, 603, 617, 619, 630, 651, 653, 656, 659, 666, 668, 669, 671, 673, 676, 683, 688, 691, 694, 702, 704, 709, 711, 714, 718, 721, 729, 734, 747, 750, 752, 753, 754, 766, 771, 773, 774, 798, 803], "coverag": [596, 597, 607, 630, 637, 650, 659, 667, 682, 691, 702, 742, 750, 769, 775], "cp": [582, 671, 704, 708], "cp0": 675, "cp1": 675, "cp2": 675, "cp3": 675, "cpi": 708, "cpp": [583, 597, 598, 599, 602, 603, 608, 616, 644, 646, 651, 657, 662, 664, 668, 671, 681, 687, 701, 702, 714, 715, 716, 717, 736, 747, 750, 755, 756, 759, 760, 766, 770, 771, 772, 773, 775, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "cppflag": 735, "cppguid": 739, "cppperformancebenchmark": 738, "cpprefer": 734, "cpptypenam": [759, 760], "cpsr": 708, "cptmp0": 771, "cptmp1": 771, "cpu": [577, 582, 586, 587, 589, 606, 609, 611, 622, 623, 631, 634, 635, 652, 689, 693, 698, 702, 704, 705, 712, 714, 751, 764, 771, 773, 775, 776, 777, 800], "cpu0": 804, "cpu1": 777, "cpu2": 777, "cpu2017": 738, "cpu_id": 776, "cpu_nam": 623, "cpu_powerpc": 777, "cpu_x86": 777, "cpu_x86_64": 777, "cpufreq": [587, 689], "cpufrequtil": 689, "cpuinfo": 689, "cpun": 587, "cpunam": [609, 611, 631], "cpus": [577, 586, 587, 599, 608, 609, 611, 634, 652, 671, 689, 693, 751, 771, 776, 777, 800], "cpuset": 587, "cpusubtyp": 629, "cputyp": [589, 629], "cpux": 587, "cr": [599, 702], "cr0": 702, "cr7": 702, "craft": 734, "crafter": 748, "crash": [594, 604, 611, 668, 671, 674, 687, 697, 702, 732, 734, 736, 738, 753, 802], "crawl": 668, "crawler": 668, "crazi": [651, 802], "crazier": 797, "crc": 704, "crc32": 747, "crd": 738, "creal": 798, "creat": [577, 582, 588, 589, 595, 597, 598, 599, 600, 601, 602, 606, 607, 608, 609, 613, 616, 617, 623, 624, 626, 629, 631, 633, 636, 638, 649, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 668, 669, 670, 671, 673, 675, 676, 678, 680, 681, 682, 686, 687, 688, 690, 691, 693, 696, 697, 698, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 713, 714, 715, 716, 729, 732, 733, 736, 741, 743, 744, 745, 748, 750, 751, 753, 755, 756, 757, 759, 762, 764, 765, 766, 767, 768, 770, 771, 772, 774, 775, 777, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804], "createalloca": [799, 800, 801], "createasmstream": 599, "createbarejitdylib": [779, 780, 781, 782], "createbasicaliasanalysispass": 801, "createbasictyp": 801, "createbr": [797, 798, 799, 800, 801], "createcal": [734, 795, 796, 797, 798, 799, 800, 801], "createcfgsimplificationpass": [780, 781, 782, 796, 797, 798, 799, 801], "createcgscctofunctionpassadaptor": 716, "createcompileunit": 801, "createcondbr": [797, 798, 799, 800, 801], "createcontentblock": 701, "createdatalayout": [781, 796, 800], "createdefaultmypass": 773, "createentryblockalloca": [799, 800, 801], "createexpress": 801, "createfadd": [795, 796, 797, 798, 799, 800, 801], "createfcmpon": [797, 798, 799, 800, 801], "createfcmpult": [795, 796, 797, 798, 799, 800, 801], "createfil": 801, "createfmul": [795, 796, 797, 798, 799, 800, 801], "createfsub": [795, 796, 797, 798, 799, 800, 801], "createfunct": 801, "createfunctiontolooppassadaptor": 716, "createfunctiontyp": 801, "creategep": 718, "creategvnpass": [780, 781, 782, 796, 797, 798, 799, 801], "createindirectstubsmanag": 781, "createinstructioncombiningpass": [780, 781, 782, 796, 797, 798, 799], "createjit": 707, "createjitdylib": 717, "createlazycallthroughmanag": [781, 782], "createlinkgraph": 701, "createlinkgraph_": 701, "createload": [718, 799, 800, 801], "createlocalcompilecallbackmanag": 781, "createlocalindirectstubsmanagerbuild": 781, "createmiroperandcom": 708, "createmoduletocgsccpassadaptor": 716, "createmoduletofunctionpassadaptor": 716, "createmul": 734, "createmyregisteralloc": 773, "createparametervari": 801, "createphi": [797, 798, 799, 800, 801], "createpromotememorytoregisterpass": [799, 801], "createreassociatepass": [780, 781, 782, 796, 797, 798, 799], "createresourcetrack": [796, 797, 798, 799], "createret": [795, 796, 797, 798, 799, 800, 801], "createsect": 701, "createstor": [799, 800, 801], "createstringerror": 734, "createsubroutinetyp": 801, "createtargetasminfo": 771, "createtargetmachin": 800, "createthin": 613, "createuitofp": [795, 796, 797, 798, 799, 800, 801], "createvirtualregist": 599, "createzerofillblock": 701, "creation": [582, 597, 613, 655, 658, 668, 694, 698, 702, 734, 736, 771], "creator": [597, 773], "creatur": 798, "credit": [659, 751], "creduc": [594, 696], "crhc": 738, "critedge1": 715, "criteria": [659, 736, 747], "criterion": 736, "critic": [585, 598, 611, 631, 659, 666, 668, 681, 694, 702, 744, 747, 751, 773, 794], "cross": [584, 602, 604, 636, 681, 682, 683, 689, 690, 701, 702, 714, 717, 730, 736, 741, 743, 748, 766, 769, 800], "crosscompil": [599, 693], "crt": [597, 690], "crtp": 772, "crucial": [702, 733, 751], "cruel": [709, 752], "cruft": 736, "crypto": 704, "cryptograph": [747, 751], "cs": [582, 637, 702, 738], "cs1": [585, 702], "cs2": [585, 702], "csail": 751, "cse": [586, 662, 677, 703, 719, 796], "csemirbuild": 677, "cset": 587, "csk_md5": 702, "csk_none": 702, "csk_sha1": 702, "csk_sha256": 702, "csr_64": 708, "cst": 702, "cst_code_integ": 589, "cst_code_wide_integ": 589, "cstdint": [796, 797, 798, 799], "cstdio": [794, 795, 796, 797, 798, 799, 800, 801], "cstdlib": [794, 795, 796, 797, 798, 799, 800], "cstptr": 702, "csv": [623, 765, 774, 775], "cta": 715, "ctabl": 759, "ctag": 650, "ctaid": 715, "ctest": 764, "ctmark": 764, "ctor": [602, 664, 700, 702, 750], "ctpop": 771, "ctrl": [795, 800], "ctx": [717, 779, 780], "ctxt": [655, 777], "ctype": 722, "cu": [582, 622, 652, 697, 702, 750], "cube": 580, "cubemap": 580, "cubic": 704, "cucontext": 715, "cuctxcreat": 715, "cuctxdestroy": 715, "cuda": [577, 582, 599, 608, 653, 660, 715, 769], "cuda_success": 715, "cudamodul": 715, "cudevic": 715, "cudevicecomputecap": 715, "cudeviceget": 715, "cudevicegetcount": 715, "cudevicegetnam": 715, "cudeviceptr": 715, "cufunct": 715, "cuinit": 715, "culaunchkernel": 715, "culinkst": 715, "cull": [582, 602], "cultur": [600, 711], "cumbersom": [717, 736], "cumemalloc": 715, "cumemcpydtoh": 715, "cumemcpyhtod": 715, "cumemfre": 715, "cumod": 582, "cumodul": 715, "cumodulegetfunct": 715, "cumoduleloaddata": 715, "cumoduleloaddataex": 715, "cumoduleunload": 715, "cumul": [599, 633, 775], "cuobjdump": 652, "cur": [602, 702, 734, 766], "curesult": 715, "curious": [695, 714], "curloc": 801, "curop": 771, "currenc": [599, 601, 796], "current": [20, 121, 206, 427, 540, 577, 580, 581, 582, 585, 586, 588, 589, 591, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 606, 608, 609, 611, 613, 617, 619, 631, 633, 640, 641, 644, 651, 652, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 675, 676, 677, 680, 681, 683, 685, 686, 687, 688, 690, 693, 694, 699, 700, 701, 702, 704, 706, 707, 708, 714, 715, 716, 718, 722, 726, 731, 732, 733, 734, 735, 738, 740, 743, 744, 745, 746, 747, 749, 750, 751, 753, 755, 756, 759, 761, 762, 766, 767, 768, 769, 771, 773, 774, 775, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "current_corpus_dir": 704, "current_valu": 655, "curs": [604, 608], "curtok": [794, 795, 796, 797, 798, 799, 800, 801], "curvar": [799, 800, 801], "cus": [582, 646], "custom": [594, 597, 599, 602, 603, 604, 661, 662, 664, 666, 671, 672, 680, 681, 701, 702, 704, 708, 716, 732, 743, 755, 759, 761, 762, 766, 774, 776, 779, 782], "customalloc": 655, "customari": [651, 659, 702], "custombehaviour": 631, "customev": 776, "customeventunstructuredmemori": 776, "customfor": 680, "customfre": 655, "customif": 680, "customis": 597, "customiz": [677, 697], "cut": [590, 651, 771, 779], "cute": 802, "cutoff": 637, "cv_cpu_type_": 722, "cv_signature_xx": 725, "cvdebugrecord": 727, "cvdump": 636, "cve": [704, 748], "cvinfo": 725, "cvise": 696, "cvpack": 729, "cvs": 736, "cvt": 715, "cx": 762, "cxa_demangl": 750, "cxx": [595, 597, 602, 608, 671, 686, 693, 717, 744], "cxx11": 738, "cxx14": 602, "cxx_fast_tl": 702, "cxx_fast_tlscc": [589, 702], "cxx_flag": 689, "cxx_status": 602, "cxxcompilelay": 717, "cxxcompilinglay": 717, "cxxfilt": 607, "cxxflag": [616, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "cxxlayer": 717, "cxxmap": [607, 637], "cy": 631, "cycl": [623, 631, 654, 658, 661, 670, 702, 705, 706, 750, 775], "cycle_frequ": 776, "cyclic": [577, 671, 702, 706], "cyclonemodel": 771, "cygwin": [599, 671, 673], "cypress": 582, "cywritev3": 771, "d0": [603, 631, 702, 771], "d02": 768, "d0o": 656, "d1": [603, 656, 771], "d10": 771, "d100755": 743, "d100756": 743, "d101695": 743, "d102136": 743, "d103855": 743, "d104672": 743, "d105055": 743, "d105330": 743, "d105877": 743, "d106319": 743, "d11": 771, "d12": [768, 771], "d13": 771, "d14": 771, "d15": [702, 771], "d16": [0, 3, 4, 9, 33, 44, 46, 222, 234, 236, 441, 462, 554, 568, 570], "d16_x": 579, "d16_xi": 579, "d16_xyz": 579, "d16_xyzw": 579, "d2": 771, "d3": [708, 771], "d31": 702, "d4": [702, 771], "d43184": 690, "d5": 771, "d57504": 740, "d57896": 739, "d6": [656, 771], "d7": [702, 771], "d7k": 656, "d8": 771, "d88124": 690, "d88175": 743, "d89518": 690, "d9": 771, "d90021": 690, "d92611": 743, "d94928": 743, "d95339": 743, "d95745": 743, "d96310": 743, "d96513": 743, "d977763": 743, "d98931": 743, "d99173": 743, "d_ctor_bas": 603, "d_libcpp_abi_force_itanium": 690, "d_no_crt_stdio_inlin": 690, "da": [2, 3, 4, 9, 631, 656, 702], "dag": [583, 650, 702, 703, 729, 734, 736, 755, 759, 760, 762, 766, 771], "dagarg": 761, "dagarglist": 761, "dagcombin": 662, "dagiselemitt": 760, "dagrecti": 760, "dagtodag": 662, "dagtodagisel": 662, "damag": 750, "dan": 777, "danc": 674, "danger": [603, 702, 734, 746, 751, 767], "dangl": [602, 734, 761], "daniel": [684, 750], "danila": 739, "darktabl": 738, "darwin": [595, 597, 599, 607, 613, 632, 642, 665, 702, 705, 717, 753, 801], "darwin9": 603, "das": 739, "dash": [651, 667, 777], "dasinconsist": 739, "data": [20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 64, 67, 88, 97, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 153, 154, 174, 186, 206, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 254, 255, 278, 288, 336, 337, 378, 379, 380, 410, 412, 427, 436, 439, 440, 441, 442, 443, 444, 447, 448, 449, 459, 460, 461, 462, 463, 464, 491, 492, 493, 522, 524, 534, 540, 549, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 579, 580, 581, 584, 585, 586, 587, 588, 593, 595, 598, 601, 602, 607, 608, 617, 631, 632, 633, 634, 635, 636, 638, 640, 641, 642, 645, 646, 650, 651, 655, 661, 662, 663, 665, 666, 667, 668, 669, 675, 680, 681, 691, 701, 703, 704, 705, 706, 707, 708, 716, 717, 718, 721, 722, 726, 727, 729, 730, 736, 737, 738, 741, 742, 745, 747, 748, 750, 753, 755, 759, 761, 762, 764, 766, 771, 773, 775, 779, 795, 796, 799, 800, 801], "data1": 761, "data16bitsdirect": 771, "data32bitsdirect": 771, "data64bitsdirect": 771, "data_alignment_factor": [577, 582], "data_ti": 760, "databas": [702, 730, 742, 777, 802], "datacrc": 722, "dataflow": [597, 702, 750, 799], "datalayout": [589, 668, 702, 715, 717, 718, 768, 771, 779, 780, 781, 782], "datalayoutpass": 801, "dataloc": 702, "dataset": [738, 764], "datastructur": [734, 736], "datatyp": [599, 651, 734, 761, 793], "date": [585, 593, 594, 596, 613, 633, 645, 671, 673, 693, 694, 713, 716, 722, 729, 733, 739, 743, 744, 748, 757, 779, 780, 781, 797], "daunt": 597, "david": [739, 741], "day": [597, 601, 659, 670, 671, 694, 734, 748, 757], "db": 702, "dbaremetal_armv6m_sysroot": 692, "dbaremetal_armv7em_sysroot": 692, "dbaremetal_armv7m_sysroot": 692, "dbg": [697, 702, 708, 771, 801], "dbg_instr_ref": 708, "dbg_valu": [582, 697, 702, 708, 750], "dbg_value_list": 750, "dbgentityhistorycalcul": 750, "dbgopt": 750, "dbgs": [593, 701, 734], "dbgstreamarray": 722, "dbi": [720, 725, 730], "dbi_head": 722, "dbistreamhead": 722, "dbistreamvers": 722, "dbl": 764, "dblti": 801, "dbootstrap_cmake_build_typ": 660, "dbootstrap_cmake_c_flag": 584, "dbootstrap_cmake_cxx_flag": 584, "dbscan": 623, "dbuild_shared_lib": 671, "dbuilder": 801, "dbx": 750, "dc": [704, 710], "dce": [604, 651, 655, 662, 702, 740], "dced": 734, "dclang_bootstrap_passthrough": 584, "dclang_bootstrap_target": 660, "dclang_enable_bootstrap": [584, 660], "dclang_enable_proto_fuzz": 667, "dclang_enable_static_analyz": 671, "dclang_tablegen": [691, 693], "dcmake_ar": 692, "dcmake_asm_compiler_target": 692, "dcmake_asm_flag": 692, "dcmake_build_typ": [654, 660, 671, 689, 691, 766, 775], "dcmake_c_compil": [691, 692, 764], "dcmake_c_compiler_external_toolchain": 692, "dcmake_c_compiler_target": 692, "dcmake_c_flag": [689, 690, 691, 692], "dcmake_c_flags_releas": 775, "dcmake_crosscompil": 693, "dcmake_cxx_compil": 691, "dcmake_cxx_flag": [691, 693, 775], "dcmake_cxx_link_flag": 671, "dcmake_exe_linker_flag": 692, "dcmake_install_prefix": [597, 671, 689, 690, 693], "dcmake_nm": 692, "dcmake_osx_architectur": 671, "dcmake_ranlib": 692, "dcmake_sysroot": 692, "dcmake_toolchain_fil": 671, "dcmake_try_compile_target_typ": 692, "dcommit": 736, "dcompiler_rt_baremetal_build": 692, "dcompiler_rt_build_builtin": 692, "dcompiler_rt_build_libfuzz": [692, 704], "dcompiler_rt_build_memprof": 692, "dcompiler_rt_build_profil": 692, "dcompiler_rt_build_sanit": 692, "dcompiler_rt_build_xray": 692, "dcompiler_rt_default_target_on": 692, "dcompiler_rt_emul": 692, "dcompiler_rt_include_test": [692, 704], "dcompiler_rt_os_dir": 692, "dcompiler_rt_test_compil": 692, "dcompiler_rt_test_compiler_cflag": 692, "ddg": [658, 742], "ddgbuilder": 658, "de": [641, 650, 727, 730, 749, 773, 777], "deactiv": 757, "dead": [585, 599, 651, 664, 666, 671, 678, 697, 701, 702, 703, 704, 705, 708, 715, 719, 734, 750, 755], "deadlin": 601, "deadtypeelim": 734, "deal": [586, 588, 589, 597, 600, 602, 652, 655, 659, 661, 665, 675, 680, 681, 695, 716, 721, 729, 732, 734, 736, 741, 747, 750, 751, 759, 772, 773, 774, 799], "dealloc": [668, 687, 701, 702, 734, 747], "dealloc_type_mismatch": 747, "death": [667, 704], "deb": 693, "debat": 677, "debian": [671, 692, 693, 731], "debian8": 660, "debug": [583, 593, 594, 595, 597, 599, 602, 604, 608, 609, 616, 620, 623, 624, 632, 633, 634, 636, 641, 645, 646, 649, 650, 651, 654, 656, 659, 661, 663, 668, 671, 673, 677, 691, 694, 696, 701, 703, 704, 705, 712, 714, 716, 717, 720, 721, 724, 725, 727, 729, 730, 731, 735, 739, 745, 753, 755, 762, 764, 769, 771, 773, 793, 799, 800, 802, 803, 804], "debug_": 582, "debug_addr": 577, "debug_arang": [577, 582], "debug_count": 734, "debug_fram": [577, 634], "debug_info": [622, 750], "debug_inlin": 606, "debug_level": 651, "debug_lin": 577, "debug_line_str": 577, "debug_loclist": 577, "debug_metadata_vers": 801, "debug_mod": 582, "debug_nam": [577, 750], "debug_pubnam": [606, 720, 750], "debug_pubtyp": [606, 750], "debug_rnglist": 577, "debug_s_crossscopeexport": 636, "debug_s_crossscopeimport": 636, "debug_s_inlineelin": 636, "debug_s_lin": 636, "debug_str": [577, 603, 623, 750], "debug_symbol": 731, "debug_with_typ": 734, "debugcount": 734, "debugflag": [651, 734], "debugg": [599, 602, 636, 650, 657, 661, 677, 687, 707, 717, 727, 730, 739, 757, 766, 769, 773, 797, 801, 803], "debuginfo": [671, 697, 702, 727, 736, 743, 766, 801], "debuginfoforprofil": 702, "debuginfometadata": 750, "debuglev": 651, "debuglevel": 651, "debuglink": 633, "debugloc": [599, 708, 745, 801], "debugstreamarray": 722, "debugtrap": 582, "dec": [642, 734], "decalr": 690, "decent": [662, 689, 694, 734, 773, 801], "decid": [577, 582, 588, 595, 597, 651, 652, 659, 661, 662, 680, 685, 696, 702, 720, 722, 733, 734, 748, 750, 751, 755, 770, 773, 777, 794, 798, 799], "decim": [581, 582, 603, 612, 632, 637, 642, 644, 651, 663, 702, 777], "decimal_numb": 582, "decimalinteg": 761, "deciph": 582, "decis": [588, 593, 595, 599, 600, 601, 602, 659, 661, 666, 676, 680, 685, 702, 704, 717, 734, 741, 746, 751, 755, 770, 778, 780, 796], "decl": [650, 695, 762, 795], "decl_in_loop": 702, "declar": [577, 581, 582, 585, 589, 599, 603, 650, 651, 652, 655, 662, 664, 690, 695, 700, 702, 708, 714, 715, 716, 734, 753, 755, 756, 759, 760, 761, 762, 768, 771, 772, 773, 793, 794, 795, 796, 797, 798, 799, 800, 801], "declaring_vari": 739, "declcontext": 695, "declet": 702, "decltyp": [702, 781], "decod": [589, 623, 631, 640, 641, 702, 750, 759, 764], "decodermethod": 761, "decodernamespac": 761, "decompos": [582, 659, 662, 680, 701, 702, 729, 755], "decomposit": 623, "decompress": 633, "decor": [701, 750], "decreas": [580, 595, 597, 611, 691, 694, 702, 721, 747], "decrement": [582, 661, 734], "dedic": [581, 599, 659, 685, 687, 694, 706, 736, 771], "deduc": [582, 666, 702, 706, 719, 734, 759, 767], "dedupl": [702, 722], "deee": 631, "deeer": 631, "deem": [659, 662, 694, 696, 702, 706], "deep": [602, 658, 695, 701, 732, 738], "deeper": [598, 636, 667, 709, 752, 764, 779], "deepli": 656, "def": [577, 583, 599, 623, 650, 655, 658, 662, 675, 678, 697, 699, 703, 706, 708, 713, 716, 741, 750, 759, 760, 762, 771, 772, 773, 793, 794, 795, 796, 797, 798, 799, 800, 801], "default": [27, 28, 29, 37, 38, 39, 40, 41, 44, 64, 127, 128, 129, 133, 134, 135, 136, 137, 140, 153, 212, 213, 214, 223, 224, 225, 226, 228, 231, 234, 254, 336, 447, 448, 449, 463, 464, 549, 556, 557, 560, 561, 562, 563, 568, 571, 577, 580, 582, 583, 584, 585, 586, 589, 591, 595, 597, 599, 603, 604, 606, 608, 609, 611, 612, 613, 616, 617, 618, 621, 622, 623, 624, 627, 631, 632, 633, 634, 636, 637, 638, 640, 641, 642, 644, 645, 646, 650, 651, 652, 655, 659, 662, 663, 666, 667, 668, 671, 673, 683, 686, 687, 688, 690, 691, 692, 693, 695, 697, 700, 701, 702, 704, 707, 708, 710, 715, 717, 731, 733, 734, 735, 736, 743, 745, 747, 748, 750, 751, 753, 755, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 773, 774, 775, 779, 780, 794, 795, 796, 797, 798, 799, 800, 801], "default_branch_weight": 591, "default_float_round": 582, "defaultdest": 702, "defaultlib": 673, "defaultopt": 651, "defeat": 751, "defect": 601, "defend": 751, "defens": 659, "defer": [577, 601, 707, 714, 717, 739, 779, 780, 781, 796], "deferrederr": 734, "defi": 702, "defici": 668, "defin": [49, 63, 64, 143, 152, 153, 239, 253, 254, 345, 362, 410, 411, 474, 522, 523, 577, 580, 581, 582, 584, 585, 586, 588, 589, 590, 591, 594, 597, 598, 599, 603, 604, 608, 613, 615, 631, 632, 633, 637, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 671, 675, 676, 677, 678, 679, 680, 687, 692, 693, 695, 696, 697, 699, 700, 701, 704, 705, 706, 708, 709, 713, 714, 715, 717, 719, 721, 722, 725, 727, 730, 731, 732, 733, 734, 735, 737, 739, 740, 741, 742, 743, 747, 750, 752, 753, 754, 755, 756, 759, 760, 762, 764, 765, 766, 767, 768, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 800, 801, 802, 803, 804], "define_dwarf": 582, "defined_symbol": 701, "definingaccess": 713, "definit": [581, 582, 586, 588, 589, 591, 598, 599, 603, 606, 620, 623, 632, 636, 650, 651, 654, 655, 658, 662, 668, 675, 676, 678, 679, 680, 687, 690, 696, 699, 701, 702, 705, 708, 713, 714, 717, 732, 734, 747, 750, 755, 759, 762, 768, 771, 772, 773, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "defintiion": 690, "defm": [760, 762, 771], "defreg": 623, "defunct": 717, "defvar": 760, "degen": 702, "degener": [732, 799], "degrad": [659, 668, 757], "degrandmaison": 711, "degre": [586, 659, 660, 666, 688, 751, 770], "deiniti": 717, "delay": [601, 694, 714, 734, 739, 746, 747, 748, 750, 757, 761], "deleg": [586, 631, 661, 702, 737], "delet": [577, 585, 593, 599, 603, 613, 624, 625, 664, 671, 686, 691, 701, 702, 706, 708, 713, 714, 715, 716, 717, 736, 743, 747, 750, 773, 779, 781, 795, 796, 797, 798, 799, 801], "delete_all_rpath": 625, "delete_rpath": 625, "delete_size_mismatch": 747, "deleteaninstruct": 734, "deliber": [713, 753], "delim": 761, "delimit": [598, 661, 671, 702, 710, 761], "delin": 608, "delta": [594, 631, 776], "deltalinestart": 656, "delv": [659, 796], "demand": [582, 589, 599, 671, 717, 736, 779, 799], "demangl": [595, 607, 612, 617, 632, 634, 640, 641, 646, 704, 750], "demo": [651, 694, 795], "demonstr": [631, 656, 659, 671, 695, 702, 726, 734, 750, 771, 795, 796], "denisov": 739, "denisovcamelback": 739, "denorm": [652, 702, 777], "denot": [577, 589, 599, 603, 655, 668, 671, 676, 702, 726, 777], "dens": [582, 589, 702, 734], "densemap": 602, "densemapinfo": 734, "denser": 798, "denseset": 717, "densiti": [602, 798], "deopt": [702, 755], "deopt_arg": 702, "deoptim": 755, "depart": [613, 711, 738], "departur": 736, "depend": [20, 30, 31, 32, 33, 44, 45, 46, 51, 55, 100, 102, 121, 130, 131, 132, 141, 146, 206, 215, 217, 218, 219, 220, 221, 222, 227, 229, 230, 234, 235, 236, 245, 305, 310, 315, 338, 354, 361, 370, 425, 427, 439, 440, 441, 442, 461, 462, 482, 538, 540, 552, 553, 554, 555, 568, 569, 570, 577, 578, 580, 581, 582, 583, 584, 586, 587, 589, 591, 592, 597, 599, 600, 602, 604, 608, 609, 613, 615, 616, 623, 625, 631, 636, 637, 641, 649, 650, 651, 652, 655, 659, 660, 661, 664, 666, 667, 668, 669, 671, 675, 676, 679, 680, 687, 688, 690, 692, 693, 698, 699, 701, 704, 707, 713, 714, 715, 716, 717, 718, 719, 721, 726, 733, 734, 735, 736, 737, 742, 744, 745, 747, 750, 753, 755, 756, 757, 761, 764, 765, 766, 767, 770, 771, 773, 776, 779, 794, 795, 799], "dependencegraphbuild": 658, "depict": [631, 658], "deplib": [589, 663], "deploy": [660, 690, 733, 748, 751], "deprec": [577, 582, 589, 597, 603, 608, 634, 659, 689, 708, 716, 717, 718, 721, 734, 743, 750, 761, 766, 771, 774], "depth": [97, 186, 288, 534, 582, 594, 599, 603, 622, 636, 651, 671, 686, 702, 706, 714, 732, 736, 738, 754, 759, 762, 780, 797], "deref_bytes_nod": 702, "derefer": [577, 582, 598, 669, 702, 734, 750, 779], "dereferenc": [577, 589, 665, 666, 687, 732, 734], "dereferenceable_byt": 702, "dereferenceable_or_nul": 589, "deriv": [582, 599, 602, 659, 668, 695, 699, 702, 703, 707, 732, 733, 750, 759, 760, 761, 762, 767, 773, 780, 793], "derived_ptr": 702, "derivedtyp": [662, 734, 795, 796, 797, 798, 799, 800], "desc": [582, 651, 771, 773], "descend": [608, 661, 674, 702], "descent": [794, 798, 803], "describ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 47, 48, 49, 55, 115, 142, 143, 146, 202, 237, 238, 239, 240, 245, 304, 362, 363, 370, 393, 394, 471, 474, 475, 482, 506, 507, 576, 577, 578, 579, 580, 581, 582, 586, 588, 589, 590, 591, 595, 598, 599, 602, 603, 607, 608, 609, 619, 622, 631, 633, 636, 651, 652, 654, 655, 656, 658, 659, 661, 662, 663, 665, 667, 668, 669, 670, 671, 674, 675, 680, 681, 682, 683, 686, 690, 694, 695, 696, 697, 699, 701, 702, 703, 705, 707, 708, 712, 713, 714, 715, 717, 719, 720, 721, 722, 725, 726, 727, 729, 730, 732, 733, 734, 735, 736, 739, 741, 742, 743, 745, 746, 748, 750, 751, 753, 755, 759, 760, 761, 762, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 781, 782, 794, 795, 796, 797, 798, 800, 801, 803], "descript": [1, 5, 6, 7, 8, 21, 49, 55, 60, 61, 65, 97, 115, 122, 143, 146, 150, 186, 202, 207, 239, 240, 245, 250, 251, 288, 304, 346, 362, 363, 370, 372, 373, 471, 472, 474, 475, 482, 484, 485, 486, 534, 576, 578, 579, 580, 581, 582, 585, 586, 589, 595, 597, 598, 601, 602, 607, 651, 656, 660, 661, 668, 671, 676, 680, 683, 687, 688, 695, 696, 702, 703, 714, 715, 720, 732, 733, 734, 742, 747, 748, 750, 753, 759, 760, 761, 762, 764, 769, 771, 774, 776, 800, 801, 805], "descriptor": [577, 589, 631, 701, 702, 717, 722, 750, 753, 771, 801], "deseri": 759, "deserv": [666, 702], "design": [585, 586, 595, 601, 602, 603, 604, 608, 631, 651, 654, 655, 656, 659, 661, 664, 666, 668, 670, 688, 698, 701, 702, 703, 704, 708, 711, 720, 724, 726, 732, 735, 736, 737, 739, 742, 745, 748, 750, 751, 753, 755, 756, 761, 762, 765, 768, 769, 771, 772, 773, 777, 778, 799, 802, 803], "desir": [577, 582, 586, 593, 597, 602, 603, 606, 608, 622, 663, 666, 668, 699, 702, 704, 707, 718, 719, 732, 734, 737, 739, 745, 746, 750, 751, 753, 755, 759, 760, 761, 766, 771, 773, 802], "desktop": [731, 766], "despit": [586, 599, 651, 691, 702, 736, 739, 750, 751, 755, 762, 773, 776], "dest": [702, 800], "dest1": 702, "dest2": 702, "dest_bas": 755, "dest_offset": 755, "destabil": 659, "destarglist": 702, "destin": [62, 151, 252, 344, 360, 473, 578, 579, 580, 581, 582, 591, 599, 613, 661, 663, 666, 676, 697, 702, 751, 755, 766, 771, 799, 800, 801], "destreg": 599, "destroy": [599, 661, 664, 685, 700, 702, 708, 717, 734, 771, 777], "destruct": [655, 700, 734, 750, 751, 753, 802], "destructor": [602, 652, 655, 661, 664, 702, 734, 739, 750, 773], "detail": [55, 146, 245, 370, 482, 577, 579, 580, 582, 585, 586, 590, 592, 593, 595, 597, 598, 599, 600, 601, 603, 608, 609, 622, 623, 631, 636, 637, 640, 650, 651, 652, 655, 659, 660, 661, 664, 667, 668, 669, 670, 671, 673, 687, 688, 691, 695, 696, 701, 702, 703, 704, 705, 711, 712, 714, 715, 716, 717, 719, 722, 726, 729, 732, 733, 734, 735, 736, 738, 739, 742, 743, 746, 755, 756, 757, 760, 762, 764, 766, 767, 771, 772, 773, 774, 775, 777, 778, 780, 781, 782, 795, 798, 799, 802, 803], "detect": [582, 597, 603, 608, 617, 618, 620, 623, 631, 637, 693, 702, 704, 706, 712, 714, 717, 733, 734, 741, 742, 747, 750, 751, 754, 766, 770, 774, 776, 796], "detect_leak": 704, "detecthost": 779, "detector": [702, 712, 714], "determin": [577, 582, 585, 586, 589, 594, 597, 599, 608, 609, 612, 613, 619, 631, 633, 649, 655, 656, 659, 661, 678, 679, 680, 683, 694, 695, 696, 699, 701, 702, 704, 707, 714, 715, 716, 717, 718, 719, 720, 722, 724, 729, 732, 734, 735, 741, 746, 748, 750, 751, 753, 754, 755, 756, 759, 760, 761, 765, 766, 767, 768, 771, 773, 776, 777, 794, 795, 797, 798], "determinist": [584, 585, 593, 595, 599, 613, 633, 645, 702, 704, 734, 759], "deterministicfiniteautomaton": 739, "detriment": [602, 739], "dev": [586, 601, 609, 611, 654, 659, 662, 666, 668, 670, 687, 693, 711, 718, 733, 734, 736, 739, 741, 748, 750, 755, 757, 773, 775, 800, 802], "devbuffera": 715, "devbufferb": 715, "devbufferc": 715, "devcount": 715, "devel": 744, "develop": [577, 582, 589, 592, 595, 598, 599, 600, 601, 602, 633, 645, 651, 653, 654, 660, 661, 666, 668, 669, 673, 674, 680, 688, 689, 692, 694, 696, 702, 705, 711, 712, 717, 731, 735, 737, 738, 739, 740, 741, 743, 745, 746, 750, 751, 755, 756, 757, 759, 761, 762, 765, 774, 775, 778, 780, 781, 782, 799, 804], "deviat": [599, 602, 663], "devic": [577, 580, 582, 587, 614, 621, 624, 628, 649, 689, 715, 717], "device_enqueue_symbol": 582, "device_fn": 652, "device_on": 652, "devirtu": [702, 768], "devis": 735, "devmajor": 715, "devmeet": 682, "devminor": 715, "devoid": 599, "dexonsmith": 750, "dfa": [599, 650, 739, 759], "dfapacket": 599, "dform_1": 599, "dfpreg": 771, "dfpregsclass": 771, "dfpregsregclass": 771, "dfpregsregisterclass": 771, "dgpu": 582, "dgwp_asan_default_opt": 687, "dh": 762, "di": [697, 762], "di_index": 702, "dia": [597, 636, 646], "diag": 650, "diagnos": [603, 620, 702, 770, 773], "diagnost": [602, 603, 607, 608, 609, 620, 632, 650, 696, 702, 704, 712, 734, 759, 762], "diagnosticinfooptim": 745, "diagram": [658, 681, 726, 770], "dialect": [650, 702, 710, 759], "diamond": 697, "diana": [684, 739], "diarglist": 743, "dibasictyp": [697, 750], "dibuild": [750, 801], "dice": 734, "dicompileunit": [697, 750, 801], "dict": 704, "dictat": [577, 602, 734, 749], "dictionari": [608, 702, 759], "dictionary_fil": 704, "did": [577, 582, 585, 602, 655, 659, 661, 667, 695, 702, 706, 714, 734, 736, 745, 773, 780, 796, 798, 799, 802], "didn": [599, 652, 657, 666, 667, 702, 714, 734, 750, 751, 772, 773, 795, 799], "die": [577, 622, 630, 697, 750, 781, 801], "die_offset_bas": 750, "diego": 594, "diegotf": 594, "diexpress": [582, 697, 708, 750], "dif": 732, "diff": [601, 602, 607, 622, 654, 659, 660, 671, 732, 733, 734, 736, 764, 766], "differ": [14, 98, 187, 222, 234, 236, 289, 324, 353, 422, 535, 577, 578, 579, 580, 581, 582, 583, 584, 588, 589, 590, 591, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 608, 609, 611, 612, 615, 617, 620, 622, 623, 630, 631, 633, 634, 636, 642, 643, 645, 646, 651, 653, 655, 656, 658, 659, 660, 661, 662, 663, 664, 666, 668, 671, 673, 674, 675, 676, 680, 681, 685, 691, 694, 695, 698, 699, 701, 702, 704, 705, 706, 707, 708, 711, 714, 715, 716, 717, 718, 719, 720, 722, 729, 732, 733, 734, 736, 737, 739, 742, 744, 745, 746, 747, 748, 750, 751, 753, 755, 756, 757, 759, 761, 762, 764, 766, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 780, 781, 795, 796, 797, 799, 800, 801, 802], "differenti": [601, 663, 702, 733, 737], "difficult": [577, 585, 586, 602, 651, 659, 661, 680, 681, 692, 702, 705, 709, 717, 719, 734, 736, 739, 750, 752, 760, 801], "difficulti": [738, 750], "difil": [697, 750, 801], "diflagartifici": 702, "diflagfwddecl": 702, "diflagprototyp": [702, 750], "diflagpubl": 750, "diflagvector": 702, "difwddecl": 702, "digit": [582, 603, 632, 651, 702, 712, 760], "diglobalvari": 750, "digress": 798, "dijkstra": 738, "dil": [663, 762], "dilexicalblock": 750, "diloc": [603, 697, 708, 750, 801], "dilocalvari": [697, 708, 750, 801], "dim": [0, 20, 702], "dimens": [64, 121, 153, 206, 254, 410, 427, 522, 540, 580, 582, 702], "dimension": [20, 121, 206, 427, 540, 580, 669, 715, 798], "diminish": 750, "dimitri": 748, "dindex": 771, "dinkumwar": 734, "dinod": [702, 750, 801], "dinstall_gwp_asan_stub": 687, "diploma": 741, "dir": [584, 597, 608, 617, 627, 667, 671, 690, 692, 693, 702, 704, 735, 743, 744, 750, 764], "dir1": [582, 704], "dir2": [582, 704], "dir3": 582, "dir4": 582, "dir_to_mount": 587, "direct": [41, 137, 231, 449, 563, 577, 586, 589, 596, 597, 598, 600, 601, 602, 604, 607, 608, 615, 616, 623, 631, 641, 646, 650, 651, 655, 658, 659, 661, 666, 667, 668, 669, 671, 673, 677, 681, 683, 685, 686, 688, 690, 692, 697, 700, 701, 703, 708, 713, 714, 715, 716, 717, 719, 720, 722, 724, 729, 732, 733, 734, 735, 736, 741, 743, 744, 745, 746, 750, 755, 756, 757, 759, 760, 762, 764, 765, 767, 771, 773, 774, 775, 776, 777, 779, 780, 781, 782, 795, 796, 797, 798, 799], "directedgraph": 658, "directori": [582, 584, 596, 597, 598, 599, 602, 606, 608, 613, 616, 617, 627, 634, 641, 646, 650, 652, 656, 659, 666, 670, 673, 674, 686, 688, 691, 692, 693, 694, 697, 702, 704, 708, 722, 727, 730, 734, 735, 736, 739, 743, 744, 745, 750, 756, 757, 762, 763, 764, 765, 766, 771, 772, 773, 774, 801], "dirnam": 627, "dirti": [582, 722], "dis": [607, 614, 615, 634, 671, 673, 766, 799], "disabl": [240, 363, 475, 580, 581, 582, 585, 587, 588, 593, 597, 602, 603, 604, 608, 609, 611, 617, 623, 631, 632, 633, 634, 645, 649, 651, 655, 656, 668, 671, 681, 686, 693, 694, 696, 697, 704, 713, 719, 731, 734, 744, 747, 755, 757, 764, 766, 767, 770, 772, 774, 797, 801], "disable_assert": 731, "disable_nonforc": 767, "disableencod": [761, 762], "disablelazycompil": 734, "disadvantag": [651, 698, 705, 706, 734], "disagr": [600, 601], "disagre": [600, 601, 659, 702, 748, 750], "disallow": [651, 669, 702, 753, 755], "disambigu": [585, 666, 675, 706, 713], "disappear": [664, 671, 689, 750], "disassembl": [596, 607, 634, 635, 638, 650, 671, 673, 702, 704, 734, 742], "disassembleremitt": 759, "discard": [577, 581, 594, 599, 603, 633, 645, 651, 655, 663, 671, 676, 680, 702, 734, 736, 741, 755, 782], "discharg": 666, "disclaim": [598, 659], "disclos": [746, 748], "disclosur": [659, 746], "discontigu": 726, "discop": 801, "discord": 659, "discount": 716, "discourag": [602, 651, 659, 702, 734, 746, 756], "discours": 659, "discov": [577, 599, 608, 623, 655, 668, 694, 704, 727, 750, 751, 756, 757, 797, 799], "discover": 660, "discret": 748, "discrimin": [599, 602, 646, 695, 702, 759, 776], "discriminatori": 600, "discuss": [577, 598, 600, 601, 602, 603, 631, 651, 654, 655, 656, 659, 667, 670, 671, 672, 673, 677, 680, 690, 695, 697, 702, 711, 717, 719, 722, 724, 726, 729, 733, 734, 736, 740, 746, 750, 751, 753, 755, 771, 773, 774, 780, 781, 794, 803], "disjoint": [577, 582, 585, 658, 676, 702, 706, 713, 770], "disk": [577, 582, 602, 608, 623, 657, 671, 701, 702, 704, 705, 722, 726, 727, 729, 736, 750, 756, 774, 779], "dislik": 659, "disp32": 599, "dispatch": [661, 702, 717, 734, 751, 753, 794], "dispatch1": 702, "dispatch2": [661, 702], "dispatchwidth": 631, "dispel": 669, "dispflagdefinit": 750, "dispflagdelet": 750, "dispflagelement": 750, "dispflagpur": 750, "dispflagrecurs": 750, "displac": [577, 599, 702, 761], "display": [598, 599, 600, 602, 606, 608, 613, 615, 617, 618, 622, 623, 625, 627, 629, 631, 632, 633, 634, 636, 637, 640, 641, 642, 644, 645, 651, 656, 659, 688, 695, 710, 732, 733, 745, 750, 759, 765, 771, 793], "disposit": 659, "disproportion": 750, "disregard": 748, "disrepair": 757, "disrupt": [709, 751], "dissassembl": 595, "dissemin": 748, "distanc": [634, 702, 734, 747, 777, 782], "distil": 766, "distinct": [577, 582, 585, 589, 599, 603, 619, 622, 658, 659, 661, 669, 675, 681, 687, 697, 701, 702, 718, 732, 734, 741, 747, 750, 761, 766, 767, 771, 795], "distinguish": [577, 588, 589, 593, 655, 656, 659, 675, 683, 702, 706, 718, 734, 739, 755, 756, 802], "distract": 659, "distribut": [584, 590, 598, 602, 604, 608, 631, 637, 652, 654, 657, 659, 660, 664, 670, 671, 672, 673, 692, 693, 715, 736, 743, 745, 748, 751, 762, 764, 773, 774], "distributionexampl": 595, "distributor": 748, "distringtyp": 750, "distro": [691, 693], "disturb": 757, "disubprogram": [697, 750, 801], "disubroutinetyp": [697, 750, 801], "dityp": 801, "div": [580, 599, 603, 676, 702], "divari": 702, "dive": [695, 793, 803], "diverg": [577, 582, 669, 702, 719, 798], "divers": [691, 757], "divid": [577, 582, 590, 599, 603, 608, 615, 631, 637, 652, 655, 662, 702, 730, 732, 756, 757, 760, 764, 770], "dividend": [599, 652, 702], "divis": [581, 582, 599, 676, 702, 798], "divisionbyzero": 702, "divisor": [652, 702], "django": [600, 746], "dl": [599, 717, 738, 762, 779, 780, 781, 782], "dlc": [0, 582], "dlclose": [704, 717], "dlibcxx_cxx_abi": 690, "dlibcxx_cxx_abi_include_path": 690, "dlibcxx_cxx_abi_library_path": 690, "dlibcxx_enable_shar": 690, "dlibcxx_enable_stat": 690, "dlibcxx_enable_static_abi_librari": 690, "dlibcxx_has_win32_thread_api": 690, "dlibcxx_install_head": 690, "dlibcxx_no_vcruntim": 690, "dlibcxx_use_compiler_rt": 690, "dlibcxxabi_enable_shar": 690, "dlibcxxabi_enable_stat": 690, "dlibcxxabi_libcxx_includ": 690, "dlibunwind_enable_shar": 690, "dlibunwind_enable_stat": 690, "dlibunwind_use_compiler_rt": 690, "dll": [589, 661, 690, 722, 766], "dllc": [697, 766], "dllexport": [589, 690, 702, 796, 797, 798, 799, 800, 801], "dllimport": [589, 690, 702], "dlls": [661, 690, 717], "dllstorageclass": [589, 702], "dllvm_binutils_incdir": 686, "dllvm_build_instru": 691, "dllvm_build_runtim": [667, 671, 691], "dllvm_build_stat": 587, "dllvm_config_path": 692, "dllvm_default_target_tripl": 693, "dllvm_dir": 597, "dllvm_enable_assert": [654, 671, 689, 766], "dllvm_enable_backtrac": 671, "dllvm_enable_doxygen": 597, "dllvm_enable_doxygen_qt_help": 597, "dllvm_enable_new_pass_manag": 716, "dllvm_enable_p": 693, "dllvm_enable_project": [597, 671, 736], "dllvm_enable_sphinx": 671, "dllvm_experimental_targets_to_build": 771, "dllvm_external_bar_source_dir": 597, "dllvm_external_foo_source_dir": 597, "dllvm_external_project": 597, "dllvm_include_exampl": 671, "dllvm_include_test": 671, "dllvm_integrated_crt_alloc": 597, "dllvm_libdir_suffix": 597, "dllvm_local_rpath": 671, "dllvm_optimized_tablegen": 671, "dllvm_parallel_link_job": [597, 671], "dllvm_path": 690, "dllvm_profdata_fil": 691, "dllvm_tablegen": [691, 693], "dllvm_target_arch": 693, "dllvm_targets_to_build": [597, 660, 671, 689, 693], "dllvm_use_crt_releas": 597, "dllvm_use_link": [597, 671], "dllvm_use_sanit": 667, "dllvm_use_sanitize_coverag": 667, "dllvm_use_split_dwarf": 671, "dloc": 603, "dlopen": 717, "dlsym": 796, "dmacro1": 761, "dmacro3": 761, "dmask": [0, 2, 3, 4, 9, 30, 31, 32, 33, 45, 46, 130, 131, 132, 141, 219, 220, 221, 222, 235, 236, 439, 440, 441, 442, 461, 462, 552, 553, 554, 555, 569, 570], "dmb": 586, "dmlc": 738, "dmpqrstx": 613, "dname": 651, "do": [577, 580, 581, 582, 583, 585, 586, 587, 588, 589, 595, 596, 597, 598, 599, 600, 601, 603, 604, 606, 607, 608, 613, 617, 618, 623, 625, 627, 631, 632, 633, 634, 637, 640, 641, 645, 650, 651, 652, 654, 655, 658, 659, 660, 661, 662, 663, 666, 667, 668, 671, 673, 674, 675, 676, 679, 680, 681, 687, 688, 689, 691, 692, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 709, 710, 711, 713, 715, 717, 718, 719, 720, 721, 725, 726, 729, 733, 734, 735, 736, 738, 744, 745, 748, 750, 751, 752, 753, 755, 756, 759, 761, 762, 764, 765, 766, 767, 770, 771, 773, 774, 775, 776, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "do_on": 655, "do_safepoint": 755, "do_someth": 706, "do_something_with_t": 665, "do_two": 655, "doc": [583, 597, 602, 650, 656, 662, 670, 671, 674, 691, 692, 693, 694, 702, 704, 709, 736, 739, 740, 743, 752, 764, 777, 779, 800], "dockerfil": [673, 769], "doclist": 777, "document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 577, 579, 580, 581, 585, 586, 588, 589, 590, 592, 594, 595, 597, 598, 599, 600, 607, 623, 634, 650, 651, 652, 654, 656, 658, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 685, 688, 689, 690, 691, 692, 693, 695, 696, 697, 699, 701, 702, 703, 704, 705, 707, 708, 709, 712, 713, 715, 716, 717, 720, 721, 724, 726, 729, 731, 732, 734, 736, 738, 739, 742, 743, 744, 746, 748, 750, 752, 753, 755, 756, 757, 758, 759, 760, 761, 763, 764, 766, 768, 769, 771, 772, 773, 774, 775, 776, 778, 795, 796, 801], "documentlist": 777, "documentlisttrait": 777, "dodg": 603, "doe": [222, 234, 236, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 592, 593, 595, 596, 597, 598, 599, 601, 602, 603, 608, 613, 614, 617, 620, 623, 631, 632, 633, 634, 641, 645, 646, 651, 652, 655, 657, 659, 660, 661, 662, 663, 665, 666, 668, 671, 673, 674, 676, 677, 680, 685, 686, 687, 690, 691, 692, 695, 696, 697, 698, 700, 701, 702, 705, 706, 707, 710, 712, 713, 714, 715, 716, 717, 718, 721, 722, 727, 729, 732, 733, 734, 735, 736, 737, 738, 745, 746, 747, 748, 749, 750, 751, 753, 755, 756, 760, 761, 764, 766, 767, 770, 771, 772, 774, 775, 777, 779, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803], "doesn": [582, 585, 586, 588, 591, 592, 593, 594, 598, 599, 600, 602, 603, 608, 613, 631, 651, 652, 654, 656, 659, 660, 661, 664, 666, 668, 669, 671, 674, 676, 679, 680, 683, 686, 690, 695, 696, 702, 706, 708, 713, 718, 724, 734, 736, 739, 748, 750, 751, 753, 755, 756, 757, 766, 773, 775, 777, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "dofin": 771, "dog": [651, 739], "doing": [584, 585, 592, 597, 599, 601, 602, 603, 611, 623, 628, 649, 651, 654, 659, 662, 665, 666, 668, 671, 678, 691, 692, 695, 697, 702, 705, 706, 713, 734, 746, 750, 751, 755, 756, 761, 767, 773, 774, 775, 780, 781, 793, 795, 796, 798, 801, 802], "doiniti": [704, 771, 780, 781, 782, 796, 797, 798, 799, 801], "dollar": [689, 761], "domain": [582, 599, 668, 675, 702, 751, 761, 762, 771, 802], "domin": [624, 652, 668, 702, 706, 713, 716, 734, 764, 772, 773, 799], "dominatoranalysi": 716, "dominatorset": 773, "dominatortre": [716, 739, 773], "dominatortreebas": 734, "domtreeupdat": 716, "don": [583, 585, 592, 594, 597, 598, 599, 600, 603, 606, 608, 611, 631, 632, 636, 646, 651, 652, 654, 656, 659, 660, 661, 666, 668, 671, 674, 678, 680, 689, 690, 695, 696, 701, 702, 704, 708, 709, 713, 714, 715, 716, 718, 720, 731, 732, 733, 734, 736, 744, 746, 748, 750, 752, 754, 755, 757, 765, 766, 770, 772, 773, 776, 779, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "donald": 761, "done": [0, 2, 3, 4, 577, 582, 586, 587, 593, 594, 595, 597, 599, 601, 602, 623, 649, 651, 654, 659, 661, 662, 668, 671, 676, 678, 687, 689, 690, 691, 694, 695, 699, 701, 702, 704, 705, 706, 707, 713, 714, 716, 717, 718, 732, 733, 734, 736, 744, 747, 748, 749, 750, 751, 755, 756, 759, 761, 764, 765, 766, 768, 772, 773, 774, 776, 777, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "dooneiter": 593, "door": 695, "doorbel": 582, "dootherth": 602, "dopartialredundancyelimin": 651, "dorit": [741, 770], "dosometh": [602, 751], "dosomethinginterestingwithmyapi": 704, "dot": [631, 694, 702, 733, 734, 750, 774, 775], "doubl": [581, 582, 589, 591, 599, 603, 651, 652, 653, 673, 675, 695, 702, 708, 714, 732, 734, 747, 759, 771, 777, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "doublescalarti": 702, "doubletyp": 734, "doubleword": 702, "doubli": [598, 734, 749], "doubt": [695, 709, 752, 757], "dovetail": 799, "down": [586, 588, 591, 593, 599, 600, 604, 609, 611, 651, 656, 659, 661, 669, 671, 681, 683, 695, 696, 702, 704, 713, 714, 716, 719, 731, 732, 733, 734, 736, 741, 750, 762, 765, 771, 773, 774, 778, 779, 781, 794, 797, 798, 800, 801, 802, 803], "downcast": 695, "downgrad": 757, "download": [597, 659, 660, 671, 673, 686, 688, 692, 693, 694, 702, 704, 734, 743, 744, 766, 771, 778], "download_link": 738, "download_prerequisit": 671, "downsid": [659, 704, 734], "downstream": [590, 601, 620, 659, 736, 757], "downward": 702, "dox": 600, "doxgyen": 597, "doxygen": [597, 667, 671, 673, 695, 734, 742, 760], "dozen": [666, 689, 734], "dpp": 579, "dpp16": 580, "dpp16_ctrl": [0, 1], "dpp32_ctrl": 9, "dpp64_ctrl": 9, "dpp8_sel": [0, 1], "dpp_ctrl": [3, 4, 7, 8], "dr": [577, 663], "draft": [586, 594, 600, 676, 702, 746, 750], "drag": 733, "dragonegg": [599, 659], "dram": 582, "dramat": [602, 609, 651, 671, 702, 734, 751, 796], "drastic": 756, "draw": [582, 630], "drawback": [598, 651, 659, 734, 782], "drawindex": 582, "drectv": 641, "dri": [691, 739], "drive": [595, 689, 737, 741, 748, 755], "driven": [599, 603, 651, 655, 732, 766, 771, 796, 799, 802], "driver": [582, 617, 652, 653, 686, 690, 692, 693, 704, 705, 715, 719, 735, 766, 793, 796, 797, 798, 799, 800, 801], "drop": [602, 607, 625, 627, 633, 637, 642, 644, 645, 659, 701, 702, 708, 733, 734, 750, 766, 767], "dropdown": 733, "droploc": 697, "drown": 765, "ds": [652, 773], "ds_add_f32": [0, 3, 4, 9], "ds_add_f64": 9, "ds_add_rtn_f32": [0, 3, 4, 9], "ds_add_rtn_f64": 9, "ds_add_rtn_u32": [0, 2, 3, 4, 9], "ds_add_rtn_u64": [0, 2, 3, 4, 9], "ds_add_src2_f32": [0, 3, 4], "ds_add_src2_u32": [0, 2, 3, 4], "ds_add_src2_u64": [0, 2, 3, 4], "ds_add_u32": [0, 2, 3, 4, 9, 582], "ds_add_u64": [0, 2, 3, 4, 9], "ds_and_b32": [0, 2, 3, 4, 9], "ds_and_b64": [0, 2, 3, 4, 9], "ds_and_rtn_b32": [0, 2, 3, 4, 9], "ds_and_rtn_b64": [0, 2, 3, 4, 9], "ds_and_src2_b32": [0, 2, 3, 4], "ds_and_src2_b64": [0, 2, 3, 4], "ds_append": [0, 2, 3, 4, 9], "ds_atom": 582, "ds_bpermute_b32": [0, 3, 4, 9], "ds_cmpst_b32": [0, 2, 3, 4, 9], "ds_cmpst_b64": [0, 2, 3, 4, 9], "ds_cmpst_f32": [0, 2, 3, 4, 9, 582], "ds_cmpst_f64": [0, 2, 3, 4, 9], "ds_cmpst_rtn_b32": [0, 2, 3, 4, 9], "ds_cmpst_rtn_b64": [0, 2, 3, 4, 9], "ds_cmpst_rtn_f32": [0, 2, 3, 4, 9], "ds_cmpst_rtn_f64": [0, 2, 3, 4, 9], "ds_condxchg32_rtn_b64": [0, 2, 3, 4, 9], "ds_consum": [0, 2, 3, 4, 9], "ds_dec_rtn_u32": [0, 2, 3, 4, 9], "ds_dec_rtn_u64": [0, 2, 3, 4, 9], "ds_dec_src2_u32": [0, 2, 3, 4], "ds_dec_src2_u64": [0, 2, 3, 4], "ds_dec_u32": [0, 2, 3, 4, 9], "ds_dec_u64": [0, 2, 3, 4, 9], "ds_gws_barrier": [0, 2, 3, 4, 9], "ds_gws_init": [0, 2, 3, 4, 9], "ds_gws_sema_br": [0, 2, 3, 4, 9], "ds_gws_sema_p": [0, 2, 3, 4, 9], "ds_gws_sema_release_al": [0, 2, 3, 4, 9], "ds_gws_sema_v": [0, 2, 3, 4, 9], "ds_inc_rtn_u32": [0, 2, 3, 4, 9], "ds_inc_rtn_u64": [0, 2, 3, 4, 9], "ds_inc_src2_u32": [0, 2, 3, 4], "ds_inc_src2_u64": [0, 2, 3, 4], "ds_inc_u32": [0, 2, 3, 4, 9], "ds_inc_u64": [0, 2, 3, 4, 9], "ds_load": 582, "ds_max_f32": [0, 2, 3, 4, 9], "ds_max_f64": [0, 2, 3, 4, 9], "ds_max_i32": [0, 2, 3, 4, 9], "ds_max_i64": [0, 2, 3, 4, 9], "ds_max_rtn_f32": [0, 2, 3, 4, 9], "ds_max_rtn_f64": [0, 2, 3, 4, 9], "ds_max_rtn_i32": [0, 2, 3, 4, 9], "ds_max_rtn_i64": [0, 2, 3, 4, 9], "ds_max_rtn_u32": [0, 2, 3, 4, 9], "ds_max_rtn_u64": [0, 2, 3, 4, 9], "ds_max_src2_f32": [0, 2, 3, 4], "ds_max_src2_f64": [0, 2, 3, 4], "ds_max_src2_i32": [0, 2, 3, 4], "ds_max_src2_i64": [0, 2, 3, 4], "ds_max_src2_u32": [0, 2, 3, 4], "ds_max_src2_u64": [0, 2, 3, 4], "ds_max_u32": [0, 2, 3, 4, 9], "ds_max_u64": [0, 2, 3, 4, 9], "ds_min_f32": [0, 2, 3, 4, 9], "ds_min_f64": [0, 2, 3, 4, 9], "ds_min_i32": [0, 2, 3, 4, 9], "ds_min_i64": [0, 2, 3, 4, 9], "ds_min_rtn_f32": [0, 2, 3, 4, 9], "ds_min_rtn_f64": [0, 2, 3, 4, 9, 582], "ds_min_rtn_i32": [0, 2, 3, 4, 9], "ds_min_rtn_i64": [0, 2, 3, 4, 9], "ds_min_rtn_u32": [0, 2, 3, 4, 9], "ds_min_rtn_u64": [0, 2, 3, 4, 9], "ds_min_src2_f32": [0, 2, 3, 4], "ds_min_src2_f64": [0, 2, 3, 4], "ds_min_src2_i32": [0, 2, 3, 4], "ds_min_src2_i64": [0, 2, 3, 4], "ds_min_src2_u32": [0, 2, 3, 4], "ds_min_src2_u64": [0, 2, 3, 4], "ds_min_u32": [0, 2, 3, 4, 9], "ds_min_u64": [0, 2, 3, 4, 9], "ds_mskor_b32": [0, 2, 3, 4, 9], "ds_mskor_b64": [0, 2, 3, 4, 9], "ds_mskor_rtn_b32": [0, 2, 3, 4, 9], "ds_mskor_rtn_b64": [0, 2, 3, 4, 9], "ds_nop": [0, 2, 3, 4, 9], "ds_or_b32": [0, 2, 3, 4, 9], "ds_or_b64": [0, 2, 3, 4, 9], "ds_or_rtn_b32": [0, 2, 3, 4, 9], "ds_or_rtn_b64": [0, 2, 3, 4, 9], "ds_or_src2_b32": [0, 2, 3, 4], "ds_or_src2_b64": [0, 2, 3, 4], "ds_ordered_count": [0, 2, 3, 4], "ds_permute_b32": [0, 3, 4, 9], "ds_read2_b32": [0, 2, 3, 4, 9], "ds_read2_b64": [0, 2, 3, 4, 9], "ds_read2st64_b32": [0, 2, 3, 4, 9], "ds_read2st64_b64": [0, 2, 3, 4, 9], "ds_read_addtid_b32": [0, 4, 9], "ds_read_b128": [0, 2, 3, 4, 9], "ds_read_b32": [0, 2, 3, 4, 9], "ds_read_b64": [0, 2, 3, 4, 9], "ds_read_b96": [0, 2, 3, 4, 9], "ds_read_i16": [0, 2, 3, 4, 9], "ds_read_i8": [0, 2, 3, 4, 9], "ds_read_i8_d16": [0, 4, 9], "ds_read_i8_d16_hi": [0, 4, 9], "ds_read_u16": [0, 2, 3, 4, 9], "ds_read_u16_d16": [0, 4, 9], "ds_read_u16_d16_hi": [0, 4, 9], "ds_read_u8": [0, 2, 3, 4, 9], "ds_read_u8_d16": [0, 4, 9], "ds_read_u8_d16_hi": [0, 4, 9], "ds_rsub_rtn_u32": [0, 2, 3, 4, 9], "ds_rsub_rtn_u64": [0, 2, 3, 4, 9], "ds_rsub_src2_u32": [0, 2, 3, 4], "ds_rsub_src2_u64": [0, 2, 3, 4], "ds_rsub_u32": [0, 2, 3, 4, 9], "ds_rsub_u64": [0, 2, 3, 4, 9], "ds_store": 582, "ds_sub_rtn_u32": [0, 2, 3, 4, 9], "ds_sub_rtn_u64": [0, 2, 3, 4, 9], "ds_sub_src2_u32": [0, 2, 3, 4], "ds_sub_src2_u64": [0, 2, 3, 4], "ds_sub_u32": [0, 2, 3, 4, 9], "ds_sub_u64": [0, 2, 3, 4, 9], "ds_swizzle_b32": [0, 2, 3, 4, 9, 580], "ds_wrap_rtn_b32": [0, 2, 3, 4, 9], "ds_write2_b32": [0, 2, 3, 4, 9], "ds_write2_b64": [0, 2, 3, 4, 9], "ds_write2st64_b32": [0, 2, 3, 4, 9], "ds_write2st64_b64": [0, 2, 3, 4, 9], "ds_write_addtid_b32": [0, 4, 9], "ds_write_b128": [0, 2, 3, 4, 9], "ds_write_b16": [0, 2, 3, 4, 9], "ds_write_b16_d16_hi": [0, 4, 9], "ds_write_b32": [0, 2, 3, 4, 9], "ds_write_b64": [0, 2, 3, 4, 9], "ds_write_b8": [0, 2, 3, 4, 9], "ds_write_b8_d16_hi": [0, 4, 9], "ds_write_b96": [0, 2, 3, 4, 9], "ds_write_src2_b32": [0, 2, 3, 4], "ds_write_src2_b64": [0, 2, 3, 4, 582], "ds_wrxchg2_rtn_b32": [0, 2, 3, 4, 9], "ds_wrxchg2_rtn_b64": [0, 2, 3, 4, 9], "ds_wrxchg2st64_rtn_b32": [0, 2, 3, 4, 9], "ds_wrxchg2st64_rtn_b64": [0, 2, 3, 4, 9], "ds_wrxchg_rtn_b32": [0, 2, 3, 4, 9], "ds_wrxchg_rtn_b64": [0, 2, 3, 4, 9], "ds_xor_b32": [0, 2, 3, 4, 9], "ds_xor_b64": [0, 2, 3, 4, 9], "ds_xor_rtn_b32": [0, 2, 3, 4, 9], "ds_xor_rtn_b64": [0, 2, 3, 4, 9], "ds_xor_src2_b32": [0, 2, 3, 4], "ds_xor_src2_b64": [0, 2, 3, 4], "dsa": 703, "dsc": 775, "dse": [586, 703], "dsls": 762, "dso": 596, "dso_loc": [589, 702, 750], "dso_local_equival": 702, "dso_path": 609, "dso_preempt": [589, 702], "dsoloc": 702, "dsos": 586, "dsps": 577, "dst": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 240, 363, 475, 578, 599, 699, 761, 762, 771], "dst0": [0, 2, 3, 4, 9], "dst1": [0, 2, 3, 4, 9], "dst_sel": [0, 3, 4, 7, 8, 9, 582], "dst_unus": [0, 3, 4, 7, 8, 9, 582], "dstindex": 771, "dstkey": 701, "dsym": [597, 606, 622, 634, 646], "dsymtab": 641, "dsymutil": [607, 622], "dt": [641, 739, 773], "dtest_suite_profile_gener": 764, "dtest_suite_profile_us": 764, "dtest_suite_run_typ": 764, "dtest_suite_subdir": 764, "dtor": [664, 702, 750], "dtrace": 595, "dual": 701, "duck": 734, "due": [577, 581, 582, 585, 591, 594, 595, 596, 597, 599, 603, 631, 652, 655, 657, 659, 660, 661, 665, 666, 668, 671, 674, 676, 689, 692, 696, 702, 703, 705, 706, 708, 714, 716, 718, 727, 734, 736, 744, 747, 748, 751, 755, 757, 761, 767, 768, 776, 781, 795, 796], "dumb": 802, "dummi": [599, 656, 664, 708, 732, 766, 771], "dummy_main": 667, "dummytargetmachin": 771, "dump": [582, 589, 593, 599, 603, 606, 607, 615, 617, 623, 632, 633, 634, 637, 640, 641, 650, 687, 696, 701, 717, 722, 734, 743, 750, 759, 762, 773, 777, 795, 796, 797, 801], "dumpabl": 773, "dumpattr": 759, "dumper": [607, 637, 650, 750], "dumpmymapdoc": 777, "duo": 582, "duplic": [577, 585, 592, 595, 598, 599, 602, 603, 613, 623, 641, 651, 655, 656, 659, 663, 666, 697, 701, 702, 703, 705, 714, 717, 727, 730, 734, 750, 755, 759, 762, 770, 794], "durat": [585, 599, 750, 773, 774, 776, 779], "dure": [577, 582, 584, 590, 591, 593, 597, 598, 599, 601, 623, 631, 637, 651, 652, 654, 655, 659, 660, 661, 662, 665, 666, 670, 671, 677, 687, 691, 694, 699, 701, 702, 704, 705, 706, 714, 719, 722, 733, 734, 736, 738, 741, 743, 744, 745, 751, 753, 755, 765, 766, 771, 777, 795], "dvariabl": 597, "dw_addr_amdgpu_region": 582, "dw_addr_llvm_const": [577, 582], "dw_addr_llvm_gener": 577, "dw_addr_llvm_glob": [577, 582], "dw_addr_llvm_group": [577, 582], "dw_addr_llvm_hi_us": 577, "dw_addr_llvm_lo_us": 577, "dw_addr_llvm_priv": [577, 582], "dw_addr_non": [577, 582], "dw_apple_property_assign": 750, "dw_apple_property_atom": 750, "dw_apple_property_class": 750, "dw_apple_property_copi": 750, "dw_apple_property_gett": 750, "dw_apple_property_nonatom": 750, "dw_apple_property_nul": 750, "dw_apple_property_null_resett": 750, "dw_apple_property_readon": 750, "dw_apple_property_readwrit": 750, "dw_apple_property_retain": 750, "dw_apple_property_sett": 750, "dw_apple_property_strong": 750, "dw_apple_property_unsafe_unretain": 750, "dw_apple_property_weak": 750, "dw_aspace_": 577, "dw_aspace_amdgpu_gener": 582, "dw_aspace_amdgpu_loc": 582, "dw_aspace_amdgpu_private_lan": 582, "dw_aspace_amdgpu_private_wav": 582, "dw_aspace_amdgpu_region": 582, "dw_aspace_non": [577, 582], "dw_at_addr_bas": 577, "dw_at_address_class": [577, 582], "dw_at_address_spac": 577, "dw_at_align": 750, "dw_at_apple_properti": 750, "dw_at_apple_property_attribut": 750, "dw_at_apple_property_gett": 750, "dw_at_apple_property_sett": 750, "dw_at_artifici": 750, "dw_at_byte_s": 582, "dw_at_call_data_loc": 577, "dw_at_call_data_valu": 577, "dw_at_call_site_parameter_valu": 702, "dw_at_call_valu": 577, "dw_at_const_valu": 577, "dw_at_data_loc": 577, "dw_at_data_member_loc": 577, "dw_at_decl_lin": 750, "dw_at_declar": 750, "dw_at_delet": 750, "dw_at_element": 750, "dw_at_encod": 582, "dw_at_entry_pc": 750, "dw_at_export_symbol": 702, "dw_at_frame_bas": [577, 582], "dw_at_high_pc": 750, "dw_at_languag": 577, "dw_at_llvm_active_lan": 577, "dw_at_llvm_address_spac": 577, "dw_at_llvm_augment": 577, "dw_at_llvm_lan": 577, "dw_at_llvm_lane_pc": 577, "dw_at_llvm_proc": 577, "dw_at_llvm_vector_s": 577, "dw_at_loc": [577, 582, 603, 750], "dw_at_loclists_bas": 577, "dw_at_low_pc": 750, "dw_at_mips_linkage_nam": 750, "dw_at_nam": [582, 603, 622, 750], "dw_at_rang": 750, "dw_at_return_addr": 577, "dw_at_static_link": 577, "dw_at_string_length": 750, "dw_at_typ": 750, "dw_at_use_loc": 577, "dw_at_vtable_elem_loc": 577, "dw_ate_address": [577, 702], "dw_ate_boolean": [577, 702], "dw_ate_float": [702, 801], "dw_ate_hi_us": 577, "dw_ate_lo_us": 577, "dw_ate_sign": [577, 702, 750], "dw_ate_signed_char": [577, 702], "dw_ate_unsign": [577, 582, 697, 702], "dw_ate_unsigned_char": [577, 702], "dw_cfa_aspace_def_cfa": 577, "dw_cfa_def_cfa": 577, "dw_cfa_def_cfa_express": 577, "dw_cfa_def_cfa_offset": 577, "dw_cfa_def_cfa_offset_sf": 577, "dw_cfa_def_cfa_regist": 577, "dw_cfa_def_cfa_sf": 577, "dw_cfa_express": 577, "dw_cfa_llvm_def_aspace_cfa": 577, "dw_cfa_llvm_def_aspace_cfa_sf": 577, "dw_cfa_nop": 577, "dw_cfa_offset": 577, "dw_cfa_offset_extend": 577, "dw_cfa_offset_extended_sf": 577, "dw_cfa_offset_extended_uf": 577, "dw_cfa_offset_uf": 577, "dw_cfa_regist": 577, "dw_cfa_restor": 577, "dw_cfa_restore_extend": 577, "dw_cfa_same_valu": 577, "dw_cfa_undefin": 577, "dw_cfa_val_express": 577, "dw_cfa_val_offset": 577, "dw_cfa_val_offset_sf": 577, "dw_cfa_val_offset_uf": 577, "dw_form_": 750, "dw_form_addr": 750, "dw_form_block": 577, "dw_form_data1": 750, "dw_form_data2": 750, "dw_form_data4": 750, "dw_form_exprloc": 577, "dw_form_flag_pres": 750, "dw_form_line_strp": 577, "dw_form_ref1": 750, "dw_form_ref2": [577, 750], "dw_form_ref4": [577, 750], "dw_form_ref8": 750, "dw_form_ref_addr": 577, "dw_form_ref_udata": 750, "dw_form_sec_offset": [577, 603], "dw_form_strp": [577, 603, 750], "dw_form_strp_sup": 577, "dw_form_strx1": 750, "dw_form_udata": 577, "dw_form_xxx": 750, "dw_lang_c": [697, 801], "dw_lang_c99": [702, 750], "dw_lang_llvm_hip": 577, "dw_lnct_llvm_is_md5": 577, "dw_lnct_llvm_sourc": [577, 582], "dw_lnct_md5": 577, "dw_lnct_path": 577, "dw_macinfo_defin": 702, "dw_macinfo_start_fil": 702, "dw_macinfo_undef": 702, "dw_op_": 577, "dw_op_add": 577, "dw_op_addr": [577, 582, 750], "dw_op_addrx": [577, 582], "dw_op_aspace_bref31": 577, "dw_op_aspace_breg0": 577, "dw_op_aspace_breg1": 577, "dw_op_aspace_bregx": 577, "dw_op_bit_piec": [577, 702], "dw_op_bra": 577, "dw_op_breg": [577, 702], "dw_op_breg0": 577, "dw_op_breg1": 577, "dw_op_breg31": 577, "dw_op_bregx": [577, 702], "dw_op_cal": 577, "dw_op_call2": 577, "dw_op_call4": 577, "dw_op_call_frame_cfa": 577, "dw_op_call_ref": [577, 582], "dw_op_const": 577, "dw_op_const1": 577, "dw_op_const1u": 577, "dw_op_const2": 577, "dw_op_const2u": 577, "dw_op_const4": 577, "dw_op_const4u": 577, "dw_op_const8": 577, "dw_op_const8u": 577, "dw_op_const_typ": 577, "dw_op_constu": [577, 702], "dw_op_constx": 577, "dw_op_convert": [577, 702], "dw_op_deref": [577, 702], "dw_op_deref_s": 577, "dw_op_deref_typ": [577, 582], "dw_op_drop": 577, "dw_op_dup": 577, "dw_op_entry_valu": [577, 702], "dw_op_eq": 577, "dw_op_fbreg": [577, 750], "dw_op_form_tls_address": 577, "dw_op_g": 577, "dw_op_gt": 577, "dw_op_implicit": 577, "dw_op_implicit_point": [577, 702], "dw_op_implicit_valu": 577, "dw_op_l": 577, "dw_op_lit": 577, "dw_op_lit0": 577, "dw_op_lit1": 577, "dw_op_lit31": 577, "dw_op_llvm_": 577, "dw_op_llvm_arg": [702, 750], "dw_op_llvm_aspace_bregx": 577, "dw_op_llvm_aspace_implicit_point": 577, "dw_op_llvm_bit_offset": 577, "dw_op_llvm_call_frame_entry_reg": 577, "dw_op_llvm_convert": 702, "dw_op_llvm_entry_valu": 702, "dw_op_llvm_extend": [577, 582], "dw_op_llvm_form_aspace_address": [577, 582], "dw_op_llvm_frag": 702, "dw_op_llvm_implicit_aspace_point": 577, "dw_op_llvm_implicit_point": 702, "dw_op_llvm_offset": [577, 582], "dw_op_llvm_offset_constu": 577, "dw_op_llvm_offset_uconst": 577, "dw_op_llvm_piece_end": 577, "dw_op_llvm_push_lan": [577, 582], "dw_op_llvm_select_bit_piec": [577, 582], "dw_op_llvm_tag_offset": 702, "dw_op_llvm_undefin": [577, 582], "dw_op_lt": 577, "dw_op_minus": [577, 702], "dw_op_n": 577, "dw_op_nop": 577, "dw_op_ov": [577, 702], "dw_op_pick": 577, "dw_op_piec": 577, "dw_op_plus": [577, 702, 750], "dw_op_plus_uconst": [577, 702, 750], "dw_op_push_object_address": [577, 702], "dw_op_reg": 577, "dw_op_reg0": 577, "dw_op_reg1": 577, "dw_op_reg31": 577, "dw_op_regval_typ": [577, 582], "dw_op_regx": [577, 582], "dw_op_reinterpret": 577, "dw_op_rot": 577, "dw_op_skip": 577, "dw_op_stack_valu": [577, 582, 702, 750], "dw_op_swap": [577, 702], "dw_op_xderef": [577, 702], "dw_op_xderef_s": 577, "dw_op_xderef_typ": 577, "dw_opreg": 577, "dw_tag": 750, "dw_tag_apple_properti": 750, "dw_tag_array_typ": [702, 750], "dw_tag_atomic_typ": [702, 750], "dw_tag_base_typ": [577, 582, 702, 750], "dw_tag_call_site_paramet": 577, "dw_tag_class_typ": [702, 750], "dw_tag_compile_unit": 577, "dw_tag_const_typ": [702, 750], "dw_tag_dwarf_procedur": [577, 582], "dw_tag_entry_point": 577, "dw_tag_enumeration_typ": [702, 750], "dw_tag_file_typ": 750, "dw_tag_formal_paramet": 577, "dw_tag_friend": 702, "dw_tag_gnu_template_param_pack": 702, "dw_tag_gnu_template_template_param": 702, "dw_tag_imported_modul": 702, "dw_tag_inherit": 702, "dw_tag_inlined_subroutin": [577, 750], "dw_tag_interface_typ": 750, "dw_tag_label": 750, "dw_tag_llvm_address_class_typ": 577, "dw_tag_memb": [702, 750], "dw_tag_namelist": 750, "dw_tag_namespac": 750, "dw_tag_packed_typ": 750, "dw_tag_pointer_typ": [702, 750], "dw_tag_ptr_to_member_typ": [577, 702, 750], "dw_tag_reference_typ": [702, 750], "dw_tag_restrict_typ": [702, 750], "dw_tag_set_typ": 750, "dw_tag_shared_typ": 750, "dw_tag_string_typ": 750, "dw_tag_structure_typ": [702, 750], "dw_tag_subprogram": [577, 750], "dw_tag_subrange_typ": 750, "dw_tag_subroutine_typ": 750, "dw_tag_template_value_paramet": 702, "dw_tag_typedef": [702, 750], "dw_tag_union_typ": [702, 750], "dw_tag_unspecified_typ": [702, 750], "dw_tag_vari": [577, 750], "dw_tag_volatile_typ": [702, 750], "dw_tag_xxx": 750, "dw_virtuality_pure_virtu": 702, "dwarf": [599, 607, 633, 634, 646, 656, 657, 661, 668, 671, 697, 702, 703, 705, 720, 734, 753, 769, 771], "dwarf2": 801, "dwarfdebug": 750, "dwarfdump": [603, 606, 607, 630, 750], "dwarfencod": 661, "dwarfnumb": 771, "dwarfregnum": 771, "dwell": 795, "dwo": [577, 633, 671], "dwoid": 702, "dword": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 241, 246, 247, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 312, 313, 314, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 342, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 367, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 479, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 580, 581, 582, 634], "dwp": 646, "dx": 762, "dx10": 582, "dx10_clamp": 582, "dyld": 707, "dyldinfo": 632, "dylib": [634, 701, 717, 731, 766, 779], "dyn": [582, 640, 641, 655], "dyn_cast": [602, 695, 742, 759, 771], "dyn_cast_or_nul": 734, "dyn_switch": 602, "dynam": [577, 582, 587, 589, 593, 595, 604, 609, 611, 617, 625, 627, 631, 632, 634, 640, 641, 649, 655, 657, 663, 664, 666, 668, 669, 676, 687, 695, 701, 704, 706, 707, 717, 722, 732, 734, 735, 749, 750, 751, 753, 755, 767, 768, 774, 777, 796, 798], "dynamic_cast": [602, 695, 734, 799, 800, 801], "dynamic_shared_point": 582, "dynamiclibrari": 781, "dynamiclibrarysearchgener": [717, 779, 780, 781, 782], "dynamicsharedpoint": 582, "dynstr": 582, "dynsym": 582, "e1": 582, "e2": 582, "e3": 631, "e_entri": 582, "e_id": 582, "e_machin": 582, "e_typ": 582, "ea_r": 599, "eabi": [609, 692], "eacc": 766, "each": [30, 31, 32, 33, 44, 45, 46, 55, 130, 131, 132, 140, 141, 146, 219, 220, 221, 222, 234, 235, 236, 240, 245, 363, 370, 439, 440, 441, 442, 461, 462, 475, 482, 552, 553, 554, 555, 568, 569, 570, 577, 580, 581, 582, 584, 585, 586, 588, 589, 590, 593, 595, 597, 598, 599, 600, 601, 602, 603, 606, 608, 609, 611, 613, 616, 617, 618, 622, 623, 624, 627, 628, 629, 631, 632, 633, 634, 636, 637, 640, 641, 642, 644, 645, 646, 649, 651, 652, 655, 656, 658, 659, 661, 662, 664, 666, 667, 668, 669, 670, 671, 674, 675, 676, 680, 681, 682, 683, 687, 694, 695, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 724, 725, 726, 729, 730, 731, 734, 735, 736, 739, 741, 744, 745, 746, 747, 748, 750, 751, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 771, 773, 774, 775, 776, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801], "ead": 748, "eager": [717, 734, 780], "eao": 734, "earli": [637, 652, 655, 674, 685, 692, 702, 704, 708, 715, 718, 719, 722, 734, 751, 771, 773, 799], "earlier": [577, 582, 586, 589, 601, 602, 603, 655, 656, 659, 666, 674, 681, 686, 690, 701, 717, 718, 726, 736, 740, 750, 751, 761, 771, 779, 795, 796], "earliest": 603, "earlyclobb": 708, "earlycs": 666, "earlyout": 759, "earn": 736, "eas": [671, 689, 702, 755], "easi": [589, 593, 595, 597, 599, 602, 603, 608, 659, 668, 671, 686, 693, 695, 701, 702, 704, 709, 714, 717, 734, 736, 737, 739, 744, 750, 751, 752, 757, 759, 761, 765, 766, 773, 777, 780, 781, 793, 794, 795, 796, 797, 798, 799, 802, 803], "easier": [577, 582, 583, 585, 586, 592, 594, 599, 600, 602, 603, 616, 654, 655, 657, 659, 662, 664, 668, 671, 693, 696, 702, 706, 713, 715, 716, 717, 732, 733, 734, 736, 739, 744, 759, 760, 761, 762, 766, 773, 794, 795, 799, 801], "easiest": [586, 678, 687, 692, 709, 752, 771, 773, 774, 796, 802], "easili": [577, 592, 599, 651, 658, 666, 668, 696, 711, 713, 717, 732, 734, 745, 748, 750, 751, 753, 755, 756, 759, 760, 766, 773, 777, 779, 800], "eat": [651, 793, 794, 795, 796, 797, 798, 799, 800, 801], "eatomtypecuoffset": 750, "eatomtypedieoffset": 750, "eatomtypedietag": 750, "eatomtypenameflag": 750, "eatomtypenul": 750, "eatomtypetag": 750, "eatomtypetypeflag": 750, "eax": [599, 603, 631, 634, 663, 702, 708, 750, 751, 761, 762, 771], "eb": 631, "ebnf": 776, "ebp": [599, 661, 762], "ebx": [599, 663, 762], "ec": [636, 734, 800], "echo": [587, 608, 623, 646, 671, 674, 709, 736, 752], "eckel": 734, "ecma": 722, "econom": 600, "ecosystem": [730, 734, 736, 757], "ecsubstreams": 722, "ecx": [599, 663, 702, 761, 762], "ed": [586, 592, 602, 652, 734, 748, 751, 769], "edg": [590, 593, 599, 602, 603, 652, 658, 661, 663, 668, 670, 701, 702, 704, 706, 736, 741, 761, 773, 774, 775], "edi": [599, 603, 708, 751, 762], "edit": [582, 597, 607, 636, 690, 722, 733, 734, 739], "editor": [602, 659, 671, 709, 752, 757], "edu": [587, 738, 751], "educ": 600, "edx": [599, 631, 702, 751, 761, 762], "ee": 581, "eeee": 631, "eeeer": 631, "ef_amdgpu_feature_sramecc_": 582, "ef_amdgpu_feature_sramecc_any_v4": 582, "ef_amdgpu_feature_sramecc_off_v4": 582, "ef_amdgpu_feature_sramecc_on_v4": 582, "ef_amdgpu_feature_sramecc_unsupported_v4": 582, "ef_amdgpu_feature_sramecc_v3": 582, "ef_amdgpu_feature_sramecc_v4": 582, "ef_amdgpu_feature_trap_handler_v2": 582, "ef_amdgpu_feature_xnack_": 582, "ef_amdgpu_feature_xnack_any_v4": 582, "ef_amdgpu_feature_xnack_off_v4": 582, "ef_amdgpu_feature_xnack_on_v4": 582, "ef_amdgpu_feature_xnack_unsupported_v4": 582, "ef_amdgpu_feature_xnack_v2": 582, "ef_amdgpu_feature_xnack_v3": 582, "ef_amdgpu_feature_xnack_v4": 582, "ef_amdgpu_mach_amdgcn_gfx1010": 582, "ef_amdgpu_mach_amdgcn_gfx1011": 582, "ef_amdgpu_mach_amdgcn_gfx1012": 582, "ef_amdgpu_mach_amdgcn_gfx1013": 582, "ef_amdgpu_mach_amdgcn_gfx1030": 582, "ef_amdgpu_mach_amdgcn_gfx1031": 582, "ef_amdgpu_mach_amdgcn_gfx1032": 582, "ef_amdgpu_mach_amdgcn_gfx1033": 582, "ef_amdgpu_mach_amdgcn_gfx1034": 582, "ef_amdgpu_mach_amdgcn_gfx1035": 582, "ef_amdgpu_mach_amdgcn_gfx600": 582, "ef_amdgpu_mach_amdgcn_gfx601": 582, "ef_amdgpu_mach_amdgcn_gfx602": 582, "ef_amdgpu_mach_amdgcn_gfx700": 582, "ef_amdgpu_mach_amdgcn_gfx701": 582, "ef_amdgpu_mach_amdgcn_gfx702": 582, "ef_amdgpu_mach_amdgcn_gfx703": 582, "ef_amdgpu_mach_amdgcn_gfx704": 582, "ef_amdgpu_mach_amdgcn_gfx705": 582, "ef_amdgpu_mach_amdgcn_gfx801": 582, "ef_amdgpu_mach_amdgcn_gfx802": 582, "ef_amdgpu_mach_amdgcn_gfx803": 582, "ef_amdgpu_mach_amdgcn_gfx805": 582, "ef_amdgpu_mach_amdgcn_gfx810": 582, "ef_amdgpu_mach_amdgcn_gfx900": 582, "ef_amdgpu_mach_amdgcn_gfx902": 582, "ef_amdgpu_mach_amdgcn_gfx904": 582, "ef_amdgpu_mach_amdgcn_gfx906": 582, "ef_amdgpu_mach_amdgcn_gfx908": 582, "ef_amdgpu_mach_amdgcn_gfx909": 582, "ef_amdgpu_mach_amdgcn_gfx90a": 582, "ef_amdgpu_mach_amdgcn_gfx90c": 582, "ef_amdgpu_mach_non": 582, "ef_amdgpu_mach_r600_bart": 582, "ef_amdgpu_mach_r600_caico": 582, "ef_amdgpu_mach_r600_cayman": 582, "ef_amdgpu_mach_r600_cedar": 582, "ef_amdgpu_mach_r600_cypress": 582, "ef_amdgpu_mach_r600_junip": 582, "ef_amdgpu_mach_r600_r600": 582, "ef_amdgpu_mach_r600_r630": 582, "ef_amdgpu_mach_r600_redwood": 582, "ef_amdgpu_mach_r600_rs880": 582, "ef_amdgpu_mach_r600_rv670": 582, "ef_amdgpu_mach_r600_rv710": 582, "ef_amdgpu_mach_r600_rv730": 582, "ef_amdgpu_mach_r600_rv770": 582, "ef_amdgpu_mach_r600_sumo": 582, "ef_amdgpu_mach_r600_turk": 582, "ef_amdgpu_mach_xxx": 582, "effect": [577, 580, 582, 585, 589, 597, 599, 602, 603, 608, 609, 622, 623, 631, 633, 634, 640, 641, 652, 659, 668, 671, 672, 676, 677, 689, 697, 702, 706, 710, 732, 734, 736, 741, 747, 750, 751, 755, 756, 761, 766, 767, 771, 773, 774, 781, 797, 798], "effici": [577, 581, 582, 589, 599, 602, 650, 659, 664, 668, 670, 671, 695, 701, 702, 704, 710, 717, 732, 734, 741, 747, 750, 751, 755, 756, 759, 766, 768, 773, 794, 796], "effort": [582, 602, 659, 662, 666, 697, 702, 707, 716, 732, 743, 750, 751, 753, 756, 757, 774, 795], "eflag": [708, 750, 761, 762], "eg": [740, 747], "egregi": [600, 659], "egrep": 671, "eh": [597, 611, 622, 655, 701, 702, 707, 771], "eh_fram": [642, 661], "eh_label": 708, "eh_return": 661, "eha": 702, "ehashfunctiondjb": 750, "ehcleanup": 655, "ehcontguard": 743, "ehobj": 661, "ehptr": 661, "ehselector": 655, "ei_abivers": 582, "ei_class": 582, "ei_data": 582, "ei_osabi": 582, "eieio": 702, "eight": [599, 608, 702, 761], "einval": 766, "eip": 762, "eisdir": 766, "either": [20, 33, 44, 46, 66, 101, 115, 202, 222, 234, 236, 304, 374, 426, 441, 462, 471, 487, 539, 554, 568, 570, 576, 577, 580, 581, 582, 585, 586, 588, 589, 593, 595, 597, 599, 601, 602, 608, 609, 613, 616, 617, 623, 631, 633, 645, 646, 649, 651, 654, 655, 659, 661, 662, 663, 666, 668, 669, 671, 675, 676, 679, 680, 686, 687, 696, 697, 701, 702, 703, 704, 706, 707, 708, 713, 714, 715, 716, 717, 719, 721, 722, 724, 729, 732, 733, 734, 736, 739, 746, 750, 751, 753, 755, 757, 761, 762, 764, 765, 766, 767, 768, 771, 773, 774, 775, 776, 793, 794, 795, 797, 801, 802], "eject": 757, "elabor": [734, 751], "elaps": 631, "elect": [601, 659, 757], "electr": 687, "eleg": [794, 796, 797, 802], "elem0": 702, "elem_func": 750, "element": [30, 31, 32, 33, 44, 45, 46, 130, 131, 132, 140, 141, 219, 220, 221, 222, 234, 235, 236, 439, 440, 441, 442, 461, 462, 552, 553, 554, 555, 568, 569, 570, 577, 580, 582, 585, 588, 589, 598, 599, 603, 631, 655, 658, 662, 668, 675, 676, 680, 701, 703, 709, 714, 715, 718, 732, 734, 741, 750, 752, 755, 759, 760, 761, 767, 768, 770, 771, 776, 777, 779], "element_s": 702, "elementtyp": 702, "elementwis": 676, "elf": [577, 589, 599, 632, 634, 640, 642, 644, 646, 652, 653, 657, 671, 701, 702, 707, 717, 747, 750, 753, 766, 774], "elf32": 633, "elf64": [633, 775], "elf64_rela": 582, "elf_cgprofil": 663, "elf_word": 663, "elf_x86_64": 701, "elf_xword": 663, "elfabiversion_amdgpu_hsa_v2": 582, "elfabiversion_amdgpu_hsa_v3": 582, "elfabiversion_amdgpu_hsa_v4": 582, "elfabiversion_amdgpu_mesa3d": 582, "elfabiversion_amdgpu_p": 582, "elfclass32": 582, "elfclass64": 582, "elfdata2lsb": 582, "elflinkgraphbuild": 701, "elfosabi_amdgpu_hsa": 582, "elfosabi_amdgpu_mesa3d": 582, "elfosabi_amdgpu_p": 582, "elfosabi_non": 582, "elfv2": 653, "eli": 652, "elid": [617, 655, 668, 700], "elig": [631, 655, 732], "elimin": [577, 582, 585, 593, 594, 599, 602, 609, 651, 655, 659, 664, 666, 668, 671, 678, 686, 701, 702, 703, 708, 715, 719, 734, 750, 751, 755, 771, 781, 794, 796, 797, 798, 799], "eliminatecallframepseudoinstr": 771, "eliminateframeindex": 771, "elis": 655, "els": [582, 599, 600, 601, 603, 611, 622, 623, 629, 651, 652, 655, 656, 659, 662, 673, 674, 686, 687, 691, 697, 702, 704, 706, 708, 713, 714, 715, 716, 732, 733, 734, 736, 751, 752, 755, 756, 757, 761, 766, 767, 770, 771, 777, 780, 793, 794, 795, 796, 798, 799, 800, 801, 802], "elsebb": [797, 798, 799, 800, 801], "elseif": 582, "elsev": [797, 798, 799, 800, 801], "elsewher": [580, 581, 582, 651, 656, 659, 701, 734, 755, 759, 771], "elt": [676, 702], "eltsizeparam": [589, 702], "eltti": [589, 801], "em": 692, "em_amdgpu": 582, "emac": [602, 671, 762], "email": [586, 600, 601, 654, 659, 670, 671, 688, 694, 703, 718, 733, 746, 748, 757, 802], "emb": [577, 582, 589, 597, 606, 702, 750, 802], "embargo": 748, "embed": [577, 589, 606, 633, 656, 659, 667, 668, 681, 692, 702, 721, 722, 724, 730, 732, 734, 741, 750, 751, 761, 797, 798], "embodi": 760, "embrac": 659, "emerg": 657, "emergenc": [582, 748], "emergent": 659, "emerson": 739, "emersonconcern": 739, "emiss": [606, 668, 671, 702, 750, 753, 771, 799], "emissionkind": [697, 702, 750], "emit": [577, 582, 586, 588, 589, 593, 597, 602, 603, 606, 607, 609, 611, 622, 631, 633, 634, 636, 637, 645, 650, 651, 652, 655, 656, 657, 661, 663, 664, 666, 669, 671, 673, 690, 696, 699, 701, 702, 703, 707, 708, 715, 720, 722, 727, 729, 732, 734, 743, 750, 751, 753, 755, 759, 761, 767, 771, 773, 775, 780, 782, 794, 795, 797, 798, 799, 801, 802], "emit_22": 771, "emitaddressmod": 760, "emitalign": 668, "emitbyt": 771, "emitcal": 734, "emitconst": 771, "emitconstantpool": 771, "emitconstpooladdress": 771, "emitepilogu": 771, "emitexternalsymboladdress": 771, "emitfnstart": 599, "emitfunctionstub": 771, "emitglobaladdress": 771, "emitinstruct": [599, 771], "emitint32": 668, "emitjumptableaddress": 771, "emitjumptableinfo": 771, "emitlabel": 599, "emitlabelplusoffset": 668, "emitleadingf": 586, "emitloadlink": 586, "emitloc": 801, "emitmaskedatomiccmpxchgintrins": 586, "emitmaskedatomicrmwintrins": 586, "emitnam": 602, "emitobject": 707, "emitprologu": [661, 771], "emitpseudoexpansionlow": 759, "emitsourcefilehead": 760, "emitstacksizesect": 599, "emitstorecondit": 586, "emitsymbolattribut": 599, "emitt": [650, 657, 702, 745, 759, 760, 797], "emittrailingf": 586, "emitvalu": 599, "emmc": 689, "emphas": [602, 709, 752, 761], "employ": [702, 734, 737, 741, 748, 751, 761], "empti": [240, 363, 475, 577, 582, 597, 598, 602, 608, 623, 646, 650, 651, 655, 659, 661, 668, 671, 701, 702, 704, 708, 714, 724, 734, 736, 750, 751, 755, 760, 761, 766, 767, 771, 777, 794, 795, 797, 801], "empty_nod": 702, "empty_subregsset": 771, "emul": [599, 611, 631, 662, 666, 692, 702, 717, 734, 736], "en": [597, 602, 626, 674, 702], "enabl": [240, 363, 475, 577, 580, 581, 582, 584, 588, 595, 597, 598, 599, 602, 603, 604, 606, 608, 609, 611, 612, 613, 614, 617, 621, 623, 624, 628, 631, 633, 634, 637, 641, 645, 649, 650, 651, 652, 654, 655, 656, 657, 659, 664, 665, 666, 667, 668, 671, 678, 679, 685, 686, 687, 692, 697, 701, 704, 705, 706, 710, 713, 716, 717, 719, 731, 732, 734, 736, 739, 741, 743, 747, 749, 750, 755, 757, 760, 762, 764, 766, 767, 770, 771, 773, 774, 775, 777, 779, 780, 781, 796, 800], "enable_dx10_clamp": 582, "enable_exception_address_watch": 582, "enable_exception_fp_denorm": 582, "enable_exception_fp_denormal_sourc": 582, "enable_exception_ieee_754_fp": 582, "enable_exception_ieee_754_fp_division_by_zero": 582, "enable_exception_ieee_754_fp_inexact": 582, "enable_exception_ieee_754_fp_invalid_oper": 582, "enable_exception_ieee_754_fp_overflow": 582, "enable_exception_ieee_754_fp_underflow": 582, "enable_exception_int_divide_bi": 582, "enable_exception_int_divide_by_zero": 582, "enable_exception_memori": 582, "enable_ieee_mod": 582, "enable_if": 695, "enable_mem_ord": 582, "enable_optim": 731, "enable_private_seg": 582, "enable_sgpr_": 582, "enable_sgpr_dispatch_id": 582, "enable_sgpr_dispatch_ptr": 582, "enable_sgpr_flat_scratch": 582, "enable_sgpr_flat_scratch_init": 582, "enable_sgpr_kernarg": 582, "enable_sgpr_kernarg_segment_ptr": 582, "enable_sgpr_priv": 582, "enable_sgpr_private_seg": 582, "enable_sgpr_private_segment_buff": 582, "enable_sgpr_private_segment_s": 582, "enable_sgpr_queue_ptr": 582, "enable_sgpr_workgroup": 582, "enable_sgpr_workgroup_id": 582, "enable_sgpr_workgroup_id_i": 582, "enable_sgpr_workgroup_id_x": 582, "enable_sgpr_workgroup_id_z": 582, "enable_sgpr_workgroup_info": 582, "enable_tg_split": 582, "enable_trap_handl": 582, "enable_vgpr": 582, "enable_vgpr_workitem_id": 582, "enable_wavefront_size32": 582, "enable_wgp_mod": 582, "enc": 759, "encapsul": [582, 695, 698, 702, 734, 741], "enclos": [577, 580, 582, 589, 603, 606, 646, 655, 708, 734, 753, 761, 766, 801], "encnorm": 761, "encod": [121, 206, 427, 540, 581, 582, 586, 588, 609, 611, 615, 619, 631, 637, 653, 655, 661, 663, 668, 675, 697, 702, 714, 730, 741, 742, 750, 753, 755, 759, 761, 762, 764, 768, 769, 771, 776, 777, 799, 801], "encodecompactunwindregisterswithoutfram": 599, "encodingbyhwmod": 761, "encodinginfo": 761, "encompass": [689, 698, 757], "encount": [577, 582, 589, 599, 603, 618, 632, 661, 666, 692, 702, 721, 734, 736, 771, 775, 780], "encourag": [592, 595, 600, 601, 602, 659, 670, 671, 694, 696, 701, 732, 734, 736, 737, 739, 747, 802, 803], "end": [577, 581, 582, 584, 585, 588, 589, 592, 593, 594, 595, 597, 599, 600, 601, 603, 606, 613, 614, 620, 623, 627, 631, 633, 636, 644, 651, 652, 656, 659, 661, 663, 665, 666, 668, 671, 673, 680, 687, 689, 691, 693, 694, 695, 697, 701, 703, 704, 705, 706, 709, 712, 713, 714, 716, 717, 718, 719, 722, 726, 732, 733, 735, 736, 744, 745, 746, 748, 751, 752, 753, 756, 757, 759, 760, 761, 762, 765, 766, 769, 770, 771, 773, 774, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "end_amd_kernel_code_t": 582, "end_amdgpu_metadata": 582, "end_amdhsa_kernel": 582, "endcod": 602, "endcond": [797, 798, 799, 800, 801], "endexpr": [797, 798, 799, 800, 801], "endforeach": 598, "endfunct": 598, "endia": 702, "endian": [577, 582, 589, 599, 680, 701, 702, 730, 745, 750, 769, 771, 776], "endif": [582, 598, 602, 651, 652, 656, 687, 704, 756, 759, 761, 772, 779, 780, 781, 782, 796, 797, 798, 799, 800, 801, 802], "endl": 800, "endloop": [797, 798, 799, 800, 801], "endmacro": 598, "endors": 659, "endsess": [779, 780, 781, 782], "endur": 659, "enforc": [586, 599, 602, 603, 631, 651, 659, 668, 671, 681, 702, 734, 736, 743, 746, 747, 753], "engag": [601, 659], "engin": [616, 653, 658, 664, 669, 703, 704, 714, 732, 736, 739, 743, 751, 769, 795, 797, 802, 803], "enginebuild": [707, 781], "english": 602, "enhanc": [602, 653, 659, 750, 769, 770, 773, 795, 796, 797, 798, 799, 801, 802], "enian": 577, "enjoy": 688, "enoent": 766, "enough": [577, 586, 592, 597, 599, 601, 602, 623, 631, 636, 651, 659, 666, 669, 681, 687, 694, 697, 701, 702, 710, 714, 734, 735, 749, 750, 753, 756, 757, 766, 771, 773, 779, 794, 797, 801], "enqueu": 582, "enqueue_kernel": 582, "enrich": 741, "ensu": [584, 771], "ensur": [577, 582, 585, 586, 589, 591, 596, 597, 599, 600, 601, 602, 603, 615, 616, 631, 636, 649, 651, 654, 659, 661, 663, 664, 665, 666, 668, 671, 678, 687, 690, 694, 697, 701, 702, 706, 716, 717, 729, 732, 733, 734, 736, 747, 748, 750, 751, 753, 755, 766, 770, 771, 772, 773, 775, 798, 799, 801], "enter": [582, 589, 593, 597, 599, 608, 655, 661, 666, 671, 694, 702, 706, 713, 717, 733, 734, 750, 751, 775, 776, 779, 794, 795, 796], "entir": [577, 582, 585, 586, 588, 589, 599, 601, 602, 603, 608, 613, 615, 617, 622, 636, 644, 651, 652, 655, 659, 666, 668, 669, 673, 676, 680, 681, 696, 701, 702, 704, 706, 713, 715, 717, 719, 722, 725, 726, 727, 729, 730, 732, 734, 747, 750, 751, 755, 761, 764, 765, 766, 767, 770, 771, 773, 774, 777, 795, 796, 802], "entireti": [659, 727, 748, 755], "entiti": [581, 589, 602, 702, 727, 734, 741, 748, 753, 761], "ento": 703, "entomolog": 703, "entosa": 703, "entranc": 702, "entri": [585, 589, 590, 597, 599, 603, 617, 620, 622, 623, 630, 631, 632, 634, 635, 637, 640, 641, 642, 655, 656, 661, 662, 663, 665, 666, 668, 669, 671, 676, 677, 695, 697, 700, 701, 703, 704, 706, 707, 708, 709, 713, 714, 715, 717, 724, 725, 729, 733, 734, 736, 741, 743, 745, 747, 748, 750, 751, 752, 755, 756, 759, 768, 771, 773, 774, 776, 777, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801], "entry_arg": 776, "entry_point": 582, "entrypoint": [655, 702, 704, 743], "entrysym": 717, "entrytoken": 599, "enum": [583, 585, 599, 602, 636, 650, 651, 661, 662, 680, 695, 697, 698, 699, 701, 702, 721, 722, 727, 729, 734, 743, 750, 759, 762, 771, 777, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805], "enumattr": 650, "enumcas": 777, "enumer": [579, 581, 589, 599, 636, 650, 651, 659, 668, 702, 706, 714, 722, 727, 729, 734, 747, 750, 751, 760, 761, 771, 776, 777], "env": 744, "enviro": 769, "environ": [577, 586, 597, 599, 602, 603, 608, 612, 617, 646, 653, 660, 663, 668, 671, 686, 687, 690, 701, 717, 731, 732, 734, 747, 748, 756, 764, 774, 775, 796], "environment": [701, 702], "envis": 737, "envp": 657, "eof": [603, 704, 761, 776, 793, 794, 795, 796, 797, 798, 799, 800, 801], "eor": [702, 708], "ep_earlyasposs": 773, "ep_fulllinktimeoptimizationlast": 773, "epc": [779, 780, 781, 782], "epcindirectionutil": [781, 782], "epciu": [781, 782], "epilog": [702, 771], "epilogu": [668, 702, 750, 767, 771], "episod": 797, "epoch": 777, "epsilon": 623, "eptr": 702, "eq": [589, 655, 702, 708, 715, 761], "equal": [577, 580, 581, 582, 585, 589, 590, 591, 599, 608, 636, 637, 651, 652, 661, 664, 666, 671, 675, 676, 687, 695, 701, 702, 714, 717, 722, 725, 726, 729, 734, 751, 761, 771, 794, 797, 798, 799, 800, 801], "equal_rang": 734, "equival": [577, 580, 582, 586, 588, 589, 597, 598, 599, 602, 603, 606, 611, 613, 617, 619, 631, 633, 634, 637, 639, 640, 641, 642, 645, 651, 652, 661, 663, 668, 669, 675, 676, 678, 680, 692, 703, 708, 714, 715, 716, 717, 720, 732, 734, 740, 747, 750, 761, 780, 802], "eras": [586, 734, 750, 797, 798, 799, 800, 801], "erasefrompar": [734, 771, 795, 796, 797, 798, 799, 800, 801], "erasur": 734, "ere": 603, "eref": 653, "erefrm": 653, "ericsson": 702, "erlang": 702, "erol": 764, "err": [600, 601, 702, 715, 717, 734, 748, 772, 773, 779, 780, 781, 782, 795, 796, 797, 798, 799, 800, 801], "err2": 734, "errat": 697, "errata": 653, "errc": 734, "errc_": 766, "errc_eno": 766, "errcod": 766, "errno": [585, 702, 770], "erron": [651, 671, 702], "error": [577, 581, 582, 585, 593, 597, 598, 599, 603, 604, 606, 608, 609, 611, 613, 614, 615, 616, 617, 618, 621, 623, 624, 625, 627, 628, 631, 633, 635, 640, 641, 642, 644, 645, 646, 649, 650, 651, 652, 659, 661, 662, 663, 667, 668, 671, 686, 687, 690, 692, 693, 694, 696, 697, 702, 703, 704, 705, 706, 712, 715, 716, 717, 732, 735, 738, 742, 744, 745, 759, 761, 762, 766, 771, 773, 774, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "error_cod": 800, "error_exitcod": 704, "errorasoutparamet": 734, "errorcodetoerror": 734, "errorhandl": 779, "errorinfo": 734, "errorlist": 734, "errorloc": 760, "errorortoexpect": 734, "errortoerrorcod": 734, "es": [582, 632, 695, 701, 702, 706, 708, 713, 717, 773, 779, 780, 781, 782], "es_gs_lds_siz": 582, "escal": [659, 748], "escap": [585, 603, 608, 633, 645, 661, 668, 702, 705, 708, 710, 761, 766, 798], "eschnett": 738, "escudo": 747, "esgsldssiz": 582, "esi": [599, 708, 751, 762], "esp": [599, 603, 762], "especi": [577, 586, 591, 597, 600, 601, 602, 608, 623, 631, 637, 651, 652, 659, 660, 666, 671, 689, 701, 702, 703, 706, 714, 716, 718, 732, 734, 735, 741, 750, 751, 752, 756, 757, 761, 771, 779], "espresso": 765, "essenc": [659, 751], "essenti": [586, 589, 601, 631, 649, 668, 692, 711, 714, 718, 734, 736, 737, 747, 750, 751, 761, 771], "establish": [599, 655, 657, 661, 666, 668, 702, 717, 736, 751, 755, 761, 771], "estim": [590, 631, 701, 714, 741, 770], "et": 695, "et_dyn": 582, "et_rel": 582, "etc": [49, 143, 239, 362, 474, 582, 584, 585, 586, 589, 594, 597, 599, 602, 603, 604, 622, 631, 636, 650, 654, 655, 659, 660, 668, 669, 670, 671, 673, 680, 691, 693, 694, 698, 701, 702, 703, 704, 705, 708, 713, 714, 717, 719, 722, 725, 731, 732, 733, 736, 742, 744, 745, 746, 747, 748, 750, 751, 756, 757, 759, 760, 761, 762, 764, 767, 769, 771, 773, 774, 775, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "ethnic": 600, "eu": 582, "eurollvm": 667, "european": 741, "evalu": [581, 582, 595, 597, 598, 603, 656, 662, 668, 669, 674, 676, 700, 702, 704, 714, 715, 717, 741, 748, 751, 761, 771, 794, 795, 796, 797, 798, 799, 800, 801, 802], "even": [577, 581, 582, 585, 587, 589, 590, 594, 595, 599, 600, 601, 602, 603, 606, 608, 611, 619, 632, 633, 636, 645, 652, 655, 659, 660, 665, 666, 671, 675, 683, 689, 691, 695, 697, 701, 702, 704, 705, 706, 709, 710, 714, 716, 717, 720, 726, 727, 730, 733, 734, 736, 739, 755, 756, 757, 759, 761, 762, 765, 766, 770, 773, 777, 779, 780, 781, 796, 797, 798, 799, 802], "event": [597, 600, 631, 638, 701, 704, 711, 734, 746, 747, 753, 755, 774, 775, 776, 778], "event_s": 776, "eventu": [583, 603, 659, 661, 675, 683, 695, 700, 702, 704, 706, 713, 732, 750, 751, 755, 765, 779, 797], "ever": [582, 585, 602, 659, 674, 702, 725, 734, 759, 780, 781, 802], "evergreen": 582, "everi": [577, 582, 585, 586, 588, 589, 590, 591, 593, 595, 598, 599, 601, 603, 608, 617, 623, 631, 633, 637, 649, 651, 655, 656, 659, 661, 663, 664, 666, 668, 670, 674, 675, 688, 689, 694, 695, 696, 697, 701, 702, 703, 704, 706, 708, 711, 712, 713, 714, 715, 717, 720, 721, 726, 729, 732, 733, 734, 736, 744, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 768, 772, 773, 776, 780, 794, 796, 797, 799, 801, 802], "everybodi": 601, "everyon": [659, 746, 802], "everyth": [586, 593, 595, 598, 599, 651, 652, 654, 669, 671, 672, 673, 686, 689, 691, 693, 694, 702, 715, 718, 736, 757, 766, 773, 780, 794, 795, 797, 798], "everywher": [697, 713, 714, 766, 777, 796], "evex": [650, 759], "evex2vex": 650, "evex2vexoverrid": 761, "evex_w1_vex_w0": 761, "evid": [739, 751, 757], "evidenc": 669, "evil": [588, 734, 762], "evl": 702, "evlmask": 702, "evolut": [706, 773], "evolutionari": 704, "evolv": [577, 592, 600, 659, 705], "evt": 675, "ex": [651, 659, 694, 699, 744, 757], "ex2": 715, "exact": [577, 580, 582, 585, 586, 588, 589, 597, 602, 603, 608, 622, 627, 631, 637, 651, 655, 659, 661, 663, 668, 671, 676, 681, 687, 695, 697, 701, 702, 705, 708, 714, 719, 720, 722, 726, 727, 732, 733, 734, 737, 745, 746, 750, 751, 755, 756, 759, 760, 761, 765, 771, 773, 775, 777, 796], "exact_artifact_path": 704, "exactmatch": 702, "examin": [577, 593, 599, 617, 636, 655, 694, 702, 707, 724, 750, 751, 755, 761, 766, 771, 779, 780], "exampl": [50, 88, 144, 174, 241, 278, 367, 479, 572, 579, 580, 581, 584, 585, 586, 587, 589, 590, 591, 592, 593, 595, 597, 598, 599, 601, 602, 603, 604, 619, 620, 631, 633, 634, 636, 642, 645, 649, 651, 652, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 674, 675, 676, 677, 680, 681, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 703, 706, 708, 710, 713, 714, 715, 716, 717, 718, 720, 721, 722, 726, 727, 731, 732, 733, 735, 736, 737, 739, 741, 742, 744, 745, 747, 748, 750, 751, 753, 755, 756, 759, 760, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "exampletest": 608, "exceed": [55, 115, 146, 202, 245, 304, 370, 471, 482, 576, 577, 580, 582, 602, 702, 747, 750, 751], "excel": [585, 598, 664, 671, 711, 734, 771], "except": [577, 578, 579, 580, 582, 585, 586, 588, 589, 595, 597, 599, 600, 603, 608, 609, 611, 614, 615, 618, 633, 645, 651, 652, 653, 655, 659, 663, 664, 666, 669, 675, 676, 679, 687, 690, 701, 706, 708, 712, 714, 715, 716, 717, 719, 722, 734, 736, 742, 743, 750, 753, 756, 760, 761, 766, 767, 771, 773, 777, 779, 780, 781, 782, 795, 796, 798, 799, 802, 803], "excerpt": 715, "excess": [602, 603, 609, 611, 704], "exchang": [671, 734, 747], "exchange2_": 738, "exchange2_r": 738, "excis": 702, "excit": [659, 694, 802], "exclam": 702, "exclud": [577, 587, 594, 599, 603, 604, 608, 613, 622, 631, 633, 636, 637, 650, 659, 674, 699, 702, 739, 745, 767], "exclus": [586, 599, 629, 651, 702, 717, 755, 761, 768], "exclusionari": 600, "excp_en": 582, "excp_en_msb": 582, "exctyp": 661, "exctype1": 661, "exctypen": 661, "excus": [592, 600], "exe": [607, 646, 673, 688, 690, 722, 730, 743, 766, 801], "exec": [10, 11, 12, 13, 74, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 147, 158, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 181, 182, 184, 185, 246, 262, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 283, 284, 286, 287, 307, 308, 312, 313, 319, 320, 321, 322, 323, 342, 346, 347, 348, 349, 351, 352, 389, 390, 395, 398, 399, 402, 403, 404, 405, 413, 414, 417, 418, 419, 421, 502, 503, 508, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 525, 526, 529, 530, 531, 533, 580, 582, 587, 604, 704], "exec_hi": 581, "exec_lo": 581, "exec_mask_32": 582, "exec_mask_64": 582, "exec_tim": 764, "execinfo": 687, "execut": [61, 251, 372, 485, 577, 581, 585, 586, 590, 591, 593, 596, 598, 599, 602, 604, 606, 607, 609, 613, 617, 618, 623, 625, 632, 633, 634, 637, 640, 641, 642, 644, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 663, 665, 666, 668, 671, 672, 673, 674, 678, 680, 687, 692, 696, 702, 703, 704, 706, 707, 716, 717, 719, 722, 732, 735, 741, 743, 748, 749, 750, 751, 753, 755, 756, 759, 760, 764, 765, 767, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780, 781, 794, 795, 796, 797, 798, 799, 801, 802], "executable_format_error": 734, "executeprogramandwait": 756, "executionengin": [599, 657, 671, 701, 717, 734, 739, 779, 780, 781, 782], "executionsess": [701, 717, 779, 780, 781, 782], "executionutil": [779, 780, 781, 782], "executorprocesscontrol": [779, 780, 781, 782], "execv": 756, "execz": [10, 11, 12, 13, 56, 80, 81, 82, 83, 84, 85, 86, 87, 89, 92, 94, 95, 147, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 181, 182, 184, 246, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 283, 284, 286, 307, 308, 312, 313, 319, 320, 321, 322, 323, 342, 347, 348, 349, 351, 352, 395, 398, 399, 402, 403, 404, 405, 413, 414, 417, 421, 508, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 525, 526, 529, 533], "exedepsfix": 683, "exedomain": 761, "exeext": 766, "exegesi": [607, 650], "exempt": 602, "exercis": [667, 747, 755, 766, 779, 802], "exhaust": [595, 599, 600, 602, 666, 668, 671, 680, 734, 747], "exhibit": [586, 593, 702, 751], "exig": 734, "exist": [577, 580, 582, 586, 589, 594, 595, 597, 598, 599, 601, 602, 603, 606, 608, 609, 613, 617, 621, 623, 631, 632, 636, 637, 652, 655, 659, 661, 662, 663, 666, 668, 669, 673, 674, 680, 681, 683, 686, 688, 696, 697, 700, 701, 702, 704, 706, 708, 712, 713, 716, 717, 722, 727, 730, 732, 733, 734, 735, 736, 738, 739, 740, 741, 743, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 760, 761, 762, 766, 767, 769, 771, 772, 777, 779, 795, 796, 797, 798, 800, 801, 802], "exit": [577, 582, 590, 594, 599, 629, 634, 657, 661, 664, 666, 671, 674, 702, 704, 706, 714, 715, 717, 734, 736, 741, 750, 751, 765, 767, 773, 774, 775, 776, 781, 782, 797, 799, 800, 801, 802], "exit5": 715, "exitcod": 608, "exitcond": [702, 767], "exitonerr": [701, 717, 734, 796, 797, 798, 799, 800, 801], "exitonerror": [796, 797, 798, 799, 800, 801], "exlus": 747, "exn": [655, 702], "exp": [88, 174, 278, 572, 591, 770], "exp0": 764, "exp1": 764, "exp2": [764, 770], "exp_cnt": [115, 202, 304, 471, 576], "expand": [577, 583, 586, 594, 599, 602, 608, 615, 617, 640, 641, 650, 656, 659, 662, 664, 675, 690, 697, 698, 714, 733, 736, 739, 748, 750, 761, 762, 766, 774, 777], "expandatomicrmwinir": 586, "expandinlineasm": 771, "expandop": 662, "expans": [586, 598, 599, 617, 650, 656, 666, 680, 698, 702, 704, 708, 771], "expansionregiontag": 656, "expcnt": [115, 202, 304, 471, 576, 582], "expcnt_sat": [115, 202, 304, 471, 576], "expect": [577, 581, 582, 585, 586, 587, 588, 589, 590, 592, 595, 598, 599, 601, 602, 603, 608, 617, 631, 651, 655, 659, 665, 666, 668, 669, 670, 671, 673, 676, 680, 698, 701, 704, 706, 712, 713, 714, 721, 725, 729, 732, 734, 739, 740, 745, 747, 748, 749, 750, 751, 753, 754, 755, 756, 759, 761, 764, 765, 766, 772, 773, 776, 777, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "expected_v": 702, "expectedtoerroror": 734, "expens": [586, 595, 597, 602, 631, 651, 652, 661, 665, 677, 680, 683, 702, 704, 714, 716, 732, 734, 751, 771, 773], "expensive_check": 602, "experi": [577, 597, 600, 601, 689, 697, 709, 713, 714, 739, 750, 755, 764, 779, 780, 796, 803], "experienc": 593, "experiment": [582, 596, 597, 659, 662, 688, 704, 708, 739, 742, 751, 755, 757], "expert": 748, "expertis": [701, 737], "expir": [736, 748], "explain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 580, 581, 582, 585, 588, 597, 599, 601, 602, 603, 613, 631, 650, 659, 660, 664, 702, 706, 714, 733, 734, 739, 748, 749, 757, 769, 773, 774, 776, 799, 803], "explan": [595, 597, 660, 664, 671, 695, 702, 714, 746], "explanatori": [659, 722], "explicit": [577, 582, 584, 585, 586, 595, 597, 599, 600, 601, 602, 603, 623, 637, 651, 652, 655, 657, 658, 659, 663, 664, 665, 666, 668, 669, 671, 674, 676, 680, 695, 700, 702, 703, 704, 707, 708, 714, 715, 716, 717, 732, 733, 734, 736, 740, 741, 746, 750, 751, 757, 759, 761, 765, 767, 770, 772, 773, 779, 795, 797, 798, 799, 800, 801, 802], "exploit": [665, 741, 751, 796], "explor": [623, 655, 733, 734, 748, 755, 774], "expon": [581, 702], "exponenti": [651, 676, 702, 732], "export": [88, 97, 115, 174, 186, 202, 278, 288, 304, 471, 534, 572, 576, 580, 582, 585, 595, 597, 599, 634, 636, 641, 651, 657, 671, 686, 694, 697, 702, 705, 717, 730, 736, 743, 744, 782, 796, 798], "exportsymbol": 702, "expos": [577, 582, 585, 586, 593, 599, 602, 608, 636, 651, 668, 671, 702, 705, 716, 717, 732, 734, 751, 755, 759, 773, 799], "exposesreturnstwic": 708, "exposit": 702, "expr": [581, 603, 624, 650, 657, 701, 702, 739, 761, 794, 797, 798, 799, 800, 801], "expr0lh": 656, "expr0rh": 656, "expr1lh": 656, "expr1rh": 656, "exprast": [782, 794, 795, 796, 797, 798, 799, 800, 801], "express": [49, 55, 115, 143, 146, 202, 239, 245, 304, 362, 370, 471, 474, 482, 576, 580, 585, 591, 599, 600, 601, 602, 603, 608, 617, 619, 622, 624, 631, 633, 636, 645, 650, 651, 655, 662, 664, 666, 668, 669, 671, 679, 701, 703, 704, 706, 708, 717, 734, 739, 745, 750, 753, 759, 766, 771, 773, 776, 777, 779, 793, 796, 798, 799, 800, 801, 802], "exprloc": 577, "exprprec": [794, 795, 796, 797, 798, 799, 800, 801], "exprproc": 577, "exprsymbol": [796, 797, 798, 799], "ext": [588, 702, 773], "extbinari": [637, 638], "extend": [577, 580, 581, 586, 596, 602, 603, 608, 623, 633, 645, 651, 658, 663, 666, 668, 671, 676, 695, 701, 702, 717, 730, 734, 736, 741, 751, 754, 755, 761, 762, 769, 771, 779, 780, 793, 794, 796, 802, 803, 804], "extens": [582, 586, 596, 597, 599, 601, 602, 606, 608, 609, 617, 626, 637, 653, 659, 661, 662, 664, 666, 668, 670, 671, 675, 685, 701, 702, 709, 712, 714, 732, 734, 737, 739, 740, 742, 743, 744, 751, 753, 755, 756, 759, 761, 769, 770, 771, 794, 798, 799, 805], "extent": [659, 668, 669, 702, 739], "exterior": 755, "extern": [577, 582, 588, 589, 596, 597, 599, 606, 611, 613, 632, 636, 646, 652, 659, 666, 676, 686, 687, 689, 692, 701, 702, 704, 705, 707, 711, 714, 715, 717, 720, 731, 734, 738, 739, 744, 745, 747, 751, 755, 757, 761, 768, 770, 771, 772, 773, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "extern_weak": [589, 702], "external_symbol": 701, "externallinkag": [795, 796, 797, 798, 799, 800, 801], "externally_initi": [589, 702], "externallyiniti": 702, "externalstorag": 651, "extra": [577, 582, 589, 591, 597, 598, 601, 602, 636, 651, 660, 661, 666, 667, 671, 692, 693, 696, 701, 702, 704, 706, 708, 712, 714, 718, 726, 732, 734, 736, 739, 743, 744, 745, 746, 749, 751, 755, 757, 759, 764], "extra_sourc": 598, "extract": [599, 603, 607, 613, 629, 633, 656, 661, 673, 676, 680, 681, 734, 750, 751, 759, 760, 761, 762, 766, 771, 774], "extract_subreg": 708, "extract_subvector": 599, "extractel": 588, "extractloop": 732, "extrem": [585, 586, 589, 593, 599, 659, 665, 671, 687, 699, 702, 704, 734, 750, 757, 771, 773, 781, 799, 804], "exynosm3model": 771, "f0": [631, 702, 761, 771], "f00ba": 674, "f1": [669, 702, 714, 715, 761, 771], "f107": 715, "f108": 715, "f110": 715, "f128": [702, 771], "f16": [4, 47, 51, 237, 305, 310, 315, 338, 361, 393, 506, 578, 580, 581, 702], "f16x2": [0, 1, 3, 4, 7, 8, 9], "f16x4": [8, 9], "f1f2": 714, "f2": [669, 702, 714, 715, 761, 771], "f2_1": 771, "f2_2": 771, "f3": [715, 761, 771], "f31": [702, 771], "f32": [0, 1, 2, 3, 4, 7, 8, 9, 48, 51, 142, 238, 305, 310, 315, 338, 361, 394, 507, 578, 580, 581, 599, 652, 675, 697, 702, 715, 771], "f32x16": [8, 9], "f32x2": [0, 2, 9], "f32x32": [8, 9], "f32x4": [8, 9], "f3_1": 771, "f3_12": 771, "f3_2": 771, "f3_3": 771, "f4": 715, "f4rc": 599, "f5": 715, "f64": [0, 2, 9, 580, 581, 599, 702, 715, 771], "f64x2": [0, 2], "f64x4": 9, "f80": 702, "f88": 715, "f89": 715, "f90": 715, "f91": 715, "f92": 715, "f93": 715, "f934": 771, "f94": 715, "f95": 715, "f96": 715, "f97": 715, "f98": 715, "f99": 715, "fa": [581, 599], "fab": 770, "face": [602, 666, 749, 751, 756, 759, 773], "facil": [577, 585, 602, 608, 651, 664, 668, 673, 680, 711, 735, 736, 737, 750, 756, 760, 779], "facilit": [596, 602, 659, 702, 734, 735, 741, 750, 777], "fact": [577, 585, 594, 599, 601, 602, 631, 651, 652, 655, 659, 661, 664, 666, 669, 671, 695, 702, 703, 713, 717, 734, 741, 746, 751, 754, 761, 773, 781, 796, 798, 799, 802], "fact0": 714, "fact1": 714, "factor": [577, 599, 602, 659, 702, 724, 734, 741, 747, 748, 761, 762, 767, 770], "factori": [602, 680, 732, 734], "fadd": [583, 599, 662, 675, 715, 771, 795, 796, 797, 799], "fail": [582, 586, 594, 597, 602, 603, 604, 608, 611, 613, 637, 650, 651, 655, 659, 661, 665, 671, 673, 674, 675, 680, 687, 689, 696, 701, 702, 717, 733, 734, 736, 744, 747, 748, 750, 751, 754, 756, 757, 761, 765, 766, 770, 779, 780, 795], "failedisel": 681, "failmateri": 780, "failtkind": 665, "failur": [577, 593, 594, 601, 603, 604, 608, 632, 637, 654, 659, 671, 673, 685, 688, 689, 696, 701, 702, 704, 717, 719, 734, 736, 742, 744, 745, 747, 750, 751, 765, 766, 770, 773, 777], "failure_ord": 586, "fair": [585, 586, 601, 658, 664, 666, 675, 687, 696, 718, 734, 747, 771, 794, 797, 798], "faith": 661, "fake": 611, "falkormodel": 771, "falkorwr_1vxvy_2cyc": 771, "falkorwr_2vxvy_2cyc": 771, "fall": [586, 590, 602, 603, 642, 646, 651, 655, 668, 680, 687, 702, 706, 717, 732, 734, 748, 751, 755, 757, 771, 796, 797, 798, 799, 800, 801], "fallback": [589, 646, 668, 680, 685, 702, 747, 751, 767], "fallible_iter": 734, "falliblechilditer": 734, "fallthrough": [596, 702, 751], "fals": [582, 585, 591, 593, 602, 603, 604, 608, 611, 617, 623, 637, 646, 650, 651, 655, 656, 664, 671, 676, 687, 693, 695, 697, 699, 702, 704, 705, 706, 708, 714, 719, 722, 732, 734, 747, 750, 754, 759, 760, 761, 771, 773, 774, 781, 795, 796, 797, 798, 799, 800, 801], "false_branch_weight": 591, "falsebr": 750, "falsedest": 702, "fam": 716, "famili": [582, 600, 650, 701, 702, 734, 743, 750, 761, 802], "familiar": [577, 582, 599, 601, 636, 652, 654, 661, 666, 671, 675, 695, 701, 714, 715, 773, 779, 797, 801], "fan": 691, "fanci": 765, "fancier": [709, 773], "fancyaa": 773, "fancyobject": 751, "faq": [659, 702, 802], "far": [577, 585, 598, 651, 662, 701, 702, 711, 721, 722, 726, 729, 734, 737, 748, 750, 751, 773, 775, 780, 781, 794, 795, 798, 799, 802], "far16": 721, "far32": 721, "faraway": 602, "farm": 608, "farpoint": 729, "farpointer32": 729, "fashion": [601, 662, 663, 702, 737, 751, 771], "fast": [599, 602, 609, 650, 652, 666, 674, 681, 683, 685, 689, 701, 704, 709, 712, 714, 730, 734, 736, 747, 750, 751, 752, 759, 771, 773, 799, 803], "fast_filter_branch": 736, "fast_path": 702, "fastcal": 599, "fastcc": [589, 599, 655, 664, 702], "fastemit": 759, "fastemit_": 743, "faster": [577, 593, 595, 602, 613, 637, 652, 661, 667, 671, 681, 688, 689, 702, 704, 713, 714, 716, 734, 747, 750, 751], "fastest": 688, "fastisel": 702, "fastiselshouldignor": 761, "fastlink": 727, "fastmath": 715, "fat": [582, 629, 652], "fatal": [650, 747, 760], "fatbin": 652, "fault": [582, 588, 601, 604, 634, 659, 661, 687, 702, 742, 743, 751], "faultingload": 665, "faultingloadstor": 665, "faultingpcoffset": 665, "faultingstor": 665, "faultkind": 665, "faultmap": [702, 742], "favor": [601, 602, 659, 697, 727, 743, 751, 761, 762], "favorit": [703, 737, 797], "fbb": 771, "fca": 703, "fcc_g": 771, "fcc_u": 771, "fcc_ug": 771, "fcc_val": 771, "fcf": 702, "fcmp": [795, 797, 799], "fcmpinst": 734, "fcomi": 599, "fcontext": 801, "fcos": 771, "fcoverag": [617, 656], "fcuda": 652, "fcur": 714, "fd": 701, "fde": [577, 599, 703], "fdebug": [606, 646], "fdes": [577, 582, 703], "fdiv": 740, "fdr": 774, "fe": 668, "fear": 659, "feasibl": [659, 702, 750, 751, 775], "featur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 577, 580, 581, 594, 595, 596, 597, 598, 601, 602, 608, 613, 651, 655, 656, 657, 659, 663, 667, 670, 671, 677, 678, 687, 694, 695, 699, 700, 702, 705, 708, 711, 714, 719, 726, 732, 733, 734, 735, 736, 743, 744, 747, 750, 755, 756, 759, 760, 761, 762, 771, 773, 775, 776, 777, 779, 794, 796, 797, 798, 799, 800, 802], "featurea": 777, "featureb": 777, "featurec": 777, "featurefparmv8": 762, "featurev8deprec": 771, "featurev9": 771, "featurevi": 771, "februari": 739, "fed": [599, 741], "fedora": 660, "fee": 711, "feed": [584, 585, 702, 704, 717, 736, 750, 797], "feedback": [577, 654, 659, 688, 694, 702, 703, 739, 745, 746, 773, 780, 781, 782], "feel": [577, 593, 594, 600, 601, 602, 654, 659, 666, 702, 711, 743, 746, 748, 772, 775, 793, 795, 802], "feh_asynch": 702, "femul": 702, "fenc": [582, 586, 631, 666, 687, 713], "fermi": 599, "ferrant": 658, "fesetround": 702, "fetch": [577, 580, 581, 582, 591, 599, 631, 679, 702, 736, 747, 773], "fetchshaderptr": 582, "few": [584, 586, 589, 593, 595, 597, 598, 599, 600, 602, 603, 613, 631, 649, 652, 659, 660, 661, 667, 668, 674, 675, 680, 691, 692, 694, 702, 706, 715, 716, 732, 734, 735, 736, 737, 750, 751, 755, 756, 760, 761, 766, 770, 771, 773, 775, 776, 781, 794, 795, 796, 798, 801, 802], "fewer": [582, 659, 668, 732, 739, 750, 751, 755], "fewerelementsfor": 680, "fewerelementsif": 680, "fexist": 714, "ffast": [652, 770], "ffi": [597, 664], "ffi_include_dir": 597, "ffi_library_dir": 597, "ffile": 617, "ffmpeg": 704, "ffp": 652, "fgr": 675, "fi": [0, 1, 668, 671, 736, 796, 797, 798, 799, 800, 801], "fib": [732, 793, 797, 799, 801], "fibi": 799, "fibonacci": [673, 793], "fiddl": [693, 709, 734, 752], "fidel": 750, "field": [577, 582, 585, 589, 592, 598, 599, 603, 608, 631, 632, 633, 636, 642, 645, 654, 656, 666, 668, 669, 690, 694, 699, 702, 713, 721, 722, 726, 727, 730, 733, 734, 743, 745, 747, 750, 751, 753, 755, 759, 771, 776, 777, 794, 802], "field1": 603, "field2": 603, "field3": 603, "field4": 603, "field_offset": 603, "fieldn": 603, "fieldti": 760, "fifth": [655, 702, 715, 771], "figur": [588, 593, 599, 651, 658, 696, 702, 713, 718, 734, 748, 765, 766, 771, 773], "fiji": 582, "file": [577, 582, 583, 584, 591, 593, 594, 595, 597, 598, 604, 605, 607, 609, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 633, 635, 637, 638, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 657, 659, 660, 662, 663, 664, 667, 670, 673, 674, 675, 686, 688, 690, 691, 693, 694, 696, 697, 699, 701, 702, 703, 704, 707, 709, 710, 713, 714, 715, 717, 720, 721, 724, 725, 727, 729, 733, 734, 735, 736, 737, 739, 742, 743, 744, 748, 751, 752, 755, 756, 757, 759, 760, 762, 764, 765, 768, 770, 771, 772, 773, 775, 776, 777, 779, 780, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 805], "file1": [582, 630], "file2": 582, "file_nam": 633, "file_path": 582, "file_uri": 582, "filecheck": [597, 604, 607, 636, 681, 697, 708, 750, 766, 772], "filecheck_opt": 603, "filedesc": 701, "fileinfosubstream": 722, "fileit": 651, "filelist": 627, "filemag": 726, "filenam": [597, 602, 603, 604, 605, 606, 609, 610, 611, 613, 614, 615, 616, 617, 621, 622, 623, 624, 627, 628, 629, 630, 631, 632, 633, 634, 637, 640, 641, 642, 643, 646, 647, 648, 649, 650, 651, 652, 656, 663, 697, 734, 745, 750, 752, 762, 764, 774, 800, 801], "filename0": 656, "filename1": 656, "filenameindex0": 656, "filenameindex1": 656, "filenameoffset": 722, "filenotfound": 734, "filenumb": 663, "fileorerr": 734, "filepo": 651, "files": 643, "filesizepars": 651, "filesystem": [608, 660, 693, 800], "filetyp": [609, 673, 750, 800], "fill": [580, 581, 582, 585, 592, 602, 623, 651, 652, 660, 688, 694, 696, 701, 702, 733, 734, 747, 750, 751, 755, 761, 773, 775, 776, 777, 793, 794, 795, 796, 797, 798, 799, 800, 801], "filt": [617, 618], "filter": [67, 154, 255, 412, 524, 582, 597, 603, 608, 617, 623, 632, 637, 650, 659, 699, 702, 732, 745, 761, 764, 766, 775], "filterclass": [699, 759, 760], "final": [577, 582, 586, 589, 592, 593, 595, 596, 599, 601, 602, 608, 631, 634, 637, 651, 656, 659, 660, 661, 663, 668, 690, 691, 693, 695, 700, 701, 702, 705, 713, 714, 720, 721, 722, 725, 727, 734, 735, 736, 741, 744, 745, 748, 750, 755, 759, 760, 761, 762, 766, 771, 773, 774, 776, 779, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "finalize_status": 774, "finalizeasync": 701, "finalizecontinu": 701, "finalizememori": 707, "finalizeobject": [707, 801], "financi": 736, "find": [577, 582, 584, 585, 592, 593, 594, 595, 597, 599, 601, 602, 603, 604, 606, 608, 617, 620, 622, 636, 650, 651, 656, 659, 660, 661, 662, 669, 670, 671, 673, 674, 675, 676, 681, 687, 689, 690, 692, 693, 696, 701, 702, 704, 705, 706, 709, 713, 714, 717, 727, 735, 736, 742, 744, 746, 748, 750, 751, 753, 755, 756, 761, 762, 764, 765, 771, 773, 774, 775, 777, 778, 779, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "find_a": 734, "find_packag": 597, "find_program": 597, "findanalysispass": 775, "finder": 742, "findings_dir": 704, "findlead": 734, "findsectionbynam": 701, "findsymbol": [781, 796], "fine": [582, 588, 592, 597, 601, 602, 636, 651, 666, 669, 671, 673, 674, 695, 702, 716, 717, 736, 756, 776, 799], "finer": 585, "fini": 657, "finish": [580, 582, 584, 593, 597, 599, 602, 655, 657, 659, 660, 661, 702, 707, 709, 714, 716, 733, 744, 752, 761, 770, 773, 775, 795, 796, 797, 798, 799, 800, 801], "finishassembl": 668, "finit": [599, 702, 759], "finliz": 582, "fire": [593, 602, 651, 702], "firefox": [694, 739], "firepro": 582, "first": [17, 49, 55, 88, 118, 143, 146, 174, 203, 239, 245, 278, 327, 362, 370, 428, 474, 482, 541, 572, 577, 579, 580, 581, 582, 585, 586, 588, 589, 591, 593, 594, 595, 597, 598, 599, 601, 602, 603, 606, 608, 611, 613, 617, 621, 622, 623, 624, 629, 631, 633, 634, 646, 649, 651, 655, 656, 658, 659, 660, 661, 663, 664, 668, 670, 671, 673, 674, 675, 676, 679, 680, 684, 688, 690, 691, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 724, 726, 727, 729, 732, 733, 734, 735, 736, 738, 739, 740, 741, 745, 746, 748, 750, 751, 752, 753, 754, 755, 756, 757, 759, 761, 762, 764, 765, 766, 767, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804], "first_wavefront": 582, "firstcondit": 734, "firstlett": 657, "fish": 717, "fit": [582, 588, 599, 602, 651, 652, 659, 669, 676, 692, 702, 716, 726, 732, 733, 734, 747, 750, 757, 776, 780, 797], "five": [577, 586, 599, 651, 658, 661, 675, 704, 713, 734, 748, 760, 761], "fix": [577, 578, 579, 586, 590, 595, 602, 603, 608, 651, 655, 657, 659, 669, 687, 690, 694, 696, 701, 703, 704, 709, 712, 716, 717, 718, 721, 722, 727, 730, 736, 737, 739, 743, 744, 745, 747, 748, 749, 751, 752, 753, 755, 757, 759, 761, 762, 767, 771, 773, 774, 777, 781, 794, 795, 796, 799, 802], "fixabl": 666, "fixedstack": 708, "fixedt": 750, "fixm": [603, 660, 746, 765, 771], "fixup": [701, 722], "fl": 714, "flag": [580, 581, 582, 584, 594, 596, 597, 598, 599, 603, 604, 616, 617, 623, 629, 631, 633, 635, 637, 641, 645, 646, 655, 657, 659, 660, 663, 666, 667, 668, 671, 673, 674, 676, 686, 689, 691, 692, 693, 696, 697, 699, 701, 704, 712, 714, 715, 716, 720, 721, 722, 726, 727, 734, 740, 744, 745, 747, 750, 753, 755, 766, 771, 773, 774, 775, 777], "flag1": [704, 714], "flag2": [704, 714], "flagflat": 777, "flaghollow": 777, "flagpointi": 777, "flagprototyp": 801, "flaground": 777, "flagscpu1": 777, "flagscpu2": 777, "flagscpumask": 777, "flagsfeaturea": 777, "flagsfeatureb": 777, "flagsfeaturec": 777, "flagsflat": 777, "flagshollow": 777, "flagspointi": 777, "flagsround": 777, "flakypass": 608, "flame": 774, "flamegraph": 775, "flang": [670, 674, 743, 764], "flat": [19, 42, 43, 65, 66, 100, 101, 120, 138, 139, 205, 232, 233, 337, 346, 354, 373, 374, 424, 425, 426, 459, 460, 486, 487, 537, 538, 539, 566, 567, 581, 606, 721, 777], "flat32": 721, "flat_atom": 582, "flat_atomic_add": [0, 2, 3, 4, 9], "flat_atomic_add_f64": 9, "flat_atomic_add_x2": [0, 2, 3, 4, 9], "flat_atomic_and": [0, 2, 3, 4, 9], "flat_atomic_and_x2": [0, 2, 3, 4, 9], "flat_atomic_cmpswap": [0, 2, 3, 4, 9, 582], "flat_atomic_cmpswap_x2": [0, 2, 3, 4, 9], "flat_atomic_dec": [0, 2, 3, 4, 9], "flat_atomic_dec_x2": [0, 2, 3, 4, 9], "flat_atomic_fcmpswap": [0, 2], "flat_atomic_fcmpswap_x2": [0, 2], "flat_atomic_fmax": [0, 2], "flat_atomic_fmax_x2": [0, 2, 582], "flat_atomic_fmin": [0, 2], "flat_atomic_fmin_x2": [0, 2], "flat_atomic_inc": [0, 2, 3, 4, 9], "flat_atomic_inc_x2": [0, 2, 3, 4, 9], "flat_atomic_max_f64": 9, "flat_atomic_min_f64": 9, "flat_atomic_or": [0, 2, 3, 4, 9], "flat_atomic_or_x2": [0, 2, 3, 4, 9], "flat_atomic_smax": [0, 2, 3, 4, 9], "flat_atomic_smax_x2": [0, 2, 3, 4, 9], "flat_atomic_smin": [0, 2, 3, 4, 9], "flat_atomic_smin_x2": [0, 2, 3, 4, 9], "flat_atomic_sub": [0, 2, 3, 4, 9], "flat_atomic_sub_x2": [0, 2, 3, 4, 9], "flat_atomic_swap": [0, 2, 3, 4, 9, 582], "flat_atomic_swap_x2": [0, 2, 3, 4, 9], "flat_atomic_umax": [0, 2, 3, 4, 9], "flat_atomic_umax_x2": [0, 2, 3, 4, 9], "flat_atomic_umin": [0, 2, 3, 4, 9], "flat_atomic_umin_x2": [0, 2, 3, 4, 9], "flat_atomic_xor": [0, 2, 3, 4, 9], "flat_atomic_xor_x2": [0, 2, 3, 4, 9], "flat_load": 582, "flat_load_dword": [0, 2, 3, 4, 9, 582], "flat_load_dwordx2": [0, 2, 3, 4, 9], "flat_load_dwordx3": [0, 2, 3, 4, 9], "flat_load_dwordx4": [0, 2, 3, 4, 9, 579], "flat_load_sbyt": [0, 2, 3, 4, 9], "flat_load_sbyte_d16": [0, 4, 9], "flat_load_sbyte_d16_hi": [0, 4, 9], "flat_load_short_d16": [0, 4, 9], "flat_load_short_d16_hi": [0, 4, 9], "flat_load_sshort": [0, 2, 3, 4, 9], "flat_load_ubyt": [0, 2, 3, 4, 9], "flat_load_ubyte_d16": [0, 4, 9], "flat_load_ubyte_d16_hi": [0, 4, 9], "flat_load_ushort": [0, 2, 3, 4, 9], "flat_scratch": [24, 123, 147, 148, 157, 158, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 208, 246, 247, 257, 258, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 307, 308, 312, 313, 319, 320, 321, 322, 323, 342, 346, 347, 348, 349, 351, 352, 373, 374, 375, 377, 378, 379, 381, 382, 384, 386, 389, 390, 391, 395, 396, 397, 398, 399, 402, 403, 404, 405, 413, 414, 415, 416, 417, 418, 419, 420, 421, 486, 487, 488, 490, 491, 492, 494, 495, 497, 499, 502, 503, 504, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 582], "flat_scratch_hi": [49, 581, 582], "flat_scratch_lo": [49, 581, 582], "flat_stor": 582, "flat_store_byt": [0, 2, 3, 4, 9], "flat_store_byte_d16_hi": [0, 4, 9], "flat_store_dword": [0, 2, 3, 4, 9, 582], "flat_store_dwordx2": [0, 2, 3, 4, 9], "flat_store_dwordx3": [0, 2, 3, 4, 9, 582], "flat_store_dwordx4": [0, 2, 3, 4, 9], "flat_store_short": [0, 2, 3, 4, 9], "flat_store_short_d16_hi": [0, 4, 9], "flatten": [599, 702, 770], "flavor": [691, 702, 734, 750, 762], "flavour": 681, "flaw": [675, 739, 751], "fldcw": 599, "fldcww": 599, "fleet": 660, "flegaci": 716, "flexibl": [599, 607, 608, 651, 668, 680, 681, 695, 701, 702, 713, 734, 761, 762, 766, 773, 798], "fli": [599, 724, 779, 794, 796], "flight": [631, 661, 702], "flip": 702, "float": [47, 48, 52, 54, 142, 145, 237, 238, 242, 244, 306, 311, 316, 318, 339, 341, 369, 393, 394, 481, 506, 507, 579, 580, 589, 590, 591, 599, 609, 631, 651, 652, 662, 666, 669, 675, 683, 689, 693, 714, 715, 734, 743, 750, 762, 769, 770, 771, 777, 793, 794, 795, 796, 797], "float128": 729, "float16": 729, "float32": 729, "float32partialprecis": 729, "float48": 729, "float64": 729, "float80": 729, "float_denorm_mode_16_64": 582, "float_denorm_mode_32": 582, "float_denorm_mode_flush_dst": 582, "float_denorm_mode_flush_non": 582, "float_denorm_mode_flush_src": 582, "float_denorm_mode_flush_src_dst": 582, "float_mod": 582, "float_round_mode_16_64": 582, "float_round_mode_32": 582, "float_round_mode_minus_infin": 582, "float_round_mode_near_even": 582, "float_round_mode_plus_infin": 582, "float_round_mode_zero": 582, "floatscalarti": 702, "floattyp": 734, "floor": 770, "floorf": 770, "flow": [582, 585, 593, 599, 602, 620, 652, 655, 658, 659, 661, 665, 666, 670, 702, 703, 705, 706, 707, 709, 713, 715, 716, 732, 734, 741, 742, 743, 750, 751, 755, 768, 769, 770, 771, 773, 794, 795, 796, 798, 799, 801, 802, 803, 804], "floyd": 738, "flt_round": 702, "flto": [597, 686, 705, 719], "flush": [582, 602, 631, 652, 689, 702, 707, 715, 774, 776, 800], "flush_status": 774, "flux": 687, "flwend": 738, "fma": [599, 652, 697, 715, 770], "fma3d": 738, "fmadd": 599, "fmax": 676, "fmaximum": 676, "fmaxnum": 676, "fmaxnum_iee": 676, "fmin": 676, "fminimum": 676, "fminnum": 676, "fminnum_iee": 676, "fmod": 702, "fmt": [2, 3, 4, 9, 603], "fmt_align": 734, "fmt_pad": 734, "fmt_repeat": 734, "fmtspec": 603, "fmul": [599, 715, 795, 796], "fmuladd": 770, "fn": [657, 702], "fnaddr": 655, "fnast": [782, 795, 796, 797, 798, 799, 800, 801], "fnentri": 589, "fnf": 734, "fnir": [795, 796, 797, 798, 799, 800, 801], "fnloc": 801, "fnname": [794, 795, 796, 797, 798, 799, 800, 801], "fno": [584, 770], "fnptrval": 702, "fnstart": 599, "fnti": 702, "fntree": 714, "focus": [577, 582, 599, 600, 620, 668, 678, 681, 701, 705, 709, 717, 734, 737, 751, 752, 755, 766, 770, 771, 779, 780, 803], "fold": [585, 586, 650, 662, 665, 666, 677, 678, 697, 702, 732, 734, 742, 750, 753, 761, 773, 795], "foldabl": 677, "folder": [597, 660, 702, 796], "foldgenregform": 761, "foldingsetnod": 734, "foldingsetnodeid": 734, "foldl": 761, "foldmemoryoperand": [599, 771], "folk": [659, 704, 733], "follow": [44, 49, 50, 55, 115, 143, 144, 146, 202, 234, 239, 240, 241, 245, 304, 362, 363, 367, 370, 471, 474, 475, 479, 482, 568, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 592, 593, 594, 595, 597, 598, 599, 601, 602, 603, 604, 607, 608, 613, 614, 615, 617, 619, 622, 623, 625, 626, 627, 629, 631, 632, 633, 634, 636, 637, 638, 641, 645, 646, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 674, 676, 678, 680, 681, 685, 686, 687, 688, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 704, 705, 706, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 744, 745, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 793, 794, 797, 798, 799, 801], "followup": 767, "followup_al": 767, "followup_coincid": 767, "followup_epilogu": 767, "followup_fallback": 767, "followup_inn": 767, "followup_out": 767, "followup_remaind": 767, "followup_remainder_inn": 767, "followup_remainder_out": 767, "followup_sequenti": 767, "followup_unrol": 767, "followup_vector": 767, "fom": 732, "fomit": 599, "foo": [585, 588, 590, 591, 597, 598, 599, 602, 603, 618, 619, 631, 637, 644, 646, 651, 652, 655, 656, 661, 663, 664, 668, 669, 681, 695, 696, 697, 700, 701, 702, 704, 708, 713, 715, 716, 717, 721, 734, 745, 750, 755, 759, 761, 766, 768, 770, 772, 777, 794, 795, 796, 797], "foo1": [686, 702, 705], "foo2": [686, 705], "foo3": [686, 705], "foo4": [686, 705], "foo_bar": 619, "foo_bodi": 717, "foo_ctor": 700, "foo_dtor": 700, "foo_in_a_cc": 591, "foo_test": 766, "foo_var": 598, "fooanalysi": 716, "fooanalysisresult": 716, "foobar": [602, 708, 777], "food": 739, "foof": 652, "foolproof": 773, "foomodulepass": 716, "foopass": 716, "footnot": [675, 680, 706], "footprint": [675, 747], "fopen": 737, "for": [1, 5, 6, 7, 8, 22, 23, 27, 28, 29, 30, 31, 34, 35, 36, 50, 65, 115, 123, 124, 127, 128, 129, 130, 131, 144, 202, 208, 209, 212, 213, 214, 215, 217, 218, 219, 220, 222, 227, 229, 230, 234, 236, 240, 241, 304, 336, 346, 363, 367, 373, 375, 376, 378, 379, 380, 436, 439, 440, 443, 444, 471, 475, 479, 486, 488, 489, 491, 492, 493, 549, 552, 553, 556, 557, 576, 578, 579, 580, 581, 583, 584, 586, 587, 588, 589, 590, 591, 592, 594, 596, 597, 598, 600, 603, 604, 606, 607, 608, 609, 611, 613, 615, 616, 617, 618, 619, 620, 622, 623, 626, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 662, 663, 665, 668, 670, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 685, 687, 688, 689, 690, 691, 693, 694, 696, 698, 699, 700, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 733, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 756, 759, 760, 761, 762, 764, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 793, 794, 795, 796, 798, 800, 801, 802, 803, 804], "for_each": 602, "forbidden": 756, "forc": [577, 579, 580, 582, 584, 597, 598, 602, 611, 631, 636, 651, 652, 661, 663, 669, 671, 693, 700, 702, 716, 717, 729, 734, 747, 750, 751, 753, 755, 759, 767, 770, 773, 777], "force_off": 597, "force_on": 597, "forcedisassembl": 761, "forcibl": 702, "fore": 767, "foreach": [598, 762], "foreachiter": 761, "foreign": [597, 664], "forens": 607, "forese": 659, "forest": 706, "forev": 711, "forexpr": [797, 798, 799, 800, 801], "forexprast": [797, 798, 799, 800, 801], "forget": [600, 602, 668, 674, 695, 733, 734, 801], "forgiv": 714, "forgotten": 800, "fork": [736, 739, 741, 751, 756], "form": [580, 582, 584, 585, 589, 596, 597, 598, 602, 603, 604, 618, 619, 622, 634, 637, 646, 651, 658, 659, 661, 663, 666, 667, 668, 669, 670, 671, 676, 680, 687, 691, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 707, 711, 713, 714, 715, 722, 729, 733, 734, 739, 741, 742, 743, 745, 746, 748, 750, 751, 753, 755, 759, 760, 761, 762, 764, 765, 766, 769, 771, 773, 774, 776, 777, 780, 793, 794, 795, 796, 797, 799, 800, 802, 803], "formal": [577, 582, 622, 630, 652, 702, 706, 714, 734, 746], "format": [30, 31, 64, 121, 130, 131, 153, 206, 219, 220, 227, 228, 229, 230, 254, 410, 427, 439, 440, 522, 540, 552, 553, 579, 580, 581, 588, 596, 603, 605, 606, 609, 610, 611, 613, 615, 617, 618, 620, 623, 631, 632, 634, 636, 637, 638, 640, 642, 644, 645, 647, 648, 649, 650, 653, 654, 657, 659, 662, 663, 664, 665, 668, 671, 673, 690, 699, 701, 702, 704, 707, 709, 711, 715, 717, 720, 721, 722, 725, 727, 729, 732, 733, 736, 739, 741, 742, 743, 745, 759, 760, 761, 762, 765, 766, 769, 771, 774, 775, 777, 801], "format_int_custom": 734, "format_provid": 734, "formatadapt": 734, "formatstr": 582, "formatt": 702, "formattedfil": 734, "formatv": 760, "formbit": [761, 762], "former": [586, 599, 659, 666, 680, 701, 702, 708, 734, 750, 755, 768, 794], "formfe": 761, "formmask": 771, "formul": [702, 756], "formula": 582, "forth": [577, 582, 586, 588, 675, 718, 761], "fortran": [577, 702, 738, 764], "fortun": [734, 796, 797, 799, 800, 802], "forum": [600, 659, 670, 702], "forward": [577, 582, 585, 586, 589, 599, 602, 631, 652, 659, 661, 662, 668, 687, 697, 698, 702, 716, 730, 732, 734, 736, 748, 750, 755, 756, 761, 774, 794, 797], "fosdem17": 684, "foster": [659, 736, 756], "fotonik3d_": 738, "fotonik3d_r": 738, "found": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 579, 581, 582, 585, 587, 593, 597, 599, 603, 604, 606, 608, 613, 615, 622, 623, 627, 628, 634, 646, 651, 652, 659, 660, 661, 667, 668, 670, 671, 673, 675, 676, 685, 690, 692, 693, 694, 696, 697, 699, 701, 702, 704, 705, 708, 709, 711, 713, 714, 715, 717, 718, 719, 722, 730, 732, 734, 735, 738, 740, 744, 750, 751, 755, 756, 759, 761, 764, 766, 770, 771, 773, 774, 777, 795, 796, 798, 799, 800, 801], "foundat": [577, 582, 600, 659, 736, 746, 773], "foundfoo": 602, "four": [20, 121, 206, 427, 540, 580, 582, 585, 586, 588, 589, 595, 599, 608, 631, 644, 651, 669, 681, 682, 691, 702, 715, 717, 760, 761, 771, 795, 796], "fourinarow": 765, "fourteen": 748, "fourth": [655, 669, 702, 750, 753, 771, 773], "foz": 646, "fp": [581, 582, 599, 609, 611, 631, 651, 664, 702, 708, 749, 750, 762, 771, 796, 797, 798, 799, 801], "fp0": [761, 762], "fp1": [761, 762], "fp128": [589, 702, 714], "fp16": [582, 650], "fp16_ovfl": 582, "fp2": [761, 762], "fp3": [761, 762], "fp4": [761, 762], "fp5": [761, 762], "fp6": [761, 762], "fp_to_sint": 771, "fpexcept": 702, "fpform": [761, 762], "fpformat": [761, 762], "fpformbit": 762, "fpgas": [577, 599], "fpic": [597, 747], "fpimmleaf": 678, "fpinst": 762, "fpm": [636, 716, 726, 780, 781, 782], "fpm1": 726, "fpm2": 726, "fpmad": 750, "fpms": 726, "fpo": [722, 730], "fpo_data": 722, "fppassmanag": 775, "fpr": 675, "fpreg": 771, "fpregsclass": 771, "fpregsregclass": 771, "fpregsregisterclass": 771, "fprintf": [794, 795, 796, 797, 798, 799, 800, 801], "fprofil": [597, 617, 656], "fptr": 801, "fptype": 702, "fpu": [693, 702], "fputc": [796, 797, 798, 799, 800, 801], "fqa": 602, "fr": [702, 714], "fra": 599, "fraction": [581, 590, 695, 699, 702, 704], "fragil": [603, 736], "fragment": [599, 619, 667, 668, 702, 750, 755, 761, 765], "fragment1": 619, "fragment2": 619, "fragmentkind": 619, "frame": [609, 612, 622, 634, 640, 641, 646, 657, 666, 668, 676, 700, 701, 702, 703, 707, 708, 722, 732, 734, 749, 750, 751, 753, 755, 771, 776], "frameindex": 771, "frameinfo": [708, 771], "frameless": 599, "framemap": 668, "frameptr": 655, "frames": 668, "framework": [585, 596, 599, 662, 668, 684, 685, 687, 702, 732, 734, 750, 765, 772, 773, 778, 795, 798, 799], "francesco": 732, "frb": 599, "frc": 599, "free": [582, 585, 586, 597, 599, 600, 601, 602, 631, 636, 653, 654, 659, 666, 668, 678, 683, 701, 702, 703, 704, 711, 717, 733, 734, 736, 743, 746, 747, 751, 755, 759, 766, 772, 773, 775, 776, 781, 793, 795, 796, 797, 798, 799, 802], "freea": 700, "freebench": 765, "freeblockmapblock": 726, "freebsd": [587, 599, 633, 671, 748, 774], "freebsd5": 599, "freed": [577, 582, 585, 655, 702, 712, 717, 734, 749], "freedom": [577, 594, 675, 702, 734], "freeli": [586, 659, 702, 761], "freelist": 747, "freescal": 653, "freestand": 702, "freetyp": 704, "freez": [694, 736], "frequenc": [587, 591, 670, 702, 742, 775, 776], "frequent": [579, 582, 602, 623, 651, 659, 668, 669, 671, 673, 702, 732, 734, 736, 742, 755, 756, 762, 780, 781, 782, 801], "fresh": [702, 736, 757], "frexp": 702, "friend": [600, 622, 659, 664, 702, 710, 732, 734, 736, 774, 779, 794], "frighten": 704, "from": [14, 18, 20, 32, 33, 37, 38, 39, 40, 41, 45, 46, 50, 88, 98, 119, 121, 132, 133, 134, 135, 136, 137, 141, 144, 174, 187, 204, 206, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 241, 278, 289, 324, 353, 367, 422, 423, 427, 441, 442, 447, 448, 449, 461, 462, 463, 464, 479, 535, 536, 540, 554, 555, 560, 561, 562, 563, 569, 570, 571, 572, 577, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 606, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 644, 645, 646, 649, 650, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 718, 719, 720, 722, 725, 727, 729, 730, 731, 735, 736, 737, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804], "front": [599, 601, 602, 633, 659, 661, 664, 668, 671, 673, 697, 701, 702, 719, 732, 734, 735, 745, 748, 757, 762, 769, 780, 781, 796, 797, 798, 799, 801, 802, 803], "frontend": [586, 620, 623, 631, 650, 655, 656, 661, 663, 664, 665, 668, 671, 672, 700, 702, 716, 738, 743, 745, 750, 755, 766, 767, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 800, 804], "frontier": [582, 706, 799], "frown": 659, "frozen": [657, 702], "frt": 599, "frustrat": 600, "fs": [599, 671, 749, 755, 771, 800], "fsanit": [596, 687, 696, 704, 712, 747], "fsave": 770, "fsin": [609, 771], "fsjlj": 690, "fstream": 715, "fstrict": 702, "fsub": 799, "ft": [704, 795, 796, 797, 798, 799, 800, 801], "ftest": 617, "fthinlto": 702, "ftl": [702, 753], "ftoi": 771, "ftp": 671, "ftz": 715, "fuchsia": 747, "fucomip": 599, "fucompi": 599, "fudg": 693, "fulfil": [692, 695, 756], "full": [577, 580, 582, 585, 586, 595, 597, 598, 599, 602, 603, 608, 613, 616, 631, 632, 634, 636, 646, 650, 652, 657, 659, 664, 671, 691, 693, 694, 695, 700, 701, 704, 708, 709, 714, 715, 717, 720, 722, 732, 733, 734, 735, 736, 739, 743, 750, 751, 752, 755, 759, 766, 767, 768, 775, 777, 793, 802], "full_corpus_dir": 704, "fulldebug": [697, 702, 750], "fuller": 776, "fullest": 602, "fulli": [577, 582, 584, 589, 590, 596, 597, 598, 599, 611, 631, 652, 655, 667, 669, 671, 673, 676, 678, 701, 702, 717, 718, 720, 732, 741, 750, 751, 755, 762, 767, 770, 779, 780, 794, 798, 799, 802], "fun": [663, 774, 775, 802, 803], "func": [624, 636, 656, 702, 708, 732, 734, 773, 775], "func1": 582, "func_typ": 702, "funcflag": 702, "funcid": 775, "funclet": 655, "funcresolv": 734, "function": [577, 583, 585, 586, 588, 589, 590, 593, 594, 595, 596, 597, 603, 606, 607, 609, 612, 613, 615, 617, 618, 619, 620, 622, 631, 633, 634, 635, 636, 637, 640, 641, 646, 649, 650, 652, 653, 657, 659, 660, 661, 663, 666, 667, 668, 669, 671, 676, 678, 680, 681, 685, 686, 687, 690, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 707, 710, 712, 713, 716, 717, 718, 719, 720, 721, 722, 724, 725, 727, 731, 737, 739, 741, 743, 745, 747, 749, 753, 754, 755, 757, 759, 760, 761, 764, 768, 769, 771, 772, 773, 775, 777, 779, 780, 782, 793, 794, 796, 797, 798, 799, 800, 802, 803, 804], "function1": 582, "function_entry_arg": 776, "function_entry_count": 591, "function_id": 776, "function_old": 589, "function_other_typ": 776, "function_pass": 772, "function_to_mock": 701, "function_to_test": 701, "functionaddress": 665, "functionanalysismanag": [716, 772], "functionanalysismanagercgsccproxi": 716, "functionanalysismanagermoduleproxi": 716, "functionast": [782, 794, 795, 796, 797, 798, 799, 800, 801], "functioncalle": 734, "functiondecl": 602, "functionend": 663, "functionfaultinfo": 665, "functionfoopass": 716, "functionid": 663, "functionindex": 698, "functioninfo": 665, "functionlisttyp": 734, "functionnam": [646, 668, 701, 702], "functionnod": 714, "functionpass": [585, 719, 732, 734, 771], "functionpass1": 716, "functionpass2": 716, "functionpassctor": 773, "functionpassmanag": [716, 780, 781, 782, 796, 797, 798, 799], "functionproto": [796, 797, 798, 799, 800, 801], "functionptr": 734, "functionstart": 663, "functiontyp": [734, 795, 796, 797, 798, 799, 800, 801], "fundament": [577, 598, 599, 602, 651, 661, 666, 669, 698, 714, 734, 751, 755, 771, 773], "funnel": 702, "funni": 799, "furi": 582, "further": [577, 586, 589, 592, 594, 595, 597, 601, 602, 603, 608, 623, 650, 655, 659, 661, 666, 668, 669, 673, 675, 680, 681, 687, 692, 694, 701, 702, 704, 713, 714, 719, 722, 724, 726, 734, 739, 747, 750, 751, 757, 764, 767, 771, 776, 779, 781, 796], "furthermor": [577, 592, 594, 603, 659, 669, 675, 687, 697, 702, 706, 732, 755, 766], "furyx": 582, "fuse": [597, 611, 652, 676, 686, 690, 692, 702, 732], "fusion": 702, "futur": [577, 582, 589, 596, 597, 601, 602, 631, 659, 667, 668, 669, 671, 683, 684, 687, 697, 698, 700, 702, 704, 708, 716, 734, 736, 744, 747, 748, 750, 753, 754, 755, 767, 770, 772, 776, 795, 796, 797], "fuzz": [702, 737, 742, 748], "fuzz_target": 704, "fuzzer": 742, "fuzzer_no_main": 704, "fuzzerc": 667, "fuzzi": 619, "fuzzing_build_mode_unsafe_for_product": 704, "fuzzinglibc": 704, "fuzzmut": 667, "fval": 750, "fverifi": 697, "fwd_progress": 582, "fwdargreg": 708, "fx": [0, 5, 6, 7, 8, 9, 578, 582], "fxray": [774, 775], "g0": 771, "g1": [702, 750, 771], "g2": [702, 750, 771], "g3": 771, "g4": 771, "g5": 771, "g6": 771, "g7": 771, "g_": 739, "g_add": [675, 677, 680, 697], "g_and": [679, 680], "g_anyext": 680, "g_ashr": 680, "g_bitcast": 680, "g_block_addr": 680, "g_build_vector": 680, "g_build_vector_trunc": 680, "g_concat_vector": 680, "g_constant": [675, 677, 679, 680, 697], "g_extract": 680, "g_fconstant": [675, 677], "g_fmul": 675, "g_fneg": 675, "g_foo": 680, "g_fpext": 680, "g_frame_index": 680, "g_icmp": 708, "g_implicit_def": 680, "g_inttoptr": 680, "g_load": [675, 680], "g_merge_valu": 680, "g_mul": 680, "g_or": 680, "g_phi": 680, "g_ptrtoint": 680, "g_sext": 680, "g_sext_inreg": 675, "g_shl": 680, "g_store": 680, "g_sub": [680, 697], "g_trunc": 680, "g_unmerge_valu": 680, "g_vecreduce_add": 676, "g_vecreduce_and": 676, "g_vecreduce_mul": 676, "g_vecreduce_or": 676, "g_vecreduce_smax": 676, "g_vecreduce_smin": 676, "g_vecreduce_umax": 676, "g_vecreduce_umin": 676, "g_vecreduce_xor": 676, "g_xor": [675, 680], "ga": 714, "gabi": 653, "gadget": 751, "gain": [592, 651, 659, 687, 702, 706, 746], "galina": [659, 688], "game": 659, "gap": [577, 631, 656, 702, 734], "gapend": 663, "gapstart": 663, "garbag": [589, 664, 703, 729, 753, 803], "gas": [663, 771], "gather": [582, 651, 659, 661, 691, 714, 734, 735, 739, 741, 759, 766, 776], "gather4": 580, "gave": 682, "gazonk": 750, "gb": 671, "gc": [589, 703, 714, 736, 742], "gc_transit": 702, "gc_transition_end": 755, "gc_transition_start": 755, "gcal": 670, "gcc": [577, 586, 598, 599, 602, 604, 617, 637, 638, 651, 652, 653, 659, 660, 661, 670, 671, 686, 687, 692, 693, 696, 702, 713, 732, 734, 750, 764, 765, 770, 771, 774], "gcc_version": 671, "gcda": 617, "gcfunctioninfo": 668, "gcfunctionmetadata": [668, 753], "gcmetadaprint": 668, "gcmetadata": 668, "gcmetadataprinterregistri": 668, "gcmetataprint": 755, "gcn": 582, "gcn3": 582, "gcname": 589, "gcno": 617, "gcodeview": 750, "gcolumn": 770, "gcov": 637, "gcov_prefix": 617, "gcov_prefix_strip": 617, "gcregistri": 668, "gcroot": [668, 753, 755], "gcse": [732, 734], "gcstrategi": [668, 755], "gdb": [577, 599, 622, 686, 734, 750, 757, 769, 771], "gdbinit": 734, "gdbregistrationlisten": 717, "gds": [0, 2, 3, 4, 9, 18, 115, 119, 202, 204, 304, 423, 471, 536, 576, 582], "ge": 761, "ge_missing_jmp_buf": 602, "ge_missing_sigjmp_buf": 602, "gear": [595, 597], "geforc": 715, "gemb": 582, "gen": [606, 637, 650, 678, 757, 759, 771, 780, 801], "genaddressmod": 760, "gender": 600, "gendfapacket": 599, "general": [582, 584, 585, 586, 588, 589, 593, 594, 598, 600, 602, 607, 613, 626, 631, 636, 637, 651, 652, 654, 655, 657, 659, 661, 662, 666, 668, 671, 672, 673, 675, 677, 678, 680, 681, 687, 688, 691, 692, 695, 700, 703, 706, 709, 710, 712, 714, 715, 716, 717, 719, 720, 722, 726, 727, 729, 732, 736, 739, 746, 747, 750, 751, 752, 755, 756, 761, 762, 765, 766, 767, 768, 771, 773, 780, 794, 798, 799, 800, 801, 802], "generalis": 798, "generat": [577, 581, 582, 584, 586, 588, 589, 591, 595, 596, 597, 598, 602, 603, 604, 606, 607, 608, 609, 613, 615, 617, 622, 623, 630, 631, 636, 637, 649, 650, 651, 652, 655, 656, 657, 659, 662, 663, 665, 666, 669, 671, 672, 673, 680, 681, 683, 684, 685, 691, 692, 694, 697, 700, 701, 703, 704, 705, 710, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 727, 729, 730, 733, 734, 735, 736, 738, 741, 742, 744, 745, 749, 750, 751, 752, 753, 755, 759, 760, 761, 762, 764, 766, 767, 768, 770, 771, 773, 774, 777, 779, 794, 796, 798, 799, 800, 801, 802, 803, 804], "genereat": 671, "generic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 577, 582, 586, 588, 589, 597, 599, 602, 611, 631, 650, 651, 652, 659, 661, 671, 678, 680, 681, 682, 683, 685, 687, 702, 703, 708, 715, 734, 750, 756, 762, 766, 771, 774, 800, 802], "genericdomain": 761, "genericenum": 759, "generict": [759, 760], "genericvalu": 657, "genregisternam": 599, "gensubtargetinfo": 771, "genuin": 734, "geomean": 770, "geometr": 802, "geometri": 582, "geordi": 670, "georg": 748, "gep": [664, 676, 702, 703, 714, 718, 732, 742, 750, 755], "gep_index": 702, "get": [27, 28, 29, 30, 31, 34, 35, 36, 57, 58, 127, 128, 129, 130, 131, 148, 212, 213, 214, 219, 220, 247, 248, 336, 378, 379, 380, 396, 397, 436, 439, 440, 443, 444, 491, 492, 493, 509, 510, 549, 552, 553, 556, 557, 577, 580, 582, 583, 584, 585, 586, 588, 592, 593, 597, 598, 599, 600, 601, 602, 603, 607, 631, 651, 652, 654, 655, 656, 659, 660, 662, 664, 666, 668, 669, 675, 677, 679, 685, 686, 688, 691, 692, 693, 694, 695, 696, 698, 703, 705, 706, 707, 709, 711, 713, 714, 715, 716, 717, 727, 729, 732, 733, 734, 736, 744, 745, 746, 748, 750, 751, 752, 755, 756, 757, 759, 761, 762, 765, 766, 767, 769, 771, 772, 773, 774, 777, 778, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "get_atable_decl": 759, "get_atable_impl": 759, "get_bvalues_decl": 759, "get_cenum_decl": 759, "get_ctable_decl": 759, "get_ctable_impl": 759, "get_instrinfo_named_op": 771, "get_instrinfo_operand_enum": 771, "get_instrinfo_operand_types_enum": 771, "get_matcher_implement": 759, "get_ptr": 665, "get_reginfo_target_desc": 759, "get_register_match": 759, "get_subtarget_feature_nam": 759, "getactiondefinitionsbuild": 680, "getaddend": 701, "getaddress": [717, 779, 796, 797, 798, 799], "getaddressingmod": 771, "getadjustedanalysispoint": 585, "getalign": 701, "getalignmentoffset": 701, "getallderiveddefinit": 760, "getallocatedtyp": 799, "getanalysi": 679, "getanalysisusag": [585, 679], "getargumentlist": 734, "getattribut": 714, "getattributespellinglistindex": 759, "getbasicblock": 599, "getbasicblocklist": [734, 797, 798, 799, 800, 801], "getbinarycodeforinstr": 771, "getbinarypreced": [798, 799, 800, 801], "getbit": [651, 760], "getbitwidth": 734, "getbuff": 777, "getcachedresult": 716, "getcalledfunct": 734, "getcalleesavedreg": 771, "getchar": [793, 794, 795, 796, 797, 798, 799, 800, 801], "getcheck": 716, "getclass": 760, "getclobberingmemoryaccess": 713, "getcol": 801, "getcont": 701, "getcontext": [717, 779, 801], "getdagop": 761, "getdata": 602, "getdatalayout": [717, 771, 779, 780, 781, 782, 796, 797, 798, 799, 801], "getdatasect": 668, "getdebugloc": 750, "getdef": 760, "getdefaultdatalayoutfortarget": [779, 780, 781, 782], "getdefaultresourcetrack": [779, 780, 781, 782], "getdefaulttargettripl": 800, "getdirectori": [750, 801], "getdirectsuperclass": 760, "getdoubleti": [795, 796, 797, 798, 799, 800, 801], "getehframesect": 707, "getelementptr": [585, 599, 603, 615, 655, 656, 668, 669, 700, 703, 714, 715, 734, 750, 755, 768, 802], "getelementptrinst": 734, "getelementtyp": [718, 734], "getend": 701, "getendina": 701, "getentryblock": [734, 799, 800, 801], "getenv": 756, "getexceptionpointerregist": 661, "getexceptionselectorregist": 661, "getexecutionsess": [780, 782], "getexecutorprocesscontrol": [779, 780, 781, 782], "getfil": 717, "getfilenam": [750, 801], "getfixupaddress": 701, "getfoo": 702, "getforcurrentprocess": [717, 779, 780, 781, 782], "getfourdatapoint": 751, "getframeinfo": [599, 771], "getframeinstruct": 708, "getframes": 668, "getfunct": [668, 719, 734, 773, 795, 796, 797, 798, 799, 800, 801], "getfunctionlist": 734, "getfunctiontyp": 734, "getgeneralcategori": 651, "getglob": 771, "getgloballist": 734, "getglobalprefix": [717, 779, 780, 781, 782], "getgotentrytarget": 701, "getimm": 771, "getindex": 771, "getiniti": 734, "getinsertblock": [797, 798, 799, 800, 801], "getinstlist": 734, "getinstralternativemap": 683, "getinstrinfo": [599, 771], "getinstrmap": 683, "getint32ti": 602, "getinterfac": 782, "getjitdylib": 782, "getjitinfo": [599, 771], "getjmp_buftyp": 602, "getkey": 734, "getkind": [695, 701, 759], "getknownbit": 679, "getlazycallthroughmanag": 781, "getlazyresolverfunct": 771, "getlin": [750, 801], "getlinkag": 701, "getllvmcontext": 602, "getlock": 717, "getloopanalysisusag": 773, "getloopid": 767, "getloopinfo": 773, "getmainjitdylib": [717, 779, 780, 781, 782, 796, 797, 798, 799], "getmanag": 716, "getmbb": 771, "getmemb": 734, "getmodul": [717, 780], "getmodulematchqu": 771, "getmyobject": 751, "getnam": [664, 701, 734, 772, 773, 782, 794, 795, 796, 797, 798, 799, 800, 801], "getnamedoperandidx": 771, "getnameinitasstr": 760, "getnexttoken": [794, 795, 796, 797, 798, 799, 800, 801], "getnod": [662, 771], "getnullvalu": [734, 797, 798, 799, 800, 801], "getnumel": 734, "getnumoperand": 734, "getnumparam": 734, "getnumsuccessor": 602, "getnumvirtreg": 599, "getobjfilelow": 668, "getoffset": [701, 771], "getop": 761, "getopcod": [734, 771], "getoperand": [599, 602, 679, 734, 771], "getoperationnam": 662, "getoperatornam": [798, 799, 800, 801], "getopt": 651, "getorcreatefoo": 734, "getorcreatetypearray": 801, "getordin": 701, "getorinsertfunct": 734, "getpar": [734, 797, 798, 799, 800, 801], "getparamtyp": 734, "getpoint": 702, "getpointerelementtyp": 718, "getpointers": [668, 701], "getpointertofunct": [707, 734, 801], "getpointertonamedfunct": 707, "getpredopcod": 699, "getprocaddress": 796, "getprocesstripl": 801, "getprotectionflag": 701, "getproto": 782, "getrawpoint": 698, "getrawsubclassoptionaldata": 714, "getreg": [599, 679, 771], "getregclass": 599, "getreginfo": 599, "getregisterinfo": [599, 771], "getreservedreg": 771, "getresult": 716, "getreturntyp": 734, "getscev": 706, "getscevatscop": 706, "getschedclass": 771, "getscop": 701, "getsect": 701, "getsextvalu": 734, "getsigjmp_buftyp": 602, "getsiz": 701, "getsourc": 671, "getsrc": 671, "getstart": 701, "getsubtarget": 771, "getsubtargetimpl": [771, 775], "getsuperclass": 760, "getsymboladdress": 666, "getsymbolnam": 771, "getsymbolt": 734, "gettarget": 701, "gettargetlow": 771, "gettargetmachin": 796, "gettargetmemori": 701, "gettargettripl": [701, 779, 780, 781, 782], "getter": [661, 702, 750, 759], "gettermin": 734, "getthesparctarget": 771, "gettingstart": 692, "gettok": [793, 794, 795, 796, 797, 798, 799, 800, 801], "gettoknam": 801, "gettokpreced": [794, 795, 796, 797, 798, 799, 800, 801], "gettraget": 701, "gettyp": [602, 734], "gettypenam": 734, "getunqu": 734, "getvalu": [602, 734, 760], "getvalueaslistofint": 760, "getvalueasoptionaldef": 760, "getvalueid": 714, "getvalueinit": 760, "getvaluetyp": 771, "getvaluevt": 677, "getworkingmemori": 701, "getx86regnum": 771, "getzextvalu": 734, "gfx": 582, "gfx10": [1, 579, 580, 581], "gfx1010": 582, "gfx1011": 582, "gfx1012": 582, "gfx1013": 582, "gfx1030": 582, "gfx1031": 582, "gfx1032": 582, "gfx1033": 582, "gfx1034": 582, "gfx1035": 582, "gfx600": 582, "gfx601": 582, "gfx602": 582, "gfx7": [579, 580, 581, 582], "gfx700": 582, "gfx701": 582, "gfx702": 582, "gfx703": 582, "gfx704": 582, "gfx705": 582, "gfx8": [215, 217, 218, 222, 227, 229, 230, 234, 236, 579, 580, 581, 582], "gfx801": 582, "gfx802": 582, "gfx803": 582, "gfx805": 582, "gfx810": 582, "gfx9": [5, 6, 7, 8, 579, 580, 581], "gfx900": 582, "gfx902": 582, "gfx904": 582, "gfx906": 582, "gfx908": [580, 582], "gfx909": 582, "gfx90a": [580, 581], "gfx90c": 582, "gfxip": 582, "ghash": 641, "ghc": [599, 702], "ghost": 734, "giant": 736, "gicombin": 650, "gicomplexoperandmatch": 678, "gicomplexpatternequiv": 678, "gid": [613, 627, 633, 645], "gif": 704, "gigabyt": 751, "gil": 741, "ginodeequiv": 678, "gird": 582, "gisel": [650, 667], "giselknownbit": 679, "giselknownbitsanalysi": 679, "gist": 671, "git": [597, 654, 659, 660, 666, 670, 673, 686, 694, 696, 731, 733, 743, 757, 764, 765], "gitattribut": 671, "github": [582, 587, 597, 659, 670, 671, 673, 694, 702, 730, 733, 734, 738, 739, 748, 764, 765, 774, 775, 804], "gitlab": [736, 738], "give": [577, 582, 584, 585, 589, 593, 599, 601, 602, 631, 651, 652, 656, 659, 666, 671, 675, 688, 691, 693, 701, 702, 709, 710, 713, 714, 715, 716, 717, 722, 732, 733, 734, 739, 745, 750, 751, 752, 755, 759, 760, 767, 769, 771, 773, 774, 775, 777, 780, 781, 793, 795, 796, 798, 800, 801, 802, 803], "given": [577, 582, 585, 586, 589, 590, 591, 592, 594, 597, 598, 599, 601, 602, 603, 606, 608, 613, 615, 617, 620, 623, 631, 636, 637, 638, 646, 649, 650, 651, 652, 655, 658, 661, 662, 663, 664, 666, 668, 671, 673, 675, 676, 680, 683, 685, 694, 695, 701, 702, 706, 707, 713, 716, 717, 720, 726, 729, 732, 734, 736, 739, 741, 745, 747, 750, 751, 753, 755, 756, 759, 760, 761, 764, 768, 771, 773, 774, 775, 777, 779, 780, 781, 782, 794, 795, 796, 798], "glad": [671, 673], "glanc": [602, 701, 802], "glasgow": 702, "glb": 702, "glb2": 702, "glb3": 702, "glbi": 702, "glc": [0, 2, 3, 4, 9, 27, 28, 29, 30, 31, 34, 35, 36, 42, 43, 59, 62, 127, 128, 129, 130, 131, 138, 139, 149, 151, 212, 213, 214, 219, 220, 232, 233, 249, 252, 336, 337, 343, 344, 360, 371, 378, 379, 380, 436, 439, 440, 443, 444, 459, 460, 473, 483, 491, 492, 493, 549, 552, 553, 556, 557, 566, 567, 578, 582], "glibc": 704, "glibcxx_3": 671, "gline": 770, "glob": 624, "global": [65, 100, 346, 354, 373, 425, 486, 538, 577, 580, 581, 582, 585, 586, 589, 594, 595, 599, 601, 602, 603, 608, 613, 615, 620, 624, 631, 632, 633, 634, 636, 641, 650, 651, 652, 655, 656, 657, 661, 664, 666, 667, 668, 669, 671, 676, 678, 683, 684, 690, 701, 703, 704, 705, 715, 716, 717, 719, 722, 725, 727, 730, 734, 735, 739, 742, 747, 751, 754, 755, 759, 760, 761, 768, 771, 772, 773, 779, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803], "global_atom": 582, "global_atomic_add": [0, 4, 9], "global_atomic_add_f32": [8, 9], "global_atomic_add_f64": 9, "global_atomic_add_x2": [0, 4, 9], "global_atomic_and": [0, 4, 9], "global_atomic_and_x2": [0, 4, 9], "global_atomic_cmpswap": [0, 4, 9], "global_atomic_cmpswap_x2": [0, 4, 9], "global_atomic_dec": [0, 4, 9], "global_atomic_dec_x2": [0, 4, 9], "global_atomic_fmax": 0, "global_atomic_fmax_x2": 0, "global_atomic_fmin": 0, "global_atomic_fmin_x2": 0, "global_atomic_inc": [0, 4, 9], "global_atomic_inc_x2": [0, 4, 9], "global_atomic_max_f64": 9, "global_atomic_min_f64": 9, "global_atomic_or": [0, 4, 9], "global_atomic_or_x2": [0, 4, 9], "global_atomic_pk_add_f16": [8, 9], "global_atomic_smax": [0, 4, 9], "global_atomic_smax_x2": [0, 4, 9], "global_atomic_smin": [0, 4, 9], "global_atomic_smin_x2": [0, 4, 9], "global_atomic_sub": [0, 4, 9], "global_atomic_sub_x2": [0, 4, 9], "global_atomic_swap": [0, 4, 9], "global_atomic_swap_x2": [0, 4, 9], "global_atomic_umax": [0, 4, 9], "global_atomic_umax_x2": [0, 4, 9], "global_atomic_umin": [0, 4, 9], "global_atomic_umin_x2": [0, 4, 9], "global_atomic_xor": [0, 4, 9], "global_atomic_xor_x2": [0, 4, 9], "global_begin": [602, 734], "global_buff": 582, "global_empti": 734, "global_end": 734, "global_iter": 734, "global_load": 582, "global_load_dword": [0, 4, 9], "global_load_dwordx2": [0, 4, 9], "global_load_dwordx3": [0, 4, 9], "global_load_dwordx4": [0, 4, 9], "global_load_sbyt": [0, 4, 9], "global_load_sbyte_d16": [0, 4, 9], "global_load_sbyte_d16_hi": [0, 4, 9], "global_load_short_d16": [0, 4, 9], "global_load_short_d16_hi": [0, 4, 9], "global_load_sshort": [0, 4, 9], "global_load_ubyt": [0, 4, 9], "global_load_ubyte_d16": [0, 4, 9], "global_load_ubyte_d16_hi": [0, 4, 9], "global_load_ushort": [0, 4, 9], "global_s": 734, "global_store_byt": [0, 4, 9], "global_store_byte_d16_hi": [0, 4, 9], "global_store_dword": [0, 4, 9], "global_store_dwordx2": [0, 4, 9], "global_store_dwordx3": [0, 4, 9], "global_store_dwordx4": [0, 4, 9], "global_store_short": [0, 4, 9], "global_store_short_d16_hi": [0, 4, 9], "globalalia": 773, "globalbuff": 582, "globaldc": 734, "globalisel": [599, 650, 675, 677, 678, 679, 680, 681, 684, 685, 742], "globallayoutbuild": 768, "globallisttyp": 734, "globalref": 725, "globalrefss": 725, "globalsaa": [713, 716], "globalstreamindex": 722, "globalt": 582, "globalvar": 589, "globalvari": [669, 773, 802], "globalvarnam": 702, "globl": [581, 582, 663, 715, 755], "glue": [599, 664], "gmail": 733, "gmake": [765, 773], "gmir": [675, 677, 680, 681], "gn": 757, "gninja": [764, 775], "gno": 582, "gnu": [577, 584, 597, 599, 602, 608, 609, 612, 613, 618, 622, 623, 632, 633, 634, 639, 641, 642, 644, 645, 646, 660, 661, 663, 667, 671, 686, 687, 688, 689, 690, 692, 702, 743, 771, 773, 800], "gnu_debuglink": 633, "gnu_hash": 750, "gnueabi": 692, "gnueabihf": [692, 693], "gnuwin": 673, "gnuwin32": [597, 673], "go": [588, 591, 593, 597, 598, 599, 659, 671, 681, 694, 696, 702, 711, 714, 734, 742, 745, 750, 751, 756, 757, 761, 764, 766, 773, 775, 777, 794, 795, 796, 797, 801, 802], "goal": [577, 592, 599, 601, 602, 612, 623, 631, 656, 658, 659, 661, 669, 685, 687, 701, 705, 709, 714, 724, 748, 751, 753, 756, 759, 760, 761, 770, 776, 779, 799], "goat": 602, "goe": [586, 591, 597, 599, 655, 659, 661, 664, 666, 668, 674, 691, 696, 702, 704, 710, 713, 715, 716, 734, 736, 739, 750, 771, 777, 796, 799, 801], "gofmt": 602, "going": [580, 585, 594, 597, 598, 599, 601, 602, 636, 658, 664, 668, 675, 681, 691, 702, 713, 716, 717, 730, 734, 736, 743, 744, 751, 754, 773, 774, 796, 797, 798, 799, 801, 803], "goingnat": 734, "gold": [597, 599, 671, 689, 719, 745, 769], "goldberg": 668, "goldberg91": 668, "golden": 602, "gone": 780, "good": [585, 592, 593, 599, 601, 602, 603, 604, 631, 651, 652, 653, 654, 659, 662, 666, 667, 671, 674, 681, 689, 691, 694, 701, 702, 703, 708, 710, 711, 714, 715, 732, 733, 734, 737, 739, 743, 744, 747, 750, 751, 755, 756, 761, 762, 771, 773, 795, 796, 797, 798, 799], "goodby": [709, 752], "goodwil": 601, "googl": [594, 652, 659, 660, 733, 739, 748, 751, 764, 766], "googleblog": 704, "googlegroup": 704, "googleprojectzero": 751, "googletest": 608, "gori": 659, "got": [582, 599, 637, 651, 671, 674, 701, 702, 734, 743, 801], "gotload": 701, "goto": [602, 702, 714, 770, 797, 798, 799, 800, 801], "gottarget": 701, "gov": 738, "govern": 702, "gpg": 671, "gpgpu": 652, "gpl": [659, 664], "gplv2": 659, "gplv3": [659, 686], "gpr": [582, 599, 675, 702, 708, 710, 761], "gpr64": 708, "gpr_idx": [240, 363, 475], "gprc": 599, "gprs": [599, 661], "gpu": [215, 217, 218, 227, 229, 230, 577, 579, 581, 582, 599, 652, 660, 715, 759, 769], "gpucc": 652, "gpus": [577, 581, 582, 652, 702, 771], "gpz": 751, "gr": [702, 703], "gr1": 702, "gr16": 599, "gr32": [599, 750, 761, 762], "gr64": [599, 708, 750], "gr64_nosp": 750, "gr8": [599, 771], "grab": [734, 744], "grace": [704, 734, 757], "grad": 654, "gradient": 738, "gradual": [675, 681], "graduat": 659, "grain": [582, 702, 716, 776], "grammar": [598, 662, 761, 794, 798], "grammat": 794, "grant": [594, 659, 691, 714, 779], "granular": [582, 685, 727, 751, 756], "granulated_lds_s": 582, "granulated_wavefront_sgpr_count": 582, "granulated_workitem_vgpr_count": 582, "graph": [582, 590, 593, 596, 597, 599, 622, 636, 650, 661, 671, 676, 701, 702, 703, 706, 716, 729, 741, 742, 750, 760, 765, 771, 773, 774, 795, 796, 797, 798, 799, 801], "graphic": [582, 704, 706, 798, 802], "graphviz": [732, 734, 775], "gratitud": 730, "grayscal": 738, "grbm": 582, "great": [577, 584, 597, 599, 602, 655, 659, 666, 668, 670, 671, 680, 691, 697, 701, 702, 711, 734, 747, 750, 755, 772, 773, 798, 803], "greater": [577, 581, 582, 588, 589, 591, 599, 615, 617, 636, 637, 668, 669, 676, 702, 704, 714, 715, 722, 724, 729, 732, 747, 761, 771], "greatest": 577, "greedi": [599, 609, 651, 683], "green": [659, 736, 739, 757], "greenedistinguish": 739, "greenegitblam": 739, "greet": 761, "gregg": 775, "grep": [597, 599, 603, 651, 671, 689, 736, 765, 766, 800], "grey": [681, 744], "grid": 582, "griddim": 715, "gridsizex": 715, "gridsizey": 715, "gridsizez": 715, "grok": [664, 795], "grokabl": 602, "grosser": 741, "ground": [600, 748], "groundwork": 740, "group": [577, 580, 582, 589, 595, 599, 602, 603, 613, 622, 623, 627, 629, 631, 640, 641, 650, 656, 658, 659, 670, 681, 701, 711, 714, 716, 720, 722, 732, 736, 741, 746, 756, 757, 759, 761, 762, 765, 771, 774, 778, 794, 802], "group_segment_align": 582, "group_segment_fixed_s": 582, "groupsegmentfixeds": 582, "grow": [582, 599, 600, 601, 651, 659, 700, 702, 704, 710, 734, 761, 797], "grown": [594, 734, 798, 802], "growth": [599, 702, 734, 747], "grpc": 704, "grpid": 589, "grunt": 651, "gs": [582, 599, 765], "gs_op_cut": [55, 146, 245, 370, 482], "gs_op_emit": [55, 146, 245, 370, 482], "gs_op_emit_cut": [55, 146, 245, 370, 482], "gs_op_nop": [55, 146, 245, 370, 482], "gstess": 582, "gt": [617, 656, 715, 761], "gtcasl": 738, "gte": 702, "gtu": 715, "gtx": 715, "guarante": [585, 586, 589, 599, 602, 603, 631, 651, 655, 659, 661, 663, 664, 666, 669, 671, 676, 680, 687, 701, 702, 703, 713, 717, 719, 727, 732, 734, 746, 750, 751, 753, 755, 759, 760, 768, 773, 799], "guaranteedtailcallopt": 702, "guard": [663, 666, 704, 706, 734, 747, 759, 773, 779], "guard_cond": [702, 706], "guard_condit": 702, "guardedpoolalloc": 687, "guelton": 748, "guess": [597, 633, 701, 704, 739, 796], "gui": [597, 673], "guid": [577, 584, 591, 593, 595, 599, 600, 638, 652, 653, 654, 656, 658, 659, 669, 670, 671, 672, 673, 692, 694, 702, 727, 733, 734, 739, 742, 744, 750, 759, 761, 762, 766, 769, 771, 778, 794, 800, 804], "guidanc": [594, 602, 654, 659, 666, 722], "guidelin": [659, 693, 734, 739, 751], "gunzip": [671, 673], "gv": [702, 734], "gvn": [586, 666, 703, 773, 780, 781, 782, 796, 797, 798, 799], "gvneedslazyptr": 771, "gvnhoist": 713, "gvreg": [678, 680], "gwp": [742, 747], "gwp_asan": 687, "gwp_asan_opt": 687, "gwpasanalloc": 687, "gz": [671, 673, 693, 744, 775], "gzip": [671, 775], "h264ref": 764, "habit": [602, 732], "hac": 751, "hack": [729, 733, 736, 773, 801, 802, 803], "hackathon": 711, "hacker": [654, 659], "had": [577, 582, 588, 591, 601, 608, 615, 631, 659, 675, 701, 702, 703, 709, 711, 715, 734, 736, 741, 750, 752, 753, 756, 773, 777], "hainan": 582, "half": [580, 582, 589, 599, 602, 617, 636, 676, 704, 709, 734, 752, 771, 780], "halfton": 738, "halfway": 702, "halt": [582, 701, 751], "halv": 662, "han": 694, "hand": [577, 586, 599, 602, 652, 657, 658, 659, 668, 669, 671, 674, 695, 698, 701, 702, 706, 708, 713, 714, 717, 721, 732, 734, 744, 746, 751, 756, 759, 761, 762, 771, 777, 794, 795, 796, 798, 803], "handi": [717, 734, 752, 795], "handili": 602, "handl": [50, 121, 144, 206, 241, 367, 427, 479, 540, 577, 580, 581, 582, 583, 586, 588, 597, 603, 611, 626, 651, 653, 655, 659, 660, 663, 666, 667, 668, 671, 676, 678, 680, 687, 690, 695, 697, 698, 700, 705, 706, 708, 715, 717, 719, 726, 729, 736, 741, 742, 743, 746, 748, 750, 751, 753, 755, 756, 761, 770, 771, 773, 774, 779, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "handle_extens": 773, "handleallerror": 734, "handleattr": 602, "handleattrondecl": 602, "handledefinit": [794, 795, 796, 797, 798, 799, 800, 801], "handleerror": 734, "handleextern": [794, 795, 796, 797, 798, 799, 800, 801], "handlefunctiondecl": 602, "handlelazycallthrougherror": [781, 782], "handlelazycompilefailur": 717, "handleotherdecl": 602, "handler": [581, 586, 599, 602, 650, 655, 657, 661, 665, 687, 702, 717, 776, 779], "handler0": 702, "handler1": 702, "handler2": 702, "handlerpcoffset": 665, "handletoplevelexpress": [794, 795, 796, 797, 798, 799, 800, 801], "handlevardecl": 602, "hang": 676, "hao": 741, "happen": [577, 581, 582, 583, 586, 592, 593, 599, 600, 601, 602, 603, 604, 655, 659, 665, 668, 674, 675, 676, 677, 680, 681, 697, 701, 702, 704, 706, 707, 711, 713, 714, 716, 717, 718, 722, 727, 732, 733, 734, 736, 737, 739, 750, 751, 753, 754, 755, 757, 759, 773, 777, 780, 794, 795, 796, 797, 801], "happi": [733, 734, 735, 736, 799], "happili": 796, "har": 735, "harass": 600, "hard": [593, 599, 602, 659, 661, 664, 666, 674, 689, 692, 693, 702, 729, 731, 733, 735, 739, 750, 756, 762, 777, 798, 800], "hardcod": [697, 699, 771], "hardcodedcontiguousstorag": 734, "hardcodedsmalls": 734, "harddriv": 689, "harden": [687, 702, 712, 742, 748], "harder": [602, 664, 702, 704, 732, 751, 755, 756, 757, 764, 794], "hardwar": [49, 143, 239, 362, 474, 577, 586, 597, 599, 601, 611, 623, 631, 652, 659, 666, 703, 712, 715, 747, 751, 771], "hardware_map": 582, "hardware_stag": 582, "hardwareassistedaddresssanit": 712, "hardwareloop": 702, "harfbuzz": 704, "harm": [599, 602, 637], "harmless": [691, 732], "harri": 738, "harvard": 702, "has": [222, 234, 236, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 608, 613, 614, 622, 623, 626, 629, 631, 633, 634, 636, 637, 640, 641, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 674, 675, 676, 677, 679, 680, 681, 683, 685, 687, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 720, 722, 724, 725, 726, 727, 729, 730, 732, 733, 734, 736, 737, 738, 739, 740, 741, 743, 745, 746, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "hasactivevectorlength": 702, "hasadsizeprefix": 762, "hasard": 668, "hascompletedecod": 761, "hasconflictingtyp": 722, "hasctrldep": [761, 762], "hasdelayslot": [761, 762], "haserror": 745, "hasevex_b": 761, "hasevex_k": 761, "hasevex_l2": 761, "hasevex_rc": 761, "hasevex_z": 761, "hasexternallinkag": 734, "hasextradefregallocreq": 761, "hasextrasrcregallocreq": 761, "hasfp": 771, "hasfparmv8": 762, "hasgc": 714, "hash": [582, 585, 599, 606, 617, 636, 640, 641, 656, 659, 660, 702, 704, 714, 720, 727, 729, 730, 733, 734, 736, 764, 774, 777, 802], "hash_data_count": 750, "hash_funct": 750, "hash_map": 734, "hash_set": 734, "hashadjbufferlength": 729, "hashadjbufferoffset": 729, "hashauxstreamindex": 729, "hashbufferlength": 729, "hashdata": 750, "hashes_count": 750, "hashfunctiontyp": 750, "hashkeys": 729, "hashstreamindex": 729, "hashvaluebufferlength": 729, "hashvaluebufferoffset": 729, "hasiniti": 734, "hasinternallinkag": 734, "hasjit": 771, "haskel": [702, 802], "haslockprefix": 761, "hasn": [601, 669, 734, 748, 773], "hasnam": [701, 734], "hasnoschedulinginfo": 761, "hasnotrackprefix": 761, "hasoneus": 602, "hasopsizeprefix": 762, "haspostiselhook": 761, "hasrepprefix": 761, "hasrex_wprefix": [761, 762], "hassideeffect": [631, 761, 762], "hassse2": 761, "hassse3": 761, "hastrivialkil": 743, "hasvex_4v": 761, "hasvex_l": 761, "hasvex_w": 761, "haswel": 623, "hat": 777, "hatsiz": 777, "have": [49, 55, 115, 143, 146, 202, 239, 245, 304, 362, 370, 471, 474, 482, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 608, 613, 615, 617, 620, 623, 627, 631, 632, 633, 636, 646, 649, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 675, 676, 677, 678, 680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 727, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "haveactivevectorlength": 740, "haven": [602, 673, 677, 702, 716, 748, 757, 771, 773, 774, 775], "havoq": 738, "hawaii": 582, "hazard": [631, 703, 751], "hblcnsviw": 651, "hd": [582, 652], "hd2xxx": 582, "hd6xxx": 582, "hdl": 655, "hds": 652, "he": [577, 766], "head": [584, 602, 654, 668, 671, 674, 684, 702, 709, 733, 736, 752, 757, 761], "headach": 744, "header": [586, 589, 597, 616, 626, 633, 634, 635, 636, 640, 641, 645, 650, 651, 652, 658, 659, 660, 663, 664, 665, 666, 670, 671, 673, 679, 690, 693, 695, 701, 702, 706, 707, 708, 721, 732, 734, 735, 745, 753, 759, 760, 765, 767, 771, 772, 774, 775, 779, 781, 797, 798, 799, 800, 801, 805], "header0": 702, "header_data": 750, "header_data_len": 750, "headerblock": 730, "headerdata": 750, "headers": 729, "headlight": 602, "heal": 665, "healthi": 659, "heap": [585, 687, 702, 703, 742, 747, 749, 751, 753, 755, 777, 799, 802], "heard": [652, 660, 737], "heart": 755, "heartble": 704, "heartfelt": 730, "heartwal": 738, "heavi": [734, 755, 780], "heavier": 659, "heavili": [582, 636, 668, 734, 750, 751, 769, 802], "heavyweight": 734, "heffernan": 652, "held": [577, 588, 659, 702, 733, 747], "helllo": 766, "hello": [598, 656, 671, 673, 701, 702, 759, 760, 761, 766], "hello_world": 582, "hellooooooooooooooo": 687, "helloworld": [598, 692, 772], "helloworldpass": 772, "helo": 766, "help": [577, 581, 582, 583, 585, 586, 588, 592, 593, 594, 595, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 611, 613, 614, 615, 616, 617, 618, 621, 622, 623, 624, 625, 627, 628, 629, 631, 632, 633, 634, 635, 637, 640, 641, 642, 644, 645, 646, 649, 650, 655, 658, 659, 660, 662, 666, 668, 671, 672, 680, 681, 687, 688, 689, 691, 694, 696, 698, 701, 702, 704, 705, 710, 713, 733, 736, 737, 738, 739, 744, 746, 747, 748, 750, 751, 752, 754, 755, 756, 757, 761, 762, 764, 766, 773, 775, 776, 777, 779, 800, 801, 802], "helper": [585, 586, 602, 608, 650, 651, 653, 667, 687, 702, 707, 714, 716, 719, 734, 740, 750, 757, 759, 760, 766, 771, 794, 795, 796, 797, 798, 799, 800, 801], "henc": [582, 602, 651, 655, 671, 702, 705, 706, 753, 761], "henceforth": [725, 729, 749], "henderson": 739, "henderson2002": 668, "hendersonprefix": 739, "henrik": 756, "her": 714, "here": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 47, 48, 142, 237, 238, 393, 394, 506, 507, 577, 580, 581, 582, 585, 586, 592, 593, 597, 598, 599, 602, 603, 612, 613, 631, 636, 637, 651, 652, 656, 657, 659, 660, 661, 664, 666, 668, 669, 670, 671, 673, 674, 675, 679, 681, 687, 688, 689, 690, 691, 692, 694, 695, 697, 699, 701, 702, 703, 704, 705, 706, 707, 708, 711, 713, 714, 715, 717, 721, 722, 727, 730, 733, 734, 736, 739, 743, 746, 747, 749, 750, 751, 753, 755, 756, 759, 760, 761, 762, 764, 765, 767, 769, 771, 772, 773, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805], "herebi": 602, "hertz": 776, "heterogen": [582, 769], "heurist": [599, 702, 732, 767, 774, 776, 799], "hex": [603, 631, 632, 634, 636, 640, 641, 642, 702, 704], "hex16": 777, "hex32": 777, "hex64": 777, "hex8": 777, "hex_numb": 582, "hex_valu": 623, "hexadecim": [581, 582, 612, 629, 632, 636, 640, 641, 642, 644, 651, 702, 777], "hexagon": [599, 671, 702, 739, 759], "hexinteg": 761, "hfc": 665, "hh": 581, "hh567368": 602, "hi": [581, 668, 675, 704, 705, 734], "hi16": 599, "hidden": [577, 582, 589, 599, 602, 607, 617, 633, 635, 651, 698, 700, 701, 702, 722, 734, 736, 750, 767, 768, 773], "hidden_completion_act": 582, "hidden_default_queu": 582, "hidden_global_offset_i": 582, "hidden_global_offset_x": 582, "hidden_global_offset_z": 582, "hidden_hostcall_buff": 582, "hidden_multigrid_sync_arg": 582, "hidden_non": 582, "hidden_printf_buff": 582, "hiddencompletionact": 582, "hiddendefaultqueu": 582, "hiddenglobaloffseti": 582, "hiddenglobaloffsetx": 582, "hiddenglobaloffsetz": 582, "hiddenhostcallbuff": 582, "hiddenmultigridsyncarg": 582, "hiddennon": 582, "hiddenprintfbuff": 582, "hide": [623, 655, 717, 736, 755, 761], "hideaki": 599, "hierarch": [589, 658, 732, 741], "hierarchi": [608, 631, 662, 671, 696, 702, 706, 716, 741, 742, 761, 768, 795], "hiet": 748, "high": [0, 3, 4, 222, 234, 236, 577, 581, 582, 584, 585, 587, 589, 594, 601, 631, 636, 652, 654, 655, 657, 659, 660, 661, 662, 664, 666, 668, 669, 670, 676, 687, 691, 694, 701, 704, 707, 711, 713, 714, 715, 717, 726, 729, 732, 734, 735, 742, 747, 750, 755, 760, 761, 766, 767, 768, 770, 771, 774, 776, 778, 781, 799, 802, 803], "higher": [577, 581, 582, 585, 591, 597, 599, 601, 623, 659, 667, 670, 673, 681, 701, 702, 712, 713, 719, 732, 734, 753, 755, 757, 767, 770, 779, 781, 794, 802], "highest": [577, 582, 588, 676, 702, 794, 795, 796, 797, 798, 799, 800, 801], "highlight": [598, 599, 631, 656, 666, 671, 675, 709, 734, 752, 775, 795, 801], "highproduct": 738, "hihihi": 734, "him": 714, "hint": [593, 602, 634, 635, 646, 666, 669, 767, 795], "hip": [577, 582], "hipe": [599, 702], "hiraditya": 738, "his": 734, "histogram": [630, 631, 640, 641, 738], "histor": [584, 598, 602, 669, 702, 734, 755, 766], "histori": [659, 671, 674, 730, 733], "hit": [590, 631, 704, 713, 734, 751], "hitherto": 589, "hmmer": 764, "hnle": 739, "hnledistinguish": 739, "hoc": [577, 599, 732, 734], "hoist": [582, 585, 586, 602, 697, 702, 706, 713, 732, 734, 753, 767, 773], "hoistcommoncodeinsucc": 697, "hold": [577, 581, 582, 584, 595, 599, 600, 651, 659, 661, 663, 668, 671, 701, 702, 704, 707, 708, 714, 729, 732, 734, 735, 741, 745, 747, 750, 751, 759, 760, 761, 762, 766, 771, 773, 776, 793, 794, 795, 796, 797, 798, 799, 800, 801], "holder": [577, 659], "hole": [651, 702, 737, 751, 755], "holiday": 601, "hollow": 777, "home": [666, 671, 689, 734, 738, 747, 750, 765, 766], "homeless": 734, "homepag": [671, 673], "honour": 663, "hood": 656, "hook": [577, 586, 593, 599, 661, 677, 702, 708, 716, 735, 736, 797], "hope": [585, 589, 601, 602, 651, 652, 659, 668, 714, 731, 732, 773, 780, 796], "horizont": [603, 631, 676, 702], "horn": 751, "horribl": 795, "host": [582, 584, 595, 597, 599, 602, 611, 613, 618, 623, 631, 659, 668, 670, 673, 691, 693, 701, 702, 707, 715, 717, 733, 734, 736, 738, 748, 764, 766, 779, 800, 801], "host_fn": 652, "host_install_dir": 692, "host_on": 652, "hosta": 715, "hostb": 715, "hostc": 715, "hostcal": 582, "hostnam": 764, "hot": [590, 637, 666, 702, 745, 751, 755], "hotfix": 736, "hotspot3d": 738, "hotter": 590, "hottest": [637, 702], "hour": [584, 601, 659, 674, 746], "hous": 703, "how": [55, 146, 245, 370, 482, 577, 580, 582, 586, 587, 588, 589, 590, 591, 593, 594, 595, 597, 598, 602, 603, 607, 608, 623, 636, 646, 651, 652, 655, 656, 657, 658, 659, 660, 661, 662, 666, 668, 670, 671, 672, 673, 674, 680, 682, 701, 702, 703, 706, 708, 709, 713, 715, 716, 718, 719, 722, 730, 732, 733, 734, 735, 736, 737, 739, 741, 742, 746, 747, 751, 753, 755, 757, 762, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804], "howev": [577, 582, 583, 585, 586, 588, 589, 593, 598, 599, 601, 602, 603, 608, 613, 631, 651, 652, 655, 658, 659, 661, 663, 664, 665, 668, 669, 671, 675, 676, 677, 680, 686, 690, 693, 694, 695, 697, 699, 700, 701, 702, 704, 706, 707, 708, 709, 716, 717, 718, 721, 729, 731, 733, 734, 736, 737, 739, 741, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 761, 762, 765, 766, 768, 770, 773, 781, 795, 796, 797, 798, 799, 802], "howto": [693, 709, 752, 804], "howtosubmitabug": 671, "howtousejit": 616, "howtouselljit": 717, "hpc": [577, 738], "hpgmg": 738, "hpp": 661, "hresult": 729, "hrf": 582, "hs": [582, 652], "hsa": 577, "hsail": 582, "hsail_major_vers": 582, "hsail_minor_vers": 582, "hsatext": 582, "hsl": 738, "ht206167": 704, "htm": 738, "html": [597, 602, 617, 623, 650, 656, 662, 671, 691, 692, 693, 694, 697, 702, 704, 715, 736, 738, 739, 740, 744, 745, 750, 751, 759, 764, 765, 779], "http": [670, 688, 693, 704, 736, 738, 739, 751, 764], "https": [587, 597, 601, 602, 625, 626, 627, 629, 633, 634, 635, 642, 644, 645, 656, 667, 671, 673, 674, 690, 691, 692, 693, 694, 695, 702, 704, 733, 736, 738, 739, 740, 744, 751, 764, 765, 774, 779, 780, 781, 782, 804], "huge": [602, 659, 671, 704, 718, 721, 729, 759, 762, 766], "huge16": 721, "hugepoint": 729, "hull": 582, "human": [596, 600, 602, 614, 615, 617, 621, 622, 628, 630, 637, 646, 671, 687, 697, 702, 708, 732, 751, 762, 773, 777], "hundr": 666, "hundt": 652, "hung": 734, "hunt": 748, "hurdl": 664, "hurt": 602, "hvx": 743, "hw": [582, 608, 702], "hw_reg_flat_scr_hi": 49, "hw_reg_flat_scr_lo": 49, "hw_reg_gpr_alloc": [49, 143, 239, 362, 474], "hw_reg_hw_id": [49, 143, 239, 362, 474], "hw_reg_ib_st": [49, 143, 239, 362, 474], "hw_reg_lds_alloc": [49, 143, 239, 362, 474], "hw_reg_mod": [49, 143, 239, 362, 474], "hw_reg_pops_pack": 49, "hw_reg_sh_mem_bas": [49, 362, 474], "hw_reg_status": [49, 143, 239, 474], "hw_reg_tba_hi": 49, "hw_reg_tba_lo": 49, "hw_reg_tma_hi": 49, "hw_reg_tma_lo": 49, "hw_reg_trapst": [49, 143, 239, 362, 474], "hw_reg_xnack_mask": 49, "hwaddresssanit": 702, "hwreg": [0, 2, 3, 4, 9], "hwreg_enc": [49, 143, 239, 362, 474], "hybrid": 751, "hydra": 584, "hydro": 738, "hyper": 739, "hypersparc": 771, "hyphen": [761, 771], "hypothes": 725, "hypothet": [577, 599, 661, 675, 714, 717, 726, 734, 755, 773], "i0": 771, "i1": [590, 599, 655, 664, 665, 675, 697, 702, 706, 713, 715, 750, 767, 768, 771, 795, 797, 799], "i100": 702, "i16": [0, 3, 4, 9, 581, 599, 697, 702, 715, 771], "i16x2": [1, 7, 8, 9], "i17": 675, "i19": 702, "i1942652": 702, "i2": [599, 697, 702, 706, 771], "i20": 702, "i24": 702, "i256": 702, "i29": 702, "i3": [599, 771], "i32": [0, 1, 2, 3, 4, 7, 8, 9, 581, 588, 590, 591, 599, 603, 655, 656, 661, 664, 665, 668, 675, 676, 677, 679, 680, 697, 699, 700, 702, 706, 708, 709, 714, 715, 718, 732, 734, 750, 752, 753, 755, 762, 766, 768, 771, 772, 774, 799, 802], "i32imm": [761, 771], "i32mem": 761, "i32x16": [8, 9], "i32x32": [8, 9], "i32x4": [8, 9], "i386": [599, 633, 646, 702], "i4": [702, 771], "i48": 702, "i4x8": [1, 7, 8, 9], "i5": 771, "i6": 771, "i64": [0, 2, 3, 4, 9, 581, 588, 591, 599, 603, 655, 656, 669, 702, 715, 718, 753, 755, 762, 768, 771], "i64imm": 771, "i65": 702, "i67": 702, "i686": [599, 603, 766], "i7": [688, 702, 771], "i8": [586, 588, 599, 603, 655, 656, 661, 668, 675, 677, 697, 700, 702, 713, 715, 718, 750, 753, 755, 762, 768, 771], "i8086": 800, "i8mem": 599, "i8x4": [1, 7, 8, 9], "i_intr_llvm_ptrmask": 676, "ia": 653, "iaca": 631, "iaddroff": 599, "iamcu": 633, "iat": 690, "ib": 690, "ibc": 690, "ibm": 658, "ic": [593, 739], "icc": [671, 750, 770], "icc_": 771, "icc_g": 771, "icc_n": 771, "icc_val": 771, "ice": [671, 703], "iceland": 582, "icmp": [589, 655, 665, 706, 734, 750], "icmp_eq": 708, "icmpinst": 734, "icon": 733, "iconst": [12, 13, 81, 83, 85, 93, 165, 170, 173, 178, 180, 269, 270, 274, 275, 282, 322, 323, 351, 352, 403, 404, 420, 513, 515, 516, 518, 532], "ics": 670, "icu": 704, "id": [49, 55, 143, 146, 239, 245, 362, 370, 474, 482, 577, 580, 585, 589, 597, 599, 603, 623, 625, 631, 634, 635, 636, 663, 695, 708, 714, 715, 722, 734, 743, 747, 753, 755, 760, 761, 771, 773, 775, 776, 794, 795, 796, 797, 798, 799, 800, 801], "idata": 632, "ide": [597, 598, 673], "idea": [584, 589, 590, 602, 631, 651, 655, 658, 659, 661, 662, 666, 674, 689, 702, 711, 714, 732, 733, 738, 739, 744, 750, 751, 775, 779, 794, 795, 796, 797, 799, 802, 803], "ideal": [631, 659, 674, 702, 704, 711, 734, 755, 771], "ident": [577, 582, 584, 588, 599, 600, 602, 603, 613, 619, 655, 668, 680, 693, 697, 702, 703, 708, 714, 722, 729, 732, 734, 746, 747, 750, 759, 766, 768, 775, 796, 797, 799], "ident_t": 702, "identif": [625, 671, 693, 702, 750], "identifi": [55, 146, 245, 370, 482, 577, 589, 593, 594, 596, 597, 599, 600, 601, 602, 603, 608, 631, 650, 651, 655, 658, 661, 663, 669, 681, 687, 695, 697, 701, 703, 706, 708, 710, 715, 722, 727, 729, 732, 734, 736, 739, 741, 744, 745, 747, 750, 751, 753, 755, 759, 766, 767, 768, 770, 771, 773, 774, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801], "identifierexpr": [794, 795, 796, 797, 798, 799, 800, 801], "identifierstr": [793, 794, 795, 796, 797, 798, 799, 800, 801], "identifycudaprefer": 652, "identitytransform": 780, "idiom": [651, 652, 655, 695, 734, 741, 751, 795], "idiomat": [602, 734, 741, 766], "idiosyncrasi": 757, "idiv": 599, "idnam": [794, 795, 796, 797, 798, 799, 800, 801], "ids": [582, 636, 656, 702, 714, 736, 776], "idx": [602, 623, 669, 702, 708, 759, 775, 795, 796, 797, 798, 799, 800, 801], "idx0": 702, "idx1": [669, 702], "idx2": 669, "idx3": 669, "idxen": [0, 2, 3, 4, 8, 9, 17, 118, 203, 327, 428, 541, 582], "idxmask": 702, "ie": [597, 651, 702, 713], "ieee": [582, 609, 652, 666, 676, 702, 759], "ieee754": 702, "ieee_mod": 582, "if": [17, 20, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 58, 59, 62, 64, 65, 66, 88, 101, 102, 116, 117, 118, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 148, 149, 151, 153, 174, 203, 212, 213, 214, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 249, 252, 254, 278, 327, 336, 337, 343, 344, 346, 360, 370, 371, 373, 374, 378, 379, 380, 396, 426, 428, 436, 439, 440, 443, 444, 447, 448, 449, 459, 460, 461, 462, 463, 464, 473, 482, 483, 486, 487, 491, 492, 493, 509, 539, 541, 549, 552, 553, 556, 557, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 606, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 644, 645, 646, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 675, 676, 679, 680, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 715, 716, 717, 718, 719, 721, 722, 724, 725, 726, 727, 729, 730, 732, 733, 734, 735, 736, 737, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 762, 764, 765, 766, 767, 768, 769, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803], "if_1_then": 582, "ifbodi": 761, "ifcond": [797, 798, 799, 800, 801], "ifcont": [797, 798, 799, 800, 801], "ifconvers": 771, "ifconvert": 771, "ifdef": [651, 652, 656, 687, 704, 756, 759, 761, 796, 797, 798, 799, 800, 801, 802], "ifequ": 702, "ifexpr": [797, 798, 799, 800, 801], "ifexprast": [797, 798, 799, 800, 801], "iff": [680, 702], "iffals": 702, "ific": 651, "ifloc": 801, "ifndef": [652, 760, 761, 772, 779, 780, 781, 782], "ifs": 770, "ifstream": 715, "iftmp": [797, 798, 799, 800, 801], "iftru": 702, "ifunc": 589, "ifuncti": 702, "ifunequ": 702, "ignor": [24, 41, 137, 148, 231, 377, 449, 490, 563, 577, 581, 582, 585, 589, 590, 599, 603, 608, 612, 613, 615, 617, 619, 620, 622, 623, 625, 626, 627, 630, 631, 633, 634, 636, 642, 644, 645, 651, 655, 658, 659, 665, 670, 671, 674, 702, 704, 708, 710, 714, 722, 727, 734, 739, 750, 767, 770, 771, 774, 780, 793, 794, 795, 796, 797, 798, 799, 800, 801], "ignore_crash": 704, "ignore_oom": 704, "ignore_remaining_arg": 667, "ignore_timeout": 704, "ignoresvex_l": 761, "ignoresvex_w": 761, "ihex": 633, "ii": 734, "ii32": 761, "il": 636, "ilbdc": 738, "ill": [577, 613, 687], "illeg": [118, 577, 582, 599, 651, 664, 669, 680, 681, 702, 715, 732, 734, 736, 770], "illinoi": [659, 738], "illustr": [582, 588, 646, 651, 655, 658, 702, 705, 706, 734, 736, 750, 761, 770, 773, 793, 794, 795, 799], "ilp": [631, 770], "ilp32": 802, "im": [586, 702], "imac": 770, "imag": [20, 30, 31, 32, 33, 44, 45, 46, 64, 67, 121, 130, 131, 132, 140, 141, 153, 154, 206, 219, 220, 221, 222, 234, 235, 236, 254, 255, 410, 412, 427, 439, 440, 441, 442, 461, 462, 522, 524, 540, 552, 553, 554, 555, 568, 569, 570, 580, 581, 599, 630, 632, 633, 634, 636, 663, 702, 707, 727, 759, 798], "image_atomic_add": [0, 2, 3, 4, 9], "image_atomic_and": [0, 2, 3, 4, 9], "image_atomic_cmpswap": [0, 2, 3, 4, 9], "image_atomic_dec": [0, 2, 3, 4, 9], "image_atomic_inc": [0, 2, 3, 4, 9], "image_atomic_or": [0, 2, 3, 4, 9], "image_atomic_smax": [0, 2, 3, 4, 9], "image_atomic_smin": [0, 2, 3, 4, 9], "image_atomic_sub": [0, 2, 3, 4, 9], "image_atomic_swap": [0, 2, 3, 4, 9], "image_atomic_umax": [0, 2, 3, 4, 9], "image_atomic_umin": [0, 2, 3, 4, 9], "image_atomic_xor": [0, 2, 3, 4, 9], "image_comdat_select_associ": 702, "image_comdat_select_largest": 702, "image_debug_directori": 727, "image_debug_type_codeview": 727, "image_debug_type_except": 722, "image_debug_type_fixup": 722, "image_debug_type_fpo": 722, "image_debug_type_omap_from_src": 722, "image_debug_type_omap_to_src": 722, "image_file_32bit_machin": 805, "image_file_aggressive_ws_trim": 805, "image_file_bytes_reversed_hi": 805, "image_file_bytes_reversed_lo": 805, "image_file_debug_strip": 805, "image_file_dl": 805, "image_file_executable_imag": 805, "image_file_large_address_awar": 805, "image_file_line_nums_strip": 805, "image_file_local_syms_strip": 805, "image_file_machine_am33": 805, "image_file_machine_amd64": 805, "image_file_machine_arm": 805, "image_file_machine_arm64": 805, "image_file_machine_armnt": 805, "image_file_machine_ebc": 805, "image_file_machine_i386": 805, "image_file_machine_ia64": 805, "image_file_machine_m32r": 805, "image_file_machine_mips16": 805, "image_file_machine_mipsfpu": 805, "image_file_machine_mipsfpu16": 805, "image_file_machine_powerpc": 805, "image_file_machine_powerpcfp": 805, "image_file_machine_r4000": 805, "image_file_machine_sh3": 805, "image_file_machine_sh3dsp": 805, "image_file_machine_sh4": 805, "image_file_machine_sh5": 805, "image_file_machine_thumb": 805, "image_file_machine_unknown": 805, "image_file_machine_wcemipsv2": 805, "image_file_net_run_from_swap": 805, "image_file_relocs_strip": 805, "image_file_removable_run_from_swap": 805, "image_file_system": 805, "image_file_up_system_on": 805, "image_gather4": [0, 2, 3, 4, 44, 140, 234, 568], "image_gather4_b": [0, 2, 3, 4], "image_gather4_b_cl": [0, 2, 3, 4], "image_gather4_b_cl_o": [0, 2, 3, 4], "image_gather4_b_o": [0, 2, 3, 4], "image_gather4_c": [0, 2, 3, 4], "image_gather4_c_b": [0, 2, 3, 4], "image_gather4_c_b_cl": [0, 2, 3, 4], "image_gather4_c_b_cl_o": [0, 2, 3, 4], "image_gather4_c_b_o": [0, 2, 3, 4], "image_gather4_c_cl": [0, 2, 3, 4], "image_gather4_c_cl_o": [0, 2, 3, 4], "image_gather4_c_l": [0, 2, 3, 4], "image_gather4_c_l_o": [0, 2, 3, 4], "image_gather4_c_lz": [0, 2, 3, 4], "image_gather4_c_lz_o": [0, 2, 3, 4], "image_gather4_c_o": [0, 2, 3, 4], "image_gather4_cl": [0, 2, 3, 4], "image_gather4_cl_o": [0, 2, 3, 4], "image_gather4_l": [0, 2, 3, 4], "image_gather4_l_o": [0, 2, 3, 4], "image_gather4_lz": [0, 2, 3, 4], "image_gather4_lz_o": [0, 2, 3, 4], "image_gather4_o": [0, 2, 3, 4], "image_get_lod": [0, 2, 3, 4], "image_get_resinfo": [0, 2, 3, 4, 9], "image_load": [0, 2, 3, 4, 9], "image_load_mip": [0, 2, 3, 4, 9], "image_load_mip_pck": [0, 2, 3, 4, 9], "image_load_mip_pck_sgn": [0, 2, 3, 4, 9], "image_load_pck": [0, 2, 3, 4, 9], "image_load_pck_sgn": [0, 2, 3, 4, 9], "image_rel_amd64_addr32nb": 663, "image_rel_amd64_secrel": 663, "image_rel_amd64_sect": 663, "image_rel_arm64_secrel_high12a": 663, "image_rel_arm64_secrel_low12a": 663, "image_rel_arm64_secrel_low12l": 663, "image_rel_i386_dir32nb": 663, "image_rel_i386_secrel": 663, "image_rel_i386_sect": 663, "image_sampl": [0, 2, 3, 4, 9], "image_sample_b": [0, 2, 3, 4], "image_sample_b_cl": [0, 2, 3, 4], "image_sample_b_cl_o": [0, 2, 3, 4], "image_sample_b_o": [0, 2, 3, 4], "image_sample_c": [0, 2, 3, 4], "image_sample_c_b": [0, 2, 3, 4], "image_sample_c_b_cl": [0, 2, 3, 4], "image_sample_c_b_cl_o": [0, 2, 3, 4], "image_sample_c_b_o": [0, 2, 3, 4], "image_sample_c_cd": [0, 2, 3, 4], "image_sample_c_cd_cl": [0, 2, 3, 4], "image_sample_c_cd_cl_g16": 0, "image_sample_c_cd_cl_o": [0, 2, 3, 4], "image_sample_c_cd_cl_o_g16": 0, "image_sample_c_cd_g16": 0, "image_sample_c_cd_o": [0, 2, 3, 4], "image_sample_c_cd_o_g16": 0, "image_sample_c_cl": [0, 2, 3, 4], "image_sample_c_cl_o": [0, 2, 3, 4], "image_sample_c_d": [0, 2, 3, 4], "image_sample_c_d_cl": [0, 2, 3, 4], "image_sample_c_d_cl_g16": 0, "image_sample_c_d_cl_o": [0, 2, 3, 4], "image_sample_c_d_cl_o_g16": 0, "image_sample_c_d_g16": 0, "image_sample_c_d_o": [0, 2, 3, 4], "image_sample_c_d_o_g16": 0, "image_sample_c_l": [0, 2, 3, 4], "image_sample_c_l_o": [0, 2, 3, 4], "image_sample_c_lz": [0, 2, 3, 4], "image_sample_c_lz_o": [0, 2, 3, 4], "image_sample_c_o": [0, 2, 3, 4], "image_sample_cd": [0, 2, 3, 4], "image_sample_cd_cl": [0, 2, 3, 4], "image_sample_cd_cl_g16": 0, "image_sample_cd_cl_o": [0, 2, 3, 4], "image_sample_cd_cl_o_g16": 0, "image_sample_cd_g16": 0, "image_sample_cd_o": [0, 2, 3, 4], "image_sample_cd_o_g16": 0, "image_sample_cl": [0, 2, 3, 4], "image_sample_cl_o": [0, 2, 3, 4], "image_sample_d": [0, 2, 3, 4], "image_sample_d_cl": [0, 2, 3, 4], "image_sample_d_cl_g16": 0, "image_sample_d_cl_o": [0, 2, 3, 4], "image_sample_d_cl_o_g16": 0, "image_sample_d_g16": 0, "image_sample_d_o": [0, 2, 3, 4], "image_sample_d_o_g16": 0, "image_sample_l": [0, 2, 3, 4], "image_sample_l_o": [0, 2, 3, 4], "image_sample_lz": [0, 2, 3, 4], "image_sample_lz_o": [0, 2, 3, 4], "image_sample_o": [0, 2, 3, 4], "image_scn_align_1024byt": 805, "image_scn_align_128byt": 805, "image_scn_align_16byt": 805, "image_scn_align_1byt": 805, "image_scn_align_2048byt": 805, "image_scn_align_256byt": 805, "image_scn_align_2byt": 805, "image_scn_align_32byt": 805, "image_scn_align_4096byt": 805, "image_scn_align_4byt": 805, "image_scn_align_512byt": 805, "image_scn_align_64byt": 805, "image_scn_align_8192byt": 805, "image_scn_align_8byt": 805, "image_scn_cnt_cod": [633, 805], "image_scn_cnt_initialized_data": [633, 663, 805], "image_scn_cnt_uninitialized_data": [633, 663, 805], "image_scn_gprel": 805, "image_scn_lnk_comdat": 805, "image_scn_lnk_info": [632, 805], "image_scn_lnk_nreloc_ovfl": 805, "image_scn_lnk_oth": 805, "image_scn_lnk_remov": [633, 663, 805], "image_scn_mem_16bit": 805, "image_scn_mem_discard": [633, 663, 805], "image_scn_mem_execut": [633, 805], "image_scn_mem_lock": 805, "image_scn_mem_not_cach": 805, "image_scn_mem_not_pag": 805, "image_scn_mem_preload": 805, "image_scn_mem_purg": 805, "image_scn_mem_read": [633, 805], "image_scn_mem_shar": [633, 805], "image_scn_mem_writ": [633, 805], "image_scn_type_no_pad": 805, "image_section_head": 722, "image_stor": [0, 2, 3, 4, 9, 32, 33, 132, 221, 222, 441, 442, 554, 555], "image_store_mip": [0, 2, 3, 4, 9], "image_store_mip_pck": [0, 2, 3, 4, 9], "image_store_pck": [0, 2, 3, 4, 9], "image_sym_class_argu": 805, "image_sym_class_automat": 805, "image_sym_class_bit_field": 805, "image_sym_class_block": 805, "image_sym_class_clr_token": 805, "image_sym_class_end_of_funct": 805, "image_sym_class_end_of_struct": 805, "image_sym_class_enum_tag": 805, "image_sym_class_extern": 805, "image_sym_class_external_def": 805, "image_sym_class_fil": 805, "image_sym_class_funct": 805, "image_sym_class_label": 805, "image_sym_class_member_of_enum": 805, "image_sym_class_member_of_struct": 805, "image_sym_class_member_of_union": 805, "image_sym_class_nul": 805, "image_sym_class_regist": 805, "image_sym_class_register_param": 805, "image_sym_class_sect": 805, "image_sym_class_stat": 805, "image_sym_class_struct_tag": 805, "image_sym_class_type_definit": 805, "image_sym_class_undefined_label": 805, "image_sym_class_undefined_stat": 805, "image_sym_class_union_tag": 805, "image_sym_class_weak_extern": 805, "image_sym_dtype_array": 805, "image_sym_dtype_funct": 805, "image_sym_dtype_nul": 805, "image_sym_dtype_point": 805, "image_sym_type_byt": 805, "image_sym_type_char": 805, "image_sym_type_doubl": 805, "image_sym_type_dword": 805, "image_sym_type_enum": 805, "image_sym_type_float": 805, "image_sym_type_int": 805, "image_sym_type_long": 805, "image_sym_type_mo": 805, "image_sym_type_nul": 805, "image_sym_type_short": 805, "image_sym_type_struct": 805, "image_sym_type_uint": 805, "image_sym_type_union": 805, "image_sym_type_void": 805, "image_sym_type_word": 805, "imagick": 738, "imagin": [714, 717, 750], "imaginari": 681, "imagmag": 798, "imagstart": 798, "imask": [3, 4, 9], "imbu": 774, "imgrel": 663, "imit": [709, 752, 761], "imm": [599, 631, 634, 636, 702, 710, 761, 771], "imm16": [0, 2, 3, 4, 9], "imm3": [0, 3], "imm32": [0, 2, 3, 599], "imm_eq0": 762, "immarg": [589, 662, 702], "immateri": 714, "immatur": 696, "immedi": [58, 396, 509, 577, 580, 582, 585, 586, 589, 596, 599, 602, 603, 617, 623, 627, 631, 634, 636, 655, 661, 662, 663, 664, 675, 676, 677, 678, 680, 697, 701, 702, 704, 706, 707, 710, 713, 715, 717, 722, 726, 732, 734, 736, 739, 746, 747, 750, 751, 753, 755, 761, 771, 776, 781, 796, 799, 802], "immediatepar": 702, "immigr": 600, "immin": 694, "immleaf": 678, "immsext16": 599, "immsubreg": 771, "immt": [761, 762], "immtyp": [761, 762], "immtypebit": 762, "immun": 751, "immut": [698, 702, 716, 734, 767, 773], "immutablepass": 585, "impact": [582, 595, 596, 598, 601, 602, 631, 659, 666, 668, 687, 697, 702, 734, 738, 739, 741, 750, 751, 757], "imped": 702, "imper": [602, 668, 750, 797, 799], "impl": [650, 734, 773], "implement": [577, 582, 583, 586, 595, 596, 598, 601, 603, 608, 609, 613, 631, 633, 640, 641, 645, 646, 650, 651, 652, 655, 657, 659, 661, 662, 663, 667, 669, 670, 671, 676, 677, 678, 680, 682, 686, 687, 695, 700, 701, 703, 704, 706, 710, 713, 715, 721, 729, 732, 733, 734, 736, 737, 739, 740, 742, 744, 747, 750, 753, 754, 755, 757, 759, 760, 761, 768, 769, 772, 774, 775, 776, 777, 779, 780, 781, 782, 793, 795, 796, 797, 798, 799, 800, 801, 803], "implementor": [668, 762, 796, 797], "impli": [14, 98, 187, 289, 324, 353, 422, 535, 577, 578, 579, 582, 585, 599, 603, 608, 634, 635, 636, 646, 650, 651, 652, 659, 661, 668, 669, 702, 704, 706, 713, 722, 734, 736, 739, 753, 756, 761, 771], "implic": [596, 599, 650, 702, 706, 722, 736, 747, 751], "implicit": [589, 598, 599, 602, 603, 651, 659, 661, 663, 676, 701, 702, 708, 716, 717, 734, 736, 742, 750, 751, 753, 759, 761, 770, 771, 775, 777, 779, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "implicit_def": 697, "implicitarg": 582, "implicitcod": 750, "implicitdef": 599, "implicitdefin": 708, "implicitus": 599, "import": [585, 586, 588, 589, 591, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 608, 620, 631, 636, 637, 641, 651, 654, 659, 666, 668, 670, 671, 672, 673, 689, 690, 691, 693, 694, 696, 699, 701, 702, 704, 714, 716, 717, 720, 722, 725, 726, 727, 732, 744, 747, 750, 751, 753, 770, 771, 772, 773, 774, 777, 780, 794, 795, 796, 797, 798, 801, 802], "impos": [599, 659, 701, 702, 708, 734, 746, 753, 757], "imposs": [585, 586, 588, 680, 702, 751, 771, 779, 802], "impract": [659, 687, 719, 720, 734, 751], "improp": 716, "improv": [577, 582, 585, 594, 595, 597, 601, 602, 608, 659, 661, 666, 668, 671, 677, 681, 685, 694, 701, 702, 704, 706, 708, 714, 717, 732, 733, 734, 736, 739, 743, 748, 750, 751, 755, 761, 771, 773, 779, 781, 796, 802], "impur": 750, "imul": 599, "imul16rmi": 599, "imul16rmi8": 599, "in": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 20, 25, 30, 31, 33, 44, 46, 49, 50, 55, 63, 64, 79, 99, 115, 118, 121, 125, 130, 131, 143, 144, 146, 152, 153, 163, 188, 202, 203, 206, 210, 219, 220, 222, 234, 236, 239, 240, 241, 245, 253, 254, 267, 290, 304, 327, 345, 362, 363, 364, 365, 366, 367, 370, 410, 411, 427, 428, 439, 440, 441, 462, 471, 474, 475, 476, 477, 478, 479, 482, 522, 523, 540, 541, 552, 553, 554, 568, 570, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 593, 594, 595, 596, 600, 601, 603, 604, 606, 607, 608, 609, 611, 613, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 644, 645, 646, 649, 650, 651, 652, 653, 654, 656, 657, 659, 660, 662, 663, 665, 666, 667, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 712, 713, 715, 716, 717, 718, 719, 721, 722, 724, 725, 726, 727, 729, 730, 731, 733, 735, 737, 738, 739, 740, 741, 742, 744, 746, 747, 748, 751, 752, 754, 756, 757, 759, 760, 762, 764, 765, 766, 767, 768, 769, 771, 772, 775, 776, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803], "in0": 702, "in1": [599, 702], "in2": 599, "in32bitmod": 599, "in64bitmod": 599, "inaccess": 687, "inaccessiblemem_or_argmemon": 702, "inaccessiblememon": [589, 702], "inaccessiblememonly_or_argmemon": 589, "inaccur": [598, 631], "inaccuraci": [582, 702], "inact": [577, 580, 582, 702], "inadvert": [603, 697, 756, 767], "inadvis": 669, "inalloca": [589, 655, 702, 742, 743], "inapplic": [592, 689, 751], "inappropri": 746, "inbound": [655, 656, 666, 669, 702], "inc": [599, 602, 650, 655, 671, 699, 702, 708, 734, 748, 756, 759, 760, 761, 771, 773], "inc32r": [708, 750], "inc4": 603, "incant": 652, "incap": [577, 589, 802], "incarn": 662, "incid": 746, "includ": [20, 49, 121, 143, 206, 239, 240, 362, 363, 427, 474, 475, 540, 577, 579, 580, 581, 582, 583, 584, 585, 586, 588, 591, 593, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 608, 609, 610, 613, 615, 616, 617, 626, 627, 628, 629, 634, 636, 642, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 666, 667, 668, 669, 670, 672, 673, 679, 682, 686, 687, 689, 690, 692, 693, 694, 695, 697, 699, 700, 701, 702, 703, 704, 705, 707, 708, 710, 713, 715, 716, 717, 719, 720, 721, 722, 726, 727, 730, 732, 733, 734, 735, 736, 738, 739, 741, 743, 745, 746, 747, 748, 750, 751, 753, 754, 755, 757, 759, 760, 762, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "include_directori": 597, "includedir": 616, "inclus": [577, 580, 581, 582, 591, 602, 617, 631, 650, 659, 663, 690, 702, 735, 748, 756, 759, 771, 779], "incom": [582, 599, 659, 676, 685, 702, 706, 734, 748, 751, 771, 797, 799], "incompat": [633, 645, 661, 687, 702, 731, 759], "incomplet": [577, 582, 660, 664, 734, 751, 759, 780, 781, 782], "inconsist": [602, 623, 669, 739, 750], "inconveni": [704, 799], "inconvertibleerrorcod": 734, "incorpor": [577, 599, 601, 695, 734, 761, 803], "incorrect": [582, 591, 631, 659, 692, 702, 718, 719, 733, 739, 747, 750, 751, 793, 795, 796, 797, 798, 799, 800, 801], "incq": 603, "incr": 633, "increas": [577, 582, 595, 601, 602, 611, 631, 634, 655, 659, 666, 675, 680, 681, 696, 697, 702, 704, 705, 706, 718, 732, 736, 745, 747, 750, 751, 757, 759, 762, 767, 770, 795], "incred": [659, 691, 736], "increment": [577, 582, 593, 598, 599, 602, 631, 668, 671, 704, 718, 722, 726, 727, 729, 732, 734, 740, 749, 757, 797, 799, 800, 801], "incur": 712, "ind": 801, "ind1": 702, "ind4": 702, "indefinit": 704, "indemn": 659, "indent": [634, 646, 709, 734, 752, 777, 801], "independ": [577, 582, 586, 601, 603, 611, 651, 654, 658, 659, 666, 669, 671, 675, 680, 693, 698, 700, 702, 705, 710, 712, 717, 734, 737, 740, 745, 751, 753, 756, 761, 762, 769, 770, 771, 773, 775, 776], "index": [17, 118, 203, 240, 327, 363, 428, 475, 541, 580, 581, 582, 585, 588, 589, 599, 607, 613, 622, 623, 631, 636, 637, 640, 641, 650, 651, 655, 656, 661, 663, 666, 668, 671, 676, 680, 694, 698, 701, 722, 725, 726, 727, 729, 730, 734, 738, 745, 750, 751, 753, 754, 755, 760, 761, 771, 777, 801], "index2": 751, "index2virtreg": 599, "indexedmap": 599, "indexloc": 734, "indexoffsetbufferlength": 729, "indexoffsetbufferoffset": 729, "indexreg": 599, "indextyp": 759, "indic": [30, 31, 49, 61, 88, 100, 130, 131, 143, 174, 219, 220, 239, 251, 278, 354, 362, 372, 425, 439, 440, 474, 485, 538, 552, 553, 572, 577, 578, 579, 580, 581, 582, 585, 588, 589, 590, 591, 592, 597, 599, 601, 602, 603, 608, 613, 615, 619, 631, 646, 650, 651, 655, 656, 659, 661, 662, 663, 668, 679, 680, 681, 693, 695, 698, 702, 703, 704, 715, 719, 720, 721, 722, 724, 727, 730, 732, 733, 734, 736, 741, 747, 750, 751, 753, 755, 759, 760, 761, 762, 765, 770, 771, 773, 775, 776, 794, 795, 797, 801], "indir": 702, "indirect": [577, 582, 586, 596, 599, 602, 608, 633, 634, 635, 641, 655, 663, 664, 676, 704, 708, 713, 718, 726, 750, 753, 755, 760, 761, 771, 781], "indirectstubmanag": [781, 782], "indistinguish": 761, "individu": [577, 579, 582, 588, 589, 593, 599, 602, 603, 608, 613, 615, 617, 631, 633, 636, 642, 645, 646, 656, 658, 662, 666, 673, 676, 685, 692, 702, 704, 710, 713, 718, 719, 722, 730, 732, 736, 737, 739, 746, 748, 751, 755, 760, 761, 766, 774, 801, 803], "indivis": 700, "induc": [687, 706, 741, 742], "induct": [585, 666, 671, 702, 706, 773, 795, 797, 799], "industri": [577, 659, 778], "indvar": [702, 734, 773], "indx": 777, "ineffect": [655, 751], "ineffici": [589, 599, 666, 704, 734, 754, 770, 799], "ineg": 599, "inequ": [581, 599, 734], "inevit": [631, 739], "inexact": [582, 702], "inf": [582, 609, 611, 651, 702, 750], "infeas": [703, 718, 751], "infecti": 734, "infer": [577, 588, 596, 599, 602, 603, 609, 611, 652, 666, 668, 695, 702, 718, 719, 755, 761, 764, 766, 773, 777], "inferattr": 773, "inferenc": 599, "inferior": 657, "infin": [582, 631, 702], "infinit": [577, 585, 599, 680, 702, 704, 706, 732], "infix": 761, "influenc": [588, 594, 702, 703, 748, 750, 767, 773], "info": [582, 589, 595, 597, 599, 606, 608, 622, 623, 629, 631, 634, 636, 637, 640, 641, 646, 650, 653, 657, 659, 661, 668, 671, 683, 691, 693, 702, 703, 704, 705, 719, 721, 725, 730, 736, 745, 746, 759, 770, 773, 776, 777, 793, 798, 799, 801, 802, 803], "inform": [579, 580, 581, 583, 585, 589, 591, 592, 595, 596, 597, 600, 603, 604, 606, 607, 608, 613, 615, 623, 628, 629, 630, 631, 632, 633, 634, 636, 637, 640, 641, 646, 649, 650, 651, 652, 655, 656, 657, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 677, 679, 680, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 703, 704, 705, 706, 707, 708, 709, 710, 714, 715, 718, 720, 722, 724, 726, 727, 729, 730, 733, 735, 736, 739, 741, 742, 744, 745, 746, 747, 748, 751, 752, 753, 754, 755, 756, 759, 760, 761, 762, 764, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 794, 795, 796, 798, 799, 800, 802, 803, 804], "informativemailnotifi": 688, "infrastructur": [577, 593, 599, 636, 654, 659, 662, 668, 670, 671, 672, 702, 716, 717, 719, 734, 736, 741, 742, 745, 748, 750, 755, 757, 764, 769, 770, 773, 778, 796], "infrequ": 773, "infring": 659, "ing": [602, 654, 706, 732, 795, 799], "ingredi": 741, "inher": [598, 601, 664, 702, 716, 727, 734, 751, 761], "inherit": [582, 585, 599, 602, 651, 658, 695, 717, 731, 734, 756, 759, 760, 761, 762, 767, 768, 772, 773, 780], "inhibit": [637, 702, 755], "init": [582, 624, 651, 657, 694, 704, 736, 761, 773, 799, 800, 801], "initact": 583, "initi": [577, 589, 590, 597, 601, 608, 611, 615, 631, 634, 636, 651, 655, 661, 662, 664, 671, 676, 685, 695, 701, 702, 706, 707, 713, 714, 715, 717, 718, 732, 733, 736, 737, 739, 741, 746, 747, 748, 749, 751, 754, 759, 760, 761, 771, 773, 774, 777, 779, 780, 781, 795, 796, 797, 799, 800, 801], "initial_instruct": [577, 582], "initial_loc": 577, "initialc": 716, "initialexec": [589, 702], "initialis": [651, 762, 774, 800], "initialize_ag_pass": 773, "initialize_pass_begin": 679, "initialize_pass_depend": [679, 773], "initialize_pass_end": 679, "initializealiasanalysi": 585, "initializeallasmpars": 800, "initializeallasmprint": 800, "initializealltarget": 800, "initializealltargetinfo": 800, "initializealltargetmc": 800, "initializemodul": [795, 801], "initializemoduleandpassmanag": [796, 797, 798, 799, 800], "initializenativetarget": [796, 797, 798, 799, 801], "initializenativetargetasmpars": [796, 797, 798, 799, 801], "initializenativetargetasmprint": [796, 797, 798, 799, 801], "initializepass": 585, "initializerconst": 702, "initialse": 643, "initid": 589, "initsynclibcal": 586, "initv": [799, 800, 801], "inject": [602, 655, 697, 702, 716, 751], "inlin": [577, 582, 586, 591, 596, 612, 617, 631, 632, 637, 646, 649, 651, 652, 655, 659, 661, 663, 664, 666, 671, 676, 690, 697, 708, 715, 719, 725, 733, 734, 736, 745, 750, 751, 753, 755, 773, 777, 780, 793, 796, 797, 802], "inline": [636, 702, 750], "inline_hd1": 652, "inline_hd2": 652, "inlineasm": 714, "inlinebit": 702, "inlined_at": 663, "inlinedat": [603, 702], "inlinedinfo": 632, "inlinehint": [589, 702], "inner": [595, 598, 604, 661, 697, 700, 702, 704, 706, 716, 732, 734, 741, 761, 767, 769, 770, 777], "inner_a": 702, "innerloop": 741, "innerloopvector": 739, "innermost": [741, 770], "innerstructti": 702, "innoc": 797, "innov": 659, "inoperandlist": [761, 762, 771], "inorderissu": 631, "inorderissuestag": 631, "inplac": 606, "inpredsens": 699, "inprocessmemorymanag": 701, "input": [10, 11, 12, 13, 16, 27, 28, 29, 30, 31, 34, 35, 36, 62, 68, 69, 70, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 103, 104, 105, 106, 111, 112, 113, 114, 117, 127, 128, 129, 130, 131, 151, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 198, 199, 200, 201, 212, 213, 214, 219, 220, 252, 256, 257, 258, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 300, 301, 302, 303, 307, 308, 312, 313, 319, 320, 321, 322, 323, 326, 332, 333, 334, 335, 336, 344, 347, 348, 349, 350, 351, 352, 355, 356, 357, 359, 360, 378, 379, 380, 381, 382, 383, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 465, 466, 467, 468, 469, 470, 473, 491, 492, 493, 494, 495, 496, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556, 557, 573, 574, 575, 577, 578, 580, 581, 582, 583, 585, 587, 593, 594, 598, 599, 602, 603, 604, 606, 608, 609, 611, 613, 614, 615, 617, 618, 620, 621, 622, 623, 624, 625, 627, 629, 630, 631, 632, 634, 636, 638, 640, 641, 642, 644, 645, 646, 649, 650, 651, 652, 658, 664, 671, 676, 677, 680, 681, 685, 694, 699, 701, 703, 704, 705, 706, 708, 715, 718, 722, 732, 734, 741, 743, 745, 748, 750, 751, 755, 759, 761, 762, 764, 766, 770, 771, 773, 775, 779, 780, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 805], "input_vector": 702, "inputcont": 777, "inputfilenam": 651, "inrang": 702, "inreg": [582, 589, 599, 702, 771], "inresumepart": 655, "ins": [588, 599, 699, 761, 762, 771], "insan": 602, "insect": 703, "insensit": [585, 603, 622], "insert": [582, 585, 586, 588, 593, 602, 603, 608, 613, 651, 655, 668, 676, 681, 687, 697, 706, 714, 721, 732, 750, 751, 752, 756, 771, 773, 774, 795, 796, 797, 798, 799, 800, 801], "insert_subreg": 708, "insert_subvector": 599, "insertbefor": 734, "insertbranch": 771, "insertbyt": 704, "insertdeclar": 801, "insertel": [588, 603], "insertvalu": 655, "insid": [589, 595, 597, 598, 599, 602, 603, 608, 613, 656, 657, 658, 660, 661, 668, 670, 671, 681, 693, 695, 701, 702, 704, 706, 713, 714, 716, 722, 729, 732, 734, 741, 744, 750, 751, 754, 755, 759, 761, 765, 766, 767, 768, 773, 777, 796], "insidebundl": 599, "insight": [577, 656, 702, 745, 775], "insignific": [609, 620, 702, 753], "insn": 634, "inspect": [582, 589, 596, 599, 623, 666, 669, 701, 702, 736, 750, 772, 773, 794], "inspir": [631, 702, 732, 750, 775], "inst": [650, 697, 702, 732, 734, 761, 771], "inst_begin": 734, "inst_cal": 589, "inst_end": 734, "inst_invok": 589, "inst_iter": 734, "instal": [582, 584, 597, 598, 607, 616, 652, 654, 660, 662, 667, 671, 673, 686, 687, 688, 689, 690, 692, 694, 701, 704, 715, 731, 734, 735, 736, 744, 762, 764, 765, 773, 774, 794, 795, 796, 797, 798, 799, 800, 801], "instalia": 599, "instalias": 599, "install_gwp_asan_stub": 687, "install_name_tool": 625, "install_prefix": 597, "installeddir": 660, "installsignalhandl": 687, "instanc": [577, 582, 583, 597, 599, 602, 603, 608, 613, 651, 655, 660, 668, 670, 675, 678, 685, 695, 700, 701, 702, 706, 707, 708, 714, 717, 719, 724, 733, 734, 736, 743, 744, 750, 753, 759, 760, 761, 764, 766, 767, 771, 773, 774, 777, 779, 780, 794, 795, 802], "instanceof": [734, 759], "instant": 734, "instanti": [608, 617, 650, 651, 652, 695, 707, 734, 741, 759, 761, 762, 771, 773, 777], "instantiatetemplateattribut": 759, "instcombin": [593, 667, 706, 734, 780, 781, 782, 796, 797, 798, 799], "instead": [24, 377, 490, 577, 578, 582, 585, 586, 589, 593, 595, 597, 598, 599, 600, 602, 603, 606, 608, 611, 612, 613, 617, 622, 623, 624, 628, 631, 632, 634, 636, 646, 649, 651, 652, 655, 656, 657, 659, 661, 663, 664, 666, 667, 669, 670, 671, 675, 680, 681, 685, 687, 688, 689, 691, 694, 695, 699, 700, 702, 703, 704, 708, 714, 715, 717, 722, 732, 734, 736, 741, 743, 746, 748, 749, 750, 751, 753, 755, 756, 760, 761, 764, 766, 769, 771, 773, 774, 775, 776, 777, 780, 781, 794, 795, 796, 798, 799, 802, 803], "instinct": 582, "institer": 734, "instlisttyp": 734, "instnam": 593, "instprint": 759, "instr": [582, 597, 599, 617, 637, 650, 656, 708, 761], "instr0": 714, "instr1": 714, "instr2": 714, "instr_iter": 599, "instr_map": 775, "instrinfo": [599, 708, 771], "instritinclass": [761, 762], "instrmap": 771, "instrprofvaluekind": 702, "instrsch": 734, "instrsdrm": 761, "instrsdrr": 761, "instrssrm": 761, "instrssrr": 761, "instruct": [10, 11, 12, 13, 15, 16, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 319, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 361, 362, 363, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 583, 585, 589, 593, 594, 596, 597, 602, 603, 607, 609, 611, 613, 615, 634, 636, 637, 643, 650, 651, 652, 653, 654, 655, 658, 659, 660, 663, 665, 666, 667, 668, 670, 671, 676, 677, 678, 680, 681, 682, 683, 684, 686, 692, 694, 696, 700, 701, 703, 706, 712, 713, 714, 715, 718, 719, 733, 736, 741, 742, 743, 745, 746, 749, 753, 755, 759, 761, 762, 766, 767, 768, 769, 770, 773, 774, 795, 796, 797, 798, 799, 800, 801, 802], "instructioncount": 745, "instructionencod": 761, "instructionselect": [677, 680, 685], "instructionselector": 682, "instructor": 771, "instrument": [584, 591, 597, 617, 637, 650, 656, 669, 691, 701, 702, 704, 716, 719, 722, 732, 742, 754, 760, 764, 776], "instrumentationmap": 774, "instsimplifi": 651, "instsimplifypass": 716, "instsp": 771, "insttoreplac": 734, "instvisitor": [662, 734], "insuffici": [652, 655, 689, 702, 750, 756, 771], "insul": 751, "insult": 600, "int": [585, 586, 588, 593, 599, 602, 603, 604, 618, 631, 646, 651, 652, 655, 656, 657, 658, 661, 664, 668, 669, 671, 673, 686, 687, 699, 700, 701, 702, 704, 705, 706, 708, 709, 714, 715, 717, 729, 734, 750, 751, 752, 755, 759, 760, 761, 762, 767, 770, 771, 774, 775, 777, 779, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 805], "int128": 729, "int128oct": 729, "int16": 729, "int16_t": [771, 777], "int16short": 729, "int2006": 764, "int32": [729, 753], "int32_t": [668, 722, 729, 777], "int32long": 729, "int32ti": 734, "int32x4_t": 588, "int64": 729, "int64_t": [734, 760, 777], "int64quad": 729, "int8_t": 777, "int_amdgcn_buffer_load_format": 760, "int_amdgcn_image_atomic_swap_1d": 760, "int_get_dynamic_area_offset": 702, "int_min": 702, "intd": 603, "integ": [49, 50, 53, 55, 115, 143, 144, 146, 202, 239, 241, 243, 245, 304, 317, 340, 362, 367, 368, 370, 471, 474, 479, 480, 482, 576, 577, 579, 580, 582, 586, 590, 599, 602, 603, 608, 615, 631, 637, 651, 652, 655, 656, 661, 662, 663, 666, 668, 675, 683, 704, 708, 714, 717, 718, 722, 727, 729, 734, 736, 738, 745, 750, 755, 759, 760, 761, 766, 770, 771, 777, 795], "integer_numb": [25, 26, 47, 48, 49, 50, 55, 61, 79, 99, 115, 125, 126, 142, 143, 144, 146, 163, 188, 202, 210, 211, 237, 238, 239, 240, 241, 245, 251, 267, 290, 304, 362, 363, 364, 365, 366, 367, 370, 372, 392, 393, 394, 471, 474, 475, 476, 477, 478, 479, 482, 485, 505, 506, 507, 576], "integertyp": 734, "integr": [577, 582, 596, 597, 607, 651, 652, 654, 659, 668, 671, 704, 705, 709, 719, 733, 734, 736, 738, 740, 750, 755, 757, 759, 768, 769, 774, 804], "intel": [586, 597, 611, 631, 634, 638, 653, 693, 702, 741, 743, 747, 751, 761, 766, 770, 800], "intel_pst": 587, "intel_syntax": 631, "inteldialect": 702, "intellig": [702, 734, 751], "intend": [577, 582, 584, 585, 586, 595, 597, 598, 599, 600, 601, 602, 603, 620, 626, 642, 644, 651, 655, 659, 661, 662, 666, 668, 671, 675, 681, 683, 685, 702, 705, 707, 710, 719, 727, 732, 734, 736, 743, 746, 747, 751, 752, 753, 756, 761, 769, 771, 773], "intens": [595, 666, 734], "intent": [577, 588, 598, 599, 602, 659, 702, 705, 719, 739, 748, 750, 751, 773, 794, 799], "inter": [582, 585, 591, 602, 659, 666, 702, 703, 717, 754, 756, 761], "interact": [580, 586, 593, 597, 599, 618, 651, 655, 661, 668, 671, 691, 702, 707, 713, 733, 736, 745, 746, 750, 755, 771, 779, 794, 801, 802], "intercept": 704, "interchang": [599, 602], "interest": [577, 582, 585, 586, 588, 594, 595, 599, 601, 602, 603, 604, 607, 608, 615, 631, 651, 654, 656, 659, 661, 664, 666, 667, 668, 671, 673, 688, 695, 701, 702, 704, 707, 708, 711, 727, 732, 734, 737, 739, 748, 750, 751, 755, 760, 765, 769, 772, 773, 775, 777, 780, 793, 794, 795, 796, 797, 798, 799, 801, 802], "interf": 750, "interfac": [582, 597, 599, 602, 608, 613, 641, 650, 651, 653, 657, 659, 660, 661, 667, 668, 670, 671, 686, 695, 698, 699, 701, 702, 704, 705, 706, 714, 715, 717, 732, 742, 745, 747, 750, 753, 759, 761, 769, 771, 772, 773, 780, 781, 793, 794, 795, 802], "interfer": [631, 661, 666, 669, 702], "interim": [596, 659], "interior": [668, 695, 702, 703, 755], "interleav": [577, 582, 634, 736, 741, 761, 770], "interleave_count": 770, "intermedi": [589, 597, 624, 628, 649, 652, 654, 660, 661, 664, 668, 671, 675, 676, 680, 685, 698, 700, 702, 708, 713, 734, 742, 744, 745, 750, 755, 761, 764, 769, 771, 794], "intermediari": 734, "intermingl": 702, "intermitt": 671, "intermix": 582, "intermodular": [705, 769], "intern": [582, 585, 589, 597, 598, 599, 603, 604, 608, 631, 633, 636, 646, 652, 654, 655, 656, 659, 660, 661, 664, 666, 669, 670, 671, 676, 687, 701, 702, 703, 705, 706, 707, 708, 715, 717, 718, 719, 720, 726, 730, 734, 737, 743, 748, 755, 756, 759, 760, 761, 762, 764, 765, 768, 771, 773, 777, 779, 795, 799, 801], "internal_pipeline_hash": 582, "internallinkag": 734, "internalread": 708, "internet": [653, 736], "interoper": [586, 661, 668, 702, 730, 779, 802], "interpol": [21, 60, 122, 150, 207, 250, 472, 484, 582], "interpret": [577, 588, 589, 597, 599, 601, 604, 608, 611, 612, 616, 620, 636, 637, 650, 651, 652, 656, 663, 667, 671, 675, 701, 702, 717, 731, 750, 753, 755, 759, 761, 762, 766, 767, 794, 795, 796, 797, 798, 799, 800, 801, 802], "interprocedur": [585, 702, 705, 719, 773, 780], "interrel": 702, "interrupt": [602, 608, 665, 702, 704, 751, 756], "intersect": 757, "interspers": 776, "intertwin": 703, "interv": [582, 726, 734, 747], "interven": [582, 589, 631, 736, 753], "intim": 602, "intimid": 659, "intimmleaf": 678, "into": [41, 137, 231, 449, 563, 577, 580, 582, 584, 585, 586, 588, 589, 590, 592, 593, 595, 597, 598, 599, 600, 601, 603, 604, 605, 607, 608, 609, 610, 611, 613, 614, 615, 617, 621, 622, 623, 627, 628, 631, 632, 633, 636, 637, 647, 648, 649, 650, 652, 654, 655, 656, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 684, 687, 690, 691, 692, 693, 694, 695, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 717, 722, 730, 733, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 749, 750, 752, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "intpr": 708, "intptr_t": [770, 796, 797, 798, 799, 801], "intptrsiz": 668, "intra": [585, 701, 754], "intraprocedur": [593, 713], "intrecti": 760, "intreg": [699, 771], "intregsclass": 771, "intregsregclass": 771, "intregsregclassid": 771, "intregsregisterclass": 771, "intregssubclass": 771, "intregssubregclass": 771, "intregssuperclass": 771, "intregssuperregclass": 771, "intregsvt": 771, "intrepid": 794, "intric": 660, "intrins": [586, 601, 637, 650, 653, 666, 676, 681, 697, 703, 706, 708, 716, 718, 734, 749, 760, 768, 769, 770, 771], "intrinsicsamdgpu": 760, "intrinsicsnvvm": 715, "intrnodupl": 702, "intro": [653, 654, 702, 799], "introduc": [577, 585, 586, 587, 599, 602, 603, 631, 655, 656, 663, 675, 678, 680, 681, 683, 685, 694, 695, 700, 701, 702, 706, 713, 714, 718, 726, 732, 734, 736, 740, 741, 743, 745, 750, 751, 753, 755, 762, 768, 771, 779, 780, 782, 797, 798, 799, 803], "introduct": [601, 602, 650, 654, 671, 672, 673, 701, 702, 734, 778, 804], "introductori": 778, "introspect": [698, 702, 705, 710, 755], "intrus": [702, 734], "intscalarti": 702, "intti": 702, "inttoptr": [666, 753, 755], "inttyp": 702, "intuit": [702, 706, 713], "inv": 716, "invalid": [577, 580, 581, 582, 585, 586, 602, 608, 623, 633, 637, 645, 649, 651, 655, 661, 669, 671, 676, 702, 703, 704, 706, 707, 722, 732, 734, 747, 750, 751, 753, 755, 757, 761, 771, 773, 777, 794, 795, 796, 797, 798, 799, 800, 801], "invalu": 701, "invari": [585, 666, 671, 681, 697, 703, 706, 734, 755, 767, 773], "invas": [659, 694, 777], "invent": [730, 759, 760], "invers": [580, 623, 702, 732], "inverse_throughput": 623, "invert": [666, 675, 702, 766], "invest": [662, 748], "investig": [636, 659, 680, 739, 748, 751, 779, 802], "invis": 737, "invit": [780, 781, 782], "invoc": [577, 584, 593, 597, 599, 603, 604, 625, 637, 655, 660, 667, 671, 686, 691, 692, 697, 702, 704, 719, 739, 764, 773, 774, 775, 776], "invok": [577, 582, 585, 589, 591, 593, 597, 598, 599, 602, 603, 617, 646, 651, 655, 661, 666, 668, 671, 686, 697, 700, 704, 705, 707, 708, 714, 717, 719, 734, 743, 753, 755, 759, 760, 764, 766, 771, 773, 774, 776, 794, 799], "invoke": 702, "invoke_normal_weight": 591, "invoke_unwind_weight": 591, "involv": [577, 582, 585, 586, 590, 597, 599, 631, 658, 661, 662, 666, 668, 669, 677, 681, 690, 694, 699, 701, 702, 717, 734, 736, 741, 743, 746, 747, 751, 755, 756, 757, 760, 761, 771, 772, 775, 777, 778, 794, 797, 799, 801], "io": [738, 739, 777], "iommu": 582, "ios": [671, 702, 764], "iostream": [687, 715, 775, 800], "ip": [582, 762], "ipa": 703, "ipc": [631, 756], "iphoneo": 764, "ipi": [636, 720, 721, 727, 730], "ipo": [703, 714, 773], "ipra": 582, "ipsk_covmap": 656, "iptr": [675, 702], "ipv": 577, "ir": [585, 590, 591, 593, 594, 599, 611, 650, 651, 654, 655, 658, 661, 662, 665, 671, 672, 676, 677, 680, 681, 685, 686, 691, 696, 700, 702, 703, 706, 709, 713, 714, 715, 716, 717, 718, 719, 735, 741, 745, 750, 752, 753, 755, 761, 766, 767, 768, 771, 772, 773, 774, 775, 779, 780, 781, 782, 794, 796, 798, 799, 800, 801, 803, 804], "irbuild": [697, 718, 734, 795, 796, 797, 798, 799, 800, 801], "irc": [600, 601, 654, 666, 733, 746], "ircompil": 779, "ircompilelay": [717, 779, 780, 781, 782], "irgen": 666, "irgenandtakeownership": 782, "irlay": [780, 782], "irpath": 717, "irread": 597, "irreduc": [702, 706, 732, 771], "irrelev": [585, 603, 669, 702, 759], "irrelevant_extern": 701, "irrelevant_funct": 701, "irrespect": 597, "irtest": 597, "irtransformlay": [743, 781, 782], "irtransl": [681, 685], "is": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 20, 24, 26, 27, 28, 29, 30, 31, 34, 35, 36, 41, 42, 43, 47, 48, 50, 51, 55, 58, 59, 61, 62, 64, 67, 88, 100, 102, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 137, 138, 139, 142, 144, 146, 148, 149, 151, 153, 154, 174, 202, 203, 211, 212, 213, 214, 219, 220, 222, 231, 232, 233, 234, 236, 237, 238, 240, 241, 245, 249, 251, 252, 254, 255, 278, 304, 305, 310, 315, 327, 336, 337, 338, 343, 344, 354, 360, 361, 363, 367, 370, 371, 372, 377, 378, 379, 380, 392, 393, 394, 396, 412, 425, 428, 436, 439, 440, 443, 444, 449, 459, 460, 471, 473, 475, 479, 482, 483, 485, 490, 491, 492, 493, 505, 506, 507, 509, 524, 538, 541, 549, 552, 553, 556, 557, 563, 566, 567, 572, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 752, 753, 754, 755, 756, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 774, 775, 776, 777, 778, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 800, 802, 803, 804], "is64bitmod": 771, "is_base_of": 695, "is_const": 582, "is_int_min_poison": 702, "is_nul": 665, "is_open": 715, "is_pip": 582, "is_ptr64": 582, "is_restrict": 582, "is_stmt": 663, "is_trivially_copy": 734, "is_volatil": 582, "is_zero_undef": 702, "isa": [580, 582, 586, 599, 602, 653, 659, 666, 668, 695, 702, 740, 742, 743, 761, 771], "isa_and_nonnul": 734, "isa_impl": 695, "isabsoluteaddress": 722, "isadd": 761, "isaddresstaken": 708, "isalnum": [793, 794, 795, 796, 797, 798, 799, 800, 801], "isalpha": [793, 794, 795, 796, 797, 798, 799, 800, 801], "isascheapasamov": 761, "isascii": [794, 795, 796, 797, 798, 799, 800, 801], "isasmparseron": 761, "isatleastorstrongerthan": 586, "isauthent": 761, "isbarri": [761, 762], "isbasewithconstantoffset": 678, "isbinaryop": [798, 799, 800, 801], "isbitcast": 761, "isbranch": [761, 762], "iscal": [701, 761, 762], "iscodegenon": 761, "iscommut": [761, 762], "iscompar": 761, "isconst": [582, 589, 734], "isconstantpoolindex": 771, "isconverg": 761, "isconvertibletothreeaddress": [761, 762], "iscxxclass": 750, "isd": [583, 586, 599, 661, 662, 771], "isdeclar": 734, "isdef": 599, "isdefinit": [697, 702, 750], "isdigit": [793, 794, 795, 796, 797, 798, 799, 800, 801], "isdopcod": [583, 599, 662], "isdoubl": 761, "isectcoff": 722, "isehscopereturn": 761, "isel": [599, 609, 650, 685, 703, 750, 760, 771], "iseldagtodag": 759, "isellow": [586, 759], "isempti": 734, "isextern": 750, "isexternalsymbol": 771, "isextractsubreg": 761, "isfirstclasstyp": 714, "isfloatingpointti": 734, "isfoo": 602, "isfunct": 750, "isglobaladdress": 771, "isgroup": [651, 722], "ish": 798, "isimm": 676, "isimmedi": 771, "isimplicitcod": 750, "isimplicitdef": 762, "isindirect": 708, "isindirectbranch": [761, 762], "isinlin": 750, "isinrang": 701, "isinsertsubreg": 761, "isintegerti": 734, "isjumptableindex": 771, "island": 582, "islandingpad": 708, "islazi": 771, "isload": 599, "isloadfromstackslot": 771, "isloc": [697, 702, 750], "isloopinvari": 734, "islvalu": 602, "ismemoryfold": 761, "ismod": 761, "ismoveimm": 761, "ismovereg": 761, "isn": [584, 586, 594, 598, 599, 600, 602, 603, 631, 637, 646, 652, 659, 664, 669, 681, 682, 692, 701, 702, 708, 713, 732, 734, 746, 747, 750, 752, 756, 757, 773, 793, 794, 795, 796, 797, 800, 801], "isnotduplic": [761, 762], "isnul": 602, "isnullvalu": 714, "isobjcclass": 750, "isobviouslysafetofold": 678, "isol": [587, 590, 593, 597, 599, 631, 654, 658, 660, 702, 755, 761, 766, 779, 782, 799], "isomorph": 664, "isoper": [798, 799, 800, 801], "isoperandimmequ": 678, "isopt": 651, "isoptim": [697, 702, 750], "isosdarwin": 801, "ispack": 589, "isphysicalregist": 599, "isphysreg": 734, "ispic": 771, "ispip": 582, "ispoint": 714, "ispointertyp": 602, "ispredic": [761, 762], "isprefix": 651, "ispreiselopcod": 761, "isprint": 704, "isproto": 589, "ispseudo": 761, "isref": 761, "isregist": 599, "isregsequ": 761, "isrematerializ": [761, 762], "isrequir": 772, "isrestrict": 582, "isreturn": [761, 762], "issafetospecul": 755, "isselect": 761, "isselector": 722, "isset": 651, "issimpl": 586, "issiz": 734, "isspac": [704, 793, 794, 795, 796, 797, 798, 799, 800, 801], "isstor": 599, "isstoretostackslot": 771, "isstrongerthan": 586, "issu": [577, 582, 586, 588, 592, 598, 599, 600, 601, 603, 608, 622, 633, 651, 652, 659, 663, 666, 667, 671, 681, 685, 687, 689, 694, 696, 697, 702, 733, 734, 736, 738, 747, 750, 751, 755, 757, 759, 766, 770, 773, 777, 778, 796, 797, 799, 802], "issuedinst": 631, "issuedset": 631, "issuewidth": 631, "istargetspecif": 708, "istermin": [602, 761, 762], "istrap": 761, "istreambuf_iter": 715, "istruncatingstor": 771, "isunaryop": [798, 799, 800, 801], "isunord": 586, "isunpredic": 761, "isunpredicatedtermin": 771, "isus": 599, "isv9": 771, "isvalids": 761, "isvalueunset": 760, "isvararg": 734, "isvector": 767, "isvi": 771, "isvolatil": [582, 702], "iszerofil": 701, "it": [42, 43, 50, 58, 59, 62, 67, 138, 139, 144, 148, 149, 151, 154, 232, 233, 240, 241, 249, 252, 255, 337, 343, 344, 360, 363, 367, 371, 396, 412, 459, 460, 473, 475, 479, 483, 509, 524, 566, 567, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 805], "ital": 577, "italian": 747, "itanium": [618, 619, 663, 667, 768, 769], "itanium_abi_tripl": 766, "item": [577, 588, 589, 598, 615, 651, 661, 663, 666, 702, 704, 714, 734, 736, 739, 750, 755, 760, 761, 777, 799], "iter": [585, 590, 593, 597, 598, 599, 601, 602, 623, 631, 651, 655, 659, 668, 680, 683, 685, 701, 703, 704, 705, 706, 707, 714, 726, 732, 741, 760, 771, 774, 777, 794, 797, 798, 799, 803], "iterator_rang": 734, "ith": 734, "iti": [687, 761], "itinerari": [599, 761, 762, 771], "its": [49, 55, 64, 143, 146, 153, 239, 245, 254, 362, 370, 410, 474, 482, 522, 577, 580, 581, 582, 584, 585, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 602, 603, 604, 606, 608, 609, 613, 614, 615, 620, 621, 622, 624, 628, 630, 631, 632, 634, 637, 642, 649, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 666, 667, 668, 669, 670, 671, 680, 681, 686, 687, 688, 690, 694, 695, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 716, 717, 718, 721, 732, 734, 736, 738, 739, 741, 743, 745, 746, 747, 748, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 773, 776, 779, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "itself": [577, 582, 584, 585, 588, 589, 597, 599, 602, 603, 604, 608, 617, 651, 655, 658, 659, 661, 662, 664, 666, 667, 668, 669, 671, 673, 676, 680, 691, 693, 695, 696, 700, 701, 702, 704, 705, 706, 714, 716, 726, 734, 736, 738, 739, 741, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 759, 760, 762, 766, 767, 772, 773, 777, 779, 780, 782, 794, 795, 796, 797, 798, 799, 800, 801, 802], "iuml": 599, "iv": 748, "ival": [513, 515, 516, 518], "ivanov": 739, "ivanovicdistinguish": 739, "ivar": 750, "j1": 764, "j2": 671, "j4": [691, 744], "jacqu": 652, "jag": 726, "jaguar": 631, "jalu0": 631, "jalu01": 631, "jalu1": 631, "jam": [702, 741], "jame": 739, "jan": 741, "jann": 751, "jarvi": 738, "java": [586, 665, 668, 702, 732, 734, 755, 802], "javascript": [702, 753, 802], "jazz": 735, "jb_1": 750, "jd": [701, 717, 739, 780, 782], "jd1": 717, "jd2": 717, "jdiv": 631, "jdoe": [659, 733], "je": 751, "jeff": 756, "jemalloc": 747, "jessi": 693, "jfpa": 631, "jfpm": 631, "jfpu0": 631, "jfpu01": 631, "jfpu1": 631, "jfpuprf": 631, "jg": 749, "jge": 634, "jingl": 741, "jingyu": 652, "jintegerprf": 631, "jit": [593, 597, 604, 611, 616, 623, 659, 664, 668, 671, 673, 696, 702, 715, 717, 731, 743, 753, 755, 778, 793, 795, 797, 798, 799, 800, 801, 802, 803], "jit_dlclos": 717, "jit_dlopen": [701, 717], "jitcompilecallbackmanag": 781, "jitcompilerfn": 771, "jitcompilerfunct": 771, "jitdylib": [701, 779, 780, 781, 782], "jite": [657, 717, 769, 779, 781, 782], "jitevaluatedsymbol": [779, 780, 781, 782], "jiteventlisten": 717, "jitfail": 717, "jitlink": [717, 769], "jitlinkcontext": 701, "jitlinkdylib": 701, "jitloadergdb": 657, "jitstack": 717, "jitsymbol": [779, 780, 781, 782], "jitsymbolflag": [717, 782], "jittargetaddress": [701, 781], "jittargetmachinebuild": [779, 780, 781, 782], "jlagu": 631, "jlsagu": 631, "jmp": [702, 751], "jmp_1": 750, "jmpq": 751, "jmul": 631, "jn": [689, 693], "jne": [599, 751], "job": [597, 671, 695, 704, 713, 717, 756, 773, 780], "joe": 658, "joerg": 736, "john": [602, 659, 733], "join": [582, 611, 670, 702, 704, 706, 711, 734, 773, 775], "joke": 600, "jonathan2251": 804, "jone": [739, 741], "jonesdistinguish": 739, "josh": 748, "journal": 741, "journey": 799, "jpg": 704, "jsagu": 631, "json": [617, 622, 631, 646, 650, 697, 762, 764], "jsonnrevnum": 736, "jstc": 631, "jtmb": [779, 780, 781, 782], "judg": 622, "judgement": [659, 751], "judgment": 659, "juggl": 652, "juli": [668, 736, 774], "julia": 717, "jump": [581, 589, 596, 651, 655, 661, 663, 676, 696, 697, 702, 706, 717, 734, 735, 751, 768, 771, 781, 797, 801], "jumpi": 697, "jumptabl": [589, 702, 708], "junip": 582, "jurisdict": 659, "just": [577, 584, 585, 586, 587, 588, 589, 590, 593, 594, 595, 598, 599, 601, 602, 603, 606, 608, 611, 613, 615, 617, 620, 631, 632, 634, 636, 646, 651, 652, 655, 656, 659, 663, 664, 669, 671, 673, 674, 675, 679, 680, 686, 689, 693, 694, 695, 696, 697, 701, 702, 704, 706, 708, 709, 711, 713, 714, 715, 716, 717, 732, 733, 734, 735, 736, 737, 743, 744, 749, 750, 751, 753, 755, 756, 759, 760, 761, 762, 764, 765, 766, 771, 772, 773, 774, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "justifi": [705, 757], "justin": 684, "jvalu0": 631, "jvalu1": 631, "jvimul": 631, "jvm": 802, "jvms": 717, "jyknight": 736, "kabini": 582, "kaleidoscop": [671, 714, 717, 734, 779, 780, 781, 782, 803], "kaleidoscopeastlay": 782, "kaleidoscopeastmaterializationunit": 782, "kaleidoscopejit": [780, 781, 782, 796, 797, 798, 799, 801, 804], "kate": 748, "kaveri": 582, "kawahito": 599, "kb": [679, 747], "kd": 582, "kdtree": 738, "keep": [582, 585, 599, 603, 606, 624, 633, 645, 650, 651, 652, 655, 659, 660, 664, 668, 687, 695, 701, 702, 705, 706, 708, 711, 712, 713, 714, 716, 718, 732, 734, 740, 741, 745, 750, 757, 762, 766, 769, 770, 773, 774, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "kele": 684, "kept": [582, 585, 655, 659, 701, 702, 703, 745, 746, 750, 773], "kern0": 582, "kern1": 582, "kernarg": 582, "kernarg_address": 582, "kernarg_s": 582, "kernarg_segment_align": 582, "kernarg_segment_s": 582, "kernargsegmentalign": 582, "kernargsegments": 582, "kernel": [586, 587, 599, 611, 631, 652, 660, 689, 702, 704, 738, 751, 769, 770, 771, 802], "kernel1": 582, "kernel_code_entry_byte_offset": 582, "kernel_param_0": 715, "kernel_param_1": 715, "kernel_param_2": 715, "kernelparam": 715, "kevin": 599, "key": [582, 589, 595, 599, 602, 622, 623, 659, 687, 690, 695, 699, 702, 706, 708, 714, 716, 717, 724, 727, 729, 734, 745, 748, 751, 755, 759, 762, 773], "keycol": 699, "keyr": 671, "keystrok": 602, "keyt": 734, "keytyp": [750, 759], "keyword": [585, 592, 599, 651, 654, 656, 667, 669, 702, 704, 739, 750, 759, 760, 761, 762, 766, 770, 773, 793, 797, 798, 799, 800, 801], "kib": 651, "kick": [659, 701], "kill": [593, 599, 604, 703, 704, 708, 743, 750, 773], "killal": 704, "kind": [577, 579, 580, 581, 582, 586, 589, 591, 599, 600, 601, 602, 603, 608, 609, 613, 615, 650, 651, 656, 657, 661, 662, 664, 665, 667, 670, 694, 695, 697, 698, 701, 702, 703, 704, 705, 708, 713, 714, 716, 718, 720, 721, 722, 729, 732, 734, 736, 743, 746, 750, 751, 752, 753, 759, 761, 768, 775, 776, 778, 779, 798, 799, 800, 801], "kistanova": 688, "klabnik": 748, "klaus": 736, "klimek": 733, "kmean": 738, "kmp": 608, "knock": 602, "know": [577, 582, 585, 586, 588, 592, 593, 597, 598, 599, 601, 602, 608, 631, 651, 654, 655, 656, 657, 659, 661, 664, 666, 668, 671, 673, 674, 688, 695, 696, 701, 702, 704, 705, 706, 709, 715, 718, 726, 730, 733, 734, 736, 739, 746, 748, 750, 751, 752, 754, 755, 759, 766, 768, 770, 771, 773, 777, 780, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "knowledg": [577, 589, 599, 601, 602, 656, 668, 677, 702, 709, 710, 719, 730, 732, 752, 766, 767, 802], "known": [577, 582, 585, 586, 589, 597, 599, 602, 604, 613, 633, 652, 655, 658, 661, 666, 668, 669, 670, 671, 673, 685, 694, 695, 697, 701, 702, 715, 732, 734, 735, 739, 744, 749, 751, 755, 765, 766, 768, 771, 773, 777, 793, 794, 795, 796, 797, 798, 799, 800, 801], "knownbit": [679, 702], "knownsafevalu": 734, "knuth": 761, "koblenz": 741, "kocher": 751, "komatsu": 599, "kostanova": 659, "kripk": 738, "kristof": [739, 748], "kruskal": 738, "kryomodel": 771, "kryowrite_2cyc_xy_norsv_67ln": 771, "kryowrite_2cyc_xy_xy_150ln": 771, "krzysztof": 739, "ks": 801, "ksdbginfo": 801, "kuck": 658, "kuhn": 658, "kw1": 704, "kw2": 704, "kw3": 704, "kwalifi": 805, "l0": [577, 582, 634, 771], "l0s": 582, "l1": [577, 582, 599, 631, 771], "l10": 775, "l1d": 631, "l1s": 582, "l2": [582, 771], "l3": 771, "l4": 771, "l5": 771, "l6": 771, "l7": 771, "la": 717, "lab": [670, 688], "label": [0, 2, 3, 4, 9, 577, 581, 582, 589, 590, 599, 634, 654, 655, 661, 663, 664, 665, 668, 697, 700, 706, 713, 714, 715, 732, 734, 750, 767, 771, 775, 797, 799], "label0": 702, "label_1": [50, 144, 241, 367, 479], "label_2": [50, 144, 241, 367, 479], "label_3": [50, 144, 241, 367, 479], "label_4": [50, 144, 241, 367, 479], "label_branch_weight": 591, "labeltyp": 734, "labf": 651, "labor": 651, "labori": 734, "lack": [596, 599, 600, 631, 668, 669, 680, 690, 702, 718, 731, 747, 751, 757, 762], "lad": 651, "laden": 802, "lagho": 738, "lah": 764, "lahf": 751, "laid": [588, 599, 659, 702, 725, 726, 730, 734, 740], "lako": 602, "lambda": [582, 678, 717, 734, 739, 779], "lammp": 738, "lanai": [671, 739], "lanczo": 738, "land": [601, 655, 659, 661, 700, 702, 708, 748], "landingpad": [655, 661, 732], "landscap": 736, "lane": [577, 580, 675, 676], "lang": [595, 651, 739, 764], "langref": [583, 586, 662, 666, 706, 715, 740, 750], "languag": [582, 586, 597, 598, 599, 600, 601, 603, 609, 614, 621, 624, 628, 649, 651, 652, 653, 654, 655, 659, 660, 661, 663, 665, 667, 668, 669, 671, 672, 675, 677, 692, 697, 701, 703, 704, 708, 715, 717, 732, 734, 737, 738, 741, 742, 748, 753, 755, 759, 761, 762, 766, 770, 771, 776, 777, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 800, 801], "language_vers": 582, "languagevers": 582, "larg": [577, 586, 589, 593, 597, 599, 602, 604, 608, 611, 615, 623, 631, 650, 651, 652, 659, 660, 663, 668, 671, 674, 675, 681, 687, 691, 694, 699, 700, 701, 702, 704, 712, 713, 715, 717, 718, 720, 724, 726, 730, 732, 734, 735, 737, 738, 739, 750, 753, 755, 759, 760, 761, 762, 764, 766, 770, 771, 774, 776, 781, 796], "largeconst": 753, "larger": [577, 582, 589, 595, 599, 601, 615, 623, 624, 631, 656, 658, 660, 662, 663, 676, 680, 691, 702, 704, 718, 722, 734, 738, 739, 747, 750, 755, 759, 771], "largest": [115, 202, 304, 471, 576, 577, 580, 582, 599, 603, 606, 663, 666, 680, 702, 722], "last": [577, 580, 582, 586, 589, 591, 599, 602, 603, 608, 613, 625, 631, 651, 654, 655, 659, 661, 671, 673, 674, 694, 695, 697, 698, 702, 706, 709, 713, 719, 726, 729, 733, 734, 736, 748, 752, 755, 761, 766, 767, 770, 771, 773, 776, 779, 793, 796, 798, 801], "lastchar": [793, 794, 795, 796, 797, 798, 799, 800, 801], "lastinst": 771, "lastopc": 771, "latch": [702, 706], "late": [582, 586, 655, 666, 701, 702, 771], "latenc": [599, 611, 623, 631, 702, 717, 751, 775], "later": [577, 581, 582, 584, 591, 596, 597, 598, 599, 602, 603, 608, 617, 655, 656, 659, 661, 666, 671, 673, 674, 680, 681, 690, 701, 702, 704, 707, 708, 709, 714, 716, 726, 732, 733, 734, 735, 736, 741, 745, 748, 750, 752, 753, 755, 757, 761, 766, 767, 771, 773, 774, 779, 794, 795, 796, 801, 803], "latest": [603, 606, 660, 671, 673, 684, 736, 743, 744, 764], "latter": [581, 586, 599, 655, 659, 680, 683, 702, 706, 714, 734, 739, 750, 760, 767, 771, 794], "lattner": [736, 739], "lattneracronym": 739, "lattneragre": 739, "lattnerfunct": 739, "lattnerlow": 739, "lattnerrevnum": 736, "lattnertransit": 739, "launch": [582, 595, 602, 652, 715, 717, 781], "lava": 738, "lavamd": 738, "law": [602, 746], "lawsuit": 659, "lawyer": 659, "lay": [599, 602, 669, 701, 702, 703, 734, 768, 801], "layer": [585, 667, 681, 690, 701, 708, 717, 726, 736, 743, 745, 779, 781, 782, 802, 804], "layout": [588, 595, 597, 598, 636, 652, 654, 666, 668, 669, 672, 693, 701, 717, 721, 722, 724, 727, 729, 736, 755, 771, 773, 776, 796, 800], "lazi": [585, 634, 701, 702, 743, 779, 780, 796, 804], "lazier": 780, "lazili": [589, 679, 701, 705, 734, 779, 780, 781, 782], "lazycallthrough": [781, 782], "lazyemittinglay": 717, "lazyreexport": [717, 804], "lazyresolverfn": 771, "lb": [717, 739], "lbar": 599, "lbb0_1": [663, 751], "lbb0_2": [749, 751], "lbb0_3": 751, "lbb0_4": 751, "lbb0_5": 751, "lbb0_n": 751, "lbb_end0_0": 663, "lbb_end0_1": 663, "lbd": 804, "lbl": 738, "lbr": 623, "lbrs": 623, "lc_id_dylib": 625, "lclang1": 736, "lclang2": 736, "lcov": 617, "lcovmap": 656, "lcpi0_0": 766, "lcssa": 703, "lcuda": 715, "lcudart": 652, "lcudart_stat": 652, "ld": [597, 651, 667, 671, 686, 689, 690, 692, 715, 771], "ld64": [656, 719], "ld_preload": 747, "ldflag": [616, 686, 779, 780, 781, 782, 795, 796, 797, 798, 799, 800, 801], "ldl": 652, "ldm": 702, "ldpxi": 708, "ldpxpost": 708, "ldr": [663, 710], "ldrd": 586, "ldrex": 586, "ldri": 771, "ldrr": 771, "ldrs": 762, "lds": [0, 2, 3, 4, 9, 18, 41, 49, 115, 119, 137, 143, 202, 204, 231, 239, 304, 362, 423, 449, 471, 474, 536, 563, 576, 581, 582], "lds_direct": [10, 12, 82, 83, 86, 94, 113, 164, 165, 167, 169, 181, 200, 268, 269, 272, 274, 302, 307, 312, 319, 320, 322, 347, 348, 351, 511, 513, 515, 517, 520], "lds_size": 582, "ldststoreupd": 599, "le": [668, 715, 761], "lea": [599, 623, 751, 762], "lead": [586, 598, 599, 603, 608, 618, 623, 633, 634, 635, 651, 655, 659, 669, 676, 677, 686, 692, 697, 702, 704, 706, 716, 732, 734, 739, 747, 750, 751, 754, 757, 766, 777, 781, 794, 801], "leader": [601, 602, 739], "leaf": [609, 661, 702, 720, 755, 775], "leak": [608, 663, 668, 700, 702, 749, 751, 766], "leaki": 704, "leaksanit": 704, "leap": 733, "leaq": [701, 749], "leari": 652, "learn": [600, 602, 659, 671, 702, 704, 709, 714, 730, 733, 734, 738, 739, 752, 772, 778, 780, 799, 802], "least": [577, 582, 585, 586, 587, 588, 589, 595, 599, 601, 602, 608, 613, 623, 625, 629, 631, 634, 636, 638, 651, 655, 659, 661, 667, 675, 676, 680, 689, 691, 693, 702, 704, 706, 711, 713, 720, 732, 734, 736, 739, 744, 748, 751, 753, 755, 759, 761, 771, 774, 776, 794, 795, 796, 797, 798, 799, 800, 801], "leasur": 658, "leav": [577, 582, 587, 592, 594, 601, 608, 633, 645, 651, 655, 659, 664, 668, 671, 676, 686, 702, 704, 706, 714, 715, 717, 732, 733, 736, 741, 743, 750, 751, 755, 771, 780], "leb": 656, "leb128": [577, 599, 609], "left": [577, 580, 581, 582, 589, 593, 598, 599, 602, 655, 659, 666, 674, 676, 687, 702, 706, 714, 732, 734, 761, 762, 765, 770, 771, 777, 779, 794, 795, 797, 801], "left_op": 702, "leftr": 714, "legaci": [589, 594, 597, 603, 668, 702, 717, 718, 743, 757, 767, 772, 773, 775, 779, 780, 781, 782, 796, 797, 798, 799, 800], "legacy_stdio_definit": 690, "legacypassmanag": [773, 775, 780, 781, 782, 796, 797, 798, 799, 800, 801], "legal": [577, 582, 583, 586, 652, 659, 661, 662, 669, 676, 678, 681, 682, 685, 697, 702, 708, 710, 713, 715, 720, 734, 740, 741, 766], "legalact": 771, "legalfor": 680, "legalforcartesianproduct": 680, "legalfortypeswithmems": 680, "legalif": 680, "legalitypred": 680, "legalityqueri": 680, "legaliz": 680, "legalizeact": 771, "legalizedag": [583, 662], "legalizemut": 680, "legalizeop": [583, 662], "legalizerhelpertest": 681, "legalizerinfo": 682, "len": [702, 750], "len_control": 704, "length": [577, 582, 588, 589, 599, 608, 617, 619, 644, 651, 653, 656, 669, 702, 704, 720, 721, 722, 725, 726, 727, 729, 732, 734, 740, 748, 750, 751, 752, 755, 759, 760, 761, 766, 770], "lengthen": 623, "less": [577, 581, 582, 587, 588, 589, 594, 599, 602, 603, 608, 617, 631, 651, 656, 659, 664, 666, 668, 671, 675, 676, 689, 700, 701, 702, 704, 706, 709, 714, 729, 732, 734, 736, 739, 741, 744, 750, 755, 761, 762, 766, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "lesser": [588, 702], "let": [584, 594, 599, 603, 637, 651, 652, 654, 655, 656, 669, 675, 681, 688, 695, 696, 699, 702, 705, 706, 709, 713, 714, 715, 716, 717, 726, 731, 733, 734, 736, 746, 750, 751, 752, 754, 755, 759, 762, 765, 771, 773, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "letitem": 761, "letlist": 761, "letter": [589, 595, 602, 641, 651, 694, 702, 739, 748, 771, 798, 799, 800, 801], "leukocyt": 738, "level": [577, 580, 582, 584, 585, 586, 589, 591, 592, 595, 597, 600, 603, 609, 615, 631, 634, 636, 640, 641, 652, 653, 654, 655, 657, 659, 661, 665, 666, 667, 668, 669, 671, 681, 683, 691, 700, 701, 703, 706, 707, 713, 714, 715, 716, 719, 726, 730, 734, 735, 736, 742, 753, 755, 757, 761, 765, 766, 767, 768, 769, 770, 771, 773, 774, 776, 777, 778, 779, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "leverag": [601, 659, 661, 668, 671, 681, 734, 747, 776], "lex": [761, 793, 801], "lex_1_1_els": 582, "lex_1_1_end": 582, "lex_1_1_start": 582, "lex_1_1_then": 582, "lex_1_els": 582, "lex_1_end": 582, "lex_1_start": 582, "lex_1_then": 582, "lex_end": 582, "lex_start": 582, "lexer": [667, 671, 775, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804], "lexic": [577, 599, 602, 664, 702, 750, 794, 796, 801], "lexicalblock": 801, "lexicograph": [602, 714], "lexidentifi": [662, 775], "lexloc": 801, "lf_arglist": 729, "lf_array": 729, "lf_bitfield": 729, "lf_buildinfo": 729, "lf_class": 729, "lf_endprecomp": 729, "lf_enum": 729, "lf_fieldlist": 729, "lf_func_id": 729, "lf_interfac": 729, "lf_label": 729, "lf_methodlist": 729, "lf_mfunc_id": 729, "lf_mfunction": 729, "lf_modifi": 729, "lf_pad0": 721, "lf_pointer": 729, "lf_precomp": 729, "lf_procedur": 729, "lf_string_id": 729, "lf_structur": 729, "lf_substr_list": 729, "lf_typeserver2": [729, 750], "lf_udt_mod_src_lin": 729, "lf_udt_src_lin": 729, "lf_union": 729, "lf_vftabl": 729, "lf_vtshape": 729, "lfoo": 599, "lfunc1_end": 582, "lfunc_begin0": 663, "lfunc_beign0": 663, "lfunc_end0": 582, "lgkm": 582, "lgkm_cnt": [115, 202, 304, 471, 576], "lgkmcnt": [115, 202, 304, 471, 576, 582], "lgkmcnt_sat": [115, 202, 304, 471, 576], "lgtm": [654, 703, 733], "lh": 764, "lhs": [602, 702, 714, 734, 759, 794, 795, 796, 797, 798, 799, 800, 801], "lhse": [799, 800, 801], "li": [602, 668, 739, 773], "lib": [582, 583, 597, 599, 607, 615, 616, 627, 631, 636, 640, 641, 651, 652, 660, 662, 663, 668, 673, 686, 687, 690, 693, 704, 708, 714, 717, 734, 735, 736, 739, 745, 747, 750, 756, 759, 760, 769, 771, 772, 773, 779, 780, 781, 782, 795, 796, 797, 798, 799, 800, 801], "lib64": [597, 652, 671], "liba": 717, "libb": 717, "libc": [597, 602, 619, 652, 657, 659, 661, 670, 671, 687, 692, 702, 704, 734, 747, 802], "libcal": [680, 765], "libcallfor": 680, "libcallif": 680, "libclang_rt": [691, 704, 774], "libclc": [597, 659, 736], "libcmt": 673, "libcuda": 715, "libcxx": [595, 597, 671, 690, 736, 739, 744], "libcxxabi": [595, 597, 671, 690, 736], "libdir": 616, "liber": 701, "libffi": [597, 731], "libfil": 616, "libfoo": 717, "libfuzz": 667, "libgcc": [586, 661, 749], "libgcc1": 693, "libit": 651, "libllvm": [595, 597, 671, 731], "libllvmcor": 734, "libllvmir": 734, "liblto": [686, 739], "liblzma": 693, "libm": [795, 796], "libnam": [616, 773], "libobject": 701, "libomp": [608, 744], "libomptarget": 608, "libopag": 731, "libpartit": 663, "libpath": [626, 663], "libpfm": 597, "libpo": 651, "librari": [577, 585, 586, 587, 589, 597, 598, 604, 607, 611, 613, 615, 616, 617, 625, 628, 632, 634, 635, 636, 640, 641, 649, 653, 659, 660, 664, 666, 668, 669, 670, 673, 681, 687, 690, 691, 692, 693, 696, 701, 705, 715, 719, 725, 732, 742, 743, 745, 750, 751, 757, 761, 764, 766, 769, 770, 771, 775, 777, 779, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "librarynam": [668, 735], "libremark": 745, "librt": 737, "libsampl": 735, "libscudo": 747, "libsfgcc1": 693, "libstdc": [597, 619, 652, 660, 661, 671, 693], "libsupport": [701, 736], "libtinfo": 693, "libtool": 607, "libunwind": [595, 597, 661, 671, 736, 739], "libx": 627, "libxml": 704, "libxml2": [693, 704], "libxxx": 693, "libz": 702, "lic": 732, "licens": [602, 671, 694, 737, 738, 773, 779, 780, 781, 782], "license": 659, "licm": [586, 655, 666, 697, 703, 706, 734, 773], "lie": [651, 668, 702, 703, 753, 755], "life": [623, 652, 659, 666, 670, 704, 712, 717, 718], "lifelong": 778, "lifetim": [577, 599, 655, 659, 666, 668, 687, 712, 717, 734, 773, 774, 779, 781], "lift": [666, 741, 748, 780], "light": [602, 702, 737, 744, 779], "lightweight": [602, 608, 660, 734], "like": [577, 582, 584, 585, 586, 589, 591, 593, 595, 597, 599, 601, 603, 611, 620, 623, 630, 631, 634, 636, 651, 652, 654, 655, 656, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 671, 673, 674, 675, 676, 678, 679, 680, 681, 689, 690, 691, 693, 695, 696, 697, 701, 702, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 726, 727, 730, 731, 732, 733, 736, 737, 738, 739, 741, 744, 745, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "likeli": [591, 702], "likewis": [702, 760], "lim": 704, "limit": [20, 55, 88, 121, 146, 174, 206, 245, 278, 370, 427, 482, 540, 572, 577, 580, 581, 582, 586, 593, 595, 599, 600, 601, 602, 604, 608, 613, 631, 633, 636, 645, 651, 658, 659, 663, 666, 668, 669, 670, 671, 675, 680, 690, 694, 698, 701, 702, 704, 713, 716, 720, 722, 732, 734, 736, 739, 742, 746, 747, 748, 749, 750, 751, 753, 757, 761, 777, 796, 797, 798, 801], "linaro": [689, 692], "line": [584, 586, 593, 597, 598, 599, 602, 603, 604, 608, 609, 611, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 644, 645, 646, 649, 650, 652, 656, 657, 659, 661, 663, 667, 668, 670, 671, 673, 686, 687, 690, 692, 696, 697, 698, 701, 702, 703, 704, 708, 709, 713, 716, 717, 719, 722, 725, 730, 731, 734, 735, 736, 739, 744, 745, 747, 750, 751, 752, 759, 760, 761, 762, 764, 765, 766, 769, 771, 773, 775, 777, 779, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "linear": [577, 582, 585, 599, 602, 609, 611, 669, 671, 674, 702, 722, 729, 734, 736, 741, 773], "linearscan": [599, 611, 773], "linebegin": 761, "lineend": 761, "lineno": 801, "linger": [601, 755], "link": [577, 578, 579, 582, 585, 586, 587, 593, 595, 597, 599, 602, 604, 606, 607, 613, 616, 617, 626, 632, 633, 634, 645, 646, 649, 651, 652, 656, 659, 663, 667, 668, 670, 672, 687, 690, 692, 693, 694, 696, 703, 704, 709, 712, 713, 714, 717, 719, 720, 722, 727, 729, 731, 732, 733, 734, 735, 736, 743, 744, 746, 747, 749, 750, 751, 755, 758, 763, 764, 766, 768, 769, 771, 773, 774, 775, 780, 781, 794, 795, 796, 798, 800], "link_compon": 735, "linkabl": [577, 582], "linkag": [589, 599, 620, 646, 666, 671, 687, 701, 714, 715, 720, 734, 768, 795, 801], "linkagenam": [697, 702], "linkagetyp": 734, "linkallcodegencompon": 773, "linker": [50, 144, 241, 367, 479, 581, 582, 593, 595, 596, 597, 599, 602, 607, 609, 616, 634, 635, 640, 641, 651, 656, 667, 668, 670, 671, 686, 690, 692, 693, 701, 715, 716, 717, 719, 722, 727, 729, 734, 745, 747, 750, 757, 764, 766, 769, 771, 779, 798], "linkinfo": 730, "linkonc": [589, 671, 702, 715, 734], "linkonce_odr": [589, 656, 666, 702, 715], "linkonceanylinkag": 734, "linkonceodrlinkag": 734, "linpack": [764, 770], "lint": 739, "linux": [582, 586, 597, 599, 608, 623, 638, 652, 657, 660, 661, 667, 671, 686, 687, 689, 690, 691, 692, 693, 702, 704, 712, 717, 737, 743, 751, 753, 764, 766, 769, 774, 795, 796, 800], "lipo": [597, 607, 705], "liquid": 582, "lis": 599, "lisp": [668, 802], "list": [240, 363, 475, 581, 582, 584, 585, 586, 589, 591, 593, 594, 595, 597, 599, 600, 601, 603, 604, 606, 607, 608, 609, 611, 613, 615, 616, 617, 619, 620, 622, 623, 625, 627, 631, 633, 634, 636, 637, 640, 641, 642, 649, 650, 654, 655, 656, 657, 659, 660, 661, 662, 664, 666, 667, 668, 671, 672, 674, 675, 677, 680, 693, 694, 695, 696, 698, 699, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 724, 726, 727, 731, 732, 733, 735, 736, 739, 744, 745, 746, 747, 748, 749, 750, 753, 755, 757, 759, 760, 761, 762, 764, 766, 769, 770, 771, 773, 774, 775, 778, 793, 802], "list1": 761, "list2": 761, "list_nam": 598, "list_of_list": 598, "listconcat": 761, "listen": 701, "listfil": 627, "listsplat": 761, "lit": [584, 597, 603, 607, 673, 681, 691, 697, 735, 736, 750, 754, 757, 764, 766, 772], "lit_arg": 766, "lit_config": 608, "lit_filt": 608, "lit_filter_out": 608, "lit_num_shard": 608, "lit_opt": 608, "lit_run_shard": 608, "lit_test_tim": 608, "lit_xfail": 608, "lit_xfail_not": 608, "litconfig": 608, "liter": [10, 11, 12, 13, 82, 83, 84, 85, 87, 89, 94, 95, 164, 166, 171, 175, 178, 181, 182, 268, 269, 270, 271, 276, 279, 284, 319, 347, 398, 402, 403, 413, 414, 511, 514, 515, 518, 519, 525, 526, 582, 589, 598, 601, 602, 603, 612, 631, 650, 651, 665, 702, 708, 710, 734, 759, 777, 793, 794, 795, 796, 797, 798, 799, 800, 801], "literatur": [599, 706], "lithium": 594, "litloc": 801, "litter": 659, "littl": [582, 588, 589, 599, 651, 658, 660, 664, 668, 669, 671, 680, 681, 685, 689, 702, 706, 709, 714, 719, 730, 732, 734, 745, 750, 752, 756, 768, 771, 773, 776, 780, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "littleaarch64": 633, "littlearm": 633, "littleriscv": 633, "litvalu": 589, "live": [577, 582, 585, 588, 597, 602, 623, 652, 655, 661, 668, 671, 673, 677, 696, 700, 701, 703, 705, 706, 711, 712, 732, 734, 741, 750, 751, 753, 755, 772, 773, 795, 796, 799], "live_begin": 668, "live_end": 668, "live_iter": 668, "live_s": 668, "livecount": 668, "livedebugvalu": 702, "livedebugvari": 750, "livein": [623, 708, 750], "liveinterv": [599, 611], "liveintervalanalysi": 599, "liveli": 623, "liveoffset": 668, "liveonentri": 713, "liveout": [753, 755], "ljti0_0": 751, "lkern0_end": 582, "lkern1_end": 582, "ll": [586, 593, 594, 598, 599, 602, 603, 604, 607, 609, 614, 620, 621, 649, 651, 652, 654, 657, 659, 662, 664, 666, 667, 668, 669, 671, 673, 674, 675, 680, 681, 688, 689, 691, 692, 693, 694, 695, 697, 702, 706, 708, 713, 715, 716, 719, 732, 733, 734, 736, 744, 746, 748, 750, 755, 756, 766, 772, 773, 774, 775, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803], "llazyjitbuild": 717, "llc": [593, 599, 603, 604, 607, 611, 665, 667, 668, 671, 673, 691, 696, 697, 702, 708, 715, 719, 745, 750, 755, 766, 771, 773, 775, 800], "lld": [582, 597, 602, 626, 671, 690, 691, 692, 719, 736, 739, 745], "lldb": [597, 602, 607, 659, 671, 711, 717, 734, 736, 739, 750, 757], "llegacy_stdio_definit": 690, "llgo": 736, "lli": [604, 607, 609, 657, 671, 673, 696, 719, 743, 773], "llibnam": 651, "lljit": [701, 743], "lljitbuild": [701, 717], "lljitexampl": 717, "lljitwithlazyreexport": 717, "lljitwithobjectlinkinglayerplugin": 701, "lllazyjitbuild": 717, "llld1": 736, "llld2": 736, "lllexer": [662, 775], "lllvm1": 736, "lllvm2": 736, "llnl": 738, "llocat": 687, "llparser": [662, 775], "llt": 675, "lltok": 662, "llvm": [577, 583, 584, 596, 603, 604, 605, 606, 610, 648, 651, 652, 657, 665, 666, 672, 676, 677, 679, 680, 681, 682, 684, 685, 687, 690, 692, 698, 700, 707, 708, 709, 712, 714, 716, 717, 718, 719, 720, 721, 722, 726, 727, 729, 730, 733, 738, 739, 744, 746, 747, 751, 752, 760, 761, 762, 764, 765, 767, 768, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 798, 800, 801], "llvm1": 736, "llvm2": 736, "llvm_": [595, 597, 598, 773], "llvm_abi_breaking_check": 597, "llvm_addr2line_opt": 612, "llvm_addrsig": 642, "llvm_all_target": [671, 771], "llvm_analysis_utils_local_h": 602, "llvm_ani": 662, "llvm_any_ti": 760, "llvm_append_vc_rev": 597, "llvm_attribute_deprec": 718, "llvm_attribute_weak": 773, "llvm_bb_addr_map": 663, "llvm_build_32_bit": 597, "llvm_build_benchmark": 597, "llvm_build_dir": 671, "llvm_build_doc": 597, "llvm_build_exampl": 597, "llvm_build_instrumented_coverag": 597, "llvm_build_llvm_dylib": [595, 597, 671], "llvm_build_root": 597, "llvm_build_test": 597, "llvm_build_tool": 597, "llvm_ccache_build": 597, "llvm_ccache_dir": 597, "llvm_ccache_maxs": 597, "llvm_cmake_dir": 597, "llvm_compiler_job": 597, "llvm_create_xcode_toolchain": 597, "llvm_debug": [593, 649, 651], "llvm_definit": 597, "llvm_definitions_list": 597, "llvm_dependent_librari": 663, "llvm_dir": [597, 714], "llvm_distribut": 595, "llvm_distribution_compon": 595, "llvm_doxygen_qch_filenam": 597, "llvm_doxygen_qhelpgenerator_path": 597, "llvm_doxygen_qhp_cust_filter_nam": 597, "llvm_doxygen_qhp_namespac": 597, "llvm_doxygen_svg": 597, "llvm_dylib_compon": [595, 597, 671], "llvm_enable_abi_breaking_check": 734, "llvm_enable_assert": [597, 734], "llvm_enable_bind": 597, "llvm_enable_dia_sdk": 597, "llvm_enable_doxygen": [597, 671], "llvm_enable_doxygen_qt_help": 597, "llvm_enable_eh": 597, "llvm_enable_expensive_check": 597, "llvm_enable_ffi": 597, "llvm_enable_id": 597, "llvm_enable_libcxx": 597, "llvm_enable_libpfm": 597, "llvm_enable_lld": 597, "llvm_enable_lto": [595, 597], "llvm_enable_modul": 597, "llvm_enable_p": 597, "llvm_enable_pedant": 597, "llvm_enable_project": [595, 597, 671, 743, 766], "llvm_enable_rtti": 597, "llvm_enable_runtim": [595, 764], "llvm_enable_sphinx": [597, 671], "llvm_enable_thread": 597, "llvm_enable_unwind_t": 597, "llvm_enable_warn": 597, "llvm_enable_werror": 597, "llvm_enable_z3_solv": 597, "llvm_enable_zlib": 597, "llvm_executionengine_orc_kaleidoscopejit_h": [779, 780, 781, 782], "llvm_experimental_targets_to_build": 597, "llvm_external_": 597, "llvm_external_project": 597, "llvm_externalize_debuginfo": 597, "llvm_force_use_old_toolchain": 597, "llvm_gc_root_chain": 668, "llvm_gcc_dir": 765, "llvm_include_benchmark": 597, "llvm_include_dir": 597, "llvm_include_exampl": 597, "llvm_include_test": 597, "llvm_include_tool": 597, "llvm_install_binutils_symlink": 597, "llvm_install_cctools_symlink": 597, "llvm_install_doxygen_html_dir": 597, "llvm_install_ocamldoc_html_dir": 597, "llvm_install_sphinx_html_dir": 597, "llvm_install_toolchain_on": 595, "llvm_install_util": 597, "llvm_integrated_crt_alloc": 597, "llvm_jitlink": 701, "llvm_lib": 597, "llvm_libdir_suffix": 597, "llvm_library_vis": 668, "llvm_link_llvm_dylib": [595, 597], "llvm_linker_opt": 663, "llvm_lit_arg": 597, "llvm_lit_tools_dir": [597, 673], "llvm_map_components_to_libnam": 597, "llvm_map_components_to_librari": 597, "llvm_obj_root": [735, 765, 766], "llvm_on_unix": 756, "llvm_on_xyz": 756, "llvm_optimized_tablegen": [597, 671], "llvm_package_vers": 597, "llvm_parallel_": 597, "llvm_parallel_compile_job": 597, "llvm_parallel_link_job": 597, "llvm_profdata_fil": [584, 597], "llvm_project": 717, "llvm_reverse_iter": 597, "llvm_revis": 597, "llvm_runtime_distribution_compon": 595, "llvm_site_config": [673, 766], "llvm_source_prefix": 597, "llvm_src_dir": 689, "llvm_src_root": [735, 765], "llvm_stackmap": 753, "llvm_static_link_cxx_stdlib": 597, "llvm_symbolizer_opt": [612, 646], "llvm_sympart": 663, "llvm_tablegen": 597, "llvm_target_arch": 597, "llvm_target_definit": 771, "llvm_targets_to_build": [595, 597, 660, 671, 673], "llvm_temporarily_allow_old_toolchain": 597, "llvm_tools_binary_dir": 597, "llvm_transforms_hellonew_helloworld_h": 772, "llvm_tripl": 623, "llvm_ubsan_flag": 597, "llvm_unreach": [602, 701, 714, 734, 782], "llvm_use_crt_": 597, "llvm_use_intel_jitev": 597, "llvm_use_link": 597, "llvm_use_newpm": 597, "llvm_use_oprofil": 597, "llvm_use_perf": 597, "llvm_use_relative_paths_in_debug_info": 597, "llvm_use_relative_paths_in_fil": 597, "llvm_use_sanit": 597, "llvm_yaml_is_document_list_vector": 777, "llvm_yaml_is_flow_sequence_vector": 777, "llvm_yaml_is_sequence_vector": 777, "llvm_yaml_strong_typedef": 777, "llvmanalysi": 735, "llvmasmpars": 735, "llvmbb": 670, "llvmbc": 589, "llvmbitcod": 662, "llvmbitread": 735, "llvmbool": 743, "llvmcfiverifi": 596, "llvmconfig": 597, "llvmcontext": [702, 717, 719, 745, 775, 779, 780, 781, 782, 795, 796, 797, 798, 799, 800, 801], "llvmcontextimpl": 775, "llvmcore": [694, 735, 744], "llvmcreatedisasm": 710, "llvmcreatesimplemcjitmemorymanag": 753, "llvmcreatetypeattribut": 743, "llvmdevmeet": 684, "llvmdiarglistmetadatakind": 743, "llvmdisasminstruct": 710, "llvmdisassembler_option_usemarkup": 710, "llvmdummi": 771, "llvmdummyasmprint": 771, "llvmdummycodegen": 771, "llvmfuzzeriniti": 704, "llvmfuzzerrundriv": 704, "llvmfuzzertestoneinput": 704, "llvmgccdir": 765, "llvmgetalign": 743, "llvmgetinlineasm": 743, "llvmgetpassplugininfo": 773, "llvmgettypeattributevalu": 743, "llvmgettypekind": 662, "llvmgold": 686, "llvmgrep": 671, "llvmhello": 773, "llvminitializesparcasmprint": 771, "llvminitializesparctargetinfo": 771, "llvmintrinsiccopyoverloadednam": 743, "llvmintrinsiccopyoverloadedname2": 743, "llvmir": 650, "llvmistypeattribut": 743, "llvmjitsymboltargetflag": 743, "llvmjittargetsymbolflag": 743, "llvmlab": 736, "llvmlib": 735, "llvmlibthin": 626, "llvmmemorymanagerallocatedatasectioncallback": 753, "llvmmetadatakind": 743, "llvmname": 760, "llvmnodeduplicatecomdatselectionkind": 743, "llvmnoduplicatescomdatselectionkind": 743, "llvmorcabsolutesymbol": 743, "llvmorccreatecustommaterializationunit": 743, "llvmorcobjecttransformlayertransformfunct": 743, "llvmorg": [671, 694, 711, 736], "llvmpassbuilderoptionssetcoroutin": 743, "llvmpassnam": 597, "llvmpush": 736, "llvmremarkentrydispos": 745, "llvmremarkentryref": 745, "llvmremarkparsercreateyaml": 745, "llvmremarkparserdispos": 745, "llvmremarkparsergetnext": 745, "llvmremarkparserhaserror": 745, "llvmremarkparserref": 745, "llvmrock": 602, "llvmscalaropt": 735, "llvmsetalign": 743, "llvmsetdisasmopt": 710, "llvmsupport": [671, 735], "llvmtarget": 735, "llvmtargetmachin": 771, "llvmtop": 773, "llvmtransformutil": 735, "llvmtype": 760, "llvmtypekind": 662, "llvmtyperef": 662, "llvmweek": 711, "lma": [634, 775], "lmalloc": 651, "lmas": 634, "lmerg": 736, "lmsvcrt": 690, "lmyproj1": 736, "ln": [599, 671, 686, 689, 693], "lnt": [693, 736, 744], "lo": [582, 675, 702], "lo12": 663, "lo16": 599, "load": [44, 45, 46, 140, 141, 234, 235, 236, 461, 462, 568, 569, 570, 577, 580, 585, 586, 587, 588, 589, 593, 597, 602, 603, 604, 608, 609, 611, 613, 620, 633, 635, 636, 637, 641, 649, 651, 655, 657, 659, 661, 663, 665, 668, 669, 675, 676, 680, 681, 683, 687, 696, 697, 701, 703, 704, 705, 706, 708, 710, 713, 714, 715, 717, 718, 724, 732, 734, 736, 740, 741, 742, 747, 750, 753, 754, 755, 766, 768, 771, 774, 775, 799, 800, 801], "loadabl": [633, 668], "loadable_modul": 668, "loaded1": 750, "loaded2": 750, "loader": [582, 657, 671, 708, 751, 796], "loadfromdisk": 701, "loadinst": 602, "loadlal": 702, "loadlibraryperman": 781, "loadmodul": 717, "loadmoduleoncontext": 717, "loadobject": 707, "loadregfromaddr": 771, "loadregfromstackslot": [599, 771], "loadsdnod": 734, "loc": [622, 663, 713, 750, 755, 771, 801], "loc0": 753, "loc1": 753, "local": [577, 582, 585, 589, 590, 599, 602, 603, 609, 611, 617, 620, 622, 627, 630, 632, 633, 634, 645, 651, 652, 655, 659, 661, 664, 668, 677, 689, 691, 692, 697, 701, 703, 707, 708, 712, 714, 715, 716, 720, 732, 733, 734, 739, 741, 747, 750, 751, 754, 755, 757, 759, 761, 766, 769, 773, 777, 795, 796, 803], "local_buff": 751, "local_release_x": 736, "local_unnamed_addr": [589, 663, 702], "localaddress": 702, "localdynam": [589, 702], "localescap": 661, "localexec": [589, 702], "localrecov": 661, "localrepo": 736, "locat": [20, 51, 64, 121, 153, 206, 254, 305, 310, 315, 338, 361, 410, 427, 522, 540, 580, 582, 585, 586, 595, 597, 599, 602, 606, 607, 608, 612, 613, 631, 634, 636, 651, 652, 656, 657, 661, 663, 665, 666, 668, 669, 670, 677, 693, 696, 702, 703, 704, 707, 710, 715, 720, 727, 732, 734, 735, 742, 744, 745, 746, 747, 752, 753, 755, 756, 760, 766, 770, 771, 777, 798, 799], "lock": [586, 597, 666, 702, 717, 734, 736, 747, 773], "lockstep": 736, "loclist": [577, 622], "loclistproc": 577, "loclistsptr": 577, "loclistsptrproc": 577, "locstat": 607, "lod": 580, "lodg": 717, "log": [583, 585, 593, 603, 608, 659, 671, 674, 697, 701, 704, 717, 729, 732, 733, 734, 736, 751, 765, 770, 774, 775, 776, 780], "log10": 770, "log2": 770, "log_arg1": 774, "log_detail": 717, "log_fast": 717, "logarithm": [589, 702, 734], "logcount": 722, "logerror": [794, 795, 796, 797, 798, 799, 800, 801], "logerrorp": [794, 795, 796, 797, 798, 799, 800, 801], "logerrorv": [795, 796, 797, 798, 799, 800, 801], "logfil": 774, "logger": [583, 746], "logic": [581, 582, 599, 602, 603, 608, 631, 655, 656, 659, 669, 678, 695, 702, 706, 714, 722, 732, 734, 741, 751, 761, 779, 794, 797, 798, 799], "logist": 748, "long": [577, 584, 585, 586, 591, 593, 594, 598, 599, 601, 602, 604, 608, 615, 617, 631, 637, 650, 653, 659, 661, 663, 664, 666, 667, 669, 671, 674, 677, 681, 687, 694, 695, 702, 712, 726, 730, 733, 734, 743, 744, 746, 750, 751, 752, 755, 756, 757, 761, 766, 771, 773, 777, 780, 795, 796, 802], "longer": [577, 582, 586, 592, 595, 599, 601, 637, 652, 664, 666, 668, 676, 677, 691, 698, 702, 704, 709, 716, 717, 732, 734, 735, 736, 739, 743, 748, 757, 773, 780, 796, 799], "longjmp": [702, 802], "look": [583, 585, 586, 589, 595, 597, 598, 599, 601, 602, 603, 608, 622, 631, 636, 644, 646, 651, 652, 654, 655, 656, 657, 659, 661, 662, 663, 668, 669, 671, 673, 674, 675, 676, 680, 686, 694, 695, 701, 702, 703, 705, 706, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 722, 726, 727, 730, 732, 733, 734, 735, 736, 737, 739, 745, 749, 750, 751, 752, 753, 755, 759, 760, 761, 766, 768, 769, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801], "lookup": [602, 622, 646, 671, 701, 702, 714, 717, 720, 729, 730, 734, 759, 761, 771, 776, 779, 780, 781, 782, 795, 796, 797, 798, 799, 802], "lookupatablebyvalu": [759, 760], "lookupcentri": 759, "lookupcentrybyencod": 759, "lookupcentrybynam": 759, "lookuptarget": 800, "loooong": 736, "loop": [582, 585, 586, 599, 603, 623, 631, 652, 655, 658, 666, 668, 670, 671, 680, 697, 703, 704, 713, 714, 716, 719, 734, 741, 755, 761, 764, 766, 769, 771, 774, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803], "loop_header_weight": 702, "loopanalysi": 658, "loopbb": [797, 798, 799, 800, 801], "loopcond": [797, 798, 799, 800, 801], "loopdistribut": 767, "loopend": [797, 798, 799, 800, 801], "loopendbb": [797, 798, 799, 800, 801], "loopfoopass": 716, "loopfullunrol": 767, "loophead": [702, 797, 798], "loopid": 767, "loopinfo": [739, 773], "loopinfobas": 734, "loopinfowrapperpass": 773, "loopinterchang": 767, "looppass": [706, 719], "looppassmanag": 706, "looprerol": 764, "looprot": 706, "looprotatepass": 716, "loopsimplifi": 706, "loopstandardanalysisresult": 716, "loopunrol": 767, "loopunrollandjam": 767, "loopunswitch": [666, 732], "looputil": 773, "loopvector": [741, 767], "loopvectorizationplann": 741, "loos": [675, 762], "lore": 584, "lose": [685, 736, 750, 751, 759, 773, 802], "loss": [581, 668, 697, 734, 736, 751], "lossless": 714, "lost": [581, 661, 664, 697, 702, 750, 751, 767, 802], "lot": [584, 593, 594, 597, 598, 599, 602, 651, 659, 662, 664, 668, 669, 671, 675, 681, 689, 695, 698, 701, 702, 708, 718, 731, 732, 734, 736, 750, 751, 762, 765, 771, 773, 774, 777, 781, 794, 795, 796, 798, 799, 801, 802], "love": 734, "low": [61, 222, 234, 236, 251, 372, 485, 577, 580, 581, 582, 587, 589, 599, 615, 631, 636, 640, 641, 651, 655, 662, 668, 669, 670, 671, 680, 683, 687, 701, 702, 712, 714, 715, 716, 726, 734, 741, 751, 755, 756, 760, 761, 771, 776, 794, 798, 799], "lower": [577, 580, 582, 585, 586, 588, 599, 602, 631, 632, 650, 652, 661, 662, 664, 666, 671, 676, 677, 680, 682, 700, 708, 712, 716, 717, 718, 729, 739, 740, 747, 751, 753, 757, 759, 770, 771, 794, 798, 799, 802], "lower16": 663, "lower_bound": [734, 759], "lower_cas": 739, "loweralloc": 773, "lowerbound": 702, "lowercal": 775, "lowercas": [595, 771, 796], "lowercasemod": 760, "lowerfor": 680, "lowerfp_to_sint": 771, "lowerif": 680, "loweroper": 771, "lowertypetest": 768, "lowest": [577, 582, 586, 588, 656, 676, 702, 794, 795, 796, 797, 798, 799, 800, 801], "lpad": [655, 661, 702], "lpae": 586, "lpc": 577, "lpc0": 708, "lpechacek": 587, "lpm": 773, "lq": 631, "lqueue": 631, "lr": [599, 634, 702, 708], "lrt": 652, "ls": [577, 582, 651, 702], "lsampl": 735, "lsb": [148, 599, 676, 776], "lsb_extract": 702, "lsb_one": 676, "lsb_two": 676, "lsda": 703, "lse": 586, "lsl": 663, "lsunit": 631, "lt": [613, 617, 715, 761], "ltmp": 663, "ltmp1": [708, 755], "lto": [589, 595, 655, 703, 705, 719, 743, 745, 767, 768], "lto2": 702, "lto_api_vers": 743, "lto_codegen_add_modul": 705, "lto_codegen_add_must_preserve_symbol": 705, "lto_codegen_compil": 705, "lto_codegen_cr": 705, "lto_codegen_set_debug_model": 705, "lto_codegen_set_pic_model": 705, "lto_module_cr": 705, "lto_module_create_from_memori": 705, "lto_module_dispos": 705, "lto_module_get_macho_cputyp": 705, "lto_module_get_num_symbol": 705, "lto_module_get_symbol_attribut": 705, "lto_module_get_symbol_nam": 705, "lto_module_is_object_fil": 705, "lto_module_is_object_file_for_target": 705, "lto_module_is_object_file_in_memori": 705, "lto_module_is_object_file_in_memory_for_target": 705, "lto_set_debug_opt": 743, "ltopostlink": 702, "lts": [659, 671], "lua": 668, "luckili": 668, "lud": 738, "lump": 760, "lv": [714, 740], "lvalu": 734, "lvaluerefer": 721, "lvaluerefthispoint": 721, "lvl": [739, 775], "lvm": 801, "lwe": [0, 2, 3, 4, 9], "lz": 702, "m0": [10, 11, 12, 13, 56, 57, 58, 74, 80, 81, 82, 83, 84, 85, 86, 89, 91, 92, 93, 94, 147, 158, 164, 165, 166, 167, 168, 169, 170, 175, 176, 178, 179, 180, 181, 246, 247, 248, 262, 268, 269, 270, 271, 272, 273, 274, 275, 279, 281, 282, 283, 307, 308, 312, 313, 319, 320, 321, 322, 323, 342, 347, 348, 349, 351, 352, 389, 395, 396, 397, 398, 399, 403, 404, 413, 419, 420, 421, 502, 508, 509, 510, 511, 512, 513, 515, 516, 518, 519, 520, 525, 531, 532, 533], "m1": [702, 717, 736], "m2": [702, 717], "m35qpb": 775, "m3writenmisc1": 771, "m64": 660, "m7170": 582, "m_": 739, "m_cache_count_max": 747, "m_cache_size_max": 747, "m_decay_tim": 747, "m_func": 734, "m_memtag_tun": 747, "m_op_sel": [0, 5, 6, 7, 8, 9, 51, 305, 310, 315, 338, 361], "m_op_sel_hi": [0, 5, 6, 7, 8, 9, 51, 305, 310, 315, 338, 361, 578], "m_purg": 747, "m_thread_disable_mem_init": 747, "m_tsds_count_max": 747, "ma": [631, 713], "mac": 602, "mach": [589, 607, 618, 625, 629, 642, 653, 702], "mach_universal_binari": 646, "machin": [577, 582, 588, 596, 597, 603, 607, 608, 609, 613, 617, 622, 626, 646, 650, 652, 657, 659, 660, 668, 671, 673, 674, 678, 680, 685, 688, 689, 692, 693, 697, 701, 702, 703, 704, 707, 714, 715, 717, 722, 734, 736, 739, 742, 750, 759, 761, 764, 769, 770, 773, 776, 796, 801, 802, 805], "machine_model": 582, "machinebasicblock": [708, 734, 771], "machineblockfrequencyinfo": 590, "machinecodeemitt": 771, "machineconstantpool": [599, 708], "machineconstantpoolvalu": 708, "machineframeinfo": 599, "machinefunct": [677, 678, 679, 683, 708, 734, 739, 750], "machinefunctioninfo": [599, 708], "machinefunctionpass": [719, 771, 775], "machineinstr": [665, 675, 677, 678, 679, 739, 759, 766, 771], "machineinstrbuild": 675, "machineir": 675, "machineirbuild": 675, "machinememoperand": [586, 676, 680], "machinemoduleinfo": 708, "machineoperand": [599, 676, 739, 771], "machinepassregistri": 773, "machinepassregistrynod": 773, "machineregisterinfo": [599, 675, 685, 739], "machineri": [690, 695, 765], "macho": [589, 599, 609, 633, 634, 641, 642, 701, 707, 717, 745, 753], "macho2": 642, "macholinkgraphbuild": 701, "machoobjectfil": 734, "machoplatformplugin": 701, "macinfo": 702, "maco": [597, 635, 652, 657, 671, 704, 719, 734, 744, 764, 766, 773], "macosx10": 702, "macosx_deployment_target": 744, "macport": 731, "macro": [597, 602, 608, 617, 622, 649, 650, 651, 652, 656, 661, 690, 702, 704, 759, 761, 762, 771, 773, 796], "macronam": [650, 761], "made": [577, 582, 585, 588, 589, 592, 596, 599, 602, 652, 658, 659, 661, 664, 665, 666, 669, 670, 687, 691, 694, 695, 701, 702, 708, 709, 713, 714, 716, 717, 721, 732, 734, 735, 736, 739, 743, 745, 747, 748, 749, 750, 751, 755, 757, 759, 762, 768, 773, 777, 796, 797, 799, 802], "mag": 702, "magic": [586, 671, 702, 704, 726, 734, 745, 750, 798], "magnif": [793, 798], "magnitud": [597, 676, 702], "mail": [600, 601, 654, 659, 667, 671, 688, 694, 703, 704, 709, 711, 733, 735, 743, 744, 746, 748, 755, 757, 774, 775, 778, 802], "mailer": 659, "main": [577, 588, 590, 592, 594, 595, 597, 599, 602, 617, 623, 631, 633, 640, 641, 644, 646, 651, 652, 655, 656, 657, 658, 659, 661, 667, 670, 671, 672, 673, 674, 675, 679, 681, 686, 687, 688, 692, 694, 700, 701, 702, 704, 705, 706, 709, 713, 715, 717, 732, 733, 734, 735, 736, 739, 743, 745, 750, 752, 757, 759, 760, 761, 762, 766, 768, 769, 771, 773, 774, 775, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801, 802], "mainjd": [717, 779, 780, 781, 782], "mainlin": [657, 659, 694, 736], "mainloop": [794, 795, 796, 797, 798, 799, 800, 801], "mainsym": [701, 717], "mainsymbolnam": 717, "maintain": [577, 582, 585, 586, 589, 592, 594, 597, 598, 599, 601, 602, 603, 613, 651, 652, 654, 655, 659, 660, 662, 668, 680, 694, 702, 714, 717, 724, 726, 734, 736, 739, 743, 747, 748, 750, 753, 756, 757, 760, 761, 762, 773, 776], "mainten": [602, 659, 699, 705, 757], "maj": 744, "major": [577, 585, 599, 601, 602, 603, 656, 661, 664, 666, 671, 673, 681, 682, 685, 687, 694, 701, 706, 714, 717, 718, 719, 720, 722, 731, 732, 734, 736, 737, 741, 743, 748, 750, 757, 762, 766, 771, 799], "major_vers": 582, "majorvers": 722, "make": [577, 580, 582, 583, 584, 585, 586, 588, 589, 592, 593, 594, 596, 597, 598, 599, 600, 603, 604, 606, 608, 609, 612, 613, 616, 617, 623, 630, 631, 633, 650, 651, 652, 654, 655, 656, 657, 660, 661, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 679, 680, 681, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 709, 711, 713, 714, 715, 716, 717, 718, 719, 722, 729, 731, 732, 733, 735, 736, 737, 739, 741, 742, 743, 744, 746, 747, 748, 750, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 770, 771, 772, 773, 775, 776, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "make_error": 734, "make_error_cod": 734, "make_fallible_end": 734, "make_fallible_itr": 734, "make_pair": [714, 799, 800, 801], "make_rang": 734, "make_shar": 781, "make_uniqu": [701, 717, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "makearrayref": 759, "makeextern": 701, "makefil": [597, 599, 616, 668, 670, 671, 696, 705, 766, 794, 795], "makelight": 602, "makestruct": 652, "maketir": 602, "makeup": 734, "makevehicl": 602, "malform": [593, 652, 704, 729, 732, 734], "malici": [748, 751], "malloc": [655, 668, 687, 704, 712, 734, 742, 747, 773, 802], "malloc_limit_mb": 704, "mallocbench": 765, "mallopt": 747, "malyutin": 739, "malyutindistinguish": 739, "mamproxi": 716, "man": [597, 651, 742, 766], "manag": [577, 582, 593, 597, 600, 603, 604, 631, 652, 654, 664, 665, 667, 668, 669, 671, 673, 687, 688, 694, 702, 703, 706, 707, 715, 719, 734, 743, 744, 748, 753, 755, 757, 767, 769, 771, 772, 773, 779, 780, 781, 782, 796, 797, 798, 799, 802], "mandat": [599, 702, 736], "mandatori": [580, 603, 666, 673, 675, 680, 701, 702, 734, 743, 745, 771], "mandel": 798, "mandelbrot": [793, 798], "mandelconverg": 798, "mandelhelp": 798, "mangl": [603, 607, 618, 634, 646, 659, 702, 717, 720, 745, 750, 779, 780, 781, 782], "mangleandintern": [717, 779, 780, 781, 782], "manglednamestream": 781, "mangler": [771, 779], "mani": [577, 584, 585, 586, 587, 588, 589, 590, 591, 593, 595, 598, 599, 601, 602, 603, 620, 623, 631, 633, 645, 651, 652, 656, 661, 662, 664, 665, 667, 668, 669, 671, 673, 675, 676, 677, 679, 680, 681, 692, 693, 695, 696, 697, 700, 701, 702, 704, 706, 713, 715, 716, 717, 718, 722, 726, 732, 733, 734, 736, 738, 739, 744, 750, 751, 753, 755, 756, 757, 760, 761, 765, 766, 770, 771, 773, 774, 776, 777, 779, 794, 795, 796, 797, 798, 799, 802], "manifest": [702, 718], "manifesto": 659, "manipul": [577, 582, 599, 602, 607, 613, 633, 636, 664, 698, 701, 712, 734, 741, 747, 757, 768, 799], "manner": [577, 580, 582, 586, 599, 600, 603, 613, 656, 659, 661, 669, 702, 708, 713, 717, 719, 734, 737, 751, 755, 757, 761, 771], "manpag": 598, "manual": [582, 593, 596, 597, 599, 602, 649, 654, 659, 666, 668, 669, 671, 672, 674, 677, 688, 694, 695, 701, 716, 717, 730, 733, 736, 742, 750, 751, 755, 760, 762, 764, 766, 769, 770, 771, 773, 774, 779], "map": [577, 580, 585, 589, 602, 606, 608, 617, 619, 631, 634, 636, 640, 641, 651, 655, 662, 675, 676, 678, 682, 683, 687, 701, 703, 707, 713, 714, 715, 717, 720, 725, 729, 730, 736, 742, 747, 750, 751, 759, 760, 761, 768, 769, 770, 774, 775, 776, 794, 795, 796, 797, 798, 799, 800, 801, 805], "mapopt": 777, "mappingnorm": 777, "mappingnormalizationheap": 777, "mappingtrait": 777, "maprequir": 777, "mapsectionaddress": 707, "maptag": 777, "mapvector": 602, "march": [603, 609, 611, 631, 692, 693, 696, 712, 741, 750, 751, 800], "margin": 751, "mark": [577, 582, 584, 586, 589, 596, 599, 602, 608, 623, 631, 633, 637, 652, 655, 656, 661, 663, 665, 666, 668, 671, 674, 690, 694, 701, 702, 709, 710, 714, 716, 721, 732, 734, 751, 753, 755, 757, 761, 762, 766, 768, 771, 774, 776], "markasignor": 602, "markdown": 752, "markdownquickstarttempl": 709, "marker": [599, 602, 608, 651, 659, 734, 755, 776], "markup": [582, 602, 704, 709, 752], "marshal": [655, 753], "mask": [61, 240, 251, 363, 372, 475, 485, 577, 580, 581, 582, 586, 599, 602, 603, 666, 675, 676, 698, 741, 751, 759, 771, 776, 777], "maskedbitset": 777, "maskedbitsetcas": 777, "maskedir": 740, "maski": 702, "maski64": 702, "maskipopcnt": 702, "masm": [722, 729], "mass": [659, 718], "massag": 691, "massiv": [620, 670, 704, 759], "mast": 748, "master": [597, 659, 670, 688, 730, 735, 736, 738, 761], "match": [577, 580, 581, 582, 583, 586, 589, 591, 593, 595, 597, 598, 602, 604, 607, 608, 613, 617, 619, 620, 622, 624, 631, 633, 636, 637, 645, 650, 651, 652, 655, 656, 661, 662, 667, 668, 669, 671, 675, 676, 680, 695, 701, 702, 704, 705, 708, 712, 716, 720, 722, 730, 732, 734, 736, 740, 743, 745, 747, 750, 759, 761, 766, 771, 773, 775, 776, 777, 793, 795, 796], "matcher": [599, 603, 650, 704, 740, 759, 760], "matchinstructionimpl": 599, "materi": [600, 675, 677, 714, 717, 741, 750, 782], "materializationrespons": [701, 717, 780, 781, 782], "materializationunit": [717, 743, 780, 782], "math": [598, 602, 609, 611, 651, 666, 715, 750, 769, 770, 793, 796, 798], "mathemat": [664, 702, 714, 715, 794], "matplotlib": 630, "matrix": [580, 668, 743], "matt": 739, "matter": [586, 633, 645, 659, 662, 679, 702, 748, 753, 773], "matthew": [736, 748], "matthewsrevnum": 736, "mattr": [603, 609, 611, 634, 771, 800], "matur": [651, 666, 668, 748, 751], "max": [582, 589, 603, 608, 623, 631, 637, 651, 652, 656, 702, 704, 751, 764, 775], "max_dx10": 582, "max_flat_workgroup_s": 582, "max_fp16": 582, "max_int_bit": 734, "max_len": [667, 704], "max_total_tim": 704, "max_vgpr": 582, "maxatomicsizeinbitssupport": 586, "maxflatworkgroups": 582, "maxim": [589, 595, 611, 658, 701, 702, 704, 706, 717], "maximum": [582, 585, 586, 590, 597, 599, 606, 608, 615, 622, 623, 631, 651, 676, 680, 687, 704, 706, 714, 734, 747], "maximum_operations_per_instruct": 582, "maxscalar": 680, "maxsimultaneousalloc": 687, "maxsiz": 602, "may": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 45, 46, 49, 50, 52, 53, 54, 55, 62, 115, 118, 121, 127, 128, 129, 130, 131, 132, 141, 143, 144, 145, 146, 151, 202, 203, 206, 212, 213, 214, 219, 220, 221, 222, 235, 236, 239, 240, 241, 242, 243, 244, 245, 252, 304, 306, 311, 316, 317, 318, 327, 336, 339, 340, 341, 344, 360, 362, 363, 367, 368, 369, 370, 378, 379, 380, 427, 428, 436, 439, 440, 441, 442, 443, 444, 461, 462, 471, 473, 474, 475, 479, 480, 481, 482, 491, 492, 493, 540, 541, 549, 552, 553, 554, 555, 556, 557, 569, 570, 576, 577, 578, 579, 580, 581, 582, 583, 586, 588, 589, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 608, 609, 611, 613, 617, 622, 623, 624, 631, 632, 633, 634, 637, 640, 641, 645, 651, 652, 654, 655, 656, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 673, 675, 676, 677, 680, 681, 686, 687, 688, 689, 691, 692, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712, 713, 715, 716, 717, 718, 719, 720, 722, 726, 727, 729, 730, 732, 733, 734, 735, 736, 737, 739, 741, 743, 746, 747, 748, 750, 751, 753, 754, 755, 756, 757, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 780, 781, 782, 795, 796, 797, 798, 799, 800, 801, 802], "may_return_nul": 747, "may_throw": 661, "mayalia": [585, 702], "mayb": [631, 662, 674, 704, 751, 774, 802], "maybe_instru": 774, "maybeoverridden": 714, "maybevalu": 651, "mayfail": 734, "mayfail2": 734, "mayload": [631, 761, 762], "maynot": 652, "mayraisefpexcept": 761, "mayreadfrommemori": 586, "maystor": [631, 761, 762], "maytrap": 702, "maywritetomemori": [586, 734], "mb": [704, 738, 777], "mbb": [599, 771], "mbbi": 599, "mc": [582, 657, 663, 671, 703, 707, 708, 766], "mca": [607, 743], "mcasmpars": 599, "mcasmstream": 599, "mccfiinstruct": 708, "mccodeemitt": [599, 759], "mcdesc": 771, "mcdisassembl": 599, "mce": 771, "mcexpr": 599, "mcinn": 748, "mcinst": [631, 759], "mcinstlow": 599, "mcinstrdesc": 675, "mcjit": [666, 701, 717, 743, 769, 779], "mclabel": 599, "mcmodel": 663, "mcobjectstream": 599, "mcode": 582, "mcoperand": 599, "mcpu": [582, 609, 611, 623, 631, 634, 635, 689, 693, 715, 766, 771], "mcregaliasiter": 599, "mcsectioncoff": 599, "mcsectionelf": 599, "mcsectionmacho": 599, "mcstreamer": 668, "mcsymbol": 668, "mctargetdesc": 759, "mctargetstream": 599, "mcumod": 582, "md": [668, 702, 704, 709, 738], "md5": [577, 617, 637, 656], "md_prof": 591, "mdnode": [591, 702, 767], "mdstring": [591, 702], "mdtupl": 702, "me": [601, 602, 654, 659, 703, 709, 752, 796, 797, 800], "meabi": 609, "mean": [49, 55, 115, 143, 146, 202, 222, 234, 236, 239, 240, 245, 304, 362, 363, 370, 471, 474, 475, 482, 576, 577, 578, 580, 581, 582, 585, 587, 588, 589, 591, 592, 595, 597, 598, 599, 600, 601, 602, 603, 608, 613, 623, 631, 632, 633, 637, 645, 651, 655, 659, 661, 663, 666, 668, 669, 671, 675, 676, 680, 681, 686, 693, 695, 700, 702, 704, 705, 706, 708, 712, 713, 714, 716, 717, 719, 722, 725, 726, 727, 729, 732, 733, 734, 735, 736, 737, 739, 740, 743, 746, 747, 750, 751, 755, 756, 757, 759, 761, 762, 764, 767, 768, 771, 772, 773, 777, 780, 793, 795, 796, 797, 799, 801, 802], "meaning": [577, 582, 594, 602, 611, 633, 637, 649, 652, 668, 669, 702, 709, 734, 737, 752, 757, 759, 776], "meaningless": 734, "meant": [602, 649, 656, 670, 671, 673, 691, 697, 702, 709, 713, 734, 744, 746, 747, 752, 757], "meantim": 743, "measur": [587, 595, 597, 623, 631, 706, 734, 751, 764, 776], "mechan": [582, 589, 596, 599, 608, 659, 661, 666, 668, 686, 687, 690, 702, 703, 707, 715, 716, 717, 734, 737, 746, 750, 751, 755, 756, 761, 765, 768, 770, 773], "med": 775, "median": 751, "mediat": [585, 659, 746], "medium": [611, 702], "meet": [577, 582, 599, 600, 601, 659, 670, 671, 680, 712, 714, 741, 746, 748, 757, 773], "meetup": 778, "megabyt": 604, "mehdi": 739, "meltdown": 751, "mem": [655, 710, 732, 767], "mem2ref": 755, "mem2reg": [666, 668, 734, 750, 799], "mem_address": 599, "mem_not_nul": 655, "mem_ord": 582, "memalign": 747, "memarg": 700, "member": [577, 582, 598, 599, 600, 601, 602, 613, 626, 631, 633, 634, 636, 642, 645, 652, 659, 663, 690, 695, 702, 705, 707, 717, 720, 729, 732, 739, 757, 760, 764, 768, 770, 771, 776, 777, 779, 780, 781], "memberlist": 771, "membership": [661, 734], "memcheck": [608, 766], "memcpi": [585, 586, 676, 751, 755], "memcpyopt": 586, "memdep": 585, "memfenc": 582, "memmov": [676, 755], "memop": 637, "memor": 602, "memori": [18, 22, 23, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 49, 57, 58, 63, 64, 115, 119, 123, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 148, 152, 153, 202, 204, 208, 209, 212, 213, 214, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 247, 248, 253, 254, 304, 336, 345, 362, 375, 376, 378, 379, 380, 396, 397, 410, 411, 423, 436, 439, 440, 443, 444, 447, 448, 449, 463, 464, 471, 474, 488, 489, 491, 492, 493, 509, 510, 522, 523, 536, 549, 552, 553, 556, 557, 560, 561, 562, 563, 571, 576, 580, 581, 586, 588, 597, 599, 604, 606, 608, 620, 623, 633, 634, 637, 652, 655, 657, 658, 661, 662, 664, 665, 668, 669, 671, 675, 687, 689, 697, 700, 703, 704, 705, 707, 708, 710, 712, 713, 715, 717, 718, 719, 742, 743, 745, 749, 750, 751, 753, 754, 755, 759, 768, 770, 771, 773, 774, 776, 777, 779, 780, 781, 782, 794, 795, 796, 797, 798, 800, 801, 802], "memory_manag": 608, "memory_order_acq_rel": [586, 702], "memory_order_acquir": [586, 702], "memory_order_consum": 586, "memory_order_relax": [586, 702], "memory_order_releas": [586, 702], "memory_order_seq_cst": [586, 702], "memory_uri": 582, "memoryaccess": 713, "memorybuff": [602, 717], "memorydef": 713, "memorydependenceanalysi": 713, "memorydependencyanalysi": 586, "memoryloc": 713, "memoryphi": 713, "memorysanit": [702, 704], "memoryssa": [585, 670, 769], "memoryssawalk": 713, "memoryus": 713, "memorywithorigin": 597, "memri": [599, 771], "memrr": 771, "memset": [586, 676, 732], "memtag": 712, "memtagsanit": [702, 742], "mental": [595, 600, 734], "mention": [577, 582, 588, 589, 597, 599, 602, 603, 651, 658, 659, 671, 676, 691, 695, 702, 706, 711, 714, 716, 718, 720, 725, 734, 736, 746, 748, 749, 750, 755], "mentorship": 601, "mere": [669, 673, 702, 732, 733, 751, 755, 795], "merg": [584, 585, 597, 599, 603, 617, 633, 641, 652, 656, 659, 663, 668, 671, 674, 683, 691, 702, 705, 706, 713, 734, 744, 745, 750, 751, 757, 761, 764, 769, 770, 794, 795, 796, 797, 798, 799, 800, 801], "mergabl": 732, "merge_control_fil": 704, "mergebb": [797, 798, 799, 800, 801], "mergedloadstoremot": 697, "mergefunct": 769, "merger": 714, "merit": 659, "mesa": 582, "mesa3d": 582, "mesh": 582, "mesh_scratch_memory_s": 582, "mess": 772, "messag": [55, 115, 146, 202, 245, 304, 370, 471, 482, 576, 582, 593, 597, 598, 601, 603, 608, 613, 623, 628, 631, 651, 661, 670, 671, 692, 696, 703, 704, 716, 719, 733, 734, 736, 747, 748, 759, 761, 762, 766, 773, 777, 800], "messi": 599, "met": [577, 599, 631, 668, 702, 714], "meta": [599, 634, 668, 694, 702, 708, 734, 745, 750, 753, 759, 762], "metadata": [589, 590, 594, 599, 609, 659, 663, 666, 668, 669, 677, 687, 697, 701, 703, 708, 714, 718, 732, 733, 742, 766, 793, 801], "metadatarecord": 776, "metal": [692, 702], "metarenam": 593, "metasyntact": 593, "metatada": 591, "method": [577, 593, 595, 596, 598, 599, 603, 631, 651, 658, 659, 662, 668, 669, 671, 678, 683, 687, 690, 692, 694, 695, 696, 698, 700, 701, 702, 703, 707, 714, 716, 717, 718, 733, 750, 751, 753, 755, 759, 761, 765, 771, 772, 774, 777, 779, 780, 781, 794, 795, 796, 797, 799], "methodbodi": 771, "methodolog": 661, "methodproto": 771, "metric": [590, 622, 681, 704, 751, 764, 773, 775], "meyer": 602, "mf": [599, 679, 719, 739], "mfc": 722, "mfctypeserverindex": 722, "mfenc": 586, "mfloat": [692, 693], "mflop": 770, "mfpu": 692, "mfs": 651, "mft": 730, "mgrid331": 738, "mi": [599, 678, 679, 708, 739, 771], "mi100": 582, "mi25": 582, "mi50": 582, "mi6": 582, "mi60": 582, "mi8": 582, "mib": 663, "michigan": 658, "micro": [577, 582, 602, 631, 738, 751], "microbenchmark": [751, 764], "microcod": 582, "microcontrol": 653, "microopbuffers": 631, "microphon": 711, "microprocessor": [599, 702, 771], "microsecond": 776, "microsoft": [599, 602, 626, 636, 651, 653, 663, 672, 688, 700, 702, 722, 726, 729, 730, 742, 748, 750], "mid": [597, 666, 700, 702, 750], "middl": [598, 602, 659, 668, 700, 702, 716, 726, 732, 755, 757], "might": [577, 585, 586, 587, 591, 592, 593, 597, 599, 600, 601, 602, 603, 613, 619, 623, 631, 634, 651, 659, 660, 664, 666, 667, 668, 671, 673, 678, 690, 693, 694, 695, 702, 703, 704, 706, 709, 710, 714, 717, 726, 727, 729, 733, 734, 735, 736, 738, 747, 748, 750, 751, 752, 755, 756, 757, 759, 760, 767, 768, 770, 771, 777, 797, 800, 802], "migrat": [582, 585, 603, 659, 668, 743], "mileag": 711, "mileston": 714, "mill": 651, "million": [702, 734], "millisecond": 775, "mimalloc": 597, "mimic": [578, 602, 640, 641, 717, 736], "min": [115, 202, 304, 471, 576, 582, 589, 603, 623, 636, 637, 641, 652, 702, 704, 744, 751, 764, 775], "min_dx10": 582, "min_int_bit": 734, "mind": [601, 602, 659, 716, 734, 737, 747, 794, 799], "mingw": [597, 599, 673, 690], "mingw32": [599, 688, 766], "mingw32msvc": 599, "mingw64": 671, "mini": 711, "minim": [582, 584, 586, 594, 595, 599, 602, 606, 611, 613, 623, 656, 659, 669, 675, 681, 702, 704, 705, 717, 734, 735, 743, 750, 751, 753, 760, 768, 773, 776, 794, 798], "minimaldebuginfo": 727, "minimis": 757, "minimize_crash": 704, "minimum": [582, 597, 603, 604, 644, 659, 662, 671, 676, 694, 696, 701, 737, 745, 747, 748, 750, 751, 753, 757, 764, 771, 775, 781, 794], "minimum_instruction_length": 582, "mininum": 747, "minor": [577, 599, 601, 602, 659, 714, 722, 731, 734, 802], "minor_process": 751, "minor_vers": 582, "minorvers": 722, "minscalar": 680, "minscalarsamea": 680, "minsiz": [589, 702], "minsizerel": [595, 597, 671], "minus": [577, 581, 582, 591, 702, 749], "minut": [670, 671, 674, 713], "mioperandinfo": 771, "mip": [586, 599, 666, 671, 675, 680, 693, 702, 739, 771, 774], "mips16": 586, "mips32": 586, "mips64": 774, "mips64el": 774, "mipsel": 774, "mir": [582, 675, 678, 681, 682, 685, 702, 716, 742], "mirdebugifi": 697, "mirror": [580, 667, 668, 797, 798], "mirstripdebugifi": 697, "mis": [582, 599, 604, 696, 751], "misalign": 747, "misattribut": 697, "misbehav": 744, "miscellan": [702, 718], "miscommun": 659, "miscompil": [592, 604, 659, 671, 702, 738], "misinterpret": [580, 593], "mislead": [602, 697, 750], "mismatch": [582, 588, 602, 637, 691, 692, 702, 710, 747, 795, 796, 797, 798, 799, 800, 801], "misnam": 599, "misoptim": 591, "mispredict": 751, "misrepres": [697, 750], "miss": [586, 593, 602, 603, 631, 666, 686, 692, 693, 697, 701, 702, 717, 734, 738, 739, 745, 750, 754, 755, 765, 767, 770, 794, 798, 799], "mission": 659, "misspecul": 751, "mistak": [600, 602, 666], "mistaken": 796, "misunderstood": [664, 742], "misus": 766, "mit": [659, 751], "mitig": [631, 668, 677, 702, 712, 736, 739, 742, 747, 748, 757], "mitr": 748, "mix": [577, 586, 598, 599, 602, 603, 669, 675, 686, 702, 705, 717, 734, 737, 741, 750, 751, 761, 772], "mixtur": [577, 646, 681, 751, 761], "mjansson": 597, "mkdir": [597, 671, 686, 704, 736, 764, 766, 775], "ml": [577, 668, 670, 738, 743], "mlimit": 604, "mlir": [607, 670, 674, 759], "mllvm": [631, 719, 770], "mm0": [599, 761, 762], "mm1": [761, 762], "mm2": [761, 762], "mm3": [761, 762], "mm4": [761, 762], "mm5": [761, 762], "mm6": [761, 762], "mm7": [761, 762], "mmap": 638, "mmi": 708, "mmio": 702, "mmx": [599, 702, 771], "mnemon": [634, 771, 774], "mnemonicalia": 599, "mno": 582, "mo": 750, "mo1": 771, "mo_cimmedi": 708, "mo_registermask": 599, "mobil": 582, "mock": [701, 734, 766], "mod": [585, 636, 702, 705, 761, 771], "mode": [49, 65, 100, 143, 239, 240, 346, 354, 362, 363, 373, 425, 474, 475, 486, 538, 580, 581, 587, 589, 591, 597, 603, 608, 613, 616, 617, 623, 628, 633, 636, 637, 645, 651, 652, 659, 667, 668, 681, 689, 692, 702, 712, 721, 729, 734, 744, 747, 751, 761, 762, 764, 766, 769, 771, 775, 776, 799, 800], "model": [577, 586, 589, 592, 598, 599, 608, 611, 623, 651, 655, 659, 660, 661, 664, 668, 669, 670, 675, 690, 696, 699, 700, 701, 705, 717, 734, 740, 741, 742, 747, 748, 750, 759, 767, 770, 771, 777, 794, 795, 799, 800], "moder": [602, 659, 733, 734, 746], "modern": [598, 602, 652, 653, 657, 664, 689, 711, 717, 720, 721, 722, 725, 727, 734, 740, 751, 770, 802], "modest": [577, 602], "modfilecount": 722, "modfilecountarray": 722, "modi": [636, 725], "modif": [582, 593, 596, 613, 633, 637, 645, 651, 660, 690, 701, 702, 714, 751, 771, 801], "modifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 51, 52, 53, 54, 88, 118, 145, 174, 203, 222, 234, 236, 242, 243, 244, 278, 305, 306, 310, 311, 315, 316, 317, 318, 327, 338, 339, 340, 341, 361, 368, 369, 428, 480, 481, 541, 572, 577, 583, 585, 586, 593, 597, 598, 599, 602, 608, 631, 633, 645, 654, 655, 661, 662, 671, 673, 674, 678, 681, 695, 697, 699, 701, 704, 708, 710, 713, 715, 716, 718, 719, 721, 726, 729, 732, 733, 734, 736, 738, 741, 750, 751, 755, 757, 759, 760, 761, 764, 765, 771, 772, 773, 775, 779, 796, 799], "modifier0": [579, 582], "modifier1": [579, 582], "modifypassconfig": 701, "modindic": 722, "modinfo": 722, "modinfos": 722, "modistream": 725, "modr": 599, "modref": [585, 586, 761], "modrefbit": 761, "modrefresult": 585, "modrefv": 761, "modul": [585, 589, 593, 597, 599, 602, 606, 607, 608, 615, 620, 631, 649, 664, 666, 668, 671, 694, 696, 697, 703, 704, 705, 707, 714, 715, 716, 717, 719, 730, 738, 743, 750, 753, 754, 755, 759, 764, 765, 766, 768, 771, 772, 775, 779, 781, 782, 795, 796, 797, 798, 799, 801], "modular": [585, 594, 649, 685, 717, 737, 751, 773], "moduleanalysismanag": 716, "moduleanalysismanagercgsccproxi": 716, "modulebitcodewrit": 662, "modulehandl": 781, "modulehandlet": 781, "moduleid": [766, 795], "moduleindex": 722, "modulelevelpass": 773, "modulenam": [646, 722], "modulepass": [585, 719], "modulepassmanag": 716, "modulepath": 717, "modulesummaryindex": 702, "modulesymstream": 722, "modulo": [577, 599, 702, 750], "moll": 713, "moment": [597, 631, 655, 668, 702, 708, 755, 781], "monday": 670, "monitor": [585, 702, 736, 764], "mono": 659, "monolith": [659, 736, 737, 749], "monorepo": [733, 773], "monospac": [709, 752], "monoton": [582, 702, 736], "month": [659, 670, 694, 704, 748], "more": [140, 577, 578, 579, 580, 581, 582, 585, 586, 589, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 603, 604, 608, 609, 613, 615, 617, 622, 623, 630, 631, 636, 637, 638, 640, 641, 644, 649, 651, 652, 654, 655, 656, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 673, 675, 677, 679, 680, 681, 683, 685, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 705, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 722, 726, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 764, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 801, 802], "moreelementsfor": 680, "moreelementsif": 680, "moreelementstonextmultipl": 680, "moreelementstonextpow2": 680, "moreov": [581, 599, 601, 603, 702, 732, 737], "most": [577, 579, 582, 583, 584, 585, 586, 588, 592, 594, 595, 597, 598, 599, 601, 602, 603, 605, 608, 610, 615, 616, 625, 627, 631, 633, 636, 642, 645, 647, 648, 649, 650, 651, 652, 654, 655, 657, 658, 659, 661, 662, 664, 666, 667, 668, 669, 670, 671, 674, 675, 678, 680, 683, 687, 689, 691, 692, 693, 694, 695, 696, 698, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 722, 729, 731, 733, 734, 735, 736, 737, 738, 739, 742, 744, 747, 748, 750, 751, 752, 753, 755, 756, 759, 760, 761, 762, 764, 765, 767, 770, 771, 772, 773, 775, 776, 780, 794, 795, 796, 797, 798, 799, 801, 802], "motion": [585, 671, 702, 703, 706, 713, 773], "motiv": [699, 701, 702, 711, 734, 780, 797, 799], "motohiro": 599, "mount": [587, 660, 671], "mous": 775, "mov": [586, 599, 603, 663, 702, 715], "mov32mr": 708, "mov32r0": 750, "mov32ri": [599, 708], "mov32rm": [708, 750], "mov64ri": [708, 771], "mov64rm": 708, "mov64rr": 708, "movabsq": [749, 753], "movapd": 603, "move": [577, 582, 585, 586, 587, 592, 597, 599, 602, 603, 613, 631, 655, 659, 667, 668, 670, 671, 683, 694, 697, 701, 702, 706, 716, 717, 732, 734, 741, 750, 751, 753, 755, 762, 773, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802], "movhpd": 603, "movl": [603, 702, 751, 753, 755], "movnt": 702, "movq": [701, 751, 753, 755], "movsd": 603, "movslq": 753, "movsq": 599, "movsx": 599, "movsx16rm8w": 599, "movsx16rr8w": 599, "movsx32rm16": 599, "movsx32rr16": 599, "movsx32rr8": 599, "movsx64rr16": 599, "movsx64rr32": [599, 623, 750], "movsx64rr8": 599, "movt": 663, "movw": [663, 702], "movz": [588, 702], "mozilla": 739, "mpm": 716, "mppassmanag": 775, "mr": [701, 782], "mri": [599, 675, 739], "mrm0m": [761, 771], "mrm0r": [761, 771], "mrm1m": 771, "mrm1r": 771, "mrm2m": [761, 771], "mrm2r": [761, 771], "mrm3m": 771, "mrm3r": 771, "mrm4m": 771, "mrm4r": 771, "mrm5m": 771, "mrm5r": 771, "mrm6m": 771, "mrm6r": 771, "mrm7m": 771, "mrm7r": 771, "mrmdestmem": 771, "mrmdestreg": [761, 762, 771], "mrminitreg": 771, "mrmsrcmem": 771, "mrmsrcreg": 771, "mrt": [97, 186, 288, 534], "mrts": [97, 186, 288, 534], "mrtz": [88, 97, 174, 186, 278, 288, 534, 572], "mrv": 761, "ms": [663, 690, 704, 743, 747, 781], "ms_abi_tripl": 766, "msa": [675, 680, 702], "msan": 704, "msb": [581, 599, 776], "msb_extract": 702, "msbuild": [597, 673], "msdn": [602, 626], "msec": 770, "msf": [722, 727], "msg": [0, 2, 3, 4, 9, 696, 702, 760], "msg_get_doorbel": [55, 370, 482], "msg_gs": [55, 146, 245, 370, 482], "msg_gs_alloc_req": [55, 370, 482], "msg_gs_done": [55, 146, 245, 370, 482], "msg_interrupt": [55, 146, 245, 370, 482, 582], "msg_sysmsg": [55, 146, 245, 370, 482], "msgpack": 582, "msp430": [599, 671, 702], "mspdb": 722, "mspdbsrv": 722, "mspdbxxxx": 722, "msr": 751, "msse4": 747, "msvc": [597, 599, 602, 661, 663, 671, 690, 702, 722, 734, 750, 751], "mt": 597, "mte": [702, 712, 743], "mthumb": 692, "mtripl": [603, 609, 611, 631, 667, 702, 708, 750], "mtype": 582, "mu": 736, "much": [577, 585, 586, 587, 593, 594, 595, 599, 602, 615, 626, 636, 651, 652, 659, 660, 662, 664, 666, 671, 677, 680, 686, 688, 691, 693, 695, 696, 697, 700, 701, 702, 705, 709, 712, 713, 715, 716, 717, 719, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 744, 746, 750, 751, 752, 753, 755, 756, 757, 761, 766, 771, 773, 774, 775, 777, 780, 794, 795, 796, 799, 802], "mul": [580, 603, 669, 697, 715, 732, 761, 795], "mul_ri": 761, "mul_rr": 761, "mullin": 582, "multi": [580, 582, 602, 640, 651, 660, 685, 691, 704, 730, 734, 743, 761, 778], "multi_v": 651, "multiarch": [692, 693], "multiclass": [760, 762, 771], "multiclassid": 761, "multiclassstat": 761, "multicor": 586, "multidimension": 702, "multidistributionexampl": 595, "multilib": [660, 693], "multilin": 608, "multimap": 734, "multipl": [577, 581, 582, 583, 585, 586, 587, 589, 590, 594, 595, 597, 598, 599, 601, 602, 603, 606, 617, 619, 622, 624, 625, 631, 632, 633, 645, 646, 651, 652, 654, 658, 659, 663, 666, 669, 670, 671, 676, 677, 680, 683, 688, 690, 695, 697, 700, 701, 702, 704, 706, 707, 708, 713, 714, 717, 718, 722, 730, 732, 733, 735, 741, 743, 745, 750, 751, 753, 755, 756, 757, 759, 760, 762, 764, 766, 767, 768, 770, 771, 772, 773, 774, 775, 777, 794, 795, 796, 797, 798, 801], "multipli": [580, 582, 590, 599, 631, 637, 652, 662, 676, 703, 732, 734, 750, 751, 761], "multiplicand": 702, "multiprocessor": [668, 773], "multirepo": 736, "multiset": 734, "multisourc": [659, 696, 738, 750, 764, 765], "multithread": [668, 734, 775], "multmp": [795, 796, 797, 798, 799, 800, 801], "multmp1": 795, "multmp2": 795, "multmp3": 795, "multmp4": 796, "mummergpu": 738, "mung": [669, 732], "munger_struct": 669, "musl": 704, "must": [17, 25, 42, 43, 49, 50, 55, 59, 61, 65, 66, 79, 88, 99, 101, 115, 118, 125, 138, 139, 143, 144, 146, 149, 163, 174, 188, 202, 203, 210, 232, 233, 239, 240, 241, 245, 249, 251, 267, 278, 290, 304, 327, 337, 343, 346, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 426, 428, 459, 460, 471, 474, 475, 476, 477, 478, 479, 482, 483, 485, 486, 487, 539, 541, 566, 567, 572, 576, 577, 580, 581, 582, 583, 584, 586, 588, 589, 591, 595, 597, 599, 602, 603, 608, 613, 617, 623, 627, 631, 633, 652, 655, 657, 659, 661, 662, 663, 664, 667, 668, 669, 671, 675, 676, 680, 681, 687, 690, 692, 693, 694, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 713, 714, 715, 716, 717, 719, 726, 727, 732, 733, 734, 735, 736, 739, 741, 744, 747, 748, 750, 751, 752, 753, 755, 756, 757, 759, 761, 762, 765, 766, 767, 768, 771, 772, 773, 776, 777, 779, 780, 795, 796, 797, 798, 799, 800, 801], "must_tail_call_return": 655, "mustalia": [585, 702], "mustprogress": 589, "mustquot": 777, "musttail": [655, 702], "mutabl": [702, 716, 797, 798, 800, 801, 803, 804], "mutablearrayref": 701, "mutat": [583, 602, 668, 678, 701, 732, 734, 780, 798, 800, 801], "mutatestrictfptofp": 583, "mutex": [586, 779], "mutual": [629, 651, 755, 793], "mv": 671, "mve": 650, "mvt": [599, 675, 771], "my": [585, 659, 668, 671, 715, 716, 717, 736, 764, 773, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 797, 798, 799, 800, 801, 804], "my86_64flag": 777, "my86flag": 777, "my_addit": 750, "my_build_dir": 745, "my_fil": 719, "my_fmad": 715, "my_funct": 715, "my_function_fast": 715, "my_function_precis": 715, "my_fuzz": 704, "my_gwp_asan_error": 687, "my_kernel": 715, "my_key": 602, "my_list": 598, "my_list_of_numb": 598, "my_local_branch": 736, "my_local_tag": 736, "my_opt_diff": 745, "my_opt_yaml1": 745, "my_opt_yaml2": 745, "my_other_fil": 719, "my_project": 736, "my_str": 598, "my_valu": 602, "my_yaml_fil": 745, "myalloc": 655, "myapp": 717, "myawesomeproject": 702, "mybarflag": 777, "mybison": 765, "myblock": 708, "myboolean": 750, "mybranch": 736, "mybuilddir": 597, "mycustomtyp": 777, "mydevic": 764, "mydoclist": 777, "mydoclisttyp": 777, "mydoctyp": 777, "myflag": 777, "myfoobar": 734, "myfooflag": 777, "myfunct": 715, "mygc": 668, "mygcprint": 668, "myglob": 750, "myinitprng": 704, "mylist": 777, "mylistel": 777, "mymachinefunctionpass": 719, "mymaptyp": 777, "mynewpass": 604, "myobject": 750, "myocyt": 738, "myownp3sett": 750, "mypass": [679, 734, 773], "mypassnam": 734, "mypassopt": 773, "mypatch": 733, "myplugin": 701, "myproj": 736, "myregalloc": 773, "myregisteralloc": 773, "myrepo": 736, "myseq": 777, "myseqel": 777, "myset": 602, "mysteri": 669, "mystic": 802, "mystringtyp": 777, "mystruct": 669, "mytarget": 704, "mytyp": 702, "mytype1": 777, "mytype2": 777, "myvar": 669, "n1": [587, 736, 771], "n16": 715, "n2": [587, 750, 771], "n32": 702, "n4absl11string_view": 619, "n8": 702, "n_bucket": 750, "n_hash": 750, "n_stab": 632, "na": [599, 739], "nab": 738, "naddit": 651, "nail": 797, "naiv": [623, 732, 751], "nakatani": 599, "nake": [589, 702], "name": [49, 55, 143, 146, 239, 245, 362, 370, 474, 482, 578, 581, 583, 584, 586, 589, 591, 593, 594, 595, 597, 598, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 620, 621, 622, 623, 624, 627, 628, 631, 632, 633, 634, 635, 636, 637, 640, 641, 644, 645, 646, 650, 652, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 673, 676, 681, 688, 691, 693, 694, 695, 697, 699, 701, 703, 704, 705, 708, 709, 710, 714, 715, 716, 717, 719, 720, 722, 730, 733, 734, 735, 736, 743, 744, 745, 746, 747, 753, 755, 756, 759, 761, 762, 765, 766, 768, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 805], "name1": 761, "name2": 761, "name3": 761, "namedindex": 771, "namedvalu": [795, 796, 797, 798, 799, 800, 801], "namedvar": 801, "namefield": 759, "nameflag": 750, "namesbuff": 722, "namespac": [577, 589, 597, 622, 651, 652, 660, 668, 702, 703, 734, 750, 760, 761, 762, 771, 772, 773, 775, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "namestr": 650, "namesuffix": 761, "namevalu": 761, "nan": [581, 582, 609, 611, 676, 702, 750], "nand": 702, "nandakumar": 684, "nano": 582, "narrow": [586, 593, 604, 662, 669, 671, 676, 680, 696, 697, 704, 734, 751], "narrowaddr": 702, "narrowcharact": 729, "narrowscalarfor": 680, "narrowscalarforcartesianproduct": 680, "narrowscalarfortypeswithmems": 680, "narrowscalarif": 680, "nasa": 738, "nation": 600, "nativ": [577, 579, 582, 586, 593, 595, 597, 598, 604, 609, 613, 616, 646, 660, 661, 662, 664, 666, 669, 671, 673, 686, 693, 696, 702, 705, 715, 736, 740, 750, 753, 771, 777, 779, 780, 781, 782, 795, 796, 797, 798, 799, 800, 801, 802], "native_command": 597, "natur": [577, 582, 586, 601, 602, 603, 637, 651, 658, 659, 661, 666, 668, 669, 671, 695, 701, 702, 705, 706, 709, 729, 734, 736, 737, 739, 744, 750, 751, 752, 756, 757, 761, 773, 777, 795, 797, 799], "natvi": 730, "naveen": 732, "navig": [651, 733, 775], "nbranch": 623, "nbsp": 599, "nc": 582, "nc_nv": 582, "ncsa": 659, "nctaid": 715, "nd": 771, "ndebug": [597, 651, 731], "ndk": 671, "ne": [655, 702, 761], "near": [597, 602, 603, 666, 670, 716, 729, 751, 755, 801], "near16": 721, "near32": 721, "near64": 721, "nearbi": [665, 674, 711], "nearbyint": 770, "nearest": [676, 687, 702, 713, 801], "nearpoint": 729, "nearpointer128": 729, "nearpointer32": 729, "nearpointer64": 729, "neat": 780, "nec": 740, "necess": 577, "necessari": [577, 582, 585, 586, 588, 590, 597, 599, 601, 602, 603, 617, 651, 655, 657, 659, 661, 662, 666, 668, 671, 675, 678, 680, 683, 691, 692, 693, 694, 696, 697, 698, 702, 703, 704, 705, 707, 708, 709, 716, 717, 727, 729, 730, 733, 734, 737, 739, 747, 748, 750, 751, 752, 753, 755, 756, 757, 759, 761, 764, 766, 768, 769, 770, 771, 772, 773, 775, 795, 800, 801, 803], "necessarili": [602, 611, 652, 659, 664, 669, 671, 680, 702, 706, 718, 720, 726, 730, 734, 744, 747, 748, 750, 751, 755, 776, 801], "necessit": 690, "need": [577, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 593, 595, 597, 598, 599, 601, 602, 603, 605, 609, 610, 611, 613, 616, 617, 623, 640, 641, 647, 648, 649, 650, 651, 652, 655, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 675, 677, 678, 680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 704, 705, 706, 708, 710, 712, 713, 714, 715, 716, 717, 720, 722, 726, 727, 732, 733, 734, 735, 736, 737, 741, 744, 746, 748, 749, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 768, 769, 771, 772, 773, 774, 775, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "needless": 697, "needstub": 771, "neelakantam": 732, "neg": [52, 54, 145, 242, 244, 306, 311, 316, 318, 339, 341, 369, 481, 702], "neg_hi": [0, 1, 4, 7, 8, 9], "neg_lo": [0, 1, 4, 7, 8, 9], "negat": [577, 580, 581, 582, 589, 599, 602, 603, 608, 631, 633, 645, 655, 659, 661, 666, 675, 676, 702, 708, 741, 747, 750, 751, 757, 761, 771, 798], "negeightkind": 702, "neglect": 765, "neglig": [665, 704], "negoti": 748, "neighbor": 580, "neighbour": 623, "neither": [577, 585, 588, 589, 646, 661, 666, 673, 701, 702, 704, 714, 722, 732, 753], "nekbon": 738, "nemanja": 739, "neon": [599, 650, 653, 675, 680, 693, 702, 740, 759, 769], "ness": [594, 701], "nest": [577, 582, 585, 589, 597, 598, 599, 602, 608, 631, 658, 661, 668, 702, 706, 709, 716, 719, 722, 734, 736, 741, 751, 761, 767, 770, 771, 773, 794, 797], "nestabl": 761, "net": [582, 654, 665, 670, 688, 694, 738], "netbsd": [671, 774], "network": [599, 704, 734], "neumann": 702, "neural": 765, "neutral": [577, 702], "never": [582, 585, 586, 588, 595, 599, 602, 603, 613, 617, 631, 652, 655, 656, 660, 664, 665, 668, 669, 674, 675, 685, 686, 695, 702, 705, 706, 714, 717, 719, 720, 721, 727, 732, 734, 736, 745, 750, 751, 757, 759, 767, 771, 773, 774, 775, 777, 779, 781, 802], "never_instru": 774, "nevertheless": 602, "new": [577, 583, 584, 586, 589, 592, 593, 595, 597, 598, 599, 601, 602, 603, 604, 608, 613, 623, 633, 646, 649, 650, 651, 654, 657, 660, 666, 667, 668, 670, 671, 672, 676, 681, 685, 686, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 715, 717, 718, 719, 722, 726, 729, 733, 736, 739, 741, 742, 743, 745, 747, 749, 753, 755, 756, 757, 759, 761, 762, 767, 769, 771, 772, 777, 778, 779, 780, 781, 794, 795, 796, 797, 798, 800, 801, 802], "new_cond": 702, "new_corpus_dir": 704, "new_guard_cond": 702, "new_install_nam": 625, "new_potentially_interesting_inputs_dir": 704, "new_rpath": 625, "newabbrevlen": 589, "newaddr": 676, "newcom": [762, 799], "newer": [586, 652, 657, 659, 671, 673, 721, 738, 764], "newest": [663, 796], "newinst": 734, "newli": [592, 602, 676, 686, 701, 702, 704, 717, 732, 734, 739, 755, 780, 795, 796, 797, 798, 801], "newlin": [589, 602, 608, 617, 627, 637, 761, 798], "newoffset": 702, "newptr": 702, "newptr2": 702, "news": [711, 714], "newti": 702, "newtoset": 602, "newversionformat": 722, "next": [577, 580, 582, 584, 589, 592, 593, 602, 631, 633, 645, 651, 655, 659, 661, 668, 669, 671, 673, 680, 685, 690, 691, 694, 695, 699, 701, 702, 705, 706, 707, 711, 714, 719, 720, 726, 734, 741, 743, 744, 748, 750, 751, 757, 761, 766, 768, 771, 772, 773, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801], "nextindvar": 702, "nextprec": [794, 795, 796, 797, 798, 799, 800, 801], "nextvar": [797, 798, 799, 800, 801], "nextvari": [797, 798], "nfc": [659, 703], "ngg": 582, "nggcullingdata": 582, "nggsubgroups": 582, "nggtess": 582, "ni": 702, "nice": [603, 651, 671, 675, 691, 713, 718, 732, 734, 761, 773, 793, 794, 795, 796, 797, 798, 799, 802, 803], "nicer": [651, 734, 777, 801], "nicknam": 746, "nicolai": 739, "nifti": [773, 797, 802], "night": [659, 670, 694, 765, 766], "nineti": 748, "ninf": 702, "ninja": [584, 595, 597, 671, 673, 674, 678, 689, 690, 691, 692, 693, 704, 733, 736, 738, 764, 772, 775], "ninth": 743, "nm": [607, 618, 634, 635, 640, 641, 686, 692, 743], "nmake": 597, "nn": [671, 738], "nnan": 702, "nnnn": 659, "nnnnnn": [592, 599], "no": [215, 217, 218, 222, 227, 229, 230, 234, 236, 577, 579, 580, 582, 586, 588, 589, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 606, 608, 609, 611, 612, 613, 616, 617, 618, 619, 620, 622, 627, 630, 631, 632, 633, 634, 636, 637, 640, 641, 642, 644, 645, 646, 650, 651, 652, 654, 655, 656, 657, 658, 659, 661, 663, 664, 666, 668, 669, 671, 674, 675, 676, 677, 678, 680, 681, 690, 691, 694, 695, 697, 698, 700, 701, 702, 703, 704, 706, 708, 709, 712, 713, 716, 717, 718, 719, 720, 722, 724, 727, 729, 734, 735, 736, 737, 738, 740, 741, 743, 744, 746, 748, 750, 751, 753, 755, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 776, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "no_dead_strip": 702, "no_merg": 589, "no_switch": 770, "no_turbo": 587, "no_warning_for_no_symbol": 627, "noalia": [585, 589, 631, 655, 666, 669, 713], "nobodi": 738, "nobuiltin": [589, 702], "nocaptur": [589, 702, 732], "nocf_check": [589, 702], "node": [585, 590, 591, 599, 615, 650, 658, 661, 665, 676, 695, 701, 703, 706, 708, 713, 714, 715, 734, 741, 742, 750, 755, 759, 761, 767, 768, 770, 771, 773, 777, 794, 795, 796, 797, 798, 799, 800, 801], "nodebuginfo": 651, "nodedupl": [589, 702, 743], "nodefinit": 745, "nodenam": 760, "nodetail": 615, "nodetyp": [583, 771], "nodupl": [702, 743], "noencod": 599, "noexcept": 661, "noexec": 701, "nofre": [589, 702], "nohup": 744, "noimm": [761, 762], "noimplicitfloat": [589, 702], "noinlin": [589, 698, 702, 745], "nois": [587, 602], "noisi": [659, 732, 734], "noitin": 611, "noitinerari": [761, 762, 771], "nolink": 651, "noload": 633, "nologo": 626, "nomenclatur": 584, "nomerg": 702, "nomin": 702, "nomine": 748, "nomodref": 585, "non": [577, 580, 581, 583, 585, 586, 589, 593, 595, 596, 597, 598, 599, 603, 604, 608, 609, 611, 613, 614, 615, 616, 617, 618, 620, 621, 623, 624, 625, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 644, 645, 646, 649, 650, 651, 652, 653, 655, 656, 659, 661, 662, 665, 666, 669, 670, 671, 675, 676, 677, 680, 686, 689, 695, 697, 699, 700, 701, 704, 705, 706, 707, 708, 711, 712, 714, 715, 716, 717, 721, 722, 727, 734, 736, 737, 739, 744, 747, 748, 750, 751, 753, 757, 761, 766, 767, 768, 771, 772, 773, 776, 777, 794, 796, 797, 798, 799, 800, 801, 802, 803], "non_recurs": 750, "nonan": 676, "nonatom": 750, "nondot": 592, "none": [17, 118, 203, 327, 428, 541, 577, 582, 587, 599, 602, 608, 609, 611, 613, 636, 646, 651, 655, 659, 661, 668, 669, 670, 671, 691, 692, 696, 699, 702, 716, 719, 721, 729, 734, 745, 748, 751, 755, 756, 761, 773], "nonempti": 702, "nonetheless": [577, 702, 780, 781, 782], "nonfat": 761, "nongnu": 738, "nonintuit": 769, "nonlazybind": [589, 702], "nonneg": 702, "nonnul": [589, 661, 666, 702], "nonparameter": 761, "nonsens": [709, 752, 799], "nonstandard": 761, "nonstop": 775, "nonstop_tsc": 776, "nontemp_nod": 702, "nontempl": 651, "nontempor": [582, 702], "nonzero": [589, 594], "noop": 702, "nop": [663, 702, 753, 774], "noprfx": 761, "noprofil": 702, "nor": [577, 582, 589, 599, 661, 664, 668, 669, 673, 701, 702, 704, 714, 722, 732, 753, 756, 757], "norecurs": [589, 702], "noredzon": [589, 702], "noreg": [582, 697, 708, 750], "noreturn": [589, 666, 702, 706], "norm": [659, 746], "normal": [577, 579, 580, 582, 586, 588, 589, 597, 599, 602, 603, 608, 613, 614, 617, 621, 624, 628, 632, 633, 636, 640, 641, 649, 651, 652, 659, 660, 661, 665, 666, 668, 671, 674, 675, 676, 687, 691, 694, 697, 701, 702, 705, 706, 710, 719, 721, 733, 734, 737, 747, 748, 749, 750, 751, 753, 755, 756, 759, 761, 766, 768, 770, 773, 775, 798], "normalformat": 651, "normalizedpolar": 777, "norman": 599, "normat": 577, "northern": 582, "northov": 684, "nosanitize_coverag": [589, 702], "nosync": [589, 702], "not": [30, 31, 55, 65, 66, 88, 100, 101, 115, 121, 130, 131, 146, 174, 202, 206, 219, 220, 222, 234, 236, 245, 278, 304, 346, 354, 370, 373, 374, 425, 426, 427, 439, 440, 471, 482, 486, 487, 538, 539, 540, 552, 553, 572, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 625, 626, 627, 631, 632, 633, 634, 636, 637, 640, 641, 642, 645, 646, 647, 648, 649, 650, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 671, 673, 674, 675, 676, 677, 678, 680, 681, 682, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 733, 734, 735, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "not_inline_hd": 652, "not_mangl": 618, "not_nul": 665, "notabl": [597, 599, 652, 662, 669, 680, 687, 691, 701, 702, 711, 734, 750, 751], "notail": 702, "notat": [580, 581, 582, 651, 702, 761, 777], "note": [20, 30, 31, 41, 121, 130, 131, 137, 206, 219, 220, 231, 427, 439, 440, 449, 540, 552, 553, 563, 577, 579, 580, 581, 585, 586, 587, 588, 589, 593, 594, 597, 601, 602, 603, 604, 607, 608, 609, 613, 615, 623, 631, 633, 640, 641, 642, 645, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 673, 679, 680, 681, 683, 685, 686, 687, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 704, 705, 707, 712, 713, 714, 715, 717, 720, 721, 722, 726, 727, 729, 732, 733, 734, 735, 736, 738, 741, 747, 748, 750, 751, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 768, 769, 770, 771, 773, 774, 775, 779, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "noteligibletoimport": 702, "notevex2vexconvert": 761, "noteworthi": 706, "notfp": 761, "noth": [97, 186, 288, 534, 582, 599, 603, 631, 655, 659, 668, 669, 674, 680, 694, 701, 702, 717, 732, 734, 736, 746, 756, 761, 766, 773, 799], "nothidden": 651, "nothrow": 586, "notic": [597, 598, 599, 601, 652, 658, 659, 664, 666, 669, 695, 697, 702, 706, 714, 715, 733, 761, 795, 799], "notif": [585, 688, 733, 748, 757], "notifi": [582, 585, 592, 631, 688, 694, 701, 717, 746, 748, 770], "notifyemit": 701, "notifyfail": 701, "notifyfin": 701, "notifyload": 701, "notifyremovingresourc": 701, "notifyresolv": 701, "notifytransferringresourc": 701, "notion": [599, 602, 656, 659, 695, 702, 720, 750, 773, 796, 797], "notori": 756, "nottransl": 729, "notw": 603, "notwithstand": 659, "notypemerg": 727, "noun": [602, 739], "noundef": [589, 702], "nounwind": [589, 603, 661, 666, 702, 715, 750, 766, 768], "nouserdataspil": 582, "novel": [668, 702, 734], "novic": 597, "now": [577, 582, 593, 597, 599, 600, 602, 603, 608, 651, 652, 656, 659, 660, 661, 662, 675, 691, 693, 695, 697, 700, 701, 702, 704, 706, 708, 713, 714, 715, 717, 726, 729, 733, 734, 736, 738, 743, 747, 750, 751, 753, 755, 763, 765, 768, 772, 773, 775, 777, 778, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801, 802], "nowaday": [693, 736], "nozero": 611, "npb": 738, "npb3": 738, "nproc": 671, "nsa": [20, 581], "nsstring": 750, "nsw": [655, 659, 666, 669, 702, 706], "nsz": 702, "nt": [613, 693, 744], "nt_amd_hsa_code_object_vers": 582, "nt_amd_hsa_hsail": 582, "nt_amd_hsa_isa_nam": 582, "nt_amd_hsa_isa_vers": 582, "nt_amd_hsa_metadata": 582, "nt_amdgpu_metadata": 582, "nth": [602, 617], "ntid": 715, "ntohl": 599, "ntradbigmip": 633, "ntradlittlemip": 633, "nuisanc": 659, "nul": [582, 734, 798], "null": [35, 36, 56, 57, 58, 65, 66, 69, 70, 73, 74, 77, 78, 89, 90, 91, 95, 96, 97, 186, 288, 534, 577, 582, 585, 589, 599, 602, 609, 611, 650, 655, 661, 663, 665, 666, 687, 697, 701, 702, 708, 714, 715, 717, 719, 722, 727, 732, 734, 745, 747, 750, 753, 755, 759, 760, 761, 771, 773, 777, 780, 794, 795, 796, 797, 798, 799, 800, 801], "null_pointer_is_valid": [589, 702], "nullari": 794, "nullpointerexcept": 665, "nullptr": [602, 701, 702, 759, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "nullptr_t": 729, "nullunknown": 702, "num": [581, 582, 603, 606, 608, 617, 623, 637, 668, 702, 736, 755, 771], "num_arg": 702, "num_el": 702, "num_interpol": 582, "num_repetit": 623, "numabbrevop": 589, "numarg": [753, 801], "number": [49, 55, 61, 88, 115, 143, 146, 174, 202, 239, 245, 251, 278, 304, 362, 370, 372, 471, 474, 482, 485, 572, 576, 580, 585, 586, 588, 590, 591, 592, 593, 597, 598, 599, 601, 602, 603, 606, 608, 613, 615, 616, 617, 622, 623, 629, 630, 631, 633, 634, 636, 637, 644, 645, 646, 650, 652, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 675, 676, 680, 687, 689, 693, 694, 697, 698, 701, 702, 703, 704, 705, 706, 708, 709, 713, 714, 717, 719, 721, 722, 724, 726, 727, 729, 730, 731, 733, 734, 735, 741, 745, 747, 749, 750, 751, 752, 753, 755, 757, 759, 760, 761, 762, 765, 766, 767, 770, 771, 773, 774, 776, 777, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "number1": 714, "number2": 714, "numberexpr": [794, 795, 796, 797, 798, 799, 800, 801], "numberexprast": [794, 795, 796, 797, 798, 799, 800, 801], "numberofauxsymbol": 805, "numberofcpucor": 704, "numbit": 734, "numblock": 726, "numbyt": 753, "numconst": 753, "numdirectorybyt": 726, "numel": 702, "numelt": 589, "numeltsparam": [589, 702], "numentri": 589, "numer": [49, 55, 143, 146, 239, 245, 362, 370, 474, 482, 580, 593, 594, 631, 632, 634, 651, 666, 673, 702, 708, 729, 730, 734, 759, 761, 762, 771, 774, 776, 793, 794, 795, 796, 797, 798, 799, 800, 801], "numerical_limit": 751, "numexpress": 656, "numfaultingpc": 665, "numfilenam": 656, "numfunct": [665, 753], "numfunctionsinmodul": 717, "numhashbucket": 729, "numindic": 656, "numlin": 656, "numliveout": 753, "numloc": 753, "nummemb": 734, "nummeta": 668, "nummodul": 722, "nummodulevalu": 589, "numop": [589, 771], "numpoint": 623, "numrecord": 753, "numregion": 656, "numregionarray": 656, "numroot": 668, "numsgpr": 582, "numshadowbyt": 753, "numsourcefil": 722, "numspilledsgpr": 582, "numspilledvgpr": 582, "numstr": [793, 794, 795, 796, 797, 798, 799, 800, 801], "numstream": 726, "numthread": 717, "numval": [793, 794, 795, 796, 797, 798, 799, 800, 801], "numvar": 603, "numvgpr": 582, "numword": 745, "numxform": 734, "nutshel": 734, "nuw": [666, 702], "nuzman": [741, 770], "nval": 702, "nvcall": 596, "nvcc": 599, "nvcl": 715, "nvidia": [577, 599, 608, 652, 660, 715], "nvptx": [671, 702, 739, 769], "nvptx64": [608, 715], "nvt": 771, "nvvm": 702, "nvvmreflect": 715, "nw": 738, "nxv16i1": 702, "nxv46i32": 702, "nxv4f32": 702, "nxv4i32": 702, "nxv8i16": 702, "o0": [582, 609, 651, 667, 677, 683, 696, 750, 767, 771], "o1": [609, 651, 683, 696, 697, 704, 771], "o2": [585, 586, 595, 609, 631, 646, 651, 666, 667, 671, 697, 702, 715, 719, 731, 747, 771], "o3": [595, 609, 651, 666, 667, 671, 696, 715, 750, 764, 770, 771, 775, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "o4": 771, "o5": 771, "o6": 771, "o7": 771, "ob": 761, "obey": 702, "obit": 702, "obj": [609, 616, 642, 646, 661, 668, 673, 702, 744, 750, 755, 764, 765], "obj_root": 671, "objc": [622, 634, 709, 750, 752, 769], "objc_autoreleas": 702, "objc_autoreleasepoolpop": 702, "objc_autoreleasepoolpush": 702, "objc_autoreleasereturnvalu": 702, "objc_copyweak": 702, "objc_destroyweak": 702, "objc_initweak": 702, "objc_loadweak": 702, "objc_loadweakretain": 702, "objc_moveweak": 702, "objc_properti": 750, "objc_releas": 702, "objc_retain": 702, "objc_retainautoreleas": 702, "objc_retainautoreleasedreturnvalu": 702, "objc_retainautoreleasereturnvalu": 702, "objc_retainblock": 702, "objc_storestrong": 702, "objc_storeweak": 702, "objc_unsafeclaimautoreleasedreturnvalu": 702, "objcopi": [607, 625, 645], "objdump": [607, 632, 635, 640, 641, 743, 775], "object": [577, 585, 586, 588, 593, 595, 599, 601, 602, 604, 606, 607, 608, 609, 611, 613, 616, 617, 622, 623, 626, 629, 631, 635, 636, 644, 646, 649, 651, 653, 655, 656, 657, 659, 661, 663, 664, 665, 667, 668, 673, 675, 676, 678, 686, 690, 692, 693, 695, 696, 698, 700, 701, 703, 704, 705, 708, 714, 715, 717, 719, 721, 722, 725, 727, 729, 730, 736, 743, 747, 748, 751, 753, 756, 757, 759, 761, 764, 765, 768, 771, 773, 776, 777, 779, 780, 794, 795, 797, 799, 801, 802, 803, 804, 805], "object_addr": 668, "object_error": 734, "objectbuff": 707, "objectbufferstream": 707, "objectcach": 707, "objectfil": 707, "objectimag": 707, "objectivec": 702, "objectlay": [779, 780, 781, 782], "objectlinkinglay": [769, 780], "objfilenam": 722, "objlinkinglay": 717, "objptr": 702, "oblivi": 588, "obscur": [702, 734], "observ": [586, 599, 602, 631, 702, 704, 706, 721, 722, 725, 727, 729, 750, 751, 755, 761, 775, 802], "obsolet": [592, 721], "obstacl": 739, "obstruct": 757, "obtain": [577, 582, 594, 599, 655, 656, 657, 671, 678, 692, 696, 702, 706, 707, 712, 713, 722, 732, 734, 748, 756, 760, 761, 771, 775, 776, 796], "obtus": 669, "obviat": 735, "obvious": [585, 586, 588, 593, 599, 602, 651, 658, 659, 662, 664, 669, 694, 702, 714, 722, 727, 732, 734, 736, 744, 747, 750, 751, 753, 759, 773, 794, 796, 798, 802], "ocaml": [597, 671], "ocamldoc": 597, "occas": [602, 724], "occasion": [589, 652, 659, 668, 677, 701, 729, 748], "occupi": [30, 31, 32, 33, 44, 45, 46, 130, 131, 132, 140, 141, 219, 220, 221, 222, 234, 235, 236, 439, 440, 441, 442, 461, 462, 552, 553, 554, 555, 568, 569, 570, 580, 582, 636, 702, 726], "occur": [577, 580, 581, 582, 589, 591, 599, 602, 603, 604, 608, 609, 613, 614, 615, 616, 621, 623, 624, 628, 631, 649, 650, 659, 661, 668, 669, 678, 681, 687, 696, 697, 702, 703, 706, 708, 717, 732, 734, 735, 736, 746, 747, 748, 750, 751, 753, 755, 756, 761, 766, 767, 773, 794, 800], "occurr": [589, 603, 650, 675, 702, 761], "oct": [642, 712, 736], "octal": [581, 582, 632, 642, 644, 651], "octal_numb": 582, "octopus": 736, "odd": [577, 651, 659, 696, 702, 761], "odr": [606, 701, 702], "oeq": 702, "of": [14, 17, 18, 20, 49, 50, 51, 55, 63, 64, 65, 88, 98, 115, 118, 119, 121, 143, 144, 146, 152, 153, 174, 187, 202, 203, 204, 206, 222, 234, 236, 239, 240, 241, 245, 253, 254, 278, 289, 304, 305, 310, 315, 324, 327, 338, 345, 346, 353, 361, 362, 363, 367, 370, 373, 410, 411, 422, 423, 427, 428, 471, 474, 475, 479, 482, 486, 522, 523, 535, 536, 540, 541, 572, 576, 578, 579, 582, 583, 584, 586, 587, 588, 589, 591, 593, 594, 596, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 655, 657, 658, 660, 661, 662, 663, 665, 670, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 685, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 701, 703, 706, 707, 708, 709, 710, 711, 712, 714, 717, 718, 719, 721, 722, 724, 725, 726, 727, 729, 730, 731, 733, 736, 737, 738, 740, 741, 742, 745, 747, 749, 752, 753, 754, 755, 756, 757, 759, 760, 762, 764, 765, 766, 767, 768, 769, 772, 774, 775, 776, 778, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 803, 805], "of_non": 800, "off": [17, 65, 66, 88, 100, 101, 118, 174, 203, 278, 327, 346, 354, 373, 374, 425, 426, 428, 486, 487, 538, 539, 541, 572, 580, 582, 593, 595, 597, 599, 602, 613, 634, 636, 652, 659, 667, 671, 677, 689, 690, 691, 692, 701, 702, 713, 715, 716, 717, 731, 734, 746, 751, 755, 762, 764, 766, 775, 776, 779, 780, 795, 796, 797, 798, 799, 800, 801, 802], "offen": [0, 2, 3, 4, 8, 9, 17, 118, 203, 327, 428, 541, 582], "offens": 748, "offer": [577, 586, 668, 690, 697, 734, 736, 737, 747, 755, 777], "offici": [598, 599, 652, 659, 660, 686, 711, 714, 730, 733, 738, 744, 746, 757, 764, 795, 799], "offlin": [599, 659, 715, 757], "offload": [582, 608, 747], "offset": [17, 18, 49, 50, 56, 57, 58, 66, 100, 101, 118, 119, 143, 144, 147, 148, 203, 204, 239, 241, 246, 247, 248, 327, 342, 354, 362, 367, 374, 395, 396, 397, 423, 425, 426, 428, 474, 479, 487, 508, 509, 510, 536, 538, 539, 541, 577, 579, 580, 581, 582, 589, 599, 603, 613, 622, 634, 636, 640, 641, 642, 644, 646, 655, 661, 663, 668, 669, 676, 678, 687, 701, 708, 712, 714, 720, 722, 726, 727, 729, 734, 747, 749, 750, 753, 755, 762, 766, 771, 802], "offset0": 582, "offset1": [582, 702], "offset11": 0, "offset12": [0, 2, 3, 4, 8, 9, 100], "offset13": [4, 8, 9, 354, 425, 538], "offset16": [0, 2, 3, 4, 9], "offset2": 702, "offset8": [0, 2, 3, 4, 9], "ofstream": 651, "oftc": [654, 670], "often": [582, 583, 585, 586, 588, 593, 597, 599, 601, 602, 603, 631, 651, 652, 659, 661, 662, 664, 666, 668, 671, 674, 680, 687, 690, 691, 692, 695, 696, 697, 701, 702, 704, 706, 708, 715, 716, 732, 734, 736, 742, 745, 748, 750, 751, 755, 757, 760, 761, 766, 770, 771, 775, 777, 780, 794, 796, 799, 802], "oge": 702, "ogt": 702, "oh": 797, "ok": [580, 581, 593, 602, 652, 659, 681, 689, 702, 704, 714, 795, 797], "okay": [602, 659, 669, 702, 703, 733, 756, 794, 795, 796, 797, 798, 799, 800, 801], "oland": 582, "old": [577, 585, 586, 592, 603, 617, 633, 659, 668, 671, 698, 702, 716, 721, 729, 730, 734, 736, 739, 745, 747, 748, 750, 764, 767, 778, 799, 800, 801, 802], "old_install_nam": 625, "old_rpath": 625, "oldbind": [799, 800, 801], "older": [580, 582, 586, 631, 651, 653, 659, 666, 668, 671, 680, 689, 702, 704, 710, 718, 771], "oldest": [582, 631, 796], "oldval": [702, 797, 798, 799, 800, 801], "ole": [702, 729], "oliv": 748, "oll": 701, "olt": 702, "omap": 722, "omiss": [582, 602, 659, 702], "omit": [577, 578, 579, 582, 599, 602, 606, 609, 614, 615, 619, 621, 624, 631, 632, 634, 635, 636, 637, 646, 649, 650, 652, 656, 697, 702, 704, 717, 732, 734, 745, 750, 753, 768, 773, 774, 794, 797], "omod": [0, 2, 3, 4, 7, 8, 9], "omp": [732, 738, 767], "on": [20, 30, 31, 32, 33, 44, 45, 46, 51, 55, 100, 102, 121, 130, 131, 132, 141, 146, 206, 215, 217, 218, 219, 220, 221, 222, 227, 229, 230, 234, 235, 236, 245, 305, 310, 315, 338, 354, 361, 370, 425, 427, 439, 440, 441, 442, 461, 462, 482, 538, 540, 552, 553, 554, 555, 568, 569, 570, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 595, 596, 597, 598, 599, 600, 601, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 631, 633, 634, 636, 637, 640, 641, 645, 646, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 662, 665, 666, 667, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 683, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 726, 727, 729, 730, 732, 733, 735, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 756, 757, 759, 760, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "onc": [240, 363, 475, 581, 582, 585, 589, 593, 594, 597, 598, 599, 601, 602, 604, 606, 608, 617, 622, 624, 627, 631, 637, 649, 651, 652, 654, 657, 659, 661, 662, 664, 665, 668, 669, 670, 671, 673, 674, 680, 681, 686, 692, 694, 696, 697, 701, 702, 703, 704, 705, 706, 707, 709, 714, 716, 717, 719, 722, 729, 733, 734, 736, 737, 741, 744, 746, 747, 748, 750, 751, 752, 755, 756, 757, 761, 762, 765, 768, 771, 773, 774, 775, 777, 779, 781, 794, 795, 796, 797, 799, 802], "one": [20, 44, 49, 50, 55, 115, 121, 140, 143, 144, 146, 202, 206, 227, 229, 230, 234, 239, 240, 241, 245, 304, 362, 363, 367, 370, 427, 471, 474, 475, 479, 482, 540, 568, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 608, 613, 617, 619, 620, 622, 623, 624, 625, 627, 629, 631, 632, 634, 636, 637, 638, 640, 641, 646, 651, 652, 655, 656, 658, 659, 660, 661, 662, 666, 667, 668, 670, 671, 673, 674, 675, 676, 679, 680, 681, 683, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 729, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 771, 773, 774, 775, 776, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "one_on": 663, "oneargfp": 761, "oneargfprw": 761, "onelin": 671, "oneormor": 651, "onfin": 701, "ongo": [659, 717, 746, 755, 774], "onli": [17, 42, 43, 49, 55, 59, 61, 118, 138, 139, 143, 146, 149, 203, 232, 233, 239, 240, 245, 249, 251, 327, 337, 343, 362, 363, 370, 371, 372, 428, 459, 460, 474, 475, 482, 483, 485, 541, 566, 567, 577, 580, 581, 582, 584, 585, 586, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 605, 606, 608, 609, 610, 611, 613, 615, 617, 619, 620, 622, 623, 625, 626, 627, 630, 631, 632, 633, 636, 637, 640, 641, 642, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 671, 673, 674, 675, 676, 678, 679, 680, 687, 689, 690, 691, 692, 693, 694, 695, 699, 700, 701, 702, 703, 704, 705, 706, 708, 711, 712, 713, 714, 715, 716, 717, 720, 721, 722, 724, 725, 726, 727, 729, 733, 735, 737, 738, 739, 740, 741, 743, 745, 746, 747, 748, 750, 751, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 779, 780, 781, 793, 794, 795, 797, 798, 799, 800, 801, 802], "onlin": [577, 582, 587, 597, 598, 799], "only_ascii": 704, "onlyfailsforsomexvalu": 734, "onlyfailsforsomexvalues2": 734, "onon": 702, "ons": 744, "onto": [577, 582, 599, 659, 668, 671, 682, 694, 702, 734, 750, 761, 768], "ontwo": 702, "onward": [582, 597, 691, 706, 750], "onzero": 702, "oom": [597, 704], "oop": [701, 755], "op": [55, 146, 245, 370, 482, 603, 608, 613, 623, 650, 655, 702, 708, 716, 717, 718, 751, 755, 759, 761, 771, 780, 794, 795, 796, 797, 798, 799, 800, 801], "op0": [589, 745], "op1": [589, 702, 745], "op2": [702, 745], "op3": [702, 745, 771], "op3val": 771, "op4": 745, "op_begin": 734, "op_end": 734, "op_iter": 734, "op_sel": [0, 4, 9], "op_sel_hi": [0, 4, 9], "opaqu": [588, 589, 663, 675, 717, 732, 734, 743, 755, 780, 795], "opaquepoint": 702, "opc": [761, 798, 799, 800, 801], "opclass": 650, "opcod": [14, 20, 98, 121, 187, 206, 289, 324, 353, 422, 427, 535, 540, 577, 580, 582, 586, 599, 602, 623, 631, 635, 650, 680, 685, 695, 699, 702, 708, 714, 734, 741, 761, 762, 771, 794, 795, 798, 799, 800, 801], "opcode_nam": 623, "opcstr": 771, "open": [577, 592, 597, 599, 602, 604, 652, 654, 659, 670, 673, 685, 692, 701, 702, 703, 709, 714, 733, 734, 736, 745, 748, 752, 753, 755, 756, 759, 775, 778, 795, 796, 797, 798, 799, 800, 801], "openbsd": 774, "openc": 761, "opencbit": 761, "opencl": [577, 650, 715], "openfil": 602, "openfileforwrit": 756, "openformattedfil": 734, "opengl": 802, "openmp": [577, 582, 597, 603, 650, 659, 670, 702, 736, 739, 757, 767], "openmp4": 741, "openorcreatefileforwrit": 756, "openpow": 653, "opensourc": 704, "openssl": 704, "openwork": 755, "oper": [22, 23, 27, 28, 29, 30, 31, 34, 35, 36, 55, 115, 123, 124, 127, 128, 129, 130, 131, 146, 202, 208, 209, 212, 213, 214, 219, 220, 245, 304, 336, 370, 375, 376, 378, 379, 380, 436, 439, 440, 443, 444, 471, 482, 488, 489, 491, 492, 493, 549, 552, 553, 556, 557, 576, 579, 580, 585, 586, 588, 589, 591, 594, 596, 597, 599, 602, 603, 609, 611, 627, 630, 631, 633, 640, 641, 645, 650, 652, 653, 655, 656, 661, 662, 664, 665, 668, 669, 671, 675, 681, 683, 685, 687, 697, 701, 704, 713, 714, 715, 716, 717, 718, 719, 732, 736, 740, 741, 745, 747, 750, 755, 756, 757, 759, 760, 762, 768, 770, 771, 773, 774, 775, 777, 779, 780, 793, 794, 795, 796, 797, 800, 801, 802, 803, 804], "operand": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 583, 589, 591, 599, 602, 603, 615, 631, 634, 635, 661, 662, 663, 669, 675, 676, 677, 678, 680, 682, 683, 697, 713, 714, 718, 732, 734, 739, 741, 750, 755, 759, 760, 761, 795, 798, 799, 800, 801], "operand0": [579, 582], "operand1": [579, 582], "operand_type_list_end": 771, "operandlist": 761, "operandmap": 771, "operands": 761, "operandti": 599, "operandtyp": 771, "operandv": [798, 799, 800, 801], "operating_system": 702, "opmap": 761, "opmapbit": 761, "opnam": 771, "opniskil": 743, "opnod": 771, "opportun": [584, 595, 655, 658, 659, 666, 681, 685, 702, 717, 732, 736, 737, 739, 770, 771, 780, 796], "oppos": [602, 651, 659, 663, 671, 675, 680, 694, 702, 703, 716, 725, 735, 739, 747], "opposit": [602, 613, 703, 734, 739, 750, 759, 774, 777], "opprefix": 761, "opprefixbit": 761, "oprofil": [597, 731], "ops": [599, 650, 701, 751, 755, 761, 771, 798, 799, 800, 801], "opsiz": 761, "opsize32": 761, "opsizebit": 761, "opt": [0, 2, 3, 4, 8, 9, 578, 585, 586, 593, 602, 604, 607, 634, 650, 659, 664, 668, 671, 673, 693, 696, 697, 702, 706, 713, 715, 732, 734, 742, 751, 755, 765, 766, 770, 780, 796, 797, 799, 800], "opt1": 634, "opt2": 634, "opta": 651, "optb": 651, "optbisect": [696, 719], "optforfuzz": [589, 702], "optim": [577, 579, 584, 585, 588, 589, 591, 593, 594, 597, 602, 603, 604, 606, 607, 608, 609, 611, 631, 634, 635, 637, 638, 650, 651, 653, 655, 656, 658, 659, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 681, 683, 684, 685, 688, 694, 695, 699, 700, 701, 703, 706, 714, 715, 716, 717, 718, 731, 734, 735, 739, 740, 741, 742, 743, 753, 754, 755, 757, 760, 765, 766, 767, 768, 770, 771, 772, 773, 776, 778, 779, 781, 782, 795, 797, 798, 799, 800, 801, 803, 804], "optimis": [702, 732, 768], "optimist": [631, 685, 702], "optimizationbit": 651, "optimizationlevel": [651, 716], "optimizationlist": 651, "optimizationremarkemitt": 739, "optimizefunct": 781, "optimizelay": [780, 781, 782], "optimizemodul": [780, 781, 782], "option": [17, 27, 28, 29, 30, 31, 34, 35, 36, 42, 43, 55, 59, 62, 65, 66, 67, 88, 101, 115, 118, 127, 128, 129, 130, 131, 138, 139, 146, 149, 151, 154, 174, 202, 203, 212, 213, 214, 219, 220, 232, 233, 245, 249, 252, 255, 278, 304, 327, 336, 337, 343, 344, 346, 360, 370, 371, 373, 374, 378, 379, 380, 412, 426, 428, 436, 439, 440, 443, 444, 459, 460, 471, 473, 482, 483, 486, 487, 491, 492, 493, 524, 539, 541, 549, 552, 553, 556, 557, 566, 567, 572, 576, 577, 578, 579, 580, 584, 585, 588, 589, 591, 593, 597, 598, 599, 602, 605, 607, 610, 612, 620, 626, 629, 639, 647, 648, 652, 655, 656, 660, 664, 667, 668, 673, 678, 679, 680, 681, 686, 689, 691, 692, 693, 696, 698, 701, 702, 703, 705, 707, 708, 714, 716, 717, 718, 719, 731, 732, 733, 735, 736, 737, 740, 741, 742, 743, 744, 745, 750, 751, 753, 755, 757, 759, 760, 761, 762, 767, 770, 771, 773, 774, 775, 777, 794, 795, 796, 797, 798, 799, 800, 801], "optional_dir": 735, "optionaldbgheaders": 722, "optiondefinit": 650, "options_pars": 687, "optlevel": 651, "optnon": [589, 696, 702, 719, 772], "optnum": 651, "optsiz": [589, 678, 702], "optyp": 771, "optzn": [696, 796, 797, 798, 799], "opval": 771, "or": [17, 20, 25, 26, 30, 31, 33, 44, 46, 47, 48, 49, 50, 51, 55, 61, 66, 79, 88, 99, 100, 101, 115, 118, 121, 125, 126, 130, 131, 142, 143, 144, 146, 163, 174, 188, 202, 203, 206, 210, 211, 219, 220, 222, 234, 236, 237, 238, 239, 240, 241, 245, 251, 267, 278, 290, 304, 305, 310, 315, 327, 338, 354, 361, 362, 363, 364, 365, 366, 367, 370, 372, 374, 392, 393, 394, 425, 426, 427, 428, 439, 440, 441, 462, 471, 474, 475, 476, 477, 478, 479, 482, 485, 487, 505, 506, 507, 538, 539, 540, 541, 552, 553, 554, 568, 570, 572, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 603, 604, 606, 607, 608, 609, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 644, 645, 646, 649, 650, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 726, 727, 729, 730, 732, 733, 734, 735, 739, 740, 741, 743, 744, 745, 746, 747, 748, 750, 752, 753, 754, 755, 756, 757, 759, 760, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "orbit": 798, "orc": [657, 671, 743, 769, 779, 781, 782, 796, 797, 798, 799, 801, 804], "orcjit": [779, 780, 781, 782, 796, 797, 798, 799, 801], "orcrpctpcjitlinkmemorymanag": 701, "orcv1": 769, "orcv2": [743, 769], "orcv2exampl": 701, "ord": 702, "order": [115, 202, 304, 471, 576, 577, 578, 579, 585, 589, 594, 595, 597, 599, 601, 603, 608, 620, 627, 632, 633, 636, 645, 649, 651, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 667, 668, 669, 671, 673, 676, 680, 687, 695, 697, 699, 701, 703, 704, 705, 706, 708, 713, 714, 716, 717, 718, 719, 722, 726, 727, 730, 732, 734, 735, 736, 739, 741, 743, 745, 750, 751, 752, 753, 755, 756, 759, 760, 761, 765, 766, 768, 770, 771, 772, 773, 781, 794, 795, 796, 797, 799, 803], "ordered_append_term": 582, "ordin": [651, 701], "ordinari": [577, 655, 656, 702, 717, 777], "ore": 739, "org": [592, 597, 600, 602, 625, 627, 629, 633, 634, 635, 642, 644, 645, 656, 659, 667, 670, 671, 686, 688, 690, 691, 692, 693, 694, 695, 704, 708, 711, 733, 736, 739, 740, 744, 746, 764, 777, 779, 780, 781, 782, 795], "organiz": [577, 580, 582, 598, 659, 661, 670, 711, 714, 729, 735, 746, 748, 750, 755, 796], "ori": 599, "orient": [600, 602, 695, 734, 738, 750, 752, 802], "orig": 702, "origin": [577, 581, 594, 599, 600, 601, 602, 603, 617, 636, 655, 659, 661, 669, 671, 674, 701, 702, 706, 717, 722, 727, 733, 734, 736, 739, 741, 746, 747, 748, 750, 751, 752, 755, 756, 757, 761, 762, 767, 768, 774, 779, 780, 801], "originput": 651, "orl": 751, "orq": 751, "orr": 702, "ors": 703, "orthogon": [586, 717], "os": [586, 587, 595, 599, 662, 668, 671, 689, 694, 702, 734, 747, 751, 760, 777], "oscil": 776, "oso": 606, "oss": [667, 694, 704, 736], "ostream": [602, 734], "osuosl": 688, "other": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 20, 115, 118, 121, 202, 206, 304, 427, 471, 540, 576, 579, 580, 581, 582, 583, 584, 586, 588, 589, 590, 592, 593, 594, 595, 597, 599, 600, 601, 602, 603, 605, 606, 608, 609, 610, 611, 617, 619, 620, 623, 625, 627, 631, 632, 633, 634, 642, 644, 645, 646, 647, 648, 649, 650, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 668, 670, 671, 673, 675, 678, 679, 680, 681, 683, 685, 686, 687, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 725, 726, 727, 729, 730, 732, 735, 736, 737, 738, 739, 741, 744, 745, 746, 747, 748, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804], "other_funct": 751, "otherspecialsquar": 695, "othervt": 771, "otherwis": [116, 117, 577, 582, 584, 586, 589, 590, 592, 593, 594, 597, 601, 602, 603, 604, 606, 608, 609, 611, 613, 614, 615, 616, 617, 620, 621, 622, 623, 624, 625, 627, 628, 630, 631, 633, 634, 635, 640, 641, 642, 644, 645, 646, 649, 650, 651, 652, 655, 656, 659, 661, 666, 668, 686, 688, 689, 693, 694, 695, 696, 701, 702, 703, 705, 706, 714, 716, 717, 719, 722, 724, 730, 732, 733, 734, 736, 746, 750, 751, 755, 760, 761, 767, 773, 777, 793, 794, 795, 796, 797, 798, 799, 800, 801], "otool": [607, 634], "otp": 702, "ottenstein": 658, "ought": 602, "our": [584, 595, 597, 598, 599, 600, 601, 602, 651, 652, 655, 659, 660, 668, 671, 696, 701, 705, 714, 715, 717, 727, 730, 731, 734, 736, 746, 747, 748, 750, 751, 755, 757, 770, 772, 773, 775, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "ourfpm": 801, "ourfunctionpass": 734, "ourselv": [602, 715, 730, 750, 772, 779], "out": [577, 582, 584, 585, 586, 587, 588, 589, 592, 593, 598, 599, 601, 602, 603, 606, 608, 611, 613, 615, 617, 622, 623, 626, 630, 631, 632, 634, 642, 651, 652, 655, 657, 658, 659, 660, 661, 662, 667, 668, 671, 673, 674, 676, 680, 687, 689, 691, 692, 693, 694, 696, 697, 699, 701, 702, 703, 704, 706, 708, 713, 714, 717, 718, 725, 726, 730, 732, 733, 734, 736, 740, 743, 744, 746, 747, 748, 750, 751, 754, 755, 756, 757, 759, 761, 762, 764, 765, 766, 767, 768, 771, 772, 773, 774, 775, 776, 777, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804], "out_cpusubtyp": 705, "out_cputyp": 705, "out_of_bound": 598, "outcom": [697, 748], "outdat": [693, 765], "outer": [582, 602, 661, 700, 702, 704, 706, 716, 721, 732, 741, 760, 761, 767, 773, 777, 797, 799, 800, 801], "outeranalysismanagerproxi": 716, "outercolumn": 702, "outermost": [577, 702], "outerrow": 702, "outerstructti": 702, "outfil": 643, "outgo": [590, 702], "outlin": [596, 599, 655, 659, 661, 751, 773, 777], "outliv": [701, 702, 704, 732], "outloop": [797, 798, 799, 800, 801], "outoperandlist": [761, 762, 771], "output": [15, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 71, 72, 73, 74, 75, 76, 77, 78, 107, 108, 109, 110, 116, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 155, 156, 157, 158, 159, 160, 161, 162, 194, 195, 196, 197, 212, 213, 214, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 259, 260, 261, 262, 263, 264, 265, 266, 296, 297, 298, 299, 309, 314, 325, 328, 329, 330, 331, 336, 358, 378, 379, 380, 384, 385, 386, 387, 388, 389, 390, 391, 436, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 463, 464, 491, 492, 493, 497, 498, 499, 500, 501, 502, 503, 504, 549, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 571, 580, 582, 584, 585, 587, 590, 593, 596, 597, 599, 602, 603, 604, 605, 606, 609, 610, 611, 612, 613, 614, 617, 618, 619, 620, 621, 623, 624, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 658, 662, 663, 668, 671, 673, 674, 676, 680, 687, 691, 696, 697, 699, 708, 709, 713, 715, 732, 734, 741, 742, 743, 744, 745, 747, 750, 752, 759, 761, 762, 764, 766, 767, 771, 772, 773, 774, 775, 776, 780, 794, 796, 797, 798, 799, 800, 801, 805], "outputdebuginfo": 651, "outputfilenam": 651, "outright": [669, 757], "outsid": [582, 585, 600, 602, 651, 655, 659, 663, 669, 670, 686, 687, 692, 701, 702, 703, 704, 706, 713, 714, 732, 734, 736, 744, 750, 751, 753, 755, 756, 761, 765, 768, 780, 795], "outstand": [49, 115, 143, 202, 239, 304, 362, 471, 474, 576, 601, 694, 701], "outstream": 668, "outweigh": 739, "over": [577, 582, 585, 588, 589, 592, 593, 594, 597, 598, 599, 601, 603, 623, 631, 636, 646, 650, 652, 655, 657, 658, 659, 669, 670, 680, 681, 687, 690, 691, 695, 701, 702, 703, 704, 705, 706, 711, 713, 716, 718, 732, 733, 736, 739, 748, 750, 751, 754, 755, 760, 774, 777, 780, 781, 782, 793, 795, 797, 798, 799, 801, 802, 803], "overal": [592, 595, 599, 601, 634, 658, 659, 661, 668, 669, 691, 702, 730, 733, 751, 757, 759, 760, 797], "overapproxim": 706, "overboard": 602, "overestim": 702, "overflow": [577, 581, 582, 603, 659, 666, 704, 751, 776], "overhaul": 694, "overhead": [664, 668, 687, 699, 701, 702, 712, 717, 734, 736, 741, 747, 776, 781, 796], "overlaid": 713, "overlap": [577, 585, 598, 599, 603, 631, 676, 700, 702, 706, 750, 753, 757, 770, 773], "overlay": [582, 660, 722], "overload": [602, 662, 695, 702, 715, 718, 734, 755, 760, 771, 773, 798], "overrid": [582, 586, 595, 597, 598, 599, 608, 609, 611, 617, 621, 633, 637, 651, 652, 658, 678, 687, 690, 695, 701, 702, 704, 708, 714, 715, 732, 734, 747, 750, 751, 759, 771, 773, 780, 782, 795, 796, 797, 798, 799, 800, 801], "overridden": [585, 603, 651, 671, 701, 702, 704, 745, 771], "overriden": [701, 761], "overrun": 687, "overs": 734, "overst": 577, "overtak": 757, "overview": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 578, 596, 597, 631, 650, 651, 653, 654, 670, 674, 682, 701, 707, 709, 712, 716, 761, 773, 797], "overwhelm": [594, 803], "overwrit": [651, 735, 751, 753, 774], "overwritten": [599, 661, 702, 747, 753], "overwrot": 582, "ovl": 722, "own": [577, 582, 589, 590, 595, 597, 598, 599, 601, 602, 613, 651, 652, 656, 658, 659, 660, 661, 662, 668, 671, 686, 687, 692, 694, 695, 697, 701, 702, 704, 707, 713, 717, 718, 720, 721, 730, 732, 733, 735, 736, 739, 741, 745, 746, 747, 748, 750, 753, 756, 757, 759, 760, 761, 763, 765, 766, 771, 772, 773, 795, 796, 798, 799, 802], "owner": [599, 601, 613, 654, 694, 733, 736], "ownership": [659, 717, 734, 782, 796, 797, 798, 799, 800, 801], "oxid": 748, "p0": [60, 150, 250, 484, 675, 676, 680, 702], "p0928": 751, "p0a10s_union": 702, "p0f_isvoidf": 755, "p0i32": 603, "p0i64": 603, "p0i8": [702, 715], "p0s_s": 702, "p0s_struct": 702, "p0s_union": 702, "p0v16f32": 702, "p0v2f64": 702, "p0v4i32": 702, "p0v4p0f_i32f": 702, "p0v8f64": 702, "p0v8i32": 702, "p0v8p0f64": 702, "p0v8p0f_i32f": 702, "p1": [676, 680, 702, 713, 715, 750], "p10": [60, 150, 250, 484], "p15": [702, 715], "p16": 715, "p17": 715, "p18": 715, "p19": 715, "p1i8": [715, 755], "p2": [603, 675, 702, 713, 715, 750], "p20": [60, 150, 250, 484, 715], "p2align": [582, 751], "p3": [603, 713, 715, 750], "p3i8": 715, "p4": 715, "p4i8": 715, "p5": 715, "p5i8": 715, "p7": 702, "p_arch": 652, "p_reg": 599, "pa": [716, 734], "pac": 716, "pack": [33, 44, 46, 215, 217, 218, 222, 227, 229, 230, 234, 236, 441, 462, 554, 568, 570, 579, 580, 589, 599, 631, 656, 666, 694, 701, 702, 736, 741, 744, 795], "packag": [590, 595, 597, 652, 654, 659, 660, 670, 671, 673, 688, 689, 692, 693, 694, 735, 737, 743, 744, 748, 764, 769], "package_str": 597, "packet": [582, 650, 759], "pact": 741, "pad": [580, 582, 589, 636, 655, 656, 661, 675, 677, 700, 701, 702, 708, 722, 753, 776], "padding1": 722, "padding2": 722, "padparam": 661, "padua": 658, "page": [582, 584, 595, 597, 602, 607, 636, 651, 653, 654, 659, 663, 665, 668, 671, 673, 687, 694, 696, 697, 701, 707, 708, 712, 716, 726, 730, 733, 734, 736, 739, 742, 743, 745, 747, 748, 750, 751, 755, 758, 761, 763, 766, 770, 778, 795], "paid": 757, "pain": [651, 652, 657, 659, 733, 734, 757], "painless": 651, "pair": [577, 580, 581, 582, 585, 586, 587, 588, 599, 602, 603, 609, 619, 622, 624, 631, 640, 641, 642, 661, 663, 676, 697, 698, 702, 704, 708, 713, 714, 717, 729, 732, 734, 736, 748, 750, 751, 755, 760, 761, 771, 776, 777, 781, 794, 797, 799, 800, 801], "pairwis": 585, "pal": 582, "pamela": 738, "pan": 751, "panda": 764, "pandaboard": 689, "pane": 733, "paper": [587, 599, 602, 652, 653, 658, 713, 734, 751, 778], "papertrail": 606, "par": [738, 740], "paradigm": [669, 734], "paragraph": [602, 659, 709, 714, 752], "parallel": [577, 584, 597, 599, 603, 608, 623, 631, 671, 688, 702, 703, 713, 716, 731, 735, 736, 739, 741, 767, 770], "parallel_dir": 735, "parallel_loop_access": 767, "param": [0, 2, 3, 4, 97, 186, 288, 534, 602, 608, 622, 668, 673, 688, 715], "param1": 734, "param2": 734, "paramattr": 589, "paramet": [60, 97, 150, 186, 250, 288, 484, 534, 577, 580, 589, 591, 594, 597, 598, 599, 602, 608, 613, 622, 623, 630, 631, 651, 652, 655, 661, 663, 668, 669, 698, 704, 707, 714, 716, 732, 734, 740, 743, 747, 750, 755, 759, 761, 762, 771, 773, 776, 777, 795], "parameter": [678, 761], "parameterless": 708, "paramidx": 589, "paramidx0": 589, "paramidx1": 589, "paramti": 589, "parenexpr": [794, 795, 796, 797, 798, 799, 800, 801], "parent": [582, 590, 598, 602, 608, 622, 674, 695, 701, 702, 734, 736, 748, 759, 760, 761, 797], "parent_scop": 598, "parentclasslist": 761, "parentclasslistn": 761, "parenthandl": 702, "parenthes": [580, 603, 608, 702, 760, 761, 794], "parenthesi": [602, 759, 794], "parentmulticlasslist": 761, "parentti": 702, "pariti": 687, "parlanc": [598, 713, 768, 793], "pars": [577, 589, 598, 603, 608, 612, 622, 630, 631, 646, 650, 652, 662, 664, 667, 687, 699, 701, 702, 703, 704, 705, 707, 708, 734, 743, 745, 747, 750, 753, 755, 759, 760, 761, 762, 769, 771, 776, 777, 795, 796, 797, 798, 799, 800, 801, 803], "parsabl": [637, 755], "parse_fail": 734, "parseabl": [702, 755], "parsebinoprh": [794, 795, 796, 797, 798, 799, 800, 801], "parsecommandlineopt": 775, "parsedattrinfo": 759, "parsedefinit": [794, 795, 796, 797, 798, 799, 800, 801], "parseexpress": [794, 795, 796, 797, 798, 799, 800, 801], "parseextern": [794, 795, 796, 797, 798, 799, 800, 801], "parseforexpr": [797, 798, 799, 800, 801], "parseidentifierexpr": [794, 795, 796, 797, 798, 799, 800, 801], "parseifexpr": [797, 798, 799, 800, 801], "parsenumberexpr": [794, 795, 796, 797, 798, 799, 800, 801], "parseparenexpr": [794, 795, 796, 797, 798, 799, 800, 801], "parsepasspipelin": 667, "parsepath": 717, "parseprimari": [794, 795, 796, 797, 798, 799, 800, 801], "parseprototyp": [794, 795, 796, 797, 798, 799, 800, 801], "parser": [595, 631, 634, 650, 664, 667, 671, 701, 702, 704, 708, 745, 759, 760, 761, 793, 795, 796, 798, 799, 800, 801, 802, 803, 804], "parserclass": 651, "parsesubtargetfeatur": 771, "parsetoplevelexpr": [794, 795, 796, 797, 798, 799, 800, 801], "parsetypetablebodi": 662, "parseunari": [798, 799, 800, 801], "parsevalid": 775, "parsevarexpr": [799, 800, 801], "part": [577, 580, 581, 582, 583, 585, 586, 588, 589, 592, 593, 595, 596, 597, 598, 599, 602, 603, 604, 605, 606, 608, 610, 618, 627, 631, 647, 648, 650, 651, 652, 655, 656, 658, 659, 661, 666, 667, 668, 669, 671, 673, 677, 678, 687, 690, 691, 692, 695, 702, 704, 705, 706, 711, 712, 713, 714, 716, 717, 718, 721, 726, 727, 732, 734, 736, 737, 738, 741, 746, 748, 750, 751, 754, 755, 757, 759, 762, 764, 766, 767, 768, 771, 772, 773, 774, 775, 777, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 801, 802, 803], "parti": [577, 602, 659, 666, 671, 735, 737, 746, 748, 755], "partial": [577, 580, 582, 599, 637, 650, 701, 702, 703, 704, 734, 738, 747, 750, 753, 767, 776, 777], "partialalia": 585, "particip": [582, 600, 601, 658, 659, 702, 733, 734, 736, 737, 748, 766], "particlefilt": 738, "particular": [577, 580, 585, 586, 587, 589, 592, 593, 595, 597, 599, 601, 602, 603, 608, 617, 622, 636, 650, 651, 652, 655, 656, 659, 661, 666, 668, 669, 671, 674, 675, 676, 678, 680, 681, 688, 691, 695, 696, 697, 700, 701, 702, 704, 706, 707, 713, 714, 715, 717, 718, 721, 722, 724, 726, 727, 729, 732, 734, 736, 738, 741, 743, 745, 746, 748, 750, 751, 753, 755, 760, 761, 762, 766, 768, 771, 773, 774, 776, 794, 796, 799], "partit": [593, 599, 608, 609, 633, 689, 703, 713, 781], "partner": 734, "parzyszek": 739, "parzyszekacronym": 739, "parzyszekacronym2": 739, "parzyszekdistinguish": 739, "pascal": 702, "pass": [577, 582, 584, 586, 587, 588, 590, 593, 594, 598, 599, 601, 602, 603, 604, 607, 608, 609, 611, 613, 617, 620, 623, 631, 634, 637, 649, 650, 651, 652, 654, 657, 659, 660, 661, 662, 663, 664, 667, 668, 669, 671, 673, 674, 677, 678, 679, 680, 681, 682, 683, 685, 686, 691, 694, 695, 696, 698, 699, 700, 702, 703, 704, 705, 706, 707, 710, 713, 715, 717, 718, 722, 729, 735, 736, 739, 741, 742, 743, 744, 745, 747, 749, 750, 753, 754, 759, 760, 761, 762, 764, 765, 766, 768, 769, 771, 775, 777, 779, 780, 781, 782, 794, 795, 797, 798, 799, 800, 801, 802], "pass1": 716, "pass2": 716, "passag": 602, "passbuild": [667, 716, 772, 773], "passcon": 655, "passconfigur": 701, "passinfomixin": 772, "passinstrument": 772, "passiv": 719, "passmanag": [651, 707, 734, 772, 775, 780, 796, 800], "passmanagerbas": [771, 773], "passmanagerbuild": [715, 773], "passmanagerimpl": 775, "passnam": [649, 734], "passopt": 773, "passpluginlibraryinfo": 773, "passregistri": [716, 772], "passt": 772, "passthru": 702, "password": [688, 736, 748], "past": [577, 582, 602, 669, 684, 702, 703, 734, 736, 741, 750, 776, 798, 801], "paste": [733, 771], "pat": [599, 762, 771], "patch": [587, 602, 634, 665, 666, 668, 670, 673, 688, 690, 691, 701, 702, 703, 717, 733, 734, 740, 742, 748, 755, 757, 766, 774, 775, 776, 796, 801], "patch_premain": [774, 775], "patch_status": 774, "patchabl": [668, 702, 753, 755], "patcher": 753, "patchpoint": [702, 755], "patfrag": 771, "path": [577, 583, 584, 585, 586, 594, 595, 597, 598, 602, 604, 606, 608, 609, 611, 613, 616, 617, 622, 623, 626, 627, 633, 634, 637, 638, 646, 650, 652, 655, 656, 659, 661, 663, 665, 666, 668, 671, 673, 686, 689, 690, 691, 692, 693, 696, 701, 704, 706, 715, 717, 722, 732, 734, 735, 736, 745, 747, 750, 751, 755, 756, 757, 764, 765, 766, 770, 775, 799], "path_to_clang": 584, "path_to_llvm": 671, "path_to_sample_profil": 637, "pathnam": [616, 671], "patholog": 734, "pathsep": [608, 766], "patient": [600, 773], "patleaf": 771, "pattern": [0, 2, 3, 4, 9, 577, 584, 586, 588, 598, 599, 607, 608, 617, 623, 633, 645, 650, 651, 655, 658, 662, 669, 675, 678, 680, 681, 687, 702, 715, 726, 734, 741, 747, 750, 751, 757, 759, 760, 761, 762, 766, 771, 775, 781, 795], "pattern_fill_cont": 747, "patternmatch": 740, "paul": [739, 748, 751], "paus": [585, 668, 736, 780], "pay": [602, 659, 679, 694, 751, 766, 771], "payload": [599, 656, 702, 776], "pb": [716, 734, 773], "pbqp": [599, 609], "pc": [50, 144, 241, 367, 479, 577, 581, 582, 599, 608, 630, 634, 661, 665, 702, 749, 751, 764, 766, 770, 771], "pc_32": 582, "pc_64": 582, "pch": [650, 750], "pcie": 582, "pcre": 704, "pcre2": 704, "pcrel32": 701, "pcs": 704, "pct": 636, "pd": 761, "pdata": [663, 722], "pdb": [597, 607, 720, 721, 725, 726, 742, 750], "pdbdllrbld": 722, "pdbdllversion": 722, "pdbfilepathnameindex": 722, "pdbraw_featuresig": 727, "pdbs": [636, 722, 725, 729, 730, 750], "pdbstreamhead": 727, "pdbstreamvers": 727, "pdbutil": 607, "pdf": [587, 751], "pdg": 658, "pdgbuilder": 658, "pe": [653, 668, 690, 722, 727], "pear": 759, "peculiar": 761, "pedant": 597, "peek": 716, "peephol": [599, 662, 697, 734, 796, 797, 798, 799], "peform": 588, "penalti": [595, 702, 734], "pend": [654, 657, 671, 701, 748, 757, 794, 795, 796, 797, 798, 799, 800, 801], "pennant": 738, "pentium": [671, 771], "penultim": 771, "peopl": [592, 595, 599, 600, 601, 602, 651, 654, 659, 662, 664, 669, 670, 671, 694, 701, 702, 711, 733, 736, 744, 748, 751, 756, 773, 779, 802], "pep": 739, "per": [30, 31, 49, 130, 131, 143, 219, 220, 239, 362, 439, 440, 474, 552, 553, 577, 581, 586, 589, 590, 597, 599, 615, 617, 619, 623, 627, 631, 632, 636, 651, 655, 656, 659, 661, 668, 675, 676, 683, 687, 694, 695, 701, 702, 704, 705, 708, 712, 713, 715, 733, 734, 736, 745, 747, 750, 751, 753, 755, 757, 759, 760, 765, 766, 775, 777, 779, 780, 796, 804], "perceiv": [658, 757, 802], "percent": [585, 617], "percentag": [615, 617, 630, 636, 637, 687, 734], "perf": [584, 587, 597, 638, 663, 764], "perf_data_buffer_s": 582, "perf_test": 738, "perfect": [588, 599, 601, 602, 603, 631, 636, 637, 659, 664, 669, 687, 702, 734, 750, 794], "perfectlyrightalign": 687, "perforc": 577, "perform": [577, 581, 582, 584, 585, 586, 587, 588, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 608, 609, 613, 619, 623, 627, 633, 634, 637, 646, 649, 650, 651, 655, 659, 660, 661, 662, 665, 667, 668, 669, 671, 672, 675, 676, 680, 681, 685, 687, 689, 691, 694, 695, 700, 701, 702, 703, 704, 705, 706, 707, 708, 714, 715, 717, 719, 722, 732, 734, 735, 736, 737, 739, 741, 744, 745, 747, 748, 750, 754, 755, 756, 759, 761, 764, 766, 767, 768, 771, 772, 773, 774, 779, 780, 781, 795, 799, 800, 802, 803], "performa": 702, "perfscript": 638, "perfunctionst": 775, "perhap": [577, 585, 668, 683, 702, 714, 727, 734, 736, 750], "period": [593, 596, 601, 602, 623, 659, 668, 702, 704, 748, 757, 766, 774], "peripher": 659, "perl": 668, "perldoc": 671, "perman": [577, 659, 680, 708, 746, 748, 781], "permiss": [61, 251, 372, 485, 613, 659, 671, 688, 701, 702, 707, 746, 779], "permit": [597, 599, 603, 609, 642, 663, 668, 676, 680, 701, 702, 703, 734, 739, 766, 799, 800, 801], "permut": [580, 702], "perpetu": [659, 774], "pershaderperfdata": 582, "pershadert": 582, "persist": [598, 600, 655, 660, 702, 704, 734], "person": [589, 600, 601, 659, 661, 696, 703, 709, 733, 746, 748, 752, 761, 777, 780], "personalityfn": 589, "personlist": 777, "personnam": 761, "perspect": [585, 600, 655, 661, 695, 702, 746, 755, 773], "pertain": [577, 659, 661, 702, 748, 750], "pertin": 757, "pervas": [695, 734, 803], "pervert": 762, "pessim": [665, 732, 734], "pesudo": 634, "peter": 748, "pf0": 714, "pf1": 714, "pg0": 714, "pg1": 714, "pgo": [595, 637, 717, 730, 745, 751, 769], "ph": 702, "phab": 736, "phabric": [601, 654, 659, 670, 671, 736, 739, 740, 757], "phase": [604, 650, 661, 668, 680, 694, 701, 702, 719, 734, 737, 740, 744, 780, 794, 798], "phase3": [694, 744], "phi": [589, 599, 615, 655, 661, 675, 697, 706, 732, 750, 770, 797, 798, 799, 800, 801], "phid": 602, "phielimin": 599, "phieliminationid": 599, "philip": 739, "philosophi": [697, 737, 769], "phinod": [602, 713, 797, 798, 799, 800, 801], "phis": [602, 702, 713], "phoni": 701, "phoronix": 738, "php": [733, 738], "phrase": [598, 602], "physic": [577, 582, 595, 600, 631, 675, 677, 701, 702, 708, 722, 734, 746, 750, 755, 771], "physreg": 599, "pi": [581, 658, 668, 734], "pi8": 768, "pic": [599, 611, 693, 696, 701, 708, 732, 750, 771], "pick": [577, 588, 597, 599, 602, 611, 631, 668, 669, 674, 683, 692, 693, 694, 696, 702, 733, 736, 737, 755, 764, 771], "pictur": [669, 730, 776, 795], "picus": [684, 739], "picusacronym": 739, "pid": 582, "pie": 747, "piec": [577, 589, 593, 595, 598, 599, 601, 602, 623, 659, 666, 669, 673, 691, 696, 701, 702, 737, 750, 755, 761, 766, 794, 795, 797, 798, 799, 801, 803], "pienaar": 652, "pietro": 748, "pifft": 765, "pilipenko": 748, "pin": 702, "ping": [601, 654, 714], "pinpoint": 736, "pinsrd": 603, "pinsrd_1": 603, "pinst": 734, "pip": 764, "pip3": 673, "pipe": [582, 603, 608, 631, 756, 766, 775], "pipefail": 608, "pipelin": [589, 608, 615, 631, 655, 666, 667, 675, 677, 682, 685, 697, 701, 702, 711, 715, 732, 743, 745, 755, 766, 767, 771, 772, 773, 780], "pipelinemetadata": 582, "pipermail": [736, 739], "pitcairn": 582, "pixel": [30, 31, 97, 130, 131, 186, 219, 220, 288, 439, 440, 534, 552, 553, 582], "pl": [577, 775, 777], "place": [577, 582, 583, 584, 586, 587, 588, 593, 599, 601, 602, 606, 608, 611, 613, 631, 633, 645, 651, 655, 656, 659, 660, 661, 662, 663, 666, 668, 669, 671, 677, 680, 681, 686, 688, 692, 701, 702, 708, 713, 714, 716, 717, 718, 732, 733, 734, 735, 736, 741, 743, 744, 745, 750, 751, 752, 753, 755, 761, 762, 764, 766, 767, 770, 771, 772, 773, 777, 794, 795, 796, 798, 799, 802, 803], "placehold": [613, 660, 661], "placement": [663, 666, 750, 761], "placesafepoint": 668, "plain": [603, 701, 708, 709, 721, 734, 752, 761, 773, 779], "plan": [577, 599, 631, 659, 668, 670, 691, 700, 704, 712, 715, 717, 734, 737, 748, 750, 754, 755, 762, 770], "plane": [774, 798], "plant": 773, "plate": [651, 734], "platform": [577, 582, 584, 586, 598, 599, 618, 636, 655, 659, 661, 668, 671, 672, 688, 689, 691, 693, 694, 702, 705, 717, 727, 730, 731, 734, 751, 753, 756, 773, 776, 779, 796, 798], "plausibl": 592, "play": [714, 734, 773, 802], "pldi": [668, 741], "pleas": [584, 585, 586, 592, 597, 599, 600, 601, 602, 605, 610, 625, 627, 629, 631, 633, 634, 635, 642, 644, 645, 647, 648, 650, 654, 659, 666, 668, 670, 671, 673, 687, 688, 689, 691, 693, 694, 696, 697, 699, 701, 702, 709, 711, 712, 715, 717, 718, 733, 734, 743, 744, 746, 747, 748, 752, 755, 758, 763, 766, 771, 775, 795, 802, 804], "plethora": [594, 664, 671, 734], "plist": 634, "plot": [630, 798], "plotter": 798, "plt": [701, 702], "plug": [719, 737, 795], "plugin": [604, 611, 613, 649, 657, 691, 702, 719, 745, 769], "plugin_tool": 773, "pluginfilenam": 611, "plugininfo": 773, "plus": [577, 581, 582, 588, 589, 603, 659, 661, 668, 701, 702, 722, 734, 748, 750, 760, 771, 780, 794, 797], "plusten": 750, "plx": 577, "pm": [716, 771, 773], "pmbuilder": 715, "pmdatamanag": 775, "pmtoplevelmanag": 775, "pn": [602, 675, 797, 798, 799, 800, 801], "png": [597, 704], "pni8": 661, "point": [52, 54, 145, 242, 244, 306, 311, 316, 318, 339, 341, 369, 481, 577, 579, 580, 585, 586, 589, 590, 591, 592, 593, 596, 597, 599, 602, 603, 609, 617, 623, 631, 636, 651, 652, 659, 660, 661, 662, 666, 669, 671, 675, 678, 681, 683, 688, 692, 693, 694, 695, 697, 700, 701, 703, 705, 706, 707, 708, 713, 714, 715, 717, 718, 722, 726, 729, 734, 736, 737, 742, 744, 745, 748, 750, 751, 755, 756, 760, 761, 762, 768, 769, 770, 771, 773, 774, 775, 776, 777, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801], "point_numb": [47, 48, 142, 237, 238, 393, 394, 506, 507], "pointcount": 668, "pointe": [582, 589, 702], "pointee_align": 582, "pointeealign": 582, "pointer": [577, 581, 586, 589, 599, 609, 652, 655, 661, 664, 665, 666, 668, 670, 675, 676, 690, 700, 701, 703, 705, 707, 708, 712, 714, 715, 716, 717, 721, 729, 732, 743, 747, 750, 753, 759, 760, 768, 771, 773, 776, 777, 779, 781, 794, 796, 797, 799, 801, 802, 803], "pointer1": 751, "pointer2": 751, "pointer_offset": 702, "pointerflag": 721, "pointerkind": 721, "pointermod": 721, "pointermodifi": 721, "pointertodatamemb": 721, "pointertojittargetaddress": [717, 781, 782], "pointertomemberfunct": 721, "pointertyp": [718, 734], "pointi": 777, "pointless": [661, 713, 755], "pointstoconstantmemori": 702, "pointtoconstantmemori": 585, "poison": 751, "poison2": 702, "poison3": 702, "poison4": 702, "poison5": 702, "poison_yet_again": 702, "poke": 589, "polar": 777, "polaris10": 582, "polaris11": 582, "polici": [580, 582, 585, 589, 602, 654, 670, 671, 734, 736, 739], "polit": [599, 600, 601], "poll": [668, 711, 755], "polli": [597, 659, 671, 736, 739, 741, 767], "pollut": [602, 733, 772], "polyhedr": 741, "polymorph": [596, 753, 772], "pong": 714, "pool": [582, 589, 599, 615, 701, 717, 747, 753, 771, 773, 779], "poolalloc": 585, "poor": [590, 600, 602, 755, 797], "pop": [577, 581, 584, 589, 599, 668, 702, 734, 776, 797, 799, 800, 801], "pop2_": 738, "pop_back": [651, 734, 801], "popcnt": 704, "popf": 751, "popfq": 751, "popq": [751, 753, 755], "pops_exiting_wave_id": 581, "pops_pack": 49, "popul": [608, 661, 662, 671, 701, 702, 715, 719, 748, 751, 759, 795], "popular": [585, 598, 599, 660, 671, 689, 702, 803], "pornin": 751, "porpoda": 741, "port": [599, 623, 664, 678, 680, 685, 688, 701, 737, 751, 756, 770, 774, 802], "portabl": [577, 595, 597, 599, 608, 632, 668, 702, 717, 734, 769, 779], "portion": [577, 582, 593, 595, 598, 599, 604, 651, 656, 659, 661, 671, 677, 681, 702, 708, 710, 713, 732, 738, 750, 751, 759, 761, 771, 776, 796], "pos": [97, 186, 288, 534, 702], "pos1": 651, "pos2": 651, "pose": [668, 703, 706, 751], "posit": [20, 49, 55, 97, 121, 143, 146, 186, 206, 239, 245, 288, 362, 370, 427, 474, 482, 534, 540, 577, 580, 581, 582, 589, 599, 603, 611, 613, 623, 637, 646, 652, 655, 659, 661, 663, 671, 676, 693, 697, 699, 702, 704, 705, 706, 708, 722, 734, 741, 748, 750, 751, 753, 755, 761, 777, 797, 798], "positionaleatsarg": 651, "posix": [597, 603, 613, 632, 633, 645, 660, 690, 737, 745], "possess": [656, 734], "possibl": [577, 581, 582, 585, 586, 587, 588, 589, 593, 596, 597, 599, 601, 603, 608, 623, 631, 633, 636, 652, 655, 656, 657, 658, 659, 662, 663, 664, 666, 668, 669, 671, 675, 678, 680, 681, 683, 686, 687, 688, 690, 692, 693, 695, 697, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 720, 722, 726, 732, 733, 734, 736, 737, 739, 741, 744, 746, 749, 750, 751, 752, 755, 756, 757, 759, 760, 761, 764, 766, 767, 770, 773, 776, 777, 793, 794, 796, 797, 799, 801, 802], "post": [599, 600, 601, 611, 654, 659, 670, 676, 685, 701, 708, 711, 716, 733, 735, 745, 746, 747, 748, 750, 751, 755, 760], "postencodermethod": 761, "poster": 600, "postfix": 577, "postincr": 602, "postord": 703, "postprunepass": 701, "postrapseudo": 708, "postscript": 732, "potenti": [577, 580, 585, 592, 593, 599, 602, 608, 623, 631, 651, 659, 661, 664, 666, 668, 671, 675, 691, 702, 704, 711, 713, 716, 732, 734, 739, 740, 741, 746, 747, 750, 751, 753, 755, 757, 767, 768, 775, 793, 794, 797], "pound": 777, "povray31": 765, "pow": [715, 770], "power": [577, 582, 585, 595, 599, 603, 629, 651, 653, 676, 680, 687, 689, 700, 701, 702, 705, 706, 708, 732, 733, 734, 752, 761, 762, 776, 794, 795, 796, 797, 798, 799], "power8": 653, "power9": 653, "powerpc": [586, 597, 633, 662, 671, 702, 703, 739, 753, 766, 771, 777], "powerpc64": [653, 702], "powerpc64l": 774, "powerpcl": 633, "pp": [581, 729], "ppa": 671, "ppas": 671, "ppc32": 599, "ppc64": 599, "ppc_fp128": [589, 702, 714], "ppcf128": 702, "ppcinstrinfo": 662, "ppcisellow": 662, "pr": [659, 703, 750, 766], "pr26161": 677, "pr26576": 675, "pr34636": 667, "practic": [577, 586, 590, 595, 602, 651, 654, 659, 664, 665, 668, 669, 670, 675, 695, 702, 703, 704, 706, 717, 721, 725, 727, 729, 732, 734, 736, 737, 750, 751, 752, 753, 755, 757, 761, 767, 769, 780, 795, 796, 797, 803], "pragma": [577, 650, 652, 732, 767], "pre": [580, 599, 601, 611, 659, 662, 676, 694, 696, 697, 701, 703, 717, 732, 734, 735, 736, 740, 743, 750, 762, 767], "pre_stor": 599, "prealloc": [589, 734], "prebuilt": 660, "prec": [798, 799, 800, 801], "precaut": [734, 748], "preced": [577, 582, 585, 589, 602, 603, 608, 632, 646, 655, 678, 702, 713, 732, 734, 747, 750, 753, 755, 761, 766, 776, 779, 794, 795, 796, 797, 798, 799, 800, 801, 803], "precis": [577, 581, 582, 585, 586, 599, 603, 609, 611, 668, 671, 675, 695, 697, 708, 716, 750, 753, 759, 771, 793, 794, 795], "preclud": [588, 701, 702, 751, 755], "precompil": [701, 715, 779], "precomput": 585, "precondit": 602, "precursor": 659, "pred": [661, 702, 715, 734, 750, 797, 799], "predecessor": [590, 599, 666, 697, 702, 706, 732, 741, 750, 797], "predefin": [599, 603, 608, 667, 755, 764, 773, 798], "predetermin": 585, "predic": [586, 588, 670, 675, 699, 717, 734, 741, 759, 761, 762, 771], "predicate_st": 751, "predicate_stor": 771, "predicatedbinaryoper": 740, "predicatedinstruct": 740, "predicateinfo": 702, "predict": [591, 602, 631, 666, 734, 742, 747, 751, 773], "predictor": 751, "predreg": 699, "predrel": 699, "predsens": 699, "preemptabl": 704, "preemptibl": 732, "preemption": 589, "preemptionspecifi": [589, 702], "preexist": [602, 732], "pref": 702, "prefac": 598, "prefer": [585, 586, 598, 623, 631, 646, 650, 652, 659, 661, 671, 688, 689, 691, 695, 697, 701, 702, 708, 711, 714, 733, 734, 739, 744, 750, 756, 762, 766, 771, 775], "prefetch": 653, "prefix": [577, 582, 583, 589, 595, 597, 599, 602, 606, 608, 612, 616, 617, 619, 633, 634, 646, 650, 651, 656, 661, 671, 686, 704, 708, 717, 719, 720, 721, 727, 735, 736, 739, 750, 761, 762, 764, 766, 798], "prefix1": 603, "prefix2": 603, "prefixdata": 589, "preformat": [709, 752], "preg": 599, "prehead": [697, 702, 706, 732, 797], "preheaderbb": [797, 798], "preinstal": 660, "preorder": 695, "prepar": [617, 661, 669, 670, 693, 702, 711, 714, 726, 729, 732, 733, 736, 744, 746, 750, 796], "prepass": 599, "prepend": [606, 617, 627, 634, 697, 702, 734, 739, 750, 761, 764], "preprocess": [664, 696, 743], "preprocessor": [597, 617, 651, 652, 656, 664, 734, 759, 761, 771, 796, 802], "prerequisit": [602, 773], "prescrib": 675, "presenc": [586, 599, 602, 603, 631, 661, 695, 697, 702, 719, 727, 734, 750, 757, 771, 776], "present": [577, 582, 589, 594, 596, 599, 601, 603, 608, 611, 617, 618, 629, 631, 636, 644, 646, 651, 652, 655, 656, 661, 663, 665, 668, 669, 671, 675, 684, 692, 696, 702, 719, 721, 722, 725, 726, 727, 729, 734, 736, 738, 745, 750, 751, 755, 757, 761, 767, 778, 797, 798, 799, 800, 801], "preserv": [577, 580, 582, 585, 588, 599, 602, 617, 624, 633, 645, 651, 655, 661, 669, 671, 679, 681, 701, 704, 706, 716, 736, 750, 753, 766, 767, 772, 773, 776, 802], "preserve_allcc": [589, 702], "preserve_mostcc": [589, 702], "preserveal": 702, "preservedanalys": [716, 739, 772], "preservedanalysescheck": 739, "preservedset": 716, "preservedwhenstateless": 716, "preservemost": 702, "preserveset": 716, "press": 800, "pressur": [599, 631, 671, 732, 751, 757, 770], "presum": [577, 702, 722, 727, 729, 736, 761], "pretti": [587, 630, 646, 669, 698, 704, 709, 710, 713, 714, 732, 734, 751, 752, 756, 765, 773, 793, 794, 795, 796, 797, 798, 799], "prettyprint": 734, "prev": 734, "prevail": 613, "prevent": [582, 585, 599, 601, 603, 633, 645, 651, 652, 655, 658, 659, 664, 668, 677, 681, 690, 697, 701, 702, 717, 722, 732, 734, 736, 747, 748, 749, 750, 751, 753, 755, 756, 766, 770, 772, 773, 782, 795, 799, 800, 801], "previous": [577, 582, 586, 588, 589, 597, 599, 603, 608, 613, 617, 631, 633, 637, 651, 655, 656, 659, 661, 662, 663, 671, 676, 687, 691, 694, 697, 702, 704, 706, 709, 714, 715, 716, 720, 725, 729, 730, 733, 734, 736, 743, 744, 749, 751, 755, 757, 760, 761, 765, 771, 773, 776, 777, 779, 781, 795, 796, 797, 798, 799, 800, 801, 803], "prf": 631, "prim": [97, 738], "primari": [582, 585, 598, 599, 600, 608, 659, 661, 668, 701, 702, 704, 712, 719, 722, 732, 734, 747, 751, 754, 759, 760, 761, 793, 794, 795, 796, 797, 798, 799, 800, 801], "primarili": [599, 608, 620, 624, 646, 655, 668, 671, 689, 700, 702, 704, 708, 732, 734, 751, 798], "primaryexpr": [581, 794], "primaryfunctionid": 663, "primarykey": [759, 760], "primarykeyearlyout": [759, 760], "primarykeynam": [759, 760], "prime": [623, 794, 795, 796, 797, 798, 799, 800, 801], "primer": [595, 597, 752], "primid": 582, "primit": [97, 586, 602, 651, 669, 702, 708, 714, 721, 734, 747, 751, 776, 798, 802], "princeton": 738, "principl": [653, 692, 714, 734, 739, 750, 756, 803], "print": [598, 599, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 621, 622, 623, 624, 625, 628, 630, 631, 632, 633, 634, 635, 637, 638, 645, 646, 649, 650, 651, 655, 662, 664, 668, 671, 673, 691, 696, 701, 702, 704, 708, 710, 713, 716, 719, 734, 743, 750, 761, 762, 764, 765, 766, 770, 771, 772, 777, 794, 795, 796, 797, 798, 799, 800, 801, 803], "print_arg": 701, "print_final_stat": 704, "print_list": 598, "print_pc": 704, "printabl": [644, 702, 708, 759, 771], "printallsymbol": 701, "printccoperand": 771, "printd": [796, 797, 798, 799, 800, 801, 802], "printdatadirect": 771, "printdeclar": 771, "printdens": 798, "printer": [599, 668, 710, 734, 745, 759, 766, 773, 800], "printerror": 760, "printf": [582, 593, 603, 656, 664, 671, 673, 686, 701, 702, 705, 717, 734, 750, 796, 797, 798, 799, 800, 801], "printfatalerror": 760, "printfatalnot": 760, "printformattedfil": 734, "printfunctionpass": 732, "printimplicitdef": 771, "printinformationalmessag": 651, "printinlineasm": 771, "printinstruct": [759, 771], "printlabel": 771, "printmemoperand": 771, "printmethod": 771, "printnextinstruct": 734, "printnot": 760, "printoperand": 771, "printout": [649, 734], "printstar": 797, "printsth": 732, "printwarn": 760, "prior": [577, 582, 589, 599, 608, 633, 651, 655, 656, 659, 661, 671, 700, 702, 739, 751, 767, 773], "priorit": 631, "prioriti": [581, 582, 636, 652, 669, 694, 702, 746, 750], "priority_queu": 734, "priv": 582, "privat": [577, 581, 589, 634, 655, 659, 666, 688, 695, 702, 714, 715, 722, 734, 746, 748, 750, 751, 759, 771, 779, 780, 781, 782], "private_bas": 581, "private_limit": 581, "private_segment_align": 582, "private_segment_fixed_s": 582, "privatesegmentfixeds": 582, "privileg": [582, 702, 751, 756, 779], "prng": 704, "pro": 582, "proactiv": [593, 659], "prob": 702, "probabilist": 687, "probabl": [582, 599, 601, 602, 615, 617, 631, 651, 652, 659, 660, 664, 668, 669, 687, 689, 708, 734, 735, 736, 738, 754, 755, 794, 797, 802], "probe": [4, 9, 582, 599, 702, 734], "problem": [577, 582, 585, 592, 593, 594, 599, 601, 602, 603, 604, 651, 655, 659, 664, 666, 667, 668, 669, 674, 681, 685, 689, 692, 693, 694, 696, 697, 700, 702, 703, 706, 719, 722, 727, 731, 732, 734, 736, 737, 739, 747, 750, 755, 756, 757, 766, 795, 797, 798, 802], "problemat": [602, 631, 659, 736, 757], "proc": [577, 587, 671, 689, 771], "procedur": [577, 582, 588, 591, 651, 653, 666, 673, 690, 694, 701, 702, 703, 714, 734, 735, 751, 754, 793], "proceed": [582, 597, 599, 601, 652, 655, 659, 661, 668, 675, 694, 701, 703, 714, 734, 741, 744, 751], "process": [577, 582, 584, 585, 586, 587, 590, 593, 594, 595, 597, 598, 601, 602, 603, 606, 622, 630, 631, 634, 636, 637, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 663, 668, 671, 681, 687, 689, 691, 696, 699, 701, 702, 704, 705, 707, 719, 720, 732, 733, 734, 736, 739, 742, 743, 745, 747, 750, 751, 755, 756, 760, 761, 762, 766, 770, 771, 773, 774, 777, 778, 779, 781, 782, 793, 794, 796, 802], "process_id": 582, "processformattedfil": 734, "processor": [577, 588, 597, 599, 611, 631, 651, 668, 671, 675, 702, 743, 750, 762, 770, 771, 800], "processrelocationref": 707, "procnoitin": 762, "procsym": 663, "produc": [577, 580, 581, 582, 586, 587, 588, 589, 593, 594, 597, 599, 602, 603, 604, 606, 608, 609, 615, 617, 619, 620, 623, 627, 631, 633, 636, 642, 646, 649, 655, 656, 659, 660, 661, 664, 667, 668, 669, 671, 676, 680, 686, 693, 696, 697, 700, 701, 702, 704, 710, 713, 714, 717, 722, 724, 726, 727, 729, 732, 734, 741, 743, 745, 750, 754, 755, 756, 759, 760, 761, 764, 766, 770, 771, 773, 774, 776, 777, 779, 780, 795, 796, 797, 799, 801], "product": [582, 590, 599, 600, 603, 606, 631, 637, 659, 668, 687, 701, 702, 712, 714, 742, 745, 748, 757, 761, 773, 781, 794, 798], "prof": [590, 591, 637, 691], "profdata": [584, 597, 607, 617, 638, 691, 702, 764], "profession": [601, 654], "profgen": 607, "profil": [582, 584, 591, 595, 597, 607, 617, 623, 640, 641, 646, 656, 665, 666, 692, 708, 717, 733, 735, 745, 750, 769, 776], "profiledata": 702, "profit": [599, 652, 665, 666, 702, 711, 732, 751, 767, 770], "profraw": [584, 617, 691], "progbit": [663, 751], "program": [581, 582, 585, 586, 587, 593, 594, 597, 598, 602, 603, 604, 605, 607, 608, 609, 610, 613, 617, 624, 627, 629, 631, 633, 636, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 656, 659, 660, 661, 665, 666, 667, 668, 669, 670, 671, 673, 675, 686, 687, 690, 692, 694, 695, 696, 697, 701, 702, 703, 704, 705, 706, 708, 712, 715, 717, 720, 722, 727, 729, 730, 731, 732, 734, 738, 742, 743, 745, 747, 750, 751, 753, 754, 755, 756, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 794, 796, 797, 799, 800, 801, 802], "programm": [582, 586, 593, 599, 602, 649, 651, 652, 653, 654, 668, 672, 695, 701, 751, 759, 760, 762, 767, 770, 773, 779, 798, 801], "programmat": [599, 637, 668, 715, 774, 777, 798], "programmersmanu": [602, 779], "progress": [582, 583, 586, 597, 599, 608, 631, 653, 655, 659, 668, 694, 702, 703, 708, 734, 739, 757, 764, 774], "prohibit": [586, 701, 705, 713, 751], "proj_install_root": 735, "proj_obj_root": 735, "proj_src_root": 735, "project": [577, 584, 595, 600, 601, 602, 608, 653, 654, 655, 657, 660, 662, 664, 666, 667, 670, 673, 674, 690, 691, 692, 693, 694, 701, 702, 703, 704, 717, 718, 733, 734, 737, 738, 739, 745, 746, 747, 748, 750, 751, 753, 757, 760, 761, 764, 765, 766, 773, 774, 778, 779, 780, 781, 782, 803], "project_nam": 735, "projector": 711, "prolang": 765, "prolifer": 739, "prolog": [702, 703, 751, 771], "prologepilog": 745, "prologu": [582, 589, 599, 609, 668, 749, 750, 771, 801], "prologue_end": 663, "prologuedata": 589, "promin": 764, "promis": [601, 659, 757, 774], "promot": [577, 585, 599, 652, 659, 662, 666, 701, 702, 703, 719, 734, 741, 750, 799, 801], "promoteloopaccessestoscalar": 697, "promoteop": 662, "prompt": [601, 659, 748], "prone": [599, 651, 689, 734, 762], "proof": [591, 706, 708, 717, 751], "propag": [582, 597, 599, 652, 661, 671, 676, 701, 702, 703, 708, 719, 733, 745, 750, 754, 755, 756], "proper": [581, 583, 585, 586, 592, 593, 596, 599, 606, 608, 631, 651, 652, 654, 656, 659, 663, 670, 671, 678, 695, 697, 702, 716, 718, 733, 734, 743, 761, 771, 772, 796, 799, 801], "properti": [577, 578, 583, 585, 586, 588, 589, 594, 599, 602, 606, 608, 631, 633, 650, 651, 655, 656, 659, 662, 668, 673, 679, 681, 699, 702, 705, 706, 708, 713, 714, 722, 729, 732, 733, 734, 736, 748, 751, 753, 754, 755, 759, 760, 762, 766, 767, 771, 796, 799], "propertydefinit": 650, "propon": 739, "proport": [637, 651, 678], "propos": [577, 590, 601, 603, 659, 666, 684, 703, 704, 737, 739, 740, 741, 748, 751, 757, 775, 778], "pros": 588, "prose": 602, "prospect": 659, "protect": [586, 589, 596, 599, 602, 633, 659, 701, 702, 704, 736, 746, 756, 771], "protectfilecheckoutput": 766, "protectionflag": 701, "protector": [702, 750], "proto": [782, 794, 795, 796, 797, 798, 799, 800, 801], "protoast": [795, 796, 797, 798, 799, 800, 801], "protobuf": 667, "protocol": [655, 667, 702, 736, 755], "prototyp": [577, 602, 624, 655, 662, 666, 687, 701, 702, 740, 742, 747, 760, 771, 773, 794, 795, 796, 797, 798, 799, 800, 801], "prototypeast": [782, 794, 795, 796, 797, 798, 799, 800, 801], "prove": [585, 659, 666, 687, 700, 702, 706, 714, 732, 751], "proven": [582, 632, 659, 666, 681, 702, 712, 732, 755, 799], "provid": [23, 124, 209, 376, 489, 577, 578, 580, 581, 582, 583, 584, 585, 586, 589, 591, 594, 595, 596, 597, 598, 599, 601, 603, 604, 608, 615, 617, 622, 623, 630, 631, 633, 637, 641, 646, 649, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 666, 668, 669, 670, 671, 673, 675, 678, 680, 683, 685, 687, 688, 689, 690, 692, 695, 697, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 719, 724, 729, 730, 732, 734, 735, 736, 737, 742, 745, 746, 747, 748, 750, 751, 753, 755, 756, 759, 760, 761, 765, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801, 802], "provis": 659, "provision": [577, 582], "proviso": 659, "proxi": [599, 716], "proxyapp": 738, "prs": 659, "prune": [594, 659, 701, 713, 736, 741, 748, 774], "pruneexpir": 736, "ps": [582, 761], "psabi": 653, "pse": 739, "pseudo": [582, 588, 590, 599, 650, 655, 678, 702, 708, 717, 734, 750, 751, 759, 771, 773], "pseudocod": [687, 702, 771], "pseudonym": 746, "psl": 577, "pstl": [597, 736], "psubus": 766, "psubusw": 766, "psutil": 673, "pte": 582, "pthread": [652, 702, 737, 747], "pthread_attr_t": 702, "pthread_creat": 702, "pti": 702, "ptr": [582, 586, 602, 634, 655, 665, 718, 721, 734, 743, 753, 768, 771], "ptr0": [676, 702], "ptr1": 702, "ptr2": 702, "ptr3": 702, "ptr64": 582, "ptr7": 702, "ptr_is_nul": 665, "ptr_rc": 599, "ptra": 715, "ptrb": 715, "ptrc": 715, "ptrloc": [668, 702], "ptroff": 599, "ptrreg": 599, "ptrs": 702, "ptrti": 702, "ptrtoint": [666, 755], "ptrtoreplacedint": 734, "ptrval": 702, "pts": 738, "ptx": [599, 652, 653], "ptx30": 599, "ptx31": 599, "ptxas": 652, "ptxstring": 715, "pty2": 702, "pub": 750, "public": [595, 598, 602, 636, 651, 659, 667, 668, 670, 671, 688, 695, 701, 715, 722, 730, 738, 744, 746, 748, 750, 751, 757, 768, 771, 772, 773, 777, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "publicstreamindex": 722, "publish": [652, 730, 734, 739, 744, 748], "pubnam": [622, 750], "pubtyp": [622, 750], "pugixml": 704, "pull": [580, 586, 592, 599, 671, 690, 733, 736, 748, 757], "puls": 704, "punctuat": [602, 702, 761], "pure": [586, 593, 599, 657, 659, 702, 703, 706, 732, 741, 750, 771, 795], "purpos": [577, 582, 588, 595, 599, 602, 603, 608, 631, 633, 636, 650, 651, 652, 655, 658, 659, 661, 666, 669, 671, 675, 678, 697, 701, 702, 706, 714, 715, 717, 718, 719, 722, 726, 727, 732, 734, 739, 744, 747, 748, 751, 754, 755, 756, 759, 760, 761, 762, 773, 776, 779, 795, 796, 801], "pursu": 751, "push": [577, 582, 593, 596, 599, 602, 668, 694, 702, 733, 736, 801], "push_back": [602, 701, 734, 771, 777, 794, 795, 796, 797, 798, 799, 800, 801], "pushf": [599, 751], "pushfl": 599, "pushfq": [599, 751], "pushq": [751, 755], "put": [577, 582, 585, 586, 587, 593, 599, 600, 602, 603, 651, 656, 657, 660, 661, 665, 668, 671, 675, 676, 677, 692, 694, 702, 709, 714, 717, 732, 733, 734, 736, 748, 750, 751, 766, 773, 777, 796, 797, 799, 801, 802], "putchar": [796, 797, 798, 799, 800, 801], "putchard": [796, 797, 798, 799, 800, 801, 802], "puzzl": 696, "pv": 655, "pwd": [646, 671, 693], "py": [608, 654, 671, 688, 691, 694, 696, 697, 734, 736, 764, 771], "pygment": 795, "pynam": 738, "python": [608, 655, 668, 671, 673, 693, 704, 734, 736, 739, 744, 752, 759, 761, 764, 766, 802], "python3": 673, "python_execut": 671, "q0": [588, 702], "q1": 659, "q15": 702, "q2": 659, "q3": [659, 702], "q7": 702, "qch": 597, "qeaa": 661, "qemu": 704, "qhelpgener": 597, "qmcpack": 738, "qnan": 702, "qps": 751, "qspectr": 751, "qt": [597, 739], "qt_coding_styl": 739, "quad": [580, 581, 582, 663, 701, 702, 751, 755, 771], "quad_perm": [580, 582], "quadrant": 582, "quadrat": [599, 609, 713, 734], "qualifi": [582, 599, 601, 669, 702, 708, 720, 721, 750], "qualiti": [594, 599, 601, 622, 631, 666, 681, 689, 694, 702, 716, 757, 766, 773, 779, 781], "qualtyp": 602, "quantiti": [631, 702], "quarantin": 747, "quarantine_max_chunk_s": 747, "quarantine_size_kb": 747, "quarter": 774, "quartil": 751, "quentin": 684, "queri": [577, 582, 585, 586, 599, 602, 631, 636, 651, 655, 666, 685, 698, 699, 701, 702, 713, 716, 717, 719, 730, 734, 750, 770, 771, 773, 775, 780, 802], "query_sampl": 582, "question": [577, 585, 592, 601, 654, 659, 666, 669, 670, 671, 673, 675, 695, 702, 704, 709, 714, 733, 734, 735, 737, 739, 742, 743, 750, 752, 761, 767, 794, 797, 799, 802], "queu": 582, "queue": [631, 717, 734, 771, 773, 774], "queue_ptr": 582, "quick": [585, 593, 599, 601, 602, 613, 631, 654, 659, 661, 666, 669, 671, 672, 673, 693, 696, 702, 704, 712, 713, 720, 731, 732, 733, 734, 739, 744, 750, 756, 774, 780, 796, 802], "quicker": [689, 713, 746, 780], "quickest": 687, "quicksilv": 738, "quickstart": [670, 693], "quiet": [582, 608, 622, 632, 651, 676, 697, 702], "quiet2": 651, "quieta": 651, "quirk": [598, 755], "quit": [585, 599, 603, 631, 652, 657, 662, 666, 668, 669, 671, 702, 709, 714, 734, 751, 752, 753, 756, 761, 778, 781, 795, 797, 802], "quot": [582, 597, 613, 651, 671, 702, 704, 708, 750, 759, 766, 777], "quotient": [603, 702], "quotingtyp": 777, "quux": 602, "qux": 702, "qx": 588, "r0": [599, 603, 702, 708, 710, 761, 771], "r1": [577, 599, 603, 702, 708, 715, 734, 736, 761, 771], "r10": [599, 603, 623, 715, 749, 762], "r10b": 762, "r10d": 762, "r10w": 762, "r11": [702, 749, 753, 762], "r11b": 762, "r11d": 762, "r11w": 762, "r12": [599, 663, 702, 762], "r1234": 736, "r12345": 694, "r123456": 736, "r128": [64, 153, 254], "r12b": 762, "r12d": 762, "r12w": 762, "r13": [599, 634, 762], "r13b": 762, "r13d": 762, "r13w": 762, "r14": [599, 634, 702, 762], "r14b": 762, "r14d": 762, "r14w": 762, "r15": [599, 634, 702, 708, 762], "r15b": 762, "r15d": 762, "r15w": 762, "r2": [577, 599, 603, 702, 708, 734, 736, 761], "r258109": 736, "r3": [599, 603, 702, 715, 736, 761], "r31": [599, 702], "r341082": 704, "r390": 582, "r390x": 582, "r4": [599, 603, 663], "r5": [599, 603], "r6": [599, 603], "r600": 582, "r630": 582, "r6xx": 582, "r7": [582, 599, 603, 702], "r700": 582, "r7xx": 582, "r8": [599, 623, 702, 751, 753, 762], "r8b": 762, "r8d": 762, "r8w": 762, "r9": [582, 599, 715, 753, 762], "r9b": 762, "r9d": 762, "r9w": 762, "r_386_8": 663, "r_amdgpu_abs32": 582, "r_amdgpu_abs32_hi": 582, "r_amdgpu_abs32_lo": 582, "r_amdgpu_abs64": 582, "r_amdgpu_gotpcrel": 582, "r_amdgpu_gotpcrel32_hi": 582, "r_amdgpu_gotpcrel32_lo": 582, "r_amdgpu_non": 582, "r_amdgpu_rel16": 582, "r_amdgpu_rel32": 582, "r_amdgpu_rel32_hi": 582, "r_amdgpu_rel32_lo": 582, "r_amdgpu_rel64": 582, "r_amdgpu_relative64": 582, "r_arm_thm_movw_abs_nc": 693, "r_offset": 582, "r_x86_64_8": 663, "ra": [582, 611, 634, 750], "race": [582, 586, 600, 655, 702, 734, 747, 766], "racist": 600, "radamsa": 704, "radare2": 704, "radeon": [577, 582], "radic": [599, 685], "radius": 695, "radix": [599, 602, 632, 642, 644, 702], "rage": 615, "raii": 655, "rais": [577, 592, 593, 627, 661, 668, 676, 702, 732, 734, 736, 748, 751, 755, 757, 761], "rajaperf": 738, "ralia": 624, "ram": [597, 688, 704], "ramif": 669, "ramp": 655, "ramsey": 599, "ran": [617, 674, 751, 772, 773], "rand": 704, "random": [587, 593, 602, 604, 607, 608, 659, 687, 702, 704, 712, 734, 738, 774], "randomize_va_spac": 587, "rang": [20, 25, 49, 50, 55, 79, 99, 115, 121, 125, 143, 144, 146, 163, 188, 202, 206, 210, 239, 240, 241, 245, 267, 290, 304, 362, 363, 364, 365, 366, 367, 370, 427, 471, 474, 475, 476, 477, 478, 479, 482, 540, 576, 577, 580, 581, 582, 585, 590, 591, 593, 599, 600, 608, 609, 622, 630, 631, 636, 637, 651, 655, 658, 661, 663, 666, 668, 669, 670, 674, 676, 677, 695, 701, 706, 732, 741, 750, 755, 759, 760, 761, 770, 773, 774, 778, 796, 798, 803], "range_specifi": 582, "rangecheck": 650, "rangeend": 663, "rangelist": 761, "rangepiec": 761, "rangestart": 663, "rank": [702, 732], "ranlib": [607, 613, 671, 686, 692], "rapaport": 741, "rapid": [659, 751], "rare": [589, 599, 600, 602, 603, 661, 665, 666, 668, 675, 693, 702, 729, 734, 751, 771], "rarer": 677, "rat": 631, "rate": [589, 601, 615, 631, 654, 687, 704, 736], "rather": [577, 582, 585, 589, 590, 594, 599, 600, 602, 603, 606, 608, 613, 617, 631, 644, 646, 652, 659, 660, 664, 666, 668, 669, 673, 675, 680, 687, 689, 701, 702, 704, 706, 716, 717, 718, 719, 722, 724, 732, 734, 736, 737, 741, 744, 750, 751, 755, 760, 761, 766, 770, 771, 779, 780, 781, 794, 795, 801], "ratio": [582, 590, 637, 751], "rational": [599, 659, 675, 748, 769], "rauw": [697, 703, 714, 734], "raw": [599, 614, 617, 621, 624, 628, 631, 633, 634, 636, 638, 640, 641, 649, 651, 655, 663, 691, 698, 702, 707, 710, 734, 765, 775, 795], "raw_fd_ostream": 800, "raw_ostream": [599, 662, 734, 760, 773, 775, 777, 800, 801], "rawfrm": [761, 771], "rax": [599, 702, 708, 751, 753, 755, 762, 771], "rbp": [599, 708, 762], "rbx": [599, 762], "rc": [694, 743, 744], "rc1": [694, 744], "rc2": [694, 744], "rc3": 694, "rcn": [694, 744], "rcp_iflag_f32": 582, "rcu": 631, "rcx": [599, 702, 751, 762], "rd": [663, 771], "rdi": [599, 623, 663, 702, 708, 750, 751, 753, 762], "rdna": 582, "rdna1": 582, "rdna2": 582, "rdtsc": [623, 702], "rdx": [599, 751, 753, 755, 762], "rdynam": [796, 798], "re": [577, 585, 588, 592, 597, 598, 599, 600, 601, 602, 603, 604, 608, 651, 652, 654, 659, 661, 664, 666, 667, 668, 671, 674, 675, 679, 685, 686, 687, 689, 691, 693, 694, 696, 701, 702, 704, 706, 707, 713, 714, 717, 718, 727, 731, 733, 734, 736, 741, 744, 745, 748, 750, 751, 752, 755, 756, 759, 761, 762, 765, 766, 773, 774, 775, 779, 781, 795, 796, 797, 799, 800, 801, 802], "reach": [577, 602, 608, 631, 655, 659, 661, 665, 694, 701, 702, 704, 706, 711, 713, 714, 717, 719, 732, 734, 741, 746, 747, 748, 751, 753, 757, 771], "reachabl": [597, 668, 674, 701, 702, 703, 706, 751, 755], "react": [592, 701], "read": [37, 38, 39, 40, 41, 49, 60, 61, 67, 133, 134, 135, 136, 137, 143, 150, 154, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 250, 251, 255, 362, 372, 412, 447, 448, 449, 463, 464, 474, 484, 485, 524, 560, 561, 562, 563, 571, 577, 580, 581, 582, 585, 586, 588, 589, 593, 597, 598, 599, 602, 603, 609, 611, 613, 614, 615, 617, 618, 620, 621, 622, 623, 624, 627, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 644, 645, 646, 649, 650, 651, 653, 655, 657, 659, 660, 662, 663, 664, 665, 670, 671, 673, 691, 696, 701, 702, 704, 708, 709, 714, 722, 724, 730, 732, 733, 734, 743, 750, 751, 752, 753, 754, 755, 760, 761, 762, 766, 770, 774, 776, 777, 780, 793, 794, 795, 796, 797, 798, 799, 800, 801], "read_async": 655, "read_on": 582, "read_writ": 582, "readabl": [581, 583, 586, 596, 599, 601, 614, 615, 617, 621, 622, 628, 630, 637, 646, 650, 663, 671, 687, 697, 701, 702, 708, 709, 722, 732, 734, 739, 750, 761, 773, 777, 795], "readandmaybemodifi": 704, "readattribut": 759, "readelf": [607, 632, 634, 743], "reader": [577, 589, 602, 607, 632, 636, 637, 650, 662, 664, 702, 714, 722, 739, 759, 776, 777, 779, 780, 794], "readi": [601, 631, 651, 654, 655, 659, 686, 694, 701, 704, 707, 711, 714, 718, 750, 773, 794, 795, 796, 797, 798, 799, 800, 801, 803], "readili": [681, 748], "readjust": 599, "readm": [659, 671, 709, 736, 739, 752, 764, 766], "readnon": [589, 666, 702, 715, 732, 750, 768], "readobj": [607, 632, 634, 640, 734, 743, 750], "readon": [582, 589, 633, 666, 702, 713, 732, 750, 753, 775], "readtscp": 776, "readwrit": 582, "readyset": 631, "real": [577, 578, 582, 585, 587, 603, 623, 631, 633, 634, 645, 651, 663, 675, 702, 704, 715, 718, 722, 729, 734, 746, 750, 762, 771, 793, 798, 803], "realign": [582, 676, 702], "realist": [668, 751, 794], "realiti": 577, "realiz": [659, 662, 798], "realli": [582, 584, 586, 597, 602, 651, 652, 659, 662, 664, 669, 671, 673, 675, 702, 704, 709, 713, 727, 729, 732, 733, 734, 750, 752, 765, 766, 793, 795, 796, 797, 798, 799, 801, 802], "realloc": [585, 687, 734, 747], "reallyhidden": 651, "realm": 743, "realmag": 798, "realpr": 702, "realstart": 798, "ream": 739, "reamesconcern": 739, "reappli": [601, 659], "rearrang": 703, "reason": [577, 582, 583, 585, 586, 591, 592, 595, 597, 598, 599, 601, 602, 603, 651, 655, 657, 659, 661, 662, 665, 666, 668, 669, 671, 678, 680, 681, 685, 687, 690, 693, 695, 701, 702, 704, 706, 709, 712, 713, 714, 717, 721, 724, 734, 737, 738, 745, 746, 747, 748, 749, 750, 751, 752, 755, 756, 757, 759, 761, 766, 767, 772, 773, 779, 781, 794, 795, 796, 797, 799, 801], "reassoc": 702, "reassoci": [702, 703, 796, 797, 798, 799], "reassur": 704, "rebas": [634, 671, 733, 736], "rebuild": [584, 597, 606, 691, 753, 775], "rec": [760, 761], "rec1": 761, "rec2": 761, "rec20": 761, "recal": [714, 760, 761, 777, 795, 796, 797], "recalcul": 716, "recap": 588, "receipt": 746, "receiv": [581, 589, 598, 599, 601, 654, 659, 661, 666, 667, 688, 702, 704, 707, 716, 734, 743, 746, 748, 751, 759, 761, 762, 767, 781], "recent": [577, 597, 601, 613, 654, 657, 659, 660, 661, 668, 671, 702, 704, 711, 729, 733, 744, 747, 748, 751, 777, 796], "recept": 659, "recheck": [714, 732], "recip": [690, 692, 736, 741], "recipi": 659, "reciproc": [631, 702], "reclaim": [702, 703, 717], "reclist": 761, "recogn": [587, 599, 603, 646, 651, 702, 705, 714, 732, 734, 751, 765, 793, 797, 801], "recognis": [734, 743], "recombin": [671, 779], "recommend": [577, 582, 595, 597, 598, 599, 602, 603, 608, 631, 652, 659, 666, 668, 669, 671, 680, 682, 686, 687, 691, 692, 700, 702, 704, 711, 715, 731, 733, 734, 748, 751, 755, 761, 766, 767, 773, 794, 796, 799, 800], "recommit": [601, 659], "recommonmark": 709, "recompil": [585, 588, 665, 717, 753, 781, 797], "recomput": [577, 585, 734, 773], "reconfigur": 688, "reconstitut": [680, 697, 702], "reconstruct": [577, 613, 636, 669, 724, 750, 774, 776], "record": [577, 583, 592, 609, 611, 632, 637, 641, 649, 650, 659, 663, 687, 701, 702, 708, 711, 722, 725, 726, 727, 730, 733, 741, 745, 746, 748, 750, 753, 762, 770, 775, 795, 796, 797, 798, 799, 800, 801, 802], "record_kind": 776, "record_meta_container_info": 745, "record_meta_external_fil": 745, "record_meta_remark_vers": 745, "record_meta_strtab": 745, "record_remark_arg_with_debugloc": 745, "record_remark_arg_without_debugloc": 745, "record_remark_debug_loc": 745, "record_remark_head": 745, "record_remark_hot": 745, "recordbodi": 761, "recordcallsit": 701, "recordfield": 760, "recordhead": 721, "recordid": 589, "recordkind": 721, "recordlen": 721, "recordmap": 760, "recoup": 589, "recov": [603, 661, 665, 687, 702, 750, 753], "recover": [577, 602], "recoveri": [734, 794, 795, 796, 797, 798, 799, 800, 801], "recreat": [702, 777], "recur": 695, "recurr": [658, 732, 741], "recurs": [582, 602, 603, 608, 622, 624, 636, 650, 668, 687, 702, 732, 734, 750, 751, 755, 759, 793, 794, 795, 797, 798, 799, 803], "recursiveexpansionlimit": 608, "recval": 760, "recycl": [599, 747, 774], "red": [702, 733, 751], "redefin": [633, 795, 798, 799], "redefinit": [652, 779, 795, 799], "redesign": 670, "redhat": [731, 748], "redirect": [604, 622, 623, 687, 702, 704, 766, 768, 801], "rediscov": 802, "redistribut": 659, "redo": 714, "reduc": [582, 587, 593, 594, 596, 597, 598, 599, 602, 604, 624, 651, 652, 655, 656, 659, 660, 669, 671, 676, 680, 696, 699, 703, 704, 706, 714, 715, 717, 734, 736, 741, 742, 744, 747, 751, 761, 762, 773, 774, 779, 782, 796, 801, 803], "reduce_input": 704, "reduct": [582, 593, 602, 607, 611], "redund": [599, 606, 651, 652, 666, 675, 677, 697, 701, 702, 703, 706, 718, 719, 734, 736, 750, 755, 781, 796], "redwin": 599, "redwood": 582, "reentri": 717, "reexamin": 601, "reexport": 782, "reexportedflag": 717, "reexportflag": 717, "ref": [577, 585, 715, 721, 722, 725, 736, 755, 761, 764, 794, 795, 796, 797, 798, 799, 800, 801], "refactor": [601, 602, 659, 701, 703, 736, 739, 799], "refcount": 668, "refer": [50, 144, 241, 367, 479, 578, 579, 581, 582, 584, 585, 588, 589, 590, 593, 597, 598, 599, 601, 602, 603, 604, 608, 611, 631, 633, 634, 645, 650, 653, 654, 655, 656, 659, 661, 663, 664, 669, 677, 679, 681, 687, 689, 690, 694, 695, 697, 698, 701, 703, 704, 707, 710, 712, 713, 714, 715, 717, 719, 720, 721, 722, 725, 726, 729, 730, 733, 744, 745, 750, 751, 753, 756, 757, 760, 762, 764, 766, 767, 769, 771, 773, 776, 777, 778, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801], "referenc": [577, 581, 582, 589, 646, 651, 652, 686, 701, 702, 703, 705, 714, 717, 720, 722, 729, 734, 745, 750, 761, 768, 771, 779, 780, 794, 795, 796, 797, 798, 799, 800, 801], "referenti": 732, "refil": 714, "refin": [585, 599, 702, 734, 739, 779], "reflect": [577, 581, 582, 585, 656, 659, 685, 694, 702, 705, 717, 739, 750, 757, 771, 773, 798], "reflex": 714, "reflog": 736, "reflogexpir": 736, "reflogexpireunreach": 736, "refnam": 736, "reformat": [602, 710, 739], "reformul": 585, "refrain": [694, 702, 746], "refresh": [677, 705], "refs_to_clean": 736, "refspec": 736, "refus": [597, 614, 621, 624, 628, 649, 732, 751], "reg": [49, 143, 239, 362, 474, 577, 582, 599, 603, 623, 634, 708, 710, 715, 734, 753, 761, 771], "reg1": [603, 702], "reg1024": 599, "reg1025": 599, "reg1026": 599, "reg1027": 599, "reg2": [603, 702], "reg_bas": 603, "reg_nam": 623, "reg_offset": 603, "reg_sequ": [675, 708], "regalloc": [599, 609, 611, 773], "regalloclinearscan": 599, "regallocregistri": 773, "regard": [577, 586, 602, 613, 630, 637, 664, 670, 694, 700, 702, 718, 745, 747, 759], "regardless": [577, 582, 585, 597, 602, 614, 621, 624, 628, 631, 644, 649, 668, 673, 702, 717, 731, 732, 750, 751, 757, 764, 780, 799], "regbankselect": [681, 685, 708], "regconstraint": 599, "regcost": 760, "regener": 696, "regex": [617, 622, 633, 645, 650, 651, 745, 765, 766], "regex_replac": 608, "regexp": 608, "region": [577, 581, 582, 589, 617, 631, 655, 661, 702, 703, 706, 711, 736, 741, 743, 747, 751, 753, 761, 768], "region0": 656, "region1": 656, "regioninfo": [732, 741], "regionsforfile0": 656, "regionsforfile1": 656, "regionvector": 740, "regist": [17, 20, 33, 44, 46, 49, 58, 88, 118, 121, 143, 148, 174, 203, 206, 222, 234, 236, 239, 278, 327, 362, 396, 427, 428, 441, 462, 474, 509, 540, 541, 554, 568, 570, 572, 579, 580, 581, 583, 585, 586, 588, 596, 603, 604, 609, 611, 623, 631, 634, 649, 650, 651, 655, 657, 659, 661, 668, 671, 676, 677, 678, 679, 680, 681, 682, 683, 685, 688, 697, 701, 702, 707, 710, 717, 719, 733, 734, 741, 743, 753, 755, 759, 761, 762, 770, 772, 774, 777, 795, 798, 799, 800, 801], "registeralias": 759, "registeranalysisgroup": 585, "registerasmprint": 771, "registerasmstream": 599, "registerbankinfo": [675, 682], "registerclass": [599, 759, 762, 771], "registerdescriptor": 771, "registeredarg": 668, "registerehfram": 707, "registerehframesect": 701, "registerinfo": [599, 708, 761, 771], "registerlist": 771, "registermcobjectstream": 599, "registermypass": 773, "registerouteranalysisinvalid": 716, "registerpass": 773, "registerpassbuildercallback": [716, 773], "registerpasspars": 773, "registerpipelinestartepcallback": 716, "registerregalloc": 773, "registerschedul": 773, "registerstandardpass": 773, "registertarget": 771, "registerwithsubreg": 771, "registr": [653, 657, 664, 668, 701, 717, 779], "registri": [668, 747, 800], "reglist": 771, "regmapping_f": 599, "regmask": 708, "regno": 599, "regnum": 753, "regoffset": 710, "regress": [593, 603, 608, 657, 659, 671, 673, 674, 681, 704, 735, 736, 744, 751, 772], "regstat": [599, 708], "regtyp": 771, "regul": 773, "regular": [577, 580, 582, 586, 594, 602, 603, 608, 613, 617, 622, 624, 626, 629, 632, 633, 636, 645, 650, 651, 652, 671, 701, 702, 704, 708, 714, 717, 736, 740, 745, 757, 761, 765, 766, 777, 802], "reid": 756, "reilli": 734, "reinterpret": [588, 676, 680], "reintroduc": 751, "reject": [589, 603, 651, 671, 678, 694, 702, 802], "rejoin": 706, "rel": [586, 744], "rel32": 582, "rel_path_to_fil": 617, "rela": [582, 644], "relat": [50, 144, 241, 367, 479, 581, 582, 585, 586, 589, 590, 592, 596, 598, 599, 601, 602, 603, 605, 608, 610, 615, 617, 631, 633, 634, 636, 637, 640, 641, 645, 646, 647, 648, 650, 651, 654, 655, 656, 658, 659, 661, 663, 666, 668, 669, 670, 671, 675, 690, 696, 699, 701, 704, 706, 710, 711, 713, 714, 715, 718, 722, 734, 735, 736, 737, 739, 740, 742, 743, 744, 747, 748, 749, 750, 753, 755, 757, 759, 766, 773, 777, 780, 795, 797, 798, 801], "relationship": [582, 603, 622, 658, 661, 668, 697, 699, 701, 702, 714, 750, 756, 771, 773, 774], "relative_function_pointer_to_async_impl": 655, "relativenam": 646, "relax": [586, 631, 675, 676, 681, 701, 702, 755], "relaxgotedg": 701, "relay": 702, "relbf": 702, "releas": [582, 595, 597, 599, 602, 616, 655, 657, 659, 660, 661, 666, 670, 671, 686, 689, 691, 692, 698, 704, 705, 717, 731, 734, 735, 736, 745, 747, 748, 750, 753, 757, 766, 771, 773, 775, 778, 795], "release_39": 739, "release_fil": 694, "release_test": 694, "release_to_os_interval_m": 747, "releasei": 744, "relev": [577, 585, 586, 599, 601, 603, 640, 641, 652, 655, 659, 666, 689, 691, 693, 694, 695, 699, 701, 702, 706, 716, 718, 730, 731, 733, 734, 736, 737, 741, 746, 748, 755, 774, 797], "reli": [577, 582, 588, 590, 595, 598, 599, 602, 655, 659, 666, 668, 669, 680, 690, 701, 702, 704, 705, 717, 718, 727, 736, 744, 750, 751, 755, 766, 770, 772, 774, 780, 799], "reliabl": [597, 608, 652, 665, 681, 741, 750, 764], "religion": 600, "relink": [593, 616], "reload": [599, 655, 668, 677, 703, 704, 751, 799, 800, 801], "reloc": [577, 581, 599, 611, 633, 634, 635, 640, 641, 645, 646, 668, 693, 696, 701, 707, 708, 722, 743, 771, 800], "reloc_absolute_dword": 771, "reloc_absolute_word": 771, "reloc_pcrel_word": 771, "reloc_picrel_word": 771, "relocat": [50, 144, 241, 367, 479, 577, 582, 611, 633, 701, 702, 707, 717, 755, 771], "relocationtyp": 771, "reloccrc": 722, "relpo": 613, "relr": [640, 641], "relwithdebinfo": [595, 597, 671, 691], "rem": [599, 676], "remain": [577, 582, 586, 591, 597, 602, 603, 631, 655, 656, 658, 659, 661, 663, 668, 680, 681, 694, 697, 701, 702, 706, 708, 716, 718, 719, 727, 732, 734, 741, 743, 746, 747, 748, 750, 751, 753, 755, 757, 761, 766, 776, 779, 798, 799], "remaind": [577, 581, 599, 603, 655, 656, 662, 671, 676, 702, 732, 739, 751, 760, 761, 766, 767, 770, 771], "remainingbuffersizetoskip": 776, "remap": [599, 606, 607, 637, 683], "remark": [593, 606, 609, 739, 769, 770], "remarkemitt": 739, "remarkstream": 745, "remateri": [586, 732], "rematerializ": 712, "rememb": [592, 600, 601, 602, 631, 651, 654, 659, 664, 669, 673, 689, 693, 702, 704, 734, 755, 765, 773, 794, 797, 799, 800, 801], "remind": [659, 694, 711, 736], "remot": [582, 707, 717, 736, 779, 782], "remoteobjectclientlay": 717, "remoteobjectserverlay": 717, "remov": [577, 585, 589, 593, 594, 595, 597, 599, 602, 603, 606, 608, 609, 613, 617, 621, 624, 631, 633, 645, 649, 651, 655, 659, 660, 661, 664, 666, 671, 675, 677, 680, 690, 694, 695, 698, 701, 702, 703, 704, 705, 706, 708, 713, 714, 715, 716, 717, 718, 719, 731, 734, 736, 739, 743, 748, 750, 755, 756, 766, 767, 768, 771, 773, 781, 795, 796, 797, 798, 799, 800, 801, 802], "remove_if": 734, "removeabsolutesymbol": 701, "removeblock": 701, "removebranch": 771, "removedefinedsymbol": 701, "removeexternalsymbol": 701, "removefrompar": 734, "removemodul": [717, 781, 796], "removeobject": 717, "removeredundantdebugvalu": 750, "renam": [577, 593, 594, 602, 631, 633, 671, 675, 702, 708, 717, 734, 736, 739, 743, 744, 750, 758, 782, 799], "render": [577, 582, 599, 678, 702, 734, 775, 798], "reopen": 592, "reorder": [582, 586, 603, 631, 658, 676, 697, 702, 750], "reorgan": [741, 761, 777], "repack": 736, "repeat": [582, 593, 603, 623, 631, 661, 663, 665, 681, 692, 702, 710, 714, 732, 736, 739, 744, 750, 761], "repetit": [599, 603, 623, 757], "rephras": [669, 702], "repl": [717, 761, 779, 780, 796], "replac": [577, 580, 582, 586, 594, 597, 599, 608, 613, 617, 618, 625, 627, 629, 632, 633, 634, 636, 639, 642, 644, 645, 646, 651, 652, 655, 659, 661, 666, 668, 671, 675, 676, 678, 680, 681, 683, 686, 687, 697, 702, 703, 704, 705, 706, 708, 713, 714, 715, 717, 718, 719, 736, 741, 742, 743, 745, 750, 751, 755, 756, 757, 761, 766, 767, 768, 771, 779, 780, 781, 782, 796, 799], "replacealldbguseswith": 697, "replaceallus": 680, "replacealluseswith": [697, 703, 706, 714, 734], "replaceinstwithinst": 734, "replaceinstwithvalu": 734, "replaceoperandwith": 767, "replaceusesofwith": [703, 734], "replaceusesofwithonconst": 703, "replay": [582, 696], "repli": [659, 694, 739], "replic": [577, 696, 705, 719, 741, 777], "repo": [659, 660, 671, 694, 730, 736, 773], "report": [577, 582, 585, 587, 593, 600, 603, 608, 609, 615, 625, 627, 629, 631, 633, 634, 635, 642, 644, 645, 646, 650, 656, 659, 667, 668, 670, 686, 687, 691, 697, 701, 702, 703, 704, 705, 706, 717, 734, 736, 747, 750, 751, 753, 754, 755, 760, 761, 765, 766, 767, 773, 778, 779, 795], "report_fatal_error": [602, 734], "reporterror": [779, 780, 781, 782], "repositori": [601, 659, 660, 661, 670, 671, 674, 693, 694, 696, 733, 738, 739, 748, 750, 757, 766], "repres": [50, 144, 241, 367, 479, 577, 581, 582, 585, 586, 588, 589, 590, 591, 596, 598, 602, 603, 608, 622, 631, 632, 633, 637, 651, 655, 656, 658, 661, 662, 663, 664, 665, 666, 668, 669, 671, 675, 676, 680, 691, 698, 701, 702, 706, 708, 713, 715, 717, 718, 721, 722, 724, 726, 729, 730, 732, 734, 736, 739, 741, 743, 745, 748, 750, 751, 755, 759, 760, 761, 762, 764, 771, 774, 776, 777, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "represent": [580, 582, 588, 590, 598, 599, 602, 636, 637, 650, 651, 654, 658, 661, 662, 668, 671, 675, 677, 681, 685, 701, 703, 706, 708, 710, 717, 734, 742, 750, 753, 759, 761, 762, 769, 771, 773, 774, 775, 776, 777, 779, 780, 794, 795, 796, 798, 802], "reprimand": 746, "repro": [674, 696], "reproduc": [592, 593, 602, 606, 654, 659, 660, 674, 694, 696, 704, 719, 766, 799], "repurpos": 750, "reqd_work_group_s": 582, "reqd_workgroup_s": 582, "reqdworkgroups": 582, "request": [61, 251, 372, 485, 577, 582, 589, 592, 603, 613, 631, 633, 645, 654, 659, 660, 661, 663, 671, 676, 680, 701, 702, 703, 704, 705, 707, 713, 716, 717, 734, 736, 739, 745, 746, 747, 748, 753, 755, 757, 761, 767, 776, 779, 780, 781, 800], "requir": [577, 579, 580, 581, 582, 584, 586, 587, 588, 589, 593, 595, 596, 597, 598, 602, 603, 608, 613, 617, 619, 623, 625, 629, 630, 631, 633, 634, 638, 644, 645, 653, 656, 661, 662, 664, 665, 666, 667, 674, 675, 676, 679, 680, 681, 685, 686, 687, 689, 690, 691, 693, 694, 695, 699, 700, 701, 702, 704, 705, 706, 707, 708, 713, 714, 715, 716, 717, 718, 719, 724, 726, 732, 734, 736, 739, 744, 745, 746, 747, 748, 750, 751, 753, 755, 756, 759, 760, 761, 764, 767, 771, 776, 777, 779, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "requires_rtti": 731, "rerereresolv": 736, "rerereunresolv": 736, "rerun": [671, 733], "res": [602, 702, 714], "resbyarg": 702, "rescan": 714, "reschedul": 750, "research": [662, 738, 748, 751, 765, 778], "resembl": [669, 751], "reserv": [582, 587, 589, 599, 665, 701, 702, 704, 721, 722, 729, 747, 751, 753, 755, 761, 766, 771, 776], "reserved_464": 582, "reserved_468": 582, "reserveresourc": 599, "reset": [582, 589, 597, 661, 674, 704, 712, 734, 751, 761, 776], "resid": [577, 580, 582, 588, 589, 596, 655, 668, 702, 704, 715, 717, 726, 747, 750, 751, 757, 773], "resign": 659, "resili": [631, 711, 757], "resist": 704, "resolut": [587, 592, 602, 652, 659, 681, 701, 702, 717, 746, 748, 796, 798], "resolv": [50, 144, 241, 367, 479, 581, 582, 595, 598, 599, 600, 601, 608, 623, 652, 657, 659, 690, 701, 702, 705, 707, 717, 718, 734, 739, 746, 748, 751, 754, 757, 761, 773, 776, 780, 781, 795, 796, 797], "resolvereloc": 707, "resolverti": 702, "resort": 661, "resourc": [23, 30, 31, 63, 64, 121, 124, 130, 131, 152, 153, 206, 209, 219, 220, 253, 254, 345, 376, 410, 411, 427, 439, 440, 489, 522, 523, 540, 552, 553, 580, 597, 598, 623, 631, 641, 651, 660, 661, 685, 701, 717, 734, 771, 773], "resourcekey": 701, "resourcetrack": [796, 797, 798, 799], "resourcetrackersp": [779, 780, 781, 782], "resp": [623, 702, 734], "respect": [577, 582, 585, 593, 597, 599, 600, 602, 604, 619, 622, 631, 637, 641, 642, 644, 646, 652, 655, 659, 661, 668, 669, 671, 676, 690, 695, 702, 703, 706, 708, 710, 717, 734, 735, 736, 743, 745, 747, 748, 755, 762, 764, 766, 768, 771, 779, 781, 799], "respond": [585, 601, 654, 659, 711, 732, 733, 746, 748], "respons": [582, 599, 601, 613, 618, 631, 632, 633, 634, 635, 640, 641, 642, 644, 645, 646, 655, 659, 661, 668, 678, 694, 701, 702, 717, 727, 733, 734, 741, 745, 746, 749, 753, 755, 757, 759, 767, 768, 773, 777, 779], "rest": [240, 363, 475, 577, 582, 589, 599, 603, 624, 655, 659, 668, 671, 675, 680, 685, 687, 690, 702, 704, 705, 708, 709, 714, 726, 734, 745, 750, 752, 756, 761, 774, 796, 799], "restart": [586, 680, 688, 704, 734, 773], "restat": 602, "restofthecleanup": 655, "restor": [577, 582, 589, 599, 655, 661, 700, 702, 749, 751, 771, 797, 798, 799, 800, 801], "restrict": [577, 582, 586, 597, 599, 602, 631, 644, 651, 659, 662, 663, 664, 669, 675, 676, 700, 701, 702, 708, 713, 721, 734, 736, 748, 750, 751, 753, 755, 757, 761, 770, 773, 796], "restructur": 767, "restructuredtext": 752, "result": [577, 580, 581, 582, 586, 588, 589, 593, 595, 596, 597, 598, 599, 602, 603, 604, 606, 611, 614, 617, 622, 623, 631, 636, 637, 646, 649, 651, 652, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 668, 669, 670, 671, 673, 674, 675, 676, 680, 681, 686, 687, 691, 692, 694, 696, 697, 698, 699, 701, 704, 706, 707, 708, 713, 714, 715, 716, 717, 719, 720, 726, 727, 732, 734, 736, 739, 740, 743, 744, 745, 750, 751, 753, 755, 756, 757, 759, 761, 762, 765, 766, 767, 770, 771, 772, 773, 774, 775, 777, 779, 781, 794, 795, 796, 797, 798, 799, 800, 801], "result_typ": 702, "results_a": 764, "results_b": 764, "resultti": 702, "resulttyp": 702, "resultv": 702, "resum": [582, 657, 661, 753], "resume1": 655, "resume2": 655, "resume_func_ptr": 655, "resumpt": 655, "ret": [586, 588, 591, 599, 603, 655, 661, 664, 668, 669, 697, 706, 708, 709, 713, 715, 732, 734, 749, 750, 751, 752, 753, 755, 761, 766, 768, 772, 795, 796, 797, 799], "ret_typ": 702, "retain": [577, 582, 588, 651, 659, 664, 703, 734, 761, 773], "retainednod": [697, 702, 750], "retainedtyp": [702, 750], "retarget": [599, 769], "retcc_sparc32": 771, "retcc_x86_32": 771, "retcc_x86_32_c": 771, "retcc_x86_32_fast": 771, "retcc_x86_32_ss": 771, "retcc_x86common": 771, "rethrow": [661, 755], "retir": 659, "retireooo": 631, "retpolin": 751, "retq": [708, 751, 755], "retri": [757, 774], "retriev": [577, 613, 650, 651, 661, 663, 702, 707, 713, 715, 733, 734, 743, 745, 753, 759, 761, 773, 777], "retroact": 659, "retti": 589, "return": [42, 43, 138, 139, 232, 233, 337, 459, 460, 566, 567, 577, 580, 582, 583, 585, 586, 588, 589, 591, 593, 594, 599, 601, 603, 606, 611, 617, 618, 622, 623, 630, 631, 636, 637, 640, 641, 643, 646, 650, 651, 652, 656, 657, 659, 661, 662, 664, 666, 668, 671, 673, 676, 677, 678, 680, 682, 687, 695, 698, 699, 700, 701, 702, 704, 705, 706, 707, 709, 710, 712, 713, 714, 715, 716, 717, 719, 732, 743, 747, 749, 750, 752, 753, 754, 755, 756, 759, 760, 761, 768, 770, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "return_addr": 751, "return_address_regist": [577, 582], "returnaddress": 708, "returndoesnotalia": 702, "returnindex": 698, "returns_signed_char": 702, "returns_twic": [589, 702], "returntyp": [668, 702], "retval": [661, 702, 795, 796, 797, 798, 799, 800, 801], "reus": [582, 598, 599, 603, 658, 685, 687, 702, 716, 736, 739, 747, 750, 751, 753, 761, 762, 772], "reusabl": [599, 685], "rev": [588, 736, 739], "rev128": 588, "rev64": 588, "reveal": [669, 751], "revector": [732, 734], "revers": [580, 588, 597, 603, 632, 669, 676, 703, 732, 734, 750, 751, 761], "revert": [577, 601, 659, 702, 757], "revert_polici": 659, "review": [592, 596, 602, 654, 666, 670, 671, 673, 690, 694, 703, 704, 709, 714, 736, 739, 740, 741, 746, 748, 752, 755, 756, 757, 761], "revis": [215, 217, 218, 227, 229, 230, 592, 597, 601, 602, 659, 660, 666, 671, 674, 694, 702, 733, 734, 750, 753, 757], "revisit": [602, 741, 751, 755], "revlist": 736, "revmap": 736, "revoc": 748, "revok": [659, 748], "revolv": 750, "reword": 603, "rework": [651, 659], "rewound": 661, "rewrit": [597, 631, 650, 659, 695, 697, 701, 702, 703, 732, 736, 750, 755, 771, 799], "rewritestatepointsforgc": [668, 702], "rewritten": [599, 655, 734, 736], "rex": 702, "rf": [709, 752, 766, 771], "rfc": [659, 703, 740, 748, 757], "rfunc": 624, "rg": 733, "rg7b73cd684a8d5fb44d34064200f10e2723085c33": 743, "rg8962c68ad007a525f9daa987c99eda57e0d0069a": 743, "rg8d718a0bff73af066675a6258c01307937c33cf9": 743, "rgb": 738, "rgba": 580, "rgc8fc5e3ba942057d6c4cdcd1faeae69a28e7b671": 743, "rgcec8e69f01c3374cb38c6683058381b96fab8f89": 743, "rglob": 624, "rgm": 773, "rhs": [602, 702, 714, 734, 759, 794, 795, 796, 797, 798, 799, 800, 801], "ri": [668, 702, 761, 771], "ri_inst": 761, "ricci": 739, "ricciacronym": 739, "rice": 658, "rich": [675, 742], "richer": 753, "rid": [714, 722], "right": [577, 580, 581, 582, 586, 588, 598, 599, 602, 604, 623, 651, 654, 658, 659, 662, 664, 666, 671, 676, 687, 695, 696, 702, 706, 708, 714, 727, 732, 733, 736, 744, 751, 752, 759, 761, 766, 776, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "right_op": 702, "rightr": 714, "rigor": [599, 757], "riinst": 761, "riley": 748, "ring": 582, "rip": [634, 702, 708, 762, 766], "risc": [586, 599, 634, 650, 670, 702, 739, 740, 771], "riscv": [650, 671], "riscv_vector": 650, "riscv_vector_builtin": 650, "riscv_vector_builtin_cg": 650, "rise": 602, "risk": [689, 702, 734, 750, 751], "riski": 751, "rival": 734, "rk": 760, "rl": [577, 715], "rl1": 715, "rl2": 715, "rl247405": 704, "rl247414": 704, "rl247416": 704, "rl247417": 704, "rl247420": 704, "rl247422": 704, "rl3": 715, "rl317337": 747, "rl4": 715, "rl5": 715, "rl6": 715, "rl7": 715, "rls": 577, "rm": [671, 702, 704, 709, 752, 761, 762, 766, 771, 775, 800], "rme": 743, "rmrk": 745, "rmw": 586, "rn": [663, 715], "rnglist": 622, "ro_signed_pat": 762, "roadmap": [670, 757], "rob": [631, 652], "robert": 652, "robin": 631, "robinson": [739, 748], "robinsonagre": 739, "robinsondistinguish": 739, "robinsondistinguish2": 739, "robinsontransit": 739, "robot": 670, "robust": [601, 652, 685, 697, 702, 710, 737, 766], "rocgdb": 577, "rocm": [577, 582], "rodata": [582, 751, 771], "rogu": 751, "role": [602, 636, 702, 706, 714, 734, 744, 750, 794], "roll": [602, 695, 711], "rom": 633, "roms_": 738, "roms_r": 738, "room": [698, 773, 794], "root": [592, 597, 599, 608, 616, 659, 660, 671, 687, 688, 693, 701, 702, 703, 706, 726, 734, 735, 736, 739, 747, 759, 766, 773, 775, 795], "rootcount": 668, "rootmetadata": 668, "rootnum": 668, "roots_begin": 668, "roots_end": 668, "roots_iter": 668, "roots_siz": 668, "rootstackoffset": 668, "rope": 734, "rot": [659, 757], "rotat": [577, 580, 599, 662, 676, 702], "rotl": 662, "rough": [586, 599, 652, 661, 669, 694, 695, 703, 704, 739, 750], "roun": 652, "round": [577, 588, 599, 631, 652, 659, 676, 687, 694, 751, 777, 798], "roundp": 770, "roundtointegraltiestoeven": 702, "roundup": 582, "routin": [577, 586, 599, 608, 659, 661, 668, 702, 714, 732, 751, 755, 756, 773, 774, 776, 794, 802, 803], "rov": 582, "rovid": 687, "row": [580, 631, 699, 702], "row_bcast": [580, 582], "row_half_mirror": 580, "row_mask": [0, 1, 3, 4, 7, 8, 9, 582], "row_mirror": [580, 582], "row_newbcast": 580, "row_ror": 580, "row_shar": 580, "row_shl": [580, 582], "row_shr": 580, "row_xmask": 580, "rowfield": 699, "rpass": 770, "rpath": [607, 634, 671], "rpc": [701, 717], "rpcc": 702, "rpcs": 776, "rpmalloc": 597, "rpo": 703, "rppassmanag": 773, "rr": [761, 771], "rrinst": 761, "rs": [599, 702], "rs1": 771, "rs2": 771, "rs4gc": 755, "rs880": 582, "rsb": 751, "rsi": [599, 751, 762], "rsp": [599, 613, 708, 749, 751, 753, 755, 762], "rsrc": [580, 641], "rss": [704, 747], "rss_limit_mb": 704, "rst": [583, 599, 650, 752, 759], "rsync": 764, "rt": [584, 586, 595, 597, 598, 667, 671, 674, 687, 689, 690, 691, 694, 702, 717, 736, 739, 744, 747, 757, 764, 769, 771, 774, 779, 780, 781, 782, 796, 797, 798, 799], "rtc": 767, "rtdyldobjectlinkinglay": [717, 779, 780, 781, 782], "rthroughput": 631, "rtl": 599, "rtld_fini": 657, "rtti": [597, 661, 731, 734, 742, 768, 799, 800, 801], "rttiextend": 695, "rttiroot": 695, "rubi": 668, "rude": 661, "rui": 739, "rule": [579, 582, 586, 599, 600, 602, 603, 606, 614, 619, 631, 636, 650, 652, 655, 659, 675, 677, 693, 700, 701, 714, 717, 734, 735, 739, 744, 745, 747, 750, 751, 755, 756, 757, 761, 762, 765, 766, 773, 776, 795, 796, 797], "ruleset": 680, "run": [577, 582, 584, 585, 586, 587, 588, 593, 594, 597, 598, 599, 602, 603, 604, 606, 616, 617, 623, 631, 633, 637, 639, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 664, 665, 666, 668, 670, 671, 672, 673, 677, 681, 686, 688, 689, 690, 691, 692, 694, 696, 697, 701, 702, 705, 707, 708, 712, 713, 714, 716, 717, 718, 719, 731, 732, 733, 734, 735, 736, 739, 742, 743, 744, 748, 750, 751, 753, 755, 757, 759, 760, 761, 762, 766, 770, 771, 774, 775, 776, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "run_long_test": 766, "runbeforepass": 772, "runfunct": [657, 734], "runfunctionasmain": 657, "runhelp": 602, "runnabl": 671, "runner": 764, "runonfunct": [585, 593, 719, 734, 771, 775], "runonmachinefunct": [599, 679, 719, 771], "runonmodul": 775, "runtest": [693, 744], "runtim": [577, 582, 584, 586, 589, 591, 593, 595, 597, 599, 602, 603, 617, 631, 634, 646, 651, 652, 653, 657, 659, 665, 668, 671, 690, 692, 703, 704, 706, 717, 727, 732, 734, 736, 747, 749, 750, 753, 755, 756, 764, 767, 771, 773, 775, 777, 780, 781, 796, 798, 802], "runtimedyld": [707, 717], "runtimedyldelf": 707, "runtimedyldimpl": 707, "runtimedyldmacho": 707, "runtimehandl": 582, "runtimevers": [697, 702, 750], "rust": [739, 748], "rv": 714, "rv670": 582, "rv710": 582, "rv730": 582, "rv770": 582, "rvaluerefer": 721, "rvaluerefthispoint": 721, "rw": [582, 701, 702], "rwx": 701, "rx": [582, 761], "ryzen": 582, "rzi": 715, "s0": [581, 582, 702], "s1": [582, 675, 676], "s15": 702, "s16": [675, 676, 680], "s17": 675, "s2": [49, 143, 239, 362, 474, 582], "s3": [581, 582], "s31": 702, "s32": [0, 2, 3, 675, 676, 677, 679, 680, 697, 708, 715], "s33": 676, "s4": [581, 582], "s5": [581, 582], "s6": [581, 582], "s64": [0, 2, 3, 675, 676, 680, 715], "s7": [581, 680], "s7100": 582, "s7150": 582, "s8": [675, 676], "s9": 702, "s9150": 582, "s9170": 582, "s9300x2": 582, "s_abs_i32": [0, 2, 3, 4, 9], "s_absdiff_i32": [0, 2, 3, 4, 9], "s_add_i32": [0, 2, 3, 4, 9], "s_add_u32": [0, 2, 3, 4, 9, 582, 708], "s_addc_u32": [0, 2, 3, 4, 9, 582], "s_addk_i32": [0, 2, 3, 4, 9], "s_and_b32": [0, 2, 3, 4, 9], "s_and_b64": [0, 2, 3, 4, 9, 582], "s_and_saveexec_b32": 0, "s_and_saveexec_b64": [0, 2, 3, 4, 9], "s_andn1_saveexec_b32": 0, "s_andn1_saveexec_b64": [0, 4, 9], "s_andn1_wrexec_b32": 0, "s_andn1_wrexec_b64": [0, 4, 9], "s_andn2_b32": [0, 2, 3, 4, 9, 582], "s_andn2_b64": [0, 2, 3, 4, 9], "s_andn2_saveexec_b32": 0, "s_andn2_saveexec_b64": [0, 2, 3, 4, 9], "s_andn2_wrexec_b32": 0, "s_andn2_wrexec_b64": [0, 4, 9], "s_annot": 702, "s_arch": 652, "s_ashr_i32": [0, 2, 3, 4, 9, 582], "s_ashr_i64": [0, 2, 3, 4, 9], "s_atc_prob": [0, 3, 4, 9], "s_atc_probe_buff": [0, 3, 4, 9], "s_atomic_add": [0, 4, 9], "s_atomic_add_x2": [0, 4, 9], "s_atomic_and": [0, 4, 9], "s_atomic_and_x2": [0, 4, 9], "s_atomic_cmpswap": [0, 4, 9], "s_atomic_cmpswap_x2": [0, 4, 9], "s_atomic_dec": [0, 4, 9], "s_atomic_dec_x2": [0, 4, 9], "s_atomic_inc": [0, 4, 9], "s_atomic_inc_x2": [0, 4, 9], "s_atomic_or": [0, 4, 9], "s_atomic_or_x2": [0, 4, 9], "s_atomic_smax": [0, 4, 9], "s_atomic_smax_x2": [0, 4, 9], "s_atomic_smin": [0, 4, 9], "s_atomic_smin_x2": [0, 4, 9], "s_atomic_sub": [0, 4, 9], "s_atomic_sub_x2": [0, 4, 9], "s_atomic_swap": [0, 4, 9], "s_atomic_swap_x2": [0, 4, 9], "s_atomic_umax": [0, 4, 9], "s_atomic_umax_x2": [0, 4, 9], "s_atomic_umin": [0, 4, 9], "s_atomic_umin_x2": [0, 4, 9], "s_atomic_xor": [0, 4, 9], "s_atomic_xor_x2": [0, 4, 9], "s_barrier": [0, 2, 3, 4, 9, 582], "s_bcnt0_i32_b32": [0, 2, 3, 4, 9], "s_bcnt0_i32_b64": [0, 2, 3, 4, 9, 579, 582], "s_bcnt1_i32_b32": [0, 2, 3, 4, 9], "s_bcnt1_i32_b64": [0, 2, 3, 4, 9], "s_bfe_i32": [0, 2, 3, 4, 9], "s_bfe_i64": [0, 2, 3, 4, 9, 581, 582], "s_bfe_u32": [0, 2, 3, 4, 9], "s_bfe_u64": [0, 2, 3, 4, 9, 581], "s_bfm_b32": [0, 2, 3, 4, 9], "s_bfm_b64": [0, 2, 3, 4, 9, 582], "s_bitcmp0_b32": [0, 2, 3, 4, 9], "s_bitcmp0_b64": [0, 2, 3, 4, 9, 582], "s_bitcmp1_b32": [0, 2, 3, 4, 9, 582], "s_bitcmp1_b64": [0, 2, 3, 4, 9], "s_bitreplicate_b64_b32": [0, 4, 9], "s_bitset0_b32": [0, 2, 3, 4, 9], "s_bitset0_b64": [0, 2, 3, 4, 9], "s_bitset1_b32": [0, 2, 3, 4, 9], "s_bitset1_b64": [0, 2, 3, 4, 9], "s_branch": [0, 2, 3, 4, 9, 50, 144, 241, 367, 479, 581], "s_brev_b32": [0, 2, 3, 4, 9], "s_brev_b64": [0, 2, 3, 4, 9], "s_buffer_atomic_add": [0, 4, 9], "s_buffer_atomic_add_x2": [0, 4, 9], "s_buffer_atomic_and": [0, 4, 9], "s_buffer_atomic_and_x2": [0, 4, 9], "s_buffer_atomic_cmpswap": [0, 4, 9], "s_buffer_atomic_cmpswap_x2": [0, 4, 9], "s_buffer_atomic_dec": [0, 4, 9], "s_buffer_atomic_dec_x2": [0, 4, 9], "s_buffer_atomic_inc": [0, 4, 9], "s_buffer_atomic_inc_x2": [0, 4, 9], "s_buffer_atomic_or": [0, 4, 9], "s_buffer_atomic_or_x2": [0, 4, 9], "s_buffer_atomic_smax": [0, 4, 9], "s_buffer_atomic_smax_x2": [0, 4, 9], "s_buffer_atomic_smin": [0, 4, 9], "s_buffer_atomic_smin_x2": [0, 4, 9], "s_buffer_atomic_sub": [0, 4, 9], "s_buffer_atomic_sub_x2": [0, 4, 9], "s_buffer_atomic_swap": [0, 4, 9], "s_buffer_atomic_swap_x2": [0, 4, 9], "s_buffer_atomic_umax": [0, 4, 9], "s_buffer_atomic_umax_x2": [0, 4, 9], "s_buffer_atomic_umin": [0, 4, 9], "s_buffer_atomic_umin_x2": [0, 4, 9], "s_buffer_atomic_xor": [0, 4, 9], "s_buffer_atomic_xor_x2": [0, 4, 9], "s_buffer_load_dword": [0, 2, 3, 4, 9], "s_buffer_load_dwordx16": [0, 2, 3, 4, 9], "s_buffer_load_dwordx2": [0, 2, 3, 4, 9], "s_buffer_load_dwordx4": [0, 2, 3, 4, 9], "s_buffer_load_dwordx8": [0, 2, 3, 4, 9], "s_buffer_store_dword": [0, 3, 4, 9], "s_buffer_store_dwordx2": [0, 3, 4, 9], "s_buffer_store_dwordx4": [0, 3, 4, 9], "s_call_b64": [0, 4, 9], "s_cbranch_cdbgsi": [0, 2, 3, 4, 9], "s_cbranch_cdbgsys_and_us": [0, 2, 3, 4, 9], "s_cbranch_cdbgsys_or_us": [0, 2, 3, 4, 9], "s_cbranch_cdbgus": [0, 2, 3, 4, 9], "s_cbranch_execnz": [0, 2, 3, 4, 9], "s_cbranch_execz": [0, 2, 3, 4, 9], "s_cbranch_g_fork": [2, 3, 4, 9, 582], "s_cbranch_i_fork": [2, 3, 4, 9], "s_cbranch_join": [2, 3, 4, 9, 582], "s_cbranch_scc0": [0, 2, 3, 4, 9], "s_cbranch_scc1": [0, 2, 3, 4, 9], "s_cbranch_vccnz": [0, 2, 3, 4, 9], "s_cbranch_vccz": [0, 2, 3, 4, 9], "s_claus": 0, "s_cmov_b32": [0, 2, 3, 4, 9, 582], "s_cmov_b64": [0, 2, 3, 4, 9], "s_cmovk_i32": [0, 2, 3, 4, 9], "s_cmp_eq_i32": [0, 2, 3, 4, 9, 582], "s_cmp_eq_u32": [0, 2, 3, 4, 9], "s_cmp_eq_u64": [0, 3, 4, 9], "s_cmp_ge_i32": [0, 2, 3, 4, 9], "s_cmp_ge_u32": [0, 2, 3, 4, 9], "s_cmp_gt_i32": [0, 2, 3, 4, 9], "s_cmp_gt_u32": [0, 2, 3, 4, 9], "s_cmp_le_i32": [0, 2, 3, 4, 9], "s_cmp_le_u32": [0, 2, 3, 4, 9], "s_cmp_lg_i32": [0, 2, 3, 4, 9], "s_cmp_lg_u32": [0, 2, 3, 4, 9], "s_cmp_lg_u64": [0, 3, 4, 9], "s_cmp_lt_i32": [0, 2, 3, 4, 9], "s_cmp_lt_u32": [0, 2, 3, 4, 9], "s_cmpk_eq_i32": [0, 2, 3, 4, 9], "s_cmpk_eq_u32": [0, 2, 3, 4, 9], "s_cmpk_ge_i32": [0, 2, 3, 4, 9], "s_cmpk_ge_u32": [0, 2, 3, 4, 9], "s_cmpk_gt_i32": [0, 2, 3, 4, 9], "s_cmpk_gt_u32": [0, 2, 3, 4, 9], "s_cmpk_le_i32": [0, 2, 3, 4, 9], "s_cmpk_le_u32": [0, 2, 3, 4, 9], "s_cmpk_lg_i32": [0, 2, 3, 4, 9], "s_cmpk_lg_u32": [0, 2, 3, 4, 9], "s_cmpk_lt_i32": [0, 2, 3, 4, 9], "s_cmpk_lt_u32": [0, 2, 3, 4, 9], "s_code_end": 0, "s_cselect_b32": [0, 2, 3, 4, 9, 582], "s_cselect_b64": [0, 2, 3, 4, 9], "s_dcache_discard": [0, 4, 9], "s_dcache_discard_x2": [0, 4, 9], "s_dcache_inv": [0, 2, 3, 4, 9, 582], "s_dcache_inv_vol": [2, 3, 4, 9, 582], "s_dcache_wb": [0, 3, 4, 9, 582], "s_dcache_wb_vol": [3, 4, 9], "s_decperflevel": [0, 2, 3, 4, 9], "s_denorm_mod": 0, "s_endpgm": [0, 2, 3, 4, 9, 582], "s_endpgm_ordered_ps_don": [0, 4, 9], "s_endpgm_sav": [0, 3, 4, 9], "s_ff0_i32_b32": [0, 2, 3, 4, 9], "s_ff0_i32_b64": [0, 2, 3, 4, 9], "s_ff1_i32_b32": [0, 2, 3, 4, 9], "s_ff1_i32_b64": [0, 2, 3, 4, 9], "s_flbit_i32": [0, 2, 3, 4, 9], "s_flbit_i32_b32": [0, 2, 3, 4, 9], "s_flbit_i32_b64": [0, 2, 3, 4, 9], "s_flbit_i32_i64": [0, 2, 3, 4, 9], "s_get_reg": 581, "s_get_waveid_in_workgroup": 0, "s_getpc_b64": [0, 2, 3, 4, 9, 582], "s_getreg_b32": [0, 2, 3, 4, 9, 49, 143, 239, 362, 474], "s_gl1_inv": 0, "s_icache_inv": [0, 2, 3, 4, 9], "s_incperflevel": [0, 2, 3, 4, 9], "s_inst_prefetch": 0, "s_load_dword": [0, 2, 3, 4, 9, 582], "s_load_dwordx16": [0, 2, 3, 4, 9, 582], "s_load_dwordx2": [0, 2, 3, 4, 9, 582], "s_load_dwordx4": [0, 2, 3, 4, 9], "s_load_dwordx8": [0, 2, 3, 4, 9, 582], "s_lshl1_add_u32": [0, 4, 9], "s_lshl2_add_u32": [0, 4, 9], "s_lshl3_add_u32": [0, 4, 9], "s_lshl4_add_u32": [0, 4, 9], "s_lshl_b32": [0, 2, 3, 4, 9], "s_lshl_b64": [0, 2, 3, 4, 9], "s_lshr_b32": [0, 2, 3, 4, 9], "s_lshr_b64": [0, 2, 3, 4, 9, 582], "s_max_i32": [0, 2, 3, 4, 9], "s_max_u32": [0, 2, 3, 4, 9], "s_memrealtim": [0, 3, 4, 9], "s_memtim": [0, 2, 3, 4, 9, 582], "s_min_i32": [0, 2, 3, 4, 9], "s_min_u32": [0, 2, 3, 4, 9], "s_mov_b32": [0, 2, 3, 4, 9, 582], "s_mov_b64": [0, 2, 3, 4, 9, 582], "s_movk_i32": [0, 2, 3, 4, 9], "s_movreld_b32": [0, 2, 3, 4, 9], "s_movreld_b64": [0, 2, 3, 4, 9], "s_movrels_b32": [0, 2, 3, 4, 9], "s_movrels_b64": [0, 2, 3, 4, 9], "s_movrelsd_2_b32": 0, "s_mul_hi_i32": [0, 4, 9], "s_mul_hi_u32": [0, 4, 9], "s_mul_i32": [0, 2, 3, 4, 9], "s_mulk_i32": [0, 2, 3, 4, 9], "s_nand_b32": [0, 2, 3, 4, 9], "s_nand_b64": [0, 2, 3, 4, 9], "s_nand_saveexec_b32": 0, "s_nand_saveexec_b64": [0, 2, 3, 4, 9], "s_nop": [0, 2, 3, 4, 9, 582], "s_nor_b32": [0, 2, 3, 4, 9], "s_nor_b64": [0, 2, 3, 4, 9], "s_nor_saveexec_b32": 0, "s_nor_saveexec_b64": [0, 2, 3, 4, 9], "s_not_b32": [0, 2, 3, 4, 9], "s_not_b64": [0, 2, 3, 4, 9], "s_or_b32": [0, 2, 3, 4, 9], "s_or_b64": [0, 2, 3, 4, 9], "s_or_saveexec_b32": 0, "s_or_saveexec_b64": [0, 2, 3, 4, 9], "s_orn1_saveexec_b32": 0, "s_orn1_saveexec_b64": [0, 4, 9], "s_orn2_b32": [0, 2, 3, 4, 9], "s_orn2_b64": [0, 2, 3, 4, 9], "s_orn2_saveexec_b32": 0, "s_orn2_saveexec_b64": [0, 2, 3, 4, 9], "s_pack_hh_b32_b16": [0, 4, 9], "s_pack_lh_b32_b16": [0, 4, 9], "s_pack_ll_b32_b16": [0, 4, 9], "s_quadmask_b32": [0, 2, 3, 4, 9], "s_quadmask_b64": [0, 2, 3, 4, 9], "s_rfe_b64": [0, 2, 3, 4, 9], "s_rfe_restore_b64": [3, 4, 9], "s_round_mod": 0, "s_s": 702, "s_scratch_load_dword": [0, 4, 9], "s_scratch_load_dwordx2": [0, 4, 9], "s_scratch_load_dwordx4": [0, 4, 9], "s_scratch_store_dword": [0, 4, 9], "s_scratch_store_dwordx2": [0, 4, 9], "s_scratch_store_dwordx4": [0, 4, 9], "s_sendmsg": [0, 2, 3, 4, 9, 55, 146, 245, 370, 482, 582], "s_sendmsghalt": [0, 2, 3, 4, 9], "s_set_gpr_idx_idx": [3, 4, 9], "s_set_gpr_idx_mod": [3, 4, 9, 240, 363, 475], "s_set_gpr_idx_off": [3, 4, 9], "s_set_gpr_idx_on": [3, 4, 9], "s_set_reg": 581, "s_sethalt": [0, 2, 3, 4, 9, 582], "s_setkil": [0, 2, 3, 4, 9], "s_setpc_b64": [0, 2, 3, 4, 9, 582], "s_setprio": [0, 2, 3, 4, 9], "s_setreg_b32": [0, 2, 3, 4, 9], "s_setreg_imm32_b32": [0, 2, 3, 4, 9], "s_setvskip": [2, 3, 4, 9, 582], "s_sext_i32_i16": [0, 2, 3, 4, 9], "s_sext_i32_i8": [0, 2, 3, 4, 9], "s_sleep": [0, 2, 3, 4, 9, 582], "s_store_dword": [0, 3, 4, 9], "s_store_dwordx2": [0, 3, 4, 9], "s_store_dwordx4": [0, 3, 4, 9], "s_sub_i32": [0, 2, 3, 4, 9], "s_sub_u32": [0, 2, 3, 4, 9], "s_subb_u32": [0, 2, 3, 4, 9], "s_subvector_loop_begin": 0, "s_subvector_loop_end": 0, "s_swappc_b64": [0, 2, 3, 4, 9, 582], "s_trap": [0, 2, 3, 4, 9, 582], "s_ttracedata": [0, 2, 3, 4, 9], "s_ttracedata_imm": 0, "s_version": 0, "s_waitcnt": [0, 2, 3, 4, 9, 115, 202, 304, 471, 576, 582], "s_waitcnt_expcnt": 0, "s_waitcnt_lgkmcnt": 0, "s_waitcnt_vmcnt": 0, "s_waitcnt_vscnt": 0, "s_wakeup": [0, 3, 4, 9], "s_wqm_b32": [0, 2, 3, 4, 9], "s_wqm_b64": [0, 2, 3, 4, 9, 582], "s_xnor_b32": [0, 2, 3, 4, 9], "s_xnor_b64": [0, 2, 3, 4, 9], "s_xnor_saveexec_b32": 0, "s_xnor_saveexec_b64": [0, 2, 3, 4, 9], "s_xor_b32": [0, 2, 3, 4, 9], "s_xor_b64": [0, 2, 3, 4, 9], "s_xor_saveexec_b32": 0, "s_xor_saveexec_b64": [0, 2, 3, 4, 9], "sa": [582, 650], "sacrif": 737, "sacrific": [702, 714], "sad": [733, 751], "saddr": [0, 4, 8, 9, 100, 101, 354, 425, 426, 538, 539], "safe": [582, 585, 586, 589, 593, 595, 599, 604, 651, 659, 663, 666, 669, 671, 676, 680, 694, 696, 697, 701, 702, 703, 717, 719, 732, 736, 746, 751, 753, 754, 755, 767, 779, 781, 802], "safepoint": [668, 702, 742], "safepoint_pol": 755, "safepointaddress": 668, "safer": 734, "safestack": [589, 702, 754], "safeti": [665, 666, 702, 712, 746, 769], "saga": 797, "sahf": [599, 751], "said": [594, 601, 602, 623, 631, 659, 661, 687, 691, 701, 702, 713, 727, 734, 747, 748, 750, 802], "sake": [603, 734, 773], "salient": 690, "salvag": 750, "salvagedebuginfo": 697, "same": [49, 50, 115, 143, 144, 202, 239, 240, 241, 304, 362, 363, 367, 471, 474, 475, 479, 576, 577, 580, 581, 582, 583, 585, 586, 588, 589, 591, 592, 593, 594, 597, 598, 599, 601, 602, 604, 606, 608, 611, 613, 614, 615, 617, 623, 625, 631, 632, 633, 636, 641, 645, 646, 649, 651, 652, 655, 656, 659, 661, 662, 663, 665, 666, 667, 668, 669, 671, 675, 676, 679, 680, 681, 686, 687, 689, 690, 691, 692, 694, 697, 699, 700, 701, 702, 703, 704, 706, 708, 711, 713, 714, 715, 716, 717, 719, 720, 722, 727, 729, 730, 731, 732, 733, 734, 735, 736, 739, 741, 744, 745, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 766, 767, 768, 770, 771, 773, 775, 776, 777, 779, 780, 793, 794, 795, 796, 797, 798, 799, 802], "same_cont": 663, "same_s": 663, "sames": 702, "sampl": [580, 582, 584, 591, 623, 630, 637, 638, 651, 657, 659, 668, 673, 687, 697, 704, 715, 735, 742, 755, 764, 773, 774, 775, 794, 795, 801, 805], "samplepgo": [591, 697], "sampler": [67, 154, 255, 412, 524, 687], "sampson": 654, "san": 687, "sandbox": [693, 701, 744], "sander": 684, "sandia": 738, "sandwich": 697, "sandybridg": 770, "sandylak": 800, "sane": [586, 597], "sanit": [597, 598, 667, 696, 702, 704, 716, 732, 737, 747, 754, 775], "saniti": [666, 671, 704], "sanitize_address": [589, 702], "sanitize_hwaddress": [589, 702], "sanitize_memori": [589, 702], "sanitize_memtag": [589, 702], "sanitize_thread": [589, 702], "sanitizercoverag": [702, 704], "sanitizercoveragetracedataflow": 704, "sanitizerlist": 775, "sanjoy": 739, "saptr": 702, "sar": 599, "sarq": 751, "sas": 582, "sass": [652, 715], "sata": 689, "satisfi": [55, 146, 245, 370, 482, 581, 582, 585, 586, 601, 603, 659, 665, 675, 680, 692, 701, 702, 751, 756, 766, 799], "satur": [676, 798], "save": [577, 582, 588, 589, 597, 599, 602, 613, 615, 623, 651, 652, 661, 662, 671, 673, 700, 702, 704, 707, 715, 717, 731, 733, 734, 750, 751, 753, 760, 761, 764, 770, 771, 796, 797, 798, 799, 800, 801], "save1": 655, "save2": 655, "savesomewher": 602, "savethi": 603, "saw": [631, 705, 773, 797], "say": [582, 599, 600, 603, 608, 651, 659, 666, 669, 671, 680, 695, 697, 699, 702, 706, 709, 713, 716, 726, 727, 734, 736, 739, 752, 756, 760, 761, 765, 772, 793, 795, 802], "sbase": [0, 2, 3, 4, 9], "sbyte": 729, "sc": [586, 636, 702, 722], "scaffold": 794, "scalabl": [585, 670, 743], "scalar": [22, 23, 123, 124, 208, 209, 375, 376, 488, 489, 577, 581, 582, 599, 651, 652, 666, 668, 675, 683, 702, 703, 706, 740, 741, 770, 771, 773, 780, 781, 782, 796, 797, 798, 799, 801], "scalar_nam": 702, "scalarbitsettrait": 777, "scalarevolut": [585, 669, 739], "scalaropt": 616, "scalartrait": 777, "scale": [577, 587, 599, 602, 637, 669, 695, 702, 739, 751, 757, 759], "scale2": 702, "scaling_governor": 587, "scan": [599, 602, 608, 609, 611, 668, 701, 706, 714, 717, 727, 759, 764, 766, 773, 781, 802], "scanf": 603, "scanner": 793, "scare": 659, "scari": 802, "scatter": [741, 750], "scc": [10, 11, 12, 13, 56, 80, 81, 82, 83, 84, 85, 86, 87, 89, 92, 94, 95, 147, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 181, 182, 184, 246, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 283, 284, 286, 307, 308, 312, 313, 319, 320, 321, 322, 323, 342, 347, 348, 349, 351, 352, 395, 398, 399, 402, 403, 404, 405, 413, 414, 417, 421, 508, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 525, 526, 529, 533, 658, 703, 716, 719, 773], "sccp": 703, "sccs": [658, 773], "scenario": [584, 586, 593, 597, 625, 627, 633, 645, 664, 671, 697, 729, 734, 741], "scene": 734, "scev": [659, 702, 706], "sched": [599, 611, 623, 761, 771], "sched_class": 623, "schedcov": 771, "schedq": 631, "schedreadwrit": 761, "schedrw": 761, "schedul": [603, 611, 623, 631, 671, 680, 689, 694, 697, 706, 711, 715, 734, 741, 755, 757, 759, 773], "schema": [608, 750, 777, 805], "scheme": [584, 596, 602, 615, 618, 619, 622, 659, 667, 668, 690, 698, 702, 717, 734, 737, 755, 771, 781, 782, 799], "scienc": [706, 738], "scientif": 703, "scipi": 764, "scm": 674, "scope": [585, 589, 593, 597, 602, 603, 630, 646, 650, 659, 661, 666, 668, 696, 697, 701, 704, 706, 708, 716, 720, 734, 739, 748, 751, 754, 755, 759, 761, 773, 777, 795, 797, 798, 799, 800, 801], "scopelin": [697, 702, 750, 801], "scott": 602, "scrape": 608, "scratch": [66, 101, 374, 426, 487, 539, 580, 581, 599, 702, 734, 771, 773], "scratch_en": 582, "scratch_load": 582, "scratch_load_dword": [0, 4, 9], "scratch_load_dwordx2": [0, 4, 9], "scratch_load_dwordx3": [0, 4, 9], "scratch_load_dwordx4": [0, 4, 9], "scratch_load_sbyt": [0, 4, 9], "scratch_load_sbyte_d16": [0, 4, 9], "scratch_load_sbyte_d16_hi": [0, 4, 9], "scratch_load_short_d16": [0, 4, 9], "scratch_load_short_d16_hi": [0, 4, 9], "scratch_load_sshort": [0, 4, 9], "scratch_load_ubyt": [0, 4, 9], "scratch_load_ubyte_d16": [0, 4, 9], "scratch_load_ubyte_d16_hi": [0, 4, 9], "scratch_load_ushort": [0, 4, 9], "scratch_memory_s": 582, "scratch_store_byt": [0, 4, 9], "scratch_store_byte_d16_hi": [0, 4, 9], "scratch_store_dword": [0, 4, 9], "scratch_store_dwordx2": [0, 4, 9], "scratch_store_dwordx3": [0, 4, 9], "scratch_store_dwordx4": [0, 4, 9], "scratch_store_short": [0, 4, 9], "scratch_store_short_d16_hi": [0, 4, 9], "scratchpad": [577, 582], "screen": [594, 744], "script": [584, 593, 594, 597, 604, 608, 638, 651, 654, 660, 664, 668, 671, 674, 687, 689, 694, 696, 697, 734, 735, 736, 739, 757, 759, 762, 764, 765, 766, 773], "scroll": 733, "scrub": 751, "scrutini": [659, 751], "scudo": [687, 712, 742], "scudo_default_opt": 747, "scudo_memtag_tun": 747, "scudo_opt": 747, "scudo_standalon": 747, "sd": [641, 689, 761], "sdata": [0, 3, 4, 9], "sdisel": 703, "sdiv": [599, 675], "sdk": [597, 636, 646, 652, 671, 690, 764], "sdnode": [593, 599, 734, 740, 750, 762, 771, 775], "sdnodeproperti": 760, "sdnpmemoperand": 760, "sdpatternoper": 760, "sdst": [0, 2, 3, 4, 9], "sdtc": 771, "sdvalu": [599, 771, 775], "sdwa": [578, 579], "se": [702, 739], "sea": 582, "seamless": [686, 704, 705], "sean": 734, "search": [593, 596, 597, 602, 603, 608, 622, 627, 634, 636, 644, 651, 659, 661, 663, 668, 671, 699, 701, 702, 703, 704, 717, 729, 732, 734, 735, 741, 750, 754, 755, 760, 761, 770, 771, 779, 795, 796, 797, 798, 799], "searchabl": [650, 759], "searchindex": 759, "sec": [637, 701, 702], "secidx": 663, "secnam": 663, "second": [17, 88, 118, 174, 203, 278, 327, 428, 541, 572, 577, 579, 580, 582, 589, 591, 596, 597, 598, 599, 602, 603, 608, 631, 646, 651, 655, 656, 660, 661, 663, 668, 669, 671, 673, 676, 694, 695, 697, 699, 702, 704, 706, 708, 709, 713, 714, 716, 722, 724, 726, 727, 729, 732, 734, 736, 749, 750, 751, 752, 753, 755, 756, 759, 760, 761, 764, 765, 771, 773, 776, 777, 781, 795, 796, 797, 798, 799, 800, 801, 802], "secondari": [596, 659, 661, 747, 753, 759], "secondcondit": 734, "secondlastinst": 771, "secondlastopc": 771, "secrel32": 663, "secrel_hi12": 663, "secrel_lo12": 663, "secret": [747, 751], "sectalign": 651, "section": [580, 581, 585, 586, 587, 588, 589, 595, 596, 597, 598, 599, 602, 603, 606, 608, 609, 611, 613, 622, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 644, 645, 646, 649, 651, 652, 655, 656, 659, 660, 661, 668, 669, 671, 675, 685, 690, 691, 694, 695, 696, 697, 701, 702, 707, 708, 710, 713, 714, 717, 720, 721, 729, 730, 732, 733, 734, 736, 743, 745, 748, 749, 750, 751, 755, 756, 759, 760, 761, 768, 770, 771, 772, 773, 774, 775, 779, 794, 796, 801, 802, 805], "section1": 634, "section2": 634, "section_nam": 702, "sectioncontr": 722, "sectioncontribentri": 722, "sectioncontribentry2": 722, "sectioncontributions": 722, "sectioncontrsubstreamvers": 722, "sectiondata": 805, "sectionlength": 722, "sectionmapentri": 722, "sectionmapentryflag": 722, "sectionmaphead": 722, "sectionmaps": 722, "sectionmemorymanag": [707, 717, 779, 780, 781, 782], "sectionnam": [589, 722], "sectionnumb": 805, "sectionordin": 701, "sectionrang": 701, "sectnam": [635, 651], "sector": 756, "sectvalu": 651, "secur": [596, 651, 670, 696, 732, 742, 747, 778, 796], "sed": [608, 671], "see": [1, 5, 6, 7, 8, 55, 65, 146, 245, 346, 370, 373, 482, 486, 577, 580, 581, 582, 583, 586, 587, 588, 589, 590, 591, 592, 593, 595, 597, 598, 599, 600, 601, 603, 605, 610, 613, 617, 619, 623, 626, 631, 638, 647, 648, 649, 650, 651, 652, 654, 655, 656, 659, 660, 661, 662, 664, 666, 667, 669, 671, 673, 674, 675, 676, 677, 679, 680, 681, 686, 688, 690, 691, 692, 693, 695, 696, 697, 701, 702, 703, 704, 706, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 722, 725, 726, 729, 730, 732, 733, 734, 735, 736, 738, 739, 741, 743, 744, 748, 750, 751, 752, 753, 755, 756, 759, 760, 761, 762, 764, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 778, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801, 802], "seed": [643, 704], "seek": [577, 659, 663, 669, 677, 732, 742, 776], "seekabl": 776, "seem": [577, 582, 585, 588, 593, 597, 599, 620, 651, 652, 659, 668, 669, 675, 695, 697, 713, 714, 722, 736, 738, 739, 748, 751, 771], "seen": [599, 602, 631, 637, 651, 659, 675, 702, 713, 714, 732, 734, 755, 771, 773, 781, 796, 798, 802], "seg": [701, 702], "segalign": 629, "segment": [632, 633, 634, 635, 640, 641, 642, 645, 687, 701, 702, 721, 722, 742, 750, 751, 753, 764, 776], "segment_selector_s": [577, 582], "segmentreg": 599, "segmentsrequestmap": 701, "segnam": [635, 651], "sel": 655, "seldom": 714, "select": [577, 580, 581, 582, 588, 597, 602, 609, 613, 617, 622, 623, 625, 631, 632, 635, 654, 659, 660, 661, 662, 663, 667, 668, 669, 671, 673, 674, 676, 678, 680, 681, 682, 683, 684, 687, 692, 697, 699, 701, 703, 707, 708, 715, 716, 732, 733, 734, 736, 741, 742, 751, 755, 759, 760, 762, 764, 767, 771, 773, 774, 775, 777, 799, 800], "select_isd_stor": 771, "selectaddrrr": 771, "selectcod": 771, "selectcodecommon": 775, "selectimpl": 678, "selectinst": 602, "selectiondag": [586, 675, 676, 677, 680, 681, 685, 732, 734, 750, 759], "selectiondagbuild": [583, 599, 681], "selectiondagdump": 583, "selectiondagisel": [759, 775], "selectiondagleg": 583, "selectiondagnod": 771, "selectionkind": 702, "selector": [577, 582, 599, 631, 650, 661, 671, 675, 678, 681, 685, 702, 722, 750, 759], "selecttarget": 781, "self": [577, 582, 589, 599, 603, 623, 656, 702, 714, 721, 722, 732, 733, 734, 746, 748, 761, 773, 796, 798], "selfexecutorprocesscontrol": [779, 780, 781, 782], "selp": 715, "selti": 702, "sema": [650, 759], "semant": [577, 579, 582, 586, 591, 599, 602, 633, 652, 661, 664, 668, 676, 703, 705, 706, 710, 718, 734, 740, 741, 750, 751, 759, 761, 762, 767, 772, 773, 777, 780, 795, 797], "seme": 706, "semi": [595, 598, 668, 774, 802], "semicolon": [597, 608, 671, 764, 794, 795, 796, 797, 798, 799, 800, 801], "semispac": 668, "semver": [577, 582], "send": [580, 586, 599, 609, 614, 621, 624, 631, 650, 654, 659, 666, 670, 688, 694, 704, 709, 717, 733, 736, 743, 744, 748, 752, 757, 766, 773, 795], "sendmsg": [55, 146, 245, 370, 482, 582], "sens": [585, 586, 597, 599, 602, 651, 659, 664, 669, 700, 702, 704, 706, 734, 736, 739, 750, 751, 755, 757, 761, 775, 795, 802], "sensibl": 734, "sensit": [585, 597, 603, 613, 620, 637, 702, 708, 748, 751, 761, 766, 773, 777], "sent": [580, 601, 609, 621, 631, 637, 659, 670, 694, 703, 717, 733, 755], "sentenc": 602, "sentinel": 589, "separ": [115, 202, 240, 304, 363, 471, 475, 576, 577, 578, 579, 580, 581, 582, 584, 586, 589, 590, 595, 597, 598, 599, 601, 602, 603, 608, 613, 617, 618, 623, 627, 629, 632, 633, 636, 637, 642, 646, 650, 651, 652, 654, 655, 658, 659, 667, 668, 669, 671, 680, 681, 683, 685, 687, 692, 693, 700, 701, 702, 704, 705, 706, 708, 709, 713, 715, 716, 717, 718, 726, 729, 734, 735, 736, 739, 745, 746, 747, 750, 751, 753, 755, 756, 757, 759, 760, 761, 764, 766, 767, 771, 773, 777, 794, 796], "separate_argu": 597, "separateremarksfil": 745, "separateremarksmeta": 745, "seq": [602, 676, 687, 805], "seq_cst": [582, 586, 702], "seq_load": 582, "seq_stor": 582, "sequenc": [20, 121, 206, 427, 540, 577, 580, 581, 586, 588, 599, 602, 603, 611, 613, 624, 631, 644, 650, 655, 656, 661, 663, 666, 668, 669, 677, 680, 701, 702, 704, 714, 719, 720, 721, 729, 732, 734, 736, 739, 741, 745, 750, 751, 753, 755, 759, 760, 770, 771, 773, 776, 794, 798, 799, 805], "sequencetrait": 777, "sequenti": [581, 582, 589, 599, 603, 631, 661, 676, 697, 702, 706, 736, 767], "sequential_fadd": 702, "sequential_fmul": 702, "sequentialtyp": 734, "serg": 748, "seri": [577, 582, 584, 589, 597, 599, 601, 618, 646, 659, 661, 670, 671, 696, 702, 708, 721, 726, 734, 739, 741, 757, 760, 761, 773, 780, 796, 803], "serial": [606, 623, 631, 650, 662, 671, 681, 708, 714, 720, 721, 727, 729, 730, 735, 742, 751, 759, 777], "serious": [659, 673, 694, 746, 751], "serv": [27, 28, 29, 30, 31, 34, 35, 36, 62, 127, 128, 129, 130, 131, 151, 212, 213, 214, 219, 220, 252, 336, 344, 360, 378, 379, 380, 436, 439, 440, 443, 444, 473, 491, 492, 493, 549, 552, 553, 556, 557, 577, 578, 588, 608, 631, 636, 655, 659, 660, 661, 669, 670, 702, 717, 727, 732, 734, 741, 746, 747, 750, 751, 753, 761, 766, 776], "server": [636, 673, 694, 733, 734, 736, 751, 764], "servic": [582, 585, 587, 664, 736, 747, 756], "sese": 741, "session": [657, 709, 717, 734, 752, 780], "set": [17, 66, 100, 101, 118, 203, 327, 354, 374, 425, 426, 428, 487, 538, 539, 541, 577, 580, 581, 584, 586, 587, 588, 589, 591, 593, 595, 597, 598, 599, 601, 602, 603, 604, 608, 609, 611, 613, 617, 623, 627, 631, 632, 633, 634, 637, 640, 641, 642, 644, 645, 646, 650, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 671, 673, 675, 676, 681, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 697, 699, 700, 701, 704, 705, 706, 707, 714, 715, 716, 719, 722, 724, 725, 726, 729, 730, 731, 733, 735, 736, 737, 739, 740, 742, 743, 744, 745, 747, 750, 751, 753, 755, 756, 757, 759, 760, 762, 764, 765, 766, 767, 768, 774, 775, 776, 777, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803], "setargstr": 651, "setbann": 734, "setbid": 589, "setbr": 623, "setcategori": 651, "setcc": [599, 734], "setcondcodeact": 771, "setconvertact": 771, "setcurrentdebugloc": 801, "setdagop": 761, "setdata": 602, "setdatalayout": [796, 797, 798, 799, 800, 801], "setdebugloc": 697, "setdescript": 651, "setexitcodemapp": 734, "setfoo": 702, "setgc": 668, "setgraphattr": 734, "setgraphcolor": 734, "sethi": 771, "sethiddenflag": 651, "setindexedloadact": 771, "setindexedstoreact": 771, "setinsertfencesforatom": 586, "setinsertpoint": [795, 796, 797, 798, 799, 800, 801], "setinternallinkag": 734, "setjmp": [702, 802], "setjmp_buf": 661, "setkind": 701, "setlazycompilefailureaddr": 717, "setloadextact": 771, "setloadxact": 771, "setmaxatomicsizeinbitssupport": 586, "setmcjitmemorymanag": 707, "setnam": [734, 795, 796, 797, 798, 799, 800, 801], "setnumcompilethread": 717, "seto": 751, "setobjectlinkinglayercr": 701, "setop": 761, "setoperationact": [586, 599, 771], "setp": 715, "setpreservesal": 773, "setpreservescfg": 773, "setrecordnam": 589, "setreg": 599, "setrequiresstructuredcfg": 771, "setsubprogram": 801, "settarget": 701, "settargettripl": 800, "setter": [661, 702, 750, 759, 780], "settl": 736, "settransform": 780, "settruncstoreact": 771, "setup": [582, 595, 663, 686, 692, 701, 704, 708, 734, 736, 750, 764, 771, 772, 779, 796, 802], "setup_token": 702, "setupinprocesslctmreentryviaepciu": [781, 782], "setupmachinefunct": 771, "setvector": 602, "setxyzzi": 602, "sevenkind": 702, "seventeen": 708, "sever": [577, 579, 581, 582, 585, 589, 593, 594, 597, 598, 599, 602, 603, 608, 613, 615, 623, 628, 636, 637, 651, 656, 659, 661, 662, 668, 670, 671, 683, 687, 697, 698, 702, 704, 705, 706, 708, 711, 714, 717, 720, 724, 727, 732, 734, 735, 741, 744, 746, 747, 748, 750, 751, 756, 759, 761, 764, 765, 766, 771, 773, 774, 778, 795, 797, 802, 803], "sex": 600, "sexist": 600, "sext": [53, 243, 317, 340, 368, 480, 697], "sextload": [762, 771], "sexual": 600, "sf": [671, 689, 693], "sge": 702, "sgi": 734, "sgn": 702, "sgpr": [49, 143, 239, 362, 474, 702], "sgpr0": 582, "sgpr1": 582, "sgpr105": 582, "sgpr2": 708, "sgpr29": 582, "sgpr30": 582, "sgpr32": 582, "sgpr33": 582, "sgpr34": 582, "sgpr4": 582, "sgpr63": 582, "sgpr64": 582, "sgpr_limit": 582, "sgpr_spill_count": 582, "sgprn": 582, "sgprs": 582, "sgprs_use": 582, "sgt": 702, "sh": [604, 651, 660, 671, 674, 687, 694, 696, 736], "sh_addralign": 582, "sh_entsiz": 663, "sh_hidden_private_base_vimid": 582, "sh_link": [633, 645, 663], "sha": 702, "sha1": 704, "shader": [49, 143, 239, 362, 474, 580, 599], "shader_funct": 582, "shader_subtyp": 582, "shadow": [702, 712, 739, 753, 755, 761, 771, 797, 798, 799, 800, 801], "shadowbyt": 753, "shadowcallstack": [589, 702], "shadowlist": 771, "shadowstackgc": 668, "shadowstackgclow": 668, "shall": [597, 651, 663, 702, 711, 748, 802], "shallow": 671, "shape": [680, 681, 694, 695, 702, 734, 750, 762, 778], "shapekind": 695, "shard": 608, "share": [577, 580, 581, 582, 583, 586, 589, 593, 595, 597, 599, 602, 604, 609, 611, 613, 625, 633, 634, 635, 652, 655, 659, 661, 663, 671, 675, 679, 685, 693, 696, 699, 701, 702, 704, 705, 706, 715, 717, 720, 732, 734, 735, 745, 747, 748, 750, 756, 760, 761, 762, 765, 766, 773, 776, 777, 779, 795, 798, 801], "shared_bas": 581, "shared_librari": 735, "shared_limit": 581, "shared_ptr": 781, "shared_vgpr_cnt": 582, "shared_vgpr_count": 582, "sharir": 741, "sharp": 659, "shayn": 748, "she": 688, "shelf": [717, 779, 780], "shell": [593, 597, 608, 651, 671, 673, 709, 752, 766, 801], "shf_alloc": [582, 633], "shf_exclud": [633, 663], "shf_execinstr": [582, 633], "shf_link_ord": [663, 702], "shf_merg": 633, "shf_string": 633, "shf_write": [582, 633], "shield": [587, 599, 747, 756], "shift": [580, 581, 582, 586, 589, 590, 599, 651, 662, 666, 676, 702, 703, 714, 732, 751, 761, 762, 776], "shiftinst": 602, "shim": 732, "shini": [772, 773], "ship": [584, 586, 596, 657, 668, 671, 687, 748, 755, 757, 802], "shirt": 600, "shl": [602, 676, 697, 714, 732, 761], "shlib": 671, "shlibext": 766, "shlq": 751, "shn_amdgpu_ld": 582, "shoe": 777, "shoot": 796, "short": [585, 588, 593, 599, 602, 608, 646, 650, 659, 664, 673, 702, 713, 715, 722, 734, 741, 743, 747, 750, 753, 755, 764, 771, 774, 777, 780, 797, 798, 799, 801], "short_enum": 702, "short_wchar": 702, "shortcom": 748, "shortcut": 582, "shorter": [637, 739], "shortest": [714, 761], "should": [102, 577, 580, 582, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 602, 603, 604, 608, 609, 611, 613, 617, 619, 623, 624, 631, 636, 637, 638, 646, 649, 650, 651, 652, 654, 655, 657, 659, 661, 662, 663, 666, 667, 668, 669, 670, 671, 673, 676, 677, 678, 679, 680, 681, 683, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 715, 716, 717, 718, 719, 721, 722, 724, 726, 729, 731, 732, 733, 734, 735, 736, 737, 739, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 771, 772, 773, 774, 775, 776, 777, 781, 794, 795, 796, 797, 799, 801], "shouldexecut": 734, "shouldexpandatomiccmpxchginir": 586, "shouldexpandatomicloadinir": 586, "shouldexpandatomicrmwinir": 586, "shouldexpandatomicstoreinir": 586, "shouldinsertfencesforatom": 586, "shouldn": [585, 601, 602, 651, 693, 702, 707, 713, 716, 766], "shouldprocess": 602, "shouldprocessattr": 602, "shouldsampl": 687, "show": [582, 591, 599, 603, 608, 612, 622, 623, 627, 630, 631, 632, 634, 636, 638, 646, 650, 651, 655, 657, 663, 669, 671, 686, 696, 702, 703, 706, 707, 708, 709, 715, 716, 733, 734, 736, 739, 744, 750, 751, 752, 753, 757, 759, 761, 764, 768, 770, 771, 772, 773, 775, 777, 779, 781, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804], "showc": 637, "showdebug": 657, "shown": [577, 580, 581, 582, 588, 608, 617, 622, 623, 637, 640, 641, 642, 646, 651, 655, 656, 658, 659, 673, 681, 695, 702, 708, 709, 713, 715, 733, 734, 750, 751, 753, 759, 760, 761, 762, 765, 768, 771, 777, 798], "shr": 602, "shrink": [599, 633, 736], "shrx": 751, "shrxq": 751, "shstrtab": 582, "sht_dynam": 582, "sht_hash": 582, "sht_llvm_linker_opt": 663, "sht_nobit": [582, 633], "sht_note": [582, 633], "sht_progbit": [582, 633], "sht_rela": 582, "sht_strtab": 582, "sht_symtab": 582, "shtest": 608, "shuffl": [582, 599, 602, 608, 676, 702, 717, 740, 741], "shuffle_vector": 599, "shufflebyt": 704, "shufflevector": [588, 599, 603, 676], "shut": [704, 771], "shutdown": 704, "si": [582, 602, 762], "sibl": 674, "side": [582, 585, 586, 597, 599, 601, 602, 631, 652, 657, 658, 668, 671, 676, 697, 702, 706, 708, 714, 715, 732, 734, 736, 745, 751, 755, 761, 766, 794, 795, 797, 798], "sidebar": [694, 752], "sideeffect": 706, "sidelength": 695, "sierra": 738, "siframelow": 582, "sift": 774, "sig": 671, "sig_atomic_t": 702, "sig_ign": 687, "sight": 799, "sigil": 708, "sign": [50, 58, 144, 241, 367, 396, 479, 509, 577, 579, 580, 581, 599, 600, 602, 609, 623, 651, 653, 663, 666, 669, 675, 676, 701, 702, 704, 705, 708, 718, 729, 734, 743, 748, 751, 761, 771, 802], "signal": [580, 586, 651, 653, 655, 657, 661, 665, 676, 687, 702, 704, 706], "signatur": [586, 588, 599, 615, 652, 655, 671, 702, 704, 725, 727, 734, 773, 795], "signature_invalid": 671, "signed": [577, 718], "signedcharact": 729, "signext": [589, 702], "signextimm": 599, "signifi": [676, 702, 718, 750], "signific": [61, 251, 372, 485, 577, 582, 585, 588, 589, 595, 597, 601, 602, 615, 631, 640, 641, 659, 661, 662, 665, 668, 671, 676, 681, 687, 692, 702, 704, 705, 712, 714, 732, 734, 741, 748, 750, 751, 759, 760, 761, 764, 773, 776, 794, 797, 798, 803], "significand": 702, "sigplan": [599, 668], "sigsegv": 687, "sigusr1": 704, "sil": 762, "silenc": 691, "silent": [601, 633, 644, 645, 688, 702], "silli": [585, 602, 664], "simd": [49, 143, 239, 362, 474, 577, 582, 609, 611, 702, 732, 740, 741, 767, 770], "simd_benchmark": 738, "similar": [577, 582, 585, 586, 588, 589, 591, 593, 594, 598, 599, 601, 602, 603, 613, 616, 623, 631, 636, 651, 652, 655, 658, 659, 661, 663, 667, 668, 669, 671, 674, 675, 676, 677, 678, 680, 681, 687, 689, 691, 692, 695, 696, 697, 702, 704, 708, 711, 712, 714, 715, 716, 717, 720, 722, 729, 732, 734, 735, 736, 739, 741, 743, 747, 751, 752, 756, 757, 759, 761, 765, 766, 768, 770, 771, 773, 774, 775, 776, 777, 778, 793, 795, 796, 797, 798, 800, 801], "simm13": 771, "simm21": [58, 396, 509], "simm32": [4, 9], "simpl": [577, 584, 585, 586, 588, 589, 590, 593, 597, 598, 599, 603, 608, 609, 611, 631, 632, 650, 651, 656, 658, 659, 660, 662, 663, 668, 669, 671, 673, 674, 678, 679, 680, 692, 695, 697, 701, 704, 706, 710, 713, 714, 717, 736, 750, 751, 755, 756, 757, 759, 760, 765, 766, 770, 771, 773, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804], "simplecompil": [717, 779, 781], "simpleloopunrol": 767, "simpleproject": 597, "simpler": [577, 599, 662, 702, 706, 732, 734, 736, 750, 751, 761, 779, 798, 799], "simplest": [577, 584, 595, 599, 651, 658, 673, 704, 708, 736, 751, 771, 777, 780, 794, 795], "simpletyp": 805, "simpletypekind": 729, "simpletypemod": 729, "simplevalu": 761, "simpli": [577, 582, 585, 593, 596, 599, 602, 603, 618, 636, 646, 649, 651, 654, 655, 659, 661, 664, 667, 669, 671, 676, 686, 687, 691, 693, 697, 702, 708, 710, 713, 716, 717, 720, 722, 732, 734, 735, 736, 750, 751, 752, 753, 756, 761, 765, 766, 771, 772, 773, 794, 795, 796], "simplic": [592, 668, 675, 734, 737, 753, 793, 795], "simplif": [593, 651, 675, 732, 773], "simplifi": [577, 582, 584, 594, 599, 659, 668, 673, 679, 692, 696, 697, 702, 717, 719, 733, 751, 755, 761, 765, 777, 779, 796, 797, 798, 799, 801, 805], "simplify_typ": 695, "simplifycfg": [604, 799], "simplifydemandedbit": 775, "simt": [577, 582], "simul": [588, 599, 631, 659, 685, 701, 702, 764], "simultan": [577, 586, 588, 606, 633, 645, 671, 687, 704, 734, 748, 766, 770], "sin": [585, 652, 770, 777, 779, 793, 794, 795, 796], "sinc": [577, 582, 583, 585, 589, 590, 597, 599, 601, 602, 606, 613, 631, 636, 637, 652, 655, 658, 659, 661, 664, 668, 669, 671, 673, 677, 680, 689, 691, 693, 695, 696, 699, 701, 702, 704, 706, 707, 709, 713, 714, 715, 716, 717, 718, 720, 722, 726, 730, 734, 736, 744, 747, 748, 749, 750, 753, 755, 756, 762, 771, 772, 773, 776, 777, 793, 794, 795, 796, 797, 798, 799, 801], "sine": [702, 771], "sinf": 652, "singl": [577, 581, 584, 586, 588, 589, 593, 595, 597, 598, 599, 601, 603, 608, 613, 617, 618, 622, 623, 628, 629, 631, 633, 636, 637, 641, 645, 646, 651, 652, 656, 658, 659, 660, 661, 662, 668, 669, 671, 674, 675, 676, 680, 681, 687, 691, 697, 698, 700, 701, 703, 704, 706, 708, 712, 713, 714, 715, 717, 719, 720, 721, 722, 725, 726, 729, 730, 734, 735, 737, 741, 744, 750, 754, 755, 760, 761, 764, 766, 767, 770, 771, 773, 774, 775, 777, 793, 795, 796, 799, 801, 802], "singleimpl": 702, "singleimplnam": 702, "singlesour": 764, "singlesourc": [738, 764], "singlethread": [582, 702], "singleton": [577, 760], "singular": [602, 702, 734], "sink": [585, 651, 741, 751], "sint": 702, "sit": 780, "site": [577, 582, 585, 598, 608, 661, 663, 668, 673, 700, 701, 708, 713, 732, 738, 743, 752, 753, 755, 766, 768], "sitofp": 795, "situat": [577, 586, 595, 599, 601, 602, 631, 651, 652, 659, 661, 669, 680, 692, 695, 697, 701, 702, 711, 714, 732, 734, 746, 747, 757, 770, 771, 773, 781, 796], "six": [586, 599, 655, 748, 759, 779], "sixkind": 702, "sixth": [655, 675, 771], "sizabl": 734, "size": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 246, 247, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 312, 313, 314, 315, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 474, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 580, 582, 585, 586, 587, 588, 589, 593, 597, 600, 602, 604, 606, 607, 608, 609, 613, 615, 617, 622, 623, 631, 632, 633, 636, 637, 640, 641, 643, 646, 651, 656, 657, 662, 663, 666, 668, 669, 675, 676, 680, 681, 687, 697, 701, 702, 703, 704, 705, 708, 712, 714, 715, 717, 718, 721, 722, 724, 726, 729, 731, 732, 738, 745, 747, 750, 751, 753, 755, 757, 760, 761, 762, 764, 766, 767, 768, 770, 771, 773, 775, 776, 777, 780, 794, 795, 796, 797, 798, 799, 800, 801, 802], "size1": 702, "size2": 702, "size3": 702, "size_t": [586, 668, 701, 704, 705, 717, 734, 777], "sizem1": 702, "sizem1bitwidth": 702, "sizeof": [636, 655, 664, 702, 715, 724, 726, 729, 734, 751, 755], "sizeofimm": 771, "sjlj": 690, "sjljehprepar": 661, "sk_buff": 599, "sk_circl": 695, "sk_lastsquar": 695, "sk_otherspecialsquar": 695, "sk_somewhatspecialsquar": 695, "sk_specialsquar": 695, "sk_squar": 695, "sketch": 655, "skip": [577, 588, 589, 598, 599, 602, 603, 617, 623, 634, 637, 650, 652, 655, 656, 668, 674, 678, 692, 697, 702, 706, 712, 734, 736, 750, 751, 755, 764, 767, 770, 771, 772, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803], "skipbasicblock": 719, "skipfunct": 719, "skiploop": 719, "skipmodul": 719, "skipscc": 719, "skylak": 623, "sl": 577, "slab": 701, "slash": 702, "slc": [0, 2, 3, 4, 8, 9, 582], "sle": 702, "sleb128": 577, "sled": 774, "slh": 751, "slice": [629, 635, 734, 760, 761], "slide": [600, 652, 734], "slight": [584, 588, 641, 642, 652, 658, 663, 671, 691, 702, 706, 712, 751, 755, 761, 773, 796, 798, 799], "sln": 673, "slot": [577, 582, 599, 615, 631, 655, 661, 666, 687, 700, 702, 749, 753, 755, 771, 799], "slow": [594, 595, 609, 671, 681, 702, 704, 731, 734, 773], "slow_path": 702, "slowdown": [687, 704], "slower": [599, 602, 622, 652, 661, 664, 666, 668, 702, 714, 734, 747, 751], "slowest": 608, "slowli": [659, 671, 702, 717], "slp": [703, 741], "slt": [702, 706], "sm": [636, 675, 715], "sm_20": [599, 715], "sm_21": 599, "sm_30": [599, 652], "sm_35": [599, 652], "sm_xx": 652, "small": [581, 589, 593, 596, 598, 599, 601, 602, 604, 611, 615, 623, 631, 637, 651, 654, 655, 656, 659, 666, 668, 669, 675, 680, 681, 687, 695, 701, 702, 704, 714, 715, 727, 734, 737, 738, 747, 750, 751, 753, 756, 757, 766, 770, 773, 778, 781, 801, 803], "smallconst": 753, "smaller": [577, 582, 586, 594, 599, 601, 602, 617, 623, 626, 631, 637, 659, 666, 668, 676, 680, 702, 714, 719, 732, 733, 734, 747, 761, 770], "smallest": [580, 603, 696, 702, 706], "smallsetvector": 734, "smallvector": [602, 801], "smallvectorhead": 734, "smallvectorimpl": [734, 760, 775], "smart": [602, 702, 721], "smarter": 651, "smartphon": 711, "smash": [702, 751], "smax": 581, "sme": 743, "smell": 734, "smith": [602, 748], "smithwa": 738, "smloc": 760, "smooshlab": 670, "smooth": 598, "smovq": 599, "smp": [586, 773], "smrang": 760, "smt": 587, "smul_lohi": 599, "sn": [636, 675], "sn_map": 714, "sn_mapl": 714, "sn_mapr": 714, "snan": 702, "snapshot": [585, 660, 704], "sneak": 602, "snippet": [659, 668, 697, 734, 773], "snmalloc": 597, "snork": 761, "so": [577, 579, 580, 582, 584, 585, 586, 587, 588, 592, 593, 595, 597, 599, 600, 601, 602, 603, 604, 608, 609, 617, 623, 629, 631, 636, 649, 651, 652, 654, 655, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 674, 675, 678, 679, 680, 681, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 706, 708, 709, 710, 711, 713, 714, 715, 716, 717, 719, 722, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 741, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 771, 772, 773, 774, 775, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "social": [600, 778], "socket": [701, 717], "soffset": [0, 2, 3, 4, 8, 9], "soft": [611, 631, 659, 750], "softer": 659, "softfp": 692, "softwar": [577, 582, 598, 602, 611, 653, 659, 660, 668, 691, 692, 702, 703, 721, 739, 751, 766, 771, 773, 795, 802, 803], "solari": 671, "solaris2": 773, "sole": [659, 681, 702, 713, 734], "solicit": [601, 703], "solid": 691, "solut": [577, 586, 588, 597, 599, 651, 655, 660, 671, 673, 702, 717, 734, 736, 750, 757, 773, 780, 799, 802], "solution_1": 702, "solution_2": 702, "solv": [585, 599, 659, 669, 681, 685, 694, 697, 734, 736, 750, 798, 799, 802], "solver": [597, 599], "some": [577, 580, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 608, 609, 612, 613, 617, 622, 623, 625, 631, 632, 634, 636, 650, 651, 652, 653, 654, 655, 658, 659, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 673, 675, 676, 677, 678, 680, 681, 683, 685, 687, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 711, 713, 714, 716, 717, 718, 721, 722, 727, 730, 731, 732, 733, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 773, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "some_bss": 644, "some_crash_test": 736, "some_int": 761, "some_op": 708, "somebodi": 601, "someclass": 761, "somedag": 761, "somefancyaa": 773, "somefunc": 602, "somefunc1": 734, "somefunc2": 734, "somehow": [655, 702, 722, 734, 773], "somelocalpath": 704, "somemap": 602, "somemulticlass": 761, "someon": [592, 599, 600, 601, 636, 654, 659, 660, 662, 666, 668, 677, 709, 736, 746, 748, 752], "someone_els": 601, "somerec": 760, "sometest": 765, "someth": [582, 584, 585, 599, 601, 602, 603, 632, 651, 655, 659, 662, 671, 673, 674, 680, 681, 691, 695, 696, 699, 702, 704, 706, 709, 713, 714, 716, 717, 727, 732, 733, 734, 736, 747, 751, 752, 755, 756, 759, 771, 775, 777, 794, 795, 796, 797, 798, 800, 801, 802, 803], "someti": 702, "sometim": [589, 593, 594, 599, 601, 602, 603, 631, 651, 652, 659, 669, 671, 680, 695, 702, 704, 714, 716, 726, 732, 734, 736, 750, 751, 759, 760, 761, 771, 777], "somewhat": [585, 586, 602, 655, 659, 660, 681, 702, 734, 736, 739, 751, 755, 761, 765, 769, 794, 798], "somewhatspecialsquar": 695, "somewher": [603, 661, 695, 702, 718, 736, 765, 766, 773, 795, 798], "soni": 748, "sonnenberg": 736, "soon": [631, 659, 674, 701, 704, 705, 717, 744, 757, 773, 780, 794, 797], "sooner": 688, "sophist": [599, 668, 702, 709, 752, 765, 773], "sort": [586, 597, 606, 632, 651, 652, 656, 659, 664, 696, 701, 702, 718, 729, 736, 738, 750, 759, 760, 761, 774, 775, 794, 796, 797, 799, 802], "sortord": 775, "sought": [577, 702], "sound": [592, 704, 711], "sourc": [88, 174, 278, 572, 578, 579, 580, 581, 584, 585, 587, 593, 594, 595, 598, 599, 603, 604, 606, 607, 608, 609, 612, 616, 617, 619, 631, 634, 636, 649, 650, 651, 652, 654, 659, 660, 661, 663, 666, 668, 669, 670, 673, 676, 687, 692, 693, 694, 696, 697, 701, 703, 704, 705, 706, 713, 714, 715, 717, 718, 722, 730, 733, 734, 736, 737, 739, 742, 744, 745, 748, 751, 752, 753, 755, 756, 759, 760, 762, 764, 765, 766, 769, 771, 772, 773, 774, 775, 777, 778, 781, 796, 800, 802], "source0": 773, "source_filenam": 702, "source_i386": 646, "source_x86_64": 646, "sourcebas": [654, 672], "sourcebasedcodecoverag": 656, "sourcecontrolbaserevis": 733, "sourcefil": 617, "sourcefilecount": 722, "sourcefilenameindex": 722, "sourceforg": 738, "sourceinfos": 722, "sourceloc": 801, "sourcewar": [686, 704], "southern": 582, "sp": [582, 599, 634, 663, 702, 708, 710, 712, 749, 762, 771, 801], "sp3": [580, 581], "space": [115, 202, 304, 471, 576, 578, 579, 587, 589, 597, 600, 603, 609, 617, 623, 632, 636, 652, 659, 661, 668, 670, 671, 673, 675, 676, 699, 700, 701, 702, 707, 711, 712, 714, 718, 727, 734, 735, 736, 737, 746, 749, 750, 751, 753, 755, 756, 759, 761, 771, 773, 776, 777, 796, 799, 802], "space0": 702, "space1": 702, "space2": 702, "spadini": 732, "spaghetti": 803, "spam": 757, "span": 773, "spanish": 747, "sparc": [586, 599, 633, 671, 702, 739, 761, 771, 773], "sparcasmprint": [599, 771], "sparccallingconv": 771, "sparcel": 633, "sparcgenregisterinfo": 771, "sparcgensubtarget": 771, "sparcinstrformat": 771, "sparcinstrinfo": 771, "sparciseldagtodag": 771, "sparcisellow": 771, "sparclet": 771, "sparclit": 771, "sparclite86x": 771, "sparcreg": 771, "sparcregisterinfo": 771, "sparcsubtarget": 771, "sparctargetasminfo": 771, "sparctargetlow": 771, "sparctargetmachin": 771, "sparcv8": [586, 702], "sparcv9": 702, "spare": [602, 666], "spars": [599, 637, 662, 671, 703, 719, 734, 736, 776], "sparsecheckout": 736, "sparser": 776, "spawn": [704, 717], "spcc": 771, "spdx": [602, 779, 780, 781, 782], "spe": 653, "speak": [598, 600, 652, 746, 755, 797, 798], "speaker": 711, "spec": [652, 696, 702, 708, 709, 734, 750, 751, 764, 777], "spec95": 765, "speccpu2000": [764, 765], "speccpu2006": 765, "special": [20, 578, 580, 581, 582, 586, 588, 589, 598, 599, 602, 603, 608, 631, 632, 633, 645, 651, 652, 656, 657, 658, 659, 660, 661, 663, 665, 668, 669, 671, 678, 681, 690, 693, 696, 701, 704, 708, 712, 713, 714, 716, 717, 720, 721, 722, 732, 734, 736, 737, 745, 748, 751, 753, 755, 756, 759, 761, 762, 766, 770, 771, 773, 777, 778, 799, 800, 801, 802, 803], "specialfp": 761, "specialsquar": 695, "specialti": 734, "specif": [1, 5, 6, 7, 8, 55, 121, 146, 206, 245, 370, 427, 482, 540, 577, 579, 582, 584, 586, 587, 589, 592, 594, 595, 601, 602, 603, 608, 611, 617, 622, 634, 640, 651, 652, 653, 656, 659, 661, 662, 664, 667, 668, 669, 670, 671, 673, 675, 678, 680, 681, 682, 683, 685, 690, 691, 693, 694, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 713, 715, 716, 717, 718, 719, 722, 730, 732, 734, 737, 740, 742, 743, 744, 746, 747, 748, 751, 753, 755, 757, 759, 760, 761, 762, 765, 770, 771, 773, 774, 776, 777, 780, 793, 794, 796, 798, 800, 803], "specifi": [14, 17, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 55, 58, 59, 61, 62, 64, 65, 66, 67, 88, 98, 101, 115, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 149, 151, 153, 154, 174, 187, 202, 203, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 245, 249, 251, 252, 254, 255, 278, 289, 304, 324, 327, 336, 337, 343, 344, 346, 353, 360, 362, 363, 367, 370, 371, 372, 373, 374, 378, 379, 380, 396, 412, 422, 426, 428, 436, 439, 440, 441, 442, 443, 444, 447, 448, 449, 459, 460, 461, 462, 463, 464, 471, 473, 474, 475, 479, 482, 483, 485, 486, 487, 491, 492, 493, 509, 524, 535, 539, 541, 549, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 576, 577, 578, 579, 580, 581, 582, 583, 586, 589, 591, 592, 593, 595, 597, 598, 599, 602, 603, 604, 606, 608, 609, 611, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 625, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 649, 650, 652, 655, 656, 660, 661, 663, 664, 667, 669, 671, 673, 676, 687, 690, 696, 697, 701, 704, 706, 708, 709, 715, 717, 718, 719, 722, 726, 727, 730, 732, 734, 735, 737, 741, 745, 747, 750, 753, 755, 756, 759, 760, 761, 762, 764, 765, 766, 767, 770, 771, 772, 774, 775, 776, 777, 794, 795, 797, 798, 799, 800, 801, 802], "spectr": [702, 742], "spectre11": 751, "spectreattack": 751, "specul": [585, 586, 631, 652, 661, 666, 697, 702, 717, 719, 742, 755], "speculat": [589, 702], "speculative_load_harden": [589, 702], "speculativejit": 717, "speed": [595, 597, 602, 623, 651, 652, 671, 704, 706, 713, 766, 799], "speedup": 751, "spell": [602, 650, 659, 759, 766], "spencer": 756, "spend": [608, 770, 775], "spent": [631, 775], "spflag": 750, "spflagdefinit": 801, "spgo": 607, "sphinx": [597, 670, 671, 709], "sphinx_execut": 597, "sphinx_output_html": 597, "sphinx_output_man": 597, "sphinx_warnings_as_error": 597, "sphinxquickstarttempl": 752, "spi": 582, "spi_shader_user_data_ps_0": 582, "spi_shader_user_data_ps_1": 582, "spi_shader_user_data_ps_5": 582, "spiffygrep": 651, "spiffysh": 651, "spill": [577, 596, 599, 611, 655, 677, 702, 750, 751, 753, 755, 771], "spill_threshold": 582, "spillalign": 771, "spiller": [599, 609, 611], "spillsiz": 771, "spilltabl": 582, "spir": 650, "spirit": [600, 734, 748], "spirv": 650, "spisd": 771, "spl": 762, "splat": [599, 703, 717], "splice": 734, "split": [577, 582, 586, 588, 593, 599, 618, 633, 636, 646, 651, 652, 655, 659, 662, 669, 675, 681, 701, 702, 704, 708, 713, 714, 717, 726, 732, 735, 736, 749, 761, 766, 771], "split64": 702, "splitblock": 701, "splitdebugfilenam": 702, "sponsor": 736, "sponsorship": 659, "spot": [701, 702, 704, 732], "spotti": 702, "spread": [702, 732], "spreadsheet": 775, "springer": 652, "sprinkl": 734, "spurious": [702, 766], "spus": 771, "sq": 631, "sq_rsrc_img_1d": 580, "sq_rsrc_img_1d_array": 580, "sq_rsrc_img_2d": 580, "sq_rsrc_img_2d_array": 580, "sq_rsrc_img_2d_msaa": 580, "sq_rsrc_img_2d_msaa_array": 580, "sq_rsrc_img_3d": 580, "sq_rsrc_img_cub": 580, "sqlite": 704, "sqrt": [770, 777], "squar": [659, 695, 702, 777], "squash": [588, 736], "squeue": 631, "sr": [641, 701], "sra": 761, "sramecc": 582, "srand": 704, "src": [0, 2, 3, 4, 8, 9, 597, 599, 616, 661, 690, 694, 702, 722, 730, 734, 735, 744, 765, 771, 796], "src0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 88, 174, 240, 278, 363, 475, 572, 580, 581], "src0_sel": [0, 3, 4, 7, 8, 9, 582], "src1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 88, 174, 240, 278, 363, 475, 572, 578, 580, 599, 761, 762], "src1_sel": [0, 3, 4, 7, 8, 9, 582], "src2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 88, 174, 240, 278, 363, 475, 572, 599, 761, 762], "src3": [0, 2, 3, 4, 8, 9, 88, 174, 278, 572], "src_base": 755, "src_offset": 755, "src_private_bas": 582, "src_reg": 599, "src_root": 671, "src_shared_bas": 582, "srcarglist": 702, "srckey": 701, "srcloc": 702, "srcvalu": 755, "srd": 582, "srem": 599, "sret": [582, 589, 702, 743], "srgps": 582, "srl": [577, 761], "sroa": [586, 652, 666, 703, 719, 799], "srsrc": [0, 2, 3, 4, 8, 9], "ss": [599, 619, 761], "ssa": [661, 666, 668, 676, 703, 713, 734, 750, 755, 771, 773, 795, 797, 798, 799, 802, 803], "ssamp": [0, 2, 3, 4, 9], "ssca2v2": 738, "sscabmk": 738, "sse": [599, 698, 702, 740, 771, 800], "sse2": [702, 766], "sse4": 770, "sse41": 603, "ssecal": 771, "ssh": 764, "ssize_t": 602, "ssp": [589, 702, 750], "sspreq": [589, 702], "sspstrong": [589, 702], "ssrc": [0, 2, 3, 4, 9], "ssrc0": [0, 2, 3, 4, 9], "ssrc1": [0, 2, 3, 4, 9], "ssrc2": [0, 2, 3, 4, 9], "sstream": 602, "st": [619, 641, 702, 715, 771], "st0": [761, 762, 771], "st1": [588, 599, 762, 771], "st17basic_string_viewicst11char_traitsice": 619, "st2": 762, "st3": 762, "st3__1": 619, "st4": 762, "st5": 762, "st6": 762, "st7": 762, "st7__cxx11": 619, "st_valu": 582, "stab": 750, "stabil": [659, 736, 737], "stabl": [582, 602, 620, 623, 659, 694, 697, 702, 705, 719, 734, 757, 771], "stack": [585, 596, 602, 609, 632, 634, 640, 641, 642, 655, 661, 666, 671, 676, 687, 690, 700, 703, 708, 710, 713, 717, 734, 742, 743, 745, 750, 769, 771, 773, 774, 776, 777, 779, 781, 799, 801, 803], "stack_end": 657, "stack_frame_size_in_byt": 582, "stack_loc": 599, "stack_siz": 609, "stackar": 668, "stackentri": 668, "stackframes": 668, "stackgrowsdown": 771, "stackmap": [640, 641, 668, 702], "stackoffset": 668, "stackprotectorcheck": 702, "stackrestor": 700, "stacksafeti": [702, 732], "stacksav": 700, "stacksiz": 745, "stacksizessect": 599, "staff": 746, "stage": [586, 595, 597, 599, 604, 617, 651, 652, 659, 660, 688, 691, 694, 701, 702, 704, 705, 714, 715, 733, 737, 740, 741, 744, 748, 754, 771, 775, 778, 794], "stage1": [584, 660, 691], "stage2": [584, 595, 597, 660, 691], "stage3": 584, "stageselectioncat": 651, "stale": [582, 750], "stall": [631, 751], "stamp": 727, "stanc": 602, "stand": [599, 601, 602, 652, 659, 690, 702, 722, 734, 766, 773, 780, 781, 782, 794], "standalon": [599, 608, 667, 690, 692, 736, 745, 747, 801, 802], "standalone_test": 608, "standard": [20, 581, 582, 584, 585, 586, 588, 597, 599, 603, 604, 608, 609, 611, 613, 614, 615, 618, 621, 622, 623, 624, 628, 630, 631, 632, 633, 634, 636, 637, 640, 641, 642, 644, 645, 646, 649, 650, 651, 653, 654, 659, 661, 663, 664, 665, 666, 668, 670, 673, 676, 678, 691, 695, 701, 705, 708, 715, 717, 732, 740, 747, 752, 755, 759, 760, 761, 762, 766, 770, 771, 773, 776, 780, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "standpoint": 734, "star": 738, "start": [18, 119, 204, 222, 234, 236, 423, 536, 577, 582, 584, 585, 589, 593, 595, 602, 603, 604, 608, 617, 619, 631, 633, 634, 635, 636, 637, 645, 646, 654, 655, 656, 657, 659, 660, 662, 663, 664, 666, 669, 670, 674, 675, 676, 680, 681, 688, 692, 693, 694, 697, 701, 708, 709, 712, 713, 714, 715, 717, 718, 720, 732, 733, 734, 736, 737, 739, 744, 747, 748, 750, 751, 752, 755, 759, 760, 761, 769, 770, 771, 774, 775, 776, 777, 778, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804], "start_valu": 702, "starter": [711, 739], "startexpr": [797, 798, 799, 800, 801], "startfilenam": 646, "startlin": 646, "starttim": 760, "startup": [608, 671, 702, 715, 717, 731, 780, 781], "startval": [797, 798, 799, 800, 801], "stash": 695, "stat": [585, 587, 593, 609, 611, 631, 649, 650, 678, 756, 764, 765, 773], "state": [580, 581, 585, 586, 588, 592, 599, 601, 602, 631, 650, 651, 655, 659, 660, 661, 665, 668, 680, 681, 685, 692, 694, 697, 701, 702, 704, 708, 709, 713, 716, 717, 724, 732, 733, 734, 736, 739, 747, 748, 750, 752, 753, 755, 757, 770, 773, 776, 777, 780, 794, 801], "stateless": [586, 716, 773], "statement": [596, 598, 631, 650, 652, 656, 658, 659, 661, 662, 669, 702, 703, 706, 732, 734, 746, 750, 757, 759, 760, 770, 771, 776, 795, 797, 799, 801, 803], "statepoint": 755, "statepoint_token": 702, "static": [577, 582, 585, 586, 587, 593, 595, 596, 597, 599, 604, 606, 607, 611, 627, 631, 650, 651, 655, 662, 664, 666, 668, 669, 671, 683, 687, 690, 693, 695, 696, 700, 701, 702, 703, 704, 705, 706, 707, 712, 714, 717, 734, 735, 747, 750, 751, 755, 759, 760, 761, 768, 771, 772, 773, 774, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803], "static_cast": [799, 800, 801], "static_librari": 692, "statist": [585, 587, 606, 607, 609, 611, 615, 617, 649, 650, 656, 704, 735, 745, 748, 764, 765, 774], "status": [49, 143, 239, 362, 474, 580, 582, 592, 594, 597, 600, 602, 629, 657, 659, 684, 688, 702, 724, 743, 753, 757, 769], "statuscheck": 736, "stay": [655, 670, 705, 714, 726, 777], "stb_local": 702, "std": [619, 634, 649, 651, 661, 664, 680, 687, 695, 701, 714, 715, 716, 717, 729, 738, 747, 751, 759, 760, 764, 770, 771, 775, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801], "stdarg": 702, "stdcall": 599, "stddef": 704, "stderr": [602, 603, 604, 704, 719, 734, 766, 772, 794, 795, 796, 797, 798, 799, 800, 801], "stdin": [603, 617, 623, 646, 750, 766, 801], "stdint": 704, "stdio": [671, 673, 686, 690, 701, 705, 756], "stdlib": [597, 671], "stdlibc": 597, "stdout": [608, 617, 619, 622, 623, 673, 702, 704, 766, 805], "steadi": [665, 747], "steensgaard": 585, "steer": 659, "steinberg": 738, "stellard": 694, "stem": [652, 734], "step": [577, 581, 584, 585, 593, 595, 597, 599, 601, 652, 655, 657, 658, 659, 660, 661, 662, 668, 669, 671, 673, 674, 676, 681, 685, 690, 691, 692, 693, 695, 697, 699, 701, 704, 705, 706, 714, 715, 732, 734, 739, 741, 744, 750, 760, 761, 765, 768, 769, 773, 777, 795, 796, 797, 798, 799, 800, 801, 804], "stepexpr": [797, 798, 799, 800, 801], "stepval": [797, 798, 799, 800, 801], "stepwithcompactencod": 661, "steve": 748, "sti": 762, "stick": [593, 689, 711, 734, 736], "sticki": 702, "still": [577, 580, 582, 588, 592, 593, 594, 596, 599, 602, 603, 608, 617, 631, 633, 645, 651, 652, 655, 656, 659, 661, 664, 668, 671, 673, 675, 677, 679, 680, 681, 685, 686, 687, 692, 693, 695, 696, 697, 700, 701, 702, 704, 706, 707, 713, 714, 716, 717, 719, 731, 732, 733, 734, 736, 737, 738, 743, 746, 747, 748, 750, 751, 753, 755, 756, 757, 761, 765, 768, 770, 772, 773, 777, 796, 797, 798, 799, 802], "still_poison": 702, "stingi": 734, "stitch": 726, "stkmaprecord": [753, 755], "stksizerecord": 753, "stl": [602, 664, 671, 704, 732, 734, 777], "stlextra": [795, 796, 797, 798, 799, 800, 801], "stm": 702, "stmt": [650, 767], "stn_undef": 582, "stoney": 582, "stop": [597, 600, 602, 608, 620, 634, 636, 650, 655, 657, 659, 661, 662, 668, 681, 694, 701, 702, 704, 706, 708, 713, 750, 751, 773, 774, 776, 794], "stopgap": 734, "stopiter": 655, "stopper": 744, "storag": [577, 582, 587, 589, 599, 655, 668, 671, 701, 712, 715, 750], "storageclass": 805, "store": [32, 33, 41, 132, 137, 215, 216, 217, 218, 221, 222, 231, 234, 236, 441, 442, 449, 554, 555, 563, 577, 580, 582, 585, 586, 588, 589, 590, 597, 598, 603, 608, 617, 651, 655, 656, 658, 660, 661, 663, 665, 668, 669, 671, 675, 676, 680, 683, 685, 690, 697, 698, 700, 703, 704, 707, 708, 713, 714, 715, 716, 717, 718, 722, 726, 734, 735, 736, 740, 741, 745, 747, 749, 750, 753, 754, 755, 760, 761, 765, 768, 771, 779, 780, 793, 794, 799, 800, 801], "storemerg": 655, "storeregtoaddr": 771, "storeregtostackslot": [599, 771], "storesdnod": 771, "stori": [673, 750], "str": [588, 622, 651, 656, 702, 715, 734, 759, 760, 777, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801, 805], "str1": 761, "str2": 761, "str_offset": 750, "straight": [585, 599, 623, 652, 698, 714, 734, 755, 756, 757, 794], "straightforward": [588, 599, 664, 695, 701, 734, 736, 737, 747, 750, 761, 771, 773, 780, 793, 795, 796, 797, 798, 799], "strang": [588, 799], "strategi": [586, 594, 599, 651, 655, 712, 734, 736, 755, 757, 799], "stray": 766, "strconcat": [761, 771], "stream": [55, 146, 245, 370, 482, 577, 581, 582, 589, 599, 602, 603, 604, 606, 613, 614, 618, 621, 622, 624, 628, 632, 633, 634, 641, 642, 644, 645, 646, 649, 656, 671, 701, 702, 704, 721, 734, 738, 745, 750, 751, 770, 771, 773, 776, 777, 794], "streamblock": 726, "streamclust": 738, "streamdirectori": 726, "streamer": 599, "streamlin": 594, "streamoutt": 582, "streamsiz": 726, "strength": [586, 599, 600, 651, 666, 702, 734, 778, 803], "strengthen": 631, "stress": [602, 607, 667, 706], "strex": 586, "strict": [55, 146, 245, 370, 482, 583, 586, 588, 603, 659, 661, 666, 671, 675, 702, 704, 706, 714, 715, 717, 734, 750, 755, 756, 762, 795, 797, 800], "strict_": 583, "strict_fadd": 583, "strict_fp_round": 583, "stricter": [586, 603, 702], "strictfp": [589, 702], "stride": [23, 124, 209, 376, 489, 582, 702, 738, 741], "strike": [659, 747, 795, 798], "string": [577, 582, 589, 591, 595, 597, 598, 599, 602, 607, 608, 609, 611, 613, 617, 622, 627, 631, 633, 634, 635, 636, 637, 638, 640, 641, 646, 650, 651, 663, 671, 681, 687, 698, 699, 708, 710, 715, 722, 726, 727, 730, 732, 747, 750, 755, 756, 759, 760, 761, 762, 766, 771, 773, 774, 777, 779, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801], "string1": 761, "string2": 761, "string_view": [619, 687], "stringlength": 750, "stringlengthexpress": 750, "stringmap": 651, "stringmapentri": 734, "stringrecti": 760, "stringref": [602, 651, 701, 750, 759, 760, 775, 777, 779, 780, 781, 782, 799, 800, 801], "stringsort": 602, "stringswitch": 759, "stringwithcstr": 750, "stringwithspecialstr": 750, "strip": [593, 597, 607, 617, 618, 633, 634, 649, 651, 659, 697, 701, 705, 722, 734, 750, 766], "strippointercast": 602, "strive": [600, 602, 685, 748, 766], "strlen": 734, "strong": [586, 595, 598, 601, 602, 603, 631, 658, 659, 664, 666, 668, 687, 692, 693, 701, 702, 703, 706, 712, 714, 737, 747, 757, 797, 799, 802, 803], "stronger": [577, 582, 586, 702, 734, 755], "strongest": 751, "stroustrup": 734, "strr": 771, "strtab": [582, 589, 745], "strtab_blob": 589, "strtod": [651, 793, 794, 795, 796, 797, 798, 799, 800, 801], "strtol": 651, "struct": [582, 589, 599, 603, 650, 651, 652, 655, 661, 663, 666, 668, 700, 713, 721, 722, 725, 726, 727, 729, 734, 750, 751, 759, 768, 770, 771, 773, 777, 799, 801, 802], "struct_anon": 589, "struct_nam": 589, "structtyp": 734, "structur": [582, 585, 586, 589, 593, 599, 601, 602, 603, 607, 622, 631, 636, 640, 641, 651, 656, 658, 661, 666, 668, 669, 671, 673, 675, 678, 681, 698, 701, 703, 704, 705, 706, 707, 709, 716, 722, 726, 727, 730, 732, 737, 741, 750, 752, 759, 762, 771, 772, 773, 776, 777, 779, 794, 795, 797, 798, 799, 801, 802, 803], "struggl": 671, "stryjewski": 732, "stt_amdgpu_hsa_kernel": 582, "stt_file": [633, 645], "stt_func": [582, 633], "stt_gnu_ifunc": 633, "stt_notyp": 582, "stt_object": [582, 633], "stt_section": 633, "stub": [599, 653, 687, 701, 702, 714, 717, 734, 771, 781, 782], "stubsmgr": 717, "stuck": 802, "stucki": 738, "student": 654, "studi": [666, 703, 704, 735], "studio": [584, 597, 663, 671, 672, 690, 750], "stuf": 603, "stuff": [598, 599, 651, 709, 734, 752, 765, 773, 777, 796, 797, 799, 800, 801], "stump": 771, "stupid": 593, "stwu": 599, "style": [577, 582, 584, 586, 593, 603, 607, 608, 611, 612, 613, 617, 618, 631, 633, 634, 641, 646, 651, 655, 659, 668, 673, 706, 708, 722, 734, 739, 742, 751, 757, 759, 760, 761, 774, 794, 799, 802], "styleguid": 739, "stylist": [602, 761], "sub": [580, 586, 589, 594, 595, 597, 598, 599, 603, 608, 631, 655, 659, 662, 663, 671, 676, 694, 706, 714, 734, 741, 757, 759, 761, 762, 766, 771, 795, 800], "sub1": 603, "sub32rr": 750, "sub_32": 708, "sub_8bit": 708, "sub_ri": 761, "sub_rr": 761, "subblock": 589, "subclass": [585, 599, 602, 651, 668, 695, 701, 708, 741, 750, 760, 761, 762, 773, 777, 794], "subclassoptionaldata": 714, "subcommand": [773, 774, 775], "subcommun": 659, "subcompon": [577, 659], "subdir": 736, "subdirectori": [597, 598, 608, 671, 692, 764, 765, 766, 771], "subdivid": 702, "subel": [702, 703], "subexpress": [585, 703, 751, 794, 796, 797, 798, 799], "subfield": 761, "subfold": 660, "subgraph": [658, 706, 732, 741], "subgroup": 582, "subject": [577, 582, 596, 599, 602, 650, 659, 677, 680, 687, 694, 701, 702, 716, 733, 734, 767, 777], "subl": [599, 603], "sublist": 598, "subloop": 767, "submiss": 659, "submit": [577, 592, 593, 601, 670, 701, 733, 764], "submodul": 736, "subnorm": [702, 715], "subobject": 768, "suboptim": 736, "subpath": 608, "subprogram": [577, 582, 702, 750, 801], "subproject": [597, 602, 659, 670, 671, 691, 736, 743, 766], "subproject_branch": 736, "subrang": 702, "subreg": [708, 771], "subreg_to_reg": 708, "subregclasslist": 771, "subregindex": 708, "subregion": 702, "subregist": [753, 771], "subroutin": [582, 702], "subroutine2": 750, "subscrib": [659, 733, 748], "subscript": [585, 702, 732, 761], "subsect": [636, 641, 701, 702, 717, 734, 759, 760], "subsequ": [240, 363, 475, 577, 582, 583, 599, 603, 613, 651, 659, 661, 669, 694, 701, 702, 707, 710, 717, 729, 732, 739, 747, 750, 751, 753, 757, 770, 771, 781, 795, 796], "subset": [585, 586, 608, 613, 631, 633, 645, 659, 667, 669, 671, 687, 702, 704, 706, 715, 717, 734, 738, 750, 751, 753, 760, 761, 766, 774, 802], "subsidiari": 759, "subst": [761, 762], "substanti": [585, 595, 601, 655, 659, 668, 702, 751, 796], "substitut": [586, 598, 599, 619, 692, 702, 717, 732, 753, 761], "substr": [631, 650, 651, 656, 732, 761, 766], "substream": [636, 720, 730], "subsystem": [599, 702], "subtarget": [599, 623, 650, 678, 702], "subtargetemitt": 771, "subtargetfeatur": [762, 771], "subtl": [595, 598, 669, 704, 722, 794, 797, 802], "subtleti": 676, "subtmp": [795, 796, 797, 798, 799, 800, 801], "subtmp5": 799, "subtool": 652, "subtract": [581, 582, 599, 656, 662, 676, 702, 761], "subtyp": [582, 661, 760, 761, 771], "subvalu": [760, 761], "subvec": 702, "subvector": [599, 702], "subvers": [659, 694, 736, 766], "subvert": 596, "succ": 602, "succeed": [589, 590, 592, 596, 602, 603, 604, 608, 609, 613, 614, 615, 616, 621, 624, 628, 649, 650, 661, 688, 695, 702, 717, 734, 748, 766, 773, 779, 780, 794, 796], "success": [585, 602, 604, 606, 622, 623, 630, 631, 659, 661, 671, 676, 678, 688, 692, 693, 694, 696, 701, 702, 706, 717, 734, 736, 745, 748, 751, 755, 766, 770, 771, 773, 777, 794, 795, 796, 797, 798, 799, 800, 801], "success_ord": 586, "successor": [590, 599, 602, 620, 661, 666, 697, 702, 732, 741, 750, 771], "succinct": [602, 608], "succint": 603, "such": [577, 579, 580, 581, 582, 585, 586, 588, 589, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 608, 609, 611, 613, 615, 617, 619, 620, 622, 623, 632, 633, 636, 651, 652, 655, 656, 657, 658, 659, 661, 662, 664, 665, 666, 667, 668, 669, 670, 671, 674, 675, 676, 680, 681, 686, 687, 690, 691, 692, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 724, 727, 729, 730, 731, 732, 734, 736, 737, 738, 739, 740, 741, 742, 746, 747, 748, 749, 750, 751, 753, 755, 756, 757, 759, 760, 761, 762, 764, 766, 767, 769, 770, 771, 773, 777, 779, 780, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803], "sudo": [671, 689, 764], "suffer": [668, 748], "suffic": [588, 727], "suffici": [582, 583, 585, 586, 587, 593, 603, 651, 666, 668, 669, 671, 677, 692, 695, 696, 702, 710, 729, 732, 733, 734, 736, 737, 739, 748, 751, 755, 793], "suffix": [579, 582, 597, 602, 603, 608, 609, 614, 617, 621, 633, 651, 662, 692, 702, 734, 739, 751, 757, 759, 766, 771, 773, 782, 795], "sugar": [702, 761], "suggest": [577, 585, 595, 601, 602, 659, 666, 671, 693, 697, 702, 717, 731, 733, 734, 735, 739, 748, 751, 755, 762, 773], "suit": [584, 598, 599, 603, 652, 659, 661, 662, 670, 673, 681, 685, 689, 693, 694, 714, 734, 736, 742, 745, 750, 751, 757, 774, 779], "suitabl": [577, 589, 596, 598, 599, 602, 603, 617, 650, 651, 654, 655, 656, 667, 668, 678, 702, 704, 706, 707, 715, 717, 732, 734, 739, 750, 755, 766], "sum": [577, 589, 590, 591, 603, 617, 622, 702, 722, 734, 761, 770, 775], "sum_1": 637, "sum_2": 637, "sum_of_all_vari": 622, "summar": [599, 608, 622, 655, 668, 702, 727, 729, 732, 745, 748], "summari": [589, 603, 604, 608, 609, 611, 613, 614, 616, 617, 618, 621, 623, 624, 625, 628, 631, 632, 633, 634, 637, 640, 641, 642, 644, 645, 649, 651, 674, 675, 730, 732, 733, 747, 751, 754, 755, 765, 799, 801], "summaris": [588, 642], "summat": 702, "sumo": 582, "sun": 773, "sunit": 599, "sunk": [582, 585, 678, 750], "sunwspro": 671, "super": [599, 705, 761, 771], "superclass": [585, 734, 759, 761, 762, 771, 773], "superflu": 669, "superior": [631, 757], "supermajor": 748, "superpair": 760, "superpos": 734, "superreg": 771, "supersed": 740, "superset": [586, 702], "supersparc": 771, "superword": [703, 770], "suppl": 637, "supplement": [608, 637, 646, 653, 746], "supplementari": 577, "suppli": [17, 24, 58, 118, 148, 203, 327, 377, 396, 428, 490, 509, 541, 577, 580, 581, 589, 608, 613, 617, 637, 646, 655, 661, 680, 689, 690, 692, 694, 696, 701, 702, 705, 710, 717, 734, 736, 773, 777, 779, 780, 781, 802], "support": [20, 55, 121, 146, 206, 215, 217, 218, 227, 229, 230, 245, 370, 427, 482, 540, 577, 579, 580, 581, 584, 585, 586, 587, 588, 589, 595, 596, 597, 598, 600, 602, 603, 608, 609, 613, 616, 617, 619, 622, 627, 629, 631, 632, 634, 636, 637, 638, 650, 651, 653, 655, 657, 659, 662, 663, 665, 666, 667, 668, 669, 670, 671, 673, 675, 676, 680, 681, 685, 686, 690, 691, 692, 694, 695, 698, 699, 700, 701, 705, 708, 709, 714, 715, 716, 718, 722, 724, 726, 730, 731, 732, 734, 735, 736, 738, 739, 741, 742, 743, 745, 747, 748, 750, 751, 752, 758, 759, 761, 762, 764, 766, 767, 768, 769, 770, 773, 774, 775, 776, 777, 778, 779, 780, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 804], "supportsvp": 740, "supporttest": 597, "suppos": [599, 603, 637, 661, 675, 695, 701, 702, 714, 722, 726, 736, 756, 773, 777], "suppress": [602, 606, 608, 632, 655, 697, 702, 767, 777], "sure": [585, 586, 588, 592, 597, 599, 601, 602, 604, 617, 651, 654, 655, 659, 662, 664, 666, 671, 673, 674, 686, 687, 688, 689, 692, 693, 694, 695, 696, 704, 711, 716, 718, 731, 733, 734, 744, 748, 750, 754, 756, 757, 761, 762, 764, 766, 770, 773, 774, 794, 795, 796, 797, 798, 799, 800, 801], "surfac": [30, 31, 130, 131, 219, 220, 439, 440, 552, 553, 580, 599, 667, 701, 748, 774], "surgic": 734, "surpris": [602, 666, 671, 702, 714, 734, 794, 796, 802], "surround": [586, 596, 603, 669, 671, 687, 702, 708, 732, 739, 747, 751, 753, 761, 762], "survey": 653, "surviv": [661, 751, 794], "suspect": 649, "suspend": 748, "suspend1": 655, "suspend2": 655, "suspend_funct": 655, "suspens": [655, 748], "suspici": 756, "sv": [597, 687], "sve": [650, 670, 702, 739, 740, 743], "svelt": 747, "svg": [597, 775], "svn": [659, 670, 739, 753, 764, 770], "svptr": 702, "svr4": 613, "sw": [641, 738, 751], "swap": [577, 580, 586, 588, 597, 689, 702, 713, 726], "sweep": 668, "swift": [645, 701, 717, 739], "swiftasync": [589, 702], "swiftcc": [589, 655, 702], "swifterror": [589, 702], "swiftmodul": 606, "swiftself": [589, 702], "swifttailcc": [589, 599, 702], "swim": 738, "switch": [583, 586, 596, 597, 603, 612, 633, 645, 650, 651, 661, 662, 686, 689, 690, 695, 699, 706, 732, 734, 736, 739, 743, 751, 755, 759, 760, 764, 770, 771, 776, 777, 779, 794, 795, 796, 797, 798, 799, 800, 801], "switchsect": [599, 668], "switchtosect": 599, "swizzl": [577, 582], "sx": 740, "sycl": 577, "sym": [632, 633, 634, 636, 637, 640, 641, 663, 701, 717, 743, 744, 781, 782], "symbol": [50, 144, 241, 367, 479, 580, 585, 589, 595, 599, 602, 607, 609, 611, 612, 613, 615, 617, 619, 626, 627, 633, 634, 635, 637, 640, 641, 642, 645, 651, 656, 668, 671, 686, 687, 690, 693, 701, 702, 703, 704, 707, 722, 730, 731, 734, 737, 743, 750, 755, 764, 768, 771, 775, 776, 777, 779, 780, 782, 795, 796, 797, 798, 799, 800, 801, 802, 805], "symbol1": [634, 663], "symbol2": [634, 663], "symbol_in_partit": 663, "symbolalias": 717, "symbolaliasmap": 717, "symbolflagsmap": 782, "symbolmap": 717, "symbolnam": 582, "symbols": 725, "symbolstringptr": [717, 782], "symbolt": 734, "symbytes": [722, 725], "symlik": 597, "symlink": 597, "symmetr": 652, "symmetri": 766, "symnam": 634, "symposium": 652, "symptom": 671, "symptomat": 747, "symrecordstream": 722, "symtab": [582, 606, 734], "sync": [586, 715, 748, 777], "synch_and_fetch": 692, "synchron": [580, 582, 586, 702, 705, 717, 736, 743], "syncscop": 702, "synergist": 741, "synonym": [613, 708], "synopsi": 651, "syntact": [603, 702, 761, 796], "syntax": [20, 21, 49, 55, 60, 97, 115, 122, 143, 146, 150, 186, 202, 207, 239, 240, 245, 250, 288, 304, 362, 363, 370, 471, 472, 474, 475, 482, 484, 534, 576, 578, 582, 598, 599, 602, 608, 609, 611, 631, 633, 634, 636, 638, 645, 651, 664, 669, 671, 687, 692, 703, 704, 708, 709, 710, 719, 734, 742, 743, 747, 750, 752, 759, 761, 762, 766, 777, 793, 795, 796, 797, 798, 799, 800, 801], "synthes": [603, 662, 750, 796], "synthesizedcd": 588, "synthet": [633, 697, 771], "sys": [587, 671, 690, 701, 781, 800, 801], "sysadmin": 736, "syscal": 599, "sysmsg_op_ecc_err_interrupt": [55, 146, 245, 370, 482], "sysmsg_op_host_trap_ack": [55, 146, 245, 370, 482], "sysmsg_op_reg_rd": [55, 146, 245, 370, 482], "sysmsg_op_ttrace_pc": [55, 146, 245, 370, 482], "sysroot": [692, 693, 694, 762], "system": [577, 584, 585, 586, 587, 588, 592, 595, 597, 598, 599, 602, 606, 608, 609, 611, 613, 636, 651, 653, 654, 660, 662, 664, 667, 668, 669, 670, 672, 675, 686, 689, 692, 693, 694, 695, 696, 701, 703, 704, 705, 712, 715, 717, 726, 730, 731, 733, 734, 735, 736, 737, 743, 744, 747, 748, 750, 751, 753, 755, 757, 759, 760, 761, 762, 764, 765, 769, 772, 773, 774, 775, 778, 779, 780, 781, 782, 795, 796, 797, 798, 799, 800, 801, 802], "system_error": 800, "system_vgpr_workitem_id_undefin": 582, "system_vgpr_workitem_id_x": 582, "system_vgpr_workitem_id_x_i": 582, "system_vgpr_workitem_id_x_y_z": 582, "systemat": 751, "systemz": [599, 671, 702, 708, 739, 753], "sysv": [632, 642, 653], "sz": 676, "t1": [599, 702, 714, 766, 775], "t1item": 714, "t2": [599, 603, 702, 714, 715, 766, 775], "t2bcc": 708, "t2item": 714, "t3": [599, 702], "t4": 702, "t5": 702, "ta": [577, 580], "tab": [602, 603, 617, 659, 761], "tabl": [55, 146, 245, 370, 482, 577, 579, 580, 581, 583, 585, 588, 589, 596, 597, 606, 607, 613, 615, 622, 626, 631, 633, 634, 635, 636, 637, 640, 641, 645, 650, 651, 655, 671, 672, 676, 685, 695, 699, 701, 702, 704, 705, 707, 714, 717, 720, 722, 727, 729, 730, 734, 751, 755, 757, 760, 762, 765, 770, 771, 776, 777, 779, 794, 795, 796, 797, 798, 799, 800, 801, 802], "tabledef": 623, "tablegen": [597, 650, 662, 671, 678, 683, 693, 694, 699, 739, 769, 771], "tablegen_json_vers": 759, "tablegenbackend": 760, "tablegenbackendskeleton": 760, "tablegenmain": 760, "tablet": 711, "tabsiz": 617, "tackl": [664, 796, 799], "tag": [14, 98, 187, 289, 324, 353, 422, 535, 578, 579, 589, 602, 650, 659, 660, 668, 671, 702, 710, 734, 736, 742, 743, 747, 755, 759, 760, 761], "tag0": [578, 702], "tag1": [578, 702], "tag2": 702, "tag3": 702, "tag_apple_properti": 750, "tag_base_typ": 750, "tag_memb": 750, "tag_offset": 702, "tag_pointer_typ": 750, "tag_structure_typ": 750, "tahiti": 582, "tail": [589, 603, 655, 668, 697, 702, 714, 715, 750, 761, 770, 776, 802], "tail_exit": 776, "tailcal": [599, 751], "tailcalle": 599, "tailcallopt": [599, 702], "tailcc": [589, 599, 702], "tailor": [636, 689], "take": [577, 582, 584, 585, 586, 588, 589, 591, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 606, 608, 609, 611, 615, 618, 621, 623, 624, 628, 629, 631, 634, 636, 637, 649, 651, 652, 654, 655, 659, 660, 661, 662, 663, 667, 668, 669, 671, 673, 674, 676, 680, 691, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 711, 714, 715, 716, 717, 718, 732, 734, 736, 737, 741, 743, 744, 745, 746, 750, 751, 752, 753, 755, 757, 759, 760, 761, 764, 768, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805], "takecallback": 734, "takeerror": [717, 734, 779, 780, 781, 782], "taken": [582, 585, 591, 595, 599, 623, 651, 655, 656, 661, 666, 680, 687, 701, 702, 706, 708, 713, 714, 717, 732, 734, 736, 737, 741, 744, 748, 750, 751, 755, 756, 757, 760, 761, 762, 768, 771, 802], "talk": [602, 652, 662, 675, 681, 702, 712, 734, 746, 773, 794, 795, 796, 797, 799, 802, 803], "talli": 765, "tape": 671, "tar": [671, 673, 693, 744], "tarbal": [671, 693, 694], "target": [50, 97, 144, 186, 241, 288, 367, 479, 534, 577, 580, 581, 584, 586, 587, 588, 589, 595, 596, 597, 598, 601, 602, 605, 607, 608, 609, 610, 616, 619, 623, 631, 633, 634, 637, 648, 650, 653, 655, 657, 660, 662, 664, 666, 667, 668, 671, 673, 675, 676, 678, 680, 681, 683, 685, 690, 691, 693, 694, 696, 697, 698, 699, 701, 706, 707, 710, 712, 714, 716, 717, 719, 721, 737, 740, 747, 750, 751, 753, 755, 757, 759, 760, 761, 762, 764, 765, 766, 768, 769, 770, 773, 778, 779, 780, 796, 797, 798, 799, 801, 803], "target_compile_definit": 598, "target_link_librari": 597, "targetasminfo": [668, 771], "targetcallingconv": 771, "targetdescript": 771, "targetframeinfo": 771, "targetframelow": 661, "targetfunc": 734, "targetinfo": [659, 771], "targetinstrformat": 771, "targetinstrinfo": 739, "targetjitinfo": 771, "targetlibraryinfo": [702, 739], "targetlow": [593, 661, 662, 680, 739, 771, 775], "targetloweringbas": 583, "targetloweringobjectfil": 599, "targetloweringopt": 775, "targetmachin": [668, 707, 715, 716, 739, 771, 773, 779, 781, 796, 797, 798, 799, 800], "targetnam": 708, "targetopt": [599, 800], "targetpassconfig": [682, 716], "targetprocesscontrol": [701, 717], "targetregisterclass": [599, 771], "targetregisterdesc": [599, 771], "targetregisterinfo": 739, "targetregistri": [599, 771, 800], "targets_to_build": 693, "targetselect": [796, 797, 798, 799, 800, 801], "targetselectiondag": [599, 662, 771], "targetsubtarget": 771, "targettransforminfo": 702, "targettripl": 800, "tarjan": 773, "task": [602, 603, 655, 659, 661, 662, 681, 691, 702, 714, 737, 750, 752, 755, 756, 757], "task_begin": 603, "task_end": 603, "taught": [599, 676], "tb": 771, "tba": 582, "tba_hi": [49, 581], "tba_lo": [49, 581], "tbaa": [666, 703, 713, 718], "tbb": 771, "tbcc": 771, "tbd": [578, 582, 632, 717], "tbepler": 738, "tblgen": [597, 599, 607, 662, 691, 693, 759, 761, 762, 771], "tblgensubtarget": 771, "tbr_jtr": 708, "tbuffer_load_format_d16_x": [0, 3, 4, 9], "tbuffer_load_format_d16_xi": [0, 3, 4, 9], "tbuffer_load_format_d16_xyz": [0, 3, 4, 9], "tbuffer_load_format_d16_xyzw": [0, 3, 4, 9], "tbuffer_load_format_x": [0, 2, 3, 4, 9], "tbuffer_load_format_xi": [0, 2, 3, 4, 9], "tbuffer_load_format_xyz": [0, 2, 3, 4, 9], "tbuffer_load_format_xyzw": [0, 2, 3, 4, 9], "tbuffer_store_format_d16_x": [0, 3, 4, 9], "tbuffer_store_format_d16_xi": [0, 3, 4, 9], "tbuffer_store_format_d16_xyz": [0, 3, 4, 9], "tbuffer_store_format_d16_xyzw": [0, 3, 4, 9], "tbuffer_store_format_x": [0, 2, 3, 4, 9], "tbuffer_store_format_xi": [0, 2, 3, 4, 9], "tbuffer_store_format_xyz": [0, 2, 3, 4, 9], "tbuffer_store_format_xyzw": [0, 2, 3, 4, 9], "tcb": 749, "tcp": 701, "td": [583, 599, 605, 610, 611, 647, 648, 650, 662, 699, 708, 715, 759, 760, 761, 762, 771], "tdm": 688, "tdrr": 611, "tdtag": 759, "te": 702, "teach": [662, 671, 779, 795, 803], "team": [652, 659, 694, 735, 736, 741], "tear": 661, "technic": [598, 600, 601, 619, 659, 670, 704, 736, 748, 775], "techniqu": [577, 585, 593, 599, 668, 681, 702, 714, 734, 745, 770, 771, 772, 773, 774, 794, 796, 797, 798, 799, 803], "technolog": [658, 705, 743, 802], "ted": 759, "tedious": [603, 777], "tee": 593, "teeth": 757, "tell": [582, 585, 593, 597, 599, 601, 602, 604, 651, 656, 659, 662, 668, 671, 674, 690, 692, 701, 702, 705, 714, 716, 717, 718, 731, 734, 735, 736, 750, 761, 765, 766, 794, 795, 799, 801, 802], "templat": [585, 602, 617, 650, 651, 652, 670, 695, 714, 732, 748, 756, 759, 760, 761, 762, 771, 773, 777, 795], "templateargdecl": 761, "templatearglist": 761, "templateparam": 702, "tempor": [595, 702], "temporari": [581, 599, 602, 608, 623, 663, 664, 680, 687, 702, 703, 704, 708, 732, 734, 736, 746, 751, 761, 765, 766, 777], "temporarili": [577, 582, 593, 603, 748], "tempt": [602, 671, 756], "ten": [669, 726], "tend": [620, 623, 631, 659, 665, 669, 671, 681, 701, 702, 717, 734, 739, 744, 750], "tension": 799, "tensorflow": 704, "tentat": [582, 702, 718], "teor": 708, "term": [577, 582, 585, 586, 588, 599, 600, 601, 602, 617, 631, 659, 661, 664, 668, 678, 687, 702, 703, 706, 708, 713, 714, 716, 717, 732, 733, 741, 747, 750, 753, 755, 756, 757, 760, 761, 766, 769, 780], "termin": [577, 582, 589, 591, 593, 599, 602, 608, 613, 614, 620, 621, 624, 628, 636, 644, 649, 651, 661, 663, 666, 687, 706, 714, 715, 721, 722, 727, 732, 734, 741, 745, 747, 750, 756, 760, 766, 771, 773, 797], "terminolog": [591, 598, 680, 702, 732, 739, 742, 769, 801], "ternari": 599, "terribl": 584, "territori": [659, 671], "terror": 584, "tess": 582, "test": [577, 582, 584, 585, 593, 595, 596, 599, 601, 603, 607, 609, 624, 631, 636, 637, 642, 643, 644, 646, 650, 651, 652, 654, 655, 656, 661, 662, 664, 667, 670, 673, 680, 686, 687, 689, 691, 693, 695, 696, 706, 714, 718, 719, 732, 734, 735, 736, 737, 739, 743, 747, 748, 750, 751, 755, 757, 759, 760, 769, 773, 777, 796, 797, 799, 800], "test1": [709, 752, 755, 766], "test2": [642, 644], "test5": 603, "test_arg": 594, "test_argu": 594, "test_blockaddress": 676, "test_cod": 701, "test_code_har": 701, "test_devic": 652, "test_exec_root": 608, "test_format": 608, "test_fuzz": 704, "test_hd": 652, "test_host": 652, "test_nam": 594, "test_source_root": 608, "test_suite_benchmarking_on": 764, "test_suite_collect_stat": 764, "test_suite_fortran": 764, "test_suite_remote_host": 764, "test_suite_run_benchmark": 764, "test_suite_run_typ": 764, "test_suite_run_und": 764, "test_suite_spec2000_root": 764, "test_suite_spec2006_root": 764, "test_suite_spec2017_root": 764, "test_suite_subdir": 764, "test_suite_use_perf": 764, "testabl": [602, 681, 733], "testament": 803, "testcas": [603, 604, 659, 701, 702, 734, 795], "testcase_dir": 704, "testcleanup": 702, "tester": [607, 659, 670, 694, 765], "testfnptr": 702, "testfunc": 796, "testingconfig": 608, "testl": 751, "testq": 751, "testresult": 670, "testrunn": 608, "testsuit": [603, 608, 737], "tex": 765, "text": [577, 582, 597, 599, 600, 601, 603, 613, 617, 619, 622, 632, 634, 635, 637, 638, 642, 644, 650, 659, 662, 663, 667, 702, 704, 709, 710, 733, 734, 746, 750, 751, 753, 761, 764, 765, 766, 771, 774, 777, 781, 793, 802, 805], "textfileread": 602, "textual": [577, 582, 599, 606, 608, 609, 617, 659, 664, 667, 702, 703, 710, 713, 718, 720, 759, 762, 766, 775, 796], "textur": 580, "tfe": [0, 2, 3, 4, 27, 28, 29, 30, 31, 37, 38, 39, 40, 41, 44, 45, 46, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 212, 213, 214, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 336, 439, 440, 447, 448, 449, 461, 462, 463, 464, 549, 552, 553, 556, 557, 560, 561, 562, 563, 568, 569, 570, 571, 582], "tg_split": 582, "tgid_size_en": 582, "tgid_x_en": 582, "tgid_y_en": 582, "tgid_z_en": 582, "tgsplit": 582, "tgt": [0, 2, 3, 4], "th": [577, 582, 588, 661, 674, 702, 714, 724, 771, 777, 793], "than": [577, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 593, 595, 597, 599, 601, 602, 603, 606, 608, 609, 613, 615, 617, 619, 623, 631, 632, 636, 637, 641, 644, 646, 651, 652, 655, 656, 658, 659, 660, 661, 662, 664, 666, 667, 668, 670, 671, 676, 680, 681, 685, 687, 688, 689, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 709, 710, 711, 713, 714, 716, 717, 720, 722, 724, 726, 727, 729, 732, 734, 735, 736, 737, 738, 741, 744, 746, 747, 748, 749, 750, 751, 753, 755, 757, 759, 760, 761, 766, 767, 770, 771, 772, 773, 776, 777, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "thank": [654, 659, 696, 747], "that": [20, 33, 41, 44, 46, 137, 222, 231, 234, 236, 441, 449, 462, 554, 563, 568, 570, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 623, 624, 626, 627, 629, 631, 632, 633, 636, 637, 639, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "the": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 17, 18, 20, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 47, 48, 49, 50, 55, 57, 58, 61, 63, 64, 67, 79, 88, 97, 98, 99, 115, 118, 119, 121, 125, 126, 127, 128, 129, 130, 131, 142, 143, 144, 146, 148, 152, 153, 154, 163, 174, 186, 187, 188, 202, 203, 204, 206, 210, 211, 212, 213, 214, 219, 220, 237, 238, 239, 240, 241, 245, 247, 248, 251, 253, 254, 255, 267, 278, 288, 289, 290, 304, 324, 327, 336, 345, 353, 362, 363, 364, 365, 366, 367, 370, 372, 378, 379, 380, 392, 393, 394, 396, 397, 410, 411, 412, 422, 423, 427, 428, 436, 439, 440, 443, 444, 471, 474, 475, 476, 477, 478, 479, 482, 485, 491, 492, 493, 505, 506, 507, 509, 510, 522, 523, 524, 534, 535, 536, 540, 541, 549, 552, 553, 556, 557, 572, 576, 578, 579, 580, 581, 582, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 660, 662, 663, 667, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 688, 689, 690, 693, 696, 698, 699, 705, 706, 707, 708, 709, 710, 712, 714, 719, 721, 731, 735, 737, 740, 742, 747, 749, 750, 752, 753, 754, 756, 757, 758, 759, 762, 763, 766, 767, 768, 769, 774, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 801, 803, 804, 805], "the_dag": 761, "theadsafemodul": 717, "thecontext": [795, 796, 797, 798, 799, 800, 801], "thecu": 801, "thedoc": 777, "thedoclist": 777, "theexecutionengin": 801, "thefpm": [796, 797, 798, 799], "thefunct": [795, 796, 797, 798, 799, 800, 801], "their": [577, 578, 582, 583, 585, 586, 588, 589, 592, 596, 597, 598, 599, 601, 602, 607, 608, 613, 615, 617, 618, 620, 622, 631, 632, 637, 640, 641, 650, 651, 652, 656, 658, 659, 660, 661, 664, 666, 668, 670, 671, 675, 676, 677, 678, 681, 685, 688, 694, 695, 699, 700, 701, 702, 703, 704, 705, 706, 708, 711, 714, 715, 717, 718, 729, 730, 731, 732, 734, 735, 736, 737, 739, 741, 745, 747, 748, 750, 751, 753, 755, 756, 757, 759, 760, 761, 762, 764, 766, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 794, 795, 796, 798, 799, 800, 801, 802], "thejit": [796, 797, 798, 799, 801], "them": [577, 582, 585, 586, 588, 589, 593, 594, 596, 597, 598, 599, 600, 602, 603, 604, 608, 613, 617, 622, 626, 628, 631, 633, 636, 637, 640, 641, 644, 645, 651, 652, 654, 656, 658, 659, 660, 661, 664, 666, 667, 668, 669, 671, 673, 675, 676, 677, 678, 680, 681, 683, 687, 690, 691, 693, 694, 695, 698, 699, 701, 702, 704, 705, 706, 708, 710, 711, 713, 714, 715, 716, 717, 729, 731, 732, 733, 734, 735, 736, 739, 741, 743, 744, 746, 749, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 764, 765, 766, 767, 771, 773, 774, 775, 776, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 801, 802], "theme": [762, 779], "themodul": [795, 796, 797, 798, 799, 800, 801], "themself": 659, "themselv": [586, 589, 599, 608, 651, 659, 667, 702, 714, 718, 734, 736, 748, 750, 751, 761, 762, 767, 775, 776, 794], "then": [577, 580, 581, 582, 584, 585, 586, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 608, 609, 611, 614, 615, 617, 620, 621, 623, 624, 627, 628, 629, 631, 632, 633, 636, 637, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 671, 673, 674, 675, 676, 679, 680, 681, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 716, 717, 718, 720, 721, 722, 725, 726, 727, 732, 733, 734, 735, 736, 739, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 773, 775, 777, 779, 780, 781, 782, 793, 794, 795, 796, 798, 799, 800, 801], "then1": 751, "then2": 751, "thenbb": [797, 798, 799, 800, 801], "thenv": [797, 798, 799, 800, 801], "theoret": [631, 734, 756], "theori": [692, 714, 722, 777], "theorist": 701, "there": [222, 234, 236, 577, 579, 580, 581, 582, 585, 586, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 608, 612, 613, 617, 619, 622, 623, 625, 627, 630, 631, 633, 635, 637, 640, 641, 642, 644, 645, 651, 652, 654, 655, 656, 657, 658, 659, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 706, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 720, 722, 724, 725, 727, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 771, 772, 773, 774, 776, 777, 780, 781, 794, 795, 796, 797, 798, 799, 801, 802], "thereaft": 753, "therebi": [651, 676, 702, 753], "therefor": [577, 582, 586, 588, 599, 631, 651, 652, 655, 659, 661, 669, 686, 690, 702, 710, 711, 715, 716, 719, 732, 734, 739, 741, 748, 750, 751, 753, 767, 773, 777], "thereof": [600, 702], "these": [17, 115, 118, 202, 203, 240, 304, 327, 363, 428, 471, 475, 541, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 607, 608, 609, 614, 617, 622, 626, 631, 641, 642, 646, 651, 652, 654, 655, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 680, 681, 687, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 711, 713, 714, 715, 716, 717, 718, 719, 720, 722, 727, 729, 730, 731, 732, 734, 735, 736, 738, 739, 740, 741, 743, 745, 748, 750, 751, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 768, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "thesi": 741, "thesimplifiedandinstruct": 697, "thetargetmachin": 800, "thetripl": 739, "they": [577, 578, 579, 580, 581, 582, 585, 586, 588, 589, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 608, 611, 613, 615, 619, 620, 625, 627, 631, 632, 633, 637, 645, 646, 649, 651, 652, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 675, 676, 678, 680, 681, 687, 688, 689, 690, 694, 695, 697, 699, 700, 701, 702, 703, 704, 706, 708, 710, 713, 714, 716, 717, 720, 721, 729, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 744, 746, 747, 748, 750, 751, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 773, 775, 776, 777, 779, 780, 794, 795, 796, 797, 799, 802], "thin": [595, 597, 613, 617, 626, 629, 702, 734], "thing": [582, 585, 588, 589, 593, 595, 598, 599, 600, 602, 603, 608, 651, 652, 656, 659, 661, 667, 669, 671, 673, 678, 681, 691, 693, 696, 702, 704, 706, 709, 710, 713, 714, 716, 717, 718, 730, 731, 732, 734, 735, 736, 747, 748, 750, 751, 756, 759, 761, 765, 766, 773, 775, 777, 779, 780, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "think": [577, 592, 597, 599, 602, 656, 659, 662, 668, 669, 675, 695, 699, 701, 702, 703, 713, 715, 721, 733, 734, 736, 737, 751, 756, 761, 797, 800, 802], "thinlto": [591, 597, 751, 754], "third": [577, 584, 589, 591, 599, 602, 631, 636, 646, 651, 655, 656, 661, 663, 668, 669, 671, 675, 694, 702, 708, 714, 719, 734, 735, 748, 750, 751, 753, 759, 761, 765, 771, 773, 776, 777, 795, 802], "this": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 17, 20, 24, 41, 42, 43, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 66, 88, 98, 100, 101, 102, 115, 118, 137, 138, 139, 143, 144, 145, 146, 149, 151, 174, 187, 202, 203, 215, 217, 218, 222, 227, 229, 230, 231, 232, 233, 234, 236, 239, 240, 241, 242, 243, 244, 245, 249, 251, 252, 278, 289, 304, 305, 306, 310, 311, 315, 316, 317, 318, 324, 327, 337, 338, 339, 340, 341, 343, 344, 353, 354, 360, 361, 362, 363, 367, 368, 369, 370, 371, 372, 374, 377, 422, 425, 426, 428, 449, 459, 460, 471, 473, 474, 475, 479, 480, 481, 482, 483, 485, 487, 490, 535, 538, 539, 541, 563, 566, 567, 572, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 629, 631, 632, 633, 634, 636, 637, 640, 641, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 667, 668, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 800, 802, 803, 804], "thischar": [793, 794, 795, 796, 797, 798, 799, 800, 801], "thoma": 751, "thorough": 797, "those": [577, 580, 582, 585, 586, 593, 595, 597, 598, 599, 600, 601, 602, 603, 608, 612, 613, 615, 617, 620, 631, 632, 633, 636, 637, 651, 656, 658, 659, 661, 667, 668, 669, 670, 671, 672, 674, 677, 679, 680, 689, 692, 693, 695, 701, 702, 703, 704, 706, 713, 714, 716, 717, 730, 732, 734, 736, 737, 740, 746, 747, 748, 750, 751, 753, 755, 756, 757, 759, 760, 761, 766, 768, 769, 771, 773, 774, 777, 778, 799, 800, 801], "thost": 673, "though": [577, 586, 590, 599, 603, 619, 623, 631, 651, 652, 659, 661, 662, 663, 666, 668, 669, 675, 676, 680, 691, 695, 697, 701, 702, 705, 706, 711, 713, 714, 720, 732, 734, 736, 750, 751, 765, 766, 773, 779, 794, 795, 797, 799, 801], "thought": [599, 675, 702, 713, 727, 739, 755], "thousand": [704, 726, 732], "thread": [577, 580, 581, 585, 586, 587, 589, 597, 599, 603, 606, 617, 637, 654, 655, 657, 659, 660, 661, 668, 687, 697, 701, 703, 704, 715, 717, 736, 738, 739, 747, 749, 751, 755, 764, 774, 775, 776, 779, 780], "thread_id": [603, 776], "thread_loc": [599, 702, 755], "thread_local_quarantine_size_kb": 747, "thread_siblings_list": 587, "threadbuff": 776, "threadgroup": 582, "threadgroup_dimens": 582, "threadgroup_size_in_wavefront": 582, "threadid": 715, "threadidx": 715, "threadloc": [589, 702], "threadpool": 717, "threadsaf": 668, "threadsafecontext": [779, 780], "threadsafemodul": [743, 779, 780, 781, 782, 796, 797, 798, 799], "threadsanit": 702, "threat": [600, 746, 748], "threaten": 600, "three": [577, 580, 584, 589, 593, 598, 599, 603, 604, 631, 637, 651, 655, 656, 658, 661, 665, 669, 671, 675, 680, 685, 702, 706, 708, 713, 714, 719, 720, 732, 734, 739, 741, 744, 745, 748, 751, 755, 757, 759, 761, 766, 771, 773, 774, 779, 794, 797], "threshold": [582, 617, 637, 702, 732, 738, 745, 774], "threshold_float_numb": 637, "threshold_int_numb": 637, "throttl": [623, 741], "through": [577, 582, 585, 586, 589, 590, 593, 594, 597, 598, 599, 601, 609, 613, 631, 651, 652, 653, 654, 655, 658, 659, 661, 664, 665, 666, 667, 668, 669, 671, 674, 676, 678, 680, 687, 688, 691, 694, 695, 698, 700, 701, 702, 704, 705, 706, 707, 708, 710, 711, 712, 714, 716, 717, 718, 719, 730, 732, 733, 734, 736, 739, 740, 741, 745, 747, 748, 750, 751, 753, 754, 755, 756, 759, 760, 761, 768, 770, 771, 772, 773, 774, 777, 779, 780, 781, 782, 794, 796, 797, 798, 799, 800, 801, 803], "throughout": [580, 581, 588, 589, 598, 602, 603, 656, 659, 671, 702, 707, 726, 729, 734, 745, 750, 756, 761, 776], "throughput": [623, 631, 666, 717], "throw": [577, 599, 625, 652, 655, 666, 700, 701, 702, 717, 732, 734, 773, 781], "throwaway": 584, "throwinfo": 661, "thrown": [595, 661, 665, 702], "throwntyp": 702, "ths": 615, "thumb": [586, 599, 659, 692, 756, 774], "thumb1": [653, 702], "thumb2": [599, 653, 698, 702], "thunderbird": 659, "thunderx2t99model": 771, "thunderxt8xmodel": 771, "thunk": [599, 636, 702, 714, 732, 768], "thursday": [670, 711], "thus": [577, 585, 586, 589, 590, 593, 594, 599, 602, 603, 623, 651, 655, 659, 661, 664, 666, 668, 687, 696, 697, 702, 704, 712, 713, 714, 720, 722, 729, 732, 733, 734, 736, 750, 751, 755, 761, 766, 767, 773, 794, 795, 796, 797, 798, 799, 800, 801], "thusli": 725, "ti": 660, "tian": 741, "tick": 776, "tid": 715, "tidbit": [585, 801, 803, 804], "tidi": [602, 717, 733, 739, 773], "tidig_cmp_cnt": 582, "tie": [582, 599, 655, 700, 701, 702, 708, 717, 750, 755], "tiebreak": 652, "tier": 659, "tight": [656, 666, 702, 705, 716, 736, 794, 795, 796, 797, 798, 799, 800, 801], "tighten": 675, "tii": [599, 739], "tile": [64, 153, 254, 410, 522, 702, 741], "till": 688, "tim": [684, 741], "timberwolfmc": 765, "time": [577, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 603, 606, 608, 609, 611, 613, 617, 622, 623, 624, 625, 631, 632, 633, 636, 637, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 666, 668, 670, 671, 673, 674, 676, 677, 680, 681, 685, 687, 688, 690, 691, 692, 693, 694, 695, 700, 701, 702, 703, 704, 706, 707, 708, 709, 711, 712, 714, 715, 716, 717, 719, 722, 726, 727, 730, 731, 732, 734, 735, 736, 738, 741, 744, 747, 748, 750, 752, 753, 755, 757, 759, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 793, 795, 796, 797, 798, 799, 803], "timeit": 764, "timelin": [748, 774, 775], "timeout": [608, 704], "timeout_exitcod": 704, "timepassesisen": 651, "timer": [587, 702], "timescal": 776, "timestamp": [577, 606, 613, 627, 633, 645, 727, 736, 776], "tini": [611, 695, 714], "tip": [593, 654, 659, 672, 736, 759, 773], "tire": [602, 762], "tirefactori": 602, "titl": [592, 601, 659, 733], "tli": 739, "tls": [589, 599, 641, 661, 702, 717, 747, 755], "tlv": 701, "tm": [715, 771, 781], "tma_hi": [49, 581], "tma_lo": [49, 581], "tmax": 581, "tmp": [597, 599, 603, 608, 623, 646, 668, 669, 687, 696, 702, 716, 734, 735, 766, 771, 772, 796, 799], "tmp1": [602, 603, 669], "tmp2": [669, 799], "tmp3": [603, 669], "tmp4": 669, "tmp5": 669, "tmp7": 603, "tmp9": 603, "tmpb": [799, 800, 801], "tmpfs": 587, "to": [1, 5, 6, 7, 8, 17, 20, 26, 32, 33, 44, 45, 46, 47, 48, 50, 57, 58, 60, 61, 66, 67, 88, 97, 100, 101, 115, 118, 121, 126, 132, 140, 141, 142, 144, 148, 150, 154, 174, 186, 202, 203, 206, 211, 215, 216, 217, 218, 221, 222, 227, 228, 229, 230, 234, 235, 236, 237, 238, 241, 247, 248, 250, 251, 255, 278, 288, 304, 327, 354, 367, 372, 374, 392, 393, 394, 396, 397, 412, 425, 426, 427, 428, 441, 442, 461, 462, 471, 479, 484, 485, 487, 505, 506, 507, 509, 510, 524, 534, 538, 539, 540, 541, 554, 555, 568, 569, 570, 572, 576, 578, 579, 580, 581, 584, 586, 587, 588, 589, 591, 592, 594, 595, 596, 597, 598, 600, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 649, 652, 653, 655, 656, 657, 658, 661, 662, 663, 665, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 687, 700, 703, 704, 705, 706, 707, 708, 710, 712, 713, 718, 720, 721, 722, 724, 725, 726, 729, 730, 731, 733, 735, 737, 738, 739, 741, 742, 746, 747, 749, 750, 753, 754, 755, 756, 757, 758, 759, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 801, 802, 803, 804, 805], "tobia": 741, "toc": 599, "today": [586, 602, 667, 669, 702, 730, 736, 739, 753, 755], "todefin": 759, "todo": [599, 659, 662, 677, 683, 693, 697, 732, 744, 773], "togeth": [41, 137, 231, 449, 563, 577, 580, 582, 585, 588, 590, 593, 599, 603, 604, 608, 628, 629, 632, 637, 646, 649, 651, 655, 656, 659, 661, 668, 671, 675, 680, 681, 691, 697, 701, 702, 704, 711, 716, 717, 722, 726, 732, 734, 736, 745, 750, 760, 766, 770, 773, 774, 780, 782, 793, 794, 795, 797, 798, 802], "tojittargetaddress": 717, "tok": [655, 702, 801], "tok_binari": [798, 799, 800, 801], "tok_def": [793, 794, 795, 796, 797, 798, 799, 800, 801], "tok_els": [797, 798, 799, 800, 801], "tok_eof": [793, 794, 795, 796, 797, 798, 799, 800, 801], "tok_extern": [793, 794, 795, 796, 797, 798, 799, 800, 801], "tok_for": [797, 798, 799, 800, 801], "tok_identifi": [793, 794, 795, 796, 797, 798, 799, 800, 801], "tok_if": [797, 798, 799, 800, 801], "tok_in": [797, 798, 799, 800, 801], "tok_numb": [793, 794, 795, 796, 797, 798, 799, 800, 801], "tok_then": [797, 798, 799, 800, 801], "tok_unari": [798, 799, 800, 801], "tok_var": [799, 800, 801], "tokcod": 761, "token": [599, 631, 655, 662, 680, 694, 710, 722, 736, 755, 761, 777, 793, 794, 795, 796, 797, 798, 799, 800, 801], "tokidentifi": 761, "tokinteg": 761, "tokprec": [794, 795, 796, 797, 798, 799, 800, 801], "tokstr": 761, "tokvarnam": 761, "told": 659, "toler": [658, 668, 702, 704, 754], "tolmach": 668, "tolmach94": 668, "tom": [694, 777], "tombston": 724, "ton": 713, "tonearest": 702, "tonearestaway": 702, "tonga": 582, "tongapro": 582, "too": [584, 593, 599, 601, 602, 603, 623, 651, 656, 659, 665, 671, 673, 680, 681, 686, 687, 689, 694, 695, 702, 706, 713, 714, 734, 738, 741, 751, 756, 757, 759, 761, 766, 773, 776, 777, 780, 794, 799, 801, 802], "tool": [582, 584, 585, 589, 594, 595, 597, 598, 599, 602, 603, 606, 608, 611, 612, 615, 616, 617, 618, 620, 622, 623, 624, 631, 636, 639, 640, 641, 642, 643, 644, 646, 651, 652, 653, 654, 656, 658, 659, 663, 668, 670, 672, 674, 686, 687, 691, 692, 693, 694, 696, 702, 703, 705, 712, 715, 717, 719, 727, 729, 730, 731, 732, 733, 735, 736, 737, 739, 742, 744, 745, 747, 750, 754, 756, 757, 762, 764, 766, 769, 771, 773, 794, 795, 796, 797], "tool_nam": 671, "toolchain": [595, 596, 597, 599, 602, 606, 673, 692, 720, 721, 722, 727, 730, 736, 737, 748, 764], "toolkit": [652, 715, 734, 742], "toolnam": 735, "toolset": [597, 673, 774], "top": [577, 582, 585, 586, 589, 597, 598, 599, 602, 603, 608, 611, 631, 637, 659, 660, 661, 667, 669, 671, 676, 680, 683, 686, 690, 700, 702, 703, 704, 706, 713, 714, 732, 733, 734, 735, 736, 745, 750, 759, 760, 761, 764, 765, 768, 773, 775, 777, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801, 802], "topic": [659, 670, 709, 711, 752, 802, 803], "toplevel": 674, "toplevelexpr": [794, 795, 796, 797, 798, 799, 800, 801], "topmost": 646, "topn": 637, "topolog": [587, 603, 729], "torec": 734, "torerr": 734, "toret": 750, "toreturn": 776, "tos": 778, "toshio": 599, "tot": 755, "total": [582, 586, 589, 615, 630, 631, 637, 642, 702, 704, 714, 722, 726, 729, 732, 734, 745, 747, 749, 750, 751, 760, 761, 765, 773, 775, 795], "totalview": 577, "touch": [587, 654, 687, 695, 697, 702, 732, 734, 736, 746, 748, 750, 751, 773], "tough": 794, "tour": 794, "toward": [582, 590, 594, 595, 597, 659, 667, 670, 702, 734, 740, 747, 748, 751], "towardzero": 702, "town": 670, "toy": [652, 717, 775, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "tp": 717, "tpi": [636, 720, 721, 727, 730], "tpistreamhead": 729, "tpistreamvers": 729, "tpoff": 755, "tr1": 734, "trac": 688, "trace": [617, 638, 651, 656, 687, 702, 703, 750, 751, 755, 773], "trace_ev": 775, "tracer": 776, "tracevalu": 732, "track": [577, 582, 585, 592, 593, 599, 602, 604, 608, 631, 656, 659, 660, 664, 666, 667, 668, 671, 675, 681, 696, 701, 702, 703, 704, 708, 713, 714, 717, 718, 719, 732, 734, 736, 743, 748, 750, 751, 753, 754, 755, 757, 762, 773, 795, 796, 797, 798, 799, 801], "tracker": [592, 600, 601, 654, 659, 667, 733, 736, 748], "tracksregl": 708, "tradbigmip": 633, "trade": [593, 595, 671, 701, 713, 734, 751, 780], "tradeoff": [586, 602, 668, 702, 716, 796], "tradit": [577, 584, 585, 599, 613, 632, 687, 717, 718, 732, 734, 750, 779, 793], "tradlittlemip": 633, "traffic": [711, 734, 736, 799], "tragic": 736, "trail": [580, 598, 602, 603, 608, 633, 651, 656, 669, 676, 702, 708, 734, 777], "train": [584, 637, 702, 764], "trait": [734, 759, 777], "tramp": 702, "tramp1": 702, "transcendent": 652, "transcrib": 795, "transcript": 796, "transfer": [588, 652, 655, 661, 700, 701, 702, 708, 749, 751, 764, 796, 797, 798, 799, 800, 801], "transform": [580, 586, 593, 597, 599, 602, 603, 631, 649, 658, 662, 664, 665, 666, 668, 671, 678, 679, 680, 691, 699, 701, 702, 706, 714, 716, 719, 734, 735, 741, 751, 753, 755, 759, 762, 766, 768, 769, 771, 772, 773, 778, 780, 781, 782, 795, 796, 797, 798, 799, 801], "transformedtsm": 780, "transformfunct": 780, "transformlay": 780, "transient": [577, 659, 687], "transit": [582, 599, 631, 659, 681, 699, 713, 714, 716, 736, 740, 747, 750, 757, 769, 773, 779, 796], "translat": [585, 586, 599, 602, 605, 610, 614, 647, 648, 650, 651, 655, 656, 663, 664, 666, 667, 669, 671, 675, 681, 685, 702, 706, 717, 718, 722, 729, 732, 734, 737, 738, 740, 741, 750, 751, 759, 760, 768, 771, 777, 801, 802], "transmit": 702, "transpar": [602, 651, 662, 669, 697, 705, 734], "trap": [49, 123, 143, 147, 148, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 208, 239, 246, 247, 257, 258, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 362, 474, 596, 609, 655, 666, 669, 697], "trap_pres": 582, "travers": [599, 608, 650, 663, 668, 678, 683, 695, 714, 732, 741, 773], "trc": 599, "tre": 732, "treat": [50, 144, 241, 367, 479, 577, 582, 586, 588, 589, 597, 599, 603, 606, 608, 613, 619, 622, 631, 633, 645, 651, 661, 663, 667, 669, 676, 698, 699, 701, 702, 704, 705, 708, 714, 717, 718, 722, 748, 750, 753, 755, 759, 761, 766, 771, 775, 795, 802], "treatment": [582, 668, 734, 771], "tree": [582, 584, 595, 597, 599, 601, 602, 608, 636, 650, 659, 661, 664, 666, 667, 668, 669, 670, 671, 673, 674, 676, 690, 693, 695, 702, 703, 706, 714, 715, 716, 717, 718, 734, 736, 741, 743, 747, 750, 757, 761, 765, 766, 772, 773, 775, 793, 795, 796, 797, 798, 799, 800, 801], "trevi": 594, "tri": [585, 586, 587, 588, 592, 593, 594, 597, 599, 600, 602, 604, 622, 636, 651, 652, 654, 659, 660, 666, 667, 668, 670, 671, 673, 674, 687, 696, 704, 708, 709, 711, 713, 714, 716, 717, 729, 732, 734, 736, 737, 739, 745, 746, 747, 748, 751, 752, 756, 767, 771, 773, 774, 777, 780, 781, 782, 796, 798, 799, 800, 802], "triag": [599, 670, 697], "trick": [654, 659, 672, 693, 695, 702, 734, 736, 751, 759, 799], "tricker": 701, "tricki": [586, 652, 668, 764, 773], "trickrevnum": 736, "trie": 634, "trig": 771, "trigger": [581, 582, 585, 593, 597, 602, 624, 655, 668, 687, 696, 701, 702, 703, 704, 707, 708, 716, 717, 733, 734, 753, 757, 765, 766, 777, 779, 781, 796], "trim": 736, "triniti": 582, "trip": [588, 602, 702, 706, 732, 741, 751, 767], "tripcount": 702, "tripl": [589, 609, 611, 631, 634, 666, 667, 690, 693, 701, 707, 708, 717, 739, 750, 766, 771, 800, 801], "triplet": [651, 702], "trivial": [582, 585, 586, 588, 598, 599, 601, 602, 651, 662, 664, 669, 671, 678, 680, 687, 697, 700, 701, 702, 706, 732, 733, 734, 736, 737, 748, 750, 751, 756, 757, 771, 773, 776, 794, 799, 802, 803], "troubl": [651, 667, 671, 673], "true": [582, 585, 586, 591, 598, 599, 602, 603, 604, 608, 611, 617, 623, 631, 637, 646, 651, 655, 656, 659, 668, 669, 675, 676, 680, 686, 687, 689, 693, 695, 697, 699, 701, 702, 704, 706, 708, 714, 715, 716, 722, 730, 732, 734, 736, 747, 748, 750, 759, 760, 762, 766, 767, 768, 771, 772, 773, 774, 775, 777, 781, 794, 795, 796, 797, 798, 799, 800, 801], "true_branch_weight": 591, "truebr": 750, "truedest": 702, "truli": [712, 734, 751, 781], "trunc": [697, 770], "truncat": [26, 61, 126, 211, 251, 372, 392, 485, 505, 577, 581, 613, 697, 702, 771], "truncinst": 732, "trunk": [596, 599, 660, 670, 674, 694, 704, 733, 736, 750, 764], "trust": [602, 659, 747, 748, 750, 781], "truth": [659, 702, 713, 797], "ts": 577, "tsc": [775, 776], "tsc701": 771, "tsc_delta": 776, "tsctx": 717, "tsds": 747, "tsflag": [761, 771], "tslp": 741, "tsm": [717, 722, 779, 780, 781, 782, 796, 797, 798, 799], "tsm1": 717, "tsm2": 717, "tstri": 708, "tsvg": 775, "tt": [699, 701], "tti": [739, 740], "ttmp": [10, 11, 12, 13, 22, 23, 24, 34, 35, 36, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 116, 117, 124, 152, 153, 154, 155, 156, 209, 253, 254, 255, 256, 259, 260, 307, 308, 312, 313, 319, 320, 321, 322, 323, 342, 345, 346, 347, 348, 349, 351, 352, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 396, 397, 398, 399, 402, 403, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 582], "ttmp0": 581, "ttmp4": 581, "ttmp5": 581, "ttmp6": 581, "ttmp7": 581, "tu": 622, "tuesday": 670, "tunabl": [687, 737, 747], "tune": [599, 651, 666, 734, 747, 750, 751, 770, 799], "tupl": [663, 680, 702, 736], "turbo": 587, "ture": [794, 796], "turk": 582, "turn": [577, 582, 586, 588, 593, 594, 597, 598, 599, 600, 603, 613, 651, 655, 659, 662, 671, 689, 691, 702, 705, 706, 709, 713, 717, 718, 731, 732, 741, 746, 750, 755, 759, 761, 762, 771, 773, 779, 780, 781, 794, 795, 802], "turner": 739, "turnercamelback": 739, "turnerlldb": 739, "tutori": [651, 652, 670, 671, 685, 695, 704, 714, 717, 734, 778, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801], "tval": 750, "tweak": [651, 652, 671, 674, 695, 731, 774, 779, 796], "twice": [584, 655, 673, 674, 676, 702, 706, 714, 734, 744, 764, 773, 796], "twiddl": [702, 796, 797, 798, 799], "twine": [701, 760], "twist": 779, "twitter": 711, "two": [577, 580, 581, 582, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 602, 603, 608, 611, 619, 620, 622, 623, 630, 631, 636, 637, 646, 651, 652, 655, 656, 658, 659, 660, 661, 663, 665, 666, 667, 668, 671, 675, 676, 680, 681, 683, 685, 687, 688, 691, 695, 696, 699, 700, 701, 702, 703, 704, 706, 707, 708, 713, 714, 715, 716, 717, 719, 722, 726, 729, 732, 733, 734, 735, 736, 739, 745, 747, 748, 750, 751, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 768, 770, 771, 773, 775, 777, 779, 780, 781, 794, 796, 797, 798, 799, 802], "twoaddressinstructionpass": 599, "twoargfp": 761, "twooperandaliasconstraint": 761, "twos": 577, "txt": [584, 597, 602, 608, 618, 631, 644, 646, 651, 654, 659, 671, 687, 694, 709, 733, 736, 750, 752, 760, 764, 766, 771, 772, 773, 775, 779, 780, 781, 782], "ty": [602, 662, 702, 734], "ty2": 702, "ty64": 697, "type": [55, 146, 245, 370, 482, 578, 582, 585, 586, 588, 589, 591, 593, 594, 596, 597, 599, 604, 606, 609, 613, 615, 618, 619, 622, 624, 629, 631, 632, 633, 634, 641, 645, 650, 651, 652, 655, 658, 659, 661, 663, 664, 667, 668, 671, 673, 677, 680, 681, 683, 685, 689, 693, 694, 695, 696, 697, 698, 700, 701, 703, 705, 707, 710, 713, 714, 715, 716, 720, 724, 727, 730, 733, 735, 739, 741, 743, 745, 750, 751, 753, 755, 757, 760, 762, 764, 765, 766, 769, 773, 774, 775, 776, 779, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 805], "type0": 680, "type1": 680, "type_info": 661, "type_nam": 582, "typecod": 662, "typedef": [602, 636, 650, 663, 734, 777, 780], "typedescriptor2": 661, "typeendbegin": 729, "typeflag": [650, 750], "typeid": [662, 702, 714, 768], "typeid1": 768, "typeid2": 768, "typeid3": 768, "typeidref": 702, "typeindex": [721, 729], "typeindexbegin": 729, "typeindexend": 729, "typeinto": 690, "typeless": 579, "typemap": 662, "typenam": [582, 702, 734], "typeof_": 759, "typeof_kind": 759, "typeof_xxx": 759, "typeprint": 662, "typerecordbyt": 729, "typesaf": 702, "typeservermaps": 722, "typeset": 680, "typetestr": 702, "typic": [577, 582, 585, 586, 597, 599, 602, 603, 613, 615, 617, 623, 628, 632, 642, 652, 658, 660, 661, 665, 667, 668, 669, 673, 675, 676, 677, 681, 688, 692, 694, 695, 701, 702, 703, 704, 705, 707, 708, 710, 716, 717, 718, 719, 727, 732, 733, 734, 735, 737, 745, 747, 750, 751, 753, 760, 761, 764, 766, 770, 771, 773, 776, 802], "typo": [602, 603], "u1": 736, "u16": [0, 3, 4, 9, 581], "u16x2": [0, 1, 2, 3, 4, 7, 8, 9], "u2": [736, 745], "u3": [736, 745], "u32": [0, 1, 2, 3, 4, 7, 8, 9, 578, 581, 599, 715, 745], "u4x8": [1, 7, 8, 9], "u64": [0, 2, 3, 4, 9, 581, 715], "u8x4": [0, 1, 2, 3, 4, 7, 8, 9], "u999999": 733, "ualpha": 761, "uav": 582, "uavexportt": 582, "ub": 702, "ubsan": [597, 704, 747], "ubuntu": [659, 671, 689, 693], "ubyt": [577, 582], "uc": 582, "uclock_realtim": 690, "ud2": [596, 599], "ud2a": 599, "udiv": 675, "ueq": [702, 799], "ueyama": 739, "uf": 741, "ufmt": 0, "uge": 702, "ugli": [603, 664, 798], "uglifi": 796, "ugt": 702, "ui": [598, 733], "uid": [613, 627, 633, 645, 702], "uimm20": [57, 247, 248, 397, 510], "uimm32": 148, "uimm8": 148, "uint": [609, 636], "uint128": 729, "uint128oct": 729, "uint16": [665, 726, 729, 753], "uint16_t": [582, 699, 721, 722, 729, 730, 750, 759, 771, 777], "uint16short": 729, "uint16x4_t": 588, "uint32": [665, 724, 729, 753], "uint32_max": [734, 750], "uint32_t": [582, 655, 702, 722, 725, 727, 729, 750, 777], "uint32long": 729, "uint32x2_t": 588, "uint64": [665, 729, 753], "uint64_max": 590, "uint64_t": [590, 698, 701, 702, 714, 730, 734, 745, 777], "uint64quad": 729, "uint8": [665, 753], "uint8_t": [582, 704, 721, 725, 759, 777], "uint_64": 582, "uint_max": [702, 706], "uintptr_t": 751, "uitofp": [795, 797, 799], "uiuc": 659, "ule": 702, "uleb": 582, "uleb128": [577, 663], "ulimit": 704, "ulittle32_t": [726, 727], "ulp": 702, "ult": [702, 750, 797, 799], "ultim": [602, 608, 659, 702, 713, 744, 750, 751, 796], "ultrasparc": [671, 771], "ultrasparc3": 771, "um": [702, 736], "um1": 736, "um2": 736, "um3": 736, "um4": 736, "um5": 736, "um6": 736, "um7": 736, "um8": 736, "umbrella": [659, 736], "uml": 658, "umrella": 736, "un": [702, 770, 779], "unabbrev": 589, "unabbrevi": 589, "unabl": [600, 631, 657, 666, 680, 702, 703, 719, 734, 751], "unabridg": 799, "unaccept": 659, "unadorn": 702, "unaffect": 713, "unalign": [586, 666, 721], "unalloc": 712, "unambigu": 697, "unannot": 736, "unari": [761, 799, 800, 801, 802, 803], "unaryexprast": [798, 799, 800, 801], "unassign": [581, 592], "unassignedbug": 592, "unattend": 593, "unavail": [586, 631, 657, 697, 750, 771], "unawar": [652, 702], "unbias": 590, "unblock": 659, "unbound": [599, 631, 702, 771], "unbuild": 736, "uncach": 582, "uncaptur": 702, "uncategor": 651, "uncertain": [654, 659, 757], "uncertainti": [594, 601], "unchang": [577, 585, 702, 734, 736, 750, 755, 767], "uncharacter": 729, "uncheck": 734, "unclear": [577, 602, 603, 722, 727, 729, 799], "unclutt": 756, "uncomfort": 600, "uncommon": [598, 661, 680, 702], "uncompil": 717, "uncompress": [597, 656, 671, 734], "uncondit": [577, 585, 599, 602, 617, 663, 676, 688, 697, 702, 706, 732, 755, 771, 781, 797, 801], "unconnect": 669, "uncontroversi": 668, "unconvent": 802, "unconvinc": 704, "uncoop": 668, "uncov": [597, 602, 704], "undecid": 736, "undeclar": [702, 795], "undef": [586, 603, 655, 661, 677, 697, 700, 702, 708, 713, 734, 750, 759], "undefin": [582, 586, 588, 592, 597, 602, 603, 632, 633, 636, 645, 655, 661, 663, 664, 666, 669, 676, 679, 696, 701, 705, 706, 713, 732, 734, 747, 750, 759, 761, 762, 767, 770, 771], "undefinedbehaviorsanit": 704, "undefinit": 702, "under": [582, 584, 587, 588, 597, 599, 602, 604, 608, 625, 631, 640, 641, 651, 655, 656, 659, 661, 664, 666, 668, 670, 671, 675, 676, 686, 688, 694, 696, 700, 701, 702, 704, 706, 712, 715, 717, 718, 726, 727, 733, 734, 736, 747, 748, 751, 755, 760, 762, 766, 768, 769, 771, 772, 773, 779, 780, 781, 782, 794, 801, 802, 804], "underestim": [631, 702], "underflow": [577, 581, 582, 603], "undergo": [601, 702, 717, 732], "undermin": [602, 750], "underneath": [671, 735, 736, 766], "underscor": [602, 618, 708, 750], "understand": [585, 589, 592, 599, 600, 601, 602, 603, 608, 613, 631, 659, 661, 662, 668, 669, 692, 702, 706, 709, 710, 714, 720, 721, 725, 730, 732, 733, 734, 737, 746, 747, 750, 751, 752, 755, 756, 762, 773, 775, 776, 777, 781, 795, 799, 801, 803], "understood": [589, 599, 601, 602, 722, 725], "undesir": [702, 748], "undetect": [704, 747], "undisturb": 602, "undo": 588, "undocu": [661, 722], "undu": 757, "une": 702, "unequ": [603, 702], "unexpect": [577, 594, 596, 598, 602, 659, 673, 714, 734, 747, 761, 766, 799], "unfamiliar": 752, "unflatten": 775, "unfold": 751, "unforeseen": 685, "unfortun": [652, 690, 692, 700, 702, 714, 734, 736, 750, 751, 773, 796, 797, 802], "unfriend": 704, "unfus": 652, "unglamor": 659, "unguard": 702, "unhandl": [661, 734], "unhappi": 652, "unharden": 751, "unhid": 651, "uni": 715, "unic": 651, "unicod": 634, "unif": [577, 585], "unifi": [577, 580, 582, 589, 603, 666, 692, 702, 734, 736, 745], "unifom": 582, "uniform": [602, 631, 702, 719, 734], "uniformretv": 702, "unimagin": 755, "unimpl": 773, "unimport": [744, 755], "unindex": 771, "uniniti": [577, 632, 668, 669, 702, 754, 760, 761], "uninstru": 722, "unintend": 732, "unintent": 659, "uninterest": 659, "unintrus": 702, "union": [577, 585, 599, 602, 631, 680, 722, 750, 799], "uniprocessor": 586, "uniqu": [582, 589, 599, 603, 606, 608, 632, 633, 655, 656, 659, 661, 663, 688, 690, 697, 698, 699, 702, 705, 714, 717, 719, 722, 727, 729, 734, 736, 750, 753, 755, 757, 760, 761, 762, 767, 770, 775, 795, 796], "unique_ptr": [701, 715, 717, 734, 760, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "uniqueid": 727, "uniqueretv": 702, "unistd": 756, "unit": [49, 50, 143, 144, 239, 241, 362, 367, 474, 479, 588, 596, 597, 602, 604, 617, 622, 651, 654, 655, 656, 661, 663, 664, 669, 676, 681, 697, 701, 702, 703, 704, 716, 717, 719, 722, 730, 732, 733, 734, 737, 745, 750, 751, 757, 759, 760, 768, 770, 771, 772, 773, 796], "unittest": [596, 597, 764, 766], "univers": 734, "universal": [598, 607, 617, 634, 635, 642, 646, 656, 702], "universiti": [658, 659, 711], "unix": [597, 602, 603, 613, 651, 664, 667, 671, 673, 701, 702, 734, 756, 766], "unknown": [581, 582, 599, 623, 629, 631, 651, 657, 660, 676, 679, 686, 690, 692, 702, 716, 722, 725, 726, 730, 734, 751, 767, 777, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801], "unknownptr": 702, "unknownvalu": 702, "unless": [577, 582, 584, 593, 595, 597, 598, 599, 601, 602, 603, 606, 608, 609, 617, 618, 622, 624, 628, 631, 633, 634, 651, 652, 655, 659, 661, 666, 668, 669, 694, 702, 704, 709, 713, 717, 730, 732, 734, 736, 739, 746, 748, 752, 753, 755, 757, 760, 764, 765, 766, 767, 771, 773, 797, 799], "unlik": [577, 586, 589, 595, 598, 599, 601, 602, 644, 652, 661, 668, 671, 676, 686, 687, 689, 695, 702, 713, 717, 732, 734, 739, 750, 751, 753, 755, 761, 772, 773, 781, 796, 799], "unlimit": 631, "unlink": [671, 734], "unload": [702, 773], "unlock": 717, "unmaintain": [659, 762], "unmanag": [702, 755], "unmangl": 619, "unmap": 747, "unmask": 702, "unmatch": 637, "unmitig": 751, "unmodel": 631, "unmodifi": [580, 702, 755, 780], "unnam": [598, 651, 702, 708, 732, 743, 761], "unnamed_addr": [589, 663, 702], "unnecessari": [577, 596, 599, 666, 677, 697, 702, 708, 732, 734, 751, 754, 755, 771, 781], "unnecessarili": [585, 601, 773], "unneed": [633, 645, 799], "unnorm": [580, 702], "uno": 702, "unoffici": [669, 738], "unop": [581, 798, 799, 800, 801], "unoptim": [609, 671, 750], "unord": [582, 597, 602, 603, 709, 752, 755, 771], "unordered_map": 602, "unordered_set": 734, "unorm": [0, 2, 3, 4, 9], "unpack": [654, 672, 693], "unpars": [608, 794], "unpatch": [694, 774], "unpeel": 582, "unpleas": 751, "unpoison": 702, "unpredict": 751, "unprofit": [732, 751, 767], "unprotect": [596, 751], "unprototyp": 702, "unqualifi": [599, 601, 750], "unreach": [594, 602, 624, 655, 656, 661, 665, 666, 668, 694, 701, 706, 714, 732, 796, 797, 798, 799, 801], "unread": [586, 602, 674, 736, 751], "unreason": 659, "unrecogn": [651, 761], "unrecogniz": 632, "unrecurs": [799, 800, 801], "unreferenc": [598, 701, 702], "unregist": 773, "unrel": [602, 633, 641, 654, 659, 694, 734, 750, 751, 771], "unreli": [585, 704], "unreloc": [702, 755], "unreserv": 582, "unresolv": [608, 802], "unrespons": 736, "unreview": 659, "unrol": [623, 652, 741], "unroll_and_jam": 767, "unsaf": [586, 609, 611, 702, 750, 753, 754, 767, 802], "unsat": 702, "unseen": 589, "unset": [597, 598, 724, 760, 761, 801], "unsett": 773, "unshadow": [797, 798, 799, 800, 801], "unsign": [56, 57, 58, 147, 148, 246, 247, 248, 342, 395, 396, 397, 508, 509, 510, 577, 579, 580, 582, 585, 589, 591, 599, 602, 603, 609, 637, 651, 656, 668, 669, 675, 676, 702, 705, 706, 708, 714, 715, 718, 729, 734, 750, 751, 759, 770, 771, 775, 776, 777, 795, 796, 797, 798, 799, 800, 801], "unsignedcharact": 729, "unsimm": 599, "unsound": 755, "unspecifi": [577, 594, 599, 619, 633, 676, 702, 715, 759, 761, 765, 776], "unstabl": [596, 623, 689, 702, 744], "unstructur": 776, "unsuccess": 717, "unsuit": [596, 659, 690, 764], "unsuppor": 582, "unsupport": [582, 586, 599, 608, 673, 680, 681, 701, 702, 704, 744, 766, 771], "unsupportedfor": 680, "unsupportedif": 680, "unsur": [601, 659, 746], "unswitch": 706, "unswizzl": [577, 582], "untest": 744, "until": [577, 582, 588, 589, 593, 599, 601, 602, 604, 608, 623, 631, 632, 651, 654, 655, 659, 661, 666, 671, 674, 675, 681, 698, 701, 702, 704, 707, 713, 717, 718, 720, 732, 733, 734, 736, 744, 746, 748, 750, 751, 761, 764, 766, 771, 773, 774, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801], "untrust": 748, "untrusted_data_from_cal": 751, "untrusted_offset_from_cal": 751, "untrusted_size_from_cal": 751, "untyp": [708, 718], "unus": [55, 146, 222, 234, 236, 245, 370, 482, 577, 580, 581, 582, 594, 599, 602, 603, 624, 655, 703, 715, 716, 719, 721, 722, 726, 729, 734, 747, 750, 755, 767, 768, 776], "unused1": 722, "unused2": 722, "unused_pad": [580, 582], "unused_preserv": [580, 582], "unused_sext": 580, "unusu": [599, 602, 659, 667, 668, 681, 734, 749, 761, 802], "unvectoriz": 770, "unvers": 767, "unvisit": 594, "unwelcom": 600, "unwieldi": 774, "unwind": [577, 582, 591, 597, 599, 634, 640, 641, 655, 661, 663, 666, 687, 690, 700, 702, 703, 732, 743, 771, 781], "unwindcursor": 661, "unwindregistersrestor": 661, "unwindregisterssav": 661, "unwis": 702, "unwound": [577, 702, 751], "unwrap": [717, 734, 779], "unzip": [671, 744], "uop": [623, 631], "up": [577, 584, 585, 588, 589, 590, 592, 594, 595, 597, 599, 600, 601, 602, 604, 608, 611, 622, 623, 631, 634, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 667, 668, 671, 672, 673, 678, 682, 686, 687, 688, 689, 690, 692, 693, 694, 696, 701, 702, 703, 704, 706, 708, 710, 713, 714, 715, 716, 718, 719, 720, 722, 727, 729, 730, 732, 734, 736, 742, 743, 744, 745, 746, 747, 748, 750, 751, 755, 759, 761, 762, 764, 765, 766, 767, 770, 771, 775, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "upa": 702, "upcast": 695, "upcom": [657, 659, 711], "updat": [577, 582, 588, 596, 599, 601, 603, 606, 613, 633, 645, 651, 654, 655, 661, 662, 668, 671, 673, 695, 701, 702, 705, 706, 707, 708, 712, 714, 716, 717, 718, 726, 729, 732, 733, 734, 739, 746, 747, 748, 750, 751, 753, 755, 767, 773, 774, 779, 780, 781, 794, 795, 796, 797, 798, 799, 800, 801, 802], "upenn": 587, "upgrad": [659, 670, 671, 718, 736, 741, 750, 770], "upheld": 755, "uphold": [702, 751], "upl": 702, "upload": [671, 694, 733, 736], "upon": [577, 613, 649, 659, 668, 702, 707, 717, 734, 735, 739, 748, 750, 771], "upper": [577, 580, 582, 602, 604, 632, 702, 716, 734, 739, 759, 771], "upper16": 663, "uppercas": [582, 595, 761], "uppercasemod": 760, "upset": 650, "upsid": 659, "upstream": [577, 654, 659, 660, 666, 671, 694, 736, 755, 757], "upstream_branch": 736, "upward": [608, 702, 737, 750], "uq": 702, "urem": [599, 662], "urgent": 601, "uri_encoded_os_file_path": 582, "url": [709, 733, 736, 752], "us": [599, 600, 602, 603, 626, 651, 654, 656, 658, 659, 675, 677, 681, 687, 691, 696, 701, 702, 706, 713, 714, 715, 717, 730, 733, 734, 736, 737, 738, 743, 745, 750, 768, 773, 775, 779, 780, 781, 794, 795, 796, 798, 799, 800, 801, 803], "usabl": [599, 609, 651, 690, 734, 740, 750, 771, 775], "usag": [582, 591, 599, 602, 603, 604, 618, 622, 623, 627, 629, 631, 633, 634, 636, 646, 651, 655, 656, 671, 675, 677, 689, 702, 708, 714, 715, 717, 720, 721, 722, 729, 732, 734, 742, 745, 754, 755, 759, 762, 764, 766, 769, 773], "usb": 689, "use": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 20, 41, 42, 43, 52, 53, 54, 55, 59, 65, 66, 67, 88, 100, 101, 115, 121, 137, 138, 139, 145, 146, 149, 154, 174, 202, 206, 231, 232, 233, 242, 243, 244, 245, 249, 255, 278, 304, 306, 311, 316, 317, 318, 337, 339, 340, 341, 343, 346, 354, 368, 369, 370, 371, 373, 374, 412, 425, 426, 427, 449, 459, 460, 471, 480, 481, 482, 483, 486, 487, 524, 538, 539, 540, 563, 566, 567, 572, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 589, 590, 591, 592, 594, 595, 596, 600, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 621, 622, 623, 624, 627, 628, 632, 633, 634, 635, 636, 637, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 665, 668, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 688, 689, 690, 694, 695, 696, 700, 701, 703, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 718, 722, 724, 726, 727, 729, 730, 733, 735, 736, 737, 738, 739, 741, 742, 744, 745, 746, 747, 748, 749, 750, 753, 754, 755, 757, 759, 760, 762, 764, 765, 766, 767, 769, 770, 771, 772, 775, 776, 777, 778, 779, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804], "use_": 734, "use_back": 734, "use_begin": [602, 734], "use_count": 704, "use_empti": 734, "use_end": 734, "use_iter": 734, "use_s": 734, "use_value_profil": 704, "usedlib": 735, "useless": [588, 691, 750, 797, 802], "uselistord": 702, "uselistorder_bb": 702, "usenamedoperandt": [761, 771], "user": [577, 584, 585, 586, 590, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 608, 610, 615, 623, 631, 637, 647, 648, 650, 651, 653, 654, 655, 656, 659, 661, 663, 668, 670, 671, 677, 680, 687, 688, 691, 692, 694, 695, 701, 702, 703, 705, 706, 710, 711, 713, 714, 717, 718, 730, 731, 733, 736, 737, 741, 743, 745, 747, 748, 750, 751, 752, 754, 757, 759, 760, 762, 766, 767, 769, 770, 771, 773, 776, 778, 779, 793, 794, 795, 796, 797, 800, 801, 802, 803, 804], "user_data": 582, "user_data_entri": 582, "user_data_limit": 582, "user_sgpr": 582, "user_sgpr_count": 582, "usercb": 704, "userdatamap": 582, "userdefinederror": 734, "usernam": [659, 736, 748], "userspac": 661, "uses_append_consum": 582, "uses_prim_id": 582, "uses_rov": 582, "uses_uav": 582, "uses_viewport_array_index": 582, "usescustominsert": [761, 762], "usesmetadata": 668, "usr": [597, 627, 651, 652, 660, 671, 686, 687, 689, 692, 693, 704, 715], "usual": [581, 585, 586, 589, 593, 597, 599, 602, 603, 615, 631, 632, 649, 651, 652, 655, 659, 662, 663, 668, 669, 671, 674, 675, 676, 680, 686, 692, 695, 701, 702, 703, 704, 705, 706, 708, 709, 714, 717, 718, 722, 727, 729, 733, 734, 736, 743, 747, 748, 749, 750, 752, 754, 757, 760, 761, 764, 765, 766, 771, 773, 779, 801, 802], "ut": 702, "utc": 670, "utf": [577, 582, 650, 663, 759], "util": [577, 582, 584, 585, 597, 602, 611, 613, 615, 631, 632, 634, 637, 638, 650, 651, 659, 660, 668, 673, 685, 691, 694, 695, 696, 702, 706, 717, 734, 743, 744, 748, 759, 762, 764, 769, 770, 771, 772, 779, 781, 794, 799, 800], "uuid": 622, "uuidcreat": 727, "uv": 702, "uval": 702, "uvari": 597, "uword": 582, "uwtabl": [589, 702, 750, 774], "uy": 702, "v0": [21, 122, 207, 472, 577, 580, 581, 582, 588, 702], "v1": [21, 122, 207, 472, 577, 581, 582, 585, 602, 702, 742, 751, 753, 761, 766], "v10": 652, "v110": 722, "v128": [702, 715], "v16": 715, "v16f32": 702, "v16i1": 702, "v16i32": 702, "v16p0f32": 702, "v16p1f32": 702, "v1f64": 675, "v1size": 585, "v2": [581, 585, 602, 653, 664, 674, 702, 722, 734, 738, 761, 766, 779, 780, 781, 782], "v200": 582, "v252": 581, "v253": 581, "v254": 581, "v255": [580, 581], "v256f64": 702, "v256i64": 702, "v2f64": 702, "v2i32": 702, "v2i64": 702, "v2i8": 702, "v2p1f64": 702, "v2s32": 680, "v2s64": 680, "v2size": 585, "v3": [88, 174, 278, 572, 766], "v31": 702, "v32": [581, 715], "v36": 580, "v3i32": 675, "v4": [580, 581], "v40": 729, "v41": 729, "v4f128": 702, "v4f32": [675, 702], "v4f64": 702, "v4i1": 702, "v4i100": 702, "v4i32": 702, "v4p0f64": 702, "v4p0f_i32f": 702, "v4p0p0f64": 702, "v4s32": 680, "v4t": 692, "v5": [580, 582, 750], "v50": [722, 729], "v520": 582, "v6": [582, 692], "v60": 722, "v64": [702, 715], "v68": 743, "v7": 692, "v70": [722, 729], "v8": [586, 653, 771], "v80": 729, "v8deprecatedinst": 771, "v8f64": 702, "v8i1": 702, "v8i16": 771, "v8i32": 702, "v8p0f32": 702, "v8p0f64": 702, "v8p0f_i32f": 702, "v8p0i32": 702, "v8p0p0f32": 702, "v9": [653, 671, 771], "v_accvgpr_mov_b32": 9, "v_accvgpr_read_b32": [8, 9], "v_accvgpr_write_b32": [8, 9], "v_add3_u32": [0, 4, 9], "v_add_co_ci_u32": 0, "v_add_co_ci_u32_dpp": 0, "v_add_co_ci_u32_e64": 0, "v_add_co_ci_u32_sdwa": 0, "v_add_co_u32": [0, 4, 9], "v_add_co_u32_dpp": [4, 9], "v_add_co_u32_e32": 581, "v_add_co_u32_e64": [4, 9], "v_add_co_u32_sdwa": [4, 9], "v_add_f16": [0, 3, 4, 9, 581], "v_add_f16_dpp": [0, 3, 4, 9], "v_add_f16_e64": [0, 3, 4, 9], "v_add_f16_sdwa": [0, 3, 4, 9], "v_add_f32": [0, 2, 3, 4, 9, 581, 582], "v_add_f32_dpp": [0, 3, 4, 9], "v_add_f32_e32": 582, "v_add_f32_e64": [0, 2, 3, 4, 9], "v_add_f32_sdwa": [0, 3, 4, 9], "v_add_f64": [0, 2, 3, 4, 9], "v_add_i16": [4, 9], "v_add_i32": [2, 4, 9], "v_add_i32_e64": 2, "v_add_lshl_u32": [0, 4, 9], "v_add_nc_i16": 0, "v_add_nc_i32": 0, "v_add_nc_u16": 0, "v_add_nc_u32": 0, "v_add_nc_u32_dpp": 0, "v_add_nc_u32_e64": 0, "v_add_nc_u32_sdwa": 0, "v_add_u16": [3, 4, 9, 581], "v_add_u16_dpp": [3, 4, 9], "v_add_u16_e64": [3, 4, 9], "v_add_u16_sdwa": [3, 4, 9], "v_add_u32": [3, 4, 9, 581], "v_add_u32_dpp": [3, 4, 9], "v_add_u32_e64": [3, 4, 9], "v_add_u32_sdwa": [3, 4, 9], "v_addc_co_u32": [4, 9], "v_addc_co_u32_dpp": [4, 9], "v_addc_co_u32_e64": [4, 9], "v_addc_co_u32_sdwa": [4, 9], "v_addc_u32": [2, 3, 582], "v_addc_u32_dpp": 3, "v_addc_u32_e64": [2, 3], "v_addc_u32_sdwa": 3, "v_alignbit_b32": [0, 2, 3, 4, 9], "v_alignbyte_b32": [0, 2, 3, 4, 9], "v_and_b32": [0, 2, 3, 4, 9], "v_and_b32_dpp": [0, 3, 4, 9], "v_and_b32_e64": [0, 2, 3, 4, 9], "v_and_b32_sdwa": [0, 3, 4, 9], "v_and_or_b32": [0, 4, 9], "v_ashr_i32": 2, "v_ashr_i32_e64": 2, "v_ashr_i64": 2, "v_ashrrev_i16": [0, 3, 4, 9], "v_ashrrev_i16_dpp": [3, 4, 9], "v_ashrrev_i16_e64": [3, 4, 9], "v_ashrrev_i16_sdwa": [3, 4, 9], "v_ashrrev_i32": [0, 2, 3, 4, 9], "v_ashrrev_i32_dpp": [0, 3, 4, 9], "v_ashrrev_i32_e64": [0, 2, 3, 4, 9], "v_ashrrev_i32_sdwa": [0, 3, 4, 9], "v_ashrrev_i64": [0, 3, 4, 9], "v_bcnt_u32_b32": [0, 2, 3, 4, 9], "v_bcnt_u32_b32_e64": 2, "v_bfe_i32": [0, 2, 3, 4, 9], "v_bfe_u32": [0, 2, 3, 4, 9], "v_bfi_b32": [0, 2, 3, 4, 9], "v_bfm_b32": [0, 2, 3, 4, 9], "v_bfm_b32_e64": 2, "v_bfrev_b32": [0, 2, 3, 4, 9], "v_bfrev_b32_dpp": [0, 3, 4, 9], "v_bfrev_b32_e32": 582, "v_bfrev_b32_e64": [0, 2, 3, 4, 9], "v_bfrev_b32_sdwa": [0, 3, 4, 9], "v_ceil_f16": [0, 3, 4, 9], "v_ceil_f16_dpp": [0, 3, 4, 9], "v_ceil_f16_e64": [0, 3, 4, 9], "v_ceil_f16_sdwa": [0, 3, 4, 9], "v_ceil_f32": [0, 2, 3, 4, 9], "v_ceil_f32_dpp": [0, 3, 4, 9], "v_ceil_f32_e64": [0, 2, 3, 4, 9], "v_ceil_f32_sdwa": [0, 3, 4, 9], "v_ceil_f64": [0, 2, 3, 4, 9, 581], "v_ceil_f64_dpp": 9, "v_ceil_f64_e32": 581, "v_ceil_f64_e64": [0, 2, 3, 4, 9], "v_clrexcp": [0, 2, 3, 4, 9], "v_clrexcp_e64": [0, 2, 3, 4, 9], "v_cmp": 580, "v_cmp_class_f16": [0, 3, 4, 9], "v_cmp_class_f16_e64": [0, 3, 4, 9], "v_cmp_class_f16_sdwa": [0, 3, 4, 9], "v_cmp_class_f32": [0, 2, 3, 4, 9], "v_cmp_class_f32_e64": [0, 2, 3, 4, 9], "v_cmp_class_f32_sdwa": [0, 3, 4, 9], "v_cmp_class_f64": [0, 2, 3, 4, 9], "v_cmp_class_f64_e64": [0, 2, 3, 4, 9], "v_cmp_eq_f16": [0, 3, 4, 9], "v_cmp_eq_f16_e64": [0, 3, 4, 9], "v_cmp_eq_f16_sdwa": [0, 3, 4, 9], "v_cmp_eq_f32": [0, 2, 3, 4, 9], "v_cmp_eq_f32_e64": [0, 2, 3, 4, 9], "v_cmp_eq_f32_sdwa": [0, 3, 4, 9], "v_cmp_eq_f64": [0, 2, 3, 4, 9], "v_cmp_eq_f64_e64": [0, 2, 3, 4, 9], "v_cmp_eq_i16": [0, 3, 4, 9], "v_cmp_eq_i16_e64": [0, 3, 4, 9], "v_cmp_eq_i16_sdwa": [0, 3, 4, 9], "v_cmp_eq_i32": [0, 2, 3, 4, 9], "v_cmp_eq_i32_e64": [0, 2, 3, 4, 9], "v_cmp_eq_i32_sdwa": [0, 3, 4, 9], "v_cmp_eq_i64": [0, 2, 3, 4, 9], "v_cmp_eq_i64_e64": [0, 2, 3, 4, 9], "v_cmp_eq_u16": [0, 3, 4, 9], "v_cmp_eq_u16_e64": [0, 3, 4, 9], "v_cmp_eq_u16_sdwa": [0, 3, 4, 9], "v_cmp_eq_u32": [0, 2, 3, 4, 9], "v_cmp_eq_u32_e64": [0, 2, 3, 4, 9], "v_cmp_eq_u32_sdwa": [0, 3, 4, 9], "v_cmp_eq_u64": [0, 2, 3, 4, 9], "v_cmp_eq_u64_e64": [0, 2, 3, 4, 9], "v_cmp_f_f16": [0, 3, 4, 9], "v_cmp_f_f16_e64": [0, 3, 4, 9], "v_cmp_f_f16_sdwa": [0, 3, 4, 9], "v_cmp_f_f32": [0, 2, 3, 4, 9], "v_cmp_f_f32_e64": [0, 2, 3, 4, 9], "v_cmp_f_f32_sdwa": [0, 3, 4, 9], "v_cmp_f_f64": [0, 2, 3, 4, 9], "v_cmp_f_f64_e64": [0, 2, 3, 4, 9], "v_cmp_f_i16": [3, 4, 9], "v_cmp_f_i16_e64": [3, 4, 9], "v_cmp_f_i16_sdwa": [3, 4, 9], "v_cmp_f_i32": [0, 2, 3, 4, 9], "v_cmp_f_i32_e64": [0, 2, 3, 4, 9], "v_cmp_f_i32_sdwa": [0, 3, 4, 9], "v_cmp_f_i64": [0, 2, 3, 4, 9], "v_cmp_f_i64_e64": [0, 2, 3, 4, 9], "v_cmp_f_u16": [3, 4, 9], "v_cmp_f_u16_e64": [3, 4, 9], "v_cmp_f_u16_sdwa": [3, 4, 9], "v_cmp_f_u32": [0, 2, 3, 4, 9], "v_cmp_f_u32_e64": [0, 2, 3, 4, 9], "v_cmp_f_u32_sdwa": [0, 3, 4, 9], "v_cmp_f_u64": [0, 2, 3, 4, 9], "v_cmp_f_u64_e64": [0, 2, 3, 4, 9], "v_cmp_ge_f16": [0, 3, 4, 9], "v_cmp_ge_f16_e64": [0, 3, 4, 9], "v_cmp_ge_f16_sdwa": [0, 3, 4, 9], "v_cmp_ge_f32": [0, 2, 3, 4, 9], "v_cmp_ge_f32_e64": [0, 2, 3, 4, 9], "v_cmp_ge_f32_sdwa": [0, 3, 4, 9], "v_cmp_ge_f64": [0, 2, 3, 4, 9], "v_cmp_ge_f64_e64": [0, 2, 3, 4, 9], "v_cmp_ge_i16": [0, 3, 4, 9], "v_cmp_ge_i16_e64": [0, 3, 4, 9], "v_cmp_ge_i16_sdwa": [0, 3, 4, 9], "v_cmp_ge_i32": [0, 2, 3, 4, 9], "v_cmp_ge_i32_e64": [0, 2, 3, 4, 9], "v_cmp_ge_i32_sdwa": [0, 3, 4, 9], "v_cmp_ge_i64": [0, 2, 3, 4, 9], "v_cmp_ge_i64_e64": [0, 2, 3, 4, 9], "v_cmp_ge_u16": [0, 3, 4, 9], "v_cmp_ge_u16_e64": [0, 3, 4, 9], "v_cmp_ge_u16_sdwa": [0, 3, 4, 9], "v_cmp_ge_u32": [0, 2, 3, 4, 9], "v_cmp_ge_u32_e64": [0, 2, 3, 4, 9], "v_cmp_ge_u32_sdwa": [0, 3, 4, 9], "v_cmp_ge_u64": [0, 2, 3, 4, 9], "v_cmp_ge_u64_e64": [0, 2, 3, 4, 9], "v_cmp_gt_f16": [0, 3, 4, 9], "v_cmp_gt_f16_e64": [0, 3, 4, 9], "v_cmp_gt_f16_sdwa": [0, 3, 4, 9], "v_cmp_gt_f32": [0, 2, 3, 4, 9], "v_cmp_gt_f32_e64": [0, 2, 3, 4, 9], "v_cmp_gt_f32_sdwa": [0, 3, 4, 9], "v_cmp_gt_f64": [0, 2, 3, 4, 9], "v_cmp_gt_f64_e64": [0, 2, 3, 4, 9], "v_cmp_gt_i16": [0, 3, 4, 9], "v_cmp_gt_i16_e64": [0, 3, 4, 9], "v_cmp_gt_i16_sdwa": [0, 3, 4, 9], "v_cmp_gt_i32": [0, 2, 3, 4, 9], "v_cmp_gt_i32_e64": [0, 2, 3, 4, 9], "v_cmp_gt_i32_sdwa": [0, 3, 4, 9], "v_cmp_gt_i64": [0, 2, 3, 4, 9], "v_cmp_gt_i64_e64": [0, 2, 3, 4, 9], "v_cmp_gt_u16": [0, 3, 4, 9], "v_cmp_gt_u16_e64": [0, 3, 4, 9], "v_cmp_gt_u16_sdwa": [0, 3, 4, 9], "v_cmp_gt_u32": [0, 2, 3, 4, 9], "v_cmp_gt_u32_e64": [0, 2, 3, 4, 9], "v_cmp_gt_u32_sdwa": [0, 3, 4, 9], "v_cmp_gt_u64": [0, 2, 3, 4, 9], "v_cmp_gt_u64_e64": [0, 2, 3, 4, 9], "v_cmp_le_f16": [0, 3, 4, 9], "v_cmp_le_f16_e64": [0, 3, 4, 9], "v_cmp_le_f16_sdwa": [0, 3, 4, 9], "v_cmp_le_f32": [0, 2, 3, 4, 9], "v_cmp_le_f32_e64": [0, 2, 3, 4, 9], "v_cmp_le_f32_sdwa": [0, 3, 4, 9], "v_cmp_le_f64": [0, 2, 3, 4, 9], "v_cmp_le_f64_e64": [0, 2, 3, 4, 9], "v_cmp_le_i16": [0, 3, 4, 9], "v_cmp_le_i16_e64": [0, 3, 4, 9], "v_cmp_le_i16_sdwa": [0, 3, 4, 9], "v_cmp_le_i32": [0, 2, 3, 4, 9], "v_cmp_le_i32_e64": [0, 2, 3, 4, 9], "v_cmp_le_i32_sdwa": [0, 3, 4, 9], "v_cmp_le_i64": [0, 2, 3, 4, 9], "v_cmp_le_i64_e64": [0, 2, 3, 4, 9], "v_cmp_le_u16": [0, 3, 4, 9], "v_cmp_le_u16_e64": [0, 3, 4, 9], "v_cmp_le_u16_sdwa": [0, 3, 4, 9], "v_cmp_le_u32": [0, 2, 3, 4, 9], "v_cmp_le_u32_e64": [0, 2, 3, 4, 9], "v_cmp_le_u32_sdwa": [0, 3, 4, 9], "v_cmp_le_u64": [0, 2, 3, 4, 9], "v_cmp_le_u64_e64": [0, 2, 3, 4, 9], "v_cmp_lg_f16": [0, 3, 4, 9], "v_cmp_lg_f16_e64": [0, 3, 4, 9], "v_cmp_lg_f16_sdwa": [0, 3, 4, 9], "v_cmp_lg_f32": [0, 2, 3, 4, 9], "v_cmp_lg_f32_e64": [0, 2, 3, 4, 9], "v_cmp_lg_f32_sdwa": [0, 3, 4, 9], "v_cmp_lg_f64": [0, 2, 3, 4, 9], "v_cmp_lg_f64_e64": [0, 2, 3, 4, 9], "v_cmp_lt_f16": [0, 3, 4, 9], "v_cmp_lt_f16_e64": [0, 3, 4, 9], "v_cmp_lt_f16_sdwa": [0, 3, 4, 9], "v_cmp_lt_f32": [0, 2, 3, 4, 9], "v_cmp_lt_f32_e64": [0, 2, 3, 4, 9], "v_cmp_lt_f32_sdwa": [0, 3, 4, 9], "v_cmp_lt_f64": [0, 2, 3, 4, 9], "v_cmp_lt_f64_e64": [0, 2, 3, 4, 9], "v_cmp_lt_i16": [0, 3, 4, 9], "v_cmp_lt_i16_e64": [0, 3, 4, 9], "v_cmp_lt_i16_sdwa": [0, 3, 4, 9], "v_cmp_lt_i32": [0, 2, 3, 4, 9], "v_cmp_lt_i32_e64": [0, 2, 3, 4, 9], "v_cmp_lt_i32_sdwa": [0, 3, 4, 9], "v_cmp_lt_i64": [0, 2, 3, 4, 9], "v_cmp_lt_i64_e64": [0, 2, 3, 4, 9], "v_cmp_lt_u16": [0, 3, 4, 9], "v_cmp_lt_u16_e64": [0, 3, 4, 9], "v_cmp_lt_u16_sdwa": [0, 3, 4, 9], "v_cmp_lt_u32": [0, 2, 3, 4, 9], "v_cmp_lt_u32_e64": [0, 2, 3, 4, 9], "v_cmp_lt_u32_sdwa": [0, 3, 4, 9], "v_cmp_lt_u64": [0, 2, 3, 4, 9], "v_cmp_lt_u64_e64": [0, 2, 3, 4, 9], "v_cmp_ne_i16": [0, 3, 4, 9], "v_cmp_ne_i16_e64": [0, 3, 4, 9], "v_cmp_ne_i16_sdwa": [0, 3, 4, 9], "v_cmp_ne_i32": [0, 2, 3, 4, 9], "v_cmp_ne_i32_e64": [0, 2, 3, 4, 9], "v_cmp_ne_i32_sdwa": [0, 3, 4, 9], "v_cmp_ne_i64": [0, 2, 3, 4, 9], "v_cmp_ne_i64_e64": [0, 2, 3, 4, 9], "v_cmp_ne_u16": [0, 3, 4, 9], "v_cmp_ne_u16_e64": [0, 3, 4, 9], "v_cmp_ne_u16_sdwa": [0, 3, 4, 9], "v_cmp_ne_u32": [0, 2, 3, 4, 9], "v_cmp_ne_u32_e64": [0, 2, 3, 4, 9], "v_cmp_ne_u32_sdwa": [0, 3, 4, 9], "v_cmp_ne_u64": [0, 2, 3, 4, 9], "v_cmp_ne_u64_e64": [0, 2, 3, 4, 9], "v_cmp_neq_f16": [0, 3, 4, 9], "v_cmp_neq_f16_e64": [0, 3, 4, 9], "v_cmp_neq_f16_sdwa": [0, 3, 4, 9], "v_cmp_neq_f32": [0, 2, 3, 4, 9], "v_cmp_neq_f32_e64": [0, 2, 3, 4, 9], "v_cmp_neq_f32_sdwa": [0, 3, 4, 9], "v_cmp_neq_f64": [0, 2, 3, 4, 9], "v_cmp_neq_f64_e64": [0, 2, 3, 4, 9], "v_cmp_nge_f16": [0, 3, 4, 9], "v_cmp_nge_f16_e64": [0, 3, 4, 9], "v_cmp_nge_f16_sdwa": [0, 3, 4, 9], "v_cmp_nge_f32": [0, 2, 3, 4, 9], "v_cmp_nge_f32_e64": [0, 2, 3, 4, 9], "v_cmp_nge_f32_sdwa": [0, 3, 4, 9], "v_cmp_nge_f64": [0, 2, 3, 4, 9], "v_cmp_nge_f64_e64": [0, 2, 3, 4, 9], "v_cmp_ngt_f16": [0, 3, 4, 9], "v_cmp_ngt_f16_e64": [0, 3, 4, 9], "v_cmp_ngt_f16_sdwa": [0, 3, 4, 9], "v_cmp_ngt_f32": [0, 2, 3, 4, 9], "v_cmp_ngt_f32_e64": [0, 2, 3, 4, 9], "v_cmp_ngt_f32_sdwa": [0, 3, 4, 9], "v_cmp_ngt_f64": [0, 2, 3, 4, 9], "v_cmp_ngt_f64_e64": [0, 2, 3, 4, 9], "v_cmp_nle_f16": [0, 3, 4, 9], "v_cmp_nle_f16_e64": [0, 3, 4, 9], "v_cmp_nle_f16_sdwa": [0, 3, 4, 9], "v_cmp_nle_f32": [0, 2, 3, 4, 9], "v_cmp_nle_f32_e64": [0, 2, 3, 4, 9], "v_cmp_nle_f32_sdwa": [0, 3, 4, 9], "v_cmp_nle_f64": [0, 2, 3, 4, 9], "v_cmp_nle_f64_e64": [0, 2, 3, 4, 9], "v_cmp_nlg_f16": [0, 3, 4, 9], "v_cmp_nlg_f16_e64": [0, 3, 4, 9], "v_cmp_nlg_f16_sdwa": [0, 3, 4, 9], "v_cmp_nlg_f32": [0, 2, 3, 4, 9], "v_cmp_nlg_f32_e64": [0, 2, 3, 4, 9], "v_cmp_nlg_f32_sdwa": [0, 3, 4, 9], "v_cmp_nlg_f64": [0, 2, 3, 4, 9], "v_cmp_nlg_f64_e64": [0, 2, 3, 4, 9], "v_cmp_nlt_f16": [0, 3, 4, 9], "v_cmp_nlt_f16_e64": [0, 3, 4, 9], "v_cmp_nlt_f16_sdwa": [0, 3, 4, 9], "v_cmp_nlt_f32": [0, 2, 3, 4, 9], "v_cmp_nlt_f32_e64": [0, 2, 3, 4, 9], "v_cmp_nlt_f32_sdwa": [0, 3, 4, 9], "v_cmp_nlt_f64": [0, 2, 3, 4, 9], "v_cmp_nlt_f64_e64": [0, 2, 3, 4, 9], "v_cmp_o_f16": [0, 3, 4, 9], "v_cmp_o_f16_e64": [0, 3, 4, 9], "v_cmp_o_f16_sdwa": [0, 3, 4, 9], "v_cmp_o_f32": [0, 2, 3, 4, 9], "v_cmp_o_f32_e64": [0, 2, 3, 4, 9], "v_cmp_o_f32_sdwa": [0, 3, 4, 9], "v_cmp_o_f64": [0, 2, 3, 4, 9], "v_cmp_o_f64_e64": [0, 2, 3, 4, 9], "v_cmp_t_i16": [3, 4, 9], "v_cmp_t_i16_e64": [3, 4, 9], "v_cmp_t_i16_sdwa": [3, 4, 9], "v_cmp_t_i32": [0, 2, 3, 4, 9], "v_cmp_t_i32_e64": [0, 2, 3, 4, 9], "v_cmp_t_i32_sdwa": [0, 3, 4, 9], "v_cmp_t_i64": [0, 2, 3, 4, 9], "v_cmp_t_i64_e64": [0, 2, 3, 4, 9], "v_cmp_t_u16": [3, 4, 9], "v_cmp_t_u16_e64": [3, 4, 9], "v_cmp_t_u16_sdwa": [3, 4, 9], "v_cmp_t_u32": [0, 2, 3, 4, 9], "v_cmp_t_u32_e64": [0, 2, 3, 4, 9], "v_cmp_t_u32_sdwa": [0, 3, 4, 9], "v_cmp_t_u64": [0, 2, 3, 4, 9], "v_cmp_t_u64_e64": [0, 2, 3, 4, 9], "v_cmp_tru_f16": [0, 3, 4, 9], "v_cmp_tru_f16_e64": [0, 3, 4, 9], "v_cmp_tru_f16_sdwa": [0, 3, 4, 9], "v_cmp_tru_f32": [0, 2, 3, 4, 9], "v_cmp_tru_f32_e64": [0, 2, 3, 4, 9], "v_cmp_tru_f32_sdwa": [0, 3, 4, 9], "v_cmp_tru_f64": [0, 2, 3, 4, 9], "v_cmp_tru_f64_e64": [0, 2, 3, 4, 9], "v_cmp_u_f16": [0, 3, 4, 9], "v_cmp_u_f16_e64": [0, 3, 4, 9], "v_cmp_u_f16_sdwa": [0, 3, 4, 9], "v_cmp_u_f32": [0, 2, 3, 4, 9], "v_cmp_u_f32_e64": [0, 2, 3, 4, 9], "v_cmp_u_f32_sdwa": [0, 3, 4, 9], "v_cmp_u_f64": [0, 2, 3, 4, 9], "v_cmp_u_f64_e64": [0, 2, 3, 4, 9], "v_cmps_eq_f32": 2, "v_cmps_eq_f32_e64": 2, "v_cmps_eq_f64": 2, "v_cmps_eq_f64_e64": 2, "v_cmps_f_f32": 2, "v_cmps_f_f32_e64": 2, "v_cmps_f_f64": 2, "v_cmps_f_f64_e64": 2, "v_cmps_ge_f32": 2, "v_cmps_ge_f32_e64": 2, "v_cmps_ge_f64": 2, "v_cmps_ge_f64_e64": 2, "v_cmps_gt_f32": 2, "v_cmps_gt_f32_e64": 2, "v_cmps_gt_f64": 2, "v_cmps_gt_f64_e64": 2, "v_cmps_le_f32": 2, "v_cmps_le_f32_e64": 2, "v_cmps_le_f64": 2, "v_cmps_le_f64_e64": 2, "v_cmps_lg_f32": 2, "v_cmps_lg_f32_e64": 2, "v_cmps_lg_f64": 2, "v_cmps_lg_f64_e64": 2, "v_cmps_lt_f32": 2, "v_cmps_lt_f32_e64": 2, "v_cmps_lt_f64": 2, "v_cmps_lt_f64_e64": 2, "v_cmps_neq_f32": 2, "v_cmps_neq_f32_e64": 2, "v_cmps_neq_f64": 2, "v_cmps_neq_f64_e64": 2, "v_cmps_nge_f32": 2, "v_cmps_nge_f32_e64": 2, "v_cmps_nge_f64": 2, "v_cmps_nge_f64_e64": 2, "v_cmps_ngt_f32": 2, "v_cmps_ngt_f32_e64": 2, "v_cmps_ngt_f64": 2, "v_cmps_ngt_f64_e64": 2, "v_cmps_nle_f32": 2, "v_cmps_nle_f32_e64": 2, "v_cmps_nle_f64": 2, "v_cmps_nle_f64_e64": 2, "v_cmps_nlg_f32": 2, "v_cmps_nlg_f32_e64": 2, "v_cmps_nlg_f64": 2, "v_cmps_nlg_f64_e64": 2, "v_cmps_nlt_f32": 2, "v_cmps_nlt_f32_e64": 2, "v_cmps_nlt_f64": 2, "v_cmps_nlt_f64_e64": 2, "v_cmps_o_f32": 2, "v_cmps_o_f32_e64": 2, "v_cmps_o_f64": 2, "v_cmps_o_f64_e64": 2, "v_cmps_tru_f32": 2, "v_cmps_tru_f32_e64": 2, "v_cmps_tru_f64": 2, "v_cmps_tru_f64_e64": 2, "v_cmps_u_f32": 2, "v_cmps_u_f32_e64": 2, "v_cmps_u_f64": 2, "v_cmps_u_f64_e64": 2, "v_cmpsx_eq_f32": 2, "v_cmpsx_eq_f32_e64": 2, "v_cmpsx_eq_f64": 2, "v_cmpsx_eq_f64_e64": 2, "v_cmpsx_f_f32": 2, "v_cmpsx_f_f32_e64": 2, "v_cmpsx_f_f64": 2, "v_cmpsx_f_f64_e64": 2, "v_cmpsx_ge_f32": 2, "v_cmpsx_ge_f32_e64": 2, "v_cmpsx_ge_f64": 2, "v_cmpsx_ge_f64_e64": 2, "v_cmpsx_gt_f32": 2, "v_cmpsx_gt_f32_e64": 2, "v_cmpsx_gt_f64": 2, "v_cmpsx_gt_f64_e64": 2, "v_cmpsx_le_f32": 2, "v_cmpsx_le_f32_e64": 2, "v_cmpsx_le_f64": 2, "v_cmpsx_le_f64_e64": 2, "v_cmpsx_lg_f32": 2, "v_cmpsx_lg_f32_e64": 2, "v_cmpsx_lg_f64": 2, "v_cmpsx_lg_f64_e64": 2, "v_cmpsx_lt_f32": 2, "v_cmpsx_lt_f32_e64": 2, "v_cmpsx_lt_f64": 2, "v_cmpsx_lt_f64_e64": 2, "v_cmpsx_neq_f32": 2, "v_cmpsx_neq_f32_e64": 2, "v_cmpsx_neq_f64": 2, "v_cmpsx_neq_f64_e64": 2, "v_cmpsx_nge_f32": 2, "v_cmpsx_nge_f32_e64": 2, "v_cmpsx_nge_f64": 2, "v_cmpsx_nge_f64_e64": 2, "v_cmpsx_ngt_f32": 2, "v_cmpsx_ngt_f32_e64": 2, "v_cmpsx_ngt_f64": 2, "v_cmpsx_ngt_f64_e64": 2, "v_cmpsx_nle_f32": 2, "v_cmpsx_nle_f32_e64": 2, "v_cmpsx_nle_f64": 2, "v_cmpsx_nle_f64_e64": 2, "v_cmpsx_nlg_f32": 2, "v_cmpsx_nlg_f32_e64": 2, "v_cmpsx_nlg_f64": 2, "v_cmpsx_nlg_f64_e64": 2, "v_cmpsx_nlt_f32": 2, "v_cmpsx_nlt_f32_e64": 2, "v_cmpsx_nlt_f64": 2, "v_cmpsx_nlt_f64_e64": 2, "v_cmpsx_o_f32": 2, "v_cmpsx_o_f32_e64": 2, "v_cmpsx_o_f64": 2, "v_cmpsx_o_f64_e64": 2, "v_cmpsx_tru_f32": 2, "v_cmpsx_tru_f32_e64": 2, "v_cmpsx_tru_f64": 2, "v_cmpsx_tru_f64_e64": 2, "v_cmpsx_u_f32": 2, "v_cmpsx_u_f32_e64": 2, "v_cmpsx_u_f64": 2, "v_cmpsx_u_f64_e64": 2, "v_cmpx_class_f16": [0, 3, 4, 9], "v_cmpx_class_f16_e64": [0, 3, 4, 9], "v_cmpx_class_f16_sdwa": [0, 3, 4, 9], "v_cmpx_class_f32": [0, 2, 3, 4, 9], "v_cmpx_class_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_class_f32_sdwa": [0, 3, 4, 9], "v_cmpx_class_f64": [0, 2, 3, 4, 9], "v_cmpx_class_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_eq_f16": [0, 3, 4, 9], "v_cmpx_eq_f16_e64": [0, 3, 4, 9], "v_cmpx_eq_f16_sdwa": [0, 3, 4, 9], "v_cmpx_eq_f32": [0, 2, 3, 4, 9], "v_cmpx_eq_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_eq_f32_sdwa": [0, 3, 4, 9], "v_cmpx_eq_f64": [0, 2, 3, 4, 9], "v_cmpx_eq_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_eq_i16": [0, 3, 4, 9], "v_cmpx_eq_i16_e64": [0, 3, 4, 9], "v_cmpx_eq_i16_sdwa": [0, 3, 4, 9], "v_cmpx_eq_i32": [0, 2, 3, 4, 9], "v_cmpx_eq_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_eq_i32_sdwa": [0, 3, 4, 9], "v_cmpx_eq_i64": [0, 2, 3, 4, 9], "v_cmpx_eq_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_eq_u16": [0, 3, 4, 9], "v_cmpx_eq_u16_e64": [0, 3, 4, 9], "v_cmpx_eq_u16_sdwa": [0, 3, 4, 9], "v_cmpx_eq_u32": [0, 2, 3, 4, 9], "v_cmpx_eq_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_eq_u32_sdwa": [0, 3, 4, 9], "v_cmpx_eq_u64": [0, 2, 3, 4, 9], "v_cmpx_eq_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_f_f16": [0, 3, 4, 9], "v_cmpx_f_f16_e64": [0, 3, 4, 9], "v_cmpx_f_f16_sdwa": [0, 3, 4, 9], "v_cmpx_f_f32": [0, 2, 3, 4, 9], "v_cmpx_f_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_f_f32_sdwa": [0, 3, 4, 9], "v_cmpx_f_f64": [0, 2, 3, 4, 9], "v_cmpx_f_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_f_i16": [3, 4, 9], "v_cmpx_f_i16_e64": [3, 4, 9], "v_cmpx_f_i16_sdwa": [3, 4, 9], "v_cmpx_f_i32": [0, 2, 3, 4, 9], "v_cmpx_f_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_f_i32_sdwa": [0, 3, 4, 9], "v_cmpx_f_i64": [0, 2, 3, 4, 9], "v_cmpx_f_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_f_u16": [3, 4, 9], "v_cmpx_f_u16_e64": [3, 4, 9], "v_cmpx_f_u16_sdwa": [3, 4, 9], "v_cmpx_f_u32": [0, 2, 3, 4, 9], "v_cmpx_f_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_f_u32_sdwa": [0, 3, 4, 9], "v_cmpx_f_u64": [0, 2, 3, 4, 9], "v_cmpx_f_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_ge_f16": [0, 3, 4, 9], "v_cmpx_ge_f16_e64": [0, 3, 4, 9], "v_cmpx_ge_f16_sdwa": [0, 3, 4, 9], "v_cmpx_ge_f32": [0, 2, 3, 4, 9], "v_cmpx_ge_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_ge_f32_sdwa": [0, 3, 4, 9], "v_cmpx_ge_f64": [0, 2, 3, 4, 9], "v_cmpx_ge_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_ge_i16": [0, 3, 4, 9], "v_cmpx_ge_i16_e64": [0, 3, 4, 9], "v_cmpx_ge_i16_sdwa": [0, 3, 4, 9], "v_cmpx_ge_i32": [0, 2, 3, 4, 9], "v_cmpx_ge_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_ge_i32_sdwa": [0, 3, 4, 9], "v_cmpx_ge_i64": [0, 2, 3, 4, 9], "v_cmpx_ge_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_ge_u16": [0, 3, 4, 9], "v_cmpx_ge_u16_e64": [0, 3, 4, 9], "v_cmpx_ge_u16_sdwa": [0, 3, 4, 9], "v_cmpx_ge_u32": [0, 2, 3, 4, 9], "v_cmpx_ge_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_ge_u32_sdwa": [0, 3, 4, 9], "v_cmpx_ge_u64": [0, 2, 3, 4, 9], "v_cmpx_ge_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_gt_f16": [0, 3, 4, 9], "v_cmpx_gt_f16_e64": [0, 3, 4, 9], "v_cmpx_gt_f16_sdwa": [0, 3, 4, 9], "v_cmpx_gt_f32": [0, 2, 3, 4, 9], "v_cmpx_gt_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_gt_f32_sdwa": [0, 3, 4, 9], "v_cmpx_gt_f64": [0, 2, 3, 4, 9], "v_cmpx_gt_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_gt_i16": [0, 3, 4, 9], "v_cmpx_gt_i16_e64": [0, 3, 4, 9], "v_cmpx_gt_i16_sdwa": [0, 3, 4, 9], "v_cmpx_gt_i32": [0, 2, 3, 4, 9], "v_cmpx_gt_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_gt_i32_sdwa": [0, 3, 4, 9], "v_cmpx_gt_i64": [0, 2, 3, 4, 9], "v_cmpx_gt_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_gt_u16": [0, 3, 4, 9], "v_cmpx_gt_u16_e64": [0, 3, 4, 9], "v_cmpx_gt_u16_sdwa": [0, 3, 4, 9], "v_cmpx_gt_u32": [0, 2, 3, 4, 9], "v_cmpx_gt_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_gt_u32_sdwa": [0, 3, 4, 9], "v_cmpx_gt_u64": [0, 2, 3, 4, 9], "v_cmpx_gt_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_le_f16": [0, 3, 4, 9], "v_cmpx_le_f16_e64": [0, 3, 4, 9], "v_cmpx_le_f16_sdwa": [0, 3, 4, 9], "v_cmpx_le_f32": [0, 2, 3, 4, 9], "v_cmpx_le_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_le_f32_sdwa": [0, 3, 4, 9], "v_cmpx_le_f64": [0, 2, 3, 4, 9], "v_cmpx_le_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_le_i16": [0, 3, 4, 9], "v_cmpx_le_i16_e64": [0, 3, 4, 9], "v_cmpx_le_i16_sdwa": [0, 3, 4, 9], "v_cmpx_le_i32": [0, 2, 3, 4, 9], "v_cmpx_le_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_le_i32_sdwa": [0, 3, 4, 9], "v_cmpx_le_i64": [0, 2, 3, 4, 9], "v_cmpx_le_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_le_u16": [0, 3, 4, 9], "v_cmpx_le_u16_e64": [0, 3, 4, 9], "v_cmpx_le_u16_sdwa": [0, 3, 4, 9], "v_cmpx_le_u32": [0, 2, 3, 4, 9, 582], "v_cmpx_le_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_le_u32_sdwa": [0, 3, 4, 9], "v_cmpx_le_u64": [0, 2, 3, 4, 9], "v_cmpx_le_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_lg_f16": [0, 3, 4, 9], "v_cmpx_lg_f16_e64": [0, 3, 4, 9], "v_cmpx_lg_f16_sdwa": [0, 3, 4, 9], "v_cmpx_lg_f32": [0, 2, 3, 4, 9], "v_cmpx_lg_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_lg_f32_sdwa": [0, 3, 4, 9], "v_cmpx_lg_f64": [0, 2, 3, 4, 9], "v_cmpx_lg_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_lt_f16": [0, 3, 4, 9], "v_cmpx_lt_f16_e64": [0, 3, 4, 9], "v_cmpx_lt_f16_sdwa": [0, 3, 4, 9], "v_cmpx_lt_f32": [0, 2, 3, 4, 9], "v_cmpx_lt_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_lt_f32_sdwa": [0, 3, 4, 9], "v_cmpx_lt_f64": [0, 2, 3, 4, 9], "v_cmpx_lt_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_lt_i16": [0, 3, 4, 9], "v_cmpx_lt_i16_e64": [0, 3, 4, 9], "v_cmpx_lt_i16_sdwa": [0, 3, 4, 9], "v_cmpx_lt_i32": [0, 2, 3, 4, 9], "v_cmpx_lt_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_lt_i32_sdwa": [0, 3, 4, 9], "v_cmpx_lt_i64": [0, 2, 3, 4, 9], "v_cmpx_lt_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_lt_u16": [0, 3, 4, 9], "v_cmpx_lt_u16_e64": [0, 3, 4, 9], "v_cmpx_lt_u16_sdwa": [0, 3, 4, 9], "v_cmpx_lt_u32": [0, 2, 3, 4, 9], "v_cmpx_lt_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_lt_u32_sdwa": [0, 3, 4, 9], "v_cmpx_lt_u64": [0, 2, 3, 4, 9], "v_cmpx_lt_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_ne_i16": [0, 3, 4, 9], "v_cmpx_ne_i16_e64": [0, 3, 4, 9], "v_cmpx_ne_i16_sdwa": [0, 3, 4, 9], "v_cmpx_ne_i32": [0, 2, 3, 4, 9], "v_cmpx_ne_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_ne_i32_sdwa": [0, 3, 4, 9], "v_cmpx_ne_i64": [0, 2, 3, 4, 9], "v_cmpx_ne_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_ne_u16": [0, 3, 4, 9], "v_cmpx_ne_u16_e64": [0, 3, 4, 9], "v_cmpx_ne_u16_sdwa": [0, 3, 4, 9], "v_cmpx_ne_u32": [0, 2, 3, 4, 9], "v_cmpx_ne_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_ne_u32_sdwa": [0, 3, 4, 9], "v_cmpx_ne_u64": [0, 2, 3, 4, 9], "v_cmpx_ne_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_neq_f16": [0, 3, 4, 9], "v_cmpx_neq_f16_e64": [0, 3, 4, 9], "v_cmpx_neq_f16_sdwa": [0, 3, 4, 9], "v_cmpx_neq_f32": [0, 2, 3, 4, 9], "v_cmpx_neq_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_neq_f32_sdwa": [0, 3, 4, 9], "v_cmpx_neq_f64": [0, 2, 3, 4, 9], "v_cmpx_neq_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_nge_f16": [0, 3, 4, 9], "v_cmpx_nge_f16_e64": [0, 3, 4, 9], "v_cmpx_nge_f16_sdwa": [0, 3, 4, 9], "v_cmpx_nge_f32": [0, 2, 3, 4, 9], "v_cmpx_nge_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_nge_f32_sdwa": [0, 3, 4, 9], "v_cmpx_nge_f64": [0, 2, 3, 4, 9], "v_cmpx_nge_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_ngt_f16": [0, 3, 4, 9], "v_cmpx_ngt_f16_e64": [0, 3, 4, 9], "v_cmpx_ngt_f16_sdwa": [0, 3, 4, 9], "v_cmpx_ngt_f32": [0, 2, 3, 4, 9], "v_cmpx_ngt_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_ngt_f32_sdwa": [0, 3, 4, 9], "v_cmpx_ngt_f64": [0, 2, 3, 4, 9], "v_cmpx_ngt_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_nle_f16": [0, 3, 4, 9], "v_cmpx_nle_f16_e64": [0, 3, 4, 9], "v_cmpx_nle_f16_sdwa": [0, 3, 4, 9], "v_cmpx_nle_f32": [0, 2, 3, 4, 9], "v_cmpx_nle_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_nle_f32_sdwa": [0, 3, 4, 9], "v_cmpx_nle_f64": [0, 2, 3, 4, 9], "v_cmpx_nle_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_nlg_f16": [0, 3, 4, 9], "v_cmpx_nlg_f16_e64": [0, 3, 4, 9], "v_cmpx_nlg_f16_sdwa": [0, 3, 4, 9], "v_cmpx_nlg_f32": [0, 2, 3, 4, 9], "v_cmpx_nlg_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_nlg_f32_sdwa": [0, 3, 4, 9], "v_cmpx_nlg_f64": [0, 2, 3, 4, 9], "v_cmpx_nlg_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_nlt_f16": [0, 3, 4, 9], "v_cmpx_nlt_f16_e64": [0, 3, 4, 9], "v_cmpx_nlt_f16_sdwa": [0, 3, 4, 9], "v_cmpx_nlt_f32": [0, 2, 3, 4, 9], "v_cmpx_nlt_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_nlt_f32_sdwa": [0, 3, 4, 9], "v_cmpx_nlt_f64": [0, 2, 3, 4, 9], "v_cmpx_nlt_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_o_f16": [0, 3, 4, 9], "v_cmpx_o_f16_e64": [0, 3, 4, 9], "v_cmpx_o_f16_sdwa": [0, 3, 4, 9], "v_cmpx_o_f32": [0, 2, 3, 4, 9], "v_cmpx_o_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_o_f32_sdwa": [0, 3, 4, 9], "v_cmpx_o_f64": [0, 2, 3, 4, 9], "v_cmpx_o_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_t_i16": [3, 4, 9], "v_cmpx_t_i16_e64": [3, 4, 9], "v_cmpx_t_i16_sdwa": [3, 4, 9], "v_cmpx_t_i32": [0, 2, 3, 4, 9], "v_cmpx_t_i32_e64": [0, 2, 3, 4, 9], "v_cmpx_t_i32_sdwa": [0, 3, 4, 9], "v_cmpx_t_i64": [0, 2, 3, 4, 9], "v_cmpx_t_i64_e64": [0, 2, 3, 4, 9], "v_cmpx_t_u16": [3, 4, 9], "v_cmpx_t_u16_e64": [3, 4, 9], "v_cmpx_t_u16_sdwa": [3, 4, 9], "v_cmpx_t_u32": [0, 2, 3, 4, 9], "v_cmpx_t_u32_e64": [0, 2, 3, 4, 9], "v_cmpx_t_u32_sdwa": [0, 3, 4, 9], "v_cmpx_t_u64": [0, 2, 3, 4, 9], "v_cmpx_t_u64_e64": [0, 2, 3, 4, 9], "v_cmpx_tru_f16": [0, 3, 4, 9], "v_cmpx_tru_f16_e64": [0, 3, 4, 9], "v_cmpx_tru_f16_sdwa": [0, 3, 4, 9], "v_cmpx_tru_f32": [0, 2, 3, 4, 9], "v_cmpx_tru_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_tru_f32_sdwa": [0, 3, 4, 9], "v_cmpx_tru_f64": [0, 2, 3, 4, 9], "v_cmpx_tru_f64_e64": [0, 2, 3, 4, 9], "v_cmpx_u_f16": [0, 3, 4, 9], "v_cmpx_u_f16_e64": [0, 3, 4, 9], "v_cmpx_u_f16_sdwa": [0, 3, 4, 9], "v_cmpx_u_f32": [0, 2, 3, 4, 9], "v_cmpx_u_f32_e64": [0, 2, 3, 4, 9], "v_cmpx_u_f32_sdwa": [0, 3, 4, 9], "v_cmpx_u_f64": [0, 2, 3, 4, 9], "v_cmpx_u_f64_e64": [0, 2, 3, 4, 9], "v_cndmask_b32": [0, 2, 3, 4, 9], "v_cndmask_b32_dpp": [0, 3, 4, 9], "v_cndmask_b32_e64": [0, 2, 3, 4, 9], "v_cndmask_b32_sdwa": [0, 3, 4, 9], "v_cos_f16": [0, 3, 4, 9], "v_cos_f16_dpp": [0, 3, 4, 9], "v_cos_f16_e64": [0, 3, 4, 9], "v_cos_f16_sdwa": [0, 3, 4, 9], "v_cos_f32": [0, 2, 3, 4, 9], "v_cos_f32_dpp": [0, 3, 4, 9], "v_cos_f32_e64": [0, 2, 3, 4, 9], "v_cos_f32_sdwa": [0, 3, 4, 9], "v_cubeid_f32": [0, 2, 3, 4, 9], "v_cubema_f32": [0, 2, 3, 4, 9], "v_cubesc_f32": [0, 2, 3, 4, 9], "v_cubetc_f32": [0, 2, 3, 4, 9], "v_cvt_f16_f32": [0, 2, 3, 4, 9, 580], "v_cvt_f16_f32_dpp": [0, 3, 4, 9], "v_cvt_f16_f32_e64": [0, 2, 3, 4, 9], "v_cvt_f16_f32_sdwa": [0, 3, 4, 9], "v_cvt_f16_i16": [0, 3, 4, 9], "v_cvt_f16_i16_dpp": [0, 3, 4, 9], "v_cvt_f16_i16_e64": [0, 3, 4, 9], "v_cvt_f16_i16_sdwa": [0, 3, 4, 9], "v_cvt_f16_u16": [0, 3, 4, 9], "v_cvt_f16_u16_dpp": [0, 3, 4, 9], "v_cvt_f16_u16_e64": [0, 3, 4, 9], "v_cvt_f16_u16_sdwa": [0, 3, 4, 9], "v_cvt_f32_f16": [0, 2, 3, 4, 9], "v_cvt_f32_f16_dpp": [0, 3, 4, 9], "v_cvt_f32_f16_e64": [0, 2, 3, 4, 9], "v_cvt_f32_f16_sdwa": [0, 3, 4, 9], "v_cvt_f32_f64": [0, 2, 3, 4, 9], "v_cvt_f32_f64_dpp": 9, "v_cvt_f32_f64_e64": [0, 2, 3, 4, 9], "v_cvt_f32_i32": [0, 2, 3, 4, 9], "v_cvt_f32_i32_dpp": [0, 3, 4, 9], "v_cvt_f32_i32_e64": [0, 2, 3, 4, 9], "v_cvt_f32_i32_sdwa": [0, 3, 4, 9], "v_cvt_f32_u32": [0, 2, 3, 4, 9, 579], "v_cvt_f32_u32_dpp": [0, 3, 4, 9], "v_cvt_f32_u32_e64": [0, 2, 3, 4, 9], "v_cvt_f32_u32_sdwa": [0, 3, 4, 9], "v_cvt_f32_ubyte0": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte0_dpp": [0, 3, 4, 9], "v_cvt_f32_ubyte0_e64": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte0_sdwa": [0, 3, 4, 9], "v_cvt_f32_ubyte1": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte1_dpp": [0, 3, 4, 9], "v_cvt_f32_ubyte1_e64": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte1_sdwa": [0, 3, 4, 9], "v_cvt_f32_ubyte2": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte2_dpp": [0, 3, 4, 9], "v_cvt_f32_ubyte2_e64": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte2_sdwa": [0, 3, 4, 9], "v_cvt_f32_ubyte3": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte3_dpp": [0, 3, 4, 9], "v_cvt_f32_ubyte3_e64": [0, 2, 3, 4, 9], "v_cvt_f32_ubyte3_sdwa": [0, 3, 4, 9], "v_cvt_f64_f32": [0, 2, 3, 4, 9], "v_cvt_f64_f32_e64": [0, 2, 3, 4, 9], "v_cvt_f64_i32": [0, 2, 3, 4, 9], "v_cvt_f64_i32_e32": 582, "v_cvt_f64_i32_e64": [0, 2, 3, 4, 9], "v_cvt_f64_u32": [0, 2, 3, 4, 9], "v_cvt_f64_u32_e64": [0, 2, 3, 4, 9], "v_cvt_flr_i32_f32": [0, 2, 3, 4, 9], "v_cvt_flr_i32_f32_dpp": [0, 3, 4, 9], "v_cvt_flr_i32_f32_e64": [0, 2, 3, 4, 9], "v_cvt_flr_i32_f32_sdwa": [0, 3, 4, 9], "v_cvt_i16_f16": [0, 3, 4, 9], "v_cvt_i16_f16_dpp": [0, 3, 4, 9], "v_cvt_i16_f16_e64": [0, 3, 4, 9], "v_cvt_i16_f16_sdwa": [0, 3, 4, 9], "v_cvt_i32_f32": [0, 2, 3, 4, 9], "v_cvt_i32_f32_dpp": [0, 3, 4, 9], "v_cvt_i32_f32_e64": [0, 2, 3, 4, 9], "v_cvt_i32_f32_sdwa": [0, 3, 4, 9], "v_cvt_i32_f64": [0, 2, 3, 4, 9], "v_cvt_i32_f64_dpp": 9, "v_cvt_i32_f64_e64": [0, 2, 3, 4, 9], "v_cvt_norm_i16_f16": [0, 4, 9], "v_cvt_norm_i16_f16_dpp": [0, 4, 9], "v_cvt_norm_i16_f16_e64": [0, 4, 9], "v_cvt_norm_i16_f16_sdwa": [0, 4, 9], "v_cvt_norm_u16_f16": [0, 4, 9], "v_cvt_norm_u16_f16_dpp": [0, 4, 9], "v_cvt_norm_u16_f16_e64": [0, 4, 9], "v_cvt_norm_u16_f16_sdwa": [0, 4, 9], "v_cvt_off_f32_i4": [0, 2, 3, 4, 9], "v_cvt_off_f32_i4_dpp": [0, 3, 4, 9], "v_cvt_off_f32_i4_e64": [0, 2, 3, 4, 9], "v_cvt_off_f32_i4_sdwa": [0, 3, 4, 9], "v_cvt_pk_i16_i32": [0, 2, 3, 4, 9], "v_cvt_pk_i16_i32_e64": 2, "v_cvt_pk_u16_u32": [0, 2, 3, 4, 9], "v_cvt_pk_u16_u32_e64": 2, "v_cvt_pk_u8_f32": [0, 2, 3, 4, 9], "v_cvt_pkaccum_u8_f32": [2, 3, 4, 9], "v_cvt_pkaccum_u8_f32_e64": 2, "v_cvt_pknorm_i16_f16": [0, 4, 9], "v_cvt_pknorm_i16_f32": [0, 2, 3, 4, 9], "v_cvt_pknorm_i16_f32_e64": 2, "v_cvt_pknorm_u16_f16": [0, 4, 9], "v_cvt_pknorm_u16_f32": [0, 2, 3, 4, 9], "v_cvt_pknorm_u16_f32_e64": 2, "v_cvt_pkrtz_f16_f32": [0, 2, 3, 4, 9], "v_cvt_pkrtz_f16_f32_e64": [0, 2], "v_cvt_rpi_i32_f32": [0, 2, 3, 4, 9], "v_cvt_rpi_i32_f32_dpp": [0, 3, 4, 9], "v_cvt_rpi_i32_f32_e64": [0, 2, 3, 4, 9], "v_cvt_rpi_i32_f32_sdwa": [0, 3, 4, 9], "v_cvt_u16_f16": [0, 3, 4, 9], "v_cvt_u16_f16_dpp": [0, 3, 4, 9], "v_cvt_u16_f16_e64": [0, 3, 4, 9], "v_cvt_u16_f16_sdwa": [0, 3, 4, 9], "v_cvt_u32_f32": [0, 2, 3, 4, 9], "v_cvt_u32_f32_dpp": [0, 3, 4, 9], "v_cvt_u32_f32_e64": [0, 2, 3, 4, 9], "v_cvt_u32_f32_sdwa": [0, 3, 4, 9], "v_cvt_u32_f64": [0, 2, 3, 4, 9], "v_cvt_u32_f64_dpp": 9, "v_cvt_u32_f64_e64": [0, 2, 3, 4, 9], "v_div_fixup_f16": [0, 3, 4, 9], "v_div_fixup_f32": [0, 2, 3, 4, 9], "v_div_fixup_f64": [0, 2, 3, 4, 9], "v_div_fixup_legacy_f16": [4, 9], "v_div_fmas_f32": [0, 2, 3, 4, 9], "v_div_fmas_f64": [0, 2, 3, 4, 9], "v_div_scale_f32": [0, 2, 3, 4, 9], "v_div_scale_f64": [0, 2, 3, 4, 9], "v_dot2_f32_f16": [1, 7, 8, 9], "v_dot2_i32_i16": [1, 7, 8, 9], "v_dot2_u32_u16": [1, 7, 8, 9], "v_dot2c_f32_f16": [1, 8, 9], "v_dot2c_f32_f16_dpp": [1, 8, 9], "v_dot2c_i32_i16": [8, 9], "v_dot2c_i32_i16_dpp": [8, 9], "v_dot4_i32_i8": [1, 7, 8, 9], "v_dot4_u32_u8": [1, 7, 8, 9], "v_dot4c_i32_i8": [1, 8, 9], "v_dot4c_i32_i8_dpp": [1, 8, 9], "v_dot8_i32_i4": [1, 7, 8, 9], "v_dot8_u32_u4": [1, 7, 8, 9], "v_dot8c_i32_i4": [8, 9], "v_dot8c_i32_i4_dpp": [8, 9], "v_exp_f16": [0, 3, 4, 9], "v_exp_f16_dpp": [0, 3, 4, 9], "v_exp_f16_e64": [0, 3, 4, 9], "v_exp_f16_sdwa": [0, 3, 4, 9], "v_exp_f32": [0, 2, 3, 4, 9], "v_exp_f32_dpp": [0, 3, 4, 9], "v_exp_f32_e64": [0, 2, 3, 4, 9], "v_exp_f32_sdwa": [0, 3, 4, 9], "v_exp_legacy_f32": [2, 3, 4, 9], "v_exp_legacy_f32_dpp": [3, 4, 9], "v_exp_legacy_f32_e64": [2, 3, 4, 9], "v_exp_legacy_f32_sdwa": [3, 4, 9], "v_ffbh_i32": [0, 2, 3, 4, 9], "v_ffbh_i32_dpp": [0, 3, 4, 9], "v_ffbh_i32_e64": [0, 2, 3, 4, 9], "v_ffbh_i32_sdwa": [0, 3, 4, 9], "v_ffbh_u32": [0, 2, 3, 4, 9], "v_ffbh_u32_dpp": [0, 3, 4, 9], "v_ffbh_u32_e64": [0, 2, 3, 4, 9], "v_ffbh_u32_sdwa": [0, 3, 4, 9], "v_ffbl_b32": [0, 2, 3, 4, 9], "v_ffbl_b32_dpp": [0, 3, 4, 9], "v_ffbl_b32_e64": [0, 2, 3, 4, 9], "v_ffbl_b32_sdwa": [0, 3, 4, 9], "v_floor_f16": [0, 3, 4, 9], "v_floor_f16_dpp": [0, 3, 4, 9], "v_floor_f16_e64": [0, 3, 4, 9], "v_floor_f16_sdwa": [0, 3, 4, 9], "v_floor_f32": [0, 2, 3, 4, 9], "v_floor_f32_dpp": [0, 3, 4, 9], "v_floor_f32_e32": 582, "v_floor_f32_e64": [0, 2, 3, 4, 9], "v_floor_f32_sdwa": [0, 3, 4, 9], "v_floor_f64": [0, 2, 3, 4, 9], "v_floor_f64_dpp": 9, "v_floor_f64_e64": [0, 2, 3, 4, 9], "v_fma_f16": [0, 3, 4, 9], "v_fma_f32": [0, 2, 3, 4, 9], "v_fma_f64": [0, 2, 3, 4, 9], "v_fma_legacy_f16": [4, 9], "v_fma_mix": 580, "v_fma_mix_f32": [0, 6, 7, 8, 9], "v_fma_mixhi_f16": [0, 6, 7, 8, 9], "v_fma_mixlo_f16": [0, 6, 7, 8, 9], "v_fmaak_f16": 0, "v_fmaak_f32": 0, "v_fmac_f16": 0, "v_fmac_f16_dpp": 0, "v_fmac_f16_e64": 0, "v_fmac_f32": [0, 7, 8, 9], "v_fmac_f32_dpp": [0, 7, 8, 9], "v_fmac_f32_e64": [0, 7, 8, 9], "v_fmac_f64": 9, "v_fmac_f64_dpp": 9, "v_fmac_f64_e64": 9, "v_fmamk_f16": 0, "v_fmamk_f32": 0, "v_fract_f16": [0, 3, 4, 9], "v_fract_f16_dpp": [0, 3, 4, 9], "v_fract_f16_e64": [0, 3, 4, 9], "v_fract_f16_sdwa": [0, 3, 4, 9], "v_fract_f32": [0, 2, 3, 4, 9, 582], "v_fract_f32_dpp": [0, 3, 4, 9], "v_fract_f32_e64": [0, 2, 3, 4, 9], "v_fract_f32_sdwa": [0, 3, 4, 9], "v_fract_f64": [0, 2, 3, 4, 9], "v_fract_f64_dpp": 9, "v_fract_f64_e64": [0, 2, 3, 4, 9], "v_frexp_exp_i16_f16": [0, 3, 4, 9], "v_frexp_exp_i16_f16_dpp": [0, 3, 4, 9], "v_frexp_exp_i16_f16_e64": [0, 3, 4, 9], "v_frexp_exp_i16_f16_sdwa": [0, 3, 4, 9], "v_frexp_exp_i32_f32": [0, 2, 3, 4, 9], "v_frexp_exp_i32_f32_dpp": [0, 3, 4, 9], "v_frexp_exp_i32_f32_e64": [0, 2, 3, 4, 9], "v_frexp_exp_i32_f32_sdwa": [0, 3, 4, 9], "v_frexp_exp_i32_f64": [0, 2, 3, 4, 9], "v_frexp_exp_i32_f64_dpp": 9, "v_frexp_exp_i32_f64_e64": [0, 2, 3, 4, 9], "v_frexp_mant_f16": [0, 3, 4, 9], "v_frexp_mant_f16_dpp": [0, 3, 4, 9], "v_frexp_mant_f16_e64": [0, 3, 4, 9], "v_frexp_mant_f16_sdwa": [0, 3, 4, 9], "v_frexp_mant_f32": [0, 2, 3, 4, 9], "v_frexp_mant_f32_dpp": [0, 3, 4, 9], "v_frexp_mant_f32_e64": [0, 2, 3, 4, 9], "v_frexp_mant_f32_sdwa": [0, 3, 4, 9], "v_frexp_mant_f64": [0, 2, 3, 4, 9], "v_frexp_mant_f64_dpp": 9, "v_frexp_mant_f64_e64": [0, 2, 3, 4, 9], "v_interp_mov_f32": [0, 2, 3, 4], "v_interp_mov_f32_e64": [0, 3, 4], "v_interp_p1_f32": [0, 2, 3, 4, 21, 122, 207, 472], "v_interp_p1_f32_e64": [0, 3, 4], "v_interp_p1ll_f16": [0, 3, 4], "v_interp_p1lv_f16": [0, 3, 4], "v_interp_p2_f16": [0, 3, 4], "v_interp_p2_f32": [0, 2, 3, 4], "v_interp_p2_f32_e64": [0, 3, 4], "v_interp_p2_legacy_f16": 4, "v_ldexp_f16": [0, 3, 4, 9], "v_ldexp_f16_dpp": [0, 3, 4, 9], "v_ldexp_f16_e64": [0, 3, 4, 9], "v_ldexp_f16_sdwa": [0, 3, 4, 9], "v_ldexp_f32": [0, 2, 3, 4, 9], "v_ldexp_f32_e64": 2, "v_ldexp_f64": [0, 2, 3, 4, 9], "v_lerp_u8": [0, 2, 3, 4, 9], "v_log_clamp_f32": 2, "v_log_clamp_f32_e64": 2, "v_log_f16": [0, 3, 4, 9], "v_log_f16_dpp": [0, 3, 4, 9], "v_log_f16_e64": [0, 3, 4, 9], "v_log_f16_sdwa": [0, 3, 4, 9], "v_log_f32": [0, 2, 3, 4, 9], "v_log_f32_dpp": [0, 3, 4, 9], "v_log_f32_e64": [0, 2, 3, 4, 9], "v_log_f32_sdwa": [0, 3, 4, 9], "v_log_legacy_f32": [2, 3, 4, 9], "v_log_legacy_f32_dpp": [3, 4, 9], "v_log_legacy_f32_e64": [2, 3, 4, 9], "v_log_legacy_f32_sdwa": [3, 4, 9], "v_lshl_add_u32": [0, 4, 9], "v_lshl_b32": 2, "v_lshl_b32_e64": 2, "v_lshl_b64": 2, "v_lshl_or_b32": [0, 4, 9], "v_lshlrev_b16": [0, 3, 4, 9], "v_lshlrev_b16_dpp": [3, 4, 9], "v_lshlrev_b16_e64": [3, 4, 9], "v_lshlrev_b16_sdwa": [3, 4, 9], "v_lshlrev_b32": [0, 2, 3, 4, 9], "v_lshlrev_b32_dpp": [0, 3, 4, 9], "v_lshlrev_b32_e64": [0, 2, 3, 4, 9], "v_lshlrev_b32_sdwa": [0, 3, 4, 9], "v_lshlrev_b64": [0, 3, 4, 9], "v_lshr_b32": 2, "v_lshr_b32_e64": 2, "v_lshr_b64": 2, "v_lshrrev_b16": [0, 3, 4, 9], "v_lshrrev_b16_dpp": [3, 4, 9], "v_lshrrev_b16_e64": [3, 4, 9], "v_lshrrev_b16_sdwa": [3, 4, 9], "v_lshrrev_b32": [0, 2, 3, 4, 9], "v_lshrrev_b32_dpp": [0, 3, 4, 9], "v_lshrrev_b32_e64": [0, 2, 3, 4, 9], "v_lshrrev_b32_sdwa": [0, 3, 4, 9], "v_lshrrev_b64": [0, 3, 4, 9], "v_mac_f16": [3, 4, 9], "v_mac_f16_dpp": [3, 4, 9], "v_mac_f16_e64": [3, 4, 9], "v_mac_f16_sdwa": 3, "v_mac_f32": [0, 2, 3, 4, 9], "v_mac_f32_dpp": [0, 3, 4, 9], "v_mac_f32_e64": [0, 2, 3, 4, 9], "v_mac_f32_sdwa": 3, "v_mac_legacy_f32": [0, 2], "v_mac_legacy_f32_e64": [0, 2], "v_mad_f16": [3, 4, 9], "v_mad_f32": [0, 2, 3, 4, 9], "v_mad_i16": [0, 3, 4, 9], "v_mad_i32_i16": [0, 4, 9], "v_mad_i32_i24": [0, 2, 3, 4, 9], "v_mad_i64_i32": [0, 2, 3, 4, 9], "v_mad_legacy_f16": [4, 9], "v_mad_legacy_f32": [0, 2, 3, 4, 9], "v_mad_legacy_i16": [4, 9], "v_mad_legacy_u16": [4, 9], "v_mad_mix": 580, "v_mad_mix_f32": 5, "v_mad_mixhi_f16": 5, "v_mad_mixlo_f16": 5, "v_mad_u16": [0, 3, 4, 9], "v_mad_u32_u16": [0, 4, 9], "v_mad_u32_u24": [0, 2, 3, 4, 9], "v_mad_u64_u32": [0, 2, 3, 4, 9], "v_madak_f16": [3, 4, 9], "v_madak_f32": [0, 2, 3, 4, 9], "v_madmk_f16": [3, 4, 9], "v_madmk_f32": [0, 2, 3, 4, 9], "v_max3_f16": [0, 4, 9], "v_max3_f32": [0, 2, 3, 4, 9, 579], "v_max3_i16": [0, 4, 9, 579], "v_max3_i32": [0, 2, 3, 4, 9], "v_max3_u16": [0, 4, 9], "v_max3_u32": [0, 2, 3, 4, 9], "v_max_f16": [0, 3, 4, 9, 582], "v_max_f16_dpp": [0, 3, 4, 9], "v_max_f16_e32": 582, "v_max_f16_e64": [0, 3, 4, 9], "v_max_f16_sdwa": [0, 3, 4, 9], "v_max_f32": [0, 2, 3, 4, 9], "v_max_f32_dpp": [0, 3, 4, 9], "v_max_f32_e64": [0, 2, 3, 4, 9], "v_max_f32_sdwa": [0, 3, 4, 9], "v_max_f64": [0, 2, 3, 4, 9], "v_max_i16": [0, 3, 4, 9], "v_max_i16_dpp": [3, 4, 9], "v_max_i16_e64": [3, 4, 9], "v_max_i16_sdwa": [3, 4, 9], "v_max_i32": [0, 2, 3, 4, 9], "v_max_i32_dpp": [0, 3, 4, 9], "v_max_i32_e64": [0, 2, 3, 4, 9], "v_max_i32_sdwa": [0, 3, 4, 9], "v_max_legacy_f32": 2, "v_max_legacy_f32_e64": 2, "v_max_u16": [0, 3, 4, 9], "v_max_u16_dpp": [3, 4, 9], "v_max_u16_e64": [3, 4, 9], "v_max_u16_sdwa": [3, 4, 9], "v_max_u32": [0, 2, 3, 4, 9], "v_max_u32_dpp": [0, 3, 4, 9], "v_max_u32_e64": [0, 2, 3, 4, 9], "v_max_u32_sdwa": [0, 3, 4, 9], "v_mbcnt_hi_u32_b32": [0, 2, 3, 4, 9], "v_mbcnt_hi_u32_b32_e64": 2, "v_mbcnt_lo_u32_b32": [0, 2, 3, 4, 9], "v_mbcnt_lo_u32_b32_e64": 2, "v_med3_f16": [0, 4, 9], "v_med3_f32": [0, 2, 3, 4, 9], "v_med3_i16": [0, 4, 9], "v_med3_i32": [0, 2, 3, 4, 9], "v_med3_u16": [0, 4, 9], "v_med3_u32": [0, 2, 3, 4, 9], "v_mfma_f32_16x16x16bf16_1k": 9, "v_mfma_f32_16x16x16f16": [8, 9], "v_mfma_f32_16x16x1f32": [8, 9], "v_mfma_f32_16x16x2bf16": [8, 9], "v_mfma_f32_16x16x4bf16_1k": 9, "v_mfma_f32_16x16x4f16": [8, 9], "v_mfma_f32_16x16x4f32": [8, 9], "v_mfma_f32_16x16x8bf16": [8, 9], "v_mfma_f32_32x32x1f32": [8, 9], "v_mfma_f32_32x32x2bf16": [8, 9], "v_mfma_f32_32x32x2f32": [8, 9], "v_mfma_f32_32x32x4bf16": [8, 9], "v_mfma_f32_32x32x4bf16_1k": 9, "v_mfma_f32_32x32x4f16": [8, 9], "v_mfma_f32_32x32x8bf16_1k": 9, "v_mfma_f32_32x32x8f16": [8, 9], "v_mfma_f32_4x4x1f32": [8, 9], "v_mfma_f32_4x4x2bf16": [8, 9], "v_mfma_f32_4x4x4bf16_1k": 9, "v_mfma_f32_4x4x4f16": [8, 9], "v_mfma_f64_16x16x4f64": 9, "v_mfma_f64_4x4x4f64": 9, "v_mfma_i32_16x16x16i8": [8, 9], "v_mfma_i32_16x16x4i8": [8, 9], "v_mfma_i32_32x32x4i8": [8, 9], "v_mfma_i32_32x32x8i8": [8, 9], "v_mfma_i32_4x4x4i8": [8, 9], "v_min3_f16": [0, 4, 9], "v_min3_f32": [0, 2, 3, 4, 9], "v_min3_i16": [0, 4, 9], "v_min3_i32": [0, 2, 3, 4, 9], "v_min3_u16": [0, 4, 9], "v_min3_u32": [0, 2, 3, 4, 9], "v_min_f16": [0, 3, 4, 9], "v_min_f16_dpp": [0, 3, 4, 9], "v_min_f16_e64": [0, 3, 4, 9], "v_min_f16_sdwa": [0, 3, 4, 9], "v_min_f32": [0, 2, 3, 4, 9], "v_min_f32_dpp": [0, 3, 4, 9], "v_min_f32_e64": [0, 2, 3, 4, 9], "v_min_f32_sdwa": [0, 3, 4, 9], "v_min_f64": [0, 2, 3, 4, 9], "v_min_i16": [0, 3, 4, 9], "v_min_i16_dpp": [3, 4, 9], "v_min_i16_e64": [3, 4, 9], "v_min_i16_sdwa": [3, 4, 9], "v_min_i32": [0, 2, 3, 4, 9], "v_min_i32_dpp": [0, 3, 4, 9], "v_min_i32_e64": [0, 2, 3, 4, 9], "v_min_i32_sdwa": [0, 3, 4, 9], "v_min_legacy_f32": 2, "v_min_legacy_f32_e64": 2, "v_min_u16": [0, 3, 4, 9], "v_min_u16_dpp": [3, 4, 9], "v_min_u16_e64": [3, 4, 9], "v_min_u16_sdwa": [3, 4, 9], "v_min_u32": [0, 2, 3, 4, 9, 582], "v_min_u32_dpp": [0, 3, 4, 9], "v_min_u32_e64": [0, 2, 3, 4, 9], "v_min_u32_sdwa": [0, 3, 4, 9], "v_mov_b32": [0, 2, 3, 4, 9, 582], "v_mov_b32_dpp": [0, 3, 4, 9], "v_mov_b32_e32": 582, "v_mov_b32_e64": [0, 2, 3, 4, 9], "v_mov_b32_sdwa": [0, 3, 4, 9], "v_movreld_b32": [0, 2, 3], "v_movreld_b32_dpp": 0, "v_movreld_b32_e64": [0, 2, 3], "v_movreld_b32_sdwa": 0, "v_movrels_b32": [0, 2, 3], "v_movrels_b32_dpp": 0, "v_movrels_b32_e64": [0, 2, 3], "v_movrels_b32_sdwa": 0, "v_movrelsd_2_b32": 0, "v_movrelsd_2_b32_dpp": 0, "v_movrelsd_2_b32_e64": 0, "v_movrelsd_2_b32_sdwa": 0, "v_movrelsd_b32": [0, 2, 3], "v_movrelsd_b32_dpp": 0, "v_movrelsd_b32_e64": [0, 2, 3], "v_movrelsd_b32_sdwa": 0, "v_mqsad_pk_u16_u8": [0, 2, 3, 4, 9], "v_mqsad_u32_u8": [0, 2, 3, 4, 9], "v_msad_u8": [0, 2, 3, 4, 9], "v_mul_f16": [0, 3, 4, 9], "v_mul_f16_dpp": [0, 3, 4, 9], "v_mul_f16_e64": [0, 3, 4, 9], "v_mul_f16_sdwa": [0, 3, 4, 9], "v_mul_f32": [0, 2, 3, 4, 9], "v_mul_f32_dpp": [0, 3, 4, 9], "v_mul_f32_e64": [0, 2, 3, 4, 9], "v_mul_f32_sdwa": [0, 3, 4, 9], "v_mul_f64": [0, 2, 3, 4, 9], "v_mul_hi_i32": [0, 2, 3, 4, 9], "v_mul_hi_i32_i24": [0, 2, 3, 4, 9], "v_mul_hi_i32_i24_dpp": [0, 3, 4, 9], "v_mul_hi_i32_i24_e64": [0, 2, 3, 4, 9], "v_mul_hi_i32_i24_sdwa": [0, 3, 4, 9], "v_mul_hi_u32": [0, 2, 3, 4, 9], "v_mul_hi_u32_u24": [0, 2, 3, 4, 9], "v_mul_hi_u32_u24_dpp": [0, 3, 4, 9], "v_mul_hi_u32_u24_e64": [0, 2, 3, 4, 9], "v_mul_hi_u32_u24_sdwa": [0, 3, 4, 9], "v_mul_i32_i24": [0, 2, 3, 4, 9], "v_mul_i32_i24_dpp": [0, 3, 4, 9], "v_mul_i32_i24_e32": 582, "v_mul_i32_i24_e64": [0, 2, 3, 4, 9, 582], "v_mul_i32_i24_sdwa": [0, 3, 4, 9], "v_mul_legacy_f32": [0, 2, 3, 4, 9], "v_mul_legacy_f32_dpp": [0, 3, 4], "v_mul_legacy_f32_e64": [0, 2, 3, 4], "v_mul_legacy_f32_sdwa": [0, 3, 4], "v_mul_lo_i32": 2, "v_mul_lo_u16": [0, 3, 4, 9], "v_mul_lo_u16_dpp": [3, 4, 9], "v_mul_lo_u16_e64": [3, 4, 9], "v_mul_lo_u16_sdwa": [3, 4, 9], "v_mul_lo_u32": [0, 2, 3, 4, 9], "v_mul_u32_u24": [0, 2, 3, 4, 9], "v_mul_u32_u24_dpp": [0, 3, 4, 9], "v_mul_u32_u24_e64": [0, 2, 3, 4, 9], "v_mul_u32_u24_sdwa": [0, 3, 4, 9], "v_mullit_f32": [0, 2], "v_nop": [0, 2, 3, 4, 9, 582], "v_nop_e64": [0, 2, 3, 4, 9], "v_not_b32": [0, 2, 3, 4, 9], "v_not_b32_dpp": [0, 3, 4, 9], "v_not_b32_e64": [0, 2, 3, 4, 9], "v_not_b32_sdwa": [0, 3, 4, 9], "v_or3_b32": [0, 4, 9], "v_or_b32": [0, 2, 3, 4, 9], "v_or_b32_dpp": [0, 3, 4, 9], "v_or_b32_e64": [0, 2, 3, 4, 9], "v_or_b32_sdwa": [0, 3, 4, 9], "v_pack_b32_f16": [0, 4, 9], "v_perm_b32": [0, 3, 4, 9], "v_permlane16_b32": 0, "v_permlanex16_b32": 0, "v_pipeflush": 0, "v_pipeflush_e64": 0, "v_pk_add_f16": [0, 4, 9, 579], "v_pk_add_f32": 9, "v_pk_add_i16": [0, 4, 9, 579], "v_pk_add_u16": [0, 4, 9, 579], "v_pk_ashrrev_i16": [0, 4, 9], "v_pk_fma_f16": [0, 4, 9], "v_pk_fma_f32": 9, "v_pk_fmac_f16": [0, 8, 9], "v_pk_lshlrev_b16": [0, 4, 9], "v_pk_lshrrev_b16": [0, 4, 9], "v_pk_mad_i16": [0, 4, 9], "v_pk_mad_u16": [0, 4, 9], "v_pk_max_f16": [0, 4, 9], "v_pk_max_i16": [0, 4, 9], "v_pk_max_u16": [0, 4, 9], "v_pk_min_f16": [0, 4, 9], "v_pk_min_i16": [0, 4, 9], "v_pk_min_u16": [0, 4, 9], "v_pk_mov_b32": 9, "v_pk_mul_f16": [0, 4, 9], "v_pk_mul_f32": 9, "v_pk_mul_lo_u16": [0, 4, 9], "v_pk_sub_i16": [0, 4, 9], "v_pk_sub_u16": [0, 4, 9], "v_qsad_pk_u16_u8": [0, 2, 3, 4, 9], "v_rcp_clamp_f32": 2, "v_rcp_clamp_f32_e64": 2, "v_rcp_clamp_f64": 2, "v_rcp_clamp_f64_e64": 2, "v_rcp_f16": [0, 3, 4, 9], "v_rcp_f16_dpp": [0, 3, 4, 9], "v_rcp_f16_e64": [0, 3, 4, 9], "v_rcp_f16_sdwa": [0, 3, 4, 9], "v_rcp_f32": [0, 2, 3, 4, 9], "v_rcp_f32_dpp": [0, 3, 4, 9], "v_rcp_f32_e64": [0, 2, 3, 4, 9], "v_rcp_f32_sdwa": [0, 3, 4, 9], "v_rcp_f64": [0, 2, 3, 4, 9], "v_rcp_f64_e64": [0, 2, 3, 4, 9], "v_rcp_iflag_f32": [0, 2, 3, 4, 9], "v_rcp_iflag_f32_dpp": [0, 3, 4, 9], "v_rcp_iflag_f32_e64": [0, 2, 3, 4, 9], "v_rcp_iflag_f32_sdwa": [0, 3, 4, 9], "v_rcp_legacy_f32": 2, "v_rcp_legacy_f32_e64": 2, "v_readfirstlane_b32": [0, 2, 3, 4, 9], "v_readlane_b32": [0, 2, 3, 4, 9], "v_reg": 599, "v_rndne_f16": [0, 3, 4, 9], "v_rndne_f16_dpp": [0, 3, 4, 9], "v_rndne_f16_e64": [0, 3, 4, 9], "v_rndne_f16_sdwa": [0, 3, 4, 9], "v_rndne_f32": [0, 2, 3, 4, 9], "v_rndne_f32_dpp": [0, 3, 4, 9], "v_rndne_f32_e64": [0, 2, 3, 4, 9], "v_rndne_f32_sdwa": [0, 3, 4, 9], "v_rndne_f64": [0, 2, 3, 4, 9], "v_rndne_f64_e64": [0, 2, 3, 4, 9], "v_rsq_clamp_f32": 2, "v_rsq_clamp_f32_e64": 2, "v_rsq_clamp_f64": 2, "v_rsq_clamp_f64_e64": 2, "v_rsq_f16": [0, 3, 4, 9], "v_rsq_f16_dpp": [0, 3, 4, 9], "v_rsq_f16_e64": [0, 3, 4, 9], "v_rsq_f16_sdwa": [0, 3, 4, 9], "v_rsq_f32": [0, 2, 3, 4, 9], "v_rsq_f32_dpp": [0, 3, 4, 9], "v_rsq_f32_e64": [0, 2, 3, 4, 9], "v_rsq_f32_sdwa": [0, 3, 4, 9], "v_rsq_f64": [0, 2, 3, 4, 9], "v_rsq_f64_e64": [0, 2, 3, 4, 9], "v_rsq_legacy_f32": 2, "v_rsq_legacy_f32_e64": 2, "v_sad_hi_u8": [0, 2, 3, 4, 9], "v_sad_u16": [0, 2, 3, 4, 9], "v_sad_u32": [0, 2, 3, 4, 9], "v_sad_u8": [0, 2, 3, 4, 9], "v_sat_pk_u8_i16": [0, 4, 9], "v_sat_pk_u8_i16_dpp": [0, 4, 9], "v_sat_pk_u8_i16_e64": [0, 4, 9], "v_sat_pk_u8_i16_sdwa": [0, 4, 9], "v_screen_partition_4se_b32": [4, 9], "v_screen_partition_4se_b32_dpp": [4, 9], "v_screen_partition_4se_b32_e64": [4, 9], "v_screen_partition_4se_b32_sdwa": [4, 9], "v_sin_f16": [0, 3, 4, 9], "v_sin_f16_dpp": [0, 3, 4, 9], "v_sin_f16_e64": [0, 3, 4, 9], "v_sin_f16_sdwa": [0, 3, 4, 9], "v_sin_f32": [0, 2, 3, 4, 9, 582], "v_sin_f32_dpp": [0, 3, 4, 9], "v_sin_f32_e64": [0, 2, 3, 4, 9], "v_sin_f32_sdwa": [0, 3, 4, 9], "v_sqrt_f16": [0, 3, 4, 9], "v_sqrt_f16_dpp": [0, 3, 4, 9], "v_sqrt_f16_e64": [0, 3, 4, 9], "v_sqrt_f16_sdwa": [0, 3, 4, 9], "v_sqrt_f32": [0, 2, 3, 4, 9], "v_sqrt_f32_dpp": [0, 3, 4, 9], "v_sqrt_f32_e64": [0, 2, 3, 4, 9], "v_sqrt_f32_sdwa": [0, 3, 4, 9], "v_sqrt_f64": [0, 2, 3, 4, 9], "v_sqrt_f64_e64": [0, 2, 3, 4, 9], "v_sub_co_ci_u32": 0, "v_sub_co_ci_u32_dpp": 0, "v_sub_co_ci_u32_e64": 0, "v_sub_co_ci_u32_sdwa": 0, "v_sub_co_u32": [0, 4, 9], "v_sub_co_u32_dpp": [4, 9], "v_sub_co_u32_e64": [4, 9], "v_sub_co_u32_sdwa": [4, 9], "v_sub_f16": [0, 3, 4, 9], "v_sub_f16_dpp": [0, 3, 4, 9], "v_sub_f16_e64": [0, 3, 4, 9], "v_sub_f16_sdwa": [0, 3, 4, 9], "v_sub_f32": [0, 2, 3, 4, 9], "v_sub_f32_dpp": [0, 3, 4, 9], "v_sub_f32_e64": [0, 2, 3, 4, 9], "v_sub_f32_sdwa": [0, 3, 4, 9], "v_sub_i16": [4, 9], "v_sub_i32": [2, 4, 9], "v_sub_i32_e64": 2, "v_sub_nc_i16": 0, "v_sub_nc_i32": 0, "v_sub_nc_u16": 0, "v_sub_nc_u32": 0, "v_sub_nc_u32_dpp": 0, "v_sub_nc_u32_e64": 0, "v_sub_nc_u32_sdwa": 0, "v_sub_u16": [3, 4, 9], "v_sub_u16_dpp": [3, 4, 9], "v_sub_u16_e64": [3, 4, 9], "v_sub_u16_sdwa": [3, 4, 9], "v_sub_u32": [3, 4, 9], "v_sub_u32_dpp": [3, 4, 9], "v_sub_u32_e64": [3, 4, 9], "v_sub_u32_sdwa": [3, 4, 9], "v_subb_co_u32": [4, 9], "v_subb_co_u32_dpp": [4, 9], "v_subb_co_u32_e64": [4, 9], "v_subb_co_u32_sdwa": [4, 9], "v_subb_u32": [2, 3], "v_subb_u32_dpp": 3, "v_subb_u32_e64": [2, 3], "v_subb_u32_sdwa": 3, "v_subbrev_co_u32": [4, 9], "v_subbrev_co_u32_dpp": [4, 9], "v_subbrev_co_u32_e64": [4, 9], "v_subbrev_co_u32_sdwa": [4, 9], "v_subbrev_u32": [2, 3], "v_subbrev_u32_dpp": 3, "v_subbrev_u32_e64": [2, 3], "v_subbrev_u32_sdwa": 3, "v_subrev_co_ci_u32": 0, "v_subrev_co_ci_u32_dpp": 0, "v_subrev_co_ci_u32_e64": 0, "v_subrev_co_ci_u32_sdwa": 0, "v_subrev_co_u32": [0, 4, 9], "v_subrev_co_u32_dpp": [4, 9], "v_subrev_co_u32_e64": [4, 9], "v_subrev_co_u32_sdwa": [4, 9], "v_subrev_f16": [0, 3, 4, 9], "v_subrev_f16_dpp": [0, 3, 4, 9], "v_subrev_f16_e64": [0, 3, 4, 9], "v_subrev_f16_sdwa": [0, 3, 4, 9], "v_subrev_f32": [0, 2, 3, 4, 9], "v_subrev_f32_dpp": [0, 3, 4, 9], "v_subrev_f32_e64": [0, 2, 3, 4, 9], "v_subrev_f32_sdwa": [0, 3, 4, 9], "v_subrev_i32": 2, "v_subrev_i32_e64": 2, "v_subrev_nc_u32": 0, "v_subrev_nc_u32_dpp": 0, "v_subrev_nc_u32_e64": 0, "v_subrev_nc_u32_sdwa": 0, "v_subrev_u16": [3, 4, 9], "v_subrev_u16_dpp": [3, 4, 9], "v_subrev_u16_e64": [3, 4, 9], "v_subrev_u16_sdwa": [3, 4, 9], "v_subrev_u32": [3, 4, 9], "v_subrev_u32_dpp": [3, 4, 9], "v_subrev_u32_e64": [3, 4, 9], "v_subrev_u32_sdwa": [3, 4, 9], "v_swap_b32": [0, 4, 9], "v_swaprel_b32": 0, "v_trig_preop_f64": [0, 2, 3, 4, 9], "v_trunc_f16": [0, 3, 4, 9], "v_trunc_f16_dpp": [0, 3, 4, 9], "v_trunc_f16_e64": [0, 3, 4, 9], "v_trunc_f16_sdwa": [0, 3, 4, 9], "v_trunc_f32": [0, 2, 3, 4, 9], "v_trunc_f32_dpp": [0, 3, 4, 9], "v_trunc_f32_e64": [0, 2, 3, 4, 9], "v_trunc_f32_sdwa": [0, 3, 4, 9], "v_trunc_f64": [0, 2, 3, 4, 9], "v_trunc_f64_dpp": 9, "v_trunc_f64_e64": [0, 2, 3, 4, 9], "v_writelane_b32": [0, 2, 3, 4, 9], "v_xad_u32": [0, 4, 9], "v_xnor_b32": [0, 7, 8, 9], "v_xnor_b32_dpp": [0, 7, 8, 9], "v_xnor_b32_e64": [0, 7, 8, 9], "v_xnor_b32_sdwa": [0, 7, 8, 9], "v_xor3_b32": 0, "v_xor_b32": [0, 2, 3, 4, 9], "v_xor_b32_dpp": [0, 3, 4, 9], "v_xor_b32_e64": [0, 2, 3, 4, 9], "v_xor_b32_sdwa": [0, 3, 4, 9], "va_list": 702, "vacat": 746, "vaddr": [0, 2, 3, 4, 8, 9, 65, 66, 346, 373, 374, 486, 487], "vadv": 765, "vagu": 659, "val": [586, 589, 602, 651, 655, 698, 702, 715, 734, 753, 761, 771, 794, 795, 796, 797, 798, 799, 800, 801], "val0": [655, 702], "val1": [655, 702, 704, 759, 760, 761], "val2": [655, 702, 704, 759, 760, 761], "val29": 655, "val3": [702, 760], "val7": 702, "val_express": 577, "val_offset": 577, "val_success": 702, "vala": 715, "valb": 715, "valc": 715, "valgrind": [604, 608, 696, 766], "valid": [55, 146, 245, 370, 482, 577, 580, 581, 582, 589, 590, 593, 596, 597, 599, 602, 603, 606, 609, 611, 616, 618, 623, 631, 633, 636, 640, 641, 644, 650, 651, 659, 661, 664, 667, 669, 670, 671, 676, 679, 680, 694, 701, 702, 703, 704, 706, 707, 714, 715, 716, 724, 726, 729, 732, 734, 736, 743, 745, 750, 751, 753, 754, 755, 757, 761, 766, 768, 772, 773, 775, 776, 794, 795, 796, 797, 798, 799, 800, 801], "valids": 761, "valn": 761, "valu": [25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 44, 46, 47, 48, 49, 50, 55, 61, 79, 99, 115, 125, 126, 127, 128, 129, 130, 131, 142, 143, 144, 146, 163, 188, 202, 210, 211, 212, 213, 214, 219, 220, 222, 234, 236, 237, 238, 239, 240, 241, 245, 251, 267, 290, 304, 336, 362, 363, 364, 365, 366, 367, 370, 372, 378, 379, 380, 392, 393, 394, 436, 439, 440, 441, 443, 444, 462, 471, 474, 475, 476, 477, 478, 479, 482, 485, 491, 492, 493, 505, 506, 507, 549, 552, 553, 554, 556, 557, 568, 570, 576, 580, 583, 585, 586, 588, 589, 591, 594, 595, 597, 598, 599, 602, 603, 604, 608, 609, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 628, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 644, 645, 646, 649, 650, 655, 656, 657, 659, 660, 661, 662, 663, 666, 668, 671, 673, 675, 676, 677, 678, 679, 680, 692, 694, 695, 698, 699, 700, 701, 703, 706, 712, 713, 715, 717, 718, 721, 722, 724, 725, 726, 727, 729, 730, 735, 741, 742, 745, 747, 749, 753, 755, 759, 760, 762, 765, 766, 768, 770, 771, 772, 773, 774, 776, 779, 780, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 805], "valuabl": [601, 608, 654, 659, 681, 687, 739, 765], "value1": 750, "value2": [750, 751], "value_align": 702, "value_desc": 651, "value_kind": [582, 702], "value_load": 702, "value_typ": [582, 777], "valuecol": 699, "valuedisallow": 651, "valuefield": 759, "valuekind": [582, 602], "valuelist": 761, "valuelistn": 761, "valueopt": 651, "valuerequir": 651, "valuesuffix": 761, "valuet": 734, "valuetrack": [702, 755], "valuetyp": [582, 599, 662, 762, 771], "vanilla": 652, "var": [598, 603, 622, 634, 714, 750, 759, 761, 799, 800, 801], "var1": 598, "var_loc": 676, "var_nam": 598, "vararg": [589, 598, 599, 702, 734, 795], "varbit": 759, "vardecl": 602, "varexpr": [799, 800, 801], "varexprast": [799, 800, 801], "vari": [121, 206, 427, 540, 577, 582, 586, 589, 593, 599, 600, 655, 664, 671, 676, 702, 704, 711, 717, 726, 734, 748, 756, 761, 802], "variabl": [577, 582, 584, 585, 586, 587, 594, 595, 606, 608, 612, 613, 615, 617, 622, 624, 630, 634, 636, 646, 650, 651, 653, 655, 656, 661, 664, 666, 668, 669, 670, 671, 673, 686, 687, 696, 697, 701, 703, 706, 707, 712, 713, 714, 715, 719, 720, 721, 722, 725, 726, 729, 734, 747, 751, 753, 754, 755, 759, 760, 764, 765, 766, 768, 769, 771, 773, 774, 775, 777, 779, 793, 794, 795, 796, 797, 798, 800, 802, 803, 804], "variable_nam": [597, 739], "variable_op": 761, "variableexprast": [794, 795, 796, 797, 798, 799, 800, 801], "variad": [702, 734, 743], "variadicopsaredef": 761, "variant": [579, 586, 603, 631, 651, 661, 663, 675, 676, 678, 683, 697, 702, 706, 726, 732, 734, 753, 756, 760, 761, 766, 771, 773], "variat": [585, 587, 599, 608, 661, 704, 739, 752, 756, 770, 771, 779], "varieti": [585, 586, 589, 595, 598, 599, 613, 653, 659, 661, 668, 671, 689, 703, 704, 734, 737, 743, 748, 750, 753, 759, 761, 795, 796, 797, 798, 802], "various": [581, 585, 586, 589, 593, 594, 597, 599, 602, 604, 626, 631, 636, 649, 653, 654, 656, 658, 661, 666, 667, 671, 676, 680, 696, 697, 699, 702, 705, 707, 708, 713, 715, 716, 717, 718, 720, 721, 722, 729, 730, 734, 736, 739, 742, 743, 745, 747, 750, 751, 759, 760, 761, 762, 765, 766, 771, 772, 773, 774, 775, 777, 793, 794, 796, 797, 801], "varnam": [797, 798, 799, 800, 801], "vasileio": 741, "vasrc0": 8, "vasrc1": 8, "vbr": [589, 615], "vbr4": 589, "vbr5": 589, "vbr6": [589, 745], "vbr7": 745, "vbr8": [589, 745], "vc": 690, "vc110": 727, "vc140": 727, "vc2": 727, "vc4": 727, "vc41": [722, 727], "vc50": 727, "vc70": 727, "vc70dep": 727, "vc80": 727, "vc98": 727, "vcall": 596, "vcc": [0, 2, 3, 4, 9, 10, 11, 12, 13, 22, 24, 35, 36, 56, 57, 58, 65, 66, 69, 70, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 116, 117, 123, 147, 148, 157, 158, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 208, 246, 247, 257, 258, 261, 262, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 307, 308, 312, 313, 319, 320, 321, 322, 323, 342, 346, 347, 348, 349, 351, 352, 373, 374, 375, 377, 378, 379, 381, 382, 384, 386, 389, 390, 395, 396, 397, 398, 399, 402, 403, 404, 405, 413, 414, 415, 416, 417, 418, 419, 420, 421, 486, 487, 488, 490, 491, 492, 494, 495, 497, 499, 502, 503, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 582], "vcc_32": 582, "vcc_64": 582, "vcc_hi": 581, "vcc_lo": [102, 581], "vccz": [10, 11, 12, 13, 56, 80, 81, 82, 83, 84, 85, 86, 87, 89, 92, 94, 95, 147, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 181, 182, 184, 246, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 283, 284, 286, 307, 308, 312, 313, 319, 320, 321, 322, 323, 342, 347, 348, 349, 351, 352, 395, 398, 399, 402, 403, 404, 405, 413, 414, 417, 421, 508, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 525, 526, 529, 533], "vcrt": 690, "vcs": 704, "vcsrevis": 597, "vdata": [0, 2, 3, 4, 8, 9, 578], "vdata0": [0, 2, 3, 4, 9], "vdata1": [0, 2, 3, 4, 9], "vdst": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 578], "ve": [599, 602, 652, 659, 660, 666, 667, 669, 675, 702, 713, 716, 733, 734, 736, 737, 739, 746, 755, 766, 777, 794, 796, 798, 799, 800, 801, 802], "vec": [702, 734], "vec0": 702, "vec01": 702, "vec012": 702, "vec0123": 702, "vec1": [702, 734], "vec2": [702, 734], "vec_splat": 703, "vec_type_hint": 582, "vector": [102, 115, 189, 202, 291, 304, 429, 471, 542, 576, 577, 581, 582, 588, 589, 599, 602, 631, 650, 651, 666, 670, 675, 678, 701, 703, 714, 715, 760, 764, 768, 769, 771, 777, 794, 795, 796, 797, 798, 799, 800, 801, 802], "vector_length": 702, "vector_redirect": 702, "vectoriz": 767, "vectorize_width": 770, "vectorti": 702, "vectortyp": 734, "vectsiz": 761, "vectypehint": 582, "vega": 582, "vega7nm": 582, "vehicl": [598, 602], "vehiclemak": 602, "vehicletyp": 602, "veli": 599, "vend": 700, "vendor": [577, 602, 702, 737, 748, 751, 800], "vendor_and_architecture_nam": 582, "vendor_name_s": 582, "venu": 746, "venv": 764, "ver60": 722, "verb": 602, "verbatim": [651, 733, 761, 771], "verbos": [603, 604, 606, 608, 622, 628, 634, 635, 642, 646, 696, 697, 701, 708, 734, 739, 771, 774, 775, 777], "verd": 582, "veri": [577, 585, 586, 587, 589, 593, 595, 598, 599, 601, 602, 603, 620, 631, 636, 651, 658, 659, 660, 661, 664, 666, 667, 668, 669, 670, 671, 674, 681, 685, 687, 689, 691, 694, 695, 696, 701, 702, 704, 708, 710, 711, 713, 714, 716, 717, 721, 729, 732, 734, 736, 739, 742, 745, 750, 751, 755, 759, 762, 764, 765, 766, 770, 773, 774, 777, 780, 781, 793, 794, 795, 796, 797, 798, 799, 802], "verif": [582, 651, 681, 702, 732, 747, 764, 768, 769], "verifi": [583, 584, 593, 596, 599, 606, 607, 615, 629, 631, 649, 659, 671, 681, 694, 697, 701, 702, 704, 709, 727, 735, 736, 750, 751, 752, 753, 755, 766, 773, 775, 795, 796, 797, 798, 799, 800, 801], "verify_arch": 629, "verifyfunct": [795, 796, 797, 798, 799, 800, 801], "verifypreservedanalysi": 775, "versa": [586, 655, 697, 702, 726, 741, 755, 766], "version": [582, 583, 584, 585, 586, 589, 594, 597, 598, 599, 603, 606, 608, 609, 611, 613, 615, 616, 617, 618, 622, 625, 627, 628, 629, 632, 633, 634, 635, 640, 641, 642, 644, 645, 646, 650, 651, 652, 653, 654, 656, 659, 660, 662, 665, 666, 668, 671, 673, 676, 678, 680, 686, 688, 692, 693, 697, 702, 710, 713, 714, 715, 717, 718, 722, 727, 729, 731, 733, 734, 736, 738, 739, 741, 743, 745, 747, 748, 750, 753, 755, 757, 759, 764, 770, 771, 773, 774, 775, 776, 778, 779, 795, 796, 797, 799, 800, 801], "version_less": 597, "versionhead": 722, "versioninglicm": 767, "versionsignatur": 722, "vertex": [97, 186, 288, 534, 582], "vertexbuffert": 582, "vertic": [736, 774], "vex": [650, 759], "vf": [739, 741], "vfabi": 702, "vfp": [588, 702], "vfp3": 693, "vfprintf": 702, "vfuncid": 702, "vg": [608, 766], "vg_leak": 608, "vgpr": [20, 49, 143, 239, 362, 474, 580, 702], "vgpr0": 582, "vgpr1": 582, "vgpr104": 582, "vgpr120": 582, "vgpr136": 582, "vgpr152": 582, "vgpr168": 582, "vgpr184": 582, "vgpr200": 582, "vgpr216": 582, "vgpr232": 582, "vgpr248": 582, "vgpr255": 582, "vgpr31": 582, "vgpr40": 582, "vgpr56": 582, "vgpr72": 582, "vgpr88": 582, "vgpr_limit": 582, "vgpr_spill_count": 582, "vgprs": [580, 582], "vgprs_use": 582, "vgrp": 582, "vhaddp": [623, 631], "vi": 582, "via": [582, 586, 594, 597, 599, 603, 631, 636, 637, 646, 649, 652, 654, 655, 657, 658, 659, 660, 661, 663, 665, 667, 668, 671, 677, 685, 686, 692, 693, 702, 704, 705, 707, 711, 716, 717, 718, 719, 720, 732, 734, 741, 743, 747, 751, 753, 756, 757, 759, 761, 762, 766, 772, 773, 774, 776, 780, 795, 796, 801], "viabl": [631, 687, 697, 701, 751], "vibrant": 659, "vic": 631, "vice": [586, 655, 697, 702, 726, 741, 755, 766], "video": [600, 734], "view": [577, 582, 586, 599, 600, 617, 636, 704, 705, 706, 713, 724, 736, 737, 739, 752, 765, 793, 797], "viewcfg": [734, 797], "viewcfgon": [734, 797], "viewer": [602, 774], "viewgraph": 734, "viewid": 582, "viewpoint": 600, "viewport": 582, "viewvc": 736, "vii": 582, "vim": [671, 752, 762], "violat": [582, 596, 600, 659, 668, 669, 702, 706, 734, 746, 797], "violent": 600, "virginia": 738, "virt": 734, "virtreg": 599, "virtreg2indexfunctor": 599, "virtregmap": 599, "virtregrewrit": 750, "virtual": [577, 582, 585, 596, 603, 608, 616, 636, 655, 658, 668, 676, 677, 678, 681, 683, 685, 695, 698, 701, 702, 708, 713, 717, 732, 734, 741, 750, 751, 759, 760, 762, 764, 771, 773, 794, 795, 796, 797, 798, 799, 800, 801], "virtualconstprop": 702, "virtualenv": 764, "virtualindex": 702, "vis": 771, "visibl": [582, 586, 589, 599, 602, 613, 633, 651, 687, 690, 701, 703, 705, 711, 715, 717, 734, 747, 750, 755, 768, 773], "visit": [593, 625, 627, 629, 633, 634, 635, 642, 644, 645, 662, 668, 734, 760, 761, 780], "visitbasicblock": 734, "visitconstrainedfpintrins": 583, "visitfab": 662, "visitfunct": 775, "visitgcroot": 668, "visiticmpinst": 593, "visitinstruct": 775, "visitor": [593, 650, 662, 668, 759, 795, 803], "visitsrl": 662, "visitxor": 593, "visual": [584, 599, 602, 603, 661, 663, 671, 672, 690, 702, 704, 721, 726, 732, 734, 736, 745, 750, 751, 771, 774, 797], "viv": 702, "vk": 581, "vk_argument": 602, "vk_basicblock": 602, "vl": 702, "vla": 702, "vlas": [663, 669], "vle": 653, "vlen": 702, "vliw": [650, 759], "vlk": 751, "vm": [0, 2, 3, 4, 581, 582, 602, 701], "vm_cnt": [115, 202, 304, 471, 576], "vma": [634, 646, 775], "vmaddr": 701, "vmcnt": [115, 202, 304, 471, 576, 582], "vmcnt_sat": [115, 202, 304, 471, 576], "vmodulekey": 780, "vmov": 603, "vms": 704, "vmulp": [623, 631], "vn": [581, 703], "vo": 613, "vocabulari": 702, "void": [582, 585, 586, 588, 589, 590, 599, 602, 603, 619, 651, 652, 655, 656, 661, 662, 664, 665, 668, 669, 679, 686, 687, 697, 700, 701, 704, 705, 706, 708, 713, 715, 717, 718, 721, 729, 732, 734, 747, 750, 751, 753, 755, 768, 770, 771, 772, 773, 774, 775, 777, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "voidtyp": 734, "volatil": [580, 582, 585, 586, 599, 631, 646, 664, 668, 713, 721, 732, 771], "volcan": 582, "volkan": 684, "volum": [670, 734], "volumin": 734, "volunt": [688, 694, 736, 744, 748], "voluntari": 736, "von": 702, "vop1": [579, 582], "vop2": [579, 582], "vop3": [578, 579, 582], "vop_dpp": 582, "vop_sdwa": 582, "vopc": [579, 582], "vote": [711, 748], "vp_fdiv": 740, "vpaddbyrr_vpadddyrr_vpaddqyrr_vpaddwyrr_vpsubbyrr_vpsubdyrr_vpsubqyrr_vpsubwyrr": 623, "vpaddqyrr": 623, "vpbasicblock": 741, "vpblock": 741, "vpblockbas": 741, "vpdef": 741, "vpic": 738, "vpinstruct": 741, "vplan": 740, "vprecip": 741, "vprecipebas": 741, "vpregionblock": 741, "vprfc": 740, "vpsubqyrr": 623, "vpsubusw": 766, "vptr": [702, 751], "vptransformst": 741, "vpuser": 741, "vpvalu": 741, "vreg": [599, 677, 678, 680], "vs": [582, 584, 585, 599, 602, 673, 675, 690, 695, 702, 718, 736, 745, 751, 752, 755, 759, 764], "vscale_rang": [589, 702], "vscnt": 582, "vset_lan": 588, "vsetq_lane_s32": 588, "vsplth": 703, "vsps": 582, "vsrc": [0, 2, 3, 4, 9], "vsrc0": [0, 1, 2, 3, 4, 7, 8, 9], "vsrc1": [0, 1, 2, 3, 4, 7, 8, 9], "vsrc2": [0, 2, 3, 4, 9], "vsrc3": [0, 2, 3, 4], "vsx": 702, "vtabl": [602, 603, 690, 701, 702, 751, 768], "vulner": [702, 742, 747, 748, 751], "vv": [603, 608], "vx": [577, 582], "vzeroupp": 623, "w0": 702, "w30": [702, 708], "w31": 702, "w64": 597, "w7100": 582, "w8": 588, "w8100": 582, "w9100": 582, "w_": 762, "wa": 702, "wait": [115, 202, 304, 471, 576, 582, 601, 602, 631, 688, 701, 717, 744, 756, 780, 794, 796], "waitcnt": [0, 2, 3, 4, 9], "waitset": 631, "waiv": 659, "wake": 736, "walk": [582, 678, 691, 701, 703, 706, 713, 714, 732, 734, 736, 773, 777], "walkarch": 734, "wall": [608, 760, 773, 802], "walltimemark": 776, "wambigu": 619, "want": [577, 582, 585, 587, 589, 595, 597, 599, 600, 601, 602, 603, 608, 617, 631, 651, 652, 654, 659, 660, 662, 664, 667, 669, 670, 671, 673, 674, 675, 678, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 704, 706, 709, 713, 714, 715, 716, 717, 718, 731, 732, 733, 734, 735, 736, 737, 747, 748, 750, 751, 752, 754, 755, 756, 760, 761, 762, 764, 765, 771, 772, 773, 774, 775, 777, 779, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803], "wari": 666, "warn": [580, 582, 595, 597, 603, 606, 613, 619, 627, 633, 645, 650, 652, 657, 659, 663, 671, 673, 678, 691, 696, 697, 702, 706, 717, 755, 759, 760, 762, 764, 767, 779, 780, 781, 801, 803], "warnmissedtransformationspass": 767, "warpsiz": 715, "warrant": [601, 659, 662, 757], "warranti": [659, 773], "warren": 658, "was": [577, 582, 584, 586, 588, 589, 591, 592, 593, 597, 599, 601, 602, 606, 608, 615, 616, 617, 623, 631, 650, 651, 652, 655, 656, 657, 659, 661, 663, 664, 667, 669, 671, 674, 675, 677, 687, 694, 698, 700, 701, 702, 704, 706, 707, 714, 716, 717, 722, 727, 730, 733, 734, 736, 739, 743, 746, 747, 750, 751, 755, 756, 759, 760, 761, 762, 767, 770, 773, 776, 777, 779, 780, 781, 782, 794, 795, 796, 797, 798, 801, 802], "wasincrementallylink": 722, "wasn": [585, 714, 798, 799, 800, 801], "wast": [707, 709, 734, 750, 752, 753, 799], "watch": [582, 659, 682], "waterfal": 688, "wave": [49, 143, 239, 362, 474, 582], "wave32": [580, 581], "wave_rol": 580, "wave_ror": 580, "wave_shl": [580, 582], "wave_shr": 580, "wavefront": [102, 116, 117, 577, 580, 582], "wavefront32": 582, "wavefront64": 582, "wavefront_s": 582, "wavefronts": 582, "wavefrontsize64": 582, "way": [577, 582, 584, 585, 586, 589, 593, 594, 595, 598, 599, 601, 602, 603, 604, 622, 630, 631, 633, 636, 637, 646, 651, 652, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 667, 668, 671, 673, 674, 675, 677, 678, 680, 681, 685, 687, 692, 693, 694, 695, 696, 697, 698, 700, 702, 704, 706, 708, 712, 713, 714, 715, 716, 717, 718, 719, 726, 727, 729, 732, 733, 734, 735, 736, 737, 739, 741, 744, 745, 747, 750, 751, 753, 755, 757, 759, 761, 762, 764, 765, 766, 768, 770, 771, 772, 773, 774, 775, 777, 779, 780, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "waypoint": 593, "wb": 631, "wc": 702, "wchar_t": 702, "wcover": 602, "wd": 702, "we": [577, 582, 584, 585, 587, 588, 589, 590, 591, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 608, 623, 631, 650, 651, 652, 654, 655, 656, 659, 660, 661, 664, 665, 667, 668, 669, 670, 671, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 685, 687, 688, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 704, 706, 707, 708, 711, 713, 715, 716, 717, 718, 720, 721, 722, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 743, 746, 747, 748, 750, 751, 753, 754, 755, 756, 757, 761, 762, 766, 767, 768, 770, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "weak": [586, 589, 632, 633, 634, 663, 666, 701, 702, 705, 714, 717, 734, 743, 799], "weak_odr": [589, 702], "weakanylinkag": 734, "weaken": [631, 633], "weaker": 702, "weakest": [586, 599], "weakodrlinkag": 734, "weakvh": 734, "wealth": 654, "web": [601, 659, 738, 743], "webassembl": [599, 671, 702, 739], "webkit": [702, 739, 753], "webkit_jscc": [589, 702], "websit": [598, 736], "wednesday": [670, 711], "week": [601, 654, 670, 694, 711, 739, 746, 748, 757], "weekend": [601, 711], "weight": [663, 702, 708, 742], "weird": 599, "welcom": [600, 601, 653, 659, 670, 671, 673, 692, 711, 717, 755, 773, 778, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "well": [577, 582, 583, 585, 586, 589, 593, 594, 595, 597, 598, 599, 600, 601, 602, 604, 617, 618, 631, 632, 636, 649, 651, 654, 655, 658, 659, 662, 664, 665, 666, 671, 675, 678, 685, 686, 687, 691, 695, 697, 701, 704, 705, 706, 708, 711, 714, 715, 717, 721, 722, 724, 725, 730, 732, 733, 734, 736, 738, 739, 740, 743, 745, 746, 747, 748, 750, 751, 752, 755, 757, 761, 762, 766, 767, 769, 770, 773, 774, 775, 779, 794, 795, 796, 798, 799, 800, 801, 803], "weng": 652, "wennborg": 694, "went": [602, 796, 797], "were": [577, 582, 586, 588, 599, 602, 603, 608, 617, 622, 630, 631, 640, 641, 646, 649, 651, 652, 655, 656, 659, 661, 666, 673, 676, 678, 694, 696, 697, 700, 701, 702, 703, 704, 713, 714, 716, 717, 722, 732, 734, 736, 746, 750, 751, 755, 757, 759, 760, 762, 770, 775, 780, 802], "weren": [659, 678], "werror": 686, "wf": 702, "wg21": 751, "wget": 671, "wgp": 582, "wgp_mode": 582, "wgps": 582, "what": [577, 580, 581, 582, 585, 586, 588, 589, 590, 592, 594, 597, 599, 602, 603, 607, 608, 609, 617, 628, 631, 636, 649, 651, 652, 653, 655, 658, 659, 661, 662, 670, 671, 673, 675, 676, 678, 679, 681, 682, 687, 688, 693, 694, 696, 697, 701, 702, 703, 706, 708, 709, 711, 713, 715, 716, 717, 718, 720, 722, 726, 729, 730, 732, 733, 734, 735, 737, 739, 741, 744, 745, 750, 751, 752, 754, 755, 756, 759, 761, 762, 765, 771, 774, 776, 777, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "whatev": [585, 597, 603, 623, 651, 652, 655, 661, 669, 671, 691, 693, 701, 702, 704, 711, 713, 720, 732, 733, 734, 756, 772, 777], "whatsoev": [659, 702], "when": [100, 354, 425, 538, 577, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 592, 594, 595, 597, 598, 599, 600, 603, 604, 606, 608, 613, 616, 617, 618, 622, 623, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 645, 646, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 673, 675, 676, 679, 680, 681, 683, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 701, 702, 703, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 719, 721, 722, 724, 726, 729, 731, 732, 733, 734, 736, 737, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 779, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "whenev": [577, 584, 585, 598, 602, 603, 604, 651, 657, 687, 699, 702, 713, 734, 750, 753, 757, 766, 793, 801], "where": [50, 144, 241, 367, 479, 577, 578, 580, 581, 582, 583, 586, 588, 589, 590, 591, 593, 595, 596, 597, 599, 600, 601, 602, 603, 606, 608, 613, 617, 619, 622, 623, 630, 631, 632, 633, 636, 637, 649, 650, 651, 652, 655, 656, 657, 659, 661, 662, 665, 666, 667, 668, 669, 671, 673, 674, 675, 676, 680, 681, 686, 687, 690, 693, 694, 695, 696, 697, 698, 701, 702, 704, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 729, 730, 732, 733, 734, 735, 736, 741, 744, 745, 746, 747, 748, 750, 751, 755, 757, 759, 761, 762, 765, 766, 767, 771, 772, 773, 774, 775, 777, 779, 781, 793, 795, 796, 797, 799, 800, 801, 803], "wherea": [582, 588, 599, 612, 641, 655, 661, 666, 675, 677, 702, 713, 716, 717, 734, 741, 750], "wherebi": [726, 736], "wherev": [652, 702, 734, 801], "whether": [577, 580, 582, 583, 585, 586, 589, 590, 593, 596, 597, 599, 602, 609, 611, 613, 619, 638, 649, 652, 655, 661, 662, 663, 668, 669, 671, 676, 677, 685, 686, 692, 694, 695, 696, 701, 702, 704, 705, 706, 714, 716, 719, 726, 729, 732, 733, 734, 735, 736, 739, 741, 745, 746, 747, 748, 750, 751, 753, 755, 759, 760, 761, 767, 768, 771, 774, 776, 780, 794, 796, 797, 798, 799, 800, 801, 802], "whi": [577, 582, 585, 591, 592, 600, 601, 602, 631, 650, 652, 659, 667, 671, 686, 695, 702, 709, 713, 714, 727, 733, 734, 738, 748, 750, 751, 752, 755, 759, 773, 777, 794, 795, 797, 803], "which": [17, 20, 23, 32, 50, 61, 63, 64, 118, 121, 124, 132, 144, 152, 153, 203, 206, 209, 221, 240, 241, 251, 253, 254, 327, 345, 363, 367, 372, 376, 410, 411, 427, 428, 442, 475, 479, 485, 489, 522, 523, 540, 541, 555, 577, 578, 579, 580, 581, 582, 586, 587, 588, 589, 591, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 608, 609, 611, 613, 615, 616, 617, 618, 619, 620, 623, 627, 629, 631, 632, 633, 636, 637, 640, 641, 644, 649, 650, 651, 652, 654, 655, 656, 657, 659, 661, 662, 663, 664, 666, 667, 668, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 719, 722, 724, 725, 726, 727, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "whichev": [733, 750], "while": [240, 363, 475, 577, 579, 580, 582, 584, 585, 589, 591, 592, 593, 597, 598, 599, 600, 602, 603, 608, 631, 649, 651, 654, 655, 657, 658, 659, 660, 661, 665, 667, 669, 670, 671, 674, 676, 677, 680, 681, 685, 687, 691, 692, 693, 697, 699, 700, 702, 703, 704, 705, 706, 708, 711, 713, 714, 719, 720, 721, 722, 726, 727, 729, 730, 731, 732, 733, 736, 739, 744, 745, 746, 747, 748, 750, 753, 755, 756, 759, 760, 761, 762, 766, 770, 773, 775, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "whilst": [632, 640, 641, 646], "whip": 798, "whirlwind": 794, "whisker": 751, "white": 653, "whitelist": 617, "whitelist_fun": 617, "whitepap": [712, 774], "whitespac": [603, 613, 627, 629, 633, 659, 761, 793, 794, 795, 796, 797, 798, 799, 800, 801], "whitespaceoranycom": 761, "whitespaceorccom": 761, "whizbang": 602, "who": [592, 595, 597, 598, 656, 659, 660, 670, 675, 677, 696, 701, 702, 711, 714, 717, 731, 733, 736, 746, 748, 756, 757, 761, 769, 771, 779, 780, 799, 802, 803], "whoa": 796, "whole": [577, 580, 582, 584, 599, 601, 613, 637, 659, 661, 662, 666, 668, 685, 693, 694, 698, 702, 704, 706, 708, 714, 717, 732, 734, 745, 747, 754, 757, 764, 765, 766, 768, 773, 779, 780, 794, 796, 797], "whom": [714, 730], "whose": [577, 580, 582, 585, 589, 593, 599, 602, 608, 613, 622, 631, 632, 633, 636, 637, 656, 658, 701, 702, 727, 729, 734, 741, 745, 748, 750, 759, 760, 761, 771, 776, 780, 794, 798, 799], "wibbl": 644, "wide": [581, 582, 585, 586, 589, 595, 598, 599, 600, 634, 659, 668, 669, 671, 689, 702, 715, 720, 729, 730, 734, 741, 743, 748, 750, 761, 768, 778, 796, 797, 802], "wideaddr": 702, "widecharact": 729, "widen": [599, 680, 741, 770, 773], "widenable_cond": 702, "widenable_condit": 702, "widenscalar": 680, "widenscalarfor": 680, "widenscalarif": 680, "widenscalartonextpow2": 680, "wider": [582, 586, 662, 669, 676, 680], "widest": 659, "width": [581, 586, 588, 623, 631, 634, 652, 668, 676, 722, 732, 734, 739, 767, 770, 802], "width_fiv": 676, "width_thre": 676, "wiki": [597, 671, 693, 704, 738, 739], "wikipedia": [702, 706, 797], "wild": [651, 798], "wildcard": [617, 633, 645], "wili": 669, "will": [577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 628, 631, 632, 633, 634, 636, 637, 640, 641, 642, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 678, 680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 722, 724, 726, 727, 729, 731, 732, 733, 734, 735, 736, 737, 739, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "willreturn": [589, 702], "win": [585, 602, 650, 734, 751], "win32": [599, 671, 673, 690, 727, 756, 766], "wincomplet": 619, "windbg": 750, "window": [582, 595, 597, 599, 602, 608, 613, 619, 636, 651, 652, 655, 656, 664, 670, 671, 672, 673, 688, 700, 702, 717, 727, 730, 734, 736, 743, 750, 756, 766, 769, 773, 795, 796, 797, 798], "windr": 743, "wineh": 655, "winrt": 721, "winrtsmartpoint": 721, "winzip": 673, "wip": 582, "wire": 664, "wireshark": 704, "wise": [663, 703, 761], "wish": [597, 601, 608, 613, 651, 652, 662, 666, 669, 671, 681, 692, 696, 702, 714, 717, 730, 734, 746, 751, 755, 771, 803], "wit": [582, 746], "with": [21, 52, 53, 54, 55, 122, 145, 146, 207, 242, 243, 244, 245, 306, 311, 316, 317, 318, 339, 340, 341, 368, 369, 370, 472, 480, 481, 482, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 606, 608, 609, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 644, 645, 646, 649, 650, 654, 655, 656, 657, 658, 660, 661, 662, 663, 665, 666, 667, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 684, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 716, 717, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 735, 737, 738, 739, 740, 741, 742, 743, 744, 746, 747, 748, 749, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 765, 766, 767, 768, 769, 771, 774, 776, 777, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 805], "with_assert": 597, "withcolor": 602, "withentryv": 630, "withhold": 750, "within": [577, 580, 582, 585, 588, 589, 593, 598, 599, 600, 602, 603, 608, 622, 631, 633, 634, 644, 645, 649, 652, 655, 656, 659, 661, 663, 668, 669, 671, 680, 685, 695, 697, 701, 702, 703, 706, 708, 714, 715, 716, 717, 719, 720, 722, 726, 729, 730, 732, 734, 735, 736, 739, 741, 745, 746, 747, 748, 750, 751, 753, 755, 757, 759, 761, 764, 765, 768, 773, 776, 777, 779, 796, 797, 798, 799, 800, 801], "withmoduledo": [717, 780, 781, 782], "without": [577, 580, 581, 582, 586, 588, 589, 590, 593, 595, 597, 598, 599, 601, 602, 603, 604, 608, 611, 613, 616, 622, 627, 631, 633, 634, 637, 645, 646, 651, 652, 655, 656, 657, 659, 661, 663, 666, 668, 669, 671, 675, 676, 680, 681, 686, 697, 698, 701, 702, 703, 704, 705, 706, 709, 710, 713, 714, 717, 719, 722, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 745, 746, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 766, 767, 770, 771, 773, 794, 796, 797, 798, 799, 800, 801], "wl": [671, 719, 798], "wlandri": 738, "wno": 691, "woff2": 704, "wojciech": 732, "wolf": 658, "won": [597, 599, 602, 652, 659, 669, 671, 678, 692, 693, 698, 702, 718, 736, 744, 747, 750, 751, 757, 765, 766, 795, 796, 801], "wonder": [602, 659, 664, 669, 695, 751, 796], "wontfix": 592, "word": [580, 582, 586, 590, 599, 600, 601, 602, 656, 658, 659, 661, 663, 664, 668, 679, 681, 695, 702, 704, 713, 718, 724, 734, 739, 746, 747, 750, 751, 761, 771, 776, 779, 795], "word16": 582, "word32": 582, "word64": 582, "word_0": [580, 582, 724], "word_1": [580, 582, 724], "word_n": 724, "wordsiz": 668, "work": [577, 583, 584, 585, 586, 590, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 608, 609, 611, 615, 617, 623, 625, 627, 630, 633, 634, 636, 637, 645, 651, 652, 653, 655, 656, 660, 661, 662, 664, 667, 668, 670, 671, 673, 674, 677, 681, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 700, 701, 702, 703, 705, 706, 707, 708, 711, 712, 713, 716, 718, 727, 732, 733, 734, 735, 736, 737, 739, 740, 743, 746, 747, 748, 749, 755, 756, 757, 761, 762, 764, 765, 766, 768, 769, 771, 773, 775, 777, 780, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "work_group_size_hint": 582, "workabl": 734, "workaround": [582, 631, 674, 737], "worker": [608, 659, 688, 704, 717], "workflow": [584, 595, 671, 688, 701, 733, 748, 774], "workgroup": 582, "workgroup_size_hint": 582, "workgroupsizehint": 582, "worklist": [714, 732, 734], "workload": [582, 659], "worksform": 592, "workshop": 711, "workspac": [657, 671], "world": [598, 600, 656, 659, 668, 671, 673, 687, 701, 702, 709, 711, 733, 750, 752, 802], "worri": [651, 702, 733, 794, 801], "wors": [588, 599, 697, 702], "worsen": 659, "worst": [685, 734, 749, 750, 755, 802], "worth": [577, 593, 594, 595, 602, 666, 674, 680, 689, 695, 713, 734, 751, 774], "worthwhil": 734, "would": [577, 581, 582, 584, 585, 586, 588, 589, 590, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 606, 608, 609, 615, 633, 636, 645, 651, 652, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 673, 675, 680, 685, 688, 691, 694, 695, 696, 697, 701, 702, 703, 704, 706, 708, 709, 713, 714, 716, 717, 719, 720, 721, 722, 726, 729, 730, 732, 733, 734, 735, 736, 738, 739, 746, 747, 748, 750, 751, 752, 753, 755, 756, 759, 760, 761, 762, 766, 767, 768, 770, 772, 773, 774, 775, 776, 777, 779, 781, 794, 795, 796, 797, 801, 802], "wouldn": [602, 697, 706, 799, 801], "wp": 687, "wpdres": 702, "wpdresolut": 702, "wrap": [577, 589, 598, 602, 623, 651, 659, 666, 669, 671, 675, 700, 702, 707, 716, 717, 734, 750, 751, 755, 756, 777, 779, 780, 794, 795, 803], "wrapcolumn": 777, "wrapper": [602, 630, 652, 701, 707, 714, 717, 719, 732, 734, 756, 771], "wrf_r": 738, "wrf_s": 738, "wrinkl": 700, "writabl": [581, 632, 660, 663, 701, 722, 750], "write": [61, 251, 372, 485, 577, 582, 586, 593, 603, 605, 610, 613, 614, 615, 617, 619, 621, 623, 624, 628, 633, 636, 637, 644, 645, 646, 647, 648, 649, 650, 652, 654, 660, 661, 666, 670, 671, 673, 674, 676, 677, 681, 700, 701, 702, 704, 708, 709, 714, 715, 716, 717, 722, 726, 727, 732, 734, 739, 741, 742, 743, 748, 750, 751, 752, 753, 756, 759, 760, 761, 762, 769, 774, 775, 777, 793, 796, 797, 800, 801, 802, 804], "write_escap": 773, "write_on": 582, "writeabl": [49, 143, 239, 362, 474], "writealia": 714, "writealu": [623, 761], "writeattribut": 759, "writeback": 582, "writeon": [582, 589, 702], "writer": [586, 589, 599, 620, 650, 651, 662, 664, 668, 672, 702, 714, 771, 773], "writes_depth": 582, "writes_uav": 582, "writesetcc": 623, "writethunk": 714, "writethunkoralia": 714, "writetypet": 662, "writev": 771, "written": [577, 582, 584, 585, 598, 599, 602, 615, 617, 619, 621, 623, 624, 631, 633, 637, 654, 659, 660, 663, 665, 671, 677, 696, 702, 704, 706, 708, 714, 715, 722, 726, 727, 732, 734, 736, 737, 738, 739, 748, 750, 751, 752, 755, 756, 759, 761, 764, 766, 770, 771, 776, 777, 797, 798, 801, 802, 803], "wrong": [587, 592, 600, 602, 652, 659, 664, 696, 747, 756, 796, 801], "wrote": [662, 669, 702, 800, 801], "ws": 702, "wswitch": 602, "wu": 652, "www": [587, 597, 694, 702, 736, 738, 739], "wzr": 702, "x0": [663, 708], "x00": [745, 805], "x00argpath": 745, "x00function": 745, "x00key": 745, "x00path": 745, "x00remark": 745, "x00valu": 745, "x01": 805, "x03": 805, "x04": 805, "x08": 805, "x0abar": 704, "x0c": 805, "x1": [634, 663, 706, 732, 799], "x11": 734, "x15": [663, 702], "x16": [579, 663], "x2": [579, 702, 706, 732, 799], "x20": 708, "x21": 708, "x24": 805, "x3": [579, 706, 732, 799], "x30": 702, "x32": 603, "x4": [579, 706, 732, 799], "x44": 805, "x64": [603, 671, 673, 688], "x8": 579, "x83": 805, "x86": [584, 586, 596, 597, 603, 609, 611, 623, 631, 633, 634, 638, 650, 655, 661, 662, 666, 671, 675, 689, 701, 702, 703, 708, 722, 739, 749, 755, 759, 761, 762, 766, 768, 770, 771, 775, 777, 800], "x86_64": [596, 599, 603, 608, 623, 631, 646, 657, 660, 666, 667, 687, 689, 690, 691, 692, 701, 702, 708, 744, 750, 753, 755, 766, 774, 777, 800], "x86_amx": 589, "x86_fastcal": 599, "x86_fastcallcc": 589, "x86_fp80": [589, 702, 714], "x86_mmx": 589, "x86_ssecal": 771, "x86_stdcall": 599, "x86_stdcallcc": 589, "x86_thiscal": 599, "x86add_flag": 761, "x86call": 761, "x86callingconv": 771, "x86codeemitt": 771, "x86dagtodagisel": 775, "x86framelow": 599, "x86genregisterinfo": [599, 771], "x86ii": 771, "x86inst": [761, 762], "x86instrinfo": 771, "x86instrmmx": 771, "x86instrss": 771, "x86iseldagtodag": 775, "x86isellow": 775, "x86registerinfo": [599, 771], "x86reloc": 771, "x86retflag": 761, "x86subtarget": 775, "x86targetasminfo": 771, "x86targetlow": 775, "x86targetmachin": [599, 775], "x87": [675, 702], "x8b": 805, "x_": 762, "x_was_zext": 676, "xab": 704, "xadd": 586, "xarch": 671, "xarg": 736, "xbase": 760, "xc3": 805, "xc4": 805, "xc7": 805, "xchg": [586, 702], "xclang": [690, 696, 697], "xcode": [597, 657, 671], "xcodebuild": 597, "xcoff": 702, "xcore": [599, 671, 702, 739], "xctoolchain": 597, "xd": 761, "xdata": 722, "xdemangl": 617, "xdigit": 603, "xe8": 805, "xec": 805, "xemac": 671, "xentri": 760, "xf7": 704, "xf8": 704, "xfail": [608, 766], "xgmi": 582, "xinmin": 741, "xlc": 671, "xlen": 702, "xmax": 798, "xme": 636, "xmi": 636, "xmin": 798, "xml": 589, "xmm": [603, 771], "xmm0": [603, 631, 753, 761, 762, 766], "xmm1": [623, 631, 761, 762], "xmm10": 762, "xmm11": 762, "xmm12": 762, "xmm13": 762, "xmm14": 762, "xmm15": 762, "xmm2": [623, 631, 702, 761, 762], "xmm3": [623, 631, 702, 761, 762], "xmm4": [631, 761, 762], "xmm5": [761, 762], "xmm6": [761, 762], "xmm7": [761, 762], "xmm8": 762, "xmm9": 762, "xmms": 702, "xmos": 653, "xnack": [208, 246, 247, 257, 258, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 307, 308, 312, 313, 319, 320, 321, 322, 323, 342, 346, 347, 348, 349, 351, 352, 581, 582], "xnack_mask": [49, 373, 374, 375, 377, 378, 379, 381, 382, 384, 386, 389, 390, 391, 395, 396, 397, 398, 399, 402, 403, 404, 405, 413, 414, 415, 416, 417, 418, 419, 420, 421, 486, 487, 488, 490, 491, 492, 494, 495, 497, 499, 502, 503, 504, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 582], "xnack_mask_hi": 581, "xnack_mask_lo": 581, "xnor": 771, "xnorrr": 771, "xor": [580, 581, 599, 655, 715, 732, 734, 761, 770, 771], "xor16rr": 599, "xor32rr": [599, 708], "xor64rr": 599, "xor8rr": 599, "xorl": 751, "xorri": 771, "xorrr": 771, "xpass": 608, "xplus1": 761, "xps": 756, "xray": 764, "xray_always_instru": [774, 775], "xray_basic_opt": 774, "xray_fdr_opt": 774, "xray_instr_map": [774, 775], "xray_log_fin": 774, "xray_log_flush": 774, "xray_log_interfac": 774, "xray_logfile_bas": 774, "xray_mod": [774, 775], "xray_never_instru": 774, "xray_opt": [774, 775], "xraylogimpl": 774, "xs": [582, 761], "xs1": 653, "xs2": 653, "xstep": 798, "xt": 582, "xtemp": 586, "xue": 741, "xuetian": 652, "xvf": 673, "xvjf": 671, "xword": 771, "xx": [587, 702], "xxx": [602, 603, 759, 760, 764, 765, 771], "xxxasmprint": 771, "xxxbegin": 734, "xxxbranchselector": 771, "xxxcallingconv": 771, "xxxcodeemitt": 771, "xxxend": 734, "xxxgenasmwrit": 771, "xxxgencallingconv": 771, "xxxgencodeemitt": 771, "xxxgendagisel": 771, "xxxgeninstrinfo": 771, "xxxgenregisterinfo": 771, "xxxinstrdescriptor": 771, "xxxinstrformat": 771, "xxxinstrinfo": [699, 771], "xxxiseldagtodag": 771, "xxxisellow": 771, "xxxiter": 734, "xxxjitinfo": 771, "xxxkind": 695, "xxxlayer": 717, "xxxregisterinfo": 771, "xxxreloc": 771, "xxxschedul": 771, "xxxsubtarget": 771, "xxxtargetasminfo": 771, "xxxtargetlow": 771, "xxxtargetmachin": 771, "xxxtrait": 777, "xxxxxx": [696, 774], "xy": 579, "xyz": [579, 609, 611, 671, 699], "xyzw": 579, "xyzzi": 602, "xz": 661, "xzr": 702, "y_was_zext": 676, "yaml": [582, 606, 623, 636, 708, 742, 774, 775, 805], "yaxxz": 661, "year": [594, 659, 737, 748], "yes": [579, 659, 664, 669, 671, 704, 709, 714, 732, 749, 752], "yet": [577, 586, 599, 601, 602, 603, 616, 637, 651, 655, 659, 661, 668, 676, 688, 691, 700, 701, 702, 707, 714, 717, 732, 734, 738, 743, 748, 751, 755, 757, 771, 773, 774, 781, 795, 797, 798], "yield": [589, 608, 651, 655, 669, 702, 732, 734, 755, 765, 775, 780], "yin": 777, "ymax": 798, "ymin": 798, "ymm0": 753, "ymms": 702, "yosefk": 602, "you": [584, 585, 586, 587, 589, 592, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 607, 608, 611, 613, 617, 621, 622, 623, 631, 636, 646, 649, 651, 652, 654, 656, 657, 659, 660, 661, 662, 664, 666, 667, 668, 669, 670, 671, 673, 674, 675, 678, 679, 680, 681, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 701, 702, 704, 706, 708, 711, 713, 714, 715, 716, 717, 718, 719, 722, 726, 730, 731, 732, 733, 734, 735, 736, 739, 743, 744, 747, 748, 750, 751, 752, 755, 756, 759, 760, 761, 762, 764, 765, 766, 769, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "young": 734, "younger": 631, "your": [584, 585, 586, 587, 593, 595, 599, 600, 601, 602, 603, 606, 613, 617, 623, 636, 651, 652, 654, 659, 660, 661, 662, 664, 666, 667, 668, 669, 670, 671, 673, 674, 679, 686, 687, 689, 691, 692, 693, 694, 696, 697, 701, 702, 703, 704, 706, 709, 712, 713, 715, 717, 718, 726, 731, 733, 735, 736, 742, 744, 745, 746, 747, 748, 752, 755, 758, 760, 761, 762, 763, 764, 765, 766, 769, 771, 772, 775, 777, 778, 779, 795, 796, 797, 798, 799, 800, 801, 802, 803], "youralloc": 687, "yourregex": 603, "yourself": [592, 597, 601, 654, 659, 662, 671, 702, 733, 734], "yout": 777, "youtu": 601, "yplus1": 761, "ystep": 798, "yy": 715, "yypvr": 752, "z0": [581, 582, 603, 702, 793, 794, 795, 796, 797, 798, 799, 800, 801], "z2": 798, "z3": 597, "z7": [702, 722, 750], "z_": [581, 603], "z_was_sext": 676, "za": [581, 582, 603, 702, 708, 793, 794, 795, 796, 797, 798, 799, 800, 801], "zachari": 739, "zak": 741, "zc": 702, "zchf": 693, "zero": [577, 578, 580, 581, 582, 588, 589, 599, 602, 603, 604, 608, 609, 611, 613, 614, 615, 616, 617, 618, 620, 621, 624, 625, 627, 628, 631, 632, 633, 634, 635, 637, 640, 641, 642, 644, 645, 646, 649, 650, 651, 652, 655, 656, 663, 666, 668, 669, 676, 679, 681, 701, 702, 703, 704, 707, 708, 715, 717, 722, 732, 734, 741, 747, 750, 751, 753, 755, 761, 766, 768, 770, 771, 776, 794, 797, 802], "zero_cont": 747, "zeroargfp": 761, "zerodirect": 771, "zeroext": [589, 702], "zeroiniti": 702, "zeroormor": 651, "zeroth": 761, "zext": [697, 698], "zhou": 741, "zi": [722, 750], "zip": 671, "zipp": 736, "zlib": [597, 633, 656, 671], "zlib1g": 693, "zone": [702, 751], "zoo": 713, "zorg": 688, "zy": 702, "zz": 702}, "titles": ["Syntax of Core GFX10 Instructions", "Syntax of gfx1011 and gfx1012 Instructions", "Syntax of Core GFX7 Instructions", "Syntax of Core GFX8 Instructions", "Syntax of Core GFX9 Instructions", "Syntax of gfx900, gfx902 and gfx909 Instructions", "Syntax of gfx904 Instructions", "Syntax of gfx906 Instructions", "Syntax of gfx908 Instructions", "Syntax of gfx90a Instructions", "src", "src", "src", "src", "Type deviation", "vdst", "vsrc", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "sdata", "sdata", "sdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "label", "fx", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "saddr", "saddr", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vaddr", "vaddr", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "sdst", "ssrc", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "hwreg", "label", "m", "msg", "soffset", "soffset", "opt", "param", "dst", "srsrc", "srsrc", "ssamp", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "imask", "label", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "fx", "m", "src", "src", "vdst", "fx", "m", "src", "src", "vdst", "fx", "m", "m", "m", "src", "src", "src", "src", "src", "Type deviation", "vdst", "vsrc", "vaddr", "adst", "adst", "adst", "adst", "asrc", "asrc", "asrc", "asrc", "vdata", "vdst", "fx", "m", "m", "m", "soffset", "opt", "dst", "srsrc", "saddr", "src", "src", "src", "src", "src", "src", "Type deviation", "vaddr", "vasrc", "vasrc", "vdata", "vdst", "vsrc", "dst", "FX Operand", "hwreg", "imask", "imm16", "imm16", "imm16", "label", "m", "m", "msg", "opt", "probe", "saddr", "saddr", "sbase", "sbase", "sbase", "sdata", "sdata", "sdata", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "simm32", "simm32", "simm32", "soffset", "soffset", "soffset", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "srsrc", "srsrc", "ssamp", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "Type Deviation", "vaddr", "vaddr", "vaddr", "vaddr", "vaddr", "vaddr", "vcc", "vdata", "vdata0", "vdata0", "vdata1", "vdata1", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "attr", "dst", "hwreg", "imask", "imm16", "imm16", "imm16", "label", "m", "m", "msg", "opt", "param", "probe", "saddr", "saddr", "sbase", "sbase", "sbase", "sdata", "sdata", "sdata", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "simm32", "simm32", "simm32", "soffset", "soffset", "soffset", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "srsrc", "srsrc", "ssamp", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type Deviation", "vaddr", "vaddr", "vaddr", "vaddr", "vaddr", "vaddr", "vcc", "vdata", "vdata0", "vdata0", "vdata1", "vdata1", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "DWARF Extensions For Heterogeneous Debugging", "AMDGPU Instructions Notation", "AMDGPU Instruction Syntax", "Syntax of AMDGPU Instruction Modifiers", "Syntax of AMDGPU Instruction Operands", "User Guide for AMDGPU Backend", "How To Add A Constrained Floating-Point Intrinsic", "\u9032\u968e\u5efa\u7f6e\u7d44\u614b", "LLVM Alias Analysis Infrastructure", "LLVM Atomic Instructions and Concurrency Guide", "Benchmarking tips", "Using ARM NEON instructions in big endian mode", "LLVM Bitcode File Format", "LLVM Block Frequency Terminology", "LLVM Branch Weight Metadata", "LLVM Bug Life Cycle", "LLVM bugpoint tool: design and usage", "Bugpoint Redesign", "Building a Distribution of LLVM", "Control Flow Verification Tool Design Document", "\u4f7f\u7528 CMake \u5efa\u7f6e LLVM", "CMake Primer", "The LLVM Target-Independent Code Generator", "LLVM Community Code of Conduct", "LLVM Code-Review Policy and Practices", "LLVM Coding Standards", "FileCheck - Flexible pattern matching file verifier", "bugpoint - automatic test case reduction tool", "clang-tblgen - Description to C++ Code for Clang", "dsymutil - manipulate archived DWARF debug symbol files", "LLVM Command Guide", "lit - LLVM Integrated Tester", "llc - LLVM static compiler", "lldb-tblgen - Description to C++ Code for LLDB", "lli - directly execute programs from LLVM bitcode", "llvm-addr2line - a drop-in replacement for addr2line", "llvm-ar - LLVM archiver", "llvm-as - LLVM assembler", "llvm-bcanalyzer - LLVM bitcode analyzer", "llvm-config - Print LLVM compilation options", "llvm-cov - emit coverage information", "llvm-cxxfilt - LLVM symbol name demangler", "llvm-cxxmap - Mangled name remapping tool", "llvm-diff - LLVM structural 'diff'", "llvm-dis - LLVM disassembler", "llvm-dwarfdump - dump and verify DWARF debug information", "llvm-exegesis - LLVM Machine Instruction Benchmark", "llvm-extract - extract a function from an LLVM module", "llvm-install-name-tool - LLVM tool for manipulating install-names and rpaths", "llvm-lib - LLVM lib.exe compatible library tool", "llvm-libtool-darwin - LLVM tool for creating libraries for Darwin", "llvm-link - LLVM bitcode linker", "llvm-lipo - LLVM tool for manipulating universal binaries", "llvm-locstats - calculate statistics on DWARF debug location", "llvm-mca - LLVM Machine Code Analyzer", "llvm-nm - list LLVM bitcode and object file's symbol table", "llvm-objcopy - object copying and editing tool", "llvm-objdump - LLVM's object file dumper", "llvm-otool - Mach-O dumping tool", "llvm-pdbutil - PDB File forensics and diagnostics", "llvm-profdata - Profile data tool", "llvm-profgen - LLVM SPGO profile generation tool", "llvm-ranlib - generates an archive index", "llvm-readelf - GNU-style LLVM Object Reader", "llvm-readobj - LLVM Object Reader", "llvm-size - print size information", "llvm-stress - generate random .ll files", "llvm-strings - print strings", "llvm-strip - object stripping tool", "llvm-symbolizer - convert addresses into source code locations", "llvm-tblgen - Target Description to C++ Code for LLVM", "mlir-tblgen - Description to C++ Code for MLIR", "opt - LLVM optimizer", "tblgen - Description to C++ Code", "CommandLine 2.0 Library Manual", "Compiling CUDA with clang", "Architecture &amp; Platform Information for Compiler Writers", "Contributing to LLVM", "Coroutines in LLVM", "LLVM Code Coverage Mapping Format", "Debugging JIT-ed Code", "Dependence Graphs in LLVM", "LLVM \u958b\u767c\u8005\u65b9\u91dd", "A guide to Dockerfiles for building LLVM", "Exception Handling in LLVM", "Extending LLVM: Adding instructions, intrinsics, types, etc.", "LLVM Extensions", "\u5e38\u898b\u554f\u984c\u96c6\uff08FAQ\uff09", "FaultMaps and implicit checks", "Performance Tips for Frontend Authors", "Fuzzing LLVM libraries and tools", "Garbage Collection with LLVM", "The Often Misunderstood GEP Instruction", "Getting Involved", "Getting Started with the LLVM System", "Getting Started/Tutorials", "Getting Started with the LLVM System using Microsoft Visual Studio", "Bisecting LLVM code", "Generic Machine IR", "Generic Opcodes", "IRTranslator", "InstructionSelect", "Known Bits Analysis", "Legalizer", "Core Pipeline", "Porting GlobalISel to A New Target", "RegBankSelect", "Resources", "Global Instruction Selection", "The LLVM gold plugin", "GWP-ASan", "How To Add Your Build Configuration To LLVM Buildbot Infrastructure", "How To Build On ARM", "How to build Windows Itanium applications.", "How To Build Clang and LLVM with Profile-Guided Optimizations", "How to Cross Compile Compiler-rt Builtins For Arm", "How To Cross-Compile Clang/LLVM using Clang/LLVM", "How To Release LLVM To The Public", "How to set up LLVM-style RTTI for your class hierarchy", "How to submit an LLVM bug report", "How to Update Debug Info: A Guide for LLVM Pass Authors", "How To Use Attributes", "How To Use Instruction Mappings", "Design and Usage of the InAlloca Attribute", "JITLink and ORC's ObjectLinkingLayer", "LLVM Language Reference Manual", "The LLVM Lexicon", "libFuzzer \u2013 a library for coverage-guided fuzz testing.", "LLVM Link Time Optimization: Design and Implementation", "LLVM Loop Terminology (and Canonical Forms)", "MCJIT Design and Implementation", "Machine IR (MIR) Format Reference Manual", "Markdown Quickstart Template", "LLVM's Optional Rich Disassembly Output", "How to start LLVM Social in your town", "MemTagSanitizer", "MemorySSA", "MergeFunctions pass, how it works", "User Guide for NVPTX Back-end", "Using the New Pass Manager", "ORC Design and Implementation", "Opaque Pointers", "Using -opt-bisect-limit to debug optimization errors", "CodeView Symbol Records", "CodeView Type Records", "The PDB DBI (Debug Info) Stream", "The PDB Global Symbol Stream", "The PDB Serialized Hash Table Format", "The Module Information Stream", "The MSF File Format", "The PDB Info Stream (aka the PDB Stream)", "The PDB Public Symbol Stream", "The PDB TPI and IPI Streams", "The PDB File Format", "Advice on Packaging LLVM", "LLVM's Analysis and Transform Passes", "Code Reviews with Phabricator", "LLVM Programmer's Manual", "Creating an LLVM Project", "Moving LLVM Projects to GitHub", "&quot;llvm-libc&quot; C Standard Library", "Test-Suite Extensions", "Variable Names Plan", "Vector Predication Roadmap", "Vectorization Plan", "Reference", "LLVM 13.0.0 Release Notes", "How To Validate a New Release", "Remarks", "Reporting Guide", "Scudo Hardened Allocator", "LLVM Security Group", "Segmented Stacks in LLVM", "Source Level Debugging with LLVM", "Speculative Load Hardening", "Sphinx Quickstart Template", "Stack maps and patch points in LLVM", "Stack Safety Analysis", "Garbage Collection Safepoints in LLVM", "Support Library", "LLVM Community Support Policy", "System Library", "TableGen BackEnds", "<span class=\"sectnum\">1 </span>TableGen Backend Developer's Guide", "<span class=\"sectnum\">1 </span>TableGen Programmer's Reference", "TableGen \u6982\u89bd", "TableGen Fundamentals", "test-suite Guide", "test-suite Makefile Guide (deprecated)", "LLVM \u6e2c\u8a66\u57fa\u790e\u8a2d\u65bd\u6307\u5357", "Code Transformation Metadata", "Type Metadata", "\u4f7f\u7528\u8005\u6307\u5357", "Auto-Vectorization in LLVM", "Writing an LLVM Backend", "Writing an LLVM Pass", "Writing an LLVM Pass", "XRay Instrumentation", "Debugging with XRay", "XRay Flight Data Recorder Trace Format", "YAML I/O", "\u95dc\u65bc", "<span class=\"section-number\">1. </span>Building a JIT: Starting out with KaleidoscopeJIT", "<span class=\"section-number\">2. </span>Building a JIT: Adding Optimizations -- An introduction to ORC Layers", "<span class=\"section-number\">3. </span>Building a JIT: Per-function Lazy Compilation", "<span class=\"section-number\">4. </span>Building a JIT: Extreme Laziness - Using LazyReexports to JIT from ASTs", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "Kaleidoscope Tutorial", "<span class=\"section-number\">1. </span>Kaleidoscope: Kaleidoscope Introduction and the Lexer", "<span class=\"section-number\">2. </span>Kaleidoscope: Implementing a Parser and AST", "<span class=\"section-number\">3. </span>Kaleidoscope: Code generation to LLVM IR", "<span class=\"section-number\">4. </span>Kaleidoscope: Adding JIT and Optimizer Support", "<span class=\"section-number\">5. </span>Kaleidoscope: Extending the Language: Control Flow", "<span class=\"section-number\">6. </span>Kaleidoscope: Extending the Language: User-defined Operators", "<span class=\"section-number\">7. </span>Kaleidoscope: Extending the Language: Mutable Variables", "<span class=\"section-number\">8. </span>Kaleidoscope: Compiling to Object Code", "<span class=\"section-number\">9. </span>Kaleidoscope: Adding Debug Information", "<span class=\"section-number\">10. </span>Kaleidoscope: Conclusion and other useful LLVM tidbits", "My First Language Frontend with LLVM Tutorial", "LLVM Tutorial: Table of Contents", "yaml2obj"], "titleterms": {"000": 598, "0x0006": 720, "0x000a": 721, "0x000e": 721, "0x0014": 721, "0x1001": 721, "0x1002": 721, "0x1008": 721, "0x1009": 721, "0x1012": 720, "0x1101": 720, "0x1102": 720, "0x1103": 720, "0x1105": 720, "0x1106": 720, "0x1107": 720, "0x1108": 720, "0x110b": 720, "0x110c": 720, "0x110e": 720, "0x110f": 720, "0x1110": 720, "0x1111": 720, "0x1112": 720, "0x1113": 720, "0x1116": 720, "0x111c": 720, "0x111d": 720, "0x1124": 720, "0x1125": 720, "0x1127": 720, "0x112c": 720, "0x112d": 720, "0x1136": 720, "0x1137": 720, "0x1138": 720, "0x1139": 720, "0x113a": 720, "0x113c": 720, "0x113d": 720, "0x113e": 720, "0x113f": 720, "0x1140": 720, "0x1141": 720, "0x1142": 720, "0x1143": 720, "0x1144": 720, "0x1145": 720, "0x1146": 720, "0x1147": 720, "0x114c": 720, "0x114d": 720, "0x114e": 720, "0x114f": 720, "0x1153": 720, "0x1155": 720, "0x1156": 720, "0x115a": 720, "0x115b": 720, "0x115e": 720, "0x1167": 720, "0x1168": 720, "0x1201": 721, "0x1203": 721, "0x1205": 721, "0x1206": 721, "0x1400": 721, "0x1401": 721, "0x1402": 721, "0x1404": 721, "0x1409": 721, "0x1502": 721, "0x1503": 721, "0x1504": 721, "0x1505": 721, "0x1506": 721, "0x1507": 721, "0x1509": 721, "0x150d": 721, "0x150e": 721, "0x150f": 721, "0x1510": 721, "0x1511": 721, "0x1515": 721, "0x1519": 721, "0x151a": 721, "0x151d": 721, "0x1601": 721, "0x1602": 721, "0x1603": 721, "0x1604": 721, "0x1605": 721, "0x1606": 721, "0x1607": 721, "0xf0": 721, "10": [598, 760, 761], "11": [760, 761], "12": 761, "13": 743, "2017": 738, "32": [577, 582, 609], "64": [577, 582, 751], "__atomic_": 586, "__device__": 652, "__host__": 652, "__nvvm_reflect": 715, "__sync_": 586, "_global__i_a": 664, "a16": 580, "aa": [585, 732], "aapc": 588, "aarch64": [653, 692, 743], "abandon": 733, "abbrevi": 589, "abi": [582, 599, 653, 661, 690, 734, 737, 751], "abid": 580, "abl": 714, "about": [654, 664, 736], "abs": [580, 702], "absolut": [581, 651, 717], "absolute_symbol": 702, "abstract": [589, 666, 668, 702, 738, 741, 755, 756, 761, 794], "acceler": [577, 582, 750], "accept": [601, 748], "access": [577, 582, 599, 659, 702, 714, 733, 736, 748], "accumul": 751, "accur": 702, "achiev": [592, 734], "acknowledg": 601, "acquir": 586, "acquirereleas": 586, "acronym": 739, "across": 674, "action": 680, "activ": [592, 702], "acycl": 761, "adc": [585, 732], "add": [583, 651, 659, 662, 666, 669, 688, 702, 716, 717, 719, 734, 780, 796, 801], "addescapingus": 585, "addit": [582, 608, 742, 743, 761, 769], "addpreserv": 773, "addr": [702, 750], "addr2lin": 612, "addr64": 580, "addrequir": 773, "addrequiredtransit": 773, "address": [577, 582, 599, 646, 663, 669, 702, 707, 715, 751, 768], "addressofreturnaddress": 702, "addrspacecast": 702, "adjust": [702, 799], "administr": 694, "adst": [328, 329, 330, 331], "adt": 734, "advanc": [656, 704, 734, 804], "advantag": [658, 739], "advertis": 711, "advic": [593, 731], "advisori": 746, "afl": 704, "after": [601, 602, 687, 705, 736, 746, 751], "again": 751, "aggreg": [666, 677, 702, 732], "aggress": 732, "ahead": 801, "aid": 734, "aim": 601, "aka": 727, "algorithm": [599, 652, 701, 738], "alia": [585, 599, 651, 669, 702, 732, 770], "alias": [599, 651, 666, 702, 714, 717], "aliasanalysi": 585, "aliassettrack": 585, "align": [588, 589, 666, 726], "all": [601, 664, 732, 736, 800], "alloc": [599, 655, 687, 734, 747, 749, 750], "alloca": [666, 702, 749], "allow": 651, "along": [714, 755], "also": [602, 604, 606, 608, 609, 611, 612, 614, 615, 618, 621, 622, 624, 625, 627, 630, 632, 633, 634, 635, 639, 640, 641, 645, 646], "altern": [651, 692, 705, 751, 755], "alway": [669, 732], "always_inlin": 732, "ambigu": 767, "amd_kernel_code_t": 582, "amdgcn": 582, "amdgcn_target": 582, "amdgpu": [578, 579, 580, 581, 582, 599, 653, 743], "amdgpu_hsa_kernel": 582, "amdgpu_metadata": 582, "amdhsa": 582, "amdhsa_kernel": 582, "amdpal": 582, "an": [601, 624, 639, 651, 659, 669, 671, 673, 696, 697, 734, 735, 736, 751, 761, 771, 772, 773, 780], "analys": 716, "analysi": [585, 594, 599, 623, 631, 669, 679, 716, 732, 754, 761, 766, 770, 773, 774], "analysisusag": 773, "analyz": [615, 631, 764], "anchor": 602, "and": [1, 5, 577, 579, 581, 582, 583, 585, 586, 588, 590, 593, 595, 598, 599, 601, 602, 622, 625, 631, 632, 633, 634, 636, 641, 645, 651, 652, 653, 655, 659, 662, 664, 665, 666, 667, 668, 669, 670, 671, 676, 680, 685, 691, 692, 693, 695, 700, 701, 702, 705, 706, 707, 709, 713, 714, 716, 717, 724, 726, 729, 732, 734, 736, 741, 742, 748, 750, 751, 753, 755, 760, 761, 764, 766, 767, 769, 771, 773, 776, 778, 793, 794, 795, 796, 802], "ani": 704, "annot": [702, 710], "announc": 694, "anonym": [602, 732], "anoth": [734, 737], "api": [582, 599, 659, 664, 678, 680, 683, 710, 713, 717, 734, 736, 742, 743, 745, 751, 779], "appeal": 746, "append": 582, "appendix": 761, "appl": 584, "applic": [690, 738, 774], "approach": [705, 751], "aql": 582, "ar": 613, "arc": 702, "arch": 582, "architectur": [582, 653, 692, 753, 755], "archiv": [606, 613, 639, 671], "are": [599, 601, 664, 761], "area": [655, 702], "arg": 702, "argpromot": [585, 732], "argument": [582, 598, 651, 655, 676, 702, 732, 734], "arithmet": [577, 599, 669, 702], "arm": [588, 653, 663, 689, 692, 693, 743], "arm64": 663, "armneon": 759, "armneonsema": 759, "armneontest": 759, "armv6": 692, "armv7": 692, "array": [656, 663, 669, 702, 734], "arrayref": 734, "articl": 752, "as": [602, 614, 651, 667, 701, 704, 715, 761], "asan": 687, "ashr": 702, "asm": [599, 661, 702], "asmmatch": 759, "asmwrit": 759, "asrc": [332, 333, 334, 335], "assembl": [582, 588, 599, 614, 663, 667, 668, 690, 702, 771], "assert": [602, 761], "assign": [732, 799], "associ": [702, 714], "assum": 702, "ast": [782, 794, 797], "async": [655, 702], "at": [732, 736], "atom": [586, 702, 732], "atomicrmw": 702, "attach": 702, "attack": 751, "attent": 655, "attr": [21, 122, 207, 472, 732], "attrbuild": 698, "attrdoc": 759, "attribut": [577, 582, 651, 652, 659, 698, 700, 702, 708, 732, 750, 774, 775], "attributelist": 698, "audienc": 771, "author": [666, 697, 752], "auto": [602, 770], "automat": [593, 604, 697, 702, 751], "autoreleas": 702, "autoreleasepoolpop": 702, "autoreleasepoolpush": 702, "autoreleasereturnvalu": 702, "autotool": 686, "avail": [585, 667, 668, 701], "avoid": [602, 655, 666], "avr": 743, "awar": 695, "back": [631, 664, 715], "backend": [582, 599, 669, 696, 701, 743, 759, 760, 771], "background": [594, 596, 657, 661, 695, 750], "backward": 659, "bake": 755, "bang": [739, 761], "bank": 675, "bank_mask": 580, "barrier": [668, 715], "barrier0": 715, "base": [599, 602, 652, 664, 669, 695, 702, 732, 734, 755, 761], "basic": [585, 589, 597, 607, 637, 660, 663, 666, 674, 695, 701, 702, 708, 714, 732, 734, 736, 771, 772, 773, 774, 779, 794], "basicblock": [714, 734], "basiccg": 732, "bb": 732, "bcanalyz": 615, "be": [585, 601, 651, 669, 695, 709, 714, 751], "befor": [602, 736], "begin": [655, 702], "begincatch": 661, "behavior": 585, "behaviour": [631, 663], "behind": 750, "being": 601, "benchmark": [587, 623, 691, 738, 764], "berkeley": 599, "best": 666, "between": [595, 652, 669, 705, 734, 773], "bewar": 602, "bias": 590, "big": [588, 739], "bigger": 654, "binari": [581, 629, 633, 664, 694, 702, 774, 794, 798], "bind": [671, 743], "binutil": 607, "bisect": [671, 674, 719, 736], "bit": [577, 582, 589, 651, 679, 702, 724, 734, 751], "bitcast": 702, "bitcod": [589, 611, 615, 628, 632, 664, 705], "bitconvert": 588, "bitinit": 760, "bitrevers": 702, "bitsinit": 760, "bitsrecti": 760, "bitstream": [589, 745], "bitvalu": 777, "bitvector": 734, "bitwis": [676, 702], "blame": 739, "blgp": 580, "blitz": 738, "block": [589, 590, 601, 602, 603, 631, 663, 702, 708, 726, 732, 734, 751, 752, 777], "blockinfo": 589, "bodi": [602, 732, 761], "boolean": 651, "bootstrap": 584, "bot": 737, "both": [671, 720], "bottleneck": 631, "bound": [669, 751], "bound_ctrl": 580, "boundari": 726, "bpf_ab": 599, "bpf_ind": 599, "br": 702, "brace": 602, "branch": [590, 591, 694, 732, 736, 751, 771], "branch_weight": 702, "branchinst": 591, "break": [732, 734, 751], "breakpoint": 773, "bridg": 736, "bswap": 702, "buffer": [582, 687], "bug": [592, 620, 625, 627, 629, 632, 633, 634, 635, 642, 644, 645, 654, 667, 695, 696, 744, 755], "bugpoint": [593, 594, 604, 732], "build": [583, 584, 595, 660, 664, 667, 671, 686, 688, 689, 690, 691, 692, 693, 694, 704, 713, 733, 734, 735, 736, 737, 743, 769, 772, 773, 775, 779, 780, 781, 782, 804], "buildbot": 688, "builder": 688, "buildmast": 688, "built": [591, 598, 599, 668, 761, 777], "builtin": [651, 692], "bundl": [582, 599, 702, 708], "but": [692, 704], "by": [577, 582, 592, 655, 664, 669, 732], "bypass": 751, "byte": 636, "c99": 663, "cach": [597, 691, 692], "calcul": 630, "call": [577, 582, 585, 599, 602, 663, 664, 670, 677, 700, 702, 732, 734, 751, 770, 771], "callabl": 734, "callargu": 776, "callback": 702, "callbr": 702, "calle": [700, 702], "callgraph": [732, 773], "callgraphsccpass": 773, "callingconv": 759, "callinst": 591, "callsit": [661, 732, 734], "can": [601, 664, 666, 669, 720, 751], "candid": 694, "canon": 706, "canonic": [702, 732], "cantfail": 734, "captur": 702, "case": [594, 604, 659, 717, 774], "cast": [669, 734], "catch": 661, "catchpad": 702, "catchret": 702, "catchswitch": 702, "categori": [651, 720, 721], "caus": 594, "cbsz": 580, "cc": 592, "ceil": 702, "cfa": 577, "cfg": [591, 732], "cfi": 582, "cfiindex": 708, "chain": [585, 671, 673, 734], "chang": [577, 582, 659, 671, 733, 734, 736, 743, 748, 750, 795], "chapter": [779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "charact": [589, 603], "check": [603, 665, 702, 732, 734, 751, 761, 770], "checkout": [671, 736], "choos": [660, 748, 800], "chrome": 775, "ci": 659, "cl": 651, "clamp": 580, "clang": [582, 584, 605, 650, 652, 667, 671, 689, 691, 692, 693, 747, 759, 769], "clangattrclass": 759, "clangattrdump": 759, "clangattrimpl": 759, "clangattrlist": 759, "clangattrparsedattrimpl": 759, "clangattrparsedattrkind": 759, "clangattrparsedattrlist": 759, "clangattrparserstringswitch": 759, "clangattrpchread": 759, "clangattrpchwrit": 759, "clangattrspel": 759, "clangattrspellinglistindex": 759, "clangattrtemplateinstanti": 759, "clangattrvisitor": 759, "clangcommentcommandinfo": 759, "clangcommentcommandlist": 759, "clangcommenthtmlnamedcharacterrefer": 759, "clangcommenthtmltag": 759, "clangcommenthtmltagsproperti": 759, "clangcommentnod": 759, "clangdeclnod": 759, "clangdiaggroup": 759, "clangdiagsdef": 759, "clangdiagsindexnam": 759, "clangsacheck": 759, "clangstmtnod": 759, "class": [577, 582, 585, 599, 602, 651, 652, 695, 699, 702, 734, 760, 761, 771, 773], "classof": 695, "cleanup": [661, 700], "cleanuppad": 702, "cleanupret": 702, "clear_cach": 702, "client": 585, "clobber": [599, 702, 713], "clone": 736, "close": [592, 706, 732, 795], "cmake": [595, 597, 598, 671, 690, 691, 692, 693, 764], "cmath": 652, "cmp": 704, "cmpconstant": 714, "cmpgep": 714, "cmpoper": 714, "cmptype": 714, "cmpvalu": 714, "cmpxchg": 702, "coalescingbitvector": 734, "code": [582, 593, 599, 600, 601, 602, 605, 610, 611, 623, 631, 646, 647, 648, 650, 652, 656, 657, 659, 661, 664, 668, 671, 674, 696, 702, 707, 708, 727, 732, 733, 734, 735, 739, 746, 750, 752, 756, 767, 769, 771, 772, 773, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "codeemitt": 759, "codegen": [586, 740, 750], "codegenprepar": 732, "codeview": [663, 702, 720, 721, 725, 729, 730, 750], "coff": [641, 645, 663, 805], "collabor": 748, "collect": [651, 653, 668, 702, 742, 755, 802], "collector": [668, 702], "color": 738, "column": 702, "com": 603, "combin": [599, 732], "comdat": 702, "command": [594, 598, 607, 613, 617, 629, 634, 637, 638, 651, 733, 742, 770], "commandlin": 651, "comment": [602, 708], "commit": [601, 659, 671, 733, 736], "committe": 746, "common": [671, 673, 690, 715, 734, 764], "communic": 705, "communiti": [600, 670, 694, 757], "compar": [669, 714], "comparison": 714, "compat": [626, 659, 704, 737], "compil": [597, 602, 609, 616, 652, 653, 664, 671, 692, 693, 702, 717, 731, 751, 764, 781, 796, 800, 801], "complain": 715, "complex": [584, 652, 702, 734], "complexpattern": 678, "complic": 704, "compon": [583, 592, 599, 616, 659, 741], "composit": [577, 680, 748], "compr": 580, "comprehens": 743, "compress": 702, "compressstor": 702, "comput": [668, 669, 715], "compute_pgm_rsrc1": 582, "compute_pgm_rsrc2": 582, "compute_pgm_rsrc3": 582, "concaten": 734, "concept": [656, 755, 761, 773], "conclus": [794, 802], "concret": [695, 761], "concurr": [586, 702], "condit": [601, 702, 732, 751, 761], "conduct": [600, 746], "confidenti": 748, "config": 616, "configur": [595, 608, 609, 667, 671, 688, 690, 693, 764, 765, 800], "connect": 701, "consid": [666, 748], "consider": [588, 700], "consist": [592, 631, 756], "const": 714, "constant": [581, 663, 676, 677, 702, 708, 732, 734, 750, 751, 796], "constants_block": 589, "constmerg": 732, "constrain": [583, 702, 766], "constraint": [582, 702], "construct": [599, 658, 664, 701, 708, 732], "constructor": [602, 734], "consum": [734, 750], "consumeaft": 651, "contain": [602, 636, 730, 734, 745], "content": [577, 589, 750, 804], "context": [577, 702, 777], "contextu": 710, "continu": [602, 655, 667, 764], "contract": 695, "contribut": [654, 722], "control": [577, 596, 598, 651, 652, 676, 751, 775, 797], "convent": [580, 581, 582, 599, 664, 700, 702, 715, 751, 771], "convers": [577, 581, 676, 702, 715, 738, 770, 771], "convert": [646, 697, 702, 732], "copi": [602, 633, 700, 702], "copyright": 659, "copysign": 702, "copyvalu": 585, "copyweak": 702, "coral": 738, "core": [0, 2, 3, 4, 681, 734, 755, 757], "coreclr": 668, "coro": 655, "corocleanup": 655, "coroear": 655, "coroelid": 655, "corosplit": 655, "coroutin": 655, "corpus": 704, "cos": 702, "cost": [661, 739], "could": 714, "count": [591, 603, 702, 732, 770], "counter": [656, 734], "cov": 617, "cover": [602, 757], "coverag": [617, 656, 704], "cpu": 738, "crash": [593, 696, 704], "creat": [627, 694, 717, 734, 735, 752, 760, 761, 773], "creation": [577, 707], "crit": 732, "criteria": [694, 748], "critic": 732, "cross": [597, 633, 645, 671, 692, 693, 764], "ctag": 759, "ctlz": 702, "ctpop": 702, "cttz": 702, "cuda": 652, "current": [717, 736, 737, 739, 748], "custom": [623, 631, 651, 655, 668, 669, 678, 717, 734, 764, 765, 771, 777], "customeventmark": 776, "cv_def_rang": 663, "cv_file": 663, "cv_filechecksum": 663, "cv_filechecksumoffset": 663, "cv_fpo_data": 663, "cv_func_id": 663, "cv_inline_linet": 663, "cv_inline_site_id": 663, "cv_linet": 663, "cv_loc": 663, "cv_stringtabl": 663, "cxxfilt": 618, "cxxmap": 619, "cycl": 592, "d16": 580, "da": [580, 732], "dag": [590, 599, 603, 743, 761], "dagcombin": 740, "daginit": 760, "dagisel": 759, "darpa": 738, "darwin": 627, "data": [577, 582, 589, 599, 637, 656, 658, 702, 715, 732, 734, 751, 756, 760, 774, 776, 777], "datalayout": 599, "date": 711, "dbg": [732, 750], "dbi": [636, 722], "dce": 732, "dead": 732, "deadargelim": 732, "deadarghax0r": 732, "deadtypeelim": 732, "deal": 592, "dealloc": 655, "debug": [577, 582, 585, 606, 607, 622, 630, 657, 681, 697, 702, 708, 719, 722, 732, 734, 742, 743, 750, 760, 766, 775, 801], "debug_info": 577, "debug_typ": 734, "debugg": [577, 582, 593, 702, 732, 750], "debugifi": 697, "debuginfo": 732, "debugtrap": 702, "decl": 702, "declar": [602, 680, 732, 750], "decod": 732, "deconstruct": 599, "decrement": 702, "deduc": 732, "deduct": 602, "deep": 709, "deeper": 695, "def": [734, 761], "default": [592, 602, 713, 716, 777], "defer": 751, "defici": 762, "defin": [602, 702, 751, 761, 771, 798, 799], "define_abbrev": 589, "definit": [577, 602, 615, 703, 706, 741, 753, 760, 761], "defm": 761, "defset": 761, "defvar": 761, "delet": [697, 724, 732, 734], "deletevalu": 585, "demangl": [618, 667], "demo": 664, "demot": 732, "denorm": 582, "densemap": 734, "denseset": 734, "deoptim": 702, "depend": [585, 658, 663, 702, 708, 731, 732, 751], "deprec": [740, 757, 764, 765], "dequ": 734, "dereferenc": [598, 669, 702], "dereferenceable_or_nul": 702, "deriv": [662, 734, 755], "describ": 666, "descript": [577, 593, 599, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 705, 736], "descriptor": 582, "design": [593, 594, 596, 599, 658, 669, 685, 687, 700, 705, 707, 713, 717, 734, 741, 747], "destroy": 655, "destroyweak": 702, "detail": [602, 615, 658, 710, 749, 750, 751, 759, 761, 770], "detect": [652, 687, 732, 738], "determin": [584, 602, 651], "determinist": 602, "develop": [597, 607, 659, 670, 671, 701, 704, 713, 736, 760, 770], "deviat": [14, 98, 187, 289, 324, 353, 422, 535], "devic": [652, 764], "dfapacket": 759, "diagnos": 631, "diagnost": [636, 745, 770], "dialect": 652, "diarglist": 702, "dibasictyp": 702, "dicompileunit": 702, "dicompositetyp": 702, "dictionari": 704, "did": 664, "diderivedtyp": 702, "didn": 739, "die": 732, "dienumer": 702, "diexpress": 702, "diff": [620, 745], "differ": [585, 595, 641, 652, 669, 765], "differenti": 739, "difil": 702, "diflag": 702, "diglobalvari": 702, "diglobalvariableexpress": 702, "diimportedent": 702, "dilabel": 702, "dilexicalblock": 702, "dilexicalblockfil": 702, "diloc": 702, "dilocalvari": 702, "dim": 580, "dimacro": 702, "dimacrofil": 702, "dinamespac": 702, "diobjcproperti": 702, "direct": [582, 585, 599, 603, 611, 663, 702, 751, 753, 761, 770], "directori": [671, 726], "dis": 621, "disabl": 702, "disable_nonforc": 702, "disadvantag": [658, 739], "disassembl": [599, 621, 667, 710, 759], "disclosur": 748, "discoveri": 608, "discuss": 748, "disk": 724, "dispatch": [582, 631], "display": 764, "dissect": [656, 715], "distanc": 669, "distinct": 655, "distribut": [595, 694, 702, 767, 769], "disubprogram": 702, "disubrang": 702, "disubroutinetyp": 702, "ditemplatetypeparamet": 702, "ditemplatevalueparamet": 702, "dither": 738, "dlc": 580, "dll": 702, "dmask": 580, "do": [593, 602, 664, 669, 714, 732], "doc": 653, "docker": 660, "dockerfil": 660, "document": [582, 583, 596, 602, 653, 666, 694, 714, 777], "doe": [664, 669, 704, 773], "doesn": 704, "doesnotaccessmemori": 585, "dofin": 773, "doiniti": 773, "dom": 732, "domfronti": 732, "domin": 732, "domtre": 732, "don": [601, 602, 664, 669, 751, 756], "done": [580, 655], "donoth": 702, "dot": 732, "down": 751, "downstream": 739, "doxygen": 602, "dpp": 580, "dpp16": [0, 1], "dpp16_ctrl": 580, "dpp32_ctrl": 580, "dpp64_ctrl": 580, "dpp8": [0, 1, 580], "dpp8_sel": 580, "dpp_ctrl": 580, "drawback": 736, "driven": 585, "driver": [794, 795], "drop": [612, 697], "ds": [0, 2, 3, 4, 9, 580, 582, 585], "dse": [585, 732], "dso": 702, "dst": [62, 151, 252, 344, 360, 473], "dst_sel": 580, "dst_unus": 580, "dsymutil": 606, "due": 602, "dump": [622, 635, 636], "dumper": 634, "duplic": [732, 756], "dure": [750, 770], "dw_at_llvm_active_lan": 582, "dw_at_llvm_augment": 582, "dw_at_llvm_lane_pc": 582, "dwarf": [577, 582, 606, 622, 630, 750, 801], "dwarfdump": [622, 667], "dyn_cast": 734, "dynam": [599, 651, 702, 773], "e_flag": 582, "each": 732, "earli": 602, "easier": 751, "ebpf": 599, "ec": 722, "ed": 657, "edg": [732, 751, 755], "edit": 633, "ef_amdgpu_mach": 582, "effect": [666, 669], "effici": [585, 601, 700], "eh": [661, 732], "either": 720, "element": [602, 669, 702], "elf": [582, 633, 641, 645, 663], "elimin": 732, "elis": 700, "els": [598, 602, 797], "elseif": 598, "email": 736, "emb": 751, "embed": [582, 597, 653, 708], "emiss": [599, 663, 801], "emit": [599, 617, 668, 745, 760, 800], "emitt": 771, "empti": 603, "enabl": [702, 745], "encod": [577, 579, 589, 599, 656], "end": [602, 609, 655, 664, 669, 696, 702, 715, 734, 750], "end_block": 589, "endcatch": 661, "endian": 588, "endl": 602, "endofbuff": 776, "engin": 707, "enhanc": 755, "enough": 593, "enter_subblock": 589, "entiti": 577, "entri": [577, 582, 591, 702, 732, 753], "enumer": [582, 602, 759], "environ": [582, 702, 773], "epilog": 599, "epilogu": 770, "equal": 602, "equival": 702, "erlang": 668, "error": [602, 701, 719, 734, 747, 756, 760, 777], "error_cod": 734, "erroror": 734, "establish": 659, "etc": [662, 734], "eval": [585, 732], "evalu": [577, 585, 602, 732], "even": 751, "event": 670, "everi": 602, "everyon": 601, "everyth": 751, "evolut": 732, "exact": 704, "exampl": [577, 582, 588, 608, 616, 618, 623, 630, 637, 644, 646, 655, 657, 668, 671, 673, 679, 686, 687, 699, 702, 704, 705, 709, 719, 734, 752, 761, 773], "except": [602, 661, 700, 702, 732, 755], "exceptionpoint": 661, "exe": 626, "exec": 581, "execut": [582, 597, 608, 611, 631, 701, 715, 727, 734, 766], "executor": 701, "execz": 581, "exegesi": 623, "exhaust": 732, "exist": [585, 773, 799], "exit": [602, 603, 604, 606, 608, 609, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 627, 628, 630, 631, 632, 633, 635, 637, 640, 641, 642, 643, 644, 645, 646, 649, 650, 732], "exitonerror": 734, "exp": [0, 2, 3, 4, 580, 702], "exp2": 702, "expand": [702, 771], "expandload": 702, "expans": 750, "expect": [591, 702], "experi": 736, "experiment": [702, 740, 753], "expert": 601, "explicit": [718, 755], "exploit": 651, "explor": 775, "export": 617, "expos": 756, "express": [577, 581, 582, 656, 661, 702, 732, 751, 761, 794, 795, 797], "extend": [599, 662, 797, 798, 799], "extens": [577, 651, 663, 676, 738, 750, 773, 797], "extern": [651, 708, 732, 743, 764, 765, 804], "externalfnconst": 732, "extra": [631, 669, 766], "extract": [624, 702, 732], "extractel": 702, "extractvalu": 702, "extrahelp": 651, "extrem": 782, "fab": 702, "facil": 761, "fadd": 702, "fail": 692, "fair": 739, "fallibl": 734, "faq": [664, 704, 772], "fast": 702, "fastisel": [685, 743, 759], "fault": 665, "faultmap": 665, "fcmp": 702, "fcmps": 702, "fconst": 581, "fdiv": 702, "featur": [582, 599, 668, 701, 704, 717, 727, 731, 737, 738, 766, 770], "feedback": 601, "fenc": 702, "ffmpeg": 738, "fi": 580, "fidel": 775, "field": [714, 760, 761], "file": [589, 599, 602, 603, 606, 608, 619, 632, 634, 636, 643, 651, 656, 671, 692, 705, 708, 722, 726, 730, 732, 745, 746, 750, 761, 766, 774], "filecheck": 603, "filenam": 702, "filter": [599, 636, 661], "final": [655, 694, 707], "find": [666, 667, 732, 733, 734], "findregress": 744, "fine": [704, 734, 751], "finer": 719, "firehos": 738, "first": [669, 702, 803], "fix": [582, 589, 592, 599, 654, 702, 708, 714, 734, 750], "flag": [651, 652, 702, 708, 731, 751, 764, 770], "flame": 775, "flat": [0, 2, 3, 4, 8, 9, 580, 582], "flat_scratch": 581, "flexibl": 603, "flight": [774, 776], "float": [581, 582, 583, 611, 663, 676, 692, 702], "floor": 702, "flow": [577, 596, 598, 631, 676, 777, 797], "flt": 702, "fma": 702, "fma_mix": 580, "fmax": 702, "fmin": 702, "fmt": 580, "fmul": 702, "fmuladd": 702, "fn": 732, "fneg": 702, "focus": 594, "fold": [599, 751, 771, 796], "foldingset": 734, "follow": [669, 714], "followup": 702, "followup_al": 702, "followup_coincid": 702, "followup_epilogu": 702, "followup_fallback": 702, "followup_inn": 702, "followup_out": 702, "followup_remaind": 702, "followup_remainder_inn": 702, "followup_remainder_out": 702, "followup_sequenti": 702, "followup_vector": 702, "for": [577, 582, 585, 593, 595, 599, 601, 602, 605, 610, 612, 625, 627, 629, 647, 648, 653, 660, 661, 664, 666, 667, 669, 671, 680, 686, 692, 695, 697, 701, 702, 704, 715, 732, 734, 735, 736, 738, 750, 755, 757, 765, 768, 797, 799], "forbidden": 602, "forc": 732, "foreach": 761, "forens": 636, "fork": 704, "form": [577, 599, 706, 732], "format": [577, 582, 589, 599, 602, 608, 622, 633, 641, 651, 656, 661, 667, 708, 724, 726, 730, 734, 750, 752, 753, 755, 776], "formatv": 734, "formed": 702, "fortran": 750, "fp16": 702, "fpext": 702, "fpmath": 702, "fptosi": 702, "fptoui": 702, "fptrunc": 702, "fragil": 766, "frame": [577, 582, 599, 655, 661, 802], "frameaddress": 702, "framework": 659, "free": [655, 687, 726], "freeform": 651, "freepooma": 738, "freez": 702, "frem": 702, "frequenc": 590, "frequent": 597, "friend": 704, "from": [582, 590, 599, 611, 624, 651, 652, 669, 671, 693, 702, 717, 732, 733, 734, 751, 782], "front": [669, 696, 750], "frontend": [666, 718, 803], "frontier": 732, "fshl": 702, "fshr": 702, "fsub": 702, "ft": 598, "ftensor": 738, "full": [702, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "fulli": 602, "funclet": [661, 702], "function": [582, 591, 598, 599, 602, 624, 651, 655, 656, 662, 664, 677, 702, 708, 714, 715, 732, 734, 750, 751, 756, 770, 774, 776, 781, 795, 801], "function_block": 589, "function_entry_count": 702, "function_ref": 734, "functioncompar": 714, "functionpass": 773, "fundament": [662, 763], "further": [631, 717, 735, 775], "futur": [599, 685, 717, 751, 773, 774], "fuzz": [667, 704], "fuzzer": [667, 704], "fx": [51, 305, 310, 315, 338, 361], "g_ab": 676, "g_add": 676, "g_addrspace_cast": 676, "g_and": 676, "g_anyext": 676, "g_ashr": 676, "g_assert_sext": 676, "g_assert_zext": 676, "g_atomic_cmpxchg": 676, "g_atomic_cmpxchg_with_success": 676, "g_atomicrmw_add": 676, "g_atomicrmw_and": 676, "g_atomicrmw_fadd": 676, "g_atomicrmw_fsub": 676, "g_atomicrmw_max": 676, "g_atomicrmw_min": 676, "g_atomicrmw_nand": 676, "g_atomicrmw_or": 676, "g_atomicrmw_sub": 676, "g_atomicrmw_umax": 676, "g_atomicrmw_umin": 676, "g_atomicrmw_xchg": 676, "g_atomicrmw_xor": 676, "g_bitcast": 676, "g_bitrevers": 676, "g_block_addr": 676, "g_br": 676, "g_brcond": 676, "g_brindirect": 676, "g_brjt": 676, "g_bswap": 676, "g_build_vector": 676, "g_build_vector_trunc": 676, "g_bzero": 676, "g_concat_vector": 676, "g_constant": 676, "g_ctlz": 676, "g_ctlz_zero_undef": 676, "g_ctpop": 676, "g_cttz": 676, "g_cttz_zero_undef": 676, "g_dyn_stackalloc": 676, "g_extract": 676, "g_extract_vector_elt": 676, "g_fab": 676, "g_fadd": 676, "g_fcanonic": 676, "g_fceil": 676, "g_fcmp": 676, "g_fconstant": 676, "g_fcopysign": 676, "g_fcos": 676, "g_fdiv": 676, "g_fenc": 676, "g_fexp": 676, "g_fexp2": 676, "g_ffloor": 676, "g_flog": 676, "g_flog10": 676, "g_flog2": 676, "g_fma": 676, "g_fmad": 676, "g_fmaximum": 676, "g_fmaxnum": 676, "g_fmaxnum_iee": 676, "g_fminimum": 676, "g_fminnum": 676, "g_fminnum_iee": 676, "g_fmul": 676, "g_fnearbyint": 676, "g_fneg": 676, "g_fpext": 676, "g_fpow": 676, "g_fptosi": 676, "g_fptoui": 676, "g_fptrunc": 676, "g_frame_index": 676, "g_frem": 676, "g_frint": 676, "g_fsin": 676, "g_fsqrt": 676, "g_fsub": 676, "g_global_valu": 676, "g_icmp": 676, "g_implicit_def": 676, "g_indexed_load": 676, "g_indexed_sextload": 676, "g_indexed_stor": 676, "g_indexed_zextload": 676, "g_insert": 676, "g_insert_vector_elt": 676, "g_intrins": 676, "g_intrinsic_round": 676, "g_intrinsic_trunc": 676, "g_intrinsic_w_side_effect": 676, "g_inttoptr": 676, "g_jump_tabl": 676, "g_load": 676, "g_lshr": 676, "g_memcpi": 676, "g_memcpy_inlin": 676, "g_memmov": 676, "g_memset": 676, "g_merge_valu": 676, "g_mul": 676, "g_or": 676, "g_phi": 676, "g_ptr_add": 676, "g_ptrmask": 676, "g_ptrtoint": 676, "g_rotl": 676, "g_rotr": 676, "g_sadd": 676, "g_saddo": 676, "g_saddsat": 676, "g_sbfx": 676, "g_sdiv": 676, "g_sdivrem": 676, "g_select": 676, "g_sext": 676, "g_sext_inreg": 676, "g_sextload": 676, "g_shl": 676, "g_shuffle_vector": 676, "g_sitofp": 676, "g_smax": 676, "g_smin": 676, "g_smulh": 676, "g_smulo": 676, "g_srem": 676, "g_sshlsat": 676, "g_ssube": 676, "g_ssubo": 676, "g_ssubsat": 676, "g_store": 676, "g_sub": 676, "g_trunc": 676, "g_uadd": 676, "g_uaddo": 676, "g_uaddsat": 676, "g_ubfx": 676, "g_udiv": 676, "g_udivrem": 676, "g_uitofp": 676, "g_umax": 676, "g_umin": 676, "g_umulh": 676, "g_umulo": 676, "g_unmerge_valu": 676, "g_urem": 676, "g_ushlsat": 676, "g_usub": 676, "g_usubo": 676, "g_usubsat": 676, "g_vaarg": 676, "g_vastart": 676, "g_vecreduce_fadd": 676, "g_vecreduce_fmax": 676, "g_vecreduce_fmin": 676, "g_vecreduce_fmul": 676, "g_vecreduce_seq_fadd": 676, "g_vecreduce_seq_fmul": 676, "g_xor": 676, "g_zext": 676, "g_zextload": 676, "garbag": [668, 702, 742, 755, 802], "gather": [702, 770], "gc": [668, 702, 755], "gcmetadataprint": 668, "gcov": 617, "gcread": [668, 702], "gcroot": 702, "gcs": [668, 755], "gcwrite": [668, 702], "gdb": [657, 773], "gds": 580, "gen": 715, "general": [577, 587, 595, 599, 601, 608, 611, 641, 650, 663, 702, 711, 734, 759, 776], "generat": [593, 599, 611, 638, 639, 643, 661, 664, 667, 668, 696, 702, 707, 708, 732, 765, 769, 775, 795, 797], "generic": [613, 633, 645, 667, 675, 676, 701, 738, 759], "geometr": 738, "gep": [666, 669], "get": [590, 670, 671, 672, 673, 702, 704, 719, 760, 775], "getanalysi": 773, "getanalysisifavail": 773, "getanalysisusag": 773, "getelementptr": [664, 702], "getmodrefinfo": 585, "getposit": 651, "getregisteredopt": 651, "gfx10": [0, 582], "gfx1011": 1, "gfx1012": 1, "gfx6": 582, "gfx7": 2, "gfx8": 3, "gfx9": [4, 582], "gfx900": 5, "gfx902": 5, "gfx904": 6, "gfx906": 7, "gfx908": 8, "gfx909": 5, "gfx90a": [9, 582], "gfx_generation_minor": 582, "gfx_generation_numb": 582, "gfx_generation_step": 582, "git": [671, 674, 736, 739], "github": 736, "given": 692, "glc": 580, "global": [685, 702, 708, 714, 720, 723, 732, 750, 770], "global_ctor": [664, 702], "global_dtor": 702, "globaldc": 732, "globalisel": 682, "globalopt": 732, "globalsmodref": [585, 732], "globalvalu": 734, "globalvari": 734, "gnu": [607, 640], "gnupg": 738, "go": [602, 664, 720, 743], "goal": [668, 713], "gold": 686, "good": 704, "got": 696, "grain": [734, 751], "grammar": 776, "granular": 719, "graph": [658, 663, 732, 734, 738, 751, 761, 775], "graph500": 738, "group": [651, 702, 748, 773], "guarante": 802, "guard": [602, 687, 702, 751], "guid": [582, 586, 607, 651, 660, 691, 697, 704, 708, 715, 732, 746, 760, 764, 765], "guidanc": 595, "guidelin": [602, 709, 741, 752], "gvn": [585, 732], "gwp": 687, "hack": [693, 732], "half": [702, 755], "handl": [598, 599, 661, 701, 702, 732, 734, 777], "handler": [582, 734], "happen": [664, 669, 746], "har": [701, 738], "hard": [751, 799, 801], "harden": [747, 751], "hardwar": [582, 653, 671, 673, 702], "hasglobalalias": 714, "hash": [724, 750], "haswel": 751, "have": 669, "hcc": 582, "header": [577, 582, 602, 656, 692, 722, 727, 729, 747, 750, 756, 776], "heap": [655, 668, 712, 734], "heavi": 751, "hello": [772, 773], "help": [651, 652, 654, 664, 734, 735], "heterogen": 577, "hex": 777, "hexadecim": 663, "hexagon": [653, 743], "hide": 651, "hierarchi": [695, 734], "high": [580, 599, 602, 656, 658, 702, 708, 738, 741, 751, 756], "higher": 664, "hint": [676, 702, 734, 770], "histor": [594, 675], "histori": 736, "hook": 671, "hope": 709, "host": [652, 664, 671, 692, 711], "how": [583, 592, 599, 601, 631, 654, 664, 669, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 704, 711, 714, 717, 744, 748, 750, 752, 754, 761], "hpcs": 738, "hsa": 582, "hsa_code_object_isa": 582, "hsa_code_object_vers": 582, "hwreg": [49, 143, 239, 362, 474], "hydrobench": 738, "hyphen": 651, "i32": 669, "ia": 609, "ia64": 653, "ibm": 653, "icmp": 702, "iconst": 581, "id": [582, 655, 656, 702], "idea": [596, 755, 798], "identifi": [582, 668, 702, 761], "ids": 589, "idxen": 580, "if": [591, 598, 602, 669, 714, 761, 770, 771, 797], "ifunc": 702, "ilist": 734, "ilist_nod": 734, "ilist_trait": 734, "imag": [582, 660, 738], "imask": [240, 363, 475], "imm16": [25, 79, 99, 125, 163, 188, 210, 267, 290, 364, 365, 366, 476, 477, 478], "imm3": [61, 251], "imm32": [26, 47, 48, 126, 142, 211, 237, 238], "immedi": 708, "immutablemap": 734, "immutablepass": 773, "immutableset": 734, "impl": 732, "implement": [585, 588, 590, 594, 599, 602, 658, 668, 685, 702, 705, 707, 712, 714, 716, 717, 719, 738, 749, 751, 756, 771, 773, 794, 802, 804], "implicit": [577, 582, 665], "implicitnullcheck": 665, "import": [678, 706, 734, 736], "in": [588, 591, 592, 597, 598, 599, 602, 612, 631, 655, 658, 661, 664, 668, 697, 708, 711, 714, 720, 732, 734, 736, 743, 745, 749, 750, 753, 755, 761, 770, 773, 774, 777, 799, 804], "inalloca": 700, "includ": [602, 664, 671, 756, 761], "inclus": 757, "incorrect": 696, "increment": [659, 702], "incub": 659, "indent": 602, "independ": [599, 664, 802], "index": [577, 639, 669, 702, 708, 719, 759], "indexedmap": 734, "indic": [666, 669, 708, 729, 778], "indirect": [702, 751], "indirectbr": 702, "indirectbrinst": 591, "individu": [708, 734], "induct": [732, 770], "indvar": 732, "info": [697, 708, 720, 722, 727, 732, 734, 743, 750, 771], "inform": [577, 582, 599, 602, 617, 622, 642, 653, 654, 659, 702, 712, 725, 732, 734, 743, 750, 766, 768, 801], "infrastructur": [585, 608, 688, 743, 766], "init": [702, 760], "initi": [582, 585, 599, 602, 668, 704, 734], "initweak": 702, "inlin": [581, 599, 602, 702, 732], "input": [633, 637, 667, 702, 777], "insert": [599, 702, 716, 734, 755], "insertel": 702, "insertvalu": 702, "inspect": 734, "instal": [595, 625, 693], "instcombin": [664, 732, 740], "instcount": 732, "instnam": 732, "instrinfo": 759, "instrmap": 699, "instrprof": 702, "instruct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 577, 578, 579, 580, 581, 582, 586, 588, 591, 599, 623, 631, 661, 662, 664, 669, 675, 685, 697, 699, 702, 704, 708, 710, 732, 734, 740, 750, 751, 771, 775], "instructionselect": 678, "instructionselector": 678, "instrument": [712, 774, 775], "instsimplifi": 740, "integ": [581, 589, 669, 676, 702], "integr": [608, 702, 732, 751], "intel": [587, 609], "intend": 700, "inteqclass": 734, "interact": [734, 773], "interchang": 767, "interfac": [585, 594, 664, 733, 734, 756], "interleav": [702, 767], "intern": [602, 651, 732, 751], "interoper": 734, "interprocedur": [732, 751], "interv": [599, 732], "intervalmap": 734, "intinit": 760, "into": [602, 646, 651, 659, 664, 669, 697, 716, 732, 734, 751], "intrins": [582, 583, 588, 655, 661, 662, 668, 677, 702, 715, 732, 740, 750, 753, 755, 759], "intrinsicid": 708, "introduc": 659, "introduct": [577, 592, 599, 662, 696, 709, 745, 772, 773, 777, 779, 780, 781, 782, 793, 794, 795, 796, 797, 798, 799, 800, 801], "inttoptr": [669, 702], "invalid": [713, 716], "invari": [702, 732, 751, 776], "invok": [652, 702, 716, 732, 761], "invokeinst": 591, "involv": 670, "iostream": [602, 664], "ipi": 729, "iplist": 734, "ipsccp": 732, "ir": [582, 583, 586, 588, 589, 656, 659, 664, 666, 667, 668, 669, 675, 697, 708, 732, 734, 740, 742, 743, 795, 797, 802], "irc": 670, "irr_loop": 702, "irtransformlay": 780, "irtransl": 677, "is": [599, 601, 602, 664, 668, 669, 702, 704, 736, 748, 750, 751, 757, 761, 772, 773, 799, 801], "isa": 734, "isel": 667, "isn": 593, "isol": 734, "issu": [585, 594, 602, 631, 654, 690, 715, 718, 748], "it": [601, 664, 669, 686, 714, 754, 800], "itanium": [653, 661, 690], "item": [582, 671], "iter": [702, 734, 761, 770], "its": 727, "iv": 732, "ival": 581, "jam": [732, 767], "jit": [599, 657, 701, 734, 769, 771, 779, 780, 781, 782, 796, 804], "jitdylib": 717, "jitlink": 701, "jitlinkmemorymanag": 701, "joinerror": 734, "json": 759, "jump": [599, 708, 732], "kaleidoscop": [783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804], "kaleidoscopejit": 779, "keep": [602, 739, 748, 756], "kernel": [582, 715], "key": 777, "keyword": 602, "kick": 798, "kind": 739, "know": 714, "known": [679, 690], "kokko": 738, "label": [50, 144, 241, 367, 479, 602, 603, 702], "laissez": 739, "lambda": 602, "lanai": 653, "landingpad": 702, "lane": [582, 588, 702], "languag": [577, 602, 664, 666, 702, 750, 793, 797, 798, 799, 802, 803, 804], "larg": [666, 751], "late": 599, "launder": 702, "layer": [599, 602, 737, 780], "layout": [582, 599, 671, 702, 715, 725, 726, 730, 732, 734, 735, 750, 768], "lazi": [717, 732, 734, 781, 782], "lazyreexport": 782, "lcssa": [706, 732], "ld1": 588, "ldr": 588, "lds": 580, "lds_direct": 581, "leaf": 721, "leak": 704, "leb128": 656, "leftov": 767, "legaci": [659, 716], "legal": [599, 666, 680, 771], "legalizerinfo": 680, "legalizetyp": 599, "length": 663, "less": 751, "let": 761, "level": [588, 599, 602, 651, 656, 658, 664, 675, 697, 702, 708, 717, 732, 740, 741, 750, 751, 756], "lexer": [793, 797], "lexic": 761, "lexicon": 703, "lf_arglist": 721, "lf_array": 721, "lf_bclass": 721, "lf_binterfac": 721, "lf_bitfield": 721, "lf_buildinfo": 721, "lf_class": 721, "lf_endprecomp": 721, "lf_enum": 721, "lf_enumer": 721, "lf_fieldlist": 721, "lf_func_id": 721, "lf_index": 721, "lf_interfac": 721, "lf_ivbclass": 721, "lf_label": 721, "lf_member": 721, "lf_method": 721, "lf_methodlist": 721, "lf_mfunc_id": 721, "lf_mfunction": 721, "lf_modifi": 721, "lf_nesttyp": 721, "lf_onemethod": 721, "lf_padn": 721, "lf_pointer": 721, "lf_precomp": 721, "lf_procedur": 721, "lf_stmember": 721, "lf_string_id": 721, "lf_structur": 721, "lf_substr_list": 721, "lf_typeserver2": 721, "lf_udt_mod_src_lin": 721, "lf_udt_src_lin": 721, "lf_union": 721, "lf_vbclass": 721, "lf_vftabl": 721, "lf_vfunctab": 721, "lf_vtshape": 721, "lfenc": 751, "lgtm": 601, "lib": [626, 671, 702], "libc": [690, 737], "libcal": [586, 732], "libdevic": 715, "liber": 602, "libfuzz": [704, 742], "liblto": 705, "libm": 702, "libprotobuf": 667, "librari": [595, 602, 626, 627, 651, 652, 663, 667, 671, 702, 704, 717, 731, 734, 735, 737, 738, 747, 756, 758, 774], "libtool": 627, "libunwind": 690, "licens": [659, 664, 686], "licm": [585, 702, 732, 767], "licm_vers": 702, "life": 592, "lifetim": [700, 702, 750], "lift": 740, "like": [602, 664, 734], "limit": [585, 708, 719, 755, 768], "line": [577, 582, 594, 651, 733, 742, 770], "link": [628, 671, 673, 686, 701, 702, 705, 715, 752], "linkag": [702, 717], "linker": [628, 663, 702, 705], "linkgraph": 701, "linkonc": 663, "lint": 732, "linux": [587, 653], "lipo": 629, "list": [577, 598, 602, 632, 651, 653, 670, 702, 729, 734, 743, 752, 777, 779, 780, 781, 782, 794, 795, 796, 797, 798, 799, 800, 801], "listinit": 760, "listrecti": 760, "lit": 608, "liter": [577, 581, 761], "littl": 602, "live": [599, 702, 708], "livedebugvalu": 750, "ll": 643, "llc": 609, "lldb": [610, 650, 657, 743], "lli": 611, "lljit": 717, "lllazyjit": 717, "llrint": 702, "llround": 702, "llvm": [582, 585, 586, 588, 589, 590, 591, 592, 593, 595, 597, 598, 599, 600, 601, 602, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 673, 674, 686, 688, 689, 691, 693, 694, 695, 696, 697, 701, 702, 703, 704, 705, 706, 710, 711, 713, 715, 731, 732, 734, 735, 736, 737, 740, 741, 742, 743, 745, 748, 749, 750, 753, 755, 756, 757, 759, 766, 769, 770, 771, 772, 773, 774, 775, 778, 795, 796, 797, 799, 802, 803, 804], "llvm_debug": 734, "llvm_shutdown": 734, "llvmcontext": 734, "lnt": 764, "load": [582, 599, 631, 666, 702, 707, 751, 773], "loadweak": 702, "loadweakretain": 702, "local": [608, 671, 702, 736, 799], "localescap": 702, "localrecov": 702, "locat": [577, 596, 630, 646, 671, 697, 708, 713, 750, 751, 801], "locstat": 630, "log": [702, 714], "log10": 702, "log2": 702, "logarithm": 714, "logic": 577, "long": 739, "longjmp": 661, "look": 666, "lookup": [577, 582, 732, 750], "loop": [590, 598, 602, 702, 706, 732, 767, 770, 773, 797], "loopinfo": 706, "looppass": 773, "lostdebuglocobserv": 697, "low": [602, 675], "lower": [655, 668, 669, 702, 732, 755], "loweratom": 732, "lowerinvok": 732, "lowerswitch": 732, "lppassmanag": 773, "lrint": 702, "lround": 702, "lsda": 661, "lshr": 702, "lto": [686, 702], "lto_code_gen_t": 705, "lto_module_t": 705, "lwe": 580, "m0": [581, 582], "m_op_sel": 580, "m_op_sel_hi": 580, "mach": [632, 633, 634, 635, 641, 646, 750], "machin": [599, 623, 631, 663, 666, 675, 708, 755, 771, 800], "machine_version_major": 582, "machine_version_minor": 582, "machine_version_step": 582, "machinebasicblock": 599, "machinefunct": [599, 773], "machinefunctionpass": 773, "machineinstr": [599, 697], "machineinstrbuild": 599, "machineverifi": 681, "machsuit": 738, "maco": 653, "macro": [598, 734, 777], "mad_mix": 580, "magic": 589, "mail": 670, "main": 714, "mainten": 592, "major": [582, 659, 702], "make": [601, 602, 659, 664, 665, 734, 751], "makefil": [735, 764, 765], "man": 736, "manag": [701, 716, 717, 736], "managedstat": 734, "mangl": 619, "manipul": [606, 625, 629, 655, 702], "manual": [651, 653, 702, 708, 734], "map": [582, 583, 599, 656, 663, 665, 668, 699, 702, 722, 726, 727, 734, 753, 755, 771, 777], "mapvector": 734, "mark": 715, "markdown": 709, "marker": [631, 702], "markup": 710, "mask": [702, 740], "mass": 590, "match": [599, 603, 727], "math": [652, 702], "matrix": [599, 702], "maximum": 702, "maxnum": 702, "may": [585, 714], "mc": [599, 667], "mca": 631, "mccontext": 599, "mcinst": 599, "mcjit": [657, 707], "mcsection": 599, "mcstreamer": 599, "mcsymbol": [599, 708], "me": 704, "mechan": 602, "medium": 748, "meet": 713, "meetup": [670, 711], "mem2reg": 732, "member": [669, 721, 734, 746, 748, 750], "membership": [748, 768], "memcpi": [702, 732], "memcpyopt": [585, 732], "memdep": 732, "memmov": 702, "memori": [577, 582, 585, 631, 666, 676, 701, 702, 732, 734, 747, 799], "memorydependenceanalysi": 585, "memoryssa": 713, "memset": 702, "memtagsanit": 712, "merg": [636, 637, 694, 697, 704, 714, 732, 733, 736, 739], "mergefunc": 732, "mergefunct": 714, "mergereturn": 732, "mergetwofunct": 714, "messag": [602, 659, 760], "meta_block": 745, "metadata": [582, 591, 592, 665, 702, 715, 745, 750, 767, 768, 776], "metadata_attach": 589, "metadata_block": 589, "method": [582, 585, 602, 734, 756, 773], "mf": 773, "mfma": 580, "microscop": 602, "microsoft": [597, 673], "middl": [664, 696], "migrat": [718, 736], "mimg": [0, 2, 3, 4, 9, 580], "minim": [660, 756, 774], "minimis": 739, "minimum": [680, 702], "minnum": 702, "minor": 582, "mip": [653, 743], "mir": [697, 708, 750], "mirror": 736, "miscellan": [580, 636, 651, 653, 708, 735, 773], "miscompil": [593, 696], "mismatch": 664, "miss": 732, "misunderstood": 669, "mitig": 751, "mix": [755, 770], "mlir": [648, 650], "mnemon": [579, 599], "mod": 732, "mode": [582, 588, 599, 683, 701, 704, 745, 774, 801], "model": [582, 631, 652, 666, 702, 751, 755], "modern": 671, "modif": [591, 692], "modifi": [578, 579, 580, 582, 603, 613, 651, 664, 702], "modul": [598, 624, 636, 702, 708, 720, 722, 725, 732, 734, 773, 780, 800], "module_block": 589, "module_code_alia": 589, "module_code_asm": 589, "module_code_datalayout": 589, "module_code_deplib": 589, "module_code_funct": 589, "module_code_gcnam": 589, "module_code_globalvar": 589, "module_code_sectionnam": 589, "module_code_tripl": 589, "module_code_vers": 589, "modulepass": 773, "monorepo": [659, 736], "monoton": 586, "more": [584, 602, 674, 704, 706, 712, 734, 774], "most": 732, "motion": 732, "motiv": [577, 665, 740, 753], "move": [736, 758, 763], "moveweak": 702, "mri": 613, "msf": [636, 726, 730], "msg": [55, 146, 245, 370, 482], "mtbuf": [0, 2, 3, 4, 9, 580], "mubuf": [0, 2, 3, 4, 8, 9, 580, 582], "mul": 702, "multi": [584, 595, 641, 705], "multiclass": 761, "multigrid": 738, "multipl": [655, 674, 734, 736, 761], "multipli": 702, "multithread": 773, "must": [585, 601, 651], "mustprogress": 702, "mutabl": 799, "mutat": [667, 697, 704, 799], "my": [664, 669, 704, 803], "name": [577, 582, 599, 602, 618, 619, 625, 651, 702, 727, 732, 739, 750, 760, 771], "namespac": 602, "narrat": 714, "narrow": 594, "nas": 738, "nativ": [589, 599], "natur": 732, "near": 717, "nearbyint": 702, "need": [669, 709, 718], "neg": 580, "neg_hi": 580, "neg_lo": 580, "negat": 669, "neon": 588, "nest": [700, 752], "new": [585, 594, 659, 661, 662, 682, 716, 732, 734, 737, 744, 748, 750, 751, 752, 760, 766, 773, 799], "newbuff": 776, "newcpuid": 776, "newer": 751, "newlin": 603, "next": [603, 775], "next_free_sgpr": 582, "next_free_vgpr": 582, "night": 744, "nm": 632, "no": [585, 692, 714, 732, 756, 777], "noalia": 702, "node": [583, 662, 702, 732], "nomin": 748, "non": [582, 584, 601, 602, 668, 702, 713, 732, 743, 755], "nondebug": 732, "noop": 655, "normal": [655, 777], "not": [602, 603, 651, 664, 692, 704, 714, 732, 736], "notat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 578, 671], "notatom": 586, "note": [582, 595, 596, 599, 653, 675, 689, 690, 706, 743], "null": [581, 668, 669], "number": [577, 581, 582, 589, 651, 732, 736, 739], "numer": [603, 652], "nv": 580, "nvcc": 652, "nvptx": [599, 653, 715], "nvvm": 715, "nwchem": 738, "objc": 702, "objcopi": 633, "objdump": 634, "object": [582, 589, 596, 632, 633, 634, 640, 641, 645, 669, 671, 702, 707, 734, 735, 745, 750, 755, 774, 800], "objectlinkinglay": 701, "objects": 702, "obtain": [652, 659], "ocaml": [668, 743], "occurr": 651, "of": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 577, 580, 581, 585, 590, 592, 595, 597, 598, 599, 600, 601, 602, 622, 651, 654, 656, 659, 664, 666, 667, 668, 669, 671, 677, 686, 695, 700, 702, 704, 705, 713, 715, 716, 720, 732, 734, 735, 739, 743, 744, 746, 748, 750, 751, 761, 770, 771, 773, 777, 801, 802, 804], "off": [581, 658], "offen": 580, "offici": [653, 694], "offset": [702, 751, 768], "offset11": 580, "offset12": 580, "offset13": 580, "offset16": 580, "offset8": 580, "offsetof": 802, "often": 669, "omod": 580, "omp2012": 738, "on": [592, 594, 602, 630, 652, 661, 663, 664, 668, 669, 689, 704, 724, 731, 734, 736, 751, 755, 761, 767], "onc": 655, "one": [664, 669, 732], "ongo": 770, "onli": [595, 634, 732, 734, 736], "onlin": 670, "onlyreadsmemori": 585, "op_sel": 580, "op_sel_hi": 580, "opaqu": [702, 718], "opcod": [578, 579, 675, 676], "open": [695, 743], "openbenchmark": 738, "opencl": 582, "opencv": 738, "openmp": 738, "oper": [577, 581, 582, 613, 666, 674, 676, 680, 702, 734, 751, 761, 798, 799], "operand": [361, 578, 579, 580, 581, 582, 702, 708, 753, 771], "opt": [59, 149, 249, 343, 371, 483, 649, 651, 667, 716, 719, 745, 772, 773], "optim": [582, 586, 595, 599, 649, 652, 664, 676, 686, 691, 696, 697, 702, 705, 713, 719, 732, 745, 750, 751, 764, 769, 780, 796, 802], "option": [582, 594, 595, 603, 604, 606, 608, 609, 611, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 663, 671, 687, 690, 704, 710, 722, 734, 739, 747, 764, 766], "optioncategori": 651, "optparserdef": 759, "or": [602, 651, 664, 702, 736, 751, 761], "orc": [701, 717, 780], "orcv1": 717, "orcv2": 717, "order": [582, 586, 588, 602, 631, 666, 702, 767, 776, 777], "org": 738, "organiz": [756, 766], "origin": 697, "os": 582, "other": [577, 585, 591, 596, 598, 613, 636, 651, 653, 664, 666, 669, 676, 692, 702, 715, 734, 766, 802], "otool": 635, "out": [597, 669, 779], "output": [608, 615, 622, 633, 651, 702, 704, 710, 760, 765, 777], "outsid": 586, "outstand": 736, "over": [602, 666, 734, 737, 761], "overflow": [669, 687, 702], "overhead": [751, 755], "overlap": 637, "overload": 652, "overrid": [585, 761], "overridden": 714, "overview": [585, 598, 602, 655, 656, 668, 699, 702, 715, 717, 744, 753, 755], "own": 734, "owner": 659, "pack": 582, "packag": 731, "packedvector": 734, "packet": 599, "pad": [577, 721], "page": 664, "parallel": [704, 738], "parallel_access": 702, "param": [60, 150, 250, 484, 655, 702], "paramattr_block": 589, "paramattr_code_entri": 589, "paramattr_code_entry_old": 589, "paramattr_group_block": 589, "paramattr_grp_code_entri": 589, "paramet": [702, 715], "parboil": 738, "parent": 661, "parenthes": 602, "parr": 738, "pars": [599, 651, 794], "parsec": 738, "parsecommandlineopt": 651, "parser": [599, 651, 794, 797], "partial": [732, 770], "partit": [663, 732], "pass": [585, 597, 655, 665, 666, 692, 697, 701, 708, 714, 716, 719, 732, 734, 751, 755, 767, 772, 773, 796], "passmanag": 773, "paste": 761, "patch": [601, 654, 659, 671, 694, 753], "patchpoint": 753, "patent": 659, "path": [582, 702], "patleaf": 678, "pattern": [580, 603, 732], "pcmarker": 702, "pdb": [636, 646, 722, 723, 724, 727, 728, 729, 730], "pdb2yaml": 636, "pdbutil": 636, "pe": 641, "per": [582, 781], "perform": [631, 666, 738, 751, 770], "peripher": 757, "person": 702, "pgo": [584, 691], "phabric": 733, "phase": [599, 705, 760, 771], "phi": [702, 713], "philosophi": [593, 705, 750], "physic": 599, "pick": [711, 734], "piec": 654, "pipelin": [582, 681, 716], "placement": [713, 732, 735], "placesafepoint": 755, "plan": [718, 736, 739, 741, 773], "platform": [597, 633, 645, 653, 664, 737, 747, 766, 774], "plugin": [668, 686, 701, 773], "point": [581, 582, 583, 611, 655, 663, 668, 676, 702, 753], "pointe": 718, "pointer": [582, 585, 602, 669, 680, 702, 718, 734, 751, 755, 770], "pointstoconstantmemori": 585, "poison": 702, "polici": [601, 659, 748, 757], "polybench": 738, "polymag": 738, "polymorph": 734, "pool": [687, 708], "port": 682, "portabl": [602, 664, 756, 802], "posit": 651, "possibl": [602, 651, 714], "post": [702, 732, 736], "postdom": 732, "postdomfronti": 732, "postdomin": 732, "postdomtre": 732, "potenti": 733, "pow": 702, "powerpc": [599, 653, 743], "powi": 702, "practic": [601, 666], "pragma": 770, "pre": [671, 733, 744], "prealloc": 702, "preassign": 599, "precis": [702, 713, 732], "preconfigur": 691, "predecessor": 734, "predefin": 582, "predic": [602, 678, 680, 702, 708, 740, 751], "preemption": 702, "prefer": [602, 666], "prefetch": 702, "prefix": [603, 702], "preincrement": 602, "preliminari": 771, "prepar": [655, 707], "preprocess": 761, "prerequisit": [652, 690, 692, 771], "present": [713, 714, 724], "preserv": [697, 702, 751], "pretti": 636, "previous": 602, "primer": 598, "primit": 589, "print": [585, 616, 642, 644, 732, 759, 760, 773], "printdetailedrecord": 760, "printer": [732, 771], "printrecord": 760, "prior": 601, "privat": [582, 602], "privileg": 748, "probabl": [590, 591, 702], "probe": [372, 485, 663], "problem": [588, 671, 673, 704, 751, 773, 799, 801], "process": [599, 670, 680, 694, 714, 717, 738, 741, 744, 748], "processor": [582, 653, 738, 751], "product": 592, "prof": 702, "profdata": 637, "profgen": 638, "profil": [637, 638, 663, 691, 702, 704, 732, 764], "program": [577, 599, 611, 658, 735], "programm": [734, 761], "programmat": 734, "progress": 685, "project": [597, 598, 659, 671, 686, 735, 736, 743], "prolog": [582, 599], "prologu": 702, "promis": 655, "promot": [732, 771], "propag": [732, 734, 751], "proper": 602, "properti": [582, 666, 750, 802], "propos": [594, 670, 736, 750], "protect": 751, "proto": 667, "prototyp": 732, "provid": 602, "provision": 739, "prune": 732, "pseudo": [603, 656], "pseudolow": 759, "ptr": [702, 715], "ptrmask": 702, "ptrtoint": [669, 702], "ptx": 715, "ptxas": 715, "public": [652, 694, 720, 728, 734], "push": 671, "put": 800, "pwm": 738, "py": [744, 745], "qemu": 692, "qualif": 694, "qualifi": 602, "qualiti": [659, 755], "queri": 732, "question": [600, 664, 736], "queue": 582, "quick": [597, 651, 668, 766, 772, 773], "quickstart": [686, 709, 752, 764], "quirki": 594, "r128": 580, "raja": 738, "random": [643, 667, 714, 747], "rang": [602, 656, 702, 734], "ranlib": 639, "rare": 597, "rational": [669, 702], "raw": 755, "raw_ostream": 602, "rawspe": 738, "read": [668, 705, 715, 736, 739, 771], "read_regist": 702, "read_volatile_regist": 702, "readabl": 602, "readcyclecount": 702, "readelf": [640, 641], "reader": [640, 641], "readobj": 641, "reassoci": 732, "reciproc": 601, "reclaim": 747, "record": [582, 589, 636, 656, 720, 721, 729, 755, 759, 760, 761, 774, 776], "recordkeep": 760, "recordrecti": 760, "recordv": 760, "recover": 734, "recti": 760, "redesign": 594, "redistribut": 664, "reduc": [595, 702, 732, 739, 740], "reduct": [594, 604, 676, 702, 732, 770], "redund": 732, "reexport": 717, "ref": [702, 732], "refer": [577, 651, 658, 668, 675, 685, 702, 708, 732, 734, 736, 738, 739, 740, 741, 742, 755, 759, 761], "referenc": 708, "reflect": 715, "reg": 702, "reg2mem": 732, "regbankselect": 683, "regex": 603, "region": [656, 732, 755, 773], "regionpass": 773, "regist": [577, 582, 599, 664, 666, 675, 708, 715, 732, 750, 751, 771, 773], "registeranalysisgroup": 773, "registerbankinfo": 683, "registerinfo": 759, "registr": [771, 773], "registri": 773, "regress": [694, 697, 701, 766], "regular": 670, "reinstat": 757, "reject": 664, "rel": 732, "relat": [577, 597, 702, 732, 741, 751, 771], "relationship": [717, 734], "releas": [586, 694, 702, 743, 744], "releasememori": 773, "relev": [595, 653], "reliabl": 599, "relicens": 659, "reloc": [582, 663, 702, 755], "relocat": 581, "remap": [619, 707], "remark": 745, "remark_block": 745, "remot": 701, "remov": [732, 757], "removeus": 714, "replac": [607, 612, 685, 732, 734], "replacedirectcal": 714, "replacewithnewvalu": 585, "report": [592, 617, 654, 694, 696, 732, 744, 746, 748], "repositori": 736, "repres": [599, 768], "represent": [577, 585, 655, 656, 664, 702, 755], "request": [601, 694, 733], "requir": [585, 599, 601, 651, 655, 659, 668, 669, 671, 673, 733, 735, 757, 766, 772, 773], "resampl": 738, "resolut": 705, "resolv": 592, "resourc": [582, 653, 674, 684], "respons": [585, 651, 732, 748], "rest": 794, "restrict": [661, 666], "result": [585, 608, 702, 733, 764], "resum": [655, 702, 704], "ret": 702, "retain": 702, "retainautoreleas": 702, "retainautoreleasedreturnvalu": 702, "retainautoreleasereturnvalu": 702, "retainblock": 702, "retcon": 655, "retir": 631, "return": [602, 655, 734, 751], "returnaddress": 702, "revers": [659, 702, 770], "revert": 671, "review": [601, 659, 733], "revis": 736, "rewrit": 751, "rewritestatepointsforgc": 755, "rfc": 601, "rgpassmanag": 773, "rich": 710, "right": 734, "rint": 702, "rip": 751, "risc": 653, "roadmap": [701, 717, 740, 741], "rodinia": 738, "role": 577, "root": [594, 668, 674], "rotat": [706, 732], "round": [582, 702], "roundeven": 702, "routin": 734, "row": 577, "row_mask": 580, "rpath": 625, "rt": 692, "rtti": [602, 695], "rule": [577, 669, 678, 680, 694, 695, 697, 702], "run": [608, 667, 674, 693, 704, 715, 764, 765, 772, 773], "runonfunct": 773, "runonloop": 773, "runonmachinefunct": 773, "runonmodul": [714, 773], "runonregion": 773, "runonscc": 773, "runtim": [661, 701, 702, 770, 774], "runtimedyld": 701, "s_block32": 720, "s_bprel32": 720, "s_buildinfo": 720, "s_calle": 720, "s_caller": 720, "s_callsiteinfo": 720, "s_coffgroup": 720, "s_compile2": 720, "s_compile3": 720, "s_constant": 720, "s_defrang": 720, "s_defrange_framepointer_rel": 720, "s_defrange_framepointer_rel_full_scop": 720, "s_defrange_regist": 720, "s_defrange_register_rel": 720, "s_defrange_subfield": 720, "s_defrange_subfield_regist": 720, "s_end": 720, "s_envblock": 720, "s_export": 720, "s_fastlink": 720, "s_filestat": 720, "s_framecooki": 720, "s_frameproc": 720, "s_gdata32": 720, "s_gmandata": 720, "s_gproc32": 720, "s_gproc32_id": 720, "s_gthread32": 720, "s_heapallocsit": 720, "s_inline": 720, "s_inlinesit": 720, "s_inlinesite_end": 720, "s_label32": 720, "s_ldata32": 720, "s_lmandata": 720, "s_local": 720, "s_lproc32": 720, "s_lproc32_dpc": 720, "s_lproc32_dpc_id": 720, "s_lproc32_id": 720, "s_lprocref": 720, "s_lthread32": 720, "s_manconst": 720, "s_objnam": 720, "s_proc_id_end": 720, "s_procref": 720, "s_pub32": 720, "s_regist": 720, "s_regrel32": 720, "s_section": 720, "s_thunk32": 720, "s_trampolin": 720, "s_udt": 720, "s_unamespac": 720, "sadd": 702, "saddr": [65, 66, 346, 373, 374, 486, 487], "safe": [668, 734], "safepoint": 755, "safeti": [732, 754, 802], "same": 603, "sampl": [656, 699, 761], "sampler": 582, "sanit": 743, "sat": 702, "satur": 702, "save": 655, "sbase": [22, 23, 24, 123, 124, 208, 209, 375, 376, 377, 488, 489, 490], "scalabl": 702, "scalar": [676, 680, 732, 777], "scalarenumerationtrait": 777, "scalarevolut": 732, "scale": 590, "scatter": [702, 770], "scc": 581, "sccp": 732, "sccs": 732, "scev": [585, 732], "schedul": [599, 750, 771], "scope": [577, 582, 598, 702, 750], "scratch": 582, "script": [598, 613, 691, 744], "scrub": 736, "scudo": 747, "sdata": [34, 35, 36, 68, 69, 70, 256, 257, 258, 378, 379, 380, 381, 382, 383, 491, 492, 493, 494, 495, 496], "sdiv": 702, "sdnode": 678, "sdst": [71, 72, 73, 74, 75, 76, 77, 78, 116, 155, 156, 157, 158, 159, 160, 161, 162, 259, 260, 261, 262, 263, 264, 265, 266, 384, 385, 386, 387, 388, 389, 390, 391, 497, 498, 499, 500, 501, 502, 503, 504], "sdwa": [0, 580], "search": [714, 738, 759], "searchablet": 759, "section": [577, 582, 663, 665, 709, 722, 752, 753, 776], "secur": [654, 701, 748, 751], "see": [602, 604, 606, 608, 609, 611, 612, 614, 615, 618, 621, 622, 624, 625, 627, 630, 632, 633, 634, 635, 639, 640, 641, 645, 646], "segment": [577, 582, 599, 749], "seh": [661, 702], "select": [593, 599, 608, 651, 685, 691, 702, 750, 761], "selectiondag": [583, 599, 662, 678, 771], "selector": [583, 771], "self": [602, 664], "semant": [655, 666, 702, 715, 753, 755, 756], "send": 671, "sentinel": 734, "sequenc": [582, 761, 777], "sequenti": 734, "sequentiallyconsist": 586, "seri": 590, "serial": [724, 745], "server": 722, "set": [582, 585, 592, 651, 680, 695, 702, 717, 732, 734, 761, 771, 772, 773], "setjmp": 661, "setup": [695, 702, 795, 801], "setvector": 734, "setversionprint": 651, "sext": [580, 666, 702], "sgpr": 582, "sgpr_count": 582, "sh": 744, "shader": 582, "shadow": 668, "share": 731, "shl": 702, "should": [601, 660, 664, 714], "show": [617, 637, 664], "sht_llvm_addrsig": 663, "sht_llvm_bb_addr_map": 663, "sht_llvm_call_graph_profil": 663, "sht_llvm_dependent_librari": 663, "sht_llvm_sympart": 663, "shufflevector": 702, "sibl": 599, "sideeffect": 702, "sign": [589, 733], "signal": 582, "signific": 663, "simd": 738, "simm21": 581, "simm32": [392, 393, 394, 505, 506, 507], "simpl": [602, 702, 715, 732, 734, 761], "simplif": 755, "simplifi": [602, 706, 708, 732, 734], "simplifycfg": [664, 732], "sin": 702, "singl": [582, 602, 702, 732, 736, 751], "sink": 732, "site": [702, 734], "sitofp": 702, "size": [579, 581, 595, 599, 642, 655, 660, 734, 749, 774], "sizeof": 802, "sjlj": 661, "skeleton": 760, "skip": 719, "sky": 653, "slambench": 738, "slc": 580, "slight": 734, "slot": 732, "slp": 770, "smallbitvector": 734, "smaller": 704, "smallptrset": 734, "smallset": 734, "smallstr": 734, "smallvector": 734, "smax": 702, "smem": [0, 3, 4, 9, 580, 582], "smin": 702, "smrd": [2, 580, 582], "smul": 702, "snippet": 623, "so": 704, "social": [670, 711], "soffset": [56, 57, 58, 147, 148, 246, 247, 248, 342, 395, 396, 397, 508, 509, 510], "soft": [692, 756], "softwar": [671, 673], "solut": [704, 714], "someon": 733, "sop1": [0, 2, 3, 4, 9, 582], "sop2": [0, 2, 3, 4, 9, 582], "sopc": [0, 2, 3, 4, 9, 582], "sopk": [0, 2, 3, 4, 9], "sopp": [0, 2, 3, 4, 9, 582], "sort": [602, 636, 734], "sourc": [577, 582, 597, 602, 646, 656, 664, 671, 702, 708, 735, 743, 750, 761, 801], "space": [577, 582, 599, 602, 669, 715], "span": 738, "sparc": 653, "spars": 732, "sparsebitvector": 734, "sparsemultiset": 734, "sparseset": 734, "spec": 738, "special": [577, 595, 702, 715, 750, 774], "specialis": 702, "specif": [597, 599, 609, 613, 631, 632, 633, 641, 645, 646, 663, 666, 676, 750, 756, 766, 767, 802], "specifi": [585, 651, 666, 668, 702, 773], "spectr": 751, "specul": 751, "speed": 601, "spgo": 638, "sphinx": 752, "spill": 582, "splice": 702, "split": 601, "sponentri": 702, "sqrt": 702, "src": [10, 11, 12, 13, 80, 81, 82, 83, 84, 85, 86, 87, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 307, 308, 312, 313, 319, 320, 321, 322, 323, 347, 348, 349, 350, 351, 352, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "src0_sel": 580, "src1_sel": 580, "sreg": 715, "srem": 702, "sroa": 732, "srsrc": [63, 64, 152, 153, 253, 254, 345, 410, 411, 522, 523], "ssa": [599, 664, 702, 706, 732], "ssamp": [67, 154, 255, 412, 524], "ssca": 738, "sshl": 702, "ssrc": [89, 90, 91, 92, 93, 94, 95, 96, 117, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 279, 280, 281, 282, 283, 284, 285, 286, 287, 413, 414, 415, 416, 417, 418, 419, 420, 421, 525, 526, 527, 528, 529, 530, 531, 532, 533], "ssub": 702, "stabl": 660, "stack": [577, 582, 599, 663, 668, 702, 712, 732, 749, 751, 753, 754, 755, 775, 802], "stackguard": 702, "stacklet": 749, "stackmap": [753, 755], "stackprotector": 702, "stackrestor": 702, "stacksav": 702, "stage": [582, 584, 631, 692], "standard": [577, 589, 602, 652, 655, 671, 702, 734, 737, 738, 739, 750, 756], "start": [597, 599, 651, 668, 671, 672, 673, 702, 704, 711, 719, 766, 772, 773, 779], "startup": 704, "stash": 736, "stat": [734, 745], "state": [577, 582, 714, 751], "stateless": 732, "statement": [591, 602, 751, 761], "statepoint": [668, 702], "static": [602, 609, 732], "statist": [622, 630, 631, 734, 773], "status": [603, 604, 606, 608, 609, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 627, 628, 630, 631, 632, 633, 635, 637, 640, 641, 642, 643, 644, 645, 646, 649, 650, 701, 716, 733, 736, 737, 755], "stay": 659, "std": [602, 652, 734], "stderr": 732, "steen": 585, "step": [582, 688, 702, 718, 736, 757, 771, 775], "stepvector": 702, "still": [666, 718], "storag": [651, 702, 734], "store": [599, 631, 664, 666, 702, 732, 751], "storestrong": 702, "storeweak": 702, "strategi": [668, 702, 751], "straw": 736, "stream": [636, 720, 722, 723, 725, 726, 727, 728, 729, 730, 760], "streamer": 745, "strength": 732, "stress": 643, "string": [603, 644, 656, 702, 717, 734, 745], "stringerror": 734, "stringinit": 760, "stringmap": 734, "stringref": 734, "stringset": 734, "strip": [645, 702, 732], "strtab_block": 589, "struct": [602, 669, 702], "structur": [577, 620, 655, 659, 667, 702, 708, 713, 714, 734, 760, 764, 766, 767, 770], "studio": 673, "stuff": 664, "style": [585, 602, 640, 663, 695, 702, 735], "sub": [656, 702, 736], "subclass": [734, 771], "subcommand": 636, "subdirectori": 735, "submit": [654, 659, 696], "subregist": 708, "subroutin": 761, "subsect": [709, 752], "substitut": [603, 608, 766], "substream": [722, 725], "subsubsect": 709, "subtarget": [759, 771], "successor": [708, 734], "suffic": 579, "suffix": 761, "suggest": 711, "suit": [608, 671, 738, 744, 764, 765, 766], "summari": [588, 615, 636, 669, 702], "superblock": 726, "superclass": 760, "suppli": 704, "support": [582, 591, 599, 633, 652, 661, 664, 687, 702, 704, 717, 737, 740, 753, 755, 756, 757, 771, 796], "suspend": 655, "svn": 736, "swift": 702, "switch": [591, 602, 655, 702], "switchinst": [591, 732], "swizzl": 580, "symbol": [581, 582, 606, 618, 632, 636, 646, 663, 705, 708, 717, 720, 723, 725, 728, 732], "sync": [582, 670], "synopsi": [603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650], "syntax": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 579, 580, 581, 603, 655, 663, 702, 715, 753, 794, 805], "synthes": 702, "system": [582, 659, 671, 673, 702, 756, 758], "systemz": 653, "tabl": [582, 599, 632, 661, 663, 708, 724, 732, 745, 750, 759, 768, 778, 804], "tablegen": [599, 743, 759, 760, 761, 762, 763], "tag": [577, 656, 694, 712, 750, 777], "tail": [599, 732], "tailcallelim": 732, "talk": 711, "target": [582, 599, 611, 647, 659, 661, 663, 669, 677, 682, 692, 702, 704, 708, 715, 732, 743, 771, 800, 802], "targetdata": 732, "targetframelow": 599, "targetinstrinfo": [599, 771], "targetjitinfo": 599, "targetlow": 599, "targetmachin": 599, "targetregisterinfo": [599, 771], "targetsubtarget": 599, "task": [694, 734], "tba": 581, "tbaa": 702, "tblgen": [605, 610, 647, 648, 650], "teardown": 702, "tech": 711, "techniqu": 751, "tell": 669, "templat": [702, 709, 734, 752], "tempt": 751, "termin": 702, "terminolog": [590, 671, 706], "test": [583, 594, 597, 604, 608, 659, 671, 681, 692, 694, 697, 701, 702, 704, 708, 733, 738, 742, 744, 754, 761, 764, 765, 766, 768, 772], "tester": 608, "text": [651, 752, 760], "tfe": 580, "tgt": [97, 186, 288, 534], "than": 669, "that": [652, 664, 669, 751, 761], "the": [577, 583, 585, 597, 599, 602, 603, 651, 656, 659, 661, 664, 665, 666, 668, 669, 671, 673, 686, 691, 692, 694, 695, 697, 700, 701, 702, 703, 704, 711, 713, 715, 716, 717, 718, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 736, 738, 739, 741, 743, 744, 745, 746, 748, 751, 755, 760, 761, 764, 765, 770, 771, 772, 773, 775, 780, 793, 794, 797, 798, 799, 800, 802], "then": 797, "there": 664, "thing": [664, 666], "thinlto": 702, "this": [664, 666, 669, 704, 709, 714, 736, 743, 752, 799, 801], "thought": 795, "thread": [582, 702, 732, 734], "threadsafecontext": 717, "threadsafemodul": 717, "threshold": 775, "through": 602, "throw": [661, 756], "thumb": 695, "tidbit": 802, "tier": 757, "time": [601, 602, 686, 705, 713, 751, 760, 801], "timelin": [631, 694], "tinyptrvector": 734, "tip": [587, 666, 701, 802], "tire": 798, "tls": 751, "tma": 581, "to": [577, 582, 583, 585, 590, 593, 599, 601, 602, 605, 610, 631, 641, 647, 648, 650, 651, 654, 659, 660, 664, 666, 667, 668, 669, 671, 682, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 711, 714, 715, 716, 717, 719, 727, 732, 734, 736, 740, 743, 744, 745, 748, 751, 752, 760, 761, 777, 780, 782, 795, 800], "todo": [582, 597, 651, 695, 795], "togeth": 800, "token": [661, 702], "too": 739, "tool": [593, 596, 601, 604, 607, 619, 625, 626, 627, 629, 633, 635, 637, 638, 645, 664, 667, 671, 673, 701, 734, 743, 760, 774, 775], "toolchain": [659, 671, 690], "top": [651, 717], "topic": [597, 734, 742, 769, 804], "tos": 717, "town": 711, "toy": 704, "tpi": 729, "trace": [704, 774, 775, 776], "track": 764, "trade": 658, "tradeoff": [713, 751], "trampolin": 702, "transform": [585, 655, 697, 732, 750, 767], "transit": [661, 702, 717, 718, 739, 751, 755], "translat": 677, "transpar": 748, "transpos": 702, "trap": [581, 582, 702], "travers": 734, "treat": 602, "tree": [732, 735, 738, 794], "tri": [661, 692, 702], "triag": 592, "trick": 802, "trip": 770, "tripl": [582, 599, 702, 715], "trivial": 796, "trophi": 704, "troubleshoot": 692, "true": 761, "trunc": 702, "truncat": 676, "tscwrap": 776, "ttmp": 581, "tune": 609, "turn": [602, 664, 734], "tutori": [603, 672, 682, 715, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 802, 803, 804], "tvm": 738, "twine": 734, "two": [599, 669], "type": [14, 98, 187, 289, 324, 353, 422, 535, 577, 579, 581, 583, 598, 602, 636, 656, 662, 666, 669, 675, 676, 702, 718, 721, 722, 729, 732, 734, 747, 759, 761, 768, 770, 771, 777], "type_block": 589, "type_code_array": 589, "type_code_bfloat": 589, "type_code_doubl": 589, "type_code_float": 589, "type_code_fp128": 589, "type_code_funct": 589, "type_code_function_old": 589, "type_code_half": 589, "type_code_integ": 589, "type_code_label": 589, "type_code_metadata": 589, "type_code_numentri": 589, "type_code_opaqu": 589, "type_code_point": 589, "type_code_ppc_fp128": 589, "type_code_struct_anon": 589, "type_code_struct_nam": 589, "type_code_vector": 589, "type_code_void": 589, "type_code_x86_amx": 589, "type_code_x86_fp80": 589, "type_code_x86_mmx": 589, "typecheckedloadconstvcal": 702, "typecheckedloadvcal": 702, "typedinit": 760, "typeid": 661, "typeidinfo": 702, "typetest": 702, "typetestassumeconstvcal": 702, "typetestassumevcal": 702, "uadd": 702, "ubsantrap": 702, "udiv": 702, "ufmt": 580, "uglygep": 669, "uimm20": 581, "uimm32": 581, "uimm8": 581, "uitofp": 702, "umax": 702, "umin": 702, "umul": 702, "unabbrev_record": 589, "unari": [581, 702, 798], "undef": 664, "undefin": [577, 702, 715], "under": 669, "underflow": 687, "understand": 664, "unifi": 732, "uniform": 582, "unintent": 601, "union": 702, "uniqu": 777, "uniquevector": 734, "unit": [577, 582, 599, 631, 766, 801], "universal": 629, "unknown": 770, "unnecessari": 602, "unord": [586, 702], "unorm": 580, "unpack": [582, 671], "unpredict": 702, "unreach": [664, 702], "unrol": [702, 732, 767, 770], "unroll_and_jam": 702, "unsetinit": 760, "unspecifi": 582, "unswitch": 732, "unus": [732, 756], "unwindless": 732, "up": [582, 664, 670, 695, 717, 733, 772, 773], "updat": [583, 585, 659, 694, 697, 713, 736], "ups": 670, "urem": 702, "uri": 582, "usabl": 739, "usag": [577, 593, 597, 637, 660, 679, 686, 687, 700, 701, 704, 712, 719, 747, 753, 770], "use": [585, 588, 593, 597, 598, 599, 601, 602, 631, 652, 661, 664, 666, 667, 669, 671, 673, 686, 687, 691, 692, 693, 697, 698, 699, 702, 704, 713, 716, 717, 719, 732, 734, 743, 751, 752, 756, 761, 768, 773, 774, 780, 782, 802], "user": [582, 609, 704, 715, 732, 734, 777, 798, 799], "ushl": 702, "usub": 702, "util": [667, 671, 697, 701, 732, 742, 755, 777], "v2": 582, "v3": 582, "v4": 582, "va_arg": 702, "va_copi": 702, "va_end": 702, "va_start": 702, "vaddr": [17, 18, 19, 20, 100, 101, 118, 119, 120, 121, 203, 204, 205, 206, 327, 354, 423, 424, 425, 426, 427, 428, 536, 537, 538, 539, 540, 541], "valid": [744, 777], "valu": [577, 581, 582, 651, 664, 669, 697, 702, 704, 708, 714, 719, 732, 734, 750, 751, 761, 777], "value_symtab_block": 589, "valuemap": 734, "valuesymbolt": 734, "var": 702, "vari": 708, "variabl": [589, 597, 598, 599, 602, 603, 663, 702, 708, 732, 735, 739, 749, 750, 761, 770, 799, 801], "variad": 676, "variant": [736, 751], "various": 732, "vasrc": [355, 356], "vbrs": 589, "vcall_vis": 768, "vcc": [102, 189, 291, 429, 542, 581], "vccz": 581, "vdata": [27, 28, 29, 30, 31, 32, 33, 103, 104, 105, 106, 127, 128, 129, 130, 131, 132, 190, 191, 192, 193, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 292, 293, 294, 295, 336, 357, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 543, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557], "vdata0": [431, 432, 544, 545], "vdata1": [433, 434, 546, 547], "vdst": [15, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 107, 108, 109, 110, 133, 134, 135, 136, 137, 138, 139, 140, 141, 194, 195, 196, 197, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 296, 297, 298, 299, 309, 314, 325, 337, 358, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571], "vecmathlib": 738, "vector": [669, 676, 680, 702, 724, 732, 734, 740, 741, 767, 770], "vendor": 582, "verif": [596, 755], "verifi": [603, 622, 664, 732], "versa": 734, "version": [577, 602, 657, 694, 704, 767], "vgpr": 582, "vgpr_count": 582, "via": [701, 733, 764], "vice": 734, "view": [598, 631, 732, 734], "viewer": [745, 775], "vintrp": [0, 2, 3, 4, 580], "virtual": [599, 602, 664, 675, 756, 768], "visibl": 702, "visual": [597, 673, 775], "vla": 669, "vliw": 599, "vm": 580, "void": [702, 714], "volatil": 702, "vop1": [0, 2, 3, 4, 9], "vop2": [0, 1, 2, 3, 4, 7, 8, 9], "vop3": [0, 2, 3, 4, 7, 8, 9, 580], "vop3p": [0, 1, 4, 5, 6, 7, 8, 9, 580], "vopc": [0, 2, 3, 4, 9], "vp": [702, 740], "vplan": 741, "vs": [598, 651, 652, 687, 729], "vscale": 702, "vsrc": [16, 88, 111, 112, 113, 114, 174, 198, 199, 200, 201, 278, 300, 301, 302, 303, 326, 359, 465, 466, 467, 468, 469, 470, 572, 573, 574, 575], "waitcnt": [115, 202, 304, 471, 576], "walker": 713, "wallclocktim": 776, "warn": [602, 662, 732, 757], "way": [654, 669], "we": [592, 714], "web": 733, "webassembl": 743, "websit": 694, "weight": [590, 591, 637], "well": 702, "what": [593, 601, 664, 666, 668, 669, 704, 714, 736, 746, 748, 757, 772, 773], "when": [593, 601, 602, 664, 666, 697, 704], "where": [664, 711], "wherev": 602, "whether": 651, "whi": [660, 664, 669, 704, 736, 737, 799, 801], "which": [585, 660, 669, 720], "while": [734, 751], "whitespac": 602, "who": 601, "wide": 670, "widen": 702, "width": [589, 602, 666, 702], "window": [646, 653, 661, 663, 690, 704], "wise": 702, "with": [591, 592, 602, 651, 652, 659, 664, 668, 669, 671, 673, 686, 691, 701, 702, 714, 715, 718, 732, 733, 734, 736, 745, 750, 751, 764, 770, 772, 773, 775, 779, 803, 804], "without": 664, "won": 709, "word": 589, "work": [582, 592, 631, 654, 659, 669, 685, 704, 714, 717, 750, 751, 754, 774], "workflow": [601, 736, 741], "world": [772, 773], "wrapper": [589, 598], "write": [585, 599, 602, 631, 651, 664, 667, 668, 669, 735, 736, 765, 766, 771, 772, 773], "write_regist": 702, "writer": 653, "written": 664, "x86": [599, 653, 663, 743, 751], "x86_64": 693, "x86_amx": 702, "x86_mmx": 702, "x86evex2vex": 759, "xcoff": 634, "xcore": 653, "xnack_mask": 581, "xor": 702, "xray": [742, 774, 775, 776], "yaml": [745, 777], "yaml2obj": 805, "yaml2pdb": 636, "you": [709, 746], "your": [597, 688, 695, 711, 734, 773, 774], "yourself": 713, "zen": 751, "zero": 661, "zext": [666, 702], "zip": 736}})