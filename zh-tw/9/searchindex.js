Search.setIndex({"alltitles": {"#0 - BLOCKINFO Block": [[393, "blockinfo-block"]], "#include <iostream> is Forbidden": [[404, "include-iostream-is-forbidden"]], "#include Style": [[404, "include-style"]], "#include as Little as Possible": [[404, "include-as-little-as-possible"]], "'absolute_symbol' Metadata": [[479, "absolute-symbol-metadata"]], "'add' Instruction": [[479, "add-instruction"]], "'addrspacecast .. to' Instruction": [[479, "addrspacecast-to-instruction"]], "'alloca' Instruction": [[479, "alloca-instruction"]], "'and' Instruction": [[479, "and-instruction"]], "'ashr' Instruction": [[479, "ashr-instruction"]], "'associated' Metadata": [[479, "associated-metadata"]], "'atomicrmw' Instruction": [[479, "atomicrmw-instruction"]], "'bitcast .. to' Instruction": [[479, "bitcast-to-instruction"]], "'br' Instruction": [[479, "br-instruction"]], "'call' Instruction": [[479, "call-instruction"]], "'callback' Metadata": [[479, "callback-metadata"]], "'callbr' Instruction": [[479, "callbr-instruction"]], "'callees' Metadata": [[479, "callees-metadata"]], "'catchpad' Instruction": [[479, "catchpad-instruction"]], "'catchret' Instruction": [[479, "catchret-instruction"]], "'catchswitch' Instruction": [[479, "catchswitch-instruction"]], "'cleanuppad' Instruction": [[479, "cleanuppad-instruction"]], "'cleanupret' Instruction": [[479, "cleanupret-instruction"]], "'cmpxchg' Instruction": [[479, "cmpxchg-instruction"]], "'extractelement' Instruction": [[479, "extractelement-instruction"]], "'extractvalue' Instruction": [[479, "extractvalue-instruction"]], "'fadd' Instruction": [[479, "fadd-instruction"]], "'fcmp' Instruction": [[479, "fcmp-instruction"]], "'fdiv' Instruction": [[479, "fdiv-instruction"]], "'fence' Instruction": [[479, "fence-instruction"]], "'fmul' Instruction": [[479, "fmul-instruction"]], "'fneg' Instruction": [[479, "fneg-instruction"]], "'for' Loop Expression": [[555, "for-loop-expression"], [565, "for-loop-expression"], [576, "for-loop-expression"]], "'fpext .. to' Instruction": [[479, "fpext-to-instruction"]], "'fpmath' Metadata": [[479, "fpmath-metadata"]], "'fptosi .. to' Instruction": [[479, "fptosi-to-instruction"]], "'fptoui .. to' Instruction": [[479, "fptoui-to-instruction"]], "'fptrunc .. to' Instruction": [[479, "fptrunc-to-instruction"]], "'frem' Instruction": [[479, "frem-instruction"]], "'fsub' Instruction": [[479, "fsub-instruction"]], "'getelementptr' Instruction": [[479, "getelementptr-instruction"]], "'icmp' Instruction": [[479, "icmp-instruction"]], "'indirectbr' Instruction": [[479, "indirectbr-instruction"]], "'insertelement' Instruction": [[479, "insertelement-instruction"]], "'insertvalue' Instruction": [[479, "insertvalue-instruction"]], "'inttoptr .. to' Instruction": [[479, "inttoptr-to-instruction"]], "'invariant.group' Metadata": [[479, "invariant-group-metadata"]], "'invoke' Instruction": [[479, "invoke-instruction"]], "'irr_loop' Metadata": [[479, "irr-loop-metadata"]], "'landingpad' Instruction": [[479, "landingpad-instruction"]], "'let' expressions": [[529, "let-expressions-within-a-record"], [529, "id4"]], "'llvm.access.group' Metadata": [[479, "llvm-access-group-metadata"]], "'llvm.addressofreturnaddress' Intrinsic": [[479, "llvm-addressofreturnaddress-intrinsic"]], "'llvm.adjust.trampoline' Intrinsic": [[479, "llvm-adjust-trampoline-intrinsic"]], "'llvm.annotation.*' Intrinsic": [[479, "llvm-annotation-intrinsic"]], "'llvm.assume' Intrinsic": [[479, "llvm-assume-intrinsic"]], "'llvm.bitreverse.*' Intrinsics": [[479, "llvm-bitreverse-intrinsics"]], "'llvm.bswap.*' Intrinsics": [[479, "llvm-bswap-intrinsics"]], "'llvm.canonicalize.*' Intrinsic": [[479, "llvm-canonicalize-intrinsic"]], "'llvm.ceil.*' Intrinsic": [[479, "llvm-ceil-intrinsic"]], "'llvm.clear_cache' Intrinsic": [[479, "llvm-clear-cache-intrinsic"]], "'llvm.codeview.annotation' Intrinsic": [[479, "llvm-codeview-annotation-intrinsic"]], "'llvm.convert.from.fp16' Intrinsic": [[479, "llvm-convert-from-fp16-intrinsic"]], "'llvm.convert.to.fp16' Intrinsic": [[479, "llvm-convert-to-fp16-intrinsic"]], "'llvm.copysign.*' Intrinsic": [[479, "llvm-copysign-intrinsic"]], "'llvm.coro.alloc' Intrinsic": [[449, "llvm-coro-alloc-intrinsic"]], "'llvm.coro.begin' Intrinsic": [[449, "llvm-coro-begin-intrinsic"]], "'llvm.coro.destroy' Intrinsic": [[449, "llvm-coro-destroy-intrinsic"]], "'llvm.coro.done' Intrinsic": [[449, "llvm-coro-done-intrinsic"]], "'llvm.coro.end' Intrinsic": [[449, "llvm-coro-end-intrinsic"]], "'llvm.coro.frame' Intrinsic": [[449, "llvm-coro-frame-intrinsic"]], "'llvm.coro.free' Intrinsic": [[449, "llvm-coro-free-intrinsic"]], "'llvm.coro.id' Intrinsic": [[449, "llvm-coro-id-intrinsic"]], "'llvm.coro.noop' Intrinsic": [[449, "llvm-coro-noop-intrinsic"]], "'llvm.coro.param' Intrinsic": [[449, "llvm-coro-param-intrinsic"]], "'llvm.coro.promise' Intrinsic": [[449, "llvm-coro-promise-intrinsic"]], "'llvm.coro.resume' Intrinsic": [[449, "llvm-coro-resume-intrinsic"]], "'llvm.coro.save' Intrinsic": [[449, "llvm-coro-save-intrinsic"]], "'llvm.coro.size' Intrinsic": [[449, "llvm-coro-size-intrinsic"]], "'llvm.coro.suspend' Intrinsic": [[449, "llvm-coro-suspend-intrinsic"]], "'llvm.cos.*' Intrinsic": [[479, "llvm-cos-intrinsic"]], "'llvm.ctlz.*' Intrinsic": [[479, "llvm-ctlz-intrinsic"]], "'llvm.ctpop.*' Intrinsic": [[479, "llvm-ctpop-intrinsic"]], "'llvm.cttz.*' Intrinsic": [[479, "llvm-cttz-intrinsic"]], "'llvm.debugtrap' Intrinsic": [[479, "llvm-debugtrap-intrinsic"]], "'llvm.donothing' Intrinsic": [[479, "llvm-donothing-intrinsic"]], "'llvm.exp.*' Intrinsic": [[479, "llvm-exp-intrinsic"]], "'llvm.exp2.*' Intrinsic": [[479, "llvm-exp2-intrinsic"]], "'llvm.expect' Intrinsic": [[479, "llvm-expect-intrinsic"]], "'llvm.experimental.constrained.ceil' Intrinsic": [[479, "llvm-experimental-constrained-ceil-intrinsic"]], "'llvm.experimental.constrained.cos' Intrinsic": [[479, "llvm-experimental-constrained-cos-intrinsic"]], "'llvm.experimental.constrained.exp' Intrinsic": [[479, "llvm-experimental-constrained-exp-intrinsic"]], "'llvm.experimental.constrained.exp2' Intrinsic": [[479, "llvm-experimental-constrained-exp2-intrinsic"]], "'llvm.experimental.constrained.fadd' Intrinsic": [[479, "llvm-experimental-constrained-fadd-intrinsic"]], "'llvm.experimental.constrained.fdiv' Intrinsic": [[479, "llvm-experimental-constrained-fdiv-intrinsic"]], "'llvm.experimental.constrained.floor' Intrinsic": [[479, "llvm-experimental-constrained-floor-intrinsic"]], "'llvm.experimental.constrained.fma' Intrinsic": [[479, "llvm-experimental-constrained-fma-intrinsic"]], "'llvm.experimental.constrained.fmul' Intrinsic": [[479, "llvm-experimental-constrained-fmul-intrinsic"]], "'llvm.experimental.constrained.fpext' Intrinsic": [[479, "llvm-experimental-constrained-fpext-intrinsic"]], "'llvm.experimental.constrained.fptrunc' Intrinsic": [[479, "llvm-experimental-constrained-fptrunc-intrinsic"]], "'llvm.experimental.constrained.frem' Intrinsic": [[479, "llvm-experimental-constrained-frem-intrinsic"]], "'llvm.experimental.constrained.fsub' Intrinsic": [[479, "llvm-experimental-constrained-fsub-intrinsic"]], "'llvm.experimental.constrained.log' Intrinsic": [[479, "llvm-experimental-constrained-log-intrinsic"]], "'llvm.experimental.constrained.log10' Intrinsic": [[479, "llvm-experimental-constrained-log10-intrinsic"]], "'llvm.experimental.constrained.log2' Intrinsic": [[479, "llvm-experimental-constrained-log2-intrinsic"]], "'llvm.experimental.constrained.maxnum' Intrinsic": [[479, "llvm-experimental-constrained-maxnum-intrinsic"]], "'llvm.experimental.constrained.minnum' Intrinsic": [[479, "llvm-experimental-constrained-minnum-intrinsic"]], "'llvm.experimental.constrained.nearbyint' Intrinsic": [[479, "llvm-experimental-constrained-nearbyint-intrinsic"]], "'llvm.experimental.constrained.pow' Intrinsic": [[479, "llvm-experimental-constrained-pow-intrinsic"]], "'llvm.experimental.constrained.powi' Intrinsic": [[479, "llvm-experimental-constrained-powi-intrinsic"]], "'llvm.experimental.constrained.rint' Intrinsic": [[479, "llvm-experimental-constrained-rint-intrinsic"]], "'llvm.experimental.constrained.round' Intrinsic": [[479, "llvm-experimental-constrained-round-intrinsic"]], "'llvm.experimental.constrained.sin' Intrinsic": [[479, "llvm-experimental-constrained-sin-intrinsic"]], "'llvm.experimental.constrained.sqrt' Intrinsic": [[479, "llvm-experimental-constrained-sqrt-intrinsic"]], "'llvm.experimental.constrained.trunc' Intrinsic": [[479, "llvm-experimental-constrained-trunc-intrinsic"]], "'llvm.experimental.deoptimize' Intrinsic": [[479, "llvm-experimental-deoptimize-intrinsic"]], "'llvm.experimental.gc.relocate' Intrinsic": [[524, "llvm-experimental-gc-relocate-intrinsic"]], "'llvm.experimental.gc.result' Intrinsic": [[524, "llvm-experimental-gc-result-intrinsic"]], "'llvm.experimental.gc.statepoint' Intrinsic": [[524, "llvm-experimental-gc-statepoint-intrinsic"]], "'llvm.experimental.guard' Intrinsic": [[479, "llvm-experimental-guard-intrinsic"]], "'llvm.experimental.patchpoint.*' Intrinsic": [[522, "llvm-experimental-patchpoint-intrinsic"]], "'llvm.experimental.stackmap' Intrinsic": [[522, "llvm-experimental-stackmap-intrinsic"]], "'llvm.experimental.vector.reduce.add.*' Intrinsic": [[479, "llvm-experimental-vector-reduce-add-intrinsic"]], "'llvm.experimental.vector.reduce.and.*' Intrinsic": [[479, "llvm-experimental-vector-reduce-and-intrinsic"]], "'llvm.experimental.vector.reduce.fmax.*' Intrinsic": [[479, "llvm-experimental-vector-reduce-fmax-intrinsic"]], "'llvm.experimental.vector.reduce.fmin.*' Intrinsic": [[479, "llvm-experimental-vector-reduce-fmin-intrinsic"]], "'llvm.experimental.vector.reduce.mul.*' Intrinsic": [[479, "llvm-experimental-vector-reduce-mul-intrinsic"]], "'llvm.experimental.vector.reduce.or.*' Intrinsic": [[479, "llvm-experimental-vector-reduce-or-intrinsic"]], "'llvm.experimental.vector.reduce.smax.*' Intrinsic": [[479, "llvm-experimental-vector-reduce-smax-intrinsic"]], "'llvm.experimental.vector.reduce.smin.*' Intrinsic": [[479, "llvm-experimental-vector-reduce-smin-intrinsic"]], "'llvm.experimental.vector.reduce.umax.*' Intrinsic": [[479, "llvm-experimental-vector-reduce-umax-intrinsic"]], "'llvm.experimental.vector.reduce.umin.*' Intrinsic": [[479, "llvm-experimental-vector-reduce-umin-intrinsic"]], "'llvm.experimental.vector.reduce.v2.fadd.*' Intrinsic": [[479, "llvm-experimental-vector-reduce-v2-fadd-intrinsic"]], "'llvm.experimental.vector.reduce.v2.fmul.*' Intrinsic": [[479, "llvm-experimental-vector-reduce-v2-fmul-intrinsic"]], "'llvm.experimental.vector.reduce.xor.*' Intrinsic": [[479, "llvm-experimental-vector-reduce-xor-intrinsic"]], "'llvm.experimental.widenable.condition' Intrinsic": [[479, "llvm-experimental-widenable-condition-intrinsic"]], "'llvm.fabs.*' Intrinsic": [[479, "llvm-fabs-intrinsic"]], "'llvm.floor.*' Intrinsic": [[479, "llvm-floor-intrinsic"]], "'llvm.fma.*' Intrinsic": [[479, "llvm-fma-intrinsic"]], "'llvm.fmuladd.*' Intrinsic": [[479, "llvm-fmuladd-intrinsic"]], "'llvm.frameaddress' Intrinsic": [[479, "llvm-frameaddress-intrinsic"]], "'llvm.fshl.*' Intrinsic": [[479, "llvm-fshl-intrinsic"]], "'llvm.fshr.*' Intrinsic": [[479, "llvm-fshr-intrinsic"]], "'llvm.gcread' Intrinsic": [[479, "llvm-gcread-intrinsic"]], "'llvm.gcroot' Intrinsic": [[479, "llvm-gcroot-intrinsic"]], "'llvm.gcwrite' Intrinsic": [[479, "llvm-gcwrite-intrinsic"]], "'llvm.get.dynamic.area.offset' Intrinsic": [[479, "llvm-get-dynamic-area-offset-intrinsic"]], "'llvm.init.trampoline' Intrinsic": [[479, "llvm-init-trampoline-intrinsic"]], "'llvm.instrprof.increment' Intrinsic": [[479, "llvm-instrprof-increment-intrinsic"]], "'llvm.instrprof.increment.step' Intrinsic": [[479, "llvm-instrprof-increment-step-intrinsic"]], "'llvm.instrprof.value.profile' Intrinsic": [[479, "llvm-instrprof-value-profile-intrinsic"]], "'llvm.invariant.end' Intrinsic": [[479, "llvm-invariant-end-intrinsic"]], "'llvm.invariant.start' Intrinsic": [[479, "llvm-invariant-start-intrinsic"]], "'llvm.is.constant.*' Intrinsic": [[479, "llvm-is-constant-intrinsic"]], "'llvm.launder.invariant.group' Intrinsic": [[479, "llvm-launder-invariant-group-intrinsic"]], "'llvm.lifetime.end' Intrinsic": [[479, "llvm-lifetime-end-intrinsic"]], "'llvm.lifetime.start' Intrinsic": [[479, "llvm-lifetime-start-intrinsic"]], "'llvm.llrint.*' Intrinsic": [[479, "llvm-llrint-intrinsic"]], "'llvm.llround.*' Intrinsic": [[479, "llvm-llround-intrinsic"]], "'llvm.load.relative' Intrinsic": [[479, "llvm-load-relative-intrinsic"]], "'llvm.localescape' and 'llvm.localrecover' Intrinsics": [[479, "llvm-localescape-and-llvm-localrecover-intrinsics"]], "'llvm.log.*' Intrinsic": [[479, "llvm-log-intrinsic"]], "'llvm.log10.*' Intrinsic": [[479, "llvm-log10-intrinsic"]], "'llvm.log2.*' Intrinsic": [[479, "llvm-log2-intrinsic"]], "'llvm.loop'": [[479, "llvm-loop"]], "'llvm.loop.disable_nonforced'": [[479, "llvm-loop-disable-nonforced"]], "'llvm.loop.distribute.enable' Metadata": [[479, "llvm-loop-distribute-enable-metadata"]], "'llvm.loop.distribute.followup_all' Metadata": [[479, "llvm-loop-distribute-followup-all-metadata"]], "'llvm.loop.distribute.followup_coincident' Metadata": [[479, "llvm-loop-distribute-followup-coincident-metadata"]], "'llvm.loop.distribute.followup_fallback' Metadata": [[479, "llvm-loop-distribute-followup-fallback-metadata"]], "'llvm.loop.distribute.followup_sequential' Metadata": [[479, "llvm-loop-distribute-followup-sequential-metadata"]], "'llvm.loop.interleave.count' Metadata": [[479, "llvm-loop-interleave-count-metadata"]], "'llvm.loop.licm_versioning.disable' Metadata": [[479, "llvm-loop-licm-versioning-disable-metadata"]], "'llvm.loop.parallel_accesses' Metadata": [[479, "llvm-loop-parallel-accesses-metadata"]], "'llvm.loop.unroll'": [[479, "llvm-loop-unroll"]], "'llvm.loop.unroll.count' Metadata": [[479, "llvm-loop-unroll-count-metadata"]], "'llvm.loop.unroll.disable' Metadata": [[479, "llvm-loop-unroll-disable-metadata"]], "'llvm.loop.unroll.enable' Metadata": [[479, "llvm-loop-unroll-enable-metadata"]], "'llvm.loop.unroll.followup' Metadata": [[479, "llvm-loop-unroll-followup-metadata"]], "'llvm.loop.unroll.followup_remainder' Metadata": [[479, "llvm-loop-unroll-followup-remainder-metadata"]], "'llvm.loop.unroll.full' Metadata": [[479, "llvm-loop-unroll-full-metadata"]], "'llvm.loop.unroll.runtime.disable' Metadata": [[479, "llvm-loop-unroll-runtime-disable-metadata"]], "'llvm.loop.unroll_and_jam'": [[479, "llvm-loop-unroll-and-jam"]], "'llvm.loop.unroll_and_jam.count' Metadata": [[479, "llvm-loop-unroll-and-jam-count-metadata"]], "'llvm.loop.unroll_and_jam.disable' Metadata": [[479, "llvm-loop-unroll-and-jam-disable-metadata"]], "'llvm.loop.unroll_and_jam.enable' Metadata": [[479, "llvm-loop-unroll-and-jam-enable-metadata"]], "'llvm.loop.unroll_and_jam.followup_all' Metadata": [[479, "llvm-loop-unroll-and-jam-followup-all-metadata"]], "'llvm.loop.unroll_and_jam.followup_inner' Metadata": [[479, "llvm-loop-unroll-and-jam-followup-inner-metadata"]], "'llvm.loop.unroll_and_jam.followup_outer' Metadata": [[479, "llvm-loop-unroll-and-jam-followup-outer-metadata"]], "'llvm.loop.unroll_and_jam.followup_remainder_inner' Metadata": [[479, "llvm-loop-unroll-and-jam-followup-remainder-inner-metadata"]], "'llvm.loop.unroll_and_jam.followup_remainder_outer' Metadata": [[479, "llvm-loop-unroll-and-jam-followup-remainder-outer-metadata"]], "'llvm.loop.vectorize' and 'llvm.loop.interleave'": [[479, "llvm-loop-vectorize-and-llvm-loop-interleave"]], "'llvm.loop.vectorize.enable' Metadata": [[479, "llvm-loop-vectorize-enable-metadata"]], "'llvm.loop.vectorize.followup_all' Metadata": [[479, "llvm-loop-vectorize-followup-all-metadata"]], "'llvm.loop.vectorize.followup_epilogue' Metadata": [[479, "llvm-loop-vectorize-followup-epilogue-metadata"]], "'llvm.loop.vectorize.followup_vectorized' Metadata": [[479, "llvm-loop-vectorize-followup-vectorized-metadata"]], "'llvm.loop.vectorize.width' Metadata": [[479, "llvm-loop-vectorize-width-metadata"]], "'llvm.lrint.*' Intrinsic": [[479, "llvm-lrint-intrinsic"]], "'llvm.lround.*' Intrinsic": [[479, "llvm-lround-intrinsic"]], "'llvm.masked.compressstore.*' Intrinsics": [[479, "llvm-masked-compressstore-intrinsics"]], "'llvm.masked.expandload.*' Intrinsics": [[479, "llvm-masked-expandload-intrinsics"]], "'llvm.masked.gather.*' Intrinsics": [[479, "llvm-masked-gather-intrinsics"]], "'llvm.masked.load.*' Intrinsics": [[479, "llvm-masked-load-intrinsics"]], "'llvm.masked.scatter.*' Intrinsics": [[479, "llvm-masked-scatter-intrinsics"]], "'llvm.masked.store.*' Intrinsics": [[479, "llvm-masked-store-intrinsics"]], "'llvm.maximum.*' Intrinsic": [[479, "llvm-maximum-intrinsic"]], "'llvm.maxnum.*' Intrinsic": [[479, "llvm-maxnum-intrinsic"]], "'llvm.memcpy' Intrinsic": [[479, "llvm-memcpy-intrinsic"]], "'llvm.memcpy.element.unordered.atomic' Intrinsic": [[479, "llvm-memcpy-element-unordered-atomic-intrinsic"]], "'llvm.memmove' Intrinsic": [[479, "llvm-memmove-intrinsic"]], "'llvm.memmove.element.unordered.atomic' Intrinsic": [[479, "llvm-memmove-element-unordered-atomic-intrinsic"]], "'llvm.memset.*' Intrinsics": [[479, "llvm-memset-intrinsics"]], "'llvm.memset.element.unordered.atomic' Intrinsic": [[479, "llvm-memset-element-unordered-atomic-intrinsic"]], "'llvm.minimum.*' Intrinsic": [[479, "llvm-minimum-intrinsic"]], "'llvm.minnum.*' Intrinsic": [[479, "llvm-minnum-intrinsic"]], "'llvm.nearbyint.*' Intrinsic": [[479, "llvm-nearbyint-intrinsic"]], "'llvm.nvvm.barrier0'": [[490, "llvm-nvvm-barrier0"]], "'llvm.nvvm.ptr.*.to.gen' Intrinsics": [[490, "llvm-nvvm-ptr-to-gen-intrinsics"]], "'llvm.nvvm.ptr.gen.to.*' Intrinsics": [[490, "llvm-nvvm-ptr-gen-to-intrinsics"]], "'llvm.nvvm.read.ptx.sreg.*'": [[490, "llvm-nvvm-read-ptx-sreg"]], "'llvm.objc.autorelease' Intrinsic": [[479, "llvm-objc-autorelease-intrinsic"]], "'llvm.objc.autoreleasePoolPop' Intrinsic": [[479, "llvm-objc-autoreleasepoolpop-intrinsic"]], "'llvm.objc.autoreleasePoolPush' Intrinsic": [[479, "llvm-objc-autoreleasepoolpush-intrinsic"]], "'llvm.objc.autoreleaseReturnValue' Intrinsic": [[479, "llvm-objc-autoreleasereturnvalue-intrinsic"]], "'llvm.objc.copyWeak' Intrinsic": [[479, "llvm-objc-copyweak-intrinsic"]], "'llvm.objc.destroyWeak' Intrinsic": [[479, "llvm-objc-destroyweak-intrinsic"]], "'llvm.objc.initWeak' Intrinsic": [[479, "llvm-objc-initweak-intrinsic"]], "'llvm.objc.loadWeak' Intrinsic": [[479, "llvm-objc-loadweak-intrinsic"]], "'llvm.objc.loadWeakRetained' Intrinsic": [[479, "llvm-objc-loadweakretained-intrinsic"]], "'llvm.objc.moveWeak' Intrinsic": [[479, "llvm-objc-moveweak-intrinsic"]], "'llvm.objc.release' Intrinsic": [[479, "llvm-objc-release-intrinsic"]], "'llvm.objc.retain' Intrinsic": [[479, "llvm-objc-retain-intrinsic"]], "'llvm.objc.retainAutorelease' Intrinsic": [[479, "llvm-objc-retainautorelease-intrinsic"]], "'llvm.objc.retainAutoreleaseReturnValue' Intrinsic": [[479, "llvm-objc-retainautoreleasereturnvalue-intrinsic"]], "'llvm.objc.retainAutoreleasedReturnValue' Intrinsic": [[479, "llvm-objc-retainautoreleasedreturnvalue-intrinsic"]], "'llvm.objc.retainBlock' Intrinsic": [[479, "llvm-objc-retainblock-intrinsic"]], "'llvm.objc.storeStrong' Intrinsic": [[479, "llvm-objc-storestrong-intrinsic"]], "'llvm.objc.storeWeak' Intrinsic": [[479, "llvm-objc-storeweak-intrinsic"]], "'llvm.objectsize' Intrinsic": [[479, "llvm-objectsize-intrinsic"]], "'llvm.pcmarker' Intrinsic": [[479, "llvm-pcmarker-intrinsic"]], "'llvm.pow.*' Intrinsic": [[479, "llvm-pow-intrinsic"]], "'llvm.powi.*' Intrinsic": [[479, "llvm-powi-intrinsic"]], "'llvm.prefetch' Intrinsic": [[479, "llvm-prefetch-intrinsic"]], "'llvm.preserve.array.access.index' Intrinsic": [[479, "llvm-preserve-array-access-index-intrinsic"]], "'llvm.preserve.struct.access.index' Intrinsic": [[479, "llvm-preserve-struct-access-index-intrinsic"]], "'llvm.preserve.union.access.index' Intrinsic": [[479, "llvm-preserve-union-access-index-intrinsic"]], "'llvm.ptr.annotation.*' Intrinsic": [[479, "llvm-ptr-annotation-intrinsic"]], "'llvm.read_register' and 'llvm.write_register' Intrinsics": [[479, "llvm-read-register-and-llvm-write-register-intrinsics"]], "'llvm.readcyclecounter' Intrinsic": [[479, "llvm-readcyclecounter-intrinsic"]], "'llvm.returnaddress' Intrinsic": [[479, "llvm-returnaddress-intrinsic"]], "'llvm.rint.*' Intrinsic": [[479, "llvm-rint-intrinsic"]], "'llvm.round.*' Intrinsic": [[479, "llvm-round-intrinsic"]], "'llvm.sadd.sat.*' Intrinsics": [[479, "llvm-sadd-sat-intrinsics"]], "'llvm.sadd.with.overflow.*' Intrinsics": [[479, "llvm-sadd-with-overflow-intrinsics"]], "'llvm.sideeffect' Intrinsic": [[479, "llvm-sideeffect-intrinsic"]], "'llvm.sin.*' Intrinsic": [[479, "llvm-sin-intrinsic"]], "'llvm.smul.fix.*' Intrinsics": [[479, "llvm-smul-fix-intrinsics"]], "'llvm.smul.fix.sat.*' Intrinsics": [[479, "llvm-smul-fix-sat-intrinsics"]], "'llvm.smul.with.overflow.*' Intrinsics": [[479, "llvm-smul-with-overflow-intrinsics"]], "'llvm.sponentry' Intrinsic": [[479, "llvm-sponentry-intrinsic"]], "'llvm.sqrt.*' Intrinsic": [[479, "llvm-sqrt-intrinsic"]], "'llvm.ssa_copy' Intrinsic": [[479, "llvm-ssa-copy-intrinsic"]], "'llvm.ssub.sat.*' Intrinsics": [[479, "llvm-ssub-sat-intrinsics"]], "'llvm.ssub.with.overflow.*' Intrinsics": [[479, "llvm-ssub-with-overflow-intrinsics"]], "'llvm.stackguard' Intrinsic": [[479, "llvm-stackguard-intrinsic"]], "'llvm.stackprotector' Intrinsic": [[479, "llvm-stackprotector-intrinsic"]], "'llvm.stackrestore' Intrinsic": [[479, "llvm-stackrestore-intrinsic"]], "'llvm.stacksave' Intrinsic": [[479, "llvm-stacksave-intrinsic"]], "'llvm.strip.invariant.group' Intrinsic": [[479, "llvm-strip-invariant-group-intrinsic"]], "'llvm.thread.pointer' Intrinsic": [[479, "llvm-thread-pointer-intrinsic"]], "'llvm.trap' Intrinsic": [[479, "llvm-trap-intrinsic"]], "'llvm.trunc.*' Intrinsic": [[479, "llvm-trunc-intrinsic"]], "'llvm.type.checked.load' Intrinsic": [[479, "llvm-type-checked-load-intrinsic"]], "'llvm.type.test' Intrinsic": [[479, "llvm-type-test-intrinsic"]], "'llvm.uadd.sat.*' Intrinsics": [[479, "llvm-uadd-sat-intrinsics"]], "'llvm.uadd.with.overflow.*' Intrinsics": [[479, "llvm-uadd-with-overflow-intrinsics"]], "'llvm.umul.fix.*' Intrinsics": [[479, "llvm-umul-fix-intrinsics"]], "'llvm.umul.with.overflow.*' Intrinsics": [[479, "llvm-umul-with-overflow-intrinsics"]], "'llvm.usub.sat.*' Intrinsics": [[479, "llvm-usub-sat-intrinsics"]], "'llvm.usub.with.overflow.*' Intrinsics": [[479, "llvm-usub-with-overflow-intrinsics"]], "'llvm.va_copy' Intrinsic": [[479, "llvm-va-copy-intrinsic"]], "'llvm.va_end' Intrinsic": [[479, "llvm-va-end-intrinsic"]], "'llvm.va_start' Intrinsic": [[479, "llvm-va-start-intrinsic"]], "'llvm.var.annotation' Intrinsic": [[479, "llvm-var-annotation-intrinsic"]], "'load' Instruction": [[479, "load-instruction"]], "'lshr' Instruction": [[479, "lshr-instruction"]], "'mul' Instruction": [[479, "mul-instruction"]], "'noalias' and 'alias.scope' Metadata": [[479, "noalias-and-alias-scope-metadata"]], "'or' Instruction": [[479, "or-instruction"]], "'phi' Instruction": [[479, "phi-instruction"]], "'prof' Metadata": [[479, "prof-metadata"]], "'ptrtoint .. to' Instruction": [[479, "ptrtoint-to-instruction"]], "'range' Metadata": [[479, "range-metadata"]], "'resume' Instruction": [[479, "resume-instruction"]], "'ret' Instruction": [[479, "ret-instruction"]], "'sdiv' Instruction": [[479, "sdiv-instruction"]], "'select' Instruction": [[479, "select-instruction"]], "'sext .. to' Instruction": [[479, "sext-to-instruction"]], "'shl' Instruction": [[479, "shl-instruction"]], "'shufflevector' Instruction": [[479, "shufflevector-instruction"]], "'sitofp .. to' Instruction": [[479, "sitofp-to-instruction"]], "'srem' Instruction": [[479, "srem-instruction"]], "'store' Instruction": [[479, "store-instruction"]], "'sub' Instruction": [[479, "sub-instruction"]], "'switch' Instruction": [[479, "switch-instruction"]], "'tbaa' Metadata": [[479, "tbaa-metadata"]], "'tbaa.struct' Metadata": [[479, "tbaa-struct-metadata"]], "'trunc .. to' Instruction": [[479, "trunc-to-instruction"]], "'type' Metadata": [[479, "type-metadata"]], "'udiv' Instruction": [[479, "udiv-instruction"]], "'uitofp .. to' Instruction": [[479, "uitofp-to-instruction"]], "'unpredictable' Metadata": [[479, "unpredictable-metadata"]], "'unreachable' Instruction": [[479, "unreachable-instruction"]], "'urem' Instruction": [[479, "urem-instruction"]], "'va_arg' Instruction": [[479, "va-arg-instruction"]], "'xor' Instruction": [[479, "xor-instruction"]], "'zext .. to' Instruction": [[479, "zext-to-instruction"]], "-aa-eval: Exhaustive Alias Analysis Precision Evaluator": [[505, "aa-eval-exhaustive-alias-analysis-precision-evaluator"]], "-adce: Aggressive Dead Code Elimination": [[505, "adce-aggressive-dead-code-elimination"]], "-aggressive-instcombine: Combine expression patterns": [[505, "aggressive-instcombine-combine-expression-patterns"]], "-always-inline: Inliner for always_inline functions": [[505, "always-inline-inliner-for-always-inline-functions"]], "-argpromotion: Promote 'by reference' arguments to scalars": [[505, "argpromotion-promote-by-reference-arguments-to-scalars"]], "-basicaa: Basic Alias Analysis (stateless AA impl)": [[505, "basicaa-basic-alias-analysis-stateless-aa-impl"]], "-basiccg: Basic CallGraph Construction": [[505, "basiccg-basic-callgraph-construction"]], "-bb-vectorize: Basic-Block Vectorization": [[505, "bb-vectorize-basic-block-vectorization"]], "-block-placement: Profile Guided Basic Block Placement": [[505, "block-placement-profile-guided-basic-block-placement"]], "-break-crit-edges: Break critical edges in CFG": [[505, "break-crit-edges-break-critical-edges-in-cfg"]], "-codegenprepare: Optimize for code generation": [[505, "codegenprepare-optimize-for-code-generation"]], "-constmerge: Merge Duplicate Global Constants": [[505, "constmerge-merge-duplicate-global-constants"]], "-constprop: Simple constant propagation": [[505, "constprop-simple-constant-propagation"]], "-count-aa: Count Alias Analysis Query Responses": [[505, "count-aa-count-alias-analysis-query-responses"]], "-da: Dependence Analysis": [[505, "da-dependence-analysis"]], "-dce: Dead Code Elimination": [[505, "dce-dead-code-elimination"]], "-deadargelim: Dead Argument Elimination": [[505, "deadargelim-dead-argument-elimination"]], "-deadarghaX0r: Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)": [[505, "deadarghax0r-dead-argument-hacking-bugpoint-use-only-do-not-use"]], "-deadtypeelim: Dead Type Elimination": [[505, "deadtypeelim-dead-type-elimination"]], "-debug-aa: AA use debugger": [[505, "debug-aa-aa-use-debugger"]], "-die: Dead Instruction Elimination": [[505, "die-dead-instruction-elimination"]], "-domfrontier: Dominance Frontier Construction": [[505, "domfrontier-dominance-frontier-construction"]], "-domtree: Dominator Tree Construction": [[505, "domtree-dominator-tree-construction"]], "-dot-callgraph: Print Call Graph to \"dot\" file": [[505, "dot-callgraph-print-call-graph-to-dot-file"]], "-dot-cfg-only: Print CFG of function to \"dot\" file (with no function bodies)": [[505, "dot-cfg-only-print-cfg-of-function-to-dot-file-with-no-function-bodies"]], "-dot-cfg: Print CFG of function to \"dot\" file": [[505, "dot-cfg-print-cfg-of-function-to-dot-file"]], "-dot-dom-only: Print dominance tree of function to \"dot\" file (with no function bodies)": [[505, "dot-dom-only-print-dominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-dom: Print dominance tree of function to \"dot\" file": [[505, "dot-dom-print-dominance-tree-of-function-to-dot-file"]], "-dot-postdom-only: Print postdominance tree of function to \"dot\" file (with no function bodies)": [[505, "dot-postdom-only-print-postdominance-tree-of-function-to-dot-file-with-no-function-bodies"]], "-dot-postdom: Print postdominance tree of function to \"dot\" file": [[505, "dot-postdom-print-postdominance-tree-of-function-to-dot-file"]], "-dse: Dead Store Elimination": [[505, "dse-dead-store-elimination"]], "-extract-blocks: Extract Basic Blocks From Module (for bugpoint use)": [[505, "extract-blocks-extract-basic-blocks-from-module-for-bugpoint-use"]], "-functionattrs: Deduce function attributes": [[505, "functionattrs-deduce-function-attributes"]], "-globaldce: Dead Global Elimination": [[505, "globaldce-dead-global-elimination"]], "-globalopt: Global Variable Optimizer": [[505, "globalopt-global-variable-optimizer"]], "-globalsmodref-aa: Simple mod/ref analysis for globals": [[505, "globalsmodref-aa-simple-mod-ref-analysis-for-globals"]], "-gvn: Global Value Numbering": [[505, "gvn-global-value-numbering"]], "-indvars: Canonicalize Induction Variables": [[505, "indvars-canonicalize-induction-variables"]], "-inline: Function Integration/Inlining": [[505, "inline-function-integration-inlining"]], "-instcombine: Combine redundant instructions": [[505, "instcombine-combine-redundant-instructions"]], "-instcount: Counts the various types of Instructions": [[505, "instcount-counts-the-various-types-of-instructions"]], "-instnamer: Assign names to anonymous instructions": [[505, "instnamer-assign-names-to-anonymous-instructions"]], "-internalize: Internalize Global Symbols": [[505, "internalize-internalize-global-symbols"]], "-intervals: Interval Partition Construction": [[505, "intervals-interval-partition-construction"]], "-ipconstprop: Interprocedural constant propagation": [[505, "ipconstprop-interprocedural-constant-propagation"]], "-ipsccp: Interprocedural Sparse Conditional Constant Propagation": [[505, "ipsccp-interprocedural-sparse-conditional-constant-propagation"]], "-iv-users: Induction Variable Users": [[505, "iv-users-induction-variable-users"]], "-jump-threading: Jump Threading": [[505, "jump-threading-jump-threading"]], "-lazy-value-info: Lazy Value Information Analysis": [[505, "lazy-value-info-lazy-value-information-analysis"]], "-lcssa: Loop-Closed SSA Form Pass": [[505, "lcssa-loop-closed-ssa-form-pass"]], "-libcall-aa: LibCall Alias Analysis": [[505, "libcall-aa-libcall-alias-analysis"]], "-licm: Loop Invariant Code Motion": [[505, "licm-loop-invariant-code-motion"]], "-lint: Statically lint-checks LLVM IR": [[505, "lint-statically-lint-checks-llvm-ir"]], "-loop-deletion: Delete dead loops": [[505, "loop-deletion-delete-dead-loops"]], "-loop-extract-single: Extract at most one loop into a new function": [[505, "loop-extract-single-extract-at-most-one-loop-into-a-new-function"]], "-loop-extract: Extract loops into new functions": [[505, "loop-extract-extract-loops-into-new-functions"]], "-loop-reduce: Loop Strength Reduction": [[505, "loop-reduce-loop-strength-reduction"]], "-loop-rotate: Rotate Loops": [[505, "loop-rotate-rotate-loops"]], "-loop-simplify: Canonicalize natural loops": [[505, "loop-simplify-canonicalize-natural-loops"]], "-loop-unroll-and-jam: Unroll and Jam loops": [[505, "loop-unroll-and-jam-unroll-and-jam-loops"]], "-loop-unroll: Unroll loops": [[505, "loop-unroll-unroll-loops"]], "-loop-unswitch: Unswitch loops": [[505, "loop-unswitch-unswitch-loops"]], "-loops: Natural Loop Information": [[505, "loops-natural-loop-information"]], "-loweratomic: Lower atomic intrinsics to non-atomic form": [[505, "loweratomic-lower-atomic-intrinsics-to-non-atomic-form"]], "-lowerinvoke: Lower invokes to calls, for unwindless code generators": [[505, "lowerinvoke-lower-invokes-to-calls-for-unwindless-code-generators"]], "-lowerswitch: Lower SwitchInsts to branches": [[505, "lowerswitch-lower-switchinsts-to-branches"]], "-mem2reg: Promote Memory to Register": [[505, "mem2reg-promote-memory-to-register"]], "-memcpyopt: MemCpy Optimization": [[505, "memcpyopt-memcpy-optimization"]], "-memdep: Memory Dependence Analysis": [[505, "memdep-memory-dependence-analysis"]], "-mergefunc: Merge Functions": [[505, "mergefunc-merge-functions"]], "-mergereturn: Unify function exit nodes": [[505, "mergereturn-unify-function-exit-nodes"]], "-module-debuginfo: Decodes module-level debug info": [[505, "module-debuginfo-decodes-module-level-debug-info"]], "-partial-inliner: Partial Inliner": [[505, "partial-inliner-partial-inliner"]], "-postdomfrontier: Post-Dominance Frontier Construction": [[505, "postdomfrontier-post-dominance-frontier-construction"]], "-postdomtree: Post-Dominator Tree Construction": [[505, "postdomtree-post-dominator-tree-construction"]], "-print-alias-sets: Alias Set Printer": [[505, "print-alias-sets-alias-set-printer"]], "-print-callgraph-sccs: Print SCCs of the Call Graph": [[505, "print-callgraph-sccs-print-sccs-of-the-call-graph"]], "-print-callgraph: Print a call graph": [[505, "print-callgraph-print-a-call-graph"]], "-print-cfg-sccs: Print SCCs of each function CFG": [[505, "print-cfg-sccs-print-sccs-of-each-function-cfg"]], "-print-dom-info: Dominator Info Printer": [[505, "print-dom-info-dominator-info-printer"]], "-print-externalfnconstants: Print external fn callsites passed constants": [[505, "print-externalfnconstants-print-external-fn-callsites-passed-constants"]], "-print-function: Print function to stderr": [[505, "print-function-print-function-to-stderr"]], "-print-module: Print module to stderr": [[505, "print-module-print-module-to-stderr"]], "-print-used-types: Find Used Types": [[505, "print-used-types-find-used-types"]], "-prune-eh: Remove unused exception handling info": [[505, "prune-eh-remove-unused-exception-handling-info"]], "-reassociate: Reassociate expressions": [[505, "reassociate-reassociate-expressions"]], "-reg2mem: Demote all values to stack slots": [[505, "reg2mem-demote-all-values-to-stack-slots"]], "-regions: Detect single entry single exit regions": [[505, "regions-detect-single-entry-single-exit-regions"]], "-scalar-evolution: Scalar Evolution Analysis": [[505, "scalar-evolution-scalar-evolution-analysis"]], "-sccp: Sparse Conditional Constant Propagation": [[505, "sccp-sparse-conditional-constant-propagation"]], "-scev-aa: ScalarEvolution-based Alias Analysis": [[505, "scev-aa-scalarevolution-based-alias-analysis"]], "-simplifycfg: Simplify the CFG": [[505, "simplifycfg-simplify-the-cfg"]], "-sink: Code sinking": [[505, "sink-code-sinking"]], "-sroa: Scalar Replacement of Aggregates": [[505, "sroa-scalar-replacement-of-aggregates"]], "-stack-safety: Stack Safety Analysis": [[505, "stack-safety-stack-safety-analysis"]], "-strip-dead-debug-info: Strip debug info for unused symbols": [[505, "strip-dead-debug-info-strip-debug-info-for-unused-symbols"]], "-strip-dead-prototypes: Strip Unused Function Prototypes": [[505, "strip-dead-prototypes-strip-unused-function-prototypes"]], "-strip-debug-declare: Strip all llvm.dbg.declare intrinsics": [[505, "strip-debug-declare-strip-all-llvm-dbg-declare-intrinsics"]], "-strip-nondebug: Strip all symbols, except dbg symbols, from a module": [[505, "strip-nondebug-strip-all-symbols-except-dbg-symbols-from-a-module"]], "-strip: Strip all symbols from a module": [[505, "strip-strip-all-symbols-from-a-module"]], "-tailcallelim: Tail Call Elimination": [[505, "tailcallelim-tail-call-elimination"]], "-targetdata: Target Data Layout": [[505, "targetdata-target-data-layout"]], "-transform-warning: Report missed forced transformations": [[505, "transform-warning-report-missed-forced-transformations"]], "-verify: Module Verifier": [[505, "verify-module-verifier"]], "-view-cfg-only: View CFG of function (with no function bodies)": [[505, "view-cfg-only-view-cfg-of-function-with-no-function-bodies"]], "-view-cfg: View CFG of function": [[505, "view-cfg-view-cfg-of-function"]], "-view-dom-only: View dominance tree of function (with no function bodies)": [[505, "view-dom-only-view-dominance-tree-of-function-with-no-function-bodies"]], "-view-dom: View dominance tree of function": [[505, "view-dom-view-dominance-tree-of-function"]], "-view-postdom-only: View postdominance tree of function (with no function bodies)": [[505, "view-postdom-only-view-postdominance-tree-of-function-with-no-function-bodies"]], "-view-postdom: View postdominance tree of function": [[505, "view-postdom-view-postdominance-tree-of-function"]], ".amd_kernel_code_t": [[386, "amd-kernel-code-t"]], ".amdgcn.gfx_generation_minor": [[386, "amdgcn-gfx-generation-minor"]], ".amdgcn.gfx_generation_number": [[386, "amdgcn-gfx-generation-number"]], ".amdgcn.gfx_generation_stepping": [[386, "amdgcn-gfx-generation-stepping"]], ".amdgcn.next_free_sgpr": [[386, "amdgcn-next-free-sgpr"]], ".amdgcn.next_free_vgpr": [[386, "amdgcn-next-free-vgpr"]], ".amdgcn_target <target>": [[386, "amdgcn-target-target"]], ".amdgpu_hsa_kernel (name)": [[386, "amdgpu-hsa-kernel-name"]], ".amdgpu_metadata": [[386, "amdgpu-metadata"]], ".amdhsa_kernel <name>": [[386, "amdhsa-kernel-name"]], ".cv_def_range Directive": [[456, "cv-def-range-directive"]], ".cv_file Directive": [[456, "cv-file-directive"]], ".cv_filechecksumoffset Directive": [[456, "cv-filechecksumoffset-directive"]], ".cv_filechecksums Directive": [[456, "cv-filechecksums-directive"]], ".cv_fpo_data Directive": [[456, "cv-fpo-data-directive"]], ".cv_func_id Directive": [[456, "cv-func-id-directive"]], ".cv_inline_linetable Directive": [[456, "cv-inline-linetable-directive"]], ".cv_inline_site_id Directive": [[456, "cv-inline-site-id-directive"]], ".cv_linetable Directive": [[456, "cv-linetable-directive"]], ".cv_loc Directive": [[456, "cv-loc-directive"]], ".cv_stringtable Directive": [[456, "cv-stringtable-directive"]], ".hsa_code_object_isa [major, minor, stepping, vendor, arch]": [[386, "hsa-code-object-isa-major-minor-stepping-vendor-arch"]], ".hsa_code_object_version major, minor": [[386, "hsa-code-object-version-major-minor"]], ".kernel.sgpr_count": [[386, "kernel-sgpr-count"]], ".kernel.vgpr_count": [[386, "kernel-vgpr-count"]], ".linker-options Section (linker options)": [[456, "linker-options-section-linker-options"]], ".linkonce Directive": [[456, "linkonce-directive"]], ".o File Writing": [[402, "o-file-writing"]], ".option.machine_version_major": [[386, "option-machine-version-major"]], ".option.machine_version_minor": [[386, "option-machine-version-minor"]], ".option.machine_version_stepping": [[386, "option-machine-version-stepping"]], ".section Directive": [[456, "section-directive"], [456, "id3"]], "10,000 ft View": [[401, "ft-view"]], "3-Stage Non-Determinism": [[388, "stage-non-determinism"]], "6-bit characters": [[393, "bit-characters"]], "<algorithm>": [[446, "algorithm"]], "<deque>": [[507, "deque"]], "<list>": [[507, "list"]], "<map>": [[507, "map"]], "<math.h> and <cmath>": [[446, "math-h-and-cmath"]], "<set>": [[507, "set"]], "<std::complex>": [[446, "std-complex"]], "<vector>": [[507, "vector"]], "A": [[480, "a"]], "A Benchmark for the C/C++ Standard Library": [[510, "a-benchmark-for-the-c-c-standard-library"]], "A Bug to be Aware Of": [[473, "a-bug-to-be-aware-of"]], "A guide to Dockerfiles for building LLVM": [[453, null]], "A sorted 'vector'": [[507, "a-sorted-vector"], [507, "dss-sortedvectormap"]], "AAPCS": [[392, "aapcs"]], "AArch64 & ARM": [[447, "aarch64-arm"]], "AArch64 Target": [[470, "aarch64-target"]], "ABI": [[447, "abi"]], "ABI Breaking Checks": [[507, "abi-breaking-checks"]], "ADDITIONAL OPTIONS": [[409, "additional-options"]], "AFL compatibility": [[481, "afl-compatibility"]], "AMDGPU": [[447, "amdgpu"]], "AMDGPU Architectures": [[386, "amdgpu-architecture-table"]], "AMDGPU Attributes": [[386, "amdgpu-attributes"]], "AMDGPU Code Object V2 ELF Note Record Enumeration Values": [[386, "amdgpu-elf-note-record-enumeration-values-table-v2"]], "AMDGPU Code Object V2 ELF Note Records": [[386, "amdgpu-elf-note-records-table-v2"]], "AMDGPU Code Object V3 ELF Note Record Enumeration Values": [[386, "amdgpu-elf-note-record-enumeration-values-table-v3"]], "AMDGPU Code Object V3 ELF Note Records": [[386, "amdgpu-elf-note-records-table-v3"]], "AMDGPU DWARF Address Space Mapping": [[386, "amdgpu-dwarf-address-space-mapping-table"]], "AMDGPU DWARF Line Number Program Header Extended Content Types": [[386, "amdgpu-dwarf-extended-content-types"]], "AMDGPU DWARF Line Number Program Header Extended Content Types Encoding": [[386, "amdgpu-dwarf-extended-content-types-encoding"]], "AMDGPU Debug Options": [[386, "amdgpu-debug-options"]], "AMDGPU EF_AMDGPU_MACH Values": [[386, "amdgpu-ef-amdgpu-mach-table"]], "AMDGPU ELF Header": [[386, "amdgpu-elf-header-table"]], "AMDGPU ELF Header Enumeration Values": [[386, "amdgpu-elf-header-enumeration-values-table"]], "AMDGPU ELF Header e_flags": [[386, "amdgpu-elf-header-e-flags-table"]], "AMDGPU ELF Relocation Records": [[386, "amdgpu-elf-relocation-records-table"]], "AMDGPU ELF Sections": [[386, "amdgpu-elf-sections-table"]], "AMDGPU ELF Symbols": [[386, "amdgpu-elf-symbols-table"]], "AMDGPU Environments": [[386, "amdgpu-environment-table"]], "AMDGPU Instruction Syntax": [[383, null]], "AMDGPU Instructions Notation": [[382, null]], "AMDGPU Intrinsics": [[386, "amdgpu-intrinsics"]], "AMDGPU LLVM IR Attributes": [[386, "amdgpu-llvm-ir-attributes-table"]], "AMDGPU Operating Systems": [[386, "amdgpu-os-table"]], "AMDGPU Processors": [[386, "amdgpu-processor-table"]], "AMDGPU Target Features": [[386, "amdgpu-target-feature-table"]], "AMDGPU Trap Handler for AMDHSA OS": [[386, "amdgpu-trap-handler-for-amdhsa-os-table"]], "AMDGPU Trap Handler for Non-AMDHSA OS": [[386, "amdgpu-trap-handler-for-non-amdhsa-os-table"]], "AMDGPU Vendors": [[386, "amdgpu-vendor-table"]], "AMDHSA": [[386, "amdhsa"]], "AMDHSA Code Object V2 Kernel Argument Metadata Map": [[386, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-table-v2"]], "AMDHSA Code Object V2 Kernel Attribute Metadata Map": [[386, "amdgpu-amdhsa-code-object-kernel-attribute-metadata-map-table-v2"]], "AMDHSA Code Object V2 Kernel Code Properties Metadata Map": [[386, "amdgpu-amdhsa-code-object-kernel-code-properties-metadata-map-table-v2"]], "AMDHSA Code Object V2 Kernel Metadata Map": [[386, "amdgpu-amdhsa-code-object-kernel-metadata-map-table-v2"]], "AMDHSA Code Object V2 Metadata Map": [[386, "amdgpu-amdhsa-code-object-metadata-map-table-v2"]], "AMDHSA Code Object V3 Kernel Argument Metadata Map": [[386, "amdgpu-amdhsa-code-object-kernel-argument-metadata-map-table-v3"]], "AMDHSA Code Object V3 Kernel Metadata Map": [[386, "amdgpu-amdhsa-code-object-kernel-metadata-map-table-v3"]], "AMDHSA Code Object V3 Metadata Map": [[386, "amdgpu-amdhsa-code-object-metadata-map-table-v3"]], "AMDHSA Kernel Assembler Directives": [[386, "amdhsa-kernel-directives-table"]], "AMDHSA LLVM Sync Scopes": [[386, "amdgpu-amdhsa-llvm-sync-scopes-table"]], "AMDHSA Memory Model Code Sequences GFX6-GFX10": [[386, "amdgpu-amdhsa-memory-model-code-sequences-gfx6-gfx10-table"]], "AMDHSA Memory Model Single Thread Optimization Constraints GFX6-GFX10": [[386, "amdgpu-amdhsa-memory-model-single-thread-optimization-constraints-gfx6-gfx10-table"]], "AMDHSA Memory Spaces": [[386, "amdgpu-amdhsa-memory-spaces-table"]], "AMDPAL": [[386, "amdpal"]], "API: CallLowering": [[465, "api-calllowering"]], "API: InstructionSelector": [[465, "api-instructionselector"]], "API: LegalizerInfo": [[465, "api-legalizerinfo"]], "API: RegisterBankInfo": [[465, "api-registerbankinfo"]], "ARM64/COFF-Dependent": [[456, "arm64-coff-dependent"]], "AST Extensions for If/Then/Else": [[555, "ast-extensions-for-if-then-else"], [565, "ast-extensions-for-if-then-else"], [576, "ast-extensions-for-if-then-else"]], "AST Extensions for the 'for' Loop": [[555, "ast-extensions-for-the-for-loop"], [565, "ast-extensions-for-the-for-loop"], [576, "ast-extensions-for-the-for-loop"]], "Abandoning a change": [[506, "abandoning-a-change"]], "Abbreviated Record Encoding": [[393, "abbreviated-record-encoding"]], "Abbreviation IDs": [[393, "abbreviation-ids"]], "Abbreviations": [[393, "abbreviations"]], "Absolute Expressions": [[385, "absolute-expressions"]], "Abstract": [[393, "abstract"], [459, "abstract"], [461, "abstract"], [479, "abstract"], [510, "abstract"], [512, "abstract"], [525, "abstract"]], "Abstract Machine Model": [[524, "abstract-machine-model"]], "Accurate Garbage Collection Intrinsics": [[479, "accurate-garbage-collection-intrinsics"]], "Achieving Isolation with LLVMContext": [[507, "achieving-isolation-with-llvmcontext"]], "Acquire": [[390, "acquire"]], "AcquireRelease": [[390, "acquirerelease"]], "Actively working on fixing bugs": [[396, "actively-working-on-fixing-bugs"]], "Add SelectionDAG node types": [[387, "add-selectiondag-node-types"]], "Add documentation and tests": [[387, "add-documentation-and-tests"]], "Add the intrinsic": [[387, "add-the-intrinsic"]], "Adding Finer Granularity": [[492, "adding-finer-granularity"]], "Adding a JIT Compiler": [[554, "adding-a-jit-compiler"], [564, "adding-a-jit-compiler"], [575, "adding-a-jit-compiler"]], "Adding a derived type": [[455, "adding-a-derived-type"]], "Adding a fundamental type": [[455, "adding-a-fundamental-type"]], "Adding a new SelectionDAG node": [[455, "adding-a-new-selectiondag-node"]], "Adding a new instruction": [[455, "adding-a-new-instruction"]], "Adding a new intrinsic function": [[455, "adding-a-new-intrinsic-function"]], "Adding a new type": [[455, "adding-a-new-type"]], "Adding debug counters to aid in debugging your code": [[507, "adding-debug-counters-to-aid-in-debugging-your-code"]], "Adding freeform text to help output": [[445, "adding-freeform-text-to-help-output"]], "Adding to this document": [[459, "adding-to-this-document"]], "Additional Documentation": [[386, "additional-documentation"]], "Additional Information": [[513, "additional-information"]], "Address Computation": [[462, "address-computation"]], "Address Remapping": [[483, "address-remapping"]], "Address Space Conversion": [[490, "address-space-conversion"]], "Address Space Mapping": [[386, "amdgpu-address-space-mapping-table"], [386, "address-space-mapping"]], "Address Spaces": [[386, "address-spaces"], [490, "address-spaces"], [490, "id11"]], "Addresses of Basic Blocks": [[479, "addresses-of-basic-blocks"]], "Adjusting Existing Variables for Mutation": [[557, "adjusting-existing-variables-for-mutation"], [567, "adjusting-existing-variables-for-mutation"], [578, "adjusting-existing-variables-for-mutation"]], "Advanced Concepts": [[450, "advanced-concepts"]], "Advanced Topics": [[507, "advanced-topics"], [580, "advanced-topics"]], "Advanced features": [[481, "advanced-features"]], "Advantages": [[511, "advantages"]], "Advertisement": [[487, "advertisement"]], "Advice for using bugpoint": [[397, "advice-for-using-bugpoint"]], "Advice on Packaging LLVM": [[504, null]], "Aggregate Operations": [[479, "aggregate-operations"]], "Aggregate Types": [[479, "aggregate-types"]], "Aggregates": [[465, "aggregates"]], "Ahead-of-Time Compilation Mode": [[559, "ahead-of-time-compilation-mode"], [569, "ahead-of-time-compilation-mode"]], "Alias Summary": [[479, "alias-summary"]], "Alias analysis driven transformations": [[389, "alias-analysis-driven-transformations"]], "AliasAnalysis Class Overview": [[389, "aliasanalysis-class-overview"]], "AliasAnalysis chaining behavior": [[389, "aliasanalysis-chaining-behavior"]], "Aliases": [[479, "aliases"]], "Alignment": [[392, "alignment"]], "Alignment and Block Boundaries": [[499, "alignment-and-block-boundaries"]], "Allocating Stacklets": [[518, "allocating-stacklets"]], "Allocator": [[517, "allocator"]], "Alternative Approaches": [[482, "alternative-approaches"]], "Alternative using a cmake cache": [[470, "alternative-using-a-cmake-cache"]], "Ambiguous Transformation Order": [[536, "ambiguous-transformation-order"]], "An Example Using the LLVM Tool Chain": [[463, "an-example-using-the-llvm-tool-chain"], [464, "an-example-using-the-llvm-tool-chain"]], "Analysis Group Concepts": [[540, "analysis-group-concepts"]], "Analysis Passes": [[505, "analysis-passes"]], "Announce the Release": [[472, "announce-the-release"]], "Anonymous Namespaces": [[404, "anonymous-namespaces"]], "Appealing": [[516, "appealing"]], "Apple Clang Builds (A More Complex Bootstrap)": [[388, "apple-clang-builds-a-more-complex-bootstrap"]], "Applications/Libraries": [[510, "applications-libraries"]], "Architecture & Platform Information for Compiler Writers": [[447, null]], "Areas Requiring Attention": [[449, "areas-requiring-attention"]], "Argument Aliases": [[445, "argument-aliases"]], "Argument Handling": [[401, "argument-handling"]], "Arguments": [[479, "id611"], [479, "id616"], [479, "id621"], [479, "id626"], [479, "id631"], [479, "id636"], [479, "id641"]], "Arguments:": [[449, "arguments"], [449, "id5"], [449, "id8"], [449, "id11"], [449, "id14"], [449, "id17"], [449, "id20"], [449, "id22"], [449, "id26"], [449, "id29"], [449, "id32"], [449, "id35"], [449, "id38"], [449, "id41"], [449, "id45"], [479, "arguments"], [479, "id30"], [479, "id35"], [479, "id40"], [479, "id46"], [479, "id51"], [479, "id56"], [479, "id61"], [479, "id66"], [479, "id71"], [479, "id81"], [479, "id86"], [479, "id91"], [479, "id96"], [479, "id101"], [479, "id106"], [479, "id111"], [479, "id116"], [479, "id121"], [479, "id126"], [479, "id131"], [479, "id136"], [479, "id141"], [479, "id146"], [479, "id151"], [479, "id156"], [479, "id161"], [479, "id166"], [479, "id171"], [479, "id176"], [479, "id181"], [479, "id186"], [479, "id191"], [479, "id196"], [479, "id201"], [479, "id206"], [479, "id211"], [479, "id216"], [479, "id221"], [479, "id226"], [479, "id231"], [479, "id236"], [479, "id241"], [479, "id246"], [479, "id251"], [479, "id256"], [479, "id261"], [479, "id266"], [479, "id271"], [479, "id276"], [479, "id281"], [479, "id286"], [479, "id291"], [479, "id296"], [479, "id301"], [479, "id306"], [479, "id311"], [479, "id316"], [479, "id321"], [479, "id326"], [479, "id332"], [479, "id338"], [479, "id345"], [479, "id351"], [479, "id355"], [479, "id359"], [479, "id364"], [479, "id368"], [479, "id372"], [479, "id376"], [479, "id386"], [479, "id390"], [479, "id406"], [479, "id410"], [479, "id420"], [479, "id424"], [479, "id428"], [479, "id435"], [479, "id439"], [479, "id443"], [479, "id447"], [479, "id451"], [479, "id455"], [479, "id459"], [479, "id463"], [479, "id467"], [479, "id471"], [479, "id475"], [479, "id479"], [479, "id483"], [479, "id487"], [479, "id491"], [479, "id495"], [479, "id499"], [479, "id503"], [479, "id507"], [479, "id511"], [479, "id515"], [479, "id519"], [479, "id523"], [479, "id527"], [479, "id531"], [479, "id535"], [479, "id539"], [479, "id543"], [479, "id547"], [479, "id551"], [479, "id561"], [479, "id565"], [479, "id569"], [479, "id573"], [479, "id577"], [479, "id581"], [479, "id586"], [479, "id591"], [479, "id596"], [479, "id601"], [479, "id606"], [479, "id648"], [479, "id653"], [479, "id656"], [479, "id660"], [479, "id663"], [479, "id667"], [479, "id670"], [479, "id673"], [479, "id676"], [479, "id679"], [479, "id682"], [479, "id685"], [479, "id688"], [479, "id691"], [479, "id694"], [479, "id699"], [479, "id704"], [479, "id708"], [479, "id712"], [479, "id716"], [479, "id720"], [479, "id724"], [479, "id728"], [479, "id732"], [479, "id736"], [479, "id740"], [479, "id744"], [479, "id748"], [479, "id752"], [479, "id756"], [479, "id760"], [479, "id764"], [479, "id768"], [479, "id772"], [479, "id776"], [479, "id780"], [479, "id784"], [479, "id788"], [479, "id792"], [479, "id796"], [479, "id800"], [479, "id804"], [479, "id808"], [479, "id812"], [479, "id816"], [479, "id820"], [479, "id824"], [479, "id828"], [479, "id832"], [479, "id836"], [479, "id840"], [479, "id844"], [479, "id848"], [479, "id852"], [479, "id856"], [479, "id860"], [479, "id864"], [479, "id868"], [479, "id872"], [479, "id875"], [479, "id878"], [479, "id882"], [479, "id886"], [479, "id890"], [479, "id894"], [479, "id898"], [479, "id902"], [479, "id905"], [479, "id908"], [479, "id911"], [479, "id915"], [479, "id919"], [479, "id925"], [479, "id932"], [479, "id939"], [479, "id944"], [479, "id949"], [479, "id990"], [479, "id994"], [479, "id998"]], "Arithmetic with Overflow Intrinsics": [[479, "arithmetic-with-overflow-intrinsics"]], "Arm Soft-Float Target": [[470, "arm-soft-float-target"]], "Arm architecture not given": [[470, "arm-architecture-not-given"]], "ArmNeon": [[527, "armneon"]], "ArmNeonSema": [[527, "armneonsema"]], "ArmNeonTest": [[527, "armneontest"]], "Armv6-m, Armv7-m and Armv7E-M targets": [[470, "armv6-m-armv7-m-and-armv7e-m-targets"]], "Array Type": [[479, "array-type"]], "Asm Table Formats": [[454, "asm-table-formats"]], "Asm template argument modifiers": [[479, "asm-template-argument-modifiers"]], "AsmMatcher": [[527, "asmmatcher"]], "AsmWriter": [[527, "asmwriter"]], "Assembler": [[386, "assembler"]], "Assembly Parser": [[402, "assembly-parser"]], "Assembly Printer": [[539, "assembly-printer"]], "Assert Liberally": [[404, "assert-liberally"]], "Atomic Memory Ordering Constraints": [[479, "atomic-memory-ordering-constraints"]], "Atomic instructions": [[390, "atomic-instructions"]], "Atomic orderings": [[390, "atomic-orderings"]], "Atomics and Codegen": [[390, "atomics-and-codegen"]], "Atomics and IR optimization": [[390, "atomics-and-ir-optimization"]], "AttrBuilder": [[475, "attrbuilder"]], "AttrDocs": [[527, "attrdocs"]], "Attribute": [[475, "attribute"]], "Attribute Groups": [[479, "attribute-groups"]], "AttributeList": [[475, "attributelist"]], "Attribution of Changes": [[452, "attribution-of-changes"]], "Audience": [[539, "audience"]], "Auto-Vectorization in LLVM": [[538, null]], "Automatic Debugger Selection": [[397, "automatic-debugger-selection"]], "Automatic Linker Flags Named Metadata": [[479, "automatic-linker-flags-named-metadata"]], "Available AliasAnalysis implementations": [[389, "available-aliasanalysis-implementations"]], "Available Fuzzers": [[460, "available-fuzzers"]], "Avoid loads and stores of large aggregate type": [[459, "avoid-loads-and-stores-of-large-aggregate-type"]], "Avoid std::endl": [[404, "avoid-std-endl"]], "Avoiding Heap Allocations": [[449, "avoiding-heap-allocations"]], "B": [[480, "b"]], "BINARY INPUT AND OUTPUT": [[431, "binary-input-and-output"]], "BUGS": [[421, "bugs"], [428, "bugs"], [430, "bugs"], [431, "bugs"], [432, "bugs"]], "Background": [[399, "background"], [451, "background"], [473, "background"]], "Background on Windows exceptions": [[454, "background-on-windows-exceptions"]], "Barriers": [[490, "barriers"]], "Base & Derived Pointers": [[524, "base-derived-pointers"]], "Basic CMake usage": [[400, "usage"]], "Basic Commands": [[408, "basic-commands"]], "Basic Expression Parsing": [[552, "basic-expression-parsing"], [562, "basic-expression-parsing"], [573, "basic-expression-parsing"]], "Basic Inspection and Traversal Routines": [[507, "basic-inspection-and-traversal-routines"]], "Basic Mode": [[541, "basic-mode"]], "Basic Setup": [[473, "basic-setup"]], "Basic Steps": [[539, "basic-steps"]], "Basic Usage": [[434, "basic-usage"]], "Basic code required": [[540, "basic-code-required"]], "Basic migration": [[509, "basic-migration"]], "Basics": [[393, "basics"], [489, "basics"]], "Benchmarking tips": [[391, null]], "Benchmarks": [[510, "benchmarks"]], "Beware of non-determinism due to ordering of pointers": [[404, "beware-of-non-determinism-due-to-ordering-of-pointers"]], "Beware of non-deterministic sorting order of equal elements": [[404, "beware-of-non-deterministic-sorting-order-of-equal-elements"]], "Beware unnecessary copies with auto": [[404, "beware-unnecessary-copies-with-auto"]], "Big bang": [[511, "big-bang"]], "Bigger Pieces of Work": [[448, "bigger-pieces-of-work"]], "Binary Expression Parsing": [[552, "binary-expression-parsing"], [562, "binary-expression-parsing"], [573, "binary-expression-parsing"]], "Binary Operations": [[479, "binary-operations"]], "Binary Operators": [[385, "binary-operators"]], "Bisecting": [[509, "bisecting"]], "Bisection Index Values": [[492, "bisection-index-values"]], "Bit Manipulation Intrinsics": [[479, "bit-manipulation-intrinsics"]], "Bit storage containers (BitVector, SparseBitVector)": [[507, "bit-storage-containers-bitvector-sparsebitvector"]], "BitValue": [[544, "bitvalue"]], "BitVector": [[507, "bitvector"]], "Bitcode Wrapper Format": [[393, "bitcode-wrapper-format"]], "Bitconverts": [[392, "bitconverts"]], "Bitstream Format": [[393, "bitstream-format"]], "Bitwise Binary Operations": [[479, "bitwise-binary-operations"]], "Blitz++": [[510, "blitz"]], "Block Bias": [[394, "block-bias"]], "Block Frequency": [[394, "block-frequency"]], "Block Mass": [[394, "block-mass"]], "Block References": [[484, "block-references"]], "Block Scalars": [[544, "block-scalars"]], "Blocks": [[393, "blocks"]], "Bodies": [[530, "bodies"]], "Boolean Arguments": [[445, "boolean-arguments"]], "Bootstrap Builds": [[388, "bootstrap-builds"]], "Braced Initializer Lists": [[404, "braced-initializer-lists"]], "Branch Folding and If Conversion": [[539, "branch-folding-and-if-conversion"]], "Branch Probability": [[394, "branch-probability"]], "Branch Weight": [[394, "branch-weight"]], "BranchInst": [[395, "branchinst"]], "Branching/Stashing/Updating for Local Development or Experiments": [[509, "branching-stashing-updating-for-local-development-or-experiments"]], "Bug Fixes": [[448, "bug-fixes"]], "Bug Reporting Process": [[514, "bug-reporting-process"]], "Bug Reports": [[448, "bug-reports"]], "Bugs and Enhancements": [[524, "bugs-and-enhancements"]], "Build Clang Binary Distribution": [[472, "build-clang-binary-distribution"]], "Build Integration": [[478, "build-integration"]], "Build-time use optimization": [[488, "build-time-use-optimization"]], "Building Clang with PGO": [[469, "building-clang-with-pgo"]], "Building a Distribution of LLVM": [[398, null]], "Building a JIT in LLVM": [[580, "building-a-jit-in-llvm"]], "Building a JIT: Adding Optimizations -- An introduction to ORC Layers": [[547, null]], "Building a JIT: Extreme Laziness - Using Compile Callbacks to JIT from ASTs": [[549, null]], "Building a JIT: Per-function Lazy Compilation": [[548, null]], "Building a JIT: Remote-JITing -- Process Isolation and Laziness at a Distance": [[550, null]], "Building a JIT: Starting out with KaleidoscopeJIT": [[546, null]], "Building a single sub-project": [[509, "building-a-single-sub-project"]], "Building and Running": [[460, "building-and-running"]], "Building compiler-rt builtins for Arm": [[470, "building-compiler-rt-builtins-for-arm"]], "Building fallible iterators and iterator ranges": [[507, "building-fallible-iterators-and-iterator-ranges"]], "Building the SelectionDAG": [[387, "building-the-selectiondag"]], "Building with XRay": [[542, "building-with-xray"]], "Buildmasters": [[467, "buildmasters"]], "Built In GC Strategies": [[461, "built-in-gc-strategies"]], "Built in register allocators": [[402, "built-in-register-allocators"]], "Built-in expect Instructions": [[395, "built-in-expect-instructions"]], "Built-in types": [[544, "built-in-types"]], "Builtin parsers": [[445, "builtin-parsers"]], "Bundled Instructions": [[484, "bundled-instructions"]], "C": [[480, "c"]], "C API": [[515, "c-api"]], "C API Changes": [[452, "c-api-changes"]], "C API Details": [[486, "c-api-details"]], "C type width Module Flags Metadata": [[479, "c-type-width-module-flags-metadata"]], "C++ Features": [[504, "c-features"]], "C++ Performance Benchmarks": [[510, "c-performance-benchmarks"]], "C++ Standard Library": [[404, "c-standard-library"]], "C++ Standard Versions": [[404, "c-standard-versions"]], "C/C++ front-end specific debug information": [[519, "c-c-front-end-specific-debug-information"]], "C/C++ function information": [[519, "c-c-function-information"]], "C/C++ global variable information": [[519, "c-c-global-variable-information"]], "C/C++ source file information": [[519, "c-c-source-file-information"]], "C99-style Hexadecimal Floating-point Constants": [[456, "c99-style-hexadecimal-floating-point-constants"]], "CFG Modifications": [[395, "cfg-modifications"]], "CFIIndex Operands": [[484, "cfiindex-operands"]], "CMake Caches": [[400, "cmake-caches"]], "CMake Primer": [[401, null]], "CODE GENERATION OPTIONS": [[411, "code-generation-options"]], "COFF Syntax": [[581, "coff-syntax"]], "COFF-SPECIFIC OPTIONS": [[431, "coff-specific-options"]], "COMMANDS": [[418, "commands"], [428, "commands"], [432, "commands"], [434, "commands"]], "COMPONENTS": [[417, "components"]], "CONSTANTS_BLOCK Contents": [[393, "constants-block-contents"]], "CORAL-2 Benchmarks": [[510, "coral-2-benchmarks"]], "CTags": [[527, "ctags"]], "Call-clobbered registers": [[402, "call-clobbered-registers"]], "CallArgument Records": [[543, "callargument-records"]], "CallInst": [[395, "callinst"]], "Callee-cleanup Calling Conventions": [[477, "callee-cleanup-calling-conventions"]], "Calling Conventions": [[479, "calling-conventions"], [539, "calling-conventions"]], "CallingConv": [[527, "callingconv"]], "Calls": [[479, "calls"]], "Can GEP index into vector elements?": [[462, "can-gep-index-into-vector-elements"]], "Can I cast an object's address to integer and add it to null?": [[462, "can-i-cast-an-object-s-address-to-integer-and-add-it-to-null"]], "Can I compare two values computed with GEPs?": [[462, "can-i-compare-two-values-computed-with-geps"]], "Can I compile C or C++ code to platform-independent LLVM bitcode?": [[457, "can-i-compile-c-or-c-code-to-platform-independent-llvm-bitcode"]], "Can I compute the distance between two objects, and add that value to one address to compute the other address?": [[462, "can-i-compute-the-distance-between-two-objects-and-add-that-value-to-one-address-to-compute-the-other-address"]], "Can I do GEP with a different pointer type than the type of the underlying object?": [[462, "can-i-do-gep-with-a-different-pointer-type-than-the-type-of-the-underlying-object"]], "Can I do type-based alias analysis on LLVM IR?": [[462, "can-i-do-type-based-alias-analysis-on-llvm-ir"]], "Can I modify LLVM source code and redistribute the modified source?": [[457, "can-i-modify-llvm-source-code-and-redistribute-the-modified-source"]], "Can I modify the LLVM source code and redistribute binaries or other tools based on it, without redistributing the source?": [[457, "can-i-modify-the-llvm-source-code-and-redistribute-binaries-or-other-tools-based-on-it-without-redistributing-the-source"]], "Can array indices be negative?": [[462, "can-array-indices-be-negative"]], "Changes to LLDB": [[513, "changes-to-lldb"]], "Changes to building LLVM": [[513, "changes-to-building-llvm"]], "Changes to the AArch64 Backend": [[513, "changes-to-the-aarch64-backend"]], "Changes to the AMDGPU Target": [[513, "changes-to-the-amdgpu-target"]], "Changes to the ARM Backend": [[513, "changes-to-the-arm-backend"]], "Changes to the LLVM IR": [[513, "changes-to-the-llvm-ir"]], "Changes to the MIPS Target": [[513, "changes-to-the-mips-target"]], "Changes to the PowerPC Target": [[513, "changes-to-the-powerpc-target"]], "Changes to the RISCV Target": [[513, "changes-to-the-riscv-target"]], "Changes to the SystemZ Target": [[513, "changes-to-the-systemz-target"]], "Changes to the X86 Target": [[513, "changes-to-the-x86-target"]], "Chapter 1 Introduction": [[546, "chapter-1-introduction"]], "Chapter 2 Introduction": [[547, "chapter-2-introduction"], [552, "chapter-2-introduction"], [562, "chapter-2-introduction"], [573, "chapter-2-introduction"]], "Chapter 3 Introduction": [[548, "chapter-3-introduction"], [553, "chapter-3-introduction"], [563, "chapter-3-introduction"], [574, "chapter-3-introduction"]], "Chapter 4 Introduction": [[549, "chapter-4-introduction"], [554, "chapter-4-introduction"], [564, "chapter-4-introduction"], [575, "chapter-4-introduction"]], "Chapter 5 Introduction": [[550, "chapter-5-introduction"], [555, "chapter-5-introduction"], [565, "chapter-5-introduction"], [576, "chapter-5-introduction"]], "Chapter 6 Introduction": [[556, "chapter-6-introduction"], [566, "chapter-6-introduction"], [577, "chapter-6-introduction"]], "Chapter 7 Introduction": [[557, "chapter-7-introduction"], [567, "chapter-7-introduction"], [578, "chapter-7-introduction"]], "Chapter 8 Introduction": [[558, "chapter-8-introduction"], [568, "chapter-8-introduction"]], "Chapter 9 Introduction": [[559, "chapter-9-introduction"], [569, "chapter-9-introduction"]], "Checkout LLVM from Git": [[463, "checkout-llvm-from-git"]], "Checkout via SVN (deprecated)": [[463, "checkout-via-svn-deprecated"]], "Checkout/Clone Multiple Projects, with Commit Access": [[509, "checkout-clone-multiple-projects-with-commit-access"]], "Checkout/Clone a Single Project, with Commit Access": [[509, "checkout-clone-a-single-project-with-commit-access"]], "Choosing a target": [[558, "choosing-a-target"], [568, "choosing-a-target"]], "Chrome Trace Viewer Visualization": [[542, "chrome-trace-viewer-visualization"]], "Chunk Header": [[517, "chunk-header"]], "Clang": [[517, "clang"]], "Clang BackEnds": [[527, "clang-backends"]], "Clang uses the host header files": [[470, "clang-uses-the-host-header-files"]], "ClangAttrClasses": [[527, "clangattrclasses"]], "ClangAttrDump": [[527, "clangattrdump"]], "ClangAttrImpl": [[527, "clangattrimpl"]], "ClangAttrList": [[527, "clangattrlist"]], "ClangAttrPCHRead": [[527, "clangattrpchread"]], "ClangAttrPCHWrite": [[527, "clangattrpchwrite"]], "ClangAttrParsedAttrImpl": [[527, "clangattrparsedattrimpl"]], "ClangAttrParsedAttrKinds": [[527, "clangattrparsedattrkinds"]], "ClangAttrParsedAttrList": [[527, "clangattrparsedattrlist"]], "ClangAttrParserStringSwitches": [[527, "clangattrparserstringswitches"]], "ClangAttrSpellingListIndex": [[527, "clangattrspellinglistindex"]], "ClangAttrSpellings": [[527, "clangattrspellings"]], "ClangAttrTemplateInstantiate": [[527, "clangattrtemplateinstantiate"]], "ClangAttrVisitor": [[527, "clangattrvisitor"]], "ClangCommentCommandInfo": [[527, "clangcommentcommandinfo"]], "ClangCommentCommandList": [[527, "clangcommentcommandlist"]], "ClangCommentHTMLNamedCharacterReferences": [[527, "clangcommenthtmlnamedcharacterreferences"]], "ClangCommentHTMLTags": [[527, "clangcommenthtmltags"]], "ClangCommentHTMLTagsProperties": [[527, "clangcommenthtmltagsproperties"]], "ClangCommentNodes": [[527, "clangcommentnodes"]], "ClangDeclNodes": [[527, "clangdeclnodes"]], "ClangDiagGroups": [[527, "clangdiaggroups"]], "ClangDiagsDefs": [[527, "clangdiagsdefs"]], "ClangDiagsIndexName": [[527, "clangdiagsindexname"]], "ClangSACheckers": [[527, "clangsacheckers"]], "ClangStmtNodes": [[527, "clangstmtnodes"]], "Class overviews": [[404, "class-overviews"]], "Class template arguments": [[529, "class-template-arguments"]], "Classes and definitions": [[529, "classes-and-definitions"]], "Cleanups": [[454, "cleanups"]], "Clients for debugging and evaluation of implementations": [[389, "clients-for-debugging-and-evaluation-of-implementations"]], "Clobber constraints": [[479, "clobber-constraints"]], "Code Conventions": [[386, "code-conventions"]], "Code Emission": [[402, "code-emission"]], "Code Generation": [[483, "code-generation"]], "Code Generation Setup": [[553, "code-generation-setup"], [563, "code-generation-setup"], [574, "code-generation-setup"]], "Code Generation for If/Then/Else": [[555, "code-generation-for-if-then-else"], [565, "code-generation-for-if-then-else"], [576, "code-generation-for-if-then-else"]], "Code Generation for the 'for' Loop": [[555, "code-generation-for-the-for-loop"], [565, "code-generation-for-the-for-loop"], [576, "code-generation-for-the-for-loop"]], "Code Generator Intrinsics": [[479, "code-generator-intrinsics"]], "Code Generator backend info": [[529, "code-generator-backend-info"]], "Code Object": [[386, "code-object"]], "Code Object Metadata": [[386, "code-object-metadata"]], "Code Object Target Identification": [[386, "code-object-target-identification"]], "Code Object V2 Directives (-mattr=-code-object-v3)": [[386, "code-object-v2-directives-mattr-code-object-v3"]], "Code Object V2 Example Source Code (-mattr=-code-object-v3)": [[386, "code-object-v2-example-source-code-mattr-code-object-v3"]], "Code Object V2 Metadata (-mattr=-code-object-v3)": [[386, "code-object-v2-metadata-mattr-code-object-v3"]], "Code Object V2 Note Records (-mattr=-code-object-v3)": [[386, "code-object-v2-note-records-mattr-code-object-v3"]], "Code Object V2 Predefined Symbols (-mattr=-code-object-v3)": [[386, "code-object-v2-predefined-symbols-mattr-code-object-v3"]], "Code Object V3 Directives (-mattr=+code-object-v3)": [[386, "code-object-v3-directives-mattr-code-object-v3"]], "Code Object V3 Example Source Code (-mattr=+code-object-v3)": [[386, "code-object-v3-example-source-code-mattr-code-object-v3"]], "Code Object V3 Metadata (-mattr=+code-object-v3)": [[386, "code-object-v3-metadata-mattr-code-object-v3"]], "Code Object V3 Note Records (-mattr=+code-object-v3)": [[386, "code-object-v3-note-records-mattr-code-object-v3"]], "Code Object V3 Predefined Symbols (-mattr=+code-object-v3)": [[386, "code-object-v3-predefined-symbols-mattr-code-object-v3"]], "Code Organization": [[525, "code-organization"]], "Code Owners": [[452, "code-owners"]], "Code Reviews": [[452, "code-reviews"]], "Code Reviews with Phabricator": [[506, null]], "Code Transformation Metadata": [[536, null]], "Code generator bugs": [[474, "code-generator-bugs"]], "Code generator debugger": [[397, "code-generator-debugger"]], "CodeEmitter": [[527, "codeemitter"]], "CodeView": [[503, "codeview"]], "CodeView Debug Info Format": [[519, "codeview-debug-info-format"]], "CodeView Symbol Records": [[493, null]], "CodeView Type Record List": [[502, "codeview-type-record-list"]], "CodeView Type Records": [[494, null]], "CodeView-Dependent": [[456, "codeview-dependent"]], "Collecting options as a set of flags": [[445, "collecting-options-as-a-set-of-flags"]], "Collector Requirements": [[461, "collector-requirements"]], "Color conversion": [[510, "color-conversion"]], "Comdats": [[479, "comdats"]], "Command line flags": [[538, "command-line-flags"]], "CommandLine 2.0 Library Manual": [[445, null]], "Comment Formatting": [[404, "comment-formatting"]], "Commenting": [[404, "commenting"]], "Commit an API Change in LLVM and Update the Sub-projects": [[509, "commit-an-api-change-in-llvm-and-update-the-sub-projects"]], "Commit messages": [[452, "commit-messages"]], "Committing a change": [[506, "committing-a-change"]], "Committing someone's change from Phabricator": [[506, "committing-someone-s-change-from-phabricator"]], "Common Issues": [[490, "common-issues"]], "Common Problems": [[463, "common-problems"], [464, "common-problems"]], "Community Testing": [[472, "community-testing"]], "Community wide proposals": [[545, "community-wide-proposals"]], "Comparison and logarithmical search": [[489, "comparison-and-logarithmical-search"]], "Compilation Models": [[446, "compilation-models"]], "Compile Flags": [[504, "compile-flags"]], "Compile Unit": [[559, "compile-unit"], [569, "compile-unit"]], "Compile-time optimization bugs": [[474, "compile-time-optimization-bugs"]], "Compiler-rt builds but the tests fail to build": [[470, "compiler-rt-builds-but-the-tests-fail-to-build"]], "Compiler/Platform-specific topics": [[400, "compiler-platform-specific-topics"]], "Compiling CUDA Code": [[446, "compiling-cuda-code"]], "Compiling CUDA with clang": [[446, null]], "Compiling the LLVM Suite Source Code": [[463, "compiling-the-llvm-suite-source-code"]], "Complex Constants": [[479, "complex-constants"]], "ComplexPatterns": [[465, "complexpatterns"]], "Component Overview": [[478, "component-overview"]], "Composite Rules": [[465, "composite-rules"]], "Compute User Data": [[386, "compute-user-data"]], "Computing stack maps": [[461, "computing-stack-maps"]], "Concatenating Errors with joinErrors": [[507, "concatenating-errors-with-joinerrors"]], "Conclusions": [[552, "conclusions"], [562, "conclusions"], [573, "conclusions"]], "Concrete Bases and Deeper Hierarchies": [[473, "concrete-bases-and-deeper-hierarchies"]], "Configuration": [[533, "configuration"]], "Configuring CMake": [[471, "configuring-cmake"]], "Configuring External Tests": [[534, "configuring-external-tests"]], "Configuring LLVM to Build Fuzzers": [[460, "configuring-llvm-to-build-fuzzers"]], "Configuring the Module": [[558, "configuring-the-module"], [568, "configuring-the-module"]], "Considerations": [[392, "considerations"]], "Consistent Semantics": [[525, "consistent-semantics"]], "Constant Expressions": [[479, "constant-expressions"]], "Constant Lowering": [[465, "constant-lowering"]], "Constant Pool Indices": [[484, "constant-pool-indices"]], "Constants": [[479, "constants"]], "Constrained Floating-Point Intrinsics": [[479, "constrained-floating-point-intrinsics"]], "Constrained libm-equivalent Intrinsics": [[479, "constrained-libm-equivalent-intrinsics"]], "Constraining test execution": [[535, "constraining-test-execution"]], "Constraint Codes": [[479, "constraint-codes"]], "Contents": [[519, "contents"]], "Contextual markups": [[486, "contextual-markups"]], "Continuously Running and Finding Bugs": [[460, "continuously-running-and-finding-bugs"]], "Contributing to LLVM": [[448, null]], "Control Flow": [[401, "control-flow"]], "Control Flow Verification Tool Design Document": [[399, null]], "Controlling Fidelity": [[542, "controlling-fidelity"]], "Controlling options grouping": [[445, "controlling-options-grouping"]], "Controlling other formatting options": [[445, "controlling-other-formatting-options"]], "Controlling the number of occurrences required and allowed": [[445, "controlling-the-number-of-occurrences-required-and-allowed"]], "Controlling whether or not a value must be specified": [[445, "controlling-whether-or-not-a-value-must-be-specified"]], "Conventions": [[384, "conventions"], [385, "conventions"], [490, "conventions"]], "Conversion Operations": [[479, "conversion-operations"]], "Conversions": [[385, "conversions"]], "Copyright": [[452, "copyright"]], "Copyright, License, and Patents": [[452, "copyright-license-and-patents"]], "Core Pipeline": [[465, "core-pipeline"]], "CoroCleanup": [[449, "corocleanup"]], "CoroEarly": [[449, "coroearly"]], "CoroElide": [[449, "coroelide"]], "CoroSplit": [[449, "corosplit"]], "Coroutine Manipulation Intrinsics": [[449, "coroutine-manipulation-intrinsics"]], "Coroutine Promise": [[449, "coroutine-promise"]], "Coroutine Representation": [[449, "coroutine-representation"]], "Coroutine Structure Intrinsics": [[449, "coroutine-structure-intrinsics"]], "Coroutine Transformation": [[449, "coroutine-transformation"]], "Coroutine Transformation Passes": [[449, "coroutine-transformation-passes"]], "Coroutines by Example": [[449, "coroutines-by-example"]], "Coroutines in LLVM": [[449, null]], "Corpus": [[481, "corpus"]], "Counter": [[450, "id4"]], "Counter Expressions": [[450, "counter-expressions"]], "Counter:": [[450, "counter"], [450, "id9"]], "Coverage Mapping Header:": [[450, "coverage-mapping-header"]], "Crash debugger": [[397, "crash-debugger"]], "Crashing Bugs": [[474, "crashing-bugs"]], "Create Release Branch": [[472, "create-release-branch"]], "Creating an LLVM Project": [[508, null]], "Creating and inserting new Instructions": [[507, "creating-and-inserting-new-instructions"]], "Creating new registries": [[540, "creating-new-registries"]], "Cross Compilation and External Devices": [[533, "cross-compilation-and-external-devices"]], "Cross compiling": [[400, "cross-compiling"]], "Cross-Compiling LLVM": [[463, "cross-compiling-llvm"]], "Cross-Compiling from x86_64 to ARM": [[471, "cross-compiling-from-x86-64-to-arm"]], "Current Status": [[509, "current-status"]], "Currently": [[509, "currently"], [509, "id7"], [509, "id9"], [509, "id11"]], "Custom": [[539, "custom"]], "Custom GC Strategies": [[461, "custom-gc-strategies"]], "Custom SDNodes": [[465, "custom-sdnodes"]], "Custom Scalar": [[544, "custom-scalar"]], "Custom Suites": [[533, "custom-suites"]], "Custom formatting": [[507, "custom-formatting"]], "Custom lowering of intrinsics": [[461, "custom-lowering-of-intrinsics"]], "CustomEventMarker Records": [[543, "customeventmarker-records"]], "D": [[480, "d"]], "DAGISel": [[527, "dagisel"]], "DARPA HPCS SSCA#2 C/OpenMP reference implementation": [[510, "darpa-hpcs-ssca-2-c-openmp-reference-implementation"]], "DBI Stream Options": [[433, "dbi-stream-options"]], "DEFINE_ABBREV Encoding": [[393, "define-abbrev-encoding"]], "DESCRIPTION": [[405, "description"], [406, "description"], [407, "description"], [409, "description"], [410, "description"], [411, "description"], [413, "description"], [414, "description"], [415, "description"], [416, "description"], [417, "description"], [418, "description"], [418, "id2"], [418, "id4"], [418, "id7"], [418, "id10"], [419, "description"], [420, "description"], [421, "description"], [422, "description"], [423, "description"], [424, "description"], [425, "description"], [426, "description"], [427, "description"], [428, "description"], [429, "description"], [430, "description"], [431, "description"], [432, "description"], [434, "description"], [434, "id2"], [434, "id4"], [434, "id7"], [436, "description"], [437, "description"], [439, "description"], [442, "description"], [443, "description"], [444, "description"]], "DETAILED OUTPUT DEFINITIONS": [[415, "detailed-output-definitions"]], "DFAPacketizer": [[527, "dfapacketizer"]], "DIBasicType": [[479, "dibasictype"]], "DICompileUnit": [[479, "dicompileunit"]], "DICompositeType": [[479, "dicompositetype"]], "DIDerivedType": [[479, "diderivedtype"]], "DIEnumerator": [[479, "dienumerator"]], "DIExpression": [[479, "diexpression"]], "DIFFERENCES TO LLVM-READELF": [[437, "differences-to-llvm-readelf"]], "DIFile": [[479, "difile"]], "DIFlags": [[479, "diflags"]], "DIGlobalVariable": [[479, "diglobalvariable"]], "DIGlobalVariableExpression": [[479, "diglobalvariableexpression"]], "DIImportedEntity": [[479, "diimportedentity"]], "DILexicalBlock": [[479, "dilexicalblock"]], "DILexicalBlockFile": [[479, "dilexicalblockfile"]], "DILocalVariable": [[479, "dilocalvariable"]], "DILocation": [[479, "dilocation"]], "DIMacro": [[479, "dimacro"]], "DIMacroFile": [[479, "dimacrofile"]], "DINamespace": [[479, "dinamespace"]], "DIObjCProperty": [[479, "diobjcproperty"]], "DISubprogram": [[479, "disubprogram"]], "DISubrange": [[479, "disubrange"]], "DISubroutineType": [[479, "disubroutinetype"]], "DITemplateTypeParameter": [[479, "ditemplatetypeparameter"]], "DITemplateValueParameter": [[479, "ditemplatevalueparameter"]], "DLL Storage Classes": [[479, "dll-storage-classes"]], "DPP/DPP16 Modifiers": [[384, "dpp-dpp16-modifiers"]], "DPP16": [[0, "dpp16"]], "DPP8": [[0, "dpp8"]], "DPP8 Modifiers": [[384, "dpp8-modifiers"]], "DS": [[0, "ds"], [1, "ds"], [2, "ds"], [3, "ds"], [386, "ds"]], "DS Modifiers": [[384, "ds-modifiers"]], "DWARF": [[386, "dwarf"]], "DWARF Emission Setup": [[559, "dwarf-emission-setup"], [569, "dwarf-emission-setup"]], "Data Layout": [[479, "data-layout"], [490, "data-layout"]], "Data Records": [[393, "data-records"]], "Data Section": [[543, "data-section"]], "Data:": [[450, "data"]], "Debug information and optimizations": [[519, "debug-information-and-optimizations"]], "Debug information consumers": [[519, "debug-information-consumers"]], "Debugger Intrinsics": [[479, "debugger-intrinsics"]], "Debugger intrinsic functions": [[519, "debugger-intrinsic-functions"]], "Debugging": [[507, "debugging"]], "Debugging Information Extension for Objective C Properties": [[519, "debugging-information-extension-for-objective-c-properties"]], "Debugging Information tests": [[535, "debugging-information-tests"], [535, "id2"]], "Debugging JIT-ed Code With GDB": [[451, null]], "Debugging MCJIT-ed code": [[451, "debugging-mcjit-ed-code"]], "Debugging Tools": [[408, "debugging-tools"]], "Debugging information format": [[519, "debugging-information-format"], [519, "id5"]], "Debugging with XRay": [[542, null]], "Declarations": [[530, "declarations"]], "Default values": [[544, "default-values"]], "Defining a Register": [[539, "defining-a-register"]], "Defining a Register Class": [[539, "defining-a-register-class"]], "Definitions": [[480, "definitions"], [512, "definitions"], [522, "definitions"]], "Delayed Freelist": [[517, "delayed-freelist"]], "Deleting GlobalVariables": [[507, "deleting-globalvariables"]], "Deleting Instructions": [[507, "deleting-instructions"], [507, "schanges-deleting-sub"]], "Deoptimization Operand Bundles": [[479, "deoptimization-operand-bundles"]], "Dependencies": [[504, "dependencies"]], "Dependent Libs Named Metadata": [[479, "dependent-libs-named-metadata"]], "Dereferencing": [[401, "dereferencing"]], "Describing Aliasing Properties": [[459, "describing-aliasing-properties"]], "Describing Language Specific Properties": [[459, "describing-language-specific-properties"]], "Description": [[397, "description"], [433, "description"], [482, "description"]], "Design": [[517, "design"]], "Design Considerations": [[477, "design-considerations"]], "Design Guidelines": [[512, "design-guidelines"]], "Design Ideas": [[399, "design-ideas"]], "Design Overview": [[491, "design-overview"]], "Design Philosophy": [[397, "design-philosophy"], [482, "design-philosophy"]], "Design and Usage of the InAlloca Attribute": [[477, null]], "Design of MemorySSA": [[488, "design-of-memoryssa"]], "Design tradeoffs": [[488, "design-tradeoffs"]], "Designing Type Hiercharies and Polymorphic Interfaces": [[507, "designing-type-hiercharies-and-polymorphic-interfaces"]], "Details": [[519, "details"], [538, "details"]], "Detecting clang vs NVCC from code": [[446, "detecting-clang-vs-nvcc-from-code"]], "Determining absolute position with getPosition()": [[445, "determining-absolute-position-with-getposition"]], "Developer Policies": [[452, "developer-policies"]], "Developer Tools": [[408, "developer-tools"]], "Developing LLVM passes out of source": [[400, "developing-llvm-passes-out-of-source"]], "Developing libFuzzer": [[481, "developing-libfuzzer"]], "Development Process Documentation": [[545, "development-process-documentation"]], "Diagnostics": [[538, "diagnostics"]], "Dialect Differences Between clang and nvcc": [[446, "dialect-differences-between-clang-and-nvcc"]], "Dictionaries": [[481, "dictionaries"]], "Difference between install and install-distribution": [[398, "difference-between-install-and-install-distribution"]], "Different Pass styles": [[389, "different-pass-styles"]], "Differentiating variable kinds": [[511, "differentiating-variable-kinds"]], "Direct Stack Map Entries": [[522, "direct-stack-map-entries"]], "Directory Layout": [[463, "directory-layout"]], "Disadvantages": [[511, "disadvantages"]], "Disassembler": [[402, "disassembler"], [527, "disassembler"]], "Displaying and Analyzing Results": [[533, "displaying-and-analyzing-results"]], "Dissecting the Kernel": [[490, "dissecting-the-kernel"]], "Dissecting the sample:": [[450, "dissecting-the-sample"]], "Distinct Save and Suspend": [[449, "distinct-save-and-suspend"]], "Dither": [[510, "dither"]], "Do Not Use using namespace std": [[404, "do-not-use-using-namespace-std"]], "Do not use Braced Initializer Lists to Call a Constructor": [[404, "do-not-use-braced-initializer-lists-to-call-a-constructor"]], "Do not use RTTI or Exceptions": [[404, "do-not-use-rtti-or-exceptions"]], "Do not use Static Constructors": [[404, "do-not-use-static-constructors"]], "Docker basics": [[453, "docker-basics"]], "Document List": [[544, "document-list"]], "Does the University of Illinois Open Source License really qualify as an \"open source\" license?": [[457, "does-the-university-of-illinois-open-source-license-really-qualify-as-an-open-source-license"]], "Don't Expose System Headers": [[525, "don-t-expose-system-headers"]], "Don't Include System Headers": [[525, "don-t-include-system-headers"]], "Don't evaluate end() every time through a loop": [[404, "don-t-evaluate-end-every-time-through-a-loop"]], "Don't use default labels in fully covered switches over enumerations": [[404, "don-t-use-default-labels-in-fully-covered-switches-over-enumerations"]], "Don't use else after a return": [[404, "don-t-use-else-after-a-return"]], "Don't use inline when defining a function in a class definition": [[404, "don-t-use-inline-when-defining-a-function-in-a-class-definition"]], "Doxygen Use in Documentation Comments": [[404, "doxygen-use-in-documentation-comments"]], "Driver Changes and Closing Thoughts": [[553, "driver-changes-and-closing-thoughts"], [563, "driver-changes-and-closing-thoughts"], [574, "driver-changes-and-closing-thoughts"]], "Dynamic Allocation": [[402, "dynamic-allocation"]], "Dynamically adding command line options": [[445, "dynamically-adding-command-line-options"]], "EC Substream": [[495, "ec-substream"]], "ELF SPECIFIC OPTIONS": [[437, "elf-specific-options"]], "ELF-Dependent": [[456, "elf-dependent"]], "ELF-SPECIFIC OPTIONS": [[431, "elf-specific-options"]], "END_BLOCK Encoding": [[393, "end-block-encoding"]], "ENTER_SUBBLOCK Encoding": [[393, "enter-subblock-encoding"]], "EXAMPLE": [[419, "example"]], "EXAMPLE 1: benchmarking instructions": [[424, "example-1-benchmarking-instructions"]], "EXAMPLE 2: benchmarking a custom code snippet": [[424, "example-2-benchmarking-a-custom-code-snippet"]], "EXAMPLE 3: analysis": [[424, "example-3-analysis"]], "EXAMPLES": [[417, "examples"], [434, "examples"], [442, "examples"]], "EXECUTION OPTIONS": [[409, "execution-options"]], "EXIT STATUS": [[405, "exit-status"], [406, "exit-status"], [407, "exit-status"], [409, "exit-status"], [410, "exit-status"], [411, "exit-status"], [413, "exit-status"], [414, "exit-status"], [415, "exit-status"], [416, "exit-status"], [417, "exit-status"], [418, "exit-status"], [419, "exit-status"], [421, "exit-status"], [422, "exit-status"], [423, "exit-status"], [424, "exit-status"], [425, "exit-status"], [427, "exit-status"], [429, "exit-status"], [430, "exit-status"], [431, "exit-status"], [434, "exit-status"], [436, "exit-status"], [437, "exit-status"], [439, "exit-status"], [442, "exit-status"], [443, "exit-status"], [444, "exit-status"]], "EXP": [[0, "exp"], [1, "exp"], [2, "exp"], [3, "exp"]], "EXP Modifiers": [[384, "exp-modifiers"]], "EXPORT COMMAND": [[418, "export-command"]], "Efficiency": [[477, "efficiency"]], "Efficiency Issues": [[389, "efficiency-issues"]], "Element Wise Atomic Memory Intrinsics": [[479, "element-wise-atomic-memory-intrinsics"]], "Embedded Module": [[484, "embedded-module"]], "Embedding LLVM in your project": [[400, "embedding-llvm-in-your-project"]], "Emit Object Code": [[558, "emit-object-code"], [568, "emit-object-code"]], "Emitting assembly code: GCMetadataPrinter": [[461, "emitting-assembly-code-gcmetadataprinter"]], "Emitting function stack size information": [[402, "emitting-function-stack-size-information"]], "Emitting remark diagnostics in the object file": [[515, "emitting-remark-diagnostics-in-the-object-file"]], "Enabling optimization remarks": [[515, "enabling-optimization-remarks"]], "Encoded data:": [[450, "encoded-data"]], "Encoding": [[450, "encoding"]], "Encoding Suffices": [[383, "encoding-suffices"]], "End-user Options": [[410, "end-user-options"]], "EndOfBuffer Records": [[543, "endofbuffer-records"]], "Ending Execution with llvm_shutdown()": [[507, "ending-execution-with-llvm-shutdown"]], "Engine Creation": [[483, "engine-creation"]], "Error Handling": [[544, "error-handling"]], "Error Types": [[517, "error-types"]], "Error handling": [[507, "error-handling"]], "Example": [[451, "example"]], "Example (custom deallocation function):": [[449, "example-custom-deallocation-function"]], "Example (final suspend point):": [[449, "example-final-suspend-point"]], "Example (normal suspend point):": [[449, "example-normal-suspend-point"]], "Example (standard deallocation functions):": [[449, "example-standard-deallocation-functions"]], "Example Section": [[521, "example-section"]], "Example Subsection": [[521, "example-subsection"]], "Example Subsubsection": [[521, "example-subsubsection"]], "Example Usage": [[492, "example-usage"]], "Example implementations of getAnalysisUsage": [[540, "example-implementations-of-getanalysisusage"]], "Example of link time optimization": [[466, "example-of-link-time-optimization"], [482, "example-of-link-time-optimization"]], "Example with clang": [[463, "example-with-clang"]], "Example:": [[449, "example"], [449, "id24"], [449, "id43"], [449, "id47"], [479, "example"], [479, "id32"], [479, "id37"], [479, "id43"], [479, "id48"], [479, "id53"], [479, "id58"], [479, "id63"], [479, "id68"], [479, "id75"], [479, "id83"], [479, "id88"], [479, "id93"], [479, "id98"], [479, "id103"], [479, "id108"], [479, "id113"], [479, "id118"], [479, "id123"], [479, "id128"], [479, "id133"], [479, "id138"], [479, "id143"], [479, "id148"], [479, "id153"], [479, "id158"], [479, "id163"], [479, "id168"], [479, "id173"], [479, "id178"], [479, "id183"], [479, "id188"], [479, "id193"], [479, "id198"], [479, "id203"], [479, "id213"], [479, "id218"], [479, "id223"], [479, "id228"], [479, "id233"], [479, "id238"], [479, "id243"], [479, "id248"], [479, "id253"], [479, "id258"], [479, "id263"], [479, "id268"], [479, "id273"], [479, "id278"], [479, "id283"], [479, "id288"], [479, "id293"], [479, "id298"], [479, "id303"], [479, "id308"], [479, "id313"], [479, "id318"], [479, "id323"], [479, "id328"], [479, "id334"], [479, "id341"], [479, "id348"], [479, "id574"], [479, "id578"]], "Example: C-level intrinsics -> assembly": [[392, "example-c-level-intrinsics-assembly"]], "Examples": [[479, "id613"], [479, "id618"], [479, "id623"], [479, "id628"], [479, "id633"], [479, "id638"], [479, "id643"], [481, "examples"]], "Exception Handling Frame": [[454, "exception-handling-frame"]], "Exception Handling Intrinsics": [[454, "exception-handling-intrinsics"], [479, "exception-handling-intrinsics"]], "Exception Handling in LLVM": [[454, null]], "Exception Handling support on the target": [[454, "exception-handling-support-on-the-target"]], "Exception Handling using the Windows Runtime": [[454, "exception-handling-using-the-windows-runtime"]], "Exception Tables": [[454, "exception-tables"]], "Exceptions": [[477, "exceptions"]], "Executing PTX": [[490, "executing-ptx"]], "Executing the Tests": [[400, "executing-the-tests"]], "Existing alias analysis implementations and clients": [[389, "existing-alias-analysis-implementations-and-clients"]], "Expand": [[539, "expand"]], "Experimental Statepoint Intrinsics": [[479, "experimental-statepoint-intrinsics"]], "Experimental Vector Reduction Intrinsics": [[479, "experimental-vector-reduction-intrinsics"]], "Explicit Representation": [[524, "explicit-representation"]], "Exploiting external storage": [[445, "exploiting-external-storage"]], "Expression Code Generation": [[553, "expression-code-generation"], [563, "expression-code-generation"], [574, "expression-code-generation"]], "Expression Data Type": [[385, "expression-data-type"]], "Expressions": [[385, "expressions"], [385, "amdgpu-synid-exp-conv"]], "Extending LLVM: Adding instructions, intrinsics, types, etc.": [[455, null]], "Extension Guide": [[445, "extending-the-library"]], "External Open Source Projects Using LLVM 9": [[513, "external-open-source-projects-using-llvm-9"]], "External Suites": [[533, "external-suites"]], "External Symbol Operands": [[484, "external-symbol-operands"]], "External Tutorials": [[580, "external-tutorials"]], "Extra Statistics to Further Diagnose Performance Issues": [[429, "extra-statistics-to-further-diagnose-performance-issues"]], "Extra files": [[535, "extra-files"]], "F": [[480, "f"]], "FAQ": [[481, "faq"]], "FFmpeg": [[510, "ffmpeg"]], "FILE FORMAT": [[413, "file-format"]], "FLAT": [[0, "flat"], [1, "flat"], [2, "flat"], [3, "flat"], [386, "flat"]], "FLAT Modifiers": [[384, "flat-modifiers"]], "FLOATING POINT OPTIONS": [[411, "floating-point-options"]], "FTensors": [[510, "ftensors"]], "FUNCTION_BLOCK Contents": [[393, "function-block-contents"]], "Fallible constructors": [[507, "fallible-constructors"]], "Fast-Math Flags": [[479, "fast-math-flags"]], "FastISel": [[527, "fastisel"]], "FastISel Replacement": [[465, "fastisel-replacement"]], "FaultMaps and implicit checks": [[458, null]], "Feature detection": [[510, "feature-detection"]], "Features": [[491, "features"], [538, "features"]], "File Headers": [[404, "file-headers"]], "File ID Mapping": [[450, "file-id-mapping"]], "File ID:": [[450, "file-id"]], "File Info Substream": [[495, "file-info-substream"]], "File Layout": [[499, "file-layout"], [503, "file-layout"]], "File inclusion": [[529, "file-inclusion"]], "File scope entities": [[529, "file-scope-entities"]], "FileCheck - Flexible pattern matching file verifier": [[405, null]], "FileCheck Numeric Substitution Blocks": [[405, "filecheck-numeric-substitution-blocks"]], "FileCheck Pseudo Numeric Variables": [[405, "filecheck-pseudo-numeric-variables"]], "FileCheck Regex Matching Syntax": [[405, "filecheck-regex-matching-syntax"]], "FileCheck String Substitution Blocks": [[405, "filecheck-string-substitution-blocks"]], "Filing a report": [[516, "filing-a-report"]], "Filtering and Sorting Options": [[433, "filtering-and-sorting-options"]], "Final Preparations": [[483, "final-preparations"]], "Final Suspend": [[449, "final-suspend"]], "Finding call sites: a slightly more complex example": [[507, "finding-call-sites-a-slightly-more-complex-example"]], "Finding potential reviewers": [[506, "finding-potential-reviewers"]], "Fine grained debug info with DEBUG_TYPE and the -debug-only option": [[507, "fine-grained-debug-info-with-debug-type-and-the-debug-only-option"]], "FireHose": [[510, "firehose"]], "First Class Types": [[479, "first-class-types"]], "Fixed (preassigned) registers": [[402, "fixed-preassigned-registers"]], "Fixed Lookup": [[519, "fixed-lookup"]], "Fixed Point Arithmetic Intrinsics": [[479, "fixed-point-arithmetic-intrinsics"]], "Fixed Size Arrays": [[507, "fixed-size-arrays"]], "Fixed Width Integers": [[393, "fixed-width-value"]], "Fixing errors": [[519, "fixing-errors"]], "Flags that control numerical code": [[446, "flags-that-control-numerical-code"]], "Flame Graph Generation": [[542, "flame-graph-generation"]], "Flat Scratch": [[386, "flat-scratch"]], "Flight Data Recorder Mode": [[541, "flight-data-recorder-mode"]], "Floating Point Denorm Mode Enumeration Values": [[386, "amdgpu-amdhsa-floating-point-denorm-mode-enumeration-values-table"]], "Floating Point Rounding Mode Enumeration Values": [[386, "amdgpu-amdhsa-floating-point-rounding-mode-enumeration-values-table"]], "Floating-Point Environment": [[479, "floating-point-environment"]], "Floating-Point Inline Constants": [[385, "floating-point-inline-constants"]], "Floating-Point Literals": [[385, "floating-point-literals"]], "Floating-Point Numbers": [[385, "floating-point-numbers"]], "Floating-Point Types": [[479, "floating-point-types"]], "Flow Mapping": [[544, "flow-mapping"]], "Flow Sequence": [[544, "flow-sequence"]], "For developers to commit changes from Git": [[463, "for-developers-to-commit-changes-from-git"]], "Fork mode": [[481, "fork-mode"]], "Format Background": [[519, "format-background"]], "Format Grammar and Invariants": [[543, "format-grammar-and-invariants"]], "Format Lambdas Like Blocks Of Code": [[404, "format-lambdas-like-blocks-of-code"]], "Formatting strings (the formatv function)": [[507, "formatting-strings-the-formatv-function"]], "Fortran function information": [[519, "fortran-function-information"]], "Fortran specific debug information": [[519, "fortran-specific-debug-information"]], "Fragile tests": [[535, "fragile-tests"]], "Frame Layout": [[402, "frame-layout"]], "FreePOOMA": [[510, "freepooma"]], "Frequently-used CMake variables": [[400, "frequently-used-cmake-variables"]], "Front-end bugs": [[474, "front-end-bugs"]], "Full Code Listing": [[546, "full-code-listing"], [547, "full-code-listing"], [548, "full-code-listing"], [549, "full-code-listing"], [550, "full-code-listing"], [552, "full-code-listing"], [553, "full-code-listing"], [554, "full-code-listing"], [555, "full-code-listing"], [556, "full-code-listing"], [557, "id2"], [558, "full-code-listing"], [559, "full-code-listing"], [562, "full-code-listing"], [563, "full-code-listing"], [564, "full-code-listing"], [565, "full-code-listing"], [566, "full-code-listing"], [567, "id2"], [568, "full-code-listing"], [569, "full-code-listing"], [573, "full-code-listing"], [574, "full-code-listing"], [575, "full-code-listing"], [576, "full-code-listing"], [577, "full-code-listing"], [578, "id2"]], "Funclet Operand Bundles": [[479, "funclet-operand-bundles"]], "Funclet parent tokens": [[454, "funclet-parent-tokens"]], "Funclet transitions": [[454, "funclet-transitions"]], "Function Attributes": [[479, "function-attributes"]], "Function Code Generation": [[553, "function-code-generation"], [563, "function-code-generation"], [574, "function-code-generation"]], "Function Entry Counts": [[395, "function-entry-counts"]], "Function Flags": [[479, "function-flags"]], "Function Record Order": [[543, "function-record-order"]], "Function Records": [[543, "function-records"]], "Function Summary": [[479, "function-summary"]], "Function Type": [[479, "function-type"]], "Function calls": [[402, "function-calls"]], "Function record:": [[450, "function-record"]], "Function template": [[507, "function-template"]], "FunctionComparator::cmpType": [[489, "functioncomparator-cmptype"]], "FunctionComparator::compare(void)": [[489, "functioncomparator-compare-void"]], "Functions": [[479, "functions"], [559, "functions"], [569, "functions"]], "Functions Vs Macros": [[401, "functions-vs-macros"]], "Functions comparison": [[489, "functions-comparison"]], "Further Exploration": [[542, "further-exploration"]], "Further Help": [[508, "further-help"]], "Future Features": [[491, "future-features"]], "Future Work": [[541, "future-work"]], "Future directions for the SelectionDAG": [[402, "future-directions-for-the-selectiondag"]], "Future extensions planned": [[540, "future-extensions-planned"]], "Fuzz Target": [[481, "fuzz-target"]], "Fuzzer Usage": [[481, "fuzzer-usage"]], "Fuzzer-friendly build mode": [[481, "fuzzer-friendly-build-mode"]], "Fuzzing LLVM libraries and tools": [[460, null]], "G": [[480, "g"]], "GC Transition Operand Bundles": [[479, "gc-transition-operand-bundles"]], "GC Transitions": [[524, "gc-transitions"]], "GCOV COMMAND": [[418, "gcov-command"]], "GDB Version": [[451, "gdb-version"]], "GENERAL AND MULTI-FORMAT OPTIONS": [[437, "general-and-multi-format-options"]], "GENERAL OPTIONS": [[409, "general-options"], [411, "general-options"]], "GENERIC AND CROSS-PLATFORM OPTIONS": [[431, "generic-and-cross-platform-options"]], "GNU binutils replacements": [[408, "gnu-binutils-replacements"]], "Garbage Collected Stack Frames": [[560, "garbage-collected-stack-frames"], [570, "garbage-collected-stack-frames"], [579, "garbage-collected-stack-frames"]], "Garbage Collection Safepoints in LLVM": [[524, null]], "Garbage Collection with LLVM": [[461, null]], "Garbage Collector Strategy Names": [[479, "garbage-collector-strategy-names"]], "General": [[391, "general"], [543, "general"]], "General Assembly Syntax": [[456, "general-assembly-syntax"]], "General BackEnds": [[527, "general-backends"]], "General Distribution Guidance": [[398, "general-distribution-guidance"]], "General Information": [[507, "general-information"]], "General Intrinsics": [[479, "general-intrinsics"]], "General suggestions": [[487, "general-suggestions"]], "Generating Test Output": [[534, "generating-test-output"]], "Generating safe points": [[461, "generating-safe-points"]], "Generic Algorithms": [[510, "generic-algorithms"]], "Generic Instructions": [[465, "generic-instructions"]], "Generic Machine IR": [[465, "generic-machine-ir"]], "Generic Random Fuzzing": [[460, "generic-random-fuzzing"]], "Generic Virtual Registers": [[465, "generic-virtual-registers"]], "Getting Started": [[464, "getting-started"], [481, "getting-started"], [492, "getting-started"]], "Getting Started Quickly (A Summary)": [[463, "getting-started-quickly-a-summary"]], "Getting Started with LLVM": [[463, "getting-started-with-llvm"]], "Getting Started with the LLVM System": [[463, null]], "Getting Started with the LLVM System using Microsoft Visual Studio": [[464, null]], "Getting Traces": [[542, "getting-traces"]], "Getting a Modern Host C++ Toolchain": [[463, "getting-a-modern-host-c-toolchain"]], "Github Repository Description": [[509, "github-repository-description"]], "Global Attributes": [[479, "global-attributes"]], "Global Instruction Selection": [[465, null]], "Global Internal Table": [[386, "global-internal-table"]], "Global Structures Alias Analysis": [[538, "global-structures-alias-analysis"]], "Global Symbols": [[493, "global-symbols"]], "Global Value Operands": [[484, "global-value-operands"]], "Global Value Summary Entry": [[479, "global-value-summary-entry"]], "Global Variable Summary": [[479, "global-variable-summary"]], "Global Variable and Function Addresses": [[479, "global-variable-and-function-addresses"]], "Global Variables": [[479, "global-variables"]], "GnuPG": [[510, "gnupg"]], "Goals and non-goals": [[461, "goals-and-non-goals"]], "Graph": [[510, "graph"]], "Graph500 reference implementations": [[510, "graph500-reference-implementations"]], "Graphics User Data": [[386, "graphics-user-data"]], "Grouping options into categories": [[445, "grouping-options-into-categories"]], "Guard widening:": [[479, "guard-widening"]], "Guidelines": [[521, "guidelines"]], "H": [[480, "h"]], "HCC": [[386, "hcc"]], "HOW LLVM-MCA WORKS": [[429, "how-llvm-mca-works"]], "HSA AQL Queue": [[386, "hsa-aql-queue"]], "HSA Signals": [[386, "hsa-signals"]], "Hacks": [[471, "hacks"]], "Half Precision Floating-Point Intrinsics": [[479, "half-precision-floating-point-intrinsics"]], "Handling two address instructions": [[402, "handling-two-address-instructions"]], "Handy utilities": [[491, "handy-utilities"]], "Hardware": [[447, "hardware"], [463, "hardware"], [464, "hardware"]], "HasGlobalAliases, removeUsers": [[489, "hasglobalaliases-removeusers"]], "Hash Tables": [[519, "hash-tables"]], "Header": [[386, "header"], [450, "header"]], "Header Layout": [[519, "header-layout"]], "Header Section": [[543, "header-section"]], "Heap Allocated Arrays": [[507, "heap-allocated-arrays"]], "Helpful Hints for Common Operations": [[507, "helpful-hints-for-common-operations"]], "Helpful Information About LLVM": [[448, "helpful-information-about-llvm"]], "Hex types": [[544, "hex-types"]], "Hexagon": [[447, "hexagon"]], "Hiding an option from -help output": [[445, "hiding-an-option-from-help-output"]], "High Level Interface": [[525, "high-level-interface"]], "High Level Overview": [[450, "high-level-overview"]], "High Level Structure": [[479, "high-level-structure"], [484, "high-level-structure"]], "High Performance Geometric Multigrid": [[510, "high-performance-geometric-multigrid"]], "High-level Design": [[512, "high-level-design"]], "Hopefully you won't need to be this deep": [[521, "hopefully-you-won-t-need-to-be-this-deep"]], "Host C++ Toolchain, both Compiler and Standard Library": [[463, "host-c-toolchain-both-compiler-and-standard-library"]], "How To Add A Constrained Floating-Point Intrinsic": [[387, null]], "How To Add Your Build Configuration To LLVM Buildbot Infrastructure": [[467, null]], "How To Build Clang and LLVM with Profile-Guided Optimizations": [[469, null]], "How To Build On ARM": [[468, null]], "How To Cross-Compile Clang/LLVM using Clang/LLVM": [[471, null]], "How To Release LLVM To The Public": [[472, null]], "How To Use Attributes": [[475, null]], "How To Use Instruction Mappings": [[476, null]], "How To Validate a New Release": [[514, null]], "How can I tell if my front-end is following the rules?": [[462, "how-can-i-tell-if-my-front-end-is-following-the-rules"]], "How does VLA addressing work with GEPs?": [[462, "how-does-vla-addressing-work-with-geps"]], "How good is my fuzzer?": [[481, "how-good-is-my-fuzzer"]], "How is GEP different from ptrtoint, arithmetic, and inttoptr?": [[462, "how-is-gep-different-from-ptrtoint-arithmetic-and-inttoptr"]], "How it works": [[523, "how-it-works"]], "How portable is the LLVM source code?": [[457, "how-portable-is-the-llvm-source-code"]], "How registers are represented in LLVM": [[402, "how-registers-are-represented-in-llvm"]], "How the packetization tables are generated and used": [[402, "how-the-packetization-tables-are-generated-and-used"]], "How to Add Process and Library Symbols to the JITDylibs": [[491, "how-to-add-process-and-library-symbols-to-the-jitdylibs"]], "How to Cross Compile Compiler-rt Builtins For Arm": [[470, null]], "How to Submit a Patch": [[448, "how-to-submit-a-patch"]], "How to build it": [[466, "how-to-build-it"]], "How to create JITDylibs and set up linkage relationships": [[491, "how-to-create-jitdylibs-and-set-up-linkage-relationships"]], "How to do it?": [[489, "how-to-do-it"]], "How to implement cmpValues?": [[489, "how-to-implement-cmpvalues"]], "How to manage symbol strings": [[491, "how-to-manage-symbol-strings"]], "How to pick the date?": [[487, "how-to-pick-the-date"]], "How to set up LLVM-style RTTI for your class hierarchy": [[473, null]], "How to start LLVM Social in your town": [[487, null]], "How to submit an LLVM bug report": [[474, null]], "How to use ThreadSafeModule and ThreadSafeContext": [[491, "how-to-use-threadsafemodule-and-threadsafecontext"]], "How to write a back-end": [[527, "how-to-write-a-back-end"]], "How variable location metadata is transformed during CodeGen": [[519, "how-variable-location-metadata-is-transformed-during-codegen"]], "How-tos": [[491, "how-tos"]], "HydroBench": [[510, "hydrobench"]], "I": [[480, "i"]], "I Still Can't Find What I'm Looking For": [[459, "i-still-can-t-find-what-i-m-looking-for"]], "I don't understand the GetElementPtr instruction. Help!": [[457, "i-don-t-understand-the-getelementptr-instruction-help"]], "I'd like to write a self-hosting LLVM compiler. How should I interface with the LLVM middle-end optimizers and back-end code generators?": [[457, "i-d-like-to-write-a-self-hosting-llvm-compiler-how-should-i-interface-with-the-llvm-middle-end-optimizers-and-back-end-code-generators"]], "I'm writing a backend for a target which needs custom lowering for GEP. How do I do this?": [[462, "i-m-writing-a-backend-for-a-target-which-needs-custom-lowering-for-gep-how-do-i-do-this"]], "IBM - Official manuals and docs": [[447, "ibm-official-manuals-and-docs"]], "IFuncs": [[479, "ifuncs"]], "IR Backwards Compatibility": [[452, "ir-backwards-compatibility"]], "IR Best Practices": [[459, "ir-best-practices"]], "IRC": [[545, "irc"]], "IRTranslator": [[465, "irtranslator"]], "Identifiers": [[479, "identifiers"]], "Identifying GC roots on the stack": [[461, "gcroot"]], "If Conversion": [[538, "if-conversion"]], "If \u201cF\u201d could not be overridden, fix it!": [[489, "if-f-could-not-be-overridden-fix-it"]], "If \u201cF\u201d may be overridden": [[489, "if-f-may-be-overridden"]], "If, ElseIf, Else": [[401, "if-elseif-else"]], "If/Then/Else": [[555, "if-then-else"], [565, "if-then-else"], [576, "if-then-else"]], "Image and Samplers": [[386, "image-and-samplers"]], "Image processing": [[510, "image-processing"]], "Immediate Operands": [[484, "immediate-operands"]], "Implement a subclass of TargetInstrInfo": [[539, "implement-a-subclass-of-targetinstrinfo"]], "Implement a subclass of TargetRegisterInfo": [[539, "implement-a-subclass-of-targetregisterinfo"]], "Implementation": [[392, "implementation"]], "Implementation Details": [[518, "implementation-details"]], "Implementation:": [[479, "implementation"], [479, "id42"]], "Implementation: Getting from mass and scale to frequency": [[394, "implementation-getting-from-mass-and-scale-to-frequency"]], "Implementation: a series of DAGs": [[394, "implementation-a-series-of-dags"]], "Implementing Analysis Groups": [[540, "implementing-analysis-groups"]], "Implementing a Native Assembler": [[402, "implementing-a-native-assembler"]], "Implementing a collector plugin": [[461, "implementing-a-collector-plugin"]], "Implementing portable offsetof/sizeof": [[560, "implementing-portable-offsetof-sizeof"], [570, "implementing-portable-offsetof-sizeof"], [579, "implementing-portable-offsetof-sizeof"]], "Important Derived Types": [[507, "important-derived-types"]], "Important Public Members of the BasicBlock class": [[507, "important-public-members-of-the-basicblock-class"]], "Important Public Members of the Function": [[507, "important-public-members-of-the-function"]], "Important Public Members of the GlobalValue class": [[507, "important-public-members-of-the-globalvalue-class"]], "Important Public Members of the GlobalVariable class": [[507, "important-public-members-of-the-globalvariable-class"]], "Important Public Members of the Instruction class": [[507, "important-public-members-of-the-instruction-class"]], "Important Public Members of the Module class": [[507, "important-public-members-of-the-module-class"]], "Important Public Members of the User class": [[507, "important-public-members-of-the-user-class"]], "Important Public Members of the Value class": [[507, "important-public-members-of-the-value-class"]], "Important Public Methods": [[507, "important-public-methods"]], "Important Subclasses of Constant": [[507, "important-subclasses-of-constant"]], "Important Subclasses of the Instruction class": [[507, "important-subclasses-of-the-instruction-class"]], "Important and useful LLVM APIs": [[507, "important-and-useful-llvm-apis"]], "Importing local repositories": [[509, "importing-local-repositories"]], "In what language is LLVM written?": [[457, "in-what-language-is-llvm-written"]], "Incorrect code generation": [[474, "incorrect-code-generation"]], "Incremental Development": [[452, "incremental-development"]], "Indent Code Consistently": [[404, "indent-code-consistently"]], "Indices and tables": [[545, "indices-and-tables"]], "Indirect inputs and outputs": [[479, "indirect-inputs-and-outputs"]], "IndirectBrInst": [[395, "indirectbrinst"]], "Inductions": [[538, "inductions"]], "Initial Kernel Execution State": [[386, "initial-kernel-execution-state"]], "Initial SelectionDAG Construction": [[402, "initial-selectiondag-construction"]], "Initializing roots to null": [[461, "initializing-roots-to-null"]], "Inline Asm": [[402, "inline-asm"]], "Inline Asm Constraint String": [[479, "inline-asm-constraint-string"]], "Inline Asm Metadata": [[479, "inline-asm-metadata"]], "Inline Assembler Expressions": [[479, "inline-assembler-expressions"]], "Inline Constants": [[385, "inline-constants"]], "Input": [[544, "input"]], "Input constraints": [[479, "input-constraints"]], "Installing and Using": [[471, "installing-and-using"]], "InstrInfo": [[527, "instrinfo"]], "InstrMapping Class Overview": [[476, "instrmapping-class-overview"]], "Instruction Alias Processing": [[402, "instruction-alias-processing"]], "Instruction Aliases": [[402, "instruction-aliases"]], "Instruction Annotations": [[486, "instruction-annotations"]], "Instruction Dispatch": [[429, "instruction-dispatch"]], "Instruction Examples": [[386, "instruction-examples"]], "Instruction Flags": [[484, "instruction-flags"]], "Instruction Flow": [[429, "instruction-flow"]], "Instruction Issue": [[429, "instruction-issue"]], "Instruction Matching": [[402, "instruction-matching"]], "Instruction Operand Mapping": [[539, "instruction-operand-mapping"]], "Instruction Operand Name Mapping": [[539, "instruction-operand-name-mapping"]], "Instruction Operand Types": [[539, "instruction-operand-types"]], "Instruction Parsing": [[402, "instruction-parsing"]], "Instruction Reference": [[479, "instruction-reference"]], "Instruction Relation Mapping": [[539, "instruction-relation-mapping"]], "Instruction Scheduling": [[519, "instruction-scheduling"], [539, "instruction-scheduling"]], "Instruction Selection": [[402, "instruction-selection-section"]], "Instruction Selector": [[539, "instruction-selector"]], "Instruction Set": [[539, "instruction-set"]], "Instruction Threshold": [[542, "instruction-threshold"]], "Instruction encoding (arithmetic and jump)": [[402, "instruction-encoding-arithmetic-and-jump"]], "Instruction encoding (load, store)": [[402, "instruction-encoding-load-store"]], "Instruction folding": [[402, "instruction-folding"]], "Instruction naming": [[402, "instruction-naming"]], "InstructionSelect": [[465, "instructionselect"]], "Instructions": [[0, "instructions"], [1, "instructions"], [2, "instructions"], [3, "instructions"], [382, "instructions"], [383, "instructions"], [386, "instructions"]], "Instrumentation Attributes": [[542, "instrumentation-attributes"]], "Instrumenting your C/C++/Objective-C Application": [[541, "instrumenting-your-c-c-objective-c-application"]], "Integer Inline Constants": [[385, "integer-inline-constants"]], "Integer Literals": [[385, "integer-literals"]], "Integer Numbers": [[385, "integer-numbers"]], "Integer Type": [[479, "integer-type"]], "Intel IA-32-specific Options": [[410, "intel-ia-32-specific-options"]], "Intended Usage": [[477, "intended-usage"]], "Interaction and relationship between User and Use objects": [[507, "interaction-and-relationship-between-user-and-use-objects"]], "Interfaces which may be specified": [[389, "interfaces-which-may-be-specified"]], "Internal vs External Storage": [[445, "internal-vs-external-storage"]], "Interoperability with std::error_code and ErrorOr": [[507, "interoperability-with-std-error-code-and-erroror"]], "Intrinsic": [[527, "intrinsic"]], "Intrinsic Functions": [[479, "intrinsic-functions"]], "Intrinsic Global Variables": [[479, "intrinsic-global-variables"]], "IntrinsicID Operands": [[484, "intrinsicid-operands"]], "Intrinsics": [[449, "intrinsics"], [522, "intrinsics"], [524, "intrinsics"]], "Introduction - Achieving consistency in how we deal with bug reports": [[396, "introduction-achieving-consistency-in-how-we-deal-with-bug-reports"]], "Introduction - Got bugs?": [[474, "introduction-got-bugs"]], "Introduction --- What is a pass?": [[540, "introduction-what-is-a-pass"]], "Introduction and Quickstart": [[521, "introduction-and-quickstart"]], "Introduction and Warning": [[455, "introduction-and-warning"]], "Introduction to SelectionDAGs": [[402, "introduction-to-selectiondags"]], "Introduction to YAML": [[544, "introduction-to-yaml"]], "Introduction to YAML I/O": [[544, "introduction-to-yaml-i-o"]], "Introduction to the LLVM remark diagnostics": [[515, "introduction-to-the-llvm-remark-diagnostics"]], "Invalidation and updating": [[488, "invalidation-and-updating"]], "Invoking clang": [[446, "invoking-clang"]], "Is Generally Reliable": [[402, "is-generally-reliable"]], "Itanium (ia64)": [[447, "itanium-ia64"]], "Itanium ABI Zero-cost Exception Handling": [[454, "itanium-abi-zero-cost-exception-handling"]], "Iterating over def-use & use-def chains": [[507, "iterating-over-def-use-use-def-chains"]], "Iterating over predecessors & successors of blocks": [[507, "iterating-over-predecessors-successors-of-blocks"]], "Iterating over the BasicBlock in a Function": [[507, "iterating-over-the-basicblock-in-a-function"]], "Iterating over the Instruction in a BasicBlock": [[507, "iterating-over-the-instruction-in-a-basicblock"]], "Iterating over the Instruction in a Function": [[507, "iterating-over-the-instruction-in-a-function"]], "Iterative Transformations": [[465, "iterative-transformations"]], "JIT API Basics": [[546, "jit-api-basics"]], "JIT Support": [[402, "jit-support"], [539, "jit-support"]], "JSON": [[527, "json"]], "Jump-table Index Operands": [[484, "jump-table-index-operands"]], "Kaleidoscope: Adding Debug Information": [[559, null], [569, null]], "Kaleidoscope: Adding JIT and Optimizer Support": [[554, null], [564, null], [575, null]], "Kaleidoscope: Code generation to LLVM IR": [[553, null], [563, null], [574, null]], "Kaleidoscope: Compiling to Object Code": [[558, null], [568, null]], "Kaleidoscope: Conclusion and other useful LLVM tidbits": [[560, null], [570, null], [579, null]], "Kaleidoscope: Extending the Language: Control Flow": [[555, null], [565, null], [576, null]], "Kaleidoscope: Extending the Language: Mutable Variables": [[557, null], [567, null], [578, null]], "Kaleidoscope: Extending the Language: User-defined Operators": [[556, null], [566, null], [577, null]], "Kaleidoscope: Implementing a Language with LLVM": [[580, "kaleidoscope-implementing-a-language-with-llvm"]], "Kaleidoscope: Implementing a Language with LLVM in Objective Caml": [[580, "kaleidoscope-implementing-a-language-with-llvm-in-objective-caml"]], "Kaleidoscope: Implementing a Parser and AST": [[552, null], [562, null], [573, null]], "Kaleidoscope: Kaleidoscope Introduction and the Lexer": [[561, null]], "Kaleidoscope: Tutorial Introduction and the Lexer": [[551, null], [572, null]], "KaleidoscopeJIT": [[546, "kaleidoscopejit"]], "Keep \"Internal\" Headers Private": [[404, "keep-internal-headers-private"]], "Keep the current coding standard": [[511, "keep-the-current-coding-standard"]], "Keeping LLVM Portable": [[525, "keeping-llvm-portable"]], "Keeping git blame usable": [[511, "keeping-git-blame-usable"]], "Kernel Descriptor": [[386, "kernel-descriptor"]], "Kernel Descriptor for GFX6-GFX10": [[386, "kernel-descriptor-for-gfx6-gfx10"], [386, "amdgpu-amdhsa-kernel-descriptor-gfx6-gfx10-table"]], "Kernel Dispatch": [[386, "kernel-dispatch"]], "Kernel Metadata": [[490, "kernel-metadata"]], "Kernel Prolog": [[386, "kernel-prolog"]], "Kicking the Tires": [[556, "kicking-the-tires"], [566, "kicking-the-tires"], [577, "kicking-the-tires"]], "Known Issues": [[513, "known-issues"]], "Known Problems": [[528, "known-problems"]], "Kokkos": [[510, "kokkos"]], "L": [[480, "l"]], "LDC - the LLVM-based D compiler": [[513, "ldc-the-llvm-based-d-compiler"]], "LDR and LD1": [[392, "ldr-and-ld1"]], "LEB128": [[450, "leb128"]], "LF_ARGLIST (0x1201)": [[494, "lf-arglist-0x1201"]], "LF_ARRAY (0x1503)": [[494, "lf-array-0x1503"]], "LF_BCLASS (0x1400)": [[494, "lf-bclass-0x1400"]], "LF_BINTERFACE (0x151a)": [[494, "lf-binterface-0x151a"]], "LF_BITFIELD (0x1205)": [[494, "lf-bitfield-0x1205"]], "LF_BUILDINFO (0x1603)": [[494, "lf-buildinfo-0x1603"]], "LF_CLASS (0x1504)": [[494, "lf-class-0x1504"]], "LF_ENDPRECOMP (0x0014)": [[494, "lf-endprecomp-0x0014"]], "LF_ENUM (0x1507)": [[494, "lf-enum-0x1507"]], "LF_ENUMERATE (0x1502)": [[494, "lf-enumerate-0x1502"]], "LF_FIELDLIST (0x1203)": [[494, "lf-fieldlist-0x1203"]], "LF_FUNC_ID (0x1601)": [[494, "lf-func-id-0x1601"]], "LF_INDEX (0x1404)": [[494, "lf-index-0x1404"]], "LF_INTERFACE (0x1519)": [[494, "lf-interface-0x1519"]], "LF_IVBCLASS (0x1402)": [[494, "lf-ivbclass-0x1402"]], "LF_LABEL (0x000e)": [[494, "lf-label-0x000e"]], "LF_MEMBER (0x150d)": [[494, "lf-member-0x150d"]], "LF_METHOD (0x150f)": [[494, "lf-method-0x150f"]], "LF_METHODLIST (0x1206)": [[494, "lf-methodlist-0x1206"]], "LF_MFUNCTION (0x1009)": [[494, "lf-mfunction-0x1009"]], "LF_MFUNC_ID (0x1602)": [[494, "lf-mfunc-id-0x1602"]], "LF_MODIFIER (0x1001)": [[494, "lf-modifier-0x1001"]], "LF_NESTTYPE (0x1510)": [[494, "lf-nesttype-0x1510"]], "LF_ONEMETHOD (0x1511)": [[494, "lf-onemethod-0x1511"]], "LF_PADn (0xf0 + n)": [[494, "lf-padn-0xf0-n"]], "LF_POINTER (0x1002)": [[494, "lf-pointer-0x1002"]], "LF_PRECOMP (0x1509)": [[494, "lf-precomp-0x1509"]], "LF_PROCEDURE (0x1008)": [[494, "lf-procedure-0x1008"]], "LF_STMEMBER (0x150e)": [[494, "lf-stmember-0x150e"]], "LF_STRING_ID (0x1605)": [[494, "lf-string-id-0x1605"]], "LF_STRUCTURE (0x1505)": [[494, "lf-structure-0x1505"]], "LF_SUBSTR_LIST (0x1604)": [[494, "lf-substr-list-0x1604"]], "LF_TYPESERVER2 (0x1515)": [[494, "lf-typeserver2-0x1515"]], "LF_UDT_MOD_SRC_LINE (0x1607)": [[494, "lf-udt-mod-src-line-0x1607"]], "LF_UDT_SRC_LINE (0x1606)": [[494, "lf-udt-src-line-0x1606"]], "LF_UNION (0x1506)": [[494, "lf-union-0x1506"]], "LF_VBCLASS (0x1401)": [[494, "lf-vbclass-0x1401"]], "LF_VFTABLE (0x151d)": [[494, "lf-vftable-0x151d"]], "LF_VFUNCTAB (0x1409)": [[494, "lf-vfunctab-0x1409"]], "LF_VTSHAPE (0x000a)": [[494, "lf-vtshape-0x000a"]], "LIT EXAMPLE TESTS": [[409, "lit-example-tests"]], "LIT INFRASTRUCTURE": [[409, "lit-infrastructure"]], "LLJIT and LLLazyJIT": [[491, "lljit-and-lllazyjit"]], "LLVM": [[386, "llvm"]], "LLVM 9.0.0 Release Notes": [[513, null]], "LLVM Alias Analysis Infrastructure": [[389, null]], "LLVM Atomic Instructions and Concurrency Guide": [[390, null]], "LLVM BackEnds": [[527, "llvm-backends"]], "LLVM Bitcode File Format": [[393, null]], "LLVM Block Frequency Terminology": [[394, null]], "LLVM Branch Weight Metadata": [[395, null]], "LLVM Bug Life Cycle": [[396, null]], "LLVM Code Coverage Mapping Format": [[450, null]], "LLVM Code Generation": [[454, "llvm-code-generation"]], "LLVM Coding Standards": [[404, null]], "LLVM Command Guide": [[408, null]], "LLVM Community Code of Conduct": [[403, null]], "LLVM Extensions": [[456, null]], "LLVM Function Attribute": [[541, "llvm-function-attribute"]], "LLVM IR Blocks": [[393, "llvm-ir-blocks"]], "LLVM IR Encoding": [[393, "llvm-ir-encoding"]], "LLVM IR Features": [[461, "llvm-ir-features"]], "LLVM IR Lane ordering": [[392, "llvm-ir-lane-ordering"]], "LLVM IR Magic Number": [[393, "llvm-ir-magic-number"]], "LLVM IR Representation": [[450, "llvm-ir-representation"]], "LLVM IR for If/Then/Else": [[555, "llvm-ir-for-if-then-else"], [565, "llvm-ir-for-if-then-else"], [576, "llvm-ir-for-if-then-else"]], "LLVM IR for the 'for' Loop": [[555, "llvm-ir-for-the-for-loop"], [565, "llvm-ir-for-the-for-loop"], [576, "llvm-ir-for-the-for-loop"]], "LLVM Language Reference Manual": [[479, null]], "LLVM Link Time Optimization: Design and Implementation": [[482, null]], "LLVM Optimization Passes": [[554, "llvm-optimization-passes"], [564, "llvm-optimization-passes"], [575, "llvm-optimization-passes"]], "LLVM PowerPC ABI": [[402, "llvm-powerpc-abi"]], "LLVM Programmer's Manual": [[507, null]], "LLVM Project Wrappers": [[401, "llvm-project-wrappers"]], "LLVM Testing Infrastructure Organization": [[535, "llvm-testing-infrastructure-organization"]], "LLVM Tutorial: Table of Contents": [[580, null]], "LLVM bugpoint tool: design and usage": [[397, null]], "LLVM \u6e2c\u8a66\u57fa\u790e\u8a2d\u65bd\u6307\u5357": [[535, null]], "LLVM \u8a2d\u8a08\uff06\u6982\u89bd": [[545, "llvm-design-overview"]], "LLVM \u958b\u767c\u8005\u65b9\u91dd": [[452, null]], "LLVM's Analysis and Transform Passes": [[505, null]], "LLVM's Optional Rich Disassembly Output": [[486, null]], "LLVM-specific variables": [[400, "llvm-specific-variables"]], "LLVMBuild Format Reference": [[478, "llvmbuild-format-reference"]], "LLVMBuild Guide": [[478, null]], "LOCAL CONFIGURATION FILES": [[409, "local-configuration-files"]], "Label Type": [[479, "label-type"]], "Laissez faire": [[511, "laissez-faire"]], "Lanai": [[447, "lanai"]], "Language Extensions and File Format Changes": [[519, "language-extensions-and-file-format-changes"]], "Language and Compiler Issues": [[404, "language-and-compiler-issues"]], "Language-Specific Optimizations": [[560, "language-specific-optimizations"], [570, "language-specific-optimizations"], [579, "language-specific-optimizations"]], "Languages, Libraries, and Standards": [[404, "languages-libraries-and-standards"]], "Late Machine Code Optimizations": [[402, "late-machine-code-optimizations"]], "Laziness": [[491, "laziness"]], "Lazy Compilation": [[548, "lazy-compilation"]], "Lazy Initialization with ManagedStatic": [[507, "lazy-initialization-with-managedstatic"]], "Leaf Records": [[494, "leaf-records"]], "Leaks": [[481, "leaks"]], "Leftover Transformations": [[536, "leftover-transformations"]], "Legacy License Structure": [[452, "legacy-license-structure"]], "Legal": [[539, "legal"]], "Legalizer": [[465, "legalizer"]], "Lexer Extensions for If/Then/Else": [[555, "lexer-extensions-for-if-then-else"], [565, "lexer-extensions-for-if-then-else"], [576, "lexer-extensions-for-if-then-else"]], "Lexer Extensions for the 'for' Loop": [[555, "lexer-extensions-for-the-for-loop"], [565, "lexer-extensions-for-the-for-loop"], [576, "lexer-extensions-for-the-for-loop"]], "Lexical Analysis": [[530, "lexical-analysis"]], "Libcalls: __atomic_*": [[390, "libcalls-atomic"]], "Libcalls: __sync_*": [[390, "libcalls-sync"]], "Library": [[517, "library"]], "Library Layering": [[404, "library-layering"]], "License": [[457, "license"]], "Licensing": [[466, "licensing"]], "Lifetime": [[477, "lifetime"]], "Limitation": [[537, null]], "Limitations": [[389, "limitations"], [484, "limitations"]], "Limitations and Half Baked Ideas": [[524, "limitations-and-half-baked-ideas"]], "Linkage Types": [[479, "linkage-types"]], "Linking with Libdevice": [[490, "linking-with-libdevice"]], "Links": [[463, "links"], [464, "links"]], "Linux": [[391, "linux"], [447, "linux"]], "Linux Intel": [[391, "linux-intel"]], "Lists": [[401, "lists"]], "Lists of Lists": [[401, "lists-of-lists"]], "Literals": [[385, "literals"]], "Live In Registers": [[484, "live-in-registers"]], "Live Intervals": [[402, "live-intervals"]], "Live Intervals Analysis": [[402, "live-intervals-analysis"]], "Live Variable Analysis": [[402, "live-variable-analysis"]], "LiveDebugValues expansion of variable locations": [[519, "livedebugvalues-expansion-of-variable-locations"]], "Load/Store Unit and Memory Consistency Model": [[429, "load-store-unit-and-memory-consistency-model"]], "Local LLVM Configuration": [[463, "local-llvm-configuration"]], "Locating clobbers yourself": [[488, "locating-clobbers-yourself"]], "Location": [[399, "location"]], "Logarithmical search": [[489, "logarithmical-search"]], "Loop Distribution": [[536, "loop-distribution"]], "Loop Interchange": [[536, "loop-interchange"]], "Loop Scale": [[394, "loop-scale"]], "Loop Unrolling": [[536, "loop-unrolling"]], "Loop Vectorization and Interleaving": [[536, "loop-vectorization-and-interleaving"]], "Looping": [[529, "looping"]], "Loops": [[401, "loops"]], "Loops with unknown trip count": [[538, "loops-with-unknown-trip-count"]], "Low Level Type": [[465, "low-level-type"]], "Lowering Quality and Representation Overhead": [[524, "lowering-quality-and-representation-overhead"]], "Lowering:": [[479, "lowering"], [479, "id927"], [479, "id941"], [479, "id946"], [479, "id951"], [479, "id953"], [479, "id955"], [479, "id957"], [479, "id959"], [479, "id961"], [479, "id963"], [479, "id965"], [479, "id967"], [479, "id969"], [479, "id971"], [479, "id973"], [479, "id975"], [479, "id977"], [479, "id979"], [479, "id981"], [479, "id983"], [479, "id985"], [479, "id987"]], "M": [[480, "m"]], "M0": [[386, "m0"]], "MACH-O ONLY OPTIONS AND COMMANDS": [[432, "mach-o-only-options-and-commands"]], "MACH-O SPECIFIC OPTIONS": [[430, "mach-o-specific-options"], [437, "mach-o-specific-options"], [442, "mach-o-specific-options"]], "MCJIT Design and Implementation": [[483, null]], "MCSymbol Operands": [[484, "mcsymbol-operands"]], "MERGE": [[434, "merge"]], "METADATA_ATTACHMENT Contents": [[393, "metadata-attachment-contents"]], "METADATA_BLOCK Contents": [[393, "metadata-block-contents"]], "MIMG": [[0, "mimg"], [1, "mimg"], [2, "mimg"], [3, "mimg"]], "MIMG Modifiers": [[384, "mimg-modifiers"]], "MIPS": [[447, "mips"]], "MIR Serialization": [[465, "mir-serialization"]], "MIR Testing Guide": [[484, "mir-testing-guide"]], "MODULE_BLOCK Contents": [[393, "module-block-contents"]], "MODULE_CODE_ALIAS Record": [[393, "module-code-alias-record"]], "MODULE_CODE_ASM Record": [[393, "module-code-asm-record"]], "MODULE_CODE_DATALAYOUT Record": [[393, "module-code-datalayout-record"]], "MODULE_CODE_DEPLIB Record": [[393, "module-code-deplib-record"]], "MODULE_CODE_FUNCTION Record": [[393, "module-code-function-record"]], "MODULE_CODE_GCNAME Record": [[393, "module-code-gcname-record"]], "MODULE_CODE_GLOBALVAR Record": [[393, "module-code-globalvar-record"]], "MODULE_CODE_SECTIONNAME Record": [[393, "module-code-sectionname-record"]], "MODULE_CODE_TRIPLE Record": [[393, "module-code-triple-record"]], "MODULE_CODE_VERSION Record": [[393, "module-code-version-record"]], "MSF Container Options": [[433, "msf-container-options"]], "MSF File Options": [[433, "msf-file-options"]], "MUBUF": [[0, "mubuf"], [1, "mubuf"], [2, "mubuf"], [3, "mubuf"], [386, "mubuf"]], "MUBUF/MTBUF Modifiers": [[384, "mubuf-mtbuf-modifiers"]], "Mach-O Changes": [[519, "mach-o-changes"]], "MachSuite": [[510, "machsuite"]], "Machine Basic Blocks": [[484, "machine-basic-blocks"]], "Machine Code Emitter": [[539, "machine-code-emitter"]], "Machine Functions": [[484, "machine-functions"]], "Machine IR (MIR) Format Reference Manual": [[484, null]], "Machine Instructions": [[484, "machine-instructions"]], "Machine Instructions Format Reference": [[484, "machine-instructions-format-reference"]], "Machine Operands": [[484, "machine-operands"]], "Machine code description classes": [[402, "machine-code-description-classes"]], "Machine code in SSA form": [[402, "machine-code-in-ssa-form"]], "Machine-specific Assembly Syntax": [[456, "machine-specific-assembly-syntax"]], "MachineInstr Bundles": [[402, "machineinstr-bundles"]], "MachineVerifier": [[465, "machineverifier"]], "Magic Numbers": [[393, "magic-numbers"]], "Mailing Lists": [[545, "mailing-lists"]], "Maintainability": [[465, "maintainability"]], "Maintenance of cc-by-default settings": [[396, "maintenance-of-cc-by-default-settings"]], "Maintenance of products/components metadata": [[396, "maintenance-of-products-components-metadata"]], "Making a Major Change": [[452, "making-a-major-change"]], "Making and Submitting a Patch": [[452, "making-and-submitting-a-patch"]], "Making simple changes": [[507, "making-simple-changes"]], "Map-Like Containers (std::map, DenseMap, etc)": [[507, "map-like-containers-std-map-densemap-etc"]], "Mapping Region": [[450, "mapping-region"], [450, "id7"]], "Mapping Regions": [[450, "mapping-regions"]], "Mapping from instructions to functional units": [[402, "mapping-from-instructions-to-functional-units"]], "Mapping virtual registers to physical registers": [[402, "mapping-virtual-registers-to-physical-registers"]], "Mappings": [[544, "mappings"]], "Marking Functions as Kernels": [[490, "marking-functions-as-kernels"]], "Masked Vector Expanding Load and Compressing Store Intrinsics": [[479, "masked-vector-expanding-load-and-compressing-store-intrinsics"]], "Masked Vector Gather and Scatter Intrinsics": [[479, "masked-vector-gather-and-scatter-intrinsics"]], "Masked Vector Load and Store Intrinsics": [[479, "masked-vector-load-and-store-intrinsics"]], "Matching Newline Characters": [[405, "matching-newline-characters"]], "Matching a PDB to its executable": [[500, "matching-a-pdb-to-its-executable"]], "Mechanical Source Issues": [[404, "mechanical-source-issues"]], "Meetups and social events": [[545, "meetups-and-social-events"]], "Member Records": [[494, "member-records"]], "Members of the Code of Conduct Advisory Committee": [[516, "members-of-the-code-of-conduct-advisory-committee"]], "Memory Access and Addressing Operations": [[479, "memory-access-and-addressing-operations"]], "Memory Dependence Analysis": [[389, "memory-dependence-analysis"]], "Memory Model": [[386, "memory-model"]], "Memory Model for Concurrent Operations": [[479, "memory-model-for-concurrent-operations"]], "Memory Scopes": [[386, "memory-scopes"]], "Memory Spaces": [[386, "memory-spaces"]], "Memory Use Markers": [[479, "memory-use-markers"]], "Memory in LLVM": [[557, "memory-in-llvm"], [567, "memory-in-llvm"], [578, "memory-in-llvm"]], "MemorySSA": [[488, null]], "MemorySSA Structure": [[488, "memoryssa-structure"]], "Merge Requests": [[472, "merge-requests"]], "MergeFunctions pass, how it works": [[489, null]], "MergeFunctions, main fields and runOnModule": [[489, "mergefunctions-main-fields-and-runonmodule"]], "Merging Patches": [[472, "merging-patches"]], "Merging process, mergeTwoFunctions": [[489, "merging-process-mergetwofunctions"]], "Metadata": [[479, "metadata"]], "Metadata Nodes and Metadata Strings": [[479, "metadata-nodes-and-metadata-strings"]], "Metadata Records": [[543, "metadata-records"]], "Metadata Type": [[479, "metadata-type"]], "Metadata on Loops": [[536, "metadata-on-loops"]], "Method information": [[404, "method-information"]], "Microscopic Details": [[404, "microscopic-details"]], "Microsoft Visual C++": [[400, "microsoft-visual-c"]], "Minimising cost of downstream merges": [[511, "minimising-cost-of-downstream-merges"]], "Minimize Soft Errors": [[525, "minimize-soft-errors"]], "Minimizing docker image size": [[453, "minimizing-docker-image-size"]], "Miscellaneous Attributes": [[484, "miscellaneous-attributes"]], "Miscellaneous Modifiers": [[384, "miscellaneous-modifiers"]], "Miscellaneous Options": [[433, "miscellaneous-options"]], "Miscellaneous Problems": [[540, "miscellaneous-problems"]], "Miscellaneous Resources": [[447, "miscellaneous-resources"]], "Miscellaneous Variables": [[508, "miscellaneous-variables"]], "Miscellaneous option modifiers": [[445, "miscellaneous-option-modifiers"]], "Miscompilation debugger": [[397, "miscompilation-debugger"]], "Miscompilations": [[474, "miscompilations"]], "Mixing References and Raw Pointers": [[524, "mixing-references-and-raw-pointers"]], "Mnemonic Aliases": [[402, "mnemonic-aliases"]], "Modeling Memory Effects": [[459, "modeling-memory-effects"]], "Modifications for other Targets": [[470, "modifications-for-other-targets"]], "Modifiers": [[382, "modifiers"], [383, "modifiers"], [384, "modifiers"], [386, "modifiers"]], "Modifiers (generic)": [[413, "modifiers-generic"]], "Modifiers (operation specific)": [[413, "modifiers-operation-specific"]], "Module & File Options": [[433, "module-file-options"]], "Module Flags Metadata": [[479, "module-flags-metadata"]], "Module Info Substream": [[495, "module-info-substream"]], "Module Options": [[433, "module-options"]], "Module Path Summary Entry": [[479, "module-path-summary-entry"]], "Module Structure": [[479, "module-structure"]], "Module Symbols": [[493, "module-symbols"]], "Module \u985e\u5225": [[507, "the-module-class"]], "Module-Level Inline Assembly": [[479, "module-level-inline-assembly"]], "Modules": [[401, "modules"]], "Modules, Functions and Macros": [[401, "modules-functions-and-macros"]], "Monorepo": [[509, "monorepo"]], "Monorepo Drawbacks": [[509, "monorepo-drawbacks"]], "Monorepo Variant": [[509, "monorepo-variant"], [509, "workflow-monocheckout-multicommit"], [509, "workflow-mono-branching"], [509, "workflow-mono-bisecting"]], "Monotonic": [[390, "monotonic"]], "More Platforms": [[541, "more-platforms"]], "More examples": [[481, "more-examples"]], "Motivation": [[458, "motivation"], [522, "motivation"]], "Moved": [[526, "moved"], [532, "moved"]], "Moving LLVM Projects to GitHub": [[509, null]], "Moving Local Branches to the Monorepo": [[509, "moving-local-branches-to-the-monorepo"]], "Mull - Mutation Testing tool for C and C++": [[513, "mull-mutation-testing-tool-for-c-and-c"]], "Multi-phase communication between libLTO and linker": [[482, "multi-phase-communication-between-liblto-and-linker"]], "Multi-stage PGO": [[388, "multi-stage-pgo"]], "Multiclass definitions and instances": [[529, "multiclass-definitions-and-instances"]], "Multiple Suspend Points": [[449, "multiple-suspend-points"]], "Multithreaded LLVM": [[540, "multithreaded-llvm"]], "Must, May, and No Alias Responses": [[389, "must-may-and-no-alias-responses"]], "Mutable Variables in Kaleidoscope": [[557, "mutable-variables-in-kaleidoscope"], [567, "mutable-variables-in-kaleidoscope"], [578, "mutable-variables-in-kaleidoscope"]], "Mutators and Input Generators": [[460, "mutators-and-input-generators"]], "My First Language Frontend with LLVM Tutorial": [[571, null]], "N": [[480, "n"]], "NAS Parallel Benchmarks": [[510, "nas-parallel-benchmarks"]], "NVPTX": [[447, "nvptx"]], "NVPTX Intrinsics": [[490, "nvptx-intrinsics"]], "NWChem": [[510, "nwchem"]], "Name Accelerator Tables": [[519, "name-accelerator-tables"]], "Name Hash Tables": [[519, "name-hash-tables"]], "Name Types, Functions, Variables, and Enumerators Properly": [[404, "name-types-functions-variables-and-enumerators-properly"]], "Named Alternatives": [[445, "named-alternatives"]], "Named Metadata": [[479, "named-metadata"]], "Named Stream Map": [[500, "named-stream-map"]], "Namespace Indentation": [[404, "namespace-indentation"]], "Narrative structure": [[489, "narrative-structure"]], "Native Object File Wrapper Format": [[393, "native-object-file-wrapper-format"]], "Nested Calls and Copy Elision": [[477, "nested-calls-and-copy-elision"]], "New Assignment Operator": [[557, "new-assignment-operator"], [567, "new-assignment-operator"], [578, "new-assignment-operator"]], "New DWARF Attributes": [[519, "new-dwarf-attributes"]], "New DWARF Constants": [[519, "new-dwarf-constants"]], "New DWARF Tags": [[519, "new-dwarf-tags"]], "New LLVM Project License Framework": [[452, "new-llvm-project-license-framework"]], "New Targets": [[452, "new-targets"]], "New exception handling instructions": [[454, "new-exception-handling-instructions"]], "NewBuffer Records": [[543, "newbuffer-records"]], "NewCpuId Records": [[543, "newcpuid-records"]], "Next Steps": [[542, "next-steps"]], "No Duplicate Implementations": [[525, "no-duplicate-implementations"]], "No Exposed Data": [[525, "no-exposed-data"]], "No Exposed Functions": [[525, "no-exposed-functions"]], "No Normalization": [[544, "no-normalization"]], "No Unused Functionality": [[525, "no-unused-functionality"]], "No Virtual Methods": [[525, "no-virtual-methods"]], "No global aliases, replaceDirectCallers": [[489, "no-global-aliases-replacedirectcallers"]], "No target passed to clang": [[470, "no-target-passed-to-clang"]], "No throw Specifications": [[525, "no-throw-specifications"]], "Non-Goals": [[488, "non-goals"]], "Non-Integral Pointer Type": [[479, "non-integral-pointer-type"]], "Non-comprehensive list of changes in this release": [[513, "non-comprehensive-list-of-changes-in-this-release"]], "Normalization": [[544, "normalization"]], "NotAtomic": [[390, "notatomic"]], "Notation": [[0, "notation"], [1, "notation"], [2, "notation"], [3, "notation"], [382, "notation"], [382, "id2"], [382, "amdgpu-syn-instruction-operand-notation"], [382, "amdgpu-syn-instruction-modifier-notation"], [530, "notation"]], "Note Records": [[386, "note-records"]], "Notes On Building LLVM/Clang on ARM": [[468, "notes-on-building-llvm-clang-on-arm"]], "Noteworthy optimizations": [[513, "noteworthy-optimizations"]], "Numbers": [[385, "numbers"]], "O": [[480, "o"]], "O(log(N))": [[489, "o-log-n"]], "OPTIONS": [[405, "options"], [406, "options"], [407, "options"], [410, "options"], [413, "options"], [414, "options"], [415, "options"], [416, "options"], [417, "options"], [418, "options"], [418, "id5"], [418, "id8"], [418, "id11"], [419, "options"], [420, "options"], [422, "options"], [423, "options"], [424, "options"], [425, "options"], [427, "options"], [429, "options"], [430, "options"], [432, "options"], [434, "options"], [434, "id5"], [434, "id8"], [436, "options"], [439, "options"], [442, "options"], [443, "options"], [444, "options"]], "ORC Design and Implementation": [[491, null]], "OUTPUT OPTIONS": [[409, "output-options"]], "OVERLAP": [[434, "overlap"]], "Object Loading": [[483, "object-loading"]], "Object lifetime in optimized code": [[519, "object-lifetime-in-optimized-code"]], "Object lifetimes and scoping": [[519, "object-lifetimes-and-scoping"]], "Objective": [[399, "objective"]], "Objective-C ARC Runtime Intrinsics": [[479, "objective-c-arc-runtime-intrinsics"]], "Objective-C Extensions": [[519, "objective-c-extensions"]], "Objective-C Garbage Collection Module Flags Metadata": [[479, "objective-c-garbage-collection-module-flags-metadata"]], "Objects on the Stack": [[524, "objects-on-the-stack"]], "Obtaining Commit Access": [[452, "obtaining-commit-access"]], "Obtaining Help": [[446, "obtaining-help"]], "Official Testing": [[472, "official-testing"]], "On Managing Revision Numbers with Git": [[509, "on-managing-revision-numbers-with-git"]], "On-Disk Format": [[497, "on-disk-format"]], "Ongoing Development Directions": [[538, "ongoing-development-directions"]], "Opaque Structure Types": [[479, "opaque-structure-types"]], "Opcode": [[382, "opcode"]], "Opcode Mnemonic": [[383, "opcode-mnemonic"]], "OpenBenchmarking.org CPU / Processor Suite": [[510, "openbenchmarking-org-cpu-processor-suite"]], "OpenCL": [[386, "opencl"]], "OpenCL kernel implicit arguments appended for AMDHSA OS": [[386, "opencl-kernel-implicit-arguments-appended-for-amdhsa-os-table"]], "OpenCV": [[510, "opencv"]], "OpenMP 4.x SIMD Benchmarks": [[510, "openmp-4-x-simd-benchmarks"]], "Operand Bundles": [[479, "operand-bundles"]], "Operands": [[382, "operands"], [383, "operands"], [385, "operands"], [386, "operands"]], "Operands:": [[522, "operands"], [522, "id4"], [524, "operands"], [524, "id4"], [524, "id8"]], "Operations": [[413, "operations"]], "OptParserDefs": [[527, "optparserdefs"]], "Optimization outside atomic": [[390, "optimization-outside-atomic"]], "Optimizations": [[446, "optimizations"]], "Optimizing Modules using the IRTransformLayer": [[547, "optimizing-modules-using-the-irtransformlayer"]], "Option Attributes": [[445, "option-attributes"]], "Option Modifiers": [[445, "option-modifiers"]], "Optional Configuration Items": [[463, "optional-configuration-items"]], "Optional Debug Header Stream": [[495, "optional-debug-header-stream"]], "Options": [[433, "options"], [433, "id3"], [433, "id5"], [433, "id8"], [433, "id10"], [433, "id12"], [481, "options"], [517, "options"], [535, "options"]], "Options for Optimizing LLVM": [[398, "options-for-optimizing-llvm"]], "Options for Reducing Size": [[398, "options-for-reducing-size"]], "Order of Keys": [[544, "order-of-keys"]], "Other": [[395, "other"]], "Other Design Notes": [[399, "other-design-notes"]], "Other Features": [[535, "other-features"]], "Other Information": [[465, "other-information"]], "Other Intrinsics": [[490, "other-intrinsics"]], "Other Languages": [[404, "other-languages"]], "Other Map-Like Container Options": [[507, "other-map-like-container-options"]], "Other Operations": [[479, "other-operations"]], "Other Options": [[433, "other-options"]], "Other Sequential Container options": [[507, "other-sequential-container-options"]], "Other Set-Like Container Options": [[507, "other-set-like-container-options"]], "Other Things to Consider": [[459, "other-things-to-consider"]], "Other Types": [[401, "other-types"]], "Other Values": [[479, "other-values"]], "Other documents, collections, notes": [[447, "other-documents-collections-notes"]], "Other relevant lists": [[447, "other-relevant-lists"]], "Other useful AliasAnalysis methods": [[389, "other-useful-aliasanalysis-methods"]], "Other useful references": [[507, "other-useful-references"]], "Output": [[481, "output"], [544, "output"]], "Output constraints": [[479, "output-constraints"]], "Outstanding Questions": [[509, "outstanding-questions"]], "Overloading Based on __host__ and __device__ Attributes": [[446, "overloading-based-on-host-and-device-attributes"]], "Overview": [[545, null]], "Overview & Core Concepts": [[524, "overview-core-concepts"]], "Overview of available features": [[461, "overview-of-available-features"]], "Overview of the Release Process": [[514, "overview-of-the-release-process"]], "Overview:": [[449, "overview"], [449, "id4"], [449, "id7"], [449, "id10"], [449, "id13"], [449, "id16"], [449, "id19"], [449, "id21"], [449, "id25"], [449, "id28"], [449, "id31"], [449, "id34"], [449, "id37"], [449, "id40"], [449, "id44"], [479, "overview"], [479, "id29"], [479, "id34"], [479, "id39"], [479, "id45"], [479, "id50"], [479, "id55"], [479, "id60"], [479, "id65"], [479, "id70"], [479, "id77"], [479, "id80"], [479, "id85"], [479, "id90"], [479, "id95"], [479, "id100"], [479, "id105"], [479, "id110"], [479, "id115"], [479, "id120"], [479, "id125"], [479, "id130"], [479, "id135"], [479, "id140"], [479, "id145"], [479, "id150"], [479, "id155"], [479, "id160"], [479, "id165"], [479, "id170"], [479, "id175"], [479, "id180"], [479, "id185"], [479, "id190"], [479, "id195"], [479, "id200"], [479, "id205"], [479, "id210"], [479, "id215"], [479, "id220"], [479, "id225"], [479, "id230"], [479, "id235"], [479, "id240"], [479, "id245"], [479, "id250"], [479, "id255"], [479, "id260"], [479, "id265"], [479, "id270"], [479, "id275"], [479, "id280"], [479, "id285"], [479, "id290"], [479, "id295"], [479, "id300"], [479, "id305"], [479, "id310"], [479, "id315"], [479, "id320"], [479, "id325"], [479, "id330"], [479, "id336"], [479, "id343"], [479, "id350"], [479, "id354"], [479, "id358"], [479, "id363"], [479, "id367"], [479, "id371"], [479, "id375"], [479, "id379"], [479, "id382"], [479, "id385"], [479, "id389"], [479, "id393"], [479, "id396"], [479, "id399"], [479, "id402"], [479, "id405"], [479, "id409"], [479, "id413"], [479, "id416"], [479, "id419"], [479, "id423"], [479, "id427"], [479, "id431"], [479, "id434"], [479, "id438"], [479, "id442"], [479, "id446"], [479, "id450"], [479, "id454"], [479, "id458"], [479, "id462"], [479, "id466"], [479, "id470"], [479, "id474"], [479, "id478"], [479, "id482"], [479, "id486"], [479, "id490"], [479, "id494"], [479, "id498"], [479, "id502"], [479, "id506"], [479, "id510"], [479, "id514"], [479, "id518"], [479, "id522"], [479, "id526"], [479, "id530"], [479, "id534"], [479, "id538"], [479, "id542"], [479, "id546"], [479, "id550"], [479, "id554"], [479, "id557"], [479, "id560"], [479, "id564"], [479, "id568"], [479, "id572"], [479, "id576"], [479, "id580"], [479, "id585"], [479, "id590"], [479, "id595"], [479, "id600"], [479, "id605"], [479, "id645"], [479, "id647"], [479, "id652"], [479, "id655"], [479, "id659"], [479, "id662"], [479, "id666"], [479, "id669"], [479, "id672"], [479, "id675"], [479, "id678"], [479, "id681"], [479, "id684"], [479, "id687"], [479, "id690"], [479, "id693"], [479, "id698"], [479, "id703"], [479, "id707"], [479, "id711"], [479, "id715"], [479, "id719"], [479, "id723"], [479, "id727"], [479, "id731"], [479, "id735"], [479, "id739"], [479, "id743"], [479, "id747"], [479, "id751"], [479, "id755"], [479, "id759"], [479, "id763"], [479, "id767"], [479, "id771"], [479, "id775"], [479, "id779"], [479, "id783"], [479, "id787"], [479, "id791"], [479, "id795"], [479, "id799"], [479, "id803"], [479, "id807"], [479, "id811"], [479, "id815"], [479, "id819"], [479, "id823"], [479, "id827"], [479, "id831"], [479, "id835"], [479, "id839"], [479, "id843"], [479, "id847"], [479, "id851"], [479, "id855"], [479, "id859"], [479, "id863"], [479, "id867"], [479, "id871"], [479, "id877"], [479, "id881"], [479, "id885"], [479, "id889"], [479, "id893"], [479, "id897"], [479, "id901"], [479, "id906"], [479, "id909"], [479, "id912"], [479, "id914"], [479, "id918"], [479, "id922"], [479, "id924"], [479, "id929"], [479, "id931"], [479, "id935"], [479, "id938"], [479, "id943"], [479, "id948"], [479, "id989"], [479, "id993"], [479, "id997"], [490, "overview"], [490, "id5"], [490, "id8"], [490, "id10"], [522, "overview"], [522, "id3"], [524, "overview"], [524, "id3"], [524, "id7"]], "P": [[480, "p"]], "PAL Compute Shader User Data Registers": [[386, "pal-compute-user-data-registers"]], "PAL Global Internal Table": [[386, "pal-git-table"]], "PAL Graphics Shader User Data Registers": [[386, "pal-graphics-user-data-registers"]], "PARAMATTR_BLOCK Contents": [[393, "paramattr-block-contents"]], "PARAMATTR_CODE_ENTRY Record": [[393, "paramattr-code-entry-record"]], "PARAMATTR_CODE_ENTRY_OLD Record": [[393, "paramattr-code-entry-old-record"]], "PARAMATTR_GROUP_BLOCK Contents": [[393, "paramattr-group-block-contents"]], "PARAMATTR_GRP_CODE_ENTRY Record": [[393, "paramattr-grp-code-entry-record"]], "PARSEC": [[510, "parsec"]], "PDB Feature Codes": [[500, "pdb-feature-codes"]], "PDB Stream Options": [[433, "pdb-stream-options"]], "PE/COFF SPECIFIC OPTIONS": [[437, "pe-coff-specific-options"]], "PRE-DEFINED SUBSTITUTIONS": [[409, "pre-defined-substitutions"]], "PWM-benchmarking": [[510, "pwm-benchmarking"]], "Packet data access (BPF_ABS, BPF_IND)": [[402, "packet-data-access-bpf-abs-bpf-ind"]], "Padding Records": [[494, "padding-records"]], "ParRes": [[510, "parres"]], "Parallel Fuzzing": [[481, "parallel-fuzzing"]], "Parameter Attributes": [[479, "parameter-attributes"]], "Parboil Benchmarks": [[510, "parboil-benchmarks"]], "Parser Basics": [[552, "parser-basics"], [562, "parser-basics"], [573, "parser-basics"]], "Parser Extensions for If/Then/Else": [[555, "parser-extensions-for-if-then-else"], [565, "parser-extensions-for-if-then-else"], [576, "parser-extensions-for-if-then-else"]], "Parser Extensions for the 'for' Loop": [[555, "parser-extensions-for-the-for-loop"], [565, "parser-extensions-for-the-for-loop"], [576, "parser-extensions-for-the-for-loop"]], "Parsing a list of options": [[445, "parsing-a-list-of-options"]], "Parsing the Rest": [[552, "parsing-the-rest"], [562, "parsing-the-rest"], [573, "parsing-the-rest"]], "Partial unrolling during vectorization": [[538, "partial-unrolling-during-vectorization"]], "Pass Ordering": [[459, "pass-ordering"]], "Pass Skipping Implementation": [[492, "pass-skipping-implementation"]], "Pass Statistics": [[540, "pass-statistics"]], "Pass classes and requirements": [[540, "pass-classes-and-requirements"]], "Pass registration": [[540, "pass-registration"]], "Pass-Specific Transformation Metadata": [[536, "pass-specific-transformation-metadata"]], "Passing functions and other callable objects": [[507, "passing-functions-and-other-callable-objects"]], "Passing strings (the StringRef and Twine classes)": [[507, "passing-strings-the-stringref-and-twine-classes"]], "PatLeaf Predicates": [[465, "patleaf-predicates"]], "Patents": [[452, "patents"]], "Performance": [[538, "performance"]], "Performance Tips for Frontend Authors": [[459, null]], "Personality Function": [[479, "personality-function"]], "Phase 1 : Read LLVM Bitcode Files": [[482, "phase-1-read-llvm-bitcode-files"]], "Phase 2 : Symbol Resolution": [[482, "phase-2-symbol-resolution"]], "Phase 3 : Optimize Bitcode Files": [[482, "phase-3-optimize-bitcode-files"]], "Phase 4 : Symbol Resolution after optimization": [[482, "phase-4-symbol-resolution-after-optimization"]], "Phi placement": [[488, "phi-placement"]], "Philosophy behind LLVM debugging information": [[519, "philosophy-behind-llvm-debugging-information"]], "Picking the Right Data Structure for a Task": [[507, "picking-the-right-data-structure-for-a-task"]], "PlaceSafepoints": [[524, "placesafepoints"]], "Placement of Object Code": [[508, "placement-of-object-code"]], "Platform-Specific Tests": [[535, "platform-specific-tests"]], "Pointer Aliasing Rules": [[479, "pointer-aliasing-rules"]], "Pointer Induction Variables": [[538, "pointer-induction-variables"]], "Pointer Type": [[479, "pointer-type"]], "Poison Values": [[479, "poison-values"]], "PolyBench": [[510, "polybench"]], "PolyMage": [[510, "polymage"]], "Portable Computing Language (pocl)": [[513, "portable-computing-language-pocl"]], "Porting GlobalISel to A New Target": [[465, "porting-globalisel-to-a-new-target"]], "Positional Arguments": [[445, "positional-options"]], "Possible solutions": [[489, "possible-solutions"]], "PowerPC": [[447, "powerpc"]], "Pragma loop hint directives": [[538, "pragma-loop-hint-directives"]], "Pre-Release Process": [[514, "pre-release-process"]], "Precision": [[488, "precision"]], "Predicate Operands": [[484, "predicate-operands"]], "Prefer Preincrement": [[404, "prefer-preincrement"]], "Prefer zext over sext when legal": [[459, "prefer-zext-over-sext-when-legal"]], "Prefix Data": [[479, "prefix-data"]], "Preliminaries": [[539, "preliminaries"]], "Preprocessing Support": [[530, "preprocessing-support"]], "Prerequisite Reading": [[539, "prerequisite-reading"]], "Prerequisites": [[446, "prerequisites"], [470, "prerequisites"]], "Present and Deleted Bit Vectors": [[497, "present-and-deleted-bit-vectors"]], "Present state": [[489, "present-state"]], "Preserving Debug Information Intrinsics": [[479, "preserving-debug-information-intrinsics"]], "Primitives": [[393, "primitives"]], "Problem": [[392, "problem"]], "Processors": [[386, "processors"]], "Profile Guided Optimization": [[533, "profile-guided-optimization"]], "Program start": [[402, "program-start"]], "Programmatic Errors": [[507, "programmatic-errors"]], "Programming Documentation": [[545, "programming-documentation"]], "Progress and Future Work": [[465, "progress-and-future-work"]], "Project Organization": [[478, "project-organization"]], "Prolog/Epilog": [[402, "prolog-epilog"]], "Prolog/Epilog Code Insertion": [[402, "prolog-epilog-code-insertion"]], "Prologue Data": [[479, "prologue-data"]], "Promote": [[539, "promote"]], "Propagating and consuming errors based on types": [[507, "propagating-and-consuming-errors-based-on-types"]], "Properties of the LLVM IR": [[560, "properties-of-the-llvm-ir"], [570, "properties-of-the-llvm-ir"], [579, "properties-of-the-llvm-ir"]], "Proposal": [[519, "proposal"]], "Provide a Virtual Method Anchor for Classes in Headers": [[404, "provide-a-virtual-method-anchor-for-classes-in-headers"]], "Provisional Plan": [[511, "provisional-plan"]], "Pseudo-Counter:": [[450, "pseudo-counter"]], "PseudoLowering": [[527, "pseudolowering"]], "Public Symbols": [[493, "public-symbols"]], "Publication": [[446, "publication"]], "Putting It All Together": [[558, "putting-it-all-together"], [568, "putting-it-all-together"]], "Q. Does libFuzzer Support Windows?": [[481, "q-does-libfuzzer-support-windows"]], "Q. LibFuzzer crashes on my complicated fuzz target (but works fine for me on smaller targets).": [[481, "q-libfuzzer-crashes-on-my-complicated-fuzz-target-but-works-fine-for-me-on-smaller-targets"]], "Q. So, what exactly this Fuzzer is good for?": [[481, "q-so-what-exactly-this-fuzzer-is-good-for"]], "Q. When libFuzzer is not a good solution for a problem?": [[481, "q-when-libfuzzer-is-not-a-good-solution-for-a-problem"]], "Q. Why doesn't libFuzzer use any of the LLVM support?": [[481, "q-why-doesn-t-libfuzzer-use-any-of-the-llvm-support"]], "Quality": [[452, "quality"]], "Questions about code generated by the demo page": [[457, "questions-about-code-generated-by-the-demo-page"]], "Questions?": [[403, "questions"]], "Quick Start": [[450, "quick-start"], [461, "quick-start"]], "Quick Start --- Writing hello world": [[540, "quick-start-writing-hello-world"]], "Quick Start Guide": [[445, "quick-start-guide"]], "Quick start": [[400, "quick-start"], [535, "quick-start"]], "Quickstart": [[533, "quickstart"]], "Quickstart for using LTO with autotooled projects": [[466, "quickstart-for-using-lto-with-autotooled-projects"]], "R": [[480, "r"]], "RAJA Performance Suite": [[510, "raja-performance-suite"]], "REMAPPING FILE": [[420, "remapping-file"]], "REPORT COMMAND": [[418, "report-command"]], "RISC-V": [[447, "risc-v"]], "Random-access": [[489, "random-access"]], "Randomness": [[517, "randomness"]], "Rationale": [[462, "rationale"], [479, null]], "Read barrier: llvm.gcread": [[461, "read-barrier-llvm-gcread"]], "Read-only sub-project mirrors": [[509, "read-only-sub-project-mirrors"]], "Read/write SVN bridge": [[509, "read-write-svn-bridge"]], "Reading PTX Special Registers": [[490, "reading-ptx-special-registers"]], "Reading and writing references in the heap": [[461, "reading-and-writing-references-in-the-heap"]], "Record Categories": [[493, "record-categories"], [494, "record-categories"]], "Recording On Stack Regions": [[524, "recording-on-stack-regions"]], "Recoverable Errors": [[507, "recoverable-errors"]], "Reducing the number of acronyms": [[511, "reducing-the-number-of-acronyms"]], "Reductions": [[538, "reductions"]], "Reference Guide": [[445, "reference-guide"]], "Reference implementation": [[507, "reference-implementation"]], "References": [[461, "references"], [509, "references"], [511, "references"], [512, "references"]], "Reflection Parameters": [[490, "reflection-parameters"]], "Refs": [[479, "refs"]], "RegBankSelect": [[465, "regbankselect"]], "RegBankSelect Modes": [[465, "regbankselect-modes"]], "Register Allocation": [[402, "register-allocator"]], "Register Bank": [[465, "register-bank"]], "Register Flags": [[484, "register-flags"]], "Register Mapping": [[386, "register-mapping"]], "Register Operands": [[484, "register-operands"]], "Register Set and Register Classes": [[539, "register-set-and-register-classes"]], "RegisterInfo": [[527, "registerinfo"]], "Registering dynamically loaded passes": [[540, "registering-dynamically-loaded-passes"]], "Registers": [[484, "id6"]], "Regression test structure": [[535, "regression-test-structure"]], "Regression tests": [[535, "regression-tests"]], "Related LLVM components": [[512, "related-llvm-components"]], "Release": [[390, "release"]], "Release Administrative Tasks": [[472, "release-administrative-tasks"]], "Release Final Tasks": [[472, "release-final-tasks"]], "Release Patch Rules": [[472, "release-patch-rules"]], "Release Process": [[472, "release-process"], [514, "release-process"]], "Release Qualification Criteria": [[472, "release-qualification-criteria"]], "Release Timeline": [[472, "release-timeline"]], "Relevant CMake Options": [[398, "relevant-cmake-options"]], "Relicensing": [[452, "relicensing"]], "Relocatable Expressions": [[385, "relocatable-expressions"]], "Relocation Records": [[386, "relocation-records"]], "Relocations": [[456, "relocations"], [456, "id2"], [456, "id4"]], "Relocations Along Exceptional Edges": [[524, "relocations-along-exceptional-edges"]], "Remark diagnostics": [[515, "remark-diagnostics"]], "Remarks": [[515, null]], "Replacing an Instruction with another Value": [[507, "replacing-an-instruction-with-another-value"]], "Replacing individual instructions": [[507, "replacing-individual-instructions"]], "Replacing multiple uses of Users and Values": [[507, "replacing-multiple-uses-of-users-and-values"]], "Reporting Guide": [[516, null]], "Reporting Regressions": [[472, "reporting-regressions"]], "Reporting bugs": [[396, "reporting-bugs"]], "Representation": [[479, "representation"]], "Representation of Pointers": [[389, "representation-of-pointers"]], "Representing Type Information using Type Metadata": [[537, "representing-type-information-using-type-metadata"]], "Representing X86 addressing modes in MachineInstrs": [[402, "representing-x86-addressing-modes-in-machineinstrs"]], "Requesting a review via the command line": [[506, "requesting-a-review-via-the-command-line"]], "Requesting a review via the web interface": [[506, "requesting-a-review-via-the-web-interface"]], "Required Variables": [[508, "required-variables"]], "Required components in the code generator": [[402, "required-components-in-the-code-generator"]], "Required initialization calls": [[389, "required-initialization-calls"]], "Required methods to override": [[389, "required-methods-to-override"]], "Requirements": [[463, "requirements"], [464, "requirements"], [535, "requirements"]], "Resampling": [[510, "resampling"]], "Resolving/Closing bugs": [[396, "resolving-closing-bugs"]], "Resources": [[465, "resources"]], "Response files": [[445, "response-files"]], "Restricted Operation Semantics": [[459, "restricted-operation-semantics"]], "Restrictions": [[454, "restrictions"]], "Resuming merge": [[481, "resuming-merge"]], "Returning Errors from error handlers": [[507, "returning-errors-from-error-handlers"]], "Reverse Iterators": [[538, "reverse-iterators"]], "Reverting a change when using Git": [[463, "reverting-a-change-when-using-git"]], "Reviewing code with Phabricator": [[506, "reviewing-code-with-phabricator"]], "RewriteStatepointsForGC": [[524, "rewritestatepointsforgc"]], "Rodinia": [[510, "rodinia"]], "Rule Actions": [[465, "rule-actions"]], "Rule Predicates": [[465, "rule-predicates"]], "Rule Processing and Declaring Rules": [[465, "rule-processing-and-declaring-rules"]], "Rules": [[462, "rules"]], "Rules of Thumb": [[473, "rules-of-thumb"]], "Running": [[481, "running"]], "Running CMake and Building": [[471, "running-cmake-and-building"]], "Running Different Tests": [[534, "running-different-tests"]], "Running a pass with opt": [[540, "running-a-pass-with-opt"]], "Running the Kernel": [[490, "running-the-kernel"]], "Running the test-suite via LNT": [[533, "running-the-test-suite-via-lnt"]], "Running the test-suite via Makefiles (deprecated)": [[533, "running-the-test-suite-via-makefiles-deprecated"]], "Runtime Checks of Pointers": [[538, "runtime-checks-of-pointers"]], "Runtime Preemption Specifiers": [[479, "runtime-preemption-specifiers"]], "S": [[480, "s"]], "SDWA": [[0, "sdwa"]], "SDWA Modifiers": [[384, "sdwa-modifiers"]], "SDWA Operand Modifiers": [[384, "sdwa-operand-modifiers"]], "SEE ALSO": [[406, "see-also"], [407, "see-also"], [409, "see-also"], [410, "see-also"], [411, "see-also"], [413, "see-also"], [414, "see-also"], [415, "see-also"], [419, "see-also"], [422, "see-also"], [423, "see-also"], [425, "see-also"], [430, "see-also"], [431, "see-also"], [432, "see-also"], [436, "see-also"], [437, "see-also"], [442, "see-also"]], "SEH filter expressions": [[454, "seh-filter-expressions"]], "SELECTION OPTIONS": [[409, "selection-options"]], "SGPR Register Set Up Order": [[386, "amdgpu-amdhsa-sgpr-register-set-up-order-table"]], "SHOW": [[434, "show"]], "SHOW COMMAND": [[418, "show-command"]], "SHT_LLVM_ADDRSIG Section (address-significance table)": [[456, "sht-llvm-addrsig-section-address-significance-table"]], "SHT_LLVM_CALL_GRAPH_PROFILE Section (Call Graph Profile)": [[456, "sht-llvm-call-graph-profile-section-call-graph-profile"]], "SHT_LLVM_DEPENDENT_LIBRARIES Section (Dependent Libraries)": [[456, "sht-llvm-dependent-libraries-section-dependent-libraries"]], "SHT_LLVM_SYMPART Section (symbol partition specification)": [[456, "sht-llvm-sympart-section-symbol-partition-specification"]], "SJLJ Intrinsics": [[454, "sjlj-intrinsics"]], "SLAMBench": [[510, "slambench"]], "SMEM": [[0, "smem"], [2, "smem"], [3, "smem"]], "SMRD": [[1, "smrd"]], "SMRD/SMEM": [[386, "smrd-smem"]], "SMRD/SMEM Modifiers": [[384, "smrd-smem-modifiers"]], "SOP1": [[0, "sop1"], [1, "sop1"], [2, "sop1"], [3, "sop1"], [386, "sop1"]], "SOP2": [[0, "sop2"], [1, "sop2"], [2, "sop2"], [3, "sop2"], [386, "sop2"]], "SOPC": [[0, "sopc"], [1, "sopc"], [2, "sopc"], [3, "sopc"], [386, "sopc"]], "SOPK": [[0, "sopk"], [1, "sopk"], [2, "sopk"], [3, "sopk"]], "SOPP": [[0, "sopp"], [1, "sopp"], [2, "sopp"], [3, "sopp"], [386, "sopp"]], "SPARC": [[447, "sparc"]], "SPEC CPU 2017": [[510, "spec-cpu-2017"]], "SPEC OMP2012": [[510, "spec-omp2012"]], "SSA-based Machine Code Optimizations": [[402, "ssa-based-machine-code-optimizations"]], "STANDARDS": [[413, "standards"]], "STRTAB_BLOCK Contents": [[393, "strtab-block-contents"]], "SUMMARY OUTPUT DEFINITIONS": [[415, "summary-output-definitions"]], "SUPPORTED FORMATS": [[431, "supported-formats"]], "SYNOPSIS": [[405, "synopsis"], [406, "synopsis"], [407, "synopsis"], [409, "synopsis"], [410, "synopsis"], [411, "synopsis"], [413, "synopsis"], [414, "synopsis"], [415, "synopsis"], [416, "synopsis"], [417, "synopsis"], [418, "synopsis"], [418, "id1"], [418, "id3"], [418, "id6"], [418, "id9"], [419, "synopsis"], [420, "synopsis"], [421, "synopsis"], [422, "synopsis"], [423, "synopsis"], [424, "synopsis"], [425, "synopsis"], [426, "synopsis"], [427, "synopsis"], [428, "synopsis"], [429, "synopsis"], [430, "synopsis"], [431, "synopsis"], [432, "synopsis"], [434, "synopsis"], [434, "id1"], [434, "id3"], [434, "id6"], [436, "synopsis"], [437, "synopsis"], [439, "synopsis"], [442, "synopsis"], [443, "synopsis"], [444, "synopsis"]], "S_BLOCK32 (0x1103)": [[493, "s-block32-0x1103"]], "S_BPREL32 (0x110b)": [[493, "s-bprel32-0x110b"]], "S_BUILDINFO (0x114c)": [[493, "s-buildinfo-0x114c"]], "S_CALLEES (0x115a)": [[493, "s-callees-0x115a"]], "S_CALLERS (0x115b)": [[493, "s-callers-0x115b"]], "S_CALLSITEINFO (0x1139)": [[493, "s-callsiteinfo-0x1139"]], "S_COFFGROUP (0x1137)": [[493, "s-coffgroup-0x1137"]], "S_COMPILE2 (0x1116)": [[493, "s-compile2-0x1116"]], "S_COMPILE3 (0x113c)": [[493, "s-compile3-0x113c"]], "S_CONSTANT (0x1107)": [[493, "s-constant-0x1107"]], "S_DEFRANGE (0x113f)": [[493, "s-defrange-0x113f"]], "S_DEFRANGE_FRAMEPOINTER_REL (0x1142)": [[493, "s-defrange-framepointer-rel-0x1142"]], "S_DEFRANGE_FRAMEPOINTER_REL_FULL_SCOPE (0x1144)": [[493, "s-defrange-framepointer-rel-full-scope-0x1144"]], "S_DEFRANGE_REGISTER (0x1141)": [[493, "s-defrange-register-0x1141"]], "S_DEFRANGE_REGISTER_REL (0x1145)": [[493, "s-defrange-register-rel-0x1145"]], "S_DEFRANGE_SUBFIELD (0x1140)": [[493, "s-defrange-subfield-0x1140"]], "S_DEFRANGE_SUBFIELD_REGISTER (0x1143)": [[493, "s-defrange-subfield-register-0x1143"]], "S_END (0x0006)": [[493, "s-end-0x0006"]], "S_ENVBLOCK (0x113d)": [[493, "s-envblock-0x113d"]], "S_EXPORT (0x1138)": [[493, "s-export-0x1138"]], "S_FASTLINK (0x1167)": [[493, "s-fastlink-0x1167"]], "S_FILESTATIC (0x1153)": [[493, "s-filestatic-0x1153"]], "S_FRAMECOOKIE (0x113a)": [[493, "s-framecookie-0x113a"]], "S_FRAMEPROC (0x1012)": [[493, "s-frameproc-0x1012"]], "S_GDATA32": [[493, "s-gdata32"]], "S_GMANDATA (0x111d)": [[493, "s-gmandata-0x111d"]], "S_GPROC32 (0x1110)": [[493, "s-gproc32-0x1110"]], "S_GPROC32_ID (0x1147)": [[493, "s-gproc32-id-0x1147"]], "S_GTHREAD32 (0x1113)": [[493, "s-gthread32-0x1113"]], "S_HEAPALLOCSITE (0x115e)": [[493, "s-heapallocsite-0x115e"]], "S_INLINEES (0x1168)": [[493, "s-inlinees-0x1168"]], "S_INLINESITE (0x114d)": [[493, "s-inlinesite-0x114d"]], "S_INLINESITE_END (0x114e)": [[493, "s-inlinesite-end-0x114e"]], "S_LABEL32 (0x1105)": [[493, "s-label32-0x1105"]], "S_LDATA32 (0x110c)": [[493, "s-ldata32-0x110c"]], "S_LMANDATA (0x111c)": [[493, "s-lmandata-0x111c"]], "S_LOCAL (0x113e)": [[493, "s-local-0x113e"]], "S_LPROC32 (0x110f)": [[493, "s-lproc32-0x110f"]], "S_LPROC32_DPC (0x1155)": [[493, "s-lproc32-dpc-0x1155"]], "S_LPROC32_DPC_ID (0x1156)": [[493, "s-lproc32-dpc-id-0x1156"]], "S_LPROC32_ID (0x1146)": [[493, "s-lproc32-id-0x1146"]], "S_LPROCREF (0x1127)": [[493, "s-lprocref-0x1127"]], "S_LTHREAD32 (0x1112)": [[493, "s-lthread32-0x1112"]], "S_MANCONSTANT (0x112d)": [[493, "s-manconstant-0x112d"]], "S_OBJNAME (0x1101)": [[493, "s-objname-0x1101"]], "S_PROCREF (0x1125)": [[493, "s-procref-0x1125"]], "S_PROC_ID_END (0x114f)": [[493, "s-proc-id-end-0x114f"]], "S_PUB32 (0x110e)": [[493, "s-pub32-0x110e"]], "S_REGISTER (0x1106)": [[493, "s-register-0x1106"]], "S_REGREL32 (0x1111)": [[493, "s-regrel32-0x1111"]], "S_SECTION (0x1136)": [[493, "s-section-0x1136"]], "S_THUNK32 (0x1102)": [[493, "s-thunk32-0x1102"]], "S_TRAMPOLINE (0x112c)": [[493, "s-trampoline-0x112c"]], "S_UDT (0x1108)": [[493, "s-udt-0x1108"]], "S_UNAMESPACE (0x1124)": [[493, "s-unamespace-0x1124"]], "Safepoint Semantics & Verification": [[524, "safepoint-semantics-verification"]], "Safety Guarantees": [[560, "safety-guarantees"], [570, "safety-guarantees"], [579, "safety-guarantees"]], "Sample Example": [[476, "sample-example"]], "Saturation Arithmetic Intrinsics": [[479, "saturation-arithmetic-intrinsics"]], "ScalarEnumerationTraits": [[544, "scalarenumerationtraits"]], "Scalars": [[544, "scalars"]], "Scatter / Gather": [[538, "scatter-gather"]], "Scope": [[401, "scope"]], "Scripting Overview": [[401, "scripting-overview"]], "Scripts": [[514, "scripts"]], "Scrubbing the Local Monorepo": [[509, "scrubbing-the-local-monorepo"]], "Scudo Hardened Allocator": [[517, null]], "Search Algorithms": [[510, "search-algorithms"]], "SearchableTables": [[527, "searchabletables"]], "Section Contribution Substream": [[495, "section-contribution-substream"]], "Section Map Substream": [[495, "section-map-substream"]], "Sections": [[386, "sections"]], "See Also": [[404, "see-also"]], "Segmented Stacks": [[402, "segmented-stacks"]], "Segmented Stacks in LLVM": [[518, null]], "Selecting 'benchmarks'": [[469, "selecting-benchmarks"]], "Selecting an alternative from a set of possibilities": [[445, "selecting-an-alternative-from-a-set-of-possibilities"]], "SelectionDAG Instruction Selection Process": [[402, "selectiondag-instruction-selection-process"]], "SelectionDAG Legalize Phase": [[402, "selectiondag-legalize-phase"]], "SelectionDAG LegalizeTypes Phase": [[402, "selectiondag-legalizetypes-phase"]], "SelectionDAG Optimization Phase: the DAG Combiner": [[402, "selectiondag-optimization-phase-the-dag-combiner"]], "SelectionDAG Rule Imports": [[465, "selectiondag-rule-imports"]], "SelectionDAG Scheduling and Formation Phase": [[402, "selectiondag-scheduling-and-formation-phase"]], "SelectionDAG Select Phase": [[402, "selectiondag-select-phase"]], "Self-contained Headers": [[404, "self-contained-headers"]], "Semantics": [[479, "semantics"]], "Semantics:": [[449, "semantics"], [449, "id6"], [449, "id9"], [449, "id12"], [449, "id15"], [449, "id18"], [449, "id23"], [449, "id27"], [449, "id30"], [449, "id33"], [449, "id36"], [449, "id39"], [449, "id42"], [449, "id46"], [479, "id27"], [479, "id31"], [479, "id36"], [479, "id41"], [479, "id47"], [479, "id52"], [479, "id57"], [479, "id62"], [479, "id67"], [479, "id74"], [479, "id78"], [479, "id82"], [479, "id87"], [479, "id92"], [479, "id97"], [479, "id102"], [479, "id107"], [479, "id112"], [479, "id117"], [479, "id122"], [479, "id127"], [479, "id132"], [479, "id137"], [479, "id142"], [479, "id147"], [479, "id152"], [479, "id157"], [479, "id162"], [479, "id167"], [479, "id172"], [479, "id177"], [479, "id182"], [479, "id187"], [479, "id192"], [479, "id197"], [479, "id202"], [479, "id207"], [479, "id212"], [479, "id217"], [479, "id222"], [479, "id227"], [479, "id232"], [479, "id237"], [479, "id242"], [479, "id247"], [479, "id252"], [479, "id257"], [479, "id262"], [479, "id267"], [479, "id272"], [479, "id277"], [479, "id282"], [479, "id287"], [479, "id292"], [479, "id297"], [479, "id302"], [479, "id307"], [479, "id312"], [479, "id317"], [479, "id322"], [479, "id327"], [479, "id333"], [479, "id339"], [479, "id346"], [479, "id352"], [479, "id356"], [479, "id360"], [479, "id365"], [479, "id369"], [479, "id373"], [479, "id377"], [479, "id380"], [479, "id383"], [479, "id387"], [479, "id391"], [479, "id394"], [479, "id397"], [479, "id400"], [479, "id403"], [479, "id407"], [479, "id411"], [479, "id414"], [479, "id417"], [479, "id421"], [479, "id425"], [479, "id429"], [479, "id432"], [479, "id436"], [479, "id440"], [479, "id444"], [479, "id448"], [479, "id452"], [479, "id456"], [479, "id460"], [479, "id464"], [479, "id468"], [479, "id472"], [479, "id476"], [479, "id480"], [479, "id484"], [479, "id488"], [479, "id492"], [479, "id496"], [479, "id500"], [479, "id504"], [479, "id508"], [479, "id512"], [479, "id516"], [479, "id520"], [479, "id524"], [479, "id528"], [479, "id532"], [479, "id536"], [479, "id540"], [479, "id544"], [479, "id548"], [479, "id552"], [479, "id555"], [479, "id558"], [479, "id562"], [479, "id566"], [479, "id570"], [479, "id582"], [479, "id587"], [479, "id592"], [479, "id597"], [479, "id602"], [479, "id607"], [479, "id612"], [479, "id617"], [479, "id622"], [479, "id627"], [479, "id632"], [479, "id637"], [479, "id642"], [479, "id649"], [479, "id695"], [479, "id700"], [479, "id705"], [479, "id709"], [479, "id713"], [479, "id717"], [479, "id721"], [479, "id725"], [479, "id729"], [479, "id733"], [479, "id737"], [479, "id741"], [479, "id745"], [479, "id749"], [479, "id753"], [479, "id757"], [479, "id761"], [479, "id765"], [479, "id769"], [479, "id773"], [479, "id777"], [479, "id781"], [479, "id785"], [479, "id789"], [479, "id793"], [479, "id797"], [479, "id801"], [479, "id805"], [479, "id809"], [479, "id813"], [479, "id817"], [479, "id821"], [479, "id825"], [479, "id829"], [479, "id833"], [479, "id837"], [479, "id841"], [479, "id845"], [479, "id849"], [479, "id853"], [479, "id857"], [479, "id861"], [479, "id865"], [479, "id869"], [479, "id873"], [479, "id879"], [479, "id883"], [479, "id887"], [479, "id891"], [479, "id895"], [479, "id899"], [479, "id903"], [479, "id916"], [479, "id920"], [479, "id926"], [479, "id933"], [479, "id936"], [479, "id940"], [479, "id945"], [479, "id950"], [479, "id991"], [479, "id995"], [479, "id999"], [490, "semantics"], [490, "id6"], [522, "semantics"], [522, "id5"], [524, "semantics"], [524, "id5"], [524, "id9"]], "Sending patches": [[463, "sending-patches"]], "Sentinels": [[507, "sentinels"]], "Sequence": [[544, "sequence"]], "Sequential Containers (std::vector, std::list, etc)": [[507, "sequential-containers-std-vector-std-list-etc"]], "SequentiallyConsistent": [[390, "sequentiallyconsistent"]], "Serialized remarks": [[515, "serialized-remarks"]], "Set-Like Containers (std::set, SmallSet, SetVector, etc)": [[507, "set-like-containers-std-set-smallset-setvector-etc"]], "Setjmp/Longjmp Exception Handling": [[454, "setjmp-longjmp-exception-handling"]], "Setting a breakpoint in your pass": [[540, "setting-a-breakpoint-in-your-pass"]], "Setting up the build environment": [[540, "setting-up-the-build-environment"]], "Shared Library": [[504, "shared-library"]], "Sibling call optimization": [[402, "sibling-call-optimization"]], "Sign up": [[506, "sign-up"]], "Signed VBRs": [[393, "signed-vbrs"]], "Simple Constants": [[479, "simple-constants"]], "Simple formatting": [[507, "simple-formatting"]], "Simplifications for Non-Relocating GCs": [[524, "simplifications-for-non-relocating-gcs"]], "Simplifying MIR files": [[484, "simplifying-mir-files"]], "Single Value Types": [[479, "single-value-types"]], "SmallBitVector": [[507, "smallbitvector"]], "Software": [[463, "software"], [464, "software"]], "Source Code Formatting": [[404, "source-code-formatting"]], "Source Code Width": [[404, "source-code-width"]], "Source Filename": [[479, "source-filename"]], "Source Level Debugging with LLVM": [[519, null]], "Source Locations": [[559, "source-locations"], [569, "source-locations"]], "Source Range": [[450, "id10"]], "Source Range:": [[450, "source-range"]], "Source Text": [[386, "source-text"]], "Source Tree Layout": [[508, "source-tree-layout"]], "Spaces Before Parentheses": [[404, "spaces-before-parentheses"]], "Spanning Tree": [[510, "spanning-tree"]], "SparseBitVector": [[507, "sparsebitvector"]], "Special Case File": [[541, "special-case-file"]], "Special Notes for Library-only Distributions": [[398, "special-notes-for-library-only-distributions"]], "Specialised Arithmetic Intrinsics": [[479, "specialised-arithmetic-intrinsics"]], "Specialized Metadata Nodes": [[479, "specialized-metadata-nodes"]], "Specifying GC code generation: gc \"...\"": [[461, "specifying-gc-code-generation-gc"]], "Specifying interactions between passes": [[540, "specifying-interactions-between-passes"]], "Specifying positional options with hyphens": [[445, "specifying-positional-options-with-hyphens"]], "Sphinx Quickstart Template": [[521, null]], "Stable build": [[453, "stable-build"]], "Stack Map Format": [[522, "stack-map-format"], [524, "stack-map-format"]], "Stack Map Intrinsics": [[479, "stack-map-intrinsics"]], "Stack Map Section": [[522, "stack-map-section"]], "Stack Map Usage": [[522, "stack-map-usage"]], "Stack Probe Emission": [[456, "stack-probe-emission"], [456, "id5"]], "Stack Safety Analysis": [[523, null]], "Stack maps and patch points in LLVM": [[522, null]], "Standard Blocks": [[393, "standard-block"]], "Standard C Library Intrinsics": [[479, "standard-c-library-intrinsics"]], "Standard Hash Tables": [[519, "standard-hash-tables"]], "Standard library support": [[446, "standard-library-support"]], "Startup initialization": [[481, "startup-initialization"]], "Status": [[506, "status"], [524, "status"]], "Stay Informed": [[452, "stay-informed"]], "Step #1 : Before The Move": [[509, "step-1-before-the-move"]], "Step #2 : Git Move": [[509, "step-2-git-move"]], "Step #3: Write Access Move": [[509, "step-3-write-access-move"]], "Step #4 : Post Move": [[509, "step-4-post-move"]], "Steps To Add Builder To LLVM Buildbot": [[467, "steps-to-add-builder-to-llvm-buildbot"]], "Straw Man Migration Plan": [[509, "straw-man-migration-plan"]], "Stream Header": [[495, "stream-header"], [500, "stream-header"], [502, "stream-header"]], "Stream Layout": [[498, "stream-layout"]], "Streams": [[503, "streams"]], "String-like containers": [[507, "string-like-containers"]], "StringError": [[507, "stringerror"]], "Strings": [[450, "strings"]], "Structure": [[533, "structure"]], "Structure Type": [[479, "structure-type"]], "Structure Types": [[479, "structure-types"]], "Structured Fuzzing of LLVM IR": [[460, "structured-fuzzing-of-llvm-ir"]], "Structured Fuzzing using libprotobuf-mutator": [[460, "structured-fuzzing-using-libprotobuf-mutator"]], "Style Issues": [[404, "style-issues"]], "Sub-Array of Regions": [[450, "sub-array-of-regions"]], "Subcommands": [[433, "subcommands"]], "Subregister Indices": [[484, "subregister-indices"]], "Substitutions": [[535, "substitutions"]], "Substreams": [[495, "substreams"]], "Subsystem Documentation": [[545, "subsystem-documentation"]], "Subtarget": [[527, "subtarget"]], "Subtarget Support": [[539, "subtarget-support"]], "Subversion and Arcanist (deprecated)": [[506, "subversion-and-arcanist-deprecated"]], "Successors": [[484, "successors"]], "Summary": [[392, "summary"], [433, "summary"], [433, "id2"], [433, "id4"], [433, "id7"], [433, "id9"], [433, "id11"], [462, "summary"]], "Support For Other Targets": [[465, "support-for-other-targets"]], "Support Library": [[525, null]], "Support for alternate stackmap formats": [[524, "support-for-alternate-stackmap-formats"]], "Supported Architectures": [[522, "supported-architectures"], [524, "supported-architectures"]], "Supported C++11 Language and Library Features": [[404, "supported-c-11-language-and-library-features"]], "Supported Constraint Code List": [[479, "supported-constraint-code-list"]], "Supported Instructions": [[395, "supported-instructions"]], "Supporting Custom Compilers": [[491, "supporting-custom-compilers"]], "SwitchInst": [[395, "switchinst"]], "Symbol Options": [[433, "symbol-options"]], "Symbol Type Options": [[433, "symbol-type-options"]], "Symbols": [[385, "symbols"], [386, "symbols"]], "Symbols which can go in either/both of the module info stream & global stream": [[493, "symbols-which-can-go-in-either-both-of-the-module-info-stream-global-stream"]], "Synopsis": [[433, "synopsis"]], "Syntax": [[383, "syntax"], [383, "id2"], [383, "id3"], [385, "syntax"], [479, "id609"], [479, "id614"], [479, "id619"], [479, "id624"], [479, "id629"], [479, "id634"], [479, "id639"]], "Syntax of AMDGPU Instruction Modifiers": [[384, null]], "Syntax of AMDGPU Instruction Operands": [[385, null]], "Syntax of GFX10 Instructions": [[0, null]], "Syntax of GFX7 Instructions": [[1, null]], "Syntax of GFX8 Instructions": [[2, null]], "Syntax of GFX9 Instructions": [[3, null]], "Syntax:": [[449, "syntax"], [479, "syntax"], [479, "id28"], [479, "id33"], [479, "id38"], [479, "id44"], [479, "id49"], [479, "id54"], [479, "id59"], [479, "id64"], [479, "id69"], [479, "id76"], [479, "id79"], [479, "id84"], [479, "id89"], [479, "id94"], [479, "id99"], [479, "id104"], [479, "id109"], [479, "id114"], [479, "id119"], [479, "id124"], [479, "id129"], [479, "id134"], [479, "id139"], [479, "id144"], [479, "id149"], [479, "id154"], [479, "id159"], [479, "id164"], [479, "id169"], [479, "id174"], [479, "id179"], [479, "id184"], [479, "id189"], [479, "id194"], [479, "id199"], [479, "id204"], [479, "id209"], [479, "id214"], [479, "id219"], [479, "id224"], [479, "id229"], [479, "id234"], [479, "id239"], [479, "id244"], [479, "id249"], [479, "id254"], [479, "id259"], [479, "id264"], [479, "id269"], [479, "id274"], [479, "id279"], [479, "id284"], [479, "id289"], [479, "id294"], [479, "id299"], [479, "id304"], [479, "id309"], [479, "id314"], [479, "id319"], [479, "id324"], [479, "id329"], [479, "id335"], [479, "id342"], [479, "id349"], [479, "id353"], [479, "id357"], [479, "id362"], [479, "id366"], [479, "id370"], [479, "id374"], [479, "id378"], [479, "id381"], [479, "id384"], [479, "id388"], [479, "id392"], [479, "id395"], [479, "id398"], [479, "id401"], [479, "id404"], [479, "id408"], [479, "id412"], [479, "id415"], [479, "id418"], [479, "id422"], [479, "id426"], [479, "id430"], [479, "id433"], [479, "id437"], [479, "id441"], [479, "id445"], [479, "id449"], [479, "id453"], [479, "id457"], [479, "id461"], [479, "id465"], [479, "id469"], [479, "id473"], [479, "id477"], [479, "id481"], [479, "id485"], [479, "id489"], [479, "id493"], [479, "id497"], [479, "id501"], [479, "id505"], [479, "id509"], [479, "id513"], [479, "id517"], [479, "id521"], [479, "id525"], [479, "id529"], [479, "id533"], [479, "id537"], [479, "id541"], [479, "id545"], [479, "id549"], [479, "id553"], [479, "id556"], [479, "id559"], [479, "id563"], [479, "id567"], [479, "id571"], [479, "id575"], [479, "id579"], [479, "id584"], [479, "id589"], [479, "id594"], [479, "id599"], [479, "id604"], [479, "id644"], [479, "id646"], [479, "id651"], [479, "id654"], [479, "id658"], [479, "id661"], [479, "id665"], [479, "id668"], [479, "id671"], [479, "id674"], [479, "id677"], [479, "id680"], [479, "id683"], [479, "id686"], [479, "id689"], [479, "id692"], [479, "id697"], [479, "id702"], [479, "id706"], [479, "id710"], [479, "id714"], [479, "id718"], [479, "id722"], [479, "id726"], [479, "id730"], [479, "id734"], [479, "id738"], [479, "id742"], [479, "id746"], [479, "id750"], [479, "id754"], [479, "id758"], [479, "id762"], [479, "id766"], [479, "id770"], [479, "id774"], [479, "id778"], [479, "id782"], [479, "id786"], [479, "id790"], [479, "id794"], [479, "id798"], [479, "id802"], [479, "id806"], [479, "id810"], [479, "id814"], [479, "id818"], [479, "id822"], [479, "id826"], [479, "id830"], [479, "id834"], [479, "id838"], [479, "id842"], [479, "id846"], [479, "id850"], [479, "id854"], [479, "id858"], [479, "id862"], [479, "id866"], [479, "id870"], [479, "id874"], [479, "id876"], [479, "id880"], [479, "id884"], [479, "id888"], [479, "id892"], [479, "id896"], [479, "id900"], [479, "id904"], [479, "id907"], [479, "id910"], [479, "id913"], [479, "id917"], [479, "id921"], [479, "id923"], [479, "id928"], [479, "id930"], [479, "id934"], [479, "id937"], [479, "id942"], [479, "id947"], [479, "id952"], [479, "id954"], [479, "id956"], [479, "id958"], [479, "id960"], [479, "id962"], [479, "id964"], [479, "id966"], [479, "id968"], [479, "id970"], [479, "id972"], [479, "id974"], [479, "id976"], [479, "id978"], [479, "id980"], [479, "id982"], [479, "id984"], [479, "id986"], [479, "id988"], [479, "id992"], [479, "id996"], [490, "syntax"], [490, "id4"], [490, "id7"], [490, "id9"], [522, "syntax"], [522, "id2"], [524, "syntax"], [524, "id2"], [524, "id6"]], "System Library": [[526, null]], "System VGPR Work-Item ID Enumeration Values": [[386, "amdgpu-amdhsa-system-vgpr-work-item-id-enumeration-values-table"]], "SystemZ": [[447, "systemz"]], "T": [[480, "t"]], "TARGET OPTIONS": [[411, "target-options"]], "TEST DISCOVERY": [[409, "test-discovery"], [409, "id7"]], "TEST RUN OUTPUT FORMAT": [[409, "test-run-output-format"]], "TEST STATUS RESULTS": [[409, "test-status-results"]], "TEST SUITES": [[409, "test-suites"]], "TPI vs IPI Stream": [[502, "tpi-vs-ipi-stream"]], "TSCWrap Records": [[543, "tscwrap-records"]], "TTA-based Co-design Environment (TCE)": [[513, "tta-based-co-design-environment-tce"]], "TUTORIAL": [[405, "tutorial"]], "TVM": [[510, "tvm"]], "TYPE_BLOCK Contents": [[393, "type-block-contents"]], "TYPE_CODE_ARRAY Record": [[393, "type-code-array-record"]], "TYPE_CODE_DOUBLE Record": [[393, "type-code-double-record"]], "TYPE_CODE_FLOAT Record": [[393, "type-code-float-record"]], "TYPE_CODE_FP128 Record": [[393, "type-code-fp128-record"]], "TYPE_CODE_FUNCTION Record": [[393, "type-code-function-record"]], "TYPE_CODE_FUNCTION_OLD Record": [[393, "type-code-function-old-record"]], "TYPE_CODE_HALF Record": [[393, "type-code-half-record"]], "TYPE_CODE_INTEGER Record": [[393, "type-code-integer-record"]], "TYPE_CODE_LABEL Record": [[393, "type-code-label-record"]], "TYPE_CODE_METADATA Record": [[393, "type-code-metadata-record"]], "TYPE_CODE_NUMENTRY Record": [[393, "type-code-numentry-record"]], "TYPE_CODE_OPAQUE Record": [[393, "type-code-opaque-record"]], "TYPE_CODE_POINTER Record": [[393, "type-code-pointer-record"]], "TYPE_CODE_PPC_FP128 Record": [[393, "type-code-ppc-fp128-record"]], "TYPE_CODE_STRUCT_ANON Record": [[393, "type-code-struct-anon-record"]], "TYPE_CODE_STRUCT_NAME Record": [[393, "type-code-struct-name-record"]], "TYPE_CODE_STRUCT_NAMED Record": [[393, "type-code-struct-named-record"]], "TYPE_CODE_VECTOR Record": [[393, "type-code-vector-record"]], "TYPE_CODE_VOID Record": [[393, "type-code-void-record"]], "TYPE_CODE_X86_FP80 Record": [[393, "type-code-x86-fp80-record"]], "TYPE_CODE_X86_MMX Record": [[393, "type-code-x86-mmx-record"]], "TableGen": [[531, null]], "TableGen BackEnds": [[527, null]], "TableGen Deficiencies": [[528, null], [531, "tablegen-deficiencies"]], "TableGen Fundamentals": [[532, null]], "TableGen Language Introduction": [[529, null]], "TableGen Language Reference": [[530, null]], "TableGen comments": [[529, "tablegen-comments"]], "TableGen primitives": [[529, "tablegen-primitives"]], "TableGen syntax": [[529, "tablegen-syntax"]], "TableGen values and expressions": [[529, "tablegen-values-and-expressions"]], "TableGen \u5f8c\u7aef": [[531, "tablegen-backends"]], "TableGen \u7a0b\u5f0f": [[531, "the-tablegen-program"]], "Tag the LLVM Final Release": [[472, "tag-the-llvm-final-release"]], "Tag:": [[450, "tag"]], "Tagging considerations": [[507, "tagging-considerations"]], "Tagging the LLVM Release Candidates": [[472, "tagging-the-llvm-release-candidates"]], "Tags": [[544, "tags"]], "Tail Calls": [[402, "tail-calls"]], "Tail call optimization": [[402, "tail-call-optimization"]], "Target Feature Matrix": [[402, "target-feature-matrix"]], "Target Features": [[386, "target-features"]], "Target Independence": [[560, "target-independence"], [570, "target-independence"], [579, "target-independence"]], "Target Intrinsics": [[490, "target-intrinsics"]], "Target JIT Info": [[539, "target-jit-info"]], "Target Machine": [[539, "target-machine"], [558, "target-machine"], [568, "target-machine"]], "Target Registration": [[539, "target-registration"]], "Target Specific Behaviour": [[456, "target-specific-behaviour"]], "Target Triple": [[479, "target-triple"]], "Target Triples": [[386, "target-triples"]], "Target description classes": [[402, "target-description-classes"]], "Target-dependent Index Operands": [[484, "target-dependent-index-operands"]], "Target-independent code generation algorithms": [[402, "target-independent-code-generation-algorithms"]], "Target-specific Implementation Notes": [[402, "target-specific-implementation-notes"]], "Tech talks": [[487, "tech-talks"]], "Terminator Instructions": [[479, "terminator-instructions"]], "Terminology and Notation": [[463, "terminology-and-notation"]], "Test Cases": [[452, "test-cases"]], "Test Suite": [[514, "test-suite"]], "Test-Suite Extentions": [[510, null]], "Testing": [[523, "testing"]], "Testing Addresses For Type Membership": [[537, "testing-addresses-for-type-membership"]], "Testing Debug Info Preservation in Optimizations": [[519, "testing-debug-info-preservation-in-optimizations"]], "Testing Individual Code Generation Passes": [[484, "testing-individual-code-generation-passes"]], "Testing compiler-rt builtins using qemu-arm": [[470, "testing-compiler-rt-builtins-using-qemu-arm"]], "The \"CHECK-COUNT:\" directive": [[405, "the-check-count-directive"]], "The \"CHECK-DAG:\" directive": [[405, "the-check-dag-directive"]], "The \"CHECK-EMPTY:\" directive": [[405, "the-check-empty-directive"]], "The \"CHECK-LABEL:\" directive": [[405, "the-check-label-directive"]], "The \"CHECK-NEXT:\" directive": [[405, "the-check-next-directive"]], "The \"CHECK-NOT:\" directive": [[405, "the-check-not-directive"]], "The \"CHECK-SAME:\" directive": [[405, "the-check-same-directive"]], "The \"MC\" Layer": [[402, "the-mc-layer"]], "The 'Erlang' and 'Ocaml' GCs": [[461, "the-erlang-and-ocaml-gcs"]], "The 'llvm.compiler.used' Global Variable": [[479, "the-llvm-compiler-used-global-variable"]], "The 'llvm.global_ctors' Global Variable": [[479, "the-llvm-global-ctors-global-variable"]], "The 'llvm.global_dtors' Global Variable": [[479, "the-llvm-global-dtors-global-variable"]], "The 'llvm.used' Global Variable": [[479, "the-llvm-used-global-variable"]], "The -aa-eval pass": [[389, "the-aa-eval-pass"]], "The -adce pass": [[389, "the-adce-pass"]], "The -argpromotion pass": [[389, "the-argpromotion-pass"]], "The -basicaa pass": [[389, "the-basicaa-pass"]], "The -ds-aa pass": [[389, "the-ds-aa-pass"]], "The -globalsmodref-aa pass": [[389, "the-globalsmodref-aa-pass"]], "The -gvn, -memcpyopt, and -dse passes": [[389, "the-gvn-memcpyopt-and-dse-passes"]], "The -licm pass": [[389, "the-licm-pass"]], "The -no-aa pass": [[389, "the-no-aa-pass"]], "The -print-alias-sets pass": [[389, "the-print-alias-sets-pass"]], "The -scev-aa pass": [[389, "the-scev-aa-pass"]], "The -steens-aa pass": [[389, "the-steens-aa-pass"]], "The AMDGPU backend": [[402, "the-amdgpu-backend"]], "The Abstract Syntax Tree (AST)": [[552, "the-abstract-syntax-tree-ast"], [562, "the-abstract-syntax-tree-ast"], [573, "the-abstract-syntax-tree-ast"]], "The AliasSetTracker implementation": [[389, "the-aliassettracker-implementation"]], "The AnalysisUsage::addPreserved<> method": [[540, "the-analysisusage-addpreserved-method"]], "The AnalysisUsage::addRequired<> and AnalysisUsage::addRequiredTransitive<> methods": [[540, "the-analysisusage-addrequired-and-analysisusage-addrequiredtransitive-methods"]], "The Argument class": [[507, "the-argument-class"]], "The Basic Language": [[551, "the-basic-language"], [572, "the-basic-language"]], "The BasicBlock class": [[507, "the-basicblock-class"]], "The BasicBlockPass class": [[540, "the-basicblockpass-class"]], "The Basics": [[459, "the-basics"]], "The C++ Standard Template Library": [[507, "the-c-standard-template-library"]], "The CallGraphSCCPass class": [[540, "the-callgraphsccpass-class"]], "The CodeView Symbol Substream": [[498, "the-codeview-symbol-substream"]], "The Constant class and subclasses": [[507, "the-constant-class-and-subclasses"]], "The Contract of classof": [[473, "the-contract-of-classof"]], "The Core LLVM Class Hierarchy Reference": [[507, "the-core-llvm-class-hierarchy-reference"]], "The CoreCLR GC": [[461, "the-coreclr-gc"]], "The DataLayout class": [[402, "the-datalayout-class"]], "The Driver": [[552, "the-driver"], [562, "the-driver"], [573, "the-driver"]], "The Fault Map Section": [[458, "the-fault-map-section"]], "The FileCheck -check-prefix option": [[405, "the-filecheck-check-prefix-option"]], "The Free Block Map": [[499, "the-free-block-map"]], "The Function class": [[507, "the-function-class"]], "The FunctionPass class": [[540, "the-functionpass-class"]], "The GlobalValue class": [[507, "the-globalvalue-class"]], "The GlobalVariable class": [[507, "the-globalvariable-class"]], "The High-Level Issues": [[404, "the-high-level-issues"]], "The ImmutablePass class": [[540, "the-immutablepass-class"]], "The ImplicitNullChecks pass": [[458, "the-implicitnullchecks-pass"]], "The Instruction class": [[507, "the-instruction-class"]], "The Kaleidoscope Language": [[561, "the-kaleidoscope-language"]], "The Kernel": [[490, "the-kernel"]], "The LLVM Lexicon": [[480, null]], "The LLVM Target-Independent Code Generator": [[402, null]], "The LLVM gold plugin": [[466, null]], "The LLVM_DEBUG() macro and -debug option": [[507, "the-llvm-debug-macro-and-debug-option"]], "The Lexer": [[551, "the-lexer"], [561, "the-lexer"], [572, "the-lexer"]], "The Location of LLVM Object Files": [[463, "the-location-of-llvm-object-files"]], "The Loop Vectorizer": [[538, "the-loop-vectorizer"]], "The LoopPass class": [[540, "the-looppass-class"]], "The Low-Level Issues": [[404, "the-low-level-issues"]], "The MCContext class": [[402, "the-mccontext-class"]], "The MCInst class": [[402, "the-mcinst-class"]], "The MCSection class": [[402, "the-mcsection-class"]], "The MCStreamer API": [[402, "the-mcstreamer-api"]], "The MCSymbol class": [[402, "the-mcsymbol-class"]], "The MSF Container": [[503, "the-msf-container"]], "The MSF File Format": [[499, null]], "The MachineBasicBlock class": [[402, "the-machinebasicblock-class"]], "The MachineFunction class": [[402, "the-machinefunction-class"]], "The MachineFunctionPass class": [[540, "the-machinefunctionpass-class"]], "The MachineInstr class": [[402, "the-machineinstr-class"]], "The Module Information Stream": [[498, null]], "The ModulePass class": [[540, "the-modulepass-class"]], "The NVPTX backend": [[402, "the-nvptx-backend"]], "The Often Misunderstood GEP Instruction": [[462, null]], "The PDB DBI (Debug Info) Stream": [[495, null]], "The PDB File Format": [[503, null]], "The PDB Global Symbol Stream": [[496, null]], "The PDB Info Stream (aka the PDB Stream)": [[500, null]], "The PDB Public Symbol Stream": [[501, null]], "The PDB Serialized Hash Table Format": [[497, null]], "The PDB TPI and IPI Streams": [[502, null]], "The Planning Process and VPlan Roadmap": [[512, "the-planning-process-and-vplan-roadmap"]], "The PowerPC backend": [[402, "the-powerpc-backend"]], "The RegionPass class": [[540, "the-regionpass-class"]], "The SLP Vectorizer": [[538, "the-slp-vectorizer"]], "The SSA deconstruction phase": [[402, "the-ssa-deconstruction-phase"]], "The SelectionDAG Legalize Phase": [[539, "the-selectiondag-legalize-phase"]], "The Shadow Stack GC": [[461, "the-shadow-stack-gc"]], "The Statepoint Example GC": [[461, "the-statepoint-example-gc"]], "The Statistic class & -stats option": [[507, "the-statistic-class-stats-option"]], "The Stream Directory": [[499, "the-stream-directory"]], "The StringRef class": [[507, "the-stringref-class"]], "The Superblock": [[499, "the-superblock"]], "The TableGen type system": [[529, "the-tablegen-type-system"]], "The TargetFrameLowering class": [[402, "the-targetframelowering-class"]], "The TargetInstrInfo class": [[402, "the-targetinstrinfo-class"]], "The TargetJITInfo class": [[402, "the-targetjitinfo-class"]], "The TargetLowering class": [[402, "the-targetlowering-class"]], "The TargetMachine class": [[402, "the-targetmachine-class"]], "The TargetRegisterInfo class": [[402, "the-targetregisterinfo-class"]], "The TargetSubtarget class": [[402, "the-targetsubtarget-class"]], "The Twine class": [[507, "the-twine-class"]], "The Type class and Derived Types": [[507, "the-type-class-and-derived-types"]], "The User and owned Use classes' memory layout": [[507, "the-user-and-owned-use-classes-memory-layout"]], "The User class": [[507, "the-user-class"]], "The Value class": [[507, "the-value-class"]], "The ValueSymbolTable class": [[507, "the-valuesymboltable-class"]], "The X86 backend": [[402, "the-x86-backend"]], "The XRay stack tool": [[542, "the-xray-stack-tool"]], "The addEscapingUse method": [[389, "the-addescapinguse-method"]], "The alias method": [[389, "the-alias-method"]], "The cl::ConsumeAfter modifier": [[445, "the-cl-consumeafter-modifier"]], "The cl::OptionCategory class": [[445, "the-cl-optioncategory-class"]], "The cl::ParseCommandLineOptions function": [[445, "the-cl-parsecommandlineoptions-function"]], "The cl::ParseEnvironmentOptions function": [[445, "the-cl-parseenvironmentoptions-function"]], "The cl::SetVersionPrinter function": [[445, "the-cl-setversionprinter-function"]], "The cl::alias class": [[445, "the-cl-alias-class"]], "The cl::bits class": [[445, "the-cl-bits-class"]], "The cl::extrahelp class": [[445, "the-cl-extrahelp-class"]], "The cl::getRegisteredOptions function": [[445, "the-cl-getregisteredoptions-function"]], "The cl::list class": [[445, "the-cl-list-class"]], "The cl::opt class": [[445, "the-cl-opt-class"]], "The cmake try compile stage fails": [[470, "the-cmake-try-compile-stage-fails"]], "The copyValue method": [[389, "the-copyvalue-method"]], "The debugify utility": [[519, "the-debugify-utility"]], "The deleteValue method": [[389, "the-deletevalue-method"]], "The doFinalization() method": [[540, "the-dofinalization-method"], [540, "id3"]], "The doFinalization(CallGraph &) method": [[540, "the-dofinalization-callgraph-method"]], "The doFinalization(Function &) method": [[540, "the-dofinalization-function-method"]], "The doFinalization(Module &) method": [[540, "the-dofinalization-module-method"]], "The doInitialization(CallGraph &) method": [[540, "the-doinitialization-callgraph-method"]], "The doInitialization(Function &) method": [[540, "the-doinitialization-function-method"]], "The doInitialization(Loop *, LPPassManager &) method": [[540, "the-doinitialization-loop-lppassmanager-method"]], "The doInitialization(Module &) method": [[540, "the-doinitialization-module-method"]], "The doInitialization(Region *, RGPassManager &) method": [[540, "the-doinitialization-region-rgpassmanager-method"]], "The doesNotAccessMemory and  onlyReadsMemory methods": [[389, "the-doesnotaccessmemory-and-onlyreadsmemory-methods"]], "The extended Berkeley Packet Filter (eBPF) backend": [[402, "the-extended-berkeley-packet-filter-ebpf-backend"]], "The function_ref class template": [[507, "the-function-ref-class-template"]], "The getAnalysis<> and getAnalysisIfAvailable<> methods": [[540, "the-getanalysis-and-getanalysisifavailable-methods"]], "The getAnalysisUsage method": [[540, "the-getanalysisusage-method"]], "The getModRefInfo methods": [[389, "the-getmodrefinfo-methods"]], "The high-level design of the code generator": [[402, "the-high-level-design-of-the-code-generator"]], "The isa<>, cast<> and dyn_cast<> templates": [[507, "the-isa-cast-and-dyn-cast-templates"]], "The llvm-xray Tool": [[542, "the-llvm-xray-tool"]], "The pointsToConstantMemory method": [[389, "the-pointstoconstantmemory-method"]], "The print method": [[540, "the-print-method"]], "The releaseMemory method": [[540, "the-releasememory-method"]], "The replaceWithNewValue method": [[389, "the-replacewithnewvalue-method"]], "The runOnBasicBlock method": [[540, "the-runonbasicblock-method"]], "The runOnFunction method": [[540, "the-runonfunction-method"]], "The runOnLoop method": [[540, "the-runonloop-method"]], "The runOnMachineFunction(MachineFunction &MF) method": [[540, "the-runonmachinefunction-machinefunction-mf-method"]], "The runOnModule method": [[540, "the-runonmodule-method"]], "The runOnRegion method": [[540, "the-runonregion-method"]], "The runOnSCC method": [[540, "the-runonscc-method"]], "The walker": [[488, "the-walker"]], "The waymarking algorithm": [[507, "the-waymarking-algorithm"]], "ThinLTO Summary": [[479, "thinlto-summary"]], "Thread Local Storage Models": [[479, "thread-local-storage-models"]], "Threads and LLVM": [[507, "threads-and-llvm"]], "Threads and the JIT": [[507, "threads-and-the-jit"]], "Throw": [[454, "throw"]], "Throw Filters": [[454, "throw-filters"]], "Timeline View": [[429, "timeline-view"]], "Tips and Tricks": [[560, "tips-and-tricks"], [570, "tips-and-tricks"], [579, "tips-and-tricks"]], "Todo": [[400, "id4"], [445, "id9"], [445, "id10"], [473, "id2"], [553, "id2"], [563, "id2"]], "Token Type": [[479, "token-type"]], "Too Long; Didn't Read": [[511, "too-long-didn-t-read"]], "Top Level APIs": [[491, "top-level-apis"]], "Top-Level Classes and Functions": [[445, "top-level-classes-and-functions"]], "Top-Level let": [[530, "top-level-let"]], "Toy example": [[481, "toy-example"]], "Trace Analysis Tools": [[541, "trace-analysis-tools"], [541, "id2"]], "Tracing CMP instructions": [[481, "tracing-cmp-instructions"]], "Trampoline Intrinsics": [[479, "trampoline-intrinsics"]], "Transform Passes": [[505, "transform-passes"]], "Transformation Metadata Structure": [[536, "transformation-metadata-structure"]], "Transition Options": [[511, "transition-options"]], "Transitioning from ORCv1 to ORCv2": [[491, "transitioning-from-orcv1-to-orcv2"]], "Trap Handler ABI": [[386, "trap-handler-abi"], [386, "id40"]], "Treat Compiler Warnings Like Errors": [[404, "treat-compiler-warnings-like-errors"]], "Treating calls and invokes the same way": [[507, "treating-calls-and-invokes-the-same-way"]], "Triaging bugs": [[396, "triaging-bugs"]], "Triples": [[490, "triples"]], "Trivial Constant Folding": [[554, "trivial-constant-folding"], [564, "trivial-constant-folding"], [575, "trivial-constant-folding"]], "Trophies": [[481, "trophies"]], "Troubleshooting": [[470, "troubleshooting"]], "Try/Catch": [[454, "try-catch"]], "Tuning/Configuration Options": [[410, "tuning-configuration-options"]], "Turn Predicate Loops into Predicate Functions": [[404, "turn-predicate-loops-into-predicate-functions"]], "Turning an iterator into a class pointer (and vice-versa)": [[507, "turning-an-iterator-into-a-class-pointer-and-vice-versa"]], "Tutorial Conclusion": [[560, "tutorial-conclusion"], [570, "tutorial-conclusion"], [579, "tutorial-conclusion"]], "Tutorial Introduction": [[551, "tutorial-introduction"], [572, "tutorial-introduction"]], "Tutorial: A Simple Compute Kernel": [[490, "tutorial-a-simple-compute-kernel"]], "Tutorial: Linking with Libdevice": [[490, "tutorial-linking-with-libdevice"]], "Type ID Summary Entry": [[479, "type-id-summary-entry"]], "Type Indices": [[502, "type-indices"]], "Type Metadata": [[537, null]], "Type Offsets for A, B, C, D": [[537, "id2"]], "Type Record Options": [[433, "type-record-options"], [433, "id6"]], "Type Server Map Substream": [[495, "type-server-map-substream"]], "Type System": [[479, "type-system"]], "Type and Size Suffices": [[383, "type-and-size-suffices"]], "Type deviation": [[82, null], [170, null], [267, null], [364, null]], "TypeCheckedLoadConstVCalls": [[479, "typecheckedloadconstvcalls"]], "TypeCheckedLoadVCalls": [[479, "typecheckedloadvcalls"]], "TypeIdInfo": [[479, "typeidinfo"]], "TypeTestAssumeConstVCalls": [[479, "typetestassumeconstvcalls"]], "TypeTestAssumeVCalls": [[479, "typetestassumevcalls"]], "TypeTests": [[479, "typetests"]], "Types": [[450, "types"], [530, "types"]], "UNABBREV_RECORD Encoding": [[393, "unabbrev-record-encoding"]], "USING MARKERS TO ANALYZE SPECIFIC CODE BLOCKS": [[429, "using-markers-to-analyze-specific-code-blocks"]], "Unary Operations": [[479, "unary-operations"]], "Unary Operators": [[385, "unary-operators"]], "Undefined Values": [[479, "undefined-values"]], "Unique types": [[544, "unique-types"]], "Unit and Regression tests": [[535, "unit-and-regression-tests"]], "Unit tests": [[535, "unit-tests"]], "Unordered": [[390, "unordered"]], "Unpacking the LLVM Archives": [[463, "unpacking-the-llvm-archives"]], "Unroll-And-Jam": [[536, "unroll-and-jam"]], "Unspecified OS": [[386, "unspecified-os"]], "Update Documentation": [[472, "update-documentation"]], "Update LLVM Version": [[472, "update-llvm-version"]], "Update the LLVM Demo Page": [[472, "update-the-llvm-demo-page"]], "Update the LLVM Website": [[472, "update-the-llvm-website"]], "Updating Toolchain Requirements": [[452, "updating-toolchain-requirements"]], "Updating analysis results for transformations": [[389, "updating-analysis-results-for-transformations"]], "Usage": [[453, "usage"], [466, "usage"], [517, "usage"], [538, "usage"], [538, "id2"]], "Use Early Exits and continue to Simplify Code": [[404, "use-early-exits-and-continue-to-simplify-code"]], "Use Optimization": [[488, "use-optimization"]], "Use Standard C Headers": [[525, "use-standard-c-headers"]], "Use Standard C++ Headers": [[525, "id1"]], "Use auto Type Deduction to Make Code More Readable": [[404, "use-auto-type-deduction-to-make-code-more-readable"]], "Use of allocas": [[459, "use-of-allocas"]], "Use of class and struct Keywords": [[404, "use-of-class-and-struct-keywords"]], "Use range-based for loops wherever possible": [[404, "use-range-based-for-loops-wherever-possible"]], "Use raw_ostream": [[404, "use-raw-ostream"]], "Use-cases": [[491, "use-cases"]], "Use-list Order Directives": [[479, "use-list-order-directives"]], "Useful Built-in Commands": [[401, "useful-built-in-commands"]], "User Context Data": [[544, "user-context-data"]], "User Data": [[386, "user-data"]], "User Guide for AMDGPU Backend": [[386, null]], "User Guide for NVPTX Back-end": [[490, null]], "User Guides": [[545, "user-guides"]], "User-defined Binary Operators": [[556, "user-defined-binary-operators"], [566, "user-defined-binary-operators"], [577, "user-defined-binary-operators"]], "User-defined Local Variables": [[557, "user-defined-local-variables"], [567, "user-defined-local-variables"], [578, "user-defined-local-variables"]], "User-defined Operators: the Idea": [[556, "user-defined-operators-the-idea"], [566, "user-defined-operators-the-idea"], [577, "user-defined-operators-the-idea"]], "User-defined Unary Operators": [[556, "user-defined-unary-operators"], [566, "user-defined-unary-operators"], [577, "user-defined-unary-operators"]], "User-supplied mutators": [[481, "user-supplied-mutators"]], "Using -opt-bisect-limit to debug optimization errors": [[492, null]], "Using ARM NEON instructions in big endian mode": [[392, null]], "Using ExitOnError to simplify tool code": [[507, "using-exitonerror-to-simplify-tool-code"]], "Using GDB with dynamically loaded passes": [[540, "using-gdb-with-dynamically-loaded-passes"]], "Using RegisterAnalysisGroup": [[540, "using-registeranalysisgroup"]], "Using TableGen for target description": [[402, "using-tablegen-for-target-description"]], "Using XRay": [[541, "using-xray"]], "Using a Different Class on Host/Device": [[446, "using-a-different-class-on-host-device"]], "Using alias analysis results": [[389, "using-alias-analysis-results"]], "Using cantFail to simplify safe callsites": [[507, "using-cantfail-to-simplify-safe-callsites"]], "Using debugify": [[519, "using-debugify"]], "Using existing registries": [[540, "using-existing-registries"]], "Using the AliasAnalysis interface directly": [[389, "using-the-aliasanalysis-interface-directly"]], "Using the AliasSetTracker class": [[389, "using-the-aliassettracker-class"]], "Using the MachineInstrBuilder.h functions": [[402, "using-the-machineinstrbuilder-h-functions"]], "Using the MemoryDependenceAnalysis Pass": [[389, "using-the-memorydependenceanalysis-pass"]], "Using the script": [[469, "using-the-script"]], "Utilities for Writing Fuzzers": [[460, "utilities-for-writing-fuzzers"]], "Utility Macros": [[544, "utility-macros"]], "Utility Passes": [[505, "utility-passes"]], "Utility Passes for Safepoint Insertion": [[524, "utility-passes-for-safepoint-insertion"]], "VALU": [[386, "valu"]], "VALUE_SYMTAB_BLOCK Contents": [[393, "value-symtab-block-contents"]], "VGPR Register Set Up Order": [[386, "amdgpu-amdhsa-vgpr-register-set-up-order-table"]], "VINTRP": [[0, "vintrp"], [1, "vintrp"], [2, "vintrp"], [3, "vintrp"]], "VINTRP Modifiers": [[384, "vintrp-modifiers"]], "VLIW Packetizer": [[402, "vliw-packetizer"]], "VOP1": [[0, "vop1"], [1, "vop1"], [2, "vop1"], [3, "vop1"]], "VOP2": [[0, "vop2"], [1, "vop2"], [2, "vop2"], [3, "vop2"]], "VOP3": [[0, "vop3"], [1, "vop3"], [2, "vop3"], [3, "vop3"]], "VOP3 Modifiers": [[384, "vop3-modifiers"]], "VOP3 Operand Modifiers": [[384, "vop3-operand-modifiers"]], "VOP3P": [[0, "vop3p"], [3, "vop3p"]], "VOP3P Modifiers": [[384, "vop3p-modifiers"]], "VOP3P V_MAD_MIX Modifiers": [[384, "vop3p-v-mad-mix-modifiers"]], "VOPC": [[0, "vopc"], [1, "vopc"], [2, "vopc"], [3, "vopc"]], "VP": [[479, "vp"]], "Validation": [[544, "validation"]], "Value Profile": [[481, "value-profile"]], "Value definitions": [[529, "value-definitions"]], "Values": [[530, "values"]], "Variable Argument Handling Intrinsics": [[479, "variable-argument-handling-intrinsics"]], "Variable Length Arrays": [[456, "variable-length-arrays"]], "Variable Names Coding Standard Options": [[511, "variable-names-coding-standard-options"]], "Variable Names Plan": [[511, null]], "Variable Sized Allocas": [[518, "variable-sized-allocas"]], "Variable Width Integers": [[393, "variable-width-value"]], "Variable locations during Register Allocation": [[519, "variable-locations-during-register-allocation"]], "Variable locations in Instruction Selection and MIR": [[519, "variable-locations-in-instruction-selection-and-mir"]], "Variables": [[559, "variables"], [569, "variables"]], "Variables for Building Libraries": [[508, "variables-for-building-libraries"]], "Variables for Building Programs": [[508, "variables-for-building-programs"]], "Variables for Building Subdirectories": [[508, "variables-for-building-subdirectories"]], "Variables, Types, and Scope": [[401, "variables-types-and-scope"]], "Vector Operations": [[479, "vector-operations"]], "Vector Type": [[479, "vector-type"]], "Vector of pointers:": [[479, "vector-of-pointers"]], "Vectorization Plan": [[512, null]], "Vectorization Workflow": [[512, "vectorization-workflow"]], "Vectorization of Mixed Types": [[538, "vectorization-of-mixed-types"]], "Vectorization of function calls": [[538, "vectorization-of-function-calls"]], "Versioning LICM": [[536, "versioning-licm"]], "Versions": [[481, "versions"]], "Viewing graphs while debugging code": [[507, "viewing-graphs-while-debugging-code"]], "Virtual Table Layout for A, B, C, D": [[537, "id1"]], "Visibility Styles": [[479, "visibility-styles"]], "Void Type": [[479, "void-type"]], "Volatile Memory Accesses": [[479, "volatile-memory-accesses"]], "WallClockTime Records": [[543, "wallclocktime-records"]], "Ways to Contribute": [[448, "ways-to-contribute"]], "Weighted Input": [[434, "weighted-input"]], "Well-Formedness": [[479, "well-formedness"]], "What API do I use to store a value to one of the virtual registers in LLVM IR's SSA representation?": [[457, "what-api-do-i-use-to-store-a-value-to-one-of-the-virtual-registers-in-llvm-ir-s-ssa-representation"]], "What About Branches and Merges?": [[509, "what-about-branches-and-merges"]], "What About Commit Emails?": [[509, "what-about-commit-emails"]], "What PassManager does": [[540, "what-passmanager-does"]], "What This Proposal is Not About": [[509, "what-this-proposal-is-not-about"]], "What effect do address spaces have on GEPs?": [[462, "what-effect-do-address-spaces-have-on-geps"]], "What happens after you file a report?": [[516, "what-happens-after-you-file-a-report"]], "What happens if a GEP computation overflows?": [[462, "what-happens-if-a-gep-computation-overflows"]], "What happens if an array index is out of bounds?": [[462, "what-happens-if-an-array-index-is-out-of-bounds"]], "What is Garbage Collection?": [[461, "what-is-garbage-collection"]], "What is dereferenced by GEP?": [[462, "what-is-dereferenced-by-gep"]], "What is the first index of the GEP instruction?": [[462, "what-is-the-first-index-of-the-gep-instruction"]], "What is this \"undef\" thing that shows up in my code?": [[457, "what-is-this-undef-thing-that-shows-up-in-my-code"]], "What is this llvm.global_ctors and _GLOBAL__I_a... stuff that happens when I #include <iostream>?": [[457, "what-is-this-llvm-global-ctors-and-global-i-a-stuff-that-happens-when-i-include-iostream"]], "What should I know to be able to follow along with this document?": [[489, "what-should-i-know-to-be-able-to-follow-along-with-this-document"]], "What source languages are supported?": [[457, "what-source-languages-are-supported"]], "What support is there for a higher level source language constructs for building a compiler?": [[457, "what-support-is-there-for-a-higher-level-source-language-constructs-for-building-a-compiler"]], "What to do when bugpoint isn't enough": [[397, "what-to-do-when-bugpoint-isn-t-enough"]], "What we associate in cmpValues?": [[489, "what-we-associate-in-cmpvalues"]], "What's an uglygep?": [[462, "what-s-an-uglygep"]], "When to specify alignment": [[459, "when-to-specify-alignment"]], "Where did all of my code go??": [[457, "where-did-all-of-my-code-go"]], "Where to host the meetup?": [[487, "where-to-host-the-meetup"]], "Which image should I choose?": [[453, "which-image-should-i-choose"]], "Whitespace": [[404, "whitespace"]], "Why Git, and Why GitHub?": [[509, "why-git-and-why-github"]], "Why Git?": [[509, "why-git"]], "Why GitHub?": [[509, "why-github"]], "Why Move At All?": [[509, "why-move-at-all"]], "Why do GEP x,1,0,0 and GEP x,1 alias?": [[462, "why-do-gep-x-1-0-0-and-gep-x-1-alias"]], "Why do struct member indices always use i32?": [[462, "why-do-struct-member-indices-always-use-i32"]], "Why does instcombine + simplifycfg turn a call to a function with a mismatched calling convention into \"unreachable\"? Why not make the verifier reject it?": [[457, "why-does-instcombine-simplifycfg-turn-a-call-to-a-function-with-a-mismatched-calling-convention-into-unreachable-why-not-make-the-verifier-reject-it"]], "Why don't GEP x,0,0,1 and GEP x,1 alias?": [[462, "why-don-t-gep-x-0-0-1-and-gep-x-1-alias"]], "Why is GEP designed this way?": [[462, "why-is-gep-designed-this-way"]], "Why is the extra 0 index required?": [[462, "why-is-the-extra-0-index-required"]], "Why is this a hard problem?": [[557, "why-is-this-a-hard-problem"], [559, "why-is-this-a-hard-problem"], [567, "why-is-this-a-hard-problem"], [569, "why-is-this-a-hard-problem"], [578, "why-is-this-a-hard-problem"]], "Why?": [[453, "why"]], "Windows": [[447, "windows"]], "Windows Runtime Exception Handling": [[454, "windows-runtime-exception-handling"]], "Windows on ARM": [[456, "windows-on-arm"]], "Windows on ARM64": [[456, "windows-on-arm64"]], "Word Alignment": [[393, "word-alignment"]], "Workflow Before/After": [[509, "workflow-before-after"]], "Workflows": [[509, "workflows"]], "Working with CodeView": [[519, "working-with-codeview"]], "Write Portable Code": [[404, "write-portable-code"]], "Write barrier: llvm.gcwrite": [[461, "write-barrier-llvm-gcwrite"]], "Write-Back and Retire Stage": [[429, "write-back-and-retire-stage"]], "Writing Custom Tests for the test-suite": [[534, "writing-custom-tests-for-the-test-suite"]], "Writing LLVM Style Makefiles": [[508, "writing-llvm-style-makefiles"]], "Writing a custom parser": [[445, "writing-a-custom-parser"]], "Writing a new AliasAnalysis Implementation": [[389, "writing-a-new-aliasanalysis-implementation"]], "Writing an LLVM Backend": [[539, null]], "Writing an LLVM Pass": [[540, null]], "Writing new regression tests": [[535, "writing-new-regression-tests"]], "X86": [[447, "x86"], [456, "x86"]], "X86 Calling Conventions supported": [[402, "x86-calling-conventions-supported"]], "X86 Target Triples supported": [[402, "x86-target-triples-supported"]], "X86 address spaces supported": [[402, "x86-address-spaces-supported"]], "X86/COFF-Dependent": [[456, "x86-coff-dependent"]], "X86EVEX2VEX": [[527, "x86evex2vex"]], "X86_mmx Type": [[479, "x86-mmx-type"]], "XCore": [[447, "xcore"]], "XRay Flight Data Recorder Trace Format": [[543, null]], "XRay Instrumentation": [[541, null]], "XRay Runtime Library": [[541, "xray-runtime-library"]], "XRay in LLVM": [[541, "xray-in-llvm"]], "YAML I/O": [[544, null]], "YAML remarks": [[515, "yaml-remarks"]], "Zext GEP indices to machine register width": [[459, "zext-gep-indices-to-machine-register-width"]], "Zig Programming Language": [[513, "zig-programming-language"]], "Zipping local history": [[509, "zipping-local-history"]], "a16": [[384, "a16"]], "abs": [[384, "abs"], [384, "amdgpu-synid-abs"], [384, "id28"]], "addr64": [[384, "addr64"]], "attr": [[8, null], [106, null], [190, null], [287, null]], "bank_mask": [[384, "bank-mask"]], "bound_ctrl": [[384, "bound-ctrl"]], "branch_weights": [[479, "branch-weights"]], "bugpoint - automatic test case reduction tool": [[406, null]], "bytes": [[433, "bytes"]], "clamp": [[384, "clamp"], [384, "amdgpu-synid-clamp"], [384, "id27"], [384, "id30"]], "clang-format-fuzzer": [[460, "clang-format-fuzzer"]], "clang-fuzzer": [[460, "clang-fuzzer"]], "clang-proto-fuzzer": [[460, "clang-proto-fuzzer"]], "classes": [[530, "classes"]], "cmpConstants": [[489, "cmpconstants"]], "cmpGEP": [[489, "cmpgep"]], "cmpOperation": [[489, "cmpoperation"]], "cmpValues(const Value*, const Value*)": [[489, "cmpvalues-const-value-const-value"]], "compare(const BasicBlock*, const BasicBlock*)": [[489, "compare-const-basicblock-const-basicblock"]], "compr": [[384, "compr"]], "compute_pgm_rsrc1 for GFX6-GFX10": [[386, "amdgpu-amdhsa-compute-pgm-rsrc1-gfx6-gfx10-table"]], "compute_pgm_rsrc2 for GFX6-GFX10": [[386, "amdgpu-amdhsa-compute-pgm-rsrc2-gfx6-gfx10-table"]], "compute_pgm_rsrc3 for GFX10": [[386, "amdgpu-amdhsa-compute-pgm-rsrc3-gfx10-table"]], "constant": [[385, "constant"]], "d16": [[384, "d16"]], "da": [[384, "da"]], "debugify in regression tests": [[519, "debugify-in-regression-tests"]], "def": [[530, "def"]], "defm": [[530, "defm"]], "defset": [[530, "defset"]], "dfmt": [[384, "dfmt"]], "dim": [[384, "dim"]], "dlc": [[384, "dlc"], [384, "id5"], [384, "amdgpu-synid-dlc"], [384, "id16"], [384, "id20"]], "dmask": [[384, "dmask"]], "done": [[384, "done"]], "dpp16_ctrl": [[384, "dpp16-ctrl"]], "dpp8_sel": [[384, "dpp8-sel"]], "dpp_ctrl": [[384, "dpp-ctrl"]], "dst": [[49, null], [134, null], [234, null], [329, null]], "dst_sel": [[384, "dst-sel"]], "dst_unused": [[384, "dst-unused"]], "dsymutil - manipulate archived DWARF debug symbol files": [[407, null]], "dump": [[433, "dump"]], "eBPF maps": [[402, "ebpf-maps"]], "exec": [[385, "exec"]], "execz": [[385, "execz"]], "fconst": [[385, "fconst"]], "fi": [[384, "fi"], [384, "amdgpu-synid-fi16"]], "findRegressions-nightly.py": [[514, "findregressions-nightly-py"]], "flat_scratch": [[385, "flat-scratch"]], "foreach": [[530, "foreach"]], "formatv Examples": [[507, "formatv-examples"]], "function_entry_count": [[479, "function-entry-count"]], "fx": [[38, null], [318, null]], "gds": [[384, "gds"]], "glc": [[384, "glc"], [384, "id2"], [384, "amdgpu-synid-glc"], [384, "id13"], [384, "id18"]], "high": [[384, "high"]], "hwreg": [[36, null], [126, null], [221, null], [315, null]], "iconst": [[385, "iconst"]], "idxen": [[384, "amdgpu-synid-idxen"]], "if statement": [[395, "if-statement"]], "ilist_traits": [[507, "ilist-traits"]], "imm16": [[12, null], [66, null], [83, null], [109, null], [146, null], [171, null], [193, null], [249, null], [268, null], [291, null], [346, null], [365, null]], "imm3": [[48, null], [233, null], [328, null]], "imm32": [[13, null], [34, null], [35, null], [110, null], [125, null], [194, null], [219, null], [220, null], [292, null], [313, null], [314, null]], "imm4": [[222, null], [316, null]], "iplist": [[507, "iplist"]], "ival": [[385, "ival"]], "label": [[37, null], [127, null], [223, null], [317, null]], "lds": [[384, "lds"], [384, "amdgpu-synid-lds"], [384, "id15"]], "lds_direct": [[385, "lds-direct"]], "libFuzzer \u2013 a library for coverage-guided fuzz testing.": [[481, null]], "libLTO": [[482, "liblto"]], "lit - LLVM Integrated Tester": [[409, null]], "literal": [[385, "literal"]], "llc - LLVM static compiler": [[410, null]], "lli - directly execute programs from LLVM bitcode": [[411, null]], "llvm-ar - LLVM archiver": [[413, null]], "llvm-as - LLVM assembler": [[414, null]], "llvm-as-fuzzer": [[460, "llvm-as-fuzzer"]], "llvm-bcanalyzer - LLVM bitcode analyzer": [[415, null]], "llvm-build - LLVM Project Build Utility": [[416, null]], "llvm-config - Print LLVM compilation options": [[417, null]], "llvm-cov - emit coverage information": [[418, null]], "llvm-cxxfilt - LLVM symbol name demangler": [[419, null]], "llvm-cxxmap - Mangled name remapping tool": [[420, null]], "llvm-demangle-fuzzer": [[460, "llvm-demangle-fuzzer"]], "llvm-diff - LLVM structural 'diff'": [[421, null]], "llvm-dis - LLVM disassembler": [[422, null]], "llvm-dwarfdump - dump and verify DWARF debug information": [[423, null]], "llvm-dwarfdump-fuzzer": [[460, "llvm-dwarfdump-fuzzer"]], "llvm-exegesis - LLVM Machine Instruction Benchmark": [[424, null]], "llvm-extract - extract a function from an LLVM module": [[425, null]], "llvm-isel-fuzzer": [[460, "llvm-isel-fuzzer"]], "llvm-lib - LLVM lib.exe compatible library tool": [[426, null]], "llvm-link - LLVM bitcode linker": [[427, null]], "llvm-lipo - LLVM tool for manipulating universal binaries": [[428, null]], "llvm-mc-assemble-fuzzer": [[460, "llvm-mc-assemble-fuzzer"]], "llvm-mc-disassemble-fuzzer": [[460, "llvm-mc-disassemble-fuzzer"]], "llvm-mca - LLVM Machine Code Analyzer": [[429, null]], "llvm-nm - list LLVM bitcode and object file's symbol table": [[430, null]], "llvm-objcopy - object copying and editing tool": [[431, null]], "llvm-objdump - LLVM's object file dumper": [[432, null]], "llvm-opt-fuzzer": [[460, "llvm-opt-fuzzer"]], "llvm-pdbutil - PDB File forensics and diagnostics": [[433, null]], "llvm-profdata - Profile data tool": [[434, null]], "llvm-readelf - GNU-style LLVM Object Reader": [[436, null]], "llvm-readobj - LLVM Object Reader": [[437, null]], "llvm-stress - generate random .ll files": [[439, null]], "llvm-symbolizer - convert addresses into source code locations": [[442, null]], "llvm.dbg.addr": [[519, "llvm-dbg-addr"]], "llvm.dbg.declare": [[519, "llvm-dbg-declare"]], "llvm.dbg.value": [[519, "llvm-dbg-value"]], "llvm.eh.begincatch": [[454, "llvm-eh-begincatch"]], "llvm.eh.endcatch": [[454, "llvm-eh-endcatch"]], "llvm.eh.exceptionpointer": [[454, "llvm-eh-exceptionpointer"]], "llvm.eh.sjlj.callsite": [[454, "llvm-eh-sjlj-callsite"]], "llvm.eh.sjlj.longjmp": [[454, "llvm-eh-sjlj-longjmp"]], "llvm.eh.sjlj.lsda": [[454, "llvm-eh-sjlj-lsda"]], "llvm.eh.sjlj.setjmp": [[454, "llvm-eh-sjlj-setjmp"]], "llvm.eh.typeid.for": [[454, "llvm-eh-typeid-for"]], "llvm/ADT/ArrayRef.h": [[507, "llvm-adt-arrayref-h"]], "llvm/ADT/DenseMap.h": [[507, "llvm-adt-densemap-h"]], "llvm/ADT/DenseSet.h": [[507, "llvm-adt-denseset-h"]], "llvm/ADT/FoldingSet.h": [[507, "llvm-adt-foldingset-h"]], "llvm/ADT/ImmutableMap.h": [[507, "llvm-adt-immutablemap-h"]], "llvm/ADT/ImmutableSet.h": [[507, "llvm-adt-immutableset-h"]], "llvm/ADT/IndexedMap.h": [[507, "llvm-adt-indexedmap-h"]], "llvm/ADT/IntEqClasses.h": [[507, "llvm-adt-inteqclasses-h"]], "llvm/ADT/IntervalMap.h": [[507, "llvm-adt-intervalmap-h"]], "llvm/ADT/MapVector.h": [[507, "llvm-adt-mapvector-h"]], "llvm/ADT/PackedVector.h": [[507, "llvm-adt-packedvector-h"]], "llvm/ADT/SetVector.h": [[507, "llvm-adt-setvector-h"]], "llvm/ADT/SmallPtrSet.h": [[507, "llvm-adt-smallptrset-h"]], "llvm/ADT/SmallSet.h": [[507, "llvm-adt-smallset-h"]], "llvm/ADT/SmallString.h": [[507, "llvm-adt-smallstring-h"]], "llvm/ADT/SmallVector.h": [[507, "llvm-adt-smallvector-h"]], "llvm/ADT/SparseMultiSet.h": [[507, "llvm-adt-sparsemultiset-h"]], "llvm/ADT/SparseSet.h": [[507, "llvm-adt-sparseset-h"]], "llvm/ADT/StringMap.h": [[507, "llvm-adt-stringmap-h"]], "llvm/ADT/StringRef.h": [[507, "llvm-adt-stringref-h"]], "llvm/ADT/StringSet.h": [[507, "llvm-adt-stringset-h"]], "llvm/ADT/TinyPtrVector.h": [[507, "llvm-adt-tinyptrvector-h"]], "llvm/ADT/Twine.h": [[507, "llvm-adt-twine-h"]], "llvm/ADT/UniqueVector.h": [[507, "llvm-adt-uniquevector-h"]], "llvm/ADT/ilist.h": [[507, "llvm-adt-ilist-h"]], "llvm/ADT/ilist_node.h": [[507, "llvm-adt-ilist-node-h"]], "llvm/IR/ValueMap.h": [[507, "llvm-ir-valuemap-h"]], "llvm/examples": [[463, "llvm-examples"]], "llvm/include": [[463, "llvm-include"]], "llvm/lib": [[463, "llvm-lib"]], "llvm/projects": [[463, "llvm-projects"]], "llvm/test": [[463, "llvm-test"]], "llvm/tools": [[463, "llvm-tools"]], "llvm/utils": [[463, "llvm-utils"]], "lto_code_gen_t": [[482, "lto-code-gen-t"]], "lto_module_t": [[482, "lto-module-t"]], "lwe": [[384, "lwe"]], "m": [[39, null], [40, null], [41, null], [128, null], [224, null], [225, null], [226, null], [319, null], [320, null], [321, null]], "m0": [[385, "m0"]], "m_op_sel": [[384, "m-op-sel"]], "m_op_sel_hi": [[384, "m-op-sel-hi"]], "macOS": [[447, "macos"]], "make.implicit metadata": [[458, "make-implicit-metadata"]], "merge": [[433, "merge"]], "msg": [[42, null], [129, null], [227, null], [322, null]], "multiclass": [[530, "multiclass"]], "neg": [[384, "neg"], [384, "amdgpu-synid-neg"], [384, "id29"]], "neg_hi": [[384, "neg-hi"]], "neg_lo": [[384, "neg-lo"]], "nfmt": [[384, "nfmt"]], "null": [[385, "null"]], "nv": [[384, "nv"], [384, "amdgpu-synid-nv"], [384, "id19"]], "off": [[385, "off"]], "offen": [[384, "offen"]], "offset11": [[384, "offset11"]], "offset12": [[384, "offset12"], [384, "amdgpu-synid-buf-offset12"]], "offset12s": [[384, "offset12s"]], "offset13s": [[384, "offset13s"]], "offset16": [[384, "offset16"]], "offset8": [[384, "offset8"]], "omod": [[384, "omod"], [384, "amdgpu-synid-omod"]], "op_sel": [[384, "op-sel"], [384, "amdgpu-synid-op-sel"]], "op_sel_hi": [[384, "op-sel-hi"]], "opt": [[46, null], [132, null], [231, null], [326, null]], "opt - LLVM optimizer": [[443, null]], "opt-diff.py": [[515, "opt-diff-py"]], "opt-stats.py": [[515, "opt-stats-py"]], "opt-viewer": [[515, "opt-viewer"]], "opt-viewer.py": [[515, "opt-viewer-py"]], "param": [[47, null], [133, null], [232, null], [327, null]], "pdb2yaml": [[433, "pdb2yaml"]], "pretty": [[433, "pretty"]], "ptxas complains of undefined function: __nvvm_reflect": [[490, "ptxas-complains-of-undefined-function-nvvm-reflect"]], "r128": [[384, "r128"]], "rawspeed": [[510, "rawspeed"]], "row_mask": [[384, "row-mask"]], "runOnModule": [[489, "runonmodule"]], "s": [[385, "s"]], "saddr": [[52, null], [53, null], [332, null], [333, null]], "sbase": [[9, null], [10, null], [11, null], [107, null], [108, null], [191, null], [192, null], [288, null], [289, null], [290, null]], "scc": [[385, "scc"]], "sdata": [[21, null], [22, null], [23, null], [55, null], [56, null], [57, null], [238, null], [239, null], [240, null], [300, null], [301, null], [302, null], [335, null], [336, null], [337, null]], "sdst": [[58, null], [59, null], [60, null], [61, null], [62, null], [63, null], [64, null], [65, null], [100, null], [138, null], [139, null], [140, null], [141, null], [142, null], [143, null], [144, null], [145, null], [241, null], [242, null], [243, null], [244, null], [245, null], [246, null], [247, null], [248, null], [338, null], [339, null], [340, null], [341, null], [342, null], [343, null], [344, null], [345, null]], "sext": [[384, "sext"]], "simm21": [[385, "simm21"]], "slc": [[384, "slc"], [384, "id3"], [384, "amdgpu-synid-slc"], [384, "id14"]], "soffset": [[43, null], [44, null], [45, null], [130, null], [131, null], [228, null], [229, null], [230, null], [323, null], [324, null], [325, null]], "src": [[67, null], [68, null], [69, null], [70, null], [71, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [250, null], [251, null], [252, null], [253, null], [254, null], [255, null], [347, null], [348, null], [349, null], [350, null], [351, null], [352, null]], "src0_sel": [[384, "src0-sel"]], "src1_sel": [[384, "src1-sel"]], "srsrc": [[50, null], [51, null], [135, null], [136, null], [235, null], [236, null], [330, null], [331, null]], "ssamp": [[54, null], [137, null], [237, null], [334, null]], "ssrc": [[73, null], [74, null], [75, null], [76, null], [77, null], [78, null], [79, null], [80, null], [101, null], [158, null], [159, null], [160, null], [161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [257, null], [258, null], [259, null], [260, null], [261, null], [262, null], [263, null], [264, null], [265, null], [354, null], [355, null], [356, null], [357, null], [358, null], [359, null], [360, null], [361, null], [362, null]], "std::string": [[507, "std-string"]], "switch statement": [[395, "switch-statement"]], "swizzle pattern": [[384, "swizzle-pattern"]], "tba": [[385, "tba"]], "tblgen - Target Description To C++ Code Generator": [[444, null]], "test-release.sh": [[514, "test-release-sh"]], "test-suite": [[463, "test-suite"], [535, "test-suite"]], "test-suite Guide": [[533, null]], "test-suite Makefile Guide (deprecated)": [[534, null]], "tfe": [[384, "tfe"], [384, "id4"], [384, "amdgpu-synid-tfe"], [384, "id17"]], "tgt": [[81, null], [169, null], [266, null], [363, null]], "tma": [[385, "tma"]], "trap": [[385, "trap"]], "ttmp": [[385, "ttmp"]], "uimm20": [[385, "uimm20"]], "uimm21": [[385, "uimm21"]], "uimm32": [[385, "uimm32"]], "uimm8": [[385, "uimm8"]], "unorm": [[384, "unorm"]], "v": [[385, "v"]], "vaddr": [[4, null], [5, null], [6, null], [7, null], [84, null], [85, null], [102, null], [103, null], [104, null], [105, null], [186, null], [187, null], [188, null], [189, null], [283, null], [284, null], [285, null], [286, null], [366, null], [367, null]], "vcc": [[86, null], [172, null], [269, null], [368, null], [385, "vcc"]], "vccz": [[385, "vccz"]], "vdata": [[14, null], [15, null], [16, null], [17, null], [18, null], [19, null], [20, null], [87, null], [88, null], [89, null], [90, null], [111, null], [112, null], [113, null], [114, null], [115, null], [116, null], [173, null], [174, null], [175, null], [176, null], [195, null], [196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [270, null], [271, null], [272, null], [273, null], [293, null], [294, null], [295, null], [296, null], [297, null], [298, null], [299, null], [369, null], [370, null], [371, null], [372, null]], "vdst": [[24, null], [25, null], [26, null], [27, null], [28, null], [29, null], [30, null], [31, null], [32, null], [33, null], [91, null], [92, null], [93, null], [94, null], [117, null], [118, null], [119, null], [120, null], [121, null], [122, null], [123, null], [124, null], [177, null], [178, null], [179, null], [180, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null], [274, null], [275, null], [276, null], [277, null], [303, null], [304, null], [305, null], [306, null], [307, null], [308, null], [309, null], [310, null], [311, null], [312, null], [373, null], [374, null], [375, null], [376, null]], "vecmathlib tests harness": [[510, "vecmathlib-tests-harness"]], "vm": [[384, "vm"]], "vsrc": [[72, null], [95, null], [96, null], [97, null], [98, null], [157, null], [181, null], [182, null], [183, null], [184, null], [256, null], [278, null], [279, null], [280, null], [281, null], [353, null], [377, null], [378, null], [379, null], [380, null]], "waitcnt": [[99, null], [185, null], [282, null], [381, null]], "xnack": [[385, "xnack"]], "yaml2obj": [[581, null]], "yaml2pdb": [[433, "yaml2pdb"]], "}": [[485, null], [485, "id6"], [485, "id9"], [520, null], [520, "id14"], [520, "id21"], [520, "id28"], [520, "id33"], [520, "id42"]], "\u4f7f\u7528 C \u548c C++ \u524d\u7aef": [[457, "using-the-c-and-c-front-ends"]], "\u4f7f\u7528 CMake \u5efa\u7f6e LLVM": [[400, null]], "\u4f7f\u7528 gc.statepoint": [[461, "using-gc-statepoint"]], "\u4f7f\u7528 llvm.gcwrite": [[461, "using-llvm-gcwrite"]], "\u4f86\u6e90\u78bc": [[457, "source-code"]], "\u4f86\u6e90\u8a9e\u8a00": [[386, "source-languages"], [457, "source-languages"]], "\u57f7\u884c TableGen": [[531, "running-tablegen"]], "\u57fa\u672c\u6982\u5ff5": [[531, "basic-concepts"]], "\u5e38\u898b\u554f\u984c\u96c6\uff08FAQ\uff09": [[457, null]], "\u6982\u89bd": [[393, "overview"], [453, "overview"], [454, "overview"], [463, "overview"], [464, "overview"], [479, "id610"], [479, "id615"], [479, "id620"], [479, "id625"], [479, "id630"], [479, "id635"], [479, "id640"], [484, "overview"], [504, "overview"], [508, "overview"], [534, "overview"], [535, "overview"], [536, "overview"]], "\u76ee\u9304": [[473, "id1"]], "\u793e\u7fa4": [[545, "community"]], "\u7bc4\u4f8b": [[531, "example"]], "\u7bc4\u4f8b\uff1a": [[479, "examples"], [479, "id208"], [479, "id583"], [479, "id588"], [479, "id593"], [479, "id598"], [479, "id603"], [479, "id608"], [479, "id650"], [479, "id657"], [479, "id664"], [479, "id696"], [479, "id701"]], "\u7c21\u4ecb": [[0, "introduction"], [1, "introduction"], [2, "introduction"], [3, "introduction"], [382, "introduction"], [386, "introduction"], [388, "introduction"], [389, "introduction"], [390, "introduction"], [391, "introduction"], [392, "introduction"], [394, "introduction"], [395, "introduction"], [398, "introduction"], [400, "introduction"], [401, "introduction"], [402, "introduction"], [404, "introduction"], [445, "introduction"], [446, "introduction"], [449, "introduction"], [450, "introduction"], [452, "introduction"], [453, "introduction"], [454, "introduction"], [456, "introduction"], [460, "introduction"], [461, "introduction"], [462, "introduction"], [465, "introduction"], [466, "introduction"], [467, "introduction"], [468, "introduction"], [469, "introduction"], [470, "introduction"], [471, "introduction"], [472, "introduction"], [475, "introduction"], [476, "introduction"], [477, "introduction"], [478, "introduction"], [479, "introduction"], [481, "introduction"], [483, "introduction"], [484, "introduction"], [486, "introduction"], [488, "introduction"], [489, "introduction"], [490, "introduction"], [491, "introduction"], [492, "introduction"], [493, "introduction"], [494, "introduction"], [495, "introduction"], [497, "introduction"], [498, "introduction"], [502, "introduction"], [503, "introduction"], [505, "introduction"], [507, "introduction"], [509, "introduction"], [511, "introduction"], [513, "introduction"], [514, "introduction"], [517, "introduction"], [518, "introduction"], [519, "introduction"], [519, "id6"], [519, "id7"], [523, "introduction"], [527, "introduction"], [528, "introduction"], [529, "introduction"], [530, "introduction"], [531, "introduction"], [539, "introduction"], [541, "introduction"], [543, "introduction"]], "\u8a9e\u6cd5": [[530, "syntax"], [531, "syntax"]], "\u9032\u968e\u5efa\u7f6e\u7d44\u614b": [[388, null]], "\u9078\u9805\u548c\u8b8a\u6578": [[400, "options-and-variables"]]}, "docnames": ["AMDGPU/AMDGPUAsmGFX10", "AMDGPU/AMDGPUAsmGFX7", "AMDGPU/AMDGPUAsmGFX8", "AMDGPU/AMDGPUAsmGFX9", "AMDGPU/gfx10_addr_buf", "AMDGPU/gfx10_addr_ds", "AMDGPU/gfx10_addr_flat", "AMDGPU/gfx10_addr_mimg", "AMDGPU/gfx10_attr", "AMDGPU/gfx10_base_smem_addr", "AMDGPU/gfx10_base_smem_buf", "AMDGPU/gfx10_base_smem_scratch", "AMDGPU/gfx10_bimm16", "AMDGPU/gfx10_bimm32", "AMDGPU/gfx10_data_buf_atomic128", "AMDGPU/gfx10_data_buf_atomic32", "AMDGPU/gfx10_data_buf_atomic64", "AMDGPU/gfx10_data_mimg_atomic_cmp", "AMDGPU/gfx10_data_mimg_atomic_reg", "AMDGPU/gfx10_data_mimg_store", "AMDGPU/gfx10_data_mimg_store_d16", "AMDGPU/gfx10_data_smem_atomic128", "AMDGPU/gfx10_data_smem_atomic32", "AMDGPU/gfx10_data_smem_atomic64", "AMDGPU/gfx10_dst_buf_128", "AMDGPU/gfx10_dst_buf_32", "AMDGPU/gfx10_dst_buf_64", "AMDGPU/gfx10_dst_buf_96", "AMDGPU/gfx10_dst_buf_lds", "AMDGPU/gfx10_dst_flat_atomic32", "AMDGPU/gfx10_dst_flat_atomic64", "AMDGPU/gfx10_dst_mimg_gather4", "AMDGPU/gfx10_dst_mimg_regular", "AMDGPU/gfx10_dst_mimg_regular_d16", "AMDGPU/gfx10_fimm16", "AMDGPU/gfx10_fimm32", "AMDGPU/gfx10_hwreg", "AMDGPU/gfx10_label", "AMDGPU/gfx10_mad_type_dev", "AMDGPU/gfx10_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx10_mod_sdwa_sext", "AMDGPU/gfx10_mod_vop3_abs_neg", "AMDGPU/gfx10_msg", "AMDGPU/gfx10_offset_buf", "AMDGPU/gfx10_offset_smem_buf", "AMDGPU/gfx10_offset_smem_plain", "AMDGPU/gfx10_opt", "AMDGPU/gfx10_param", "AMDGPU/gfx10_perm_smem", "AMDGPU/gfx10_ret", "AMDGPU/gfx10_rsrc_buf", "AMDGPU/gfx10_rsrc_mimg", "AMDGPU/gfx10_saddr_flat_global", "AMDGPU/gfx10_saddr_flat_scratch", "AMDGPU/gfx10_samp_mimg", "AMDGPU/gfx10_sdata128_0", "AMDGPU/gfx10_sdata32_0", "AMDGPU/gfx10_sdata64_0", "AMDGPU/gfx10_sdst128_0", "AMDGPU/gfx10_sdst256_0", "AMDGPU/gfx10_sdst32_0", "AMDGPU/gfx10_sdst32_1", "AMDGPU/gfx10_sdst32_2", "AMDGPU/gfx10_sdst512_0", "AMDGPU/gfx10_sdst64_0", "AMDGPU/gfx10_sdst64_1", "AMDGPU/gfx10_simm16", "AMDGPU/gfx10_src32_0", "AMDGPU/gfx10_src32_1", "AMDGPU/gfx10_src32_2", "AMDGPU/gfx10_src32_3", "AMDGPU/gfx10_src64_0", "AMDGPU/gfx10_src_exp", "AMDGPU/gfx10_ssrc32_0", "AMDGPU/gfx10_ssrc32_1", "AMDGPU/gfx10_ssrc32_2", "AMDGPU/gfx10_ssrc32_3", "AMDGPU/gfx10_ssrc32_4", "AMDGPU/gfx10_ssrc32_5", "AMDGPU/gfx10_ssrc64_0", "AMDGPU/gfx10_ssrc64_1", "AMDGPU/gfx10_tgt", "AMDGPU/gfx10_type_dev", "AMDGPU/gfx10_uimm16", "AMDGPU/gfx10_vaddr_flat_global", "AMDGPU/gfx10_vaddr_flat_scratch", "AMDGPU/gfx10_vcc_32", "AMDGPU/gfx10_vdata128_0", "AMDGPU/gfx10_vdata32_0", "AMDGPU/gfx10_vdata64_0", "AMDGPU/gfx10_vdata96_0", "AMDGPU/gfx10_vdst128_0", "AMDGPU/gfx10_vdst32_0", "AMDGPU/gfx10_vdst64_0", "AMDGPU/gfx10_vdst96_0", "AMDGPU/gfx10_vsrc128_0", "AMDGPU/gfx10_vsrc32_0", "AMDGPU/gfx10_vsrc32_1", "AMDGPU/gfx10_vsrc64_0", "AMDGPU/gfx10_waitcnt", "AMDGPU/gfx10_wsdst", "AMDGPU/gfx10_wssrc", "AMDGPU/gfx7_addr_buf", "AMDGPU/gfx7_addr_ds", "AMDGPU/gfx7_addr_flat", "AMDGPU/gfx7_addr_mimg", "AMDGPU/gfx7_attr", "AMDGPU/gfx7_base_smem_addr", "AMDGPU/gfx7_base_smem_buf", "AMDGPU/gfx7_bimm16", "AMDGPU/gfx7_bimm32", "AMDGPU/gfx7_data_buf_atomic128", "AMDGPU/gfx7_data_buf_atomic32", "AMDGPU/gfx7_data_buf_atomic64", "AMDGPU/gfx7_data_mimg_atomic_cmp", "AMDGPU/gfx7_data_mimg_atomic_reg", "AMDGPU/gfx7_data_mimg_store", "AMDGPU/gfx7_dst_buf_128", "AMDGPU/gfx7_dst_buf_64", "AMDGPU/gfx7_dst_buf_96", "AMDGPU/gfx7_dst_buf_lds", "AMDGPU/gfx7_dst_flat_atomic32", "AMDGPU/gfx7_dst_flat_atomic64", "AMDGPU/gfx7_dst_mimg_gather4", "AMDGPU/gfx7_dst_mimg_regular", "AMDGPU/gfx7_fimm32", "AMDGPU/gfx7_hwreg", "AMDGPU/gfx7_label", "AMDGPU/gfx7_mod", "AMDGPU/gfx7_msg", "AMDGPU/gfx7_offset_buf", "AMDGPU/gfx7_offset_smem", "AMDGPU/gfx7_opt", "AMDGPU/gfx7_param", "AMDGPU/gfx7_ret", "AMDGPU/gfx7_rsrc_buf", "AMDGPU/gfx7_rsrc_mimg", "AMDGPU/gfx7_samp_mimg", "AMDGPU/gfx7_sdst128_0", "AMDGPU/gfx7_sdst256_0", "AMDGPU/gfx7_sdst32_0", "AMDGPU/gfx7_sdst32_1", "AMDGPU/gfx7_sdst32_2", "AMDGPU/gfx7_sdst512_0", "AMDGPU/gfx7_sdst64_0", "AMDGPU/gfx7_sdst64_1", "AMDGPU/gfx7_simm16", "AMDGPU/gfx7_src32_0", "AMDGPU/gfx7_src32_1", "AMDGPU/gfx7_src32_2", "AMDGPU/gfx7_src32_3", "AMDGPU/gfx7_src32_4", "AMDGPU/gfx7_src32_5", "AMDGPU/gfx7_src32_6", "AMDGPU/gfx7_src64_0", "AMDGPU/gfx7_src64_1", "AMDGPU/gfx7_src64_2", "AMDGPU/gfx7_src_exp", "AMDGPU/gfx7_ssrc32_0", "AMDGPU/gfx7_ssrc32_1", "AMDGPU/gfx7_ssrc32_2", "AMDGPU/gfx7_ssrc32_3", "AMDGPU/gfx7_ssrc32_4", "AMDGPU/gfx7_ssrc32_5", "AMDGPU/gfx7_ssrc32_6", "AMDGPU/gfx7_ssrc64_0", "AMDGPU/gfx7_ssrc64_1", "AMDGPU/gfx7_ssrc64_2", "AMDGPU/gfx7_ssrc64_3", "AMDGPU/gfx7_tgt", "AMDGPU/gfx7_type_dev", "AMDGPU/gfx7_uimm16", "AMDGPU/gfx7_vcc_64", "AMDGPU/gfx7_vdata128_0", "AMDGPU/gfx7_vdata32_0", "AMDGPU/gfx7_vdata64_0", "AMDGPU/gfx7_vdata96_0", "AMDGPU/gfx7_vdst128_0", "AMDGPU/gfx7_vdst32_0", "AMDGPU/gfx7_vdst64_0", "AMDGPU/gfx7_vdst96_0", "AMDGPU/gfx7_vsrc128_0", "AMDGPU/gfx7_vsrc32_0", "AMDGPU/gfx7_vsrc32_1", "AMDGPU/gfx7_vsrc64_0", "AMDGPU/gfx7_waitcnt", "AMDGPU/gfx8_addr_buf", "AMDGPU/gfx8_addr_ds", "AMDGPU/gfx8_addr_flat", "AMDGPU/gfx8_addr_mimg", "AMDGPU/gfx8_attr", "AMDGPU/gfx8_base_smem_addr", "AMDGPU/gfx8_base_smem_buf", "AMDGPU/gfx8_bimm16", "AMDGPU/gfx8_bimm32", "AMDGPU/gfx8_data_buf_atomic128", "AMDGPU/gfx8_data_buf_atomic32", "AMDGPU/gfx8_data_buf_atomic64", "AMDGPU/gfx8_data_buf_d16_128", "AMDGPU/gfx8_data_buf_d16_32", "AMDGPU/gfx8_data_buf_d16_64", "AMDGPU/gfx8_data_buf_d16_96", "AMDGPU/gfx8_data_mimg_atomic_cmp", "AMDGPU/gfx8_data_mimg_atomic_reg", "AMDGPU/gfx8_data_mimg_store", "AMDGPU/gfx8_data_mimg_store_d16", "AMDGPU/gfx8_dst_buf_128", "AMDGPU/gfx8_dst_buf_64", "AMDGPU/gfx8_dst_buf_96", "AMDGPU/gfx8_dst_buf_d16_128", "AMDGPU/gfx8_dst_buf_d16_32", "AMDGPU/gfx8_dst_buf_d16_64", "AMDGPU/gfx8_dst_buf_d16_96", "AMDGPU/gfx8_dst_buf_lds", "AMDGPU/gfx8_dst_flat_atomic32", "AMDGPU/gfx8_dst_flat_atomic64", "AMDGPU/gfx8_dst_mimg_gather4", "AMDGPU/gfx8_dst_mimg_regular", "AMDGPU/gfx8_dst_mimg_regular_d16", "AMDGPU/gfx8_fimm16", "AMDGPU/gfx8_fimm32", "AMDGPU/gfx8_hwreg", "AMDGPU/gfx8_imm4", "AMDGPU/gfx8_label", "AMDGPU/gfx8_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx8_mod_sdwa_sext", "AMDGPU/gfx8_mod_vop3_abs_neg", "AMDGPU/gfx8_msg", "AMDGPU/gfx8_offset_buf", "AMDGPU/gfx8_offset_smem_load", "AMDGPU/gfx8_offset_smem_store", "AMDGPU/gfx8_opt", "AMDGPU/gfx8_param", "AMDGPU/gfx8_perm_smem", "AMDGPU/gfx8_ret", "AMDGPU/gfx8_rsrc_buf", "AMDGPU/gfx8_rsrc_mimg", "AMDGPU/gfx8_samp_mimg", "AMDGPU/gfx8_sdata128_0", "AMDGPU/gfx8_sdata32_0", "AMDGPU/gfx8_sdata64_0", "AMDGPU/gfx8_sdst128_0", "AMDGPU/gfx8_sdst256_0", "AMDGPU/gfx8_sdst32_0", "AMDGPU/gfx8_sdst32_1", "AMDGPU/gfx8_sdst32_2", "AMDGPU/gfx8_sdst512_0", "AMDGPU/gfx8_sdst64_0", "AMDGPU/gfx8_sdst64_1", "AMDGPU/gfx8_simm16", "AMDGPU/gfx8_src32_0", "AMDGPU/gfx8_src32_1", "AMDGPU/gfx8_src32_2", "AMDGPU/gfx8_src32_3", "AMDGPU/gfx8_src64_0", "AMDGPU/gfx8_src64_1", "AMDGPU/gfx8_src_exp", "AMDGPU/gfx8_ssrc32_0", "AMDGPU/gfx8_ssrc32_1", "AMDGPU/gfx8_ssrc32_2", "AMDGPU/gfx8_ssrc32_3", "AMDGPU/gfx8_ssrc32_4", "AMDGPU/gfx8_ssrc64_0", "AMDGPU/gfx8_ssrc64_1", "AMDGPU/gfx8_ssrc64_2", "AMDGPU/gfx8_ssrc64_3", "AMDGPU/gfx8_tgt", "AMDGPU/gfx8_type_dev", "AMDGPU/gfx8_uimm16", "AMDGPU/gfx8_vcc_64", "AMDGPU/gfx8_vdata128_0", "AMDGPU/gfx8_vdata32_0", "AMDGPU/gfx8_vdata64_0", "AMDGPU/gfx8_vdata96_0", "AMDGPU/gfx8_vdst128_0", "AMDGPU/gfx8_vdst32_0", "AMDGPU/gfx8_vdst64_0", "AMDGPU/gfx8_vdst96_0", "AMDGPU/gfx8_vsrc128_0", "AMDGPU/gfx8_vsrc32_0", "AMDGPU/gfx8_vsrc32_1", "AMDGPU/gfx8_vsrc64_0", "AMDGPU/gfx8_waitcnt", "AMDGPU/gfx9_addr_buf", "AMDGPU/gfx9_addr_ds", "AMDGPU/gfx9_addr_flat", "AMDGPU/gfx9_addr_mimg", "AMDGPU/gfx9_attr", "AMDGPU/gfx9_base_smem_addr", "AMDGPU/gfx9_base_smem_buf", "AMDGPU/gfx9_base_smem_scratch", "AMDGPU/gfx9_bimm16", "AMDGPU/gfx9_bimm32", "AMDGPU/gfx9_data_buf_atomic128", "AMDGPU/gfx9_data_buf_atomic32", "AMDGPU/gfx9_data_buf_atomic64", "AMDGPU/gfx9_data_mimg_atomic_cmp", "AMDGPU/gfx9_data_mimg_atomic_reg", "AMDGPU/gfx9_data_mimg_store", "AMDGPU/gfx9_data_mimg_store_d16", "AMDGPU/gfx9_data_smem_atomic128", "AMDGPU/gfx9_data_smem_atomic32", "AMDGPU/gfx9_data_smem_atomic64", "AMDGPU/gfx9_dst_buf_128", "AMDGPU/gfx9_dst_buf_32", "AMDGPU/gfx9_dst_buf_64", "AMDGPU/gfx9_dst_buf_96", "AMDGPU/gfx9_dst_buf_lds", "AMDGPU/gfx9_dst_flat_atomic32", "AMDGPU/gfx9_dst_flat_atomic64", "AMDGPU/gfx9_dst_mimg_gather4", "AMDGPU/gfx9_dst_mimg_regular", "AMDGPU/gfx9_dst_mimg_regular_d16", "AMDGPU/gfx9_fimm16", "AMDGPU/gfx9_fimm32", "AMDGPU/gfx9_hwreg", "AMDGPU/gfx9_imm4", "AMDGPU/gfx9_label", "AMDGPU/gfx9_mad_type_dev", "AMDGPU/gfx9_mod_dpp_sdwa_abs_neg", "AMDGPU/gfx9_mod_sdwa_sext", "AMDGPU/gfx9_mod_vop3_abs_neg", "AMDGPU/gfx9_msg", "AMDGPU/gfx9_offset_buf", "AMDGPU/gfx9_offset_smem_buf", "AMDGPU/gfx9_offset_smem_plain", "AMDGPU/gfx9_opt", "AMDGPU/gfx9_param", "AMDGPU/gfx9_perm_smem", "AMDGPU/gfx9_ret", "AMDGPU/gfx9_rsrc_buf", "AMDGPU/gfx9_rsrc_mimg", "AMDGPU/gfx9_saddr_flat_global", "AMDGPU/gfx9_saddr_flat_scratch", "AMDGPU/gfx9_samp_mimg", "AMDGPU/gfx9_sdata128_0", "AMDGPU/gfx9_sdata32_0", "AMDGPU/gfx9_sdata64_0", "AMDGPU/gfx9_sdst128_0", "AMDGPU/gfx9_sdst256_0", "AMDGPU/gfx9_sdst32_0", "AMDGPU/gfx9_sdst32_1", "AMDGPU/gfx9_sdst32_2", "AMDGPU/gfx9_sdst512_0", "AMDGPU/gfx9_sdst64_0", "AMDGPU/gfx9_sdst64_1", "AMDGPU/gfx9_simm16", "AMDGPU/gfx9_src32_0", "AMDGPU/gfx9_src32_1", "AMDGPU/gfx9_src32_2", "AMDGPU/gfx9_src32_3", "AMDGPU/gfx9_src64_0", "AMDGPU/gfx9_src64_1", "AMDGPU/gfx9_src_exp", "AMDGPU/gfx9_ssrc32_0", "AMDGPU/gfx9_ssrc32_1", "AMDGPU/gfx9_ssrc32_2", "AMDGPU/gfx9_ssrc32_3", "AMDGPU/gfx9_ssrc32_4", "AMDGPU/gfx9_ssrc64_0", "AMDGPU/gfx9_ssrc64_1", "AMDGPU/gfx9_ssrc64_2", "AMDGPU/gfx9_ssrc64_3", "AMDGPU/gfx9_tgt", "AMDGPU/gfx9_type_dev", "AMDGPU/gfx9_uimm16", "AMDGPU/gfx9_vaddr_flat_global", "AMDGPU/gfx9_vaddr_flat_scratch", "AMDGPU/gfx9_vcc_64", "AMDGPU/gfx9_vdata128_0", "AMDGPU/gfx9_vdata32_0", "AMDGPU/gfx9_vdata64_0", "AMDGPU/gfx9_vdata96_0", "AMDGPU/gfx9_vdst128_0", "AMDGPU/gfx9_vdst32_0", "AMDGPU/gfx9_vdst64_0", "AMDGPU/gfx9_vdst96_0", "AMDGPU/gfx9_vsrc128_0", "AMDGPU/gfx9_vsrc32_0", "AMDGPU/gfx9_vsrc32_1", "AMDGPU/gfx9_vsrc64_0", "AMDGPU/gfx9_waitcnt", "AMDGPUInstructionNotation", "AMDGPUInstructionSyntax", "AMDGPUModifierSyntax", "AMDGPUOperandSyntax", "AMDGPUUsage", "AddingConstrainedIntrinsics", "AdvancedBuilds", "AliasAnalysis", "Atomics", "Benchmarking", "BigEndianNEON", "BitCodeFormat", "BlockFrequencyTerminology", "BranchWeightMetadata", "BugLifeCycle", "Bugpoint", "BuildingADistribution", "CFIVerify", "CMake", "CMakePrimer", "CodeGenerator", "CodeOfConduct", "CodingStandards", "CommandGuide/FileCheck", "CommandGuide/bugpoint", "CommandGuide/dsymutil", "CommandGuide/index", "CommandGuide/lit", "CommandGuide/llc", "CommandGuide/lli", "CommandGuide/llvm-addr2line", "CommandGuide/llvm-ar", "CommandGuide/llvm-as", "CommandGuide/llvm-bcanalyzer", "CommandGuide/llvm-build", "CommandGuide/llvm-config", "CommandGuide/llvm-cov", "CommandGuide/llvm-cxxfilt", "CommandGuide/llvm-cxxmap", "CommandGuide/llvm-diff", "CommandGuide/llvm-dis", "CommandGuide/llvm-dwarfdump", "CommandGuide/llvm-exegesis", "CommandGuide/llvm-extract", "CommandGuide/llvm-lib", "CommandGuide/llvm-link", "CommandGuide/llvm-lipo", "CommandGuide/llvm-mca", "CommandGuide/llvm-nm", "CommandGuide/llvm-objcopy", "CommandGuide/llvm-objdump", "CommandGuide/llvm-pdbutil", "CommandGuide/llvm-profdata", "CommandGuide/llvm-ranlib", "CommandGuide/llvm-readelf", "CommandGuide/llvm-readobj", "CommandGuide/llvm-size", "CommandGuide/llvm-stress", "CommandGuide/llvm-strings", "CommandGuide/llvm-strip", "CommandGuide/llvm-symbolizer", "CommandGuide/opt", "CommandGuide/tblgen", "CommandLine", "CompileCudaWithLLVM", "CompilerWriterInfo", "Contributing", "Coroutines", "CoverageMappingFormat", "DebuggingJITedCode", "DeveloperPolicy", "Docker", "ExceptionHandling", "ExtendingLLVM", "Extensions", "FAQ", "FaultMaps", "Frontend/PerformanceTips", "FuzzingLLVM", "GarbageCollection", "GetElementPtr", "GettingStarted", "GettingStartedVS", "GlobalISel", "GoldPlugin", "HowToAddABuilder", "HowToBuildOnARM", "HowToBuildWithPGO", "HowToCrossCompileBuiltinsOnArm", "HowToCrossCompileLLVM", "HowToReleaseLLVM", "HowToSetUpLLVMStyleRTTI", "HowToSubmitABug", "HowToUseAttributes", "HowToUseInstrMappings", "InAlloca", "LLVMBuild", "LangRef", "Lexicon", "LibFuzzer", "LinkTimeOptimization", "MCJITDesignAndImplementation", "MIRLangRef", "MarkdownQuickstartTemplate", "MarkedUpDisassembly", "MeetupGuidelines", "MemorySSA", "MergeFunctions", "NVPTXUsage", "ORCv2", "OptBisect", "PDB/CodeViewSymbols", "PDB/CodeViewTypes", "PDB/DbiStream", "PDB/GlobalStream", "PDB/HashTable", "PDB/ModiStream", "PDB/MsfFile", "PDB/PdbStream", "PDB/PublicStream", "PDB/TpiStream", "PDB/index", "Packaging", "Passes", "Phabricator", "ProgrammersManual", "Projects", "Proposals/GitHubMove", "Proposals/TestSuite", "Proposals/VariableNames", "Proposals/VectorizationPlan", "ReleaseNotes", "ReleaseProcess", "Remarks", "ReportingGuide", "ScudoHardenedAllocator", "SegmentedStacks", "SourceLevelDebugging", "SpeculativeLoadHardening", "SphinxQuickstartTemplate", "StackMaps", "StackSafetyAnalysis", "Statepoints", "SupportLibrary", "SystemLibrary", "TableGen/BackEnds", "TableGen/Deficiencies", "TableGen/LangIntro", "TableGen/LangRef", "TableGen/index", "TableGenFundamentals", "TestSuiteGuide", "TestSuiteMakefileGuide", "TestingGuide", "TransformMetadata", "TypeMetadata", "Vectorizers", "WritingAnLLVMBackend", "WritingAnLLVMPass", "XRay", "XRayExample", "XRayFDRFormat", "YamlIO", "index", "tutorial/BuildingAJIT1", "tutorial/BuildingAJIT2", "tutorial/BuildingAJIT3", "tutorial/BuildingAJIT4", "tutorial/BuildingAJIT5", "tutorial/LangImpl01", "tutorial/LangImpl02", "tutorial/LangImpl03", "tutorial/LangImpl04", "tutorial/LangImpl05", "tutorial/LangImpl06", "tutorial/LangImpl07", "tutorial/LangImpl08", "tutorial/LangImpl09", "tutorial/LangImpl10", "tutorial/MyFirstLanguageFrontend/LangImpl01", "tutorial/MyFirstLanguageFrontend/LangImpl02", "tutorial/MyFirstLanguageFrontend/LangImpl03", "tutorial/MyFirstLanguageFrontend/LangImpl04", "tutorial/MyFirstLanguageFrontend/LangImpl05", "tutorial/MyFirstLanguageFrontend/LangImpl06", "tutorial/MyFirstLanguageFrontend/LangImpl07", "tutorial/MyFirstLanguageFrontend/LangImpl08", "tutorial/MyFirstLanguageFrontend/LangImpl09", "tutorial/MyFirstLanguageFrontend/LangImpl10", "tutorial/MyFirstLanguageFrontend/index", "tutorial/OCamlLangImpl1", "tutorial/OCamlLangImpl2", "tutorial/OCamlLangImpl3", "tutorial/OCamlLangImpl4", "tutorial/OCamlLangImpl5", "tutorial/OCamlLangImpl6", "tutorial/OCamlLangImpl7", "tutorial/OCamlLangImpl8", "tutorial/index", "yaml2obj"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["AMDGPU/AMDGPUAsmGFX10.rst", "AMDGPU/AMDGPUAsmGFX7.rst", "AMDGPU/AMDGPUAsmGFX8.rst", "AMDGPU/AMDGPUAsmGFX9.rst", "AMDGPU/gfx10_addr_buf.rst", "AMDGPU/gfx10_addr_ds.rst", "AMDGPU/gfx10_addr_flat.rst", "AMDGPU/gfx10_addr_mimg.rst", "AMDGPU/gfx10_attr.rst", "AMDGPU/gfx10_base_smem_addr.rst", "AMDGPU/gfx10_base_smem_buf.rst", "AMDGPU/gfx10_base_smem_scratch.rst", "AMDGPU/gfx10_bimm16.rst", "AMDGPU/gfx10_bimm32.rst", "AMDGPU/gfx10_data_buf_atomic128.rst", "AMDGPU/gfx10_data_buf_atomic32.rst", "AMDGPU/gfx10_data_buf_atomic64.rst", "AMDGPU/gfx10_data_mimg_atomic_cmp.rst", "AMDGPU/gfx10_data_mimg_atomic_reg.rst", "AMDGPU/gfx10_data_mimg_store.rst", "AMDGPU/gfx10_data_mimg_store_d16.rst", "AMDGPU/gfx10_data_smem_atomic128.rst", "AMDGPU/gfx10_data_smem_atomic32.rst", "AMDGPU/gfx10_data_smem_atomic64.rst", "AMDGPU/gfx10_dst_buf_128.rst", "AMDGPU/gfx10_dst_buf_32.rst", "AMDGPU/gfx10_dst_buf_64.rst", "AMDGPU/gfx10_dst_buf_96.rst", "AMDGPU/gfx10_dst_buf_lds.rst", "AMDGPU/gfx10_dst_flat_atomic32.rst", "AMDGPU/gfx10_dst_flat_atomic64.rst", "AMDGPU/gfx10_dst_mimg_gather4.rst", "AMDGPU/gfx10_dst_mimg_regular.rst", "AMDGPU/gfx10_dst_mimg_regular_d16.rst", "AMDGPU/gfx10_fimm16.rst", "AMDGPU/gfx10_fimm32.rst", "AMDGPU/gfx10_hwreg.rst", "AMDGPU/gfx10_label.rst", "AMDGPU/gfx10_mad_type_dev.rst", "AMDGPU/gfx10_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx10_mod_sdwa_sext.rst", "AMDGPU/gfx10_mod_vop3_abs_neg.rst", "AMDGPU/gfx10_msg.rst", "AMDGPU/gfx10_offset_buf.rst", "AMDGPU/gfx10_offset_smem_buf.rst", "AMDGPU/gfx10_offset_smem_plain.rst", "AMDGPU/gfx10_opt.rst", "AMDGPU/gfx10_param.rst", "AMDGPU/gfx10_perm_smem.rst", "AMDGPU/gfx10_ret.rst", "AMDGPU/gfx10_rsrc_buf.rst", "AMDGPU/gfx10_rsrc_mimg.rst", "AMDGPU/gfx10_saddr_flat_global.rst", "AMDGPU/gfx10_saddr_flat_scratch.rst", "AMDGPU/gfx10_samp_mimg.rst", "AMDGPU/gfx10_sdata128_0.rst", "AMDGPU/gfx10_sdata32_0.rst", "AMDGPU/gfx10_sdata64_0.rst", "AMDGPU/gfx10_sdst128_0.rst", "AMDGPU/gfx10_sdst256_0.rst", "AMDGPU/gfx10_sdst32_0.rst", "AMDGPU/gfx10_sdst32_1.rst", "AMDGPU/gfx10_sdst32_2.rst", "AMDGPU/gfx10_sdst512_0.rst", "AMDGPU/gfx10_sdst64_0.rst", "AMDGPU/gfx10_sdst64_1.rst", "AMDGPU/gfx10_simm16.rst", "AMDGPU/gfx10_src32_0.rst", "AMDGPU/gfx10_src32_1.rst", "AMDGPU/gfx10_src32_2.rst", "AMDGPU/gfx10_src32_3.rst", "AMDGPU/gfx10_src64_0.rst", "AMDGPU/gfx10_src_exp.rst", "AMDGPU/gfx10_ssrc32_0.rst", "AMDGPU/gfx10_ssrc32_1.rst", "AMDGPU/gfx10_ssrc32_2.rst", "AMDGPU/gfx10_ssrc32_3.rst", "AMDGPU/gfx10_ssrc32_4.rst", "AMDGPU/gfx10_ssrc32_5.rst", "AMDGPU/gfx10_ssrc64_0.rst", "AMDGPU/gfx10_ssrc64_1.rst", "AMDGPU/gfx10_tgt.rst", "AMDGPU/gfx10_type_dev.rst", "AMDGPU/gfx10_uimm16.rst", "AMDGPU/gfx10_vaddr_flat_global.rst", "AMDGPU/gfx10_vaddr_flat_scratch.rst", "AMDGPU/gfx10_vcc_32.rst", "AMDGPU/gfx10_vdata128_0.rst", "AMDGPU/gfx10_vdata32_0.rst", "AMDGPU/gfx10_vdata64_0.rst", "AMDGPU/gfx10_vdata96_0.rst", "AMDGPU/gfx10_vdst128_0.rst", "AMDGPU/gfx10_vdst32_0.rst", "AMDGPU/gfx10_vdst64_0.rst", "AMDGPU/gfx10_vdst96_0.rst", "AMDGPU/gfx10_vsrc128_0.rst", "AMDGPU/gfx10_vsrc32_0.rst", "AMDGPU/gfx10_vsrc32_1.rst", "AMDGPU/gfx10_vsrc64_0.rst", "AMDGPU/gfx10_waitcnt.rst", "AMDGPU/gfx10_wsdst.rst", "AMDGPU/gfx10_wssrc.rst", "AMDGPU/gfx7_addr_buf.rst", "AMDGPU/gfx7_addr_ds.rst", "AMDGPU/gfx7_addr_flat.rst", "AMDGPU/gfx7_addr_mimg.rst", "AMDGPU/gfx7_attr.rst", "AMDGPU/gfx7_base_smem_addr.rst", "AMDGPU/gfx7_base_smem_buf.rst", "AMDGPU/gfx7_bimm16.rst", "AMDGPU/gfx7_bimm32.rst", "AMDGPU/gfx7_data_buf_atomic128.rst", "AMDGPU/gfx7_data_buf_atomic32.rst", "AMDGPU/gfx7_data_buf_atomic64.rst", "AMDGPU/gfx7_data_mimg_atomic_cmp.rst", "AMDGPU/gfx7_data_mimg_atomic_reg.rst", "AMDGPU/gfx7_data_mimg_store.rst", "AMDGPU/gfx7_dst_buf_128.rst", "AMDGPU/gfx7_dst_buf_64.rst", "AMDGPU/gfx7_dst_buf_96.rst", "AMDGPU/gfx7_dst_buf_lds.rst", "AMDGPU/gfx7_dst_flat_atomic32.rst", "AMDGPU/gfx7_dst_flat_atomic64.rst", "AMDGPU/gfx7_dst_mimg_gather4.rst", "AMDGPU/gfx7_dst_mimg_regular.rst", "AMDGPU/gfx7_fimm32.rst", "AMDGPU/gfx7_hwreg.rst", "AMDGPU/gfx7_label.rst", "AMDGPU/gfx7_mod.rst", "AMDGPU/gfx7_msg.rst", "AMDGPU/gfx7_offset_buf.rst", "AMDGPU/gfx7_offset_smem.rst", "AMDGPU/gfx7_opt.rst", "AMDGPU/gfx7_param.rst", "AMDGPU/gfx7_ret.rst", "AMDGPU/gfx7_rsrc_buf.rst", "AMDGPU/gfx7_rsrc_mimg.rst", "AMDGPU/gfx7_samp_mimg.rst", "AMDGPU/gfx7_sdst128_0.rst", "AMDGPU/gfx7_sdst256_0.rst", "AMDGPU/gfx7_sdst32_0.rst", "AMDGPU/gfx7_sdst32_1.rst", "AMDGPU/gfx7_sdst32_2.rst", "AMDGPU/gfx7_sdst512_0.rst", "AMDGPU/gfx7_sdst64_0.rst", "AMDGPU/gfx7_sdst64_1.rst", "AMDGPU/gfx7_simm16.rst", "AMDGPU/gfx7_src32_0.rst", "AMDGPU/gfx7_src32_1.rst", "AMDGPU/gfx7_src32_2.rst", "AMDGPU/gfx7_src32_3.rst", "AMDGPU/gfx7_src32_4.rst", "AMDGPU/gfx7_src32_5.rst", "AMDGPU/gfx7_src32_6.rst", "AMDGPU/gfx7_src64_0.rst", "AMDGPU/gfx7_src64_1.rst", "AMDGPU/gfx7_src64_2.rst", "AMDGPU/gfx7_src_exp.rst", "AMDGPU/gfx7_ssrc32_0.rst", "AMDGPU/gfx7_ssrc32_1.rst", "AMDGPU/gfx7_ssrc32_2.rst", "AMDGPU/gfx7_ssrc32_3.rst", "AMDGPU/gfx7_ssrc32_4.rst", "AMDGPU/gfx7_ssrc32_5.rst", "AMDGPU/gfx7_ssrc32_6.rst", "AMDGPU/gfx7_ssrc64_0.rst", "AMDGPU/gfx7_ssrc64_1.rst", "AMDGPU/gfx7_ssrc64_2.rst", "AMDGPU/gfx7_ssrc64_3.rst", "AMDGPU/gfx7_tgt.rst", "AMDGPU/gfx7_type_dev.rst", "AMDGPU/gfx7_uimm16.rst", "AMDGPU/gfx7_vcc_64.rst", "AMDGPU/gfx7_vdata128_0.rst", "AMDGPU/gfx7_vdata32_0.rst", "AMDGPU/gfx7_vdata64_0.rst", "AMDGPU/gfx7_vdata96_0.rst", "AMDGPU/gfx7_vdst128_0.rst", "AMDGPU/gfx7_vdst32_0.rst", "AMDGPU/gfx7_vdst64_0.rst", "AMDGPU/gfx7_vdst96_0.rst", "AMDGPU/gfx7_vsrc128_0.rst", "AMDGPU/gfx7_vsrc32_0.rst", "AMDGPU/gfx7_vsrc32_1.rst", "AMDGPU/gfx7_vsrc64_0.rst", "AMDGPU/gfx7_waitcnt.rst", "AMDGPU/gfx8_addr_buf.rst", "AMDGPU/gfx8_addr_ds.rst", "AMDGPU/gfx8_addr_flat.rst", "AMDGPU/gfx8_addr_mimg.rst", "AMDGPU/gfx8_attr.rst", "AMDGPU/gfx8_base_smem_addr.rst", "AMDGPU/gfx8_base_smem_buf.rst", "AMDGPU/gfx8_bimm16.rst", "AMDGPU/gfx8_bimm32.rst", "AMDGPU/gfx8_data_buf_atomic128.rst", "AMDGPU/gfx8_data_buf_atomic32.rst", "AMDGPU/gfx8_data_buf_atomic64.rst", "AMDGPU/gfx8_data_buf_d16_128.rst", "AMDGPU/gfx8_data_buf_d16_32.rst", "AMDGPU/gfx8_data_buf_d16_64.rst", "AMDGPU/gfx8_data_buf_d16_96.rst", "AMDGPU/gfx8_data_mimg_atomic_cmp.rst", "AMDGPU/gfx8_data_mimg_atomic_reg.rst", "AMDGPU/gfx8_data_mimg_store.rst", "AMDGPU/gfx8_data_mimg_store_d16.rst", "AMDGPU/gfx8_dst_buf_128.rst", "AMDGPU/gfx8_dst_buf_64.rst", "AMDGPU/gfx8_dst_buf_96.rst", "AMDGPU/gfx8_dst_buf_d16_128.rst", "AMDGPU/gfx8_dst_buf_d16_32.rst", "AMDGPU/gfx8_dst_buf_d16_64.rst", "AMDGPU/gfx8_dst_buf_d16_96.rst", "AMDGPU/gfx8_dst_buf_lds.rst", "AMDGPU/gfx8_dst_flat_atomic32.rst", "AMDGPU/gfx8_dst_flat_atomic64.rst", "AMDGPU/gfx8_dst_mimg_gather4.rst", "AMDGPU/gfx8_dst_mimg_regular.rst", "AMDGPU/gfx8_dst_mimg_regular_d16.rst", "AMDGPU/gfx8_fimm16.rst", "AMDGPU/gfx8_fimm32.rst", "AMDGPU/gfx8_hwreg.rst", "AMDGPU/gfx8_imm4.rst", "AMDGPU/gfx8_label.rst", "AMDGPU/gfx8_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx8_mod_sdwa_sext.rst", "AMDGPU/gfx8_mod_vop3_abs_neg.rst", "AMDGPU/gfx8_msg.rst", "AMDGPU/gfx8_offset_buf.rst", "AMDGPU/gfx8_offset_smem_load.rst", "AMDGPU/gfx8_offset_smem_store.rst", "AMDGPU/gfx8_opt.rst", "AMDGPU/gfx8_param.rst", "AMDGPU/gfx8_perm_smem.rst", "AMDGPU/gfx8_ret.rst", "AMDGPU/gfx8_rsrc_buf.rst", "AMDGPU/gfx8_rsrc_mimg.rst", "AMDGPU/gfx8_samp_mimg.rst", "AMDGPU/gfx8_sdata128_0.rst", "AMDGPU/gfx8_sdata32_0.rst", "AMDGPU/gfx8_sdata64_0.rst", "AMDGPU/gfx8_sdst128_0.rst", "AMDGPU/gfx8_sdst256_0.rst", "AMDGPU/gfx8_sdst32_0.rst", "AMDGPU/gfx8_sdst32_1.rst", "AMDGPU/gfx8_sdst32_2.rst", "AMDGPU/gfx8_sdst512_0.rst", "AMDGPU/gfx8_sdst64_0.rst", "AMDGPU/gfx8_sdst64_1.rst", "AMDGPU/gfx8_simm16.rst", "AMDGPU/gfx8_src32_0.rst", "AMDGPU/gfx8_src32_1.rst", "AMDGPU/gfx8_src32_2.rst", "AMDGPU/gfx8_src32_3.rst", "AMDGPU/gfx8_src64_0.rst", "AMDGPU/gfx8_src64_1.rst", "AMDGPU/gfx8_src_exp.rst", "AMDGPU/gfx8_ssrc32_0.rst", "AMDGPU/gfx8_ssrc32_1.rst", "AMDGPU/gfx8_ssrc32_2.rst", "AMDGPU/gfx8_ssrc32_3.rst", "AMDGPU/gfx8_ssrc32_4.rst", "AMDGPU/gfx8_ssrc64_0.rst", "AMDGPU/gfx8_ssrc64_1.rst", "AMDGPU/gfx8_ssrc64_2.rst", "AMDGPU/gfx8_ssrc64_3.rst", "AMDGPU/gfx8_tgt.rst", "AMDGPU/gfx8_type_dev.rst", "AMDGPU/gfx8_uimm16.rst", "AMDGPU/gfx8_vcc_64.rst", "AMDGPU/gfx8_vdata128_0.rst", "AMDGPU/gfx8_vdata32_0.rst", "AMDGPU/gfx8_vdata64_0.rst", "AMDGPU/gfx8_vdata96_0.rst", "AMDGPU/gfx8_vdst128_0.rst", "AMDGPU/gfx8_vdst32_0.rst", "AMDGPU/gfx8_vdst64_0.rst", "AMDGPU/gfx8_vdst96_0.rst", "AMDGPU/gfx8_vsrc128_0.rst", "AMDGPU/gfx8_vsrc32_0.rst", "AMDGPU/gfx8_vsrc32_1.rst", "AMDGPU/gfx8_vsrc64_0.rst", "AMDGPU/gfx8_waitcnt.rst", "AMDGPU/gfx9_addr_buf.rst", "AMDGPU/gfx9_addr_ds.rst", "AMDGPU/gfx9_addr_flat.rst", "AMDGPU/gfx9_addr_mimg.rst", "AMDGPU/gfx9_attr.rst", "AMDGPU/gfx9_base_smem_addr.rst", "AMDGPU/gfx9_base_smem_buf.rst", "AMDGPU/gfx9_base_smem_scratch.rst", "AMDGPU/gfx9_bimm16.rst", "AMDGPU/gfx9_bimm32.rst", "AMDGPU/gfx9_data_buf_atomic128.rst", "AMDGPU/gfx9_data_buf_atomic32.rst", "AMDGPU/gfx9_data_buf_atomic64.rst", "AMDGPU/gfx9_data_mimg_atomic_cmp.rst", "AMDGPU/gfx9_data_mimg_atomic_reg.rst", "AMDGPU/gfx9_data_mimg_store.rst", "AMDGPU/gfx9_data_mimg_store_d16.rst", "AMDGPU/gfx9_data_smem_atomic128.rst", "AMDGPU/gfx9_data_smem_atomic32.rst", "AMDGPU/gfx9_data_smem_atomic64.rst", "AMDGPU/gfx9_dst_buf_128.rst", "AMDGPU/gfx9_dst_buf_32.rst", "AMDGPU/gfx9_dst_buf_64.rst", "AMDGPU/gfx9_dst_buf_96.rst", "AMDGPU/gfx9_dst_buf_lds.rst", "AMDGPU/gfx9_dst_flat_atomic32.rst", "AMDGPU/gfx9_dst_flat_atomic64.rst", "AMDGPU/gfx9_dst_mimg_gather4.rst", "AMDGPU/gfx9_dst_mimg_regular.rst", "AMDGPU/gfx9_dst_mimg_regular_d16.rst", "AMDGPU/gfx9_fimm16.rst", "AMDGPU/gfx9_fimm32.rst", "AMDGPU/gfx9_hwreg.rst", "AMDGPU/gfx9_imm4.rst", "AMDGPU/gfx9_label.rst", "AMDGPU/gfx9_mad_type_dev.rst", "AMDGPU/gfx9_mod_dpp_sdwa_abs_neg.rst", "AMDGPU/gfx9_mod_sdwa_sext.rst", "AMDGPU/gfx9_mod_vop3_abs_neg.rst", "AMDGPU/gfx9_msg.rst", "AMDGPU/gfx9_offset_buf.rst", "AMDGPU/gfx9_offset_smem_buf.rst", "AMDGPU/gfx9_offset_smem_plain.rst", "AMDGPU/gfx9_opt.rst", "AMDGPU/gfx9_param.rst", "AMDGPU/gfx9_perm_smem.rst", "AMDGPU/gfx9_ret.rst", "AMDGPU/gfx9_rsrc_buf.rst", "AMDGPU/gfx9_rsrc_mimg.rst", "AMDGPU/gfx9_saddr_flat_global.rst", "AMDGPU/gfx9_saddr_flat_scratch.rst", "AMDGPU/gfx9_samp_mimg.rst", "AMDGPU/gfx9_sdata128_0.rst", "AMDGPU/gfx9_sdata32_0.rst", "AMDGPU/gfx9_sdata64_0.rst", "AMDGPU/gfx9_sdst128_0.rst", "AMDGPU/gfx9_sdst256_0.rst", "AMDGPU/gfx9_sdst32_0.rst", "AMDGPU/gfx9_sdst32_1.rst", "AMDGPU/gfx9_sdst32_2.rst", "AMDGPU/gfx9_sdst512_0.rst", "AMDGPU/gfx9_sdst64_0.rst", "AMDGPU/gfx9_sdst64_1.rst", "AMDGPU/gfx9_simm16.rst", "AMDGPU/gfx9_src32_0.rst", "AMDGPU/gfx9_src32_1.rst", "AMDGPU/gfx9_src32_2.rst", "AMDGPU/gfx9_src32_3.rst", "AMDGPU/gfx9_src64_0.rst", "AMDGPU/gfx9_src64_1.rst", "AMDGPU/gfx9_src_exp.rst", "AMDGPU/gfx9_ssrc32_0.rst", "AMDGPU/gfx9_ssrc32_1.rst", "AMDGPU/gfx9_ssrc32_2.rst", "AMDGPU/gfx9_ssrc32_3.rst", "AMDGPU/gfx9_ssrc32_4.rst", "AMDGPU/gfx9_ssrc64_0.rst", "AMDGPU/gfx9_ssrc64_1.rst", "AMDGPU/gfx9_ssrc64_2.rst", "AMDGPU/gfx9_ssrc64_3.rst", "AMDGPU/gfx9_tgt.rst", "AMDGPU/gfx9_type_dev.rst", "AMDGPU/gfx9_uimm16.rst", "AMDGPU/gfx9_vaddr_flat_global.rst", "AMDGPU/gfx9_vaddr_flat_scratch.rst", "AMDGPU/gfx9_vcc_64.rst", "AMDGPU/gfx9_vdata128_0.rst", "AMDGPU/gfx9_vdata32_0.rst", "AMDGPU/gfx9_vdata64_0.rst", "AMDGPU/gfx9_vdata96_0.rst", "AMDGPU/gfx9_vdst128_0.rst", "AMDGPU/gfx9_vdst32_0.rst", "AMDGPU/gfx9_vdst64_0.rst", "AMDGPU/gfx9_vdst96_0.rst", "AMDGPU/gfx9_vsrc128_0.rst", "AMDGPU/gfx9_vsrc32_0.rst", "AMDGPU/gfx9_vsrc32_1.rst", "AMDGPU/gfx9_vsrc64_0.rst", "AMDGPU/gfx9_waitcnt.rst", "AMDGPUInstructionNotation.rst", "AMDGPUInstructionSyntax.rst", "AMDGPUModifierSyntax.rst", "AMDGPUOperandSyntax.rst", "AMDGPUUsage.rst", "AddingConstrainedIntrinsics.rst", "AdvancedBuilds.rst", "AliasAnalysis.rst", "Atomics.rst", "Benchmarking.rst", "BigEndianNEON.rst", "BitCodeFormat.rst", "BlockFrequencyTerminology.rst", "BranchWeightMetadata.rst", "BugLifeCycle.rst", "Bugpoint.rst", "BuildingADistribution.rst", "CFIVerify.rst", "CMake.rst", "CMakePrimer.rst", "CodeGenerator.rst", "CodeOfConduct.rst", "CodingStandards.rst", "CommandGuide/FileCheck.rst", "CommandGuide/bugpoint.rst", "CommandGuide/dsymutil.rst", "CommandGuide/index.rst", "CommandGuide/lit.rst", "CommandGuide/llc.rst", "CommandGuide/lli.rst", "CommandGuide/llvm-addr2line.md", "CommandGuide/llvm-ar.rst", "CommandGuide/llvm-as.rst", "CommandGuide/llvm-bcanalyzer.rst", "CommandGuide/llvm-build.rst", "CommandGuide/llvm-config.rst", "CommandGuide/llvm-cov.rst", "CommandGuide/llvm-cxxfilt.rst", "CommandGuide/llvm-cxxmap.rst", "CommandGuide/llvm-diff.rst", "CommandGuide/llvm-dis.rst", "CommandGuide/llvm-dwarfdump.rst", "CommandGuide/llvm-exegesis.rst", "CommandGuide/llvm-extract.rst", "CommandGuide/llvm-lib.rst", "CommandGuide/llvm-link.rst", "CommandGuide/llvm-lipo.rst", "CommandGuide/llvm-mca.rst", "CommandGuide/llvm-nm.rst", "CommandGuide/llvm-objcopy.rst", "CommandGuide/llvm-objdump.rst", "CommandGuide/llvm-pdbutil.rst", "CommandGuide/llvm-profdata.rst", "CommandGuide/llvm-ranlib.md", "CommandGuide/llvm-readelf.rst", "CommandGuide/llvm-readobj.rst", "CommandGuide/llvm-size.md", "CommandGuide/llvm-stress.rst", "CommandGuide/llvm-strings.md", "CommandGuide/llvm-strip.md", "CommandGuide/llvm-symbolizer.rst", "CommandGuide/opt.rst", "CommandGuide/tblgen.rst", "CommandLine.rst", "CompileCudaWithLLVM.rst", "CompilerWriterInfo.rst", "Contributing.rst", "Coroutines.rst", "CoverageMappingFormat.rst", "DebuggingJITedCode.rst", "DeveloperPolicy.rst", "Docker.rst", "ExceptionHandling.rst", "ExtendingLLVM.rst", "Extensions.rst", "FAQ.rst", "FaultMaps.rst", "Frontend/PerformanceTips.rst", "FuzzingLLVM.rst", "GarbageCollection.rst", "GetElementPtr.rst", "GettingStarted.rst", "GettingStartedVS.rst", "GlobalISel.rst", "GoldPlugin.rst", "HowToAddABuilder.rst", "HowToBuildOnARM.rst", "HowToBuildWithPGO.rst", "HowToCrossCompileBuiltinsOnArm.rst", "HowToCrossCompileLLVM.rst", "HowToReleaseLLVM.rst", "HowToSetUpLLVMStyleRTTI.rst", "HowToSubmitABug.rst", "HowToUseAttributes.rst", "HowToUseInstrMappings.rst", "InAlloca.rst", "LLVMBuild.rst", "LangRef.rst", "Lexicon.rst", "LibFuzzer.rst", "LinkTimeOptimization.rst", "MCJITDesignAndImplementation.rst", "MIRLangRef.rst", "MarkdownQuickstartTemplate.md", "MarkedUpDisassembly.rst", "MeetupGuidelines.rst", "MemorySSA.rst", "MergeFunctions.rst", "NVPTXUsage.rst", "ORCv2.rst", "OptBisect.rst", "PDB/CodeViewSymbols.rst", "PDB/CodeViewTypes.rst", "PDB/DbiStream.rst", "PDB/GlobalStream.rst", "PDB/HashTable.rst", "PDB/ModiStream.rst", "PDB/MsfFile.rst", "PDB/PdbStream.rst", "PDB/PublicStream.rst", "PDB/TpiStream.rst", "PDB/index.rst", "Packaging.rst", "Passes.rst", "Phabricator.rst", "ProgrammersManual.rst", "Projects.rst", "Proposals/GitHubMove.rst", "Proposals/TestSuite.rst", "Proposals/VariableNames.rst", "Proposals/VectorizationPlan.rst", "ReleaseNotes.rst", "ReleaseProcess.rst", "Remarks.rst", "ReportingGuide.rst", "ScudoHardenedAllocator.rst", "SegmentedStacks.rst", "SourceLevelDebugging.rst", "SpeculativeLoadHardening.md", "SphinxQuickstartTemplate.rst", "StackMaps.rst", "StackSafetyAnalysis.rst", "Statepoints.rst", "SupportLibrary.rst", "SystemLibrary.rst", "TableGen/BackEnds.rst", "TableGen/Deficiencies.rst", "TableGen/LangIntro.rst", "TableGen/LangRef.rst", "TableGen/index.rst", "TableGenFundamentals.rst", "TestSuiteGuide.md", "TestSuiteMakefileGuide.rst", "TestingGuide.rst", "TransformMetadata.rst", "TypeMetadata.rst", "Vectorizers.rst", "WritingAnLLVMBackend.rst", "WritingAnLLVMPass.rst", "XRay.rst", "XRayExample.rst", "XRayFDRFormat.rst", "YamlIO.rst", "index.rst", "tutorial/BuildingAJIT1.rst", "tutorial/BuildingAJIT2.rst", "tutorial/BuildingAJIT3.rst", "tutorial/BuildingAJIT4.rst", "tutorial/BuildingAJIT5.rst", "tutorial/LangImpl01.rst", "tutorial/LangImpl02.rst", "tutorial/LangImpl03.rst", "tutorial/LangImpl04.rst", "tutorial/LangImpl05.rst", "tutorial/LangImpl06.rst", "tutorial/LangImpl07.rst", "tutorial/LangImpl08.rst", "tutorial/LangImpl09.rst", "tutorial/LangImpl10.rst", "tutorial/MyFirstLanguageFrontend/LangImpl01.rst", "tutorial/MyFirstLanguageFrontend/LangImpl02.rst", "tutorial/MyFirstLanguageFrontend/LangImpl03.rst", "tutorial/MyFirstLanguageFrontend/LangImpl04.rst", "tutorial/MyFirstLanguageFrontend/LangImpl05.rst", "tutorial/MyFirstLanguageFrontend/LangImpl06.rst", "tutorial/MyFirstLanguageFrontend/LangImpl07.rst", "tutorial/MyFirstLanguageFrontend/LangImpl08.rst", "tutorial/MyFirstLanguageFrontend/LangImpl09.rst", "tutorial/MyFirstLanguageFrontend/LangImpl10.rst", "tutorial/MyFirstLanguageFrontend/index.rst", "tutorial/OCamlLangImpl1.rst", "tutorial/OCamlLangImpl2.rst", "tutorial/OCamlLangImpl3.rst", "tutorial/OCamlLangImpl4.rst", "tutorial/OCamlLangImpl5.rst", "tutorial/OCamlLangImpl6.rst", "tutorial/OCamlLangImpl7.rst", "tutorial/OCamlLangImpl8.rst", "tutorial/index.rst", "yaml2obj.rst"], "indexentries": {"--add-dyldinfo": [[430, "cmdoption-llvm-nm-add-dyldinfo", false]], "--add-gnu-debuglink": [[431, "cmdoption-llvm-objcopy-add-gnu-debuglink", false]], "--add-section": [[431, "cmdoption-llvm-objcopy-add-section", false]], "--add-symbol": [[431, "cmdoption-llvm-objcopy-add-symbol", false]], "--addresses": [[442, "cmdoption-llvm-symbolizer-print-address", false]], "--addrsig": [[436, "cmdoption-llvm-readelf-addrsig", false], [437, "cmdoption-llvm-readobj-addrsig", false]], "--adjust-start": [[431, "cmdoption-llvm-objcopy-change-start", false]], "--adjust-vma": [[432, "cmdoption-llvm-objdump-adjust-vma", false], [442, "cmdoption-llvm-symbolizer-adjust-vma", false]], "--all": [[423, "cmdoption-llvm-dwarfdump-a", false], [436, "cmdoption-llvm-readelf-all", false], [437, "cmdoption-llvm-readobj-all", false]], "--all-blocks": [[418, "cmdoption-llvm-cov-gcov-a", false]], "--all-headers": [[432, "cmdoption-llvm-objdump-x", false]], "--allow-broken-links": [[431, "cmdoption-llvm-objcopy-allow-broken-links", false]], "--allow-deprecated-dag-overlap": [[405, "cmdoption-FileCheck-allow-deprecated-dag-overlap", false]], "--apple-names": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-namespaces": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-objc": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--apple-types": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--arch": [[407, "cmdoption-dsymutil-arch", false], [423, "cmdoption-llvm-dwarfdump-arch", false], [430, "cmdoption-llvm-nm-arch", false], [432, "cmdoption-llvm-objdump-arch", false]], "--arch-name": [[432, "cmdoption-llvm-objdump-arch-name", false]], "--archive-headers": [[432, "cmdoption-llvm-objdump-a", false]], "--archive-member-offsets": [[432, "cmdoption-llvm-objdump-archive-member-offsets", false]], "--arm-attributes": [[436, "cmdoption-llvm-readelf-arm-attributes", false], [437, "cmdoption-llvm-readobj-arm-attributes", false]], "--basenames": [[442, "cmdoption-llvm-symbolizer-basenames", false]], "--binary-architecture": [[431, "cmdoption-llvm-objcopy-binary-architecture", false]], "--bind": [[432, "cmdoption-llvm-objdump-bind", false]], "--branch-counts": [[418, "cmdoption-llvm-cov-gcov-c", false]], "--branch-probabilities": [[418, "cmdoption-llvm-cov-gcov-b", false]], "--build-id-link-dir": [[431, "cmdoption-llvm-objcopy-build-id-link-dir", false]], "--build-id-link-input": [[431, "cmdoption-llvm-objcopy-build-id-link-input", false]], "--build-id-link-output": [[431, "cmdoption-llvm-objcopy-build-id-link-output", false]], "--cfg": [[432, "cmdoption-llvm-objdump-cfg", false]], "--change-start": [[431, "cmdoption-llvm-objcopy-change-start", false]], "--check-prefix": [[405, "cmdoption-FileCheck-check-prefix", false]], "--check-prefixes": [[405, "cmdoption-FileCheck-check-prefixes", false]], "--codeview": [[437, "cmdoption-llvm-readobj-codeview", false]], "--codeview-ghash": [[437, "cmdoption-llvm-readobj-codeview-ghash", false]], "--codeview-merged-types": [[437, "cmdoption-llvm-readobj-codeview-merged-types", false]], "--codeview-subsection-bytes": [[437, "cmdoption-llvm-readobj-codeview-subsection-bytes", false]], "--coff-basereloc": [[437, "cmdoption-llvm-readobj-coff-basereloc", false]], "--coff-debug-directory": [[437, "cmdoption-llvm-readobj-coff-debug-directory", false]], "--coff-directives": [[437, "cmdoption-llvm-readobj-coff-directives", false]], "--coff-exports": [[437, "cmdoption-llvm-readobj-coff-exports", false]], "--coff-imports": [[437, "cmdoption-llvm-readobj-coff-imports", false]], "--coff-load-config": [[437, "cmdoption-llvm-readobj-coff-load-config", false]], "--coff-resources": [[437, "cmdoption-llvm-readobj-coff-resources", false]], "--color": [[405, "cmdoption-FileCheck-color", false], [423, "cmdoption-llvm-dwarfdump-color", false], [436, "cmdoption-llvm-readelf-color", false], [437, "cmdoption-llvm-readobj-color", false]], "--compress-debug-sections": [[431, "cmdoption-llvm-objcopy-compress-debug-sections", false]], "--config-prefix": [[409, "cmdoption-lit-config-prefix", false]], "--data-in-code": [[432, "cmdoption-llvm-objdump-data-in-code", false]], "--debug": [[409, "cmdoption-lit-debug", false]], "--debug-abbrev": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-addr": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-aranges": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-cu-index": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-frame": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-gnu-pubnames": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-gnu-pubtypes": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-info": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-line": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-line-str": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-loc": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-loclists": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-macro": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-names": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-pubnames": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-pubtypes": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-ranges": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-rnglists": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-str": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-str-offsets": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-syms": [[430, "cmdoption-llvm-nm-debug-syms", false]], "--debug-tu-index": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--debug-types": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--decompress-debug-sections": [[431, "cmdoption-llvm-objcopy-decompress-debug-sections", false]], "--default-arch": [[442, "cmdoption-llvm-symbolizer-default-arch", false]], "--defined-only": [[430, "cmdoption-llvm-nm-defined-only", false]], "--demangle": [[430, "cmdoption-llvm-nm-demangle", false], [432, "cmdoption-llvm-objdump-C", false], [436, "cmdoption-llvm-readelf-demangle", false], [437, "cmdoption-llvm-readobj-demangle", false], [442, "cmdoption-llvm-symbolizer-demangle", false]], "--diff": [[423, "cmdoption-llvm-dwarfdump-diff", false]], "--dis-symname": [[432, "cmdoption-llvm-objdump-dis-symname", false]], "--disable-deterministic-archives": [[431, "cmdoption-llvm-objcopy-disable-deterministic-archives", false]], "--disable-excess-fp-precision": [[410, "cmdoption-llc-disable-excess-fp-precision", false]], "--disassemble": [[432, "cmdoption-llvm-objdump-d", false]], "--disassemble-all": [[432, "cmdoption-llvm-objdump-D", false]], "--disassemble-functions": [[432, "cmdoption-llvm-objdump-disassemble-functions", false]], "--disassemble-zeroes": [[432, "cmdoption-llvm-objdump-z", false]], "--disassembler-options": [[432, "cmdoption-llvm-objdump-M", false]], "--discard-all": [[431, "cmdoption-llvm-objcopy-discard-all", false]], "--discard-locals": [[431, "cmdoption-llvm-objcopy-discard-locals", false]], "--dsym": [[432, "cmdoption-llvm-objdump-dsym", false]], "--dsym-hint": [[442, "cmdoption-llvm-symbolizer-dsym-hint", false]], "--dt": [[437, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dump-debug-map": [[407, "cmdoption-dsymutil-dump-debug-map", false]], "--dump-input": [[405, "cmdoption-FileCheck-dump-input", false]], "--dump-input-on-failure": [[405, "cmdoption-FileCheck-dump-input-on-failure", false]], "--dump-object-to-disk": [[424, "cmdoption-llvm-exegesis-dump-object-to-disk", false]], "--dump-section": [[431, "cmdoption-llvm-objcopy-dump-section", false]], "--dwarf": [[432, "cmdoption-llvm-objdump-dwarf", false]], "--dwp": [[442, "cmdoption-llvm-symbolizer-dwp", false]], "--dyldinfo-only": [[430, "cmdoption-llvm-nm-dyldinfo-only", false]], "--dylib-id": [[432, "cmdoption-llvm-objdump-dylib-id", false]], "--dylibs-used": [[432, "cmdoption-llvm-objdump-dylibs-used", false]], "--dyn-relocations": [[436, "cmdoption-llvm-readelf-dyn-relocations", false], [437, "cmdoption-llvm-readobj-dyn-relocations", false]], "--dyn-symbols": [[436, "cmdoption-llvm-readelf-dyn-symbols", false], [437, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dyn-syms": [[436, "cmdoption-llvm-readelf-dyn-symbols", false], [437, "cmdoption-llvm-readobj-dyn-symbols", false]], "--dynamic": [[430, "cmdoption-llvm-nm-dynamic", false], [436, "cmdoption-llvm-readelf-dynamic-table", false], [437, "cmdoption-llvm-readobj-dynamic-table", false]], "--dynamic-reloc": [[432, "cmdoption-llvm-objdump-R", false]], "--dynamic-table": [[436, "cmdoption-llvm-readelf-dynamic-table", false], [437, "cmdoption-llvm-readobj-dynamic-table", false]], "--echo-all-commands": [[409, "cmdoption-lit-vv", false]], "--eh-frame": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--elf-cg-profile": [[436, "cmdoption-llvm-readelf-elf-cg-profile", false], [437, "cmdoption-llvm-readobj-elf-cg-profile", false]], "--elf-hash-histogram": [[436, "cmdoption-llvm-readelf-elf-hash-histogram", false], [437, "cmdoption-llvm-readobj-elf-hash-histogram", false]], "--elf-linker-options": [[436, "cmdoption-llvm-readelf-elf-linker-options", false], [437, "cmdoption-llvm-readobj-elf-linker-options", false]], "--elf-output-style": [[436, "cmdoption-llvm-readelf-elf-output-style", false], [437, "cmdoption-llvm-readobj-elf-output-style", false]], "--elf-section-groups": [[436, "cmdoption-llvm-readelf-elf-section-groups", false], [437, "cmdoption-llvm-readobj-elf-section-groups", false]], "--enable-deterministic-archives": [[431, "cmdoption-llvm-objcopy-enable-deterministic-archives", false]], "--enable-no-infs-fp-math": [[410, "cmdoption-llc-enable-no-infs-fp-math", false]], "--enable-no-nans-fp-math": [[410, "cmdoption-llc-enable-no-nans-fp-math", false]], "--enable-unsafe-fp-math": [[410, "cmdoption-llc-enable-unsafe-fp-math", false]], "--enable-var-scope": [[405, "cmdoption-FileCheck-enable-var-scope", false]], "--exe": [[442, "cmdoption-llvm-symbolizer-obj", false]], "--expand-relocs": [[436, "cmdoption-llvm-readelf-expand-relocs", false], [437, "cmdoption-llvm-readobj-expand-relocs", false]], "--exports-trie": [[432, "cmdoption-llvm-objdump-exports-trie", false]], "--extern-only": [[430, "cmdoption-llvm-nm-extern-only", false]], "--extract-dwo": [[431, "cmdoption-llvm-objcopy-extract-dwo", false]], "--extract-main-partition": [[431, "cmdoption-llvm-objcopy-extract-main-partition", false]], "--extract-partition": [[431, "cmdoption-llvm-objcopy-extract-partition", false]], "--fallback-debug-path": [[442, "cmdoption-llvm-symbolizer-fallback-debug-path", false]], "--fault-map-section": [[432, "cmdoption-llvm-objdump-fault-map-section", false]], "--file-headers": [[432, "cmdoption-llvm-objdump-f", false], [436, "cmdoption-llvm-readelf-file-headers", false], [437, "cmdoption-llvm-readobj-file-headers", false]], "--filter": [[409, "cmdoption-lit-filter", false]], "--find": [[423, "cmdoption-llvm-dwarfdump-f", false]], "--flat": [[407, "cmdoption-dsymutil-f", false]], "--format": [[419, "cmdoption-llvm-cxxfilt-format", false], [430, "cmdoption-llvm-nm-format", false]], "--frame-pointer": [[410, "cmdoption-llc-frame-pointer", false]], "--full-contents": [[432, "cmdoption-llvm-objdump-s", false]], "--full-leading-addr": [[432, "cmdoption-llvm-objdump-full-leading-addr", false]], "--function-summaries": [[418, "cmdoption-llvm-cov-gcov-f", false]], "--functions": [[442, "cmdoption-llvm-symbolizer-functions", false]], "--gdb-index": [[423, "cmdoption-llvm-dwarfdump-debug-abbrev", false]], "--globalize-symbol": [[431, "cmdoption-llvm-objcopy-globalize-symbol", false]], "--globalize-symbols": [[431, "cmdoption-llvm-objcopy-globalize-symbols", false]], "--gnu-hash-table": [[436, "cmdoption-llvm-readelf-gnu-hash-table", false], [437, "cmdoption-llvm-readobj-gnu-hash-table", false]], "--hash-filenames": [[418, "cmdoption-llvm-cov-gcov-x", false]], "--hash-symbols": [[436, "cmdoption-llvm-readelf-hash-symbols", false], [437, "cmdoption-llvm-readobj-hash-symbols", false]], "--hash-table": [[436, "cmdoption-llvm-readelf-hash-table", false], [437, "cmdoption-llvm-readobj-hash-table", false]], "--headers": [[432, "cmdoption-llvm-objdump-h", false], [436, "cmdoption-llvm-readelf-headers", false], [437, "cmdoption-llvm-readobj-headers", false]], "--help": [[409, "cmdoption-lit-h", false], [418, "cmdoption-llvm-cov-gcov-help", false], [419, "cmdoption-llvm-cxxfilt-help", false], [423, "cmdoption-llvm-dwarfdump-h", false], [430, "cmdoption-llvm-nm-help", false], [431, "cmdoption-llvm-objcopy-help", false], [432, "cmdoption-llvm-objdump-help", false], [436, "cmdoption-llvm-readelf-help", false], [437, "cmdoption-llvm-readobj-help", false], [442, "cmdoption-llvm-symbolizer-help", false]], "--help-list": [[419, "cmdoption-llvm-cxxfilt-help-list", false], [423, "cmdoption-llvm-dwarfdump-help-list", false], [430, "cmdoption-llvm-nm-help-list", false], [436, "cmdoption-llvm-readelf-help-list", false], [437, "cmdoption-llvm-readobj-help-list", false], [442, "cmdoption-llvm-symbolizer-help-list", false]], "--hex-dump": [[436, "cmdoption-llvm-readelf-hex-dump", false], [437, "cmdoption-llvm-readobj-hex-dump", false]], "--histogram": [[436, "cmdoption-llvm-readelf-elf-hash-histogram", false], [437, "cmdoption-llvm-readobj-elf-hash-histogram", false]], "--ignore-case": [[423, "cmdoption-llvm-dwarfdump-i", false]], "--implicit-check-not": [[405, "cmdoption-FileCheck-implicit-check-not", false]], "--indirect-symbols": [[432, "cmdoption-llvm-objdump-indirect-symbols", false]], "--info-plist": [[432, "cmdoption-llvm-objdump-info-plist", false]], "--inlines": [[442, "cmdoption-llvm-symbolizer-inlining", false]], "--inlining": [[442, "cmdoption-llvm-symbolizer-inlining", false]], "--input-file": [[405, "cmdoption-FileCheck-input-file", false]], "--input-target": [[431, "cmdoption-llvm-objcopy-input-target", false]], "--just-symbol-name": [[430, "cmdoption-llvm-nm-just-symbol-name", false]], "--keep-file-symbols": [[431, "cmdoption-llvm-objcopy-keep-file-symbols", false]], "--keep-global-symbol": [[431, "cmdoption-llvm-objcopy-keep-global-symbol", false]], "--keep-global-symbols": [[431, "cmdoption-llvm-objcopy-keep-global-symbols", false]], "--keep-section": [[431, "cmdoption-llvm-objcopy-keep-section", false]], "--keep-symbol": [[431, "cmdoption-llvm-objcopy-keep-symbol", false]], "--keep-symbols": [[431, "cmdoption-llvm-objcopy-keep-symbols", false]], "--lazy-bind": [[432, "cmdoption-llvm-objdump-lazy-bind", false]], "--line-numbers": [[432, "cmdoption-llvm-objdump-l", false]], "--link-opt-hints": [[432, "cmdoption-llvm-objdump-link-opt-hints", false]], "--load": [[410, "cmdoption-llc-load", false]], "--localize-hidden": [[431, "cmdoption-llvm-objcopy-localize-hidden", false]], "--localize-symbol": [[431, "cmdoption-llvm-objcopy-localize-symbol", false]], "--localize-symbols": [[431, "cmdoption-llvm-objcopy-localize-symbols", false]], "--long-file-names": [[418, "cmdoption-llvm-cov-gcov-l", false]], "--lookup": [[423, "cmdoption-llvm-dwarfdump-lookup", false]], "--macho": [[432, "cmdoption-llvm-objdump-m", false]], "--macho-data-in-code": [[437, "cmdoption-llvm-readobj-macho-data-in-code", false]], "--macho-dsymtab": [[437, "cmdoption-llvm-readobj-macho-dsymtab", false]], "--macho-indirect-symbols": [[437, "cmdoption-llvm-readobj-macho-indirect-symbols", false]], "--macho-linker-options": [[437, "cmdoption-llvm-readobj-macho-linker-options", false]], "--macho-segment": [[437, "cmdoption-llvm-readobj-macho-segment", false]], "--macho-version-min": [[437, "cmdoption-llvm-readobj-macho-version-min", false]], "--match-full-lines": [[405, "cmdoption-FileCheck-match-full-lines", false]], "--mattr": [[432, "cmdoption-llvm-objdump-mattr", false]], "--max-tests": [[409, "cmdoption-lit-max-tests", false]], "--max-time": [[409, "cmdoption-lit-max-time", false]], "--mcpu": [[432, "cmdoption-llvm-objdump-mcpu", false]], "--minimize": [[407, "cmdoption-dsymutil-z", false]], "--name": [[423, "cmdoption-llvm-dwarfdump-n", false]], "--needed-libs": [[436, "cmdoption-llvm-readelf-needed-libs", false], [437, "cmdoption-llvm-readobj-needed-libs", false]], "--no-demangle": [[430, "cmdoption-llvm-nm-no-demangle", false], [442, "cmdoption-llvm-symbolizer-no-demangle", false]], "--no-dyldinfo": [[430, "cmdoption-llvm-nm-no-dyldinfo", false]], "--no-leading-addr": [[432, "cmdoption-llvm-objdump-no-leading-addr", false]], "--no-leading-headers": [[432, "cmdoption-llvm-objdump-no-leading-headers", false]], "--no-llvm-bc": [[430, "cmdoption-llvm-nm-no-llvm-bc", false]], "--no-odr": [[407, "cmdoption-dsymutil-no-odr", false]], "--no-output": [[407, "cmdoption-dsymutil-no-output", false], [418, "cmdoption-llvm-cov-gcov-n", false]], "--no-progress-bar": [[409, "cmdoption-lit-no-progress-bar", false]], "--no-show-raw-insn": [[432, "cmdoption-llvm-objdump-no-show-raw-insn", false]], "--no-sort": [[430, "cmdoption-llvm-nm-no-sort", false]], "--no-swiftmodule-timestamp": [[407, "cmdoption-dsymutil-no-swiftmodule-timestamp", false]], "--no-symbolic-operands": [[432, "cmdoption-llvm-objdump-no-symbolic-operands", false]], "--no-weak": [[430, "cmdoption-llvm-nm-no-weak", false]], "--non-verbose": [[432, "cmdoption-llvm-objdump-non-verbose", false]], "--notes": [[436, "cmdoption-llvm-readelf-notes", false], [437, "cmdoption-llvm-readobj-notes", false]], "--num-shards": [[409, "cmdoption-lit-num-shards", false]], "--num-threads": [[407, "cmdoption-dsymutil-j", false]], "--numeric-sort": [[430, "cmdoption-llvm-nm-numeric-sort", false]], "--obj": [[442, "cmdoption-llvm-symbolizer-obj", false]], "--objc-meta-data": [[432, "cmdoption-llvm-objdump-objc-meta-data", false]], "--object-directory": [[418, "cmdoption-llvm-cov-gcov-o", false]], "--object-file": [[418, "cmdoption-llvm-cov-gcov-o", false]], "--only-keep-debug": [[431, "cmdoption-llvm-objcopy-only-keep-debug", false]], "--only-section": [[431, "cmdoption-llvm-objcopy-only-section", false]], "--oso-prepend-path": [[407, "cmdoption-dsymutil-oso-prepend-path", false]], "--output-style": [[442, "cmdoption-llvm-symbolizer-output-style", false]], "--output-target": [[431, "cmdoption-llvm-objcopy-output-target", false]], "--papertrail": [[407, "cmdoption-dsymutil-papertrail", false]], "--param": [[409, "cmdoption-lit-D", false]], "--parent-recurse-depth": [[423, "cmdoption-llvm-dwarfdump-parent-recurse-depth", false]], "--path": [[409, "cmdoption-lit-path", false]], "--portability": [[430, "cmdoption-llvm-nm-portability", false]], "--prefix-alloc-sections": [[431, "cmdoption-llvm-objcopy-prefix-alloc-sections", false]], "--prefix-symbols": [[431, "cmdoption-llvm-objcopy-prefix-symbols", false]], "--preserve-dates": [[431, "cmdoption-llvm-objcopy-preserve-dates", false]], "--preserve-paths": [[418, "cmdoption-llvm-cov-gcov-p", false]], "--pretty-print": [[442, "cmdoption-llvm-symbolizer-pretty-print", false]], "--print-address": [[442, "cmdoption-llvm-symbolizer-print-address", false]], "--print-armap": [[430, "cmdoption-llvm-nm-print-armap", false]], "--print-file-name": [[430, "cmdoption-llvm-nm-print-file-name", false]], "--print-imm-hex": [[432, "cmdoption-llvm-objdump-print-imm-hex", false]], "--print-machineinstrs": [[410, "cmdoption-llc-print-machineinstrs", false]], "--print-size": [[430, "cmdoption-llvm-nm-print-size", false]], "--print-source-context-lines": [[442, "cmdoption-llvm-symbolizer-print-source-context-lines", false]], "--private-header": [[432, "cmdoption-llvm-objdump-private-header", false]], "--private-headers": [[432, "cmdoption-llvm-objdump-p", false]], "--program-headers": [[436, "cmdoption-llvm-readelf-program-headers", false], [437, "cmdoption-llvm-readobj-program-headers", false]], "--quiet": [[409, "cmdoption-lit-q", false], [423, "cmdoption-llvm-dwarfdump-quiet", false]], "--radix": [[430, "cmdoption-llvm-nm-radix", false]], "--raw-clang-ast": [[432, "cmdoption-llvm-objdump-raw-clang-ast", false]], "--raw-relr": [[436, "cmdoption-llvm-readelf-raw-relr", false], [437, "cmdoption-llvm-readobj-raw-relr", false]], "--rebase": [[432, "cmdoption-llvm-objdump-rebase", false]], "--recurse-depth": [[423, "cmdoption-llvm-dwarfdump-r", false]], "--redefine-sym": [[431, "cmdoption-llvm-objcopy-redefine-sym", false]], "--redefine-syms": [[431, "cmdoption-llvm-objcopy-redefine-syms", false]], "--regalloc": [[410, "cmdoption-llc-regalloc", false]], "--regex": [[423, "cmdoption-llvm-dwarfdump-x", false], [431, "cmdoption-llvm-objcopy-regex", false]], "--reloc": [[432, "cmdoption-llvm-objdump-r", false]], "--relocations": [[436, "cmdoption-llvm-readelf-relocations", false], [437, "cmdoption-llvm-readobj-relocations", false]], "--relocs": [[436, "cmdoption-llvm-readelf-relocations", false], [437, "cmdoption-llvm-readobj-relocations", false]], "--remove-section": [[431, "cmdoption-llvm-objcopy-remove-section", false]], "--rename-section": [[431, "cmdoption-llvm-objcopy-rename-section", false]], "--reverse-sort": [[430, "cmdoption-llvm-nm-reverse-sort", false]], "--run-shard": [[409, "cmdoption-lit-run-shard", false]], "--sd": [[437, "cmdoption-llvm-readobj-section-data", false]], "--section": [[432, "cmdoption-llvm-objdump-j", false]], "--section-data": [[436, "cmdoption-llvm-readelf-section-data", false], [437, "cmdoption-llvm-readobj-section-data", false]], "--section-groups": [[436, "cmdoption-llvm-readelf-elf-section-groups", false], [437, "cmdoption-llvm-readobj-elf-section-groups", false]], "--section-headers": [[432, "cmdoption-llvm-objdump-h", false], [436, "cmdoption-llvm-readelf-sections", false], [437, "cmdoption-llvm-readobj-sections", false]], "--section-mapping": [[436, "cmdoption-llvm-readelf-section-mapping", false], [437, "cmdoption-llvm-readobj-section-mapping", false]], "--section-relocations": [[436, "cmdoption-llvm-readelf-section-relocations", false], [437, "cmdoption-llvm-readobj-section-relocations", false]], "--section-symbols": [[436, "cmdoption-llvm-readelf-section-symbols", false], [437, "cmdoption-llvm-readobj-section-symbols", false]], "--sections": [[436, "cmdoption-llvm-readelf-sections", false], [437, "cmdoption-llvm-readobj-sections", false]], "--segments": [[436, "cmdoption-llvm-readelf-program-headers", false], [437, "cmdoption-llvm-readobj-program-headers", false]], "--set-section-flags": [[431, "cmdoption-llvm-objcopy-set-section-flags", false]], "--set-start-addr": [[431, "cmdoption-llvm-objcopy-set-start-addr", false]], "--show-all": [[409, "cmdoption-lit-a", false]], "--show-children": [[423, "cmdoption-llvm-dwarfdump-c", false]], "--show-form": [[423, "cmdoption-llvm-dwarfdump-F", false]], "--show-lma": [[432, "cmdoption-llvm-objdump-show-lma", false]], "--show-parents": [[423, "cmdoption-llvm-dwarfdump-p", false]], "--show-suites": [[409, "cmdoption-lit-show-suites", false]], "--show-tests": [[409, "cmdoption-lit-show-tests", false]], "--show-unsupported": [[409, "cmdoption-lit-show-unsupported", false]], "--show-xfail": [[409, "cmdoption-lit-show-xfail", false]], "--shuffle": [[409, "cmdoption-lit-shuffle", false]], "--size-sort": [[430, "cmdoption-llvm-nm-size-sort", false]], "--source": [[432, "cmdoption-llvm-objdump-S", false]], "--special-syms": [[430, "cmdoption-llvm-nm-special-syms", false]], "--spiller": [[410, "cmdoption-llc-spiller", false]], "--split-dwo": [[431, "cmdoption-llvm-objcopy-split-dwo", false]], "--sr": [[437, "cmdoption-llvm-readobj-section-relocations", false]], "--st": [[437, "cmdoption-llvm-readobj-section-symbols", false]], "--stackmap": [[436, "cmdoption-llvm-readelf-stackmap", false], [437, "cmdoption-llvm-readobj-stackmap", false]], "--start-address": [[432, "cmdoption-llvm-objdump-start-address", false]], "--statistics": [[423, "cmdoption-llvm-dwarfdump-statistics", false]], "--stats": [[410, "cmdoption-llc-stats", false]], "--stop-address": [[432, "cmdoption-llvm-objdump-stop-address", false]], "--strict-whitespace": [[405, "cmdoption-FileCheck-strict-whitespace", false]], "--string-dump": [[436, "cmdoption-llvm-readelf-string-dump", false], [437, "cmdoption-llvm-readobj-string-dump", false]], "--strip-all": [[431, "cmdoption-llvm-objcopy-strip-all", false]], "--strip-all-gnu": [[431, "cmdoption-llvm-objcopy-strip-all-gnu", false]], "--strip-debug": [[431, "cmdoption-llvm-objcopy-strip-debug", false]], "--strip-dwo": [[431, "cmdoption-llvm-objcopy-strip-dwo", false]], "--strip-non-alloc": [[431, "cmdoption-llvm-objcopy-strip-non-alloc", false]], "--strip-sections": [[431, "cmdoption-llvm-objcopy-strip-sections", false]], "--strip-symbol": [[431, "cmdoption-llvm-objcopy-strip-symbol", false]], "--strip-symbols": [[431, "cmdoption-llvm-objcopy-strip-symbols", false]], "--strip-underscore": [[419, "cmdoption-llvm-cxxfilt-strip-underscore", false]], "--strip-unneeded": [[431, "cmdoption-llvm-objcopy-strip-unneeded", false]], "--strip-unneeded-symbol": [[431, "cmdoption-llvm-objcopy-strip-unneeded-symbol", false]], "--strip-unneeded-symbols": [[431, "cmdoption-llvm-objcopy-strip-unneeded-symbols", false]], "--succinct": [[409, "cmdoption-lit-s", false]], "--summarize-types": [[423, "cmdoption-llvm-dwarfdump-summarize-types", false]], "--symbols": [[436, "cmdoption-llvm-readelf-symbols", false], [437, "cmdoption-llvm-readobj-symbols", false]], "--syms": [[432, "cmdoption-llvm-objdump-t", false], [436, "cmdoption-llvm-readelf-symbols", false], [437, "cmdoption-llvm-readobj-symbols", false]], "--symtab": [[407, "cmdoption-dsymutil-s", false]], "--target": [[431, "cmdoption-llvm-objcopy-target", false]], "--threads": [[409, "cmdoption-lit-j", false]], "--time-passes": [[410, "cmdoption-llc-time-passes", false]], "--time-tests": [[409, "cmdoption-lit-time-tests", false]], "--toolchain": [[407, "cmdoption-dsymutil-toolchain", false]], "--triple": [[432, "cmdoption-llvm-objdump-triple", false]], "--types": [[419, "cmdoption-llvm-cxxfilt-types", false]], "--unconditional-branches": [[418, "cmdoption-llvm-cov-gcov-u", false]], "--undefined-only": [[430, "cmdoption-llvm-nm-undefined-only", false]], "--universal-headers": [[432, "cmdoption-llvm-objdump-universal-headers", false]], "--unwind": [[436, "cmdoption-llvm-readelf-unwind", false], [437, "cmdoption-llvm-readobj-unwind", false]], "--unwind-info": [[432, "cmdoption-llvm-objdump-u", false]], "--update": [[407, "cmdoption-dsymutil-u", false]], "--use-symbol-table": [[442, "cmdoption-llvm-symbolizer-use-symbol-table", false]], "--uuid": [[423, "cmdoption-llvm-dwarfdump-u", false]], "--verbose": [[407, "cmdoption-dsymutil-v", false], [409, "cmdoption-lit-v", false], [423, "cmdoption-llvm-dwarfdump-v", false], [442, "cmdoption-llvm-symbolizer-verbose", false]], "--verify": [[423, "cmdoption-llvm-dwarfdump-verify", false]], "--version": [[407, "cmdoption-dsymutil-version", false], [419, "cmdoption-llvm-cxxfilt-version", false], [423, "cmdoption-llvm-dwarfdump-version", false], [430, "cmdoption-llvm-nm-version", false], [431, "cmdoption-llvm-objcopy-version", false], [432, "cmdoption-llvm-objdump-version", false], [436, "cmdoption-llvm-readelf-version", false], [437, "cmdoption-llvm-readobj-version", false], [442, "cmdoption-llvm-symbolizer-version", false]], "--version-info": [[436, "cmdoption-llvm-readelf-version-info", false], [437, "cmdoption-llvm-readobj-version-info", false]], "--vg": [[409, "cmdoption-lit-vg", false]], "--vg-arg": [[409, "cmdoption-lit-vg-arg", false]], "--vg-leak": [[409, "cmdoption-lit-vg-leak", false]], "--weak-bind": [[432, "cmdoption-llvm-objdump-weak-bind", false]], "--weaken": [[431, "cmdoption-llvm-objcopy-weaken", false]], "--weaken-symbol": [[431, "cmdoption-llvm-objcopy-weaken-symbol", false]], "--weaken-symbols": [[431, "cmdoption-llvm-objcopy-weaken-symbols", false]], "--wide": [[432, "cmdoption-llvm-objdump-w", false]], "--without-aliases": [[430, "cmdoption-llvm-nm-without-aliases", false]], "--x86-asm-syntax": [[410, "cmdoption-llc-x86-asm-syntax", false], [432, "cmdoption-llvm-objdump-x86-asm-syntax", false]], "-_": [[419, "cmdoption-llvm-cxxfilt-strip-underscore", false]], "-a": [[409, "cmdoption-lit-a", false], [418, "cmdoption-llvm-cov-gcov-a", false], [423, "cmdoption-llvm-dwarfdump-a", false], [430, "cmdoption-llvm-nm-print-file-name", false], [430, "cmdoption-llvm-nm-debug-syms", false], [432, "cmdoption-llvm-objdump-a", false], [442, "cmdoption-llvm-symbolizer-print-address", false]], "-all": [[433, "cmdoption-llvm-pdbutil-dump-all", false], [433, "cmdoption-llvm-pdbutil-pretty-all", false]], "-all-functions": [[434, "cmdoption-llvm-profdata-show-all-functions", false]], "-all-stats": [[429, "cmdoption-llvm-mca-all-stats", false]], "-all-views": [[429, "cmdoption-llvm-mca-all-views", false]], "-analysis-clustering": [[424, "cmdoption-llvm-exegesis-analysis-clustering", false]], "-analysis-clustering-epsilon": [[424, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", false]], "-analysis-clusters-output-file": [[424, "cmdoption-llvm-exegesis-analysis-clusters-output-file", false]], "-analysis-display-unstable-clusters": [[424, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", false]], "-analysis-inconsistencies-output-file": [[424, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", false]], "-analysis-inconsistency-epsilon": [[424, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", false]], "-analysis-numpoints": [[424, "cmdoption-llvm-exegesis-analysis-numpoints", false]], "-arch": [[418, "cmdoption-llvm-cov-export-arch", false], [418, "cmdoption-llvm-cov-report-arch", false], [418, "cmdoption-llvm-cov-show-arch", false]], "-archs": [[428, "cmdoption-llvm-lipo-archs", false]], "-asmparsernum": [[444, "cmdoption-tblgen-asmparsernum", false]], "-asmwriternum": [[444, "cmdoption-tblgen-asmwriternum", false]], "-b": [[418, "cmdoption-llvm-cov-gcov-b", false], [430, "cmdoption-llvm-nm-B", false], [431, "cmdoption-llvm-objcopy-binary-architecture", false]], "-benchmarks-file": [[424, "cmdoption-llvm-exegesis-benchmarks-file", false]], "-binary": [[434, "cmdoption-llvm-profdata-merge-binary", false]], "-block-range": [[433, "cmdoption-llvm-pdbutil-bytes-block-range", false]], "-bottleneck-analysis": [[429, "cmdoption-llvm-mca-bottleneck-analysis", false]], "-byte-range": [[433, "cmdoption-llvm-pdbutil-bytes-byte-range", false]], "-c": [[418, "cmdoption-llvm-cov-gcov-c", false], [423, "cmdoption-llvm-dwarfdump-c", false], [430, "cmdoption-llvm-nm-demangle", false], [432, "cmdoption-llvm-objdump-C", false], [436, "cmdoption-llvm-readelf-demangle", false], [437, "cmdoption-llvm-readobj-demangle", false], [442, "cmdoption-llvm-symbolizer-demangle", false]], "-chunks": [[433, "cmdoption-llvm-pdbutil-bytes-chunks", false]], "-class": [[444, "cmdoption-tblgen-class", false]], "-class-definitions": [[433, "cmdoption-llvm-pdbutil-pretty-class-definitions", false]], "-class-order": [[433, "cmdoption-llvm-pdbutil-pretty-class-order", false]], "-class-recurse-depth": [[433, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false]], "-classes": [[433, "cmdoption-llvm-pdbutil-pretty-classes", false]], "-code-model": [[411, "cmdoption-lli-code-model", false]], "-color-output": [[433, "cmdoption-llvm-pdbutil-pretty-color-output", false]], "-compilands": [[433, "cmdoption-llvm-pdbutil-pretty-compilands", false]], "-counts": [[434, "cmdoption-llvm-profdata-show-counts", false]], "-cs": [[434, "cmdoption-llvm-profdata-overlap-cs", false]], "-d": [[409, "cmdoption-lit-D", false], [427, "cmdoption-llvm-link-d", false], [430, "cmdoption-llvm-nm-dynamic", false], [431, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [432, "cmdoption-llvm-objdump-D", false], [432, "cmdoption-llvm-objdump-d", false], [436, "cmdoption-llvm-readelf-dynamic-table", false], [437, "cmdoption-llvm-readobj-dynamic-table", false]], "-d#<numvar>": [[405, "cmdoption-FileCheck-D-NUMVAR", false]], "-d<var": [[405, "cmdoption-FileCheck-D-VAR", false]], "-debug": [[443, "cmdoption-opt-debug", false]], "-dependents": [[433, "cmdoption-llvm-pdbutil-dump-dependents", false]], "-disable-excess-fp-precision": [[411, "cmdoption-lli-disable-excess-fp-precision", false]], "-disable-inlining": [[443, "cmdoption-opt-disable-inlining", false]], "-disable-opt": [[443, "cmdoption-opt-disable-opt", false]], "-disable-post-ra-scheduler": [[411, "cmdoption-lli-disable-post-RA-scheduler", false]], "-disable-spill-fusing": [[411, "cmdoption-lli-disable-spill-fusing", false]], "-dispatch": [[429, "cmdoption-llvm-mca-dispatch", false]], "-dispatch-stats": [[429, "cmdoption-llvm-mca-dispatch-stats", false]], "-dump": [[415, "cmdoption-llvm-bcanalyzer-dump", false]], "-dump-json": [[444, "cmdoption-tblgen-dump-json", false]], "-e": [[436, "cmdoption-llvm-readelf-headers", false], [437, "cmdoption-llvm-readobj-headers", false], [442, "cmdoption-llvm-symbolizer-obj", false]], "-ec": [[433, "cmdoption-llvm-pdbutil-bytes-ec", false]], "-enable-no-infs-fp-math": [[411, "cmdoption-lli-enable-no-infs-fp-math", false]], "-enable-no-nans-fp-math": [[411, "cmdoption-lli-enable-no-nans-fp-math", false]], "-enable-unsafe-fp-math": [[411, "cmdoption-lli-enable-unsafe-fp-math", false]], "-enums": [[433, "cmdoption-llvm-pdbutil-pretty-enums", false]], "-exclude-compilands": [[433, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false]], "-exclude-symbols": [[433, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false]], "-exclude-types": [[433, "cmdoption-llvm-pdbutil-pretty-exclude-types", false]], "-externals": [[433, "cmdoption-llvm-pdbutil-pretty-externals", false]], "-f": [[407, "cmdoption-dsymutil-f", false], [418, "cmdoption-llvm-cov-gcov-f", false], [423, "cmdoption-llvm-dwarfdump-F", false], [423, "cmdoption-llvm-dwarfdump-f", false], [427, "cmdoption-llvm-link-f", false], [430, "cmdoption-llvm-nm-format", false], [431, "cmdoption-llvm-objcopy-target", false], [432, "cmdoption-llvm-objdump-f", false], [434, "cmdoption-llvm-profdata-merge-input-files", false], [442, "cmdoption-llvm-symbolizer-functions", false], [443, "cmdoption-opt-f", false]], "-fake-argv0": [[411, "cmdoption-lli-fake-argv0", false]], "-files": [[433, "cmdoption-llvm-pdbutil-bytes-files", false], [433, "cmdoption-llvm-pdbutil-dump-files", false]], "-filetype": [[410, "cmdoption-llc-filetype", false]], "-force-interpreter": [[411, "cmdoption-lli-force-interpreter", false]], "-format": [[418, "cmdoption-llvm-cov-export-format", false], [418, "cmdoption-llvm-cov-show-format", false]], "-fpm": [[433, "cmdoption-llvm-pdbutil-bytes-fpm", false]], "-function": [[434, "cmdoption-llvm-profdata-overlap-function", false], [434, "cmdoption-llvm-profdata-show-function", false]], "-g": [[430, "cmdoption-llvm-nm-extern-only", false], [431, "cmdoption-llvm-objcopy-strip-debug", false], [432, "cmdoption-llvm-objdump-g", false], [436, "cmdoption-llvm-readelf-elf-section-groups", false], [437, "cmdoption-llvm-readobj-elf-section-groups", false]], "-gcc": [[434, "cmdoption-llvm-profdata-merge-gcc", false]], "-gen-asm-matcher": [[444, "cmdoption-tblgen-gen-asm-matcher", false]], "-gen-asm-writer": [[444, "cmdoption-tblgen-gen-asm-writer", false]], "-gen-dag-isel": [[444, "cmdoption-tblgen-gen-dag-isel", false]], "-gen-dfa-packetizer": [[444, "cmdoption-tblgen-gen-dfa-packetizer", false]], "-gen-disassembler": [[444, "cmdoption-tblgen-gen-disassembler", false]], "-gen-emitter": [[444, "cmdoption-tblgen-gen-emitter", false]], "-gen-enhanced-disassembly-info": [[444, "cmdoption-tblgen-gen-enhanced-disassembly-info", false]], "-gen-exegesis": [[444, "cmdoption-tblgen-gen-exegesis", false]], "-gen-fast-isel": [[444, "cmdoption-tblgen-gen-fast-isel", false]], "-gen-instr-info": [[444, "cmdoption-tblgen-gen-instr-info", false]], "-gen-intrinsic-enums": [[444, "cmdoption-tblgen-gen-intrinsic-enums", false]], "-gen-intrinsic-impl": [[444, "cmdoption-tblgen-gen-intrinsic-impl", false]], "-gen-pseudo-lowering": [[444, "cmdoption-tblgen-gen-pseudo-lowering", false]], "-gen-register-info": [[444, "cmdoption-tblgen-gen-register-info", false]], "-gen-subtarget": [[444, "cmdoption-tblgen-gen-subtarget", false]], "-gen-tgt-intrinsic": [[444, "cmdoption-tblgen-gen-tgt-intrinsic", false]], "-global-extras": [[433, "cmdoption-llvm-pdbutil-dump-global-extras", false]], "-globals": [[433, "cmdoption-llvm-pdbutil-dump-globals", false], [433, "cmdoption-llvm-pdbutil-pretty-globals", false]], "-h": [[409, "cmdoption-lit-h", false], [419, "cmdoption-llvm-cxxfilt-help", false], [423, "cmdoption-llvm-dwarfdump-h", false], [428, "cmdoption-llvm-lipo-help", false], [430, "cmdoption-llvm-nm-help", false], [431, "cmdoption-llvm-objcopy-help", false], [432, "cmdoption-llvm-objdump-h", false], [436, "cmdoption-llvm-readelf-file-headers", false], [437, "cmdoption-llvm-readobj-file-headers", false], [442, "cmdoption-llvm-symbolizer-help", false]], "-help": [[405, "cmdoption-FileCheck-help", false], [410, "cmdoption-llc-help", false], [411, "cmdoption-lli-help", false], [415, "cmdoption-llvm-bcanalyzer-help", false], [424, "cmdoption-llvm-exegesis-help", false], [427, "cmdoption-llvm-link-help", false], [428, "cmdoption-llvm-lipo-help", false], [429, "cmdoption-llvm-mca-help", false], [434, "cmdoption-llvm-profdata-merge-help", false], [434, "cmdoption-llvm-profdata-overlap-help", false], [434, "cmdoption-llvm-profdata-show-help", false], [443, "cmdoption-opt-help", false], [444, "cmdoption-tblgen-help", false]], "-i": [[423, "cmdoption-llvm-dwarfdump-i", false], [431, "cmdoption-llvm-objcopy-input-target", false], [436, "cmdoption-llvm-readelf-elf-hash-histogram", false], [437, "cmdoption-llvm-readobj-elf-hash-histogram", false], [442, "cmdoption-llvm-symbolizer-inlining", false], [444, "cmdoption-tblgen-I", false]], "-id": [[433, "cmdoption-llvm-pdbutil-bytes-id", false]], "-id-data": [[433, "cmdoption-llvm-pdbutil-dump-id-data", false]], "-id-extras": [[433, "cmdoption-llvm-pdbutil-dump-id-extras", false]], "-id-index": [[433, "cmdoption-llvm-pdbutil-dump-id-index", false]], "-ids": [[433, "cmdoption-llvm-pdbutil-dump-ids", false]], "-ignore-filename-regex": [[418, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [418, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [418, "cmdoption-llvm-cov-show-ignore-filename-regex", false]], "-ignore-invalid-sched-class": [[424, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", false]], "-il": [[433, "cmdoption-llvm-pdbutil-dump-il", false]], "-include-compilands": [[433, "cmdoption-llvm-pdbutil-pretty-include-compilands", false]], "-include-symbols": [[433, "cmdoption-llvm-pdbutil-pretty-include-symbols", false]], "-include-types": [[433, "cmdoption-llvm-pdbutil-pretty-include-types", false]], "-input-files": [[434, "cmdoption-llvm-profdata-merge-input-files", false]], "-instr": [[434, "cmdoption-llvm-profdata-merge-instr", false], [434, "cmdoption-llvm-profdata-show-instr", false]], "-instruction-info": [[429, "cmdoption-llvm-mca-instruction-info", false]], "-instruction-tables": [[429, "cmdoption-llvm-mca-instruction-tables", false]], "-iterations": [[429, "cmdoption-llvm-mca-iterations", false]], "-j": [[407, "cmdoption-dsymutil-j", false], [409, "cmdoption-lit-j", false], [418, "cmdoption-llvm-cov-export-num-threads", false], [418, "cmdoption-llvm-cov-show-num-threads", false], [430, "cmdoption-llvm-nm-just-symbol-name", false], [431, "cmdoption-llvm-objcopy-only-section", false], [432, "cmdoption-llvm-objdump-j", false], [434, "cmdoption-llvm-profdata-merge-num-threads", false]], "-jit-enable-eh": [[411, "cmdoption-lli-jit-enable-eh", false]], "-join-liveintervals": [[411, "cmdoption-lli-join-liveintervals", false]], "-k": [[431, "cmdoption-llvm-objcopy-keep-symbol", false]], "-l": [[418, "cmdoption-llvm-cov-gcov-l", false], [431, "cmdoption-llvm-objcopy-localize-symbol", false], [432, "cmdoption-llvm-objdump-l", false], [433, "cmdoption-llvm-pdbutil-dump-l", false], [436, "cmdoption-llvm-readelf-program-headers", false], [437, "cmdoption-llvm-readobj-program-headers", false]], "-line-coverage-gt": [[418, "cmdoption-llvm-cov-show-line-coverage-gt", false]], "-line-coverage-lt": [[418, "cmdoption-llvm-cov-show-line-coverage-lt", false]], "-lines": [[433, "cmdoption-llvm-pdbutil-pretty-lines", false]], "-list-below-cutoff": [[434, "cmdoption-llvm-profdata-show-list-below-cutoff", false]], "-load": [[411, "cmdoption-lli-load", false], [443, "cmdoption-opt-load", false]], "-load-address": [[433, "cmdoption-llvm-pdbutil-pretty-load-address", false]], "-lqueue": [[429, "cmdoption-llvm-mca-lqueue", false]], "-lto-pass-remarks-filter": [[515, "cmdoption-lto-pass-remarks-filter", false]], "-lto-pass-remarks-format": [[515, "cmdoption-lto-pass-remarks-format", false]], "-lto-pass-remarks-hotness-threshold": [[515, "cmdoption-lto-pass-remarks-hotness-threshold", false]], "-lto-pass-remarks-output": [[515, "cmdoption-lto-pass-remarks-output", false]], "-lto-pass-remarks-with-hotness": [[515, "cmdoption-lto-pass-remarks-with-hotness", false]], "-m": [[430, "cmdoption-llvm-nm-print-armap", false], [430, "cmdoption-llvm-nm-m", false], [432, "cmdoption-llvm-objdump-M", false], [432, "cmdoption-llvm-objdump-m", false]], "-march": [[410, "cmdoption-llc-march", false], [411, "cmdoption-lli-march", false], [429, "cmdoption-llvm-mca-march", false]], "-mattr": [[410, "cmdoption-llc-mattr", false], [411, "cmdoption-lli-mattr", false]], "-mcpu": [[410, "cmdoption-llc-mcpu", false], [411, "cmdoption-lli-mcpu", false], [424, "cmdoption-llvm-exegesis-mcpu", false], [429, "cmdoption-llvm-mca-mcpu", false]], "-meabi": [[410, "cmdoption-llc-meabi", false]], "-memop-sizes": [[434, "cmdoption-llvm-profdata-show-memop-sizes", false]], "-min-class-padding": [[433, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false]], "-min-class-padding-imm": [[433, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false]], "-min-type-size": [[433, "cmdoption-llvm-pdbutil-pretty-min-type-size", false]], "-mod": [[433, "cmdoption-llvm-pdbutil-bytes-mod", false]], "-mode": [[424, "cmdoption-llvm-exegesis-mode", false]], "-modi": [[433, "cmdoption-llvm-pdbutil-bytes-modi", false], [433, "cmdoption-llvm-pdbutil-dump-modi", false]], "-module-syms": [[433, "cmdoption-llvm-pdbutil-pretty-module-syms", false]], "-modules": [[433, "cmdoption-llvm-pdbutil-dump-modules", false]], "-mtriple": [[410, "cmdoption-llc-mtriple", false], [411, "cmdoption-lli-mtriple", false], [429, "cmdoption-llvm-mca-mtriple", false]], "-n": [[418, "cmdoption-llvm-cov-gcov-n", false], [423, "cmdoption-llvm-dwarfdump-n", false], [430, "cmdoption-llvm-nm-numeric-sort", false], [431, "cmdoption-llvm-objcopy-strip-symbol", false], [436, "cmdoption-llvm-readelf-notes", false], [437, "cmdoption-llvm-readobj-notes", false]], "-name": [[418, "cmdoption-llvm-cov-show-name", false]], "-name-map": [[433, "cmdoption-llvm-pdbutil-bytes-name-map", false]], "-name-regex": [[418, "cmdoption-llvm-cov-show-name-regex", false]], "-name-whitelist": [[418, "cmdoption-llvm-cov-show-name-whitelist", false]], "-no-compiler-generated": [[433, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false]], "-no-enum-definitions": [[433, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false]], "-no-system-libs": [[433, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false]], "-noalias": [[429, "cmdoption-llvm-mca-noalias", false]], "-nodetails": [[415, "cmdoption-llvm-bcanalyzer-nodetails", false]], "-nozero-initialized-in-bss": [[411, "cmdoption-lli-nozero-initialized-in-bss", false]], "-num-repetitions": [[424, "cmdoption-llvm-exegesis-num-repetitions", false]], "-num-threads": [[418, "cmdoption-llvm-cov-export-num-threads", false], [418, "cmdoption-llvm-cov-show-num-threads", false], [434, "cmdoption-llvm-profdata-merge-num-threads", false]], "-o": [[407, "cmdoption-dsymutil-o", false], [410, "cmdoption-llc-O", false], [410, "cmdoption-llc-o", false], [418, "cmdoption-llvm-cov-gcov-o", false], [420, "cmdoption-llvm-cxxmap-output", false], [423, "cmdoption-llvm-dwarfdump-o", false], [427, "cmdoption-llvm-link-o", false], [429, "cmdoption-llvm-mca-o", false], [430, "cmdoption-llvm-nm-print-file-name", false], [431, "cmdoption-llvm-objcopy-output-target", false], [434, "cmdoption-llvm-profdata-merge-output", false], [434, "cmdoption-llvm-profdata-overlap-o", false], [434, "cmdoption-llvm-profdata-show-output", false], [439, "cmdoption-llvm-stress-o", false], [443, "cmdoption-opt-o", false], [444, "cmdoption-tblgen-o", false]], "-opcode-index": [[424, "cmdoption-llvm-exegesis-opcode-index", false]], "-opcode-name": [[424, "cmdoption-llvm-exegesis-opcode-name", false]], "-opt-remarks-filename": [[515, "cmdoption-opt-remarks-filename", false]], "-opt-remarks-filter": [[515, "cmdoption-opt-remarks-filter", false]], "-opt-remarks-format": [[515, "cmdoption-opt-remarks-format", false]], "-opt-remarks-with-hotness": [[515, "cmdoption-opt-remarks-with-hotness", false]], "-output": [[420, "cmdoption-llvm-cxxmap-output", false], [434, "cmdoption-llvm-profdata-merge-output", false], [434, "cmdoption-llvm-profdata-show-output", false]], "-output-asm-variant": [[429, "cmdoption-llvm-mca-output-asm-variant", false]], "-output-dir": [[418, "cmdoption-llvm-cov-show-output-dir", false]], "-p": [[418, "cmdoption-llvm-cov-gcov-p", false], [423, "cmdoption-llvm-dwarfdump-p", false], [430, "cmdoption-llvm-nm-portability", false], [430, "cmdoption-llvm-nm-no-sort", false], [431, "cmdoption-llvm-objcopy-preserve-dates", false], [432, "cmdoption-llvm-objdump-p", false], [436, "cmdoption-llvm-readelf-string-dump", false], [437, "cmdoption-llvm-readobj-string-dump", false], [442, "cmdoption-llvm-symbolizer-pretty-print", false], [443, "cmdoption-opt-p", false]], "-pass-remarks": [[515, "cmdoption-pass-remarks", false]], "-pass-remarks-analysis": [[515, "cmdoption-pass-remarks-analysis", false]], "-pass-remarks-filter": [[515, "cmdoption-pass-remarks-filter", false]], "-pass-remarks-format": [[515, "cmdoption-pass-remarks-format", false]], "-pass-remarks-hotness-threshold": [[515, "cmdoption-pass-remarks-hotness-threshold", false]], "-pass-remarks-missed": [[515, "cmdoption-pass-remarks-missed", false]], "-pass-remarks-output": [[515, "cmdoption-pass-remarks-output", false]], "-pass-remarks-with-hotness": [[515, "cmdoption-pass-remarks-with-hotness", false]], "-path-equivalence": [[418, "cmdoption-llvm-cov-show-path-equivalence", false]], "-pdb": [[433, "cmdoption-llvm-pdbutil-merge-pdb", false], [433, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "-pre-ra-sched": [[411, "cmdoption-lli-pre-RA-sched", false]], "-print-enums": [[444, "cmdoption-tblgen-print-enums", false]], "-print-records": [[444, "cmdoption-tblgen-print-records", false]], "-print-sets": [[444, "cmdoption-tblgen-print-sets", false]], "-public-extras": [[433, "cmdoption-llvm-pdbutil-dump-public-extras", false]], "-publics": [[433, "cmdoption-llvm-pdbutil-dump-publics", false]], "-q": [[409, "cmdoption-lit-q", false]], "-r": [[420, "cmdoption-llvm-cxxmap-remapping-file", false], [423, "cmdoption-llvm-dwarfdump-r", false], [430, "cmdoption-llvm-nm-reverse-sort", false], [431, "cmdoption-llvm-objcopy-remove-section", false], [432, "cmdoption-llvm-objdump-R", false], [432, "cmdoption-llvm-objdump-r", false], [434, "cmdoption-llvm-profdata-merge-remapping-file", false], [436, "cmdoption-llvm-readelf-relocations", false], [437, "cmdoption-llvm-readobj-relocations", false]], "-regalloc": [[411, "cmdoption-lli-regalloc", false]], "-region-coverage-gt": [[418, "cmdoption-llvm-cov-show-region-coverage-gt", false]], "-region-coverage-lt": [[418, "cmdoption-llvm-cov-show-region-coverage-lt", false]], "-register-file-size": [[429, "cmdoption-llvm-mca-register-file-size", false]], "-register-file-stats": [[429, "cmdoption-llvm-mca-register-file-stats", false]], "-relocation-model": [[411, "cmdoption-lli-relocation-model", false]], "-remapping-file": [[420, "cmdoption-llvm-cxxmap-remapping-file", false], [434, "cmdoption-llvm-profdata-merge-remapping-file", false]], "-remarks-section": [[410, "cmdoption-llc-remarks-section", false]], "-resource-pressure": [[429, "cmdoption-llvm-mca-resource-pressure", false]], "-retire-stats": [[429, "cmdoption-llvm-mca-retire-stats", false]], "-s": [[407, "cmdoption-dsymutil-s", false], [409, "cmdoption-lit-s", false], [419, "cmdoption-llvm-cxxfilt-format", false], [427, "cmdoption-llvm-link-S", false], [430, "cmdoption-llvm-nm-print-size", false], [430, "cmdoption-llvm-nm-s", false], [431, "cmdoption-llvm-objcopy-strip-all", false], [432, "cmdoption-llvm-objdump-S", false], [432, "cmdoption-llvm-objdump-s", false], [436, "cmdoption-llvm-readelf-sections", false], [436, "cmdoption-llvm-readelf-symbols", false], [437, "cmdoption-llvm-readobj-sections", false], [437, "cmdoption-llvm-readobj-sections", false], [442, "cmdoption-llvm-symbolizer-basenames", false], [443, "cmdoption-opt-S", false]], "-sample": [[434, "cmdoption-llvm-profdata-merge-sample", false], [434, "cmdoption-llvm-profdata-show-sample", false]], "-sc": [[433, "cmdoption-llvm-pdbutil-bytes-sc", false]], "-scheduler-stats": [[429, "cmdoption-llvm-mca-scheduler-stats", false]], "-section-contribs": [[433, "cmdoption-llvm-pdbutil-dump-section-contribs", false]], "-section-headers": [[433, "cmdoption-llvm-pdbutil-dump-section-headers", false]], "-section-map": [[433, "cmdoption-llvm-pdbutil-dump-section-map", false]], "-seed": [[439, "cmdoption-llvm-stress-seed", false]], "-show-expansions": [[418, "cmdoption-llvm-cov-show-show-expansions", false]], "-show-functions": [[418, "cmdoption-llvm-cov-report-show-functions", false]], "-show-instantiation-summary": [[418, "cmdoption-llvm-cov-report-show-instantiation-summary", false]], "-show-instantiations": [[418, "cmdoption-llvm-cov-show-show-instantiations", false]], "-show-line-counts": [[418, "cmdoption-llvm-cov-show-show-line-counts", false]], "-show-line-counts-or-regions": [[418, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false]], "-show-regions": [[418, "cmdoption-llvm-cov-show-show-regions", false]], "-showcs": [[434, "cmdoption-llvm-profdata-show-showcs", false]], "-size": [[439, "cmdoption-llvm-stress-size", false]], "-skip-expansions": [[418, "cmdoption-llvm-cov-export-skip-expansions", false]], "-skip-functions": [[418, "cmdoption-llvm-cov-export-skip-functions", false]], "-sm": [[433, "cmdoption-llvm-pdbutil-bytes-sm", false]], "-snippets-file": [[424, "cmdoption-llvm-exegesis-snippets-file", false]], "-soft-float": [[411, "cmdoption-lli-soft-float", false]], "-sparse": [[434, "cmdoption-llvm-profdata-merge-sparse", false]], "-spiller": [[411, "cmdoption-lli-spiller", false]], "-split-chunks": [[433, "cmdoption-llvm-pdbutil-bytes-split-chunks", false]], "-squeue": [[429, "cmdoption-llvm-mca-squeue", false]], "-stack-size-section": [[410, "cmdoption-llc-stack-size-section", false]], "-stats": [[411, "cmdoption-lli-stats", false], [443, "cmdoption-opt-stats", false]], "-stream-blocks": [[433, "cmdoption-llvm-pdbutil-dump-stream-blocks", false]], "-stream-data": [[433, "cmdoption-llvm-pdbutil-bytes-stream-data", false]], "-streams": [[433, "cmdoption-llvm-pdbutil-dump-streams", false]], "-string-table": [[433, "cmdoption-llvm-pdbutil-dump-string-table", false]], "-strip-debug": [[443, "cmdoption-opt-strip-debug", false]], "-summary": [[433, "cmdoption-llvm-pdbutil-dump-summary", false]], "-summary-only": [[418, "cmdoption-llvm-cov-export-summary-only", false]], "-sym-data": [[433, "cmdoption-llvm-pdbutil-dump-sym-data", false]], "-sym-types": [[433, "cmdoption-llvm-pdbutil-pretty-sym-types", false]], "-symbol-order": [[433, "cmdoption-llvm-pdbutil-pretty-symbol-order", false]], "-symbols": [[433, "cmdoption-llvm-pdbutil-dump-symbols", false]], "-syms": [[433, "cmdoption-llvm-pdbutil-bytes-syms", false]], "-t": [[419, "cmdoption-llvm-cxxfilt-types", false], [430, "cmdoption-llvm-nm-radix", false], [432, "cmdoption-llvm-objdump-t", false], [437, "cmdoption-llvm-readobj-symbols", false]], "-tab-size": [[418, "cmdoption-llvm-cov-show-tab-size", false]], "-text": [[434, "cmdoption-llvm-profdata-merge-text", false], [434, "cmdoption-llvm-profdata-show-text", false]], "-time-passes": [[411, "cmdoption-lli-time-passes", false], [443, "cmdoption-opt-time-passes", false]], "-timeline": [[429, "cmdoption-llvm-mca-timeline", false]], "-timeline-max-cycles": [[429, "cmdoption-llvm-mca-timeline-max-cycles", false]], "-timeline-max-iterations": [[429, "cmdoption-llvm-mca-timeline-max-iterations", false]], "-topn": [[434, "cmdoption-llvm-profdata-show-topn", false]], "-type": [[433, "cmdoption-llvm-pdbutil-bytes-type", false]], "-type-data": [[433, "cmdoption-llvm-pdbutil-dump-type-data", false]], "-type-extras": [[433, "cmdoption-llvm-pdbutil-dump-type-extras", false]], "-type-index": [[433, "cmdoption-llvm-pdbutil-dump-type-index", false]], "-type-server": [[433, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "-typedefs": [[433, "cmdoption-llvm-pdbutil-pretty-typedefs", false]], "-types": [[433, "cmdoption-llvm-pdbutil-dump-types", false], [433, "cmdoption-llvm-pdbutil-pretty-types", false]], "-u": [[407, "cmdoption-dsymutil-u", false], [418, "cmdoption-llvm-cov-gcov-u", false], [423, "cmdoption-llvm-dwarfdump-u", false], [430, "cmdoption-llvm-nm-defined-only", false], [430, "cmdoption-llvm-nm-undefined-only", false], [431, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [432, "cmdoption-llvm-objdump-u", false], [436, "cmdoption-llvm-readelf-unwind", false], [437, "cmdoption-llvm-readobj-unwind", false]], "-use-color": [[418, "cmdoption-llvm-cov-report-use-color", false], [418, "cmdoption-llvm-cov-show-use-color", false]], "-v": [[405, "cmdoption-FileCheck-v", false], [407, "cmdoption-dsymutil-v", false], [409, "cmdoption-lit-v", false], [423, "cmdoption-llvm-dwarfdump-v", false], [427, "cmdoption-llvm-link-v", false], [430, "cmdoption-llvm-nm-numeric-sort", false], [431, "cmdoption-llvm-objcopy-version", false], [436, "cmdoption-llvm-readelf-version-info", false], [437, "cmdoption-llvm-readobj-version-info", false]], "-value-cutoff": [[434, "cmdoption-llvm-profdata-overlap-value-cutoff", false], [434, "cmdoption-llvm-profdata-show-value-cutoff", false]], "-verify": [[415, "cmdoption-llvm-bcanalyzer-verify", false]], "-verify-each": [[443, "cmdoption-opt-verify-each", false]], "-verify_arch": [[428, "cmdoption-llvm-lipo-verify_arch", false]], "-version": [[405, "cmdoption-FileCheck-version", false], [411, "cmdoption-lli-version", false], [418, "cmdoption-llvm-cov-gcov-version", false], [428, "cmdoption-llvm-lipo-version", false], [444, "cmdoption-tblgen-version", false]], "-vv": [[405, "cmdoption-FileCheck-vv", false], [409, "cmdoption-lit-vv", false]], "-w": [[430, "cmdoption-llvm-nm-no-weak", false], [431, "cmdoption-llvm-objcopy-weaken-symbol", false], [432, "cmdoption-llvm-objdump-w", false]], "-wambiguous": [[420, "cmdoption-llvm-cxxmap-Wambiguous", false]], "-weighted-input": [[434, "cmdoption-llvm-profdata-merge-weighted-input", false]], "-wincomplete": [[420, "cmdoption-llvm-cxxmap-Wincomplete", false]], "-x": [[418, "cmdoption-llvm-cov-gcov-x", false], [423, "cmdoption-llvm-dwarfdump-x", false], [430, "cmdoption-llvm-nm-x", false], [431, "cmdoption-llvm-objcopy-discard-locals", false], [431, "cmdoption-llvm-objcopy-discard-all", false], [432, "cmdoption-llvm-objdump-x", false], [436, "cmdoption-llvm-readelf-hex-dump", false], [437, "cmdoption-llvm-readobj-hex-dump", false]], "-x86-asm-syntax": [[411, "cmdoption-lli-x86-asm-syntax", false]], "-xdemangler": [[418, "cmdoption-llvm-cov-show-Xdemangler", false]], "-xme": [[433, "cmdoption-llvm-pdbutil-dump-xme", false]], "-xmi": [[433, "cmdoption-llvm-pdbutil-dump-xmi", false]], "-y": [[407, "cmdoption-dsymutil-y", false]], "-z": [[407, "cmdoption-dsymutil-z", false], [432, "cmdoption-llvm-objdump-z", false]], "-{passname}": [[443, "cmdoption-opt-passname", false]], "@<file>": [[419, "cmdoption-llvm-cxxfilt-arg-FILE", false], [423, "cmdoption-llvm-dwarfdump-arg-FILE", false], [430, "cmdoption-llvm-nm-arg-FILE", false], [432, "cmdoption-llvm-objdump-arg-FILE", false], [436, "cmdoption-llvm-readelf-arg-FILE", false], [437, "cmdoption-llvm-readobj-arg-FILE", false], [442, "cmdoption-llvm-symbolizer-arg-FILE", false]], "att": [[432, "cmdoption-llvm-objdump-arg-att", false]], "dsymutil \u547d\u4ee4\u5217\u9078\u9805": [[407, "cmdoption-dsymutil-arch", false], [407, "cmdoption-dsymutil-dump-debug-map", false], [407, "cmdoption-dsymutil-f", false], [407, "cmdoption-dsymutil-j", false], [407, "cmdoption-dsymutil-no-odr", false], [407, "cmdoption-dsymutil-no-output", false], [407, "cmdoption-dsymutil-no-swiftmodule-timestamp", false], [407, "cmdoption-dsymutil-o", false], [407, "cmdoption-dsymutil-oso-prepend-path", false], [407, "cmdoption-dsymutil-papertrail", false], [407, "cmdoption-dsymutil-s", false], [407, "cmdoption-dsymutil-toolchain", false], [407, "cmdoption-dsymutil-u", false], [407, "cmdoption-dsymutil-v", false], [407, "cmdoption-dsymutil-version", false], [407, "cmdoption-dsymutil-y", false], [407, "cmdoption-dsymutil-z", false]], "filecheck \u547d\u4ee4\u5217\u9078\u9805": [[405, "cmdoption-FileCheck-D-NUMVAR", false], [405, "cmdoption-FileCheck-D-VAR", false], [405, "cmdoption-FileCheck-allow-deprecated-dag-overlap", false], [405, "cmdoption-FileCheck-check-prefix", false], [405, "cmdoption-FileCheck-check-prefixes", false], [405, "cmdoption-FileCheck-color", false], [405, "cmdoption-FileCheck-dump-input", false], [405, "cmdoption-FileCheck-dump-input-on-failure", false], [405, "cmdoption-FileCheck-enable-var-scope", false], [405, "cmdoption-FileCheck-help", false], [405, "cmdoption-FileCheck-implicit-check-not", false], [405, "cmdoption-FileCheck-input-file", false], [405, "cmdoption-FileCheck-match-full-lines", false], [405, "cmdoption-FileCheck-strict-whitespace", false], [405, "cmdoption-FileCheck-v", false], [405, "cmdoption-FileCheck-version", false], [405, "cmdoption-FileCheck-vv", false]], "intel": [[432, "cmdoption-llvm-objdump-arg-intel", false]], "lit \u547d\u4ee4\u5217\u9078\u9805": [[409, "cmdoption-lit-D", false], [409, "cmdoption-lit-a", false], [409, "cmdoption-lit-config-prefix", false], [409, "cmdoption-lit-debug", false], [409, "cmdoption-lit-filter", false], [409, "cmdoption-lit-h", false], [409, "cmdoption-lit-j", false], [409, "cmdoption-lit-max-tests", false], [409, "cmdoption-lit-max-time", false], [409, "cmdoption-lit-no-progress-bar", false], [409, "cmdoption-lit-num-shards", false], [409, "cmdoption-lit-path", false], [409, "cmdoption-lit-q", false], [409, "cmdoption-lit-run-shard", false], [409, "cmdoption-lit-s", false], [409, "cmdoption-lit-show-suites", false], [409, "cmdoption-lit-show-tests", false], [409, "cmdoption-lit-show-unsupported", false], [409, "cmdoption-lit-show-xfail", false], [409, "cmdoption-lit-shuffle", false], [409, "cmdoption-lit-time-tests", false], [409, "cmdoption-lit-v", false], [409, "cmdoption-lit-vg", false], [409, "cmdoption-lit-vg-arg", false], [409, "cmdoption-lit-vg-leak", false], [409, "cmdoption-lit-vv", false]], "llc \u547d\u4ee4\u5217\u9078\u9805": [[410, "cmdoption-llc-O", false], [410, "cmdoption-llc-disable-excess-fp-precision", false], [410, "cmdoption-llc-enable-no-infs-fp-math", false], [410, "cmdoption-llc-enable-no-nans-fp-math", false], [410, "cmdoption-llc-enable-unsafe-fp-math", false], [410, "cmdoption-llc-filetype", false], [410, "cmdoption-llc-frame-pointer", false], [410, "cmdoption-llc-help", false], [410, "cmdoption-llc-load", false], [410, "cmdoption-llc-march", false], [410, "cmdoption-llc-mattr", false], [410, "cmdoption-llc-mcpu", false], [410, "cmdoption-llc-meabi", false], [410, "cmdoption-llc-mtriple", false], [410, "cmdoption-llc-o", false], [410, "cmdoption-llc-print-machineinstrs", false], [410, "cmdoption-llc-regalloc", false], [410, "cmdoption-llc-remarks-section", false], [410, "cmdoption-llc-spiller", false], [410, "cmdoption-llc-stack-size-section", false], [410, "cmdoption-llc-stats", false], [410, "cmdoption-llc-time-passes", false], [410, "cmdoption-llc-x86-asm-syntax", false]], "lli \u547d\u4ee4\u5217\u9078\u9805": [[411, "cmdoption-lli-code-model", false], [411, "cmdoption-lli-disable-excess-fp-precision", false], [411, "cmdoption-lli-disable-post-RA-scheduler", false], [411, "cmdoption-lli-disable-spill-fusing", false], [411, "cmdoption-lli-enable-no-infs-fp-math", false], [411, "cmdoption-lli-enable-no-nans-fp-math", false], [411, "cmdoption-lli-enable-unsafe-fp-math", false], [411, "cmdoption-lli-fake-argv0", false], [411, "cmdoption-lli-force-interpreter", false], [411, "cmdoption-lli-help", false], [411, "cmdoption-lli-jit-enable-eh", false], [411, "cmdoption-lli-join-liveintervals", false], [411, "cmdoption-lli-load", false], [411, "cmdoption-lli-march", false], [411, "cmdoption-lli-mattr", false], [411, "cmdoption-lli-mcpu", false], [411, "cmdoption-lli-mtriple", false], [411, "cmdoption-lli-nozero-initialized-in-bss", false], [411, "cmdoption-lli-pre-RA-sched", false], [411, "cmdoption-lli-regalloc", false], [411, "cmdoption-lli-relocation-model", false], [411, "cmdoption-lli-soft-float", false], [411, "cmdoption-lli-spiller", false], [411, "cmdoption-lli-stats", false], [411, "cmdoption-lli-time-passes", false], [411, "cmdoption-lli-version", false], [411, "cmdoption-lli-x86-asm-syntax", false]], "llvm-bcanalyzer \u547d\u4ee4\u5217\u9078\u9805": [[415, "cmdoption-llvm-bcanalyzer-dump", false], [415, "cmdoption-llvm-bcanalyzer-help", false], [415, "cmdoption-llvm-bcanalyzer-nodetails", false], [415, "cmdoption-llvm-bcanalyzer-verify", false]], "llvm-cov-export \u547d\u4ee4\u5217\u9078\u9805": [[418, "cmdoption-llvm-cov-export-arch", false], [418, "cmdoption-llvm-cov-export-format", false], [418, "cmdoption-llvm-cov-export-ignore-filename-regex", false], [418, "cmdoption-llvm-cov-export-num-threads", false], [418, "cmdoption-llvm-cov-export-skip-expansions", false], [418, "cmdoption-llvm-cov-export-skip-functions", false], [418, "cmdoption-llvm-cov-export-summary-only", false]], "llvm-cov-gcov \u547d\u4ee4\u5217\u9078\u9805": [[418, "cmdoption-llvm-cov-gcov-a", false], [418, "cmdoption-llvm-cov-gcov-b", false], [418, "cmdoption-llvm-cov-gcov-c", false], [418, "cmdoption-llvm-cov-gcov-f", false], [418, "cmdoption-llvm-cov-gcov-help", false], [418, "cmdoption-llvm-cov-gcov-l", false], [418, "cmdoption-llvm-cov-gcov-n", false], [418, "cmdoption-llvm-cov-gcov-o", false], [418, "cmdoption-llvm-cov-gcov-p", false], [418, "cmdoption-llvm-cov-gcov-u", false], [418, "cmdoption-llvm-cov-gcov-version", false], [418, "cmdoption-llvm-cov-gcov-x", false]], "llvm-cov-report \u547d\u4ee4\u5217\u9078\u9805": [[418, "cmdoption-llvm-cov-report-arch", false], [418, "cmdoption-llvm-cov-report-ignore-filename-regex", false], [418, "cmdoption-llvm-cov-report-show-functions", false], [418, "cmdoption-llvm-cov-report-show-instantiation-summary", false], [418, "cmdoption-llvm-cov-report-use-color", false]], "llvm-cov-show \u547d\u4ee4\u5217\u9078\u9805": [[418, "cmdoption-llvm-cov-show-Xdemangler", false], [418, "cmdoption-llvm-cov-show-arch", false], [418, "cmdoption-llvm-cov-show-format", false], [418, "cmdoption-llvm-cov-show-ignore-filename-regex", false], [418, "cmdoption-llvm-cov-show-line-coverage-gt", false], [418, "cmdoption-llvm-cov-show-line-coverage-lt", false], [418, "cmdoption-llvm-cov-show-name", false], [418, "cmdoption-llvm-cov-show-name-regex", false], [418, "cmdoption-llvm-cov-show-name-whitelist", false], [418, "cmdoption-llvm-cov-show-num-threads", false], [418, "cmdoption-llvm-cov-show-output-dir", false], [418, "cmdoption-llvm-cov-show-path-equivalence", false], [418, "cmdoption-llvm-cov-show-region-coverage-gt", false], [418, "cmdoption-llvm-cov-show-region-coverage-lt", false], [418, "cmdoption-llvm-cov-show-show-expansions", false], [418, "cmdoption-llvm-cov-show-show-instantiations", false], [418, "cmdoption-llvm-cov-show-show-line-counts", false], [418, "cmdoption-llvm-cov-show-show-line-counts-or-regions", false], [418, "cmdoption-llvm-cov-show-show-regions", false], [418, "cmdoption-llvm-cov-show-tab-size", false], [418, "cmdoption-llvm-cov-show-use-color", false]], "llvm-cxxfilt \u547d\u4ee4\u5217\u9078\u9805": [[419, "cmdoption-llvm-cxxfilt-arg-FILE", false], [419, "cmdoption-llvm-cxxfilt-format", false], [419, "cmdoption-llvm-cxxfilt-help", false], [419, "cmdoption-llvm-cxxfilt-help-list", false], [419, "cmdoption-llvm-cxxfilt-strip-underscore", false], [419, "cmdoption-llvm-cxxfilt-types", false], [419, "cmdoption-llvm-cxxfilt-version", false]], "llvm-cxxmap \u547d\u4ee4\u5217\u9078\u9805": [[420, "cmdoption-llvm-cxxmap-Wambiguous", false], [420, "cmdoption-llvm-cxxmap-Wincomplete", false], [420, "cmdoption-llvm-cxxmap-output", false], [420, "cmdoption-llvm-cxxmap-remapping-file", false]], "llvm-dwarfdump \u547d\u4ee4\u5217\u9078\u9805": [[423, "cmdoption-llvm-dwarfdump-F", false], [423, "cmdoption-llvm-dwarfdump-a", false], [423, "cmdoption-llvm-dwarfdump-arch", false], [423, "cmdoption-llvm-dwarfdump-arg-FILE", false], [423, "cmdoption-llvm-dwarfdump-c", false], [423, "cmdoption-llvm-dwarfdump-color", false], [423, "cmdoption-llvm-dwarfdump-debug-abbrev", false], [423, "cmdoption-llvm-dwarfdump-diff", false], [423, "cmdoption-llvm-dwarfdump-f", false], [423, "cmdoption-llvm-dwarfdump-h", false], [423, "cmdoption-llvm-dwarfdump-help-list", false], [423, "cmdoption-llvm-dwarfdump-i", false], [423, "cmdoption-llvm-dwarfdump-lookup", false], [423, "cmdoption-llvm-dwarfdump-n", false], [423, "cmdoption-llvm-dwarfdump-o", false], [423, "cmdoption-llvm-dwarfdump-p", false], [423, "cmdoption-llvm-dwarfdump-parent-recurse-depth", false], [423, "cmdoption-llvm-dwarfdump-quiet", false], [423, "cmdoption-llvm-dwarfdump-r", false], [423, "cmdoption-llvm-dwarfdump-statistics", false], [423, "cmdoption-llvm-dwarfdump-summarize-types", false], [423, "cmdoption-llvm-dwarfdump-u", false], [423, "cmdoption-llvm-dwarfdump-v", false], [423, "cmdoption-llvm-dwarfdump-verify", false], [423, "cmdoption-llvm-dwarfdump-version", false], [423, "cmdoption-llvm-dwarfdump-x", false]], "llvm-exegesis \u547d\u4ee4\u5217\u9078\u9805": [[424, "cmdoption-llvm-exegesis-analysis-clustering", false], [424, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", false], [424, "cmdoption-llvm-exegesis-analysis-clusters-output-file", false], [424, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", false], [424, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", false], [424, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", false], [424, "cmdoption-llvm-exegesis-analysis-numpoints", false], [424, "cmdoption-llvm-exegesis-benchmarks-file", false], [424, "cmdoption-llvm-exegesis-dump-object-to-disk", false], [424, "cmdoption-llvm-exegesis-help", false], [424, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", false], [424, "cmdoption-llvm-exegesis-mcpu", false], [424, "cmdoption-llvm-exegesis-mode", false], [424, "cmdoption-llvm-exegesis-num-repetitions", false], [424, "cmdoption-llvm-exegesis-opcode-index", false], [424, "cmdoption-llvm-exegesis-opcode-name", false], [424, "cmdoption-llvm-exegesis-snippets-file", false]], "llvm-link \u547d\u4ee4\u5217\u9078\u9805": [[427, "cmdoption-llvm-link-S", false], [427, "cmdoption-llvm-link-d", false], [427, "cmdoption-llvm-link-f", false], [427, "cmdoption-llvm-link-help", false], [427, "cmdoption-llvm-link-o", false], [427, "cmdoption-llvm-link-v", false]], "llvm-lipo \u547d\u4ee4\u5217\u9078\u9805": [[428, "cmdoption-llvm-lipo-archs", false], [428, "cmdoption-llvm-lipo-help", false], [428, "cmdoption-llvm-lipo-verify_arch", false], [428, "cmdoption-llvm-lipo-version", false]], "llvm-mca \u547d\u4ee4\u5217\u9078\u9805": [[429, "cmdoption-llvm-mca-all-stats", false], [429, "cmdoption-llvm-mca-all-views", false], [429, "cmdoption-llvm-mca-bottleneck-analysis", false], [429, "cmdoption-llvm-mca-dispatch", false], [429, "cmdoption-llvm-mca-dispatch-stats", false], [429, "cmdoption-llvm-mca-help", false], [429, "cmdoption-llvm-mca-instruction-info", false], [429, "cmdoption-llvm-mca-instruction-tables", false], [429, "cmdoption-llvm-mca-iterations", false], [429, "cmdoption-llvm-mca-lqueue", false], [429, "cmdoption-llvm-mca-march", false], [429, "cmdoption-llvm-mca-mcpu", false], [429, "cmdoption-llvm-mca-mtriple", false], [429, "cmdoption-llvm-mca-noalias", false], [429, "cmdoption-llvm-mca-o", false], [429, "cmdoption-llvm-mca-output-asm-variant", false], [429, "cmdoption-llvm-mca-register-file-size", false], [429, "cmdoption-llvm-mca-register-file-stats", false], [429, "cmdoption-llvm-mca-resource-pressure", false], [429, "cmdoption-llvm-mca-retire-stats", false], [429, "cmdoption-llvm-mca-scheduler-stats", false], [429, "cmdoption-llvm-mca-squeue", false], [429, "cmdoption-llvm-mca-timeline", false], [429, "cmdoption-llvm-mca-timeline-max-cycles", false], [429, "cmdoption-llvm-mca-timeline-max-iterations", false]], "llvm-nm \u547d\u4ee4\u5217\u9078\u9805": [[430, "cmdoption-llvm-nm-B", false], [430, "cmdoption-llvm-nm-add-dyldinfo", false], [430, "cmdoption-llvm-nm-arch", false], [430, "cmdoption-llvm-nm-arg-FILE", false], [430, "cmdoption-llvm-nm-debug-syms", false], [430, "cmdoption-llvm-nm-defined-only", false], [430, "cmdoption-llvm-nm-demangle", false], [430, "cmdoption-llvm-nm-dyldinfo-only", false], [430, "cmdoption-llvm-nm-dynamic", false], [430, "cmdoption-llvm-nm-extern-only", false], [430, "cmdoption-llvm-nm-format", false], [430, "cmdoption-llvm-nm-help", false], [430, "cmdoption-llvm-nm-help-list", false], [430, "cmdoption-llvm-nm-just-symbol-name", false], [430, "cmdoption-llvm-nm-m", false], [430, "cmdoption-llvm-nm-no-demangle", false], [430, "cmdoption-llvm-nm-no-dyldinfo", false], [430, "cmdoption-llvm-nm-no-llvm-bc", false], [430, "cmdoption-llvm-nm-no-sort", false], [430, "cmdoption-llvm-nm-no-weak", false], [430, "cmdoption-llvm-nm-numeric-sort", false], [430, "cmdoption-llvm-nm-portability", false], [430, "cmdoption-llvm-nm-print-armap", false], [430, "cmdoption-llvm-nm-print-file-name", false], [430, "cmdoption-llvm-nm-print-size", false], [430, "cmdoption-llvm-nm-radix", false], [430, "cmdoption-llvm-nm-reverse-sort", false], [430, "cmdoption-llvm-nm-s", false], [430, "cmdoption-llvm-nm-size-sort", false], [430, "cmdoption-llvm-nm-special-syms", false], [430, "cmdoption-llvm-nm-undefined-only", false], [430, "cmdoption-llvm-nm-version", false], [430, "cmdoption-llvm-nm-without-aliases", false], [430, "cmdoption-llvm-nm-x", false]], "llvm-objcopy \u547d\u4ee4\u5217\u9078\u9805": [[431, "cmdoption-llvm-objcopy-add-gnu-debuglink", false], [431, "cmdoption-llvm-objcopy-add-section", false], [431, "cmdoption-llvm-objcopy-add-symbol", false], [431, "cmdoption-llvm-objcopy-allow-broken-links", false], [431, "cmdoption-llvm-objcopy-binary-architecture", false], [431, "cmdoption-llvm-objcopy-build-id-link-dir", false], [431, "cmdoption-llvm-objcopy-build-id-link-input", false], [431, "cmdoption-llvm-objcopy-build-id-link-output", false], [431, "cmdoption-llvm-objcopy-change-start", false], [431, "cmdoption-llvm-objcopy-compress-debug-sections", false], [431, "cmdoption-llvm-objcopy-decompress-debug-sections", false], [431, "cmdoption-llvm-objcopy-disable-deterministic-archives", false], [431, "cmdoption-llvm-objcopy-discard-all", false], [431, "cmdoption-llvm-objcopy-discard-locals", false], [431, "cmdoption-llvm-objcopy-dump-section", false], [431, "cmdoption-llvm-objcopy-enable-deterministic-archives", false], [431, "cmdoption-llvm-objcopy-extract-dwo", false], [431, "cmdoption-llvm-objcopy-extract-main-partition", false], [431, "cmdoption-llvm-objcopy-extract-partition", false], [431, "cmdoption-llvm-objcopy-globalize-symbol", false], [431, "cmdoption-llvm-objcopy-globalize-symbols", false], [431, "cmdoption-llvm-objcopy-help", false], [431, "cmdoption-llvm-objcopy-input-target", false], [431, "cmdoption-llvm-objcopy-keep-file-symbols", false], [431, "cmdoption-llvm-objcopy-keep-global-symbol", false], [431, "cmdoption-llvm-objcopy-keep-global-symbols", false], [431, "cmdoption-llvm-objcopy-keep-section", false], [431, "cmdoption-llvm-objcopy-keep-symbol", false], [431, "cmdoption-llvm-objcopy-keep-symbols", false], [431, "cmdoption-llvm-objcopy-localize-hidden", false], [431, "cmdoption-llvm-objcopy-localize-symbol", false], [431, "cmdoption-llvm-objcopy-localize-symbols", false], [431, "cmdoption-llvm-objcopy-only-keep-debug", false], [431, "cmdoption-llvm-objcopy-only-section", false], [431, "cmdoption-llvm-objcopy-output-target", false], [431, "cmdoption-llvm-objcopy-prefix-alloc-sections", false], [431, "cmdoption-llvm-objcopy-prefix-symbols", false], [431, "cmdoption-llvm-objcopy-preserve-dates", false], [431, "cmdoption-llvm-objcopy-redefine-sym", false], [431, "cmdoption-llvm-objcopy-redefine-syms", false], [431, "cmdoption-llvm-objcopy-regex", false], [431, "cmdoption-llvm-objcopy-remove-section", false], [431, "cmdoption-llvm-objcopy-rename-section", false], [431, "cmdoption-llvm-objcopy-set-section-flags", false], [431, "cmdoption-llvm-objcopy-set-start-addr", false], [431, "cmdoption-llvm-objcopy-split-dwo", false], [431, "cmdoption-llvm-objcopy-strip-all", false], [431, "cmdoption-llvm-objcopy-strip-all-gnu", false], [431, "cmdoption-llvm-objcopy-strip-debug", false], [431, "cmdoption-llvm-objcopy-strip-dwo", false], [431, "cmdoption-llvm-objcopy-strip-non-alloc", false], [431, "cmdoption-llvm-objcopy-strip-sections", false], [431, "cmdoption-llvm-objcopy-strip-symbol", false], [431, "cmdoption-llvm-objcopy-strip-symbols", false], [431, "cmdoption-llvm-objcopy-strip-unneeded", false], [431, "cmdoption-llvm-objcopy-strip-unneeded-symbol", false], [431, "cmdoption-llvm-objcopy-strip-unneeded-symbols", false], [431, "cmdoption-llvm-objcopy-target", false], [431, "cmdoption-llvm-objcopy-version", false], [431, "cmdoption-llvm-objcopy-weaken", false], [431, "cmdoption-llvm-objcopy-weaken-symbol", false], [431, "cmdoption-llvm-objcopy-weaken-symbols", false]], "llvm-objdump \u547d\u4ee4\u5217\u9078\u9805": [[432, "cmdoption-llvm-objdump-C", false], [432, "cmdoption-llvm-objdump-D", false], [432, "cmdoption-llvm-objdump-M", false], [432, "cmdoption-llvm-objdump-R", false], [432, "cmdoption-llvm-objdump-S", false], [432, "cmdoption-llvm-objdump-a", false], [432, "cmdoption-llvm-objdump-adjust-vma", false], [432, "cmdoption-llvm-objdump-arch", false], [432, "cmdoption-llvm-objdump-arch-name", false], [432, "cmdoption-llvm-objdump-archive-member-offsets", false], [432, "cmdoption-llvm-objdump-arg-FILE", false], [432, "cmdoption-llvm-objdump-arg-att", false], [432, "cmdoption-llvm-objdump-arg-intel", false], [432, "cmdoption-llvm-objdump-bind", false], [432, "cmdoption-llvm-objdump-cfg", false], [432, "cmdoption-llvm-objdump-d", false], [432, "cmdoption-llvm-objdump-data-in-code", false], [432, "cmdoption-llvm-objdump-dis-symname", false], [432, "cmdoption-llvm-objdump-disassemble-functions", false], [432, "cmdoption-llvm-objdump-dsym", false], [432, "cmdoption-llvm-objdump-dwarf", false], [432, "cmdoption-llvm-objdump-dylib-id", false], [432, "cmdoption-llvm-objdump-dylibs-used", false], [432, "cmdoption-llvm-objdump-exports-trie", false], [432, "cmdoption-llvm-objdump-f", false], [432, "cmdoption-llvm-objdump-fault-map-section", false], [432, "cmdoption-llvm-objdump-full-leading-addr", false], [432, "cmdoption-llvm-objdump-g", false], [432, "cmdoption-llvm-objdump-h", false], [432, "cmdoption-llvm-objdump-help", false], [432, "cmdoption-llvm-objdump-indirect-symbols", false], [432, "cmdoption-llvm-objdump-info-plist", false], [432, "cmdoption-llvm-objdump-j", false], [432, "cmdoption-llvm-objdump-l", false], [432, "cmdoption-llvm-objdump-lazy-bind", false], [432, "cmdoption-llvm-objdump-link-opt-hints", false], [432, "cmdoption-llvm-objdump-m", false], [432, "cmdoption-llvm-objdump-mattr", false], [432, "cmdoption-llvm-objdump-mcpu", false], [432, "cmdoption-llvm-objdump-no-leading-addr", false], [432, "cmdoption-llvm-objdump-no-leading-headers", false], [432, "cmdoption-llvm-objdump-no-show-raw-insn", false], [432, "cmdoption-llvm-objdump-no-symbolic-operands", false], [432, "cmdoption-llvm-objdump-non-verbose", false], [432, "cmdoption-llvm-objdump-objc-meta-data", false], [432, "cmdoption-llvm-objdump-p", false], [432, "cmdoption-llvm-objdump-print-imm-hex", false], [432, "cmdoption-llvm-objdump-private-header", false], [432, "cmdoption-llvm-objdump-r", false], [432, "cmdoption-llvm-objdump-raw-clang-ast", false], [432, "cmdoption-llvm-objdump-rebase", false], [432, "cmdoption-llvm-objdump-s", false], [432, "cmdoption-llvm-objdump-show-lma", false], [432, "cmdoption-llvm-objdump-start-address", false], [432, "cmdoption-llvm-objdump-stop-address", false], [432, "cmdoption-llvm-objdump-t", false], [432, "cmdoption-llvm-objdump-triple", false], [432, "cmdoption-llvm-objdump-u", false], [432, "cmdoption-llvm-objdump-universal-headers", false], [432, "cmdoption-llvm-objdump-version", false], [432, "cmdoption-llvm-objdump-w", false], [432, "cmdoption-llvm-objdump-weak-bind", false], [432, "cmdoption-llvm-objdump-x", false], [432, "cmdoption-llvm-objdump-x86-asm-syntax", false], [432, "cmdoption-llvm-objdump-z", false]], "llvm-pdbutil-bytes \u547d\u4ee4\u5217\u9078\u9805": [[433, "cmdoption-llvm-pdbutil-bytes-block-range", false], [433, "cmdoption-llvm-pdbutil-bytes-byte-range", false], [433, "cmdoption-llvm-pdbutil-bytes-chunks", false], [433, "cmdoption-llvm-pdbutil-bytes-ec", false], [433, "cmdoption-llvm-pdbutil-bytes-files", false], [433, "cmdoption-llvm-pdbutil-bytes-fpm", false], [433, "cmdoption-llvm-pdbutil-bytes-id", false], [433, "cmdoption-llvm-pdbutil-bytes-mod", false], [433, "cmdoption-llvm-pdbutil-bytes-modi", false], [433, "cmdoption-llvm-pdbutil-bytes-name-map", false], [433, "cmdoption-llvm-pdbutil-bytes-sc", false], [433, "cmdoption-llvm-pdbutil-bytes-sm", false], [433, "cmdoption-llvm-pdbutil-bytes-split-chunks", false], [433, "cmdoption-llvm-pdbutil-bytes-stream-data", false], [433, "cmdoption-llvm-pdbutil-bytes-syms", false], [433, "cmdoption-llvm-pdbutil-bytes-type", false], [433, "cmdoption-llvm-pdbutil-bytes-type-server", false]], "llvm-pdbutil-dump \u547d\u4ee4\u5217\u9078\u9805": [[433, "cmdoption-llvm-pdbutil-dump-all", false], [433, "cmdoption-llvm-pdbutil-dump-dependents", false], [433, "cmdoption-llvm-pdbutil-dump-files", false], [433, "cmdoption-llvm-pdbutil-dump-global-extras", false], [433, "cmdoption-llvm-pdbutil-dump-globals", false], [433, "cmdoption-llvm-pdbutil-dump-id-data", false], [433, "cmdoption-llvm-pdbutil-dump-id-extras", false], [433, "cmdoption-llvm-pdbutil-dump-id-index", false], [433, "cmdoption-llvm-pdbutil-dump-ids", false], [433, "cmdoption-llvm-pdbutil-dump-il", false], [433, "cmdoption-llvm-pdbutil-dump-l", false], [433, "cmdoption-llvm-pdbutil-dump-modi", false], [433, "cmdoption-llvm-pdbutil-dump-modules", false], [433, "cmdoption-llvm-pdbutil-dump-public-extras", false], [433, "cmdoption-llvm-pdbutil-dump-publics", false], [433, "cmdoption-llvm-pdbutil-dump-section-contribs", false], [433, "cmdoption-llvm-pdbutil-dump-section-headers", false], [433, "cmdoption-llvm-pdbutil-dump-section-map", false], [433, "cmdoption-llvm-pdbutil-dump-stream-blocks", false], [433, "cmdoption-llvm-pdbutil-dump-streams", false], [433, "cmdoption-llvm-pdbutil-dump-string-table", false], [433, "cmdoption-llvm-pdbutil-dump-summary", false], [433, "cmdoption-llvm-pdbutil-dump-sym-data", false], [433, "cmdoption-llvm-pdbutil-dump-symbols", false], [433, "cmdoption-llvm-pdbutil-dump-type-data", false], [433, "cmdoption-llvm-pdbutil-dump-type-extras", false], [433, "cmdoption-llvm-pdbutil-dump-type-index", false], [433, "cmdoption-llvm-pdbutil-dump-types", false], [433, "cmdoption-llvm-pdbutil-dump-xme", false], [433, "cmdoption-llvm-pdbutil-dump-xmi", false]], "llvm-pdbutil-merge \u547d\u4ee4\u5217\u9078\u9805": [[433, "cmdoption-llvm-pdbutil-merge-pdb", false]], "llvm-pdbutil-pretty \u547d\u4ee4\u5217\u9078\u9805": [[433, "cmdoption-llvm-pdbutil-pretty-all", false], [433, "cmdoption-llvm-pdbutil-pretty-class-definitions", false], [433, "cmdoption-llvm-pdbutil-pretty-class-order", false], [433, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", false], [433, "cmdoption-llvm-pdbutil-pretty-classes", false], [433, "cmdoption-llvm-pdbutil-pretty-color-output", false], [433, "cmdoption-llvm-pdbutil-pretty-compilands", false], [433, "cmdoption-llvm-pdbutil-pretty-enums", false], [433, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", false], [433, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", false], [433, "cmdoption-llvm-pdbutil-pretty-exclude-types", false], [433, "cmdoption-llvm-pdbutil-pretty-externals", false], [433, "cmdoption-llvm-pdbutil-pretty-globals", false], [433, "cmdoption-llvm-pdbutil-pretty-include-compilands", false], [433, "cmdoption-llvm-pdbutil-pretty-include-symbols", false], [433, "cmdoption-llvm-pdbutil-pretty-include-types", false], [433, "cmdoption-llvm-pdbutil-pretty-lines", false], [433, "cmdoption-llvm-pdbutil-pretty-load-address", false], [433, "cmdoption-llvm-pdbutil-pretty-min-class-padding", false], [433, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", false], [433, "cmdoption-llvm-pdbutil-pretty-min-type-size", false], [433, "cmdoption-llvm-pdbutil-pretty-module-syms", false], [433, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", false], [433, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", false], [433, "cmdoption-llvm-pdbutil-pretty-no-system-libs", false], [433, "cmdoption-llvm-pdbutil-pretty-sym-types", false], [433, "cmdoption-llvm-pdbutil-pretty-symbol-order", false], [433, "cmdoption-llvm-pdbutil-pretty-typedefs", false], [433, "cmdoption-llvm-pdbutil-pretty-types", false]], "llvm-pdbutil-yaml2pdb \u547d\u4ee4\u5217\u9078\u9805": [[433, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", false]], "llvm-profdata-merge \u547d\u4ee4\u5217\u9078\u9805": [[434, "cmdoption-llvm-profdata-merge-binary", false], [434, "cmdoption-llvm-profdata-merge-gcc", false], [434, "cmdoption-llvm-profdata-merge-help", false], [434, "cmdoption-llvm-profdata-merge-input-files", false], [434, "cmdoption-llvm-profdata-merge-instr", false], [434, "cmdoption-llvm-profdata-merge-num-threads", false], [434, "cmdoption-llvm-profdata-merge-output", false], [434, "cmdoption-llvm-profdata-merge-remapping-file", false], [434, "cmdoption-llvm-profdata-merge-sample", false], [434, "cmdoption-llvm-profdata-merge-sparse", false], [434, "cmdoption-llvm-profdata-merge-text", false], [434, "cmdoption-llvm-profdata-merge-weighted-input", false]], "llvm-profdata-overlap \u547d\u4ee4\u5217\u9078\u9805": [[434, "cmdoption-llvm-profdata-overlap-cs", false], [434, "cmdoption-llvm-profdata-overlap-function", false], [434, "cmdoption-llvm-profdata-overlap-help", false], [434, "cmdoption-llvm-profdata-overlap-o", false], [434, "cmdoption-llvm-profdata-overlap-value-cutoff", false]], "llvm-profdata-show \u547d\u4ee4\u5217\u9078\u9805": [[434, "cmdoption-llvm-profdata-show-all-functions", false], [434, "cmdoption-llvm-profdata-show-counts", false], [434, "cmdoption-llvm-profdata-show-function", false], [434, "cmdoption-llvm-profdata-show-help", false], [434, "cmdoption-llvm-profdata-show-instr", false], [434, "cmdoption-llvm-profdata-show-list-below-cutoff", false], [434, "cmdoption-llvm-profdata-show-memop-sizes", false], [434, "cmdoption-llvm-profdata-show-output", false], [434, "cmdoption-llvm-profdata-show-sample", false], [434, "cmdoption-llvm-profdata-show-showcs", false], [434, "cmdoption-llvm-profdata-show-text", false], [434, "cmdoption-llvm-profdata-show-topn", false], [434, "cmdoption-llvm-profdata-show-value-cutoff", false]], "llvm-readelf \u547d\u4ee4\u5217\u9078\u9805": [[436, "cmdoption-llvm-readelf-addrsig", false], [436, "cmdoption-llvm-readelf-all", false], [436, "cmdoption-llvm-readelf-arg-FILE", false], [436, "cmdoption-llvm-readelf-arm-attributes", false], [436, "cmdoption-llvm-readelf-color", false], [436, "cmdoption-llvm-readelf-demangle", false], [436, "cmdoption-llvm-readelf-dyn-relocations", false], [436, "cmdoption-llvm-readelf-dyn-symbols", false], [436, "cmdoption-llvm-readelf-dynamic-table", false], [436, "cmdoption-llvm-readelf-elf-cg-profile", false], [436, "cmdoption-llvm-readelf-elf-hash-histogram", false], [436, "cmdoption-llvm-readelf-elf-linker-options", false], [436, "cmdoption-llvm-readelf-elf-output-style", false], [436, "cmdoption-llvm-readelf-elf-section-groups", false], [436, "cmdoption-llvm-readelf-expand-relocs", false], [436, "cmdoption-llvm-readelf-file-headers", false], [436, "cmdoption-llvm-readelf-gnu-hash-table", false], [436, "cmdoption-llvm-readelf-hash-symbols", false], [436, "cmdoption-llvm-readelf-hash-table", false], [436, "cmdoption-llvm-readelf-headers", false], [436, "cmdoption-llvm-readelf-help", false], [436, "cmdoption-llvm-readelf-help-list", false], [436, "cmdoption-llvm-readelf-hex-dump", false], [436, "cmdoption-llvm-readelf-needed-libs", false], [436, "cmdoption-llvm-readelf-notes", false], [436, "cmdoption-llvm-readelf-program-headers", false], [436, "cmdoption-llvm-readelf-raw-relr", false], [436, "cmdoption-llvm-readelf-relocations", false], [436, "cmdoption-llvm-readelf-section-data", false], [436, "cmdoption-llvm-readelf-section-mapping", false], [436, "cmdoption-llvm-readelf-section-relocations", false], [436, "cmdoption-llvm-readelf-section-symbols", false], [436, "cmdoption-llvm-readelf-sections", false], [436, "cmdoption-llvm-readelf-stackmap", false], [436, "cmdoption-llvm-readelf-string-dump", false], [436, "cmdoption-llvm-readelf-symbols", false], [436, "cmdoption-llvm-readelf-unwind", false], [436, "cmdoption-llvm-readelf-version", false], [436, "cmdoption-llvm-readelf-version-info", false]], "llvm-readobj \u547d\u4ee4\u5217\u9078\u9805": [[437, "cmdoption-llvm-readobj-addrsig", false], [437, "cmdoption-llvm-readobj-all", false], [437, "cmdoption-llvm-readobj-arg-FILE", false], [437, "cmdoption-llvm-readobj-arm-attributes", false], [437, "cmdoption-llvm-readobj-codeview", false], [437, "cmdoption-llvm-readobj-codeview-ghash", false], [437, "cmdoption-llvm-readobj-codeview-merged-types", false], [437, "cmdoption-llvm-readobj-codeview-subsection-bytes", false], [437, "cmdoption-llvm-readobj-coff-basereloc", false], [437, "cmdoption-llvm-readobj-coff-debug-directory", false], [437, "cmdoption-llvm-readobj-coff-directives", false], [437, "cmdoption-llvm-readobj-coff-exports", false], [437, "cmdoption-llvm-readobj-coff-imports", false], [437, "cmdoption-llvm-readobj-coff-load-config", false], [437, "cmdoption-llvm-readobj-coff-resources", false], [437, "cmdoption-llvm-readobj-color", false], [437, "cmdoption-llvm-readobj-demangle", false], [437, "cmdoption-llvm-readobj-dyn-relocations", false], [437, "cmdoption-llvm-readobj-dyn-symbols", false], [437, "cmdoption-llvm-readobj-dynamic-table", false], [437, "cmdoption-llvm-readobj-elf-cg-profile", false], [437, "cmdoption-llvm-readobj-elf-hash-histogram", false], [437, "cmdoption-llvm-readobj-elf-linker-options", false], [437, "cmdoption-llvm-readobj-elf-output-style", false], [437, "cmdoption-llvm-readobj-elf-section-groups", false], [437, "cmdoption-llvm-readobj-expand-relocs", false], [437, "cmdoption-llvm-readobj-file-headers", false], [437, "cmdoption-llvm-readobj-gnu-hash-table", false], [437, "cmdoption-llvm-readobj-hash-symbols", false], [437, "cmdoption-llvm-readobj-hash-table", false], [437, "cmdoption-llvm-readobj-headers", false], [437, "cmdoption-llvm-readobj-help", false], [437, "cmdoption-llvm-readobj-help-list", false], [437, "cmdoption-llvm-readobj-hex-dump", false], [437, "cmdoption-llvm-readobj-macho-data-in-code", false], [437, "cmdoption-llvm-readobj-macho-dsymtab", false], [437, "cmdoption-llvm-readobj-macho-indirect-symbols", false], [437, "cmdoption-llvm-readobj-macho-linker-options", false], [437, "cmdoption-llvm-readobj-macho-segment", false], [437, "cmdoption-llvm-readobj-macho-version-min", false], [437, "cmdoption-llvm-readobj-needed-libs", false], [437, "cmdoption-llvm-readobj-notes", false], [437, "cmdoption-llvm-readobj-program-headers", false], [437, "cmdoption-llvm-readobj-raw-relr", false], [437, "cmdoption-llvm-readobj-relocations", false], [437, "cmdoption-llvm-readobj-section-data", false], [437, "cmdoption-llvm-readobj-section-mapping", false], [437, "cmdoption-llvm-readobj-section-relocations", false], [437, "cmdoption-llvm-readobj-section-symbols", false], [437, "cmdoption-llvm-readobj-sections", false], [437, "cmdoption-llvm-readobj-stackmap", false], [437, "cmdoption-llvm-readobj-string-dump", false], [437, "cmdoption-llvm-readobj-symbols", false], [437, "cmdoption-llvm-readobj-unwind", false], [437, "cmdoption-llvm-readobj-version", false], [437, "cmdoption-llvm-readobj-version-info", false]], "llvm-stress \u547d\u4ee4\u5217\u9078\u9805": [[439, "cmdoption-llvm-stress-o", false], [439, "cmdoption-llvm-stress-seed", false], [439, "cmdoption-llvm-stress-size", false]], "llvm-symbolizer \u547d\u4ee4\u5217\u9078\u9805": [[442, "cmdoption-llvm-symbolizer-adjust-vma", false], [442, "cmdoption-llvm-symbolizer-arg-FILE", false], [442, "cmdoption-llvm-symbolizer-basenames", false], [442, "cmdoption-llvm-symbolizer-default-arch", false], [442, "cmdoption-llvm-symbolizer-demangle", false], [442, "cmdoption-llvm-symbolizer-dsym-hint", false], [442, "cmdoption-llvm-symbolizer-dwp", false], [442, "cmdoption-llvm-symbolizer-fallback-debug-path", false], [442, "cmdoption-llvm-symbolizer-functions", false], [442, "cmdoption-llvm-symbolizer-help", false], [442, "cmdoption-llvm-symbolizer-help-list", false], [442, "cmdoption-llvm-symbolizer-inlining", false], [442, "cmdoption-llvm-symbolizer-no-demangle", false], [442, "cmdoption-llvm-symbolizer-obj", false], [442, "cmdoption-llvm-symbolizer-output-style", false], [442, "cmdoption-llvm-symbolizer-pretty-print", false], [442, "cmdoption-llvm-symbolizer-print-address", false], [442, "cmdoption-llvm-symbolizer-print-source-context-lines", false], [442, "cmdoption-llvm-symbolizer-use-symbol-table", false], [442, "cmdoption-llvm-symbolizer-verbose", false], [442, "cmdoption-llvm-symbolizer-version", false]], "opt \u547d\u4ee4\u5217\u9078\u9805": [[443, "cmdoption-opt-S", false], [443, "cmdoption-opt-debug", false], [443, "cmdoption-opt-disable-inlining", false], [443, "cmdoption-opt-disable-opt", false], [443, "cmdoption-opt-f", false], [443, "cmdoption-opt-help", false], [443, "cmdoption-opt-load", false], [443, "cmdoption-opt-o", false], [443, "cmdoption-opt-p", false], [443, "cmdoption-opt-passname", false], [443, "cmdoption-opt-stats", false], [443, "cmdoption-opt-strip-debug", false], [443, "cmdoption-opt-time-passes", false], [443, "cmdoption-opt-verify-each", false]], "tblgen \u547d\u4ee4\u5217\u9078\u9805": [[444, "cmdoption-tblgen-I", false], [444, "cmdoption-tblgen-asmparsernum", false], [444, "cmdoption-tblgen-asmwriternum", false], [444, "cmdoption-tblgen-class", false], [444, "cmdoption-tblgen-dump-json", false], [444, "cmdoption-tblgen-gen-asm-matcher", false], [444, "cmdoption-tblgen-gen-asm-writer", false], [444, "cmdoption-tblgen-gen-dag-isel", false], [444, "cmdoption-tblgen-gen-dfa-packetizer", false], [444, "cmdoption-tblgen-gen-disassembler", false], [444, "cmdoption-tblgen-gen-emitter", false], [444, "cmdoption-tblgen-gen-enhanced-disassembly-info", false], [444, "cmdoption-tblgen-gen-exegesis", false], [444, "cmdoption-tblgen-gen-fast-isel", false], [444, "cmdoption-tblgen-gen-instr-info", false], [444, "cmdoption-tblgen-gen-intrinsic-enums", false], [444, "cmdoption-tblgen-gen-intrinsic-impl", false], [444, "cmdoption-tblgen-gen-pseudo-lowering", false], [444, "cmdoption-tblgen-gen-register-info", false], [444, "cmdoption-tblgen-gen-subtarget", false], [444, "cmdoption-tblgen-gen-tgt-intrinsic", false], [444, "cmdoption-tblgen-help", false], [444, "cmdoption-tblgen-o", false], [444, "cmdoption-tblgen-print-enums", false], [444, "cmdoption-tblgen-print-records", false], [444, "cmdoption-tblgen-print-sets", false], [444, "cmdoption-tblgen-version", false]], "\u547d\u4ee4\u5217\u9078\u9805": [[515, "cmdoption-lto-pass-remarks-filter", false], [515, "cmdoption-lto-pass-remarks-format", false], [515, "cmdoption-lto-pass-remarks-hotness-threshold", false], [515, "cmdoption-lto-pass-remarks-output", false], [515, "cmdoption-lto-pass-remarks-with-hotness", false], [515, "cmdoption-opt-remarks-filename", false], [515, "cmdoption-opt-remarks-filter", false], [515, "cmdoption-opt-remarks-format", false], [515, "cmdoption-opt-remarks-with-hotness", false], [515, "cmdoption-pass-remarks", false], [515, "cmdoption-pass-remarks-analysis", false], [515, "cmdoption-pass-remarks-filter", false], [515, "cmdoption-pass-remarks-format", false], [515, "cmdoption-pass-remarks-hotness-threshold", false], [515, "cmdoption-pass-remarks-missed", false], [515, "cmdoption-pass-remarks-output", false], [515, "cmdoption-pass-remarks-with-hotness", false]]}, "objects": {"": [[515, 0, 1, "cmdoption-lto-pass-remarks-filter", "-lto-pass-remarks-filter"], [515, 0, 1, "cmdoption-lto-pass-remarks-format", "-lto-pass-remarks-format"], [515, 0, 1, "cmdoption-lto-pass-remarks-hotness-threshold", "-lto-pass-remarks-hotness-threshold"], [515, 0, 1, "cmdoption-lto-pass-remarks-output", "-lto-pass-remarks-output"], [515, 0, 1, "cmdoption-lto-pass-remarks-with-hotness", "-lto-pass-remarks-with-hotness"], [515, 0, 1, "cmdoption-opt-remarks-filename", "-opt-remarks-filename"], [515, 0, 1, "cmdoption-opt-remarks-filter", "-opt-remarks-filter"], [515, 0, 1, "cmdoption-opt-remarks-format", "-opt-remarks-format"], [515, 0, 1, "cmdoption-opt-remarks-with-hotness", "-opt-remarks-with-hotness"], [515, 0, 1, "cmdoption-pass-remarks", "-pass-remarks"], [515, 0, 1, "cmdoption-pass-remarks-analysis", "-pass-remarks-analysis"], [515, 0, 1, "cmdoption-pass-remarks-filter", "-pass-remarks-filter"], [515, 0, 1, "cmdoption-pass-remarks-format", "-pass-remarks-format"], [515, 0, 1, "cmdoption-pass-remarks-hotness-threshold", "-pass-remarks-hotness-threshold"], [515, 0, 1, "cmdoption-pass-remarks-missed", "-pass-remarks-missed"], [515, 0, 1, "cmdoption-pass-remarks-output", "-pass-remarks-output"], [515, 0, 1, "cmdoption-pass-remarks-with-hotness", "-pass-remarks-with-hotness"]], "FileCheck": [[405, 0, 1, "cmdoption-FileCheck-allow-deprecated-dag-overlap", "--allow-deprecated-dag-overlap"], [405, 0, 1, "cmdoption-FileCheck-check-prefix", "--check-prefix"], [405, 0, 1, "cmdoption-FileCheck-check-prefixes", "--check-prefixes"], [405, 0, 1, "cmdoption-FileCheck-color", "--color"], [405, 0, 1, "cmdoption-FileCheck-dump-input", "--dump-input"], [405, 0, 1, "cmdoption-FileCheck-dump-input-on-failure", "--dump-input-on-failure"], [405, 0, 1, "cmdoption-FileCheck-enable-var-scope", "--enable-var-scope"], [405, 0, 1, "cmdoption-FileCheck-implicit-check-not", "--implicit-check-not"], [405, 0, 1, "cmdoption-FileCheck-input-file", "--input-file"], [405, 0, 1, "cmdoption-FileCheck-match-full-lines", "--match-full-lines"], [405, 0, 1, "cmdoption-FileCheck-strict-whitespace", "--strict-whitespace"], [405, 0, 1, "cmdoption-FileCheck-D-NUMVAR", "-D#&lt;NUMVAR&gt;"], [405, 0, 1, "cmdoption-FileCheck-D-VAR", "-D&lt;VAR"], [405, 0, 1, "cmdoption-FileCheck-help", "-help"], [405, 0, 1, "cmdoption-FileCheck-v", "-v"], [405, 0, 1, "cmdoption-FileCheck-version", "-version"], [405, 0, 1, "cmdoption-FileCheck-vv", "-vv"]], "dsymutil": [[407, 0, 1, "cmdoption-dsymutil-arch", "--arch"], [407, 0, 1, "cmdoption-dsymutil-dump-debug-map", "--dump-debug-map"], [407, 0, 1, "cmdoption-dsymutil-f", "--flat"], [407, 0, 1, "cmdoption-dsymutil-z", "--minimize"], [407, 0, 1, "cmdoption-dsymutil-no-odr", "--no-odr"], [407, 0, 1, "cmdoption-dsymutil-no-output", "--no-output"], [407, 0, 1, "cmdoption-dsymutil-no-swiftmodule-timestamp", "--no-swiftmodule-timestamp"], [407, 0, 1, "cmdoption-dsymutil-j", "--num-threads"], [407, 0, 1, "cmdoption-dsymutil-oso-prepend-path", "--oso-prepend-path"], [407, 0, 1, "cmdoption-dsymutil-papertrail", "--papertrail"], [407, 0, 1, "cmdoption-dsymutil-s", "--symtab"], [407, 0, 1, "cmdoption-dsymutil-toolchain", "--toolchain"], [407, 0, 1, "cmdoption-dsymutil-u", "--update"], [407, 0, 1, "cmdoption-dsymutil-v", "--verbose"], [407, 0, 1, "cmdoption-dsymutil-version", "--version"], [407, 0, 1, "cmdoption-dsymutil-f", "-f"], [407, 0, 1, "cmdoption-dsymutil-j", "-j"], [407, 0, 1, "cmdoption-dsymutil-o", "-o"], [407, 0, 1, "cmdoption-dsymutil-s", "-s"], [407, 0, 1, "cmdoption-dsymutil-u", "-u"], [407, 0, 1, "cmdoption-dsymutil-v", "-v"], [407, 0, 1, "cmdoption-dsymutil-y", "-y"], [407, 0, 1, "cmdoption-dsymutil-z", "-z"]], "lit": [[409, 0, 1, "cmdoption-lit-config-prefix", "--config-prefix"], [409, 0, 1, "cmdoption-lit-debug", "--debug"], [409, 0, 1, "cmdoption-lit-vv", "--echo-all-commands"], [409, 0, 1, "cmdoption-lit-filter", "--filter"], [409, 0, 1, "cmdoption-lit-h", "--help"], [409, 0, 1, "cmdoption-lit-max-tests", "--max-tests"], [409, 0, 1, "cmdoption-lit-max-time", "--max-time"], [409, 0, 1, "cmdoption-lit-no-progress-bar", "--no-progress-bar"], [409, 0, 1, "cmdoption-lit-num-shards", "--num-shards"], [409, 0, 1, "cmdoption-lit-D", "--param"], [409, 0, 1, "cmdoption-lit-path", "--path"], [409, 0, 1, "cmdoption-lit-q", "--quiet"], [409, 0, 1, "cmdoption-lit-run-shard", "--run-shard"], [409, 0, 1, "cmdoption-lit-a", "--show-all"], [409, 0, 1, "cmdoption-lit-show-suites", "--show-suites"], [409, 0, 1, "cmdoption-lit-show-tests", "--show-tests"], [409, 0, 1, "cmdoption-lit-show-unsupported", "--show-unsupported"], [409, 0, 1, "cmdoption-lit-show-xfail", "--show-xfail"], [409, 0, 1, "cmdoption-lit-shuffle", "--shuffle"], [409, 0, 1, "cmdoption-lit-s", "--succinct"], [409, 0, 1, "cmdoption-lit-j", "--threads"], [409, 0, 1, "cmdoption-lit-time-tests", "--time-tests"], [409, 0, 1, "cmdoption-lit-v", "--verbose"], [409, 0, 1, "cmdoption-lit-vg", "--vg"], [409, 0, 1, "cmdoption-lit-vg-arg", "--vg-arg"], [409, 0, 1, "cmdoption-lit-vg-leak", "--vg-leak"], [409, 0, 1, "cmdoption-lit-D", "-D"], [409, 0, 1, "cmdoption-lit-a", "-a"], [409, 0, 1, "cmdoption-lit-h", "-h"], [409, 0, 1, "cmdoption-lit-j", "-j"], [409, 0, 1, "cmdoption-lit-q", "-q"], [409, 0, 1, "cmdoption-lit-s", "-s"], [409, 0, 1, "cmdoption-lit-v", "-v"], [409, 0, 1, "cmdoption-lit-vv", "-vv"]], "llc": [[410, 0, 1, "cmdoption-llc-disable-excess-fp-precision", "--disable-excess-fp-precision"], [410, 0, 1, "cmdoption-llc-enable-no-infs-fp-math", "--enable-no-infs-fp-math"], [410, 0, 1, "cmdoption-llc-enable-no-nans-fp-math", "--enable-no-nans-fp-math"], [410, 0, 1, "cmdoption-llc-enable-unsafe-fp-math", "--enable-unsafe-fp-math"], [410, 0, 1, "cmdoption-llc-frame-pointer", "--frame-pointer"], [410, 0, 1, "cmdoption-llc-load", "--load"], [410, 0, 1, "cmdoption-llc-print-machineinstrs", "--print-machineinstrs"], [410, 0, 1, "cmdoption-llc-regalloc", "--regalloc"], [410, 0, 1, "cmdoption-llc-spiller", "--spiller"], [410, 0, 1, "cmdoption-llc-stats", "--stats"], [410, 0, 1, "cmdoption-llc-time-passes", "--time-passes"], [410, 0, 1, "cmdoption-llc-x86-asm-syntax", "--x86-asm-syntax"], [410, 0, 1, "cmdoption-llc-O", "-O"], [410, 0, 1, "cmdoption-llc-filetype", "-filetype"], [410, 0, 1, "cmdoption-llc-help", "-help"], [410, 0, 1, "cmdoption-llc-march", "-march"], [410, 0, 1, "cmdoption-llc-mattr", "-mattr"], [410, 0, 1, "cmdoption-llc-mcpu", "-mcpu"], [410, 0, 1, "cmdoption-llc-meabi", "-meabi"], [410, 0, 1, "cmdoption-llc-mtriple", "-mtriple"], [410, 0, 1, "cmdoption-llc-o", "-o"], [410, 0, 1, "cmdoption-llc-remarks-section", "-remarks-section"], [410, 0, 1, "cmdoption-llc-stack-size-section", "-stack-size-section"]], "lli": [[411, 0, 1, "cmdoption-lli-code-model", "-code-model"], [411, 0, 1, "cmdoption-lli-disable-excess-fp-precision", "-disable-excess-fp-precision"], [411, 0, 1, "cmdoption-lli-disable-post-RA-scheduler", "-disable-post-RA-scheduler"], [411, 0, 1, "cmdoption-lli-disable-spill-fusing", "-disable-spill-fusing"], [411, 0, 1, "cmdoption-lli-enable-no-infs-fp-math", "-enable-no-infs-fp-math"], [411, 0, 1, "cmdoption-lli-enable-no-nans-fp-math", "-enable-no-nans-fp-math"], [411, 0, 1, "cmdoption-lli-enable-unsafe-fp-math", "-enable-unsafe-fp-math"], [411, 0, 1, "cmdoption-lli-fake-argv0", "-fake-argv0"], [411, 0, 1, "cmdoption-lli-force-interpreter", "-force-interpreter"], [411, 0, 1, "cmdoption-lli-help", "-help"], [411, 0, 1, "cmdoption-lli-jit-enable-eh", "-jit-enable-eh"], [411, 0, 1, "cmdoption-lli-join-liveintervals", "-join-liveintervals"], [411, 0, 1, "cmdoption-lli-load", "-load"], [411, 0, 1, "cmdoption-lli-march", "-march"], [411, 0, 1, "cmdoption-lli-mattr", "-mattr"], [411, 0, 1, "cmdoption-lli-mcpu", "-mcpu"], [411, 0, 1, "cmdoption-lli-mtriple", "-mtriple"], [411, 0, 1, "cmdoption-lli-nozero-initialized-in-bss", "-nozero-initialized-in-bss"], [411, 0, 1, "cmdoption-lli-pre-RA-sched", "-pre-RA-sched"], [411, 0, 1, "cmdoption-lli-regalloc", "-regalloc"], [411, 0, 1, "cmdoption-lli-relocation-model", "-relocation-model"], [411, 0, 1, "cmdoption-lli-soft-float", "-soft-float"], [411, 0, 1, "cmdoption-lli-spiller", "-spiller"], [411, 0, 1, "cmdoption-lli-stats", "-stats"], [411, 0, 1, "cmdoption-lli-time-passes", "-time-passes"], [411, 0, 1, "cmdoption-lli-version", "-version"], [411, 0, 1, "cmdoption-lli-x86-asm-syntax", "-x86-asm-syntax"]], "llvm-bcanalyzer": [[415, 0, 1, "cmdoption-llvm-bcanalyzer-dump", "-dump"], [415, 0, 1, "cmdoption-llvm-bcanalyzer-help", "-help"], [415, 0, 1, "cmdoption-llvm-bcanalyzer-nodetails", "-nodetails"], [415, 0, 1, "cmdoption-llvm-bcanalyzer-verify", "-verify"]], "llvm-cov-export": [[418, 0, 1, "cmdoption-llvm-cov-export-arch", "-arch"], [418, 0, 1, "cmdoption-llvm-cov-export-format", "-format"], [418, 0, 1, "cmdoption-llvm-cov-export-ignore-filename-regex", "-ignore-filename-regex"], [418, 0, 1, "cmdoption-llvm-cov-export-num-threads", "-j"], [418, 0, 1, "cmdoption-llvm-cov-export-num-threads", "-num-threads"], [418, 0, 1, "cmdoption-llvm-cov-export-skip-expansions", "-skip-expansions"], [418, 0, 1, "cmdoption-llvm-cov-export-skip-functions", "-skip-functions"], [418, 0, 1, "cmdoption-llvm-cov-export-summary-only", "-summary-only"]], "llvm-cov-gcov": [[418, 0, 1, "cmdoption-llvm-cov-gcov-a", "--all-blocks"], [418, 0, 1, "cmdoption-llvm-cov-gcov-c", "--branch-counts"], [418, 0, 1, "cmdoption-llvm-cov-gcov-b", "--branch-probabilities"], [418, 0, 1, "cmdoption-llvm-cov-gcov-f", "--function-summaries"], [418, 0, 1, "cmdoption-llvm-cov-gcov-x", "--hash-filenames"], [418, 0, 1, "cmdoption-llvm-cov-gcov-help", "--help"], [418, 0, 1, "cmdoption-llvm-cov-gcov-l", "--long-file-names"], [418, 0, 1, "cmdoption-llvm-cov-gcov-n", "--no-output"], [418, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-directory"], [418, 0, 1, "cmdoption-llvm-cov-gcov-o", "--object-file"], [418, 0, 1, "cmdoption-llvm-cov-gcov-p", "--preserve-paths"], [418, 0, 1, "cmdoption-llvm-cov-gcov-u", "--unconditional-branches"], [418, 0, 1, "cmdoption-llvm-cov-gcov-a", "-a"], [418, 0, 1, "cmdoption-llvm-cov-gcov-b", "-b"], [418, 0, 1, "cmdoption-llvm-cov-gcov-c", "-c"], [418, 0, 1, "cmdoption-llvm-cov-gcov-f", "-f"], [418, 0, 1, "cmdoption-llvm-cov-gcov-l", "-l"], [418, 0, 1, "cmdoption-llvm-cov-gcov-n", "-n"], [418, 0, 1, "cmdoption-llvm-cov-gcov-o", "-o"], [418, 0, 1, "cmdoption-llvm-cov-gcov-p", "-p"], [418, 0, 1, "cmdoption-llvm-cov-gcov-u", "-u"], [418, 0, 1, "cmdoption-llvm-cov-gcov-version", "-version"], [418, 0, 1, "cmdoption-llvm-cov-gcov-x", "-x"]], "llvm-cov-report": [[418, 0, 1, "cmdoption-llvm-cov-report-arch", "-arch"], [418, 0, 1, "cmdoption-llvm-cov-report-ignore-filename-regex", "-ignore-filename-regex"], [418, 0, 1, "cmdoption-llvm-cov-report-show-functions", "-show-functions"], [418, 0, 1, "cmdoption-llvm-cov-report-show-instantiation-summary", "-show-instantiation-summary"], [418, 0, 1, "cmdoption-llvm-cov-report-use-color", "-use-color"]], "llvm-cov-show": [[418, 0, 1, "cmdoption-llvm-cov-show-Xdemangler", "-Xdemangler"], [418, 0, 1, "cmdoption-llvm-cov-show-arch", "-arch"], [418, 0, 1, "cmdoption-llvm-cov-show-format", "-format"], [418, 0, 1, "cmdoption-llvm-cov-show-ignore-filename-regex", "-ignore-filename-regex"], [418, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-j"], [418, 0, 1, "cmdoption-llvm-cov-show-line-coverage-gt", "-line-coverage-gt"], [418, 0, 1, "cmdoption-llvm-cov-show-line-coverage-lt", "-line-coverage-lt"], [418, 0, 1, "cmdoption-llvm-cov-show-name", "-name"], [418, 0, 1, "cmdoption-llvm-cov-show-name-regex", "-name-regex"], [418, 0, 1, "cmdoption-llvm-cov-show-name-whitelist", "-name-whitelist"], [418, 0, 1, "cmdoption-llvm-cov-show-num-threads", "-num-threads"], [418, 0, 1, "cmdoption-llvm-cov-show-output-dir", "-output-dir"], [418, 0, 1, "cmdoption-llvm-cov-show-path-equivalence", "-path-equivalence"], [418, 0, 1, "cmdoption-llvm-cov-show-region-coverage-gt", "-region-coverage-gt"], [418, 0, 1, "cmdoption-llvm-cov-show-region-coverage-lt", "-region-coverage-lt"], [418, 0, 1, "cmdoption-llvm-cov-show-show-expansions", "-show-expansions"], [418, 0, 1, "cmdoption-llvm-cov-show-show-instantiations", "-show-instantiations"], [418, 0, 1, "cmdoption-llvm-cov-show-show-line-counts", "-show-line-counts"], [418, 0, 1, "cmdoption-llvm-cov-show-show-line-counts-or-regions", "-show-line-counts-or-regions"], [418, 0, 1, "cmdoption-llvm-cov-show-show-regions", "-show-regions"], [418, 0, 1, "cmdoption-llvm-cov-show-tab-size", "-tab-size"], [418, 0, 1, "cmdoption-llvm-cov-show-use-color", "-use-color"]], "llvm-cxxfilt": [[419, 0, 1, "cmdoption-llvm-cxxfilt-format", "--format"], [419, 0, 1, "cmdoption-llvm-cxxfilt-help", "--help"], [419, 0, 1, "cmdoption-llvm-cxxfilt-help-list", "--help-list"], [419, 0, 1, "cmdoption-llvm-cxxfilt-strip-underscore", "--strip-underscore"], [419, 0, 1, "cmdoption-llvm-cxxfilt-types", "--types"], [419, 0, 1, "cmdoption-llvm-cxxfilt-version", "--version"], [419, 0, 1, "cmdoption-llvm-cxxfilt-strip-underscore", "-_"], [419, 0, 1, "cmdoption-llvm-cxxfilt-help", "-h"], [419, 0, 1, "cmdoption-llvm-cxxfilt-format", "-s"], [419, 0, 1, "cmdoption-llvm-cxxfilt-types", "-t"], [419, 0, 1, "cmdoption-llvm-cxxfilt-arg-FILE", "@&lt;FILE&gt;"]], "llvm-cxxmap": [[420, 0, 1, "cmdoption-llvm-cxxmap-Wambiguous", "-Wambiguous"], [420, 0, 1, "cmdoption-llvm-cxxmap-Wincomplete", "-Wincomplete"], [420, 0, 1, "cmdoption-llvm-cxxmap-output", "-o"], [420, 0, 1, "cmdoption-llvm-cxxmap-output", "-output"], [420, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-r"], [420, 0, 1, "cmdoption-llvm-cxxmap-remapping-file", "-remapping-file"]], "llvm-dwarfdump": [[423, 0, 1, "cmdoption-llvm-dwarfdump-a", "--all"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-names"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-namespaces"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-objc"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--apple-types"], [423, 0, 1, "cmdoption-llvm-dwarfdump-arch", "--arch"], [423, 0, 1, "cmdoption-llvm-dwarfdump-color", "--color"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-abbrev"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-addr"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-aranges"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-cu-index"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-frame"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-gnu-pubnames"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-gnu-pubtypes"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-info"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-line"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-line-str"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-loc"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-loclists"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-macro"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-names"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-pubnames"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-pubtypes"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-ranges"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-rnglists"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-str"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-str-offsets"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-tu-index"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--debug-types"], [423, 0, 1, "cmdoption-llvm-dwarfdump-diff", "--diff"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--eh-frame"], [423, 0, 1, "cmdoption-llvm-dwarfdump-f", "--find"], [423, 0, 1, "cmdoption-llvm-dwarfdump-debug-abbrev", "--gdb-index"], [423, 0, 1, "cmdoption-llvm-dwarfdump-h", "--help"], [423, 0, 1, "cmdoption-llvm-dwarfdump-help-list", "--help-list"], [423, 0, 1, "cmdoption-llvm-dwarfdump-i", "--ignore-case"], [423, 0, 1, "cmdoption-llvm-dwarfdump-lookup", "--lookup"], [423, 0, 1, "cmdoption-llvm-dwarfdump-n", "--name"], [423, 0, 1, "cmdoption-llvm-dwarfdump-parent-recurse-depth", "--parent-recurse-depth"], [423, 0, 1, "cmdoption-llvm-dwarfdump-quiet", "--quiet"], [423, 0, 1, "cmdoption-llvm-dwarfdump-r", "--recurse-depth"], [423, 0, 1, "cmdoption-llvm-dwarfdump-x", "--regex"], [423, 0, 1, "cmdoption-llvm-dwarfdump-c", "--show-children"], [423, 0, 1, "cmdoption-llvm-dwarfdump-F", "--show-form"], [423, 0, 1, "cmdoption-llvm-dwarfdump-p", "--show-parents"], [423, 0, 1, "cmdoption-llvm-dwarfdump-statistics", "--statistics"], [423, 0, 1, "cmdoption-llvm-dwarfdump-summarize-types", "--summarize-types"], [423, 0, 1, "cmdoption-llvm-dwarfdump-u", "--uuid"], [423, 0, 1, "cmdoption-llvm-dwarfdump-v", "--verbose"], [423, 0, 1, "cmdoption-llvm-dwarfdump-verify", "--verify"], [423, 0, 1, "cmdoption-llvm-dwarfdump-version", "--version"], [423, 0, 1, "cmdoption-llvm-dwarfdump-F", "-F"], [423, 0, 1, "cmdoption-llvm-dwarfdump-a", "-a"], [423, 0, 1, "cmdoption-llvm-dwarfdump-c", "-c"], [423, 0, 1, "cmdoption-llvm-dwarfdump-f", "-f"], [423, 0, 1, "cmdoption-llvm-dwarfdump-h", "-h"], [423, 0, 1, "cmdoption-llvm-dwarfdump-i", "-i"], [423, 0, 1, "cmdoption-llvm-dwarfdump-n", "-n"], [423, 0, 1, "cmdoption-llvm-dwarfdump-o", "-o"], [423, 0, 1, "cmdoption-llvm-dwarfdump-p", "-p"], [423, 0, 1, "cmdoption-llvm-dwarfdump-r", "-r"], [423, 0, 1, "cmdoption-llvm-dwarfdump-u", "-u"], [423, 0, 1, "cmdoption-llvm-dwarfdump-v", "-v"], [423, 0, 1, "cmdoption-llvm-dwarfdump-x", "-x"], [423, 0, 1, "cmdoption-llvm-dwarfdump-arg-FILE", "@&lt;FILE&gt;"]], "llvm-exegesis": [[424, 0, 1, "cmdoption-llvm-exegesis-dump-object-to-disk", "--dump-object-to-disk"], [424, 0, 1, "cmdoption-llvm-exegesis-analysis-clustering", "-analysis-clustering"], [424, 0, 1, "cmdoption-llvm-exegesis-analysis-clustering-epsilon", "-analysis-clustering-epsilon"], [424, 0, 1, "cmdoption-llvm-exegesis-analysis-clusters-output-file", "-analysis-clusters-output-file"], [424, 0, 1, "cmdoption-llvm-exegesis-analysis-display-unstable-clusters", "-analysis-display-unstable-clusters"], [424, 0, 1, "cmdoption-llvm-exegesis-analysis-inconsistencies-output-file", "-analysis-inconsistencies-output-file"], [424, 0, 1, "cmdoption-llvm-exegesis-analysis-inconsistency-epsilon", "-analysis-inconsistency-epsilon"], [424, 0, 1, "cmdoption-llvm-exegesis-analysis-numpoints", "-analysis-numpoints"], [424, 0, 1, "cmdoption-llvm-exegesis-benchmarks-file", "-benchmarks-file"], [424, 0, 1, "cmdoption-llvm-exegesis-help", "-help"], [424, 0, 1, "cmdoption-llvm-exegesis-ignore-invalid-sched-class", "-ignore-invalid-sched-class"], [424, 0, 1, "cmdoption-llvm-exegesis-mcpu", "-mcpu"], [424, 0, 1, "cmdoption-llvm-exegesis-mode", "-mode"], [424, 0, 1, "cmdoption-llvm-exegesis-num-repetitions", "-num-repetitions"], [424, 0, 1, "cmdoption-llvm-exegesis-opcode-index", "-opcode-index"], [424, 0, 1, "cmdoption-llvm-exegesis-opcode-name", "-opcode-name"], [424, 0, 1, "cmdoption-llvm-exegesis-snippets-file", "-snippets-file"]], "llvm-link": [[427, 0, 1, "cmdoption-llvm-link-S", "-S"], [427, 0, 1, "cmdoption-llvm-link-d", "-d"], [427, 0, 1, "cmdoption-llvm-link-f", "-f"], [427, 0, 1, "cmdoption-llvm-link-help", "-help"], [427, 0, 1, "cmdoption-llvm-link-o", "-o"], [427, 0, 1, "cmdoption-llvm-link-v", "-v"]], "llvm-lipo": [[428, 0, 1, "cmdoption-llvm-lipo-archs", "-archs"], [428, 0, 1, "cmdoption-llvm-lipo-help", "-h"], [428, 0, 1, "cmdoption-llvm-lipo-help", "-help"], [428, 0, 1, "cmdoption-llvm-lipo-verify_arch", "-verify_arch"], [428, 0, 1, "cmdoption-llvm-lipo-version", "-version"]], "llvm-mca": [[429, 0, 1, "cmdoption-llvm-mca-all-stats", "-all-stats"], [429, 0, 1, "cmdoption-llvm-mca-all-views", "-all-views"], [429, 0, 1, "cmdoption-llvm-mca-bottleneck-analysis", "-bottleneck-analysis"], [429, 0, 1, "cmdoption-llvm-mca-dispatch", "-dispatch"], [429, 0, 1, "cmdoption-llvm-mca-dispatch-stats", "-dispatch-stats"], [429, 0, 1, "cmdoption-llvm-mca-help", "-help"], [429, 0, 1, "cmdoption-llvm-mca-instruction-info", "-instruction-info"], [429, 0, 1, "cmdoption-llvm-mca-instruction-tables", "-instruction-tables"], [429, 0, 1, "cmdoption-llvm-mca-iterations", "-iterations"], [429, 0, 1, "cmdoption-llvm-mca-lqueue", "-lqueue"], [429, 0, 1, "cmdoption-llvm-mca-march", "-march"], [429, 0, 1, "cmdoption-llvm-mca-mcpu", "-mcpu"], [429, 0, 1, "cmdoption-llvm-mca-mtriple", "-mtriple"], [429, 0, 1, "cmdoption-llvm-mca-noalias", "-noalias"], [429, 0, 1, "cmdoption-llvm-mca-o", "-o"], [429, 0, 1, "cmdoption-llvm-mca-output-asm-variant", "-output-asm-variant"], [429, 0, 1, "cmdoption-llvm-mca-register-file-size", "-register-file-size"], [429, 0, 1, "cmdoption-llvm-mca-register-file-stats", "-register-file-stats"], [429, 0, 1, "cmdoption-llvm-mca-resource-pressure", "-resource-pressure"], [429, 0, 1, "cmdoption-llvm-mca-retire-stats", "-retire-stats"], [429, 0, 1, "cmdoption-llvm-mca-scheduler-stats", "-scheduler-stats"], [429, 0, 1, "cmdoption-llvm-mca-squeue", "-squeue"], [429, 0, 1, "cmdoption-llvm-mca-timeline", "-timeline"], [429, 0, 1, "cmdoption-llvm-mca-timeline-max-cycles", "-timeline-max-cycles"], [429, 0, 1, "cmdoption-llvm-mca-timeline-max-iterations", "-timeline-max-iterations"]], "llvm-nm": [[430, 0, 1, "cmdoption-llvm-nm-add-dyldinfo", "--add-dyldinfo"], [430, 0, 1, "cmdoption-llvm-nm-arch", "--arch"], [430, 0, 1, "cmdoption-llvm-nm-debug-syms", "--debug-syms"], [430, 0, 1, "cmdoption-llvm-nm-defined-only", "--defined-only"], [430, 0, 1, "cmdoption-llvm-nm-demangle", "--demangle"], [430, 0, 1, "cmdoption-llvm-nm-dyldinfo-only", "--dyldinfo-only"], [430, 0, 1, "cmdoption-llvm-nm-dynamic", "--dynamic"], [430, 0, 1, "cmdoption-llvm-nm-extern-only", "--extern-only"], [430, 0, 1, "cmdoption-llvm-nm-format", "--format"], [430, 0, 1, "cmdoption-llvm-nm-help", "--help"], [430, 0, 1, "cmdoption-llvm-nm-help-list", "--help-list"], [430, 0, 1, "cmdoption-llvm-nm-just-symbol-name", "--just-symbol-name"], [430, 0, 1, "cmdoption-llvm-nm-no-demangle", "--no-demangle"], [430, 0, 1, "cmdoption-llvm-nm-no-dyldinfo", "--no-dyldinfo"], [430, 0, 1, "cmdoption-llvm-nm-no-llvm-bc", "--no-llvm-bc"], [430, 0, 1, "cmdoption-llvm-nm-no-sort", "--no-sort"], [430, 0, 1, "cmdoption-llvm-nm-no-weak", "--no-weak"], [430, 0, 1, "cmdoption-llvm-nm-numeric-sort", "--numeric-sort"], [430, 0, 1, "cmdoption-llvm-nm-portability", "--portability"], [430, 0, 1, "cmdoption-llvm-nm-print-armap", "--print-armap"], [430, 0, 1, "cmdoption-llvm-nm-print-file-name", "--print-file-name"], [430, 0, 1, "cmdoption-llvm-nm-print-size", "--print-size"], [430, 0, 1, "cmdoption-llvm-nm-radix", "--radix"], [430, 0, 1, "cmdoption-llvm-nm-reverse-sort", "--reverse-sort"], [430, 0, 1, "cmdoption-llvm-nm-size-sort", "--size-sort"], [430, 0, 1, "cmdoption-llvm-nm-special-syms", "--special-syms"], [430, 0, 1, "cmdoption-llvm-nm-undefined-only", "--undefined-only"], [430, 0, 1, "cmdoption-llvm-nm-version", "--version"], [430, 0, 1, "cmdoption-llvm-nm-without-aliases", "--without-aliases"], [430, 0, 1, "cmdoption-llvm-nm-print-file-name", "-A"], [430, 0, 1, "cmdoption-llvm-nm-B", "-B"], [430, 0, 1, "cmdoption-llvm-nm-demangle", "-C"], [430, 0, 1, "cmdoption-llvm-nm-dynamic", "-D"], [430, 0, 1, "cmdoption-llvm-nm-print-armap", "-M"], [430, 0, 1, "cmdoption-llvm-nm-portability", "-P"], [430, 0, 1, "cmdoption-llvm-nm-print-size", "-S"], [430, 0, 1, "cmdoption-llvm-nm-defined-only", "-U"], [430, 0, 1, "cmdoption-llvm-nm-no-weak", "-W"], [430, 0, 1, "cmdoption-llvm-nm-debug-syms", "-a"], [430, 0, 1, "cmdoption-llvm-nm-format", "-f"], [430, 0, 1, "cmdoption-llvm-nm-extern-only", "-g"], [430, 0, 1, "cmdoption-llvm-nm-help", "-h"], [430, 0, 1, "cmdoption-llvm-nm-just-symbol-name", "-j"], [430, 0, 1, "cmdoption-llvm-nm-m", "-m"], [430, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-n"], [430, 0, 1, "cmdoption-llvm-nm-print-file-name", "-o"], [430, 0, 1, "cmdoption-llvm-nm-no-sort", "-p"], [430, 0, 1, "cmdoption-llvm-nm-reverse-sort", "-r"], [430, 0, 1, "cmdoption-llvm-nm-s", "-s"], [430, 0, 1, "cmdoption-llvm-nm-radix", "-t"], [430, 0, 1, "cmdoption-llvm-nm-undefined-only", "-u"], [430, 0, 1, "cmdoption-llvm-nm-numeric-sort", "-v"], [430, 0, 1, "cmdoption-llvm-nm-x", "-x"], [430, 0, 1, "cmdoption-llvm-nm-arg-FILE", "@&lt;FILE&gt;"]], "llvm-objcopy": [[431, 0, 1, "cmdoption-llvm-objcopy-add-gnu-debuglink", "--add-gnu-debuglink"], [431, 0, 1, "cmdoption-llvm-objcopy-add-section", "--add-section"], [431, 0, 1, "cmdoption-llvm-objcopy-add-symbol", "--add-symbol"], [431, 0, 1, "cmdoption-llvm-objcopy-change-start", "--adjust-start"], [431, 0, 1, "cmdoption-llvm-objcopy-allow-broken-links", "--allow-broken-links"], [431, 0, 1, "cmdoption-llvm-objcopy-binary-architecture", "--binary-architecture"], [431, 0, 1, "cmdoption-llvm-objcopy-build-id-link-dir", "--build-id-link-dir"], [431, 0, 1, "cmdoption-llvm-objcopy-build-id-link-input", "--build-id-link-input"], [431, 0, 1, "cmdoption-llvm-objcopy-build-id-link-output", "--build-id-link-output"], [431, 0, 1, "cmdoption-llvm-objcopy-change-start", "--change-start"], [431, 0, 1, "cmdoption-llvm-objcopy-compress-debug-sections", "--compress-debug-sections"], [431, 0, 1, "cmdoption-llvm-objcopy-decompress-debug-sections", "--decompress-debug-sections"], [431, 0, 1, "cmdoption-llvm-objcopy-disable-deterministic-archives", "--disable-deterministic-archives"], [431, 0, 1, "cmdoption-llvm-objcopy-discard-all", "--discard-all"], [431, 0, 1, "cmdoption-llvm-objcopy-discard-locals", "--discard-locals"], [431, 0, 1, "cmdoption-llvm-objcopy-dump-section", "--dump-section"], [431, 0, 1, "cmdoption-llvm-objcopy-enable-deterministic-archives", "--enable-deterministic-archives"], [431, 0, 1, "cmdoption-llvm-objcopy-extract-dwo", "--extract-dwo"], [431, 0, 1, "cmdoption-llvm-objcopy-extract-main-partition", "--extract-main-partition"], [431, 0, 1, "cmdoption-llvm-objcopy-extract-partition", "--extract-partition"], [431, 0, 1, "cmdoption-llvm-objcopy-globalize-symbol", "--globalize-symbol"], [431, 0, 1, "cmdoption-llvm-objcopy-globalize-symbols", "--globalize-symbols"], [431, 0, 1, "cmdoption-llvm-objcopy-help", "--help"], [431, 0, 1, "cmdoption-llvm-objcopy-input-target", "--input-target"], [431, 0, 1, "cmdoption-llvm-objcopy-keep-file-symbols", "--keep-file-symbols"], [431, 0, 1, "cmdoption-llvm-objcopy-keep-global-symbol", "--keep-global-symbol"], [431, 0, 1, "cmdoption-llvm-objcopy-keep-global-symbols", "--keep-global-symbols"], [431, 0, 1, "cmdoption-llvm-objcopy-keep-section", "--keep-section"], [431, 0, 1, "cmdoption-llvm-objcopy-keep-symbol", "--keep-symbol"], [431, 0, 1, "cmdoption-llvm-objcopy-keep-symbols", "--keep-symbols"], [431, 0, 1, "cmdoption-llvm-objcopy-localize-hidden", "--localize-hidden"], [431, 0, 1, "cmdoption-llvm-objcopy-localize-symbol", "--localize-symbol"], [431, 0, 1, "cmdoption-llvm-objcopy-localize-symbols", "--localize-symbols"], [431, 0, 1, "cmdoption-llvm-objcopy-only-keep-debug", "--only-keep-debug"], [431, 0, 1, "cmdoption-llvm-objcopy-only-section", "--only-section"], [431, 0, 1, "cmdoption-llvm-objcopy-output-target", "--output-target"], [431, 0, 1, "cmdoption-llvm-objcopy-prefix-alloc-sections", "--prefix-alloc-sections"], [431, 0, 1, "cmdoption-llvm-objcopy-prefix-symbols", "--prefix-symbols"], [431, 0, 1, "cmdoption-llvm-objcopy-preserve-dates", "--preserve-dates"], [431, 0, 1, "cmdoption-llvm-objcopy-redefine-sym", "--redefine-sym"], [431, 0, 1, "cmdoption-llvm-objcopy-redefine-syms", "--redefine-syms"], [431, 0, 1, "cmdoption-llvm-objcopy-regex", "--regex"], [431, 0, 1, "cmdoption-llvm-objcopy-remove-section", "--remove-section"], [431, 0, 1, "cmdoption-llvm-objcopy-rename-section", "--rename-section"], [431, 0, 1, "cmdoption-llvm-objcopy-set-section-flags", "--set-section-flags"], [431, 0, 1, "cmdoption-llvm-objcopy-set-start-addr", "--set-start-addr"], [431, 0, 1, "cmdoption-llvm-objcopy-split-dwo", "--split-dwo"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-all", "--strip-all"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-all-gnu", "--strip-all-gnu"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-debug", "--strip-debug"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-dwo", "--strip-dwo"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-non-alloc", "--strip-non-alloc"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-sections", "--strip-sections"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-symbol", "--strip-symbol"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-symbols", "--strip-symbols"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded", "--strip-unneeded"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded-symbol", "--strip-unneeded-symbol"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-unneeded-symbols", "--strip-unneeded-symbols"], [431, 0, 1, "cmdoption-llvm-objcopy-target", "--target"], [431, 0, 1, "cmdoption-llvm-objcopy-version", "--version"], [431, 0, 1, "cmdoption-llvm-objcopy-weaken", "--weaken"], [431, 0, 1, "cmdoption-llvm-objcopy-weaken-symbol", "--weaken-symbol"], [431, 0, 1, "cmdoption-llvm-objcopy-weaken-symbols", "--weaken-symbols"], [431, 0, 1, "cmdoption-llvm-objcopy-binary-architecture", "-B"], [431, 0, 1, "cmdoption-llvm-objcopy-enable-deterministic-archives", "-D"], [431, 0, 1, "cmdoption-llvm-objcopy-target", "-F"], [431, 0, 1, "cmdoption-llvm-objcopy-input-target", "-I"], [431, 0, 1, "cmdoption-llvm-objcopy-keep-symbol", "-K"], [431, 0, 1, "cmdoption-llvm-objcopy-localize-symbol", "-L"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-symbol", "-N"], [431, 0, 1, "cmdoption-llvm-objcopy-output-target", "-O"], [431, 0, 1, "cmdoption-llvm-objcopy-remove-section", "-R"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-all", "-S"], [431, 0, 1, "cmdoption-llvm-objcopy-disable-deterministic-archives", "-U"], [431, 0, 1, "cmdoption-llvm-objcopy-version", "-V"], [431, 0, 1, "cmdoption-llvm-objcopy-weaken-symbol", "-W"], [431, 0, 1, "cmdoption-llvm-objcopy-discard-locals", "-X"], [431, 0, 1, "cmdoption-llvm-objcopy-strip-debug", "-g"], [431, 0, 1, "cmdoption-llvm-objcopy-help", "-h"], [431, 0, 1, "cmdoption-llvm-objcopy-only-section", "-j"], [431, 0, 1, "cmdoption-llvm-objcopy-preserve-dates", "-p"], [431, 0, 1, "cmdoption-llvm-objcopy-discard-all", "-x"]], "llvm-objdump": [[432, 0, 1, "cmdoption-llvm-objdump-adjust-vma", "--adjust-vma"], [432, 0, 1, "cmdoption-llvm-objdump-x", "--all-headers"], [432, 0, 1, "cmdoption-llvm-objdump-arch", "--arch"], [432, 0, 1, "cmdoption-llvm-objdump-arch-name", "--arch-name"], [432, 0, 1, "cmdoption-llvm-objdump-a", "--archive-headers"], [432, 0, 1, "cmdoption-llvm-objdump-archive-member-offsets", "--archive-member-offsets"], [432, 0, 1, "cmdoption-llvm-objdump-bind", "--bind"], [432, 0, 1, "cmdoption-llvm-objdump-cfg", "--cfg"], [432, 0, 1, "cmdoption-llvm-objdump-data-in-code", "--data-in-code"], [432, 0, 1, "cmdoption-llvm-objdump-C", "--demangle"], [432, 0, 1, "cmdoption-llvm-objdump-dis-symname", "--dis-symname"], [432, 0, 1, "cmdoption-llvm-objdump-d", "--disassemble"], [432, 0, 1, "cmdoption-llvm-objdump-D", "--disassemble-all"], [432, 0, 1, "cmdoption-llvm-objdump-disassemble-functions", "--disassemble-functions"], [432, 0, 1, "cmdoption-llvm-objdump-z", "--disassemble-zeroes"], [432, 0, 1, "cmdoption-llvm-objdump-M", "--disassembler-options"], [432, 0, 1, "cmdoption-llvm-objdump-dsym", "--dsym"], [432, 0, 1, "cmdoption-llvm-objdump-dwarf", "--dwarf"], [432, 0, 1, "cmdoption-llvm-objdump-dylib-id", "--dylib-id"], [432, 0, 1, "cmdoption-llvm-objdump-dylibs-used", "--dylibs-used"], [432, 0, 1, "cmdoption-llvm-objdump-R", "--dynamic-reloc"], [432, 0, 1, "cmdoption-llvm-objdump-exports-trie", "--exports-trie"], [432, 0, 1, "cmdoption-llvm-objdump-fault-map-section", "--fault-map-section"], [432, 0, 1, "cmdoption-llvm-objdump-f", "--file-headers"], [432, 0, 1, "cmdoption-llvm-objdump-s", "--full-contents"], [432, 0, 1, "cmdoption-llvm-objdump-full-leading-addr", "--full-leading-addr"], [432, 0, 1, "cmdoption-llvm-objdump-h", "--headers"], [432, 0, 1, "cmdoption-llvm-objdump-help", "--help"], [432, 0, 1, "cmdoption-llvm-objdump-indirect-symbols", "--indirect-symbols"], [432, 0, 1, "cmdoption-llvm-objdump-info-plist", "--info-plist"], [432, 0, 1, "cmdoption-llvm-objdump-lazy-bind", "--lazy-bind"], [432, 0, 1, "cmdoption-llvm-objdump-l", "--line-numbers"], [432, 0, 1, "cmdoption-llvm-objdump-link-opt-hints", "--link-opt-hints"], [432, 0, 1, "cmdoption-llvm-objdump-m", "--macho"], [432, 0, 1, "cmdoption-llvm-objdump-mattr", "--mattr"], [432, 0, 1, "cmdoption-llvm-objdump-mcpu", "--mcpu"], [432, 0, 1, "cmdoption-llvm-objdump-no-leading-addr", "--no-leading-addr"], [432, 0, 1, "cmdoption-llvm-objdump-no-leading-headers", "--no-leading-headers"], [432, 0, 1, "cmdoption-llvm-objdump-no-show-raw-insn", "--no-show-raw-insn"], [432, 0, 1, "cmdoption-llvm-objdump-no-symbolic-operands", "--no-symbolic-operands"], [432, 0, 1, "cmdoption-llvm-objdump-non-verbose", "--non-verbose"], [432, 0, 1, "cmdoption-llvm-objdump-objc-meta-data", "--objc-meta-data"], [432, 0, 1, "cmdoption-llvm-objdump-print-imm-hex", "--print-imm-hex"], [432, 0, 1, "cmdoption-llvm-objdump-private-header", "--private-header"], [432, 0, 1, "cmdoption-llvm-objdump-p", "--private-headers"], [432, 0, 1, "cmdoption-llvm-objdump-raw-clang-ast", "--raw-clang-ast"], [432, 0, 1, "cmdoption-llvm-objdump-rebase", "--rebase"], [432, 0, 1, "cmdoption-llvm-objdump-r", "--reloc"], [432, 0, 1, "cmdoption-llvm-objdump-j", "--section"], [432, 0, 1, "cmdoption-llvm-objdump-h", "--section-headers"], [432, 0, 1, "cmdoption-llvm-objdump-show-lma", "--show-lma"], [432, 0, 1, "cmdoption-llvm-objdump-S", "--source"], [432, 0, 1, "cmdoption-llvm-objdump-start-address", "--start-address"], [432, 0, 1, "cmdoption-llvm-objdump-stop-address", "--stop-address"], [432, 0, 1, "cmdoption-llvm-objdump-t", "--syms"], [432, 0, 1, "cmdoption-llvm-objdump-triple", "--triple"], [432, 0, 1, "cmdoption-llvm-objdump-universal-headers", "--universal-headers"], [432, 0, 1, "cmdoption-llvm-objdump-u", "--unwind-info"], [432, 0, 1, "cmdoption-llvm-objdump-version", "--version"], [432, 0, 1, "cmdoption-llvm-objdump-weak-bind", "--weak-bind"], [432, 0, 1, "cmdoption-llvm-objdump-w", "--wide"], [432, 0, 1, "cmdoption-llvm-objdump-x86-asm-syntax", "--x86-asm-syntax"], [432, 0, 1, "cmdoption-llvm-objdump-C", "-C"], [432, 0, 1, "cmdoption-llvm-objdump-D", "-D"], [432, 0, 1, "cmdoption-llvm-objdump-M", "-M"], [432, 0, 1, "cmdoption-llvm-objdump-R", "-R"], [432, 0, 1, "cmdoption-llvm-objdump-S", "-S"], [432, 0, 1, "cmdoption-llvm-objdump-a", "-a"], [432, 0, 1, "cmdoption-llvm-objdump-d", "-d"], [432, 0, 1, "cmdoption-llvm-objdump-f", "-f"], [432, 0, 1, "cmdoption-llvm-objdump-g", "-g"], [432, 0, 1, "cmdoption-llvm-objdump-h", "-h"], [432, 0, 1, "cmdoption-llvm-objdump-j", "-j"], [432, 0, 1, "cmdoption-llvm-objdump-l", "-l"], [432, 0, 1, "cmdoption-llvm-objdump-m", "-m"], [432, 0, 1, "cmdoption-llvm-objdump-p", "-p"], [432, 0, 1, "cmdoption-llvm-objdump-r", "-r"], [432, 0, 1, "cmdoption-llvm-objdump-s", "-s"], [432, 0, 1, "cmdoption-llvm-objdump-t", "-t"], [432, 0, 1, "cmdoption-llvm-objdump-u", "-u"], [432, 0, 1, "cmdoption-llvm-objdump-w", "-w"], [432, 0, 1, "cmdoption-llvm-objdump-x", "-x"], [432, 0, 1, "cmdoption-llvm-objdump-z", "-z"], [432, 0, 1, "cmdoption-llvm-objdump-arg-FILE", "@&lt;FILE&gt;"], [432, 0, 1, "cmdoption-llvm-objdump-arg-att", "att"], [432, 0, 1, "cmdoption-llvm-objdump-arg-intel", "intel"]], "llvm-pdbutil-bytes": [[433, 0, 1, "cmdoption-llvm-pdbutil-bytes-block-range", "-block-range"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-byte-range", "-byte-range"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-chunks", "-chunks"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-ec", "-ec"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-files", "-files"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-fpm", "-fpm"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-id", "-id"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-mod", "-mod"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-modi", "-modi"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-name-map", "-name-map"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-sc", "-sc"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-sm", "-sm"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-split-chunks", "-split-chunks"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-stream-data", "-stream-data"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-syms", "-syms"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-type", "-type"], [433, 0, 1, "cmdoption-llvm-pdbutil-bytes-type-server", "-type-server"]], "llvm-pdbutil-dump": [[433, 0, 1, "cmdoption-llvm-pdbutil-dump-all", "-all"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-dependents", "-dependents"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-files", "-files"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-global-extras", "-global-extras"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-globals", "-globals"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-id-data", "-id-data"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-id-extras", "-id-extras"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-id-index", "-id-index"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-ids", "-ids"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-il", "-il"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-l", "-l"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-modi", "-modi"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-modules", "-modules"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-public-extras", "-public-extras"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-publics", "-publics"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-section-contribs", "-section-contribs"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-section-headers", "-section-headers"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-section-map", "-section-map"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-stream-blocks", "-stream-blocks"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-streams", "-streams"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-string-table", "-string-table"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-summary", "-summary"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-sym-data", "-sym-data"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-symbols", "-symbols"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-type-data", "-type-data"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-type-extras", "-type-extras"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-type-index", "-type-index"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-types", "-types"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-xme", "-xme"], [433, 0, 1, "cmdoption-llvm-pdbutil-dump-xmi", "-xmi"]], "llvm-pdbutil-merge": [[433, 0, 1, "cmdoption-llvm-pdbutil-merge-pdb", "-pdb"]], "llvm-pdbutil-pretty": [[433, 0, 1, "cmdoption-llvm-pdbutil-pretty-all", "-all"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-definitions", "-class-definitions"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-order", "-class-order"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-class-recurse-depth", "-class-recurse-depth"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-classes", "-classes"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-color-output", "-color-output"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-compilands", "-compilands"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-enums", "-enums"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-compilands", "-exclude-compilands"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-symbols", "-exclude-symbols"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-exclude-types", "-exclude-types"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-externals", "-externals"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-globals", "-globals"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-compilands", "-include-compilands"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-symbols", "-include-symbols"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-include-types", "-include-types"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-lines", "-lines"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-load-address", "-load-address"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding", "-min-class-padding"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-class-padding-imm", "-min-class-padding-imm"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-min-type-size", "-min-type-size"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-module-syms", "-module-syms"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-compiler-generated", "-no-compiler-generated"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-enum-definitions", "-no-enum-definitions"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-no-system-libs", "-no-system-libs"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-sym-types", "-sym-types"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-symbol-order", "-symbol-order"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-typedefs", "-typedefs"], [433, 0, 1, "cmdoption-llvm-pdbutil-pretty-types", "-types"]], "llvm-pdbutil-yaml2pdb": [[433, 0, 1, "cmdoption-llvm-pdbutil-yaml2pdb-pdb", "-pdb"]], "llvm-profdata-merge": [[434, 0, 1, "cmdoption-llvm-profdata-merge-binary", "-binary"], [434, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "-f"], [434, 0, 1, "cmdoption-llvm-profdata-merge-gcc", "-gcc"], [434, 0, 1, "cmdoption-llvm-profdata-merge-help", "-help"], [434, 0, 1, "cmdoption-llvm-profdata-merge-input-files", "-input-files"], [434, 0, 1, "cmdoption-llvm-profdata-merge-instr", "-instr"], [434, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "-j"], [434, 0, 1, "cmdoption-llvm-profdata-merge-num-threads", "-num-threads"], [434, 0, 1, "cmdoption-llvm-profdata-merge-output", "-o"], [434, 0, 1, "cmdoption-llvm-profdata-merge-output", "-output"], [434, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "-r"], [434, 0, 1, "cmdoption-llvm-profdata-merge-remapping-file", "-remapping-file"], [434, 0, 1, "cmdoption-llvm-profdata-merge-sample", "-sample"], [434, 0, 1, "cmdoption-llvm-profdata-merge-sparse", "-sparse"], [434, 0, 1, "cmdoption-llvm-profdata-merge-text", "-text"], [434, 0, 1, "cmdoption-llvm-profdata-merge-weighted-input", "-weighted-input"]], "llvm-profdata-overlap": [[434, 0, 1, "cmdoption-llvm-profdata-overlap-cs", "-cs"], [434, 0, 1, "cmdoption-llvm-profdata-overlap-function", "-function"], [434, 0, 1, "cmdoption-llvm-profdata-overlap-help", "-help"], [434, 0, 1, "cmdoption-llvm-profdata-overlap-o", "-o"], [434, 0, 1, "cmdoption-llvm-profdata-overlap-value-cutoff", "-value-cutoff"]], "llvm-profdata-show": [[434, 0, 1, "cmdoption-llvm-profdata-show-all-functions", "-all-functions"], [434, 0, 1, "cmdoption-llvm-profdata-show-counts", "-counts"], [434, 0, 1, "cmdoption-llvm-profdata-show-function", "-function"], [434, 0, 1, "cmdoption-llvm-profdata-show-help", "-help"], [434, 0, 1, "cmdoption-llvm-profdata-show-instr", "-instr"], [434, 0, 1, "cmdoption-llvm-profdata-show-list-below-cutoff", "-list-below-cutoff"], [434, 0, 1, "cmdoption-llvm-profdata-show-memop-sizes", "-memop-sizes"], [434, 0, 1, "cmdoption-llvm-profdata-show-output", "-o"], [434, 0, 1, "cmdoption-llvm-profdata-show-output", "-output"], [434, 0, 1, "cmdoption-llvm-profdata-show-sample", "-sample"], [434, 0, 1, "cmdoption-llvm-profdata-show-showcs", "-showcs"], [434, 0, 1, "cmdoption-llvm-profdata-show-text", "-text"], [434, 0, 1, "cmdoption-llvm-profdata-show-topn", "-topn"], [434, 0, 1, "cmdoption-llvm-profdata-show-value-cutoff", "-value-cutoff"]], "llvm-readelf": [[436, 0, 1, "cmdoption-llvm-readelf-addrsig", "--addrsig"], [436, 0, 1, "cmdoption-llvm-readelf-all", "--all"], [436, 0, 1, "cmdoption-llvm-readelf-arm-attributes", "--arm-attributes"], [436, 0, 1, "cmdoption-llvm-readelf-color", "--color"], [436, 0, 1, "cmdoption-llvm-readelf-demangle", "--demangle"], [436, 0, 1, "cmdoption-llvm-readelf-dyn-relocations", "--dyn-relocations"], [436, 0, 1, "cmdoption-llvm-readelf-dyn-symbols", "--dyn-symbols"], [436, 0, 1, "cmdoption-llvm-readelf-dyn-symbols", "--dyn-syms"], [436, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "--dynamic"], [436, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "--dynamic-table"], [436, 0, 1, "cmdoption-llvm-readelf-elf-cg-profile", "--elf-cg-profile"], [436, 0, 1, "cmdoption-llvm-readelf-elf-hash-histogram", "--elf-hash-histogram"], [436, 0, 1, "cmdoption-llvm-readelf-elf-linker-options", "--elf-linker-options"], [436, 0, 1, "cmdoption-llvm-readelf-elf-output-style", "--elf-output-style"], [436, 0, 1, "cmdoption-llvm-readelf-elf-section-groups", "--elf-section-groups"], [436, 0, 1, "cmdoption-llvm-readelf-expand-relocs", "--expand-relocs"], [436, 0, 1, "cmdoption-llvm-readelf-file-headers", "--file-headers"], [436, 0, 1, "cmdoption-llvm-readelf-gnu-hash-table", "--gnu-hash-table"], [436, 0, 1, "cmdoption-llvm-readelf-hash-symbols", "--hash-symbols"], [436, 0, 1, "cmdoption-llvm-readelf-hash-table", "--hash-table"], [436, 0, 1, "cmdoption-llvm-readelf-headers", "--headers"], [436, 0, 1, "cmdoption-llvm-readelf-help", "--help"], [436, 0, 1, "cmdoption-llvm-readelf-help-list", "--help-list"], [436, 0, 1, "cmdoption-llvm-readelf-hex-dump", "--hex-dump"], [436, 0, 1, "cmdoption-llvm-readelf-elf-hash-histogram", "--histogram"], [436, 0, 1, "cmdoption-llvm-readelf-needed-libs", "--needed-libs"], [436, 0, 1, "cmdoption-llvm-readelf-notes", "--notes"], [436, 0, 1, "cmdoption-llvm-readelf-program-headers", "--program-headers"], [436, 0, 1, "cmdoption-llvm-readelf-raw-relr", "--raw-relr"], [436, 0, 1, "cmdoption-llvm-readelf-relocations", "--relocations"], [436, 0, 1, "cmdoption-llvm-readelf-relocations", "--relocs"], [436, 0, 1, "cmdoption-llvm-readelf-section-data", "--section-data"], [436, 0, 1, "cmdoption-llvm-readelf-elf-section-groups", "--section-groups"], [436, 0, 1, "cmdoption-llvm-readelf-sections", "--section-headers"], [436, 0, 1, "cmdoption-llvm-readelf-section-mapping", "--section-mapping"], [436, 0, 1, "cmdoption-llvm-readelf-section-relocations", "--section-relocations"], [436, 0, 1, "cmdoption-llvm-readelf-section-symbols", "--section-symbols"], [436, 0, 1, "cmdoption-llvm-readelf-sections", "--sections"], [436, 0, 1, "cmdoption-llvm-readelf-program-headers", "--segments"], [436, 0, 1, "cmdoption-llvm-readelf-stackmap", "--stackmap"], [436, 0, 1, "cmdoption-llvm-readelf-string-dump", "--string-dump"], [436, 0, 1, "cmdoption-llvm-readelf-symbols", "--symbols"], [436, 0, 1, "cmdoption-llvm-readelf-symbols", "--syms"], [436, 0, 1, "cmdoption-llvm-readelf-unwind", "--unwind"], [436, 0, 1, "cmdoption-llvm-readelf-version", "--version"], [436, 0, 1, "cmdoption-llvm-readelf-version-info", "--version-info"], [436, 0, 1, "cmdoption-llvm-readelf-demangle", "-C"], [436, 0, 1, "cmdoption-llvm-readelf-elf-hash-histogram", "-I"], [436, 0, 1, "cmdoption-llvm-readelf-sections", "-S"], [436, 0, 1, "cmdoption-llvm-readelf-version-info", "-V"], [436, 0, 1, "cmdoption-llvm-readelf-dynamic-table", "-d"], [436, 0, 1, "cmdoption-llvm-readelf-headers", "-e"], [436, 0, 1, "cmdoption-llvm-readelf-elf-section-groups", "-g"], [436, 0, 1, "cmdoption-llvm-readelf-file-headers", "-h"], [436, 0, 1, "cmdoption-llvm-readelf-program-headers", "-l"], [436, 0, 1, "cmdoption-llvm-readelf-notes", "-n"], [436, 0, 1, "cmdoption-llvm-readelf-string-dump", "-p"], [436, 0, 1, "cmdoption-llvm-readelf-relocations", "-r"], [436, 0, 1, "cmdoption-llvm-readelf-symbols", "-s"], [436, 0, 1, "cmdoption-llvm-readelf-unwind", "-u"], [436, 0, 1, "cmdoption-llvm-readelf-hex-dump", "-x"], [436, 0, 1, "cmdoption-llvm-readelf-arg-FILE", "@&lt;FILE&gt;"]], "llvm-readobj": [[437, 0, 1, "cmdoption-llvm-readobj-addrsig", "--addrsig"], [437, 0, 1, "cmdoption-llvm-readobj-all", "--all"], [437, 0, 1, "cmdoption-llvm-readobj-arm-attributes", "--arm-attributes"], [437, 0, 1, "cmdoption-llvm-readobj-codeview", "--codeview"], [437, 0, 1, "cmdoption-llvm-readobj-codeview-ghash", "--codeview-ghash"], [437, 0, 1, "cmdoption-llvm-readobj-codeview-merged-types", "--codeview-merged-types"], [437, 0, 1, "cmdoption-llvm-readobj-codeview-subsection-bytes", "--codeview-subsection-bytes"], [437, 0, 1, "cmdoption-llvm-readobj-coff-basereloc", "--coff-basereloc"], [437, 0, 1, "cmdoption-llvm-readobj-coff-debug-directory", "--coff-debug-directory"], [437, 0, 1, "cmdoption-llvm-readobj-coff-directives", "--coff-directives"], [437, 0, 1, "cmdoption-llvm-readobj-coff-exports", "--coff-exports"], [437, 0, 1, "cmdoption-llvm-readobj-coff-imports", "--coff-imports"], [437, 0, 1, "cmdoption-llvm-readobj-coff-load-config", "--coff-load-config"], [437, 0, 1, "cmdoption-llvm-readobj-coff-resources", "--coff-resources"], [437, 0, 1, "cmdoption-llvm-readobj-color", "--color"], [437, 0, 1, "cmdoption-llvm-readobj-demangle", "--demangle"], [437, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dt"], [437, 0, 1, "cmdoption-llvm-readobj-dyn-relocations", "--dyn-relocations"], [437, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dyn-symbols"], [437, 0, 1, "cmdoption-llvm-readobj-dyn-symbols", "--dyn-syms"], [437, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "--dynamic"], [437, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "--dynamic-table"], [437, 0, 1, "cmdoption-llvm-readobj-elf-cg-profile", "--elf-cg-profile"], [437, 0, 1, "cmdoption-llvm-readobj-elf-hash-histogram", "--elf-hash-histogram"], [437, 0, 1, "cmdoption-llvm-readobj-elf-linker-options", "--elf-linker-options"], [437, 0, 1, "cmdoption-llvm-readobj-elf-output-style", "--elf-output-style"], [437, 0, 1, "cmdoption-llvm-readobj-elf-section-groups", "--elf-section-groups"], [437, 0, 1, "cmdoption-llvm-readobj-expand-relocs", "--expand-relocs"], [437, 0, 1, "cmdoption-llvm-readobj-file-headers", "--file-headers"], [437, 0, 1, "cmdoption-llvm-readobj-gnu-hash-table", "--gnu-hash-table"], [437, 0, 1, "cmdoption-llvm-readobj-hash-symbols", "--hash-symbols"], [437, 0, 1, "cmdoption-llvm-readobj-hash-table", "--hash-table"], [437, 0, 1, "cmdoption-llvm-readobj-headers", "--headers"], [437, 0, 1, "cmdoption-llvm-readobj-help", "--help"], [437, 0, 1, "cmdoption-llvm-readobj-help-list", "--help-list"], [437, 0, 1, "cmdoption-llvm-readobj-hex-dump", "--hex-dump"], [437, 0, 1, "cmdoption-llvm-readobj-elf-hash-histogram", "--histogram"], [437, 0, 1, "cmdoption-llvm-readobj-macho-data-in-code", "--macho-data-in-code"], [437, 0, 1, "cmdoption-llvm-readobj-macho-dsymtab", "--macho-dsymtab"], [437, 0, 1, "cmdoption-llvm-readobj-macho-indirect-symbols", "--macho-indirect-symbols"], [437, 0, 1, "cmdoption-llvm-readobj-macho-linker-options", "--macho-linker-options"], [437, 0, 1, "cmdoption-llvm-readobj-macho-segment", "--macho-segment"], [437, 0, 1, "cmdoption-llvm-readobj-macho-version-min", "--macho-version-min"], [437, 0, 1, "cmdoption-llvm-readobj-needed-libs", "--needed-libs"], [437, 0, 1, "cmdoption-llvm-readobj-notes", "--notes"], [437, 0, 1, "cmdoption-llvm-readobj-program-headers", "--program-headers"], [437, 0, 1, "cmdoption-llvm-readobj-raw-relr", "--raw-relr"], [437, 0, 1, "cmdoption-llvm-readobj-relocations", "--relocations"], [437, 0, 1, "cmdoption-llvm-readobj-relocations", "--relocs"], [437, 0, 1, "cmdoption-llvm-readobj-section-data", "--sd"], [437, 0, 1, "cmdoption-llvm-readobj-section-data", "--section-data"], [437, 0, 1, "cmdoption-llvm-readobj-elf-section-groups", "--section-groups"], [437, 0, 1, "cmdoption-llvm-readobj-sections", "--section-headers"], [437, 0, 1, "cmdoption-llvm-readobj-section-mapping", "--section-mapping"], [437, 0, 1, "cmdoption-llvm-readobj-section-relocations", "--section-relocations"], [437, 0, 1, "cmdoption-llvm-readobj-section-symbols", "--section-symbols"], [437, 0, 1, "cmdoption-llvm-readobj-sections", "--sections"], [437, 0, 1, "cmdoption-llvm-readobj-program-headers", "--segments"], [437, 0, 1, "cmdoption-llvm-readobj-section-relocations", "--sr"], [437, 0, 1, "cmdoption-llvm-readobj-section-symbols", "--st"], [437, 0, 1, "cmdoption-llvm-readobj-stackmap", "--stackmap"], [437, 0, 1, "cmdoption-llvm-readobj-string-dump", "--string-dump"], [437, 0, 1, "cmdoption-llvm-readobj-symbols", "--symbols"], [437, 0, 1, "cmdoption-llvm-readobj-symbols", "--syms"], [437, 0, 1, "cmdoption-llvm-readobj-unwind", "--unwind"], [437, 0, 1, "cmdoption-llvm-readobj-version", "--version"], [437, 0, 1, "cmdoption-llvm-readobj-version-info", "--version-info"], [437, 0, 1, "cmdoption-llvm-readobj-demangle", "-C"], [437, 0, 1, "cmdoption-llvm-readobj-elf-hash-histogram", "-I"], [437, 0, 1, "cmdoption-llvm-readobj-sections", "-S"], [437, 0, 1, "cmdoption-llvm-readobj-version-info", "-V"], [437, 0, 1, "cmdoption-llvm-readobj-dynamic-table", "-d"], [437, 0, 1, "cmdoption-llvm-readobj-headers", "-e"], [437, 0, 1, "cmdoption-llvm-readobj-elf-section-groups", "-g"], [437, 0, 1, "cmdoption-llvm-readobj-file-headers", "-h"], [437, 0, 1, "cmdoption-llvm-readobj-program-headers", "-l"], [437, 0, 1, "cmdoption-llvm-readobj-notes", "-n"], [437, 0, 1, "cmdoption-llvm-readobj-string-dump", "-p"], [437, 0, 1, "cmdoption-llvm-readobj-relocations", "-r"], [437, 0, 1, "cmdoption-llvm-readobj-sections", "-s"], [437, 0, 1, "cmdoption-llvm-readobj-symbols", "-t"], [437, 0, 1, "cmdoption-llvm-readobj-unwind", "-u"], [437, 0, 1, "cmdoption-llvm-readobj-hex-dump", "-x"], [437, 0, 1, "cmdoption-llvm-readobj-arg-FILE", "@&lt;FILE&gt;"]], "llvm-stress": [[439, 0, 1, "cmdoption-llvm-stress-o", "-o"], [439, 0, 1, "cmdoption-llvm-stress-seed", "-seed"], [439, 0, 1, "cmdoption-llvm-stress-size", "-size"]], "llvm-symbolizer": [[442, 0, 1, "cmdoption-llvm-symbolizer-print-address", "--addresses"], [442, 0, 1, "cmdoption-llvm-symbolizer-adjust-vma", "--adjust-vma"], [442, 0, 1, "cmdoption-llvm-symbolizer-basenames", "--basenames"], [442, 0, 1, "cmdoption-llvm-symbolizer-default-arch", "--default-arch"], [442, 0, 1, "cmdoption-llvm-symbolizer-demangle", "--demangle"], [442, 0, 1, "cmdoption-llvm-symbolizer-dsym-hint", "--dsym-hint"], [442, 0, 1, "cmdoption-llvm-symbolizer-dwp", "--dwp"], [442, 0, 1, "cmdoption-llvm-symbolizer-obj", "--exe"], [442, 0, 1, "cmdoption-llvm-symbolizer-fallback-debug-path", "--fallback-debug-path"], [442, 0, 1, "cmdoption-llvm-symbolizer-functions", "--functions"], [442, 0, 1, "cmdoption-llvm-symbolizer-help", "--help"], [442, 0, 1, "cmdoption-llvm-symbolizer-help-list", "--help-list"], [442, 0, 1, "cmdoption-llvm-symbolizer-inlining", "--inlines"], [442, 0, 1, "cmdoption-llvm-symbolizer-inlining", "--inlining"], [442, 0, 1, "cmdoption-llvm-symbolizer-no-demangle", "--no-demangle"], [442, 0, 1, "cmdoption-llvm-symbolizer-obj", "--obj"], [442, 0, 1, "cmdoption-llvm-symbolizer-output-style", "--output-style"], [442, 0, 1, "cmdoption-llvm-symbolizer-pretty-print", "--pretty-print"], [442, 0, 1, "cmdoption-llvm-symbolizer-print-address", "--print-address"], [442, 0, 1, "cmdoption-llvm-symbolizer-print-source-context-lines", "--print-source-context-lines"], [442, 0, 1, "cmdoption-llvm-symbolizer-use-symbol-table", "--use-symbol-table"], [442, 0, 1, "cmdoption-llvm-symbolizer-verbose", "--verbose"], [442, 0, 1, "cmdoption-llvm-symbolizer-version", "--version"], [442, 0, 1, "cmdoption-llvm-symbolizer-demangle", "-C"], [442, 0, 1, "cmdoption-llvm-symbolizer-print-address", "-a"], [442, 0, 1, "cmdoption-llvm-symbolizer-obj", "-e"], [442, 0, 1, "cmdoption-llvm-symbolizer-functions", "-f"], [442, 0, 1, "cmdoption-llvm-symbolizer-help", "-h"], [442, 0, 1, "cmdoption-llvm-symbolizer-inlining", "-i"], [442, 0, 1, "cmdoption-llvm-symbolizer-pretty-print", "-p"], [442, 0, 1, "cmdoption-llvm-symbolizer-basenames", "-s"], [442, 0, 1, "cmdoption-llvm-symbolizer-arg-FILE", "@&lt;FILE&gt;"]], "opt": [[443, 0, 1, "cmdoption-opt-S", "-S"], [443, 0, 1, "cmdoption-opt-debug", "-debug"], [443, 0, 1, "cmdoption-opt-disable-inlining", "-disable-inlining"], [443, 0, 1, "cmdoption-opt-disable-opt", "-disable-opt"], [443, 0, 1, "cmdoption-opt-f", "-f"], [443, 0, 1, "cmdoption-opt-help", "-help"], [443, 0, 1, "cmdoption-opt-load", "-load"], [443, 0, 1, "cmdoption-opt-o", "-o"], [443, 0, 1, "cmdoption-opt-p", "-p"], [443, 0, 1, "cmdoption-opt-stats", "-stats"], [443, 0, 1, "cmdoption-opt-strip-debug", "-strip-debug"], [443, 0, 1, "cmdoption-opt-time-passes", "-time-passes"], [443, 0, 1, "cmdoption-opt-verify-each", "-verify-each"], [443, 0, 1, "cmdoption-opt-passname", "-{passname}"]], "tblgen": [[444, 0, 1, "cmdoption-tblgen-I", "-I"], [444, 0, 1, "cmdoption-tblgen-asmparsernum", "-asmparsernum"], [444, 0, 1, "cmdoption-tblgen-asmwriternum", "-asmwriternum"], [444, 0, 1, "cmdoption-tblgen-class", "-class"], [444, 0, 1, "cmdoption-tblgen-dump-json", "-dump-json"], [444, 0, 1, "cmdoption-tblgen-gen-asm-matcher", "-gen-asm-matcher"], [444, 0, 1, "cmdoption-tblgen-gen-asm-writer", "-gen-asm-writer"], [444, 0, 1, "cmdoption-tblgen-gen-dag-isel", "-gen-dag-isel"], [444, 0, 1, "cmdoption-tblgen-gen-dfa-packetizer", "-gen-dfa-packetizer"], [444, 0, 1, "cmdoption-tblgen-gen-disassembler", "-gen-disassembler"], [444, 0, 1, "cmdoption-tblgen-gen-emitter", "-gen-emitter"], [444, 0, 1, "cmdoption-tblgen-gen-enhanced-disassembly-info", "-gen-enhanced-disassembly-info"], [444, 0, 1, "cmdoption-tblgen-gen-exegesis", "-gen-exegesis"], [444, 0, 1, "cmdoption-tblgen-gen-fast-isel", "-gen-fast-isel"], [444, 0, 1, "cmdoption-tblgen-gen-instr-info", "-gen-instr-info"], [444, 0, 1, "cmdoption-tblgen-gen-intrinsic-enums", "-gen-intrinsic-enums"], [444, 0, 1, "cmdoption-tblgen-gen-intrinsic-impl", "-gen-intrinsic-impl"], [444, 0, 1, "cmdoption-tblgen-gen-pseudo-lowering", "-gen-pseudo-lowering"], [444, 0, 1, "cmdoption-tblgen-gen-register-info", "-gen-register-info"], [444, 0, 1, "cmdoption-tblgen-gen-subtarget", "-gen-subtarget"], [444, 0, 1, "cmdoption-tblgen-gen-tgt-intrinsic", "-gen-tgt-intrinsic"], [444, 0, 1, "cmdoption-tblgen-help", "-help"], [444, 0, 1, "cmdoption-tblgen-o", "-o"], [444, 0, 1, "cmdoption-tblgen-print-enums", "-print-enums"], [444, 0, 1, "cmdoption-tblgen-print-records", "-print-records"], [444, 0, 1, "cmdoption-tblgen-print-sets", "-print-sets"], [444, 0, 1, "cmdoption-tblgen-version", "-version"]]}, "objnames": {"0": ["std", "cmdoption", "\u7a0b\u5f0f\u9078\u9805"]}, "objtypes": {"0": "std:cmdoption"}, "terms": {"00": [413, 424, 429, 450, 467, 479, 484, 499, 507, 553, 554, 555, 557, 563, 564, 565, 567, 574, 575, 576, 578], "000": 519, "0000": 540, "000000": [533, 539, 542, 554, 556, 564, 566, 575, 577], "00000000041516c6": 542, "000000e": [553, 554, 555, 557, 563, 564, 565, 567, 574, 575, 576, 578], "000001": 542, "000002": 542, "000003": 542, "000006": 542, "000007": 542, "000008": 542, "000010": 542, "000014": 542, "000016": 542, "000017": 542, "000018": 542, "000019": 542, "000023": 542, "00002fc0": 542, "000032": 542, "000035": 542, "000037": 542, "000041": 542, "000046": 542, "000049": 542, "000050": 542, "000063": 542, "000075": 542, "0001": 540, "000102030405060708090a0b0c0d0e0f": 479, "000106": 542, "000120": 542, "000123": 542, "000138": 542, "000155": 542, "000156": 542, "000214": 542, "000215": 542, "0003": 540, "000302": 542, "000310": 542, "000342": 542, "0004": 540, "000471": 542, "0005": 540, "000562": 542, "0007": 540, "000737": 542, "000774": 542, "000799": 542, "0008": 511, "001": 393, "0011": 393, "001375": 542, "001596": 542, "003400": 533, "004523": 542, "0058": 424, "01": [385, 424, 450, 454, 467, 479, 507, 520, 533, 554, 555, 557, 564, 565, 567, 575, 576, 578], "010": 385, "011": 393, "011200": 533, "012345": 429, "0123456789": 429, "0170": 451, "01pi0": 384, "02": [424, 450, 520, 556, 566, 577], "03": [447, 556, 566, 577], "03d516c6": 542, "04": [450, 463, 553, 556, 563, 566, 574, 577], "041688": 509, "041721": 509, "041739": 509, "0462": 533, "049886": 509, "04e": 479, "05": [481, 556, 566, 577], "06": 447, "062624": 542, "067200": 533, "07": [543, 556, 566, 577], "08": 541, "0a": 479, "0b": [385, 530], "0b000000": 539, "0b00000000": 479, "0b000011": 539, "0b000100": 539, "0b000111": 539, "0b0011": 384, "0b01101101": 479, "0b01111000": 479, "0b10": 529, "0b100": 529, "0b10000000": 479, "0b1001011": 529, "0b101": 529, "0b1010": [384, 385], "0b10110110": 479, "0b111": 529, "0b11100001": 479, "0b1111": 384, "0b11111110": 479, "0b11111111": 479, "0baz": 507, "0c": 450, "0cleanup": 454, "0dev": 533, "0e": 479, "0f": 490, "0f00000000": 490, "0f3f800000": 490, "0f3fb8aa3b": 490, "0f42d20000": 490, "0f7f800000": 490, "0fb5bfbe8e": 490, "0fbf317200": 490, "0fc2d20000": 490, "0ffh": 385, "0s": 479, "0th": 462, "0u": 519, "0x": [385, 405, 445, 479, 519, 530], "0x0": [386, 393, 402, 494, 507], "0x00": [386, 413, 450, 494, 522], "0x000": 386, "0x0000": 502, "0x00000000": [386, 519], "0x0000000000000000": 386, "0x0000000000000002": 451, "0x0000000000000010": 519, "0x000000000059c583": 451, "0x0000000000d953b3": 451, "0x0000000000dc8872": 451, "0x00000000016677e0": 451, "0x00000000ffefffff": 385, "0x00000001": 519, "0x00000002": 519, "0x00000003": 519, "0x00000004": 519, "0x00000009": 519, "0x00000067": 519, "0x0000006e": 519, "0x000000c9": 405, "0x000000ff": 386, "0x00000100": [386, 519], "0x00000110": 519, "0x00000120": 519, "0x00000130": 519, "0x00000140": 519, "0x00000147": 519, "0x00000150": 519, "0x00000200": 386, "0x00000233": 405, "0x000003bd": 519, "0x000003cd": 519, "0x000003f3": 519, "0x000003ff": 402, "0x00001000": 519, "0x00001023": 519, "0x00001203": 519, "0x00001c00": 402, "0x00002000": 519, "0x00002023": 519, "0x00002200": 519, "0x000034f0": 519, "0x00003500": 519, "0x00003550": 519, "0x00007fff": 402, "0x00007ffff7ed40a9": 451, "0x0001023": 519, "0x0002023": 519, "0x0003": 502, "0x0007": 502, "0x0008": 502, "0x001": 386, "0x0010": 502, "0x0011": 502, "0x0012": 502, "0x0013": 502, "0x0014": 502, "0x002": 386, "0x0020": 502, "0x0021": 502, "0x0022": 502, "0x0023": 502, "0x0024": 502, "0x003": 386, "0x0030": 502, "0x0031": 502, "0x0032": 502, "0x0033": 502, "0x0034": 502, "0x004": 386, "0x0040": 502, "0x0041": 502, "0x0042": 502, "0x0043": 502, "0x0044": 502, "0x0045": 502, "0x0046": 502, "0x005": 386, "0x0050": 502, "0x0051": 502, "0x0052": 502, "0x0053": 502, "0x0054": 502, "0x0055": 502, "0x0056": 502, "0x006": 386, "0x0068": 502, "0x0069": 502, "0x007": 386, "0x0070": 502, "0x0071": 502, "0x0072": 502, "0x0073": 502, "0x0074": 502, "0x0075": 502, "0x0076": 502, "0x0077": 502, "0x0078": 502, "0x0079": 502, "0x007a": 502, "0x007b": 502, "0x008": 386, "0x009": 386, "0x00a": 386, "0x00b": 386, "0x00c": 386, "0x00d": 386, "0x00e": 386, "0x00f": 386, "0x00ff0000": 402, "0x01": [386, 450, 494, 519, 531, 543], "0x010": 386, "0x011": 386, "0x01f": 386, "0x02": [386, 450, 494, 519], "0x020": 386, "0x021": 386, "0x022": 386, "0x023": 386, "0x024": 386, "0x025": 386, "0x026": 386, "0x027": 386, "0x028": 386, "0x029": 386, "0x02a": 386, "0x02b": 386, "0x02c": 386, "0x02d": 386, "0x02e": 386, "0x02f": 386, "0x03": [386, 494, 522], "0x030": 386, "0x031": 386, "0x032": 386, "0x033": 386, "0x034": 386, "0x035": 386, "0x04": [386, 494, 519, 543], "0x04000000": 519, "0x05": [386, 494, 522], "0x06": [386, 494, 522], "0x07": [386, 494, 522], "0x08": [386, 494, 519], "0x09": 494, "0x0a": [413, 494, 522], "0x0abcd": 479, "0x0b": [494, 522], "0x0b17c0de": 393, "0x0c": [450, 494], "0x0d": 522, "0x0e": 522, "0x0f": 522, "0x0fffffff": 543, "0x1": [384, 386, 402, 507, 519, 522], "0x10": [384, 424, 494, 519, 522], "0x100": [494, 519, 520], "0x1000": [502, 519], "0x100000f24": 442, "0x12": [42, 129, 227, 322], "0x1234": 519, "0x12345678": 519, "0x13": 494, "0x14c": [495, 581], "0x16": 494, "0x1603020": 451, "0x16151f0": 451, "0x16677e0": 451, "0x1afp": 385, "0x1b": 393, "0x1c2": 456, "0x1f84": 442, "0x1ff00": 385, "0x2": [384, 402, 507, 522], "0x20": 519, "0x200": [519, 520], "0x2000": 519, "0x2001": 386, "0x2413bc": 540, "0x29273623": 519, "0x2a": 392, "0x3": [384, 402, 507, 522], "0x3000": 433, "0x3039": 507, "0x3500000001652748": 451, "0x3c00": 385, "0x3f": 456, "0x3f800000": 385, "0x3fe9": 519, "0x3fea": 519, "0x3feaed548f090ce": [554, 564], "0x3feb": 519, "0x3fed": 519, "0x4": [384, 402, 522], "0x40": 519, "0x400": [519, 520], "0x4000": [433, 519], "0x40000000": 484, "0x400480": 442, "0x400486": 442, "0x400490": 442, "0x4004a0": 442, "0x4004be": 442, "0x4004d0": 442, "0x4200": 519, "0x432ff973cafa8000": 479, "0x494e494d": 500, "0x4d544f4e": 500, "0x5": [402, 494, 522], "0x5cf8c24cdb18bdac": 450, "0x6": [36, 126, 221, 315, 402], "0x60": 413, "0x601028": 442, "0x60500020": 581, "0x6fff4c02": 456, "0x7": 402, "0x70b298": 540, "0x744e60": 481, "0x744ea0": 481, "0x7c000000": 519, "0x7f": [479, 529], "0x7fefffff00000000": 385, "0x7fefffffffffffff": 385, "0x7fff": 386, "0x7ffff7ed404c": 451, "0x7fffffff": 479, "0x7fffffffe018": 451, "0x7fffffffe040": 451, "0x8": [384, 402, 494, 507], "0x80": [413, 519], "0x800": 519, "0x80000000": [386, 519], "0x82638293": 519, "0x8664": 495, "0x9": [402, 507], "0x90": 524, "0xa": [386, 402, 507], "0xabcdef00": 524, "0xb": 402, "0xc": [393, 402], "0xc3": 529, "0xd": [393, 402, 494], "0xe": 393, "0xe413754a191db537": 450, "0xe8": 529, "0xeffe0000": 495, "0xf": [384, 529], "0xfc": 386, "0xfe": 386, "0xff": [384, 385, 386, 479, 529], "0xff00": 385, "0xffbef174": 540, "0xffefffff": 385, "0xffefffff00000000": 385, "0xfff": 384, "0xffff": [384, 385, 386, 479, 495, 522], "0xffff000000000002": 522, "0xffffffff": [385, 386, 393, 479], "0xffffffffffefffff": 385, "0xffffffffffff00ff": 385, "0xffffffffffffff00": 385, "0xh": 479, "0xk": 479, "0xl": 479, "0xl00000000000000004000900000000000": 479, "0xm": 479, "0xxxxxxxxx": 519, "10": [36, 42, 126, 129, 221, 227, 315, 322, 385, 386, 389, 391, 393, 402, 404, 413, 429, 434, 442, 446, 450, 451, 462, 463, 472, 479, 482, 490, 491, 492, 495, 499, 507, 515, 519, 520, 529, 539, 540, 542, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 571, 573, 574, 575, 576, 577, 578], "100": [99, 185, 282, 381, 386, 390, 404, 429, 434, 461, 479, 481, 507, 519, 538, 540, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576], "1000": [481, 499, 505, 507, 551, 560, 570, 571], "10000": [424, 489], "10010001": 479, "1003": 413, "1011": 393, "102": [385, 429, 542], "1020": [402, 479], "1023": 402, "1024": [402, 445, 479, 499, 517, 538], "1025": 402, "102593": 542, "1026": 402, "102kb": 445, "103": [386, 542], "1030": 479, "10303": 513, "104": 385, "106": 385, "108055": 542, "1083": 542, "109": 429, "10ms": 481, "10x": 446, "11": [36, 99, 126, 221, 282, 315, 381, 384, 386, 390, 393, 400, 402, 429, 442, 446, 451, 479, 490, 492, 495, 499, 507, 517, 519, 520, 529, 538, 539, 541, 542, 544, 549, 550, 556, 557, 558, 559, 566, 567, 568, 569], "110": 542, "1108": [559, 569], "111": [490, 533], "112": [386, 479, 518], "1129": [559, 569], "1183": [559, 569], "1184": [559, 569], "12": [185, 384, 385, 386, 393, 400, 402, 404, 405, 413, 429, 433, 442, 450, 451, 463, 479, 481, 484, 490, 492, 495, 497, 499, 502, 507, 519, 524, 529, 533, 534, 539, 544, 556, 557, 558, 559, 566, 567, 568, 569], "120": [386, 451, 479, 554, 564, 575], "1200": 481, "1210": [559, 569], "1218": [559, 569], "122": 479, "1222": 533, "123": [479, 489, 519, 542, 556, 557, 566, 567, 577, 578], "1234": [385, 442], "12345": [472, 507, 509], "1234567": 479, "123908342": 507, "123kkk": 445, "123mb": 445, "124": 542, "125": [479, 509, 542], "125000e": 479, "126744": 542, "127": [386, 479], "127715": 542, "128": [10, 108, 192, 289, 384, 386, 392, 393, 402, 450, 479, 490, 500, 502, 507, 539], "128974848": 445, "128mib": 456, "1298": 507, "129894": 511, "129907": 511, "129920": 511, "129923": 511, "129926": 511, "129934": 511, "129941": 511, "129996": 507, "12x10": 479, "13": [7, 105, 189, 286, 384, 386, 393, 402, 429, 450, 451, 479, 490, 492, 495, 519, 535, 538, 539, 540, 543, 557, 558, 559, 567, 568, 569], "130": 542, "130111": 511, "130179": 511, "130181": 511, "130213": 511, "130214": 511, "130228": 511, "130229": 511, "130249": 511, "130266": 511, "130292": 511, "130304": 511, "130306": 511, "130309": 511, "130310": 511, "130312": 511, "130313": 511, "130318": 511, "130320": 511, "130323": 511, "130328": 511, "130329": 511, "130353": 511, "130355": 511, "130388": 511, "130415": 511, "130425": 511, "130430": 511, "130435": 511, "130465": 511, "130629": 511, "130630": 511, "1329373163": 479, "133700e": [553, 563, 574], "134": 507, "138": [507, 542], "139": 542, "139563": 542, "139605": 542, "139607": 542, "139610": 542, "139612": 542, "139617": 542, "14": [99, 381, 386, 393, 402, 442, 446, 451, 490, 492, 517, 519, 539, 542, 552, 562, 573], "1402264": 511, "14159": 386, "142": 542, "1439": [559, 569], "144": 479, "1444": 507, "1459": [559, 569], "147345": 542, "14740650423002898831": 479, "1491": 542, "15": [36, 42, 99, 126, 129, 221, 227, 315, 322, 381, 384, 386, 393, 394, 404, 413, 442, 450, 451, 463, 479, 484, 489, 490, 492, 499, 507, 519, 520, 522, 529, 543], "15155600": 542, "1523017872": 481, "1530": 542, "1564": 542, "1565878005": 479, "15915494": 385, "15915494309189532": 385, "1592": 385, "159279": 542, "15mb": 509, "15th": 384, "16": [7, 12, 20, 31, 33, 36, 37, 38, 42, 63, 66, 72, 83, 99, 105, 109, 126, 127, 129, 143, 146, 157, 171, 185, 189, 193, 198, 199, 200, 201, 205, 209, 210, 211, 212, 216, 218, 221, 223, 227, 246, 249, 256, 268, 282, 286, 291, 299, 310, 312, 315, 317, 318, 322, 343, 346, 353, 365, 381, 383, 384, 385, 386, 390, 392, 393, 402, 405, 413, 429, 446, 449, 451, 456, 463, 467, 479, 481, 484, 490, 492, 494, 495, 502, 507, 513, 515, 517, 519, 522, 524, 533, 537, 539, 543, 544, 558, 568], "160": [386, 479], "1600": 479, "16000": 499, "161": 451, "164": 542, "16628590": 542, "16777216": 479, "16777217": 479, "1681": 542, "16b": 392, "16bit": [558, 568], "16gb": 467, "16mib": 456, "17": [386, 393, 429, 445, 450, 451, 462, 463, 479, 492, 519, 529, 559, 569], "1723": 542, "18": [386, 393, 429, 442, 450, 451, 490, 492, 519, 539], "187": 542, "188": 542, "18th": 462, "19": [386, 393, 451, 461, 463, 467, 479, 492, 519, 534, 539], "191": 386, "1967": 542, "1970": 413, "1980": 512, "1984": 542, "1989": 461, "1991": 512, "1994": 461, "19941610": 500, "19950410": 502, "19950623": 500, "19950814": 500, "19951122": 502, "19960307": [495, 500], "19961031": 502, "19970604": 500, "19970605": 495, "19970606": 495, "19990604": 500, "19990903": [495, 502], "1a": 499, "1afp10": 385, "1b": 481, "1ci": 429, "1cleanup": 454, "1d": 384, "1d_array": 384, "1g": [445, 468], "1gb": 509, "1s100000s11010s10100s1111s1010s110s11s1s": 507, "1svn": 472, "1u": 519, "20": [44, 45, 324, 325, 385, 386, 393, 402, 409, 429, 450, 451, 461, 463, 469, 479, 481, 487, 490, 492, 507, 519, 533, 543, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "200": [386, 541], "2000": [384, 386, 507, 540], "20000": [524, 550], "200000e": [555, 565, 576], "20000404": 500, "2002": 402, "20030901": 500, "2004": 402, "20040203": 502, "2008": [386, 479, 512], "20091201": [495, 500], "2010": 400, "2011": [509, 512], "2012": [456, 507, 544], "2013": [483, 495, 507], "20140508": 500, "20140516": 495, "2015": [465, 481, 512], "2016": [446, 465, 509, 512, 541], "2017": [400, 456, 460, 463, 464, 465, 481, 512, 513, 543], "2018": [479, 520, 541], "2019": [509, 511], "2047": 384, "2048": [384, 402, 481, 499, 517], "21": [45, 325, 385, 386, 393, 402, 451, 466, 479, 490, 492, 509, 519, 539, 542], "2100": 386, "212": 397, "213": 397, "213336": 542, "214": 397, "2147483648": [479, 490], "215": 397, "216": 397, "217": 397, "2192": 533, "22": [386, 393, 451, 479, 490, 492, 519, 527, 539, 542], "2200": 386, "2200g": 386, "224": 386, "225": 479, "225708": 542, "23": [384, 386, 393, 402, 479, 519, 539, 551, 561, 572], "231150": 519, "231154": 519, "23333": 459, "234": [385, 553, 563, 574], "234000e": [553, 563, 574], "23406408": 451, "23421e": 479, "234e2": 385, "235": 479, "24": [384, 386, 393, 402, 429, 449, 479, 490, 507, 509, 513, 516, 519, 539, 544, 554, 564, 575], "240": [552, 562, 573], "2400g": 386, "242": [456, 542], "2468601609": 479, "247": 479, "248": 507, "24e8": 507, "24mb": 481, "25": [386, 393, 479, 505, 507, 533, 539, 541], "250": 509, "2500": 386, "250000e": 484, "254": 479, "255": [384, 385, 402, 451, 479, 519, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 577], "256": [384, 385, 386, 402, 456, 479, 492, 517, 519], "257": [402, 479], "258": 402, "2590": 395, "25mb": 481, "26": [386, 393, 479, 490, 519], "260": 386, "2601000000": 542, "26096": 542, "260x": 386, "2692": 542, "27": [386, 393, 490, 507], "271": 542, "272": [386, 429], "28": [386, 393, 450, 479, 485, 490, 543], "281474976710654": 522, "2817": 507, "2882400000": 524, "29": [386, 393, 402, 479, 520, 539, 542], "290": 386, "2900": 479, "290x": 386, "2919": 507, "2963": 542, "297": 429, "2acr96qjuqsym": 452, "2ap3": 456, "2b": 481, "2d": [384, 392], "2d_array": 384, "2d_msaa": 384, "2d_msaa_array": 384, "2gb": 520, "2n": 479, "2nd": [479, 481, 507, 529], "2u": 519, "2x": [465, 481, 520], "2x3x4": 479, "30": [37, 127, 223, 317, 384, 386, 393, 402, 479, 481, 490, 519, 520, 533, 539, 543, 556, 557, 558, 559, 566, 567, 568, 569, 574, 577, 578], "300": [409, 429, 479, 573], "3000": [386, 507], "302": 534, "305064": 453, "306": 429, "3069": 542, "30pm": 544, "31": [36, 81, 126, 169, 221, 266, 315, 363, 384, 386, 393, 402, 479, 520, 539], "31337": [553, 563, 574], "314": 429, "3148790418": 479, "31511": 481, "315994": 542, "32": [8, 13, 17, 18, 20, 29, 31, 33, 36, 37, 53, 66, 83, 84, 85, 86, 100, 101, 106, 110, 114, 115, 121, 126, 127, 131, 146, 171, 190, 194, 202, 203, 205, 214, 216, 218, 221, 223, 249, 268, 287, 292, 296, 297, 299, 308, 310, 312, 315, 317, 333, 346, 365, 366, 367, 383, 384, 385, 386, 390, 392, 393, 395, 400, 402, 405, 413, 415, 429, 446, 447, 449, 454, 455, 456, 463, 464, 467, 477, 479, 481, 484, 490, 494, 495, 497, 500, 502, 513, 514, 517, 519, 520, 522, 527, 529, 531, 537, 539, 542, 543, 556, 558, 560, 566, 568, 570, 577, 579], "32088": 542, "3213": 507, "3221225472": 445, "324": 451, "32768": 499, "32bit": [558, 568], "33": [393, 490, 515, 534, 539], "3340b": 386, "335": 495, "3363": 542, "339450": 533, "34": [393, 450, 539], "345": 507, "35": [386, 393, 429, 479, 507], "350": 510, "350914": 463, "351": [386, 510], "352": [386, 510], "357": 510, "358": 510, "359": 510, "36": [386, 393, 490, 520], "360": [510, 542], "362": 510, "363": 510, "36652": 542, "367": 510, "37": [393, 402, 479, 542], "370": 510, "371": 510, "3714": 542, "372": 510, "376": 510, "38": [393, 397, 479, 542], "380": 386, "3800": 386, "381": 542, "3811": 481, "3827": 481, "383": 386, "384": 386, "385": 386, "387": 479, "39": [386, 393, 479, 490], "392": 507, "39331465": 542, "39337525": 542, "3963": 481, "397": 451, "399": [429, 542], "3ci": 429, "3d": [384, 386], "3dnow": [558, 568], "3dnowa": [558, 568], "3g": 445, "3gb": 464, "3rd": [479, 481, 546], "3u": 519, "3x4": 479, "40": [386, 393, 402, 450, 456, 462, 479, 507, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "400": [434, 552, 562], "4000": [384, 386], "40000": 434, "40219": 467, "403": 533, "40535375": 542, "4095": [384, 479, 481, 499], "4096": [384, 479, 499, 502], "4097": 499, "4098": 499, "4099": 499, "40th": [551, 561, 572], "41": [393, 479], "410": 479, "415": 386, "416": 386, "4167": 481, "41m": 445, "42": [392, 393, 402, 404, 405, 424, 429, 442, 449, 450, 456, 479, 482, 484, 490, 507, 551, 555, 556, 560, 561, 565, 566, 570, 572, 576, 577, 579], "421": 479, "423325": 533, "42763": 513, "43": [386, 393, 402, 556, 566, 577], "434": 507, "4377547752858689819": 479, "44": [386, 393, 429, 479, 499, 540], "446": 542, "447": 386, "448": 386, "449": 386, "45": [393, 490, 551, 553, 561, 563, 572], "450": 386, "451": 386, "452": 386, "453": 386, "454": 386, "455": 386, "456": [533, 556, 566, 577], "457": 386, "458": 386, "4584": 542, "459": 386, "4591870180066957722": 385, "46": [393, 542, 556, 566, 577], "460": 386, "463": 386, "463331": 542, "463340": 542, "464": [386, 533], "47": [386, 393, 479, 520, 529, 534], "470": 386, "470948": 542, "472618": 542, "474": 533, "48": [386, 393, 402, 429, 502, 537], "480": 386, "49": [393, 507], "4b": 481, "4gib": 456, "4k": 402, "4kib": 499, "4s": 392, "4th": [402, 479], "4u": 519, "50": [393, 429, 463, 520, 533, 538], "500": 507, "5000": 386, "503": 510, "5046": 507, "506": [533, 542], "507": 510, "508": [479, 533], "51": [36, 126, 221, 315, 386, 393, 429, 466, 534], "5100": 386, "511": 386, "512": [386, 479, 499, 517], "51440360": 542, "52": [386, 393, 479, 534], "5200": 386, "521": 510, "527": 510, "53": [393, 479, 499], "5312": 481, "532": 507, "5321": 509, "54": [393, 429, 533, 542], "5434426023268520": 542, "5434426023523052": 542, "5434426029925386": 542, "5434426030031128": 542, "5434426046951388": 542, "5434426047282020": 542, "5434426047857332": 542, "5434426047984152": 542, "5434426048036584": 542, "5434426048042292": 542, "5434426048055056": 542, "5434426048067316": 542, "548": 510, "549": 510, "55": [393, 479, 540], "554": 510, "56": [386, 393], "563098": 533, "57": 393, "58": 393, "58421550": 542, "59": 402, "590": 395, "59620e187c6ac38b36382685ccd2b63b": 533, "5e": 479, "5l": 447, "5rqxku": 542, "5th": 479, "5u": 519, "5x": [465, 520], "60": 499, "600": 434, "6000": 386, "60000": 434, "603": 510, "61": 393, "610": 429, "62": [393, 520], "621": 510, "626": 509, "62635": 542, "626455": 542, "627": 510, "628": 510, "6295592": 442, "63": [36, 126, 221, 315, 386, 393, 520, 524, 529], "638838075": 479, "64": [6, 9, 17, 18, 30, 52, 84, 86, 102, 104, 107, 114, 115, 122, 188, 191, 202, 203, 215, 285, 288, 296, 297, 309, 332, 366, 383, 384, 385, 386, 390, 392, 393, 395, 400, 402, 405, 415, 424, 429, 431, 446, 447, 454, 455, 456, 462, 463, 464, 479, 481, 484, 489, 490, 494, 495, 497, 502, 507, 513, 517, 518, 519, 520, 522, 524, 527, 529, 537, 539, 542, 551, 559, 560, 561, 569, 570, 572, 579], "648": 510, "649": 510, "64bit": [479, 484, 514], "64k": 495, "65": [386, 393, 402, 429], "654": 510, "65500": 385, "65535": [384, 479], "65600": 385, "66": [386, 393], "66ghz": 467, "67": [393, 551, 561, 572], "672368": 542, "68": 393, "680": 490, "69819": 542, "6b": 481, "6th": 479, "70": [402, 533, 540, 544], "700": [572, 579], "7000": 386, "7004155349499253778": 479, "703": 461, "705": 461, "7050b": 386, "71": 479, "7100": 386, "7150b": 386, "72": 429, "7200p": 386, "725": 507, "7300": 386, "7350b": 386, "74": [479, 520, 534], "7400p": 386, "743265": 520, "744287": 520, "75": [479, 507, 533, 540, 542], "7500": [386, 481], "754": [386, 479], "756": 510, "7600p": 386, "7625886": 520, "7646": 507, "7651369219802541373": 479, "77": [481, 522], "7790": 386, "77x": 520, "78": [522, 542, 556, 566, 577], "789": [556, 566, 577], "79": 463, "7942": 481, "7976922776554302e308": 385, "7976931348623157e308": 385, "7e15": 445, "7th": 479, "7ykb2k5f": 426, "80": [393, 404, 429, 434, 479, 502], "8000": 499, "8011": [467, 545], "8014": 467, "80386": [390, 558, 568], "80f351b51825": 453, "80x86": 467, "80x87": 402, "8191": 499, "83": 542, "83348": 533, "841471": [554, 564, 575], "85": 542, "8500b": 386, "8500p": 386, "86": [507, 533], "8600b": 386, "8600p": 386, "87": [402, 507], "8700b": 386, "8700p": 386, "8770": 386, "8780p": 386, "88": [386, 542], "8800b": 386, "8800p": 386, "89": 533, "896800": 533, "8gib": 456, "8x": 520, "90": [404, 533, 542], "900": 429, "9000": 499, "9010": 386, "9015": 481, "90p": 542, "91": 461, "92": 404, "9210": 386, "928": 533, "93": 479, "930803": 495, "9410": 386, "96": 513, "9600p": 386, "9630p": 386, "9633790": 542, "97": 479, "9700p": 386, "9730p": 386, "9800p": 386, "9830p": 386, "989": 484, "99": [473, 485, 494, 519, 521], "9990": 467, "9994": 467, "99p": 542, "9_": [385, 405], "9a": [385, 405], "9b": 481, "_0": [479, 484], "__": 507, "__1": 420, "__________": 507, "______________________": 507, "______________________________________": 507, "__________________________________________________________": 507, "__aeabi_": 447, "__annot": 479, "__anon_expr": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "__apple_nam": 519, "__apple_namespac": 519, "__apple_objc": 519, "__apple_typ": 519, "__asm": 429, "__atomic_compare_exchang": 390, "__atomic_compare_exchange_n": 390, "__atomic_exchang": 390, "__atomic_exchange_n": 390, "__atomic_fetch_add_n": 390, "__atomic_fetch_and_n": 390, "__atomic_fetch_nand_n": 390, "__atomic_fetch_or_n": 390, "__atomic_fetch_sub_n": 390, "__atomic_fetch_xor_n": 390, "__atomic_load": 390, "__atomic_load_n": 390, "__atomic_stor": 390, "__atomic_store_n": 390, "__attribute__": [446, 519, 541], "__bitcod": 393, "__bss": 430, "__builtin_eh_return": 454, "__builtin_expect": 395, "__builtin_longjmp": 454, "__builtin_setjmp": 454, "__builtin_setrnd": 513, "__builtin_trap": 481, "__c_specific_handl": 454, "__chkstk": 456, "__clang__": 446, "__clear_cach": 479, "__cuda__": 446, "__cuda_arch__": 446, "__cuda_ftz": 490, "__cudacc__": 446, "__cxa_allocate_except": 454, "__cxa_begin_catch": 454, "__cxa_call_unexpect": 454, "__cxa_demangl": 460, "__cxa_end_catch": 454, "__cxa_rethrow": 454, "__cxa_throw": 454, "__cxx11": 420, "__cxx_": 542, "__cxx_global_var_init": 542, "__cxxframehandler3": 454, "__cxxthrowexcept": 454, "__data": [430, 479], "__declspec": [554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569], "__dwarf": 519, "__eh_fram": 402, "__except": 454, "__fastcal": 479, "__gcmap_": 461, "__global__": 446, "__gxx_personality_v0": 454, "__has_attribut": 527, "__i386__": [560, 570, 579], "__image_info": 479, "__imp_": 479, "__internal_accurate_powf": 490, "__jit_debug_register_cod": 451, "__kmpc_fork_cal": 479, "__libunwind_config": 454, "__llvm": [393, 515], "__llvm_coverage_map": 450, "__llvm_covmap": 450, "__llvm_deoptim": 479, "__llvm_faultmap": 458, "__llvm_memcpy_element_unordered_atomic_": 479, "__llvm_memmove_element_unordered_atomic_": 479, "__llvm_memset_element_unordered_atomic_": 479, "__llvm_stackmap": 522, "__main": 540, "__morestack": 518, "__next__": 449, "__nv_isinff": 490, "__nv_isnanf": 490, "__nv_powf": 490, "__nv_truncf": 490, "__nvcc__": 446, "__objc": 479, "__objc_imageinfo": 479, "__profn_foo": 450, "__remark": [410, 515], "__scudo_default_opt": 517, "__stack_chk_fail": [479, 484], "__stack_chk_guard": 479, "__stdcall": 479, "__sync_fetch_and_add_n": 390, "__sync_fetch_and_and_n": 390, "__sync_fetch_and_max_n": 390, "__sync_fetch_and_min_n": 390, "__sync_fetch_and_nand_n": 390, "__sync_fetch_and_or_n": 390, "__sync_fetch_and_sub_n": 390, "__sync_fetch_and_umax_n": 390, "__sync_fetch_and_umin_n": 390, "__sync_fetch_and_xor_n": 390, "__sync_lock_test_and_set_n": 390, "__sync_synchron": 390, "__sync_val_compare_and_swap_n": 390, "__syncthread": 490, "__text": [402, 430, 533], "__text_exec": 430, "__tri": 454, "__unwind_info": 402, "__vec__": 513, "__vectorcal": 479, "__xray_log_fin": 541, "__xray_log_flushlog": 541, "__xray_log_init_mod": 541, "__xray_log_process_buff": 541, "__xray_log_register_mod": 541, "__xray_log_select_mod": 541, "__xray_log_set_buffer_iter": 541, "__xray_patch": 541, "_address_": 520, "_aligna": 519, "_args_": 401, "_attack": 520, "_b128": 383, "_b16": 383, "_b256": 383, "_b32": 383, "_b512": 383, "_b64": 383, "_b8": 383, "_binary_": 431, "_bool": [557, 567, 578], "_bootstrap_default_passthrough": 388, "_buffer": 386, "_crit_edg": 479, "_cuda_ftz": 490, "_cxxthrowexcept": 454, "_dcleanup": 454, "_division_by_zero": 386, "_dpp": [383, 386], "_e32": [383, 386], "_e64": [383, 386], "_end": 431, "_except_handler3": 454, "_except_handler4": 454, "_f16": 383, "_f32": 383, "_f64": 383, "_flag": 401, "_flags_": 401, "_flags_relwithdebinfo": 398, "_function_nam": 456, "_i": 434, "_i16": 383, "_i32": 383, "_i64": 383, "_i8": 383, "_inexact": 386, "_info": 386, "_init": 386, "_inv": 386, "_invalid_oper": 386, "_invl": 386, "_is_": 479, "_m4enum": 479, "_main": [442, 491, 581], "_name_": 401, "_overflow": 386, "_p1": 519, "_p3": 519, "_padding_record": 494, "_r0h": 454, "_regoffset": 531, "_ri": 529, "_rr": 529, "_runtim": 522, "_sdwa": [383, 386], "_segment_buff": 386, "_segment_ptr": 386, "_segment_wavefront_offset": 386, "_size": [386, 431], "_sourc": 386, "_source_dir": 400, "_start": 431, "_tag": [573, 574, 575, 576, 577, 578], "_ti": 455, "_u16": 383, "_u32": 383, "_u64": 383, "_u8": 383, "_underflow": 386, "_unwind_resum": 454, "_valid_": 520, "_var": 401, "_vol": 386, "_wavefront_offset": 386, "_win32": [525, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569], "_without_": 463, "_workgroup_count_i": 386, "_workgroup_count_x": 386, "_workgroup_count_z": 386, "_x": 386, "_y": 386, "_z": 386, "_z1f1eii": 513, "_z3bari": 419, "_z3bazv": 442, "_z3foov": [419, 479], "_z4leaki": 520, "_zero": 386, "_zfoov": 479, "_zn1a1nei": 479, "_zst1a": 537, "_ztid": 479, "_ztii": 479, "_zts1a": [479, 537], "_zts1b": 537, "_zts1c": 537, "_zts1d": 537, "_ztv1a": 537, "_ztv1b": 537, "_ztv1c": 537, "_ztv1d": 537, "_ztv3bar": 405, "_ztv3foo": 405, "a1": [402, 410, 411, 432, 452, 491, 529, 537, 538], "a10": 386, "a12": 386, "a15": 468, "a16": [3, 7, 286], "a2": [402, 410, 411, 432, 452, 479, 491, 529, 537, 538], "a3": [402, 410, 411, 432, 452], "a32": 392, "a4": [386, 402], "a57": 447, "a6": 386, "a64": 392, "a8": [386, 475], "a9": [386, 471], "a_ctor_bas": 405, "aa": [390, 540], "aad": 402, "aad8i8": 402, "aapc": 479, "aarch32": 447, "aarch64": [392, 399, 431, 460, 463, 465, 468, 479, 484, 511, 517, 522, 527, 539, 541], "aarch64registerinfo": 484, "abandon": [465, 507, 553, 563], "abbrev": [393, 423], "abbrevi": [386, 404, 415, 423, 480, 511], "abbrevid": 393, "abbrevop0": 393, "abbrevop1": 393, "abbrevwidth": 393, "abc": 479, "abcd": 393, "abcdef123456": 463, "abi": [392, 399, 400, 413, 420, 449, 452, 456, 457, 463, 465, 470, 471, 472, 477, 479, 490, 504, 505, 513, 519, 520, 522, 535, 537, 539, 554, 558, 559, 560, 564, 568, 569, 570, 575, 579], "abil": [402, 403, 443, 445, 451, 455, 459, 461, 479, 486, 507, 508, 509, 519, 520, 544, 551, 555, 556, 557, 561, 565, 566, 567, 572, 576, 577, 578], "abl": [386, 389, 391, 397, 402, 405, 413, 429, 431, 445, 446, 450, 452, 457, 459, 461, 462, 463, 465, 471, 474, 477, 478, 479, 480, 482, 485, 491, 503, 507, 509, 512, 513, 515, 516, 519, 520, 521, 522, 524, 529, 536, 538, 539, 540, 541, 544, 545, 547, 554, 555, 556, 559, 560, 564, 565, 566, 569, 570, 575, 576, 577, 579], "abnorm": [459, 525], "abort": [397, 402, 404, 454, 479, 507, 529], "abort_on_error": 517, "about": [383, 385, 386, 387, 389, 390, 393, 394, 398, 400, 401, 402, 404, 405, 409, 410, 413, 415, 427, 428, 429, 430, 433, 434, 436, 437, 445, 446, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 476, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 495, 497, 498, 499, 502, 503, 504, 505, 506, 507, 513, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 527, 528, 529, 530, 533, 534, 536, 538, 539, 540, 541, 542, 545, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "abov": [383, 384, 385, 386, 389, 390, 392, 393, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 413, 429, 445, 446, 449, 452, 455, 457, 458, 459, 460, 461, 462, 463, 465, 466, 469, 470, 471, 472, 473, 474, 476, 479, 482, 483, 484, 485, 486, 488, 489, 491, 492, 495, 505, 507, 508, 509, 512, 514, 516, 518, 519, 520, 521, 522, 524, 529, 534, 535, 537, 539, 540, 542, 544, 546, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "abs": [39, 41, 128, 224, 226, 319, 321, 490], "abs8": 456, "abs_f": 531, "abs_fp32": 531, "abs_fp64": 531, "abs_fp80": 531, "absenc": [397, 402, 429, 456, 520], "absent": [386, 507], "absl": 420, "absolut": [99, 185, 282, 381, 384, 394, 400, 404, 405, 418, 430, 431, 433, 455, 463, 465, 471, 479, 491, 495, 507, 515, 535, 539, 540, 543], "absolute_express": [37, 127, 223, 317], "absolute_tsc": 543, "absolutesymbol": 491, "abstract": [402, 404, 452, 454, 457, 473, 480, 482, 492, 505, 507, 519, 531, 539, 540, 544, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 567, 568, 569, 572, 574, 575, 576, 577, 578], "absv16i8": 539, "absv1i64": 539, "abu": 413, "abus": 507, "ac": [481, 511], "acc": 507, "acceler": [407, 423, 472, 497, 560, 570, 579], "accept": [384, 386, 401, 403, 404, 405, 418, 420, 430, 431, 445, 448, 449, 452, 453, 456, 457, 460, 463, 464, 465, 466, 472, 473, 479, 481, 486, 489, 490, 506, 507, 520, 523, 529, 530, 535, 550], "access": [36, 126, 221, 315, 384, 385, 386, 389, 390, 392, 400, 413, 416, 418, 430, 431, 445, 448, 449, 453, 454, 455, 459, 461, 462, 463, 464, 465, 467, 481, 483, 484, 488, 490, 491, 492, 493, 497, 499, 502, 505, 506, 507, 513, 517, 519, 520, 522, 523, 524, 527, 529, 530, 536, 538, 539, 540, 541, 544, 547, 553, 557, 560, 563, 567, 570, 578, 579], "accessor": [402, 519, 540, 552, 562], "accessti": 479, "accessty1": 479, "accessty2": 479, "accident": [404, 445, 491, 507, 525, 540], "accommod": [393, 402, 456, 479, 490], "accompani": 515, "accomplish": [452, 461, 473, 500, 505, 507, 520, 551, 561, 572], "accord": [386, 393, 394, 429, 445, 454, 461, 465, 473, 476, 479, 484, 499, 507, 511, 512, 514, 522, 524, 539, 544, 553, 563], "account": [399, 403, 433, 448, 452, 461, 467, 473, 479, 487, 489, 506, 509, 516, 520, 541, 542, 546, 547], "accqual": 386, "accumul": [481, 505, 519, 520, 538, 573, 574, 575, 576, 577, 578], "accumulateconstantoffset": 489, "accur": [386, 389, 395, 418, 424, 429, 461, 465, 469, 482, 502, 505, 509, 513, 519, 559, 560, 569, 570, 579], "accuraci": [479, 505], "ace": 525, "achiev": [390, 400, 452, 459, 460, 476, 479, 482, 512, 517, 519, 520, 525], "acknowledg": 516, "acknowledgeorcv1deprec": [548, 549, 550], "acm": [402, 461, 510], "aco": 389, "acq_rel": [386, 390, 479], "acquaint": 546, "acquir": [386, 452, 479, 481, 488, 507], "acquisit": 507, "acronym": 545, "across": [390, 392, 398, 399, 401, 402, 415, 445, 446, 449, 454, 459, 463, 465, 478, 479, 480, 481, 490, 491, 492, 500, 505, 507, 509, 519, 520, 522, 524, 531, 538, 540, 554, 560, 564, 570, 575, 579], "act": [394, 402, 404, 479, 481, 488, 489, 505, 507, 516, 519, 535], "action": [386, 395, 396, 402, 404, 449, 454, 455, 460, 463, 479, 480, 491, 492, 506, 507, 509, 516, 524, 539, 540, 543, 549, 550], "actionscript": [560, 570, 579], "activ": [389, 402, 404, 429, 431, 441, 449, 452, 453, 454, 461, 477, 479, 481, 487, 499, 507, 509, 513, 520, 522, 533, 539, 540, 545, 547, 548, 549, 550, 580], "activehardwar": 386, "actual": [7, 82, 105, 170, 189, 267, 286, 364, 382, 386, 389, 390, 392, 393, 396, 397, 401, 402, 404, 405, 409, 413, 445, 446, 449, 452, 454, 457, 458, 459, 461, 462, 463, 467, 469, 473, 478, 479, 480, 481, 483, 488, 489, 491, 495, 505, 507, 508, 509, 514, 517, 519, 520, 523, 524, 525, 529, 533, 535, 539, 540, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "actual_access": 386, "actualaccqu": 386, "acycl": [402, 444, 480, 502, 519, 539], "ad": [402, 505, 507], "ada": 454, "adapt": [446, 452, 457, 470, 487, 505, 507, 525], "adc": [386, 480, 507], "adc32mi": 531, "adc32mi8": 531, "adc32mr": 531, "adc32ri": 531, "adc32ri8": 531, "adc32rm": 531, "adc32rr": 531, "adc64mi32": 531, "adc64mi8": 531, "adc64mr": 531, "adc64ri32": 531, "adc64ri8": 531, "adc64rm": 531, "adc64rr": 531, "add": [14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 31, 32, 33, 44, 45, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 131, 195, 196, 197, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 229, 230, 293, 294, 295, 296, 297, 303, 304, 305, 306, 307, 310, 311, 312, 324, 325, 383, 386, 389, 390, 393, 394, 396, 397, 399, 400, 401, 402, 404, 405, 406, 409, 410, 413, 418, 422, 423, 429, 430, 431, 433, 442, 443, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 463, 464, 465, 466, 469, 470, 471, 473, 474, 475, 476, 481, 482, 484, 485, 486, 487, 489, 490, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 516, 519, 520, 521, 522, 524, 525, 527, 528, 529, 530, 531, 534, 535, 536, 538, 539, 540, 541, 542, 544, 545, 546, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580], "add16mi": 531, "add16mi8": 531, "add16mr": 531, "add16ri": 531, "add16ri8": 531, "add16rm": 531, "add16rr": 531, "add32mi": 531, "add32mi8": 531, "add32mr": 531, "add32ri": 531, "add32ri8": 531, "add32ri8_db": 424, "add32ri_db": 424, "add32rm": [519, 531], "add32rr": [424, 519, 531], "add32rr_db": 424, "add32rr_rev": 424, "add64i32": 424, "add64mi32": 531, "add64mi8": 531, "add64mr": 531, "add64ri32": [424, 531], "add64ri8": 424, "add64rr": 424, "add8rr": 402, "add_": 401, "add_cfg_simplif": [575, 576, 577, 578], "add_char": [572, 573, 574, 575, 576, 577, 578], "add_custom_command": 401, "add_custom_target": 401, "add_definit": 400, "add_dep": 401, "add_depend": 401, "add_execut": [400, 401], "add_gvn": [575, 576, 577, 578], "add_incom": [576, 577], "add_instruction_combin": [575, 576, 577, 578], "add_librari": 400, "add_llvm_execut": 401, "add_llvm_fuzz": 460, "add_llvm_librari": [400, 540], "add_llvm_tool": 460, "add_llvm_unittest": 400, "add_memory_to_register_promot": 578, "add_pf": 476, "add_pt": 476, "add_reassoci": [575, 576, 577, 578], "add_ri": 529, "add_rr": 529, "add_subdirectori": [400, 540], "add_to_library_group": 478, "addcom": 461, "addedcomplex": 531, "addend": [386, 479], "addenda": 447, "addendum": 545, "addfunctionast": [549, 550], "addi": [479, 529], "addimm": 402, "addincom": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "addinstselector": 539, "addintervalsforspil": 402, "addirmodul": 491, "addit": [385, 388, 389, 390, 393, 397, 398, 400, 401, 402, 403, 404, 405, 406, 410, 412, 415, 418, 425, 429, 430, 431, 433, 435, 443, 445, 446, 447, 449, 450, 452, 454, 456, 459, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 474, 477, 478, 479, 480, 481, 486, 487, 488, 489, 490, 491, 492, 493, 495, 503, 505, 507, 508, 509, 510, 511, 512, 517, 519, 520, 522, 523, 524, 525, 527, 530, 531, 534, 535, 536, 538, 539, 540, 541, 545, 552, 553, 554, 556, 557, 558, 560, 562, 563, 564, 566, 567, 568, 570, 573, 574, 575, 577, 578, 579], "addl": 520, "addlazyirmodul": 491, "addllvm": [400, 401], "addmbb": 402, "addmodul": [546, 547, 548, 549, 550, 554, 555, 556, 557, 564, 565, 566, 567], "addmoduleflag": [559, 569], "addop": 519, "addpassestoemitfil": [540, 558, 568], "addpassestoemitmc": 483, "addpdrm": 529, "addpdrr": 529, "addpreemitpass": 539, "addpreserv": 389, "addpsrm": 529, "addpsrr": 529, "addq": [424, 522], "addr": [423, 431, 432, 442, 449, 479, 520, 539, 550], "addr1": 519, "addr2": [442, 519], "addr2lin": [412, 442], "addr3": 442, "addr64": [1, 102], "addrawvalu": 475, "addreg": 402, "addregbankcoverag": 465, "addregfrm": 539, "addregisterclass": [402, 539], "address": [6, 7, 9, 10, 44, 45, 50, 52, 84, 102, 104, 105, 107, 108, 131, 135, 188, 189, 191, 192, 229, 230, 235, 285, 286, 288, 289, 324, 325, 330, 332, 366, 383, 384, 385, 389, 390, 391, 392, 393, 400, 408, 423, 429, 430, 431, 432, 433, 436, 437, 445, 446, 448, 449, 452, 454, 459, 460, 461, 465, 467, 477, 480, 481, 484, 489, 491, 493, 494, 495, 504, 505, 506, 507, 509, 517, 518, 519, 520, 522, 524, 529, 531, 538, 539, 540, 542, 543, 545, 546, 548, 549, 550, 554, 555, 556, 557, 560, 564, 565, 566, 567, 570, 575, 578, 579], "address_class": 386, "address_s": 490, "address_spac": 386, "addressis32bit": 495, "addresssanit": [479, 481, 523], "addressspac": 465, "addri": 539, "addrr": 539, "addrri": 539, "addrrr": 539, "addrsig": [388, 436, 437, 456], "addrsig_sym": 456, "addrspac": [454, 465, 479, 490, 524], "addrspacequ": 386, "addsdrm": 529, "addsdrr": 529, "addtmp": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "addtmp1": [554, 564, 575], "addtmp4": [553, 563, 574], "addtypenam": 507, "addx": 529, "addxri": 484, "adequ": [400, 461, 464, 520, 539], "adher": [403, 404, 452, 491, 507, 511, 525, 528, 531], "aditya": 465, "adjac": [386, 479, 507, 530], "adjust": [400, 431, 432, 434, 442, 454, 459, 463, 477, 489, 503, 520, 535, 539], "adjustpassmanag": 490, "admin": [396, 467], "administr": 467, "admit": 529, "adop": 491, "adopt": [402, 404, 452, 491, 520, 525, 545], "adorn": [479, 521], "adrian": 448, "adrp": 456, "adt": [463, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "adttest": 400, "advanc": [388, 400, 401, 404, 445, 452, 461, 473, 479, 485, 487, 491, 519, 521, 539, 540, 552, 559, 562, 569, 573, 575], "advantag": [390, 392, 402, 404, 445, 449, 452, 461, 462, 465, 475, 479, 481, 482, 507, 509, 520, 556, 557, 560, 566, 567, 570, 577, 578, 579], "adventur": 507, "advertis": 454, "advic": [406, 452, 459, 461, 468, 506, 545], "advis": [398, 401, 413, 465, 472, 475, 555, 565, 576], "advisori": 403, "advoc": [403, 404], "afed8lhqlzfqjer0": 452, "affect": [31, 205, 216, 218, 310, 384, 386, 390, 392, 399, 400, 403, 405, 429, 431, 445, 446, 452, 465, 471, 472, 474, 479, 480, 489, 490, 492, 507, 509, 511, 514, 519, 525, 529, 530, 533, 540, 554, 555, 564, 565, 576], "affili": 401, "afn": 479, "aforement": [452, 499, 502, 536], "aform_1": 402, "aform_2": 402, "afre": 477, "aft": 536, "after": [54, 137, 237, 334, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 397, 399, 400, 401, 402, 403, 405, 406, 409, 411, 413, 418, 422, 423, 429, 433, 442, 443, 445, 449, 450, 452, 453, 454, 456, 457, 460, 461, 462, 463, 465, 467, 468, 471, 472, 473, 477, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 495, 499, 505, 507, 508, 511, 517, 519, 520, 521, 522, 523, 524, 525, 527, 529, 530, 533, 534, 535, 536, 537, 539, 540, 543, 544, 546, 547, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579], "after_bb": [576, 577, 578], "afterbb": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "afterloop": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "afterward": [452, 459, 479, 505, 520, 524], "again": [388, 392, 401, 405, 445, 449, 454, 459, 465, 472, 474, 479, 485, 488, 489, 493, 507, 511, 517, 518, 520, 521, 534, 536, 540, 553, 554, 555, 557, 560, 563, 564, 565, 567, 570, 575, 576, 578, 579], "against": [388, 395, 396, 398, 400, 403, 405, 413, 417, 429, 433, 452, 454, 456, 457, 459, 460, 465, 473, 477, 479, 481, 490, 491, 504, 505, 507, 509, 511, 517, 520, 534, 535, 537, 541, 544, 553, 563], "age": [403, 495, 500], "agenc": 516, "agent": [386, 479], "agg": 479, "agg1": 479, "agg2": 479, "agg3": 479, "aggreg": [404, 433, 454, 477, 480, 507, 539, 542], "aggress": [389, 402, 404, 446, 458, 461, 463, 479, 480, 507, 519, 552, 555, 562, 565, 573, 576], "agnost": [392, 402, 431, 491, 519, 525], "agre": [403, 452, 497, 505, 511, 519, 544], "agreement": 511, "agrep": 534, "ah": [479, 522, 531], "ahead": [404, 452, 454, 463, 464, 474, 491, 509, 524, 540, 546, 551, 552, 560, 562, 570, 571, 572, 573, 579], "ahm": 465, "ai": [404, 507, 578], "aid": [461, 479, 520], "aim": [392, 396, 397, 401, 404, 406, 450, 452, 460, 479, 491, 507, 512, 516, 517, 519, 525, 546], "ain": 386, "aix": [402, 447], "aka": [388, 389, 402, 479, 481, 502, 503, 507, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "al": [402, 473, 479, 484, 522, 531, 539], "al_aliasset": 539, "al_superregsset": 539, "alac": 533, "alacconvert": 533, "albeit": [557, 567, 578], "alex": [450, 511], "algebra": 505, "algn": 542, "algo": 540, "algorithm": [389, 404, 421, 424, 429, 445, 454, 461, 479, 488, 489, 495, 505, 512, 520, 527, 539, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 560, 562, 563, 564, 565, 566, 567, 568, 570, 573, 576, 578, 579], "alia": [390, 393, 405, 412, 429, 430, 435, 437, 477, 480, 484, 488, 489, 536, 539, 540, 545], "alias": [384, 389, 393, 424, 429, 430, 437, 462, 472, 488, 491, 505, 513, 522, 539, 560, 570, 579], "aliasanalysi": [479, 540], "aliasanalysisdebugg": 389, "aliase": [393, 479, 489], "aliaseeti": 479, "aliasesset": 389, "aliasopt": 445, "aliasresult": 389, "aliasset": [389, 539], "align": [385, 386, 390, 402, 405, 433, 447, 449, 450, 454, 461, 462, 475, 479, 482, 484, 489, 490, 505, 507, 512, 513, 517, 519, 522, 524, 539, 543, 544], "align32bit": 393, "align_nod": 479, "aligna": 519, "alignlog2": 479, "alignstack": [393, 479], "alignstyl": 507, "aliv": [402, 449, 489, 505, 507, 520, 540], "all": [36, 102, 126, 221, 315, 384, 385, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 415, 417, 418, 420, 421, 423, 424, 425, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 502, 503, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 522, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "all_build": 464, "all_ones_mask": 520, "all_zeros_mask": 520, "allevi": [402, 445, 479, 507], "alli": 479, "alloc": [36, 126, 221, 315, 386, 389, 390, 404, 410, 411, 429, 430, 431, 454, 456, 459, 461, 462, 463, 465, 477, 479, 481, 483, 484, 492, 505, 512, 513, 520, 522, 523, 524, 539, 540, 542, 544, 545, 546, 548, 554, 557, 560, 564, 567, 570, 575, 578, 579], "alloca": [402, 404, 449, 454, 461, 462, 477, 488, 505, 507, 519, 522, 523, 524, 557, 558, 559, 567, 568, 569, 578], "allocainst": [404, 479, 507, 557, 558, 559, 567, 568, 569, 578], "allocat": [402, 431, 479, 539], "allocatevmodul": [548, 549, 550], "allocationinst": 507, "allocator_may_return_nul": 517, "allocinst": 578, "allocs": [393, 479], "allon": 479, "allow": [384, 385, 386, 387, 389, 390, 392, 393, 395, 398, 400, 401, 402, 403, 404, 405, 406, 409, 410, 413, 418, 429, 431, 437, 446, 449, 450, 451, 452, 453, 454, 455, 456, 459, 461, 462, 463, 465, 469, 471, 473, 475, 477, 478, 479, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 495, 502, 504, 505, 506, 507, 509, 511, 513, 517, 518, 519, 520, 522, 524, 525, 527, 528, 529, 530, 531, 533, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581], "allowsanysmalls": 507, "allroot": 534, "alltargetsasmpars": 398, "alltargetsasmprint": 398, "alltargetsdesc": 398, "alltargetsdisassembl": 398, "alltargetsinfo": 398, "almost": [390, 392, 402, 404, 452, 455, 459, 460, 461, 480, 507, 509, 524, 525], "alon": [393, 402, 445, 452, 487, 520, 535, 552, 562, 573], "along": [390, 393, 400, 402, 404, 430, 431, 434, 446, 459, 461, 463, 469, 473, 474, 476, 479, 483, 484, 485, 490, 500, 505, 507, 512, 518, 519, 520, 521, 539, 540, 547, 551, 553, 554, 560, 563, 564, 570, 571, 572, 574, 575, 579], "alongsid": [393, 463, 509], "alpha": [479, 539], "alphacompilationcallback": 539, "alphajitinfo": 539, "alphanumer": [419, 431], "alreadi": [389, 395, 396, 398, 399, 400, 401, 402, 404, 429, 430, 445, 446, 452, 455, 461, 463, 464, 465, 466, 473, 474, 477, 479, 485, 489, 491, 492, 507, 508, 509, 510, 511, 516, 518, 519, 520, 521, 522, 524, 531, 535, 536, 539, 540, 544, 546, 548, 550, 551, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 572, 574, 575, 576, 577, 578], "also": [382, 383, 385, 386, 387, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 405, 412, 418, 424, 429, 433, 434, 435, 441, 445, 446, 449, 450, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 499, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 519, 520, 521, 522, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "alt_always_instru": 541, "alt_never_instru": 541, "alter": [445, 479, 507, 519, 536, 540], "altern": [384, 385, 386, 397, 398, 400, 402, 407, 418, 446, 452, 454, 459, 462, 464, 465, 466, 479, 481, 491, 492, 507, 512, 513, 520, 533, 539, 541, 544, 552, 557, 562, 567, 573, 578, 581], "although": [390, 393, 401, 402, 404, 409, 416, 445, 446, 452, 455, 461, 463, 464, 473, 478, 479, 481, 484, 485, 495, 500, 502, 507, 521, 524, 535, 540, 556, 566, 574], "altivec": [402, 479, 480, 513], "altogeth": [469, 512], "alu": [386, 429], "alu32_rr": 476, "alway": [386, 389, 390, 392, 393, 395, 396, 400, 401, 402, 403, 404, 405, 409, 413, 415, 425, 429, 445, 446, 449, 450, 452, 454, 457, 459, 463, 465, 469, 473, 478, 479, 480, 482, 488, 495, 497, 502, 503, 506, 507, 508, 509, 513, 515, 516, 519, 520, 523, 524, 525, 527, 534, 535, 541, 542, 543, 544, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 574, 575, 576, 577, 578, 579], "always_inlin": 446, "always_instru": 541, "alwaysinlin": [393, 479], "am": [452, 507], "amara": 511, "amaz": [555, 556, 565, 566, 576, 577], "ambigu": [445, 473, 530, 535, 552, 556, 562, 566, 573, 577], "amd": [384, 386, 402, 429, 447, 471, 520, 527], "amd64": 463, "amd_code_version_major": 386, "amd_kernel_code_version_minor": 386, "amd_machine_kind": 386, "amd_machine_version_major": 386, "amd_machine_version_step": 386, "amd_queue_t": 386, "amdfam10": [558, 568], "amdgpu": [0, 1, 2, 3, 463, 465, 479, 484, 511, 527, 545], "amdgpu_flat_work_group_s": 386, "amdgpu_num_sgpr": 386, "amdgpu_num_vgpr": 386, "amdgpu_waves_per_eu": 386, "amdhsa_dx10_clamp": 386, "amdhsa_exception_fp_denorm_src": 386, "amdhsa_exception_fp_ieee_div_zero": 386, "amdhsa_exception_fp_ieee_inexact": 386, "amdhsa_exception_fp_ieee_invalid_op": 386, "amdhsa_exception_fp_ieee_overflow": 386, "amdhsa_exception_fp_ieee_underflow": 386, "amdhsa_exception_int_div_zero": 386, "amdhsa_float_denorm_mode_16_64": 386, "amdhsa_float_denorm_mode_32": 386, "amdhsa_float_round_mode_16_64": 386, "amdhsa_float_round_mode_32": 386, "amdhsa_forward_progress": 386, "amdhsa_fp16_overflow": 386, "amdhsa_group_segment_fixed_s": 386, "amdhsa_ieee_mod": 386, "amdhsa_memory_ord": 386, "amdhsa_next_free_sgpr": 386, "amdhsa_next_free_spgr": 386, "amdhsa_next_free_vgpr": 386, "amdhsa_next_free_vpgr": 386, "amdhsa_private_segment_fixed_s": 386, "amdhsa_reserve_": 386, "amdhsa_reserve_flat_scratch": 386, "amdhsa_reserve_vcc": 386, "amdhsa_reserve_xnack_mask": 386, "amdhsa_system_sgpr_private_segment_wavefront_offset": 386, "amdhsa_system_sgpr_workgroup_id_i": 386, "amdhsa_system_sgpr_workgroup_id_x": 386, "amdhsa_system_sgpr_workgroup_id_z": 386, "amdhsa_system_sgpr_workgroup_info": 386, "amdhsa_system_vgpr_workitem_id": 386, "amdhsa_user_sgpr_dispatch_id": 386, "amdhsa_user_sgpr_dispatch_ptr": 386, "amdhsa_user_sgpr_flat_scratch_init": 386, "amdhsa_user_sgpr_kernarg_segment_ptr": 386, "amdhsa_user_sgpr_private_segment_buff": 386, "amdhsa_user_sgpr_private_segment_s": 386, "amdhsa_user_sgpr_queue_ptr": 386, "amdhsa_wavefront_size32": 386, "amdhsa_workgroup_processor_mod": 386, "amdkernelcodet": 386, "amen": 402, "amend": [463, 506], "amini": 511, "aminiinconsist": 511, "among": [402, 404, 405, 446, 456, 459, 463, 479, 481, 482, 489, 490, 505, 507, 509, 527], "amongst": 390, "amort": 465, "amount": [386, 397, 398, 402, 403, 404, 410, 411, 429, 433, 443, 445, 452, 454, 455, 457, 461, 463, 474, 479, 481, 489, 505, 507, 509, 517, 518, 519, 522, 524, 527, 531, 540, 541, 548, 551, 554, 564, 571, 572, 575], "amper": 468, "ampersand": [99, 185, 282, 381], "an": [0, 1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 48, 49, 52, 53, 66, 72, 81, 83, 85, 99, 102, 103, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 134, 146, 157, 169, 171, 185, 186, 187, 193, 194, 195, 196, 197, 202, 203, 204, 205, 214, 215, 216, 217, 218, 219, 220, 223, 227, 228, 229, 230, 231, 233, 234, 249, 256, 266, 268, 282, 283, 284, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 308, 309, 310, 311, 312, 313, 314, 317, 318, 322, 323, 324, 325, 326, 328, 329, 332, 333, 346, 353, 363, 365, 367, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 502, 503, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 522, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581], "anachronist": 393, "analog": [454, 461, 479, 507, 520, 524, 529, 540], "analys": [389, 394, 399, 402, 443, 455, 463, 479, 505, 507, 511, 512, 519, 540, 541, 542, 545], "analysi": [390, 394, 395, 399, 415, 429, 443, 450, 455, 457, 459, 461, 463, 476, 479, 480, 482, 484, 488, 492, 512, 515, 519, 520, 527, 534, 542, 545, 554, 557, 559, 564, 567, 569, 575, 578], "analysisalias": 515, "analysisfpcommut": 515, "analysisusag": 389, "analyt": 510, "analyz": [402, 408, 424, 443, 449, 459, 463, 464, 465, 489, 505, 507, 519, 520, 527, 534, 540, 541, 542, 555, 565, 576], "analyzebranch": 539, "ancestor": [386, 473], "anchor": 519, "ancient": 388, "and": [0, 1, 2, 3, 4, 7, 8, 10, 11, 17, 18, 20, 28, 29, 30, 31, 32, 33, 36, 39, 41, 42, 46, 50, 51, 66, 72, 83, 99, 102, 105, 106, 108, 114, 115, 120, 121, 122, 124, 126, 128, 129, 132, 135, 136, 146, 157, 171, 185, 186, 189, 190, 192, 202, 203, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 226, 227, 231, 235, 236, 249, 256, 268, 282, 283, 286, 287, 289, 290, 296, 297, 299, 307, 308, 309, 310, 311, 312, 315, 316, 319, 321, 322, 326, 330, 331, 346, 353, 365, 381, 382, 384, 385, 388, 391, 393, 395, 396, 399, 400, 403, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 434, 436, 441, 442, 443, 444, 448, 450, 451, 453, 454, 456, 464, 466, 467, 468, 472, 474, 475, 476, 478, 480, 481, 484, 485, 486, 487, 490, 492, 493, 494, 495, 498, 500, 503, 504, 508, 510, 511, 514, 515, 516, 517, 518, 520, 523, 525, 527, 528, 530, 531, 532, 534, 537, 538, 541, 542, 544, 546, 547, 548, 549, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 571, 576, 577, 578, 580, 581], "andrew": [461, 509], "android": 535, "andw": 405, "anew": 519, "angl": [404, 446, 544], "ani": [99, 185, 282, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 413, 415, 417, 418, 421, 422, 423, 424, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 445, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 471, 472, 475, 476, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 499, 502, 503, 505, 507, 508, 509, 510, 511, 512, 513, 516, 517, 519, 520, 521, 522, 524, 525, 527, 528, 529, 530, 531, 534, 535, 536, 537, 538, 539, 540, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "annoat": 486, "annot": [395, 405, 434, 446, 454, 459, 480, 490, 509, 511, 513, 520], "announc": [487, 509, 511, 514, 541, 545], "annoy": 404, "anon": 479, "anonym": [429, 452, 464, 516, 519, 527, 529, 530, 539, 540, 542, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "anoth": [384, 386, 389, 390, 391, 392, 393, 398, 400, 401, 402, 403, 404, 405, 413, 418, 429, 431, 433, 443, 445, 449, 450, 452, 454, 455, 456, 457, 461, 463, 464, 465, 468, 469, 471, 476, 477, 478, 479, 480, 481, 482, 485, 488, 489, 490, 491, 494, 502, 503, 505, 509, 511, 513, 519, 520, 521, 522, 523, 524, 525, 527, 529, 531, 535, 536, 539, 540, 541, 542, 543, 544, 547, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 575, 576, 577, 578, 579], "another_op": 484, "anotherbranch": 509, "anothercategori": 445, "answer": [389, 396, 404, 445, 452, 457, 459, 462, 465, 473, 479, 485, 488, 489, 505, 520, 521, 545, 554, 555, 557, 564, 565, 567, 575, 576, 578], "anti": 429, "anticip": [509, 511, 543], "antisymmetr": 489, "antisymmetri": 489, "anxious": 400, "any_other_cond": 479, "anyhow": 479, "anymor": [396, 507, 536, 540], "anyon": [390, 401, 452, 453, 516, 519, 539], "anyregcc": [393, 479, 522], "anyth": [390, 398, 402, 404, 410, 411, 429, 431, 446, 452, 457, 463, 464, 473, 479, 491, 493, 499, 505, 507, 509, 519, 520, 522, 524, 531, 536, 554, 555, 564, 565, 574, 575, 576], "anyway": [404, 471, 479, 488, 505, 511, 519], "anywher": [403, 405, 454, 459, 479, 482, 485, 489, 521, 530, 535, 552, 557, 562, 567, 573, 578], "ao": 456, "ap": [461, 479], "ap2": 479, "apach": [404, 452, 472, 525, 546, 547, 548, 549, 550], "apart": [389, 392, 400, 479, 499, 507], "apertur": [36, 315, 386], "apfloat": [463, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574], "api": [386, 389, 400, 404, 433, 445, 447, 448, 461, 466, 472, 478, 481, 488, 490, 500, 503, 504, 511, 513, 517, 519, 520, 522, 527, 541, 545, 547, 548, 549, 550, 553, 554, 559, 563, 564, 569, 574, 575], "apint": [484, 507, 542], "app": [404, 504, 507, 510], "appar": [557, 567, 578], "appatur": 386, "appdata": 464, "appeal": 520, "appear": [385, 386, 389, 390, 397, 404, 409, 413, 421, 429, 431, 445, 450, 452, 456, 462, 479, 491, 493, 494, 495, 500, 502, 503, 505, 507, 509, 512, 519, 520, 524, 527, 529, 530, 539], "appel": 461, "appel89": 461, "append": [393, 400, 406, 407, 413, 414, 418, 465, 479, 507, 508, 519, 529, 533, 535, 541, 576], "append_block": [574, 575, 576, 577, 578], "appendinglinkag": 507, "appenduniqu": 479, "appertain": 479, "appertur": 386, "appl": [401, 402, 405, 423, 451, 452, 454, 463, 479, 519, 545], "apple_nam": [407, 519], "apple_namespac": 519, "apple_objc": 519, "apple_typ": [407, 519], "appli": [54, 137, 237, 334, 383, 384, 385, 386, 389, 390, 392, 396, 397, 400, 401, 402, 403, 404, 413, 418, 431, 443, 445, 449, 452, 456, 459, 462, 463, 465, 467, 469, 470, 472, 479, 481, 482, 483, 491, 492, 495, 502, 505, 506, 507, 509, 511, 512, 514, 519, 520, 525, 529, 530, 533, 536, 539, 540, 543, 544, 547, 554, 556, 557, 560, 564, 566, 567, 570, 575, 577, 578, 579], "applic": [386, 392, 393, 400, 402, 404, 413, 417, 418, 430, 436, 437, 445, 446, 447, 452, 454, 458, 459, 461, 464, 478, 479, 481, 483, 489, 505, 507, 513, 520, 522, 524, 529, 531, 533, 535, 539, 540, 542, 543, 545, 546, 551, 554, 556, 560, 561, 564, 566, 570, 572, 575, 577, 579], "applu331": 510, "appreci": [448, 452, 469], "approach": [392, 397, 400, 402, 404, 429, 445, 446, 449, 452, 454, 462, 465, 473, 476, 479, 489, 505, 507, 511, 512, 513, 518, 519, 520, 524, 539], "appropri": [386, 389, 390, 392, 402, 404, 409, 418, 429, 434, 445, 446, 449, 452, 454, 455, 459, 460, 461, 463, 465, 467, 471, 472, 473, 475, 476, 479, 482, 490, 497, 502, 505, 506, 507, 509, 511, 514, 516, 519, 524, 525, 531, 539, 540, 542, 544, 546, 548, 552, 556, 557, 562, 566, 567, 573, 577, 578], "approv": [452, 472, 506, 511], "approx": [446, 490], "approxim": [395, 409, 446, 464, 479, 480, 481, 536], "apr": 525, "apr1": 452, "aptr": 479, "apu": 386, "aq": 479, "aq2": 479, "aqlwrap": 386, "ar": [400, 408, 430, 435, 463, 466, 470, 507], "arang": 423, "arbitrari": [386, 389, 393, 402, 404, 409, 416, 424, 445, 454, 460, 461, 462, 465, 478, 479, 484, 488, 491, 503, 507, 519, 520, 522, 524, 527, 529, 539, 540, 543, 551, 552, 553, 554, 557, 560, 562, 563, 564, 567, 570, 571, 572, 573, 574, 575, 578, 579], "arbitrarili": [473, 479, 497, 519, 555, 565, 576], "arc": [418, 463, 506, 511], "arcanist": [463, 545], "arch": [407, 410, 411, 413, 418, 423, 428, 429, 430, 431, 432, 442, 446, 463, 468, 469, 491, 514, 541, 558, 568], "arch1": 430, "arch13": 513, "arch2": 430, "arch_nam": 442, "architect": 386, "architectur": [390, 392, 399, 400, 402, 405, 407, 409, 410, 411, 418, 423, 424, 428, 429, 430, 431, 432, 436, 437, 442, 446, 448, 454, 459, 460, 463, 464, 468, 469, 471, 472, 479, 484, 490, 491, 494, 512, 513, 514, 517, 520, 527, 531, 535, 537, 539, 541, 545, 550, 558, 568, 580], "archiv": [398, 408, 418, 423, 426, 430, 431, 432, 435, 452, 466, 478, 482, 495, 507, 508, 509, 516, 517, 541, 545], "archiveiter": 507, "arcp": 479, "arcpatch": 506, "arctan": 544, "are": [4, 20, 28, 31, 33, 48, 102, 105, 120, 131, 186, 189, 205, 213, 216, 218, 233, 283, 286, 299, 307, 310, 312, 328, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 436, 437, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "area": [386, 392, 396, 402, 404, 448, 450, 452, 454, 461, 480, 481, 487, 506, 507, 514, 520, 525, 535, 557, 567, 578], "aren": [389, 402, 403, 404, 446, 452, 461, 462, 463, 464, 469, 479, 484, 505, 509, 520, 554, 555, 560, 564, 565, 570, 575, 579], "areprivatesymbolsstrip": 495, "arg": [386, 404, 406, 409, 411, 418, 434, 445, 451, 460, 469, 474, 479, 484, 489, 515, 524, 527, 530, 543, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "arg1": [479, 481, 541, 551, 561, 572], "arg2": [479, 481, 551, 561, 572], "arg_begin": 507, "arg_empti": 507, "arg_end": 507, "arg_iter": 507, "arg_siz": [461, 507, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "argc": [445, 450, 451, 479, 481, 490, 507, 519, 542, 550], "argidx": [559, 569], "arglist": 479, "argmemon": [393, 459, 479], "argn": 401, "argnam": [445, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "argstart": 445, "argsv": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "argti": 479, "argu": 404, "argument": [389, 392, 393, 399, 400, 402, 404, 405, 406, 408, 409, 411, 415, 417, 418, 423, 430, 434, 442, 444, 446, 450, 453, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 466, 469, 473, 474, 476, 477, 481, 483, 484, 489, 492, 509, 513, 517, 518, 519, 520, 522, 523, 524, 527, 530, 531, 534, 535, 539, 540, 541, 543, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579], "argumentexpr": [573, 574, 575, 576, 577, 578], "argumentlisttyp": 507, "argumentnotmodifi": 479, "argv": [397, 401, 411, 445, 450, 451, 481, 490, 507, 519, 542, 550], "argv0": 411, "argvalu": [445, 451], "aris": [452, 462, 479, 507], "arithmet": [450, 459, 489, 505, 507, 520, 529, 538, 553, 557, 563, 567, 574, 578], "ariti": 461, "arm": [390, 402, 431, 432, 436, 437, 454, 459, 463, 465, 469, 479, 480, 484, 486, 511, 527, 535, 539, 545], "arm32": 447, "arm64": [447, 463, 533], "arm7": 541, "arm_aapcs_vfpcc": 393, "arm_aapcscc": 393, "arm_apcscc": 393, "arm_neon": [392, 527], "armap": 430, "armgenasmmatch": 527, "armgenregisterinfo": 527, "armhf": [470, 471, 517], "arminstrinfo": 539, "armv5": 390, "armv6": [447, 468], "armv7": [392, 447, 463, 468, 471, 479], "armv7a": 470, "armv8": [447, 479, 513, 531], "arnaud": 487, "around": [386, 389, 390, 399, 401, 404, 429, 445, 452, 454, 461, 462, 463, 475, 477, 478, 479, 481, 487, 489, 491, 492, 505, 507, 509, 511, 519, 520, 524, 525, 539, 540, 541, 552, 555, 559, 560, 562, 565, 569, 570, 576, 579], "arr": [462, 479, 507, 520], "arr1": 520, "arr2": 520, "arrang": [402, 445, 461, 473, 479, 505, 520, 535, 540, 547, 548], "array": [384, 386, 389, 392, 393, 402, 410, 413, 433, 449, 454, 459, 461, 481, 489, 490, 494, 495, 498, 499, 502, 505, 519, 520, 527, 535, 536, 538, 539, 552, 557, 560, 562, 567, 570, 573, 574, 575, 576, 577, 578, 579], "arrayidx": 479, "arrayidx1": 479, "arrayidx2": 479, "arrayidx3": 479, "arrayidx4": 479, "arraytyp": 507, "arriv": [462, 491], "arsenault": 511, "arsenaultagre": 511, "arstechnica": 520, "art": 461, "artem": 446, "articl": [489, 505, 509, 520, 555, 557, 565, 567, 576, 578], "artifact": [462, 481, 489, 512], "artifact_prefix": 481, "as": [14, 15, 16, 17, 18, 21, 22, 23, 31, 34, 35, 36, 37, 42, 45, 48, 49, 52, 53, 72, 85, 99, 111, 112, 113, 114, 115, 125, 126, 127, 129, 131, 134, 157, 185, 195, 196, 197, 202, 203, 216, 219, 220, 221, 223, 227, 233, 234, 256, 282, 293, 294, 295, 296, 297, 300, 301, 302, 310, 313, 314, 315, 317, 322, 325, 328, 329, 332, 333, 353, 367, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "as_float": [575, 576, 577, 578], "asan": [481, 517], "asanstackvariabledescript": 523, "asc": 510, "ascend": [450, 479], "ascii": [393, 413, 479, 481, 519, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "asciz": 456, "asf": 452, "asi": 539, "asid": [386, 479, 488, 507, 517], "ask": [389, 396, 403, 446, 448, 452, 455, 457, 459, 461, 463, 464, 472, 473, 487, 489, 507, 509, 514, 516, 519, 524, 528, 529, 530, 540, 548, 552, 555, 557, 559, 560, 562, 565, 567, 569, 570, 573, 576, 578, 579], "asm": [393, 398, 410, 411, 424, 429, 432, 444, 490, 513, 515], "asmmatcheremitt": 527, "asmnam": 539, "asmpars": [455, 463, 527], "asmparsernum": 444, "asmprint": [402, 461, 479, 527, 539], "asmstr": [529, 531, 539], "asmwrit": [455, 461], "asmwriternum": 444, "aspect": [400, 402, 461, 465, 479, 499, 500, 507, 509, 512, 517, 519, 530, 552, 553, 555, 559, 560, 562, 563, 565, 569, 570, 573, 574, 576, 579], "aspir": [556, 566, 577], "aspx": [404, 510], "assembl": [7, 44, 45, 84, 105, 189, 286, 324, 325, 366, 382, 383, 384, 385, 393, 408, 410, 411, 415, 421, 422, 429, 432, 443, 444, 446, 447, 452, 454, 455, 457, 462, 463, 464, 465, 470, 478, 484, 486, 490, 491, 509, 513, 518, 524, 527, 531, 534, 535, 545, 554, 558, 564, 568, 575, 580], "assert": [400, 402, 445, 448, 463, 468, 472, 474, 479, 480, 481, 490, 504, 505, 507, 514, 519, 535, 539, 540, 544, 547, 549, 550, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "assert_valid_funct": [574, 575, 576, 577, 578], "assign": [385, 386, 390, 393, 394, 395, 396, 402, 424, 434, 445, 448, 452, 454, 456, 457, 462, 465, 476, 479, 480, 489, 490, 492, 507, 509, 517, 519, 529, 530, 536, 539, 544, 551, 553, 558, 559, 563, 568, 569, 571, 572, 574], "assigne": 396, "assignvirt2phi": 402, "assignvirt2stackslot": 402, "assist": [404, 444, 459, 474, 492, 556, 566, 577], "associ": [386, 392, 393, 394, 395, 401, 402, 404, 410, 413, 445, 450, 454, 456, 461, 475, 478, 480, 483, 484, 488, 491, 492, 505, 507, 511, 517, 519, 522, 524, 525, 529, 537, 539, 541, 543, 548, 552, 554, 562, 564, 573], "assort": [559, 569], "assum": [383, 385, 386, 388, 389, 393, 394, 395, 397, 400, 402, 404, 409, 410, 411, 419, 424, 429, 431, 433, 442, 446, 449, 452, 454, 455, 457, 459, 461, 462, 463, 464, 489, 490, 491, 495, 497, 498, 499, 500, 502, 503, 505, 507, 509, 511, 514, 518, 519, 520, 522, 524, 527, 534, 536, 537, 539, 540, 542, 544, 546, 552, 553, 556, 557, 558, 559, 560, 562, 563, 566, 567, 568, 569, 570, 571, 574, 577, 579], "assumpt": [402, 404, 405, 410, 429, 452, 454, 479, 513, 519, 520, 546, 559, 560, 569, 570, 579], "assur": 544, "ast": [432, 446, 480, 527, 546, 548, 550, 551, 553, 554, 556, 557, 559, 560, 561, 563, 564, 566, 567, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580], "astcontext": 404, "astdump": 527, "astnod": 527, "astread": 527, "astwrit": 527, "asymmetr": 462, "asymmetri": [458, 489], "asymptomat": 406, "async": 449, "async_op": 449, "async_op1": 449, "async_op2": 449, "asynchron": [386, 390, 449, 479], "at": [385, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 409, 410, 411, 413, 416, 418, 423, 424, 425, 429, 431, 432, 433, 442, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 499, 500, 502, 503, 504, 506, 507, 508, 511, 512, 514, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580], "at_apple_properti": 519, "at_apple_property_attribut": 519, "at_apple_property_sett": 519, "at_apple_runtime_class": 519, "at_artifici": 519, "at_byte_s": 519, "at_decl_fil": 519, "at_decl_lin": 519, "at_encod": 519, "at_end": [574, 575, 576, 577, 578], "at_nam": 519, "at_typ": 519, "atan2": [551, 561, 572], "atc": 386, "athlon": [558, 568], "atkinson": 510, "atoi": 479, "atom": [14, 15, 16, 17, 18, 21, 22, 23, 29, 30, 111, 112, 113, 114, 115, 121, 122, 195, 196, 197, 202, 203, 214, 215, 293, 294, 295, 296, 297, 300, 301, 302, 308, 309, 384, 386, 404, 405, 459, 465, 488, 499, 507, 517, 519, 545], "atom_count": 519, "atom_count0": 519, "atomic_": 390, "atomic_cmpxchg": 390, "atomic_f": 390, "atomic_load_": 390, "atomic_swap": 390, "atomicexpand": 390, "atomicexpandpass": 390, "atomicrmw": [386, 390, 513], "atomtyp": 519, "atop": 461, "att": [410, 411, 432, 479], "attach": [404, 449, 451, 452, 463, 467, 479, 490, 491, 506, 507, 519, 536, 537, 543, 546, 553, 554, 555, 556, 557, 563, 564, 565, 566, 567, 578], "attack": [403, 479, 520], "attacker_data": 520, "attacker_offset": 520, "attempt": [386, 389, 393, 397, 402, 404, 406, 419, 429, 431, 432, 443, 452, 454, 459, 463, 470, 479, 481, 483, 491, 505, 507, 515, 516, 517, 520, 522, 524, 525, 539, 540, 542, 543, 548, 549, 550], "attend": 487, "attende": 487, "attent": [403, 404, 452, 479, 516, 535, 539, 546], "attorney": 452, "attr": [0, 1, 2, 3, 386, 393, 479, 519, 527, 541, 542], "attr0": [8, 106, 190, 287, 393], "attr1": 393, "attr32": [8, 106, 190, 287], "attract": [452, 461, 487], "attrdump": 527, "attrgrp": 393, "attrgrp0": 393, "attrgrp1": 393, "attribut": [8, 106, 190, 287, 393, 402, 410, 411, 421, 423, 431, 432, 436, 437, 454, 456, 461, 465, 476, 482, 489, 490, 492, 494, 506, 507, 513, 515, 518, 524, 527, 531, 536, 539, 540, 545], "attributelist": [393, 527], "attributerefer": 527, "attrimpl": 527, "attrinfomap": 527, "attrkind": [475, 527], "attrlist": 527, "attrparsedattrimpl": 527, "attrparsedattrkind": 527, "attrparsedattrlist": 527, "attrparserstringswitch": 527, "attrpchread": 527, "attrpchwrit": 527, "attrspel": 527, "attrspellinglistindex": 527, "attrtemplateinstanti": 527, "attrvisitor": 527, "atyp": 462, "au": [389, 540], "audienc": [459, 545], "audit": 520, "augment": [395, 465, 507, 556, 566, 577], "august": 483, "authent": [447, 467], "author": [402, 404, 449, 452, 457, 467, 473, 479, 480, 489, 491, 511, 520, 545], "authorit": 433, "auto": [384, 402, 416, 418, 419, 434, 464, 491, 507, 512, 519, 536, 541, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "autoconf": [401, 452, 468], "autocrlf": 463, "autodetect": [400, 405, 410, 411, 418, 429], "autogener": 452, "autoinsert": 507, "autom": [388, 402, 444, 452, 463, 506, 508, 511, 527, 531], "automat": [383, 386, 389, 396, 400, 402, 404, 408, 409, 410, 424, 431, 445, 448, 452, 457, 461, 463, 466, 467, 471, 472, 473, 477, 478, 484, 485, 489, 491, 506, 507, 508, 509, 512, 513, 518, 519, 520, 521, 527, 529, 530, 533, 536, 539, 540, 541, 544, 545, 553, 555, 557, 558, 559, 563, 565, 567, 568, 569, 574, 575, 576], "automaton": [402, 527], "autotool": 463, "autovector": 538, "aux": 507, "auxiliari": [386, 527, 539], "auxiliarydata": 581, "av": 488, "avail": [52, 332, 385, 386, 390, 398, 400, 401, 402, 404, 408, 409, 410, 411, 417, 418, 424, 429, 432, 443, 445, 446, 451, 452, 454, 457, 459, 463, 465, 466, 467, 469, 470, 472, 473, 478, 479, 481, 491, 504, 505, 507, 509, 510, 513, 514, 516, 517, 519, 520, 522, 524, 525, 526, 527, 529, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 545, 546, 551, 553, 554, 555, 556, 558, 561, 563, 564, 565, 566, 568, 572, 574, 575, 576], "available_extern": [393, 479], "available_featur": [409, 535], "avalanch": 507, "avali": 519, "avenu": 516, "averag": [415, 429, 481, 555, 558, 565, 568, 576], "avl": 507, "avoid": [386, 387, 389, 391, 392, 393, 397, 400, 401, 402, 429, 437, 452, 456, 460, 461, 462, 465, 469, 473, 477, 479, 481, 482, 489, 505, 507, 509, 511, 512, 513, 514, 517, 519, 520, 522, 523, 524, 525, 529, 535, 536, 539, 540, 550, 557, 559, 567, 569, 578], "avr": 511, "avx": [479, 535, 538], "avx1": 535, "avx2": 535, "avx512": 479, "awaken": 454, "awar": [389, 390, 400, 401, 402, 404, 405, 445, 446, 452, 462, 463, 478, 479, 481, 491, 507, 509, 519, 524], "away": [394, 398, 404, 405, 446, 449, 452, 461, 473, 479, 482, 487, 505, 507, 509, 513, 519, 520, 540, 551, 572], "awkward": [404, 445, 462], "ax": [402, 456, 479, 531, 539], "axi": [520, 538], "axpi": 446, "ayal": 512, "b0000": 386, "b1": [491, 529, 537, 538], "b128": [0, 1, 2, 3, 383], "b13e8756b13a00cf168300179061fb4b91fefb": 481, "b16": [383, 385], "b16x2": [0, 3, 383], "b16x3": 383, "b16x4": 383, "b2": [479, 491, 537, 538], "b256": 383, "b32": [0, 1, 2, 3, 383, 385, 490], "b32x2": [0, 1, 2, 3], "b512": 383, "b64": [0, 1, 2, 3, 383, 385], "b64x2": [0, 1, 2, 3], "b96": 383, "b_ctor_bas": 405, "bach": 525, "back": [386, 390, 397, 400, 402, 404, 413, 418, 449, 452, 454, 459, 461, 462, 463, 465, 466, 468, 471, 472, 479, 481, 491, 504, 507, 509, 517, 518, 519, 520, 522, 524, 528, 531, 535, 544, 545, 547, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 575, 576, 578], "backedg": [394, 505, 524, 555, 556, 565, 566, 576, 577], "backend": [390, 395, 397, 406, 411, 417, 429, 432, 444, 446, 447, 454, 455, 459, 460, 463, 465, 467, 469, 474, 477, 479, 484, 507, 511, 517, 519, 522, 524, 531, 545, 580], "background": [401, 403, 485, 507, 509, 521, 527, 542], "backport": 471, "backslash": 481, "backtrac": [402, 513, 559, 569], "backup": [466, 509], "backward": [393, 445, 475, 499, 507, 520, 524, 537, 538], "bad": [397, 404, 406, 459, 469, 479, 489, 507, 514, 519, 520, 525, 544, 556, 559, 566, 569, 577], "badarchivememb": 507, "badfileformat": 507, "bag": 460, "bail": [479, 541, 547], "bailouton": 507, "bake": [465, 491], "balanc": [388, 390, 452, 517], "ball": 487, "bam": 404, "ban": 516, "bandwidth": 479, "bang": 530, "bangoper": 530, "bank": 384, "bank_mask": [0, 2, 3, 386], "banner": 507, "bar": [400, 401, 402, 404, 405, 409, 419, 429, 434, 442, 445, 446, 449, 450, 456, 457, 477, 479, 487, 490, 507, 509, 515, 519, 524, 530, 535, 537, 538, 544, 553, 555, 563, 565, 574, 576], "bar_in_b_cc": 395, "bar_map": 404, "bare": [417, 470, 479, 507, 513, 522, 539, 546], "baremet": 470, "baremetalarm": 470, "barlist": 404, "barrier": [390, 429, 470, 479, 513, 520, 524], "barrier0": 479, "bart": 386, "base": [9, 10, 44, 45, 107, 108, 131, 191, 192, 229, 230, 288, 289, 324, 325, 383, 385, 386, 388, 389, 393, 395, 397, 398, 399, 400, 401, 403, 405, 409, 410, 413, 415, 416, 418, 420, 429, 431, 433, 434, 445, 448, 449, 450, 452, 453, 454, 456, 460, 461, 463, 465, 468, 470, 471, 472, 474, 476, 477, 479, 480, 481, 483, 484, 488, 489, 490, 491, 492, 494, 506, 508, 509, 510, 512, 514, 516, 517, 519, 520, 525, 527, 529, 530, 531, 534, 535, 538, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "base0": 533, "base1": 533, "base2": [479, 533], "base_offset": 524, "baseclasslist": 530, "baseclasslistn": 530, "basedonaddress": 494, "basedonseg": 494, "basedonsegmentaddress": 494, "basedonsegmentvalu": 494, "basedonself": 494, "basedontyp": 494, "basedonvalu": 494, "baseinstrinfo": 527, "baseirlay": 491, "baselay": 547, "baselin": [402, 472, 520, 533], "basemulticlasslist": 530, "basenam": [442, 493, 519], "baseobject": 520, "baseopcod": [476, 539], "basereg": 402, "baseregisterinfo": 527, "basereloc": 437, "baseti": 479, "basety1": 479, "basety2": 479, "basetyp": 479, "bash": [409, 424, 453, 521, 525, 533], "basi": [386, 415, 442, 445, 453, 461, 479, 488, 492, 507, 509, 512, 517, 520, 524, 551, 556, 566, 572, 577], "basic": [390, 394, 396, 401, 402, 404, 410, 413, 415, 418, 421, 431, 445, 446, 449, 450, 452, 454, 457, 460, 461, 462, 463, 464, 465, 472, 474, 475, 480, 485, 488, 490, 491, 494, 503, 508, 512, 515, 517, 519, 520, 521, 522, 524, 525, 528, 530, 531, 533, 534, 538, 542, 547, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579], "basic_": 529, "basic_block": 574, "basic_p": 529, "basic_r": 529, "basic_ss": 529, "basicaa": 540, "basicaliasanalysi": [505, 540, 559, 569], "basicblock": [404, 463, 488, 492, 505, 511, 512, 540, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 576], "basicblocklisttyp": 507, "basicblockpass": 492, "basicblockutil": 507, "basicirlayermaterializationunit": [491, 547], "basictyp": 479, "batch": 464, "battl": 433, "bayer": 510, "baz": [401, 404, 434, 442, 445, 507, 519, 530, 537, 538, 555, 565, 576], "baz_in_c_cc": 395, "bb": [404, 479, 480, 484, 489, 490, 492, 507, 519, 520, 539, 540, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "bb0_1": 490, "bb0_2": 490, "bb0_26": 490, "bb0_28": 490, "bb0_29": 490, "bb0_30": 490, "bb0_4": 490, "bb0_5": 490, "bb1": [393, 479, 519, 520], "bb10": 520, "bb2": [393, 479, 519], "bb3": 479, "bbrefer": 484, "bbs": [404, 489], "bc": [389, 393, 397, 402, 406, 410, 414, 422, 430, 443, 452, 457, 463, 464, 466, 474, 490, 492, 507, 535, 540, 545], "bcanalyz": [393, 408], "bcc": 539, "bcmp": 513, "bcpl": 530, "bcplcomment": 530, "bcreader": 417, "bdce": 480, "be": [0, 1, 2, 3, 4, 7, 28, 29, 30, 36, 37, 39, 40, 41, 42, 46, 48, 52, 53, 72, 84, 85, 86, 99, 102, 120, 121, 122, 126, 127, 128, 129, 132, 157, 185, 186, 213, 214, 215, 221, 223, 224, 225, 226, 227, 231, 233, 256, 282, 283, 307, 308, 309, 315, 317, 319, 320, 321, 322, 326, 328, 332, 333, 353, 366, 367, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "bear": 405, "beat": 465, "beauti": [551, 553, 556, 561, 563, 566, 572, 574, 577], "becaus": [385, 388, 389, 390, 392, 393, 395, 397, 398, 401, 402, 404, 405, 409, 413, 429, 430, 433, 445, 446, 450, 452, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 471, 472, 473, 475, 476, 477, 479, 481, 482, 483, 484, 488, 489, 491, 492, 494, 497, 499, 505, 506, 507, 509, 510, 511, 513, 515, 519, 520, 522, 525, 529, 531, 534, 535, 536, 537, 538, 539, 540, 544, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "becom": [386, 392, 401, 402, 404, 423, 429, 442, 445, 446, 452, 459, 462, 468, 473, 479, 505, 507, 509, 511, 519, 520, 522, 524, 531, 535, 538, 539, 540, 541, 547, 552, 555, 557, 562, 565, 567, 573, 576, 578], "been": [386, 387, 390, 392, 397, 399, 400, 401, 402, 404, 405, 406, 409, 413, 415, 429, 443, 445, 446, 448, 451, 452, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 472, 479, 481, 483, 485, 489, 490, 491, 492, 494, 495, 498, 500, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 528, 529, 530, 531, 536, 539, 540, 541, 542, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 579], "befor": [14, 15, 16, 17, 18, 21, 22, 23, 111, 112, 113, 114, 115, 195, 196, 197, 202, 203, 293, 294, 295, 296, 297, 300, 301, 302, 384, 385, 386, 389, 390, 392, 397, 399, 400, 401, 402, 405, 409, 411, 413, 419, 429, 431, 433, 442, 443, 445, 446, 449, 452, 453, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465, 470, 471, 472, 473, 474, 477, 479, 483, 484, 487, 488, 489, 490, 491, 492, 495, 505, 507, 511, 512, 513, 514, 519, 520, 522, 523, 524, 527, 529, 530, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "began": [491, 509], "begin": [386, 389, 393, 400, 402, 404, 405, 413, 421, 429, 445, 452, 454, 459, 461, 463, 464, 472, 473, 479, 480, 483, 488, 489, 490, 493, 494, 495, 499, 507, 511, 517, 519, 520, 522, 525, 530, 535, 539, 541, 543, 544, 546, 547, 555, 557, 558, 559, 565, 567, 568, 569, 573, 574, 575, 576, 577, 578], "beginassembl": 461, "beginn": [396, 448], "behalf": [448, 452, 506], "behav": [386, 389, 390, 401, 404, 418, 429, 432, 446, 449, 452, 454, 458, 474, 479, 491, 545, 548], "behavior": [386, 390, 396, 401, 402, 403, 404, 405, 406, 409, 421, 429, 445, 446, 449, 452, 454, 455, 457, 459, 461, 474, 479, 481, 491, 492, 505, 507, 513, 516, 517, 520, 538, 539, 540, 552, 555, 557, 562, 565, 567, 573, 576, 578], "behaviour": [392, 404, 445, 479, 484, 513, 535, 538], "behind": [402, 404, 405, 452, 474, 475, 476, 479, 490, 507, 524, 540, 545, 546], "being": [36, 105, 126, 189, 221, 286, 315, 384, 386, 389, 390, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 413, 415, 421, 422, 424, 429, 445, 446, 448, 452, 454, 455, 458, 460, 462, 463, 465, 468, 470, 472, 473, 474, 475, 477, 478, 479, 481, 483, 488, 489, 490, 492, 495, 497, 499, 503, 505, 506, 507, 509, 511, 513, 516, 517, 519, 520, 522, 524, 525, 527, 528, 529, 530, 531, 535, 536, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 552, 553, 555, 556, 557, 559, 560, 562, 563, 565, 566, 567, 569, 570, 574, 576, 577, 578, 579], "belevich": 446, "belief": 403, "believ": [403, 404, 452, 479, 492, 507, 516, 520, 554, 555, 556, 564, 565, 566, 575, 576, 577], "belong": [445, 449, 454, 456, 479, 489, 507, 517, 537, 543, 557, 567], "below": [36, 42, 126, 129, 221, 227, 315, 322, 382, 384, 385, 388, 389, 390, 393, 395, 400, 401, 402, 404, 405, 410, 413, 425, 429, 434, 442, 445, 446, 448, 450, 452, 459, 463, 464, 468, 469, 471, 472, 473, 477, 478, 479, 484, 488, 489, 490, 492, 495, 500, 505, 506, 507, 508, 509, 510, 512, 513, 514, 517, 518, 519, 520, 522, 524, 527, 535, 537, 538, 539, 540, 541, 542, 543, 544, 547, 552, 554, 555, 556, 557, 558, 559, 562, 564, 565, 566, 567, 568, 569, 573, 575, 577, 578], "benchmark": [400, 408, 446, 452, 463, 472, 507, 508, 514, 519, 520, 533, 534, 535, 538, 545], "benchspec": 534, "benderski": 446, "benefici": [398, 449, 465, 479, 536, 538], "benefit": [389, 398, 404, 459, 461, 462, 469, 479, 481, 505, 508, 511, 513, 517, 519, 547, 548, 549, 554, 558, 564, 568], "benign": 507, "benjamin": 461, "bernstein": 519, "besid": [404, 445, 479, 509, 516, 520, 535, 539, 545, 556, 566, 573, 577], "bespok": 461, "best": [389, 392, 398, 401, 402, 404, 411, 429, 452, 454, 457, 461, 465, 469, 474, 479, 487, 505, 507, 512, 517, 519, 520, 522, 524, 545, 551, 552, 561, 562, 571, 573, 579], "better": [390, 396, 402, 404, 405, 407, 424, 429, 451, 452, 454, 465, 468, 469, 474, 479, 480, 481, 487, 488, 489, 491, 505, 507, 509, 519, 520, 534, 538, 540, 541, 542, 545, 546, 552, 555, 557, 560, 562, 565, 567, 570, 573, 576, 578, 579], "bettor": 491, "between": [384, 386, 388, 389, 390, 392, 393, 401, 402, 404, 405, 410, 419, 421, 429, 433, 434, 437, 445, 450, 452, 453, 454, 455, 457, 461, 463, 465, 470, 472, 476, 477, 479, 480, 481, 483, 484, 486, 488, 489, 490, 491, 493, 495, 498, 502, 505, 506, 509, 511, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 533, 535, 536, 539, 541, 543, 544, 545, 551, 554, 555, 561, 564, 565, 572, 575, 576], "bewar": [461, 487], "beyl": 511, "beylsdistinguish": 511, "beyond": [386, 401, 402, 444, 454, 459, 462, 479, 485, 486, 488, 491, 507, 520, 521, 531], "bfd": [460, 466], "bfdname": 431, "bff": 507, "bfi": 479, "bfs": 510, "bh": 531, "bias": 391, "bicub": 510, "bidirect": 507, "big": [391, 398, 402, 404, 411, 452, 459, 465, 468, 479, 507, 510, 513, 514, 535, 539, 543, 545, 553, 556, 557, 563, 566, 567, 574, 577, 578], "bigblock": 411, "bigger": [404, 449, 544], "biggest": [402, 477], "bigmip": 431, "bigmsf": 499, "bikesh": 473, "bilinear": 510, "bin": [388, 406, 418, 424, 445, 453, 460, 463, 464, 466, 468, 469, 470, 471, 508, 509, 514, 531, 533, 535, 539, 542], "binari": [386, 390, 393, 395, 397, 398, 399, 400, 402, 404, 408, 414, 417, 418, 422, 425, 427, 432, 433, 434, 442, 443, 445, 446, 447, 448, 450, 452, 453, 456, 460, 461, 463, 464, 466, 469, 470, 471, 481, 483, 489, 490, 495, 498, 502, 504, 505, 507, 513, 514, 517, 519, 520, 527, 529, 539, 541, 542, 543, 551, 553, 554, 555, 557, 558, 559, 560, 563, 564, 565, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 581], "binary128": 479, "binary16": 479, "binary32": 479, "binary64": 479, "binary_nam": 442, "binary_preced": [577, 578], "binaryexprast": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "binaryoper": [404, 507], "binarypreced": [556, 557, 558, 559, 566, 567, 568, 569], "bind": [400, 404, 431, 432, 457, 479, 491, 529, 530, 539, 544, 545, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "bindex": 539, "bindir": 417, "binfmt": 463, "binfmt_misc": 463, "bininteg": 530, "binloc": [559, 569], "binop": [385, 479, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "binop_preced": [573, 574, 575, 576, 577, 578], "binoppreced": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "binopprototyp": [577, 578], "binoprh": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "binpath": 451, "binutil": [400, 447, 453, 463, 466, 467, 471], "bisect": [507, 545], "bisect_script": 509, "bison": 534, "bit": [6, 9, 10, 12, 13, 17, 18, 20, 29, 30, 31, 33, 36, 37, 38, 42, 44, 45, 48, 52, 53, 66, 72, 83, 84, 85, 99, 102, 104, 107, 108, 109, 110, 114, 115, 121, 122, 126, 127, 129, 131, 146, 157, 171, 185, 188, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 205, 209, 210, 211, 212, 214, 215, 216, 218, 221, 222, 223, 227, 233, 249, 256, 268, 282, 285, 288, 289, 291, 292, 296, 297, 299, 308, 309, 310, 312, 315, 316, 317, 318, 322, 324, 325, 328, 332, 333, 346, 353, 365, 366, 367, 381, 383, 384, 385, 386, 388, 390, 392, 395, 400, 401, 402, 405, 413, 415, 424, 446, 447, 449, 450, 452, 454, 455, 456, 460, 461, 462, 463, 464, 465, 467, 473, 475, 477, 480, 481, 484, 489, 490, 491, 494, 495, 499, 500, 502, 513, 514, 517, 519, 520, 522, 524, 527, 529, 530, 531, 537, 539, 540, 543, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "bitbucket": [509, 510], "bitcast": [389, 392, 405, 449, 454, 461, 462, 465, 489, 505, 537, 539], "bitcod": [397, 398, 402, 406, 408, 410, 413, 414, 417, 421, 422, 425, 426, 443, 452, 455, 463, 464, 466, 474, 479, 489, 490, 505, 507, 533, 540, 545], "bitcoderead": 455, "bitcodewrit": [455, 507], "bite": 457, "bitfield": [390, 494, 495, 499, 543], "bitless": 502, "bitmap": 393, "bitmask": [384, 479, 494, 502], "bitmask_perm": 384, "bitpack": 535, "bitpattern": 479, "bitread": 478, "bitset": [481, 537, 539, 544], "bitsetcas": 544, "bitstreamwrit": 455, "bitwidth": [393, 479, 489, 524], "bitwis": [385, 402, 505], "bjark": 446, "bjarn": 507, "bl": [405, 456, 531], "black": 541, "blah": [404, 445, 481], "blame": [403, 506, 509], "blank": [404, 405, 413, 420, 434, 452, 485, 506, 521, 551, 552, 560, 562, 570, 571, 572, 573, 579], "blanket": 491, "blarg": 507, "blatent": [557, 567, 578], "bleed": [401, 545], "blend": 402, "blind": 402, "bliss": [445, 446], "bloat": 404, "blob": [393, 479, 509, 514, 520], "block": [386, 389, 395, 396, 401, 402, 411, 415, 416, 418, 421, 423, 432, 433, 434, 449, 452, 454, 459, 461, 465, 472, 477, 480, 481, 485, 488, 489, 490, 491, 497, 498, 503, 511, 512, 513, 514, 518, 519, 520, 521, 522, 527, 529, 537, 538, 539, 540, 545, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "block_begin": [574, 575, 576, 577, 578], "block_par": [576, 577, 578], "blockaddress": 479, "blockdim": 490, "blocker": [472, 514], "blockfrequencyinfo": [394, 545], "blockid": 393, "blockidx": 490, "blocklen": 393, "blocklen_32": 393, "blockmapaddr": 499, "blocknam": 393, "blockscalartrait": 544, "blocksiz": 499, "blocksizex": 490, "blocksizey": 490, "blocksizez": 490, "blog": [509, 520], "blogspot": 520, "bloom": 402, "blow": 481, "blr": 456, "blunt": 542, "blx": 456, "bmi2": 520, "bnextind": 479, "bo": 404, "board": [468, 471, 516], "boat": [404, 511], "bob": 544, "bodi": [393, 397, 404, 405, 445, 449, 452, 454, 479, 481, 484, 489, 491, 507, 511, 518, 519, 520, 524, 529, 531, 539, 540, 542, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "body_v": 578, "bodyexpr": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 578], "bodyitem": 530, "bodylist": 530, "bodysequ": 543, "bodyv": [557, 558, 559, 567, 568, 569], "boehm": 461, "bogner": 465, "bogus": [540, 558, 568], "boil": [392, 452, 473, 509, 555, 556, 565, 566, 576, 577], "boiler": [445, 507], "boilerpl": [445, 461, 473, 527, 575], "bold": [485, 521], "bonair": 386, "bondhugula": 510, "bone": [522, 539, 546], "book": [404, 448, 480, 507, 540, 545], "bookkeep": [505, 507], "bool": [389, 390, 398, 400, 402, 404, 429, 445, 449, 455, 465, 473, 479, 481, 489, 492, 507, 515, 519, 539, 540, 541, 542, 544, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "boolean": [386, 393, 400, 402, 404, 410, 449, 478, 479, 502, 505, 507, 527, 529, 535, 539, 555, 565, 576], "boolean128": 502, "boolean16": 502, "boolean32": 502, "boolean64": 502, "boolean8": 502, "boolean_property_nam": 478, "boolordefault": 445, "booltmp": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "boost": 391, "bootstrap": [398, 463], "bootstrap_": [388, 398, 453], "borderlin": 404, "bore": [405, 540], "boringssl": 481, "bork": [445, 529], "borrow": [479, 507], "bot": [388, 404, 452, 509, 545], "both": [4, 102, 186, 283, 382, 384, 386, 387, 388, 389, 390, 393, 395, 397, 398, 400, 401, 402, 403, 404, 405, 409, 413, 418, 426, 428, 429, 430, 433, 434, 445, 446, 447, 450, 452, 454, 457, 459, 460, 461, 462, 465, 470, 471, 472, 473, 479, 481, 483, 489, 491, 495, 499, 500, 504, 505, 507, 511, 512, 513, 516, 517, 518, 519, 520, 522, 524, 527, 529, 530, 531, 535, 536, 538, 539, 540, 541, 542, 544, 546, 547, 552, 553, 554, 555, 557, 559, 560, 562, 563, 564, 565, 567, 569, 570, 571, 573, 574, 575, 576, 578, 579], "bother": [547, 557, 567, 578], "botsalgn": 510, "botsspar": 510, "bottleneck": 429, "bottom": [394, 411, 445, 465, 479, 480, 505, 506, 525, 538, 539, 540, 547, 576], "bou_fals": 445, "bou_tru": 445, "bou_unset": 445, "bougacha": 465, "bound": [385, 429, 452, 465, 477, 479, 484, 490, 507, 520, 523, 524, 529, 539, 544], "bound_ctrl": [0, 2, 3, 386], "boundari": [390, 392, 393, 399, 402, 449, 479, 505, 507, 520, 554, 564], "bourn": [445, 463], "box": [402, 452, 506, 513, 519, 520, 541], "bp": [522, 531], "bpf": [402, 463, 481, 511], "bpf_add": 402, "bpf_alu": 402, "bpf_alu64": 402, "bpf_and": 402, "bpf_arsh": 402, "bpf_b": 402, "bpf_call": 402, "bpf_class": 402, "bpf_div": 402, "bpf_dw": 402, "bpf_end": 402, "bpf_exit": 402, "bpf_h": 402, "bpf_imm": 402, "bpf_ja": 402, "bpf_jeq": 402, "bpf_jge": 402, "bpf_jgt": 402, "bpf_jmp": 402, "bpf_jne": 402, "bpf_jset": 402, "bpf_jsge": 402, "bpf_jsgt": 402, "bpf_k": 402, "bpf_ld": 402, "bpf_ldx": 402, "bpf_lsh": 402, "bpf_mem": 402, "bpf_mod": 402, "bpf_mov": 402, "bpf_mul": 402, "bpf_neg": 402, "bpf_op": 402, "bpf_or": 402, "bpf_rsh": 402, "bpf_st": 402, "bpf_stx": 402, "bpf_sub": 402, "bpf_w": 402, "bpf_x": 402, "bpf_xadd": 402, "bpf_xor": 402, "bpl": 531, "bptr": 479, "br": [393, 394, 449, 454, 457, 458, 488, 490, 519, 536, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 578], "br_cc": 465, "bra": 490, "brace": [405, 454, 479, 507, 529, 530, 535], "brach": 509, "bracket": [404, 405, 446, 452, 454, 478, 479, 484, 519, 544], "bradburi": 511, "bradburyconcern": 511, "bradburytransit": 511, "brain": 404, "branch": [37, 127, 223, 317, 385, 399, 400, 402, 404, 418, 429, 447, 449, 452, 453, 454, 457, 458, 459, 463, 479, 484, 492, 506, 507, 511, 512, 520, 524, 537, 545, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "branch_weight": [394, 395], "branchfold": 539, "branchfunnel": 479, "branchless": 520, "brand": 540, "brave": [552, 562, 573], "breadth": [411, 510, 551, 571, 572], "breagen": 510, "break": [392, 395, 400, 402, 404, 445, 452, 454, 455, 456, 461, 467, 472, 475, 479, 486, 504, 513, 519, 520, 524, 538, 539, 540, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 576, 577], "breakag": [452, 509], "breakcriticaledg": 540, "breakdown": 396, "breakpoint": [386, 397, 451, 551, 559, 569, 571], "brendan": 542, "breviti": [392, 490, 491], "brew": 507, "brian": 512, "brick": 489, "bridg": 465, "brief": [389, 400, 401, 404, 433, 445, 463, 474, 489], "briefli": [450, 469, 489, 540], "brig": 386, "bring": [404, 459, 461, 481, 507, 515, 524, 546, 560, 570, 579], "broad": [445, 452, 461, 465, 507, 551, 554, 564, 572, 575], "broadcast": [384, 402, 479, 480], "broader": 520, "broken": [392, 409, 431, 446, 452, 457, 467, 479, 507, 509, 511, 520, 524, 529, 535, 539, 540, 545], "broker": 479, "brought": [489, 509], "brows": [400, 460, 506, 509, 553, 563, 574], "browsabl": 400, "browser": [469, 506, 542, 545], "brtarget": 539, "brtarget8": 539, "bruce": 507, "bruno": 511, "bsd": [413, 430, 452], "bsd4": 413, "bsds": 463, "bss": [386, 411, 430, 456], "bswap": [455, 513], "bswap32r_bswap64r_movsx64rr32": 424, "bt": 451, "bt331": 510, "btver2": 429, "bucket": [433, 436, 437, 497, 500, 502, 507, 517, 519], "bucket_count": 519, "buf": 515, "buffer": [10, 24, 25, 26, 27, 28, 50, 51, 72, 108, 117, 118, 119, 120, 135, 136, 157, 192, 198, 199, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 235, 236, 256, 289, 303, 304, 305, 306, 307, 330, 331, 353, 386, 399, 424, 429, 454, 479, 482, 495, 500, 502, 507, 519, 527, 541, 543, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "buffer_atomic_add": [0, 1, 2, 3], "buffer_atomic_add_x2": [0, 1, 2, 3], "buffer_atomic_and": [0, 1, 2, 3], "buffer_atomic_and_x2": [0, 1, 2, 3], "buffer_atomic_cmpswap": [0, 1, 2, 3], "buffer_atomic_cmpswap_x2": [0, 1, 2, 3], "buffer_atomic_dec": [0, 1, 2, 3], "buffer_atomic_dec_x2": [0, 1, 2, 3], "buffer_atomic_inc": [0, 1, 2, 3, 386], "buffer_atomic_inc_x2": [0, 1, 2, 3], "buffer_atomic_or": [0, 1, 2, 3], "buffer_atomic_or_x2": [0, 1, 2, 3], "buffer_atomic_smax": [0, 1, 2, 3], "buffer_atomic_smax_x2": [0, 1, 2, 3], "buffer_atomic_smin": [0, 1, 2, 3], "buffer_atomic_smin_x2": [0, 1, 2, 3], "buffer_atomic_sub": [0, 1, 2, 3], "buffer_atomic_sub_x2": [0, 1, 2, 3], "buffer_atomic_swap": [0, 1, 2, 3], "buffer_atomic_swap_x2": [0, 1, 2, 3], "buffer_atomic_umax": [0, 1, 2, 3], "buffer_atomic_umax_x2": [0, 1, 2, 3], "buffer_atomic_umin": [0, 1, 2, 3], "buffer_atomic_umin_x2": [0, 1, 2, 3], "buffer_atomic_xor": [0, 1, 2, 3], "buffer_atomic_xor_x2": [0, 1, 2, 3], "buffer_gl": 386, "buffer_gl0_inv": [0, 386], "buffer_gl1_inv": [0, 386], "buffer_load": 386, "buffer_load_dword": [0, 1, 2, 3, 386], "buffer_load_dwordx2": [0, 1, 2, 3], "buffer_load_dwordx3": [0, 1, 2, 3], "buffer_load_dwordx4": [0, 1, 2, 3], "buffer_load_format_d16_hi_x": 3, "buffer_load_format_d16_x": [0, 2, 3], "buffer_load_format_d16_xi": [0, 2, 3], "buffer_load_format_d16_xyz": [0, 2, 3], "buffer_load_format_d16_xyzw": [0, 2, 3], "buffer_load_format_x": [0, 1, 2, 3], "buffer_load_format_xi": [0, 1, 2, 3], "buffer_load_format_xyz": [0, 1, 2, 3], "buffer_load_format_xyzw": [0, 1, 2, 3], "buffer_load_sbyt": [0, 1, 2, 3], "buffer_load_sbyte_d16": [0, 3], "buffer_load_sbyte_d16_hi": [0, 3], "buffer_load_short_d16": [0, 3], "buffer_load_short_d16_hi": [0, 3], "buffer_load_sshort": [0, 1, 2, 3], "buffer_load_ubyt": [0, 1, 2, 3], "buffer_load_ubyte_d16": [0, 3], "buffer_load_ubyte_d16_hi": [0, 3], "buffer_load_ushort": [0, 1, 2, 3], "buffer_s": 543, "buffer_store_byt": [0, 1, 2, 3], "buffer_store_byte_d16_hi": [0, 3], "buffer_store_dword": [0, 1, 2, 3], "buffer_store_dwordx2": [0, 1, 2, 3], "buffer_store_dwordx3": [0, 1, 2, 3], "buffer_store_dwordx4": [0, 1, 2, 3, 383, 386], "buffer_store_format_d16_hi_x": 3, "buffer_store_format_d16_x": [0, 2, 3], "buffer_store_format_d16_xi": [0, 2, 3], "buffer_store_format_d16_xyz": [0, 2, 3], "buffer_store_format_d16_xyzw": [0, 2, 3], "buffer_store_format_x": [0, 1, 2, 3], "buffer_store_format_xi": [0, 1, 2, 3, 386], "buffer_store_format_xyz": [0, 1, 2, 3], "buffer_store_format_xyzw": [0, 1, 2, 3], "buffer_store_lds_dword": [2, 3], "buffer_store_short": [0, 1, 2, 3], "buffer_store_short_d16_hi": [0, 3], "buffer_wbinvl1": [1, 2, 3, 386], "buffer_wbinvl1_vol": [1, 2, 3, 386], "bug": [385, 387, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 425, 429, 452, 459, 463, 471, 472, 479, 480, 481, 484, 489, 505, 506, 507, 509, 511, 513, 523, 529, 530, 531, 535, 545, 553, 557, 560, 563, 567, 570, 574, 578, 579], "buggi": 474, "bugpoint": [408, 425, 452, 463, 474, 492, 540, 545], "bugzilla": [396, 452, 460, 472, 481, 509, 514, 524, 535, 545], "buid": 449, "build": [389, 393, 400, 401, 402, 404, 407, 408, 409, 413, 417, 418, 424, 431, 443, 445, 446, 448, 449, 451, 452, 454, 461, 463, 464, 465, 479, 482, 491, 492, 495, 504, 505, 512, 514, 517, 519, 520, 527, 528, 529, 531, 533, 534, 535, 537, 539, 541, 545, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "build_add": [574, 575, 576, 577, 578], "build_alloca": 578, "build_arch": 508, "build_br": [576, 577, 578], "build_cal": [574, 575, 576, 577, 578], "build_cond_br": [576, 577, 578], "build_config": 464, "build_dir": 509, "build_docker_imag": 453, "build_fadd": 574, "build_fcmp": [574, 575, 576, 577, 578], "build_fmul": 574, "build_for_websit": 472, "build_fsub": 574, "build_load": 578, "build_mod": 464, "build_mul": [574, 575, 576, 577, 578], "build_phi": [576, 577, 578], "build_ret": [574, 575, 576, 577, 578], "build_shared_lib": [398, 400], "build_stor": 578, "build_sub": [574, 575, 576, 577, 578], "build_uitofp": [574, 575, 576, 577, 578], "buildattribut": 470, "buildbot": [409, 452, 460, 472, 509, 535, 545], "builddir": 467, "builder": [463, 475, 491, 507, 519, 540, 545, 548, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "builder_at": 578, "buildmi": 402, "buildmod": 535, "buildmodul": 546, "buildnumb": 495, "buildroot": 513, "buildslav": 467, "buildtool": 478, "built": [388, 393, 398, 400, 416, 417, 418, 420, 433, 442, 445, 446, 448, 452, 453, 454, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 478, 479, 480, 481, 488, 495, 502, 503, 505, 507, 508, 509, 512, 513, 517, 519, 520, 527, 531, 534, 535, 539, 542, 543, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "builtin": [390, 393, 409, 416, 479, 490, 507, 509, 513, 540, 545, 556, 557, 558, 559, 566, 567, 568, 569, 573, 577, 578], "bulk": [402, 452, 507, 557, 567, 578], "bulki": 386, "bullet": [457, 473], "bump": [461, 507, 518], "bunch": [388, 401, 457, 507, 534, 551, 554, 556, 564, 566, 572, 575, 577], "bundl": [407, 423, 449], "bunzip2": 463, "bur": 480, "burden": [452, 479, 488, 520], "burg": 480, "buri": 404, "burk": 510, "burn": 468, "burr": 411, "busi": 452, "busiest": 506, "but": [17, 18, 48, 105, 114, 115, 131, 189, 202, 203, 233, 286, 296, 297, 328, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 411, 413, 415, 417, 418, 420, 423, 424, 426, 429, 431, 432, 433, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 499, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "button": 506, "buy": 468, "bw": 456, "bwave": 510, "bwaves_": 510, "bwaves_r": 510, "bx": 531, "by": [4, 11, 14, 15, 16, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 42, 51, 82, 84, 102, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 136, 170, 186, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 217, 218, 221, 223, 227, 236, 267, 283, 290, 293, 294, 295, 298, 299, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 317, 318, 322, 364, 366, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 437, 442, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 530, 531, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580], "by_valu": 386, "byarg": 479, "bypass": [384, 386, 387, 446, 479, 520, 549, 550], "byproduct": 465, "byte": [43, 44, 45, 130, 131, 228, 229, 230, 323, 324, 325, 384, 386, 389, 390, 392, 393, 402, 413, 415, 432, 436, 437, 449, 450, 455, 456, 462, 465, 479, 481, 493, 494, 495, 497, 498, 499, 500, 502, 503, 507, 513, 515, 517, 518, 519, 522, 524, 537, 539, 543, 573, 574, 575, 576, 577, 578], "byte_0": [384, 386], "byte_1": [384, 386], "byte_2": [384, 386], "byte_3": 384, "bytearray": 479, "bytecod": [393, 399], "byteswap": 455, "byval": [393, 402, 479, 513], "byvalu": 386, "bz2": 463, "bzip2": 463, "c1": 537, "c11": [390, 446, 495, 498, 519], "c11bytes": [495, 498], "c11lineinfo": 498, "c11size": 498, "c13": [433, 495, 498], "c13bytes": [495, 498], "c13lineinfo": 498, "c13size": 498, "c1_1": 434, "c1_2": 434, "c1_n": 434, "c1_u_1": 434, "c1_u_i": 434, "c1x": 479, "c2": [537, 573, 574, 575, 576, 577, 578], "c2_1": 434, "c2_2": 434, "c2_n": 434, "c2_u_": 434, "c2_u_2": 434, "c2_v_1": 434, "c2_v_2": 434, "c2_v_i": 434, "c2_v_t": 434, "c99": 479, "c_ctor_bas": 405, "c_str": [445, 490, 507, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "cach": [384, 386, 388, 389, 390, 398, 401, 402, 429, 465, 468, 479, 483, 491, 505, 507, 517, 519, 520, 522, 533, 540, 559, 569], "cachefil": 533, "cactubssn": 510, "cactubssn_r": 510, "caf": 487, "caico": 386, "calcul": [386, 389, 394, 402, 418, 429, 454, 462, 479, 480, 505, 507, 519, 535, 539, 540, 555, 565, 576], "call": [386, 387, 388, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 405, 409, 411, 413, 415, 418, 431, 434, 445, 446, 447, 449, 450, 451, 453, 454, 455, 458, 459, 461, 463, 465, 469, 475, 478, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 494, 500, 504, 506, 508, 509, 512, 513, 517, 518, 519, 520, 522, 523, 524, 525, 527, 529, 530, 534, 535, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "call2": 405, "call32m": 529, "call32r": 529, "call64pcrel32": 484, "call_branch_weight": 395, "call_convent": 386, "call_site_num": 454, "callabl": [404, 479, 490, 553, 563, 574], "callahan": 512, "callback": [389, 402, 449, 461, 481, 507, 522, 539, 546, 548, 550, 580], "callbackvh": 507, "callcount": 507, "calle": [392, 402, 446, 457, 481, 489, 505, 520, 522, 524, 529, 537, 539, 540, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "calledcount": 397, "calleef": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "caller": [392, 397, 402, 442, 446, 449, 454, 456, 457, 461, 479, 481, 489, 505, 507, 518, 520, 539, 540, 555, 556, 565, 566, 574, 576, 577], "caller_pc": 481, "callexprast": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "callgraph": [436, 437], "callgraphscc": [492, 540], "callgraphsccpass": 492, "callingconv": [393, 539], "callinst": 507, "callloweringinfo": 542, "callon": 507, "callpcrel32": 529, "callq": [518, 520, 522, 524], "callseq_end": 524, "callseq_start": 524, "callsit": [395, 479, 484, 520, 522, 524], "calltmp": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "calltmp1": [553, 555, 563, 565, 574, 576], "calltmp2": [554, 564, 575], "calltmp6": [557, 567, 578], "calltwo": 507, "callvoidvoid": 550, "calm": [557, 567, 578], "cam4_": 510, "cam4_r": 510, "came": [388, 430, 454, 520, 555, 560, 565, 570, 576, 579], "camel": [404, 511], "camelback": 511, "camelcas": 511, "camera": 487, "caml": [572, 573], "camlp4": [572, 573], "camlp4of": [573, 574, 575, 576, 577, 578], "can": [383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 428, 429, 431, 432, 433, 434, 435, 439, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 497, 499, 500, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "canadian": 463, "canari": 479, "cancel": 454, "canconstantfoldcallto": 455, "candid": [396, 452, 453, 458, 479, 484, 512, 514], "canfoldasload": 531, "canlosslesslybitcastto": 489, "cannot": [28, 120, 213, 307, 382, 384, 385, 386, 387, 389, 390, 392, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 418, 419, 429, 434, 442, 445, 446, 449, 452, 454, 456, 461, 462, 464, 465, 470, 477, 479, 483, 499, 500, 505, 506, 507, 509, 511, 516, 519, 520, 525, 533, 536, 538, 539, 540, 546, 553, 560, 563, 570, 579], "canon": [392, 454, 459, 479, 505, 507, 509, 519, 520, 549, 550], "canonic": [402, 405, 507, 540], "canonicalis": 392, "canreserveresourc": 402, "cantfail": [546, 547, 548, 549, 550, 554, 555, 556, 557, 564, 565, 566, 567], "capabl": [389, 402, 445, 446, 447, 455, 463, 479, 482, 488, 490, 500, 507, 519, 527, 539, 540, 553, 554, 556, 557, 560, 563, 564, 566, 567, 570, 574, 575, 577, 578, 579], "capac": [497, 507], "capit": [404, 452, 511], "capston": 481, "captur": [393, 397, 398, 402, 405, 445, 455, 465, 479, 511, 512, 519, 520, 522, 535, 539, 541, 543, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579], "card": [468, 524], "care": [386, 387, 389, 390, 402, 403, 404, 405, 446, 452, 459, 460, 461, 463, 472, 479, 481, 484, 486, 488, 507, 509, 519, 520, 525, 529, 531, 534, 539, 540, 557, 560, 567, 570, 578, 579], "careless": 404, "caret": [418, 479], "carri": [413, 429, 462, 479, 486, 507, 536], "carrizo": 386, "carruth": [511, 520], "carruthacronym": 511, "carruthcamelback": 511, "carruthdistinguish": 511, "carruthfunct": 511, "carruthinconsist": 511, "carruthlow": 511, "case": [382, 385, 386, 387, 389, 390, 392, 393, 395, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 413, 417, 419, 423, 425, 429, 430, 431, 443, 445, 446, 448, 449, 450, 453, 454, 455, 457, 458, 459, 461, 462, 463, 465, 468, 469, 470, 471, 473, 474, 476, 477, 479, 481, 482, 483, 484, 485, 486, 488, 489, 492, 494, 495, 500, 502, 505, 507, 508, 509, 510, 511, 513, 516, 517, 518, 519, 520, 521, 522, 524, 525, 527, 529, 530, 534, 535, 536, 538, 539, 540, 544, 545, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "case_branch_weight": 395, "cassert": [404, 490, 549, 550, 554, 555, 556, 557, 558, 564, 565, 566, 567, 568], "cast": [392, 399, 404, 445, 473, 479, 489, 491, 512, 513, 519, 524, 529, 530, 531, 554, 555, 556, 557, 559, 560, 564, 565, 566, 567, 569, 570, 575, 579], "cast210": 479, "cast_or_nul": 507, "castinst": 507, "casual": 452, "cat": [419, 442, 445, 461, 463, 481, 535], "catagor": 505, "catapult": 541, "catastroph": 520, "catch": [445, 451, 452, 462, 470, 479, 480, 507, 520, 553, 554, 563, 564, 574, 575], "catch3": 454, "catchpad": 454, "catchret": 454, "catchswitch": 454, "categor": [445, 505, 527, 539], "categori": [404, 423, 433, 442, 474, 479, 505, 507, 519, 527, 535, 539, 543], "cater": 527, "caught": [404, 454, 479], "caus": [386, 389, 390, 392, 396, 397, 400, 402, 404, 405, 406, 407, 409, 411, 413, 415, 418, 421, 426, 429, 431, 443, 445, 452, 455, 456, 457, 461, 463, 465, 466, 469, 470, 474, 479, 481, 483, 492, 505, 507, 508, 509, 517, 519, 520, 523, 524, 525, 535, 537, 538, 540, 544, 552, 553, 555, 556, 557, 559, 562, 563, 565, 566, 567, 569, 573, 578], "caution": [390, 524], "caveat": [446, 559, 569], "cayman": 386, "cbe": 474, "cbpf": 402, "cbtw": 402, "cbw": 402, "cc": [386, 402, 442, 448, 463, 466, 471, 472, 479, 481, 506, 514, 517, 527, 542, 574, 575, 576, 577, 578], "cc1": 451, "cc_sparc32": 539, "ccach": 400, "ccache_dir": 400, "ccache_maxs": 400, "ccaddr": [549, 550], "ccassigntoreg": 539, "ccassigntoregwithshadow": 539, "ccassigntostack": 539, "ccc": [393, 479], "ccdelegateto": 539, "ccif": 539, "ccifcc": 539, "ccifinreg": 539, "ccifnest": 539, "ccifnotvararg": 539, "cciftyp": 539, "cclib": [577, 578], "ccmake": 400, "ccmgrorerr": 550, "cconv": 479, "ccpassbyv": 539, "ccpromotetotyp": 539, "cctype": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "cd": [400, 463, 464, 466, 472, 474, 509, 517, 519, 533, 534, 542], "cdbg_user": 386, "cdecl": 479, "cedar": 386, "cee": 507, "ceil": [386, 499, 538], "cell": 539, "center": [507, 559, 569], "central": [454, 519, 525], "centric": 479, "cerr": [490, 542], "certain": [386, 389, 390, 392, 400, 402, 405, 409, 413, 445, 449, 450, 455, 456, 459, 461, 463, 479, 481, 493, 499, 500, 504, 505, 507, 509, 520, 522, 524, 529, 540, 541, 542, 554, 556, 557, 558, 560, 564, 566, 567, 568, 570, 575, 578, 579], "certifi": 457, "cfa": 454, "cfd": 510, "cfe": [452, 463, 472, 487, 506, 509, 512], "cfg": [402, 409, 432, 454, 464, 477, 479, 489, 492, 507, 512, 535, 539, 540, 555, 565, 576], "cfgs": 507, "cfgsimplifi": 507, "cfi": [399, 454, 480, 484, 520], "cfi_instruct": 484, "cfi_offset": 484, "cflag": [481, 508], "cfrac": 534, "cg": [436, 437, 540], "cg_profil": 456, "cgft_objectfil": [558, 568], "cgo": [446, 512], "cgp_from": 456, "cgp_to": 456, "cgp_weight": 456, "cgroup": 453, "ch": 531, "ch9": [559, 569], "chain": [387, 388, 395, 400, 402, 409, 423, 429, 449, 465, 479, 480, 482, 488, 489, 505, 513, 519, 525, 527, 536, 539, 540, 557, 567, 578], "challeng": [404, 452, 465, 520, 524, 556, 566, 577], "chanc": [395, 449, 452, 459, 479, 483, 531, 541, 544, 551, 571, 572], "chandler": [511, 520], "chandlerc": [506, 520], "chang": [384, 386, 389, 392, 393, 395, 396, 397, 398, 400, 402, 403, 404, 405, 406, 409, 414, 416, 417, 421, 429, 431, 445, 446, 448, 449, 455, 457, 459, 460, 461, 462, 464, 465, 467, 472, 473, 475, 477, 478, 479, 480, 482, 483, 489, 490, 491, 492, 495, 500, 504, 505, 511, 514, 515, 520, 522, 524, 526, 527, 529, 532, 533, 534, 536, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 575, 576, 577, 578], "changebit": 481, "changebyt": 481, "changelog": 481, "channel": [8, 106, 190, 287, 384, 386, 403, 448, 520, 545, 550], "chao": 388, "chapter": [448, 489, 545, 551, 560, 561, 570, 571, 572, 579], "char": [389, 404, 413, 445, 450, 451, 462, 479, 481, 482, 490, 491, 495, 499, 502, 507, 513, 517, 519, 520, 538, 539, 540, 541, 542, 546, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "char16_t": 502, "char32_t": 502, "char6": 393, "charact": [384, 402, 409, 413, 418, 419, 429, 430, 431, 445, 450, 479, 484, 486, 507, 519, 527, 529, 530, 535, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "character": [479, 520], "character16": 502, "character32": 502, "characterist": [50, 135, 235, 330, 402, 424, 455, 479, 495, 507, 512, 539, 548, 581], "charg": [402, 487], "charscalarti": 479, "chart": 538, "chase": 474, "chat": 403, "cheap": [390, 404, 452, 479, 507], "cheaper": [458, 465, 507, 520], "cheapest": 465, "cheapli": [488, 520], "cheat": 548, "check": [385, 386, 388, 390, 399, 400, 401, 402, 404, 406, 407, 409, 413, 424, 429, 445, 449, 450, 452, 453, 454, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 481, 482, 484, 485, 489, 490, 491, 492, 506, 509, 512, 513, 514, 517, 518, 519, 520, 521, 522, 523, 524, 529, 533, 534, 535, 536, 537, 539, 540, 542, 544, 545, 546, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "checkcudaerror": 490, "checker": [462, 474, 511, 527], "checkformat": 507, "checkout": [400, 453, 469, 504, 514], "checkpoint": 454, "checksum": [456, 479, 481, 517], "checksumkind": [456, 479], "chees": 404, "child": [454, 473, 479, 481, 507, 556, 566, 577], "child_begin": 507, "child_end": 507, "child_iter": 507, "childidx": 507, "childorerr": 507, "children": [423, 473, 493, 507, 529], "childvalid": 507, "chip": [386, 402, 410, 411, 468, 471, 490, 535, 539], "chmod": 463, "choic": [404, 410, 422, 455, 463, 465, 468, 479, 481, 506, 507, 522, 524, 551, 555, 560, 561, 565, 570, 576, 579], "choos": [392, 400, 402, 403, 406, 411, 432, 445, 446, 452, 461, 467, 470, 471, 474, 476, 479, 487, 488, 491, 506, 507, 511, 516, 519, 533, 539, 540, 541, 542, 551, 552, 554, 555, 562, 564, 565, 572, 573, 574, 575, 576], "chop": 519, "chose": [449, 514, 520, 575], "chosen": [392, 402, 404, 409, 461, 479, 524, 541], "chris": [402, 404, 446, 452, 509, 511, 540, 579], "chriscox": 510, "chrome": 541, "chromium": 472, "chronolog": [509, 511], "chunk": [392, 393, 402, 404, 433, 481, 505, 518, 519, 574], "churn": 548, "ci": [386, 452], "cie": 480, "cimag": [556, 566, 577], "cin": 457, "cindex": 539, "cint2006": 533, "circl": 473, "circuit": [556, 566, 577], "circular": [404, 541], "circumst": [396, 405, 454, 479, 507, 513, 519, 539, 540, 554, 557, 564, 567, 575, 578], "circumv": 445, "cis": 391, "cis501": 391, "cite": 511, "citi": [487, 545], "citizen": 507, "cl": [495, 519, 531, 535, 540, 550], "claim": [390, 452, 543], "clamp": [0, 1, 2, 3, 386, 479], "clampnumel": 465, "clampscalar": 465, "clang": [386, 390, 395, 398, 399, 400, 404, 405, 409, 410, 418, 420, 429, 432, 442, 448, 450, 451, 452, 453, 454, 457, 459, 462, 464, 466, 473, 474, 478, 479, 480, 481, 482, 490, 491, 492, 503, 506, 507, 508, 509, 511, 513, 514, 519, 531, 533, 535, 536, 537, 538, 541, 542, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 575, 578, 579], "clang_analyzer_enable_z3_solv": 513, "clang_attr_arg_context_list": 527, "clang_attr_identifier_arg_list": 527, "clang_bootstrap_cmake_arg": 388, "clang_cc1": [405, 535], "clang_cl": 535, "clang_cpp": 535, "clang_enable_bootstrap": 388, "clangxx": 535, "clarif": [404, 447, 452, 543], "clarifi": 519, "clariti": [479, 516, 555, 565, 576], "clase": [507, 546], "clasess": 491, "clash": [404, 479, 487, 549, 550], "class": [386, 387, 392, 393, 403, 405, 424, 433, 444, 448, 452, 454, 455, 460, 461, 463, 465, 475, 477, 480, 483, 486, 489, 491, 492, 494, 495, 500, 502, 504, 505, 511, 512, 517, 519, 520, 525, 527, 531, 537, 541, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 578, 579], "classic": [402, 404, 505, 507, 513, 520], "classid": 530, "classif": [479, 523, 525], "classifi": [389, 479], "classnam": [444, 495], "classof": 527, "claus": [386, 402, 452, 454, 479, 507], "clean": [402, 404, 406, 452, 454, 463, 465, 469, 472, 474, 479, 482, 490, 505, 506, 507, 509, 513, 520, 540], "cleaner": [404, 445, 507], "cleanup": [449, 452, 479, 480, 505, 519, 554, 555, 564, 565, 575, 576], "cleanuppad": [449, 454], "cleanupret": [449, 454], "clear": [396, 404, 405, 443, 452, 461, 462, 477, 478, 479, 488, 494, 495, 499, 502, 507, 509, 511, 519, 520, 522, 524, 541, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "clearer": 404, "cleargraphattr": 507, "clearresourc": 402, "clenumv": 445, "clenumvaln": 445, "clever": [392, 473, 560, 570, 579], "click": [452, 464, 506], "client": [393, 400, 402, 404, 416, 445, 452, 461, 473, 478, 483, 486, 491, 507, 509, 519, 522, 533, 537, 539, 540, 545, 546, 547, 550, 554, 557, 564, 567, 575, 578], "clientaddr": 550, "clientaddrlen": 550, "cling": 491, "clip": 451, "clobber": [389, 484, 520, 529], "clock": [479, 540], "clone": [409, 452, 463, 466, 507, 512, 527, 533, 534, 540, 557, 567, 578], "close": [398, 402, 404, 416, 449, 462, 463, 465, 472, 479, 480, 481, 506, 507, 514, 520, 540, 545, 552, 562, 573], "close_fd_mask": 481, "closer": [462, 480], "closest": [479, 559, 569], "closur": [478, 560, 570, 579], "clr": [495, 524], "clrb": 402, "clrl": 402, "clrq": 402, "clrw": 402, "cluster": 424, "cluster_id": 424, "clutter": [404, 452], "cm": 511, "cmake": [388, 391, 416, 452, 453, 460, 463, 464, 466, 467, 468, 469, 478, 485, 507, 509, 510, 513, 517, 521, 533, 535, 539, 542, 545], "cmake_": [398, 401], "cmake_asm_compiler_target": 470, "cmake_asm_flag": 470, "cmake_build_typ": [398, 400, 401, 463, 533], "cmake_c_compil": [463, 533], "cmake_c_compiler_external_toolchain": 470, "cmake_c_compiler_target": 470, "cmake_c_flag": [400, 470, 533], "cmake_c_flags_optim": 533, "cmake_cflag": 470, "cmake_cxx_compil": 463, "cmake_cxx_flag": 400, "cmake_cxx_flags_releas": 463, "cmake_cxx_flags_relwithdebinfo": 463, "cmake_instal": 400, "cmake_install_prefix": [388, 400, 463, 464, 471], "cmake_lang_compil": 533, "cmake_lang_flag": 533, "cmake_minimum_requir": [400, 401], "cmake_module_path": 400, "cmake_parse_argu": 401, "cmake_sysroot": 470, "cmake_toolchain_fil": [400, 463], "cmake_try_compile_target": 470, "cmake_verbose_makefil": 388, "cmakecach": [400, 401, 542], "cmakefil": [463, 533], "cmakelist": [388, 400, 401, 416, 463, 472, 533, 539, 540], "cmakeparseargu": 401, "cmd": [391, 506], "cmov": 520, "cmovcc": 520, "cmoveq": 520, "cmovneq": 520, "cmp": [402, 479, 505, 507, 520], "cmp32ri8": 402, "cmpb": 456, "cmpflag": 489, "cmpinst": [484, 507], "cmpnumber": 489, "cmpq": [456, 518], "cmpswap": 384, "cmptmp": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "cmpxchg": 390, "co": [463, 464, 472, 487, 509, 537], "co_await": 449, "coalesc": [402, 411, 421, 465, 507], "coars": 409, "cocoa": 479, "code": [42, 86, 129, 172, 227, 269, 322, 368, 385, 387, 388, 389, 390, 392, 393, 395, 396, 398, 399, 400, 401, 405, 406, 408, 409, 410, 412, 413, 418, 419, 430, 431, 432, 433, 436, 437, 445, 448, 449, 453, 455, 456, 458, 459, 460, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 477, 478, 480, 481, 482, 485, 487, 489, 490, 491, 492, 493, 494, 495, 503, 504, 509, 510, 512, 513, 514, 515, 518, 520, 521, 522, 523, 524, 527, 530, 531, 533, 534, 535, 537, 538, 541, 542, 544, 545, 551, 560, 561, 570, 571, 572, 579, 580], "code_own": [448, 452, 506], "codebas": [404, 452, 463, 506], "codeblock": 461, "codeemittergen": 527, "codegen": [386, 387, 402, 405, 406, 446, 449, 455, 458, 459, 461, 463, 465, 479, 482, 484, 490, 513, 527, 535, 539, 540, 545, 549, 550, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "codegen_expr": [574, 575, 576, 577, 578], "codegen_func": [574, 575, 576, 577, 578], "codegen_proto": [574, 575, 576, 577, 578], "codegener": 474, "codegenopt": 492, "codegenschedmodel": 539, "codepath": [390, 507], "codeprop": 386, "coder": 509, "codes": 531, "codeview": [433, 437, 495, 500], "codeviewdebug": 519, "codgen": 574, "coding_styl": 511, "codlay": 548, "coerc": 489, "coerce_offset0": 405, "coff": [393, 402, 430, 447, 464, 479, 491, 495, 500, 513], "cohen": 525, "coher": [384, 386, 478, 479], "coheren": 386, "coincid": 536, "col": [559, 569], "cold": [393, 394, 459, 479], "coldcc": [393, 479, 524], "colder": 394, "colfield": 476, "collabor": 509, "collaps": [479, 520], "colleagu": 403, "collect": [389, 394, 395, 400, 404, 418, 423, 429, 448, 452, 459, 469, 475, 480, 481, 482, 483, 491, 502, 505, 507, 509, 510, 512, 515, 520, 522, 523, 529, 530, 533, 534, 538, 542, 545, 551, 571, 572], "collect_and_build_with_pgo": 469, "collector": [393, 457, 480, 524, 560, 570, 579], "collis": [404, 479, 507, 509, 519], "colloqui": 479, "colombet": 465, "colomn": 456, "colon": [386, 398, 400, 401, 405, 478, 517, 527, 529, 535, 544], "color": [81, 169, 266, 363, 402, 405, 418, 423, 433, 436, 437, 449, 507, 512, 513, 542], "colour": 403, "column": [404, 405, 429, 432, 442, 450, 456, 463, 476, 479, 515, 519, 534, 538, 544, 559, 569], "columnend": 450, "columnstart": 450, "com": [391, 404, 426, 452, 463, 470, 472, 481, 487, 502, 506, 507, 509, 510, 511, 517, 520, 533, 534, 541, 580], "com_fir": 402, "combin": [99, 102, 185, 282, 381, 386, 390, 397, 398, 400, 415, 416, 418, 429, 432, 445, 446, 449, 452, 455, 456, 461, 462, 465, 479, 481, 484, 489, 492, 493, 503, 507, 512, 513, 519, 520, 524, 536, 538, 539, 540, 541, 542, 544, 552, 553, 560, 562, 563, 570, 573, 574, 579], "combine1": 402, "combine2": 402, "combinedalloc": 517, "comdat": [393, 456], "come": [393, 398, 400, 401, 402, 403, 404, 406, 413, 418, 449, 452, 455, 461, 462, 463, 476, 477, 479, 484, 488, 489, 490, 491, 495, 502, 503, 507, 508, 515, 519, 520, 524, 529, 533, 535, 540, 541, 544, 546, 548, 551, 553, 554, 555, 557, 560, 561, 563, 564, 565, 567, 570, 572, 574, 575, 576, 578, 579], "comfort": 516, "comma": [99, 185, 282, 381, 382, 383, 386, 405, 424, 445, 479, 484, 486, 507, 529, 535, 544, 555, 565, 576], "command": [386, 388, 389, 391, 397, 398, 400, 402, 404, 405, 406, 409, 410, 411, 413, 414, 415, 419, 422, 423, 424, 425, 426, 427, 429, 430, 431, 433, 436, 437, 442, 443, 444, 446, 451, 453, 460, 463, 464, 465, 466, 467, 469, 470, 472, 474, 475, 478, 479, 481, 482, 491, 492, 507, 509, 514, 517, 522, 524, 527, 531, 533, 534, 535, 539, 540, 542, 545, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "commandlin": [409, 545, 550], "commandlinepars": 542, "commasepar": 445, "comment": [386, 396, 402, 405, 416, 429, 448, 452, 461, 473, 478, 479, 481, 488, 489, 505, 506, 507, 509, 511, 513, 527, 530, 531, 535, 541, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "commentstr": 539, "commerci": [452, 524], "commit": [396, 404, 429, 448, 459, 467, 472, 480, 485, 495, 499, 511, 513, 521, 524, 535, 545], "committ": 452, "committe": [403, 507], "common": [386, 388, 389, 390, 392, 393, 398, 401, 402, 404, 413, 430, 431, 445, 446, 448, 449, 452, 454, 455, 457, 459, 460, 461, 462, 465, 473, 478, 479, 480, 481, 483, 485, 488, 489, 491, 495, 505, 508, 509, 511, 512, 513, 517, 519, 520, 521, 522, 524, 525, 528, 529, 531, 533, 539, 540, 543, 544, 545, 552, 554, 555, 556, 557, 560, 562, 564, 565, 566, 567, 570, 573, 575, 576, 577, 578, 579], "common64": 431, "commonmark": 485, "communic": [389, 403, 404, 449, 451, 457, 459, 479, 483, 490, 491, 507, 516, 520, 522, 525, 540, 545, 550], "communiti": [446, 448, 452, 459, 480, 507, 509, 511, 516], "commut": [389, 402, 505, 539], "compact": [386, 402, 415, 448, 449, 454, 461, 479, 507, 522, 529, 559, 560, 569, 570, 579], "compani": [452, 487], "compar": [384, 385, 388, 389, 390, 394, 395, 402, 405, 421, 423, 429, 433, 454, 465, 476, 479, 481, 505, 507, 508, 512, 514, 519, 520, 529, 530, 533, 534, 535, 538, 544, 552, 555, 556, 557, 558, 559, 562, 565, 566, 567, 568, 569, 573, 576, 577, 578], "comparefp": 529, "comparison": [385, 390, 395, 456, 459, 462, 465, 473, 479, 505, 507, 514, 519, 524, 529, 538, 548, 552, 556, 562, 566, 573, 577], "compat": [384, 386, 390, 392, 393, 400, 401, 402, 408, 411, 413, 418, 430, 431, 432, 433, 437, 445, 446, 449, 454, 455, 456, 460, 461, 463, 464, 472, 475, 477, 479, 490, 499, 502, 505, 507, 517, 519, 520, 522, 524, 535, 536, 537, 545, 560, 570, 579], "compatible_class": 402, "compet": [386, 452], "compil": [386, 388, 389, 390, 392, 393, 397, 398, 399, 401, 402, 405, 406, 408, 411, 418, 423, 424, 429, 430, 433, 434, 445, 448, 449, 450, 452, 453, 454, 455, 459, 460, 461, 462, 464, 465, 467, 468, 469, 472, 478, 480, 481, 482, 488, 489, 490, 492, 493, 495, 502, 503, 505, 507, 508, 509, 510, 511, 512, 514, 515, 517, 519, 520, 522, 523, 524, 525, 527, 530, 531, 534, 535, 536, 538, 539, 540, 541, 542, 543, 545, 546, 547, 550, 551, 552, 553, 555, 556, 557, 560, 561, 562, 563, 565, 566, 567, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580], "compiland": [433, 495, 498, 503], "compile_tim": 533, "compileact": [549, 550], "compilecallback": [549, 550], "compilecallbackmanag": [548, 549], "compilecallbackmgr": [549, 550], "compilelay": [491, 546, 547, 548, 549, 550], "compilemodul": 542, "compileondemand": [548, 549], "compileondemandlay": [491, 548], "compiler_rt": 452, "compiler_rt_test_compile_cflag": 470, "compiler_rt_test_compiler_cflag": 470, "compileutil": [546, 547, 548, 549, 550], "complain": [463, 464, 466], "complaint": [560, 570, 579], "complement": [462, 479, 507, 520], "complet": [386, 389, 393, 394, 396, 400, 401, 402, 404, 406, 408, 409, 418, 423, 443, 445, 449, 452, 454, 461, 464, 465, 467, 469, 470, 472, 479, 480, 481, 482, 483, 488, 489, 490, 491, 505, 507, 509, 512, 513, 516, 519, 520, 524, 525, 527, 529, 539, 540, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "complex": [401, 402, 404, 455, 461, 465, 472, 481, 489, 492, 502, 505, 519, 520, 524, 525, 527, 528, 531, 538, 539, 540, 547, 552, 554, 556, 557, 559, 560, 562, 564, 566, 567, 569, 570, 573, 575, 577, 578, 579], "complex128": 502, "complex16": 502, "complex32": 502, "complex32partialprecis": 502, "complex48": 502, "complex64": 502, "complex80": 502, "complexpattern": [402, 539], "complextyp": 581, "compli": 452, "compliant": [386, 446], "complic": [388, 390, 400, 401, 404, 454, 455, 461, 463, 464, 470, 473, 477, 479, 512, 520, 527, 537, 538, 539], "compon": [384, 386, 398, 400, 401, 416, 418, 420, 439, 451, 452, 453, 460, 461, 463, 464, 470, 472, 474, 479, 480, 483, 490, 491, 499, 500, 505, 507, 508, 509, 520, 522, 534, 539, 541, 543, 545, 546], "component_0": 478, "component_1": 478, "compos": [385, 398, 413, 450, 464, 479, 484, 491, 543, 547], "composit": [479, 507, 512], "compound": 450, "compr": [0, 1, 2, 3, 72, 157, 256, 353], "comprehens": [463, 505, 520, 535], "compress": [72, 157, 256, 353, 384, 393, 400, 415, 431, 463, 481, 507], "compris": [386, 512], "compriz": 415, "compromis": [479, 507, 520], "compuat": 480, "comput": [36, 99, 126, 185, 221, 282, 315, 381, 384, 389, 394, 397, 402, 404, 415, 429, 446, 450, 457, 459, 467, 479, 480, 481, 495, 502, 505, 507, 510, 512, 517, 520, 522, 524, 529, 539, 540, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 572, 574, 575, 576, 577, 578, 579], "compute_20": 490, "compute_factori": 451, "compute_pgm_rsrc1_fwd_progress": 386, "compute_pgm_rsrc1_mem_ord": 386, "compute_pgm_rsrc1_sgpr": 386, "compute_pgm_rsrc1_vgpr": 386, "compute_pgm_rsrc1_wgp_mod": 386, "compute_pgm_rsrc2_user_sgpr": 386, "compute_xx": [446, 490], "computearea": 473, "computeknownbit": 465, "con": [392, 529, 530], "concat": 479, "concat_vector": 402, "concaten": [392, 393, 463, 465, 479, 529, 530, 535], "concentr": [429, 470], "concept": [392, 393, 402, 404, 459, 462, 465, 473, 479, 489, 490, 491, 507, 513, 519, 520, 525, 528, 531, 545, 546, 547, 553, 555, 563, 565, 574, 576], "conceptu": [392, 402, 404, 405, 445, 454, 462, 479, 507, 536], "concern": [452, 461, 462, 478, 479, 509, 511, 524, 547], "concis": [402, 404, 445, 452, 462], "conclud": [429, 479, 555, 556, 565, 566, 576, 577], "conclus": [429, 489, 548, 551, 559, 569, 571, 572, 578, 580], "concret": [393, 402, 445, 465, 472, 479, 488, 507, 519, 524, 529, 531, 539, 540, 554, 564, 571, 575], "concurr": [386, 400, 461, 481, 491, 507, 513, 545, 546], "concurrentircompil": [491, 546, 547], "cond": [385, 394, 449, 457, 479, 488, 519, 529, 530, 539, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "cond_fals": [557, 567, 578], "cond_next": [557, 567, 578], "cond_tru": [557, 567, 578], "cond_val": [576, 577, 578], "condbr": 465, "condbranch": 539, "condit": [86, 172, 269, 368, 385, 390, 395, 399, 400, 401, 402, 404, 409, 418, 445, 449, 452, 454, 457, 459, 461, 462, 463, 465, 480, 482, 489, 490, 492, 502, 507, 517, 519, 520, 524, 525, 529, 530, 535, 536, 539, 540, 551, 552, 553, 555, 556, 557, 558, 559, 561, 562, 563, 565, 566, 567, 568, 569, 572, 573, 574, 576, 577, 578], "condition1": 529, "condition2": 529, "condition_1": 529, "condition_2": 529, "condition_n": 529, "condmovfp": 529, "condoper": 530, "conduct": [429, 452, 487, 545], "condv": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "condval": 530, "confer": [402, 461, 487, 545], "confid": 452, "confidenti": [452, 516], "config": [388, 400, 408, 409, 416, 424, 437, 452, 460, 463, 464, 467, 470, 478, 507, 508, 509, 535, 539, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 574], "configmaxtest": 507, "configur": [386, 388, 398, 400, 402, 404, 405, 424, 452, 464, 465, 466, 469, 470, 478, 479, 481, 490, 491, 504, 507, 508, 509, 514, 515, 517, 524, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547], "confirm": [396, 404, 481], "conflict": [386, 402, 437, 452, 479, 488, 507, 509, 511, 529, 535, 574, 575, 576, 577, 578], "conform": [386, 399, 404, 409, 410, 448, 452, 457, 461, 472, 479, 507, 544, 547, 548], "confront": [459, 462], "confus": [390, 404, 413, 452, 454, 461, 462, 479, 489, 507, 511, 512, 517, 520, 539], "congrat": 469, "congruenc": 480, "congruent": 517, "conjunct": [398, 400, 405, 407, 416, 433, 434, 479, 495, 514, 525, 529], "connect": [81, 386, 467, 480, 505, 506, 507, 512, 520, 524, 533, 536, 546, 550], "consecut": [385, 392, 405, 479, 512, 517, 519, 530, 537, 538, 540], "consensus": [452, 511], "consequ": [390, 397, 403, 429, 446, 454, 463, 479, 481, 493, 507, 520, 522, 535], "conserv": [386, 389, 390, 394, 404, 429, 461, 472, 479, 482, 520, 522, 524, 536, 540], "conservat": 536, "consid": [386, 389, 392, 393, 394, 402, 403, 404, 405, 406, 420, 430, 445, 446, 449, 450, 451, 452, 454, 456, 457, 458, 461, 462, 465, 468, 469, 473, 476, 477, 479, 480, 488, 489, 502, 505, 507, 509, 511, 514, 516, 517, 519, 520, 522, 523, 524, 525, 529, 530, 531, 533, 535, 537, 538, 540, 547, 551, 552, 555, 557, 559, 560, 562, 565, 567, 569, 570, 572, 573, 576, 578, 579], "consider": [402, 403, 456, 463, 481, 524, 525, 528, 531, 544], "consideraton": 519, "consist": [386, 389, 390, 393, 401, 402, 405, 409, 415, 430, 434, 445, 450, 452, 454, 456, 459, 460, 461, 462, 465, 469, 472, 475, 478, 479, 481, 484, 489, 492, 499, 500, 507, 509, 511, 519, 520, 524, 529, 530, 531, 534, 537, 539, 540, 541, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "consol": [402, 481, 485, 521, 541, 545, 554, 564, 575], "const": [386, 389, 402, 404, 445, 450, 455, 461, 473, 477, 481, 482, 484, 491, 492, 494, 507, 513, 517, 519, 539, 540, 541, 542, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "const0": 393, "const_arg_iter": 507, "const_float": [574, 575, 576, 577, 578], "const_global_iter": 507, "const_iter": 507, "const_nul": [576, 577, 578], "const_op_iter": 507, "const_use_iter": 507, "constant": [10, 17, 18, 43, 50, 51, 54, 67, 68, 69, 70, 71, 73, 76, 78, 79, 99, 105, 108, 114, 115, 130, 135, 136, 137, 147, 149, 150, 151, 154, 155, 158, 164, 165, 167, 185, 189, 192, 202, 203, 228, 235, 236, 237, 250, 251, 252, 253, 254, 255, 257, 261, 262, 264, 282, 286, 289, 296, 297, 323, 330, 331, 334, 347, 348, 349, 350, 351, 352, 354, 358, 359, 361, 381, 386, 389, 390, 393, 402, 404, 415, 433, 445, 446, 449, 450, 455, 457, 459, 461, 463, 480, 489, 490, 491, 492, 512, 513, 520, 522, 524, 529, 536, 537, 539, 540, 542, 543, 549, 550, 553, 555, 556, 557, 558, 559, 563, 565, 566, 567, 568, 569, 574], "constant_tsc": 543, "constantarray": 507, "constantexpr": 511, "constantfold": 455, "constantfoldcal": 455, "constantfp": [507, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574], "constantindex": 522, "constantint": [404, 479, 484, 507], "constantpoolsect": 539, "constantstruct": 507, "constdata": 484, "constexpr": 446, "constindex": 522, "constitu": [454, 555, 565, 576], "constitut": [392, 393, 465, 507, 516, 535, 547], "constprop": [445, 507], "constrain": [386, 429, 454, 457, 463, 465, 504, 529, 545, 553, 563, 574], "constrainedfpintrins": 387, "constraint": [402, 404, 405, 443, 452, 454, 455, 488, 505, 507, 509, 512, 513, 519, 524, 531, 539, 540], "constrast": 389, "construct": [386, 389, 390, 393, 398, 399, 401, 403, 404, 413, 429, 445, 449, 454, 455, 456, 461, 465, 476, 477, 479, 484, 485, 491, 502, 507, 512, 519, 521, 524, 527, 529, 530, 537, 539, 540, 542, 544, 546, 548, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "constructor": [390, 402, 431, 445, 446, 449, 457, 473, 475, 477, 479, 483, 491, 539, 540, 544, 546, 547, 548, 555, 565], "constuct": 546, "constval": 507, "constvcal": 479, "consult": [400, 413, 463, 464, 480, 488, 493, 495, 500, 540, 545], "consum": [386, 415, 416, 429, 433, 445, 449, 454, 456, 462, 464, 468, 479, 481, 486, 495, 497, 498, 499, 500, 502, 503, 515, 522, 527, 531, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "consumeerror": 507, "consumpt": [402, 429, 481, 540], "cont": [449, 454, 477, 479], "cont6": 454, "contact": [403, 452, 467, 472, 481, 487, 513, 516, 540], "contain": [386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 409, 410, 413, 414, 418, 420, 424, 426, 429, 430, 431, 432, 434, 442, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 482, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 505, 508, 509, 510, 512, 513, 514, 515, 517, 519, 520, 522, 524, 527, 529, 530, 531, 533, 534, 535, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 556, 557, 559, 563, 564, 565, 566, 567, 569, 573, 574, 575, 576], "containingtyp": 479, "containsfoo": 404, "content": [389, 392, 400, 404, 405, 406, 413, 415, 416, 418, 423, 431, 432, 436, 437, 445, 452, 456, 458, 478, 479, 482, 485, 489, 495, 502, 503, 505, 507, 509, 512, 515, 517, 520, 521, 530, 531, 534, 535, 539, 540, 542, 545, 572, 573, 574, 575, 576, 577, 578], "content_disposition_typ": 452, "contenti": [404, 452], "context": [389, 390, 404, 434, 442, 445, 454, 457, 459, 462, 465, 467, 473, 479, 480, 486, 489, 490, 491, 506, 507, 516, 520, 527, 529, 530, 531, 535, 540, 543, 546, 552, 557, 559, 562, 567, 569, 573, 574, 575, 576, 577, 578], "contextu": 543, "contigu": [386, 465, 479, 497, 499, 503, 507, 519, 543], "continu": [386, 389, 393, 399, 402, 405, 406, 433, 445, 448, 449, 451, 452, 454, 472, 473, 479, 481, 482, 495, 506, 507, 509, 518, 520, 533, 535, 543, 546, 549, 550, 552, 560, 562, 570, 573, 579], "contract": [446, 459, 479, 507, 522, 527], "contradict": [479, 513], "contrari": [402, 479], "contrast": [385, 402, 454, 473, 507, 509, 511, 512, 540, 553, 563, 574], "contrib": [433, 463], "contribut": [402, 433, 452, 459, 470, 479, 498, 503, 505, 507, 509, 524, 540, 541, 545, 580], "contributor": [388, 400, 401, 452, 509], "contriv": [457, 529], "control": [4, 38, 102, 186, 222, 283, 316, 318, 384, 385, 386, 390, 397, 400, 402, 404, 409, 410, 411, 421, 429, 449, 452, 453, 454, 455, 458, 459, 463, 464, 465, 477, 479, 480, 481, 482, 483, 490, 505, 507, 509, 512, 513, 518, 519, 520, 522, 524, 535, 536, 537, 538, 539, 540, 541, 545, 551, 552, 553, 554, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580], "controlled_": 520, "conv": 457, "conveni": [398, 400, 402, 404, 405, 409, 420, 445, 449, 450, 452, 465, 473, 479, 488, 490, 491, 505, 507, 508, 529, 535, 541, 554, 555, 556, 560, 564, 565, 566, 570, 576, 577, 579], "convent": [393, 401, 404, 447, 449, 454, 465, 473, 485, 489, 502, 507, 511, 519, 520, 521, 522, 524, 527, 553, 559, 563, 569, 574], "converg": [393, 479, 577], "convers": [387, 402, 404, 445, 458, 459, 507, 529, 544], "convert": [34, 35, 125, 209, 210, 211, 212, 219, 220, 313, 314, 384, 385, 386, 387, 390, 392, 402, 408, 409, 418, 422, 431, 445, 452, 455, 458, 459, 462, 463, 469, 475, 489, 490, 505, 507, 509, 513, 519, 527, 529, 530, 539, 540, 541, 542, 544, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 572, 574, 575, 576, 577, 578, 579, 581], "converttoerrorcod": 507, "converv": 386, "convey": [452, 454, 459, 461, 465, 479, 536], "cooki": [479, 507], "cool": [445, 452, 540, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "cooper": [461, 466], "coordin": [7, 105, 189, 286, 461, 479, 524, 544], "cope": [445, 507], "copi": [72, 81, 157, 169, 256, 266, 353, 363, 386, 389, 390, 393, 397, 400, 402, 405, 408, 411, 417, 418, 419, 445, 449, 452, 454, 460, 461, 463, 465, 466, 471, 472, 479, 480, 483, 484, 485, 488, 490, 495, 505, 506, 507, 510, 513, 517, 518, 519, 520, 521, 524, 535, 536, 538, 539, 540, 571], "copyabl": 507, "copycost": [465, 539], "copyleft": 452, "copypart": 481, "copyphysreg": 539, "copyright": [457, 540], "core": [389, 391, 400, 401, 452, 454, 455, 463, 467, 468, 471, 478, 479, 481, 492, 509, 513, 520, 527, 531, 535, 540, 546, 547, 548, 549, 550, 553, 554, 555, 556, 557, 559, 563, 564, 565, 566, 567, 569], "core2": 535, "corei7": [535, 538], "corner": 522, "cornerston": 462, "coroaddr": 449, "corollari": [498, 500], "corospit": 449, "coroutin": 545, "corp": 481, "corpora": 481, "corpus": [460, 513], "corpus1": 481, "corpus2": 481, "corpus_dir": 481, "correct": [386, 389, 390, 392, 396, 400, 402, 404, 445, 446, 449, 452, 454, 455, 457, 459, 462, 463, 466, 467, 470, 471, 472, 474, 479, 480, 489, 491, 492, 500, 505, 506, 507, 508, 509, 514, 518, 519, 520, 524, 525, 533, 534, 535, 538, 540, 541, 544, 552, 554, 555, 562, 564, 565, 573, 575, 576], "correl": [429, 461, 479], "correspond": [384, 386, 387, 390, 392, 393, 397, 400, 402, 404, 405, 410, 417, 418, 421, 424, 429, 442, 445, 449, 450, 452, 454, 455, 456, 457, 461, 462, 463, 464, 473, 474, 476, 479, 480, 484, 488, 489, 490, 493, 495, 497, 498, 499, 500, 505, 506, 507, 509, 513, 519, 524, 527, 530, 531, 535, 537, 538, 539, 540, 543, 544, 552, 553, 555, 559, 562, 563, 565, 569, 573, 574, 576], "corrupt": [413, 454, 481, 517, 560, 570, 579], "cortex": [447, 468, 471, 475, 513], "cortexa53model": 539, "cortexa57model": 539, "cos": [389, 538, 544, 551, 552, 553, 554, 561, 562, 563, 564, 572, 573, 574, 575], "cosin": [479, 539], "cost": [398, 402, 404, 429, 465, 476, 479, 480, 482, 487, 489, 504, 507, 509, 512, 515, 520, 538, 539, 543, 560, 570, 579], "could": [386, 389, 390, 397, 400, 401, 402, 404, 405, 409, 420, 429, 445, 449, 452, 453, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 471, 473, 475, 476, 477, 479, 480, 485, 488, 491, 492, 494, 499, 505, 506, 507, 509, 510, 511, 515, 517, 519, 520, 521, 522, 524, 525, 528, 529, 535, 536, 539, 543, 544, 547, 548, 552, 553, 554, 555, 557, 558, 560, 562, 563, 564, 565, 567, 568, 570, 573, 575, 576, 578, 579], "couldn": [389, 489, 513, 549, 550, 558, 568], "counsel": 452, "count": [99, 185, 282, 381, 386, 397, 413, 418, 429, 434, 445, 450, 454, 455, 461, 475, 481, 491, 495, 497, 507, 509, 512, 515, 519, 522, 529, 533, 534, 536, 539, 542, 543, 552, 562, 573], "counter": [36, 126, 221, 315, 385, 386, 388, 390, 395, 397, 400, 424, 429, 434, 479, 481, 492, 519, 543], "counterpart": [387, 479, 491], "coupl": [390, 452, 459, 463, 479, 482, 487, 506, 507, 509, 524, 529, 540, 541, 555, 556, 559, 560, 565, 566, 569, 570, 576, 577, 579], "cours": [389, 400, 445, 455, 479, 481, 489, 492, 507, 540, 547, 551, 560, 561, 570, 571, 572, 573, 579], "court": 452, "courtesi": [448, 452], "cout": [404, 457, 490, 544, 558, 568], "cov": [408, 450, 481], "cover": [398, 402, 405, 418, 420, 445, 447, 450, 452, 459, 461, 462, 463, 464, 465, 467, 469, 472, 479, 481, 485, 487, 489, 494, 502, 507, 519, 521, 522, 523, 535, 539, 540, 541, 551, 556, 566, 571, 572, 577], "coverag": [399, 400, 408, 452, 460, 465, 469, 519, 542, 545], "coveragemappingdataforfunctionrecord0": 450, "coveragemappingdataforfunctionrecord1": 450, "cp": [386, 463, 481, 484], "cpi": 484, "cplocal": 513, "cpp": [387, 400, 401, 402, 404, 405, 417, 442, 445, 451, 455, 457, 461, 463, 489, 490, 491, 509, 517, 519, 524, 525, 527, 535, 538, 539, 540, 542, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "cppflag": 508, "cppguid": 511, "cppperformancebenchmark": 510, "cpprefer": 507, "cptmp0": 539, "cptmp1": 539, "cpu": [386, 390, 391, 393, 407, 410, 411, 423, 424, 429, 432, 446, 468, 471, 475, 479, 481, 489, 520, 533, 539, 540, 542, 543, 544, 549, 550, 558, 568], "cpu0": 580, "cpu1": 544, "cpu2": 544, "cpu2017": 510, "cpu_id": 543, "cpu_nam": 424, "cpu_powerpc": 544, "cpu_x86": 544, "cpu_x86_64": 544, "cpufreq": [391, 468], "cpufrequtil": 468, "cpuinfo": 468, "cpun": 391, "cpunam": [410, 411, 429], "cpus": [390, 391, 402, 409, 410, 411, 432, 446, 463, 468, 471, 520, 539, 543, 544, 558, 568], "cpuset": 391, "cpusubtyp": 428, "cputyp": [393, 428], "cpux": 391, "cr": [402, 479], "cr0": 479, "cr7": 479, "craft": 507, "crash": [404, 406, 411, 461, 463, 505, 507, 509, 510, 522, 560, 570, 579], "crawl": 461, "crawler": 461, "crazi": [445, 551, 560, 570, 572, 579], "crazier": [555, 565, 576], "crc": 481, "crc32": 517, "crd": 510, "creal": [556, 566, 577], "creat": [386, 387, 392, 393, 398, 400, 401, 402, 403, 404, 407, 409, 410, 413, 417, 418, 424, 426, 428, 429, 432, 433, 443, 445, 446, 448, 449, 450, 452, 453, 454, 456, 457, 461, 462, 463, 464, 465, 466, 467, 469, 471, 475, 477, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 502, 505, 506, 509, 512, 514, 519, 520, 521, 522, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 541, 542, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "create_add": 574, "create_argument_alloca": 578, "create_entry_block_alloca": 578, "create_funct": [575, 576, 577, 578], "create_modul": [574, 575, 576, 577, 578], "createalloca": [557, 558, 559, 567, 568, 569], "createasmstream": 402, "createbasicaliasanalysispass": [559, 569], "createbasictyp": [559, 569], "createbr": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "createcal": [507, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "createcfgsimplificationpass": [547, 548, 549, 550, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569], "createcompileunit": [559, 569], "createcondbr": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "createdatalayout": [548, 549, 550, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569], "createdefaultmypass": 540, "createentryblockalloca": [557, 558, 559, 567, 568, 569], "createexpress": [559, 569], "createfadd": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "createfcmpon": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "createfcmpult": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "createfil": [559, 569], "createfmul": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "createfsub": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "createfunct": [559, 569], "createfunctiontyp": [559, 569], "creategvnpass": [547, 548, 549, 550, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569], "createindirectstubsmanag": 550, "createinstructioncombiningpass": [547, 548, 549, 550, 554, 555, 556, 557, 564, 565, 566, 567], "createjit": 483, "createjitdylib": 491, "createlegacylookupresolv": [548, 549, 550], "createload": [557, 558, 559, 567, 568, 569], "createlocalcompilecallbackmanag": [548, 549], "createlocalindirectstubsmanagerbuild": [548, 549], "createmul": 507, "createmyregisteralloc": 540, "createparametervari": [559, 569], "createphi": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "createpromotememorytoregisterpass": [557, 559, 567, 569], "createreassociatepass": [547, 548, 549, 550, 554, 555, 556, 557, 564, 565, 566, 567], "createremotememorymanag": 550, "createret": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "createstor": [557, 558, 559, 567, 568, 569], "createstringerror": 507, "createstub": [549, 550], "createsubroutinetyp": [559, 569], "createtargetasminfo": 539, "createtargetmachin": [558, 568], "createuitofp": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "createvirtualregist": 402, "creation": [400, 449, 461, 472, 475, 479, 507, 509, 539], "creator": [400, 540], "creatur": [551, 556, 566, 572, 577], "credit": [452, 520], "crhc": 510, "critedge1": 490, "criteria": 509, "criterion": [509, 517], "critic": [389, 401, 404, 411, 459, 461, 472, 479, 514, 520, 540, 552, 562, 573], "cross": [388, 406, 433, 465, 468, 479, 489, 491, 503, 509, 512, 513, 545, 558, 568], "crosscompil": [402, 471], "crucial": [479, 506, 520], "cruel": [485, 521], "cruft": 509, "crypt": 452, "crypto": 481, "crypto_guidelin": 520, "cryptograph": [517, 520], "cs": [386, 434, 479, 510], "cs1": [389, 479], "cs2": [389, 479], "csail": 520, "cse": [390, 455, 480, 492, 554, 564, 575], "cset": 391, "csk_md5": 479, "csk_none": 479, "csk_sha1": 479, "csr_64": 484, "cst": 479, "cst_code_integ": 393, "cst_code_wide_integ": 393, "cstdint": [550, 554, 555, 556, 557, 564, 565, 566, 567], "cstdio": [550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "cstdlib": [549, 550, 552, 553, 554, 555, 556, 557, 558, 562, 563, 564, 565, 566, 567, 568], "cstptr": 479, "cstring": 550, "cstylecom": 530, "csv": [424, 534, 541, 542], "cta": 490, "ctaid": 490, "ctest": 533, "ctfe": 513, "ctmark": 533, "ctor": [404, 457, 477, 479], "ctpop": 539, "ctrl": [553, 558, 563, 568], "ctx": [491, 546, 547], "ctxt": 544, "ctype": 495, "cu": [386, 423, 446, 479, 519], "cube": 384, "cubemap": 384, "cubic": 481, "cucontext": 490, "cuctxcreat": 490, "cuctxdestroy": 490, "cuda": [402, 447, 453, 490, 545], "cuda_success": 490, "cudamodul": 490, "cudevic": 490, "cudevicecomputecap": 490, "cudeviceget": 490, "cudevicegetcount": 490, "cudevicegetnam": 490, "cudeviceptr": 490, "cufunct": 490, "cuinit": 490, "culaunchkernel": 490, "culinkst": 490, "cull": 404, "cultur": [403, 487], "cumbersom": [491, 509, 529], "cumemalloc": 490, "cumemcpydtoh": 490, "cumemcpyhtod": 490, "cumemfre": 490, "cumod": 386, "cumodul": 490, "cumodulegetfunct": 490, "cumoduleloaddata": 490, "cumoduleloaddataex": 490, "cumoduleunload": 490, "cumul": [402, 431, 542], "cuobjdump": 446, "cur": [404, 479, 507, 529, 535], "cur_var": 578, "curesult": 490, "curious": 489, "curloc": [559, 569], "curop": 539, "curr": 572, "currenc": [402, 452, 554, 564, 575], "current": [7, 44, 45, 84, 105, 189, 286, 324, 325, 366, 384, 385, 386, 389, 390, 392, 393, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 418, 420, 429, 431, 432, 445, 446, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 471, 472, 476, 477, 478, 479, 481, 483, 484, 489, 490, 491, 495, 499, 504, 505, 506, 507, 508, 510, 513, 514, 516, 517, 518, 519, 520, 522, 524, 525, 527, 529, 530, 531, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "current_corpus_dir": 481, "current_valu": 449, "curs": [406, 409], "curtok": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "curvar": [557, 558, 559, 567, 568, 569, 578], "cus": [386, 442], "custom": [400, 402, 404, 405, 406, 454, 455, 457, 459, 478, 479, 481, 484, 505, 513, 524, 527, 528, 531, 535, 543, 545, 546, 549], "customalloc": 449, "customari": [445, 452, 479], "customev": 543, "customeventunstructuredmemori": 543, "customfor": 465, "customfre": 449, "customif": 465, "customis": [400, 541], "cut": [394, 424, 445, 539, 546], "cute": [560, 570, 579], "cutoff": 434, "cv_cpu_type_": 495, "cv_signature_xx": 498, "cvdebugrecord": 500, "cvdump": 433, "cve": 481, "cvinfo": 498, "cvpack": 502, "cvs": 509, "cvt": 490, "cx": 531, "cxa_demangl": 519, "cxx": [398, 404, 463, 466, 471, 491, 514], "cxx11": [404, 510], "cxx_fast_tl": 479, "cxx_fast_tlscc": [393, 479], "cxx_flag": 468, "cxx_status": 404, "cxxcompilelay": 491, "cxxcompilinglay": 491, "cxxfilt": 408, "cxxflag": [417, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "cxxlayer": 491, "cxxmap": [408, 434], "cy": 429, "cycl": [424, 429, 448, 454, 479, 482, 519, 542, 545], "cycle_frequ": 543, "cyclic": [463, 479], "cyclonemodel": 539, "cygwin": [402, 463, 464], "cypress": 386, "cywritev3": 539, "d0": [405, 479, 539], "d02": 537, "d1": [405, 539], "d10": 539, "d11": 539, "d12": [537, 539], "d13": 539, "d14": 539, "d15": 539, "d16": [0, 2, 3, 20, 31, 33, 205, 216, 218, 299, 310, 312, 479], "d16_x": 383, "d16_xi": 383, "d16_xyz": 383, "d16_xyzw": 383, "d2": 539, "d3": [484, 539], "d31": 479, "d4": [479, 539], "d5": 539, "d57896": 511, "d6": 539, "d7": [479, 539], "d8": 539, "d9": 539, "d_ctor_bas": 405, "da": [1, 2, 3], "dag": [444, 480, 502, 507, 509, 524, 527, 529, 530, 531, 535, 539], "dagarg": 530, "dagarglist": 530, "dagcombin": 455, "dagtodag": 455, "dagtodagisel": 455, "damag": 519, "dan": 544, "danger": [405, 479, 491, 507, 516, 520, 536], "dangl": [479, 507, 576], "daniel": [465, 519], "danila": 511, "darktabl": 510, "darwin": [398, 402, 430, 458, 479, 491, 522, 559, 569], "darwin9": 405, "das": 511, "dash": [445, 460, 544], "dasinconsist": 511, "data": [7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 51, 54, 72, 81, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 136, 137, 157, 169, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 236, 237, 256, 266, 286, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 331, 334, 353, 363, 383, 384, 388, 389, 390, 391, 392, 397, 398, 401, 404, 408, 416, 418, 429, 430, 431, 432, 433, 436, 437, 442, 445, 449, 454, 455, 456, 458, 459, 460, 461, 462, 469, 480, 481, 482, 483, 484, 494, 495, 499, 500, 502, 503, 509, 510, 512, 519, 520, 522, 524, 527, 529, 531, 533, 539, 540, 542, 546, 553, 554, 557, 558, 559, 563, 564, 567, 568, 569, 575, 576, 577, 578], "data16bitsdirect": 539, "data32bitsdirect": 539, "data64bitsdirect": 539, "databas": [479, 503, 544, 545, 560, 570, 579], "datacrc": 495, "dataflow": [479, 519, 557, 567, 578], "datalayout": [393, 461, 479, 490, 491, 537, 539, 546, 547, 548, 549, 550, 575, 576, 577, 578], "datalayoutpass": [559, 569], "dataset": [510, 533], "datastructur": [507, 509], "datatyp": [402, 445, 507, 551, 561, 572], "date": [389, 397, 399, 413, 431, 463, 464, 471, 472, 488, 495, 502, 506, 511, 513, 514, 529, 546, 547, 548, 555, 565, 576], "daunt": 400, "david": [511, 512], "day": [400, 452, 463, 472, 507, 545, 579], "dbaremetal_armv6m_sysroot": 470, "dbaremetal_armv7em_sysroot": 470, "dbaremetal_armv7m_sysroot": 470, "dbg": [479, 539, 559, 569], "dbg_valu": 519, "dbgentityhistorycalcul": 519, "dbginfo": 519, "dbgopt": 519, "dbgs": [397, 507], "dbgstreamarray": 495, "dbi": [493, 498, 503], "dbi_head": 495, "dbistreamhead": 495, "dbistreamvers": 495, "dbl": 533, "dblti": [559, 569], "dbootstrap_cmake_build_typ": 453, "dbootstrap_cmake_c_flag": 388, "dbootstrap_cmake_cxx_flag": 388, "dbscan": 424, "dbuild_shared_lib": 463, "dbuilder": [559, 569], "dbx": 519, "dc": [481, 486], "dce": [406, 445, 449, 455], "dced": 507, "dclang_bootstrap_passthrough": 388, "dclang_bootstrap_target": 453, "dclang_enable_bootstrap": [388, 453], "dclang_enable_proto_fuzz": 460, "dclang_tablegen": [469, 471], "dcmake_ar": 470, "dcmake_asm_compiler_target": 470, "dcmake_asm_flag": 470, "dcmake_build_typ": [448, 453, 463, 468, 469, 535, 542], "dcmake_c_compil": [469, 470, 533], "dcmake_c_compiler_external_toolchain": 470, "dcmake_c_compiler_target": 470, "dcmake_c_flag": [468, 469, 470], "dcmake_c_flags_releas": 542, "dcmake_crosscompil": 471, "dcmake_cxx_compil": 469, "dcmake_cxx_flag": [469, 471, 542], "dcmake_cxx_link_flag": 463, "dcmake_exe_linker_flag": 470, "dcmake_install_prefix": [400, 463, 468, 471], "dcmake_nm": 470, "dcmake_osx_architectur": 463, "dcmake_ranlib": 470, "dcmake_sysroot": 470, "dcmake_toolchain_fil": 463, "dcmake_try_compile_target_typ": 470, "dcommit": 509, "dcompiler_rt_baremetal_build": 470, "dcompiler_rt_build_builtin": 470, "dcompiler_rt_build_libfuzz": 470, "dcompiler_rt_build_profil": 470, "dcompiler_rt_build_sanit": 470, "dcompiler_rt_build_xray": 470, "dcompiler_rt_default_target_on": 470, "dcompiler_rt_emul": 470, "dcompiler_rt_include_test": 470, "dcompiler_rt_os_dir": 470, "dcompiler_rt_test_compil": 470, "dcompiler_rt_test_compiler_cflag": 470, "ddd": 413, "de": [437, 500, 503, 518, 540, 544], "dead": [389, 402, 445, 457, 459, 463, 465, 479, 480, 481, 482, 484, 490, 492, 507, 513, 519, 524], "deadlin": 452, "deadlock": 491, "deadtypeelim": 507, "deal": [390, 392, 393, 400, 403, 404, 452, 454, 458, 473, 494, 502, 505, 507, 509, 512, 519, 520, 527, 541, 557, 567, 578], "dealloc": [461, 479, 507, 517], "deallocationtypemismatch": 517, "death": [460, 481], "deb": 471, "debat": 404, "debian": [463, 470, 471, 504], "debian8": 453, "debug": [387, 397, 398, 400, 402, 404, 406, 409, 410, 417, 418, 421, 424, 425, 430, 431, 432, 433, 437, 442, 443, 445, 448, 450, 452, 454, 456, 461, 463, 464, 469, 472, 474, 480, 481, 482, 484, 489, 491, 493, 494, 497, 498, 500, 502, 503, 504, 508, 511, 522, 524, 531, 533, 539, 540, 545, 551, 557, 558, 560, 561, 567, 568, 570, 571, 572, 578, 579, 580], "debug_": 386, "debug_count": 507, "debug_fram": 432, "debug_info": [423, 513, 519], "debug_inlin": 407, "debug_level": 445, "debug_metadata_vers": [559, 569], "debug_mod": 386, "debug_nam": 519, "debug_pubnam": [407, 493, 519], "debug_pubtyp": [407, 519], "debug_s_crossscopeexport": 433, "debug_s_crossscopeimport": 433, "debug_s_inlineelin": 433, "debug_s_lin": 433, "debug_str": [405, 424, 519], "debug_symbol": 504, "debug_typ": 513, "debug_with_typ": 507, "debugcount": 507, "debugflag": [445, 507], "debugg": [386, 402, 404, 433, 451, 454, 483, 491, 500, 503, 511, 535, 540, 545, 551, 555, 559, 565, 569, 571, 576, 579], "debuginfo": [463, 479, 500, 509, 519, 535, 559, 569], "debuginfoforprofil": 479, "debuglev": 445, "debuglevel": 445, "debuglink": 431, "debugloc": [402, 515, 519, 559, 569], "debugstreamarray": 495, "debugtrap": 386, "dec": 507, "decad": 531, "decent": [455, 468, 472, 507, 540, 551, 559, 569], "decid": [392, 398, 400, 445, 446, 452, 454, 455, 465, 474, 479, 493, 495, 506, 507, 519, 520, 524, 538, 540, 544, 552, 556, 557, 562, 566, 567, 573, 575, 577, 578], "decim": [385, 405, 413, 430, 434, 445, 456, 479, 529, 544], "decimalinteg": 530, "decis": [392, 397, 398, 402, 403, 404, 452, 454, 459, 465, 481, 507, 512, 516, 520, 524, 538, 547, 554, 564, 575], "decl": [473, 531, 553, 563], "declar": [385, 386, 389, 393, 402, 404, 405, 445, 446, 449, 455, 457, 473, 477, 478, 479, 489, 490, 507, 522, 524, 525, 527, 529, 531, 537, 539, 540, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "declare_funct": [574, 575, 576, 577, 578], "declaring_vari": 511, "declcontext": 473, "declet": 479, "decltyp": [404, 479, 548, 549, 550], "decod": [393, 429, 436, 437, 479, 507, 519, 527, 529, 533], "decompos": [452, 455, 502, 524], "decomposit": 424, "decompress": 431, "decor": 519, "decoupl": 529, "decreas": [398, 411, 469, 472, 479, 494, 517], "decrement": [454, 507], "dedic": [385, 402, 465, 472, 509, 539], "deduc": [386, 459, 479, 492, 507, 529, 530, 536], "dedupl": 495, "deee": 429, "deeer": 429, "deem": [452, 455, 472, 474, 479], "deep": [404, 473, 485, 505, 510], "deepcheck": 507, "deeper": [401, 433, 460, 485, 521, 533, 546], "def": [402, 424, 449, 455, 465, 476, 480, 484, 488, 512, 519, 527, 529, 531, 539, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "default": [14, 15, 16, 24, 25, 26, 27, 28, 31, 51, 111, 112, 113, 117, 118, 119, 120, 123, 136, 195, 196, 197, 206, 207, 208, 210, 213, 216, 236, 293, 294, 295, 303, 304, 305, 306, 307, 310, 384, 386, 387, 388, 389, 390, 393, 395, 398, 400, 402, 405, 406, 407, 409, 410, 411, 412, 413, 417, 418, 419, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 436, 437, 442, 444, 445, 446, 449, 450, 452, 455, 456, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471, 473, 477, 479, 481, 483, 484, 486, 488, 490, 491, 504, 506, 507, 508, 509, 513, 515, 517, 519, 520, 522, 524, 527, 529, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 546, 547, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577], "default_branch_weight": 395, "defaultconfig": 507, "defaultdest": 479, "defaultlib": 464, "defaultopt": 445, "defeat": 520, "defend": 520, "defens": 452, "defer": [483, 489, 491, 511, 520, 546, 547, 548, 554, 564, 575], "deferrederr": 507, "defi": 479, "defici": [461, 551, 572], "defin": [36, 50, 51, 126, 135, 136, 221, 235, 236, 315, 330, 331, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 400, 401, 402, 405, 406, 413, 415, 416, 429, 430, 431, 434, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 465, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 484, 485, 488, 489, 490, 491, 492, 494, 495, 498, 500, 503, 504, 505, 507, 508, 511, 517, 519, 520, 521, 522, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 579, 580], "defini": 476, "definingaccess": 488, "definit": [385, 386, 390, 392, 393, 395, 401, 402, 405, 407, 421, 424, 430, 433, 444, 445, 448, 449, 455, 461, 465, 472, 474, 476, 478, 479, 482, 484, 488, 489, 491, 505, 507, 517, 519, 524, 527, 530, 531, 537, 539, 540, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "definiton": 430, "defm": [529, 531, 539], "defreg": 424, "degen": 479, "degener": [505, 557, 567, 578], "degrad": [452, 461], "degrandmaison": 487, "degre": [390, 453, 459, 467, 520, 538], "delay": [489, 507, 511, 516, 519, 529], "deleg": [390, 404, 429, 454, 479], "delet": [389, 397, 402, 404, 405, 413, 457, 463, 465, 466, 469, 479, 488, 489, 490, 509, 513, 517, 519, 540, 546, 548, 553, 554, 555, 556, 557, 559, 563, 564, 565, 566, 567, 569, 574, 575, 576, 577, 578], "delete_funct": [574, 575, 576, 577, 578], "deleteaninstruct": 507, "deletesizemismatch": 517, "deliber": [404, 488, 522], "delimit": [401, 454, 463, 479, 486, 530], "delin": 409, "delta": [429, 474, 543], "deltalinestart": 450, "delv": [452, 554, 564, 575], "demand": [386, 393, 402, 463, 491, 509, 546, 557, 567, 578], "demangl": [398, 408, 412, 418, 430, 432, 436, 437, 442, 481, 519], "demo": [445, 550, 553, 563, 574], "demonstr": [429, 450, 452, 473, 479, 499, 507, 519, 539, 553, 554, 563, 564, 574, 575], "denisov": 511, "denisovcamelback": 511, "denomin": 404, "denorm": [446, 479, 544], "denot": [393, 402, 461, 463, 479, 499, 544], "dens": [386, 393, 479, 507], "densemapinfo": 507, "denser": [556, 566, 577], "denseset": 491, "densiti": [404, 556, 566, 577], "deopt": [479, 524], "deopt_arg": 479, "deoptim": 524, "dep": [575, 576, 577, 578], "depart": [413, 487, 510], "departur": 509, "depend": [7, 17, 18, 19, 20, 31, 32, 33, 38, 84, 86, 105, 114, 115, 116, 124, 189, 198, 200, 201, 202, 203, 204, 205, 209, 211, 212, 216, 217, 218, 286, 296, 297, 298, 299, 310, 311, 312, 318, 366, 382, 384, 385, 386, 388, 390, 391, 393, 395, 396, 400, 402, 403, 404, 406, 409, 410, 413, 415, 417, 424, 429, 433, 434, 443, 445, 446, 449, 452, 453, 454, 457, 459, 460, 461, 462, 463, 465, 467, 470, 471, 475, 476, 478, 481, 483, 488, 489, 490, 491, 492, 494, 499, 507, 508, 509, 513, 514, 517, 519, 520, 522, 524, 525, 529, 533, 534, 535, 536, 538, 539, 540, 543, 546, 552, 553, 557, 562, 563, 567, 573, 574, 578], "depict": 429, "deplib": [393, 456], "deploy": [453, 506, 520], "deprec": [386, 393, 400, 405, 409, 452, 468, 491, 494, 507, 513, 519, 535, 539, 541], "depriv": 507, "depth": [81, 169, 266, 363, 402, 405, 423, 433, 445, 466, 479, 489, 505, 509, 510, 523, 531, 547, 555, 565, 576], "deref_bytes_nod": 479, "derefer": [401, 462, 479, 507, 519, 546], "dereferenc": [393, 458, 459, 479, 505, 507], "dereferenceable_byt": 479, "dereferenceable_or_nul": [393, 479], "deregisterehfram": 550, "deregisterehframesinprocess": 550, "deriv": [386, 402, 404, 413, 431, 452, 461, 473, 476, 478, 479, 480, 483, 505, 506, 519, 527, 529, 530, 531, 536, 540, 547, 551, 561, 572], "derivedtyp": [455, 507, 553, 554, 555, 556, 557, 558, 563, 564, 565, 566, 567, 568], "desc": [386, 445, 539, 540, 550], "descend": [454, 479], "descent": [551, 552, 556, 562, 566, 571, 572, 573, 577], "descreas": 384, "describ": [34, 35, 36, 42, 125, 126, 129, 219, 220, 221, 227, 313, 314, 315, 322, 382, 383, 384, 385, 386, 390, 392, 393, 394, 398, 401, 402, 404, 405, 408, 409, 410, 413, 416, 420, 429, 431, 433, 445, 446, 448, 449, 450, 452, 454, 455, 456, 458, 460, 461, 462, 463, 465, 466, 472, 473, 474, 476, 478, 479, 480, 482, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 502, 503, 505, 507, 508, 509, 511, 512, 513, 515, 516, 519, 520, 522, 524, 527, 529, 531, 536, 537, 539, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 562, 563, 564, 565, 566, 568, 569, 571, 572, 573, 574, 575, 576, 577, 579], "descript": [8, 36, 42, 47, 48, 52, 81, 99, 106, 126, 129, 133, 169, 185, 190, 221, 227, 232, 233, 266, 282, 287, 315, 322, 327, 328, 332, 363, 381, 382, 383, 384, 385, 386, 389, 390, 393, 398, 401, 404, 408, 412, 435, 438, 440, 441, 445, 450, 453, 454, 461, 463, 465, 467, 473, 474, 478, 479, 480, 489, 490, 493, 505, 506, 507, 517, 519, 522, 527, 531, 533, 539, 541, 543, 545, 558, 559, 568, 569, 581], "descriptor": [393, 429, 479, 495, 519, 522, 539, 559, 569], "deseri": 527, "deserv": [459, 479], "design": [389, 390, 398, 404, 405, 406, 409, 416, 429, 445, 448, 449, 450, 451, 452, 454, 457, 459, 461, 465, 467, 475, 478, 479, 480, 481, 484, 487, 493, 497, 499, 505, 508, 509, 511, 519, 520, 522, 524, 525, 528, 529, 531, 534, 537, 539, 540, 544, 545, 551, 557, 560, 567, 570, 571, 572, 578, 579], "desir": [386, 390, 397, 400, 404, 405, 407, 409, 423, 445, 456, 459, 461, 476, 479, 481, 483, 492, 505, 507, 511, 515, 516, 519, 520, 522, 524, 535, 539, 540, 560, 570, 579], "desktop": [504, 535], "despit": [390, 402, 445, 469, 479, 509, 511, 519, 520, 524, 528, 529, 531, 540, 543], "dest": [479, 558, 568], "dest1": 479, "dest2": 479, "destarglist": 479, "destin": [49, 134, 234, 329, 382, 383, 384, 385, 386, 395, 402, 413, 454, 456, 459, 479, 513, 520, 535, 539, 557, 558, 559, 567, 568, 569, 578], "destreg": 402, "destroy": [402, 454, 457, 465, 477, 479, 484, 491, 507, 539, 544], "destruct": [449, 477, 507, 519, 520, 522, 560, 570, 579], "destructor": [404, 446, 449, 454, 457, 479, 507, 511, 519, 540], "detail": [383, 384, 386, 389, 390, 394, 396, 397, 400, 401, 402, 403, 405, 409, 410, 413, 423, 424, 429, 433, 434, 445, 446, 449, 452, 453, 454, 457, 460, 461, 462, 463, 464, 467, 469, 473, 474, 478, 479, 480, 481, 482, 487, 489, 490, 491, 492, 495, 499, 502, 505, 507, 508, 509, 510, 511, 513, 516, 517, 520, 524, 525, 527, 533, 535, 536, 539, 540, 541, 542, 544, 545, 547, 548, 549, 550, 551, 553, 556, 557, 560, 563, 566, 567, 570, 571, 572, 574, 577, 578, 579], "detect": [386, 400, 405, 409, 418, 419, 421, 424, 429, 434, 471, 479, 481, 489, 491, 506, 507, 512, 517, 519, 520, 523, 535, 538, 543, 554, 564, 575], "detect_leak": 481, "detecthost": [546, 547], "detector": 489, "determin": [386, 389, 393, 400, 402, 409, 410, 413, 420, 429, 431, 443, 449, 450, 452, 454, 465, 472, 473, 474, 476, 479, 481, 483, 489, 490, 491, 492, 493, 495, 497, 502, 505, 507, 508, 512, 516, 517, 519, 520, 522, 523, 524, 525, 534, 535, 536, 537, 539, 540, 543, 544, 552, 553, 555, 556, 562, 563, 565, 566, 573, 574, 576, 577], "determinist": [388, 389, 397, 398, 402, 431, 481, 507, 527], "deterministicfiniteautomaton": 511, "determinst": 404, "detriment": [404, 511], "dev": [390, 404, 410, 411, 448, 452, 455, 459, 461, 471, 487, 506, 507, 509, 511, 512, 519, 524, 529, 530, 540, 542, 545, 558, 560, 568, 570, 579], "devbuffera": 490, "devbufferb": 490, "devbufferc": 490, "devcount": 490, "devel": 514, "develop": [386, 393, 396, 398, 401, 402, 403, 404, 431, 441, 445, 447, 448, 453, 454, 459, 461, 462, 464, 465, 467, 468, 470, 472, 474, 478, 479, 482, 487, 491, 504, 508, 510, 511, 512, 513, 515, 516, 519, 520, 524, 525, 531, 534, 541, 542, 547, 548, 549, 550, 557, 567, 578, 580], "developer_guid": 511, "deviat": [402, 404, 456], "devic": [384, 386, 391, 414, 422, 425, 427, 443, 468, 490, 491], "device_enqueue_symbol": 386, "device_fn": 446, "device_on": 446, "devirtu": [479, 537], "devis": 508, "devmajor": 490, "devminor": 490, "devoid": 402, "dexonsmith": 519, "dfa": [402, 444, 511, 527], "dfapacket": 402, "dform_1": 402, "dfpreg": 539, "dfpregsclass": 539, "dfpregsregclass": 539, "dfpregsregisterclass": 539, "dgpu": 386, "dh": 531, "di": [519, 531], "di_index": 479, "dia": [400, 433], "diagnos": [405, 421, 538, 540], "diagnost": [405, 408, 409, 410, 421, 481, 507, 527, 531], "diagram": 499, "dialect": [479, 486], "diana": [465, 511], "dibasictyp": 519, "dibuild": [519, 559, 569], "dice": 507, "dicompileunit": [519, 559, 569], "dict": 481, "dictat": [404, 507, 518], "dictionari": [409, 479, 527], "dictionary_fil": 481, "did": [389, 404, 449, 454, 460, 465, 473, 479, 489, 507, 509, 515, 540, 547, 554, 556, 557, 560, 564, 566, 567, 570, 575, 577, 578, 579], "didescriptor": 519, "didn": [402, 404, 446, 459, 460, 479, 489, 507, 519, 520, 540, 553, 557, 563, 567, 573, 574, 578], "die": [386, 423, 519, 548, 559, 569], "die_offset_bas": 519, "diexpres": 479, "diexpress": 519, "dif": 505, "diff": [404, 408, 423, 448, 452, 453, 463, 505, 506, 507, 509, 533, 535], "differ": [82, 170, 205, 216, 218, 267, 364, 382, 383, 384, 385, 386, 387, 388, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 410, 411, 412, 415, 418, 421, 423, 424, 429, 431, 432, 433, 439, 442, 445, 447, 449, 450, 452, 453, 454, 455, 456, 457, 459, 461, 463, 464, 465, 469, 472, 473, 475, 476, 479, 481, 482, 483, 484, 487, 489, 490, 491, 492, 493, 495, 502, 505, 506, 507, 509, 511, 514, 516, 517, 519, 520, 522, 524, 525, 527, 529, 530, 531, 533, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 550, 553, 554, 555, 557, 558, 559, 560, 563, 564, 565, 567, 568, 569, 570, 574, 575, 576, 577, 578, 579], "differenti": [456, 478, 506], "difficult": [389, 390, 404, 445, 452, 454, 465, 470, 479, 482, 485, 491, 492, 507, 509, 511, 519, 521, 559, 569, 577], "difficulti": [510, 519], "difil": [519, 559, 569], "diflagartifici": 479, "diflagfwddecl": 479, "diflagprototyp": [479, 519], "diflagvector": 479, "difwddecl": 479, "dig": [529, 551, 572], "digit": [430, 445, 479, 507], "diglobalvari": 519, "digress": [556, 566, 577], "dijkstra": 510, "dil": [456, 531], "dilexicalblock": 519, "diloc": [405, 519], "dilocalvari": [519, 559, 569], "dim": [0, 7, 479], "dimens": [51, 105, 136, 189, 236, 286, 331, 384, 386, 479], "dimension": [7, 105, 189, 286, 384, 462, 490, 556, 566, 577], "diminish": 519, "dindex": 539, "dinkumwar": 507, "dinod": [479, 559, 569], "diploma": 512, "dir": [388, 400, 409, 418, 431, 460, 463, 470, 471, 479, 481, 508, 514, 519, 533], "dir1": 481, "dir2": 481, "dir_to_mount": 391, "direct": [28, 120, 213, 307, 390, 393, 399, 400, 401, 403, 404, 406, 408, 409, 413, 415, 417, 424, 429, 437, 442, 444, 445, 449, 452, 454, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 477, 480, 488, 489, 490, 491, 492, 493, 495, 497, 502, 505, 506, 507, 508, 509, 512, 513, 514, 516, 517, 519, 520, 524, 525, 527, 529, 530, 531, 533, 534, 536, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 553, 554, 555, 556, 557, 563, 564, 565, 566, 567, 575, 576, 577, 578], "directori": [386, 388, 399, 400, 401, 402, 404, 409, 417, 418, 431, 437, 442, 444, 446, 452, 459, 464, 466, 467, 469, 470, 471, 472, 478, 479, 481, 484, 495, 500, 503, 506, 507, 508, 509, 511, 513, 514, 515, 519, 525, 531, 532, 533, 534, 535, 539, 540, 541, 545, 559, 569], "dirti": [404, 495], "dis": [408, 414, 415, 432, 463, 464, 535, 557, 567, 578], "disabl": [222, 316, 384, 385, 386, 389, 391, 392, 397, 400, 404, 405, 406, 409, 410, 411, 418, 424, 429, 430, 431, 432, 443, 445, 461, 463, 466, 471, 472, 474, 481, 488, 492, 504, 507, 514, 517, 519, 524, 533, 535, 536, 538, 541, 555, 559, 565, 569, 576], "disable_assert": 504, "disable_nonforc": 536, "disableencod": 531, "disablelazycompil": 507, "disadvantag": [445, 475, 482, 507], "disagr": 403, "disagre": [403, 452, 479, 519], "disallow": [445, 462, 478, 479, 522, 524], "disambigu": [389, 459, 488], "disappear": [457, 463, 468, 519], "disassembl": [399, 408, 432, 444, 463, 464, 478, 479, 481, 507, 545], "disassembleremitt": 527, "discard": [385, 402, 405, 419, 431, 445, 449, 456, 463, 479, 507, 509, 512, 524], "discharg": 459, "disclaim": 401, "disclos": 516, "disclosur": [452, 516], "discontigu": 499, "discop": [559, 569], "discourag": [404, 445, 507, 516, 525], "discov": [386, 402, 409, 449, 461, 472, 481, 500, 519, 520, 525, 555, 557, 565, 567, 576, 578], "discover": 453, "discoveri": 386, "discrimin": [402, 404, 473, 479, 527, 543], "discriminatori": 403, "discuss": [401, 403, 404, 429, 445, 448, 450, 452, 460, 463, 464, 473, 479, 487, 491, 492, 495, 497, 499, 502, 506, 507, 509, 513, 516, 519, 520, 522, 524, 531, 539, 540, 541, 545, 547, 548, 550, 552, 562, 571, 573], "disjoint": [386, 389, 479, 488, 538], "disk": [386, 404, 409, 424, 463, 478, 479, 481, 482, 495, 499, 500, 502, 509, 519, 525, 541, 546], "dislik": 452, "disp32": 402, "dispatch": [454, 479, 491, 507, 513, 520, 522, 552, 562, 573], "dispatch1": 479, "dispatch2": [454, 479], "dispel": 462, "dispflagdefinit": 519, "dispflagelement": 519, "dispflagpur": 519, "dispflagrecurs": 519, "displac": [402, 479], "display": [401, 402, 403, 404, 407, 409, 415, 418, 419, 423, 424, 428, 429, 430, 431, 432, 433, 434, 436, 437, 445, 450, 452, 467, 473, 486, 505, 515, 519, 527, 534, 539, 551, 561, 572], "disposit": 452, "disproportion": 519, "disrupt": [485, 520, 521], "dissassembl": 398, "dist": 507, "distanc": [479, 507, 517, 544, 549, 580], "distil": 535, "distinct": [389, 393, 402, 405, 420, 423, 452, 454, 462, 465, 478, 479, 505, 507, 512, 517, 519, 535, 536, 539, 553, 563, 574], "distinguish": [392, 393, 449, 450, 465, 479, 507, 511, 524, 525, 560, 570, 579], "distract": 452, "distribut": [388, 394, 401, 404, 406, 409, 429, 434, 448, 451, 452, 453, 457, 463, 464, 470, 471, 490, 509, 520, 531, 533, 540, 541, 545], "distributionexampl": 398, "distro": [469, 471], "disubprogram": [519, 559, 569], "disubroutinetyp": [519, 559, 569], "dityp": [559, 569], "div": [384, 402, 507], "dive": [473, 551, 561, 571, 572], "diverg": [462, 479, 492, 556, 566, 577], "divers": 469, "divid": [386, 394, 402, 405, 409, 415, 429, 446, 455, 479, 503, 505, 525, 533], "dividend": [402, 446, 479], "divis": [385, 386, 402, 479, 556, 566, 577], "divisionbyzero": 479, "divisor": [446, 479], "django": [403, 516], "dl": [402, 491, 510, 531, 546, 547, 548, 549, 550], "dlc": [0, 386], "dlclose": 481, "dlibfuzzer_en": 481, "dlibfuzzer_enable_test": 481, "dll": [393, 454, 495, 535], "dllc": 535, "dllexport": [393, 479, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569], "dllimport": [393, 479], "dlls": [454, 491], "dllstorageclass": [393, 479], "dllvm_binutils_incdir": 466, "dllvm_build_instru": 469, "dllvm_build_runtim": [460, 463, 469], "dllvm_build_stat": 391, "dllvm_config_path": 470, "dllvm_default_target_tripl": 471, "dllvm_dir": 400, "dllvm_enable_assert": [448, 463, 468, 535], "dllvm_enable_backtrac": 463, "dllvm_enable_doxygen": 400, "dllvm_enable_doxygen_qt_help": 400, "dllvm_enable_p": 471, "dllvm_enable_project": [463, 509], "dllvm_enable_sphinx": 463, "dllvm_experimental_targets_to_build": 539, "dllvm_external_bar_source_dir": 400, "dllvm_external_foo_source_dir": 400, "dllvm_external_project": 400, "dllvm_include_exampl": 463, "dllvm_include_test": 463, "dllvm_libdir_suffix": 400, "dllvm_profdata_fil": 469, "dllvm_tablegen": [469, 471], "dllvm_target_arch": 471, "dllvm_targets_to_build": [400, 452, 453, 468, 471], "dllvm_use_link": 400, "dllvm_use_sanit": 460, "dllvm_use_sanitize_coverag": 460, "dloc": 405, "dlsym": [554, 564, 575], "dmask": [0, 1, 2, 3, 17, 18, 19, 20, 32, 33, 114, 115, 116, 124, 202, 203, 204, 205, 217, 218, 296, 297, 298, 299, 311, 312], "dmb": 390, "dmlc": 510, "dmpqrtx": 413, "dname": 445, "do": [384, 385, 386, 387, 389, 390, 391, 392, 393, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 413, 418, 424, 429, 430, 431, 432, 434, 436, 437, 445, 446, 448, 449, 452, 453, 454, 455, 456, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 490, 491, 492, 493, 494, 498, 499, 502, 506, 507, 508, 509, 510, 514, 515, 519, 520, 521, 522, 524, 525, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "do_on": 449, "do_safepoint": 524, "do_something_with_t": 458, "do_two": 449, "doc": [387, 400, 455, 463, 470, 471, 472, 479, 481, 485, 509, 511, 513, 520, 521, 533, 544, 545, 546, 558, 568], "dockerfil": 545, "doclist": 544, "document": [0, 1, 2, 3, 383, 384, 385, 389, 390, 392, 393, 394, 396, 398, 400, 401, 402, 403, 408, 424, 445, 446, 448, 450, 452, 453, 454, 455, 456, 460, 461, 462, 463, 464, 465, 467, 468, 470, 471, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 493, 494, 497, 499, 502, 504, 505, 507, 509, 510, 511, 513, 514, 516, 519, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 537, 539, 540, 541, 542, 543, 553, 554, 559, 563, 564, 569, 575], "documentlist": 544, "documentlisttrait": 544, "doe": [205, 216, 218, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 396, 397, 398, 399, 400, 401, 402, 404, 405, 409, 413, 414, 418, 421, 424, 429, 430, 432, 437, 442, 445, 446, 449, 451, 452, 453, 454, 455, 456, 458, 459, 461, 463, 464, 465, 466, 469, 470, 472, 473, 474, 475, 477, 479, 482, 483, 486, 488, 489, 490, 491, 494, 495, 500, 502, 505, 507, 508, 509, 510, 516, 517, 518, 519, 520, 522, 524, 525, 529, 530, 533, 535, 536, 539, 541, 542, 544, 546, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "doesn": [389, 390, 392, 395, 396, 397, 401, 402, 403, 404, 405, 409, 413, 429, 445, 446, 450, 452, 453, 454, 457, 459, 461, 462, 463, 465, 466, 472, 473, 474, 479, 484, 488, 497, 507, 509, 511, 519, 520, 522, 524, 525, 528, 529, 530, 535, 540, 542, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "dofin": 539, "dog": [445, 511], "doing": [388, 389, 396, 400, 402, 404, 411, 413, 424, 427, 443, 445, 448, 452, 455, 458, 459, 461, 463, 465, 469, 470, 473, 479, 482, 488, 507, 516, 519, 520, 524, 525, 536, 540, 541, 542, 547, 548, 551, 553, 554, 556, 559, 560, 561, 563, 564, 566, 569, 570, 572, 574, 579], "doiniti": [481, 539, 547, 548, 549, 550, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569], "dollar": 468, "domain": [402, 461, 465, 479, 520, 528, 531, 539, 560, 570, 579], "domin": [404, 446, 461, 479, 488, 507, 533, 540, 557, 567, 578], "dominatorset": 540, "dominatortre": [511, 540], "dominatortreebas": 507, "don": [387, 389, 396, 400, 401, 402, 403, 405, 407, 409, 411, 429, 430, 433, 442, 445, 446, 450, 452, 453, 454, 459, 461, 463, 465, 468, 472, 473, 474, 479, 481, 484, 485, 488, 489, 490, 493, 504, 505, 506, 507, 509, 514, 516, 519, 520, 521, 523, 524, 534, 535, 538, 540, 543, 546, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "done": [0, 1, 2, 3, 386, 387, 390, 391, 397, 398, 400, 402, 404, 413, 424, 443, 445, 448, 451, 452, 454, 455, 461, 463, 465, 468, 469, 472, 473, 476, 479, 481, 482, 483, 488, 489, 491, 505, 506, 507, 509, 514, 518, 519, 520, 524, 525, 529, 530, 533, 534, 535, 537, 540, 541, 543, 544, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "dooneiter": 397, "door": 473, "doorbel": 386, "dootherth": 404, "dopartialredundancyelimin": 445, "dorit": [512, 538], "dosometh": [404, 520], "dosomethinginterestingwithmyapi": 481, "dot": [429, 472, 506, 507, 519, 541, 542], "doubl": [385, 386, 393, 402, 405, 445, 446, 447, 464, 465, 473, 479, 484, 489, 505, 507, 517, 527, 529, 539, 544, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "double_typ": [574, 575, 576, 577, 578], "doublescalarti": 479, "doubletyp": 507, "doubleword": 479, "doubli": [401, 507, 518], "doubt": [473, 485, 521], "dovetail": [557, 567, 578], "down": [389, 392, 395, 397, 402, 403, 406, 410, 411, 445, 450, 452, 454, 462, 463, 465, 473, 474, 479, 481, 488, 489, 492, 504, 505, 506, 507, 509, 512, 513, 519, 520, 531, 534, 539, 540, 541, 545, 546, 548, 551, 552, 555, 556, 558, 559, 560, 562, 565, 566, 568, 569, 570, 571, 573, 576, 577, 579], "downcast": 473, "download": [400, 452, 453, 463, 464, 466, 467, 470, 471, 472, 481, 506, 507, 513, 514, 535, 539], "download_link": 510, "download_prerequisit": 463, "downsid": [452, 481, 507], "downstream": [394, 421, 509, 513], "downward": 479, "dox": 403, "doxgyen": 400, "doxygen": [400, 460, 463, 464, 473, 507, 545], "dozen": [459, 468, 507], "dpp": [383, 513], "dpp16_ctrl": 0, "dpp8_sel": 0, "dpp_ctrl": [2, 3], "dpython_execut": 468, "dr": 456, "draft": [390, 403, 479, 516, 519], "drag": 506, "dragonegg": [402, 452], "dramat": [404, 410, 445, 463, 479, 507, 520, 554, 564, 575], "drastic": 525, "draw": 386, "drawback": [401, 445, 452, 507, 549], "drectv": 437, "dri": [469, 511], "drive": [398, 468, 478, 512, 524], "driven": [402, 405, 445, 449, 505, 535, 539, 554, 557, 560, 564, 567, 570, 572, 575, 578, 579], "driver": [386, 418, 446, 447, 466, 470, 471, 481, 482, 490, 492, 508, 535, 551, 554, 555, 556, 557, 558, 559, 561, 564, 565, 566, 567, 568, 569, 572, 575, 576, 577, 578], "drop": [404, 412, 431, 438, 440, 441, 452, 479, 484, 506, 507, 519, 536], "dropdown": 506, "drown": 534, "ds": [446, 540], "ds_add_f32": [0, 2, 3], "ds_add_rtn_f32": [0, 2, 3], "ds_add_rtn_u32": [0, 1, 2, 3], "ds_add_rtn_u64": [0, 1, 2, 3], "ds_add_src2_f32": [0, 2, 3], "ds_add_src2_u32": [0, 1, 2, 3], "ds_add_src2_u64": [0, 1, 2, 3], "ds_add_u32": [0, 1, 2, 3, 386], "ds_add_u64": [0, 1, 2, 3], "ds_and_b32": [0, 1, 2, 3], "ds_and_b64": [0, 1, 2, 3], "ds_and_rtn_b32": [0, 1, 2, 3], "ds_and_rtn_b64": [0, 1, 2, 3], "ds_and_src2_b32": [0, 1, 2, 3], "ds_and_src2_b64": [0, 1, 2, 3], "ds_append": [0, 1, 2, 3], "ds_atom": 386, "ds_bpermute_b32": [0, 2, 3], "ds_cmpst_b32": [0, 1, 2, 3], "ds_cmpst_b64": [0, 1, 2, 3], "ds_cmpst_f32": [0, 1, 2, 3, 386], "ds_cmpst_f64": [0, 1, 2, 3], "ds_cmpst_rtn_b32": [0, 1, 2, 3], "ds_cmpst_rtn_b64": [0, 1, 2, 3], "ds_cmpst_rtn_f32": [0, 1, 2, 3], "ds_cmpst_rtn_f64": [0, 1, 2, 3], "ds_condxchg32_rtn_b64": [0, 1, 2, 3], "ds_consum": [0, 1, 2, 3], "ds_dec_rtn_u32": [0, 1, 2, 3], "ds_dec_rtn_u64": [0, 1, 2, 3], "ds_dec_src2_u32": [0, 1, 2, 3], "ds_dec_src2_u64": [0, 1, 2, 3], "ds_dec_u32": [0, 1, 2, 3], "ds_dec_u64": [0, 1, 2, 3], "ds_gws_barrier": [0, 1, 2, 3], "ds_gws_init": [0, 1, 2, 3], "ds_gws_sema_br": [0, 1, 2, 3], "ds_gws_sema_p": [0, 1, 2, 3], "ds_gws_sema_release_al": [0, 1, 2, 3], "ds_gws_sema_v": [0, 1, 2, 3], "ds_inc_rtn_u32": [0, 1, 2, 3], "ds_inc_rtn_u64": [0, 1, 2, 3], "ds_inc_src2_u32": [0, 1, 2, 3], "ds_inc_src2_u64": [0, 1, 2, 3], "ds_inc_u32": [0, 1, 2, 3], "ds_inc_u64": [0, 1, 2, 3], "ds_load": 386, "ds_max_f32": [0, 1, 2, 3], "ds_max_f64": [0, 1, 2, 3], "ds_max_i32": [0, 1, 2, 3], "ds_max_i64": [0, 1, 2, 3], "ds_max_rtn_f32": [0, 1, 2, 3], "ds_max_rtn_f64": [0, 1, 2, 3], "ds_max_rtn_i32": [0, 1, 2, 3], "ds_max_rtn_i64": [0, 1, 2, 3], "ds_max_rtn_u32": [0, 1, 2, 3], "ds_max_rtn_u64": [0, 1, 2, 3], "ds_max_src2_f32": [0, 1, 2, 3], "ds_max_src2_f64": [0, 1, 2, 3], "ds_max_src2_i32": [0, 1, 2, 3], "ds_max_src2_i64": [0, 1, 2, 3], "ds_max_src2_u32": [0, 1, 2, 3], "ds_max_src2_u64": [0, 1, 2, 3], "ds_max_u32": [0, 1, 2, 3], "ds_max_u64": [0, 1, 2, 3], "ds_min_f32": [0, 1, 2, 3], "ds_min_f64": [0, 1, 2, 3], "ds_min_i32": [0, 1, 2, 3], "ds_min_i64": [0, 1, 2, 3], "ds_min_rtn_f32": [0, 1, 2, 3], "ds_min_rtn_f64": [0, 1, 2, 3, 386], "ds_min_rtn_i32": [0, 1, 2, 3], "ds_min_rtn_i64": [0, 1, 2, 3], "ds_min_rtn_u32": [0, 1, 2, 3], "ds_min_rtn_u64": [0, 1, 2, 3], "ds_min_src2_f32": [0, 1, 2, 3], "ds_min_src2_f64": [0, 1, 2, 3], "ds_min_src2_i32": [0, 1, 2, 3], "ds_min_src2_i64": [0, 1, 2, 3], "ds_min_src2_u32": [0, 1, 2, 3], "ds_min_src2_u64": [0, 1, 2, 3], "ds_min_u32": [0, 1, 2, 3], "ds_min_u64": [0, 1, 2, 3], "ds_mskor_b32": [0, 1, 2, 3], "ds_mskor_b64": [0, 1, 2, 3], "ds_mskor_rtn_b32": [0, 1, 2, 3], "ds_mskor_rtn_b64": [0, 1, 2, 3], "ds_nop": [0, 1, 2, 3], "ds_or_b32": [0, 1, 2, 3], "ds_or_b64": [0, 1, 2, 3], "ds_or_rtn_b32": [0, 1, 2, 3], "ds_or_rtn_b64": [0, 1, 2, 3], "ds_or_src2_b32": [0, 1, 2, 3], "ds_or_src2_b64": [0, 1, 2, 3], "ds_ordered_count": [0, 1, 2, 3], "ds_permute_b32": [0, 2, 3], "ds_read2_b32": [0, 1, 2, 3], "ds_read2_b64": [0, 1, 2, 3], "ds_read2st64_b32": [0, 1, 2, 3], "ds_read2st64_b64": [0, 1, 2, 3], "ds_read_b128": [0, 1, 2, 3], "ds_read_b32": [0, 1, 2, 3], "ds_read_b64": [0, 1, 2, 3], "ds_read_b96": [0, 1, 2, 3], "ds_read_i16": [0, 1, 2, 3], "ds_read_i8": [0, 1, 2, 3], "ds_read_i8_d16": [0, 3], "ds_read_i8_d16_hi": [0, 3], "ds_read_u16": [0, 1, 2, 3], "ds_read_u16_d16": [0, 3], "ds_read_u16_d16_hi": [0, 3], "ds_read_u8": [0, 1, 2, 3], "ds_read_u8_d16": [0, 3], "ds_read_u8_d16_hi": [0, 3], "ds_rsub_rtn_u32": [0, 1, 2, 3], "ds_rsub_rtn_u64": [0, 1, 2, 3], "ds_rsub_src2_u32": [0, 1, 2, 3], "ds_rsub_src2_u64": [0, 1, 2, 3], "ds_rsub_u32": [0, 1, 2, 3], "ds_rsub_u64": [0, 1, 2, 3], "ds_store": 386, "ds_sub_rtn_u32": [0, 1, 2, 3], "ds_sub_rtn_u64": [0, 1, 2, 3], "ds_sub_src2_u32": [0, 1, 2, 3], "ds_sub_src2_u64": [0, 1, 2, 3], "ds_sub_u32": [0, 1, 2, 3], "ds_sub_u64": [0, 1, 2, 3], "ds_swizzle_b32": [0, 1, 2, 3, 384], "ds_wrap_rtn_b32": [0, 1, 2, 3], "ds_write2_b32": [0, 1, 2, 3], "ds_write2_b64": [0, 1, 2, 3], "ds_write2st64_b32": [0, 1, 2, 3], "ds_write2st64_b64": [0, 1, 2, 3], "ds_write_b128": [0, 1, 2, 3], "ds_write_b16": [0, 1, 2, 3], "ds_write_b16_d16_hi": [0, 3], "ds_write_b32": [0, 1, 2, 3], "ds_write_b64": [0, 1, 2, 3], "ds_write_b8": [0, 1, 2, 3], "ds_write_b8_d16_hi": [0, 3], "ds_write_b96": [0, 1, 2, 3], "ds_write_src2_b32": [0, 1, 2, 3], "ds_write_src2_b64": [0, 1, 2, 3, 386], "ds_wrxchg2_rtn_b32": [0, 1, 2, 3], "ds_wrxchg2_rtn_b64": [0, 1, 2, 3], "ds_wrxchg2st64_rtn_b32": [0, 1, 2, 3], "ds_wrxchg2st64_rtn_b64": [0, 1, 2, 3], "ds_wrxchg_rtn_b32": [0, 1, 2, 3], "ds_wrxchg_rtn_b64": [0, 1, 2, 3], "ds_xor_b32": [0, 1, 2, 3], "ds_xor_b64": [0, 1, 2, 3], "ds_xor_rtn_b32": [0, 1, 2, 3], "ds_xor_rtn_b64": [0, 1, 2, 3], "ds_xor_src2_b32": [0, 1, 2, 3], "ds_xor_src2_b64": [0, 1, 2, 3], "dsa": 480, "dsc": 542, "dse": [390, 480], "dsls": [528, 531], "dso": 399, "dso_loc": [393, 479, 519], "dso_path": 410, "dso_preempt": [393, 479], "dsoloc": 479, "dsos": 390, "dst": [0, 1, 2, 3, 222, 316, 382, 402, 476, 513, 529, 531, 539], "dst0": [0, 1, 2, 3], "dst1": [0, 1, 2, 3], "dst_sel": [0, 2, 3, 386], "dst_unus": [0, 2, 3, 386], "dstindex": 539, "dsym": [407, 423, 432, 442], "dsymtab": 437, "dsymutil": [408, 423], "dt": [437, 511, 540], "dtest_suite_profile_gener": 533, "dtest_suite_profile_us": 533, "dtest_suite_run_typ": 533, "dtest_suite_subdir": 533, "dtor": [457, 479], "dtrace": 398, "dubious": 413, "duck": 507, "due": [385, 386, 389, 395, 398, 399, 400, 402, 405, 446, 449, 451, 452, 453, 454, 458, 459, 461, 463, 468, 470, 474, 479, 480, 482, 489, 500, 507, 509, 514, 517, 520, 524, 529, 530, 536, 537, 543, 548, 553, 554, 563, 564], "dumb": [560, 570, 579], "dummi": [402, 457, 484, 505, 535, 539], "dummy_main": 460, "dummytargetmachin": 539, "dump": [393, 397, 402, 405, 407, 408, 415, 424, 430, 431, 432, 434, 436, 437, 444, 495, 507, 519, 527, 531, 540, 544, 553, 554, 555, 559, 563, 564, 565, 569, 574, 575, 576], "dump_modul": [574, 575, 576, 577, 578], "dump_valu": [574, 575, 576, 577, 578], "dumpabl": 540, "dumpattr": 527, "dumper": [408, 434, 519], "dumpmymapdoc": 544, "duo": 386, "duplic": [389, 396, 398, 401, 402, 404, 413, 437, 445, 449, 452, 456, 459, 479, 480, 482, 489, 491, 500, 503, 507, 519, 524, 527, 531, 552, 562, 573], "durat": [389, 402, 519, 540, 541, 543, 546], "dure": [386, 388, 394, 395, 400, 401, 402, 424, 429, 434, 445, 446, 448, 449, 452, 453, 454, 455, 458, 459, 463, 465, 469, 472, 476, 479, 481, 482, 489, 492, 495, 507, 509, 510, 512, 514, 515, 520, 522, 524, 534, 535, 539, 544, 545, 553, 563, 574], "dvariabl": 400, "dw_apple_property_assign": 519, "dw_apple_property_atom": 519, "dw_apple_property_class": 519, "dw_apple_property_copi": 519, "dw_apple_property_gett": 519, "dw_apple_property_nonatom": 519, "dw_apple_property_nul": 519, "dw_apple_property_null_resett": 519, "dw_apple_property_readon": 519, "dw_apple_property_readwrit": 519, "dw_apple_property_retain": 519, "dw_apple_property_sett": 519, "dw_apple_property_strong": 519, "dw_apple_property_unsafe_unretain": 519, "dw_apple_property_weak": 519, "dw_at_align": 519, "dw_at_apple_properti": 519, "dw_at_apple_property_attribut": 519, "dw_at_apple_property_gett": 519, "dw_at_apple_property_sett": 519, "dw_at_artifici": 519, "dw_at_call_site_parameter_valu": 479, "dw_at_declar": 519, "dw_at_element": 519, "dw_at_entry_pc": 519, "dw_at_high_pc": 519, "dw_at_loc": 405, "dw_at_low_pc": 519, "dw_at_mips_linkage_nam": 519, "dw_at_nam": [405, 423, 519], "dw_at_rang": 519, "dw_ate_address": 479, "dw_ate_boolean": 479, "dw_ate_float": [479, 559, 569], "dw_ate_sign": [479, 519], "dw_ate_signed_char": 479, "dw_ate_unsign": [479, 519], "dw_ate_unsigned_char": 479, "dw_form_": 519, "dw_form_addr": 519, "dw_form_data1": 519, "dw_form_data2": 519, "dw_form_data4": 519, "dw_form_flag_pres": 519, "dw_form_line_strp": 386, "dw_form_ref1": 519, "dw_form_ref2": 519, "dw_form_ref4": 519, "dw_form_ref8": 519, "dw_form_ref_udata": 519, "dw_form_sec_offset": 405, "dw_form_strp": [405, 519], "dw_form_xxx": 519, "dw_lang_c": [519, 559, 569], "dw_lang_c99": [479, 519], "dw_lnct_llvm_sourc": 386, "dw_macinfo_defin": 479, "dw_macinfo_start_fil": 479, "dw_macinfo_undef": 479, "dw_op_addr": 519, "dw_op_bit_piec": 479, "dw_op_constu": 479, "dw_op_convert": 479, "dw_op_deref": 479, "dw_op_entry_valu": 479, "dw_op_llvm_convert": 479, "dw_op_llvm_frag": 479, "dw_op_llvm_tag_offset": 479, "dw_op_minus": 479, "dw_op_plus": [479, 519], "dw_op_plus_uconst": [479, 519], "dw_op_stack_valu": [479, 519], "dw_op_swap": 479, "dw_op_xderef": 479, "dw_tag": 519, "dw_tag_apple_properti": 519, "dw_tag_array_typ": [479, 519], "dw_tag_atomic_typ": [479, 519], "dw_tag_base_typ": [479, 519], "dw_tag_class_typ": [479, 519], "dw_tag_const_typ": [479, 519], "dw_tag_enumeration_typ": [479, 519], "dw_tag_file_typ": 519, "dw_tag_friend": 479, "dw_tag_gnu_template_param_pack": 479, "dw_tag_gnu_template_template_param": 479, "dw_tag_imported_modul": 479, "dw_tag_inherit": 479, "dw_tag_inlined_subroutin": 519, "dw_tag_interface_typ": 519, "dw_tag_label": 519, "dw_tag_memb": [479, 519], "dw_tag_namelist": 519, "dw_tag_namespac": 519, "dw_tag_packed_typ": 519, "dw_tag_pointer_typ": [479, 519], "dw_tag_ptr_to_member_typ": [479, 519], "dw_tag_reference_typ": [479, 519], "dw_tag_restrict_typ": [479, 519], "dw_tag_set_typ": 519, "dw_tag_shared_typ": 519, "dw_tag_string_typ": 519, "dw_tag_structure_typ": [479, 519], "dw_tag_subprogram": 519, "dw_tag_subrange_typ": 519, "dw_tag_subroutine_typ": 519, "dw_tag_template_value_paramet": 479, "dw_tag_typedef": [479, 519], "dw_tag_union_typ": [479, 519], "dw_tag_unspecified_typ": [479, 519], "dw_tag_vari": 519, "dw_tag_volatile_typ": [479, 519], "dw_tag_xxx": 519, "dw_virtuality_pure_virtu": 479, "dwarf": [402, 408, 431, 432, 442, 450, 451, 454, 461, 479, 480, 482, 493, 507, 513, 522, 539, 579], "dwarf2": [559, 569], "dwarf4": 513, "dwarf5": 513, "dwarfdebug": 519, "dwarfdump": [405, 407, 408, 519], "dwarfencod": 454, "dwarfnumb": 539, "dwarfregnum": 539, "dwell": [553, 563], "dwo": 431, "dwoid": 479, "dword": [4, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 228, 229, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 323, 324, 325, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 513], "dwp": 442, "dx": 531, "dx10": 386, "dx10_clamp": 386, "dyld": 483, "dyldinfo": 430, "dylib": [432, 491, 504, 535, 546], "dyn": [386, 436, 437, 449], "dyn_cast": [404, 473, 527, 539, 545], "dyn_cast_or_nul": 507, "dyn_switch": 404, "dynam": [386, 391, 393, 397, 398, 406, 410, 411, 418, 429, 430, 432, 436, 437, 443, 449, 451, 456, 457, 459, 461, 462, 473, 481, 483, 491, 495, 505, 507, 508, 517, 518, 519, 520, 522, 524, 529, 536, 541, 544, 554, 556, 564, 566, 575, 577], "dynamic_cast": [404, 473, 507, 557, 558, 559, 567, 568, 569], "dynamic_shared_point": 386, "dynamiclibrari": [548, 549, 550], "dynamiclibrarysearchgener": [491, 546, 547], "dynamicsharedpoint": 386, "dynstr": 386, "dynsym": 386, "e1": 386, "e2": 386, "e_entri": 386, "e_id": 386, "e_machin": 386, "e_typ": 386, "ea_r": 402, "eabi": [410, 470], "each": [17, 18, 19, 20, 31, 32, 33, 42, 114, 115, 116, 123, 124, 129, 202, 203, 204, 205, 216, 217, 218, 227, 296, 297, 298, 299, 310, 311, 312, 322, 384, 386, 388, 389, 390, 392, 393, 394, 397, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 413, 417, 418, 419, 423, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 445, 446, 450, 452, 454, 455, 457, 459, 460, 461, 462, 463, 465, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 494, 495, 497, 498, 499, 502, 503, 504, 507, 508, 509, 511, 512, 514, 515, 516, 519, 520, 522, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "eachoth": 398, "eager": [491, 507, 547], "eao": 507, "earli": [446, 449, 465, 470, 479, 481, 484, 490, 492, 495, 507, 520, 539, 540, 557, 567, 578], "earlier": [386, 390, 393, 404, 449, 450, 459, 463, 466, 478, 479, 491, 499, 509, 519, 520, 529, 539, 546, 553, 554, 563, 564], "earlyclobb": 484, "earlycs": 459, "earn": 509, "eas": [468, 479, 524], "easi": [393, 397, 398, 400, 402, 404, 409, 452, 461, 463, 466, 471, 473, 478, 479, 481, 485, 489, 491, 507, 509, 511, 514, 519, 520, 521, 527, 534, 535, 540, 544, 547, 548, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 578, 579], "easier": [386, 387, 389, 390, 396, 402, 403, 404, 405, 417, 448, 449, 451, 452, 455, 457, 461, 463, 471, 474, 478, 479, 488, 490, 491, 505, 506, 507, 509, 511, 514, 520, 527, 531, 535, 540, 552, 553, 557, 559, 562, 563, 567, 569, 573, 574, 578], "easiest": [390, 465, 470, 472, 485, 521, 539, 540, 541, 554, 560, 564, 570, 579], "easili": [396, 402, 404, 416, 445, 459, 461, 474, 478, 487, 488, 505, 507, 513, 515, 519, 520, 522, 524, 525, 527, 535, 540, 544, 546, 558, 568], "eat": [445, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "eatomtypecuoffset": 519, "eatomtypedieoffset": 519, "eatomtypedietag": 519, "eatomtypenameflag": 519, "eatomtypenul": 519, "eatomtypetag": 519, "eatomtypetypeflag": 519, "eax": [402, 405, 429, 456, 479, 484, 513, 519, 520, 529, 531, 539], "ebenders_test": 451, "ebnf": 543, "ebp": [402, 454, 531], "ebx": [402, 456, 531], "ec": [433, 507, 558, 568], "ecc": 386, "echo": [391, 409, 424, 442, 463, 485, 509, 521], "eckel": 507, "ecma": 495, "econom": 403, "ecosystem": [478, 503, 507, 509], "ecsubstreams": 495, "ecx": [402, 456, 529, 531], "ed": [390, 396, 446, 507, 520, 545], "edg": [394, 397, 402, 405, 446, 454, 456, 461, 479, 481, 509, 512, 520, 540, 541, 542, 545], "edi": [402, 405, 484, 513, 520, 531], "edit": [386, 400, 408, 413, 433, 495, 507, 511], "editor": [404, 452, 463, 485, 521], "edu": [391, 510, 520], "educ": [386, 403], "edx": [402, 429, 479, 520, 529, 531], "ee": 385, "eeee": 429, "eeeer": 429, "ef_amdgpu_mach_amdgcn_gfx1010": 386, "ef_amdgpu_mach_amdgcn_gfx1011": 386, "ef_amdgpu_mach_amdgcn_gfx1012": 386, "ef_amdgpu_mach_amdgcn_gfx600": 386, "ef_amdgpu_mach_amdgcn_gfx601": 386, "ef_amdgpu_mach_amdgcn_gfx700": 386, "ef_amdgpu_mach_amdgcn_gfx701": 386, "ef_amdgpu_mach_amdgcn_gfx702": 386, "ef_amdgpu_mach_amdgcn_gfx703": 386, "ef_amdgpu_mach_amdgcn_gfx704": 386, "ef_amdgpu_mach_amdgcn_gfx801": 386, "ef_amdgpu_mach_amdgcn_gfx802": 386, "ef_amdgpu_mach_amdgcn_gfx803": 386, "ef_amdgpu_mach_amdgcn_gfx810": 386, "ef_amdgpu_mach_amdgcn_gfx900": 386, "ef_amdgpu_mach_amdgcn_gfx902": 386, "ef_amdgpu_mach_amdgcn_gfx904": 386, "ef_amdgpu_mach_amdgcn_gfx906": 386, "ef_amdgpu_mach_amdgcn_gfx908": 386, "ef_amdgpu_mach_amdgcn_gfx909": 386, "ef_amdgpu_mach_non": 386, "ef_amdgpu_mach_r600_bart": 386, "ef_amdgpu_mach_r600_caico": 386, "ef_amdgpu_mach_r600_cayman": 386, "ef_amdgpu_mach_r600_cedar": 386, "ef_amdgpu_mach_r600_cypress": 386, "ef_amdgpu_mach_r600_junip": 386, "ef_amdgpu_mach_r600_r600": 386, "ef_amdgpu_mach_r600_r630": 386, "ef_amdgpu_mach_r600_redwood": 386, "ef_amdgpu_mach_r600_rs880": 386, "ef_amdgpu_mach_r600_rv670": 386, "ef_amdgpu_mach_r600_rv710": 386, "ef_amdgpu_mach_r600_rv730": 386, "ef_amdgpu_mach_r600_rv770": 386, "ef_amdgpu_mach_r600_sumo": 386, "ef_amdgpu_mach_r600_turk": 386, "ef_amdgpu_mach_xxx": 386, "ef_amdgpu_sram_ecc": 386, "ef_amdgpu_xnack": 386, "effect": [384, 389, 393, 400, 402, 404, 405, 410, 429, 431, 436, 437, 445, 446, 461, 463, 465, 468, 479, 486, 505, 507, 509, 512, 517, 519, 520, 524, 525, 530, 535, 536, 539, 540, 541, 545, 548, 555, 556, 565, 566, 576, 577], "effici": [385, 386, 393, 402, 404, 452, 457, 461, 463, 473, 479, 481, 486, 491, 505, 507, 512, 513, 517, 519, 520, 524, 525, 527, 529, 535, 537, 540, 545, 552, 554, 562, 564, 573, 575], "effort": [386, 404, 452, 455, 459, 465, 479, 483, 505, 519, 520, 522, 525, 541, 553, 563, 574], "eflag": [484, 519, 529, 531], "eg": [513, 517], "egregi": [403, 452], "egrep": 463, "eh": [400, 411, 423, 449, 479, 483, 539], "eh_fram": 454, "eh_label": 484, "eh_return": 454, "ehashfunctiondjb": 519, "ehcleanup": 449, "ehobj": 454, "ehptr": 454, "ehselector": 449, "ei_abivers": 386, "ei_class": 386, "ei_data": 386, "ei_osabi": 386, "eieio": 479, "eight": [402, 413, 479], "eip": 531, "eiplog": 479, "either": [7, 20, 31, 33, 53, 85, 99, 185, 205, 216, 218, 282, 299, 310, 312, 333, 367, 381, 384, 385, 386, 389, 390, 392, 393, 397, 398, 400, 402, 404, 405, 409, 410, 413, 417, 418, 424, 429, 431, 442, 443, 445, 448, 452, 454, 455, 456, 459, 461, 462, 463, 465, 466, 474, 479, 480, 481, 483, 484, 488, 489, 490, 491, 492, 494, 495, 497, 502, 505, 507, 509, 511, 513, 516, 519, 520, 522, 524, 529, 531, 533, 534, 535, 536, 537, 539, 541, 542, 543, 551, 552, 553, 555, 559, 560, 561, 562, 563, 565, 569, 570, 572, 573, 575, 576, 579], "elabor": [507, 520], "elaps": 429, "elect": 452, "eleg": [552, 554, 555, 560, 562, 564, 565, 570, 573, 575, 576, 579], "elem_func": 519, "element": [17, 18, 19, 20, 31, 32, 33, 114, 115, 116, 123, 124, 202, 203, 204, 205, 216, 217, 218, 296, 297, 298, 299, 310, 311, 312, 384, 386, 389, 392, 393, 401, 402, 405, 429, 455, 461, 465, 480, 485, 489, 490, 505, 507, 512, 513, 519, 521, 524, 527, 529, 530, 536, 537, 538, 539, 543, 544, 546], "element_s": 479, "element_typ": [574, 575, 576, 577, 578], "elementtyp": 479, "elf": [393, 402, 410, 430, 432, 436, 442, 446, 447, 479, 483, 491, 515, 519, 522, 535, 541], "elf32": 431, "elf64": [431, 542], "elf64_rela": 386, "elf_cgprofil": 456, "elf_word": 456, "elf_xword": 456, "elfabiversion_amdgpu_hsa": 386, "elfabiversion_amdgpu_mesa3d": 386, "elfabiversion_amdgpu_p": 386, "elfclass32": 386, "elfclass64": 386, "elfdata2lsb": 386, "elfosabi_amdgpu_hsa": 386, "elfosabi_amdgpu_mesa3d": 386, "elfosabi_amdgpu_p": 386, "elfosabi_non": 386, "eli": 446, "elid": [449, 461, 477, 529], "elig": [429, 449, 505], "elim": 519, "elimin": [386, 389, 397, 402, 404, 410, 445, 452, 457, 459, 461, 463, 465, 466, 479, 480, 484, 490, 492, 507, 519, 520, 524, 539, 548, 552, 554, 555, 556, 557, 562, 564, 565, 566, 567, 573, 575, 576, 577, 578], "eliminatecallframepseudoinstr": 539, "eliminateframeindex": 539, "elis": 449, "els": [402, 403, 405, 411, 423, 424, 428, 445, 446, 449, 450, 452, 455, 464, 466, 469, 479, 481, 484, 488, 489, 490, 505, 507, 509, 520, 524, 525, 530, 535, 536, 538, 539, 544, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579], "else_": [576, 577, 578], "else_bb": [576, 577, 578], "else_v": [576, 577, 578], "elsebb": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "elsev": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "elsewher": [384, 385, 445, 452, 507, 524, 527, 539], "elt": 479, "eltsizeparam": [393, 479], "eltti": [393, 559, 569], "em": 470, "em_amdgpu": 386, "emac": [404, 463, 531], "email": [390, 403, 448, 452, 463, 467, 472, 480, 506, 516, 545, 560, 570, 579], "emb": [386, 393, 400, 407, 479, 519, 520, 560, 570, 579], "embed": [386, 393, 407, 431, 447, 450, 452, 460, 461, 470, 479, 494, 495, 497, 503, 505, 507, 512, 519, 520, 529, 530, 555, 556, 565, 566, 576, 577], "embrac": 452, "emerg": 451, "emergent": 452, "emerson": 511, "emersonconcern": 511, "emiss": [407, 461, 479, 519, 522, 539, 557, 567, 578], "emissionkind": [479, 519], "emit": [386, 390, 392, 393, 397, 400, 405, 407, 408, 410, 411, 423, 429, 431, 432, 433, 434, 444, 445, 446, 449, 450, 451, 454, 456, 457, 459, 462, 463, 464, 465, 474, 476, 479, 480, 483, 484, 490, 491, 493, 495, 500, 502, 505, 507, 519, 520, 522, 524, 527, 536, 539, 540, 542, 547, 552, 553, 555, 556, 557, 559, 560, 562, 563, 565, 566, 567, 569, 570, 573, 574, 576, 577, 578, 579], "emit_22": 539, "emitalign": 461, "emitbyt": 539, "emitcal": 507, "emitconst": 539, "emitconstantpool": 539, "emitconstpooladdress": 539, "emitepilogu": 539, "emitexternalsymboladdress": 539, "emitfnstart": 402, "emitfunctionstub": 539, "emitglobaladdress": 539, "emitinstruct": [402, 539], "emitint32": 461, "emitjumptableaddress": 539, "emitjumptableinfo": 539, "emitlabel": 402, "emitlabelplusoffset": 461, "emitleadingf": 390, "emitloadlink": 390, "emitloc": [559, 569], "emitmaskedatomiccmpxchgintrins": 390, "emitmaskedatomicrmwintrins": 390, "emitnam": 404, "emitobject": 483, "emitprologu": [454, 539], "emitpseudoexpansionlow": 527, "emitstacksizesect": 402, "emitstorecondit": 390, "emitsymbolattribut": 402, "emitt": [444, 451, 479, 527, 529, 555, 565, 576], "emittrailingf": 390, "emitvalu": 402, "emmc": 468, "emphas": [404, 485, 521], "employ": [479, 507, 512, 520], "empti": [386, 400, 401, 404, 409, 424, 442, 445, 449, 452, 454, 461, 463, 479, 481, 484, 489, 497, 507, 509, 517, 519, 520, 524, 529, 530, 535, 536, 539, 544, 552, 553, 555, 559, 562, 563, 565, 569, 573, 574, 576], "empty_subregsset": 539, "emul": [402, 404, 411, 429, 455, 459, 470, 479, 491, 507, 509], "en": [400, 404, 426, 485, 511], "enabl": [222, 316, 384, 386, 388, 392, 398, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 418, 422, 424, 425, 427, 429, 431, 432, 437, 443, 445, 446, 448, 449, 450, 451, 452, 457, 458, 459, 460, 461, 463, 464, 465, 466, 470, 481, 482, 486, 488, 491, 492, 504, 507, 509, 511, 512, 513, 517, 518, 519, 524, 530, 531, 533, 535, 536, 538, 539, 540, 541, 542, 544, 546, 547, 548, 550, 554, 558, 564, 568], "enable_dx10_clamp": 386, "enable_exception_address_watch": 386, "enable_exception_fp_denorm": 386, "enable_exception_fp_denormal_sourc": 386, "enable_exception_ieee_754_fp": 386, "enable_exception_ieee_754_fp_division_by_zero": 386, "enable_exception_ieee_754_fp_inexact": 386, "enable_exception_ieee_754_fp_invalid_oper": 386, "enable_exception_ieee_754_fp_overflow": 386, "enable_exception_ieee_754_fp_underflow": 386, "enable_exception_int_divide_bi": 386, "enable_exception_int_divide_by_zero": 386, "enable_exception_memori": 386, "enable_ieee_mod": 386, "enable_if": 473, "enable_mem_ord": 386, "enable_optim": 504, "enable_sgpr_": 386, "enable_sgpr_dispatch_id": 386, "enable_sgpr_dispatch_ptr": 386, "enable_sgpr_flat_scratch": 386, "enable_sgpr_flat_scratch_init": 386, "enable_sgpr_grid": 386, "enable_sgpr_kernarg": 386, "enable_sgpr_kernarg_segment_ptr": 386, "enable_sgpr_priv": 386, "enable_sgpr_private_seg": 386, "enable_sgpr_private_segment_buff": 386, "enable_sgpr_private_segment_s": 386, "enable_sgpr_private_segment_wavefront_offset": 386, "enable_sgpr_queue_ptr": 386, "enable_sgpr_workgroup": 386, "enable_sgpr_workgroup_id": 386, "enable_sgpr_workgroup_id_i": 386, "enable_sgpr_workgroup_id_x": 386, "enable_sgpr_workgroup_id_z": 386, "enable_sgpr_workgroup_info": 386, "enable_trap_handl": 386, "enable_vgpr": 386, "enable_vgpr_workitem_id": 386, "enable_wavefront_size32": 386, "enable_wgp_mod": 386, "enablecompilecallback": 550, "encapsul": [386, 473, 475, 507, 512], "enclos": [393, 404, 405, 442, 449, 507, 522, 529, 535, 559, 569], "encod": [105, 189, 286, 385, 390, 392, 410, 411, 413, 415, 420, 434, 449, 454, 456, 461, 465, 479, 489, 503, 507, 512, 513, 519, 522, 524, 527, 531, 533, 537, 539, 543, 544, 545, 557, 559, 567, 569, 578], "encodecompactunwindregisterswithoutfram": 402, "encompass": [468, 475], "encount": [386, 393, 402, 405, 419, 430, 449, 454, 459, 465, 470, 479, 494, 507, 509, 539, 542, 547], "encourag": [396, 403, 404, 452, 463, 474, 505, 507, 509, 511, 545, 560, 570, 571, 579], "encrypt": 452, "end": [385, 386, 388, 389, 392, 393, 396, 397, 398, 400, 402, 403, 405, 407, 413, 414, 421, 424, 429, 431, 433, 445, 446, 450, 452, 454, 456, 458, 459, 461, 463, 464, 465, 468, 471, 472, 473, 480, 481, 482, 485, 488, 489, 491, 492, 495, 499, 505, 506, 508, 509, 513, 514, 515, 516, 520, 521, 522, 525, 528, 529, 530, 531, 534, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "end_": [576, 577, 578], "end_amd_kernel_code_t": 386, "end_amdgpu_metadata": 386, "end_amdhsa_kernel": 386, "end_cond": [576, 577, 578], "endcod": 404, "endcond": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 578], "endexpr": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 578], "endforeach": 401, "endfunct": 401, "endia": 543, "endian": [386, 393, 402, 479, 503, 513, 515, 519, 539, 543, 545], "endif": [401, 404, 445, 446, 450, 481, 525, 530, 546, 547, 548, 549, 550, 554, 555, 556, 557, 558, 559, 560, 564, 565, 566, 567, 568, 569, 570, 579], "endl": [558, 568], "endloop": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 578], "endmacro": 401, "endur": 452, "enforc": [390, 402, 404, 405, 429, 445, 452, 461, 463, 465, 479, 507, 509, 516, 517, 522, 529], "engag": 452, "engin": [386, 417, 457, 462, 480, 481, 489, 505, 509, 511, 520, 545, 551, 553, 555, 560, 563, 565, 570, 571, 572, 575, 576, 579], "enginebuild": [483, 548, 549, 550], "english": 404, "enhanc": [404, 444, 452, 513, 540, 545, 553, 554, 555, 556, 557, 559, 560, 563, 564, 565, 566, 567, 569, 570, 574, 575, 576, 577, 578, 579], "enjoy": 467, "enough": [390, 396, 400, 402, 404, 429, 433, 445, 452, 459, 462, 479, 486, 489, 507, 508, 518, 519, 522, 525, 535, 539, 540, 546, 552, 555, 559, 562, 565, 569, 573, 574, 576], "enqueu": 386, "enqueue_kernel": 386, "enrich": 512, "ensu": [388, 539], "ensur": [386, 389, 390, 393, 395, 399, 400, 402, 403, 404, 405, 415, 417, 433, 443, 445, 452, 454, 456, 457, 458, 459, 461, 463, 465, 472, 479, 491, 502, 505, 506, 507, 509, 519, 520, 522, 524, 535, 538, 539, 540, 542, 556, 557, 559, 566, 567, 569, 574, 578], "enter": [386, 393, 397, 400, 402, 409, 449, 454, 459, 463, 472, 479, 488, 491, 506, 507, 519, 520, 542, 543, 546, 552, 553, 554, 562, 563, 564, 573, 575], "entir": [389, 390, 392, 393, 402, 404, 405, 409, 413, 415, 418, 423, 433, 445, 446, 449, 452, 459, 461, 462, 465, 474, 478, 479, 481, 488, 490, 491, 492, 495, 498, 499, 500, 502, 503, 505, 507, 517, 519, 520, 524, 533, 534, 535, 536, 538, 539, 540, 544, 553, 554, 560, 563, 564, 570, 574, 575, 579], "entireti": [452, 500, 524], "entiti": [385, 393, 404, 479, 500, 507, 522], "entranc": 479, "entri": [386, 389, 393, 394, 400, 402, 405, 418, 421, 423, 424, 429, 430, 432, 434, 436, 437, 449, 454, 455, 456, 458, 459, 461, 462, 463, 465, 473, 477, 478, 480, 481, 483, 484, 485, 488, 489, 490, 491, 497, 498, 502, 507, 509, 512, 515, 519, 520, 521, 524, 525, 529, 537, 539, 540, 541, 543, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "entry_arg": 543, "entry_block": 578, "entrypoint": [479, 481], "entrysym": 491, "entrytoken": 402, "enum": [387, 389, 402, 404, 433, 444, 445, 454, 455, 465, 473, 475, 476, 479, 494, 495, 500, 502, 507, 513, 519, 527, 531, 539, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 581], "enumcas": 544, "enumer": [383, 385, 393, 402, 433, 444, 445, 461, 479, 489, 495, 500, 502, 507, 519, 520, 527, 529, 539, 543, 544], "env": 514, "environ": [390, 400, 402, 404, 405, 409, 418, 445, 453, 456, 461, 463, 466, 504, 505, 507, 517, 525, 533, 541, 542, 554, 564], "envp": 451, "eof": [405, 481, 530, 543, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "eor": 479, "ep_earlyasposs": 540, "ep_fulllinktimeoptimizationear": 513, "ep_fulllinktimeoptimizationlast": [513, 540], "epilog": 539, "epilogu": [461, 479, 519, 536, 539], "episod": [555, 565, 576], "epoch": [413, 544], "epsilon": 424, "eptr": 479, "eq": [393, 449, 479, 484, 490, 529, 530], "equal": [384, 385, 386, 389, 393, 394, 395, 402, 409, 431, 433, 434, 445, 446, 454, 457, 459, 473, 479, 489, 495, 498, 499, 502, 507, 520, 529, 539, 552, 555, 556, 557, 558, 559, 562, 565, 566, 567, 568, 569, 573, 576, 577, 578], "equal_rang": 507, "equival": [386, 390, 392, 393, 400, 401, 402, 404, 405, 407, 411, 418, 420, 429, 431, 432, 434, 435, 436, 437, 445, 446, 454, 456, 461, 462, 465, 470, 480, 484, 489, 490, 491, 493, 505, 507, 517, 519, 524, 529, 530, 547, 560, 570, 579], "eras": [390, 507, 519, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "erasefrompar": [507, 539, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "erasur": 507, "ere": 405, "ericsson": 479, "erlang": 479, "erol": 533, "err": [403, 479, 490, 491, 507, 540, 548, 549, 550, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "err2": 507, "errata": 447, "errc": 507, "errno": [389, 479, 538], "erron": [445, 463], "error": [386, 387, 389, 400, 401, 402, 405, 406, 407, 409, 410, 411, 413, 414, 415, 417, 418, 419, 422, 424, 425, 427, 429, 431, 436, 437, 442, 443, 444, 445, 446, 452, 454, 456, 460, 461, 463, 466, 470, 471, 472, 474, 479, 480, 481, 482, 490, 491, 505, 508, 510, 514, 527, 529, 530, 531, 535, 539, 540, 541, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "error_cod": [558, 568], "error_exitcod": 481, "errorasoutparamet": 507, "errorcodetoerror": 507, "errorhandl": 546, "errorinfo": 507, "errorlist": 507, "errorortoexpect": 507, "errortoerrorcod": 507, "es": [386, 430, 473, 479, 484, 488, 491, 530, 540, 546, 547, 548, 549, 550], "escap": [389, 405, 454, 461, 479, 482, 484, 486, 530, 535, 556, 566, 577], "eschnett": 510, "escudo": 517, "esi": [402, 484, 513, 520, 531], "esoter": 529, "esp": [402, 405, 531], "especi": [390, 395, 400, 403, 404, 409, 429, 434, 445, 446, 452, 453, 459, 468, 479, 480, 489, 505, 507, 508, 512, 519, 520, 525, 539, 546], "espresso": 534, "essenc": [452, 520], "essenti": [390, 393, 429, 443, 461, 470, 487, 489, 507, 509, 519, 520, 530, 539], "establish": [402, 449, 452, 454, 459, 461, 479, 509, 520, 524, 539, 575], "estim": [394, 429, 489, 512, 513, 538], "et": 473, "et_dyn": 386, "et_rel": 386, "etc": [36, 126, 221, 315, 386, 388, 389, 390, 393, 400, 402, 404, 405, 406, 429, 433, 448, 449, 452, 453, 461, 462, 463, 464, 465, 469, 471, 472, 475, 479, 480, 481, 482, 484, 488, 489, 491, 492, 495, 498, 504, 505, 506, 509, 514, 516, 517, 519, 520, 525, 527, 529, 531, 533, 536, 539, 540, 541, 542, 545, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "ethnic": 403, "eu": 386, "eurollvm": 460, "european": 512, "evalu": [398, 400, 401, 405, 450, 455, 461, 462, 477, 479, 481, 489, 490, 491, 512, 513, 520, 539, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579], "evalut": 404, "even": [385, 386, 389, 391, 393, 394, 398, 402, 403, 404, 405, 409, 411, 413, 420, 430, 431, 433, 446, 452, 453, 458, 459, 463, 465, 468, 469, 473, 479, 481, 482, 485, 486, 489, 491, 493, 499, 500, 503, 506, 507, 509, 511, 513, 520, 521, 524, 525, 527, 528, 529, 531, 534, 535, 538, 540, 544, 546, 547, 548, 550, 551, 554, 555, 556, 557, 560, 564, 565, 566, 567, 570, 572, 575, 577, 578, 579], "event": [400, 403, 429, 481, 487, 507, 516, 522, 524, 541, 542, 543], "event_s": 543, "eventu": [387, 405, 454, 465, 473, 477, 479, 481, 488, 505, 519, 520, 524, 534, 546, 555, 565, 576], "ever": [389, 404, 452, 478, 479, 498, 507, 527, 547, 548, 560, 570, 579], "evergreen": 386, "everi": [386, 389, 390, 392, 393, 394, 395, 397, 398, 401, 402, 405, 409, 418, 429, 431, 432, 434, 443, 445, 449, 450, 452, 454, 457, 459, 461, 465, 467, 468, 472, 473, 478, 479, 480, 481, 487, 488, 489, 490, 491, 493, 494, 499, 502, 505, 507, 509, 514, 517, 518, 519, 520, 522, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 540, 543, 545, 547, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 575, 576, 578, 579], "everybodi": 452, "everyon": [404, 452, 516, 560, 570, 579], "everyth": [390, 397, 398, 401, 402, 445, 446, 448, 462, 463, 464, 466, 468, 469, 471, 472, 479, 490, 509, 520, 535, 540, 545, 547, 551, 552, 553, 555, 556, 562, 563, 565, 566, 572, 573, 574, 576, 577], "everywher": [488, 489, 535, 544, 554, 564, 575], "evex": 527, "evid": [511, 520], "evidenc": 462, "evil": [392, 507, 531], "evolut": 540, "evolutionari": 481, "evolv": [396, 403, 450, 452, 482], "evt": 465, "ex": [445, 452, 472, 476, 514], "ex2": 490, "exact": [384, 386, 389, 390, 392, 393, 400, 404, 405, 409, 416, 423, 434, 445, 449, 454, 456, 461, 463, 473, 478, 479, 482, 484, 489, 492, 493, 495, 499, 500, 505, 506, 507, 513, 516, 519, 520, 524, 525, 527, 529, 534, 539, 540, 542, 544, 554, 564, 575], "exact_artifact_path": 481, "exactmatch": 479, "examin": [397, 402, 418, 433, 445, 449, 472, 479, 483, 497, 507, 519, 520, 524, 535, 539, 546, 547], "exampl": [37, 72, 127, 157, 223, 256, 317, 353, 383, 385, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 405, 406, 420, 421, 429, 431, 433, 443, 445, 446, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 465, 467, 468, 470, 471, 472, 473, 474, 475, 477, 478, 480, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 499, 500, 504, 505, 506, 508, 509, 511, 512, 513, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 531, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "exampletest": 409, "exceed": [99, 185, 282, 381, 384, 386, 404, 479, 517, 519, 520], "excel": [389, 401, 463, 487, 507, 539], "except": [382, 383, 384, 386, 389, 390, 392, 393, 398, 400, 402, 403, 405, 409, 411, 413, 414, 415, 431, 445, 446, 447, 449, 452, 456, 459, 462, 478, 484, 489, 490, 491, 492, 495, 507, 509, 519, 522, 525, 527, 529, 530, 535, 536, 539, 540, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 556, 557, 560, 563, 564, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "excerpt": 490, "excess": [410, 411, 481], "exchang": [463, 507], "exchange2_": 510, "exchange2_r": 510, "excis": 479, "excit": [472, 560, 570, 579], "exclam": 479, "exclud": [391, 402, 405, 406, 429, 430, 433, 452, 476, 479, 511, 515, 536], "exclus": [390, 402, 428, 445, 479, 524, 537], "exclusionari": 403, "excp_en": 386, "excp_en_msb": 386, "exctyp": 454, "exctype1": 454, "exctypen": 454, "excus": [396, 403], "exe": [408, 442, 464, 467, 495, 503, 535, 559, 569], "exec": [61, 65, 67, 68, 69, 70, 71, 73, 75, 76, 78, 79, 130, 141, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 164, 165, 167, 168, 228, 244, 248, 250, 251, 252, 253, 254, 255, 257, 259, 261, 262, 264, 265, 323, 332, 333, 341, 345, 347, 348, 349, 350, 351, 352, 354, 356, 358, 359, 361, 362, 384, 391, 406, 481], "exec_hi": 385, "exec_lo": 385, "exec_tim": 533, "execpt": 386, "execut": [48, 233, 328, 385, 389, 390, 394, 395, 397, 399, 401, 402, 404, 406, 407, 408, 410, 418, 424, 429, 430, 434, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 456, 458, 459, 461, 463, 464, 465, 470, 474, 479, 480, 481, 483, 491, 492, 495, 505, 508, 512, 513, 518, 519, 520, 522, 524, 525, 527, 533, 534, 536, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 573, 574, 575, 576, 578], "executable_format_error": 507, "executeprogramandwait": 525, "executeremoteexpr": 550, "executionengin": [402, 451, 463, 491, 507, 511, 546, 547, 548, 549, 550, 575, 576, 577, 578], "executionsess": [491, 546, 547, 548, 549, 550], "executionutil": [546, 547], "execv": 525, "execz": [43, 67, 68, 69, 70, 71, 73, 76, 78, 79, 130, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 164, 165, 167, 228, 250, 251, 252, 253, 254, 255, 257, 261, 262, 264, 323, 347, 348, 349, 350, 351, 352, 354, 358, 359, 361], "exedepsfix": 465, "exeext": 535, "exegesi": [408, 444], "exempt": 404, "exercis": [460, 517, 524, 535, 546, 560, 570, 579], "exhaust": [398, 402, 403, 459, 461, 463, 465, 507, 517], "exhibit": [390, 397, 479, 520], "exig": 507, "exist": [384, 390, 393, 398, 400, 401, 402, 404, 405, 407, 409, 410, 413, 416, 418, 422, 429, 430, 433, 434, 446, 449, 452, 454, 455, 456, 459, 461, 462, 464, 465, 466, 467, 474, 477, 478, 479, 481, 484, 488, 491, 495, 500, 503, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 519, 520, 521, 522, 524, 525, 528, 529, 531, 535, 536, 539, 544, 545, 546, 553, 554, 555, 556, 558, 559, 560, 563, 564, 565, 566, 568, 569, 570, 574, 576, 577, 579], "exit": [394, 402, 428, 432, 451, 454, 457, 459, 463, 479, 481, 489, 490, 491, 507, 509, 512, 519, 520, 534, 536, 540, 541, 542, 543, 549, 550, 555, 557, 558, 559, 560, 565, 567, 568, 569, 570, 576, 579], "exit5": 490, "exitcod": 409, "exitcond": [479, 536], "exitonerr": [491, 507, 550], "exitonerror": 550, "exn": [449, 479], "exp": [72, 157, 256, 353, 395, 538], "exp0": 533, "exp1": 533, "exp2": [533, 538], "exp_cnt": [99, 185, 282, 381], "expand": [387, 390, 402, 404, 415, 418, 436, 437, 444, 450, 452, 455, 457, 465, 475, 489, 509, 511, 519, 529, 531, 535, 541, 544], "expandatomicrmwinir": 390, "expandinlineasm": 539, "expandop": 455, "expans": [390, 401, 402, 418, 450, 459, 475, 479, 481, 484, 530, 539], "expansionregiontag": 450, "expcnt": [99, 185, 282, 381, 386], "expcnt_sat": [99, 185, 282, 381], "expect": [84, 366, 385, 386, 389, 390, 391, 392, 393, 394, 396, 398, 401, 402, 404, 405, 409, 416, 418, 429, 445, 449, 452, 458, 459, 461, 462, 463, 464, 465, 475, 478, 481, 488, 489, 494, 498, 502, 505, 507, 511, 513, 517, 518, 519, 520, 522, 523, 524, 525, 527, 529, 530, 533, 534, 535, 540, 543, 544, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "expected_v": 479, "expectedtoerroror": 507, "expens": [390, 398, 400, 404, 429, 445, 446, 454, 458, 465, 479, 481, 489, 505, 507, 520, 539, 540], "expensive_check": [404, 513], "experi": [400, 403, 468, 485, 488, 489, 511, 519, 521, 524, 533, 546, 547, 554, 564, 571, 575], "experienc": 397, "experiment": [386, 399, 400, 452, 455, 467, 481, 511, 513, 520, 545], "expicit": 386, "expir": 509, "explain": [0, 1, 2, 3, 384, 385, 389, 392, 400, 402, 404, 405, 413, 429, 452, 453, 457, 489, 506, 507, 511, 518, 540, 541, 543, 545, 551, 557, 567, 571, 572, 578], "explan": [398, 400, 453, 457, 473, 479, 489, 516], "explanatori": [452, 495], "explandload": 479, "explicit": [386, 388, 389, 390, 400, 402, 403, 404, 405, 424, 434, 445, 446, 449, 452, 456, 457, 458, 459, 461, 462, 463, 465, 473, 477, 478, 479, 480, 481, 483, 484, 489, 490, 491, 505, 506, 507, 512, 516, 519, 520, 529, 534, 536, 538, 540, 546, 553, 555, 556, 557, 558, 559, 560, 563, 565, 566, 567, 568, 569, 570, 574, 575, 576, 577, 578, 579], "exploit": [458, 512, 513, 520, 554, 564], "explor": [449, 506, 507, 524, 541], "expon": 385, "exponenti": [445, 479, 505], "export": [72, 81, 99, 157, 169, 185, 256, 266, 282, 353, 363, 381, 384, 389, 400, 402, 432, 433, 437, 445, 463, 466, 472, 479, 482, 491, 503, 509, 548, 549, 550, 554, 556, 564, 566], "expos": [386, 389, 390, 397, 402, 404, 409, 433, 445, 461, 463, 465, 479, 482, 491, 505, 507, 513, 520, 524, 527, 540, 557, 567, 578], "exposesreturnstwic": 484, "exposit": [479, 551, 572], "expr": [385, 405, 425, 444, 479, 511, 529, 552, 555, 556, 557, 558, 559, 562, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "expr0lh": 450, "expr0rh": 450, "expr1lh": 450, "expr1rh": 450, "expr_prec": [573, 574, 575, 576, 577, 578], "expraddr": 550, "exprast": [549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573], "express": [37, 99, 127, 185, 223, 282, 317, 381, 384, 386, 389, 402, 403, 404, 405, 409, 418, 423, 425, 431, 433, 445, 449, 455, 457, 459, 461, 462, 463, 480, 481, 484, 491, 507, 511, 515, 519, 520, 522, 527, 530, 535, 539, 540, 543, 544, 546, 550, 551, 554, 556, 557, 558, 559, 560, 561, 564, 566, 567, 568, 569, 570, 572, 575, 577, 578, 579], "exprprec": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "exprsymbol": [554, 555, 556, 557, 564, 565, 566, 567], "ext": [392, 479], "extend": [66, 83, 146, 171, 249, 268, 346, 365, 384, 385, 390, 399, 404, 405, 409, 424, 431, 445, 456, 459, 461, 463, 473, 479, 491, 503, 507, 509, 512, 520, 523, 524, 528, 529, 531, 539, 545, 546, 547, 551, 552, 554, 560, 561, 562, 564, 570, 571, 572, 573, 575, 579, 580], "extens": [386, 399, 400, 402, 404, 407, 410, 418, 426, 447, 452, 454, 455, 457, 459, 461, 465, 478, 479, 485, 489, 505, 507, 511, 513, 520, 522, 524, 525, 527, 538, 539, 545, 552, 556, 557, 562, 566, 567, 573, 577, 578, 581], "extensioan": 514, "extent": [416, 452, 461, 462, 479, 511, 545], "exterior": 524, "extern": [386, 392, 393, 399, 400, 402, 404, 411, 413, 430, 433, 442, 446, 452, 459, 466, 468, 470, 479, 481, 482, 483, 487, 489, 490, 491, 493, 504, 507, 510, 511, 514, 517, 520, 524, 530, 537, 538, 539, 540, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "extern_weak": [393, 479], "externallinkag": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574], "externally_initi": [393, 479], "externallyiniti": 479, "externalstorag": 445, "extra": [386, 393, 395, 400, 401, 404, 433, 445, 453, 454, 459, 460, 463, 470, 471, 474, 479, 481, 489, 499, 505, 507, 509, 511, 514, 516, 518, 520, 524, 527, 529, 533], "extra_sourc": 401, "extract": [402, 405, 408, 413, 428, 431, 450, 454, 464, 465, 479, 507, 519, 520, 524, 527, 529, 531, 539, 541], "extract_subreg": 484, "extract_subvector": 402, "extractel": 392, "extractloop": 505, "extrem": [389, 390, 393, 397, 402, 452, 458, 463, 476, 479, 481, 505, 507, 519, 529, 530, 539, 540, 548, 557, 567, 578, 580], "exynosm1model": 539, "f0": [479, 539], "f1": [462, 479, 489, 490, 539], "f107": 490, "f108": 490, "f110": 490, "f128": [479, 539], "f16": [34, 38, 219, 313, 318, 382, 384, 385, 386, 479], "f16x2": [0, 2, 3], "f1f2": 489, "f2": [424, 462, 479, 489, 490, 539], "f2_1": 539, "f2_2": 539, "f3": [490, 539], "f31": [479, 539], "f32": [0, 1, 2, 3, 35, 38, 125, 220, 314, 318, 382, 384, 385, 386, 402, 446, 465, 479, 490, 539], "f32x2": [0, 1], "f3_1": 539, "f3_12": 539, "f3_2": 539, "f3_3": 539, "f4": 490, "f4rc": 402, "f5": 490, "f64": [0, 1, 384, 385, 386, 402, 479, 490, 539], "f64x2": [0, 1], "f80": 479, "f88": 490, "f89": 490, "f90": 490, "f91": 490, "f92": 490, "f93": 490, "f934": 539, "f94": 490, "f95": 490, "f96": 490, "f97": 490, "f98": 490, "f99": 490, "f_none": [558, 568], "fa": [385, 402], "fab": 538, "face": [404, 459, 518, 520, 525, 527, 540], "facil": [389, 404, 409, 445, 457, 461, 464, 465, 487, 508, 509, 513, 519, 525, 546], "facilit": [399, 404, 452, 479, 507, 508, 512, 519, 544], "fact": [389, 402, 404, 413, 429, 445, 446, 449, 452, 454, 457, 459, 462, 463, 473, 478, 479, 480, 488, 491, 507, 516, 520, 523, 529, 530, 540, 548, 554, 556, 557, 560, 564, 566, 567, 570, 575, 577, 578, 579], "fact0": 489, "fact1": 489, "factor": [386, 402, 404, 479, 497, 507, 512, 529, 531, 536, 538], "factori": [404, 465, 505, 507], "fadd": [402, 455, 465, 490, 513, 539, 553, 554, 555, 557, 563, 564, 565, 567, 574, 575, 576, 578], "fail": [390, 400, 404, 405, 406, 409, 411, 445, 452, 454, 458, 463, 464, 465, 468, 474, 479, 491, 507, 509, 514, 517, 519, 520, 523, 525, 534, 535, 538, 546, 547, 548, 549, 550, 553, 563], "failmateri": 547, "failtkind": 458, "failur": [397, 405, 406, 409, 430, 448, 452, 463, 464, 465, 467, 468, 472, 474, 479, 481, 491, 492, 507, 509, 513, 514, 515, 519, 520, 534, 535, 538, 540, 544, 545, 572, 573], "failure_ord": 390, "fair": [389, 390, 457, 459, 478, 507, 517, 539, 551, 552, 555, 556, 562, 565, 566, 572, 573, 576, 577, 579], "faith": 454, "fake": 411, "falkormodel": 539, "falkorwr_1vxvy_2cyc": 539, "falkorwr_2vxvy_2cyc": 539, "fall": [394, 404, 405, 445, 461, 465, 479, 491, 505, 507, 513, 520, 524, 539, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 575, 576, 577, 578], "fallback": [393, 442, 461, 465, 479, 517, 520, 536], "fallible_iter": 507, "falliblechilditer": 507, "fallthrough": [399, 520], "fals": [385, 386, 389, 395, 397, 404, 406, 409, 411, 418, 424, 434, 442, 445, 449, 457, 463, 471, 473, 476, 479, 481, 482, 484, 489, 491, 492, 495, 505, 507, 517, 519, 523, 527, 539, 540, 541, 548, 549, 550, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 576], "false_branch_weight": 395, "falsebr": 519, "falsedest": 479, "famili": [386, 403, 479, 507, 519, 524, 560, 570, 579], "familiar": [386, 402, 433, 446, 448, 454, 459, 463, 473, 489, 490, 540, 546, 551, 555, 559, 565, 569, 572, 576], "fan": 469, "fanci": 534, "fancier": [485, 521, 540], "fancyaa": 540, "fancyobject": 520, "faq": [452, 479, 520, 545, 560, 570, 579], "far": [389, 401, 445, 455, 478, 479, 487, 494, 495, 499, 502, 507, 519, 520, 540, 542, 547, 548, 552, 553, 556, 557, 560, 562, 563, 566, 567, 570, 573, 574, 577, 578, 579], "far16": 494, "far32": 494, "farm": 409, "farpoint": 502, "farpointer32": 502, "fashion": [455, 456, 479, 520, 539], "fast": [402, 404, 410, 444, 446, 459, 465, 468, 481, 485, 489, 503, 507, 509, 517, 519, 520, 521, 527, 539, 540, 557, 567, 571, 578], "fast_filter_branch": 509, "fast_path": 479, "fastcal": 402, "fastcc": [393, 402, 449, 457, 479], "fastemit": 527, "faster": [397, 398, 404, 413, 446, 454, 460, 463, 467, 468, 479, 481, 488, 489, 507, 517, 519, 520], "fastest": 467, "fastisel": 479, "fastlink": 500, "fastmath": 490, "fat": [386, 446], "fatbin": 446, "fault": [386, 392, 406, 432, 452, 454, 520, 545], "faultingload": 458, "faultingloadstor": 458, "faultingpcoffset": 458, "faultingstor": 458, "faultkind": 458, "faultmap": [479, 545], "favor": [405, 452, 500, 520], "favorit": [480, 555, 565, 576], "favour": [528, 531], "fbb": 539, "fca": 480, "fcc_g": 539, "fcc_u": 539, "fcc_ug": 539, "fcc_val": 539, "fcf": 479, "fcmp": [553, 555, 557, 563, 565, 567, 574, 575, 576, 577, 578], "fcmpinst": 507, "fcomi": 402, "fcontext": [559, 569], "fcos": 539, "fcoverag": [418, 450], "fcuda": 446, "fcur": 489, "fde": [402, 480], "fdes": 480, "fdr": 541, "fdrpcchannel": 550, "fe": 461, "fear": 452, "feasibl": [479, 519, 520, 542], "featur": [0, 1, 2, 3, 384, 385, 398, 399, 400, 401, 409, 445, 450, 452, 456, 460, 463, 465, 472, 473, 476, 477, 479, 482, 487, 489, 492, 499, 505, 506, 507, 508, 509, 513, 514, 517, 519, 524, 525, 527, 531, 539, 540, 542, 543, 544, 545, 546, 552, 554, 555, 556, 557, 558, 560, 562, 564, 565, 566, 567, 568, 570, 573, 576, 577, 578, 579], "featurea": 544, "featureb": 544, "featurec": 544, "featurefparmv8": 531, "featurev8deprec": 539, "featurev9": 539, "featurevi": 539, "februari": 511, "fed": [402, 512], "fedora": 453, "fee": 487, "feed": [388, 389, 479, 481, 509, 519, 555, 565, 576], "feedback": [448, 452, 467, 472, 511, 515, 516, 540, 547, 548, 549, 550], "feel": [397, 403, 404, 448, 452, 459, 479, 487, 513, 516, 542, 551, 553, 560, 561, 563, 570, 572, 574, 579], "femul": 479, "fenc": [386, 390, 404, 429, 459, 488], "fermi": 402, "fetch": [384, 385, 386, 395, 402, 429, 479, 509, 517], "few": [388, 390, 393, 397, 398, 400, 401, 402, 403, 404, 413, 429, 443, 446, 452, 453, 454, 460, 461, 465, 469, 470, 472, 478, 479, 490, 505, 507, 508, 509, 519, 520, 524, 525, 535, 538, 539, 540, 542, 543, 548, 552, 553, 554, 556, 559, 560, 562, 563, 564, 566, 569, 570, 573, 574, 575, 577, 579], "fewer": [386, 452, 461, 505, 511, 519, 520, 524], "fewerelementsfor": 465, "fewerelementsif": 465, "fexist": 489, "ffast": [446, 538], "ffi": [400, 457], "ffi_include_dir": 400, "ffi_library_dir": 400, "ffmpeg": 481, "ffp": 446, "ffreestand": 513, "fi": [0, 461, 463, 509, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569], "fib": [505, 551, 555, 557, 559, 561, 565, 567, 569, 572, 576, 578], "fibi": [557, 567, 578], "fibonacci": [464, 551, 561, 572], "fiddl": [471, 485, 507, 521], "fidel": 519, "field": [386, 389, 393, 396, 401, 402, 409, 413, 429, 430, 431, 433, 448, 450, 459, 461, 462, 472, 476, 479, 488, 494, 495, 499, 500, 503, 506, 507, 513, 515, 517, 519, 520, 522, 524, 527, 529, 530, 539, 543, 544, 552, 560, 562, 570, 573, 579], "fifth": [479, 490, 539], "figur": [392, 397, 402, 404, 445, 474, 479, 488, 507, 534, 535, 539, 540], "fiji": 386, "file": [386, 387, 388, 395, 397, 398, 400, 401, 406, 408, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 434, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 451, 452, 453, 455, 456, 457, 460, 464, 466, 467, 469, 471, 472, 474, 476, 478, 479, 480, 481, 483, 485, 486, 488, 489, 490, 491, 493, 494, 497, 498, 500, 502, 506, 507, 508, 509, 511, 513, 514, 520, 521, 524, 525, 527, 528, 530, 531, 533, 534, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 575, 578, 581], "file_nam": [386, 431], "file_name_entry_format": 386, "filecheck": [406, 408, 433, 484, 519, 535], "filecheck_opt": 405, "fileinfosubstream": 495, "fileit": 445, "filemag": 499, "filenam": [400, 404, 405, 406, 407, 410, 411, 414, 415, 417, 418, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 436, 437, 439, 442, 443, 444, 445, 446, 450, 456, 507, 515, 519, 529, 531, 533, 541, 558, 559, 568, 569], "filename0": 450, "filename1": 450, "filenameindex0": 450, "filenameindex1": 450, "filenameoffset": 495, "filenotfound": 507, "filenumb": 456, "fileorerr": 507, "filepo": 445, "files": 439, "filesizepars": 445, "filesystem": [409, 453, 471, 558, 568], "filetyp": [410, 464, 519, 558, 568], "fill": [384, 385, 386, 389, 396, 404, 424, 445, 446, 453, 467, 472, 474, 479, 506, 507, 519, 520, 524, 540, 542, 543, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "filt": [418, 419], "filter": [54, 137, 237, 334, 400, 409, 418, 424, 434, 452, 476, 479, 515, 533, 535, 542], "filterclass": 476, "final": [386, 390, 393, 396, 397, 398, 399, 402, 404, 409, 413, 429, 432, 445, 450, 452, 453, 454, 456, 461, 463, 469, 471, 473, 477, 479, 482, 489, 493, 494, 495, 498, 500, 507, 508, 509, 512, 514, 515, 519, 524, 527, 528, 529, 530, 531, 535, 539, 540, 541, 543, 546, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 576, 577, 578, 579], "finalize_status": 541, "finalizememori": 483, "finalizeobject": [483, 559, 569], "financi": 509, "find": [388, 389, 396, 397, 398, 400, 402, 404, 405, 406, 409, 418, 421, 423, 433, 444, 445, 450, 452, 453, 454, 455, 462, 463, 464, 468, 470, 471, 472, 474, 478, 479, 481, 482, 485, 488, 489, 491, 500, 508, 509, 514, 516, 519, 520, 521, 522, 524, 525, 529, 530, 531, 533, 534, 539, 540, 541, 542, 544, 545, 546, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "find_a": 507, "find_packag": 400, "find_program": 400, "findanalysispass": 542, "finder": 545, "findings_dir": 481, "findlead": 507, "findstub": [549, 550], "findsymbol": [548, 549, 550, 554, 555, 556, 557, 564, 565, 566, 567], "fine": [392, 396, 404, 433, 445, 459, 462, 464, 473, 479, 491, 509, 513, 520, 525, 543, 551, 557, 567, 572, 578], "finer": [389, 465], "finish": [384, 386, 388, 397, 400, 402, 449, 451, 452, 453, 454, 479, 483, 485, 489, 506, 514, 521, 538, 540, 542, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "finishassembl": 461, "finit": [402, 479, 527], "fire": [397, 404], "firefox": 472, "firepro": 386, "first": [4, 36, 72, 102, 126, 157, 186, 221, 256, 283, 315, 353, 383, 384, 385, 386, 389, 390, 392, 393, 395, 397, 398, 400, 401, 402, 404, 405, 409, 411, 413, 418, 422, 429, 431, 432, 443, 445, 449, 450, 452, 453, 454, 456, 457, 461, 463, 464, 465, 467, 469, 472, 473, 474, 476, 477, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 497, 499, 500, 502, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 519, 520, 521, 522, 523, 524, 525, 529, 530, 531, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "first_wavefront": 386, "firstcondit": 507, "firstlett": 451, "fish": 491, "fit": [392, 402, 404, 445, 446, 452, 462, 470, 479, 499, 505, 506, 507, 517, 519, 543, 547, 555, 565, 576], "five": [390, 402, 445, 454, 481, 507], "fix": [84, 366, 382, 383, 386, 390, 394, 398, 404, 405, 409, 445, 452, 462, 472, 474, 480, 481, 485, 491, 494, 495, 500, 503, 509, 511, 513, 514, 515, 517, 518, 520, 521, 522, 524, 527, 529, 530, 531, 536, 539, 540, 541, 544, 548, 551, 552, 553, 554, 557, 560, 562, 563, 564, 567, 570, 572, 573, 574, 578, 579], "fixabl": 459, "fixedt": 519, "fixm": [424, 453, 463, 516, 534, 539], "fixup": 495, "fl": 489, "flag": [384, 385, 386, 388, 399, 400, 401, 402, 404, 405, 406, 417, 418, 424, 429, 431, 437, 442, 451, 452, 453, 456, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 476, 481, 489, 490, 493, 494, 495, 499, 500, 507, 514, 517, 519, 520, 522, 524, 533, 535, 539, 541, 542, 544, 574, 575, 576, 577, 578], "flag1": [481, 489], "flag2": [481, 489], "flagflat": 544, "flaghollow": 544, "flagpointi": 544, "flagprototyp": [559, 569], "flaground": 544, "flagscpu1": 544, "flagscpu2": 544, "flagscpumask": 544, "flagsfeaturea": 544, "flagsfeatureb": 544, "flagsfeaturec": 544, "flagsflat": 544, "flagshollow": 544, "flagspointi": 544, "flagsround": 544, "flame": 541, "flamegraph": 542, "flat": [6, 29, 30, 52, 53, 84, 85, 104, 121, 122, 188, 214, 215, 285, 308, 309, 332, 333, 366, 367, 385, 407, 494, 544], "flat32": 494, "flat_atom": 386, "flat_atomic_add": [0, 1, 2, 3], "flat_atomic_add_x2": [0, 1, 2, 3], "flat_atomic_and": [0, 1, 2, 3], "flat_atomic_and_x2": [0, 1, 2, 3], "flat_atomic_cmpswap": [0, 1, 2, 3, 386], "flat_atomic_cmpswap_x2": [0, 1, 2, 3], "flat_atomic_dec": [0, 1, 2, 3], "flat_atomic_dec_x2": [0, 1, 2, 3], "flat_atomic_fcmpswap": [0, 1], "flat_atomic_fcmpswap_x2": [0, 1], "flat_atomic_fmax": [0, 1], "flat_atomic_fmax_x2": [0, 1, 386], "flat_atomic_fmin": [0, 1], "flat_atomic_fmin_x2": [0, 1], "flat_atomic_inc": [0, 1, 2, 3], "flat_atomic_inc_x2": [0, 1, 2, 3], "flat_atomic_or": [0, 1, 2, 3], "flat_atomic_or_x2": [0, 1, 2, 3], "flat_atomic_smax": [0, 1, 2, 3], "flat_atomic_smax_x2": [0, 1, 2, 3], "flat_atomic_smin": [0, 1, 2, 3], "flat_atomic_smin_x2": [0, 1, 2, 3], "flat_atomic_sub": [0, 1, 2, 3], "flat_atomic_sub_x2": [0, 1, 2, 3], "flat_atomic_swap": [0, 1, 2, 3, 386], "flat_atomic_swap_x2": [0, 1, 2, 3], "flat_atomic_umax": [0, 1, 2, 3], "flat_atomic_umax_x2": [0, 1, 2, 3], "flat_atomic_umin": [0, 1, 2, 3], "flat_atomic_umin_x2": [0, 1, 2, 3], "flat_atomic_xor": [0, 1, 2, 3], "flat_atomic_xor_x2": [0, 1, 2, 3], "flat_load": 386, "flat_load_dword": [0, 1, 2, 3, 386], "flat_load_dwordx2": [0, 1, 2, 3], "flat_load_dwordx3": [0, 1, 2, 3], "flat_load_dwordx4": [0, 1, 2, 3, 383], "flat_load_sbyt": [0, 1, 2, 3], "flat_load_sbyte_d16": [0, 3], "flat_load_sbyte_d16_hi": [0, 3], "flat_load_short_d16": [0, 3], "flat_load_short_d16_hi": [0, 3], "flat_load_sshort": [0, 1, 2, 3], "flat_load_ubyt": [0, 1, 2, 3], "flat_load_ubyte_d16": [0, 3], "flat_load_ubyte_d16_hi": [0, 3], "flat_load_ushort": [0, 1, 2, 3], "flat_scratch": [11, 107, 130, 131, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 191, 228, 229, 239, 240, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 288, 290, 301, 302, 323, 324, 325, 332, 333, 336, 337, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 386], "flat_scratch_hi": [36, 385, 386], "flat_scratch_lo": [36, 385, 386], "flat_stor": 386, "flat_store_byt": [0, 1, 2, 3], "flat_store_byte_d16_hi": [0, 3], "flat_store_dword": [0, 1, 2, 3, 386], "flat_store_dwordx2": [0, 1, 2, 3], "flat_store_dwordx3": [0, 1, 2, 3, 386], "flat_store_dwordx4": [0, 1, 2, 3], "flat_store_short": [0, 1, 2, 3], "flat_store_short_d16_hi": [0, 3], "flat_stot": 386, "flatten": [402, 479, 538], "flavor": [469, 479, 507, 519, 529], "flaw": [465, 511, 520], "fldcw": 402, "fldcww": 402, "fleet": 453, "flexibl": [386, 402, 408, 409, 445, 461, 473, 478, 479, 488, 507, 529, 531, 535, 540, 556, 566, 577], "fli": [402, 497, 513, 546, 552, 554, 562, 564, 573, 575], "flight": [429, 454, 479], "flip": [404, 479], "float": [34, 35, 39, 41, 125, 128, 219, 220, 224, 226, 313, 314, 319, 321, 383, 384, 393, 394, 402, 410, 429, 445, 446, 455, 459, 462, 465, 468, 471, 489, 490, 507, 513, 519, 531, 538, 539, 544, 545, 551, 552, 553, 554, 555, 561, 562, 563, 564, 565, 572, 573, 574, 575, 576, 577, 578], "float128": 502, "float16": 502, "float32": 502, "float32partialprecis": 502, "float48": 502, "float64": 502, "float80": 502, "float_denorm_mode_16_64": 386, "float_denorm_mode_32": 386, "float_denorm_mode_flush_dst": 386, "float_denorm_mode_flush_non": 386, "float_denorm_mode_flush_src": 386, "float_denorm_mode_flush_src_dst": 386, "float_mod": 386, "float_of_str": [572, 573, 574, 575, 576, 577, 578], "float_round_mode_16_64": 386, "float_round_mode_32": 386, "float_round_mode_minus_infin": 386, "float_round_mode_near_even": 386, "float_round_mode_plus_infin": 386, "float_round_mode_zero": 386, "floatscalarti": 479, "floattyp": 507, "floor": 538, "floorf": 538, "flow": [389, 397, 402, 404, 421, 446, 449, 452, 454, 458, 459, 465, 479, 480, 482, 483, 485, 488, 490, 505, 507, 512, 513, 519, 520, 521, 524, 537, 538, 539, 540, 545, 551, 552, 553, 554, 556, 557, 559, 560, 562, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580], "floyd": 510, "flto": [400, 466, 482, 492], "flush": [386, 404, 429, 446, 468, 479, 483, 490, 541, 543, 558, 568, 573, 574, 575, 576, 577, 578], "flush_status": 541, "flwend": 510, "fma": [402, 446, 490, 538], "fma3d": 510, "fmadd": 402, "fmag": 413, "fmod": 479, "fmt_align": 507, "fmt_pad": 507, "fmt_repeat": 507, "fmul": [402, 490, 553, 554, 563, 564, 574, 575], "fmuladd": 538, "fn": [451, 479], "fnaddr": 449, "fnast": [549, 550, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "fnentri": 393, "fnf": 507, "fnir": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "fnloc": [559, 569], "fnname": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "fno": [388, 513, 538], "fnptrval": 479, "fnstart": 402, "fnti": 479, "fntree": 489, "focus": [402, 403, 421, 461, 465, 482, 485, 491, 507, 513, 520, 521, 524, 535, 538, 539, 546, 547, 571], "fold": [389, 390, 455, 458, 459, 465, 479, 505, 507, 519, 520, 522, 529, 540, 545, 553, 563], "foldabl": 465, "folder": [400, 453, 479, 554, 564], "foldingsetnod": 507, "foldingsetnodeid": 507, "foldl": [529, 530], "foldmemoryoperand": [402, 539], "folk": [481, 506], "follow": [31, 36, 42, 99, 126, 129, 185, 216, 221, 227, 282, 310, 315, 322, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 396, 397, 398, 400, 401, 402, 404, 405, 406, 408, 409, 413, 414, 415, 418, 420, 424, 426, 428, 429, 430, 431, 432, 433, 434, 437, 442, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474, 476, 478, 479, 481, 482, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 527, 529, 530, 531, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 548, 551, 552, 555, 556, 557, 559, 561, 562, 565, 566, 567, 569, 572, 573, 576, 577, 578], "followup": 536, "followup_al": 536, "followup_coincid": 536, "followup_epilogu": 536, "followup_fallback": 536, "followup_inn": 536, "followup_out": 536, "followup_remaind": 536, "followup_remainder_inn": 536, "followup_remainder_out": 536, "followup_sequenti": 536, "followup_unrol": 536, "followup_vector": 536, "fom": 505, "fomit": 402, "foo": [389, 392, 394, 395, 400, 401, 402, 404, 405, 419, 429, 434, 442, 445, 446, 449, 450, 454, 456, 457, 461, 462, 473, 474, 477, 479, 481, 484, 488, 490, 491, 494, 507, 515, 519, 524, 527, 529, 530, 535, 537, 538, 544, 552, 553, 554, 555, 562, 563, 564, 565, 573, 574, 575, 576], "foo1": [466, 482], "foo2": [466, 482], "foo3": [466, 482], "foo4": [466, 482], "foo_ctor": 477, "foo_dtor": 477, "foo_in_a_cc": 395, "foo_test": 535, "foo_var": 401, "foobar": [404, 484, 544], "foobaz": 404, "food": 511, "foof": 446, "foolproof": 540, "footnot": 465, "footprint": 465, "for": [9, 10, 14, 15, 16, 17, 18, 21, 22, 23, 37, 52, 99, 107, 108, 111, 112, 113, 114, 115, 127, 185, 191, 192, 195, 196, 197, 198, 200, 201, 202, 203, 205, 209, 211, 212, 216, 218, 222, 223, 282, 288, 289, 293, 294, 295, 296, 297, 300, 301, 302, 316, 317, 332, 381, 382, 383, 384, 385, 387, 388, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 455, 456, 458, 461, 464, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 506, 511, 512, 514, 515, 516, 517, 518, 520, 521, 522, 523, 525, 527, 528, 529, 530, 531, 533, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 561, 562, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 580], "forbidden": [525, 540], "forc": [383, 384, 386, 388, 400, 401, 404, 411, 429, 433, 445, 446, 450, 454, 456, 462, 463, 468, 471, 477, 479, 502, 507, 519, 520, 522, 524, 536, 538, 540, 544], "force_off": 400, "force_on": 400, "forcibl": 479, "fore": 536, "foreach": [401, 529, 531], "foreachdeclar": 530, "foreign": [400, 457], "forens": 408, "forese": 452, "forev": 487, "forexpr": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "forexprast": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "forget": [403, 404, 461, 473, 506, 507, 559, 569], "forgiv": 489, "forgotten": [558, 568], "fork": [509, 511, 512, 520, 525], "form": [384, 386, 388, 389, 393, 399, 400, 401, 404, 405, 406, 413, 416, 419, 420, 423, 432, 434, 445, 452, 454, 456, 459, 460, 461, 462, 463, 465, 469, 472, 473, 474, 476, 479, 480, 481, 482, 483, 487, 488, 489, 490, 495, 502, 506, 507, 511, 512, 513, 516, 519, 520, 522, 524, 527, 529, 530, 531, 533, 534, 535, 539, 540, 541, 543, 544, 545, 547, 551, 552, 553, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 578, 579], "formal": [404, 446, 479, 489, 507, 516, 529, 531], "format": [17, 18, 51, 105, 114, 115, 136, 189, 202, 203, 209, 210, 211, 212, 236, 286, 296, 297, 331, 383, 384, 385, 386, 392, 399, 405, 407, 410, 411, 415, 416, 418, 419, 421, 423, 424, 429, 430, 432, 433, 434, 436, 443, 447, 448, 451, 452, 455, 456, 457, 458, 461, 463, 464, 465, 476, 479, 481, 483, 485, 487, 490, 491, 493, 494, 495, 498, 500, 502, 505, 506, 509, 511, 512, 515, 521, 527, 529, 531, 534, 539, 541, 542, 544, 545, 559, 569], "format_int_custom": 507, "format_provid": 507, "formatadapt": 507, "formatstr": 386, "formatt": 479, "formattedfil": 507, "formbit": 531, "former": [390, 402, 459, 484, 507, 519, 524, 537, 552, 562, 573], "formmask": 539, "formul": 525, "forth": [390, 392, 479], "fortran": 510, "fortun": [404, 507, 554, 555, 557, 558, 560, 564, 565, 567, 568, 570, 575, 576, 578, 579], "forum": [403, 479, 545], "forward": [386, 389, 390, 393, 402, 404, 429, 446, 454, 455, 461, 475, 479, 503, 505, 507, 509, 519, 524, 525, 529, 530, 541, 551, 552, 555, 562, 565, 572, 573, 574], "fosdem17": 465, "foster": [452, 509, 525], "fotonik3d_": 510, "fotonik3d_r": 510, "found": [0, 1, 2, 3, 383, 385, 386, 389, 391, 397, 400, 402, 405, 406, 407, 409, 413, 415, 423, 424, 427, 432, 442, 445, 446, 452, 453, 454, 460, 461, 463, 464, 470, 471, 472, 474, 476, 479, 481, 482, 485, 487, 488, 489, 490, 491, 492, 495, 503, 505, 507, 508, 510, 514, 517, 519, 520, 524, 525, 533, 535, 538, 539, 540, 541, 544, 545, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 577, 578], "foundat": [386, 403, 452, 509, 516, 540], "foundfoo": 404, "four": [7, 105, 189, 286, 384, 389, 390, 392, 393, 398, 402, 404, 409, 429, 445, 462, 465, 469, 479, 490, 491, 539, 553, 554, 563, 564, 574], "fourinarow": 534, "fourth": [449, 462, 479, 519, 522, 539, 540, 576], "foz": 442, "fp": [386, 402, 410, 411, 445, 457, 479, 484, 518, 519, 531, 539, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569], "fp0": [529, 531], "fp1": [529, 531], "fp128": [393, 479, 489], "fp16": 386, "fp16_ovfl": 386, "fp2": [529, 531], "fp3": [529, 531], "fp4": [529, 531], "fp5": [529, 531], "fp6": [529, 531], "fp_to_sint": 539, "fpexcept": 479, "fpform": 531, "fpformat": [529, 531], "fpformbit": 531, "fpgas": 402, "fpic": [400, 517], "fpimmleaf": 465, "fpinst": 531, "fpm": [433, 499, 547, 548, 549, 550], "fpm1": 499, "fpm2": 499, "fpmad": 519, "fpms": 499, "fpo": [495, 503], "fpo_data": 495, "fppassmanag": 542, "fpreg": 539, "fpregsclass": 539, "fpregsregclass": 539, "fpregsregisterclass": 539, "fprintf": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "fprofil": [400, 418, 450], "fptr": [559, 569], "fpu": [471, 479], "fputc": [554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569], "fr": 489, "fra": 402, "fraction": [385, 394, 473, 476, 479, 481], "fragil": [405, 465, 509], "fragment": [402, 416, 420, 460, 461, 479, 507, 519, 524, 529, 530, 534], "fragment1": 420, "fragment2": 420, "fragmentkind": 420, "frame": [386, 410, 412, 423, 432, 442, 459, 461, 477, 479, 480, 483, 484, 495, 505, 507, 518, 519, 520, 522, 524, 539, 543], "frameindex": 539, "frameinfo": [484, 539], "frameless": 402, "framemap": 461, "frameptr": 449, "frames": 461, "framework": [389, 399, 402, 455, 461, 465, 479, 505, 507, 513, 519, 534, 540, 545, 551, 553, 556, 557, 563, 566, 567, 572, 574, 577, 578], "francesco": 505, "frb": 402, "frc": 402, "free": [385, 386, 389, 390, 402, 403, 404, 429, 433, 447, 448, 452, 459, 461, 465, 472, 479, 480, 481, 487, 491, 506, 507, 509, 513, 516, 517, 520, 524, 527, 535, 540, 542, 543, 548, 551, 553, 554, 555, 556, 557, 560, 561, 563, 564, 565, 566, 567, 570, 572, 574, 575, 579], "freea": 477, "freebench": 534, "freeblockmapblock": 499, "freebsd": [391, 402, 431, 463, 513, 541], "freebsd5": 402, "freed": [386, 389, 449, 491, 507, 518], "freedom": [479, 507], "freeli": [390, 452, 479], "freestand": [479, 513], "freetyp": 481, "freez": [472, 509], "frequenc": [391, 395, 479, 542, 543, 545], "frequent": [383, 404, 445, 452, 461, 462, 463, 464, 479, 505, 507, 509, 524, 525, 528, 545, 547, 548, 549, 550, 559, 569], "fresh": [463, 479, 509], "frexp": 479, "friend": [403, 404, 423, 452, 457, 479, 486, 507, 509, 528, 541, 545, 546, 552, 562, 573], "frighten": 481, "from": [5, 7, 19, 20, 24, 25, 26, 27, 28, 32, 33, 72, 82, 103, 105, 116, 117, 118, 119, 120, 124, 157, 170, 187, 189, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 256, 267, 284, 286, 298, 299, 303, 304, 305, 306, 307, 311, 312, 353, 364, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 436, 437, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 469, 470, 472, 473, 474, 476, 477, 478, 480, 481, 482, 483, 484, 487, 488, 489, 490, 492, 493, 495, 498, 500, 502, 503, 504, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "front": [402, 404, 431, 452, 454, 457, 461, 463, 464, 479, 492, 505, 507, 508, 515, 545, 547, 548, 551, 554, 555, 556, 557, 559, 560, 564, 565, 566, 567, 569, 570, 571, 572, 575, 576, 577, 578, 579], "frontend": [390, 421, 429, 449, 450, 454, 456, 457, 458, 461, 463, 477, 478, 479, 510, 513, 517, 519, 524, 535, 536, 545, 558, 568], "frontier": [386, 557, 567, 578], "frown": 452, "frozen": 451, "frt": 402, "frustrat": 403, "fs": [402, 463, 518, 524, 539, 558, 568], "fsanit": [399, 481, 517], "fsave": 538, "fsin": [410, 539], "fstream": 490, "fstrict": 479, "fsub": [513, 557, 567, 578], "ft": [481, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "ftest": 418, "fthinlto": 479, "ftl": [479, 522], "ftoi": 539, "ftp": 463, "ftz": 490, "fucomip": 402, "fucompi": 402, "fudg": 471, "fulfil": [470, 473, 525], "full": [384, 386, 389, 390, 398, 400, 401, 402, 404, 405, 417, 429, 430, 432, 433, 442, 444, 446, 451, 452, 457, 463, 469, 471, 472, 473, 477, 478, 481, 484, 485, 489, 490, 493, 495, 505, 506, 507, 508, 509, 511, 513, 519, 520, 521, 524, 527, 535, 536, 537, 542, 544, 551, 560, 561, 570, 572, 579], "full_corpus_dir": 481, "fulldebug": [479, 519], "fuller": 543, "fullest": 404, "fulli": [388, 393, 394, 399, 400, 401, 402, 411, 429, 446, 460, 462, 463, 464, 465, 479, 491, 493, 505, 512, 519, 520, 524, 529, 531, 536, 538, 546, 547, 552, 556, 557, 560, 562, 566, 567, 570, 573, 577, 578, 579], "fun": [456, 541, 542, 551, 560, 570, 571, 572, 574, 575, 576, 577, 578, 579], "func": [425, 433, 450, 479, 484, 507, 540, 542, 573, 574, 575, 576, 577, 578], "func1": 386, "func_typ": 524, "funcflag": 479, "funcid": 542, "funclet": 449, "funcresolv": 507, "function": [386, 387, 389, 390, 392, 393, 394, 397, 398, 399, 400, 405, 408, 410, 412, 413, 415, 418, 419, 421, 423, 429, 431, 432, 433, 434, 442, 443, 446, 447, 451, 452, 453, 454, 456, 459, 460, 461, 462, 463, 465, 466, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 486, 488, 491, 492, 493, 494, 495, 497, 498, 500, 504, 511, 512, 513, 515, 517, 518, 520, 522, 523, 524, 527, 529, 533, 537, 539, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 561, 562, 564, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580], "function1": 386, "function_entry_arg": 543, "function_entry_count": 395, "function_id": 543, "function_old": 393, "function_other_typ": 543, "function_typ": [574, 575, 576, 577, 578], "functionaddress": 458, "functionast": [549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "functioncalle": 507, "functionend": 456, "functionfaultinfo": 458, "functionid": 456, "functionindex": 475, "functioninfo": 458, "functionlisttyp": 507, "functionnam": [461, 479], "functionnod": 489, "functionpass": [389, 492, 505, 507, 539], "functionpassctor": 540, "functionpassmanag": [547, 548, 549, 550, 554, 555, 556, 557, 564, 565, 566, 567], "functionproto": [554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569], "functionptr": 507, "functionstart": 456, "functiontyp": [507, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "functor": 404, "fundament": [401, 402, 404, 445, 454, 459, 462, 475, 489, 507, 520, 524, 539, 540], "funnel": 479, "funni": [557, 567, 578], "furi": 386, "further": [390, 393, 396, 398, 400, 404, 405, 409, 424, 444, 449, 452, 454, 459, 461, 462, 464, 465, 470, 472, 479, 481, 488, 489, 492, 495, 497, 499, 507, 511, 519, 520, 533, 536, 539, 543, 546, 548, 554, 564], "furthermor": [396, 405, 462, 465, 479, 505, 524], "furyx": 386, "fuse": [400, 411, 446, 466, 470, 479, 505], "fusion": 479, "futur": [386, 393, 399, 400, 404, 451, 452, 460, 461, 462, 463, 475, 477, 479, 481, 484, 507, 509, 514, 519, 520, 522, 523, 524, 536, 538, 543, 551, 553, 554, 555, 563, 564, 565, 572, 574, 576, 578], "fuzz": [479, 545], "fuzz_target": 481, "fuzzer": 545, "fuzzerc": 460, "fuzzi": 420, "fuzzing_build_mode_unsafe_for_product": 481, "fuzzinglibc": 481, "fuzzmut": 460, "fval": 519, "fwd_progress": 386, "fwdargreg": 484, "fx": [0, 3, 382, 386], "fxray": [541, 542], "g0": 539, "g1": [479, 519, 539], "g2": [479, 519, 539], "g3": 539, "g4": 539, "g5": 539, "g6": 539, "g7": 539, "g_": 511, "g_add": 465, "g_and": 465, "g_anyext": 465, "g_constant": 465, "g_extract": 465, "g_fconstant": 465, "g_foo": 465, "g_icmp": 484, "g_load": 465, "g_merge_valu": 465, "g_mul": 465, "g_or": 465, "g_shl": 465, "g_store": 465, "g_sub": 465, "g_trunc": 465, "g_unmerge_valu": 465, "g_xor": 465, "ga": 489, "gabi": 447, "gadget": 520, "gain": [396, 445, 452, 479, 516], "galina": 467, "game": 452, "gap": [404, 429, 450, 465, 479], "gapend": 456, "gapstart": 456, "garbag": [393, 457, 480, 502, 522, 545, 551, 571, 572], "gas": [456, 539], "gather": [386, 445, 452, 454, 469, 478, 489, 507, 508, 511, 512, 527, 535, 543], "gather4": 384, "gazonk": 519, "gb": 463, "gc": [393, 480, 489, 509, 545], "gc_transit": 524, "gc_transition_end": 524, "gc_transition_start": 524, "gcc": [390, 401, 402, 404, 406, 418, 434, 445, 446, 447, 452, 453, 454, 463, 466, 470, 471, 474, 479, 488, 505, 507, 513, 519, 533, 534, 538, 539, 541, 545], "gcc_version": 463, "gcda": 418, "gcfunctioninfo": 461, "gcfunctionmetadata": [461, 522], "gcmetadaprint": 461, "gcmetadata": 461, "gcmetadataprinterregistri": 461, "gcmetataprint": 524, "gcn": 386, "gcn3": 386, "gcname": 393, "gcno": 418, "gcodeview": 519, "gcolumn": 538, "gcov": 434, "gcov_prefix": 418, "gcov_prefix_strip": 418, "gcregistri": 461, "gcroot": [461, 522, 524], "gcse": [505, 507], "gcstrategi": [461, 524], "gdb": [402, 423, 466, 507, 519, 539, 545, 579], "gdbinit": 507, "gds": [0, 1, 2, 3, 5, 99, 103, 185, 187, 282, 284, 381, 386], "ge": [529, 530], "ge_missing_jmp_buf": 404, "ge_missing_sigjmp_buf": 404, "gear": [398, 400], "geforc": 490, "gemb": 386, "gen": [444, 465, 513, 539, 547, 559, 569], "gender": 403, "gendfapacket": 402, "general": [386, 388, 389, 390, 392, 393, 397, 401, 403, 404, 408, 413, 426, 429, 433, 434, 445, 446, 448, 451, 452, 454, 455, 459, 461, 463, 464, 465, 467, 469, 470, 472, 473, 477, 478, 480, 485, 486, 489, 490, 492, 493, 495, 499, 500, 502, 505, 509, 511, 512, 516, 517, 519, 520, 521, 524, 525, 529, 530, 531, 534, 535, 536, 537, 539, 540, 545, 547, 552, 556, 557, 558, 559, 560, 562, 566, 567, 568, 569, 570, 573, 577, 578, 579], "generalcategori": 445, "generalis": [556, 566, 577], "generat": [385, 386, 388, 390, 392, 393, 395, 398, 399, 400, 401, 404, 405, 406, 408, 409, 410, 413, 415, 418, 424, 429, 433, 434, 435, 443, 445, 446, 449, 450, 451, 452, 455, 456, 458, 459, 462, 463, 464, 465, 469, 470, 472, 477, 478, 480, 481, 482, 486, 488, 489, 490, 491, 492, 493, 494, 495, 500, 502, 503, 506, 507, 508, 509, 510, 512, 513, 514, 515, 518, 519, 520, 522, 524, 527, 530, 531, 533, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 551, 552, 554, 556, 557, 558, 559, 560, 562, 564, 566, 567, 568, 569, 570, 571, 572, 573, 575, 577, 578, 579, 580], "generic": [0, 1, 2, 3, 386, 390, 392, 393, 400, 402, 411, 445, 446, 452, 454, 463, 479, 480, 484, 490, 507, 513, 519, 524, 525, 527, 528, 530, 531, 539, 541, 558, 560, 568, 570, 579], "genericvalu": [575, 576, 577, 578], "genregisternam": 402, "gensubtargetinfo": 539, "genuin": 507, "geomean": 538, "geometr": [560, 570, 579], "geordi": 545, "gep": [457, 480, 489, 505, 519, 524, 545], "gep_index": 479, "get": [14, 15, 16, 17, 18, 21, 22, 23, 44, 45, 111, 112, 113, 114, 115, 131, 195, 196, 197, 202, 203, 229, 230, 293, 294, 295, 296, 297, 300, 301, 302, 324, 325, 384, 386, 387, 388, 389, 390, 392, 396, 397, 400, 401, 402, 403, 404, 405, 408, 429, 445, 446, 448, 449, 450, 451, 452, 453, 455, 457, 459, 461, 462, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 480, 482, 483, 485, 487, 488, 489, 490, 491, 500, 502, 505, 506, 507, 509, 513, 514, 516, 519, 520, 521, 524, 525, 527, 529, 530, 531, 534, 535, 536, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "get_instrinfo_named_op": 539, "get_instrinfo_operand_enum": 539, "get_instrinfo_operand_types_enum": 539, "get_matcher_implement": 527, "get_ptr": 458, "get_reginfo_target_desc": 527, "get_register_match": 527, "get_subtarget_feature_nam": 527, "getactiondefinitionsbuild": 465, "getaddress": [491, 546, 549, 550, 554, 555, 556, 557, 564, 565, 566, 567], "getaddressingmod": 539, "getadjustedanalysispoint": 389, "getanalysisusag": 389, "getargumentlist": 507, "getattribut": 489, "getattributespellinglistindex": 527, "getbasicblock": 402, "getbasicblocklist": [507, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "getbinarycodeforinstr": 539, "getbinarypreced": [556, 557, 558, 559, 566, 567, 568, 569], "getbit": 445, "getbitwidth": 507, "getbuff": 544, "getcalledfunct": 507, "getcalleesavedreg": 539, "getchar": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "getcol": [559, 569], "getcompilecallback": [549, 550], "getcontext": [491, 546, 547], "getdata": 404, "getdatalayout": [491, 539, 546, 547, 559, 569], "getdatasect": 461, "getdebugloc": 519, "getdefaultdatalayoutfortarget": [546, 547], "getdefaulttargettripl": [558, 568], "getdirectori": [519, 559, 569], "getdoubleti": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "getehframesect": 483, "getelementptr": [389, 402, 405, 415, 449, 450, 461, 462, 477, 480, 489, 490, 507, 519, 524, 537, 560, 570, 579], "getelementptrinst": 507, "getelementtyp": 507, "getentryblock": [507, 557, 558, 559, 567, 568, 569], "getenv": 525, "getexceptionpointerregist": 454, "getexceptionselectorregist": 454, "getexecutionsess": 547, "getfil": 491, "getfilenam": [519, 559, 569], "getfoo": 479, "getforcurrentprocess": [491, 546, 547], "getfourdatapoint": 520, "getframeinfo": [402, 539], "getframeinstruct": 484, "getframes": 461, "getfunct": [461, 492, 507, 540, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "getfunctionlist": 507, "getfunctiontyp": 507, "getglob": 539, "getgloballist": 507, "getglobalprefix": [491, 546, 547], "getimm": 539, "getindex": 539, "getiniti": 507, "getinsertblock": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "getinstlist": 507, "getinstralternativemap": 465, "getinstrinfo": [402, 539], "getinstrmap": 465, "getint32ti": 404, "getjitinfo": [402, 539], "getjmp_buftyp": 404, "getkey": 507, "getkind": [473, 527], "getlazyresolverfunct": 539, "getlin": [519, 559, 569], "getllvmcontext": 404, "getlock": 491, "getloopanalysisusag": 540, "getloopid": 536, "getloopinfo": 540, "getmainjitdylib": [491, 546, 547], "getmbb": 539, "getmemb": 507, "getmodul": 547, "getmodulematchqu": 539, "getmyobject": 520, "getnam": [457, 507, 540, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "getnamedoperandidx": 539, "getnamewithprefix": [548, 549, 550], "getnexttoken": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "getnod": [455, 539], "getnullvalu": [507, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "getnumel": 507, "getnumoperand": 507, "getnumparam": 507, "getnumsuccessor": 404, "getnumvirtreg": 402, "getobjfilelow": 461, "getoffset": 539, "getopcod": [507, 539], "getoperand": [402, 404, 507, 539], "getoperationnam": 455, "getoperatornam": [556, 557, 558, 559, 566, 567, 568, 569], "getopt": 445, "getorcreatefoo": 507, "getorcreatetypearray": [559, 569], "getorinsertfunct": 507, "getpar": [507, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "getparamtyp": 507, "getpoint": 479, "getpointers": 461, "getpointertofunct": [483, 507, 559, 569], "getpointertonamedfunct": 483, "getpredopcod": 476, "getprocaddress": [554, 564], "getprocesstripl": [559, 569], "getproto": [549, 550], "getrawpoint": 475, "getrawsubclassoptionaldata": 489, "getreg": [402, 539], "getregclass": 402, "getreginfo": 402, "getregisterinfo": [402, 539], "getreservedreg": 539, "getreturntyp": 507, "getschedclass": 539, "getsextvalu": 507, "getsigjmp_buftyp": 404, "getsourc": 463, "getsrc": 463, "getstrictfpoperationact": 387, "getsubtarget": 539, "getsubtargetimpl": [539, 542], "getsymboladdress": [459, 550], "getsymboladdressinprocess": [548, 549, 550], "getsymbolnam": 539, "getsymbolt": 507, "gettargetlow": 539, "gettargetmachin": [548, 549, 550, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569], "gettargettripl": [548, 549, 550], "getter": [454, 479, 507, 519, 527], "gettermin": 507, "getthesparctarget": 539, "gettingstart": 470, "gettok": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "gettoknam": [559, 569], "gettokpreced": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "gettyp": [404, 507], "gettypenam": 507, "getunqu": 507, "getvalu": [404, 507], "getvalueid": 489, "getvaluetyp": 539, "getvaluevt": 465, "getx86regnum": 539, "getzextvalu": 507, "gfx": 386, "gfx10": [383, 384, 385, 513], "gfx1010": 386, "gfx1011": 386, "gfx1012": 386, "gfx600": 386, "gfx601": 386, "gfx7": [383, 384, 385, 386], "gfx700": 386, "gfx701": 386, "gfx702": 386, "gfx703": 386, "gfx704": 386, "gfx8": [198, 200, 201, 205, 209, 211, 212, 216, 218, 383, 384, 385, 386], "gfx801": 386, "gfx802": 386, "gfx803": 386, "gfx810": 386, "gfx9": [383, 384, 385, 386], "gfx900": 386, "gfx902": 386, "gfx904": 386, "gfx906": 386, "gfx908": 386, "gfx909": 386, "ghash": 437, "ghc": [402, 479], "ghost": 507, "giant": 509, "gicomplexoperandmatch": 465, "gicomplexpatternequiv": 465, "gid": [413, 431], "gif": 481, "gigabyt": 520, "gil": 512, "ginodeequiv": 465, "gird": 386, "gisel": 460, "gist": 463, "git": [400, 448, 452, 466, 506, 533, 534, 545], "gitattribut": 463, "github": [386, 391, 452, 463, 503, 506, 507, 510, 511, 513, 517, 520, 533, 534, 541, 542, 545, 580], "gitlab": [509, 510], "give": [388, 389, 393, 397, 402, 429, 445, 446, 450, 452, 459, 463, 467, 469, 471, 479, 485, 486, 488, 489, 490, 491, 495, 505, 507, 511, 513, 515, 519, 520, 521, 524, 527, 529, 530, 536, 539, 540, 541, 542, 544, 545, 547, 548, 551, 553, 554, 556, 558, 559, 560, 561, 563, 564, 566, 568, 569, 570, 571, 572, 574, 577, 579], "given": [386, 389, 390, 393, 394, 396, 400, 401, 402, 404, 409, 413, 415, 416, 418, 421, 424, 429, 433, 434, 442, 443, 445, 446, 449, 454, 455, 456, 457, 459, 461, 463, 464, 465, 472, 473, 478, 479, 483, 488, 491, 493, 499, 502, 505, 507, 509, 511, 512, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 533, 537, 539, 540, 542, 544, 546, 547, 548, 549, 550, 552, 553, 554, 556, 562, 563, 564, 566, 573, 574, 577], "glad": [463, 464], "glanc": [404, 560, 570, 579], "glasgow": 479, "glc": [0, 1, 2, 3, 14, 15, 16, 17, 18, 21, 22, 23, 29, 30, 46, 49, 111, 112, 113, 114, 115, 121, 122, 132, 134, 195, 196, 197, 202, 203, 214, 215, 231, 234, 293, 294, 295, 296, 297, 300, 301, 302, 308, 309, 326, 329, 382, 386], "glibc": 481, "glibcxx_3": 463, "gline": 538, "glob": 425, "global": [52, 84, 332, 366, 384, 385, 389, 390, 393, 398, 402, 404, 405, 409, 413, 415, 421, 425, 429, 430, 431, 433, 437, 445, 446, 449, 450, 451, 454, 457, 459, 460, 461, 462, 463, 480, 481, 482, 490, 492, 495, 498, 500, 503, 507, 508, 511, 513, 517, 520, 523, 524, 527, 530, 537, 539, 540, 545, 546, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 578, 579], "global_atom": 386, "global_atomic_add": [0, 3], "global_atomic_add_x2": [0, 3], "global_atomic_and": [0, 3], "global_atomic_and_x2": [0, 3], "global_atomic_cmpswap": [0, 3], "global_atomic_cmpswap_x2": [0, 3], "global_atomic_dec": [0, 3], "global_atomic_dec_x2": [0, 3], "global_atomic_fmax": 0, "global_atomic_fmax_x2": 0, "global_atomic_fmin": 0, "global_atomic_fmin_x2": 0, "global_atomic_inc": [0, 3], "global_atomic_inc_x2": [0, 3], "global_atomic_or": [0, 3], "global_atomic_or_x2": [0, 3], "global_atomic_smax": [0, 3], "global_atomic_smax_x2": [0, 3], "global_atomic_smin": [0, 3], "global_atomic_smin_x2": [0, 3], "global_atomic_sub": [0, 3], "global_atomic_sub_x2": [0, 3], "global_atomic_swap": [0, 3], "global_atomic_swap_x2": [0, 3], "global_atomic_umax": [0, 3], "global_atomic_umax_x2": [0, 3], "global_atomic_umin": [0, 3], "global_atomic_umin_x2": [0, 3], "global_atomic_xor": [0, 3], "global_atomic_xor_x2": [0, 3], "global_begin": [404, 507], "global_buff": 386, "global_context": [574, 575, 576, 577, 578], "global_ctor": 513, "global_dtor": 513, "global_empti": 507, "global_end": 507, "global_iter": 507, "global_load": 386, "global_load_dword": [0, 3], "global_load_dwordx2": [0, 3], "global_load_dwordx3": [0, 3], "global_load_dwordx4": [0, 3], "global_load_sbyt": [0, 3], "global_load_sbyte_d16": [0, 3], "global_load_sbyte_d16_hi": [0, 3], "global_load_short_d16": [0, 3], "global_load_short_d16_hi": [0, 3], "global_load_sshort": [0, 3], "global_load_ubyt": [0, 3], "global_load_ubyte_d16": [0, 3], "global_load_ubyte_d16_hi": [0, 3], "global_load_ushort": [0, 3], "global_s": 507, "global_stor": 386, "global_store_byt": [0, 3], "global_store_byte_d16_hi": [0, 3], "global_store_dword": [0, 3], "global_store_dwordx2": [0, 3], "global_store_dwordx3": [0, 3], "global_store_dwordx4": [0, 3], "global_store_short": [0, 3], "global_store_short_d16_hi": [0, 3], "globalalia": 540, "globalbuff": 386, "globaldc": 507, "globalisel": [513, 545], "globallayoutbuild": 537, "globallisttyp": 507, "globalref": 498, "globalrefss": 498, "globalsaa": 488, "globalstreamindex": 495, "globalvalu": 465, "globalvar": 393, "globalvari": [462, 540, 560, 570, 579], "globalvarnam": 479, "globl": [385, 386, 456, 490, 524], "glue": [402, 457], "gmail": 506, "gmake": [534, 540], "gmir": 465, "gninja": [533, 542], "gno": 386, "gnu": [388, 400, 402, 404, 410, 412, 413, 419, 423, 424, 430, 431, 432, 435, 437, 438, 440, 441, 442, 453, 454, 456, 460, 463, 466, 467, 468, 470, 479, 529, 539, 540, 558, 568], "gnu_debuglink": 431, "gnu_hash": 519, "gnueabi": 470, "gnueabihf": [470, 471], "gnuwin32": [400, 464], "go": [392, 395, 397, 400, 401, 402, 404, 452, 463, 472, 474, 479, 487, 489, 507, 519, 520, 525, 533, 535, 540, 542, 544, 545, 549, 550, 551, 552, 553, 554, 555, 559, 560, 562, 563, 564, 565, 569, 570, 572, 573, 574, 575, 576, 579], "goal": [396, 402, 404, 412, 424, 429, 438, 440, 450, 452, 454, 462, 465, 478, 482, 485, 489, 497, 513, 520, 521, 522, 525, 527, 538, 543, 546, 551, 557, 567, 572, 578], "goat": 404, "goe": [390, 395, 400, 402, 449, 452, 454, 457, 459, 461, 469, 474, 479, 481, 486, 488, 490, 507, 509, 511, 519, 539, 544, 554, 557, 559, 564, 567, 569, 578], "gofmt": 404, "going": [384, 389, 401, 402, 404, 433, 457, 461, 469, 479, 488, 491, 503, 507, 509, 513, 514, 520, 523, 540, 541, 550, 551, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569, 571, 572, 575, 576, 577, 578], "goingnat": 507, "gold": [400, 402, 463, 468, 492, 515, 545], "goldberg": 461, "goldberg91": 461, "golden": 404, "gone": 547, "good": [389, 396, 397, 402, 404, 405, 406, 429, 445, 446, 447, 448, 452, 455, 459, 460, 463, 468, 469, 472, 479, 480, 484, 486, 487, 489, 490, 505, 506, 507, 511, 513, 514, 517, 519, 520, 524, 525, 529, 531, 539, 540, 553, 554, 555, 556, 557, 563, 564, 565, 566, 567, 575, 576, 577, 578], "goodby": [485, 521], "goodwil": 452, "googl": [446, 452, 453, 506, 511, 517, 520, 533, 535], "googleblog": 481, "googlegroup": 481, "googleprojectzero": 520, "googletest": 409, "gori": 452, "got": [386, 402, 445, 463, 479, 507, 513, 559, 569, 575], "gotcha": 404, "goto": [404, 479, 489, 538, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 578], "gov": 510, "govern": 479, "gpg": 463, "gpgpu": 446, "gpl": [452, 457], "gplv2": 452, "gplv3": [452, 466], "gpr": [386, 402, 479, 484, 486, 529], "gpr64": 484, "gprc": 402, "gprs": [402, 454], "gpu": [198, 200, 201, 209, 211, 212, 383, 385, 386, 402, 446, 453, 490, 527, 545], "gpucc": 446, "gpus": [385, 386, 446, 479, 539], "gpz": 520, "gr": 479, "gr1": 479, "gr16": 402, "gr32": [402, 519, 529, 531], "gr64": [402, 484, 519], "gr64_nosp": 519, "gr8": [402, 539], "grab": [472, 507, 514, 527, 576, 577, 578], "grace": [481, 507], "grad": 448, "gradient": 510, "grain": [465, 479, 513, 520, 543], "grammar": [401, 455, 530, 552, 556, 562, 566, 573, 577], "grammat": [552, 562, 573], "grant": [452, 469, 489, 546], "granular": [386, 465, 500, 520, 525], "granulated_lds_s": 386, "granulated_wavefront_sgpr_count": 386, "granulated_workitem_vgpr_count": 386, "graph": [394, 397, 399, 400, 402, 423, 433, 444, 454, 463, 479, 480, 502, 512, 519, 520, 529, 534, 539, 540, 541, 553, 554, 555, 556, 557, 559, 563, 564, 565, 566, 567, 569, 574, 575, 576, 577, 578], "graphic": [481, 556, 560, 566, 570, 577, 579], "graphviz": [432, 505, 507, 542], "gratitud": 503, "grayscal": 510, "great": [388, 402, 404, 452, 459, 461, 469, 487, 507, 519, 524, 540, 545, 551, 556, 566, 571, 572, 577], "greater": [385, 392, 393, 395, 402, 404, 415, 418, 433, 434, 461, 462, 479, 481, 489, 490, 495, 497, 502, 505, 539, 550], "greedi": [402, 410, 445, 465], "green": [509, 511], "greenedistinguish": 511, "greenegitblam": 511, "greet": 529, "gregg": 542, "grep": [400, 402, 405, 424, 445, 463, 468, 509, 517, 534, 535, 558, 568], "grey": 514, "grid": 386, "grid_siz": 386, "griddim": 490, "gridsizex": 490, "gridsizey": 490, "gridsizez": 490, "grok": [457, 553, 563, 574], "grokabl": 404, "grosser": 512, "ground": 403, "group": [384, 386, 393, 398, 402, 404, 405, 413, 423, 424, 429, 436, 437, 442, 450, 452, 478, 487, 489, 493, 495, 505, 509, 512, 513, 516, 525, 527, 529, 531, 534, 539, 545, 552, 560, 562, 570, 573, 579], "group_segment_align": 386, "group_segment_fixed_s": 386, "groupsegmentfixeds": 386, "grow": [402, 403, 445, 477, 479, 481, 486, 507, 555, 565, 576], "grown": [507, 556, 560, 566, 570, 577, 579], "growth": [402, 479, 507], "grpc": 481, "grpid": 393, "grunt": 445, "gs": [386, 402, 534], "gs_op_cut": [42, 129, 227, 322], "gs_op_emit": [42, 129, 227, 322], "gs_op_emit_cut": [42, 129, 227, 322], "gs_op_nop": [42, 129, 227, 322], "gt": [418, 450, 490, 529, 530], "gtcasl": 510, "gte": 479, "gtu": 490, "gtx": 490, "guarante": [389, 390, 393, 402, 404, 405, 429, 445, 449, 452, 454, 456, 457, 459, 462, 463, 479, 480, 488, 491, 492, 500, 505, 507, 516, 519, 520, 522, 524, 527, 537, 540, 557, 567, 578], "guaranteedtailcallopt": 479, "guard": [404, 456, 459, 481, 507, 520, 527, 540, 546], "guard_cond": 479, "guard_condit": 479, "guess": [400, 431, 481, 511, 554, 564], "gui": [400, 404, 464], "guid": [388, 395, 397, 398, 402, 403, 446, 447, 448, 450, 452, 462, 463, 464, 470, 472, 479, 500, 506, 507, 511, 514, 535, 539, 552, 558, 562, 568, 573, 580], "guidanc": [404, 448, 452, 459, 495], "guidelin": [404, 452, 471, 485, 507, 511, 520], "gunzip": [463, 464], "gv": [479, 507], "gvn": [390, 459, 480, 540, 547, 548, 549, 550, 554, 555, 556, 557, 564, 565, 566, 567], "gvneedslazyptr": 539, "gvnhoist": 488, "gvreg": 465, "gz": [463, 464, 471, 514, 542], "gzip": [463, 542], "h264ref": 533, "habit": [404, 505], "hac": 520, "hack": [502, 506, 509, 540, 551, 559, 560, 569, 570, 571, 572, 579], "hackabl": [551, 572], "hackathon": 487, "hacker": [448, 452, 545], "had": [386, 392, 395, 415, 429, 452, 465, 479, 485, 487, 490, 507, 509, 512, 513, 519, 521, 522, 524, 525, 540, 544], "hainan": 386, "half": [384, 386, 393, 402, 404, 418, 433, 481, 485, 507, 521, 539, 547], "halfton": 510, "halt": [386, 520], "halv": 455, "han": 472, "hand": [390, 402, 404, 461, 462, 473, 475, 479, 484, 488, 489, 491, 494, 505, 507, 514, 516, 520, 525, 527, 531, 539, 544, 551, 552, 553, 554, 556, 562, 563, 564, 566, 571, 572, 573, 574, 575, 577, 579], "handi": [507, 521, 553, 563, 574], "handili": 404, "handl": [37, 105, 127, 189, 223, 286, 317, 385, 386, 387, 390, 392, 400, 405, 411, 426, 445, 447, 449, 452, 453, 456, 459, 460, 461, 465, 473, 475, 477, 478, 482, 484, 490, 491, 492, 499, 502, 509, 512, 513, 516, 519, 520, 522, 524, 525, 529, 530, 538, 539, 540, 541, 545, 546, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 576, 577, 578, 579], "handleallerror": 507, "handledefinit": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "handleerror": 507, "handleextern": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "handlelazycompilefailur": 491, "handleon": 550, "handler": [385, 390, 402, 449, 454, 458, 479, 491, 543, 546], "handler0": 479, "handler1": 479, "handler2": 479, "handlerpcoffset": 458, "handletoplevelexpress": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "hao": 512, "happen": [385, 386, 387, 390, 396, 402, 403, 404, 405, 406, 449, 452, 458, 461, 463, 465, 479, 481, 483, 487, 488, 489, 491, 495, 500, 505, 506, 507, 509, 511, 519, 520, 522, 523, 524, 527, 540, 544, 547, 552, 553, 554, 555, 559, 562, 563, 564, 565, 569, 573, 574, 575, 576], "happi": [506, 507, 508, 509, 557, 567, 578], "happili": [554, 564], "har": 508, "harass": 403, "hard": [397, 402, 404, 413, 431, 452, 454, 457, 459, 468, 470, 471, 479, 502, 504, 506, 508, 511, 513, 519, 520, 525, 528, 531, 544, 551, 556, 558, 566, 568, 572, 577], "hardcod": [476, 519, 539], "hardcodedsmalls": 507, "harddriv": 468, "harden": [479, 520, 545], "harder": [404, 457, 479, 481, 505, 520, 524, 525, 533, 552, 562, 573], "hardwar": [36, 126, 221, 315, 386, 390, 400, 402, 411, 424, 429, 446, 452, 459, 479, 480, 490, 513, 517, 520, 539], "harfbuzz": 481, "harm": 402, "harmless": [469, 505], "harri": 510, "harvard": 479, "has": [205, 216, 218, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 414, 424, 426, 429, 431, 432, 433, 434, 436, 437, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 502, 503, 505, 506, 507, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "has_asmpars": 478, "has_asmprint": 478, "has_disassembl": 478, "has_jit": 478, "hasadsizeprefix": 531, "hasard": 461, "hasconflictingtyp": 495, "hasctrldep": [529, 531], "hasdelayslot": 531, "haserror": 515, "hasexternallinkag": 507, "hasfp": 539, "hasfparmv8": 531, "hasgc": 489, "hash": [386, 389, 402, 407, 418, 433, 436, 437, 450, 452, 453, 463, 479, 481, 489, 493, 500, 502, 503, 507, 509, 533, 544, 560, 570, 579], "hash_data_count": 519, "hash_funct": 519, "hash_map": 507, "hash_set": 507, "hashadjbufferlength": 502, "hashadjbufferoffset": 502, "hashauxstreamindex": 502, "hashbufferlength": 502, "hashdata": 519, "hashes_count": 519, "hashfunctiontyp": 519, "hashkeys": 502, "hashstreamindex": 502, "hashtbl": [573, 574, 575, 576, 577, 578], "hashvaluebufferlength": 502, "hashvaluebufferoffset": 502, "hasiniti": 507, "hasinternallinkag": 507, "hasjit": 539, "haskel": [479, 507, 560, 570, 579], "hasn": [462, 507, 540], "hasnam": 507, "hasoneus": 404, "hasopsizeprefix": 531, "hasrex_wprefix": 531, "hassideeffect": [429, 531], "hassse2": 529, "hassse3": 529, "haswel": [424, 520], "hat": 544, "hatsiz": 544, "have": [36, 42, 84, 99, 126, 129, 185, 221, 227, 282, 315, 322, 366, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 413, 415, 418, 421, 424, 429, 430, 431, 433, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 500, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 524, 525, 527, 528, 529, 530, 531, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "haven": [404, 464, 479, 539, 540, 541, 542, 549, 550], "havoq": 510, "hawaii": 386, "hazard": [480, 520], "hblcnsviw": 445, "hd": [386, 446], "hd2xxx": 386, "hd6xxx": 386, "hdl": 449, "hds": 446, "head": [388, 404, 461, 463, 465, 479, 485, 506, 509, 521, 529, 530], "headach": 514, "header": [390, 393, 400, 413, 417, 426, 431, 432, 433, 436, 437, 445, 446, 452, 453, 456, 457, 458, 459, 463, 464, 471, 473, 478, 479, 483, 484, 494, 505, 507, 508, 513, 522, 527, 534, 536, 539, 541, 542, 545, 546, 548, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578, 581], "header0": 479, "header_data": 519, "header_data_len": 519, "headerblock": 503, "headerdata": 519, "headers": 502, "headlight": 404, "heal": 458, "heap": [389, 479, 480, 488, 517, 518, 520, 522, 524, 544, 557, 560, 567, 570, 578, 579], "heard": [446, 453], "heart": [416, 524], "heartble": 481, "heartfelt": 503, "heartwal": 510, "heavi": [507, 520, 524, 547], "heavili": [386, 433, 461, 507, 519, 520, 545, 560, 570, 579], "heavyweight": 507, "heffernan": 446, "held": [392, 452, 479, 506], "hello": [401, 450, 463, 464, 479, 527, 529, 551, 572], "hello_world": 386, "helloworld": [401, 470], "help": [385, 386, 387, 389, 390, 392, 396, 397, 398, 400, 403, 404, 405, 406, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 436, 437, 442, 443, 444, 449, 452, 453, 455, 459, 461, 463, 465, 467, 468, 469, 472, 474, 475, 478, 479, 481, 482, 486, 488, 506, 509, 510, 511, 514, 516, 517, 519, 520, 523, 524, 525, 529, 531, 533, 535, 540, 542, 543, 544, 545, 546, 551, 558, 559, 560, 568, 569, 570, 572, 579], "helper": [99, 185, 282, 381, 389, 404, 409, 445, 447, 460, 463, 479, 483, 489, 492, 507, 519, 527, 535, 539, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 577, 578], "henc": [386, 404, 445, 463, 479, 482, 522, 530], "henceforth": [498, 502, 518], "henderson": 511, "henderson2002": 461, "hendersonprefix": 511, "henrik": 525, "her": 489, "here": [0, 1, 2, 3, 34, 35, 125, 219, 220, 313, 314, 384, 385, 386, 388, 389, 390, 396, 397, 400, 401, 402, 404, 405, 412, 413, 429, 433, 434, 445, 446, 450, 451, 452, 453, 454, 457, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 476, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 494, 495, 500, 503, 506, 507, 509, 511, 513, 516, 517, 518, 519, 520, 522, 524, 525, 527, 528, 529, 530, 531, 533, 534, 536, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 581], "herebi": 404, "hertz": 543, "heterogen": 386, "heurist": [402, 479, 505, 536, 541, 543, 557, 567, 578], "hex": [430, 431, 432, 433, 436, 437, 479, 481], "hex16": 544, "hex32": 544, "hex64": 544, "hex8": 544, "hex_valu": 424, "hexadecim": [385, 430, 433, 436, 437, 445, 479, 529, 544], "hexagon": [402, 463, 479, 511, 527], "hexinteg": 530, "hfc": 458, "hh": 385, "hh567368": 404, "hi": [385, 461, 481, 482, 507], "hi16": 402, "hidden": [386, 393, 402, 404, 408, 418, 431, 445, 475, 477, 479, 495, 507, 509, 519, 536, 540], "hidden_completion_act": 386, "hidden_default_queu": 386, "hidden_global_offset_i": 386, "hidden_global_offset_x": 386, "hidden_global_offset_z": 386, "hidden_multigrid_sync_arg": 386, "hidden_non": 386, "hidden_printf_buff": 386, "hiddencompletionact": 386, "hiddendefaultqueu": 386, "hiddenglobaloffseti": 386, "hiddenglobaloffsetx": 386, "hiddenglobaloffsetz": 386, "hiddenmultigridsyncarg": 386, "hiddennon": 386, "hiddenprintfbuff": 386, "hide": [449, 509, 524], "hideaki": 402, "hierarch": [393, 505, 512], "hierarchi": [409, 429, 455, 463, 474, 479, 512, 537, 545, 553, 563], "high": [0, 2, 3, 205, 216, 218, 385, 386, 388, 389, 391, 393, 413, 429, 433, 446, 448, 449, 451, 452, 453, 454, 455, 457, 459, 461, 462, 469, 472, 481, 483, 487, 488, 489, 490, 491, 499, 502, 505, 507, 508, 513, 517, 519, 520, 524, 529, 535, 536, 537, 538, 539, 541, 543, 545, 548, 557, 560, 567, 570, 571, 578, 579], "higher": [385, 386, 389, 395, 402, 424, 452, 460, 464, 465, 479, 488, 491, 492, 505, 507, 522, 524, 536, 538, 545, 546, 548, 552, 560, 562, 570, 573, 579], "highest": [386, 392, 479, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "highlevelprogramrepresent": 491, "highlevelrepresentationlay": 491, "highlight": [401, 402, 429, 450, 459, 463, 485, 507, 513, 521, 527, 542, 553, 559, 563, 569], "highproduct": 510, "hihihi": 507, "him": 489, "hint": [397, 404, 432, 442, 459, 462, 479, 513, 536, 553, 563, 574], "hip": 386, "hipe": [402, 479], "hiraditya": 510, "his": 507, "histogram": [429, 436, 437, 510], "histor": [388, 401, 404, 462, 479, 507, 524, 535], "histori": [452, 503, 506], "hit": [394, 404, 429, 481, 488, 507, 520, 549, 550], "hitherto": 393, "hmmer": 533, "hnle": 511, "hnledistinguish": 511, "hoc": [402, 505, 507], "hoist": [386, 389, 390, 479, 488, 505, 507, 522, 536, 540], "hold": [385, 386, 388, 402, 403, 445, 452, 454, 456, 461, 463, 478, 479, 481, 483, 484, 489, 502, 505, 507, 508, 512, 517, 519, 520, 527, 529, 531, 535, 539, 540, 543, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "holder": 452, "hole": [445, 479, 520, 524], "hollow": 544, "home": [451, 459, 463, 468, 507, 510, 519, 534, 535], "homeless": 507, "homepag": [463, 464], "honour": 456, "hood": [450, 463], "hook": [390, 397, 402, 454, 479, 508, 509, 555, 565], "hope": [389, 393, 404, 445, 446, 452, 461, 485, 489, 504, 505, 540, 547, 554, 564, 575], "horizont": [405, 429, 479], "hork": 529, "horn": 520, "horribl": [404, 553, 563], "host": [386, 388, 398, 400, 402, 404, 411, 424, 429, 461, 469, 471, 479, 483, 490, 491, 506, 507, 509, 510, 533, 535, 545, 546, 558, 568], "host_fn": 446, "host_install_dir": 470, "host_on": 446, "hosta": 490, "hostb": 490, "hostc": 490, "hostnam": 533, "hot": [394, 459, 479, 515, 520, 524], "hotfix": 509, "hotspot3d": 510, "hotter": 394, "hottest": [434, 479], "hour": [388, 516], "how": [384, 386, 390, 391, 392, 393, 394, 395, 397, 398, 400, 401, 404, 405, 408, 409, 413, 416, 433, 442, 445, 446, 449, 450, 451, 452, 453, 454, 455, 459, 461, 463, 464, 465, 478, 479, 480, 484, 485, 488, 490, 492, 495, 503, 505, 506, 507, 508, 509, 511, 512, 516, 520, 521, 522, 524, 528, 529, 530, 531, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580], "howev": [385, 386, 387, 389, 390, 392, 393, 397, 401, 402, 404, 405, 413, 429, 445, 446, 449, 452, 454, 456, 457, 458, 461, 462, 463, 465, 466, 471, 472, 473, 476, 477, 478, 479, 481, 483, 484, 485, 491, 494, 502, 504, 506, 507, 509, 511, 512, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 531, 534, 535, 538, 540, 548, 553, 554, 555, 556, 557, 560, 563, 564, 565, 566, 567, 570, 575, 576, 577, 578, 579], "howto": [471, 485, 521, 527, 580], "howtosubmitabug": 463, "howtousejit": 417, "howtouselljit": 491, "hpc": 510, "hpgmg": 510, "hpp": 454, "hresult": 502, "hrf": 386, "hs": 446, "hsatext": 386, "hsl": 510, "ht206167": 481, "htm": 510, "html": [400, 404, 418, 424, 435, 441, 455, 463, 470, 471, 472, 481, 485, 490, 509, 510, 511, 514, 515, 520, 527, 533, 534, 546], "hton": 550, "htpasswd": 452, "http": [400, 428, 431, 432, 452, 463, 464, 467, 471, 473, 481, 485, 509, 510, 511, 514, 520, 533, 545, 546], "https": [391, 404, 426, 452, 460, 463, 470, 471, 472, 481, 506, 509, 510, 511, 517, 520, 533, 534, 541, 546, 547, 548, 549, 550, 580], "huge": [404, 452, 463, 481, 494, 502, 527, 531, 535], "huge16": 494, "hugepoint": 502, "human": [399, 403, 404, 414, 415, 418, 422, 423, 427, 434, 442, 463, 479, 484, 505, 520, 531, 540, 544], "hundr": 459, "hundt": 446, "hung": 507, "hunger": 579, "hurdl": 457, "hurt": 404, "hw": [386, 479], "hw_reg_flat_scr_hi": 36, "hw_reg_flat_scr_lo": 36, "hw_reg_gpr_alloc": [36, 126, 221, 315], "hw_reg_hw_id": [36, 126, 221, 315], "hw_reg_ib_st": [36, 126, 221, 315], "hw_reg_lds_alloc": [36, 126, 221, 315], "hw_reg_mod": [36, 126, 221, 315], "hw_reg_pops_pack": 36, "hw_reg_sh_mem_bas": [36, 315], "hw_reg_status": [36, 126, 221, 315], "hw_reg_tba_hi": 36, "hw_reg_tba_lo": 36, "hw_reg_tma_hi": 36, "hw_reg_tma_lo": 36, "hw_reg_trapst": [36, 126, 221, 315], "hw_reg_xnack_mask": 36, "hwaddresssanit": 479, "hwreg": [0, 1, 2, 3], "hybrid": 520, "hydra": 388, "hydro": 510, "hyper": 511, "hypersparc": 539, "hyphen": 539, "hypothes": 498, "hypothet": [402, 454, 489, 491, 499, 507, 524, 540], "i0": 539, "i1": [394, 402, 449, 457, 458, 465, 479, 488, 490, 519, 536, 537, 539, 553, 555, 557, 563, 565, 567, 574, 576, 578], "i16": [0, 2, 3, 385, 386, 402, 479, 490, 539], "i17": 465, "i1942652": 479, "i2": [402, 479, 539], "i20": 479, "i24": 479, "i256": 479, "i29": 479, "i3": [402, 539], "i32": [0, 1, 2, 3, 385, 386, 392, 394, 395, 402, 405, 449, 450, 454, 457, 458, 461, 465, 476, 477, 479, 484, 485, 489, 490, 505, 507, 519, 521, 522, 524, 531, 535, 537, 539, 541, 557, 560, 567, 570, 578, 579], "i32imm": [529, 539], "i32mem": 529, "i386": [402, 431, 442, 479, 517], "i4": [479, 539], "i48": 479, "i5": 539, "i6": 539, "i64": [0, 1, 2, 3, 385, 386, 392, 395, 402, 405, 449, 450, 462, 479, 490, 522, 524, 531, 537, 539], "i64imm": 539, "i65": 479, "i67": 479, "i686": [402, 405, 517, 535], "i7": [467, 479, 539], "i8": [386, 390, 392, 402, 405, 449, 450, 454, 461, 465, 477, 479, 488, 490, 513, 519, 522, 524, 531, 537, 539], "i8086": [558, 568], "i8mem": 402, "ia": 447, "iaca": 429, "iaddroff": 402, "iamcu": 431, "ic": [397, 511], "icc": [463, 519, 538], "icc_": 539, "icc_g": 539, "icc_n": 539, "icc_val": 539, "ice": [463, 480], "iceland": 386, "icmp": [393, 449, 458, 507, 519], "icmp_eq": 484, "icmpinst": 507, "icon": 506, "iconst": [77, 148, 153, 156, 161, 163, 260, 357], "icu": 481, "id": [36, 42, 126, 129, 221, 227, 315, 322, 384, 389, 393, 400, 402, 405, 413, 424, 429, 431, 432, 433, 456, 463, 484, 489, 490, 495, 507, 517, 522, 524, 530, 539, 540, 542, 543, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "idata": 430, "ide": [400, 401, 464], "idea": [388, 393, 394, 404, 429, 445, 449, 452, 454, 455, 459, 468, 479, 487, 489, 505, 510, 511, 514, 519, 520, 529, 542, 546, 552, 553, 554, 555, 557, 560, 562, 563, 564, 565, 567, 570, 571, 573, 574, 575, 576, 578, 579], "ideal": [429, 452, 465, 478, 481, 487, 507, 524, 539], "ident": [388, 392, 402, 403, 404, 405, 413, 420, 449, 461, 471, 479, 480, 484, 489, 495, 502, 505, 507, 513, 516, 519, 527, 535, 537, 542, 554, 555, 557, 564, 565, 567, 572, 573, 574, 575, 576, 577, 578], "ident_t": 479, "identif": [463, 471, 479, 519], "identifi": [42, 129, 227, 322, 386, 393, 397, 399, 400, 402, 403, 404, 405, 409, 413, 429, 445, 449, 454, 456, 462, 480, 484, 486, 490, 495, 500, 502, 505, 507, 509, 511, 512, 514, 519, 520, 522, 524, 527, 530, 536, 537, 538, 539, 540, 541, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "identifierexpr": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "identifierstr": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "identifycudaprefer": 446, "identityprop": 507, "identitytransform": 547, "idiom": [445, 446, 449, 507, 512, 520, 553, 563, 574], "idiomat": [404, 507, 512, 535], "idiv": 402, "idnam": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "ids": [386, 433, 450, 479, 489, 509, 543], "idx": [404, 424, 462, 479, 484, 542, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "idx0": 479, "idx1": [462, 479], "idx2": 462, "idx3": 462, "idxen": [0, 1, 2, 3, 4, 102, 186, 283, 386], "idxmask": 479, "ie": [445, 479, 488], "ieee": [386, 410, 413, 446, 459, 479, 527], "ieee754": 479, "ieee_mod": 386, "if": [4, 7, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 45, 46, 49, 51, 52, 53, 72, 85, 86, 100, 101, 102, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 131, 132, 134, 136, 157, 186, 195, 196, 197, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 231, 234, 236, 256, 283, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 325, 326, 329, 332, 333, 353, 367, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 502, 503, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579], "ifcond": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "ifcont": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "ifconvers": 539, "ifconvert": 539, "ifdef": [445, 446, 450, 465, 481, 525, 530, 554, 555, 556, 557, 558, 559, 560, 564, 565, 566, 567, 568, 569, 570, 579], "ifequ": 479, "ifexpr": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "ifexprast": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576], "iff": [465, 479], "iffals": 479, "ific": 445, "ifloc": [559, 569], "ifndef": [446, 546, 547, 548, 549, 550], "ifs": 538, "ifstream": 490, "iftmp": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "iftru": 479, "ifunc": 393, "ifuncti": 479, "ifunequ": 479, "ignor": [11, 28, 120, 131, 213, 290, 307, 385, 386, 389, 393, 394, 402, 405, 415, 418, 420, 421, 423, 424, 426, 429, 430, 431, 432, 433, 445, 449, 452, 458, 463, 478, 479, 481, 486, 489, 495, 500, 507, 511, 519, 536, 538, 539, 545, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "ignore_crash": 481, "ignore_oom": 481, "ignore_remaining_arg": 460, "ignore_timeout": 481, "ihex": 431, "ii": 507, "ii32": 529, "il": 433, "ilbdc": 510, "ill": [413, 479], "illeg": [102, 386, 402, 445, 457, 462, 465, 479, 490, 505, 507, 509, 524, 538], "illinoi": [452, 510], "illustr": [386, 392, 442, 445, 449, 479, 482, 507, 509, 519, 540, 551, 552, 553, 557, 561, 562, 563, 567, 572, 573, 574, 575, 578], "ilp": [429, 538], "ilp32": [560, 570, 579], "im": 479, "imac": 538, "imag": [7, 17, 18, 19, 20, 31, 32, 33, 51, 54, 105, 114, 115, 116, 123, 124, 136, 137, 189, 202, 203, 204, 205, 216, 217, 218, 236, 237, 286, 296, 297, 298, 299, 310, 311, 312, 331, 334, 384, 385, 402, 430, 431, 432, 433, 456, 479, 483, 500, 527, 556, 566, 577], "image_atomic_add": [0, 1, 2, 3], "image_atomic_and": [0, 1, 2, 3], "image_atomic_cmpswap": [0, 1, 2, 3], "image_atomic_dec": [0, 1, 2, 3], "image_atomic_inc": [0, 1, 2, 3], "image_atomic_or": [0, 1, 2, 3], "image_atomic_smax": [0, 1, 2, 3], "image_atomic_smin": [0, 1, 2, 3], "image_atomic_sub": [0, 1, 2, 3], "image_atomic_swap": [0, 1, 2, 3], "image_atomic_umax": [0, 1, 2, 3], "image_atomic_umin": [0, 1, 2, 3], "image_atomic_xor": [0, 1, 2, 3], "image_comdat_select_associ": 479, "image_comdat_select_largest": 479, "image_debug_directori": 500, "image_debug_type_codeview": 500, "image_debug_type_except": 495, "image_debug_type_fixup": 495, "image_debug_type_fpo": 495, "image_debug_type_omap_from_src": 495, "image_debug_type_omap_to_src": 495, "image_file_32bit_machin": 581, "image_file_aggressive_ws_trim": 581, "image_file_bytes_reversed_hi": 581, "image_file_bytes_reversed_lo": 581, "image_file_debug_strip": 581, "image_file_dl": 581, "image_file_executable_imag": 581, "image_file_large_address_awar": 581, "image_file_line_nums_strip": 581, "image_file_local_syms_strip": 581, "image_file_machine_am33": 581, "image_file_machine_amd64": 581, "image_file_machine_arm": 581, "image_file_machine_arm64": 581, "image_file_machine_armnt": 581, "image_file_machine_ebc": 581, "image_file_machine_i386": 581, "image_file_machine_ia64": 581, "image_file_machine_m32r": 581, "image_file_machine_mips16": 581, "image_file_machine_mipsfpu": 581, "image_file_machine_mipsfpu16": 581, "image_file_machine_powerpc": 581, "image_file_machine_powerpcfp": 581, "image_file_machine_r4000": 581, "image_file_machine_sh3": 581, "image_file_machine_sh3dsp": 581, "image_file_machine_sh4": 581, "image_file_machine_sh5": 581, "image_file_machine_thumb": 581, "image_file_machine_unknown": 581, "image_file_machine_wcemipsv2": 581, "image_file_net_run_from_swap": 581, "image_file_relocs_strip": 581, "image_file_removable_run_from_swap": 581, "image_file_system": 581, "image_file_up_system_on": 581, "image_gather4": [0, 1, 2, 3, 31, 123, 216, 310], "image_gather4_b": [0, 1, 2, 3], "image_gather4_b_cl": [0, 1, 2, 3], "image_gather4_b_cl_o": [0, 1, 2, 3], "image_gather4_b_o": [0, 1, 2, 3], "image_gather4_c": [0, 1, 2, 3], "image_gather4_c_b": [0, 1, 2, 3], "image_gather4_c_b_cl": [0, 1, 2, 3], "image_gather4_c_b_cl_o": [0, 1, 2, 3], "image_gather4_c_b_o": [0, 1, 2, 3], "image_gather4_c_cl": [0, 1, 2, 3], "image_gather4_c_cl_o": [0, 1, 2, 3], "image_gather4_c_l": [0, 1, 2, 3], "image_gather4_c_l_o": [0, 1, 2, 3], "image_gather4_c_lz": [0, 1, 2, 3], "image_gather4_c_lz_o": [0, 1, 2, 3], "image_gather4_c_o": [0, 1, 2, 3], "image_gather4_cl": [0, 1, 2, 3], "image_gather4_cl_o": [0, 1, 2, 3], "image_gather4_l": [0, 1, 2, 3], "image_gather4_l_o": [0, 1, 2, 3], "image_gather4_lz": [0, 1, 2, 3], "image_gather4_lz_o": [0, 1, 2, 3], "image_gather4_o": [0, 1, 2, 3], "image_get_lod": [0, 1, 2, 3], "image_get_resinfo": [0, 1, 2, 3], "image_load": [0, 1, 2, 3], "image_load_mip": [0, 1, 2, 3], "image_load_mip_pck": [0, 1, 2, 3], "image_load_mip_pck_sgn": [0, 1, 2, 3], "image_load_pck": [0, 1, 2, 3], "image_load_pck_sgn": [0, 1, 2, 3], "image_rel_amd64_addr32nb": 456, "image_rel_amd64_secrel": 456, "image_rel_amd64_sect": 456, "image_rel_arm64_secrel_high12a": 456, "image_rel_arm64_secrel_low12a": 456, "image_rel_arm64_secrel_low12l": 456, "image_rel_i386_dir32nb": 456, "image_rel_i386_secrel": 456, "image_rel_i386_sect": 456, "image_sampl": [0, 1, 2, 3], "image_sample_b": [0, 1, 2, 3], "image_sample_b_cl": [0, 1, 2, 3], "image_sample_b_cl_o": [0, 1, 2, 3], "image_sample_b_o": [0, 1, 2, 3], "image_sample_c": [0, 1, 2, 3], "image_sample_c_b": [0, 1, 2, 3], "image_sample_c_b_cl": [0, 1, 2, 3], "image_sample_c_b_cl_o": [0, 1, 2, 3], "image_sample_c_b_o": [0, 1, 2, 3], "image_sample_c_cd": [0, 1, 2, 3], "image_sample_c_cd_cl": [0, 1, 2, 3], "image_sample_c_cd_cl_o": [0, 1, 2, 3], "image_sample_c_cd_o": [0, 1, 2, 3], "image_sample_c_cl": [0, 1, 2, 3], "image_sample_c_cl_o": [0, 1, 2, 3], "image_sample_c_d": [0, 1, 2, 3], "image_sample_c_d_cl": [0, 1, 2, 3], "image_sample_c_d_cl_o": [0, 1, 2, 3], "image_sample_c_d_o": [0, 1, 2, 3], "image_sample_c_l": [0, 1, 2, 3], "image_sample_c_l_o": [0, 1, 2, 3], "image_sample_c_lz": [0, 1, 2, 3], "image_sample_c_lz_o": [0, 1, 2, 3], "image_sample_c_o": [0, 1, 2, 3], "image_sample_cd": [0, 1, 2, 3], "image_sample_cd_cl": [0, 1, 2, 3], "image_sample_cd_cl_o": [0, 1, 2, 3], "image_sample_cd_o": [0, 1, 2, 3], "image_sample_cl": [0, 1, 2, 3], "image_sample_cl_o": [0, 1, 2, 3], "image_sample_d": [0, 1, 2, 3], "image_sample_d_cl": [0, 1, 2, 3], "image_sample_d_cl_o": [0, 1, 2, 3], "image_sample_d_o": [0, 1, 2, 3], "image_sample_l": [0, 1, 2, 3], "image_sample_l_o": [0, 1, 2, 3], "image_sample_lz": [0, 1, 2, 3], "image_sample_lz_o": [0, 1, 2, 3], "image_sample_o": [0, 1, 2, 3], "image_scn_align_1024byt": 581, "image_scn_align_128byt": 581, "image_scn_align_16byt": 581, "image_scn_align_1byt": 581, "image_scn_align_2048byt": 581, "image_scn_align_256byt": 581, "image_scn_align_2byt": 581, "image_scn_align_32byt": 581, "image_scn_align_4096byt": 581, "image_scn_align_4byt": 581, "image_scn_align_512byt": 581, "image_scn_align_64byt": 581, "image_scn_align_8192byt": 581, "image_scn_align_8byt": 581, "image_scn_cnt_cod": 581, "image_scn_cnt_initialized_data": [456, 581], "image_scn_cnt_uninitialized_data": [456, 581], "image_scn_gprel": 581, "image_scn_lnk_comdat": 581, "image_scn_lnk_info": [430, 581], "image_scn_lnk_nreloc_ovfl": 581, "image_scn_lnk_oth": 581, "image_scn_lnk_remov": [456, 581], "image_scn_mem_16bit": 581, "image_scn_mem_discard": [456, 581], "image_scn_mem_execut": 581, "image_scn_mem_lock": 581, "image_scn_mem_not_cach": 581, "image_scn_mem_not_pag": 581, "image_scn_mem_preload": 581, "image_scn_mem_purg": 581, "image_scn_mem_read": 581, "image_scn_mem_shar": 581, "image_scn_mem_writ": 581, "image_scn_type_no_pad": 581, "image_section_head": 495, "image_stor": [0, 1, 2, 3, 19, 20, 116, 204, 205, 298, 299], "image_store_mip": [0, 1, 2, 3], "image_store_mip_pck": [0, 1, 2, 3], "image_store_pck": [0, 1, 2, 3], "image_sym_class_argu": 581, "image_sym_class_automat": 581, "image_sym_class_bit_field": 581, "image_sym_class_block": 581, "image_sym_class_clr_token": 581, "image_sym_class_end_of_funct": 581, "image_sym_class_end_of_struct": 581, "image_sym_class_enum_tag": 581, "image_sym_class_extern": 581, "image_sym_class_external_def": 581, "image_sym_class_fil": 581, "image_sym_class_funct": 581, "image_sym_class_label": 581, "image_sym_class_member_of_enum": 581, "image_sym_class_member_of_struct": 581, "image_sym_class_member_of_union": 581, "image_sym_class_nul": 581, "image_sym_class_regist": 581, "image_sym_class_register_param": 581, "image_sym_class_sect": 581, "image_sym_class_stat": 581, "image_sym_class_struct_tag": 581, "image_sym_class_type_definit": 581, "image_sym_class_undefined_label": 581, "image_sym_class_undefined_stat": 581, "image_sym_class_union_tag": 581, "image_sym_class_weak_extern": 581, "image_sym_dtype_array": 581, "image_sym_dtype_funct": 581, "image_sym_dtype_nul": 581, "image_sym_dtype_point": 581, "image_sym_type_byt": 581, "image_sym_type_char": 581, "image_sym_type_doubl": 581, "image_sym_type_dword": 581, "image_sym_type_enum": 581, "image_sym_type_float": 581, "image_sym_type_int": 581, "image_sym_type_long": 581, "image_sym_type_mo": 581, "image_sym_type_nul": 581, "image_sym_type_short": 581, "image_sym_type_struct": 581, "image_sym_type_uint": 581, "image_sym_type_union": 581, "image_sym_type_void": 581, "image_sym_type_word": 581, "imagick": 510, "imagin": [489, 491, 519], "imagmag": [556, 566, 577], "imagstart": [556, 566, 577], "imbu": 541, "imgrel": 456, "imit": [485, 521, 530], "imlpement": 481, "imm": [402, 432, 433, 486, 529, 539], "imm16": [0, 1, 2, 3], "imm3": [0, 2, 3], "imm32": [0, 1, 2, 3, 402], "imm4": [2, 3], "imm_eq0": 531, "immarg": [455, 479, 513], "immateri": 489, "immedi": [45, 325, 384, 386, 389, 390, 393, 399, 402, 404, 405, 413, 418, 429, 432, 433, 449, 454, 455, 456, 457, 465, 479, 481, 483, 486, 488, 490, 491, 495, 499, 505, 507, 509, 511, 516, 519, 520, 522, 524, 529, 539, 543, 548, 549, 550, 554, 557, 560, 564, 567, 570, 575, 578, 579], "immediatepar": 479, "immigr": 403, "immin": 472, "immleaf": 465, "immsext16": 402, "immsubreg": 539, "immt": 531, "immtyp": 531, "immtypebit": 531, "immun": 520, "immut": [475, 479, 507, 536, 540], "immutablepass": 389, "impact": [386, 398, 399, 401, 404, 429, 459, 461, 479, 507, 510, 511, 512, 519, 520], "imped": 479, "imper": [404, 461, 519, 555, 557, 565, 567, 576, 578], "impl": [444, 507, 540, 549, 550], "implement": [386, 390, 398, 399, 401, 404, 405, 409, 410, 413, 416, 429, 431, 437, 444, 445, 446, 449, 451, 452, 454, 455, 456, 460, 462, 463, 465, 466, 473, 477, 478, 480, 481, 486, 488, 490, 494, 502, 505, 506, 509, 511, 513, 514, 517, 519, 520, 522, 523, 524, 527, 530, 537, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 576, 577, 578], "implementor": [461, 531, 554, 555, 564, 565, 575, 576], "impli": [82, 170, 267, 364, 382, 383, 386, 389, 402, 405, 409, 432, 433, 442, 446, 452, 454, 461, 462, 479, 481, 488, 495, 507, 509, 511, 522, 525, 530, 539], "implic": [399, 402, 495, 509, 517, 520], "implicit": [393, 401, 402, 404, 405, 445, 452, 454, 456, 479, 484, 491, 507, 509, 519, 520, 522, 527, 529, 530, 538, 539, 540, 542, 544, 545, 546, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "implicitarg": 386, "implicitcod": 519, "implicitdef": 402, "implicitdefin": 484, "implicitus": 402, "import": [389, 390, 392, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 421, 429, 433, 434, 437, 445, 448, 452, 459, 461, 463, 464, 468, 469, 471, 472, 474, 476, 479, 481, 489, 491, 493, 495, 498, 499, 500, 505, 513, 514, 517, 519, 520, 522, 538, 539, 540, 541, 544, 545, 547, 552, 553, 554, 555, 556, 559, 560, 562, 563, 564, 565, 566, 569, 570, 573, 574, 575, 576, 577, 579], "impos": [402, 452, 479, 484, 507, 516, 522], "imposs": [389, 390, 392, 465, 479, 520, 539, 546, 560, 570, 579], "impract": [452, 492, 493, 507, 520], "improv": [386, 389, 398, 409, 454, 459, 461, 463, 465, 472, 479, 481, 489, 491, 505, 506, 507, 509, 511, 513, 519, 520, 524, 539, 540, 546, 548, 554, 560, 564, 570, 575, 579], "impur": 519, "imul": 402, "imul16rmi": 402, "imul16rmi8": 402, "in": [0, 1, 2, 3, 4, 7, 17, 18, 20, 31, 33, 36, 42, 50, 51, 99, 102, 105, 114, 115, 126, 129, 135, 136, 185, 186, 189, 202, 203, 205, 216, 218, 221, 227, 235, 236, 282, 283, 286, 296, 297, 299, 310, 312, 315, 322, 330, 331, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 397, 398, 399, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 455, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 502, 503, 504, 506, 508, 510, 511, 512, 514, 516, 517, 520, 521, 523, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 539, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579], "in0": 479, "in1": [402, 479], "in2": 402, "in32bitmod": 402, "in64bitmod": 402, "inaccessiblemem_or_argmemon": 479, "inaccessiblememon": [393, 479], "inaccessiblememonly_or_argmemon": 393, "inaccur": [401, 429], "inaccuraci": 479, "inact": 384, "inaddr_ani": 550, "inadvert": [405, 525, 536], "inadvis": 462, "inalloca": [393, 449, 479, 545], "inapplic": [396, 468, 520], "inappropri": 516, "inbound": [449, 450, 459, 462, 479], "inc": [402, 404, 424, 449, 463, 476, 484, 507, 525, 527, 539, 540], "inc32r": [484, 519], "inc4": 405, "incant": 446, "incap": [393, 560, 570, 579], "incarn": 455, "incid": 516, "includ": [7, 36, 105, 126, 189, 221, 286, 315, 383, 384, 385, 386, 387, 388, 389, 390, 392, 395, 397, 398, 399, 400, 401, 402, 403, 405, 406, 409, 410, 413, 415, 417, 418, 426, 427, 432, 433, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 459, 460, 461, 462, 464, 465, 466, 468, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 488, 490, 491, 492, 493, 494, 495, 499, 500, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 519, 520, 522, 523, 524, 527, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579], "include_directori": 400, "includedir": 417, "inclus": [384, 385, 386, 404, 418, 429, 444, 456, 479, 508, 525, 539, 546], "incom": [402, 452, 465, 479, 507, 520, 539, 555, 557, 565, 567, 576, 577, 578], "incompat": [454, 479, 504, 519, 527], "incomplet": [404, 453, 457, 507, 520, 547, 548, 549, 550], "inconsist": [404, 424, 462, 511, 519], "inconveni": [481, 557, 567, 578], "inconvertibleerrorcod": 507, "incorpor": [402, 473, 507, 571], "incorrect": [386, 395, 470, 479, 492, 511, 519, 520, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "incq": 405, "incr": 431, "increas": [386, 398, 404, 411, 432, 449, 452, 459, 465, 474, 479, 481, 482, 505, 509, 517, 519, 520, 527, 528, 531, 536, 538, 553, 563, 574], "incred": [404, 452, 469, 509], "increment": [397, 401, 402, 404, 429, 461, 481, 495, 499, 500, 502, 505, 507, 518, 555, 557, 558, 559, 565, 567, 568, 569, 576, 578], "ind": [559, 569], "ind1": 479, "ind4": 479, "indefinit": 481, "indemn": 452, "indent": [485, 507, 521, 544, 559, 569], "independ": [386, 390, 405, 411, 445, 448, 452, 459, 462, 463, 465, 471, 475, 477, 478, 479, 482, 486, 491, 507, 513, 520, 522, 525, 531, 538, 539, 540, 542, 543, 545], "index": [4, 102, 186, 222, 283, 316, 384, 385, 386, 389, 392, 393, 402, 413, 423, 424, 429, 433, 434, 435, 436, 437, 445, 449, 450, 454, 456, 459, 461, 463, 465, 472, 475, 485, 495, 498, 499, 500, 502, 503, 507, 510, 519, 520, 522, 523, 524, 527, 539, 544, 559, 569], "index2": 520, "index2virtreg": 402, "indexedmap": 402, "indexloc": 507, "indexoffsetbufferlength": 502, "indexoffsetbufferoffset": 502, "indexreg": 402, "indic": [17, 18, 36, 48, 72, 84, 114, 115, 126, 157, 202, 203, 221, 233, 256, 296, 297, 315, 328, 353, 366, 382, 383, 384, 385, 386, 389, 392, 393, 394, 395, 396, 400, 402, 404, 409, 413, 415, 420, 429, 442, 445, 449, 450, 452, 454, 455, 456, 461, 465, 471, 473, 475, 478, 479, 480, 481, 490, 492, 493, 494, 495, 497, 500, 503, 505, 506, 507, 509, 512, 513, 517, 519, 520, 522, 524, 527, 529, 530, 531, 534, 538, 539, 540, 542, 543, 552, 553, 555, 559, 562, 563, 565, 569, 573, 574, 576], "indir": 479, "indirect": [386, 390, 399, 402, 404, 409, 431, 432, 437, 449, 456, 457, 481, 499, 513, 519, 520, 522, 524, 529, 539, 548, 549, 550], "indirectionutil": [549, 550], "indirectstubmanag": [548, 549], "indirectstubsmanag": [549, 550], "indirectstubsmgr": [549, 550], "indirectstubsmgrbuild": 549, "individu": [383, 386, 392, 393, 397, 402, 404, 405, 409, 413, 415, 418, 431, 433, 455, 459, 464, 465, 470, 472, 478, 479, 481, 486, 488, 492, 495, 503, 505, 509, 511, 516, 520, 524, 529, 535, 559, 569, 571], "indivis": 477, "induc": [512, 545], "induct": [389, 459, 463, 519, 540, 553, 555, 557, 563, 565, 567, 574, 576, 578], "industri": 545, "indvar": [479, 507, 540], "indx": 544, "ineffect": 520, "ineffici": [393, 402, 459, 481, 507, 523, 538, 557, 567, 578], "ineg": 402, "inequ": [385, 402, 507], "inevit": [429, 511], "inexact": [386, 479], "inf": [386, 410, 411, 445, 479, 519], "infeas": [480, 520], "infecti": 507, "infer": [392, 399, 402, 404, 410, 411, 416, 446, 459, 461, 465, 473, 479, 492, 524, 533, 540, 544], "inferattr": 540, "inferenc": 402, "inferior": 451, "infin": [386, 429, 479], "infinit": [389, 402, 465, 479, 481, 505], "influenc": [392, 479, 480, 519, 536, 540], "info": [386, 393, 398, 400, 402, 409, 423, 424, 429, 432, 433, 436, 437, 442, 444, 447, 451, 452, 454, 461, 463, 465, 469, 471, 479, 480, 481, 482, 484, 492, 494, 498, 503, 509, 516, 527, 538, 540, 543, 544, 551, 556, 557, 559, 560, 561, 566, 567, 569, 570, 571, 572, 575, 576, 577, 578, 579], "inform": [383, 384, 385, 386, 389, 393, 395, 396, 398, 399, 400, 403, 405, 406, 407, 408, 409, 412, 415, 416, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446, 449, 450, 451, 454, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 480, 481, 482, 483, 484, 485, 486, 489, 490, 493, 495, 497, 499, 500, 502, 503, 506, 508, 509, 511, 512, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 527, 529, 531, 533, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 560, 562, 563, 564, 566, 567, 568, 570, 571, 574, 575, 577, 578, 579, 580], "informativemailnotifi": 467, "infrastructur": [397, 402, 433, 448, 452, 455, 461, 463, 479, 491, 492, 507, 509, 512, 513, 519, 524, 533, 538, 540, 545, 554, 564], "infrequ": 540, "infring": 452, "ing": [404, 448, 505, 553, 557, 563, 567, 574, 575, 578], "ingredi": 512, "inher": [401, 457, 479, 500, 507, 520], "inherit": [389, 402, 404, 445, 473, 504, 507, 525, 527, 529, 530, 531, 536, 537, 540, 547], "inhibit": [434, 479, 524, 529], "ini": 478, "init": [386, 445, 481, 509, 540, 550, 557, 558, 559, 567, 568, 569, 578], "init_v": 578, "initact": 387, "initi": [393, 394, 400, 409, 411, 415, 429, 433, 445, 449, 454, 455, 457, 463, 465, 473, 479, 483, 489, 490, 505, 506, 509, 511, 512, 516, 517, 518, 520, 523, 527, 529, 530, 539, 540, 541, 544, 546, 547, 548, 549, 550, 553, 554, 555, 557, 558, 559, 563, 564, 565, 567, 568, 569, 574, 575, 576, 577, 578], "initialexec": [393, 479], "initialis": [445, 531, 541, 558, 568], "initialize_ag_pass": 540, "initialize_native_target": [575, 576, 577, 578], "initialize_pass_depend": 540, "initializealiasanalysi": 389, "initializeallasmpars": [558, 568], "initializeallasmprint": [558, 568], "initializealltarget": [558, 568], "initializealltargetinfo": [558, 568], "initializealltargetmc": [558, 568], "initializemodul": [559, 569], "initializemoduleandpassmanag": [554, 555, 556, 557, 558, 564, 565, 566, 567, 568], "initializenativetarget": [550, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569], "initializenativetargetasmpars": [550, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569], "initializenativetargetasmprint": [550, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569], "initializepass": 389, "initializerconst": 479, "initializi": 530, "initialse": 439, "initid": 393, "initsynclibcal": 390, "initv": [557, 558, 559, 567, 568, 569], "inject": [404, 449, 519, 520], "inlin": [386, 390, 395, 399, 412, 418, 429, 442, 443, 445, 446, 449, 452, 454, 456, 457, 459, 463, 484, 490, 492, 498, 506, 507, 509, 513, 515, 519, 520, 522, 524, 540, 544, 547, 551, 554, 555, 560, 561, 564, 565, 570, 575, 576, 579], "inline": [433, 479, 519], "inline_hd1": 446, "inline_hd2": 446, "inlineasm": 489, "inlinebit": 479, "inlined_at": 456, "inlinedat": [405, 479], "inlinehint": [393, 479], "inner": [398, 401, 404, 406, 454, 477, 479, 481, 505, 507, 512, 513, 529, 536, 544, 545], "inner_a": 479, "innerloop": 512, "innerloopvector": 511, "innermost": [512, 538], "innerstructti": 479, "innoc": [555, 565, 576], "innov": 513, "inoperandlist": [531, 539], "inpredsens": 476, "input": [14, 15, 16, 17, 18, 21, 22, 23, 49, 55, 56, 57, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 95, 96, 97, 98, 101, 111, 112, 113, 114, 115, 134, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 181, 182, 183, 184, 195, 196, 197, 202, 203, 234, 238, 239, 240, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 273, 278, 279, 280, 281, 293, 294, 295, 296, 297, 300, 301, 302, 329, 335, 336, 337, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 369, 370, 371, 372, 377, 378, 379, 380, 382, 384, 386, 387, 389, 391, 397, 401, 402, 404, 405, 406, 409, 410, 411, 414, 415, 418, 419, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 436, 437, 442, 443, 444, 445, 446, 457, 463, 465, 472, 476, 480, 481, 482, 484, 490, 495, 505, 507, 512, 515, 519, 520, 524, 527, 529, 531, 533, 535, 538, 539, 540, 542, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 574, 575, 576, 578, 579, 581], "inputcont": 544, "inputfilenam": 445, "inrang": 479, "inreg": [393, 402, 479, 539], "inresumepart": 449, "ins": [392, 402, 476, 529, 531, 539], "insan": 404, "insensit": [389, 423], "insert": [386, 389, 390, 392, 397, 404, 405, 409, 413, 445, 449, 461, 465, 479, 489, 494, 505, 519, 520, 525, 539, 540, 541, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "insert_subreg": 484, "insert_subvector": 402, "insertbefor": 507, "insertbranch": 539, "insertbyt": 481, "insertdeclar": [559, 569], "insertel": [392, 405], "insertion_block": [576, 577, 578], "insertvalu": 449, "insid": [393, 398, 400, 401, 402, 404, 405, 409, 416, 450, 451, 453, 454, 461, 463, 465, 471, 473, 479, 481, 488, 489, 495, 502, 505, 507, 512, 514, 519, 520, 523, 524, 527, 529, 530, 534, 535, 536, 537, 540, 544, 545, 549, 550, 554, 564], "insidebundl": 402, "insidi": 404, "insight": [450, 479, 515, 542], "insignific": [421, 479, 522], "insn": 432, "inspect": [393, 399, 402, 424, 459, 462, 479, 509, 519, 540, 552, 562], "inspir": [429, 479, 505, 519, 542], "inst": [479, 505, 507, 529, 539], "inst_begin": 507, "inst_cal": 393, "inst_end": 507, "inst_invok": 393, "inst_iter": 507, "instal": [386, 388, 400, 401, 417, 446, 453, 455, 460, 463, 464, 466, 467, 468, 470, 472, 478, 481, 490, 504, 507, 508, 509, 514, 531, 533, 534, 540, 541, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "instalia": 402, "instalias": 402, "install_prefix": 400, "installeddir": 453, "instanc": [386, 400, 402, 404, 405, 409, 445, 449, 453, 461, 465, 473, 477, 479, 483, 484, 489, 491, 492, 497, 506, 507, 509, 514, 519, 522, 527, 533, 535, 536, 539, 540, 541, 544, 545, 546, 547, 552, 553, 560, 562, 563, 570, 573, 574, 579], "instanceof": [507, 527], "instant": 507, "instanti": [409, 418, 445, 446, 473, 483, 507, 512, 527, 529, 530, 531, 539, 540, 544], "instantiatetemplateattribut": 527, "instcombin": [397, 460, 507, 519, 547, 548, 549, 550, 554, 555, 556, 557, 564, 565, 566, 567], "instead": [11, 44, 45, 290, 324, 325, 382, 386, 389, 390, 393, 397, 400, 401, 402, 403, 404, 405, 409, 411, 416, 418, 423, 424, 425, 427, 429, 430, 433, 443, 445, 446, 449, 450, 451, 452, 454, 456, 457, 459, 460, 462, 463, 465, 467, 468, 469, 472, 473, 476, 477, 478, 479, 480, 481, 484, 489, 490, 491, 495, 505, 507, 509, 512, 516, 518, 519, 520, 522, 524, 525, 529, 530, 533, 535, 539, 540, 541, 542, 543, 544, 545, 547, 548, 551, 552, 553, 554, 556, 557, 560, 562, 563, 564, 566, 567, 570, 571, 572, 573, 574, 575, 577, 578, 579], "instinct": 386, "institer": 507, "instlisttyp": 507, "instnam": 397, "instprint": 527, "instr": [386, 400, 402, 418, 434, 444, 450, 529], "instr0": 489, "instr1": 489, "instr2": 489, "instr_begin": 578, "instr_iter": 402, "instr_map": 542, "instrinfo": [402, 484, 539], "instrins": [479, 519], "instritinclass": 531, "instrmap": 539, "instrprofvaluekind": 479, "instrsch": 507, "instrsdrm": 529, "instrssrr": 529, "instruct": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 318, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 389, 393, 397, 399, 400, 404, 405, 408, 410, 411, 413, 415, 432, 433, 434, 439, 444, 446, 447, 448, 449, 452, 453, 456, 458, 459, 460, 461, 463, 466, 470, 472, 474, 477, 480, 488, 489, 490, 492, 506, 509, 512, 513, 515, 516, 518, 520, 522, 524, 527, 529, 531, 535, 536, 537, 538, 540, 541, 545, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 574, 575, 576, 578, 579], "instruction_list_end": 424, "instructioncount": 515, "instructor": 539, "instrumen": 450, "instrument": [388, 395, 400, 418, 434, 450, 462, 469, 479, 481, 492, 495, 505, 523, 533, 543, 545], "instrumentationmap": 541, "instsp": 539, "insttoreplac": 507, "instvisitor": [455, 507], "insuffici": [446, 468, 479, 519, 525, 539], "insul": 520, "insult": 403, "int": [389, 390, 392, 397, 402, 404, 405, 406, 419, 429, 442, 445, 446, 449, 450, 451, 454, 457, 461, 462, 463, 464, 466, 476, 477, 479, 481, 482, 484, 485, 489, 490, 491, 502, 507, 513, 519, 520, 521, 524, 527, 529, 530, 531, 536, 538, 539, 541, 542, 544, 546, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579, 581], "int128": 502, "int128oct": 502, "int16": 502, "int16_t": [539, 544], "int16short": 502, "int2006": 533, "int32": [502, 522], "int32_t": [461, 495, 502, 544], "int32long": 502, "int32ti": 507, "int32x4_t": 392, "int64": 502, "int64_t": [507, 544], "int64quad": 502, "int8_t": 544, "int_get_dynamic_area_offset": 479, "int_of_float": [577, 578], "intd": 405, "integ": [36, 37, 40, 42, 99, 126, 127, 129, 185, 221, 223, 225, 227, 282, 315, 317, 320, 322, 381, 383, 384, 386, 390, 394, 402, 404, 405, 413, 415, 429, 434, 445, 446, 449, 450, 454, 455, 456, 459, 461, 465, 481, 484, 489, 491, 495, 500, 502, 507, 509, 510, 519, 524, 527, 529, 530, 535, 538, 539, 544, 553, 563, 574], "integer_numb": [12, 13, 34, 35, 36, 37, 42, 48, 66, 83, 99, 109, 110, 125, 126, 127, 129, 146, 171, 185, 193, 194, 219, 220, 221, 222, 223, 227, 233, 249, 268, 282, 291, 292, 313, 314, 315, 316, 317, 322, 328, 346, 365, 381], "integertyp": 507, "integr": [386, 399, 400, 408, 416, 445, 446, 461, 463, 465, 481, 482, 485, 492, 507, 509, 510, 519, 520, 524, 537, 541, 545, 580], "intel": [390, 400, 411, 429, 432, 447, 471, 479, 512, 517, 520, 535, 538, 558, 568], "intel_pst": 391, "inteldialect": 479, "intellig": [479, 507, 520], "intend": [386, 388, 389, 390, 398, 400, 401, 402, 403, 404, 405, 413, 421, 426, 445, 452, 454, 455, 459, 461, 463, 465, 479, 482, 483, 486, 492, 500, 505, 507, 509, 513, 516, 517, 520, 522, 525, 530, 539, 540, 545], "intendend": 479, "intens": [398, 459, 507], "intent": [392, 401, 402, 404, 413, 452, 479, 482, 492, 511, 520, 530, 540, 552, 557, 562, 567, 573, 578], "inter": [389, 395, 404, 452, 459, 479, 480, 491, 523, 525], "interact": [384, 390, 397, 400, 402, 419, 445, 454, 461, 463, 469, 479, 483, 488, 506, 509, 513, 515, 516, 519, 524, 539, 546, 552, 559, 560, 562, 569, 570, 573, 579], "intercept": 481, "interchang": [402, 404], "interconnect": 513, "interdepend": 491, "interest": [386, 389, 390, 392, 398, 402, 404, 405, 406, 408, 409, 415, 429, 445, 448, 452, 454, 457, 459, 460, 461, 463, 464, 465, 467, 473, 479, 481, 483, 484, 487, 500, 505, 507, 511, 519, 520, 524, 534, 540, 542, 544, 545, 547, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "interf": 519, "interfac": [386, 400, 402, 404, 409, 437, 445, 447, 448, 451, 452, 453, 454, 460, 461, 463, 466, 475, 476, 478, 479, 481, 482, 489, 490, 491, 505, 519, 522, 527, 529, 539, 540, 545, 547, 548, 551, 552, 553, 560, 561, 562, 563, 570, 572, 573, 574, 575, 579], "interfer": [429, 454, 459, 462, 479], "interim": [399, 452], "interior": [461, 473, 480, 524], "interleav": [386, 432, 509, 512, 538], "interleave_count": 538, "intermedi": [393, 400, 425, 427, 443, 446, 448, 453, 454, 457, 461, 463, 465, 475, 477, 479, 484, 507, 514, 519, 524, 533, 539, 545, 552, 562, 573], "intermediari": 507, "intermingl": 479, "intermitt": 463, "intermodular": [482, 545], "intern": [389, 393, 400, 401, 402, 405, 406, 409, 429, 431, 433, 442, 446, 448, 449, 450, 452, 453, 454, 457, 459, 462, 463, 479, 480, 482, 483, 484, 490, 491, 492, 493, 499, 503, 507, 520, 524, 525, 527, 529, 531, 533, 534, 537, 539, 540, 544, 545, 546, 553, 557, 559, 563, 567, 569, 574, 578], "internallinkag": 507, "internalread": 484, "internet": 509, "interoper": [390, 454, 461, 479, 503, 546, 560, 570, 579], "interpol": [8, 47, 106, 133, 190, 232, 287, 327], "interpret": [385, 392, 393, 400, 402, 406, 409, 411, 417, 421, 433, 434, 445, 446, 450, 456, 460, 463, 465, 478, 479, 491, 504, 507, 519, 522, 524, 530, 531, 535, 536, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579], "interprocedur": [389, 479, 482, 492, 520, 540], "interproceedur": 547, "interrupt": [404, 409, 458, 479, 481, 520, 525], "intersect": 404, "interspers": 543, "intertwin": 480, "interv": [499, 507], "interven": [386, 393, 429, 509, 522], "intial": 507, "intim": 404, "intimmleaf": 465, "into": [28, 120, 213, 307, 384, 386, 388, 389, 390, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 418, 422, 423, 424, 427, 429, 430, 431, 433, 434, 443, 444, 446, 448, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 495, 503, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 524, 525, 527, 529, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "intpr": 484, "intptr_t": [538, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569], "intptrsiz": 461, "intra": [389, 523], "intraprocedur": [397, 488], "intreg": [476, 539], "intregsclass": 539, "intregsregclass": 539, "intregsregclassid": 539, "intregsregisterclass": 539, "intregssubclass": 539, "intregssubregclass": 539, "intregssuperclass": 539, "intregssuperregclass": 539, "intregsvt": 539, "intrepid": [552, 562, 573], "intric": 453, "intrins": [390, 434, 444, 447, 459, 480, 484, 507, 513, 518, 537, 538, 539, 545], "intrinsicinst": 387, "intrinsicsnvvm": 490, "intro": [447, 448, 557, 567, 578], "introduc": [389, 390, 391, 402, 404, 405, 429, 449, 450, 456, 465, 472, 473, 477, 479, 488, 489, 499, 505, 507, 509, 512, 513, 519, 520, 522, 524, 529, 531, 539, 546, 547, 549, 550, 555, 556, 557, 565, 566, 567, 571, 576, 577, 578], "introduct": [404, 444, 448, 463, 464, 479, 485, 507, 519, 530, 531, 545, 580], "introductori": 545, "introspect": [475, 479, 482, 486, 524], "intrus": [479, 507], "intscalarti": 479, "intti": 479, "inttoptr": [459, 522, 524], "intuit": [479, 488], "invalid": [384, 385, 386, 389, 390, 404, 409, 424, 431, 434, 443, 445, 454, 462, 463, 479, 480, 481, 483, 495, 505, 507, 517, 519, 520, 522, 524, 539, 540, 544, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "invari": [389, 459, 463, 465, 480, 507, 520, 524, 536, 540], "invas": [452, 544], "invent": [503, 527], "invers": [384, 424, 479, 505], "inverse_throughput": 424, "invert": [459, 479, 535], "invest": 455, "investig": [433, 465, 511, 520, 546, 560, 570, 579], "invidu": 516, "invit": [547, 548, 549, 550], "invoc": [386, 388, 397, 400, 402, 405, 406, 434, 449, 453, 460, 463, 466, 469, 470, 479, 481, 492, 511, 533, 540, 541, 542, 543], "invok": [386, 389, 393, 395, 397, 400, 401, 402, 404, 405, 418, 445, 449, 454, 459, 461, 463, 465, 466, 477, 481, 482, 483, 484, 489, 491, 492, 522, 524, 533, 535, 539, 540, 543, 547, 552, 557, 562, 567, 573, 575, 578], "invoke": 479, "invokeinst": 507, "invol": 454, "involv": [386, 389, 390, 394, 400, 402, 429, 455, 459, 461, 462, 465, 472, 476, 479, 491, 505, 507, 509, 512, 516, 517, 520, 524, 525, 530, 539, 542, 544, 552, 555, 557, 559, 562, 565, 567, 569, 573, 576, 578], "io": [485, 510, 511, 544], "iommu": 386, "ios": [463, 479, 533], "iostream": [490, 542, 558, 568], "ip": 531, "ipa": 480, "ipc": [429, 525], "iphoneo": 533, "ipi": [433, 493, 494, 500, 503], "ipo": [480, 489, 540], "iptr": [465, 479], "ir": [387, 389, 394, 395, 397, 402, 411, 445, 448, 449, 454, 455, 458, 463, 466, 469, 477, 479, 480, 485, 488, 489, 490, 491, 492, 508, 512, 519, 521, 522, 524, 535, 536, 537, 539, 540, 541, 542, 545, 546, 547, 548, 549, 550, 551, 552, 554, 556, 557, 558, 559, 562, 564, 566, 567, 568, 569, 571, 572, 573, 575, 578, 580], "irbuild": [507, 519, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576], "irc": [403, 448, 452, 459, 506, 516], "ircompil": 546, "ircompilelay": [491, 546, 547, 548, 549, 550], "irgen": [459, 491, 549, 550], "irgenandtakeownership": [549, 550], "irlay": 547, "irpath": 491, "irread": 400, "irreduc": [479, 505, 539], "irrelev": [389, 462, 479], "irrespect": 400, "irtest": 400, "irtransfomrlay": 547, "irtransformlay": [548, 549, 550], "is": [0, 1, 2, 3, 4, 7, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 28, 29, 30, 34, 35, 37, 38, 42, 45, 46, 48, 49, 51, 54, 66, 72, 83, 84, 86, 99, 100, 101, 102, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 125, 127, 129, 131, 132, 134, 136, 137, 146, 157, 171, 185, 186, 193, 194, 195, 196, 197, 202, 203, 205, 213, 214, 215, 216, 218, 219, 220, 222, 223, 227, 231, 233, 234, 236, 237, 249, 256, 268, 282, 283, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 307, 308, 309, 313, 314, 316, 317, 318, 322, 325, 326, 328, 329, 334, 346, 353, 365, 366, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 560, 561, 562, 563, 564, 565, 566, 568, 570, 571, 572, 573, 574, 575, 576, 577, 579], "is64bitmod": 539, "is_base_of": 473, "is_const": 386, "is_dynamic_callstack": 386, "is_nul": 458, "is_open": 490, "is_pip": 386, "is_ptr64": 386, "is_restrict": 386, "is_stmt": 456, "is_trivially_copy": 507, "is_volatil": 386, "is_zero_undef": 479, "isa": [386, 390, 402, 404, 447, 452, 459, 461, 473, 529, 530, 539, 545], "isa_and_nonnul": 507, "isa_impl": 473, "isabsoluteaddress": 495, "isaddresstaken": 484, "isalnum": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "isalpha": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "isascii": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "isatleastorstrongerthan": 390, "isbarri": [529, 531], "isbasewithconstantoffset": 465, "isbinaryop": [556, 557, 558, 559, 566, 567, 568, 569], "isbranch": 531, "iscal": [529, 531], "iscommut": 531, "isconst": [386, 393, 507], "isconstantpoolindex": 539, "isconvertibletothreeaddress": 531, "iscxxclass": 519, "isd": [387, 390, 402, 454, 455, 539], "isdeclar": 507, "isdef": 402, "isdefinit": [479, 519], "isdigit": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "isdopcod": [387, 402, 455], "isdoubl": 529, "isectcoff": 495, "isel": [402, 444, 465, 480, 519, 529, 539], "iseldagtodag": 527, "isellow": [390, 527], "isempti": 507, "isextern": 519, "isexternalsymbol": 539, "isfirstclasstyp": 489, "isfloatingpointti": 507, "isfoo": 404, "isfunct": 519, "isglobaladdress": 539, "isgroup": [445, 495], "ish": [556, 566, 577], "isimmedi": 539, "isimplicitcod": 519, "isimplicitdef": 531, "isindirectbranch": 531, "isinlin": 519, "isintegerti": 507, "isjumptableindex": 539, "island": 386, "islandingpad": 484, "islazi": 539, "isload": 402, "isloadfromstackslot": 539, "isloc": [479, 519], "isloopinvari": 507, "islvalu": 404, "ismod": 529, "isn": [388, 390, 401, 402, 403, 404, 434, 442, 446, 452, 457, 462, 465, 470, 479, 484, 488, 505, 507, 516, 519, 525, 540, 551, 552, 553, 554, 555, 558, 559, 561, 562, 563, 564, 565, 568, 569, 572, 573, 574, 575, 576], "isnotduplic": 531, "isnul": 404, "isnullvalu": 489, "isobjcclass": 519, "isobviouslysafetofold": 465, "isol": [391, 394, 397, 400, 402, 404, 429, 448, 453, 479, 524, 529, 535, 546, 549, 557, 567, 578, 580], "isomorph": 457, "isoper": [556, 557, 558, 559, 566, 567, 568, 569], "isoperandimmequ": 465, "isopt": 445, "isoptim": [479, 519], "isosdarwin": [559, 569], "ispack": 393, "isphysicalregist": 402, "isphysreg": 507, "ispic": 539, "ispip": 386, "ispoint": 489, "ispointertyp": 404, "ispredic": 531, "isprefix": 445, "isprint": 481, "isproto": 393, "isref": 529, "isregist": 402, "isrematerializ": 531, "isrestrict": 386, "isreturn": [529, 531], "issafetospecul": 524, "isselector": 495, "isset": 445, "issimpl": 390, "issiz": 507, "isspac": [481, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "isstor": 402, "isstoretostackslot": 539, "isstrictfpopcod": 387, "isstrongerthan": 390, "issu": [390, 392, 396, 401, 402, 403, 405, 409, 423, 431, 445, 452, 456, 459, 460, 463, 465, 468, 472, 479, 507, 509, 510, 517, 519, 520, 524, 527, 535, 540, 544, 551, 554, 555, 557, 560, 564, 565, 567, 570, 572, 575, 576, 578, 579], "issuedset": 429, "issuewidth": 429, "istargetspecif": 484, "istermin": [404, 529, 531], "isternaryop": 387, "istreambuf_iter": 490, "istruncatingstor": 539, "isunaryop": [387, 556, 557, 558, 559, 566, 567, 568, 569], "isunord": 390, "isunpredicatedtermin": 539, "isus": 402, "isv9": 539, "isvararg": 507, "isvector": 536, "isvi": 539, "isvolatil": [386, 479], "it": [29, 30, 45, 46, 49, 54, 121, 122, 131, 132, 134, 137, 214, 215, 222, 231, 234, 237, 308, 309, 316, 325, 326, 329, 334, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581], "itanium": [419, 420, 456, 460, 537], "itanium_abi_tripl": 535, "item": [392, 393, 401, 413, 415, 445, 454, 456, 459, 478, 479, 481, 489, 507, 509, 511, 513, 519, 524, 529, 544, 557, 567, 578], "iter": [389, 394, 397, 400, 401, 402, 404, 429, 445, 449, 452, 461, 479, 480, 481, 482, 483, 489, 499, 505, 512, 529, 530, 539, 541, 544, 552, 555, 556, 557, 562, 565, 566, 567, 571, 573, 576, 577, 578], "iterator_rang": 507, "iteri": [574, 575, 576, 577, 578], "ith": 507, "itinerari": [402, 531, 539], "its": [36, 42, 51, 126, 129, 136, 221, 227, 236, 315, 322, 331, 384, 385, 386, 388, 389, 392, 393, 394, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 421, 422, 423, 425, 427, 429, 430, 432, 434, 443, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 459, 460, 461, 462, 463, 465, 466, 467, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 491, 494, 505, 507, 509, 510, 511, 512, 516, 517, 519, 520, 521, 522, 524, 525, 527, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 543, 545, 546, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "itself": [388, 389, 392, 393, 400, 402, 404, 406, 409, 416, 418, 445, 449, 452, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 469, 471, 473, 474, 477, 478, 479, 481, 482, 489, 499, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 522, 523, 524, 527, 529, 530, 531, 535, 536, 540, 544, 546, 547, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579], "iuml": 402, "ivanov": 511, "ivanovicdistinguish": 511, "ivar": 519, "j1": 533, "j2": 463, "j4": [469, 514], "jacqu": 446, "jag": 499, "jaguar": 429, "jalu0": 429, "jalu01": 429, "jalu1": 429, "jam": [479, 512], "jame": 511, "jan": [413, 512], "jann": 520, "jarvi": 510, "java": [390, 458, 461, 479, 505, 507, 524, 560, 570, 579], "javascript": [479, 522, 560, 570, 579], "jazz": 508, "jb_1": 519, "jd": [491, 511, 547], "jd1": 491, "jd2": 491, "jdiv": 429, "je": 520, "jeff": 525, "jessi": 471, "jfpa": 429, "jfpm": 429, "jfpu0": 429, "jfpu01": 429, "jfpu1": 429, "jfpuprf": 429, "jg": 518, "jingl": 512, "jingyu": 446, "jintegerprf": 429, "jit": [397, 400, 404, 406, 411, 417, 424, 452, 457, 461, 463, 464, 474, 478, 479, 490, 491, 504, 513, 522, 524, 545, 551, 553, 555, 556, 557, 558, 559, 560, 561, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579], "jit_serv": 550, "jitcompilecallbackmanag": [548, 549, 550], "jitcompilerfn": 539, "jitcompilerfunct": 539, "jitdylib": [546, 547], "jite": [451, 545, 546, 548, 549, 580], "jitevaluatedsymbol": [546, 547], "jiteventlisten": 491, "jitfail": 491, "jitsymbol": [546, 547, 548, 549, 550], "jitsymbolflag": [548, 549, 550], "jittargetaddress": [548, 549, 550], "jittargetmachinebuild": [546, 547], "jlagu": 429, "jlsagu": 429, "jmp": [479, 513, 520], "jmp_1": 519, "jmpq": 520, "jmul": 429, "jn": [468, 471], "jne": [402, 520], "job": [400, 473, 481, 488, 491, 525, 540, 547], "joerg": 509, "john": [404, 452], "join": [386, 411, 479, 481, 487, 507, 540, 542, 545], "joke": 403, "jonathan2251": 580, "jone": [511, 512], "jonesdistinguish": 511, "journal": 512, "journey": [557, 567, 578], "jpg": 481, "jsagu": 429, "json": [418, 423, 444, 531, 533], "jsonnrevnum": 509, "jstc": 429, "jtmb": [546, 547], "judgement": [452, 520], "juggl": 446, "juli": [461, 509, 541], "julia": 491, "jump": [393, 399, 445, 449, 454, 456, 474, 479, 491, 507, 508, 513, 520, 537, 539, 548, 555, 559, 565, 569, 576], "jumptabl": [393, 479, 484], "junip": 386, "junk": [573, 574, 575, 576, 577, 578], "jurisdict": 452, "just": [388, 389, 390, 391, 392, 393, 394, 397, 398, 401, 402, 404, 405, 407, 409, 411, 413, 415, 418, 421, 429, 430, 432, 433, 445, 446, 449, 450, 452, 456, 457, 462, 463, 464, 465, 466, 468, 471, 472, 473, 474, 478, 479, 481, 484, 485, 487, 488, 489, 490, 491, 505, 506, 507, 508, 509, 514, 518, 519, 520, 521, 522, 524, 525, 527, 529, 531, 533, 534, 535, 539, 540, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "justifi": [413, 482], "justin": 465, "jvalu0": 429, "jvalu1": 429, "jvimul": 429, "jvm": [560, 570, 579], "jvms": 491, "jyknight": 509, "kabini": 386, "kaleidoscop": [489, 491, 507, 546, 547, 548, 549, 550, 571], "kaleidoscopejit": [547, 548, 549, 550, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569, 580], "kaveri": 386, "kawahito": 402, "kb": 517, "kd": 386, "kdtree": 510, "keep": [389, 402, 405, 431, 445, 446, 449, 452, 453, 457, 461, 465, 473, 479, 482, 484, 487, 488, 489, 505, 507, 512, 517, 519, 531, 535, 538, 540, 541, 545, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 577, 578, 579], "kept": [386, 389, 404, 449, 452, 480, 516, 519, 540], "kern0": 386, "kern1": 386, "kernarg": 386, "kernarg_address": 386, "kernarg_segment_align": 386, "kernarg_segment_s": 386, "kernargsegmentalign": 386, "kernargsegments": 386, "kernel": [390, 391, 402, 411, 429, 446, 453, 468, 479, 481, 510, 513, 520, 538, 539, 545, 560, 570, 579], "kernel1": 386, "kernel_code_entry_byte_offset": 386, "kernel_param_0": 490, "kernel_param_1": 490, "kernel_param_2": 490, "kernelparam": 490, "kevin": 402, "key": [386, 393, 398, 402, 404, 424, 452, 473, 476, 479, 484, 489, 491, 497, 500, 502, 507, 515, 520, 524, 527, 531, 540, 548], "keycol": 476, "keyr": 463, "keystrok": 404, "keyt": 507, "keytyp": 519, "keyword": [389, 396, 402, 445, 448, 450, 460, 462, 479, 481, 511, 519, 527, 529, 530, 531, 535, 538, 540, 551, 555, 556, 557, 558, 559, 561, 565, 566, 567, 568, 569, 572, 576, 577, 578], "kib": 445, "kill": [397, 402, 406, 480, 481, 484, 519, 540], "killal": 481, "kind": [383, 384, 385, 386, 390, 393, 395, 402, 403, 404, 410, 413, 415, 445, 450, 452, 454, 455, 457, 458, 460, 465, 473, 475, 478, 479, 480, 481, 482, 484, 488, 489, 493, 494, 495, 502, 505, 507, 509, 516, 519, 520, 521, 522, 527, 537, 542, 543, 546, 556, 557, 558, 559, 566, 567, 568, 569, 577, 578], "kistanova": 467, "klaus": 509, "klimek": 506, "kmean": 510, "knock": 404, "know": [387, 389, 390, 392, 396, 397, 400, 401, 402, 404, 409, 429, 445, 448, 450, 451, 452, 454, 457, 459, 461, 463, 464, 467, 474, 479, 481, 482, 485, 490, 499, 503, 506, 507, 509, 511, 516, 519, 520, 521, 523, 524, 535, 537, 538, 539, 540, 544, 547, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579], "knowledg": [393, 402, 404, 450, 461, 479, 485, 486, 492, 503, 505, 521, 535, 536, 560, 570, 579], "known": [389, 390, 393, 400, 402, 404, 406, 431, 446, 454, 459, 461, 462, 463, 464, 472, 473, 479, 490, 505, 507, 508, 511, 514, 518, 520, 524, 529, 534, 535, 537, 539, 540, 544, 545, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "knownbit": 479, "knownsafevalu": 507, "koblenz": 512, "kocher": 520, "komatsu": 402, "kripk": 510, "kristof": 511, "kruskal": 510, "kryomodel": 539, "kryowrite_2cyc_xy_norsv_67ln": 539, "kryowrite_2cyc_xy_xy_150ln": 539, "krzysztof": 511, "ks": [559, 569], "ksdbginfo": [559, 569], "kw1": 481, "kw2": 481, "kw3": 481, "kwalifi": 581, "kwd": [572, 573, 574, 575, 576, 577, 578], "l0": [386, 539], "l0s": 386, "l1": [386, 402, 429, 539], "l10": 542, "l1d": 429, "l1s": 386, "l2": [386, 539], "l3": 539, "l4": 539, "l5": 539, "l6": 539, "l7": 539, "la": 491, "lab": [467, 545], "label": [0, 1, 2, 3, 385, 386, 393, 394, 402, 448, 449, 454, 457, 458, 461, 465, 477, 488, 489, 490, 505, 507, 519, 536, 539, 542, 555, 557, 565, 567, 576, 578], "label0": 479, "label_branch_weight": 395, "labeltyp": 507, "labf": 445, "labor": 445, "labori": 507, "lack": [399, 402, 403, 429, 461, 462, 479, 504, 517, 520, 528, 529, 530, 531, 575], "lad": 445, "laden": [560, 570, 579], "lagho": 510, "lah": 533, "lahf": 520, "laid": [392, 402, 452, 479, 498, 499, 503, 507, 575], "lako": 404, "lambda": [465, 507, 511, 546, 549, 550], "lambdaresolv": [548, 549, 550], "lammp": 510, "lanai": 511, "lanczo": 510, "land": [449, 452, 454, 477, 479, 484, 524], "landingpad": [449, 454, 505], "landscap": 509, "lane": [384, 386, 465, 479], "lang": [398, 445, 511], "langref": [387, 390, 455, 459, 490], "languag": [386, 390, 400, 401, 402, 403, 405, 410, 414, 422, 425, 427, 443, 445, 446, 447, 448, 449, 452, 453, 454, 456, 458, 460, 461, 462, 463, 470, 480, 481, 484, 490, 491, 505, 507, 510, 512, 522, 524, 527, 528, 531, 535, 538, 539, 543, 544, 545, 546, 547, 552, 553, 554, 558, 559, 562, 563, 564, 568, 569, 573, 574, 575], "language_vers": 386, "languagevers": 386, "langug": 491, "larg": [390, 393, 397, 400, 402, 404, 406, 409, 411, 415, 429, 445, 446, 452, 453, 456, 461, 463, 465, 469, 472, 476, 477, 479, 481, 488, 490, 491, 493, 497, 499, 503, 505, 507, 508, 510, 511, 513, 519, 520, 522, 524, 527, 531, 533, 535, 539, 541, 543, 548, 554, 564, 575], "largeconst": 522, "larger": [386, 393, 398, 402, 404, 415, 425, 429, 452, 453, 455, 456, 465, 469, 479, 481, 495, 507, 510, 511, 513, 517, 519, 524, 539], "largest": [99, 185, 282, 381, 384, 402, 456, 459, 465, 479, 495], "last": [384, 390, 393, 402, 404, 405, 409, 413, 429, 445, 449, 452, 454, 463, 464, 472, 473, 475, 479, 485, 488, 492, 499, 502, 506, 507, 509, 513, 521, 524, 529, 530, 535, 536, 538, 539, 540, 543, 546, 551, 554, 556, 559, 561, 564, 566, 569, 574, 577], "lastchar": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "lastinst": 539, "lastopc": 539, "latch": 479, "late": [390, 449, 459, 479, 529, 539], "latenc": [402, 411, 424, 429, 479, 520, 542], "later": [386, 388, 395, 399, 400, 401, 402, 404, 405, 418, 449, 450, 452, 454, 459, 463, 464, 465, 479, 481, 483, 484, 485, 489, 499, 505, 506, 507, 508, 509, 512, 513, 515, 517, 519, 521, 522, 524, 529, 535, 536, 539, 540, 541, 546, 552, 553, 554, 555, 556, 557, 559, 562, 563, 564, 565, 566, 567, 569, 571, 573, 574, 575, 576, 577, 578], "latest": [400, 405, 407, 453, 463, 464, 465, 485, 506, 509, 513, 514, 533], "latter": [385, 390, 402, 449, 465, 479, 489, 507, 511, 519, 524, 529, 536, 539, 552, 562, 573], "lattner": [509, 511, 579], "lattneracronym": 511, "lattneragre": 511, "lattnerfunct": 511, "lattnerlow": 511, "lattnerrevnum": 509, "lattnertransit": 511, "launch": [386, 398, 446, 490, 548], "lava": 510, "lavamd": 510, "law": [404, 516], "lawsuit": 452, "lawyer": 452, "lay": [402, 404, 462, 479, 480, 507, 537, 559, 569, 575, 576, 577, 578], "layer": [389, 460, 484, 491, 499, 509, 546, 548, 549, 560, 570, 579, 580], "layout": [386, 392, 398, 400, 401, 433, 446, 448, 450, 459, 461, 462, 471, 491, 494, 495, 497, 500, 502, 509, 524, 539, 543, 545, 554, 558, 564, 568], "lazi": [389, 432, 479, 546, 547, 554, 564, 580], "lazier": 547, "lazili": [393, 482, 491, 507, 513, 546, 547, 548, 549, 550, 575], "lazyemittinglay": 491, "lazyresolverfn": 539, "lb": [491, 511], "lbar": 402, "lbb0_1": 520, "lbb0_2": [518, 520], "lbb0_3": 520, "lbb0_4": 520, "lbb0_5": 520, "lbb0_n": 520, "lbd": 580, "lbl": 510, "lclang1": 509, "lclang2": 509, "lcov": 418, "lcpi0_0": 535, "lcssa": 480, "lcuda": 490, "lcudart": 446, "lcudart_stat": 446, "ld": [400, 445, 460, 463, 466, 468, 470, 490, 539], "ld64": 492, "ld_preload": 517, "ldflag": [417, 466, 546, 547, 548, 549, 550, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "ldl": 446, "ldm": 479, "ldpxi": 484, "ldpxpost": 484, "ldr": [456, 486], "ldrd": 390, "ldrex": 390, "ldri": 539, "ldrr": 539, "ldrs": 531, "lds": [0, 1, 2, 3, 5, 28, 36, 99, 103, 120, 126, 185, 187, 213, 221, 282, 284, 307, 315, 381, 385, 386], "lds_direct": [68, 70, 78, 97, 147, 148, 150, 152, 164, 183, 250, 252, 280, 347, 349, 379], "lds_size": 386, "ldststoreupd": 402, "le": [461, 490, 529, 530], "lea": [402, 520, 531], "lead": [390, 401, 402, 404, 405, 419, 424, 431, 432, 445, 449, 452, 462, 465, 466, 470, 479, 481, 505, 507, 511, 519, 520, 523, 544, 548, 552, 559, 562, 569, 573], "leader": [404, 511], "leaf": [410, 454, 493, 519, 542], "leak": [409, 456, 461, 477, 479, 518, 520, 535, 572], "leaki": 481, "leaksanit": 481, "leap": 506, "leaq": 518, "leari": 446, "learn": [403, 404, 463, 479, 481, 485, 489, 503, 506, 507, 510, 511, 521, 547, 557, 560, 567, 570, 578, 579], "least": [385, 386, 389, 390, 391, 392, 393, 398, 402, 404, 409, 413, 424, 429, 432, 433, 445, 452, 454, 460, 465, 468, 469, 471, 479, 481, 487, 488, 493, 505, 507, 509, 511, 514, 520, 522, 524, 527, 529, 530, 539, 541, 543, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "leav": [391, 396, 409, 431, 445, 449, 452, 457, 461, 466, 474, 479, 481, 489, 490, 505, 506, 509, 512, 519, 520, 524, 539, 547], "leb": 450, "leb128": [402, 410], "left": [384, 385, 386, 393, 397, 401, 402, 404, 413, 452, 459, 479, 489, 505, 507, 529, 531, 534, 538, 539, 544, 546, 552, 553, 555, 559, 562, 563, 565, 569, 573, 574, 576], "leftr": 489, "legaci": [393, 400, 405, 461, 479, 491, 513, 536, 540, 542, 546, 547, 548, 549, 550, 554, 555, 556, 557, 558, 564, 565, 566, 567, 568], "legacycompileondemandlay": 548, "legacyircompilelay": [548, 549, 550], "legacyirtransformlay": [548, 549, 550], "legacypassmanag": [540, 542, 547, 548, 549, 550, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569], "legacyrtdyldobjectlinkinglay": [548, 549, 550], "legal": [386, 387, 390, 446, 452, 454, 455, 462, 479, 484, 486, 488, 490, 493, 507, 512, 524, 535], "legalact": 539, "legalfor": 465, "legalforcartesianproduct": 465, "legalfortypeswithmems": 465, "legalif": 465, "legalitypred": 465, "legalityqueri": 465, "legalizeact": 539, "legalizedag": [387, 455], "legalizeop": [387, 455], "legitim": 404, "len": 479, "len_control": 481, "length": [392, 393, 402, 409, 413, 418, 445, 450, 462, 479, 481, 493, 494, 495, 498, 499, 500, 502, 505, 507, 519, 520, 521, 524, 527, 529, 535, 538, 574, 575, 576, 577, 578], "lengthen": 424, "less": [385, 386, 391, 392, 393, 402, 404, 405, 409, 413, 418, 429, 431, 445, 450, 452, 457, 459, 461, 463, 468, 477, 479, 481, 485, 489, 502, 505, 507, 509, 511, 512, 514, 519, 520, 521, 524, 531, 535, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "lesser": [392, 479], "let": [388, 402, 405, 434, 445, 446, 448, 449, 450, 462, 465, 467, 473, 474, 476, 479, 482, 485, 488, 489, 490, 491, 499, 504, 506, 507, 509, 516, 519, 520, 521, 523, 524, 531, 534, 539, 540, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "letitem": 530, "letlist": 530, "letter": [393, 404, 437, 445, 479, 511, 539, 556, 557, 558, 559, 566, 567, 568, 569, 577, 578], "leukocyt": 510, "level": [384, 386, 388, 389, 390, 393, 395, 396, 398, 400, 403, 405, 410, 415, 416, 429, 433, 436, 437, 446, 447, 448, 449, 451, 452, 454, 458, 459, 460, 461, 462, 463, 469, 477, 478, 480, 483, 488, 489, 490, 492, 499, 503, 507, 508, 509, 513, 520, 522, 524, 529, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "leverag": [454, 461, 463, 507, 543], "lex": [530, 551, 559, 561, 569, 572, 573, 574, 575, 576, 577, 578], "lex_com": [572, 573, 574, 575, 576, 577, 578], "lex_id": [572, 573, 574, 575, 576, 577, 578], "lex_numb": [572, 573, 574, 575, 576, 577, 578], "lexer": [460, 485, 542, 552, 553, 554, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 570, 571, 573, 574, 575, 577, 578, 579, 580], "lexic": [402, 404, 457, 479, 519, 524, 552, 554, 559, 562, 564, 569, 573, 575], "lexicalblock": [559, 569], "lexicograph": [404, 489], "lexicon": 545, "lexidentifi": [455, 542], "lexloc": [559, 569], "lf_arglist": 502, "lf_array": 502, "lf_bitfield": 502, "lf_buildinfo": 502, "lf_class": 502, "lf_endprecomp": 502, "lf_enum": 502, "lf_fieldlist": 502, "lf_func_id": 502, "lf_interfac": 502, "lf_label": 502, "lf_methodlist": 502, "lf_mfunc_id": 502, "lf_mfunction": 502, "lf_modifi": 502, "lf_pad0": 494, "lf_pointer": 502, "lf_precomp": 502, "lf_procedur": 502, "lf_string_id": 502, "lf_structur": 502, "lf_substr_list": 502, "lf_typeserver2": [502, 519], "lf_udt_mod_src_lin": 502, "lf_udt_src_lin": 502, "lf_union": 502, "lf_vftabl": 502, "lf_vtshape": 502, "lfenc": 520, "lfoo": 402, "lfunc1_end": 386, "lfunc_end0": 386, "lgkm_cnt": [99, 185, 282, 381], "lgkmcnt": [99, 185, 282, 381, 386], "lgkmcnt_sat": [99, 185, 282, 381], "lgtm": [448, 480, 506], "lh": 533, "lhs": [404, 479, 489, 507, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "lhs_val": [574, 575, 576, 577, 578], "lhse": [557, 558, 559, 567, 568, 569], "li": [404, 461, 511, 540], "lib": [386, 387, 400, 402, 404, 408, 415, 417, 424, 433, 436, 437, 445, 446, 451, 453, 455, 456, 461, 464, 466, 471, 484, 489, 491, 507, 508, 509, 511, 517, 519, 525, 527, 539, 540, 545, 546, 547, 548, 549, 550, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "lib64": [400, 446, 463], "liba": 491, "libb": 491, "libc": [404, 420, 446, 452, 454, 463, 470, 479, 481, 507, 513, 517, 560, 570, 579], "libcal": [465, 534], "libcallfor": 465, "libcallif": 465, "libclang_rt": [469, 541], "libclc": [452, 509], "libcmt": 464, "libcuda": 490, "libcxx": [398, 400, 463, 509, 511, 514], "libcxxabi": [398, 400, 463, 509], "libdir": 417, "libffi": [400, 504], "libfil": 417, "libfoo": 491, "libfuzz": [460, 545], "libgcc": [454, 518], "libgcc1": 471, "libit": 445, "libllvm": [398, 400, 463, 504], "libllvmcor": 507, "libllvmir": 507, "liblto": [466, 511], "liblzma": 471, "libm": [553, 554, 563, 564, 574, 575], "libnam": [417, 540], "libomp": 514, "libopag": 504, "libpartit": 456, "libpath": [426, 456], "libpfm": 400, "libpo": 445, "librari": [389, 390, 391, 393, 400, 401, 406, 408, 411, 413, 415, 416, 417, 418, 427, 432, 433, 436, 437, 443, 444, 447, 451, 452, 453, 457, 459, 461, 462, 464, 465, 469, 470, 471, 474, 478, 482, 490, 492, 498, 505, 513, 515, 519, 520, 533, 535, 538, 539, 542, 544, 545, 546, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 577, 579], "library_nam": 478, "librarygroup": 478, "librarynam": [461, 508], "libremark": 515, "libsampl": 508, "libscudo": 517, "libsfgcc1": 471, "libstdc": [404, 420, 446, 453, 454, 463, 471], "libsupport": 509, "libsystem": 404, "libthread_db": 451, "libtinfo": 471, "libunwind": [398, 454, 463, 509, 511], "libxml": 481, "libxml2": [471, 481], "libxxx": 471, "libz": 479, "lic": 505, "licens": [404, 463, 472, 510, 540, 546, 547, 548, 549, 550], "license": 452, "licm": [390, 459, 479, 480, 507, 540], "lie": [445, 461, 479, 480, 522, 524], "life": [404, 424, 446, 452, 459, 481, 491, 545], "lifelong": 545, "lifetim": [402, 449, 452, 459, 461, 491, 507, 540, 541, 546, 548], "lift": [459, 512, 547], "light": [404, 479, 514, 546], "lightweight": [404, 409, 453, 507], "like": [386, 387, 388, 389, 390, 393, 395, 397, 398, 400, 402, 405, 411, 413, 421, 424, 429, 433, 445, 446, 449, 450, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 471, 473, 478, 479, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 499, 500, 503, 504, 505, 506, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 539, 540, 541, 542, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "likeli": [395, 479], "likewis": 479, "lim": 481, "limit": [7, 72, 105, 157, 189, 256, 286, 353, 384, 385, 386, 390, 397, 398, 402, 403, 404, 406, 416, 429, 431, 433, 445, 452, 456, 459, 461, 462, 463, 465, 475, 479, 481, 488, 493, 495, 505, 507, 509, 511, 516, 517, 518, 519, 520, 522, 529, 540, 544, 545, 554, 555, 556, 559, 564, 565, 566, 569, 575, 576, 577], "linaro": [468, 470], "line": [388, 390, 397, 400, 401, 402, 404, 405, 406, 409, 410, 411, 413, 414, 415, 418, 419, 420, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 446, 450, 451, 452, 454, 456, 460, 461, 463, 464, 466, 470, 474, 475, 478, 479, 480, 481, 484, 485, 488, 491, 492, 495, 498, 503, 504, 507, 508, 509, 511, 514, 515, 517, 519, 520, 521, 529, 531, 533, 534, 535, 539, 540, 542, 544, 545, 546, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "linear": [389, 402, 404, 410, 411, 462, 495, 502, 507, 509, 512, 540], "linearscan": [402, 411, 540], "linebegin": 530, "lineend": 530, "lineno": [559, 569], "linger": 524, "link": [382, 383, 386, 389, 390, 391, 397, 398, 400, 402, 404, 406, 407, 408, 413, 417, 418, 426, 430, 431, 432, 442, 443, 445, 446, 450, 452, 456, 460, 461, 470, 471, 472, 474, 478, 479, 480, 481, 485, 488, 489, 491, 492, 493, 495, 500, 502, 504, 505, 506, 507, 508, 509, 514, 516, 517, 518, 519, 520, 521, 524, 526, 532, 533, 535, 537, 539, 540, 541, 542, 545, 547, 548, 551, 552, 553, 554, 556, 558, 562, 563, 564, 566, 568, 572, 574, 575, 576, 577, 578, 579], "link_compon": 508, "linkabl": 386, "linkag": [393, 402, 421, 442, 459, 463, 489, 490, 493, 507, 553, 559, 563, 569, 574], "linkagenam": [479, 519], "linkagetyp": 507, "linkallcodegencompon": 540, "linker": [37, 127, 223, 317, 386, 397, 398, 399, 400, 402, 404, 408, 410, 417, 432, 436, 437, 445, 460, 461, 463, 466, 470, 471, 478, 490, 491, 492, 495, 500, 502, 507, 517, 519, 533, 535, 539, 545, 546, 556, 566], "linkinfo": 503, "linkonc": [393, 463, 479, 490, 507], "linkonce_odr": [393, 459, 479, 490], "linkonceanylinkag": 507, "linkonceodrlinkag": 507, "linpack": [533, 538], "linux": [390, 400, 402, 404, 424, 446, 451, 453, 454, 460, 463, 466, 468, 469, 470, 471, 479, 481, 491, 513, 520, 522, 533, 535, 541, 545, 553, 554, 558, 563, 564, 568], "lipo": 408, "liquid": 386, "lis": 402, "lisp": [461, 560, 570, 579], "list": [385, 386, 388, 389, 390, 393, 395, 397, 398, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 423, 424, 431, 432, 433, 434, 436, 437, 442, 443, 444, 448, 451, 452, 453, 454, 455, 457, 459, 460, 461, 463, 465, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 497, 499, 500, 504, 505, 506, 508, 509, 511, 514, 515, 516, 517, 518, 519, 521, 522, 524, 527, 529, 530, 531, 533, 535, 538, 539, 540, 541, 542, 551, 560, 561, 570, 572, 579], "list_nam": 401, "list_of_list": 401, "list_property_nam": 478, "listconcat": [529, 530], "listen": 550, "listsplat": [529, 530], "lit": [388, 400, 408, 464, 469, 508, 509, 519, 523, 533, 535], "lit_arg": 535, "lit_config": 409, "lit_filt": 409, "lit_num_shard": 409, "lit_opt": 409, "lit_run_shard": 409, "litconfig": 409, "liter": [68, 69, 71, 73, 78, 79, 147, 149, 154, 158, 161, 164, 165, 250, 251, 254, 257, 262, 347, 348, 351, 354, 359, 393, 401, 404, 405, 413, 445, 458, 479, 484, 486, 507, 527, 529, 530, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "literatur": 402, "litloc": [559, 569], "litter": 452, "littl": [386, 392, 393, 402, 445, 453, 457, 461, 462, 465, 468, 479, 485, 489, 492, 503, 505, 507, 515, 519, 521, 525, 537, 539, 540, 543, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 577, 578, 579], "littleaarch64": 431, "littlearm": 431, "littleriscv": 431, "litvalu": 393, "live": [386, 389, 392, 400, 404, 424, 446, 454, 461, 463, 464, 465, 474, 477, 479, 480, 482, 487, 505, 507, 512, 519, 520, 522, 524, 540, 553, 554, 557, 563, 564, 567, 574, 578], "live_begin": 461, "live_end": 461, "live_iter": 461, "live_s": 461, "livecount": 461, "livedebugvalu": 479, "livedebugvari": 519, "livein": [424, 484, 519], "liveinterv": [402, 411], "liveintervalanalysi": 402, "liveli": 424, "liveoffset": 461, "liveonentri": 488, "liveout": [522, 524], "ljti0_0": [513, 520], "lkern0_end": 386, "lkern1_end": 386, "lkkmcnt": 386, "ll": [390, 397, 401, 402, 404, 405, 406, 408, 410, 414, 421, 422, 443, 445, 446, 451, 452, 455, 457, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 479, 484, 488, 490, 492, 505, 506, 507, 509, 514, 516, 519, 524, 525, 535, 540, 541, 542, 544, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579], "llazyjitbuild": 491, "llbuilder": 578, "llc": [397, 402, 405, 406, 408, 411, 458, 460, 461, 463, 464, 469, 474, 479, 484, 490, 492, 515, 519, 524, 535, 539, 540, 542, 558, 568], "lld": [386, 400, 404, 426, 463, 469, 470, 492, 509, 511, 513, 515], "lldb": [400, 404, 451, 452, 463, 478, 487, 491, 507, 509, 511, 519], "llgo": 509, "lli": [406, 408, 410, 451, 463, 464, 474, 492, 540], "llibnam": 445, "lljitbuild": 491, "lllazyjitbuild": 491, "llld1": 509, "llld2": 509, "lllexer": [455, 542], "lllvm1": 509, "lllvm2": 509, "llnl": 510, "llparser": [455, 542], "llt": 465, "lltok": 455, "llvalu": [574, 575, 576, 577, 578], "llvm": [387, 388, 399, 405, 406, 407, 412, 435, 438, 440, 441, 444, 445, 446, 451, 458, 459, 465, 470, 475, 477, 478, 483, 484, 485, 488, 489, 491, 492, 493, 494, 495, 499, 500, 502, 503, 506, 510, 511, 514, 516, 517, 520, 521, 529, 530, 531, 533, 534, 536, 537, 544, 546, 547, 548, 549, 550, 551, 552, 556, 558, 559, 561, 562, 566, 568, 569, 572, 573, 577], "llvm1": 509, "llvm2": 509, "llvm_": 401, "llvm_abi_breaking_check": 400, "llvm_all_target": [463, 539], "llvm_analysi": [574, 575, 576, 577, 578], "llvm_ani": 455, "llvm_append_vc_rev": 400, "llvm_build_32_bit": 400, "llvm_build_benchmark": 400, "llvm_build_dir": 463, "llvm_build_doc": 400, "llvm_build_exampl": 400, "llvm_build_instrumented_coverag": 400, "llvm_build_llvm_dylib": [398, 400, 463], "llvm_build_root": 400, "llvm_build_test": 400, "llvm_build_tool": 400, "llvm_ccache_build": 400, "llvm_ccache_dir": 400, "llvm_ccache_maxs": 400, "llvm_cmake_dir": 400, "llvm_compiler_job": 400, "llvm_create_xcode_toolchain": 400, "llvm_cxx_std": 400, "llvm_debug": [397, 443, 445], "llvm_definit": 400, "llvm_dependent_librari": 456, "llvm_dir": [400, 489], "llvm_distribution_compon": 398, "llvm_doxygen_qch_filenam": 400, "llvm_doxygen_qhelpgenerator_path": 400, "llvm_doxygen_qhp_cust_filter_nam": 400, "llvm_doxygen_qhp_namespac": 400, "llvm_doxygen_svg": 400, "llvm_dylib_compon": [398, 400, 463], "llvm_enable_abi_breaking_check": 507, "llvm_enable_assert": [400, 507], "llvm_enable_bind": 400, "llvm_enable_dia_sdk": 400, "llvm_enable_doxygen": [400, 463], "llvm_enable_doxygen_qt_help": 400, "llvm_enable_eh": 400, "llvm_enable_expensive_check": 400, "llvm_enable_ffi": 400, "llvm_enable_id": 400, "llvm_enable_libpfm": 400, "llvm_enable_lld": 400, "llvm_enable_lto": [398, 400], "llvm_enable_p": 400, "llvm_enable_pedant": 400, "llvm_enable_project": [398, 400, 463, 535], "llvm_enable_rtti": 400, "llvm_enable_runtim": 398, "llvm_enable_sphinx": [400, 463], "llvm_enable_thread": 400, "llvm_enable_unwind_t": 400, "llvm_enable_warn": 400, "llvm_enable_werror": 400, "llvm_enable_z3_solv": 513, "llvm_enable_zlib": 400, "llvm_executionengin": [575, 576, 577, 578], "llvm_executionengine_orc_kaleidoscopejit_h": [546, 547, 548, 549, 550], "llvm_experimental_targets_to_build": 513, "llvm_external_": 400, "llvm_external_project": 400, "llvm_force_use_old_toolchain": 400, "llvm_gc_root_chain": 461, "llvm_gcc_dir": 534, "llvm_include_benchmark": 400, "llvm_include_dir": 400, "llvm_include_exampl": 400, "llvm_include_test": 400, "llvm_include_tool": 400, "llvm_install_binutils_symlink": 400, "llvm_install_doxygen_html_dir": 400, "llvm_install_ocamldoc_html_dir": 400, "llvm_install_sphinx_html_dir": 400, "llvm_install_toolchain_on": 398, "llvm_lib": 400, "llvm_libdir_suffix": 400, "llvm_library_vis": 461, "llvm_link_llvm_dylib": [398, 400], "llvm_linker_opt": 456, "llvm_lit_arg": 400, "llvm_lit_tools_dir": [400, 464], "llvm_map_components_to_libnam": 400, "llvm_map_components_to_librari": 400, "llvm_obj_root": [508, 534, 535], "llvm_on_unix": 525, "llvm_on_xyz": 525, "llvm_optimized_tablegen": [400, 463], "llvm_package_vers": 400, "llvm_parallel_compile_job": 400, "llvm_parallel_link_job": 400, "llvm_profdata_fil": [388, 400], "llvm_reverse_iter": 400, "llvm_revis": 400, "llvm_runtime_distribution_compon": 398, "llvm_scalar_opt": [575, 576, 577, 578], "llvm_site_config": [464, 535], "llvm_src_dir": 468, "llvm_src_root": [508, 534], "llvm_stackmap": 522, "llvm_svn_rw": 451, "llvm_sympart": 456, "llvm_tablegen": 400, "llvm_target": [575, 576, 577, 578], "llvm_target_arch": 400, "llvm_target_definit": 539, "llvm_targets_to_build": [398, 400, 453, 463, 464], "llvm_temporarily_allow_old_toolchain": 400, "llvm_tools_binary_dir": 400, "llvm_tripl": 424, "llvm_unreach": [404, 489, 507], "llvm_use_intel_jitev": 400, "llvm_use_link": 400, "llvm_use_newpm": 400, "llvm_use_oprofil": 400, "llvm_use_perf": 400, "llvm_use_sanit": 400, "llvm_yaml_is_document_list_vector": 544, "llvm_yaml_is_flow_sequence_vector": 544, "llvm_yaml_is_sequence_vector": 544, "llvm_yaml_strong_typedef": 544, "llvmanalysi": 508, "llvmasmpars": 508, "llvmbb": 545, "llvmbc": 393, "llvmbitcod": 455, "llvmbitread": 508, "llvmbuild": [404, 416, 545], "llvmbuilder": 575, "llvmcfiverifi": 399, "llvmconfig": 400, "llvmcontext": [479, 491, 492, 542, 546, 547, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "llvmcontextimpl": 542, "llvmcore": [472, 508, 514], "llvmcreatedisasm": 486, "llvmcreatesimplemcjitmemorymanag": 522, "llvmdevmeet": 465, "llvmdisasminstruct": 486, "llvmdisassembler_option_usemarkup": 486, "llvmdummi": 539, "llvmdummyasmprint": 539, "llvmdummycodegen": 539, "llvmfoldingbuild": 575, "llvmfuzzeriniti": 481, "llvmfuzzertestoneinput": 481, "llvmgccdir": 534, "llvmgettypekind": 455, "llvmgold": 466, "llvmgrep": 463, "llvmhello": 540, "llvminitializesparcasmprint": 539, "llvminitializesparctargetinfo": 539, "llvmlab": 509, "llvmlib": 508, "llvmlibthin": 426, "llvmmemorymanagerallocatedatasectioncallback": 522, "llvmorg": [463, 487, 509], "llvmpassnam": 400, "llvmpush": 509, "llvmremarkentrydispos": 515, "llvmremarkentryref": 515, "llvmremarkparsercreateyaml": 515, "llvmremarkparserdispos": 515, "llvmremarkparsergetnext": 515, "llvmremarkparserhaserror": 515, "llvmremarkparserref": 515, "llvmrock": 404, "llvmscalaropt": 508, "llvmsetdisasmopt": 486, "llvmsupport": [463, 508], "llvmtarget": 508, "llvmtargetmachin": 539, "llvmtop": 540, "llvmtransformutil": 508, "llvmtypekind": 455, "llvmtyperef": 455, "llvmweek": 487, "lma": [432, 542], "lmalloc": 445, "lmas": 432, "lmerg": 509, "lmyproj1": 509, "ln": [402, 466, 468, 471], "lnt": [471, 509, 514], "lo": [386, 479], "lo12": 456, "lo16": 402, "load": [31, 32, 33, 123, 124, 216, 217, 218, 310, 311, 312, 384, 386, 389, 390, 391, 392, 393, 397, 400, 404, 405, 406, 409, 410, 411, 416, 421, 431, 433, 437, 443, 445, 449, 451, 452, 454, 456, 458, 461, 462, 465, 474, 478, 480, 481, 482, 484, 486, 488, 489, 490, 491, 497, 505, 507, 509, 512, 513, 517, 519, 520, 522, 523, 524, 535, 537, 539, 541, 542, 545, 550, 557, 558, 559, 567, 568, 569, 578], "loadabl": [431, 461], "loadable_modul": 461, "loaded1": 519, "loaded2": 519, "loader": [386, 463, 484, 520, 554, 564], "loadinst": 404, "loadlal": 479, "loadlibraryperman": [548, 549, 550], "loadmodul": 491, "loadobject": 483, "loadregfromaddr": 539, "loadregfromstackslot": [402, 539], "loadsdnod": 507, "loc": [423, 456, 519, 524, 539, 559, 569], "loc0": 522, "loc1": 522, "local": [386, 389, 393, 394, 402, 404, 405, 410, 411, 418, 421, 430, 431, 445, 446, 452, 454, 457, 461, 468, 469, 470, 480, 483, 484, 489, 490, 493, 505, 507, 511, 512, 517, 519, 520, 523, 524, 527, 530, 535, 540, 544, 545, 551, 553, 554, 563, 564, 571, 572, 574, 575], "local_buff": 520, "local_release_x": 509, "local_unnamed_addr": [393, 456, 479], "localaddress": 479, "localdynam": [393, 479], "localescap": 454, "localexec": [393, 479], "localrecov": 454, "localrepo": 509, "locat": [7, 38, 51, 105, 136, 189, 236, 286, 318, 331, 384, 386, 389, 390, 398, 400, 402, 404, 408, 409, 412, 413, 416, 429, 433, 445, 450, 454, 456, 458, 459, 461, 462, 471, 474, 479, 480, 483, 484, 486, 490, 493, 500, 505, 507, 508, 514, 516, 517, 520, 522, 524, 525, 535, 538, 539, 544, 545, 556, 557, 566, 567, 577, 578], "lock": [390, 459, 479, 491, 507, 509, 517, 540], "lockstep": 509, "loclist": 423, "lod": 384, "lodg": 491, "log": [387, 389, 397, 405, 409, 452, 481, 502, 505, 506, 507, 509, 520, 534, 538, 541, 542, 543, 547], "log10": 538, "log2": 538, "log_arg1": 541, "logallunhandlederror": [549, 550], "logarithm": [393, 479, 507], "logcount": 495, "logerror": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "logerrorp": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "logerrorv": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "logfil": 541, "logger": [387, 516], "logic": [385, 402, 404, 405, 409, 429, 452, 462, 465, 473, 478, 479, 489, 495, 505, 507, 512, 520, 546, 552, 555, 556, 557, 562, 565, 566, 567, 574, 576, 577, 578], "long": [388, 389, 390, 395, 397, 401, 402, 404, 406, 409, 413, 415, 418, 429, 434, 447, 452, 454, 456, 457, 459, 460, 462, 463, 465, 473, 479, 499, 503, 506, 507, 514, 516, 519, 520, 524, 525, 530, 535, 539, 540, 544, 547, 550, 553, 554, 560, 563, 564, 570, 574, 579], "longer": [390, 396, 398, 402, 404, 413, 434, 446, 452, 457, 459, 461, 469, 475, 479, 481, 485, 491, 505, 507, 508, 509, 511, 513, 521, 540, 547, 554, 557, 564, 567, 578], "longjmp": [479, 560, 570, 579], "look": [387, 389, 390, 393, 400, 401, 402, 404, 405, 409, 423, 429, 433, 442, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 461, 462, 463, 464, 465, 466, 472, 473, 478, 479, 480, 482, 484, 485, 487, 488, 489, 490, 491, 492, 495, 499, 500, 503, 505, 506, 507, 508, 509, 511, 515, 518, 519, 520, 521, 522, 524, 527, 529, 530, 535, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578, 579], "lookup": [404, 423, 442, 463, 479, 489, 491, 493, 502, 503, 505, 507, 513, 527, 529, 539, 543, 546, 547, 553, 556, 560, 563, 566, 570, 574, 577, 578, 579], "lookup_funct": [574, 575, 576, 577, 578], "lookupflag": [548, 549, 550], "lookuptarget": [558, 568], "loooong": 509, "loop": [386, 389, 390, 402, 405, 429, 446, 449, 459, 461, 463, 465, 480, 481, 489, 492, 507, 512, 513, 519, 524, 533, 539, 545, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579], "loop_bb": [576, 577, 578], "loop_end": [37, 127, 223, 317], "loop_end_bb": [576, 577, 578], "loop_header_weight": 479, "loopbb": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "loopcond": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "loopdistribut": 536, "loopend": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 578], "loopendbb": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "loopfullunrol": 536, "loophead": [479, 555, 556, 565, 566], "loopid": 536, "loopinfo": [511, 540], "loopinfobas": 507, "loopinfowrapperpass": 540, "loopinterchang": 536, "looppass": 492, "looprerol": 533, "loopunrol": 536, "loopunrollandjam": 536, "loopunswitch": 505, "loopunswith": 459, "looputil": 540, "loopvector": [512, 519, 536], "loopvectorizationplann": 512, "loos": 531, "lore": 388, "lose": [465, 509, 519, 520, 527, 540, 560, 570, 579], "loss": [461, 507, 509, 519, 520], "lossless": 489, "lost": [385, 454, 457, 479, 519, 520, 536, 560, 570, 579], "lot": [388, 397, 401, 402, 404, 445, 452, 455, 457, 461, 462, 463, 468, 473, 475, 479, 484, 504, 505, 507, 509, 519, 520, 531, 534, 539, 540, 541, 544, 548, 551, 552, 553, 554, 556, 557, 559, 560, 562, 563, 564, 566, 567, 569, 570, 572, 573, 574, 575, 577, 578, 579], "love": 507, "low": [48, 205, 216, 218, 233, 328, 384, 385, 386, 391, 393, 402, 415, 429, 433, 436, 437, 445, 455, 461, 462, 479, 489, 490, 499, 507, 512, 513, 520, 524, 525, 529, 539, 543, 545, 552, 556, 557, 562, 566, 567, 573, 577, 578], "lower": [99, 381, 384, 389, 390, 392, 402, 404, 429, 430, 444, 446, 449, 454, 455, 457, 459, 477, 484, 491, 502, 511, 513, 517, 520, 522, 527, 538, 539, 552, 556, 557, 560, 562, 566, 567, 570, 573, 577, 578, 579], "lower16": 456, "lower_bound": 507, "lower_cas": 511, "loweralloc": 540, "lowerbound": 479, "lowercal": 542, "lowercas": [539, 554, 564, 575], "lowerfor": 465, "lowerfp_to_sint": 539, "lowerif": 465, "loweroper": 539, "lowerswitch": 465, "lowertypetest": 537, "lowest": [390, 392, 404, 450, 479, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "lpad": [449, 454, 479], "lpae": 390, "lpc0": 484, "lpechacek": 391, "lpm": 540, "lq": 429, "lqueue": 429, "lr": [402, 479, 484], "lrt": 446, "ls": [445, 517], "lsampl": 508, "lsb": [131, 402, 543], "lsb_extract": 479, "lsbit": 507, "lsda": 480, "lsl": 456, "lsr": 513, "lst": 529, "lsunit": 429, "lt": [418, 490, 529, 530], "ltmp": 456, "ltmp1": [484, 524], "lto": [393, 398, 449, 479, 480, 482, 492, 513, 515, 536, 537], "lto2": 479, "lto_codegen_add_modul": 482, "lto_codegen_add_must_preserve_symbol": 482, "lto_codegen_compil": 482, "lto_codegen_cr": 482, "lto_codegen_set_debug_model": 482, "lto_codegen_set_pic_model": 482, "lto_module_cr": 482, "lto_module_create_from_memori": 482, "lto_module_dispos": 482, "lto_module_get_num_symbol": 482, "lto_module_get_symbol_attribut": 482, "lto_module_get_symbol_nam": 482, "lto_module_is_object_fil": 482, "lto_module_is_object_file_for_target": 482, "lto_module_is_object_file_in_memori": 482, "lto_module_is_object_file_in_memory_for_target": 482, "lts": [452, 463], "lua": 461, "luckili": 461, "lud": 510, "lv": 489, "lvalu": 507, "lvaluerefer": 494, "lvaluerefthispoint": 494, "lvl": [511, 542], "lvm": [559, 569], "lwe": [0, 1, 2, 3], "lwn": 520, "lz": 479, "m0": [43, 44, 45, 61, 67, 68, 69, 70, 73, 75, 76, 77, 78, 130, 141, 147, 148, 149, 150, 151, 152, 153, 158, 159, 161, 162, 163, 164, 228, 229, 230, 244, 250, 251, 252, 253, 257, 259, 260, 261, 323, 324, 325, 341, 347, 348, 349, 350, 354, 356, 357, 358], "m1": [479, 491, 509], "m1writenmisc1": 539, "m2": [479, 491], "m3": 513, "m33": 513, "m35p": 513, "m35qpb": 542, "m4": 513, "m64": 453, "m7170": 386, "m_": 511, "m_func": 507, "m_op_sel": [0, 3, 38, 318], "m_op_sel_hi": [0, 3, 38, 318, 382], "mac": 404, "mach": [393, 428, 447, 479], "mach_universal_binari": 442, "machin": [386, 392, 399, 400, 404, 405, 408, 409, 410, 411, 418, 423, 426, 444, 446, 451, 452, 453, 461, 463, 464, 467, 468, 470, 471, 479, 480, 481, 483, 489, 490, 491, 495, 507, 509, 511, 513, 519, 527, 533, 538, 540, 543, 545, 550, 554, 559, 560, 564, 569, 570, 575, 579, 581], "machinebasicblock": [484, 507, 539], "machineblockfrequencyinfo": 394, "machinecodeemitt": 539, "machinecombin": 465, "machineconstantpool": [402, 484], "machineconstantpoolvalu": 484, "machinecs": 465, "machineframeinfo": 402, "machinefunct": [465, 484, 507, 511, 519], "machinefunctioninfo": [402, 484], "machinefunctionpass": [492, 539, 542], "machinefunctionproperti": 465, "machineinstr": [410, 411, 458, 465, 511, 527, 535, 539], "machineinstrbuild": 465, "machineirbuild": 465, "machinememoperand": [390, 465], "machinemoduleinfo": 484, "machineoperand": [402, 511, 539], "machinepassregistri": 540, "machinepassregistrynod": 540, "machinepipelin": 513, "machineregisterinfo": [402, 465, 511], "machineri": [473, 534], "machineverif": 513, "macho": [393, 402, 410, 432, 437, 483, 491, 515, 522], "machoobjectfil": 507, "macinfo": 479, "maco": [400, 413, 446, 451, 463, 481, 492, 507, 533, 535, 540], "macosx10": 479, "macport": 504, "macro": [400, 404, 409, 418, 423, 443, 445, 446, 450, 454, 479, 481, 513, 527, 531, 539, 540, 554, 564, 575], "macronam": 530, "maddld": 513, "made": [389, 392, 393, 396, 399, 402, 404, 446, 452, 454, 457, 458, 459, 462, 463, 469, 472, 473, 479, 485, 488, 489, 494, 505, 507, 508, 509, 511, 517, 518, 519, 520, 521, 524, 527, 528, 531, 540, 544, 545, 554, 555, 557, 560, 564, 565, 567, 570, 576, 578, 579], "mafdc": 513, "mag": 479, "magic": [390, 413, 463, 479, 481, 499, 507, 515, 519, 556, 566, 577], "magnif": [551, 556, 561, 566, 572, 577], "magnitud": 479, "mail": [403, 404, 448, 452, 460, 463, 467, 472, 481, 485, 487, 506, 508, 513, 514, 516, 521, 524, 541, 542, 560, 570, 579], "mailer": 452, "mailto": 520, "main": [392, 394, 396, 398, 400, 402, 404, 418, 424, 429, 431, 436, 437, 442, 445, 446, 449, 450, 451, 452, 454, 460, 463, 464, 465, 466, 467, 470, 472, 477, 478, 479, 481, 482, 485, 490, 491, 505, 507, 508, 509, 511, 513, 515, 519, 521, 527, 529, 531, 535, 537, 539, 540, 541, 542, 545, 546, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579], "main_loop": [573, 574, 575, 576, 577, 578], "mainfun": 550, "mainjd": 491, "mainlin": [452, 472, 509], "mainloop": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "mainsym": 491, "mainsymbolnam": 491, "maintain": [386, 389, 390, 393, 396, 400, 401, 402, 404, 445, 446, 448, 452, 453, 455, 461, 472, 479, 489, 491, 497, 499, 507, 509, 511, 517, 519, 522, 525, 531, 540, 543], "mainten": [452, 476, 482], "maj": 514, "major": [389, 402, 404, 405, 450, 454, 457, 459, 463, 464, 465, 472, 479, 489, 491, 492, 493, 495, 504, 505, 507, 509, 512, 513, 519, 531, 535, 539, 557, 567, 578], "majorvers": 495, "make": [384, 386, 387, 388, 389, 390, 392, 393, 396, 397, 399, 400, 401, 402, 403, 405, 406, 409, 410, 412, 413, 416, 417, 418, 424, 429, 431, 438, 440, 444, 445, 446, 448, 449, 450, 451, 453, 454, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 482, 485, 487, 488, 489, 490, 491, 492, 495, 502, 504, 505, 506, 508, 509, 511, 512, 513, 514, 516, 517, 519, 520, 521, 522, 523, 524, 525, 528, 529, 531, 533, 534, 535, 536, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "make_error": 507, "make_error_cod": 507, "make_fallible_end": 507, "make_fallible_itr": 507, "make_pair": [489, 557, 558, 559, 567, 568, 569], "make_rang": 507, "make_shar": [548, 549], "make_uniqu": [491, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "makefil": [400, 402, 416, 417, 461, 463, 474, 482, 535, 545, 552, 553, 562, 563, 574], "makelight": 404, "maken": 550, "makestruct": 446, "maketir": 404, "makeup": 507, "makevehicl": 404, "malform": [397, 446, 481, 502, 505, 507], "malici": 520, "malloc": [449, 461, 481, 507, 517, 540, 545, 560, 570, 579], "malloc_limit_mb": 481, "mallocbench": 534, "malyutin": 511, "malyutindistinguish": 511, "man": [400, 445, 535, 545], "manag": [386, 397, 400, 403, 405, 406, 429, 446, 457, 458, 460, 461, 462, 463, 464, 467, 472, 479, 480, 483, 490, 492, 507, 513, 514, 520, 522, 524, 536, 539, 540, 546, 547, 548, 549, 550, 554, 555, 556, 557, 560, 564, 565, 566, 567, 570, 578, 579], "mandat": [402, 509], "mandatori": [384, 459, 464, 479, 507, 513, 515, 539], "mandel": [556, 566, 577], "mandelbrot": [551, 556, 561, 566, 572, 577], "mandelconverg": [556, 566, 577], "mandelhelp": [556, 566, 577], "mangl": [404, 408, 419, 432, 442, 452, 479, 491, 493, 515, 519, 546, 547, 549, 550], "mangleandintern": [491, 546, 547], "manglednam": [548, 549, 550], "manglednamestream": [548, 549, 550], "mangler": [539, 546, 548, 549, 550], "mani": [388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 401, 402, 404, 405, 421, 429, 431, 445, 446, 454, 455, 457, 458, 460, 461, 462, 463, 464, 470, 471, 473, 474, 477, 478, 479, 481, 488, 490, 491, 495, 499, 505, 506, 507, 509, 510, 511, 513, 514, 519, 520, 522, 524, 525, 534, 535, 538, 539, 540, 541, 543, 544, 546, 551, 552, 553, 554, 555, 556, 557, 560, 562, 563, 564, 565, 566, 567, 570, 572, 573, 574, 575, 576, 577, 578, 579], "manifest": 479, "manipul": [402, 404, 408, 416, 431, 433, 457, 475, 507, 512, 517, 537, 557, 567, 578], "manner": [384, 386, 390, 402, 403, 450, 452, 454, 462, 479, 492, 507, 513, 520, 524, 539], "manpag": 401, "mantain": 509, "mantissa": 479, "manual": [386, 397, 399, 400, 402, 404, 443, 448, 452, 459, 461, 462, 463, 465, 467, 472, 473, 491, 503, 506, 509, 513, 519, 520, 524, 531, 533, 535, 538, 539, 540, 541, 545, 546, 579], "map": [387, 389, 393, 404, 407, 409, 418, 420, 429, 432, 433, 436, 437, 445, 455, 456, 465, 480, 483, 488, 489, 490, 491, 493, 498, 502, 503, 509, 517, 519, 520, 527, 537, 538, 541, 542, 543, 545, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578, 581], "mapopt": 544, "mappingnorm": 544, "mappingnormalizationheap": 544, "mappingtrait": 544, "maprequir": 544, "mapsectionaddress": 483, "maptag": 544, "mapvector": 404, "march": [405, 410, 411, 429, 470, 471, 474, 512, 513, 519, 520, 558, 568], "margin": 520, "mark": [386, 388, 390, 393, 399, 402, 404, 409, 424, 429, 431, 446, 449, 450, 451, 454, 456, 458, 459, 461, 463, 472, 479, 485, 486, 489, 494, 505, 507, 520, 522, 524, 531, 535, 539, 541, 543], "markdown": 485, "markdownquickstarttempl": 485, "marker": [402, 404, 409, 445, 452, 507, 524, 543], "markup": [386, 404, 481, 485, 521], "marshal": 522, "mask": [48, 222, 233, 316, 328, 384, 385, 386, 390, 402, 404, 405, 459, 475, 512, 520, 527, 539, 543, 544], "maskedbitset": 544, "maskedbitsetcas": 544, "maski": 479, "maski64": 479, "maskipopcnt": 479, "masm": [495, 502], "massag": [404, 469], "massiv": [421, 481, 527, 545], "master": [452, 463, 467, 503, 506, 508, 509, 510, 520, 545], "match": [384, 385, 386, 387, 390, 393, 395, 397, 398, 401, 404, 406, 408, 409, 418, 420, 421, 423, 425, 429, 433, 434, 445, 446, 449, 450, 454, 455, 460, 461, 462, 463, 465, 473, 478, 479, 481, 482, 484, 493, 495, 503, 505, 507, 509, 513, 515, 517, 519, 524, 527, 529, 530, 535, 539, 540, 542, 543, 544, 551, 553, 554, 561, 563, 564, 572, 573, 574, 575, 576, 577, 578], "matcher": [402, 405, 444, 481, 527], "matchinstructionimpl": 402, "materi": [403, 465, 489, 491, 512, 519], "materializationrespons": [491, 547], "materializationunit": [491, 547], "math": [401, 404, 410, 411, 445, 459, 490, 519, 538, 545, 551, 554, 556, 561, 564, 566, 572, 577], "mathemat": [457, 479, 489, 490, 552, 562, 573], "matrix": 461, "matt": 511, "matter": [390, 404, 452, 455, 479, 522, 540, 575], "matthew": 509, "matthewsrevnum": 509, "mattr": [405, 410, 411, 432, 539, 558, 568], "matur": [445, 459, 461, 520], "max": [386, 409, 429, 434, 445, 446, 450, 479, 481, 520, 533, 542], "max_dx10": 386, "max_flat_workgroup_s": 386, "max_fp16": 386, "max_int_bit": 507, "max_len": [460, 481], "max_total_tim": 481, "max_vgpr": 386, "maxatomicsizeinbitssupport": 390, "maxflatworkgroups": 386, "maxim": [393, 398, 411, 479, 481, 491, 551, 572], "maximum": [386, 389, 390, 394, 400, 402, 407, 415, 423, 429, 445, 465, 481, 489, 507, 517], "maxscalar": 465, "maxsiz": 404, "may": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 33, 36, 37, 39, 40, 41, 42, 49, 99, 102, 105, 111, 112, 113, 114, 115, 116, 124, 126, 127, 128, 129, 134, 185, 186, 189, 195, 196, 197, 202, 203, 204, 205, 217, 218, 221, 223, 224, 225, 226, 227, 234, 282, 283, 286, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 311, 312, 315, 317, 319, 320, 321, 322, 329, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 418, 423, 424, 425, 429, 430, 431, 432, 434, 436, 437, 445, 446, 448, 449, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 475, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493, 495, 499, 500, 502, 503, 505, 506, 507, 508, 509, 511, 512, 513, 516, 517, 519, 520, 522, 523, 524, 525, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 572, 574, 576, 577, 578, 579], "may_throw": 454, "mayalia": [389, 479], "mayb": [455, 481, 520, 527, 541, 560, 570, 579], "maybe_instru": 541, "maybeoverridden": 489, "maybevalu": 445, "mayfail": 507, "mayfail2": 507, "mayload": [429, 531], "mayreadfrommemori": 390, "maystor": [429, 531], "maytrap": 479, "maywritetomemori": [390, 507], "mb": [481, 510, 544], "mbb": [402, 539], "mbbi": 402, "mc": [386, 451, 456, 463, 480, 483, 484, 535], "mca": 408, "mcasmpars": 402, "mcasmstream": 402, "mccfiinstruct": 484, "mccodeemitt": [402, 527], "mcdesc": 539, "mcdisassembl": 402, "mce": 539, "mcexpr": 402, "mcinst": [429, 527], "mcinstlow": 402, "mcinstrdesc": 465, "mcjit": [459, 491, 545, 546, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569], "mclabel": 402, "mcobjectstream": 402, "mcode": 456, "mcoperand": 402, "mcpu": [386, 410, 411, 424, 429, 432, 468, 471, 490, 535, 539], "mcregaliasiter": 402, "mcsectioncoff": 402, "mcsectionelf": 402, "mcsectionmacho": 402, "mcstreamer": 461, "mcsymbol": 461, "mctargetdesc": 527, "mctargetstream": 402, "md": [461, 479, 481, 485, 510, 520], "md5": [418, 450, 452], "md_prof": 395, "mdnode": [395, 479, 536], "mdstring": [395, 479], "mdtupl": 479, "me": [404, 448, 452, 480, 485, 521, 554, 555, 558, 564, 565, 568, 575, 576], "meabi": 410, "mean": [36, 42, 99, 126, 129, 185, 205, 216, 218, 221, 222, 227, 282, 315, 316, 322, 381, 382, 384, 385, 386, 389, 391, 392, 393, 396, 398, 400, 401, 402, 403, 404, 405, 409, 413, 429, 430, 434, 445, 452, 454, 456, 459, 461, 462, 463, 465, 466, 471, 472, 473, 477, 479, 481, 482, 484, 488, 489, 491, 492, 495, 498, 499, 500, 502, 505, 506, 507, 508, 509, 511, 516, 517, 519, 520, 524, 525, 527, 528, 529, 530, 531, 533, 536, 539, 540, 544, 547, 551, 553, 554, 555, 557, 559, 560, 561, 563, 564, 565, 567, 569, 570, 572, 574, 575, 576, 578, 579], "meaning": [386, 404, 411, 443, 446, 461, 462, 479, 485, 507, 521, 524, 527, 543], "meaningless": 507, "meant": [404, 443, 450, 463, 464, 469, 479, 485, 488, 507, 514, 516, 517, 519, 521, 529, 530, 545], "measur": [391, 398, 400, 413, 424, 429, 507, 520, 533, 543], "meat": 575, "mechan": [386, 393, 399, 402, 409, 454, 459, 461, 466, 478, 479, 480, 483, 490, 491, 507, 516, 519, 520, 524, 525, 530, 534, 537, 538, 540, 545, 574], "med": 542, "median": 520, "mediat": [389, 516], "medium": [411, 479], "meet": [386, 402, 403, 452, 463, 465, 489, 512, 516, 540, 545], "megabyt": 406, "mehdi": 511, "meltdown": 520, "mem": [449, 486, 505, 536, 573, 574, 575, 576, 577, 578], "mem2ref": 524, "mem2reg": [459, 461, 507, 519, 557, 567, 578], "mem_address": 402, "mem_not_nul": 449, "mem_ord": 386, "memalign": 517, "memarg": 477, "member": [401, 402, 403, 404, 413, 426, 431, 432, 433, 446, 456, 473, 479, 482, 483, 491, 493, 502, 505, 511, 519, 529, 533, 537, 538, 539, 543, 544, 546, 547, 548], "memberlist": 539, "membership": [454, 507], "memcheck": [409, 535], "memcmp": 513, "memcpi": [389, 390, 520], "memcpyopt": 390, "memdep": 389, "memfenc": 386, "memop": 434, "memor": 404, "memori": [5, 9, 10, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 36, 44, 45, 50, 51, 99, 103, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 120, 131, 135, 136, 185, 187, 191, 192, 195, 196, 197, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 229, 230, 235, 236, 282, 284, 288, 289, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 315, 324, 325, 330, 331, 381, 384, 385, 390, 392, 400, 402, 404, 406, 407, 409, 421, 424, 431, 434, 446, 449, 451, 454, 455, 457, 458, 461, 462, 465, 468, 474, 477, 480, 481, 482, 483, 484, 486, 488, 490, 491, 492, 513, 515, 517, 518, 519, 520, 522, 523, 524, 527, 537, 538, 539, 540, 541, 543, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 568, 569, 570, 572, 579], "memory_order_acq_rel": [390, 479], "memory_order_acquir": [390, 479], "memory_order_consum": 390, "memory_order_relax": [390, 479], "memory_order_releas": [390, 479], "memory_order_seq_cst": [390, 479], "memoryaccess": 488, "memorybuff": [404, 491], "memorydef": 488, "memorydependenceanalysi": 488, "memorydependencyanalysi": 390, "memoryphi": 488, "memorysanit": [479, 481], "memoryssa": [389, 545], "memoryssawalk": 488, "memoryus": 488, "memorywithorigin": 400, "memri": [402, 539], "memrr": 539, "memset": [390, 505, 550], "memtagsanit": 479, "mental": [398, 403, 449, 507], "mention": [386, 392, 393, 400, 402, 404, 445, 469, 473, 478, 479, 487, 489, 493, 498, 507, 509, 516, 518, 519, 524, 529, 545], "mere": [462, 464, 479, 505, 506, 520, 524, 553, 563, 574], "merg": [388, 389, 400, 402, 405, 418, 431, 437, 446, 450, 452, 456, 461, 463, 465, 469, 479, 482, 488, 507, 514, 519, 520, 533, 538, 545, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "mergabl": 505, "merge_bb": [576, 577, 578], "merge_control_fil": 481, "mergebb": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "mergefunct": 545, "merger": 489, "merit": 404, "mesa": 386, "mesa3d": 386, "mess": 505, "messag": [42, 99, 129, 185, 227, 282, 322, 381, 386, 397, 400, 401, 404, 405, 409, 413, 424, 427, 429, 445, 454, 463, 470, 474, 480, 481, 492, 506, 507, 509, 517, 527, 531, 540, 544, 545, 558, 568], "messi": 402, "met": [402, 461, 479, 489, 517], "meta": [402, 432, 461, 472, 479, 507, 513, 519, 522, 527, 531], "metadata": [393, 394, 402, 410, 452, 459, 461, 462, 465, 480, 484, 489, 505, 515, 535, 545, 551, 559, 561, 569, 572], "metadatarecord": 543, "metal": [470, 479, 513], "metarenam": 397, "metasyntact": 397, "metatada": 395, "metdata": 479, "method": [397, 398, 399, 401, 402, 405, 445, 455, 461, 462, 465, 470, 472, 473, 474, 475, 477, 479, 480, 483, 489, 491, 506, 519, 520, 522, 524, 527, 534, 539, 544, 546, 547, 548, 552, 553, 554, 555, 557, 562, 563, 564, 565, 567, 574, 575, 576, 578], "methodbodi": 539, "methodolog": 454, "methodproto": 539, "metric": [394, 423, 472, 481, 520, 533, 540, 542], "meyer": 404, "mf": [402, 492, 511], "mfc": 495, "mfctypeserverindex": 495, "mfenc": 390, "mfloat": [470, 471], "mflop": 538, "mfpu": 470, "mfs": 445, "mft": 503, "mgrid331": 510, "mi": [402, 465, 484, 511, 513, 539], "mi25": 386, "mi50": 386, "mi6": 386, "mi60": 386, "mi8": 386, "mib": 456, "micro": [386, 404, 429, 510, 520], "microbenchmark": [520, 533], "microcod": 386, "microcontrol": 447, "microopbuffers": 429, "microphon": 487, "microprocessor": [402, 479, 539], "microsecond": 543, "microsoft": [402, 404, 426, 433, 445, 447, 456, 467, 477, 479, 495, 499, 502, 503, 519, 520, 545], "microsoftcompilerspectremitig": 520, "mid": [459, 477, 479, 519], "middl": [401, 404, 452, 461, 477, 479, 499, 524], "might": [389, 390, 391, 395, 396, 397, 400, 402, 403, 404, 405, 413, 420, 429, 445, 452, 453, 457, 459, 460, 461, 463, 464, 465, 471, 472, 473, 478, 479, 480, 481, 485, 486, 489, 491, 499, 500, 502, 506, 507, 508, 509, 510, 517, 519, 520, 521, 524, 525, 527, 528, 536, 538, 539, 544, 555, 558, 560, 565, 568, 570, 576, 577, 578, 579], "migit": 509, "migrat": [386, 389, 405, 452, 461, 463, 513], "mileag": 487, "mileston": 489, "mill": 445, "million": [479, 507], "millisecond": 542, "mime": 464, "mimic": [382, 404, 436, 437, 509], "min": [99, 185, 282, 381, 386, 433, 434, 437, 446, 479, 481, 514, 520, 533, 542], "min_dx10": 386, "min_int_bit": 507, "mind": [404, 452, 507, 517, 552, 557, 562, 567, 573, 578], "mingw": [400, 402, 464, 513], "mingw32": [402, 467, 535], "mingw32msvc": 402, "mingw64": 463, "mini": 487, "minim": [386, 388, 390, 398, 402, 404, 407, 411, 413, 450, 462, 465, 479, 481, 482, 491, 507, 508, 519, 520, 522, 537, 543, 552, 556, 562, 566, 573, 577], "minimaldebuginfo": 500, "minimize_crash": 481, "minimum": [386, 400, 404, 406, 452, 455, 463, 465, 472, 474, 515, 519, 520, 522, 533, 539, 542, 548, 552, 562, 573], "minor": [402, 404, 452, 472, 489, 495, 504, 507, 560, 570, 579], "minor_process": 520, "minorvers": 495, "minscalar": 465, "minscalarsamea": 465, "minsiz": [393, 479], "minsizerel": [398, 400, 463], "minus": [385, 386, 479, 518], "minut": 463, "mioperandinfo": 539, "mip": [390, 402, 431, 459, 463, 471, 479, 511, 517, 539, 541], "mips16": 390, "mips32": 390, "mips64": 541, "mips64el": 541, "mipsel": 541, "mir": 545, "mirror": [384, 460, 461, 555, 556, 565, 566, 576, 577], "mis": [386, 402, 406, 474, 520], "misalign": 517, "misbehav": 514, "miscellan": [413, 479, 513], "miscommun": 452, "miscompil": [396, 406, 452, 463, 479, 510, 513], "misinterpret": [397, 404], "mislead": [404, 519], "mismatch": [386, 392, 434, 469, 470, 479, 486, 517, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "misnam": 402, "misoptim": 395, "mispredict": 520, "misread": 404, "misrepres": 519, "miss": [390, 397, 404, 429, 459, 466, 470, 471, 479, 491, 507, 510, 511, 515, 519, 523, 524, 530, 534, 536, 538, 552, 556, 557, 562, 566, 567, 573, 577, 578], "misspecul": 520, "mistak": [403, 404, 459], "mistaken": [554, 564, 575], "mistyp": 404, "misunderstood": [457, 545], "misus": 535, "mit": [452, 520], "mitig": [429, 461, 479, 511, 517, 520, 545], "mix": [390, 401, 402, 404, 405, 462, 466, 478, 482, 507, 512, 519, 520, 529], "mixtur": [442, 520, 529], "mkdir": [400, 463, 466, 481, 509, 533, 535, 542], "ml": [461, 510, 573, 574, 575, 576, 577, 578], "mli": 575, "mlimit": 406, "mllvm": [429, 492, 538], "mm0": [402, 529, 531], "mm1": [529, 531], "mm2": [529, 531], "mm3": [529, 531], "mm4": [529, 531], "mm5": [529, 531], "mm6": [529, 531], "mm7": [529, 531], "mmi": 484, "mmio": 479, "mmx": [402, 479, 513, 539], "mnemon": [539, 541], "mnemonicalia": 402, "mno": 386, "mo": 519, "mo1": 539, "mo_cimmedi": 484, "mo_registermask": 402, "mobil": 386, "mock": [507, 535], "mod": [389, 433, 479, 507, 529, 539], "mode": [36, 52, 84, 126, 221, 222, 315, 316, 332, 366, 384, 385, 391, 393, 395, 400, 405, 409, 413, 417, 418, 424, 427, 431, 433, 434, 445, 446, 452, 460, 461, 468, 470, 479, 494, 502, 507, 514, 515, 517, 520, 530, 531, 533, 535, 539, 542, 543, 545, 557, 558, 567, 568, 578], "model": [390, 393, 396, 401, 402, 404, 409, 411, 424, 445, 449, 452, 453, 454, 456, 457, 461, 462, 474, 476, 477, 482, 491, 507, 512, 513, 519, 520, 527, 536, 538, 539, 544, 545, 552, 553, 557, 558, 562, 563, 567, 568, 573, 574, 578], "moder": [404, 452, 506, 507, 516], "modern": [401, 404, 446, 447, 451, 457, 468, 487, 493, 494, 495, 498, 500, 507, 520, 538, 551, 560, 570, 572, 579], "modest": 404, "modfilecount": 495, "modfilecountarray": 495, "modi": [433, 498], "modif": [386, 397, 399, 413, 431, 434, 445, 453, 479, 489, 507, 519, 520, 539, 540, 550, 559, 569], "modifi": [0, 1, 2, 3, 4, 38, 39, 40, 41, 72, 102, 128, 157, 186, 205, 216, 218, 224, 225, 226, 256, 283, 318, 319, 320, 321, 353, 389, 390, 397, 400, 401, 402, 404, 431, 449, 454, 455, 463, 464, 465, 473, 476, 478, 481, 486, 488, 490, 492, 494, 499, 502, 505, 506, 507, 509, 510, 512, 519, 520, 524, 527, 533, 534, 539, 540, 542, 546, 550, 554, 557, 564, 567, 578], "modifier0": [383, 386], "modifier1": [383, 386], "modindic": 495, "modinfo": 495, "modinfos": 495, "modistream": 498, "modr": 402, "modref": [389, 390, 529], "modrefresult": 389, "modrefv": 529, "modul": [389, 393, 397, 400, 402, 404, 408, 409, 415, 421, 429, 443, 457, 459, 461, 463, 472, 480, 481, 482, 483, 489, 490, 491, 492, 503, 510, 519, 522, 523, 524, 527, 533, 534, 535, 537, 539, 542, 546, 548, 549, 550, 553, 554, 555, 556, 557, 559, 563, 564, 565, 566, 567, 569, 574, 575, 576, 577, 578], "modular": [389, 443, 465, 478, 491, 520, 540], "modulehandl": 548, "modulehandlet": 548, "moduleid": [535, 553, 563, 574], "moduleindex": 495, "modulelevelpass": 540, "modulenam": 495, "modulepass": [389, 492], "modulesummaryindex": 479, "modulesymstream": 495, "modulo": [402, 479, 519], "molest": 479, "moment": [429, 449, 461, 479, 484, 524, 548, 574], "monitor": [389, 479, 509, 533], "monolith": [452, 465, 509, 518], "monospac": [485, 521], "monoton": [386, 472, 479, 509], "month": [452, 472, 481, 545], "more": [123, 382, 383, 384, 385, 386, 389, 390, 393, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 409, 410, 413, 415, 418, 423, 424, 429, 433, 434, 436, 437, 443, 445, 446, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 491, 495, 499, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 524, 525, 527, 528, 529, 530, 531, 533, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "moreelementsfor": 465, "moreelementsif": 465, "moreelementstonextmultipl": 465, "moreelementstonextpow2": 465, "moreov": [385, 402, 465, 479, 505], "most": [383, 386, 387, 388, 389, 390, 392, 396, 398, 400, 401, 402, 404, 405, 409, 415, 417, 429, 431, 433, 441, 443, 444, 445, 446, 449, 451, 452, 454, 455, 457, 459, 460, 461, 462, 463, 465, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 495, 502, 504, 506, 507, 508, 509, 510, 511, 513, 514, 517, 519, 520, 521, 522, 524, 525, 527, 530, 531, 533, 534, 536, 539, 540, 542, 543, 545, 547, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 573, 574, 576, 577, 578, 579], "motion": [389, 463, 479, 480, 488, 540], "motiv": [476, 479, 487, 547, 555, 557, 565, 567, 576, 578], "motohiro": 402, "mount": [391, 453, 463], "mous": 542, "mov": [390, 402, 405, 456, 479, 490, 513], "mov32mr": 484, "mov32r0": 519, "mov32ri": [402, 484], "mov32rm": [484, 519], "mov64ri": [484, 539], "mov64rm": 484, "movabsq": [518, 522], "movapd": 405, "move": [386, 389, 390, 391, 396, 400, 402, 404, 413, 429, 449, 452, 460, 461, 463, 465, 472, 479, 491, 505, 507, 512, 519, 520, 522, 524, 528, 531, 540, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 576, 579], "movhpd": 405, "movi": 404, "movl": [405, 479, 520, 522, 524], "movnt": 479, "movq": [520, 522, 524], "movsd": 405, "movslq": 522, "movsq": 402, "movsx": 402, "movsx16rm8w": 402, "movsx16rr8w": 402, "movsx32rm16": 402, "movsx32rr16": 402, "movsx32rr8": 402, "movsx64rr16": 402, "movsx64rr32": [402, 424, 519], "movsx64rr8": 402, "movt": 456, "movw": [456, 479], "movz": [392, 479], "mozilla": 511, "mppassmanag": 542, "mr": 529, "mri": [402, 465, 511], "mrm0m": 539, "mrm0r": 539, "mrm1m": 539, "mrm1r": 539, "mrm2m": [529, 539], "mrm2r": [529, 539], "mrm3m": 539, "mrm3r": 539, "mrm4m": 539, "mrm4r": 539, "mrm5m": 539, "mrm5r": 539, "mrm6m": 539, "mrm6r": 539, "mrm7m": 539, "mrm7r": 539, "mrmdestmem": 539, "mrmdestreg": [531, 539], "mrminitreg": 539, "mrmsrcmem": 539, "mrmsrcreg": 539, "mrt": [81, 169, 266, 363], "mrts": [81, 169, 266, 363], "mrtz": [72, 81, 157, 169, 256, 266, 353, 363], "ms": [456, 481, 548], "ms_abi_tripl": 535, "msa": 479, "msan": 481, "msb": [385, 402, 543], "msb_extract": 479, "msbuild": [400, 464], "msdn": [404, 426, 520], "msec": 538, "msf": [495, 500], "msg": [0, 1, 2, 3, 479], "msg_get_doorbel": [42, 322], "msg_gs": [42, 129, 227, 322], "msg_gs_alloc_req": [42, 322], "msg_gs_done": [42, 129, 227, 322], "msg_interrupt": [42, 129, 227, 322, 386], "msg_sysmsg": [42, 129, 227, 322], "msgpack": 386, "msp430": [402, 463, 479], "mspdb": 495, "mspdbsrv": 495, "mspdbxxxx": 495, "msr": 520, "msse4": 517, "msvc": [400, 402, 404, 454, 456, 479, 495, 507, 519, 520], "mte": [479, 513], "mthumb": 470, "mtripl": [405, 410, 411, 429, 460, 479, 484, 519], "mtune": 513, "mtype": 386, "mu": 509, "much": [386, 389, 390, 391, 397, 398, 402, 404, 413, 415, 426, 433, 445, 446, 452, 453, 455, 457, 459, 463, 465, 466, 467, 469, 471, 473, 474, 477, 479, 482, 485, 488, 490, 491, 492, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 516, 519, 520, 521, 522, 524, 525, 530, 531, 535, 539, 540, 541, 542, 544, 547, 552, 553, 554, 557, 560, 562, 563, 564, 567, 570, 573, 574, 575, 578, 579], "mul": [384, 405, 462, 490, 505, 519, 529, 530, 553, 563, 574], "mul_ri": 529, "mul_rr": 529, "mullin": 386, "multhread": 507, "multi": [384, 386, 404, 436, 445, 453, 465, 481, 503, 507, 529, 545], "multi_v": 445, "multiarch": [470, 471], "multiclass": [531, 539], "multiclassid": 530, "multiclassobject": 530, "multicor": 390, "multidef": 529, "multidimension": 479, "multilib": [453, 471], "multilin": [409, 529, 530], "multimap": 507, "multipl": [385, 386, 387, 389, 390, 391, 393, 394, 401, 402, 404, 405, 407, 413, 418, 420, 423, 425, 429, 430, 431, 442, 445, 446, 448, 450, 452, 456, 459, 462, 463, 465, 467, 473, 477, 478, 479, 481, 483, 484, 488, 489, 491, 495, 503, 505, 506, 508, 512, 513, 519, 520, 522, 524, 525, 527, 529, 530, 531, 533, 535, 536, 537, 538, 539, 540, 541, 542, 544, 552, 553, 554, 555, 556, 559, 562, 563, 564, 565, 566, 569, 573, 574, 575, 576, 577], "multipli": [384, 386, 394, 402, 429, 434, 446, 455, 479, 480, 505, 507, 519, 520], "multiplicand": 479, "multiprocessor": [461, 540], "multirepo": 509, "multiset": 507, "multisourc": [452, 474, 510, 519, 533, 534], "multithread": [461, 507, 542], "multmp": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "multmp1": [553, 563, 574], "multmp2": [553, 563, 574], "multmp3": [553, 563, 574], "multmp4": [554, 564, 575], "multplic": 479, "mummergpu": 510, "mung": [462, 505], "munger_struct": 462, "musl": 481, "must": [4, 29, 30, 36, 37, 42, 46, 48, 52, 53, 72, 85, 99, 102, 121, 122, 126, 127, 129, 132, 157, 185, 186, 214, 215, 221, 223, 227, 231, 233, 256, 282, 283, 308, 309, 315, 317, 322, 326, 328, 332, 333, 353, 367, 381, 384, 385, 386, 387, 388, 390, 392, 393, 400, 402, 404, 405, 409, 413, 418, 424, 429, 446, 449, 452, 454, 455, 456, 457, 460, 461, 462, 463, 465, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484, 488, 489, 490, 491, 492, 499, 500, 505, 506, 507, 508, 509, 511, 512, 513, 517, 519, 520, 521, 522, 524, 525, 527, 529, 530, 531, 534, 535, 536, 537, 539, 540, 543, 544, 546, 547, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 576, 577, 578], "mustalia": [389, 479], "mustquot": 544, "musttail": 479, "mutabl": [479, 551, 555, 556, 558, 559, 565, 566, 568, 569, 571, 572, 576, 577, 580], "mutat": [387, 404, 461, 465, 505, 507, 547, 556, 558, 559, 566, 568, 569, 577], "mutatestrictfptofp": 387, "mutex": [390, 546], "mutual": [428, 445, 524, 551, 561, 572, 574], "mv": 463, "mve": 513, "mvt": [402, 465, 539], "mxnack": 386, "my": [389, 452, 461, 463, 490, 509, 533, 540, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "my86_64flag": 544, "my86flag": 544, "my_addit": 519, "my_build_dir": 515, "my_fil": 492, "my_fmad": 490, "my_funct": 490, "my_function_fast": 490, "my_function_precis": 490, "my_fuzz": 481, "my_kernel": 490, "my_key": 404, "my_list": 401, "my_list_of_numb": 401, "my_local_branch": 509, "my_local_tag": 509, "my_opt_diff": 515, "my_opt_yaml1": 515, "my_opt_yaml2": 515, "my_other_fil": 492, "my_project": 509, "my_str": 401, "my_valu": 404, "my_yaml_fil": 515, "myalloc": 449, "myapp": 491, "myawesomeproject": 479, "mybarflag": 544, "mybison": 534, "myblock": 484, "myboolean": 519, "mybranch": 509, "mybuilddir": 400, "mycustomtyp": 544, "mydevic": 533, "mydoclist": 544, "mydoclisttyp": 544, "mydoctyp": 544, "myflag": 544, "myfoobar": 507, "myfooflag": 544, "myfunct": 490, "mygc": 461, "mygcprint": 461, "myglob": 519, "myinitprng": 481, "mylist": 544, "mylistel": 544, "mymachinefunctionpass": 492, "mymaptyp": 544, "mynewpass": 406, "myobject": 519, "myocamlbuild": [574, 575, 576, 577, 578], "myocyt": 510, "myownp3sett": 519, "mypass": [507, 540], "mypassnam": 507, "mypassopt": 540, "mypatch": 506, "myproj": 509, "myregalloc": 540, "myregisteralloc": 540, "myremot": 550, "myrepo": 509, "myseq": 544, "myseqel": 544, "myservert": 550, "myset": 404, "mysteri": 462, "mystic": [560, 570, 579], "mystringtyp": 544, "mystruct": 462, "mytarget": 481, "mytyp": 479, "mytype1": 544, "mytype2": 544, "myvar": 462, "mzvector": 513, "n1": [391, 509, 539], "n16": 490, "n1720": 404, "n1737": 404, "n1757": 404, "n1984": 404, "n1986": 404, "n1987": 404, "n2": [391, 519, 539], "n2118": 404, "n2242": 404, "n2343": 404, "n2346": 404, "n2347": 404, "n2429": 404, "n2431": 404, "n2437": 404, "n2439": 404, "n2541": 404, "n2627": 404, "n2657": 404, "n2756": 404, "n2764": 404, "n2927": 404, "n2928": 404, "n2930": 404, "n32": 479, "n3206": 404, "n3272": 404, "n4absl11string_view": 420, "n8": 479, "n_bucket": 519, "n_hash": 519, "n_stab": 430, "na": [402, 511], "nab": 510, "naddit": 445, "nail": [555, 565, 576], "naiv": [424, 505, 520], "nakatani": 402, "nake": [393, 479], "name": [36, 42, 126, 129, 221, 227, 315, 322, 382, 385, 388, 390, 393, 395, 397, 398, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 436, 437, 442, 444, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 467, 469, 471, 472, 473, 476, 478, 480, 481, 482, 484, 485, 486, 489, 490, 491, 492, 493, 495, 503, 506, 507, 508, 509, 513, 514, 515, 516, 517, 521, 522, 524, 525, 527, 529, 530, 531, 534, 535, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 581], "name1": 529, "name2": 529, "name3": 529, "named_valu": [574, 575, 576, 577, 578], "namedindex": 539, "namedvalu": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "namedvar": [559, 569], "nameflag": 519, "namesbuff": 495, "namespac": [393, 400, 423, 445, 446, 453, 461, 479, 507, 519, 531, 539, 540, 542, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "nan": [385, 386, 410, 411, 479, 519], "nand": 479, "nandakumar": 465, "nano": 386, "narrow": [389, 390, 397, 404, 406, 455, 462, 463, 465, 474, 481, 507, 513, 519, 520], "narrowaddr": 479, "narrowcharact": 502, "narrowscalarfor": 465, "narrowscalarforcartesianproduct": 465, "narrowscalarfortypeswithmems": 465, "narrowscalarif": 465, "nasa": 510, "nation": 403, "nativ": [383, 386, 390, 397, 398, 400, 401, 406, 410, 413, 417, 453, 454, 455, 457, 459, 462, 463, 464, 466, 471, 474, 478, 479, 482, 490, 509, 513, 519, 522, 539, 544, 546, 547, 548, 549, 550, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 574, 575, 576, 577, 578, 579], "nativeptrt": 550, "natur": [390, 404, 405, 434, 445, 452, 454, 459, 461, 462, 463, 473, 479, 482, 485, 502, 507, 509, 511, 514, 519, 520, 521, 525, 529, 540, 544, 553, 555, 557, 563, 565, 567, 574, 576, 578], "natvi": 503, "naveen": 505, "navi": 386, "navig": [445, 478, 506, 542], "nbsp": 402, "nc": 386, "nc_nv": 386, "ncsa": 452, "nctaid": 490, "nd": 539, "ndebug": [400, 445, 504], "ne": [449, 479, 529, 530], "near": [405, 459, 463, 502, 520, 524, 545, 559, 569], "near16": 494, "near32": 494, "near64": 494, "nearbi": [458, 487], "nearbyint": 538, "nearest": [450, 479, 488, 559, 569], "nearpoint": 502, "nearpointer128": 502, "nearpointer32": 502, "nearpointer64": 502, "neat": 547, "necessari": [386, 389, 390, 392, 394, 400, 402, 404, 405, 413, 418, 445, 449, 450, 451, 452, 454, 455, 459, 461, 463, 465, 469, 470, 471, 472, 474, 475, 479, 480, 481, 482, 483, 484, 485, 500, 502, 503, 506, 507, 511, 517, 519, 520, 521, 522, 524, 525, 527, 533, 535, 537, 539, 540, 542, 545, 553, 558, 559, 563, 568, 569, 571], "necessarili": [404, 411, 446, 457, 462, 463, 479, 493, 499, 503, 507, 514, 517, 519, 520, 524, 543, 559, 569], "need": [386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 405, 410, 411, 413, 416, 417, 418, 424, 436, 437, 443, 444, 445, 446, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 484, 485, 486, 488, 489, 490, 491, 493, 495, 499, 500, 505, 506, 507, 508, 509, 512, 513, 514, 516, 518, 519, 520, 522, 524, 525, 527, 529, 530, 531, 533, 534, 535, 537, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "needstub": 539, "neelakantam": 505, "neg": [39, 41, 128, 224, 226, 319, 321, 479], "neg_hi": [0, 3], "neg_lo": [0, 3], "negat": [384, 385, 386, 393, 402, 405, 429, 449, 452, 454, 459, 479, 484, 512, 517, 519, 520, 529, 539, 556, 566, 577], "negeightkind": 479, "neglect": 534, "neglig": [458, 481], "neighbor": 384, "neighbour": 424, "neither": [389, 392, 393, 404, 442, 454, 459, 464, 479, 481, 489, 495, 505, 522], "nekbon": 510, "nemanja": 511, "neon": [402, 447, 471, 479, 527, 545], "nest": [386, 389, 393, 400, 401, 402, 404, 409, 429, 454, 461, 478, 479, 485, 492, 495, 507, 509, 512, 520, 521, 529, 536, 538, 539, 540, 552, 555, 562, 565, 573, 576], "nestabl": [529, 530], "net": [448, 458, 467, 472, 510, 520, 545], "netbsd": [463, 541], "netinet": 550, "network": [402, 481, 507, 513], "neumann": 479, "neural": 534, "never": [386, 389, 390, 392, 398, 402, 404, 405, 413, 418, 429, 446, 449, 450, 453, 457, 458, 461, 462, 465, 466, 473, 479, 482, 489, 491, 492, 493, 494, 500, 505, 507, 509, 515, 519, 520, 527, 530, 536, 539, 540, 541, 542, 544, 546, 548, 560, 570, 575, 579], "never_instru": 541, "new": [387, 388, 390, 393, 396, 397, 398, 400, 401, 402, 404, 405, 406, 409, 413, 416, 424, 431, 443, 445, 448, 451, 453, 459, 460, 461, 463, 466, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491, 492, 495, 499, 502, 506, 509, 511, 512, 513, 515, 517, 518, 520, 521, 522, 524, 525, 527, 529, 530, 536, 539, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 568, 569, 570, 573, 574, 575, 576, 577, 579], "new_cond": 479, "new_corpus_dir": 481, "new_else_bb": [576, 577, 578], "new_guard_cond": 479, "new_potentially_interesting_inputs_dir": 481, "new_then_bb": [576, 577, 578], "newabbrevlen": 393, "newcom": [528, 531, 557, 567, 578], "newer": [390, 446, 451, 452, 463, 464, 494, 510, 520, 533], "newest": [456, 554, 564], "newinst": 507, "newli": [396, 404, 466, 481, 491, 505, 507, 511, 524, 547, 553, 554, 555, 556, 559, 563, 564, 565, 566, 569, 574, 575, 576, 577], "newlin": [393, 404, 409, 413, 418, 434, 556, 566, 577], "newoffset": 479, "newptr": 479, "newptr2": 479, "news": [487, 489], "newsockfd": 550, "newsroom": 520, "newti": 479, "newtoset": 404, "newversionformat": 495, "next": [384, 386, 388, 393, 396, 397, 404, 429, 445, 452, 454, 461, 462, 463, 464, 465, 469, 472, 473, 476, 479, 482, 483, 487, 489, 492, 493, 499, 507, 512, 513, 514, 519, 520, 535, 537, 539, 540, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "next_prec": [573, 574, 575, 576, 577, 578], "next_var": [576, 577, 578], "nextindvar": 479, "nextprec": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "nextvar": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "nextvari": [555, 556, 565, 566], "nfc": [452, 480], "ni": 479, "nice": [404, 405, 445, 449, 463, 465, 469, 488, 505, 507, 529, 540, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "nicer": [445, 507, 544, 559, 569], "nicknam": 516, "nicolai": 511, "nifti": [540, 555, 560, 565, 570, 576, 579], "night": [452, 472, 534, 535, 545], "ninf": 479, "ninja": [388, 398, 400, 463, 465, 468, 469, 470, 471, 481, 506, 509, 510, 533, 542], "nm": [408, 419, 432, 436, 437, 466, 470], "nmake": 400, "nn": 510, "nnan": 479, "nnn": [413, 463], "nnnnnn": [396, 402], "no": [198, 200, 201, 205, 209, 211, 212, 216, 218, 383, 384, 385, 386, 390, 392, 393, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 413, 417, 418, 419, 420, 421, 423, 429, 430, 431, 432, 433, 434, 436, 437, 442, 445, 446, 448, 449, 450, 451, 452, 454, 456, 457, 459, 461, 462, 463, 465, 469, 472, 473, 475, 477, 478, 479, 480, 481, 484, 485, 488, 491, 492, 493, 495, 497, 500, 502, 507, 508, 509, 510, 512, 513, 514, 516, 519, 520, 521, 522, 524, 527, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "no_dead_strip": 479, "no_switch": 538, "no_turbo": 391, "noalia": [389, 393, 429, 449, 459, 462, 488], "nobodi": 510, "nobuiltin": [393, 479], "nocaptur": [393, 479, 505], "nocf_check": [393, 479], "node": [389, 394, 395, 402, 415, 454, 458, 473, 480, 488, 489, 490, 507, 512, 519, 524, 527, 529, 536, 537, 538, 539, 540, 544, 545, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "nodebuginfo": 445, "nodefinit": 515, "nodetail": 415, "nodetyp": [387, 539], "nodupl": [393, 479], "noencod": 402, "noexcept": 454, "nofre": 479, "nohup": 514, "noimm": 531, "noimplicitfloat": [393, 479], "noinlin": [393, 451, 475, 479, 515], "nois": 391, "noisi": [452, 505, 507], "noitin": 411, "noitinerari": [531, 539], "nolink": 445, "noload": 431, "nologo": 426, "nomenclatur": 388, "nomodref": 389, "non": [384, 385, 387, 389, 390, 393, 397, 398, 399, 400, 401, 402, 405, 406, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 427, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 445, 446, 447, 450, 452, 454, 455, 458, 459, 462, 463, 465, 466, 468, 473, 476, 477, 481, 482, 483, 484, 487, 489, 490, 491, 494, 495, 500, 507, 509, 511, 514, 519, 520, 522, 529, 530, 535, 536, 539, 540, 543, 544, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 578, 579], "non_recurs": 519, "nonatom": 519, "nondot": 396, "none": [4, 102, 186, 283, 386, 391, 402, 409, 410, 411, 413, 433, 442, 445, 449, 452, 454, 461, 462, 463, 469, 470, 474, 476, 479, 492, 494, 502, 507, 520, 524, 525, 529, 540, 545, 573, 574, 575, 576, 577, 578], "nonempti": 479, "nonetheless": [479, 547, 548, 549, 550], "nongnu": 510, "nonintuit": 545, "nonlazybind": [393, 479], "nonneg": 479, "nonnul": [393, 454, 459, 479], "nonsens": [485, 521, 557, 567, 578], "nonstop": 542, "nonstop_tsc": 543, "nontempl": 445, "nontempor": [386, 479], "nonzero": [393, 529], "noop": 479, "nop": [456, 479, 522, 524, 541], "nor": [393, 402, 404, 454, 457, 461, 462, 464, 479, 481, 489, 495, 505, 522, 525], "norecurs": [393, 479], "noredzon": [393, 479], "noreg": [484, 519], "noreturn": [393, 459, 479], "norm": 516, "normal": [383, 384, 386, 390, 392, 393, 400, 402, 404, 405, 409, 413, 414, 418, 422, 425, 427, 430, 431, 433, 436, 437, 443, 445, 446, 452, 453, 454, 458, 459, 461, 463, 469, 472, 479, 482, 486, 491, 492, 494, 506, 507, 518, 519, 520, 522, 524, 525, 527, 529, 535, 538, 540, 542, 556, 566, 577], "normalformat": 445, "normalizedpolar": 544, "norman": 402, "normat": [529, 530], "northern": 386, "northov": 465, "nosync": 479, "not": [17, 18, 52, 53, 72, 84, 85, 99, 105, 114, 115, 157, 185, 189, 202, 203, 205, 216, 218, 256, 282, 286, 296, 297, 332, 333, 353, 366, 367, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 446, 448, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "not_found": [573, 574, 575, 576, 577, 578], "not_inline_hd": 446, "not_mangl": 419, "not_nul": 458, "notabl": [400, 402, 446, 455, 462, 469, 479, 487, 507, 519, 520], "notail": 479, "notat": [384, 385, 386, 413, 445, 479, 529, 544], "note": [7, 17, 18, 28, 105, 114, 115, 120, 189, 202, 203, 213, 286, 296, 297, 307, 383, 384, 385, 389, 390, 391, 392, 393, 397, 400, 404, 405, 406, 408, 409, 410, 413, 415, 424, 429, 431, 436, 437, 445, 446, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481, 482, 483, 488, 489, 490, 491, 493, 494, 495, 499, 500, 502, 505, 506, 507, 508, 509, 510, 512, 519, 520, 522, 524, 525, 527, 529, 530, 531, 533, 534, 537, 538, 539, 540, 541, 542, 545, 546, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "noteligibletoimport": 479, "notfp": 529, "noth": [81, 169, 266, 363, 386, 402, 405, 449, 452, 461, 462, 472, 479, 491, 505, 507, 509, 516, 525, 535, 540, 551, 557, 567, 572, 578], "nothidden": 445, "nothrow": 390, "notic": [400, 401, 402, 446, 452, 457, 459, 462, 473, 489, 490, 507, 553, 557, 563, 567, 574, 578], "notif": [389, 467, 506], "notifi": [386, 389, 396, 429, 467, 472, 491, 516, 538], "notion": [402, 404, 452, 473, 479, 493, 519, 540, 554, 555, 564, 565, 575, 576], "notori": 525, "nottransl": 502, "notw": 405, "notwithstand": 452, "notypemerg": 500, "noun": [404, 511], "nounwind": [393, 405, 454, 459, 479, 490, 519, 535, 537], "novel": [461, 479, 507], "novic": 400, "now": [397, 400, 402, 403, 404, 405, 409, 413, 445, 446, 452, 453, 454, 455, 469, 471, 472, 473, 477, 479, 481, 484, 488, 489, 490, 491, 499, 502, 506, 507, 509, 510, 513, 517, 519, 520, 522, 524, 532, 534, 537, 540, 542, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579], "nowaday": [471, 509], "nozero": 411, "npb": 510, "npb3": 510, "nproc": 463, "nsa": [7, 385], "nsstring": 519, "nsw": [449, 452, 459, 462, 479], "nsz": 479, "nt": [471, 514], "nt_amd_amdgpu_hsa_metadata": 386, "nt_amd_amdgpu_metadata": 386, "nt_amdgpu_metadata": 386, "nth": [404, 418], "ntid": 490, "ntohl": 402, "ntradbigmip": 431, "ntradlittlemip": 431, "nuisanc": 452, "nul": [507, 556, 566, 577], "null": [22, 43, 44, 45, 52, 53, 56, 60, 61, 73, 74, 75, 81, 169, 266, 363, 386, 389, 393, 402, 404, 410, 411, 449, 454, 456, 458, 459, 479, 484, 489, 490, 491, 492, 495, 500, 505, 507, 513, 515, 519, 522, 524, 527, 539, 540, 544, 547, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 576], "nullari": [552, 562, 573], "nullpointerexcept": 458, "nullptr": [404, 479, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "nullptr_t": 502, "nullunknown": 479, "num": [385, 386, 405, 407, 409, 418, 424, 434, 461, 479, 509, 524, 539], "num_repetit": 424, "numabbrevop": 393, "numarg": [522, 559, 569], "number": [34, 36, 37, 42, 48, 72, 99, 126, 127, 129, 157, 185, 219, 221, 223, 227, 233, 256, 282, 313, 315, 317, 322, 328, 353, 381, 384, 389, 390, 392, 394, 395, 396, 397, 400, 401, 402, 404, 405, 407, 409, 413, 415, 417, 418, 423, 424, 429, 432, 433, 434, 442, 444, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 468, 471, 472, 475, 478, 479, 480, 481, 482, 484, 485, 488, 489, 491, 492, 494, 495, 497, 499, 500, 502, 503, 504, 506, 507, 508, 512, 515, 518, 519, 520, 521, 522, 524, 527, 529, 530, 531, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "number1": 489, "number2": 489, "numberexpr": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "numberexprast": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "numberofauxsymbol": 581, "numberofcpucor": 481, "numbit": 507, "numblock": 499, "numbyt": 522, "numconst": 522, "numdirectorybyt": 499, "numel": 479, "numelt": 393, "numeltsparam": [393, 479], "numentri": 393, "numer": [384, 385, 397, 430, 432, 445, 459, 464, 479, 484, 502, 503, 507, 527, 528, 530, 531, 539, 541, 543, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "numerical_limit": 520, "numexpress": 450, "numfaultingpc": 458, "numfilenam": 450, "numfunct": [458, 522], "numhashbucket": 502, "numindic": 450, "numlin": 450, "numliveout": 522, "numloc": 522, "nummemb": 507, "nummeta": 461, "nummodul": 495, "nummodulevalu": 393, "numop": [393, 539], "numpoint": 424, "numrecord": 522, "numregion": 450, "numregionarray": 450, "numroot": 461, "numsgpr": 386, "numshadowbyt": 522, "numsourcefil": 495, "numspilledsgpr": 386, "numspilledvgpr": 386, "numstr": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "numstream": 499, "numval": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "numvar": 405, "numvgpr": 386, "numxform": 507, "nutshel": 507, "nuw": [459, 479], "nuzman": [512, 538], "nval": 479, "nvcall": 399, "nvcc": 402, "nvcl": 490, "nvidia": [402, 446, 453, 490], "nvptx": [463, 479, 511, 545], "nvptx64": 490, "nvt": 539, "nvvm": 479, "nvvmreflect": 490, "nw": 510, "o0": [410, 418, 445, 451, 460, 465, 474, 519, 536, 539, 579], "o1": [410, 445, 465, 474, 481, 539], "o2": [389, 390, 398, 410, 429, 442, 445, 459, 460, 463, 479, 490, 492, 504, 517, 519, 539], "o3": [398, 410, 445, 459, 460, 463, 474, 490, 519, 533, 538, 539, 542, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "o4": 539, "o5": 539, "o6": 539, "o7": 539, "obey": 479, "obit": 479, "obj": [410, 417, 442, 454, 461, 464, 479, 514, 519, 524, 533, 534], "obj_root": 463, "objc": [423, 432, 485, 519, 521, 545], "objc_autoreleas": 479, "objc_autoreleasepoolpop": 479, "objc_autoreleasepoolpush": 479, "objc_autoreleasereturnvalu": 479, "objc_copyweak": 479, "objc_destroyweak": 479, "objc_initweak": 479, "objc_loadweak": 479, "objc_loadweakretain": 479, "objc_moveweak": 479, "objc_properti": 519, "objc_releas": 479, "objc_retain": 479, "objc_retainautoreleas": 479, "objc_retainautoreleasedreturnvalu": 479, "objc_retainautoreleasereturnvalu": 479, "objc_retainblock": 479, "objc_storestrong": 479, "objc_storeweak": 479, "objcopi": [408, 441, 513], "objdump": [408, 430, 436, 437, 542], "object": [389, 390, 392, 397, 398, 402, 404, 406, 407, 408, 409, 410, 411, 417, 418, 423, 424, 426, 428, 433, 438, 440, 441, 442, 443, 445, 447, 449, 450, 451, 452, 454, 456, 457, 458, 460, 461, 464, 465, 466, 470, 471, 473, 474, 475, 477, 480, 481, 482, 484, 489, 490, 491, 492, 494, 495, 498, 500, 502, 503, 509, 513, 517, 520, 522, 525, 527, 529, 530, 533, 534, 537, 539, 540, 543, 544, 546, 547, 551, 552, 553, 555, 557, 559, 560, 562, 563, 565, 567, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 581], "object_addr": 461, "object_error": 507, "objectbodi": 530, "objectbuff": 483, "objectbufferstream": 483, "objectcach": 483, "objectfil": 483, "objectimag": 483, "objectivec": 479, "objectlay": [546, 547, 548, 549, 550], "objectlinkinglay": 547, "objfilenam": 495, "objlinkinglay": 491, "objptr": 479, "oblivi": 392, "obscur": [479, 507], "observ": [390, 402, 404, 429, 479, 481, 494, 495, 498, 500, 502, 519, 520, 524, 542, 560, 570, 579], "obsolet": [396, 494, 513], "obstacl": 511, "obtain": [386, 402, 449, 450, 465, 470, 474, 479, 483, 488, 491, 495, 505, 507, 525, 529, 539, 542, 543, 554, 564], "obtus": 462, "obviat": 508, "obvious": [389, 390, 392, 397, 402, 404, 445, 452, 455, 457, 462, 472, 479, 489, 495, 500, 505, 507, 509, 514, 517, 519, 520, 522, 527, 529, 540, 551, 552, 554, 556, 560, 562, 564, 566, 570, 572, 573, 575, 577, 579], "ocaml": [400, 572, 573, 574, 575, 576, 577, 578], "ocaml_lib": [574, 575, 576, 577, 578], "ocamlbuild": [573, 574, 575, 576, 577, 578], "ocamlbuild_plugin": [574, 575, 576, 577, 578], "ocamldoc": 400, "occas": [404, 497], "occasion": [393, 446, 461, 502], "occupi": [17, 18, 19, 20, 31, 32, 33, 114, 115, 116, 123, 124, 202, 203, 204, 205, 216, 217, 218, 296, 297, 298, 299, 310, 311, 312, 384, 386, 413, 433, 479, 499], "occur": [384, 386, 393, 395, 402, 404, 405, 406, 409, 410, 413, 414, 415, 417, 422, 425, 427, 429, 443, 444, 452, 454, 461, 462, 465, 474, 479, 480, 491, 505, 507, 508, 509, 516, 517, 519, 520, 522, 524, 525, 529, 530, 535, 536, 540, 552, 558, 562, 568, 573], "occurr": [393, 405], "oct": 509, "octal": [385, 413, 430, 445], "octet": 464, "octopus": 509, "odd": [404, 445, 452, 474, 479], "odr": [407, 479], "oeq": 479, "of": [4, 5, 7, 36, 37, 38, 42, 44, 45, 50, 51, 52, 72, 82, 84, 99, 102, 103, 105, 126, 127, 129, 135, 136, 157, 170, 185, 186, 187, 189, 205, 216, 218, 221, 222, 223, 227, 235, 236, 256, 267, 282, 283, 284, 286, 315, 316, 317, 318, 322, 324, 325, 330, 331, 332, 353, 364, 366, 381, 382, 383, 386, 387, 388, 390, 391, 392, 393, 395, 397, 399, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 442, 443, 444, 446, 447, 449, 451, 453, 454, 455, 456, 458, 464, 465, 467, 468, 469, 470, 471, 472, 474, 475, 476, 478, 480, 483, 484, 485, 486, 487, 489, 491, 492, 494, 495, 497, 498, 499, 500, 502, 503, 504, 506, 509, 510, 512, 515, 517, 518, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 575, 576, 577, 578, 581], "of_channel": [573, 574, 575, 576, 577, 578], "of_list": [573, 574, 575, 576, 577, 578], "off": [4, 52, 53, 72, 84, 85, 102, 157, 186, 256, 283, 332, 333, 353, 366, 367, 384, 386, 397, 398, 400, 402, 404, 413, 432, 433, 446, 452, 460, 463, 468, 469, 470, 479, 488, 490, 491, 504, 507, 513, 516, 520, 524, 531, 533, 535, 542, 543, 546, 547, 551, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 572, 574, 575, 576, 577, 578, 579], "offen": [0, 1, 2, 3, 4, 102, 186, 283, 386], "offer": [390, 461, 507, 509, 513, 524, 544], "offici": [401, 402, 446, 452, 453, 463, 466, 487, 489, 503, 506, 510, 514, 516, 533, 553, 557, 563, 567, 578], "offlin": [402, 490], "offload": 517, "offset": [4, 5, 36, 37, 43, 44, 45, 53, 84, 85, 102, 103, 126, 127, 130, 131, 186, 187, 221, 223, 228, 229, 230, 283, 284, 315, 317, 323, 324, 325, 333, 366, 367, 383, 384, 385, 386, 393, 402, 405, 413, 423, 432, 433, 442, 449, 454, 461, 462, 465, 484, 489, 493, 495, 499, 500, 502, 507, 517, 518, 519, 520, 522, 524, 531, 535, 539, 560, 570, 579], "offset0": 386, "offset1": [386, 479], "offset11": 0, "offset12": [0, 1, 2, 3, 84], "offset13": [3, 366], "offset16": [0, 1, 2, 3], "offset2": 479, "offset8": [0, 1, 2, 3], "ofstream": 445, "oftc": [448, 545], "often": [386, 387, 389, 390, 392, 397, 400, 402, 404, 405, 445, 446, 452, 454, 455, 457, 459, 461, 463, 465, 469, 470, 473, 474, 479, 481, 484, 490, 505, 507, 509, 515, 519, 520, 524, 529, 535, 539, 542, 544, 545, 547, 552, 554, 557, 560, 562, 564, 567, 570, 573, 575, 578, 579], "oge": 479, "ogt": 479, "oh": [555, 565, 576], "ok": [397, 404, 446, 452, 468, 479, 481, 489, 507, 553, 555, 563, 565, 574], "okay": [404, 462, 479, 480, 506, 525, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "oland": 386, "old": [389, 390, 396, 405, 418, 431, 451, 452, 461, 463, 475, 479, 494, 502, 503, 507, 509, 511, 515, 519, 533, 536, 545, 557, 558, 559, 560, 567, 568, 569, 570, 578, 579], "old_bind": 578, "old_val": [576, 577, 578], "old_valu": 578, "oldbind": [557, 558, 559, 567, 568, 569, 578], "older": [386, 390, 429, 445, 447, 452, 459, 461, 463, 465, 468, 481, 486, 539], "oldest": [386, 429, 554, 564], "oldval": [479, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "ole": [479, 502], "olt": 479, "omap": 495, "omiss": [452, 479], "omit": [382, 383, 386, 402, 410, 414, 415, 420, 422, 425, 429, 430, 433, 434, 436, 437, 442, 443, 446, 479, 481, 491, 505, 513, 519, 522, 540, 552, 555, 562, 565, 573, 576], "omod": [0, 1, 2, 3], "omp": [505, 510, 536], "on": [7, 17, 18, 19, 20, 31, 32, 33, 38, 84, 86, 105, 114, 115, 116, 124, 189, 198, 200, 201, 202, 203, 204, 205, 209, 211, 212, 216, 217, 218, 286, 296, 297, 298, 299, 310, 311, 312, 318, 366, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 427, 429, 431, 432, 433, 434, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 455, 458, 459, 460, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 499, 500, 502, 503, 505, 506, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 527, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "onc": [385, 386, 389, 393, 397, 400, 401, 402, 404, 406, 407, 409, 418, 423, 425, 434, 443, 445, 446, 448, 449, 452, 454, 455, 457, 458, 461, 462, 463, 464, 465, 466, 470, 472, 474, 479, 480, 481, 482, 483, 485, 489, 491, 492, 495, 502, 506, 507, 509, 512, 514, 516, 517, 519, 520, 521, 524, 525, 529, 530, 531, 534, 539, 540, 541, 542, 544, 545, 546, 548, 549, 550, 552, 553, 554, 555, 557, 560, 562, 563, 564, 565, 567, 570, 573, 574, 575, 576, 578, 579], "one": [7, 31, 105, 123, 189, 209, 211, 212, 216, 286, 310, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 413, 418, 420, 421, 423, 424, 429, 430, 432, 433, 434, 436, 437, 445, 446, 449, 450, 452, 453, 454, 455, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 502, 503, 506, 507, 508, 509, 510, 511, 512, 514, 516, 517, 518, 519, 520, 522, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "one_on": 456, "oneargfp": 529, "oneargfprw": 529, "oneormor": 445, "ongo": [452, 491, 516, 524, 541], "onli": [4, 29, 30, 36, 44, 45, 46, 48, 102, 121, 122, 126, 132, 186, 214, 215, 221, 231, 233, 283, 308, 309, 315, 324, 325, 326, 328, 384, 385, 386, 388, 389, 390, 392, 393, 395, 396, 397, 399, 400, 401, 402, 404, 405, 407, 409, 410, 411, 413, 415, 416, 418, 420, 421, 423, 424, 426, 429, 430, 431, 433, 434, 436, 437, 443, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 484, 487, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 500, 502, 508, 510, 511, 512, 515, 516, 517, 519, 520, 522, 524, 525, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "onlin": [386, 391, 400, 401, 557, 567, 578], "only_ascii": 481, "onlyfailsforsomexvalu": 507, "onlyfailsforsomexvalues2": 507, "onon": 479, "ons": 514, "onto": [386, 402, 452, 461, 465, 472, 479, 491, 507, 519, 537], "ontwo": 479, "onward": [386, 400, 469], "onzero": 479, "oom": 481, "oop": 524, "op": [42, 129, 227, 322, 405, 409, 413, 449, 465, 479, 484, 491, 520, 524, 527, 529, 539, 547, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "op0": 393, "op1": [393, 479], "op2": 479, "op3": [479, 539], "op3val": 539, "op_begin": 507, "op_end": 507, "op_iter": 507, "op_sel": [0, 3], "op_sel_hi": [0, 3], "opaqu": [392, 393, 456, 465, 491, 505, 507, 513, 524, 547, 553, 563], "opc": [529, 556, 557, 558, 559, 566, 567, 568, 569], "opcod": [7, 82, 105, 170, 189, 267, 286, 364, 384, 385, 386, 390, 402, 404, 424, 429, 465, 473, 476, 479, 484, 489, 507, 512, 529, 531, 539, 552, 553, 556, 557, 558, 559, 562, 563, 566, 567, 568, 569, 573, 574, 577], "opcode_nam": 424, "opcstr": 539, "open": [386, 396, 400, 402, 404, 406, 446, 448, 452, 464, 465, 470, 473, 479, 480, 485, 489, 506, 507, 509, 521, 522, 524, 525, 527, 529, 542, 545, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "openbsd": 541, "opencl": [490, 513], "openfil": 404, "openfileforwrit": 525, "openformattedfil": 507, "opengl": [404, 560, 570, 579], "openmp": [386, 405, 452, 509, 511, 536], "openmp4": 512, "openorcreatefileforwrit": 525, "opensourc": 481, "openssl": 481, "openwork": 524, "oper": [9, 10, 14, 15, 16, 17, 18, 21, 22, 23, 42, 99, 107, 108, 111, 112, 113, 114, 115, 129, 185, 191, 192, 195, 196, 197, 202, 203, 227, 282, 288, 289, 293, 294, 295, 296, 297, 300, 301, 302, 322, 381, 383, 384, 389, 390, 392, 393, 395, 399, 400, 402, 404, 405, 410, 411, 416, 429, 431, 436, 437, 446, 447, 449, 450, 454, 455, 457, 458, 461, 462, 463, 465, 481, 488, 489, 490, 491, 492, 505, 509, 512, 513, 517, 519, 520, 524, 525, 527, 529, 530, 531, 537, 538, 539, 540, 541, 542, 544, 546, 547, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 579, 580], "operand": [4, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 387, 393, 395, 402, 404, 405, 415, 429, 432, 454, 455, 456, 462, 465, 488, 489, 505, 507, 511, 512, 519, 527, 529, 553, 556, 557, 558, 559, 563, 566, 567, 568, 569, 574, 577, 578], "operand0": [383, 386], "operand1": [383, 386], "operand_type_list_end": 539, "operandlist": 529, "operandmap": 539, "operandti": 402, "operandtyp": 539, "operandv": [556, 557, 558, 559, 566, 567, 568, 569], "operating_system": 479, "opnam": 539, "opnod": 539, "opportun": [388, 398, 449, 459, 465, 479, 491, 505, 509, 511, 538, 539, 547, 554, 564, 575], "oppos": [445, 456, 463, 465, 472, 479, 480, 498, 508, 511, 530, 576], "opposit": [404, 413, 480, 507, 511, 519, 527, 541, 544], "opreand": 507, "oprofil": [400, 504], "ops": [402, 520, 524, 529, 539, 556, 557, 558, 559, 566, 567, 568, 569], "opt": [0, 1, 2, 3, 382, 389, 390, 397, 404, 406, 408, 412, 432, 452, 457, 461, 463, 464, 471, 474, 479, 488, 490, 505, 507, 519, 520, 524, 534, 535, 538, 545, 547, 550, 554, 555, 557, 558, 564, 565, 567, 568, 575, 576, 578], "opt1": 432, "opt2": 432, "optbisect": 492, "optforfuzz": [393, 479], "optim": [383, 388, 389, 392, 393, 395, 397, 400, 404, 405, 406, 407, 408, 410, 411, 418, 429, 432, 434, 445, 447, 449, 450, 452, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 467, 473, 476, 477, 478, 479, 480, 489, 490, 491, 504, 507, 508, 511, 512, 520, 522, 523, 524, 534, 535, 536, 537, 538, 539, 540, 543, 545, 546, 548, 549, 550, 551, 553, 555, 556, 557, 558, 559, 563, 565, 566, 567, 568, 569, 571, 572, 574, 576, 577, 578, 580], "optimis": [505, 575], "optimist": [429, 465, 479], "optimizationbit": 445, "optimizationlevel": 445, "optimizationlist": 445, "optimizationremarkemitt": 511, "optimizefunct": [548, 549, 550], "optimizelay": [547, 548, 549, 550], "optimizemodul": [547, 548, 549, 550], "optimz": [460, 536], "option": [4, 14, 15, 16, 17, 18, 21, 22, 23, 29, 30, 42, 46, 49, 52, 53, 54, 72, 85, 99, 102, 111, 112, 113, 114, 115, 121, 122, 129, 132, 134, 137, 157, 185, 186, 195, 196, 197, 202, 203, 214, 215, 227, 231, 234, 237, 256, 282, 283, 293, 294, 295, 296, 297, 300, 301, 302, 308, 309, 322, 326, 329, 332, 333, 334, 353, 367, 381, 382, 383, 388, 389, 392, 393, 397, 400, 401, 402, 404, 408, 412, 421, 426, 428, 435, 438, 440, 441, 446, 449, 450, 451, 452, 453, 457, 460, 461, 464, 465, 466, 468, 469, 470, 471, 474, 475, 478, 479, 480, 482, 483, 484, 489, 491, 492, 504, 505, 508, 509, 512, 513, 514, 515, 519, 520, 522, 524, 527, 529, 530, 531, 533, 536, 538, 539, 540, 541, 542, 544, 545, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 574, 576, 577, 578], "optional_dir": 508, "optionaldbgheaders": 495, "optiz": 511, "optlevel": 445, "optnon": [393, 479, 492], "optnum": 445, "optsiz": [393, 465, 479], "optyp": 539, "optzn": [474, 554, 555, 556, 557, 564, 565, 566, 567, 575, 576, 577, 578], "opval": 539, "or": [4, 7, 17, 18, 20, 31, 33, 34, 35, 36, 38, 42, 53, 72, 84, 85, 99, 102, 105, 114, 115, 125, 126, 129, 157, 185, 186, 189, 202, 203, 205, 216, 218, 219, 220, 221, 222, 227, 256, 282, 283, 286, 296, 297, 299, 310, 312, 313, 314, 315, 316, 318, 322, 333, 353, 366, 367, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 502, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "orbit": [556, 566, 577], "orc": [545, 546, 548, 549, 550, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569, 580], "orcabisupport": 550, "orcjit": [546, 547, 548, 549, 550], "orcremotetargetcli": 550, "orcremotetargetserv": 550, "orcv1": [513, 545], "orcv2": [513, 545], "orcx86_64_sysv": 550, "ord": 479, "order": [99, 185, 282, 381, 382, 383, 389, 393, 398, 400, 402, 405, 409, 416, 421, 429, 430, 433, 443, 445, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 473, 476, 478, 481, 482, 484, 488, 489, 491, 492, 495, 499, 500, 503, 505, 507, 508, 509, 511, 512, 513, 517, 519, 520, 522, 524, 525, 527, 529, 534, 535, 539, 540, 548, 551, 552, 553, 554, 555, 557, 562, 563, 564, 565, 567, 571, 572, 573, 574, 575, 576, 578], "ordered_append_term": 386, "ordin": 445, "ordinari": [450, 479, 491, 544], "ore": 511, "org": [396, 400, 403, 404, 428, 431, 432, 452, 460, 463, 464, 466, 467, 470, 471, 472, 473, 481, 484, 485, 487, 506, 509, 511, 514, 516, 533, 544, 545, 546, 547, 548, 549, 550, 553, 563], "organiz": [384, 386, 401, 404, 454, 487, 489, 502, 508, 516, 519, 524, 545, 554, 564, 575], "ori": 402, "orient": [403, 404, 473, 507, 510, 519, 560, 570, 579], "orig": 479, "origin": [385, 402, 403, 405, 413, 416, 418, 433, 449, 452, 454, 462, 463, 479, 491, 495, 500, 506, 507, 509, 511, 512, 516, 519, 520, 524, 525, 528, 530, 531, 536, 537, 541, 546, 547, 559, 569], "originput": 445, "orign": 519, "orl": 520, "orq": 520, "orr": 479, "ors": 480, "orthogon": [390, 491], "os": [390, 391, 398, 402, 455, 461, 463, 468, 472, 479, 507, 513, 520, 544], "oscil": 543, "osi": 457, "oso": 407, "oss": [460, 472, 481, 509], "ostream": [404, 507], "osuosl": 467, "other": [0, 1, 2, 3, 7, 102, 105, 189, 286, 383, 384, 385, 386, 387, 388, 390, 392, 393, 394, 396, 397, 398, 400, 402, 403, 405, 407, 409, 410, 411, 413, 418, 420, 421, 429, 430, 431, 432, 442, 443, 444, 446, 448, 449, 450, 452, 453, 454, 455, 456, 461, 463, 464, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 494, 495, 498, 499, 500, 502, 503, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 523, 524, 525, 527, 528, 529, 530, 531, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 580], "other_funct": 520, "otherspecialsquar": 473, "othervt": 539, "otherwis": [100, 101, 386, 388, 390, 393, 394, 396, 397, 400, 404, 405, 406, 407, 409, 410, 411, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 427, 429, 431, 432, 436, 437, 443, 444, 445, 446, 449, 450, 452, 454, 459, 461, 466, 467, 468, 471, 472, 474, 479, 480, 482, 489, 491, 492, 495, 497, 503, 505, 506, 507, 509, 516, 519, 520, 524, 529, 530, 536, 540, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "otp": 479, "ought": 404, "our": [388, 398, 400, 401, 402, 403, 404, 445, 446, 449, 452, 453, 461, 463, 474, 482, 489, 490, 500, 503, 504, 507, 509, 516, 517, 519, 520, 524, 538, 540, 542, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "ourfpm": [559, 569], "ourfunctionpass": 507, "ourselv": [404, 490, 503, 519, 546], "out": [386, 388, 389, 390, 391, 392, 393, 396, 397, 401, 402, 404, 409, 411, 413, 415, 416, 418, 423, 424, 426, 429, 430, 432, 445, 446, 449, 452, 453, 454, 455, 460, 461, 463, 464, 465, 468, 469, 470, 471, 472, 474, 476, 479, 480, 481, 484, 488, 489, 491, 498, 499, 503, 505, 506, 507, 509, 512, 513, 514, 516, 517, 519, 520, 523, 524, 525, 527, 528, 529, 531, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580], "out_of_bound": 401, "outdat": [471, 534], "outer": [404, 454, 477, 479, 481, 494, 505, 512, 529, 536, 540, 544, 555, 557, 558, 559, 565, 567, 568, 569, 576, 578], "outerstructti": 479, "outfil": 439, "outgo": [394, 479], "outlin": [399, 402, 449, 452, 454, 520, 540, 544], "outliv": [479, 481, 505], "outloop": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 578], "outoperandlist": [531, 539], "output": [14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 58, 59, 60, 61, 62, 63, 64, 65, 91, 92, 93, 94, 100, 111, 112, 113, 114, 115, 117, 118, 119, 120, 138, 139, 140, 141, 142, 143, 144, 145, 177, 178, 179, 180, 195, 196, 197, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 241, 242, 243, 244, 245, 246, 247, 248, 274, 275, 276, 277, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 338, 339, 340, 341, 342, 343, 344, 345, 373, 374, 375, 376, 384, 386, 388, 389, 391, 394, 397, 399, 400, 402, 404, 405, 406, 407, 410, 411, 412, 413, 414, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 436, 437, 439, 442, 443, 444, 446, 455, 456, 461, 463, 464, 465, 469, 474, 476, 484, 485, 488, 490, 505, 507, 512, 514, 515, 517, 519, 521, 527, 531, 533, 535, 536, 539, 540, 541, 542, 543, 545, 547, 552, 554, 555, 556, 557, 558, 559, 562, 564, 565, 566, 567, 568, 569, 573, 575, 576, 577, 578, 581], "outputdebuginfo": 445, "outputfilenam": 445, "outright": 462, "outsid": [386, 389, 403, 404, 445, 449, 452, 456, 462, 466, 470, 479, 480, 481, 489, 505, 507, 509, 512, 514, 519, 520, 522, 524, 525, 529, 534, 537, 540, 545, 547, 553, 563, 574], "outstand": [36, 99, 126, 185, 221, 282, 315, 381], "outstream": 461, "outweigh": 511, "over": [386, 389, 392, 393, 396, 397, 401, 402, 405, 429, 433, 446, 452, 462, 465, 469, 473, 479, 480, 481, 482, 487, 488, 505, 506, 509, 511, 519, 520, 523, 524, 529, 530, 544, 547, 548, 549, 550, 551, 553, 555, 556, 557, 559, 560, 561, 563, 565, 566, 567, 569, 570, 571, 572, 574, 576, 577, 578, 579], "overal": [396, 398, 402, 432, 452, 454, 461, 462, 469, 479, 503, 506, 520, 527, 555, 565, 576], "overboard": 404, "overestim": 479, "overflow": [385, 386, 452, 459, 481, 517, 520, 543], "overhaul": 472, "overhead": [457, 461, 465, 476, 479, 491, 507, 509, 512, 513, 520, 543, 548, 554, 564, 575], "overlaid": 488, "overlap": [389, 401, 402, 405, 429, 477, 479, 519, 522, 538, 540], "overlay": [453, 495], "overload": [455, 473, 479, 490, 507, 524, 539, 540, 556, 566, 577], "overrid": [386, 390, 398, 400, 401, 402, 404, 409, 410, 411, 418, 422, 431, 445, 446, 465, 473, 479, 481, 489, 490, 505, 507, 517, 519, 520, 527, 529, 530, 539, 540, 547, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "overridden": [389, 445, 463, 479, 481, 539], "overrod": 529, "overs": 507, "oversimplifi": 507, "overview": [0, 1, 2, 3, 382, 399, 400, 429, 445, 447, 448, 483, 485, 521, 540, 555, 565, 576], "overwhelm": [551, 571, 572], "overwrit": [445, 508, 520, 522, 541], "overwritten": [402, 454, 479, 517, 522], "ovl": 495, "own": [386, 393, 394, 400, 401, 402, 404, 445, 446, 450, 452, 453, 454, 455, 461, 463, 466, 470, 472, 473, 478, 479, 481, 483, 488, 491, 493, 494, 503, 505, 506, 508, 509, 511, 512, 516, 519, 522, 525, 527, 532, 534, 535, 539, 540, 551, 553, 554, 556, 557, 560, 563, 564, 566, 567, 570, 572, 577, 578, 579], "owner": [402, 413, 448, 472, 506, 509], "ownership": [452, 491, 507, 549, 550, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569], "p0": [47, 133, 232, 327, 465], "p0928": 520, "p0a10s_union": 479, "p0f_isvoidf": 524, "p0i32": 405, "p0i64": 405, "p0i8": [479, 490], "p0s_struct": 479, "p0s_union": 479, "p0v16f32": 479, "p0v2f64": 479, "p0v4p0f_i32f": 479, "p0v8f64": 479, "p0v8i32": 479, "p0v8p0f64": 479, "p0v8p0f_i32f": 479, "p1": [465, 479, 488, 490, 519], "p10": [47, 133, 232, 327], "p15": 490, "p16": 490, "p17": 490, "p18": 490, "p19": 490, "p1i8": [490, 524], "p2": [405, 465, 479, 488, 490, 519], "p20": [47, 133, 232, 327, 490], "p2align": [386, 520], "p3": [405, 488, 490, 519], "p3i8": 490, "p4": 490, "p4i8": 490, "p5": 490, "p5600": 513, "p5i8": 490, "p9": 513, "p_arch": 446, "p_reg": 402, "pa": 507, "pack": [20, 31, 33, 198, 200, 201, 205, 209, 211, 212, 216, 218, 299, 310, 312, 383, 384, 386, 393, 402, 429, 449, 459, 472, 479, 509, 512, 514, 553, 563, 574], "packag": [394, 398, 400, 446, 452, 453, 463, 467, 468, 470, 471, 472, 508, 514, 533, 545], "package_str": 400, "packet": [386, 444, 527], "pact": 512, "pad": [384, 386, 393, 413, 433, 449, 450, 454, 465, 477, 479, 484, 495, 522, 543], "padding1": 495, "padding2": 495, "padparam": 454, "page": [386, 388, 398, 400, 404, 408, 433, 445, 447, 448, 452, 456, 458, 461, 463, 464, 483, 499, 503, 506, 507, 509, 511, 513, 515, 519, 520, 524, 526, 532, 535, 538, 545, 553, 563], "pain": [445, 446, 451, 452, 506, 507], "painless": 445, "pair": [384, 385, 386, 389, 390, 391, 392, 402, 404, 405, 410, 420, 429, 454, 456, 475, 479, 481, 488, 489, 491, 502, 505, 507, 509, 519, 520, 524, 539, 543, 544, 548, 552, 555, 557, 558, 559, 562, 565, 567, 568, 569, 573, 576], "pairwis": 389, "pamela": 510, "pan": 520, "panda": 533, "pandaboard": 468, "pane": 506, "paper": [391, 402, 404, 446, 447, 488, 507, 520, 545], "papertrail": 407, "par": 510, "paradigm": [462, 507, 513], "paragraph": [404, 452, 485, 489, 519, 521], "parallel": [400, 402, 405, 409, 424, 429, 463, 465, 467, 479, 480, 488, 504, 508, 509, 511, 512, 513, 536, 538], "parallel_dir": 508, "parallel_loop_access": 536, "param": [0, 1, 2, 3, 81, 169, 266, 363, 386, 404, 409, 461, 464, 467, 479, 490, 574, 575, 576, 577, 578], "param1": 507, "param2": 507, "paramattr": 393, "paramet": [42, 47, 81, 129, 133, 169, 227, 232, 266, 322, 327, 363, 384, 386, 393, 395, 400, 401, 402, 404, 409, 424, 445, 446, 449, 454, 456, 461, 462, 475, 481, 483, 489, 505, 507, 513, 517, 519, 524, 527, 531, 539, 540, 543, 544, 553, 563, 574], "parameter": [465, 529], "parameterless": 484, "parametr": 530, "paramidx": 393, "paramidx0": 393, "paramidx1": 393, "paramt": 456, "paramti": 393, "parenexpr": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "parent": [386, 394, 401, 404, 409, 423, 478, 479, 507, 509, 555, 565, 576], "parent_scop": 401, "parenthandl": 479, "parenthes": [409, 479, 552, 562, 573], "parenthesi": [404, 527, 552, 562, 573], "parentti": 479, "paricular": 446, "parit": 409, "parlanc": [401, 488, 537, 551, 561, 572], "pars": [393, 401, 405, 409, 423, 429, 446, 455, 457, 460, 476, 479, 480, 481, 482, 483, 484, 507, 515, 517, 519, 522, 524, 527, 530, 531, 539, 543, 544, 545, 551, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 576, 577, 578], "parsabl": [434, 524], "parse_arg": [573, 574, 575, 576, 577, 578], "parse_bin_rh": [573, 574, 575, 576, 577, 578], "parse_binary_preced": [577, 578], "parse_definit": [573, 574, 575, 576, 577, 578], "parse_expr": [573, 574, 575, 576, 577, 578], "parse_extern": [573, 574, 575, 576, 577, 578], "parse_fail": 507, "parse_id": [573, 574, 575, 576, 577, 578], "parse_oper": [577, 578], "parse_primari": [573, 574, 575, 576, 577, 578], "parse_prototyp": [573, 574, 575, 576, 577, 578], "parse_toplevel": [573, 574, 575, 576, 577, 578], "parse_unari": [577, 578], "parse_var_init": 578, "parse_var_nam": 578, "parseabl": [479, 524], "parsebinoprh": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "parsecommandlineopt": [542, 550], "parsedattrinfo": 527, "parsedefinit": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "parseexpress": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "parseextern": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "parseforexpr": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "parseidentifierexpr": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "parseifexpr": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "parsenumberexpr": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "parseparenexpr": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "parsepasspipelin": 460, "parsepath": 491, "parseprimari": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 577], "parseprototyp": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "parser": [398, 429, 432, 444, 457, 460, 463, 478, 479, 481, 484, 515, 527, 551, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580], "parserclass": 445, "parsesubtargetfeatur": 539, "parsetoplevelexpr": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "parsetypetyp": 455, "parseunari": [556, 557, 558, 559, 566, 567, 568, 569, 577], "parsevalid": 542, "parsevarexpr": [557, 558, 559, 567, 568, 569], "part": [385, 387, 389, 390, 392, 393, 396, 397, 398, 399, 400, 401, 402, 404, 406, 407, 409, 419, 445, 446, 449, 452, 454, 459, 460, 461, 462, 463, 464, 465, 469, 470, 473, 478, 479, 481, 482, 487, 489, 491, 494, 499, 500, 505, 507, 509, 510, 512, 513, 516, 519, 520, 523, 524, 527, 530, 531, 533, 535, 536, 539, 540, 541, 542, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "parti": [404, 452, 459, 463, 508, 516, 524], "partial": [384, 402, 444, 479, 480, 481, 507, 510, 513, 517, 519, 522, 536, 543, 544], "partialalia": 389, "particip": [386, 403, 452, 479, 506, 507, 509, 535], "particlefilt": 510, "particular": [384, 389, 390, 391, 393, 396, 397, 400, 402, 404, 405, 409, 418, 433, 445, 449, 450, 452, 454, 459, 461, 462, 463, 465, 467, 469, 473, 474, 477, 478, 479, 481, 483, 488, 489, 490, 491, 494, 495, 497, 499, 500, 502, 505, 507, 509, 510, 512, 513, 515, 516, 519, 520, 522, 524, 527, 529, 530, 531, 535, 537, 539, 540, 541, 543, 552, 554, 557, 562, 564, 567, 573, 575, 578], "partit": [397, 402, 410, 431, 468, 480, 488, 548], "partner": 507, "parzyszek": 511, "parzyszekacronym": 511, "parzyszekacronym2": 511, "parzyszekdistinguish": 511, "pascal": 479, "pass": [386, 388, 390, 391, 392, 394, 397, 401, 402, 404, 405, 406, 408, 409, 410, 411, 418, 421, 424, 429, 432, 434, 443, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 486, 488, 490, 491, 495, 502, 508, 509, 511, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 527, 531, 533, 534, 535, 537, 539, 542, 544, 545, 546, 547, 548, 549, 550, 552, 553, 555, 556, 557, 558, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 573, 574, 576, 577, 578, 579], "passag": 404, "passbuild": 460, "passiv": 492, "passmanag": [445, 483, 507, 542, 547, 554, 558, 564, 568, 575, 576, 577, 578], "passmanagerbas": [539, 540], "passmanagerbuild": [490, 540], "passmanagerimpl": 542, "passnam": [443, 507], "passopt": 540, "passthru": 479, "password": [452, 467, 509], "past": [404, 462, 465, 479, 507, 509, 512, 519, 524, 543, 556, 559, 566, 569, 577], "paste": [506, 529, 539], "pat": [402, 531, 539], "patch": [391, 404, 432, 458, 459, 461, 464, 467, 469, 479, 480, 491, 506, 507, 524, 535, 541, 542, 543, 545, 554, 559, 564, 569, 575], "patch_premain": [541, 542], "patch_status": 541, "patchabl": [461, 479, 522, 524], "patcher": 522, "patchpoint": [479, 524], "patfrag": 539, "path": [387, 388, 389, 390, 398, 400, 401, 404, 406, 407, 409, 410, 411, 413, 416, 417, 418, 423, 424, 426, 431, 434, 442, 444, 446, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 470, 471, 481, 490, 491, 495, 505, 507, 508, 509, 515, 519, 520, 524, 525, 533, 534, 535, 542, 557, 567, 578], "path_to_clang": 388, "path_to_llvm": 463, "pathnam": [417, 463], "pathsep": [409, 535], "patient": [403, 540], "patleaf": 539, "pattern": [0, 1, 2, 3, 388, 390, 392, 401, 402, 408, 409, 418, 424, 431, 445, 449, 455, 462, 465, 479, 490, 499, 507, 512, 513, 517, 519, 520, 527, 529, 531, 535, 539, 542, 548, 551, 553, 563, 572, 573], "paul": [511, 520], "paulkoch": 520, "paus": [389, 461, 509, 547], "pay": [404, 452, 520, 535, 539], "payload": [402, 479, 543], "pb": 507, "pbqp": [402, 410], "pc": [37, 127, 223, 317, 385, 402, 454, 458, 479, 518, 520, 533, 535, 538, 539], "pch": 519, "pcre": 481, "pcre2": 481, "pcs": 481, "pct": 433, "pd": 529, "pdata": [456, 495], "pdb": [400, 408, 493, 494, 498, 499, 519, 545], "pdbdllrbld": 495, "pdbdllversion": 495, "pdbfilepathnameindex": 495, "pdbraw_featuresig": 500, "pdbs": [433, 495, 498, 502, 503, 519], "pdbstreamhead": 500, "pdbstreamvers": 500, "pdbutil": 408, "pdf": [391, 520], "pe": [447, 461, 495, 500], "peculiar": 530, "pedant": 400, "peek": [573, 574, 575, 576, 577, 578], "peephol": [402, 455, 507, 540, 554, 555, 556, 557, 564, 565, 566, 567, 575, 576, 577, 578], "peform": 392, "penalti": [398, 479, 507], "pend": [451, 463, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "pennant": 510, "pentium": [463, 539], "penultim": 539, "peopl": [396, 398, 402, 403, 404, 445, 448, 452, 455, 457, 462, 463, 472, 479, 487, 506, 509, 514, 520, 525, 540, 545, 546, 551, 560, 570, 572, 579], "pep": 511, "per": [17, 18, 36, 114, 115, 126, 202, 203, 221, 296, 297, 315, 385, 386, 390, 393, 394, 400, 402, 413, 415, 418, 420, 424, 429, 430, 433, 445, 449, 450, 454, 461, 465, 472, 473, 478, 479, 481, 482, 484, 488, 490, 506, 507, 509, 513, 517, 519, 520, 522, 524, 527, 530, 534, 535, 540, 542, 544, 546, 547, 554, 564, 575, 580], "perceiv": [560, 570, 579], "percent": 389, "percentag": [415, 433, 434, 507], "perf": [388, 391, 400, 533], "perf_test": 510, "perfect": [392, 402, 404, 405, 433, 434, 452, 457, 462, 479, 507, 519, 552, 562, 573], "perform": [385, 386, 388, 389, 390, 391, 392, 397, 398, 399, 400, 401, 402, 404, 409, 410, 413, 420, 424, 431, 432, 434, 442, 443, 445, 449, 452, 453, 454, 455, 458, 460, 461, 462, 463, 465, 468, 469, 472, 477, 478, 479, 480, 481, 482, 483, 484, 489, 490, 491, 492, 495, 505, 507, 508, 509, 511, 512, 513, 514, 515, 517, 519, 520, 523, 524, 525, 527, 529, 533, 535, 536, 537, 539, 540, 541, 545, 546, 547, 548, 553, 557, 558, 560, 563, 567, 568, 570, 571, 574, 578, 579], "perfunctionst": 542, "perhap": [389, 404, 461, 465, 479, 489, 500, 507, 509, 519], "period": [397, 399, 452, 461, 479, 481, 535, 541], "perl": 461, "perldoc": 463, "perman": [465, 516, 548], "permiss": [48, 233, 328, 413, 452, 463, 467, 483, 516, 546], "permit": [402, 410, 456, 461, 465, 479, 480, 507, 511, 529, 535, 557, 558, 559, 567, 568, 569, 578], "permut": [384, 479], "perpetu": [452, 541], "persist": [401, 403, 453, 481, 507], "person": [393, 403, 452, 454, 474, 480, 485, 506, 516, 521, 544, 547], "personalityfn": 393, "personlist": 544, "perspect": [389, 403, 449, 454, 473, 479, 516, 524, 540], "pertain": [452, 454, 479, 519], "pervas": [473, 507, 571], "pervert": [528, 531], "pessim": [458, 505, 507], "pf0": 489, "pf1": 489, "pf_inet": 550, "pg0": 489, "pg1": 489, "pgo": [398, 434, 503, 515, 520, 545], "ph": [479, 519], "phab": 509, "phabric": [448, 452, 463, 509, 511, 545], "phase": [406, 410, 454, 461, 465, 472, 479, 492, 507, 514, 547, 552, 556, 562, 566, 573, 577], "phase3": [472, 514], "phi": [393, 402, 415, 449, 454, 465, 505, 519, 538, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "phid": 404, "phielimin": 402, "phieliminationid": 402, "philip": 511, "philosophi": [478, 545], "phinod": [404, 488, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "phis": [404, 488], "phoronix": 510, "php": [506, 510], "phrase": [401, 404], "physic": [386, 398, 403, 429, 465, 479, 484, 495, 507, 516, 519, 524, 529, 539], "physreg": 402, "pi": [385, 461, 507], "pi8": 537, "pic": [402, 411, 471, 474, 484, 519, 539], "pick": [392, 400, 402, 404, 411, 424, 429, 461, 462, 465, 470, 471, 474, 479, 506, 509, 524, 533, 539, 575], "pictur": [462, 503, 543, 553, 563, 574], "picus": [465, 511], "picusacronym": 511, "pie": 517, "piec": [393, 397, 398, 401, 402, 404, 424, 452, 459, 462, 463, 464, 469, 472, 474, 478, 479, 519, 524, 529, 535, 551, 552, 553, 555, 556, 557, 559, 562, 563, 565, 566, 567, 569, 571, 572, 573, 574, 576, 577, 578], "pienaar": 446, "pifft": 534, "pin": 479, "ping": [448, 452, 489], "pinpont": 509, "pinsrd": 405, "pinsrd_1": 405, "pinst": 507, "pip": 533, "pipe": [386, 405, 409, 429, 525, 542], "pipefail": 409, "pipelin": [386, 393, 409, 415, 429, 459, 460, 479, 487, 490, 505, 513, 515, 519, 524, 535, 536, 539, 540, 547, 575, 576, 577, 578], "pipermail": [509, 511], "pitcairn": 386, "pixel": [17, 18, 81, 114, 115, 169, 202, 203, 266, 296, 297, 363], "pl": [542, 544], "place": [386, 387, 388, 391, 392, 397, 402, 404, 407, 409, 411, 413, 429, 431, 445, 449, 450, 452, 453, 454, 455, 456, 459, 461, 462, 463, 465, 466, 467, 470, 478, 479, 484, 488, 489, 491, 505, 506, 507, 508, 509, 512, 513, 514, 519, 520, 522, 524, 529, 531, 533, 535, 536, 538, 539, 540, 544, 551, 552, 553, 554, 556, 557, 560, 562, 563, 564, 566, 567, 570, 571, 572, 574, 575, 577, 578, 579], "placehold": [453, 454], "placement": [386, 456, 459, 465, 519], "placesafepoint": 461, "plain": [405, 484, 485, 494, 507, 521, 540, 546], "plan": [402, 452, 461, 469, 477, 481, 490, 491, 507, 519, 523, 524, 531, 538, 545], "plane": [541, 556, 566, 577], "plant": 540, "plate": [445, 507], "platform": [386, 388, 390, 401, 402, 433, 449, 452, 454, 461, 463, 467, 468, 469, 471, 472, 478, 479, 482, 491, 500, 503, 504, 507, 513, 517, 520, 522, 525, 540, 543, 545, 546, 550, 554, 556, 564, 566, 575], "plausibl": 396, "play": [489, 507, 530, 540, 551, 560, 570, 572, 579], "playground": [551, 572], "pldi": [461, 512], "pleas": [388, 389, 390, 396, 400, 402, 403, 404, 428, 429, 431, 432, 444, 448, 452, 459, 461, 463, 464, 467, 468, 469, 471, 472, 474, 476, 478, 479, 485, 487, 490, 491, 506, 507, 513, 514, 516, 517, 521, 524, 526, 529, 530, 532, 535, 539, 542, 553, 560, 563, 570, 574, 579, 580], "plethora": [457, 463, 507], "plist": 432, "plot": [556, 566, 577], "plotter": [556, 566, 577], "plug": [492, 553, 563, 574], "plugin": [406, 411, 443, 469, 479, 492, 513, 515, 545], "plugin_tool": 540, "pluginfilenam": 411, "plus": [385, 386, 392, 393, 452, 454, 461, 479, 495, 507, 519, 539, 547, 552, 555, 562, 565, 573, 576], "plusten": 519, "pm": [539, 540], "pmbuilder": 490, "pmdatamanag": 542, "pmtoplevelmanag": 542, "pn": [404, 465, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "png": [400, 481, 520], "pni8": 454, "pod": 404, "point": [39, 41, 128, 224, 226, 319, 321, 383, 384, 389, 390, 393, 394, 396, 397, 399, 400, 402, 404, 410, 418, 424, 429, 433, 445, 446, 453, 454, 455, 459, 462, 463, 465, 467, 470, 471, 472, 473, 477, 480, 482, 483, 488, 489, 490, 491, 495, 499, 502, 507, 509, 513, 514, 519, 520, 524, 525, 528, 531, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "point_numb": [34, 35, 125, 219, 220, 313, 314], "pointcount": 461, "pointe": [386, 393, 479, 513], "pointee_align": 386, "pointeealign": 386, "pointer": [385, 386, 390, 393, 402, 410, 446, 449, 454, 457, 458, 459, 461, 465, 477, 480, 482, 483, 484, 489, 490, 491, 494, 502, 505, 513, 517, 519, 520, 522, 527, 537, 539, 540, 543, 544, 546, 548, 549, 550, 551, 552, 554, 555, 557, 559, 560, 562, 564, 565, 567, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579], "pointer1": 520, "pointer2": 520, "pointer_offset": 524, "pointerflag": 494, "pointerkind": 494, "pointermod": 494, "pointermodifi": 494, "pointertodatamemb": 494, "pointertojittargetaddress": 491, "pointertomemberfunct": 494, "pointertyp": 507, "pointi": 544, "pointless": [454, 488, 524], "pointstoconstantmemori": 479, "pointtoconstantmemori": 389, "poison": 520, "poison2": 479, "poison3": 479, "poison4": 479, "poison_yet_again": 479, "poke": 393, "polar": 544, "polaris10": 386, "polaris11": 386, "polici": [384, 386, 389, 393, 404, 463, 507, 509, 511, 545], "polit": [402, 403], "poll": [461, 487, 524], "polli": [400, 452, 463, 509, 511, 512, 536], "pollut": 404, "polyhedr": 512, "polymorph": [399, 522], "pong": 489, "pool": [393, 402, 415, 491, 522, 539, 540, 546], "poolalloc": 389, "poor": [394, 403, 404, 524, 555, 565, 576], "pop": [385, 388, 393, 402, 461, 479, 507, 543, 555, 557, 558, 559, 565, 567, 568, 569, 576, 578], "pop2_": 510, "pop_back": [445, 507, 559, 569], "popcnt": 481, "popf": 520, "popfq": 520, "popq": [520, 522, 524], "pops_exiting_wave_id": 385, "pops_pack": 36, "popul": [409, 454, 455, 463, 479, 490, 492, 520, 527, 553, 563], "popular": [389, 401, 402, 453, 463, 468, 479, 571], "pornin": 520, "porpoda": 512, "port": [402, 424, 457, 467, 513, 520, 525, 538, 541, 550, 560, 570, 579], "portabl": [398, 400, 402, 409, 430, 461, 479, 491, 507, 545, 546], "portion": [397, 398, 401, 402, 406, 429, 445, 450, 452, 454, 463, 479, 484, 486, 488, 505, 510, 519, 520, 539, 543, 547, 554, 564, 575], "portugues": 517, "pos": [81, 169, 266, 363], "pos1": 445, "pos2": 445, "pose": [461, 480, 520], "posit": [7, 36, 42, 81, 99, 105, 126, 129, 169, 185, 189, 221, 222, 227, 266, 282, 286, 315, 316, 322, 363, 381, 384, 385, 386, 393, 402, 405, 411, 434, 442, 446, 449, 452, 454, 456, 463, 471, 476, 479, 481, 482, 484, 495, 507, 512, 519, 520, 522, 524, 529, 544, 555, 556, 565, 566, 573, 576, 577], "position_at_end": [574, 575, 576, 577, 578], "positionaleatsarg": 445, "posix": [400, 405, 413, 430, 431, 453, 515], "possbil": 544, "possess": [450, 507], "possibl": [385, 386, 389, 390, 391, 392, 393, 397, 399, 400, 402, 409, 424, 429, 433, 446, 449, 450, 452, 455, 456, 457, 459, 461, 462, 463, 465, 466, 467, 470, 471, 473, 474, 477, 479, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 493, 495, 499, 505, 506, 507, 509, 511, 512, 513, 514, 516, 518, 519, 520, 521, 524, 525, 527, 529, 533, 535, 536, 540, 543, 544, 551, 552, 554, 555, 557, 559, 560, 561, 562, 564, 565, 567, 569, 570, 572, 573, 575, 576, 578, 579], "post": [402, 403, 411, 448, 452, 465, 479, 484, 487, 506, 508, 513, 515, 516, 517, 519, 520, 524, 545], "poster": 403, "postfix": 404, "postincr": 404, "postord": 480, "postrapseudo": 484, "postscript": 505, "potenti": [389, 396, 397, 402, 404, 409, 429, 445, 452, 454, 457, 459, 461, 463, 465, 469, 479, 481, 487, 488, 505, 507, 511, 512, 516, 517, 519, 520, 522, 524, 536, 537, 542, 551, 552, 555, 561, 562, 565, 572, 573, 576], "pound": 544, "povray31": 534, "pow": [490, 538], "power": [386, 389, 398, 402, 405, 445, 447, 465, 468, 477, 479, 482, 505, 506, 507, 513, 528, 529, 531, 543, 551, 552, 553, 554, 555, 556, 557, 562, 563, 564, 565, 566, 567, 572, 573, 574, 575, 576, 577, 578], "powerpc": [390, 400, 431, 455, 463, 479, 480, 511, 522, 535, 539, 544], "powerpc64": [447, 479], "powerpc64l": 541, "powerpcl": 431, "pp": [385, 502, 573, 574, 575, 576, 577, 578], "ppa": 463, "ppas": 463, "ppc": 513, "ppc32": 402, "ppc64": 402, "ppc_fp128": [393, 479, 489], "ppcf128": 479, "ppcinstrinfo": 455, "ppcisellow": 455, "pr": [452, 480, 519, 535], "pr26161": 465, "pr26576": 465, "pr34636": 460, "pr40547": 513, "practic": [390, 398, 404, 445, 452, 457, 458, 461, 462, 473, 479, 480, 481, 494, 498, 500, 502, 505, 507, 509, 519, 520, 522, 524, 529, 536, 545, 547, 551, 553, 554, 555, 563, 564, 565, 571, 572, 574, 575, 576], "practis": 394, "pragma": [446, 505, 536], "pragmat": 513, "pre": [384, 402, 411, 452, 455, 465, 472, 474, 480, 491, 505, 507, 508, 509, 519, 527, 531, 536, 574], "pre_stor": 402, "prealloc": 507, "prebuilt": 453, "prec": [556, 557, 558, 559, 566, 567, 568, 569, 577, 578], "precaut": 507, "preced": [386, 389, 393, 404, 405, 409, 416, 430, 442, 449, 465, 479, 488, 505, 507, 517, 519, 522, 524, 530, 543, 546, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578], "preceed": [479, 519], "precis": [385, 386, 389, 390, 402, 410, 411, 461, 463, 465, 473, 484, 513, 519, 522, 527, 539, 551, 552, 553, 561, 562, 563, 572, 573, 574], "preclud": [392, 520, 524], "precompil": [490, 546], "precomput": 389, "precondit": 404, "precursor": 452, "pred": [454, 479, 490, 507, 519, 555, 557, 565, 567, 576, 578], "predecessor": [394, 402, 459, 479, 505, 512, 519, 555, 565, 576], "predefin": [402, 409, 460, 513, 524, 533, 540, 556, 566, 577], "predetermin": 389, "predic": [390, 392, 476, 479, 491, 507, 512, 520, 527, 529, 531, 539], "predicate_st": 520, "predicate_stor": 539, "predicateinfo": 479, "predict": [395, 404, 429, 459, 520, 540, 545], "predictor": 520, "predreg": 476, "predrel": 476, "predsens": 476, "preemptabl": 481, "preemptibl": 505, "preemption": 393, "preemptionspecifi": [393, 479], "preexist": 505, "pref": [479, 507], "prefac": 401, "prefer": [389, 390, 401, 442, 446, 452, 454, 463, 467, 468, 469, 479, 484, 487, 489, 506, 507, 511, 514, 519, 525, 531, 539, 542, 551, 572], "prefetch": 447, "prefix": [386, 393, 398, 400, 402, 404, 409, 417, 418, 431, 442, 445, 454, 463, 466, 481, 484, 491, 492, 493, 494, 500, 507, 508, 509, 511, 519, 524, 529, 531, 533, 535, 556, 566, 577, 578], "prefix1": 405, "prefix2": 405, "prefixdata": 393, "preformat": [485, 521], "preg": 402, "prehead": [505, 555, 565, 576], "preheader_bb": [576, 577], "preheaderbb": [555, 556, 565, 566], "preinstal": 453, "preorder": 473, "prepar": [418, 449, 454, 462, 471, 479, 487, 489, 499, 502, 505, 506, 509, 513, 514, 516, 519, 524, 545, 554, 564], "prepass": 402, "prepdefin": 530, "prepels": 530, "prepend": [407, 418, 479, 507, 511, 519, 530, 533], "prependif": 530, "prepifdef": 530, "prepregcontentexcept": 530, "prepregion": 530, "preprocess": [457, 474], "preprocessor": [400, 418, 445, 446, 450, 457, 507, 530, 539, 554, 560, 564, 570, 575, 579], "prequisit": 470, "prerequisit": [404, 540], "presenc": [390, 402, 405, 429, 454, 473, 479, 492, 500, 507, 513, 519, 539, 543], "present": [386, 393, 399, 402, 405, 409, 411, 418, 419, 428, 429, 433, 442, 445, 446, 449, 454, 456, 458, 461, 462, 463, 465, 470, 474, 479, 492, 494, 495, 498, 499, 500, 502, 507, 509, 510, 513, 519, 520, 524, 530, 536, 545, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "preserv": [384, 389, 392, 402, 404, 413, 416, 418, 431, 445, 449, 454, 462, 463, 481, 509, 520, 522, 536, 540, 543, 560, 570, 579], "preserve_allcc": [393, 479], "preserve_mostcc": [393, 479], "preserveal": 479, "preservedanalys": 511, "preservedanalysescheck": 511, "preservemost": 479, "press": [558, 568], "pressur": [402, 404, 429, 520, 538], "presum": [479, 495, 500, 502, 509], "pretti": [391, 442, 462, 475, 481, 485, 486, 488, 489, 505, 507, 520, 521, 525, 529, 530, 534, 540, 551, 552, 553, 554, 555, 556, 557, 561, 562, 563, 564, 565, 566, 567, 572, 573, 574, 575, 576, 577, 578], "prettyprint": 507, "prev": 507, "prevail": 413, "prevent": [386, 389, 402, 404, 405, 445, 446, 449, 452, 457, 461, 479, 491, 495, 505, 507, 509, 517, 518, 519, 520, 522, 524, 525, 535, 538, 540, 549, 550, 553, 557, 558, 559, 563, 567, 568, 569, 574, 578], "previous": [386, 390, 392, 393, 400, 402, 404, 405, 413, 418, 429, 431, 434, 445, 449, 450, 452, 454, 455, 456, 469, 472, 478, 479, 481, 485, 489, 490, 493, 498, 502, 503, 506, 507, 509, 513, 514, 518, 520, 521, 524, 530, 534, 539, 540, 543, 544, 546, 548, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 571, 573, 574, 576, 577, 578], "prf": 429, "prim": [81, 510], "primari": [389, 401, 402, 403, 452, 454, 461, 479, 481, 492, 495, 505, 507, 517, 520, 523, 545, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "primarili": [402, 409, 416, 421, 425, 461, 463, 468, 477, 478, 481, 484, 505, 507, 520, 529, 556, 566, 577], "primaryexpr": [385, 552, 562, 573], "primaryfunctionid": 456, "prime": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "primer": [398, 400, 521], "primit": [81, 390, 404, 445, 462, 479, 484, 489, 494, 507, 517, 520, 543, 556, 560, 566, 570, 577, 579], "princeton": 510, "principl": [404, 447, 470, 489, 511, 519, 525, 551, 571, 572], "print": [401, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 422, 423, 424, 425, 427, 429, 430, 431, 432, 434, 438, 440, 442, 443, 444, 445, 449, 455, 457, 461, 463, 464, 469, 472, 474, 479, 481, 484, 486, 488, 492, 507, 519, 527, 529, 531, 533, 534, 538, 539, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 571, 573, 574, 575, 576, 577, 578], "print_endlin": [573, 574, 575, 576, 577, 578], "print_final_stat": 481, "print_float": [575, 576, 577, 578], "print_list": 401, "print_newlin": [575, 576, 577, 578], "print_pc": 481, "print_str": [573, 574, 575, 576, 577, 578], "printabl": [413, 479, 484, 527, 539], "printccoperand": 539, "printd": [554, 555, 556, 557, 558, 559, 560, 564, 565, 566, 567, 568, 569, 570, 577, 578, 579], "printdatadirect": 539, "printdeclar": 539, "printdens": [556, 566, 577], "printer": [398, 402, 461, 478, 486, 507, 515, 527, 540, 558, 568], "printexprresult": 550, "printf": [386, 397, 450, 457, 463, 464, 466, 479, 482, 507, 519, 550, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 577, 578], "printformattedfil": 507, "printfunctionpass": 505, "printimplicitdef": 539, "printinformationalmessag": 445, "printinlineasm": 539, "printinstruct": [527, 539], "printlabel": 539, "printmemoperand": 539, "printmethod": 539, "printnextinstruct": 507, "printoperand": 539, "printout": [443, 507], "printstar": [555, 565, 576], "printsth": 505, "prior": [386, 393, 402, 431, 445, 449, 450, 452, 454, 463, 477, 478, 479, 511, 520, 536, 540], "priorit": 429, "prioriti": [385, 386, 433, 446, 462, 472, 479, 516, 519], "priority_queu": 507, "priv": 386, "privat": [385, 386, 393, 432, 449, 452, 459, 467, 473, 478, 479, 489, 490, 495, 507, 516, 519, 520, 527, 539, 546, 547, 548, 549, 550], "private_bas": 385, "private_limit": 385, "private_segment_align": 386, "private_segment_fixed_s": 386, "privatesegmentfixeds": 386, "privileg": [386, 479, 520, 525, 546], "prng": 481, "pro": 386, "proactiv": [397, 452], "probabl": [402, 404, 415, 418, 445, 446, 452, 453, 457, 461, 462, 468, 479, 484, 507, 508, 509, 510, 523, 524, 552, 555, 560, 562, 565, 570, 573, 576, 579], "probe": [402, 479, 507], "problem": [389, 396, 397, 402, 404, 405, 406, 445, 452, 457, 459, 460, 461, 462, 465, 468, 470, 471, 472, 474, 477, 479, 480, 492, 495, 500, 504, 505, 507, 509, 511, 517, 519, 520, 524, 525, 535, 545, 553, 555, 556, 560, 563, 565, 566, 570, 574, 576, 577, 579], "problemat": [404, 429, 452, 509, 513], "proc": [391, 463, 468, 539], "proccess": 481, "procedur": [392, 395, 445, 447, 459, 472, 479, 480, 489, 507, 508, 520, 523, 551, 561, 572], "proceed": [400, 402, 446, 449, 454, 461, 472, 480, 489, 491, 507, 512, 514, 520], "process": [388, 389, 390, 391, 394, 397, 398, 400, 401, 404, 405, 413, 429, 432, 433, 434, 444, 445, 446, 450, 451, 452, 453, 454, 456, 461, 463, 468, 469, 474, 476, 478, 479, 481, 482, 483, 492, 493, 505, 506, 507, 509, 511, 517, 519, 520, 524, 525, 531, 535, 538, 539, 540, 541, 544, 546, 548, 549, 551, 552, 554, 560, 561, 562, 564, 570, 572, 573, 575, 579, 580], "processformattedfil": 507, "processor": [392, 400, 402, 411, 429, 445, 447, 461, 463, 479, 513, 519, 520, 527, 531, 538, 539, 558, 568], "processrelocationref": 483, "procnoitin": 531, "procsym": 456, "produc": [384, 385, 386, 390, 391, 392, 393, 397, 400, 402, 404, 405, 406, 407, 409, 410, 413, 415, 418, 420, 421, 429, 433, 443, 449, 450, 452, 453, 454, 457, 460, 461, 462, 463, 466, 471, 474, 477, 478, 479, 481, 486, 488, 489, 491, 495, 497, 499, 500, 502, 505, 507, 512, 513, 515, 519, 523, 524, 525, 527, 529, 533, 535, 538, 539, 540, 543, 544, 546, 547, 553, 554, 555, 557, 559, 563, 564, 565, 567, 569, 574, 575, 576, 578, 579], "product": [386, 394, 402, 403, 407, 429, 452, 461, 472, 479, 489, 513, 530, 540, 548, 552, 556, 562, 566, 573, 577], "prof": [394, 395, 469], "profdata": [388, 400, 408, 418, 450, 469, 479, 533], "profession": [448, 452], "profil": [386, 388, 395, 398, 400, 408, 418, 424, 436, 437, 450, 458, 459, 470, 484, 506, 508, 513, 515, 519, 543, 545], "profiledata": 479, "profit": [402, 446, 458, 459, 479, 487, 505, 520, 536, 538], "profraw": [388, 418, 450, 469], "progbit": [456, 520], "program": [385, 389, 390, 391, 397, 400, 401, 404, 405, 406, 408, 409, 410, 413, 416, 418, 419, 425, 428, 429, 430, 431, 432, 433, 436, 437, 442, 443, 444, 445, 446, 450, 451, 452, 453, 454, 458, 459, 460, 461, 462, 463, 464, 466, 470, 472, 473, 474, 479, 480, 481, 482, 490, 491, 493, 495, 500, 502, 503, 504, 505, 507, 510, 515, 517, 519, 520, 522, 523, 524, 525, 527, 531, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 548, 550, 551, 552, 554, 555, 557, 558, 559, 560, 562, 564, 565, 567, 568, 569, 570, 572, 573, 575, 576, 578, 579], "programm": [386, 390, 397, 402, 404, 443, 445, 446, 447, 448, 461, 473, 513, 520, 530, 536, 538, 540, 545, 546, 556, 559, 566, 569, 577, 579], "programmat": [402, 434, 461, 490, 529, 541, 544, 556, 566, 577], "programmersmanu": 546, "progress": [386, 387, 390, 400, 402, 409, 429, 447, 449, 452, 461, 472, 479, 480, 484, 507, 511, 541, 551, 572], "prohibit": [390, 482, 488, 520], "proj": 472, "proj_install_root": 508, "proj_obj_root": 508, "proj_src_root": 508, "project": [388, 398, 403, 404, 408, 409, 447, 448, 453, 455, 457, 459, 460, 464, 465, 469, 470, 471, 472, 481, 491, 506, 507, 510, 511, 516, 517, 519, 520, 522, 524, 533, 534, 535, 541, 545, 546, 547, 548, 549, 550, 551, 571, 572], "project_nam": 508, "projector": 487, "prolang": 534, "prolifer": 511, "prolog": [479, 480, 520, 539], "prologepilog": 515, "prologu": [386, 393, 402, 410, 461, 518, 519, 539, 559, 569], "prologue_end": 456, "prologuedata": 393, "promin": 533, "promis": [452, 541], "promot": [389, 402, 446, 452, 455, 459, 479, 480, 492, 507, 512, 519, 557, 559, 567, 569, 578], "promoteop": 455, "prompt": 452, "prone": [402, 445, 468, 507, 531], "proof": [395, 484, 520], "prop": 464, "propag": [386, 400, 402, 445, 446, 454, 463, 479, 480, 484, 492, 515, 519, 520, 523, 524, 525], "proper": [385, 387, 389, 390, 396, 397, 399, 402, 407, 409, 445, 446, 448, 450, 456, 463, 465, 473, 478, 479, 507, 539, 545, 554, 557, 559, 564, 567, 569, 578], "properti": [382, 387, 389, 390, 392, 393, 402, 404, 407, 429, 431, 445, 449, 450, 455, 461, 464, 465, 476, 478, 479, 484, 488, 489, 495, 502, 505, 507, 509, 520, 522, 523, 524, 527, 531, 536, 539, 540, 554, 557, 564, 567, 578], "property_nam": 478, "property_valu": 478, "propon": 511, "proport": [434, 445, 465], "propos": [394, 452, 459, 465, 481, 511, 512, 520, 542], "pros": 392, "prose": 404, "prospect": 452, "protect": [390, 393, 399, 402, 404, 452, 479, 481, 509, 516, 520, 525, 539], "protector": [479, 519], "proto": [549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "protoast": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "protobuf": 460, "protocol": [460, 479, 509, 524], "prototyp": [404, 425, 455, 459, 479, 517, 539, 540, 545, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "prototypeast": [549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "prove": [389, 459, 477, 479, 489, 505, 520], "proven": [386, 430, 452, 459, 479, 505, 513, 524, 557, 567, 578], "provid": [10, 108, 192, 289, 382, 385, 386, 388, 389, 390, 393, 395, 398, 399, 400, 401, 402, 405, 406, 409, 413, 415, 416, 418, 423, 424, 429, 431, 437, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 459, 461, 462, 463, 464, 465, 467, 468, 470, 473, 478, 479, 480, 481, 482, 483, 486, 487, 488, 490, 491, 492, 497, 502, 503, 505, 507, 508, 509, 513, 515, 516, 517, 519, 520, 522, 524, 525, 527, 529, 530, 534, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 578, 579], "provis": 452, "proviso": 452, "proxi": 402, "proxyapp": 510, "prune": [488, 509, 512, 541], "pruneexpir": 509, "ps": 529, "psabi": 447, "pse": 511, "pseudo": [392, 394, 402, 444, 449, 465, 478, 479, 484, 491, 507, 513, 519, 520, 527, 539, 540], "pseudocod": 539, "pseudonym": 516, "pstl": 509, "psubus": 535, "psubusw": 535, "pthread": [446, 479, 517], "pthread_attr_t": 479, "pthread_creat": 479, "pti": 479, "ptr": [386, 390, 404, 449, 458, 494, 507, 513, 522, 537, 539], "ptr0": 479, "ptr1": 479, "ptr2": 479, "ptr3": 479, "ptr64": 386, "ptr7": 479, "ptr_is_nul": 458, "ptr_rc": 402, "ptra": 490, "ptrb": 490, "ptrc": 490, "ptrloc": [461, 479], "ptroff": 402, "ptrreg": 402, "ptrs": 479, "ptrtoint": [459, 524], "ptrtoreplacedint": 507, "ptrval": 479, "pts": 510, "ptx": [402, 446, 447], "ptx30": 402, "ptx31": 402, "ptxas": 446, "ptxstring": 490, "pty2": 479, "pub": 519, "public": [398, 401, 404, 433, 445, 452, 460, 461, 463, 467, 473, 478, 490, 495, 503, 510, 514, 516, 519, 520, 539, 540, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "publicstreamindex": 495, "publish": [404, 446, 503, 507, 511, 514], "pubnam": [423, 519], "pubtyp": [423, 519], "pugixml": 481, "pull": [384, 390, 396, 402, 404, 463, 506, 509], "puls": 481, "punctuat": [404, 479, 530], "pure": [390, 397, 402, 452, 465, 478, 480, 505, 512, 519, 524, 530, 539, 553, 563, 574], "purg": 404, "purifi": 474, "purpos": [386, 392, 398, 402, 404, 429, 433, 445, 446, 449, 452, 454, 459, 462, 463, 465, 479, 489, 490, 491, 492, 495, 499, 500, 505, 507, 511, 513, 514, 517, 519, 520, 523, 524, 525, 527, 528, 531, 540, 543, 546, 553, 554, 559, 563, 564, 569], "pursu": 520, "push": [397, 399, 402, 404, 461, 463, 479, 506, 509, 559, 569], "push_back": [404, 507, 539, 544, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "pushf": [402, 520], "pushfl": 402, "pushfq": [402, 520], "pushq": [520, 524], "put": [386, 389, 390, 391, 397, 402, 403, 404, 405, 445, 450, 451, 453, 454, 458, 461, 463, 465, 470, 472, 479, 485, 489, 491, 505, 506, 507, 509, 519, 520, 521, 535, 540, 544, 551, 554, 555, 557, 559, 560, 564, 565, 567, 569, 570, 572, 576, 578, 579], "putchar": [554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 575, 576, 577, 578], "putchard": [554, 555, 556, 557, 558, 559, 560, 564, 565, 566, 567, 568, 569, 570, 575, 576, 577, 578, 579], "puzzl": 474, "pv": 449, "pwd": [463, 471, 517], "py": [409, 448, 467, 469, 507, 509, 533, 539], "pygment": [485, 553, 563], "pynam": 510, "python": [409, 449, 461, 463, 464, 471, 481, 507, 509, 511, 514, 527, 530, 533, 535, 560, 570, 579], "python2": 468, "python_execut": 463, "q0": [392, 479], "q1": 452, "q15": 479, "q2": 452, "q3": [452, 479], "q31": 479, "q8": 479, "qch": 400, "qeaa": 454, "qemu": 481, "qhelpgener": 400, "qmcpack": 510, "qnan": 479, "qps": 520, "qpx": 479, "qspectr": 520, "qt": [400, 511], "qt_coding_styl": 511, "quad": [384, 385, 479, 520, 524, 539], "quad_perm": [384, 386], "quadrant": 386, "quadrat": [402, 410, 488, 507], "qualifi": [386, 402, 404, 462, 472, 479, 493, 494, 519], "qualiti": [402, 423, 429, 459, 468, 472, 479, 535, 540, 546, 548], "qualtyp": 404, "quantiti": 479, "quarantin": 517, "quarantinechunksuptos": 517, "quarantinesizekb": 517, "quartil": 520, "quentin": 465, "queri": [386, 389, 390, 402, 404, 429, 433, 445, 459, 465, 475, 476, 479, 488, 491, 492, 503, 507, 519, 538, 539, 540, 542, 547, 560, 570, 579], "query_sampl": 386, "question": [389, 396, 404, 448, 452, 459, 462, 463, 464, 473, 479, 481, 485, 489, 506, 507, 508, 511, 513, 519, 521, 528, 536, 545, 552, 555, 557, 560, 562, 565, 567, 570, 573, 576, 578, 579], "queu": 386, "queue": [429, 491, 507, 539, 540, 541], "queue_ptr": 386, "quick": [389, 397, 402, 404, 413, 429, 448, 452, 454, 459, 462, 464, 471, 474, 479, 481, 488, 493, 504, 505, 506, 507, 511, 514, 519, 525, 541, 545, 547, 554, 560, 564, 570, 575, 579], "quickcheck": 507, "quicker": [468, 488, 516, 547], "quicksilv": 510, "quickstart": [471, 485, 545], "quiet": [386, 409, 423, 445, 451, 479, 519], "quiet2": 445, "quieta": 445, "quirk": [401, 524], "quit": [389, 402, 405, 446, 451, 455, 459, 461, 462, 463, 465, 479, 485, 489, 507, 520, 521, 522, 525, 545, 548, 553, 555, 560, 563, 565, 570, 574, 576, 579], "quot": [386, 400, 445, 478, 479, 481, 484, 519, 529, 535, 544], "quotient": 479, "quotingtyp": 544, "quux": 404, "qux": 479, "qword": 513, "qx": 392, "r0": [402, 405, 479, 484, 486, 529, 539], "r1": [402, 405, 479, 484, 490, 507, 509, 529, 539], "r10": [402, 424, 490, 518, 531], "r10b": 531, "r10d": 531, "r10w": 531, "r11": [479, 518, 522, 531], "r11b": 531, "r11d": 531, "r11w": 531, "r12": [402, 456, 479, 531], "r1234": 509, "r12345": 472, "r123456": 509, "r128": [51, 136, 236], "r12b": 531, "r12d": 531, "r12w": 531, "r13": [402, 531], "r13b": 531, "r13d": 531, "r13w": 531, "r14": [402, 479, 531], "r14b": 531, "r14d": 531, "r14w": 531, "r15": [402, 479, 484, 531], "r15b": 531, "r15d": 531, "r15w": 531, "r173931": 527, "r2": [402, 405, 479, 484, 507, 509, 529], "r258109": 509, "r285": 386, "r3": [402, 405, 479, 490, 509, 529], "r31": [402, 479], "r341082": 481, "r342924": 446, "r390": 386, "r390x": 386, "r4": [402, 405, 456], "r5": [402, 405], "r6": [402, 405], "r600": 386, "r630": 386, "r6xx": 386, "r7": [386, 402, 405, 479], "r700": 386, "r7xx": 386, "r8": [402, 424, 479, 520, 522, 531], "r8b": 531, "r8d": 531, "r8w": 531, "r9": [386, 402, 490, 522, 531], "r9b": 531, "r9d": 531, "r9w": 531, "r_386_8": 456, "r_amdgpu_abs32": 386, "r_amdgpu_abs32_hi": 386, "r_amdgpu_abs32_lo": 386, "r_amdgpu_abs64": 386, "r_amdgpu_gotpcrel": 386, "r_amdgpu_gotpcrel32_hi": 386, "r_amdgpu_gotpcrel32_lo": 386, "r_amdgpu_non": 386, "r_amdgpu_rel32": 386, "r_amdgpu_rel32_hi": 386, "r_amdgpu_rel32_lo": 386, "r_amdgpu_rel64": 386, "r_amdgpu_relative64": 386, "r_arm_thm_movw_abs_nc": 471, "r_offset": 386, "r_x86_64_8": 456, "ra": [411, 519], "rabfikou": 413, "race": [386, 390, 403, 449, 479, 507, 517, 535], "racist": 403, "radamsa": 481, "radare2": 481, "radeon": 386, "radic": [402, 465], "radius": 473, "radix": [402, 404, 430, 479], "rage": 415, "raii": 449, "rais": [396, 397, 454, 461, 479, 505, 507, 509, 520, 524, 572, 573, 574, 575, 576, 577, 578], "rajaperf": 510, "ram": [467, 481], "ramif": 462, "ramp": 449, "ramsey": 402, "ran": [418, 520, 540], "rand": 481, "random": [391, 397, 404, 406, 408, 409, 452, 479, 481, 507, 510, 541], "randomize_va_spac": 391, "rang": [7, 42, 105, 129, 189, 227, 286, 322, 384, 385, 386, 389, 394, 397, 402, 403, 409, 410, 423, 429, 433, 434, 445, 449, 454, 456, 459, 461, 462, 465, 473, 491, 512, 513, 519, 524, 529, 538, 540, 545, 551, 554, 556, 564, 566, 571, 572, 575, 577], "rangeend": 456, "rangelist": 530, "rangepiec": 530, "rangestart": 456, "rank": 505, "ranlib": [435, 463, 466, 470], "rapaport": 512, "rapid": [452, 520], "rare": [393, 402, 403, 404, 405, 454, 458, 459, 461, 471, 479, 502, 507, 520, 529, 539], "rat": 429, "rate": [393, 413, 415, 448, 452, 481, 509], "rather": [389, 393, 394, 402, 403, 404, 407, 409, 418, 442, 446, 452, 453, 457, 459, 461, 462, 464, 465, 468, 479, 481, 491, 492, 495, 497, 505, 507, 509, 512, 513, 514, 519, 520, 524, 530, 535, 539, 546, 547, 548, 552, 553, 559, 562, 563, 569, 573], "ratio": [394, 520], "rational": [402, 452, 465, 545], "rauw": [480, 489, 507, 519], "raven": 386, "raw": [402, 414, 418, 422, 425, 427, 429, 431, 432, 433, 436, 437, 443, 445, 449, 450, 456, 469, 475, 483, 486, 527, 534, 542, 553, 563], "raw_fd_ostream": [558, 568], "raw_ostream": [402, 455, 507, 540, 542, 544, 548, 549, 550, 558, 559, 568, 569], "raw_string_ostream": [548, 549, 550], "rawfrm": [529, 539], "rax": [402, 479, 484, 513, 520, 522, 524, 531, 539], "rbp": [402, 531], "rbx": [402, 531], "rc": [472, 514], "rc1": 514, "rc2": 514, "rcn": [472, 514], "rcp_iflag_f32": 386, "rcu": 429, "rcx": [402, 479, 520, 531], "rd": [456, 539], "rdi": [402, 424, 456, 479, 484, 513, 519, 520, 522, 531], "rdtsc": 479, "rdx": [402, 520, 522, 524, 531], "rdynam": [554, 556, 564, 566, 577, 578], "re": [389, 392, 396, 400, 401, 402, 403, 404, 405, 406, 445, 446, 448, 452, 454, 457, 459, 460, 461, 463, 465, 466, 468, 469, 471, 472, 474, 479, 481, 483, 488, 489, 491, 500, 504, 506, 507, 509, 512, 514, 519, 520, 524, 525, 527, 528, 531, 534, 535, 540, 541, 542, 546, 548, 549, 550, 551, 553, 554, 555, 557, 558, 559, 560, 563, 564, 565, 567, 568, 569, 570, 572, 574, 575, 576, 578, 579], "reach": [404, 429, 449, 452, 454, 458, 472, 478, 479, 481, 487, 488, 489, 491, 492, 505, 507, 512, 516, 520, 522, 539], "reachabl": [400, 461, 479, 480, 520, 524], "react": 396, "read": [24, 25, 26, 27, 28, 36, 47, 48, 54, 117, 118, 119, 120, 126, 133, 137, 206, 207, 208, 209, 210, 211, 212, 213, 221, 232, 233, 237, 303, 304, 305, 306, 307, 315, 327, 328, 334, 384, 385, 386, 389, 390, 392, 393, 397, 400, 401, 402, 404, 405, 410, 411, 413, 414, 415, 418, 419, 421, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 445, 447, 449, 451, 452, 453, 455, 456, 457, 458, 463, 464, 469, 474, 479, 481, 484, 485, 489, 495, 497, 503, 505, 506, 507, 513, 519, 520, 521, 522, 523, 524, 530, 531, 535, 538, 541, 543, 544, 545, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 574, 575, 577, 578, 579], "read_async": 449, "read_on": 386, "read_writ": 386, "readabl": [385, 387, 390, 399, 402, 414, 415, 418, 422, 423, 427, 434, 442, 456, 463, 479, 484, 485, 495, 505, 507, 511, 519, 521, 540, 544, 553, 563], "readandmaybemodifi": 481, "readattribut": 527, "readelf": [408, 430, 432], "reader": [393, 404, 408, 430, 433, 434, 455, 457, 479, 489, 495, 511, 527, 543, 544, 546, 547, 552, 562, 573], "readi": [429, 445, 448, 449, 452, 466, 472, 483, 487, 489, 519, 540, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578], "readjust": 402, "readm": [452, 463, 485, 509, 511, 521, 533, 535], "readnon": [393, 459, 479, 490, 505, 519, 524, 537], "readobj": [408, 430, 432, 436, 507, 519], "readon": [386, 393, 424, 431, 459, 479, 488, 505, 519, 522, 524, 542], "readthedoc": 485, "readtscp": 543, "readwrit": 386, "readyset": 429, "real": [382, 389, 391, 405, 424, 429, 431, 445, 456, 465, 479, 481, 490, 495, 502, 507, 516, 519, 531, 539, 551, 556, 561, 566, 571, 577], "realign": 479, "realist": [461, 520, 529, 552, 562, 573], "realiti": 472, "realiz": [452, 455, 556, 566, 575, 577], "realli": [388, 390, 400, 404, 445, 446, 452, 455, 462, 463, 464, 479, 481, 485, 488, 500, 502, 505, 506, 507, 519, 521, 529, 530, 534, 535, 551, 553, 554, 555, 556, 557, 559, 560, 561, 563, 564, 565, 566, 567, 569, 570, 572, 574, 575, 576, 577, 578, 579], "realloc": [389, 507], "reallyhidden": 445, "realmag": [556, 566, 577], "realpr": 479, "realstart": [556, 566, 577], "ream": 511, "reamesconcern": 511, "reappli": 452, "rearrang": 480, "reason": [387, 389, 390, 395, 396, 398, 400, 401, 402, 404, 445, 449, 452, 454, 455, 458, 459, 461, 462, 463, 465, 471, 473, 478, 479, 481, 485, 488, 489, 491, 494, 497, 507, 510, 515, 516, 517, 518, 519, 520, 521, 524, 525, 527, 529, 535, 536, 540, 546, 548, 551, 552, 553, 554, 555, 557, 559, 562, 563, 564, 565, 567, 569, 572, 573, 574, 575, 576, 578], "reassoc": 479, "reassoci": [479, 480, 554, 555, 556, 557, 564, 565, 566, 567, 575, 576, 577, 578], "reassur": 481, "rebas": [432, 463, 506, 509], "rebuild": [388, 400, 407, 469, 522, 542], "rec": [572, 573, 574, 575, 576, 577, 578], "recal": [489, 544, 553, 554, 555, 563, 564, 565, 574, 575], "recap": 392, "receipt": 516, "receiv": [385, 393, 401, 402, 448, 454, 459, 460, 467, 479, 481, 483, 507, 516, 520, 531, 536, 548, 573], "receivedtermin": 550, "recent": [400, 452, 453, 454, 461, 463, 479, 481, 487, 502, 506, 514, 517, 520, 544, 554, 564], "recept": 452, "recheck": [489, 505], "recip": [470, 509, 512], "recipi": 452, "reciproc": [429, 479, 513], "reclaim": [479, 480, 491], "recogn": [391, 402, 442, 445, 479, 482, 489, 505, 507, 520, 530, 534, 551, 555, 559, 561, 565, 569, 572, 576], "recognis": 507, "recombin": 546, "recommend": [398, 400, 401, 402, 404, 409, 429, 446, 452, 459, 461, 462, 463, 465, 466, 469, 470, 477, 479, 481, 487, 490, 504, 506, 520, 524, 535, 536, 540, 552, 554, 557, 558, 562, 564, 567, 568, 573, 575, 578], "recommonmark": 485, "recompil": [389, 392, 458, 513, 522, 548, 555, 565, 576], "recomput": [389, 507, 540], "reconfigur": [467, 478], "reconstitut": 479, "reconstruct": [413, 433, 462, 497, 519, 541, 543], "record": [396, 410, 411, 430, 434, 437, 443, 444, 452, 479, 487, 495, 498, 499, 500, 503, 506, 512, 516, 519, 522, 527, 529, 530, 531, 538, 542, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 579], "record_kind": 543, "recordhead": 494, "recordid": 393, "recordkind": 494, "recordlen": 494, "recoup": 393, "recov": [405, 454, 458, 479, 507, 519, 522], "recover": 404, "recoveri": [507, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "recreat": [479, 544], "recurr": [505, 512], "recurs": [405, 409, 423, 433, 461, 479, 505, 507, 519, 520, 524, 527, 551, 552, 553, 555, 556, 557, 561, 562, 563, 565, 566, 567, 571, 572, 573, 574, 576, 577, 578, 579], "recycl": [402, 517, 541], "red": [479, 520], "redefin": [431, 529, 553, 556, 557, 563, 566, 567, 574, 577, 578], "redefinit": [446, 546, 553, 557, 563, 567, 574, 575, 576, 577, 578], "redhat": 504, "redirect": [406, 423, 424, 472, 479, 481, 535, 537, 559, 569], "rediscov": [560, 570, 579], "redistribut": 452, "redo": 489, "reduc": [391, 397, 399, 400, 401, 402, 404, 406, 413, 425, 445, 446, 449, 450, 452, 453, 462, 465, 474, 476, 480, 481, 489, 490, 491, 507, 509, 512, 513, 514, 517, 520, 531, 540, 545, 546, 549, 554, 559, 564, 569, 571, 575], "reduce_input": 481, "reduct": [386, 404, 408, 411], "redund": [402, 407, 445, 446, 459, 465, 480, 492, 507, 509, 519, 524, 548, 554, 564, 575], "redwin": 402, "redwood": 386, "reevalu": 530, "reexport": 491, "reextern": [574, 575, 576, 577, 578], "ref": [389, 490, 494, 495, 498, 509, 524, 529, 533, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "refactor": [404, 452, 480, 509, 511, 557, 567, 578], "refcount": 461, "refer": [382, 383, 385, 386, 388, 389, 392, 393, 394, 397, 400, 401, 402, 404, 405, 406, 409, 411, 412, 431, 435, 447, 448, 449, 450, 452, 454, 456, 457, 462, 465, 468, 472, 473, 475, 480, 481, 483, 486, 488, 489, 490, 491, 492, 493, 494, 495, 498, 499, 502, 503, 506, 513, 514, 515, 519, 520, 522, 525, 527, 529, 531, 533, 535, 536, 539, 540, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 576, 578], "referenc": [386, 393, 442, 445, 446, 466, 479, 480, 482, 484, 489, 493, 495, 502, 507, 517, 519, 529, 530, 537, 539, 546, 547, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "referenti": 505, "refil": 489, "refin": [389, 402, 479, 507, 511, 546], "reflect": [385, 386, 389, 452, 465, 472, 479, 482, 491, 511, 519, 539, 540, 556, 566, 577], "reflex": 489, "reflog": 509, "reflogexpir": 509, "reflogexpireunreach": 509, "refnam": 509, "reformat": [404, 486, 511], "reformul": 389, "refrain": [472, 479, 516], "refresh": 482, "refs_to_clean": 509, "refspec": 509, "refus": [400, 414, 422, 425, 427, 443, 505, 520], "reg": [402, 405, 424, 432, 484, 486, 490, 507, 522, 529, 539], "reg1": 405, "reg1024": 402, "reg1025": 402, "reg1026": 402, "reg1027": 402, "reg2": 405, "reg_nam": 424, "reg_sequ": 484, "regalloc": [402, 410, 411, 540], "regalloclinearscan": 402, "regallocregistri": 540, "regard": [390, 404, 457, 472, 477, 479, 515, 527, 545], "regardless": [84, 366, 389, 400, 404, 414, 422, 425, 427, 429, 443, 461, 464, 465, 479, 491, 504, 505, 519, 520, 533, 547, 557, 567, 578], "regbankselect": 484, "regconstraint": 402, "regener": 474, "regex": [418, 423, 431, 445, 515, 534], "regexp": 409, "region": [385, 386, 393, 418, 429, 449, 454, 479, 480, 487, 509, 512, 520, 522, 530, 537], "region0": 450, "region1": 450, "regioninfo": [505, 512], "regionsforfile0": 450, "regionsforfile1": 450, "regist": [4, 7, 20, 31, 33, 36, 45, 72, 102, 105, 126, 131, 157, 186, 189, 205, 216, 218, 221, 256, 283, 286, 299, 310, 312, 315, 325, 353, 383, 385, 387, 389, 390, 392, 399, 405, 406, 410, 411, 424, 429, 443, 444, 445, 449, 451, 452, 454, 461, 463, 467, 479, 483, 486, 491, 492, 506, 507, 512, 513, 520, 522, 524, 527, 529, 531, 538, 541, 544, 553, 556, 557, 558, 559, 563, 566, 567, 568, 569, 574, 575, 576, 577, 578], "registeralias": 527, "registeranalysisgroup": 389, "registerasmprint": 539, "registerasmstream": 402, "registerclass": [402, 527, 531, 539], "registerdescriptor": 539, "registeredarg": 461, "registerehfram": [483, 550], "registerehframesinprocess": 550, "registerinfo": [402, 484, 539], "registerlist": 539, "registermcobjectstream": 402, "registermypass": 540, "registerpass": 540, "registerpasspars": 540, "registerregalloc": 540, "registerschedul": 540, "registerstandardpass": 540, "registertarget": 539, "registerwithsubreg": 539, "registr": [447, 451, 457, 461, 546], "registri": [461, 558, 568], "reglist": 539, "regmapping_f": 402, "regmask": 484, "regno": 402, "regnum": 522, "regoffset": 486, "regress": [397, 404, 405, 409, 452, 463, 464, 481, 508, 509, 514, 520], "regstat": [402, 484], "regstrict": 386, "regtyp": 539, "regul": 540, "regular": [384, 390, 404, 405, 409, 413, 418, 423, 425, 426, 428, 430, 431, 433, 445, 446, 463, 479, 481, 484, 489, 509, 515, 534, 544, 560, 570, 579], "reid": 525, "reilli": 507, "reindent": 404, "reinterpret": 392, "reinterpret_cast": 550, "reintroduc": 520, "reject": [393, 405, 445, 465, 472, 479, 560, 570, 574, 575, 576, 577, 578, 579], "rejit": 575, "rel": 514, "rel32": 386, "rel_path_to_fil": 418, "rela": 386, "relat": [37, 127, 223, 317, 385, 386, 389, 390, 393, 394, 396, 399, 400, 401, 402, 404, 405, 409, 415, 429, 433, 434, 442, 445, 449, 452, 454, 456, 459, 461, 462, 463, 465, 472, 476, 478, 481, 486, 487, 488, 489, 490, 495, 505, 507, 508, 509, 511, 513, 514, 517, 518, 519, 520, 522, 524, 527, 535, 540, 544, 545, 547, 553, 555, 556, 559, 563, 565, 566, 569, 574, 575, 576, 577], "relationship": [386, 405, 423, 454, 461, 476, 479, 489, 519, 524, 525, 539, 540, 541], "relationsip": 491, "relax": [429, 465, 479, 524], "relay": 479, "relbf": 479, "releas": [386, 398, 400, 402, 404, 417, 446, 449, 452, 453, 454, 459, 463, 466, 468, 469, 470, 475, 481, 482, 504, 507, 508, 509, 515, 519, 522, 535, 539, 540, 542, 545, 553, 563], "release_1": 463, "release_11": 463, "release_29": 463, "release_350": 463, "release_39": 511, "release_test": 472, "release_xi": 472, "release_xx": 472, "releasei": 514, "reles": 468, "relev": [389, 390, 402, 405, 437, 446, 449, 452, 459, 465, 468, 469, 471, 472, 473, 476, 478, 479, 503, 504, 506, 509, 512, 516, 519, 524, 541, 555, 565, 576], "reli": [392, 394, 398, 401, 402, 404, 449, 452, 459, 461, 462, 465, 479, 481, 482, 491, 500, 507, 509, 514, 519, 520, 524, 535, 538, 541, 547, 557, 567, 578], "reliabl": [400, 409, 458, 512, 519, 533], "religion": 403, "relink": [397, 417], "reload": [402, 449, 461, 465, 480, 481, 520, 557, 558, 559, 567, 568, 569, 578], "reloc": [385, 402, 411, 431, 432, 436, 437, 442, 461, 471, 474, 479, 483, 484, 495, 539, 558, 568], "reloc_absolute_dword": 539, "reloc_absolute_word": 539, "reloc_pcrel_word": 539, "reloc_picrel_word": 539, "relocat": [386, 411, 431, 479, 483, 491, 524, 539], "relocationtyp": 539, "reloccrc": 495, "relpo": 413, "relr": [436, 437], "relwithdebinfo": [398, 400, 463, 469], "rem": 402, "remain": [385, 386, 390, 400, 404, 405, 413, 429, 449, 450, 452, 454, 456, 461, 465, 472, 479, 484, 492, 500, 505, 507, 512, 516, 519, 520, 522, 524, 529, 535, 543, 546, 556, 557, 566, 567, 577, 578], "remaind": [385, 402, 450, 455, 463, 478, 479, 505, 511, 520, 535, 536, 539], "remainingbuffersizetoskip": 543, "remap": [386, 402, 408, 434, 465], "remark": [397, 410, 511, 538, 545], "remarkemitt": 511, "remateri": 390, "rememb": [396, 403, 404, 445, 448, 452, 457, 462, 463, 464, 468, 471, 479, 481, 507, 524, 534, 540, 552, 555, 557, 558, 559, 562, 565, 567, 568, 569, 573, 576, 578], "remind": [452, 472, 487, 509], "remot": [483, 509, 546, 549, 580], "remotejit": 550, "remotejitutil": 550, "remoteobjectclientlay": 491, "remoteobjectserverlay": 491, "remov": [386, 389, 393, 397, 398, 400, 402, 404, 405, 407, 410, 413, 418, 422, 425, 429, 431, 443, 445, 449, 452, 453, 454, 457, 459, 463, 465, 472, 473, 475, 479, 480, 481, 482, 484, 488, 489, 490, 491, 492, 504, 507, 509, 511, 513, 519, 524, 525, 535, 536, 539, 540, 548, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 575, 576, 579], "remove_if": 507, "removebranch": 539, "removefrompar": 507, "removemodul": [491, 548, 549, 550, 554, 555, 556, 557, 564, 565, 566, 567], "removeobject": 491, "renam": [397, 404, 429, 431, 463, 479, 484, 491, 507, 509, 511, 514, 519, 526, 549, 550, 557, 567, 578], "render": [402, 465, 479, 507, 542, 556, 566, 577], "reopen": 396, "reorder": [386, 390, 405, 429, 479, 519, 524], "reorgan": [512, 544], "repack": 509, "repeat": [386, 397, 405, 429, 454, 456, 458, 470, 479, 486, 489, 505, 509, 511, 514, 519], "repetit": [402, 424], "rephras": 462, "repl": [491, 546, 547, 550, 554, 564], "replac": [385, 390, 400, 402, 412, 413, 418, 419, 430, 431, 433, 435, 438, 440, 441, 442, 445, 446, 449, 452, 454, 459, 461, 463, 466, 479, 480, 481, 482, 484, 488, 489, 490, 491, 492, 509, 512, 513, 519, 520, 524, 525, 529, 530, 535, 536, 537, 539, 545, 546, 547, 548, 549, 554, 557, 564, 567, 578], "replacealldbguseswith": 519, "replacealluseswith": [480, 489, 507], "replaceinstwithinst": 507, "replaceinstwithvalu": 507, "replaceoperandwith": 536, "replaceusesofwith": [480, 507], "replaceusesofwithonconst": 480, "replay": 386, "repli": [452, 472, 511], "replic": [474, 482, 492, 512, 529, 544], "repo": [453, 503, 509], "report": [386, 389, 391, 397, 403, 409, 410, 415, 428, 429, 431, 432, 442, 450, 460, 461, 466, 469, 478, 479, 480, 481, 482, 491, 507, 509, 513, 517, 519, 520, 522, 523, 524, 529, 534, 535, 536, 540, 545, 546, 553, 563, 574], "report_fatal_error": [404, 507], "reporterror": 547, "repositor": 509, "repositori": [452, 453, 454, 463, 471, 472, 474, 506, 510, 511, 513, 519, 535, 545], "repres": [385, 386, 389, 390, 392, 393, 394, 395, 399, 401, 404, 405, 409, 413, 429, 430, 431, 445, 449, 450, 454, 455, 456, 457, 458, 459, 461, 462, 465, 469, 475, 479, 484, 488, 490, 491, 494, 495, 497, 499, 502, 503, 505, 507, 509, 511, 512, 519, 520, 524, 527, 529, 530, 531, 533, 539, 541, 543, 544, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "represent": [384, 385, 386, 392, 394, 401, 402, 404, 433, 434, 444, 445, 448, 454, 455, 461, 463, 465, 480, 484, 486, 491, 507, 519, 522, 527, 529, 531, 539, 540, 541, 542, 543, 544, 545, 546, 547, 552, 553, 554, 556, 560, 562, 563, 564, 566, 570, 573, 574, 575, 577, 579], "reprimand": 516, "reproduc": [396, 397, 404, 448, 452, 453, 472, 474, 481, 492, 535, 557, 567, 578], "repurpos": 519, "reqd_work_group_s": 386, "reqd_workgroup_s": 386, "reqdworkgroups": 386, "reqist": 385, "request": [48, 233, 328, 386, 393, 396, 413, 431, 448, 452, 453, 454, 456, 463, 465, 479, 481, 482, 483, 491, 507, 509, 511, 516, 517, 522, 524, 529, 536, 543, 546, 547, 548, 558, 568], "requir": [383, 385, 386, 388, 390, 391, 392, 393, 397, 398, 399, 400, 401, 404, 405, 409, 413, 416, 418, 420, 424, 429, 431, 432, 447, 450, 454, 455, 457, 458, 459, 460, 465, 466, 468, 469, 471, 472, 473, 476, 477, 478, 479, 481, 482, 483, 484, 488, 489, 490, 491, 492, 497, 499, 505, 506, 507, 509, 511, 513, 514, 515, 516, 517, 519, 520, 522, 524, 525, 527, 529, 533, 536, 539, 543, 544, 546, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "required_librari": 478, "requires_rtti": 504, "requri": [401, 491, 519], "rerereresolv": 509, "rerereunresolv": 509, "rerun": 506, "res": [404, 479, 489], "resbyarg": 479, "rescan": 489, "reschedul": 519, "research": [455, 510, 520, 534, 545], "resembl": [462, 520], "reserv": [386, 391, 393, 402, 458, 472, 479, 481, 494, 495, 502, 520, 522, 524, 539, 543], "reserveresourc": 402, "reset": [386, 393, 400, 454, 481, 507, 520, 529, 543, 549, 550], "resid": [384, 386, 392, 393, 399, 449, 461, 479, 481, 490, 491, 499, 517, 519, 520, 540], "resign": 452, "resili": [429, 487], "resist": 481, "resiz": 404, "resolut": [391, 396, 404, 446, 479, 491, 516, 554, 556, 564, 566], "resolv": [37, 127, 223, 317, 386, 398, 401, 402, 403, 409, 424, 446, 452, 479, 482, 483, 491, 507, 511, 516, 520, 523, 529, 540, 543, 547, 548, 549, 550, 553, 554, 555, 563, 564, 565, 574, 575, 576], "resolvereloc": 483, "resolverti": 479, "resort": 454, "resourc": [10, 17, 18, 50, 51, 105, 108, 114, 115, 135, 136, 189, 192, 202, 203, 235, 236, 286, 289, 296, 297, 330, 331, 384, 386, 401, 424, 429, 437, 445, 453, 454, 491, 507, 520, 539, 540, 548, 549, 550], "resp": [424, 479, 507], "respect": [386, 389, 397, 400, 402, 403, 404, 406, 420, 423, 429, 434, 437, 442, 446, 449, 452, 454, 461, 462, 463, 473, 479, 480, 486, 491, 507, 508, 509, 524, 531, 533, 535, 537, 539, 546, 548, 557, 567, 578], "respond": [389, 448, 487, 505, 506, 516], "respons": [386, 402, 416, 419, 429, 430, 432, 436, 437, 442, 449, 452, 454, 461, 465, 472, 479, 491, 500, 506, 507, 512, 516, 518, 522, 524, 527, 536, 537, 540, 544, 546], "rest": [393, 402, 405, 449, 452, 461, 463, 465, 479, 481, 482, 484, 485, 489, 499, 507, 519, 521, 525, 541, 554, 557, 564, 567, 578], "restart": [390, 465, 467, 481, 507, 540], "restat": 404, "restofthecleanup": 449, "restor": [393, 402, 454, 477, 479, 518, 520, 539, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "restrict": [386, 390, 402, 404, 429, 445, 452, 455, 456, 457, 462, 477, 479, 484, 488, 494, 507, 509, 519, 520, 522, 524, 528, 530, 538, 540, 554, 564], "restructur": 536, "restructuredtext": 521, "result": [384, 385, 386, 390, 392, 393, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 411, 413, 414, 418, 423, 424, 429, 433, 434, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 466, 469, 470, 472, 474, 475, 476, 479, 481, 483, 484, 488, 489, 490, 491, 492, 493, 499, 500, 505, 507, 509, 511, 513, 514, 515, 519, 520, 522, 525, 529, 530, 531, 534, 535, 536, 538, 539, 540, 541, 542, 544, 545, 546, 548, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "results_a": 533, "results_b": 533, "resultti": 479, "resulttyp": 479, "resultv": 479, "resum": [386, 451, 454, 522], "resume1": 449, "resume2": 449, "resumpt": 449, "ret": [390, 392, 395, 402, 405, 449, 454, 457, 461, 462, 484, 485, 488, 490, 505, 507, 513, 518, 519, 520, 521, 522, 524, 529, 535, 537, 553, 554, 555, 557, 563, 564, 565, 567, 574, 575, 576, 578], "ret_typ": 479, "ret_val": [574, 575, 576, 577, 578], "retain": [392, 445, 452, 457, 480, 507, 517, 540], "retainednod": 519, "retainedtyp": [479, 519], "retarget": [402, 545], "retcc_sparc32": 539, "retcc_x86_32": 539, "retcc_x86_32_c": 539, "retcc_x86_32_fast": 539, "retcc_x86_32_ss": 539, "retcc_x86common": 539, "rethrow": [454, 524], "retpolin": 520, "retq": [484, 520, 524], "retri": 541, "retriev": [413, 445, 454, 456, 483, 490, 506, 507, 515, 522, 524, 527, 540, 544], "retroact": 452, "retti": 393, "return": [29, 30, 121, 122, 214, 215, 308, 309, 384, 386, 387, 389, 390, 392, 393, 395, 397, 402, 407, 411, 413, 418, 419, 423, 424, 429, 433, 434, 436, 437, 439, 442, 445, 446, 449, 450, 451, 452, 454, 455, 457, 459, 461, 463, 464, 465, 473, 475, 476, 477, 479, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 505, 513, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 537, 538, 539, 540, 541, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "return_addr": 520, "return_cal": 402, "return_call_indirect": 402, "returnaddress": 484, "returndoesnotalia": 479, "returnindex": 475, "returns_signed_char": 479, "returns_twic": [393, 479], "returntyp": [461, 479], "retval": [454, 479, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "reus": [401, 402, 405, 465, 479, 509, 511, 519, 520, 522], "reusabl": [402, 465], "rev": [392, 472, 509, 511, 573, 574, 575, 576, 577, 578], "rev128": 392, "rev64": 392, "reveal": [462, 520], "revector": [505, 507], "revers": [384, 392, 400, 405, 430, 462, 479, 480, 505, 507, 519, 520, 529], "revert": 452, "review": [396, 399, 404, 448, 459, 463, 464, 472, 480, 481, 485, 489, 509, 511, 512, 516, 521, 524, 525, 545], "reviewe": 452, "revis": [198, 200, 201, 209, 211, 212, 396, 400, 404, 452, 453, 459, 463, 472, 506, 507, 519, 522], "revisit": [404, 512, 520, 524], "revlist": 509, "revmap": 509, "revok": 452, "revolv": 519, "rework": [445, 452], "rewound": 454, "rewrit": [404, 429, 452, 473, 479, 480, 505, 509, 520, 524, 539, 557, 567, 578], "rewritestatepointsforgc": 461, "rewritten": [402, 507, 509], "rex": 479, "rf": [485, 521, 535, 539], "rfc": 452, "rfunc": 425, "rgb": 510, "rgba": 384, "rglob": 425, "rgm": 540, "rhs": [404, 479, 489, 507, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "rhs_val": [574, 575, 576, 577, 578], "ri": [461, 479, 539], "ri_inst": 529, "ricci": 511, "ricciacronym": 511, "rich": 545, "richer": 522, "rid": [489, 495], "ridg": 386, "right": [384, 385, 386, 390, 392, 401, 402, 404, 406, 413, 445, 448, 452, 455, 457, 459, 463, 472, 473, 474, 479, 484, 489, 500, 505, 506, 509, 514, 520, 527, 535, 543, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579], "rightr": 489, "rigor": 402, "riinst": 529, "ring": 386, "rip": [479, 484, 520, 531, 535], "risc": [390, 402, 511, 513, 539], "riscv": 431, "rise": 404, "risk": [468, 472, 479, 507, 519, 520], "riski": 520, "rival": 507, "rl": 490, "rl1": 490, "rl2": 490, "rl247405": 481, "rl247414": 481, "rl247416": 481, "rl247417": 481, "rl247420": 481, "rl247422": 481, "rl3": 490, "rl317337": 517, "rl4": 490, "rl5": 490, "rl6": 490, "rl7": 490, "rm": [463, 479, 481, 485, 521, 529, 531, 535, 539, 542, 558, 568], "rmw": 390, "rn": [456, 490], "rnglist": 423, "rnnnn": 452, "rnnnnnn": 463, "ro_signed_pat": 531, "roam": 464, "rob": [429, 446], "robert": 446, "robin": 429, "robinson": 511, "robinsonagre": 511, "robinsondistinguish": 511, "robinsondistinguish2": 511, "robinsontransit": 511, "robot": 545, "robust": [446, 465, 479, 486, 519, 535], "rocm": 386, "rodata": [386, 520, 539], "rogu": 520, "role": [404, 433, 489, 507, 514, 519, 530, 552, 562, 573], "roll": [404, 473, 487], "rom": 431, "roms_": 510, "roms_r": 510, "room": [475, 540, 552, 562, 573], "root": [396, 400, 402, 409, 416, 417, 452, 453, 463, 467, 471, 478, 479, 480, 499, 507, 508, 509, 511, 513, 517, 527, 535, 542, 553, 563, 574], "rootcount": 461, "rootmetadata": 461, "rootnum": 461, "roots_begin": 461, "roots_end": 461, "roots_iter": 461, "roots_siz": 461, "rootstackoffset": 461, "rope": 507, "rot": 452, "rotat": [384, 402, 455, 479], "rotl": 455, "rough": [390, 402, 446, 454, 462, 472, 473, 480, 481, 511, 519, 529, 530], "roun": 446, "round": [392, 402, 429, 446, 450, 472, 520, 544, 556, 566, 577], "roundp": 538, "roundup": 386, "routin": [390, 402, 409, 452, 454, 461, 479, 489, 505, 520, 524, 525, 540, 541, 543, 551, 552, 560, 562, 570, 571, 572, 573, 575, 579], "row": [384, 476], "row_bcast": [384, 386], "row_half_mirror": 384, "row_mask": [0, 2, 3, 386], "row_mirror": [384, 386], "row_ror": 384, "row_shar": 384, "row_shl": [384, 386], "row_shr": 384, "row_xmask": 384, "rowfield": 476, "rpass": 538, "rpath": 463, "rpc": [491, 550], "rpcc": 479, "rpcs": 543, "rpo": 480, "rppassmanag": 540, "rr": [529, 539], "rrinst": 529, "rs": 402, "rs1": 539, "rs2": 539, "rs4gc": 524, "rs880": 386, "rsb": 520, "rsi": [402, 520, 531], "rsp": [402, 484, 518, 520, 522, 524, 531], "rsrc": [384, 437], "rss": [481, 517], "rss_limit_mb": 481, "rst": [387, 402, 521, 527], "rsync": 533, "rt": [388, 398, 400, 401, 460, 463, 468, 469, 472, 479, 509, 511, 513, 514, 517, 539, 541, 545], "rtc": 536, "rtdyldmemorymanag": [548, 549, 550], "rtdyldobjectlinkinglay": [491, 546, 547, 548, 549, 550], "rthroughput": 429, "rtl": 402, "rtrhoughput": 429, "rtti": [400, 454, 504, 507, 537, 545, 557, 558, 559, 567, 568, 569], "rubi": 461, "rude": 454, "rui": 511, "rule": [383, 386, 390, 402, 403, 404, 405, 407, 414, 416, 420, 429, 433, 446, 449, 452, 471, 477, 489, 491, 507, 508, 511, 514, 517, 519, 520, 524, 525, 528, 529, 531, 534, 535, 540, 543, 553, 554, 555, 563, 564, 565, 574, 576], "ruleset": 465, "run": [386, 388, 389, 390, 391, 392, 397, 400, 401, 402, 404, 405, 406, 407, 417, 418, 424, 429, 431, 434, 435, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 472, 474, 478, 479, 482, 483, 484, 488, 489, 491, 492, 504, 505, 506, 507, 508, 509, 511, 513, 514, 519, 520, 522, 524, 527, 529, 531, 535, 538, 539, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "run_funct": [575, 576, 577, 578], "run_long_test": 535, "runfunct": [451, 507], "runfunctionasmain": 451, "runhelp": 404, "runnabl": 463, "runner": 533, "runonfunct": [389, 397, 492, 507, 539, 542], "runonmachinefunct": [402, 492, 539], "runonmodul": 542, "runtest": [471, 514], "runtim": [386, 388, 390, 393, 395, 397, 398, 400, 402, 404, 405, 418, 429, 432, 445, 446, 447, 450, 451, 452, 458, 461, 463, 470, 480, 481, 491, 500, 505, 507, 509, 513, 518, 519, 522, 524, 525, 533, 536, 539, 540, 542, 544, 547, 548, 549, 550, 554, 556, 560, 564, 566, 570, 577, 579], "runtimedyld": [483, 548], "runtimedyldelf": 483, "runtimedyldimpl": 483, "runtimedyldmacho": 483, "runtimehandl": 386, "runtimevers": [479, 519], "rust": 511, "rv": 489, "rv32": 431, "rv32i": 513, "rv64": 431, "rv64i": 513, "rv670": 386, "rv710": 386, "rv730": 386, "rv770": 386, "rvalu": 404, "rvaluerefer": 494, "rvaluerefthispoint": 494, "rw": 479, "rx": [386, 529], "ryzen": 386, "rzi": 490, "s0": [385, 386, 479], "s1": [386, 465], "s15": 479, "s16": 465, "s17": 465, "s2": [36, 126, 221, 315, 386], "s3": [385, 386], "s31": 479, "s32": [0, 1, 2, 3, 465, 484, 490], "s4": [385, 386], "s5": [385, 386], "s6": [385, 386], "s64": [0, 1, 2, 3, 465, 490], "s7": [385, 465], "s7100": 386, "s7150": 386, "s8": 465, "s9": 479, "s9150": 386, "s9170": 386, "s9300x2": 386, "s_abs_i32": [0, 1, 2, 3], "s_absdiff_i32": [0, 1, 2, 3], "s_add_i32": [0, 1, 2, 3], "s_add_u32": [0, 1, 2, 3, 386, 484], "s_addc_u32": [0, 1, 2, 3, 386], "s_addk_i32": [0, 1, 2, 3], "s_and_b32": [0, 1, 2, 3], "s_and_b64": [0, 1, 2, 3, 386], "s_and_saveexec_b32": 0, "s_and_saveexec_b64": [0, 1, 2, 3], "s_andn1_saveexec_b32": 0, "s_andn1_saveexec_b64": [0, 3], "s_andn1_wrexec_b32": 0, "s_andn1_wrexec_b64": [0, 3], "s_andn2_b32": [0, 1, 2, 3, 386], "s_andn2_b64": [0, 1, 2, 3], "s_andn2_saveexec_b32": 0, "s_andn2_saveexec_b64": [0, 1, 2, 3], "s_andn2_wrexec_b32": 0, "s_andn2_wrexec_b64": [0, 3], "s_annot": 479, "s_arch": 446, "s_ashr_i32": [0, 1, 2, 3, 386], "s_ashr_i64": [0, 1, 2, 3], "s_atc_prob": [0, 2, 3], "s_atc_probe_buff": [0, 2, 3], "s_atomic_add": [0, 3], "s_atomic_add_x2": [0, 3], "s_atomic_and": [0, 3], "s_atomic_and_x2": [0, 3], "s_atomic_cmpswap": [0, 3], "s_atomic_cmpswap_x2": [0, 3], "s_atomic_dec": [0, 3], "s_atomic_dec_x2": [0, 3], "s_atomic_inc": [0, 3], "s_atomic_inc_x2": [0, 3], "s_atomic_or": [0, 3], "s_atomic_or_x2": [0, 3], "s_atomic_smax": [0, 3], "s_atomic_smax_x2": [0, 3], "s_atomic_smin": [0, 3], "s_atomic_smin_x2": [0, 3], "s_atomic_sub": [0, 3], "s_atomic_sub_x2": [0, 3], "s_atomic_swap": [0, 3], "s_atomic_swap_x2": [0, 3], "s_atomic_umax": [0, 3], "s_atomic_umax_x2": [0, 3], "s_atomic_umin": [0, 3], "s_atomic_umin_x2": [0, 3], "s_atomic_xor": [0, 3], "s_atomic_xor_x2": [0, 3], "s_barrier": [0, 1, 2, 3, 386], "s_bcnt0_i32_b32": [0, 1, 2, 3], "s_bcnt0_i32_b64": [0, 1, 2, 3, 383, 386], "s_bcnt1_i32_b32": [0, 1, 2, 3], "s_bcnt1_i32_b64": [0, 1, 2, 3], "s_bfe_i32": [0, 1, 2, 3], "s_bfe_i64": [0, 1, 2, 3, 385, 386], "s_bfe_u32": [0, 1, 2, 3], "s_bfe_u64": [0, 1, 2, 3, 385], "s_bfm_b32": [0, 1, 2, 3], "s_bfm_b64": [0, 1, 2, 3, 386], "s_bitcmp0_b32": [0, 1, 2, 3], "s_bitcmp0_b64": [0, 1, 2, 3, 386], "s_bitcmp1_b32": [0, 1, 2, 3, 386], "s_bitcmp1_b64": [0, 1, 2, 3], "s_bitreplicate_b64_b32": [0, 3], "s_bitset0_b32": [0, 1, 2, 3], "s_bitset0_b64": [0, 1, 2, 3], "s_bitset1_b32": [0, 1, 2, 3], "s_bitset1_b64": [0, 1, 2, 3], "s_branch": [0, 1, 2, 3, 37, 127, 223, 317], "s_brev_b32": [0, 1, 2, 3], "s_brev_b64": [0, 1, 2, 3], "s_buffer_atomic_add": [0, 3], "s_buffer_atomic_add_x2": [0, 3], "s_buffer_atomic_and": [0, 3], "s_buffer_atomic_and_x2": [0, 3], "s_buffer_atomic_cmpswap": [0, 3], "s_buffer_atomic_cmpswap_x2": [0, 3], "s_buffer_atomic_dec": [0, 3], "s_buffer_atomic_dec_x2": [0, 3], "s_buffer_atomic_inc": [0, 3], "s_buffer_atomic_inc_x2": [0, 3], "s_buffer_atomic_or": [0, 3], "s_buffer_atomic_or_x2": [0, 3], "s_buffer_atomic_smax": [0, 3], "s_buffer_atomic_smax_x2": [0, 3], "s_buffer_atomic_smin": [0, 3], "s_buffer_atomic_smin_x2": [0, 3], "s_buffer_atomic_sub": [0, 3], "s_buffer_atomic_sub_x2": [0, 3], "s_buffer_atomic_swap": [0, 3], "s_buffer_atomic_swap_x2": [0, 3], "s_buffer_atomic_umax": [0, 3], "s_buffer_atomic_umax_x2": [0, 3], "s_buffer_atomic_umin": [0, 3], "s_buffer_atomic_umin_x2": [0, 3], "s_buffer_atomic_xor": [0, 3], "s_buffer_atomic_xor_x2": [0, 3], "s_buffer_load_dword": [0, 1, 2, 3], "s_buffer_load_dwordx16": [0, 1, 2, 3], "s_buffer_load_dwordx2": [0, 1, 2, 3], "s_buffer_load_dwordx4": [0, 1, 2, 3], "s_buffer_load_dwordx8": [0, 1, 2, 3], "s_buffer_store_dword": [0, 2, 3], "s_buffer_store_dwordx2": [0, 2, 3], "s_buffer_store_dwordx4": [0, 2, 3], "s_call_b64": [0, 3], "s_cbranch_cdbgsi": [0, 1, 2, 3], "s_cbranch_cdbgsys_and_us": [0, 1, 2, 3], "s_cbranch_cdbgsys_or_us": [0, 1, 2, 3], "s_cbranch_cdbgus": [0, 1, 2, 3], "s_cbranch_execnz": [0, 1, 2, 3], "s_cbranch_execz": [0, 1, 2, 3], "s_cbranch_g_fork": [1, 2, 3, 386], "s_cbranch_i_fork": [1, 2, 3], "s_cbranch_join": [1, 2, 3, 386], "s_cbranch_scc0": [0, 1, 2, 3], "s_cbranch_scc1": [0, 1, 2, 3], "s_cbranch_vccnz": [0, 1, 2, 3], "s_cbranch_vccz": [0, 1, 2, 3], "s_claus": 0, "s_cmov_b32": [0, 1, 2, 3, 386], "s_cmov_b64": [0, 1, 2, 3], "s_cmovk_i32": [0, 1, 2, 3], "s_cmp_eq_i32": [0, 1, 2, 3, 386], "s_cmp_eq_u32": [0, 1, 2, 3], "s_cmp_eq_u64": [0, 2, 3], "s_cmp_ge_i32": [0, 1, 2, 3], "s_cmp_ge_u32": [0, 1, 2, 3], "s_cmp_gt_i32": [0, 1, 2, 3], "s_cmp_gt_u32": [0, 1, 2, 3], "s_cmp_le_i32": [0, 1, 2, 3], "s_cmp_le_u32": [0, 1, 2, 3], "s_cmp_lg_i32": [0, 1, 2, 3], "s_cmp_lg_u32": [0, 1, 2, 3], "s_cmp_lg_u64": [0, 2, 3], "s_cmp_lt_i32": [0, 1, 2, 3], "s_cmp_lt_u32": [0, 1, 2, 3], "s_cmpk_eq_i32": [0, 1, 2, 3], "s_cmpk_eq_u32": [0, 1, 2, 3], "s_cmpk_ge_i32": [0, 1, 2, 3], "s_cmpk_ge_u32": [0, 1, 2, 3], "s_cmpk_gt_i32": [0, 1, 2, 3], "s_cmpk_gt_u32": [0, 1, 2, 3], "s_cmpk_le_i32": [0, 1, 2, 3], "s_cmpk_le_u32": [0, 1, 2, 3], "s_cmpk_lg_i32": [0, 1, 2, 3], "s_cmpk_lg_u32": [0, 1, 2, 3], "s_cmpk_lt_i32": [0, 1, 2, 3], "s_cmpk_lt_u32": [0, 1, 2, 3], "s_code_end": 0, "s_cselect_b32": [0, 1, 2, 3, 386], "s_cselect_b64": [0, 1, 2, 3], "s_dcache_discard": [0, 3], "s_dcache_discard_x2": [0, 3], "s_dcache_inv": [0, 1, 2, 3, 386], "s_dcache_inv_vol": [1, 2, 3, 386], "s_dcache_wb": [0, 2, 3, 386], "s_dcache_wb_vol": [2, 3], "s_decperflevel": [0, 1, 2, 3], "s_denorm_mod": 0, "s_endpgm": [0, 1, 2, 3, 386], "s_endpgm_ordered_ps_don": [0, 3], "s_endpgm_sav": [0, 2, 3], "s_ff0_i32_b32": [0, 1, 2, 3], "s_ff0_i32_b64": [0, 1, 2, 3], "s_ff1_i32_b32": [0, 1, 2, 3], "s_ff1_i32_b64": [0, 1, 2, 3], "s_flbit_i32": [0, 1, 2, 3], "s_flbit_i32_b32": [0, 1, 2, 3], "s_flbit_i32_b64": [0, 1, 2, 3], "s_flbit_i32_i64": [0, 1, 2, 3], "s_get_reg": 385, "s_get_waveid_in_workgroup": 0, "s_getpc_b64": [0, 1, 2, 3, 386], "s_getreg_b32": [0, 1, 2, 3, 36, 126, 221, 315], "s_gl1_inv": 0, "s_icache_inv": [0, 1, 2, 3], "s_incperflevel": [0, 1, 2, 3], "s_inst_prefetch": 0, "s_load_dword": [0, 1, 2, 3, 386], "s_load_dwordx16": [0, 1, 2, 3, 386], "s_load_dwordx2": [0, 1, 2, 3, 386], "s_load_dwordx4": [0, 1, 2, 3], "s_load_dwordx8": [0, 1, 2, 3, 386], "s_lshl1_add_u32": [0, 3], "s_lshl2_add_u32": [0, 3], "s_lshl3_add_u32": [0, 3], "s_lshl4_add_u32": [0, 3], "s_lshl_b32": [0, 1, 2, 3], "s_lshl_b64": [0, 1, 2, 3], "s_lshr_b32": [0, 1, 2, 3], "s_lshr_b64": [0, 1, 2, 3, 386], "s_max_i32": [0, 1, 2, 3], "s_max_u32": [0, 1, 2, 3], "s_memrealtim": [0, 2, 3], "s_memtim": [0, 1, 2, 3, 386], "s_min_i32": [0, 1, 2, 3], "s_min_u32": [0, 1, 2, 3], "s_mov_b32": [0, 1, 2, 3, 386], "s_mov_b64": [0, 1, 2, 3, 386], "s_mov_fed_b32": [1, 2, 3], "s_movk_i32": [0, 1, 2, 3], "s_movreld_b32": [0, 1, 2, 3], "s_movreld_b64": [0, 1, 2, 3], "s_movrels_b32": [0, 1, 2, 3], "s_movrels_b64": [0, 1, 2, 3], "s_movrelsd_2_b32": 0, "s_mul_hi_i32": [0, 3], "s_mul_hi_u32": [0, 3], "s_mul_i32": [0, 1, 2, 3], "s_mulk_i32": [0, 1, 2, 3], "s_nand_b32": [0, 1, 2, 3], "s_nand_b64": [0, 1, 2, 3], "s_nand_saveexec_b32": 0, "s_nand_saveexec_b64": [0, 1, 2, 3], "s_nop": [0, 1, 2, 3, 386], "s_nor_b32": [0, 1, 2, 3], "s_nor_b64": [0, 1, 2, 3], "s_nor_saveexec_b32": 0, "s_nor_saveexec_b64": [0, 1, 2, 3], "s_not_b32": [0, 1, 2, 3], "s_not_b64": [0, 1, 2, 3], "s_or_b32": [0, 1, 2, 3], "s_or_b64": [0, 1, 2, 3], "s_or_saveexec_b32": 0, "s_or_saveexec_b64": [0, 1, 2, 3], "s_orn1_saveexec_b32": 0, "s_orn1_saveexec_b64": [0, 3], "s_orn2_b32": [0, 1, 2, 3], "s_orn2_b64": [0, 1, 2, 3], "s_orn2_saveexec_b32": 0, "s_orn2_saveexec_b64": [0, 1, 2, 3], "s_pack_hh_b32_b16": [0, 3], "s_pack_lh_b32_b16": [0, 3], "s_pack_ll_b32_b16": [0, 3], "s_quadmask_b32": [0, 1, 2, 3], "s_quadmask_b64": [0, 1, 2, 3], "s_rfe_b64": [0, 1, 2, 3], "s_rfe_restore_b64": [2, 3], "s_round_mod": 0, "s_scratch_load_dword": [0, 3], "s_scratch_load_dwordx2": [0, 3], "s_scratch_load_dwordx4": [0, 3], "s_scratch_store_dword": [0, 3], "s_scratch_store_dwordx2": [0, 3], "s_scratch_store_dwordx4": [0, 3], "s_sendmsg": [0, 1, 2, 3, 42, 129, 227, 322, 386], "s_sendmsghalt": [0, 1, 2, 3], "s_set_gpr_idx_idx": [2, 3], "s_set_gpr_idx_mod": [2, 3], "s_set_gpr_idx_off": [2, 3], "s_set_gpr_idx_on": [2, 3], "s_set_reg": 385, "s_sethalt": [0, 1, 2, 3, 386], "s_setkil": [0, 1, 2, 3], "s_setpc_b64": [0, 1, 2, 3, 386], "s_setprio": [0, 1, 2, 3], "s_setreg_b32": [0, 1, 2, 3], "s_setreg_imm32_b32": [0, 1, 2, 3], "s_setvskip": [1, 2, 3, 386], "s_sext_i32_i16": [0, 1, 2, 3], "s_sext_i32_i8": [0, 1, 2, 3], "s_sleep": [0, 1, 2, 3, 386], "s_store_dword": [0, 2, 3], "s_store_dwordx2": [0, 2, 3], "s_store_dwordx4": [0, 2, 3], "s_sub_i32": [0, 1, 2, 3], "s_sub_u32": [0, 1, 2, 3], "s_subb_u32": [0, 1, 2, 3], "s_subvector_loop_begin": 0, "s_subvector_loop_end": 0, "s_swappc_b64": [0, 1, 2, 3, 386], "s_trap": [0, 1, 2, 3, 386], "s_ttracedata": [0, 1, 2, 3], "s_ttracedata_imm": 0, "s_version": 0, "s_waitcnt": [0, 1, 2, 3, 99, 185, 282, 381, 386], "s_waitcnt_expcnt": 0, "s_waitcnt_lgkmcnt": 0, "s_waitcnt_vmcnt": 0, "s_waitcnt_vscnt": 0, "s_wakeup": [0, 2, 3], "s_wqm_b32": [0, 1, 2, 3], "s_wqm_b64": [0, 1, 2, 3, 386], "s_xnor_b32": [0, 1, 2, 3], "s_xnor_b64": [0, 1, 2, 3], "s_xnor_saveexec_b32": 0, "s_xnor_saveexec_b64": [0, 1, 2, 3], "s_xor_b32": [0, 1, 2, 3], "s_xor_b64": [0, 1, 2, 3], "s_xor_saveexec_b32": 0, "s_xor_saveexec_b64": [0, 1, 2, 3], "sa": 386, "sacrific": [479, 489], "sad": [506, 520], "saddr": [0, 3, 84, 85, 366, 367], "safe": [389, 390, 393, 397, 398, 402, 406, 445, 452, 456, 459, 462, 463, 465, 474, 479, 480, 491, 492, 505, 509, 516, 520, 522, 523, 524, 536, 546, 548, 560, 570, 578, 579], "safepoint": [461, 479, 545], "safepoint_pol": 524, "safepointaddress": 461, "safer": 507, "safestack": [393, 479, 523], "safeti": [458, 459, 479, 513, 516, 545], "saga": [555, 565, 576], "sahf": [402, 520], "said": [404, 424, 429, 452, 454, 469, 479, 488, 500, 507, 517, 519, 560, 570, 579], "sake": [507, 540], "salvag": 519, "salvagedebuginfo": 519, "same": [384, 385, 386, 387, 389, 390, 392, 393, 396, 397, 400, 401, 402, 404, 406, 407, 409, 411, 413, 414, 415, 418, 424, 429, 430, 431, 433, 437, 443, 445, 446, 449, 450, 452, 454, 455, 456, 458, 459, 460, 461, 462, 463, 465, 466, 468, 469, 470, 472, 474, 476, 477, 478, 479, 480, 481, 484, 487, 488, 489, 490, 491, 492, 493, 495, 500, 502, 503, 504, 505, 506, 508, 509, 511, 512, 514, 517, 518, 519, 520, 521, 522, 524, 525, 527, 528, 529, 530, 531, 536, 537, 538, 539, 540, 542, 543, 544, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 570, 573, 574, 575, 576, 577, 578, 579], "same_cont": 456, "same_s": 456, "sames": 479, "sampl": [384, 386, 388, 395, 434, 445, 451, 452, 461, 464, 481, 490, 508, 519, 524, 533, 540, 542, 552, 553, 559, 562, 563, 569, 573, 574, 581], "samplepgo": 395, "sampler": [54, 137, 237, 334], "sampson": 448, "sancov_": 517, "sandbox": [471, 514], "sander": 465, "sandia": 510, "sandybridg": 538, "sandylak": [558, 568], "sane": [390, 400, 551, 572], "sanit": [400, 401, 460, 481, 505, 517, 523, 542], "saniti": [459, 463, 478, 481], "sanitize_address": [393, 479], "sanitize_hwaddress": [393, 479], "sanitize_memori": [393, 479], "sanitize_memtag": [393, 479], "sanitize_thread": [393, 479], "sanitizer_common": 517, "sanitizer_common_nolibc": 517, "sanitizer_symbol": 517, "sanitizer_termin": 517, "sanitizer_unwind": 517, "sanitizercommonflag": 517, "sanitizercoverag": 481, "sanitizercoveragetracedataflow": 481, "sanitizerlist": 542, "sanjoy": 511, "saptr": 479, "sar": 402, "sarq": 520, "sas": 386, "sass": [446, 490], "sata": 468, "satisfi": [385, 386, 389, 390, 405, 452, 458, 465, 470, 472, 479, 520, 525, 557, 567, 578], "satur": [556, 566, 577], "save": [386, 392, 393, 400, 402, 404, 415, 424, 445, 446, 454, 455, 463, 464, 474, 477, 479, 481, 483, 490, 491, 504, 506, 507, 519, 520, 522, 529, 533, 538, 539, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 575, 576, 577, 578], "save1": 449, "save2": 449, "savesomewher": 404, "savethi": 405, "saw": [429, 482, 540, 555, 565, 576], "say": [402, 403, 405, 409, 413, 445, 452, 459, 462, 465, 473, 476, 479, 485, 488, 499, 500, 507, 509, 511, 519, 521, 525, 534, 551, 553, 560, 561, 563, 570, 572, 574, 579], "sbase": [0, 1, 2, 3], "sbyte": 502, "sc": [390, 433, 479, 495], "sc300": 513, "scaffold": [552, 562, 573], "scalabl": [389, 479, 513], "scalar": [9, 10, 107, 108, 191, 192, 288, 289, 385, 386, 402, 445, 446, 459, 461, 465, 478, 479, 480, 512, 513, 538, 539, 540, 547, 548, 549, 550, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569, 578], "scalarbitsettrait": 544, "scalarevolut": [389, 462, 511], "scalaropt": 417, "scalartrait": 544, "scale": [391, 402, 404, 434, 462, 473, 479, 511, 520, 527], "scale2": 479, "scaling_governor": 391, "scan": [402, 404, 409, 410, 411, 461, 489, 491, 500, 527, 533, 535, 540, 548, 560, 570, 575, 579], "scanner": [551, 561, 572], "scare": 452, "scari": [551, 560, 570, 572, 579], "scatter": [512, 519], "scc": [43, 67, 68, 69, 70, 71, 73, 76, 78, 79, 130, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 164, 165, 167, 228, 250, 251, 252, 253, 254, 255, 257, 261, 262, 264, 323, 347, 348, 349, 350, 351, 352, 354, 358, 359, 361, 480, 492, 540], "sccp": 480, "sccs": 540, "scenario": [388, 390, 397, 400, 431, 441, 457, 463, 502, 507, 512], "scene": 507, "scev": 452, "sched": [402, 411, 424, 539], "sched_class": 424, "schedcov": 539, "schedq": 429, "schedul": [405, 411, 424, 429, 463, 465, 468, 472, 487, 490, 507, 512, 513, 524, 527, 540], "schema": [409, 416, 519, 544, 581], "scheme": [388, 399, 404, 415, 419, 420, 452, 460, 461, 475, 479, 491, 507, 524, 539, 548, 549, 557, 567, 578], "scienc": 510, "scope": [389, 393, 397, 400, 404, 405, 442, 444, 452, 454, 459, 461, 481, 484, 493, 507, 511, 520, 523, 524, 527, 540, 544, 553, 555, 556, 557, 558, 559, 563, 565, 566, 567, 568, 569, 574, 576, 577, 578], "scopelin": [479, 519, 559, 569], "scott": 404, "scrape": 409, "scratch": [53, 85, 333, 367, 384, 385, 402, 479, 507, 539, 540], "scratch_en": 386, "scratch_load": 386, "scratch_load_dword": [0, 3], "scratch_load_dwordx2": [0, 3], "scratch_load_dwordx3": [0, 3], "scratch_load_dwordx4": [0, 3], "scratch_load_sbyt": [0, 3], "scratch_load_sbyte_d16": [0, 3], "scratch_load_sbyte_d16_hi": [0, 3], "scratch_load_short_d16": [0, 3], "scratch_load_short_d16_hi": [0, 3], "scratch_load_sshort": [0, 3], "scratch_load_ubyt": [0, 3], "scratch_load_ubyte_d16": [0, 3], "scratch_load_ubyte_d16_hi": [0, 3], "scratch_load_ushort": [0, 3], "scratch_segment_s": 386, "scratch_store_byt": [0, 3], "scratch_store_byte_d16_hi": [0, 3], "scratch_store_dword": [0, 3], "scratch_store_dwordx2": [0, 3], "scratch_store_dwordx3": [0, 3], "scratch_store_dwordx4": [0, 3], "scratch_store_short": [0, 3], "scratch_store_short_d16_hi": [0, 3], "screen": 514, "script": [388, 400, 406, 409, 416, 445, 453, 457, 461, 463, 468, 472, 507, 508, 509, 511, 527, 531, 533, 534, 535, 540], "scroll": 506, "scrub": 520, "scrutini": 520, "scudo": 545, "scudo_default_opt": 517, "scudo_opt": 517, "sd": [437, 468, 529], "sdata": [0, 2, 3], "sdisel": 480, "sdiv": [402, 465], "sdk": [400, 433, 446, 463, 533], "sdnode": [387, 397, 402, 507, 519, 531, 539, 542], "sdst": [0, 1, 2, 3], "sdtc": 539, "sdvalu": [402, 539, 542], "sdwa": [382, 383], "se": [479, 511, 530], "sea": 386, "seamless": [466, 481, 482], "sean": 507, "search": [397, 399, 400, 404, 405, 409, 423, 433, 445, 452, 454, 456, 461, 463, 476, 478, 479, 480, 481, 491, 502, 505, 507, 508, 512, 519, 523, 524, 538, 539, 546, 553, 554, 555, 556, 557, 563, 564, 565, 566, 567, 576], "searchabl": 527, "sec": 479, "secidx": 456, "seciton": 456, "secnam": 456, "second": [4, 72, 102, 157, 186, 256, 283, 353, 383, 384, 386, 393, 395, 399, 400, 401, 402, 404, 405, 409, 413, 429, 445, 449, 450, 453, 454, 456, 461, 462, 463, 464, 472, 476, 479, 481, 485, 488, 489, 495, 497, 499, 500, 502, 505, 506, 507, 509, 517, 518, 519, 520, 521, 522, 524, 525, 530, 533, 534, 539, 540, 543, 544, 548, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 574, 576, 579], "second_end": 479, "second_tru": 479, "secondari": [399, 452, 454, 517, 522], "secondcondit": 507, "secondlastinst": 539, "secondlastopc": 539, "secrel32": 456, "secrel_hi12": 456, "secrel_lo12": 456, "secret": [517, 520], "secrib": 509, "sectalign": 445, "section": [384, 385, 389, 390, 391, 392, 393, 398, 399, 400, 401, 402, 404, 405, 407, 409, 410, 411, 413, 416, 423, 429, 430, 431, 432, 433, 434, 436, 437, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 461, 462, 463, 469, 472, 473, 474, 478, 479, 483, 484, 485, 486, 488, 489, 491, 493, 494, 502, 503, 505, 506, 507, 509, 513, 515, 517, 518, 519, 520, 524, 525, 527, 529, 537, 538, 539, 540, 541, 542, 546, 552, 554, 559, 560, 562, 564, 569, 570, 573, 575, 579, 581], "section1": 432, "section2": 432, "sectioncontr": 495, "sectioncontribentri": 495, "sectioncontribentry2": 495, "sectioncontributions": 495, "sectioncontrsubstreamvers": 495, "sectiondata": 581, "sectionlength": 495, "sectionmapentri": 495, "sectionmapentryflag": 495, "sectionmaphead": 495, "sectionmaps": 495, "sectionmemorymanag": [483, 491, 546, 547, 548, 549], "sectionnam": [393, 495], "sectionnumb": 581, "sectnam": 445, "sector": 525, "sectvalu": 445, "secur": [399, 445, 505, 517, 520, 545, 554, 564], "sed": [424, 463], "see": [52, 332, 384, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 412, 416, 418, 420, 424, 426, 429, 435, 441, 443, 444, 445, 446, 448, 452, 453, 454, 455, 457, 459, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 478, 479, 480, 481, 484, 485, 486, 488, 489, 490, 491, 492, 495, 498, 499, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 519, 520, 521, 522, 524, 525, 527, 529, 531, 533, 534, 535, 537, 538, 539, 540, 541, 542, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579], "seed": [439, 481], "seek": [452, 456, 462, 505, 543, 545], "seekabl": 543, "seem": [389, 392, 397, 400, 402, 421, 445, 446, 461, 462, 473, 488, 489, 495, 509, 510, 511, 520, 539], "seen": [402, 404, 429, 434, 445, 465, 479, 488, 489, 505, 507, 524, 539, 540, 548, 554, 556, 560, 564, 566, 570, 577, 579], "seg": 479, "segment": [386, 430, 431, 432, 436, 437, 438, 479, 494, 495, 519, 520, 522, 533, 543, 545], "segmentreg": 402, "segnam": 445, "seh": 479, "sel": 449, "seldom": 489, "select": [384, 385, 386, 387, 392, 400, 404, 418, 423, 424, 429, 430, 448, 452, 453, 454, 455, 456, 460, 461, 462, 463, 464, 470, 476, 480, 483, 484, 490, 505, 506, 507, 509, 512, 513, 520, 524, 527, 529, 531, 533, 536, 539, 540, 541, 542, 544, 545, 557, 558, 567, 568, 578], "select_isd_stor": 539, "selectaddrrr": 539, "selectcod": 539, "selectcodecommon": 542, "selectimpl": 465, "selectinst": 404, "selectiondag": [390, 505, 507, 519, 527], "selectiondagbuild": [387, 402], "selectiondagdump": 387, "selectiondagisel": [527, 542], "selectiondagleg": 387, "selectiondagnod": [387, 539], "selectionkind": 479, "selector": [402, 429, 444, 454, 463, 465, 479, 495, 519, 527], "selecttarget": [548, 549, 550], "self": [393, 402, 424, 450, 479, 489, 494, 495, 505, 506, 507, 516, 540, 554, 556, 564, 566, 573, 575, 577], "selp": 490, "selti": 479, "sema": 527, "semant": [383, 385, 386, 390, 402, 404, 431, 446, 454, 457, 461, 478, 480, 482, 486, 507, 512, 519, 520, 527, 528, 530, 531, 536, 540, 544, 547, 553, 555, 563, 565, 574, 576], "semi": [398, 401, 461, 478, 541, 560, 570, 579], "semicolon": [400, 463, 529, 533, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "semispac": 461, "send": [384, 390, 402, 410, 414, 422, 425, 429, 444, 448, 452, 459, 467, 472, 474, 481, 485, 491, 506, 509, 513, 514, 521, 535, 540, 545, 553, 563], "sendmsg": [42, 129, 227, 322, 386], "sens": [389, 390, 400, 402, 404, 413, 445, 457, 462, 477, 479, 481, 507, 509, 511, 519, 520, 524, 542, 553, 560, 563, 570, 574, 579], "sensibl": 507, "sensit": [389, 400, 421, 434, 484, 520, 540, 544], "sent": [384, 410, 422, 429, 434, 452, 472, 491, 506, 524, 545], "sentenc": 404, "sentinel": 393, "separ": [99, 185, 282, 381, 382, 383, 384, 385, 386, 388, 390, 393, 394, 398, 400, 401, 402, 404, 405, 409, 418, 419, 424, 428, 430, 431, 433, 434, 442, 445, 446, 448, 449, 452, 460, 461, 462, 463, 465, 470, 471, 477, 478, 479, 481, 482, 485, 488, 490, 491, 499, 502, 507, 508, 509, 511, 516, 517, 519, 520, 521, 522, 524, 525, 527, 529, 533, 535, 536, 539, 540, 544, 550, 552, 554, 562, 564, 573], "seq": [424, 581], "seq_cst": [386, 390, 479], "sequenc": [7, 105, 189, 286, 384, 385, 390, 392, 402, 404, 405, 411, 429, 449, 450, 454, 456, 459, 461, 462, 465, 479, 481, 489, 492, 493, 494, 502, 505, 507, 509, 511, 512, 519, 520, 522, 524, 527, 529, 530, 538, 539, 540, 543, 552, 556, 557, 562, 566, 567, 573, 577, 578, 581], "sequencetrait": 544, "sequenti": [385, 386, 393, 402, 405, 429, 454, 479, 509, 519, 536], "sequentialtyp": 507, "seri": [386, 388, 393, 400, 402, 419, 452, 454, 463, 474, 479, 484, 494, 499, 507, 511, 512, 540, 547, 551, 554, 564, 571, 572, 575], "serial": [424, 429, 455, 463, 484, 489, 493, 494, 500, 502, 503, 508, 520, 527, 544, 545], "serializ": 465, "serious": [464, 472, 516, 520], "serv": [14, 15, 16, 17, 18, 21, 22, 23, 49, 111, 112, 113, 114, 115, 134, 195, 196, 197, 202, 203, 234, 293, 294, 295, 296, 297, 300, 301, 302, 329, 382, 392, 409, 429, 433, 449, 453, 454, 462, 491, 500, 505, 507, 512, 516, 519, 520, 522, 530, 535, 543, 545, 549, 550], "servaddr": 550, "server": [433, 472, 507, 509, 520, 533, 550], "servic": [386, 389, 391, 457, 509, 517, 525], "sese": 512, "session": [451, 485, 491, 507, 521, 547], "set": [4, 53, 84, 85, 102, 186, 283, 333, 366, 367, 384, 385, 388, 390, 391, 392, 393, 395, 397, 398, 400, 401, 402, 404, 405, 406, 409, 410, 411, 413, 418, 424, 429, 430, 431, 434, 436, 437, 442, 444, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 481, 482, 483, 489, 490, 492, 495, 497, 498, 499, 502, 503, 504, 506, 508, 509, 511, 513, 514, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578], "set_value_nam": [574, 575, 576, 577, 578], "setargstr": 445, "setbann": [507, 550], "setbid": 393, "setbr": 424, "setcategori": 445, "setcc": [402, 465, 507], "setcondcodeact": 539, "setconvertact": 539, "setcurrentdebugloc": [519, 559, 569], "setdata": 404, "setdatalayout": [554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569], "setdebugloc": 519, "setdescript": 445, "setexitcodemapp": 507, "setfoo": 479, "setgc": 461, "setgener": [491, 546, 547], "setgraphattr": 507, "setgraphcolor": 507, "sethi": 539, "sethiddenflag": 445, "setindexedloadact": 539, "setindexedstoreact": 539, "setinsertfencesforatom": 390, "setinsertpoint": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "setinternallinkag": 507, "setjmp": [479, 560, 570, 579], "setjmp_buf": 454, "setlazycompilefailureaddr": 491, "setloadextact": 539, "setloadxact": 539, "setmaxatomicsizeinbitssupport": 390, "setmcjitmemorymanag": 483, "setnam": [507, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "setnumcompilethread": 491, "seto": 520, "setoperationact": [390, 402, 539], "setp": 490, "setpreservesal": 540, "setpreservescfg": 540, "setrecordnam": 393, "setreg": 402, "setrequiresstructuredcfg": 539, "setsearchord": 491, "setsockopt": 550, "setsubprogram": [559, 569], "settargettripl": [558, 568], "setter": [454, 479, 507, 519, 527, 547], "settl": 509, "settransform": 547, "settruncstoreact": 539, "setup": [386, 388, 456, 466, 470, 484, 507, 509, 519, 533, 539, 546, 554, 560, 564, 570, 579], "setupmachinefunct": 539, "setvector": 404, "setxyzzi": 404, "sevenkind": 479, "seventeen": 484, "sever": [383, 385, 389, 393, 397, 400, 401, 402, 404, 409, 413, 415, 424, 427, 433, 434, 445, 449, 450, 452, 454, 455, 461, 463, 465, 475, 479, 481, 482, 484, 487, 489, 491, 493, 497, 500, 505, 507, 508, 512, 514, 516, 517, 519, 520, 525, 527, 529, 531, 533, 534, 535, 539, 540, 545, 553, 555, 560, 563, 565, 570, 571, 574, 576, 579], "sex": 403, "sexi": [551, 572], "sexist": 403, "sext": [40, 225, 320], "sextload": [531, 539], "sexual": 403, "sf": [468, 471], "sge": [479, 513], "sgeu": 513, "sgi": 507, "sgn": 479, "sgpr": [36, 126, 221, 315, 479], "sgpr0": 386, "sgpr1": 386, "sgpr2": 484, "sgpr_spill_count": 386, "sgprn": 386, "sgprs": 386, "sgprs_use": 386, "sgrrs": 386, "sgt": [479, 513], "sgtu": 513, "sh": [406, 445, 453, 463, 472, 509], "sh_addralign": 386, "sh_entsiz": 456, "sh_hidden_private_base_vimid": 386, "sh_link": [431, 456], "sha": 479, "sha1": 481, "shader": [36, 126, 221, 315, 384, 402, 404], "shadow": [511, 522, 524, 539, 555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "shadowbyt": 522, "shadowcallstack": [393, 479], "shadowdescriptort": 386, "shadowlist": 539, "shadowstackgc": 461, "shadowstackgclow": 461, "shall": [400, 445, 456, 479, 487, 560, 570, 579], "shape": [472, 473, 507, 519, 531], "shapekind": 473, "shard": 409, "share": [384, 385, 386, 387, 390, 393, 397, 398, 400, 402, 404, 406, 410, 411, 431, 432, 446, 451, 454, 456, 463, 465, 471, 474, 476, 479, 481, 482, 490, 491, 493, 505, 507, 508, 515, 517, 519, 525, 531, 534, 535, 540, 543, 544, 546, 549, 550, 553, 556, 559, 563, 566, 569, 574], "shared_bas": 385, "shared_librari": 508, "shared_limit": 385, "shared_ptr": [548, 549, 550], "shared_vgpr_cnt": 386, "shared_vgpr_count": 386, "sharedfnast": [549, 550], "sharir": 512, "she": 467, "shelf": [491, 546, 547], "shell": [397, 400, 409, 445, 463, 485, 521, 535, 559, 569], "shf_alloc": [386, 431], "shf_exclud": 456, "shf_execinstr": [386, 431], "shf_link_ord": 456, "shf_merg": 431, "shf_string": 431, "shf_write": [386, 431], "shield": [391, 402, 517, 525], "shift": [384, 385, 386, 390, 393, 394, 402, 445, 455, 459, 479, 480, 489, 505, 520, 529, 531, 543], "shiftinst": 404, "shim": 505, "shini": 540, "ship": [388, 390, 399, 451, 461, 463, 513, 524, 560, 570, 579], "shirt": 403, "shl": [404, 489, 505, 529, 530], "shlib": 463, "shlibext": 535, "shlq": 520, "shn_amdgpu_ld": 386, "shoe": 544, "shoot": [554, 564, 575], "short": [389, 392, 397, 402, 404, 409, 442, 444, 450, 452, 457, 463, 464, 479, 488, 490, 495, 512, 517, 519, 522, 524, 533, 539, 541, 544, 547, 555, 556, 557, 559, 565, 566, 567, 569, 576, 577, 578], "short_enum": 479, "short_wchar": 479, "shortcut": [551, 572, 573], "shorter": [434, 452, 511], "shortest": [489, 530], "shorthand": 529, "should": [86, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 406, 409, 410, 411, 413, 418, 420, 429, 433, 434, 442, 443, 444, 445, 446, 448, 449, 452, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 499, 502, 504, 505, 506, 507, 508, 509, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 548, 551, 552, 553, 554, 555, 557, 559, 562, 563, 564, 565, 567, 569, 572, 573, 574, 575, 576, 578], "shouldexecut": 507, "shouldexpandatomiccmpxchginir": 390, "shouldexpandatomicloadinir": 390, "shouldexpandatomicrmwinir": 390, "shouldexpandatomicstoreinir": 390, "shouldinsertfencesforatom": 390, "shouldn": [389, 404, 445, 471, 479, 483, 488, 535, 551, 572], "show": [395, 402, 405, 409, 412, 423, 424, 429, 430, 432, 433, 442, 444, 445, 449, 450, 451, 456, 462, 463, 466, 479, 480, 483, 484, 485, 490, 506, 507, 509, 511, 514, 519, 520, 521, 522, 527, 529, 533, 537, 538, 539, 540, 542, 544, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "showc": 434, "showdebug": 451, "shown": [385, 392, 409, 418, 423, 424, 434, 436, 437, 442, 445, 449, 450, 464, 473, 479, 484, 485, 488, 490, 507, 519, 520, 521, 522, 531, 534, 537, 539, 544, 556, 566, 577], "shr": 404, "shrink": [402, 509], "shrx": 520, "shrxq": 520, "shstrtab": 386, "sht_dynam": 386, "sht_hash": 386, "sht_llvm_linker_opt": 456, "sht_nobit": [386, 431], "sht_note": [386, 431], "sht_progbit": [386, 431], "sht_rela": 386, "sht_strtab": 386, "sht_symtab": 386, "shtest": 409, "shuffl": [402, 404, 409, 479, 491, 512], "shuffle_vector": 402, "shufflebyt": 481, "shufflevector": [392, 402, 405], "shut": [404, 481, 539], "shutdown": 481, "si": [386, 404, 531], "side": [386, 389, 390, 400, 402, 404, 429, 446, 461, 463, 465, 479, 484, 489, 490, 505, 507, 509, 520, 524, 535, 552, 553, 555, 556, 562, 563, 565, 566, 573, 574, 576, 577], "sidebar": 472, "sidelength": 473, "sierra": 510, "sift": 541, "sig": 463, "sig_atomic_t": 479, "sight": [557, 567, 578], "sigil": 484, "sign": [37, 45, 66, 127, 146, 223, 249, 317, 325, 346, 383, 384, 385, 402, 403, 404, 424, 431, 445, 447, 456, 459, 462, 465, 479, 481, 482, 484, 502, 507, 520, 529, 539, 560, 570, 579], "signal": [384, 390, 445, 451, 454, 458, 479, 481], "signatur": [390, 392, 402, 413, 415, 446, 463, 479, 498, 500, 507, 524, 540, 553, 563], "signature_invalid": 463, "signedcharact": 502, "signext": [393, 479], "signextimm": 402, "signifi": 519, "signific": [48, 233, 328, 389, 392, 393, 398, 400, 404, 415, 436, 437, 452, 454, 455, 458, 461, 470, 479, 481, 482, 489, 505, 507, 512, 519, 520, 524, 527, 533, 540, 543, 551, 552, 555, 556, 562, 565, 566, 571, 572, 573, 576, 577], "significand": 479, "sigplan": [402, 461], "sigusr1": 481, "sil": 531, "silenc": 469, "silent": [431, 452, 467, 479, 529], "silli": [389, 404, 457, 529, 551, 572], "simd": [36, 126, 221, 315, 386, 410, 411, 479, 505, 512, 536, 538], "simd_benchmark": 510, "similar": [387, 389, 390, 392, 393, 397, 401, 402, 404, 405, 413, 417, 424, 429, 433, 445, 446, 449, 452, 454, 456, 460, 461, 462, 463, 465, 468, 469, 470, 473, 474, 479, 481, 484, 487, 489, 490, 491, 493, 495, 502, 505, 507, 508, 509, 511, 512, 513, 517, 519, 520, 525, 527, 529, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 553, 554, 555, 556, 558, 559, 561, 563, 564, 565, 566, 568, 569, 572, 574, 575, 576, 577], "simm13": 539, "simm21": [45, 325], "simpl": [388, 389, 390, 392, 393, 394, 397, 400, 401, 402, 404, 405, 409, 410, 411, 429, 430, 445, 450, 452, 453, 455, 456, 461, 462, 463, 464, 465, 470, 473, 478, 481, 486, 488, 489, 491, 509, 513, 519, 520, 524, 525, 529, 530, 534, 535, 538, 539, 540, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580], "simplecompil": [491, 546, 548, 549, 550], "simpleloopunrol": 536, "simpleproject": 400, "simpler": [386, 402, 455, 479, 505, 507, 509, 519, 520, 546, 556, 557, 566, 567, 577, 578], "simplest": [388, 398, 402, 445, 464, 481, 509, 520, 539, 544, 547, 552, 553, 562, 563, 573, 575], "simpletyp": 581, "simpletypekind": 502, "simpletypemod": 502, "simplevalu": 530, "simpli": [386, 389, 397, 399, 402, 404, 405, 413, 419, 433, 442, 443, 445, 452, 454, 457, 460, 462, 463, 466, 469, 471, 479, 484, 486, 488, 491, 493, 495, 505, 507, 508, 509, 519, 520, 522, 524, 525, 534, 535, 539, 540, 552, 553, 554, 562, 563, 564, 573, 574, 575], "simplic": [396, 461, 465, 507, 522, 551, 553, 561, 563, 574], "simplif": [397, 465, 505, 540], "simplifi": [388, 402, 452, 461, 470, 474, 479, 492, 506, 520, 524, 534, 544, 546, 551, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569, 572, 575, 576, 577, 578, 581], "simplify_typ": 473, "simplifycfg": [406, 557, 567, 578], "simplifydemandedbit": 542, "simul": [392, 402, 429, 452, 465, 479, 533], "simultan": [390, 392, 407, 431, 481, 491, 507, 535, 538], "sin": [389, 446, 538, 544, 546, 551, 552, 553, 554, 561, 562, 563, 564, 572, 573, 574, 575], "sin_famili": 550, "sin_port": 550, "sinc": [386, 387, 389, 393, 394, 400, 402, 404, 407, 413, 429, 433, 434, 445, 446, 449, 450, 452, 454, 457, 461, 462, 464, 468, 469, 471, 472, 473, 474, 476, 479, 481, 483, 485, 488, 489, 490, 491, 493, 495, 499, 503, 507, 509, 513, 514, 518, 519, 521, 522, 524, 525, 530, 531, 539, 540, 543, 544, 551, 552, 553, 554, 555, 556, 557, 559, 561, 562, 563, 564, 565, 566, 567, 569, 573, 574, 575, 576, 577, 578], "sine": [479, 539], "sinf": 446, "singl": [385, 388, 390, 392, 393, 397, 400, 401, 402, 404, 405, 409, 413, 418, 419, 423, 424, 427, 428, 429, 431, 433, 434, 437, 445, 446, 450, 452, 453, 454, 455, 461, 462, 463, 465, 469, 475, 477, 480, 481, 484, 488, 489, 490, 491, 492, 493, 494, 495, 498, 499, 502, 503, 507, 508, 512, 513, 514, 519, 520, 523, 524, 529, 533, 535, 536, 538, 539, 540, 541, 542, 544, 551, 553, 554, 557, 559, 560, 561, 563, 564, 567, 569, 570, 574, 575, 578, 579], "singleimpl": 479, "singleimplnam": 479, "singlesour": 533, "singlesourc": [510, 533], "singlethread": [386, 479], "singular": [404, 479, 507], "sink": [389, 445, 512, 513, 520], "sint": 479, "sit": 547, "site": [389, 401, 409, 454, 456, 461, 464, 477, 479, 484, 488, 505, 510, 513, 520, 522, 524, 535, 537], "sitofp": [553, 563, 574], "situat": [390, 398, 402, 429, 445, 446, 454, 462, 465, 470, 473, 479, 487, 489, 491, 505, 507, 516, 517, 538, 539, 540, 548, 554, 564, 575], "six": [390, 402, 409, 546], "sixkind": 479, "sixth": 539, "sizabl": 507, "size": [4, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 228, 229, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 318, 323, 324, 325, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 384, 385, 386, 389, 390, 391, 392, 393, 397, 400, 403, 404, 406, 409, 410, 413, 415, 418, 429, 430, 431, 433, 434, 438, 439, 440, 442, 445, 450, 455, 456, 459, 461, 462, 465, 479, 480, 481, 482, 489, 490, 494, 495, 497, 499, 502, 504, 505, 510, 515, 517, 519, 520, 522, 524, 528, 529, 530, 531, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 578, 579], "size1": 479, "size2": 479, "size3": 479, "size_t": [390, 461, 481, 482, 507, 544], "sizeclassalloc": 517, "sizem1": 479, "sizem1bitwidth": 479, "sizeof": [433, 449, 457, 479, 490, 497, 499, 502, 507, 520, 524, 550], "sizeofimm": 539, "sjljehprepar": 454, "sk_buff": 402, "sk_circl": 473, "sk_lastsquar": 473, "sk_otherspecialsquar": 473, "sk_somewhatspecialsquar": 473, "sk_specialsquar": 473, "sk_squar": 473, "sketch": 449, "skim": 404, "skip": [392, 393, 401, 402, 404, 405, 418, 432, 434, 446, 449, 450, 461, 465, 470, 479, 507, 509, 519, 520, 524, 533, 536, 538, 539, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578], "skipbasicblock": 492, "skipfunct": 492, "skiploop": 492, "skipmodul": 492, "skipscc": 492, "slash": [413, 479], "slave": 467, "slc": [0, 1, 2, 3, 386], "sle": 479, "sled": 541, "slh": 520, "slice": [507, 529, 530], "slide": [403, 446, 507], "slight": [388, 404, 437, 446, 456, 469, 479, 520, 524, 530, 540, 554, 556, 557, 564, 566, 567, 575, 577, 578], "sligt": 392, "sln": 464, "slot": [402, 415, 429, 449, 454, 459, 477, 479, 518, 522, 524, 539, 557, 567, 578], "slow": [398, 410, 463, 479, 481, 504, 507, 540], "slow_path": 479, "slowdown": 481, "slower": [402, 404, 423, 446, 454, 457, 459, 461, 479, 489, 507, 520], "slowli": [452, 463], "slp": [480, 512], "slt": 479, "sm": [433, 465, 490], "sm_20": [402, 490], "sm_21": 402, "sm_30": [402, 446], "sm_35": [402, 446], "sm_xx": 446, "small": [385, 393, 397, 399, 401, 402, 404, 406, 411, 415, 429, 434, 445, 448, 449, 450, 452, 459, 461, 462, 465, 472, 473, 478, 479, 481, 489, 490, 500, 507, 510, 519, 520, 522, 525, 535, 540, 545, 548, 551, 559, 569, 571, 572], "smallconst": 522, "smaller": [385, 390, 402, 404, 418, 424, 426, 429, 452, 459, 461, 465, 479, 489, 492, 505, 506, 507, 517], "smallest": [384, 474, 479], "smallsetvector": 507, "smallvector": [550, 559, 569], "smallvectorhead": 507, "smallvectorimpl": [507, 542], "smart": [404, 479, 494], "smarter": 445, "smartphon": 487, "smash": [479, 520], "smax": 385, "smell": 507, "smith": 404, "smithwa": 510, "smooshlab": 545, "smooth": 401, "smovq": 402, "smp": [390, 540], "smt": 391, "smul_lohi": 402, "sn": [433, 465], "sn_map": 489, "sn_mapl": 489, "sn_mapr": 489, "snan": 479, "snapshot": [389, 453, 481], "sneak": 404, "snippet": [452, 461, 507], "so": [383, 384, 385, 386, 388, 389, 390, 391, 392, 396, 397, 398, 400, 402, 403, 404, 405, 406, 409, 410, 416, 418, 424, 428, 429, 433, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 514, 516, 517, 518, 519, 520, 521, 522, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 539, 540, 541, 542, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "so_reuseaddr": 550, "social": 403, "sock_stream": 550, "sockaddr": 550, "sockaddr_in": 550, "socket": 550, "sockfd": 550, "socklen_t": 550, "soffset": [0, 1, 2, 3], "soft": [411, 429, 452, 463, 513, 519], "softfp": 470, "softwar": [401, 404, 411, 447, 452, 453, 461, 469, 470, 472, 480, 494, 511, 520, 535, 539, 540, 551, 553, 560, 563, 570, 571, 572, 579], "sol_socket": 550, "solari": 463, "solaris2": 540, "sole": [452, 479, 488, 507], "solid": 469, "solut": [390, 392, 400, 402, 445, 453, 463, 464, 479, 491, 507, 509, 519, 540, 545, 547, 557, 560, 567, 570, 578, 579], "solution_1": 479, "solution_2": 479, "solv": [389, 402, 452, 462, 465, 472, 507, 509, 519, 520, 556, 557, 560, 566, 567, 570, 577, 578, 579], "solver": 402, "some": [384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 409, 410, 412, 413, 418, 423, 424, 429, 430, 432, 433, 445, 446, 447, 448, 449, 452, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 491, 494, 495, 500, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "some_crash_test": 509, "some_op": 484, "somebodi": 452, "someclass": 530, "somefancyaa": 540, "somefunc": [404, 507], "somehow": [495, 507, 540], "somelocalpath": 481, "somemap": 404, "somemulticlass": 530, "someon": [396, 402, 403, 404, 433, 448, 452, 453, 455, 459, 461, 485, 509, 516, 519, 521, 579], "sometest": 534, "someth": [388, 389, 402, 404, 405, 430, 445, 449, 452, 455, 463, 464, 469, 473, 474, 476, 479, 481, 485, 488, 489, 491, 500, 505, 506, 507, 509, 517, 520, 521, 524, 525, 527, 529, 530, 539, 542, 544, 552, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579], "someti": 479, "sometim": [393, 397, 402, 404, 405, 429, 445, 446, 452, 462, 463, 465, 473, 479, 481, 489, 499, 505, 507, 509, 519, 520, 527, 539, 544], "somewhat": [389, 390, 404, 452, 453, 479, 507, 509, 511, 520, 524, 534, 545, 552, 556, 562, 566, 573, 577], "somewhatspecialsquar": 473, "somewher": [405, 454, 473, 479, 509, 534, 535, 540, 553, 556, 563, 566, 574, 577], "sonnenberg": 509, "soon": [452, 481, 482, 491, 514, 540, 547, 552, 555, 562, 565, 573, 576], "sooner": 467, "sophist": [402, 461, 479, 485, 521, 534, 540], "sorri": 579, "sort": [390, 400, 430, 445, 446, 450, 452, 457, 465, 474, 479, 502, 509, 510, 519, 541, 542, 552, 554, 555, 557, 560, 562, 564, 565, 567, 570, 573, 575, 576, 578, 579], "sortord": 542, "sought": 479, "sound": [389, 396, 481, 487], "sourc": [72, 157, 256, 353, 382, 383, 384, 385, 388, 389, 391, 397, 398, 401, 402, 405, 406, 408, 409, 410, 412, 416, 417, 418, 429, 432, 433, 443, 445, 446, 448, 451, 452, 453, 454, 456, 459, 461, 462, 464, 470, 471, 472, 474, 478, 480, 482, 484, 488, 489, 490, 491, 495, 503, 506, 507, 509, 514, 515, 520, 522, 524, 525, 527, 529, 531, 533, 534, 535, 539, 540, 541, 542, 544, 545, 548, 554, 558, 560, 564, 568, 570, 575, 579], "source_filenam": 479, "source_i386": 442, "source_x86_64": 442, "sourcebas": [448, 545], "sourcefil": 418, "sourcefilecount": 495, "sourcefilenameindex": 495, "sourceforg": 510, "sourceinfos": 495, "sourceloc": [559, 569], "sourcewar": [466, 481], "southern": 386, "sp": [402, 456, 479, 484, 486, 518, 531, 539, 559, 569], "sp3": 384, "space": [382, 383, 391, 393, 400, 403, 405, 410, 413, 418, 424, 430, 433, 446, 454, 461, 463, 464, 465, 476, 477, 478, 479, 483, 487, 489, 500, 507, 508, 509, 516, 518, 519, 520, 522, 524, 525, 529, 539, 540, 543, 544, 545, 554, 557, 560, 564, 567, 570, 575, 578, 579], "space0": 479, "space1": 479, "space2": 479, "spadini": 505, "spaghetti": [551, 571, 572], "span": [404, 531, 540], "spanish": 517, "sparc": [390, 402, 431, 463, 479, 511, 529, 539, 540], "sparcasmprint": [402, 539], "sparccallingconv": 539, "sparcel": 431, "sparcgenregisterinfo": 539, "sparcgensubtarget": 539, "sparcinstrformat": 539, "sparcinstrinfo": 539, "sparciseldagtodag": 539, "sparcisellow": 539, "sparclet": 539, "sparclit": 539, "sparclite86x": 539, "sparcreg": 539, "sparcregisterinfo": 539, "sparcsubtarget": 539, "sparctargetasminfo": 539, "sparctargetlow": 539, "sparctargetmachin": 539, "sparcv8": [390, 479], "sparcv9": 479, "spare": [404, 459], "spars": [402, 434, 455, 463, 480, 492, 507, 509, 543], "sparsecheckout": 509, "sparser": 543, "spasr": 509, "spawn": [481, 491], "spcc": 539, "spdx": [404, 546, 547, 548, 549, 550], "speak": [401, 403, 446, 516, 524, 555, 556, 565, 566, 576, 577], "speaker": 487, "spec": [446, 474, 479, 484, 485, 507, 519, 520, 529, 530, 533, 544], "spec95": 534, "speccpu2000": [533, 534], "speccpu2006": 534, "specfier": 479, "special": [7, 382, 384, 385, 386, 389, 390, 392, 393, 401, 402, 404, 405, 409, 429, 430, 445, 446, 450, 451, 452, 453, 454, 456, 458, 461, 462, 463, 465, 471, 474, 478, 481, 484, 488, 489, 491, 493, 494, 495, 505, 507, 509, 513, 519, 520, 522, 524, 525, 529, 530, 531, 535, 538, 539, 540, 544, 545, 551, 557, 558, 559, 560, 567, 568, 569, 570, 571, 572, 578, 579], "specialfp": 529, "specialsquar": 473, "specialti": 507, "specif": [42, 105, 129, 189, 227, 286, 322, 383, 386, 388, 390, 391, 393, 396, 398, 404, 405, 409, 411, 418, 423, 432, 436, 445, 446, 447, 450, 452, 454, 455, 457, 460, 461, 462, 463, 464, 465, 469, 471, 472, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 495, 503, 505, 507, 513, 514, 516, 520, 522, 524, 527, 528, 529, 530, 531, 534, 538, 539, 540, 541, 543, 544, 545, 547, 551, 552, 554, 556, 558, 561, 562, 564, 566, 568, 571, 572, 573, 577], "specifi": [4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 42, 45, 46, 48, 49, 51, 52, 53, 54, 72, 82, 85, 99, 102, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 131, 132, 134, 136, 137, 157, 170, 185, 186, 195, 196, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 223, 227, 231, 233, 234, 236, 237, 256, 267, 282, 283, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 317, 322, 325, 326, 328, 329, 332, 333, 334, 353, 364, 367, 381, 382, 383, 384, 385, 386, 390, 393, 396, 397, 398, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 413, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 442, 443, 444, 446, 450, 453, 454, 456, 457, 460, 462, 463, 464, 465, 474, 478, 481, 484, 485, 490, 491, 492, 495, 499, 500, 503, 505, 507, 508, 512, 513, 515, 517, 519, 522, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 538, 539, 542, 543, 544, 545, 552, 553, 555, 556, 557, 558, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579], "spectr": [479, 520, 545], "spectre11": 520, "spectreattack": 520, "specul": [389, 390, 429, 446, 454, 459, 479, 491, 492, 520, 524, 545], "speculat": [393, 479], "speculative_load_harden": 479, "speculative_load_hardening_microbenchmark": 520, "speed": [398, 400, 404, 424, 445, 446, 452, 463, 481, 488, 535, 557, 567, 578], "speedup": 520, "spell": [404, 452, 527], "spencer": 525, "spend": [409, 542], "spent": [429, 542], "spflag": 519, "spflagdefinit": [559, 569], "sphinx": [400, 463, 485, 545], "sphinx_execut": 400, "sphinx_output_html": 400, "sphinx_output_man": 400, "sphinx_warnings_as_error": 400, "sphinxquickstarttempl": 521, "spi": 386, "spiffygrep": 445, "spiffysh": 445, "spill": [386, 399, 402, 411, 449, 465, 513, 519, 520, 522, 524, 539], "spillalign": 539, "spiller": [402, 410, 411], "spillsiz": 539, "spilt": 402, "spirit": [403, 507], "spisd": 539, "spl": 531, "splat": [402, 480, 491], "splice": [479, 507], "split": [386, 390, 392, 397, 402, 419, 431, 433, 442, 445, 446, 449, 452, 455, 462, 465, 479, 481, 484, 488, 489, 491, 499, 505, 508, 509, 517, 518, 539], "split64": 479, "splitdebugfilenam": 479, "sponsor": 509, "sponsorship": 452, "spot": [481, 505], "spotti": 479, "spread": [479, 505], "spreadsheet": 542, "springer": 446, "sprinkl": 507, "spurious": [404, 479, 535], "spus": 539, "sq": 429, "sq_rsrc_img_1d": 384, "sq_rsrc_img_1d_array": 384, "sq_rsrc_img_2d": 384, "sq_rsrc_img_2d_array": 384, "sq_rsrc_img_2d_msaa": 384, "sq_rsrc_img_2d_msaa_array": 384, "sq_rsrc_img_3d": 384, "sq_rsrc_img_cub": 384, "sqlite": 481, "sqrt": [538, 544], "squar": [452, 473, 478, 479, 513, 544], "squash": [392, 509], "squeue": 429, "sr": 437, "sra": [529, 530], "sram": 386, "srand": 481, "src": [0, 1, 2, 3, 400, 402, 417, 454, 472, 479, 495, 503, 507, 508, 514, 534, 539, 554, 564], "src0": [0, 1, 2, 3, 72, 157, 222, 256, 316, 353, 384], "src0_sel": [0, 2, 3, 386], "src1": [0, 1, 2, 3, 72, 157, 222, 256, 316, 353, 382, 384, 402, 529, 531], "src1_sel": [0, 2, 3, 386], "src2": [0, 1, 2, 3, 72, 157, 222, 256, 316, 353, 402, 529, 531], "src3": [0, 1, 2, 3, 72, 157, 256, 353], "src_private_bas": 386, "src_reg": 402, "src_root": 463, "src_shared_bas": 386, "srcarglist": 479, "srcloc": 479, "srcvalu": 524, "srd": 386, "srds": 386, "srem": 402, "sret": [393, 479], "srgps": 386, "srl": [529, 530], "sroa": [390, 446, 459, 480, 492, 557, 567, 578], "srsrc": [0, 1, 2, 3], "ss": [402, 420, 507, 529], "ssa": [454, 459, 461, 479, 480, 488, 507, 519, 524, 539, 540, 551, 553, 555, 556, 557, 560, 563, 565, 566, 567, 570, 571, 572, 574, 576, 577, 578, 579], "ssamp": [0, 1, 2, 3], "ssca2v2": 510, "sscabmk": 510, "sse": [402, 475, 479, 513, 539, 558, 568], "sse2": [479, 513, 535], "sse4": 538, "sse41": 405, "ssecal": 539, "ssh": 533, "ssp": [393, 479, 519], "sspreq": [393, 479], "sspstrong": [393, 479], "ssrc": [0, 1, 2, 3], "ssrc0": [0, 1, 2, 3], "ssrc1": [0, 1, 2, 3], "ssrc2": [0, 1, 2, 3], "sstream": 404, "st": [420, 437, 479, 490, 539], "st0": [529, 531, 539], "st1": [392, 402, 531, 539], "st17basic_string_viewicst11char_traitsice": 420, "st2": 531, "st3": 531, "st3__1": 420, "st4": 531, "st5": 531, "st6": 531, "st7": 531, "st7__cxx11": 420, "st_gid": 413, "st_mode": 413, "st_uid": 413, "st_valu": 386, "stab": 519, "stabil": [452, 509], "stabl": [404, 421, 424, 452, 472, 482, 492, 507, 519, 539], "stack": [386, 389, 399, 404, 410, 430, 432, 449, 454, 459, 463, 477, 480, 486, 488, 491, 507, 515, 519, 520, 530, 539, 540, 541, 543, 544, 545, 546, 548, 550, 551, 557, 559, 567, 569, 571, 572, 578], "stack_loc": 402, "stack_siz": 410, "stackar": 461, "stackentri": 461, "stackframes": 461, "stackgrowsdown": 539, "stackmap": [436, 437, 461], "stackoffset": 461, "stackprotectorcheck": 479, "stackrestor": 477, "stacksafeti": 505, "stacksav": 477, "stacksiz": 515, "stacksizessect": 402, "staff": 516, "stage": [386, 390, 398, 400, 402, 406, 418, 445, 446, 453, 465, 467, 472, 481, 482, 489, 490, 512, 514, 523, 539, 542, 545, 552, 562, 573], "stage1": [388, 453, 469], "stage2": [388, 398, 400, 453, 469], "stage3": 388, "stageselectioncat": 445, "stale": [386, 519], "stall": [429, 520], "stamp": [413, 500], "stanc": 404, "stand": [402, 404, 446, 452, 479, 495, 507, 535, 540, 547, 548, 549, 550, 552, 562, 573], "standalon": [402, 460, 470, 478, 509, 551, 559, 560, 569, 570], "standard": [7, 385, 386, 388, 389, 390, 392, 400, 402, 405, 406, 409, 410, 411, 414, 415, 419, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 445, 447, 448, 452, 454, 456, 457, 458, 459, 461, 464, 465, 469, 482, 484, 490, 505, 513, 524, 527, 531, 535, 538, 539, 540, 543, 545, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "standpoint": 507, "star": 510, "start": [5, 37, 103, 127, 187, 205, 216, 218, 223, 284, 317, 386, 388, 389, 393, 397, 404, 405, 406, 409, 413, 418, 420, 429, 431, 432, 433, 434, 442, 448, 449, 451, 452, 453, 455, 456, 457, 459, 462, 465, 467, 470, 471, 472, 478, 484, 485, 489, 490, 491, 493, 505, 506, 507, 509, 511, 514, 517, 519, 520, 521, 524, 529, 530, 538, 539, 541, 542, 543, 544, 545, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "start_bb": [576, 577, 578], "start_val": [576, 577, 578], "start_valu": 479, "starter": [487, 511], "startexpr": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 578], "startup": [404, 409, 463, 479, 490, 504, 547, 548], "startval": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "stash": 473, "stat": [389, 391, 397, 410, 411, 413, 429, 443, 465, 525, 533, 534, 540], "state": [384, 385, 389, 390, 392, 396, 402, 404, 429, 445, 449, 452, 453, 454, 458, 461, 465, 470, 472, 479, 481, 484, 485, 488, 491, 497, 505, 506, 507, 509, 511, 513, 517, 519, 520, 521, 522, 524, 538, 540, 543, 544, 547, 549, 550, 552, 559, 562, 569], "stateless": [390, 540], "statement": [387, 399, 401, 404, 429, 446, 450, 452, 454, 455, 462, 479, 480, 505, 507, 516, 519, 520, 527, 529, 538, 539, 543, 553, 555, 557, 559, 563, 565, 567, 569, 571, 576, 578], "statepoint_token": 524, "static": [386, 389, 390, 391, 397, 398, 399, 400, 402, 406, 408, 411, 429, 445, 449, 455, 457, 459, 461, 462, 463, 465, 471, 473, 474, 477, 479, 480, 481, 482, 483, 489, 491, 507, 508, 513, 517, 519, 520, 524, 527, 537, 539, 540, 541, 544, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 574, 575], "static_cast": [550, 557, 558, 559, 567, 568, 569], "static_librari": 470, "statist": [389, 391, 410, 411, 415, 418, 423, 443, 450, 481, 508, 515, 533, 534, 541], "status": [36, 126, 221, 315, 384, 396, 400, 403, 404, 428, 452, 465, 467, 479, 497, 513, 522, 545], "statuscheck": 509, "stay": [449, 482, 489, 499, 544, 545], "stb_local": 479, "std": [413, 420, 432, 443, 445, 454, 457, 465, 473, 489, 490, 491, 502, 510, 517, 520, 533, 538, 539, 542, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "stdarg": 479, "stdcall": 402, "stddef": 481, "stderr": [405, 406, 481, 492, 507, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "stdin": [405, 418, 424, 519, 535, 559, 569, 573, 574, 575, 576, 577, 578], "stdint": 481, "stdio": [463, 464, 466, 482, 525, 575, 576, 577, 578], "stdlib": 463, "stdout": [409, 418, 420, 423, 424, 464, 479, 481, 573, 574, 575, 576, 577, 578, 581], "steadi": 458, "steensgaard": 389, "steer": 452, "steinberg": 510, "stellard": 472, "stem": [446, 507], "step": [388, 389, 397, 398, 400, 402, 446, 449, 452, 453, 454, 455, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 476, 481, 482, 489, 490, 505, 507, 511, 512, 514, 519, 527, 534, 537, 540, 544, 545, 549, 550, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 576, 577, 578, 580], "step_val": [576, 577, 578], "stepexpr": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 578], "stepval": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "stepwithcompactencod": 454, "sti": 531, "stick": [404, 468, 487, 507, 509], "sticki": 479, "still": [392, 396, 397, 399, 402, 404, 409, 418, 431, 441, 445, 446, 450, 452, 454, 457, 461, 463, 464, 465, 466, 470, 471, 473, 474, 477, 479, 481, 483, 488, 489, 491, 492, 504, 505, 506, 507, 509, 510, 513, 516, 519, 520, 522, 524, 525, 534, 538, 540, 544, 554, 555, 556, 557, 560, 564, 565, 566, 567, 570, 576, 577, 578, 579], "still_poison": 479, "stingi": 507, "stitch": 499, "stkmaprecord": [522, 524], "stksizerecord": 522, "stl": [404, 457, 463, 481, 505, 507, 544], "stlextra": [548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "stm": 479, "stmt": 536, "stn_undef": 386, "stoney": 386, "stop": [400, 403, 404, 421, 432, 433, 449, 452, 454, 455, 461, 472, 479, 481, 484, 488, 507, 519, 520, 540, 541, 543, 552, 562, 573], "stopgap": 507, "stopiter": 449, "stopper": 514, "storag": [386, 391, 393, 402, 449, 461, 490, 519], "storageclass": 581, "store": [19, 20, 28, 116, 120, 198, 199, 200, 201, 204, 205, 213, 216, 218, 298, 299, 307, 384, 385, 386, 389, 390, 392, 393, 394, 400, 401, 405, 413, 418, 442, 445, 449, 450, 453, 454, 458, 461, 462, 463, 465, 475, 477, 480, 481, 483, 484, 488, 489, 490, 491, 495, 499, 507, 508, 509, 512, 513, 517, 518, 519, 520, 522, 523, 524, 534, 537, 539, 546, 547, 551, 552, 557, 558, 559, 561, 562, 567, 568, 569, 572, 573, 578], "storemerg": 449, "storeregtoaddr": 539, "storeregtostackslot": [402, 539], "storesdnod": 539, "stori": [450, 463, 464, 519], "stote": 386, "str": [392, 423, 450, 479, 490, 507, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 581], "str1": 529, "str2": 529, "str_offset": 519, "straight": [389, 402, 446, 475, 489, 507, 524, 525, 529, 551, 552, 562, 572, 573, 574], "straightforward": [392, 402, 457, 473, 507, 509, 517, 519, 539, 540, 547, 553, 554, 555, 556, 557, 561, 563, 564, 565, 566, 567, 574, 575, 576, 577, 578, 579], "strang": [392, 404, 557, 567, 578], "strategi": [390, 402, 445, 449, 507, 509, 513, 520, 524, 557, 567, 578], "stray": 535, "strconcat": [529, 530, 539], "stream": [42, 129, 227, 322, 385, 393, 402, 404, 405, 406, 407, 414, 419, 422, 423, 425, 427, 430, 431, 432, 437, 442, 443, 450, 455, 463, 464, 479, 481, 494, 507, 510, 519, 520, 538, 539, 540, 543, 544, 552, 562, 572, 573, 574, 575, 576, 577, 578], "streamblock": 499, "streamclust": 510, "streamdirectori": 499, "streamer": 402, "streamsiz": 499, "strength": [390, 402, 403, 445, 459, 479, 507, 545, 551, 571, 572], "strengthen": 429, "stress": [404, 408, 460], "strex": 390, "strict": [387, 390, 392, 405, 452, 454, 459, 463, 478, 479, 481, 489, 490, 491, 507, 519, 524, 525, 528, 531, 553, 555, 558, 563, 565, 568, 574, 576], "stricter": [390, 405, 479], "strictfp": [393, 479], "stride": [10, 108, 192, 289, 510, 512], "strike": [517, 553, 556, 563, 566, 574, 577], "string": [386, 393, 395, 398, 400, 401, 402, 404, 409, 410, 411, 413, 423, 429, 431, 432, 433, 434, 436, 437, 440, 442, 445, 456, 463, 475, 476, 478, 484, 486, 490, 495, 499, 500, 503, 505, 515, 517, 519, 524, 525, 527, 529, 530, 531, 539, 540, 541, 544, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "string_view": 420, "stringmap": 445, "stringmapentri": 507, "stringref": [404, 445, 519, 542, 544, 546, 547, 559, 569], "stringsort": 404, "stringswitch": 527, "stringwithcstr": 519, "stringwithspecialstr": 519, "strip": [397, 418, 419, 431, 441, 442, 443, 445, 452, 482, 495, 507, 513, 519, 535], "strippointercast": 404, "strive": [403, 404, 465, 535], "strlen": 507, "strong": [390, 401, 404, 405, 452, 457, 459, 461, 470, 471, 479, 480, 489, 513, 517, 529, 555, 557, 560, 565, 567, 570, 571, 576, 578, 579], "stronger": [386, 390, 479, 507, 524], "strongest": 520, "stroustrup": 507, "strr": 539, "strtab": [386, 393], "strtab_blob": 393, "strtod": [445, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "strtol": 445, "struct": [386, 393, 402, 405, 445, 446, 449, 454, 456, 459, 461, 477, 488, 494, 495, 498, 499, 500, 502, 507, 519, 520, 537, 538, 539, 540, 544, 557, 559, 560, 567, 569, 570, 578, 579], "struct_anon": 393, "struct_nam": 393, "structtyp": 507, "structur": [386, 389, 390, 393, 397, 402, 404, 405, 408, 413, 416, 423, 429, 433, 436, 437, 445, 450, 454, 459, 461, 462, 463, 464, 465, 475, 478, 480, 481, 482, 483, 485, 495, 499, 500, 503, 505, 512, 519, 521, 527, 531, 539, 540, 543, 544, 546, 551, 552, 553, 555, 556, 557, 559, 560, 562, 563, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "struggl": 463, "stryjewski": 505, "stt_amdgpu_hsa_kernel": 386, "stt_file": 431, "stt_func": [386, 431], "stt_gnu_ifunc": 431, "stt_object": [386, 431], "stt_section": 431, "stub": [402, 447, 489, 491, 507, 539, 548, 549, 550], "stuck": [560, 570, 579], "stucki": 510, "student": 448, "studi": [459, 481, 508], "studio": [388, 400, 404, 456, 463, 513, 519, 545], "stuf": 405, "stuff": [401, 402, 445, 485, 507, 521, 529, 534, 540, 544, 554, 555, 557, 558, 559, 564, 565, 567, 568, 569, 575, 576, 578], "stump": 539, "stupid": 397, "stwu": 402, "style": [386, 388, 390, 397, 405, 408, 409, 411, 412, 413, 418, 419, 429, 431, 432, 437, 442, 445, 452, 461, 464, 478, 495, 507, 511, 520, 527, 529, 530, 541, 545, 552, 557, 560, 562, 567, 570, 573, 578, 579], "styleguid": 511, "stylist": 404, "sub": [384, 390, 393, 398, 401, 402, 405, 409, 429, 449, 452, 455, 456, 463, 472, 489, 507, 512, 527, 529, 531, 535, 539, 553, 558, 563, 568, 574], "sub1": 405, "sub32rr": 519, "sub_32": 484, "sub_8bit": 484, "sub_ri": 529, "sub_rr": 529, "subblock": 393, "subclass": [389, 402, 404, 445, 461, 473, 484, 512, 519, 529, 531, 540, 544, 552, 562, 573], "subclassoptionaldata": 489, "subclassref": 530, "subcommand": [540, 541, 542], "subcompon": 452, "subdir": 509, "subdirectori": [400, 401, 409, 463, 470, 478, 533, 534, 535, 539], "subdivid": 479, "subel": [479, 480], "subexpress": [385, 389, 480, 520, 552, 554, 555, 556, 557, 562, 564, 565, 566, 567, 573, 575, 576, 577, 578], "subfield": 529, "subfold": 453, "subgraph": [505, 512], "subject": [386, 399, 402, 404, 452, 472, 479, 506, 507, 536, 544], "subl": [402, 405], "sublist": 401, "subloop": 536, "submiss": 452, "submit": [396, 397, 506, 533, 545], "submodul": 509, "subnorm": [479, 490], "subobject": 537, "suboptim": 509, "subpath": [409, 478], "subprogram": [479, 519, 559, 569], "subproject": [404, 452, 463, 469, 509, 513, 535, 545], "subproject_branch": 509, "subrang": 479, "subreg": [484, 539], "subreg_to_reg": 484, "subregclasslist": 539, "subregindex": 484, "subregion": 479, "subregist": [522, 539], "subroutin": 479, "subroutine2": 519, "subscrib": [452, 506], "subscript": [389, 479, 505], "subsect": [433, 437, 485, 491, 507], "subsequ": [222, 316, 386, 387, 402, 445, 452, 454, 462, 472, 479, 483, 486, 502, 505, 511, 519, 520, 522, 529, 538, 539, 548, 549, 550, 553, 554, 563, 564], "subset": [389, 390, 409, 429, 431, 452, 460, 462, 463, 479, 481, 490, 491, 507, 510, 519, 520, 522, 535, 560, 570, 579], "subsidiari": 527, "subst": [529, 530, 531], "substanti": [389, 398, 404, 461, 479, 520, 554, 564, 575], "substit": 479, "substitu": 535, "substitut": [390, 401, 402, 420, 470, 479, 491, 505, 522, 529], "substr": [429, 445, 450, 535], "substream": [433, 493, 503], "subsubsect": 485, "subsystem": [402, 448, 479], "subtarget": [402, 424, 444, 465, 479], "subtargetemitt": 539, "subtargetfeatur": [531, 539], "subtl": [398, 401, 462, 481, 495, 552, 555, 560, 562, 565, 570, 573, 575, 576, 579], "subtmp": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "subtmp5": [557, 567, 578], "subtool": 446, "subtract": [385, 402, 450, 455, 479], "subtyp": [454, 539], "subvector": 402, "subvers": [452, 463, 464, 472, 474, 509, 513, 535], "subvert": 399, "succ": 404, "succee": [554, 564], "succeed": [393, 394, 396, 399, 404, 405, 406, 409, 410, 413, 414, 415, 417, 422, 425, 427, 443, 444, 454, 467, 473, 479, 507, 535, 540, 546, 547, 552, 562, 573, 578], "success": [389, 404, 406, 407, 416, 423, 424, 429, 452, 454, 463, 465, 467, 470, 471, 472, 474, 479, 491, 507, 509, 513, 515, 520, 524, 535, 538, 539, 540, 544, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "success_ord": 390, "successor": [394, 402, 404, 421, 454, 459, 479, 505, 512, 513, 519, 539], "succinct": 409, "such": [383, 385, 386, 389, 390, 392, 393, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 415, 418, 420, 421, 423, 424, 430, 431, 433, 445, 446, 449, 450, 451, 452, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465, 466, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 497, 500, 502, 503, 504, 505, 507, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 522, 524, 525, 527, 529, 530, 531, 533, 535, 536, 538, 539, 540, 544, 545, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "sudo": [463, 468, 533], "suffer": 461, "suffic": [392, 500], "suffici": [386, 389, 390, 391, 397, 405, 445, 459, 461, 462, 463, 470, 473, 474, 479, 486, 502, 505, 506, 507, 509, 511, 520, 524, 529, 551, 561, 572], "suffix": [383, 386, 400, 404, 409, 410, 413, 414, 418, 422, 431, 445, 455, 470, 479, 507, 511, 520, 527, 535, 539, 540, 549, 550, 553, 563, 574], "sugar": 479, "suggest": [389, 398, 404, 452, 459, 463, 471, 479, 491, 504, 506, 507, 508, 511, 520, 524, 528, 531, 540], "suing": 550, "suit": [388, 401, 402, 446, 452, 454, 455, 464, 465, 468, 471, 472, 489, 507, 509, 519, 520, 541, 545, 546], "suitabl": [393, 399, 401, 402, 418, 444, 445, 448, 449, 450, 460, 461, 465, 479, 481, 483, 490, 491, 505, 507, 511, 519, 524, 535], "sum": [385, 393, 394, 418, 479, 495, 507, 538, 542], "sum_1": 434, "sum_2": 434, "summar": [402, 409, 423, 449, 461, 479, 500, 502, 505, 515], "summari": [393, 404, 405, 406, 409, 410, 411, 414, 417, 418, 419, 422, 424, 425, 427, 429, 430, 431, 432, 434, 436, 437, 443, 444, 445, 503, 505, 506, 517, 520, 523, 524, 534, 557, 559, 567, 569, 578], "summaris": 392, "summat": 479, "sumo": 386, "sun": 540, "sunit": 402, "sunk": [386, 389, 465, 519], "sunwspro": 463, "super": [402, 482, 539], "superclass": [389, 507, 527, 529, 530, 531, 539, 540], "superflu": 462, "superpos": 507, "superreg": 539, "superset": [390, 413, 479], "supersparc": 539, "superword": [480, 538], "supplement": [409, 447, 516], "suppli": [4, 11, 45, 102, 131, 186, 283, 290, 325, 384, 385, 393, 409, 418, 434, 449, 454, 463, 465, 468, 470, 472, 474, 479, 482, 486, 491, 507, 509, 540, 544, 546, 547, 548, 560, 570, 579], "support": [7, 42, 44, 45, 105, 129, 189, 198, 200, 201, 209, 211, 212, 227, 286, 322, 324, 325, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 398, 399, 400, 401, 403, 405, 409, 410, 413, 417, 418, 420, 423, 428, 429, 430, 432, 433, 434, 445, 447, 451, 452, 455, 456, 458, 459, 460, 461, 462, 463, 464, 466, 469, 470, 472, 473, 475, 476, 477, 478, 482, 484, 485, 489, 490, 495, 497, 499, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 517, 519, 520, 521, 526, 527, 529, 531, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580], "supporttest": 400, "suppos": [402, 434, 454, 473, 478, 479, 489, 495, 499, 509, 525, 540, 544], "suppress": [404, 407, 409, 430, 449, 479, 519, 536, 544], "sure": [389, 390, 392, 396, 400, 402, 404, 406, 418, 445, 448, 449, 452, 455, 457, 459, 463, 464, 466, 467, 468, 470, 471, 472, 473, 474, 487, 504, 506, 507, 514, 519, 523, 525, 528, 531, 533, 535, 538, 540, 541, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 574, 578, 579], "surfac": [17, 18, 114, 115, 202, 203, 296, 297, 384, 402, 460, 541], "surgic": 507, "surpris": [459, 463, 479, 489, 507, 552, 554, 560, 562, 564, 570, 573, 575, 579], "surround": [390, 399, 405, 462, 479, 484, 505, 511, 520, 522, 531], "survey": 447, "surviv": [454, 520, 552, 562, 573], "suspect": 443, "suspend1": 449, "suspend2": 449, "suspens": 449, "suspici": 525, "sv": 400, "sve": 511, "sve2": 513, "svg": [400, 542], "svn": [400, 452, 453, 459, 464, 472, 504, 506, 511, 522, 533, 538, 545, 574], "svptr": 479, "svr4": 413, "sw": [437, 510, 520], "swap": [384, 390, 392, 468, 479, 488, 499], "sweep": 461, "swich": 390, "swift": [479, 491, 511], "swiftcc": [393, 479], "swifterror": [393, 479], "swiftmodul": 407, "swiftself": [393, 479], "swim": 510, "switch": [387, 399, 400, 412, 431, 445, 449, 454, 455, 465, 466, 468, 472, 473, 476, 505, 507, 509, 511, 513, 520, 524, 527, 533, 538, 539, 543, 544, 546, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576], "switchsect": [402, 461], "switchtosect": 402, "swizzl": 386, "sym": [430, 431, 432, 433, 436, 437, 456, 491, 514, 548, 549, 550], "symaddr": [548, 549, 550], "symbol": [37, 99, 127, 185, 223, 282, 317, 381, 384, 389, 393, 398, 402, 404, 408, 410, 411, 412, 413, 415, 418, 420, 426, 431, 432, 434, 436, 437, 441, 445, 451, 461, 463, 466, 471, 479, 480, 481, 483, 495, 503, 504, 507, 513, 519, 524, 529, 533, 537, 539, 542, 543, 544, 546, 547, 550, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 574, 576, 577, 578, 579, 581], "symbol1": [432, 456], "symbol2": [432, 456], "symbol_in_partit": 456, "symbollookup": 550, "symbolmap": 491, "symbolnam": 386, "symbolresolv": [548, 549, 550], "symbols": 498, "symbolstringptr": 491, "symbolt": 507, "symbytes": [495, 498], "symlink": 400, "symmetr": 446, "symmetri": 535, "symnam": 432, "symobl": 456, "symposium": 446, "symptom": 463, "symptomat": 517, "symrecordstream": 495, "symtab": [386, 407, 507], "sync": [390, 490, 544], "synch_and_fetch": 470, "synchon": 386, "synchron": [384, 386, 390, 479, 482, 491, 509], "syncscop": 479, "synergist": 512, "synonym": 413, "synopsi": [412, 435, 438, 440, 441, 445], "syntact": [405, 479, 554, 564, 575], "syntax": [7, 8, 36, 42, 47, 81, 99, 106, 126, 129, 133, 169, 185, 190, 221, 227, 232, 266, 282, 287, 315, 322, 327, 363, 381, 382, 386, 401, 402, 404, 410, 411, 429, 432, 433, 445, 457, 462, 463, 470, 480, 481, 484, 485, 486, 492, 507, 513, 517, 519, 521, 527, 530, 531, 535, 544, 545, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 567, 568, 569, 572, 574, 575, 576, 577, 578], "synthes": [455, 519, 554, 564, 575], "synthesiz": 513, "synthesizedcd": 392, "synthet": [431, 519, 539], "sys": [391, 463, 548, 549, 550, 558, 559, 568, 569], "sysadmin": 509, "syscal": 402, "sysmsg_op_ecc_err_interrupt": [42, 129, 227, 322], "sysmsg_op_host_trap_ack": [42, 129, 227, 322], "sysmsg_op_reg_rd": [42, 129, 227, 322], "sysmsg_op_ttrace_pc": [42, 129, 227, 322], "sysroot": [470, 471, 472, 531], "system": [388, 389, 390, 391, 392, 396, 398, 400, 401, 402, 404, 407, 409, 410, 411, 413, 416, 433, 445, 447, 448, 452, 453, 455, 457, 460, 461, 462, 465, 466, 468, 470, 471, 472, 474, 478, 480, 481, 482, 490, 491, 499, 503, 504, 506, 507, 508, 509, 513, 514, 517, 519, 520, 522, 524, 527, 531, 533, 534, 540, 541, 542, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 572, 575, 578, 579], "system_error": [558, 568], "system_vgpr_workitem_id_undefin": 386, "system_vgpr_workitem_id_x": 386, "system_vgpr_workitem_id_x_i": 386, "system_vgpr_workitem_id_x_y_z": 386, "systemat": 520, "systemz": [402, 463, 479, 484, 511], "sysv": [430, 447], "t1": [402, 479, 489, 535, 542], "t1item": 489, "t2": [402, 405, 479, 489, 490, 535, 542], "t2item": 489, "t3": [402, 479], "t4": 479, "t5": 479, "ta": 384, "tab": [404, 405, 418], "tabl": [383, 384, 385, 387, 389, 392, 393, 399, 400, 407, 408, 413, 415, 416, 423, 426, 429, 431, 432, 433, 436, 437, 442, 444, 445, 449, 463, 465, 473, 476, 479, 481, 482, 483, 489, 491, 493, 495, 500, 502, 503, 505, 507, 513, 515, 520, 524, 527, 531, 534, 538, 539, 543, 544, 546, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579], "tabledef": 424, "tablegen": [400, 444, 455, 463, 465, 471, 472, 476, 478, 511, 539, 545], "tablegen_json_vers": 527, "tablet": 487, "tabsiz": 418, "tackl": [457, 554, 557, 564, 567, 575, 578], "tag": [82, 170, 267, 364, 382, 383, 393, 404, 452, 453, 461, 463, 479, 486, 509, 513, 524, 527], "tag0": [382, 479], "tag1": [382, 479], "tag2": 479, "tag3": 479, "tag_apple_properti": 519, "tag_base_typ": 519, "tag_memb": 519, "tag_offset": 479, "tag_pointer_typ": 519, "tag_structure_typ": 519, "tahiti": 386, "tail": [393, 405, 449, 461, 479, 489, 490, 519, 529, 530, 543, 560, 570, 579], "tail_exit": 543, "tailcal": [402, 520], "tailcalle": 402, "tailcallopt": [402, 479], "tailor": [433, 468], "take": [386, 388, 389, 390, 392, 393, 397, 398, 399, 401, 402, 403, 404, 405, 407, 409, 410, 411, 415, 419, 422, 425, 427, 428, 429, 432, 433, 434, 443, 445, 446, 448, 449, 452, 453, 454, 455, 456, 460, 461, 462, 463, 464, 465, 469, 473, 475, 476, 477, 479, 481, 482, 483, 485, 487, 489, 490, 491, 505, 506, 507, 509, 512, 513, 514, 516, 519, 520, 521, 522, 524, 527, 529, 530, 533, 537, 539, 540, 541, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581], "takecallback": 507, "takeerror": [491, 507, 546, 547, 548, 549, 550], "takelast": 507, "taken": [389, 395, 398, 402, 413, 424, 445, 454, 459, 465, 479, 484, 488, 489, 505, 507, 509, 512, 514, 519, 520, 524, 525, 531, 537, 539, 560, 570, 579], "talk": [404, 446, 455, 479, 507, 516, 540, 551, 552, 553, 554, 555, 557, 560, 562, 563, 564, 565, 567, 570, 571, 572, 573, 574, 575, 576, 578, 579], "talli": 534, "tape": 463, "tar": [463, 464, 471, 514], "tarbal": [463, 471, 472], "target": [37, 81, 127, 169, 223, 266, 317, 363, 384, 385, 387, 388, 390, 391, 392, 393, 398, 399, 400, 401, 404, 408, 409, 410, 417, 420, 424, 429, 431, 432, 447, 449, 453, 455, 457, 459, 460, 461, 463, 464, 469, 471, 472, 474, 475, 476, 478, 483, 486, 489, 491, 492, 494, 517, 519, 520, 522, 524, 527, 531, 533, 534, 535, 537, 538, 540, 545, 546, 547, 548, 549, 550, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569, 571, 575, 576, 577, 578], "target_compile_definit": 401, "target_data": [575, 576, 577, 578], "target_link_librari": 400, "targetasminfo": [461, 539], "targetcallingconv": 539, "targetdescript": 539, "targetfeatur": 386, "targetframeinfo": 539, "targetframelow": 454, "targetfunc": 507, "targetgroup": 478, "targetinfo": [452, 539], "targetinstrformat": 539, "targetinstrinfo": 511, "targetjitinfo": 539, "targetlibraryinfo": 511, "targetlow": [387, 397, 454, 455, 465, 511, 539, 542], "targetloweringbas": 387, "targetloweringobjectfil": 402, "targetloweringopt": 542, "targetmachin": [461, 483, 490, 511, 539, 540, 546, 548, 549, 550, 554, 555, 556, 557, 558, 564, 565, 566, 567, 568], "targetnam": 484, "targetopt": [402, 558, 568], "targetpassconfig": 465, "targetregisterclass": [402, 465, 539], "targetregisterdesc": [402, 539], "targetregisterinfo": 511, "targetregistri": [402, 539, 558, 568], "targetregsterinfo": 402, "targets_to_build": 471, "targetselect": [550, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569], "targetselectiondag": [402, 455, 539], "targetsubtarget": 539, "targettripl": [558, 568], "tarjan": 540, "task": [404, 405, 449, 454, 455, 469, 479, 489, 519, 524, 525], "task_begin": 405, "task_end": 405, "taught": 402, "tb": 539, "tba": 386, "tba_hi": [36, 385], "tba_lo": [36, 385], "tbaa": [459, 480, 488], "tbb": 539, "tbcc": 539, "tbd": [382, 384, 491], "tbepler": 510, "tblgen": [400, 402, 408, 455, 469, 471, 527, 529, 531, 539], "tblgensubtarget": 539, "tbr_jtr": 484, "tcb": 518, "tcp": 550, "tcpchannel": 550, "td": [387, 402, 411, 444, 455, 476, 484, 490, 527, 529, 530, 531, 539], "tdm": 467, "tdrr": 411, "tdtag": 527, "te": 479, "teach": [455, 546, 551, 553, 563, 571, 572, 574], "team": [446, 472, 508, 509, 512], "tear": 454, "technic": [401, 403, 420, 452, 481, 509, 542, 545], "techniqu": [389, 397, 402, 461, 479, 489, 507, 520, 538, 539, 540, 541, 551, 552, 554, 555, 556, 557, 562, 564, 565, 566, 567, 571, 572, 573, 575, 576, 577, 578], "technolog": [482, 560, 570, 579], "tedious": 544, "tee": 397, "tell": [389, 397, 400, 402, 404, 406, 445, 450, 452, 455, 461, 463, 470, 479, 482, 489, 491, 504, 507, 508, 509, 519, 529, 534, 535, 552, 553, 557, 559, 560, 562, 563, 567, 569, 570, 573, 574, 578, 579], "temp": 474, "templat": [389, 404, 418, 445, 446, 473, 485, 489, 505, 513, 525, 527, 530, 531, 539, 540, 544, 545, 550, 553, 563], "templatearglist": 530, "templateparam": 479, "tempor": [398, 479], "temporari": [385, 402, 404, 409, 424, 456, 457, 465, 479, 480, 481, 484, 505, 507, 509, 516, 520, 534, 535, 544], "temporarili": 397, "tempt": [404, 463, 520, 525], "ten": [462, 499], "tend": [404, 421, 429, 452, 458, 462, 463, 478, 491, 507, 511, 514, 519], "tension": [557, 567, 578], "tensorflow": 481, "tentat": 479, "term": [386, 389, 390, 392, 402, 403, 404, 429, 452, 454, 457, 461, 465, 479, 480, 484, 488, 489, 491, 505, 506, 512, 519, 522, 524, 525, 529, 530, 535, 545, 547], "termin": [386, 393, 395, 397, 402, 404, 409, 413, 414, 421, 422, 425, 427, 433, 443, 445, 454, 456, 459, 489, 490, 494, 495, 500, 505, 507, 512, 513, 515, 517, 519, 525, 529, 535, 539, 540, 555, 565, 576], "terminolog": [386, 395, 401, 511, 545, 559, 569], "ternari": 402, "terribl": 388, "territori": 463, "terror": 388, "tessel": 386, "test": [386, 388, 389, 397, 398, 399, 402, 404, 405, 408, 410, 416, 424, 425, 429, 433, 434, 439, 442, 444, 445, 446, 448, 449, 450, 454, 455, 457, 460, 464, 465, 466, 468, 469, 471, 473, 474, 478, 489, 492, 505, 506, 507, 508, 509, 511, 517, 520, 524, 527, 540, 544, 545, 550, 554, 555, 557, 558, 564, 565, 567, 568, 575, 576, 578], "test1": [485, 521, 524, 535], "test5": 405, "test_devic": 446, "test_exec_root": 409, "test_format": 409, "test_fuzz": 481, "test_hd": 446, "test_host": 446, "test_source_root": 409, "test_suite_benchmarking_on": 533, "test_suite_collect_stat": 533, "test_suite_remote_host": 533, "test_suite_run_benchmark": 533, "test_suite_run_typ": 533, "test_suite_run_und": 533, "test_suite_spec2000_root": 533, "test_suite_spec2006_root": 533, "test_suite_spec2017_root": 533, "test_suite_subdir": 533, "test_suite_use_perf": 533, "testabl": 506, "testament": [551, 571, 572], "testcas": [406, 452, 479, 507, 553, 563, 574], "testcase_dir": 481, "testcaselength": 507, "testcleanup": 479, "tester": [408, 452, 472, 534, 545], "testfnptr": 479, "testfunc": [554, 564, 575], "testingconfig": 409, "testl": 520, "testq": 520, "testresult": 545, "testrunn": 409, "testsuit": [405, 409], "testsuitemakefileguid": 533, "tex": 534, "text": [400, 402, 403, 404, 405, 413, 418, 420, 423, 430, 432, 434, 452, 455, 456, 460, 481, 485, 486, 506, 507, 516, 519, 520, 521, 522, 530, 533, 534, 535, 539, 541, 544, 548, 551, 560, 561, 570, 572, 579, 581], "textfileread": 404, "textual": [402, 410, 418, 452, 457, 460, 479, 480, 486, 488, 493, 527, 529, 531, 535, 542, 554, 564, 575], "textur": 384, "tfe": [14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 31, 32, 33, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 195, 196, 197, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 293, 294, 295, 296, 297, 303, 304, 305, 306, 307, 310, 311, 312, 386], "tgid_size_en": 386, "tgid_x_en": 386, "tgid_y_en": 386, "tgid_z_en": 386, "tgt": [0, 1, 2, 3, 444], "th": [386, 392, 454, 479, 489, 497, 539, 544, 551, 561, 572], "than": [385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 400, 402, 404, 405, 407, 410, 413, 415, 418, 420, 424, 429, 430, 433, 434, 437, 442, 445, 446, 449, 450, 452, 453, 454, 455, 457, 459, 460, 461, 463, 465, 467, 468, 472, 474, 475, 477, 478, 479, 481, 482, 485, 486, 487, 488, 489, 491, 493, 495, 497, 499, 500, 502, 505, 507, 508, 509, 510, 512, 513, 514, 516, 518, 519, 520, 521, 522, 524, 527, 529, 530, 535, 536, 539, 540, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "thank": [448, 474, 517], "that": [7, 20, 28, 31, 33, 120, 205, 213, 216, 218, 299, 307, 310, 312, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "the": [4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 34, 35, 36, 37, 42, 44, 45, 48, 50, 51, 54, 66, 72, 81, 82, 83, 99, 102, 103, 105, 109, 110, 111, 112, 113, 114, 115, 125, 126, 127, 129, 131, 135, 136, 137, 146, 157, 169, 170, 171, 185, 186, 187, 189, 193, 194, 195, 196, 197, 202, 203, 219, 220, 221, 222, 223, 227, 229, 230, 233, 235, 236, 237, 249, 256, 266, 267, 268, 282, 283, 284, 286, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 313, 314, 315, 316, 317, 322, 324, 325, 328, 330, 331, 334, 346, 353, 363, 364, 365, 381, 382, 383, 384, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 456, 460, 465, 467, 468, 471, 474, 475, 476, 478, 482, 483, 484, 485, 486, 489, 492, 494, 504, 508, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 535, 536, 537, 541, 543, 544, 545, 546, 548, 549, 550, 553, 554, 559, 563, 564, 569, 571, 574, 575, 580, 581], "the_execution_engin": [575, 576, 577, 578], "the_fpm": [575, 576, 577, 578], "the_funct": [574, 575, 576, 577, 578], "the_modul": [574, 575, 576, 577, 578], "theadsafemodul": 491, "thecontext": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "thecu": [559, 569], "thedoc": 544, "thedoclist": 544, "theexecutionengin": [559, 569], "thefpm": [554, 555, 556, 557, 564, 565, 566, 567], "thefunct": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "theier": 505, "their": [382, 386, 387, 389, 390, 392, 393, 396, 399, 400, 401, 402, 404, 408, 409, 415, 416, 418, 419, 421, 423, 429, 430, 431, 434, 445, 446, 450, 452, 453, 454, 457, 459, 461, 463, 465, 467, 472, 476, 477, 478, 479, 480, 481, 482, 484, 487, 489, 490, 491, 502, 503, 504, 505, 507, 508, 509, 511, 512, 513, 517, 519, 520, 522, 524, 525, 527, 529, 531, 533, 535, 536, 537, 539, 540, 541, 543, 544, 545, 546, 547, 551, 552, 553, 554, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579], "thejit": [554, 555, 556, 557, 559, 564, 565, 566, 567, 569], "them": [386, 389, 390, 392, 393, 397, 399, 400, 401, 402, 403, 404, 405, 406, 409, 413, 418, 423, 426, 427, 429, 431, 433, 434, 436, 437, 445, 446, 448, 450, 452, 453, 454, 457, 459, 460, 461, 462, 463, 464, 465, 469, 471, 472, 473, 475, 476, 478, 479, 481, 482, 484, 486, 487, 488, 489, 490, 491, 502, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 516, 518, 519, 520, 522, 524, 525, 527, 529, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "theme": [528, 531, 546], "themodul": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "themself": 452, "themselv": [390, 393, 402, 409, 445, 452, 460, 478, 479, 489, 507, 509, 519, 520, 529, 531, 536, 542, 543, 552, 562, 573], "then": [66, 83, 146, 171, 249, 268, 346, 365, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 397, 398, 400, 401, 402, 403, 404, 405, 409, 410, 411, 413, 414, 415, 418, 421, 422, 425, 427, 428, 429, 431, 433, 434, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491, 493, 494, 495, 498, 499, 500, 505, 506, 507, 508, 509, 511, 517, 518, 519, 520, 521, 522, 523, 524, 525, 529, 531, 533, 534, 535, 536, 537, 538, 539, 540, 542, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 572, 573, 574, 575, 577, 578], "then1": 520, "then2": 520, "then_": [576, 577, 578], "then_bb": [576, 577, 578], "then_val": [576, 577, 578], "thenbb": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576], "thenv": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "theoret": [429, 507, 525], "theori": [465, 470, 489, 495, 544, 579], "there": [205, 216, 218, 383, 384, 385, 386, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 409, 413, 418, 420, 423, 424, 429, 431, 434, 436, 437, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481, 484, 485, 486, 488, 489, 490, 491, 493, 495, 497, 498, 500, 502, 503, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 518, 519, 520, 521, 522, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 539, 540, 541, 543, 544, 545, 547, 548, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 573, 574, 575, 576, 577, 578, 579], "thereaft": 522, "therebi": [445, 479, 522], "therefor": [386, 390, 392, 402, 429, 445, 446, 449, 450, 452, 454, 462, 466, 479, 486, 487, 490, 492, 505, 507, 511, 512, 513, 519, 520, 522, 536, 540, 544], "thereof": 403, "thes": 479, "these": [4, 99, 102, 185, 186, 282, 283, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 413, 414, 418, 426, 429, 437, 442, 445, 446, 448, 449, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 495, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 519, 520, 522, 524, 525, 527, 529, 531, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "thesi": 512, "thetargetmachin": [558, 568], "thetripl": 511, "they": [382, 383, 384, 385, 386, 389, 390, 392, 393, 396, 397, 400, 401, 402, 403, 404, 405, 406, 409, 411, 413, 415, 420, 421, 429, 430, 431, 434, 442, 443, 445, 446, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 472, 473, 476, 477, 478, 479, 480, 481, 484, 486, 488, 489, 491, 493, 494, 502, 505, 506, 507, 508, 509, 510, 511, 512, 514, 516, 519, 520, 522, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 542, 543, 544, 545, 546, 547, 549, 552, 553, 554, 555, 557, 560, 562, 563, 564, 565, 567, 570, 573, 574, 575, 576, 578, 579], "thin": [398, 400, 418, 426, 479, 507], "thing": [389, 392, 393, 397, 398, 401, 402, 403, 404, 405, 409, 445, 446, 450, 452, 454, 460, 462, 463, 464, 465, 469, 471, 472, 474, 478, 479, 481, 485, 486, 488, 489, 503, 504, 505, 507, 508, 509, 517, 519, 520, 521, 525, 527, 529, 534, 535, 540, 542, 544, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "think": [389, 396, 400, 402, 404, 450, 452, 455, 461, 462, 473, 476, 479, 480, 488, 490, 494, 506, 507, 509, 520, 525, 529, 551, 555, 558, 560, 565, 568, 570, 572, 576, 579], "thinlto": [395, 520, 523], "third": [388, 393, 402, 404, 429, 433, 445, 449, 450, 454, 456, 461, 462, 463, 472, 479, 484, 489, 492, 507, 508, 513, 519, 520, 522, 524, 534, 539, 540, 543, 544, 553, 560, 563, 570, 574, 579], "this": [0, 1, 2, 3, 4, 7, 11, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 46, 48, 49, 53, 72, 82, 84, 85, 86, 99, 102, 120, 121, 122, 126, 127, 128, 129, 132, 134, 157, 170, 185, 186, 198, 200, 201, 205, 209, 211, 212, 213, 214, 215, 216, 218, 221, 222, 223, 224, 225, 226, 227, 231, 233, 234, 256, 267, 282, 283, 290, 307, 308, 309, 315, 316, 317, 318, 319, 320, 321, 322, 326, 328, 329, 333, 353, 364, 366, 367, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 560, 561, 562, 563, 564, 565, 566, 568, 570, 571, 572, 573, 574, 575, 576, 577, 579], "thischar": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "thoma": 520, "thorough": [404, 555, 565, 576], "those": [384, 386, 389, 390, 397, 398, 400, 401, 402, 403, 404, 405, 409, 412, 413, 415, 418, 421, 429, 430, 431, 433, 434, 445, 450, 452, 454, 460, 461, 462, 463, 465, 468, 470, 471, 473, 478, 479, 480, 481, 488, 489, 491, 503, 505, 507, 509, 516, 517, 519, 520, 522, 524, 525, 535, 537, 539, 540, 541, 544, 545, 557, 558, 559, 567, 568, 569, 578], "thost": 464, "though": [390, 394, 402, 404, 405, 420, 424, 445, 446, 452, 454, 455, 456, 459, 461, 462, 463, 469, 473, 479, 482, 487, 488, 489, 493, 505, 507, 509, 513, 519, 520, 529, 534, 535, 540, 546, 552, 553, 555, 557, 559, 562, 563, 565, 567, 569, 573, 574, 575, 578], "thoughout": 499, "thought": [385, 402, 479, 488, 500, 511, 524, 530], "thousand": [481, 499, 505], "thread": [384, 385, 389, 390, 391, 393, 400, 402, 405, 407, 409, 418, 434, 448, 449, 451, 453, 454, 461, 480, 481, 490, 491, 509, 510, 511, 517, 518, 520, 524, 533, 541, 542, 543, 546, 547], "thread_id": [405, 543], "thread_loc": [402, 479, 524], "thread_siblings_list": 391, "threadbuff": 543, "threadgroup_size_in_wavefront": 386, "threadid": 490, "threadidx": 490, "threadloc": [393, 479], "threadlocalquarantinesizekb": 517, "threadsaf": 461, "threadsafecontext": [546, 547], "threadsafemodul": [546, 547], "threadsanit": 479, "threat": [403, 516], "threaten": 403, "three": [384, 388, 393, 397, 401, 402, 405, 406, 429, 434, 445, 449, 454, 457, 458, 462, 463, 465, 479, 484, 488, 489, 492, 493, 505, 507, 511, 512, 514, 515, 520, 524, 527, 535, 539, 540, 541, 546, 552, 555, 562, 565, 573], "threshold": [418, 479, 505, 510, 515, 541], "thrive": 545, "throttl": 512, "through": [386, 389, 390, 393, 394, 397, 400, 401, 402, 410, 429, 445, 446, 447, 452, 454, 457, 458, 459, 460, 461, 462, 463, 465, 467, 469, 472, 473, 475, 477, 479, 481, 482, 483, 486, 487, 489, 492, 503, 505, 506, 507, 509, 511, 512, 513, 515, 517, 519, 520, 522, 523, 524, 525, 527, 538, 539, 540, 541, 544, 546, 547, 548, 549, 551, 552, 554, 555, 556, 557, 558, 559, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 578], "throughout": [384, 385, 386, 392, 393, 401, 405, 450, 452, 463, 479, 483, 502, 507, 519, 525, 543], "throughput": [424, 429, 459], "throw": [402, 446, 449, 459, 477, 479, 491, 505, 507, 540, 548], "throwaway": 388, "throwinfo": 454, "thrown": [398, 454, 458, 479], "throwntyp": 479, "ths": 415, "thumb": [390, 402, 404, 452, 470, 525, 541], "thumb1": [447, 479], "thumb2": [402, 447, 475, 479], "thunderbird": 452, "thunderx2t99model": 539, "thunderxt8xmodel": 539, "thunk": [402, 433, 479, 489, 505, 537], "thursday": 487, "thus": [389, 390, 393, 394, 397, 402, 404, 445, 449, 450, 452, 454, 457, 459, 461, 465, 474, 479, 481, 488, 489, 493, 495, 502, 505, 506, 507, 509, 519, 520, 524, 535, 536, 540, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "thusli": 498, "ti": 453, "tian": 512, "tick": [413, 543], "tid": 490, "tidbit": [389, 551, 559, 569, 571, 572, 578, 580], "tidi": [511, 540], "tidig_cmp_cnt": 386, "tie": [386, 402, 416, 449, 477, 479, 484, 491, 519, 524], "tiebreak": 446, "tight": [404, 459, 479, 482, 509, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "tighter": 449, "tii": [402, 511], "tile": [51, 136, 236, 331, 512], "till": [451, 467, 507], "tim": [465, 512], "timberwolfmc": 534, "time": [386, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 407, 409, 410, 411, 413, 416, 418, 423, 424, 425, 429, 430, 431, 433, 434, 442, 443, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 459, 461, 463, 464, 465, 467, 469, 470, 471, 472, 477, 478, 479, 480, 481, 483, 484, 485, 487, 489, 490, 491, 492, 495, 499, 500, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 517, 519, 520, 521, 522, 524, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551, 553, 554, 555, 556, 557, 561, 563, 564, 565, 566, 567, 571, 572, 574, 575, 576, 577, 578], "timeit": 533, "timelin": [541, 542], "timeout": 481, "timeout_exitcod": 481, "timepassesisen": 445, "timer": 391, "timescal": 543, "timestamp": [407, 431, 500, 509, 543], "tini": [411, 473, 489], "tip": [397, 448, 452, 509, 527, 540, 545, 551, 572], "tire": [404, 531], "tirefactori": 404, "titl": [396, 452, 506], "tli": 511, "tls": [393, 402, 454, 479, 520, 524], "tm": [490, 539, 548, 549, 550], "tma_hi": [36, 385], "tma_lo": [36, 385], "tmax": 385, "tmp": [400, 402, 405, 424, 442, 461, 462, 479, 507, 508, 535, 539, 554, 557, 564, 567, 575, 578], "tmp1": [404, 405, 462], "tmp2": [462, 557, 567, 578], "tmp3": [405, 462], "tmp4": 462, "tmp5": 462, "tmp7": 405, "tmp9": 405, "tmpb": [557, 558, 559, 567, 568, 569], "tmpfs": 391, "to": [4, 7, 12, 13, 19, 20, 31, 32, 33, 34, 35, 37, 44, 45, 47, 48, 53, 54, 66, 72, 81, 83, 84, 85, 99, 102, 105, 109, 110, 116, 123, 124, 125, 127, 131, 133, 137, 146, 157, 169, 171, 185, 186, 189, 193, 194, 198, 199, 200, 201, 204, 205, 209, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 229, 230, 232, 233, 237, 249, 256, 266, 268, 282, 283, 286, 291, 292, 298, 299, 310, 311, 312, 313, 314, 316, 317, 324, 325, 327, 328, 333, 334, 346, 353, 363, 365, 366, 367, 381, 382, 383, 384, 385, 386, 388, 390, 391, 392, 393, 395, 396, 398, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 446, 447, 449, 450, 451, 452, 454, 455, 456, 458, 464, 477, 478, 480, 481, 482, 483, 484, 485, 486, 488, 493, 494, 495, 497, 498, 499, 502, 503, 504, 506, 508, 510, 511, 512, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 548, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581], "tobia": 512, "toc": [402, 513], "today": [390, 404, 460, 462, 479, 503, 509, 511, 522, 524], "todefin": 527, "todo": [402, 452, 455, 465, 471, 505, 514, 527, 528, 540], "togeth": [28, 120, 213, 307, 384, 386, 389, 392, 394, 397, 402, 405, 406, 409, 413, 427, 430, 434, 442, 443, 445, 449, 450, 452, 454, 461, 463, 465, 469, 478, 479, 481, 487, 491, 495, 499, 505, 507, 509, 519, 529, 535, 538, 540, 547, 551, 552, 553, 555, 556, 560, 561, 562, 563, 565, 566, 570, 572, 573, 574, 576, 577, 579], "tojittargetaddress": 491, "tok": [449, 479, 559, 569], "tok_binari": [556, 557, 558, 559, 566, 567, 568, 569], "tok_def": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "tok_els": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "tok_eof": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "tok_extern": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "tok_for": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "tok_identifi": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "tok_if": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "tok_in": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "tok_numb": [551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569], "tok_then": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569], "tok_unari": [556, 557, 558, 559, 566, 567, 568, 569], "tok_var": [557, 558, 559, 567, 568, 569], "tokcodefrag": 530, "token": [402, 429, 449, 455, 465, 486, 495, 509, 524, 529, 530, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "token_prec": [573, 574, 575, 576, 577, 578], "tokidentifi": 530, "tokinteg": 530, "tokprec": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "tokstr": 530, "tokvarnam": 530, "told": [404, 452], "toler": [461, 472, 479, 481, 523], "tolmach": 461, "tolmach94": 461, "tom": [472, 544], "tombston": 497, "ton": [488, 551, 572], "tonearest": 479, "tonga": 386, "too": [388, 397, 402, 404, 405, 445, 452, 458, 463, 464, 465, 466, 468, 479, 488, 489, 507, 510, 512, 513, 520, 525, 527, 529, 535, 540, 543, 544, 547, 552, 557, 559, 560, 562, 567, 569, 570, 573, 578, 579], "took": [574, 575, 576, 577, 578], "tool": [386, 388, 389, 393, 398, 400, 401, 402, 404, 405, 407, 409, 411, 412, 415, 416, 417, 418, 419, 421, 423, 424, 425, 429, 433, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 450, 451, 452, 456, 461, 466, 469, 470, 471, 472, 474, 478, 479, 480, 482, 490, 492, 500, 502, 503, 504, 505, 506, 508, 509, 511, 514, 515, 517, 519, 523, 525, 531, 533, 535, 539, 540, 545, 551, 552, 553, 554, 555, 562, 563, 564, 565, 572, 574, 575, 576], "tool_nam": 463, "toolchain": [398, 399, 400, 402, 404, 407, 464, 470, 493, 494, 495, 500, 503, 509, 533], "toolkit": [446, 490, 507], "toolnam": 508, "toolset": [400, 464, 513, 541], "toosl": 542, "top": [386, 389, 390, 393, 400, 401, 402, 404, 405, 409, 411, 416, 434, 452, 453, 454, 460, 462, 463, 465, 466, 477, 478, 479, 480, 481, 488, 489, 505, 506, 507, 508, 509, 515, 519, 527, 533, 534, 537, 540, 542, 544, 546, 547, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579], "top_level_dir": 463, "topic": [404, 452, 485, 487, 521, 551, 560, 570, 571, 572, 579], "toplevel": [573, 574, 575, 576, 577, 578], "toplevelexpr": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "topmost": 442, "topn": 434, "topolog": [391, 405, 502], "torec": 507, "torerr": 507, "toret": 519, "toreturn": 543, "toshio": 402, "tot": 524, "total": [386, 390, 393, 415, 429, 479, 481, 489, 495, 499, 502, 505, 507, 515, 517, 518, 519, 520, 534, 540, 542, 553, 563], "touch": [391, 404, 448, 473, 479, 505, 507, 509, 516, 519, 520, 540], "tough": [552, 562, 573], "tour": [552, 562, 573], "toward": [386, 394, 398, 400, 452, 460, 479, 507, 520, 545], "towardzero": 479, "town": 545, "toy": [446, 491, 542, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "tpi": [433, 493, 494, 500, 503], "tpistreamhead": 502, "tpistreamvers": 502, "tpoff": 524, "tr1": 507, "trac": 467, "trace": [418, 445, 479, 480, 519, 520, 524, 540], "trace_ev": 542, "tracer": 543, "tracevalu": 505, "track": [386, 389, 396, 397, 402, 404, 406, 409, 429, 452, 453, 457, 459, 460, 461, 463, 465, 474, 479, 480, 481, 484, 488, 489, 491, 492, 505, 507, 509, 519, 520, 522, 523, 524, 531, 533, 540, 553, 556, 557, 559, 563, 566, 567, 569, 574, 577, 578], "tracker": [396, 403, 448, 452, 460, 506, 509], "tracksregl": 484, "tradbigmip": 431, "trade": [397, 398, 488, 507, 520, 547], "tradeoff": [390, 461, 520, 554, 564, 575], "tradit": [388, 389, 402, 430, 491, 505, 507, 519, 540, 546, 551, 561, 572], "tradlittlemip": 431, "traffic": [487, 507, 509, 557, 567, 578], "tragic": 509, "trail": [401, 404, 405, 409, 431, 445, 450, 462, 479, 507, 544], "train": [388, 434, 533], "trait": [404, 507, 544], "tramp": 479, "tramp1": 479, "transcendent": 446, "transcrib": [553, 563, 574], "transcript": [554, 564, 575], "transfer": [392, 446, 449, 454, 477, 479, 484, 518, 520, 533, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569], "transform": [384, 390, 397, 400, 402, 404, 405, 429, 431, 443, 455, 457, 458, 459, 461, 463, 469, 476, 479, 489, 492, 507, 508, 512, 520, 522, 524, 527, 531, 537, 539, 540, 545, 547, 548, 549, 550, 553, 554, 555, 556, 557, 559, 563, 564, 565, 566, 567, 569, 574, 575, 578], "transformedtsm": 547, "transformfunct": 547, "transformlay": 547, "transformutil": 478, "transit": [386, 402, 429, 452, 463, 476, 478, 488, 489, 509, 513, 519, 520, 540, 545, 546, 554, 564, 575], "translat": [389, 390, 402, 404, 414, 444, 445, 449, 450, 456, 457, 459, 460, 462, 463, 465, 479, 491, 495, 502, 505, 507, 510, 512, 519, 520, 527, 539, 544, 559, 560, 569, 570, 579], "transmit": 479, "transpar": [404, 445, 455, 462, 482, 507], "transport": 513, "trap": [36, 107, 126, 130, 131, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 191, 221, 228, 229, 239, 240, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 315, 399, 449, 459, 462], "trap_pres": 386, "travers": [402, 409, 456, 461, 465, 473, 478, 489, 505, 512, 540], "trc": 402, "tre": 505, "treat": [37, 127, 223, 317, 386, 390, 392, 393, 400, 402, 405, 407, 420, 423, 429, 431, 445, 454, 456, 460, 462, 475, 476, 479, 481, 482, 484, 489, 491, 495, 513, 519, 522, 524, 535, 539, 542, 553, 560, 563, 570, 574, 579], "treatment": [386, 461, 507, 539], "tree": [386, 388, 398, 400, 402, 404, 409, 416, 433, 452, 454, 457, 459, 460, 461, 462, 463, 464, 471, 472, 473, 478, 479, 480, 489, 490, 491, 507, 509, 512, 513, 517, 519, 534, 535, 540, 542, 545, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 567, 568, 569, 572, 574, 575, 576, 577, 578], "tri": [389, 390, 391, 392, 396, 397, 400, 402, 403, 404, 406, 416, 423, 433, 445, 446, 448, 452, 453, 459, 460, 461, 463, 464, 474, 479, 481, 484, 485, 487, 488, 489, 491, 502, 505, 507, 509, 511, 516, 517, 519, 520, 521, 525, 536, 539, 540, 541, 544, 545, 547, 548, 549, 550, 551, 554, 556, 557, 558, 560, 564, 566, 567, 568, 570, 572, 573, 574, 575, 576, 577, 578, 579], "triag": [402, 545], "trick": [448, 452, 471, 473, 479, 507, 509, 520, 527, 545, 551, 557, 567, 572, 578], "tricki": [390, 404, 446, 461, 533, 540], "trickrevnum": 509, "trie": 432, "trig": 539, "trigger": [386, 389, 397, 400, 404, 425, 449, 461, 474, 479, 480, 481, 483, 484, 491, 507, 513, 522, 534, 535, 544, 546, 548, 554, 564], "trim": 509, "triniti": 386, "trip": [392, 404, 479, 505, 512, 520, 536], "tripl": [393, 410, 411, 429, 432, 459, 460, 471, 483, 484, 511, 519, 535, 539, 550, 558, 559, 568, 569], "triplet": [445, 479], "trivial": [386, 389, 390, 392, 401, 402, 404, 445, 455, 457, 462, 465, 477, 479, 505, 506, 507, 509, 519, 520, 525, 539, 540, 543, 551, 552, 557, 560, 562, 567, 570, 571, 572, 573, 578, 579], "troubl": [445, 460, 463, 464], "true": [385, 386, 389, 390, 395, 401, 402, 404, 406, 411, 418, 424, 429, 434, 442, 445, 449, 461, 462, 465, 466, 468, 471, 473, 476, 479, 481, 484, 489, 490, 495, 503, 505, 507, 509, 517, 519, 527, 530, 531, 535, 536, 537, 539, 540, 541, 542, 544, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 578], "true_branch_weight": 395, "truebr": 519, "truedest": 479, "truli": [507, 520, 548], "trunc": [519, 538], "truncat": [12, 13, 37, 48, 66, 83, 109, 110, 127, 146, 171, 193, 194, 222, 223, 233, 249, 268, 291, 292, 316, 317, 328, 346, 365, 385, 479, 529, 539], "truncinst": 505, "trunk": [399, 402, 453, 463, 464, 472, 481, 506, 509, 519, 533, 545], "trust": [404, 452, 519, 548], "truth": [452, 479, 488, 555, 565, 576], "tsc": [542, 543], "tsc701": 539, "tsc_delta": 543, "tsctx": 491, "tsflag": 539, "tslp": 512, "tsm": [491, 495, 547], "tsm1": 491, "tsm2": 491, "tstri": 484, "tsvg": 542, "tt": 476, "tti": 511, "ttmp": [9, 10, 11, 21, 22, 23, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 100, 101, 108, 135, 136, 137, 138, 139, 192, 235, 236, 237, 238, 241, 242, 288, 289, 290, 300, 301, 302, 323, 324, 325, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 386], "ttmp0": 385, "ttmp4": 385, "ttmp5": 385, "ttmp6": 385, "ttmp7": 385, "tu": 423, "tunabl": 517, "tune": [402, 445, 459, 507, 513, 519, 520, 538, 557, 567, 578], "tupl": [456, 465, 479, 509], "turbo": 391, "ture": [552, 554, 562, 564, 573, 575], "turk": 386, "turn": [386, 387, 390, 392, 397, 400, 401, 402, 403, 413, 445, 452, 455, 468, 469, 479, 482, 485, 488, 491, 504, 505, 512, 516, 519, 521, 524, 527, 528, 531, 539, 546, 547, 548, 552, 553, 560, 562, 563, 570, 573, 574, 579], "turner": 511, "turnercamelback": 511, "turnerlldb": 511, "tutori": [445, 446, 473, 481, 489, 491, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "tval": 519, "tweak": [445, 446, 463, 473, 504, 541, 546, 554, 564], "twice": [388, 449, 463, 464, 479, 489, 507, 514, 533, 540, 554, 564, 575], "twiddl": [479, 554, 555, 556, 557, 564, 565, 566, 567, 575, 576, 577, 578], "twist": 546, "twitter": 487, "two": [384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 404, 405, 409, 411, 413, 420, 421, 423, 424, 429, 433, 434, 442, 445, 446, 449, 450, 452, 453, 454, 456, 458, 459, 460, 461, 463, 464, 465, 467, 469, 473, 474, 476, 477, 479, 480, 481, 483, 484, 488, 489, 490, 491, 492, 495, 499, 502, 505, 506, 507, 508, 509, 511, 513, 515, 517, 519, 520, 522, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 537, 538, 539, 540, 542, 544, 545, 546, 547, 548, 552, 554, 555, 556, 557, 560, 562, 564, 565, 566, 567, 570, 573, 574, 575, 576, 577, 578, 579], "twoaddressinstructionpass": 402, "twoargfp": 529, "txt": [388, 400, 404, 416, 419, 442, 445, 448, 452, 463, 472, 478, 485, 506, 509, 519, 521, 533, 535, 539, 540, 542, 546, 547, 548, 549, 550], "ty": [404, 455, 479, 507, 513, 529], "ty2": 479, "ty64": 519, "type": [42, 129, 227, 322, 382, 389, 390, 392, 393, 395, 397, 399, 400, 402, 406, 407, 410, 413, 415, 419, 420, 423, 425, 429, 430, 431, 432, 437, 445, 446, 449, 452, 454, 456, 457, 460, 461, 463, 464, 468, 471, 472, 473, 474, 475, 477, 478, 480, 483, 486, 488, 489, 490, 493, 497, 500, 503, 506, 508, 511, 512, 513, 515, 519, 520, 522, 524, 527, 531, 533, 534, 535, 540, 541, 542, 543, 545, 546, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 581], "type0": 465, "type1": 465, "type_info": 454, "type_nam": 386, "type_of": [574, 575, 576, 577, 578], "typecod": 455, "typedef": [404, 433, 456, 507, 544, 547, 550], "typedescriptor2": 454, "typeendbegin": 502, "typeflag": 519, "typeid": [455, 479, 489, 537], "typeid1": 537, "typeid2": 537, "typeid3": 537, "typeidref": 479, "typeindex": [494, 502], "typeindexbegin": 502, "typeindexend": 502, "typeless": 383, "typemap": 455, "typenam": [386, 479, 507, 550], "typeprint": 455, "typerecordbyt": 502, "typesaf": 479, "typeservermaps": 495, "typetestr": 479, "typic": [389, 390, 400, 402, 404, 405, 413, 415, 418, 424, 427, 430, 446, 453, 454, 458, 460, 461, 462, 464, 470, 472, 473, 478, 479, 480, 481, 482, 483, 484, 486, 491, 492, 500, 505, 506, 507, 508, 515, 517, 519, 520, 522, 533, 535, 539, 540, 543, 560, 570, 579], "u1": 509, "u16": [0, 2, 3, 385, 386], "u16x2": [0, 1, 2, 3], "u2": 509, "u3": 509, "u32": [0, 1, 2, 3, 382, 385, 386, 402, 490], "u64": [0, 1, 2, 3, 385, 386, 490], "u8": 386, "u8x4": [0, 1, 2, 3], "u999999": 506, "ualpha": 530, "ubsan": [481, 517], "ubuntu": [452, 463, 468, 471], "uc": 386, "ud2": [399, 402], "ud2a": 402, "udiv": 465, "ueq": [479, 557, 567, 578], "ueyama": 511, "uf": 512, "uge": 479, "ugli": [405, 457, 556, 566, 577], "uglifi": [554, 564, 575], "ugt": 479, "ui": [401, 506], "uid": [413, 431, 479], "uimm20": [44, 45, 229, 230, 324, 325], "uimm21": [44, 324], "uimm32": 131, "uimm8": 131, "uint": [410, 433], "uint128": 502, "uint128oct": 502, "uint16": [458, 499, 502, 522], "uint16_t": [476, 494, 495, 502, 503, 519, 539, 544], "uint16short": 502, "uint16x4_t": 392, "uint32": [458, 497, 502, 522], "uint32_max": [507, 519], "uint32_t": [479, 495, 498, 500, 502, 513, 519, 544, 550], "uint32long": 502, "uint32x2_t": 392, "uint64": [458, 502, 522], "uint64_max": 394, "uint64_t": [394, 475, 479, 489, 503, 507, 515, 544, 550], "uint64quad": 502, "uint8": [458, 522], "uint8_t": [481, 494, 498, 544, 550], "uintptr_t": [520, 550], "uitofp": [553, 555, 557, 563, 565, 567, 574, 576, 578], "uiuc": 452, "ule": 479, "uleb128": 456, "ulimit": 481, "ulittle32_t": [499, 500], "ulp": 479, "ult": [479, 519, 555, 557, 565, 567, 574, 575, 576, 577, 578], "ultim": [404, 409, 452, 479, 488, 514, 519, 520, 554, 564, 575], "ultrasparc": [463, 539], "ultrasparc3": 539, "um": [479, 509], "um1": 509, "um2": 509, "um3": 509, "um4": 509, "um5": 509, "um6": 509, "um7": 509, "um8": 509, "umbrella": 509, "umrella": 509, "un": [479, 538, 546], "unabbrev": 393, "unabbrevi": 393, "unabl": [403, 429, 459, 479, 480, 491, 492, 507, 520, 529, 573], "unabridg": [557, 567, 578], "unaccept": 452, "unadorn": 479, "unaffect": 488, "unalign": [390, 459, 494], "unannot": 509, "unari": [530, 551, 557, 558, 559, 560, 567, 568, 569, 570, 571, 572, 578, 579], "unaryexprast": [556, 557, 558, 559, 566, 567, 568, 569], "unassign": [385, 396], "unassignedbug": 396, "unattend": 397, "unavail": [390, 429, 519, 539], "unawar": [446, 479], "unbias": 394, "unbound": [402, 429, 479, 539], "unbuild": 509, "uncach": 386, "uncaptur": 479, "uncategor": [419, 430, 436, 437, 445], "uncertain": [404, 448], "unchang": [389, 479, 507, 509, 519, 524, 536, 549, 550], "uncharacter": 502, "uncheck": 507, "unclear": [385, 495, 500, 502, 557, 567, 578], "unclutt": 525, "uncomfort": 403, "uncommon": [401, 454, 479], "uncompil": 491, "uncompress": [400, 463, 507], "uncondit": [389, 402, 418, 456, 467, 479, 505, 524, 539, 548, 555, 559, 565, 569, 576, 577, 578], "unconnect": 462, "uncontroversi": 461, "unconvent": [560, 570, 579], "unconvinc": 481, "uncoop": 461, "uncov": [400, 404, 481], "undecid": 509, "undeclar": [479, 553, 563, 574], "undef": [390, 405, 449, 454, 465, 477, 479, 484, 488, 507, 519, 527], "undefin": [385, 386, 390, 392, 396, 400, 404, 405, 430, 431, 433, 449, 454, 456, 457, 459, 462, 474, 482, 488, 505, 507, 513, 517, 519, 527, 529, 530, 531, 536, 538, 539], "undefinedbehaviorsanit": 481, "undefinit": 479, "under": [386, 388, 391, 392, 400, 402, 404, 406, 409, 429, 436, 437, 445, 450, 452, 454, 457, 459, 461, 463, 465, 466, 467, 472, 477, 478, 479, 481, 490, 491, 499, 500, 506, 507, 509, 513, 520, 524, 531, 535, 537, 539, 540, 546, 547, 548, 549, 550, 552, 559, 560, 562, 569, 570, 573, 579, 580], "underestim": 479, "underflow": [385, 386], "undergo": [479, 505], "undermin": 519, "underneath": [463, 508, 509, 535], "underscor": [404, 419, 484, 519], "understand": [389, 393, 396, 402, 403, 404, 405, 409, 429, 452, 454, 455, 461, 462, 470, 478, 479, 485, 486, 489, 493, 494, 498, 503, 505, 506, 507, 516, 517, 519, 520, 521, 524, 525, 528, 529, 530, 531, 540, 542, 543, 544, 548, 551, 553, 557, 559, 563, 567, 569, 571, 572, 578, 579], "understood": [393, 402, 404, 495, 498, 579], "underway": 513, "undesir": 479, "undetect": 481, "undisturb": 404, "undo": 392, "undocu": [404, 454, 495], "une": 479, "unequ": [405, 479], "unexpect": [399, 401, 404, 452, 464, 489, 507, 517, 535, 557, 567, 578], "unflatten": 542, "unfold": 520, "unforeseen": 465, "unfortun": [404, 446, 470, 477, 479, 489, 507, 509, 519, 520, 540, 554, 555, 560, 564, 565, 570, 575, 576, 579], "unfriend": 481, "unfus": 446, "unglamor": 452, "unguard": 479, "unhandl": [454, 507], "unhappi": 446, "unharden": 520, "unhid": 445, "uni": 490, "unic": 445, "unif": 389, "unifi": [393, 459, 470, 479, 507, 509, 579], "uniform": [404, 429, 479, 492, 507], "uniformretv": 479, "unimagin": 524, "unimpl": 540, "unimport": [514, 524], "unindex": 539, "uniniti": [461, 462, 479, 523, 529], "uninstru": 495, "unintend": 505, "unintent": 452, "uninterest": [452, 551, 572], "unintrus": 479, "union": [389, 402, 404, 429, 495, 519, 557, 567, 578], "uniprocessor": 390, "uniqu": [386, 393, 402, 405, 407, 409, 430, 431, 452, 454, 456, 467, 475, 476, 478, 479, 482, 489, 491, 492, 495, 500, 502, 507, 509, 519, 522, 524, 530, 531, 536, 538, 542, 553, 554, 563, 564, 574], "unique_ptr": [490, 491, 507, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "uniqueid": 500, "uniqueretv": 479, "unistd": 525, "unit": [36, 126, 221, 315, 386, 392, 399, 400, 404, 406, 418, 423, 445, 448, 449, 450, 454, 456, 457, 462, 479, 480, 481, 491, 492, 495, 503, 505, 507, 513, 515, 519, 520, 527, 529, 538, 539, 540, 554, 564], "uniti": 430, "unittest": [399, 400, 533, 535], "univers": 507, "universal": [401, 408, 418, 432, 442, 450, 479], "universiti": [452, 487], "unix": [400, 404, 405, 413, 445, 457, 460, 463, 464, 479, 507, 525, 535], "unknown": [386, 402, 413, 424, 428, 429, 445, 453, 466, 470, 479, 495, 498, 499, 503, 507, 520, 536, 544, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "unknownptr": 479, "unknownvalu": 479, "unless": [386, 388, 397, 400, 401, 404, 405, 407, 410, 418, 419, 423, 425, 427, 429, 432, 445, 446, 449, 452, 454, 459, 461, 462, 472, 479, 481, 485, 488, 491, 503, 505, 507, 509, 511, 516, 521, 522, 524, 530, 534, 535, 536, 539, 540, 555, 557, 565, 567, 576, 578], "unlik": [390, 393, 401, 402, 404, 446, 454, 461, 463, 466, 468, 473, 479, 488, 505, 507, 511, 519, 520, 522, 524, 530, 540, 548, 554, 557, 564, 567, 575, 578], "unlimit": 429, "unlink": [463, 507], "unload": [479, 540], "unlock": 491, "unmaintain": [452, 531], "unmanag": [479, 524], "unmask": 479, "unmatch": 434, "unmitig": 520, "unmodel": 429, "unmodifi": [384, 479, 524, 547], "unnam": [401, 404, 445, 479, 484, 505, 530], "unnamed_addr": [393, 456, 479], "unnecessari": [399, 402, 459, 465, 484, 505, 507, 520, 523, 524, 539, 548], "unnecessarili": [389, 540], "unneed": [431, 557, 567, 578], "unnorm": [384, 479], "uno": 479, "unoffici": [462, 510], "unop": [385, 556, 557, 558, 559, 566, 567, 568, 569, 577, 578], "unoptim": [410, 463, 519], "unord": [386, 400, 404, 405, 485, 521, 539], "unordered_set": 507, "unorm": [0, 1, 2, 3], "unpack": [448, 471, 545], "unpars": [409, 552, 562, 573], "unpatch": [472, 541], "unpleas": 520, "unpoison": 479, "unpredict": 520, "unprofit": [505, 520, 536], "unprotect": [399, 520], "unprototyp": 479, "unqualifi": [402, 519], "unreach": [425, 449, 450, 454, 458, 459, 461, 489, 505, 513, 554, 555, 556, 557, 559, 564, 565, 566, 567, 569, 575, 576, 577, 578], "unread": [390, 404, 509, 520], "unrecogn": [445, 530], "unrecogniz": 430, "unrecurs": [557, 558, 559, 567, 568, 569, 578], "unreferenc": [401, 479], "unregist": 540, "unrel": [404, 431, 437, 448, 452, 472, 507, 519, 520, 539], "unreli": [389, 481], "unreloc": 524, "unresolv": [409, 560, 570, 579], "unrespons": 509, "unreview": 452, "unrol": [446, 512], "unroll_and_jam": 536, "unrool": 446, "unsaf": [390, 410, 411, 479, 519, 522, 523, 536, 560, 570, 579], "unsat": 479, "unseen": 393, "unset": [400, 401, 497, 529, 530, 559, 569], "unsett": 540, "unshadow": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 577, 578], "unsign": [43, 44, 45, 130, 131, 228, 229, 230, 323, 324, 325, 383, 384, 385, 389, 393, 395, 402, 404, 410, 434, 445, 450, 461, 462, 465, 479, 482, 484, 489, 490, 502, 507, 513, 519, 520, 527, 538, 539, 542, 543, 544, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574], "unsignedcharact": 502, "unsimm": 402, "unsiz": 465, "unsound": 524, "unspecifi": [402, 420, 431, 479, 490, 524, 534, 543], "unstabl": [399, 424, 468, 479, 514], "unstructur": 543, "unsuccess": 491, "unsuit": [399, 533], "unsupport": [386, 390, 402, 409, 464, 465, 481, 514, 535, 539], "unsupportedfor": 465, "unsupportedif": 465, "unsur": [463, 516, 530], "untest": 514, "until": [386, 392, 393, 397, 402, 404, 406, 409, 429, 430, 445, 448, 449, 452, 454, 459, 463, 475, 479, 481, 483, 488, 491, 493, 505, 506, 507, 509, 513, 514, 516, 519, 520, 527, 529, 533, 535, 539, 540, 541, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "untrust": 452, "untrusted_data_from_cal": 520, "untrusted_offset_from_cal": 520, "untrusted_size_from_cal": 520, "untyp": 484, "unus": [42, 129, 205, 216, 218, 227, 322, 384, 385, 386, 402, 404, 425, 449, 478, 479, 480, 490, 492, 494, 495, 499, 502, 507, 517, 519, 524, 536, 543], "unused1": 495, "unused2": 495, "unused_pad": [384, 386], "unused_preserv": [384, 386], "unused_sext": 384, "unusu": [402, 404, 460, 461, 507, 518, 529, 560, 570, 579], "unvectoriz": 538, "unveil": [551, 572], "unvers": 536, "unwelcom": 403, "unwieldi": 541, "unwind": [400, 402, 432, 436, 437, 449, 454, 456, 459, 477, 479, 480, 505, 513, 539, 548], "unwindcursor": 454, "unwindregistersrestor": 454, "unwindregisterssav": 454, "unwis": [413, 479], "unwound": [479, 520], "unwrap": [491, 507, 546], "unzip": [463, 514], "uop": [424, 429], "up": [388, 389, 392, 393, 394, 396, 398, 400, 402, 403, 404, 406, 409, 411, 423, 424, 429, 432, 445, 446, 447, 448, 449, 450, 452, 454, 456, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 478, 479, 480, 481, 484, 486, 488, 489, 490, 492, 493, 495, 500, 502, 503, 505, 507, 509, 513, 514, 516, 517, 519, 520, 524, 527, 529, 531, 533, 534, 535, 536, 538, 539, 542, 545, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "upcast": 473, "upcom": [452, 487], "updat": [386, 387, 392, 399, 402, 405, 407, 413, 431, 445, 448, 449, 454, 455, 461, 463, 464, 473, 479, 482, 483, 489, 491, 499, 502, 505, 506, 507, 511, 516, 519, 520, 522, 524, 536, 540, 541, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 575, 576, 577, 578, 579], "updatepoint": [549, 550], "upenn": 391, "upgrad": [416, 452, 463, 509, 512, 519, 538, 545], "upheld": 524, "uphold": [479, 520], "upload": [463, 472, 506, 509, 520], "upon": [443, 452, 461, 479, 483, 491, 507, 508, 511, 519, 539], "upper": [99, 381, 384, 385, 404, 406, 430, 479, 507, 511, 539], "upper16": 456, "upsid": 452, "upstream": [448, 452, 453, 459, 463, 472, 509, 524], "upstream_branch": 509, "upward": [409, 479, 519], "uq": 479, "urem": [402, 455], "urgent": 452, "url": [452, 485, 506, 509, 521], "us": [386, 402, 403, 404, 405, 426, 445, 448, 450, 452, 465, 469, 474, 479, 488, 489, 490, 491, 503, 506, 507, 509, 510, 511, 513, 517, 519, 540, 542, 546, 547, 548, 551, 552, 553, 554, 556, 557, 558, 559, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 575, 577, 578], "usabl": [402, 410, 445, 507, 519, 539, 542], "usag": [386, 402, 404, 406, 413, 419, 423, 424, 428, 429, 431, 432, 433, 442, 445, 449, 450, 465, 468, 478, 479, 484, 489, 490, 491, 493, 494, 495, 502, 505, 507, 515, 523, 524, 527, 531, 533, 535, 540, 545, 551, 572], "usb": 468, "use": [0, 1, 2, 3, 7, 28, 29, 30, 36, 39, 40, 41, 42, 44, 45, 46, 52, 53, 54, 72, 84, 85, 99, 105, 120, 121, 122, 126, 128, 129, 132, 137, 157, 185, 189, 213, 214, 215, 221, 224, 225, 226, 227, 231, 237, 256, 282, 286, 307, 308, 309, 315, 319, 320, 321, 322, 324, 325, 326, 332, 333, 334, 353, 366, 367, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 398, 399, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 430, 431, 432, 433, 434, 435, 436, 437, 439, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458, 461, 465, 467, 468, 472, 473, 474, 477, 478, 480, 482, 483, 484, 485, 486, 487, 489, 490, 495, 497, 499, 500, 502, 503, 506, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 527, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 542, 543, 544, 545, 546, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 580], "use_": 507, "use_back": 507, "use_begin": [404, 507], "use_bind": [575, 576, 577, 578], "use_camlp4": [573, 574, 575, 576, 577, 578], "use_count": 481, "use_empti": 507, "use_end": 507, "use_iter": 507, "use_llvm": [574, 575, 576, 577, 578], "use_llvm_analysi": [574, 575, 576, 577, 578], "use_llvm_executionengin": [575, 576, 577, 578], "use_llvm_scalar_opt": [575, 576, 577, 578], "use_llvm_target": [575, 576, 577, 578], "use_s": 507, "use_value_profil": 481, "usedlib": 508, "useless": [392, 469, 519, 555, 560, 565, 570, 576, 579], "uselistord": 479, "uselistorder_bb": 479, "usenamedoperandt": 539, "user": [388, 389, 390, 394, 397, 400, 401, 402, 403, 404, 406, 409, 413, 415, 424, 429, 444, 445, 447, 448, 449, 450, 452, 454, 456, 461, 463, 464, 465, 467, 469, 470, 472, 479, 480, 482, 486, 487, 488, 489, 491, 503, 504, 506, 509, 512, 513, 515, 517, 519, 520, 521, 523, 524, 527, 529, 531, 535, 536, 538, 539, 540, 543, 546, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 579, 580], "user_sgpr": 386, "user_sgpr_count": 386, "userdefinederror": 507, "usernam": [452, 464, 509], "userspac": 454, "usescustominsert": 531, "usesmetadata": 461, "usr": [400, 445, 446, 453, 463, 466, 468, 470, 471, 490], "usual": [389, 390, 393, 397, 400, 402, 404, 405, 415, 429, 430, 443, 445, 446, 449, 452, 455, 456, 461, 462, 463, 466, 470, 473, 479, 480, 481, 482, 484, 485, 489, 491, 495, 500, 502, 506, 507, 509, 517, 518, 519, 521, 523, 529, 530, 533, 534, 539, 540, 546, 559, 560, 569, 570, 579], "ut": 479, "utf": [386, 456, 527], "util": [388, 389, 400, 408, 411, 413, 415, 429, 430, 432, 434, 445, 452, 453, 461, 464, 465, 469, 472, 478, 479, 507, 513, 514, 527, 531, 533, 538, 539, 545, 546, 548, 557, 558, 567, 568], "uuid": 423, "uuidcreat": 500, "uv": 479, "uvari": 400, "uwtabl": [393, 479, 519, 541], "uy": 479, "v0": [8, 106, 190, 287, 385, 386, 392, 479], "v1": [8, 106, 190, 287, 385, 386, 389, 404, 479, 520, 522, 535, 545], "v10": 446, "v110": 495, "v128": [479, 490], "v15": 479, "v16": 490, "v16f32": 479, "v16p0f32": 479, "v16p1f32": 479, "v1f64": 465, "v1size": 389, "v2": [385, 389, 404, 495, 507, 510, 535, 546, 547, 548, 549, 550], "v200": 386, "v252": 385, "v253": 385, "v254": 385, "v255": [384, 385], "v2f64": 479, "v2i32": 479, "v2i64": 479, "v2p1f64": 479, "v2s32": 465, "v2s64": 465, "v2size": 389, "v3": [72, 157, 256, 353, 535], "v31": 479, "v32": [385, 490], "v36": 384, "v3i32": 465, "v4": [384, 385, 386], "v40": 502, "v41": 502, "v4f32": [465, 479], "v4f64": 479, "v4i32": 479, "v4p0f64": 479, "v4p0f_i32f": 479, "v4p0p0f64": 479, "v4s32": 465, "v4t": 470, "v5": 386, "v50": [495, 502], "v6": [386, 470], "v60": 495, "v64": [479, 490], "v7": 470, "v70": [495, 502], "v8": [390, 447, 539], "v80": 502, "v8deprecatedinst": 539, "v8f64": 479, "v8i16": 539, "v8i32": 479, "v8p0f32": 479, "v8p0f64": 479, "v8p0f_i32f": 479, "v8p0i32": 479, "v8p0p0f32": 479, "v9": [447, 463, 539], "v_add3_u32": [0, 3], "v_add_co_ci_u32": 0, "v_add_co_ci_u32_dpp": 0, "v_add_co_ci_u32_e64": 0, "v_add_co_ci_u32_sdwa": 0, "v_add_co_u32": [0, 3], "v_add_co_u32_dpp": 3, "v_add_co_u32_e64": 3, "v_add_co_u32_sdwa": 3, "v_add_f16": [0, 2, 3, 385], "v_add_f16_dpp": [0, 2, 3], "v_add_f16_e64": [0, 2, 3], "v_add_f16_sdwa": [0, 2, 3], "v_add_f32": [0, 1, 2, 3, 385, 386], "v_add_f32_dpp": [0, 2, 3], "v_add_f32_e32": 386, "v_add_f32_e64": [0, 1, 2, 3], "v_add_f32_sdwa": [0, 2, 3], "v_add_f64": [0, 1, 2, 3], "v_add_i16": 3, "v_add_i32": [1, 3], "v_add_i32_e64": 1, "v_add_lshl_u32": [0, 3], "v_add_nc_i16": 0, "v_add_nc_i32": 0, "v_add_nc_u16": 0, "v_add_nc_u32": 0, "v_add_nc_u32_dpp": 0, "v_add_nc_u32_e64": 0, "v_add_nc_u32_sdwa": 0, "v_add_u16": [2, 3, 385], "v_add_u16_dpp": [2, 3], "v_add_u16_e64": [2, 3], "v_add_u16_sdwa": [2, 3], "v_add_u32": [2, 3, 385], "v_add_u32_dpp": [2, 3], "v_add_u32_e64": [2, 3], "v_add_u32_sdwa": [2, 3], "v_addc_co_u32": 3, "v_addc_co_u32_dpp": 3, "v_addc_co_u32_e64": 3, "v_addc_co_u32_sdwa": 3, "v_addc_u32": [1, 2, 386], "v_addc_u32_dpp": 2, "v_addc_u32_e64": [1, 2], "v_addc_u32_sdwa": 2, "v_alignbit_b32": [0, 1, 2, 3], "v_alignbyte_b32": [0, 1, 2, 3], "v_and_b32": [0, 1, 2, 3], "v_and_b32_dpp": [0, 2, 3], "v_and_b32_e64": [0, 1, 2, 3], "v_and_b32_sdwa": [0, 2, 3], "v_and_or_b32": [0, 3], "v_ashr_i32": 1, "v_ashr_i32_e64": 1, "v_ashr_i64": 1, "v_ashrrev_i16": [0, 2, 3], "v_ashrrev_i16_dpp": [2, 3], "v_ashrrev_i16_e64": [2, 3], "v_ashrrev_i16_sdwa": [2, 3], "v_ashrrev_i32": [0, 1, 2, 3], "v_ashrrev_i32_dpp": [0, 2, 3], "v_ashrrev_i32_e64": [0, 1, 2, 3], "v_ashrrev_i32_sdwa": [0, 2, 3], "v_ashrrev_i64": [0, 2, 3], "v_bcnt_u32_b32": [0, 1, 2, 3], "v_bcnt_u32_b32_e64": 1, "v_bfe_i32": [0, 1, 2, 3], "v_bfe_u32": [0, 1, 2, 3], "v_bfi_b32": [0, 1, 2, 3], "v_bfm_b32": [0, 1, 2, 3], "v_bfm_b32_e64": 1, "v_bfrev_b32": [0, 1, 2, 3], "v_bfrev_b32_dpp": [0, 2, 3], "v_bfrev_b32_e32": 386, "v_bfrev_b32_e64": [0, 1, 2, 3], "v_bfrev_b32_sdwa": [0, 2, 3], "v_ceil_f16": [0, 2, 3], "v_ceil_f16_dpp": [0, 2, 3], "v_ceil_f16_e64": [0, 2, 3], "v_ceil_f16_sdwa": [0, 2, 3], "v_ceil_f32": [0, 1, 2, 3], "v_ceil_f32_dpp": [0, 2, 3], "v_ceil_f32_e64": [0, 1, 2, 3], "v_ceil_f32_sdwa": [0, 2, 3], "v_ceil_f64": [0, 1, 2, 3, 385], "v_ceil_f64_e32": 385, "v_ceil_f64_e64": [0, 1, 2, 3], "v_clrexcp": [0, 1, 2, 3], "v_clrexcp_e64": [0, 1, 2, 3], "v_cmp": 384, "v_cmp_class_f16": [0, 2, 3], "v_cmp_class_f16_e64": [0, 2, 3], "v_cmp_class_f16_sdwa": [0, 2, 3], "v_cmp_class_f32": [0, 1, 2, 3], "v_cmp_class_f32_e64": [0, 1, 2, 3], "v_cmp_class_f32_sdwa": [0, 2, 3], "v_cmp_class_f64": [0, 1, 2, 3], "v_cmp_class_f64_e64": [0, 1, 2, 3], "v_cmp_eq_f16": [0, 2, 3], "v_cmp_eq_f16_e64": [0, 2, 3], "v_cmp_eq_f16_sdwa": [0, 2, 3], "v_cmp_eq_f32": [0, 1, 2, 3], "v_cmp_eq_f32_e64": [0, 1, 2, 3], "v_cmp_eq_f32_sdwa": [0, 2, 3], "v_cmp_eq_f64": [0, 1, 2, 3], "v_cmp_eq_f64_e64": [0, 1, 2, 3], "v_cmp_eq_i16": [0, 2, 3], "v_cmp_eq_i16_e64": [0, 2, 3], "v_cmp_eq_i16_sdwa": [0, 2, 3], "v_cmp_eq_i32": [0, 1, 2, 3], "v_cmp_eq_i32_e64": [0, 1, 2, 3], "v_cmp_eq_i32_sdwa": [0, 2, 3], "v_cmp_eq_i64": [0, 1, 2, 3], "v_cmp_eq_i64_e64": [0, 1, 2, 3], "v_cmp_eq_u16": [0, 2, 3], "v_cmp_eq_u16_e64": [0, 2, 3], "v_cmp_eq_u16_sdwa": [0, 2, 3], "v_cmp_eq_u32": [0, 1, 2, 3], "v_cmp_eq_u32_e64": [0, 1, 2, 3], "v_cmp_eq_u32_sdwa": [0, 2, 3], "v_cmp_eq_u64": [0, 1, 2, 3], "v_cmp_eq_u64_e64": [0, 1, 2, 3], "v_cmp_f_f16": [0, 2, 3], "v_cmp_f_f16_e64": [0, 2, 3], "v_cmp_f_f16_sdwa": [0, 2, 3], "v_cmp_f_f32": [0, 1, 2, 3], "v_cmp_f_f32_e64": [0, 1, 2, 3], "v_cmp_f_f32_sdwa": [0, 2, 3], "v_cmp_f_f64": [0, 1, 2, 3], "v_cmp_f_f64_e64": [0, 1, 2, 3], "v_cmp_f_i16": [2, 3], "v_cmp_f_i16_e64": [2, 3], "v_cmp_f_i16_sdwa": [2, 3], "v_cmp_f_i32": [0, 1, 2, 3], "v_cmp_f_i32_e64": [0, 1, 2, 3], "v_cmp_f_i32_sdwa": [0, 2, 3], "v_cmp_f_i64": [0, 1, 2, 3], "v_cmp_f_i64_e64": [0, 1, 2, 3], "v_cmp_f_u16": [2, 3], "v_cmp_f_u16_e64": [2, 3], "v_cmp_f_u16_sdwa": [2, 3], "v_cmp_f_u32": [0, 1, 2, 3], "v_cmp_f_u32_e64": [0, 1, 2, 3], "v_cmp_f_u32_sdwa": [0, 2, 3], "v_cmp_f_u64": [0, 1, 2, 3], "v_cmp_f_u64_e64": [0, 1, 2, 3], "v_cmp_ge_f16": [0, 2, 3], "v_cmp_ge_f16_e64": [0, 2, 3], "v_cmp_ge_f16_sdwa": [0, 2, 3], "v_cmp_ge_f32": [0, 1, 2, 3], "v_cmp_ge_f32_e64": [0, 1, 2, 3], "v_cmp_ge_f32_sdwa": [0, 2, 3], "v_cmp_ge_f64": [0, 1, 2, 3], "v_cmp_ge_f64_e64": [0, 1, 2, 3], "v_cmp_ge_i16": [0, 2, 3], "v_cmp_ge_i16_e64": [0, 2, 3], "v_cmp_ge_i16_sdwa": [0, 2, 3], "v_cmp_ge_i32": [0, 1, 2, 3], "v_cmp_ge_i32_e64": [0, 1, 2, 3], "v_cmp_ge_i32_sdwa": [0, 2, 3], "v_cmp_ge_i64": [0, 1, 2, 3], "v_cmp_ge_i64_e64": [0, 1, 2, 3], "v_cmp_ge_u16": [0, 2, 3], "v_cmp_ge_u16_e64": [0, 2, 3], "v_cmp_ge_u16_sdwa": [0, 2, 3], "v_cmp_ge_u32": [0, 1, 2, 3], "v_cmp_ge_u32_e64": [0, 1, 2, 3], "v_cmp_ge_u32_sdwa": [0, 2, 3], "v_cmp_ge_u64": [0, 1, 2, 3], "v_cmp_ge_u64_e64": [0, 1, 2, 3], "v_cmp_gt_f16": [0, 2, 3], "v_cmp_gt_f16_e64": [0, 2, 3], "v_cmp_gt_f16_sdwa": [0, 2, 3], "v_cmp_gt_f32": [0, 1, 2, 3], "v_cmp_gt_f32_e64": [0, 1, 2, 3], "v_cmp_gt_f32_sdwa": [0, 2, 3], "v_cmp_gt_f64": [0, 1, 2, 3], "v_cmp_gt_f64_e64": [0, 1, 2, 3], "v_cmp_gt_i16": [0, 2, 3], "v_cmp_gt_i16_e64": [0, 2, 3], "v_cmp_gt_i16_sdwa": [0, 2, 3], "v_cmp_gt_i32": [0, 1, 2, 3], "v_cmp_gt_i32_e64": [0, 1, 2, 3], "v_cmp_gt_i32_sdwa": [0, 2, 3], "v_cmp_gt_i64": [0, 1, 2, 3], "v_cmp_gt_i64_e64": [0, 1, 2, 3], "v_cmp_gt_u16": [0, 2, 3], "v_cmp_gt_u16_e64": [0, 2, 3], "v_cmp_gt_u16_sdwa": [0, 2, 3], "v_cmp_gt_u32": [0, 1, 2, 3], "v_cmp_gt_u32_e64": [0, 1, 2, 3], "v_cmp_gt_u32_sdwa": [0, 2, 3], "v_cmp_gt_u64": [0, 1, 2, 3], "v_cmp_gt_u64_e64": [0, 1, 2, 3], "v_cmp_le_f16": [0, 2, 3], "v_cmp_le_f16_e64": [0, 2, 3], "v_cmp_le_f16_sdwa": [0, 2, 3], "v_cmp_le_f32": [0, 1, 2, 3], "v_cmp_le_f32_e64": [0, 1, 2, 3], "v_cmp_le_f32_sdwa": [0, 2, 3], "v_cmp_le_f64": [0, 1, 2, 3], "v_cmp_le_f64_e64": [0, 1, 2, 3], "v_cmp_le_i16": [0, 2, 3], "v_cmp_le_i16_e64": [0, 2, 3], "v_cmp_le_i16_sdwa": [0, 2, 3], "v_cmp_le_i32": [0, 1, 2, 3], "v_cmp_le_i32_e64": [0, 1, 2, 3], "v_cmp_le_i32_sdwa": [0, 2, 3], "v_cmp_le_i64": [0, 1, 2, 3], "v_cmp_le_i64_e64": [0, 1, 2, 3], "v_cmp_le_u16": [0, 2, 3], "v_cmp_le_u16_e64": [0, 2, 3], "v_cmp_le_u16_sdwa": [0, 2, 3], "v_cmp_le_u32": [0, 1, 2, 3], "v_cmp_le_u32_e64": [0, 1, 2, 3], "v_cmp_le_u32_sdwa": [0, 2, 3], "v_cmp_le_u64": [0, 1, 2, 3], "v_cmp_le_u64_e64": [0, 1, 2, 3], "v_cmp_lg_f16": [0, 2, 3], "v_cmp_lg_f16_e64": [0, 2, 3], "v_cmp_lg_f16_sdwa": [0, 2, 3], "v_cmp_lg_f32": [0, 1, 2, 3], "v_cmp_lg_f32_e64": [0, 1, 2, 3], "v_cmp_lg_f32_sdwa": [0, 2, 3], "v_cmp_lg_f64": [0, 1, 2, 3], "v_cmp_lg_f64_e64": [0, 1, 2, 3], "v_cmp_lt_f16": [0, 2, 3], "v_cmp_lt_f16_e64": [0, 2, 3], "v_cmp_lt_f16_sdwa": [0, 2, 3], "v_cmp_lt_f32": [0, 1, 2, 3], "v_cmp_lt_f32_e64": [0, 1, 2, 3], "v_cmp_lt_f32_sdwa": [0, 2, 3], "v_cmp_lt_f64": [0, 1, 2, 3], "v_cmp_lt_f64_e64": [0, 1, 2, 3], "v_cmp_lt_i16": [0, 2, 3], "v_cmp_lt_i16_e64": [0, 2, 3], "v_cmp_lt_i16_sdwa": [0, 2, 3], "v_cmp_lt_i32": [0, 1, 2, 3], "v_cmp_lt_i32_e64": [0, 1, 2, 3], "v_cmp_lt_i32_sdwa": [0, 2, 3], "v_cmp_lt_i64": [0, 1, 2, 3], "v_cmp_lt_i64_e64": [0, 1, 2, 3], "v_cmp_lt_u16": [0, 2, 3], "v_cmp_lt_u16_e64": [0, 2, 3], "v_cmp_lt_u16_sdwa": [0, 2, 3], "v_cmp_lt_u32": [0, 1, 2, 3], "v_cmp_lt_u32_e64": [0, 1, 2, 3], "v_cmp_lt_u32_sdwa": [0, 2, 3], "v_cmp_lt_u64": [0, 1, 2, 3], "v_cmp_lt_u64_e64": [0, 1, 2, 3], "v_cmp_ne_i16": [0, 2, 3], "v_cmp_ne_i16_e64": [0, 2, 3], "v_cmp_ne_i16_sdwa": [0, 2, 3], "v_cmp_ne_i32": [0, 1, 2, 3], "v_cmp_ne_i32_e64": [0, 1, 2, 3], "v_cmp_ne_i32_sdwa": [0, 2, 3], "v_cmp_ne_i64": [0, 1, 2, 3], "v_cmp_ne_i64_e64": [0, 1, 2, 3], "v_cmp_ne_u16": [0, 2, 3], "v_cmp_ne_u16_e64": [0, 2, 3], "v_cmp_ne_u16_sdwa": [0, 2, 3], "v_cmp_ne_u32": [0, 1, 2, 3], "v_cmp_ne_u32_e64": [0, 1, 2, 3], "v_cmp_ne_u32_sdwa": [0, 2, 3], "v_cmp_ne_u64": [0, 1, 2, 3], "v_cmp_ne_u64_e64": [0, 1, 2, 3], "v_cmp_neq_f16": [0, 2, 3], "v_cmp_neq_f16_e64": [0, 2, 3], "v_cmp_neq_f16_sdwa": [0, 2, 3], "v_cmp_neq_f32": [0, 1, 2, 3], "v_cmp_neq_f32_e64": [0, 1, 2, 3], "v_cmp_neq_f32_sdwa": [0, 2, 3], "v_cmp_neq_f64": [0, 1, 2, 3], "v_cmp_neq_f64_e64": [0, 1, 2, 3], "v_cmp_nge_f16": [0, 2, 3], "v_cmp_nge_f16_e64": [0, 2, 3], "v_cmp_nge_f16_sdwa": [0, 2, 3], "v_cmp_nge_f32": [0, 1, 2, 3], "v_cmp_nge_f32_e64": [0, 1, 2, 3], "v_cmp_nge_f32_sdwa": [0, 2, 3], "v_cmp_nge_f64": [0, 1, 2, 3], "v_cmp_nge_f64_e64": [0, 1, 2, 3], "v_cmp_ngt_f16": [0, 2, 3], "v_cmp_ngt_f16_e64": [0, 2, 3], "v_cmp_ngt_f16_sdwa": [0, 2, 3], "v_cmp_ngt_f32": [0, 1, 2, 3], "v_cmp_ngt_f32_e64": [0, 1, 2, 3], "v_cmp_ngt_f32_sdwa": [0, 2, 3], "v_cmp_ngt_f64": [0, 1, 2, 3], "v_cmp_ngt_f64_e64": [0, 1, 2, 3], "v_cmp_nle_f16": [0, 2, 3], "v_cmp_nle_f16_e64": [0, 2, 3], "v_cmp_nle_f16_sdwa": [0, 2, 3], "v_cmp_nle_f32": [0, 1, 2, 3], "v_cmp_nle_f32_e64": [0, 1, 2, 3], "v_cmp_nle_f32_sdwa": [0, 2, 3], "v_cmp_nle_f64": [0, 1, 2, 3], "v_cmp_nle_f64_e64": [0, 1, 2, 3], "v_cmp_nlg_f16": [0, 2, 3], "v_cmp_nlg_f16_e64": [0, 2, 3], "v_cmp_nlg_f16_sdwa": [0, 2, 3], "v_cmp_nlg_f32": [0, 1, 2, 3], "v_cmp_nlg_f32_e64": [0, 1, 2, 3], "v_cmp_nlg_f32_sdwa": [0, 2, 3], "v_cmp_nlg_f64": [0, 1, 2, 3], "v_cmp_nlg_f64_e64": [0, 1, 2, 3], "v_cmp_nlt_f16": [0, 2, 3], "v_cmp_nlt_f16_e64": [0, 2, 3], "v_cmp_nlt_f16_sdwa": [0, 2, 3], "v_cmp_nlt_f32": [0, 1, 2, 3], "v_cmp_nlt_f32_e64": [0, 1, 2, 3], "v_cmp_nlt_f32_sdwa": [0, 2, 3], "v_cmp_nlt_f64": [0, 1, 2, 3], "v_cmp_nlt_f64_e64": [0, 1, 2, 3], "v_cmp_o_f16": [0, 2, 3], "v_cmp_o_f16_e64": [0, 2, 3], "v_cmp_o_f16_sdwa": [0, 2, 3], "v_cmp_o_f32": [0, 1, 2, 3], "v_cmp_o_f32_e64": [0, 1, 2, 3], "v_cmp_o_f32_sdwa": [0, 2, 3], "v_cmp_o_f64": [0, 1, 2, 3], "v_cmp_o_f64_e64": [0, 1, 2, 3], "v_cmp_t_i16": [2, 3], "v_cmp_t_i16_e64": [2, 3], "v_cmp_t_i16_sdwa": [2, 3], "v_cmp_t_i32": [0, 1, 2, 3], "v_cmp_t_i32_e64": [0, 1, 2, 3], "v_cmp_t_i32_sdwa": [0, 2, 3], "v_cmp_t_i64": [0, 1, 2, 3], "v_cmp_t_i64_e64": [0, 1, 2, 3], "v_cmp_t_u16": [2, 3], "v_cmp_t_u16_e64": [2, 3], "v_cmp_t_u16_sdwa": [2, 3], "v_cmp_t_u32": [0, 1, 2, 3], "v_cmp_t_u32_e64": [0, 1, 2, 3], "v_cmp_t_u32_sdwa": [0, 2, 3], "v_cmp_t_u64": [0, 1, 2, 3], "v_cmp_t_u64_e64": [0, 1, 2, 3], "v_cmp_tru_f16": [0, 2, 3], "v_cmp_tru_f16_e64": [0, 2, 3], "v_cmp_tru_f16_sdwa": [0, 2, 3], "v_cmp_tru_f32": [0, 1, 2, 3], "v_cmp_tru_f32_e64": [0, 1, 2, 3], "v_cmp_tru_f32_sdwa": [0, 2, 3], "v_cmp_tru_f64": [0, 1, 2, 3], "v_cmp_tru_f64_e64": [0, 1, 2, 3], "v_cmp_u_f16": [0, 2, 3], "v_cmp_u_f16_e64": [0, 2, 3], "v_cmp_u_f16_sdwa": [0, 2, 3], "v_cmp_u_f32": [0, 1, 2, 3], "v_cmp_u_f32_e64": [0, 1, 2, 3], "v_cmp_u_f32_sdwa": [0, 2, 3], "v_cmp_u_f64": [0, 1, 2, 3], "v_cmp_u_f64_e64": [0, 1, 2, 3], "v_cmps_eq_f32": 1, "v_cmps_eq_f32_e64": 1, "v_cmps_eq_f64": 1, "v_cmps_eq_f64_e64": 1, "v_cmps_f_f32": 1, "v_cmps_f_f32_e64": 1, "v_cmps_f_f64": 1, "v_cmps_f_f64_e64": 1, "v_cmps_ge_f32": 1, "v_cmps_ge_f32_e64": 1, "v_cmps_ge_f64": 1, "v_cmps_ge_f64_e64": 1, "v_cmps_gt_f32": 1, "v_cmps_gt_f32_e64": 1, "v_cmps_gt_f64": 1, "v_cmps_gt_f64_e64": 1, "v_cmps_le_f32": 1, "v_cmps_le_f32_e64": 1, "v_cmps_le_f64": 1, "v_cmps_le_f64_e64": 1, "v_cmps_lg_f32": 1, "v_cmps_lg_f32_e64": 1, "v_cmps_lg_f64": 1, "v_cmps_lg_f64_e64": 1, "v_cmps_lt_f32": 1, "v_cmps_lt_f32_e64": 1, "v_cmps_lt_f64": 1, "v_cmps_lt_f64_e64": 1, "v_cmps_neq_f32": 1, "v_cmps_neq_f32_e64": 1, "v_cmps_neq_f64": 1, "v_cmps_neq_f64_e64": 1, "v_cmps_nge_f32": 1, "v_cmps_nge_f32_e64": 1, "v_cmps_nge_f64": 1, "v_cmps_nge_f64_e64": 1, "v_cmps_ngt_f32": 1, "v_cmps_ngt_f32_e64": 1, "v_cmps_ngt_f64": 1, "v_cmps_ngt_f64_e64": 1, "v_cmps_nle_f32": 1, "v_cmps_nle_f32_e64": 1, "v_cmps_nle_f64": 1, "v_cmps_nle_f64_e64": 1, "v_cmps_nlg_f32": 1, "v_cmps_nlg_f32_e64": 1, "v_cmps_nlg_f64": 1, "v_cmps_nlg_f64_e64": 1, "v_cmps_nlt_f32": 1, "v_cmps_nlt_f32_e64": 1, "v_cmps_nlt_f64": 1, "v_cmps_nlt_f64_e64": 1, "v_cmps_o_f32": 1, "v_cmps_o_f32_e64": 1, "v_cmps_o_f64": 1, "v_cmps_o_f64_e64": 1, "v_cmps_tru_f32": 1, "v_cmps_tru_f32_e64": 1, "v_cmps_tru_f64": 1, "v_cmps_tru_f64_e64": 1, "v_cmps_u_f32": 1, "v_cmps_u_f32_e64": 1, "v_cmps_u_f64": 1, "v_cmps_u_f64_e64": 1, "v_cmpsx_eq_f32": 1, "v_cmpsx_eq_f32_e64": 1, "v_cmpsx_eq_f64": 1, "v_cmpsx_eq_f64_e64": 1, "v_cmpsx_f_f32": 1, "v_cmpsx_f_f32_e64": 1, "v_cmpsx_f_f64": 1, "v_cmpsx_f_f64_e64": 1, "v_cmpsx_ge_f32": 1, "v_cmpsx_ge_f32_e64": 1, "v_cmpsx_ge_f64": 1, "v_cmpsx_ge_f64_e64": 1, "v_cmpsx_gt_f32": 1, "v_cmpsx_gt_f32_e64": 1, "v_cmpsx_gt_f64": 1, "v_cmpsx_gt_f64_e64": 1, "v_cmpsx_le_f32": 1, "v_cmpsx_le_f32_e64": 1, "v_cmpsx_le_f64": 1, "v_cmpsx_le_f64_e64": 1, "v_cmpsx_lg_f32": 1, "v_cmpsx_lg_f32_e64": 1, "v_cmpsx_lg_f64": 1, "v_cmpsx_lg_f64_e64": 1, "v_cmpsx_lt_f32": 1, "v_cmpsx_lt_f32_e64": 1, "v_cmpsx_lt_f64": 1, "v_cmpsx_lt_f64_e64": 1, "v_cmpsx_neq_f32": 1, "v_cmpsx_neq_f32_e64": 1, "v_cmpsx_neq_f64": 1, "v_cmpsx_neq_f64_e64": 1, "v_cmpsx_nge_f32": 1, "v_cmpsx_nge_f32_e64": 1, "v_cmpsx_nge_f64": 1, "v_cmpsx_nge_f64_e64": 1, "v_cmpsx_ngt_f32": 1, "v_cmpsx_ngt_f32_e64": 1, "v_cmpsx_ngt_f64": 1, "v_cmpsx_ngt_f64_e64": 1, "v_cmpsx_nle_f32": 1, "v_cmpsx_nle_f32_e64": 1, "v_cmpsx_nle_f64": 1, "v_cmpsx_nle_f64_e64": 1, "v_cmpsx_nlg_f32": 1, "v_cmpsx_nlg_f32_e64": 1, "v_cmpsx_nlg_f64": 1, "v_cmpsx_nlg_f64_e64": 1, "v_cmpsx_nlt_f32": 1, "v_cmpsx_nlt_f32_e64": 1, "v_cmpsx_nlt_f64": 1, "v_cmpsx_nlt_f64_e64": 1, "v_cmpsx_o_f32": 1, "v_cmpsx_o_f32_e64": 1, "v_cmpsx_o_f64": 1, "v_cmpsx_o_f64_e64": 1, "v_cmpsx_tru_f32": 1, "v_cmpsx_tru_f32_e64": 1, "v_cmpsx_tru_f64": 1, "v_cmpsx_tru_f64_e64": 1, "v_cmpsx_u_f32": 1, "v_cmpsx_u_f32_e64": 1, "v_cmpsx_u_f64": 1, "v_cmpsx_u_f64_e64": 1, "v_cmpx_class_f16": [0, 2, 3], "v_cmpx_class_f16_e64": [0, 2, 3], "v_cmpx_class_f16_sdwa": [0, 2, 3], "v_cmpx_class_f32": [0, 1, 2, 3], "v_cmpx_class_f32_e64": [0, 1, 2, 3], "v_cmpx_class_f32_sdwa": [0, 2, 3], "v_cmpx_class_f64": [0, 1, 2, 3], "v_cmpx_class_f64_e64": [0, 1, 2, 3], "v_cmpx_eq_f16": [0, 2, 3], "v_cmpx_eq_f16_e64": [0, 2, 3], "v_cmpx_eq_f16_sdwa": [0, 2, 3], "v_cmpx_eq_f32": [0, 1, 2, 3], "v_cmpx_eq_f32_e64": [0, 1, 2, 3], "v_cmpx_eq_f32_sdwa": [0, 2, 3], "v_cmpx_eq_f64": [0, 1, 2, 3], "v_cmpx_eq_f64_e64": [0, 1, 2, 3], "v_cmpx_eq_i16": [0, 2, 3], "v_cmpx_eq_i16_e64": [0, 2, 3], "v_cmpx_eq_i16_sdwa": [0, 2, 3], "v_cmpx_eq_i32": [0, 1, 2, 3], "v_cmpx_eq_i32_e64": [0, 1, 2, 3], "v_cmpx_eq_i32_sdwa": [0, 2, 3], "v_cmpx_eq_i64": [0, 1, 2, 3], "v_cmpx_eq_i64_e64": [0, 1, 2, 3], "v_cmpx_eq_u16": [0, 2, 3], "v_cmpx_eq_u16_e64": [0, 2, 3], "v_cmpx_eq_u16_sdwa": [0, 2, 3], "v_cmpx_eq_u32": [0, 1, 2, 3], "v_cmpx_eq_u32_e64": [0, 1, 2, 3], "v_cmpx_eq_u32_sdwa": [0, 2, 3], "v_cmpx_eq_u64": [0, 1, 2, 3], "v_cmpx_eq_u64_e64": [0, 1, 2, 3], "v_cmpx_f_f16": [0, 2, 3], "v_cmpx_f_f16_e64": [0, 2, 3], "v_cmpx_f_f16_sdwa": [0, 2, 3], "v_cmpx_f_f32": [0, 1, 2, 3], "v_cmpx_f_f32_e64": [0, 1, 2, 3], "v_cmpx_f_f32_sdwa": [0, 2, 3], "v_cmpx_f_f64": [0, 1, 2, 3], "v_cmpx_f_f64_e64": [0, 1, 2, 3], "v_cmpx_f_i16": [2, 3], "v_cmpx_f_i16_e64": [2, 3], "v_cmpx_f_i16_sdwa": [2, 3], "v_cmpx_f_i32": [0, 1, 2, 3], "v_cmpx_f_i32_e64": [0, 1, 2, 3], "v_cmpx_f_i32_sdwa": [0, 2, 3], "v_cmpx_f_i64": [0, 1, 2, 3], "v_cmpx_f_i64_e64": [0, 1, 2, 3], "v_cmpx_f_u16": [2, 3], "v_cmpx_f_u16_e64": [2, 3], "v_cmpx_f_u16_sdwa": [2, 3], "v_cmpx_f_u32": [0, 1, 2, 3], "v_cmpx_f_u32_e64": [0, 1, 2, 3], "v_cmpx_f_u32_sdwa": [0, 2, 3], "v_cmpx_f_u64": [0, 1, 2, 3], "v_cmpx_f_u64_e64": [0, 1, 2, 3], "v_cmpx_ge_f16": [0, 2, 3], "v_cmpx_ge_f16_e64": [0, 2, 3], "v_cmpx_ge_f16_sdwa": [0, 2, 3], "v_cmpx_ge_f32": [0, 1, 2, 3], "v_cmpx_ge_f32_e64": [0, 1, 2, 3], "v_cmpx_ge_f32_sdwa": [0, 2, 3], "v_cmpx_ge_f64": [0, 1, 2, 3], "v_cmpx_ge_f64_e64": [0, 1, 2, 3], "v_cmpx_ge_i16": [0, 2, 3], "v_cmpx_ge_i16_e64": [0, 2, 3], "v_cmpx_ge_i16_sdwa": [0, 2, 3], "v_cmpx_ge_i32": [0, 1, 2, 3], "v_cmpx_ge_i32_e64": [0, 1, 2, 3], "v_cmpx_ge_i32_sdwa": [0, 2, 3], "v_cmpx_ge_i64": [0, 1, 2, 3], "v_cmpx_ge_i64_e64": [0, 1, 2, 3], "v_cmpx_ge_u16": [0, 2, 3], "v_cmpx_ge_u16_e64": [0, 2, 3], "v_cmpx_ge_u16_sdwa": [0, 2, 3], "v_cmpx_ge_u32": [0, 1, 2, 3], "v_cmpx_ge_u32_e64": [0, 1, 2, 3], "v_cmpx_ge_u32_sdwa": [0, 2, 3], "v_cmpx_ge_u64": [0, 1, 2, 3], "v_cmpx_ge_u64_e64": [0, 1, 2, 3], "v_cmpx_gt_f16": [0, 2, 3], "v_cmpx_gt_f16_e64": [0, 2, 3], "v_cmpx_gt_f16_sdwa": [0, 2, 3], "v_cmpx_gt_f32": [0, 1, 2, 3], "v_cmpx_gt_f32_e64": [0, 1, 2, 3], "v_cmpx_gt_f32_sdwa": [0, 2, 3], "v_cmpx_gt_f64": [0, 1, 2, 3], "v_cmpx_gt_f64_e64": [0, 1, 2, 3], "v_cmpx_gt_i16": [0, 2, 3], "v_cmpx_gt_i16_e64": [0, 2, 3], "v_cmpx_gt_i16_sdwa": [0, 2, 3], "v_cmpx_gt_i32": [0, 1, 2, 3], "v_cmpx_gt_i32_e64": [0, 1, 2, 3], "v_cmpx_gt_i32_sdwa": [0, 2, 3], "v_cmpx_gt_i64": [0, 1, 2, 3], "v_cmpx_gt_i64_e64": [0, 1, 2, 3], "v_cmpx_gt_u16": [0, 2, 3], "v_cmpx_gt_u16_e64": [0, 2, 3], "v_cmpx_gt_u16_sdwa": [0, 2, 3], "v_cmpx_gt_u32": [0, 1, 2, 3], "v_cmpx_gt_u32_e64": [0, 1, 2, 3], "v_cmpx_gt_u32_sdwa": [0, 2, 3], "v_cmpx_gt_u64": [0, 1, 2, 3], "v_cmpx_gt_u64_e64": [0, 1, 2, 3], "v_cmpx_le_f16": [0, 2, 3], "v_cmpx_le_f16_e64": [0, 2, 3], "v_cmpx_le_f16_sdwa": [0, 2, 3], "v_cmpx_le_f32": [0, 1, 2, 3], "v_cmpx_le_f32_e64": [0, 1, 2, 3], "v_cmpx_le_f32_sdwa": [0, 2, 3], "v_cmpx_le_f64": [0, 1, 2, 3], "v_cmpx_le_f64_e64": [0, 1, 2, 3], "v_cmpx_le_i16": [0, 2, 3], "v_cmpx_le_i16_e64": [0, 2, 3], "v_cmpx_le_i16_sdwa": [0, 2, 3], "v_cmpx_le_i32": [0, 1, 2, 3], "v_cmpx_le_i32_e64": [0, 1, 2, 3], "v_cmpx_le_i32_sdwa": [0, 2, 3], "v_cmpx_le_i64": [0, 1, 2, 3], "v_cmpx_le_i64_e64": [0, 1, 2, 3], "v_cmpx_le_u16": [0, 2, 3], "v_cmpx_le_u16_e64": [0, 2, 3], "v_cmpx_le_u16_sdwa": [0, 2, 3], "v_cmpx_le_u32": [0, 1, 2, 3, 386], "v_cmpx_le_u32_e64": [0, 1, 2, 3], "v_cmpx_le_u32_sdwa": [0, 2, 3], "v_cmpx_le_u64": [0, 1, 2, 3], "v_cmpx_le_u64_e64": [0, 1, 2, 3], "v_cmpx_lg_f16": [0, 2, 3], "v_cmpx_lg_f16_e64": [0, 2, 3], "v_cmpx_lg_f16_sdwa": [0, 2, 3], "v_cmpx_lg_f32": [0, 1, 2, 3], "v_cmpx_lg_f32_e64": [0, 1, 2, 3], "v_cmpx_lg_f32_sdwa": [0, 2, 3], "v_cmpx_lg_f64": [0, 1, 2, 3], "v_cmpx_lg_f64_e64": [0, 1, 2, 3], "v_cmpx_lt_f16": [0, 2, 3], "v_cmpx_lt_f16_e64": [0, 2, 3], "v_cmpx_lt_f16_sdwa": [0, 2, 3], "v_cmpx_lt_f32": [0, 1, 2, 3], "v_cmpx_lt_f32_e64": [0, 1, 2, 3], "v_cmpx_lt_f32_sdwa": [0, 2, 3], "v_cmpx_lt_f64": [0, 1, 2, 3], "v_cmpx_lt_f64_e64": [0, 1, 2, 3], "v_cmpx_lt_i16": [0, 2, 3], "v_cmpx_lt_i16_e64": [0, 2, 3], "v_cmpx_lt_i16_sdwa": [0, 2, 3], "v_cmpx_lt_i32": [0, 1, 2, 3], "v_cmpx_lt_i32_e64": [0, 1, 2, 3], "v_cmpx_lt_i32_sdwa": [0, 2, 3], "v_cmpx_lt_i64": [0, 1, 2, 3], "v_cmpx_lt_i64_e64": [0, 1, 2, 3], "v_cmpx_lt_u16": [0, 2, 3], "v_cmpx_lt_u16_e64": [0, 2, 3], "v_cmpx_lt_u16_sdwa": [0, 2, 3], "v_cmpx_lt_u32": [0, 1, 2, 3], "v_cmpx_lt_u32_e64": [0, 1, 2, 3], "v_cmpx_lt_u32_sdwa": [0, 2, 3], "v_cmpx_lt_u64": [0, 1, 2, 3], "v_cmpx_lt_u64_e64": [0, 1, 2, 3], "v_cmpx_ne_i16": [0, 2, 3], "v_cmpx_ne_i16_e64": [0, 2, 3], "v_cmpx_ne_i16_sdwa": [0, 2, 3], "v_cmpx_ne_i32": [0, 1, 2, 3], "v_cmpx_ne_i32_e64": [0, 1, 2, 3], "v_cmpx_ne_i32_sdwa": [0, 2, 3], "v_cmpx_ne_i64": [0, 1, 2, 3], "v_cmpx_ne_i64_e64": [0, 1, 2, 3], "v_cmpx_ne_u16": [0, 2, 3], "v_cmpx_ne_u16_e64": [0, 2, 3], "v_cmpx_ne_u16_sdwa": [0, 2, 3], "v_cmpx_ne_u32": [0, 1, 2, 3], "v_cmpx_ne_u32_e64": [0, 1, 2, 3], "v_cmpx_ne_u32_sdwa": [0, 2, 3], "v_cmpx_ne_u64": [0, 1, 2, 3], "v_cmpx_ne_u64_e64": [0, 1, 2, 3], "v_cmpx_neq_f16": [0, 2, 3], "v_cmpx_neq_f16_e64": [0, 2, 3], "v_cmpx_neq_f16_sdwa": [0, 2, 3], "v_cmpx_neq_f32": [0, 1, 2, 3], "v_cmpx_neq_f32_e64": [0, 1, 2, 3], "v_cmpx_neq_f32_sdwa": [0, 2, 3], "v_cmpx_neq_f64": [0, 1, 2, 3], "v_cmpx_neq_f64_e64": [0, 1, 2, 3], "v_cmpx_nge_f16": [0, 2, 3], "v_cmpx_nge_f16_e64": [0, 2, 3], "v_cmpx_nge_f16_sdwa": [0, 2, 3], "v_cmpx_nge_f32": [0, 1, 2, 3], "v_cmpx_nge_f32_e64": [0, 1, 2, 3], "v_cmpx_nge_f32_sdwa": [0, 2, 3], "v_cmpx_nge_f64": [0, 1, 2, 3], "v_cmpx_nge_f64_e64": [0, 1, 2, 3], "v_cmpx_ngt_f16": [0, 2, 3], "v_cmpx_ngt_f16_e64": [0, 2, 3], "v_cmpx_ngt_f16_sdwa": [0, 2, 3], "v_cmpx_ngt_f32": [0, 1, 2, 3], "v_cmpx_ngt_f32_e64": [0, 1, 2, 3], "v_cmpx_ngt_f32_sdwa": [0, 2, 3], "v_cmpx_ngt_f64": [0, 1, 2, 3], "v_cmpx_ngt_f64_e64": [0, 1, 2, 3], "v_cmpx_nle_f16": [0, 2, 3], "v_cmpx_nle_f16_e64": [0, 2, 3], "v_cmpx_nle_f16_sdwa": [0, 2, 3], "v_cmpx_nle_f32": [0, 1, 2, 3], "v_cmpx_nle_f32_e64": [0, 1, 2, 3], "v_cmpx_nle_f32_sdwa": [0, 2, 3], "v_cmpx_nle_f64": [0, 1, 2, 3], "v_cmpx_nle_f64_e64": [0, 1, 2, 3], "v_cmpx_nlg_f16": [0, 2, 3], "v_cmpx_nlg_f16_e64": [0, 2, 3], "v_cmpx_nlg_f16_sdwa": [0, 2, 3], "v_cmpx_nlg_f32": [0, 1, 2, 3], "v_cmpx_nlg_f32_e64": [0, 1, 2, 3], "v_cmpx_nlg_f32_sdwa": [0, 2, 3], "v_cmpx_nlg_f64": [0, 1, 2, 3], "v_cmpx_nlg_f64_e64": [0, 1, 2, 3], "v_cmpx_nlt_f16": [0, 2, 3], "v_cmpx_nlt_f16_e64": [0, 2, 3], "v_cmpx_nlt_f16_sdwa": [0, 2, 3], "v_cmpx_nlt_f32": [0, 1, 2, 3], "v_cmpx_nlt_f32_e64": [0, 1, 2, 3], "v_cmpx_nlt_f32_sdwa": [0, 2, 3], "v_cmpx_nlt_f64": [0, 1, 2, 3], "v_cmpx_nlt_f64_e64": [0, 1, 2, 3], "v_cmpx_o_f16": [0, 2, 3], "v_cmpx_o_f16_e64": [0, 2, 3], "v_cmpx_o_f16_sdwa": [0, 2, 3], "v_cmpx_o_f32": [0, 1, 2, 3], "v_cmpx_o_f32_e64": [0, 1, 2, 3], "v_cmpx_o_f32_sdwa": [0, 2, 3], "v_cmpx_o_f64": [0, 1, 2, 3], "v_cmpx_o_f64_e64": [0, 1, 2, 3], "v_cmpx_t_i16": [2, 3], "v_cmpx_t_i16_e64": [2, 3], "v_cmpx_t_i16_sdwa": [2, 3], "v_cmpx_t_i32": [0, 1, 2, 3], "v_cmpx_t_i32_e64": [0, 1, 2, 3], "v_cmpx_t_i32_sdwa": [0, 2, 3], "v_cmpx_t_i64": [0, 1, 2, 3], "v_cmpx_t_i64_e64": [0, 1, 2, 3], "v_cmpx_t_u16": [2, 3], "v_cmpx_t_u16_e64": [2, 3], "v_cmpx_t_u16_sdwa": [2, 3], "v_cmpx_t_u32": [0, 1, 2, 3], "v_cmpx_t_u32_e64": [0, 1, 2, 3], "v_cmpx_t_u32_sdwa": [0, 2, 3], "v_cmpx_t_u64": [0, 1, 2, 3], "v_cmpx_t_u64_e64": [0, 1, 2, 3], "v_cmpx_tru_f16": [0, 2, 3], "v_cmpx_tru_f16_e64": [0, 2, 3], "v_cmpx_tru_f16_sdwa": [0, 2, 3], "v_cmpx_tru_f32": [0, 1, 2, 3], "v_cmpx_tru_f32_e64": [0, 1, 2, 3], "v_cmpx_tru_f32_sdwa": [0, 2, 3], "v_cmpx_tru_f64": [0, 1, 2, 3], "v_cmpx_tru_f64_e64": [0, 1, 2, 3], "v_cmpx_u_f16": [0, 2, 3], "v_cmpx_u_f16_e64": [0, 2, 3], "v_cmpx_u_f16_sdwa": [0, 2, 3], "v_cmpx_u_f32": [0, 1, 2, 3], "v_cmpx_u_f32_e64": [0, 1, 2, 3], "v_cmpx_u_f32_sdwa": [0, 2, 3], "v_cmpx_u_f64": [0, 1, 2, 3], "v_cmpx_u_f64_e64": [0, 1, 2, 3], "v_cndmask_b32": [0, 1, 2, 3], "v_cndmask_b32_dpp": [2, 3], "v_cndmask_b32_e64": [0, 1, 2, 3], "v_cndmask_b32_sdwa": [2, 3], "v_cos_f16": [0, 2, 3], "v_cos_f16_dpp": [0, 2, 3], "v_cos_f16_e64": [0, 2, 3], "v_cos_f16_sdwa": [0, 2, 3], "v_cos_f32": [0, 1, 2, 3], "v_cos_f32_dpp": [0, 2, 3], "v_cos_f32_e64": [0, 1, 2, 3], "v_cos_f32_sdwa": [0, 2, 3], "v_cubeid_f32": [0, 1, 2, 3], "v_cubema_f32": [0, 1, 2, 3], "v_cubesc_f32": [0, 1, 2, 3], "v_cubetc_f32": [0, 1, 2, 3], "v_cvt_f16_f32": [0, 1, 2, 3, 384], "v_cvt_f16_f32_dpp": [0, 2, 3], "v_cvt_f16_f32_e64": [0, 1, 2, 3], "v_cvt_f16_f32_sdwa": [0, 2, 3], "v_cvt_f16_i16": [0, 2, 3], "v_cvt_f16_i16_dpp": [0, 2, 3], "v_cvt_f16_i16_e64": [0, 2, 3], "v_cvt_f16_i16_sdwa": [0, 2, 3], "v_cvt_f16_u16": [0, 2, 3], "v_cvt_f16_u16_dpp": [0, 2, 3], "v_cvt_f16_u16_e64": [0, 2, 3], "v_cvt_f16_u16_sdwa": [0, 2, 3], "v_cvt_f32_f16": [0, 1, 2, 3], "v_cvt_f32_f16_dpp": [0, 2, 3], "v_cvt_f32_f16_e64": [0, 1, 2, 3], "v_cvt_f32_f16_sdwa": [0, 2, 3], "v_cvt_f32_f64": [0, 1, 2, 3], "v_cvt_f32_f64_e64": [0, 1, 2, 3], "v_cvt_f32_i32": [0, 1, 2, 3], "v_cvt_f32_i32_dpp": [0, 2, 3], "v_cvt_f32_i32_e64": [0, 1, 2, 3], "v_cvt_f32_i32_sdwa": [0, 2, 3], "v_cvt_f32_u32": [0, 1, 2, 3, 383], "v_cvt_f32_u32_dpp": [0, 2, 3], "v_cvt_f32_u32_e64": [0, 1, 2, 3], "v_cvt_f32_u32_sdwa": [0, 2, 3], "v_cvt_f32_ubyte0": [0, 1, 2, 3], "v_cvt_f32_ubyte0_dpp": [0, 2, 3], "v_cvt_f32_ubyte0_e64": [0, 1, 2, 3], "v_cvt_f32_ubyte0_sdwa": [0, 2, 3], "v_cvt_f32_ubyte1": [0, 1, 2, 3], "v_cvt_f32_ubyte1_dpp": [0, 2, 3], "v_cvt_f32_ubyte1_e64": [0, 1, 2, 3], "v_cvt_f32_ubyte1_sdwa": [0, 2, 3], "v_cvt_f32_ubyte2": [0, 1, 2, 3], "v_cvt_f32_ubyte2_dpp": [0, 2, 3], "v_cvt_f32_ubyte2_e64": [0, 1, 2, 3], "v_cvt_f32_ubyte2_sdwa": [0, 2, 3], "v_cvt_f32_ubyte3": [0, 1, 2, 3], "v_cvt_f32_ubyte3_dpp": [0, 2, 3], "v_cvt_f32_ubyte3_e64": [0, 1, 2, 3], "v_cvt_f32_ubyte3_sdwa": [0, 2, 3], "v_cvt_f64_f32": [0, 1, 2, 3], "v_cvt_f64_f32_e64": [0, 1, 2, 3], "v_cvt_f64_i32": [0, 1, 2, 3], "v_cvt_f64_i32_e32": 386, "v_cvt_f64_i32_e64": [0, 1, 2, 3], "v_cvt_f64_u32": [0, 1, 2, 3], "v_cvt_f64_u32_e64": [0, 1, 2, 3], "v_cvt_flr_i32_f32": [0, 1, 2, 3], "v_cvt_flr_i32_f32_dpp": [0, 2, 3], "v_cvt_flr_i32_f32_e64": [0, 1, 2, 3], "v_cvt_flr_i32_f32_sdwa": [0, 2, 3], "v_cvt_i16_f16": [0, 2, 3], "v_cvt_i16_f16_dpp": [0, 2, 3], "v_cvt_i16_f16_e64": [0, 2, 3], "v_cvt_i16_f16_sdwa": [0, 2, 3], "v_cvt_i32_f32": [0, 1, 2, 3], "v_cvt_i32_f32_dpp": [0, 2, 3], "v_cvt_i32_f32_e64": [0, 1, 2, 3], "v_cvt_i32_f32_sdwa": [0, 2, 3], "v_cvt_i32_f64": [0, 1, 2, 3], "v_cvt_i32_f64_e64": [0, 1, 2, 3], "v_cvt_norm_i16_f16": [0, 3], "v_cvt_norm_i16_f16_dpp": [0, 3], "v_cvt_norm_i16_f16_e64": [0, 3], "v_cvt_norm_i16_f16_sdwa": [0, 3], "v_cvt_norm_u16_f16": [0, 3], "v_cvt_norm_u16_f16_dpp": [0, 3], "v_cvt_norm_u16_f16_e64": [0, 3], "v_cvt_norm_u16_f16_sdwa": [0, 3], "v_cvt_off_f32_i4": [0, 1, 2, 3], "v_cvt_off_f32_i4_dpp": [0, 2, 3], "v_cvt_off_f32_i4_e64": [0, 1, 2, 3], "v_cvt_off_f32_i4_sdwa": [0, 2, 3], "v_cvt_pk_i16_i32": [0, 1, 2, 3], "v_cvt_pk_i16_i32_e64": 1, "v_cvt_pk_u16_u32": [0, 1, 2, 3], "v_cvt_pk_u16_u32_e64": 1, "v_cvt_pk_u8_f32": [0, 1, 2, 3], "v_cvt_pkaccum_u8_f32": [1, 2, 3], "v_cvt_pkaccum_u8_f32_e64": 1, "v_cvt_pknorm_i16_f16": [0, 3], "v_cvt_pknorm_i16_f32": [0, 1, 2, 3], "v_cvt_pknorm_i16_f32_e64": 1, "v_cvt_pknorm_u16_f16": [0, 3], "v_cvt_pknorm_u16_f32": [0, 1, 2, 3], "v_cvt_pknorm_u16_f32_e64": 1, "v_cvt_pkrtz_f16_f32": [0, 1, 2, 3], "v_cvt_pkrtz_f16_f32_e64": [0, 1], "v_cvt_rpi_i32_f32": [0, 1, 2, 3], "v_cvt_rpi_i32_f32_dpp": [0, 2, 3], "v_cvt_rpi_i32_f32_e64": [0, 1, 2, 3], "v_cvt_rpi_i32_f32_sdwa": [0, 2, 3], "v_cvt_u16_f16": [0, 2, 3], "v_cvt_u16_f16_dpp": [0, 2, 3], "v_cvt_u16_f16_e64": [0, 2, 3], "v_cvt_u16_f16_sdwa": [0, 2, 3], "v_cvt_u32_f32": [0, 1, 2, 3], "v_cvt_u32_f32_dpp": [0, 2, 3], "v_cvt_u32_f32_e64": [0, 1, 2, 3], "v_cvt_u32_f32_sdwa": [0, 2, 3], "v_cvt_u32_f64": [0, 1, 2, 3], "v_cvt_u32_f64_e64": [0, 1, 2, 3], "v_div_fixup_f16": [0, 2, 3], "v_div_fixup_f32": [0, 1, 2, 3], "v_div_fixup_f64": [0, 1, 2, 3], "v_div_fixup_legacy_f16": 3, "v_div_fmas_f32": [0, 1, 2, 3], "v_div_fmas_f64": [0, 1, 2, 3], "v_div_scale_f32": [0, 1, 2, 3], "v_div_scale_f64": [0, 1, 2, 3], "v_exp_f16": [0, 2, 3], "v_exp_f16_dpp": [0, 2, 3], "v_exp_f16_e64": [0, 2, 3], "v_exp_f16_sdwa": [0, 2, 3], "v_exp_f32": [0, 1, 2, 3], "v_exp_f32_dpp": [0, 2, 3], "v_exp_f32_e64": [0, 1, 2, 3], "v_exp_f32_sdwa": [0, 2, 3], "v_exp_legacy_f32": [1, 2, 3], "v_exp_legacy_f32_dpp": [2, 3], "v_exp_legacy_f32_e64": [1, 2, 3], "v_exp_legacy_f32_sdwa": [2, 3], "v_ffbh_i32": [0, 1, 2, 3], "v_ffbh_i32_dpp": [0, 2, 3], "v_ffbh_i32_e64": [0, 1, 2, 3], "v_ffbh_i32_sdwa": [0, 2, 3], "v_ffbh_u32": [0, 1, 2, 3], "v_ffbh_u32_dpp": [0, 2, 3], "v_ffbh_u32_e64": [0, 1, 2, 3], "v_ffbh_u32_sdwa": [0, 2, 3], "v_ffbl_b32": [0, 1, 2, 3], "v_ffbl_b32_dpp": [0, 2, 3], "v_ffbl_b32_e64": [0, 1, 2, 3], "v_ffbl_b32_sdwa": [0, 2, 3], "v_floor_f16": [0, 2, 3], "v_floor_f16_dpp": [0, 2, 3], "v_floor_f16_e64": [0, 2, 3], "v_floor_f16_sdwa": [0, 2, 3], "v_floor_f32": [0, 1, 2, 3], "v_floor_f32_dpp": [0, 2, 3], "v_floor_f32_e32": 386, "v_floor_f32_e64": [0, 1, 2, 3], "v_floor_f32_sdwa": [0, 2, 3], "v_floor_f64": [0, 1, 2, 3], "v_floor_f64_e64": [0, 1, 2, 3], "v_fma_f16": [0, 2, 3], "v_fma_f32": [0, 1, 2, 3], "v_fma_f64": [0, 1, 2, 3], "v_fma_legacy_f16": 3, "v_fma_mix_f32": 0, "v_fma_mixhi_f16": 0, "v_fma_mixlo_f16": 0, "v_fmaak_f16": 0, "v_fmaak_f32": 0, "v_fmac_f16": 0, "v_fmac_f16_dpp": 0, "v_fmac_f16_e64": 0, "v_fmac_f32": 0, "v_fmac_f32_dpp": 0, "v_fmac_f32_e64": 0, "v_fmamk_f16": 0, "v_fmamk_f32": 0, "v_fract_f16": [0, 2, 3], "v_fract_f16_dpp": [0, 2, 3], "v_fract_f16_e64": [0, 2, 3], "v_fract_f16_sdwa": [0, 2, 3], "v_fract_f32": [0, 1, 2, 3, 386], "v_fract_f32_dpp": [0, 2, 3], "v_fract_f32_e64": [0, 1, 2, 3], "v_fract_f32_sdwa": [0, 2, 3], "v_fract_f64": [0, 1, 2, 3], "v_fract_f64_e64": [0, 1, 2, 3], "v_frexp_exp_i16_f16": [0, 2, 3], "v_frexp_exp_i16_f16_dpp": [0, 2, 3], "v_frexp_exp_i16_f16_e64": [0, 2, 3], "v_frexp_exp_i16_f16_sdwa": [0, 2, 3], "v_frexp_exp_i32_f32": [0, 1, 2, 3], "v_frexp_exp_i32_f32_dpp": [0, 2, 3], "v_frexp_exp_i32_f32_e64": [0, 1, 2, 3], "v_frexp_exp_i32_f32_sdwa": [0, 2, 3], "v_frexp_exp_i32_f64": [0, 1, 2, 3], "v_frexp_exp_i32_f64_e64": [0, 1, 2, 3], "v_frexp_mant_f16": [0, 2, 3], "v_frexp_mant_f16_dpp": [0, 2, 3], "v_frexp_mant_f16_e64": [0, 2, 3], "v_frexp_mant_f16_sdwa": [0, 2, 3], "v_frexp_mant_f32": [0, 1, 2, 3], "v_frexp_mant_f32_dpp": [0, 2, 3], "v_frexp_mant_f32_e64": [0, 1, 2, 3], "v_frexp_mant_f32_sdwa": [0, 2, 3], "v_frexp_mant_f64": [0, 1, 2, 3], "v_frexp_mant_f64_e64": [0, 1, 2, 3], "v_interp_mov_f32": [0, 1, 2, 3], "v_interp_mov_f32_e64": [2, 3], "v_interp_p1_f32": [0, 1, 2, 3, 8, 106, 190, 287], "v_interp_p1_f32_e64": [2, 3], "v_interp_p1ll_f16": [0, 2, 3], "v_interp_p1lv_f16": [0, 2, 3], "v_interp_p2_f16": [0, 2, 3], "v_interp_p2_f32": [0, 1, 2, 3], "v_interp_p2_f32_e64": [2, 3], "v_interp_p2_legacy_f16": 3, "v_ldexp_f16": [0, 2, 3], "v_ldexp_f16_dpp": [0, 2, 3], "v_ldexp_f16_e64": [0, 2, 3], "v_ldexp_f16_sdwa": [0, 2, 3], "v_ldexp_f32": [0, 1, 2, 3], "v_ldexp_f32_e64": 1, "v_ldexp_f64": [0, 1, 2, 3], "v_lerp_u8": [0, 1, 2, 3], "v_log_clamp_f32": 1, "v_log_clamp_f32_e64": 1, "v_log_f16": [0, 2, 3], "v_log_f16_dpp": [0, 2, 3], "v_log_f16_e64": [0, 2, 3], "v_log_f16_sdwa": [0, 2, 3], "v_log_f32": [0, 1, 2, 3], "v_log_f32_dpp": [0, 2, 3], "v_log_f32_e64": [0, 1, 2, 3], "v_log_f32_sdwa": [0, 2, 3], "v_log_legacy_f32": [1, 2, 3], "v_log_legacy_f32_dpp": [2, 3], "v_log_legacy_f32_e64": [1, 2, 3], "v_log_legacy_f32_sdwa": [2, 3], "v_lshl_add_u32": [0, 3], "v_lshl_b32": 1, "v_lshl_b32_e64": 1, "v_lshl_b64": 1, "v_lshl_or_b32": [0, 3], "v_lshlrev_b16": [0, 2, 3], "v_lshlrev_b16_dpp": [2, 3], "v_lshlrev_b16_e64": [2, 3], "v_lshlrev_b16_sdwa": [2, 3], "v_lshlrev_b32": [0, 1, 2, 3], "v_lshlrev_b32_dpp": [0, 2, 3], "v_lshlrev_b32_e64": [0, 1, 2, 3], "v_lshlrev_b32_sdwa": [0, 2, 3], "v_lshlrev_b64": [0, 2, 3], "v_lshr_b32": 1, "v_lshr_b32_e64": 1, "v_lshr_b64": 1, "v_lshrrev_b16": [0, 2, 3], "v_lshrrev_b16_dpp": [2, 3], "v_lshrrev_b16_e64": [2, 3], "v_lshrrev_b16_sdwa": [2, 3], "v_lshrrev_b32": [0, 1, 2, 3], "v_lshrrev_b32_dpp": [0, 2, 3], "v_lshrrev_b32_e64": [0, 1, 2, 3], "v_lshrrev_b32_sdwa": [0, 2, 3], "v_lshrrev_b64": [0, 2, 3], "v_mac_f16": [2, 3], "v_mac_f16_dpp": [2, 3], "v_mac_f16_e64": [2, 3], "v_mac_f16_sdwa": 2, "v_mac_f32": [0, 1, 2, 3], "v_mac_f32_dpp": [0, 2, 3], "v_mac_f32_e64": [0, 1, 2, 3], "v_mac_f32_sdwa": 2, "v_mac_legacy_f32": [0, 1], "v_mac_legacy_f32_e64": [0, 1], "v_mad_f16": [2, 3], "v_mad_f32": [0, 1, 2, 3], "v_mad_i16": [0, 2, 3], "v_mad_i32_i16": [0, 3], "v_mad_i32_i24": [0, 1, 2, 3], "v_mad_i64_i32": [0, 1, 2, 3], "v_mad_legacy_f16": 3, "v_mad_legacy_f32": [0, 1, 2, 3], "v_mad_legacy_i16": 3, "v_mad_legacy_u16": 3, "v_mad_mix_f32": [3, 384], "v_mad_mixhi_f16": [3, 384], "v_mad_mixlo_f16": [3, 384], "v_mad_u16": [0, 2, 3], "v_mad_u32_u16": [0, 3], "v_mad_u32_u24": [0, 1, 2, 3], "v_mad_u64_u32": [0, 1, 2, 3], "v_madak_f16": [2, 3], "v_madak_f32": [0, 1, 2, 3], "v_madmk_f16": [2, 3], "v_madmk_f32": [0, 1, 2, 3], "v_max3_f16": [0, 3], "v_max3_f32": [0, 1, 2, 3, 383], "v_max3_i16": [0, 3, 383], "v_max3_i32": [0, 1, 2, 3], "v_max3_u16": [0, 3], "v_max3_u32": [0, 1, 2, 3], "v_max_f16": [0, 2, 3, 386], "v_max_f16_dpp": [0, 2, 3], "v_max_f16_e32": 386, "v_max_f16_e64": [0, 2, 3], "v_max_f16_sdwa": [0, 2, 3], "v_max_f32": [0, 1, 2, 3], "v_max_f32_dpp": [0, 2, 3], "v_max_f32_e64": [0, 1, 2, 3], "v_max_f32_sdwa": [0, 2, 3], "v_max_f64": [0, 1, 2, 3], "v_max_i16": [0, 2, 3], "v_max_i16_dpp": [2, 3], "v_max_i16_e64": [2, 3], "v_max_i16_sdwa": [2, 3], "v_max_i32": [0, 1, 2, 3], "v_max_i32_dpp": [0, 2, 3], "v_max_i32_e64": [0, 1, 2, 3], "v_max_i32_sdwa": [0, 2, 3], "v_max_legacy_f32": 1, "v_max_legacy_f32_e64": 1, "v_max_u16": [0, 2, 3], "v_max_u16_dpp": [2, 3], "v_max_u16_e64": [2, 3], "v_max_u16_sdwa": [2, 3], "v_max_u32": [0, 1, 2, 3], "v_max_u32_dpp": [0, 2, 3], "v_max_u32_e64": [0, 1, 2, 3], "v_max_u32_sdwa": [0, 2, 3], "v_mbcnt_hi_u32_b32": [0, 1, 2, 3], "v_mbcnt_hi_u32_b32_e64": 1, "v_mbcnt_lo_u32_b32": [0, 1, 2, 3], "v_mbcnt_lo_u32_b32_e64": 1, "v_med3_f16": [0, 3], "v_med3_f32": [0, 1, 2, 3], "v_med3_i16": [0, 3], "v_med3_i32": [0, 1, 2, 3], "v_med3_u16": [0, 3], "v_med3_u32": [0, 1, 2, 3], "v_min3_f16": [0, 3], "v_min3_f32": [0, 1, 2, 3], "v_min3_i16": [0, 3], "v_min3_i32": [0, 1, 2, 3], "v_min3_u16": [0, 3], "v_min3_u32": [0, 1, 2, 3], "v_min_f16": [0, 2, 3], "v_min_f16_dpp": [0, 2, 3], "v_min_f16_e64": [0, 2, 3], "v_min_f16_sdwa": [0, 2, 3], "v_min_f32": [0, 1, 2, 3], "v_min_f32_dpp": [0, 2, 3], "v_min_f32_e64": [0, 1, 2, 3], "v_min_f32_sdwa": [0, 2, 3], "v_min_f64": [0, 1, 2, 3], "v_min_i16": [0, 2, 3], "v_min_i16_dpp": [2, 3], "v_min_i16_e64": [2, 3], "v_min_i16_sdwa": [2, 3], "v_min_i32": [0, 1, 2, 3], "v_min_i32_dpp": [0, 2, 3], "v_min_i32_e64": [0, 1, 2, 3], "v_min_i32_sdwa": [0, 2, 3], "v_min_legacy_f32": 1, "v_min_legacy_f32_e64": 1, "v_min_u16": [0, 2, 3], "v_min_u16_dpp": [2, 3], "v_min_u16_e64": [2, 3], "v_min_u16_sdwa": [2, 3], "v_min_u32": [0, 1, 2, 3, 386], "v_min_u32_dpp": [0, 2, 3], "v_min_u32_e64": [0, 1, 2, 3], "v_min_u32_sdwa": [0, 2, 3], "v_mov_b32": [0, 1, 2, 3, 386], "v_mov_b32_dpp": [0, 2, 3], "v_mov_b32_e32": 386, "v_mov_b32_e64": [0, 1, 2, 3], "v_mov_b32_sdwa": [0, 2, 3], "v_mov_fed_b32": [1, 2, 3], "v_mov_fed_b32_dpp": [2, 3], "v_mov_fed_b32_e64": [1, 2, 3], "v_mov_fed_b32_sdwa": [2, 3], "v_movreld_b32": [0, 1, 2], "v_movreld_b32_e64": [0, 1, 2], "v_movrels_b32": [0, 1, 2], "v_movrels_b32_e64": [0, 1, 2], "v_movrelsd_2_b32": 0, "v_movrelsd_2_b32_e64": 0, "v_movrelsd_b32": [0, 1, 2], "v_movrelsd_b32_e64": [0, 1, 2], "v_mqsad_pk_u16_u8": [0, 1, 2, 3], "v_mqsad_u32_u8": [0, 1, 2, 3], "v_msad_u8": [0, 1, 2, 3], "v_mul_f16": [0, 2, 3], "v_mul_f16_dpp": [0, 2, 3], "v_mul_f16_e64": [0, 2, 3], "v_mul_f16_sdwa": [0, 2, 3], "v_mul_f32": [0, 1, 2, 3], "v_mul_f32_dpp": [0, 2, 3], "v_mul_f32_e64": [0, 1, 2, 3], "v_mul_f32_sdwa": [0, 2, 3], "v_mul_f64": [0, 1, 2, 3], "v_mul_hi_i32": [0, 1, 2, 3], "v_mul_hi_i32_i24": [0, 1, 2, 3], "v_mul_hi_i32_i24_dpp": [0, 2, 3], "v_mul_hi_i32_i24_e64": [0, 1, 2, 3], "v_mul_hi_i32_i24_sdwa": [0, 2, 3], "v_mul_hi_u32": [0, 1, 2, 3], "v_mul_hi_u32_u24": [0, 1, 2, 3], "v_mul_hi_u32_u24_dpp": [0, 2, 3], "v_mul_hi_u32_u24_e64": [0, 1, 2, 3], "v_mul_hi_u32_u24_sdwa": [0, 2, 3], "v_mul_i32_i24": [0, 1, 2, 3], "v_mul_i32_i24_dpp": [0, 2, 3], "v_mul_i32_i24_e32": 386, "v_mul_i32_i24_e64": [0, 1, 2, 3, 386], "v_mul_i32_i24_sdwa": [0, 2, 3], "v_mul_legacy_f32": [0, 1, 2, 3], "v_mul_legacy_f32_dpp": [0, 2, 3], "v_mul_legacy_f32_e64": [0, 1, 2, 3], "v_mul_legacy_f32_sdwa": [0, 2, 3], "v_mul_lo_i32": 1, "v_mul_lo_u16": [0, 2, 3], "v_mul_lo_u16_dpp": [2, 3], "v_mul_lo_u16_e64": [2, 3], "v_mul_lo_u16_sdwa": [2, 3], "v_mul_lo_u32": [0, 1, 2, 3], "v_mul_u32_u24": [0, 1, 2, 3], "v_mul_u32_u24_dpp": [0, 2, 3], "v_mul_u32_u24_e64": [0, 1, 2, 3], "v_mul_u32_u24_sdwa": [0, 2, 3], "v_mullit_f32": [0, 1], "v_nop": [0, 1, 2, 3, 386], "v_nop_e64": [0, 1, 2, 3], "v_not_b32": [0, 1, 2, 3], "v_not_b32_dpp": [0, 2, 3], "v_not_b32_e64": [0, 1, 2, 3], "v_not_b32_sdwa": [0, 2, 3], "v_or3_b32": [0, 3], "v_or_b32": [0, 1, 2, 3], "v_or_b32_dpp": [0, 2, 3], "v_or_b32_e64": [0, 1, 2, 3], "v_or_b32_sdwa": [0, 2, 3], "v_pack_b32_f16": [0, 3], "v_perm_b32": [0, 2, 3], "v_permlane16_b32": 0, "v_permlanex16_b32": 0, "v_pipeflush": 0, "v_pipeflush_e64": 0, "v_pk_add_f16": [0, 3, 383], "v_pk_add_i16": [0, 3, 383], "v_pk_add_u16": [0, 3, 383], "v_pk_ashrrev_i16": [0, 3], "v_pk_fma_f16": [0, 3], "v_pk_fmac_f16": 0, "v_pk_lshlrev_b16": [0, 3], "v_pk_lshrrev_b16": [0, 3], "v_pk_mad_i16": [0, 3], "v_pk_mad_u16": [0, 3], "v_pk_max_f16": [0, 3], "v_pk_max_i16": [0, 3], "v_pk_max_u16": [0, 3], "v_pk_min_f16": [0, 3], "v_pk_min_i16": [0, 3], "v_pk_min_u16": [0, 3], "v_pk_mul_f16": [0, 3], "v_pk_mul_lo_u16": [0, 3], "v_pk_sub_i16": [0, 3], "v_pk_sub_u16": [0, 3], "v_qsad_pk_u16_u8": [0, 1, 2, 3], "v_rcp_clamp_f32": 1, "v_rcp_clamp_f32_e64": 1, "v_rcp_clamp_f64": 1, "v_rcp_clamp_f64_e64": 1, "v_rcp_f16": [0, 2, 3], "v_rcp_f16_dpp": [0, 2, 3], "v_rcp_f16_e64": [0, 2, 3], "v_rcp_f16_sdwa": [0, 2, 3], "v_rcp_f32": [0, 1, 2, 3], "v_rcp_f32_dpp": [0, 2, 3], "v_rcp_f32_e64": [0, 1, 2, 3], "v_rcp_f32_sdwa": [0, 2, 3], "v_rcp_f64": [0, 1, 2, 3], "v_rcp_f64_e64": [0, 1, 2, 3], "v_rcp_iflag_f32": [0, 1, 2, 3], "v_rcp_iflag_f32_dpp": [0, 2, 3], "v_rcp_iflag_f32_e64": [0, 1, 2, 3], "v_rcp_iflag_f32_sdwa": [0, 2, 3], "v_rcp_legacy_f32": 1, "v_rcp_legacy_f32_e64": 1, "v_readfirstlane_b32": [0, 1, 2, 3], "v_readlane_b32": [0, 1, 2, 3], "v_reg": 402, "v_rndne_f16": [0, 2, 3], "v_rndne_f16_dpp": [0, 2, 3], "v_rndne_f16_e64": [0, 2, 3], "v_rndne_f16_sdwa": [0, 2, 3], "v_rndne_f32": [0, 1, 2, 3], "v_rndne_f32_dpp": [0, 2, 3], "v_rndne_f32_e64": [0, 1, 2, 3], "v_rndne_f32_sdwa": [0, 2, 3], "v_rndne_f64": [0, 1, 2, 3], "v_rndne_f64_e64": [0, 1, 2, 3], "v_rsq_clamp_f32": 1, "v_rsq_clamp_f32_e64": 1, "v_rsq_clamp_f64": 1, "v_rsq_clamp_f64_e64": 1, "v_rsq_f16": [0, 2, 3], "v_rsq_f16_dpp": [0, 2, 3], "v_rsq_f16_e64": [0, 2, 3], "v_rsq_f16_sdwa": [0, 2, 3], "v_rsq_f32": [0, 1, 2, 3], "v_rsq_f32_dpp": [0, 2, 3], "v_rsq_f32_e64": [0, 1, 2, 3], "v_rsq_f32_sdwa": [0, 2, 3], "v_rsq_f64": [0, 1, 2, 3], "v_rsq_f64_e64": [0, 1, 2, 3], "v_rsq_legacy_f32": 1, "v_rsq_legacy_f32_e64": 1, "v_sad_hi_u8": [0, 1, 2, 3], "v_sad_u16": [0, 1, 2, 3], "v_sad_u32": [0, 1, 2, 3], "v_sad_u8": [0, 1, 2, 3], "v_sat_pk_u8_i16": [0, 3], "v_sat_pk_u8_i16_dpp": [0, 3], "v_sat_pk_u8_i16_e64": [0, 3], "v_sat_pk_u8_i16_sdwa": [0, 3], "v_screen_partition_4se_b32": 3, "v_screen_partition_4se_b32_dpp": 3, "v_screen_partition_4se_b32_e64": 3, "v_screen_partition_4se_b32_sdwa": 3, "v_sin_f16": [0, 2, 3], "v_sin_f16_dpp": [0, 2, 3], "v_sin_f16_e64": [0, 2, 3], "v_sin_f16_sdwa": [0, 2, 3], "v_sin_f32": [0, 1, 2, 3, 386], "v_sin_f32_dpp": [0, 2, 3], "v_sin_f32_e64": [0, 1, 2, 3], "v_sin_f32_sdwa": [0, 2, 3], "v_sqrt_f16": [0, 2, 3], "v_sqrt_f16_dpp": [0, 2, 3], "v_sqrt_f16_e64": [0, 2, 3], "v_sqrt_f16_sdwa": [0, 2, 3], "v_sqrt_f32": [0, 1, 2, 3, 385], "v_sqrt_f32_dpp": [0, 2, 3], "v_sqrt_f32_e64": [0, 1, 2, 3], "v_sqrt_f32_sdwa": [0, 2, 3], "v_sqrt_f64": [0, 1, 2, 3], "v_sqrt_f64_e64": [0, 1, 2, 3], "v_sub_co_ci_u32": 0, "v_sub_co_ci_u32_dpp": 0, "v_sub_co_ci_u32_e64": 0, "v_sub_co_ci_u32_sdwa": 0, "v_sub_co_u32": [0, 3], "v_sub_co_u32_dpp": 3, "v_sub_co_u32_e64": 3, "v_sub_co_u32_sdwa": 3, "v_sub_f16": [0, 2, 3], "v_sub_f16_dpp": [0, 2, 3], "v_sub_f16_e64": [0, 2, 3], "v_sub_f16_sdwa": [0, 2, 3], "v_sub_f32": [0, 1, 2, 3], "v_sub_f32_dpp": [0, 2, 3], "v_sub_f32_e64": [0, 1, 2, 3], "v_sub_f32_sdwa": [0, 2, 3], "v_sub_i16": 3, "v_sub_i32": [1, 3], "v_sub_i32_e64": 1, "v_sub_nc_i16": 0, "v_sub_nc_i32": 0, "v_sub_nc_u16": 0, "v_sub_nc_u32": 0, "v_sub_nc_u32_dpp": 0, "v_sub_nc_u32_e64": 0, "v_sub_nc_u32_sdwa": 0, "v_sub_u16": [2, 3], "v_sub_u16_dpp": [2, 3], "v_sub_u16_e64": [2, 3], "v_sub_u16_sdwa": [2, 3], "v_sub_u32": [2, 3], "v_sub_u32_dpp": [2, 3], "v_sub_u32_e64": [2, 3], "v_sub_u32_sdwa": [2, 3], "v_subb_co_u32": 3, "v_subb_co_u32_dpp": 3, "v_subb_co_u32_e64": 3, "v_subb_co_u32_sdwa": 3, "v_subb_u32": [1, 2], "v_subb_u32_dpp": 2, "v_subb_u32_e64": [1, 2], "v_subb_u32_sdwa": 2, "v_subbrev_co_u32": 3, "v_subbrev_co_u32_dpp": 3, "v_subbrev_co_u32_e64": 3, "v_subbrev_co_u32_sdwa": 3, "v_subbrev_u32": [1, 2], "v_subbrev_u32_dpp": 2, "v_subbrev_u32_e64": [1, 2], "v_subbrev_u32_sdwa": 2, "v_subrev_co_ci_u32": 0, "v_subrev_co_ci_u32_dpp": 0, "v_subrev_co_ci_u32_e64": 0, "v_subrev_co_ci_u32_sdwa": 0, "v_subrev_co_u32": [0, 3], "v_subrev_co_u32_dpp": 3, "v_subrev_co_u32_e64": 3, "v_subrev_co_u32_sdwa": 3, "v_subrev_f16": [0, 2, 3], "v_subrev_f16_dpp": [0, 2, 3], "v_subrev_f16_e64": [0, 2, 3], "v_subrev_f16_sdwa": [0, 2, 3], "v_subrev_f32": [0, 1, 2, 3], "v_subrev_f32_dpp": [0, 2, 3], "v_subrev_f32_e64": [0, 1, 2, 3], "v_subrev_f32_sdwa": [0, 2, 3], "v_subrev_i32": 1, "v_subrev_i32_e64": 1, "v_subrev_nc_u32": 0, "v_subrev_nc_u32_dpp": 0, "v_subrev_nc_u32_e64": 0, "v_subrev_nc_u32_sdwa": 0, "v_subrev_u16": [2, 3], "v_subrev_u16_dpp": [2, 3], "v_subrev_u16_e64": [2, 3], "v_subrev_u16_sdwa": [2, 3], "v_subrev_u32": [2, 3], "v_subrev_u32_dpp": [2, 3], "v_subrev_u32_e64": [2, 3], "v_subrev_u32_sdwa": [2, 3], "v_swap_b32": [0, 3], "v_swaprel_b32": 0, "v_trig_preop_f64": [0, 1, 2, 3], "v_trunc_f16": [0, 2, 3], "v_trunc_f16_dpp": [0, 2, 3], "v_trunc_f16_e64": [0, 2, 3], "v_trunc_f16_sdwa": [0, 2, 3], "v_trunc_f32": [0, 1, 2, 3], "v_trunc_f32_dpp": [0, 2, 3], "v_trunc_f32_e64": [0, 1, 2, 3], "v_trunc_f32_sdwa": [0, 2, 3], "v_trunc_f64": [0, 1, 2, 3], "v_trunc_f64_e64": [0, 1, 2, 3], "v_writelane_b32": [0, 1, 2, 3], "v_xad_u32": [0, 3], "v_xnor_b32": 0, "v_xnor_b32_dpp": 0, "v_xnor_b32_e64": 0, "v_xnor_b32_sdwa": 0, "v_xor3_b32": 0, "v_xor_b32": [0, 1, 2, 3], "v_xor_b32_dpp": [0, 2, 3], "v_xor_b32_e64": [0, 1, 2, 3], "v_xor_b32_sdwa": [0, 2, 3], "va_list": 479, "vacat": 516, "vaddr": [0, 1, 2, 3, 52, 53, 332, 333], "vadv": 534, "vagu": 452, "val": [390, 393, 404, 445, 449, 475, 479, 490, 507, 522, 529, 539, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "val0": [449, 479], "val1": [449, 479, 481, 529], "val1l": 479, "val2": [449, 479, 481, 529], "val29": 449, "val3": 479, "val7": 479, "val_": 578, "val_success": 479, "vala": 490, "valb": 490, "valc": 490, "valgrind": [406, 409, 474, 535], "valid": [384, 385, 386, 393, 394, 399, 400, 402, 404, 405, 410, 411, 417, 419, 424, 431, 433, 436, 437, 445, 452, 454, 457, 460, 462, 463, 465, 472, 479, 480, 481, 483, 489, 490, 497, 499, 502, 505, 507, 509, 519, 520, 522, 523, 524, 530, 535, 537, 540, 542, 543, 545, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "valn": 529, "valu": [12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 31, 33, 35, 37, 48, 66, 83, 99, 109, 110, 111, 112, 113, 114, 115, 125, 127, 146, 171, 185, 193, 194, 195, 196, 197, 202, 203, 205, 216, 218, 220, 222, 223, 233, 249, 268, 282, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 310, 312, 314, 316, 317, 328, 346, 365, 381, 384, 385, 387, 389, 390, 392, 393, 395, 398, 400, 401, 402, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 427, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 449, 450, 451, 452, 453, 454, 455, 456, 459, 461, 463, 464, 465, 470, 473, 475, 476, 477, 478, 480, 488, 490, 491, 494, 495, 497, 498, 499, 500, 502, 503, 508, 512, 513, 515, 517, 518, 520, 522, 524, 527, 531, 534, 535, 538, 539, 540, 541, 543, 545, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 581], "valuabl": [409, 448, 452, 511, 534], "value1": 519, "value2": [519, 520], "value_1": 478, "value_2": 478, "value_align": 479, "value_desc": 445, "value_kind": [386, 479], "value_load": 479, "value_n": 478, "value_typ": [386, 544], "valuecol": 476, "valuedisallow": 445, "valueenumer": 455, "valuekind": [386, 404], "valuelist": 530, "valuelistn": 530, "valueopt": 445, "valuerequir": 445, "valuesuffix": 530, "valuet": 507, "valuetrack": [479, 524], "valuetyp": [386, 402, 455, 531, 539], "vanilla": 446, "var": [401, 405, 489, 519, 527, 529, 557, 558, 559, 567, 568, 569, 578], "var1": 401, "var_arg_function_typ": 574, "var_nam": [401, 576, 577, 578], "varang": 386, "vararg": [393, 401, 402, 479, 507, 553, 563, 574], "varbit": 527, "varexpr": [557, 558, 559, 567, 568, 569, 578], "varexprast": [557, 558, 559, 567, 568, 569], "vari": [105, 189, 286, 386, 390, 393, 397, 402, 403, 457, 463, 479, 481, 487, 491, 499, 507, 525, 560, 570, 579], "variabl": [386, 388, 389, 390, 391, 398, 409, 413, 415, 418, 425, 433, 445, 450, 454, 457, 459, 461, 462, 463, 464, 466, 474, 480, 483, 484, 488, 489, 490, 492, 493, 494, 495, 498, 499, 502, 507, 513, 517, 520, 522, 523, 524, 527, 529, 530, 533, 534, 535, 537, 539, 540, 541, 542, 544, 545, 546, 551, 552, 553, 554, 555, 556, 558, 560, 561, 562, 563, 564, 565, 566, 568, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580], "variable_nam": [400, 511], "variable_op": 529, "variableexprast": [552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "variad": [404, 479, 507], "variant": [383, 390, 405, 429, 445, 454, 456, 465, 478, 479, 499, 505, 507, 513, 520, 522, 525, 530, 535, 539, 540, 572, 573, 574, 575, 576, 577, 578], "variat": [389, 391, 402, 409, 454, 481, 511, 521, 525, 538, 539, 546], "varieti": [389, 390, 393, 398, 401, 402, 413, 447, 452, 454, 461, 463, 468, 478, 480, 481, 507, 513, 519, 522, 527, 530, 553, 554, 555, 556, 560, 563, 564, 565, 566, 570, 574, 575, 576, 577, 579], "various": [385, 389, 390, 393, 397, 400, 402, 404, 406, 409, 426, 429, 433, 443, 447, 448, 450, 454, 459, 460, 463, 465, 476, 478, 479, 482, 483, 484, 488, 490, 493, 494, 495, 502, 503, 506, 507, 509, 511, 513, 517, 519, 520, 527, 531, 534, 535, 539, 540, 541, 542, 544, 551, 552, 554, 555, 559, 561, 562, 564, 565, 569, 572, 573, 575, 576], "varnam": [555, 556, 557, 558, 559, 565, 566, 567, 568, 569, 576, 578], "vasileio": 512, "vbr": [393, 413, 415], "vbr4": 393, "vbr5": 393, "vbr6": 393, "vbr8": 393, "vc110": 500, "vc140": 500, "vc2": 500, "vc4": 500, "vc41": [495, 500], "vc50": 500, "vc70": 500, "vc70dep": 500, "vc80": 500, "vc98": 500, "vcall": 399, "vcblog": 520, "vcc": [0, 1, 2, 3, 9, 11, 22, 23, 43, 44, 45, 52, 53, 56, 57, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 100, 101, 107, 130, 131, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 191, 228, 229, 239, 240, 243, 244, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 288, 290, 301, 302, 323, 324, 325, 332, 333, 336, 337, 340, 341, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 386], "vcc_hi": 385, "vcc_lo": [86, 385], "vccz": [43, 67, 68, 69, 70, 71, 73, 76, 78, 79, 130, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 164, 165, 167, 228, 250, 251, 252, 253, 254, 255, 257, 261, 262, 264, 323, 347, 348, 349, 350, 351, 352, 354, 358, 359, 361], "vcs": 481, "vcsrevis": 400, "vdata": [0, 1, 2, 3, 382], "vdata0": [0, 1, 2, 3], "vdata1": [0, 1, 2, 3], "vdst": [0, 1, 2, 3, 382], "ve": [402, 404, 446, 452, 453, 455, 459, 460, 462, 479, 488, 506, 507, 509, 511, 516, 524, 535, 544, 551, 552, 554, 556, 557, 558, 559, 560, 562, 564, 566, 567, 568, 569, 570, 572, 573, 577, 578, 579], "vea6bbv2": 452, "vec": [479, 507], "vec0": 479, "vec01": 479, "vec012": 479, "vec0123": 479, "vec1": [479, 507], "vec2": [479, 507], "vec_splat": 480, "vec_type_hint": 386, "vector": [86, 99, 172, 185, 269, 282, 368, 381, 385, 386, 392, 393, 402, 404, 429, 445, 459, 465, 480, 489, 490, 513, 519, 533, 537, 539, 544, 545, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 574, 578, 579], "vectoriz": 536, "vectorize_width": 538, "vectortyp": 507, "vectypehint": 386, "vega": 386, "vehicl": [401, 404], "vehiclemak": 404, "vehicletyp": 404, "veli": 402, "vend": 477, "vendor": [404, 479, 520, 558, 568], "venu": 516, "venv": 533, "ver60": 495, "verb": 404, "verbatim": [445, 539], "verbos": [406, 407, 409, 413, 423, 427, 432, 442, 484, 507, 511, 519, 539, 541, 542, 544], "verd": 386, "veri": [389, 390, 391, 393, 397, 398, 401, 402, 404, 405, 421, 429, 433, 445, 452, 453, 454, 457, 459, 460, 461, 462, 463, 465, 468, 469, 472, 473, 479, 481, 484, 486, 487, 488, 489, 491, 494, 502, 505, 507, 509, 511, 519, 520, 524, 527, 528, 529, 531, 533, 534, 535, 538, 540, 541, 544, 545, 547, 548, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 570, 572, 573, 574, 575, 576, 577, 578, 579], "verif": [386, 445, 479, 505, 513, 517, 533, 537, 545], "verifi": [387, 388, 397, 399, 402, 408, 415, 416, 428, 429, 443, 452, 463, 465, 472, 479, 481, 485, 500, 508, 509, 519, 520, 521, 522, 524, 535, 540, 542, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569, 574, 576, 577, 578], "verify_arch": 428, "verifyfunct": [553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 569], "verifypreservedanalysi": 542, "verilog": 513, "verison": 491, "versa": [390, 449, 479, 499, 512, 524, 535], "version": [386, 387, 388, 389, 390, 393, 400, 401, 402, 405, 407, 410, 411, 415, 417, 418, 419, 423, 427, 428, 430, 431, 432, 436, 437, 442, 444, 445, 446, 447, 448, 450, 452, 453, 455, 458, 459, 461, 463, 464, 465, 466, 467, 470, 471, 479, 486, 488, 489, 490, 495, 500, 502, 504, 506, 507, 509, 510, 511, 512, 513, 515, 517, 519, 522, 524, 527, 530, 533, 538, 539, 540, 541, 542, 543, 546, 553, 554, 555, 557, 558, 559, 563, 564, 565, 567, 568, 569, 574, 575, 576, 578, 579], "version_less": 400, "versionhead": 495, "versioninglicm": 536, "versionsignatur": 495, "vertex": [81, 169, 266, 363, 386, 512], "vertic": [509, 541], "vex": 527, "vf": [511, 512], "vfp": [392, 479], "vfp3": 471, "vfprintf": 479, "vfuncid": 479, "vg": [409, 535], "vg_leak": 409, "vgpr": [7, 36, 126, 221, 315, 384, 479], "vgpr0": 386, "vgpr1": 386, "vgpr_spill_count": 386, "vgprs": [384, 386], "vgprs_use": 386, "vhaddp": [424, 429], "vhdl": 513, "vi": 386, "via": [386, 390, 400, 402, 405, 429, 433, 434, 442, 443, 448, 449, 451, 452, 453, 454, 456, 458, 460, 461, 465, 466, 470, 471, 479, 481, 482, 483, 487, 491, 492, 493, 505, 507, 512, 513, 520, 522, 525, 527, 528, 530, 531, 535, 540, 541, 543, 547, 549, 550, 553, 554, 559, 563, 564, 569], "viabl": 520, "vic": 429, "vice": [390, 449, 479, 499, 512, 524, 535], "video": [403, 507], "view": [390, 402, 403, 418, 433, 481, 482, 488, 497, 509, 511, 534, 551, 555, 561, 565, 572, 576], "view_function_cfg": 576, "view_function_cfg_on": 576, "viewcfg": [507, 555, 565], "viewcfgon": [507, 555, 565], "viewer": [404, 541], "viewgraph": 507, "viewpoint": 403, "viewvc": 509, "vim": [463, 521, 531], "violat": [386, 399, 403, 404, 452, 461, 462, 479, 507, 516, 555, 565, 576], "violent": 403, "virginia": 510, "virt": 507, "virtreg": 402, "virtreg2indexfunctor": 402, "virtregmap": 402, "virtregrewrit": 519, "virtual": [386, 389, 399, 405, 409, 417, 433, 449, 461, 473, 475, 479, 484, 488, 491, 505, 507, 512, 519, 520, 527, 528, 531, 533, 539, 540, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 574, 578], "virtualconstprop": 479, "virtualenv": 533, "virtualindex": 479, "vis": 539, "visibl": [386, 390, 393, 402, 404, 413, 431, 445, 480, 482, 487, 490, 491, 507, 517, 519, 524, 540], "visit": [397, 428, 431, 432, 455, 461, 507, 547], "visitbasicblock": 507, "visitconstrainedfpintrins": 387, "visitfab": 455, "visitfunct": 542, "visitgcroot": 461, "visiticmpinst": 397, "visitinstruct": 542, "visitintrinsiccal": 387, "visitor": [397, 455, 461, 527, 551, 553, 563, 571, 572], "visitsrl": 455, "visitxor": 397, "visual": [388, 402, 404, 405, 454, 456, 463, 479, 481, 494, 499, 505, 507, 509, 513, 515, 519, 520, 539, 541, 545, 555, 565, 576], "vk_argument": 404, "vk_basicblock": 404, "vla": 479, "vlas": [456, 462], "vliw": [444, 527], "vlk": 520, "vm": [0, 1, 2, 3, 386, 404], "vm_cnt": [99, 185, 282, 381], "vma": [432, 442, 542], "vmcnt": [99, 185, 282, 381, 386], "vmcnt_sat": [99, 185, 282, 381], "vmodulekey": [547, 548, 549, 550], "vmov": 405, "vms": 481, "vmulp": [424, 429], "vn": 480, "vocabulari": 479, "void": [389, 390, 392, 393, 394, 402, 404, 405, 445, 446, 449, 450, 454, 455, 457, 458, 461, 462, 466, 477, 481, 482, 484, 488, 490, 491, 494, 502, 505, 507, 513, 517, 519, 520, 522, 524, 537, 538, 539, 540, 541, 542, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569], "voidtyp": 507, "volatil": [384, 386, 389, 390, 402, 429, 442, 457, 461, 488, 494, 505, 539], "volcan": 386, "volum": [507, 545], "volumin": 507, "volunt": [467, 472, 509, 514], "voluntari": 509, "von": 479, "vop1": [383, 386], "vop2": [383, 386], "vop3": [382, 383, 386], "vop_dpp": 386, "vop_sdwa": 386, "vopc": [383, 386], "vote": 487, "vpaddbyrr_vpadddyrr_vpaddqyrr_vpaddwyrr_vpsubbyrr_vpsubdyrr_vpsubqyrr_vpsubwyrr": 424, "vpaddqyrr": 424, "vpbasicblock": 512, "vpblock": 512, "vpblockbas": 512, "vpgr": 386, "vpic": 510, "vpinstruct": 512, "vprecip": 512, "vprecipebas": 512, "vpregionblock": 512, "vpsubqyrr": 424, "vpsubusw": 535, "vptr": [479, 507, 520], "vptransformst": 512, "vpuser": 512, "vpvalu": 512, "vreg": [402, 465], "vs": [386, 388, 389, 402, 404, 464, 465, 473, 479, 509, 515, 520, 521, 524, 527, 533], "vscale": 479, "vscnt": 386, "vset_lan": 392, "vsetq_lane_s32": 392, "vsplth": 480, "vsrc": [0, 1, 2, 3], "vsrc0": [0, 1, 2, 3], "vsrc1": [0, 1, 2, 3], "vsrc2": [0, 1, 2, 3], "vsrc3": [0, 1, 2, 3], "vsx": 479, "vtabl": [404, 405, 479, 520, 537], "vulner": [479, 517, 520], "vv": [405, 409], "vzeroupp": 424, "w0": 479, "w30": [479, 484], "w31": 479, "w64": 400, "w7100": 386, "w8": 392, "w8100": 386, "w9100": 386, "w_": 531, "wa": 479, "wait": [99, 185, 282, 381, 386, 404, 429, 467, 491, 514, 525, 547, 552, 554, 562, 564, 573], "waitcnt": [0, 1, 2, 3, 386], "waitset": 429, "waiv": 452, "wake": 509, "walk": [465, 469, 480, 488, 489, 505, 507, 509, 540, 544], "walkarch": 507, "wall": [409, 540, 560, 570, 579], "walltimemark": 543, "wambigu": 420, "want": [389, 391, 393, 398, 400, 402, 403, 404, 405, 418, 429, 445, 446, 448, 452, 453, 455, 457, 460, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474, 476, 477, 479, 481, 485, 488, 489, 490, 491, 504, 505, 506, 507, 508, 509, 517, 519, 520, 521, 523, 524, 525, 528, 529, 531, 534, 539, 540, 541, 542, 544, 545, 546, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579], "wari": 459, "warn": [384, 386, 398, 400, 405, 407, 413, 420, 431, 436, 437, 446, 452, 456, 463, 464, 465, 469, 479, 491, 519, 524, 527, 531, 533, 536, 546, 547, 548, 559, 569, 571], "warnmissedtransformationspass": 536, "warpsiz": 490, "warrant": 455, "warranti": [452, 540], "was": [386, 388, 390, 392, 393, 395, 396, 397, 400, 402, 404, 407, 409, 415, 416, 417, 418, 424, 429, 445, 446, 449, 450, 452, 454, 456, 457, 460, 462, 463, 465, 475, 477, 479, 481, 483, 489, 491, 495, 500, 503, 506, 507, 509, 511, 513, 516, 517, 519, 520, 524, 525, 527, 529, 531, 536, 538, 540, 543, 544, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 559, 560, 562, 563, 564, 565, 566, 569, 570, 573, 574, 575, 576, 577, 578, 579], "wasincrementallylink": 495, "wasn": [389, 489, 556, 557, 558, 559, 566, 567, 568, 569, 577, 578], "wast": [483, 485, 507, 519, 521, 522, 557, 567, 578], "watch": [386, 404, 452], "waterfal": 467, "wave": [36, 126, 221, 315, 386], "wave32": [384, 385], "wave_rol": 384, "wave_ror": 384, "wave_shl": [384, 386], "wave_shr": 384, "wavefront": [86, 100, 101, 384, 386], "wavefront_s": 386, "wavefronts": 386, "wavefrontsize64": 386, "way": [386, 388, 389, 390, 393, 397, 398, 401, 402, 404, 405, 406, 413, 423, 429, 431, 433, 434, 442, 445, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 463, 464, 465, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481, 484, 488, 489, 490, 491, 492, 499, 500, 502, 505, 506, 508, 509, 511, 512, 513, 514, 517, 519, 520, 522, 524, 527, 529, 530, 531, 533, 534, 535, 537, 538, 539, 540, 541, 542, 544, 546, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "waypoint": 397, "wb": 429, "wc": 479, "wchar_t": 479, "wcover": 404, "wd": 479, "we": [388, 389, 391, 392, 393, 394, 395, 397, 398, 400, 401, 402, 403, 404, 405, 424, 429, 445, 446, 448, 449, 450, 452, 453, 454, 457, 458, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484, 487, 488, 490, 491, 493, 494, 495, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 511, 513, 516, 517, 519, 520, 522, 523, 524, 525, 527, 528, 531, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "weak": [390, 393, 430, 431, 432, 456, 459, 479, 482, 489, 491, 507, 557, 567, 578], "weak_odr": [393, 479], "weakanylinkag": 507, "weaken": [429, 431], "weaker": 479, "weakest": [390, 402], "weakodrlinkag": 507, "weakvh": 507, "wealth": 448, "web": [448, 452, 510, 513], "webassembl": [402, 479, 511], "webkit": [479, 511, 522], "webkit_jscc": [393, 479], "websit": [401, 474, 509], "wednesday": 487, "week": [448, 452, 487, 511, 516], "weekend": 487, "weight": [456, 479, 484, 545], "weird": 402, "welcom": [403, 447, 452, 463, 464, 470, 487, 491, 524, 540, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "well": [386, 387, 389, 390, 393, 397, 398, 400, 401, 402, 403, 404, 406, 418, 419, 429, 430, 433, 443, 445, 448, 451, 452, 455, 457, 458, 459, 463, 465, 466, 469, 472, 473, 478, 481, 482, 484, 487, 489, 490, 494, 495, 497, 498, 503, 505, 506, 507, 509, 510, 511, 516, 517, 519, 520, 524, 529, 531, 535, 536, 538, 540, 541, 542, 545, 546, 551, 552, 553, 554, 556, 557, 558, 559, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 575, 577, 578], "weng": 446, "wennborg": 472, "went": [554, 555, 564, 565, 576], "were": [390, 392, 402, 404, 405, 409, 416, 418, 423, 429, 436, 437, 442, 443, 445, 446, 449, 450, 452, 454, 459, 463, 464, 465, 472, 474, 477, 479, 480, 481, 488, 489, 491, 495, 505, 507, 509, 516, 519, 520, 524, 527, 530, 531, 538, 542, 547, 560, 570, 579], "weren": [452, 465], "werror": 466, "wf": 479, "wg21": 520, "wget": 463, "wglobal": 404, "wgp": 386, "wgp_mode": 386, "wgps": 386, "what": [384, 385, 386, 389, 390, 392, 393, 394, 396, 400, 402, 404, 405, 408, 410, 413, 418, 427, 429, 433, 443, 445, 446, 447, 449, 452, 454, 455, 463, 464, 465, 467, 471, 472, 474, 478, 479, 480, 484, 485, 487, 488, 490, 491, 493, 495, 499, 502, 503, 505, 506, 507, 508, 511, 512, 514, 515, 519, 520, 521, 523, 524, 525, 527, 528, 529, 530, 531, 534, 539, 541, 543, 544, 545, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "whatev": [389, 400, 405, 424, 445, 446, 449, 454, 462, 463, 469, 471, 479, 487, 488, 493, 505, 506, 507, 525, 544], "whatsoev": [452, 479], "when": [84, 366, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 396, 398, 400, 401, 402, 403, 405, 406, 407, 409, 413, 417, 418, 419, 423, 424, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 494, 495, 497, 499, 502, 504, 505, 506, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "whenev": [388, 389, 401, 402, 404, 405, 406, 445, 451, 476, 478, 479, 488, 507, 519, 522, 535, 551, 559, 561, 569], "whera": 519, "where": [382, 384, 385, 386, 387, 390, 392, 393, 394, 395, 397, 399, 400, 402, 403, 404, 405, 409, 413, 418, 420, 423, 424, 429, 430, 431, 433, 434, 443, 444, 445, 446, 449, 450, 452, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 471, 472, 473, 474, 475, 478, 479, 481, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495, 497, 502, 503, 505, 506, 507, 508, 509, 512, 513, 514, 516, 517, 519, 520, 524, 530, 531, 534, 535, 536, 539, 540, 541, 542, 544, 546, 548, 551, 553, 554, 555, 557, 558, 559, 561, 563, 564, 565, 567, 568, 569, 571, 572, 573, 574, 575, 576, 578], "wherea": [392, 402, 437, 449, 454, 459, 465, 479, 488, 507, 512], "wherebi": [499, 509], "wherev": [446, 507, 559, 569], "whether": [384, 386, 389, 393, 394, 397, 399, 400, 402, 404, 410, 411, 413, 420, 443, 446, 449, 454, 455, 456, 461, 462, 463, 465, 466, 470, 473, 474, 478, 479, 481, 482, 489, 492, 499, 502, 505, 506, 507, 508, 509, 511, 512, 515, 516, 517, 519, 520, 522, 524, 527, 529, 536, 537, 539, 541, 543, 547, 552, 554, 555, 556, 557, 558, 559, 560, 562, 564, 565, 566, 567, 568, 569, 570, 573, 576, 577, 578, 579], "whi": [386, 389, 395, 396, 403, 404, 429, 446, 452, 460, 466, 473, 479, 485, 488, 489, 500, 506, 507, 510, 519, 520, 521, 524, 527, 528, 540, 544, 551, 552, 553, 555, 562, 563, 565, 571, 572, 573, 576], "which": [4, 7, 10, 19, 37, 48, 50, 51, 102, 105, 108, 116, 127, 135, 136, 186, 189, 192, 204, 222, 223, 233, 235, 236, 283, 286, 289, 298, 316, 317, 328, 330, 331, 382, 383, 384, 385, 386, 390, 391, 392, 393, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 424, 429, 430, 431, 433, 434, 443, 445, 446, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 495, 497, 498, 499, 500, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579], "whichev": [506, 519], "while": [383, 384, 386, 388, 389, 393, 396, 397, 400, 401, 402, 403, 404, 405, 409, 429, 443, 445, 448, 449, 451, 452, 453, 454, 458, 460, 462, 463, 465, 469, 470, 471, 476, 477, 479, 480, 481, 482, 487, 488, 489, 491, 492, 493, 494, 495, 499, 500, 502, 503, 504, 505, 506, 509, 511, 513, 514, 515, 516, 517, 519, 520, 522, 524, 525, 528, 529, 531, 535, 538, 540, 542, 545, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 576, 578, 579], "whilst": [430, 436, 437, 442], "whip": [556, 566, 577], "whirlwind": [552, 562, 573], "whisker": 520, "white": 447, "whitelist": [418, 467, 491, 509, 524], "whitelist_fun": 418, "whitepap": 541, "whitespac": [405, 428, 431, 452, 530, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "whitespaceoranycom": 530, "whitespaceorcstylecom": 530, "whizbang": 404, "who": [396, 398, 400, 401, 404, 450, 452, 453, 474, 478, 479, 487, 489, 491, 504, 506, 509, 513, 516, 525, 539, 545, 546, 547, 557, 560, 567, 570, 571, 578, 579], "whoa": [554, 564, 575], "whole": [388, 402, 404, 413, 434, 452, 454, 455, 459, 461, 465, 471, 472, 475, 478, 479, 481, 484, 489, 491, 505, 507, 517, 523, 533, 534, 535, 537, 540, 546, 547, 552, 554, 555, 562, 564, 565, 573, 575, 576], "whom": [489, 503], "whose": [384, 386, 389, 393, 397, 402, 404, 409, 423, 429, 430, 431, 433, 434, 450, 479, 500, 502, 507, 512, 515, 519, 527, 529, 530, 539, 543, 547, 552, 556, 557, 562, 566, 567, 573, 577, 578], "whould": 516, "wide": [385, 386, 389, 390, 393, 398, 401, 402, 403, 432, 452, 461, 462, 463, 468, 479, 490, 493, 502, 503, 507, 512, 513, 519, 529, 530, 554, 555, 560, 564, 565, 570, 575, 576, 579], "wideaddr": 479, "widecharact": 502, "widen": [402, 465, 512, 519, 538, 540], "widenable_cond": 479, "widenable_condit": 479, "widenscalar": 465, "widenscalarfor": 465, "widenscalarif": 465, "widenscalartonextpow2": 465, "wider": [386, 390, 455, 462, 465], "widest": 452, "width": [390, 392, 424, 429, 446, 461, 495, 505, 507, 511, 536, 538, 560, 570, 579], "wiki": [400, 463, 471, 481, 485, 510, 511, 517], "wikipedia": [478, 479, 485, 555, 565, 576], "wild": [445, 556, 566, 577], "wildcard": 418, "wili": 462, "will": [383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 445, 446, 449, 450, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 497, 499, 500, 502, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 527, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "willreturn": 479, "win": [389, 404, 507, 520], "win32": [402, 463, 464, 500, 525, 535], "wincomplet": 420, "windbg": 519, "window": [400, 402, 404, 420, 433, 445, 446, 449, 463, 464, 467, 477, 479, 491, 500, 503, 507, 509, 513, 519, 525, 535, 540, 545, 553, 554, 555, 556, 563, 564, 565, 566, 576], "wineh": 449, "winrt": 494, "winrtsmartpoint": 494, "winzip": 464, "wip": 386, "wire": 457, "wireshark": 481, "wise": [456, 480, 529], "wish": [400, 409, 445, 446, 455, 459, 462, 463, 470, 474, 479, 489, 491, 503, 507, 516, 520, 524, 529, 539, 571], "wit": [386, 516], "with": [8, 37, 39, 40, 41, 42, 106, 127, 128, 129, 190, 223, 224, 225, 226, 227, 287, 317, 319, 320, 321, 322, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 448, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 465, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 539, 541, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 581], "with_assert": 400, "withhold": 519, "within": [384, 386, 389, 392, 393, 397, 401, 402, 403, 404, 405, 409, 423, 431, 432, 443, 446, 449, 454, 456, 461, 462, 463, 465, 473, 479, 480, 489, 490, 491, 492, 493, 495, 499, 502, 503, 505, 507, 508, 509, 511, 512, 515, 516, 517, 519, 520, 522, 524, 529, 533, 534, 537, 540, 543, 544, 546, 551, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 575, 576, 577, 578], "without": [385, 386, 390, 392, 393, 394, 397, 398, 400, 401, 402, 404, 405, 406, 411, 413, 417, 418, 423, 429, 430, 431, 434, 442, 445, 446, 450, 451, 452, 454, 456, 459, 461, 462, 463, 465, 466, 475, 479, 480, 481, 482, 485, 486, 488, 489, 492, 495, 500, 502, 503, 504, 505, 506, 507, 508, 509, 511, 513, 516, 519, 520, 521, 522, 524, 525, 527, 531, 535, 536, 538, 539, 540, 551, 552, 554, 555, 556, 557, 558, 559, 562, 564, 565, 566, 567, 568, 569, 572, 573, 575, 576, 577, 578], "wl": [463, 492, 556, 566], "wlandri": 510, "wno": 469, "woff2": 481, "wojciech": 505, "won": [400, 402, 404, 446, 452, 462, 465, 470, 471, 475, 479, 485, 509, 514, 519, 520, 534, 535, 553, 554, 559, 563, 564, 569, 575], "wonder": [404, 452, 457, 462, 473, 520, 554, 564, 575], "wontfix": 396, "word": [384, 386, 390, 394, 402, 403, 404, 445, 454, 456, 457, 461, 473, 479, 481, 488, 497, 507, 511, 516, 519, 520, 539, 543, 546, 553, 563, 574], "word32": 386, "word64": 386, "word_0": [384, 386, 497], "word_1": [384, 386, 497], "word_n": 497, "wordsiz": 461, "work": [387, 388, 389, 390, 394, 397, 398, 401, 402, 403, 404, 405, 406, 409, 410, 411, 415, 416, 418, 424, 431, 433, 434, 441, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 460, 461, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 482, 483, 484, 487, 488, 491, 500, 505, 506, 507, 508, 509, 511, 513, 516, 518, 520, 524, 525, 527, 531, 533, 534, 535, 537, 539, 540, 542, 544, 545, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "work_group_size_hint": 386, "workabl": 507, "workaround": 429, "worker": [481, 491], "workflow": [388, 398, 506, 541], "workgroup": 386, "workgroup_s": 386, "workgroup_size_hint": 386, "workgroups": 386, "workgroupsizehint": 386, "worklist": [489, 505, 507], "workload": 386, "worksform": 396, "workshop": [487, 520], "world": [401, 403, 450, 461, 463, 464, 479, 485, 487, 506, 519, 521, 551, 560, 570, 572, 579], "worri": [445, 479, 506, 552, 559, 562, 569, 573], "wors": [392, 402, 404, 479], "worst": [465, 507, 518, 519, 524, 560, 570, 579], "worth": [397, 398, 404, 459, 465, 468, 473, 488, 507, 520, 541], "worthless": 404, "worthwhil": 507, "would": [388, 389, 390, 392, 393, 394, 396, 399, 400, 401, 402, 404, 405, 410, 415, 431, 433, 445, 446, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 473, 474, 478, 479, 480, 481, 484, 485, 488, 489, 491, 492, 493, 494, 495, 499, 502, 503, 505, 506, 507, 508, 509, 510, 511, 516, 517, 519, 520, 521, 522, 524, 525, 527, 530, 531, 535, 536, 538, 540, 541, 542, 543, 544, 546, 548, 552, 553, 554, 555, 559, 560, 562, 563, 564, 565, 569, 570, 573, 574, 575, 576, 577, 579], "wouldn": [404, 519, 557, 559, 567, 569, 578], "wp": 520, "wpdres": 479, "wpdresolut": 479, "wrap": [393, 401, 404, 445, 452, 459, 462, 463, 465, 477, 479, 483, 491, 507, 519, 520, 525, 544, 546, 547, 551, 552, 553, 562, 563, 571, 572, 573, 574], "wrapcolumn": 544, "wrapper": [404, 446, 483, 489, 491, 492, 505, 507, 525, 539], "wrf_r": 510, "wrf_s": 510, "wrinkl": 477, "writabl": [385, 430, 453, 456, 495, 519], "write": [48, 233, 328, 386, 390, 405, 413, 414, 415, 416, 418, 420, 422, 424, 425, 427, 431, 432, 433, 442, 443, 444, 446, 448, 452, 453, 454, 459, 463, 464, 465, 477, 479, 481, 484, 485, 489, 490, 491, 495, 499, 500, 505, 507, 511, 512, 513, 519, 520, 521, 522, 524, 525, 529, 531, 541, 542, 544, 545, 551, 554, 555, 558, 559, 560, 561, 564, 565, 568, 569, 570, 572, 575, 576, 579, 580], "write32b": 513, "write_escap": 540, "write_on": 386, "writeabl": [36, 126, 221, 315], "writealia": 489, "writealu": 424, "writeattribut": 527, "writeon": [386, 393, 479], "writer": [390, 393, 402, 421, 444, 445, 455, 457, 461, 479, 489, 539, 540, 545], "writesetcc": 424, "writethunk": 489, "writethunkoralia": 489, "writetypet": 455, "writev": 539, "written": [386, 388, 389, 401, 402, 404, 415, 416, 418, 420, 422, 424, 425, 429, 431, 434, 448, 452, 453, 456, 458, 463, 474, 478, 479, 481, 489, 490, 495, 499, 500, 505, 507, 509, 510, 511, 519, 520, 524, 525, 527, 529, 533, 535, 538, 539, 543, 544, 551, 555, 556, 559, 560, 565, 566, 569, 570, 571, 572, 576, 577, 579], "wrong": [389, 391, 396, 403, 404, 446, 457, 474, 517, 525, 554, 559, 564, 569], "wrote": [455, 462, 479, 558, 559, 568, 569], "ws": 479, "wswitch": 404, "wu": 446, "www": [391, 400, 472, 509, 510, 511, 520], "wzr": 479, "x0": [456, 484], "x00": 581, "x01": 581, "x03": 581, "x04": 581, "x08": 581, "x0abar": 481, "x0c": 581, "x1": [456, 505, 557, 567, 578], "x11": 507, "x15": 456, "x16": [383, 456], "x2": [383, 505, 557, 567, 578], "x20": 484, "x21": 484, "x24": 581, "x3": [383, 505, 557, 567, 578], "x30": 479, "x32": 405, "x4": [383, 505, 557, 567, 578], "x44": 581, "x64": [405, 463, 464, 467], "x8": 383, "x83": 581, "x86": [388, 390, 399, 400, 405, 410, 411, 424, 429, 431, 432, 449, 454, 455, 459, 463, 465, 468, 478, 479, 480, 484, 495, 511, 518, 520, 524, 527, 529, 531, 535, 537, 538, 539, 542, 544, 558, 568], "x86_64": [399, 402, 405, 424, 429, 442, 453, 459, 460, 468, 469, 470, 479, 484, 513, 514, 517, 519, 522, 524, 535, 541, 544, 558, 568], "x86_fastcal": 402, "x86_fastcallcc": 393, "x86_fp80": [393, 479, 489], "x86_mmx": 393, "x86_ssecal": 539, "x86_stdcall": 402, "x86_stdcallcc": 393, "x86_thiscal": 402, "x86call": 529, "x86callingconv": 539, "x86codeemitt": 539, "x86dagtodagisel": 542, "x86framelow": 402, "x86geninstrinfo": 424, "x86genregisterinfo": [402, 539], "x86ii": 539, "x86inst": 531, "x86instrinfo": 539, "x86instrmmx": 539, "x86instrss": 539, "x86iseldagtodag": 542, "x86isellow": 542, "x86registerinfo": [402, 539], "x86reloc": 539, "x86retflag": 529, "x86subtarget": 542, "x86targetasminfo": 539, "x86targetlow": 542, "x86targetmachin": [402, 542], "x87": [465, 479], "x8b": 581, "x_": 531, "xab": 481, "xadd": 390, "xarch": 463, "xarg": 509, "xc3": 581, "xc4": 581, "xc7": 581, "xchg": [390, 479, 513], "xclang": 474, "xcode": [400, 451, 463], "xcodebuild": 400, "xcore": [402, 463, 479, 511], "xctoolchain": 400, "xd": 529, "xdata": 495, "xdemangl": 418, "xderef": 386, "xdref": 386, "xe8": 581, "xec": 581, "xemac": 463, "xf7": 481, "xf8": 481, "xfail": [409, 535], "xinmin": 512, "xlc": 463, "xmax": [556, 566, 577], "xme": 433, "xmi": 433, "xmin": [556, 566, 577], "xml": 393, "xmm": [405, 539], "xmm0": [405, 429, 522, 529, 531, 535], "xmm1": [424, 429, 529, 531], "xmm10": 531, "xmm11": 531, "xmm12": 531, "xmm13": 531, "xmm14": 531, "xmm15": 531, "xmm2": [424, 429, 479, 529, 531], "xmm3": [424, 429, 479, 529, 531], "xmm4": [429, 529, 531], "xmm5": [529, 531], "xmm6": [529, 531], "xmm7": [529, 531], "xmm8": 531, "xmm9": 531, "xmms": 479, "xmos": 447, "xnack": [191, 228, 229, 239, 240, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 288, 290, 301, 302, 323, 324, 325, 332, 333, 336, 337, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 386], "xnack_mask": [36, 385, 386], "xnack_mask_hi": 385, "xnack_mask_lo": 385, "xnor": 539, "xnorrr": 539, "xor": [384, 385, 402, 449, 490, 505, 507, 538, 539], "xor16rr": 402, "xor32rr": [402, 484], "xor64rr": 402, "xor8rr": 402, "xorl": 520, "xorri": 539, "xorrr": 539, "xpass": 409, "xplus1": 529, "xps": 525, "xray": 545, "xray_always_instru": [541, 542], "xray_basic_opt": 541, "xray_fdr_opt": 541, "xray_instr_map": [541, 542], "xray_log_fin": 541, "xray_log_flush": 541, "xray_log_interfac": 541, "xray_logfile_bas": 541, "xray_mod": [541, 542], "xray_never_instru": 541, "xray_opt": [541, 542], "xraylogimpl": 541, "xs": 529, "xs1": 447, "xstep": [556, 566, 577], "xtemp": 390, "xterm": 404, "xue": 512, "xuetian": 446, "xvf": 464, "xvjf": 463, "xword": 539, "xx": [391, 431, 479], "xxx": [404, 405, 431, 533, 534, 539], "xxxasmprint": 539, "xxxbegin": 507, "xxxbranchselector": 539, "xxxcallingconv": 539, "xxxcodeemitt": 539, "xxxend": 507, "xxxgenasmwrit": 539, "xxxgencallingconv": 539, "xxxgencodeemitt": 539, "xxxgendagisel": 539, "xxxgeninstrinfo": 539, "xxxgenregisterinfo": 539, "xxxinstrdescriptor": 539, "xxxinstrformat": 539, "xxxinstrinfo": [476, 539], "xxxiseldagtodag": 539, "xxxisellow": 539, "xxxiter": 507, "xxxjitinfo": 539, "xxxkind": 473, "xxxlayer": 491, "xxxregisterinfo": 539, "xxxreloc": 539, "xxxschedul": 539, "xxxsubtarget": 539, "xxxtargetasminfo": 539, "xxxtargetlow": 539, "xxxtargetmachin": 539, "xxxtrait": 544, "xxxxxx": 541, "xy": 383, "xyz": [383, 410, 411, 476], "xyzw": 383, "xyzzi": 404, "xz": 454, "xzr": 479, "yaml": [386, 407, 424, 433, 484, 541, 542, 545, 581], "yaxxz": 454, "year": [404, 452, 531], "yes": [383, 452, 457, 462, 463, 464, 481, 485, 489, 505, 518, 521, 550], "yet": [385, 390, 402, 404, 417, 434, 445, 454, 461, 467, 469, 477, 478, 479, 483, 489, 491, 505, 507, 510, 520, 524, 539, 540, 541, 548, 549, 550, 553, 555, 556, 563, 565, 566, 575, 576, 577], "yield": [393, 445, 449, 462, 479, 505, 507, 524, 534, 542, 547], "yin": 544, "ymax": [556, 566, 577], "ymin": [556, 566, 577], "ymm0": 522, "ymms": 479, "ymmv": 404, "you": [388, 389, 390, 391, 393, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 408, 409, 411, 413, 418, 422, 423, 424, 429, 433, 442, 443, 445, 446, 448, 450, 451, 452, 453, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 479, 481, 484, 485, 487, 488, 489, 490, 491, 492, 495, 499, 503, 504, 505, 506, 507, 508, 509, 511, 513, 514, 517, 519, 520, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "young": 507, "younger": 429, "your": [388, 389, 390, 391, 397, 398, 402, 403, 404, 405, 407, 413, 418, 424, 433, 445, 446, 448, 450, 452, 453, 454, 455, 457, 459, 460, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 479, 480, 481, 485, 488, 490, 499, 504, 506, 508, 509, 514, 515, 516, 517, 521, 524, 526, 531, 532, 534, 535, 539, 542, 544, 545, 546, 551, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 575, 576, 577, 578, 579], "yourregex": 405, "yourself": [396, 400, 448, 452, 455, 463, 479, 506, 507, 529], "yout": 544, "yoyodyn": 452, "yplus1": 529, "ystep": [556, 566, 577], "ysvn": 472, "yy": 490, "yypvr": 521, "z0": [385, 405, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "z2": [556, 566], "z7": [495, 519], "z8ifx": 452, "z_": [385, 405], "za": [385, 405, 479, 484, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "zachari": 511, "zak": 512, "zc": 479, "zchf": 471, "zen": 520, "zero": [83, 171, 268, 365, 382, 384, 385, 386, 392, 393, 402, 404, 405, 406, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422, 425, 427, 429, 430, 431, 432, 436, 437, 443, 444, 445, 446, 450, 456, 459, 461, 462, 479, 480, 481, 483, 484, 490, 491, 495, 505, 507, 512, 517, 519, 520, 522, 524, 529, 535, 537, 538, 539, 543, 552, 555, 560, 562, 565, 570, 573, 576, 577, 578, 579], "zeroargfp": 529, "zerocont": 517, "zerodirect": 539, "zeroext": [393, 479], "zeroiniti": 479, "zeroormor": 445, "zext": [475, 519], "zhou": 512, "zi": [495, 519], "zip": 463, "zipp": 509, "zlib": [400, 431, 463], "zlib1g": 471, "zone": [479, 520], "zorg": 467, "zork": 529, "zy": 479, "zz": 479}, "titles": ["Syntax of GFX10 Instructions", "Syntax of GFX7 Instructions", "Syntax of GFX8 Instructions", "Syntax of GFX9 Instructions", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "sdata", "sdata", "sdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "label", "fx", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "saddr", "saddr", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vaddr", "vaddr", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "sdst", "ssrc", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "hwreg", "label", "m", "msg", "soffset", "soffset", "opt", "param", "dst", "srsrc", "srsrc", "ssamp", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "imm4", "label", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "vaddr", "vaddr", "vaddr", "vaddr", "attr", "sbase", "sbase", "sbase", "imm16", "imm32", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "vdata", "sdata", "sdata", "sdata", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "vdst", "imm32", "imm32", "hwreg", "imm4", "label", "fx", "m", "m", "m", "msg", "soffset", "soffset", "soffset", "opt", "param", "imm3", "dst", "srsrc", "srsrc", "saddr", "saddr", "ssamp", "sdata", "sdata", "sdata", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "sdst", "imm16", "src", "src", "src", "src", "src", "src", "vsrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "ssrc", "tgt", "Type deviation", "imm16", "vaddr", "vaddr", "vcc", "vdata", "vdata", "vdata", "vdata", "vdst", "vdst", "vdst", "vdst", "vsrc", "vsrc", "vsrc", "vsrc", "waitcnt", "AMDGPU Instructions Notation", "AMDGPU Instruction Syntax", "Syntax of AMDGPU Instruction Modifiers", "Syntax of AMDGPU Instruction Operands", "User Guide for AMDGPU Backend", "How To Add A Constrained Floating-Point Intrinsic", "\u9032\u968e\u5efa\u7f6e\u7d44\u614b", "LLVM Alias Analysis Infrastructure", "LLVM Atomic Instructions and Concurrency Guide", "Benchmarking tips", "Using ARM NEON instructions in big endian mode", "LLVM Bitcode File Format", "LLVM Block Frequency Terminology", "LLVM Branch Weight Metadata", "LLVM Bug Life Cycle", "LLVM bugpoint tool: design and usage", "Building a Distribution of LLVM", "Control Flow Verification Tool Design Document", "\u4f7f\u7528 CMake \u5efa\u7f6e LLVM", "CMake Primer", "The LLVM Target-Independent Code Generator", "LLVM Community Code of Conduct", "LLVM Coding Standards", "FileCheck - Flexible pattern matching file verifier", "bugpoint - automatic test case reduction tool", "dsymutil - manipulate archived DWARF debug symbol files", "LLVM Command Guide", "lit - LLVM Integrated Tester", "llc - LLVM static compiler", "lli - directly execute programs from LLVM bitcode", "&lt;no title&gt;", "llvm-ar - LLVM archiver", "llvm-as - LLVM assembler", "llvm-bcanalyzer - LLVM bitcode analyzer", "llvm-build - LLVM Project Build Utility", "llvm-config - Print LLVM compilation options", "llvm-cov - emit coverage information", "llvm-cxxfilt - LLVM symbol name demangler", "llvm-cxxmap - Mangled name remapping tool", "llvm-diff - LLVM structural 'diff'", "llvm-dis - LLVM disassembler", "llvm-dwarfdump - dump and verify DWARF debug information", "llvm-exegesis - LLVM Machine Instruction Benchmark", "llvm-extract - extract a function from an LLVM module", "llvm-lib - LLVM lib.exe compatible library tool", "llvm-link - LLVM bitcode linker", "llvm-lipo - LLVM tool for manipulating universal binaries", "llvm-mca - LLVM Machine Code Analyzer", "llvm-nm - list LLVM bitcode and object file's symbol table", "llvm-objcopy - object copying and editing tool", "llvm-objdump - LLVM's object file dumper", "llvm-pdbutil - PDB File forensics and diagnostics", "llvm-profdata - Profile data tool", "&lt;no title&gt;", "llvm-readelf - GNU-style LLVM Object Reader", "llvm-readobj - LLVM Object Reader", "&lt;no title&gt;", "llvm-stress - generate random .ll files", "&lt;no title&gt;", "&lt;no title&gt;", "llvm-symbolizer - convert addresses into source code locations", "opt - LLVM optimizer", "tblgen - Target Description To C++ Code Generator", "CommandLine 2.0 Library Manual", "Compiling CUDA with clang", "Architecture &amp; Platform Information for Compiler Writers", "Contributing to LLVM", "Coroutines in LLVM", "LLVM Code Coverage Mapping Format", "Debugging JIT-ed Code With GDB", "LLVM \u958b\u767c\u8005\u65b9\u91dd", "A guide to Dockerfiles for building LLVM", "Exception Handling in LLVM", "Extending LLVM: Adding instructions, intrinsics, types, etc.", "LLVM Extensions", "\u5e38\u898b\u554f\u984c\u96c6\uff08FAQ\uff09", "FaultMaps and implicit checks", "Performance Tips for Frontend Authors", "Fuzzing LLVM libraries and tools", "Garbage Collection with LLVM", "The Often Misunderstood GEP Instruction", "Getting Started with the LLVM System", "Getting Started with the LLVM System using Microsoft Visual Studio", "Global Instruction Selection", "The LLVM gold plugin", "How To Add Your Build Configuration To LLVM Buildbot Infrastructure", "How To Build On ARM", "How To Build Clang and LLVM with Profile-Guided Optimizations", "How to Cross Compile Compiler-rt Builtins For Arm", "How To Cross-Compile Clang/LLVM using Clang/LLVM", "How To Release LLVM To The Public", "How to set up LLVM-style RTTI for your class hierarchy", "How to submit an LLVM bug report", "How To Use Attributes", "How To Use Instruction Mappings", "Design and Usage of the InAlloca Attribute", "LLVMBuild Guide", "LLVM Language Reference Manual", "The LLVM Lexicon", "libFuzzer \u2013 a library for coverage-guided fuzz testing.", "LLVM Link Time Optimization: Design and Implementation", "MCJIT Design and Implementation", "Machine IR (MIR) Format Reference Manual", "}", "LLVM's Optional Rich Disassembly Output", "How to start LLVM Social in your town", "MemorySSA", "MergeFunctions pass, how it works", "User Guide for NVPTX Back-end", "ORC Design and Implementation", "Using -opt-bisect-limit to debug optimization errors", "CodeView Symbol Records", "CodeView Type Records", "The PDB DBI (Debug Info) Stream", "The PDB Global Symbol Stream", "The PDB Serialized Hash Table Format", "The Module Information Stream", "The MSF File Format", "The PDB Info Stream (aka the PDB Stream)", "The PDB Public Symbol Stream", "The PDB TPI and IPI Streams", "The PDB File Format", "Advice on Packaging LLVM", "LLVM's Analysis and Transform Passes", "Code Reviews with Phabricator", "LLVM Programmer's Manual", "Creating an LLVM Project", "Moving LLVM Projects to GitHub", "Test-Suite Extentions", "Variable Names Plan", "Vectorization Plan", "LLVM 9.0.0 Release Notes", "How To Validate a New Release", "Remarks", "Reporting Guide", "Scudo Hardened Allocator", "Segmented Stacks in LLVM", "Source Level Debugging with LLVM", "}", "Sphinx Quickstart Template", "Stack maps and patch points in LLVM", "Stack Safety Analysis", "Garbage Collection Safepoints in LLVM", "Support Library", "System Library", "TableGen BackEnds", "TableGen Deficiencies", "TableGen Language Introduction", "TableGen Language Reference", "TableGen", "TableGen Fundamentals", "test-suite Guide", "test-suite Makefile Guide (deprecated)", "LLVM \u6e2c\u8a66\u57fa\u790e\u8a2d\u65bd\u6307\u5357", "Code Transformation Metadata", "Type Metadata", "Auto-Vectorization in LLVM", "Writing an LLVM Backend", "Writing an LLVM Pass", "XRay Instrumentation", "Debugging with XRay", "XRay Flight Data Recorder Trace Format", "YAML I/O", "Overview", "<span class=\"section-number\">1. </span>Building a JIT: Starting out with KaleidoscopeJIT", "<span class=\"section-number\">2. </span>Building a JIT: Adding Optimizations -- An introduction to ORC Layers", "<span class=\"section-number\">3. </span>Building a JIT: Per-function Lazy Compilation", "<span class=\"section-number\">4. </span>Building a JIT: Extreme Laziness - Using Compile Callbacks to JIT from ASTs", "<span class=\"section-number\">5. </span>Building a JIT: Remote-JITing -- Process Isolation and Laziness at a Distance", "<span class=\"section-number\">1. </span>Kaleidoscope: Tutorial Introduction and the Lexer", "<span class=\"section-number\">2. </span>Kaleidoscope: Implementing a Parser and AST", "<span class=\"section-number\">3. </span>Kaleidoscope: Code generation to LLVM IR", "<span class=\"section-number\">4. </span>Kaleidoscope: Adding JIT and Optimizer Support", "<span class=\"section-number\">5. </span>Kaleidoscope: Extending the Language: Control Flow", "<span class=\"section-number\">6. </span>Kaleidoscope: Extending the Language: User-defined Operators", "<span class=\"section-number\">7. </span>Kaleidoscope: Extending the Language: Mutable Variables", "<span class=\"section-number\">8. </span>Kaleidoscope: Compiling to Object Code", "<span class=\"section-number\">9. </span>Kaleidoscope: Adding Debug Information", "<span class=\"section-number\">10. </span>Kaleidoscope: Conclusion and other useful LLVM tidbits", "Kaleidoscope: Kaleidoscope Introduction and the Lexer", "Kaleidoscope: Implementing a Parser and AST", "Kaleidoscope: Code generation to LLVM IR", "Kaleidoscope: Adding JIT and Optimizer Support", "Kaleidoscope: Extending the Language: Control Flow", "Kaleidoscope: Extending the Language: User-defined Operators", "Kaleidoscope: Extending the Language: Mutable Variables", "Kaleidoscope: Compiling to Object Code", "Kaleidoscope: Adding Debug Information", "Kaleidoscope: Conclusion and other useful LLVM tidbits", "My First Language Frontend with LLVM Tutorial", "<span class=\"section-number\">1. </span>Kaleidoscope: Tutorial Introduction and the Lexer", "<span class=\"section-number\">2. </span>Kaleidoscope: Implementing a Parser and AST", "<span class=\"section-number\">3. </span>Kaleidoscope: Code generation to LLVM IR", "<span class=\"section-number\">4. </span>Kaleidoscope: Adding JIT and Optimizer Support", "<span class=\"section-number\">5. </span>Kaleidoscope: Extending the Language: Control Flow", "<span class=\"section-number\">6. </span>Kaleidoscope: Extending the Language: User-defined Operators", "<span class=\"section-number\">7. </span>Kaleidoscope: Extending the Language: Mutable Variables", "<span class=\"section-number\">8. </span>Kaleidoscope: Conclusion and other useful LLVM tidbits", "LLVM Tutorial: Table of Contents", "yaml2obj"], "titleterms": {"000": 401, "0x0006": 493, "0x000a": 494, "0x000e": 494, "0x0014": 494, "0x1001": 494, "0x1002": 494, "0x1008": 494, "0x1009": 494, "0x1012": 493, "0x1101": 493, "0x1102": 493, "0x1103": 493, "0x1105": 493, "0x1106": 493, "0x1107": 493, "0x1108": 493, "0x110b": 493, "0x110c": 493, "0x110e": 493, "0x110f": 493, "0x1110": 493, "0x1111": 493, "0x1112": 493, "0x1113": 493, "0x1116": 493, "0x111c": 493, "0x111d": 493, "0x1124": 493, "0x1125": 493, "0x1127": 493, "0x112c": 493, "0x112d": 493, "0x1136": 493, "0x1137": 493, "0x1138": 493, "0x1139": 493, "0x113a": 493, "0x113c": 493, "0x113d": 493, "0x113e": 493, "0x113f": 493, "0x1140": 493, "0x1141": 493, "0x1142": 493, "0x1143": 493, "0x1144": 493, "0x1145": 493, "0x1146": 493, "0x1147": 493, "0x114c": 493, "0x114d": 493, "0x114e": 493, "0x114f": 493, "0x1153": 493, "0x1155": 493, "0x1156": 493, "0x115a": 493, "0x115b": 493, "0x115e": 493, "0x1167": 493, "0x1168": 493, "0x1201": 494, "0x1203": 494, "0x1205": 494, "0x1206": 494, "0x1400": 494, "0x1401": 494, "0x1402": 494, "0x1404": 494, "0x1409": 494, "0x1502": 494, "0x1503": 494, "0x1504": 494, "0x1505": 494, "0x1506": 494, "0x1507": 494, "0x1509": 494, "0x150d": 494, "0x150e": 494, "0x150f": 494, "0x1510": 494, "0x1511": 494, "0x1515": 494, "0x1519": 494, "0x151a": 494, "0x151d": 494, "0x1601": 494, "0x1602": 494, "0x1603": 494, "0x1604": 494, "0x1605": 494, "0x1606": 494, "0x1607": 494, "0xf0": 494, "10": 401, "11": 404, "2017": 510, "32": 410, "__atomic_": 390, "__device__": 446, "__host__": 446, "__nvvm_reflect": 490, "__sync_": 390, "_global__i_a": 457, "a16": 384, "aa": [389, 505], "aapc": 392, "aarch64": [447, 470, 513], "abandon": 506, "abbrevi": 393, "abi": [386, 402, 447, 454, 507], "abl": 489, "about": [448, 457, 509], "abs": 384, "absolut": [385, 445], "absolute_symbol": 479, "abstract": [393, 459, 461, 479, 510, 512, 524, 525, 552, 562, 573], "acceler": 519, "access": [402, 452, 479, 489, 509], "accur": 479, "achiev": [396, 507], "acquir": 390, "acquirereleas": 390, "acronym": 511, "action": 465, "activ": 396, "adc": [389, 505], "add": [387, 445, 455, 459, 462, 467, 479, 491, 492, 507, 547, 554, 559, 564, 569, 575], "addescapingus": 389, "addit": [386, 409, 513], "addpreserv": 540, "addr": 519, "addr64": 384, "addrequir": 540, "addrequiredtransit": 540, "address": [386, 402, 442, 456, 462, 479, 483, 490, 537], "addressofreturnaddress": 479, "addrspacecast": 479, "adjust": [479, 557, 567, 578], "administr": 472, "adt": 507, "advanc": [450, 481, 507, 580], "advantag": 511, "advertis": 487, "advic": [397, 504], "advisori": 516, "afl": 481, "after": [404, 482, 509, 516], "aggreg": [459, 465, 479, 505], "aggress": 505, "ahead": [559, 569], "aid": 507, "aka": 500, "algorithm": [402, 446, 507, 510], "alia": [389, 402, 445, 462, 479, 505, 538], "alias": [402, 445, 459, 479, 489], "aliasanalysi": 389, "aliassettrack": 389, "align": [392, 393, 459, 499], "all": [457, 505, 509, 558, 568], "alloc": [402, 449, 507, 517, 518, 519], "alloca": [459, 479, 518], "allow": 445, "along": [489, 524], "also": [404, 406, 407, 409, 410, 411, 413, 414, 415, 419, 422, 423, 425, 430, 431, 432, 436, 437, 442], "altern": [445, 470, 482, 524], "alway": [462, 505], "always_inlin": 505, "ambigu": 536, "amd_kernel_code_t": 386, "amdgcn": 386, "amdgcn_target": 386, "amdgpu": [382, 383, 384, 385, 386, 402, 447, 513], "amdgpu_hsa_kernel": 386, "amdgpu_metadata": 386, "amdhsa": 386, "amdhsa_kernel": 386, "amdpal": 386, "an": [425, 445, 457, 462, 463, 464, 474, 507, 508, 509, 539, 540, 547], "analysi": [389, 402, 424, 462, 505, 523, 530, 538, 540, 541], "analysisusag": 540, "analyz": [415, 429, 533], "anchor": 404, "and": [383, 386, 387, 389, 390, 392, 394, 397, 398, 401, 402, 404, 423, 429, 430, 431, 432, 433, 437, 445, 446, 447, 449, 452, 455, 457, 458, 459, 460, 461, 462, 463, 465, 469, 470, 471, 473, 477, 479, 482, 483, 488, 489, 491, 497, 499, 502, 505, 506, 507, 509, 512, 513, 519, 521, 522, 524, 529, 533, 535, 536, 539, 540, 543, 545, 550, 551, 552, 553, 554, 560, 561, 562, 563, 564, 570, 572, 573, 574, 575, 579], "ani": 481, "annot": [479, 486], "announc": 472, "anonym": [404, 505], "anoth": 507, "api": [402, 452, 457, 465, 486, 491, 507, 509, 515, 546], "appeal": 516, "append": 386, "appl": 388, "applic": [510, 541], "approach": 482, "aql": 386, "ar": 413, "arc": 479, "arcanist": 506, "arch": 386, "architectur": [386, 447, 470, 522, 524], "archiv": [407, 413, 463], "are": [402, 457], "area": [449, 479], "argpromot": [389, 505], "argument": [386, 401, 445, 449, 479, 505, 507, 529], "arithmet": [402, 462, 479], "arm": [392, 447, 456, 468, 470, 471, 513], "arm64": 456, "armneon": 527, "armneonsema": 527, "armneontest": 527, "armv6": 470, "armv7": 470, "array": [450, 456, 462, 479, 507], "arrayref": 507, "as": [404, 414, 445, 457, 460, 490], "ashr": 479, "asm": [402, 454, 479], "asmmatch": 527, "asmwrit": 527, "assembl": [386, 392, 402, 414, 456, 460, 461, 479, 539], "assert": 404, "assign": [505, 557, 567, 578], "associ": [479, 489], "assum": 479, "ast": [549, 552, 555, 562, 565, 573, 576], "at": [505, 509, 550], "atom": [390, 479, 505], "atomicrmw": 479, "attent": 449, "attr": [8, 106, 190, 287], "attrbuild": 475, "attrdoc": 527, "attribut": [386, 445, 446, 452, 475, 477, 479, 484, 505, 519, 541, 542], "attributelist": 475, "audienc": 539, "author": 459, "auto": [404, 538], "automat": [397, 406, 479], "autoreleas": 479, "autoreleasepoolpop": 479, "autoreleasepoolpush": 479, "autoreleasereturnvalu": 479, "autotool": 466, "avail": [389, 460, 461], "avoid": [404, 449, 459], "awar": 473, "back": [429, 457, 490, 527], "backend": [386, 402, 462, 513, 527, 529, 539], "background": [399, 451, 454, 473, 519], "backward": 452, "bake": 524, "bang": 511, "bank": 465, "bank_mask": 384, "barrier": [461, 490], "barrier0": 490, "base": [402, 404, 446, 457, 462, 473, 505, 507, 513, 524], "basic": [393, 400, 408, 434, 453, 459, 473, 479, 484, 489, 505, 507, 509, 539, 540, 541, 546, 551, 552, 562, 572, 573], "basicaa": [389, 505], "basicblock": [489, 507], "basicblockpass": 540, "basiccg": 505, "bb": 505, "bcanalyz": 415, "be": [389, 445, 462, 473, 489, 521], "befor": [404, 509], "begin": 449, "begincatch": 454, "behavior": 389, "behaviour": 456, "behind": 519, "benchmark": [391, 424, 469, 510], "berkeley": 402, "best": 459, "between": [398, 446, 462, 482, 507, 540], "bewar": 404, "bias": 394, "big": [392, 511], "bigger": 448, "binari": [385, 428, 431, 457, 472, 479, 552, 556, 562, 566, 573, 577], "binutil": 408, "bisect": [492, 509], "bit": [393, 445, 479, 497, 507], "bitcast": 479, "bitcod": [393, 411, 415, 427, 430, 457, 482], "bitconvert": 392, "bitrevers": 479, "bitstream": 393, "bitvalu": 544, "bitvector": 507, "bitwis": 479, "blame": 511, "blitz": 510, "block": [393, 394, 404, 405, 429, 479, 484, 499, 505, 507, 544], "blockinfo": 393, "bodi": [505, 530], "boolean": 445, "bootstrap": 388, "both": [463, 493], "bound": 462, "bound_ctrl": 384, "boundari": 499, "bpf_ab": 402, "bpf_ind": 402, "br": 479, "brace": 404, "branch": [394, 395, 472, 505, 509, 539], "branch_weight": 479, "branchinst": 395, "break": [505, 507], "breakpoint": 540, "bridg": 509, "bswap": 479, "bug": [396, 421, 428, 430, 431, 432, 448, 460, 473, 474, 514, 524], "bugpoint": [397, 406, 505], "build": [387, 388, 398, 416, 453, 457, 460, 466, 467, 468, 469, 470, 471, 472, 478, 481, 488, 507, 508, 509, 513, 540, 542, 546, 547, 548, 549, 550, 580], "buildbot": 467, "builder": 467, "buildmast": 467, "built": [395, 401, 402, 461, 544], "builtin": [445, 470], "bundl": [402, 479, 484], "but": [470, 481], "by": [396, 449, 457, 462, 505], "byte": 433, "c99": 456, "cach": [400, 470], "call": [389, 402, 404, 456, 457, 477, 479, 505, 507, 538, 539], "callabl": 507, "callargu": 543, "callback": [479, 549], "callbr": 479, "calle": [477, 479], "callgraph": [505, 540], "callgraphsccpass": 540, "callingconv": 527, "callinst": 395, "calllow": 465, "callsit": [454, 505, 507], "caml": 580, "can": [457, 459, 462, 493], "candid": 472, "canonic": [479, 505], "cantfail": 507, "case": [406, 452, 491, 541], "cast": [462, 507], "catch": 454, "catchpad": 479, "catchret": 479, "catchswitch": 479, "categori": [445, 493, 494], "cc": 396, "ceil": 479, "cfg": [395, 505], "cfiindex": 484, "chain": [389, 463, 464, 507], "chang": [452, 463, 506, 507, 509, 513, 519, 553, 563, 574], "chapter": [546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "charact": [393, 405], "check": [405, 458, 479, 505, 507, 538], "checkout": [463, 509], "choos": [453, 558, 568], "chrome": 542, "chunk": 517, "cl": 445, "clamp": 384, "clang": [388, 446, 460, 463, 468, 469, 470, 471, 472, 517, 527], "clangattrclass": 527, "clangattrdump": 527, "clangattrimpl": 527, "clangattrlist": 527, "clangattrparsedattrimpl": 527, "clangattrparsedattrkind": 527, "clangattrparsedattrlist": 527, "clangattrparserstringswitch": 527, "clangattrpchread": 527, "clangattrpchwrit": 527, "clangattrspel": 527, "clangattrspellinglistindex": 527, "clangattrtemplateinstanti": 527, "clangattrvisitor": 527, "clangcommentcommandinfo": 527, "clangcommentcommandlist": 527, "clangcommenthtmlnamedcharacterrefer": 527, "clangcommenthtmltag": 527, "clangcommenthtmltagsproperti": 527, "clangcommentnod": 527, "clangdeclnod": 527, "clangdiaggroup": 527, "clangdiagsdef": 527, "clangdiagsindexnam": 527, "clangsacheck": 527, "clangstmtnod": 527, "class": [389, 402, 404, 445, 446, 473, 476, 479, 507, 529, 530, 539, 540], "classof": 473, "cleanup": [454, 477], "cleanuppad": 479, "cleanupret": 479, "clear_cach": 479, "client": 389, "clobber": [402, 479, 488], "clone": 509, "close": [396, 505, 553, 563, 574], "cmake": [398, 400, 401, 470, 471], "cmath": 446, "cmp": 481, "cmpconstant": 489, "cmpgep": 489, "cmpoper": 489, "cmptype": 489, "cmpvalu": 489, "cmpxchg": 479, "co": 513, "code": [386, 397, 402, 403, 404, 411, 424, 429, 442, 444, 446, 450, 451, 452, 454, 457, 461, 463, 474, 479, 483, 484, 500, 505, 506, 507, 508, 511, 516, 519, 525, 529, 536, 539, 540, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "codeemitt": 527, "codegen": [390, 519], "codegenprepar": 505, "codeview": [456, 479, 493, 494, 498, 502, 503, 519], "coff": [431, 437, 456, 581], "collect": [445, 447, 461, 479, 524, 560, 570, 579], "collector": [461, 479], "color": 510, "combin": [402, 505], "comdat": 479, "command": [401, 408, 418, 428, 432, 434, 445, 506, 538], "commandlin": 445, "comment": [404, 529], "commit": [452, 463, 506, 509], "committe": 516, "common": [463, 464, 490, 507], "communic": 482, "communiti": [403, 472, 545], "compar": [462, 489], "comparison": 489, "compat": [426, 452, 481], "compil": [400, 404, 410, 417, 446, 447, 457, 463, 470, 471, 474, 479, 491, 504, 513, 533, 548, 549, 554, 558, 559, 564, 568, 569, 575], "complain": 490, "complex": [388, 446, 479, 507], "complexpattern": 465, "complic": 481, "compon": [396, 402, 417, 478, 512], "composit": 465, "compr": 384, "comprehens": 513, "compress": 479, "compressstor": 479, "comput": [386, 461, 462, 490, 513], "compute_pgm_rsrc1": 386, "compute_pgm_rsrc2": 386, "compute_pgm_rsrc3": 386, "concaten": 507, "concept": [450, 524, 540], "conclus": [552, 560, 562, 570, 573, 579], "concret": 473, "concurr": [390, 479], "condit": [479, 505], "conduct": [403, 516], "config": 417, "configur": [409, 410, 460, 463, 467, 471, 533, 534, 558, 568], "consid": 459, "consider": [392, 477, 507], "consist": [396, 404, 429, 525], "const": 489, "constant": [385, 456, 465, 479, 484, 505, 507, 519, 554, 564, 575], "constants_block": 393, "constmerg": 505, "constprop": 505, "constrain": [387, 479, 535], "constraint": [386, 479], "construct": [402, 457, 505], "constructor": [404, 507], "consum": [507, 519], "consumeaft": 445, "contain": [404, 433, 503, 507], "content": [386, 393, 519, 580], "context": 544, "contextu": 486, "continu": [404, 460], "contract": 473, "contribut": [448, 495], "control": [399, 401, 445, 446, 542, 555, 565, 576], "convent": [384, 385, 386, 402, 457, 477, 479, 490, 539], "convers": [385, 479, 490, 510, 538, 539], "convert": [442, 479], "copi": [404, 431, 477], "copyright": 452, "copysign": 479, "copyvalu": 389, "copyweak": 479, "coral": 510, "core": [465, 507, 524], "coreclr": 461, "coro": 449, "corocleanup": 449, "coroear": 449, "coroelid": 449, "corosplit": 449, "coroutin": 449, "corpus": 481, "cos": 479, "cost": [454, 511], "could": 489, "count": [395, 405, 479, 505, 538], "counter": [450, 507], "cov": 418, "cover": 404, "coverag": [418, 450, 481], "cpu": 510, "crash": [397, 474, 481], "creat": [472, 491, 507, 508, 540], "creation": 483, "crit": 505, "criteria": 472, "critic": 505, "cross": [400, 431, 463, 470, 471, 533], "ctag": 527, "ctlz": 479, "ctpop": 479, "cttz": 479, "cuda": 446, "current": [509, 511], "custom": [424, 445, 449, 461, 462, 465, 491, 507, 533, 534, 539, 544], "customeventmark": 543, "cv_def_rang": 456, "cv_file": 456, "cv_filechecksum": 456, "cv_filechecksumoffset": 456, "cv_fpo_data": 456, "cv_func_id": 456, "cv_inline_linet": 456, "cv_inline_site_id": 456, "cv_linet": 456, "cv_loc": 456, "cv_stringtabl": 456, "cxxfilt": 419, "cxxmap": 420, "cycl": 396, "d16": 384, "da": [384, 505], "dag": [394, 402, 405], "dagisel": 527, "darpa": 510, "data": [385, 386, 393, 402, 434, 450, 479, 490, 505, 507, 525, 541, 543, 544], "datalayout": 402, "date": 487, "dbg": [505, 519], "dbi": [433, 495], "dce": 505, "dead": 505, "deadargelim": 505, "deadarghax0r": 505, "deadtypeelim": 505, "deal": 396, "dealloc": 449, "debug": [386, 389, 407, 408, 423, 451, 479, 492, 495, 505, 507, 519, 535, 542, 559, 569], "debug_typ": 507, "debugg": [397, 479, 505, 519], "debugifi": 519, "debuginfo": 505, "debugtrap": 479, "declar": [465, 505, 519, 530], "decod": 505, "deconstruct": 402, "deduc": 505, "deduct": 404, "deep": 521, "deeper": 473, "def": [507, 530], "default": [396, 404, 544], "defici": [528, 531], "defin": [404, 409, 539, 556, 557, 566, 567, 577, 578], "define_abbrev": 393, "definit": [404, 415, 480, 512, 522, 529], "defm": 530, "defset": 530, "delay": 517, "delet": [497, 505, 507], "deletevalu": 389, "demangl": [419, 460], "demo": [457, 472], "demot": 505, "denorm": 386, "densemap": 507, "denseset": 507, "deoptim": 479, "depend": [389, 456, 479, 484, 504, 505], "deprec": [463, 506, 533, 534], "dequ": 507, "dereferenc": [401, 462], "deriv": [455, 507, 524], "describ": 459, "descript": [397, 402, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 442, 443, 444, 482, 509], "descriptor": 386, "design": [397, 399, 402, 462, 477, 482, 483, 488, 491, 507, 512, 513, 517], "destroy": 449, "destroyweak": 479, "detail": [404, 415, 486, 518, 519, 538], "detect": [446, 505, 510], "determin": [388, 404, 445], "determinist": 404, "develop": [400, 408, 452, 463, 481, 509, 538, 545], "deviat": [82, 170, 267, 364], "devic": [446, 533], "dfapacket": 527, "dfmt": 384, "diagnos": 429, "diagnost": [433, 515, 538], "dialect": 446, "dibasictyp": 479, "dicompileunit": 479, "dicompositetyp": 479, "dictionari": 481, "did": 457, "diderivedtyp": 479, "didn": 511, "die": 505, "dienumer": 479, "diexpress": 479, "diff": [421, 515], "differ": [389, 398, 437, 446, 462, 534], "differenti": 511, "difil": 479, "diflag": 479, "diglobalvari": 479, "diglobalvariableexpress": 479, "diimportedent": 479, "dilexicalblock": 479, "dilexicalblockfil": 479, "diloc": 479, "dilocalvari": 479, "dim": 384, "dimacro": 479, "dimacrofil": 479, "dinamespac": 479, "diobjcproperti": 479, "direct": [386, 389, 402, 405, 411, 456, 479, 522, 538], "directori": [463, 499], "dis": 422, "disabl": 479, "disable_nonforc": 479, "disadvantag": 511, "disassembl": [402, 422, 460, 486, 527], "discoveri": 409, "disk": 497, "dispatch": [386, 429], "display": 533, "dissect": [450, 490], "distanc": [462, 550], "distinct": 449, "distribut": [398, 472, 479, 536], "disubprogram": 479, "disubrang": 479, "disubroutinetyp": 479, "ditemplatetypeparamet": 479, "ditemplatevalueparamet": 479, "dither": 510, "dlc": 384, "dll": 479, "dmask": 384, "do": [397, 404, 457, 462, 489, 505], "doc": 447, "docker": 453, "dockerfil": 453, "document": [386, 387, 399, 404, 447, 459, 472, 489, 544, 545], "doe": [457, 462, 481, 540], "doesn": 481, "doesnotaccessmemori": 389, "dofin": 540, "doiniti": 540, "dom": 505, "domfronti": 505, "domin": 505, "domtre": 505, "don": [404, 457, 462, 525], "done": [384, 449], "donoth": 479, "dot": 505, "downstream": 511, "doxygen": 404, "dpp": 384, "dpp16": [0, 384], "dpp16_ctrl": 384, "dpp8": [0, 384], "dpp8_sel": 384, "dpp_ctrl": 384, "drawback": 509, "driven": 389, "driver": [552, 553, 562, 563, 573, 574], "ds": [0, 1, 2, 3, 384, 386, 389], "dse": [389, 505], "dst": [49, 134, 234, 329], "dst_sel": 384, "dst_unus": 384, "dsymutil": 407, "due": 404, "dump": [423, 433], "dumper": 432, "duplic": [505, 525], "dure": [519, 538], "dwarf": [386, 407, 423, 519, 559, 569], "dwarfdump": [423, 460], "dyn_cast": 507, "dynam": [402, 445, 479, 540], "e_flag": 386, "each": 505, "earli": 404, "ebpf": 402, "ec": 495, "ed": 451, "edg": [505, 524], "edit": 431, "ef_amdgpu_mach": 386, "effect": [459, 462], "effici": [389, 477], "eh": [454, 505], "either": 493, "element": [404, 462, 479], "elf": [386, 431, 437, 456], "elimin": 505, "elis": 477, "els": [401, 404, 555, 565, 576], "elseif": 401, "email": 509, "embed": [400, 484], "emiss": [402, 456, 559, 569], "emit": [402, 418, 461, 515, 558, 568], "emitt": 539, "empti": 405, "enabl": [479, 515], "encod": [383, 386, 393, 402, 450], "end": [404, 410, 449, 457, 462, 474, 479, 490, 507, 519, 527], "end_block": 393, "endcatch": 454, "endian": 392, "endl": 404, "endofbuff": 543, "engin": 483, "enhanc": 524, "enough": 397, "enter_subblock": 393, "entiti": 529, "entri": [395, 479, 505, 522], "enumer": [386, 404], "environ": [386, 479, 513, 540], "epilog": 402, "equal": 404, "equival": 479, "erlang": 461, "error": [404, 492, 507, 517, 519, 525, 544], "error_cod": 507, "erroror": 507, "etc": [455, 507], "eval": [389, 505], "evalu": [389, 404, 505], "event": 545, "everi": 404, "evolut": 505, "exact": 481, "exampl": [386, 392, 409, 417, 419, 424, 434, 442, 449, 451, 461, 463, 464, 466, 476, 479, 481, 482, 492, 507, 521, 540], "except": [404, 454, 477, 479, 505, 524], "exceptionpoint": 454, "exe": 426, "exec": 385, "execut": [386, 400, 409, 411, 490, 500, 507, 535], "execz": 385, "exegesi": 424, "exhaust": 505, "exist": [389, 540, 557, 567, 578], "exit": [404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 427, 429, 430, 431, 434, 436, 437, 439, 442, 443, 444, 505], "exitonerror": 507, "exp": [0, 1, 2, 3, 384, 479], "exp2": 479, "expand": [479, 539], "expandload": 479, "expans": 519, "expect": [395, 479], "experi": 509, "experiment": [479, 522, 524], "explicit": 524, "exploit": 445, "explor": 542, "export": 418, "expos": 525, "express": [385, 450, 454, 479, 505, 529, 552, 553, 555, 562, 563, 565, 573, 574, 576], "extend": [386, 402, 455, 555, 556, 557, 565, 566, 567, 576, 577, 578], "extens": [445, 456, 519, 540, 555, 565, 576], "extent": 510, "extern": [445, 484, 505, 513, 533, 534, 580], "externalfnconst": 505, "extra": [429, 462, 535], "extract": [425, 505], "extractel": 479, "extractvalu": 479, "extrahelp": 445, "extrem": 549, "fab": 479, "fadd": 479, "fail": 470, "fair": 511, "fallibl": 507, "faq": [457, 481], "fast": 479, "fastisel": [465, 527], "fault": 458, "faultmap": 458, "fcmp": 479, "fconst": 385, "fdiv": 479, "featur": [386, 402, 404, 461, 481, 491, 500, 504, 510, 535, 538], "fenc": 479, "ffmpeg": 510, "fi": 384, "fidel": 542, "field": 489, "file": [393, 402, 404, 405, 407, 409, 413, 420, 430, 432, 433, 439, 445, 450, 463, 470, 482, 484, 495, 499, 503, 505, 515, 516, 519, 529, 535, 541], "filecheck": 405, "filenam": 479, "filter": [402, 433, 454], "final": [449, 472, 483], "find": [459, 460, 505, 506, 507], "findregress": 514, "fine": [481, 507], "finer": 492, "firehos": 510, "first": [462, 479, 571], "fix": [393, 396, 402, 448, 479, 489, 507, 519], "flag": [445, 446, 479, 484, 504, 538], "flame": 542, "flat": [0, 1, 2, 3, 384, 386], "flat_scratch": 385, "flexibl": 405, "flight": [541, 543], "float": [385, 386, 387, 411, 456, 470, 479], "floor": 479, "flow": [399, 401, 429, 544, 555, 565, 576], "fma": 479, "fmax": 479, "fmin": 479, "fmul": 479, "fmuladd": 479, "fn": 505, "fneg": 479, "fold": [402, 539, 554, 564, 575], "foldingset": 507, "follow": [462, 489], "followup": 479, "followup_al": 479, "followup_coincid": 479, "followup_epilogu": 479, "followup_fallback": 479, "followup_inn": 479, "followup_out": 479, "followup_remaind": 479, "followup_remainder_inn": 479, "followup_remainder_out": 479, "followup_sequenti": 479, "followup_vector": 479, "for": [386, 389, 397, 398, 402, 404, 428, 447, 453, 454, 457, 459, 460, 462, 463, 465, 466, 470, 473, 479, 481, 490, 505, 507, 508, 509, 510, 513, 519, 524, 534, 537, 555, 557, 565, 567, 576, 578], "forbidden": 404, "forc": 505, "foreach": 530, "forens": 433, "fork": 481, "form": [402, 505], "format": [393, 402, 404, 409, 413, 431, 437, 445, 450, 454, 460, 478, 484, 497, 499, 503, 507, 519, 522, 524, 543], "formatv": 507, "formed": 479, "fortran": 519, "fp16": 479, "fpext": 479, "fpmath": 479, "fptosi": 479, "fptoui": 479, "fptrunc": 479, "fragil": 535, "frame": [402, 449, 454, 560, 570, 579], "frameaddress": 479, "framework": 452, "free": [449, 499], "freeform": 445, "freelist": 517, "freepooma": 510, "frem": 479, "frequenc": 394, "frequent": 400, "friend": 481, "from": [394, 402, 411, 425, 445, 446, 462, 463, 471, 479, 491, 505, 506, 507, 549], "front": [462, 474, 519], "frontend": [459, 571], "frontier": 505, "fshl": 479, "fshr": 479, "fsub": 479, "ft": 401, "ftensor": 510, "full": [479, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "fulli": 404, "funclet": [454, 479], "function": [395, 401, 402, 404, 425, 445, 449, 450, 455, 457, 479, 484, 489, 490, 505, 507, 519, 525, 538, 540, 541, 543, 548, 553, 559, 563, 569, 574], "function_block": 393, "function_entry_count": 479, "function_ref": 507, "functionattr": 505, "functioncompar": 489, "functionpass": 540, "fundament": [455, 532], "further": [429, 508, 542], "futur": [402, 465, 491, 540, 541], "fuzz": [460, 481], "fuzzer": [460, 481], "fx": [38, 318], "garbag": [461, 479, 524, 560, 570, 579], "gather": [479, 538], "gc": [461, 479, 524], "gcmetadataprint": 461, "gcov": 418, "gcread": [461, 479], "gcroot": 479, "gcs": [461, 524], "gcwrite": [461, 479], "gdb": [451, 540], "gds": 384, "gen": 490, "general": [391, 398, 402, 409, 411, 437, 456, 479, 487, 507, 527, 543], "generat": [397, 402, 411, 439, 444, 454, 457, 460, 461, 474, 479, 483, 484, 505, 529, 534, 542, 553, 555, 563, 565, 574, 576], "generic": [413, 431, 460, 465, 510], "geometr": 510, "gep": [459, 462], "get": [394, 463, 464, 479, 481, 492, 542], "getanalysi": 540, "getanalysisifavail": 540, "getanalysisusag": 540, "getelementptr": [457, 479], "getmodrefinfo": 389, "getposit": 445, "getregisteredopt": 445, "gfx10": [0, 386], "gfx6": 386, "gfx7": 1, "gfx8": 2, "gfx9": 3, "gfx_generation_minor": 386, "gfx_generation_numb": 386, "gfx_generation_step": 386, "git": [463, 509, 511], "github": 509, "given": 470, "glc": 384, "global": [386, 465, 479, 484, 489, 493, 496, 505, 519, 538], "global_ctor": [457, 479], "global_dtor": 479, "globaldc": 505, "globalisel": 465, "globalopt": 505, "globalsmodref": [389, 505], "globalvalu": 507, "globalvari": 507, "gnu": [408, 436], "gnupg": 510, "go": [457, 493], "goal": [461, 488], "gold": 466, "good": 481, "got": 474, "grain": 507, "grammar": 543, "granular": 492, "graph": [456, 505, 507, 510, 542], "graph500": 510, "graphic": 386, "group": [445, 479, 540], "guarante": [560, 570, 579], "guard": 479, "guid": [386, 390, 408, 445, 453, 469, 478, 481, 484, 490, 505, 516, 533, 534, 545], "guidanc": 398, "guidelin": [512, 521], "gvn": [389, 505], "hack": [471, 505], "half": [479, 524], "handi": 491, "handl": [401, 402, 454, 479, 505, 507, 544], "handler": [386, 507], "happen": [457, 462, 516], "har": 510, "hard": [557, 559, 567, 569, 578], "harden": 517, "hardwar": [447, 463, 464], "hasglobalalias": 489, "hash": [497, 519], "have": 462, "hcc": 386, "header": [386, 404, 450, 470, 495, 500, 502, 517, 519, 525, 543], "heap": [449, 461, 507], "hello": 540, "help": [445, 446, 448, 457, 507, 508], "hex": 544, "hexadecim": 456, "hexagon": 447, "hide": 445, "hierarchi": [473, 507], "hierchari": 507, "high": [384, 402, 404, 450, 479, 484, 510, 512, 525], "higher": 457, "hint": [507, 538], "histori": 509, "hope": 521, "host": [446, 457, 463, 470, 487], "how": [387, 396, 402, 429, 448, 457, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 481, 487, 489, 491, 514, 519, 523, 527], "hpcs": 510, "hsa": 386, "hsa_code_object_isa": 386, "hsa_code_object_vers": 386, "hwreg": [36, 126, 221, 315], "hydrobench": 510, "hyphen": 445, "i32": 462, "ia": 410, "ia64": 447, "ibm": 447, "icmp": 479, "iconst": 385, "id": [386, 449, 450, 479], "idea": [399, 524, 556, 566, 577], "identif": 386, "identifi": [461, 479], "ids": 393, "idxen": 384, "if": [395, 401, 462, 489, 538, 539, 555, 565, 576], "ifunc": 479, "ilist": 507, "ilist_nod": 507, "ilist_trait": 507, "illinoi": 457, "imag": [386, 453, 510], "imm16": [12, 66, 83, 109, 146, 171, 193, 249, 268, 291, 346, 365], "imm3": [48, 233, 328], "imm32": [13, 34, 35, 110, 125, 194, 219, 220, 292, 313, 314], "imm4": [222, 316], "immedi": 484, "immutablemap": 507, "immutablepass": 540, "immutableset": 507, "impl": 505, "implement": [389, 392, 394, 402, 461, 479, 482, 483, 489, 491, 492, 507, 510, 518, 525, 539, 540, 552, 560, 562, 570, 573, 579, 580], "implicit": [386, 458], "implicitnullcheck": 458, "import": [465, 507, 509], "in": [392, 395, 396, 400, 401, 402, 404, 449, 454, 457, 461, 484, 487, 489, 493, 505, 507, 509, 513, 515, 518, 519, 522, 524, 538, 540, 541, 544, 557, 567, 578, 580], "inalloca": 477, "includ": [404, 457, 463, 525], "inclus": 529, "incorrect": 474, "increment": [452, 479], "indent": 404, "independ": [402, 457, 560, 570, 579], "index": [462, 479, 484, 492], "indexedmap": 507, "indic": [459, 462, 484, 502, 545], "indirect": 479, "indirectbr": 479, "indirectbrinst": 395, "individu": [484, 507], "induct": [505, 538], "indvar": 505, "info": [493, 495, 500, 505, 507, 519, 529, 539], "inform": [402, 404, 418, 423, 447, 448, 452, 465, 479, 498, 505, 507, 513, 519, 535, 537, 559, 569], "infrastructur": [389, 409, 467, 535], "init": 479, "initi": [386, 389, 402, 404, 461, 481, 507], "initweak": 479, "inlin": [385, 402, 404, 479, 505], "input": [431, 434, 460, 479, 544], "insert": [402, 507, 524], "insertel": 479, "insertvalu": 479, "inspect": 507, "instal": [398, 471], "instanc": 529, "instcombin": [457, 505], "instcount": 505, "instnam": 505, "instrinfo": 527, "instrmap": 476, "instrprof": 479, "instruct": [0, 1, 2, 3, 382, 383, 384, 385, 386, 390, 392, 395, 402, 424, 429, 454, 455, 457, 462, 465, 476, 479, 481, 484, 486, 505, 507, 519, 539, 542], "instructionselect": 465, "instructionselector": 465, "instrument": [541, 542], "integ": [385, 393, 462, 479], "integr": [409, 478, 479, 505], "intel": [391, 410], "intend": 477, "inteqclass": 507, "interact": [507, 540], "interchang": 536, "interfac": [389, 457, 506, 507, 525], "interleav": [479, 536], "intern": [386, 404, 445, 505], "interoper": 507, "interprocedur": 505, "interv": [402, 505], "intervalmap": 507, "into": [404, 442, 445, 457, 462, 505, 507], "intrins": [386, 387, 392, 449, 454, 455, 461, 479, 490, 505, 519, 522, 524, 527], "intrinsicid": 484, "introduct": [396, 402, 455, 474, 515, 521, 529, 540, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578], "inttoptr": [462, 479], "invalid": 488, "invari": [479, 505, 543], "invok": [446, 479, 505, 507], "iostream": [404, 457], "ipconstprop": 505, "ipi": 502, "iplist": 507, "ipsccp": 505, "ir": [386, 390, 392, 393, 450, 452, 457, 459, 460, 461, 462, 465, 484, 505, 507, 513, 553, 555, 560, 563, 565, 570, 574, 576, 579], "irc": 545, "irr_loop": 479, "irtransformlay": 547, "irtransl": 465, "is": [402, 404, 457, 461, 462, 479, 481, 509, 519, 540, 557, 559, 567, 569, 578], "isa": 507, "isel": 460, "isn": 397, "isol": [507, 550], "issu": [389, 404, 429, 490, 513], "it": [457, 462, 466, 489, 523, 558, 568], "itanium": [447, 454], "item": [386, 463], "iter": [465, 507, 538], "its": 500, "iv": 505, "ival": 385, "jam": [505, 536], "jit": [402, 451, 507, 539, 546, 547, 548, 549, 550, 554, 564, 575, 580], "jitdylib": 491, "jite": 550, "joinerror": 507, "json": 527, "jump": [402, 484, 505], "kaleidoscop": [551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "kaleidoscopejit": 546, "keep": [404, 511, 525], "kernel": [386, 490], "key": 544, "keyword": 404, "kick": [556, 566, 577], "kind": 511, "know": 489, "known": [513, 528], "kokko": 510, "label": [37, 127, 223, 317, 404, 405, 479], "laissez": 511, "lambda": 404, "lanai": 447, "landingpad": 479, "lane": 392, "languag": [404, 457, 459, 479, 513, 519, 529, 530, 551, 555, 556, 557, 560, 561, 565, 566, 567, 570, 571, 572, 576, 577, 578, 579, 580], "larg": 459, "late": 402, "launder": 479, "layer": [402, 404, 547], "layout": [402, 463, 479, 490, 498, 499, 503, 505, 507, 508, 519, 537], "lazi": [491, 505, 507, 548, 549, 550], "lcssa": 505, "ld1": 392, "ldc": 513, "ldr": 392, "lds": 384, "lds_direct": 385, "leaf": 494, "leak": 481, "leb128": 450, "leftov": 536, "legaci": 452, "legal": [402, 459, 465, 539], "legalizerinfo": 465, "legalizetyp": 402, "length": 456, "let": [529, 530], "level": [392, 402, 404, 445, 450, 457, 465, 479, 484, 491, 505, 512, 519, 525, 530], "lexer": [551, 555, 561, 565, 572, 576], "lexic": 530, "lexicon": 480, "lf_arglist": 494, "lf_array": 494, "lf_bclass": 494, "lf_binterfac": 494, "lf_bitfield": 494, "lf_buildinfo": 494, "lf_class": 494, "lf_endprecomp": 494, "lf_enum": 494, "lf_enumer": 494, "lf_fieldlist": 494, "lf_func_id": 494, "lf_index": 494, "lf_interfac": 494, "lf_ivbclass": 494, "lf_label": 494, "lf_member": 494, "lf_method": 494, "lf_methodlist": 494, "lf_mfunc_id": 494, "lf_mfunction": 494, "lf_modifi": 494, "lf_nesttyp": 494, "lf_onemethod": 494, "lf_padn": 494, "lf_pointer": 494, "lf_precomp": 494, "lf_procedur": 494, "lf_stmember": 494, "lf_string_id": 494, "lf_structur": 494, "lf_substr_list": 494, "lf_typeserver2": 494, "lf_udt_mod_src_lin": 494, "lf_udt_src_lin": 494, "lf_union": 494, "lf_vbclass": 494, "lf_vftabl": 494, "lf_vfunctab": 494, "lf_vtshape": 494, "lib": [426, 463, 479], "libcal": [390, 505], "libdevic": 490, "liber": 404, "libfuzz": 481, "liblto": 482, "libm": 479, "libprotobuf": 460, "librari": [398, 404, 426, 445, 446, 456, 460, 463, 479, 481, 491, 504, 507, 508, 510, 517, 525, 526, 541], "licens": [452, 457, 466], "licm": [389, 505, 536], "licm_vers": 479, "life": 396, "lifetim": [477, 479, 519], "like": [404, 457, 507], "limit": [389, 484, 492, 524, 537], "line": [386, 445, 506, 538], "link": [427, 463, 464, 466, 482, 490], "linkag": [479, 491], "linker": [427, 456, 479, 482], "linkonc": 456, "lint": 505, "linux": [391, 447], "lipo": 428, "list": [401, 404, 430, 445, 447, 479, 502, 507, 513, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 578], "lit": 409, "liter": 385, "littl": 404, "live": [402, 484], "livedebugvalu": 519, "ll": 439, "llc": 410, "lldb": 513, "lli": 411, "lljit": 491, "lllazyjit": 491, "llrint": 479, "llround": 479, "llvm": [386, 389, 390, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 442, 443, 448, 449, 450, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 479, 480, 481, 482, 486, 487, 490, 504, 505, 507, 508, 509, 512, 513, 515, 518, 519, 522, 524, 525, 527, 535, 538, 539, 540, 541, 542, 545, 553, 554, 555, 557, 560, 563, 564, 565, 567, 570, 571, 574, 575, 576, 578, 579, 580], "llvm_debug": 507, "llvm_shutdown": 507, "llvmbuild": 478, "llvmcontext": 507, "lnt": 533, "load": [402, 429, 459, 479, 483, 540], "loadweak": 479, "loadweakretain": 479, "local": [409, 463, 479, 509, 557, 567, 578], "localescap": 479, "localrecov": 479, "locat": [399, 442, 463, 488, 519, 559, 569], "log": [479, 489], "log10": 479, "log2": 479, "logarithm": 489, "long": 511, "longjmp": 454, "look": 459, "lookup": 519, "loop": [394, 401, 404, 479, 505, 529, 536, 538, 540, 555, 565, 576], "looppass": 540, "low": [404, 465], "lower": [461, 462, 465, 479, 505, 524], "loweratom": 505, "lowerinvok": 505, "lowerswitch": 505, "lppassmanag": 540, "lrint": 479, "lround": 479, "lsda": 454, "lshr": 479, "lto": 466, "lto_code_gen_t": 482, "lto_module_t": 482, "lwe": 384, "m0": [385, 386], "m_op_sel": 384, "m_op_sel_hi": 384, "mach": [430, 432, 437, 442, 519], "machin": [402, 424, 429, 456, 459, 465, 484, 524, 539, 558, 568], "machine_version_major": 386, "machine_version_minor": 386, "machine_version_step": 386, "machinebasicblock": 402, "machinefunct": [402, 540], "machinefunctionpass": 540, "machineinstr": 402, "machineinstrbuild": 402, "machineverifi": 465, "machsuit": 510, "maco": 447, "macro": [401, 507, 544], "magic": 393, "mail": 545, "main": 489, "maintain": 465, "mainten": 396, "major": [386, 452], "make": [404, 452, 457, 458, 507], "makefil": [508, 533, 534], "man": 509, "manag": [491, 509], "managedstat": 507, "mangl": 420, "manipul": [407, 428, 449, 479], "manual": [445, 447, 479, 484, 507], "map": [386, 402, 450, 458, 461, 476, 479, 495, 499, 500, 507, 522, 524, 539, 544], "mapvector": 507, "mark": 490, "marker": [429, 479], "markup": 486, "mask": 479, "mass": 394, "match": [402, 405, 500], "math": [446, 479], "matrix": 402, "mattr": 386, "maximum": 479, "maxnum": 479, "may": [389, 489], "mc": [402, 460], "mca": 429, "mccontext": 402, "mcinst": 402, "mcjit": [451, 483], "mcsection": 402, "mcstreamer": 402, "mcsymbol": [402, 484], "me": 481, "mechan": 404, "meetup": [487, 545], "mem2reg": 505, "member": [462, 494, 507, 516], "membership": 537, "memcpi": [479, 505], "memcpyopt": [389, 505], "memdep": 505, "memmov": 479, "memori": [386, 389, 429, 459, 479, 505, 507, 557, 567, 578], "memorydependenceanalysi": 389, "memoryssa": 488, "memset": 479, "merg": [433, 434, 472, 481, 489, 505, 509, 511], "mergefunc": 505, "mergefunct": 489, "mergereturn": 505, "mergetwofunct": 489, "messag": 452, "metadata": [386, 395, 396, 458, 479, 490, 519, 536, 537, 543], "metadata_attach": 393, "metadata_block": 393, "method": [389, 404, 507, 525, 540], "mf": 540, "microscop": 404, "microsoft": [400, 464], "middl": 457, "migrat": 509, "mimg": [0, 1, 2, 3, 384], "minim": [453, 525], "minimis": 511, "minimum": 479, "minnum": 479, "minor": 386, "mip": [447, 513], "mir": [465, 484, 519], "mirror": 509, "miscellan": [384, 433, 445, 447, 484, 508, 540], "miscompil": [397, 474], "mismatch": 457, "miss": 505, "misunderstood": 462, "mix": [524, 538], "mnemon": [383, 402], "mod": 505, "mode": [386, 392, 402, 465, 481, 541, 559, 569], "model": [386, 429, 446, 459, 479, 524], "modern": 463, "modif": [395, 470], "modifi": [382, 383, 384, 386, 413, 445, 457, 479], "modul": [401, 425, 433, 479, 484, 493, 495, 498, 505, 507, 540, 547, 558, 568], "module_block": 393, "module_code_alia": 393, "module_code_asm": 393, "module_code_datalayout": 393, "module_code_deplib": 393, "module_code_funct": 393, "module_code_gcnam": 393, "module_code_globalvar": 393, "module_code_sectionnam": 393, "module_code_tripl": 393, "module_code_vers": 393, "modulepass": 540, "monorepo": 509, "monoton": 390, "more": [388, 404, 481, 507, 541], "most": 505, "motion": 505, "motiv": [458, 522], "move": [509, 526, 532], "moveweak": 479, "msf": [433, 499, 503], "msg": [42, 129, 227, 322], "mtbuf": 384, "mubuf": [0, 1, 2, 3, 384, 386], "mul": 479, "mull": 513, "multi": [388, 437, 482], "multiclass": [529, 530], "multigrid": 510, "multipl": [449, 507, 509], "multithread": 540, "must": [389, 445], "mutabl": [557, 567, 578], "mutat": [460, 481, 513, 557, 567, 578], "my": [457, 462, 481, 571], "name": [386, 402, 404, 419, 420, 445, 479, 500, 505, 511, 519, 539], "namespac": 404, "narrat": 489, "nas": 510, "nativ": [393, 402], "natur": 505, "nearbyint": 479, "need": [462, 521], "neg": 384, "neg_hi": 384, "neg_lo": 384, "negat": 462, "neon": 392, "nest": 477, "new": [389, 452, 454, 455, 465, 505, 507, 514, 519, 535, 540, 557, 567, 578], "newbuff": 543, "newcpuid": 543, "newlin": 405, "next": [405, 542], "next_free_sgpr": 386, "next_free_vgpr": 386, "nfmt": 384, "night": 514, "nm": 430, "no": [389, 470, 489, 505, 525, 544], "noalia": 479, "node": [387, 455, 479, 505], "non": [386, 388, 404, 461, 479, 488, 505, 513, 524], "nondebug": 505, "noop": 449, "normal": [449, 544], "not": [404, 405, 445, 457, 470, 481, 489, 505, 509], "notat": [0, 1, 2, 3, 382, 463, 530], "notatom": 390, "note": [386, 398, 399, 402, 447, 468, 513], "noteworthi": 513, "null": [385, 461, 462], "number": [385, 386, 393, 445, 505, 509, 511], "numer": [405, 446], "nv": 384, "nvcc": 446, "nvptx": [402, 447, 490], "nvvm": 490, "nwchem": 510, "objc": 479, "objcopi": 431, "objdump": 432, "object": [386, 393, 399, 430, 431, 432, 436, 437, 462, 463, 479, 483, 507, 508, 515, 519, 524, 541, 558, 568, 580], "objects": 479, "obtain": [446, 452], "ocaml": 461, "occurr": 445, "of": [0, 1, 2, 3, 384, 385, 389, 394, 396, 398, 400, 401, 402, 403, 404, 445, 448, 450, 452, 457, 459, 460, 461, 462, 463, 466, 473, 477, 479, 481, 482, 488, 490, 493, 505, 507, 508, 511, 513, 514, 516, 519, 538, 539, 540, 544, 559, 560, 569, 570, 579, 580], "off": 385, "offen": 384, "offici": [447, 472], "offset": [479, 537], "offset11": 384, "offset12": 384, "offset13": 384, "offset16": 384, "offset8": 384, "offsetof": [560, 570, 579], "often": 462, "omod": 384, "omp2012": 510, "on": [396, 446, 454, 456, 457, 461, 462, 468, 481, 497, 504, 507, 509, 524, 536], "one": [457, 462, 505], "ongo": 538, "onli": [398, 432, 505, 507, 509], "onlyreadsmemori": 389, "op_sel": 384, "op_sel_hi": 384, "opaqu": 479, "opcod": [382, 383], "open": [457, 513], "openbenchmark": 510, "opencl": 386, "opencv": 510, "openmp": 510, "oper": [385, 386, 413, 459, 479, 507, 556, 557, 566, 567, 577, 578], "operand": [382, 383, 384, 385, 386, 479, 484, 522, 524, 539], "opt": [46, 132, 231, 326, 443, 445, 460, 492, 515, 540], "optim": [386, 390, 398, 402, 443, 446, 457, 466, 469, 474, 482, 488, 492, 505, 513, 515, 519, 533, 547, 554, 560, 564, 570, 575, 579], "option": [386, 398, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 436, 437, 439, 442, 443, 444, 445, 456, 463, 481, 486, 495, 507, 511, 517, 535], "optioncategori": 445, "optparserdef": 527, "or": [404, 445, 457, 479, 509], "orc": [491, 547], "orcv1": 491, "orcv2": 491, "order": [386, 390, 392, 404, 459, 479, 536, 543, 544], "org": 510, "organiz": [478, 525, 535], "os": 386, "other": [389, 395, 399, 401, 404, 433, 445, 447, 457, 459, 462, 465, 470, 479, 490, 507, 535, 560, 570, 579], "out": [400, 462, 546], "output": [409, 415, 431, 445, 479, 481, 486, 534, 544], "outsid": 390, "outstand": 509, "over": [404, 459, 507], "overflow": [462, 479], "overhead": 524, "overlap": 434, "overload": 446, "overrid": 389, "overridden": 489, "overview": [389, 401, 404, 449, 450, 461, 476, 478, 479, 490, 491, 514, 522, 524, 545], "own": 507, "owner": 452, "packag": 504, "packedvector": 507, "packet": 402, "pad": 494, "page": [457, 472], "pal": 386, "parallel": [481, 510], "parallel_access": 479, "param": [47, 133, 232, 327, 449], "paramattr_block": 393, "paramattr_code_entri": 393, "paramattr_code_entry_old": 393, "paramattr_group_block": 393, "paramattr_grp_code_entri": 393, "paramet": [479, 490], "parboil": 510, "parent": 454, "parenthes": 404, "parr": 510, "pars": [402, 445, 552, 562, 573], "parsec": 510, "parsecommandlineopt": 445, "parseenvironmentopt": 445, "parser": [402, 445, 552, 555, 562, 565, 573, 576], "partial": [505, 538], "partit": [456, 505], "pass": [389, 400, 449, 458, 459, 470, 484, 489, 492, 505, 507, 524, 536, 540, 554, 564, 575], "passmanag": 540, "patch": [448, 452, 463, 472, 522], "patchpoint": 522, "patent": 452, "path": 479, "patleaf": 465, "pattern": [384, 405, 505], "pcmarker": 479, "pdb": [433, 495, 496, 497, 500, 501, 502, 503], "pdb2yaml": 433, "pdbutil": 433, "pe": 437, "per": 548, "perform": [429, 459, 510, 538], "person": 479, "pgo": [388, 469], "phabric": 506, "phase": [402, 482, 539], "phi": [479, 488], "philosophi": [397, 482, 519], "physic": 402, "pick": [487, 507], "piec": 448, "pipelin": 465, "placement": [488, 505, 508], "placesafepoint": 524, "plan": [509, 511, 512, 540], "platform": [400, 431, 447, 457, 535, 541], "plugin": [461, 466], "pocl": 513, "point": [385, 386, 387, 411, 449, 456, 461, 479, 522], "pointer": [389, 404, 462, 479, 507, 524, 538], "pointstoconstantmemori": 389, "poison": 479, "polici": 452, "polybench": 510, "polymag": 510, "polymorph": 507, "pool": 484, "port": 465, "portabl": [404, 457, 513, 525, 560, 570, 579], "posit": 445, "possibl": [404, 445, 489], "post": [505, 509], "postdom": 505, "postdomfronti": 505, "postdomin": 505, "postdomtre": 505, "potenti": 506, "pow": 479, "powerpc": [402, 447, 513], "powi": 479, "practic": 459, "pragma": 538, "pre": [409, 514], "preassign": 402, "precis": [479, 488, 505], "predecessor": 507, "predefin": 386, "predic": [404, 465, 484], "preemption": 479, "prefer": [404, 459], "prefetch": 479, "prefix": [405, 479], "preincrement": 404, "preliminari": 539, "prepar": 483, "preprocess": 530, "prerequisit": [446, 470, 539], "present": [489, 497], "preserv": [479, 519], "pretti": 433, "primer": 401, "primit": [393, 529], "print": [389, 417, 505, 540], "printer": [505, 539], "privat": 404, "probabl": 394, "probe": 456, "problem": [392, 463, 464, 481, 528, 540, 557, 559, 567, 569, 578], "process": [402, 465, 472, 489, 491, 510, 512, 514, 545, 550], "processor": [386, 510], "product": 396, "prof": 479, "profdata": 434, "profil": [434, 456, 469, 479, 481, 505, 533], "program": [386, 402, 411, 508, 513, 545], "programm": 507, "programmat": 507, "progress": 465, "project": [400, 401, 416, 452, 463, 466, 478, 508, 509, 513], "prolog": [386, 402], "prologu": 479, "promis": 449, "promot": [505, 539], "propag": [505, 507], "proper": 404, "properti": [386, 459, 519, 560, 570, 579], "propos": [509, 519, 545], "proto": 460, "prototyp": 505, "provid": 404, "provision": 511, "prune": 505, "pseudo": [405, 450], "pseudolow": 527, "ptr": [479, 490], "ptrtoint": [462, 479], "ptx": 490, "ptxas": 490, "public": [446, 472, 493, 501, 507], "put": [558, 568], "pwm": 510, "py": [514, 515], "qemu": 470, "qualif": 472, "qualifi": 457, "qualiti": [452, 524], "queri": 505, "question": [403, 457, 509], "queue": 386, "quick": [400, 445, 450, 461, 463, 535, 540], "quickstart": [466, 521, 533], "r128": 384, "raja": 510, "random": [439, 460, 489, 517], "rang": [404, 450, 479, 507], "rational": [462, 479], "raw": 524, "raw_ostream": 404, "rawspe": 510, "read": [461, 482, 490, 509, 511, 539], "read_regist": 479, "readabl": 404, "readcyclecount": 479, "readelf": [436, 437], "reader": [436, 437], "readobj": 437, "realli": 457, "reassoci": 505, "record": [386, 393, 433, 450, 493, 494, 502, 524, 541, 543], "recover": 507, "redistribut": 457, "reduc": [398, 479, 505, 511], "reduct": [406, 479, 505, 538], "redund": 505, "ref": [479, 505], "refer": [445, 461, 478, 479, 484, 505, 507, 509, 510, 511, 512, 524, 530], "reflect": 490, "reg2mem": 505, "regbankselect": 465, "regex": 405, "region": [450, 505, 524, 540], "regionpass": 540, "regist": [386, 402, 457, 459, 465, 484, 490, 505, 519, 539, 540], "registeranalysisgroup": 540, "registerbankinfo": 465, "registerinfo": 527, "registr": [539, 540], "registri": 540, "regress": [472, 519, 535], "reject": 457, "relat": [479, 512, 539], "relationship": [491, 507], "releas": [390, 472, 479, 513, 514], "releasememori": 540, "relev": [398, 447], "reliabl": 402, "relicens": 452, "reloc": [386, 456, 524], "relocat": 385, "remap": [420, 483], "remark": 515, "remot": 550, "remov": 505, "removeus": 489, "replac": [408, 465, 505, 507], "replacedirectcal": 489, "replacewithnewvalu": 389, "report": [396, 418, 448, 472, 474, 505, 514, 516], "repositori": 509, "repres": [402, 537], "represent": [389, 449, 450, 457, 479, 524], "request": [472, 506], "requir": [389, 402, 445, 449, 452, 461, 462, 463, 464, 508, 535, 540], "resampl": 510, "resolut": 482, "resolv": 396, "resourc": [447, 465], "respons": [389, 445, 505], "rest": [552, 562, 573], "restrict": [454, 459], "result": [389, 409, 524, 533], "resum": [449, 479, 481], "ret": 479, "retain": 479, "retainautoreleas": 479, "retainautoreleasedreturnvalu": 479, "retainautoreleasereturnvalu": 479, "retainblock": 479, "retir": 429, "return": [404, 507], "returnaddress": 479, "revers": 538, "revert": 463, "review": [452, 506], "revis": 509, "rewritestatepointsforgc": 524, "rgpassmanag": 540, "rich": 486, "right": 507, "rint": 479, "risc": 447, "riscv": 513, "roadmap": 512, "rodinia": 510, "root": 461, "rotat": 505, "round": [386, 479], "routin": 507, "row_mask": 384, "rt": 470, "rtti": [404, 473], "rule": [462, 465, 472, 473, 479], "run": [409, 460, 471, 481, 490, 533, 534, 540], "runonbasicblock": 540, "runonfunct": 540, "runonloop": 540, "runonmachinefunct": 540, "runonmodul": [489, 540], "runonregion": 540, "runonscc": 540, "runtim": [454, 479, 538, 541], "s_block32": 493, "s_bprel32": 493, "s_buildinfo": 493, "s_calle": 493, "s_caller": 493, "s_callsiteinfo": 493, "s_coffgroup": 493, "s_compile2": 493, "s_compile3": 493, "s_constant": 493, "s_defrang": 493, "s_defrange_framepointer_rel": 493, "s_defrange_framepointer_rel_full_scop": 493, "s_defrange_regist": 493, "s_defrange_register_rel": 493, "s_defrange_subfield": 493, "s_defrange_subfield_regist": 493, "s_end": 493, "s_envblock": 493, "s_export": 493, "s_fastlink": 493, "s_filestat": 493, "s_framecooki": 493, "s_frameproc": 493, "s_gdata32": 493, "s_gmandata": 493, "s_gproc32": 493, "s_gproc32_id": 493, "s_gthread32": 493, "s_heapallocsit": 493, "s_inline": 493, "s_inlinesit": 493, "s_inlinesite_end": 493, "s_label32": 493, "s_ldata32": 493, "s_lmandata": 493, "s_local": 493, "s_lproc32": 493, "s_lproc32_dpc": 493, "s_lproc32_dpc_id": 493, "s_lproc32_id": 493, "s_lprocref": 493, "s_lthread32": 493, "s_manconst": 493, "s_objnam": 493, "s_proc_id_end": 493, "s_procref": 493, "s_pub32": 493, "s_regist": 493, "s_regrel32": 493, "s_section": 493, "s_thunk32": 493, "s_trampolin": 493, "s_udt": 493, "s_unamespac": 493, "sadd": 479, "saddr": [52, 53, 332, 333], "safe": [461, 507], "safepoint": 524, "safeti": [505, 523, 560, 570, 579], "same": [405, 507], "sampl": [450, 476], "sampler": 386, "sat": 479, "satur": 479, "save": 449, "sbase": [9, 10, 11, 107, 108, 191, 192, 288, 289, 290], "scalar": [505, 544], "scalarenumerationtrait": 544, "scalarevolut": 505, "scale": 394, "scatter": [479, 538], "scc": 385, "sccp": 505, "sccs": 505, "scev": [389, 505], "schedul": [402, 519, 539], "scope": [386, 401, 479, 519, 529], "scratch": 386, "script": [401, 469, 514], "scrub": 509, "scudo": 517, "sdata": [21, 22, 23, 55, 56, 57, 238, 239, 240, 300, 301, 302, 335, 336, 337], "sdiv": 479, "sdnode": 465, "sdst": [58, 59, 60, 61, 62, 63, 64, 65, 100, 138, 139, 140, 141, 142, 143, 144, 145, 241, 242, 243, 244, 245, 246, 247, 248, 338, 339, 340, 341, 342, 343, 344, 345], "sdwa": [0, 384], "search": [489, 510], "searchablet": 527, "section": [386, 456, 458, 495, 521, 522, 543], "see": [404, 406, 407, 409, 410, 411, 413, 414, 415, 419, 422, 423, 425, 430, 431, 432, 436, 437, 442], "segment": [402, 518], "seh": 454, "select": [397, 402, 409, 445, 465, 469, 479, 519], "selectiondag": [387, 402, 455, 465, 539], "selector": 539, "self": [404, 457], "semant": [449, 459, 479, 490, 522, 524, 525], "send": 463, "sentinel": 507, "sequenc": [386, 544], "sequenti": 507, "sequentiallyconsist": 390, "seri": 394, "serial": [465, 497, 515], "server": 495, "set": [386, 389, 396, 445, 473, 491, 505, 507, 539, 540], "setjmp": 454, "setup": [473, 553, 559, 563, 569, 574], "setvector": 507, "setversionprint": 445, "sext": [384, 459, 479], "sgpr": 386, "sgpr_count": 386, "sh": 514, "shader": 386, "shadow": 461, "share": 504, "shl": 479, "should": [453, 457, 489], "show": [418, 434, 457], "sht_llvm_addrsig": 456, "sht_llvm_call_graph_profil": 456, "sht_llvm_dependent_librari": 456, "sht_llvm_sympart": 456, "shufflevector": 479, "sibl": 402, "sideeffect": 479, "sign": [393, 506], "signal": 386, "signific": 456, "simd": 510, "simm21": 385, "simpl": [479, 490, 505, 507], "simplif": 524, "simplifi": [404, 484, 505, 507], "simplifycfg": [457, 505], "sin": 479, "singl": [386, 479, 505, 509], "sink": 505, "site": 507, "sitofp": 479, "size": [383, 398, 402, 449, 453, 507, 518], "sizeof": [560, 570, 579], "sjlj": 454, "skip": 492, "slambench": 510, "slc": 384, "slight": 507, "slot": 505, "slp": 538, "smallbitvector": 507, "smaller": 481, "smallptrset": 507, "smallset": 507, "smallstr": 507, "smallvector": 507, "smax": 479, "smem": [0, 2, 3, 384, 386], "smin": 479, "smrd": [1, 384, 386], "smul": 479, "snippet": 424, "so": 481, "social": [487, 545], "soffset": [43, 44, 45, 130, 131, 228, 229, 230, 323, 324, 325], "soft": [470, 525], "softwar": [463, 464], "solut": [481, 489], "someon": 506, "sop1": [0, 1, 2, 3, 386], "sop2": [0, 1, 2, 3, 386], "sopc": [0, 1, 2, 3, 386], "sopk": [0, 1, 2, 3], "sopp": [0, 1, 2, 3, 386], "sort": [404, 433, 507], "sourc": [386, 400, 404, 442, 450, 457, 463, 479, 508, 513, 519, 559, 569], "space": [386, 402, 404, 462, 490], "span": 510, "sparc": 447, "spars": 505, "sparsebitvector": 507, "sparsemultiset": 507, "sparseset": 507, "spec": 510, "special": [398, 479, 490, 541], "specialis": 479, "specif": [400, 402, 410, 413, 429, 430, 431, 437, 442, 456, 459, 519, 525, 535, 536, 560, 570, 579], "specifi": [389, 445, 459, 461, 479, 540], "sphinx": 521, "sponentri": 479, "sqrt": 479, "src": [67, 68, 69, 70, 71, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 250, 251, 252, 253, 254, 255, 347, 348, 349, 350, 351, 352], "src0_sel": 384, "src1_sel": 384, "sreg": 490, "srem": 479, "sroa": 505, "srsrc": [50, 51, 135, 136, 235, 236, 330, 331], "ssa": [402, 457, 505], "ssa_copi": 479, "ssamp": [54, 137, 237, 334], "ssca": 510, "ssrc": [73, 74, 75, 76, 77, 78, 79, 80, 101, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 257, 258, 259, 260, 261, 262, 263, 264, 265, 354, 355, 356, 357, 358, 359, 360, 361, 362], "ssub": 479, "stabl": 453, "stack": [402, 456, 461, 479, 505, 518, 522, 523, 524, 542, 560, 570, 579], "stackguard": 479, "stacklet": 518, "stackmap": [522, 524], "stackprotector": 479, "stackrestor": 479, "stacksav": 479, "stage": [388, 429, 470], "standard": [393, 404, 413, 446, 449, 463, 479, 507, 510, 511, 519, 525], "start": [400, 402, 445, 450, 461, 463, 464, 479, 481, 487, 492, 535, 540, 546], "startup": 481, "stash": 509, "stat": [507, 515], "state": [386, 489], "stateless": 505, "statement": 395, "statepoint": [461, 479, 524], "static": [404, 410, 505], "statist": [429, 507, 540], "status": [405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 427, 429, 430, 431, 434, 436, 437, 439, 442, 443, 444, 506, 509, 524], "stay": 452, "std": [404, 446, 507], "stderr": 505, "steen": 389, "step": [386, 467, 479, 509, 539, 542], "still": 459, "storag": [445, 479, 507], "store": [402, 429, 457, 459, 479, 505], "storestrong": 479, "storeweak": 479, "strategi": [461, 479], "straw": 509, "stream": [433, 493, 495, 496, 498, 499, 500, 501, 502, 503], "strength": 505, "stress": 439, "string": [405, 450, 479, 491, 507], "stringerror": 507, "stringmap": 507, "stringref": 507, "stringset": 507, "strip": [479, 505], "strtab_block": 393, "struct": [404, 462, 479], "structur": [421, 449, 452, 460, 479, 484, 488, 489, 507, 533, 535, 536, 538], "studio": 464, "stuff": 457, "style": [389, 404, 436, 456, 473, 479, 508], "sub": [450, 479, 509], "subclass": [507, 539], "subcommand": 433, "subdirectori": 508, "submit": [448, 452, 474], "subregist": 484, "subsect": 521, "substitut": [405, 409, 535], "substream": [495, 498], "subsubsect": 521, "subsystem": 545, "subtarget": [527, 539], "subvers": 506, "successor": [484, 507], "suffic": 383, "suggest": 487, "suit": [409, 463, 510, 514, 533, 534, 535], "summari": [392, 415, 433, 462, 463, 479], "superblock": 499, "suppli": 481, "support": [395, 402, 404, 431, 446, 454, 457, 465, 479, 481, 491, 522, 524, 525, 530, 539, 554, 564, 575], "suspend": 449, "svn": [463, 509], "switch": [395, 404, 479], "switchinst": [395, 505], "swizzl": 384, "symbol": [385, 386, 407, 419, 430, 433, 442, 456, 482, 484, 491, 493, 496, 498, 501, 505], "sync": 386, "synopsi": [405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 442, 443, 444], "syntax": [0, 1, 2, 3, 383, 384, 385, 405, 449, 456, 479, 490, 522, 524, 529, 552, 562, 573, 581], "system": [386, 463, 464, 479, 525, 526, 529], "systemz": [447, 513], "tabl": [386, 402, 430, 454, 456, 484, 497, 519, 537, 545, 580], "tablegen": [402, 527, 528, 529, 530, 531, 532], "tag": [450, 472, 507, 519, 544], "tail": [402, 505], "tailcallelim": 505, "talk": 487, "target": [386, 402, 411, 444, 452, 454, 456, 462, 465, 470, 479, 481, 484, 490, 505, 513, 539, 558, 560, 568, 570, 579], "targetdata": 505, "targetframelow": 402, "targetinstrinfo": [402, 539], "targetjitinfo": 402, "targetlow": 402, "targetmachin": 402, "targetregisterinfo": [402, 539], "targetsubtarget": 402, "task": [472, 507], "tba": 385, "tbaa": 479, "tblgen": 444, "tce": 513, "tech": 487, "tell": 462, "templat": [479, 507, 521, 529], "termin": 479, "terminolog": [394, 463], "test": [387, 400, 406, 409, 452, 463, 470, 472, 479, 481, 484, 510, 513, 514, 519, 523, 533, 534, 535, 537], "tester": 409, "text": [386, 445], "tfe": 384, "tgt": [81, 169, 266, 363], "than": 462, "that": [446, 457, 462], "the": [387, 389, 400, 402, 404, 405, 445, 450, 454, 457, 458, 459, 461, 462, 463, 464, 466, 469, 470, 472, 473, 477, 479, 480, 481, 487, 488, 490, 491, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 519, 524, 529, 533, 534, 538, 539, 540, 542, 547, 551, 552, 555, 556, 557, 558, 560, 561, 562, 565, 566, 567, 568, 570, 572, 573, 576, 577, 578, 579], "then": [555, 565, 576], "there": 457, "thing": [457, 459], "thinlto": 479, "this": [457, 459, 462, 481, 489, 509, 513, 521, 557, 559, 567, 569, 578], "thought": [553, 563, 574], "thread": [386, 479, 505, 507], "threadsafecontext": 491, "threadsafemodul": 491, "threshold": 542, "through": 404, "throw": [454, 525], "thumb": 473, "tidbit": [560, 570, 579], "time": [404, 466, 474, 482, 488, 559, 569], "timelin": [429, 472], "tinyptrvector": 507, "tip": [391, 459, 560, 570, 579], "tire": [556, 566, 577], "tma": 385, "to": [387, 389, 394, 397, 402, 404, 429, 437, 444, 445, 448, 453, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 487, 489, 490, 491, 492, 500, 505, 507, 509, 513, 514, 515, 521, 527, 544, 547, 549, 553, 558, 563, 568, 574], "todo": [400, 445, 473, 553, 563], "togeth": [558, 568], "token": [454, 479], "too": 511, "tool": [397, 399, 406, 408, 420, 426, 428, 431, 434, 457, 460, 463, 464, 507, 513, 541, 542], "toolchain": [452, 463], "top": [445, 491, 530], "topic": [400, 507, 580], "tos": 491, "town": 487, "toy": 481, "tpi": 502, "trace": [481, 541, 542, 543], "tradeoff": 488, "trampolin": 479, "transform": [389, 449, 465, 505, 519, 536], "transit": [454, 479, 491, 511, 524], "trap": [385, 386, 479], "travers": 507, "treat": [404, 507], "tree": [505, 508, 510, 552, 562, 573], "tri": [454, 470], "triag": 396, "trick": [560, 570, 579], "trip": 538, "tripl": [386, 402, 479, 490], "trivial": [554, 564, 575], "trophi": 481, "troubleshoot": 470, "trunc": 479, "tscwrap": 543, "tta": 513, "ttmp": 385, "tune": 410, "turn": [404, 457, 507], "tutori": [405, 490, 551, 560, 570, 571, 572, 579, 580], "tvm": 510, "twine": 507, "two": [402, 462], "type": [82, 170, 267, 364, 383, 385, 386, 387, 401, 404, 433, 450, 455, 459, 462, 465, 479, 494, 495, 502, 505, 507, 517, 529, 530, 537, 538, 539, 544], "type_block": 393, "type_code_array": 393, "type_code_doubl": 393, "type_code_float": 393, "type_code_fp128": 393, "type_code_funct": 393, "type_code_function_old": 393, "type_code_half": 393, "type_code_integ": 393, "type_code_label": 393, "type_code_metadata": 393, "type_code_numentri": 393, "type_code_opaqu": 393, "type_code_point": 393, "type_code_ppc_fp128": 393, "type_code_struct_anon": 393, "type_code_struct_nam": 393, "type_code_vector": 393, "type_code_void": 393, "type_code_x86_fp80": 393, "type_code_x86_mmx": 393, "typecheckedloadconstvcal": 479, "typecheckedloadvcal": 479, "typeid": 454, "typeidinfo": 479, "typetest": 479, "typetestassumeconstvcal": 479, "typetestassumevcal": 479, "uadd": 479, "udiv": 479, "uglygep": 462, "uimm20": 385, "uimm21": 385, "uimm32": 385, "uimm8": 385, "uitofp": 479, "umax": 479, "umin": 479, "umul": 479, "unabbrev_record": 393, "unari": [385, 479, 556, 566, 577], "undef": 457, "undefin": [479, 490], "under": 462, "understand": 457, "unifi": 505, "union": 479, "uniqu": 544, "uniquevector": 507, "unit": [402, 429, 535, 559, 569], "universal": 428, "universiti": 457, "unknown": 538, "unnecessari": 404, "unord": [390, 479], "unorm": 384, "unpack": 463, "unpredict": 479, "unreach": [457, 479], "unrol": [479, 505, 536, 538], "unroll_and_jam": 479, "unspecifi": 386, "unswitch": 505, "unus": [505, 525], "unwindless": 505, "up": [386, 457, 473, 491, 506, 540], "updat": [389, 452, 472, 488, 509], "urem": 479, "usabl": 511, "usag": [397, 400, 434, 453, 466, 477, 481, 492, 517, 522, 538], "use": [389, 392, 397, 400, 401, 402, 404, 429, 446, 454, 457, 459, 460, 462, 463, 464, 466, 469, 470, 471, 475, 476, 479, 481, 488, 491, 492, 505, 507, 513, 519, 525, 537, 540, 541, 547, 549, 560, 570, 579], "user": [386, 410, 481, 490, 505, 507, 544, 545, 556, 557, 566, 567, 577, 578], "usub": 479, "util": [416, 460, 463, 491, 505, 519, 524, 544], "v2": [386, 479], "v3": 386, "v_mad_mix": 384, "va_arg": 479, "va_copi": 479, "va_end": 479, "va_start": 479, "vaddr": [4, 5, 6, 7, 84, 85, 102, 103, 104, 105, 186, 187, 188, 189, 283, 284, 285, 286, 366, 367], "valid": [514, 544], "valu": [386, 445, 457, 462, 479, 481, 484, 489, 492, 505, 507, 519, 529, 530, 544], "value_symtab_block": 393, "valuemap": 507, "valuesymbolt": 507, "var": 479, "variabl": [393, 400, 401, 402, 404, 405, 456, 479, 505, 508, 511, 518, 519, 538, 557, 559, 567, 569, 578], "variant": 509, "various": 505, "vbrs": 393, "vcc": [86, 172, 269, 368, 385], "vccz": 385, "vdata": [14, 15, 16, 17, 18, 19, 20, 87, 88, 89, 90, 111, 112, 113, 114, 115, 116, 173, 174, 175, 176, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 270, 271, 272, 273, 293, 294, 295, 296, 297, 298, 299, 369, 370, 371, 372], "vdst": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 91, 92, 93, 94, 117, 118, 119, 120, 121, 122, 123, 124, 177, 178, 179, 180, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 274, 275, 276, 277, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 373, 374, 375, 376], "vecmathlib": 510, "vector": [462, 479, 497, 505, 507, 512, 536, 538], "vendor": 386, "verif": [399, 524], "verifi": [405, 423, 457, 505], "versa": 507, "version": [404, 451, 472, 481, 536], "vgpr": 386, "vgpr_count": 386, "via": [463, 506, 533], "vice": 507, "view": [401, 429, 505, 507], "viewer": [515, 542], "vintrp": [0, 1, 2, 3, 384], "virtual": [402, 404, 457, 465, 525, 537], "visibl": 479, "visual": [400, 464, 542], "vla": 462, "vliw": 402, "vm": 384, "void": [479, 489], "volatil": 479, "vop1": [0, 1, 2, 3], "vop2": [0, 1, 2, 3], "vop3": [0, 1, 2, 3, 384], "vop3p": [0, 3, 384], "vopc": [0, 1, 2, 3], "vp": 479, "vplan": 512, "vs": [401, 445, 446, 502], "vsrc": [72, 95, 96, 97, 98, 157, 181, 182, 183, 184, 256, 278, 279, 280, 281, 353, 377, 378, 379, 380], "waitcnt": [99, 185, 282, 381], "walker": 488, "wallclocktim": 543, "warn": [404, 455, 505], "way": [448, 462, 507], "waymark": 507, "we": [396, 489], "web": 506, "websit": 472, "weight": [394, 395, 434], "well": 479, "what": [397, 457, 459, 461, 462, 481, 489, 509, 516, 540], "when": [397, 404, 457, 459, 463, 481], "where": [457, 487], "wherev": 404, "whether": 445, "whi": [453, 457, 462, 481, 509, 557, 559, 567, 569, 578], "which": [389, 453, 462, 493], "while": 507, "whitespac": 404, "wide": 545, "widen": 479, "width": [393, 404, 459, 479], "window": [447, 454, 456, 481], "wise": 479, "with": [396, 404, 445, 446, 451, 457, 461, 462, 463, 464, 466, 469, 479, 489, 490, 505, 506, 507, 509, 519, 538, 540, 542, 546, 571, 580], "without": 457, "won": 521, "word": 393, "work": [386, 396, 429, 448, 462, 465, 481, 489, 519, 523, 541], "workflow": [509, 512], "world": 540, "wrapper": [393, 401], "write": [389, 402, 404, 429, 445, 457, 460, 461, 462, 508, 509, 527, 534, 535, 539, 540], "write_regist": 479, "writer": 447, "written": 457, "x86": [402, 447, 456, 513], "x86_64": 471, "x86_mmx": 479, "x86evex2vex": 527, "xcore": 447, "xnack": 385, "xor": 479, "xray": [541, 542, 543], "yaml": [515, 544], "yaml2obj": 581, "yaml2pdb": 433, "you": [516, 521], "your": [400, 467, 473, 487, 507, 540, 541], "yourself": 488, "zero": 454, "zext": [459, 479], "zig": 513, "zip": 509}})