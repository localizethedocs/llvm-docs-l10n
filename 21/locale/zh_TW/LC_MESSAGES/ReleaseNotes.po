# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 21\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../ReleaseNotes.md:1
msgid ""
"<!-- This document is written in Markdown and uses extra directives provided "
"by\n"
"MyST (https://myst-parser.readthedocs.io/en/latest/). -->\n"
msgstr ""

#: ../../../ReleaseNotes.md:4
msgid "LLVM {{env.config.release}} Release Notes"
msgstr ""

#: ../../../ReleaseNotes.md:6
msgid "Contents"
msgstr ""

#: ../../../ReleaseNotes.md:12
msgid ""
"These are in-progress notes for the upcoming LLVM {{env.config."
"release}}              release. Release notes for previous releases can be "
"found on              [the Download Page](https://releases.llvm.org/download."
"html)."
msgstr ""

#: ../../../ReleaseNotes.md:17
msgid "Introduction"
msgstr "簡介"

#: ../../../ReleaseNotes.md:20
msgid ""
"This document contains the release notes for the LLVM Compiler "
"Infrastructure, release {{env.config.release}}.  Here we describe the status "
"of LLVM, including major improvements from the previous release, "
"improvements in various subprojects of LLVM, and some of the current users "
"of the code.  All LLVM releases may be downloaded from the [LLVM releases "
"web site](https://llvm.org/releases/)."
msgstr ""

#: ../../../ReleaseNotes.md:26
msgid ""
"For more information about LLVM, including information about the latest "
"release, please check out the [main LLVM web site](https://llvm.org/).  If "
"you have questions or comments, the [Discourse forums](https://discourse."
"llvm.org) is a good place to ask them."
msgstr ""

#: ../../../ReleaseNotes.md:31
msgid ""
"Note that if you are reading this file from a Git checkout or the main LLVM "
"web page, this document applies to the *next* release, not the current one.  "
"To see the release notes for a specific release, please see the [releases "
"page](https://llvm.org/releases/)."
msgstr ""

#: ../../../ReleaseNotes.md:36
msgid "Non-comprehensive list of changes in this release"
msgstr ""

#: ../../../ReleaseNotes.md:39
msgid ""
"<!-- For small 1-3 sentence descriptions, just add an entry at the end of\n"
"this list. If your description won't fit comfortably in one bullet\n"
"point (e.g. maybe you would like to give an example of the\n"
"functionality, or simply have a lot to talk about), see the comment below\n"
"for adding a new subsection. -->\n"
msgstr ""

#: ../../../ReleaseNotes.md:45
msgid "..."
msgstr ""

#: ../../../ReleaseNotes.md:47
msgid ""
"<!-- If you would like to document a larger change, then you can add a\n"
"subsection about it right here. You can copy the following boilerplate:\n"
"\n"
"Special New Feature\n"
"-------------------\n"
"\n"
"Makes programs 10x faster by doing Special New Thing.\n"
"-->\n"
msgstr ""

#: ../../../ReleaseNotes.md:56
msgid "Changes to the LLVM IR"
msgstr ""

#: ../../../ReleaseNotes.md:59
msgid ""
"It is no longer permitted to inspect the uses of ConstantData. Use count "
"APIs will behave as if they have no uses (i.e. use_empty() is always true)."
msgstr ""

#: ../../../ReleaseNotes.md:63
msgid "The `nocapture` attribute has been replaced by `captures(none)`."
msgstr ""

#: ../../../ReleaseNotes.md:64
msgid ""
"The constant expression variants of the following instructions have been "
"removed:"
msgstr ""

#: ../../../ReleaseNotes.md:67
msgid "`mul`"
msgstr ""

#: ../../../ReleaseNotes.md:69
msgid ""
"Updated semantics of `llvm.type.checked.load.relative` to match that of "
"`llvm.load.relative`."
msgstr ""

#: ../../../ReleaseNotes.md:71
msgid ""
"Inline asm calls no longer accept ``label`` arguments. Use ``callbr`` "
"instead."
msgstr ""

#: ../../../ReleaseNotes.md:73
msgid ""
"Updated semantics of the `callbr` instruction to clarify that its 'indirect "
"labels' are not expected to be reached by indirect (as in register-"
"controlled) branch instructions, and therefore are not guaranteed to start "
"with a `bti` or `endbr64` instruction, where those exist."
msgstr ""

#: ../../../ReleaseNotes.md:79
msgid "Changes to LLVM infrastructure"
msgstr ""

#: ../../../ReleaseNotes.md:82
msgid ""
"Removed support for target intrinsics being defined in the target "
"directories themselves (i.e., the `TargetIntrinsicInfo` class)."
msgstr ""

#: ../../../ReleaseNotes.md:84
msgid "Fix Microsoft demangling of string literals to be stricter (#GH129970))"
msgstr ""

#: ../../../ReleaseNotes.md:86
msgid ""
"Added the support for ``fmaximum`` and ``fminimum`` in ``atomicrmw`` "
"instruction. The comparison is expected to match the behavior of ``llvm."
"maximum.*`` and ``llvm.minimum.*`` respectively."
msgstr ""

#: ../../../ReleaseNotes.md:90
msgid "Changes to building LLVM"
msgstr ""

#: ../../../ReleaseNotes.md:93
msgid "Changes to TableGen"
msgstr ""

#: ../../../ReleaseNotes.md:96
msgid "Changes to Interprocedural Optimizations"
msgstr ""

#: ../../../ReleaseNotes.md:99
msgid "Changes to the AArch64 Backend"
msgstr ""

#: ../../../ReleaseNotes.md:102
msgid ""
"Added the `execute-only` target feature, which indicates that the generated "
"program code doesn't contain any inline data, and there are no data accesses "
"to code sections. On ELF targets this property is indicated by the "
"`SHF_AARCH64_PURECODE` section flag. ([#125687](https://github.com/llvm/llvm-"
"project/pull/125687), [#132196](https://github.com/llvm/llvm-project/"
"pull/132196), [#133084](https://github.com/llvm/llvm-project/pull/133084))"
msgstr ""

#: ../../../ReleaseNotes.md:110
msgid "Changes to the AMDGPU Backend"
msgstr ""

#: ../../../ReleaseNotes.md:113
msgid ""
"Enabled the [FWD_PROGRESS bit](https://llvm.org/docs/AMDGPUUsage.html#code-"
"object-v3-kernel-descriptor) for all GFX ISAs greater or equal to 10, for "
"the AMDHSA OS."
msgstr ""

#: ../../../ReleaseNotes.md:117
msgid ""
"Bump the default `.amdhsa_code_object_version` to 6. ROCm 6.3 is required to "
"run any program compiled with COV6."
msgstr ""

#: ../../../ReleaseNotes.md:119
msgid ""
"Add a new `amdgcn.load.to.lds` intrinsic that wraps the existing global.load."
"lds intrinsic and has the same semantics. This intrinsic allows using buffer "
"fat pointers (`ptr addrspace(7)`) as arguments, allowing loads to LDS from "
"these pointers to be represented in the IR without needing to use buffer "
"resource intrinsics directly. This intrinsic is exposed to Clang as "
"`__builtin_amdgcn_load_to_lds`, though buffer fat pointers are not yet "
"enabled in Clang. Migration to this intrinsic is optional, and there are no "
"plans to deprecate `amdgcn.global.load.lds`."
msgstr ""

#: ../../../ReleaseNotes.md:127
msgid "Changes to the ARM Backend"
msgstr ""

#: ../../../ReleaseNotes.md:130
msgid "Changes to the AVR Backend"
msgstr ""

#: ../../../ReleaseNotes.md:133
msgid "Changes to the DirectX Backend"
msgstr ""

#: ../../../ReleaseNotes.md:136
msgid "Changes to the Hexagon Backend"
msgstr ""

#: ../../../ReleaseNotes.md:139
msgid ""
"The default Hexagon architecture version in ELF object files produced by the "
"tools such as llvm-mc is changed to v68. This version will be set if the "
"user does not provide the CPU version in the command line."
msgstr ""

#: ../../../ReleaseNotes.md:143
msgid "Changes to the LoongArch Backend"
msgstr ""

#: ../../../ReleaseNotes.md:146
msgid "Changing the default code model from `small` to `medium` for 64-bit."
msgstr ""

#: ../../../ReleaseNotes.md:147
msgid "Added inline asm support for the `q` constraint."
msgstr ""

#: ../../../ReleaseNotes.md:148
msgid "Added the `32s` target feature for LA32S ISA extensions."
msgstr ""

#: ../../../ReleaseNotes.md:149
msgid ""
"Added codegen support for atomic-ops (`cmpxchg`, `max`, `min`, `umax`, "
"`umin`) on LA32."
msgstr ""

#: ../../../ReleaseNotes.md:150
msgid "Added codegen support for the ILP32D calling convention."
msgstr ""

#: ../../../ReleaseNotes.md:151
msgid "Added several codegen and vectorization optimizations."
msgstr ""

#: ../../../ReleaseNotes.md:153
msgid "Changes to the MIPS Backend"
msgstr ""

#: ../../../ReleaseNotes.md:156
msgid "`-mcpu=i6400` and `-mcpu=i6500` were added."
msgstr ""

#: ../../../ReleaseNotes.md:157 ../../../ReleaseNotes.md:245
msgid ""
"Added support for `mipsel-windows-gnu` and `mipsel-windows-msvc` targets."
msgstr ""

#: ../../../ReleaseNotes.md:159
msgid "Changes to the PowerPC Backend"
msgstr ""

#: ../../../ReleaseNotes.md:162
msgid "Add spill and restore for DMR and DMRp registers."
msgstr ""

#: ../../../ReleaseNotes.md:163
msgid ""
"Prototype various Dense Math Facility instructions, and intrinsics for basic "
"enablement, insert/extract, integer and FP calculations."
msgstr ""

#: ../../../ReleaseNotes.md:164
msgid "Add prototype for Dense Math Facility cryptography instructions."
msgstr ""

#: ../../../ReleaseNotes.md:165
msgid "Implement load/stores prototype for v1024i1, v2048i1."
msgstr ""

#: ../../../ReleaseNotes.md:166
msgid "Support conversion between f16 and f128."
msgstr ""

#: ../../../ReleaseNotes.md:167
msgid "Change default for auto gen stxvp for cpu=future."
msgstr ""

#: ../../../ReleaseNotes.md:168
msgid "Setup initial JITLink build support for XCOFF."
msgstr ""

#: ../../../ReleaseNotes.md:169
msgid ""
"Add an API to derive the default feature set from a CPU name within the "
"TargetParser (e.g. `pwr10` -> `+vsx`,`+isa3_1`,`+mma`). Clang now uses this "
"to populate the `target-feature` list when `-mcpu` is provided for PowerPC."
msgstr ""

#: ../../../ReleaseNotes.md:172
msgid "Various bug fixes and codegen improvements."
msgstr ""

#: ../../../ReleaseNotes.md:174
msgid "Changes to the RISC-V Backend"
msgstr ""

#: ../../../ReleaseNotes.md:177
msgid ""
"Adds experimental assembler support for the Qualcomm uC 'Xqcilb` (Long "
"Branch) extension."
msgstr ""

#: ../../../ReleaseNotes.md:179
msgid ""
"Adds experimental assembler support for the Qualcomm uC 'Xqcili` (Load Large "
"Immediate) extension."
msgstr ""

#: ../../../ReleaseNotes.md:181
msgid ""
"Adds experimental assembler support for the Qualcomm uC 'Xqcilia` (Large "
"Immediate Arithmetic) extension."
msgstr ""

#: ../../../ReleaseNotes.md:183
msgid ""
"Adds experimental assembler support for the Qualcomm uC 'Xqcibm` (Bit "
"Manipulation) extension."
msgstr ""

#: ../../../ReleaseNotes.md:185
msgid ""
"Adds experimental assembler support for the Qualcomm uC 'Xqcibi` (Branch "
"Immediate) extension."
msgstr ""

#: ../../../ReleaseNotes.md:187
msgid ""
"Adds experimental assembler and code generation support for the Qualcomm "
"'Xqccmp' extension, which is a frame-pointer convention compatible version "
"of Zcmp."
msgstr ""

#: ../../../ReleaseNotes.md:190
msgid ""
"Added non-quadratic ``log-vrgather`` cost model for ``vrgather.vv`` "
"instruction"
msgstr ""

#: ../../../ReleaseNotes.md:191
msgid ""
"Adds experimental assembler support for the Qualcomm uC 'Xqcisim` "
"(Simulation Hint) extension."
msgstr ""

#: ../../../ReleaseNotes.md:193
msgid ""
"Adds experimental assembler support for the Qualcomm uC 'Xqcisync` (Sync "
"Delay) extension."
msgstr ""

#: ../../../ReleaseNotes.md:195
msgid ""
"Adds experimental assembler support for the Qualcomm uC 'Xqciio` (External "
"Input Output) extension."
msgstr ""

#: ../../../ReleaseNotes.md:197
msgid ""
"Adds assembler support for the 'Zilsd` (Load/Store Pair Instructions) "
"extension."
msgstr ""

#: ../../../ReleaseNotes.md:199
msgid ""
"Adds assembler support for the 'Zclsd` (Compressed Load/Store Pair "
"Instructions) extension."
msgstr ""

#: ../../../ReleaseNotes.md:201
msgid "Adds experimental assembler support for Zvqdotq."
msgstr ""

#: ../../../ReleaseNotes.md:202
msgid ""
"Adds Support for Qualcomm's `qci-nest` and `qci-nonest` interrupt types, "
"which use instructions from `Xqciint` to save and restore some GPRs during "
"interrupt handlers."
msgstr ""

#: ../../../ReleaseNotes.md:205
msgid ""
"When the experimental extension `Xqcili` is enabled, `qc.e.li` and `qc.li` "
"may now be used to materialize immediates."
msgstr ""

#: ../../../ReleaseNotes.md:207
msgid ""
"Adds assembler support for ``.option exact``, which disables automatic "
"compression, and branch and linker relaxation. This can be disabled with ``."
"option noexact``, which is also the default."
msgstr ""

#: ../../../ReleaseNotes.md:210
msgid "`-mcpu=xiangshan-kunminghu` was added."
msgstr ""

#: ../../../ReleaseNotes.md:211
msgid "`-mcpu=andes-n45` and `-mcpu=andes-nx45` were added."
msgstr ""

#: ../../../ReleaseNotes.md:212
msgid "`-mcpu=andes-a45` and `-mcpu=andes-ax45` were added."
msgstr ""

#: ../../../ReleaseNotes.md:213
msgid ""
"Adds support for the 'Ziccamoc` (Main Memory Supports Atomics in Zacas) "
"extension, which was introduced as an optional extension of the RISC-V "
"Profiles specification."
msgstr ""

#: ../../../ReleaseNotes.md:214
msgid ""
"Adds experimental assembler support for SiFive CLIC CSRs, under the names "
"`Zsfmclic` for the M-mode registers and `Zsfsclic` for the S-mode registers."
msgstr ""

#: ../../../ReleaseNotes.md:216
msgid ""
"Adds Support for SiFive CLIC interrupt attributes, which automate writing "
"CLIC interrupt handlers without using inline assembly."
msgstr ""

#: ../../../ReleaseNotes.md:218
msgid ""
"Adds assembler support for the Andes `XAndesperf` (Andes Performance "
"extension)."
msgstr ""

#: ../../../ReleaseNotes.md:219
msgid "`-mcpu=sifive-p870` was added."
msgstr ""

#: ../../../ReleaseNotes.md:220
msgid ""
"Adds assembler support for the Andes `XAndesvpackfph` (Andes Vector Packed "
"FP16 extension)."
msgstr ""

#: ../../../ReleaseNotes.md:221
msgid ""
"Adds assembler support for the Andes `XAndesvdot` (Andes Vector Dot Product "
"extension)."
msgstr ""

#: ../../../ReleaseNotes.md:222
msgid ""
"Adds assembler support for the standard `Q` (Quad-Precision Floating Point)  "
"extension."
msgstr ""

#: ../../../ReleaseNotes.md:224
msgid ""
"Adds experimental assembler support for the SiFive Xsfmm* Attached Matrix "
"Extensions."
msgstr ""

#: ../../../ReleaseNotes.md:226
msgid "`-mcpu=andes-a25` and `-mcpu=andes-ax25` were added."
msgstr ""

#: ../../../ReleaseNotes.md:227
msgid "The `Shlcofideleg` extension was added."
msgstr ""

#: ../../../ReleaseNotes.md:228
msgid "`-mcpu=sifive-x390` was added."
msgstr ""

#: ../../../ReleaseNotes.md:229
msgid "`-mtune=andes-45-series` was added."
msgstr ""

#: ../../../ReleaseNotes.md:230
msgid ""
"Adds assembler support for the Andes `XAndesvbfhcvt` (Andes Vector BFLOAT16 "
"Conversion extension)."
msgstr ""

#: ../../../ReleaseNotes.md:231
msgid "`-mcpu=andes-ax45mpv` was added."
msgstr ""

#: ../../../ReleaseNotes.md:232
msgid ""
"Removed -mattr=+no-rvc-hints that could be used to disable parsing and "
"generation of RVC hints."
msgstr ""

#: ../../../ReleaseNotes.md:233
msgid ""
"Adds assembler support for the Andes `XAndesvsintload` (Andes Vector INT4 "
"Load extension)."
msgstr ""

#: ../../../ReleaseNotes.md:234
msgid ""
"Adds assembler support for the Andes `XAndesbfhcvt` (Andes Scalar BFLOAT16 "
"Conversion extension)."
msgstr ""

#: ../../../ReleaseNotes.md:235
msgid "Add combine for shadd family of instructions."
msgstr ""

#: ../../../ReleaseNotes.md:237
msgid "Changes to the WebAssembly Backend"
msgstr ""

#: ../../../ReleaseNotes.md:240
msgid "Changes to the Windows Target"
msgstr ""

#: ../../../ReleaseNotes.md:243
msgid ""
"`fp128` is now passed indirectly, meaning it uses the same calling "
"convention as `i128`."
msgstr ""

#: ../../../ReleaseNotes.md:247
msgid "Changes to the X86 Backend"
msgstr ""

#: ../../../ReleaseNotes.md:250
msgid "`fp128` will now use `*f128` libcalls on 32-bit GNU targets as well."
msgstr ""

#: ../../../ReleaseNotes.md:251
msgid ""
"On x86-32, `fp128` and `i128` are now passed with the expected 16-byte stack "
"alignment."
msgstr ""

#: ../../../ReleaseNotes.md:254
msgid "Changes to the OCaml bindings"
msgstr ""

#: ../../../ReleaseNotes.md:257
msgid "Changes to the Python bindings"
msgstr ""

#: ../../../ReleaseNotes.md:260
msgid "Changes to the C API"
msgstr ""

#: ../../../ReleaseNotes.md:263
msgid ""
"The following functions for creating constant expressions have been removed, "
"because the underlying constant expressions are no longer supported. "
"Instead, an instruction should be created using the `LLVMBuildXYZ` APIs, "
"which will constant fold the operands if possible and create an instruction "
"otherwise:"
msgstr ""

#: ../../../ReleaseNotes.md:268
msgid "`LLVMConstMul`"
msgstr ""

#: ../../../ReleaseNotes.md:269
msgid "`LLVMConstNUWMul`"
msgstr ""

#: ../../../ReleaseNotes.md:270
msgid "`LLVMConstNSWMul`"
msgstr ""

#: ../../../ReleaseNotes.md:272
msgid ""
"Added `LLVMConstDataArray` and `LLVMGetRawDataValues` to allow creating and "
"reading `ConstantDataArray` values without needing extra `LLVMValueRef`s for "
"individual elements."
msgstr ""

#: ../../../ReleaseNotes.md:276
msgid ""
"Added ``LLVMDIBuilderCreateEnumeratorOfArbitraryPrecision`` for creating "
"debugging metadata of enumerators larger than 64 bits."
msgstr ""

#: ../../../ReleaseNotes.md:279
msgid ""
"Added ``LLVMGetICmpSameSign`` and ``LLVMSetICmpSameSign`` for the `samesign` "
"flag on `icmp` instructions."
msgstr ""

#: ../../../ReleaseNotes.md:282
msgid "Changes to the CodeGen infrastructure"
msgstr ""

#: ../../../ReleaseNotes.md:285
msgid "Changes to the Metadata Info"
msgstr ""

#: ../../../ReleaseNotes.md:288
msgid "Changes to the Debug Info"
msgstr ""

#: ../../../ReleaseNotes.md:291
msgid "Changes to the LLVM tools"
msgstr ""

#: ../../../ReleaseNotes.md:294
msgid ""
"llvm-objcopy now supports the `--update-section` flag for intermediate Mach-"
"O object files."
msgstr ""

#: ../../../ReleaseNotes.md:295
msgid ""
"llvm-strip now supports continuing to process files on encountering an error."
msgstr ""

#: ../../../ReleaseNotes.md:296
msgid ""
"In llvm-objcopy/llvm-strip's ELF port, `--discard-locals` and `--discard-"
"all` now allow and preserve symbols referenced by relocations. ([#47468]"
"(https://github.com/llvm/llvm-project/issues/47468))"
msgstr ""

#: ../../../ReleaseNotes.md:298
msgid "llvm-addr2line now supports a `+` prefix when specifying an address."
msgstr ""

#: ../../../ReleaseNotes.md:299
msgid "Support for `SHT_LLVM_BB_ADDR_MAP` versions 0 and 1 has been dropped."
msgstr ""

#: ../../../ReleaseNotes.md:301
msgid "Changes to LLDB"
msgstr ""

#: ../../../ReleaseNotes.md:304
msgid ""
"When building LLDB with Python support, the minimum version of Python is now "
"3.8."
msgstr ""

#: ../../../ReleaseNotes.md:306
msgid ""
"LLDB now supports hardware watchpoints for AArch64 Windows targets. Windows "
"does not provide API to query the number of supported hardware watchpoints. "
"Therefore current implementation allows only 1 watchpoint, as tested with "
"Windows 11 on the Microsoft SQ2 and Snapdragon Elite X platforms."
msgstr ""

#: ../../../ReleaseNotes.md:310
msgid ""
"LLDB now steps through C++ thunks. This fixes an issue where previously, it "
"wouldn't step into multiple inheritance virtual functions."
msgstr ""

#: ../../../ReleaseNotes.md:312
msgid ""
"A statusline was added to command-line LLDB to show progress events and "
"information about the current state of the debugger at the bottom of the "
"terminal. This is on by default and can be configured using the `show-"
"statusline` and `statusline-format` settings. It is not currently supported "
"on Windows."
msgstr ""

#: ../../../ReleaseNotes.md:317
msgid ""
"The `min-gdbserver-port` and `max-gdbserver-port` options have been removed "
"from `lldb-server`'s platform mode. Since the changes to `lldb-server`'s "
"port handling in LLDB 20, these options have had no effect."
msgstr ""

#: ../../../ReleaseNotes.md:320
msgid ""
"LLDB now supports `process continue --reverse` when used with debug servers "
"supporting reverse execution, such as [rr](https://rr-project.org). When "
"using reverse execution, `process continue --forward` returns to the forward "
"execution."
msgstr ""

#: ../../../ReleaseNotes.md:324
msgid "LLDB now supports RISC-V 32-bit ELF core files."
msgstr ""

#: ../../../ReleaseNotes.md:325
msgid ""
"LLDB now supports siginfo descriptions for Linux user-space signals. User "
"space signals will now have descriptions describing the method and sender."
msgstr ""

#: ../../../ReleaseNotes.md:330
msgid ""
"ELF Cores can now have their siginfo structures inspected using `thread "
"siginfo`."
msgstr ""

#: ../../../ReleaseNotes.md:331
msgid ""
"LLDB now uses [DIL](https://discourse.llvm.org/t/rfc-data-inspection-"
"language/69893) as the default implementation for 'frame variable'. This "
"should not change the behavior of 'frame variable' at all, at this time. To "
"revert to using the old implementation use: `settings set target."
"experimental.use-DIL false`."
msgstr ""

#: ../../../ReleaseNotes.md:336
msgid ""
"Disassembly of unknown instructions now produces `<unknown>` instead of "
"nothing at all"
msgstr ""

#: ../../../ReleaseNotes.md:338
msgid ""
"Changed the format of opcode bytes to match llvm-objdump when disassembling "
"RISC-V code with `disassemble`'s `--byte` option."
msgstr ""

#: ../../../ReleaseNotes.md:340
msgid ""
"LLDB added native support for the Model Context Protocol  (MCP). An MCP "
"server can be started with the `protocol-server start MCP` command."
msgstr ""

#: ../../../ReleaseNotes.md:342
msgid ""
"On AArch64 Linux, LLDB will now show the state of the `STORE_ONLY` field of "
"`mte_ctrl`. This will only be shown on hardware that has the "
"`FEAT_MTE_STORE_ONLY` architecture feature."
msgstr ""

#: ../../../ReleaseNotes.md:347
msgid "Changes to lldb-dap"
msgstr ""

#: ../../../ReleaseNotes.md:349
msgid "Breakpoints can now be set for specific columns within a line."
msgstr ""

#: ../../../ReleaseNotes.md:350
msgid "Function return value is now displayed on step-out."
msgstr ""

#: ../../../ReleaseNotes.md:352
msgid "Changes to BOLT"
msgstr ""

#: ../../../ReleaseNotes.md:355
msgid "Changes to Sanitizers"
msgstr ""

#: ../../../ReleaseNotes.md:358
msgid "Other Changes"
msgstr ""

#: ../../../ReleaseNotes.md:360
msgid ""
"A new ThinLTO backend has been added to implement the [Integrated "
"Distributed ThinLTO](https://llvm.org/docs/DTLTO.html) (DTLTO) feature. This "
"new backend delegates the ThinLTO backend compilation jobs to an external "
"process (the distributor), which in turn coordinates distribution through a "
"system such as Incredibuild. A JSON interface is used for communication with "
"the distributor. ([#47468](https://github.com/llvm/llvm-project/"
"issues/47468))."
msgstr ""

#: ../../../ReleaseNotes.md:368
msgid "Changes to the Profile Runtime"
msgstr ""

#: ../../../ReleaseNotes.md:371
msgid ""
"On AIX, avoid using mmap when reading profile files from a non-local "
"filesystem."
msgstr ""

#: ../../../ReleaseNotes.md:373
msgid "External Open Source Projects Using LLVM {{env.config.release}}"
msgstr ""

#: ../../../ReleaseNotes.md:376
msgid "A project..."
msgstr ""

#: ../../../ReleaseNotes.md:378
msgid "Additional Information"
msgstr ""

#: ../../../ReleaseNotes.md:381
msgid ""
"A wide variety of additional information is available on the [LLVM web page]"
"(https://llvm.org/), in particular in the [documentation](https://llvm.org/"
"docs/) section.  The web page also contains versions of the API "
"documentation which is up-to-date with the Git version of the source code.  "
"You can access versions of these documents specific to this release by going "
"into the `llvm/docs/` directory in the LLVM tree."
msgstr ""

#: ../../../ReleaseNotes.md:388
msgid ""
"If you have any questions or comments about LLVM, please feel free to "
"contact us via the [Discourse forums](https://discourse.llvm.org)."
msgstr ""
