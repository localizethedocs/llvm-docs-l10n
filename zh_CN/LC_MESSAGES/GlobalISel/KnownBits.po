# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../GlobalISel/KnownBits.rst:2
msgid "Known Bits Analysis"
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:4
msgid ""
"The Known Bits Analysis pass makes information about the known values of "
"bits available to other passes to enable transformations like those in the "
"examples below. The information is lazily computed so you should only pay "
"for what you use."
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:10
msgid "Examples"
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:12
msgid "A simple example is that transforming::"
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:16
msgid "into::"
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:20
msgid ""
"is only valid when the addition doesn't carry. In other words it's only "
"valid if ``a & 1`` is zero."
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:23
msgid "Another example is:"
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:32
msgid ""
"We can use the constants and the definition of ``G_AND`` to determine the "
"known bits:"
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:43
msgid "and then use this to simplify the expression:"
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:51
msgid ""
"Note that ``%4`` still has the same known bits as before the transformation. "
"Many transformations share this property. The main exception being when the "
"transform causes undefined bits to become defined to either zero, one, or "
"defined but unknown."
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:57
msgid "Usage"
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:59
msgid ""
"To use Known Bits Analysis in a pass, first include the header and register "
"the dependency with ``INITIALIZE_PASS_DEPENDENCY``."
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:72
msgid "and require the pass in ``getAnalysisUsage``."
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:83
msgid "Then it's just a matter of fetching the analysis and using it:"
msgstr ""

#: ../../../GlobalISel/KnownBits.rst:99
msgid ""
"There are many more API's beyond ``getKnownBits()``. See the `API reference "
"<https://llvm.org/doxygen>`_ for more information"
msgstr ""
