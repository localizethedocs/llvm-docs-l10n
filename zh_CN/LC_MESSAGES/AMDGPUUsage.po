# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../AMDGPUUsage.rst:3
msgid "User Guide for AMDGPU Backend"
msgstr ""

#: ../../../AMDGPUUsage.rst:9
msgid "Introduction"
msgstr ""

#: ../../../AMDGPUUsage.rst:11
msgid ""
"The AMDGPU backend provides ISA code generation for AMD GPUs, starting with "
"the R600 family up until the current GCN families. It lives in the ``lib/"
"Target/AMDGPU`` directory."
msgstr ""

#: ../../../AMDGPUUsage.rst:16
msgid "LLVM"
msgstr ""

#: ../../../AMDGPUUsage.rst:21
msgid "Target Triples"
msgstr ""

#: ../../../AMDGPUUsage.rst:23
msgid ""
"Use the ``clang -target <Architecture>-<Vendor>-<OS>-<Environment>`` option "
"to specify the target triple:"
msgstr ""

#: ../../../AMDGPUUsage.rst:26
msgid "AMDGPU Architectures"
msgstr ""

#: ../../../AMDGPUUsage.rst:30
msgid "Architecture"
msgstr ""

#: ../../../AMDGPUUsage.rst:30 ../../../AMDGPUUsage.rst:40
#: ../../../AMDGPUUsage.rst:50 ../../../AMDGPUUsage.rst:65
#: ../../../AMDGPUUsage.rst:249 ../../../AMDGPUUsage.rst:319
#: ../../../AMDGPUUsage.rst:394 ../../../AMDGPUUsage.rst:533
#: ../../../AMDGPUUsage.rst:696 ../../../AMDGPUUsage.rst:735
#: ../../../AMDGPUUsage.rst:770 ../../../AMDGPUUsage.rst:960
#: ../../../AMDGPUUsage.rst:1088 ../../../AMDGPUUsage.rst:1132
#: ../../../AMDGPUUsage.rst:1169 ../../../AMDGPUUsage.rst:1210
#: ../../../AMDGPUUsage.rst:1408 ../../../AMDGPUUsage.rst:1508
#: ../../../AMDGPUUsage.rst:1553 ../../../AMDGPUUsage.rst:1697
#: ../../../AMDGPUUsage.rst:2084 ../../../AMDGPUUsage.rst:2157
#: ../../../AMDGPUUsage.rst:2387 ../../../AMDGPUUsage.rst:2540
#: ../../../AMDGPUUsage.rst:2554 ../../../AMDGPUUsage.rst:2569
#: ../../../AMDGPUUsage.rst:2610 ../../../AMDGPUUsage.rst:2813
#: ../../../AMDGPUUsage.rst:4318 ../../../AMDGPUUsage.rst:4391
#: ../../../AMDGPUUsage.rst:4410 ../../../AMDGPUUsage.rst:4455
#: ../../../AMDGPUUsage.rst:4495 ../../../AMDGPUUsage.rst:4523
#: ../../../AMDGPUUsage.rst:4950
msgid "Description"
msgstr ""

#: ../../../AMDGPUUsage.rst:32 ../../../AMDGPUUsage.rst:89
#: ../../../AMDGPUUsage.rst:90 ../../../AMDGPUUsage.rst:91
#: ../../../AMDGPUUsage.rst:92 ../../../AMDGPUUsage.rst:95
#: ../../../AMDGPUUsage.rst:96 ../../../AMDGPUUsage.rst:97
#: ../../../AMDGPUUsage.rst:100 ../../../AMDGPUUsage.rst:101
#: ../../../AMDGPUUsage.rst:102 ../../../AMDGPUUsage.rst:103
#: ../../../AMDGPUUsage.rst:104 ../../../AMDGPUUsage.rst:107
#: ../../../AMDGPUUsage.rst:108 ../../../AMDGPUUsage.rst:109
#: ../../../AMDGPUUsage.rst:110 ../../../AMDGPUUsage.rst:574
msgid "``r600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:32
msgid "AMD GPUs HD2XXX-HD6XXX for graphics and compute shaders."
msgstr ""

#: ../../../AMDGPUUsage.rst:33 ../../../AMDGPUUsage.rst:113
#: ../../../AMDGPUUsage.rst:114 ../../../AMDGPUUsage.rst:120
#: ../../../AMDGPUUsage.rst:130 ../../../AMDGPUUsage.rst:134
#: ../../../AMDGPUUsage.rst:138 ../../../AMDGPUUsage.rst:147
#: ../../../AMDGPUUsage.rst:153 ../../../AMDGPUUsage.rst:159
#: ../../../AMDGPUUsage.rst:162 ../../../AMDGPUUsage.rst:168
#: ../../../AMDGPUUsage.rst:171 ../../../AMDGPUUsage.rst:179
#: ../../../AMDGPUUsage.rst:185 ../../../AMDGPUUsage.rst:188
#: ../../../AMDGPUUsage.rst:190 ../../../AMDGPUUsage.rst:194
#: ../../../AMDGPUUsage.rst:201 ../../../AMDGPUUsage.rst:203
#: ../../../AMDGPUUsage.rst:208 ../../../AMDGPUUsage.rst:212
msgid "``amdgcn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:33
msgid "AMD GPUs GCN GFX6 onwards for graphics and compute shaders."
msgstr ""

#: ../../../AMDGPUUsage.rst:36
msgid "AMDGPU Vendors"
msgstr ""

#: ../../../AMDGPUUsage.rst:40
msgid "Vendor"
msgstr ""

#: ../../../AMDGPUUsage.rst:42
msgid "``amd``"
msgstr ""

#: ../../../AMDGPUUsage.rst:42
msgid "Can be used for all AMD GPU usage."
msgstr ""

#: ../../../AMDGPUUsage.rst:43 ../../../AMDGPUUsage.rst:57
msgid "``mesa3d``"
msgstr ""

#: ../../../AMDGPUUsage.rst:43
msgid "Can be used if the OS is ``mesa3d``."
msgstr ""

#: ../../../AMDGPUUsage.rst:46
msgid "AMDGPU Operating Systems"
msgstr ""

#: ../../../AMDGPUUsage.rst:50
msgid "OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:52 ../../../AMDGPUUsage.rst:67
msgid "*<empty>*"
msgstr ""

#: ../../../AMDGPUUsage.rst:52
msgid "Defaults to the *unknown* OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:53
msgid "``amdhsa``"
msgstr ""

#: ../../../AMDGPUUsage.rst:53
msgid ""
"Compute kernels executed on HSA [HSA]_ compatible runtimes such as AMD's "
"ROCm [AMD-ROCm]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:55
msgid "``amdpal``"
msgstr ""

#: ../../../AMDGPUUsage.rst:55
msgid "Graphic shaders and compute kernels executed on AMD PAL runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:57
msgid "Graphic shaders and compute kernels executed on Mesa 3D runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:61
msgid "AMDGPU Environments"
msgstr ""

#: ../../../AMDGPUUsage.rst:65
msgid "Environment"
msgstr ""

#: ../../../AMDGPUUsage.rst:67
msgid "Default."
msgstr ""

#: ../../../AMDGPUUsage.rst:73
msgid "Processors"
msgstr ""

#: ../../../AMDGPUUsage.rst:75
msgid ""
"Use the ``clang -mcpu <Processor>`` option to specify the AMD GPU processor. "
"The names from both the *Processor* and *Alternative Processor* can be used."
msgstr ""

#: ../../../AMDGPUUsage.rst:78
msgid "AMDGPU Processors"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "Processor"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "Alternative Processor"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "Target Triple Architecture"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "dGPU/ APU"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "Target Features Supported [Default]"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "ROCm Support"
msgstr ""

#: ../../../AMDGPUUsage.rst:82
msgid "Example Products"
msgstr ""

#: ../../../AMDGPUUsage.rst:87
msgid "**Radeon HD 2000/3000 Series (R600)** [AMD-RADEON-HD-2000-3000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:89 ../../../AMDGPUUsage.rst:90
#: ../../../AMDGPUUsage.rst:91 ../../../AMDGPUUsage.rst:92
#: ../../../AMDGPUUsage.rst:95 ../../../AMDGPUUsage.rst:96
#: ../../../AMDGPUUsage.rst:97 ../../../AMDGPUUsage.rst:100
#: ../../../AMDGPUUsage.rst:101 ../../../AMDGPUUsage.rst:102
#: ../../../AMDGPUUsage.rst:103 ../../../AMDGPUUsage.rst:104
#: ../../../AMDGPUUsage.rst:107 ../../../AMDGPUUsage.rst:108
#: ../../../AMDGPUUsage.rst:109 ../../../AMDGPUUsage.rst:110
#: ../../../AMDGPUUsage.rst:113 ../../../AMDGPUUsage.rst:114
#: ../../../AMDGPUUsage.rst:130 ../../../AMDGPUUsage.rst:134
#: ../../../AMDGPUUsage.rst:147 ../../../AMDGPUUsage.rst:171
#: ../../../AMDGPUUsage.rst:179 ../../../AMDGPUUsage.rst:185
#: ../../../AMDGPUUsage.rst:188 ../../../AMDGPUUsage.rst:194
#: ../../../AMDGPUUsage.rst:203 ../../../AMDGPUUsage.rst:208
msgid "dGPU"
msgstr ""

#: ../../../AMDGPUUsage.rst:90 ../../../AMDGPUUsage.rst:575
msgid "``r630``"
msgstr ""

#: ../../../AMDGPUUsage.rst:91 ../../../AMDGPUUsage.rst:576
msgid "``rs880``"
msgstr ""

#: ../../../AMDGPUUsage.rst:92 ../../../AMDGPUUsage.rst:577
msgid "``rv670``"
msgstr ""

#: ../../../AMDGPUUsage.rst:93
msgid "**Radeon HD 4000 Series (R700)** [AMD-RADEON-HD-4000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:95 ../../../AMDGPUUsage.rst:578
msgid "``rv710``"
msgstr ""

#: ../../../AMDGPUUsage.rst:96 ../../../AMDGPUUsage.rst:579
msgid "``rv730``"
msgstr ""

#: ../../../AMDGPUUsage.rst:97 ../../../AMDGPUUsage.rst:580
msgid "``rv770``"
msgstr ""

#: ../../../AMDGPUUsage.rst:98
msgid "**Radeon HD 5000 Series (Evergreen)** [AMD-RADEON-HD-5000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:100 ../../../AMDGPUUsage.rst:581
msgid "``cedar``"
msgstr ""

#: ../../../AMDGPUUsage.rst:101 ../../../AMDGPUUsage.rst:582
msgid "``cypress``"
msgstr ""

#: ../../../AMDGPUUsage.rst:102 ../../../AMDGPUUsage.rst:583
msgid "``juniper``"
msgstr ""

#: ../../../AMDGPUUsage.rst:103 ../../../AMDGPUUsage.rst:584
msgid "``redwood``"
msgstr ""

#: ../../../AMDGPUUsage.rst:104 ../../../AMDGPUUsage.rst:585
msgid "``sumo``"
msgstr ""

#: ../../../AMDGPUUsage.rst:105
msgid "**Radeon HD 6000 Series (Northern Islands)** [AMD-RADEON-HD-6000]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:107 ../../../AMDGPUUsage.rst:586
msgid "``barts``"
msgstr ""

#: ../../../AMDGPUUsage.rst:108 ../../../AMDGPUUsage.rst:587
msgid "``caicos``"
msgstr ""

#: ../../../AMDGPUUsage.rst:109 ../../../AMDGPUUsage.rst:588
msgid "``cayman``"
msgstr ""

#: ../../../AMDGPUUsage.rst:110 ../../../AMDGPUUsage.rst:589
msgid "``turks``"
msgstr ""

#: ../../../AMDGPUUsage.rst:111
msgid "**GCN GFX6 (Southern Islands (SI))** [AMD-GCN-GFX6]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:113 ../../../AMDGPUUsage.rst:592
msgid "``gfx600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:113
msgid "``tahiti``"
msgstr ""

#: ../../../AMDGPUUsage.rst:114 ../../../AMDGPUUsage.rst:593
msgid "``gfx601``"
msgstr ""

#: ../../../AMDGPUUsage.rst:114
msgid "``hainan``"
msgstr ""

#: ../../../AMDGPUUsage.rst:115
msgid "``oland``"
msgstr ""

#: ../../../AMDGPUUsage.rst:116
msgid "``pitcairn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:117
msgid "``verde``"
msgstr ""

#: ../../../AMDGPUUsage.rst:118
msgid "**GCN GFX7 (Sea Islands (CI))** [AMD-GCN-GFX7]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:120 ../../../AMDGPUUsage.rst:594
msgid "``gfx700``"
msgstr ""

#: ../../../AMDGPUUsage.rst:120
msgid "``kaveri``"
msgstr ""

#: ../../../AMDGPUUsage.rst:120 ../../../AMDGPUUsage.rst:138
#: ../../../AMDGPUUsage.rst:153 ../../../AMDGPUUsage.rst:159
#: ../../../AMDGPUUsage.rst:162 ../../../AMDGPUUsage.rst:168
#: ../../../AMDGPUUsage.rst:190 ../../../AMDGPUUsage.rst:201
#: ../../../AMDGPUUsage.rst:212
msgid "APU"
msgstr ""

#: ../../../AMDGPUUsage.rst:120
msgid "A6-7000"
msgstr ""

#: ../../../AMDGPUUsage.rst:121
msgid "A6 Pro-7050B"
msgstr ""

#: ../../../AMDGPUUsage.rst:122
msgid "A8-7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:123
msgid "A8 Pro-7150B"
msgstr ""

#: ../../../AMDGPUUsage.rst:124
msgid "A10-7300"
msgstr ""

#: ../../../AMDGPUUsage.rst:125
msgid "A10 Pro-7350B"
msgstr ""

#: ../../../AMDGPUUsage.rst:126
msgid "FX-7500"
msgstr ""

#: ../../../AMDGPUUsage.rst:127
msgid "A8-7200P"
msgstr ""

#: ../../../AMDGPUUsage.rst:128
msgid "A10-7400P"
msgstr ""

#: ../../../AMDGPUUsage.rst:129
msgid "FX-7600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:130 ../../../AMDGPUUsage.rst:595
msgid "``gfx701``"
msgstr ""

#: ../../../AMDGPUUsage.rst:130
msgid "``hawaii``"
msgstr ""

#: ../../../AMDGPUUsage.rst:130 ../../../AMDGPUUsage.rst:134
#: ../../../AMDGPUUsage.rst:159 ../../../AMDGPUUsage.rst:171
#: ../../../AMDGPUUsage.rst:179 ../../../AMDGPUUsage.rst:185
#: ../../../AMDGPUUsage.rst:188 ../../../AMDGPUUsage.rst:194
msgid "ROCm"
msgstr ""

#: ../../../AMDGPUUsage.rst:130
msgid "FirePro W8100"
msgstr ""

#: ../../../AMDGPUUsage.rst:131
msgid "FirePro W9100"
msgstr ""

#: ../../../AMDGPUUsage.rst:132
msgid "FirePro S9150"
msgstr ""

#: ../../../AMDGPUUsage.rst:133
msgid "FirePro S9170"
msgstr ""

#: ../../../AMDGPUUsage.rst:134 ../../../AMDGPUUsage.rst:596
msgid "``gfx702``"
msgstr ""

#: ../../../AMDGPUUsage.rst:134
msgid "Radeon R9 290"
msgstr ""

#: ../../../AMDGPUUsage.rst:135
msgid "Radeon R9 290x"
msgstr ""

#: ../../../AMDGPUUsage.rst:136
msgid "Radeon R390"
msgstr ""

#: ../../../AMDGPUUsage.rst:137
msgid "Radeon R390x"
msgstr ""

#: ../../../AMDGPUUsage.rst:138 ../../../AMDGPUUsage.rst:597
msgid "``gfx703``"
msgstr ""

#: ../../../AMDGPUUsage.rst:138
msgid "``kabini``"
msgstr ""

#: ../../../AMDGPUUsage.rst:139
msgid "``mullins``"
msgstr ""

#: ../../../AMDGPUUsage.rst:138
msgid "E1-2100"
msgstr ""

#: ../../../AMDGPUUsage.rst:139
msgid "E1-2200"
msgstr ""

#: ../../../AMDGPUUsage.rst:140
msgid "E1-2500"
msgstr ""

#: ../../../AMDGPUUsage.rst:141
msgid "E2-3000"
msgstr ""

#: ../../../AMDGPUUsage.rst:142
msgid "E2-3800"
msgstr ""

#: ../../../AMDGPUUsage.rst:143
msgid "A4-5000"
msgstr ""

#: ../../../AMDGPUUsage.rst:144
msgid "A4-5100"
msgstr ""

#: ../../../AMDGPUUsage.rst:145
msgid "A6-5200"
msgstr ""

#: ../../../AMDGPUUsage.rst:146
msgid "A4 Pro-3340B"
msgstr ""

#: ../../../AMDGPUUsage.rst:147 ../../../AMDGPUUsage.rst:598
msgid "``gfx704``"
msgstr ""

#: ../../../AMDGPUUsage.rst:147
msgid "``bonaire``"
msgstr ""

#: ../../../AMDGPUUsage.rst:147
msgid "Radeon HD 7790"
msgstr ""

#: ../../../AMDGPUUsage.rst:148
msgid "Radeon HD 8770"
msgstr ""

#: ../../../AMDGPUUsage.rst:149
msgid "R7 260"
msgstr ""

#: ../../../AMDGPUUsage.rst:150
msgid "R7 260X"
msgstr ""

#: ../../../AMDGPUUsage.rst:151
msgid "**GCN GFX8 (Volcanic Islands (VI))** [AMD-GCN-GFX8]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:153 ../../../AMDGPUUsage.rst:600
msgid "``gfx801``"
msgstr ""

#: ../../../AMDGPUUsage.rst:153
msgid "``carrizo``"
msgstr ""

#: ../../../AMDGPUUsage.rst:153 ../../../AMDGPUUsage.rst:159
#: ../../../AMDGPUUsage.rst:162 ../../../AMDGPUUsage.rst:168
#: ../../../AMDGPUUsage.rst:190 ../../../AMDGPUUsage.rst:201
#: ../../../AMDGPUUsage.rst:212
msgid "xnack [on]"
msgstr ""

#: ../../../AMDGPUUsage.rst:153
msgid "A6-8500P"
msgstr ""

#: ../../../AMDGPUUsage.rst:154
msgid "Pro A6-8500B"
msgstr ""

#: ../../../AMDGPUUsage.rst:155
msgid "A8-8600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:156
msgid "Pro A8-8600B"
msgstr ""

#: ../../../AMDGPUUsage.rst:157
msgid "FX-8800P"
msgstr ""

#: ../../../AMDGPUUsage.rst:158
msgid "Pro A12-8800B"
msgstr ""

#: ../../../AMDGPUUsage.rst:159 ../../../AMDGPUUsage.rst:162
#: ../../../AMDGPUUsage.rst:168 ../../../AMDGPUUsage.rst:185
#: ../../../AMDGPUUsage.rst:188
msgid "\\"
msgstr ""

#: ../../../AMDGPUUsage.rst:159
msgid "A10-8700P"
msgstr ""

#: ../../../AMDGPUUsage.rst:160
msgid "Pro A10-8700B"
msgstr ""

#: ../../../AMDGPUUsage.rst:161
msgid "A10-8780P"
msgstr ""

#: ../../../AMDGPUUsage.rst:162
msgid "A10-9600P"
msgstr ""

#: ../../../AMDGPUUsage.rst:163
msgid "A10-9630P"
msgstr ""

#: ../../../AMDGPUUsage.rst:164
msgid "A12-9700P"
msgstr ""

#: ../../../AMDGPUUsage.rst:165
msgid "A12-9730P"
msgstr ""

#: ../../../AMDGPUUsage.rst:166
msgid "FX-9800P"
msgstr ""

#: ../../../AMDGPUUsage.rst:167
msgid "FX-9830P"
msgstr ""

#: ../../../AMDGPUUsage.rst:168
msgid "E2-9010"
msgstr ""

#: ../../../AMDGPUUsage.rst:169
msgid "A6-9210"
msgstr ""

#: ../../../AMDGPUUsage.rst:170
msgid "A9-9410"
msgstr ""

#: ../../../AMDGPUUsage.rst:171 ../../../AMDGPUUsage.rst:601
msgid "``gfx802``"
msgstr ""

#: ../../../AMDGPUUsage.rst:171
msgid "``iceland``"
msgstr ""

#: ../../../AMDGPUUsage.rst:172
msgid "``tonga``"
msgstr ""

#: ../../../AMDGPUUsage.rst:171 ../../../AMDGPUUsage.rst:179
#: ../../../AMDGPUUsage.rst:185 ../../../AMDGPUUsage.rst:188
#: ../../../AMDGPUUsage.rst:194 ../../../AMDGPUUsage.rst:203
msgid "xnack [off]"
msgstr ""

#: ../../../AMDGPUUsage.rst:171
msgid "FirePro S7150"
msgstr ""

#: ../../../AMDGPUUsage.rst:172
msgid "FirePro S7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:173
msgid "FirePro W7100"
msgstr ""

#: ../../../AMDGPUUsage.rst:174
msgid "Radeon R285"
msgstr ""

#: ../../../AMDGPUUsage.rst:175
msgid "Radeon R9 380"
msgstr ""

#: ../../../AMDGPUUsage.rst:176
msgid "Radeon R9 385"
msgstr ""

#: ../../../AMDGPUUsage.rst:177
msgid "Mobile FirePro M7170"
msgstr ""

#: ../../../AMDGPUUsage.rst:179 ../../../AMDGPUUsage.rst:602
msgid "``gfx803``"
msgstr ""

#: ../../../AMDGPUUsage.rst:179
msgid "``fiji``"
msgstr ""

#: ../../../AMDGPUUsage.rst:179
msgid "Radeon R9 Nano"
msgstr ""

#: ../../../AMDGPUUsage.rst:180
msgid "Radeon R9 Fury"
msgstr ""

#: ../../../AMDGPUUsage.rst:181
msgid "Radeon R9 FuryX"
msgstr ""

#: ../../../AMDGPUUsage.rst:182
msgid "Radeon Pro Duo"
msgstr ""

#: ../../../AMDGPUUsage.rst:183
msgid "FirePro S9300x2"
msgstr ""

#: ../../../AMDGPUUsage.rst:184
msgid "Radeon Instinct MI8"
msgstr ""

#: ../../../AMDGPUUsage.rst:185
msgid "``polaris10``"
msgstr ""

#: ../../../AMDGPUUsage.rst:185
msgid "Radeon RX 470"
msgstr ""

#: ../../../AMDGPUUsage.rst:186
msgid "Radeon RX 480"
msgstr ""

#: ../../../AMDGPUUsage.rst:187
msgid "Radeon Instinct MI6"
msgstr ""

#: ../../../AMDGPUUsage.rst:188
msgid "``polaris11``"
msgstr ""

#: ../../../AMDGPUUsage.rst:188
msgid "Radeon RX 460"
msgstr ""

#: ../../../AMDGPUUsage.rst:190 ../../../AMDGPUUsage.rst:603
msgid "``gfx810``"
msgstr ""

#: ../../../AMDGPUUsage.rst:190
msgid "``stoney``"
msgstr ""

#: ../../../AMDGPUUsage.rst:192
msgid "**GCN GFX9** [AMD-GCN-GFX9]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:194 ../../../AMDGPUUsage.rst:604
msgid "``gfx900``"
msgstr ""

#: ../../../AMDGPUUsage.rst:194
msgid "Radeon Vega Frontier Edition"
msgstr ""

#: ../../../AMDGPUUsage.rst:196
msgid "Radeon RX Vega 56"
msgstr ""

#: ../../../AMDGPUUsage.rst:197
msgid "Radeon RX Vega 64"
msgstr ""

#: ../../../AMDGPUUsage.rst:198
msgid "Radeon RX Vega 64 Liquid"
msgstr ""

#: ../../../AMDGPUUsage.rst:200
msgid "Radeon Instinct MI25"
msgstr ""

#: ../../../AMDGPUUsage.rst:201 ../../../AMDGPUUsage.rst:605
msgid "``gfx902``"
msgstr ""

#: ../../../AMDGPUUsage.rst:201
msgid "Ryzen 3 2200G"
msgstr ""

#: ../../../AMDGPUUsage.rst:202
msgid "Ryzen 5 2400G"
msgstr ""

#: ../../../AMDGPUUsage.rst:203 ../../../AMDGPUUsage.rst:606
msgid "``gfx904``"
msgstr ""

#: ../../../AMDGPUUsage.rst:203
msgid "*TBA*"
msgstr ""

#: ../../../AMDGPUUsage.rst:208 ../../../AMDGPUUsage.rst:607
msgid "``gfx906``"
msgstr ""

#: ../../../AMDGPUUsage.rst:208
msgid "xnack [off] sram-ecc [on]"
msgstr ""

#: ../../../AMDGPUUsage.rst:208
msgid "Radeon Instinct MI50"
msgstr ""

#: ../../../AMDGPUUsage.rst:209
msgid "Radeon Instinct MI60"
msgstr ""

#: ../../../AMDGPUUsage.rst:212 ../../../AMDGPUUsage.rst:609
msgid "``gfx909``"
msgstr ""

#: ../../../AMDGPUUsage.rst:212
msgid "*TBA* (Raven Ridge 2)"
msgstr ""

#: ../../../AMDGPUUsage.rst:222
msgid "Target Features"
msgstr ""

#: ../../../AMDGPUUsage.rst:224
msgid ""
"Target features control how code is generated to support certain processor "
"specific features. Not all target features are supported by all processors. "
"The runtime must ensure that the features supported by the device used to "
"execute the code match the features enabled when generating the code. A "
"mismatch of features may result in incorrect execution, or a reduction in "
"performance."
msgstr ""

#: ../../../AMDGPUUsage.rst:231
msgid ""
"The target features supported by each processor, and the default value used "
"if not specified explicitly, is listed in :ref:`amdgpu-processor-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:235
msgid ""
"Use the ``clang -m[no-]<TargetFeature>`` option to specify the AMD GPU "
"target features."
msgstr ""

#: ../../../AMDGPUUsage.rst:238 ../../../AMDGPUUsage.rst:949
#: ../../../AMDGPUUsage.rst:1040
msgid "For example:"
msgstr ""

#: ../../../AMDGPUUsage.rst:240
msgid "``-mxnack``"
msgstr ""

#: ../../../AMDGPUUsage.rst:241
msgid "Enable the ``xnack`` feature."
msgstr ""

#: ../../../AMDGPUUsage.rst:267
msgid "``-mno-xnack``"
msgstr ""

#: ../../../AMDGPUUsage.rst:243
msgid "Disable the ``xnack`` feature."
msgstr ""

#: ../../../AMDGPUUsage.rst:245
msgid "AMDGPU Target Features"
msgstr ""

#: ../../../AMDGPUUsage.rst:249
msgid "Target Feature"
msgstr ""

#: ../../../AMDGPUUsage.rst:251
msgid "-m[no-]xnack"
msgstr ""

#: ../../../AMDGPUUsage.rst:251
msgid ""
"Enable/disable generating code that has memory clauses that are compatible "
"with having XNACK replay enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:255
msgid ""
"This is used for demand paging and page migration. If XNACK replay is "
"enabled in the device, then if a page fault occurs the code may execute "
"incorrectly if the ``xnack`` feature is not enabled. Executing code that has "
"the feature enabled on a device that does not have XNACK replay enabled will "
"execute correctly, but may be less performant than code with the feature "
"disabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:265
msgid "-m[no-]sram-ecc"
msgstr ""

#: ../../../AMDGPUUsage.rst:265
msgid ""
"Enable/disable generating code that assumes SRAM ECC is enabled/disabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:272
msgid "Address Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:274
msgid "The AMDGPU backend uses the following address space mappings."
msgstr ""

#: ../../../AMDGPUUsage.rst:276
msgid ""
"The memory space names used in the table, aside from the region memory "
"space, is from the OpenCL standard."
msgstr ""

#: ../../../AMDGPUUsage.rst:279
msgid ""
"LLVM Address Space number is used throughout LLVM (for example, in LLVM IR)."
msgstr ""

#: ../../../AMDGPUUsage.rst:281 ../../../AMDGPUUsage.rst:894
msgid "Address Space Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:285
msgid "LLVM Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:285 ../../../AMDGPUUsage.rst:902
msgid "Memory Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:287 ../../../AMDGPUUsage.rst:444
#: ../../../AMDGPUUsage.rst:457 ../../../AMDGPUUsage.rst:462
#: ../../../AMDGPUUsage.rst:463 ../../../AMDGPUUsage.rst:858
#: ../../../AMDGPUUsage.rst:2389 ../../../AMDGPUUsage.rst:2542
#: ../../../AMDGPUUsage.rst:2556 ../../../AMDGPUUsage.rst:2571
#: ../../../AMDGPUUsage.rst:4393 ../../../AMDGPUUsage.rst:4412
#: ../../../AMDGPUUsage.rst:4952 ../../../AMDGPUUsage.rst:4954
#: ../../../AMDGPUUsage.rst:4956 ../../../AMDGPUUsage.rst:4958
#: ../../../AMDGPUUsage.rst:4960 ../../../AMDGPUUsage.rst:4962
#: ../../../AMDGPUUsage.rst:4964 ../../../AMDGPUUsage.rst:4966
#: ../../../AMDGPUUsage.rst:4968 ../../../AMDGPUUsage.rst:4970
#: ../../../AMDGPUUsage.rst:4974 ../../../AMDGPUUsage.rst:4976
#: ../../../AMDGPUUsage.rst:4978 ../../../AMDGPUUsage.rst:4980
#: ../../../AMDGPUUsage.rst:5001 ../../../AMDGPUUsage.rst:5005
#: ../../../AMDGPUUsage.rst:5009 ../../../AMDGPUUsage.rst:5021
#: ../../../AMDGPUUsage.rst:5023 ../../../AMDGPUUsage.rst:5025
#: ../../../AMDGPUUsage.rst:5027 ../../../AMDGPUUsage.rst:5029
#: ../../../AMDGPUUsage.rst:5031 ../../../AMDGPUUsage.rst:5033
#: ../../../AMDGPUUsage.rst:5035
msgid "0"
msgstr ""

#: ../../../AMDGPUUsage.rst:287 ../../../AMDGPUUsage.rst:908
msgid "Generic (Flat)"
msgstr ""

#: ../../../AMDGPUUsage.rst:288 ../../../AMDGPUUsage.rst:461
#: ../../../AMDGPUUsage.rst:859 ../../../AMDGPUUsage.rst:904
#: ../../../AMDGPUUsage.rst:2543 ../../../AMDGPUUsage.rst:2558
#: ../../../AMDGPUUsage.rst:2573 ../../../AMDGPUUsage.rst:2722
#: ../../../AMDGPUUsage.rst:2744 ../../../AMDGPUUsage.rst:2752
#: ../../../AMDGPUUsage.rst:2763 ../../../AMDGPUUsage.rst:2774
#: ../../../AMDGPUUsage.rst:2777 ../../../AMDGPUUsage.rst:2780
#: ../../../AMDGPUUsage.rst:2783 ../../../AMDGPUUsage.rst:2786
#: ../../../AMDGPUUsage.rst:2817 ../../../AMDGPUUsage.rst:2820
#: ../../../AMDGPUUsage.rst:2823 ../../../AMDGPUUsage.rst:4394
#: ../../../AMDGPUUsage.rst:4526 ../../../AMDGPUUsage.rst:4972
#: ../../../AMDGPUUsage.rst:4990 ../../../AMDGPUUsage.rst:4993
#: ../../../AMDGPUUsage.rst:5017 ../../../AMDGPUUsage.rst:5019
msgid "1"
msgstr ""

#: ../../../AMDGPUUsage.rst:288 ../../../AMDGPUUsage.rst:906
#: ../../../AMDGPUUsage.rst:1974
msgid "Global"
msgstr ""

#: ../../../AMDGPUUsage.rst:289 ../../../AMDGPUUsage.rst:861
#: ../../../AMDGPUUsage.rst:905 ../../../AMDGPUUsage.rst:2544
#: ../../../AMDGPUUsage.rst:2559 ../../../AMDGPUUsage.rst:2575
#: ../../../AMDGPUUsage.rst:2622 ../../../AMDGPUUsage.rst:2625
#: ../../../AMDGPUUsage.rst:2629 ../../../AMDGPUUsage.rst:2638
#: ../../../AMDGPUUsage.rst:2641 ../../../AMDGPUUsage.rst:4527
msgid "2"
msgstr ""

#: ../../../AMDGPUUsage.rst:289 ../../../AMDGPUUsage.rst:909
msgid "Region (GDS)"
msgstr ""

#: ../../../AMDGPUUsage.rst:290 ../../../AMDGPUUsage.rst:863
#: ../../../AMDGPUUsage.rst:2545 ../../../AMDGPUUsage.rst:2560
#: ../../../AMDGPUUsage.rst:2577 ../../../AMDGPUUsage.rst:4528
#: ../../../AMDGPUUsage.rst:5013
msgid "3"
msgstr ""

#: ../../../AMDGPUUsage.rst:290 ../../../AMDGPUUsage.rst:905
msgid "Local (group/LDS)"
msgstr ""

#: ../../../AMDGPUUsage.rst:291 ../../../AMDGPUUsage.rst:865
#: ../../../AMDGPUUsage.rst:2614 ../../../AMDGPUUsage.rst:4529
msgid "4"
msgstr ""

#: ../../../AMDGPUUsage.rst:291 ../../../AMDGPUUsage.rst:907
#: ../../../AMDGPUUsage.rst:1975
msgid "Constant"
msgstr ""

#: ../../../AMDGPUUsage.rst:292 ../../../AMDGPUUsage.rst:866
#: ../../../AMDGPUUsage.rst:4530
msgid "5"
msgstr ""

#: ../../../AMDGPUUsage.rst:292 ../../../AMDGPUUsage.rst:904
msgid "Private (Scratch)"
msgstr ""

#: ../../../AMDGPUUsage.rst:293 ../../../AMDGPUUsage.rst:867
#: ../../../AMDGPUUsage.rst:2404 ../../../AMDGPUUsage.rst:4532
msgid "6"
msgstr ""

#: ../../../AMDGPUUsage.rst:293
msgid "Constant 32-bit"
msgstr ""

#: ../../../AMDGPUUsage.rst:299
msgid "Memory Scopes"
msgstr ""

#: ../../../AMDGPUUsage.rst:301
msgid ""
"This section provides LLVM memory synchronization scopes supported by the "
"AMDGPU backend memory model when the target triple OS is ``amdhsa`` (see :"
"ref:`amdgpu-amdhsa-memory-model` and :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:305
msgid ""
"The memory model supported is based on the HSA memory model [HSA]_ which is "
"based in turn on HRF-indirect with scope inclusion [HRF]_. The happens-"
"before relation is transitive over the synchonizes-with relation independent "
"of scope, and synchonizes-with allows the memory scope instances to be "
"inclusive (see table :ref:`amdgpu-amdhsa-llvm-sync-scopes-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:311
msgid ""
"This is different to the OpenCL [OpenCL]_ memory model which does not have "
"scope inclusion and requires the memory scopes to exactly match. However, "
"this is conservatively correct for OpenCL."
msgstr ""

#: ../../../AMDGPUUsage.rst:315
msgid "AMDHSA LLVM Sync Scopes"
msgstr ""

#: ../../../AMDGPUUsage.rst:319
msgid "LLVM Sync Scope"
msgstr ""

#: ../../../AMDGPUUsage.rst:321 ../../../AMDGPUUsage.rst:625
#: ../../../AMDGPUUsage.rst:631 ../../../AMDGPUUsage.rst:632
#: ../../../AMDGPUUsage.rst:633 ../../../AMDGPUUsage.rst:635
#: ../../../AMDGPUUsage.rst:636 ../../../AMDGPUUsage.rst:637
#: ../../../AMDGPUUsage.rst:858 ../../../AMDGPUUsage.rst:3077
#: ../../../AMDGPUUsage.rst:3091 ../../../AMDGPUUsage.rst:3092
#: ../../../AMDGPUUsage.rst:3101 ../../../AMDGPUUsage.rst:3311
#: ../../../AMDGPUUsage.rst:3313 ../../../AMDGPUUsage.rst:3357
#: ../../../AMDGPUUsage.rst:3607 ../../../AMDGPUUsage.rst:3609
#: ../../../AMDGPUUsage.rst:3653 ../../../AMDGPUUsage.rst:3929
#: ../../../AMDGPUUsage.rst:3931 ../../../AMDGPUUsage.rst:4000
#: ../../../AMDGPUUsage.rst:4264 ../../../AMDGPUUsage.rst:4282
#: ../../../AMDGPUUsage.rst:4283 ../../../AMDGPUUsage.rst:4498
msgid "*none*"
msgstr ""

#: ../../../AMDGPUUsage.rst:321
msgid "The default: ``system``."
msgstr ""

#: ../../../AMDGPUUsage.rst:323 ../../../AMDGPUUsage.rst:336
#: ../../../AMDGPUUsage.rst:349 ../../../AMDGPUUsage.rst:360
msgid ""
"Synchronizes with, and participates in modification and seq_cst total "
"orderings with, other operations (except image operations) for all address "
"spaces (except private, or generic that accesses private) provided the other "
"operation's sync scope is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:329
msgid "``system``."
msgstr ""

#: ../../../AMDGPUUsage.rst:330
msgid "``agent`` and executed by a thread on the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:331 ../../../AMDGPUUsage.rst:344
msgid "``workgroup`` and executed by a thread in the same workgroup."
msgstr ""

#: ../../../AMDGPUUsage.rst:333 ../../../AMDGPUUsage.rst:346
#: ../../../AMDGPUUsage.rst:357
msgid "``wavefront`` and executed by a thread in the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:336
msgid "``agent``"
msgstr ""

#: ../../../AMDGPUUsage.rst:342
msgid "``system`` or ``agent`` and executed by a thread on the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:349
msgid "``workgroup``"
msgstr ""

#: ../../../AMDGPUUsage.rst:355
msgid ""
"``system``, ``agent`` or ``workgroup`` and executed by a thread in the same "
"workgroup."
msgstr ""

#: ../../../AMDGPUUsage.rst:360
msgid "``wavefront``"
msgstr ""

#: ../../../AMDGPUUsage.rst:366
msgid ""
"``system``, ``agent``, ``workgroup`` or ``wavefront`` and executed by a "
"thread in the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:369
msgid "``singlethread``"
msgstr ""

#: ../../../AMDGPUUsage.rst:369
msgid ""
"Only synchronizes with, and participates in modification and seq_cst total "
"orderings with, other operations (except image operations) running in the "
"same thread for all address spaces (for example, in signal handlers)."
msgstr ""

#: ../../../AMDGPUUsage.rst:376
msgid "AMDGPU Intrinsics"
msgstr ""

#: ../../../AMDGPUUsage.rst:378
msgid "The AMDGPU backend implements the following LLVM IR intrinsics."
msgstr ""

#: ../../../AMDGPUUsage.rst:380 ../../../AMDGPUUsage.rst:926
msgid "*This section is WIP.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:386
msgid "AMDGPU Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:388
msgid "The AMDGPU backend supports the following LLVM IR attributes."
msgstr ""

#: ../../../AMDGPUUsage.rst:390
msgid "AMDGPU LLVM IR Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:394
msgid "LLVM Attribute"
msgstr ""

#: ../../../AMDGPUUsage.rst:396
msgid "\"amdgpu-flat-work-group-size\"=\"min,max\""
msgstr ""

#: ../../../AMDGPUUsage.rst:396
msgid ""
"Specify the minimum and maximum flat work group sizes that will be specified "
"when the kernel is dispatched. Generated by the "
"``amdgpu_flat_work_group_size`` CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:399
msgid "\"amdgpu-implicitarg-num-bytes\"=\"n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:399
msgid ""
"Number of kernel argument bytes to add to the kernel argument block size for "
"the implicit arguments. This varies by OS and language (for OpenCL see :ref:"
"`opencl-kernel-implicit-arguments-appended-for-amdhsa-os-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:403
msgid "\"amdgpu-max-work-group-size\"=\"n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:403
msgid ""
"Specify the maximum work-group size that will be specifed when the kernel is "
"dispatched."
msgstr ""

#: ../../../AMDGPUUsage.rst:405
msgid "\"amdgpu-num-sgpr\"=\"n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:405
msgid ""
"Specifies the number of SGPRs to use. Generated by the ``amdgpu_num_sgpr`` "
"CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:407
msgid "\"amdgpu-num-vgpr\"=\"n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:407
msgid ""
"Specifies the number of VGPRs to use. Generated by the ``amdgpu_num_vgpr`` "
"CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:409
msgid "\"amdgpu-waves-per-eu\"=\"m,n\""
msgstr ""

#: ../../../AMDGPUUsage.rst:409
msgid ""
"Specify the minimum and maximum number of waves per execution unit. "
"Generated by the ``amdgpu_waves_per_eu`` CLANG attribute [CLANG-ATTR]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:415
msgid "Code Object"
msgstr ""

#: ../../../AMDGPUUsage.rst:417
msgid ""
"The AMDGPU backend generates a standard ELF [ELF]_ relocatable code object "
"that can be linked by ``lld`` to produce a standard ELF shared code object "
"which can be loaded and executed on an AMDGPU target."
msgstr ""

#: ../../../AMDGPUUsage.rst:422
msgid "Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:424
msgid "The AMDGPU backend uses the following ELF header:"
msgstr ""

#: ../../../AMDGPUUsage.rst:426
msgid "AMDGPU ELF Header"
msgstr ""

#: ../../../AMDGPUUsage.rst:430 ../../../AMDGPUUsage.rst:856
msgid "Field"
msgstr ""

#: ../../../AMDGPUUsage.rst:430 ../../../AMDGPUUsage.rst:454
#: ../../../AMDGPUUsage.rst:533 ../../../AMDGPUUsage.rst:570
#: ../../../AMDGPUUsage.rst:707 ../../../AMDGPUUsage.rst:747
#: ../../../AMDGPUUsage.rst:856 ../../../AMDGPUUsage.rst:995
#: ../../../AMDGPUUsage.rst:2540 ../../../AMDGPUUsage.rst:2554
#: ../../../AMDGPUUsage.rst:2569
msgid "Value"
msgstr ""

#: ../../../AMDGPUUsage.rst:432 ../../../AMDGPUUsage.rst:472
msgid "``e_ident[EI_CLASS]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:432
msgid "``ELFCLASS64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:433 ../../../AMDGPUUsage.rst:475
msgid "``e_ident[EI_DATA]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:433
msgid "``ELFDATA2LSB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:434 ../../../AMDGPUUsage.rst:487
msgid "``e_ident[EI_OSABI]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:434 ../../../AMDGPUUsage.rst:457
msgid "``ELFOSABI_NONE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:435 ../../../AMDGPUUsage.rst:458
msgid "``ELFOSABI_AMDGPU_HSA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:436 ../../../AMDGPUUsage.rst:459
msgid "``ELFOSABI_AMDGPU_PAL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:437 ../../../AMDGPUUsage.rst:460
msgid "``ELFOSABI_AMDGPU_MESA3D``"
msgstr ""

#: ../../../AMDGPUUsage.rst:438 ../../../AMDGPUUsage.rst:500
msgid "``e_ident[EI_ABIVERSION]``"
msgstr ""

#: ../../../AMDGPUUsage.rst:438 ../../../AMDGPUUsage.rst:461
msgid "``ELFABIVERSION_AMDGPU_HSA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:439 ../../../AMDGPUUsage.rst:462
msgid "``ELFABIVERSION_AMDGPU_PAL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:440 ../../../AMDGPUUsage.rst:463
msgid "``ELFABIVERSION_AMDGPU_MESA3D``"
msgstr ""

#: ../../../AMDGPUUsage.rst:441 ../../../AMDGPUUsage.rst:513
msgid "``e_type``"
msgstr ""

#: ../../../AMDGPUUsage.rst:441 ../../../AMDGPUUsage.rst:508
msgid "``ET_REL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:442 ../../../AMDGPUUsage.rst:511
msgid "``ET_DYN``"
msgstr ""

#: ../../../AMDGPUUsage.rst:443 ../../../AMDGPUUsage.rst:520
msgid "``e_machine``"
msgstr ""

#: ../../../AMDGPUUsage.rst:443 ../../../AMDGPUUsage.rst:456
msgid "``EM_AMDGPU``"
msgstr ""

#: ../../../AMDGPUUsage.rst:444 ../../../AMDGPUUsage.rst:524
msgid "``e_entry``"
msgstr ""

#: ../../../AMDGPUUsage.rst:445 ../../../AMDGPUUsage.rst:610
msgid "``e_flags``"
msgstr ""

#: ../../../AMDGPUUsage.rst:445
msgid "See :ref:`amdgpu-elf-header-e_flags-table`"
msgstr ""

#: ../../../AMDGPUUsage.rst:450
msgid "AMDGPU ELF Header Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:454 ../../../AMDGPUUsage.rst:533
#: ../../../AMDGPUUsage.rst:570 ../../../AMDGPUUsage.rst:621
#: ../../../AMDGPUUsage.rst:696 ../../../AMDGPUUsage.rst:707
#: ../../../AMDGPUUsage.rst:735 ../../../AMDGPUUsage.rst:747
#: ../../../AMDGPUUsage.rst:770
msgid "Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:456
msgid "224"
msgstr ""

#: ../../../AMDGPUUsage.rst:458 ../../../AMDGPUUsage.rst:1974
#: ../../../AMDGPUUsage.rst:1975 ../../../AMDGPUUsage.rst:1977
msgid "64"
msgstr ""

#: ../../../AMDGPUUsage.rst:459
msgid "65"
msgstr ""

#: ../../../AMDGPUUsage.rst:460
msgid "66"
msgstr ""

#: ../../../AMDGPUUsage.rst:467
msgid "The ELF class is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:469
msgid "``ELFCLASS32`` for ``r600`` architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:471
msgid ""
"``ELFCLASS64`` for ``amdgcn`` architecture which only supports 64 bit "
"applications."
msgstr ""

#: ../../../AMDGPUUsage.rst:475
msgid "All AMDGPU targets use ``ELFDATA2LSB`` for little-endian byte ordering."
msgstr ""

#: ../../../AMDGPUUsage.rst:478
msgid ""
"One of the following AMD GPU architecture specific OS ABIs (see :ref:`amdgpu-"
"os-table`):"
msgstr ""

#: ../../../AMDGPUUsage.rst:481
msgid "``ELFOSABI_NONE`` for *unknown* OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:483
msgid "``ELFOSABI_AMDGPU_HSA`` for ``amdhsa`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:485
msgid "``ELFOSABI_AMDGPU_PAL`` for ``amdpal`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:487
msgid "``ELFOSABI_AMDGPU_MESA3D`` for ``mesa3D`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:490
msgid ""
"The ABI version of the AMD GPU architecture specific OS ABI to which the "
"code object conforms:"
msgstr ""

#: ../../../AMDGPUUsage.rst:493
msgid ""
"``ELFABIVERSION_AMDGPU_HSA`` is used to specify the version of AMD HSA "
"runtime ABI."
msgstr ""

#: ../../../AMDGPUUsage.rst:496
msgid ""
"``ELFABIVERSION_AMDGPU_PAL`` is used to specify the version of AMD PAL "
"runtime ABI."
msgstr ""

#: ../../../AMDGPUUsage.rst:499
msgid ""
"``ELFABIVERSION_AMDGPU_MESA3D`` is used to specify the version of AMD MESA "
"3D runtime ABI."
msgstr ""

#: ../../../AMDGPUUsage.rst:503
msgid "Can be one of the following values:"
msgstr ""

#: ../../../AMDGPUUsage.rst:507
msgid ""
"The type produced by the AMD GPU backend compiler as it is relocatable code "
"object."
msgstr ""

#: ../../../AMDGPUUsage.rst:511
msgid "The type produced by the linker as it is a shared code object."
msgstr ""

#: ../../../AMDGPUUsage.rst:513
msgid "The AMD HSA runtime loader requires a ``ET_DYN`` code object."
msgstr ""

#: ../../../AMDGPUUsage.rst:516
msgid ""
"The value ``EM_AMDGPU`` is used for the machine for all processors supported "
"by the ``r600`` and ``amdgcn`` architectures (see :ref:`amdgpu-processor-"
"table`). The specific processor is specified in the ``EF_AMDGPU_MACH`` bit "
"field of the ``e_flags`` (see :ref:`amdgpu-elf-header-e_flags-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:523
msgid ""
"The entry point is 0 as the entry points for individual kernels must be "
"selected in order to invoke them through AQL packets."
msgstr ""

#: ../../../AMDGPUUsage.rst:527
msgid "The AMDGPU backend uses the following ELF header flags:"
msgstr ""

#: ../../../AMDGPUUsage.rst:529
msgid "AMDGPU ELF Header ``e_flags``"
msgstr ""

#: ../../../AMDGPUUsage.rst:535
msgid "**AMDGPU Processor Flag**"
msgstr ""

#: ../../../AMDGPUUsage.rst:535
msgid "See :ref:`amdgpu-processor-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:537
msgid "``EF_AMDGPU_MACH``"
msgstr ""

#: ../../../AMDGPUUsage.rst:537
msgid "0x000000ff"
msgstr ""

#: ../../../AMDGPUUsage.rst:537
msgid ""
"AMDGPU processor selection mask for ``EF_AMDGPU_MACH_xxx`` values defined "
"in :ref:`amdgpu-ef-amdgpu-mach-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:542
msgid "``EF_AMDGPU_XNACK``"
msgstr ""

#: ../../../AMDGPUUsage.rst:542
msgid "0x00000100"
msgstr ""

#: ../../../AMDGPUUsage.rst:542
msgid ""
"Indicates if the ``xnack`` target feature is enabled for all code contained "
"in the code object. If the processor does not support the ``xnack`` target "
"feature then must be 0. See :ref:`amdgpu-target-features`."
msgstr ""

#: ../../../AMDGPUUsage.rst:553
msgid "``EF_AMDGPU_SRAM_ECC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:553
msgid "0x00000200"
msgstr ""

#: ../../../AMDGPUUsage.rst:553
msgid ""
"Indicates if the ``sram-ecc`` target feature is enabled for all code "
"contained in the code object. If the processor does not support the ``sram-"
"ecc`` target feature then must be 0. See :ref:`amdgpu-target-features`."
msgstr ""

#: ../../../AMDGPUUsage.rst:566
msgid "AMDGPU ``EF_AMDGPU_MACH`` Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:570
msgid "Description (see :ref:`amdgpu-processor-table`)"
msgstr ""

#: ../../../AMDGPUUsage.rst:573
msgid "``EF_AMDGPU_MACH_NONE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:573
msgid "0x000"
msgstr ""

#: ../../../AMDGPUUsage.rst:573
msgid "*not specified*"
msgstr ""

#: ../../../AMDGPUUsage.rst:574
msgid "``EF_AMDGPU_MACH_R600_R600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:574
msgid "0x001"
msgstr ""

#: ../../../AMDGPUUsage.rst:575
msgid "``EF_AMDGPU_MACH_R600_R630``"
msgstr ""

#: ../../../AMDGPUUsage.rst:575
msgid "0x002"
msgstr ""

#: ../../../AMDGPUUsage.rst:576
msgid "``EF_AMDGPU_MACH_R600_RS880``"
msgstr ""

#: ../../../AMDGPUUsage.rst:576
msgid "0x003"
msgstr ""

#: ../../../AMDGPUUsage.rst:577
msgid "``EF_AMDGPU_MACH_R600_RV670``"
msgstr ""

#: ../../../AMDGPUUsage.rst:577
msgid "0x004"
msgstr ""

#: ../../../AMDGPUUsage.rst:578
msgid "``EF_AMDGPU_MACH_R600_RV710``"
msgstr ""

#: ../../../AMDGPUUsage.rst:578
msgid "0x005"
msgstr ""

#: ../../../AMDGPUUsage.rst:579
msgid "``EF_AMDGPU_MACH_R600_RV730``"
msgstr ""

#: ../../../AMDGPUUsage.rst:579
msgid "0x006"
msgstr ""

#: ../../../AMDGPUUsage.rst:580
msgid "``EF_AMDGPU_MACH_R600_RV770``"
msgstr ""

#: ../../../AMDGPUUsage.rst:580
msgid "0x007"
msgstr ""

#: ../../../AMDGPUUsage.rst:581
msgid "``EF_AMDGPU_MACH_R600_CEDAR``"
msgstr ""

#: ../../../AMDGPUUsage.rst:581
msgid "0x008"
msgstr ""

#: ../../../AMDGPUUsage.rst:582
msgid "``EF_AMDGPU_MACH_R600_CYPRESS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:582
msgid "0x009"
msgstr ""

#: ../../../AMDGPUUsage.rst:583
msgid "``EF_AMDGPU_MACH_R600_JUNIPER``"
msgstr ""

#: ../../../AMDGPUUsage.rst:583
msgid "0x00a"
msgstr ""

#: ../../../AMDGPUUsage.rst:584
msgid "``EF_AMDGPU_MACH_R600_REDWOOD``"
msgstr ""

#: ../../../AMDGPUUsage.rst:584
msgid "0x00b"
msgstr ""

#: ../../../AMDGPUUsage.rst:585
msgid "``EF_AMDGPU_MACH_R600_SUMO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:585
msgid "0x00c"
msgstr ""

#: ../../../AMDGPUUsage.rst:586
msgid "``EF_AMDGPU_MACH_R600_BARTS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:586
msgid "0x00d"
msgstr ""

#: ../../../AMDGPUUsage.rst:587
msgid "``EF_AMDGPU_MACH_R600_CAICOS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:587
msgid "0x00e"
msgstr ""

#: ../../../AMDGPUUsage.rst:588
msgid "``EF_AMDGPU_MACH_R600_CAYMAN``"
msgstr ""

#: ../../../AMDGPUUsage.rst:588
msgid "0x00f"
msgstr ""

#: ../../../AMDGPUUsage.rst:589
msgid "``EF_AMDGPU_MACH_R600_TURKS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:589
msgid "0x010"
msgstr ""

#: ../../../AMDGPUUsage.rst:590 ../../../AMDGPUUsage.rst:599
#: ../../../AMDGPUUsage.rst:608 ../../../AMDGPUUsage.rst:709
#: ../../../AMDGPUUsage.rst:711 ../../../AMDGPUUsage.rst:749
#: ../../../AMDGPUUsage.rst:874
msgid "*reserved*"
msgstr ""

#: ../../../AMDGPUUsage.rst:590
msgid "0x011 - 0x01f"
msgstr ""

#: ../../../AMDGPUUsage.rst:590
msgid "Reserved for ``r600`` architecture processors."
msgstr ""

#: ../../../AMDGPUUsage.rst:592
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX600``"
msgstr ""

#: ../../../AMDGPUUsage.rst:592
msgid "0x020"
msgstr ""

#: ../../../AMDGPUUsage.rst:593
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX601``"
msgstr ""

#: ../../../AMDGPUUsage.rst:593
msgid "0x021"
msgstr ""

#: ../../../AMDGPUUsage.rst:594
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX700``"
msgstr ""

#: ../../../AMDGPUUsage.rst:594
msgid "0x022"
msgstr ""

#: ../../../AMDGPUUsage.rst:595
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX701``"
msgstr ""

#: ../../../AMDGPUUsage.rst:595
msgid "0x023"
msgstr ""

#: ../../../AMDGPUUsage.rst:596
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX702``"
msgstr ""

#: ../../../AMDGPUUsage.rst:596
msgid "0x024"
msgstr ""

#: ../../../AMDGPUUsage.rst:597
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX703``"
msgstr ""

#: ../../../AMDGPUUsage.rst:597
msgid "0x025"
msgstr ""

#: ../../../AMDGPUUsage.rst:598
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX704``"
msgstr ""

#: ../../../AMDGPUUsage.rst:598
msgid "0x026"
msgstr ""

#: ../../../AMDGPUUsage.rst:599
msgid "0x027"
msgstr ""

#: ../../../AMDGPUUsage.rst:599 ../../../AMDGPUUsage.rst:608
#: ../../../AMDGPUUsage.rst:4349 ../../../AMDGPUUsage.rst:4350
#: ../../../AMDGPUUsage.rst:4351 ../../../AMDGPUUsage.rst:4354
#: ../../../AMDGPUUsage.rst:4355 ../../../AMDGPUUsage.rst:4356
msgid "Reserved."
msgstr ""

#: ../../../AMDGPUUsage.rst:600
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX801``"
msgstr ""

#: ../../../AMDGPUUsage.rst:600
msgid "0x028"
msgstr ""

#: ../../../AMDGPUUsage.rst:601
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX802``"
msgstr ""

#: ../../../AMDGPUUsage.rst:601
msgid "0x029"
msgstr ""

#: ../../../AMDGPUUsage.rst:602
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX803``"
msgstr ""

#: ../../../AMDGPUUsage.rst:602
msgid "0x02a"
msgstr ""

#: ../../../AMDGPUUsage.rst:603
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX810``"
msgstr ""

#: ../../../AMDGPUUsage.rst:603
msgid "0x02b"
msgstr ""

#: ../../../AMDGPUUsage.rst:604
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX900``"
msgstr ""

#: ../../../AMDGPUUsage.rst:604
msgid "0x02c"
msgstr ""

#: ../../../AMDGPUUsage.rst:605
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX902``"
msgstr ""

#: ../../../AMDGPUUsage.rst:605
msgid "0x02d"
msgstr ""

#: ../../../AMDGPUUsage.rst:606
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX904``"
msgstr ""

#: ../../../AMDGPUUsage.rst:606
msgid "0x02e"
msgstr ""

#: ../../../AMDGPUUsage.rst:607
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX906``"
msgstr ""

#: ../../../AMDGPUUsage.rst:607
msgid "0x02f"
msgstr ""

#: ../../../AMDGPUUsage.rst:608
msgid "0x030"
msgstr ""

#: ../../../AMDGPUUsage.rst:609
msgid "``EF_AMDGPU_MACH_AMDGCN_GFX909``"
msgstr ""

#: ../../../AMDGPUUsage.rst:609
msgid "0x031"
msgstr ""

#: ../../../AMDGPUUsage.rst:613
msgid "Sections"
msgstr ""

#: ../../../AMDGPUUsage.rst:615
msgid ""
"An AMDGPU target ELF code object has the standard ELF sections which include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:617
msgid "AMDGPU ELF Sections"
msgstr ""

#: ../../../AMDGPUUsage.rst:621 ../../../AMDGPUUsage.rst:696
#: ../../../AMDGPUUsage.rst:735 ../../../AMDGPUUsage.rst:770
msgid "Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:621
msgid "Attributes"
msgstr ""

#: ../../../AMDGPUUsage.rst:623 ../../../AMDGPUUsage.rst:774
msgid "``.bss``"
msgstr ""

#: ../../../AMDGPUUsage.rst:623
msgid "``SHT_NOBITS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:623 ../../../AMDGPUUsage.rst:624
#: ../../../AMDGPUUsage.rst:629
msgid "``SHF_ALLOC`` + ``SHF_WRITE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:624 ../../../AMDGPUUsage.rst:772
msgid "``.data``"
msgstr ""

#: ../../../AMDGPUUsage.rst:624 ../../../AMDGPUUsage.rst:625
#: ../../../AMDGPUUsage.rst:627 ../../../AMDGPUUsage.rst:628
#: ../../../AMDGPUUsage.rst:629 ../../../AMDGPUUsage.rst:634
#: ../../../AMDGPUUsage.rst:638
msgid "``SHT_PROGBITS``"
msgstr ""

#: ../../../AMDGPUUsage.rst:625
msgid "``.debug_``\\ *\\**"
msgstr ""

#: ../../../AMDGPUUsage.rst:626
msgid "``.dynamic``"
msgstr ""

#: ../../../AMDGPUUsage.rst:626
msgid "``SHT_DYNAMIC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:626 ../../../AMDGPUUsage.rst:627
#: ../../../AMDGPUUsage.rst:628 ../../../AMDGPUUsage.rst:630
#: ../../../AMDGPUUsage.rst:634
msgid "``SHF_ALLOC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:627
msgid "``.dynstr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:628
msgid "``.dynsym``"
msgstr ""

#: ../../../AMDGPUUsage.rst:629
msgid "``.got``"
msgstr ""

#: ../../../AMDGPUUsage.rst:630
msgid "``.hash``"
msgstr ""

#: ../../../AMDGPUUsage.rst:630
msgid "``SHT_HASH``"
msgstr ""

#: ../../../AMDGPUUsage.rst:631 ../../../AMDGPUUsage.rst:653
msgid "``.note``"
msgstr ""

#: ../../../AMDGPUUsage.rst:631
msgid "``SHT_NOTE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:632
msgid "``.rela``\\ *name*"
msgstr ""

#: ../../../AMDGPUUsage.rst:632 ../../../AMDGPUUsage.rst:633
msgid "``SHT_RELA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:633
msgid "``.rela.dyn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:634 ../../../AMDGPUUsage.rst:773
#: ../../../AMDGPUUsage.rst:775
msgid "``.rodata``"
msgstr ""

#: ../../../AMDGPUUsage.rst:635
msgid "``.shstrtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:635 ../../../AMDGPUUsage.rst:636
msgid "``SHT_STRTAB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:636
msgid "``.strtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:637
msgid "``.symtab``"
msgstr ""

#: ../../../AMDGPUUsage.rst:637
msgid "``SHT_SYMTAB``"
msgstr ""

#: ../../../AMDGPUUsage.rst:638 ../../../AMDGPUUsage.rst:669
#: ../../../AMDGPUUsage.rst:776
msgid "``.text``"
msgstr ""

#: ../../../AMDGPUUsage.rst:638
msgid "``SHF_ALLOC`` + ``SHF_EXECINSTR``"
msgstr ""

#: ../../../AMDGPUUsage.rst:641
msgid ""
"These sections have their standard meanings (see [ELF]_) and are only "
"generated if needed."
msgstr ""

#: ../../../AMDGPUUsage.rst:646
msgid "``.debug``\\ *\\**"
msgstr ""

#: ../../../AMDGPUUsage.rst:645
msgid ""
"The standard DWARF sections. See :ref:`amdgpu-dwarf` for information on the "
"DWARF produced by the AMDGPU backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:649
msgid "``.dynamic``, ``.dynstr``, ``.dynsym``, ``.hash``"
msgstr ""

#: ../../../AMDGPUUsage.rst:649
msgid "The standard sections used by a dynamic loader."
msgstr ""

#: ../../../AMDGPUUsage.rst:652
msgid ""
"See :ref:`amdgpu-note-records` for the note records supported by the AMDGPU "
"backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:664
msgid "``.rela``\\ *name*, ``.rela.dyn``"
msgstr ""

#: ../../../AMDGPUUsage.rst:656
msgid ""
"For relocatable code objects, *name* is the name of the section that the "
"relocation records apply. For example, ``.rela.text`` is the section name "
"for relocation records associated with the ``.text`` section."
msgstr ""

#: ../../../AMDGPUUsage.rst:660
msgid ""
"For linked shared code objects, ``.rela.dyn`` contains all the relocation "
"records from each of the relocatable code object's ``.rela``\\ *name* "
"sections."
msgstr ""

#: ../../../AMDGPUUsage.rst:663
msgid ""
"See :ref:`amdgpu-relocation-records` for the relocation records supported by "
"the AMDGPU backend."
msgstr ""

#: ../../../AMDGPUUsage.rst:667
msgid ""
"The executable machine code for the kernels and functions they call. "
"Generated as position independent code. See :ref:`amdgpu-code-conventions` "
"for information on conventions used in the isa generation."
msgstr ""

#: ../../../AMDGPUUsage.rst:674
msgid "Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:676
msgid ""
"As required by ``ELFCLASS32`` and ``ELFCLASS64``, minimal zero byte padding "
"must be generated after the ``name`` field to ensure the ``desc`` field is 4 "
"byte aligned. In addition, minimal zero byte padding must be generated to "
"ensure the ``desc`` field size is a multiple of 4 bytes. The "
"``sh_addralign`` field of the ``.note`` section must be at least 4 to "
"indicate at least 8 byte alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:685
msgid "Code Object V2 Note Records (-mattr=-code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:687 ../../../AMDGPUUsage.rst:726
msgid ""
"The AMDGPU backend code object uses the following ELF note record in the ``."
"note`` section."
msgstr ""

#: ../../../AMDGPUUsage.rst:690 ../../../AMDGPUUsage.rst:729
msgid "Additional note records can be present."
msgstr ""

#: ../../../AMDGPUUsage.rst:692
msgid "AMDGPU Code Object V2 ELF Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:698
msgid "\"AMD\""
msgstr ""

#: ../../../AMDGPUUsage.rst:698 ../../../AMDGPUUsage.rst:710
#: ../../../AMDGPUUsage.rst:719
msgid "``NT_AMD_AMDGPU_HSA_METADATA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:698
msgid "<metadata null terminated string>"
msgstr ""

#: ../../../AMDGPUUsage.rst:703
msgid "AMDGPU Code Object V2 ELF Note Record Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:709
msgid "0-9"
msgstr ""

#: ../../../AMDGPUUsage.rst:710 ../../../AMDGPUUsage.rst:872
#: ../../../AMDGPUUsage.rst:2435
msgid "10"
msgstr ""

#: ../../../AMDGPUUsage.rst:711 ../../../AMDGPUUsage.rst:873
msgid "11"
msgstr ""

#: ../../../AMDGPUUsage.rst:715
msgid ""
"Specifies extensible metadata associated with the code objects executed on "
"HSA [HSA]_ compatible runtimes such as AMD's ROCm [AMD-ROCm]_. It is "
"required when the target triple OS is ``amdhsa`` (see :ref:`amdgpu-target-"
"triples`). See :ref:`amdgpu-amdhsa-code-object-metadata-v2` for the syntax "
"of the code object metadata string."
msgstr ""

#: ../../../AMDGPUUsage.rst:724
msgid "Code Object V3 Note Records (-mattr=+code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:731
msgid "AMDGPU Code Object V3 ELF Note Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:737
msgid "\"AMDGPU\""
msgstr ""

#: ../../../AMDGPUUsage.rst:737 ../../../AMDGPUUsage.rst:750
#: ../../../AMDGPUUsage.rst:757
msgid "``NT_AMDGPU_METADATA``"
msgstr ""

#: ../../../AMDGPUUsage.rst:737
msgid "Metadata in Message Pack [MsgPack]_ binary format."
msgstr ""

#: ../../../AMDGPUUsage.rst:743
msgid "AMDGPU Code Object V3 ELF Note Record Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:749
msgid "0-31"
msgstr ""

#: ../../../AMDGPUUsage.rst:750 ../../../AMDGPUUsage.rst:1972
#: ../../../AMDGPUUsage.rst:1973 ../../../AMDGPUUsage.rst:1978
#: ../../../AMDGPUUsage.rst:2378 ../../../AMDGPUUsage.rst:2531
msgid "32"
msgstr ""

#: ../../../AMDGPUUsage.rst:754
msgid ""
"Specifies extensible metadata associated with an AMDGPU code object. It is "
"encoded as a map in the Message Pack [MsgPack]_ binary data format. See :ref:"
"`amdgpu-amdhsa-code-object-metadata-v3` for the map keys defined for the "
"``amdhsa`` OS."
msgstr ""

#: ../../../AMDGPUUsage.rst:762
msgid "Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:764
msgid "Symbols include the following:"
msgstr ""

#: ../../../AMDGPUUsage.rst:766
msgid "AMDGPU ELF Symbols"
msgstr ""

#: ../../../AMDGPUUsage.rst:770
msgid "Section"
msgstr ""

#: ../../../AMDGPUUsage.rst:772 ../../../AMDGPUUsage.rst:776
msgid "*link-name*"
msgstr ""

#: ../../../AMDGPUUsage.rst:772 ../../../AMDGPUUsage.rst:775
msgid "``STT_OBJECT``"
msgstr ""

#: ../../../AMDGPUUsage.rst:772 ../../../AMDGPUUsage.rst:796
msgid "Global variable"
msgstr ""

#: ../../../AMDGPUUsage.rst:775
msgid "*link-name*\\ ``.kd``"
msgstr ""

#: ../../../AMDGPUUsage.rst:775 ../../../AMDGPUUsage.rst:802
msgid "Kernel descriptor"
msgstr ""

#: ../../../AMDGPUUsage.rst:776
msgid "``STT_FUNC``"
msgstr ""

#: ../../../AMDGPUUsage.rst:776 ../../../AMDGPUUsage.rst:805
msgid "Kernel entry point"
msgstr ""

#: ../../../AMDGPUUsage.rst:780
msgid "Global variables both used and defined by the compilation unit."
msgstr ""

#: ../../../AMDGPUUsage.rst:782
msgid ""
"If the symbol is defined in the compilation unit then it is allocated in the "
"appropriate section according to if it has initialized data or is readonly."
msgstr ""

#: ../../../AMDGPUUsage.rst:785
msgid ""
"If the symbol is external then its section is ``STN_UNDEF`` and the loader "
"will resolve relocations using the definition provided by another code "
"object or explicitly defined by the runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:789
msgid ""
"All global symbols, whether defined in the compilation unit or external, are "
"accessed by the machine code indirectly through a GOT table entry. This "
"allows them to be preemptable. The GOT table is only supported when the "
"target triple OS is ``amdhsa`` (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:799
msgid ""
"Every HSA kernel has an associated kernel descriptor. It is the address of "
"the kernel descriptor that is used in the AQL dispatch packet used to invoke "
"the kernel, not the kernel entry point. The layout of the HSA kernel "
"descriptor is defined in :ref:`amdgpu-amdhsa-kernel-descriptor`."
msgstr ""

#: ../../../AMDGPUUsage.rst:805
msgid "Every HSA kernel also has a symbol for its machine code entry point."
msgstr ""

#: ../../../AMDGPUUsage.rst:810
msgid "Relocation Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:812
msgid ""
"AMDGPU backend generates ``Elf64_Rela`` relocation records. Supported "
"relocatable fields are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:818 ../../../AMDGPUUsage.rst:859
#: ../../../AMDGPUUsage.rst:861 ../../../AMDGPUUsage.rst:865
#: ../../../AMDGPUUsage.rst:867 ../../../AMDGPUUsage.rst:869
#: ../../../AMDGPUUsage.rst:870 ../../../AMDGPUUsage.rst:871
#: ../../../AMDGPUUsage.rst:872 ../../../AMDGPUUsage.rst:873
msgid "``word32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:816
msgid ""
"This specifies a 32-bit field occupying 4 bytes with arbitrary byte "
"alignment. These values use the same byte order as other word values in the "
"AMD GPU architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:823 ../../../AMDGPUUsage.rst:863
#: ../../../AMDGPUUsage.rst:866 ../../../AMDGPUUsage.rst:875
msgid "``word64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:821
msgid ""
"This specifies a 64-bit field occupying 8 bytes with arbitrary byte "
"alignment. These values use the same byte order as other word values in the "
"AMD GPU architecture."
msgstr ""

#: ../../../AMDGPUUsage.rst:825
msgid "Following notations are used for specifying relocation calculations:"
msgstr ""

#: ../../../AMDGPUUsage.rst:828
msgid "**A**"
msgstr ""

#: ../../../AMDGPUUsage.rst:828
msgid ""
"Represents the addend used to compute the value of the relocatable field."
msgstr ""

#: ../../../AMDGPUUsage.rst:832
msgid "**G**"
msgstr ""

#: ../../../AMDGPUUsage.rst:831
msgid ""
"Represents the offset into the global offset table at which the relocation "
"entry's symbol will reside during execution."
msgstr ""

#: ../../../AMDGPUUsage.rst:835
msgid "**GOT**"
msgstr ""

#: ../../../AMDGPUUsage.rst:835
msgid "Represents the address of the global offset table."
msgstr ""

#: ../../../AMDGPUUsage.rst:839
msgid "**P**"
msgstr ""

#: ../../../AMDGPUUsage.rst:838
msgid ""
"Represents the place (section offset for ``et_rel`` or address for "
"``et_dyn``) of the storage unit being relocated (computed using "
"``r_offset``)."
msgstr ""

#: ../../../AMDGPUUsage.rst:843
msgid "**S**"
msgstr ""

#: ../../../AMDGPUUsage.rst:842
msgid ""
"Represents the value of the symbol whose index resides in the relocation "
"entry. Relocations not using this must specify a symbol index of "
"``STN_UNDEF``."
msgstr ""

#: ../../../AMDGPUUsage.rst:848
msgid "**B**"
msgstr ""

#: ../../../AMDGPUUsage.rst:846
msgid ""
"Represents the base address of a loaded executable or shared object which is "
"the difference between the ELF address and the actual load address. "
"Relocations using this are only valid in executable or shared objects."
msgstr ""

#: ../../../AMDGPUUsage.rst:850
msgid "The following relocation types are supported:"
msgstr ""

#: ../../../AMDGPUUsage.rst:852
msgid "AMDGPU ELF Relocation Records"
msgstr ""

#: ../../../AMDGPUUsage.rst:856
msgid "Relocation Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:856
msgid "Kind"
msgstr ""

#: ../../../AMDGPUUsage.rst:856
msgid "Calculation"
msgstr ""

#: ../../../AMDGPUUsage.rst:858
msgid "``R_AMDGPU_NONE``"
msgstr ""

#: ../../../AMDGPUUsage.rst:859
msgid "``R_AMDGPU_ABS32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:859 ../../../AMDGPUUsage.rst:861
#: ../../../AMDGPUUsage.rst:863 ../../../AMDGPUUsage.rst:867
msgid "Static, Dynamic"
msgstr ""

#: ../../../AMDGPUUsage.rst:859
msgid "(S + A) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:861
msgid "``R_AMDGPU_ABS32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:861
msgid "(S + A) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:863
msgid "``R_AMDGPU_ABS64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:863 ../../../AMDGPUUsage.rst:867
msgid "S + A"
msgstr ""

#: ../../../AMDGPUUsage.rst:865
msgid "``R_AMDGPU_REL32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:865 ../../../AMDGPUUsage.rst:866
#: ../../../AMDGPUUsage.rst:869 ../../../AMDGPUUsage.rst:870
#: ../../../AMDGPUUsage.rst:871 ../../../AMDGPUUsage.rst:872
#: ../../../AMDGPUUsage.rst:873
msgid "Static"
msgstr ""

#: ../../../AMDGPUUsage.rst:865 ../../../AMDGPUUsage.rst:866
msgid "S + A - P"
msgstr ""

#: ../../../AMDGPUUsage.rst:866
msgid "``R_AMDGPU_REL64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:867
msgid "``R_AMDGPU_ABS32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:869
msgid "``R_AMDGPU_GOTPCREL``"
msgstr ""

#: ../../../AMDGPUUsage.rst:869 ../../../AMDGPUUsage.rst:2411
msgid "7"
msgstr ""

#: ../../../AMDGPUUsage.rst:869
msgid "G + GOT + A - P"
msgstr ""

#: ../../../AMDGPUUsage.rst:870
msgid "``R_AMDGPU_GOTPCREL32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:870 ../../../AMDGPUUsage.rst:2419
#: ../../../AMDGPUUsage.rst:4526 ../../../AMDGPUUsage.rst:4527
#: ../../../AMDGPUUsage.rst:4528 ../../../AMDGPUUsage.rst:4529
#: ../../../AMDGPUUsage.rst:4530 ../../../AMDGPUUsage.rst:4532
msgid "8"
msgstr ""

#: ../../../AMDGPUUsage.rst:870
msgid "(G + GOT + A - P) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:871
msgid "``R_AMDGPU_GOTPCREL32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:871 ../../../AMDGPUUsage.rst:2427
msgid "9"
msgstr ""

#: ../../../AMDGPUUsage.rst:871
msgid "(G + GOT + A - P) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:872
msgid "``R_AMDGPU_REL32_LO``"
msgstr ""

#: ../../../AMDGPUUsage.rst:872
msgid "(S + A - P) & 0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:873
msgid "``R_AMDGPU_REL32_HI``"
msgstr ""

#: ../../../AMDGPUUsage.rst:873
msgid "(S + A - P) >> 32"
msgstr ""

#: ../../../AMDGPUUsage.rst:874 ../../../AMDGPUUsage.rst:4396
msgid "12"
msgstr ""

#: ../../../AMDGPUUsage.rst:875
msgid "``R_AMDGPU_RELATIVE64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:875
msgid "Dynamic"
msgstr ""

#: ../../../AMDGPUUsage.rst:875 ../../../AMDGPUUsage.rst:2450
msgid "13"
msgstr ""

#: ../../../AMDGPUUsage.rst:875
msgid "B + A"
msgstr ""

#: ../../../AMDGPUUsage.rst:878
msgid ""
"``R_AMDGPU_ABS32_LO`` and ``R_AMDGPU_ABS32_HI`` are only supported by the "
"``mesa3d`` OS, which does not support ``R_AMDGPU_ABS64``."
msgstr ""

#: ../../../AMDGPUUsage.rst:881
msgid ""
"There is no current OS loader support for 32 bit programs and so "
"``R_AMDGPU_ABS32`` is not used."
msgstr ""

#: ../../../AMDGPUUsage.rst:887
msgid "DWARF"
msgstr ""

#: ../../../AMDGPUUsage.rst:889
msgid ""
"Standard DWARF [DWARF]_ Version 5 sections can be generated. These contain "
"information that maps the code object executable code and data to the source "
"language constructs. It can be used by tools such as debuggers and profilers."
msgstr ""

#: ../../../AMDGPUUsage.rst:896
msgid "The following address space mapping is used:"
msgstr ""

#: ../../../AMDGPUUsage.rst:898
msgid "AMDGPU DWARF Address Space Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:902
msgid "DWARF Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:906 ../../../AMDGPUUsage.rst:907
#: ../../../AMDGPUUsage.rst:908
msgid "*omitted*"
msgstr ""

#: ../../../AMDGPUUsage.rst:909
msgid "*not supported*"
msgstr ""

#: ../../../AMDGPUUsage.rst:912
msgid ""
"See :ref:`amdgpu-address-spaces` for information on the memory space "
"terminology used in the table."
msgstr ""

#: ../../../AMDGPUUsage.rst:915
msgid ""
"An ``address_class`` attribute is generated on pointer type DIEs to specify "
"the DWARF address space of the value of the pointer when it is in the "
"*private* or *local* address space. Otherwise the attribute is omitted."
msgstr ""

#: ../../../AMDGPUUsage.rst:919
msgid ""
"An ``XDEREF`` operation is generated in location list expressions for "
"variables that are allocated in the *private* and *local* address space. "
"Otherwise no ``XDREF`` is omitted."
msgstr ""

#: ../../../AMDGPUUsage.rst:924
msgid "Register Mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:943
msgid "Source Text"
msgstr ""

#: ../../../AMDGPUUsage.rst:945
msgid ""
"Source text for online-compiled programs (e.g. those compiled by the OpenCL "
"runtime) may be embedded into the DWARF v5 line table using the ``clang -"
"gembed-source`` option, described in table :ref:`amdgpu-debug-options`."
msgstr ""

#: ../../../AMDGPUUsage.rst:951
msgid "``-gembed-source``"
msgstr ""

#: ../../../AMDGPUUsage.rst:952
msgid "Enable the embedded source DWARF v5 extension."
msgstr ""

#: ../../../AMDGPUUsage.rst:966
msgid "``-gno-embed-source``"
msgstr ""

#: ../../../AMDGPUUsage.rst:954
msgid "Disable the embedded source DWARF v5 extension."
msgstr ""

#: ../../../AMDGPUUsage.rst:956
msgid "AMDGPU Debug Options"
msgstr ""

#: ../../../AMDGPUUsage.rst:960
msgid "Debug Flag"
msgstr ""

#: ../../../AMDGPUUsage.rst:962
msgid "-g[no-]embed-source"
msgstr ""

#: ../../../AMDGPUUsage.rst:962
msgid ""
"Enable/disable embedding source text in DWARF debug sections. Useful for "
"environments where source cannot be written to disk, such as when performing "
"online compilation."
msgstr ""

#: ../../../AMDGPUUsage.rst:968
msgid ""
"This option enables one extended content types in the DWARF v5 Line Number "
"Program Header, which is used to encode embedded source."
msgstr ""

#: ../../../AMDGPUUsage.rst:971
msgid "AMDGPU DWARF Line Number Program Header Extended Content Types"
msgstr ""

#: ../../../AMDGPUUsage.rst:975 ../../../AMDGPUUsage.rst:995
msgid "Content Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:975
msgid "Form"
msgstr ""

#: ../../../AMDGPUUsage.rst:977 ../../../AMDGPUUsage.rst:997
msgid "``DW_LNCT_LLVM_source``"
msgstr ""

#: ../../../AMDGPUUsage.rst:977
msgid "``DW_FORM_line_strp``"
msgstr ""

#: ../../../AMDGPUUsage.rst:980
msgid ""
"The source field will contain the UTF-8 encoded, null-terminated source text "
"with ``'\\n'`` line endings. When the source field is present, consumers can "
"use the embedded source instead of attempting to discover the source on "
"disk. When the source field is absent, consumers can access the file to get "
"the source text."
msgstr ""

#: ../../../AMDGPUUsage.rst:986
msgid ""
"The above content type appears in the ``file_name_entry_format`` field of "
"the line table prologue, and its corresponding value appear in the "
"``file_names`` field. The current encoding of the content type is documented "
"in table :ref:`amdgpu-dwarf-extended-content-types-encoding`"
msgstr ""

#: ../../../AMDGPUUsage.rst:991
msgid "AMDGPU DWARF Line Number Program Header Extended Content Types Encoding"
msgstr ""

#: ../../../AMDGPUUsage.rst:997
msgid "0x2001"
msgstr ""

#: ../../../AMDGPUUsage.rst:1003
msgid "Code Conventions"
msgstr ""

#: ../../../AMDGPUUsage.rst:1005
msgid ""
"This section provides code conventions used for each supported target triple "
"OS (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1009
msgid "AMDHSA"
msgstr ""

#: ../../../AMDGPUUsage.rst:1011
msgid ""
"This section provides code conventions used when the target triple OS is "
"``amdhsa`` (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1017
msgid "Code Object Target Identification"
msgstr ""

#: ../../../AMDGPUUsage.rst:1019
msgid ""
"The AMDHSA OS uses the following syntax to specify the code object target as "
"a single string:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1022
msgid ""
"``<Architecture>-<Vendor>-<OS>-<Environment>-<Processor><Target Features>``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1024
msgid "Where:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1026
msgid ""
"``<Architecture>``, ``<Vendor>``, ``<OS>`` and ``<Environment>`` are the "
"same as the *Target Triple* (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1030
msgid ""
"``<Processor>`` is the same as the *Processor* (see :ref:`amdgpu-"
"processors`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1033
msgid ""
"``<Target Features>`` is a list of the enabled *Target Features* (see :ref:"
"`amdgpu-target-features`), each prefixed by a plus, that apply to "
"*Processor*. The list must be in the same order as listed in the table :ref:"
"`amdgpu-target-feature-table`. Note that *Target Features* must be included "
"in the list if they are enabled even if that is the default for *Processor*."
msgstr ""

#: ../../../AMDGPUUsage.rst:1042
msgid "``\"amdgcn-amd-amdhsa--gfx902+xnack\"``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1047
msgid "Code Object Metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:1049
msgid ""
"The code object metadata specifies extensible metadata associated with the "
"code objects executed on HSA [HSA]_ compatible runtimes such as AMD's ROCm "
"[AMD-ROCm]_. It is specified in a note record (see :ref:`amdgpu-note-"
"records`) and is required when the target triple OS is ``amdhsa`` (see :ref:"
"`amdgpu-target-triples`). It must contain the minimum information necessary "
"to support the ROCM kernel queries. For example, the segment sizes needed in "
"a dispatch packet. In addition, a high level language runtime may require "
"other information to be included. For example, the AMD OpenCL runtime "
"records kernel argument information."
msgstr ""

#: ../../../AMDGPUUsage.rst:1062
msgid "Code Object V2 Metadata (-mattr=-code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1064
msgid ""
"Code object V2 metadata is specified by the ``NT_AMD_AMDGPU_METADATA`` note "
"record (see :ref:`amdgpu-note-records-v2`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1067
msgid ""
"The metadata is specified as a YAML formatted string (see [YAML]_ and :doc:"
"`YamlIO`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1074
msgid ""
"The metadata is represented as a single YAML document comprised of the "
"mapping defined in table :ref:`amdgpu-amdhsa-code-object-metadata-map-table-"
"v2` and referenced tables."
msgstr ""

#: ../../../AMDGPUUsage.rst:1078
msgid ""
"For boolean values, the string values of ``false`` and ``true`` are used for "
"false and true respectively."
msgstr ""

#: ../../../AMDGPUUsage.rst:1081
msgid ""
"Additional information can be added to the mappings. To avoid conflicts, any "
"non-AMD key names should be prefixed by \"*vendor-name*.\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1084
msgid "AMDHSA Code Object V2 Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1088 ../../../AMDGPUUsage.rst:1132
#: ../../../AMDGPUUsage.rst:1169 ../../../AMDGPUUsage.rst:1210
#: ../../../AMDGPUUsage.rst:1408 ../../../AMDGPUUsage.rst:1508
#: ../../../AMDGPUUsage.rst:1553 ../../../AMDGPUUsage.rst:1697
msgid "String Key"
msgstr ""

#: ../../../AMDGPUUsage.rst:1088 ../../../AMDGPUUsage.rst:1132
#: ../../../AMDGPUUsage.rst:1169 ../../../AMDGPUUsage.rst:1210
#: ../../../AMDGPUUsage.rst:1408 ../../../AMDGPUUsage.rst:1508
#: ../../../AMDGPUUsage.rst:1553 ../../../AMDGPUUsage.rst:1697
msgid "Value Type"
msgstr ""

#: ../../../AMDGPUUsage.rst:1088 ../../../AMDGPUUsage.rst:1132
#: ../../../AMDGPUUsage.rst:1169 ../../../AMDGPUUsage.rst:1210
#: ../../../AMDGPUUsage.rst:1408 ../../../AMDGPUUsage.rst:1508
#: ../../../AMDGPUUsage.rst:1553 ../../../AMDGPUUsage.rst:1697
msgid "Required?"
msgstr ""

#: ../../../AMDGPUUsage.rst:1090
msgid "\"Version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1090 ../../../AMDGPUUsage.rst:1145
#: ../../../AMDGPUUsage.rst:1510 ../../../AMDGPUUsage.rst:1568
msgid "sequence of 2 integers"
msgstr ""

#: ../../../AMDGPUUsage.rst:1090 ../../../AMDGPUUsage.rst:1120
#: ../../../AMDGPUUsage.rst:1134 ../../../AMDGPUUsage.rst:1135
#: ../../../AMDGPUUsage.rst:1214 ../../../AMDGPUUsage.rst:1215
#: ../../../AMDGPUUsage.rst:1217 ../../../AMDGPUUsage.rst:1299
#: ../../../AMDGPUUsage.rst:1410 ../../../AMDGPUUsage.rst:1415
#: ../../../AMDGPUUsage.rst:1426 ../../../AMDGPUUsage.rst:1436
#: ../../../AMDGPUUsage.rst:1441 ../../../AMDGPUUsage.rst:1443
#: ../../../AMDGPUUsage.rst:1459 ../../../AMDGPUUsage.rst:1463
#: ../../../AMDGPUUsage.rst:1510 ../../../AMDGPUUsage.rst:1540
#: ../../../AMDGPUUsage.rst:1555 ../../../AMDGPUUsage.rst:1556
#: ../../../AMDGPUUsage.rst:1608 ../../../AMDGPUUsage.rst:1613
#: ../../../AMDGPUUsage.rst:1624 ../../../AMDGPUUsage.rst:1634
#: ../../../AMDGPUUsage.rst:1639 ../../../AMDGPUUsage.rst:1641
#: ../../../AMDGPUUsage.rst:1662 ../../../AMDGPUUsage.rst:1671
#: ../../../AMDGPUUsage.rst:1701 ../../../AMDGPUUsage.rst:1702
#: ../../../AMDGPUUsage.rst:1706 ../../../AMDGPUUsage.rst:1788
#: ../../../AMDGPUUsage.rst:4984 ../../../AMDGPUUsage.rst:4987
msgid "Required"
msgstr ""

#: ../../../AMDGPUUsage.rst:1090 ../../../AMDGPUUsage.rst:1510
msgid "The first integer is the major version. Currently 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:1092 ../../../AMDGPUUsage.rst:1512
msgid "The second integer is the minor version. Currently 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:1094
msgid "\"Printf\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1094 ../../../AMDGPUUsage.rst:1514
msgid "sequence of strings"
msgstr ""

#: ../../../AMDGPUUsage.rst:1094 ../../../AMDGPUUsage.rst:1514
msgid ""
"Each string is encoded information about a printf function call. The encoded "
"information is organized as fields separated by colon (':'):"
msgstr ""

#: ../../../AMDGPUUsage.rst:1099 ../../../AMDGPUUsage.rst:1519
msgid "``ID:N:S[0]:S[1]:...:S[N-1]:FormatString``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1101 ../../../AMDGPUUsage.rst:1521
msgid "where:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1105 ../../../AMDGPUUsage.rst:1525
msgid "``ID``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1104 ../../../AMDGPUUsage.rst:1524
msgid "A 32 bit integer as a unique id for each printf function call"
msgstr ""

#: ../../../AMDGPUUsage.rst:1110 ../../../AMDGPUUsage.rst:1530
msgid "``N``"
msgstr ""

#: ../../../AMDGPUUsage.rst:1108 ../../../AMDGPUUsage.rst:1528
msgid ""
"A 32 bit integer equal to the number of arguments of printf function call "
"minus 1"
msgstr ""

#: ../../../AMDGPUUsage.rst:1115 ../../../AMDGPUUsage.rst:1535
msgid "``S[i]`` (where i = 0, 1, ... , N-1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1113 ../../../AMDGPUUsage.rst:1533
msgid ""
"32 bit integers for the size in bytes of the i-th FormatString argument of "
"the printf function call"
msgstr ""

#: ../../../AMDGPUUsage.rst:1118 ../../../AMDGPUUsage.rst:1538
msgid "FormatString"
msgstr ""

#: ../../../AMDGPUUsage.rst:1118 ../../../AMDGPUUsage.rst:1538
msgid "The format string passed to the printf function call."
msgstr ""

#: ../../../AMDGPUUsage.rst:1120
msgid "\"Kernels\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1120 ../../../AMDGPUUsage.rst:1153
msgid "sequence of mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:1120
msgid ""
"Sequence of the mappings for each kernel in the code object. See :ref:"
"`amdgpu-amdhsa-code-object-kernel-metadata-map-table-v2` for the definition "
"of the mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:1128
msgid "AMDHSA Code Object V2 Kernel Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1134 ../../../AMDGPUUsage.rst:1212
msgid "\"Name\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1134 ../../../AMDGPUUsage.rst:1135
#: ../../../AMDGPUUsage.rst:1137 ../../../AMDGPUUsage.rst:1187
#: ../../../AMDGPUUsage.rst:1193 ../../../AMDGPUUsage.rst:1212
#: ../../../AMDGPUUsage.rst:1213 ../../../AMDGPUUsage.rst:1217
#: ../../../AMDGPUUsage.rst:1299 ../../../AMDGPUUsage.rst:1328
#: ../../../AMDGPUUsage.rst:1348 ../../../AMDGPUUsage.rst:1361
#: ../../../AMDGPUUsage.rst:1555 ../../../AMDGPUUsage.rst:1556
#: ../../../AMDGPUUsage.rst:1558 ../../../AMDGPUUsage.rst:1593
#: ../../../AMDGPUUsage.rst:1599 ../../../AMDGPUUsage.rst:1699
#: ../../../AMDGPUUsage.rst:1700 ../../../AMDGPUUsage.rst:1706
#: ../../../AMDGPUUsage.rst:1788 ../../../AMDGPUUsage.rst:1817
#: ../../../AMDGPUUsage.rst:1837 ../../../AMDGPUUsage.rst:1850
msgid "string"
msgstr ""

#: ../../../AMDGPUUsage.rst:1134 ../../../AMDGPUUsage.rst:1555
msgid "Source name of the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:1135
msgid "\"SymbolName\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1135 ../../../AMDGPUUsage.rst:1556
msgid "Name of the kernel descriptor ELF symbol."
msgstr ""

#: ../../../AMDGPUUsage.rst:1137
msgid "\"Language\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1137 ../../../AMDGPUUsage.rst:1558
msgid "Source language of the kernel. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1140 ../../../AMDGPUUsage.rst:1561
msgid "\"OpenCL C\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1141 ../../../AMDGPUUsage.rst:1562
msgid "\"OpenCL C++\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1142 ../../../AMDGPUUsage.rst:1563
msgid "\"HCC\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1143 ../../../AMDGPUUsage.rst:1565
msgid "\"OpenMP\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1145
msgid "\"LanguageVersion\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1145 ../../../AMDGPUUsage.rst:1568
msgid "The first integer is the major version."
msgstr ""

#: ../../../AMDGPUUsage.rst:1147 ../../../AMDGPUUsage.rst:1570
msgid "The second integer is the minor version."
msgstr ""

#: ../../../AMDGPUUsage.rst:1149
msgid "\"Attrs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1149 ../../../AMDGPUUsage.rst:1157
msgid "mapping"
msgstr ""

#: ../../../AMDGPUUsage.rst:1149
msgid ""
"Mapping of kernel attributes. See :ref:`amdgpu-amdhsa-code-object-kernel-"
"attribute-metadata-map-table-v2` for the mapping definition."
msgstr ""

#: ../../../AMDGPUUsage.rst:1153
msgid "\"Args\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1153
msgid ""
"Sequence of mappings of the kernel arguments. See :ref:`amdgpu-amdhsa-code-"
"object-kernel-argument-metadata-map-table-v2` for the definition of the "
"mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:1157
msgid "\"CodeProps\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1157
msgid ""
"Mapping of properties related to the kernel code. See :ref:`amdgpu-amdhsa-"
"code-object-kernel-code-properties-metadata-map-table-v2` for the mapping "
"definition."
msgstr ""

#: ../../../AMDGPUUsage.rst:1165
msgid "AMDHSA Code Object V2 Kernel Attribute Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1171
msgid "\"ReqdWorkGroupSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1171 ../../../AMDGPUUsage.rst:1180
#: ../../../AMDGPUUsage.rst:1577 ../../../AMDGPUUsage.rst:1586
msgid "sequence of 3 integers"
msgstr ""

#: ../../../AMDGPUUsage.rst:1171 ../../../AMDGPUUsage.rst:1577
msgid ""
"If not 0, 0, 0 then all values must be >=1 and the dispatch work-group size "
"X, Y, Z must correspond to the specified values. Defaults to 0, 0, 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:1177 ../../../AMDGPUUsage.rst:1583
msgid "Corresponds to the OpenCL ``reqd_work_group_size`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:1180
msgid "\"WorkGroupSizeHint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1180 ../../../AMDGPUUsage.rst:1586
msgid ""
"The dispatch work-group size X, Y, Z is likely to be the specified values."
msgstr ""

#: ../../../AMDGPUUsage.rst:1184 ../../../AMDGPUUsage.rst:1590
msgid "Corresponds to the OpenCL ``work_group_size_hint`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:1187
msgid "\"VecTypeHint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1187 ../../../AMDGPUUsage.rst:1593
msgid "The name of a scalar or vector type."
msgstr ""

#: ../../../AMDGPUUsage.rst:1190 ../../../AMDGPUUsage.rst:1596
msgid "Corresponds to the OpenCL ``vec_type_hint`` attribute."
msgstr ""

#: ../../../AMDGPUUsage.rst:1193
msgid "\"RuntimeHandle\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1193 ../../../AMDGPUUsage.rst:1599
msgid ""
"The external symbol name associated with a kernel. OpenCL runtime allocates "
"a global buffer for the symbol and saves the kernel's address to it, which "
"is used for device side enqueueing. Only available for device side enqueued "
"kernels."
msgstr ""

#: ../../../AMDGPUUsage.rst:1206
msgid "AMDHSA Code Object V2 Kernel Argument Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1212 ../../../AMDGPUUsage.rst:1699
msgid "Kernel argument name."
msgstr ""

#: ../../../AMDGPUUsage.rst:1213
msgid "\"TypeName\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1213 ../../../AMDGPUUsage.rst:1700
msgid "Kernel argument type name."
msgstr ""

#: ../../../AMDGPUUsage.rst:1214
msgid "\"Size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1214 ../../../AMDGPUUsage.rst:1215
#: ../../../AMDGPUUsage.rst:1322 ../../../AMDGPUUsage.rst:1410
#: ../../../AMDGPUUsage.rst:1415 ../../../AMDGPUUsage.rst:1426
#: ../../../AMDGPUUsage.rst:1436 ../../../AMDGPUUsage.rst:1441
#: ../../../AMDGPUUsage.rst:1443 ../../../AMDGPUUsage.rst:1459
#: ../../../AMDGPUUsage.rst:1463 ../../../AMDGPUUsage.rst:1471
#: ../../../AMDGPUUsage.rst:1476 ../../../AMDGPUUsage.rst:1608
#: ../../../AMDGPUUsage.rst:1613 ../../../AMDGPUUsage.rst:1624
#: ../../../AMDGPUUsage.rst:1634 ../../../AMDGPUUsage.rst:1639
#: ../../../AMDGPUUsage.rst:1641 ../../../AMDGPUUsage.rst:1662
#: ../../../AMDGPUUsage.rst:1671 ../../../AMDGPUUsage.rst:1679
#: ../../../AMDGPUUsage.rst:1684 ../../../AMDGPUUsage.rst:1701
#: ../../../AMDGPUUsage.rst:1702 ../../../AMDGPUUsage.rst:1811
msgid "integer"
msgstr ""

#: ../../../AMDGPUUsage.rst:1214 ../../../AMDGPUUsage.rst:1701
msgid "Kernel argument size in bytes."
msgstr ""

#: ../../../AMDGPUUsage.rst:1215
msgid "\"Align\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1215
msgid "Kernel argument alignment in bytes. Must be a power of two."
msgstr ""

#: ../../../AMDGPUUsage.rst:1217
msgid "\"ValueKind\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1217 ../../../AMDGPUUsage.rst:1706
msgid ""
"Kernel argument kind that specifies how to set up the corresponding "
"argument. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1224
msgid "\"ByValue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1223 ../../../AMDGPUUsage.rst:1712
msgid "The argument is copied directly into the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1229
msgid "\"GlobalBuffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1227 ../../../AMDGPUUsage.rst:1716
msgid ""
"A global address space pointer to the buffer data is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1234
msgid "\"DynamicSharedPointer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1232 ../../../AMDGPUUsage.rst:1721
msgid ""
"A group address space pointer to dynamically allocated LDS is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1239
msgid "\"Sampler\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1237 ../../../AMDGPUUsage.rst:1726
msgid "A global address space pointer to a S# is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1244
msgid "\"Image\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1242 ../../../AMDGPUUsage.rst:1731
msgid "A global address space pointer to a T# is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1249
msgid "\"Pipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1247 ../../../AMDGPUUsage.rst:1736
msgid ""
"A global address space pointer to an OpenCL pipe is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1255
msgid "\"Queue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1252 ../../../AMDGPUUsage.rst:1741
msgid ""
"A global address space pointer to an OpenCL device enqueue queue is passed "
"in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1261
msgid "\"HiddenGlobalOffsetX\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1258 ../../../AMDGPUUsage.rst:1747
msgid ""
"The OpenCL grid dispatch global offset for the X dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1267
msgid "\"HiddenGlobalOffsetY\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1264 ../../../AMDGPUUsage.rst:1753
msgid ""
"The OpenCL grid dispatch global offset for the Y dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1273
msgid "\"HiddenGlobalOffsetZ\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1270 ../../../AMDGPUUsage.rst:1759
msgid ""
"The OpenCL grid dispatch global offset for the Z dimension is passed in the "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1279
msgid "\"HiddenNone\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1276 ../../../AMDGPUUsage.rst:1765
msgid ""
"An argument that is not used by the kernel. Space needs to be left for it, "
"but it does not need to be set up."
msgstr ""

#: ../../../AMDGPUUsage.rst:1284
msgid "\"HiddenPrintfBuffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1282 ../../../AMDGPUUsage.rst:1771
msgid ""
"A global address space pointer to the runtime printf buffer is passed in "
"kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1291
msgid "\"HiddenDefaultQueue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1287 ../../../AMDGPUUsage.rst:1776
msgid ""
"A global address space pointer to the OpenCL device enqueue queue that "
"should be used by the kernel by default is passed in the kernarg."
msgstr ""

#: ../../../AMDGPUUsage.rst:1297
msgid "\"HiddenCompletionAction\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1294 ../../../AMDGPUUsage.rst:1783
msgid ""
"A global address space pointer to help link enqueued kernels into the "
"ancestor tree for determining when the parent kernel has finished."
msgstr ""

#: ../../../AMDGPUUsage.rst:1299
msgid "\"ValueType\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1299
msgid ""
"Kernel argument value type. Only present if \"ValueKind\" is \"ByValue\". "
"For vector data types, the value is for the element type. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1305
msgid "\"Struct\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1306
msgid "\"I8\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1307
msgid "\"U8\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1308
msgid "\"I16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1309
msgid "\"U16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1310
msgid "\"F16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1311
msgid "\"I32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1312
msgid "\"U32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1313
msgid "\"F32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1314
msgid "\"I64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1315
msgid "\"U64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1316
msgid "\"F64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1322
msgid "\"PointeeAlign\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1322
msgid ""
"Alignment in bytes of pointee type for pointer type kernel argument. Must be "
"a power of 2. Only present if \"ValueKind\" is \"DynamicSharedPointer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1328
msgid "\"AddrSpaceQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1328
msgid ""
"Kernel argument address space qualifier. Only present if \"ValueKind\" is "
"\"GlobalBuffer\" or \"DynamicSharedPointer\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1334
msgid "\"Private\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1335
msgid "\"Global\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1336
msgid "\"Constant\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1337
msgid "\"Local\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1338
msgid "\"Generic\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1339
msgid "\"Region\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1348
msgid "\"AccQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1348
msgid ""
"Kernel argument access qualifier. Only present if \"ValueKind\" is \"Image\" "
"or \"Pipe\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1354 ../../../AMDGPUUsage.rst:1374
msgid "\"ReadOnly\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1355 ../../../AMDGPUUsage.rst:1375
msgid "\"WriteOnly\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1356 ../../../AMDGPUUsage.rst:1376
msgid "\"ReadWrite\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1361
msgid "\"ActualAccQual\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1361
msgid ""
"The actual memory accesses performed by the kernel on the kernel argument. "
"Only present if \"ValueKind\" is \"GlobalBuffer\", \"Image\", or \"Pipe\". "
"This may be more restrictive than indicated by \"AccQual\" to reflect what "
"the kernel actual does. If not present then the runtime must assume what is "
"implied by \"AccQual\" and \"IsConst\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1378
msgid "\"IsConst\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1378 ../../../AMDGPUUsage.rst:1383
#: ../../../AMDGPUUsage.rst:1388 ../../../AMDGPUUsage.rst:1393
#: ../../../AMDGPUUsage.rst:1867 ../../../AMDGPUUsage.rst:1872
#: ../../../AMDGPUUsage.rst:1877 ../../../AMDGPUUsage.rst:1882
msgid "boolean"
msgstr ""

#: ../../../AMDGPUUsage.rst:1378
msgid ""
"Indicates if the kernel argument is const qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1383
msgid "\"IsRestrict\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1383
msgid ""
"Indicates if the kernel argument is restrict qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1388
msgid "\"IsVolatile\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1388
msgid ""
"Indicates if the kernel argument is volatile qualified. Only present if "
"\"ValueKind\" is \"GlobalBuffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1393
msgid "\"IsPipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1393
msgid ""
"Indicates if the kernel argument is pipe qualified. Only present if "
"\"ValueKind\" is \"Pipe\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1404
msgid "AMDHSA Code Object V2 Kernel Code Properties Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1410
msgid "\"KernargSegmentSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1410 ../../../AMDGPUUsage.rst:1608
msgid ""
"The size in bytes of the kernarg segment that holds the values of the "
"arguments to the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:1415
msgid "\"GroupSegmentFixedSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1415 ../../../AMDGPUUsage.rst:1613
msgid ""
"The amount of group segment memory required by a work-group in bytes. This "
"does not include any dynamically allocated group segment memory that may be "
"added when the kernel is dispatched."
msgstr ""

#: ../../../AMDGPUUsage.rst:1426
msgid "\"PrivateSegmentFixedSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1426 ../../../AMDGPUUsage.rst:1624
msgid ""
"The amount of fixed private address space memory required for a work-item in "
"bytes. If the kernel uses a dynamic call stack then additional space must be "
"added to this value for the call stack."
msgstr ""

#: ../../../AMDGPUUsage.rst:1436
msgid "\"KernargSegmentAlign\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1436 ../../../AMDGPUUsage.rst:1634
msgid ""
"The maximum byte alignment of arguments in the kernarg segment. Must be a "
"power of 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:1441
msgid "\"WavefrontSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1441 ../../../AMDGPUUsage.rst:1639
msgid "Wavefront size. Must be a power of 2."
msgstr ""

#: ../../../AMDGPUUsage.rst:1443
msgid "\"NumSGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1443
msgid ""
"Number of scalar registers used by a wavefront for GFX6-GFX9. This includes "
"the special SGPRs for VCC, Flat Scratch (GFX7-GFX9) and XNACK (for GFX8-"
"GFX9). It does not include the 16 SGPR added if a trap handler is enabled. "
"It is not rounded up to the allocation granularity."
msgstr ""

#: ../../../AMDGPUUsage.rst:1459
msgid "\"NumVGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1459
msgid "Number of vector registers used by each work-item for GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:1463
msgid "\"MaxFlatWorkGroupSize\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1463 ../../../AMDGPUUsage.rst:1671
msgid ""
"Maximum flat work-group size supported by the kernel in work-items. Must be "
">=1 and consistent with ReqdWorkGroupSize if not 0, 0, 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:1471
msgid "\"NumSpilledSGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1471 ../../../AMDGPUUsage.rst:1679
msgid ""
"Number of stores from a scalar register to a register allocator created "
"spill location."
msgstr ""

#: ../../../AMDGPUUsage.rst:1476
msgid "\"NumSpilledVGPRs\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1476 ../../../AMDGPUUsage.rst:1684
msgid ""
"Number of stores from a vector register to a register allocator created "
"spill location."
msgstr ""

#: ../../../AMDGPUUsage.rst:1486
msgid "Code Object V3 Metadata (-mattr=+code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1488
msgid ""
"Code object V3 metadata is specified by the ``NT_AMDGPU_METADATA`` note "
"record (see :ref:`amdgpu-note-records-v3`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1491
msgid ""
"The metadata is represented as Message Pack formatted binary data (see "
"[MsgPack]_). The top level is a Message Pack map that includes the keys "
"defined in table :ref:`amdgpu-amdhsa-code-object-metadata-map-table-v3` and "
"referenced tables."
msgstr ""

#: ../../../AMDGPUUsage.rst:1497
msgid ""
"Additional information can be added to the maps. To avoid conflicts, any key "
"names should be prefixed by \"*vendor-name*.\" where ``vendor-name`` can be "
"the the name of the vendor and specific vendor tool that generates the "
"information. The prefix is abbreviated to simply \".\" when it appears "
"within a map that has been added by the same *vendor-name*."
msgstr ""

#: ../../../AMDGPUUsage.rst:1504
msgid "AMDHSA Code Object V3 Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1510
msgid "\"amdhsa.version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1514
msgid "\"amdhsa.printf\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1540
msgid "\"amdhsa.kernels\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1540 ../../../AMDGPUUsage.rst:1572
msgid "sequence of map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1540
msgid ""
"Sequence of the maps for each kernel in the code object. See :ref:`amdgpu-"
"amdhsa-code-object-kernel-metadata-map-table-v3` for the definition of the "
"keys included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:1549
msgid "AMDHSA Code Object V3 Kernel Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1555 ../../../AMDGPUUsage.rst:1699
msgid "\".name\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1556
msgid "\".symbol\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1558
msgid "\".language\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1564
msgid "\"HIP\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1566
msgid "\"Assembler\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1568
msgid "\".language_version\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1572
msgid "\".args\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1572
msgid ""
"Sequence of maps of the kernel arguments. See :ref:`amdgpu-amdhsa-code-"
"object-kernel-argument-metadata-map-table-v3` for the definition of the keys "
"included in that map."
msgstr ""

#: ../../../AMDGPUUsage.rst:1577
msgid "\".reqd_workgroup_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1586
msgid "\".workgroup_size_hint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1593
msgid "\".vec_type_hint\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1599
msgid "\".device_enqueue_symbol\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1608
msgid "\".kernarg_segment_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1613
msgid "\".group_segment_fixed_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1624
msgid "\".private_segment_fixed_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1634
msgid "\".kernarg_segment_align\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1639
msgid "\".wavefront_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1641
msgid "\".sgpr_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1641
msgid ""
"Number of scalar registers required by a wavefront for GFX6-GFX9. A register "
"is required if it is used explicitly, or if a higher numbered register is "
"used explicitly. This includes the special SGPRs for VCC, Flat Scratch (GFX7-"
"GFX9) and XNACK (for GFX8-GFX9). It does not include the 16 SGPR added if a "
"trap handler is enabled. It is not rounded up to the allocation granularity."
msgstr ""

#: ../../../AMDGPUUsage.rst:1662
msgid "\".vgpr_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1662
msgid ""
"Number of vector registers required by each work-item for GFX6-GFX9. A "
"register is required if it is used explicitly, or if a higher numbered "
"register is used explicitly."
msgstr ""

#: ../../../AMDGPUUsage.rst:1671
msgid "\".max_flat_workgroup_size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1679
msgid "\".sgpr_spill_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1684
msgid "\".vgpr_spill_count\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1693
msgid "AMDHSA Code Object V3 Kernel Argument Metadata Map"
msgstr ""

#: ../../../AMDGPUUsage.rst:1700
msgid "\".type_name\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1701
msgid "\".size\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1702
msgid "\".offset\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1702
msgid ""
"Kernel argument offset in bytes. The offset must be a multiple of the "
"alignment required by the argument."
msgstr ""

#: ../../../AMDGPUUsage.rst:1706
msgid "\".value_kind\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1713
msgid "\"by_value\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1718
msgid "\"global_buffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1723
msgid "\"dynamic_shared_pointer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1728
msgid "\"sampler\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1733
msgid "\"image\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1738
msgid "\"pipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1744
msgid "\"queue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1750
msgid "\"hidden_global_offset_x\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1756
msgid "\"hidden_global_offset_y\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1762
msgid "\"hidden_global_offset_z\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1768
msgid "\"hidden_none\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1773
msgid "\"hidden_printf_buffer\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1780
msgid "\"hidden_default_queue\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1786
msgid "\"hidden_completion_action\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1788
msgid "\".value_type\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1788
msgid ""
"Kernel argument value type. Only present if \".value_kind\" is \"by_value\". "
"For vector data types, the value is for the element type. Values include:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1794
msgid "\"struct\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1795
msgid "\"i8\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1796
msgid "\"u8\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1797
msgid "\"i16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1798
msgid "\"u16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1799
msgid "\"f16\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1800
msgid "\"i32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1801
msgid "\"u32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1802
msgid "\"f32\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1803
msgid "\"i64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1804
msgid "\"u64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1805
msgid "\"f64\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1811
msgid "\".pointee_align\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1811
msgid ""
"Alignment in bytes of pointee type for pointer type kernel argument. Must be "
"a power of 2. Only present if \".value_kind\" is \"dynamic_shared_pointer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1817
msgid "\".address_space\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1817
msgid ""
"Kernel argument address space qualifier. Only present if \".value_kind\" is "
"\"global_buffer\" or \"dynamic_shared_pointer\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1823
msgid "\"private\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1824
msgid "\"global\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1825
msgid "\"constant\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1826
msgid "\"local\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1827
msgid "\"generic\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1828
msgid "\"region\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1837
msgid "\".access\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1837
msgid ""
"Kernel argument access qualifier. Only present if \".value_kind\" is "
"\"image\" or \"pipe\". Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1843 ../../../AMDGPUUsage.rst:1863
msgid "\"read_only\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1844 ../../../AMDGPUUsage.rst:1864
msgid "\"write_only\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1845 ../../../AMDGPUUsage.rst:1865
msgid "\"read_write\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1850
msgid "\".actual_access\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1850
msgid ""
"The actual memory accesses performed by the kernel on the kernel argument. "
"Only present if \".value_kind\" is \"global_buffer\", \"image\", or "
"\"pipe\". This may be more restrictive than indicated by \".access\" to "
"reflect what the kernel actual does. If not present then the runtime must "
"assume what is implied by \".access\" and \".is_const\"      . Values are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1867
msgid "\".is_const\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1867
msgid ""
"Indicates if the kernel argument is const qualified. Only present if \"."
"value_kind\" is \"global_buffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1872
msgid "\".is_restrict\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1872
msgid ""
"Indicates if the kernel argument is restrict qualified. Only present if \"."
"value_kind\" is \"global_buffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1877
msgid "\".is_volatile\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1877
msgid ""
"Indicates if the kernel argument is volatile qualified. Only present if \"."
"value_kind\" is \"global_buffer\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1882
msgid "\".is_pipe\""
msgstr ""

#: ../../../AMDGPUUsage.rst:1882
msgid ""
"Indicates if the kernel argument is pipe qualified. Only present if \"."
"value_kind\" is \"pipe\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:1894
msgid "Kernel Dispatch"
msgstr ""

#: ../../../AMDGPUUsage.rst:1896
msgid ""
"The HSA architected queuing language (AQL) defines a user space memory "
"interface that can be used to control the dispatch of kernels, in an agent "
"independent way. An agent can have zero or more AQL queues created for it "
"using the ROCm runtime, in which AQL packets (all of which are 64 bytes) can "
"be placed. See the *HSA Platform System Architecture Specification* [HSA]_ "
"for the AQL queue mechanics and packet layouts."
msgstr ""

#: ../../../AMDGPUUsage.rst:1903
msgid ""
"The packet processor of a kernel agent is responsible for detecting and "
"dispatching HSA kernels from the AQL queues associated with it. For AMD GPUs "
"the packet processor is implemented by the hardware command processor (CP), "
"asynchronous dispatch controller (ADC) and shader processor input controller "
"(SPI)."
msgstr ""

#: ../../../AMDGPUUsage.rst:1909
msgid ""
"The ROCm runtime can be used to allocate an AQL queue object. It uses the "
"kernel mode driver to initialize and register the AQL queue with CP."
msgstr ""

#: ../../../AMDGPUUsage.rst:1912
msgid ""
"To dispatch a kernel the following actions are performed. This can occur in "
"the CPU host program, or from an HSA kernel executing on a GPU."
msgstr ""

#: ../../../AMDGPUUsage.rst:1915
msgid ""
"A pointer to an AQL queue for the kernel agent on which the kernel is to be "
"executed is obtained."
msgstr ""

#: ../../../AMDGPUUsage.rst:1917
msgid ""
"A pointer to the kernel descriptor (see :ref:`amdgpu-amdhsa-kernel-"
"descriptor`) of the kernel to execute is obtained. It must be for a kernel "
"that is contained in a code object that that was loaded by the ROCm runtime "
"on the kernel agent with which the AQL queue is associated."
msgstr ""

#: ../../../AMDGPUUsage.rst:1922
msgid ""
"Space is allocated for the kernel arguments using the ROCm runtime allocator "
"for a memory region with the kernarg property for the kernel agent that will "
"execute the kernel. It must be at least 16 byte aligned."
msgstr ""

#: ../../../AMDGPUUsage.rst:1925
msgid ""
"Kernel argument values are assigned to the kernel argument memory "
"allocation. The layout is defined in the *HSA Programmer's Language "
"Reference* [HSA]_. For AMDGPU the kernel execution directly accesses the "
"kernel argument memory in the same way constant memory is accessed. (Note "
"that the HSA specification allows an implementation to copy the kernel "
"argument contents to another location that is accessed by the kernel.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:1931
msgid ""
"An AQL kernel dispatch packet is created on the AQL queue. The ROCm runtime "
"api uses 64 bit atomic operations to reserve space in the AQL queue for the "
"packet. The packet must be set up, and the final write must use an atomic "
"store release to set the packet kind to ensure the packet contents are "
"visible to the kernel agent. AQL defines a doorbell signal mechanism to "
"notify the kernel agent that the AQL queue has been updated. These rules, "
"and the layout of the AQL queue and kernel dispatch packet is defined in the "
"*HSA System Architecture Specification* [HSA]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:1939
msgid ""
"A kernel dispatch packet includes information about the actual dispatch, "
"such as grid and work-group size, together with information from the code "
"object about the kernel, such as segment sizes. The ROCm runtime queries on "
"the kernel symbol can be used to obtain the code object values which are "
"recorded in the :ref:`amdgpu-amdhsa-code-object-metadata`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1944
msgid ""
"CP executes micro-code and is responsible for detecting and setting up the "
"GPU to execute the wavefronts of a kernel dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:1946
msgid ""
"CP ensures that when the a wavefront starts executing the kernel machine "
"code, the scalar general purpose registers (SGPR) and vector general purpose "
"registers (VGPR) are set up as required by the machine code. The required "
"setup is defined in the :ref:`amdgpu-amdhsa-kernel-descriptor`. The initial "
"register state is defined in :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`."
msgstr ""

#: ../../../AMDGPUUsage.rst:1952
msgid ""
"The prolog of the kernel machine code (see :ref:`amdgpu-amdhsa-kernel-"
"prolog`) sets up the machine state as necessary before continuing executing "
"the machine code that corresponds to the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:1955
msgid ""
"When the kernel dispatch has completed execution, CP signals the completion "
"signal specified in the kernel dispatch packet if not 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:1961
msgid "Memory Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:1963
msgid "The memory space properties are:"
msgstr ""

#: ../../../AMDGPUUsage.rst:1965
msgid "AMDHSA Memory Spaces"
msgstr ""

#: ../../../AMDGPUUsage.rst:1969
msgid "Memory Space Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:1969
msgid "HSA Segment Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:1969
msgid "Hardware Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:1969
msgid "Address Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:1969
msgid "NULL Value"
msgstr ""

#: ../../../AMDGPUUsage.rst:1972
msgid "Private"
msgstr ""

#: ../../../AMDGPUUsage.rst:1972 ../../../AMDGPUUsage.rst:3079
#: ../../../AMDGPUUsage.rst:3094
msgid "private"
msgstr ""

#: ../../../AMDGPUUsage.rst:1972
msgid "scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:1972
msgid "0x00000000"
msgstr ""

#: ../../../AMDGPUUsage.rst:1973
msgid "Local"
msgstr ""

#: ../../../AMDGPUUsage.rst:1973
msgid "group"
msgstr ""

#: ../../../AMDGPUUsage.rst:1973
msgid "LDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:1973
msgid "0xFFFFFFFF"
msgstr ""

#: ../../../AMDGPUUsage.rst:1974 ../../../AMDGPUUsage.rst:3077
#: ../../../AMDGPUUsage.rst:3092 ../../../AMDGPUUsage.rst:3110
#: ../../../AMDGPUUsage.rst:3116 ../../../AMDGPUUsage.rst:3118
#: ../../../AMDGPUUsage.rst:3126 ../../../AMDGPUUsage.rst:3136
#: ../../../AMDGPUUsage.rst:3139 ../../../AMDGPUUsage.rst:3172
#: ../../../AMDGPUUsage.rst:3222 ../../../AMDGPUUsage.rst:3225
#: ../../../AMDGPUUsage.rst:3260 ../../../AMDGPUUsage.rst:3435
#: ../../../AMDGPUUsage.rst:3438 ../../../AMDGPUUsage.rst:3481
#: ../../../AMDGPUUsage.rst:3521 ../../../AMDGPUUsage.rst:3524
#: ../../../AMDGPUUsage.rst:3567 ../../../AMDGPUUsage.rst:3722
#: ../../../AMDGPUUsage.rst:3725 ../../../AMDGPUUsage.rst:3800
#: ../../../AMDGPUUsage.rst:4096 ../../../AMDGPUUsage.rst:4101
#: ../../../AMDGPUUsage.rst:4162 ../../../AMDGPUUsage.rst:4244
#: ../../../AMDGPUUsage.rst:4249 ../../../AMDGPUUsage.rst:4254
#: ../../../AMDGPUUsage.rst:4259
msgid "global"
msgstr ""

#: ../../../AMDGPUUsage.rst:1974 ../../../AMDGPUUsage.rst:1975
#: ../../../AMDGPUUsage.rst:1977
msgid "0x0000000000000000"
msgstr ""

#: ../../../AMDGPUUsage.rst:1975 ../../../AMDGPUUsage.rst:3080
#: ../../../AMDGPUUsage.rst:3095
msgid "constant"
msgstr ""

#: ../../../AMDGPUUsage.rst:1975
msgid "*same as global*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1977
msgid "Generic"
msgstr ""

#: ../../../AMDGPUUsage.rst:1977
msgid "flat"
msgstr ""

#: ../../../AMDGPUUsage.rst:1978
msgid "Region"
msgstr ""

#: ../../../AMDGPUUsage.rst:1978
msgid "N/A"
msgstr ""

#: ../../../AMDGPUUsage.rst:1978
msgid "GDS"
msgstr ""

#: ../../../AMDGPUUsage.rst:1978
msgid "*not implemented for AMDHSA*"
msgstr ""

#: ../../../AMDGPUUsage.rst:1982
msgid ""
"The global and constant memory spaces both use global virtual addresses, "
"which are the same virtual address space used by the CPU. However, some "
"virtual addresses may only be accessible to the CPU, some only accessible by "
"the GPU, and some by both."
msgstr ""

#: ../../../AMDGPUUsage.rst:1987
msgid ""
"Using the constant memory space indicates that the data will not change "
"during the execution of the kernel. This allows scalar read instructions to "
"be used. The vector and scalar L1 caches are invalidated of volatile data "
"before each kernel dispatch execution to allow constant memory to change "
"values between kernel dispatches."
msgstr ""

#: ../../../AMDGPUUsage.rst:1993
msgid ""
"The local memory space uses the hardware Local Data Store (LDS) which is "
"automatically allocated when the hardware creates work-groups of wavefronts, "
"and freed when all the wavefronts of a work-group have terminated. The data "
"store (DS) instructions can be used to access it."
msgstr ""

#: ../../../AMDGPUUsage.rst:1998
msgid ""
"The private memory space uses the hardware scratch memory support. If the "
"kernel uses scratch, then the hardware allocates memory that is accessed "
"using wavefront lane dword (4 byte) interleaving. The mapping used from "
"private address to physical address is:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2003
msgid ""
"``wavefront-scratch-base + (private-address * wavefront-size * 4) + "
"(wavefront-lane-id * 4)``"
msgstr ""

#: ../../../AMDGPUUsage.rst:2007
msgid ""
"There are different ways that the wavefront scratch base address is "
"determined by a wavefront (see :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`). This memory can be accessed in an interleaved manner using buffer "
"instruction with the scratch buffer descriptor and per wavefront scratch "
"offset, by the scratch instructions, or by flat instructions. If each lane "
"of a wavefront accesses the same private address, the interleaving results "
"in adjacent dwords being accessed and hence requires fewer cache lines to be "
"fetched. Multi-dword access is not supported except by flat and scratch "
"instructions in GFX9."
msgstr ""

#: ../../../AMDGPUUsage.rst:2016
msgid ""
"The generic address space uses the hardware flat address support available "
"in GFX7-GFX9. This uses two fixed ranges of virtual addresses (the private "
"and local appertures), that are outside the range of addressible global "
"memory, to map from a flat address to a private or local address."
msgstr ""

#: ../../../AMDGPUUsage.rst:2021
msgid ""
"FLAT instructions can take a flat address and access global, private "
"(scratch) and group (LDS) memory depending in if the address is within one "
"of the apperture ranges. Flat access to scratch requires hardware aperture "
"setup and setup in the kernel prologue (see :ref:`amdgpu-amdhsa-flat-"
"scratch`). Flat access to LDS requires hardware aperture setup and M0 (GFX7-"
"GFX8) register setup (see :ref:`amdgpu-amdhsa-m0`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2028
msgid ""
"To convert between a segment address and a flat address the base address of "
"the appertures address can be used. For GFX7-GFX8 these are available in "
"the :ref:`amdgpu-amdhsa-hsa-aql-queue` the address of which can be obtained "
"with Queue Ptr SGPR (see :ref:`amdgpu-amdhsa-initial-kernel-execution-"
"state`). For GFX9 the appature base addresses are directly available as "
"inline constant registers ``SRC_SHARED_BASE/LIMIT`` and ``SRC_PRIVATE_BASE/"
"LIMIT``. In 64 bit address mode the apperture sizes are 2^32 bytes and the "
"base is aligned to 2^32 which makes it easier to convert from flat to "
"segment or segment to flat."
msgstr ""

#: ../../../AMDGPUUsage.rst:2038
msgid "Image and Samplers"
msgstr ""

#: ../../../AMDGPUUsage.rst:2040
msgid ""
"Image and sample handles created by the ROCm runtime are 64 bit addresses of "
"a hardware 32 byte V# and 48 byte S# object respectively. In order to "
"support the HSA ``query_sampler`` operations two extra dwords are used to "
"store the HSA BRIG enumeration values for the queries that are not trivially "
"deducible from the S# representation."
msgstr ""

#: ../../../AMDGPUUsage.rst:2047
msgid "HSA Signals"
msgstr ""

#: ../../../AMDGPUUsage.rst:2049
msgid ""
"HSA signal handles created by the ROCm runtime are 64 bit addresses of a "
"structure allocated in memory accessible from both the CPU and GPU. The "
"structure is defined by the ROCm runtime and subject to change between "
"releases (see [AMD-ROCm-github]_)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2057
msgid "HSA AQL Queue"
msgstr ""

#: ../../../AMDGPUUsage.rst:2059
msgid ""
"The HSA AQL queue structure is defined by the ROCm runtime and subject to "
"change between releases (see [AMD-ROCm-github]_). For some processors it "
"contains fields needed to implement certain language features such as the "
"flat address aperture bases. It also contains fields used by CP such as "
"managing the allocation of scratch memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:2068
msgid "Kernel Descriptor"
msgstr ""

#: ../../../AMDGPUUsage.rst:2070
msgid ""
"A kernel descriptor consists of the information needed by CP to initiate the "
"execution of a kernel, including the entry point address of the machine code "
"that implements the kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:2075 ../../../AMDGPUUsage.rst:2080
msgid "Kernel Descriptor for GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:2077
msgid ""
"CP microcode requires the Kernel descriptor to be allocated on 64 byte "
"alignment."
msgstr ""

#: ../../../AMDGPUUsage.rst:2084 ../../../AMDGPUUsage.rst:2157
#: ../../../AMDGPUUsage.rst:2387
msgid "Bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2084 ../../../AMDGPUUsage.rst:2157
#: ../../../AMDGPUUsage.rst:2387
msgid "Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:2084 ../../../AMDGPUUsage.rst:2157
#: ../../../AMDGPUUsage.rst:2387
msgid "Field Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:2086
msgid "31:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:2086 ../../../AMDGPUUsage.rst:2095
#: ../../../AMDGPUUsage.rst:2113 ../../../AMDGPUUsage.rst:2120
msgid "4 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:2086
msgid "GROUP_SEGMENT_FIXED_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2086
msgid ""
"The amount of fixed local address space memory required for a work-group in "
"bytes. This does not include any dynamically allocated local address space "
"memory that may be added when the kernel is dispatched."
msgstr ""

#: ../../../AMDGPUUsage.rst:2095
msgid "63:32"
msgstr ""

#: ../../../AMDGPUUsage.rst:2095
msgid "PRIVATE_SEGMENT_FIXED_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2095
msgid ""
"The amount of fixed private address space memory required for a work-item in "
"bytes. If is_dynamic_callstack is 1 then additional space must be added to "
"this value for the call stack."
msgstr ""

#: ../../../AMDGPUUsage.rst:2103
msgid "127:64"
msgstr ""

#: ../../../AMDGPUUsage.rst:2103 ../../../AMDGPUUsage.rst:2104
#: ../../../AMDGPUUsage.rst:2147
msgid "8 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:2103 ../../../AMDGPUUsage.rst:2111
#: ../../../AMDGPUUsage.rst:2146 ../../../AMDGPUUsage.rst:2147
#: ../../../AMDGPUUsage.rst:2360 ../../../AMDGPUUsage.rst:2377
#: ../../../AMDGPUUsage.rst:2530
msgid "Reserved, must be 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:2104
msgid "191:128"
msgstr ""

#: ../../../AMDGPUUsage.rst:2104
msgid "KERNEL_CODE_ENTRY_BYTE_OFFSET"
msgstr ""

#: ../../../AMDGPUUsage.rst:2104
msgid ""
"Byte offset (possibly negative) from base address of kernel descriptor to "
"kernel's entry point instruction which must be 256 byte aligned."
msgstr ""

#: ../../../AMDGPUUsage.rst:2111
msgid "383:192"
msgstr ""

#: ../../../AMDGPUUsage.rst:2111
msgid "24 bytes"
msgstr ""

#: ../../../AMDGPUUsage.rst:2113
msgid "415:384"
msgstr ""

#: ../../../AMDGPUUsage.rst:2113
msgid "COMPUTE_PGM_RSRC1"
msgstr ""

#: ../../../AMDGPUUsage.rst:2113
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC1`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc1-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2120
msgid "447:416"
msgstr ""

#: ../../../AMDGPUUsage.rst:2120
msgid "COMPUTE_PGM_RSRC2"
msgstr ""

#: ../../../AMDGPUUsage.rst:2120
msgid ""
"Compute Shader (CS) program settings used by CP to set up "
"``COMPUTE_PGM_RSRC2`` configuration register. See :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2127
msgid "448"
msgstr ""

#: ../../../AMDGPUUsage.rst:2127 ../../../AMDGPUUsage.rst:2139
#: ../../../AMDGPUUsage.rst:2140 ../../../AMDGPUUsage.rst:2141
#: ../../../AMDGPUUsage.rst:2142 ../../../AMDGPUUsage.rst:2143
#: ../../../AMDGPUUsage.rst:2144 ../../../AMDGPUUsage.rst:2146
#: ../../../AMDGPUUsage.rst:2299 ../../../AMDGPUUsage.rst:2308
#: ../../../AMDGPUUsage.rst:2319 ../../../AMDGPUUsage.rst:2327
#: ../../../AMDGPUUsage.rst:2342 ../../../AMDGPUUsage.rst:2351
#: ../../../AMDGPUUsage.rst:2359 ../../../AMDGPUUsage.rst:2389
#: ../../../AMDGPUUsage.rst:2404 ../../../AMDGPUUsage.rst:2411
#: ../../../AMDGPUUsage.rst:2419 ../../../AMDGPUUsage.rst:2427
#: ../../../AMDGPUUsage.rst:2435 ../../../AMDGPUUsage.rst:2450
#: ../../../AMDGPUUsage.rst:2466 ../../../AMDGPUUsage.rst:2506
#: ../../../AMDGPUUsage.rst:2516 ../../../AMDGPUUsage.rst:2519
#: ../../../AMDGPUUsage.rst:2521 ../../../AMDGPUUsage.rst:2523
#: ../../../AMDGPUUsage.rst:2525 ../../../AMDGPUUsage.rst:2527
#: ../../../AMDGPUUsage.rst:2530
msgid "1 bit"
msgstr ""

#: ../../../AMDGPUUsage.rst:2127
msgid "ENABLE_SGPR_PRIVATE_SEGMENT _BUFFER"
msgstr ""

#: ../../../AMDGPUUsage.rst:2127
msgid ""
"Enable the setup of the SGPR user data registers (see :ref:`amdgpu-amdhsa-"
"initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2132
msgid ""
"The total number of SGPR user data registers requested must not exceed 16 "
"and match value in ``compute_pgm_rsrc2.user_sgpr.user_sgpr_count``. Any "
"requests beyond 16 will be ignored."
msgstr ""

#: ../../../AMDGPUUsage.rst:2139
msgid "449"
msgstr ""

#: ../../../AMDGPUUsage.rst:2139
msgid "ENABLE_SGPR_DISPATCH_PTR"
msgstr ""

#: ../../../AMDGPUUsage.rst:2139 ../../../AMDGPUUsage.rst:2140
#: ../../../AMDGPUUsage.rst:2141 ../../../AMDGPUUsage.rst:2142
#: ../../../AMDGPUUsage.rst:2143 ../../../AMDGPUUsage.rst:2144
msgid "*see above*"
msgstr ""

#: ../../../AMDGPUUsage.rst:2140
msgid "450"
msgstr ""

#: ../../../AMDGPUUsage.rst:2140
msgid "ENABLE_SGPR_QUEUE_PTR"
msgstr ""

#: ../../../AMDGPUUsage.rst:2141
msgid "451"
msgstr ""

#: ../../../AMDGPUUsage.rst:2141
msgid "ENABLE_SGPR_KERNARG_SEGMENT_PTR"
msgstr ""

#: ../../../AMDGPUUsage.rst:2142
msgid "452"
msgstr ""

#: ../../../AMDGPUUsage.rst:2142
msgid "ENABLE_SGPR_DISPATCH_ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:2143
msgid "453"
msgstr ""

#: ../../../AMDGPUUsage.rst:2143
msgid "ENABLE_SGPR_FLAT_SCRATCH_INIT"
msgstr ""

#: ../../../AMDGPUUsage.rst:2144
msgid "454"
msgstr ""

#: ../../../AMDGPUUsage.rst:2144
msgid "ENABLE_SGPR_PRIVATE_SEGMENT _SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2146
msgid "455"
msgstr ""

#: ../../../AMDGPUUsage.rst:2147
msgid "511:456"
msgstr ""

#: ../../../AMDGPUUsage.rst:2148
msgid "512"
msgstr ""

#: ../../../AMDGPUUsage.rst:2148
msgid "**Total size 64 bytes.**"
msgstr ""

#: ../../../AMDGPUUsage.rst:2153
msgid "compute_pgm_rsrc1 for GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:2159
msgid "5:0"
msgstr ""

#: ../../../AMDGPUUsage.rst:2159
msgid "6 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2159
msgid "GRANULATED_WORKITEM_VGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:2159
msgid ""
"Number of vector register blocks used by each work-item; granularity is "
"device specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2166 ../../../AMDGPUUsage.rst:4952
#: ../../../AMDGPUUsage.rst:4954 ../../../AMDGPUUsage.rst:4956
#: ../../../AMDGPUUsage.rst:4958 ../../../AMDGPUUsage.rst:4960
#: ../../../AMDGPUUsage.rst:4962 ../../../AMDGPUUsage.rst:4964
#: ../../../AMDGPUUsage.rst:4966 ../../../AMDGPUUsage.rst:4968
#: ../../../AMDGPUUsage.rst:4970 ../../../AMDGPUUsage.rst:4972
#: ../../../AMDGPUUsage.rst:4974 ../../../AMDGPUUsage.rst:4976
#: ../../../AMDGPUUsage.rst:4978 ../../../AMDGPUUsage.rst:4980
#: ../../../AMDGPUUsage.rst:4984 ../../../AMDGPUUsage.rst:4987
#: ../../../AMDGPUUsage.rst:4990 ../../../AMDGPUUsage.rst:5001
#: ../../../AMDGPUUsage.rst:5005 ../../../AMDGPUUsage.rst:5009
#: ../../../AMDGPUUsage.rst:5013 ../../../AMDGPUUsage.rst:5017
#: ../../../AMDGPUUsage.rst:5019 ../../../AMDGPUUsage.rst:5023
#: ../../../AMDGPUUsage.rst:5025 ../../../AMDGPUUsage.rst:5027
#: ../../../AMDGPUUsage.rst:5029 ../../../AMDGPUUsage.rst:5031
#: ../../../AMDGPUUsage.rst:5033 ../../../AMDGPUUsage.rst:5035
msgid "GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:2165
msgid "vgprs_used 0..256"
msgstr ""

#: ../../../AMDGPUUsage.rst:2166
msgid "max(0, ceil(vgprs_used / 4) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2168
msgid ""
"Where vgprs_used is defined as the highest VGPR number explicitly referenced "
"plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:2173
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.VGPRS``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2176
msgid ""
"The :ref:`amdgpu-assembler` calculates this automatically for the selected "
"processor from values provided to the `.amdhsa_kernel` directive by the `."
"amdhsa_next_free_vgpr` nested directive (see :ref:`amdhsa-kernel-directives-"
"table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2187
msgid "9:6"
msgstr ""

#: ../../../AMDGPUUsage.rst:2187
msgid "4 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2187
msgid "GRANULATED_WAVEFRONT_SGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:2187
msgid ""
"Number of scalar register blocks used by a wavefront; granularity is device "
"specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2193 ../../../AMDGPUUsage.rst:2359
#: ../../../AMDGPUUsage.rst:2870
msgid "GFX6-GFX8"
msgstr ""

#: ../../../AMDGPUUsage.rst:2193 ../../../AMDGPUUsage.rst:2196
msgid "sgprs_used 0..112"
msgstr ""

#: ../../../AMDGPUUsage.rst:2194
msgid "max(0, ceil(sgprs_used / 8) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2197 ../../../AMDGPUUsage.rst:2375
#: ../../../AMDGPUUsage.rst:2720 ../../../AMDGPUUsage.rst:2874
#: ../../../AMDGPUUsage.rst:2909 ../../../AMDGPUUsage.rst:5021
msgid "GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:2197
msgid "2 * max(0, ceil(sgprs_used / 16) - 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2199
msgid ""
"Where sgprs_used is defined as the highest SGPR number explicitly referenced "
"plus one, plus a target-specific number of additional special SGPRs for VCC, "
"FLAT_SCRATCH (GFX7+) and XNACK_MASK (GFX8+), and any additional target-"
"specific limitations. It does not include the 16 SGPRs added if a trap "
"handler is enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:2215
msgid ""
"The target-specific limitations and special SGPR layout are defined in the "
"hardware documentation, which can be found in the :ref:`amdgpu-processors` "
"table."
msgstr ""

#: ../../../AMDGPUUsage.rst:2224
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.SGPRS``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2227
msgid ""
"The :ref:`amdgpu-assembler` calculates this automatically for the selected "
"processor from values provided to the `.amdhsa_kernel` directive by the `."
"amdhsa_next_free_sgpr` and `.amdhsa_reserve_*` nested directives (see :ref:"
"`amdhsa-kernel-directives-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2239
msgid "11:10"
msgstr ""

#: ../../../AMDGPUUsage.rst:2239 ../../../AMDGPUUsage.rst:2247
#: ../../../AMDGPUUsage.rst:2260 ../../../AMDGPUUsage.rst:2273
#: ../../../AMDGPUUsage.rst:2286 ../../../AMDGPUUsage.rst:2442
msgid "2 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2239
msgid "PRIORITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:2239 ../../../AMDGPUUsage.rst:2299
#: ../../../AMDGPUUsage.rst:2319 ../../../AMDGPUUsage.rst:2342
#: ../../../AMDGPUUsage.rst:2351 ../../../AMDGPUUsage.rst:2404
#: ../../../AMDGPUUsage.rst:2450 ../../../AMDGPUUsage.rst:2466
#: ../../../AMDGPUUsage.rst:2485
msgid "Must be 0."
msgstr ""

#: ../../../AMDGPUUsage.rst:2241
msgid "Start executing wavefront at the specified priority."
msgstr ""

#: ../../../AMDGPUUsage.rst:2244
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.PRIORITY``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2247
msgid "13:12"
msgstr ""

#: ../../../AMDGPUUsage.rst:2247
msgid "FLOAT_ROUND_MODE_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:2247
msgid ""
"Wavefront starts execution with specified rounding mode for single (32 bit) "
"floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:2254 ../../../AMDGPUUsage.rst:2267
msgid ""
"Floating point rounding mode values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-rounding-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2258 ../../../AMDGPUUsage.rst:2271
#: ../../../AMDGPUUsage.rst:2284 ../../../AMDGPUUsage.rst:2297
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.FLOAT_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2260
msgid "15:14"
msgstr ""

#: ../../../AMDGPUUsage.rst:2260
msgid "FLOAT_ROUND_MODE_16_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:2260
msgid ""
"Wavefront starts execution with specified rounding denorm mode for half/"
"double (16 and 64 bit) floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:2273
msgid "17:16"
msgstr ""

#: ../../../AMDGPUUsage.rst:2273
msgid "FLOAT_DENORM_MODE_32"
msgstr ""

#: ../../../AMDGPUUsage.rst:2273
msgid ""
"Wavefront starts execution with specified denorm mode for single (32 bit)  "
"floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:2280 ../../../AMDGPUUsage.rst:2293
msgid ""
"Floating point denorm mode values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-denorm-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2286
msgid "19:18"
msgstr ""

#: ../../../AMDGPUUsage.rst:2286
msgid "FLOAT_DENORM_MODE_16_64"
msgstr ""

#: ../../../AMDGPUUsage.rst:2286
msgid ""
"Wavefront starts execution with specified denorm mode for half/double (16 "
"and 64 bit) floating point precision floating point operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:2299
msgid "20"
msgstr ""

#: ../../../AMDGPUUsage.rst:2299
msgid "PRIV"
msgstr ""

#: ../../../AMDGPUUsage.rst:2301
msgid "Start executing wavefront in privilege trap handler mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:2305
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.PRIV``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2308
msgid "21"
msgstr ""

#: ../../../AMDGPUUsage.rst:2308
msgid "ENABLE_DX10_CLAMP"
msgstr ""

#: ../../../AMDGPUUsage.rst:2308
msgid ""
"Wavefront starts execution with DX10 clamp mode enabled. Used by the vector "
"ALU to force DX10 style treatment of NaN's (when set, clamp NaN to zero, "
"otherwise pass NaN through)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2317
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.DX10_CLAMP``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2319
msgid "22"
msgstr ""

#: ../../../AMDGPUUsage.rst:2319
msgid "DEBUG_MODE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2321
msgid "Start executing wavefront in single step mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:2324
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.DEBUG_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2327
msgid "23"
msgstr ""

#: ../../../AMDGPUUsage.rst:2327
msgid "ENABLE_IEEE_MODE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2327
msgid ""
"Wavefront starts execution with IEEE mode enabled. Floating point opcodes "
"that support exception flag gathering will quiet and propagate signaling-NaN "
"inputs per IEEE 754-2008. Min_dx10 and max_dx10 become IEEE 754-2008 "
"compliant due to signaling-NaN propagation and quieting."
msgstr ""

#: ../../../AMDGPUUsage.rst:2340
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.IEEE_MODE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2342 ../../../AMDGPUUsage.rst:2506
msgid "24"
msgstr ""

#: ../../../AMDGPUUsage.rst:2342
msgid "BULKY"
msgstr ""

#: ../../../AMDGPUUsage.rst:2344
msgid "Only one work-group allowed to execute on a compute unit."
msgstr ""

#: ../../../AMDGPUUsage.rst:2348
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.BULKY``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2351 ../../../AMDGPUUsage.rst:2516
msgid "25"
msgstr ""

#: ../../../AMDGPUUsage.rst:2351
msgid "CDBG_USER"
msgstr ""

#: ../../../AMDGPUUsage.rst:2353
msgid "Flag that can be used to control debugging code."
msgstr ""

#: ../../../AMDGPUUsage.rst:2356
msgid "CP is responsible for filling in ``COMPUTE_PGM_RSRC1.CDBG_USER``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2359 ../../../AMDGPUUsage.rst:2519
msgid "26"
msgstr ""

#: ../../../AMDGPUUsage.rst:2359
msgid "FP16_OVFL"
msgstr ""

#: ../../../AMDGPUUsage.rst:2362
msgid "Wavefront starts execution with specified fp16 overflow mode."
msgstr ""

#: ../../../AMDGPUUsage.rst:2366
msgid "If 0, fp16 overflow generates +/-INF values."
msgstr ""

#: ../../../AMDGPUUsage.rst:2368
msgid ""
"If 1, fp16 overflow that is the result of an +/-INF input value or divide by "
"0 produces a +/-INF, otherwise clamps computed overflow to +/-MAX_FP16 as "
"appropriate."
msgstr ""

#: ../../../AMDGPUUsage.rst:2375
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC1.FP16_OVFL``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2377
msgid "31:27"
msgstr ""

#: ../../../AMDGPUUsage.rst:2377 ../../../AMDGPUUsage.rst:2396
msgid "5 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2378
msgid "**Total size 4 bytes**"
msgstr ""

#: ../../../AMDGPUUsage.rst:2383
msgid "compute_pgm_rsrc2 for GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:2389
msgid "ENABLE_SGPR_PRIVATE_SEGMENT _WAVEFRONT_OFFSET"
msgstr ""

#: ../../../AMDGPUUsage.rst:2389
msgid ""
"Enable the setup of the SGPR wavefront scratch offset system register (see :"
"ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2394
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.SCRATCH_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2396
msgid "5:1"
msgstr ""

#: ../../../AMDGPUUsage.rst:2396
msgid "USER_SGPR_COUNT"
msgstr ""

#: ../../../AMDGPUUsage.rst:2396
msgid ""
"The total number of SGPR user data registers requested. This number must "
"match the number of user data registers enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:2402
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.USER_SGPR``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2404
msgid "ENABLE_TRAP_HANDLER"
msgstr ""

#: ../../../AMDGPUUsage.rst:2406
msgid ""
"This bit represents ``COMPUTE_PGM_RSRC2.TRAP_PRESENT``, which is set by the "
"CP if the runtime has installed a trap handler."
msgstr ""

#: ../../../AMDGPUUsage.rst:2411
msgid "ENABLE_SGPR_WORKGROUP_ID_X"
msgstr ""

#: ../../../AMDGPUUsage.rst:2411
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the X "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2417
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_X_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2419
msgid "ENABLE_SGPR_WORKGROUP_ID_Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:2419
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the Y "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2425
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_Y_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2427
msgid "ENABLE_SGPR_WORKGROUP_ID_Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:2427
msgid ""
"Enable the setup of the system SGPR register for the work-group id in the Z "
"dimension (see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2433
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_Z_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2435
msgid "ENABLE_SGPR_WORKGROUP_INFO"
msgstr ""

#: ../../../AMDGPUUsage.rst:2435
msgid ""
"Enable the setup of the system SGPR register for work-group information "
"(see :ref:`amdgpu-amdhsa-initial-kernel-execution-state`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2440
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TGID_SIZE_EN``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2442
msgid "12:11"
msgstr ""

#: ../../../AMDGPUUsage.rst:2442
msgid "ENABLE_VGPR_WORKITEM_ID"
msgstr ""

#: ../../../AMDGPUUsage.rst:2442
msgid ""
"Enable the setup of the VGPR system registers used for the work-item ID. :"
"ref:`amdgpu-amdhsa-system-vgpr-work-item-id-enumeration-values-table` "
"defines the values."
msgstr ""

#: ../../../AMDGPUUsage.rst:2448
msgid "Used by CP to set up ``COMPUTE_PGM_RSRC2.TIDIG_CMP_CNT``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2450
msgid "ENABLE_EXCEPTION_ADDRESS_WATCH"
msgstr ""

#: ../../../AMDGPUUsage.rst:2452
msgid ""
"Wavefront starts execution with address watch exceptions enabled which are "
"generated when L1 has witnessed a thread access an *address of interest*."
msgstr ""

#: ../../../AMDGPUUsage.rst:2460
msgid ""
"CP is responsible for filling in the address watch bit in "
"``COMPUTE_PGM_RSRC2.EXCP_EN_MSB`` according to what the runtime requests."
msgstr ""

#: ../../../AMDGPUUsage.rst:2466
msgid "14"
msgstr ""

#: ../../../AMDGPUUsage.rst:2466
msgid "ENABLE_EXCEPTION_MEMORY"
msgstr ""

#: ../../../AMDGPUUsage.rst:2468
msgid ""
"Wavefront starts execution with memory violation exceptions exceptions "
"enabled which are generated when a memory violation has occurred for this "
"wavefront from L1 or LDS (write-to-read-only-memory, mis-aligned atomic, LDS "
"address out of range, illegal address, etc.)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2480
msgid ""
"CP sets the memory violation bit in ``COMPUTE_PGM_RSRC2.EXCP_EN_MSB`` "
"according to what the runtime requests."
msgstr ""

#: ../../../AMDGPUUsage.rst:2485
msgid "23:15"
msgstr ""

#: ../../../AMDGPUUsage.rst:2485
msgid "9 bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:2485
msgid "GRANULATED_LDS_SIZE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2487
msgid ""
"CP uses the rounded value from the dispatch packet, not this value, as the "
"dispatch may contain dynamically allocated group segment memory. CP writes "
"directly to ``COMPUTE_PGM_RSRC2.LDS_SIZE``."
msgstr ""

#: ../../../AMDGPUUsage.rst:2496
msgid ""
"Amount of group segment (LDS) to allocate for each work-group. Granularity "
"is device specific:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2501
msgid "GFX6:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2502
msgid "roundup(lds-size / (64 * 4))"
msgstr ""

#: ../../../AMDGPUUsage.rst:2504
msgid "GFX7-GFX9:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2504
msgid "roundup(lds-size / (128 * 4))"
msgstr ""

#: ../../../AMDGPUUsage.rst:2506
msgid "ENABLE_EXCEPTION_IEEE_754_FP _INVALID_OPERATION"
msgstr ""

#: ../../../AMDGPUUsage.rst:2506
msgid "Wavefront starts execution with specified exceptions enabled."
msgstr ""

#: ../../../AMDGPUUsage.rst:2510
msgid ""
"Used by CP to set up ``COMPUTE_PGM_RSRC2.EXCP_EN`` (set from bits 0..6)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2514
msgid "IEEE 754 FP Invalid Operation"
msgstr ""

#: ../../../AMDGPUUsage.rst:2516
msgid "ENABLE_EXCEPTION_FP_DENORMAL _SOURCE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2516
msgid "FP Denormal one or more input operands is a denormal number"
msgstr ""

#: ../../../AMDGPUUsage.rst:2519
msgid "ENABLE_EXCEPTION_IEEE_754_FP _DIVISION_BY_ZERO"
msgstr ""

#: ../../../AMDGPUUsage.rst:2519
msgid "IEEE 754 FP Division by Zero"
msgstr ""

#: ../../../AMDGPUUsage.rst:2521
msgid "27"
msgstr ""

#: ../../../AMDGPUUsage.rst:2521
msgid "ENABLE_EXCEPTION_IEEE_754_FP _OVERFLOW"
msgstr ""

#: ../../../AMDGPUUsage.rst:2521
msgid "IEEE 754 FP FP Overflow"
msgstr ""

#: ../../../AMDGPUUsage.rst:2523
msgid "28"
msgstr ""

#: ../../../AMDGPUUsage.rst:2523
msgid "ENABLE_EXCEPTION_IEEE_754_FP _UNDERFLOW"
msgstr ""

#: ../../../AMDGPUUsage.rst:2523
msgid "IEEE 754 FP Underflow"
msgstr ""

#: ../../../AMDGPUUsage.rst:2525
msgid "29"
msgstr ""

#: ../../../AMDGPUUsage.rst:2525
msgid "ENABLE_EXCEPTION_IEEE_754_FP _INEXACT"
msgstr ""

#: ../../../AMDGPUUsage.rst:2525
msgid "IEEE 754 FP Inexact"
msgstr ""

#: ../../../AMDGPUUsage.rst:2527
msgid "30"
msgstr ""

#: ../../../AMDGPUUsage.rst:2527
msgid "ENABLE_EXCEPTION_INT_DIVIDE_BY _ZERO"
msgstr ""

#: ../../../AMDGPUUsage.rst:2527
msgid "Integer Division by Zero (rcp_iflag_f32 instruction only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2530
msgid "31"
msgstr ""

#: ../../../AMDGPUUsage.rst:2531
msgid "**Total size 4 bytes.**"
msgstr ""

#: ../../../AMDGPUUsage.rst:2536
msgid "Floating Point Rounding Mode Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:2540 ../../../AMDGPUUsage.rst:2554
#: ../../../AMDGPUUsage.rst:2569
msgid "Enumeration Name"
msgstr ""

#: ../../../AMDGPUUsage.rst:2542
msgid "FLOAT_ROUND_MODE_NEAR_EVEN"
msgstr ""

#: ../../../AMDGPUUsage.rst:2542
msgid "Round Ties To Even"
msgstr ""

#: ../../../AMDGPUUsage.rst:2543
msgid "FLOAT_ROUND_MODE_PLUS_INFINITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:2543
msgid "Round Toward +infinity"
msgstr ""

#: ../../../AMDGPUUsage.rst:2544
msgid "FLOAT_ROUND_MODE_MINUS_INFINITY"
msgstr ""

#: ../../../AMDGPUUsage.rst:2544
msgid "Round Toward -infinity"
msgstr ""

#: ../../../AMDGPUUsage.rst:2545
msgid "FLOAT_ROUND_MODE_ZERO"
msgstr ""

#: ../../../AMDGPUUsage.rst:2545
msgid "Round Toward 0"
msgstr ""

#: ../../../AMDGPUUsage.rst:2550
msgid "Floating Point Denorm Mode Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:2556
msgid "FLOAT_DENORM_MODE_FLUSH_SRC_DST"
msgstr ""

#: ../../../AMDGPUUsage.rst:2556
msgid "Flush Source and Destination Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:2558
msgid "FLOAT_DENORM_MODE_FLUSH_DST"
msgstr ""

#: ../../../AMDGPUUsage.rst:2558
msgid "Flush Output Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:2559
msgid "FLOAT_DENORM_MODE_FLUSH_SRC"
msgstr ""

#: ../../../AMDGPUUsage.rst:2559
msgid "Flush Source Denorms"
msgstr ""

#: ../../../AMDGPUUsage.rst:2560
msgid "FLOAT_DENORM_MODE_FLUSH_NONE"
msgstr ""

#: ../../../AMDGPUUsage.rst:2560
msgid "No Flush"
msgstr ""

#: ../../../AMDGPUUsage.rst:2565
msgid "System VGPR Work-Item ID Enumeration Values"
msgstr ""

#: ../../../AMDGPUUsage.rst:2571
msgid "SYSTEM_VGPR_WORKITEM_ID_X"
msgstr ""

#: ../../../AMDGPUUsage.rst:2571
msgid "Set work-item X dimension ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:2573
msgid "SYSTEM_VGPR_WORKITEM_ID_X_Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:2573
msgid "Set work-item X and Y dimensions ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:2575
msgid "SYSTEM_VGPR_WORKITEM_ID_X_Y_Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:2575
msgid "Set work-item X, Y and Z dimensions ID."
msgstr ""

#: ../../../AMDGPUUsage.rst:2577
msgid "SYSTEM_VGPR_WORKITEM_ID_UNDEFINED"
msgstr ""

#: ../../../AMDGPUUsage.rst:2577
msgid "Undefined."
msgstr ""

#: ../../../AMDGPUUsage.rst:2583
msgid "Initial Kernel Execution State"
msgstr ""

#: ../../../AMDGPUUsage.rst:2585
msgid ""
"This section defines the register state that will be set up by the packet "
"processor prior to the start of execution of every wavefront. This is "
"limited by the constraints of the hardware controllers of CP/ADC/SPI."
msgstr ""

#: ../../../AMDGPUUsage.rst:2589
msgid ""
"The order of the SGPR registers is defined, but the compiler can specify "
"which ones are actually setup in the kernel descriptor using the "
"``enable_sgpr_*`` bit fields (see :ref:`amdgpu-amdhsa-kernel-descriptor`). "
"The register numbers used for enabled registers are dense starting at SGPR0: "
"the first enabled register is SGPR0, the next enabled register is SGPR1 "
"etc.; disabled registers do not have an SGPR number."
msgstr ""

#: ../../../AMDGPUUsage.rst:2596
msgid ""
"The initial SGPRs comprise up to 16 User SRGPs that are set by CP and apply "
"to all wavefronts of the grid. It is possible to specify more than 16 User "
"SGPRs using the ``enable_sgpr_*`` bit fields, in which case only the first "
"16 are actually initialized. These are then immediately followed by the "
"System SGPRs that are set up by ADC/SPI and can have different values for "
"each wavefront of the grid dispatch."
msgstr ""

#: ../../../AMDGPUUsage.rst:2603
msgid ""
"SGPR register initial state is defined in :ref:`amdgpu-amdhsa-sgpr-register-"
"set-up-order-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2606
msgid "SGPR Register Set Up Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:2610
msgid "SGPR Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:2610 ../../../AMDGPUUsage.rst:2813
msgid "Name (kernel descriptor enable field)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2610
msgid "Number of SGPRs"
msgstr ""

#: ../../../AMDGPUUsage.rst:2614 ../../../AMDGPUUsage.rst:2817
msgid "First"
msgstr ""

#: ../../../AMDGPUUsage.rst:2614
msgid "Private Segment Buffer (enable_sgpr_private _segment_buffer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2614
msgid ""
"V# that can be used, together with Scratch Wavefront Offset as an offset, to "
"access the private memory space using a segment address."
msgstr ""

#: ../../../AMDGPUUsage.rst:2620
msgid "CP uses the value provided by the runtime."
msgstr ""

#: ../../../AMDGPUUsage.rst:2622 ../../../AMDGPUUsage.rst:2625
#: ../../../AMDGPUUsage.rst:2629 ../../../AMDGPUUsage.rst:2638
#: ../../../AMDGPUUsage.rst:2641 ../../../AMDGPUUsage.rst:2722
#: ../../../AMDGPUUsage.rst:2744 ../../../AMDGPUUsage.rst:2752
#: ../../../AMDGPUUsage.rst:2763 ../../../AMDGPUUsage.rst:2774
#: ../../../AMDGPUUsage.rst:2777 ../../../AMDGPUUsage.rst:2780
#: ../../../AMDGPUUsage.rst:2783 ../../../AMDGPUUsage.rst:2786
#: ../../../AMDGPUUsage.rst:2820 ../../../AMDGPUUsage.rst:2823
msgid "then"
msgstr ""

#: ../../../AMDGPUUsage.rst:2622
msgid "Dispatch Ptr (enable_sgpr_dispatch_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2622
msgid ""
"64 bit address of AQL dispatch packet for kernel dispatch actually executing."
msgstr ""

#: ../../../AMDGPUUsage.rst:2625
msgid "Queue Ptr (enable_sgpr_queue_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2625
msgid ""
"64 bit address of amd_queue_t object for AQL queue on which the dispatch "
"packet was queued."
msgstr ""

#: ../../../AMDGPUUsage.rst:2629
msgid "Kernarg Segment Ptr (enable_sgpr_kernarg _segment_ptr)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2629
msgid ""
"64 bit address of Kernarg segment. This is directly copied from the "
"kernarg_address in the kernel dispatch packet."
msgstr ""

#: ../../../AMDGPUUsage.rst:2635 ../../../AMDGPUUsage.rst:2733
msgid ""
"Having CP load it once avoids loading it at the beginning of every wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2638
msgid "Dispatch Id (enable_sgpr_dispatch_id)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2638
msgid "64 bit Dispatch ID of the dispatch packet being executed."
msgstr ""

#: ../../../AMDGPUUsage.rst:2641
msgid "Flat Scratch Init (enable_sgpr_flat_scratch _init)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2641
msgid "This is 2 SGPRs:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2643 ../../../AMDGPUUsage.rst:2887
msgid "GFX6"
msgstr ""

#: ../../../AMDGPUUsage.rst:2644
msgid "Not supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:2701 ../../../AMDGPUUsage.rst:2903
msgid "GFX7-GFX8"
msgstr ""

#: ../../../AMDGPUUsage.rst:2646
msgid ""
"The first SGPR is a 32 bit byte offset from ``SH_HIDDEN_PRIVATE_BASE_VIMID`` "
"to per SPI base of memory for scratch for the queue executing the kernel "
"dispatch. CP obtains this from the runtime. (The Scratch Segment Buffer base "
"address is ``SH_HIDDEN_PRIVATE_BASE_VIMID`` plus this offset.) The value of "
"Scratch Wavefront Offset must be added to this offset by the kernel machine "
"code, right shifted by 8, and moved to the FLAT_SCRATCH_HI SGPR register. "
"FLAT_SCRATCH_HI corresponds to SGPRn-4 on GFX7, and SGPRn-6 on GFX8 (where "
"SGPRn is the highest numbered SGPR allocated to the wavefront). "
"FLAT_SCRATCH_HI is multiplied by 256 (as it is in units of 256 bytes) and "
"added to ``SH_HIDDEN_PRIVATE_BASE_VIMID`` to calculate the per wavefront "
"FLAT SCRATCH BASE in flat memory instructions that access the scratch "
"apperture."
msgstr ""

#: ../../../AMDGPUUsage.rst:2680
msgid ""
"The second SGPR is 32 bit byte size of a single work-item's scratch memory "
"usage. CP obtains this from the runtime, and it is always a multiple of "
"DWORD. CP checks that the value in the kernel dispatch packet Private "
"Segment Byte Size is not larger, and requests the runtime to increase the "
"queue's scratch size if necessary. The kernel code must move it to "
"FLAT_SCRATCH_LO which is SGPRn-3 on GFX7 and SGPRn-5 on GFX8. "
"FLAT_SCRATCH_LO is used as the FLAT SCRATCH SIZE in flat memory "
"instructions. Having CP load it once avoids loading it at the beginning of "
"every wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2704
msgid ""
"This is the 64 bit base address of the per SPI scratch backing memory "
"managed by SPI for the queue executing the kernel dispatch. CP obtains this "
"from the runtime (and divides it if there are multiple Shader Arrays each "
"with its own SPI). The value of Scratch Wavefront Offset must be added by "
"the kernel machine code and the result moved to the FLAT_SCRATCH SGPR which "
"is SGPRn-6 and SGPRn-5. It is used as the FLAT SCRATCH BASE in flat memory "
"instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:2722
msgid "Private Segment Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:2722
msgid ""
"The 32 bit byte size of a (enable_sgpr_private single work-item's "
"scratch_segment_size) memory allocation. This is the value from the kernel "
"dispatch packet Private Segment Byte Size rounded up by CP to a multiple of "
"DWORD."
msgstr ""

#: ../../../AMDGPUUsage.rst:2737
msgid ""
"This is not used for GFX7-GFX8 since it is the same value as the second SGPR "
"of Flat Scratch Init. However, it may be needed for GFX9 which changes the "
"meaning of the Flat Scratch Init value."
msgstr ""

#: ../../../AMDGPUUsage.rst:2744
msgid "Grid Work-Group Count X (enable_sgpr_grid _workgroup_count_X)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2744
msgid ""
"32 bit count of the number of work-groups in the X dimension for the grid "
"being executed. Computed from the fields in the kernel dispatch packet as "
"((grid_size.x + workgroup_size.x - 1) / workgroup_size.x)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2752
msgid ""
"Grid Work-Group Count Y (enable_sgpr_grid _workgroup_count_Y && less than 16 "
"previous SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2752
msgid ""
"32 bit count of the number of work-groups in the Y dimension for the grid "
"being executed. Computed from the fields in the kernel dispatch packet as "
"((grid_size.y + workgroup_size.y - 1) / workgroupSize.y)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2761 ../../../AMDGPUUsage.rst:2772
msgid "Only initialized if <16 previous SGPRs initialized."
msgstr ""

#: ../../../AMDGPUUsage.rst:2763
msgid ""
"Grid Work-Group Count Z (enable_sgpr_grid _workgroup_count_Z && less than 16 "
"previous SGPRs)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2763
msgid ""
"32 bit count of the number of work-groups in the Z dimension for the grid "
"being executed. Computed from the fields in the kernel dispatch packet as "
"((grid_size.z + workgroup_size.z - 1) / workgroupSize.z)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2774
msgid "Work-Group Id X (enable_sgpr_workgroup_id _X)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2774
msgid "32 bit work-group id in X dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2777
msgid "Work-Group Id Y (enable_sgpr_workgroup_id _Y)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2777
msgid "32 bit work-group id in Y dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2780
msgid "Work-Group Id Z (enable_sgpr_workgroup_id _Z)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2780
msgid "32 bit work-group id in Z dimension of grid for wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2783
msgid "Work-Group Info (enable_sgpr_workgroup _info)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2783
msgid ""
"{first_wavefront, 14'b0000, ordered_append_term[10:0], "
"threadgroup_size_in_wavefronts[5:0]}"
msgstr ""

#: ../../../AMDGPUUsage.rst:2786
msgid ""
"Scratch Wavefront Offset (enable_sgpr_private _segment_wavefront_offset)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2786
msgid ""
"32 bit byte offset from base of scratch base of queue executing the kernel "
"dispatch. Must be used as an offset with Private segment address when using "
"Scratch Segment Buffer. It must be used to set up FLAT SCRATCH for flat "
"addressing (see :ref:`amdgpu-amdhsa-flat-scratch`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2799
msgid ""
"The order of the VGPR registers is defined, but the compiler can specify "
"which ones are actually setup in the kernel descriptor using the "
"``enable_vgpr*`` bit fields (see :ref:`amdgpu-amdhsa-kernel-descriptor`). "
"The register numbers used for enabled registers are dense starting at VGPR0: "
"the first enabled register is VGPR0, the next enabled register is VGPR1 "
"etc.; disabled registers do not have a VGPR number."
msgstr ""

#: ../../../AMDGPUUsage.rst:2806
msgid ""
"VGPR register initial state is defined in :ref:`amdgpu-amdhsa-vgpr-register-"
"set-up-order-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2809
msgid "VGPR Register Set Up Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:2813
msgid "VGPR Order"
msgstr ""

#: ../../../AMDGPUUsage.rst:2813
msgid "Number of VGPRs"
msgstr ""

#: ../../../AMDGPUUsage.rst:2817
msgid "Work-Item Id X (Always initialized)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2817
msgid "32 bit work item id in X dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:2820
msgid "Work-Item Id Y (enable_vgpr_workitem_id > 0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2820
msgid "32 bit work item id in Y dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:2823
msgid "Work-Item Id Z (enable_vgpr_workitem_id > 1)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2823
msgid "32 bit work item id in Z dimension of work-group for wavefront lane."
msgstr ""

#: ../../../AMDGPUUsage.rst:2828
msgid "The setting of registers is done by GPU CP/ADC/SPI hardware as follows:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2830
msgid ""
"SGPRs before the Work-Group Ids are set by CP using the 16 User Data "
"registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:2832
msgid ""
"Work-group Id registers X, Y, Z are set by ADC which supports any "
"combination including none."
msgstr ""

#: ../../../AMDGPUUsage.rst:2834
msgid ""
"Scratch Wavefront Offset is set by SPI in a per wavefront basis which is why "
"its value cannot included with the flat scratch init value which is per "
"queue."
msgstr ""

#: ../../../AMDGPUUsage.rst:2836
msgid ""
"The VGPRs are set by SPI which only supports specifying either (X), (X, Y) "
"or (X, Y, Z)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2839
msgid ""
"Flat Scratch register pair are adjacent SGRRs so they can be moved as a 64 "
"bit value to the hardware required SGPRn-3 and SGPRn-4 respectively."
msgstr ""

#: ../../../AMDGPUUsage.rst:2842
msgid ""
"The global segment can be accessed either using buffer instructions (GFX6 "
"which has V# 64 bit address support), flat instructions (GFX7-GFX9), or "
"global instructions (GFX9)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2846
msgid ""
"If buffer operations are used then the compiler can generate a V# with the "
"following properties:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2849
msgid "base address of 0"
msgstr ""

#: ../../../AMDGPUUsage.rst:2850
msgid "no swizzle"
msgstr ""

#: ../../../AMDGPUUsage.rst:2851
msgid "ATC: 1 if IOMMU present (such as APU)"
msgstr ""

#: ../../../AMDGPUUsage.rst:2852
msgid "ptr64: 1"
msgstr ""

#: ../../../AMDGPUUsage.rst:2853
msgid ""
"MTYPE set to support memory coherence that matches the runtime (such as CC "
"for APU and NC for dGPU)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2859
msgid "Kernel Prolog"
msgstr ""

#: ../../../AMDGPUUsage.rst:2864
msgid "M0"
msgstr ""

#: ../../../AMDGPUUsage.rst:2867
msgid ""
"The M0 register must be initialized with a value at least the total LDS size "
"if the kernel may access LDS via DS or flat operations. Total LDS size is "
"available in dispatch packet. For M0, it is also possible to use maximum "
"possible value of LDS for given target (0x7FFF for GFX6 and 0xFFFF for GFX7-"
"GFX8)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2873
msgid ""
"The M0 register is not used for range checking LDS accesses and so does not "
"need to be initialized in the prolog."
msgstr ""

#: ../../../AMDGPUUsage.rst:2879
msgid "Flat Scratch"
msgstr ""

#: ../../../AMDGPUUsage.rst:2881
msgid ""
"If the kernel may use flat operations to access scratch memory, the prolog "
"code must set up FLAT_SCRATCH register pair (FLAT_SCRATCH_LO/FLAT_SCRATCH_HI "
"which are in SGPRn-4/SGPRn-3). Initialization uses Flat Scratch Init and "
"Scratch Wavefront Offset SGPR registers (see :ref:`amdgpu-amdhsa-initial-"
"kernel-execution-state`):"
msgstr ""

#: ../../../AMDGPUUsage.rst:2887
msgid "Flat scratch is not supported."
msgstr ""

#: ../../../AMDGPUUsage.rst:2890
msgid ""
"The low word of Flat Scratch Init is 32 bit byte offset from "
"``SH_HIDDEN_PRIVATE_BASE_VIMID`` to the base of scratch backing memory being "
"managed by SPI for the queue executing the kernel dispatch. This is the same "
"value used in the Scratch Segment Buffer V# base address. The prolog must "
"add the value of Scratch Wavefront Offset to get the wavefront's byte "
"scratch backing memory offset from ``SH_HIDDEN_PRIVATE_BASE_VIMID``. Since "
"FLAT_SCRATCH_LO is in units of 256 bytes, the offset must be right shifted "
"by 8 before moving into FLAT_SCRATCH_LO."
msgstr ""

#: ../../../AMDGPUUsage.rst:2898
msgid ""
"The second word of Flat Scratch Init is 32 bit byte size of a single work-"
"items scratch memory usage. This is directly loaded from the kernel dispatch "
"packet Private Segment Byte Size and rounded up to a multiple of DWORD. "
"Having CP load it once avoids loading it at the beginning of every "
"wavefront. The prolog must move it to FLAT_SCRATCH_LO for use as FLAT "
"SCRATCH SIZE."
msgstr ""

#: ../../../AMDGPUUsage.rst:2906
msgid ""
"The Flat Scratch Init is the 64 bit address of the base of scratch backing "
"memory being managed by SPI for the queue executing the kernel dispatch. The "
"prolog must add the value of Scratch Wavefront Offset and moved to the "
"FLAT_SCRATCH pair for use as the flat scratch base in flat memory "
"instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:2914
msgid "Memory Model"
msgstr ""

#: ../../../AMDGPUUsage.rst:2916
msgid ""
"This section describes the mapping of LLVM memory model onto AMDGPU machine "
"code (see :ref:`memmodel`). *The implementation is WIP.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:2922
msgid ""
"The AMDGPU backend supports the memory synchronization scopes specified in :"
"ref:`amdgpu-memory-scopes`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2925
msgid ""
"The code sequences used to implement the memory model are defined in table :"
"ref:`amdgpu-amdhsa-memory-model-code-sequences-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2928
msgid ""
"The sequences specify the order of instructions that a single thread must "
"execute. The ``s_waitcnt`` and ``buffer_wbinvl1_vol`` are defined with "
"respect to other memory instructions executed by the same thread. This "
"allows them to be moved earlier or later which can allow them to be combined "
"with other instances of the same instruction, or hoisted/sunk out of loops "
"to improve performance. Only the instructions related to the memory model "
"are given; additional ``s_waitcnt`` instructions are required to ensure "
"registers are defined before being used. These may be able to be combined "
"with the memory model ``s_waitcnt`` instructions as described above."
msgstr ""

#: ../../../AMDGPUUsage.rst:2938
msgid "The AMDGPU backend supports the following memory models:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2941
msgid "HSA Memory Model [HSA]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:2941
msgid ""
"The HSA memory model uses a single happens-before relation for all address "
"spaces (see :ref:`amdgpu-address-spaces`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2954
msgid "OpenCL Memory Model [OpenCL]_"
msgstr ""

#: ../../../AMDGPUUsage.rst:2944
msgid ""
"The OpenCL memory model which has separate happens-before relations for the "
"global and local address spaces. Only a fence specifying both global and "
"local address space, and seq_cst instructions join the relationships. Since "
"the LLVM ``memfence`` instruction does not allow an address space to be "
"specified the OpenCL fence has to convervatively assume both local and "
"global address space was specified. However, optimizations can often be done "
"to eliminate the additional ``s_waitcnt`` instructions when there are no "
"intervening memory instructions which access the corresponding address "
"space. The code sequences in the table indicate what can be omitted for the "
"OpenCL memory. The target triple environment is used to determine if the "
"source language is OpenCL (see :ref:`amdgpu-opencl`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2956
msgid ""
"``ds/flat_load/store/atomic`` instructions to local memory are termed LDS "
"operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:2959
msgid ""
"``buffer/global/flat_load/store/atomic`` instructions to global memory are "
"termed vector memory operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:2962
msgid "For GFX6-GFX9:"
msgstr ""

#: ../../../AMDGPUUsage.rst:2964
msgid "Each agent has multiple compute units (CU)."
msgstr ""

#: ../../../AMDGPUUsage.rst:2965
msgid "Each CU has multiple SIMDs that execute wavefronts."
msgstr ""

#: ../../../AMDGPUUsage.rst:2966
msgid ""
"The wavefronts for a single work-group are executed in the same CU but may "
"be executed by different SIMDs."
msgstr ""

#: ../../../AMDGPUUsage.rst:2968
msgid ""
"Each CU has a single LDS memory shared by the wavefronts of the work-groups "
"executing on it."
msgstr ""

#: ../../../AMDGPUUsage.rst:2970
msgid ""
"All LDS operations of a CU are performed as wavefront wide operations in a "
"global order and involve no caching. Completion is reported to a wavefront "
"in execution order."
msgstr ""

#: ../../../AMDGPUUsage.rst:2973
msgid ""
"The LDS memory has multiple request queues shared by the SIMDs of a CU. "
"Therefore, the LDS operations performed by different wavefronts of a work-"
"group can be reordered relative to each other, which can result in "
"reordering the visibility of vector memory operations with respect to LDS "
"operations of other wavefronts in the same work-group. A ``s_waitcnt "
"lgkmcnt(0)`` is required to ensure synchronization between LDS operations "
"and vector memory operations between wavefronts of a work-group, but not "
"between operations performed by the same wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:2981
msgid ""
"The vector memory operations are performed as wavefront wide operations and "
"completion is reported to a wavefront in execution order. The exception is "
"that for GFX7-GFX9 ``flat_load/store/atomic`` instructions can report out of "
"vector memory order if they access LDS memory, and out of LDS operation "
"order if they access global memory."
msgstr ""

#: ../../../AMDGPUUsage.rst:2986
msgid ""
"The vector memory operations access a single vector L1 cache shared by all "
"SIMDs a CU. Therefore, no special action is required for coherence between "
"the lanes of a single wavefront, or for coherence between wavefronts in the "
"same work-group. A ``buffer_wbinvl1_vol`` is required for coherence between "
"wavefronts executing in different work-groups as they may be executing on "
"different CUs."
msgstr ""

#: ../../../AMDGPUUsage.rst:2991
msgid ""
"The scalar memory operations access a scalar L1 cache shared by all "
"wavefronts on a group of CUs. The scalar and vector L1 caches are not "
"coherent. However, scalar operations are used in a restricted way so do not "
"impact the memory model. See :ref:`amdgpu-amdhsa-memory-spaces`."
msgstr ""

#: ../../../AMDGPUUsage.rst:2995
msgid ""
"The vector and scalar memory operations use an L2 cache shared by all CUs on "
"the same agent."
msgstr ""

#: ../../../AMDGPUUsage.rst:2997
msgid ""
"The L2 cache has independent channels to service disjoint ranges of virtual "
"addresses."
msgstr ""

#: ../../../AMDGPUUsage.rst:2999
msgid ""
"Each CU has a separate request queue per channel. Therefore, the vector and "
"scalar memory operations performed by wavefronts executing in different work-"
"groups (which may be executing on different CUs) of an agent can be "
"reordered relative to each other. A ``s_waitcnt vmcnt(0)`` is required to "
"ensure synchronization between vector memory operations of different CUs. It "
"ensures a previous vector memory operation has completed before executing a "
"subsequent vector memory or LDS operation and so can be used to meet the "
"requirements of acquire and release."
msgstr ""

#: ../../../AMDGPUUsage.rst:3007
msgid ""
"The L2 cache can be kept coherent with other agents on some targets, or "
"ranges of virtual addresses can be set up to bypass it to ensure system "
"coherence."
msgstr ""

#: ../../../AMDGPUUsage.rst:3010
msgid ""
"Private address space uses ``buffer_load/store`` using the scratch V# (GFX6-"
"GFX8), or ``scratch_load/store`` (GFX9). Since only a single thread is "
"accessing the memory, atomic memory orderings are not meaningful and all "
"accesses are treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3015
msgid ""
"Constant address space uses ``buffer/global_load`` instructions (or "
"equivalent scalar memory instructions). Since the constant address space "
"contents do not change during the execution of a kernel dispatch it is not "
"legal to perform stores, and atomic memory orderings are not meaningful and "
"all access are treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3021
msgid ""
"A memory synchronization scope wider than work-group is not meaningful for "
"the group (LDS) address space and is treated as work-group."
msgstr ""

#: ../../../AMDGPUUsage.rst:3024
msgid ""
"The memory model does not support the region address space which is treated "
"as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3027
msgid ""
"Acquire memory ordering is not meaningful on store atomic instructions and "
"is treated as non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3030
msgid ""
"Release memory ordering is not meaningful on load atomic instructions and is "
"treated a non-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3033
msgid ""
"Acquire-release memory ordering is not meaningful on load or store atomic "
"instructions and is treated as acquire and release respectively."
msgstr ""

#: ../../../AMDGPUUsage.rst:3036
msgid ""
"AMDGPU backend only uses scalar memory operations to access memory that is "
"proven to not change during the execution of the kernel dispatch. This "
"includes constant address space and global address space for program scope "
"const variables. Therefore the kernel machine code does not have to maintain "
"the scalar L1 cache to ensure it is coherent with the vector L1 cache. The "
"scalar and vector L1 caches are invalidated between kernel dispatches by CP "
"since constant address space data may change between kernel dispatch "
"executions. See :ref:`amdgpu-amdhsa-memory-spaces`."
msgstr ""

#: ../../../AMDGPUUsage.rst:3045
msgid ""
"The one execption is if scalar writes are used to spill SGPR registers. In "
"this case the AMDGPU backend ensures the memory location used to spill is "
"never accessed by vector memory operations at the same time. If scalar "
"writes are used then a ``s_dcache_wb`` is inserted before the ``s_endpgm`` "
"and before a function return since the locations may be used for vector "
"memory instructions by a future wavefront that uses the same scratch area, "
"or a function call that creates a frame at the same address, respectively. "
"There is no need for a ``s_dcache_inv`` as all scalar writes are write-"
"before-read in the same thread."
msgstr ""

#: ../../../AMDGPUUsage.rst:3054
msgid ""
"Scratch backing memory (which is used for the private address space) is "
"accessed with MTYPE NC_NV (non-coherenent non-volatile). Since the private "
"address space is only accessed by a single thread, and is always write-"
"before-read, there is never a need to invalidate these entries from the L1 "
"cache. Hence all cache invalidates are done as ``*_vol`` to only invalidate "
"the volatile cache lines."
msgstr ""

#: ../../../AMDGPUUsage.rst:3061
msgid ""
"On dGPU the kernarg backing memory is accessed as UC (uncached) to avoid "
"needing to invalidate the L2 cache. This also causes it to be treated as non-"
"volatile and so is not invalidated by ``*_vol``. On APU it is accessed as CC "
"(cache coherent) and so the L2 cache will coherent with the CPU and other "
"agents."
msgstr ""

#: ../../../AMDGPUUsage.rst:3067
msgid "AMDHSA Memory Model Code Sequences GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:3071
msgid "LLVM Instr"
msgstr ""

#: ../../../AMDGPUUsage.rst:3071
msgid "LLVM Memory Ordering"
msgstr ""

#: ../../../AMDGPUUsage.rst:3071
msgid "LLVM Memory Sync Scope"
msgstr ""

#: ../../../AMDGPUUsage.rst:3071
msgid "AMDGPU Address Space"
msgstr ""

#: ../../../AMDGPUUsage.rst:3071
msgid "AMDGPU Machine Code"
msgstr ""

#: ../../../AMDGPUUsage.rst:3075
msgid "**Non-Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3077 ../../../AMDGPUUsage.rst:3091
msgid "load"
msgstr ""

#: ../../../AMDGPUUsage.rst:3078 ../../../AMDGPUUsage.rst:3093
#: ../../../AMDGPUUsage.rst:3111 ../../../AMDGPUUsage.rst:3117
#: ../../../AMDGPUUsage.rst:3119 ../../../AMDGPUUsage.rst:3127
#: ../../../AMDGPUUsage.rst:3138 ../../../AMDGPUUsage.rst:3156
#: ../../../AMDGPUUsage.rst:3196 ../../../AMDGPUUsage.rst:3224
#: ../../../AMDGPUUsage.rst:3243 ../../../AMDGPUUsage.rst:3284
#: ../../../AMDGPUUsage.rst:3437 ../../../AMDGPUUsage.rst:3460
#: ../../../AMDGPUUsage.rst:3482 ../../../AMDGPUUsage.rst:3523
#: ../../../AMDGPUUsage.rst:3546 ../../../AMDGPUUsage.rst:3568
#: ../../../AMDGPUUsage.rst:3724 ../../../AMDGPUUsage.rst:3763
#: ../../../AMDGPUUsage.rst:3863 ../../../AMDGPUUsage.rst:4098
#: ../../../AMDGPUUsage.rst:4102 ../../../AMDGPUUsage.rst:4163
#: ../../../AMDGPUUsage.rst:4246 ../../../AMDGPUUsage.rst:4250
#: ../../../AMDGPUUsage.rst:4256 ../../../AMDGPUUsage.rst:4260
msgid "generic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3077
msgid "!volatile & !nontemporal"
msgstr ""

#: ../../../AMDGPUUsage.rst:3079 ../../../AMDGPUUsage.rst:3110
#: ../../../AMDGPUUsage.rst:3139
msgid "buffer/global/flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:3081
msgid "volatile & !nontemporal"
msgstr ""

#: ../../../AMDGPUUsage.rst:3083 ../../../AMDGPUUsage.rst:3116
#: ../../../AMDGPUUsage.rst:3172
msgid "buffer/global/flat_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3086 ../../../AMDGPUUsage.rst:3096
msgid "nontemporal"
msgstr ""

#: ../../../AMDGPUUsage.rst:3088
msgid "buffer/global/flat_load glc=1 slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3091 ../../../AMDGPUUsage.rst:3101
#: ../../../AMDGPUUsage.rst:3113 ../../../AMDGPUUsage.rst:3123
#: ../../../AMDGPUUsage.rst:3131 ../../../AMDGPUUsage.rst:3137
#: ../../../AMDGPUUsage.rst:3140 ../../../AMDGPUUsage.rst:3223
#: ../../../AMDGPUUsage.rst:3226 ../../../AMDGPUUsage.rst:3436
#: ../../../AMDGPUUsage.rst:3459 ../../../AMDGPUUsage.rst:3522
#: ../../../AMDGPUUsage.rst:3545 ../../../AMDGPUUsage.rst:3723
#: ../../../AMDGPUUsage.rst:3746 ../../../AMDGPUUsage.rst:4097
#: ../../../AMDGPUUsage.rst:4157 ../../../AMDGPUUsage.rst:4245
#: ../../../AMDGPUUsage.rst:4255
msgid "local"
msgstr ""

#: ../../../AMDGPUUsage.rst:3091 ../../../AMDGPUUsage.rst:3113
#: ../../../AMDGPUUsage.rst:3140
msgid "ds_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:3092 ../../../AMDGPUUsage.rst:3101
msgid "store"
msgstr ""

#: ../../../AMDGPUUsage.rst:3092
msgid "!nontemporal"
msgstr ""

#: ../../../AMDGPUUsage.rst:3094 ../../../AMDGPUUsage.rst:3118
#: ../../../AMDGPUUsage.rst:3458
msgid "buffer/global/flat_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:3098
msgid "buffer/global/flat_stote glc=1 slc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3101 ../../../AMDGPUUsage.rst:3123
#: ../../../AMDGPUUsage.rst:3459
msgid "ds_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:3102
msgid "**Unordered Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3104 ../../../AMDGPUUsage.rst:3110
#: ../../../AMDGPUUsage.rst:3113 ../../../AMDGPUUsage.rst:3116
#: ../../../AMDGPUUsage.rst:3136 ../../../AMDGPUUsage.rst:3139
#: ../../../AMDGPUUsage.rst:3140 ../../../AMDGPUUsage.rst:3156
#: ../../../AMDGPUUsage.rst:3172 ../../../AMDGPUUsage.rst:3196
#: ../../../AMDGPUUsage.rst:4096 ../../../AMDGPUUsage.rst:4101
#: ../../../AMDGPUUsage.rst:4157 ../../../AMDGPUUsage.rst:4162
msgid "load atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3104 ../../../AMDGPUUsage.rst:3105
#: ../../../AMDGPUUsage.rst:3106 ../../../AMDGPUUsage.rst:4282
msgid "unordered"
msgstr ""

#: ../../../AMDGPUUsage.rst:3104 ../../../AMDGPUUsage.rst:3105
#: ../../../AMDGPUUsage.rst:3106
msgid "*any*"
msgstr ""

#: ../../../AMDGPUUsage.rst:3104 ../../../AMDGPUUsage.rst:3105
msgid "*Same as non-atomic*."
msgstr ""

#: ../../../AMDGPUUsage.rst:3105 ../../../AMDGPUUsage.rst:3118
#: ../../../AMDGPUUsage.rst:3123 ../../../AMDGPUUsage.rst:3435
#: ../../../AMDGPUUsage.rst:3438 ../../../AMDGPUUsage.rst:3459
#: ../../../AMDGPUUsage.rst:3460 ../../../AMDGPUUsage.rst:3481
#: ../../../AMDGPUUsage.rst:4244 ../../../AMDGPUUsage.rst:4249
msgid "store atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3106 ../../../AMDGPUUsage.rst:3126
#: ../../../AMDGPUUsage.rst:3131 ../../../AMDGPUUsage.rst:3222
#: ../../../AMDGPUUsage.rst:3225 ../../../AMDGPUUsage.rst:3226
#: ../../../AMDGPUUsage.rst:3243 ../../../AMDGPUUsage.rst:3260
#: ../../../AMDGPUUsage.rst:3284 ../../../AMDGPUUsage.rst:3521
#: ../../../AMDGPUUsage.rst:3524 ../../../AMDGPUUsage.rst:3545
#: ../../../AMDGPUUsage.rst:3546 ../../../AMDGPUUsage.rst:3567
#: ../../../AMDGPUUsage.rst:3722 ../../../AMDGPUUsage.rst:3725
#: ../../../AMDGPUUsage.rst:3746 ../../../AMDGPUUsage.rst:3763
#: ../../../AMDGPUUsage.rst:3800 ../../../AMDGPUUsage.rst:3863
#: ../../../AMDGPUUsage.rst:4254 ../../../AMDGPUUsage.rst:4259
msgid "atomicrmw"
msgstr ""

#: ../../../AMDGPUUsage.rst:3106
msgid "*Same as monotonic atomic*."
msgstr ""

#: ../../../AMDGPUUsage.rst:3108
msgid "**Monotonic Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3110 ../../../AMDGPUUsage.rst:3113
#: ../../../AMDGPUUsage.rst:3116 ../../../AMDGPUUsage.rst:3118
#: ../../../AMDGPUUsage.rst:3123 ../../../AMDGPUUsage.rst:3126
#: ../../../AMDGPUUsage.rst:3131 ../../../AMDGPUUsage.rst:4283
msgid "monotonic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3110 ../../../AMDGPUUsage.rst:3113
#: ../../../AMDGPUUsage.rst:3118 ../../../AMDGPUUsage.rst:3123
#: ../../../AMDGPUUsage.rst:3126 ../../../AMDGPUUsage.rst:3131
#: ../../../AMDGPUUsage.rst:3136 ../../../AMDGPUUsage.rst:3222
#: ../../../AMDGPUUsage.rst:3311 ../../../AMDGPUUsage.rst:3435
#: ../../../AMDGPUUsage.rst:3521 ../../../AMDGPUUsage.rst:3607
#: ../../../AMDGPUUsage.rst:3722 ../../../AMDGPUUsage.rst:3929
#: ../../../AMDGPUUsage.rst:4096 ../../../AMDGPUUsage.rst:4244
#: ../../../AMDGPUUsage.rst:4254 ../../../AMDGPUUsage.rst:4264
msgid "singlethread"
msgstr ""

#: ../../../AMDGPUUsage.rst:3111 ../../../AMDGPUUsage.rst:3114
#: ../../../AMDGPUUsage.rst:3119 ../../../AMDGPUUsage.rst:3124
#: ../../../AMDGPUUsage.rst:3127 ../../../AMDGPUUsage.rst:3132
#: ../../../AMDGPUUsage.rst:3137 ../../../AMDGPUUsage.rst:3223
#: ../../../AMDGPUUsage.rst:3312 ../../../AMDGPUUsage.rst:3436
#: ../../../AMDGPUUsage.rst:3522 ../../../AMDGPUUsage.rst:3608
#: ../../../AMDGPUUsage.rst:3723 ../../../AMDGPUUsage.rst:3930
#: ../../../AMDGPUUsage.rst:4097 ../../../AMDGPUUsage.rst:4245
#: ../../../AMDGPUUsage.rst:4255 ../../../AMDGPUUsage.rst:4265
msgid "wavefront"
msgstr ""

#: ../../../AMDGPUUsage.rst:3112 ../../../AMDGPUUsage.rst:3115
#: ../../../AMDGPUUsage.rst:3120 ../../../AMDGPUUsage.rst:3125
#: ../../../AMDGPUUsage.rst:3128 ../../../AMDGPUUsage.rst:3133
#: ../../../AMDGPUUsage.rst:3139 ../../../AMDGPUUsage.rst:3140
#: ../../../AMDGPUUsage.rst:3156 ../../../AMDGPUUsage.rst:3225
#: ../../../AMDGPUUsage.rst:3226 ../../../AMDGPUUsage.rst:3243
#: ../../../AMDGPUUsage.rst:3313 ../../../AMDGPUUsage.rst:3438
#: ../../../AMDGPUUsage.rst:3459 ../../../AMDGPUUsage.rst:3460
#: ../../../AMDGPUUsage.rst:3524 ../../../AMDGPUUsage.rst:3545
#: ../../../AMDGPUUsage.rst:3546 ../../../AMDGPUUsage.rst:3609
#: ../../../AMDGPUUsage.rst:3725 ../../../AMDGPUUsage.rst:3746
#: ../../../AMDGPUUsage.rst:3763 ../../../AMDGPUUsage.rst:3931
#: ../../../AMDGPUUsage.rst:4101 ../../../AMDGPUUsage.rst:4157
#: ../../../AMDGPUUsage.rst:4246 ../../../AMDGPUUsage.rst:4256
#: ../../../AMDGPUUsage.rst:4266
msgid "workgroup"
msgstr ""

#: ../../../AMDGPUUsage.rst:3116 ../../../AMDGPUUsage.rst:3121
#: ../../../AMDGPUUsage.rst:3129 ../../../AMDGPUUsage.rst:3172
#: ../../../AMDGPUUsage.rst:3196 ../../../AMDGPUUsage.rst:3260
#: ../../../AMDGPUUsage.rst:3284 ../../../AMDGPUUsage.rst:3357
#: ../../../AMDGPUUsage.rst:3481 ../../../AMDGPUUsage.rst:3567
#: ../../../AMDGPUUsage.rst:3653 ../../../AMDGPUUsage.rst:3800
#: ../../../AMDGPUUsage.rst:3863 ../../../AMDGPUUsage.rst:4000
#: ../../../AMDGPUUsage.rst:4162 ../../../AMDGPUUsage.rst:4249
#: ../../../AMDGPUUsage.rst:4259 ../../../AMDGPUUsage.rst:4267
msgid "agent"
msgstr ""

#: ../../../AMDGPUUsage.rst:3117 ../../../AMDGPUUsage.rst:3122
#: ../../../AMDGPUUsage.rst:3130 ../../../AMDGPUUsage.rst:3173
#: ../../../AMDGPUUsage.rst:3197 ../../../AMDGPUUsage.rst:3261
#: ../../../AMDGPUUsage.rst:3285 ../../../AMDGPUUsage.rst:3358
#: ../../../AMDGPUUsage.rst:3482 ../../../AMDGPUUsage.rst:3568
#: ../../../AMDGPUUsage.rst:3654 ../../../AMDGPUUsage.rst:3801
#: ../../../AMDGPUUsage.rst:3864 ../../../AMDGPUUsage.rst:4001
#: ../../../AMDGPUUsage.rst:4163 ../../../AMDGPUUsage.rst:4250
#: ../../../AMDGPUUsage.rst:4260 ../../../AMDGPUUsage.rst:4268
msgid "system"
msgstr ""

#: ../../../AMDGPUUsage.rst:3126 ../../../AMDGPUUsage.rst:3225
#: ../../../AMDGPUUsage.rst:3260 ../../../AMDGPUUsage.rst:3544
#: ../../../AMDGPUUsage.rst:3745 ../../../AMDGPUUsage.rst:3839
msgid "buffer/global/flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3131 ../../../AMDGPUUsage.rst:3226
#: ../../../AMDGPUUsage.rst:3545 ../../../AMDGPUUsage.rst:3746
msgid "ds_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3134
msgid "**Acquire Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3136 ../../../AMDGPUUsage.rst:3139
#: ../../../AMDGPUUsage.rst:3140 ../../../AMDGPUUsage.rst:3156
#: ../../../AMDGPUUsage.rst:3172 ../../../AMDGPUUsage.rst:3196
#: ../../../AMDGPUUsage.rst:3222 ../../../AMDGPUUsage.rst:3225
#: ../../../AMDGPUUsage.rst:3226 ../../../AMDGPUUsage.rst:3243
#: ../../../AMDGPUUsage.rst:3260 ../../../AMDGPUUsage.rst:3284
#: ../../../AMDGPUUsage.rst:3311 ../../../AMDGPUUsage.rst:3313
#: ../../../AMDGPUUsage.rst:3357 ../../../AMDGPUUsage.rst:4284
msgid "acquire"
msgstr ""

#: ../../../AMDGPUUsage.rst:3136
msgid "buffer/global/ds/flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:3141 ../../../AMDGPUUsage.rst:3157
#: ../../../AMDGPUUsage.rst:3313 ../../../AMDGPUUsage.rst:3438
#: ../../../AMDGPUUsage.rst:3460 ../../../AMDGPUUsage.rst:3524
#: ../../../AMDGPUUsage.rst:3546 ../../../AMDGPUUsage.rst:3609
#: ../../../AMDGPUUsage.rst:3725 ../../../AMDGPUUsage.rst:3747
#: ../../../AMDGPUUsage.rst:3763 ../../../AMDGPUUsage.rst:3784
#: ../../../AMDGPUUsage.rst:3931 ../../../AMDGPUUsage.rst:4101
msgid "s_waitcnt lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3143 ../../../AMDGPUUsage.rst:3159
#: ../../../AMDGPUUsage.rst:3229 ../../../AMDGPUUsage.rst:3246
#: ../../../AMDGPUUsage.rst:3440 ../../../AMDGPUUsage.rst:3462
#: ../../../AMDGPUUsage.rst:3526 ../../../AMDGPUUsage.rst:3548
#: ../../../AMDGPUUsage.rst:3727 ../../../AMDGPUUsage.rst:3749
#: ../../../AMDGPUUsage.rst:3765 ../../../AMDGPUUsage.rst:3786
msgid "If OpenCL, omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:3144 ../../../AMDGPUUsage.rst:3160
#: ../../../AMDGPUUsage.rst:3230 ../../../AMDGPUUsage.rst:3247
#: ../../../AMDGPUUsage.rst:3344 ../../../AMDGPUUsage.rst:3423
#: ../../../AMDGPUUsage.rst:3750 ../../../AMDGPUUsage.rst:3787
#: ../../../AMDGPUUsage.rst:3951 ../../../AMDGPUUsage.rst:4080
msgid ""
"Must happen before any following global/generic load/load atomic/store/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:3150 ../../../AMDGPUUsage.rst:3166
#: ../../../AMDGPUUsage.rst:3756 ../../../AMDGPUUsage.rst:3793
msgid ""
"Ensures any following global data read is no older than the load atomic "
"value being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:3156
msgid "flat_load"
msgstr ""

#: ../../../AMDGPUUsage.rst:3174 ../../../AMDGPUUsage.rst:3261
#: ../../../AMDGPUUsage.rst:3840
msgid "s_waitcnt vmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3176 ../../../AMDGPUUsage.rst:3202
#: ../../../AMDGPUUsage.rst:3263 ../../../AMDGPUUsage.rst:3290
#: ../../../AMDGPUUsage.rst:3842 ../../../AMDGPUUsage.rst:3908
msgid "Must happen before following buffer_wbinvl1_vol."
msgstr ""

#: ../../../AMDGPUUsage.rst:3179
msgid "Ensures the load has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:3184 ../../../AMDGPUUsage.rst:3210
#: ../../../AMDGPUUsage.rst:3272 ../../../AMDGPUUsage.rst:3299
#: ../../../AMDGPUUsage.rst:3421 ../../../AMDGPUUsage.rst:3851
#: ../../../AMDGPUUsage.rst:3917 ../../../AMDGPUUsage.rst:4078
msgid "buffer_wbinvl1_vol"
msgstr ""

#: ../../../AMDGPUUsage.rst:3186 ../../../AMDGPUUsage.rst:3212
#: ../../../AMDGPUUsage.rst:3274 ../../../AMDGPUUsage.rst:3301
#: ../../../AMDGPUUsage.rst:3853 ../../../AMDGPUUsage.rst:3919
msgid ""
"Must happen before any following global/generic load/load atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:3191 ../../../AMDGPUUsage.rst:3217
#: ../../../AMDGPUUsage.rst:3279 ../../../AMDGPUUsage.rst:3306
#: ../../../AMDGPUUsage.rst:3428 ../../../AMDGPUUsage.rst:3858
#: ../../../AMDGPUUsage.rst:3924
msgid "Ensures that following loads will not see stale global data."
msgstr ""

#: ../../../AMDGPUUsage.rst:3196
msgid "flat_load glc=1"
msgstr ""

#: ../../../AMDGPUUsage.rst:3197 ../../../AMDGPUUsage.rst:3285
#: ../../../AMDGPUUsage.rst:3903
msgid "s_waitcnt vmcnt(0) & lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3200
msgid "If OpenCL omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3205
msgid "Ensures the flat_load has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:3222 ../../../AMDGPUUsage.rst:3521
#: ../../../AMDGPUUsage.rst:3606 ../../../AMDGPUUsage.rst:3722
msgid "buffer/global/ds/flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3227 ../../../AMDGPUUsage.rst:3244
msgid "waitcnt lgkmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3236 ../../../AMDGPUUsage.rst:3253
msgid ""
"Ensures any following global data read is no older than the atomicrmw value "
"being acquired."
msgstr ""

#: ../../../AMDGPUUsage.rst:3243 ../../../AMDGPUUsage.rst:3284
#: ../../../AMDGPUUsage.rst:3566 ../../../AMDGPUUsage.rst:3783
#: ../../../AMDGPUUsage.rst:3902
msgid "flat_atomic"
msgstr ""

#: ../../../AMDGPUUsage.rst:3266 ../../../AMDGPUUsage.rst:3293
#: ../../../AMDGPUUsage.rst:3845 ../../../AMDGPUUsage.rst:3911
msgid "Ensures the atomicrmw has completed before invalidating the cache."
msgstr ""

#: ../../../AMDGPUUsage.rst:3288 ../../../AMDGPUUsage.rst:3484
#: ../../../AMDGPUUsage.rst:3570 ../../../AMDGPUUsage.rst:3803
#: ../../../AMDGPUUsage.rst:3866 ../../../AMDGPUUsage.rst:3906
msgid "If OpenCL, omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3311 ../../../AMDGPUUsage.rst:3313
#: ../../../AMDGPUUsage.rst:3357 ../../../AMDGPUUsage.rst:3607
#: ../../../AMDGPUUsage.rst:3609 ../../../AMDGPUUsage.rst:3653
#: ../../../AMDGPUUsage.rst:3929 ../../../AMDGPUUsage.rst:3931
#: ../../../AMDGPUUsage.rst:4000 ../../../AMDGPUUsage.rst:4264
msgid "fence"
msgstr ""

#: ../../../AMDGPUUsage.rst:3315 ../../../AMDGPUUsage.rst:3611
#: ../../../AMDGPUUsage.rst:3933
msgid "If OpenCL and address space is not generic, omit."
msgstr ""

#: ../../../AMDGPUUsage.rst:3318 ../../../AMDGPUUsage.rst:3614
#: ../../../AMDGPUUsage.rst:3664
msgid ""
"However, since LLVM currently has no address space on the fence need to "
"conservatively always generate. If fence had an address space then set to "
"address space of OpenCL fence flag, or to generic if both local and global "
"flags are specified."
msgstr ""

#: ../../../AMDGPUUsage.rst:3333
msgid ""
"Must happen after any preceding local/generic load atomic/atomicrmw with an "
"equal or wider sync scope and memory ordering stronger than unordered (this "
"is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3350
msgid ""
"Ensures any following global data read is no older than the value read by "
"the fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3357 ../../../AMDGPUUsage.rst:3481
#: ../../../AMDGPUUsage.rst:3567 ../../../AMDGPUUsage.rst:3653
#: ../../../AMDGPUUsage.rst:3800 ../../../AMDGPUUsage.rst:3863
#: ../../../AMDGPUUsage.rst:4000 ../../../AMDGPUUsage.rst:4162
msgid "s_waitcnt lgkmcnt(0) & vmcnt(0)"
msgstr ""

#: ../../../AMDGPUUsage.rst:3360 ../../../AMDGPUUsage.rst:3656
#: ../../../AMDGPUUsage.rst:4003
msgid "If OpenCL and address space is not generic, omit lgkmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3364 ../../../AMDGPUUsage.rst:3936
#: ../../../AMDGPUUsage.rst:4007
msgid ""
"However, since LLVM currently has no address space on the fence need to "
"conservatively always generate (see comment for previous fence)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3372 ../../../AMDGPUUsage.rst:3486
#: ../../../AMDGPUUsage.rst:3572 ../../../AMDGPUUsage.rst:3679
#: ../../../AMDGPUUsage.rst:3805 ../../../AMDGPUUsage.rst:3868
#: ../../../AMDGPUUsage.rst:4015 ../../../AMDGPUUsage.rst:4165
msgid ""
"Could be split into separate s_waitcnt vmcnt(0) and s_waitcnt lgkmcnt(0) to "
"allow them to be independently moved according to the following rules."
msgstr ""

#: ../../../AMDGPUUsage.rst:3381
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load "
"atomic/atomicrmw with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3393
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding local/generic load "
"atomic/atomicrmw with an equal or wider sync scope and memory ordering "
"stronger than unordered (this is termed the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3405 ../../../AMDGPUUsage.rst:4038
msgid "Must happen before the following buffer_wbinvl1_vol."
msgstr ""

#: ../../../AMDGPUUsage.rst:3408
msgid ""
"Ensures that the fence-paired atomic has completed before invalidating the "
"cache. Therefore any following locations read must be no older than the "
"value read by the fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3433
msgid "**Release Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3435 ../../../AMDGPUUsage.rst:3438
#: ../../../AMDGPUUsage.rst:3459 ../../../AMDGPUUsage.rst:3460
#: ../../../AMDGPUUsage.rst:3481 ../../../AMDGPUUsage.rst:3521
#: ../../../AMDGPUUsage.rst:3524 ../../../AMDGPUUsage.rst:3545
#: ../../../AMDGPUUsage.rst:3546 ../../../AMDGPUUsage.rst:3567
#: ../../../AMDGPUUsage.rst:3607 ../../../AMDGPUUsage.rst:3609
#: ../../../AMDGPUUsage.rst:3653 ../../../AMDGPUUsage.rst:4289
msgid "release"
msgstr ""

#: ../../../AMDGPUUsage.rst:3435 ../../../AMDGPUUsage.rst:3520
msgid "buffer/global/ds/flat_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:3441 ../../../AMDGPUUsage.rst:3463
#: ../../../AMDGPUUsage.rst:3527 ../../../AMDGPUUsage.rst:3549
#: ../../../AMDGPUUsage.rst:3728 ../../../AMDGPUUsage.rst:3766
msgid ""
"Must happen after any preceding local/generic load/store/load atomic/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:3447 ../../../AMDGPUUsage.rst:3469
#: ../../../AMDGPUUsage.rst:3509
msgid "Must happen before the following store."
msgstr ""

#: ../../../AMDGPUUsage.rst:3450 ../../../AMDGPUUsage.rst:3472
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:3480
msgid "flat_store"
msgstr ""

#: ../../../AMDGPUUsage.rst:3495 ../../../AMDGPUUsage.rst:3581
#: ../../../AMDGPUUsage.rst:3688 ../../../AMDGPUUsage.rst:3814
#: ../../../AMDGPUUsage.rst:3877 ../../../AMDGPUUsage.rst:4024
msgid ""
"s_waitcnt vmcnt(0) must happen after any preceding global/generic load/store/"
"load atomic/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:3502 ../../../AMDGPUUsage.rst:3588
#: ../../../AMDGPUUsage.rst:3695 ../../../AMDGPUUsage.rst:3821
#: ../../../AMDGPUUsage.rst:3884 ../../../AMDGPUUsage.rst:4031
msgid ""
"s_waitcnt lgkmcnt(0) must happen after any preceding local/generic load/"
"store/load atomic/store atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:3512
msgid ""
"Ensures that all memory operations to memory have completed before "
"performing the store that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:3533 ../../../AMDGPUUsage.rst:3555
#: ../../../AMDGPUUsage.rst:3595 ../../../AMDGPUUsage.rst:3734
#: ../../../AMDGPUUsage.rst:3772 ../../../AMDGPUUsage.rst:3828
#: ../../../AMDGPUUsage.rst:3891
msgid "Must happen before the following atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:3536 ../../../AMDGPUUsage.rst:3558
#: ../../../AMDGPUUsage.rst:3737 ../../../AMDGPUUsage.rst:3775
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:3598
msgid ""
"Ensures that all memory operations to global and local have completed before "
"performing the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:3629 ../../../AMDGPUUsage.rst:3945
msgid ""
"Must happen after any preceding local/generic load/load atomic/store/store "
"atomic/atomicrmw."
msgstr ""

#: ../../../AMDGPUUsage.rst:3635 ../../../AMDGPUUsage.rst:3702
msgid ""
"Must happen before any following store atomic/atomicrmw with an equal or "
"wider sync scope and memory ordering stronger than unordered (this is termed "
"the fence-paired-atomic)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3645
msgid ""
"Ensures that all memory operations to local have completed before performing "
"the following fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3660
msgid "If OpenCL and address space is local, omit vmcnt(0)."
msgstr ""

#: ../../../AMDGPUUsage.rst:3712
msgid ""
"Ensures that all memory operations have completed before performing the "
"following fence-paired-atomic."
msgstr ""

#: ../../../AMDGPUUsage.rst:3720
msgid "**Acquire-Release Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:3722 ../../../AMDGPUUsage.rst:3725
#: ../../../AMDGPUUsage.rst:3746 ../../../AMDGPUUsage.rst:3763
#: ../../../AMDGPUUsage.rst:3800 ../../../AMDGPUUsage.rst:3863
#: ../../../AMDGPUUsage.rst:3929 ../../../AMDGPUUsage.rst:3931
#: ../../../AMDGPUUsage.rst:4000 ../../../AMDGPUUsage.rst:4295
msgid "acq_rel"
msgstr ""

#: ../../../AMDGPUUsage.rst:3831 ../../../AMDGPUUsage.rst:3894
msgid ""
"Ensures that all memory operations to global have completed before "
"performing the atomicrmw that is being released."
msgstr ""

#: ../../../AMDGPUUsage.rst:3957
msgid ""
"Ensures that all memory operations to local have completed before performing "
"any following global memory operations."
msgstr ""

#: ../../../AMDGPUUsage.rst:3964
msgid ""
"Ensures that the preceding local/generic load atomic/atomicrmw with an equal "
"or wider sync scope and memory ordering stronger than unordered (this is "
"termed the acquire-fence-paired-atomic ) has completed before following "
"global memory operations. This satisfies the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:3982
msgid ""
"Ensures that all previous memory operations have completed before a "
"following local/generic store atomic/atomicrmw with an equal or wider sync "
"scope and memory ordering stronger than unordered (this is termed the "
"release-fence-paired-atomic ). This satisfies the requirements of release."
msgstr ""

#: ../../../AMDGPUUsage.rst:4041
msgid ""
"Ensures that the preceding global/local/generic load atomic/atomicrmw with "
"an equal or wider sync scope and memory ordering stronger than unordered "
"(this is termed the acquire-fence-paired-atomic ) has completed before "
"invalidating the cache. This satisfies the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:4059
msgid ""
"Ensures that all previous memory operations have completed before a "
"following global/local/generic store atomic/atomicrmw with an equal or wider "
"sync scope and memory ordering stronger than unordered (this is termed the "
"release-fence-paired-atomic ). This satisfies the requirements of release."
msgstr ""

#: ../../../AMDGPUUsage.rst:4086
msgid ""
"Ensures that following loads will not see stale global data. This satisfies "
"the requirements of acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:4094
msgid "**Sequential Consistent Atomic**"
msgstr ""

#: ../../../AMDGPUUsage.rst:4096 ../../../AMDGPUUsage.rst:4101
#: ../../../AMDGPUUsage.rst:4157 ../../../AMDGPUUsage.rst:4162
#: ../../../AMDGPUUsage.rst:4244 ../../../AMDGPUUsage.rst:4249
#: ../../../AMDGPUUsage.rst:4254 ../../../AMDGPUUsage.rst:4259
#: ../../../AMDGPUUsage.rst:4264 ../../../AMDGPUUsage.rst:4296
msgid "seq_cst"
msgstr ""

#: ../../../AMDGPUUsage.rst:4096 ../../../AMDGPUUsage.rst:4157
msgid ""
"*Same as corresponding load atomic acquire, except must generated all "
"instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:4103
msgid ""
"Must happen after preceding global/generic load atomic/store atomic/"
"atomicrmw with memory ordering of seq_cst and with equal or wider sync "
"scope. (Note that seq_cst fences have their own s_waitcnt lgkmcnt(0) and so "
"do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4119
msgid ""
"Ensures any preceding sequential consistent local memory instructions have "
"completed before executing this sequentially consistent instruction. This "
"prevents reordering a seq_cst store followed by a seq_cst load. (Note that "
"seq_cst is stronger than acquire/release as the reordering of load acquire "
"followed by a store release is prevented by the waitcnt of the release, but "
"there is nothing preventing a store release followed by load acquire from "
"competing out of order.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4150 ../../../AMDGPUUsage.rst:4237
msgid ""
"*Following instructions same as corresponding load atomic acquire, except "
"must generated all instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:4174
msgid ""
"waitcnt lgkmcnt(0) must happen after preceding global/generic load atomic/"
"store atomic/atomicrmw with memory ordering of seq_cst and with equal or "
"wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"lgkmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4190
msgid ""
"waitcnt vmcnt(0) must happen after preceding global/generic load atomic/"
"store atomic/atomicrmw with memory ordering of seq_cst and with equal or "
"wider sync scope. (Note that seq_cst fences have their own s_waitcnt "
"vmcnt(0) and so do not need to be considered.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4206
msgid ""
"Ensures any preceding sequential consistent global memory instructions have "
"completed before executing this sequentially consistent instruction. This "
"prevents reordering a seq_cst store followed by a seq_cst load. (Note that "
"seq_cst is stronger than acquire/release as the reordering of load acquire "
"followed by a store release is prevented by the waitcnt of the release, but "
"there is nothing preventing a store release followed by load acquire from "
"competing out of order.)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4244 ../../../AMDGPUUsage.rst:4249
msgid ""
"*Same as corresponding store atomic release, except must generated all "
"instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:4254 ../../../AMDGPUUsage.rst:4259
msgid ""
"*Same as corresponding atomicrmw acq_rel, except must generated all "
"instructions even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:4264
msgid ""
"*Same as corresponding fence acq_rel, except must generated all instructions "
"even for OpenCL.*"
msgstr ""

#: ../../../AMDGPUUsage.rst:4271
msgid ""
"The memory order also adds the single thread optimization constrains defined "
"in table :ref:`amdgpu-amdhsa-memory-model-single-thread-optimization-"
"constraints-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4275
msgid "AMDHSA Memory Model Single Thread Optimization Constraints GFX6-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:4279
msgid "LLVM Memory"
msgstr ""

#: ../../../AMDGPUUsage.rst:4279
msgid "Optimization Constraints"
msgstr ""

#: ../../../AMDGPUUsage.rst:4280
msgid "Ordering"
msgstr ""

#: ../../../AMDGPUUsage.rst:4284
msgid ""
"If a load atomic/atomicrmw then no following load/load atomic/store/ store "
"atomic/atomicrmw/fence instruction can be moved before the acquire."
msgstr ""

#: ../../../AMDGPUUsage.rst:4287
msgid ""
"If a fence then same as load atomic, plus no preceding associated fence-"
"paired-atomic can be moved after the fence."
msgstr ""

#: ../../../AMDGPUUsage.rst:4289
msgid ""
"If a store atomic/atomicrmw then no preceding load/load atomic/store/ store "
"atomic/atomicrmw/fence instruction can be moved after the release."
msgstr ""

#: ../../../AMDGPUUsage.rst:4292
msgid ""
"If a fence then same as store atomic, plus no following associated fence-"
"paired-atomic can be moved before the fence."
msgstr ""

#: ../../../AMDGPUUsage.rst:4295
msgid "Same constraints as both acquire and release."
msgstr ""

#: ../../../AMDGPUUsage.rst:4296
msgid ""
"If a load atomic then same constraints as acquire, plus no preceding "
"sequentially consistent load atomic/store atomic/atomicrmw/fence instruction "
"can be moved after the seq_cst."
msgstr ""

#: ../../../AMDGPUUsage.rst:4300
msgid ""
"If a store atomic then the same constraints as release, plus no following "
"sequentially consistent load atomic/store atomic/atomicrmw/fence instruction "
"can be moved before the seq_cst."
msgstr ""

#: ../../../AMDGPUUsage.rst:4304
msgid "If an atomicrmw/fence then same constraints as acq_rel."
msgstr ""

#: ../../../AMDGPUUsage.rst:4308 ../../../AMDGPUUsage.rst:4485
msgid "Trap Handler ABI"
msgstr ""

#: ../../../AMDGPUUsage.rst:4310
msgid ""
"For code objects generated by AMDGPU backend for HSA [HSA]_ compatible "
"runtimes (such as ROCm [AMD-ROCm]_), the runtime installs a trap handler "
"that supports the ``s_trap`` instruction with the following usage:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4314
msgid "AMDGPU Trap Handler for AMDHSA OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:4318 ../../../AMDGPUUsage.rst:4495
msgid "Usage"
msgstr ""

#: ../../../AMDGPUUsage.rst:4318 ../../../AMDGPUUsage.rst:4495
msgid "Code Sequence"
msgstr ""

#: ../../../AMDGPUUsage.rst:4318
msgid "Trap Handler Inputs"
msgstr ""

#: ../../../AMDGPUUsage.rst:4321 ../../../AMDGPUUsage.rst:4349
#: ../../../AMDGPUUsage.rst:4350 ../../../AMDGPUUsage.rst:4351
#: ../../../AMDGPUUsage.rst:4354 ../../../AMDGPUUsage.rst:4355
#: ../../../AMDGPUUsage.rst:4356
msgid "reserved"
msgstr ""

#: ../../../AMDGPUUsage.rst:4321
msgid "``s_trap 0x00``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4321
msgid "Reserved by hardware."
msgstr ""

#: ../../../AMDGPUUsage.rst:4322
msgid "``debugtrap(arg)``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4322
msgid "``s_trap 0x01``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4322 ../../../AMDGPUUsage.rst:4328
msgid "``SGPR0-1``:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4323 ../../../AMDGPUUsage.rst:4327
msgid "``queue_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4324
msgid "``VGPR0``:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4325
msgid "``arg``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4322
msgid "Reserved for HSA ``debugtrap`` intrinsic (not implemented)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4326
msgid "``llvm.trap``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4326
msgid "``s_trap 0x02``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4326
msgid ""
"Causes dispatch to be terminated and its associated queue put into the error "
"state."
msgstr ""

#: ../../../AMDGPUUsage.rst:4330
msgid "``llvm.debugtrap``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4330
msgid "``s_trap 0x03``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4330
msgid ""
"If debugger not installed then behaves as a no-operation. The trap handler "
"is entered and immediately returns to continue execution of the wavefront."
msgstr ""

#: ../../../AMDGPUUsage.rst:4340
msgid ""
"If the debugger is installed, causes the debug trap to be reported by the "
"debugger and the wavefront is put in the halt state until resumed by the "
"debugger."
msgstr ""

#: ../../../AMDGPUUsage.rst:4349
msgid "``s_trap 0x04``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4350
msgid "``s_trap 0x05``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4351
msgid "``s_trap 0x06``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4352
msgid "debugger breakpoint"
msgstr ""

#: ../../../AMDGPUUsage.rst:4352
msgid "``s_trap 0x07``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4352
msgid "Reserved for debugger breakpoints."
msgstr ""

#: ../../../AMDGPUUsage.rst:4354
msgid "``s_trap 0x08``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4355
msgid "``s_trap 0xfe``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4356
msgid "``s_trap 0xff``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4360
msgid "AMDPAL"
msgstr ""

#: ../../../AMDGPUUsage.rst:4362
msgid ""
"This section provides code conventions used when the target triple OS is "
"``amdpal`` (see :ref:`amdgpu-target-triples`) for passing runtime parameters "
"from the application/runtime to each invocation of a hardware shader. These "
"parameters include both generic, application-controlled parameters called "
"*user data* as well as system-generated parameters that are a product of the "
"draw or dispatch execution."
msgstr ""

#: ../../../AMDGPUUsage.rst:4370
msgid "User Data"
msgstr ""

#: ../../../AMDGPUUsage.rst:4372
msgid ""
"Each hardware stage has a set of 32-bit *user data registers* which can be "
"written from a command buffer and then loaded into SGPRs when waves are "
"launched via a subsequent dispatch or draw operation. This is the way most "
"arguments are passed from the application/runtime to a hardware shader."
msgstr ""

#: ../../../AMDGPUUsage.rst:4378
msgid "Compute User Data"
msgstr ""

#: ../../../AMDGPUUsage.rst:4380
msgid ""
"Compute shader user data mappings are simpler than graphics shaders, and "
"have a fixed mapping."
msgstr ""

#: ../../../AMDGPUUsage.rst:4383
msgid ""
"Note that there are always 10 available *user data entries* in registers - "
"entries beyond that limit must be fetched from memory (via the spill table "
"pointer) by the shader."
msgstr ""

#: ../../../AMDGPUUsage.rst:4387
msgid "PAL Compute Shader User Data Registers"
msgstr ""

#: ../../../AMDGPUUsage.rst:4391 ../../../AMDGPUUsage.rst:4410
msgid "User Register"
msgstr ""

#: ../../../AMDGPUUsage.rst:4393 ../../../AMDGPUUsage.rst:4412
msgid "Global Internal Table (32-bit pointer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4394 ../../../AMDGPUUsage.rst:4413
msgid "Per-Shader Internal Table (32-bit pointer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4395
msgid "2 - 11"
msgstr ""

#: ../../../AMDGPUUsage.rst:4395
msgid "Application-Controlled User Data (10 32-bit values)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4396 ../../../AMDGPUUsage.rst:4416
msgid "Spill Table (32-bit pointer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4397
msgid "13 - 14"
msgstr ""

#: ../../../AMDGPUUsage.rst:4397
msgid "Thread Group Count (64-bit pointer)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4398
msgid "15"
msgstr ""

#: ../../../AMDGPUUsage.rst:4398
msgid "GDS Range"
msgstr ""

#: ../../../AMDGPUUsage.rst:4402
msgid "Graphics User Data"
msgstr ""

#: ../../../AMDGPUUsage.rst:4404
msgid "Graphics pipelines support a much more flexible user data mapping:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4406
msgid "PAL Graphics Shader User Data Registers"
msgstr ""

#: ../../../AMDGPUUsage.rst:4414
msgid "1-15"
msgstr ""

#: ../../../AMDGPUUsage.rst:4414
msgid ""
"Application Controlled User Data (1-15 Contiguous 32-bit Values in Registers)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4417
msgid "Draw Index (First Stage Only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4418
msgid "Vertex Offset (First Stage Only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4419
msgid "Instance Offset (First Stage Only)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4422
msgid ""
"The placement of the global internal table remains fixed in the first *user "
"data SGPR register*. Otherwise all parameters are optional, and can be "
"mapped to any desired *user data SGPR register*, with the following "
"regstrictions:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4426
msgid ""
"Draw Index, Vertex Offset, and Instance Offset can only be used by the first "
"activehardware stage in a graphics pipeline (i.e. where the API vertex "
"shader runs)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4430
msgid ""
"Application-controlled user data must be mapped into a contiguous range of "
"user data registers."
msgstr ""

#: ../../../AMDGPUUsage.rst:4433
msgid ""
"The application-controlled user data range supports compaction remapping, so "
"only *entries* that are actually consumed by the shader must be assigned to "
"corresponding *registers*. Note that in order to support an efficient "
"runtime implementation, the remapping must pack *registers* in the same "
"order as *entries*, with unused *entries* removed."
msgstr ""

#: ../../../AMDGPUUsage.rst:4442
msgid "Global Internal Table"
msgstr ""

#: ../../../AMDGPUUsage.rst:4444
msgid ""
"The global internal table is a table of *shader resource descriptors* (SRDs) "
"that define how certain engine-wide, runtime-managed resources should be "
"accessed from a shader. The majority of these resources have HW-defined "
"formats, and it is up to the compiler to write/read data as required by the "
"target hardware."
msgstr ""

#: ../../../AMDGPUUsage.rst:4449
msgid "The following table illustrates the required format:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4451
msgid "PAL Global Internal Table"
msgstr ""

#: ../../../AMDGPUUsage.rst:4455
msgid "Offset"
msgstr ""

#: ../../../AMDGPUUsage.rst:4457
msgid "0-3"
msgstr ""

#: ../../../AMDGPUUsage.rst:4457
msgid "Graphics Scratch SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:4458
msgid "4-7"
msgstr ""

#: ../../../AMDGPUUsage.rst:4458
msgid "Compute Scratch SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:4459
msgid "8-11"
msgstr ""

#: ../../../AMDGPUUsage.rst:4459
msgid "ES/GS Ring Output SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:4460
msgid "12-15"
msgstr ""

#: ../../../AMDGPUUsage.rst:4460
msgid "ES/GS Ring Input SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:4461
msgid "16-19"
msgstr ""

#: ../../../AMDGPUUsage.rst:4461
msgid "GS/VS Ring Output #0"
msgstr ""

#: ../../../AMDGPUUsage.rst:4462
msgid "20-23"
msgstr ""

#: ../../../AMDGPUUsage.rst:4462
msgid "GS/VS Ring Output #1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4463
msgid "24-27"
msgstr ""

#: ../../../AMDGPUUsage.rst:4463
msgid "GS/VS Ring Output #2"
msgstr ""

#: ../../../AMDGPUUsage.rst:4464
msgid "28-31"
msgstr ""

#: ../../../AMDGPUUsage.rst:4464
msgid "GS/VS Ring Output #3"
msgstr ""

#: ../../../AMDGPUUsage.rst:4465
msgid "32-35"
msgstr ""

#: ../../../AMDGPUUsage.rst:4465
msgid "GS/VS Ring Input SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:4466
msgid "36-39"
msgstr ""

#: ../../../AMDGPUUsage.rst:4466
msgid "Tessellation Factor Buffer SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:4467
msgid "40-43"
msgstr ""

#: ../../../AMDGPUUsage.rst:4467
msgid "Off-Chip LDS Buffer SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:4468
msgid "44-47"
msgstr ""

#: ../../../AMDGPUUsage.rst:4468
msgid "Off-Chip Param Cache Buffer SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:4469
msgid "48-51"
msgstr ""

#: ../../../AMDGPUUsage.rst:4469
msgid "Sample Position Buffer SRD"
msgstr ""

#: ../../../AMDGPUUsage.rst:4470
msgid "52"
msgstr ""

#: ../../../AMDGPUUsage.rst:4470
msgid "vaRange::ShadowDescriptorTable High Bits"
msgstr ""

#: ../../../AMDGPUUsage.rst:4473
msgid ""
"The pointer to the global internal table passed to the shader as user data "
"is a 32-bit pointer. The top 32 bits should be assumed to be the same as the "
"top 32 bits of the pipeline, so the shader may use the program counter's top "
"32 bits."
msgstr ""

#: ../../../AMDGPUUsage.rst:4479
msgid "Unspecified OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:4481
msgid ""
"This section provides code conventions used when the target triple OS is "
"empty (see :ref:`amdgpu-target-triples`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4487
msgid ""
"For code objects generated by AMDGPU backend for non-amdhsa OS, the runtime "
"does not install a trap handler. The ``llvm.trap`` and ``llvm.debugtrap`` "
"instructions are handled as follows:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4491
msgid "AMDGPU Trap Handler for Non-AMDHSA OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:4497
msgid "llvm.trap"
msgstr ""

#: ../../../AMDGPUUsage.rst:4497
msgid "s_endpgm"
msgstr ""

#: ../../../AMDGPUUsage.rst:4497
msgid "Causes wavefront to be terminated."
msgstr ""

#: ../../../AMDGPUUsage.rst:4498
msgid "llvm.debugtrap"
msgstr ""

#: ../../../AMDGPUUsage.rst:4498
msgid "Compiler warning given that there is no trap handler installed."
msgstr ""

#: ../../../AMDGPUUsage.rst:4503
msgid "Source Languages"
msgstr ""

#: ../../../AMDGPUUsage.rst:4508
msgid "OpenCL"
msgstr ""

#: ../../../AMDGPUUsage.rst:4510
msgid "When the language is OpenCL the following differences occur:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4512
msgid ""
"The OpenCL memory model is used (see :ref:`amdgpu-amdhsa-memory-model`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4513
msgid ""
"The AMDGPU backend appends additional arguments to the kernel's explicit "
"arguments for the AMDHSA OS (see :ref:`opencl-kernel-implicit-arguments-"
"appended-for-amdhsa-os-table`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4516
msgid ""
"Additional metadata is generated (see :ref:`amdgpu-amdhsa-code-object-"
"metadata`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4519
msgid "OpenCL kernel implicit arguments appended for AMDHSA OS"
msgstr ""

#: ../../../AMDGPUUsage.rst:4523
msgid "Position"
msgstr ""

#: ../../../AMDGPUUsage.rst:4523
msgid "Byte Size"
msgstr ""

#: ../../../AMDGPUUsage.rst:4523
msgid "Byte Alignment"
msgstr ""

#: ../../../AMDGPUUsage.rst:4526
msgid "OpenCL Global Offset X"
msgstr ""

#: ../../../AMDGPUUsage.rst:4527
msgid "OpenCL Global Offset Y"
msgstr ""

#: ../../../AMDGPUUsage.rst:4528
msgid "OpenCL Global Offset Z"
msgstr ""

#: ../../../AMDGPUUsage.rst:4529
msgid "OpenCL address of printf buffer"
msgstr ""

#: ../../../AMDGPUUsage.rst:4530
msgid "OpenCL address of virtual queue used by enqueue_kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:4532
msgid "OpenCL address of AqlWrap struct used by enqueue_kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:4539
msgid "HCC"
msgstr ""

#: ../../../AMDGPUUsage.rst:4541
msgid "When the language is HCC the following differences occur:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4543
msgid "The HSA memory model is used (see :ref:`amdgpu-amdhsa-memory-model`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:4548
msgid "Assembler"
msgstr ""

#: ../../../AMDGPUUsage.rst:4550
msgid ""
"AMDGPU backend has LLVM-MC based assembler which is currently in "
"development. It supports AMDGCN GFX6-GFX9."
msgstr ""

#: ../../../AMDGPUUsage.rst:4553
msgid "This section describes general syntax for instructions and operands."
msgstr ""

#: ../../../AMDGPUUsage.rst:4556
msgid "Instructions"
msgstr ""

#: ../../../AMDGPUUsage.rst:4569
msgid ""
"An instruction has the following :doc:`syntax<AMDGPUInstructionSyntax>`:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4571
msgid ""
"``<``\\ *opcode*\\ ``>    <``\\ *operand0*\\ ``>, <``\\ *operand1*\\ "
"``>,...    <``\\ *modifier0*\\ ``> <``\\ *modifier1*\\ ``>...``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4573
msgid ""
":doc:`Operands<AMDGPUOperandSyntax>` are normally comma-separated while :doc:"
"`modifiers<AMDGPUModifierSyntax>` are space-separated."
msgstr ""

#: ../../../AMDGPUUsage.rst:4576
msgid ""
"The order of *operands* and *modifiers* is fixed. Most *modifiers* are "
"optional and may be omitted."
msgstr ""

#: ../../../AMDGPUUsage.rst:4579
msgid ""
"See detailed instruction syntax description for :doc:`GFX7<AMDGPU/"
"AMDGPUAsmGFX7>`, :doc:`GFX8<AMDGPU/AMDGPUAsmGFX8>` and :doc:`GFX9<AMDGPU/"
"AMDGPUAsmGFX9>`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4582
msgid ""
"Note that features under development are not included in this description."
msgstr ""

#: ../../../AMDGPUUsage.rst:4584
msgid ""
"For more information about instructions, their semantics and supported "
"combinations of operands, refer to one of instruction set architecture "
"manuals [AMD-GCN-GFX6]_, [AMD-GCN-GFX7]_, [AMD-GCN-GFX8]_ and [AMD-GCN-"
"GFX9]_."
msgstr ""

#: ../../../AMDGPUUsage.rst:4589
msgid "Operands"
msgstr ""

#: ../../../AMDGPUUsage.rst:4591
msgid ""
"Detailed description of operands may be found :doc:"
"`here<AMDGPUOperandSyntax>`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4594
msgid "Modifiers"
msgstr ""

#: ../../../AMDGPUUsage.rst:4596
msgid ""
"Detailed description of modifiers may be found :doc:"
"`here<AMDGPUModifierSyntax>`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4599
msgid "Instruction Examples"
msgstr ""

#: ../../../AMDGPUUsage.rst:4602
msgid "DS"
msgstr ""

#: ../../../AMDGPUUsage.rst:4612
msgid ""
"For full list of supported instructions, refer to \"LDS/GDS instructions\" "
"in ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:4615
msgid "FLAT"
msgstr ""

#: ../../../AMDGPUUsage.rst:4625
msgid ""
"For full list of supported instructions, refer to \"FLAT instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:4628
msgid "MUBUF"
msgstr ""

#: ../../../AMDGPUUsage.rst:4638
msgid ""
"For full list of supported instructions, refer to \"MUBUF Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:4641
msgid "SMRD/SMEM"
msgstr ""

#: ../../../AMDGPUUsage.rst:4651
msgid ""
"For full list of supported instructions, refer to \"Scalar Memory "
"Operations\" in ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:4654
msgid "SOP1"
msgstr ""

#: ../../../AMDGPUUsage.rst:4666
msgid ""
"For full list of supported instructions, refer to \"SOP1 Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:4669
msgid "SOP2"
msgstr ""

#: ../../../AMDGPUUsage.rst:4683
msgid ""
"For full list of supported instructions, refer to \"SOP2 Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:4686
msgid "SOPC"
msgstr ""

#: ../../../AMDGPUUsage.rst:4695
msgid ""
"For full list of supported instructions, refer to \"SOPC Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:4698
msgid "SOPP"
msgstr ""

#: ../../../AMDGPUUsage.rst:4714
msgid ""
"For full list of supported instructions, refer to \"SOPP Instructions\" in "
"ISA Manual."
msgstr ""

#: ../../../AMDGPUUsage.rst:4716
msgid ""
"Unless otherwise mentioned, little verification is performed on the operands "
"of SOPP Instructions, so it is up to the programmer to be familiar with the "
"range or acceptable values."
msgstr ""

#: ../../../AMDGPUUsage.rst:4721
msgid "VALU"
msgstr ""

#: ../../../AMDGPUUsage.rst:4723
msgid ""
"For vector ALU instruction opcodes (VOP1, VOP2, VOP3, VOPC, VOP_DPP, "
"VOP_SDWA), the assembler will automatically use optimal encoding based on "
"its operands. To force specific encoding, one can add a suffix to the opcode "
"of the instruction:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4727
msgid "_e32 for 32-bit VOP1/VOP2/VOPC"
msgstr ""

#: ../../../AMDGPUUsage.rst:4728
msgid "_e64 for 64-bit VOP3"
msgstr ""

#: ../../../AMDGPUUsage.rst:4729
msgid "_dpp for VOP_DPP"
msgstr ""

#: ../../../AMDGPUUsage.rst:4730
msgid "_sdwa for VOP_SDWA"
msgstr ""

#: ../../../AMDGPUUsage.rst:4732
msgid "VOP1/VOP2/VOP3/VOPC examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4749
msgid "VOP_DPP examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4762
msgid "VOP_SDWA examples:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4772
msgid ""
"For full list of supported instructions, refer to \"Vector ALU "
"instructions\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:4778
msgid "HSA Code Object Directives"
msgstr ""

#: ../../../AMDGPUUsage.rst:4780
msgid ""
"AMDGPU ABI defines auxiliary data in output code object. In assembly source, "
"one can specify them with assembler directives."
msgstr ""

#: ../../../AMDGPUUsage.rst:4784
msgid ".hsa_code_object_version major, minor"
msgstr ""

#: ../../../AMDGPUUsage.rst:4786
msgid ""
"*major* and *minor* are integers that specify the version of the HSA code "
"object that will be generated by the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:4790
msgid ".hsa_code_object_isa [major, minor, stepping, vendor, arch]"
msgstr ""

#: ../../../AMDGPUUsage.rst:4793
msgid ""
"*major*, *minor*, and *stepping* are all integers that describe the "
"instruction set architecture (ISA) version of the assembly program."
msgstr ""

#: ../../../AMDGPUUsage.rst:4796
msgid ""
"*vendor* and *arch* are quoted strings.  *vendor* should always be equal to "
"\"AMD\" and *arch* should always be equal to \"AMDGPU\"."
msgstr ""

#: ../../../AMDGPUUsage.rst:4799
msgid ""
"By default, the assembler will derive the ISA version, *vendor*, and *arch* "
"from the value of the -mcpu option that is passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:4803
msgid ".amdgpu_hsa_kernel (name)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4805
msgid ""
"This directives specifies that the symbol with given name is a kernel entry "
"point (label) and the object should contain corresponding symbol of type "
"STT_AMDGPU_HSA_KERNEL."
msgstr ""

#: ../../../AMDGPUUsage.rst:4809
msgid ".amd_kernel_code_t"
msgstr ""

#: ../../../AMDGPUUsage.rst:4811
msgid ""
"This directive marks the beginning of a list of key / value pairs that are "
"used to specify the amd_kernel_code_t object that will be emitted by the "
"assembler. The list must be terminated by the *.end_amd_kernel_code_t* "
"directive.  For any amd_kernel_code_t values that are unspecified a default "
"value will be used.  The default value for all keys is 0, with the following "
"exceptions:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4817
msgid "*kernel_code_version_major* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:4818
msgid "*machine_kind* defaults to 1."
msgstr ""

#: ../../../AMDGPUUsage.rst:4819
msgid ""
"*machine_version_major*, *machine_version_minor*, and "
"*machine_version_stepping* are derived from the value of the -mcpu option "
"that is passed to the assembler."
msgstr ""

#: ../../../AMDGPUUsage.rst:4822
msgid "*kernel_code_entry_byte_offset* defaults to 256."
msgstr ""

#: ../../../AMDGPUUsage.rst:4823
msgid "*wavefront_size* defaults to 6."
msgstr ""

#: ../../../AMDGPUUsage.rst:4824
msgid ""
"*kernarg_segment_alignment*, *group_segment_alignment*, and "
"*private_segment_alignment* default to 4. Note that alignments are specified "
"as a power of 2, so a value of **n** means an alignment of 2^ **n**."
msgstr ""

#: ../../../AMDGPUUsage.rst:4828
msgid ""
"The *.amd_kernel_code_t* directive must be placed immediately after the "
"function label and before any instructions."
msgstr ""

#: ../../../AMDGPUUsage.rst:4831
msgid ""
"For a full list of amd_kernel_code_t keys, refer to AMDGPU ABI document, "
"comments in lib/Target/AMDGPU/AmdKernelCodeT.h and test/CodeGen/AMDGPU/hsa.s."
msgstr ""

#: ../../../AMDGPUUsage.rst:4834
msgid "Here is an example of a minimal amd_kernel_code_t specification:"
msgstr ""

#: ../../../AMDGPUUsage.rst:4870
msgid "Predefined Symbols (-mattr=+code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4872
msgid ""
"The AMDGPU assembler defines and updates some symbols automatically. These "
"symbols do not affect code generation."
msgstr ""

#: ../../../AMDGPUUsage.rst:4876
msgid ".amdgcn.gfx_generation_number"
msgstr ""

#: ../../../AMDGPUUsage.rst:4878
msgid ""
"Set to the GFX generation number of the target being assembled for. For "
"example, when assembling for a \"GFX9\" target this will be set to the "
"integer value \"9\". The possible GFX generation numbers are presented in :"
"ref:`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4884
msgid ".amdgcn.next_free_vgpr"
msgstr ""

#: ../../../AMDGPUUsage.rst:4886
msgid ""
"Set to zero before assembly begins. At each instruction, if the current "
"value of this symbol is less than or equal to the maximum VGPR number "
"explicitly referenced within that instruction then the symbol value is "
"updated to equal that VGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:4891
msgid ""
"May be used to set the `.amdhsa_next_free_vpgr` directive in :ref:`amdhsa-"
"kernel-directives-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4894 ../../../AMDGPUUsage.rst:4907
msgid ""
"May be set at any time, e.g. manually set to zero at the start of each "
"kernel."
msgstr ""

#: ../../../AMDGPUUsage.rst:4897
msgid ".amdgcn.next_free_sgpr"
msgstr ""

#: ../../../AMDGPUUsage.rst:4899
msgid ""
"Set to zero before assembly begins. At each instruction, if the current "
"value of this symbol is less than or equal the maximum SGPR number "
"explicitly referenced within that instruction then the symbol value is "
"updated to equal that SGPR number plus one."
msgstr ""

#: ../../../AMDGPUUsage.rst:4904
msgid ""
"May be used to set the `.amdhsa_next_free_spgr` directive in :ref:`amdhsa-"
"kernel-directives-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4910
msgid "Code Object Directives (-mattr=+code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4912
msgid ""
"Directives which begin with ``.amdgcn`` are valid for all ``amdgcn`` "
"architecture processors, and are not OS-specific. Directives which begin "
"with ``.amdhsa`` are specific to ``amdgcn`` architecture processors when the "
"``amdhsa`` OS is specified. See :ref:`amdgpu-target-triples` and :ref:"
"`amdgpu-processors`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4919
msgid ".amdgcn_target <target>"
msgstr ""

#: ../../../AMDGPUUsage.rst:4921
msgid ""
"Optional directive which declares the target supported by the containing "
"assembler source file. Valid values are described in :ref:`amdgpu-amdhsa-"
"code-object-target-identification`. Used by the assembler to validate "
"command-line options such as ``-triple``, ``-mcpu``, and those which specify "
"target features."
msgstr ""

#: ../../../AMDGPUUsage.rst:4928
msgid ".amdhsa_kernel <name>"
msgstr ""

#: ../../../AMDGPUUsage.rst:4930
msgid ""
"Creates a correctly aligned AMDHSA kernel descriptor and a symbol, ``<name>."
"kd``, in the current location of the current section. Only valid when the OS "
"is ``amdhsa``. ``<name>`` must be a symbol that labels the first instruction "
"to execute, and does not need to be previously defined."
msgstr ""

#: ../../../AMDGPUUsage.rst:4935
msgid ""
"Marks the beginning of a list of directives used to generate the bytes of a "
"kernel descriptor, as described in :ref:`amdgpu-amdhsa-kernel-descriptor`. "
"Directives which may appear in this list are described in :ref:`amdhsa-"
"kernel-directives-table`. Directives may appear in any order, must be valid "
"for the target being assembled for, and cannot be repeated. Directives "
"support the range of values specified by the field they reference in :ref:"
"`amdgpu-amdhsa-kernel-descriptor`. If a directive is not specified, it is "
"assumed to have its default value, unless it is marked as \"Required\", in "
"which case it is an error to omit the directive. This list of directives is "
"terminated by an ``.end_amdhsa_kernel`` directive."
msgstr ""

#: ../../../AMDGPUUsage.rst:4946
msgid "AMDHSA Kernel Assembler Directives"
msgstr ""

#: ../../../AMDGPUUsage.rst:4950
msgid "Directive"
msgstr ""

#: ../../../AMDGPUUsage.rst:4950
msgid "Default"
msgstr ""

#: ../../../AMDGPUUsage.rst:4950
msgid "Supported On"
msgstr ""

#: ../../../AMDGPUUsage.rst:4952
msgid "``.amdhsa_group_segment_fixed_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4952
msgid ""
"Controls GROUP_SEGMENT_FIXED_SIZE in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4954
msgid "``.amdhsa_private_segment_fixed_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4954
msgid ""
"Controls PRIVATE_SEGMENT_FIXED_SIZE in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4956
msgid "``.amdhsa_user_sgpr_private_segment_buffer``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4956
msgid ""
"Controls ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4958
msgid "``.amdhsa_user_sgpr_dispatch_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4958
msgid ""
"Controls ENABLE_SGPR_DISPATCH_PTR in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4960
msgid "``.amdhsa_user_sgpr_queue_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4960
msgid ""
"Controls ENABLE_SGPR_QUEUE_PTR in :ref:`amdgpu-amdhsa-kernel-descriptor-gfx6-"
"gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4962
msgid "``.amdhsa_user_sgpr_kernarg_segment_ptr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4962
msgid ""
"Controls ENABLE_SGPR_KERNARG_SEGMENT_PTR in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4964
msgid "``.amdhsa_user_sgpr_dispatch_id``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4964
msgid ""
"Controls ENABLE_SGPR_DISPATCH_ID in :ref:`amdgpu-amdhsa-kernel-descriptor-"
"gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4966
msgid "``.amdhsa_user_sgpr_flat_scratch_init``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4966
msgid ""
"Controls ENABLE_SGPR_FLAT_SCRATCH_INIT in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4968
msgid "``.amdhsa_user_sgpr_private_segment_size``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4968
msgid ""
"Controls ENABLE_SGPR_PRIVATE_SEGMENT_SIZE in :ref:`amdgpu-amdhsa-kernel-"
"descriptor-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4970
msgid "``.amdhsa_system_sgpr_private_segment_wavefront_offset``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4970
msgid ""
"Controls ENABLE_SGPR_PRIVATE_SEGMENT_WAVEFRONT_OFFSET in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4972
msgid "``.amdhsa_system_sgpr_workgroup_id_x``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4972
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_ID_X in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4974
msgid "``.amdhsa_system_sgpr_workgroup_id_y``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4974
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_ID_Y in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4976
msgid "``.amdhsa_system_sgpr_workgroup_id_z``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4976
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_ID_Z in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4978
msgid "``.amdhsa_system_sgpr_workgroup_info``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4978
msgid ""
"Controls ENABLE_SGPR_WORKGROUP_INFO in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4980
msgid "``.amdhsa_system_vgpr_workitem_id``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4980
msgid ""
"Controls ENABLE_VGPR_WORKITEM_ID in :ref:`amdgpu-amdhsa-compute_pgm_rsrc2-"
"gfx6-gfx9-table`. Possible values are defined in :ref:`amdgpu-amdhsa-system-"
"vgpr-work-item-id-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4984
msgid "``.amdhsa_next_free_vgpr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4984
msgid ""
"Maximum VGPR number explicitly referenced, plus one. Used to calculate "
"GRANULATED_WORKITEM_VGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4987
msgid "``.amdhsa_next_free_sgpr``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4987
msgid ""
"Maximum SGPR number explicitly referenced, plus one. Used to calculate "
"GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4990
msgid "``.amdhsa_reserve_vcc``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4990
msgid ""
"Whether the kernel may use the special VCC SGPR. Used to calculate "
"GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4993
msgid "``.amdhsa_reserve_flat_scratch``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4993
msgid "GFX7-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:4993
msgid ""
"Whether the kernel may use flat instructions to access scratch memory. Used "
"to calculate GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc1-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:4997
msgid "``.amdhsa_reserve_xnack_mask``"
msgstr ""

#: ../../../AMDGPUUsage.rst:4997
msgid "Target Feature Specific (+xnack)"
msgstr ""

#: ../../../AMDGPUUsage.rst:4997
msgid "GFX8-GFX9"
msgstr ""

#: ../../../AMDGPUUsage.rst:4997
msgid ""
"Whether the kernel may trigger XNACK replay. Used to calculate "
"GRANULATED_WAVEFRONT_SGPR_COUNT in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5001
msgid "``.amdhsa_float_round_mode_32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5001
msgid ""
"Controls FLOAT_ROUND_MODE_32 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx9-table`. Possible values are defined in :ref:`amdgpu-amdhsa-floating-"
"point-rounding-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5005
msgid "``.amdhsa_float_round_mode_16_64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5005
msgid ""
"Controls FLOAT_ROUND_MODE_16_64 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx9-table`. Possible values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-rounding-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5009
msgid "``.amdhsa_float_denorm_mode_32``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5009
msgid ""
"Controls FLOAT_DENORM_MODE_32 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx9-table`. Possible values are defined in :ref:`amdgpu-amdhsa-floating-"
"point-denorm-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5013
msgid "``.amdhsa_float_denorm_mode_16_64``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5013
msgid ""
"Controls FLOAT_DENORM_MODE_16_64 in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-"
"gfx6-gfx9-table`. Possible values are defined in :ref:`amdgpu-amdhsa-"
"floating-point-denorm-mode-enumeration-values-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5017
msgid "``.amdhsa_dx10_clamp``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5017
msgid ""
"Controls ENABLE_DX10_CLAMP in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-"
"gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5019
msgid "``.amdhsa_ieee_mode``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5019
msgid ""
"Controls ENABLE_IEEE_MODE in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx9-"
"table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5021
msgid "``.amdhsa_fp16_overflow``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5021
msgid ""
"Controls FP16_OVFL in :ref:`amdgpu-amdhsa-compute_pgm_rsrc1-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5023
msgid "``.amdhsa_exception_fp_ieee_invalid_op``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5023
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_INVALID_OPERATION in :ref:`amdgpu-"
"amdhsa-compute_pgm_rsrc2-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5025
msgid "``.amdhsa_exception_fp_denorm_src``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5025
msgid ""
"Controls ENABLE_EXCEPTION_FP_DENORMAL_SOURCE in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5027
msgid "``.amdhsa_exception_fp_ieee_div_zero``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5027
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_DIVISION_BY_ZERO in :ref:`amdgpu-"
"amdhsa-compute_pgm_rsrc2-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5029
msgid "``.amdhsa_exception_fp_ieee_overflow``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5029
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_OVERFLOW in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5031
msgid "``.amdhsa_exception_fp_ieee_underflow``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5031
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_UNDERFLOW in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5033
msgid "``.amdhsa_exception_fp_ieee_inexact``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5033
msgid ""
"Controls ENABLE_EXCEPTION_IEEE_754_FP_INEXACT in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5035
msgid "``.amdhsa_exception_int_div_zero``"
msgstr ""

#: ../../../AMDGPUUsage.rst:5035
msgid ""
"Controls ENABLE_EXCEPTION_INT_DIVIDE_BY_ZERO in :ref:`amdgpu-amdhsa-"
"compute_pgm_rsrc2-gfx6-gfx9-table`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5040
msgid ".amdgpu_metadata"
msgstr ""

#: ../../../AMDGPUUsage.rst:5042
msgid ""
"Optional directive which declares the contents of the ``NT_AMDGPU_METADATA`` "
"note record (see :ref:`amdgpu-elf-note-records-table-v3`)."
msgstr ""

#: ../../../AMDGPUUsage.rst:5045
msgid ""
"The contents must be in the [YAML]_ markup format, with the same structure "
"and semantics described in :ref:`amdgpu-amdhsa-code-object-metadata-v3`."
msgstr ""

#: ../../../AMDGPUUsage.rst:5048
msgid "This directive is terminated by an ``.end_amdgpu_metadata`` directive."
msgstr ""

#: ../../../AMDGPUUsage.rst:5051
msgid "Example HSA Source Code (-mattr=+code-object-v3)"
msgstr ""

#: ../../../AMDGPUUsage.rst:5053
msgid ""
"Here is an example of a minimal assembly source file, defining one HSA "
"kernel:"
msgstr ""

#: ../../../AMDGPUUsage.rst:5102
msgid "Additional Documentation"
msgstr ""

#: ../../../AMDGPUUsage.rst:5104
msgid ""
"`AMD R6xx shader ISA <http://developer.amd.com/wordpress/media/2012/10/"
"R600_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5105
msgid ""
"`AMD R7xx shader ISA <http://developer.amd.com/wordpress/media/2012/10/R700-"
"Family_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5106
msgid ""
"`AMD Evergreen shader ISA <http://developer.amd.com/wordpress/media/2012/10/"
"AMD_Evergreen-Family_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5107
msgid ""
"`AMD Cayman/Trinity shader ISA <http://developer.amd.com/wordpress/"
"media/2012/10/AMD_HD_6900_Series_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5108
msgid ""
"`AMD Southern Islands Series ISA <http://developer.amd.com/wordpress/"
"media/2012/12/AMD_Southern_Islands_Instruction_Set_Architecture.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5109
msgid ""
"`AMD Sea Islands Series ISA <http://developer.amd.com/wordpress/"
"media/2013/07/AMD_Sea_Islands_Instruction_Set_Architecture.pdf>`_"
msgstr ""

#: ../../../AMDGPUUsage.rst:5110
msgid ""
"`AMD GCN3 Instruction Set Architecture <http://amd-dev.wpengine.netdna-cdn."
"com/wordpress/media/2013/12/AMD_GCN3_Instruction_Set_Architecture_rev1.1."
"pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5111
msgid ""
"`AMD \"Vega\" Instruction Set Architecture <http://developer.amd.com/"
"wordpress/media/2013/12/Vega_Shader_ISA_28July2017.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5112
msgid ""
"`ROCm: Open Platform for Development, Discovery and Education Around GPU "
"Computing <http://gpuopen.com/compute-product/rocm/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5113
msgid "`ROCm github <http://github.com/RadeonOpenCompute>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5114
msgid ""
"`Heterogeneous System Architecture (HSA) Foundation <http://www."
"hsafoundation.com/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5115
msgid ""
"`Executable and Linkable Format (ELF) <http://www.sco.com/developers/gabi/"
">`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5116
msgid "`DWARF Debugging Information Format <http://dwarfstd.org/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5117
msgid ""
"`YAML Ain't Markup Language (YAML™) Version 1.2 <http://www.yaml.org/"
"spec/1.2/spec.html>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5118
msgid "`Message Pack <http://www.msgpack.org/>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5119
msgid ""
"`The OpenCL Specification Version 2.0 <http://www.khronos.org/registry/cl/"
"specs/opencl-2.0.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5120
msgid ""
"`Heterogeneous-race-free Memory Models <http://benedictgaster.org/wp-content/"
"uploads/2014/01/asplos269-FINAL.pdf>`__"
msgstr ""

#: ../../../AMDGPUUsage.rst:5121
msgid ""
"`Attributes in Clang <http://clang.llvm.org/docs/AttributeReference.html>`__"
msgstr ""
