# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../RISCVUsage.rst:3
msgid "User Guide for RISC-V Target"
msgstr ""

#: ../../../RISCVUsage.rst:9
msgid "Introduction"
msgstr ""

#: ../../../RISCVUsage.rst:11
msgid ""
"The RISC-V target provides code generation for processors implementing "
"supported variations of the RISC-V specification.  It lives in the ``llvm/"
"lib/Target/RISCV`` directory."
msgstr ""

#: ../../../RISCVUsage.rst:16
msgid "Base ISAs"
msgstr ""

#: ../../../RISCVUsage.rst:18
msgid ""
"The specification defines four base instruction sets: RV32I, RV32E, RV64I, "
"and RV128I. Currently, LLVM fully supports RV32I, and RV64I.  RV32E is "
"supported by the assembly-based tools only.  RV128I is not supported."
msgstr ""

#: ../../../RISCVUsage.rst:22
msgid "To specify the target triple:"
msgstr ""

#: ../../../RISCVUsage.rst:24
msgid "RISC-V Architectures"
msgstr ""

#: ../../../RISCVUsage.rst:27
msgid "Architecture"
msgstr ""

#: ../../../RISCVUsage.rst:27
msgid "Description"
msgstr ""

#: ../../../RISCVUsage.rst:29
msgid "``riscv32``"
msgstr ""

#: ../../../RISCVUsage.rst:29
msgid "RISC-V with XLEN=32 (i.e. RV32I or RV32E)"
msgstr ""

#: ../../../RISCVUsage.rst:30
msgid "``riscv64``"
msgstr ""

#: ../../../RISCVUsage.rst:30
msgid "RISC-V with XLEN=64 (i.e. RV64I)"
msgstr ""

#: ../../../RISCVUsage.rst:33
msgid ""
"To select an E variant ISA (e.g. RV32E instead of RV32I), use the base "
"architecture string (e.g. ``riscv32``) with the extension ``e``."
msgstr ""

#: ../../../RISCVUsage.rst:39
msgid "Extensions"
msgstr ""

#: ../../../RISCVUsage.rst:41
msgid ""
"The following table provides a status summary for extensions which have been "
"ratified and thus have finalized specifications.  When relevant, detailed "
"notes on support follow."
msgstr ""

#: ../../../RISCVUsage.rst:45
msgid "Ratified Extensions by Status"
msgstr ""

#: ../../../RISCVUsage.rst:48
msgid "Extension"
msgstr ""

#: ../../../RISCVUsage.rst:48
msgid "Status"
msgstr ""

#: ../../../RISCVUsage.rst:50
msgid "``A``"
msgstr ""

#: ../../../RISCVUsage.rst:50 ../../../RISCVUsage.rst:51
#: ../../../RISCVUsage.rst:52 ../../../RISCVUsage.rst:53
#: ../../../RISCVUsage.rst:55 ../../../RISCVUsage.rst:58
#: ../../../RISCVUsage.rst:59 ../../../RISCVUsage.rst:60
#: ../../../RISCVUsage.rst:61 ../../../RISCVUsage.rst:62
#: ../../../RISCVUsage.rst:64 ../../../RISCVUsage.rst:66
#: ../../../RISCVUsage.rst:68 ../../../RISCVUsage.rst:69
#: ../../../RISCVUsage.rst:77 ../../../RISCVUsage.rst:83
#: ../../../RISCVUsage.rst:84 ../../../RISCVUsage.rst:85
#: ../../../RISCVUsage.rst:86 ../../../RISCVUsage.rst:87
#: ../../../RISCVUsage.rst:90 ../../../RISCVUsage.rst:91
#: ../../../RISCVUsage.rst:92 ../../../RISCVUsage.rst:94
#: ../../../RISCVUsage.rst:95 ../../../RISCVUsage.rst:96
#: ../../../RISCVUsage.rst:97 ../../../RISCVUsage.rst:98
#: ../../../RISCVUsage.rst:99 ../../../RISCVUsage.rst:100
#: ../../../RISCVUsage.rst:101 ../../../RISCVUsage.rst:102
#: ../../../RISCVUsage.rst:103 ../../../RISCVUsage.rst:104
#: ../../../RISCVUsage.rst:111
msgid "Supported"
msgstr ""

#: ../../../RISCVUsage.rst:51
msgid "``C``"
msgstr ""

#: ../../../RISCVUsage.rst:52
msgid "``D``"
msgstr ""

#: ../../../RISCVUsage.rst:53
msgid "``F``"
msgstr ""

#: ../../../RISCVUsage.rst:54
msgid "``H``"
msgstr ""

#: ../../../RISCVUsage.rst:54 ../../../RISCVUsage.rst:56
#: ../../../RISCVUsage.rst:57 ../../../RISCVUsage.rst:67
#: ../../../RISCVUsage.rst:70 ../../../RISCVUsage.rst:71
#: ../../../RISCVUsage.rst:72 ../../../RISCVUsage.rst:73
#: ../../../RISCVUsage.rst:74 ../../../RISCVUsage.rst:75
#: ../../../RISCVUsage.rst:76 ../../../RISCVUsage.rst:108
msgid "Assembly Support"
msgstr ""

#: ../../../RISCVUsage.rst:55
msgid "``M``"
msgstr ""

#: ../../../RISCVUsage.rst:56
msgid "``Svinval``"
msgstr ""

#: ../../../RISCVUsage.rst:57
msgid "``Svnapot``"
msgstr ""

#: ../../../RISCVUsage.rst:58
msgid "``Svpbmt``"
msgstr ""

#: ../../../RISCVUsage.rst:59
msgid "``V``"
msgstr ""

#: ../../../RISCVUsage.rst:60
msgid "``Zba``"
msgstr ""

#: ../../../RISCVUsage.rst:61
msgid "``Zbb``"
msgstr ""

#: ../../../RISCVUsage.rst:62
msgid "``Zbc``"
msgstr ""

#: ../../../RISCVUsage.rst:63
msgid "``Zbkb``"
msgstr ""

#: ../../../RISCVUsage.rst:63 ../../../RISCVUsage.rst:65
msgid "Supported (`See note <#riscv-scalar-crypto-note1>`__)"
msgstr ""

#: ../../../RISCVUsage.rst:64
msgid "``Zbkc``"
msgstr ""

#: ../../../RISCVUsage.rst:65
msgid "``Zbkx``"
msgstr ""

#: ../../../RISCVUsage.rst:66
msgid "``Zbs``"
msgstr ""

#: ../../../RISCVUsage.rst:67
msgid "``Zdinx``"
msgstr ""

#: ../../../RISCVUsage.rst:68
msgid "``Zfh``"
msgstr ""

#: ../../../RISCVUsage.rst:69
msgid "``Zfhmin``"
msgstr ""

#: ../../../RISCVUsage.rst:70
msgid "``Zfinx``"
msgstr ""

#: ../../../RISCVUsage.rst:71
msgid "``Zhinx``"
msgstr ""

#: ../../../RISCVUsage.rst:72
msgid "``Zhinxmin``"
msgstr ""

#: ../../../RISCVUsage.rst:73
msgid "``Zicbom``"
msgstr ""

#: ../../../RISCVUsage.rst:74
msgid "``Zicbop``"
msgstr ""

#: ../../../RISCVUsage.rst:75
msgid "``Zicboz``"
msgstr ""

#: ../../../RISCVUsage.rst:76
msgid "``Zihintpause``"
msgstr ""

#: ../../../RISCVUsage.rst:77
msgid "``Zkn``"
msgstr ""

#: ../../../RISCVUsage.rst:78
msgid "``Zknd``"
msgstr ""

#: ../../../RISCVUsage.rst:78 ../../../RISCVUsage.rst:79
#: ../../../RISCVUsage.rst:80 ../../../RISCVUsage.rst:81
#: ../../../RISCVUsage.rst:82
msgid "Supported (`See note <#riscv-scalar-crypto-note2>`__)"
msgstr ""

#: ../../../RISCVUsage.rst:79
msgid "``Zkne``"
msgstr ""

#: ../../../RISCVUsage.rst:80
msgid "``Zknh``"
msgstr ""

#: ../../../RISCVUsage.rst:81
msgid "``Zksed``"
msgstr ""

#: ../../../RISCVUsage.rst:82
msgid "``Zksh``"
msgstr ""

#: ../../../RISCVUsage.rst:83
msgid "``Zk``"
msgstr ""

#: ../../../RISCVUsage.rst:84
msgid "``Zkr``"
msgstr ""

#: ../../../RISCVUsage.rst:85
msgid "``Zks``"
msgstr ""

#: ../../../RISCVUsage.rst:86
msgid "``Zkt``"
msgstr ""

#: ../../../RISCVUsage.rst:87
msgid "``Zmmul``"
msgstr ""

#: ../../../RISCVUsage.rst:88
msgid "``Zve32x``"
msgstr ""

#: ../../../RISCVUsage.rst:88 ../../../RISCVUsage.rst:89
#: ../../../RISCVUsage.rst:93
msgid "(`Partially <#riscv-vlen-32-note>`__) Supported"
msgstr ""

#: ../../../RISCVUsage.rst:89
msgid "``Zve32f``"
msgstr ""

#: ../../../RISCVUsage.rst:90
msgid "``Zve64x``"
msgstr ""

#: ../../../RISCVUsage.rst:91
msgid "``Zve64f``"
msgstr ""

#: ../../../RISCVUsage.rst:92
msgid "``Zve64d``"
msgstr ""

#: ../../../RISCVUsage.rst:93
msgid "``Zvl32b``"
msgstr ""

#: ../../../RISCVUsage.rst:94
msgid "``Zvl64b``"
msgstr ""

#: ../../../RISCVUsage.rst:95
msgid "``Zvl128b``"
msgstr ""

#: ../../../RISCVUsage.rst:96
msgid "``Zvl256b``"
msgstr ""

#: ../../../RISCVUsage.rst:97
msgid "``Zvl512b``"
msgstr ""

#: ../../../RISCVUsage.rst:98
msgid "``Zvl1024b``"
msgstr ""

#: ../../../RISCVUsage.rst:99
msgid "``Zvl2048b``"
msgstr ""

#: ../../../RISCVUsage.rst:100
msgid "``Zvl4096b``"
msgstr ""

#: ../../../RISCVUsage.rst:101
msgid "``Zvl8192b``"
msgstr ""

#: ../../../RISCVUsage.rst:102
msgid "``Zvl16384b``"
msgstr ""

#: ../../../RISCVUsage.rst:103
msgid "``Zvl32768b``"
msgstr ""

#: ../../../RISCVUsage.rst:104
msgid "``Zvl65536b``"
msgstr ""

#: ../../../RISCVUsage.rst:108
msgid ""
"LLVM supports the associated instructions in assembly.  All assembly related "
"tools (e.g. assembler, disassembler, llvm-objdump, etc..) are supported.  "
"Compiler and linker will accept extension names, and linked binaries will "
"contain appropriate ELF flags and attributes to reflect use of named "
"extension."
msgstr ""

#: ../../../RISCVUsage.rst:111
msgid ""
"Fully supported by the compiler.  This includes everything in Assembly "
"Support, along with - if relevant - C language intrinsics for the "
"instructions and pattern matching by the compiler to recognize idiomatic "
"patterns which can be lowered to the associated instructions."
msgstr ""

#: ../../../RISCVUsage.rst:116
msgid "``Zbkb``, ``Zbkx``"
msgstr ""

#: ../../../RISCVUsage.rst:116
msgid "Pattern matching support for these instructions is incomplete."
msgstr ""

#: ../../../RISCVUsage.rst:121
msgid "``Zknd``, ``Zkne``, ``Zknh``, ``Zksed``, ``Zksh``"
msgstr ""

#: ../../../RISCVUsage.rst:121
msgid ""
"No pattern matching exists.  As a result, these instructions can only be "
"used from assembler or via intrinsic calls."
msgstr ""

#: ../../../RISCVUsage.rst:126
msgid "``Zve32x``, ``Zve32f``, ``Zvl32b``"
msgstr ""

#: ../../../RISCVUsage.rst:126
msgid ""
"LLVM currently assumes a minimum VLEN (vector register width) of 64 bits "
"during compilation, and as a result ``Zve32x`` and ``Zve32f`` are supported "
"only for VLEN>=64.  Assembly support doesn't have this restriction."
msgstr ""

#: ../../../RISCVUsage.rst:129
msgid "Experimental Extensions"
msgstr ""

#: ../../../RISCVUsage.rst:131
msgid ""
"LLVM supports (to various degrees) a number of experimental extensions.  All "
"experimental extensions have ``experimental-`` as a prefix.  There is "
"explicitly no compatibility promised between versions of the toolchain, and "
"regular users are strongly advised *not* to make use of experimental "
"extensions before they reach ratification."
msgstr ""

#: ../../../RISCVUsage.rst:133
msgid ""
"The primary goal of experimental support is to assist in the process of "
"ratification by providing an existence proof of an implementation, and "
"simplifying efforts to validate the value of a proposed extension against "
"large code bases.  Experimental extensions are expected to either transition "
"to ratified status, or be eventually removed.  The decision on whether to "
"accept an experimental extension is currently done on an entirely case by "
"case basis; if you want to propose one, attending the bi-weekly RISC-V sync-"
"up call is strongly advised."
msgstr ""

#: ../../../RISCVUsage.rst:136
msgid "``experimental-zawrs``"
msgstr ""

#: ../../../RISCVUsage.rst:136
msgid ""
"LLVM implements the `1.0-rc3 draft specification <https://github.com/riscv/"
"riscv-zawrs/releases/download/V1.0-rc3/Zawrs.pdf>`_.  Note that have been "
"backwards incompatible changes made between release candidates for the 1.0 "
"draft."
msgstr ""

#: ../../../RISCVUsage.rst:139
msgid "``experimental-zca``"
msgstr ""

#: ../../../RISCVUsage.rst:139
msgid ""
"LLVM implements the `0.70 draft specification <https://github.com/riscv/"
"riscv-code-size-reduction/releases/tag/V0.70.1-TOOLCHAIN-DEV>`_."
msgstr ""

#: ../../../RISCVUsage.rst:142
msgid "``experimental-zihintntl``"
msgstr ""

#: ../../../RISCVUsage.rst:142
msgid ""
"LLVM implements the `0.2 draft specification <https://github.com/riscv/riscv-"
"isa-manual/releases/tag/draft-20220831-bf5a151>`_."
msgstr ""

#: ../../../RISCVUsage.rst:145
msgid "``experimental-ztso``"
msgstr ""

#: ../../../RISCVUsage.rst:145
msgid ""
"LLVM implements the `v0.1 proposed specification <https://github.com/riscv/"
"riscv-isa-manual/releases/download/draft-20220723-10eea63/riscv-spec.pdf>`_ "
"(see Chapter 25).  Using will set appropriate ELF flags and attributes, but "
"does not yet change code generation."
msgstr ""

#: ../../../RISCVUsage.rst:148
msgid "``experimental-zvfh``"
msgstr ""

#: ../../../RISCVUsage.rst:148
msgid ""
"LLVM implements `this draft text <https://github.com/riscv/riscv-v-spec/"
"pull/780>`_."
msgstr ""

#: ../../../RISCVUsage.rst:150
msgid ""
"To use an experimental extension from `clang`, you must add `-menable-"
"experimental-extensions` to the command line, and specify the exact version "
"of the experimental extension you are using.  To use an experimental "
"extension with LLVM's internal developer tools (e.g. `llc`, `llvm-objdump`, "
"`llvm-mc`), you must prefix the extension name with `experimental-`.  Note "
"that you don't need to specify the version with internal tools, and "
"shouldn't include the `experimental-` prefix with `clang`."
msgstr ""

#: ../../../RISCVUsage.rst:153
msgid "Vendor Extensions"
msgstr ""

#: ../../../RISCVUsage.rst:155
msgid ""
"Vendor extensions are extensions which are not standardized by RISC-V "
"International, and are instead defined by a hardware vendor.  The term "
"vendor extension roughly parallels the definition of a `non-standard` "
"extension from Section 1.3 of the Volume I: RISC-V Unprivileged ISA "
"specification.  In particular, we expect to eventually accept both `custom` "
"extensions and `non-conforming` extensions."
msgstr ""

#: ../../../RISCVUsage.rst:157
msgid ""
"Inclusion of a vendor extension will be considered on a case by case basis.  "
"All proposals should be brought to the bi-weekly RISCV sync calls for "
"discussion.  For a general idea of the factors likely to be considered, "
"please see the `Clang documentation <https://clang.llvm.org/get_involved."
"html>`_."
msgstr ""

#: ../../../RISCVUsage.rst:159
msgid ""
"It is our intention to follow the naming conventions described in `riscv-non-"
"isa/riscv-toolchain-conventions <https://github.com/riscv-non-isa/riscv-"
"toolchain-conventions#conventions-for-vendor-extensions>`_.  Exceptions to "
"this naming will need to be strongly motivated."
msgstr ""

#: ../../../RISCVUsage.rst:161
msgid "The current vendor extensions supported are:"
msgstr ""

#: ../../../RISCVUsage.rst:164
msgid "``XVentanaCondOps``"
msgstr ""

#: ../../../RISCVUsage.rst:164
msgid ""
"LLVM implements `version 1.0.0 of the VTx-family custom instructions "
"specification <https://github.com/ventanamicro/ventana-custom-extensions/"
"releases/download/v1.0.0/ventana-custom-extensions-v1.0.0.pdf>`_ by Ventana "
"Micro Systems.  All instructions are prefixed with `vt.` as described in the "
"specification, and the riscv-toolchain-convention document linked above.  "
"These instructions are only available for riscv64 at this time."
msgstr ""

#: ../../../RISCVUsage.rst:168
msgid "``XTHeadVdot``"
msgstr ""

#: ../../../RISCVUsage.rst:167
msgid ""
"LLVM implements `version 1.0.0 of the THeadV-family custom instructions "
"specification <https://github.com/T-head-Semi/thead-extension-spec/releases/"
"download/2.2.0/xthead-2022-12-04-2.2.0.pdf>`_ by T-HEAD of Alibaba.  All "
"instructions are prefixed with `th.` as described in the specification, and "
"the riscv-toolchain-convention document linked above."
msgstr ""

#: ../../../RISCVUsage.rst:171
msgid "Specification Documents"
msgstr ""

#: ../../../RISCVUsage.rst:172
msgid ""
"For ratified specifications, please refer to the `official RISC-V "
"International page <https://riscv.org/technical/specifications/>`_.  Make "
"sure to check the `wiki for not yet integrated extensions <https://wiki."
"riscv.org/display/HOME/Recently+Ratified+Extensions>`_."
msgstr ""
