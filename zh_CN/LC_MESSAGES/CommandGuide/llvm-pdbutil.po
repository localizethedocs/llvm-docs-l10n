# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../CommandGuide/llvm-pdbutil.rst:2
msgid "llvm-pdbutil - PDB File forensics and diagnostics"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:10
msgid "Synopsis"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:12
msgid ":program:`llvm-pdbutil` [*subcommand*] [*options*]"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:15
msgid "Description"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:17
msgid ""
"Display types, symbols, CodeView records, and other information from a PDB "
"file, as well as manipulate and create PDB files.  :program:`llvm-pdbutil` "
"is normally used by FileCheck-based tests to test LLVM's PDB reading and "
"writing functionality, but can also be used for general PDB file "
"investigation and forensics, or as a replacement for cvdump."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:24
msgid "Subcommands"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:26
msgid ""
":program:`llvm-pdbutil` is separated into several subcommands each tailored "
"to a different purpose.  A brief summary of each command follows, with more "
"detail in the sections that follow."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:30
msgid ""
":ref:`pretty_subcommand` - Dump symbol and type information in a format that "
"tries to look as much like the original source code as possible."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:32
msgid ""
":ref:`dump_subcommand` - Dump low level types and structures from the PDB "
"file, including CodeView records, hash tables, PDB streams, etc."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:34
msgid ""
":ref:`bytes_subcommand` - Dump data from the PDB file's streams, records, "
"types, symbols, etc as raw bytes."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:36
msgid ""
":ref:`yaml2pdb_subcommand` - Given a yaml description of a PDB file, produce "
"a valid PDB file that matches that description."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:38
msgid ""
":ref:`pdb2yaml_subcommand` - For a given PDB file, produce a YAML "
"description of some or all of the file in a way that the PDB can be "
"reconstructed."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:41
msgid ""
":ref:`merge_subcommand` - Given two PDBs, produce a third PDB that is the "
"result of merging the two input PDBs."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:47
msgid "pretty"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:52
msgid ""
"The **pretty** subcommand is built on the Windows DIA SDK, and as such is "
"not supported on non-Windows platforms."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:55
msgid "USAGE: :program:`llvm-pdbutil` pretty [*options*] <input PDB file>"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:58
#: ../../../CommandGuide/llvm-pdbutil.rst:254
#: ../../../CommandGuide/llvm-pdbutil.rst:428
#: ../../../CommandGuide/llvm-pdbutil.rst:540
#: ../../../CommandGuide/llvm-pdbutil.rst:555
#: ../../../CommandGuide/llvm-pdbutil.rst:578
msgid "Summary"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:60
msgid ""
"The *pretty* subcommand displays a very high level representation of your "
"program's debug info.  Since it is built on the Windows DIA SDK which is the "
"standard API that Windows tools and debuggers query debug information, it "
"presents a more authoritative view of how a debugger is going to interpret "
"your debug information than a mode which displays low-level CodeView records."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:67
#: ../../../CommandGuide/llvm-pdbutil.rst:267
#: ../../../CommandGuide/llvm-pdbutil.rst:441
#: ../../../CommandGuide/llvm-pdbutil.rst:543
#: ../../../CommandGuide/llvm-pdbutil.rst:562
#: ../../../CommandGuide/llvm-pdbutil.rst:583
msgid "Options"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:70
msgid "Filtering and Sorting Options"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:73
msgid ""
"*exclude* filters take priority over *include* filters.  So if a filter "
"matches both an include and an exclude rule, then it is excluded."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:78
msgid ""
"When dumping compilands, compiland source-file contributions, or per-"
"compiland symbols, this option instructs **llvm-pdbutil** to omit any "
"compilands that match the specified regular expression."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:84
msgid ""
"When dumping global, public, or per-compiland symbols, this option instructs "
"**llvm-pdbutil** to omit any symbols that match the specified regular "
"expression."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:90
msgid ""
"When dumping types, this option instructs **llvm-pdbutil** to omit any types "
"that match the specified regular expression."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:95
msgid ""
"When dumping compilands, compiland source-file contributions, or per-"
"compiland symbols, limit the initial search to only those compilands that "
"match the specified regular expression."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:101
msgid ""
"When dumping global, public, or per-compiland symbols, limit the initial "
"search to only those symbols that match the specified regular expression."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:106
msgid ""
"When dumping types, limit the initial search to only those types that match "
"the specified regular expression."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:111
msgid ""
"Only display types that have at least the specified amount of alignment "
"padding, accounting for padding in base classes and aggregate field members."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:116
msgid ""
"Only display types that have at least the specified amount of alignment "
"padding, ignoring padding in base classes and aggregate field members."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:121
msgid ""
"Only display types T where sizeof(T) is greater than or equal to the "
"specified amount."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:126
msgid "Don't show compiler generated types and symbols"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:130
msgid ""
"When dumping an enum, don't show the full enum (e.g. the individual "
"enumerator values)."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:135
msgid "Don't show symbols from system libraries"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:138
msgid "Symbol Type Options"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:141
msgid "Implies all other options in this category."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:145
msgid "Displays class definitions in the specified format."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:155
msgid "Displays classes in the specified order."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:169
msgid ""
"When dumping class definitions, stop after recursing the specified number of "
"times.  The default is 0, which is no limit."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:174
msgid "Display classes"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:178
msgid "Display compilands (e.g. object files)"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:182
msgid "Display enums"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:186
msgid "Dump external (e.g. exported) symbols"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:190
msgid "Dump global symbols"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:194
msgid "Dump the mappings between source lines and code addresses."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:198
msgid "Display symbols (variables, functions, etc) for each compiland"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:202
msgid ""
"Type of symbols to dump when -globals, -externals, or -module-syms is "
"specified. (default all)"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:214
msgid ""
"For symbols dumped via the -module-syms, -globals, or -externals options, "
"sort the results in specified order."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:225
msgid "Display typedef types"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:229
msgid "Display all types (implies -classes, -enums, -typedefs)"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:232
msgid "Other Options"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:236
msgid ""
"Force color output on or off.  By default, color if used if outputting to a "
"terminal."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:241
msgid ""
"When displaying relative virtual addresses, assume the process is loaded at "
"the given address and display what would be the absolute address."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:247
msgid "dump"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:249
msgid "USAGE: :program:`llvm-pdbutil` dump [*options*] <input PDB file>"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:256
msgid ""
"The **dump** subcommand displays low level information about the structure "
"of a PDB file.  It is used heavily by LLVM's testing infrastructure, but can "
"also be used for PDB forensics.  It serves a role similar to that of "
"Microsoft's `cvdump` tool."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:262
msgid ""
"The **dump** subcommand exposes internal details of the file format.  As "
"such, the reader should be familiar with :doc:`/PDB/index` before using this "
"command."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:270
msgid "MSF Container Options"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:274
msgid "dump a summary of all of the streams in the PDB file."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:278
msgid ""
"In conjunction with :option:`-streams`, add information to the output about "
"what blocks the specified stream occupies."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:283
msgid "Dump MSF and PDB header information."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:286
msgid "Module & File Options"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:290
msgid ""
"For all options that dump information from each module/compiland, limit to "
"the specified module."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:295
msgid "Dump the source files that contribute to each displayed module."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:299
msgid ""
"Dump inlinee line information (DEBUG_S_INLINEELINES CodeView subsection)"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:303
msgid "Dump line information (DEBUG_S_LINES CodeView subsection)"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:307
msgid "Dump compiland information"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:311
msgid ""
"Dump cross module exports (DEBUG_S_CROSSSCOPEEXPORTS CodeView subsection)"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:315
msgid ""
"Dump cross module imports (DEBUG_S_CROSSSCOPEIMPORTS CodeView subsection)"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:318
msgid "Symbol Options"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:322
msgid "dump global symbol records"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:326
msgid ""
"dump additional information about the globals, such as hash buckets and hash "
"values."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:331
msgid "dump public symbol records"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:335
msgid ""
"dump additional information about the publics, such as hash buckets and hash "
"values."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:340
msgid "dump symbols (functions, variables, etc) for each module dumped."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:344
msgid ""
"For each symbol record dumped as a result of the :option:`-symbols` option, "
"display the full bytes of the record in binary as well."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:348
#: ../../../CommandGuide/llvm-pdbutil.rst:520
msgid "Type Record Options"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:352
msgid "Dump CodeView type records from TPI stream"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:356
msgid ""
"Dump additional information from the TPI stream, such as hashes and the type "
"index offsets array."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:361
msgid ""
"For each type record dumped, display the full bytes of the record in binary "
"as well."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:366
msgid "Only dump types with the specified type index."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:370
msgid "Dump CodeView type records from IPI stream."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:374
msgid ""
"Dump additional information from the IPI stream, such as hashes and the type "
"index offsets array."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:379
msgid ""
"For each ID record dumped, display the full bytes of the record in binary as "
"well."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:384
msgid "only dump ID records with the specified hexadecimal type index."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:388
msgid ""
"When used in conjunction with :option:`-type-index` or :option:`-id-index`, "
"dumps the entire dependency graph for the specified index instead of just "
"the single record with the specified index.  For example, if type index "
"0x4000 is a function whose return type has index 0x3000, and you specify `-"
"dependents=0x4000`, then this would dump both records (as well as any other "
"dependents in the tree)."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:396
msgid "Miscellaneous Options"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:400
msgid "Implies most other options."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:404
msgid "Dump section contributions."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:408
msgid "Dump image section headers."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:412
msgid "Dump section map."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:416
msgid "Dump PDB string table."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:421
msgid "bytes"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:423
msgid "USAGE: :program:`llvm-pdbutil` bytes [*options*] <input PDB file>"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:430
msgid ""
"Like the **dump** subcommand, the **bytes** subcommand displays low level "
"information about the structure of a PDB file, but it is used for even "
"deeper forensics.  The **bytes** subcommand finds various structures in a "
"PDB file based on the command line options specified, and dumps them in "
"hex.  Someone working on support for emitting PDBs would use this heavily, "
"for example, to compare one PDB against another PDB to ensure byte-for-byte "
"compatibility.  It is not enough to simply compare the bytes of an entire "
"file, or an entire stream because it's perfectly fine for the same structure "
"to exist at different locations in two different PDBs, and \"finding\" the "
"structure is half the battle."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:444
msgid "MSF File Options"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:448
msgid "Dump binary data from specified range of MSF file blocks."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:452
msgid "Dump binary data from specified range of bytes in the file."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:456
msgid "Dump the MSF free page map."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:460
msgid ""
"Dump binary data from the specified streams.  Format is SN[:Start][@Size]. "
"For example, `-stream-data=7:3@12` dumps 12 bytes from stream 7, starting at "
"offset 3 in the stream."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:465
msgid "PDB Stream Options"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:469
msgid "Dump bytes of PDB Name Map"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:472
msgid "DBI Stream Options"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:476
msgid "Dump the edit and continue map substream of the DBI stream."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:480
msgid "Dump the file info substream of the DBI stream."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:484
msgid "Dump the modi substream of the DBI stream."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:488
msgid "Dump section contributions substream of the DBI stream."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:492
msgid "Dump the section map from the DBI stream."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:496
msgid "Dump the type server map from the DBI stream."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:499
msgid "Module Options"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:503
msgid ""
"Limit all options in this category to the specified module index.  By "
"default, options in this category will dump bytes from all modules."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:508
msgid "Dump the bytes of each module's C13 debug subsection."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:512
msgid ""
"When specified with :option:`-chunks`, split the C13 debug subsection into a "
"separate chunk for each subsection type, and dump them separately."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:517
msgid "Dump the symbol record substream from each module."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:524
msgid "Dump the record from the IPI stream with the given type index."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:528
msgid "Dump the record from the TPI stream with the given type index."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:533
msgid "pdb2yaml"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:535
msgid "USAGE: :program:`llvm-pdbutil` pdb2yaml [*options*] <input PDB file>"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:548
msgid "yaml2pdb"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:550
msgid "USAGE: :program:`llvm-pdbutil` yaml2pdb [*options*] <input YAML file>"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:557
msgid ""
"Generate a PDB file from a YAML description.  The YAML syntax is not "
"described here.  Instead, use :ref:`llvm-pdbutil pdb2yaml "
"<pdb2yaml_subcommand>` and examine the output for an example starting point."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:566
#: ../../../CommandGuide/llvm-pdbutil.rst:587
msgid "Write the resulting PDB to the specified file."
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:571
msgid "merge"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:573
msgid ""
"USAGE: :program:`llvm-pdbutil` merge [*options*] <input PDB file 1> <input "
"PDB file 2>"
msgstr ""

#: ../../../CommandGuide/llvm-pdbutil.rst:580
msgid "Merge two PDB files into a single file."
msgstr ""
