# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../CommandGuide/llvm-objdump.rst:2
msgid "llvm-objdump - LLVM's object file dumper"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:5
msgid "SYNOPSIS"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:7
msgid ":program:`llvm-objdump` [*commands*] [*options*] [*filenames...*]"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:10
msgid "DESCRIPTION"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:11
msgid ""
"The :program:`llvm-objdump` utility prints the contents of object files and "
"final linked images named on the command line. If no file name is "
"specified, :program:`llvm-objdump` will attempt to read from *a.out*. If *-* "
"is used as a file name, :program:`llvm-objdump` will process a file on its "
"standard input stream."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:18
msgid "COMMANDS"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:19
msgid ""
"At least one of the following commands are required, and some commands can "
"be combined with other commands:"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:24
msgid ""
"Display assembler mnemonics for the machine instructions. Disassembles all "
"text sections found in the input file(s)."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:29
msgid ""
"Display assembler mnemonics for the machine instructions. Disassembles all "
"sections found in the input file(s)."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:34
msgid "Display usage information and exit. Does not stack with other commands."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:38
msgid "Display the relocation entries in the file."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:42
msgid "Display the content of each section."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:46
msgid "Display summaries of the headers for each section."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:50
msgid "Display the symbol table."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:54
msgid ""
"Display the version of this program. Does not stack with other commands."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:57
msgid "OPTIONS"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:58
msgid ":program:`llvm-objdump` supports the following options:"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:62
msgid ""
"Specify the architecture to disassemble. see ``-version`` for available "
"architectures."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:67
msgid ""
"Create a CFG for every symbol in the object file and write it to a graphviz "
"file (Mach-O-only)."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:72
msgid "Use .dSYM file for debug info."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:76
msgid "Print line information from debug info if available."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:80
msgid ""
"Use Mach-O specific object file parser. Commands and other options may "
"behave differently when used with ``-macho``."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:85
msgid "Target specific attributes."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:89
msgid "Disable relaxation of arithmetic instruction for X86."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:93
msgid "Enable statistics output from program."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:97
msgid ""
"Target triple to disassemble for, see ``-version`` for available targets."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:101
msgid ""
"When used with the ``-disassemble`` option, choose style of code to emit "
"from X86 backend. Supported values are:"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:106
msgid "AT&T-style assembly"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:110
msgid "Intel-style assembly"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:113
msgid "The default disassembly style is **att**."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:116
msgid "BUGS"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:118
msgid "To report bugs, please visit <http://llvm.org/bugs/>."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:121
msgid "SEE ALSO"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:123
msgid ":manpage:`llvm-nm(1)`"
msgstr ""
