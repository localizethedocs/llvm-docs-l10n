# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2025, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 21\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 18:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../CommandGuide/llvm-objdump.rst:2
msgid "llvm-objdump - LLVM's object file dumper"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:7
msgid "SYNOPSIS"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:9
msgid ":program:`llvm-objdump` [*commands*] [*options*] [*filenames...*]"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:12
msgid "DESCRIPTION"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:13
msgid ""
"The :program:`llvm-objdump` utility prints the contents of object files and "
"final linked images named on the command line. If no file name is "
"specified, :program:`llvm-objdump` will attempt to read from *a.out*. If *-* "
"is used as a file name, :program:`llvm-objdump` will process a file on its "
"standard input stream."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:20
msgid "COMMANDS"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:21
msgid ""
"At least one of the following commands are required, and some commands can "
"be combined with other commands:"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:26
msgid "Display the information contained within an archive's headers."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:30
msgid ""
"Disassemble all executable sections found in the input files. On some "
"architectures (AArch64, PowerPC, x86), all known instructions are "
"disassembled by default. On the others, :option:`--mcpu` or :option:`--"
"mattr` is needed to enable some instruction sets. Disabled instructions are "
"displayed as ``<unknown>``."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:38
msgid "Disassemble all sections found in the input files."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:42
msgid ""
"Disassemble only the specified symbols. Takes demangled symbol names when :"
"option:`--demangle` is specified, otherwise takes mangled symbol names. "
"Implies :option:`--disassemble`."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:48
msgid "Dump the specified DWARF debug sections. The supported values are:"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:50
msgid "`frames` - .debug_frame"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:54
msgid "Display the contents of the overall file header."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:58
msgid "Display the content of the fault map section."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:62
msgid "Display summaries of the headers for each section."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:66
msgid "Display usage information and exit. Does not stack with other commands."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:70
msgid "Display format-specific file headers."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:74
msgid "Display the relocation entries in the file."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:78
msgid "Display the dynamic relocation entries in the file."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:82
msgid "Dump the raw binary contents of the clang AST section."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:86
msgid "Display the contents of each section."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:90
msgid "Display the symbol table."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:94
msgid "Display the contents of the dynamic symbol table."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:98
msgid "Display the unwind info of the input(s)."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:100
msgid ""
"This operation is only currently supported for COFF and Mach-O object files."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:104
msgid ""
"Display the version of the :program:`llvm-objdump` executable. Does not "
"stack with other commands."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:109
msgid ""
"Display all available header information. Equivalent to specifying :option:"
"`--archive-headers`, :option:`--file-headers`, :option:`--private-headers`, :"
"option:`--reloc`, :option:`--section-headers`, and :option:`--syms`."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:115
msgid "OPTIONS"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:116
msgid ":program:`llvm-objdump` supports the following options:"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:120
msgid ""
"Increase the displayed address in disassembly or section header printing by "
"the specified offset."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:125
msgid ""
"Specify the target architecture when disassembling. Use :option:`--version` "
"for a list of available targets."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:130
msgid ""
"Look up the object using the given build ID, specified as a hexadecimal "
"string. The found object is handled as if it were an input filename."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:135
msgid "Demangle symbol names in the output."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:139
msgid ""
"Provide a path to a directory with a `.build-id` subdirectory to search for "
"debug information for stripped binaries. Multiple instances of this argument "
"are searched in the order given."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:145
msgid ""
"Whether or not to try debuginfod lookups for debug binaries. Unless "
"specified, debuginfod is only enabled if libcurl was compiled in "
"(``LLVM_ENABLE_CURL``) and at least one server URL was provided by the "
"environment variable ``DEBUGINFOD_URLS``."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:152
msgid ""
"Print the locations (in registers or memory) of source-level variables "
"alongside disassembly. ``format`` may be ``unicode`` or ``ascii``, "
"defaulting to ``unicode`` if omitted."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:158
msgid ""
"Distance to indent the source-level variable display, relative to the start "
"of the disassembly. Defaults to 52 characters."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:163
msgid ""
"Perform commands on the specified sections only. For Mach-O use `segment,"
"section` to specify the section name."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:168
msgid ""
"When disassembling, display source line numbers. Implies :option:`--"
"disassemble`."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:173
msgid "Pass target-specific disassembler options. Available options:"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:175
msgid ""
"``reg-names-std``: ARM only (default). Print in ARM 's instruction set "
"documentation, with r13/r14/r15 replaced by sp/lr/pc."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:176
msgid "``reg-names-raw``: ARM only. Use r followed by the register number."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:177
msgid ""
"``no-aliases``: AArch64 and RISC-V only. Print raw instruction mnemonic "
"instead of pseudo instruction mnemonic."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:178
msgid ""
"``numeric``: RISC-V only. Print raw register names instead of ABI mnemonic. "
"(e.g. print x1 instead of ra)"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:179
msgid "``att``: x86 only (default). Print in the AT&T syntax."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:180
msgid "``intel``: x86 only. Print in the intel syntax."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:185
msgid "Enable or disable disassembler color output."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:187
msgid "``off``: Disable disassembler color output."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:188
msgid "``on``: Enable disassembler color output."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:189
msgid ""
"``terminal``: Enable disassembler color output if the terminal supports it "
"(default)."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:193
msgid ""
"Target a specific CPU type for disassembly. Specify ``--mcpu=help`` to "
"display available CPUs."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:198
msgid ""
"Enable/disable target-specific attributes. Specify ``--mattr=help`` to "
"display the available attributes."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:203
msgid "Specify an argument to forward to LLVM's CommandLine library."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:207
msgid ""
"When disassembling, do not print leading addresses for instructions or "
"inline relocations."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:212
msgid "Do not use hex format for immediate values in disassembly output."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:216
msgid "When disassembling, do not print the raw bytes of each instruction."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:220
msgid ""
"Display the content of the LLVM offloading sections and HIP offload bundles."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:224
msgid ""
"When disassembling with the :option:`--source` option, prepend ``prefix`` to "
"absolute paths."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:229
msgid ""
"When disassembling with the :option:`--source` option, strip out ``level`` "
"initial directories from absolute paths. This option has no effect without :"
"option:`--prefix`."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:235
msgid ""
"Use hex format when printing immediate values in disassembly output "
"(default)."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:239
msgid ""
"When disassembling, display source interleaved with the disassembly. "
"Implies :option:`--disassemble`."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:244
msgid ""
"Show all symbols during disassembly, even if multiple symbols are defined at "
"the same location."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:249
msgid ""
"Display the LMA column when dumping ELF section headers. Defaults to off "
"unless any section has different VMA and LMAs."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:254
msgid "When disassembling, only disassemble from the specified address."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:256
msgid ""
"When printing relocations, only print the relocations patching offsets from "
"at least ``address``."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:258
msgid ""
"When printing symbols, only print symbols with a value of at least "
"``address``."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:262
msgid ""
"When disassembling, only disassemble up to, but not including the specified "
"address."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:264
msgid ""
"When printing relocations, only print the relocations patching offsets up to "
"``address``."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:266
msgid ""
"When printing symbols, only print symbols with a value up to ``address``."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:270
msgid ""
"When disassembling, symbolize a branch target operand to print a label "
"instead of a real address."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:272
msgid ""
"When printing a PC-relative global symbol reference, print it as an offset "
"from the leading symbol."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:274
msgid ""
"When a bb-address-map section is present (i.e., the object file is built "
"with ``-fbasic-block-address-map``), labels are retrieved from that section "
"instead. If a pgo-analysis-map is present alongside the bb-address-map, any "
"available analyses are printed after the relevant block label. By default, "
"any analysis with a special representation (i.e. BlockFrequency, "
"BranchProbability, etc) are printed as raw hex values."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:281
msgid "Only supported for AArch64, BPF, PowerPC, and X86."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:284
msgid "Example:"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:284
msgid ""
"A non-symbolized branch instruction with a local target and pc-relative "
"memory access like"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:291
msgid "might become"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:301
msgid ""
"When using :option:`--symbolize-operands` with bb-address-map and pgo-"
"analysis-map, print analyses using the same format as their analysis passes "
"would. An example of pretty format would be printing block frequencies "
"relative to the entry block, the same as BFI."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:306
msgid "Only works when :option:`--symbolize-operands` is enabled."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:310
msgid ""
"Target triple to disassemble for, see ``--version`` for available targets."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:314
msgid "Ignored for compatibility with GNU objdump."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:318
msgid ""
"Deprecated. When used with :option:`--disassemble`, choose style of code to "
"emit from X86 backend. Supported values are:"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:324
msgid "AT&T-style assembly"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:328
msgid "Intel-style assembly"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:331
msgid "The default disassembly style is **att**."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:335
msgid "Do not skip blocks of zeroes when disassembling."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:339
msgid "Read command-line options and commands from response file `<FILE>`."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:342
msgid "MACH-O ONLY OPTIONS AND COMMANDS"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:346
msgid ""
"Specify the architecture to disassemble. see ``--version`` for available "
"architectures."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:351
msgid ""
"Print the offset to each archive member for Mach-O archives (requires :"
"option:`--archive-headers`)."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:356
msgid "Display binding info"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:360
msgid "Display the data in code table."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:364
msgid "Disassemble just the specified symbol's instructions."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:368
msgid "Print chained fixup information."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:372
msgid ""
"Print bind and rebase information used by dyld to resolve external "
"references in a final linked binary."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:377
msgid "Display the shared libraries used for linked files."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:381
msgid "Use .dSYM file for debug info."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:385
msgid "Display the shared library's ID for dylib files."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:389
msgid "Display exported symbols."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:393
msgid ""
"Print the function starts table for Mach-O objects. Either ``addrs`` "
"(default) to print only the addresses of functions, ``names`` to print only "
"the names of the functions (when available), or ``both`` to print the names "
"beside the addresses."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:400
msgid "Print line information from debug info if available."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:404
msgid "Print the full leading address when disassembling."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:408
msgid "Display the indirect symbol table."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:412
msgid "Display the info plist section as strings."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:416
msgid "Display lazy binding info."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:420
msgid "Display the linker optimization hints."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:424
msgid ""
"Use Mach-O specific object file parser. Commands and other options may "
"behave differently when used with ``--macho``."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:429
msgid "Do not print any leading headers."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:433
msgid "Do not print symbolic operands when disassembling."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:437
msgid ""
"Display the information for Mach-O objects in non-verbose or numeric form."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:441
msgid "Display the Objective-C runtime meta data."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:445
msgid "Display only the first format specific file header."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:449
msgid "Display rebasing information."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:453
msgid "Display runtime search paths for the binary."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:457
msgid "Display universal headers."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:461
msgid "Display weak binding information."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:464
msgid "XCOFF ONLY OPTIONS AND COMMANDS"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:468
msgid "Add symbol description to disassembly output."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:472
msgid ""
"Decode traceback table in disassembly output. Implies :option:`--"
"disassemble`."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:475
msgid "BUGS"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:477
msgid ""
"To report bugs, please visit <https://github.com/llvm/llvm-project/labels/"
"tools:llvm-objdump/>."
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:480
msgid "SEE ALSO"
msgstr ""

#: ../../../CommandGuide/llvm-objdump.rst:482
msgid ""
":manpage:`llvm-nm(1)`, :manpage:`llvm-otool(1)`, :manpage:`llvm-"
"readelf(1)`, :manpage:`llvm-readobj(1)`"
msgstr ""
